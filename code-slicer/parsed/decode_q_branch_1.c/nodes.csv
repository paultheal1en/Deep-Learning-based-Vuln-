command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2014552	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_q_branch_1.c								
ANR	2014553	Function	decode_q_branch	1:0:0:2410							
ANR	2014554	FunctionDef	"decode_q_branch (SnowContext * s , int level , int x , int y)"		2014553	0					
ANR	2014555	CompoundStatement		1:68:68:2410	2014553	0					
ANR	2014556	IdentifierDeclStatement	const int w = s -> b_width << s -> block_max_depth ;	3:4:75:120	2014553	0	True				
ANR	2014557	IdentifierDecl	w = s -> b_width << s -> block_max_depth		2014553	0					
ANR	2014558	IdentifierDeclType	const int		2014553	0					
ANR	2014559	Identifier	w		2014553	1					
ANR	2014560	AssignmentExpression	w = s -> b_width << s -> block_max_depth		2014553	2		=			
ANR	2014561	Identifier	w		2014553	0					
ANR	2014562	ShiftExpression	s -> b_width << s -> block_max_depth		2014553	1		<<			
ANR	2014563	PtrMemberAccess	s -> b_width		2014553	0					
ANR	2014564	Identifier	s		2014553	0					
ANR	2014565	Identifier	b_width		2014553	1					
ANR	2014566	PtrMemberAccess	s -> block_max_depth		2014553	1					
ANR	2014567	Identifier	s		2014553	0					
ANR	2014568	Identifier	block_max_depth		2014553	1					
ANR	2014569	IdentifierDeclStatement	const int rem_depth = s -> block_max_depth - level ;	5:4:127:174	2014553	1	True				
ANR	2014570	IdentifierDecl	rem_depth = s -> block_max_depth - level		2014553	0					
ANR	2014571	IdentifierDeclType	const int		2014553	0					
ANR	2014572	Identifier	rem_depth		2014553	1					
ANR	2014573	AssignmentExpression	rem_depth = s -> block_max_depth - level		2014553	2		=			
ANR	2014574	Identifier	rem_depth		2014553	0					
ANR	2014575	AdditiveExpression	s -> block_max_depth - level		2014553	1		-			
ANR	2014576	PtrMemberAccess	s -> block_max_depth		2014553	0					
ANR	2014577	Identifier	s		2014553	0					
ANR	2014578	Identifier	block_max_depth		2014553	1					
ANR	2014579	Identifier	level		2014553	1					
ANR	2014580	IdentifierDeclStatement	const int index = ( x + y * w ) << rem_depth ;	7:4:181:220	2014553	2	True				
ANR	2014581	IdentifierDecl	index = ( x + y * w ) << rem_depth		2014553	0					
ANR	2014582	IdentifierDeclType	const int		2014553	0					
ANR	2014583	Identifier	index		2014553	1					
ANR	2014584	AssignmentExpression	index = ( x + y * w ) << rem_depth		2014553	2		=			
ANR	2014585	Identifier	index		2014553	0					
ANR	2014586	ShiftExpression	( x + y * w ) << rem_depth		2014553	1		<<			
ANR	2014587	AdditiveExpression	x + y * w		2014553	0		+			
ANR	2014588	Identifier	x		2014553	0					
ANR	2014589	MultiplicativeExpression	y * w		2014553	1		*			
ANR	2014590	Identifier	y		2014553	0					
ANR	2014591	Identifier	w		2014553	1					
ANR	2014592	Identifier	rem_depth		2014553	1					
ANR	2014593	IdentifierDeclStatement	int trx = ( x + 1 ) << rem_depth ;	9:4:227:252	2014553	3	True				
ANR	2014594	IdentifierDecl	trx = ( x + 1 ) << rem_depth		2014553	0					
ANR	2014595	IdentifierDeclType	int		2014553	0					
ANR	2014596	Identifier	trx		2014553	1					
ANR	2014597	AssignmentExpression	trx = ( x + 1 ) << rem_depth		2014553	2		=			
ANR	2014598	Identifier	trx		2014553	0					
ANR	2014599	ShiftExpression	( x + 1 ) << rem_depth		2014553	1		<<			
ANR	2014600	AdditiveExpression	x + 1		2014553	0		+			
ANR	2014601	Identifier	x		2014553	0					
ANR	2014602	PrimaryExpression	1		2014553	1					
ANR	2014603	Identifier	rem_depth		2014553	1					
ANR	2014604	IdentifierDeclStatement	const BlockNode * left = x ? & s -> block [ index - 1 ] : & null_block ;	11:4:259:320	2014553	4	True				
ANR	2014605	IdentifierDecl	* left = x ? & s -> block [ index - 1 ] : & null_block		2014553	0					
ANR	2014606	IdentifierDeclType	const BlockNode *		2014553	0					
ANR	2014607	Identifier	left		2014553	1					
ANR	2014608	AssignmentExpression	* left = x ? & s -> block [ index - 1 ] : & null_block		2014553	2		=			
ANR	2014609	Identifier	left		2014553	0					
ANR	2014610	ConditionalExpression	x ? & s -> block [ index - 1 ] : & null_block		2014553	1					
ANR	2014611	Condition	x		2014553	0					
ANR	2014612	Identifier	x		2014553	0					
ANR	2014613	UnaryOperationExpression	& s -> block [ index - 1 ]		2014553	1					
ANR	2014614	UnaryOperator	&		2014553	0					
ANR	2014615	ArrayIndexing	s -> block [ index - 1 ]		2014553	1					
ANR	2014616	PtrMemberAccess	s -> block		2014553	0					
ANR	2014617	Identifier	s		2014553	0					
ANR	2014618	Identifier	block		2014553	1					
ANR	2014619	AdditiveExpression	index - 1		2014553	1		-			
ANR	2014620	Identifier	index		2014553	0					
ANR	2014621	PrimaryExpression	1		2014553	1					
ANR	2014622	UnaryOperationExpression	& null_block		2014553	2					
ANR	2014623	UnaryOperator	&		2014553	0					
ANR	2014624	Identifier	null_block		2014553	1					
ANR	2014625	IdentifierDeclStatement	const BlockNode * top = y ? & s -> block [ index - w ] : & null_block ;	13:4:327:388	2014553	5	True				
ANR	2014626	IdentifierDecl	* top = y ? & s -> block [ index - w ] : & null_block		2014553	0					
ANR	2014627	IdentifierDeclType	const BlockNode *		2014553	0					
ANR	2014628	Identifier	top		2014553	1					
ANR	2014629	AssignmentExpression	* top = y ? & s -> block [ index - w ] : & null_block		2014553	2		=			
ANR	2014630	Identifier	top		2014553	0					
ANR	2014631	ConditionalExpression	y ? & s -> block [ index - w ] : & null_block		2014553	1					
ANR	2014632	Condition	y		2014553	0					
ANR	2014633	Identifier	y		2014553	0					
ANR	2014634	UnaryOperationExpression	& s -> block [ index - w ]		2014553	1					
ANR	2014635	UnaryOperator	&		2014553	0					
ANR	2014636	ArrayIndexing	s -> block [ index - w ]		2014553	1					
ANR	2014637	PtrMemberAccess	s -> block		2014553	0					
ANR	2014638	Identifier	s		2014553	0					
ANR	2014639	Identifier	block		2014553	1					
ANR	2014640	AdditiveExpression	index - w		2014553	1		-			
ANR	2014641	Identifier	index		2014553	0					
ANR	2014642	Identifier	w		2014553	1					
ANR	2014643	UnaryOperationExpression	& null_block		2014553	2					
ANR	2014644	UnaryOperator	&		2014553	0					
ANR	2014645	Identifier	null_block		2014553	1					
ANR	2014646	IdentifierDeclStatement	const BlockNode * tl = y && x ? & s -> block [ index - w - 1 ] : left ;	15:4:395:456	2014553	6	True				
ANR	2014647	IdentifierDecl	* tl = y && x ? & s -> block [ index - w - 1 ] : left		2014553	0					
ANR	2014648	IdentifierDeclType	const BlockNode *		2014553	0					
ANR	2014649	Identifier	tl		2014553	1					
ANR	2014650	AssignmentExpression	* tl = y && x ? & s -> block [ index - w - 1 ] : left		2014553	2		=			
ANR	2014651	Identifier	tl		2014553	0					
ANR	2014652	ConditionalExpression	y && x ? & s -> block [ index - w - 1 ] : left		2014553	1					
ANR	2014653	Condition	y && x		2014553	0					
ANR	2014654	AndExpression	y && x		2014553	0		&&			
ANR	2014655	Identifier	y		2014553	0					
ANR	2014656	Identifier	x		2014553	1					
ANR	2014657	UnaryOperationExpression	& s -> block [ index - w - 1 ]		2014553	1					
ANR	2014658	UnaryOperator	&		2014553	0					
ANR	2014659	ArrayIndexing	s -> block [ index - w - 1 ]		2014553	1					
ANR	2014660	PtrMemberAccess	s -> block		2014553	0					
ANR	2014661	Identifier	s		2014553	0					
ANR	2014662	Identifier	block		2014553	1					
ANR	2014663	AdditiveExpression	index - w - 1		2014553	1		-			
ANR	2014664	Identifier	index		2014553	0					
ANR	2014665	AdditiveExpression	w - 1		2014553	1		-			
ANR	2014666	Identifier	w		2014553	0					
ANR	2014667	PrimaryExpression	1		2014553	1					
ANR	2014668	Identifier	left		2014553	2					
ANR	2014669	IdentifierDeclStatement	const BlockNode * tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl ;	17:4:463:565	2014553	7	True				
ANR	2014670	IdentifierDecl	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2014553	0					
ANR	2014671	IdentifierDeclType	const BlockNode *		2014553	0					
ANR	2014672	Identifier	tr		2014553	1					
ANR	2014673	AssignmentExpression	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2014553	2		=			
ANR	2014674	Identifier	tr		2014553	0					
ANR	2014675	ConditionalExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2014553	1					
ANR	2014676	Condition	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		2014553	0					
ANR	2014677	AndExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		2014553	0		&&			
ANR	2014678	Identifier	y		2014553	0					
ANR	2014679	AndExpression	trx < w && ( ( x & 1 ) == 0 || level == 0 )		2014553	1		&&			
ANR	2014680	RelationalExpression	trx < w		2014553	0		<			
ANR	2014681	Identifier	trx		2014553	0					
ANR	2014682	Identifier	w		2014553	1					
ANR	2014683	OrExpression	( x & 1 ) == 0 || level == 0		2014553	1		||			
ANR	2014684	EqualityExpression	( x & 1 ) == 0		2014553	0		==			
ANR	2014685	BitAndExpression	x & 1		2014553	0		&			
ANR	2014686	Identifier	x		2014553	0					
ANR	2014687	PrimaryExpression	1		2014553	1					
ANR	2014688	PrimaryExpression	0		2014553	1					
ANR	2014689	EqualityExpression	level == 0		2014553	1		==			
ANR	2014690	Identifier	level		2014553	0					
ANR	2014691	PrimaryExpression	0		2014553	1					
ANR	2014692	UnaryOperationExpression	& s -> block [ index - w + ( 1 << rem_depth ) ]		2014553	1					
ANR	2014693	UnaryOperator	&		2014553	0					
ANR	2014694	ArrayIndexing	s -> block [ index - w + ( 1 << rem_depth ) ]		2014553	1					
ANR	2014695	PtrMemberAccess	s -> block		2014553	0					
ANR	2014696	Identifier	s		2014553	0					
ANR	2014697	Identifier	block		2014553	1					
ANR	2014698	AdditiveExpression	index - w + ( 1 << rem_depth )		2014553	1		-			
ANR	2014699	Identifier	index		2014553	0					
ANR	2014700	AdditiveExpression	w + ( 1 << rem_depth )		2014553	1		+			
ANR	2014701	Identifier	w		2014553	0					
ANR	2014702	ShiftExpression	1 << rem_depth		2014553	1		<<			
ANR	2014703	PrimaryExpression	1		2014553	0					
ANR	2014704	Identifier	rem_depth		2014553	1					
ANR	2014705	Identifier	tl		2014553	2					
ANR	2014706	IdentifierDeclStatement	int s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level ;	19:4:587:654	2014553	8	True				
ANR	2014707	IdentifierDecl	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2014553	0					
ANR	2014708	IdentifierDeclType	int		2014553	0					
ANR	2014709	Identifier	s_context		2014553	1					
ANR	2014710	AssignmentExpression	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2014553	2		=			
ANR	2014711	Identifier	s_context		2014553	0					
ANR	2014712	AdditiveExpression	2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2014553	1		+			
ANR	2014713	MultiplicativeExpression	2 * left -> level		2014553	0		*			
ANR	2014714	PrimaryExpression	2		2014553	0					
ANR	2014715	PtrMemberAccess	left -> level		2014553	1					
ANR	2014716	Identifier	left		2014553	0					
ANR	2014717	Identifier	level		2014553	1					
ANR	2014718	AdditiveExpression	2 * top -> level + tl -> level + tr -> level		2014553	1		+			
ANR	2014719	MultiplicativeExpression	2 * top -> level		2014553	0		*			
ANR	2014720	PrimaryExpression	2		2014553	0					
ANR	2014721	PtrMemberAccess	top -> level		2014553	1					
ANR	2014722	Identifier	top		2014553	0					
ANR	2014723	Identifier	level		2014553	1					
ANR	2014724	AdditiveExpression	tl -> level + tr -> level		2014553	1		+			
ANR	2014725	PtrMemberAccess	tl -> level		2014553	0					
ANR	2014726	Identifier	tl		2014553	0					
ANR	2014727	Identifier	level		2014553	1					
ANR	2014728	PtrMemberAccess	tr -> level		2014553	1					
ANR	2014729	Identifier	tr		2014553	0					
ANR	2014730	Identifier	level		2014553	1					
ANR	2014731	IfStatement	if ( s -> keyframe )		2014553	9					
ANR	2014732	Condition	s -> keyframe	23:7:666:676	2014553	0	True				
ANR	2014733	PtrMemberAccess	s -> keyframe		2014553	0					
ANR	2014734	Identifier	s		2014553	0					
ANR	2014735	Identifier	keyframe		2014553	1					
ANR	2014736	CompoundStatement		23:19:609:609	2014553	1					
ANR	2014737	ExpressionStatement	"set_blocks ( s , level , x , y , null_block . color [ 0 ] , null_block . color [ 1 ] , null_block . color [ 2 ] , null_block . mx , null_block . my , null_block . ref , BLOCK_INTRA )"	25:8:689:837	2014553	0	True				
ANR	2014738	CallExpression	"set_blocks ( s , level , x , y , null_block . color [ 0 ] , null_block . color [ 1 ] , null_block . color [ 2 ] , null_block . mx , null_block . my , null_block . ref , BLOCK_INTRA )"		2014553	0					
ANR	2014739	Callee	set_blocks		2014553	0					
ANR	2014740	Identifier	set_blocks		2014553	0					
ANR	2014741	ArgumentList	s		2014553	1					
ANR	2014742	Argument	s		2014553	0					
ANR	2014743	Identifier	s		2014553	0					
ANR	2014744	Argument	level		2014553	1					
ANR	2014745	Identifier	level		2014553	0					
ANR	2014746	Argument	x		2014553	2					
ANR	2014747	Identifier	x		2014553	0					
ANR	2014748	Argument	y		2014553	3					
ANR	2014749	Identifier	y		2014553	0					
ANR	2014750	Argument	null_block . color [ 0 ]		2014553	4					
ANR	2014751	ArrayIndexing	null_block . color [ 0 ]		2014553	0					
ANR	2014752	MemberAccess	null_block . color		2014553	0					
ANR	2014753	Identifier	null_block		2014553	0					
ANR	2014754	Identifier	color		2014553	1					
ANR	2014755	PrimaryExpression	0		2014553	1					
ANR	2014756	Argument	null_block . color [ 1 ]		2014553	5					
ANR	2014757	ArrayIndexing	null_block . color [ 1 ]		2014553	0					
ANR	2014758	MemberAccess	null_block . color		2014553	0					
ANR	2014759	Identifier	null_block		2014553	0					
ANR	2014760	Identifier	color		2014553	1					
ANR	2014761	PrimaryExpression	1		2014553	1					
ANR	2014762	Argument	null_block . color [ 2 ]		2014553	6					
ANR	2014763	ArrayIndexing	null_block . color [ 2 ]		2014553	0					
ANR	2014764	MemberAccess	null_block . color		2014553	0					
ANR	2014765	Identifier	null_block		2014553	0					
ANR	2014766	Identifier	color		2014553	1					
ANR	2014767	PrimaryExpression	2		2014553	1					
ANR	2014768	Argument	null_block . mx		2014553	7					
ANR	2014769	MemberAccess	null_block . mx		2014553	0					
ANR	2014770	Identifier	null_block		2014553	0					
ANR	2014771	Identifier	mx		2014553	1					
ANR	2014772	Argument	null_block . my		2014553	8					
ANR	2014773	MemberAccess	null_block . my		2014553	0					
ANR	2014774	Identifier	null_block		2014553	0					
ANR	2014775	Identifier	my		2014553	1					
ANR	2014776	Argument	null_block . ref		2014553	9					
ANR	2014777	MemberAccess	null_block . ref		2014553	0					
ANR	2014778	Identifier	null_block		2014553	0					
ANR	2014779	Identifier	ref		2014553	1					
ANR	2014780	Argument	BLOCK_INTRA		2014553	10					
ANR	2014781	Identifier	BLOCK_INTRA		2014553	0					
ANR	2014782	ReturnStatement	return ;	27:8:848:854	2014553	1	True				
ANR	2014783	IfStatement	"if ( level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] ) )"		2014553	10					
ANR	2014784	Condition	"level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"	33:7:873:947	2014553	0	True				
ANR	2014785	OrExpression	"level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"		2014553	0		||			
ANR	2014786	EqualityExpression	level == s -> block_max_depth		2014553	0		==			
ANR	2014787	Identifier	level		2014553	0					
ANR	2014788	PtrMemberAccess	s -> block_max_depth		2014553	1					
ANR	2014789	Identifier	s		2014553	0					
ANR	2014790	Identifier	block_max_depth		2014553	1					
ANR	2014791	CallExpression	"get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"		2014553	1					
ANR	2014792	Callee	get_rac		2014553	0					
ANR	2014793	Identifier	get_rac		2014553	0					
ANR	2014794	ArgumentList	& s -> c		2014553	1					
ANR	2014795	Argument	& s -> c		2014553	0					
ANR	2014796	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2014797	UnaryOperator	&		2014553	0					
ANR	2014798	PtrMemberAccess	s -> c		2014553	1					
ANR	2014799	Identifier	s		2014553	0					
ANR	2014800	Identifier	c		2014553	1					
ANR	2014801	Argument	& s -> block_state [ 4 + s_context ]		2014553	1					
ANR	2014802	UnaryOperationExpression	& s -> block_state [ 4 + s_context ]		2014553	0					
ANR	2014803	UnaryOperator	&		2014553	0					
ANR	2014804	ArrayIndexing	s -> block_state [ 4 + s_context ]		2014553	1					
ANR	2014805	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2014806	Identifier	s		2014553	0					
ANR	2014807	Identifier	block_state		2014553	1					
ANR	2014808	AdditiveExpression	4 + s_context		2014553	1		+			
ANR	2014809	PrimaryExpression	4		2014553	0					
ANR	2014810	Identifier	s_context		2014553	1					
ANR	2014811	CompoundStatement		49:8:1211:1302	2014553	1					
ANR	2014812	IdentifierDeclStatement	"int type , mx , my ;"	35:8:960:976	2014553	0	True				
ANR	2014813	IdentifierDecl	type		2014553	0					
ANR	2014814	IdentifierDeclType	int		2014553	0					
ANR	2014815	Identifier	type		2014553	1					
ANR	2014816	IdentifierDecl	mx		2014553	1					
ANR	2014817	IdentifierDeclType	int		2014553	0					
ANR	2014818	Identifier	mx		2014553	1					
ANR	2014819	IdentifierDecl	my		2014553	2					
ANR	2014820	IdentifierDeclType	int		2014553	0					
ANR	2014821	Identifier	my		2014553	1					
ANR	2014822	IdentifierDeclStatement	int l = left -> color [ 0 ] ;	37:8:987:1009	2014553	1	True				
ANR	2014823	IdentifierDecl	l = left -> color [ 0 ]		2014553	0					
ANR	2014824	IdentifierDeclType	int		2014553	0					
ANR	2014825	Identifier	l		2014553	1					
ANR	2014826	AssignmentExpression	l = left -> color [ 0 ]		2014553	2		=			
ANR	2014827	Identifier	l		2014553	0					
ANR	2014828	ArrayIndexing	left -> color [ 0 ]		2014553	1					
ANR	2014829	PtrMemberAccess	left -> color		2014553	0					
ANR	2014830	Identifier	left		2014553	0					
ANR	2014831	Identifier	color		2014553	1					
ANR	2014832	PrimaryExpression	0		2014553	1					
ANR	2014833	IdentifierDeclStatement	int cb = left -> color [ 1 ] ;	39:8:1020:1042	2014553	2	True				
ANR	2014834	IdentifierDecl	cb = left -> color [ 1 ]		2014553	0					
ANR	2014835	IdentifierDeclType	int		2014553	0					
ANR	2014836	Identifier	cb		2014553	1					
ANR	2014837	AssignmentExpression	cb = left -> color [ 1 ]		2014553	2		=			
ANR	2014838	Identifier	cb		2014553	0					
ANR	2014839	ArrayIndexing	left -> color [ 1 ]		2014553	1					
ANR	2014840	PtrMemberAccess	left -> color		2014553	0					
ANR	2014841	Identifier	left		2014553	0					
ANR	2014842	Identifier	color		2014553	1					
ANR	2014843	PrimaryExpression	1		2014553	1					
ANR	2014844	IdentifierDeclStatement	int cr = left -> color [ 2 ] ;	41:8:1053:1075	2014553	3	True				
ANR	2014845	IdentifierDecl	cr = left -> color [ 2 ]		2014553	0					
ANR	2014846	IdentifierDeclType	int		2014553	0					
ANR	2014847	Identifier	cr		2014553	1					
ANR	2014848	AssignmentExpression	cr = left -> color [ 2 ]		2014553	2		=			
ANR	2014849	Identifier	cr		2014553	0					
ANR	2014850	ArrayIndexing	left -> color [ 2 ]		2014553	1					
ANR	2014851	PtrMemberAccess	left -> color		2014553	0					
ANR	2014852	Identifier	left		2014553	0					
ANR	2014853	Identifier	color		2014553	1					
ANR	2014854	PrimaryExpression	2		2014553	1					
ANR	2014855	IdentifierDeclStatement	int ref = 0 ;	43:8:1086:1097	2014553	4	True				
ANR	2014856	IdentifierDecl	ref = 0		2014553	0					
ANR	2014857	IdentifierDeclType	int		2014553	0					
ANR	2014858	Identifier	ref		2014553	1					
ANR	2014859	AssignmentExpression	ref = 0		2014553	2		=			
ANR	2014860	Identifier	ref		2014553	0					
ANR	2014861	PrimaryExpression	0		2014553	1					
ANR	2014862	IdentifierDeclStatement	int ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref ) ;	45:8:1108:1167	2014553	5	True				
ANR	2014863	IdentifierDecl	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2014553	0					
ANR	2014864	IdentifierDeclType	int		2014553	0					
ANR	2014865	Identifier	ref_context		2014553	1					
ANR	2014866	AssignmentExpression	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2014553	2		=			
ANR	2014867	Identifier	ref_context		2014553	0					
ANR	2014868	AdditiveExpression	av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2014553	1		+			
ANR	2014869	CallExpression	av_log2 ( 2 * left -> ref )		2014553	0					
ANR	2014870	Callee	av_log2		2014553	0					
ANR	2014871	Identifier	av_log2		2014553	0					
ANR	2014872	ArgumentList	2 * left -> ref		2014553	1					
ANR	2014873	Argument	2 * left -> ref		2014553	0					
ANR	2014874	MultiplicativeExpression	2 * left -> ref		2014553	0		*			
ANR	2014875	PrimaryExpression	2		2014553	0					
ANR	2014876	PtrMemberAccess	left -> ref		2014553	1					
ANR	2014877	Identifier	left		2014553	0					
ANR	2014878	Identifier	ref		2014553	1					
ANR	2014879	CallExpression	av_log2 ( 2 * top -> ref )		2014553	1					
ANR	2014880	Callee	av_log2		2014553	0					
ANR	2014881	Identifier	av_log2		2014553	0					
ANR	2014882	ArgumentList	2 * top -> ref		2014553	1					
ANR	2014883	Argument	2 * top -> ref		2014553	0					
ANR	2014884	MultiplicativeExpression	2 * top -> ref		2014553	0		*			
ANR	2014885	PrimaryExpression	2		2014553	0					
ANR	2014886	PtrMemberAccess	top -> ref		2014553	1					
ANR	2014887	Identifier	top		2014553	0					
ANR	2014888	Identifier	ref		2014553	1					
ANR	2014889	IdentifierDeclStatement	int mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) ) ;	47:8:1178:1269	2014553	6	True				
ANR	2014890	IdentifierDecl	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2014553	0					
ANR	2014891	IdentifierDeclType	int		2014553	0					
ANR	2014892	Identifier	mx_context		2014553	1					
ANR	2014893	AssignmentExpression	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2014553	2		=			
ANR	2014894	Identifier	mx_context		2014553	0					
ANR	2014895	AdditiveExpression	av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2014553	1		+			
ANR	2014896	CallExpression	av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) )		2014553	0					
ANR	2014897	Callee	av_log2		2014553	0					
ANR	2014898	Identifier	av_log2		2014553	0					
ANR	2014899	ArgumentList	2 * FFABS ( left -> mx - top -> mx )		2014553	1					
ANR	2014900	Argument	2 * FFABS ( left -> mx - top -> mx )		2014553	0					
ANR	2014901	MultiplicativeExpression	2 * FFABS ( left -> mx - top -> mx )		2014553	0		*			
ANR	2014902	PrimaryExpression	2		2014553	0					
ANR	2014903	CallExpression	FFABS ( left -> mx - top -> mx )		2014553	1					
ANR	2014904	Callee	FFABS		2014553	0					
ANR	2014905	Identifier	FFABS		2014553	0					
ANR	2014906	ArgumentList	left -> mx - top -> mx		2014553	1					
ANR	2014907	Argument	left -> mx - top -> mx		2014553	0					
ANR	2014908	AdditiveExpression	left -> mx - top -> mx		2014553	0		-			
ANR	2014909	PtrMemberAccess	left -> mx		2014553	0					
ANR	2014910	Identifier	left		2014553	0					
ANR	2014911	Identifier	mx		2014553	1					
ANR	2014912	PtrMemberAccess	top -> mx		2014553	1					
ANR	2014913	Identifier	top		2014553	0					
ANR	2014914	Identifier	mx		2014553	1					
ANR	2014915	MultiplicativeExpression	0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2014553	1		*			
ANR	2014916	PrimaryExpression	0		2014553	0					
ANR	2014917	CallExpression	av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2014553	1					
ANR	2014918	Callee	av_log2		2014553	0					
ANR	2014919	Identifier	av_log2		2014553	0					
ANR	2014920	ArgumentList	2 * FFABS ( tr -> mx - top -> mx )		2014553	1					
ANR	2014921	Argument	2 * FFABS ( tr -> mx - top -> mx )		2014553	0					
ANR	2014922	MultiplicativeExpression	2 * FFABS ( tr -> mx - top -> mx )		2014553	0		*			
ANR	2014923	PrimaryExpression	2		2014553	0					
ANR	2014924	CallExpression	FFABS ( tr -> mx - top -> mx )		2014553	1					
ANR	2014925	Callee	FFABS		2014553	0					
ANR	2014926	Identifier	FFABS		2014553	0					
ANR	2014927	ArgumentList	tr -> mx - top -> mx		2014553	1					
ANR	2014928	Argument	tr -> mx - top -> mx		2014553	0					
ANR	2014929	AdditiveExpression	tr -> mx - top -> mx		2014553	0		-			
ANR	2014930	PtrMemberAccess	tr -> mx		2014553	0					
ANR	2014931	Identifier	tr		2014553	0					
ANR	2014932	Identifier	mx		2014553	1					
ANR	2014933	PtrMemberAccess	top -> mx		2014553	1					
ANR	2014934	Identifier	top		2014553	0					
ANR	2014935	Identifier	mx		2014553	1					
ANR	2014936	IdentifierDeclStatement	int my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) ) ;	49:8:1280:1371	2014553	7	True				
ANR	2014937	IdentifierDecl	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2014553	0					
ANR	2014938	IdentifierDeclType	int		2014553	0					
ANR	2014939	Identifier	my_context		2014553	1					
ANR	2014940	AssignmentExpression	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2014553	2		=			
ANR	2014941	Identifier	my_context		2014553	0					
ANR	2014942	AdditiveExpression	av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2014553	1		+			
ANR	2014943	CallExpression	av_log2 ( 2 * FFABS ( left -> my - top -> my ) )		2014553	0					
ANR	2014944	Callee	av_log2		2014553	0					
ANR	2014945	Identifier	av_log2		2014553	0					
ANR	2014946	ArgumentList	2 * FFABS ( left -> my - top -> my )		2014553	1					
ANR	2014947	Argument	2 * FFABS ( left -> my - top -> my )		2014553	0					
ANR	2014948	MultiplicativeExpression	2 * FFABS ( left -> my - top -> my )		2014553	0		*			
ANR	2014949	PrimaryExpression	2		2014553	0					
ANR	2014950	CallExpression	FFABS ( left -> my - top -> my )		2014553	1					
ANR	2014951	Callee	FFABS		2014553	0					
ANR	2014952	Identifier	FFABS		2014553	0					
ANR	2014953	ArgumentList	left -> my - top -> my		2014553	1					
ANR	2014954	Argument	left -> my - top -> my		2014553	0					
ANR	2014955	AdditiveExpression	left -> my - top -> my		2014553	0		-			
ANR	2014956	PtrMemberAccess	left -> my		2014553	0					
ANR	2014957	Identifier	left		2014553	0					
ANR	2014958	Identifier	my		2014553	1					
ANR	2014959	PtrMemberAccess	top -> my		2014553	1					
ANR	2014960	Identifier	top		2014553	0					
ANR	2014961	Identifier	my		2014553	1					
ANR	2014962	MultiplicativeExpression	0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2014553	1		*			
ANR	2014963	PrimaryExpression	0		2014553	0					
ANR	2014964	CallExpression	av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2014553	1					
ANR	2014965	Callee	av_log2		2014553	0					
ANR	2014966	Identifier	av_log2		2014553	0					
ANR	2014967	ArgumentList	2 * FFABS ( tr -> my - top -> my )		2014553	1					
ANR	2014968	Argument	2 * FFABS ( tr -> my - top -> my )		2014553	0					
ANR	2014969	MultiplicativeExpression	2 * FFABS ( tr -> my - top -> my )		2014553	0		*			
ANR	2014970	PrimaryExpression	2		2014553	0					
ANR	2014971	CallExpression	FFABS ( tr -> my - top -> my )		2014553	1					
ANR	2014972	Callee	FFABS		2014553	0					
ANR	2014973	Identifier	FFABS		2014553	0					
ANR	2014974	ArgumentList	tr -> my - top -> my		2014553	1					
ANR	2014975	Argument	tr -> my - top -> my		2014553	0					
ANR	2014976	AdditiveExpression	tr -> my - top -> my		2014553	0		-			
ANR	2014977	PtrMemberAccess	tr -> my		2014553	0					
ANR	2014978	Identifier	tr		2014553	0					
ANR	2014979	Identifier	my		2014553	1					
ANR	2014980	PtrMemberAccess	top -> my		2014553	1					
ANR	2014981	Identifier	top		2014553	0					
ANR	2014982	Identifier	my		2014553	1					
ANR	2014983	ExpressionStatement	"type = get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"	53:8:1384:1467	2014553	8	True				
ANR	2014984	AssignmentExpression	"type = get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"		2014553	0		=			
ANR	2014985	Identifier	type		2014553	0					
ANR	2014986	ConditionalExpression	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"		2014553	1					
ANR	2014987	Condition	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] )"		2014553	0					
ANR	2014988	CallExpression	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] )"		2014553	0					
ANR	2014989	Callee	get_rac		2014553	0					
ANR	2014990	Identifier	get_rac		2014553	0					
ANR	2014991	ArgumentList	& s -> c		2014553	1					
ANR	2014992	Argument	& s -> c		2014553	0					
ANR	2014993	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2014994	UnaryOperator	&		2014553	0					
ANR	2014995	PtrMemberAccess	s -> c		2014553	1					
ANR	2014996	Identifier	s		2014553	0					
ANR	2014997	Identifier	c		2014553	1					
ANR	2014998	Argument	& s -> block_state [ 1 + left -> type + top -> type ]		2014553	1					
ANR	2014999	UnaryOperationExpression	& s -> block_state [ 1 + left -> type + top -> type ]		2014553	0					
ANR	2015000	UnaryOperator	&		2014553	0					
ANR	2015001	ArrayIndexing	s -> block_state [ 1 + left -> type + top -> type ]		2014553	1					
ANR	2015002	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015003	Identifier	s		2014553	0					
ANR	2015004	Identifier	block_state		2014553	1					
ANR	2015005	AdditiveExpression	1 + left -> type + top -> type		2014553	1		+			
ANR	2015006	PrimaryExpression	1		2014553	0					
ANR	2015007	AdditiveExpression	left -> type + top -> type		2014553	1		+			
ANR	2015008	PtrMemberAccess	left -> type		2014553	0					
ANR	2015009	Identifier	left		2014553	0					
ANR	2015010	Identifier	type		2014553	1					
ANR	2015011	PtrMemberAccess	top -> type		2014553	1					
ANR	2015012	Identifier	top		2014553	0					
ANR	2015013	Identifier	type		2014553	1					
ANR	2015014	Identifier	BLOCK_INTRA		2014553	1					
ANR	2015015	PrimaryExpression	0		2014553	2					
ANR	2015016	IfStatement	if ( type )		2014553	9					
ANR	2015017	Condition	type	57:11:1483:1486	2014553	0	True				
ANR	2015018	Identifier	type		2014553	0					
ANR	2015019	CompoundStatement		57:16:1419:1419	2014553	1					
ANR	2015020	ExpressionStatement	"pred_mv ( s , & mx , & my , 0 , left , top , tr )"	59:12:1503:1541	2014553	0	True				
ANR	2015021	CallExpression	"pred_mv ( s , & mx , & my , 0 , left , top , tr )"		2014553	0					
ANR	2015022	Callee	pred_mv		2014553	0					
ANR	2015023	Identifier	pred_mv		2014553	0					
ANR	2015024	ArgumentList	s		2014553	1					
ANR	2015025	Argument	s		2014553	0					
ANR	2015026	Identifier	s		2014553	0					
ANR	2015027	Argument	& mx		2014553	1					
ANR	2015028	UnaryOperationExpression	& mx		2014553	0					
ANR	2015029	UnaryOperator	&		2014553	0					
ANR	2015030	Identifier	mx		2014553	1					
ANR	2015031	Argument	& my		2014553	2					
ANR	2015032	UnaryOperationExpression	& my		2014553	0					
ANR	2015033	UnaryOperator	&		2014553	0					
ANR	2015034	Identifier	my		2014553	1					
ANR	2015035	Argument	0		2014553	3					
ANR	2015036	PrimaryExpression	0		2014553	0					
ANR	2015037	Argument	left		2014553	4					
ANR	2015038	Identifier	left		2014553	0					
ANR	2015039	Argument	top		2014553	5					
ANR	2015040	Identifier	top		2014553	0					
ANR	2015041	Argument	tr		2014553	6					
ANR	2015042	Identifier	tr		2014553	0					
ANR	2015043	ExpressionStatement	"l += get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"	61:12:1556:1602	2014553	1	True				
ANR	2015044	AssignmentExpression	"l += get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"		2014553	0		+=			
ANR	2015045	Identifier	l		2014553	0					
ANR	2015046	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"		2014553	1					
ANR	2015047	Callee	get_symbol		2014553	0					
ANR	2015048	Identifier	get_symbol		2014553	0					
ANR	2015049	ArgumentList	& s -> c		2014553	1					
ANR	2015050	Argument	& s -> c		2014553	0					
ANR	2015051	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015052	UnaryOperator	&		2014553	0					
ANR	2015053	PtrMemberAccess	s -> c		2014553	1					
ANR	2015054	Identifier	s		2014553	0					
ANR	2015055	Identifier	c		2014553	1					
ANR	2015056	Argument	& s -> block_state [ 32 ]		2014553	1					
ANR	2015057	UnaryOperationExpression	& s -> block_state [ 32 ]		2014553	0					
ANR	2015058	UnaryOperator	&		2014553	0					
ANR	2015059	ArrayIndexing	s -> block_state [ 32 ]		2014553	1					
ANR	2015060	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015061	Identifier	s		2014553	0					
ANR	2015062	Identifier	block_state		2014553	1					
ANR	2015063	PrimaryExpression	32		2014553	1					
ANR	2015064	Argument	1		2014553	2					
ANR	2015065	PrimaryExpression	1		2014553	0					
ANR	2015066	ExpressionStatement	"cb += get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"	63:12:1617:1663	2014553	2	True				
ANR	2015067	AssignmentExpression	"cb += get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"		2014553	0		+=			
ANR	2015068	Identifier	cb		2014553	0					
ANR	2015069	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"		2014553	1					
ANR	2015070	Callee	get_symbol		2014553	0					
ANR	2015071	Identifier	get_symbol		2014553	0					
ANR	2015072	ArgumentList	& s -> c		2014553	1					
ANR	2015073	Argument	& s -> c		2014553	0					
ANR	2015074	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015075	UnaryOperator	&		2014553	0					
ANR	2015076	PtrMemberAccess	s -> c		2014553	1					
ANR	2015077	Identifier	s		2014553	0					
ANR	2015078	Identifier	c		2014553	1					
ANR	2015079	Argument	& s -> block_state [ 64 ]		2014553	1					
ANR	2015080	UnaryOperationExpression	& s -> block_state [ 64 ]		2014553	0					
ANR	2015081	UnaryOperator	&		2014553	0					
ANR	2015082	ArrayIndexing	s -> block_state [ 64 ]		2014553	1					
ANR	2015083	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015084	Identifier	s		2014553	0					
ANR	2015085	Identifier	block_state		2014553	1					
ANR	2015086	PrimaryExpression	64		2014553	1					
ANR	2015087	Argument	1		2014553	2					
ANR	2015088	PrimaryExpression	1		2014553	0					
ANR	2015089	ExpressionStatement	"cr += get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"	65:12:1678:1724	2014553	3	True				
ANR	2015090	AssignmentExpression	"cr += get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"		2014553	0		+=			
ANR	2015091	Identifier	cr		2014553	0					
ANR	2015092	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"		2014553	1					
ANR	2015093	Callee	get_symbol		2014553	0					
ANR	2015094	Identifier	get_symbol		2014553	0					
ANR	2015095	ArgumentList	& s -> c		2014553	1					
ANR	2015096	Argument	& s -> c		2014553	0					
ANR	2015097	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015098	UnaryOperator	&		2014553	0					
ANR	2015099	PtrMemberAccess	s -> c		2014553	1					
ANR	2015100	Identifier	s		2014553	0					
ANR	2015101	Identifier	c		2014553	1					
ANR	2015102	Argument	& s -> block_state [ 96 ]		2014553	1					
ANR	2015103	UnaryOperationExpression	& s -> block_state [ 96 ]		2014553	0					
ANR	2015104	UnaryOperator	&		2014553	0					
ANR	2015105	ArrayIndexing	s -> block_state [ 96 ]		2014553	1					
ANR	2015106	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015107	Identifier	s		2014553	0					
ANR	2015108	Identifier	block_state		2014553	1					
ANR	2015109	PrimaryExpression	96		2014553	1					
ANR	2015110	Argument	1		2014553	2					
ANR	2015111	PrimaryExpression	1		2014553	0					
ANR	2015112	ElseStatement	else		2014553	0					
ANR	2015113	CompoundStatement		67:13:1671:1671	2014553	0					
ANR	2015114	IfStatement	if ( s -> ref_frames > 1 )		2014553	0					
ANR	2015115	Condition	s -> ref_frames > 1	69:15:1758:1774	2014553	0	True				
ANR	2015116	RelationalExpression	s -> ref_frames > 1		2014553	0		>			
ANR	2015117	PtrMemberAccess	s -> ref_frames		2014553	0					
ANR	2015118	Identifier	s		2014553	0					
ANR	2015119	Identifier	ref_frames		2014553	1					
ANR	2015120	PrimaryExpression	1		2014553	1					
ANR	2015121	ExpressionStatement	"ref = get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"	71:16:1794:1865	2014553	1	True				
ANR	2015122	AssignmentExpression	"ref = get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"		2014553	0		=			
ANR	2015123	Identifier	ref		2014553	0					
ANR	2015124	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"		2014553	1					
ANR	2015125	Callee	get_symbol		2014553	0					
ANR	2015126	Identifier	get_symbol		2014553	0					
ANR	2015127	ArgumentList	& s -> c		2014553	1					
ANR	2015128	Argument	& s -> c		2014553	0					
ANR	2015129	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015130	UnaryOperator	&		2014553	0					
ANR	2015131	PtrMemberAccess	s -> c		2014553	1					
ANR	2015132	Identifier	s		2014553	0					
ANR	2015133	Identifier	c		2014553	1					
ANR	2015134	Argument	& s -> block_state [ 128 + 1024 + 32 * ref_context ]		2014553	1					
ANR	2015135	UnaryOperationExpression	& s -> block_state [ 128 + 1024 + 32 * ref_context ]		2014553	0					
ANR	2015136	UnaryOperator	&		2014553	0					
ANR	2015137	ArrayIndexing	s -> block_state [ 128 + 1024 + 32 * ref_context ]		2014553	1					
ANR	2015138	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015139	Identifier	s		2014553	0					
ANR	2015140	Identifier	block_state		2014553	1					
ANR	2015141	AdditiveExpression	128 + 1024 + 32 * ref_context		2014553	1		+			
ANR	2015142	PrimaryExpression	128		2014553	0					
ANR	2015143	AdditiveExpression	1024 + 32 * ref_context		2014553	1		+			
ANR	2015144	PrimaryExpression	1024		2014553	0					
ANR	2015145	MultiplicativeExpression	32 * ref_context		2014553	1		*			
ANR	2015146	PrimaryExpression	32		2014553	0					
ANR	2015147	Identifier	ref_context		2014553	1					
ANR	2015148	Argument	0		2014553	2					
ANR	2015149	PrimaryExpression	0		2014553	0					
ANR	2015150	ExpressionStatement	"pred_mv ( s , & mx , & my , ref , left , top , tr )"	73:12:1880:1920	2014553	1	True				
ANR	2015151	CallExpression	"pred_mv ( s , & mx , & my , ref , left , top , tr )"		2014553	0					
ANR	2015152	Callee	pred_mv		2014553	0					
ANR	2015153	Identifier	pred_mv		2014553	0					
ANR	2015154	ArgumentList	s		2014553	1					
ANR	2015155	Argument	s		2014553	0					
ANR	2015156	Identifier	s		2014553	0					
ANR	2015157	Argument	& mx		2014553	1					
ANR	2015158	UnaryOperationExpression	& mx		2014553	0					
ANR	2015159	UnaryOperator	&		2014553	0					
ANR	2015160	Identifier	mx		2014553	1					
ANR	2015161	Argument	& my		2014553	2					
ANR	2015162	UnaryOperationExpression	& my		2014553	0					
ANR	2015163	UnaryOperator	&		2014553	0					
ANR	2015164	Identifier	my		2014553	1					
ANR	2015165	Argument	ref		2014553	3					
ANR	2015166	Identifier	ref		2014553	0					
ANR	2015167	Argument	left		2014553	4					
ANR	2015168	Identifier	left		2014553	0					
ANR	2015169	Argument	top		2014553	5					
ANR	2015170	Identifier	top		2014553	0					
ANR	2015171	Argument	tr		2014553	6					
ANR	2015172	Identifier	tr		2014553	0					
ANR	2015173	ExpressionStatement	"mx += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"	75:12:1935:2011	2014553	2	True				
ANR	2015174	AssignmentExpression	"mx += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"		2014553	0		+=			
ANR	2015175	Identifier	mx		2014553	0					
ANR	2015176	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"		2014553	1					
ANR	2015177	Callee	get_symbol		2014553	0					
ANR	2015178	Identifier	get_symbol		2014553	0					
ANR	2015179	ArgumentList	& s -> c		2014553	1					
ANR	2015180	Argument	& s -> c		2014553	0					
ANR	2015181	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015182	UnaryOperator	&		2014553	0					
ANR	2015183	PtrMemberAccess	s -> c		2014553	1					
ANR	2015184	Identifier	s		2014553	0					
ANR	2015185	Identifier	c		2014553	1					
ANR	2015186	Argument	& s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2014553	1					
ANR	2015187	UnaryOperationExpression	& s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2014553	0					
ANR	2015188	UnaryOperator	&		2014553	0					
ANR	2015189	ArrayIndexing	s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2014553	1					
ANR	2015190	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015191	Identifier	s		2014553	0					
ANR	2015192	Identifier	block_state		2014553	1					
ANR	2015193	AdditiveExpression	128 + 32 * ( mx_context + 16 * ! ! ref )		2014553	1		+			
ANR	2015194	PrimaryExpression	128		2014553	0					
ANR	2015195	MultiplicativeExpression	32 * ( mx_context + 16 * ! ! ref )		2014553	1		*			
ANR	2015196	PrimaryExpression	32		2014553	0					
ANR	2015197	AdditiveExpression	mx_context + 16 * ! ! ref		2014553	1		+			
ANR	2015198	Identifier	mx_context		2014553	0					
ANR	2015199	MultiplicativeExpression	16 * ! ! ref		2014553	1		*			
ANR	2015200	PrimaryExpression	16		2014553	0					
ANR	2015201	UnaryOperationExpression	! ! ref		2014553	1					
ANR	2015202	UnaryOperator	!		2014553	0					
ANR	2015203	UnaryOperationExpression	! ref		2014553	1					
ANR	2015204	UnaryOperator	!		2014553	0					
ANR	2015205	Identifier	ref		2014553	1					
ANR	2015206	Argument	1		2014553	2					
ANR	2015207	PrimaryExpression	1		2014553	0					
ANR	2015208	ExpressionStatement	"my += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"	77:12:2026:2102	2014553	3	True				
ANR	2015209	AssignmentExpression	"my += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"		2014553	0		+=			
ANR	2015210	Identifier	my		2014553	0					
ANR	2015211	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"		2014553	1					
ANR	2015212	Callee	get_symbol		2014553	0					
ANR	2015213	Identifier	get_symbol		2014553	0					
ANR	2015214	ArgumentList	& s -> c		2014553	1					
ANR	2015215	Argument	& s -> c		2014553	0					
ANR	2015216	UnaryOperationExpression	& s -> c		2014553	0					
ANR	2015217	UnaryOperator	&		2014553	0					
ANR	2015218	PtrMemberAccess	s -> c		2014553	1					
ANR	2015219	Identifier	s		2014553	0					
ANR	2015220	Identifier	c		2014553	1					
ANR	2015221	Argument	& s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2014553	1					
ANR	2015222	UnaryOperationExpression	& s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2014553	0					
ANR	2015223	UnaryOperator	&		2014553	0					
ANR	2015224	ArrayIndexing	s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2014553	1					
ANR	2015225	PtrMemberAccess	s -> block_state		2014553	0					
ANR	2015226	Identifier	s		2014553	0					
ANR	2015227	Identifier	block_state		2014553	1					
ANR	2015228	AdditiveExpression	128 + 32 * ( my_context + 16 * ! ! ref )		2014553	1		+			
ANR	2015229	PrimaryExpression	128		2014553	0					
ANR	2015230	MultiplicativeExpression	32 * ( my_context + 16 * ! ! ref )		2014553	1		*			
ANR	2015231	PrimaryExpression	32		2014553	0					
ANR	2015232	AdditiveExpression	my_context + 16 * ! ! ref		2014553	1		+			
ANR	2015233	Identifier	my_context		2014553	0					
ANR	2015234	MultiplicativeExpression	16 * ! ! ref		2014553	1		*			
ANR	2015235	PrimaryExpression	16		2014553	0					
ANR	2015236	UnaryOperationExpression	! ! ref		2014553	1					
ANR	2015237	UnaryOperator	!		2014553	0					
ANR	2015238	UnaryOperationExpression	! ref		2014553	1					
ANR	2015239	UnaryOperator	!		2014553	0					
ANR	2015240	Identifier	ref		2014553	1					
ANR	2015241	Argument	1		2014553	2					
ANR	2015242	PrimaryExpression	1		2014553	0					
ANR	2015243	ExpressionStatement	"set_blocks ( s , level , x , y , l , cb , cr , mx , my , ref , type )"	81:8:2124:2180	2014553	10	True				
ANR	2015244	CallExpression	"set_blocks ( s , level , x , y , l , cb , cr , mx , my , ref , type )"		2014553	0					
ANR	2015245	Callee	set_blocks		2014553	0					
ANR	2015246	Identifier	set_blocks		2014553	0					
ANR	2015247	ArgumentList	s		2014553	1					
ANR	2015248	Argument	s		2014553	0					
ANR	2015249	Identifier	s		2014553	0					
ANR	2015250	Argument	level		2014553	1					
ANR	2015251	Identifier	level		2014553	0					
ANR	2015252	Argument	x		2014553	2					
ANR	2015253	Identifier	x		2014553	0					
ANR	2015254	Argument	y		2014553	3					
ANR	2015255	Identifier	y		2014553	0					
ANR	2015256	Argument	l		2014553	4					
ANR	2015257	Identifier	l		2014553	0					
ANR	2015258	Argument	cb		2014553	5					
ANR	2015259	Identifier	cb		2014553	0					
ANR	2015260	Argument	cr		2014553	6					
ANR	2015261	Identifier	cr		2014553	0					
ANR	2015262	Argument	mx		2014553	7					
ANR	2015263	Identifier	mx		2014553	0					
ANR	2015264	Argument	my		2014553	8					
ANR	2015265	Identifier	my		2014553	0					
ANR	2015266	Argument	ref		2014553	9					
ANR	2015267	Identifier	ref		2014553	0					
ANR	2015268	Argument	type		2014553	10					
ANR	2015269	Identifier	type		2014553	0					
ANR	2015270	ElseStatement	else		2014553	0					
ANR	2015271	CompoundStatement		83:9:2123:2123	2014553	0					
ANR	2015272	ExpressionStatement	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"	85:8:2203:2244	2014553	0	True				
ANR	2015273	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"		2014553	0					
ANR	2015274	Callee	decode_q_branch		2014553	0					
ANR	2015275	Identifier	decode_q_branch		2014553	0					
ANR	2015276	ArgumentList	s		2014553	1					
ANR	2015277	Argument	s		2014553	0					
ANR	2015278	Identifier	s		2014553	0					
ANR	2015279	Argument	level + 1		2014553	1					
ANR	2015280	AdditiveExpression	level + 1		2014553	0		+			
ANR	2015281	Identifier	level		2014553	0					
ANR	2015282	PrimaryExpression	1		2014553	1					
ANR	2015283	Argument	2 * x + 0		2014553	2					
ANR	2015284	AdditiveExpression	2 * x + 0		2014553	0		+			
ANR	2015285	MultiplicativeExpression	2 * x		2014553	0		*			
ANR	2015286	PrimaryExpression	2		2014553	0					
ANR	2015287	Identifier	x		2014553	1					
ANR	2015288	PrimaryExpression	0		2014553	1					
ANR	2015289	Argument	2 * y + 0		2014553	3					
ANR	2015290	AdditiveExpression	2 * y + 0		2014553	0		+			
ANR	2015291	MultiplicativeExpression	2 * y		2014553	0		*			
ANR	2015292	PrimaryExpression	2		2014553	0					
ANR	2015293	Identifier	y		2014553	1					
ANR	2015294	PrimaryExpression	0		2014553	1					
ANR	2015295	ExpressionStatement	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"	87:8:2255:2296	2014553	1	True				
ANR	2015296	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"		2014553	0					
ANR	2015297	Callee	decode_q_branch		2014553	0					
ANR	2015298	Identifier	decode_q_branch		2014553	0					
ANR	2015299	ArgumentList	s		2014553	1					
ANR	2015300	Argument	s		2014553	0					
ANR	2015301	Identifier	s		2014553	0					
ANR	2015302	Argument	level + 1		2014553	1					
ANR	2015303	AdditiveExpression	level + 1		2014553	0		+			
ANR	2015304	Identifier	level		2014553	0					
ANR	2015305	PrimaryExpression	1		2014553	1					
ANR	2015306	Argument	2 * x + 1		2014553	2					
ANR	2015307	AdditiveExpression	2 * x + 1		2014553	0		+			
ANR	2015308	MultiplicativeExpression	2 * x		2014553	0		*			
ANR	2015309	PrimaryExpression	2		2014553	0					
ANR	2015310	Identifier	x		2014553	1					
ANR	2015311	PrimaryExpression	1		2014553	1					
ANR	2015312	Argument	2 * y + 0		2014553	3					
ANR	2015313	AdditiveExpression	2 * y + 0		2014553	0		+			
ANR	2015314	MultiplicativeExpression	2 * y		2014553	0		*			
ANR	2015315	PrimaryExpression	2		2014553	0					
ANR	2015316	Identifier	y		2014553	1					
ANR	2015317	PrimaryExpression	0		2014553	1					
ANR	2015318	ExpressionStatement	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"	89:8:2307:2348	2014553	2	True				
ANR	2015319	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"		2014553	0					
ANR	2015320	Callee	decode_q_branch		2014553	0					
ANR	2015321	Identifier	decode_q_branch		2014553	0					
ANR	2015322	ArgumentList	s		2014553	1					
ANR	2015323	Argument	s		2014553	0					
ANR	2015324	Identifier	s		2014553	0					
ANR	2015325	Argument	level + 1		2014553	1					
ANR	2015326	AdditiveExpression	level + 1		2014553	0		+			
ANR	2015327	Identifier	level		2014553	0					
ANR	2015328	PrimaryExpression	1		2014553	1					
ANR	2015329	Argument	2 * x + 0		2014553	2					
ANR	2015330	AdditiveExpression	2 * x + 0		2014553	0		+			
ANR	2015331	MultiplicativeExpression	2 * x		2014553	0		*			
ANR	2015332	PrimaryExpression	2		2014553	0					
ANR	2015333	Identifier	x		2014553	1					
ANR	2015334	PrimaryExpression	0		2014553	1					
ANR	2015335	Argument	2 * y + 1		2014553	3					
ANR	2015336	AdditiveExpression	2 * y + 1		2014553	0		+			
ANR	2015337	MultiplicativeExpression	2 * y		2014553	0		*			
ANR	2015338	PrimaryExpression	2		2014553	0					
ANR	2015339	Identifier	y		2014553	1					
ANR	2015340	PrimaryExpression	1		2014553	1					
ANR	2015341	ExpressionStatement	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"	91:8:2359:2400	2014553	3	True				
ANR	2015342	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"		2014553	0					
ANR	2015343	Callee	decode_q_branch		2014553	0					
ANR	2015344	Identifier	decode_q_branch		2014553	0					
ANR	2015345	ArgumentList	s		2014553	1					
ANR	2015346	Argument	s		2014553	0					
ANR	2015347	Identifier	s		2014553	0					
ANR	2015348	Argument	level + 1		2014553	1					
ANR	2015349	AdditiveExpression	level + 1		2014553	0		+			
ANR	2015350	Identifier	level		2014553	0					
ANR	2015351	PrimaryExpression	1		2014553	1					
ANR	2015352	Argument	2 * x + 1		2014553	2					
ANR	2015353	AdditiveExpression	2 * x + 1		2014553	0		+			
ANR	2015354	MultiplicativeExpression	2 * x		2014553	0		*			
ANR	2015355	PrimaryExpression	2		2014553	0					
ANR	2015356	Identifier	x		2014553	1					
ANR	2015357	PrimaryExpression	1		2014553	1					
ANR	2015358	Argument	2 * y + 1		2014553	3					
ANR	2015359	AdditiveExpression	2 * y + 1		2014553	0		+			
ANR	2015360	MultiplicativeExpression	2 * y		2014553	0		*			
ANR	2015361	PrimaryExpression	2		2014553	0					
ANR	2015362	Identifier	y		2014553	1					
ANR	2015363	PrimaryExpression	1		2014553	1					
ANR	2015364	ReturnType	static void		2014553	1					
ANR	2015365	Identifier	decode_q_branch		2014553	2					
ANR	2015366	ParameterList	"SnowContext * s , int level , int x , int y"		2014553	3					
ANR	2015367	Parameter	SnowContext * s	1:28:28:41	2014553	0	True				
ANR	2015368	ParameterType	SnowContext *		2014553	0					
ANR	2015369	Identifier	s		2014553	1					
ANR	2015370	Parameter	int level	1:44:44:52	2014553	1	True				
ANR	2015371	ParameterType	int		2014553	0					
ANR	2015372	Identifier	level		2014553	1					
ANR	2015373	Parameter	int x	1:55:55:59	2014553	2	True				
ANR	2015374	ParameterType	int		2014553	0					
ANR	2015375	Identifier	x		2014553	1					
ANR	2015376	Parameter	int y	1:62:62:66	2014553	3	True				
ANR	2015377	ParameterType	int		2014553	0					
ANR	2015378	Identifier	y		2014553	1					
ANR	2015379	CFGEntryNode	ENTRY		2014553		True				
ANR	2015380	CFGExitNode	EXIT		2014553		True				
ANR	2015381	Symbol	s -> b_width		2014553						
ANR	2015382	Symbol	s -> keyframe		2014553						
ANR	2015383	Symbol	type		2014553						
ANR	2015384	Symbol	left -> ref		2014553						
ANR	2015385	Symbol	& null_block		2014553						
ANR	2015386	Symbol	ref		2014553						
ANR	2015387	Symbol	* left -> color		2014553						
ANR	2015388	Symbol	tr -> mx		2014553						
ANR	2015389	Symbol	left -> mx		2014553						
ANR	2015390	Symbol	tr -> my		2014553						
ANR	2015391	Symbol	null_block . mx		2014553						
ANR	2015392	Symbol	left -> my		2014553						
ANR	2015393	Symbol	null_block . my		2014553						
ANR	2015394	Symbol	* left		2014553						
ANR	2015395	Symbol	get_rac		2014553						
ANR	2015396	Symbol	level		2014553						
ANR	2015397	Symbol	* tr		2014553						
ANR	2015398	Symbol	index		2014553						
ANR	2015399	Symbol	* * left		2014553						
ANR	2015400	Symbol	left -> level		2014553						
ANR	2015401	Symbol	top -> level		2014553						
ANR	2015402	Symbol	mx		2014553						
ANR	2015403	Symbol	my		2014553						
ANR	2015404	Symbol	& s -> c		2014553						
ANR	2015405	Symbol	top -> type		2014553						
ANR	2015406	Symbol	left		2014553						
ANR	2015407	Symbol	s -> block_state		2014553						
ANR	2015408	Symbol	trx		2014553						
ANR	2015409	Symbol	mx_context		2014553						
ANR	2015410	Symbol	* tl		2014553						
ANR	2015411	Symbol	av_log2		2014553						
ANR	2015412	Symbol	* top		2014553						
ANR	2015413	Symbol	get_symbol		2014553						
ANR	2015414	Symbol	tr -> level		2014553						
ANR	2015415	Symbol	* null_block . color		2014553						
ANR	2015416	Symbol	tl -> level		2014553						
ANR	2015417	Symbol	left -> color		2014553						
ANR	2015418	Symbol	s -> block_max_depth		2014553						
ANR	2015419	Symbol	top -> ref		2014553						
ANR	2015420	Symbol	top		2014553						
ANR	2015421	Symbol	cb		2014553						
ANR	2015422	Symbol	ref_context		2014553						
ANR	2015423	Symbol	top -> my		2014553						
ANR	2015424	Symbol	null_block . color		2014553						
ANR	2015425	Symbol	BLOCK_INTRA		2014553						
ANR	2015426	Symbol	left -> type		2014553						
ANR	2015427	Symbol	null_block . ref		2014553						
ANR	2015428	Symbol	s_context		2014553						
ANR	2015429	Symbol	FFABS		2014553						
ANR	2015430	Symbol	l		2014553						
ANR	2015431	Symbol	* null_block		2014553						
ANR	2015432	Symbol	cr		2014553						
ANR	2015433	Symbol	s		2014553						
ANR	2015434	Symbol	& mx		2014553						
ANR	2015435	Symbol	w		2014553						
ANR	2015436	Symbol	& my		2014553						
ANR	2015437	Symbol	x		2014553						
ANR	2015438	Symbol	tl		2014553						
ANR	2015439	Symbol	my_context		2014553						
ANR	2015440	Symbol	y		2014553						
ANR	2015441	Symbol	s -> ref_frames		2014553						
ANR	2015442	Symbol	rem_depth		2014553						
ANR	2015443	Symbol	null_block		2014553						
ANR	2015444	Symbol	* s		2014553						
ANR	2015445	Symbol	s -> block		2014553						
ANR	2015446	Symbol	tr		2014553						
ANR	2015447	Symbol	top -> mx		2014553						
