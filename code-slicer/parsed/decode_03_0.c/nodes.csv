command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1678486	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_03_0.c								
ANR	1678487	Function	decode	1:0:0:1305							
ANR	1678488	FunctionDef	"decode (RA288Context * ractx , float gain , int cb_coef)"		1678487	0					
ANR	1678489	CompoundStatement		3:0:66:1305	1678487	0					
ANR	1678490	IdentifierDeclStatement	"int i , j ;"	5:4:73:81	1678487	0	True				
ANR	1678491	IdentifierDecl	i		1678487	0					
ANR	1678492	IdentifierDeclType	int		1678487	0					
ANR	1678493	Identifier	i		1678487	1					
ANR	1678494	IdentifierDecl	j		1678487	1					
ANR	1678495	IdentifierDeclType	int		1678487	0					
ANR	1678496	Identifier	j		1678487	1					
ANR	1678497	IdentifierDeclStatement	double sumsum ;	7:4:88:101	1678487	1	True				
ANR	1678498	IdentifierDecl	sumsum		1678487	0					
ANR	1678499	IdentifierDeclType	double		1678487	0					
ANR	1678500	Identifier	sumsum		1678487	1					
ANR	1678501	IdentifierDeclStatement	"float sum , buffer [ 5 ] ;"	9:4:108:128	1678487	2	True				
ANR	1678502	IdentifierDecl	sum		1678487	0					
ANR	1678503	IdentifierDeclType	float		1678487	0					
ANR	1678504	Identifier	sum		1678487	1					
ANR	1678505	IdentifierDecl	buffer [ 5 ]		1678487	1					
ANR	1678506	IdentifierDeclType	float [ 5 ]		1678487	0					
ANR	1678507	Identifier	buffer		1678487	1					
ANR	1678508	PrimaryExpression	5		1678487	2					
ANR	1678509	ExpressionStatement	"memmove ( ractx -> sp_block + 5 , ractx -> sp_block , 36 * sizeof ( * ractx -> sp_block ) )"	13:4:137:211	1678487	3	True				
ANR	1678510	CallExpression	"memmove ( ractx -> sp_block + 5 , ractx -> sp_block , 36 * sizeof ( * ractx -> sp_block ) )"		1678487	0					
ANR	1678511	Callee	memmove		1678487	0					
ANR	1678512	Identifier	memmove		1678487	0					
ANR	1678513	ArgumentList	ractx -> sp_block + 5		1678487	1					
ANR	1678514	Argument	ractx -> sp_block + 5		1678487	0					
ANR	1678515	AdditiveExpression	ractx -> sp_block + 5		1678487	0		+			
ANR	1678516	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678517	Identifier	ractx		1678487	0					
ANR	1678518	Identifier	sp_block		1678487	1					
ANR	1678519	PrimaryExpression	5		1678487	1					
ANR	1678520	Argument	ractx -> sp_block		1678487	1					
ANR	1678521	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678522	Identifier	ractx		1678487	0					
ANR	1678523	Identifier	sp_block		1678487	1					
ANR	1678524	Argument	36 * sizeof ( * ractx -> sp_block )		1678487	2					
ANR	1678525	MultiplicativeExpression	36 * sizeof ( * ractx -> sp_block )		1678487	0		*			
ANR	1678526	PrimaryExpression	36		1678487	0					
ANR	1678527	SizeofExpression	sizeof ( * ractx -> sp_block )		1678487	1					
ANR	1678528	Sizeof	sizeof		1678487	0					
ANR	1678529	UnaryOperationExpression	* ractx -> sp_block		1678487	1					
ANR	1678530	UnaryOperator	*		1678487	0					
ANR	1678531	PtrMemberAccess	ractx -> sp_block		1678487	1					
ANR	1678532	Identifier	ractx		1678487	0					
ANR	1678533	Identifier	sp_block		1678487	1					
ANR	1678534	ForStatement	for ( i = 4 ; i >= 0 ; i -- )		1678487	4					
ANR	1678535	ForInit	i = 4 ;	17:9:225:228	1678487	0	True				
ANR	1678536	AssignmentExpression	i = 4		1678487	0		=			
ANR	1678537	Identifier	i		1678487	0					
ANR	1678538	PrimaryExpression	4		1678487	1					
ANR	1678539	Condition	i >= 0	17:14:230:235	1678487	1	True				
ANR	1678540	RelationalExpression	i >= 0		1678487	0		>=			
ANR	1678541	Identifier	i		1678487	0					
ANR	1678542	PrimaryExpression	0		1678487	1					
ANR	1678543	PostIncDecOperationExpression	i --	17:22:238:240	1678487	2	True				
ANR	1678544	Identifier	i		1678487	0					
ANR	1678545	IncDec	--		1678487	1					
ANR	1678546	ExpressionStatement	"ractx -> sp_block [ i ] = - scalar_product_float ( ractx -> sp_block + i + 1 , ractx -> sp_lpc , 36 )"	19:8:252:384	1678487	3	True				
ANR	1678547	AssignmentExpression	"ractx -> sp_block [ i ] = - scalar_product_float ( ractx -> sp_block + i + 1 , ractx -> sp_lpc , 36 )"		1678487	0		=			
ANR	1678548	ArrayIndexing	ractx -> sp_block [ i ]		1678487	0					
ANR	1678549	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678550	Identifier	ractx		1678487	0					
ANR	1678551	Identifier	sp_block		1678487	1					
ANR	1678552	Identifier	i		1678487	1					
ANR	1678553	UnaryOperationExpression	"- scalar_product_float ( ractx -> sp_block + i + 1 , ractx -> sp_lpc , 36 )"		1678487	1					
ANR	1678554	UnaryOperator	-		1678487	0					
ANR	1678555	CallExpression	"scalar_product_float ( ractx -> sp_block + i + 1 , ractx -> sp_lpc , 36 )"		1678487	1					
ANR	1678556	Callee	scalar_product_float		1678487	0					
ANR	1678557	Identifier	scalar_product_float		1678487	0					
ANR	1678558	ArgumentList	ractx -> sp_block + i + 1		1678487	1					
ANR	1678559	Argument	ractx -> sp_block + i + 1		1678487	0					
ANR	1678560	AdditiveExpression	ractx -> sp_block + i + 1		1678487	0		+			
ANR	1678561	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678562	Identifier	ractx		1678487	0					
ANR	1678563	Identifier	sp_block		1678487	1					
ANR	1678564	AdditiveExpression	i + 1		1678487	1		+			
ANR	1678565	Identifier	i		1678487	0					
ANR	1678566	PrimaryExpression	1		1678487	1					
ANR	1678567	Argument	ractx -> sp_lpc		1678487	1					
ANR	1678568	PtrMemberAccess	ractx -> sp_lpc		1678487	0					
ANR	1678569	Identifier	ractx		1678487	0					
ANR	1678570	Identifier	sp_lpc		1678487	1					
ANR	1678571	Argument	36		1678487	2					
ANR	1678572	PrimaryExpression	36		1678487	0					
ANR	1678573	ExpressionStatement	"sum = 32. - scalar_product_float ( ractx -> gain_lpc , ractx -> gain_block , 10 )"	27:4:427:499	1678487	5	True				
ANR	1678574	AssignmentExpression	"sum = 32. - scalar_product_float ( ractx -> gain_lpc , ractx -> gain_block , 10 )"		1678487	0		=			
ANR	1678575	Identifier	sum		1678487	0					
ANR	1678576	AdditiveExpression	"32. - scalar_product_float ( ractx -> gain_lpc , ractx -> gain_block , 10 )"		1678487	1		-			
ANR	1678577	PrimaryExpression	32.		1678487	0					
ANR	1678578	CallExpression	"scalar_product_float ( ractx -> gain_lpc , ractx -> gain_block , 10 )"		1678487	1					
ANR	1678579	Callee	scalar_product_float		1678487	0					
ANR	1678580	Identifier	scalar_product_float		1678487	0					
ANR	1678581	ArgumentList	ractx -> gain_lpc		1678487	1					
ANR	1678582	Argument	ractx -> gain_lpc		1678487	0					
ANR	1678583	PtrMemberAccess	ractx -> gain_lpc		1678487	0					
ANR	1678584	Identifier	ractx		1678487	0					
ANR	1678585	Identifier	gain_lpc		1678487	1					
ANR	1678586	Argument	ractx -> gain_block		1678487	1					
ANR	1678587	PtrMemberAccess	ractx -> gain_block		1678487	0					
ANR	1678588	Identifier	ractx		1678487	0					
ANR	1678589	Identifier	gain_block		1678487	1					
ANR	1678590	Argument	10		1678487	2					
ANR	1678591	PrimaryExpression	10		1678487	0					
ANR	1678592	ExpressionStatement	"sum = av_clipf ( sum , 0 , 60 )"	33:4:542:568	1678487	6	True				
ANR	1678593	AssignmentExpression	"sum = av_clipf ( sum , 0 , 60 )"		1678487	0		=			
ANR	1678594	Identifier	sum		1678487	0					
ANR	1678595	CallExpression	"av_clipf ( sum , 0 , 60 )"		1678487	1					
ANR	1678596	Callee	av_clipf		1678487	0					
ANR	1678597	Identifier	av_clipf		1678487	0					
ANR	1678598	ArgumentList	sum		1678487	1					
ANR	1678599	Argument	sum		1678487	0					
ANR	1678600	Identifier	sum		1678487	0					
ANR	1678601	Argument	0		1678487	1					
ANR	1678602	PrimaryExpression	0		1678487	0					
ANR	1678603	Argument	60		1678487	2					
ANR	1678604	PrimaryExpression	60		1678487	0					
ANR	1678605	ExpressionStatement	sumsum = exp ( sum * 0.1151292546497 ) * gain	39:4:611:653	1678487	7	True				
ANR	1678606	AssignmentExpression	sumsum = exp ( sum * 0.1151292546497 ) * gain		1678487	0		=			
ANR	1678607	Identifier	sumsum		1678487	0					
ANR	1678608	MultiplicativeExpression	exp ( sum * 0.1151292546497 ) * gain		1678487	1		*			
ANR	1678609	CallExpression	exp ( sum * 0.1151292546497 )		1678487	0					
ANR	1678610	Callee	exp		1678487	0					
ANR	1678611	Identifier	exp		1678487	0					
ANR	1678612	ArgumentList	sum * 0.1151292546497		1678487	1					
ANR	1678613	Argument	sum * 0.1151292546497		1678487	0					
ANR	1678614	MultiplicativeExpression	sum * 0.1151292546497		1678487	0		*			
ANR	1678615	Identifier	sum		1678487	0					
ANR	1678616	PrimaryExpression	0.1151292546497		1678487	1					
ANR	1678617	Identifier	gain		1678487	1					
ANR	1678618	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		1678487	8					
ANR	1678619	ForInit	i = 0 ;	43:9:695:698	1678487	0	True				
ANR	1678620	AssignmentExpression	i = 0		1678487	0		=			
ANR	1678621	Identifier	i		1678487	0					
ANR	1678622	PrimaryExpression	0		1678487	1					
ANR	1678623	Condition	i < 5	43:14:700:704	1678487	1	True				
ANR	1678624	RelationalExpression	i < 5		1678487	0		<			
ANR	1678625	Identifier	i		1678487	0					
ANR	1678626	PrimaryExpression	5		1678487	1					
ANR	1678627	PostIncDecOperationExpression	i ++	43:21:707:709	1678487	2	True				
ANR	1678628	Identifier	i		1678487	0					
ANR	1678629	IncDec	++		1678487	1					
ANR	1678630	ExpressionStatement	buffer [ i ] = codetable [ cb_coef ] [ i ] * sumsum	45:8:721:763	1678487	3	True				
ANR	1678631	AssignmentExpression	buffer [ i ] = codetable [ cb_coef ] [ i ] * sumsum		1678487	0		=			
ANR	1678632	ArrayIndexing	buffer [ i ]		1678487	0					
ANR	1678633	Identifier	buffer		1678487	0					
ANR	1678634	Identifier	i		1678487	1					
ANR	1678635	MultiplicativeExpression	codetable [ cb_coef ] [ i ] * sumsum		1678487	1		*			
ANR	1678636	ArrayIndexing	codetable [ cb_coef ] [ i ]		1678487	0					
ANR	1678637	ArrayIndexing	codetable [ cb_coef ]		1678487	0					
ANR	1678638	Identifier	codetable		1678487	0					
ANR	1678639	Identifier	cb_coef		1678487	1					
ANR	1678640	Identifier	i		1678487	1					
ANR	1678641	Identifier	sumsum		1678487	1					
ANR	1678642	ExpressionStatement	"sum = scalar_product_float ( buffer , buffer , 5 ) / 5"	49:4:772:821	1678487	9	True				
ANR	1678643	AssignmentExpression	"sum = scalar_product_float ( buffer , buffer , 5 ) / 5"		1678487	0		=			
ANR	1678644	Identifier	sum		1678487	0					
ANR	1678645	MultiplicativeExpression	"scalar_product_float ( buffer , buffer , 5 ) / 5"		1678487	1		/			
ANR	1678646	CallExpression	"scalar_product_float ( buffer , buffer , 5 )"		1678487	0					
ANR	1678647	Callee	scalar_product_float		1678487	0					
ANR	1678648	Identifier	scalar_product_float		1678487	0					
ANR	1678649	ArgumentList	buffer		1678487	1					
ANR	1678650	Argument	buffer		1678487	0					
ANR	1678651	Identifier	buffer		1678487	0					
ANR	1678652	Argument	buffer		1678487	1					
ANR	1678653	Identifier	buffer		1678487	0					
ANR	1678654	Argument	5		1678487	2					
ANR	1678655	PrimaryExpression	5		1678487	0					
ANR	1678656	PrimaryExpression	5		1678487	1					
ANR	1678657	ExpressionStatement	"sum = FFMAX ( sum , 1 )"	53:4:830:849	1678487	10	True				
ANR	1678658	AssignmentExpression	"sum = FFMAX ( sum , 1 )"		1678487	0		=			
ANR	1678659	Identifier	sum		1678487	0					
ANR	1678660	CallExpression	"FFMAX ( sum , 1 )"		1678487	1					
ANR	1678661	Callee	FFMAX		1678487	0					
ANR	1678662	Identifier	FFMAX		1678487	0					
ANR	1678663	ArgumentList	sum		1678487	1					
ANR	1678664	Argument	sum		1678487	0					
ANR	1678665	Identifier	sum		1678487	0					
ANR	1678666	Argument	1		1678487	1					
ANR	1678667	PrimaryExpression	1		1678487	0					
ANR	1678668	ExpressionStatement	"memmove ( ractx -> gain_block , ractx -> gain_block - 1 , 10 * sizeof ( * ractx -> gain_block ) )"	59:4:885:980	1678487	11	True				
ANR	1678669	CallExpression	"memmove ( ractx -> gain_block , ractx -> gain_block - 1 , 10 * sizeof ( * ractx -> gain_block ) )"		1678487	0					
ANR	1678670	Callee	memmove		1678487	0					
ANR	1678671	Identifier	memmove		1678487	0					
ANR	1678672	ArgumentList	ractx -> gain_block		1678487	1					
ANR	1678673	Argument	ractx -> gain_block		1678487	0					
ANR	1678674	PtrMemberAccess	ractx -> gain_block		1678487	0					
ANR	1678675	Identifier	ractx		1678487	0					
ANR	1678676	Identifier	gain_block		1678487	1					
ANR	1678677	Argument	ractx -> gain_block - 1		1678487	1					
ANR	1678678	AdditiveExpression	ractx -> gain_block - 1		1678487	0		-			
ANR	1678679	PtrMemberAccess	ractx -> gain_block		1678487	0					
ANR	1678680	Identifier	ractx		1678487	0					
ANR	1678681	Identifier	gain_block		1678487	1					
ANR	1678682	PrimaryExpression	1		1678487	1					
ANR	1678683	Argument	10 * sizeof ( * ractx -> gain_block )		1678487	2					
ANR	1678684	MultiplicativeExpression	10 * sizeof ( * ractx -> gain_block )		1678487	0		*			
ANR	1678685	PrimaryExpression	10		1678487	0					
ANR	1678686	SizeofExpression	sizeof ( * ractx -> gain_block )		1678487	1					
ANR	1678687	Sizeof	sizeof		1678487	0					
ANR	1678688	UnaryOperationExpression	* ractx -> gain_block		1678487	1					
ANR	1678689	UnaryOperator	*		1678487	0					
ANR	1678690	PtrMemberAccess	ractx -> gain_block		1678487	1					
ANR	1678691	Identifier	ractx		1678487	0					
ANR	1678692	Identifier	gain_block		1678487	1					
ANR	1678693	ExpressionStatement	* ractx -> gain_block = 10 * log10 ( sum ) - 32	65:4:989:1030	1678487	12	True				
ANR	1678694	AssignmentExpression	* ractx -> gain_block = 10 * log10 ( sum ) - 32		1678487	0		=			
ANR	1678695	UnaryOperationExpression	* ractx -> gain_block		1678487	0					
ANR	1678696	UnaryOperator	*		1678487	0					
ANR	1678697	PtrMemberAccess	ractx -> gain_block		1678487	1					
ANR	1678698	Identifier	ractx		1678487	0					
ANR	1678699	Identifier	gain_block		1678487	1					
ANR	1678700	AdditiveExpression	10 * log10 ( sum ) - 32		1678487	1		-			
ANR	1678701	MultiplicativeExpression	10 * log10 ( sum )		1678487	0		*			
ANR	1678702	PrimaryExpression	10		1678487	0					
ANR	1678703	CallExpression	log10 ( sum )		1678487	1					
ANR	1678704	Callee	log10		1678487	0					
ANR	1678705	Identifier	log10		1678487	0					
ANR	1678706	ArgumentList	sum		1678487	1					
ANR	1678707	Argument	sum		1678487	0					
ANR	1678708	Identifier	sum		1678487	0					
ANR	1678709	PrimaryExpression	32		1678487	1					
ANR	1678710	ForStatement	for ( i = 1 ; i < 5 ; i ++ )		1678487	13					
ANR	1678711	ForInit	i = 1 ;	69:9:1044:1047	1678487	0	True				
ANR	1678712	AssignmentExpression	i = 1		1678487	0		=			
ANR	1678713	Identifier	i		1678487	0					
ANR	1678714	PrimaryExpression	1		1678487	1					
ANR	1678715	Condition	i < 5	69:14:1049:1053	1678487	1	True				
ANR	1678716	RelationalExpression	i < 5		1678487	0		<			
ANR	1678717	Identifier	i		1678487	0					
ANR	1678718	PrimaryExpression	5		1678487	1					
ANR	1678719	PostIncDecOperationExpression	i ++	69:21:1056:1058	1678487	2	True				
ANR	1678720	Identifier	i		1678487	0					
ANR	1678721	IncDec	++		1678487	1					
ANR	1678722	ForStatement	for ( j = i - 1 ; j >= 0 ; j -- )		1678487	3					
ANR	1678723	ForInit	j = i - 1 ;	71:13:1075:1080	1678487	0	True				
ANR	1678724	AssignmentExpression	j = i - 1		1678487	0		=			
ANR	1678725	Identifier	j		1678487	0					
ANR	1678726	AdditiveExpression	i - 1		1678487	1		-			
ANR	1678727	Identifier	i		1678487	0					
ANR	1678728	PrimaryExpression	1		1678487	1					
ANR	1678729	Condition	j >= 0	71:20:1082:1087	1678487	1	True				
ANR	1678730	RelationalExpression	j >= 0		1678487	0		>=			
ANR	1678731	Identifier	j		1678487	0					
ANR	1678732	PrimaryExpression	0		1678487	1					
ANR	1678733	PostIncDecOperationExpression	j --	71:28:1090:1092	1678487	2	True				
ANR	1678734	Identifier	j		1678487	0					
ANR	1678735	IncDec	--		1678487	1					
ANR	1678736	ExpressionStatement	buffer [ i ] -= ractx -> sp_lpc [ i - j - 1 ] * buffer [ j ]	73:12:1108:1153	1678487	3	True				
ANR	1678737	AssignmentExpression	buffer [ i ] -= ractx -> sp_lpc [ i - j - 1 ] * buffer [ j ]		1678487	0		-=			
ANR	1678738	ArrayIndexing	buffer [ i ]		1678487	0					
ANR	1678739	Identifier	buffer		1678487	0					
ANR	1678740	Identifier	i		1678487	1					
ANR	1678741	MultiplicativeExpression	ractx -> sp_lpc [ i - j - 1 ] * buffer [ j ]		1678487	1		*			
ANR	1678742	ArrayIndexing	ractx -> sp_lpc [ i - j - 1 ]		1678487	0					
ANR	1678743	PtrMemberAccess	ractx -> sp_lpc		1678487	0					
ANR	1678744	Identifier	ractx		1678487	0					
ANR	1678745	Identifier	sp_lpc		1678487	1					
ANR	1678746	AdditiveExpression	i - j - 1		1678487	1		-			
ANR	1678747	Identifier	i		1678487	0					
ANR	1678748	AdditiveExpression	j - 1		1678487	1		-			
ANR	1678749	Identifier	j		1678487	0					
ANR	1678750	PrimaryExpression	1		1678487	1					
ANR	1678751	ArrayIndexing	buffer [ j ]		1678487	1					
ANR	1678752	Identifier	buffer		1678487	0					
ANR	1678753	Identifier	j		1678487	1					
ANR	1678754	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		1678487	14					
ANR	1678755	ForInit	i = 0 ;	79:9:1185:1188	1678487	0	True				
ANR	1678756	AssignmentExpression	i = 0		1678487	0		=			
ANR	1678757	Identifier	i		1678487	0					
ANR	1678758	PrimaryExpression	0		1678487	1					
ANR	1678759	Condition	i < 5	79:14:1190:1194	1678487	1	True				
ANR	1678760	RelationalExpression	i < 5		1678487	0		<			
ANR	1678761	Identifier	i		1678487	0					
ANR	1678762	PrimaryExpression	5		1678487	1					
ANR	1678763	PostIncDecOperationExpression	i ++	79:21:1197:1199	1678487	2	True				
ANR	1678764	Identifier	i		1678487	0					
ANR	1678765	IncDec	++		1678487	1					
ANR	1678766	ExpressionStatement	"ractx -> sp_block [ 4 - i ] = av_clipf ( ractx -> sp_block [ 4 - i ] + buffer [ i ] , - 4095 , 4095 )"	81:8:1211:1302	1678487	3	True				
ANR	1678767	AssignmentExpression	"ractx -> sp_block [ 4 - i ] = av_clipf ( ractx -> sp_block [ 4 - i ] + buffer [ i ] , - 4095 , 4095 )"		1678487	0		=			
ANR	1678768	ArrayIndexing	ractx -> sp_block [ 4 - i ]		1678487	0					
ANR	1678769	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678770	Identifier	ractx		1678487	0					
ANR	1678771	Identifier	sp_block		1678487	1					
ANR	1678772	AdditiveExpression	4 - i		1678487	1		-			
ANR	1678773	PrimaryExpression	4		1678487	0					
ANR	1678774	Identifier	i		1678487	1					
ANR	1678775	CallExpression	"av_clipf ( ractx -> sp_block [ 4 - i ] + buffer [ i ] , - 4095 , 4095 )"		1678487	1					
ANR	1678776	Callee	av_clipf		1678487	0					
ANR	1678777	Identifier	av_clipf		1678487	0					
ANR	1678778	ArgumentList	ractx -> sp_block [ 4 - i ] + buffer [ i ]		1678487	1					
ANR	1678779	Argument	ractx -> sp_block [ 4 - i ] + buffer [ i ]		1678487	0					
ANR	1678780	AdditiveExpression	ractx -> sp_block [ 4 - i ] + buffer [ i ]		1678487	0		+			
ANR	1678781	ArrayIndexing	ractx -> sp_block [ 4 - i ]		1678487	0					
ANR	1678782	PtrMemberAccess	ractx -> sp_block		1678487	0					
ANR	1678783	Identifier	ractx		1678487	0					
ANR	1678784	Identifier	sp_block		1678487	1					
ANR	1678785	AdditiveExpression	4 - i		1678487	1		-			
ANR	1678786	PrimaryExpression	4		1678487	0					
ANR	1678787	Identifier	i		1678487	1					
ANR	1678788	ArrayIndexing	buffer [ i ]		1678487	1					
ANR	1678789	Identifier	buffer		1678487	0					
ANR	1678790	Identifier	i		1678487	1					
ANR	1678791	Argument	- 4095		1678487	1					
ANR	1678792	UnaryOperationExpression	- 4095		1678487	0					
ANR	1678793	UnaryOperator	-		1678487	0					
ANR	1678794	PrimaryExpression	4095		1678487	1					
ANR	1678795	Argument	4095		1678487	2					
ANR	1678796	PrimaryExpression	4095		1678487	0					
ANR	1678797	ReturnType	static void		1678487	1					
ANR	1678798	Identifier	decode		1678487	2					
ANR	1678799	ParameterList	"RA288Context * ractx , float gain , int cb_coef"		1678487	3					
ANR	1678800	Parameter	RA288Context * ractx	1:19:19:37	1678487	0	True				
ANR	1678801	ParameterType	RA288Context *		1678487	0					
ANR	1678802	Identifier	ractx		1678487	1					
ANR	1678803	Parameter	float gain	1:40:40:49	1678487	1	True				
ANR	1678804	ParameterType	float		1678487	0					
ANR	1678805	Identifier	gain		1678487	1					
ANR	1678806	Parameter	int cb_coef	1:52:52:62	1678487	2	True				
ANR	1678807	ParameterType	int		1678487	0					
ANR	1678808	Identifier	cb_coef		1678487	1					
ANR	1678809	CFGEntryNode	ENTRY		1678487		True				
ANR	1678810	CFGExitNode	EXIT		1678487		True				
ANR	1678811	Symbol	cb_coef		1678487						
ANR	1678812	Symbol	sumsum		1678487						
ANR	1678813	Symbol	* * cb_coef		1678487						
ANR	1678814	Symbol	log10		1678487						
ANR	1678815	Symbol	sum		1678487						
ANR	1678816	Symbol	ractx -> gain_block		1678487						
ANR	1678817	Symbol	scalar_product_float		1678487						
ANR	1678818	Symbol	* * codetable		1678487						
ANR	1678819	Symbol	ractx -> gain_lpc		1678487						
ANR	1678820	Symbol	gain		1678487						
ANR	1678821	Symbol	* ractx -> sp_block		1678487						
ANR	1678822	Symbol	* * ractx		1678487						
ANR	1678823	Symbol	buffer		1678487						
ANR	1678824	Symbol	exp		1678487						
ANR	1678825	Symbol	* ractx -> sp_lpc		1678487						
ANR	1678826	Symbol	* buffer		1678487						
ANR	1678827	Symbol	i		1678487						
ANR	1678828	Symbol	j		1678487						
ANR	1678829	Symbol	ractx		1678487						
ANR	1678830	Symbol	* codetable		1678487						
ANR	1678831	Symbol	* ractx -> gain_block		1678487						
ANR	1678832	Symbol	ractx -> sp_block		1678487						
ANR	1678833	Symbol	* i		1678487						
ANR	1678834	Symbol	ractx -> sp_lpc		1678487						
ANR	1678835	Symbol	codetable		1678487						
ANR	1678836	Symbol	* j		1678487						
ANR	1678837	Symbol	* ractx		1678487						
ANR	1678838	Symbol	* cb_coef		1678487						
ANR	1678839	Symbol	av_clipf		1678487						
ANR	1678840	Symbol	FFMAX		1678487						
