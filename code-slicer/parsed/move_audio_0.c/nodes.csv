command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5673643	File	/home/p4ultr4n/workplace/ReVeal/raw_code/move_audio_0.c								
ANR	5673644	Function	move_audio	1:0:0:664							
ANR	5673645	FunctionDef	"move_audio (vorbis_enc_context * venc , float * audio , int * samples , int sf_size)"		5673644	0					
ANR	5673646	CompoundStatement		3:0:91:664	5673644	0					
ANR	5673647	IdentifierDeclStatement	AVFrame * cur = NULL ;	5:4:98:117	5673644	0	True				
ANR	5673648	IdentifierDecl	* cur = NULL		5673644	0					
ANR	5673649	IdentifierDeclType	AVFrame *		5673644	0					
ANR	5673650	Identifier	cur		5673644	1					
ANR	5673651	AssignmentExpression	* cur = NULL		5673644	2		=			
ANR	5673652	Identifier	NULL		5673644	0					
ANR	5673653	Identifier	NULL		5673644	1					
ANR	5673654	IdentifierDeclStatement	int frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 ) ;	7:4:124:175	5673644	1	True				
ANR	5673655	IdentifierDecl	frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673644	0					
ANR	5673656	IdentifierDeclType	int		5673644	0					
ANR	5673657	Identifier	frame_size		5673644	1					
ANR	5673658	AssignmentExpression	frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673644	2		=			
ANR	5673659	Identifier	frame_size		5673644	0					
ANR	5673660	ShiftExpression	1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673644	1		<<			
ANR	5673661	PrimaryExpression	1		5673644	0					
ANR	5673662	AdditiveExpression	venc -> log2_blocksize [ 1 ] - 1		5673644	1		-			
ANR	5673663	ArrayIndexing	venc -> log2_blocksize [ 1 ]		5673644	0					
ANR	5673664	PtrMemberAccess	venc -> log2_blocksize		5673644	0					
ANR	5673665	Identifier	venc		5673644	0					
ANR	5673666	Identifier	log2_blocksize		5673644	1					
ANR	5673667	PrimaryExpression	1		5673644	1					
ANR	5673668	PrimaryExpression	1		5673644	1					
ANR	5673669	IdentifierDeclStatement	int subframes = frame_size / sf_size ;	9:4:182:218	5673644	2	True				
ANR	5673670	IdentifierDecl	subframes = frame_size / sf_size		5673644	0					
ANR	5673671	IdentifierDeclType	int		5673644	0					
ANR	5673672	Identifier	subframes		5673644	1					
ANR	5673673	AssignmentExpression	subframes = frame_size / sf_size		5673644	2		=			
ANR	5673674	Identifier	subframes		5673644	0					
ANR	5673675	MultiplicativeExpression	frame_size / sf_size		5673644	1		/			
ANR	5673676	Identifier	frame_size		5673644	0					
ANR	5673677	Identifier	sf_size		5673644	1					
ANR	5673678	ForStatement	for ( int sf = 0 ; sf < subframes ; sf ++ )		5673644	3					
ANR	5673679	ForInit	int sf = 0 ;	13:9:232:242	5673644	0	True				
ANR	5673680	IdentifierDeclStatement	int sf = 0 ;		5673644	0					
ANR	5673681	IdentifierDecl	sf = 0		5673644	0					
ANR	5673682	IdentifierDeclType	int		5673644	0					
ANR	5673683	Identifier	sf		5673644	1					
ANR	5673684	AssignmentExpression	sf = 0		5673644	2		=			
ANR	5673685	Identifier	sf		5673644	0					
ANR	5673686	PrimaryExpression	0		5673644	1					
ANR	5673687	Condition	sf < subframes	13:21:244:257	5673644	1	True				
ANR	5673688	RelationalExpression	sf < subframes		5673644	0		<			
ANR	5673689	Identifier	sf		5673644	0					
ANR	5673690	Identifier	subframes		5673644	1					
ANR	5673691	PostIncDecOperationExpression	sf ++	13:37:260:263	5673644	2	True				
ANR	5673692	Identifier	sf		5673644	0					
ANR	5673693	IncDec	++		5673644	1					
ANR	5673694	CompoundStatement		11:43:174:174	5673644	3					
ANR	5673695	ExpressionStatement	cur = ff_bufqueue_get ( & venc -> bufqueue )	15:8:277:315	5673644	0	True				
ANR	5673696	AssignmentExpression	cur = ff_bufqueue_get ( & venc -> bufqueue )		5673644	0		=			
ANR	5673697	Identifier	cur		5673644	0					
ANR	5673698	CallExpression	ff_bufqueue_get ( & venc -> bufqueue )		5673644	1					
ANR	5673699	Callee	ff_bufqueue_get		5673644	0					
ANR	5673700	Identifier	ff_bufqueue_get		5673644	0					
ANR	5673701	ArgumentList	& venc -> bufqueue		5673644	1					
ANR	5673702	Argument	& venc -> bufqueue		5673644	0					
ANR	5673703	UnaryOperationExpression	& venc -> bufqueue		5673644	0					
ANR	5673704	UnaryOperator	&		5673644	0					
ANR	5673705	PtrMemberAccess	venc -> bufqueue		5673644	1					
ANR	5673706	Identifier	venc		5673644	0					
ANR	5673707	Identifier	bufqueue		5673644	1					
ANR	5673708	ExpressionStatement	* samples += cur -> nb_samples	17:8:326:353	5673644	1	True				
ANR	5673709	AssignmentExpression	* samples += cur -> nb_samples		5673644	0		+=			
ANR	5673710	UnaryOperationExpression	* samples		5673644	0					
ANR	5673711	UnaryOperator	*		5673644	0					
ANR	5673712	Identifier	samples		5673644	1					
ANR	5673713	PtrMemberAccess	cur -> nb_samples		5673644	1					
ANR	5673714	Identifier	cur		5673644	0					
ANR	5673715	Identifier	nb_samples		5673644	1					
ANR	5673716	ForStatement	for ( int ch = 0 ; ch < venc -> channels ; ch ++ )		5673644	2					
ANR	5673717	ForInit	int ch = 0 ;	21:13:371:381	5673644	0	True				
ANR	5673718	IdentifierDeclStatement	int ch = 0 ;		5673644	0					
ANR	5673719	IdentifierDecl	ch = 0		5673644	0					
ANR	5673720	IdentifierDeclType	int		5673644	0					
ANR	5673721	Identifier	ch		5673644	1					
ANR	5673722	AssignmentExpression	ch = 0		5673644	2		=			
ANR	5673723	Identifier	ch		5673644	0					
ANR	5673724	PrimaryExpression	0		5673644	1					
ANR	5673725	Condition	ch < venc -> channels	21:25:383:401	5673644	1	True				
ANR	5673726	RelationalExpression	ch < venc -> channels		5673644	0		<			
ANR	5673727	Identifier	ch		5673644	0					
ANR	5673728	PtrMemberAccess	venc -> channels		5673644	1					
ANR	5673729	Identifier	venc		5673644	0					
ANR	5673730	Identifier	channels		5673644	1					
ANR	5673731	PostIncDecOperationExpression	ch ++	21:46:404:407	5673644	2	True				
ANR	5673732	Identifier	ch		5673644	0					
ANR	5673733	IncDec	++		5673644	1					
ANR	5673734	CompoundStatement		23:12:401:452	5673644	3					
ANR	5673735	IdentifierDeclStatement	const float * input = ( float * ) cur -> extended_data [ ch ] ;	23:12:425:478	5673644	0	True				
ANR	5673736	IdentifierDecl	* input = ( float * ) cur -> extended_data [ ch ]		5673644	0					
ANR	5673737	IdentifierDeclType	const float *		5673644	0					
ANR	5673738	Identifier	input		5673644	1					
ANR	5673739	AssignmentExpression	* input = ( float * ) cur -> extended_data [ ch ]		5673644	2		=			
ANR	5673740	Identifier	input		5673644	0					
ANR	5673741	CastExpression	( float * ) cur -> extended_data [ ch ]		5673644	1					
ANR	5673742	CastTarget	float *		5673644	0					
ANR	5673743	ArrayIndexing	cur -> extended_data [ ch ]		5673644	1					
ANR	5673744	PtrMemberAccess	cur -> extended_data		5673644	0					
ANR	5673745	Identifier	cur		5673644	0					
ANR	5673746	Identifier	extended_data		5673644	1					
ANR	5673747	Identifier	ch		5673644	1					
ANR	5673748	IdentifierDeclStatement	const size_t len = cur -> nb_samples * sizeof ( float ) ;	25:12:493:544	5673644	1	True				
ANR	5673749	IdentifierDecl	len = cur -> nb_samples * sizeof ( float )		5673644	0					
ANR	5673750	IdentifierDeclType	const size_t		5673644	0					
ANR	5673751	Identifier	len		5673644	1					
ANR	5673752	AssignmentExpression	len = cur -> nb_samples * sizeof ( float )		5673644	2		=			
ANR	5673753	Identifier	len		5673644	0					
ANR	5673754	MultiplicativeExpression	cur -> nb_samples * sizeof ( float )		5673644	1		*			
ANR	5673755	PtrMemberAccess	cur -> nb_samples		5673644	0					
ANR	5673756	Identifier	cur		5673644	0					
ANR	5673757	Identifier	nb_samples		5673644	1					
ANR	5673758	SizeofExpression	sizeof ( float )		5673644	1					
ANR	5673759	Sizeof	sizeof		5673644	0					
ANR	5673760	SizeofOperand	float		5673644	1					
ANR	5673761	ExpressionStatement	"memcpy ( audio + ch * frame_size + sf * sf_size , input , len )"	27:12:559:613	5673644	2	True				
ANR	5673762	CallExpression	"memcpy ( audio + ch * frame_size + sf * sf_size , input , len )"		5673644	0					
ANR	5673763	Callee	memcpy		5673644	0					
ANR	5673764	Identifier	memcpy		5673644	0					
ANR	5673765	ArgumentList	audio + ch * frame_size + sf * sf_size		5673644	1					
ANR	5673766	Argument	audio + ch * frame_size + sf * sf_size		5673644	0					
ANR	5673767	AdditiveExpression	audio + ch * frame_size + sf * sf_size		5673644	0		+			
ANR	5673768	Identifier	audio		5673644	0					
ANR	5673769	AdditiveExpression	ch * frame_size + sf * sf_size		5673644	1		+			
ANR	5673770	MultiplicativeExpression	ch * frame_size		5673644	0		*			
ANR	5673771	Identifier	ch		5673644	0					
ANR	5673772	Identifier	frame_size		5673644	1					
ANR	5673773	MultiplicativeExpression	sf * sf_size		5673644	1		*			
ANR	5673774	Identifier	sf		5673644	0					
ANR	5673775	Identifier	sf_size		5673644	1					
ANR	5673776	Argument	input		5673644	1					
ANR	5673777	Identifier	input		5673644	0					
ANR	5673778	Argument	len		5673644	2					
ANR	5673779	Identifier	len		5673644	0					
ANR	5673780	ExpressionStatement	av_frame_free ( & cur )	31:8:635:654	5673644	3	True				
ANR	5673781	CallExpression	av_frame_free ( & cur )		5673644	0					
ANR	5673782	Callee	av_frame_free		5673644	0					
ANR	5673783	Identifier	av_frame_free		5673644	0					
ANR	5673784	ArgumentList	& cur		5673644	1					
ANR	5673785	Argument	& cur		5673644	0					
ANR	5673786	UnaryOperationExpression	& cur		5673644	0					
ANR	5673787	UnaryOperator	&		5673644	0					
ANR	5673788	Identifier	cur		5673644	1					
ANR	5673789	ReturnType	static void		5673644	1					
ANR	5673790	Identifier	move_audio		5673644	2					
ANR	5673791	ParameterList	"vorbis_enc_context * venc , float * audio , int * samples , int sf_size"		5673644	3					
ANR	5673792	Parameter	vorbis_enc_context * venc	1:23:23:46	5673644	0	True				
ANR	5673793	ParameterType	vorbis_enc_context *		5673644	0					
ANR	5673794	Identifier	venc		5673644	1					
ANR	5673795	Parameter	float * audio	1:49:49:60	5673644	1	True				
ANR	5673796	ParameterType	float *		5673644	0					
ANR	5673797	Identifier	audio		5673644	1					
ANR	5673798	Parameter	int * samples	1:63:63:74	5673644	2	True				
ANR	5673799	ParameterType	int *		5673644	0					
ANR	5673800	Identifier	samples		5673644	1					
ANR	5673801	Parameter	int sf_size	1:77:77:87	5673644	3	True				
ANR	5673802	ParameterType	int		5673644	0					
ANR	5673803	Identifier	sf_size		5673644	1					
ANR	5673804	CFGEntryNode	ENTRY		5673644		True				
ANR	5673805	CFGExitNode	EXIT		5673644		True				
ANR	5673806	Symbol	cur		5673644						
ANR	5673807	Symbol	sf_size		5673644						
ANR	5673808	Symbol	venc -> log2_blocksize		5673644						
ANR	5673809	Symbol	* ch		5673644						
ANR	5673810	Symbol	* venc -> log2_blocksize		5673644						
ANR	5673811	Symbol	cur -> nb_samples		5673644						
ANR	5673812	Symbol	venc -> channels		5673644						
ANR	5673813	Symbol	frame_size		5673644						
ANR	5673814	Symbol	* * venc		5673644						
ANR	5673815	Symbol	venc		5673644						
ANR	5673816	Symbol	sf		5673644						
ANR	5673817	Symbol	* samples		5673644						
ANR	5673818	Symbol	* * cur		5673644						
ANR	5673819	Symbol	len		5673644						
ANR	5673820	Symbol	* cur		5673644						
ANR	5673821	Symbol	& venc -> bufqueue		5673644						
ANR	5673822	Symbol	audio		5673644						
ANR	5673823	Symbol	cur -> extended_data		5673644						
ANR	5673824	Symbol	* cur -> extended_data		5673644						
ANR	5673825	Symbol	& cur		5673644						
ANR	5673826	Symbol	NULL		5673644						
ANR	5673827	Symbol	ch		5673644						
ANR	5673828	Symbol	subframes		5673644						
ANR	5673829	Symbol	samples		5673644						
ANR	5673830	Symbol	input		5673644						
ANR	5673831	Symbol	* venc		5673644						
ANR	5673832	Symbol	ff_bufqueue_get		5673644						
