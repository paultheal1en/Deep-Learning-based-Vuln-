command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5056210	File	/home/p4ultr4n/workplace/ReVeal/raw_code/jpeg2000_decode_packet_1.c								
ANR	5056211	Function	jpeg2000_decode_packet	1:0:0:5945							
ANR	5056212	FunctionDef	"jpeg2000_decode_packet (Jpeg2000DecoderContext * s , Jpeg2000Tile * tile , int * tp_index , Jpeg2000CodingStyle * codsty , Jpeg2000ResLevel * rlevel , int precno , int layno , uint8_t * expn , int numgbits)"		5056211	0					
ANR	5056213	CompoundStatement		9:0:309:5945	5056211	0					
ANR	5056214	IdentifierDeclStatement	"int bandno , cblkno , ret , nb_code_blocks ;"	11:4:316:355	5056211	0	True				
ANR	5056215	IdentifierDecl	bandno		5056211	0					
ANR	5056216	IdentifierDeclType	int		5056211	0					
ANR	5056217	Identifier	bandno		5056211	1					
ANR	5056218	IdentifierDecl	cblkno		5056211	1					
ANR	5056219	IdentifierDeclType	int		5056211	0					
ANR	5056220	Identifier	cblkno		5056211	1					
ANR	5056221	IdentifierDecl	ret		5056211	2					
ANR	5056222	IdentifierDeclType	int		5056211	0					
ANR	5056223	Identifier	ret		5056211	1					
ANR	5056224	IdentifierDecl	nb_code_blocks		5056211	3					
ANR	5056225	IdentifierDeclType	int		5056211	0					
ANR	5056226	Identifier	nb_code_blocks		5056211	1					
ANR	5056227	IdentifierDeclStatement	int cwsno ;	13:4:362:371	5056211	1	True				
ANR	5056228	IdentifierDecl	cwsno		5056211	0					
ANR	5056229	IdentifierDeclType	int		5056211	0					
ANR	5056230	Identifier	cwsno		5056211	1					
ANR	5056231	IfStatement	if ( layno < rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers )		5056211	2					
ANR	5056232	Condition	layno < rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers	17:8:384:434	5056211	0	True				
ANR	5056233	RelationalExpression	layno < rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers		5056211	0		<			
ANR	5056234	Identifier	layno		5056211	0					
ANR	5056235	MemberAccess	rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers		5056211	1					
ANR	5056236	ArrayIndexing	rlevel -> band [ 0 ] . prec [ precno ]		5056211	0					
ANR	5056237	MemberAccess	rlevel -> band [ 0 ] . prec		5056211	0					
ANR	5056238	ArrayIndexing	rlevel -> band [ 0 ]		5056211	0					
ANR	5056239	PtrMemberAccess	rlevel -> band		5056211	0					
ANR	5056240	Identifier	rlevel		5056211	0					
ANR	5056241	Identifier	band		5056211	1					
ANR	5056242	PrimaryExpression	0		5056211	1					
ANR	5056243	Identifier	prec		5056211	1					
ANR	5056244	Identifier	precno		5056211	1					
ANR	5056245	Identifier	decoded_layers		5056211	1					
ANR	5056246	ReturnStatement	return 0 ;	19:8:446:454	5056211	1	True				
ANR	5056247	PrimaryExpression	0		5056211	0					
ANR	5056248	ExpressionStatement	rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers = layno + 1	21:4:461:516	5056211	3	True				
ANR	5056249	AssignmentExpression	rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers = layno + 1		5056211	0		=			
ANR	5056250	MemberAccess	rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers		5056211	0					
ANR	5056251	ArrayIndexing	rlevel -> band [ 0 ] . prec [ precno ]		5056211	0					
ANR	5056252	MemberAccess	rlevel -> band [ 0 ] . prec		5056211	0					
ANR	5056253	ArrayIndexing	rlevel -> band [ 0 ]		5056211	0					
ANR	5056254	PtrMemberAccess	rlevel -> band		5056211	0					
ANR	5056255	Identifier	rlevel		5056211	0					
ANR	5056256	Identifier	band		5056211	1					
ANR	5056257	PrimaryExpression	0		5056211	1					
ANR	5056258	Identifier	prec		5056211	1					
ANR	5056259	Identifier	precno		5056211	1					
ANR	5056260	Identifier	decoded_layers		5056211	1					
ANR	5056261	AdditiveExpression	layno + 1		5056211	1		+			
ANR	5056262	Identifier	layno		5056211	0					
ANR	5056263	PrimaryExpression	1		5056211	1					
ANR	5056264	IfStatement	if ( bytestream2_get_bytes_left ( & s -> g ) == 0 && s -> bit_index == 8 )		5056211	4					
ANR	5056265	Condition	bytestream2_get_bytes_left ( & s -> g ) == 0 && s -> bit_index == 8	25:8:529:587	5056211	0	True				
ANR	5056266	AndExpression	bytestream2_get_bytes_left ( & s -> g ) == 0 && s -> bit_index == 8		5056211	0		&&			
ANR	5056267	EqualityExpression	bytestream2_get_bytes_left ( & s -> g ) == 0		5056211	0		==			
ANR	5056268	CallExpression	bytestream2_get_bytes_left ( & s -> g )		5056211	0					
ANR	5056269	Callee	bytestream2_get_bytes_left		5056211	0					
ANR	5056270	Identifier	bytestream2_get_bytes_left		5056211	0					
ANR	5056271	ArgumentList	& s -> g		5056211	1					
ANR	5056272	Argument	& s -> g		5056211	0					
ANR	5056273	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056274	UnaryOperator	&		5056211	0					
ANR	5056275	PtrMemberAccess	s -> g		5056211	1					
ANR	5056276	Identifier	s		5056211	0					
ANR	5056277	Identifier	g		5056211	1					
ANR	5056278	PrimaryExpression	0		5056211	1					
ANR	5056279	EqualityExpression	s -> bit_index == 8		5056211	1		==			
ANR	5056280	PtrMemberAccess	s -> bit_index		5056211	0					
ANR	5056281	Identifier	s		5056211	0					
ANR	5056282	Identifier	bit_index		5056211	1					
ANR	5056283	PrimaryExpression	8		5056211	1					
ANR	5056284	CompoundStatement		17:69:280:280	5056211	1					
ANR	5056285	IfStatement	if ( * tp_index < FF_ARRAY_ELEMS ( tile -> tile_part ) - 1 )		5056211	0					
ANR	5056286	Condition	* tp_index < FF_ARRAY_ELEMS ( tile -> tile_part ) - 1	27:12:605:651	5056211	0	True				
ANR	5056287	RelationalExpression	* tp_index < FF_ARRAY_ELEMS ( tile -> tile_part ) - 1		5056211	0		<			
ANR	5056288	UnaryOperationExpression	* tp_index		5056211	0					
ANR	5056289	UnaryOperator	*		5056211	0					
ANR	5056290	Identifier	tp_index		5056211	1					
ANR	5056291	AdditiveExpression	FF_ARRAY_ELEMS ( tile -> tile_part ) - 1		5056211	1		-			
ANR	5056292	CallExpression	FF_ARRAY_ELEMS ( tile -> tile_part )		5056211	0					
ANR	5056293	Callee	FF_ARRAY_ELEMS		5056211	0					
ANR	5056294	Identifier	FF_ARRAY_ELEMS		5056211	0					
ANR	5056295	ArgumentList	tile -> tile_part		5056211	1					
ANR	5056296	Argument	tile -> tile_part		5056211	0					
ANR	5056297	PtrMemberAccess	tile -> tile_part		5056211	0					
ANR	5056298	Identifier	tile		5056211	0					
ANR	5056299	Identifier	tile_part		5056211	1					
ANR	5056300	PrimaryExpression	1		5056211	1					
ANR	5056301	CompoundStatement		19:61:344:344	5056211	1					
ANR	5056302	ExpressionStatement	s -> g = tile -> tile_part [ ++ ( * tp_index ) ] . tpg	29:12:669:710	5056211	0	True				
ANR	5056303	AssignmentExpression	s -> g = tile -> tile_part [ ++ ( * tp_index ) ] . tpg		5056211	0		=			
ANR	5056304	PtrMemberAccess	s -> g		5056211	0					
ANR	5056305	Identifier	s		5056211	0					
ANR	5056306	Identifier	g		5056211	1					
ANR	5056307	MemberAccess	tile -> tile_part [ ++ ( * tp_index ) ] . tpg		5056211	1					
ANR	5056308	ArrayIndexing	tile -> tile_part [ ++ ( * tp_index ) ]		5056211	0					
ANR	5056309	PtrMemberAccess	tile -> tile_part		5056211	0					
ANR	5056310	Identifier	tile		5056211	0					
ANR	5056311	Identifier	tile_part		5056211	1					
ANR	5056312	UnaryExpression	++ ( * tp_index )		5056211	1					
ANR	5056313	IncDec	++		5056211	0					
ANR	5056314	UnaryOperationExpression	* tp_index		5056211	1					
ANR	5056315	UnaryOperator	*		5056211	0					
ANR	5056316	Identifier	tp_index		5056211	1					
ANR	5056317	Identifier	tpg		5056211	1					
ANR	5056318	IfStatement	if ( bytestream2_peek_be32 ( & s -> g ) == JPEG2000_SOP_FIXED_BYTES )		5056211	5					
ANR	5056319	Condition	bytestream2_peek_be32 ( & s -> g ) == JPEG2000_SOP_FIXED_BYTES	37:8:741:796	5056211	0	True				
ANR	5056320	EqualityExpression	bytestream2_peek_be32 ( & s -> g ) == JPEG2000_SOP_FIXED_BYTES		5056211	0		==			
ANR	5056321	CallExpression	bytestream2_peek_be32 ( & s -> g )		5056211	0					
ANR	5056322	Callee	bytestream2_peek_be32		5056211	0					
ANR	5056323	Identifier	bytestream2_peek_be32		5056211	0					
ANR	5056324	ArgumentList	& s -> g		5056211	1					
ANR	5056325	Argument	& s -> g		5056211	0					
ANR	5056326	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056327	UnaryOperator	&		5056211	0					
ANR	5056328	PtrMemberAccess	s -> g		5056211	1					
ANR	5056329	Identifier	s		5056211	0					
ANR	5056330	Identifier	g		5056211	1					
ANR	5056331	Identifier	JPEG2000_SOP_FIXED_BYTES		5056211	1					
ANR	5056332	ExpressionStatement	"bytestream2_skip ( & s -> g , JPEG2000_SOP_BYTE_LENGTH )"	39:8:808:857	5056211	1	True				
ANR	5056333	CallExpression	"bytestream2_skip ( & s -> g , JPEG2000_SOP_BYTE_LENGTH )"		5056211	0					
ANR	5056334	Callee	bytestream2_skip		5056211	0					
ANR	5056335	Identifier	bytestream2_skip		5056211	0					
ANR	5056336	ArgumentList	& s -> g		5056211	1					
ANR	5056337	Argument	& s -> g		5056211	0					
ANR	5056338	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056339	UnaryOperator	&		5056211	0					
ANR	5056340	PtrMemberAccess	s -> g		5056211	1					
ANR	5056341	Identifier	s		5056211	0					
ANR	5056342	Identifier	g		5056211	1					
ANR	5056343	Argument	JPEG2000_SOP_BYTE_LENGTH		5056211	1					
ANR	5056344	Identifier	JPEG2000_SOP_BYTE_LENGTH		5056211	0					
ANR	5056345	IfStatement	"if ( ! ( ret = get_bits ( s , 1 ) ) )"		5056211	6					
ANR	5056346	Condition	"! ( ret = get_bits ( s , 1 ) )"	43:8:870:892	5056211	0	True				
ANR	5056347	UnaryOperationExpression	"! ( ret = get_bits ( s , 1 ) )"		5056211	0					
ANR	5056348	UnaryOperator	!		5056211	0					
ANR	5056349	AssignmentExpression	"ret = get_bits ( s , 1 )"		5056211	1		=			
ANR	5056350	Identifier	ret		5056211	0					
ANR	5056351	CallExpression	"get_bits ( s , 1 )"		5056211	1					
ANR	5056352	Callee	get_bits		5056211	0					
ANR	5056353	Identifier	get_bits		5056211	0					
ANR	5056354	ArgumentList	s		5056211	1					
ANR	5056355	Argument	s		5056211	0					
ANR	5056356	Identifier	s		5056211	0					
ANR	5056357	Argument	1		5056211	1					
ANR	5056358	PrimaryExpression	1		5056211	0					
ANR	5056359	CompoundStatement		35:33:585:585	5056211	1					
ANR	5056360	ExpressionStatement	jpeg2000_flush ( s )	45:8:906:923	5056211	0	True				
ANR	5056361	CallExpression	jpeg2000_flush ( s )		5056211	0					
ANR	5056362	Callee	jpeg2000_flush		5056211	0					
ANR	5056363	Identifier	jpeg2000_flush		5056211	0					
ANR	5056364	ArgumentList	s		5056211	1					
ANR	5056365	Argument	s		5056211	0					
ANR	5056366	Identifier	s		5056211	0					
ANR	5056367	ReturnStatement	return 0 ;	47:8:934:942	5056211	1	True				
ANR	5056368	PrimaryExpression	0		5056211	0					
ANR	5056369	ElseStatement	else		5056211	0					
ANR	5056370	IfStatement	if ( ret < 0 )		5056211	0					
ANR	5056371	Condition	ret < 0	49:15:960:966	5056211	0	True				
ANR	5056372	RelationalExpression	ret < 0		5056211	0		<			
ANR	5056373	Identifier	ret		5056211	0					
ANR	5056374	PrimaryExpression	0		5056211	1					
ANR	5056375	ReturnStatement	return ret ;	51:8:978:988	5056211	1	True				
ANR	5056376	Identifier	ret		5056211	0					
ANR	5056377	ForStatement	for ( bandno = 0 ; bandno < rlevel -> nbands ; bandno ++ )		5056211	7					
ANR	5056378	ForInit	bandno = 0 ;	55:9:1002:1012	5056211	0	True				
ANR	5056379	AssignmentExpression	bandno = 0		5056211	0		=			
ANR	5056380	Identifier	bandno		5056211	0					
ANR	5056381	PrimaryExpression	0		5056211	1					
ANR	5056382	Condition	bandno < rlevel -> nbands	55:21:1014:1036	5056211	1	True				
ANR	5056383	RelationalExpression	bandno < rlevel -> nbands		5056211	0		<			
ANR	5056384	Identifier	bandno		5056211	0					
ANR	5056385	PtrMemberAccess	rlevel -> nbands		5056211	1					
ANR	5056386	Identifier	rlevel		5056211	0					
ANR	5056387	Identifier	nbands		5056211	1					
ANR	5056388	PostIncDecOperationExpression	bandno ++	55:46:1039:1046	5056211	2	True				
ANR	5056389	Identifier	bandno		5056211	0					
ANR	5056390	IncDec	++		5056211	1					
ANR	5056391	CompoundStatement		51:8:803:843	5056211	3					
ANR	5056392	IdentifierDeclStatement	Jpeg2000Band * band = rlevel -> band + bandno ;	57:8:1060:1102	5056211	0	True				
ANR	5056393	IdentifierDecl	* band = rlevel -> band + bandno		5056211	0					
ANR	5056394	IdentifierDeclType	Jpeg2000Band *		5056211	0					
ANR	5056395	Identifier	band		5056211	1					
ANR	5056396	AssignmentExpression	* band = rlevel -> band + bandno		5056211	2		=			
ANR	5056397	Identifier	band		5056211	0					
ANR	5056398	AdditiveExpression	rlevel -> band + bandno		5056211	1		+			
ANR	5056399	PtrMemberAccess	rlevel -> band		5056211	0					
ANR	5056400	Identifier	rlevel		5056211	0					
ANR	5056401	Identifier	band		5056211	1					
ANR	5056402	Identifier	bandno		5056211	1					
ANR	5056403	IdentifierDeclStatement	Jpeg2000Prec * prec = band -> prec + precno ;	59:8:1113:1153	5056211	1	True				
ANR	5056404	IdentifierDecl	* prec = band -> prec + precno		5056211	0					
ANR	5056405	IdentifierDeclType	Jpeg2000Prec *		5056211	0					
ANR	5056406	Identifier	prec		5056211	1					
ANR	5056407	AssignmentExpression	* prec = band -> prec + precno		5056211	2		=			
ANR	5056408	Identifier	prec		5056211	0					
ANR	5056409	AdditiveExpression	band -> prec + precno		5056211	1		+			
ANR	5056410	PtrMemberAccess	band -> prec		5056211	0					
ANR	5056411	Identifier	band		5056211	0					
ANR	5056412	Identifier	prec		5056211	1					
ANR	5056413	Identifier	precno		5056211	1					
ANR	5056414	IfStatement	if ( band -> coord [ 0 ] [ 0 ] == band -> coord [ 0 ] [ 1 ] || band -> coord [ 1 ] [ 0 ] == band -> coord [ 1 ] [ 1 ] )		5056211	2					
ANR	5056415	Condition	band -> coord [ 0 ] [ 0 ] == band -> coord [ 0 ] [ 1 ] || band -> coord [ 1 ] [ 0 ] == band -> coord [ 1 ] [ 1 ]	63:12:1170:1262	5056211	0	True				
ANR	5056416	OrExpression	band -> coord [ 0 ] [ 0 ] == band -> coord [ 0 ] [ 1 ] || band -> coord [ 1 ] [ 0 ] == band -> coord [ 1 ] [ 1 ]		5056211	0		||			
ANR	5056417	EqualityExpression	band -> coord [ 0 ] [ 0 ] == band -> coord [ 0 ] [ 1 ]		5056211	0		==			
ANR	5056418	ArrayIndexing	band -> coord [ 0 ] [ 0 ]		5056211	0					
ANR	5056419	ArrayIndexing	band -> coord [ 0 ]		5056211	0					
ANR	5056420	PtrMemberAccess	band -> coord		5056211	0					
ANR	5056421	Identifier	band		5056211	0					
ANR	5056422	Identifier	coord		5056211	1					
ANR	5056423	PrimaryExpression	0		5056211	1					
ANR	5056424	PrimaryExpression	0		5056211	1					
ANR	5056425	ArrayIndexing	band -> coord [ 0 ] [ 1 ]		5056211	1					
ANR	5056426	ArrayIndexing	band -> coord [ 0 ]		5056211	0					
ANR	5056427	PtrMemberAccess	band -> coord		5056211	0					
ANR	5056428	Identifier	band		5056211	0					
ANR	5056429	Identifier	coord		5056211	1					
ANR	5056430	PrimaryExpression	0		5056211	1					
ANR	5056431	PrimaryExpression	1		5056211	1					
ANR	5056432	EqualityExpression	band -> coord [ 1 ] [ 0 ] == band -> coord [ 1 ] [ 1 ]		5056211	1		==			
ANR	5056433	ArrayIndexing	band -> coord [ 1 ] [ 0 ]		5056211	0					
ANR	5056434	ArrayIndexing	band -> coord [ 1 ]		5056211	0					
ANR	5056435	PtrMemberAccess	band -> coord		5056211	0					
ANR	5056436	Identifier	band		5056211	0					
ANR	5056437	Identifier	coord		5056211	1					
ANR	5056438	PrimaryExpression	1		5056211	1					
ANR	5056439	PrimaryExpression	0		5056211	1					
ANR	5056440	ArrayIndexing	band -> coord [ 1 ] [ 1 ]		5056211	1					
ANR	5056441	ArrayIndexing	band -> coord [ 1 ]		5056211	0					
ANR	5056442	PtrMemberAccess	band -> coord		5056211	0					
ANR	5056443	Identifier	band		5056211	0					
ANR	5056444	Identifier	coord		5056211	1					
ANR	5056445	PrimaryExpression	1		5056211	1					
ANR	5056446	PrimaryExpression	1		5056211	1					
ANR	5056447	ContinueStatement	continue ;	67:12:1278:1286	5056211	1	True				
ANR	5056448	ExpressionStatement	nb_code_blocks = prec -> nb_codeblocks_height * prec -> nb_codeblocks_width	69:8:1297:1396	5056211	3	True				
ANR	5056449	AssignmentExpression	nb_code_blocks = prec -> nb_codeblocks_height * prec -> nb_codeblocks_width		5056211	0		=			
ANR	5056450	Identifier	nb_code_blocks		5056211	0					
ANR	5056451	MultiplicativeExpression	prec -> nb_codeblocks_height * prec -> nb_codeblocks_width		5056211	1		*			
ANR	5056452	PtrMemberAccess	prec -> nb_codeblocks_height		5056211	0					
ANR	5056453	Identifier	prec		5056211	0					
ANR	5056454	Identifier	nb_codeblocks_height		5056211	1					
ANR	5056455	PtrMemberAccess	prec -> nb_codeblocks_width		5056211	1					
ANR	5056456	Identifier	prec		5056211	0					
ANR	5056457	Identifier	nb_codeblocks_width		5056211	1					
ANR	5056458	ForStatement	for ( cblkno = 0 ; cblkno < nb_code_blocks ; cblkno ++ )		5056211	4					
ANR	5056459	ForInit	cblkno = 0 ;	73:13:1412:1422	5056211	0	True				
ANR	5056460	AssignmentExpression	cblkno = 0		5056211	0		=			
ANR	5056461	Identifier	cblkno		5056211	0					
ANR	5056462	PrimaryExpression	0		5056211	1					
ANR	5056463	Condition	cblkno < nb_code_blocks	73:25:1424:1446	5056211	1	True				
ANR	5056464	RelationalExpression	cblkno < nb_code_blocks		5056211	0		<			
ANR	5056465	Identifier	cblkno		5056211	0					
ANR	5056466	Identifier	nb_code_blocks		5056211	1					
ANR	5056467	PostIncDecOperationExpression	cblkno ++	73:50:1449:1456	5056211	2	True				
ANR	5056468	Identifier	cblkno		5056211	0					
ANR	5056469	IncDec	++		5056211	1					
ANR	5056470	CompoundStatement		69:12:1219:1244	5056211	3					
ANR	5056471	IdentifierDeclStatement	Jpeg2000Cblk * cblk = prec -> cblk + cblkno ;	75:12:1474:1514	5056211	0	True				
ANR	5056472	IdentifierDecl	* cblk = prec -> cblk + cblkno		5056211	0					
ANR	5056473	IdentifierDeclType	Jpeg2000Cblk *		5056211	0					
ANR	5056474	Identifier	cblk		5056211	1					
ANR	5056475	AssignmentExpression	* cblk = prec -> cblk + cblkno		5056211	2		=			
ANR	5056476	Identifier	cblk		5056211	0					
ANR	5056477	AdditiveExpression	prec -> cblk + cblkno		5056211	1		+			
ANR	5056478	PtrMemberAccess	prec -> cblk		5056211	0					
ANR	5056479	Identifier	prec		5056211	0					
ANR	5056480	Identifier	cblk		5056211	1					
ANR	5056481	Identifier	cblkno		5056211	1					
ANR	5056482	IdentifierDeclStatement	"int incl , newpasses , llen ;"	77:12:1529:1554	5056211	1	True				
ANR	5056483	IdentifierDecl	incl		5056211	0					
ANR	5056484	IdentifierDeclType	int		5056211	0					
ANR	5056485	Identifier	incl		5056211	1					
ANR	5056486	IdentifierDecl	newpasses		5056211	1					
ANR	5056487	IdentifierDeclType	int		5056211	0					
ANR	5056488	Identifier	newpasses		5056211	1					
ANR	5056489	IdentifierDecl	llen		5056211	2					
ANR	5056490	IdentifierDeclType	int		5056211	0					
ANR	5056491	Identifier	llen		5056211	1					
ANR	5056492	IfStatement	if ( cblk -> npasses )		5056211	2					
ANR	5056493	Condition	cblk -> npasses	81:16:1575:1587	5056211	0	True				
ANR	5056494	PtrMemberAccess	cblk -> npasses		5056211	0					
ANR	5056495	Identifier	cblk		5056211	0					
ANR	5056496	Identifier	npasses		5056211	1					
ANR	5056497	ExpressionStatement	"incl = get_bits ( s , 1 )"	83:16:1607:1628	5056211	1	True				
ANR	5056498	AssignmentExpression	"incl = get_bits ( s , 1 )"		5056211	0		=			
ANR	5056499	Identifier	incl		5056211	0					
ANR	5056500	CallExpression	"get_bits ( s , 1 )"		5056211	1					
ANR	5056501	Callee	get_bits		5056211	0					
ANR	5056502	Identifier	get_bits		5056211	0					
ANR	5056503	ArgumentList	s		5056211	1					
ANR	5056504	Argument	s		5056211	0					
ANR	5056505	Identifier	s		5056211	0					
ANR	5056506	Argument	1		5056211	1					
ANR	5056507	PrimaryExpression	1		5056211	0					
ANR	5056508	ElseStatement	else		5056211	0					
ANR	5056509	ExpressionStatement	"incl = tag_tree_decode ( s , prec -> cblkincl + cblkno , layno + 1 ) == layno"	87:16:1665:1735	5056211	0	True				
ANR	5056510	AssignmentExpression	"incl = tag_tree_decode ( s , prec -> cblkincl + cblkno , layno + 1 ) == layno"		5056211	0		=			
ANR	5056511	Identifier	incl		5056211	0					
ANR	5056512	EqualityExpression	"tag_tree_decode ( s , prec -> cblkincl + cblkno , layno + 1 ) == layno"		5056211	1		==			
ANR	5056513	CallExpression	"tag_tree_decode ( s , prec -> cblkincl + cblkno , layno + 1 )"		5056211	0					
ANR	5056514	Callee	tag_tree_decode		5056211	0					
ANR	5056515	Identifier	tag_tree_decode		5056211	0					
ANR	5056516	ArgumentList	s		5056211	1					
ANR	5056517	Argument	s		5056211	0					
ANR	5056518	Identifier	s		5056211	0					
ANR	5056519	Argument	prec -> cblkincl + cblkno		5056211	1					
ANR	5056520	AdditiveExpression	prec -> cblkincl + cblkno		5056211	0		+			
ANR	5056521	PtrMemberAccess	prec -> cblkincl		5056211	0					
ANR	5056522	Identifier	prec		5056211	0					
ANR	5056523	Identifier	cblkincl		5056211	1					
ANR	5056524	Identifier	cblkno		5056211	1					
ANR	5056525	Argument	layno + 1		5056211	2					
ANR	5056526	AdditiveExpression	layno + 1		5056211	0		+			
ANR	5056527	Identifier	layno		5056211	0					
ANR	5056528	PrimaryExpression	1		5056211	1					
ANR	5056529	Identifier	layno		5056211	1					
ANR	5056530	IfStatement	if ( ! incl )		5056211	3					
ANR	5056531	Condition	! incl	89:16:1754:1758	5056211	0	True				
ANR	5056532	UnaryOperationExpression	! incl		5056211	0					
ANR	5056533	UnaryOperator	!		5056211	0					
ANR	5056534	Identifier	incl		5056211	1					
ANR	5056535	ContinueStatement	continue ;	91:16:1778:1786	5056211	1	True				
ANR	5056536	ElseStatement	else		5056211	0					
ANR	5056537	IfStatement	if ( incl < 0 )		5056211	0					
ANR	5056538	Condition	incl < 0	93:21:1810:1817	5056211	0	True				
ANR	5056539	RelationalExpression	incl < 0		5056211	0		<			
ANR	5056540	Identifier	incl		5056211	0					
ANR	5056541	PrimaryExpression	0		5056211	1					
ANR	5056542	ReturnStatement	return incl ;	95:16:1837:1848	5056211	1	True				
ANR	5056543	Identifier	incl		5056211	0					
ANR	5056544	IfStatement	if ( ! cblk -> npasses )		5056211	4					
ANR	5056545	Condition	! cblk -> npasses	99:16:1869:1882	5056211	0	True				
ANR	5056546	UnaryOperationExpression	! cblk -> npasses		5056211	0					
ANR	5056547	UnaryOperator	!		5056211	0					
ANR	5056548	PtrMemberAccess	cblk -> npasses		5056211	1					
ANR	5056549	Identifier	cblk		5056211	0					
ANR	5056550	Identifier	npasses		5056211	1					
ANR	5056551	CompoundStatement		93:16:1594:1705	5056211	1					
ANR	5056552	IdentifierDeclStatement	"int v = expn [ bandno ] + numgbits - 1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 ) ;"	101:16:1904:2015	5056211	0	True				
ANR	5056553	IdentifierDecl	"v = expn [ bandno ] + numgbits - 1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	0					
ANR	5056554	IdentifierDeclType	int		5056211	0					
ANR	5056555	Identifier	v		5056211	1					
ANR	5056556	AssignmentExpression	"v = expn [ bandno ] + numgbits - 1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	2		=			
ANR	5056557	Identifier	v		5056211	0					
ANR	5056558	AdditiveExpression	"expn [ bandno ] + numgbits - 1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	1		+			
ANR	5056559	ArrayIndexing	expn [ bandno ]		5056211	0					
ANR	5056560	Identifier	expn		5056211	0					
ANR	5056561	Identifier	bandno		5056211	1					
ANR	5056562	AdditiveExpression	"numgbits - 1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	1		-			
ANR	5056563	Identifier	numgbits		5056211	0					
ANR	5056564	AdditiveExpression	"1 - tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	1		-			
ANR	5056565	PrimaryExpression	1		5056211	0					
ANR	5056566	CallExpression	"tag_tree_decode ( s , prec -> zerobits + cblkno , 100 )"		5056211	1					
ANR	5056567	Callee	tag_tree_decode		5056211	0					
ANR	5056568	Identifier	tag_tree_decode		5056211	0					
ANR	5056569	ArgumentList	s		5056211	1					
ANR	5056570	Argument	s		5056211	0					
ANR	5056571	Identifier	s		5056211	0					
ANR	5056572	Argument	prec -> zerobits + cblkno		5056211	1					
ANR	5056573	AdditiveExpression	prec -> zerobits + cblkno		5056211	0		+			
ANR	5056574	PtrMemberAccess	prec -> zerobits		5056211	0					
ANR	5056575	Identifier	prec		5056211	0					
ANR	5056576	Identifier	zerobits		5056211	1					
ANR	5056577	Identifier	cblkno		5056211	1					
ANR	5056578	Argument	100		5056211	2					
ANR	5056579	PrimaryExpression	100		5056211	0					
ANR	5056580	IfStatement	if ( v < 0 || v > 30 )		5056211	1					
ANR	5056581	Condition	v < 0 || v > 30	105:20:2038:2052	5056211	0	True				
ANR	5056582	OrExpression	v < 0 || v > 30		5056211	0		||			
ANR	5056583	RelationalExpression	v < 0		5056211	0		<			
ANR	5056584	Identifier	v		5056211	0					
ANR	5056585	PrimaryExpression	0		5056211	1					
ANR	5056586	RelationalExpression	v > 30		5056211	1		>			
ANR	5056587	Identifier	v		5056211	0					
ANR	5056588	PrimaryExpression	30		5056211	1					
ANR	5056589	CompoundStatement		97:37:1745:1745	5056211	1					
ANR	5056590	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""nonzerobits %d invalid or unsupported\\n"" , v )"	107:20:2078:2182	5056211	0	True				
ANR	5056591	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""nonzerobits %d invalid or unsupported\\n"" , v )"		5056211	0					
ANR	5056592	Callee	av_log		5056211	0					
ANR	5056593	Identifier	av_log		5056211	0					
ANR	5056594	ArgumentList	s -> avctx		5056211	1					
ANR	5056595	Argument	s -> avctx		5056211	0					
ANR	5056596	PtrMemberAccess	s -> avctx		5056211	0					
ANR	5056597	Identifier	s		5056211	0					
ANR	5056598	Identifier	avctx		5056211	1					
ANR	5056599	Argument	AV_LOG_ERROR		5056211	1					
ANR	5056600	Identifier	AV_LOG_ERROR		5056211	0					
ANR	5056601	Argument	"""nonzerobits %d invalid or unsupported\\n"""		5056211	2					
ANR	5056602	PrimaryExpression	"""nonzerobits %d invalid or unsupported\\n"""		5056211	0					
ANR	5056603	Argument	v		5056211	3					
ANR	5056604	Identifier	v		5056211	0					
ANR	5056605	ReturnStatement	return AVERROR_INVALIDDATA ;	111:20:2205:2231	5056211	1	True				
ANR	5056606	Identifier	AVERROR_INVALIDDATA		5056211	0					
ANR	5056607	ExpressionStatement	cblk -> nonzerobits = v	115:16:2269:2290	5056211	2	True				
ANR	5056608	AssignmentExpression	cblk -> nonzerobits = v		5056211	0		=			
ANR	5056609	PtrMemberAccess	cblk -> nonzerobits		5056211	0					
ANR	5056610	Identifier	cblk		5056211	0					
ANR	5056611	Identifier	nonzerobits		5056211	1					
ANR	5056612	Identifier	v		5056211	1					
ANR	5056613	IfStatement	if ( ( newpasses = getnpasses ( s ) ) < 0 )		5056211	5					
ANR	5056614	Condition	( newpasses = getnpasses ( s ) ) < 0	119:16:2324:2354	5056211	0	True				
ANR	5056615	RelationalExpression	( newpasses = getnpasses ( s ) ) < 0		5056211	0		<			
ANR	5056616	AssignmentExpression	newpasses = getnpasses ( s )		5056211	0		=			
ANR	5056617	Identifier	newpasses		5056211	0					
ANR	5056618	CallExpression	getnpasses ( s )		5056211	1					
ANR	5056619	Callee	getnpasses		5056211	0					
ANR	5056620	Identifier	getnpasses		5056211	0					
ANR	5056621	ArgumentList	s		5056211	1					
ANR	5056622	Argument	s		5056211	0					
ANR	5056623	Identifier	s		5056211	0					
ANR	5056624	PrimaryExpression	0		5056211	1					
ANR	5056625	ReturnStatement	return newpasses ;	121:16:2374:2390	5056211	1	True				
ANR	5056626	Identifier	newpasses		5056211	0					
ANR	5056627	ExpressionStatement	av_assert2 ( newpasses > 0 )	123:12:2405:2430	5056211	6	True				
ANR	5056628	CallExpression	av_assert2 ( newpasses > 0 )		5056211	0					
ANR	5056629	Callee	av_assert2		5056211	0					
ANR	5056630	Identifier	av_assert2		5056211	0					
ANR	5056631	ArgumentList	newpasses > 0		5056211	1					
ANR	5056632	Argument	newpasses > 0		5056211	0					
ANR	5056633	RelationalExpression	newpasses > 0		5056211	0		>			
ANR	5056634	Identifier	newpasses		5056211	0					
ANR	5056635	PrimaryExpression	0		5056211	1					
ANR	5056636	IfStatement	if ( cblk -> npasses + newpasses >= JPEG2000_MAX_PASSES )		5056211	7					
ANR	5056637	Condition	cblk -> npasses + newpasses >= JPEG2000_MAX_PASSES	125:16:2449:2496	5056211	0	True				
ANR	5056638	RelationalExpression	cblk -> npasses + newpasses >= JPEG2000_MAX_PASSES		5056211	0		>=			
ANR	5056639	AdditiveExpression	cblk -> npasses + newpasses		5056211	0		+			
ANR	5056640	PtrMemberAccess	cblk -> npasses		5056211	0					
ANR	5056641	Identifier	cblk		5056211	0					
ANR	5056642	Identifier	npasses		5056211	1					
ANR	5056643	Identifier	newpasses		5056211	1					
ANR	5056644	Identifier	JPEG2000_MAX_PASSES		5056211	1					
ANR	5056645	CompoundStatement		117:66:2189:2189	5056211	1					
ANR	5056646	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Too many passes"" )"	127:16:2518:2568	5056211	0	True				
ANR	5056647	CallExpression	"avpriv_request_sample ( s -> avctx , ""Too many passes"" )"		5056211	0					
ANR	5056648	Callee	avpriv_request_sample		5056211	0					
ANR	5056649	Identifier	avpriv_request_sample		5056211	0					
ANR	5056650	ArgumentList	s -> avctx		5056211	1					
ANR	5056651	Argument	s -> avctx		5056211	0					
ANR	5056652	PtrMemberAccess	s -> avctx		5056211	0					
ANR	5056653	Identifier	s		5056211	0					
ANR	5056654	Identifier	avctx		5056211	1					
ANR	5056655	Argument	"""Too many passes"""		5056211	1					
ANR	5056656	PrimaryExpression	"""Too many passes"""		5056211	0					
ANR	5056657	ReturnStatement	return AVERROR_PATCHWELCOME ;	129:16:2587:2614	5056211	1	True				
ANR	5056658	Identifier	AVERROR_PATCHWELCOME		5056211	0					
ANR	5056659	IfStatement	if ( ( llen = getlblockinc ( s ) ) < 0 )		5056211	8					
ANR	5056660	Condition	( llen = getlblockinc ( s ) ) < 0	133:16:2648:2675	5056211	0	True				
ANR	5056661	RelationalExpression	( llen = getlblockinc ( s ) ) < 0		5056211	0		<			
ANR	5056662	AssignmentExpression	llen = getlblockinc ( s )		5056211	0		=			
ANR	5056663	Identifier	llen		5056211	0					
ANR	5056664	CallExpression	getlblockinc ( s )		5056211	1					
ANR	5056665	Callee	getlblockinc		5056211	0					
ANR	5056666	Identifier	getlblockinc		5056211	0					
ANR	5056667	ArgumentList	s		5056211	1					
ANR	5056668	Argument	s		5056211	0					
ANR	5056669	Identifier	s		5056211	0					
ANR	5056670	PrimaryExpression	0		5056211	1					
ANR	5056671	ReturnStatement	return llen ;	135:16:2695:2706	5056211	1	True				
ANR	5056672	Identifier	llen		5056211	0					
ANR	5056673	IfStatement	if ( cblk -> lblock + llen + av_log2 ( newpasses ) > 16 )		5056211	9					
ANR	5056674	Condition	cblk -> lblock + llen + av_log2 ( newpasses ) > 16	137:16:2725:2769	5056211	0	True				
ANR	5056675	RelationalExpression	cblk -> lblock + llen + av_log2 ( newpasses ) > 16		5056211	0		>			
ANR	5056676	AdditiveExpression	cblk -> lblock + llen + av_log2 ( newpasses )		5056211	0		+			
ANR	5056677	PtrMemberAccess	cblk -> lblock		5056211	0					
ANR	5056678	Identifier	cblk		5056211	0					
ANR	5056679	Identifier	lblock		5056211	1					
ANR	5056680	AdditiveExpression	llen + av_log2 ( newpasses )		5056211	1		+			
ANR	5056681	Identifier	llen		5056211	0					
ANR	5056682	CallExpression	av_log2 ( newpasses )		5056211	1					
ANR	5056683	Callee	av_log2		5056211	0					
ANR	5056684	Identifier	av_log2		5056211	0					
ANR	5056685	ArgumentList	newpasses		5056211	1					
ANR	5056686	Argument	newpasses		5056211	0					
ANR	5056687	Identifier	newpasses		5056211	0					
ANR	5056688	PrimaryExpression	16		5056211	1					
ANR	5056689	CompoundStatement		129:63:2462:2462	5056211	1					
ANR	5056690	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Block with length beyond 16 bits"" )"	139:16:2791:2897	5056211	0	True				
ANR	5056691	CallExpression	"avpriv_request_sample ( s -> avctx , ""Block with length beyond 16 bits"" )"		5056211	0					
ANR	5056692	Callee	avpriv_request_sample		5056211	0					
ANR	5056693	Identifier	avpriv_request_sample		5056211	0					
ANR	5056694	ArgumentList	s -> avctx		5056211	1					
ANR	5056695	Argument	s -> avctx		5056211	0					
ANR	5056696	PtrMemberAccess	s -> avctx		5056211	0					
ANR	5056697	Identifier	s		5056211	0					
ANR	5056698	Identifier	avctx		5056211	1					
ANR	5056699	Argument	"""Block with length beyond 16 bits"""		5056211	1					
ANR	5056700	PrimaryExpression	"""Block with length beyond 16 bits"""		5056211	0					
ANR	5056701	ReturnStatement	return AVERROR_PATCHWELCOME ;	143:16:2916:2943	5056211	1	True				
ANR	5056702	Identifier	AVERROR_PATCHWELCOME		5056211	0					
ANR	5056703	ExpressionStatement	cblk -> lblock += llen	149:12:2975:2995	5056211	10	True				
ANR	5056704	AssignmentExpression	cblk -> lblock += llen		5056211	0		+=			
ANR	5056705	PtrMemberAccess	cblk -> lblock		5056211	0					
ANR	5056706	Identifier	cblk		5056211	0					
ANR	5056707	Identifier	lblock		5056211	1					
ANR	5056708	Identifier	llen		5056211	1					
ANR	5056709	ExpressionStatement	cblk -> nb_lengthinc = 0	153:12:3012:3034	5056211	11	True				
ANR	5056710	AssignmentExpression	cblk -> nb_lengthinc = 0		5056211	0		=			
ANR	5056711	PtrMemberAccess	cblk -> nb_lengthinc		5056211	0					
ANR	5056712	Identifier	cblk		5056211	0					
ANR	5056713	Identifier	nb_lengthinc		5056211	1					
ANR	5056714	PrimaryExpression	0		5056211	1					
ANR	5056715	ExpressionStatement	cblk -> nb_terminationsinc = 0	155:12:3049:3077	5056211	12	True				
ANR	5056716	AssignmentExpression	cblk -> nb_terminationsinc = 0		5056211	0		=			
ANR	5056717	PtrMemberAccess	cblk -> nb_terminationsinc		5056211	0					
ANR	5056718	Identifier	cblk		5056211	0					
ANR	5056719	Identifier	nb_terminationsinc		5056211	1					
ANR	5056720	PrimaryExpression	0		5056211	1					
ANR	5056721	DoStatement	do		5056211	13					
ANR	5056722	CompoundStatement		151:16:2804:2822	5056211	0					
ANR	5056723	IdentifierDeclStatement	int newpasses1 = 0 ;	159:16:3114:3132	5056211	0	True				
ANR	5056724	IdentifierDecl	newpasses1 = 0		5056211	0					
ANR	5056725	IdentifierDeclType	int		5056211	0					
ANR	5056726	Identifier	newpasses1		5056211	1					
ANR	5056727	AssignmentExpression	newpasses1 = 0		5056211	2		=			
ANR	5056728	Identifier	newpasses1		5056211	0					
ANR	5056729	PrimaryExpression	0		5056211	1					
ANR	5056730	WhileStatement	while ( newpasses1 < newpasses )		5056211	1					
ANR	5056731	Condition	newpasses1 < newpasses	163:23:3160:3181	5056211	0	True				
ANR	5056732	RelationalExpression	newpasses1 < newpasses		5056211	0		<			
ANR	5056733	Identifier	newpasses1		5056211	0					
ANR	5056734	Identifier	newpasses		5056211	1					
ANR	5056735	CompoundStatement		155:47:2874:2874	5056211	1					
ANR	5056736	ExpressionStatement	newpasses1 ++	165:20:3207:3220	5056211	0	True				
ANR	5056737	PostIncDecOperationExpression	newpasses1 ++		5056211	0					
ANR	5056738	Identifier	newpasses1		5056211	0					
ANR	5056739	IncDec	++		5056211	1					
ANR	5056740	IfStatement	"if ( needs_termination ( codsty -> cblk_style , cblk -> npasses + newpasses1 - 1 ) )"		5056211	1					
ANR	5056741	Condition	"needs_termination ( codsty -> cblk_style , cblk -> npasses + newpasses1 - 1 )"	167:24:3247:3315	5056211	0	True				
ANR	5056742	CallExpression	"needs_termination ( codsty -> cblk_style , cblk -> npasses + newpasses1 - 1 )"		5056211	0					
ANR	5056743	Callee	needs_termination		5056211	0					
ANR	5056744	Identifier	needs_termination		5056211	0					
ANR	5056745	ArgumentList	codsty -> cblk_style		5056211	1					
ANR	5056746	Argument	codsty -> cblk_style		5056211	0					
ANR	5056747	PtrMemberAccess	codsty -> cblk_style		5056211	0					
ANR	5056748	Identifier	codsty		5056211	0					
ANR	5056749	Identifier	cblk_style		5056211	1					
ANR	5056750	Argument	cblk -> npasses + newpasses1 - 1		5056211	1					
ANR	5056751	AdditiveExpression	cblk -> npasses + newpasses1 - 1		5056211	0		+			
ANR	5056752	PtrMemberAccess	cblk -> npasses		5056211	0					
ANR	5056753	Identifier	cblk		5056211	0					
ANR	5056754	Identifier	npasses		5056211	1					
ANR	5056755	AdditiveExpression	newpasses1 - 1		5056211	1		-			
ANR	5056756	Identifier	newpasses1		5056211	0					
ANR	5056757	PrimaryExpression	1		5056211	1					
ANR	5056758	CompoundStatement		159:95:3008:3008	5056211	1					
ANR	5056759	ExpressionStatement	cblk -> nb_terminationsinc ++	169:24:3345:3372	5056211	0	True				
ANR	5056760	PostIncDecOperationExpression	cblk -> nb_terminationsinc ++		5056211	0					
ANR	5056761	PtrMemberAccess	cblk -> nb_terminationsinc		5056211	0					
ANR	5056762	Identifier	cblk		5056211	0					
ANR	5056763	Identifier	nb_terminationsinc		5056211	1					
ANR	5056764	IncDec	++		5056211	1					
ANR	5056765	BreakStatement	break ;	171:24:3399:3404	5056211	1	True				
ANR	5056766	IfStatement	"if ( ( ret = get_bits ( s , av_log2 ( newpasses1 ) + cblk -> lblock ) ) < 0 )"		5056211	2					
ANR	5056767	Condition	"( ret = get_bits ( s , av_log2 ( newpasses1 ) + cblk -> lblock ) ) < 0"	179:20:3471:3529	5056211	0	True				
ANR	5056768	RelationalExpression	"( ret = get_bits ( s , av_log2 ( newpasses1 ) + cblk -> lblock ) ) < 0"		5056211	0		<			
ANR	5056769	AssignmentExpression	"ret = get_bits ( s , av_log2 ( newpasses1 ) + cblk -> lblock )"		5056211	0		=			
ANR	5056770	Identifier	ret		5056211	0					
ANR	5056771	CallExpression	"get_bits ( s , av_log2 ( newpasses1 ) + cblk -> lblock )"		5056211	1					
ANR	5056772	Callee	get_bits		5056211	0					
ANR	5056773	Identifier	get_bits		5056211	0					
ANR	5056774	ArgumentList	s		5056211	1					
ANR	5056775	Argument	s		5056211	0					
ANR	5056776	Identifier	s		5056211	0					
ANR	5056777	Argument	av_log2 ( newpasses1 ) + cblk -> lblock		5056211	1					
ANR	5056778	AdditiveExpression	av_log2 ( newpasses1 ) + cblk -> lblock		5056211	0		+			
ANR	5056779	CallExpression	av_log2 ( newpasses1 )		5056211	0					
ANR	5056780	Callee	av_log2		5056211	0					
ANR	5056781	Identifier	av_log2		5056211	0					
ANR	5056782	ArgumentList	newpasses1		5056211	1					
ANR	5056783	Argument	newpasses1		5056211	0					
ANR	5056784	Identifier	newpasses1		5056211	0					
ANR	5056785	PtrMemberAccess	cblk -> lblock		5056211	1					
ANR	5056786	Identifier	cblk		5056211	0					
ANR	5056787	Identifier	lblock		5056211	1					
ANR	5056788	PrimaryExpression	0		5056211	1					
ANR	5056789	ReturnStatement	return ret ;	181:20:3553:3563	5056211	1	True				
ANR	5056790	Identifier	ret		5056211	0					
ANR	5056791	IfStatement	if ( ret > sizeof ( cblk -> data ) )		5056211	3					
ANR	5056792	Condition	ret > sizeof ( cblk -> data )	183:20:3586:3609	5056211	0	True				
ANR	5056793	RelationalExpression	ret > sizeof ( cblk -> data )		5056211	0		>			
ANR	5056794	Identifier	ret		5056211	0					
ANR	5056795	SizeofExpression	sizeof ( cblk -> data )		5056211	1					
ANR	5056796	Sizeof	sizeof		5056211	0					
ANR	5056797	PtrMemberAccess	cblk -> data		5056211	1					
ANR	5056798	Identifier	cblk		5056211	0					
ANR	5056799	Identifier	data		5056211	1					
ANR	5056800	CompoundStatement		175:46:3302:3302	5056211	1					
ANR	5056801	Statement	avpriv_request_sample	185:20:3635:3655	5056211	0	True				
ANR	5056802	Statement	(	185:41:3656:3656	5056211	1	True				
ANR	5056803	Statement	s	185:42:3657:3657	5056211	2	True				
ANR	5056804	Statement	->	185:43:3658:3659	5056211	3	True				
ANR	5056805	Statement	avctx	185:45:3660:3664	5056211	4	True				
ANR	5056806	Statement	","	185:50:3665:3665	5056211	5	True				
ANR	5056807	Statement	"""Block with lengthinc greater than %"""	187:40:3708:3744	5056211	6	True				
ANR	5056808	Statement	SIZE_SPECIFIER	187:77:3745:3758	5056211	7	True				
ANR	5056809	Statement	""""""	187:91:3759:3760	5056211	8	True				
ANR	5056810	Statement	","	187:93:3761:3761	5056211	9	True				
ANR	5056811	Statement	sizeof	189:40:3804:3809	5056211	10	True				
ANR	5056812	Statement	(	189:46:3810:3810	5056211	11	True				
ANR	5056813	Statement	cblk	189:47:3811:3814	5056211	12	True				
ANR	5056814	Statement	->	189:51:3815:3816	5056211	13	True				
ANR	5056815	Statement	data	189:53:3817:3820	5056211	14	True				
ANR	5056816	Statement	)	189:57:3821:3821	5056211	15	True				
ANR	5056817	Statement	)	189:58:3822:3822	5056211	16	True				
ANR	5056818	ExpressionStatement		189:59:3823:3823	5056211	17	True				
ANR	5056819	ReturnStatement	return AVERROR_PATCHWELCOME ;	191:20:3846:3873	5056211	18	True				
ANR	5056820	Identifier	AVERROR_PATCHWELCOME		5056211	0					
ANR	5056821	ExpressionStatement	cblk -> lengthinc [ cblk -> nb_lengthinc ++ ] = ret	195:16:3911:3954	5056211	4	True				
ANR	5056822	AssignmentExpression	cblk -> lengthinc [ cblk -> nb_lengthinc ++ ] = ret		5056211	0		=			
ANR	5056823	ArrayIndexing	cblk -> lengthinc [ cblk -> nb_lengthinc ++ ]		5056211	0					
ANR	5056824	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5056825	Identifier	cblk		5056211	0					
ANR	5056826	Identifier	lengthinc		5056211	1					
ANR	5056827	PostIncDecOperationExpression	cblk -> nb_lengthinc ++		5056211	1					
ANR	5056828	PtrMemberAccess	cblk -> nb_lengthinc		5056211	0					
ANR	5056829	Identifier	cblk		5056211	0					
ANR	5056830	Identifier	nb_lengthinc		5056211	1					
ANR	5056831	IncDec	++		5056211	1					
ANR	5056832	Identifier	ret		5056211	1					
ANR	5056833	ExpressionStatement	cblk -> npasses += newpasses1	197:16:3973:4001	5056211	5	True				
ANR	5056834	AssignmentExpression	cblk -> npasses += newpasses1		5056211	0		+=			
ANR	5056835	PtrMemberAccess	cblk -> npasses		5056211	0					
ANR	5056836	Identifier	cblk		5056211	0					
ANR	5056837	Identifier	npasses		5056211	1					
ANR	5056838	Identifier	newpasses1		5056211	1					
ANR	5056839	ExpressionStatement	newpasses -= newpasses1	199:16:4020:4043	5056211	6	True				
ANR	5056840	AssignmentExpression	newpasses -= newpasses1		5056211	0		-=			
ANR	5056841	Identifier	newpasses		5056211	0					
ANR	5056842	Identifier	newpasses1		5056211	1					
ANR	5056843	Condition	newpasses	201:20:4066:4074	5056211	1	True				
ANR	5056844	Identifier	newpasses		5056211	0					
ANR	5056845	ExpressionStatement	jpeg2000_flush ( s )	207:4:4101:4118	5056211	8	True				
ANR	5056846	CallExpression	jpeg2000_flush ( s )		5056211	0					
ANR	5056847	Callee	jpeg2000_flush		5056211	0					
ANR	5056848	Identifier	jpeg2000_flush		5056211	0					
ANR	5056849	ArgumentList	s		5056211	1					
ANR	5056850	Argument	s		5056211	0					
ANR	5056851	Identifier	s		5056211	0					
ANR	5056852	IfStatement	if ( codsty -> csty & JPEG2000_CSTY_EPH )		5056211	9					
ANR	5056853	Condition	codsty -> csty & JPEG2000_CSTY_EPH	211:8:4131:4162	5056211	0	True				
ANR	5056854	BitAndExpression	codsty -> csty & JPEG2000_CSTY_EPH		5056211	0		&			
ANR	5056855	PtrMemberAccess	codsty -> csty		5056211	0					
ANR	5056856	Identifier	codsty		5056211	0					
ANR	5056857	Identifier	csty		5056211	1					
ANR	5056858	Identifier	JPEG2000_CSTY_EPH		5056211	1					
ANR	5056859	CompoundStatement		203:42:3855:3855	5056211	1					
ANR	5056860	IfStatement	if ( bytestream2_peek_be16 ( & s -> g ) == JPEG2000_EPH )		5056211	0					
ANR	5056861	Condition	bytestream2_peek_be16 ( & s -> g ) == JPEG2000_EPH	213:12:4180:4223	5056211	0	True				
ANR	5056862	EqualityExpression	bytestream2_peek_be16 ( & s -> g ) == JPEG2000_EPH		5056211	0		==			
ANR	5056863	CallExpression	bytestream2_peek_be16 ( & s -> g )		5056211	0					
ANR	5056864	Callee	bytestream2_peek_be16		5056211	0					
ANR	5056865	Identifier	bytestream2_peek_be16		5056211	0					
ANR	5056866	ArgumentList	& s -> g		5056211	1					
ANR	5056867	Argument	& s -> g		5056211	0					
ANR	5056868	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056869	UnaryOperator	&		5056211	0					
ANR	5056870	PtrMemberAccess	s -> g		5056211	1					
ANR	5056871	Identifier	s		5056211	0					
ANR	5056872	Identifier	g		5056211	1					
ANR	5056873	Identifier	JPEG2000_EPH		5056211	1					
ANR	5056874	ExpressionStatement	"bytestream2_skip ( & s -> g , 2 )"	215:12:4239:4265	5056211	1	True				
ANR	5056875	CallExpression	"bytestream2_skip ( & s -> g , 2 )"		5056211	0					
ANR	5056876	Callee	bytestream2_skip		5056211	0					
ANR	5056877	Identifier	bytestream2_skip		5056211	0					
ANR	5056878	ArgumentList	& s -> g		5056211	1					
ANR	5056879	Argument	& s -> g		5056211	0					
ANR	5056880	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056881	UnaryOperator	&		5056211	0					
ANR	5056882	PtrMemberAccess	s -> g		5056211	1					
ANR	5056883	Identifier	s		5056211	0					
ANR	5056884	Identifier	g		5056211	1					
ANR	5056885	Argument	2		5056211	1					
ANR	5056886	PrimaryExpression	2		5056211	0					
ANR	5056887	ElseStatement	else		5056211	0					
ANR	5056888	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""EPH marker not found. instead %X\\n"" , bytestream2_peek_be32 ( & s -> g ) )"	219:12:4294:4392	5056211	0	True				
ANR	5056889	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""EPH marker not found. instead %X\\n"" , bytestream2_peek_be32 ( & s -> g ) )"		5056211	0					
ANR	5056890	Callee	av_log		5056211	0					
ANR	5056891	Identifier	av_log		5056211	0					
ANR	5056892	ArgumentList	s -> avctx		5056211	1					
ANR	5056893	Argument	s -> avctx		5056211	0					
ANR	5056894	PtrMemberAccess	s -> avctx		5056211	0					
ANR	5056895	Identifier	s		5056211	0					
ANR	5056896	Identifier	avctx		5056211	1					
ANR	5056897	Argument	AV_LOG_ERROR		5056211	1					
ANR	5056898	Identifier	AV_LOG_ERROR		5056211	0					
ANR	5056899	Argument	"""EPH marker not found. instead %X\\n"""		5056211	2					
ANR	5056900	PrimaryExpression	"""EPH marker not found. instead %X\\n"""		5056211	0					
ANR	5056901	Argument	bytestream2_peek_be32 ( & s -> g )		5056211	3					
ANR	5056902	CallExpression	bytestream2_peek_be32 ( & s -> g )		5056211	0					
ANR	5056903	Callee	bytestream2_peek_be32		5056211	0					
ANR	5056904	Identifier	bytestream2_peek_be32		5056211	0					
ANR	5056905	ArgumentList	& s -> g		5056211	1					
ANR	5056906	Argument	& s -> g		5056211	0					
ANR	5056907	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5056908	UnaryOperator	&		5056211	0					
ANR	5056909	PtrMemberAccess	s -> g		5056211	1					
ANR	5056910	Identifier	s		5056211	0					
ANR	5056911	Identifier	g		5056211	1					
ANR	5056912	ForStatement	for ( bandno = 0 ; bandno < rlevel -> nbands ; bandno ++ )		5056211	10					
ANR	5056913	ForInit	bandno = 0 ;	225:9:4413:4423	5056211	0	True				
ANR	5056914	AssignmentExpression	bandno = 0		5056211	0		=			
ANR	5056915	Identifier	bandno		5056211	0					
ANR	5056916	PrimaryExpression	0		5056211	1					
ANR	5056917	Condition	bandno < rlevel -> nbands	225:21:4425:4447	5056211	1	True				
ANR	5056918	RelationalExpression	bandno < rlevel -> nbands		5056211	0		<			
ANR	5056919	Identifier	bandno		5056211	0					
ANR	5056920	PtrMemberAccess	rlevel -> nbands		5056211	1					
ANR	5056921	Identifier	rlevel		5056211	0					
ANR	5056922	Identifier	nbands		5056211	1					
ANR	5056923	PostIncDecOperationExpression	bandno ++	225:46:4450:4457	5056211	2	True				
ANR	5056924	Identifier	bandno		5056211	0					
ANR	5056925	IncDec	++		5056211	1					
ANR	5056926	CompoundStatement		221:8:4214:4254	5056211	3					
ANR	5056927	IdentifierDeclStatement	Jpeg2000Band * band = rlevel -> band + bandno ;	227:8:4471:4513	5056211	0	True				
ANR	5056928	IdentifierDecl	* band = rlevel -> band + bandno		5056211	0					
ANR	5056929	IdentifierDeclType	Jpeg2000Band *		5056211	0					
ANR	5056930	Identifier	band		5056211	1					
ANR	5056931	AssignmentExpression	* band = rlevel -> band + bandno		5056211	2		=			
ANR	5056932	Identifier	band		5056211	0					
ANR	5056933	AdditiveExpression	rlevel -> band + bandno		5056211	1		+			
ANR	5056934	PtrMemberAccess	rlevel -> band		5056211	0					
ANR	5056935	Identifier	rlevel		5056211	0					
ANR	5056936	Identifier	band		5056211	1					
ANR	5056937	Identifier	bandno		5056211	1					
ANR	5056938	IdentifierDeclStatement	Jpeg2000Prec * prec = band -> prec + precno ;	229:8:4524:4564	5056211	1	True				
ANR	5056939	IdentifierDecl	* prec = band -> prec + precno		5056211	0					
ANR	5056940	IdentifierDeclType	Jpeg2000Prec *		5056211	0					
ANR	5056941	Identifier	prec		5056211	1					
ANR	5056942	AssignmentExpression	* prec = band -> prec + precno		5056211	2		=			
ANR	5056943	Identifier	prec		5056211	0					
ANR	5056944	AdditiveExpression	band -> prec + precno		5056211	1		+			
ANR	5056945	PtrMemberAccess	band -> prec		5056211	0					
ANR	5056946	Identifier	band		5056211	0					
ANR	5056947	Identifier	prec		5056211	1					
ANR	5056948	Identifier	precno		5056211	1					
ANR	5056949	ExpressionStatement	nb_code_blocks = prec -> nb_codeblocks_height * prec -> nb_codeblocks_width	233:8:4577:4648	5056211	2	True				
ANR	5056950	AssignmentExpression	nb_code_blocks = prec -> nb_codeblocks_height * prec -> nb_codeblocks_width		5056211	0		=			
ANR	5056951	Identifier	nb_code_blocks		5056211	0					
ANR	5056952	MultiplicativeExpression	prec -> nb_codeblocks_height * prec -> nb_codeblocks_width		5056211	1		*			
ANR	5056953	PtrMemberAccess	prec -> nb_codeblocks_height		5056211	0					
ANR	5056954	Identifier	prec		5056211	0					
ANR	5056955	Identifier	nb_codeblocks_height		5056211	1					
ANR	5056956	PtrMemberAccess	prec -> nb_codeblocks_width		5056211	1					
ANR	5056957	Identifier	prec		5056211	0					
ANR	5056958	Identifier	nb_codeblocks_width		5056211	1					
ANR	5056959	ForStatement	for ( cblkno = 0 ; cblkno < nb_code_blocks ; cblkno ++ )		5056211	3					
ANR	5056960	ForInit	cblkno = 0 ;	235:13:4664:4674	5056211	0	True				
ANR	5056961	AssignmentExpression	cblkno = 0		5056211	0		=			
ANR	5056962	Identifier	cblkno		5056211	0					
ANR	5056963	PrimaryExpression	0		5056211	1					
ANR	5056964	Condition	cblkno < nb_code_blocks	235:25:4676:4698	5056211	1	True				
ANR	5056965	RelationalExpression	cblkno < nb_code_blocks		5056211	0		<			
ANR	5056966	Identifier	cblkno		5056211	0					
ANR	5056967	Identifier	nb_code_blocks		5056211	1					
ANR	5056968	PostIncDecOperationExpression	cblkno ++	235:50:4701:4708	5056211	2	True				
ANR	5056969	Identifier	cblkno		5056211	0					
ANR	5056970	IncDec	++		5056211	1					
ANR	5056971	CompoundStatement		229:12:4416:4456	5056211	3					
ANR	5056972	IdentifierDeclStatement	Jpeg2000Cblk * cblk = prec -> cblk + cblkno ;	237:12:4726:4766	5056211	0	True				
ANR	5056973	IdentifierDecl	* cblk = prec -> cblk + cblkno		5056211	0					
ANR	5056974	IdentifierDeclType	Jpeg2000Cblk *		5056211	0					
ANR	5056975	Identifier	cblk		5056211	1					
ANR	5056976	AssignmentExpression	* cblk = prec -> cblk + cblkno		5056211	2		=			
ANR	5056977	Identifier	cblk		5056211	0					
ANR	5056978	AdditiveExpression	prec -> cblk + cblkno		5056211	1		+			
ANR	5056979	PtrMemberAccess	prec -> cblk		5056211	0					
ANR	5056980	Identifier	prec		5056211	0					
ANR	5056981	Identifier	cblk		5056211	1					
ANR	5056982	Identifier	cblkno		5056211	1					
ANR	5056983	ForStatement	for ( cwsno = 0 ; cwsno < cblk -> nb_lengthinc ; cwsno ++ )		5056211	1					
ANR	5056984	ForInit	cwsno = 0 ;	239:17:4786:4795	5056211	0	True				
ANR	5056985	AssignmentExpression	cwsno = 0		5056211	0		=			
ANR	5056986	Identifier	cwsno		5056211	0					
ANR	5056987	PrimaryExpression	0		5056211	1					
ANR	5056988	Condition	cwsno < cblk -> nb_lengthinc	239:28:4797:4822	5056211	1	True				
ANR	5056989	RelationalExpression	cwsno < cblk -> nb_lengthinc		5056211	0		<			
ANR	5056990	Identifier	cwsno		5056211	0					
ANR	5056991	PtrMemberAccess	cblk -> nb_lengthinc		5056211	1					
ANR	5056992	Identifier	cblk		5056211	0					
ANR	5056993	Identifier	nb_lengthinc		5056211	1					
ANR	5056994	PostIncDecOperationExpression	cwsno ++	239:56:4825:4832	5056211	2	True				
ANR	5056995	Identifier	cwsno		5056211	0					
ANR	5056996	IncDec	++		5056211	1					
ANR	5056997	CompoundStatement		231:66:4525:4525	5056211	3					
ANR	5056998	IfStatement	if ( bytestream2_get_bytes_left ( & s -> g ) < cblk -> lengthinc [ cwsno ] || sizeof ( cblk -> data ) < cblk -> length + cblk -> lengthinc [ cwsno ] + 4 )		5056211	0					
ANR	5056999	Condition	bytestream2_get_bytes_left ( & s -> g ) < cblk -> lengthinc [ cwsno ] || sizeof ( cblk -> data ) < cblk -> length + cblk -> lengthinc [ cwsno ] + 4	241:23:4861:5005	5056211	0	True				
ANR	5057000	OrExpression	bytestream2_get_bytes_left ( & s -> g ) < cblk -> lengthinc [ cwsno ] || sizeof ( cblk -> data ) < cblk -> length + cblk -> lengthinc [ cwsno ] + 4		5056211	0		||			
ANR	5057001	RelationalExpression	bytestream2_get_bytes_left ( & s -> g ) < cblk -> lengthinc [ cwsno ]		5056211	0		<			
ANR	5057002	CallExpression	bytestream2_get_bytes_left ( & s -> g )		5056211	0					
ANR	5057003	Callee	bytestream2_get_bytes_left		5056211	0					
ANR	5057004	Identifier	bytestream2_get_bytes_left		5056211	0					
ANR	5057005	ArgumentList	& s -> g		5056211	1					
ANR	5057006	Argument	& s -> g		5056211	0					
ANR	5057007	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5057008	UnaryOperator	&		5056211	0					
ANR	5057009	PtrMemberAccess	s -> g		5056211	1					
ANR	5057010	Identifier	s		5056211	0					
ANR	5057011	Identifier	g		5056211	1					
ANR	5057012	ArrayIndexing	cblk -> lengthinc [ cwsno ]		5056211	1					
ANR	5057013	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5057014	Identifier	cblk		5056211	0					
ANR	5057015	Identifier	lengthinc		5056211	1					
ANR	5057016	Identifier	cwsno		5056211	1					
ANR	5057017	RelationalExpression	sizeof ( cblk -> data ) < cblk -> length + cblk -> lengthinc [ cwsno ] + 4		5056211	1		<			
ANR	5057018	SizeofExpression	sizeof ( cblk -> data )		5056211	0					
ANR	5057019	Sizeof	sizeof		5056211	0					
ANR	5057020	PtrMemberAccess	cblk -> data		5056211	1					
ANR	5057021	Identifier	cblk		5056211	0					
ANR	5057022	Identifier	data		5056211	1					
ANR	5057023	AdditiveExpression	cblk -> length + cblk -> lengthinc [ cwsno ] + 4		5056211	1		+			
ANR	5057024	PtrMemberAccess	cblk -> length		5056211	0					
ANR	5057025	Identifier	cblk		5056211	0					
ANR	5057026	Identifier	length		5056211	1					
ANR	5057027	AdditiveExpression	cblk -> lengthinc [ cwsno ] + 4		5056211	1		+			
ANR	5057028	ArrayIndexing	cblk -> lengthinc [ cwsno ]		5056211	0					
ANR	5057029	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5057030	Identifier	cblk		5056211	0					
ANR	5057031	Identifier	lengthinc		5056211	1					
ANR	5057032	Identifier	cwsno		5056211	1					
ANR	5057033	PrimaryExpression	4		5056211	1					
ANR	5057034	CompoundStatement		237:18:4716:4716	5056211	1					
ANR	5057035	Statement	av_log	247:20:5049:5054	5056211	0	True				
ANR	5057036	Statement	(	247:26:5055:5055	5056211	1	True				
ANR	5057037	Statement	s	247:27:5056:5056	5056211	2	True				
ANR	5057038	Statement	->	247:28:5057:5058	5056211	3	True				
ANR	5057039	Statement	avctx	247:30:5059:5063	5056211	4	True				
ANR	5057040	Statement	","	247:35:5064:5064	5056211	5	True				
ANR	5057041	Statement	AV_LOG_ERROR	247:37:5066:5077	5056211	6	True				
ANR	5057042	Statement	","	247:49:5078:5078	5056211	7	True				
ANR	5057043	Statement	"""Block length %"""	249:24:5105:5120	5056211	8	True				
ANR	5057044	Statement	PRIu16	249:40:5121:5126	5056211	9	True				
ANR	5057045	Statement	""" or lengthinc %d is too large, left %d\\n"""	249:46:5127:5168	5056211	10	True				
ANR	5057046	Statement	","	249:88:5169:5169	5056211	11	True				
ANR	5057047	Statement	cblk	251:24:5196:5199	5056211	12	True				
ANR	5057048	Statement	->	251:28:5200:5201	5056211	13	True				
ANR	5057049	Statement	length	251:30:5202:5207	5056211	14	True				
ANR	5057050	Statement	","	251:36:5208:5208	5056211	15	True				
ANR	5057051	Statement	cblk	251:38:5210:5213	5056211	16	True				
ANR	5057052	Statement	->	251:42:5214:5215	5056211	17	True				
ANR	5057053	Statement	lengthinc	251:44:5216:5224	5056211	18	True				
ANR	5057054	Statement	[	251:53:5225:5225	5056211	19	True				
ANR	5057055	Statement	cwsno	251:54:5226:5230	5056211	20	True				
ANR	5057056	Statement	]	251:59:5231:5231	5056211	21	True				
ANR	5057057	Statement	","	251:60:5232:5232	5056211	22	True				
ANR	5057058	Statement	bytestream2_get_bytes_left	251:62:5234:5259	5056211	23	True				
ANR	5057059	Statement	(	251:88:5260:5260	5056211	24	True				
ANR	5057060	Statement	&	251:89:5261:5261	5056211	25	True				
ANR	5057061	Statement	s	251:90:5262:5262	5056211	26	True				
ANR	5057062	Statement	->	251:91:5263:5264	5056211	27	True				
ANR	5057063	Statement	g	251:93:5265:5265	5056211	28	True				
ANR	5057064	Statement	)	251:94:5266:5266	5056211	29	True				
ANR	5057065	Statement	)	251:95:5267:5267	5056211	30	True				
ANR	5057066	ExpressionStatement		251:96:5268:5268	5056211	31	True				
ANR	5057067	ReturnStatement	return AVERROR_INVALIDDATA ;	253:20:5291:5317	5056211	32	True				
ANR	5057068	Identifier	AVERROR_INVALIDDATA		5056211	0					
ANR	5057069	ExpressionStatement	"bytestream2_get_bufferu ( & s -> g , cblk -> data + cblk -> length , cblk -> lengthinc [ cwsno ] )"	259:16:5357:5438	5056211	1	True				
ANR	5057070	CallExpression	"bytestream2_get_bufferu ( & s -> g , cblk -> data + cblk -> length , cblk -> lengthinc [ cwsno ] )"		5056211	0					
ANR	5057071	Callee	bytestream2_get_bufferu		5056211	0					
ANR	5057072	Identifier	bytestream2_get_bufferu		5056211	0					
ANR	5057073	ArgumentList	& s -> g		5056211	1					
ANR	5057074	Argument	& s -> g		5056211	0					
ANR	5057075	UnaryOperationExpression	& s -> g		5056211	0					
ANR	5057076	UnaryOperator	&		5056211	0					
ANR	5057077	PtrMemberAccess	s -> g		5056211	1					
ANR	5057078	Identifier	s		5056211	0					
ANR	5057079	Identifier	g		5056211	1					
ANR	5057080	Argument	cblk -> data + cblk -> length		5056211	1					
ANR	5057081	AdditiveExpression	cblk -> data + cblk -> length		5056211	0		+			
ANR	5057082	PtrMemberAccess	cblk -> data		5056211	0					
ANR	5057083	Identifier	cblk		5056211	0					
ANR	5057084	Identifier	data		5056211	1					
ANR	5057085	PtrMemberAccess	cblk -> length		5056211	1					
ANR	5057086	Identifier	cblk		5056211	0					
ANR	5057087	Identifier	length		5056211	1					
ANR	5057088	Argument	cblk -> lengthinc [ cwsno ]		5056211	2					
ANR	5057089	ArrayIndexing	cblk -> lengthinc [ cwsno ]		5056211	0					
ANR	5057090	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5057091	Identifier	cblk		5056211	0					
ANR	5057092	Identifier	lengthinc		5056211	1					
ANR	5057093	Identifier	cwsno		5056211	1					
ANR	5057094	ExpressionStatement	cblk -> length += cblk -> lengthinc [ cwsno ]	261:16:5457:5497	5056211	2	True				
ANR	5057095	AssignmentExpression	cblk -> length += cblk -> lengthinc [ cwsno ]		5056211	0		+=			
ANR	5057096	PtrMemberAccess	cblk -> length		5056211	0					
ANR	5057097	Identifier	cblk		5056211	0					
ANR	5057098	Identifier	length		5056211	1					
ANR	5057099	ArrayIndexing	cblk -> lengthinc [ cwsno ]		5056211	1					
ANR	5057100	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5057101	Identifier	cblk		5056211	0					
ANR	5057102	Identifier	lengthinc		5056211	1					
ANR	5057103	Identifier	cwsno		5056211	1					
ANR	5057104	ExpressionStatement	cblk -> lengthinc [ cwsno ] = 0	263:16:5516:5542	5056211	3	True				
ANR	5057105	AssignmentExpression	cblk -> lengthinc [ cwsno ] = 0		5056211	0		=			
ANR	5057106	ArrayIndexing	cblk -> lengthinc [ cwsno ]		5056211	0					
ANR	5057107	PtrMemberAccess	cblk -> lengthinc		5056211	0					
ANR	5057108	Identifier	cblk		5056211	0					
ANR	5057109	Identifier	lengthinc		5056211	1					
ANR	5057110	Identifier	cwsno		5056211	1					
ANR	5057111	PrimaryExpression	0		5056211	1					
ANR	5057112	IfStatement	if ( cblk -> nb_terminationsinc )		5056211	4					
ANR	5057113	Condition	cblk -> nb_terminationsinc	265:20:5565:5588	5056211	0	True				
ANR	5057114	PtrMemberAccess	cblk -> nb_terminationsinc		5056211	0					
ANR	5057115	Identifier	cblk		5056211	0					
ANR	5057116	Identifier	nb_terminationsinc		5056211	1					
ANR	5057117	CompoundStatement		257:46:5281:5281	5056211	1					
ANR	5057118	ExpressionStatement	cblk -> nb_terminationsinc --	267:20:5614:5640	5056211	0	True				
ANR	5057119	PostIncDecOperationExpression	cblk -> nb_terminationsinc --		5056211	0					
ANR	5057120	PtrMemberAccess	cblk -> nb_terminationsinc		5056211	0					
ANR	5057121	Identifier	cblk		5056211	0					
ANR	5057122	Identifier	nb_terminationsinc		5056211	1					
ANR	5057123	IncDec	--		5056211	1					
ANR	5057124	ExpressionStatement	cblk -> nb_terminations ++	269:20:5663:5686	5056211	1	True				
ANR	5057125	PostIncDecOperationExpression	cblk -> nb_terminations ++		5056211	0					
ANR	5057126	PtrMemberAccess	cblk -> nb_terminations		5056211	0					
ANR	5057127	Identifier	cblk		5056211	0					
ANR	5057128	Identifier	nb_terminations		5056211	1					
ANR	5057129	IncDec	++		5056211	1					
ANR	5057130	ExpressionStatement	cblk -> data [ cblk -> length ++ ] = 0xFF	271:20:5709:5742	5056211	2	True				
ANR	5057131	AssignmentExpression	cblk -> data [ cblk -> length ++ ] = 0xFF		5056211	0		=			
ANR	5057132	ArrayIndexing	cblk -> data [ cblk -> length ++ ]		5056211	0					
ANR	5057133	PtrMemberAccess	cblk -> data		5056211	0					
ANR	5057134	Identifier	cblk		5056211	0					
ANR	5057135	Identifier	data		5056211	1					
ANR	5057136	PostIncDecOperationExpression	cblk -> length ++		5056211	1					
ANR	5057137	PtrMemberAccess	cblk -> length		5056211	0					
ANR	5057138	Identifier	cblk		5056211	0					
ANR	5057139	Identifier	length		5056211	1					
ANR	5057140	IncDec	++		5056211	1					
ANR	5057141	PrimaryExpression	0xFF		5056211	1					
ANR	5057142	ExpressionStatement	cblk -> data [ cblk -> length ++ ] = 0xFF	273:20:5765:5798	5056211	3	True				
ANR	5057143	AssignmentExpression	cblk -> data [ cblk -> length ++ ] = 0xFF		5056211	0		=			
ANR	5057144	ArrayIndexing	cblk -> data [ cblk -> length ++ ]		5056211	0					
ANR	5057145	PtrMemberAccess	cblk -> data		5056211	0					
ANR	5057146	Identifier	cblk		5056211	0					
ANR	5057147	Identifier	data		5056211	1					
ANR	5057148	PostIncDecOperationExpression	cblk -> length ++		5056211	1					
ANR	5057149	PtrMemberAccess	cblk -> length		5056211	0					
ANR	5057150	Identifier	cblk		5056211	0					
ANR	5057151	Identifier	length		5056211	1					
ANR	5057152	IncDec	++		5056211	1					
ANR	5057153	PrimaryExpression	0xFF		5056211	1					
ANR	5057154	ExpressionStatement	cblk -> data_start [ cblk -> nb_terminations ] = cblk -> length	275:20:5821:5875	5056211	4	True				
ANR	5057155	AssignmentExpression	cblk -> data_start [ cblk -> nb_terminations ] = cblk -> length		5056211	0		=			
ANR	5057156	ArrayIndexing	cblk -> data_start [ cblk -> nb_terminations ]		5056211	0					
ANR	5057157	PtrMemberAccess	cblk -> data_start		5056211	0					
ANR	5057158	Identifier	cblk		5056211	0					
ANR	5057159	Identifier	data_start		5056211	1					
ANR	5057160	PtrMemberAccess	cblk -> nb_terminations		5056211	1					
ANR	5057161	Identifier	cblk		5056211	0					
ANR	5057162	Identifier	nb_terminations		5056211	1					
ANR	5057163	PtrMemberAccess	cblk -> length		5056211	1					
ANR	5057164	Identifier	cblk		5056211	0					
ANR	5057165	Identifier	length		5056211	1					
ANR	5057166	ReturnStatement	return 0 ;	285:4:5934:5942	5056211	11	True				
ANR	5057167	PrimaryExpression	0		5056211	0					
ANR	5057168	ReturnType	static int		5056211	1					
ANR	5057169	Identifier	jpeg2000_decode_packet		5056211	2					
ANR	5057170	ParameterList	"Jpeg2000DecoderContext * s , Jpeg2000Tile * tile , int * tp_index , Jpeg2000CodingStyle * codsty , Jpeg2000ResLevel * rlevel , int precno , int layno , uint8_t * expn , int numgbits"		5056211	3					
ANR	5057171	Parameter	Jpeg2000DecoderContext * s	1:34:34:58	5056211	0	True				
ANR	5057172	ParameterType	Jpeg2000DecoderContext *		5056211	0					
ANR	5057173	Identifier	s		5056211	1					
ANR	5057174	Parameter	Jpeg2000Tile * tile	1:61:61:78	5056211	1	True				
ANR	5057175	ParameterType	Jpeg2000Tile *		5056211	0					
ANR	5057176	Identifier	tile		5056211	1					
ANR	5057177	Parameter	int * tp_index	1:81:81:93	5056211	2	True				
ANR	5057178	ParameterType	int *		5056211	0					
ANR	5057179	Identifier	tp_index		5056211	1					
ANR	5057180	Parameter	Jpeg2000CodingStyle * codsty	3:34:131:157	5056211	3	True				
ANR	5057181	ParameterType	Jpeg2000CodingStyle *		5056211	0					
ANR	5057182	Identifier	codsty		5056211	1					
ANR	5057183	Parameter	Jpeg2000ResLevel * rlevel	5:34:195:218	5056211	4	True				
ANR	5057184	ParameterType	Jpeg2000ResLevel *		5056211	0					
ANR	5057185	Identifier	rlevel		5056211	1					
ANR	5057186	Parameter	int precno	5:60:221:230	5056211	5	True				
ANR	5057187	ParameterType	int		5056211	0					
ANR	5057188	Identifier	precno		5056211	1					
ANR	5057189	Parameter	int layno	7:34:268:276	5056211	6	True				
ANR	5057190	ParameterType	int		5056211	0					
ANR	5057191	Identifier	layno		5056211	1					
ANR	5057192	Parameter	uint8_t * expn	7:45:279:291	5056211	7	True				
ANR	5057193	ParameterType	uint8_t *		5056211	0					
ANR	5057194	Identifier	expn		5056211	1					
ANR	5057195	Parameter	int numgbits	7:60:294:305	5056211	8	True				
ANR	5057196	ParameterType	int		5056211	0					
ANR	5057197	Identifier	numgbits		5056211	1					
ANR	5057198	CFGEntryNode	ENTRY		5056211		True				
ANR	5057199	CFGExitNode	EXIT		5056211		True				
ANR	5057200	Symbol	nb_code_blocks		5056211						
ANR	5057201	Symbol	* cwsno		5056211						
ANR	5057202	Symbol	band -> prec		5056211						
ANR	5057203	Symbol	* bandno		5056211						
ANR	5057204	Symbol	JPEG2000_EPH		5056211						
ANR	5057205	Symbol	* * tp_index		5056211						
ANR	5057206	Symbol	prec		5056211						
ANR	5057207	Symbol	codsty -> csty		5056211						
ANR	5057208	Symbol	* cblk -> data		5056211						
ANR	5057209	Symbol	band		5056211						
ANR	5057210	Symbol	llen		5056211						
ANR	5057211	Symbol	cblk -> nb_lengthinc		5056211						
ANR	5057212	Symbol	* * rlevel -> band		5056211						
ANR	5057213	Symbol	cwsno		5056211						
ANR	5057214	Symbol	cblk		5056211						
ANR	5057215	Symbol	FF_ARRAY_ELEMS		5056211						
ANR	5057216	Symbol	* rlevel -> band		5056211						
ANR	5057217	Symbol	& s -> g		5056211						
ANR	5057218	Symbol	tile -> tile_part		5056211						
ANR	5057219	Symbol	s -> bit_index		5056211						
ANR	5057220	Symbol	getlblockinc		5056211						
ANR	5057221	Symbol	av_log2		5056211						
ANR	5057222	Symbol	* tile		5056211						
ANR	5057223	Symbol	cblk -> data_start		5056211						
ANR	5057224	Symbol	JPEG2000_MAX_PASSES		5056211						
ANR	5057225	Symbol	needs_termination		5056211						
ANR	5057226	Symbol	* * * rlevel		5056211						
ANR	5057227	Symbol	s -> g		5056211						
ANR	5057228	Symbol	prec -> zerobits		5056211						
ANR	5057229	Symbol	cblk -> npasses		5056211						
ANR	5057230	Symbol	AVERROR_PATCHWELCOME		5056211						
ANR	5057231	Symbol	* * cblk		5056211						
ANR	5057232	Symbol	cblk -> nb_terminationsinc		5056211						
ANR	5057233	Symbol	AV_LOG_ERROR		5056211						
ANR	5057234	Symbol	* rlevel		5056211						
ANR	5057235	Symbol	* tile -> tile_part		5056211						
ANR	5057236	Symbol	prec -> cblk		5056211						
ANR	5057237	Symbol	s		5056211						
ANR	5057238	Symbol	bandno		5056211						
ANR	5057239	Symbol	* * band		5056211						
ANR	5057240	Symbol	precno		5056211						
ANR	5057241	Symbol	v		5056211						
ANR	5057242	Symbol	rlevel -> band [ 0 ] . prec		5056211						
ANR	5057243	Symbol	layno		5056211						
ANR	5057244	Symbol	AVERROR_INVALIDDATA		5056211						
ANR	5057245	Symbol	getnpasses		5056211						
ANR	5057246	Symbol	prec -> nb_codeblocks_width		5056211						
ANR	5057247	Symbol	incl		5056211						
ANR	5057248	Symbol	* * band -> coord		5056211						
ANR	5057249	Symbol	* codsty		5056211						
ANR	5057250	Symbol	get_bits		5056211						
ANR	5057251	Symbol	cblk -> data		5056211						
ANR	5057252	Symbol	tile -> tile_part [ ++ ( * tp_index ) ] . tpg		5056211						
ANR	5057253	Symbol	bytestream2_peek_be16		5056211						
ANR	5057254	Symbol	tp_index		5056211						
ANR	5057255	Symbol	* band -> coord		5056211						
ANR	5057256	Symbol	tile		5056211						
ANR	5057257	Symbol	tag_tree_decode		5056211						
ANR	5057258	Symbol	ret		5056211						
ANR	5057259	Symbol	cblk -> lblock		5056211						
ANR	5057260	Symbol	* rlevel -> band [ 0 ] . prec		5056211						
ANR	5057261	Symbol	* * * band		5056211						
ANR	5057262	Symbol	* expn		5056211						
ANR	5057263	Symbol	cblk -> length		5056211						
ANR	5057264	Symbol	cblk -> lengthinc		5056211						
ANR	5057265	Symbol	s -> avctx		5056211						
ANR	5057266	Symbol	JPEG2000_SOP_FIXED_BYTES		5056211						
ANR	5057267	Symbol	* * rlevel		5056211						
ANR	5057268	Symbol	band -> coord		5056211						
ANR	5057269	Symbol	rlevel -> band [ 0 ] . prec [ precno ] . decoded_layers		5056211						
ANR	5057270	Symbol	* * tile		5056211						
ANR	5057271	Symbol	* cblk		5056211						
ANR	5057272	Symbol	rlevel -> band		5056211						
ANR	5057273	Symbol	* cblk -> nb_terminations		5056211						
ANR	5057274	Symbol	bytestream2_peek_be32		5056211						
ANR	5057275	Symbol	cblkno		5056211						
ANR	5057276	Symbol	codsty -> cblk_style		5056211						
ANR	5057277	Symbol	* precno		5056211						
ANR	5057278	Symbol	bytestream2_get_bytes_left		5056211						
ANR	5057279	Symbol	expn		5056211						
ANR	5057280	Symbol	* cblk -> data_start		5056211						
ANR	5057281	Symbol	JPEG2000_CSTY_EPH		5056211						
ANR	5057282	Symbol	JPEG2000_SOP_BYTE_LENGTH		5056211						
ANR	5057283	Symbol	newpasses		5056211						
ANR	5057284	Symbol	* tp_index		5056211						
ANR	5057285	Symbol	prec -> nb_codeblocks_height		5056211						
ANR	5057286	Symbol	prec -> cblkincl		5056211						
ANR	5057287	Symbol	numgbits		5056211						
ANR	5057288	Symbol	cblk -> nb_terminations		5056211						
ANR	5057289	Symbol	* prec		5056211						
ANR	5057290	Symbol	newpasses1		5056211						
ANR	5057291	Symbol	* band		5056211						
ANR	5057292	Symbol	* cblk -> lengthinc		5056211						
ANR	5057293	Symbol	rlevel		5056211						
ANR	5057294	Symbol	codsty		5056211						
ANR	5057295	Symbol	rlevel -> nbands		5056211						
ANR	5057296	Symbol	* s		5056211						
ANR	5057297	Symbol	cblk -> nonzerobits		5056211						
