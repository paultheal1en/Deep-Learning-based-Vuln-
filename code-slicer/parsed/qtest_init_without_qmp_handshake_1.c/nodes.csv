command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7156443	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qtest_init_without_qmp_handshake_1.c								
ANR	7156444	Function	qtest_init_without_qmp_handshake	1:0:0:1841							
ANR	7156445	FunctionDef	qtest_init_without_qmp_handshake (const char * extra_args)		7156444	0					
ANR	7156446	CompoundStatement		2:0:69:1841	7156444	0					
ANR	7156447	IdentifierDeclStatement	QTestState * s ;	3:4:75:88	7156444	0	True				
ANR	7156448	IdentifierDecl	* s		7156444	0					
ANR	7156449	IdentifierDeclType	QTestState *		7156444	0					
ANR	7156450	Identifier	s		7156444	1					
ANR	7156451	IdentifierDeclStatement	"int sock , qmpsock , i ;"	4:4:94:114	7156444	1	True				
ANR	7156452	IdentifierDecl	sock		7156444	0					
ANR	7156453	IdentifierDeclType	int		7156444	0					
ANR	7156454	Identifier	sock		7156444	1					
ANR	7156455	IdentifierDecl	qmpsock		7156444	1					
ANR	7156456	IdentifierDeclType	int		7156444	0					
ANR	7156457	Identifier	qmpsock		7156444	1					
ANR	7156458	IdentifierDecl	i		7156444	2					
ANR	7156459	IdentifierDeclType	int		7156444	0					
ANR	7156460	Identifier	i		7156444	1					
ANR	7156461	IdentifierDeclStatement	gchar * socket_path ;	5:4:120:138	7156444	2	True				
ANR	7156462	IdentifierDecl	* socket_path		7156444	0					
ANR	7156463	IdentifierDeclType	gchar *		7156444	0					
ANR	7156464	Identifier	socket_path		7156444	1					
ANR	7156465	IdentifierDeclStatement	gchar * qmp_socket_path ;	6:4:144:166	7156444	3	True				
ANR	7156466	IdentifierDecl	* qmp_socket_path		7156444	0					
ANR	7156467	IdentifierDeclType	gchar *		7156444	0					
ANR	7156468	Identifier	qmp_socket_path		7156444	1					
ANR	7156469	IdentifierDeclStatement	gchar * command ;	7:4:172:186	7156444	4	True				
ANR	7156470	IdentifierDecl	* command		7156444	0					
ANR	7156471	IdentifierDeclType	gchar *		7156444	0					
ANR	7156472	Identifier	command		7156444	1					
ANR	7156473	IdentifierDeclStatement	const char * qemu_binary ;	8:4:192:215	7156444	5	True				
ANR	7156474	IdentifierDecl	* qemu_binary		7156444	0					
ANR	7156475	IdentifierDeclType	const char *		7156444	0					
ANR	7156476	Identifier	qemu_binary		7156444	1					
ANR	7156477	ExpressionStatement	"qemu_binary = getenv ( ""QTEST_QEMU_BINARY"" )"	9:4:221:262	7156444	6	True				
ANR	7156478	AssignmentExpression	"qemu_binary = getenv ( ""QTEST_QEMU_BINARY"" )"		7156444	0		=			
ANR	7156479	Identifier	qemu_binary		7156444	0					
ANR	7156480	CallExpression	"getenv ( ""QTEST_QEMU_BINARY"" )"		7156444	1					
ANR	7156481	Callee	getenv		7156444	0					
ANR	7156482	Identifier	getenv		7156444	0					
ANR	7156483	ArgumentList	"""QTEST_QEMU_BINARY"""		7156444	1					
ANR	7156484	Argument	"""QTEST_QEMU_BINARY"""		7156444	0					
ANR	7156485	PrimaryExpression	"""QTEST_QEMU_BINARY"""		7156444	0					
ANR	7156486	ExpressionStatement	g_assert ( qemu_binary != NULL )	10:4:268:297	7156444	7	True				
ANR	7156487	CallExpression	g_assert ( qemu_binary != NULL )		7156444	0					
ANR	7156488	Callee	g_assert		7156444	0					
ANR	7156489	Identifier	g_assert		7156444	0					
ANR	7156490	ArgumentList	qemu_binary != NULL		7156444	1					
ANR	7156491	Argument	qemu_binary != NULL		7156444	0					
ANR	7156492	EqualityExpression	qemu_binary != NULL		7156444	0		!=			
ANR	7156493	Identifier	qemu_binary		7156444	0					
ANR	7156494	Identifier	NULL		7156444	1					
ANR	7156495	ExpressionStatement	s = g_malloc ( sizeof ( * s ) )	11:4:303:327	7156444	8	True				
ANR	7156496	AssignmentExpression	s = g_malloc ( sizeof ( * s ) )		7156444	0		=			
ANR	7156497	Identifier	s		7156444	0					
ANR	7156498	CallExpression	g_malloc ( sizeof ( * s ) )		7156444	1					
ANR	7156499	Callee	g_malloc		7156444	0					
ANR	7156500	Identifier	g_malloc		7156444	0					
ANR	7156501	ArgumentList	sizeof ( * s )		7156444	1					
ANR	7156502	Argument	sizeof ( * s )		7156444	0					
ANR	7156503	SizeofExpression	sizeof ( * s )		7156444	0					
ANR	7156504	Sizeof	sizeof		7156444	0					
ANR	7156505	UnaryOperationExpression	* s		7156444	1					
ANR	7156506	UnaryOperator	*		7156444	0					
ANR	7156507	Identifier	s		7156444	1					
ANR	7156508	ExpressionStatement	"socket_path = g_strdup_printf ( ""/tmp/qtest-%d.sock"" , getpid ( ) )"	12:4:333:394	7156444	9	True				
ANR	7156509	AssignmentExpression	"socket_path = g_strdup_printf ( ""/tmp/qtest-%d.sock"" , getpid ( ) )"		7156444	0		=			
ANR	7156510	Identifier	socket_path		7156444	0					
ANR	7156511	CallExpression	"g_strdup_printf ( ""/tmp/qtest-%d.sock"" , getpid ( ) )"		7156444	1					
ANR	7156512	Callee	g_strdup_printf		7156444	0					
ANR	7156513	Identifier	g_strdup_printf		7156444	0					
ANR	7156514	ArgumentList	"""/tmp/qtest-%d.sock"""		7156444	1					
ANR	7156515	Argument	"""/tmp/qtest-%d.sock"""		7156444	0					
ANR	7156516	PrimaryExpression	"""/tmp/qtest-%d.sock"""		7156444	0					
ANR	7156517	Argument	getpid ( )		7156444	1					
ANR	7156518	CallExpression	getpid ( )		7156444	0					
ANR	7156519	Callee	getpid		7156444	0					
ANR	7156520	Identifier	getpid		7156444	0					
ANR	7156521	ArgumentList			7156444	1					
ANR	7156522	ExpressionStatement	"qmp_socket_path = g_strdup_printf ( ""/tmp/qtest-%d.qmp"" , getpid ( ) )"	13:4:400:464	7156444	10	True				
ANR	7156523	AssignmentExpression	"qmp_socket_path = g_strdup_printf ( ""/tmp/qtest-%d.qmp"" , getpid ( ) )"		7156444	0		=			
ANR	7156524	Identifier	qmp_socket_path		7156444	0					
ANR	7156525	CallExpression	"g_strdup_printf ( ""/tmp/qtest-%d.qmp"" , getpid ( ) )"		7156444	1					
ANR	7156526	Callee	g_strdup_printf		7156444	0					
ANR	7156527	Identifier	g_strdup_printf		7156444	0					
ANR	7156528	ArgumentList	"""/tmp/qtest-%d.qmp"""		7156444	1					
ANR	7156529	Argument	"""/tmp/qtest-%d.qmp"""		7156444	0					
ANR	7156530	PrimaryExpression	"""/tmp/qtest-%d.qmp"""		7156444	0					
ANR	7156531	Argument	getpid ( )		7156444	1					
ANR	7156532	CallExpression	getpid ( )		7156444	0					
ANR	7156533	Callee	getpid		7156444	0					
ANR	7156534	Identifier	getpid		7156444	0					
ANR	7156535	ArgumentList			7156444	1					
ANR	7156536	ExpressionStatement	sock = init_socket ( socket_path )	14:4:470:501	7156444	11	True				
ANR	7156537	AssignmentExpression	sock = init_socket ( socket_path )		7156444	0		=			
ANR	7156538	Identifier	sock		7156444	0					
ANR	7156539	CallExpression	init_socket ( socket_path )		7156444	1					
ANR	7156540	Callee	init_socket		7156444	0					
ANR	7156541	Identifier	init_socket		7156444	0					
ANR	7156542	ArgumentList	socket_path		7156444	1					
ANR	7156543	Argument	socket_path		7156444	0					
ANR	7156544	Identifier	socket_path		7156444	0					
ANR	7156545	ExpressionStatement	qmpsock = init_socket ( qmp_socket_path )	15:4:507:545	7156444	12	True				
ANR	7156546	AssignmentExpression	qmpsock = init_socket ( qmp_socket_path )		7156444	0		=			
ANR	7156547	Identifier	qmpsock		7156444	0					
ANR	7156548	CallExpression	init_socket ( qmp_socket_path )		7156444	1					
ANR	7156549	Callee	init_socket		7156444	0					
ANR	7156550	Identifier	init_socket		7156444	0					
ANR	7156551	ArgumentList	qmp_socket_path		7156444	1					
ANR	7156552	Argument	qmp_socket_path		7156444	0					
ANR	7156553	Identifier	qmp_socket_path		7156444	0					
ANR	7156554	ExpressionStatement	"qtest_add_abrt_handler ( kill_qemu_hook_func , s )"	16:4:551:597	7156444	13	True				
ANR	7156555	CallExpression	"qtest_add_abrt_handler ( kill_qemu_hook_func , s )"		7156444	0					
ANR	7156556	Callee	qtest_add_abrt_handler		7156444	0					
ANR	7156557	Identifier	qtest_add_abrt_handler		7156444	0					
ANR	7156558	ArgumentList	kill_qemu_hook_func		7156444	1					
ANR	7156559	Argument	kill_qemu_hook_func		7156444	0					
ANR	7156560	Identifier	kill_qemu_hook_func		7156444	0					
ANR	7156561	Argument	s		7156444	1					
ANR	7156562	Identifier	s		7156444	0					
ANR	7156563	ExpressionStatement	s -> qemu_pid = fork ( )	17:4:603:623	7156444	14	True				
ANR	7156564	AssignmentExpression	s -> qemu_pid = fork ( )		7156444	0		=			
ANR	7156565	PtrMemberAccess	s -> qemu_pid		7156444	0					
ANR	7156566	Identifier	s		7156444	0					
ANR	7156567	Identifier	qemu_pid		7156444	1					
ANR	7156568	CallExpression	fork ( )		7156444	1					
ANR	7156569	Callee	fork		7156444	0					
ANR	7156570	Identifier	fork		7156444	0					
ANR	7156571	ArgumentList			7156444	1					
ANR	7156572	IfStatement	if ( s -> qemu_pid == 0 )		7156444	15					
ANR	7156573	Condition	s -> qemu_pid == 0	18:8:633:648	7156444	0	True				
ANR	7156574	EqualityExpression	s -> qemu_pid == 0		7156444	0		==			
ANR	7156575	PtrMemberAccess	s -> qemu_pid		7156444	0					
ANR	7156576	Identifier	s		7156444	0					
ANR	7156577	Identifier	qemu_pid		7156444	1					
ANR	7156578	PrimaryExpression	0		7156444	1					
ANR	7156579	CompoundStatement		17:26:581:581	7156444	1					
ANR	7156580	ExpressionStatement	"setenv ( ""QEMU_AUDIO_DRV"" , ""none"" , true )"	19:8:661:699	7156444	0	True				
ANR	7156581	CallExpression	"setenv ( ""QEMU_AUDIO_DRV"" , ""none"" , true )"		7156444	0					
ANR	7156582	Callee	setenv		7156444	0					
ANR	7156583	Identifier	setenv		7156444	0					
ANR	7156584	ArgumentList	"""QEMU_AUDIO_DRV"""		7156444	1					
ANR	7156585	Argument	"""QEMU_AUDIO_DRV"""		7156444	0					
ANR	7156586	PrimaryExpression	"""QEMU_AUDIO_DRV"""		7156444	0					
ANR	7156587	Argument	"""none"""		7156444	1					
ANR	7156588	PrimaryExpression	"""none"""		7156444	0					
ANR	7156589	Argument	true		7156444	2					
ANR	7156590	Identifier	true		7156444	0					
ANR	7156591	Statement	command	20:8:709:715	7156444	1	True				
ANR	7156592	Statement	=	20:16:717:717	7156444	2	True				
ANR	7156593	Statement	g_strdup_printf	20:18:719:733	7156444	3	True				
ANR	7156594	Statement	(	20:33:734:734	7156444	4	True				
ANR	7156595	Statement	"""exec %s """	20:34:735:744	7156444	5	True				
ANR	7156596	Statement	"""-qtest unix:%s,nowait """	21:34:780:803	7156444	6	True				
ANR	7156597	Statement	"""-qtest-log %s """	22:34:839:854	7156444	7	True				
ANR	7156598	Statement	"""-qmp unix:%s,nowait """	23:34:890:911	7156444	8	True				
ANR	7156599	Statement	"""-machine accel=qtest """	24:34:947:969	7156444	9	True				
ANR	7156600	Statement	"""-display none """	25:34:1005:1020	7156444	10	True				
ANR	7156601	Statement	"""%s"""	26:34:1056:1059	7156444	11	True				
ANR	7156602	Statement	","	26:38:1060:1060	7156444	12	True				
ANR	7156603	Statement	qemu_binary	26:40:1062:1072	7156444	13	True				
ANR	7156604	Statement	","	26:51:1073:1073	7156444	14	True				
ANR	7156605	Statement	socket_path	26:53:1075:1085	7156444	15	True				
ANR	7156606	Statement	","	26:64:1086:1086	7156444	16	True				
ANR	7156607	Statement	getenv	27:34:1122:1127	7156444	17	True				
ANR	7156608	Statement	(	27:40:1128:1128	7156444	18	True				
ANR	7156609	Statement	"""QTEST_LOG"""	27:41:1129:1139	7156444	19	True				
ANR	7156610	Statement	)	27:52:1140:1140	7156444	20	True				
ANR	7156611	Statement	?	27:54:1142:1142	7156444	21	True				
ANR	7156612	Statement	"""/dev/fd/2"""	27:56:1144:1154	7156444	22	True				
ANR	7156613	Statement	:	27:68:1156:1156	7156444	23	True				
ANR	7156614	Statement	"""/dev/null"""	27:70:1158:1168	7156444	24	True				
ANR	7156615	Statement	","	27:81:1169:1169	7156444	25	True				
ANR	7156616	Statement	qmp_socket_path	28:34:1205:1219	7156444	26	True				
ANR	7156617	Statement	","	28:49:1220:1220	7156444	27	True				
ANR	7156618	Statement	extra_args	29:34:1256:1265	7156444	28	True				
ANR	7156619	Statement	?	29:45:1267:1267	7156444	29	True				
ANR	7156620	Statement	:	29:46:1268:1268	7156444	30	True				
ANR	7156621	Statement	""""""	29:48:1270:1271	7156444	31	True				
ANR	7156622	Statement	)	29:50:1272:1272	7156444	32	True				
ANR	7156623	ExpressionStatement		29:51:1273:1273	7156444	33	True				
ANR	7156624	ExpressionStatement	"execlp ( ""/bin/sh"" , ""sh"" , ""-c"" , command , NULL )"	30:8:1283:1327	7156444	34	True				
ANR	7156625	CallExpression	"execlp ( ""/bin/sh"" , ""sh"" , ""-c"" , command , NULL )"		7156444	0					
ANR	7156626	Callee	execlp		7156444	0					
ANR	7156627	Identifier	execlp		7156444	0					
ANR	7156628	ArgumentList	"""/bin/sh"""		7156444	1					
ANR	7156629	Argument	"""/bin/sh"""		7156444	0					
ANR	7156630	PrimaryExpression	"""/bin/sh"""		7156444	0					
ANR	7156631	Argument	"""sh"""		7156444	1					
ANR	7156632	PrimaryExpression	"""sh"""		7156444	0					
ANR	7156633	Argument	"""-c"""		7156444	2					
ANR	7156634	PrimaryExpression	"""-c"""		7156444	0					
ANR	7156635	Argument	command		7156444	3					
ANR	7156636	Identifier	command		7156444	0					
ANR	7156637	Argument	NULL		7156444	4					
ANR	7156638	Identifier	NULL		7156444	0					
ANR	7156639	ExpressionStatement	exit ( 1 )	31:8:1337:1344	7156444	35	True				
ANR	7156640	CallExpression	exit ( 1 )		7156444	0					
ANR	7156641	Callee	exit		7156444	0					
ANR	7156642	Identifier	exit		7156444	0					
ANR	7156643	ArgumentList	1		7156444	1					
ANR	7156644	Argument	1		7156444	0					
ANR	7156645	PrimaryExpression	1		7156444	0					
ANR	7156646	ExpressionStatement	s -> fd = socket_accept ( sock )	33:4:1356:1383	7156444	16	True				
ANR	7156647	AssignmentExpression	s -> fd = socket_accept ( sock )		7156444	0		=			
ANR	7156648	PtrMemberAccess	s -> fd		7156444	0					
ANR	7156649	Identifier	s		7156444	0					
ANR	7156650	Identifier	fd		7156444	1					
ANR	7156651	CallExpression	socket_accept ( sock )		7156444	1					
ANR	7156652	Callee	socket_accept		7156444	0					
ANR	7156653	Identifier	socket_accept		7156444	0					
ANR	7156654	ArgumentList	sock		7156444	1					
ANR	7156655	Argument	sock		7156444	0					
ANR	7156656	Identifier	sock		7156444	0					
ANR	7156657	IfStatement	if ( s -> fd >= 0 )		7156444	17					
ANR	7156658	Condition	s -> fd >= 0	34:8:1393:1402	7156444	0	True				
ANR	7156659	RelationalExpression	s -> fd >= 0		7156444	0		>=			
ANR	7156660	PtrMemberAccess	s -> fd		7156444	0					
ANR	7156661	Identifier	s		7156444	0					
ANR	7156662	Identifier	fd		7156444	1					
ANR	7156663	PrimaryExpression	0		7156444	1					
ANR	7156664	CompoundStatement		33:20:1335:1335	7156444	1					
ANR	7156665	ExpressionStatement	s -> qmp_fd = socket_accept ( qmpsock )	35:8:1415:1449	7156444	0	True				
ANR	7156666	AssignmentExpression	s -> qmp_fd = socket_accept ( qmpsock )		7156444	0		=			
ANR	7156667	PtrMemberAccess	s -> qmp_fd		7156444	0					
ANR	7156668	Identifier	s		7156444	0					
ANR	7156669	Identifier	qmp_fd		7156444	1					
ANR	7156670	CallExpression	socket_accept ( qmpsock )		7156444	1					
ANR	7156671	Callee	socket_accept		7156444	0					
ANR	7156672	Identifier	socket_accept		7156444	0					
ANR	7156673	ArgumentList	qmpsock		7156444	1					
ANR	7156674	Argument	qmpsock		7156444	0					
ANR	7156675	Identifier	qmpsock		7156444	0					
ANR	7156676	ExpressionStatement	g_free ( socket_path )	37:4:1461:1480	7156444	18	True				
ANR	7156677	CallExpression	g_free ( socket_path )		7156444	0					
ANR	7156678	Callee	g_free		7156444	0					
ANR	7156679	Identifier	g_free		7156444	0					
ANR	7156680	ArgumentList	socket_path		7156444	1					
ANR	7156681	Argument	socket_path		7156444	0					
ANR	7156682	Identifier	socket_path		7156444	0					
ANR	7156683	ExpressionStatement	g_free ( qmp_socket_path )	38:4:1486:1509	7156444	19	True				
ANR	7156684	CallExpression	g_free ( qmp_socket_path )		7156444	0					
ANR	7156685	Callee	g_free		7156444	0					
ANR	7156686	Identifier	g_free		7156444	0					
ANR	7156687	ArgumentList	qmp_socket_path		7156444	1					
ANR	7156688	Argument	qmp_socket_path		7156444	0					
ANR	7156689	Identifier	qmp_socket_path		7156444	0					
ANR	7156690	ExpressionStatement	g_assert ( s -> fd >= 0 && s -> qmp_fd >= 0 )	39:4:1515:1553	7156444	20	True				
ANR	7156691	CallExpression	g_assert ( s -> fd >= 0 && s -> qmp_fd >= 0 )		7156444	0					
ANR	7156692	Callee	g_assert		7156444	0					
ANR	7156693	Identifier	g_assert		7156444	0					
ANR	7156694	ArgumentList	s -> fd >= 0 && s -> qmp_fd >= 0		7156444	1					
ANR	7156695	Argument	s -> fd >= 0 && s -> qmp_fd >= 0		7156444	0					
ANR	7156696	AndExpression	s -> fd >= 0 && s -> qmp_fd >= 0		7156444	0		&&			
ANR	7156697	RelationalExpression	s -> fd >= 0		7156444	0		>=			
ANR	7156698	PtrMemberAccess	s -> fd		7156444	0					
ANR	7156699	Identifier	s		7156444	0					
ANR	7156700	Identifier	fd		7156444	1					
ANR	7156701	PrimaryExpression	0		7156444	1					
ANR	7156702	RelationalExpression	s -> qmp_fd >= 0		7156444	1		>=			
ANR	7156703	PtrMemberAccess	s -> qmp_fd		7156444	0					
ANR	7156704	Identifier	s		7156444	0					
ANR	7156705	Identifier	qmp_fd		7156444	1					
ANR	7156706	PrimaryExpression	0		7156444	1					
ANR	7156707	ExpressionStatement	"s -> rx = g_string_new ( """" )"	40:4:1559:1583	7156444	21	True				
ANR	7156708	AssignmentExpression	"s -> rx = g_string_new ( """" )"		7156444	0		=			
ANR	7156709	PtrMemberAccess	s -> rx		7156444	0					
ANR	7156710	Identifier	s		7156444	0					
ANR	7156711	Identifier	rx		7156444	1					
ANR	7156712	CallExpression	"g_string_new ( """" )"		7156444	1					
ANR	7156713	Callee	g_string_new		7156444	0					
ANR	7156714	Identifier	g_string_new		7156444	0					
ANR	7156715	ArgumentList	""""""		7156444	1					
ANR	7156716	Argument	""""""		7156444	0					
ANR	7156717	PrimaryExpression	""""""		7156444	0					
ANR	7156718	ForStatement	for ( i = 0 ; i < MAX_IRQ ; i ++ )		7156444	22					
ANR	7156719	ForInit	i = 0 ;	41:9:1594:1599	7156444	0	True				
ANR	7156720	AssignmentExpression	i = 0		7156444	0		=			
ANR	7156721	Identifier	i		7156444	0					
ANR	7156722	PrimaryExpression	0		7156444	1					
ANR	7156723	Condition	i < MAX_IRQ	41:16:1601:1611	7156444	1	True				
ANR	7156724	RelationalExpression	i < MAX_IRQ		7156444	0		<			
ANR	7156725	Identifier	i		7156444	0					
ANR	7156726	Identifier	MAX_IRQ		7156444	1					
ANR	7156727	PostIncDecOperationExpression	i ++	41:29:1614:1616	7156444	2	True				
ANR	7156728	Identifier	i		7156444	0					
ANR	7156729	IncDec	++		7156444	1					
ANR	7156730	CompoundStatement		40:34:1549:1549	7156444	3					
ANR	7156731	ExpressionStatement	s -> irq_level [ i ] = false	42:8:1629:1652	7156444	0	True				
ANR	7156732	AssignmentExpression	s -> irq_level [ i ] = false		7156444	0		=			
ANR	7156733	ArrayIndexing	s -> irq_level [ i ]		7156444	0					
ANR	7156734	PtrMemberAccess	s -> irq_level		7156444	0					
ANR	7156735	Identifier	s		7156444	0					
ANR	7156736	Identifier	irq_level		7156444	1					
ANR	7156737	Identifier	i		7156444	1					
ANR	7156738	Identifier	false		7156444	1					
ANR	7156739	IfStatement	"if ( getenv ( ""QTEST_STOP"" ) )"		7156444	23					
ANR	7156740	Condition	"getenv ( ""QTEST_STOP"" )"	44:8:1668:1687	7156444	0	True				
ANR	7156741	CallExpression	"getenv ( ""QTEST_STOP"" )"		7156444	0					
ANR	7156742	Callee	getenv		7156444	0					
ANR	7156743	Identifier	getenv		7156444	0					
ANR	7156744	ArgumentList	"""QTEST_STOP"""		7156444	1					
ANR	7156745	Argument	"""QTEST_STOP"""		7156444	0					
ANR	7156746	PrimaryExpression	"""QTEST_STOP"""		7156444	0					
ANR	7156747	CompoundStatement		43:30:1620:1620	7156444	1					
ANR	7156748	ExpressionStatement	"kill ( s -> qemu_pid , SIGSTOP )"	45:8:1700:1726	7156444	0	True				
ANR	7156749	CallExpression	"kill ( s -> qemu_pid , SIGSTOP )"		7156444	0					
ANR	7156750	Callee	kill		7156444	0					
ANR	7156751	Identifier	kill		7156444	0					
ANR	7156752	ArgumentList	s -> qemu_pid		7156444	1					
ANR	7156753	Argument	s -> qemu_pid		7156444	0					
ANR	7156754	PtrMemberAccess	s -> qemu_pid		7156444	0					
ANR	7156755	Identifier	s		7156444	0					
ANR	7156756	Identifier	qemu_pid		7156444	1					
ANR	7156757	Argument	SIGSTOP		7156444	1					
ANR	7156758	Identifier	SIGSTOP		7156444	0					
ANR	7156759	ExpressionStatement	s -> big_endian = qtest_query_target_endianness ( s )	48:4:1777:1825	7156444	24	True				
ANR	7156760	AssignmentExpression	s -> big_endian = qtest_query_target_endianness ( s )		7156444	0		=			
ANR	7156761	PtrMemberAccess	s -> big_endian		7156444	0					
ANR	7156762	Identifier	s		7156444	0					
ANR	7156763	Identifier	big_endian		7156444	1					
ANR	7156764	CallExpression	qtest_query_target_endianness ( s )		7156444	1					
ANR	7156765	Callee	qtest_query_target_endianness		7156444	0					
ANR	7156766	Identifier	qtest_query_target_endianness		7156444	0					
ANR	7156767	ArgumentList	s		7156444	1					
ANR	7156768	Argument	s		7156444	0					
ANR	7156769	Identifier	s		7156444	0					
ANR	7156770	ReturnStatement	return s ;	49:4:1831:1839	7156444	25	True				
ANR	7156771	Identifier	s		7156444	0					
ANR	7156772	ReturnType	QTestState *		7156444	1					
ANR	7156773	Identifier	qtest_init_without_qmp_handshake		7156444	2					
ANR	7156774	ParameterList	const char * extra_args		7156444	3					
ANR	7156775	Parameter	const char * extra_args	1:45:45:66	7156444	0	True				
ANR	7156776	ParameterType	const char *		7156444	0					
ANR	7156777	Identifier	extra_args		7156444	1					
ANR	7156778	CFGEntryNode	ENTRY		7156444		True				
ANR	7156779	CFGExitNode	EXIT		7156444		True				
ANR	7156780	Symbol	s -> irq_level		7156444						
ANR	7156781	Symbol	g_malloc		7156444						
ANR	7156782	Symbol	g_string_new		7156444						
ANR	7156783	Symbol	qmpsock		7156444						
ANR	7156784	Symbol	* * s		7156444						
ANR	7156785	Symbol	s -> qemu_pid		7156444						
ANR	7156786	Symbol	qtest_query_target_endianness		7156444						
ANR	7156787	Symbol	* s -> irq_level		7156444						
ANR	7156788	Symbol	getenv		7156444						
ANR	7156789	Symbol	s -> big_endian		7156444						
ANR	7156790	Symbol	qmp_socket_path		7156444						
ANR	7156791	Symbol	s -> qmp_fd		7156444						
ANR	7156792	Symbol	MAX_IRQ		7156444						
ANR	7156793	Symbol	NULL		7156444						
ANR	7156794	Symbol	extra_args		7156444						
ANR	7156795	Symbol	false		7156444						
ANR	7156796	Symbol	i		7156444						
ANR	7156797	Symbol	kill_qemu_hook_func		7156444						
ANR	7156798	Symbol	socket_path		7156444						
ANR	7156799	Symbol	command		7156444						
ANR	7156800	Symbol	init_socket		7156444						
ANR	7156801	Symbol	sock		7156444						
ANR	7156802	Symbol	socket_accept		7156444						
ANR	7156803	Symbol	fork		7156444						
ANR	7156804	Symbol	s		7156444						
ANR	7156805	Symbol	* i		7156444						
ANR	7156806	Symbol	SIGSTOP		7156444						
ANR	7156807	Symbol	s -> rx		7156444						
ANR	7156808	Symbol	true		7156444						
ANR	7156809	Symbol	qemu_binary		7156444						
ANR	7156810	Symbol	g_strdup_printf		7156444						
ANR	7156811	Symbol	* s		7156444						
ANR	7156812	Symbol	getpid		7156444						
ANR	7156813	Symbol	s -> fd		7156444						
