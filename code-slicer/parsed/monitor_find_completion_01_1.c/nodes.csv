command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5561617	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_find_completion_01_1.c								
ANR	5561618	Function	monitor_find_completion	1:0:0:3216							
ANR	5561619	FunctionDef	monitor_find_completion (const char * cmdline)		5561618	0					
ANR	5561620	CompoundStatement		3:0:58:3216	5561618	0					
ANR	5561621	IdentifierDeclStatement	const char * cmdname ;	5:4:65:84	5561618	0	True				
ANR	5561622	IdentifierDecl	* cmdname		5561618	0					
ANR	5561623	IdentifierDeclType	const char *		5561618	0					
ANR	5561624	Identifier	cmdname		5561618	1					
ANR	5561625	IdentifierDeclStatement	char * args [ MAX_ARGS ] ;	7:4:91:111	5561618	1	True				
ANR	5561626	IdentifierDecl	* args [ MAX_ARGS ]		5561618	0					
ANR	5561627	IdentifierDeclType	char * [ MAX_ARGS ]		5561618	0					
ANR	5561628	Identifier	args		5561618	1					
ANR	5561629	Identifier	MAX_ARGS		5561618	2					
ANR	5561630	IdentifierDeclStatement	"int nb_args , i , len ;"	9:4:118:137	5561618	2	True				
ANR	5561631	IdentifierDecl	nb_args		5561618	0					
ANR	5561632	IdentifierDeclType	int		5561618	0					
ANR	5561633	Identifier	nb_args		5561618	1					
ANR	5561634	IdentifierDecl	i		5561618	1					
ANR	5561635	IdentifierDeclType	int		5561618	0					
ANR	5561636	Identifier	i		5561618	1					
ANR	5561637	IdentifierDecl	len		5561618	2					
ANR	5561638	IdentifierDeclType	int		5561618	0					
ANR	5561639	Identifier	len		5561618	1					
ANR	5561640	IdentifierDeclStatement	"const char * ptype , * str ;"	11:4:144:167	5561618	3	True				
ANR	5561641	IdentifierDecl	* ptype		5561618	0					
ANR	5561642	IdentifierDeclType	const char *		5561618	0					
ANR	5561643	Identifier	ptype		5561618	1					
ANR	5561644	IdentifierDecl	* str		5561618	1					
ANR	5561645	IdentifierDeclType	const char *		5561618	0					
ANR	5561646	Identifier	str		5561618	1					
ANR	5561647	IdentifierDeclStatement	const mon_cmd_t * cmd ;	13:4:174:194	5561618	4	True				
ANR	5561648	IdentifierDecl	* cmd		5561618	0					
ANR	5561649	IdentifierDeclType	const mon_cmd_t *		5561618	0					
ANR	5561650	Identifier	cmd		5561618	1					
ANR	5561651	IdentifierDeclStatement	const KeyDef * key ;	15:4:201:218	5561618	5	True				
ANR	5561652	IdentifierDecl	* key		5561618	0					
ANR	5561653	IdentifierDeclType	const KeyDef *		5561618	0					
ANR	5561654	Identifier	key		5561618	1					
ANR	5561655	ExpressionStatement	"parse_cmdline ( cmdline , & nb_args , args )"	19:4:227:265	5561618	6	True				
ANR	5561656	CallExpression	"parse_cmdline ( cmdline , & nb_args , args )"		5561618	0					
ANR	5561657	Callee	parse_cmdline		5561618	0					
ANR	5561658	Identifier	parse_cmdline		5561618	0					
ANR	5561659	ArgumentList	cmdline		5561618	1					
ANR	5561660	Argument	cmdline		5561618	0					
ANR	5561661	Identifier	cmdline		5561618	0					
ANR	5561662	Argument	& nb_args		5561618	1					
ANR	5561663	UnaryOperationExpression	& nb_args		5561618	0					
ANR	5561664	UnaryOperator	&		5561618	0					
ANR	5561665	Identifier	nb_args		5561618	1					
ANR	5561666	Argument	args		5561618	2					
ANR	5561667	Identifier	args		5561618	0					
ANR	5561668	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5561618	7					
ANR	5561669	ForInit	i = 0 ;	23:8:301:306	5561618	0	True				
ANR	5561670	AssignmentExpression	i = 0		5561618	0		=			
ANR	5561671	Identifier	i		5561618	0					
ANR	5561672	PrimaryExpression	0		5561618	1					
ANR	5561673	Condition	i < nb_args	23:15:308:318	5561618	1	True				
ANR	5561674	RelationalExpression	i < nb_args		5561618	0		<			
ANR	5561675	Identifier	i		5561618	0					
ANR	5561676	Identifier	nb_args		5561618	1					
ANR	5561677	PostIncDecOperationExpression	i ++	23:28:321:323	5561618	2	True				
ANR	5561678	Identifier	i		5561618	0					
ANR	5561679	IncDec	++		5561618	1					
ANR	5561680	CompoundStatement		21:33:267:267	5561618	3					
ANR	5561681	ExpressionStatement	"monitor_printf ( cur_mon , ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"	25:8:337:398	5561618	0	True				
ANR	5561682	CallExpression	"monitor_printf ( cur_mon , ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"		5561618	0					
ANR	5561683	Callee	monitor_printf		5561618	0					
ANR	5561684	Identifier	monitor_printf		5561618	0					
ANR	5561685	ArgumentList	cur_mon		5561618	1					
ANR	5561686	Argument	cur_mon		5561618	0					
ANR	5561687	Identifier	cur_mon		5561618	0					
ANR	5561688	Argument	"""arg%d = '%s'\\n"""		5561618	1					
ANR	5561689	PrimaryExpression	"""arg%d = '%s'\\n"""		5561618	0					
ANR	5561690	Argument	i		5561618	2					
ANR	5561691	Identifier	i		5561618	0					
ANR	5561692	Argument	( char * ) args [ i ]		5561618	3					
ANR	5561693	CastExpression	( char * ) args [ i ]		5561618	0					
ANR	5561694	CastTarget	char *		5561618	0					
ANR	5561695	ArrayIndexing	args [ i ]		5561618	1					
ANR	5561696	Identifier	args		5561618	0					
ANR	5561697	Identifier	i		5561618	1					
ANR	5561698	ExpressionStatement	len = strlen ( cmdline )	37:4:514:535	5561618	8	True				
ANR	5561699	AssignmentExpression	len = strlen ( cmdline )		5561618	0		=			
ANR	5561700	Identifier	len		5561618	0					
ANR	5561701	CallExpression	strlen ( cmdline )		5561618	1					
ANR	5561702	Callee	strlen		5561618	0					
ANR	5561703	Identifier	strlen		5561618	0					
ANR	5561704	ArgumentList	cmdline		5561618	1					
ANR	5561705	Argument	cmdline		5561618	0					
ANR	5561706	Identifier	cmdline		5561618	0					
ANR	5561707	IfStatement	if ( len > 0 && qemu_isspace ( cmdline [ len - 1 ] ) )		5561618	9					
ANR	5561708	Condition	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )	39:8:546:586	5561618	0	True				
ANR	5561709	AndExpression	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )		5561618	0		&&			
ANR	5561710	RelationalExpression	len > 0		5561618	0		>			
ANR	5561711	Identifier	len		5561618	0					
ANR	5561712	PrimaryExpression	0		5561618	1					
ANR	5561713	CallExpression	qemu_isspace ( cmdline [ len - 1 ] )		5561618	1					
ANR	5561714	Callee	qemu_isspace		5561618	0					
ANR	5561715	Identifier	qemu_isspace		5561618	0					
ANR	5561716	ArgumentList	cmdline [ len - 1 ]		5561618	1					
ANR	5561717	Argument	cmdline [ len - 1 ]		5561618	0					
ANR	5561718	ArrayIndexing	cmdline [ len - 1 ]		5561618	0					
ANR	5561719	Identifier	cmdline		5561618	0					
ANR	5561720	AdditiveExpression	len - 1		5561618	1		-			
ANR	5561721	Identifier	len		5561618	0					
ANR	5561722	PrimaryExpression	1		5561618	1					
ANR	5561723	CompoundStatement		37:51:530:530	5561618	1					
ANR	5561724	IfStatement	if ( nb_args >= MAX_ARGS )		5561618	0					
ANR	5561725	Condition	nb_args >= MAX_ARGS	41:12:604:622	5561618	0	True				
ANR	5561726	RelationalExpression	nb_args >= MAX_ARGS		5561618	0		>=			
ANR	5561727	Identifier	nb_args		5561618	0					
ANR	5561728	Identifier	MAX_ARGS		5561618	1					
ANR	5561729	ReturnStatement	return ;	43:12:638:644	5561618	1	True				
ANR	5561730	ExpressionStatement	"args [ nb_args ++ ] = qemu_strdup ( """" )"	45:8:655:688	5561618	1	True				
ANR	5561731	AssignmentExpression	"args [ nb_args ++ ] = qemu_strdup ( """" )"		5561618	0		=			
ANR	5561732	ArrayIndexing	args [ nb_args ++ ]		5561618	0					
ANR	5561733	Identifier	args		5561618	0					
ANR	5561734	PostIncDecOperationExpression	nb_args ++		5561618	1					
ANR	5561735	Identifier	nb_args		5561618	0					
ANR	5561736	IncDec	++		5561618	1					
ANR	5561737	CallExpression	"qemu_strdup ( """" )"		5561618	1					
ANR	5561738	Callee	qemu_strdup		5561618	0					
ANR	5561739	Identifier	qemu_strdup		5561618	0					
ANR	5561740	ArgumentList	""""""		5561618	1					
ANR	5561741	Argument	""""""		5561618	0					
ANR	5561742	PrimaryExpression	""""""		5561618	0					
ANR	5561743	IfStatement	if ( nb_args <= 1 )		5561618	10					
ANR	5561744	Condition	nb_args <= 1	49:8:706:717	5561618	0	True				
ANR	5561745	RelationalExpression	nb_args <= 1		5561618	0		<=			
ANR	5561746	Identifier	nb_args		5561618	0					
ANR	5561747	PrimaryExpression	1		5561618	1					
ANR	5561748	CompoundStatement		47:22:661:661	5561618	1					
ANR	5561749	IfStatement	if ( nb_args == 0 )		5561618	0					
ANR	5561750	Condition	nb_args == 0	53:12:769:780	5561618	0	True				
ANR	5561751	EqualityExpression	nb_args == 0		5561618	0		==			
ANR	5561752	Identifier	nb_args		5561618	0					
ANR	5561753	PrimaryExpression	0		5561618	1					
ANR	5561754	ExpressionStatement	"cmdname = """""	55:12:796:808	5561618	1	True				
ANR	5561755	AssignmentExpression	"cmdname = """""		5561618	0		=			
ANR	5561756	Identifier	cmdname		5561618	0					
ANR	5561757	PrimaryExpression	""""""		5561618	1					
ANR	5561758	ElseStatement	else		5561618	0					
ANR	5561759	ExpressionStatement	cmdname = args [ 0 ]	59:12:837:854	5561618	0	True				
ANR	5561760	AssignmentExpression	cmdname = args [ 0 ]		5561618	0		=			
ANR	5561761	Identifier	cmdname		5561618	0					
ANR	5561762	ArrayIndexing	args [ 0 ]		5561618	1					
ANR	5561763	Identifier	args		5561618	0					
ANR	5561764	PrimaryExpression	0		5561618	1					
ANR	5561765	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( cmdname ) )"	61:8:865:924	5561618	1	True				
ANR	5561766	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( cmdname ) )"		5561618	0					
ANR	5561767	Callee	readline_set_completion_index		5561618	0					
ANR	5561768	Identifier	readline_set_completion_index		5561618	0					
ANR	5561769	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5561770	Argument	cur_mon -> rs		5561618	0					
ANR	5561771	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5561772	Identifier	cur_mon		5561618	0					
ANR	5561773	Identifier	rs		5561618	1					
ANR	5561774	Argument	strlen ( cmdname )		5561618	1					
ANR	5561775	CallExpression	strlen ( cmdname )		5561618	0					
ANR	5561776	Callee	strlen		5561618	0					
ANR	5561777	Identifier	strlen		5561618	0					
ANR	5561778	ArgumentList	cmdname		5561618	1					
ANR	5561779	Argument	cmdname		5561618	0					
ANR	5561780	Identifier	cmdname		5561618	0					
ANR	5561781	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5561618	2					
ANR	5561782	ForInit	cmd = mon_cmds ;	63:12:939:953	5561618	0	True				
ANR	5561783	AssignmentExpression	cmd = mon_cmds		5561618	0		=			
ANR	5561784	Identifier	cmd		5561618	0					
ANR	5561785	Identifier	mon_cmds		5561618	1					
ANR	5561786	Condition	cmd -> name != NULL	63:28:955:971	5561618	1	True				
ANR	5561787	EqualityExpression	cmd -> name != NULL		5561618	0		!=			
ANR	5561788	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5561789	Identifier	cmd		5561618	0					
ANR	5561790	Identifier	name		5561618	1					
ANR	5561791	Identifier	NULL		5561618	1					
ANR	5561792	PostIncDecOperationExpression	cmd ++	63:47:974:978	5561618	2	True				
ANR	5561793	Identifier	cmd		5561618	0					
ANR	5561794	IncDec	++		5561618	1					
ANR	5561795	CompoundStatement		61:54:922:922	5561618	3					
ANR	5561796	ExpressionStatement	"cmd_completion ( cmdname , cmd -> name )"	65:12:996:1030	5561618	0	True				
ANR	5561797	CallExpression	"cmd_completion ( cmdname , cmd -> name )"		5561618	0					
ANR	5561798	Callee	cmd_completion		5561618	0					
ANR	5561799	Identifier	cmd_completion		5561618	0					
ANR	5561800	ArgumentList	cmdname		5561618	1					
ANR	5561801	Argument	cmdname		5561618	0					
ANR	5561802	Identifier	cmdname		5561618	0					
ANR	5561803	Argument	cmd -> name		5561618	1					
ANR	5561804	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5561805	Identifier	cmd		5561618	0					
ANR	5561806	Identifier	name		5561618	1					
ANR	5561807	ElseStatement	else		5561618	0					
ANR	5561808	CompoundStatement		67:11:996:996	5561618	0					
ANR	5561809	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5561618	0					
ANR	5561810	ForInit	cmd = mon_cmds ;	73:12:1102:1116	5561618	0	True				
ANR	5561811	AssignmentExpression	cmd = mon_cmds		5561618	0		=			
ANR	5561812	Identifier	cmd		5561618	0					
ANR	5561813	Identifier	mon_cmds		5561618	1					
ANR	5561814	Condition	cmd -> name != NULL	73:28:1118:1134	5561618	1	True				
ANR	5561815	EqualityExpression	cmd -> name != NULL		5561618	0		!=			
ANR	5561816	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5561817	Identifier	cmd		5561618	0					
ANR	5561818	Identifier	name		5561618	1					
ANR	5561819	Identifier	NULL		5561618	1					
ANR	5561820	PostIncDecOperationExpression	cmd ++	73:47:1137:1141	5561618	2	True				
ANR	5561821	Identifier	cmd		5561618	0					
ANR	5561822	IncDec	++		5561618	1					
ANR	5561823	CompoundStatement		71:54:1085:1085	5561618	3					
ANR	5561824	IfStatement	"if ( compare_cmd ( args [ 0 ] , cmd -> name ) )"		5561618	0					
ANR	5561825	Condition	"compare_cmd ( args [ 0 ] , cmd -> name )"	75:16:1163:1193	5561618	0	True				
ANR	5561826	CallExpression	"compare_cmd ( args [ 0 ] , cmd -> name )"		5561618	0					
ANR	5561827	Callee	compare_cmd		5561618	0					
ANR	5561828	Identifier	compare_cmd		5561618	0					
ANR	5561829	ArgumentList	args [ 0 ]		5561618	1					
ANR	5561830	Argument	args [ 0 ]		5561618	0					
ANR	5561831	ArrayIndexing	args [ 0 ]		5561618	0					
ANR	5561832	Identifier	args		5561618	0					
ANR	5561833	PrimaryExpression	0		5561618	1					
ANR	5561834	Argument	cmd -> name		5561618	1					
ANR	5561835	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5561836	Identifier	cmd		5561618	0					
ANR	5561837	Identifier	name		5561618	1					
ANR	5561838	GotoStatement	goto found ;	77:16:1213:1223	5561618	1	True				
ANR	5561839	Identifier	found		5561618	0					
ANR	5561840	ReturnStatement	return ;	81:8:1245:1251	5561618	1	True				
ANR	5561841	Label	found :	83:4:1258:1263	5561618	2	True				
ANR	5561842	Identifier	found		5561618	0					
ANR	5561843	ExpressionStatement	ptype = next_arg_type ( cmd -> args_type )	85:8:1274:1311	5561618	3	True				
ANR	5561844	AssignmentExpression	ptype = next_arg_type ( cmd -> args_type )		5561618	0		=			
ANR	5561845	Identifier	ptype		5561618	0					
ANR	5561846	CallExpression	next_arg_type ( cmd -> args_type )		5561618	1					
ANR	5561847	Callee	next_arg_type		5561618	0					
ANR	5561848	Identifier	next_arg_type		5561618	0					
ANR	5561849	ArgumentList	cmd -> args_type		5561618	1					
ANR	5561850	Argument	cmd -> args_type		5561618	0					
ANR	5561851	PtrMemberAccess	cmd -> args_type		5561618	0					
ANR	5561852	Identifier	cmd		5561618	0					
ANR	5561853	Identifier	args_type		5561618	1					
ANR	5561854	ForStatement	for ( i = 0 ; i < nb_args - 2 ; i ++ )		5561618	4					
ANR	5561855	ForInit	i = 0 ;	87:12:1326:1331	5561618	0	True				
ANR	5561856	AssignmentExpression	i = 0		5561618	0		=			
ANR	5561857	Identifier	i		5561618	0					
ANR	5561858	PrimaryExpression	0		5561618	1					
ANR	5561859	Condition	i < nb_args - 2	87:19:1333:1347	5561618	1	True				
ANR	5561860	RelationalExpression	i < nb_args - 2		5561618	0		<			
ANR	5561861	Identifier	i		5561618	0					
ANR	5561862	AdditiveExpression	nb_args - 2		5561618	1		-			
ANR	5561863	Identifier	nb_args		5561618	0					
ANR	5561864	PrimaryExpression	2		5561618	1					
ANR	5561865	PostIncDecOperationExpression	i ++	87:36:1350:1352	5561618	2	True				
ANR	5561866	Identifier	i		5561618	0					
ANR	5561867	IncDec	++		5561618	1					
ANR	5561868	CompoundStatement		85:41:1296:1296	5561618	3					
ANR	5561869	IfStatement	if ( * ptype != '\\0' )		5561618	0					
ANR	5561870	Condition	* ptype != '\\0'	89:16:1374:1387	5561618	0	True				
ANR	5561871	EqualityExpression	* ptype != '\\0'		5561618	0		!=			
ANR	5561872	UnaryOperationExpression	* ptype		5561618	0					
ANR	5561873	UnaryOperator	*		5561618	0					
ANR	5561874	Identifier	ptype		5561618	1					
ANR	5561875	PrimaryExpression	'\\0'		5561618	1					
ANR	5561876	CompoundStatement		87:32:1331:1331	5561618	1					
ANR	5561877	ExpressionStatement	ptype = next_arg_type ( ptype )	91:16:1409:1437	5561618	0	True				
ANR	5561878	AssignmentExpression	ptype = next_arg_type ( ptype )		5561618	0		=			
ANR	5561879	Identifier	ptype		5561618	0					
ANR	5561880	CallExpression	next_arg_type ( ptype )		5561618	1					
ANR	5561881	Callee	next_arg_type		5561618	0					
ANR	5561882	Identifier	next_arg_type		5561618	0					
ANR	5561883	ArgumentList	ptype		5561618	1					
ANR	5561884	Argument	ptype		5561618	0					
ANR	5561885	Identifier	ptype		5561618	0					
ANR	5561886	WhileStatement	while ( * ptype == '?' )		5561618	1					
ANR	5561887	Condition	* ptype == '?'	93:23:1463:1475	5561618	0	True				
ANR	5561888	EqualityExpression	* ptype == '?'		5561618	0		==			
ANR	5561889	UnaryOperationExpression	* ptype		5561618	0					
ANR	5561890	UnaryOperator	*		5561618	0					
ANR	5561891	Identifier	ptype		5561618	1					
ANR	5561892	PrimaryExpression	'?'		5561618	1					
ANR	5561893	ExpressionStatement	ptype = next_arg_type ( ptype )	95:20:1499:1527	5561618	1	True				
ANR	5561894	AssignmentExpression	ptype = next_arg_type ( ptype )		5561618	0		=			
ANR	5561895	Identifier	ptype		5561618	0					
ANR	5561896	CallExpression	next_arg_type ( ptype )		5561618	1					
ANR	5561897	Callee	next_arg_type		5561618	0					
ANR	5561898	Identifier	next_arg_type		5561618	0					
ANR	5561899	ArgumentList	ptype		5561618	1					
ANR	5561900	Argument	ptype		5561618	0					
ANR	5561901	Identifier	ptype		5561618	0					
ANR	5561902	ExpressionStatement	str = args [ nb_args - 1 ]	101:8:1564:1587	5561618	5	True				
ANR	5561903	AssignmentExpression	str = args [ nb_args - 1 ]		5561618	0		=			
ANR	5561904	Identifier	str		5561618	0					
ANR	5561905	ArrayIndexing	args [ nb_args - 1 ]		5561618	1					
ANR	5561906	Identifier	args		5561618	0					
ANR	5561907	AdditiveExpression	nb_args - 1		5561618	1		-			
ANR	5561908	Identifier	nb_args		5561618	0					
ANR	5561909	PrimaryExpression	1		5561618	1					
ANR	5561910	IfStatement	if ( * ptype == '-' && ptype [ 1 ] != '\\0' )		5561618	6					
ANR	5561911	Condition	* ptype == '-' && ptype [ 1 ] != '\\0'	103:12:1602:1634	5561618	0	True				
ANR	5561912	AndExpression	* ptype == '-' && ptype [ 1 ] != '\\0'		5561618	0		&&			
ANR	5561913	EqualityExpression	* ptype == '-'		5561618	0		==			
ANR	5561914	UnaryOperationExpression	* ptype		5561618	0					
ANR	5561915	UnaryOperator	*		5561618	0					
ANR	5561916	Identifier	ptype		5561618	1					
ANR	5561917	PrimaryExpression	'-'		5561618	1					
ANR	5561918	EqualityExpression	ptype [ 1 ] != '\\0'		5561618	1		!=			
ANR	5561919	ArrayIndexing	ptype [ 1 ]		5561618	0					
ANR	5561920	Identifier	ptype		5561618	0					
ANR	5561921	PrimaryExpression	1		5561618	1					
ANR	5561922	PrimaryExpression	'\\0'		5561618	1					
ANR	5561923	CompoundStatement		101:47:1578:1578	5561618	1					
ANR	5561924	ExpressionStatement	ptype += 2	105:12:1652:1662	5561618	0	True				
ANR	5561925	AssignmentExpression	ptype += 2		5561618	0		+=			
ANR	5561926	Identifier	ptype		5561618	0					
ANR	5561927	PrimaryExpression	2		5561618	1					
ANR	5561928	SwitchStatement	switch ( * ptype )		5561618	7					
ANR	5561929	Condition	* ptype	109:15:1691:1696	5561618	0	True				
ANR	5561930	UnaryOperationExpression	* ptype		5561618	0					
ANR	5561931	UnaryOperator	*		5561618	0					
ANR	5561932	Identifier	ptype		5561618	1					
ANR	5561933	CompoundStatement		107:23:1640:1640	5561618	1					
ANR	5561934	Label	case 'F' :	111:8:1710:1718	5561618	0	True				
ANR	5561935	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	115:12:1768:1823	5561618	1	True				
ANR	5561936	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5561618	0					
ANR	5561937	Callee	readline_set_completion_index		5561618	0					
ANR	5561938	Identifier	readline_set_completion_index		5561618	0					
ANR	5561939	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5561940	Argument	cur_mon -> rs		5561618	0					
ANR	5561941	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5561942	Identifier	cur_mon		5561618	0					
ANR	5561943	Identifier	rs		5561618	1					
ANR	5561944	Argument	strlen ( str )		5561618	1					
ANR	5561945	CallExpression	strlen ( str )		5561618	0					
ANR	5561946	Callee	strlen		5561618	0					
ANR	5561947	Identifier	strlen		5561618	0					
ANR	5561948	ArgumentList	str		5561618	1					
ANR	5561949	Argument	str		5561618	0					
ANR	5561950	Identifier	str		5561618	0					
ANR	5561951	ExpressionStatement	file_completion ( str )	117:12:1838:1858	5561618	2	True				
ANR	5561952	CallExpression	file_completion ( str )		5561618	0					
ANR	5561953	Callee	file_completion		5561618	0					
ANR	5561954	Identifier	file_completion		5561618	0					
ANR	5561955	ArgumentList	str		5561618	1					
ANR	5561956	Argument	str		5561618	0					
ANR	5561957	Identifier	str		5561618	0					
ANR	5561958	BreakStatement	break ;	119:12:1873:1878	5561618	3	True				
ANR	5561959	Label	case 'B' :	121:8:1889:1897	5561618	4	True				
ANR	5561960	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	125:12:1960:2015	5561618	5	True				
ANR	5561961	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5561618	0					
ANR	5561962	Callee	readline_set_completion_index		5561618	0					
ANR	5561963	Identifier	readline_set_completion_index		5561618	0					
ANR	5561964	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5561965	Argument	cur_mon -> rs		5561618	0					
ANR	5561966	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5561967	Identifier	cur_mon		5561618	0					
ANR	5561968	Identifier	rs		5561618	1					
ANR	5561969	Argument	strlen ( str )		5561618	1					
ANR	5561970	CallExpression	strlen ( str )		5561618	0					
ANR	5561971	Callee	strlen		5561618	0					
ANR	5561972	Identifier	strlen		5561618	0					
ANR	5561973	ArgumentList	str		5561618	1					
ANR	5561974	Argument	str		5561618	0					
ANR	5561975	Identifier	str		5561618	0					
ANR	5561976	ExpressionStatement	"bdrv_iterate ( block_completion_it , ( void * ) str )"	127:12:2030:2076	5561618	6	True				
ANR	5561977	CallExpression	"bdrv_iterate ( block_completion_it , ( void * ) str )"		5561618	0					
ANR	5561978	Callee	bdrv_iterate		5561618	0					
ANR	5561979	Identifier	bdrv_iterate		5561618	0					
ANR	5561980	ArgumentList	block_completion_it		5561618	1					
ANR	5561981	Argument	block_completion_it		5561618	0					
ANR	5561982	Identifier	block_completion_it		5561618	0					
ANR	5561983	Argument	( void * ) str		5561618	1					
ANR	5561984	CastExpression	( void * ) str		5561618	0					
ANR	5561985	CastTarget	void *		5561618	0					
ANR	5561986	Identifier	str		5561618	1					
ANR	5561987	BreakStatement	break ;	129:12:2091:2096	5561618	7	True				
ANR	5561988	Label	case 's' :	131:8:2107:2115	5561618	8	True				
ANR	5561989	IfStatement	"if ( ! strcmp ( cmd -> name , ""info"" ) )"		5561618	9					
ANR	5561990	Condition	"! strcmp ( cmd -> name , ""info"" )"	135:16:2173:2198	5561618	0	True				
ANR	5561991	UnaryOperationExpression	"! strcmp ( cmd -> name , ""info"" )"		5561618	0					
ANR	5561992	UnaryOperator	!		5561618	0					
ANR	5561993	CallExpression	"strcmp ( cmd -> name , ""info"" )"		5561618	1					
ANR	5561994	Callee	strcmp		5561618	0					
ANR	5561995	Identifier	strcmp		5561618	0					
ANR	5561996	ArgumentList	cmd -> name		5561618	1					
ANR	5561997	Argument	cmd -> name		5561618	0					
ANR	5561998	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5561999	Identifier	cmd		5561618	0					
ANR	5562000	Identifier	name		5561618	1					
ANR	5562001	Argument	"""info"""		5561618	1					
ANR	5562002	PrimaryExpression	"""info"""		5561618	0					
ANR	5562003	CompoundStatement		133:44:2142:2142	5561618	1					
ANR	5562004	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	137:16:2220:2275	5561618	0	True				
ANR	5562005	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5561618	0					
ANR	5562006	Callee	readline_set_completion_index		5561618	0					
ANR	5562007	Identifier	readline_set_completion_index		5561618	0					
ANR	5562008	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5562009	Argument	cur_mon -> rs		5561618	0					
ANR	5562010	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5562011	Identifier	cur_mon		5561618	0					
ANR	5562012	Identifier	rs		5561618	1					
ANR	5562013	Argument	strlen ( str )		5561618	1					
ANR	5562014	CallExpression	strlen ( str )		5561618	0					
ANR	5562015	Callee	strlen		5561618	0					
ANR	5562016	Identifier	strlen		5561618	0					
ANR	5562017	ArgumentList	str		5561618	1					
ANR	5562018	Argument	str		5561618	0					
ANR	5562019	Identifier	str		5561618	0					
ANR	5562020	ForStatement	for ( cmd = info_cmds ; cmd -> name != NULL ; cmd ++ )		5561618	1					
ANR	5562021	ForInit	cmd = info_cmds ;	139:20:2298:2313	5561618	0	True				
ANR	5562022	AssignmentExpression	cmd = info_cmds		5561618	0		=			
ANR	5562023	Identifier	cmd		5561618	0					
ANR	5562024	Identifier	info_cmds		5561618	1					
ANR	5562025	Condition	cmd -> name != NULL	139:37:2315:2331	5561618	1	True				
ANR	5562026	EqualityExpression	cmd -> name != NULL		5561618	0		!=			
ANR	5562027	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562028	Identifier	cmd		5561618	0					
ANR	5562029	Identifier	name		5561618	1					
ANR	5562030	Identifier	NULL		5561618	1					
ANR	5562031	PostIncDecOperationExpression	cmd ++	139:56:2334:2338	5561618	2	True				
ANR	5562032	Identifier	cmd		5561618	0					
ANR	5562033	IncDec	++		5561618	1					
ANR	5562034	CompoundStatement		137:63:2282:2282	5561618	3					
ANR	5562035	ExpressionStatement	"cmd_completion ( str , cmd -> name )"	141:20:2364:2394	5561618	0	True				
ANR	5562036	CallExpression	"cmd_completion ( str , cmd -> name )"		5561618	0					
ANR	5562037	Callee	cmd_completion		5561618	0					
ANR	5562038	Identifier	cmd_completion		5561618	0					
ANR	5562039	ArgumentList	str		5561618	1					
ANR	5562040	Argument	str		5561618	0					
ANR	5562041	Identifier	str		5561618	0					
ANR	5562042	Argument	cmd -> name		5561618	1					
ANR	5562043	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562044	Identifier	cmd		5561618	0					
ANR	5562045	Identifier	name		5561618	1					
ANR	5562046	ElseStatement	else		5561618	0					
ANR	5562047	IfStatement	"if ( ! strcmp ( cmd -> name , ""sendkey"" ) )"		5561618	0					
ANR	5562048	Condition	"! strcmp ( cmd -> name , ""sendkey"" )"	145:23:2439:2467	5561618	0	True				
ANR	5562049	UnaryOperationExpression	"! strcmp ( cmd -> name , ""sendkey"" )"		5561618	0					
ANR	5562050	UnaryOperator	!		5561618	0					
ANR	5562051	CallExpression	"strcmp ( cmd -> name , ""sendkey"" )"		5561618	1					
ANR	5562052	Callee	strcmp		5561618	0					
ANR	5562053	Identifier	strcmp		5561618	0					
ANR	5562054	ArgumentList	cmd -> name		5561618	1					
ANR	5562055	Argument	cmd -> name		5561618	0					
ANR	5562056	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562057	Identifier	cmd		5561618	0					
ANR	5562058	Identifier	name		5561618	1					
ANR	5562059	Argument	"""sendkey"""		5561618	1					
ANR	5562060	PrimaryExpression	"""sendkey"""		5561618	0					
ANR	5562061	CompoundStatement		145:16:2430:2459	5561618	1					
ANR	5562062	IdentifierDeclStatement	"char * sep = strrchr ( str , '-' ) ;"	147:16:2489:2518	5561618	0	True				
ANR	5562063	IdentifierDecl	"* sep = strrchr ( str , '-' )"		5561618	0					
ANR	5562064	IdentifierDeclType	char *		5561618	0					
ANR	5562065	Identifier	sep		5561618	1					
ANR	5562066	AssignmentExpression	"* sep = strrchr ( str , '-' )"		5561618	2		=			
ANR	5562067	Identifier	sep		5561618	0					
ANR	5562068	CallExpression	"strrchr ( str , '-' )"		5561618	1					
ANR	5562069	Callee	strrchr		5561618	0					
ANR	5562070	Identifier	strrchr		5561618	0					
ANR	5562071	ArgumentList	str		5561618	1					
ANR	5562072	Argument	str		5561618	0					
ANR	5562073	Identifier	str		5561618	0					
ANR	5562074	Argument	'-'		5561618	1					
ANR	5562075	PrimaryExpression	'-'		5561618	0					
ANR	5562076	IfStatement	if ( sep )		5561618	1					
ANR	5562077	Condition	sep	149:20:2541:2543	5561618	0	True				
ANR	5562078	Identifier	sep		5561618	0					
ANR	5562079	ExpressionStatement	str = sep + 1	151:20:2567:2580	5561618	1	True				
ANR	5562080	AssignmentExpression	str = sep + 1		5561618	0		=			
ANR	5562081	Identifier	str		5561618	0					
ANR	5562082	AdditiveExpression	sep + 1		5561618	1		+			
ANR	5562083	Identifier	sep		5561618	0					
ANR	5562084	PrimaryExpression	1		5561618	1					
ANR	5562085	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	153:16:2599:2654	5561618	2	True				
ANR	5562086	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5561618	0					
ANR	5562087	Callee	readline_set_completion_index		5561618	0					
ANR	5562088	Identifier	readline_set_completion_index		5561618	0					
ANR	5562089	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5562090	Argument	cur_mon -> rs		5561618	0					
ANR	5562091	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5562092	Identifier	cur_mon		5561618	0					
ANR	5562093	Identifier	rs		5561618	1					
ANR	5562094	Argument	strlen ( str )		5561618	1					
ANR	5562095	CallExpression	strlen ( str )		5561618	0					
ANR	5562096	Callee	strlen		5561618	0					
ANR	5562097	Identifier	strlen		5561618	0					
ANR	5562098	ArgumentList	str		5561618	1					
ANR	5562099	Argument	str		5561618	0					
ANR	5562100	Identifier	str		5561618	0					
ANR	5562101	ForStatement	for ( key = key_defs ; key -> name != NULL ; key ++ )		5561618	3					
ANR	5562102	ForInit	key = key_defs ;	155:20:2677:2691	5561618	0	True				
ANR	5562103	AssignmentExpression	key = key_defs		5561618	0		=			
ANR	5562104	Identifier	key		5561618	0					
ANR	5562105	Identifier	key_defs		5561618	1					
ANR	5562106	Condition	key -> name != NULL	155:36:2693:2709	5561618	1	True				
ANR	5562107	EqualityExpression	key -> name != NULL		5561618	0		!=			
ANR	5562108	PtrMemberAccess	key -> name		5561618	0					
ANR	5562109	Identifier	key		5561618	0					
ANR	5562110	Identifier	name		5561618	1					
ANR	5562111	Identifier	NULL		5561618	1					
ANR	5562112	PostIncDecOperationExpression	key ++	155:55:2712:2716	5561618	2	True				
ANR	5562113	Identifier	key		5561618	0					
ANR	5562114	IncDec	++		5561618	1					
ANR	5562115	CompoundStatement		153:62:2660:2660	5561618	3					
ANR	5562116	ExpressionStatement	"cmd_completion ( str , key -> name )"	157:20:2742:2772	5561618	0	True				
ANR	5562117	CallExpression	"cmd_completion ( str , key -> name )"		5561618	0					
ANR	5562118	Callee	cmd_completion		5561618	0					
ANR	5562119	Identifier	cmd_completion		5561618	0					
ANR	5562120	ArgumentList	str		5561618	1					
ANR	5562121	Argument	str		5561618	0					
ANR	5562122	Identifier	str		5561618	0					
ANR	5562123	Argument	key -> name		5561618	1					
ANR	5562124	PtrMemberAccess	key -> name		5561618	0					
ANR	5562125	Identifier	key		5561618	0					
ANR	5562126	Identifier	name		5561618	1					
ANR	5562127	ElseStatement	else		5561618	0					
ANR	5562128	IfStatement	"if ( ! strcmp ( cmd -> name , ""help|?"" ) )"		5561618	0					
ANR	5562129	Condition	"! strcmp ( cmd -> name , ""help|?"" )"	161:23:2817:2844	5561618	0	True				
ANR	5562130	UnaryOperationExpression	"! strcmp ( cmd -> name , ""help|?"" )"		5561618	0					
ANR	5562131	UnaryOperator	!		5561618	0					
ANR	5562132	CallExpression	"strcmp ( cmd -> name , ""help|?"" )"		5561618	1					
ANR	5562133	Callee	strcmp		5561618	0					
ANR	5562134	Identifier	strcmp		5561618	0					
ANR	5562135	ArgumentList	cmd -> name		5561618	1					
ANR	5562136	Argument	cmd -> name		5561618	0					
ANR	5562137	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562138	Identifier	cmd		5561618	0					
ANR	5562139	Identifier	name		5561618	1					
ANR	5562140	Argument	"""help|?"""		5561618	1					
ANR	5562141	PrimaryExpression	"""help|?"""		5561618	0					
ANR	5562142	CompoundStatement		159:53:2788:2788	5561618	1					
ANR	5562143	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	163:16:2866:2921	5561618	0	True				
ANR	5562144	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5561618	0					
ANR	5562145	Callee	readline_set_completion_index		5561618	0					
ANR	5562146	Identifier	readline_set_completion_index		5561618	0					
ANR	5562147	ArgumentList	cur_mon -> rs		5561618	1					
ANR	5562148	Argument	cur_mon -> rs		5561618	0					
ANR	5562149	PtrMemberAccess	cur_mon -> rs		5561618	0					
ANR	5562150	Identifier	cur_mon		5561618	0					
ANR	5562151	Identifier	rs		5561618	1					
ANR	5562152	Argument	strlen ( str )		5561618	1					
ANR	5562153	CallExpression	strlen ( str )		5561618	0					
ANR	5562154	Callee	strlen		5561618	0					
ANR	5562155	Identifier	strlen		5561618	0					
ANR	5562156	ArgumentList	str		5561618	1					
ANR	5562157	Argument	str		5561618	0					
ANR	5562158	Identifier	str		5561618	0					
ANR	5562159	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5561618	1					
ANR	5562160	ForInit	cmd = mon_cmds ;	165:21:2945:2959	5561618	0	True				
ANR	5562161	AssignmentExpression	cmd = mon_cmds		5561618	0		=			
ANR	5562162	Identifier	cmd		5561618	0					
ANR	5562163	Identifier	mon_cmds		5561618	1					
ANR	5562164	Condition	cmd -> name != NULL	165:37:2961:2977	5561618	1	True				
ANR	5562165	EqualityExpression	cmd -> name != NULL		5561618	0		!=			
ANR	5562166	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562167	Identifier	cmd		5561618	0					
ANR	5562168	Identifier	name		5561618	1					
ANR	5562169	Identifier	NULL		5561618	1					
ANR	5562170	PostIncDecOperationExpression	cmd ++	165:56:2980:2984	5561618	2	True				
ANR	5562171	Identifier	cmd		5561618	0					
ANR	5562172	IncDec	++		5561618	1					
ANR	5562173	CompoundStatement		163:63:2928:2928	5561618	3					
ANR	5562174	ExpressionStatement	"cmd_completion ( str , cmd -> name )"	167:20:3010:3040	5561618	0	True				
ANR	5562175	CallExpression	"cmd_completion ( str , cmd -> name )"		5561618	0					
ANR	5562176	Callee	cmd_completion		5561618	0					
ANR	5562177	Identifier	cmd_completion		5561618	0					
ANR	5562178	ArgumentList	str		5561618	1					
ANR	5562179	Argument	str		5561618	0					
ANR	5562180	Identifier	str		5561618	0					
ANR	5562181	Argument	cmd -> name		5561618	1					
ANR	5562182	PtrMemberAccess	cmd -> name		5561618	0					
ANR	5562183	Identifier	cmd		5561618	0					
ANR	5562184	Identifier	name		5561618	1					
ANR	5562185	BreakStatement	break ;	173:12:3089:3094	5561618	10	True				
ANR	5562186	Label	default :	175:8:3105:3112	5561618	11	True				
ANR	5562187	Identifier	default		5561618	0					
ANR	5562188	BreakStatement	break ;	177:12:3127:3132	5561618	12	True				
ANR	5562189	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5561618	11					
ANR	5562190	ForInit	i = 0 ;	183:8:3161:3166	5561618	0	True				
ANR	5562191	AssignmentExpression	i = 0		5561618	0		=			
ANR	5562192	Identifier	i		5561618	0					
ANR	5562193	PrimaryExpression	0		5561618	1					
ANR	5562194	Condition	i < nb_args	183:15:3168:3178	5561618	1	True				
ANR	5562195	RelationalExpression	i < nb_args		5561618	0		<			
ANR	5562196	Identifier	i		5561618	0					
ANR	5562197	Identifier	nb_args		5561618	1					
ANR	5562198	PostIncDecOperationExpression	i ++	183:28:3181:3183	5561618	2	True				
ANR	5562199	Identifier	i		5561618	0					
ANR	5562200	IncDec	++		5561618	1					
ANR	5562201	ExpressionStatement	qemu_free ( args [ i ] )	185:8:3195:3213	5561618	3	True				
ANR	5562202	CallExpression	qemu_free ( args [ i ] )		5561618	0					
ANR	5562203	Callee	qemu_free		5561618	0					
ANR	5562204	Identifier	qemu_free		5561618	0					
ANR	5562205	ArgumentList	args [ i ]		5561618	1					
ANR	5562206	Argument	args [ i ]		5561618	0					
ANR	5562207	ArrayIndexing	args [ i ]		5561618	0					
ANR	5562208	Identifier	args		5561618	0					
ANR	5562209	Identifier	i		5561618	1					
ANR	5562210	ReturnType	static void		5561618	1					
ANR	5562211	Identifier	monitor_find_completion		5561618	2					
ANR	5562212	ParameterList	const char * cmdline		5561618	3					
ANR	5562213	Parameter	const char * cmdline	1:36:36:54	5561618	0	True				
ANR	5562214	ParameterType	const char *		5561618	0					
ANR	5562215	Identifier	cmdline		5561618	1					
ANR	5562216	CFGEntryNode	ENTRY		5561618		True				
ANR	5562217	CFGExitNode	EXIT		5561618		True				
ANR	5562218	Symbol	* key		5561618						
ANR	5562219	Symbol	ptype		5561618						
ANR	5562220	Symbol	MAX_ARGS		5561618						
ANR	5562221	Symbol	info_cmds		5561618						
ANR	5562222	Symbol	* args		5561618						
ANR	5562223	Symbol	compare_cmd		5561618						
ANR	5562224	Symbol	key -> name		5561618						
ANR	5562225	Symbol	& nb_args		5561618						
ANR	5562226	Symbol	strlen		5561618						
ANR	5562227	Symbol	cmdline		5561618						
ANR	5562228	Symbol	len		5561618						
ANR	5562229	Symbol	* cur_mon		5561618						
ANR	5562230	Symbol	nb_args		5561618						
ANR	5562231	Symbol	* cmd		5561618						
ANR	5562232	Symbol	key		5561618						
ANR	5562233	Symbol	mon_cmds		5561618						
ANR	5562234	Symbol	next_arg_type		5561618						
ANR	5562235	Symbol	sep		5561618						
ANR	5562236	Symbol	strcmp		5561618						
ANR	5562237	Symbol	* nb_args		5561618						
ANR	5562238	Symbol	NULL		5561618						
ANR	5562239	Symbol	* cmdline		5561618						
ANR	5562240	Symbol	cur_mon -> rs		5561618						
ANR	5562241	Symbol	cmd -> name		5561618						
ANR	5562242	Symbol	i		5561618						
ANR	5562243	Symbol	block_completion_it		5561618						
ANR	5562244	Symbol	qemu_isspace		5561618						
ANR	5562245	Symbol	cur_mon		5561618						
ANR	5562246	Symbol	qemu_strdup		5561618						
ANR	5562247	Symbol	args		5561618						
ANR	5562248	Symbol	str		5561618						
ANR	5562249	Symbol	* i		5561618						
ANR	5562250	Symbol	* ptype		5561618						
ANR	5562251	Symbol	strrchr		5561618						
ANR	5562252	Symbol	cmdname		5561618						
ANR	5562253	Symbol	key_defs		5561618						
ANR	5562254	Symbol	cmd		5561618						
ANR	5562255	Symbol	cmd -> args_type		5561618						
ANR	5562256	Symbol	* len		5561618						
