command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3679203	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_thread_flush_0.c								
ANR	3679204	Function	ff_thread_flush	1:0:0:756							
ANR	3679205	FunctionDef	ff_thread_flush (AVCodecContext * avctx)		3679204	0					
ANR	3679206	CompoundStatement		3:0:45:756	3679204	0					
ANR	3679207	IdentifierDeclStatement	FrameThreadContext * fctx = avctx -> thread_opaque ;	5:4:52:99	3679204	0	True				
ANR	3679208	IdentifierDecl	* fctx = avctx -> thread_opaque		3679204	0					
ANR	3679209	IdentifierDeclType	FrameThreadContext *		3679204	0					
ANR	3679210	Identifier	fctx		3679204	1					
ANR	3679211	AssignmentExpression	* fctx = avctx -> thread_opaque		3679204	2		=			
ANR	3679212	Identifier	fctx		3679204	0					
ANR	3679213	PtrMemberAccess	avctx -> thread_opaque		3679204	1					
ANR	3679214	Identifier	avctx		3679204	0					
ANR	3679215	Identifier	thread_opaque		3679204	1					
ANR	3679216	IfStatement	if ( ! avctx -> thread_opaque )		3679204	1					
ANR	3679217	Condition	! avctx -> thread_opaque	9:8:112:132	3679204	0	True				
ANR	3679218	UnaryOperationExpression	! avctx -> thread_opaque		3679204	0					
ANR	3679219	UnaryOperator	!		3679204	0					
ANR	3679220	PtrMemberAccess	avctx -> thread_opaque		3679204	1					
ANR	3679221	Identifier	avctx		3679204	0					
ANR	3679222	Identifier	thread_opaque		3679204	1					
ANR	3679223	ReturnStatement	return ;	9:31:135:141	3679204	1	True				
ANR	3679224	ExpressionStatement	"park_frame_worker_threads ( fctx , avctx -> thread_count )"	13:4:150:202	3679204	2	True				
ANR	3679225	CallExpression	"park_frame_worker_threads ( fctx , avctx -> thread_count )"		3679204	0					
ANR	3679226	Callee	park_frame_worker_threads		3679204	0					
ANR	3679227	Identifier	park_frame_worker_threads		3679204	0					
ANR	3679228	ArgumentList	fctx		3679204	1					
ANR	3679229	Argument	fctx		3679204	0					
ANR	3679230	Identifier	fctx		3679204	0					
ANR	3679231	Argument	avctx -> thread_count		3679204	1					
ANR	3679232	PtrMemberAccess	avctx -> thread_count		3679204	0					
ANR	3679233	Identifier	avctx		3679204	0					
ANR	3679234	Identifier	thread_count		3679204	1					
ANR	3679235	IfStatement	if ( fctx -> prev_thread )		3679204	3					
ANR	3679236	Condition	fctx -> prev_thread	15:8:213:229	3679204	0	True				
ANR	3679237	PtrMemberAccess	fctx -> prev_thread		3679204	0					
ANR	3679238	Identifier	fctx		3679204	0					
ANR	3679239	Identifier	prev_thread		3679204	1					
ANR	3679240	CompoundStatement		13:27:186:186	3679204	1					
ANR	3679241	IfStatement	if ( fctx -> prev_thread != & fctx -> threads [ 0 ] )		3679204	0					
ANR	3679242	Condition	fctx -> prev_thread != & fctx -> threads [ 0 ]	17:12:247:284	3679204	0	True				
ANR	3679243	EqualityExpression	fctx -> prev_thread != & fctx -> threads [ 0 ]		3679204	0		!=			
ANR	3679244	PtrMemberAccess	fctx -> prev_thread		3679204	0					
ANR	3679245	Identifier	fctx		3679204	0					
ANR	3679246	Identifier	prev_thread		3679204	1					
ANR	3679247	UnaryOperationExpression	& fctx -> threads [ 0 ]		3679204	1					
ANR	3679248	UnaryOperator	&		3679204	0					
ANR	3679249	ArrayIndexing	fctx -> threads [ 0 ]		3679204	1					
ANR	3679250	PtrMemberAccess	fctx -> threads		3679204	0					
ANR	3679251	Identifier	fctx		3679204	0					
ANR	3679252	Identifier	threads		3679204	1					
ANR	3679253	PrimaryExpression	0		3679204	1					
ANR	3679254	ExpressionStatement	"update_context_from_thread ( fctx -> threads [ 0 ] . avctx , fctx -> prev_thread -> avctx , 0 )"	19:12:300:379	3679204	1	True				
ANR	3679255	CallExpression	"update_context_from_thread ( fctx -> threads [ 0 ] . avctx , fctx -> prev_thread -> avctx , 0 )"		3679204	0					
ANR	3679256	Callee	update_context_from_thread		3679204	0					
ANR	3679257	Identifier	update_context_from_thread		3679204	0					
ANR	3679258	ArgumentList	fctx -> threads [ 0 ] . avctx		3679204	1					
ANR	3679259	Argument	fctx -> threads [ 0 ] . avctx		3679204	0					
ANR	3679260	MemberAccess	fctx -> threads [ 0 ] . avctx		3679204	0					
ANR	3679261	ArrayIndexing	fctx -> threads [ 0 ]		3679204	0					
ANR	3679262	PtrMemberAccess	fctx -> threads		3679204	0					
ANR	3679263	Identifier	fctx		3679204	0					
ANR	3679264	Identifier	threads		3679204	1					
ANR	3679265	PrimaryExpression	0		3679204	1					
ANR	3679266	Identifier	avctx		3679204	1					
ANR	3679267	Argument	fctx -> prev_thread -> avctx		3679204	1					
ANR	3679268	PtrMemberAccess	fctx -> prev_thread -> avctx		3679204	0					
ANR	3679269	PtrMemberAccess	fctx -> prev_thread		3679204	0					
ANR	3679270	Identifier	fctx		3679204	0					
ANR	3679271	Identifier	prev_thread		3679204	1					
ANR	3679272	Identifier	avctx		3679204	1					
ANR	3679273	Argument	0		3679204	2					
ANR	3679274	PrimaryExpression	0		3679204	0					
ANR	3679275	IfStatement	if ( avctx -> codec -> flush )		3679204	1					
ANR	3679276	Condition	avctx -> codec -> flush	21:12:394:412	3679204	0	True				
ANR	3679277	PtrMemberAccess	avctx -> codec -> flush		3679204	0					
ANR	3679278	PtrMemberAccess	avctx -> codec		3679204	0					
ANR	3679279	Identifier	avctx		3679204	0					
ANR	3679280	Identifier	codec		3679204	1					
ANR	3679281	Identifier	flush		3679204	1					
ANR	3679282	ExpressionStatement	avctx -> codec -> flush ( fctx -> threads [ 0 ] . avctx )	23:12:428:471	3679204	1	True				
ANR	3679283	CallExpression	avctx -> codec -> flush ( fctx -> threads [ 0 ] . avctx )		3679204	0					
ANR	3679284	Callee	avctx -> codec -> flush		3679204	0					
ANR	3679285	PtrMemberAccess	avctx -> codec -> flush		3679204	0					
ANR	3679286	PtrMemberAccess	avctx -> codec		3679204	0					
ANR	3679287	Identifier	avctx		3679204	0					
ANR	3679288	Identifier	codec		3679204	1					
ANR	3679289	Identifier	flush		3679204	1					
ANR	3679290	ArgumentList	fctx -> threads [ 0 ] . avctx		3679204	1					
ANR	3679291	Argument	fctx -> threads [ 0 ] . avctx		3679204	0					
ANR	3679292	MemberAccess	fctx -> threads [ 0 ] . avctx		3679204	0					
ANR	3679293	ArrayIndexing	fctx -> threads [ 0 ]		3679204	0					
ANR	3679294	PtrMemberAccess	fctx -> threads		3679204	0					
ANR	3679295	Identifier	fctx		3679204	0					
ANR	3679296	Identifier	threads		3679204	1					
ANR	3679297	PrimaryExpression	0		3679204	1					
ANR	3679298	Identifier	avctx		3679204	1					
ANR	3679299	ExpressionStatement	fctx -> next_decoding = fctx -> next_finished = 0	29:4:487:532	3679204	4	True				
ANR	3679300	AssignmentExpression	fctx -> next_decoding = fctx -> next_finished = 0		3679204	0		=			
ANR	3679301	PtrMemberAccess	fctx -> next_decoding		3679204	0					
ANR	3679302	Identifier	fctx		3679204	0					
ANR	3679303	Identifier	next_decoding		3679204	1					
ANR	3679304	AssignmentExpression	fctx -> next_finished = 0		3679204	1		=			
ANR	3679305	PtrMemberAccess	fctx -> next_finished		3679204	0					
ANR	3679306	Identifier	fctx		3679204	0					
ANR	3679307	Identifier	next_finished		3679204	1					
ANR	3679308	PrimaryExpression	0		3679204	1					
ANR	3679309	ExpressionStatement	fctx -> delaying = 1	31:4:539:557	3679204	5	True				
ANR	3679310	AssignmentExpression	fctx -> delaying = 1		3679204	0		=			
ANR	3679311	PtrMemberAccess	fctx -> delaying		3679204	0					
ANR	3679312	Identifier	fctx		3679204	0					
ANR	3679313	Identifier	delaying		3679204	1					
ANR	3679314	PrimaryExpression	1		3679204	1					
ANR	3679315	ExpressionStatement	fctx -> prev_thread = NULL	33:4:564:588	3679204	6	True				
ANR	3679316	AssignmentExpression	fctx -> prev_thread = NULL		3679204	0		=			
ANR	3679317	PtrMemberAccess	fctx -> prev_thread		3679204	0					
ANR	3679318	Identifier	fctx		3679204	0					
ANR	3679319	Identifier	prev_thread		3679204	1					
ANR	3679320	Identifier	NULL		3679204	1					
ANR	3679321	ForStatement	for ( int i = 0 ; i < avctx -> thread_count ; i ++ )		3679204	7					
ANR	3679322	ForInit	int i = 0 ;	37:9:673:682	3679204	0	True				
ANR	3679323	IdentifierDeclStatement	int i = 0 ;		3679204	0					
ANR	3679324	IdentifierDecl	i = 0		3679204	0					
ANR	3679325	IdentifierDeclType	int		3679204	0					
ANR	3679326	Identifier	i		3679204	1					
ANR	3679327	AssignmentExpression	i = 0		3679204	2		=			
ANR	3679328	Identifier	i		3679204	0					
ANR	3679329	PrimaryExpression	0		3679204	1					
ANR	3679330	Condition	i < avctx -> thread_count	37:20:684:706	3679204	1	True				
ANR	3679331	RelationalExpression	i < avctx -> thread_count		3679204	0		<			
ANR	3679332	Identifier	i		3679204	0					
ANR	3679333	PtrMemberAccess	avctx -> thread_count		3679204	1					
ANR	3679334	Identifier	avctx		3679204	0					
ANR	3679335	Identifier	thread_count		3679204	1					
ANR	3679336	PostIncDecOperationExpression	i ++	37:45:709:711	3679204	2	True				
ANR	3679337	Identifier	i		3679204	0					
ANR	3679338	IncDec	++		3679204	1					
ANR	3679339	ExpressionStatement	fctx -> threads [ i ] . got_frame = 0	39:8:723:753	3679204	3	True				
ANR	3679340	AssignmentExpression	fctx -> threads [ i ] . got_frame = 0		3679204	0		=			
ANR	3679341	MemberAccess	fctx -> threads [ i ] . got_frame		3679204	0					
ANR	3679342	ArrayIndexing	fctx -> threads [ i ]		3679204	0					
ANR	3679343	PtrMemberAccess	fctx -> threads		3679204	0					
ANR	3679344	Identifier	fctx		3679204	0					
ANR	3679345	Identifier	threads		3679204	1					
ANR	3679346	Identifier	i		3679204	1					
ANR	3679347	Identifier	got_frame		3679204	1					
ANR	3679348	PrimaryExpression	0		3679204	1					
ANR	3679349	ReturnType	void		3679204	1					
ANR	3679350	Identifier	ff_thread_flush		3679204	2					
ANR	3679351	ParameterList	AVCodecContext * avctx		3679204	3					
ANR	3679352	Parameter	AVCodecContext * avctx	1:21:21:41	3679204	0	True				
ANR	3679353	ParameterType	AVCodecContext *		3679204	0					
ANR	3679354	Identifier	avctx		3679204	1					
ANR	3679355	CFGEntryNode	ENTRY		3679204		True				
ANR	3679356	CFGExitNode	EXIT		3679204		True				
ANR	3679357	Symbol	* fctx -> prev_thread		3679204						
ANR	3679358	Symbol	avctx -> codec		3679204						
ANR	3679359	Symbol	NULL		3679204						
ANR	3679360	Symbol	fctx -> next_decoding		3679204						
ANR	3679361	Symbol	fctx -> delaying		3679204						
ANR	3679362	Symbol	* * avctx		3679204						
ANR	3679363	Symbol	* fctx		3679204						
ANR	3679364	Symbol	i		3679204						
ANR	3679365	Symbol	avctx -> thread_count		3679204						
ANR	3679366	Symbol	* fctx -> threads		3679204						
ANR	3679367	Symbol	fctx -> prev_thread -> avctx		3679204						
ANR	3679368	Symbol	avctx -> codec -> flush		3679204						
ANR	3679369	Symbol	fctx		3679204						
ANR	3679370	Symbol	fctx -> threads [ 0 ] . avctx		3679204						
ANR	3679371	Symbol	* avctx		3679204						
ANR	3679372	Symbol	avctx -> thread_opaque		3679204						
ANR	3679373	Symbol	* i		3679204						
ANR	3679374	Symbol	fctx -> threads [ i ] . got_frame		3679204						
ANR	3679375	Symbol	fctx -> threads		3679204						
ANR	3679376	Symbol	fctx -> prev_thread		3679204						
ANR	3679377	Symbol	fctx -> next_finished		3679204						
ANR	3679378	Symbol	* avctx -> codec		3679204						
ANR	3679379	Symbol	* * fctx		3679204						
ANR	3679380	Symbol	avctx		3679204						
