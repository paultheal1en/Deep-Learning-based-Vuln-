command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6201519	File	/home/p4ultr4n/workplace/ReVeal/raw_code/open_input_1.c								
ANR	6201520	Function	open_input	1:0:0:3460							
ANR	6201521	FunctionDef	"open_input (HLSContext * c , struct playlist * pls , struct segment * seg)"		6201520	0					
ANR	6201522	CompoundStatement		3:0:81:3460	6201520	0					
ANR	6201523	IdentifierDeclStatement	AVDictionary * opts = NULL ;	5:4:88:113	6201520	0	True				
ANR	6201524	IdentifierDecl	* opts = NULL		6201520	0					
ANR	6201525	IdentifierDeclType	AVDictionary *		6201520	0					
ANR	6201526	Identifier	opts		6201520	1					
ANR	6201527	AssignmentExpression	* opts = NULL		6201520	2		=			
ANR	6201528	Identifier	NULL		6201520	0					
ANR	6201529	Identifier	NULL		6201520	1					
ANR	6201530	IdentifierDeclStatement	int ret ;	7:4:120:127	6201520	1	True				
ANR	6201531	IdentifierDecl	ret		6201520	0					
ANR	6201532	IdentifierDeclType	int		6201520	0					
ANR	6201533	Identifier	ret		6201520	1					
ANR	6201534	ExpressionStatement	"av_dict_set ( & opts , ""user-agent"" , c -> user_agent , 0 )"	13:4:212:262	6201520	2	True				
ANR	6201535	CallExpression	"av_dict_set ( & opts , ""user-agent"" , c -> user_agent , 0 )"		6201520	0					
ANR	6201536	Callee	av_dict_set		6201520	0					
ANR	6201537	Identifier	av_dict_set		6201520	0					
ANR	6201538	ArgumentList	& opts		6201520	1					
ANR	6201539	Argument	& opts		6201520	0					
ANR	6201540	UnaryOperationExpression	& opts		6201520	0					
ANR	6201541	UnaryOperator	&		6201520	0					
ANR	6201542	Identifier	opts		6201520	1					
ANR	6201543	Argument	"""user-agent"""		6201520	1					
ANR	6201544	PrimaryExpression	"""user-agent"""		6201520	0					
ANR	6201545	Argument	c -> user_agent		6201520	2					
ANR	6201546	PtrMemberAccess	c -> user_agent		6201520	0					
ANR	6201547	Identifier	c		6201520	0					
ANR	6201548	Identifier	user_agent		6201520	1					
ANR	6201549	Argument	0		6201520	3					
ANR	6201550	PrimaryExpression	0		6201520	0					
ANR	6201551	ExpressionStatement	"av_dict_set ( & opts , ""cookies"" , c -> cookies , 0 )"	15:4:269:313	6201520	3	True				
ANR	6201552	CallExpression	"av_dict_set ( & opts , ""cookies"" , c -> cookies , 0 )"		6201520	0					
ANR	6201553	Callee	av_dict_set		6201520	0					
ANR	6201554	Identifier	av_dict_set		6201520	0					
ANR	6201555	ArgumentList	& opts		6201520	1					
ANR	6201556	Argument	& opts		6201520	0					
ANR	6201557	UnaryOperationExpression	& opts		6201520	0					
ANR	6201558	UnaryOperator	&		6201520	0					
ANR	6201559	Identifier	opts		6201520	1					
ANR	6201560	Argument	"""cookies"""		6201520	1					
ANR	6201561	PrimaryExpression	"""cookies"""		6201520	0					
ANR	6201562	Argument	c -> cookies		6201520	2					
ANR	6201563	PtrMemberAccess	c -> cookies		6201520	0					
ANR	6201564	Identifier	c		6201520	0					
ANR	6201565	Identifier	cookies		6201520	1					
ANR	6201566	Argument	0		6201520	3					
ANR	6201567	PrimaryExpression	0		6201520	0					
ANR	6201568	ExpressionStatement	"av_dict_set ( & opts , ""headers"" , c -> headers , 0 )"	17:4:320:364	6201520	4	True				
ANR	6201569	CallExpression	"av_dict_set ( & opts , ""headers"" , c -> headers , 0 )"		6201520	0					
ANR	6201570	Callee	av_dict_set		6201520	0					
ANR	6201571	Identifier	av_dict_set		6201520	0					
ANR	6201572	ArgumentList	& opts		6201520	1					
ANR	6201573	Argument	& opts		6201520	0					
ANR	6201574	UnaryOperationExpression	& opts		6201520	0					
ANR	6201575	UnaryOperator	&		6201520	0					
ANR	6201576	Identifier	opts		6201520	1					
ANR	6201577	Argument	"""headers"""		6201520	1					
ANR	6201578	PrimaryExpression	"""headers"""		6201520	0					
ANR	6201579	Argument	c -> headers		6201520	2					
ANR	6201580	PtrMemberAccess	c -> headers		6201520	0					
ANR	6201581	Identifier	c		6201520	0					
ANR	6201582	Identifier	headers		6201520	1					
ANR	6201583	Argument	0		6201520	3					
ANR	6201584	PrimaryExpression	0		6201520	0					
ANR	6201585	ExpressionStatement	"av_dict_set ( & opts , ""http_proxy"" , c -> http_proxy , 0 )"	19:4:371:421	6201520	5	True				
ANR	6201586	CallExpression	"av_dict_set ( & opts , ""http_proxy"" , c -> http_proxy , 0 )"		6201520	0					
ANR	6201587	Callee	av_dict_set		6201520	0					
ANR	6201588	Identifier	av_dict_set		6201520	0					
ANR	6201589	ArgumentList	& opts		6201520	1					
ANR	6201590	Argument	& opts		6201520	0					
ANR	6201591	UnaryOperationExpression	& opts		6201520	0					
ANR	6201592	UnaryOperator	&		6201520	0					
ANR	6201593	Identifier	opts		6201520	1					
ANR	6201594	Argument	"""http_proxy"""		6201520	1					
ANR	6201595	PrimaryExpression	"""http_proxy"""		6201520	0					
ANR	6201596	Argument	c -> http_proxy		6201520	2					
ANR	6201597	PtrMemberAccess	c -> http_proxy		6201520	0					
ANR	6201598	Identifier	c		6201520	0					
ANR	6201599	Identifier	http_proxy		6201520	1					
ANR	6201600	Argument	0		6201520	3					
ANR	6201601	PrimaryExpression	0		6201520	0					
ANR	6201602	ExpressionStatement	"av_dict_set ( & opts , ""seekable"" , ""0"" , 0 )"	21:4:428:466	6201520	6	True				
ANR	6201603	CallExpression	"av_dict_set ( & opts , ""seekable"" , ""0"" , 0 )"		6201520	0					
ANR	6201604	Callee	av_dict_set		6201520	0					
ANR	6201605	Identifier	av_dict_set		6201520	0					
ANR	6201606	ArgumentList	& opts		6201520	1					
ANR	6201607	Argument	& opts		6201520	0					
ANR	6201608	UnaryOperationExpression	& opts		6201520	0					
ANR	6201609	UnaryOperator	&		6201520	0					
ANR	6201610	Identifier	opts		6201520	1					
ANR	6201611	Argument	"""seekable"""		6201520	1					
ANR	6201612	PrimaryExpression	"""seekable"""		6201520	0					
ANR	6201613	Argument	"""0"""		6201520	2					
ANR	6201614	PrimaryExpression	"""0"""		6201520	0					
ANR	6201615	Argument	0		6201520	3					
ANR	6201616	PrimaryExpression	0		6201520	0					
ANR	6201617	IfStatement	if ( seg -> size >= 0 )		6201520	7					
ANR	6201618	Condition	seg -> size >= 0	25:8:479:492	6201520	0	True				
ANR	6201619	RelationalExpression	seg -> size >= 0		6201520	0		>=			
ANR	6201620	PtrMemberAccess	seg -> size		6201520	0					
ANR	6201621	Identifier	seg		6201520	0					
ANR	6201622	Identifier	size		6201520	1					
ANR	6201623	PrimaryExpression	0		6201520	1					
ANR	6201624	CompoundStatement		23:24:413:413	6201520	1					
ANR	6201625	ExpressionStatement	"av_dict_set_int ( & opts , ""offset"" , seg -> url_offset , 0 )"	31:8:622:674	6201520	0	True				
ANR	6201626	CallExpression	"av_dict_set_int ( & opts , ""offset"" , seg -> url_offset , 0 )"		6201520	0					
ANR	6201627	Callee	av_dict_set_int		6201520	0					
ANR	6201628	Identifier	av_dict_set_int		6201520	0					
ANR	6201629	ArgumentList	& opts		6201520	1					
ANR	6201630	Argument	& opts		6201520	0					
ANR	6201631	UnaryOperationExpression	& opts		6201520	0					
ANR	6201632	UnaryOperator	&		6201520	0					
ANR	6201633	Identifier	opts		6201520	1					
ANR	6201634	Argument	"""offset"""		6201520	1					
ANR	6201635	PrimaryExpression	"""offset"""		6201520	0					
ANR	6201636	Argument	seg -> url_offset		6201520	2					
ANR	6201637	PtrMemberAccess	seg -> url_offset		6201520	0					
ANR	6201638	Identifier	seg		6201520	0					
ANR	6201639	Identifier	url_offset		6201520	1					
ANR	6201640	Argument	0		6201520	3					
ANR	6201641	PrimaryExpression	0		6201520	0					
ANR	6201642	ExpressionStatement	"av_dict_set_int ( & opts , ""end_offset"" , seg -> url_offset + seg -> size , 0 )"	33:8:685:753	6201520	1	True				
ANR	6201643	CallExpression	"av_dict_set_int ( & opts , ""end_offset"" , seg -> url_offset + seg -> size , 0 )"		6201520	0					
ANR	6201644	Callee	av_dict_set_int		6201520	0					
ANR	6201645	Identifier	av_dict_set_int		6201520	0					
ANR	6201646	ArgumentList	& opts		6201520	1					
ANR	6201647	Argument	& opts		6201520	0					
ANR	6201648	UnaryOperationExpression	& opts		6201520	0					
ANR	6201649	UnaryOperator	&		6201520	0					
ANR	6201650	Identifier	opts		6201520	1					
ANR	6201651	Argument	"""end_offset"""		6201520	1					
ANR	6201652	PrimaryExpression	"""end_offset"""		6201520	0					
ANR	6201653	Argument	seg -> url_offset + seg -> size		6201520	2					
ANR	6201654	AdditiveExpression	seg -> url_offset + seg -> size		6201520	0		+			
ANR	6201655	PtrMemberAccess	seg -> url_offset		6201520	0					
ANR	6201656	Identifier	seg		6201520	0					
ANR	6201657	Identifier	url_offset		6201520	1					
ANR	6201658	PtrMemberAccess	seg -> size		6201520	1					
ANR	6201659	Identifier	seg		6201520	0					
ANR	6201660	Identifier	size		6201520	1					
ANR	6201661	Argument	0		6201520	3					
ANR	6201662	PrimaryExpression	0		6201520	0					
ANR	6201663	Statement	av_log	39:4:769:774	6201520	8	True				
ANR	6201664	Statement	(	39:10:775:775	6201520	9	True				
ANR	6201665	Statement	pls	39:11:776:778	6201520	10	True				
ANR	6201666	Statement	->	39:14:779:780	6201520	11	True				
ANR	6201667	Statement	parent	39:16:781:786	6201520	12	True				
ANR	6201668	Statement	","	39:22:787:787	6201520	13	True				
ANR	6201669	Statement	AV_LOG_VERBOSE	39:24:789:802	6201520	14	True				
ANR	6201670	Statement	","	39:38:803:803	6201520	15	True				
ANR	6201671	Statement	"""HLS request for url '%s', offset %"""	39:40:805:840	6201520	16	True				
ANR	6201672	Statement	PRId64	39:76:841:846	6201520	17	True				
ANR	6201673	Statement	""", playlist %d\\n"""	39:82:847:863	6201520	18	True				
ANR	6201674	Statement	","	39:99:864:864	6201520	19	True				
ANR	6201675	Statement	seg	41:11:878:880	6201520	20	True				
ANR	6201676	Statement	->	41:14:881:882	6201520	21	True				
ANR	6201677	Statement	url	41:16:883:885	6201520	22	True				
ANR	6201678	Statement	","	41:19:886:886	6201520	23	True				
ANR	6201679	Statement	seg	41:21:888:890	6201520	24	True				
ANR	6201680	Statement	->	41:24:891:892	6201520	25	True				
ANR	6201681	Statement	url_offset	41:26:893:902	6201520	26	True				
ANR	6201682	Statement	","	41:36:903:903	6201520	27	True				
ANR	6201683	Statement	pls	41:38:905:907	6201520	28	True				
ANR	6201684	Statement	->	41:41:908:909	6201520	29	True				
ANR	6201685	Statement	index	41:43:910:914	6201520	30	True				
ANR	6201686	Statement	)	41:48:915:915	6201520	31	True				
ANR	6201687	ExpressionStatement		41:49:916:916	6201520	32	True				
ANR	6201688	IfStatement	if ( seg -> key_type == KEY_NONE )		6201520	33					
ANR	6201689	Condition	seg -> key_type == KEY_NONE	45:8:929:953	6201520	0	True				
ANR	6201690	EqualityExpression	seg -> key_type == KEY_NONE		6201520	0		==			
ANR	6201691	PtrMemberAccess	seg -> key_type		6201520	0					
ANR	6201692	Identifier	seg		6201520	0					
ANR	6201693	Identifier	key_type		6201520	1					
ANR	6201694	Identifier	KEY_NONE		6201520	1					
ANR	6201695	CompoundStatement		43:35:874:874	6201520	1					
ANR	6201696	ExpressionStatement	"ret = open_url ( pls -> parent , & pls -> input , seg -> url , c -> avio_opts , opts )"	47:8:967:1037	6201520	0	True				
ANR	6201697	AssignmentExpression	"ret = open_url ( pls -> parent , & pls -> input , seg -> url , c -> avio_opts , opts )"		6201520	0		=			
ANR	6201698	Identifier	ret		6201520	0					
ANR	6201699	CallExpression	"open_url ( pls -> parent , & pls -> input , seg -> url , c -> avio_opts , opts )"		6201520	1					
ANR	6201700	Callee	open_url		6201520	0					
ANR	6201701	Identifier	open_url		6201520	0					
ANR	6201702	ArgumentList	pls -> parent		6201520	1					
ANR	6201703	Argument	pls -> parent		6201520	0					
ANR	6201704	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6201705	Identifier	pls		6201520	0					
ANR	6201706	Identifier	parent		6201520	1					
ANR	6201707	Argument	& pls -> input		6201520	1					
ANR	6201708	UnaryOperationExpression	& pls -> input		6201520	0					
ANR	6201709	UnaryOperator	&		6201520	0					
ANR	6201710	PtrMemberAccess	pls -> input		6201520	1					
ANR	6201711	Identifier	pls		6201520	0					
ANR	6201712	Identifier	input		6201520	1					
ANR	6201713	Argument	seg -> url		6201520	2					
ANR	6201714	PtrMemberAccess	seg -> url		6201520	0					
ANR	6201715	Identifier	seg		6201520	0					
ANR	6201716	Identifier	url		6201520	1					
ANR	6201717	Argument	c -> avio_opts		6201520	3					
ANR	6201718	PtrMemberAccess	c -> avio_opts		6201520	0					
ANR	6201719	Identifier	c		6201520	0					
ANR	6201720	Identifier	avio_opts		6201520	1					
ANR	6201721	Argument	opts		6201520	4					
ANR	6201722	Identifier	opts		6201520	0					
ANR	6201723	ElseStatement	else		6201520	0					
ANR	6201724	IfStatement	if ( seg -> key_type == KEY_AES_128 )		6201520	0					
ANR	6201725	Condition	seg -> key_type == KEY_AES_128	49:15:1055:1082	6201520	0	True				
ANR	6201726	EqualityExpression	seg -> key_type == KEY_AES_128		6201520	0		==			
ANR	6201727	PtrMemberAccess	seg -> key_type		6201520	0					
ANR	6201728	Identifier	seg		6201520	0					
ANR	6201729	Identifier	key_type		6201520	1					
ANR	6201730	Identifier	KEY_AES_128		6201520	1					
ANR	6201731	CompoundStatement		51:8:1051:1090	6201520	1					
ANR	6201732	IdentifierDeclStatement	AVDictionary * opts2 = NULL ;	51:8:1096:1122	6201520	0	True				
ANR	6201733	IdentifierDecl	* opts2 = NULL		6201520	0					
ANR	6201734	IdentifierDeclType	AVDictionary *		6201520	0					
ANR	6201735	Identifier	opts2		6201520	1					
ANR	6201736	AssignmentExpression	* opts2 = NULL		6201520	2		=			
ANR	6201737	Identifier	NULL		6201520	0					
ANR	6201738	Identifier	NULL		6201520	1					
ANR	6201739	IdentifierDeclStatement	"char iv [ 33 ] , key [ 33 ] , url [ MAX_URL_SIZE ] ;"	53:8:1133:1172	6201520	1	True				
ANR	6201740	IdentifierDecl	iv [ 33 ]		6201520	0					
ANR	6201741	IdentifierDeclType	char [ 33 ]		6201520	0					
ANR	6201742	Identifier	iv		6201520	1					
ANR	6201743	PrimaryExpression	33		6201520	2					
ANR	6201744	IdentifierDecl	key [ 33 ]		6201520	1					
ANR	6201745	IdentifierDeclType	char [ 33 ]		6201520	0					
ANR	6201746	Identifier	key		6201520	1					
ANR	6201747	PrimaryExpression	33		6201520	2					
ANR	6201748	IdentifierDecl	url [ MAX_URL_SIZE ]		6201520	2					
ANR	6201749	IdentifierDeclType	char [ MAX_URL_SIZE ]		6201520	0					
ANR	6201750	Identifier	url		6201520	1					
ANR	6201751	Identifier	MAX_URL_SIZE		6201520	2					
ANR	6201752	IfStatement	"if ( strcmp ( seg -> key , pls -> key_url ) )"		6201520	2					
ANR	6201753	Condition	"strcmp ( seg -> key , pls -> key_url )"	55:12:1187:1216	6201520	0	True				
ANR	6201754	CallExpression	"strcmp ( seg -> key , pls -> key_url )"		6201520	0					
ANR	6201755	Callee	strcmp		6201520	0					
ANR	6201756	Identifier	strcmp		6201520	0					
ANR	6201757	ArgumentList	seg -> key		6201520	1					
ANR	6201758	Argument	seg -> key		6201520	0					
ANR	6201759	PtrMemberAccess	seg -> key		6201520	0					
ANR	6201760	Identifier	seg		6201520	0					
ANR	6201761	Identifier	key		6201520	1					
ANR	6201762	Argument	pls -> key_url		6201520	1					
ANR	6201763	PtrMemberAccess	pls -> key_url		6201520	0					
ANR	6201764	Identifier	pls		6201520	0					
ANR	6201765	Identifier	key_url		6201520	1					
ANR	6201766	CompoundStatement		55:12:1152:1167	6201520	1					
ANR	6201767	IdentifierDeclStatement	AVIOContext * pb ;	57:12:1234:1249	6201520	0	True				
ANR	6201768	IdentifierDecl	* pb		6201520	0					
ANR	6201769	IdentifierDeclType	AVIOContext *		6201520	0					
ANR	6201770	Identifier	pb		6201520	1					
ANR	6201771	IfStatement	"if ( open_url ( pls -> parent , & pb , seg -> key , c -> avio_opts , opts ) == 0 )"		6201520	1					
ANR	6201772	Condition	"open_url ( pls -> parent , & pb , seg -> key , c -> avio_opts , opts ) == 0"	59:16:1268:1328	6201520	0	True				
ANR	6201773	EqualityExpression	"open_url ( pls -> parent , & pb , seg -> key , c -> avio_opts , opts ) == 0"		6201520	0		==			
ANR	6201774	CallExpression	"open_url ( pls -> parent , & pb , seg -> key , c -> avio_opts , opts )"		6201520	0					
ANR	6201775	Callee	open_url		6201520	0					
ANR	6201776	Identifier	open_url		6201520	0					
ANR	6201777	ArgumentList	pls -> parent		6201520	1					
ANR	6201778	Argument	pls -> parent		6201520	0					
ANR	6201779	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6201780	Identifier	pls		6201520	0					
ANR	6201781	Identifier	parent		6201520	1					
ANR	6201782	Argument	& pb		6201520	1					
ANR	6201783	UnaryOperationExpression	& pb		6201520	0					
ANR	6201784	UnaryOperator	&		6201520	0					
ANR	6201785	Identifier	pb		6201520	1					
ANR	6201786	Argument	seg -> key		6201520	2					
ANR	6201787	PtrMemberAccess	seg -> key		6201520	0					
ANR	6201788	Identifier	seg		6201520	0					
ANR	6201789	Identifier	key		6201520	1					
ANR	6201790	Argument	c -> avio_opts		6201520	3					
ANR	6201791	PtrMemberAccess	c -> avio_opts		6201520	0					
ANR	6201792	Identifier	c		6201520	0					
ANR	6201793	Identifier	avio_opts		6201520	1					
ANR	6201794	Argument	opts		6201520	4					
ANR	6201795	Identifier	opts		6201520	0					
ANR	6201796	PrimaryExpression	0		6201520	1					
ANR	6201797	CompoundStatement		57:79:1249:1249	6201520	1					
ANR	6201798	ExpressionStatement	"ret = avio_read ( pb , pls -> key , sizeof ( pls -> key ) )"	61:16:1350:1397	6201520	0	True				
ANR	6201799	AssignmentExpression	"ret = avio_read ( pb , pls -> key , sizeof ( pls -> key ) )"		6201520	0		=			
ANR	6201800	Identifier	ret		6201520	0					
ANR	6201801	CallExpression	"avio_read ( pb , pls -> key , sizeof ( pls -> key ) )"		6201520	1					
ANR	6201802	Callee	avio_read		6201520	0					
ANR	6201803	Identifier	avio_read		6201520	0					
ANR	6201804	ArgumentList	pb		6201520	1					
ANR	6201805	Argument	pb		6201520	0					
ANR	6201806	Identifier	pb		6201520	0					
ANR	6201807	Argument	pls -> key		6201520	1					
ANR	6201808	PtrMemberAccess	pls -> key		6201520	0					
ANR	6201809	Identifier	pls		6201520	0					
ANR	6201810	Identifier	key		6201520	1					
ANR	6201811	Argument	sizeof ( pls -> key )		6201520	2					
ANR	6201812	SizeofExpression	sizeof ( pls -> key )		6201520	0					
ANR	6201813	Sizeof	sizeof		6201520	0					
ANR	6201814	PtrMemberAccess	pls -> key		6201520	1					
ANR	6201815	Identifier	pls		6201520	0					
ANR	6201816	Identifier	key		6201520	1					
ANR	6201817	IfStatement	if ( ret != sizeof ( pls -> key ) )		6201520	1					
ANR	6201818	Condition	ret != sizeof ( pls -> key )	63:20:1420:1442	6201520	0	True				
ANR	6201819	EqualityExpression	ret != sizeof ( pls -> key )		6201520	0		!=			
ANR	6201820	Identifier	ret		6201520	0					
ANR	6201821	SizeofExpression	sizeof ( pls -> key )		6201520	1					
ANR	6201822	Sizeof	sizeof		6201520	0					
ANR	6201823	PtrMemberAccess	pls -> key		6201520	1					
ANR	6201824	Identifier	pls		6201520	0					
ANR	6201825	Identifier	key		6201520	1					
ANR	6201826	CompoundStatement		61:45:1363:1363	6201520	1					
ANR	6201827	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Unable to read key file %s\\n"" , seg -> key )"	65:20:1468:1564	6201520	0	True				
ANR	6201828	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Unable to read key file %s\\n"" , seg -> key )"		6201520	0					
ANR	6201829	Callee	av_log		6201520	0					
ANR	6201830	Identifier	av_log		6201520	0					
ANR	6201831	ArgumentList	NULL		6201520	1					
ANR	6201832	Argument	NULL		6201520	0					
ANR	6201833	Identifier	NULL		6201520	0					
ANR	6201834	Argument	AV_LOG_ERROR		6201520	1					
ANR	6201835	Identifier	AV_LOG_ERROR		6201520	0					
ANR	6201836	Argument	"""Unable to read key file %s\\n"""		6201520	2					
ANR	6201837	PrimaryExpression	"""Unable to read key file %s\\n"""		6201520	0					
ANR	6201838	Argument	seg -> key		6201520	3					
ANR	6201839	PtrMemberAccess	seg -> key		6201520	0					
ANR	6201840	Identifier	seg		6201520	0					
ANR	6201841	Identifier	key		6201520	1					
ANR	6201842	ExpressionStatement	"ff_format_io_close ( pls -> parent , & pb )"	71:16:1602:1638	6201520	2	True				
ANR	6201843	CallExpression	"ff_format_io_close ( pls -> parent , & pb )"		6201520	0					
ANR	6201844	Callee	ff_format_io_close		6201520	0					
ANR	6201845	Identifier	ff_format_io_close		6201520	0					
ANR	6201846	ArgumentList	pls -> parent		6201520	1					
ANR	6201847	Argument	pls -> parent		6201520	0					
ANR	6201848	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6201849	Identifier	pls		6201520	0					
ANR	6201850	Identifier	parent		6201520	1					
ANR	6201851	Argument	& pb		6201520	1					
ANR	6201852	UnaryOperationExpression	& pb		6201520	0					
ANR	6201853	UnaryOperator	&		6201520	0					
ANR	6201854	Identifier	pb		6201520	1					
ANR	6201855	ElseStatement	else		6201520	0					
ANR	6201856	CompoundStatement		71:19:1578:1578	6201520	0					
ANR	6201857	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Unable to open key file %s\\n"" , seg -> key )"	75:16:1679:1771	6201520	0	True				
ANR	6201858	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Unable to open key file %s\\n"" , seg -> key )"		6201520	0					
ANR	6201859	Callee	av_log		6201520	0					
ANR	6201860	Identifier	av_log		6201520	0					
ANR	6201861	ArgumentList	NULL		6201520	1					
ANR	6201862	Argument	NULL		6201520	0					
ANR	6201863	Identifier	NULL		6201520	0					
ANR	6201864	Argument	AV_LOG_ERROR		6201520	1					
ANR	6201865	Identifier	AV_LOG_ERROR		6201520	0					
ANR	6201866	Argument	"""Unable to open key file %s\\n"""		6201520	2					
ANR	6201867	PrimaryExpression	"""Unable to open key file %s\\n"""		6201520	0					
ANR	6201868	Argument	seg -> key		6201520	3					
ANR	6201869	PtrMemberAccess	seg -> key		6201520	0					
ANR	6201870	Identifier	seg		6201520	0					
ANR	6201871	Identifier	key		6201520	1					
ANR	6201872	ExpressionStatement	"av_strlcpy ( pls -> key_url , seg -> key , sizeof ( pls -> key_url ) )"	81:12:1801:1857	6201520	2	True				
ANR	6201873	CallExpression	"av_strlcpy ( pls -> key_url , seg -> key , sizeof ( pls -> key_url ) )"		6201520	0					
ANR	6201874	Callee	av_strlcpy		6201520	0					
ANR	6201875	Identifier	av_strlcpy		6201520	0					
ANR	6201876	ArgumentList	pls -> key_url		6201520	1					
ANR	6201877	Argument	pls -> key_url		6201520	0					
ANR	6201878	PtrMemberAccess	pls -> key_url		6201520	0					
ANR	6201879	Identifier	pls		6201520	0					
ANR	6201880	Identifier	key_url		6201520	1					
ANR	6201881	Argument	seg -> key		6201520	1					
ANR	6201882	PtrMemberAccess	seg -> key		6201520	0					
ANR	6201883	Identifier	seg		6201520	0					
ANR	6201884	Identifier	key		6201520	1					
ANR	6201885	Argument	sizeof ( pls -> key_url )		6201520	2					
ANR	6201886	SizeofExpression	sizeof ( pls -> key_url )		6201520	0					
ANR	6201887	Sizeof	sizeof		6201520	0					
ANR	6201888	PtrMemberAccess	pls -> key_url		6201520	1					
ANR	6201889	Identifier	pls		6201520	0					
ANR	6201890	Identifier	key_url		6201520	1					
ANR	6201891	ExpressionStatement	"ff_data_to_hex ( iv , seg -> iv , sizeof ( seg -> iv ) , 0 )"	85:8:1879:1926	6201520	3	True				
ANR	6201892	CallExpression	"ff_data_to_hex ( iv , seg -> iv , sizeof ( seg -> iv ) , 0 )"		6201520	0					
ANR	6201893	Callee	ff_data_to_hex		6201520	0					
ANR	6201894	Identifier	ff_data_to_hex		6201520	0					
ANR	6201895	ArgumentList	iv		6201520	1					
ANR	6201896	Argument	iv		6201520	0					
ANR	6201897	Identifier	iv		6201520	0					
ANR	6201898	Argument	seg -> iv		6201520	1					
ANR	6201899	PtrMemberAccess	seg -> iv		6201520	0					
ANR	6201900	Identifier	seg		6201520	0					
ANR	6201901	Identifier	iv		6201520	1					
ANR	6201902	Argument	sizeof ( seg -> iv )		6201520	2					
ANR	6201903	SizeofExpression	sizeof ( seg -> iv )		6201520	0					
ANR	6201904	Sizeof	sizeof		6201520	0					
ANR	6201905	PtrMemberAccess	seg -> iv		6201520	1					
ANR	6201906	Identifier	seg		6201520	0					
ANR	6201907	Identifier	iv		6201520	1					
ANR	6201908	Argument	0		6201520	3					
ANR	6201909	PrimaryExpression	0		6201520	0					
ANR	6201910	ExpressionStatement	"ff_data_to_hex ( key , pls -> key , sizeof ( pls -> key ) , 0 )"	87:8:1937:1987	6201520	4	True				
ANR	6201911	CallExpression	"ff_data_to_hex ( key , pls -> key , sizeof ( pls -> key ) , 0 )"		6201520	0					
ANR	6201912	Callee	ff_data_to_hex		6201520	0					
ANR	6201913	Identifier	ff_data_to_hex		6201520	0					
ANR	6201914	ArgumentList	key		6201520	1					
ANR	6201915	Argument	key		6201520	0					
ANR	6201916	Identifier	key		6201520	0					
ANR	6201917	Argument	pls -> key		6201520	1					
ANR	6201918	PtrMemberAccess	pls -> key		6201520	0					
ANR	6201919	Identifier	pls		6201520	0					
ANR	6201920	Identifier	key		6201520	1					
ANR	6201921	Argument	sizeof ( pls -> key )		6201520	2					
ANR	6201922	SizeofExpression	sizeof ( pls -> key )		6201520	0					
ANR	6201923	Sizeof	sizeof		6201520	0					
ANR	6201924	PtrMemberAccess	pls -> key		6201520	1					
ANR	6201925	Identifier	pls		6201520	0					
ANR	6201926	Identifier	key		6201520	1					
ANR	6201927	Argument	0		6201520	3					
ANR	6201928	PrimaryExpression	0		6201520	0					
ANR	6201929	ExpressionStatement	iv [ 32 ] = key [ 32 ] = '\\0'	89:8:1998:2021	6201520	5	True				
ANR	6201930	AssignmentExpression	iv [ 32 ] = key [ 32 ] = '\\0'		6201520	0		=			
ANR	6201931	ArrayIndexing	iv [ 32 ]		6201520	0					
ANR	6201932	Identifier	iv		6201520	0					
ANR	6201933	PrimaryExpression	32		6201520	1					
ANR	6201934	AssignmentExpression	key [ 32 ] = '\\0'		6201520	1		=			
ANR	6201935	ArrayIndexing	key [ 32 ]		6201520	0					
ANR	6201936	Identifier	key		6201520	0					
ANR	6201937	PrimaryExpression	32		6201520	1					
ANR	6201938	PrimaryExpression	'\\0'		6201520	1					
ANR	6201939	IfStatement	"if ( strstr ( seg -> url , ""://"" ) )"		6201520	6					
ANR	6201940	Condition	"strstr ( seg -> url , ""://"" )"	91:12:2036:2058	6201520	0	True				
ANR	6201941	CallExpression	"strstr ( seg -> url , ""://"" )"		6201520	0					
ANR	6201942	Callee	strstr		6201520	0					
ANR	6201943	Identifier	strstr		6201520	0					
ANR	6201944	ArgumentList	seg -> url		6201520	1					
ANR	6201945	Argument	seg -> url		6201520	0					
ANR	6201946	PtrMemberAccess	seg -> url		6201520	0					
ANR	6201947	Identifier	seg		6201520	0					
ANR	6201948	Identifier	url		6201520	1					
ANR	6201949	Argument	"""://"""		6201520	1					
ANR	6201950	PrimaryExpression	"""://"""		6201520	0					
ANR	6201951	ExpressionStatement	"snprintf ( url , sizeof ( url ) , ""crypto+%s"" , seg -> url )"	93:12:2074:2123	6201520	1	True				
ANR	6201952	CallExpression	"snprintf ( url , sizeof ( url ) , ""crypto+%s"" , seg -> url )"		6201520	0					
ANR	6201953	Callee	snprintf		6201520	0					
ANR	6201954	Identifier	snprintf		6201520	0					
ANR	6201955	ArgumentList	url		6201520	1					
ANR	6201956	Argument	url		6201520	0					
ANR	6201957	Identifier	url		6201520	0					
ANR	6201958	Argument	sizeof ( url )		6201520	1					
ANR	6201959	SizeofExpression	sizeof ( url )		6201520	0					
ANR	6201960	Sizeof	sizeof		6201520	0					
ANR	6201961	SizeofOperand	url		6201520	1					
ANR	6201962	Argument	"""crypto+%s"""		6201520	2					
ANR	6201963	PrimaryExpression	"""crypto+%s"""		6201520	0					
ANR	6201964	Argument	seg -> url		6201520	3					
ANR	6201965	PtrMemberAccess	seg -> url		6201520	0					
ANR	6201966	Identifier	seg		6201520	0					
ANR	6201967	Identifier	url		6201520	1					
ANR	6201968	ElseStatement	else		6201520	0					
ANR	6201969	ExpressionStatement	"snprintf ( url , sizeof ( url ) , ""crypto:%s"" , seg -> url )"	97:12:2152:2201	6201520	0	True				
ANR	6201970	CallExpression	"snprintf ( url , sizeof ( url ) , ""crypto:%s"" , seg -> url )"		6201520	0					
ANR	6201971	Callee	snprintf		6201520	0					
ANR	6201972	Identifier	snprintf		6201520	0					
ANR	6201973	ArgumentList	url		6201520	1					
ANR	6201974	Argument	url		6201520	0					
ANR	6201975	Identifier	url		6201520	0					
ANR	6201976	Argument	sizeof ( url )		6201520	1					
ANR	6201977	SizeofExpression	sizeof ( url )		6201520	0					
ANR	6201978	Sizeof	sizeof		6201520	0					
ANR	6201979	SizeofOperand	url		6201520	1					
ANR	6201980	Argument	"""crypto:%s"""		6201520	2					
ANR	6201981	PrimaryExpression	"""crypto:%s"""		6201520	0					
ANR	6201982	Argument	seg -> url		6201520	3					
ANR	6201983	PtrMemberAccess	seg -> url		6201520	0					
ANR	6201984	Identifier	seg		6201520	0					
ANR	6201985	Identifier	url		6201520	1					
ANR	6201986	ExpressionStatement	"av_dict_copy ( & opts2 , c -> avio_opts , 0 )"	101:8:2214:2251	6201520	7	True				
ANR	6201987	CallExpression	"av_dict_copy ( & opts2 , c -> avio_opts , 0 )"		6201520	0					
ANR	6201988	Callee	av_dict_copy		6201520	0					
ANR	6201989	Identifier	av_dict_copy		6201520	0					
ANR	6201990	ArgumentList	& opts2		6201520	1					
ANR	6201991	Argument	& opts2		6201520	0					
ANR	6201992	UnaryOperationExpression	& opts2		6201520	0					
ANR	6201993	UnaryOperator	&		6201520	0					
ANR	6201994	Identifier	opts2		6201520	1					
ANR	6201995	Argument	c -> avio_opts		6201520	1					
ANR	6201996	PtrMemberAccess	c -> avio_opts		6201520	0					
ANR	6201997	Identifier	c		6201520	0					
ANR	6201998	Identifier	avio_opts		6201520	1					
ANR	6201999	Argument	0		6201520	2					
ANR	6202000	PrimaryExpression	0		6201520	0					
ANR	6202001	ExpressionStatement	"av_dict_set ( & opts2 , ""key"" , key , 0 )"	103:8:2262:2296	6201520	8	True				
ANR	6202002	CallExpression	"av_dict_set ( & opts2 , ""key"" , key , 0 )"		6201520	0					
ANR	6202003	Callee	av_dict_set		6201520	0					
ANR	6202004	Identifier	av_dict_set		6201520	0					
ANR	6202005	ArgumentList	& opts2		6201520	1					
ANR	6202006	Argument	& opts2		6201520	0					
ANR	6202007	UnaryOperationExpression	& opts2		6201520	0					
ANR	6202008	UnaryOperator	&		6201520	0					
ANR	6202009	Identifier	opts2		6201520	1					
ANR	6202010	Argument	"""key"""		6201520	1					
ANR	6202011	PrimaryExpression	"""key"""		6201520	0					
ANR	6202012	Argument	key		6201520	2					
ANR	6202013	Identifier	key		6201520	0					
ANR	6202014	Argument	0		6201520	3					
ANR	6202015	PrimaryExpression	0		6201520	0					
ANR	6202016	ExpressionStatement	"av_dict_set ( & opts2 , ""iv"" , iv , 0 )"	105:8:2307:2339	6201520	9	True				
ANR	6202017	CallExpression	"av_dict_set ( & opts2 , ""iv"" , iv , 0 )"		6201520	0					
ANR	6202018	Callee	av_dict_set		6201520	0					
ANR	6202019	Identifier	av_dict_set		6201520	0					
ANR	6202020	ArgumentList	& opts2		6201520	1					
ANR	6202021	Argument	& opts2		6201520	0					
ANR	6202022	UnaryOperationExpression	& opts2		6201520	0					
ANR	6202023	UnaryOperator	&		6201520	0					
ANR	6202024	Identifier	opts2		6201520	1					
ANR	6202025	Argument	"""iv"""		6201520	1					
ANR	6202026	PrimaryExpression	"""iv"""		6201520	0					
ANR	6202027	Argument	iv		6201520	2					
ANR	6202028	Identifier	iv		6201520	0					
ANR	6202029	Argument	0		6201520	3					
ANR	6202030	PrimaryExpression	0		6201520	0					
ANR	6202031	ExpressionStatement	"ret = open_url ( pls -> parent , & pls -> input , url , opts2 , opts )"	109:8:2352:2410	6201520	10	True				
ANR	6202032	AssignmentExpression	"ret = open_url ( pls -> parent , & pls -> input , url , opts2 , opts )"		6201520	0		=			
ANR	6202033	Identifier	ret		6201520	0					
ANR	6202034	CallExpression	"open_url ( pls -> parent , & pls -> input , url , opts2 , opts )"		6201520	1					
ANR	6202035	Callee	open_url		6201520	0					
ANR	6202036	Identifier	open_url		6201520	0					
ANR	6202037	ArgumentList	pls -> parent		6201520	1					
ANR	6202038	Argument	pls -> parent		6201520	0					
ANR	6202039	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6202040	Identifier	pls		6201520	0					
ANR	6202041	Identifier	parent		6201520	1					
ANR	6202042	Argument	& pls -> input		6201520	1					
ANR	6202043	UnaryOperationExpression	& pls -> input		6201520	0					
ANR	6202044	UnaryOperator	&		6201520	0					
ANR	6202045	PtrMemberAccess	pls -> input		6201520	1					
ANR	6202046	Identifier	pls		6201520	0					
ANR	6202047	Identifier	input		6201520	1					
ANR	6202048	Argument	url		6201520	2					
ANR	6202049	Identifier	url		6201520	0					
ANR	6202050	Argument	opts2		6201520	3					
ANR	6202051	Identifier	opts2		6201520	0					
ANR	6202052	Argument	opts		6201520	4					
ANR	6202053	Identifier	opts		6201520	0					
ANR	6202054	ExpressionStatement	av_dict_free ( & opts2 )	113:8:2423:2443	6201520	11	True				
ANR	6202055	CallExpression	av_dict_free ( & opts2 )		6201520	0					
ANR	6202056	Callee	av_dict_free		6201520	0					
ANR	6202057	Identifier	av_dict_free		6201520	0					
ANR	6202058	ArgumentList	& opts2		6201520	1					
ANR	6202059	Argument	& opts2		6201520	0					
ANR	6202060	UnaryOperationExpression	& opts2		6201520	0					
ANR	6202061	UnaryOperator	&		6201520	0					
ANR	6202062	Identifier	opts2		6201520	1					
ANR	6202063	IfStatement	if ( ret < 0 )		6201520	12					
ANR	6202064	Condition	ret < 0	117:12:2460:2466	6201520	0	True				
ANR	6202065	RelationalExpression	ret < 0		6201520	0		<			
ANR	6202066	Identifier	ret		6201520	0					
ANR	6202067	PrimaryExpression	0		6201520	1					
ANR	6202068	CompoundStatement		115:21:2387:2387	6201520	1					
ANR	6202069	GotoStatement	goto cleanup ;	119:12:2484:2496	6201520	0	True				
ANR	6202070	Identifier	cleanup		6201520	0					
ANR	6202071	ExpressionStatement	ret = 0	123:8:2518:2525	6201520	13	True				
ANR	6202072	AssignmentExpression	ret = 0		6201520	0		=			
ANR	6202073	Identifier	ret		6201520	0					
ANR	6202074	PrimaryExpression	0		6201520	1					
ANR	6202075	ElseStatement	else		6201520	0					
ANR	6202076	IfStatement	if ( seg -> key_type == KEY_SAMPLE_AES )		6201520	0					
ANR	6202077	Condition	seg -> key_type == KEY_SAMPLE_AES	125:15:2543:2573	6201520	0	True				
ANR	6202078	EqualityExpression	seg -> key_type == KEY_SAMPLE_AES		6201520	0		==			
ANR	6202079	PtrMemberAccess	seg -> key_type		6201520	0					
ANR	6202080	Identifier	seg		6201520	0					
ANR	6202081	Identifier	key_type		6201520	1					
ANR	6202082	Identifier	KEY_SAMPLE_AES		6201520	1					
ANR	6202083	CompoundStatement		123:48:2494:2494	6201520	1					
ANR	6202084	ExpressionStatement	"av_log ( pls -> parent , AV_LOG_ERROR , ""SAMPLE-AES encryption is not supported yet\\n"" )"	127:8:2587:2684	6201520	0	True				
ANR	6202085	CallExpression	"av_log ( pls -> parent , AV_LOG_ERROR , ""SAMPLE-AES encryption is not supported yet\\n"" )"		6201520	0					
ANR	6202086	Callee	av_log		6201520	0					
ANR	6202087	Identifier	av_log		6201520	0					
ANR	6202088	ArgumentList	pls -> parent		6201520	1					
ANR	6202089	Argument	pls -> parent		6201520	0					
ANR	6202090	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6202091	Identifier	pls		6201520	0					
ANR	6202092	Identifier	parent		6201520	1					
ANR	6202093	Argument	AV_LOG_ERROR		6201520	1					
ANR	6202094	Identifier	AV_LOG_ERROR		6201520	0					
ANR	6202095	Argument	"""SAMPLE-AES encryption is not supported yet\\n"""		6201520	2					
ANR	6202096	PrimaryExpression	"""SAMPLE-AES encryption is not supported yet\\n"""		6201520	0					
ANR	6202097	ExpressionStatement	ret = AVERROR_PATCHWELCOME	131:8:2695:2721	6201520	1	True				
ANR	6202098	AssignmentExpression	ret = AVERROR_PATCHWELCOME		6201520	0		=			
ANR	6202099	Identifier	ret		6201520	0					
ANR	6202100	Identifier	AVERROR_PATCHWELCOME		6201520	1					
ANR	6202101	ElseStatement	else		6201520	0					
ANR	6202102	ExpressionStatement	ret = AVERROR ( ENOSYS )	137:6:2747:2768	6201520	0	True				
ANR	6202103	AssignmentExpression	ret = AVERROR ( ENOSYS )		6201520	0		=			
ANR	6202104	Identifier	ret		6201520	0					
ANR	6202105	CallExpression	AVERROR ( ENOSYS )		6201520	1					
ANR	6202106	Callee	AVERROR		6201520	0					
ANR	6202107	Identifier	AVERROR		6201520	0					
ANR	6202108	ArgumentList	ENOSYS		6201520	1					
ANR	6202109	Argument	ENOSYS		6201520	0					
ANR	6202110	Identifier	ENOSYS		6201520	0					
ANR	6202111	IfStatement	if ( ret == 0 && seg -> key_type == KEY_NONE && seg -> url_offset )		6201520	34					
ANR	6202112	Condition	ret == 0 && seg -> key_type == KEY_NONE && seg -> url_offset	147:8:2973:3028	6201520	0	True				
ANR	6202113	AndExpression	ret == 0 && seg -> key_type == KEY_NONE && seg -> url_offset		6201520	0		&&			
ANR	6202114	EqualityExpression	ret == 0		6201520	0		==			
ANR	6202115	Identifier	ret		6201520	0					
ANR	6202116	PrimaryExpression	0		6201520	1					
ANR	6202117	AndExpression	seg -> key_type == KEY_NONE && seg -> url_offset		6201520	1		&&			
ANR	6202118	EqualityExpression	seg -> key_type == KEY_NONE		6201520	0		==			
ANR	6202119	PtrMemberAccess	seg -> key_type		6201520	0					
ANR	6202120	Identifier	seg		6201520	0					
ANR	6202121	Identifier	key_type		6201520	1					
ANR	6202122	Identifier	KEY_NONE		6201520	1					
ANR	6202123	PtrMemberAccess	seg -> url_offset		6201520	1					
ANR	6202124	Identifier	seg		6201520	0					
ANR	6202125	Identifier	url_offset		6201520	1					
ANR	6202126	CompoundStatement		147:8:2960:3022	6201520	1					
ANR	6202127	IdentifierDeclStatement	"int seekret = avio_seek ( pls -> input , seg -> url_offset , SEEK_SET ) ;"	149:8:3042:3104	6201520	0	True				
ANR	6202128	IdentifierDecl	"seekret = avio_seek ( pls -> input , seg -> url_offset , SEEK_SET )"		6201520	0					
ANR	6202129	IdentifierDeclType	int		6201520	0					
ANR	6202130	Identifier	seekret		6201520	1					
ANR	6202131	AssignmentExpression	"seekret = avio_seek ( pls -> input , seg -> url_offset , SEEK_SET )"		6201520	2		=			
ANR	6202132	Identifier	seekret		6201520	0					
ANR	6202133	CallExpression	"avio_seek ( pls -> input , seg -> url_offset , SEEK_SET )"		6201520	1					
ANR	6202134	Callee	avio_seek		6201520	0					
ANR	6202135	Identifier	avio_seek		6201520	0					
ANR	6202136	ArgumentList	pls -> input		6201520	1					
ANR	6202137	Argument	pls -> input		6201520	0					
ANR	6202138	PtrMemberAccess	pls -> input		6201520	0					
ANR	6202139	Identifier	pls		6201520	0					
ANR	6202140	Identifier	input		6201520	1					
ANR	6202141	Argument	seg -> url_offset		6201520	1					
ANR	6202142	PtrMemberAccess	seg -> url_offset		6201520	0					
ANR	6202143	Identifier	seg		6201520	0					
ANR	6202144	Identifier	url_offset		6201520	1					
ANR	6202145	Argument	SEEK_SET		6201520	2					
ANR	6202146	Identifier	SEEK_SET		6201520	0					
ANR	6202147	IfStatement	if ( seekret < 0 )		6201520	1					
ANR	6202148	Condition	seekret < 0	151:12:3119:3129	6201520	0	True				
ANR	6202149	RelationalExpression	seekret < 0		6201520	0		<			
ANR	6202150	Identifier	seekret		6201520	0					
ANR	6202151	PrimaryExpression	0		6201520	1					
ANR	6202152	CompoundStatement		149:25:3050:3050	6201520	1					
ANR	6202153	Statement	av_log	153:12:3147:3152	6201520	0	True				
ANR	6202154	Statement	(	153:18:3153:3153	6201520	1	True				
ANR	6202155	Statement	pls	153:19:3154:3156	6201520	2	True				
ANR	6202156	Statement	->	153:22:3157:3158	6201520	3	True				
ANR	6202157	Statement	parent	153:24:3159:3164	6201520	4	True				
ANR	6202158	Statement	","	153:30:3165:3165	6201520	5	True				
ANR	6202159	Statement	AV_LOG_ERROR	153:32:3167:3178	6201520	6	True				
ANR	6202160	Statement	","	153:44:3179:3179	6201520	7	True				
ANR	6202161	Statement	"""Unable to seek to offset %"""	153:46:3181:3208	6201520	8	True				
ANR	6202162	Statement	PRId64	153:74:3209:3214	6201520	9	True				
ANR	6202163	Statement	""" of HLS segment '%s'\\n"""	153:80:3215:3238	6201520	10	True				
ANR	6202164	Statement	","	153:104:3239:3239	6201520	11	True				
ANR	6202165	Statement	seg	153:106:3241:3243	6201520	12	True				
ANR	6202166	Statement	->	153:109:3244:3245	6201520	13	True				
ANR	6202167	Statement	url_offset	153:111:3246:3255	6201520	14	True				
ANR	6202168	Statement	","	153:121:3256:3256	6201520	15	True				
ANR	6202169	Statement	seg	153:123:3258:3260	6201520	16	True				
ANR	6202170	Statement	->	153:126:3261:3262	6201520	17	True				
ANR	6202171	Statement	url	153:128:3263:3265	6201520	18	True				
ANR	6202172	Statement	)	153:131:3266:3266	6201520	19	True				
ANR	6202173	ExpressionStatement		153:132:3267:3267	6201520	20	True				
ANR	6202174	ExpressionStatement	ret = seekret	155:12:3282:3295	6201520	21	True				
ANR	6202175	AssignmentExpression	ret = seekret		6201520	0		=			
ANR	6202176	Identifier	ret		6201520	0					
ANR	6202177	Identifier	seekret		6201520	1					
ANR	6202178	ExpressionStatement	"ff_format_io_close ( pls -> parent , & pls -> input )"	157:12:3310:3354	6201520	22	True				
ANR	6202179	CallExpression	"ff_format_io_close ( pls -> parent , & pls -> input )"		6201520	0					
ANR	6202180	Callee	ff_format_io_close		6201520	0					
ANR	6202181	Identifier	ff_format_io_close		6201520	0					
ANR	6202182	ArgumentList	pls -> parent		6201520	1					
ANR	6202183	Argument	pls -> parent		6201520	0					
ANR	6202184	PtrMemberAccess	pls -> parent		6201520	0					
ANR	6202185	Identifier	pls		6201520	0					
ANR	6202186	Identifier	parent		6201520	1					
ANR	6202187	Argument	& pls -> input		6201520	1					
ANR	6202188	UnaryOperationExpression	& pls -> input		6201520	0					
ANR	6202189	UnaryOperator	&		6201520	0					
ANR	6202190	PtrMemberAccess	pls -> input		6201520	1					
ANR	6202191	Identifier	pls		6201520	0					
ANR	6202192	Identifier	input		6201520	1					
ANR	6202193	Label	cleanup :	165:0:3377:3384	6201520	35	True				
ANR	6202194	Identifier	cleanup		6201520	0					
ANR	6202195	ExpressionStatement	av_dict_free ( & opts )	167:4:3391:3410	6201520	36	True				
ANR	6202196	CallExpression	av_dict_free ( & opts )		6201520	0					
ANR	6202197	Callee	av_dict_free		6201520	0					
ANR	6202198	Identifier	av_dict_free		6201520	0					
ANR	6202199	ArgumentList	& opts		6201520	1					
ANR	6202200	Argument	& opts		6201520	0					
ANR	6202201	UnaryOperationExpression	& opts		6201520	0					
ANR	6202202	UnaryOperator	&		6201520	0					
ANR	6202203	Identifier	opts		6201520	1					
ANR	6202204	ExpressionStatement	pls -> cur_seg_offset = 0	169:4:3417:3440	6201520	37	True				
ANR	6202205	AssignmentExpression	pls -> cur_seg_offset = 0		6201520	0		=			
ANR	6202206	PtrMemberAccess	pls -> cur_seg_offset		6201520	0					
ANR	6202207	Identifier	pls		6201520	0					
ANR	6202208	Identifier	cur_seg_offset		6201520	1					
ANR	6202209	PrimaryExpression	0		6201520	1					
ANR	6202210	ReturnStatement	return ret ;	171:4:3447:3457	6201520	38	True				
ANR	6202211	Identifier	ret		6201520	0					
ANR	6202212	ReturnType	static int		6201520	1					
ANR	6202213	Identifier	open_input		6201520	2					
ANR	6202214	ParameterList	"HLSContext * c , struct playlist * pls , struct segment * seg"		6201520	3					
ANR	6202215	Parameter	HLSContext * c	1:22:22:34	6201520	0	True				
ANR	6202216	ParameterType	HLSContext *		6201520	0					
ANR	6202217	Identifier	c		6201520	1					
ANR	6202218	Parameter	struct playlist * pls	1:37:37:56	6201520	1	True				
ANR	6202219	ParameterType	struct playlist *		6201520	0					
ANR	6202220	Identifier	pls		6201520	1					
ANR	6202221	Parameter	struct segment * seg	1:59:59:77	6201520	2	True				
ANR	6202222	ParameterType	struct segment *		6201520	0					
ANR	6202223	Identifier	seg		6201520	1					
ANR	6202224	CFGEntryNode	ENTRY		6201520		True				
ANR	6202225	CFGExitNode	EXIT		6201520		True				
ANR	6202226	Symbol	& opts2		6201520						
ANR	6202227	Symbol	c -> http_proxy		6201520						
ANR	6202228	Symbol	seg -> url		6201520						
ANR	6202229	Symbol	* key		6201520						
ANR	6202230	Symbol	ENOSYS		6201520						
ANR	6202231	Symbol	pls -> input		6201520						
ANR	6202232	Symbol	open_url		6201520						
ANR	6202233	Symbol	pls -> key		6201520						
ANR	6202234	Symbol	opts		6201520						
ANR	6202235	Symbol	& opts		6201520						
ANR	6202236	Symbol	seg -> url_offset		6201520						
ANR	6202237	Symbol	seg -> iv		6201520						
ANR	6202238	Symbol	avio_seek		6201520						
ANR	6202239	Symbol	ret		6201520						
ANR	6202240	Symbol	strcmp		6201520						
ANR	6202241	Symbol	pls -> parent		6201520						
ANR	6202242	Symbol	NULL		6201520						
ANR	6202243	Symbol	c -> headers		6201520						
ANR	6202244	Symbol	& pls -> input		6201520						
ANR	6202245	Symbol	iv		6201520						
ANR	6202246	Symbol	seekret		6201520						
ANR	6202247	Symbol	KEY_AES_128		6201520						
ANR	6202248	Symbol	strstr		6201520						
ANR	6202249	Symbol	seg -> key_type		6201520						
ANR	6202250	Symbol	seg -> key		6201520						
ANR	6202251	Symbol	avio_read		6201520						
ANR	6202252	Symbol	& pb		6201520						
ANR	6202253	Symbol	* seg		6201520						
ANR	6202254	Symbol	opts2		6201520						
ANR	6202255	Symbol	c -> avio_opts		6201520						
ANR	6202256	Symbol	seg		6201520						
ANR	6202257	Symbol	c -> cookies		6201520						
ANR	6202258	Symbol	pls -> key_url		6201520						
ANR	6202259	Symbol	AVERROR_PATCHWELCOME		6201520						
ANR	6202260	Symbol	key		6201520						
ANR	6202261	Symbol	SEEK_SET		6201520						
ANR	6202262	Symbol	* pls		6201520						
ANR	6202263	Symbol	c		6201520						
ANR	6202264	Symbol	c -> user_agent		6201520						
ANR	6202265	Symbol	seg -> size		6201520						
ANR	6202266	Symbol	AV_LOG_ERROR		6201520						
ANR	6202267	Symbol	KEY_SAMPLE_AES		6201520						
ANR	6202268	Symbol	* c		6201520						
ANR	6202269	Symbol	url		6201520						
ANR	6202270	Symbol	* iv		6201520						
ANR	6202271	Symbol	pb		6201520						
ANR	6202272	Symbol	pls		6201520						
ANR	6202273	Symbol	pls -> cur_seg_offset		6201520						
ANR	6202274	Symbol	AVERROR		6201520						
ANR	6202275	Symbol	KEY_NONE		6201520						
