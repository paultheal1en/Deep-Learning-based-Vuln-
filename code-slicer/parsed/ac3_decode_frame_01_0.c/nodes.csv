command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	347126	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ac3_decode_frame_01_0.c								
ANR	347127	Function	ac3_decode_frame	1:0:0:4508							
ANR	347128	FunctionDef	"ac3_decode_frame (AVCodecContext * avctx , void * data , int * data_size , uint8_t * buf , int buf_size)"		347127	0					
ANR	347129	CompoundStatement		3:0:110:4508	347127	0					
ANR	347130	IdentifierDeclStatement	AC3DecodeContext * ctx = avctx -> priv_data ;	5:4:117:157	347127	0	True				
ANR	347131	IdentifierDecl	* ctx = avctx -> priv_data		347127	0					
ANR	347132	IdentifierDeclType	AC3DecodeContext *		347127	0					
ANR	347133	Identifier	ctx		347127	1					
ANR	347134	AssignmentExpression	* ctx = avctx -> priv_data		347127	2		=			
ANR	347135	Identifier	ctx		347127	0					
ANR	347136	PtrMemberAccess	avctx -> priv_data		347127	1					
ANR	347137	Identifier	avctx		347127	0					
ANR	347138	Identifier	priv_data		347127	1					
ANR	347139	IdentifierDeclStatement	int frame_start ;	7:4:164:179	347127	1	True				
ANR	347140	IdentifierDecl	frame_start		347127	0					
ANR	347141	IdentifierDeclType	int		347127	0					
ANR	347142	Identifier	frame_start		347127	1					
ANR	347143	IdentifierDeclStatement	"int i , j , k , l ;"	9:4:186:200	347127	2	True				
ANR	347144	IdentifierDecl	i		347127	0					
ANR	347145	IdentifierDeclType	int		347127	0					
ANR	347146	Identifier	i		347127	1					
ANR	347147	IdentifierDecl	j		347127	1					
ANR	347148	IdentifierDeclType	int		347127	0					
ANR	347149	Identifier	j		347127	1					
ANR	347150	IdentifierDecl	k		347127	2					
ANR	347151	IdentifierDeclType	int		347127	0					
ANR	347152	Identifier	k		347127	1					
ANR	347153	IdentifierDecl	l		347127	3					
ANR	347154	IdentifierDeclType	int		347127	0					
ANR	347155	Identifier	l		347127	1					
ANR	347156	IdentifierDeclStatement	"float tmp0 [ 128 ] , tmp1 [ 128 ] , tmp [ 512 ] ;"	11:4:207:243	347127	3	True				
ANR	347157	IdentifierDecl	tmp0 [ 128 ]		347127	0					
ANR	347158	IdentifierDeclType	float [ 128 ]		347127	0					
ANR	347159	Identifier	tmp0		347127	1					
ANR	347160	PrimaryExpression	128		347127	2					
ANR	347161	IdentifierDecl	tmp1 [ 128 ]		347127	1					
ANR	347162	IdentifierDeclType	float [ 128 ]		347127	0					
ANR	347163	Identifier	tmp1		347127	1					
ANR	347164	PrimaryExpression	128		347127	2					
ANR	347165	IdentifierDecl	tmp [ 512 ]		347127	2					
ANR	347166	IdentifierDeclType	float [ 512 ]		347127	0					
ANR	347167	Identifier	tmp		347127	1					
ANR	347168	PrimaryExpression	512		347127	2					
ANR	347169	IdentifierDeclStatement	short * out_samples = ( short * ) data ;	13:4:250:284	347127	4	True				
ANR	347170	IdentifierDecl	* out_samples = ( short * ) data		347127	0					
ANR	347171	IdentifierDeclType	short *		347127	0					
ANR	347172	Identifier	out_samples		347127	1					
ANR	347173	AssignmentExpression	* out_samples = ( short * ) data		347127	2		=			
ANR	347174	Identifier	out_samples		347127	0					
ANR	347175	CastExpression	( short * ) data		347127	1					
ANR	347176	CastTarget	short *		347127	0					
ANR	347177	Identifier	data		347127	1					
ANR	347178	IdentifierDeclStatement	float * samples = ctx -> samples ;	15:4:291:320	347127	5	True				
ANR	347179	IdentifierDecl	* samples = ctx -> samples		347127	0					
ANR	347180	IdentifierDeclType	float *		347127	0					
ANR	347181	Identifier	samples		347127	1					
ANR	347182	AssignmentExpression	* samples = ctx -> samples		347127	2		=			
ANR	347183	Identifier	samples		347127	0					
ANR	347184	PtrMemberAccess	ctx -> samples		347127	1					
ANR	347185	Identifier	ctx		347127	0					
ANR	347186	Identifier	samples		347127	1					
ANR	347187	ExpressionStatement	"frame_start = ac3_synchronize ( buf , buf_size )"	21:4:359:403	347127	6	True				
ANR	347188	AssignmentExpression	"frame_start = ac3_synchronize ( buf , buf_size )"		347127	0		=			
ANR	347189	Identifier	frame_start		347127	0					
ANR	347190	CallExpression	"ac3_synchronize ( buf , buf_size )"		347127	1					
ANR	347191	Callee	ac3_synchronize		347127	0					
ANR	347192	Identifier	ac3_synchronize		347127	0					
ANR	347193	ArgumentList	buf		347127	1					
ANR	347194	Argument	buf		347127	0					
ANR	347195	Identifier	buf		347127	0					
ANR	347196	Argument	buf_size		347127	1					
ANR	347197	Identifier	buf_size		347127	0					
ANR	347198	IfStatement	if ( frame_start == - 1 )		347127	7					
ANR	347199	Condition	frame_start == - 1	23:8:414:430	347127	0	True				
ANR	347200	EqualityExpression	frame_start == - 1		347127	0		==			
ANR	347201	Identifier	frame_start		347127	0					
ANR	347202	UnaryOperationExpression	- 1		347127	1					
ANR	347203	UnaryOperator	-		347127	0					
ANR	347204	PrimaryExpression	1		347127	1					
ANR	347205	CompoundStatement		21:27:322:322	347127	1					
ANR	347206	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame is not synchronized\\n"" )"	25:8:444:502	347127	0	True				
ANR	347207	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame is not synchronized\\n"" )"		347127	0					
ANR	347208	Callee	av_log		347127	0					
ANR	347209	Identifier	av_log		347127	0					
ANR	347210	ArgumentList	avctx		347127	1					
ANR	347211	Argument	avctx		347127	0					
ANR	347212	Identifier	avctx		347127	0					
ANR	347213	Argument	AV_LOG_ERROR		347127	1					
ANR	347214	Identifier	AV_LOG_ERROR		347127	0					
ANR	347215	Argument	"""frame is not synchronized\\n"""		347127	2					
ANR	347216	PrimaryExpression	"""frame is not synchronized\\n"""		347127	0					
ANR	347217	ExpressionStatement	* data_size = 0	27:8:513:527	347127	1	True				
ANR	347218	AssignmentExpression	* data_size = 0		347127	0		=			
ANR	347219	UnaryOperationExpression	* data_size		347127	0					
ANR	347220	UnaryOperator	*		347127	0					
ANR	347221	Identifier	data_size		347127	1					
ANR	347222	PrimaryExpression	0		347127	1					
ANR	347223	ReturnStatement	return - 1 ;	29:8:538:547	347127	2	True				
ANR	347224	UnaryOperationExpression	- 1		347127	0					
ANR	347225	UnaryOperator	-		347127	0					
ANR	347226	PrimaryExpression	1		347127	1					
ANR	347227	ExpressionStatement	"init_get_bits ( & ( ctx -> gb ) , buf + frame_start , ( buf_size - frame_start ) * 8 )"	37:4:634:708	347127	8	True				
ANR	347228	CallExpression	"init_get_bits ( & ( ctx -> gb ) , buf + frame_start , ( buf_size - frame_start ) * 8 )"		347127	0					
ANR	347229	Callee	init_get_bits		347127	0					
ANR	347230	Identifier	init_get_bits		347127	0					
ANR	347231	ArgumentList	& ( ctx -> gb )		347127	1					
ANR	347232	Argument	& ( ctx -> gb )		347127	0					
ANR	347233	UnaryOperationExpression	& ( ctx -> gb )		347127	0					
ANR	347234	UnaryOperator	&		347127	0					
ANR	347235	PtrMemberAccess	ctx -> gb		347127	1					
ANR	347236	Identifier	ctx		347127	0					
ANR	347237	Identifier	gb		347127	1					
ANR	347238	Argument	buf + frame_start		347127	1					
ANR	347239	AdditiveExpression	buf + frame_start		347127	0		+			
ANR	347240	Identifier	buf		347127	0					
ANR	347241	Identifier	frame_start		347127	1					
ANR	347242	Argument	( buf_size - frame_start ) * 8		347127	2					
ANR	347243	MultiplicativeExpression	( buf_size - frame_start ) * 8		347127	0		*			
ANR	347244	AdditiveExpression	buf_size - frame_start		347127	0		-			
ANR	347245	Identifier	buf_size		347127	0					
ANR	347246	Identifier	frame_start		347127	1					
ANR	347247	PrimaryExpression	8		347127	1					
ANR	347248	IfStatement	if ( ac3_parse_sync_info ( ctx ) )		347127	9					
ANR	347249	Condition	ac3_parse_sync_info ( ctx )	43:8:823:846	347127	0	True				
ANR	347250	CallExpression	ac3_parse_sync_info ( ctx )		347127	0					
ANR	347251	Callee	ac3_parse_sync_info		347127	0					
ANR	347252	Identifier	ac3_parse_sync_info		347127	0					
ANR	347253	ArgumentList	ctx		347127	1					
ANR	347254	Argument	ctx		347127	0					
ANR	347255	Identifier	ctx		347127	0					
ANR	347256	CompoundStatement		41:34:738:738	347127	1					
ANR	347257	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""fscod is not valid\\n"" )"	45:8:860:911	347127	0	True				
ANR	347258	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""fscod is not valid\\n"" )"		347127	0					
ANR	347259	Callee	av_log		347127	0					
ANR	347260	Identifier	av_log		347127	0					
ANR	347261	ArgumentList	avctx		347127	1					
ANR	347262	Argument	avctx		347127	0					
ANR	347263	Identifier	avctx		347127	0					
ANR	347264	Argument	AV_LOG_ERROR		347127	1					
ANR	347265	Identifier	AV_LOG_ERROR		347127	0					
ANR	347266	Argument	"""fscod is not valid\\n"""		347127	2					
ANR	347267	PrimaryExpression	"""fscod is not valid\\n"""		347127	0					
ANR	347268	ExpressionStatement	* data_size = 0	47:8:922:936	347127	1	True				
ANR	347269	AssignmentExpression	* data_size = 0		347127	0		=			
ANR	347270	UnaryOperationExpression	* data_size		347127	0					
ANR	347271	UnaryOperator	*		347127	0					
ANR	347272	Identifier	data_size		347127	1					
ANR	347273	PrimaryExpression	0		347127	1					
ANR	347274	ReturnStatement	return - 1 ;	49:8:947:956	347127	2	True				
ANR	347275	UnaryOperationExpression	- 1		347127	0					
ANR	347276	UnaryOperator	-		347127	0					
ANR	347277	PrimaryExpression	1		347127	1					
ANR	347278	IfStatement	if ( ac3_parse_bsi ( ctx ) )		347127	10					
ANR	347279	Condition	ac3_parse_bsi ( ctx )	71:8:1206:1223	347127	0	True				
ANR	347280	CallExpression	ac3_parse_bsi ( ctx )		347127	0					
ANR	347281	Callee	ac3_parse_bsi		347127	0					
ANR	347282	Identifier	ac3_parse_bsi		347127	0					
ANR	347283	ArgumentList	ctx		347127	1					
ANR	347284	Argument	ctx		347127	0					
ANR	347285	Identifier	ctx		347127	0					
ANR	347286	CompoundStatement		69:28:1115:1115	347127	1					
ANR	347287	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bsid is not valid\\n"" )"	73:8:1237:1287	347127	0	True				
ANR	347288	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bsid is not valid\\n"" )"		347127	0					
ANR	347289	Callee	av_log		347127	0					
ANR	347290	Identifier	av_log		347127	0					
ANR	347291	ArgumentList	avctx		347127	1					
ANR	347292	Argument	avctx		347127	0					
ANR	347293	Identifier	avctx		347127	0					
ANR	347294	Argument	AV_LOG_ERROR		347127	1					
ANR	347295	Identifier	AV_LOG_ERROR		347127	0					
ANR	347296	Argument	"""bsid is not valid\\n"""		347127	2					
ANR	347297	PrimaryExpression	"""bsid is not valid\\n"""		347127	0					
ANR	347298	ExpressionStatement	* data_size = 0	75:8:1298:1312	347127	1	True				
ANR	347299	AssignmentExpression	* data_size = 0		347127	0		=			
ANR	347300	UnaryOperationExpression	* data_size		347127	0					
ANR	347301	UnaryOperator	*		347127	0					
ANR	347302	Identifier	data_size		347127	1					
ANR	347303	PrimaryExpression	0		347127	1					
ANR	347304	ReturnStatement	return - 1 ;	77:8:1323:1332	347127	2	True				
ANR	347305	UnaryOperationExpression	- 1		347127	0					
ANR	347306	UnaryOperator	-		347127	0					
ANR	347307	PrimaryExpression	1		347127	1					
ANR	347308	ExpressionStatement	avctx -> sample_rate = ctx -> sync_info . sampling_rate	83:4:1348:1397	347127	11	True				
ANR	347309	AssignmentExpression	avctx -> sample_rate = ctx -> sync_info . sampling_rate		347127	0		=			
ANR	347310	PtrMemberAccess	avctx -> sample_rate		347127	0					
ANR	347311	Identifier	avctx		347127	0					
ANR	347312	Identifier	sample_rate		347127	1					
ANR	347313	MemberAccess	ctx -> sync_info . sampling_rate		347127	1					
ANR	347314	PtrMemberAccess	ctx -> sync_info		347127	0					
ANR	347315	Identifier	ctx		347127	0					
ANR	347316	Identifier	sync_info		347127	1					
ANR	347317	Identifier	sampling_rate		347127	1					
ANR	347318	IfStatement	if ( avctx -> channels == 0 )		347127	12					
ANR	347319	Condition	avctx -> channels == 0	85:8:1408:1427	347127	0	True				
ANR	347320	EqualityExpression	avctx -> channels == 0		347127	0		==			
ANR	347321	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347322	Identifier	avctx		347127	0					
ANR	347323	Identifier	channels		347127	1					
ANR	347324	PrimaryExpression	0		347127	1					
ANR	347325	CompoundStatement		83:30:1319:1319	347127	1					
ANR	347326	ExpressionStatement	avctx -> channels = ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )	87:8:1441:1520	347127	0	True				
ANR	347327	AssignmentExpression	avctx -> channels = ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	0		=			
ANR	347328	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347329	Identifier	avctx		347127	0					
ANR	347330	Identifier	channels		347127	1					
ANR	347331	AdditiveExpression	ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	1		+			
ANR	347332	MemberAccess	ctx -> bsi . nfchans		347127	0					
ANR	347333	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347334	Identifier	ctx		347127	0					
ANR	347335	Identifier	bsi		347127	1					
ANR	347336	Identifier	nfchans		347127	1					
ANR	347337	ConditionalExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0		347127	1					
ANR	347338	Condition	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0					
ANR	347339	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0		&			
ANR	347340	MemberAccess	ctx -> bsi . flags		347127	0					
ANR	347341	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347342	Identifier	ctx		347127	0					
ANR	347343	Identifier	bsi		347127	1					
ANR	347344	Identifier	flags		347127	1					
ANR	347345	Identifier	AC3_BSI_LFEON		347127	1					
ANR	347346	PrimaryExpression	1		347127	1					
ANR	347347	PrimaryExpression	0		347127	2					
ANR	347348	ExpressionStatement	ctx -> output = AC3_OUTPUT_UNMODIFIED	89:8:1531:1566	347127	1	True				
ANR	347349	AssignmentExpression	ctx -> output = AC3_OUTPUT_UNMODIFIED		347127	0		=			
ANR	347350	PtrMemberAccess	ctx -> output		347127	0					
ANR	347351	Identifier	ctx		347127	0					
ANR	347352	Identifier	output		347127	1					
ANR	347353	Identifier	AC3_OUTPUT_UNMODIFIED		347127	1					
ANR	347354	ElseStatement	else		347127	0					
ANR	347355	IfStatement	if ( ( ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 ) ) < avctx -> channels )		347127	0					
ANR	347356	Condition	( ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 ) ) < avctx -> channels	93:13:1589:1669	347127	0	True				
ANR	347357	RelationalExpression	( ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 ) ) < avctx -> channels		347127	0		<			
ANR	347358	AdditiveExpression	ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	0		+			
ANR	347359	MemberAccess	ctx -> bsi . nfchans		347127	0					
ANR	347360	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347361	Identifier	ctx		347127	0					
ANR	347362	Identifier	bsi		347127	1					
ANR	347363	Identifier	nfchans		347127	1					
ANR	347364	ConditionalExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0		347127	1					
ANR	347365	Condition	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0					
ANR	347366	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0		&			
ANR	347367	MemberAccess	ctx -> bsi . flags		347127	0					
ANR	347368	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347369	Identifier	ctx		347127	0					
ANR	347370	Identifier	bsi		347127	1					
ANR	347371	Identifier	flags		347127	1					
ANR	347372	Identifier	AC3_BSI_LFEON		347127	1					
ANR	347373	PrimaryExpression	1		347127	1					
ANR	347374	PrimaryExpression	0		347127	2					
ANR	347375	PtrMemberAccess	avctx -> channels		347127	1					
ANR	347376	Identifier	avctx		347127	0					
ANR	347377	Identifier	channels		347127	1					
ANR	347378	CompoundStatement		91:96:1561:1561	347127	1					
ANR	347379	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""ac3_decoder: AC3 Source Channels Are Less Then Specified %d: Output to %d Channels\\n"" , avctx -> channels , ( ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 ) ) )"	95:8:1683:1896	347127	0	True				
ANR	347380	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""ac3_decoder: AC3 Source Channels Are Less Then Specified %d: Output to %d Channels\\n"" , avctx -> channels , ( ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 ) ) )"		347127	0					
ANR	347381	Callee	av_log		347127	0					
ANR	347382	Identifier	av_log		347127	0					
ANR	347383	ArgumentList	avctx		347127	1					
ANR	347384	Argument	avctx		347127	0					
ANR	347385	Identifier	avctx		347127	0					
ANR	347386	Argument	AV_LOG_INFO		347127	1					
ANR	347387	Identifier	AV_LOG_INFO		347127	0					
ANR	347388	Argument	"""ac3_decoder: AC3 Source Channels Are Less Then Specified %d: Output to %d Channels\\n"""		347127	2					
ANR	347389	PrimaryExpression	"""ac3_decoder: AC3 Source Channels Are Less Then Specified %d: Output to %d Channels\\n"""		347127	0					
ANR	347390	Argument	avctx -> channels		347127	3					
ANR	347391	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347392	Identifier	avctx		347127	0					
ANR	347393	Identifier	channels		347127	1					
ANR	347394	Argument	ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	4					
ANR	347395	AdditiveExpression	ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	0		+			
ANR	347396	MemberAccess	ctx -> bsi . nfchans		347127	0					
ANR	347397	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347398	Identifier	ctx		347127	0					
ANR	347399	Identifier	bsi		347127	1					
ANR	347400	Identifier	nfchans		347127	1					
ANR	347401	ConditionalExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0		347127	1					
ANR	347402	Condition	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0					
ANR	347403	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0		&			
ANR	347404	MemberAccess	ctx -> bsi . flags		347127	0					
ANR	347405	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347406	Identifier	ctx		347127	0					
ANR	347407	Identifier	bsi		347127	1					
ANR	347408	Identifier	flags		347127	1					
ANR	347409	Identifier	AC3_BSI_LFEON		347127	1					
ANR	347410	PrimaryExpression	1		347127	1					
ANR	347411	PrimaryExpression	0		347127	2					
ANR	347412	ExpressionStatement	avctx -> channels = ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )	99:8:1907:1986	347127	1	True				
ANR	347413	AssignmentExpression	avctx -> channels = ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	0		=			
ANR	347414	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347415	Identifier	avctx		347127	0					
ANR	347416	Identifier	channels		347127	1					
ANR	347417	AdditiveExpression	ctx -> bsi . nfchans + ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0 )		347127	1		+			
ANR	347418	MemberAccess	ctx -> bsi . nfchans		347127	0					
ANR	347419	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347420	Identifier	ctx		347127	0					
ANR	347421	Identifier	bsi		347127	1					
ANR	347422	Identifier	nfchans		347127	1					
ANR	347423	ConditionalExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? 1 : 0		347127	1					
ANR	347424	Condition	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0					
ANR	347425	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0		&			
ANR	347426	MemberAccess	ctx -> bsi . flags		347127	0					
ANR	347427	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347428	Identifier	ctx		347127	0					
ANR	347429	Identifier	bsi		347127	1					
ANR	347430	Identifier	flags		347127	1					
ANR	347431	Identifier	AC3_BSI_LFEON		347127	1					
ANR	347432	PrimaryExpression	1		347127	1					
ANR	347433	PrimaryExpression	0		347127	2					
ANR	347434	ExpressionStatement	ctx -> output = AC3_OUTPUT_UNMODIFIED	101:8:1997:2032	347127	2	True				
ANR	347435	AssignmentExpression	ctx -> output = AC3_OUTPUT_UNMODIFIED		347127	0		=			
ANR	347436	PtrMemberAccess	ctx -> output		347127	0					
ANR	347437	Identifier	ctx		347127	0					
ANR	347438	Identifier	output		347127	1					
ANR	347439	Identifier	AC3_OUTPUT_UNMODIFIED		347127	1					
ANR	347440	ElseStatement	else		347127	0					
ANR	347441	IfStatement	if ( avctx -> channels == 1 )		347127	0					
ANR	347442	Condition	avctx -> channels == 1	105:13:2055:2074	347127	0	True				
ANR	347443	EqualityExpression	avctx -> channels == 1		347127	0		==			
ANR	347444	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347445	Identifier	avctx		347127	0					
ANR	347446	Identifier	channels		347127	1					
ANR	347447	PrimaryExpression	1		347127	1					
ANR	347448	CompoundStatement		103:35:1966:1966	347127	1					
ANR	347449	ExpressionStatement	ctx -> output = AC3_OUTPUT_MONO	107:8:2088:2117	347127	0	True				
ANR	347450	AssignmentExpression	ctx -> output = AC3_OUTPUT_MONO		347127	0		=			
ANR	347451	PtrMemberAccess	ctx -> output		347127	0					
ANR	347452	Identifier	ctx		347127	0					
ANR	347453	Identifier	output		347127	1					
ANR	347454	Identifier	AC3_OUTPUT_MONO		347127	1					
ANR	347455	ElseStatement	else		347127	0					
ANR	347456	IfStatement	if ( avctx -> channels == 2 )		347127	0					
ANR	347457	Condition	avctx -> channels == 2	109:15:2135:2154	347127	0	True				
ANR	347458	EqualityExpression	avctx -> channels == 2		347127	0		==			
ANR	347459	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347460	Identifier	avctx		347127	0					
ANR	347461	Identifier	channels		347127	1					
ANR	347462	PrimaryExpression	2		347127	1					
ANR	347463	CompoundStatement		107:37:2046:2046	347127	1					
ANR	347464	IfStatement	if ( ctx -> bsi . dsurmod == 0x02 )		347127	0					
ANR	347465	Condition	ctx -> bsi . dsurmod == 0x02	111:12:2172:2195	347127	0	True				
ANR	347466	EqualityExpression	ctx -> bsi . dsurmod == 0x02		347127	0		==			
ANR	347467	MemberAccess	ctx -> bsi . dsurmod		347127	0					
ANR	347468	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347469	Identifier	ctx		347127	0					
ANR	347470	Identifier	bsi		347127	1					
ANR	347471	Identifier	dsurmod		347127	1					
ANR	347472	PrimaryExpression	0x02		347127	1					
ANR	347473	ExpressionStatement	ctx -> output = AC3_OUTPUT_DOLBY	113:12:2211:2241	347127	1	True				
ANR	347474	AssignmentExpression	ctx -> output = AC3_OUTPUT_DOLBY		347127	0		=			
ANR	347475	PtrMemberAccess	ctx -> output		347127	0					
ANR	347476	Identifier	ctx		347127	0					
ANR	347477	Identifier	output		347127	1					
ANR	347478	Identifier	AC3_OUTPUT_DOLBY		347127	1					
ANR	347479	ElseStatement	else		347127	0					
ANR	347480	ExpressionStatement	ctx -> output = AC3_OUTPUT_STEREO	117:12:2270:2301	347127	0	True				
ANR	347481	AssignmentExpression	ctx -> output = AC3_OUTPUT_STEREO		347127	0		=			
ANR	347482	PtrMemberAccess	ctx -> output		347127	0					
ANR	347483	Identifier	ctx		347127	0					
ANR	347484	Identifier	output		347127	1					
ANR	347485	Identifier	AC3_OUTPUT_STEREO		347127	1					
ANR	347486	ExpressionStatement	avctx -> bit_rate = ctx -> sync_info . bit_rate	125:4:2319:2360	347127	13	True				
ANR	347487	AssignmentExpression	avctx -> bit_rate = ctx -> sync_info . bit_rate		347127	0		=			
ANR	347488	PtrMemberAccess	avctx -> bit_rate		347127	0					
ANR	347489	Identifier	avctx		347127	0					
ANR	347490	Identifier	bit_rate		347127	1					
ANR	347491	MemberAccess	ctx -> sync_info . bit_rate		347127	1					
ANR	347492	PtrMemberAccess	ctx -> sync_info		347127	0					
ANR	347493	Identifier	ctx		347127	0					
ANR	347494	Identifier	sync_info		347127	1					
ANR	347495	Identifier	bit_rate		347127	1					
ANR	347496	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""channels = %d \\t bit rate = %d \\t sampling rate = %d \\n"" , avctx -> channels , avctx -> sample_rate , avctx -> bit_rate )"	127:4:2367:2506	347127	14	True				
ANR	347497	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""channels = %d \\t bit rate = %d \\t sampling rate = %d \\n"" , avctx -> channels , avctx -> sample_rate , avctx -> bit_rate )"		347127	0					
ANR	347498	Callee	av_log		347127	0					
ANR	347499	Identifier	av_log		347127	0					
ANR	347500	ArgumentList	avctx		347127	1					
ANR	347501	Argument	avctx		347127	0					
ANR	347502	Identifier	avctx		347127	0					
ANR	347503	Argument	AV_LOG_INFO		347127	1					
ANR	347504	Identifier	AV_LOG_INFO		347127	0					
ANR	347505	Argument	"""channels = %d \\t bit rate = %d \\t sampling rate = %d \\n"""		347127	2					
ANR	347506	PrimaryExpression	"""channels = %d \\t bit rate = %d \\t sampling rate = %d \\n"""		347127	0					
ANR	347507	Argument	avctx -> channels		347127	3					
ANR	347508	PtrMemberAccess	avctx -> channels		347127	0					
ANR	347509	Identifier	avctx		347127	0					
ANR	347510	Identifier	channels		347127	1					
ANR	347511	Argument	avctx -> sample_rate		347127	4					
ANR	347512	PtrMemberAccess	avctx -> sample_rate		347127	0					
ANR	347513	Identifier	avctx		347127	0					
ANR	347514	Identifier	sample_rate		347127	1					
ANR	347515	Argument	avctx -> bit_rate		347127	5					
ANR	347516	PtrMemberAccess	avctx -> bit_rate		347127	0					
ANR	347517	Identifier	avctx		347127	0					
ANR	347518	Identifier	bit_rate		347127	1					
ANR	347519	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		347127	15					
ANR	347520	ForInit	i = 0 ;	133:9:2551:2556	347127	0	True				
ANR	347521	AssignmentExpression	i = 0		347127	0		=			
ANR	347522	Identifier	i		347127	0					
ANR	347523	PrimaryExpression	0		347127	1					
ANR	347524	Condition	i < 6	133:16:2558:2562	347127	1	True				
ANR	347525	RelationalExpression	i < 6		347127	0		<			
ANR	347526	Identifier	i		347127	0					
ANR	347527	PrimaryExpression	6		347127	1					
ANR	347528	PostIncDecOperationExpression	i ++	133:23:2565:2567	347127	2	True				
ANR	347529	Identifier	i		347127	0					
ANR	347530	IncDec	++		347127	1					
ANR	347531	CompoundStatement		131:28:2459:2459	347127	3					
ANR	347532	IfStatement	"if ( ac3_parse_audio_block ( ctx , i ) )"		347127	0					
ANR	347533	Condition	"ac3_parse_audio_block ( ctx , i )"	135:12:2585:2613	347127	0	True				
ANR	347534	CallExpression	"ac3_parse_audio_block ( ctx , i )"		347127	0					
ANR	347535	Callee	ac3_parse_audio_block		347127	0					
ANR	347536	Identifier	ac3_parse_audio_block		347127	0					
ANR	347537	ArgumentList	ctx		347127	1					
ANR	347538	Argument	ctx		347127	0					
ANR	347539	Identifier	ctx		347127	0					
ANR	347540	Argument	i		347127	1					
ANR	347541	Identifier	i		347127	0					
ANR	347542	CompoundStatement		133:43:2505:2505	347127	1					
ANR	347543	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error parsing the audio block\\n"" )"	137:12:2631:2693	347127	0	True				
ANR	347544	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error parsing the audio block\\n"" )"		347127	0					
ANR	347545	Callee	av_log		347127	0					
ANR	347546	Identifier	av_log		347127	0					
ANR	347547	ArgumentList	avctx		347127	1					
ANR	347548	Argument	avctx		347127	0					
ANR	347549	Identifier	avctx		347127	0					
ANR	347550	Argument	AV_LOG_ERROR		347127	1					
ANR	347551	Identifier	AV_LOG_ERROR		347127	0					
ANR	347552	Argument	"""error parsing the audio block\\n"""		347127	2					
ANR	347553	PrimaryExpression	"""error parsing the audio block\\n"""		347127	0					
ANR	347554	ExpressionStatement	* data_size = 0	139:12:2708:2722	347127	1	True				
ANR	347555	AssignmentExpression	* data_size = 0		347127	0		=			
ANR	347556	UnaryOperationExpression	* data_size		347127	0					
ANR	347557	UnaryOperator	*		347127	0					
ANR	347558	Identifier	data_size		347127	1					
ANR	347559	PrimaryExpression	0		347127	1					
ANR	347560	ReturnStatement	return - 1 ;	141:12:2737:2746	347127	2	True				
ANR	347561	UnaryOperationExpression	- 1		347127	0					
ANR	347562	UnaryOperator	-		347127	0					
ANR	347563	PrimaryExpression	1		347127	1					
ANR	347564	ExpressionStatement	samples = ctx -> samples	145:8:2768:2790	347127	1	True				
ANR	347565	AssignmentExpression	samples = ctx -> samples		347127	0		=			
ANR	347566	Identifier	samples		347127	0					
ANR	347567	PtrMemberAccess	ctx -> samples		347127	1					
ANR	347568	Identifier	ctx		347127	0					
ANR	347569	Identifier	samples		347127	1					
ANR	347570	IfStatement	if ( ctx -> bsi . flags & AC3_BSI_LFEON )		347127	2					
ANR	347571	Condition	ctx -> bsi . flags & AC3_BSI_LFEON	147:12:2805:2834	347127	0	True				
ANR	347572	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		347127	0		&			
ANR	347573	MemberAccess	ctx -> bsi . flags		347127	0					
ANR	347574	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347575	Identifier	ctx		347127	0					
ANR	347576	Identifier	bsi		347127	1					
ANR	347577	Identifier	flags		347127	1					
ANR	347578	Identifier	AC3_BSI_LFEON		347127	1					
ANR	347579	CompoundStatement		145:44:2726:2726	347127	1					
ANR	347580	ExpressionStatement	"ff_imdct_calc ( & ctx -> imdct_ctx_512 , ctx -> samples + 1536 , samples , tmp )"	149:12:2852:2921	347127	0	True				
ANR	347581	CallExpression	"ff_imdct_calc ( & ctx -> imdct_ctx_512 , ctx -> samples + 1536 , samples , tmp )"		347127	0					
ANR	347582	Callee	ff_imdct_calc		347127	0					
ANR	347583	Identifier	ff_imdct_calc		347127	0					
ANR	347584	ArgumentList	& ctx -> imdct_ctx_512		347127	1					
ANR	347585	Argument	& ctx -> imdct_ctx_512		347127	0					
ANR	347586	UnaryOperationExpression	& ctx -> imdct_ctx_512		347127	0					
ANR	347587	UnaryOperator	&		347127	0					
ANR	347588	PtrMemberAccess	ctx -> imdct_ctx_512		347127	1					
ANR	347589	Identifier	ctx		347127	0					
ANR	347590	Identifier	imdct_ctx_512		347127	1					
ANR	347591	Argument	ctx -> samples + 1536		347127	1					
ANR	347592	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347593	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347594	Identifier	ctx		347127	0					
ANR	347595	Identifier	samples		347127	1					
ANR	347596	PrimaryExpression	1536		347127	1					
ANR	347597	Argument	samples		347127	2					
ANR	347598	Identifier	samples		347127	0					
ANR	347599	Argument	tmp		347127	3					
ANR	347600	Identifier	tmp		347127	0					
ANR	347601	ForStatement	for ( l = 0 ; l < 256 ; l ++ )		347127	1					
ANR	347602	ForInit	l = 0 ;	151:17:2941:2946	347127	0	True				
ANR	347603	AssignmentExpression	l = 0		347127	0		=			
ANR	347604	Identifier	l		347127	0					
ANR	347605	PrimaryExpression	0		347127	1					
ANR	347606	Condition	l < 256	151:24:2948:2954	347127	1	True				
ANR	347607	RelationalExpression	l < 256		347127	0		<			
ANR	347608	Identifier	l		347127	0					
ANR	347609	PrimaryExpression	256		347127	1					
ANR	347610	PostIncDecOperationExpression	l ++	151:33:2957:2959	347127	2	True				
ANR	347611	Identifier	l		347127	0					
ANR	347612	IncDec	++		347127	1					
ANR	347613	ExpressionStatement	samples [ l ] = ( ctx -> samples + 1536 ) [ l ]	153:16:2979:3016	347127	3	True				
ANR	347614	AssignmentExpression	samples [ l ] = ( ctx -> samples + 1536 ) [ l ]		347127	0		=			
ANR	347615	ArrayIndexing	samples [ l ]		347127	0					
ANR	347616	Identifier	samples		347127	0					
ANR	347617	Identifier	l		347127	1					
ANR	347618	ArrayIndexing	( ctx -> samples + 1536 ) [ l ]		347127	1					
ANR	347619	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347620	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347621	Identifier	ctx		347127	0					
ANR	347622	Identifier	samples		347127	1					
ANR	347623	PrimaryExpression	1536		347127	1					
ANR	347624	Identifier	l		347127	1					
ANR	347625	ExpressionStatement	"float_to_int ( samples , out_samples , 256 )"	155:12:3031:3070	347127	2	True				
ANR	347626	CallExpression	"float_to_int ( samples , out_samples , 256 )"		347127	0					
ANR	347627	Callee	float_to_int		347127	0					
ANR	347628	Identifier	float_to_int		347127	0					
ANR	347629	ArgumentList	samples		347127	1					
ANR	347630	Argument	samples		347127	0					
ANR	347631	Identifier	samples		347127	0					
ANR	347632	Argument	out_samples		347127	1					
ANR	347633	Identifier	out_samples		347127	0					
ANR	347634	Argument	256		347127	2					
ANR	347635	PrimaryExpression	256		347127	0					
ANR	347636	ExpressionStatement	samples += 256	157:12:3085:3099	347127	3	True				
ANR	347637	AssignmentExpression	samples += 256		347127	0		+=			
ANR	347638	Identifier	samples		347127	0					
ANR	347639	PrimaryExpression	256		347127	1					
ANR	347640	ExpressionStatement	out_samples += 256	159:12:3114:3132	347127	4	True				
ANR	347641	AssignmentExpression	out_samples += 256		347127	0		+=			
ANR	347642	Identifier	out_samples		347127	0					
ANR	347643	PrimaryExpression	256		347127	1					
ANR	347644	ForStatement	for ( j = 0 ; j < ctx -> bsi . nfchans ; j ++ )		347127	3					
ANR	347645	ForInit	j = 0 ;	163:13:3159:3164	347127	0	True				
ANR	347646	AssignmentExpression	j = 0		347127	0		=			
ANR	347647	Identifier	j		347127	0					
ANR	347648	PrimaryExpression	0		347127	1					
ANR	347649	Condition	j < ctx -> bsi . nfchans	163:20:3166:3185	347127	1	True				
ANR	347650	RelationalExpression	j < ctx -> bsi . nfchans		347127	0		<			
ANR	347651	Identifier	j		347127	0					
ANR	347652	MemberAccess	ctx -> bsi . nfchans		347127	1					
ANR	347653	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347654	Identifier	ctx		347127	0					
ANR	347655	Identifier	bsi		347127	1					
ANR	347656	Identifier	nfchans		347127	1					
ANR	347657	PostIncDecOperationExpression	j ++	163:42:3188:3190	347127	2	True				
ANR	347658	Identifier	j		347127	0					
ANR	347659	IncDec	++		347127	1					
ANR	347660	CompoundStatement		161:47:3082:3082	347127	3					
ANR	347661	IfStatement	if ( ctx -> audio_block . blksw & ( 1 << j ) )		347127	0					
ANR	347662	Condition	ctx -> audio_block . blksw & ( 1 << j )	165:16:3212:3244	347127	0	True				
ANR	347663	BitAndExpression	ctx -> audio_block . blksw & ( 1 << j )		347127	0		&			
ANR	347664	MemberAccess	ctx -> audio_block . blksw		347127	0					
ANR	347665	PtrMemberAccess	ctx -> audio_block		347127	0					
ANR	347666	Identifier	ctx		347127	0					
ANR	347667	Identifier	audio_block		347127	1					
ANR	347668	Identifier	blksw		347127	1					
ANR	347669	ShiftExpression	1 << j		347127	1		<<			
ANR	347670	PrimaryExpression	1		347127	0					
ANR	347671	Identifier	j		347127	1					
ANR	347672	CompoundStatement		163:51:3136:3136	347127	1					
ANR	347673	ForStatement	for ( k = 0 ; k < 128 ; k ++ )		347127	0					
ANR	347674	ForInit	k = 0 ;	167:21:3271:3276	347127	0	True				
ANR	347675	AssignmentExpression	k = 0		347127	0		=			
ANR	347676	Identifier	k		347127	0					
ANR	347677	PrimaryExpression	0		347127	1					
ANR	347678	Condition	k < 128	167:28:3278:3284	347127	1	True				
ANR	347679	RelationalExpression	k < 128		347127	0		<			
ANR	347680	Identifier	k		347127	0					
ANR	347681	PrimaryExpression	128		347127	1					
ANR	347682	PostIncDecOperationExpression	k ++	167:37:3287:3289	347127	2	True				
ANR	347683	Identifier	k		347127	0					
ANR	347684	IncDec	++		347127	1					
ANR	347685	CompoundStatement		165:42:3181:3181	347127	3					
ANR	347686	ExpressionStatement	tmp0 [ k ] = samples [ 2 * k ]	169:20:3315:3339	347127	0	True				
ANR	347687	AssignmentExpression	tmp0 [ k ] = samples [ 2 * k ]		347127	0		=			
ANR	347688	ArrayIndexing	tmp0 [ k ]		347127	0					
ANR	347689	Identifier	tmp0		347127	0					
ANR	347690	Identifier	k		347127	1					
ANR	347691	ArrayIndexing	samples [ 2 * k ]		347127	1					
ANR	347692	Identifier	samples		347127	0					
ANR	347693	MultiplicativeExpression	2 * k		347127	1		*			
ANR	347694	PrimaryExpression	2		347127	0					
ANR	347695	Identifier	k		347127	1					
ANR	347696	ExpressionStatement	tmp1 [ k ] = samples [ 2 * k + 1 ]	171:20:3362:3390	347127	1	True				
ANR	347697	AssignmentExpression	tmp1 [ k ] = samples [ 2 * k + 1 ]		347127	0		=			
ANR	347698	ArrayIndexing	tmp1 [ k ]		347127	0					
ANR	347699	Identifier	tmp1		347127	0					
ANR	347700	Identifier	k		347127	1					
ANR	347701	ArrayIndexing	samples [ 2 * k + 1 ]		347127	1					
ANR	347702	Identifier	samples		347127	0					
ANR	347703	AdditiveExpression	2 * k + 1		347127	1		+			
ANR	347704	MultiplicativeExpression	2 * k		347127	0		*			
ANR	347705	PrimaryExpression	2		347127	0					
ANR	347706	Identifier	k		347127	1					
ANR	347707	PrimaryExpression	1		347127	1					
ANR	347708	ExpressionStatement	"ff_imdct_calc ( & ctx -> imdct_ctx_256 , ctx -> samples + 1536 , tmp0 , tmp )"	175:16:3428:3494	347127	1	True				
ANR	347709	CallExpression	"ff_imdct_calc ( & ctx -> imdct_ctx_256 , ctx -> samples + 1536 , tmp0 , tmp )"		347127	0					
ANR	347710	Callee	ff_imdct_calc		347127	0					
ANR	347711	Identifier	ff_imdct_calc		347127	0					
ANR	347712	ArgumentList	& ctx -> imdct_ctx_256		347127	1					
ANR	347713	Argument	& ctx -> imdct_ctx_256		347127	0					
ANR	347714	UnaryOperationExpression	& ctx -> imdct_ctx_256		347127	0					
ANR	347715	UnaryOperator	&		347127	0					
ANR	347716	PtrMemberAccess	ctx -> imdct_ctx_256		347127	1					
ANR	347717	Identifier	ctx		347127	0					
ANR	347718	Identifier	imdct_ctx_256		347127	1					
ANR	347719	Argument	ctx -> samples + 1536		347127	1					
ANR	347720	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347721	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347722	Identifier	ctx		347127	0					
ANR	347723	Identifier	samples		347127	1					
ANR	347724	PrimaryExpression	1536		347127	1					
ANR	347725	Argument	tmp0		347127	2					
ANR	347726	Identifier	tmp0		347127	0					
ANR	347727	Argument	tmp		347127	3					
ANR	347728	Identifier	tmp		347127	0					
ANR	347729	ForStatement	for ( l = 0 ; l < 256 ; l ++ )		347127	2					
ANR	347730	ForInit	l = 0 ;	177:21:3518:3523	347127	0	True				
ANR	347731	AssignmentExpression	l = 0		347127	0		=			
ANR	347732	Identifier	l		347127	0					
ANR	347733	PrimaryExpression	0		347127	1					
ANR	347734	Condition	l < 256	177:28:3525:3531	347127	1	True				
ANR	347735	RelationalExpression	l < 256		347127	0		<			
ANR	347736	Identifier	l		347127	0					
ANR	347737	PrimaryExpression	256		347127	1					
ANR	347738	PostIncDecOperationExpression	l ++	177:37:3534:3536	347127	2	True				
ANR	347739	Identifier	l		347127	0					
ANR	347740	IncDec	++		347127	1					
ANR	347741	ExpressionStatement	samples [ l ] = ( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]	179:20:3560:3654	347127	3	True				
ANR	347742	AssignmentExpression	samples [ l ] = ( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	0		=			
ANR	347743	ArrayIndexing	samples [ l ]		347127	0					
ANR	347744	Identifier	samples		347127	0					
ANR	347745	Identifier	l		347127	1					
ANR	347746	AdditiveExpression	( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	1		+			
ANR	347747	MultiplicativeExpression	( ctx -> samples + 1536 ) [ l ] * window [ l ]		347127	0		*			
ANR	347748	ArrayIndexing	( ctx -> samples + 1536 ) [ l ]		347127	0					
ANR	347749	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347750	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347751	Identifier	ctx		347127	0					
ANR	347752	Identifier	samples		347127	1					
ANR	347753	PrimaryExpression	1536		347127	1					
ANR	347754	Identifier	l		347127	1					
ANR	347755	ArrayIndexing	window [ l ]		347127	1					
ANR	347756	Identifier	window		347127	0					
ANR	347757	Identifier	l		347127	1					
ANR	347758	MultiplicativeExpression	( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	1		*			
ANR	347759	ArrayIndexing	( ctx -> samples + 2048 ) [ l ]		347127	0					
ANR	347760	AdditiveExpression	ctx -> samples + 2048		347127	0		+			
ANR	347761	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347762	Identifier	ctx		347127	0					
ANR	347763	Identifier	samples		347127	1					
ANR	347764	PrimaryExpression	2048		347127	1					
ANR	347765	Identifier	l		347127	1					
ANR	347766	ArrayIndexing	window [ 255 - l ]		347127	1					
ANR	347767	Identifier	window		347127	0					
ANR	347768	AdditiveExpression	255 - l		347127	1		-			
ANR	347769	PrimaryExpression	255		347127	0					
ANR	347770	Identifier	l		347127	1					
ANR	347771	ExpressionStatement	"ff_imdct_calc ( & ctx -> imdct_ctx_256 , ctx -> samples + 2048 , tmp1 , tmp )"	181:16:3673:3739	347127	3	True				
ANR	347772	CallExpression	"ff_imdct_calc ( & ctx -> imdct_ctx_256 , ctx -> samples + 2048 , tmp1 , tmp )"		347127	0					
ANR	347773	Callee	ff_imdct_calc		347127	0					
ANR	347774	Identifier	ff_imdct_calc		347127	0					
ANR	347775	ArgumentList	& ctx -> imdct_ctx_256		347127	1					
ANR	347776	Argument	& ctx -> imdct_ctx_256		347127	0					
ANR	347777	UnaryOperationExpression	& ctx -> imdct_ctx_256		347127	0					
ANR	347778	UnaryOperator	&		347127	0					
ANR	347779	PtrMemberAccess	ctx -> imdct_ctx_256		347127	1					
ANR	347780	Identifier	ctx		347127	0					
ANR	347781	Identifier	imdct_ctx_256		347127	1					
ANR	347782	Argument	ctx -> samples + 2048		347127	1					
ANR	347783	AdditiveExpression	ctx -> samples + 2048		347127	0		+			
ANR	347784	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347785	Identifier	ctx		347127	0					
ANR	347786	Identifier	samples		347127	1					
ANR	347787	PrimaryExpression	2048		347127	1					
ANR	347788	Argument	tmp1		347127	2					
ANR	347789	Identifier	tmp1		347127	0					
ANR	347790	Argument	tmp		347127	3					
ANR	347791	Identifier	tmp		347127	0					
ANR	347792	ExpressionStatement	"float_to_int ( samples , out_samples , 256 )"	183:16:3758:3797	347127	4	True				
ANR	347793	CallExpression	"float_to_int ( samples , out_samples , 256 )"		347127	0					
ANR	347794	Callee	float_to_int		347127	0					
ANR	347795	Identifier	float_to_int		347127	0					
ANR	347796	ArgumentList	samples		347127	1					
ANR	347797	Argument	samples		347127	0					
ANR	347798	Identifier	samples		347127	0					
ANR	347799	Argument	out_samples		347127	1					
ANR	347800	Identifier	out_samples		347127	0					
ANR	347801	Argument	256		347127	2					
ANR	347802	PrimaryExpression	256		347127	0					
ANR	347803	ExpressionStatement	samples += 256	185:16:3816:3830	347127	5	True				
ANR	347804	AssignmentExpression	samples += 256		347127	0		+=			
ANR	347805	Identifier	samples		347127	0					
ANR	347806	PrimaryExpression	256		347127	1					
ANR	347807	ExpressionStatement	out_samples += 256	187:16:3849:3867	347127	6	True				
ANR	347808	AssignmentExpression	out_samples += 256		347127	0		+=			
ANR	347809	Identifier	out_samples		347127	0					
ANR	347810	PrimaryExpression	256		347127	1					
ANR	347811	ElseStatement	else		347127	0					
ANR	347812	CompoundStatement		189:17:3791:3791	347127	0					
ANR	347813	ExpressionStatement	"ff_imdct_calc ( & ctx -> imdct_ctx_512 , ctx -> samples + 1536 , samples , tmp )"	193:16:3921:3990	347127	0	True				
ANR	347814	CallExpression	"ff_imdct_calc ( & ctx -> imdct_ctx_512 , ctx -> samples + 1536 , samples , tmp )"		347127	0					
ANR	347815	Callee	ff_imdct_calc		347127	0					
ANR	347816	Identifier	ff_imdct_calc		347127	0					
ANR	347817	ArgumentList	& ctx -> imdct_ctx_512		347127	1					
ANR	347818	Argument	& ctx -> imdct_ctx_512		347127	0					
ANR	347819	UnaryOperationExpression	& ctx -> imdct_ctx_512		347127	0					
ANR	347820	UnaryOperator	&		347127	0					
ANR	347821	PtrMemberAccess	ctx -> imdct_ctx_512		347127	1					
ANR	347822	Identifier	ctx		347127	0					
ANR	347823	Identifier	imdct_ctx_512		347127	1					
ANR	347824	Argument	ctx -> samples + 1536		347127	1					
ANR	347825	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347826	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347827	Identifier	ctx		347127	0					
ANR	347828	Identifier	samples		347127	1					
ANR	347829	PrimaryExpression	1536		347127	1					
ANR	347830	Argument	samples		347127	2					
ANR	347831	Identifier	samples		347127	0					
ANR	347832	Argument	tmp		347127	3					
ANR	347833	Identifier	tmp		347127	0					
ANR	347834	ForStatement	for ( l = 0 ; l < 256 ; l ++ )		347127	1					
ANR	347835	ForInit	l = 0 ;	195:21:4014:4019	347127	0	True				
ANR	347836	AssignmentExpression	l = 0		347127	0		=			
ANR	347837	Identifier	l		347127	0					
ANR	347838	PrimaryExpression	0		347127	1					
ANR	347839	Condition	l < 256	195:28:4021:4027	347127	1	True				
ANR	347840	RelationalExpression	l < 256		347127	0		<			
ANR	347841	Identifier	l		347127	0					
ANR	347842	PrimaryExpression	256		347127	1					
ANR	347843	PostIncDecOperationExpression	l ++	195:37:4030:4032	347127	2	True				
ANR	347844	Identifier	l		347127	0					
ANR	347845	IncDec	++		347127	1					
ANR	347846	ExpressionStatement	samples [ l ] = ( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]	197:20:4056:4150	347127	3	True				
ANR	347847	AssignmentExpression	samples [ l ] = ( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	0		=			
ANR	347848	ArrayIndexing	samples [ l ]		347127	0					
ANR	347849	Identifier	samples		347127	0					
ANR	347850	Identifier	l		347127	1					
ANR	347851	AdditiveExpression	( ctx -> samples + 1536 ) [ l ] * window [ l ] + ( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	1		+			
ANR	347852	MultiplicativeExpression	( ctx -> samples + 1536 ) [ l ] * window [ l ]		347127	0		*			
ANR	347853	ArrayIndexing	( ctx -> samples + 1536 ) [ l ]		347127	0					
ANR	347854	AdditiveExpression	ctx -> samples + 1536		347127	0		+			
ANR	347855	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347856	Identifier	ctx		347127	0					
ANR	347857	Identifier	samples		347127	1					
ANR	347858	PrimaryExpression	1536		347127	1					
ANR	347859	Identifier	l		347127	1					
ANR	347860	ArrayIndexing	window [ l ]		347127	1					
ANR	347861	Identifier	window		347127	0					
ANR	347862	Identifier	l		347127	1					
ANR	347863	MultiplicativeExpression	( ctx -> samples + 2048 ) [ l ] * window [ 255 - l ]		347127	1		*			
ANR	347864	ArrayIndexing	( ctx -> samples + 2048 ) [ l ]		347127	0					
ANR	347865	AdditiveExpression	ctx -> samples + 2048		347127	0		+			
ANR	347866	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347867	Identifier	ctx		347127	0					
ANR	347868	Identifier	samples		347127	1					
ANR	347869	PrimaryExpression	2048		347127	1					
ANR	347870	Identifier	l		347127	1					
ANR	347871	ArrayIndexing	window [ 255 - l ]		347127	1					
ANR	347872	Identifier	window		347127	0					
ANR	347873	AdditiveExpression	255 - l		347127	1		-			
ANR	347874	PrimaryExpression	255		347127	0					
ANR	347875	Identifier	l		347127	1					
ANR	347876	ExpressionStatement	"float_to_int ( samples , out_samples , 256 )"	199:16:4169:4208	347127	2	True				
ANR	347877	CallExpression	"float_to_int ( samples , out_samples , 256 )"		347127	0					
ANR	347878	Callee	float_to_int		347127	0					
ANR	347879	Identifier	float_to_int		347127	0					
ANR	347880	ArgumentList	samples		347127	1					
ANR	347881	Argument	samples		347127	0					
ANR	347882	Identifier	samples		347127	0					
ANR	347883	Argument	out_samples		347127	1					
ANR	347884	Identifier	out_samples		347127	0					
ANR	347885	Argument	256		347127	2					
ANR	347886	PrimaryExpression	256		347127	0					
ANR	347887	ExpressionStatement	"memcpy ( ctx -> samples + 2048 , ctx -> samples + 1792 , 256 * sizeof ( float ) )"	201:16:4227:4297	347127	3	True				
ANR	347888	CallExpression	"memcpy ( ctx -> samples + 2048 , ctx -> samples + 1792 , 256 * sizeof ( float ) )"		347127	0					
ANR	347889	Callee	memcpy		347127	0					
ANR	347890	Identifier	memcpy		347127	0					
ANR	347891	ArgumentList	ctx -> samples + 2048		347127	1					
ANR	347892	Argument	ctx -> samples + 2048		347127	0					
ANR	347893	AdditiveExpression	ctx -> samples + 2048		347127	0		+			
ANR	347894	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347895	Identifier	ctx		347127	0					
ANR	347896	Identifier	samples		347127	1					
ANR	347897	PrimaryExpression	2048		347127	1					
ANR	347898	Argument	ctx -> samples + 1792		347127	1					
ANR	347899	AdditiveExpression	ctx -> samples + 1792		347127	0		+			
ANR	347900	PtrMemberAccess	ctx -> samples		347127	0					
ANR	347901	Identifier	ctx		347127	0					
ANR	347902	Identifier	samples		347127	1					
ANR	347903	PrimaryExpression	1792		347127	1					
ANR	347904	Argument	256 * sizeof ( float )		347127	2					
ANR	347905	MultiplicativeExpression	256 * sizeof ( float )		347127	0		*			
ANR	347906	PrimaryExpression	256		347127	0					
ANR	347907	SizeofExpression	sizeof ( float )		347127	1					
ANR	347908	Sizeof	sizeof		347127	0					
ANR	347909	SizeofOperand	float		347127	1					
ANR	347910	ExpressionStatement	samples += 256	203:16:4316:4330	347127	4	True				
ANR	347911	AssignmentExpression	samples += 256		347127	0		+=			
ANR	347912	Identifier	samples		347127	0					
ANR	347913	PrimaryExpression	256		347127	1					
ANR	347914	ExpressionStatement	out_samples += 256	205:16:4349:4367	347127	5	True				
ANR	347915	AssignmentExpression	out_samples += 256		347127	0		+=			
ANR	347916	Identifier	out_samples		347127	0					
ANR	347917	PrimaryExpression	256		347127	1					
ANR	347918	ExpressionStatement	* data_size = 6 * ctx -> bsi . nfchans * 256 * sizeof ( int16_t )	213:4:4407:4465	347127	16	True				
ANR	347919	AssignmentExpression	* data_size = 6 * ctx -> bsi . nfchans * 256 * sizeof ( int16_t )		347127	0		=			
ANR	347920	UnaryOperationExpression	* data_size		347127	0					
ANR	347921	UnaryOperator	*		347127	0					
ANR	347922	Identifier	data_size		347127	1					
ANR	347923	MultiplicativeExpression	6 * ctx -> bsi . nfchans * 256 * sizeof ( int16_t )		347127	1		*			
ANR	347924	PrimaryExpression	6		347127	0					
ANR	347925	MultiplicativeExpression	ctx -> bsi . nfchans * 256 * sizeof ( int16_t )		347127	1		*			
ANR	347926	MemberAccess	ctx -> bsi . nfchans		347127	0					
ANR	347927	PtrMemberAccess	ctx -> bsi		347127	0					
ANR	347928	Identifier	ctx		347127	0					
ANR	347929	Identifier	bsi		347127	1					
ANR	347930	Identifier	nfchans		347127	1					
ANR	347931	MultiplicativeExpression	256 * sizeof ( int16_t )		347127	1		*			
ANR	347932	PrimaryExpression	256		347127	0					
ANR	347933	SizeofExpression	sizeof ( int16_t )		347127	1					
ANR	347934	Sizeof	sizeof		347127	0					
ANR	347935	SizeofOperand	int16_t		347127	1					
ANR	347936	ReturnStatement	return ( buf_size - frame_start ) ;	217:4:4474:4505	347127	17	True				
ANR	347937	AdditiveExpression	buf_size - frame_start		347127	0		-			
ANR	347938	Identifier	buf_size		347127	0					
ANR	347939	Identifier	frame_start		347127	1					
ANR	347940	ReturnType	static int		347127	1					
ANR	347941	Identifier	ac3_decode_frame		347127	2					
ANR	347942	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , uint8_t * buf , int buf_size"		347127	3					
ANR	347943	Parameter	AVCodecContext * avctx	1:28:28:49	347127	0	True				
ANR	347944	ParameterType	AVCodecContext *		347127	0					
ANR	347945	Identifier	avctx		347127	1					
ANR	347946	Parameter	void * data	1:52:52:61	347127	1	True				
ANR	347947	ParameterType	void *		347127	0					
ANR	347948	Identifier	data		347127	1					
ANR	347949	Parameter	int * data_size	1:64:64:77	347127	2	True				
ANR	347950	ParameterType	int *		347127	0					
ANR	347951	Identifier	data_size		347127	1					
ANR	347952	Parameter	uint8_t * buf	1:80:80:92	347127	3	True				
ANR	347953	ParameterType	uint8_t *		347127	0					
ANR	347954	Identifier	buf		347127	1					
ANR	347955	Parameter	int buf_size	1:95:95:106	347127	4	True				
ANR	347956	ParameterType	int		347127	0					
ANR	347957	Identifier	buf_size		347127	1					
ANR	347958	CFGEntryNode	ENTRY		347127		True				
ANR	347959	CFGExitNode	EXIT		347127		True				
ANR	347960	Symbol	data		347127						
ANR	347961	Symbol	& ctx -> imdct_ctx_512		347127						
ANR	347962	Symbol	* data_size		347127						
ANR	347963	Symbol	* tmp0		347127						
ANR	347964	Symbol	frame_start		347127						
ANR	347965	Symbol	avctx -> channels		347127						
ANR	347966	Symbol	ctx -> sync_info		347127						
ANR	347967	Symbol	ctx -> bsi . nfchans		347127						
ANR	347968	Symbol	* samples		347127						
ANR	347969	Symbol	* tmp1		347127						
ANR	347970	Symbol	tmp		347127						
ANR	347971	Symbol	AC3_BSI_LFEON		347127						
ANR	347972	Symbol	data_size		347127						
ANR	347973	Symbol	AC3_OUTPUT_STEREO		347127						
ANR	347974	Symbol	buf_size		347127						
ANR	347975	Symbol	ctx		347127						
ANR	347976	Symbol	ctx -> sync_info . bit_rate		347127						
ANR	347977	Symbol	samples		347127						
ANR	347978	Symbol	* avctx		347127						
ANR	347979	Symbol	avctx -> bit_rate		347127						
ANR	347980	Symbol	AC3_OUTPUT_UNMODIFIED		347127						
ANR	347981	Symbol	ctx -> sync_info . sampling_rate		347127						
ANR	347982	Symbol	AV_LOG_INFO		347127						
ANR	347983	Symbol	& ctx -> imdct_ctx_256		347127						
ANR	347984	Symbol	ac3_parse_sync_info		347127						
ANR	347985	Symbol	& ctx -> gb		347127						
ANR	347986	Symbol	AC3_OUTPUT_MONO		347127						
ANR	347987	Symbol	tmp1		347127						
ANR	347988	Symbol	* ctx -> samples		347127						
ANR	347989	Symbol	tmp0		347127						
ANR	347990	Symbol	ac3_parse_bsi		347127						
ANR	347991	Symbol	avctx		347127						
ANR	347992	Symbol	ac3_synchronize		347127						
ANR	347993	Symbol	ctx -> output		347127						
ANR	347994	Symbol	* window		347127						
ANR	347995	Symbol	ctx -> bsi		347127						
ANR	347996	Symbol	AV_LOG_ERROR		347127						
ANR	347997	Symbol	i		347127						
ANR	347998	Symbol	j		347127						
ANR	347999	Symbol	k		347127						
ANR	348000	Symbol	out_samples		347127						
ANR	348001	Symbol	ac3_parse_audio_block		347127						
ANR	348002	Symbol	avctx -> priv_data		347127						
ANR	348003	Symbol	l		347127						
ANR	348004	Symbol	avctx -> sample_rate		347127						
ANR	348005	Symbol	* ctx		347127						
ANR	348006	Symbol	buf		347127						
ANR	348007	Symbol	* k		347127						
ANR	348008	Symbol	* l		347127						
ANR	348009	Symbol	ctx -> bsi . dsurmod		347127						
ANR	348010	Symbol	AC3_OUTPUT_DOLBY		347127						
ANR	348011	Symbol	ctx -> audio_block		347127						
ANR	348012	Symbol	ctx -> audio_block . blksw		347127						
ANR	348013	Symbol	ctx -> samples		347127						
ANR	348014	Symbol	* * ctx		347127						
ANR	348015	Symbol	window		347127						
ANR	348016	Symbol	ctx -> bsi . flags		347127						
