command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5980357	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_init_nic_01_1.c								
ANR	5980358	Function	net_init_nic	1:0:0:1778							
ANR	5980359	FunctionDef	"net_init_nic (const NetClientOptions * opts , const char * name , NetClientState * peer , Error * * errp)"		5980358	0					
ANR	5980360	CompoundStatement		5:0:134:1778	5980358	0					
ANR	5980361	IdentifierDeclStatement	int idx ;	9:4:191:198	5980358	0	True				
ANR	5980362	IdentifierDecl	idx		5980358	0					
ANR	5980363	IdentifierDeclType	int		5980358	0					
ANR	5980364	Identifier	idx		5980358	1					
ANR	5980365	IdentifierDeclStatement	NICInfo * nd ;	11:4:205:216	5980358	1	True				
ANR	5980366	IdentifierDecl	* nd		5980358	0					
ANR	5980367	IdentifierDeclType	NICInfo *		5980358	0					
ANR	5980368	Identifier	nd		5980358	1					
ANR	5980369	IdentifierDeclStatement	const NetLegacyNicOptions * nic ;	13:4:223:253	5980358	2	True				
ANR	5980370	IdentifierDecl	* nic		5980358	0					
ANR	5980371	IdentifierDeclType	const NetLegacyNicOptions *		5980358	0					
ANR	5980372	Identifier	nic		5980358	1					
ANR	5980373	ExpressionStatement	assert ( opts -> kind == NET_CLIENT_OPTIONS_KIND_NIC )	17:4:262:311	5980358	3	True				
ANR	5980374	CallExpression	assert ( opts -> kind == NET_CLIENT_OPTIONS_KIND_NIC )		5980358	0					
ANR	5980375	Callee	assert		5980358	0					
ANR	5980376	Identifier	assert		5980358	0					
ANR	5980377	ArgumentList	opts -> kind == NET_CLIENT_OPTIONS_KIND_NIC		5980358	1					
ANR	5980378	Argument	opts -> kind == NET_CLIENT_OPTIONS_KIND_NIC		5980358	0					
ANR	5980379	EqualityExpression	opts -> kind == NET_CLIENT_OPTIONS_KIND_NIC		5980358	0		==			
ANR	5980380	PtrMemberAccess	opts -> kind		5980358	0					
ANR	5980381	Identifier	opts		5980358	0					
ANR	5980382	Identifier	kind		5980358	1					
ANR	5980383	Identifier	NET_CLIENT_OPTIONS_KIND_NIC		5980358	1					
ANR	5980384	ExpressionStatement	nic = opts -> nic	19:4:318:333	5980358	4	True				
ANR	5980385	AssignmentExpression	nic = opts -> nic		5980358	0		=			
ANR	5980386	Identifier	nic		5980358	0					
ANR	5980387	PtrMemberAccess	opts -> nic		5980358	1					
ANR	5980388	Identifier	opts		5980358	0					
ANR	5980389	Identifier	nic		5980358	1					
ANR	5980390	ExpressionStatement	idx = nic_get_free_idx ( )	23:4:342:366	5980358	5	True				
ANR	5980391	AssignmentExpression	idx = nic_get_free_idx ( )		5980358	0		=			
ANR	5980392	Identifier	idx		5980358	0					
ANR	5980393	CallExpression	nic_get_free_idx ( )		5980358	1					
ANR	5980394	Callee	nic_get_free_idx		5980358	0					
ANR	5980395	Identifier	nic_get_free_idx		5980358	0					
ANR	5980396	ArgumentList			5980358	1					
ANR	5980397	IfStatement	if ( idx == - 1 || nb_nics >= MAX_NICS )		5980358	6					
ANR	5980398	Condition	idx == - 1 || nb_nics >= MAX_NICS	25:8:377:408	5980358	0	True				
ANR	5980399	OrExpression	idx == - 1 || nb_nics >= MAX_NICS		5980358	0		||			
ANR	5980400	EqualityExpression	idx == - 1		5980358	0		==			
ANR	5980401	Identifier	idx		5980358	0					
ANR	5980402	UnaryOperationExpression	- 1		5980358	1					
ANR	5980403	UnaryOperator	-		5980358	0					
ANR	5980404	PrimaryExpression	1		5980358	1					
ANR	5980405	RelationalExpression	nb_nics >= MAX_NICS		5980358	1		>=			
ANR	5980406	Identifier	nb_nics		5980358	0					
ANR	5980407	Identifier	MAX_NICS		5980358	1					
ANR	5980408	CompoundStatement		21:42:276:276	5980358	1					
ANR	5980409	ExpressionStatement	"error_report ( ""Too Many NICs"" )"	27:8:422:451	5980358	0	True				
ANR	5980410	CallExpression	"error_report ( ""Too Many NICs"" )"		5980358	0					
ANR	5980411	Callee	error_report		5980358	0					
ANR	5980412	Identifier	error_report		5980358	0					
ANR	5980413	ArgumentList	"""Too Many NICs"""		5980358	1					
ANR	5980414	Argument	"""Too Many NICs"""		5980358	0					
ANR	5980415	PrimaryExpression	"""Too Many NICs"""		5980358	0					
ANR	5980416	ReturnStatement	return - 1 ;	29:8:462:471	5980358	1	True				
ANR	5980417	UnaryOperationExpression	- 1		5980358	0					
ANR	5980418	UnaryOperator	-		5980358	0					
ANR	5980419	PrimaryExpression	1		5980358	1					
ANR	5980420	ExpressionStatement	nd = & nd_table [ idx ]	35:4:487:506	5980358	7	True				
ANR	5980421	AssignmentExpression	nd = & nd_table [ idx ]		5980358	0		=			
ANR	5980422	Identifier	nd		5980358	0					
ANR	5980423	UnaryOperationExpression	& nd_table [ idx ]		5980358	1					
ANR	5980424	UnaryOperator	&		5980358	0					
ANR	5980425	ArrayIndexing	nd_table [ idx ]		5980358	1					
ANR	5980426	Identifier	nd_table		5980358	0					
ANR	5980427	Identifier	idx		5980358	1					
ANR	5980428	ExpressionStatement	"memset ( nd , 0 , sizeof ( * nd ) )"	39:4:515:541	5980358	8	True				
ANR	5980429	CallExpression	"memset ( nd , 0 , sizeof ( * nd ) )"		5980358	0					
ANR	5980430	Callee	memset		5980358	0					
ANR	5980431	Identifier	memset		5980358	0					
ANR	5980432	ArgumentList	nd		5980358	1					
ANR	5980433	Argument	nd		5980358	0					
ANR	5980434	Identifier	nd		5980358	0					
ANR	5980435	Argument	0		5980358	1					
ANR	5980436	PrimaryExpression	0		5980358	0					
ANR	5980437	Argument	sizeof ( * nd )		5980358	2					
ANR	5980438	SizeofExpression	sizeof ( * nd )		5980358	0					
ANR	5980439	Sizeof	sizeof		5980358	0					
ANR	5980440	UnaryOperationExpression	* nd		5980358	1					
ANR	5980441	UnaryOperator	*		5980358	0					
ANR	5980442	Identifier	nd		5980358	1					
ANR	5980443	IfStatement	if ( nic -> has_netdev )		5980358	9					
ANR	5980444	Condition	nic -> has_netdev	43:8:554:568	5980358	0	True				
ANR	5980445	PtrMemberAccess	nic -> has_netdev		5980358	0					
ANR	5980446	Identifier	nic		5980358	0					
ANR	5980447	Identifier	has_netdev		5980358	1					
ANR	5980448	CompoundStatement		39:25:436:436	5980358	1					
ANR	5980449	ExpressionStatement	nd -> netdev = qemu_find_netdev ( nic -> netdev )	45:8:582:624	5980358	0	True				
ANR	5980450	AssignmentExpression	nd -> netdev = qemu_find_netdev ( nic -> netdev )		5980358	0		=			
ANR	5980451	PtrMemberAccess	nd -> netdev		5980358	0					
ANR	5980452	Identifier	nd		5980358	0					
ANR	5980453	Identifier	netdev		5980358	1					
ANR	5980454	CallExpression	qemu_find_netdev ( nic -> netdev )		5980358	1					
ANR	5980455	Callee	qemu_find_netdev		5980358	0					
ANR	5980456	Identifier	qemu_find_netdev		5980358	0					
ANR	5980457	ArgumentList	nic -> netdev		5980358	1					
ANR	5980458	Argument	nic -> netdev		5980358	0					
ANR	5980459	PtrMemberAccess	nic -> netdev		5980358	0					
ANR	5980460	Identifier	nic		5980358	0					
ANR	5980461	Identifier	netdev		5980358	1					
ANR	5980462	IfStatement	if ( ! nd -> netdev )		5980358	1					
ANR	5980463	Condition	! nd -> netdev	47:12:639:649	5980358	0	True				
ANR	5980464	UnaryOperationExpression	! nd -> netdev		5980358	0					
ANR	5980465	UnaryOperator	!		5980358	0					
ANR	5980466	PtrMemberAccess	nd -> netdev		5980358	1					
ANR	5980467	Identifier	nd		5980358	0					
ANR	5980468	Identifier	netdev		5980358	1					
ANR	5980469	CompoundStatement		43:25:517:517	5980358	1					
ANR	5980470	ExpressionStatement	"error_report ( ""netdev '%s' not found"" , nic -> netdev )"	49:12:667:717	5980358	0	True				
ANR	5980471	CallExpression	"error_report ( ""netdev '%s' not found"" , nic -> netdev )"		5980358	0					
ANR	5980472	Callee	error_report		5980358	0					
ANR	5980473	Identifier	error_report		5980358	0					
ANR	5980474	ArgumentList	"""netdev '%s' not found"""		5980358	1					
ANR	5980475	Argument	"""netdev '%s' not found"""		5980358	0					
ANR	5980476	PrimaryExpression	"""netdev '%s' not found"""		5980358	0					
ANR	5980477	Argument	nic -> netdev		5980358	1					
ANR	5980478	PtrMemberAccess	nic -> netdev		5980358	0					
ANR	5980479	Identifier	nic		5980358	0					
ANR	5980480	Identifier	netdev		5980358	1					
ANR	5980481	ReturnStatement	return - 1 ;	51:12:732:741	5980358	1	True				
ANR	5980482	UnaryOperationExpression	- 1		5980358	0					
ANR	5980483	UnaryOperator	-		5980358	0					
ANR	5980484	PrimaryExpression	1		5980358	1					
ANR	5980485	ElseStatement	else		5980358	0					
ANR	5980486	CompoundStatement		51:11:631:631	5980358	0					
ANR	5980487	ExpressionStatement	assert ( peer )	57:8:777:789	5980358	0	True				
ANR	5980488	CallExpression	assert ( peer )		5980358	0					
ANR	5980489	Callee	assert		5980358	0					
ANR	5980490	Identifier	assert		5980358	0					
ANR	5980491	ArgumentList	peer		5980358	1					
ANR	5980492	Argument	peer		5980358	0					
ANR	5980493	Identifier	peer		5980358	0					
ANR	5980494	ExpressionStatement	nd -> netdev = peer	59:8:800:817	5980358	1	True				
ANR	5980495	AssignmentExpression	nd -> netdev = peer		5980358	0		=			
ANR	5980496	PtrMemberAccess	nd -> netdev		5980358	0					
ANR	5980497	Identifier	nd		5980358	0					
ANR	5980498	Identifier	netdev		5980358	1					
ANR	5980499	Identifier	peer		5980358	1					
ANR	5980500	ExpressionStatement	nd -> name = g_strdup ( name )	63:4:831:856	5980358	10	True				
ANR	5980501	AssignmentExpression	nd -> name = g_strdup ( name )		5980358	0		=			
ANR	5980502	PtrMemberAccess	nd -> name		5980358	0					
ANR	5980503	Identifier	nd		5980358	0					
ANR	5980504	Identifier	name		5980358	1					
ANR	5980505	CallExpression	g_strdup ( name )		5980358	1					
ANR	5980506	Callee	g_strdup		5980358	0					
ANR	5980507	Identifier	g_strdup		5980358	0					
ANR	5980508	ArgumentList	name		5980358	1					
ANR	5980509	Argument	name		5980358	0					
ANR	5980510	Identifier	name		5980358	0					
ANR	5980511	IfStatement	if ( nic -> has_model )		5980358	11					
ANR	5980512	Condition	nic -> has_model	65:8:867:880	5980358	0	True				
ANR	5980513	PtrMemberAccess	nic -> has_model		5980358	0					
ANR	5980514	Identifier	nic		5980358	0					
ANR	5980515	Identifier	has_model		5980358	1					
ANR	5980516	CompoundStatement		61:24:748:748	5980358	1					
ANR	5980517	ExpressionStatement	nd -> model = g_strdup ( nic -> model )	67:8:894:926	5980358	0	True				
ANR	5980518	AssignmentExpression	nd -> model = g_strdup ( nic -> model )		5980358	0		=			
ANR	5980519	PtrMemberAccess	nd -> model		5980358	0					
ANR	5980520	Identifier	nd		5980358	0					
ANR	5980521	Identifier	model		5980358	1					
ANR	5980522	CallExpression	g_strdup ( nic -> model )		5980358	1					
ANR	5980523	Callee	g_strdup		5980358	0					
ANR	5980524	Identifier	g_strdup		5980358	0					
ANR	5980525	ArgumentList	nic -> model		5980358	1					
ANR	5980526	Argument	nic -> model		5980358	0					
ANR	5980527	PtrMemberAccess	nic -> model		5980358	0					
ANR	5980528	Identifier	nic		5980358	0					
ANR	5980529	Identifier	model		5980358	1					
ANR	5980530	IfStatement	if ( nic -> has_addr )		5980358	12					
ANR	5980531	Condition	nic -> has_addr	71:8:944:956	5980358	0	True				
ANR	5980532	PtrMemberAccess	nic -> has_addr		5980358	0					
ANR	5980533	Identifier	nic		5980358	0					
ANR	5980534	Identifier	has_addr		5980358	1					
ANR	5980535	CompoundStatement		67:23:824:824	5980358	1					
ANR	5980536	ExpressionStatement	nd -> devaddr = g_strdup ( nic -> addr )	73:8:970:1003	5980358	0	True				
ANR	5980537	AssignmentExpression	nd -> devaddr = g_strdup ( nic -> addr )		5980358	0		=			
ANR	5980538	PtrMemberAccess	nd -> devaddr		5980358	0					
ANR	5980539	Identifier	nd		5980358	0					
ANR	5980540	Identifier	devaddr		5980358	1					
ANR	5980541	CallExpression	g_strdup ( nic -> addr )		5980358	1					
ANR	5980542	Callee	g_strdup		5980358	0					
ANR	5980543	Identifier	g_strdup		5980358	0					
ANR	5980544	ArgumentList	nic -> addr		5980358	1					
ANR	5980545	Argument	nic -> addr		5980358	0					
ANR	5980546	PtrMemberAccess	nic -> addr		5980358	0					
ANR	5980547	Identifier	nic		5980358	0					
ANR	5980548	Identifier	addr		5980358	1					
ANR	5980549	IfStatement	"if ( nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0 )"		5980358	13					
ANR	5980550	Condition	"nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"	79:8:1023:1101	5980358	0	True				
ANR	5980551	AndExpression	"nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"		5980358	0		&&			
ANR	5980552	PtrMemberAccess	nic -> has_macaddr		5980358	0					
ANR	5980553	Identifier	nic		5980358	0					
ANR	5980554	Identifier	has_macaddr		5980358	1					
ANR	5980555	RelationalExpression	"net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"		5980358	1		<			
ANR	5980556	CallExpression	"net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr )"		5980358	0					
ANR	5980557	Callee	net_parse_macaddr		5980358	0					
ANR	5980558	Identifier	net_parse_macaddr		5980358	0					
ANR	5980559	ArgumentList	nd -> macaddr . a		5980358	1					
ANR	5980560	Argument	nd -> macaddr . a		5980358	0					
ANR	5980561	MemberAccess	nd -> macaddr . a		5980358	0					
ANR	5980562	PtrMemberAccess	nd -> macaddr		5980358	0					
ANR	5980563	Identifier	nd		5980358	0					
ANR	5980564	Identifier	macaddr		5980358	1					
ANR	5980565	Identifier	a		5980358	1					
ANR	5980566	Argument	nic -> macaddr		5980358	1					
ANR	5980567	PtrMemberAccess	nic -> macaddr		5980358	0					
ANR	5980568	Identifier	nic		5980358	0					
ANR	5980569	Identifier	macaddr		5980358	1					
ANR	5980570	PrimaryExpression	0		5980358	1					
ANR	5980571	CompoundStatement		77:60:969:969	5980358	1					
ANR	5980572	ExpressionStatement	"error_report ( ""invalid syntax for ethernet address"" )"	83:8:1115:1166	5980358	0	True				
ANR	5980573	CallExpression	"error_report ( ""invalid syntax for ethernet address"" )"		5980358	0					
ANR	5980574	Callee	error_report		5980358	0					
ANR	5980575	Identifier	error_report		5980358	0					
ANR	5980576	ArgumentList	"""invalid syntax for ethernet address"""		5980358	1					
ANR	5980577	Argument	"""invalid syntax for ethernet address"""		5980358	0					
ANR	5980578	PrimaryExpression	"""invalid syntax for ethernet address"""		5980358	0					
ANR	5980579	ReturnStatement	return - 1 ;	85:8:1177:1186	5980358	1	True				
ANR	5980580	UnaryOperationExpression	- 1		5980358	0					
ANR	5980581	UnaryOperator	-		5980358	0					
ANR	5980582	PrimaryExpression	1		5980358	1					
ANR	5980583	IfStatement	if ( nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a ) )		5980358	14					
ANR	5980584	Condition	nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a )	89:8:1204:1270	5980358	0	True				
ANR	5980585	AndExpression	nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a )		5980358	0		&&			
ANR	5980586	PtrMemberAccess	nic -> has_macaddr		5980358	0					
ANR	5980587	Identifier	nic		5980358	0					
ANR	5980588	Identifier	has_macaddr		5980358	1					
ANR	5980589	CallExpression	is_multicast_ether_addr ( nd -> macaddr . a )		5980358	1					
ANR	5980590	Callee	is_multicast_ether_addr		5980358	0					
ANR	5980591	Identifier	is_multicast_ether_addr		5980358	0					
ANR	5980592	ArgumentList	nd -> macaddr . a		5980358	1					
ANR	5980593	Argument	nd -> macaddr . a		5980358	0					
ANR	5980594	MemberAccess	nd -> macaddr . a		5980358	0					
ANR	5980595	PtrMemberAccess	nd -> macaddr		5980358	0					
ANR	5980596	Identifier	nd		5980358	0					
ANR	5980597	Identifier	macaddr		5980358	1					
ANR	5980598	Identifier	a		5980358	1					
ANR	5980599	CompoundStatement		87:48:1138:1138	5980358	1					
ANR	5980600	ExpressionStatement	"error_report ( ""NIC cannot have multicast MAC address (odd 1st byte)"" )"	93:8:1284:1352	5980358	0	True				
ANR	5980601	CallExpression	"error_report ( ""NIC cannot have multicast MAC address (odd 1st byte)"" )"		5980358	0					
ANR	5980602	Callee	error_report		5980358	0					
ANR	5980603	Identifier	error_report		5980358	0					
ANR	5980604	ArgumentList	"""NIC cannot have multicast MAC address (odd 1st byte)"""		5980358	1					
ANR	5980605	Argument	"""NIC cannot have multicast MAC address (odd 1st byte)"""		5980358	0					
ANR	5980606	PrimaryExpression	"""NIC cannot have multicast MAC address (odd 1st byte)"""		5980358	0					
ANR	5980607	ReturnStatement	return - 1 ;	95:8:1363:1372	5980358	1	True				
ANR	5980608	UnaryOperationExpression	- 1		5980358	0					
ANR	5980609	UnaryOperator	-		5980358	0					
ANR	5980610	PrimaryExpression	1		5980358	1					
ANR	5980611	ExpressionStatement	qemu_macaddr_default_if_unset ( & nd -> macaddr )	99:4:1386:1429	5980358	15	True				
ANR	5980612	CallExpression	qemu_macaddr_default_if_unset ( & nd -> macaddr )		5980358	0					
ANR	5980613	Callee	qemu_macaddr_default_if_unset		5980358	0					
ANR	5980614	Identifier	qemu_macaddr_default_if_unset		5980358	0					
ANR	5980615	ArgumentList	& nd -> macaddr		5980358	1					
ANR	5980616	Argument	& nd -> macaddr		5980358	0					
ANR	5980617	UnaryOperationExpression	& nd -> macaddr		5980358	0					
ANR	5980618	UnaryOperator	&		5980358	0					
ANR	5980619	PtrMemberAccess	nd -> macaddr		5980358	1					
ANR	5980620	Identifier	nd		5980358	0					
ANR	5980621	Identifier	macaddr		5980358	1					
ANR	5980622	IfStatement	if ( nic -> has_vectors )		5980358	16					
ANR	5980623	Condition	nic -> has_vectors	103:8:1442:1457	5980358	0	True				
ANR	5980624	PtrMemberAccess	nic -> has_vectors		5980358	0					
ANR	5980625	Identifier	nic		5980358	0					
ANR	5980626	Identifier	has_vectors		5980358	1					
ANR	5980627	CompoundStatement		99:26:1325:1325	5980358	1					
ANR	5980628	IfStatement	if ( nic -> vectors > 0x7ffffff )		5980358	0					
ANR	5980629	Condition	nic -> vectors > 0x7ffffff	105:12:1475:1498	5980358	0	True				
ANR	5980630	RelationalExpression	nic -> vectors > 0x7ffffff		5980358	0		>			
ANR	5980631	PtrMemberAccess	nic -> vectors		5980358	0					
ANR	5980632	Identifier	nic		5980358	0					
ANR	5980633	Identifier	vectors		5980358	1					
ANR	5980634	PrimaryExpression	0x7ffffff		5980358	1					
ANR	5980635	CompoundStatement		101:38:1366:1366	5980358	1					
ANR	5980636	Statement	error_report	107:12:1516:1527	5980358	0	True				
ANR	5980637	Statement	(	107:24:1528:1528	5980358	1	True				
ANR	5980638	Statement	"""invalid # of vectors: %"""	107:25:1529:1553	5980358	2	True				
ANR	5980639	Statement	PRIu32	107:50:1554:1559	5980358	3	True				
ANR	5980640	Statement	","	107:56:1560:1560	5980358	4	True				
ANR	5980641	Statement	nic	107:58:1562:1564	5980358	5	True				
ANR	5980642	Statement	->	107:61:1565:1566	5980358	6	True				
ANR	5980643	Statement	vectors	107:63:1567:1573	5980358	7	True				
ANR	5980644	Statement	)	107:70:1574:1574	5980358	8	True				
ANR	5980645	ExpressionStatement		107:71:1575:1575	5980358	9	True				
ANR	5980646	ReturnStatement	return - 1 ;	109:12:1590:1599	5980358	10	True				
ANR	5980647	UnaryOperationExpression	- 1		5980358	0					
ANR	5980648	UnaryOperator	-		5980358	0					
ANR	5980649	PrimaryExpression	1		5980358	1					
ANR	5980650	ExpressionStatement	nd -> nvectors = nic -> vectors	113:8:1621:1648	5980358	1	True				
ANR	5980651	AssignmentExpression	nd -> nvectors = nic -> vectors		5980358	0		=			
ANR	5980652	PtrMemberAccess	nd -> nvectors		5980358	0					
ANR	5980653	Identifier	nd		5980358	0					
ANR	5980654	Identifier	nvectors		5980358	1					
ANR	5980655	PtrMemberAccess	nic -> vectors		5980358	1					
ANR	5980656	Identifier	nic		5980358	0					
ANR	5980657	Identifier	vectors		5980358	1					
ANR	5980658	ElseStatement	else		5980358	0					
ANR	5980659	CompoundStatement		111:11:1527:1527	5980358	0					
ANR	5980660	ExpressionStatement	nd -> nvectors = DEV_NVECTORS_UNSPECIFIED	117:8:1673:1712	5980358	0	True				
ANR	5980661	AssignmentExpression	nd -> nvectors = DEV_NVECTORS_UNSPECIFIED		5980358	0		=			
ANR	5980662	PtrMemberAccess	nd -> nvectors		5980358	0					
ANR	5980663	Identifier	nd		5980358	0					
ANR	5980664	Identifier	nvectors		5980358	1					
ANR	5980665	Identifier	DEV_NVECTORS_UNSPECIFIED		5980358	1					
ANR	5980666	ExpressionStatement	nd -> used = 1	123:4:1728:1740	5980358	17	True				
ANR	5980667	AssignmentExpression	nd -> used = 1		5980358	0		=			
ANR	5980668	PtrMemberAccess	nd -> used		5980358	0					
ANR	5980669	Identifier	nd		5980358	0					
ANR	5980670	Identifier	used		5980358	1					
ANR	5980671	PrimaryExpression	1		5980358	1					
ANR	5980672	ExpressionStatement	nb_nics ++	125:4:1747:1756	5980358	18	True				
ANR	5980673	PostIncDecOperationExpression	nb_nics ++		5980358	0					
ANR	5980674	Identifier	nb_nics		5980358	0					
ANR	5980675	IncDec	++		5980358	1					
ANR	5980676	ReturnStatement	return idx ;	129:4:1765:1775	5980358	19	True				
ANR	5980677	Identifier	idx		5980358	0					
ANR	5980678	ReturnType	static int		5980358	1					
ANR	5980679	Identifier	net_init_nic		5980358	2					
ANR	5980680	ParameterList	"const NetClientOptions * opts , const char * name , NetClientState * peer , Error * * errp"		5980358	3					
ANR	5980681	Parameter	const NetClientOptions * opts	1:24:24:51	5980358	0	True				
ANR	5980682	ParameterType	const NetClientOptions *		5980358	0					
ANR	5980683	Identifier	opts		5980358	1					
ANR	5980684	Parameter	const char * name	1:54:54:69	5980358	1	True				
ANR	5980685	ParameterType	const char *		5980358	0					
ANR	5980686	Identifier	name		5980358	1					
ANR	5980687	Parameter	NetClientState * peer	3:24:97:116	5980358	2	True				
ANR	5980688	ParameterType	NetClientState *		5980358	0					
ANR	5980689	Identifier	peer		5980358	1					
ANR	5980690	Parameter	Error * * errp	3:46:119:130	5980358	3	True				
ANR	5980691	ParameterType	Error * *		5980358	0					
ANR	5980692	Identifier	errp		5980358	1					
ANR	5980693	CFGEntryNode	ENTRY		5980358		True				
ANR	5980694	CFGExitNode	EXIT		5980358		True				
ANR	5980695	Symbol	nb_nics		5980358						
ANR	5980696	Symbol	is_multicast_ether_addr		5980358						
ANR	5980697	Symbol	errp		5980358						
ANR	5980698	Symbol	nic		5980358						
ANR	5980699	Symbol	nic -> has_netdev		5980358						
ANR	5980700	Symbol	nic -> macaddr		5980358						
ANR	5980701	Symbol	nd -> used		5980358						
ANR	5980702	Symbol	nd -> model		5980358						
ANR	5980703	Symbol	nic_get_free_idx		5980358						
ANR	5980704	Symbol	NET_CLIENT_OPTIONS_KIND_NIC		5980358						
ANR	5980705	Symbol	nic -> has_macaddr		5980358						
ANR	5980706	Symbol	opts		5980358						
ANR	5980707	Symbol	nic -> netdev		5980358						
ANR	5980708	Symbol	nic -> has_model		5980358						
ANR	5980709	Symbol	peer		5980358						
ANR	5980710	Symbol	nd -> netdev		5980358						
ANR	5980711	Symbol	nd_table		5980358						
ANR	5980712	Symbol	g_strdup		5980358						
ANR	5980713	Symbol	nd -> nvectors		5980358						
ANR	5980714	Symbol	opts -> kind		5980358						
ANR	5980715	Symbol	nd -> name		5980358						
ANR	5980716	Symbol	nic -> addr		5980358						
ANR	5980717	Symbol	nic -> has_vectors		5980358						
ANR	5980718	Symbol	nd -> devaddr		5980358						
ANR	5980719	Symbol	& nd -> macaddr		5980358						
ANR	5980720	Symbol	opts -> nic		5980358						
ANR	5980721	Symbol	nic -> has_addr		5980358						
ANR	5980722	Symbol	net_parse_macaddr		5980358						
ANR	5980723	Symbol	qemu_find_netdev		5980358						
ANR	5980724	Symbol	nd -> macaddr		5980358						
ANR	5980725	Symbol	nic -> vectors		5980358						
ANR	5980726	Symbol	nic -> model		5980358						
ANR	5980727	Symbol	* nic		5980358						
ANR	5980728	Symbol	nd -> macaddr . a		5980358						
ANR	5980729	Symbol	DEV_NVECTORS_UNSPECIFIED		5980358						
ANR	5980730	Symbol	* opts		5980358						
ANR	5980731	Symbol	nd		5980358						
ANR	5980732	Symbol	name		5980358						
ANR	5980733	Symbol	idx		5980358						
ANR	5980734	Symbol	MAX_NICS		5980358						
ANR	5980735	Symbol	* nd		5980358						
