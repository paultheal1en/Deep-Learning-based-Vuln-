command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	586739	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_unsharp_1.c								
ANR	586740	Function	apply_unsharp	1:0:0:2054							
ANR	586741	FunctionDef	"apply_unsharp (uint8_t * dst , int dst_stride , const uint8_t * src , int src_stride , int width , int height , FilterParam * fp)"		586740	0					
ANR	586742	CompoundStatement		7:0:193:2054	586740	0					
ANR	586743	IdentifierDeclStatement	uint32_t * * sc = fp -> sc ;	9:4:200:222	586740	0	True				
ANR	586744	IdentifierDecl	* * sc = fp -> sc		586740	0					
ANR	586745	IdentifierDeclType	uint32_t * *		586740	0					
ANR	586746	Identifier	sc		586740	1					
ANR	586747	AssignmentExpression	* * sc = fp -> sc		586740	2		=			
ANR	586748	Identifier	sc		586740	0					
ANR	586749	PtrMemberAccess	fp -> sc		586740	1					
ANR	586750	Identifier	fp		586740	0					
ANR	586751	Identifier	sc		586740	1					
ANR	586752	IdentifierDeclStatement	"uint32_t sr [ ( MAX_SIZE * MAX_SIZE ) - 1 ] , tmp1 , tmp2 ;"	11:4:229:279	586740	1	True				
ANR	586753	IdentifierDecl	sr [ ( MAX_SIZE * MAX_SIZE ) - 1 ]		586740	0					
ANR	586754	IdentifierDeclType	uint32_t [ ( MAX_SIZE * MAX_SIZE ) - 1 ]		586740	0					
ANR	586755	Identifier	sr		586740	1					
ANR	586756	AdditiveExpression	( MAX_SIZE * MAX_SIZE ) - 1		586740	2		-			
ANR	586757	MultiplicativeExpression	MAX_SIZE * MAX_SIZE		586740	0		*			
ANR	586758	Identifier	MAX_SIZE		586740	0					
ANR	586759	Identifier	MAX_SIZE		586740	1					
ANR	586760	PrimaryExpression	1		586740	1					
ANR	586761	IdentifierDecl	tmp1		586740	1					
ANR	586762	IdentifierDeclType	uint32_t		586740	0					
ANR	586763	Identifier	tmp1		586740	1					
ANR	586764	IdentifierDecl	tmp2		586740	2					
ANR	586765	IdentifierDeclType	uint32_t		586740	0					
ANR	586766	Identifier	tmp2		586740	1					
ANR	586767	IdentifierDeclStatement	int32_t res ;	15:4:288:299	586740	2	True				
ANR	586768	IdentifierDecl	res		586740	0					
ANR	586769	IdentifierDeclType	int32_t		586740	0					
ANR	586770	Identifier	res		586740	1					
ANR	586771	IdentifierDeclStatement	"int x , y , z ;"	17:4:306:317	586740	3	True				
ANR	586772	IdentifierDecl	x		586740	0					
ANR	586773	IdentifierDeclType	int		586740	0					
ANR	586774	Identifier	x		586740	1					
ANR	586775	IdentifierDecl	y		586740	1					
ANR	586776	IdentifierDeclType	int		586740	0					
ANR	586777	Identifier	y		586740	1					
ANR	586778	IdentifierDecl	z		586740	2					
ANR	586779	IdentifierDeclType	int		586740	0					
ANR	586780	Identifier	z		586740	1					
ANR	586781	IdentifierDeclStatement	const uint8_t * src2 ;	19:4:324:343	586740	4	True				
ANR	586782	IdentifierDecl	* src2		586740	0					
ANR	586783	IdentifierDeclType	const uint8_t *		586740	0					
ANR	586784	Identifier	src2		586740	1					
ANR	586785	IfStatement	if ( ! fp -> amount )		586740	5					
ANR	586786	Condition	! fp -> amount	23:8:356:366	586740	0	True				
ANR	586787	UnaryOperationExpression	! fp -> amount		586740	0					
ANR	586788	UnaryOperator	!		586740	0					
ANR	586789	PtrMemberAccess	fp -> amount		586740	1					
ANR	586790	Identifier	fp		586740	0					
ANR	586791	Identifier	amount		586740	1					
ANR	586792	CompoundStatement		17:21:175:175	586740	1					
ANR	586793	IfStatement	if ( dst_stride == src_stride )		586740	0					
ANR	586794	Condition	dst_stride == src_stride	25:12:384:407	586740	0	True				
ANR	586795	EqualityExpression	dst_stride == src_stride		586740	0		==			
ANR	586796	Identifier	dst_stride		586740	0					
ANR	586797	Identifier	src_stride		586740	1					
ANR	586798	ExpressionStatement	"memcpy ( dst , src , src_stride * height )"	27:12:423:460	586740	1	True				
ANR	586799	CallExpression	"memcpy ( dst , src , src_stride * height )"		586740	0					
ANR	586800	Callee	memcpy		586740	0					
ANR	586801	Identifier	memcpy		586740	0					
ANR	586802	ArgumentList	dst		586740	1					
ANR	586803	Argument	dst		586740	0					
ANR	586804	Identifier	dst		586740	0					
ANR	586805	Argument	src		586740	1					
ANR	586806	Identifier	src		586740	0					
ANR	586807	Argument	src_stride * height		586740	2					
ANR	586808	MultiplicativeExpression	src_stride * height		586740	0		*			
ANR	586809	Identifier	src_stride		586740	0					
ANR	586810	Identifier	height		586740	1					
ANR	586811	ElseStatement	else		586740	0					
ANR	586812	ForStatement	"for ( y = 0 ; y < height ; y ++ , dst += dst_stride , src += src_stride )"		586740	0					
ANR	586813	ForInit	y = 0 ;	31:17:494:499	586740	0	True				
ANR	586814	AssignmentExpression	y = 0		586740	0		=			
ANR	586815	Identifier	y		586740	0					
ANR	586816	PrimaryExpression	0		586740	1					
ANR	586817	Condition	y < height	31:24:501:510	586740	1	True				
ANR	586818	RelationalExpression	y < height		586740	0		<			
ANR	586819	Identifier	y		586740	0					
ANR	586820	Identifier	height		586740	1					
ANR	586821	Expression	"y ++ , dst += dst_stride , src += src_stride"	31:36:513:553	586740	2	True				
ANR	586822	PostIncDecOperationExpression	y ++		586740	0					
ANR	586823	Identifier	y		586740	0					
ANR	586824	IncDec	++		586740	1					
ANR	586825	Expression	"dst += dst_stride , src += src_stride"		586740	1					
ANR	586826	AssignmentExpression	dst += dst_stride		586740	0		+=			
ANR	586827	Identifier	dst		586740	0					
ANR	586828	Identifier	dst_stride		586740	1					
ANR	586829	AssignmentExpression	src += src_stride		586740	1		+=			
ANR	586830	Identifier	src		586740	0					
ANR	586831	Identifier	src_stride		586740	1					
ANR	586832	ExpressionStatement	"memcpy ( dst , src , width )"	33:16:573:596	586740	3	True				
ANR	586833	CallExpression	"memcpy ( dst , src , width )"		586740	0					
ANR	586834	Callee	memcpy		586740	0					
ANR	586835	Identifier	memcpy		586740	0					
ANR	586836	ArgumentList	dst		586740	1					
ANR	586837	Argument	dst		586740	0					
ANR	586838	Identifier	dst		586740	0					
ANR	586839	Argument	src		586740	1					
ANR	586840	Identifier	src		586740	0					
ANR	586841	Argument	width		586740	2					
ANR	586842	Identifier	width		586740	0					
ANR	586843	ReturnStatement	return ;	35:8:607:613	586740	1	True				
ANR	586844	ForStatement	for ( y = 0 ; y < 2 * fp -> steps_y ; y ++ )		586740	6					
ANR	586845	ForInit	y = 0 ;	41:9:634:639	586740	0	True				
ANR	586846	AssignmentExpression	y = 0		586740	0		=			
ANR	586847	Identifier	y		586740	0					
ANR	586848	PrimaryExpression	0		586740	1					
ANR	586849	Condition	y < 2 * fp -> steps_y	41:16:641:659	586740	1	True				
ANR	586850	RelationalExpression	y < 2 * fp -> steps_y		586740	0		<			
ANR	586851	Identifier	y		586740	0					
ANR	586852	MultiplicativeExpression	2 * fp -> steps_y		586740	1		*			
ANR	586853	PrimaryExpression	2		586740	0					
ANR	586854	PtrMemberAccess	fp -> steps_y		586740	1					
ANR	586855	Identifier	fp		586740	0					
ANR	586856	Identifier	steps_y		586740	1					
ANR	586857	PostIncDecOperationExpression	y ++	41:37:662:664	586740	2	True				
ANR	586858	Identifier	y		586740	0					
ANR	586859	IncDec	++		586740	1					
ANR	586860	ExpressionStatement	"memset ( sc [ y ] , 0 , sizeof ( sc [ y ] [ 0 ] ) * ( width + 2 * fp -> steps_x ) )"	43:8:676:738	586740	3	True				
ANR	586861	CallExpression	"memset ( sc [ y ] , 0 , sizeof ( sc [ y ] [ 0 ] ) * ( width + 2 * fp -> steps_x ) )"		586740	0					
ANR	586862	Callee	memset		586740	0					
ANR	586863	Identifier	memset		586740	0					
ANR	586864	ArgumentList	sc [ y ]		586740	1					
ANR	586865	Argument	sc [ y ]		586740	0					
ANR	586866	ArrayIndexing	sc [ y ]		586740	0					
ANR	586867	Identifier	sc		586740	0					
ANR	586868	Identifier	y		586740	1					
ANR	586869	Argument	0		586740	1					
ANR	586870	PrimaryExpression	0		586740	0					
ANR	586871	Argument	sizeof ( sc [ y ] [ 0 ] ) * ( width + 2 * fp -> steps_x )		586740	2					
ANR	586872	MultiplicativeExpression	sizeof ( sc [ y ] [ 0 ] ) * ( width + 2 * fp -> steps_x )		586740	0		*			
ANR	586873	SizeofExpression	sizeof ( sc [ y ] [ 0 ] )		586740	0					
ANR	586874	Sizeof	sizeof		586740	0					
ANR	586875	ArrayIndexing	sc [ y ] [ 0 ]		586740	1					
ANR	586876	ArrayIndexing	sc [ y ]		586740	0					
ANR	586877	Identifier	sc		586740	0					
ANR	586878	Identifier	y		586740	1					
ANR	586879	PrimaryExpression	0		586740	1					
ANR	586880	AdditiveExpression	width + 2 * fp -> steps_x		586740	1		+			
ANR	586881	Identifier	width		586740	0					
ANR	586882	MultiplicativeExpression	2 * fp -> steps_x		586740	1		*			
ANR	586883	PrimaryExpression	2		586740	0					
ANR	586884	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	586885	Identifier	fp		586740	0					
ANR	586886	Identifier	steps_x		586740	1					
ANR	586887	ForStatement	for ( y = - fp -> steps_y ; y < height + fp -> steps_y ; y ++ )		586740	7					
ANR	586888	ForInit	y = - fp -> steps_y ;	47:9:752:768	586740	0	True				
ANR	586889	AssignmentExpression	y = - fp -> steps_y		586740	0		=			
ANR	586890	Identifier	y		586740	0					
ANR	586891	UnaryOperationExpression	- fp -> steps_y		586740	1					
ANR	586892	UnaryOperator	-		586740	0					
ANR	586893	PtrMemberAccess	fp -> steps_y		586740	1					
ANR	586894	Identifier	fp		586740	0					
ANR	586895	Identifier	steps_y		586740	1					
ANR	586896	Condition	y < height + fp -> steps_y	47:27:770:793	586740	1	True				
ANR	586897	RelationalExpression	y < height + fp -> steps_y		586740	0		<			
ANR	586898	Identifier	y		586740	0					
ANR	586899	AdditiveExpression	height + fp -> steps_y		586740	1		+			
ANR	586900	Identifier	height		586740	0					
ANR	586901	PtrMemberAccess	fp -> steps_y		586740	1					
ANR	586902	Identifier	fp		586740	0					
ANR	586903	Identifier	steps_y		586740	1					
ANR	586904	PostIncDecOperationExpression	y ++	47:53:796:798	586740	2	True				
ANR	586905	Identifier	y		586740	0					
ANR	586906	IncDec	++		586740	1					
ANR	586907	CompoundStatement		41:58:607:607	586740	3					
ANR	586908	IfStatement	if ( y < height )		586740	0					
ANR	586909	Condition	y < height	49:12:816:825	586740	0	True				
ANR	586910	RelationalExpression	y < height		586740	0		<			
ANR	586911	Identifier	y		586740	0					
ANR	586912	Identifier	height		586740	1					
ANR	586913	ExpressionStatement	src2 = src	51:12:841:851	586740	1	True				
ANR	586914	AssignmentExpression	src2 = src		586740	0		=			
ANR	586915	Identifier	src2		586740	0					
ANR	586916	Identifier	src		586740	1					
ANR	586917	ExpressionStatement	"memset ( sr , 0 , sizeof ( sr [ 0 ] ) * ( 2 * fp -> steps_x - 1 ) )"	55:8:864:916	586740	1	True				
ANR	586918	CallExpression	"memset ( sr , 0 , sizeof ( sr [ 0 ] ) * ( 2 * fp -> steps_x - 1 ) )"		586740	0					
ANR	586919	Callee	memset		586740	0					
ANR	586920	Identifier	memset		586740	0					
ANR	586921	ArgumentList	sr		586740	1					
ANR	586922	Argument	sr		586740	0					
ANR	586923	Identifier	sr		586740	0					
ANR	586924	Argument	0		586740	1					
ANR	586925	PrimaryExpression	0		586740	0					
ANR	586926	Argument	sizeof ( sr [ 0 ] ) * ( 2 * fp -> steps_x - 1 )		586740	2					
ANR	586927	MultiplicativeExpression	sizeof ( sr [ 0 ] ) * ( 2 * fp -> steps_x - 1 )		586740	0		*			
ANR	586928	SizeofExpression	sizeof ( sr [ 0 ] )		586740	0					
ANR	586929	Sizeof	sizeof		586740	0					
ANR	586930	ArrayIndexing	sr [ 0 ]		586740	1					
ANR	586931	Identifier	sr		586740	0					
ANR	586932	PrimaryExpression	0		586740	1					
ANR	586933	AdditiveExpression	2 * fp -> steps_x - 1		586740	1		-			
ANR	586934	MultiplicativeExpression	2 * fp -> steps_x		586740	0		*			
ANR	586935	PrimaryExpression	2		586740	0					
ANR	586936	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	586937	Identifier	fp		586740	0					
ANR	586938	Identifier	steps_x		586740	1					
ANR	586939	PrimaryExpression	1		586740	1					
ANR	586940	ForStatement	for ( x = - fp -> steps_x ; x < width + fp -> steps_x ; x ++ )		586740	2					
ANR	586941	ForInit	x = - fp -> steps_x ;	57:13:932:948	586740	0	True				
ANR	586942	AssignmentExpression	x = - fp -> steps_x		586740	0		=			
ANR	586943	Identifier	x		586740	0					
ANR	586944	UnaryOperationExpression	- fp -> steps_x		586740	1					
ANR	586945	UnaryOperator	-		586740	0					
ANR	586946	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	586947	Identifier	fp		586740	0					
ANR	586948	Identifier	steps_x		586740	1					
ANR	586949	Condition	x < width + fp -> steps_x	57:31:950:972	586740	1	True				
ANR	586950	RelationalExpression	x < width + fp -> steps_x		586740	0		<			
ANR	586951	Identifier	x		586740	0					
ANR	586952	AdditiveExpression	width + fp -> steps_x		586740	1		+			
ANR	586953	Identifier	width		586740	0					
ANR	586954	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	586955	Identifier	fp		586740	0					
ANR	586956	Identifier	steps_x		586740	1					
ANR	586957	PostIncDecOperationExpression	x ++	57:56:975:977	586740	2	True				
ANR	586958	Identifier	x		586740	0					
ANR	586959	IncDec	++		586740	1					
ANR	586960	CompoundStatement		51:61:786:786	586740	3					
ANR	586961	ExpressionStatement	tmp1 = x <= 0 ? src2 [ 0 ] : x >= width ? src2 [ width - 1 ] : src2 [ x ]	59:12:995:1057	586740	0	True				
ANR	586962	AssignmentExpression	tmp1 = x <= 0 ? src2 [ 0 ] : x >= width ? src2 [ width - 1 ] : src2 [ x ]		586740	0		=			
ANR	586963	Identifier	tmp1		586740	0					
ANR	586964	ConditionalExpression	x <= 0 ? src2 [ 0 ] : x >= width ? src2 [ width - 1 ] : src2 [ x ]		586740	1					
ANR	586965	Condition	x <= 0		586740	0					
ANR	586966	RelationalExpression	x <= 0		586740	0		<=			
ANR	586967	Identifier	x		586740	0					
ANR	586968	PrimaryExpression	0		586740	1					
ANR	586969	ArrayIndexing	src2 [ 0 ]		586740	1					
ANR	586970	Identifier	src2		586740	0					
ANR	586971	PrimaryExpression	0		586740	1					
ANR	586972	ConditionalExpression	x >= width ? src2 [ width - 1 ] : src2 [ x ]		586740	2					
ANR	586973	Condition	x >= width		586740	0					
ANR	586974	RelationalExpression	x >= width		586740	0		>=			
ANR	586975	Identifier	x		586740	0					
ANR	586976	Identifier	width		586740	1					
ANR	586977	ArrayIndexing	src2 [ width - 1 ]		586740	1					
ANR	586978	Identifier	src2		586740	0					
ANR	586979	AdditiveExpression	width - 1		586740	1		-			
ANR	586980	Identifier	width		586740	0					
ANR	586981	PrimaryExpression	1		586740	1					
ANR	586982	ArrayIndexing	src2 [ x ]		586740	2					
ANR	586983	Identifier	src2		586740	0					
ANR	586984	Identifier	x		586740	1					
ANR	586985	ForStatement	for ( z = 0 ; z < fp -> steps_x * 2 ; z += 2 )		586740	1					
ANR	586986	ForInit	z = 0 ;	61:17:1077:1082	586740	0	True				
ANR	586987	AssignmentExpression	z = 0		586740	0		=			
ANR	586988	Identifier	z		586740	0					
ANR	586989	PrimaryExpression	0		586740	1					
ANR	586990	Condition	z < fp -> steps_x * 2	61:24:1084:1102	586740	1	True				
ANR	586991	RelationalExpression	z < fp -> steps_x * 2		586740	0		<			
ANR	586992	Identifier	z		586740	0					
ANR	586993	MultiplicativeExpression	fp -> steps_x * 2		586740	1		*			
ANR	586994	PtrMemberAccess	fp -> steps_x		586740	0					
ANR	586995	Identifier	fp		586740	0					
ANR	586996	Identifier	steps_x		586740	1					
ANR	586997	PrimaryExpression	2		586740	1					
ANR	586998	AssignmentExpression	z += 2	61:45:1105:1110	586740	2	True	+=			
ANR	586999	Identifier	z		586740	0					
ANR	587000	PrimaryExpression	2		586740	1					
ANR	587001	CompoundStatement		55:53:919:919	586740	3					
ANR	587002	ExpressionStatement	tmp2 = sr [ z + 0 ] + tmp1	63:16:1132:1155	586740	0	True				
ANR	587003	AssignmentExpression	tmp2 = sr [ z + 0 ] + tmp1		586740	0		=			
ANR	587004	Identifier	tmp2		586740	0					
ANR	587005	AdditiveExpression	sr [ z + 0 ] + tmp1		586740	1		+			
ANR	587006	ArrayIndexing	sr [ z + 0 ]		586740	0					
ANR	587007	Identifier	sr		586740	0					
ANR	587008	AdditiveExpression	z + 0		586740	1		+			
ANR	587009	Identifier	z		586740	0					
ANR	587010	PrimaryExpression	0		586740	1					
ANR	587011	Identifier	tmp1		586740	1					
ANR	587012	ExpressionStatement	sr [ z + 0 ] = tmp1	63:41:1157:1173	586740	1	True				
ANR	587013	AssignmentExpression	sr [ z + 0 ] = tmp1		586740	0		=			
ANR	587014	ArrayIndexing	sr [ z + 0 ]		586740	0					
ANR	587015	Identifier	sr		586740	0					
ANR	587016	AdditiveExpression	z + 0		586740	1		+			
ANR	587017	Identifier	z		586740	0					
ANR	587018	PrimaryExpression	0		586740	1					
ANR	587019	Identifier	tmp1		586740	1					
ANR	587020	ExpressionStatement	tmp1 = sr [ z + 1 ] + tmp2	65:16:1192:1215	586740	2	True				
ANR	587021	AssignmentExpression	tmp1 = sr [ z + 1 ] + tmp2		586740	0		=			
ANR	587022	Identifier	tmp1		586740	0					
ANR	587023	AdditiveExpression	sr [ z + 1 ] + tmp2		586740	1		+			
ANR	587024	ArrayIndexing	sr [ z + 1 ]		586740	0					
ANR	587025	Identifier	sr		586740	0					
ANR	587026	AdditiveExpression	z + 1		586740	1		+			
ANR	587027	Identifier	z		586740	0					
ANR	587028	PrimaryExpression	1		586740	1					
ANR	587029	Identifier	tmp2		586740	1					
ANR	587030	ExpressionStatement	sr [ z + 1 ] = tmp2	65:41:1217:1233	586740	3	True				
ANR	587031	AssignmentExpression	sr [ z + 1 ] = tmp2		586740	0		=			
ANR	587032	ArrayIndexing	sr [ z + 1 ]		586740	0					
ANR	587033	Identifier	sr		586740	0					
ANR	587034	AdditiveExpression	z + 1		586740	1		+			
ANR	587035	Identifier	z		586740	0					
ANR	587036	PrimaryExpression	1		586740	1					
ANR	587037	Identifier	tmp2		586740	1					
ANR	587038	ForStatement	for ( z = 0 ; z < fp -> steps_y * 2 ; z += 2 )		586740	2					
ANR	587039	ForInit	z = 0 ;	69:17:1268:1273	586740	0	True				
ANR	587040	AssignmentExpression	z = 0		586740	0		=			
ANR	587041	Identifier	z		586740	0					
ANR	587042	PrimaryExpression	0		586740	1					
ANR	587043	Condition	z < fp -> steps_y * 2	69:24:1275:1293	586740	1	True				
ANR	587044	RelationalExpression	z < fp -> steps_y * 2		586740	0		<			
ANR	587045	Identifier	z		586740	0					
ANR	587046	MultiplicativeExpression	fp -> steps_y * 2		586740	1		*			
ANR	587047	PtrMemberAccess	fp -> steps_y		586740	0					
ANR	587048	Identifier	fp		586740	0					
ANR	587049	Identifier	steps_y		586740	1					
ANR	587050	PrimaryExpression	2		586740	1					
ANR	587051	AssignmentExpression	z += 2	69:45:1296:1301	586740	2	True	+=			
ANR	587052	Identifier	z		586740	0					
ANR	587053	PrimaryExpression	2		586740	1					
ANR	587054	CompoundStatement		63:53:1110:1110	586740	3					
ANR	587055	ExpressionStatement	tmp2 = sc [ z + 0 ] [ x + fp -> steps_x ] + tmp1	71:16:1323:1363	586740	0	True				
ANR	587056	AssignmentExpression	tmp2 = sc [ z + 0 ] [ x + fp -> steps_x ] + tmp1		586740	0		=			
ANR	587057	Identifier	tmp2		586740	0					
ANR	587058	AdditiveExpression	sc [ z + 0 ] [ x + fp -> steps_x ] + tmp1		586740	1		+			
ANR	587059	ArrayIndexing	sc [ z + 0 ] [ x + fp -> steps_x ]		586740	0					
ANR	587060	ArrayIndexing	sc [ z + 0 ]		586740	0					
ANR	587061	Identifier	sc		586740	0					
ANR	587062	AdditiveExpression	z + 0		586740	1		+			
ANR	587063	Identifier	z		586740	0					
ANR	587064	PrimaryExpression	0		586740	1					
ANR	587065	AdditiveExpression	x + fp -> steps_x		586740	1		+			
ANR	587066	Identifier	x		586740	0					
ANR	587067	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587068	Identifier	fp		586740	0					
ANR	587069	Identifier	steps_x		586740	1					
ANR	587070	Identifier	tmp1		586740	1					
ANR	587071	ExpressionStatement	sc [ z + 0 ] [ x + fp -> steps_x ] = tmp1	71:58:1365:1398	586740	1	True				
ANR	587072	AssignmentExpression	sc [ z + 0 ] [ x + fp -> steps_x ] = tmp1		586740	0		=			
ANR	587073	ArrayIndexing	sc [ z + 0 ] [ x + fp -> steps_x ]		586740	0					
ANR	587074	ArrayIndexing	sc [ z + 0 ]		586740	0					
ANR	587075	Identifier	sc		586740	0					
ANR	587076	AdditiveExpression	z + 0		586740	1		+			
ANR	587077	Identifier	z		586740	0					
ANR	587078	PrimaryExpression	0		586740	1					
ANR	587079	AdditiveExpression	x + fp -> steps_x		586740	1		+			
ANR	587080	Identifier	x		586740	0					
ANR	587081	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587082	Identifier	fp		586740	0					
ANR	587083	Identifier	steps_x		586740	1					
ANR	587084	Identifier	tmp1		586740	1					
ANR	587085	ExpressionStatement	tmp1 = sc [ z + 1 ] [ x + fp -> steps_x ] + tmp2	73:16:1417:1457	586740	2	True				
ANR	587086	AssignmentExpression	tmp1 = sc [ z + 1 ] [ x + fp -> steps_x ] + tmp2		586740	0		=			
ANR	587087	Identifier	tmp1		586740	0					
ANR	587088	AdditiveExpression	sc [ z + 1 ] [ x + fp -> steps_x ] + tmp2		586740	1		+			
ANR	587089	ArrayIndexing	sc [ z + 1 ] [ x + fp -> steps_x ]		586740	0					
ANR	587090	ArrayIndexing	sc [ z + 1 ]		586740	0					
ANR	587091	Identifier	sc		586740	0					
ANR	587092	AdditiveExpression	z + 1		586740	1		+			
ANR	587093	Identifier	z		586740	0					
ANR	587094	PrimaryExpression	1		586740	1					
ANR	587095	AdditiveExpression	x + fp -> steps_x		586740	1		+			
ANR	587096	Identifier	x		586740	0					
ANR	587097	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587098	Identifier	fp		586740	0					
ANR	587099	Identifier	steps_x		586740	1					
ANR	587100	Identifier	tmp2		586740	1					
ANR	587101	ExpressionStatement	sc [ z + 1 ] [ x + fp -> steps_x ] = tmp2	73:58:1459:1492	586740	3	True				
ANR	587102	AssignmentExpression	sc [ z + 1 ] [ x + fp -> steps_x ] = tmp2		586740	0		=			
ANR	587103	ArrayIndexing	sc [ z + 1 ] [ x + fp -> steps_x ]		586740	0					
ANR	587104	ArrayIndexing	sc [ z + 1 ]		586740	0					
ANR	587105	Identifier	sc		586740	0					
ANR	587106	AdditiveExpression	z + 1		586740	1		+			
ANR	587107	Identifier	z		586740	0					
ANR	587108	PrimaryExpression	1		586740	1					
ANR	587109	AdditiveExpression	x + fp -> steps_x		586740	1		+			
ANR	587110	Identifier	x		586740	0					
ANR	587111	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587112	Identifier	fp		586740	0					
ANR	587113	Identifier	steps_x		586740	1					
ANR	587114	Identifier	tmp2		586740	1					
ANR	587115	IfStatement	if ( x >= fp -> steps_x && y >= fp -> steps_y )		586740	3					
ANR	587116	Condition	x >= fp -> steps_x && y >= fp -> steps_y	77:16:1526:1561	586740	0	True				
ANR	587117	AndExpression	x >= fp -> steps_x && y >= fp -> steps_y		586740	0		&&			
ANR	587118	RelationalExpression	x >= fp -> steps_x		586740	0		>=			
ANR	587119	Identifier	x		586740	0					
ANR	587120	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587121	Identifier	fp		586740	0					
ANR	587122	Identifier	steps_x		586740	1					
ANR	587123	RelationalExpression	y >= fp -> steps_y		586740	1		>=			
ANR	587124	Identifier	y		586740	0					
ANR	587125	PtrMemberAccess	fp -> steps_y		586740	1					
ANR	587126	Identifier	fp		586740	0					
ANR	587127	Identifier	steps_y		586740	1					
ANR	587128	CompoundStatement		75:16:1477:1546	586740	1					
ANR	587129	IdentifierDeclStatement	const uint8_t * srx = src - fp -> steps_y * src_stride + x - fp -> steps_x ;	79:16:1583:1652	586740	0	True				
ANR	587130	IdentifierDecl	* srx = src - fp -> steps_y * src_stride + x - fp -> steps_x		586740	0					
ANR	587131	IdentifierDeclType	const uint8_t *		586740	0					
ANR	587132	Identifier	srx		586740	1					
ANR	587133	AssignmentExpression	* srx = src - fp -> steps_y * src_stride + x - fp -> steps_x		586740	2		=			
ANR	587134	Identifier	srx		586740	0					
ANR	587135	AdditiveExpression	src - fp -> steps_y * src_stride + x - fp -> steps_x		586740	1		-			
ANR	587136	Identifier	src		586740	0					
ANR	587137	AdditiveExpression	fp -> steps_y * src_stride + x - fp -> steps_x		586740	1		+			
ANR	587138	MultiplicativeExpression	fp -> steps_y * src_stride		586740	0		*			
ANR	587139	PtrMemberAccess	fp -> steps_y		586740	0					
ANR	587140	Identifier	fp		586740	0					
ANR	587141	Identifier	steps_y		586740	1					
ANR	587142	Identifier	src_stride		586740	1					
ANR	587143	AdditiveExpression	x - fp -> steps_x		586740	1		-			
ANR	587144	Identifier	x		586740	0					
ANR	587145	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587146	Identifier	fp		586740	0					
ANR	587147	Identifier	steps_x		586740	1					
ANR	587148	IdentifierDeclStatement	uint8_t * dsx = dst - fp -> steps_y * dst_stride + x - fp -> steps_x ;	81:16:1671:1740	586740	1	True				
ANR	587149	IdentifierDecl	* dsx = dst - fp -> steps_y * dst_stride + x - fp -> steps_x		586740	0					
ANR	587150	IdentifierDeclType	uint8_t *		586740	0					
ANR	587151	Identifier	dsx		586740	1					
ANR	587152	AssignmentExpression	* dsx = dst - fp -> steps_y * dst_stride + x - fp -> steps_x		586740	2		=			
ANR	587153	Identifier	dsx		586740	0					
ANR	587154	AdditiveExpression	dst - fp -> steps_y * dst_stride + x - fp -> steps_x		586740	1		-			
ANR	587155	Identifier	dst		586740	0					
ANR	587156	AdditiveExpression	fp -> steps_y * dst_stride + x - fp -> steps_x		586740	1		+			
ANR	587157	MultiplicativeExpression	fp -> steps_y * dst_stride		586740	0		*			
ANR	587158	PtrMemberAccess	fp -> steps_y		586740	0					
ANR	587159	Identifier	fp		586740	0					
ANR	587160	Identifier	steps_y		586740	1					
ANR	587161	Identifier	dst_stride		586740	1					
ANR	587162	AdditiveExpression	x - fp -> steps_x		586740	1		-			
ANR	587163	Identifier	x		586740	0					
ANR	587164	PtrMemberAccess	fp -> steps_x		586740	1					
ANR	587165	Identifier	fp		586740	0					
ANR	587166	Identifier	steps_x		586740	1					
ANR	587167	ExpressionStatement	res = ( int32_t ) * srx + ( ( ( ( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits ) ) * fp -> amount ) >> 16 )	85:16:1761:1876	586740	2	True				
ANR	587168	AssignmentExpression	res = ( int32_t ) * srx + ( ( ( ( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits ) ) * fp -> amount ) >> 16 )		586740	0		=			
ANR	587169	Identifier	res		586740	0					
ANR	587170	AdditiveExpression	( int32_t ) * srx + ( ( ( ( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits ) ) * fp -> amount ) >> 16 )		586740	1		+			
ANR	587171	CastExpression	( int32_t ) * srx		586740	0					
ANR	587172	CastTarget	int32_t		586740	0					
ANR	587173	UnaryOperationExpression	* srx		586740	1					
ANR	587174	UnaryOperator	*		586740	0					
ANR	587175	Identifier	srx		586740	1					
ANR	587176	ShiftExpression	( ( ( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits ) ) * fp -> amount ) >> 16		586740	1		>>			
ANR	587177	MultiplicativeExpression	( ( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits ) ) * fp -> amount		586740	0		*			
ANR	587178	AdditiveExpression	( int32_t ) * srx - ( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits )		586740	0		-			
ANR	587179	CastExpression	( int32_t ) * srx		586740	0					
ANR	587180	CastTarget	int32_t		586740	0					
ANR	587181	UnaryOperationExpression	* srx		586740	1					
ANR	587182	UnaryOperator	*		586740	0					
ANR	587183	Identifier	srx		586740	1					
ANR	587184	CastExpression	( int32_t ) ( ( tmp1 + fp -> halfscale ) >> fp -> scalebits )		586740	1					
ANR	587185	CastTarget	int32_t		586740	0					
ANR	587186	ShiftExpression	( tmp1 + fp -> halfscale ) >> fp -> scalebits		586740	1		>>			
ANR	587187	AdditiveExpression	tmp1 + fp -> halfscale		586740	0		+			
ANR	587188	Identifier	tmp1		586740	0					
ANR	587189	PtrMemberAccess	fp -> halfscale		586740	1					
ANR	587190	Identifier	fp		586740	0					
ANR	587191	Identifier	halfscale		586740	1					
ANR	587192	PtrMemberAccess	fp -> scalebits		586740	1					
ANR	587193	Identifier	fp		586740	0					
ANR	587194	Identifier	scalebits		586740	1					
ANR	587195	PtrMemberAccess	fp -> amount		586740	1					
ANR	587196	Identifier	fp		586740	0					
ANR	587197	Identifier	amount		586740	1					
ANR	587198	PrimaryExpression	16		586740	1					
ANR	587199	ExpressionStatement	* dsx = av_clip_uint8 ( res )	87:16:1895:1920	586740	3	True				
ANR	587200	AssignmentExpression	* dsx = av_clip_uint8 ( res )		586740	0		=			
ANR	587201	UnaryOperationExpression	* dsx		586740	0					
ANR	587202	UnaryOperator	*		586740	0					
ANR	587203	Identifier	dsx		586740	1					
ANR	587204	CallExpression	av_clip_uint8 ( res )		586740	1					
ANR	587205	Callee	av_clip_uint8		586740	0					
ANR	587206	Identifier	av_clip_uint8		586740	0					
ANR	587207	ArgumentList	res		586740	1					
ANR	587208	Argument	res		586740	0					
ANR	587209	Identifier	res		586740	0					
ANR	587210	IfStatement	if ( y >= 0 )		586740	3					
ANR	587211	Condition	y >= 0	93:12:1961:1966	586740	0	True				
ANR	587212	RelationalExpression	y >= 0		586740	0		>=			
ANR	587213	Identifier	y		586740	0					
ANR	587214	PrimaryExpression	0		586740	1					
ANR	587215	CompoundStatement		87:20:1775:1775	586740	1					
ANR	587216	ExpressionStatement	dst += dst_stride	95:12:1984:2001	586740	0	True				
ANR	587217	AssignmentExpression	dst += dst_stride		586740	0		+=			
ANR	587218	Identifier	dst		586740	0					
ANR	587219	Identifier	dst_stride		586740	1					
ANR	587220	ExpressionStatement	src += src_stride	97:12:2016:2033	586740	1	True				
ANR	587221	AssignmentExpression	src += src_stride		586740	0		+=			
ANR	587222	Identifier	src		586740	0					
ANR	587223	Identifier	src_stride		586740	1					
ANR	587224	ReturnType	static void		586740	1					
ANR	587225	Identifier	apply_unsharp		586740	2					
ANR	587226	ParameterList	"uint8_t * dst , int dst_stride , const uint8_t * src , int src_stride , int width , int height , FilterParam * fp"		586740	3					
ANR	587227	Parameter	uint8_t * dst	1:32:32:43	586740	0	True				
ANR	587228	ParameterType	uint8_t *		586740	0					
ANR	587229	Identifier	dst		586740	1					
ANR	587230	Parameter	int dst_stride	1:46:46:59	586740	1	True				
ANR	587231	ParameterType	int		586740	0					
ANR	587232	Identifier	dst_stride		586740	1					
ANR	587233	Parameter	const uint8_t * src	3:26:89:106	586740	2	True				
ANR	587234	ParameterType	const uint8_t *		586740	0					
ANR	587235	Identifier	src		586740	1					
ANR	587236	Parameter	int src_stride	3:46:109:122	586740	3	True				
ANR	587237	ParameterType	int		586740	0					
ANR	587238	Identifier	src_stride		586740	1					
ANR	587239	Parameter	int width	5:26:152:160	586740	4	True				
ANR	587240	ParameterType	int		586740	0					
ANR	587241	Identifier	width		586740	1					
ANR	587242	Parameter	int height	5:37:163:172	586740	5	True				
ANR	587243	ParameterType	int		586740	0					
ANR	587244	Identifier	height		586740	1					
ANR	587245	Parameter	FilterParam * fp	5:49:175:189	586740	6	True				
ANR	587246	ParameterType	FilterParam *		586740	0					
ANR	587247	Identifier	fp		586740	1					
ANR	587248	CFGEntryNode	ENTRY		586740		True				
ANR	587249	CFGExitNode	EXIT		586740		True				
ANR	587250	Symbol	fp -> steps_x		586740						
ANR	587251	Symbol	* x		586740						
ANR	587252	Symbol	* y		586740						
ANR	587253	Symbol	dst		586740						
ANR	587254	Symbol	src_stride		586740						
ANR	587255	Symbol	* z		586740						
ANR	587256	Symbol	* sr		586740						
ANR	587257	Symbol	av_clip_uint8		586740						
ANR	587258	Symbol	fp -> amount		586740						
ANR	587259	Symbol	dsx		586740						
ANR	587260	Symbol	fp		586740						
ANR	587261	Symbol	tmp1		586740						
ANR	587262	Symbol	* dsx		586740						
ANR	587263	Symbol	tmp2		586740						
ANR	587264	Symbol	* width		586740						
ANR	587265	Symbol	fp -> steps_y		586740						
ANR	587266	Symbol	fp -> scalebits		586740						
ANR	587267	Symbol	sc		586740						
ANR	587268	Symbol	* * z		586740						
ANR	587269	Symbol	* * y		586740						
ANR	587270	Symbol	* fp		586740						
ANR	587271	Symbol	* sc		586740						
ANR	587272	Symbol	height		586740						
ANR	587273	Symbol	sr		586740						
ANR	587274	Symbol	* src2		586740						
ANR	587275	Symbol	res		586740						
ANR	587276	Symbol	* srx		586740						
ANR	587277	Symbol	src		586740						
ANR	587278	Symbol	dst_stride		586740						
ANR	587279	Symbol	fp -> sc		586740						
ANR	587280	Symbol	fp -> halfscale		586740						
ANR	587281	Symbol	* fp -> steps_x		586740						
ANR	587282	Symbol	* * fp		586740						
ANR	587283	Symbol	width		586740						
ANR	587284	Symbol	x		586740						
ANR	587285	Symbol	srx		586740						
ANR	587286	Symbol	y		586740						
ANR	587287	Symbol	z		586740						
ANR	587288	Symbol	src2		586740						
ANR	587289	Symbol	* * sc		586740						
