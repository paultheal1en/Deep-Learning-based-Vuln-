command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2536679	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dnxhd_mb_var_thread_1.c								
ANR	2536680	Function	dnxhd_mb_var_thread	1:0:0:1852							
ANR	2536681	FunctionDef	"dnxhd_mb_var_thread (AVCodecContext * avctx , void * arg , int jobnr , int threadnr)"		2536680	0					
ANR	2536682	CompoundStatement		3:0:91:1852	2536680	0					
ANR	2536683	IdentifierDeclStatement	DNXHDEncContext * ctx = avctx -> priv_data ;	5:4:98:137	2536680	0	True				
ANR	2536684	IdentifierDecl	* ctx = avctx -> priv_data		2536680	0					
ANR	2536685	IdentifierDeclType	DNXHDEncContext *		2536680	0					
ANR	2536686	Identifier	ctx		2536680	1					
ANR	2536687	AssignmentExpression	* ctx = avctx -> priv_data		2536680	2		=			
ANR	2536688	Identifier	ctx		2536680	0					
ANR	2536689	PtrMemberAccess	avctx -> priv_data		2536680	1					
ANR	2536690	Identifier	avctx		2536680	0					
ANR	2536691	Identifier	priv_data		2536680	1					
ANR	2536692	IdentifierDeclStatement	"int mb_y = jobnr , mb_x ;"	7:4:144:166	2536680	1	True				
ANR	2536693	IdentifierDecl	mb_y = jobnr		2536680	0					
ANR	2536694	IdentifierDeclType	int		2536680	0					
ANR	2536695	Identifier	mb_y		2536680	1					
ANR	2536696	AssignmentExpression	mb_y = jobnr		2536680	2		=			
ANR	2536697	Identifier	jobnr		2536680	0					
ANR	2536698	Identifier	jobnr		2536680	1					
ANR	2536699	IdentifierDecl	mb_x		2536680	1					
ANR	2536700	IdentifierDeclType	int		2536680	0					
ANR	2536701	Identifier	mb_x		2536680	1					
ANR	2536702	ExpressionStatement	ctx = ctx -> thread [ threadnr ]	9:4:173:200	2536680	2	True				
ANR	2536703	AssignmentExpression	ctx = ctx -> thread [ threadnr ]		2536680	0		=			
ANR	2536704	Identifier	ctx		2536680	0					
ANR	2536705	ArrayIndexing	ctx -> thread [ threadnr ]		2536680	1					
ANR	2536706	PtrMemberAccess	ctx -> thread		2536680	0					
ANR	2536707	Identifier	ctx		2536680	0					
ANR	2536708	Identifier	thread		2536680	1					
ANR	2536709	Identifier	threadnr		2536680	1					
ANR	2536710	IfStatement	if ( ctx -> cid_table -> bit_depth == 8 )		2536680	3					
ANR	2536711	Condition	ctx -> cid_table -> bit_depth == 8	11:8:211:240	2536680	0	True				
ANR	2536712	EqualityExpression	ctx -> cid_table -> bit_depth == 8		2536680	0		==			
ANR	2536713	PtrMemberAccess	ctx -> cid_table -> bit_depth		2536680	0					
ANR	2536714	PtrMemberAccess	ctx -> cid_table		2536680	0					
ANR	2536715	Identifier	ctx		2536680	0					
ANR	2536716	Identifier	cid_table		2536680	1					
ANR	2536717	Identifier	bit_depth		2536680	1					
ANR	2536718	PrimaryExpression	8		2536680	1					
ANR	2536719	CompoundStatement		11:8:162:231	2536680	1					
ANR	2536720	IdentifierDeclStatement	uint8_t * pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize ) ;	13:8:254:323	2536680	0	True				
ANR	2536721	IdentifierDecl	* pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536680	0					
ANR	2536722	IdentifierDeclType	uint8_t *		2536680	0					
ANR	2536723	Identifier	pix		2536680	1					
ANR	2536724	AssignmentExpression	* pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536680	2		=			
ANR	2536725	Identifier	pix		2536680	0					
ANR	2536726	AdditiveExpression	ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536680	1		+			
ANR	2536727	ArrayIndexing	ctx -> thread [ 0 ] -> src [ 0 ]		2536680	0					
ANR	2536728	PtrMemberAccess	ctx -> thread [ 0 ] -> src		2536680	0					
ANR	2536729	ArrayIndexing	ctx -> thread [ 0 ]		2536680	0					
ANR	2536730	PtrMemberAccess	ctx -> thread		2536680	0					
ANR	2536731	Identifier	ctx		2536680	0					
ANR	2536732	Identifier	thread		2536680	1					
ANR	2536733	PrimaryExpression	0		2536680	1					
ANR	2536734	Identifier	src		2536680	1					
ANR	2536735	PrimaryExpression	0		2536680	1					
ANR	2536736	MultiplicativeExpression	( mb_y << 4 ) * ctx -> m . linesize		2536680	1		*			
ANR	2536737	ShiftExpression	mb_y << 4		2536680	0		<<			
ANR	2536738	Identifier	mb_y		2536680	0					
ANR	2536739	PrimaryExpression	4		2536680	1					
ANR	2536740	MemberAccess	ctx -> m . linesize		2536680	1					
ANR	2536741	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536742	Identifier	ctx		2536680	0					
ANR	2536743	Identifier	m		2536680	1					
ANR	2536744	Identifier	linesize		2536680	1					
ANR	2536745	ForStatement	"for ( mb_x = 0 ; mb_x < ctx -> m . mb_width ; ++ mb_x , pix += 16 )"		2536680	1					
ANR	2536746	ForInit	mb_x = 0 ;	15:13:339:347	2536680	0	True				
ANR	2536747	AssignmentExpression	mb_x = 0		2536680	0		=			
ANR	2536748	Identifier	mb_x		2536680	0					
ANR	2536749	PrimaryExpression	0		2536680	1					
ANR	2536750	Condition	mb_x < ctx -> m . mb_width	15:23:349:370	2536680	1	True				
ANR	2536751	RelationalExpression	mb_x < ctx -> m . mb_width		2536680	0		<			
ANR	2536752	Identifier	mb_x		2536680	0					
ANR	2536753	MemberAccess	ctx -> m . mb_width		2536680	1					
ANR	2536754	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536755	Identifier	ctx		2536680	0					
ANR	2536756	Identifier	m		2536680	1					
ANR	2536757	Identifier	mb_width		2536680	1					
ANR	2536758	Expression	"++ mb_x , pix += 16"	15:47:373:389	2536680	2	True				
ANR	2536759	UnaryExpression	++ mb_x		2536680	0					
ANR	2536760	IncDec	++		2536680	0					
ANR	2536761	Identifier	mb_x		2536680	1					
ANR	2536762	AssignmentExpression	pix += 16		2536680	1		+=			
ANR	2536763	Identifier	pix		2536680	0					
ANR	2536764	PrimaryExpression	16		2536680	1					
ANR	2536765	CompoundStatement		19:12:439:530	2536680	3					
ANR	2536766	IdentifierDeclStatement	unsigned mb = mb_y * ctx -> m . mb_width + mb_x ;	17:12:407:451	2536680	0	True				
ANR	2536767	IdentifierDecl	mb = mb_y * ctx -> m . mb_width + mb_x		2536680	0					
ANR	2536768	IdentifierDeclType	unsigned		2536680	0					
ANR	2536769	Identifier	mb		2536680	1					
ANR	2536770	AssignmentExpression	mb = mb_y * ctx -> m . mb_width + mb_x		2536680	2		=			
ANR	2536771	Identifier	mb		2536680	0					
ANR	2536772	AdditiveExpression	mb_y * ctx -> m . mb_width + mb_x		2536680	1		+			
ANR	2536773	MultiplicativeExpression	mb_y * ctx -> m . mb_width		2536680	0		*			
ANR	2536774	Identifier	mb_y		2536680	0					
ANR	2536775	MemberAccess	ctx -> m . mb_width		2536680	1					
ANR	2536776	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536777	Identifier	ctx		2536680	0					
ANR	2536778	Identifier	m		2536680	1					
ANR	2536779	Identifier	mb_width		2536680	1					
ANR	2536780	Identifier	mb_x		2536680	1					
ANR	2536781	IdentifierDeclStatement	"int sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize ) ;"	19:12:466:516	2536680	1	True				
ANR	2536782	IdentifierDecl	"sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536680	0					
ANR	2536783	IdentifierDeclType	int		2536680	0					
ANR	2536784	Identifier	sum		2536680	1					
ANR	2536785	AssignmentExpression	"sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536680	2		=			
ANR	2536786	Identifier	sum		2536680	0					
ANR	2536787	CallExpression	"ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536680	1					
ANR	2536788	Callee	ctx -> m . dsp . pix_sum		2536680	0					
ANR	2536789	MemberAccess	ctx -> m . dsp . pix_sum		2536680	0					
ANR	2536790	MemberAccess	ctx -> m . dsp		2536680	0					
ANR	2536791	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536792	Identifier	ctx		2536680	0					
ANR	2536793	Identifier	m		2536680	1					
ANR	2536794	Identifier	dsp		2536680	1					
ANR	2536795	Identifier	pix_sum		2536680	1					
ANR	2536796	ArgumentList	pix		2536680	1					
ANR	2536797	Argument	pix		2536680	0					
ANR	2536798	Identifier	pix		2536680	0					
ANR	2536799	Argument	ctx -> m . linesize		2536680	1					
ANR	2536800	MemberAccess	ctx -> m . linesize		2536680	0					
ANR	2536801	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536802	Identifier	ctx		2536680	0					
ANR	2536803	Identifier	m		2536680	1					
ANR	2536804	Identifier	linesize		2536680	1					
ANR	2536805	IdentifierDeclStatement	"int varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8 ;"	21:12:531:622	2536680	2	True				
ANR	2536806	IdentifierDecl	"varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536680	0					
ANR	2536807	IdentifierDeclType	int		2536680	0					
ANR	2536808	Identifier	varc		2536680	1					
ANR	2536809	AssignmentExpression	"varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536680	2		=			
ANR	2536810	Identifier	varc		2536680	0					
ANR	2536811	ShiftExpression	"( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536680	1		>>			
ANR	2536812	AdditiveExpression	"ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128"		2536680	0		-			
ANR	2536813	CallExpression	"ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize )"		2536680	0					
ANR	2536814	Callee	ctx -> m . dsp . pix_norm1		2536680	0					
ANR	2536815	MemberAccess	ctx -> m . dsp . pix_norm1		2536680	0					
ANR	2536816	MemberAccess	ctx -> m . dsp		2536680	0					
ANR	2536817	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536818	Identifier	ctx		2536680	0					
ANR	2536819	Identifier	m		2536680	1					
ANR	2536820	Identifier	dsp		2536680	1					
ANR	2536821	Identifier	pix_norm1		2536680	1					
ANR	2536822	ArgumentList	pix		2536680	1					
ANR	2536823	Argument	pix		2536680	0					
ANR	2536824	Identifier	pix		2536680	0					
ANR	2536825	Argument	ctx -> m . linesize		2536680	1					
ANR	2536826	MemberAccess	ctx -> m . linesize		2536680	0					
ANR	2536827	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536828	Identifier	ctx		2536680	0					
ANR	2536829	Identifier	m		2536680	1					
ANR	2536830	Identifier	linesize		2536680	1					
ANR	2536831	AdditiveExpression	( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128		2536680	1		+			
ANR	2536832	ShiftExpression	( ( unsigned ) ( sum * sum ) ) >> 8		2536680	0		>>			
ANR	2536833	CastExpression	( unsigned ) ( sum * sum )		2536680	0					
ANR	2536834	CastTarget	unsigned		2536680	0					
ANR	2536835	MultiplicativeExpression	sum * sum		2536680	1		*			
ANR	2536836	Identifier	sum		2536680	0					
ANR	2536837	Identifier	sum		2536680	1					
ANR	2536838	PrimaryExpression	8		2536680	1					
ANR	2536839	PrimaryExpression	128		2536680	1					
ANR	2536840	PrimaryExpression	8		2536680	1					
ANR	2536841	ExpressionStatement	ctx -> mb_cmp [ mb ] . value = varc	23:12:637:665	2536680	3	True				
ANR	2536842	AssignmentExpression	ctx -> mb_cmp [ mb ] . value = varc		2536680	0		=			
ANR	2536843	MemberAccess	ctx -> mb_cmp [ mb ] . value		2536680	0					
ANR	2536844	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536680	0					
ANR	2536845	PtrMemberAccess	ctx -> mb_cmp		2536680	0					
ANR	2536846	Identifier	ctx		2536680	0					
ANR	2536847	Identifier	mb_cmp		2536680	1					
ANR	2536848	Identifier	mb		2536680	1					
ANR	2536849	Identifier	value		2536680	1					
ANR	2536850	Identifier	varc		2536680	1					
ANR	2536851	ExpressionStatement	ctx -> mb_cmp [ mb ] . mb = mb	25:12:680:703	2536680	4	True				
ANR	2536852	AssignmentExpression	ctx -> mb_cmp [ mb ] . mb = mb		2536680	0		=			
ANR	2536853	MemberAccess	ctx -> mb_cmp [ mb ] . mb		2536680	0					
ANR	2536854	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536680	0					
ANR	2536855	PtrMemberAccess	ctx -> mb_cmp		2536680	0					
ANR	2536856	Identifier	ctx		2536680	0					
ANR	2536857	Identifier	mb_cmp		2536680	1					
ANR	2536858	Identifier	mb		2536680	1					
ANR	2536859	Identifier	mb		2536680	1					
ANR	2536860	Identifier	mb		2536680	1					
ANR	2536861	ElseStatement	else		2536680	0					
ANR	2536862	CompoundStatement		29:8:657:698	2536680	0					
ANR	2536863	IdentifierDeclStatement	int const linesize = ctx -> m . linesize >> 1 ;	31:8:749:790	2536680	0	True				
ANR	2536864	IdentifierDecl	linesize = ctx -> m . linesize >> 1		2536680	0					
ANR	2536865	IdentifierDeclType	int const		2536680	0					
ANR	2536866	Identifier	linesize		2536680	1					
ANR	2536867	AssignmentExpression	linesize = ctx -> m . linesize >> 1		2536680	2		=			
ANR	2536868	Identifier	linesize		2536680	0					
ANR	2536869	ShiftExpression	ctx -> m . linesize >> 1		2536680	1		>>			
ANR	2536870	MemberAccess	ctx -> m . linesize		2536680	0					
ANR	2536871	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536872	Identifier	ctx		2536680	0					
ANR	2536873	Identifier	m		2536680	1					
ANR	2536874	Identifier	linesize		2536680	1					
ANR	2536875	PrimaryExpression	1		2536680	1					
ANR	2536876	ForStatement	for ( mb_x = 0 ; mb_x < ctx -> m . mb_width ; ++ mb_x )		2536680	1					
ANR	2536877	ForInit	mb_x = 0 ;	33:13:806:814	2536680	0	True				
ANR	2536878	AssignmentExpression	mb_x = 0		2536680	0		=			
ANR	2536879	Identifier	mb_x		2536680	0					
ANR	2536880	PrimaryExpression	0		2536680	1					
ANR	2536881	Condition	mb_x < ctx -> m . mb_width	33:23:816:837	2536680	1	True				
ANR	2536882	RelationalExpression	mb_x < ctx -> m . mb_width		2536680	0		<			
ANR	2536883	Identifier	mb_x		2536680	0					
ANR	2536884	MemberAccess	ctx -> m . mb_width		2536680	1					
ANR	2536885	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536886	Identifier	ctx		2536680	0					
ANR	2536887	Identifier	m		2536680	1					
ANR	2536888	Identifier	mb_width		2536680	1					
ANR	2536889	UnaryExpression	++ mb_x	33:47:840:845	2536680	2	True				
ANR	2536890	IncDec	++		2536680	0					
ANR	2536891	Identifier	mb_x		2536680	1					
ANR	2536892	CompoundStatement		43:12:1020:1028	2536680	3					
ANR	2536893	IdentifierDeclStatement	uint16_t * pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 ) ;	35:12:863:953	2536680	0	True				
ANR	2536894	IdentifierDecl	* pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536680	0					
ANR	2536895	IdentifierDeclType	uint16_t *		2536680	0					
ANR	2536896	Identifier	pix		2536680	1					
ANR	2536897	AssignmentExpression	* pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536680	2		=			
ANR	2536898	Identifier	pix		2536680	0					
ANR	2536899	AdditiveExpression	( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536680	1		+			
ANR	2536900	CastExpression	( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ]		2536680	0					
ANR	2536901	CastTarget	uint16_t *		2536680	0					
ANR	2536902	ArrayIndexing	ctx -> thread [ 0 ] -> src [ 0 ]		2536680	1					
ANR	2536903	PtrMemberAccess	ctx -> thread [ 0 ] -> src		2536680	0					
ANR	2536904	ArrayIndexing	ctx -> thread [ 0 ]		2536680	0					
ANR	2536905	PtrMemberAccess	ctx -> thread		2536680	0					
ANR	2536906	Identifier	ctx		2536680	0					
ANR	2536907	Identifier	thread		2536680	1					
ANR	2536908	PrimaryExpression	0		2536680	1					
ANR	2536909	Identifier	src		2536680	1					
ANR	2536910	PrimaryExpression	0		2536680	1					
ANR	2536911	AdditiveExpression	( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536680	1		+			
ANR	2536912	MultiplicativeExpression	( mb_y << 4 ) * linesize		2536680	0		*			
ANR	2536913	ShiftExpression	mb_y << 4		2536680	0		<<			
ANR	2536914	Identifier	mb_y		2536680	0					
ANR	2536915	PrimaryExpression	4		2536680	1					
ANR	2536916	Identifier	linesize		2536680	1					
ANR	2536917	ShiftExpression	mb_x << 4		2536680	1		<<			
ANR	2536918	Identifier	mb_x		2536680	0					
ANR	2536919	PrimaryExpression	4		2536680	1					
ANR	2536920	IdentifierDeclStatement	unsigned mb = mb_y * ctx -> m . mb_width + mb_x ;	37:12:968:1012	2536680	1	True				
ANR	2536921	IdentifierDecl	mb = mb_y * ctx -> m . mb_width + mb_x		2536680	0					
ANR	2536922	IdentifierDeclType	unsigned		2536680	0					
ANR	2536923	Identifier	mb		2536680	1					
ANR	2536924	AssignmentExpression	mb = mb_y * ctx -> m . mb_width + mb_x		2536680	2		=			
ANR	2536925	Identifier	mb		2536680	0					
ANR	2536926	AdditiveExpression	mb_y * ctx -> m . mb_width + mb_x		2536680	1		+			
ANR	2536927	MultiplicativeExpression	mb_y * ctx -> m . mb_width		2536680	0		*			
ANR	2536928	Identifier	mb_y		2536680	0					
ANR	2536929	MemberAccess	ctx -> m . mb_width		2536680	1					
ANR	2536930	PtrMemberAccess	ctx -> m		2536680	0					
ANR	2536931	Identifier	ctx		2536680	0					
ANR	2536932	Identifier	m		2536680	1					
ANR	2536933	Identifier	mb_width		2536680	1					
ANR	2536934	Identifier	mb_x		2536680	1					
ANR	2536935	IdentifierDeclStatement	int sum = 0 ;	39:12:1027:1038	2536680	2	True				
ANR	2536936	IdentifierDecl	sum = 0		2536680	0					
ANR	2536937	IdentifierDeclType	int		2536680	0					
ANR	2536938	Identifier	sum		2536680	1					
ANR	2536939	AssignmentExpression	sum = 0		2536680	2		=			
ANR	2536940	Identifier	sum		2536680	0					
ANR	2536941	PrimaryExpression	0		2536680	1					
ANR	2536942	IdentifierDeclStatement	int sqsum = 0 ;	41:12:1053:1066	2536680	3	True				
ANR	2536943	IdentifierDecl	sqsum = 0		2536680	0					
ANR	2536944	IdentifierDeclType	int		2536680	0					
ANR	2536945	Identifier	sqsum		2536680	1					
ANR	2536946	AssignmentExpression	sqsum = 0		2536680	2		=			
ANR	2536947	Identifier	sqsum		2536680	0					
ANR	2536948	PrimaryExpression	0		2536680	1					
ANR	2536949	IdentifierDeclStatement	"int mean , sqmean ;"	43:12:1081:1097	2536680	4	True				
ANR	2536950	IdentifierDecl	mean		2536680	0					
ANR	2536951	IdentifierDeclType	int		2536680	0					
ANR	2536952	Identifier	mean		2536680	1					
ANR	2536953	IdentifierDecl	sqmean		2536680	1					
ANR	2536954	IdentifierDeclType	int		2536680	0					
ANR	2536955	Identifier	sqmean		2536680	1					
ANR	2536956	IdentifierDeclStatement	"int i , j ;"	45:12:1112:1120	2536680	5	True				
ANR	2536957	IdentifierDecl	i		2536680	0					
ANR	2536958	IdentifierDeclType	int		2536680	0					
ANR	2536959	Identifier	i		2536680	1					
ANR	2536960	IdentifierDecl	j		2536680	1					
ANR	2536961	IdentifierDeclType	int		2536680	0					
ANR	2536962	Identifier	j		2536680	1					
ANR	2536963	ForStatement	for ( i = 0 ; i < 16 ; ++ i )		2536680	6					
ANR	2536964	ForInit	i = 0 ;	49:17:1219:1224	2536680	0	True				
ANR	2536965	AssignmentExpression	i = 0		2536680	0		=			
ANR	2536966	Identifier	i		2536680	0					
ANR	2536967	PrimaryExpression	0		2536680	1					
ANR	2536968	Condition	i < 16	49:24:1226:1231	2536680	1	True				
ANR	2536969	RelationalExpression	i < 16		2536680	0		<			
ANR	2536970	Identifier	i		2536680	0					
ANR	2536971	PrimaryExpression	16		2536680	1					
ANR	2536972	UnaryExpression	++ i	49:32:1234:1236	2536680	2	True				
ANR	2536973	IncDec	++		2536680	0					
ANR	2536974	Identifier	i		2536680	1					
ANR	2536975	CompoundStatement		47:37:1147:1147	2536680	3					
ANR	2536976	ForStatement	for ( j = 0 ; j < 16 ; ++ j )		2536680	0					
ANR	2536977	ForInit	j = 0 ;	51:21:1263:1268	2536680	0	True				
ANR	2536978	AssignmentExpression	j = 0		2536680	0		=			
ANR	2536979	Identifier	j		2536680	0					
ANR	2536980	PrimaryExpression	0		2536680	1					
ANR	2536981	Condition	j < 16	51:28:1270:1275	2536680	1	True				
ANR	2536982	RelationalExpression	j < 16		2536680	0		<			
ANR	2536983	Identifier	j		2536680	0					
ANR	2536984	PrimaryExpression	16		2536680	1					
ANR	2536985	UnaryExpression	++ j	51:36:1278:1280	2536680	2	True				
ANR	2536986	IncDec	++		2536680	0					
ANR	2536987	Identifier	j		2536680	1					
ANR	2536988	CompoundStatement		53:20:1275:1315	2536680	3					
ANR	2536989	IdentifierDeclStatement	int const sample = ( unsigned ) pix [ j ] >> 6 ;	55:20:1367:1407	2536680	0	True				
ANR	2536990	IdentifierDecl	sample = ( unsigned ) pix [ j ] >> 6		2536680	0					
ANR	2536991	IdentifierDeclType	int const		2536680	0					
ANR	2536992	Identifier	sample		2536680	1					
ANR	2536993	AssignmentExpression	sample = ( unsigned ) pix [ j ] >> 6		2536680	2		=			
ANR	2536994	Identifier	sample		2536680	0					
ANR	2536995	ShiftExpression	( unsigned ) pix [ j ] >> 6		2536680	1		>>			
ANR	2536996	CastExpression	( unsigned ) pix [ j ]		2536680	0					
ANR	2536997	CastTarget	unsigned		2536680	0					
ANR	2536998	ArrayIndexing	pix [ j ]		2536680	1					
ANR	2536999	Identifier	pix		2536680	0					
ANR	2537000	Identifier	j		2536680	1					
ANR	2537001	PrimaryExpression	6		2536680	1					
ANR	2537002	ExpressionStatement	sum += sample	57:20:1430:1443	2536680	1	True				
ANR	2537003	AssignmentExpression	sum += sample		2536680	0		+=			
ANR	2537004	Identifier	sum		2536680	0					
ANR	2537005	Identifier	sample		2536680	1					
ANR	2537006	ExpressionStatement	sqsum += sample * sample	59:20:1466:1490	2536680	2	True				
ANR	2537007	AssignmentExpression	sqsum += sample * sample		2536680	0		+=			
ANR	2537008	Identifier	sqsum		2536680	0					
ANR	2537009	MultiplicativeExpression	sample * sample		2536680	1		*			
ANR	2537010	Identifier	sample		2536680	0					
ANR	2537011	Identifier	sample		2536680	1					
ANR	2537012	ExpressionStatement	pix += linesize	65:16:1609:1624	2536680	1	True				
ANR	2537013	AssignmentExpression	pix += linesize		2536680	0		+=			
ANR	2537014	Identifier	pix		2536680	0					
ANR	2537015	Identifier	linesize		2536680	1					
ANR	2537016	ExpressionStatement	mean = sum >> 8	69:12:1654:1669	2536680	7	True				
ANR	2537017	AssignmentExpression	mean = sum >> 8		2536680	0		=			
ANR	2537018	Identifier	mean		2536680	0					
ANR	2537019	ShiftExpression	sum >> 8		2536680	1		>>			
ANR	2537020	Identifier	sum		2536680	0					
ANR	2537021	PrimaryExpression	8		2536680	1					
ANR	2537022	ExpressionStatement	sqmean = sqsum >> 8	71:12:1700:1719	2536680	8	True				
ANR	2537023	AssignmentExpression	sqmean = sqsum >> 8		2536680	0		=			
ANR	2537024	Identifier	sqmean		2536680	0					
ANR	2537025	ShiftExpression	sqsum >> 8		2536680	1		>>			
ANR	2537026	Identifier	sqsum		2536680	0					
ANR	2537027	PrimaryExpression	8		2536680	1					
ANR	2537028	ExpressionStatement	ctx -> mb_cmp [ mb ] . value = sqmean - mean * mean	73:12:1734:1778	2536680	9	True				
ANR	2537029	AssignmentExpression	ctx -> mb_cmp [ mb ] . value = sqmean - mean * mean		2536680	0		=			
ANR	2537030	MemberAccess	ctx -> mb_cmp [ mb ] . value		2536680	0					
ANR	2537031	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536680	0					
ANR	2537032	PtrMemberAccess	ctx -> mb_cmp		2536680	0					
ANR	2537033	Identifier	ctx		2536680	0					
ANR	2537034	Identifier	mb_cmp		2536680	1					
ANR	2537035	Identifier	mb		2536680	1					
ANR	2537036	Identifier	value		2536680	1					
ANR	2537037	AdditiveExpression	sqmean - mean * mean		2536680	1		-			
ANR	2537038	Identifier	sqmean		2536680	0					
ANR	2537039	MultiplicativeExpression	mean * mean		2536680	1		*			
ANR	2537040	Identifier	mean		2536680	0					
ANR	2537041	Identifier	mean		2536680	1					
ANR	2537042	ExpressionStatement	ctx -> mb_cmp [ mb ] . mb = mb	75:12:1793:1816	2536680	10	True				
ANR	2537043	AssignmentExpression	ctx -> mb_cmp [ mb ] . mb = mb		2536680	0		=			
ANR	2537044	MemberAccess	ctx -> mb_cmp [ mb ] . mb		2536680	0					
ANR	2537045	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536680	0					
ANR	2537046	PtrMemberAccess	ctx -> mb_cmp		2536680	0					
ANR	2537047	Identifier	ctx		2536680	0					
ANR	2537048	Identifier	mb_cmp		2536680	1					
ANR	2537049	Identifier	mb		2536680	1					
ANR	2537050	Identifier	mb		2536680	1					
ANR	2537051	Identifier	mb		2536680	1					
ANR	2537052	ReturnStatement	return 0 ;	81:4:1841:1849	2536680	4	True				
ANR	2537053	PrimaryExpression	0		2536680	0					
ANR	2537054	ReturnType	static int		2536680	1					
ANR	2537055	Identifier	dnxhd_mb_var_thread		2536680	2					
ANR	2537056	ParameterList	"AVCodecContext * avctx , void * arg , int jobnr , int threadnr"		2536680	3					
ANR	2537057	Parameter	AVCodecContext * avctx	1:31:31:51	2536680	0	True				
ANR	2537058	ParameterType	AVCodecContext *		2536680	0					
ANR	2537059	Identifier	avctx		2536680	1					
ANR	2537060	Parameter	void * arg	1:54:54:62	2536680	1	True				
ANR	2537061	ParameterType	void *		2536680	0					
ANR	2537062	Identifier	arg		2536680	1					
ANR	2537063	Parameter	int jobnr	1:65:65:73	2536680	2	True				
ANR	2537064	ParameterType	int		2536680	0					
ANR	2537065	Identifier	jobnr		2536680	1					
ANR	2537066	Parameter	int threadnr	1:76:76:87	2536680	3	True				
ANR	2537067	ParameterType	int		2536680	0					
ANR	2537068	Identifier	threadnr		2536680	1					
ANR	2537069	CFGEntryNode	ENTRY		2536680		True				
ANR	2537070	CFGExitNode	EXIT		2536680		True				
ANR	2537071	Symbol	ctx -> mb_cmp		2536680						
ANR	2537072	Symbol	ctx -> mb_cmp [ mb ] . value		2536680						
ANR	2537073	Symbol	jobnr		2536680						
ANR	2537074	Symbol	* pix		2536680						
ANR	2537075	Symbol	sum		2536680						
ANR	2537076	Symbol	sqmean		2536680						
ANR	2537077	Symbol	ctx -> mb_cmp [ mb ] . mb		2536680						
ANR	2537078	Symbol	ctx -> cid_table		2536680						
ANR	2537079	Symbol	ctx -> m		2536680						
ANR	2537080	Symbol	* ctx -> mb_cmp		2536680						
ANR	2537081	Symbol	linesize		2536680						
ANR	2537082	Symbol	ctx -> cid_table -> bit_depth		2536680						
ANR	2537083	Symbol	mb		2536680						
ANR	2537084	Symbol	arg		2536680						
ANR	2537085	Symbol	* ctx -> thread		2536680						
ANR	2537086	Symbol	* mb		2536680						
ANR	2537087	Symbol	threadnr		2536680						
ANR	2537088	Symbol	avctx		2536680						
ANR	2537089	Symbol	* * * * ctx		2536680						
ANR	2537090	Symbol	ctx -> m . dsp		2536680						
ANR	2537091	Symbol	pix		2536680						
ANR	2537092	Symbol	ctx -> m . dsp . pix_norm1		2536680						
ANR	2537093	Symbol	sqsum		2536680						
ANR	2537094	Symbol	ctx -> thread		2536680						
ANR	2537095	Symbol	* * * ctx		2536680						
ANR	2537096	Symbol	ctx		2536680						
ANR	2537097	Symbol	i		2536680						
ANR	2537098	Symbol	* ctx -> thread [ 0 ] -> src		2536680						
ANR	2537099	Symbol	j		2536680						
ANR	2537100	Symbol	varc		2536680						
ANR	2537101	Symbol	avctx -> priv_data		2536680						
ANR	2537102	Symbol	* * ctx -> thread		2536680						
ANR	2537103	Symbol	ctx -> m . mb_width		2536680						
ANR	2537104	Symbol	sample		2536680						
ANR	2537105	Symbol	* ctx		2536680						
ANR	2537106	Symbol	ctx -> thread [ 0 ] -> src		2536680						
ANR	2537107	Symbol	* avctx		2536680						
ANR	2537108	Symbol	* threadnr		2536680						
ANR	2537109	Symbol	ctx -> m . linesize		2536680						
ANR	2537110	Symbol	* j		2536680						
ANR	2537111	Symbol	* * * ctx -> thread		2536680						
ANR	2537112	Symbol	mean		2536680						
ANR	2537113	Symbol	* * ctx		2536680						
ANR	2537114	Symbol	mb_y		2536680						
ANR	2537115	Symbol	mb_x		2536680						
ANR	2537116	Symbol	* ctx -> cid_table		2536680						
ANR	2537117	Symbol	ctx -> m . dsp . pix_sum		2536680						
