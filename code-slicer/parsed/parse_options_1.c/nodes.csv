command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6350634	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_options_1.c								
ANR	6350635	Function	parse_options	1:0:0:920							
ANR	6350636	FunctionDef	"parse_options (void * optctx , int argc , char * * argv , const OptionDef * options , void ( * parse_arg_function ) ( void * , const char * ))"		6350635	0					
ANR	6350637	CompoundStatement		5:0:152:920	6350635	0					
ANR	6350638	IdentifierDeclStatement	const char * opt ;	7:4:159:174	6350635	0	True				
ANR	6350639	IdentifierDecl	* opt		6350635	0					
ANR	6350640	IdentifierDeclType	const char *		6350635	0					
ANR	6350641	Identifier	opt		6350635	1					
ANR	6350642	IdentifierDeclStatement	"int optindex , handleoptions = 1 , ret ;"	9:4:181:217	6350635	1	True				
ANR	6350643	IdentifierDecl	optindex		6350635	0					
ANR	6350644	IdentifierDeclType	int		6350635	0					
ANR	6350645	Identifier	optindex		6350635	1					
ANR	6350646	IdentifierDecl	handleoptions = 1		6350635	1					
ANR	6350647	IdentifierDeclType	int		6350635	0					
ANR	6350648	Identifier	handleoptions		6350635	1					
ANR	6350649	AssignmentExpression	handleoptions = 1		6350635	2		=			
ANR	6350650	Identifier	handleoptions		6350635	0					
ANR	6350651	PrimaryExpression	1		6350635	1					
ANR	6350652	IdentifierDecl	ret		6350635	2					
ANR	6350653	IdentifierDeclType	int		6350635	0					
ANR	6350654	Identifier	ret		6350635	1					
ANR	6350655	ExpressionStatement	"prepare_app_arguments ( & argc , & argv )"	15:4:293:328	6350635	2	True				
ANR	6350656	CallExpression	"prepare_app_arguments ( & argc , & argv )"		6350635	0					
ANR	6350657	Callee	prepare_app_arguments		6350635	0					
ANR	6350658	Identifier	prepare_app_arguments		6350635	0					
ANR	6350659	ArgumentList	& argc		6350635	1					
ANR	6350660	Argument	& argc		6350635	0					
ANR	6350661	UnaryOperationExpression	& argc		6350635	0					
ANR	6350662	UnaryOperator	&		6350635	0					
ANR	6350663	Identifier	argc		6350635	1					
ANR	6350664	Argument	& argv		6350635	1					
ANR	6350665	UnaryOperationExpression	& argv		6350635	0					
ANR	6350666	UnaryOperator	&		6350635	0					
ANR	6350667	Identifier	argv		6350635	1					
ANR	6350668	ExpressionStatement	optindex = 1	21:4:362:374	6350635	3	True				
ANR	6350669	AssignmentExpression	optindex = 1		6350635	0		=			
ANR	6350670	Identifier	optindex		6350635	0					
ANR	6350671	PrimaryExpression	1		6350635	1					
ANR	6350672	WhileStatement	while ( optindex < argc )		6350635	4					
ANR	6350673	Condition	optindex < argc	23:11:388:402	6350635	0	True				
ANR	6350674	RelationalExpression	optindex < argc		6350635	0		<			
ANR	6350675	Identifier	optindex		6350635	0					
ANR	6350676	Identifier	argc		6350635	1					
ANR	6350677	CompoundStatement		19:28:252:252	6350635	1					
ANR	6350678	ExpressionStatement	opt = argv [ optindex ++ ]	25:8:416:438	6350635	0	True				
ANR	6350679	AssignmentExpression	opt = argv [ optindex ++ ]		6350635	0		=			
ANR	6350680	Identifier	opt		6350635	0					
ANR	6350681	ArrayIndexing	argv [ optindex ++ ]		6350635	1					
ANR	6350682	Identifier	argv		6350635	0					
ANR	6350683	PostIncDecOperationExpression	optindex ++		6350635	1					
ANR	6350684	Identifier	optindex		6350635	0					
ANR	6350685	IncDec	++		6350635	1					
ANR	6350686	IfStatement	if ( handleoptions && opt [ 0 ] == '-' && opt [ 1 ] != '\\0' )		6350635	1					
ANR	6350687	Condition	handleoptions && opt [ 0 ] == '-' && opt [ 1 ] != '\\0'	29:12:455:502	6350635	0	True				
ANR	6350688	AndExpression	handleoptions && opt [ 0 ] == '-' && opt [ 1 ] != '\\0'		6350635	0		&&			
ANR	6350689	Identifier	handleoptions		6350635	0					
ANR	6350690	AndExpression	opt [ 0 ] == '-' && opt [ 1 ] != '\\0'		6350635	1		&&			
ANR	6350691	EqualityExpression	opt [ 0 ] == '-'		6350635	0		==			
ANR	6350692	ArrayIndexing	opt [ 0 ]		6350635	0					
ANR	6350693	Identifier	opt		6350635	0					
ANR	6350694	PrimaryExpression	0		6350635	1					
ANR	6350695	PrimaryExpression	'-'		6350635	1					
ANR	6350696	EqualityExpression	opt [ 1 ] != '\\0'		6350635	1		!=			
ANR	6350697	ArrayIndexing	opt [ 1 ]		6350635	0					
ANR	6350698	Identifier	opt		6350635	0					
ANR	6350699	PrimaryExpression	1		6350635	1					
ANR	6350700	PrimaryExpression	'\\0'		6350635	1					
ANR	6350701	CompoundStatement		25:62:352:352	6350635	1					
ANR	6350702	IfStatement	if ( opt [ 1 ] == '-' && opt [ 2 ] == '\\0' )		6350635	0					
ANR	6350703	Condition	opt [ 1 ] == '-' && opt [ 2 ] == '\\0'	31:16:524:554	6350635	0	True				
ANR	6350704	AndExpression	opt [ 1 ] == '-' && opt [ 2 ] == '\\0'		6350635	0		&&			
ANR	6350705	EqualityExpression	opt [ 1 ] == '-'		6350635	0		==			
ANR	6350706	ArrayIndexing	opt [ 1 ]		6350635	0					
ANR	6350707	Identifier	opt		6350635	0					
ANR	6350708	PrimaryExpression	1		6350635	1					
ANR	6350709	PrimaryExpression	'-'		6350635	1					
ANR	6350710	EqualityExpression	opt [ 2 ] == '\\0'		6350635	1		==			
ANR	6350711	ArrayIndexing	opt [ 2 ]		6350635	0					
ANR	6350712	Identifier	opt		6350635	0					
ANR	6350713	PrimaryExpression	2		6350635	1					
ANR	6350714	PrimaryExpression	'\\0'		6350635	1					
ANR	6350715	CompoundStatement		27:49:404:404	6350635	1					
ANR	6350716	ExpressionStatement	handleoptions = 0	33:16:576:593	6350635	0	True				
ANR	6350717	AssignmentExpression	handleoptions = 0		6350635	0		=			
ANR	6350718	Identifier	handleoptions		6350635	0					
ANR	6350719	PrimaryExpression	0		6350635	1					
ANR	6350720	ContinueStatement	continue ;	35:16:612:620	6350635	1	True				
ANR	6350721	ExpressionStatement	opt ++	39:12:650:655	6350635	1	True				
ANR	6350722	PostIncDecOperationExpression	opt ++		6350635	0					
ANR	6350723	Identifier	opt		6350635	0					
ANR	6350724	IncDec	++		6350635	1					
ANR	6350725	IfStatement	"if ( ( ret = parse_option ( optctx , opt , argv [ optindex ] , options ) ) < 0 )"		6350635	2					
ANR	6350726	Condition	"( ret = parse_option ( optctx , opt , argv [ optindex ] , options ) ) < 0"	43:16:676:737	6350635	0	True				
ANR	6350727	RelationalExpression	"( ret = parse_option ( optctx , opt , argv [ optindex ] , options ) ) < 0"		6350635	0		<			
ANR	6350728	AssignmentExpression	"ret = parse_option ( optctx , opt , argv [ optindex ] , options )"		6350635	0		=			
ANR	6350729	Identifier	ret		6350635	0					
ANR	6350730	CallExpression	"parse_option ( optctx , opt , argv [ optindex ] , options )"		6350635	1					
ANR	6350731	Callee	parse_option		6350635	0					
ANR	6350732	Identifier	parse_option		6350635	0					
ANR	6350733	ArgumentList	optctx		6350635	1					
ANR	6350734	Argument	optctx		6350635	0					
ANR	6350735	Identifier	optctx		6350635	0					
ANR	6350736	Argument	opt		6350635	1					
ANR	6350737	Identifier	opt		6350635	0					
ANR	6350738	Argument	argv [ optindex ]		6350635	2					
ANR	6350739	ArrayIndexing	argv [ optindex ]		6350635	0					
ANR	6350740	Identifier	argv		6350635	0					
ANR	6350741	Identifier	optindex		6350635	1					
ANR	6350742	Argument	options		6350635	3					
ANR	6350743	Identifier	options		6350635	0					
ANR	6350744	PrimaryExpression	0		6350635	1					
ANR	6350745	ExpressionStatement	exit ( 1 )	45:16:757:764	6350635	1	True				
ANR	6350746	CallExpression	exit ( 1 )		6350635	0					
ANR	6350747	Callee	exit		6350635	0					
ANR	6350748	Identifier	exit		6350635	0					
ANR	6350749	ArgumentList	1		6350635	1					
ANR	6350750	Argument	1		6350635	0					
ANR	6350751	PrimaryExpression	1		6350635	0					
ANR	6350752	ExpressionStatement	optindex += ret	47:12:779:794	6350635	3	True				
ANR	6350753	AssignmentExpression	optindex += ret		6350635	0		+=			
ANR	6350754	Identifier	optindex		6350635	0					
ANR	6350755	Identifier	ret		6350635	1					
ANR	6350756	ElseStatement	else		6350635	0					
ANR	6350757	CompoundStatement		45:15:659:659	6350635	0					
ANR	6350758	IfStatement	if ( parse_arg_function )		6350635	0					
ANR	6350759	Condition	parse_arg_function	51:16:831:848	6350635	0	True				
ANR	6350760	Identifier	parse_arg_function		6350635	0					
ANR	6350761	ExpressionStatement	"parse_arg_function ( optctx , opt )"	53:16:868:899	6350635	1	True				
ANR	6350762	CallExpression	"parse_arg_function ( optctx , opt )"		6350635	0					
ANR	6350763	Callee	parse_arg_function		6350635	0					
ANR	6350764	Identifier	parse_arg_function		6350635	0					
ANR	6350765	ArgumentList	optctx		6350635	1					
ANR	6350766	Argument	optctx		6350635	0					
ANR	6350767	Identifier	optctx		6350635	0					
ANR	6350768	Argument	opt		6350635	1					
ANR	6350769	Identifier	opt		6350635	0					
ANR	6350770	ReturnType	void		6350635	1					
ANR	6350771	Identifier	parse_options		6350635	2					
ANR	6350772	ParameterList	"void * optctx , int argc , char * * argv , const OptionDef * options , void ( * parse_arg_function ) ( void * , const char * )"		6350635	3					
ANR	6350773	Parameter	void * optctx	1:19:19:30	6350635	0	True				
ANR	6350774	ParameterType	void *		6350635	0					
ANR	6350775	Identifier	optctx		6350635	1					
ANR	6350776	Parameter	int argc	1:33:33:40	6350635	1	True				
ANR	6350777	ParameterType	int		6350635	0					
ANR	6350778	Identifier	argc		6350635	1					
ANR	6350779	Parameter	char * * argv	1:43:43:53	6350635	2	True				
ANR	6350780	ParameterType	char * *		6350635	0					
ANR	6350781	Identifier	argv		6350635	1					
ANR	6350782	Parameter	const OptionDef * options	1:56:56:79	6350635	3	True				
ANR	6350783	ParameterType	const OptionDef *		6350635	0					
ANR	6350784	Identifier	options		6350635	1					
ANR	6350785	Parameter	"void ( * parse_arg_function ) ( void * , const char * )"	3:19:102:148	6350635	4	True				
ANR	6350786	ParameterType	"(( void * , const char * ) void) *"		6350635	0					
ANR	6350787	Identifier	parse_arg_function		6350635	1					
ANR	6350788	CFGEntryNode	ENTRY		6350635		True				
ANR	6350789	CFGExitNode	EXIT		6350635		True				
ANR	6350790	Symbol	argc		6350635						
ANR	6350791	Symbol	ret		6350635						
ANR	6350792	Symbol	parse_option		6350635						
ANR	6350793	Symbol	* argv		6350635						
ANR	6350794	Symbol	argv		6350635						
ANR	6350795	Symbol	handleoptions		6350635						
ANR	6350796	Symbol	& argc		6350635						
ANR	6350797	Symbol	parse_arg_function		6350635						
ANR	6350798	Symbol	* optindex		6350635						
ANR	6350799	Symbol	opt		6350635						
ANR	6350800	Symbol	& argv		6350635						
ANR	6350801	Symbol	optindex		6350635						
ANR	6350802	Symbol	options		6350635						
ANR	6350803	Symbol	* opt		6350635						
ANR	6350804	Symbol	optctx		6350635						
