command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9464184	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ws_snd_decode_frame_0.c								
ANR	9464185	Function	ws_snd_decode_frame	1:0:0:3872							
ANR	9464186	FunctionDef	"ws_snd_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		9464185	0					
ANR	9464187	CompoundStatement		7:0:134:3872	9464185	0					
ANR	9464188	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:141:173	9464185	0	True				
ANR	9464189	IdentifierDecl	* buf = avpkt -> data		9464185	0					
ANR	9464190	IdentifierDeclType	const uint8_t *		9464185	0					
ANR	9464191	Identifier	buf		9464185	1					
ANR	9464192	AssignmentExpression	* buf = avpkt -> data		9464185	2		=			
ANR	9464193	Identifier	buf		9464185	0					
ANR	9464194	PtrMemberAccess	avpkt -> data		9464185	1					
ANR	9464195	Identifier	avpkt		9464185	0					
ANR	9464196	Identifier	data		9464185	1					
ANR	9464197	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:180:206	9464185	1	True				
ANR	9464198	IdentifierDecl	buf_size = avpkt -> size		9464185	0					
ANR	9464199	IdentifierDeclType	int		9464185	0					
ANR	9464200	Identifier	buf_size		9464185	1					
ANR	9464201	AssignmentExpression	buf_size = avpkt -> size		9464185	2		=			
ANR	9464202	Identifier	buf_size		9464185	0					
ANR	9464203	PtrMemberAccess	avpkt -> size		9464185	1					
ANR	9464204	Identifier	avpkt		9464185	0					
ANR	9464205	Identifier	size		9464185	1					
ANR	9464206	IdentifierDeclStatement	"int in_size , out_size ;"	17:4:258:279	9464185	2	True				
ANR	9464207	IdentifierDecl	in_size		9464185	0					
ANR	9464208	IdentifierDeclType	int		9464185	0					
ANR	9464209	Identifier	in_size		9464185	1					
ANR	9464210	IdentifierDecl	out_size		9464185	1					
ANR	9464211	IdentifierDeclType	int		9464185	0					
ANR	9464212	Identifier	out_size		9464185	1					
ANR	9464213	IdentifierDeclStatement	int sample = 128 ;	19:4:286:302	9464185	3	True				
ANR	9464214	IdentifierDecl	sample = 128		9464185	0					
ANR	9464215	IdentifierDeclType	int		9464185	0					
ANR	9464216	Identifier	sample		9464185	1					
ANR	9464217	AssignmentExpression	sample = 128		9464185	2		=			
ANR	9464218	Identifier	sample		9464185	0					
ANR	9464219	PrimaryExpression	128		9464185	1					
ANR	9464220	IdentifierDeclStatement	int i ;	21:4:309:314	9464185	4	True				
ANR	9464221	IdentifierDecl	i		9464185	0					
ANR	9464222	IdentifierDeclType	int		9464185	0					
ANR	9464223	Identifier	i		9464185	1					
ANR	9464224	IdentifierDeclStatement	uint8_t * samples = data ;	23:4:321:344	9464185	5	True				
ANR	9464225	IdentifierDecl	* samples = data		9464185	0					
ANR	9464226	IdentifierDeclType	uint8_t *		9464185	0					
ANR	9464227	Identifier	samples		9464185	1					
ANR	9464228	AssignmentExpression	* samples = data		9464185	2		=			
ANR	9464229	Identifier	data		9464185	0					
ANR	9464230	Identifier	data		9464185	1					
ANR	9464231	IdentifierDeclStatement	uint8_t * samples_end ;	25:4:351:371	9464185	6	True				
ANR	9464232	IdentifierDecl	* samples_end		9464185	0					
ANR	9464233	IdentifierDeclType	uint8_t *		9464185	0					
ANR	9464234	Identifier	samples_end		9464185	1					
ANR	9464235	IfStatement	if ( ! buf_size )		9464185	7					
ANR	9464236	Condition	! buf_size	29:8:384:392	9464185	0	True				
ANR	9464237	UnaryOperationExpression	! buf_size		9464185	0					
ANR	9464238	UnaryOperator	!		9464185	0					
ANR	9464239	Identifier	buf_size		9464185	1					
ANR	9464240	ReturnStatement	return 0 ;	31:8:404:412	9464185	1	True				
ANR	9464241	PrimaryExpression	0		9464185	0					
ANR	9464242	IfStatement	if ( buf_size < 4 )		9464185	8					
ANR	9464243	Condition	buf_size < 4	35:8:425:436	9464185	0	True				
ANR	9464244	RelationalExpression	buf_size < 4		9464185	0		<			
ANR	9464245	Identifier	buf_size		9464185	0					
ANR	9464246	PrimaryExpression	4		9464185	1					
ANR	9464247	CompoundStatement		29:22:304:304	9464185	1					
ANR	9464248	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"	37:8:450:502	9464185	0	True				
ANR	9464249	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"		9464185	0					
ANR	9464250	Callee	av_log		9464185	0					
ANR	9464251	Identifier	av_log		9464185	0					
ANR	9464252	ArgumentList	avctx		9464185	1					
ANR	9464253	Argument	avctx		9464185	0					
ANR	9464254	Identifier	avctx		9464185	0					
ANR	9464255	Argument	AV_LOG_ERROR		9464185	1					
ANR	9464256	Identifier	AV_LOG_ERROR		9464185	0					
ANR	9464257	Argument	"""packet is too small\\n"""		9464185	2					
ANR	9464258	PrimaryExpression	"""packet is too small\\n"""		9464185	0					
ANR	9464259	ReturnStatement	return AVERROR ( EINVAL ) ;	39:8:513:535	9464185	1	True				
ANR	9464260	CallExpression	AVERROR ( EINVAL )		9464185	0					
ANR	9464261	Callee	AVERROR		9464185	0					
ANR	9464262	Identifier	AVERROR		9464185	0					
ANR	9464263	ArgumentList	EINVAL		9464185	1					
ANR	9464264	Argument	EINVAL		9464185	0					
ANR	9464265	Identifier	EINVAL		9464185	0					
ANR	9464266	ExpressionStatement	out_size = AV_RL16 ( & buf [ 0 ] )	45:4:551:578	9464185	9	True				
ANR	9464267	AssignmentExpression	out_size = AV_RL16 ( & buf [ 0 ] )		9464185	0		=			
ANR	9464268	Identifier	out_size		9464185	0					
ANR	9464269	CallExpression	AV_RL16 ( & buf [ 0 ] )		9464185	1					
ANR	9464270	Callee	AV_RL16		9464185	0					
ANR	9464271	Identifier	AV_RL16		9464185	0					
ANR	9464272	ArgumentList	& buf [ 0 ]		9464185	1					
ANR	9464273	Argument	& buf [ 0 ]		9464185	0					
ANR	9464274	UnaryOperationExpression	& buf [ 0 ]		9464185	0					
ANR	9464275	UnaryOperator	&		9464185	0					
ANR	9464276	ArrayIndexing	buf [ 0 ]		9464185	1					
ANR	9464277	Identifier	buf		9464185	0					
ANR	9464278	PrimaryExpression	0		9464185	1					
ANR	9464279	ExpressionStatement	in_size = AV_RL16 ( & buf [ 2 ] )	47:4:585:611	9464185	10	True				
ANR	9464280	AssignmentExpression	in_size = AV_RL16 ( & buf [ 2 ] )		9464185	0		=			
ANR	9464281	Identifier	in_size		9464185	0					
ANR	9464282	CallExpression	AV_RL16 ( & buf [ 2 ] )		9464185	1					
ANR	9464283	Callee	AV_RL16		9464185	0					
ANR	9464284	Identifier	AV_RL16		9464185	0					
ANR	9464285	ArgumentList	& buf [ 2 ]		9464185	1					
ANR	9464286	Argument	& buf [ 2 ]		9464185	0					
ANR	9464287	UnaryOperationExpression	& buf [ 2 ]		9464185	0					
ANR	9464288	UnaryOperator	&		9464185	0					
ANR	9464289	ArrayIndexing	buf [ 2 ]		9464185	1					
ANR	9464290	Identifier	buf		9464185	0					
ANR	9464291	PrimaryExpression	2		9464185	1					
ANR	9464292	ExpressionStatement	buf += 4	49:4:618:626	9464185	11	True				
ANR	9464293	AssignmentExpression	buf += 4		9464185	0		+=			
ANR	9464294	Identifier	buf		9464185	0					
ANR	9464295	PrimaryExpression	4		9464185	1					
ANR	9464296	IfStatement	if ( out_size > * data_size )		9464185	12					
ANR	9464297	Condition	out_size > * data_size	53:8:639:659	9464185	0	True				
ANR	9464298	RelationalExpression	out_size > * data_size		9464185	0		>			
ANR	9464299	Identifier	out_size		9464185	0					
ANR	9464300	UnaryOperationExpression	* data_size		9464185	1					
ANR	9464301	UnaryOperator	*		9464185	0					
ANR	9464302	Identifier	data_size		9464185	1					
ANR	9464303	CompoundStatement		47:31:527:527	9464185	1					
ANR	9464304	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too large to fit in buffer\\n"" )"	55:8:673:741	9464185	0	True				
ANR	9464305	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too large to fit in buffer\\n"" )"		9464185	0					
ANR	9464306	Callee	av_log		9464185	0					
ANR	9464307	Identifier	av_log		9464185	0					
ANR	9464308	ArgumentList	avctx		9464185	1					
ANR	9464309	Argument	avctx		9464185	0					
ANR	9464310	Identifier	avctx		9464185	0					
ANR	9464311	Argument	AV_LOG_ERROR		9464185	1					
ANR	9464312	Identifier	AV_LOG_ERROR		9464185	0					
ANR	9464313	Argument	"""Frame is too large to fit in buffer\\n"""		9464185	2					
ANR	9464314	PrimaryExpression	"""Frame is too large to fit in buffer\\n"""		9464185	0					
ANR	9464315	ReturnStatement	return - 1 ;	57:8:752:761	9464185	1	True				
ANR	9464316	UnaryOperationExpression	- 1		9464185	0					
ANR	9464317	UnaryOperator	-		9464185	0					
ANR	9464318	PrimaryExpression	1		9464185	1					
ANR	9464319	IfStatement	if ( in_size > buf_size )		9464185	13					
ANR	9464320	Condition	in_size > buf_size	61:8:779:796	9464185	0	True				
ANR	9464321	RelationalExpression	in_size > buf_size		9464185	0		>			
ANR	9464322	Identifier	in_size		9464185	0					
ANR	9464323	Identifier	buf_size		9464185	1					
ANR	9464324	CompoundStatement		55:28:664:664	9464185	1					
ANR	9464325	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame data is larger than input buffer\\n"" )"	63:8:810:881	9464185	0	True				
ANR	9464326	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame data is larger than input buffer\\n"" )"		9464185	0					
ANR	9464327	Callee	av_log		9464185	0					
ANR	9464328	Identifier	av_log		9464185	0					
ANR	9464329	ArgumentList	avctx		9464185	1					
ANR	9464330	Argument	avctx		9464185	0					
ANR	9464331	Identifier	avctx		9464185	0					
ANR	9464332	Argument	AV_LOG_ERROR		9464185	1					
ANR	9464333	Identifier	AV_LOG_ERROR		9464185	0					
ANR	9464334	Argument	"""Frame data is larger than input buffer\\n"""		9464185	2					
ANR	9464335	PrimaryExpression	"""Frame data is larger than input buffer\\n"""		9464185	0					
ANR	9464336	ReturnStatement	return - 1 ;	65:8:892:901	9464185	1	True				
ANR	9464337	UnaryOperationExpression	- 1		9464185	0					
ANR	9464338	UnaryOperator	-		9464185	0					
ANR	9464339	PrimaryExpression	1		9464185	1					
ANR	9464340	ExpressionStatement	samples_end = samples + out_size	69:4:915:947	9464185	14	True				
ANR	9464341	AssignmentExpression	samples_end = samples + out_size		9464185	0		=			
ANR	9464342	Identifier	samples_end		9464185	0					
ANR	9464343	AdditiveExpression	samples + out_size		9464185	1		+			
ANR	9464344	Identifier	samples		9464185	0					
ANR	9464345	Identifier	out_size		9464185	1					
ANR	9464346	IfStatement	if ( in_size == out_size )		9464185	15					
ANR	9464347	Condition	in_size == out_size	73:8:960:978	9464185	0	True				
ANR	9464348	EqualityExpression	in_size == out_size		9464185	0		==			
ANR	9464349	Identifier	in_size		9464185	0					
ANR	9464350	Identifier	out_size		9464185	1					
ANR	9464351	CompoundStatement		67:29:846:846	9464185	1					
ANR	9464352	ForStatement	for ( i = 0 ; i < out_size ; i ++ )		9464185	0					
ANR	9464353	ForInit	i = 0 ;	75:13:997:1002	9464185	0	True				
ANR	9464354	AssignmentExpression	i = 0		9464185	0		=			
ANR	9464355	Identifier	i		9464185	0					
ANR	9464356	PrimaryExpression	0		9464185	1					
ANR	9464357	Condition	i < out_size	75:20:1004:1015	9464185	1	True				
ANR	9464358	RelationalExpression	i < out_size		9464185	0		<			
ANR	9464359	Identifier	i		9464185	0					
ANR	9464360	Identifier	out_size		9464185	1					
ANR	9464361	PostIncDecOperationExpression	i ++	75:34:1018:1020	9464185	2	True				
ANR	9464362	Identifier	i		9464185	0					
ANR	9464363	IncDec	++		9464185	1					
ANR	9464364	ExpressionStatement	* samples ++ = * buf ++	77:12:1036:1055	9464185	3	True				
ANR	9464365	AssignmentExpression	* samples ++ = * buf ++		9464185	0		=			
ANR	9464366	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464367	UnaryOperator	*		9464185	0					
ANR	9464368	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464369	Identifier	samples		9464185	0					
ANR	9464370	IncDec	++		9464185	1					
ANR	9464371	UnaryOperationExpression	* buf ++		9464185	1					
ANR	9464372	UnaryOperator	*		9464185	0					
ANR	9464373	PostIncDecOperationExpression	buf ++		9464185	1					
ANR	9464374	Identifier	buf		9464185	0					
ANR	9464375	IncDec	++		9464185	1					
ANR	9464376	ExpressionStatement	* data_size = out_size	79:8:1066:1087	9464185	1	True				
ANR	9464377	AssignmentExpression	* data_size = out_size		9464185	0		=			
ANR	9464378	UnaryOperationExpression	* data_size		9464185	0					
ANR	9464379	UnaryOperator	*		9464185	0					
ANR	9464380	Identifier	data_size		9464185	1					
ANR	9464381	Identifier	out_size		9464185	1					
ANR	9464382	ReturnStatement	return buf_size ;	81:8:1098:1113	9464185	2	True				
ANR	9464383	Identifier	buf_size		9464185	0					
ANR	9464384	WhileStatement	while ( samples < samples_end && buf - avpkt -> data < buf_size )		9464185	16					
ANR	9464385	Condition	samples < samples_end && buf - avpkt -> data < buf_size	87:11:1136:1188	9464185	0	True				
ANR	9464386	AndExpression	samples < samples_end && buf - avpkt -> data < buf_size		9464185	0		&&			
ANR	9464387	RelationalExpression	samples < samples_end		9464185	0		<			
ANR	9464388	Identifier	samples		9464185	0					
ANR	9464389	Identifier	samples_end		9464185	1					
ANR	9464390	RelationalExpression	buf - avpkt -> data < buf_size		9464185	1		<			
ANR	9464391	AdditiveExpression	buf - avpkt -> data		9464185	0		-			
ANR	9464392	Identifier	buf		9464185	0					
ANR	9464393	PtrMemberAccess	avpkt -> data		9464185	1					
ANR	9464394	Identifier	avpkt		9464185	0					
ANR	9464395	Identifier	data		9464185	1					
ANR	9464396	Identifier	buf_size		9464185	1					
ANR	9464397	CompoundStatement		85:8:1097:1110	9464185	1					
ANR	9464398	IdentifierDeclStatement	"int code , smp , size ;"	89:8:1202:1221	9464185	0	True				
ANR	9464399	IdentifierDecl	code		9464185	0					
ANR	9464400	IdentifierDeclType	int		9464185	0					
ANR	9464401	Identifier	code		9464185	1					
ANR	9464402	IdentifierDecl	smp		9464185	1					
ANR	9464403	IdentifierDeclType	int		9464185	0					
ANR	9464404	Identifier	smp		9464185	1					
ANR	9464405	IdentifierDecl	size		9464185	2					
ANR	9464406	IdentifierDeclType	int		9464185	0					
ANR	9464407	Identifier	size		9464185	1					
ANR	9464408	IdentifierDeclStatement	uint8_t count ;	91:8:1232:1245	9464185	1	True				
ANR	9464409	IdentifierDecl	count		9464185	0					
ANR	9464410	IdentifierDeclType	uint8_t		9464185	0					
ANR	9464411	Identifier	count		9464185	1					
ANR	9464412	ExpressionStatement	code = ( * buf ) >> 6	93:8:1256:1274	9464185	2	True				
ANR	9464413	AssignmentExpression	code = ( * buf ) >> 6		9464185	0		=			
ANR	9464414	Identifier	code		9464185	0					
ANR	9464415	ShiftExpression	( * buf ) >> 6		9464185	1		>>			
ANR	9464416	UnaryOperationExpression	* buf		9464185	0					
ANR	9464417	UnaryOperator	*		9464185	0					
ANR	9464418	Identifier	buf		9464185	1					
ANR	9464419	PrimaryExpression	6		9464185	1					
ANR	9464420	ExpressionStatement	count = ( * buf ) & 0x3F	95:8:1285:1306	9464185	3	True				
ANR	9464421	AssignmentExpression	count = ( * buf ) & 0x3F		9464185	0		=			
ANR	9464422	Identifier	count		9464185	0					
ANR	9464423	BitAndExpression	( * buf ) & 0x3F		9464185	1		&			
ANR	9464424	UnaryOperationExpression	* buf		9464185	0					
ANR	9464425	UnaryOperator	*		9464185	0					
ANR	9464426	Identifier	buf		9464185	1					
ANR	9464427	PrimaryExpression	0x3F		9464185	1					
ANR	9464428	ExpressionStatement	buf ++	97:8:1317:1322	9464185	4	True				
ANR	9464429	PostIncDecOperationExpression	buf ++		9464185	0					
ANR	9464430	Identifier	buf		9464185	0					
ANR	9464431	IncDec	++		9464185	1					
ANR	9464432	SwitchStatement	switch ( code )		9464185	5					
ANR	9464433	Condition	code	103:16:1406:1409	9464185	0	True				
ANR	9464434	Identifier	code		9464185	0					
ANR	9464435	CompoundStatement		97:22:1277:1277	9464185	1					
ANR	9464436	Label	case 0 :	105:8:1423:1429	9464185	0	True				
ANR	9464437	ExpressionStatement	smp = 4	105:17:1432:1439	9464185	1	True				
ANR	9464438	AssignmentExpression	smp = 4		9464185	0		=			
ANR	9464439	Identifier	smp		9464185	0					
ANR	9464440	PrimaryExpression	4		9464185	1					
ANR	9464441	BreakStatement	break ;	105:55:1470:1475	9464185	2	True				
ANR	9464442	Label	case 1 :	107:8:1486:1492	9464185	3	True				
ANR	9464443	ExpressionStatement	smp = 2	107:17:1495:1502	9464185	4	True				
ANR	9464444	AssignmentExpression	smp = 2		9464185	0		=			
ANR	9464445	Identifier	smp		9464185	0					
ANR	9464446	PrimaryExpression	2		9464185	1					
ANR	9464447	BreakStatement	break ;	107:55:1533:1538	9464185	5	True				
ANR	9464448	Label	case 2 :	109:8:1549:1555	9464185	6	True				
ANR	9464449	ExpressionStatement	smp = ( count & 0x20 ) ? 1 : count + 1	109:17:1558:1594	9464185	7	True				
ANR	9464450	AssignmentExpression	smp = ( count & 0x20 ) ? 1 : count + 1		9464185	0		=			
ANR	9464451	Identifier	smp		9464185	0					
ANR	9464452	ConditionalExpression	( count & 0x20 ) ? 1 : count + 1		9464185	1					
ANR	9464453	Condition	count & 0x20		9464185	0					
ANR	9464454	BitAndExpression	count & 0x20		9464185	0		&			
ANR	9464455	Identifier	count		9464185	0					
ANR	9464456	PrimaryExpression	0x20		9464185	1					
ANR	9464457	PrimaryExpression	1		9464185	1					
ANR	9464458	AdditiveExpression	count + 1		9464185	2		+			
ANR	9464459	Identifier	count		9464185	0					
ANR	9464460	PrimaryExpression	1		9464185	1					
ANR	9464461	BreakStatement	break ;	109:55:1596:1601	9464185	8	True				
ANR	9464462	Label	default :	111:8:1612:1619	9464185	9	True				
ANR	9464463	Identifier	default		9464185	0					
ANR	9464464	ExpressionStatement	smp = count + 1	111:17:1621:1636	9464185	10	True				
ANR	9464465	AssignmentExpression	smp = count + 1		9464185	0		=			
ANR	9464466	Identifier	smp		9464185	0					
ANR	9464467	AdditiveExpression	count + 1		9464185	1		+			
ANR	9464468	Identifier	count		9464185	0					
ANR	9464469	PrimaryExpression	1		9464185	1					
ANR	9464470	BreakStatement	break ;	111:55:1659:1664	9464185	11	True				
ANR	9464471	IfStatement	if ( samples_end - samples < smp )		9464185	6					
ANR	9464472	Condition	samples_end - samples < smp	115:12:1690:1716	9464185	0	True				
ANR	9464473	RelationalExpression	samples_end - samples < smp		9464185	0		<			
ANR	9464474	AdditiveExpression	samples_end - samples		9464185	0		-			
ANR	9464475	Identifier	samples_end		9464185	0					
ANR	9464476	Identifier	samples		9464185	1					
ANR	9464477	Identifier	smp		9464185	1					
ANR	9464478	BreakStatement	break ;	117:12:1732:1737	9464185	1	True				
ANR	9464479	ExpressionStatement	size = ( ( code == 2 && ( count & 0x20 ) ) || code == 3 ) ? 0 : count + 1	123:8:1811:1878	9464185	7	True				
ANR	9464480	AssignmentExpression	size = ( ( code == 2 && ( count & 0x20 ) ) || code == 3 ) ? 0 : count + 1		9464185	0		=			
ANR	9464481	Identifier	size		9464185	0					
ANR	9464482	ConditionalExpression	( ( code == 2 && ( count & 0x20 ) ) || code == 3 ) ? 0 : count + 1		9464185	1					
ANR	9464483	Condition	( code == 2 && ( count & 0x20 ) ) || code == 3		9464185	0					
ANR	9464484	OrExpression	( code == 2 && ( count & 0x20 ) ) || code == 3		9464185	0		||			
ANR	9464485	AndExpression	code == 2 && ( count & 0x20 )		9464185	0		&&			
ANR	9464486	EqualityExpression	code == 2		9464185	0		==			
ANR	9464487	Identifier	code		9464185	0					
ANR	9464488	PrimaryExpression	2		9464185	1					
ANR	9464489	BitAndExpression	count & 0x20		9464185	1		&			
ANR	9464490	Identifier	count		9464185	0					
ANR	9464491	PrimaryExpression	0x20		9464185	1					
ANR	9464492	EqualityExpression	code == 3		9464185	1		==			
ANR	9464493	Identifier	code		9464185	0					
ANR	9464494	PrimaryExpression	3		9464185	1					
ANR	9464495	PrimaryExpression	0		9464185	1					
ANR	9464496	AdditiveExpression	count + 1		9464185	2		+			
ANR	9464497	Identifier	count		9464185	0					
ANR	9464498	PrimaryExpression	1		9464185	1					
ANR	9464499	IfStatement	if ( ( buf - avpkt -> data ) + size > buf_size )		9464185	8					
ANR	9464500	Condition	( buf - avpkt -> data ) + size > buf_size	125:12:1893:1929	9464185	0	True				
ANR	9464501	RelationalExpression	( buf - avpkt -> data ) + size > buf_size		9464185	0		>			
ANR	9464502	AdditiveExpression	( buf - avpkt -> data ) + size		9464185	0		+			
ANR	9464503	AdditiveExpression	buf - avpkt -> data		9464185	0		-			
ANR	9464504	Identifier	buf		9464185	0					
ANR	9464505	PtrMemberAccess	avpkt -> data		9464185	1					
ANR	9464506	Identifier	avpkt		9464185	0					
ANR	9464507	Identifier	data		9464185	1					
ANR	9464508	Identifier	size		9464185	1					
ANR	9464509	Identifier	buf_size		9464185	1					
ANR	9464510	BreakStatement	break ;	127:12:1945:1950	9464185	1	True				
ANR	9464511	SwitchStatement	switch ( code )		9464185	9					
ANR	9464512	Condition	code	131:15:1970:1973	9464185	0	True				
ANR	9464513	Identifier	code		9464185	0					
ANR	9464514	CompoundStatement		125:21:1841:1841	9464185	1					
ANR	9464515	Label	case 0 :	133:8:1987:1993	9464185	0	True				
ANR	9464516	ForStatement	for ( count ++ ; count > 0 ; count -- )		9464185	1					
ANR	9464517	ForInit	count ++ ;	135:17:2031:2038	9464185	0	True				
ANR	9464518	PostIncDecOperationExpression	count ++		9464185	0					
ANR	9464519	Identifier	count		9464185	0					
ANR	9464520	IncDec	++		9464185	1					
ANR	9464521	Condition	count > 0	135:26:2040:2048	9464185	1	True				
ANR	9464522	RelationalExpression	count > 0		9464185	0		>			
ANR	9464523	Identifier	count		9464185	0					
ANR	9464524	PrimaryExpression	0		9464185	1					
ANR	9464525	PostIncDecOperationExpression	count --	135:37:2051:2057	9464185	2	True				
ANR	9464526	Identifier	count		9464185	0					
ANR	9464527	IncDec	--		9464185	1					
ANR	9464528	CompoundStatement		129:46:1925:1925	9464185	3					
ANR	9464529	ExpressionStatement	code = * buf ++	137:16:2079:2092	9464185	0	True				
ANR	9464530	AssignmentExpression	code = * buf ++		9464185	0		=			
ANR	9464531	Identifier	code		9464185	0					
ANR	9464532	UnaryOperationExpression	* buf ++		9464185	1					
ANR	9464533	UnaryOperator	*		9464185	0					
ANR	9464534	PostIncDecOperationExpression	buf ++		9464185	1					
ANR	9464535	Identifier	buf		9464185	0					
ANR	9464536	IncDec	++		9464185	1					
ANR	9464537	ExpressionStatement	sample += ws_adpcm_2bit [ code & 0x3 ]	139:16:2111:2146	9464185	1	True				
ANR	9464538	AssignmentExpression	sample += ws_adpcm_2bit [ code & 0x3 ]		9464185	0		+=			
ANR	9464539	Identifier	sample		9464185	0					
ANR	9464540	ArrayIndexing	ws_adpcm_2bit [ code & 0x3 ]		9464185	1					
ANR	9464541	Identifier	ws_adpcm_2bit		9464185	0					
ANR	9464542	BitAndExpression	code & 0x3		9464185	1		&			
ANR	9464543	Identifier	code		9464185	0					
ANR	9464544	PrimaryExpression	0x3		9464185	1					
ANR	9464545	ExpressionStatement	sample = av_clip_uint8 ( sample )	141:16:2165:2195	9464185	2	True				
ANR	9464546	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464547	Identifier	sample		9464185	0					
ANR	9464548	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464549	Callee	av_clip_uint8		9464185	0					
ANR	9464550	Identifier	av_clip_uint8		9464185	0					
ANR	9464551	ArgumentList	sample		9464185	1					
ANR	9464552	Argument	sample		9464185	0					
ANR	9464553	Identifier	sample		9464185	0					
ANR	9464554	ExpressionStatement	* samples ++ = sample	143:16:2214:2233	9464185	3	True				
ANR	9464555	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464556	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464557	UnaryOperator	*		9464185	0					
ANR	9464558	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464559	Identifier	samples		9464185	0					
ANR	9464560	IncDec	++		9464185	1					
ANR	9464561	Identifier	sample		9464185	1					
ANR	9464562	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]	145:16:2252:2294	9464185	4	True				
ANR	9464563	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]		9464185	0		+=			
ANR	9464564	Identifier	sample		9464185	0					
ANR	9464565	ArrayIndexing	ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]		9464185	1					
ANR	9464566	Identifier	ws_adpcm_2bit		9464185	0					
ANR	9464567	BitAndExpression	( code >> 2 ) & 0x3		9464185	1		&			
ANR	9464568	ShiftExpression	code >> 2		9464185	0		>>			
ANR	9464569	Identifier	code		9464185	0					
ANR	9464570	PrimaryExpression	2		9464185	1					
ANR	9464571	PrimaryExpression	0x3		9464185	1					
ANR	9464572	ExpressionStatement	sample = av_clip_uint8 ( sample )	147:16:2313:2343	9464185	5	True				
ANR	9464573	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464574	Identifier	sample		9464185	0					
ANR	9464575	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464576	Callee	av_clip_uint8		9464185	0					
ANR	9464577	Identifier	av_clip_uint8		9464185	0					
ANR	9464578	ArgumentList	sample		9464185	1					
ANR	9464579	Argument	sample		9464185	0					
ANR	9464580	Identifier	sample		9464185	0					
ANR	9464581	ExpressionStatement	* samples ++ = sample	149:16:2362:2381	9464185	6	True				
ANR	9464582	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464583	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464584	UnaryOperator	*		9464185	0					
ANR	9464585	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464586	Identifier	samples		9464185	0					
ANR	9464587	IncDec	++		9464185	1					
ANR	9464588	Identifier	sample		9464185	1					
ANR	9464589	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]	151:16:2400:2442	9464185	7	True				
ANR	9464590	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]		9464185	0		+=			
ANR	9464591	Identifier	sample		9464185	0					
ANR	9464592	ArrayIndexing	ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]		9464185	1					
ANR	9464593	Identifier	ws_adpcm_2bit		9464185	0					
ANR	9464594	BitAndExpression	( code >> 4 ) & 0x3		9464185	1		&			
ANR	9464595	ShiftExpression	code >> 4		9464185	0		>>			
ANR	9464596	Identifier	code		9464185	0					
ANR	9464597	PrimaryExpression	4		9464185	1					
ANR	9464598	PrimaryExpression	0x3		9464185	1					
ANR	9464599	ExpressionStatement	sample = av_clip_uint8 ( sample )	153:16:2461:2491	9464185	8	True				
ANR	9464600	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464601	Identifier	sample		9464185	0					
ANR	9464602	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464603	Callee	av_clip_uint8		9464185	0					
ANR	9464604	Identifier	av_clip_uint8		9464185	0					
ANR	9464605	ArgumentList	sample		9464185	1					
ANR	9464606	Argument	sample		9464185	0					
ANR	9464607	Identifier	sample		9464185	0					
ANR	9464608	ExpressionStatement	* samples ++ = sample	155:16:2510:2529	9464185	9	True				
ANR	9464609	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464610	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464611	UnaryOperator	*		9464185	0					
ANR	9464612	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464613	Identifier	samples		9464185	0					
ANR	9464614	IncDec	++		9464185	1					
ANR	9464615	Identifier	sample		9464185	1					
ANR	9464616	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]	157:16:2548:2590	9464185	10	True				
ANR	9464617	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]		9464185	0		+=			
ANR	9464618	Identifier	sample		9464185	0					
ANR	9464619	ArrayIndexing	ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]		9464185	1					
ANR	9464620	Identifier	ws_adpcm_2bit		9464185	0					
ANR	9464621	BitAndExpression	( code >> 6 ) & 0x3		9464185	1		&			
ANR	9464622	ShiftExpression	code >> 6		9464185	0		>>			
ANR	9464623	Identifier	code		9464185	0					
ANR	9464624	PrimaryExpression	6		9464185	1					
ANR	9464625	PrimaryExpression	0x3		9464185	1					
ANR	9464626	ExpressionStatement	sample = av_clip_uint8 ( sample )	159:16:2609:2639	9464185	11	True				
ANR	9464627	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464628	Identifier	sample		9464185	0					
ANR	9464629	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464630	Callee	av_clip_uint8		9464185	0					
ANR	9464631	Identifier	av_clip_uint8		9464185	0					
ANR	9464632	ArgumentList	sample		9464185	1					
ANR	9464633	Argument	sample		9464185	0					
ANR	9464634	Identifier	sample		9464185	0					
ANR	9464635	ExpressionStatement	* samples ++ = sample	161:16:2658:2677	9464185	12	True				
ANR	9464636	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464637	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464638	UnaryOperator	*		9464185	0					
ANR	9464639	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464640	Identifier	samples		9464185	0					
ANR	9464641	IncDec	++		9464185	1					
ANR	9464642	Identifier	sample		9464185	1					
ANR	9464643	BreakStatement	break ;	165:12:2707:2712	9464185	2	True				
ANR	9464644	Label	case 1 :	167:8:2723:2729	9464185	3	True				
ANR	9464645	ForStatement	for ( count ++ ; count > 0 ; count -- )		9464185	4					
ANR	9464646	ForInit	count ++ ;	169:17:2767:2774	9464185	0	True				
ANR	9464647	PostIncDecOperationExpression	count ++		9464185	0					
ANR	9464648	Identifier	count		9464185	0					
ANR	9464649	IncDec	++		9464185	1					
ANR	9464650	Condition	count > 0	169:26:2776:2784	9464185	1	True				
ANR	9464651	RelationalExpression	count > 0		9464185	0		>			
ANR	9464652	Identifier	count		9464185	0					
ANR	9464653	PrimaryExpression	0		9464185	1					
ANR	9464654	PostIncDecOperationExpression	count --	169:37:2787:2793	9464185	2	True				
ANR	9464655	Identifier	count		9464185	0					
ANR	9464656	IncDec	--		9464185	1					
ANR	9464657	CompoundStatement		163:46:2661:2661	9464185	3					
ANR	9464658	ExpressionStatement	code = * buf ++	171:16:2815:2828	9464185	0	True				
ANR	9464659	AssignmentExpression	code = * buf ++		9464185	0		=			
ANR	9464660	Identifier	code		9464185	0					
ANR	9464661	UnaryOperationExpression	* buf ++		9464185	1					
ANR	9464662	UnaryOperator	*		9464185	0					
ANR	9464663	PostIncDecOperationExpression	buf ++		9464185	1					
ANR	9464664	Identifier	buf		9464185	0					
ANR	9464665	IncDec	++		9464185	1					
ANR	9464666	ExpressionStatement	sample += ws_adpcm_4bit [ code & 0xF ]	173:16:2847:2882	9464185	1	True				
ANR	9464667	AssignmentExpression	sample += ws_adpcm_4bit [ code & 0xF ]		9464185	0		+=			
ANR	9464668	Identifier	sample		9464185	0					
ANR	9464669	ArrayIndexing	ws_adpcm_4bit [ code & 0xF ]		9464185	1					
ANR	9464670	Identifier	ws_adpcm_4bit		9464185	0					
ANR	9464671	BitAndExpression	code & 0xF		9464185	1		&			
ANR	9464672	Identifier	code		9464185	0					
ANR	9464673	PrimaryExpression	0xF		9464185	1					
ANR	9464674	ExpressionStatement	sample = av_clip_uint8 ( sample )	175:16:2901:2931	9464185	2	True				
ANR	9464675	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464676	Identifier	sample		9464185	0					
ANR	9464677	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464678	Callee	av_clip_uint8		9464185	0					
ANR	9464679	Identifier	av_clip_uint8		9464185	0					
ANR	9464680	ArgumentList	sample		9464185	1					
ANR	9464681	Argument	sample		9464185	0					
ANR	9464682	Identifier	sample		9464185	0					
ANR	9464683	ExpressionStatement	* samples ++ = sample	177:16:2950:2969	9464185	3	True				
ANR	9464684	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464685	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464686	UnaryOperator	*		9464185	0					
ANR	9464687	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464688	Identifier	samples		9464185	0					
ANR	9464689	IncDec	++		9464185	1					
ANR	9464690	Identifier	sample		9464185	1					
ANR	9464691	ExpressionStatement	sample += ws_adpcm_4bit [ code >> 4 ]	179:16:2988:3022	9464185	4	True				
ANR	9464692	AssignmentExpression	sample += ws_adpcm_4bit [ code >> 4 ]		9464185	0		+=			
ANR	9464693	Identifier	sample		9464185	0					
ANR	9464694	ArrayIndexing	ws_adpcm_4bit [ code >> 4 ]		9464185	1					
ANR	9464695	Identifier	ws_adpcm_4bit		9464185	0					
ANR	9464696	ShiftExpression	code >> 4		9464185	1		>>			
ANR	9464697	Identifier	code		9464185	0					
ANR	9464698	PrimaryExpression	4		9464185	1					
ANR	9464699	ExpressionStatement	sample = av_clip_uint8 ( sample )	181:16:3041:3071	9464185	5	True				
ANR	9464700	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464701	Identifier	sample		9464185	0					
ANR	9464702	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464703	Callee	av_clip_uint8		9464185	0					
ANR	9464704	Identifier	av_clip_uint8		9464185	0					
ANR	9464705	ArgumentList	sample		9464185	1					
ANR	9464706	Argument	sample		9464185	0					
ANR	9464707	Identifier	sample		9464185	0					
ANR	9464708	ExpressionStatement	* samples ++ = sample	183:16:3090:3109	9464185	6	True				
ANR	9464709	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464710	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464711	UnaryOperator	*		9464185	0					
ANR	9464712	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464713	Identifier	samples		9464185	0					
ANR	9464714	IncDec	++		9464185	1					
ANR	9464715	Identifier	sample		9464185	1					
ANR	9464716	BreakStatement	break ;	187:12:3139:3144	9464185	5	True				
ANR	9464717	Label	case 2 :	189:8:3155:3161	9464185	6	True				
ANR	9464718	IfStatement	if ( count & 0x20 )		9464185	7					
ANR	9464719	Condition	count & 0x20	191:16:3201:3212	9464185	0	True				
ANR	9464720	BitAndExpression	count & 0x20		9464185	0		&			
ANR	9464721	Identifier	count		9464185	0					
ANR	9464722	PrimaryExpression	0x20		9464185	1					
ANR	9464723	CompoundStatement		187:16:3115:3123	9464185	1					
ANR	9464724	IdentifierDeclStatement	int8_t t ;	193:16:3250:3258	9464185	0	True				
ANR	9464725	IdentifierDecl	t		9464185	0					
ANR	9464726	IdentifierDeclType	int8_t		9464185	0					
ANR	9464727	Identifier	t		9464185	1					
ANR	9464728	ExpressionStatement	t = count	195:16:3277:3286	9464185	1	True				
ANR	9464729	AssignmentExpression	t = count		9464185	0		=			
ANR	9464730	Identifier	t		9464185	0					
ANR	9464731	Identifier	count		9464185	1					
ANR	9464732	ExpressionStatement	t <<= 3	197:16:3305:3312	9464185	2	True				
ANR	9464733	AssignmentExpression	t <<= 3		9464185	0		<<=			
ANR	9464734	Identifier	t		9464185	0					
ANR	9464735	PrimaryExpression	3		9464185	1					
ANR	9464736	ExpressionStatement	sample += t >> 3	199:16:3331:3347	9464185	3	True				
ANR	9464737	AssignmentExpression	sample += t >> 3		9464185	0		+=			
ANR	9464738	Identifier	sample		9464185	0					
ANR	9464739	ShiftExpression	t >> 3		9464185	1		>>			
ANR	9464740	Identifier	t		9464185	0					
ANR	9464741	PrimaryExpression	3		9464185	1					
ANR	9464742	ExpressionStatement	sample = av_clip_uint8 ( sample )	201:16:3366:3396	9464185	4	True				
ANR	9464743	AssignmentExpression	sample = av_clip_uint8 ( sample )		9464185	0		=			
ANR	9464744	Identifier	sample		9464185	0					
ANR	9464745	CallExpression	av_clip_uint8 ( sample )		9464185	1					
ANR	9464746	Callee	av_clip_uint8		9464185	0					
ANR	9464747	Identifier	av_clip_uint8		9464185	0					
ANR	9464748	ArgumentList	sample		9464185	1					
ANR	9464749	Argument	sample		9464185	0					
ANR	9464750	Identifier	sample		9464185	0					
ANR	9464751	ExpressionStatement	* samples ++ = sample	203:16:3415:3434	9464185	5	True				
ANR	9464752	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464753	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464754	UnaryOperator	*		9464185	0					
ANR	9464755	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464756	Identifier	samples		9464185	0					
ANR	9464757	IncDec	++		9464185	1					
ANR	9464758	Identifier	sample		9464185	1					
ANR	9464759	ElseStatement	else		9464185	0					
ANR	9464760	CompoundStatement		199:19:3321:3321	9464185	0					
ANR	9464761	ForStatement	for ( count ++ ; count > 0 ; count -- )		9464185	0					
ANR	9464762	ForInit	count ++ ;	207:21:3491:3498	9464185	0	True				
ANR	9464763	PostIncDecOperationExpression	count ++		9464185	0					
ANR	9464764	Identifier	count		9464185	0					
ANR	9464765	IncDec	++		9464185	1					
ANR	9464766	Condition	count > 0	207:30:3500:3508	9464185	1	True				
ANR	9464767	RelationalExpression	count > 0		9464185	0		>			
ANR	9464768	Identifier	count		9464185	0					
ANR	9464769	PrimaryExpression	0		9464185	1					
ANR	9464770	PostIncDecOperationExpression	count --	207:41:3511:3517	9464185	2	True				
ANR	9464771	Identifier	count		9464185	0					
ANR	9464772	IncDec	--		9464185	1					
ANR	9464773	CompoundStatement		201:50:3385:3385	9464185	3					
ANR	9464774	ExpressionStatement	* samples ++ = * buf ++	209:20:3543:3562	9464185	0	True				
ANR	9464775	AssignmentExpression	* samples ++ = * buf ++		9464185	0		=			
ANR	9464776	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464777	UnaryOperator	*		9464185	0					
ANR	9464778	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464779	Identifier	samples		9464185	0					
ANR	9464780	IncDec	++		9464185	1					
ANR	9464781	UnaryOperationExpression	* buf ++		9464185	1					
ANR	9464782	UnaryOperator	*		9464185	0					
ANR	9464783	PostIncDecOperationExpression	buf ++		9464185	1					
ANR	9464784	Identifier	buf		9464185	0					
ANR	9464785	IncDec	++		9464185	1					
ANR	9464786	ExpressionStatement	sample = buf [ - 1 ]	213:16:3600:3616	9464185	1	True				
ANR	9464787	AssignmentExpression	sample = buf [ - 1 ]		9464185	0		=			
ANR	9464788	Identifier	sample		9464185	0					
ANR	9464789	ArrayIndexing	buf [ - 1 ]		9464185	1					
ANR	9464790	Identifier	buf		9464185	0					
ANR	9464791	UnaryOperationExpression	- 1		9464185	1					
ANR	9464792	UnaryOperator	-		9464185	0					
ANR	9464793	PrimaryExpression	1		9464185	1					
ANR	9464794	BreakStatement	break ;	217:12:3646:3651	9464185	8	True				
ANR	9464795	Label	default :	219:8:3662:3669	9464185	9	True				
ANR	9464796	Identifier	default		9464185	0					
ANR	9464797	ForStatement	for ( count ++ ; count > 0 ; count -- )		9464185	10					
ANR	9464798	ForInit	count ++ ;	221:16:3698:3705	9464185	0	True				
ANR	9464799	PostIncDecOperationExpression	count ++		9464185	0					
ANR	9464800	Identifier	count		9464185	0					
ANR	9464801	IncDec	++		9464185	1					
ANR	9464802	Condition	count > 0	221:25:3707:3715	9464185	1	True				
ANR	9464803	RelationalExpression	count > 0		9464185	0		>			
ANR	9464804	Identifier	count		9464185	0					
ANR	9464805	PrimaryExpression	0		9464185	1					
ANR	9464806	PostIncDecOperationExpression	count --	221:36:3718:3724	9464185	2	True				
ANR	9464807	Identifier	count		9464185	0					
ANR	9464808	IncDec	--		9464185	1					
ANR	9464809	CompoundStatement		215:45:3592:3592	9464185	3					
ANR	9464810	ExpressionStatement	* samples ++ = sample	223:16:3746:3765	9464185	0	True				
ANR	9464811	AssignmentExpression	* samples ++ = sample		9464185	0		=			
ANR	9464812	UnaryOperationExpression	* samples ++		9464185	0					
ANR	9464813	UnaryOperator	*		9464185	0					
ANR	9464814	PostIncDecOperationExpression	samples ++		9464185	1					
ANR	9464815	Identifier	samples		9464185	0					
ANR	9464816	IncDec	++		9464185	1					
ANR	9464817	Identifier	sample		9464185	1					
ANR	9464818	ExpressionStatement	* data_size = samples - ( uint8_t * ) data	233:4:3807:3845	9464185	17	True				
ANR	9464819	AssignmentExpression	* data_size = samples - ( uint8_t * ) data		9464185	0		=			
ANR	9464820	UnaryOperationExpression	* data_size		9464185	0					
ANR	9464821	UnaryOperator	*		9464185	0					
ANR	9464822	Identifier	data_size		9464185	1					
ANR	9464823	AdditiveExpression	samples - ( uint8_t * ) data		9464185	1		-			
ANR	9464824	Identifier	samples		9464185	0					
ANR	9464825	CastExpression	( uint8_t * ) data		9464185	1					
ANR	9464826	CastTarget	uint8_t *		9464185	0					
ANR	9464827	Identifier	data		9464185	1					
ANR	9464828	ReturnStatement	return buf_size ;	237:4:3854:3869	9464185	18	True				
ANR	9464829	Identifier	buf_size		9464185	0					
ANR	9464830	ReturnType	static int		9464185	1					
ANR	9464831	Identifier	ws_snd_decode_frame		9464185	2					
ANR	9464832	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		9464185	3					
ANR	9464833	Parameter	AVCodecContext * avctx	1:31:31:51	9464185	0	True				
ANR	9464834	ParameterType	AVCodecContext *		9464185	0					
ANR	9464835	Identifier	avctx		9464185	1					
ANR	9464836	Parameter	void * data	3:16:71:80	9464185	1	True				
ANR	9464837	ParameterType	void *		9464185	0					
ANR	9464838	Identifier	data		9464185	1					
ANR	9464839	Parameter	int * data_size	3:28:83:96	9464185	2	True				
ANR	9464840	ParameterType	int *		9464185	0					
ANR	9464841	Identifier	data_size		9464185	1					
ANR	9464842	Parameter	AVPacket * avpkt	5:16:116:130	9464185	3	True				
ANR	9464843	ParameterType	AVPacket *		9464185	0					
ANR	9464844	Identifier	avpkt		9464185	1					
ANR	9464845	CFGEntryNode	ENTRY		9464185		True				
ANR	9464846	CFGExitNode	EXIT		9464185		True				
ANR	9464847	Symbol	code		9464185						
ANR	9464848	Symbol	data		9464185						
ANR	9464849	Symbol	ws_adpcm_2bit		9464185						
ANR	9464850	Symbol	av_clip_uint8		9464185						
ANR	9464851	Symbol	ws_adpcm_4bit		9464185						
ANR	9464852	Symbol	in_size		9464185						
ANR	9464853	Symbol	avpkt		9464185						
ANR	9464854	Symbol	* data_size		9464185						
ANR	9464855	Symbol	samples_end		9464185						
ANR	9464856	Symbol	smp		9464185						
ANR	9464857	Symbol	avpkt -> size		9464185						
ANR	9464858	Symbol	avctx		9464185						
ANR	9464859	Symbol	* samples ++		9464185						
ANR	9464860	Symbol	data_size		9464185						
ANR	9464861	Symbol	* avpkt		9464185						
ANR	9464862	Symbol	* buf		9464185						
ANR	9464863	Symbol	AV_LOG_ERROR		9464185						
ANR	9464864	Symbol	buf_size		9464185						
ANR	9464865	Symbol	count		9464185						
ANR	9464866	Symbol	i		9464185						
ANR	9464867	Symbol	* ws_adpcm_2bit		9464185						
ANR	9464868	Symbol	out_size		9464185						
ANR	9464869	Symbol	sample		9464185						
ANR	9464870	Symbol	samples		9464185						
ANR	9464871	Symbol	EINVAL		9464185						
ANR	9464872	Symbol	* buf ++		9464185						
ANR	9464873	Symbol	buf		9464185						
ANR	9464874	Symbol	* ws_adpcm_4bit		9464185						
ANR	9464875	Symbol	size		9464185						
ANR	9464876	Symbol	t		9464185						
ANR	9464877	Symbol	avpkt -> data		9464185						
ANR	9464878	Symbol	AVERROR		9464185						
ANR	9464879	Symbol	* code		9464185						
ANR	9464880	Symbol	AV_RL16		9464185						
