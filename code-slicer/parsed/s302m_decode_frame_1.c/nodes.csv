command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7556183	File	/home/p4ultr4n/workplace/ReVeal/raw_code/s302m_decode_frame_1.c								
ANR	7556184	Function	s302m_decode_frame	1:0:0:4200							
ANR	7556185	FunctionDef	"s302m_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		7556184	0					
ANR	7556186	CompoundStatement		5:0:134:4200	7556184	0					
ANR	7556187	IdentifierDeclStatement	S302Context * s = avctx -> priv_data ;	7:4:141:174	7556184	0	True				
ANR	7556188	IdentifierDecl	* s = avctx -> priv_data		7556184	0					
ANR	7556189	IdentifierDeclType	S302Context *		7556184	0					
ANR	7556190	Identifier	s		7556184	1					
ANR	7556191	AssignmentExpression	* s = avctx -> priv_data		7556184	2		=			
ANR	7556192	Identifier	s		7556184	0					
ANR	7556193	PtrMemberAccess	avctx -> priv_data		7556184	1					
ANR	7556194	Identifier	avctx		7556184	0					
ANR	7556195	Identifier	priv_data		7556184	1					
ANR	7556196	IdentifierDeclStatement	AVFrame * frame = data ;	9:4:181:206	7556184	1	True				
ANR	7556197	IdentifierDecl	* frame = data		7556184	0					
ANR	7556198	IdentifierDeclType	AVFrame *		7556184	0					
ANR	7556199	Identifier	frame		7556184	1					
ANR	7556200	AssignmentExpression	* frame = data		7556184	2		=			
ANR	7556201	Identifier	data		7556184	0					
ANR	7556202	Identifier	data		7556184	1					
ANR	7556203	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	11:4:213:245	7556184	2	True				
ANR	7556204	IdentifierDecl	* buf = avpkt -> data		7556184	0					
ANR	7556205	IdentifierDeclType	const uint8_t *		7556184	0					
ANR	7556206	Identifier	buf		7556184	1					
ANR	7556207	AssignmentExpression	* buf = avpkt -> data		7556184	2		=			
ANR	7556208	Identifier	buf		7556184	0					
ANR	7556209	PtrMemberAccess	avpkt -> data		7556184	1					
ANR	7556210	Identifier	avpkt		7556184	0					
ANR	7556211	Identifier	data		7556184	1					
ANR	7556212	IdentifierDeclStatement	int buf_size = avpkt -> size ;	13:4:252:284	7556184	3	True				
ANR	7556213	IdentifierDecl	buf_size = avpkt -> size		7556184	0					
ANR	7556214	IdentifierDeclType	int		7556184	0					
ANR	7556215	Identifier	buf_size		7556184	1					
ANR	7556216	AssignmentExpression	buf_size = avpkt -> size		7556184	2		=			
ANR	7556217	Identifier	buf_size		7556184	0					
ANR	7556218	PtrMemberAccess	avpkt -> size		7556184	1					
ANR	7556219	Identifier	avpkt		7556184	0					
ANR	7556220	Identifier	size		7556184	1					
ANR	7556221	IdentifierDeclStatement	"int block_size , ret ;"	15:4:291:310	7556184	4	True				
ANR	7556222	IdentifierDecl	block_size		7556184	0					
ANR	7556223	IdentifierDeclType	int		7556184	0					
ANR	7556224	Identifier	block_size		7556184	1					
ANR	7556225	IdentifierDecl	ret		7556184	1					
ANR	7556226	IdentifierDeclType	int		7556184	0					
ANR	7556227	Identifier	ret		7556184	1					
ANR	7556228	IdentifierDeclStatement	int i ;	17:4:317:322	7556184	5	True				
ANR	7556229	IdentifierDecl	i		7556184	0					
ANR	7556230	IdentifierDeclType	int		7556184	0					
ANR	7556231	Identifier	i		7556184	1					
ANR	7556232	IdentifierDeclStatement	int non_pcm_data_type = - 1 ;	19:4:329:355	7556184	6	True				
ANR	7556233	IdentifierDecl	non_pcm_data_type = - 1		7556184	0					
ANR	7556234	IdentifierDeclType	int		7556184	0					
ANR	7556235	Identifier	non_pcm_data_type		7556184	1					
ANR	7556236	AssignmentExpression	non_pcm_data_type = - 1		7556184	2		=			
ANR	7556237	Identifier	non_pcm_data_type		7556184	0					
ANR	7556238	UnaryOperationExpression	- 1		7556184	1					
ANR	7556239	UnaryOperator	-		7556184	0					
ANR	7556240	PrimaryExpression	1		7556184	1					
ANR	7556241	IdentifierDeclStatement	"int frame_size = s302m_parse_frame_header ( avctx , buf , buf_size ) ;"	23:4:364:427	7556184	7	True				
ANR	7556242	IdentifierDecl	"frame_size = s302m_parse_frame_header ( avctx , buf , buf_size )"		7556184	0					
ANR	7556243	IdentifierDeclType	int		7556184	0					
ANR	7556244	Identifier	frame_size		7556184	1					
ANR	7556245	AssignmentExpression	"frame_size = s302m_parse_frame_header ( avctx , buf , buf_size )"		7556184	2		=			
ANR	7556246	Identifier	frame_size		7556184	0					
ANR	7556247	CallExpression	"s302m_parse_frame_header ( avctx , buf , buf_size )"		7556184	1					
ANR	7556248	Callee	s302m_parse_frame_header		7556184	0					
ANR	7556249	Identifier	s302m_parse_frame_header		7556184	0					
ANR	7556250	ArgumentList	avctx		7556184	1					
ANR	7556251	Argument	avctx		7556184	0					
ANR	7556252	Identifier	avctx		7556184	0					
ANR	7556253	Argument	buf		7556184	1					
ANR	7556254	Identifier	buf		7556184	0					
ANR	7556255	Argument	buf_size		7556184	2					
ANR	7556256	Identifier	buf_size		7556184	0					
ANR	7556257	IfStatement	if ( frame_size < 0 )		7556184	8					
ANR	7556258	Condition	frame_size < 0	25:8:438:451	7556184	0	True				
ANR	7556259	RelationalExpression	frame_size < 0		7556184	0		<			
ANR	7556260	Identifier	frame_size		7556184	0					
ANR	7556261	PrimaryExpression	0		7556184	1					
ANR	7556262	ReturnStatement	return frame_size ;	27:8:463:480	7556184	1	True				
ANR	7556263	Identifier	frame_size		7556184	0					
ANR	7556264	ExpressionStatement	buf_size -= AES3_HEADER_LEN	31:4:489:516	7556184	9	True				
ANR	7556265	AssignmentExpression	buf_size -= AES3_HEADER_LEN		7556184	0		-=			
ANR	7556266	Identifier	buf_size		7556184	0					
ANR	7556267	Identifier	AES3_HEADER_LEN		7556184	1					
ANR	7556268	ExpressionStatement	buf += AES3_HEADER_LEN	33:4:523:550	7556184	10	True				
ANR	7556269	AssignmentExpression	buf += AES3_HEADER_LEN		7556184	0		+=			
ANR	7556270	Identifier	buf		7556184	0					
ANR	7556271	Identifier	AES3_HEADER_LEN		7556184	1					
ANR	7556272	ExpressionStatement	block_size = ( avctx -> bits_per_raw_sample + 4 ) / 4	39:4:588:637	7556184	11	True				
ANR	7556273	AssignmentExpression	block_size = ( avctx -> bits_per_raw_sample + 4 ) / 4		7556184	0		=			
ANR	7556274	Identifier	block_size		7556184	0					
ANR	7556275	MultiplicativeExpression	( avctx -> bits_per_raw_sample + 4 ) / 4		7556184	1		/			
ANR	7556276	AdditiveExpression	avctx -> bits_per_raw_sample + 4		7556184	0		+			
ANR	7556277	PtrMemberAccess	avctx -> bits_per_raw_sample		7556184	0					
ANR	7556278	Identifier	avctx		7556184	0					
ANR	7556279	Identifier	bits_per_raw_sample		7556184	1					
ANR	7556280	PrimaryExpression	4		7556184	1					
ANR	7556281	PrimaryExpression	4		7556184	1					
ANR	7556282	ExpressionStatement	frame -> nb_samples = 2 * ( buf_size / block_size ) / avctx -> channels	41:4:644:709	7556184	12	True				
ANR	7556283	AssignmentExpression	frame -> nb_samples = 2 * ( buf_size / block_size ) / avctx -> channels		7556184	0		=			
ANR	7556284	PtrMemberAccess	frame -> nb_samples		7556184	0					
ANR	7556285	Identifier	frame		7556184	0					
ANR	7556286	Identifier	nb_samples		7556184	1					
ANR	7556287	MultiplicativeExpression	2 * ( buf_size / block_size ) / avctx -> channels		7556184	1		*			
ANR	7556288	PrimaryExpression	2		7556184	0					
ANR	7556289	MultiplicativeExpression	( buf_size / block_size ) / avctx -> channels		7556184	1		/			
ANR	7556290	MultiplicativeExpression	buf_size / block_size		7556184	0		/			
ANR	7556291	Identifier	buf_size		7556184	0					
ANR	7556292	Identifier	block_size		7556184	1					
ANR	7556293	PtrMemberAccess	avctx -> channels		7556184	1					
ANR	7556294	Identifier	avctx		7556184	0					
ANR	7556295	Identifier	channels		7556184	1					
ANR	7556296	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		7556184	13					
ANR	7556297	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	43:8:720:761	7556184	0	True				
ANR	7556298	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		7556184	0		<			
ANR	7556299	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		7556184	0		=			
ANR	7556300	Identifier	ret		7556184	0					
ANR	7556301	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		7556184	1					
ANR	7556302	Callee	ff_get_buffer		7556184	0					
ANR	7556303	Identifier	ff_get_buffer		7556184	0					
ANR	7556304	ArgumentList	avctx		7556184	1					
ANR	7556305	Argument	avctx		7556184	0					
ANR	7556306	Identifier	avctx		7556184	0					
ANR	7556307	Argument	frame		7556184	1					
ANR	7556308	Identifier	frame		7556184	0					
ANR	7556309	Argument	0		7556184	2					
ANR	7556310	PrimaryExpression	0		7556184	0					
ANR	7556311	PrimaryExpression	0		7556184	1					
ANR	7556312	ReturnStatement	return ret ;	45:8:773:783	7556184	1	True				
ANR	7556313	Identifier	ret		7556184	0					
ANR	7556314	ExpressionStatement	avctx -> bit_rate = 48000 * avctx -> channels * ( avctx -> bits_per_raw_sample + 4 ) + 32 * 48000 / frame -> nb_samples	49:4:792:924	7556184	14	True				
ANR	7556315	AssignmentExpression	avctx -> bit_rate = 48000 * avctx -> channels * ( avctx -> bits_per_raw_sample + 4 ) + 32 * 48000 / frame -> nb_samples		7556184	0		=			
ANR	7556316	PtrMemberAccess	avctx -> bit_rate		7556184	0					
ANR	7556317	Identifier	avctx		7556184	0					
ANR	7556318	Identifier	bit_rate		7556184	1					
ANR	7556319	AdditiveExpression	48000 * avctx -> channels * ( avctx -> bits_per_raw_sample + 4 ) + 32 * 48000 / frame -> nb_samples		7556184	1		+			
ANR	7556320	MultiplicativeExpression	48000 * avctx -> channels * ( avctx -> bits_per_raw_sample + 4 )		7556184	0		*			
ANR	7556321	PrimaryExpression	48000		7556184	0					
ANR	7556322	MultiplicativeExpression	avctx -> channels * ( avctx -> bits_per_raw_sample + 4 )		7556184	1		*			
ANR	7556323	PtrMemberAccess	avctx -> channels		7556184	0					
ANR	7556324	Identifier	avctx		7556184	0					
ANR	7556325	Identifier	channels		7556184	1					
ANR	7556326	AdditiveExpression	avctx -> bits_per_raw_sample + 4		7556184	1		+			
ANR	7556327	PtrMemberAccess	avctx -> bits_per_raw_sample		7556184	0					
ANR	7556328	Identifier	avctx		7556184	0					
ANR	7556329	Identifier	bits_per_raw_sample		7556184	1					
ANR	7556330	PrimaryExpression	4		7556184	1					
ANR	7556331	MultiplicativeExpression	32 * 48000 / frame -> nb_samples		7556184	1		*			
ANR	7556332	PrimaryExpression	32		7556184	0					
ANR	7556333	MultiplicativeExpression	48000 / frame -> nb_samples		7556184	1		/			
ANR	7556334	PrimaryExpression	48000		7556184	0					
ANR	7556335	PtrMemberAccess	frame -> nb_samples		7556184	1					
ANR	7556336	Identifier	frame		7556184	0					
ANR	7556337	Identifier	nb_samples		7556184	1					
ANR	7556338	ExpressionStatement	buf_size = ( frame -> nb_samples * avctx -> channels / 2 ) * block_size	53:4:931:996	7556184	15	True				
ANR	7556339	AssignmentExpression	buf_size = ( frame -> nb_samples * avctx -> channels / 2 ) * block_size		7556184	0		=			
ANR	7556340	Identifier	buf_size		7556184	0					
ANR	7556341	MultiplicativeExpression	( frame -> nb_samples * avctx -> channels / 2 ) * block_size		7556184	1		*			
ANR	7556342	MultiplicativeExpression	frame -> nb_samples * avctx -> channels / 2		7556184	0		*			
ANR	7556343	PtrMemberAccess	frame -> nb_samples		7556184	0					
ANR	7556344	Identifier	frame		7556184	0					
ANR	7556345	Identifier	nb_samples		7556184	1					
ANR	7556346	MultiplicativeExpression	avctx -> channels / 2		7556184	1		/			
ANR	7556347	PtrMemberAccess	avctx -> channels		7556184	0					
ANR	7556348	Identifier	avctx		7556184	0					
ANR	7556349	Identifier	channels		7556184	1					
ANR	7556350	PrimaryExpression	2		7556184	1					
ANR	7556351	Identifier	block_size		7556184	1					
ANR	7556352	IfStatement	if ( avctx -> bits_per_raw_sample == 24 )		7556184	16					
ANR	7556353	Condition	avctx -> bits_per_raw_sample == 24	57:8:1009:1040	7556184	0	True				
ANR	7556354	EqualityExpression	avctx -> bits_per_raw_sample == 24		7556184	0		==			
ANR	7556355	PtrMemberAccess	avctx -> bits_per_raw_sample		7556184	0					
ANR	7556356	Identifier	avctx		7556184	0					
ANR	7556357	Identifier	bits_per_raw_sample		7556184	1					
ANR	7556358	PrimaryExpression	24		7556184	1					
ANR	7556359	CompoundStatement		55:8:919:959	7556184	1					
ANR	7556360	IdentifierDeclStatement	uint32_t * o = ( uint32_t * ) frame -> data [ 0 ] ;	59:8:1054:1094	7556184	0	True				
ANR	7556361	IdentifierDecl	* o = ( uint32_t * ) frame -> data [ 0 ]		7556184	0					
ANR	7556362	IdentifierDeclType	uint32_t *		7556184	0					
ANR	7556363	Identifier	o		7556184	1					
ANR	7556364	AssignmentExpression	* o = ( uint32_t * ) frame -> data [ 0 ]		7556184	2		=			
ANR	7556365	Identifier	o		7556184	0					
ANR	7556366	CastExpression	( uint32_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556367	CastTarget	uint32_t *		7556184	0					
ANR	7556368	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556369	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556370	Identifier	frame		7556184	0					
ANR	7556371	Identifier	data		7556184	1					
ANR	7556372	PrimaryExpression	0		7556184	1					
ANR	7556373	ForStatement	for ( ; buf_size > 6 ; buf_size -= 7 )		7556184	1					
ANR	7556374	Condition	buf_size > 6	61:15:1112:1123	7556184	0	True				
ANR	7556375	RelationalExpression	buf_size > 6		7556184	0		>			
ANR	7556376	Identifier	buf_size		7556184	0					
ANR	7556377	PrimaryExpression	6		7556184	1					
ANR	7556378	AssignmentExpression	buf_size -= 7	61:29:1126:1138	7556184	1	True	-=			
ANR	7556379	Identifier	buf_size		7556184	0					
ANR	7556380	PrimaryExpression	7		7556184	1					
ANR	7556381	CompoundStatement		57:44:1006:1006	7556184	2					
ANR	7556382	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 2 ] ] << 24 ) | ( ff_reverse [ buf [ 1 ] ] << 16 ) | ( ff_reverse [ buf [ 0 ] ] << 8 )	63:12:1156:1308	7556184	0	True				
ANR	7556383	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 2 ] ] << 24 ) | ( ff_reverse [ buf [ 1 ] ] << 16 ) | ( ff_reverse [ buf [ 0 ] ] << 8 )		7556184	0		=			
ANR	7556384	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556385	UnaryOperator	*		7556184	0					
ANR	7556386	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556387	Identifier	o		7556184	0					
ANR	7556388	IncDec	++		7556184	1					
ANR	7556389	InclusiveOrExpression	( ff_reverse [ buf [ 2 ] ] << 24 ) | ( ff_reverse [ buf [ 1 ] ] << 16 ) | ( ff_reverse [ buf [ 0 ] ] << 8 )		7556184	1		|			
ANR	7556390	ShiftExpression	ff_reverse [ buf [ 2 ] ] << 24		7556184	0		<<			
ANR	7556391	ArrayIndexing	ff_reverse [ buf [ 2 ] ]		7556184	0					
ANR	7556392	Identifier	ff_reverse		7556184	0					
ANR	7556393	ArrayIndexing	buf [ 2 ]		7556184	1					
ANR	7556394	Identifier	buf		7556184	0					
ANR	7556395	PrimaryExpression	2		7556184	1					
ANR	7556396	PrimaryExpression	24		7556184	1					
ANR	7556397	InclusiveOrExpression	( ff_reverse [ buf [ 1 ] ] << 16 ) | ( ff_reverse [ buf [ 0 ] ] << 8 )		7556184	1		|			
ANR	7556398	ShiftExpression	ff_reverse [ buf [ 1 ] ] << 16		7556184	0		<<			
ANR	7556399	ArrayIndexing	ff_reverse [ buf [ 1 ] ]		7556184	0					
ANR	7556400	Identifier	ff_reverse		7556184	0					
ANR	7556401	ArrayIndexing	buf [ 1 ]		7556184	1					
ANR	7556402	Identifier	buf		7556184	0					
ANR	7556403	PrimaryExpression	1		7556184	1					
ANR	7556404	PrimaryExpression	16		7556184	1					
ANR	7556405	ShiftExpression	ff_reverse [ buf [ 0 ] ] << 8		7556184	1		<<			
ANR	7556406	ArrayIndexing	ff_reverse [ buf [ 0 ] ]		7556184	0					
ANR	7556407	Identifier	ff_reverse		7556184	0					
ANR	7556408	ArrayIndexing	buf [ 0 ]		7556184	1					
ANR	7556409	Identifier	buf		7556184	0					
ANR	7556410	PrimaryExpression	0		7556184	1					
ANR	7556411	PrimaryExpression	8		7556184	1					
ANR	7556412	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 6 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 5 ] ] << 20 ) | ( ff_reverse [ buf [ 4 ] ] << 12 ) | ( ff_reverse [ buf [ 3 ] & 0x0f ] << 4 )	69:12:1323:1531	7556184	1	True				
ANR	7556413	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 6 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 5 ] ] << 20 ) | ( ff_reverse [ buf [ 4 ] ] << 12 ) | ( ff_reverse [ buf [ 3 ] & 0x0f ] << 4 )		7556184	0		=			
ANR	7556414	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556415	UnaryOperator	*		7556184	0					
ANR	7556416	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556417	Identifier	o		7556184	0					
ANR	7556418	IncDec	++		7556184	1					
ANR	7556419	InclusiveOrExpression	( ff_reverse [ buf [ 6 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 5 ] ] << 20 ) | ( ff_reverse [ buf [ 4 ] ] << 12 ) | ( ff_reverse [ buf [ 3 ] & 0x0f ] << 4 )		7556184	1		|			
ANR	7556420	ShiftExpression	ff_reverse [ buf [ 6 ] & 0xf0 ] << 28		7556184	0		<<			
ANR	7556421	ArrayIndexing	ff_reverse [ buf [ 6 ] & 0xf0 ]		7556184	0					
ANR	7556422	Identifier	ff_reverse		7556184	0					
ANR	7556423	BitAndExpression	buf [ 6 ] & 0xf0		7556184	1		&			
ANR	7556424	ArrayIndexing	buf [ 6 ]		7556184	0					
ANR	7556425	Identifier	buf		7556184	0					
ANR	7556426	PrimaryExpression	6		7556184	1					
ANR	7556427	PrimaryExpression	0xf0		7556184	1					
ANR	7556428	PrimaryExpression	28		7556184	1					
ANR	7556429	InclusiveOrExpression	( ff_reverse [ buf [ 5 ] ] << 20 ) | ( ff_reverse [ buf [ 4 ] ] << 12 ) | ( ff_reverse [ buf [ 3 ] & 0x0f ] << 4 )		7556184	1		|			
ANR	7556430	ShiftExpression	ff_reverse [ buf [ 5 ] ] << 20		7556184	0		<<			
ANR	7556431	ArrayIndexing	ff_reverse [ buf [ 5 ] ]		7556184	0					
ANR	7556432	Identifier	ff_reverse		7556184	0					
ANR	7556433	ArrayIndexing	buf [ 5 ]		7556184	1					
ANR	7556434	Identifier	buf		7556184	0					
ANR	7556435	PrimaryExpression	5		7556184	1					
ANR	7556436	PrimaryExpression	20		7556184	1					
ANR	7556437	InclusiveOrExpression	( ff_reverse [ buf [ 4 ] ] << 12 ) | ( ff_reverse [ buf [ 3 ] & 0x0f ] << 4 )		7556184	1		|			
ANR	7556438	ShiftExpression	ff_reverse [ buf [ 4 ] ] << 12		7556184	0		<<			
ANR	7556439	ArrayIndexing	ff_reverse [ buf [ 4 ] ]		7556184	0					
ANR	7556440	Identifier	ff_reverse		7556184	0					
ANR	7556441	ArrayIndexing	buf [ 4 ]		7556184	1					
ANR	7556442	Identifier	buf		7556184	0					
ANR	7556443	PrimaryExpression	4		7556184	1					
ANR	7556444	PrimaryExpression	12		7556184	1					
ANR	7556445	ShiftExpression	ff_reverse [ buf [ 3 ] & 0x0f ] << 4		7556184	1		<<			
ANR	7556446	ArrayIndexing	ff_reverse [ buf [ 3 ] & 0x0f ]		7556184	0					
ANR	7556447	Identifier	ff_reverse		7556184	0					
ANR	7556448	BitAndExpression	buf [ 3 ] & 0x0f		7556184	1		&			
ANR	7556449	ArrayIndexing	buf [ 3 ]		7556184	0					
ANR	7556450	Identifier	buf		7556184	0					
ANR	7556451	PrimaryExpression	3		7556184	1					
ANR	7556452	PrimaryExpression	0x0f		7556184	1					
ANR	7556453	PrimaryExpression	4		7556184	1					
ANR	7556454	ExpressionStatement	buf += 7	77:12:1546:1554	7556184	2	True				
ANR	7556455	AssignmentExpression	buf += 7		7556184	0		+=			
ANR	7556456	Identifier	buf		7556184	0					
ANR	7556457	PrimaryExpression	7		7556184	1					
ANR	7556458	ExpressionStatement	o = ( uint32_t * ) frame -> data [ 0 ]	81:8:1576:1606	7556184	2	True				
ANR	7556459	AssignmentExpression	o = ( uint32_t * ) frame -> data [ 0 ]		7556184	0		=			
ANR	7556460	Identifier	o		7556184	0					
ANR	7556461	CastExpression	( uint32_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556462	CastTarget	uint32_t *		7556184	0					
ANR	7556463	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556464	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556465	Identifier	frame		7556184	0					
ANR	7556466	Identifier	data		7556184	1					
ANR	7556467	PrimaryExpression	0		7556184	1					
ANR	7556468	IfStatement	if ( avctx -> channels == 2 )		7556184	3					
ANR	7556469	Condition	avctx -> channels == 2	83:12:1621:1640	7556184	0	True				
ANR	7556470	EqualityExpression	avctx -> channels == 2		7556184	0		==			
ANR	7556471	PtrMemberAccess	avctx -> channels		7556184	0					
ANR	7556472	Identifier	avctx		7556184	0					
ANR	7556473	Identifier	channels		7556184	1					
ANR	7556474	PrimaryExpression	2		7556184	1					
ANR	7556475	ForStatement	for ( i = 0 ; i < frame -> nb_samples * 2 - 6 ; i += 2 )		7556184	1					
ANR	7556476	ForInit	i = 0 ;	85:17:1661:1664	7556184	0	True				
ANR	7556477	AssignmentExpression	i = 0		7556184	0		=			
ANR	7556478	Identifier	i		7556184	0					
ANR	7556479	PrimaryExpression	0		7556184	1					
ANR	7556480	Condition	i < frame -> nb_samples * 2 - 6	85:22:1666:1692	7556184	1	True				
ANR	7556481	RelationalExpression	i < frame -> nb_samples * 2 - 6		7556184	0		<			
ANR	7556482	Identifier	i		7556184	0					
ANR	7556483	AdditiveExpression	frame -> nb_samples * 2 - 6		7556184	1		-			
ANR	7556484	MultiplicativeExpression	frame -> nb_samples * 2		7556184	0		*			
ANR	7556485	PtrMemberAccess	frame -> nb_samples		7556184	0					
ANR	7556486	Identifier	frame		7556184	0					
ANR	7556487	Identifier	nb_samples		7556184	1					
ANR	7556488	PrimaryExpression	2		7556184	1					
ANR	7556489	PrimaryExpression	6		7556184	1					
ANR	7556490	AssignmentExpression	i += 2	85:51:1695:1698	7556184	2	True	+=			
ANR	7556491	Identifier	i		7556184	0					
ANR	7556492	PrimaryExpression	2		7556184	1					
ANR	7556493	CompoundStatement		81:57:1566:1566	7556184	3					
ANR	7556494	IfStatement	if ( o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ] )		7556184	0					
ANR	7556495	Condition	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]	87:20:1724:1757	7556184	0	True				
ANR	7556496	OrExpression	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	0		||			
ANR	7556497	ArrayIndexing	o [ i ]		7556184	0					
ANR	7556498	Identifier	o		7556184	0					
ANR	7556499	Identifier	i		7556184	1					
ANR	7556500	OrExpression	o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556501	ArrayIndexing	o [ i + 1 ]		7556184	0					
ANR	7556502	Identifier	o		7556184	0					
ANR	7556503	AdditiveExpression	i + 1		7556184	1		+			
ANR	7556504	Identifier	i		7556184	0					
ANR	7556505	PrimaryExpression	1		7556184	1					
ANR	7556506	OrExpression	o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556507	ArrayIndexing	o [ i + 2 ]		7556184	0					
ANR	7556508	Identifier	o		7556184	0					
ANR	7556509	AdditiveExpression	i + 2		7556184	1		+			
ANR	7556510	Identifier	i		7556184	0					
ANR	7556511	PrimaryExpression	2		7556184	1					
ANR	7556512	ArrayIndexing	o [ i + 3 ]		7556184	1					
ANR	7556513	Identifier	o		7556184	0					
ANR	7556514	AdditiveExpression	i + 3		7556184	1		+			
ANR	7556515	Identifier	i		7556184	0					
ANR	7556516	PrimaryExpression	3		7556184	1					
ANR	7556517	BreakStatement	break ;	89:20:1781:1786	7556184	1	True				
ANR	7556518	IfStatement	if ( o [ i + 4 ] == 0x96F87200U && o [ i + 5 ] == 0xA54E1F00 )		7556184	1					
ANR	7556519	Condition	o [ i + 4 ] == 0x96F87200U && o [ i + 5 ] == 0xA54E1F00	91:20:1809:1853	7556184	0	True				
ANR	7556520	AndExpression	o [ i + 4 ] == 0x96F87200U && o [ i + 5 ] == 0xA54E1F00		7556184	0		&&			
ANR	7556521	EqualityExpression	o [ i + 4 ] == 0x96F87200U		7556184	0		==			
ANR	7556522	ArrayIndexing	o [ i + 4 ]		7556184	0					
ANR	7556523	Identifier	o		7556184	0					
ANR	7556524	AdditiveExpression	i + 4		7556184	1		+			
ANR	7556525	Identifier	i		7556184	0					
ANR	7556526	PrimaryExpression	4		7556184	1					
ANR	7556527	PrimaryExpression	0x96F87200U		7556184	1					
ANR	7556528	EqualityExpression	o [ i + 5 ] == 0xA54E1F00		7556184	1		==			
ANR	7556529	ArrayIndexing	o [ i + 5 ]		7556184	0					
ANR	7556530	Identifier	o		7556184	0					
ANR	7556531	AdditiveExpression	i + 5		7556184	1		+			
ANR	7556532	Identifier	i		7556184	0					
ANR	7556533	PrimaryExpression	5		7556184	1					
ANR	7556534	PrimaryExpression	0xA54E1F00		7556184	1					
ANR	7556535	CompoundStatement		87:67:1721:1721	7556184	1					
ANR	7556536	ExpressionStatement	non_pcm_data_type = ( o [ i + 6 ] >> 16 ) & 0x1F	93:20:1879:1920	7556184	0	True				
ANR	7556537	AssignmentExpression	non_pcm_data_type = ( o [ i + 6 ] >> 16 ) & 0x1F		7556184	0		=			
ANR	7556538	Identifier	non_pcm_data_type		7556184	0					
ANR	7556539	BitAndExpression	( o [ i + 6 ] >> 16 ) & 0x1F		7556184	1		&			
ANR	7556540	ShiftExpression	o [ i + 6 ] >> 16		7556184	0		>>			
ANR	7556541	ArrayIndexing	o [ i + 6 ]		7556184	0					
ANR	7556542	Identifier	o		7556184	0					
ANR	7556543	AdditiveExpression	i + 6		7556184	1		+			
ANR	7556544	Identifier	i		7556184	0					
ANR	7556545	PrimaryExpression	6		7556184	1					
ANR	7556546	PrimaryExpression	16		7556184	1					
ANR	7556547	PrimaryExpression	0x1F		7556184	1					
ANR	7556548	BreakStatement	break ;	95:20:1943:1948	7556184	1	True				
ANR	7556549	ElseStatement	else		7556184	0					
ANR	7556550	IfStatement	if ( avctx -> bits_per_raw_sample == 20 )		7556184	0					
ANR	7556551	Condition	avctx -> bits_per_raw_sample == 20	101:15:2000:2031	7556184	0	True				
ANR	7556552	EqualityExpression	avctx -> bits_per_raw_sample == 20		7556184	0		==			
ANR	7556553	PtrMemberAccess	avctx -> bits_per_raw_sample		7556184	0					
ANR	7556554	Identifier	avctx		7556184	0					
ANR	7556555	Identifier	bits_per_raw_sample		7556184	1					
ANR	7556556	PrimaryExpression	20		7556184	1					
ANR	7556557	CompoundStatement		99:8:1910:1950	7556184	1					
ANR	7556558	IdentifierDeclStatement	uint32_t * o = ( uint32_t * ) frame -> data [ 0 ] ;	103:8:2045:2085	7556184	0	True				
ANR	7556559	IdentifierDecl	* o = ( uint32_t * ) frame -> data [ 0 ]		7556184	0					
ANR	7556560	IdentifierDeclType	uint32_t *		7556184	0					
ANR	7556561	Identifier	o		7556184	1					
ANR	7556562	AssignmentExpression	* o = ( uint32_t * ) frame -> data [ 0 ]		7556184	2		=			
ANR	7556563	Identifier	o		7556184	0					
ANR	7556564	CastExpression	( uint32_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556565	CastTarget	uint32_t *		7556184	0					
ANR	7556566	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556567	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556568	Identifier	frame		7556184	0					
ANR	7556569	Identifier	data		7556184	1					
ANR	7556570	PrimaryExpression	0		7556184	1					
ANR	7556571	ForStatement	for ( ; buf_size > 5 ; buf_size -= 6 )		7556184	1					
ANR	7556572	Condition	buf_size > 5	105:15:2103:2114	7556184	0	True				
ANR	7556573	RelationalExpression	buf_size > 5		7556184	0		>			
ANR	7556574	Identifier	buf_size		7556184	0					
ANR	7556575	PrimaryExpression	5		7556184	1					
ANR	7556576	AssignmentExpression	buf_size -= 6	105:29:2117:2129	7556184	1	True	-=			
ANR	7556577	Identifier	buf_size		7556184	0					
ANR	7556578	PrimaryExpression	6		7556184	1					
ANR	7556579	CompoundStatement		101:44:1997:1997	7556184	2					
ANR	7556580	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 2 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 1 ] ] << 20 ) | ( ff_reverse [ buf [ 0 ] ] << 12 )	107:12:2147:2299	7556184	0	True				
ANR	7556581	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 2 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 1 ] ] << 20 ) | ( ff_reverse [ buf [ 0 ] ] << 12 )		7556184	0		=			
ANR	7556582	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556583	UnaryOperator	*		7556184	0					
ANR	7556584	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556585	Identifier	o		7556184	0					
ANR	7556586	IncDec	++		7556184	1					
ANR	7556587	InclusiveOrExpression	( ff_reverse [ buf [ 2 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 1 ] ] << 20 ) | ( ff_reverse [ buf [ 0 ] ] << 12 )		7556184	1		|			
ANR	7556588	ShiftExpression	ff_reverse [ buf [ 2 ] & 0xf0 ] << 28		7556184	0		<<			
ANR	7556589	ArrayIndexing	ff_reverse [ buf [ 2 ] & 0xf0 ]		7556184	0					
ANR	7556590	Identifier	ff_reverse		7556184	0					
ANR	7556591	BitAndExpression	buf [ 2 ] & 0xf0		7556184	1		&			
ANR	7556592	ArrayIndexing	buf [ 2 ]		7556184	0					
ANR	7556593	Identifier	buf		7556184	0					
ANR	7556594	PrimaryExpression	2		7556184	1					
ANR	7556595	PrimaryExpression	0xf0		7556184	1					
ANR	7556596	PrimaryExpression	28		7556184	1					
ANR	7556597	InclusiveOrExpression	( ff_reverse [ buf [ 1 ] ] << 20 ) | ( ff_reverse [ buf [ 0 ] ] << 12 )		7556184	1		|			
ANR	7556598	ShiftExpression	ff_reverse [ buf [ 1 ] ] << 20		7556184	0		<<			
ANR	7556599	ArrayIndexing	ff_reverse [ buf [ 1 ] ]		7556184	0					
ANR	7556600	Identifier	ff_reverse		7556184	0					
ANR	7556601	ArrayIndexing	buf [ 1 ]		7556184	1					
ANR	7556602	Identifier	buf		7556184	0					
ANR	7556603	PrimaryExpression	1		7556184	1					
ANR	7556604	PrimaryExpression	20		7556184	1					
ANR	7556605	ShiftExpression	ff_reverse [ buf [ 0 ] ] << 12		7556184	1		<<			
ANR	7556606	ArrayIndexing	ff_reverse [ buf [ 0 ] ]		7556184	0					
ANR	7556607	Identifier	ff_reverse		7556184	0					
ANR	7556608	ArrayIndexing	buf [ 0 ]		7556184	1					
ANR	7556609	Identifier	buf		7556184	0					
ANR	7556610	PrimaryExpression	0		7556184	1					
ANR	7556611	PrimaryExpression	12		7556184	1					
ANR	7556612	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 5 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 4 ] ] << 20 ) | ( ff_reverse [ buf [ 3 ] ] << 12 )	113:12:2314:2466	7556184	1	True				
ANR	7556613	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 5 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 4 ] ] << 20 ) | ( ff_reverse [ buf [ 3 ] ] << 12 )		7556184	0		=			
ANR	7556614	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556615	UnaryOperator	*		7556184	0					
ANR	7556616	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556617	Identifier	o		7556184	0					
ANR	7556618	IncDec	++		7556184	1					
ANR	7556619	InclusiveOrExpression	( ff_reverse [ buf [ 5 ] & 0xf0 ] << 28 ) | ( ff_reverse [ buf [ 4 ] ] << 20 ) | ( ff_reverse [ buf [ 3 ] ] << 12 )		7556184	1		|			
ANR	7556620	ShiftExpression	ff_reverse [ buf [ 5 ] & 0xf0 ] << 28		7556184	0		<<			
ANR	7556621	ArrayIndexing	ff_reverse [ buf [ 5 ] & 0xf0 ]		7556184	0					
ANR	7556622	Identifier	ff_reverse		7556184	0					
ANR	7556623	BitAndExpression	buf [ 5 ] & 0xf0		7556184	1		&			
ANR	7556624	ArrayIndexing	buf [ 5 ]		7556184	0					
ANR	7556625	Identifier	buf		7556184	0					
ANR	7556626	PrimaryExpression	5		7556184	1					
ANR	7556627	PrimaryExpression	0xf0		7556184	1					
ANR	7556628	PrimaryExpression	28		7556184	1					
ANR	7556629	InclusiveOrExpression	( ff_reverse [ buf [ 4 ] ] << 20 ) | ( ff_reverse [ buf [ 3 ] ] << 12 )		7556184	1		|			
ANR	7556630	ShiftExpression	ff_reverse [ buf [ 4 ] ] << 20		7556184	0		<<			
ANR	7556631	ArrayIndexing	ff_reverse [ buf [ 4 ] ]		7556184	0					
ANR	7556632	Identifier	ff_reverse		7556184	0					
ANR	7556633	ArrayIndexing	buf [ 4 ]		7556184	1					
ANR	7556634	Identifier	buf		7556184	0					
ANR	7556635	PrimaryExpression	4		7556184	1					
ANR	7556636	PrimaryExpression	20		7556184	1					
ANR	7556637	ShiftExpression	ff_reverse [ buf [ 3 ] ] << 12		7556184	1		<<			
ANR	7556638	ArrayIndexing	ff_reverse [ buf [ 3 ] ]		7556184	0					
ANR	7556639	Identifier	ff_reverse		7556184	0					
ANR	7556640	ArrayIndexing	buf [ 3 ]		7556184	1					
ANR	7556641	Identifier	buf		7556184	0					
ANR	7556642	PrimaryExpression	3		7556184	1					
ANR	7556643	PrimaryExpression	12		7556184	1					
ANR	7556644	ExpressionStatement	buf += 6	119:12:2481:2489	7556184	2	True				
ANR	7556645	AssignmentExpression	buf += 6		7556184	0		+=			
ANR	7556646	Identifier	buf		7556184	0					
ANR	7556647	PrimaryExpression	6		7556184	1					
ANR	7556648	ExpressionStatement	o = ( uint32_t * ) frame -> data [ 0 ]	123:8:2511:2541	7556184	2	True				
ANR	7556649	AssignmentExpression	o = ( uint32_t * ) frame -> data [ 0 ]		7556184	0		=			
ANR	7556650	Identifier	o		7556184	0					
ANR	7556651	CastExpression	( uint32_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556652	CastTarget	uint32_t *		7556184	0					
ANR	7556653	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556654	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556655	Identifier	frame		7556184	0					
ANR	7556656	Identifier	data		7556184	1					
ANR	7556657	PrimaryExpression	0		7556184	1					
ANR	7556658	IfStatement	if ( avctx -> channels == 2 )		7556184	3					
ANR	7556659	Condition	avctx -> channels == 2	125:12:2556:2575	7556184	0	True				
ANR	7556660	EqualityExpression	avctx -> channels == 2		7556184	0		==			
ANR	7556661	PtrMemberAccess	avctx -> channels		7556184	0					
ANR	7556662	Identifier	avctx		7556184	0					
ANR	7556663	Identifier	channels		7556184	1					
ANR	7556664	PrimaryExpression	2		7556184	1					
ANR	7556665	ForStatement	for ( i = 0 ; i < frame -> nb_samples * 2 - 6 ; i += 2 )		7556184	1					
ANR	7556666	ForInit	i = 0 ;	127:17:2596:2599	7556184	0	True				
ANR	7556667	AssignmentExpression	i = 0		7556184	0		=			
ANR	7556668	Identifier	i		7556184	0					
ANR	7556669	PrimaryExpression	0		7556184	1					
ANR	7556670	Condition	i < frame -> nb_samples * 2 - 6	127:22:2601:2627	7556184	1	True				
ANR	7556671	RelationalExpression	i < frame -> nb_samples * 2 - 6		7556184	0		<			
ANR	7556672	Identifier	i		7556184	0					
ANR	7556673	AdditiveExpression	frame -> nb_samples * 2 - 6		7556184	1		-			
ANR	7556674	MultiplicativeExpression	frame -> nb_samples * 2		7556184	0		*			
ANR	7556675	PtrMemberAccess	frame -> nb_samples		7556184	0					
ANR	7556676	Identifier	frame		7556184	0					
ANR	7556677	Identifier	nb_samples		7556184	1					
ANR	7556678	PrimaryExpression	2		7556184	1					
ANR	7556679	PrimaryExpression	6		7556184	1					
ANR	7556680	AssignmentExpression	i += 2	127:51:2630:2633	7556184	2	True	+=			
ANR	7556681	Identifier	i		7556184	0					
ANR	7556682	PrimaryExpression	2		7556184	1					
ANR	7556683	CompoundStatement		123:57:2501:2501	7556184	3					
ANR	7556684	IfStatement	if ( o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ] )		7556184	0					
ANR	7556685	Condition	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]	129:20:2659:2692	7556184	0	True				
ANR	7556686	OrExpression	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	0		||			
ANR	7556687	ArrayIndexing	o [ i ]		7556184	0					
ANR	7556688	Identifier	o		7556184	0					
ANR	7556689	Identifier	i		7556184	1					
ANR	7556690	OrExpression	o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556691	ArrayIndexing	o [ i + 1 ]		7556184	0					
ANR	7556692	Identifier	o		7556184	0					
ANR	7556693	AdditiveExpression	i + 1		7556184	1		+			
ANR	7556694	Identifier	i		7556184	0					
ANR	7556695	PrimaryExpression	1		7556184	1					
ANR	7556696	OrExpression	o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556697	ArrayIndexing	o [ i + 2 ]		7556184	0					
ANR	7556698	Identifier	o		7556184	0					
ANR	7556699	AdditiveExpression	i + 2		7556184	1		+			
ANR	7556700	Identifier	i		7556184	0					
ANR	7556701	PrimaryExpression	2		7556184	1					
ANR	7556702	ArrayIndexing	o [ i + 3 ]		7556184	1					
ANR	7556703	Identifier	o		7556184	0					
ANR	7556704	AdditiveExpression	i + 3		7556184	1		+			
ANR	7556705	Identifier	i		7556184	0					
ANR	7556706	PrimaryExpression	3		7556184	1					
ANR	7556707	BreakStatement	break ;	131:20:2716:2721	7556184	1	True				
ANR	7556708	IfStatement	if ( o [ i + 4 ] == 0x6F872000U && o [ i + 5 ] == 0x54E1F000 )		7556184	1					
ANR	7556709	Condition	o [ i + 4 ] == 0x6F872000U && o [ i + 5 ] == 0x54E1F000	133:20:2744:2788	7556184	0	True				
ANR	7556710	AndExpression	o [ i + 4 ] == 0x6F872000U && o [ i + 5 ] == 0x54E1F000		7556184	0		&&			
ANR	7556711	EqualityExpression	o [ i + 4 ] == 0x6F872000U		7556184	0		==			
ANR	7556712	ArrayIndexing	o [ i + 4 ]		7556184	0					
ANR	7556713	Identifier	o		7556184	0					
ANR	7556714	AdditiveExpression	i + 4		7556184	1		+			
ANR	7556715	Identifier	i		7556184	0					
ANR	7556716	PrimaryExpression	4		7556184	1					
ANR	7556717	PrimaryExpression	0x6F872000U		7556184	1					
ANR	7556718	EqualityExpression	o [ i + 5 ] == 0x54E1F000		7556184	1		==			
ANR	7556719	ArrayIndexing	o [ i + 5 ]		7556184	0					
ANR	7556720	Identifier	o		7556184	0					
ANR	7556721	AdditiveExpression	i + 5		7556184	1		+			
ANR	7556722	Identifier	i		7556184	0					
ANR	7556723	PrimaryExpression	5		7556184	1					
ANR	7556724	PrimaryExpression	0x54E1F000		7556184	1					
ANR	7556725	CompoundStatement		129:67:2656:2656	7556184	1					
ANR	7556726	ExpressionStatement	non_pcm_data_type = ( o [ i + 6 ] >> 16 ) & 0x1F	135:20:2814:2855	7556184	0	True				
ANR	7556727	AssignmentExpression	non_pcm_data_type = ( o [ i + 6 ] >> 16 ) & 0x1F		7556184	0		=			
ANR	7556728	Identifier	non_pcm_data_type		7556184	0					
ANR	7556729	BitAndExpression	( o [ i + 6 ] >> 16 ) & 0x1F		7556184	1		&			
ANR	7556730	ShiftExpression	o [ i + 6 ] >> 16		7556184	0		>>			
ANR	7556731	ArrayIndexing	o [ i + 6 ]		7556184	0					
ANR	7556732	Identifier	o		7556184	0					
ANR	7556733	AdditiveExpression	i + 6		7556184	1		+			
ANR	7556734	Identifier	i		7556184	0					
ANR	7556735	PrimaryExpression	6		7556184	1					
ANR	7556736	PrimaryExpression	16		7556184	1					
ANR	7556737	PrimaryExpression	0x1F		7556184	1					
ANR	7556738	BreakStatement	break ;	137:20:2878:2883	7556184	1	True				
ANR	7556739	ElseStatement	else		7556184	0					
ANR	7556740	CompoundStatement		141:8:2807:2847	7556184	0					
ANR	7556741	IdentifierDeclStatement	uint16_t * o = ( uint16_t * ) frame -> data [ 0 ] ;	145:8:2942:2982	7556184	0	True				
ANR	7556742	IdentifierDecl	* o = ( uint16_t * ) frame -> data [ 0 ]		7556184	0					
ANR	7556743	IdentifierDeclType	uint16_t *		7556184	0					
ANR	7556744	Identifier	o		7556184	1					
ANR	7556745	AssignmentExpression	* o = ( uint16_t * ) frame -> data [ 0 ]		7556184	2		=			
ANR	7556746	Identifier	o		7556184	0					
ANR	7556747	CastExpression	( uint16_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556748	CastTarget	uint16_t *		7556184	0					
ANR	7556749	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556750	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556751	Identifier	frame		7556184	0					
ANR	7556752	Identifier	data		7556184	1					
ANR	7556753	PrimaryExpression	0		7556184	1					
ANR	7556754	ForStatement	for ( ; buf_size > 4 ; buf_size -= 5 )		7556184	1					
ANR	7556755	Condition	buf_size > 4	147:15:3000:3011	7556184	0	True				
ANR	7556756	RelationalExpression	buf_size > 4		7556184	0		>			
ANR	7556757	Identifier	buf_size		7556184	0					
ANR	7556758	PrimaryExpression	4		7556184	1					
ANR	7556759	AssignmentExpression	buf_size -= 5	147:29:3014:3026	7556184	1	True	-=			
ANR	7556760	Identifier	buf_size		7556184	0					
ANR	7556761	PrimaryExpression	5		7556184	1					
ANR	7556762	CompoundStatement		143:44:2894:2894	7556184	2					
ANR	7556763	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 1 ] ] << 8 ) | ff_reverse [ buf [ 0 ] ]	149:12:3044:3126	7556184	0	True				
ANR	7556764	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 1 ] ] << 8 ) | ff_reverse [ buf [ 0 ] ]		7556184	0		=			
ANR	7556765	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556766	UnaryOperator	*		7556184	0					
ANR	7556767	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556768	Identifier	o		7556184	0					
ANR	7556769	IncDec	++		7556184	1					
ANR	7556770	InclusiveOrExpression	( ff_reverse [ buf [ 1 ] ] << 8 ) | ff_reverse [ buf [ 0 ] ]		7556184	1		|			
ANR	7556771	ShiftExpression	ff_reverse [ buf [ 1 ] ] << 8		7556184	0		<<			
ANR	7556772	ArrayIndexing	ff_reverse [ buf [ 1 ] ]		7556184	0					
ANR	7556773	Identifier	ff_reverse		7556184	0					
ANR	7556774	ArrayIndexing	buf [ 1 ]		7556184	1					
ANR	7556775	Identifier	buf		7556184	0					
ANR	7556776	PrimaryExpression	1		7556184	1					
ANR	7556777	PrimaryExpression	8		7556184	1					
ANR	7556778	ArrayIndexing	ff_reverse [ buf [ 0 ] ]		7556184	1					
ANR	7556779	Identifier	ff_reverse		7556184	0					
ANR	7556780	ArrayIndexing	buf [ 0 ]		7556184	1					
ANR	7556781	Identifier	buf		7556184	0					
ANR	7556782	PrimaryExpression	0		7556184	1					
ANR	7556783	ExpressionStatement	* o ++ = ( ff_reverse [ buf [ 4 ] & 0xf0 ] << 12 ) | ( ff_reverse [ buf [ 3 ] ] << 4 ) | ( ff_reverse [ buf [ 2 ] ] >> 4 )	153:12:3141:3293	7556184	1	True				
ANR	7556784	AssignmentExpression	* o ++ = ( ff_reverse [ buf [ 4 ] & 0xf0 ] << 12 ) | ( ff_reverse [ buf [ 3 ] ] << 4 ) | ( ff_reverse [ buf [ 2 ] ] >> 4 )		7556184	0		=			
ANR	7556785	UnaryOperationExpression	* o ++		7556184	0					
ANR	7556786	UnaryOperator	*		7556184	0					
ANR	7556787	PostIncDecOperationExpression	o ++		7556184	1					
ANR	7556788	Identifier	o		7556184	0					
ANR	7556789	IncDec	++		7556184	1					
ANR	7556790	InclusiveOrExpression	( ff_reverse [ buf [ 4 ] & 0xf0 ] << 12 ) | ( ff_reverse [ buf [ 3 ] ] << 4 ) | ( ff_reverse [ buf [ 2 ] ] >> 4 )		7556184	1		|			
ANR	7556791	ShiftExpression	ff_reverse [ buf [ 4 ] & 0xf0 ] << 12		7556184	0		<<			
ANR	7556792	ArrayIndexing	ff_reverse [ buf [ 4 ] & 0xf0 ]		7556184	0					
ANR	7556793	Identifier	ff_reverse		7556184	0					
ANR	7556794	BitAndExpression	buf [ 4 ] & 0xf0		7556184	1		&			
ANR	7556795	ArrayIndexing	buf [ 4 ]		7556184	0					
ANR	7556796	Identifier	buf		7556184	0					
ANR	7556797	PrimaryExpression	4		7556184	1					
ANR	7556798	PrimaryExpression	0xf0		7556184	1					
ANR	7556799	PrimaryExpression	12		7556184	1					
ANR	7556800	InclusiveOrExpression	( ff_reverse [ buf [ 3 ] ] << 4 ) | ( ff_reverse [ buf [ 2 ] ] >> 4 )		7556184	1		|			
ANR	7556801	ShiftExpression	ff_reverse [ buf [ 3 ] ] << 4		7556184	0		<<			
ANR	7556802	ArrayIndexing	ff_reverse [ buf [ 3 ] ]		7556184	0					
ANR	7556803	Identifier	ff_reverse		7556184	0					
ANR	7556804	ArrayIndexing	buf [ 3 ]		7556184	1					
ANR	7556805	Identifier	buf		7556184	0					
ANR	7556806	PrimaryExpression	3		7556184	1					
ANR	7556807	PrimaryExpression	4		7556184	1					
ANR	7556808	ShiftExpression	ff_reverse [ buf [ 2 ] ] >> 4		7556184	1		>>			
ANR	7556809	ArrayIndexing	ff_reverse [ buf [ 2 ] ]		7556184	0					
ANR	7556810	Identifier	ff_reverse		7556184	0					
ANR	7556811	ArrayIndexing	buf [ 2 ]		7556184	1					
ANR	7556812	Identifier	buf		7556184	0					
ANR	7556813	PrimaryExpression	2		7556184	1					
ANR	7556814	PrimaryExpression	4		7556184	1					
ANR	7556815	ExpressionStatement	buf += 5	159:12:3308:3316	7556184	2	True				
ANR	7556816	AssignmentExpression	buf += 5		7556184	0		+=			
ANR	7556817	Identifier	buf		7556184	0					
ANR	7556818	PrimaryExpression	5		7556184	1					
ANR	7556819	ExpressionStatement	o = ( uint16_t * ) frame -> data [ 0 ]	163:8:3338:3368	7556184	2	True				
ANR	7556820	AssignmentExpression	o = ( uint16_t * ) frame -> data [ 0 ]		7556184	0		=			
ANR	7556821	Identifier	o		7556184	0					
ANR	7556822	CastExpression	( uint16_t * ) frame -> data [ 0 ]		7556184	1					
ANR	7556823	CastTarget	uint16_t *		7556184	0					
ANR	7556824	ArrayIndexing	frame -> data [ 0 ]		7556184	1					
ANR	7556825	PtrMemberAccess	frame -> data		7556184	0					
ANR	7556826	Identifier	frame		7556184	0					
ANR	7556827	Identifier	data		7556184	1					
ANR	7556828	PrimaryExpression	0		7556184	1					
ANR	7556829	IfStatement	if ( avctx -> channels == 2 )		7556184	3					
ANR	7556830	Condition	avctx -> channels == 2	165:12:3383:3402	7556184	0	True				
ANR	7556831	EqualityExpression	avctx -> channels == 2		7556184	0		==			
ANR	7556832	PtrMemberAccess	avctx -> channels		7556184	0					
ANR	7556833	Identifier	avctx		7556184	0					
ANR	7556834	Identifier	channels		7556184	1					
ANR	7556835	PrimaryExpression	2		7556184	1					
ANR	7556836	ForStatement	for ( i = 0 ; i < frame -> nb_samples * 2 - 6 ; i += 2 )		7556184	1					
ANR	7556837	ForInit	i = 0 ;	167:17:3423:3426	7556184	0	True				
ANR	7556838	AssignmentExpression	i = 0		7556184	0		=			
ANR	7556839	Identifier	i		7556184	0					
ANR	7556840	PrimaryExpression	0		7556184	1					
ANR	7556841	Condition	i < frame -> nb_samples * 2 - 6	167:22:3428:3454	7556184	1	True				
ANR	7556842	RelationalExpression	i < frame -> nb_samples * 2 - 6		7556184	0		<			
ANR	7556843	Identifier	i		7556184	0					
ANR	7556844	AdditiveExpression	frame -> nb_samples * 2 - 6		7556184	1		-			
ANR	7556845	MultiplicativeExpression	frame -> nb_samples * 2		7556184	0		*			
ANR	7556846	PtrMemberAccess	frame -> nb_samples		7556184	0					
ANR	7556847	Identifier	frame		7556184	0					
ANR	7556848	Identifier	nb_samples		7556184	1					
ANR	7556849	PrimaryExpression	2		7556184	1					
ANR	7556850	PrimaryExpression	6		7556184	1					
ANR	7556851	AssignmentExpression	i += 2	167:51:3457:3460	7556184	2	True	+=			
ANR	7556852	Identifier	i		7556184	0					
ANR	7556853	PrimaryExpression	2		7556184	1					
ANR	7556854	CompoundStatement		163:57:3328:3328	7556184	3					
ANR	7556855	IfStatement	if ( o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ] )		7556184	0					
ANR	7556856	Condition	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]	169:20:3486:3519	7556184	0	True				
ANR	7556857	OrExpression	o [ i ] || o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	0		||			
ANR	7556858	ArrayIndexing	o [ i ]		7556184	0					
ANR	7556859	Identifier	o		7556184	0					
ANR	7556860	Identifier	i		7556184	1					
ANR	7556861	OrExpression	o [ i + 1 ] || o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556862	ArrayIndexing	o [ i + 1 ]		7556184	0					
ANR	7556863	Identifier	o		7556184	0					
ANR	7556864	AdditiveExpression	i + 1		7556184	1		+			
ANR	7556865	Identifier	i		7556184	0					
ANR	7556866	PrimaryExpression	1		7556184	1					
ANR	7556867	OrExpression	o [ i + 2 ] || o [ i + 3 ]		7556184	1		||			
ANR	7556868	ArrayIndexing	o [ i + 2 ]		7556184	0					
ANR	7556869	Identifier	o		7556184	0					
ANR	7556870	AdditiveExpression	i + 2		7556184	1		+			
ANR	7556871	Identifier	i		7556184	0					
ANR	7556872	PrimaryExpression	2		7556184	1					
ANR	7556873	ArrayIndexing	o [ i + 3 ]		7556184	1					
ANR	7556874	Identifier	o		7556184	0					
ANR	7556875	AdditiveExpression	i + 3		7556184	1		+			
ANR	7556876	Identifier	i		7556184	0					
ANR	7556877	PrimaryExpression	3		7556184	1					
ANR	7556878	BreakStatement	break ;	171:20:3543:3548	7556184	1	True				
ANR	7556879	IfStatement	if ( o [ i + 4 ] == 0xF872U && o [ i + 5 ] == 0x4E1F )		7556184	1					
ANR	7556880	Condition	o [ i + 4 ] == 0xF872U && o [ i + 5 ] == 0x4E1F	173:20:3571:3607	7556184	0	True				
ANR	7556881	AndExpression	o [ i + 4 ] == 0xF872U && o [ i + 5 ] == 0x4E1F		7556184	0		&&			
ANR	7556882	EqualityExpression	o [ i + 4 ] == 0xF872U		7556184	0		==			
ANR	7556883	ArrayIndexing	o [ i + 4 ]		7556184	0					
ANR	7556884	Identifier	o		7556184	0					
ANR	7556885	AdditiveExpression	i + 4		7556184	1		+			
ANR	7556886	Identifier	i		7556184	0					
ANR	7556887	PrimaryExpression	4		7556184	1					
ANR	7556888	PrimaryExpression	0xF872U		7556184	1					
ANR	7556889	EqualityExpression	o [ i + 5 ] == 0x4E1F		7556184	1		==			
ANR	7556890	ArrayIndexing	o [ i + 5 ]		7556184	0					
ANR	7556891	Identifier	o		7556184	0					
ANR	7556892	AdditiveExpression	i + 5		7556184	1		+			
ANR	7556893	Identifier	i		7556184	0					
ANR	7556894	PrimaryExpression	5		7556184	1					
ANR	7556895	PrimaryExpression	0x4E1F		7556184	1					
ANR	7556896	CompoundStatement		169:59:3475:3475	7556184	1					
ANR	7556897	ExpressionStatement	non_pcm_data_type = ( o [ i + 6 ] & 0x1F )	175:20:3633:3668	7556184	0	True				
ANR	7556898	AssignmentExpression	non_pcm_data_type = ( o [ i + 6 ] & 0x1F )		7556184	0		=			
ANR	7556899	Identifier	non_pcm_data_type		7556184	0					
ANR	7556900	BitAndExpression	o [ i + 6 ] & 0x1F		7556184	1		&			
ANR	7556901	ArrayIndexing	o [ i + 6 ]		7556184	0					
ANR	7556902	Identifier	o		7556184	0					
ANR	7556903	AdditiveExpression	i + 6		7556184	1		+			
ANR	7556904	Identifier	i		7556184	0					
ANR	7556905	PrimaryExpression	6		7556184	1					
ANR	7556906	PrimaryExpression	0x1F		7556184	1					
ANR	7556907	BreakStatement	break ;	177:20:3691:3696	7556184	1	True				
ANR	7556908	IfStatement	if ( non_pcm_data_type != - 1 )		7556184	17					
ANR	7556909	Condition	non_pcm_data_type != - 1	187:8:3750:3772	7556184	0	True				
ANR	7556910	EqualityExpression	non_pcm_data_type != - 1		7556184	0		!=			
ANR	7556911	Identifier	non_pcm_data_type		7556184	0					
ANR	7556912	UnaryOperationExpression	- 1		7556184	1					
ANR	7556913	UnaryOperator	-		7556184	0					
ANR	7556914	PrimaryExpression	1		7556184	1					
ANR	7556915	CompoundStatement		183:33:3640:3640	7556184	1					
ANR	7556916	IfStatement	if ( s -> non_pcm_mode == 3 )		7556184	0					
ANR	7556917	Condition	s -> non_pcm_mode == 3	189:12:3790:3809	7556184	0	True				
ANR	7556918	EqualityExpression	s -> non_pcm_mode == 3		7556184	0		==			
ANR	7556919	PtrMemberAccess	s -> non_pcm_mode		7556184	0					
ANR	7556920	Identifier	s		7556184	0					
ANR	7556921	Identifier	non_pcm_mode		7556184	1					
ANR	7556922	PrimaryExpression	3		7556184	1					
ANR	7556923	CompoundStatement		185:34:3677:3677	7556184	1					
ANR	7556924	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""S302 non PCM mode with data type %d not supported\\n"" , non_pcm_data_type )"	191:12:3827:3968	7556184	0	True				
ANR	7556925	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""S302 non PCM mode with data type %d not supported\\n"" , non_pcm_data_type )"		7556184	0					
ANR	7556926	Callee	av_log		7556184	0					
ANR	7556927	Identifier	av_log		7556184	0					
ANR	7556928	ArgumentList	avctx		7556184	1					
ANR	7556929	Argument	avctx		7556184	0					
ANR	7556930	Identifier	avctx		7556184	0					
ANR	7556931	Argument	AV_LOG_ERROR		7556184	1					
ANR	7556932	Identifier	AV_LOG_ERROR		7556184	0					
ANR	7556933	Argument	"""S302 non PCM mode with data type %d not supported\\n"""		7556184	2					
ANR	7556934	PrimaryExpression	"""S302 non PCM mode with data type %d not supported\\n"""		7556184	0					
ANR	7556935	Argument	non_pcm_data_type		7556184	3					
ANR	7556936	Identifier	non_pcm_data_type		7556184	0					
ANR	7556937	ReturnStatement	return AVERROR_PATCHWELCOME ;	197:12:3983:4010	7556184	1	True				
ANR	7556938	Identifier	AVERROR_PATCHWELCOME		7556184	0					
ANR	7556939	IfStatement	if ( s -> non_pcm_mode & 1 )		7556184	1					
ANR	7556940	Condition	s -> non_pcm_mode & 1	201:12:4036:4054	7556184	0	True				
ANR	7556941	BitAndExpression	s -> non_pcm_mode & 1		7556184	0		&			
ANR	7556942	PtrMemberAccess	s -> non_pcm_mode		7556184	0					
ANR	7556943	Identifier	s		7556184	0					
ANR	7556944	Identifier	non_pcm_mode		7556184	1					
ANR	7556945	PrimaryExpression	1		7556184	1					
ANR	7556946	CompoundStatement		197:33:3922:3922	7556184	1					
ANR	7556947	ReturnStatement	return avpkt -> size ;	203:12:4072:4090	7556184	0	True				
ANR	7556948	PtrMemberAccess	avpkt -> size		7556184	0					
ANR	7556949	Identifier	avpkt		7556184	0					
ANR	7556950	Identifier	size		7556184	1					
ANR	7556951	ExpressionStatement	avctx -> sample_rate = 48000	211:4:4117:4143	7556184	18	True				
ANR	7556952	AssignmentExpression	avctx -> sample_rate = 48000		7556184	0		=			
ANR	7556953	PtrMemberAccess	avctx -> sample_rate		7556184	0					
ANR	7556954	Identifier	avctx		7556184	0					
ANR	7556955	Identifier	sample_rate		7556184	1					
ANR	7556956	PrimaryExpression	48000		7556184	1					
ANR	7556957	ExpressionStatement	* got_frame_ptr = 1	215:4:4152:4170	7556184	19	True				
ANR	7556958	AssignmentExpression	* got_frame_ptr = 1		7556184	0		=			
ANR	7556959	UnaryOperationExpression	* got_frame_ptr		7556184	0					
ANR	7556960	UnaryOperator	*		7556184	0					
ANR	7556961	Identifier	got_frame_ptr		7556184	1					
ANR	7556962	PrimaryExpression	1		7556184	1					
ANR	7556963	ReturnStatement	return avpkt -> size ;	219:4:4179:4197	7556184	20	True				
ANR	7556964	PtrMemberAccess	avpkt -> size		7556184	0					
ANR	7556965	Identifier	avpkt		7556184	0					
ANR	7556966	Identifier	size		7556184	1					
ANR	7556967	ReturnType	static int		7556184	1					
ANR	7556968	Identifier	s302m_decode_frame		7556184	2					
ANR	7556969	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		7556184	3					
ANR	7556970	Parameter	AVCodecContext * avctx	1:30:30:50	7556184	0	True				
ANR	7556971	ParameterType	AVCodecContext *		7556184	0					
ANR	7556972	Identifier	avctx		7556184	1					
ANR	7556973	Parameter	void * data	1:53:53:62	7556184	1	True				
ANR	7556974	ParameterType	void *		7556184	0					
ANR	7556975	Identifier	data		7556184	1					
ANR	7556976	Parameter	int * got_frame_ptr	3:30:96:113	7556184	2	True				
ANR	7556977	ParameterType	int *		7556184	0					
ANR	7556978	Identifier	got_frame_ptr		7556184	1					
ANR	7556979	Parameter	AVPacket * avpkt	3:50:116:130	7556184	3	True				
ANR	7556980	ParameterType	AVPacket *		7556184	0					
ANR	7556981	Identifier	avpkt		7556184	1					
ANR	7556982	CFGEntryNode	ENTRY		7556184		True				
ANR	7556983	CFGExitNode	EXIT		7556184		True				
ANR	7556984	Symbol	* frame -> data		7556184						
ANR	7556985	Symbol	data		7556184						
ANR	7556986	Symbol	* frame		7556184						
ANR	7556987	Symbol	* o ++		7556184						
ANR	7556988	Symbol	ff_reverse		7556184						
ANR	7556989	Symbol	* * buf		7556184						
ANR	7556990	Symbol	non_pcm_data_type		7556184						
ANR	7556991	Symbol	got_frame_ptr		7556184						
ANR	7556992	Symbol	avpkt		7556184						
ANR	7556993	Symbol	frame_size		7556184						
ANR	7556994	Symbol	s302m_parse_frame_header		7556184						
ANR	7556995	Symbol	avctx -> channels		7556184						
ANR	7556996	Symbol	avctx -> bits_per_raw_sample		7556184						
ANR	7556997	Symbol	* * frame		7556184						
ANR	7556998	Symbol	ff_get_buffer		7556184						
ANR	7556999	Symbol	avpkt -> size		7556184						
ANR	7557000	Symbol	AVERROR_PATCHWELCOME		7556184						
ANR	7557001	Symbol	avctx		7556184						
ANR	7557002	Symbol	s -> non_pcm_mode		7556184						
ANR	7557003	Symbol	block_size		7556184						
ANR	7557004	Symbol	frame -> data		7556184						
ANR	7557005	Symbol	ret		7556184						
ANR	7557006	Symbol	* avpkt		7556184						
ANR	7557007	Symbol	frame -> nb_samples		7556184						
ANR	7557008	Symbol	* buf		7556184						
ANR	7557009	Symbol	AV_LOG_ERROR		7556184						
ANR	7557010	Symbol	buf_size		7556184						
ANR	7557011	Symbol	AES3_HEADER_LEN		7556184						
ANR	7557012	Symbol	* got_frame_ptr		7556184						
ANR	7557013	Symbol	i		7556184						
ANR	7557014	Symbol	avctx -> priv_data		7556184						
ANR	7557015	Symbol	avctx -> sample_rate		7556184						
ANR	7557016	Symbol	o		7556184						
ANR	7557017	Symbol	* avctx		7556184						
ANR	7557018	Symbol	buf		7556184						
ANR	7557019	Symbol	s		7556184						
ANR	7557020	Symbol	avctx -> bit_rate		7556184						
ANR	7557021	Symbol	* i		7556184						
ANR	7557022	Symbol	* ff_reverse		7556184						
ANR	7557023	Symbol	* o		7556184						
ANR	7557024	Symbol	avpkt -> data		7556184						
ANR	7557025	Symbol	* s		7556184						
ANR	7557026	Symbol	frame		7556184						
