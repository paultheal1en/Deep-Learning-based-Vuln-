command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9260664	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vorbis_floor0_decode_0.c								
ANR	9260665	Function	vorbis_floor0_decode	1:0:0:4107							
ANR	9260666	FunctionDef	"vorbis_floor0_decode (vorbis_context * vc , vorbis_floor_data * vfu , float * vec)"		9260665	0					
ANR	9260667	CompoundStatement		3:77:139:4107	9260665	0					
ANR	9260668	IdentifierDeclStatement	vorbis_floor0 * vf = & vfu -> t0 ;	5:4:146:173	9260665	0	True				
ANR	9260669	IdentifierDecl	* vf = & vfu -> t0		9260665	0					
ANR	9260670	IdentifierDeclType	vorbis_floor0 *		9260665	0					
ANR	9260671	Identifier	vf		9260665	1					
ANR	9260672	AssignmentExpression	* vf = & vfu -> t0		9260665	2		=			
ANR	9260673	Identifier	vf		9260665	0					
ANR	9260674	UnaryOperationExpression	& vfu -> t0		9260665	1					
ANR	9260675	UnaryOperator	&		9260665	0					
ANR	9260676	PtrMemberAccess	vfu -> t0		9260665	1					
ANR	9260677	Identifier	vfu		9260665	0					
ANR	9260678	Identifier	t0		9260665	1					
ANR	9260679	IdentifierDeclStatement	float * lsp = vf -> lsp ;	7:4:180:199	9260665	1	True				
ANR	9260680	IdentifierDecl	* lsp = vf -> lsp		9260665	0					
ANR	9260681	IdentifierDeclType	float *		9260665	0					
ANR	9260682	Identifier	lsp		9260665	1					
ANR	9260683	AssignmentExpression	* lsp = vf -> lsp		9260665	2		=			
ANR	9260684	Identifier	lsp		9260665	0					
ANR	9260685	PtrMemberAccess	vf -> lsp		9260665	1					
ANR	9260686	Identifier	vf		9260665	0					
ANR	9260687	Identifier	lsp		9260665	1					
ANR	9260688	IdentifierDeclStatement	uint_fast32_t amplitude ;	9:4:206:229	9260665	2	True				
ANR	9260689	IdentifierDecl	amplitude		9260665	0					
ANR	9260690	IdentifierDeclType	uint_fast32_t		9260665	0					
ANR	9260691	Identifier	amplitude		9260665	1					
ANR	9260692	IdentifierDeclStatement	uint_fast32_t book_idx ;	11:4:236:258	9260665	3	True				
ANR	9260693	IdentifierDecl	book_idx		9260665	0					
ANR	9260694	IdentifierDeclType	uint_fast32_t		9260665	0					
ANR	9260695	Identifier	book_idx		9260665	1					
ANR	9260696	ExpressionStatement	"amplitude = get_bits ( & vc -> gb , vf -> amplitude_bits )"	15:4:267:314	9260665	4	True				
ANR	9260697	AssignmentExpression	"amplitude = get_bits ( & vc -> gb , vf -> amplitude_bits )"		9260665	0		=			
ANR	9260698	Identifier	amplitude		9260665	0					
ANR	9260699	CallExpression	"get_bits ( & vc -> gb , vf -> amplitude_bits )"		9260665	1					
ANR	9260700	Callee	get_bits		9260665	0					
ANR	9260701	Identifier	get_bits		9260665	0					
ANR	9260702	ArgumentList	& vc -> gb		9260665	1					
ANR	9260703	Argument	& vc -> gb		9260665	0					
ANR	9260704	UnaryOperationExpression	& vc -> gb		9260665	0					
ANR	9260705	UnaryOperator	&		9260665	0					
ANR	9260706	PtrMemberAccess	vc -> gb		9260665	1					
ANR	9260707	Identifier	vc		9260665	0					
ANR	9260708	Identifier	gb		9260665	1					
ANR	9260709	Argument	vf -> amplitude_bits		9260665	1					
ANR	9260710	PtrMemberAccess	vf -> amplitude_bits		9260665	0					
ANR	9260711	Identifier	vf		9260665	0					
ANR	9260712	Identifier	amplitude_bits		9260665	1					
ANR	9260713	IfStatement	if ( amplitude > 0 )		9260665	5					
ANR	9260714	Condition	amplitude > 0	17:8:325:335	9260665	0	True				
ANR	9260715	RelationalExpression	amplitude > 0		9260665	0		>			
ANR	9260716	Identifier	amplitude		9260665	0					
ANR	9260717	PrimaryExpression	0		9260665	1					
ANR	9260718	CompoundStatement		23:8:298:322	9260665	1					
ANR	9260719	IdentifierDeclStatement	float last = 0 ;	19:8:349:363	9260665	0	True				
ANR	9260720	IdentifierDecl	last = 0		9260665	0					
ANR	9260721	IdentifierDeclType	float		9260665	0					
ANR	9260722	Identifier	last		9260665	1					
ANR	9260723	AssignmentExpression	last = 0		9260665	2		=			
ANR	9260724	Identifier	last		9260665	0					
ANR	9260725	PrimaryExpression	0		9260665	1					
ANR	9260726	IdentifierDeclStatement	uint_fast16_t lsp_len = 0 ;	21:8:374:399	9260665	1	True				
ANR	9260727	IdentifierDecl	lsp_len = 0		9260665	0					
ANR	9260728	IdentifierDeclType	uint_fast16_t		9260665	0					
ANR	9260729	Identifier	lsp_len		9260665	1					
ANR	9260730	AssignmentExpression	lsp_len = 0		9260665	2		=			
ANR	9260731	Identifier	lsp_len		9260665	0					
ANR	9260732	PrimaryExpression	0		9260665	1					
ANR	9260733	IdentifierDeclStatement	uint_fast16_t idx ;	23:8:410:427	9260665	2	True				
ANR	9260734	IdentifierDecl	idx		9260665	0					
ANR	9260735	IdentifierDeclType	uint_fast16_t		9260665	0					
ANR	9260736	Identifier	idx		9260665	1					
ANR	9260737	IdentifierDeclStatement	vorbis_codebook codebook ;	25:8:438:462	9260665	3	True				
ANR	9260738	IdentifierDecl	codebook		9260665	0					
ANR	9260739	IdentifierDeclType	vorbis_codebook		9260665	0					
ANR	9260740	Identifier	codebook		9260665	1					
ANR	9260741	ExpressionStatement	"book_idx = get_bits ( & vc -> gb , ilog ( vf -> num_books ) )"	29:8:475:522	9260665	4	True				
ANR	9260742	AssignmentExpression	"book_idx = get_bits ( & vc -> gb , ilog ( vf -> num_books ) )"		9260665	0		=			
ANR	9260743	Identifier	book_idx		9260665	0					
ANR	9260744	CallExpression	"get_bits ( & vc -> gb , ilog ( vf -> num_books ) )"		9260665	1					
ANR	9260745	Callee	get_bits		9260665	0					
ANR	9260746	Identifier	get_bits		9260665	0					
ANR	9260747	ArgumentList	& vc -> gb		9260665	1					
ANR	9260748	Argument	& vc -> gb		9260665	0					
ANR	9260749	UnaryOperationExpression	& vc -> gb		9260665	0					
ANR	9260750	UnaryOperator	&		9260665	0					
ANR	9260751	PtrMemberAccess	vc -> gb		9260665	1					
ANR	9260752	Identifier	vc		9260665	0					
ANR	9260753	Identifier	gb		9260665	1					
ANR	9260754	Argument	ilog ( vf -> num_books )		9260665	1					
ANR	9260755	CallExpression	ilog ( vf -> num_books )		9260665	0					
ANR	9260756	Callee	ilog		9260665	0					
ANR	9260757	Identifier	ilog		9260665	0					
ANR	9260758	ArgumentList	vf -> num_books		9260665	1					
ANR	9260759	Argument	vf -> num_books		9260665	0					
ANR	9260760	PtrMemberAccess	vf -> num_books		9260665	0					
ANR	9260761	Identifier	vf		9260665	0					
ANR	9260762	Identifier	num_books		9260665	1					
ANR	9260763	IfStatement	if ( book_idx >= vf -> num_books )		9260665	5					
ANR	9260764	Condition	book_idx >= vf -> num_books	31:13:538:562	9260665	0	True				
ANR	9260765	RelationalExpression	book_idx >= vf -> num_books		9260665	0		>=			
ANR	9260766	Identifier	book_idx		9260665	0					
ANR	9260767	PtrMemberAccess	vf -> num_books		9260665	1					
ANR	9260768	Identifier	vf		9260665	0					
ANR	9260769	Identifier	num_books		9260665	1					
ANR	9260770	CompoundStatement		29:41:426:426	9260665	1					
ANR	9260771	ExpressionStatement	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""floor0 dec: booknumber too high!\\n"" )"	33:12:581:678	9260665	0	True				
ANR	9260772	CallExpression	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""floor0 dec: booknumber too high!\\n"" )"		9260665	0					
ANR	9260773	Callee	av_log		9260665	0					
ANR	9260774	Identifier	av_log		9260665	0					
ANR	9260775	ArgumentList	vc -> avccontext		9260665	1					
ANR	9260776	Argument	vc -> avccontext		9260665	0					
ANR	9260777	PtrMemberAccess	vc -> avccontext		9260665	0					
ANR	9260778	Identifier	vc		9260665	0					
ANR	9260779	Identifier	avccontext		9260665	1					
ANR	9260780	Argument	AV_LOG_ERROR		9260665	1					
ANR	9260781	Identifier	AV_LOG_ERROR		9260665	0					
ANR	9260782	Argument	"""floor0 dec: booknumber too high!\\n"""		9260665	2					
ANR	9260783	PrimaryExpression	"""floor0 dec: booknumber too high!\\n"""		9260665	0					
ANR	9260784	ExpressionStatement	"AV_DEBUG ( ""floor0 dec: booknumber: %u\\n"" , book_idx )"	41:8:733:785	9260665	6	True				
ANR	9260785	CallExpression	"AV_DEBUG ( ""floor0 dec: booknumber: %u\\n"" , book_idx )"		9260665	0					
ANR	9260786	Callee	AV_DEBUG		9260665	0					
ANR	9260787	Identifier	AV_DEBUG		9260665	0					
ANR	9260788	ArgumentList	"""floor0 dec: booknumber: %u\\n"""		9260665	1					
ANR	9260789	Argument	"""floor0 dec: booknumber: %u\\n"""		9260665	0					
ANR	9260790	PrimaryExpression	"""floor0 dec: booknumber: %u\\n"""		9260665	0					
ANR	9260791	Argument	book_idx		9260665	1					
ANR	9260792	Identifier	book_idx		9260665	0					
ANR	9260793	ExpressionStatement	codebook = vc -> codebooks [ vf -> book_list [ book_idx ] ]	43:8:796:843	9260665	7	True				
ANR	9260794	AssignmentExpression	codebook = vc -> codebooks [ vf -> book_list [ book_idx ] ]		9260665	0		=			
ANR	9260795	Identifier	codebook		9260665	0					
ANR	9260796	ArrayIndexing	vc -> codebooks [ vf -> book_list [ book_idx ] ]		9260665	1					
ANR	9260797	PtrMemberAccess	vc -> codebooks		9260665	0					
ANR	9260798	Identifier	vc		9260665	0					
ANR	9260799	Identifier	codebooks		9260665	1					
ANR	9260800	ArrayIndexing	vf -> book_list [ book_idx ]		9260665	1					
ANR	9260801	PtrMemberAccess	vf -> book_list		9260665	0					
ANR	9260802	Identifier	vf		9260665	0					
ANR	9260803	Identifier	book_list		9260665	1					
ANR	9260804	Identifier	book_idx		9260665	1					
ANR	9260805	WhileStatement	while ( lsp_len < vf -> order )		9260665	8					
ANR	9260806	Condition	lsp_len < vf -> order	47:15:863:879	9260665	0	True				
ANR	9260807	RelationalExpression	lsp_len < vf -> order		9260665	0		<			
ANR	9260808	Identifier	lsp_len		9260665	0					
ANR	9260809	PtrMemberAccess	vf -> order		9260665	1					
ANR	9260810	Identifier	vf		9260665	0					
ANR	9260811	Identifier	order		9260665	1					
ANR	9260812	CompoundStatement		47:12:757:768	9260665	1					
ANR	9260813	IdentifierDeclStatement	int vec_off ;	49:12:897:908	9260665	0	True				
ANR	9260814	IdentifierDecl	vec_off		9260665	0					
ANR	9260815	IdentifierDeclType	int		9260665	0					
ANR	9260816	Identifier	vec_off		9260665	1					
ANR	9260817	ExpressionStatement	"AV_DEBUG ( ""floor0 dec: book dimension: %d\\n"" , codebook . dimensions )"	53:12:925:992	9260665	1	True				
ANR	9260818	CallExpression	"AV_DEBUG ( ""floor0 dec: book dimension: %d\\n"" , codebook . dimensions )"		9260665	0					
ANR	9260819	Callee	AV_DEBUG		9260665	0					
ANR	9260820	Identifier	AV_DEBUG		9260665	0					
ANR	9260821	ArgumentList	"""floor0 dec: book dimension: %d\\n"""		9260665	1					
ANR	9260822	Argument	"""floor0 dec: book dimension: %d\\n"""		9260665	0					
ANR	9260823	PrimaryExpression	"""floor0 dec: book dimension: %d\\n"""		9260665	0					
ANR	9260824	Argument	codebook . dimensions		9260665	1					
ANR	9260825	MemberAccess	codebook . dimensions		9260665	0					
ANR	9260826	Identifier	codebook		9260665	0					
ANR	9260827	Identifier	dimensions		9260665	1					
ANR	9260828	ExpressionStatement	"AV_DEBUG ( ""floor0 dec: maximum depth: %d\\n"" , codebook . maxdepth )"	55:12:1007:1071	9260665	2	True				
ANR	9260829	CallExpression	"AV_DEBUG ( ""floor0 dec: maximum depth: %d\\n"" , codebook . maxdepth )"		9260665	0					
ANR	9260830	Callee	AV_DEBUG		9260665	0					
ANR	9260831	Identifier	AV_DEBUG		9260665	0					
ANR	9260832	ArgumentList	"""floor0 dec: maximum depth: %d\\n"""		9260665	1					
ANR	9260833	Argument	"""floor0 dec: maximum depth: %d\\n"""		9260665	0					
ANR	9260834	PrimaryExpression	"""floor0 dec: maximum depth: %d\\n"""		9260665	0					
ANR	9260835	Argument	codebook . maxdepth		9260665	1					
ANR	9260836	MemberAccess	codebook . maxdepth		9260665	0					
ANR	9260837	Identifier	codebook		9260665	0					
ANR	9260838	Identifier	maxdepth		9260665	1					
ANR	9260839	ExpressionStatement	"vec_off = get_vlc2 ( & vc -> gb , codebook . vlc . table , codebook . nb_bits , codebook . maxdepth ) * codebook . dimensions"	59:12:1122:1347	9260665	3	True				
ANR	9260840	AssignmentExpression	"vec_off = get_vlc2 ( & vc -> gb , codebook . vlc . table , codebook . nb_bits , codebook . maxdepth ) * codebook . dimensions"		9260665	0		=			
ANR	9260841	Identifier	vec_off		9260665	0					
ANR	9260842	MultiplicativeExpression	"get_vlc2 ( & vc -> gb , codebook . vlc . table , codebook . nb_bits , codebook . maxdepth ) * codebook . dimensions"		9260665	1		*			
ANR	9260843	CallExpression	"get_vlc2 ( & vc -> gb , codebook . vlc . table , codebook . nb_bits , codebook . maxdepth )"		9260665	0					
ANR	9260844	Callee	get_vlc2		9260665	0					
ANR	9260845	Identifier	get_vlc2		9260665	0					
ANR	9260846	ArgumentList	& vc -> gb		9260665	1					
ANR	9260847	Argument	& vc -> gb		9260665	0					
ANR	9260848	UnaryOperationExpression	& vc -> gb		9260665	0					
ANR	9260849	UnaryOperator	&		9260665	0					
ANR	9260850	PtrMemberAccess	vc -> gb		9260665	1					
ANR	9260851	Identifier	vc		9260665	0					
ANR	9260852	Identifier	gb		9260665	1					
ANR	9260853	Argument	codebook . vlc . table		9260665	1					
ANR	9260854	MemberAccess	codebook . vlc . table		9260665	0					
ANR	9260855	MemberAccess	codebook . vlc		9260665	0					
ANR	9260856	Identifier	codebook		9260665	0					
ANR	9260857	Identifier	vlc		9260665	1					
ANR	9260858	Identifier	table		9260665	1					
ANR	9260859	Argument	codebook . nb_bits		9260665	2					
ANR	9260860	MemberAccess	codebook . nb_bits		9260665	0					
ANR	9260861	Identifier	codebook		9260665	0					
ANR	9260862	Identifier	nb_bits		9260665	1					
ANR	9260863	Argument	codebook . maxdepth		9260665	3					
ANR	9260864	MemberAccess	codebook . maxdepth		9260665	0					
ANR	9260865	Identifier	codebook		9260665	0					
ANR	9260866	Identifier	maxdepth		9260665	1					
ANR	9260867	MemberAccess	codebook . dimensions		9260665	1					
ANR	9260868	Identifier	codebook		9260665	0					
ANR	9260869	Identifier	dimensions		9260665	1					
ANR	9260870	ExpressionStatement	"AV_DEBUG ( ""floor0 dec: vector offset: %d\\n"" , vec_off )"	69:12:1362:1416	9260665	4	True				
ANR	9260871	CallExpression	"AV_DEBUG ( ""floor0 dec: vector offset: %d\\n"" , vec_off )"		9260665	0					
ANR	9260872	Callee	AV_DEBUG		9260665	0					
ANR	9260873	Identifier	AV_DEBUG		9260665	0					
ANR	9260874	ArgumentList	"""floor0 dec: vector offset: %d\\n"""		9260665	1					
ANR	9260875	Argument	"""floor0 dec: vector offset: %d\\n"""		9260665	0					
ANR	9260876	PrimaryExpression	"""floor0 dec: vector offset: %d\\n"""		9260665	0					
ANR	9260877	Argument	vec_off		9260665	1					
ANR	9260878	Identifier	vec_off		9260665	0					
ANR	9260879	ForStatement	for ( idx = 0 ; idx < codebook . dimensions ; ++ idx )		9260665	5					
ANR	9260880	ForInit	idx = 0 ;	73:17:1501:1506	9260665	0	True				
ANR	9260881	AssignmentExpression	idx = 0		9260665	0		=			
ANR	9260882	Identifier	idx		9260665	0					
ANR	9260883	PrimaryExpression	0		9260665	1					
ANR	9260884	Condition	idx < codebook . dimensions	73:24:1508:1530	9260665	1	True				
ANR	9260885	RelationalExpression	idx < codebook . dimensions		9260665	0		<			
ANR	9260886	Identifier	idx		9260665	0					
ANR	9260887	MemberAccess	codebook . dimensions		9260665	1					
ANR	9260888	Identifier	codebook		9260665	0					
ANR	9260889	Identifier	dimensions		9260665	1					
ANR	9260890	UnaryExpression	++ idx	73:49:1533:1537	9260665	2	True				
ANR	9260891	IncDec	++		9260665	0					
ANR	9260892	Identifier	idx		9260665	1					
ANR	9260893	CompoundStatement		71:56:1400:1400	9260665	3					
ANR	9260894	ExpressionStatement	lsp [ lsp_len + idx ] = codebook . codevectors [ vec_off + idx ] + last	75:16:1559:1614	9260665	0	True				
ANR	9260895	AssignmentExpression	lsp [ lsp_len + idx ] = codebook . codevectors [ vec_off + idx ] + last		9260665	0		=			
ANR	9260896	ArrayIndexing	lsp [ lsp_len + idx ]		9260665	0					
ANR	9260897	Identifier	lsp		9260665	0					
ANR	9260898	AdditiveExpression	lsp_len + idx		9260665	1		+			
ANR	9260899	Identifier	lsp_len		9260665	0					
ANR	9260900	Identifier	idx		9260665	1					
ANR	9260901	AdditiveExpression	codebook . codevectors [ vec_off + idx ] + last		9260665	1		+			
ANR	9260902	ArrayIndexing	codebook . codevectors [ vec_off + idx ]		9260665	0					
ANR	9260903	MemberAccess	codebook . codevectors		9260665	0					
ANR	9260904	Identifier	codebook		9260665	0					
ANR	9260905	Identifier	codevectors		9260665	1					
ANR	9260906	AdditiveExpression	vec_off + idx		9260665	1		+			
ANR	9260907	Identifier	vec_off		9260665	0					
ANR	9260908	Identifier	idx		9260665	1					
ANR	9260909	Identifier	last		9260665	1					
ANR	9260910	ExpressionStatement	last = lsp [ lsp_len + idx - 1 ]	79:12:1644:1667	9260665	6	True				
ANR	9260911	AssignmentExpression	last = lsp [ lsp_len + idx - 1 ]		9260665	0		=			
ANR	9260912	Identifier	last		9260665	0					
ANR	9260913	ArrayIndexing	lsp [ lsp_len + idx - 1 ]		9260665	1					
ANR	9260914	Identifier	lsp		9260665	0					
ANR	9260915	AdditiveExpression	lsp_len + idx - 1		9260665	1		+			
ANR	9260916	Identifier	lsp_len		9260665	0					
ANR	9260917	AdditiveExpression	idx - 1		9260665	1		-			
ANR	9260918	Identifier	idx		9260665	0					
ANR	9260919	PrimaryExpression	1		9260665	1					
ANR	9260920	ExpressionStatement	lsp_len += codebook . dimensions	83:12:1724:1754	9260665	7	True				
ANR	9260921	AssignmentExpression	lsp_len += codebook . dimensions		9260665	0		+=			
ANR	9260922	Identifier	lsp_len		9260665	0					
ANR	9260923	MemberAccess	codebook . dimensions		9260665	1					
ANR	9260924	Identifier	codebook		9260665	0					
ANR	9260925	Identifier	dimensions		9260665	1					
ANR	9260926	CompoundStatement		91:12:1707:1714	9260665	9					
ANR	9260927	IdentifierDeclStatement	int idx ;	93:12:1847:1854	9260665	0	True				
ANR	9260928	IdentifierDecl	idx		9260665	0					
ANR	9260929	IdentifierDeclType	int		9260665	0					
ANR	9260930	Identifier	idx		9260665	1					
ANR	9260931	ForStatement	for ( idx = 0 ; idx < lsp_len ; ++ idx )		9260665	1					
ANR	9260932	ForInit	idx = 0 ;	95:18:1875:1882	9260665	0	True				
ANR	9260933	AssignmentExpression	idx = 0		9260665	0		=			
ANR	9260934	Identifier	idx		9260665	0					
ANR	9260935	PrimaryExpression	0		9260665	1					
ANR	9260936	Condition	idx < lsp_len	95:27:1884:1896	9260665	1	True				
ANR	9260937	RelationalExpression	idx < lsp_len		9260665	0		<			
ANR	9260938	Identifier	idx		9260665	0					
ANR	9260939	Identifier	lsp_len		9260665	1					
ANR	9260940	UnaryExpression	++ idx	95:42:1899:1903	9260665	2	True				
ANR	9260941	IncDec	++		9260665	0					
ANR	9260942	Identifier	idx		9260665	1					
ANR	9260943	ExpressionStatement	"AV_DEBUG ( ""floor0 dec: coeff at %d is %f\\n"" , idx , lsp [ idx ] )"	97:16:1924:1983	9260665	3	True				
ANR	9260944	CallExpression	"AV_DEBUG ( ""floor0 dec: coeff at %d is %f\\n"" , idx , lsp [ idx ] )"		9260665	0					
ANR	9260945	Callee	AV_DEBUG		9260665	0					
ANR	9260946	Identifier	AV_DEBUG		9260665	0					
ANR	9260947	ArgumentList	"""floor0 dec: coeff at %d is %f\\n"""		9260665	1					
ANR	9260948	Argument	"""floor0 dec: coeff at %d is %f\\n"""		9260665	0					
ANR	9260949	PrimaryExpression	"""floor0 dec: coeff at %d is %f\\n"""		9260665	0					
ANR	9260950	Argument	idx		9260665	1					
ANR	9260951	Identifier	idx		9260665	0					
ANR	9260952	Argument	lsp [ idx ]		9260665	2					
ANR	9260953	ArrayIndexing	lsp [ idx ]		9260665	0					
ANR	9260954	Identifier	lsp		9260665	0					
ANR	9260955	Identifier	idx		9260665	1					
ANR	9260956	CompoundStatement		111:12:1990:2024	9260665	10					
ANR	9260957	IdentifierDeclStatement	int i ;	109:12:2076:2081	9260665	0	True				
ANR	9260958	IdentifierDecl	i		9260665	0					
ANR	9260959	IdentifierDeclType	int		9260665	0					
ANR	9260960	Identifier	i		9260665	1					
ANR	9260961	IdentifierDeclStatement	int order = vf -> order ;	111:12:2096:2115	9260665	1	True				
ANR	9260962	IdentifierDecl	order = vf -> order		9260665	0					
ANR	9260963	IdentifierDeclType	int		9260665	0					
ANR	9260964	Identifier	order		9260665	1					
ANR	9260965	AssignmentExpression	order = vf -> order		9260665	2		=			
ANR	9260966	Identifier	order		9260665	0					
ANR	9260967	PtrMemberAccess	vf -> order		9260665	1					
ANR	9260968	Identifier	vf		9260665	0					
ANR	9260969	Identifier	order		9260665	1					
ANR	9260970	IdentifierDeclStatement	float wstep = M_PI / vf -> bark_map_size ;	113:12:2130:2164	9260665	2	True				
ANR	9260971	IdentifierDecl	wstep = M_PI / vf -> bark_map_size		9260665	0					
ANR	9260972	IdentifierDeclType	float		9260665	0					
ANR	9260973	Identifier	wstep		9260665	1					
ANR	9260974	AssignmentExpression	wstep = M_PI / vf -> bark_map_size		9260665	2		=			
ANR	9260975	Identifier	wstep		9260665	0					
ANR	9260976	MultiplicativeExpression	M_PI / vf -> bark_map_size		9260665	1		/			
ANR	9260977	Identifier	M_PI		9260665	0					
ANR	9260978	PtrMemberAccess	vf -> bark_map_size		9260665	1					
ANR	9260979	Identifier	vf		9260665	0					
ANR	9260980	Identifier	bark_map_size		9260665	1					
ANR	9260981	ForStatement	for ( i = 0 ; i < order ; i ++ )		9260665	3					
ANR	9260982	ForInit	i = 0 ;	117:16:2185:2188	9260665	0	True				
ANR	9260983	AssignmentExpression	i = 0		9260665	0		=			
ANR	9260984	Identifier	i		9260665	0					
ANR	9260985	PrimaryExpression	0		9260665	1					
ANR	9260986	Condition	i < order	117:20:2189:2195	9260665	1	True				
ANR	9260987	RelationalExpression	i < order		9260665	0		<			
ANR	9260988	Identifier	i		9260665	0					
ANR	9260989	Identifier	order		9260665	1					
ANR	9260990	PostIncDecOperationExpression	i ++	117:28:2197:2199	9260665	2	True				
ANR	9260991	Identifier	i		9260665	0					
ANR	9260992	IncDec	++		9260665	1					
ANR	9260993	CompoundStatement		115:33:2062:2062	9260665	3					
ANR	9260994	ExpressionStatement	lsp [ i ] = 2.0f * cos ( lsp [ i ] )	117:35:2204:2227	9260665	0	True				
ANR	9260995	AssignmentExpression	lsp [ i ] = 2.0f * cos ( lsp [ i ] )		9260665	0		=			
ANR	9260996	ArrayIndexing	lsp [ i ]		9260665	0					
ANR	9260997	Identifier	lsp		9260665	0					
ANR	9260998	Identifier	i		9260665	1					
ANR	9260999	MultiplicativeExpression	2.0f * cos ( lsp [ i ] )		9260665	1		*			
ANR	9261000	PrimaryExpression	2.0f		9260665	0					
ANR	9261001	CallExpression	cos ( lsp [ i ] )		9260665	1					
ANR	9261002	Callee	cos		9260665	0					
ANR	9261003	Identifier	cos		9260665	0					
ANR	9261004	ArgumentList	lsp [ i ]		9260665	1					
ANR	9261005	Argument	lsp [ i ]		9260665	0					
ANR	9261006	ArrayIndexing	lsp [ i ]		9260665	0					
ANR	9261007	Identifier	lsp		9260665	0					
ANR	9261008	Identifier	i		9260665	1					
ANR	9261009	ExpressionStatement	"AV_DEBUG ( ""floor0 synth: map_size=%d; m=%d; wstep=%f\\n"" , vf -> map_size , order , wstep )"	121:12:2246:2351	9260665	4	True				
ANR	9261010	CallExpression	"AV_DEBUG ( ""floor0 synth: map_size=%d; m=%d; wstep=%f\\n"" , vf -> map_size , order , wstep )"		9260665	0					
ANR	9261011	Callee	AV_DEBUG		9260665	0					
ANR	9261012	Identifier	AV_DEBUG		9260665	0					
ANR	9261013	ArgumentList	"""floor0 synth: map_size=%d; m=%d; wstep=%f\\n"""		9260665	1					
ANR	9261014	Argument	"""floor0 synth: map_size=%d; m=%d; wstep=%f\\n"""		9260665	0					
ANR	9261015	PrimaryExpression	"""floor0 synth: map_size=%d; m=%d; wstep=%f\\n"""		9260665	0					
ANR	9261016	Argument	vf -> map_size		9260665	1					
ANR	9261017	PtrMemberAccess	vf -> map_size		9260665	0					
ANR	9261018	Identifier	vf		9260665	0					
ANR	9261019	Identifier	map_size		9260665	1					
ANR	9261020	Argument	order		9260665	2					
ANR	9261021	Identifier	order		9260665	0					
ANR	9261022	Argument	wstep		9260665	3					
ANR	9261023	Identifier	wstep		9260665	0					
ANR	9261024	ExpressionStatement	i = 0	127:12:2368:2371	9260665	5	True				
ANR	9261025	AssignmentExpression	i = 0		9260665	0		=			
ANR	9261026	Identifier	i		9260665	0					
ANR	9261027	PrimaryExpression	0		9260665	1					
ANR	9261028	WhileStatement	while ( i < vf -> map_size )		9260665	6					
ANR	9261029	Condition	i < vf -> map_size	129:18:2392:2405	9260665	0	True				
ANR	9261030	RelationalExpression	i < vf -> map_size		9260665	0		<			
ANR	9261031	Identifier	i		9260665	0					
ANR	9261032	PtrMemberAccess	vf -> map_size		9260665	1					
ANR	9261033	Identifier	vf		9260665	0					
ANR	9261034	Identifier	map_size		9260665	1					
ANR	9261035	CompoundStatement		135:16:2395:2436	9260665	1					
ANR	9261036	IdentifierDeclStatement	"int j , iter_cond = vf -> map [ i ] ;"	131:16:2427:2454	9260665	0	True				
ANR	9261037	IdentifierDecl	j		9260665	0					
ANR	9261038	IdentifierDeclType	int		9260665	0					
ANR	9261039	Identifier	j		9260665	1					
ANR	9261040	IdentifierDecl	iter_cond = vf -> map [ i ]		9260665	1					
ANR	9261041	IdentifierDeclType	int		9260665	0					
ANR	9261042	Identifier	iter_cond		9260665	1					
ANR	9261043	AssignmentExpression	iter_cond = vf -> map [ i ]		9260665	2		=			
ANR	9261044	Identifier	iter_cond		9260665	0					
ANR	9261045	ArrayIndexing	vf -> map [ i ]		9260665	1					
ANR	9261046	PtrMemberAccess	vf -> map		9260665	0					
ANR	9261047	Identifier	vf		9260665	0					
ANR	9261048	Identifier	map		9260665	1					
ANR	9261049	Identifier	i		9260665	1					
ANR	9261050	IdentifierDeclStatement	float p = 0.5f ;	133:16:2473:2485	9260665	1	True				
ANR	9261051	IdentifierDecl	p = 0.5f		9260665	0					
ANR	9261052	IdentifierDeclType	float		9260665	0					
ANR	9261053	Identifier	p		9260665	1					
ANR	9261054	AssignmentExpression	p = 0.5f		9260665	2		=			
ANR	9261055	Identifier	p		9260665	0					
ANR	9261056	PrimaryExpression	0.5f		9260665	1					
ANR	9261057	IdentifierDeclStatement	float q = 0.5f ;	135:16:2504:2516	9260665	2	True				
ANR	9261058	IdentifierDecl	q = 0.5f		9260665	0					
ANR	9261059	IdentifierDeclType	float		9260665	0					
ANR	9261060	Identifier	q		9260665	1					
ANR	9261061	AssignmentExpression	q = 0.5f		9260665	2		=			
ANR	9261062	Identifier	q		9260665	0					
ANR	9261063	PrimaryExpression	0.5f		9260665	1					
ANR	9261064	IdentifierDeclStatement	float two_cos_w = 2.0f * cos ( wstep * iter_cond ) ;	137:16:2535:2576	9260665	3	True				
ANR	9261065	IdentifierDecl	two_cos_w = 2.0f * cos ( wstep * iter_cond )		9260665	0					
ANR	9261066	IdentifierDeclType	float		9260665	0					
ANR	9261067	Identifier	two_cos_w		9260665	1					
ANR	9261068	AssignmentExpression	two_cos_w = 2.0f * cos ( wstep * iter_cond )		9260665	2		=			
ANR	9261069	Identifier	two_cos_w		9260665	0					
ANR	9261070	MultiplicativeExpression	2.0f * cos ( wstep * iter_cond )		9260665	1		*			
ANR	9261071	PrimaryExpression	2.0f		9260665	0					
ANR	9261072	CallExpression	cos ( wstep * iter_cond )		9260665	1					
ANR	9261073	Callee	cos		9260665	0					
ANR	9261074	Identifier	cos		9260665	0					
ANR	9261075	ArgumentList	wstep * iter_cond		9260665	1					
ANR	9261076	Argument	wstep * iter_cond		9260665	0					
ANR	9261077	MultiplicativeExpression	wstep * iter_cond		9260665	0		*			
ANR	9261078	Identifier	wstep		9260665	0					
ANR	9261079	Identifier	iter_cond		9260665	1					
ANR	9261080	ForStatement	for ( j = 0 ; j < order ; j += 2 )		9260665	4					
ANR	9261081	ForInit	j = 0 ;	143:20:2682:2685	9260665	0	True				
ANR	9261082	AssignmentExpression	j = 0		9260665	0		=			
ANR	9261083	Identifier	j		9260665	0					
ANR	9261084	PrimaryExpression	0		9260665	1					
ANR	9261085	Condition	j < order	143:24:2686:2692	9260665	1	True				
ANR	9261086	RelationalExpression	j < order		9260665	0		<			
ANR	9261087	Identifier	j		9260665	0					
ANR	9261088	Identifier	order		9260665	1					
ANR	9261089	AssignmentExpression	j += 2	143:32:2694:2697	9260665	2	True	+=			
ANR	9261090	Identifier	j		9260665	0					
ANR	9261091	PrimaryExpression	2		9260665	1					
ANR	9261092	CompoundStatement		141:38:2560:2560	9260665	3					
ANR	9261093	ExpressionStatement	q *= lsp [ j ] - two_cos_w	145:20:2723:2746	9260665	0	True				
ANR	9261094	AssignmentExpression	q *= lsp [ j ] - two_cos_w		9260665	0		*=			
ANR	9261095	Identifier	q		9260665	0					
ANR	9261096	AdditiveExpression	lsp [ j ] - two_cos_w		9260665	1		-			
ANR	9261097	ArrayIndexing	lsp [ j ]		9260665	0					
ANR	9261098	Identifier	lsp		9260665	0					
ANR	9261099	Identifier	j		9260665	1					
ANR	9261100	Identifier	two_cos_w		9260665	1					
ANR	9261101	ExpressionStatement	p *= lsp [ j + 1 ] - two_cos_w	147:20:2769:2792	9260665	1	True				
ANR	9261102	AssignmentExpression	p *= lsp [ j + 1 ] - two_cos_w		9260665	0		*=			
ANR	9261103	Identifier	p		9260665	0					
ANR	9261104	AdditiveExpression	lsp [ j + 1 ] - two_cos_w		9260665	1		-			
ANR	9261105	ArrayIndexing	lsp [ j + 1 ]		9260665	0					
ANR	9261106	Identifier	lsp		9260665	0					
ANR	9261107	AdditiveExpression	j + 1		9260665	1		+			
ANR	9261108	Identifier	j		9260665	0					
ANR	9261109	PrimaryExpression	1		9260665	1					
ANR	9261110	Identifier	two_cos_w		9260665	1					
ANR	9261111	IfStatement	if ( j == order )		9260665	5					
ANR	9261112	Condition	j == order	151:19:2833:2840	9260665	0	True				
ANR	9261113	EqualityExpression	j == order		9260665	0		==			
ANR	9261114	Identifier	j		9260665	0					
ANR	9261115	Identifier	order		9260665	1					
ANR	9261116	CompoundStatement		149:29:2703:2703	9260665	1					
ANR	9261117	ExpressionStatement	p *= p * ( 2.0f - two_cos_w )	153:20:2880:2903	9260665	0	True				
ANR	9261118	AssignmentExpression	p *= p * ( 2.0f - two_cos_w )		9260665	0		*=			
ANR	9261119	Identifier	p		9260665	0					
ANR	9261120	MultiplicativeExpression	p * ( 2.0f - two_cos_w )		9260665	1		*			
ANR	9261121	Identifier	p		9260665	0					
ANR	9261122	AdditiveExpression	2.0f - two_cos_w		9260665	1		-			
ANR	9261123	PrimaryExpression	2.0f		9260665	0					
ANR	9261124	Identifier	two_cos_w		9260665	1					
ANR	9261125	ExpressionStatement	q *= q * ( 2.0f + two_cos_w )	155:20:2926:2949	9260665	1	True				
ANR	9261126	AssignmentExpression	q *= q * ( 2.0f + two_cos_w )		9260665	0		*=			
ANR	9261127	Identifier	q		9260665	0					
ANR	9261128	MultiplicativeExpression	q * ( 2.0f + two_cos_w )		9260665	1		*			
ANR	9261129	Identifier	q		9260665	0					
ANR	9261130	AdditiveExpression	2.0f + two_cos_w		9260665	1		+			
ANR	9261131	PrimaryExpression	2.0f		9260665	0					
ANR	9261132	Identifier	two_cos_w		9260665	1					
ANR	9261133	ElseStatement	else		9260665	0					
ANR	9261134	CompoundStatement		157:21:2852:2852	9260665	0					
ANR	9261135	ExpressionStatement	q *= two_cos_w - lsp [ j ]	161:20:3028:3049	9260665	0	True				
ANR	9261136	AssignmentExpression	q *= two_cos_w - lsp [ j ]		9260665	0		*=			
ANR	9261137	Identifier	q		9260665	0					
ANR	9261138	AdditiveExpression	two_cos_w - lsp [ j ]		9260665	1		-			
ANR	9261139	Identifier	two_cos_w		9260665	0					
ANR	9261140	ArrayIndexing	lsp [ j ]		9260665	1					
ANR	9261141	Identifier	lsp		9260665	0					
ANR	9261142	Identifier	j		9260665	1					
ANR	9261143	ExpressionStatement	p *= p * ( 4.f - two_cos_w * two_cos_w )	167:20:3146:3178	9260665	1	True				
ANR	9261144	AssignmentExpression	p *= p * ( 4.f - two_cos_w * two_cos_w )		9260665	0		*=			
ANR	9261145	Identifier	p		9260665	0					
ANR	9261146	MultiplicativeExpression	p * ( 4.f - two_cos_w * two_cos_w )		9260665	1		*			
ANR	9261147	Identifier	p		9260665	0					
ANR	9261148	AdditiveExpression	4.f - two_cos_w * two_cos_w		9260665	1		-			
ANR	9261149	PrimaryExpression	4.f		9260665	0					
ANR	9261150	MultiplicativeExpression	two_cos_w * two_cos_w		9260665	1		*			
ANR	9261151	Identifier	two_cos_w		9260665	0					
ANR	9261152	Identifier	two_cos_w		9260665	1					
ANR	9261153	ExpressionStatement	q *= q	169:20:3201:3207	9260665	2	True				
ANR	9261154	AssignmentExpression	q *= q		9260665	0		*=			
ANR	9261155	Identifier	q		9260665	0					
ANR	9261156	Identifier	q		9260665	1					
ANR	9261157	CompoundStatement		177:20:3182:3236	9260665	6					
ANR	9261158	IdentifierDeclStatement	"int_fast32_t pow_of_two = 2 , exponent = vf -> amplitude_bits ;"	179:20:3322:3376	9260665	0	True				
ANR	9261159	IdentifierDecl	pow_of_two = 2		9260665	0					
ANR	9261160	IdentifierDeclType	int_fast32_t		9260665	0					
ANR	9261161	Identifier	pow_of_two		9260665	1					
ANR	9261162	AssignmentExpression	pow_of_two = 2		9260665	2		=			
ANR	9261163	Identifier	pow_of_two		9260665	0					
ANR	9261164	PrimaryExpression	2		9260665	1					
ANR	9261165	IdentifierDecl	exponent = vf -> amplitude_bits		9260665	1					
ANR	9261166	IdentifierDeclType	int_fast32_t		9260665	0					
ANR	9261167	Identifier	exponent		9260665	1					
ANR	9261168	AssignmentExpression	exponent = vf -> amplitude_bits		9260665	2		=			
ANR	9261169	Identifier	exponent		9260665	0					
ANR	9261170	PtrMemberAccess	vf -> amplitude_bits		9260665	1					
ANR	9261171	Identifier	vf		9260665	0					
ANR	9261172	Identifier	amplitude_bits		9260665	1					
ANR	9261173	IfStatement	if ( vf -> amplitude_bits )		9260665	1					
ANR	9261174	Condition	vf -> amplitude_bits	181:25:3404:3421	9260665	0	True				
ANR	9261175	PtrMemberAccess	vf -> amplitude_bits		9260665	0					
ANR	9261176	Identifier	vf		9260665	0					
ANR	9261177	Identifier	amplitude_bits		9260665	1					
ANR	9261178	CompoundStatement		179:46:3285:3285	9260665	1					
ANR	9261179	WhileStatement	while ( -- exponent )		9260665	0					
ANR	9261180	Condition	-- exponent	183:32:3460:3469	9260665	0	True				
ANR	9261181	UnaryExpression	-- exponent		9260665	0					
ANR	9261182	IncDec	--		9260665	0					
ANR	9261183	Identifier	exponent		9260665	1					
ANR	9261184	CompoundStatement		181:45:3333:3333	9260665	1					
ANR	9261185	ExpressionStatement	pow_of_two <<= 1	183:47:3475:3491	9260665	0	True				
ANR	9261186	AssignmentExpression	pow_of_two <<= 1		9260665	0		<<=			
ANR	9261187	Identifier	pow_of_two		9260665	0					
ANR	9261188	PrimaryExpression	1		9260665	1					
ANR	9261189	ElseStatement	else		9260665	0					
ANR	9261190	CompoundStatement		185:25:3404:3404	9260665	0					
ANR	9261191	ExpressionStatement	pow_of_two = 1	187:27:3546:3558	9260665	0	True				
ANR	9261192	AssignmentExpression	pow_of_two = 1		9260665	0		=			
ANR	9261193	Identifier	pow_of_two		9260665	0					
ANR	9261194	PrimaryExpression	1		9260665	1					
ANR	9261195	ExpressionStatement	q = exp ( ( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f )	189:20:3583:3816	9260665	2	True				
ANR	9261196	AssignmentExpression	q = exp ( ( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f )		9260665	0		=			
ANR	9261197	Identifier	q		9260665	0					
ANR	9261198	CallExpression	exp ( ( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f )		9260665	1					
ANR	9261199	Callee	exp		9260665	0					
ANR	9261200	Identifier	exp		9260665	0					
ANR	9261201	ArgumentList	( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f		9260665	1					
ANR	9261202	Argument	( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f		9260665	0					
ANR	9261203	MultiplicativeExpression	( ( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset ) * .11512925f		9260665	0		*			
ANR	9261204	AdditiveExpression	( ( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) ) ) - vf -> amplitude_offset		9260665	0		-			
ANR	9261205	MultiplicativeExpression	( amplitude * vf -> amplitude_offset ) / ( ( pow_of_two - 1 ) * sqrt ( p + q ) )		9260665	0		/			
ANR	9261206	MultiplicativeExpression	amplitude * vf -> amplitude_offset		9260665	0		*			
ANR	9261207	Identifier	amplitude		9260665	0					
ANR	9261208	PtrMemberAccess	vf -> amplitude_offset		9260665	1					
ANR	9261209	Identifier	vf		9260665	0					
ANR	9261210	Identifier	amplitude_offset		9260665	1					
ANR	9261211	MultiplicativeExpression	( pow_of_two - 1 ) * sqrt ( p + q )		9260665	1		*			
ANR	9261212	AdditiveExpression	pow_of_two - 1		9260665	0		-			
ANR	9261213	Identifier	pow_of_two		9260665	0					
ANR	9261214	PrimaryExpression	1		9260665	1					
ANR	9261215	CallExpression	sqrt ( p + q )		9260665	1					
ANR	9261216	Callee	sqrt		9260665	0					
ANR	9261217	Identifier	sqrt		9260665	0					
ANR	9261218	ArgumentList	p + q		9260665	1					
ANR	9261219	Argument	p + q		9260665	0					
ANR	9261220	AdditiveExpression	p + q		9260665	0		+			
ANR	9261221	Identifier	p		9260665	0					
ANR	9261222	Identifier	q		9260665	1					
ANR	9261223	PtrMemberAccess	vf -> amplitude_offset		9260665	1					
ANR	9261224	Identifier	vf		9260665	0					
ANR	9261225	Identifier	amplitude_offset		9260665	1					
ANR	9261226	PrimaryExpression	.11512925f		9260665	1					
ANR	9261227	DoStatement	do		9260665	7					
ANR	9261228	CompoundStatement		203:19:3754:3754	9260665	0					
ANR	9261229	ExpressionStatement	vec [ i ] = q	205:21:3896:3904	9260665	0	True				
ANR	9261230	AssignmentExpression	vec [ i ] = q		9260665	0		=			
ANR	9261231	ArrayIndexing	vec [ i ]		9260665	0					
ANR	9261232	Identifier	vec		9260665	0					
ANR	9261233	Identifier	i		9260665	1					
ANR	9261234	Identifier	q		9260665	1					
ANR	9261235	ExpressionStatement	++ i	205:31:3906:3909	9260665	1	True				
ANR	9261236	UnaryExpression	++ i		9260665	0					
ANR	9261237	IncDec	++		9260665	0					
ANR	9261238	Identifier	i		9260665	1					
ANR	9261239	Condition	vf -> map [ i ] == iter_cond	205:43:3918:3938	9260665	1	True				
ANR	9261240	EqualityExpression	vf -> map [ i ] == iter_cond		9260665	0		==			
ANR	9261241	ArrayIndexing	vf -> map [ i ]		9260665	0					
ANR	9261242	PtrMemberAccess	vf -> map		9260665	0					
ANR	9261243	Identifier	vf		9260665	0					
ANR	9261244	Identifier	map		9260665	1					
ANR	9261245	Identifier	i		9260665	1					
ANR	9261246	Identifier	iter_cond		9260665	1					
ANR	9261247	ElseStatement	else		9260665	0					
ANR	9261248	CompoundStatement		211:9:3845:3845	9260665	0					
ANR	9261249	ReturnStatement	return 1 ;	217:8:4034:4042	9260665	0	True				
ANR	9261250	PrimaryExpression	1		9260665	0					
ANR	9261251	ExpressionStatement	"AV_DEBUG ( "" Floor0 decoded\\n"" )"	223:4:4058:4087	9260665	6	True				
ANR	9261252	CallExpression	"AV_DEBUG ( "" Floor0 decoded\\n"" )"		9260665	0					
ANR	9261253	Callee	AV_DEBUG		9260665	0					
ANR	9261254	Identifier	AV_DEBUG		9260665	0					
ANR	9261255	ArgumentList	""" Floor0 decoded\\n"""		9260665	1					
ANR	9261256	Argument	""" Floor0 decoded\\n"""		9260665	0					
ANR	9261257	PrimaryExpression	""" Floor0 decoded\\n"""		9260665	0					
ANR	9261258	ReturnStatement	return 0 ;	227:4:4096:4104	9260665	7	True				
ANR	9261259	PrimaryExpression	0		9260665	0					
ANR	9261260	ReturnType	static uint_fast8_t		9260665	1					
ANR	9261261	Identifier	vorbis_floor0_decode		9260665	2					
ANR	9261262	ParameterList	"vorbis_context * vc , vorbis_floor_data * vfu , float * vec"		9260665	3					
ANR	9261263	Parameter	vorbis_context * vc	1:41:41:58	9260665	0	True				
ANR	9261264	ParameterType	vorbis_context *		9260665	0					
ANR	9261265	Identifier	vc		9260665	1					
ANR	9261266	Parameter	vorbis_floor_data * vfu	3:41:103:124	9260665	1	True				
ANR	9261267	ParameterType	vorbis_floor_data *		9260665	0					
ANR	9261268	Identifier	vfu		9260665	1					
ANR	9261269	Parameter	float * vec	3:65:127:136	9260665	2	True				
ANR	9261270	ParameterType	float *		9260665	0					
ANR	9261271	Identifier	vec		9260665	1					
ANR	9261272	CFGEntryNode	ENTRY		9260665		True				
ANR	9261273	CFGExitNode	EXIT		9260665		True				
ANR	9261274	Symbol	wstep		9260665						
ANR	9261275	Symbol	vf -> lsp		9260665						
ANR	9261276	Symbol	* * book_idx		9260665						
ANR	9261277	Symbol	get_bits		9260665						
ANR	9261278	Symbol	* book_idx		9260665						
ANR	9261279	Symbol	cos		9260665						
ANR	9261280	Symbol	iter_cond		9260665						
ANR	9261281	Symbol	ilog		9260665						
ANR	9261282	Symbol	* vf -> book_list		9260665						
ANR	9261283	Symbol	M_PI		9260665						
ANR	9261284	Symbol	vf -> map		9260665						
ANR	9261285	Symbol	vf -> bark_map_size		9260665						
ANR	9261286	Symbol	vec		9260665						
ANR	9261287	Symbol	sqrt		9260665						
ANR	9261288	Symbol	* idx		9260665						
ANR	9261289	Symbol	codebook . vlc . table		9260665						
ANR	9261290	Symbol	* * vc		9260665						
ANR	9261291	Symbol	codebook		9260665						
ANR	9261292	Symbol	exp		9260665						
ANR	9261293	Symbol	* * vf		9260665						
ANR	9261294	Symbol	order		9260665						
ANR	9261295	Symbol	exponent		9260665						
ANR	9261296	Symbol	vc -> avccontext		9260665						
ANR	9261297	Symbol	codebook . codevectors		9260665						
ANR	9261298	Symbol	last		9260665						
ANR	9261299	Symbol	* codebook . codevectors		9260665						
ANR	9261300	Symbol	codebook . dimensions		9260665						
ANR	9261301	Symbol	lsp_len		9260665						
ANR	9261302	Symbol	vc		9260665						
ANR	9261303	Symbol	* * vf -> book_list		9260665						
ANR	9261304	Symbol	vf -> book_list		9260665						
ANR	9261305	Symbol	vf		9260665						
ANR	9261306	Symbol	* lsp		9260665						
ANR	9261307	Symbol	codebook . maxdepth		9260665						
ANR	9261308	Symbol	* vec_off		9260665						
ANR	9261309	Symbol	pow_of_two		9260665						
ANR	9261310	Symbol	& vfu -> t0		9260665						
ANR	9261311	Symbol	vf -> amplitude_bits		9260665						
ANR	9261312	Symbol	idx		9260665						
ANR	9261313	Symbol	* lsp_len		9260665						
ANR	9261314	Symbol	codebook . vlc		9260665						
ANR	9261315	Symbol	vfu		9260665						
ANR	9261316	Symbol	lsp		9260665						
ANR	9261317	Symbol	vf -> num_books		9260665						
ANR	9261318	Symbol	two_cos_w		9260665						
ANR	9261319	Symbol	& vc -> gb		9260665						
ANR	9261320	Symbol	vc -> codebooks		9260665						
ANR	9261321	Symbol	amplitude		9260665						
ANR	9261322	Symbol	codebook . nb_bits		9260665						
ANR	9261323	Symbol	vec_off		9260665						
ANR	9261324	Symbol	* vc -> codebooks		9260665						
ANR	9261325	Symbol	AV_LOG_ERROR		9260665						
ANR	9261326	Symbol	book_idx		9260665						
ANR	9261327	Symbol	* vf -> map		9260665						
ANR	9261328	Symbol	* * * vf		9260665						
ANR	9261329	Symbol	* codebook		9260665						
ANR	9261330	Symbol	i		9260665						
ANR	9261331	Symbol	j		9260665						
ANR	9261332	Symbol	* vc		9260665						
ANR	9261333	Symbol	vf -> order		9260665						
ANR	9261334	Symbol	p		9260665						
ANR	9261335	Symbol	q		9260665						
ANR	9261336	Symbol	vf -> amplitude_offset		9260665						
ANR	9261337	Symbol	* i		9260665						
ANR	9261338	Symbol	* j		9260665						
ANR	9261339	Symbol	* vf		9260665						
ANR	9261340	Symbol	vf -> map_size		9260665						
ANR	9261341	Symbol	get_vlc2		9260665						
ANR	9261342	Symbol	* vec		9260665						
