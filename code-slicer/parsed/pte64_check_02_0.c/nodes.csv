command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6761396	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pte64_check_02_0.c								
ANR	6761397	Function	pte64_check	1:0:0:1515							
ANR	6761398	FunctionDef	"pte64_check (struct mmu_ctx_hash64 * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type)"		6761397	0					
ANR	6761399	CompoundStatement		5:0:139:1515	6761397	0					
ANR	6761400	IdentifierDeclStatement	target_ulong mmask ;	7:4:146:164	6761397	0	True				
ANR	6761401	IdentifierDecl	mmask		6761397	0					
ANR	6761402	IdentifierDeclType	target_ulong		6761397	0					
ANR	6761403	Identifier	mmask		6761397	1					
ANR	6761404	IdentifierDeclStatement	"int access , ret , pp ;"	9:4:171:190	6761397	1	True				
ANR	6761405	IdentifierDecl	access		6761397	0					
ANR	6761406	IdentifierDeclType	int		6761397	0					
ANR	6761407	Identifier	access		6761397	1					
ANR	6761408	IdentifierDecl	ret		6761397	1					
ANR	6761409	IdentifierDeclType	int		6761397	0					
ANR	6761410	Identifier	ret		6761397	1					
ANR	6761411	IdentifierDecl	pp		6761397	2					
ANR	6761412	IdentifierDeclType	int		6761397	0					
ANR	6761413	Identifier	pp		6761397	1					
ANR	6761414	ExpressionStatement	ret = - 1	13:4:199:207	6761397	2	True				
ANR	6761415	AssignmentExpression	ret = - 1		6761397	0		=			
ANR	6761416	Identifier	ret		6761397	0					
ANR	6761417	UnaryOperationExpression	- 1		6761397	1					
ANR	6761418	UnaryOperator	-		6761397	0					
ANR	6761419	PrimaryExpression	1		6761397	1					
ANR	6761420	IfStatement	if ( ( pte0 & HPTE64_V_VALID ) && ( h == ! ! ( pte0 & HPTE64_V_SECONDARY ) ) )		6761397	3					
ANR	6761421	Condition	( pte0 & HPTE64_V_VALID ) && ( h == ! ! ( pte0 & HPTE64_V_SECONDARY ) )	17:8:260:322	6761397	0	True				
ANR	6761422	AndExpression	( pte0 & HPTE64_V_VALID ) && ( h == ! ! ( pte0 & HPTE64_V_SECONDARY ) )		6761397	0		&&			
ANR	6761423	BitAndExpression	pte0 & HPTE64_V_VALID		6761397	0		&			
ANR	6761424	Identifier	pte0		6761397	0					
ANR	6761425	Identifier	HPTE64_V_VALID		6761397	1					
ANR	6761426	EqualityExpression	h == ! ! ( pte0 & HPTE64_V_SECONDARY )		6761397	1		==			
ANR	6761427	Identifier	h		6761397	0					
ANR	6761428	UnaryOperationExpression	! ! ( pte0 & HPTE64_V_SECONDARY )		6761397	1					
ANR	6761429	UnaryOperator	!		6761397	0					
ANR	6761430	UnaryOperationExpression	! ( pte0 & HPTE64_V_SECONDARY )		6761397	1					
ANR	6761431	UnaryOperator	!		6761397	0					
ANR	6761432	BitAndExpression	pte0 & HPTE64_V_SECONDARY		6761397	1		&			
ANR	6761433	Identifier	pte0		6761397	0					
ANR	6761434	Identifier	HPTE64_V_SECONDARY		6761397	1					
ANR	6761435	CompoundStatement		13:73:185:185	6761397	1					
ANR	6761436	ExpressionStatement	mmask = PTE64_CHECK_MASK	21:8:368:392	6761397	0	True				
ANR	6761437	AssignmentExpression	mmask = PTE64_CHECK_MASK		6761397	0		=			
ANR	6761438	Identifier	mmask		6761397	0					
ANR	6761439	Identifier	PTE64_CHECK_MASK		6761397	1					
ANR	6761440	ExpressionStatement	pp = ( pte1 & HPTE64_R_PP ) | ( ( pte1 & HPTE64_R_PP0 ) >> 61 )	23:8:403:460	6761397	1	True				
ANR	6761441	AssignmentExpression	pp = ( pte1 & HPTE64_R_PP ) | ( ( pte1 & HPTE64_R_PP0 ) >> 61 )		6761397	0		=			
ANR	6761442	Identifier	pp		6761397	0					
ANR	6761443	InclusiveOrExpression	( pte1 & HPTE64_R_PP ) | ( ( pte1 & HPTE64_R_PP0 ) >> 61 )		6761397	1		|			
ANR	6761444	BitAndExpression	pte1 & HPTE64_R_PP		6761397	0		&			
ANR	6761445	Identifier	pte1		6761397	0					
ANR	6761446	Identifier	HPTE64_R_PP		6761397	1					
ANR	6761447	ShiftExpression	( pte1 & HPTE64_R_PP0 ) >> 61		6761397	1		>>			
ANR	6761448	BitAndExpression	pte1 & HPTE64_R_PP0		6761397	0		&			
ANR	6761449	Identifier	pte1		6761397	0					
ANR	6761450	Identifier	HPTE64_R_PP0		6761397	1					
ANR	6761451	PrimaryExpression	61		6761397	1					
ANR	6761452	ExpressionStatement	ctx -> nx = ( pte1 & HPTE64_R_N ) || ( pte1 & HPTE64_R_G )	27:8:534:586	6761397	2	True				
ANR	6761453	AssignmentExpression	ctx -> nx = ( pte1 & HPTE64_R_N ) || ( pte1 & HPTE64_R_G )		6761397	0		=			
ANR	6761454	PtrMemberAccess	ctx -> nx		6761397	0					
ANR	6761455	Identifier	ctx		6761397	0					
ANR	6761456	Identifier	nx		6761397	1					
ANR	6761457	OrExpression	( pte1 & HPTE64_R_N ) || ( pte1 & HPTE64_R_G )		6761397	1		||			
ANR	6761458	BitAndExpression	pte1 & HPTE64_R_N		6761397	0		&			
ANR	6761459	Identifier	pte1		6761397	0					
ANR	6761460	Identifier	HPTE64_R_N		6761397	1					
ANR	6761461	BitAndExpression	pte1 & HPTE64_R_G		6761397	1		&			
ANR	6761462	Identifier	pte1		6761397	0					
ANR	6761463	Identifier	HPTE64_R_G		6761397	1					
ANR	6761464	IfStatement	"if ( HPTE64_V_COMPARE ( pte0 , ctx -> ptem ) )"		6761397	3					
ANR	6761465	Condition	"HPTE64_V_COMPARE ( pte0 , ctx -> ptem )"	29:12:601:633	6761397	0	True				
ANR	6761466	CallExpression	"HPTE64_V_COMPARE ( pte0 , ctx -> ptem )"		6761397	0					
ANR	6761467	Callee	HPTE64_V_COMPARE		6761397	0					
ANR	6761468	Identifier	HPTE64_V_COMPARE		6761397	0					
ANR	6761469	ArgumentList	pte0		6761397	1					
ANR	6761470	Argument	pte0		6761397	0					
ANR	6761471	Identifier	pte0		6761397	0					
ANR	6761472	Argument	ctx -> ptem		6761397	1					
ANR	6761473	PtrMemberAccess	ctx -> ptem		6761397	0					
ANR	6761474	Identifier	ctx		6761397	0					
ANR	6761475	Identifier	ptem		6761397	1					
ANR	6761476	CompoundStatement		25:47:496:496	6761397	1					
ANR	6761477	Statement	if	31:12:651:652	6761397	0	True				
ANR	6761478	Statement	(	31:15:654:654	6761397	1	True				
ANR	6761479	Statement	ctx	31:16:655:657	6761397	2	True				
ANR	6761480	Statement	->	31:19:658:659	6761397	3	True				
ANR	6761481	Statement	raddr	31:21:660:664	6761397	4	True				
ANR	6761482	Statement	!=	31:27:666:667	6761397	5	True				
ANR	6761483	Statement	(	31:30:669:669	6761397	6	True				
ANR	6761484	Statement	hwaddr	31:31:670:675	6761397	7	True				
ANR	6761485	Statement	)	31:37:676:676	6761397	8	True				
ANR	6761486	Statement	-	31:38:677:677	6761397	9	True				
ANR	6761487	Statement	1UL	31:39:678:680	6761397	10	True				
ANR	6761488	Statement	L	31:42:681:681	6761397	11	True				
ANR	6761489	Statement	)	31:43:682:682	6761397	12	True				
ANR	6761490	CompoundStatement		27:45:544:544	6761397	13					
ANR	6761491	IfStatement	if ( ( ctx -> raddr & mmask ) != ( pte1 & mmask ) )		6761397	0					
ANR	6761492	Condition	( ctx -> raddr & mmask ) != ( pte1 & mmask )	35:20:775:812	6761397	0	True				
ANR	6761493	EqualityExpression	( ctx -> raddr & mmask ) != ( pte1 & mmask )		6761397	0		!=			
ANR	6761494	BitAndExpression	ctx -> raddr & mmask		6761397	0		&			
ANR	6761495	PtrMemberAccess	ctx -> raddr		6761397	0					
ANR	6761496	Identifier	ctx		6761397	0					
ANR	6761497	Identifier	raddr		6761397	1					
ANR	6761498	Identifier	mmask		6761397	1					
ANR	6761499	BitAndExpression	pte1 & mmask		6761397	1		&			
ANR	6761500	Identifier	pte1		6761397	0					
ANR	6761501	Identifier	mmask		6761397	1					
ANR	6761502	CompoundStatement		31:60:675:675	6761397	1					
ANR	6761503	ExpressionStatement	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"	37:20:838:867	6761397	0	True				
ANR	6761504	CallExpression	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"		6761397	0					
ANR	6761505	Callee	qemu_log		6761397	0					
ANR	6761506	Identifier	qemu_log		6761397	0					
ANR	6761507	ArgumentList	"""Bad RPN/WIMG/PP\\n"""		6761397	1					
ANR	6761508	Argument	"""Bad RPN/WIMG/PP\\n"""		6761397	0					
ANR	6761509	PrimaryExpression	"""Bad RPN/WIMG/PP\\n"""		6761397	0					
ANR	6761510	ReturnStatement	return - 3 ;	39:20:890:899	6761397	1	True				
ANR	6761511	UnaryOperationExpression	- 3		6761397	0					
ANR	6761512	UnaryOperator	-		6761397	0					
ANR	6761513	PrimaryExpression	3		6761397	1					
ANR	6761514	ExpressionStatement	"access = ppc_hash64_pp_check ( ctx -> key , pp , ctx -> nx )"	47:12:989:1040	6761397	14	True				
ANR	6761515	AssignmentExpression	"access = ppc_hash64_pp_check ( ctx -> key , pp , ctx -> nx )"		6761397	0		=			
ANR	6761516	Identifier	access		6761397	0					
ANR	6761517	CallExpression	"ppc_hash64_pp_check ( ctx -> key , pp , ctx -> nx )"		6761397	1					
ANR	6761518	Callee	ppc_hash64_pp_check		6761397	0					
ANR	6761519	Identifier	ppc_hash64_pp_check		6761397	0					
ANR	6761520	ArgumentList	ctx -> key		6761397	1					
ANR	6761521	Argument	ctx -> key		6761397	0					
ANR	6761522	PtrMemberAccess	ctx -> key		6761397	0					
ANR	6761523	Identifier	ctx		6761397	0					
ANR	6761524	Identifier	key		6761397	1					
ANR	6761525	Argument	pp		6761397	1					
ANR	6761526	Identifier	pp		6761397	0					
ANR	6761527	Argument	ctx -> nx		6761397	2					
ANR	6761528	PtrMemberAccess	ctx -> nx		6761397	0					
ANR	6761529	Identifier	ctx		6761397	0					
ANR	6761530	Identifier	nx		6761397	1					
ANR	6761531	ExpressionStatement	ctx -> raddr = pte1	51:12:1109:1126	6761397	15	True				
ANR	6761532	AssignmentExpression	ctx -> raddr = pte1		6761397	0		=			
ANR	6761533	PtrMemberAccess	ctx -> raddr		6761397	0					
ANR	6761534	Identifier	ctx		6761397	0					
ANR	6761535	Identifier	raddr		6761397	1					
ANR	6761536	Identifier	pte1		6761397	1					
ANR	6761537	ExpressionStatement	ctx -> prot = access	53:12:1141:1159	6761397	16	True				
ANR	6761538	AssignmentExpression	ctx -> prot = access		6761397	0		=			
ANR	6761539	PtrMemberAccess	ctx -> prot		6761397	0					
ANR	6761540	Identifier	ctx		6761397	0					
ANR	6761541	Identifier	prot		6761397	1					
ANR	6761542	Identifier	access		6761397	1					
ANR	6761543	ExpressionStatement	"ret = ppc_hash64_check_prot ( ctx -> prot , rw , type )"	55:12:1174:1222	6761397	17	True				
ANR	6761544	AssignmentExpression	"ret = ppc_hash64_check_prot ( ctx -> prot , rw , type )"		6761397	0		=			
ANR	6761545	Identifier	ret		6761397	0					
ANR	6761546	CallExpression	"ppc_hash64_check_prot ( ctx -> prot , rw , type )"		6761397	1					
ANR	6761547	Callee	ppc_hash64_check_prot		6761397	0					
ANR	6761548	Identifier	ppc_hash64_check_prot		6761397	0					
ANR	6761549	ArgumentList	ctx -> prot		6761397	1					
ANR	6761550	Argument	ctx -> prot		6761397	0					
ANR	6761551	PtrMemberAccess	ctx -> prot		6761397	0					
ANR	6761552	Identifier	ctx		6761397	0					
ANR	6761553	Identifier	prot		6761397	1					
ANR	6761554	Argument	rw		6761397	1					
ANR	6761555	Identifier	rw		6761397	0					
ANR	6761556	Argument	type		6761397	2					
ANR	6761557	Identifier	type		6761397	0					
ANR	6761558	IfStatement	if ( ret == 0 )		6761397	18					
ANR	6761559	Condition	ret == 0	57:16:1241:1248	6761397	0	True				
ANR	6761560	EqualityExpression	ret == 0		6761397	0		==			
ANR	6761561	Identifier	ret		6761397	0					
ANR	6761562	PrimaryExpression	0		6761397	1					
ANR	6761563	CompoundStatement		53:26:1111:1111	6761397	1					
ANR	6761564	ExpressionStatement	"LOG_MMU ( ""PTE access granted !\\n"" )"	61:16:1308:1341	6761397	0	True				
ANR	6761565	CallExpression	"LOG_MMU ( ""PTE access granted !\\n"" )"		6761397	0					
ANR	6761566	Callee	LOG_MMU		6761397	0					
ANR	6761567	Identifier	LOG_MMU		6761397	0					
ANR	6761568	ArgumentList	"""PTE access granted !\\n"""		6761397	1					
ANR	6761569	Argument	"""PTE access granted !\\n"""		6761397	0					
ANR	6761570	PrimaryExpression	"""PTE access granted !\\n"""		6761397	0					
ANR	6761571	ElseStatement	else		6761397	0					
ANR	6761572	CompoundStatement		59:19:1223:1223	6761397	0					
ANR	6761573	ExpressionStatement	"LOG_MMU ( ""PTE access rejected\\n"" )"	67:16:1428:1460	6761397	0	True				
ANR	6761574	CallExpression	"LOG_MMU ( ""PTE access rejected\\n"" )"		6761397	0					
ANR	6761575	Callee	LOG_MMU		6761397	0					
ANR	6761576	Identifier	LOG_MMU		6761397	0					
ANR	6761577	ArgumentList	"""PTE access rejected\\n"""		6761397	1					
ANR	6761578	Argument	"""PTE access rejected\\n"""		6761397	0					
ANR	6761579	PrimaryExpression	"""PTE access rejected\\n"""		6761397	0					
ANR	6761580	ReturnStatement	return ret ;	77:4:1502:1512	6761397	4	True				
ANR	6761581	Identifier	ret		6761397	0					
ANR	6761582	ReturnType	static int		6761397	1					
ANR	6761583	Identifier	pte64_check		6761397	2					
ANR	6761584	ParameterList	"struct mmu_ctx_hash64 * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type"		6761397	3					
ANR	6761585	Parameter	struct mmu_ctx_hash64 * ctx	1:23:23:48	6761397	0	True				
ANR	6761586	ParameterType	struct mmu_ctx_hash64 *		6761397	0					
ANR	6761587	Identifier	ctx		6761397	1					
ANR	6761588	Parameter	target_ulong pte0	1:51:51:67	6761397	1	True				
ANR	6761589	ParameterType	target_ulong		6761397	0					
ANR	6761590	Identifier	pte0		6761397	1					
ANR	6761591	Parameter	target_ulong pte1	3:23:94:110	6761397	2	True				
ANR	6761592	ParameterType	target_ulong		6761397	0					
ANR	6761593	Identifier	pte1		6761397	1					
ANR	6761594	Parameter	int h	3:42:113:117	6761397	3	True				
ANR	6761595	ParameterType	int		6761397	0					
ANR	6761596	Identifier	h		6761397	1					
ANR	6761597	Parameter	int rw	3:49:120:125	6761397	4	True				
ANR	6761598	ParameterType	int		6761397	0					
ANR	6761599	Identifier	rw		6761397	1					
ANR	6761600	Parameter	int type	3:57:128:135	6761397	5	True				
ANR	6761601	ParameterType	int		6761397	0					
ANR	6761602	Identifier	type		6761397	1					
ANR	6761603	CFGEntryNode	ENTRY		6761397		True				
ANR	6761604	CFGExitNode	EXIT		6761397		True				
ANR	6761605	Symbol	pp		6761397						
ANR	6761606	Symbol	HPTE64_V_SECONDARY		6761397						
ANR	6761607	Symbol	access		6761397						
ANR	6761608	Symbol	pte1		6761397						
ANR	6761609	Symbol	rw		6761397						
ANR	6761610	Symbol	HPTE64_V_COMPARE		6761397						
ANR	6761611	Symbol	ctx -> key		6761397						
ANR	6761612	Symbol	type		6761397						
ANR	6761613	Symbol	HPTE64_R_PP		6761397						
ANR	6761614	Symbol	ctx -> prot		6761397						
ANR	6761615	Symbol	PTE64_CHECK_MASK		6761397						
ANR	6761616	Symbol	ppc_hash64_check_prot		6761397						
ANR	6761617	Symbol	pte0		6761397						
ANR	6761618	Symbol	ret		6761397						
ANR	6761619	Symbol	ctx		6761397						
ANR	6761620	Symbol	h		6761397						
ANR	6761621	Symbol	mmask		6761397						
ANR	6761622	Symbol	ctx -> ptem		6761397						
ANR	6761623	Symbol	* ctx		6761397						
ANR	6761624	Symbol	HPTE64_V_VALID		6761397						
ANR	6761625	Symbol	ppc_hash64_pp_check		6761397						
ANR	6761626	Symbol	HPTE64_R_PP0		6761397						
ANR	6761627	Symbol	HPTE64_R_N		6761397						
ANR	6761628	Symbol	HPTE64_R_G		6761397						
ANR	6761629	Symbol	ctx -> raddr		6761397						
ANR	6761630	Symbol	ctx -> nx		6761397						
