command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6710698	File	/home/p4ultr4n/workplace/ReVeal/raw_code/process_command_0.c								
ANR	6710699	Function	process_command	1:0:0:866							
ANR	6710700	FunctionDef	"process_command (AVFilterContext * ctx , const char * cmd , const char * args , char * res , int res_len , int flags)"		6710699	0					
ANR	6710701	CompoundStatement		5:0:148:866	6710699	0					
ANR	6710702	IdentifierDeclStatement	OverlayContext * over = ctx -> priv ;	7:4:155:187	6710699	0	True				
ANR	6710703	IdentifierDecl	* over = ctx -> priv		6710699	0					
ANR	6710704	IdentifierDeclType	OverlayContext *		6710699	0					
ANR	6710705	Identifier	over		6710699	1					
ANR	6710706	AssignmentExpression	* over = ctx -> priv		6710699	2		=			
ANR	6710707	Identifier	over		6710699	0					
ANR	6710708	PtrMemberAccess	ctx -> priv		6710699	1					
ANR	6710709	Identifier	ctx		6710699	0					
ANR	6710710	Identifier	priv		6710699	1					
ANR	6710711	IdentifierDeclStatement	int ret ;	9:4:194:201	6710699	1	True				
ANR	6710712	IdentifierDecl	ret		6710699	0					
ANR	6710713	IdentifierDeclType	int		6710699	0					
ANR	6710714	Identifier	ret		6710699	1					
ANR	6710715	IfStatement	"if ( ! strcmp ( cmd , ""x"" ) )"		6710699	2					
ANR	6710716	Condition	"! strcmp ( cmd , ""x"" )"	13:13:219:235	6710699	0	True				
ANR	6710717	UnaryOperationExpression	"! strcmp ( cmd , ""x"" )"		6710699	0					
ANR	6710718	UnaryOperator	!		6710699	0					
ANR	6710719	CallExpression	"strcmp ( cmd , ""x"" )"		6710699	1					
ANR	6710720	Callee	strcmp		6710699	0					
ANR	6710721	Identifier	strcmp		6710699	0					
ANR	6710722	ArgumentList	cmd		6710699	1					
ANR	6710723	Argument	cmd		6710699	0					
ANR	6710724	Identifier	cmd		6710699	0					
ANR	6710725	Argument	"""x"""		6710699	1					
ANR	6710726	PrimaryExpression	"""x"""		6710699	0					
ANR	6710727	ExpressionStatement	"ret = set_expr ( & over -> x_pexpr , args , ctx )"	15:8:247:288	6710699	1	True				
ANR	6710728	AssignmentExpression	"ret = set_expr ( & over -> x_pexpr , args , ctx )"		6710699	0		=			
ANR	6710729	Identifier	ret		6710699	0					
ANR	6710730	CallExpression	"set_expr ( & over -> x_pexpr , args , ctx )"		6710699	1					
ANR	6710731	Callee	set_expr		6710699	0					
ANR	6710732	Identifier	set_expr		6710699	0					
ANR	6710733	ArgumentList	& over -> x_pexpr		6710699	1					
ANR	6710734	Argument	& over -> x_pexpr		6710699	0					
ANR	6710735	UnaryOperationExpression	& over -> x_pexpr		6710699	0					
ANR	6710736	UnaryOperator	&		6710699	0					
ANR	6710737	PtrMemberAccess	over -> x_pexpr		6710699	1					
ANR	6710738	Identifier	over		6710699	0					
ANR	6710739	Identifier	x_pexpr		6710699	1					
ANR	6710740	Argument	args		6710699	1					
ANR	6710741	Identifier	args		6710699	0					
ANR	6710742	Argument	ctx		6710699	2					
ANR	6710743	Identifier	ctx		6710699	0					
ANR	6710744	ElseStatement	else		6710699	0					
ANR	6710745	IfStatement	"if ( ! strcmp ( cmd , ""y"" ) )"		6710699	0					
ANR	6710746	Condition	"! strcmp ( cmd , ""y"" )"	17:13:304:320	6710699	0	True				
ANR	6710747	UnaryOperationExpression	"! strcmp ( cmd , ""y"" )"		6710699	0					
ANR	6710748	UnaryOperator	!		6710699	0					
ANR	6710749	CallExpression	"strcmp ( cmd , ""y"" )"		6710699	1					
ANR	6710750	Callee	strcmp		6710699	0					
ANR	6710751	Identifier	strcmp		6710699	0					
ANR	6710752	ArgumentList	cmd		6710699	1					
ANR	6710753	Argument	cmd		6710699	0					
ANR	6710754	Identifier	cmd		6710699	0					
ANR	6710755	Argument	"""y"""		6710699	1					
ANR	6710756	PrimaryExpression	"""y"""		6710699	0					
ANR	6710757	ExpressionStatement	"ret = set_expr ( & over -> y_pexpr , args , ctx )"	19:8:332:373	6710699	1	True				
ANR	6710758	AssignmentExpression	"ret = set_expr ( & over -> y_pexpr , args , ctx )"		6710699	0		=			
ANR	6710759	Identifier	ret		6710699	0					
ANR	6710760	CallExpression	"set_expr ( & over -> y_pexpr , args , ctx )"		6710699	1					
ANR	6710761	Callee	set_expr		6710699	0					
ANR	6710762	Identifier	set_expr		6710699	0					
ANR	6710763	ArgumentList	& over -> y_pexpr		6710699	1					
ANR	6710764	Argument	& over -> y_pexpr		6710699	0					
ANR	6710765	UnaryOperationExpression	& over -> y_pexpr		6710699	0					
ANR	6710766	UnaryOperator	&		6710699	0					
ANR	6710767	PtrMemberAccess	over -> y_pexpr		6710699	1					
ANR	6710768	Identifier	over		6710699	0					
ANR	6710769	Identifier	y_pexpr		6710699	1					
ANR	6710770	Argument	args		6710699	1					
ANR	6710771	Identifier	args		6710699	0					
ANR	6710772	Argument	ctx		6710699	2					
ANR	6710773	Identifier	ctx		6710699	0					
ANR	6710774	ElseStatement	else		6710699	0					
ANR	6710775	IfStatement	"if ( ! strcmp ( cmd , ""enable"" ) )"		6710699	0					
ANR	6710776	Condition	"! strcmp ( cmd , ""enable"" )"	21:13:389:410	6710699	0	True				
ANR	6710777	UnaryOperationExpression	"! strcmp ( cmd , ""enable"" )"		6710699	0					
ANR	6710778	UnaryOperator	!		6710699	0					
ANR	6710779	CallExpression	"strcmp ( cmd , ""enable"" )"		6710699	1					
ANR	6710780	Callee	strcmp		6710699	0					
ANR	6710781	Identifier	strcmp		6710699	0					
ANR	6710782	ArgumentList	cmd		6710699	1					
ANR	6710783	Argument	cmd		6710699	0					
ANR	6710784	Identifier	cmd		6710699	0					
ANR	6710785	Argument	"""enable"""		6710699	1					
ANR	6710786	PrimaryExpression	"""enable"""		6710699	0					
ANR	6710787	ExpressionStatement	"ret = set_expr ( & over -> enable_pexpr , args , ctx )"	23:8:422:468	6710699	1	True				
ANR	6710788	AssignmentExpression	"ret = set_expr ( & over -> enable_pexpr , args , ctx )"		6710699	0		=			
ANR	6710789	Identifier	ret		6710699	0					
ANR	6710790	CallExpression	"set_expr ( & over -> enable_pexpr , args , ctx )"		6710699	1					
ANR	6710791	Callee	set_expr		6710699	0					
ANR	6710792	Identifier	set_expr		6710699	0					
ANR	6710793	ArgumentList	& over -> enable_pexpr		6710699	1					
ANR	6710794	Argument	& over -> enable_pexpr		6710699	0					
ANR	6710795	UnaryOperationExpression	& over -> enable_pexpr		6710699	0					
ANR	6710796	UnaryOperator	&		6710699	0					
ANR	6710797	PtrMemberAccess	over -> enable_pexpr		6710699	1					
ANR	6710798	Identifier	over		6710699	0					
ANR	6710799	Identifier	enable_pexpr		6710699	1					
ANR	6710800	Argument	args		6710699	1					
ANR	6710801	Identifier	args		6710699	0					
ANR	6710802	Argument	ctx		6710699	2					
ANR	6710803	Identifier	ctx		6710699	0					
ANR	6710804	ElseStatement	else		6710699	0					
ANR	6710805	ExpressionStatement	ret = AVERROR ( ENOSYS )	27:8:489:510	6710699	0	True				
ANR	6710806	AssignmentExpression	ret = AVERROR ( ENOSYS )		6710699	0		=			
ANR	6710807	Identifier	ret		6710699	0					
ANR	6710808	CallExpression	AVERROR ( ENOSYS )		6710699	1					
ANR	6710809	Callee	AVERROR		6710699	0					
ANR	6710810	Identifier	AVERROR		6710699	0					
ANR	6710811	ArgumentList	ENOSYS		6710699	1					
ANR	6710812	Argument	ENOSYS		6710699	0					
ANR	6710813	Identifier	ENOSYS		6710699	0					
ANR	6710814	IfStatement	if ( ret < 0 )		6710699	3					
ANR	6710815	Condition	ret < 0	31:8:523:529	6710699	0	True				
ANR	6710816	RelationalExpression	ret < 0		6710699	0		<			
ANR	6710817	Identifier	ret		6710699	0					
ANR	6710818	PrimaryExpression	0		6710699	1					
ANR	6710819	ReturnStatement	return ret ;	33:8:541:551	6710699	1	True				
ANR	6710820	Identifier	ret		6710699	0					
ANR	6710821	IfStatement	if ( over -> eval_mode == EVAL_MODE_INIT )		6710699	4					
ANR	6710822	Condition	over -> eval_mode == EVAL_MODE_INIT	37:8:564:596	6710699	0	True				
ANR	6710823	EqualityExpression	over -> eval_mode == EVAL_MODE_INIT		6710699	0		==			
ANR	6710824	PtrMemberAccess	over -> eval_mode		6710699	0					
ANR	6710825	Identifier	over		6710699	0					
ANR	6710826	Identifier	eval_mode		6710699	1					
ANR	6710827	Identifier	EVAL_MODE_INIT		6710699	1					
ANR	6710828	CompoundStatement		33:43:450:450	6710699	1					
ANR	6710829	ExpressionStatement	"eval_expr ( ctx , EVAL_ALL )"	39:8:610:634	6710699	0	True				
ANR	6710830	CallExpression	"eval_expr ( ctx , EVAL_ALL )"		6710699	0					
ANR	6710831	Callee	eval_expr		6710699	0					
ANR	6710832	Identifier	eval_expr		6710699	0					
ANR	6710833	ArgumentList	ctx		6710699	1					
ANR	6710834	Argument	ctx		6710699	0					
ANR	6710835	Identifier	ctx		6710699	0					
ANR	6710836	Argument	EVAL_ALL		6710699	1					
ANR	6710837	Identifier	EVAL_ALL		6710699	0					
ANR	6710838	ExpressionStatement	"av_log ( ctx , AV_LOG_VERBOSE , ""x:%f xi:%d y:%f yi:%d enable:%f\\n"" , over -> var_values [ VAR_X ] , over -> x , over -> var_values [ VAR_Y ] , over -> y , over -> enable )"	41:8:645:839	6710699	1	True				
ANR	6710839	CallExpression	"av_log ( ctx , AV_LOG_VERBOSE , ""x:%f xi:%d y:%f yi:%d enable:%f\\n"" , over -> var_values [ VAR_X ] , over -> x , over -> var_values [ VAR_Y ] , over -> y , over -> enable )"		6710699	0					
ANR	6710840	Callee	av_log		6710699	0					
ANR	6710841	Identifier	av_log		6710699	0					
ANR	6710842	ArgumentList	ctx		6710699	1					
ANR	6710843	Argument	ctx		6710699	0					
ANR	6710844	Identifier	ctx		6710699	0					
ANR	6710845	Argument	AV_LOG_VERBOSE		6710699	1					
ANR	6710846	Identifier	AV_LOG_VERBOSE		6710699	0					
ANR	6710847	Argument	"""x:%f xi:%d y:%f yi:%d enable:%f\\n"""		6710699	2					
ANR	6710848	PrimaryExpression	"""x:%f xi:%d y:%f yi:%d enable:%f\\n"""		6710699	0					
ANR	6710849	Argument	over -> var_values [ VAR_X ]		6710699	3					
ANR	6710850	ArrayIndexing	over -> var_values [ VAR_X ]		6710699	0					
ANR	6710851	PtrMemberAccess	over -> var_values		6710699	0					
ANR	6710852	Identifier	over		6710699	0					
ANR	6710853	Identifier	var_values		6710699	1					
ANR	6710854	Identifier	VAR_X		6710699	1					
ANR	6710855	Argument	over -> x		6710699	4					
ANR	6710856	PtrMemberAccess	over -> x		6710699	0					
ANR	6710857	Identifier	over		6710699	0					
ANR	6710858	Identifier	x		6710699	1					
ANR	6710859	Argument	over -> var_values [ VAR_Y ]		6710699	5					
ANR	6710860	ArrayIndexing	over -> var_values [ VAR_Y ]		6710699	0					
ANR	6710861	PtrMemberAccess	over -> var_values		6710699	0					
ANR	6710862	Identifier	over		6710699	0					
ANR	6710863	Identifier	var_values		6710699	1					
ANR	6710864	Identifier	VAR_Y		6710699	1					
ANR	6710865	Argument	over -> y		6710699	6					
ANR	6710866	PtrMemberAccess	over -> y		6710699	0					
ANR	6710867	Identifier	over		6710699	0					
ANR	6710868	Identifier	y		6710699	1					
ANR	6710869	Argument	over -> enable		6710699	7					
ANR	6710870	PtrMemberAccess	over -> enable		6710699	0					
ANR	6710871	Identifier	over		6710699	0					
ANR	6710872	Identifier	enable		6710699	1					
ANR	6710873	ReturnStatement	return ret ;	51:4:853:863	6710699	5	True				
ANR	6710874	Identifier	ret		6710699	0					
ANR	6710875	ReturnType	static int		6710699	1					
ANR	6710876	Identifier	process_command		6710699	2					
ANR	6710877	ParameterList	"AVFilterContext * ctx , const char * cmd , const char * args , char * res , int res_len , int flags"		6710699	3					
ANR	6710878	Parameter	AVFilterContext * ctx	1:27:27:46	6710699	0	True				
ANR	6710879	ParameterType	AVFilterContext *		6710699	0					
ANR	6710880	Identifier	ctx		6710699	1					
ANR	6710881	Parameter	const char * cmd	1:49:49:63	6710699	1	True				
ANR	6710882	ParameterType	const char *		6710699	0					
ANR	6710883	Identifier	cmd		6710699	1					
ANR	6710884	Parameter	const char * args	1:66:66:81	6710699	2	True				
ANR	6710885	ParameterType	const char *		6710699	0					
ANR	6710886	Identifier	args		6710699	1					
ANR	6710887	Parameter	char * res	3:27:112:120	6710699	3	True				
ANR	6710888	ParameterType	char *		6710699	0					
ANR	6710889	Identifier	res		6710699	1					
ANR	6710890	Parameter	int res_len	3:38:123:133	6710699	4	True				
ANR	6710891	ParameterType	int		6710699	0					
ANR	6710892	Identifier	res_len		6710699	1					
ANR	6710893	Parameter	int flags	3:51:136:144	6710699	5	True				
ANR	6710894	ParameterType	int		6710699	0					
ANR	6710895	Identifier	flags		6710699	1					
ANR	6710896	CFGEntryNode	ENTRY		6710699		True				
ANR	6710897	CFGExitNode	EXIT		6710699		True				
ANR	6710898	Symbol	flags		6710699						
ANR	6710899	Symbol	ENOSYS		6710699						
ANR	6710900	Symbol	* VAR_Y		6710699						
ANR	6710901	Symbol	EVAL_ALL		6710699						
ANR	6710902	Symbol	* VAR_X		6710699						
ANR	6710903	Symbol	res_len		6710699						
ANR	6710904	Symbol	& over -> enable_pexpr		6710699						
ANR	6710905	Symbol	* over -> var_values		6710699						
ANR	6710906	Symbol	* * over		6710699						
ANR	6710907	Symbol	& over -> y_pexpr		6710699						
ANR	6710908	Symbol	over -> enable		6710699						
ANR	6710909	Symbol	over		6710699						
ANR	6710910	Symbol	ret		6710699						
ANR	6710911	Symbol	strcmp		6710699						
ANR	6710912	Symbol	res		6710699						
ANR	6710913	Symbol	ctx		6710699						
ANR	6710914	Symbol	over -> eval_mode		6710699						
ANR	6710915	Symbol	* over		6710699						
ANR	6710916	Symbol	ctx -> priv		6710699						
ANR	6710917	Symbol	set_expr		6710699						
ANR	6710918	Symbol	EVAL_MODE_INIT		6710699						
ANR	6710919	Symbol	over -> var_values		6710699						
ANR	6710920	Symbol	* ctx		6710699						
ANR	6710921	Symbol	AV_LOG_VERBOSE		6710699						
ANR	6710922	Symbol	args		6710699						
ANR	6710923	Symbol	& over -> x_pexpr		6710699						
ANR	6710924	Symbol	over -> x		6710699						
ANR	6710925	Symbol	VAR_X		6710699						
ANR	6710926	Symbol	over -> y		6710699						
ANR	6710927	Symbol	cmd		6710699						
ANR	6710928	Symbol	AVERROR		6710699						
ANR	6710929	Symbol	VAR_Y		6710699						
