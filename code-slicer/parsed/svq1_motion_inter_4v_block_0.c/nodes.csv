command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8062454	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_motion_inter_4v_block_0.c								
ANR	8062455	Function	svq1_motion_inter_4v_block	1:0:0:2119							
ANR	8062456	FunctionDef	"svq1_motion_inter_4v_block (MpegEncContext * s , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y)"		8062455	0					
ANR	8062457	CompoundStatement		7:0:239:2119	8062455	0					
ANR	8062458	IdentifierDeclStatement	uint8_t * src ;	9:4:246:258	8062455	0	True				
ANR	8062459	IdentifierDecl	* src		8062455	0					
ANR	8062460	IdentifierDeclType	uint8_t *		8062455	0					
ANR	8062461	Identifier	src		8062455	1					
ANR	8062462	IdentifierDeclStatement	uint8_t * dst ;	11:4:265:277	8062455	1	True				
ANR	8062463	IdentifierDecl	* dst		8062455	0					
ANR	8062464	IdentifierDeclType	uint8_t *		8062455	0					
ANR	8062465	Identifier	dst		8062455	1					
ANR	8062466	IdentifierDeclStatement	svq1_pmv mv ;	13:4:284:295	8062455	2	True				
ANR	8062467	IdentifierDecl	mv		8062455	0					
ANR	8062468	IdentifierDeclType	svq1_pmv		8062455	0					
ANR	8062469	Identifier	mv		8062455	1					
ANR	8062470	IdentifierDeclStatement	svq1_pmv * pmv [ 4 ] ;	15:4:302:318	8062455	3	True				
ANR	8062471	IdentifierDecl	* pmv [ 4 ]		8062455	0					
ANR	8062472	IdentifierDeclType	svq1_pmv * [ 4 ]		8062455	0					
ANR	8062473	Identifier	pmv		8062455	1					
ANR	8062474	PrimaryExpression	4		8062455	2					
ANR	8062475	IdentifierDeclStatement	"int i , result ;"	17:4:325:338	8062455	4	True				
ANR	8062476	IdentifierDecl	i		8062455	0					
ANR	8062477	IdentifierDeclType	int		8062455	0					
ANR	8062478	Identifier	i		8062455	1					
ANR	8062479	IdentifierDecl	result		8062455	1					
ANR	8062480	IdentifierDeclType	int		8062455	0					
ANR	8062481	Identifier	result		8062455	1					
ANR	8062482	ExpressionStatement	pmv [ 0 ] = & motion [ 0 ]	23:4:395:414	8062455	5	True				
ANR	8062483	AssignmentExpression	pmv [ 0 ] = & motion [ 0 ]		8062455	0		=			
ANR	8062484	ArrayIndexing	pmv [ 0 ]		8062455	0					
ANR	8062485	Identifier	pmv		8062455	0					
ANR	8062486	PrimaryExpression	0		8062455	1					
ANR	8062487	UnaryOperationExpression	& motion [ 0 ]		8062455	1					
ANR	8062488	UnaryOperator	&		8062455	0					
ANR	8062489	ArrayIndexing	motion [ 0 ]		8062455	1					
ANR	8062490	Identifier	motion		8062455	0					
ANR	8062491	PrimaryExpression	0		8062455	1					
ANR	8062492	IfStatement	if ( y == 0 )		8062455	6					
ANR	8062493	Condition	y == 0	25:8:425:430	8062455	0	True				
ANR	8062494	EqualityExpression	y == 0		8062455	0		==			
ANR	8062495	Identifier	y		8062455	0					
ANR	8062496	PrimaryExpression	0		8062455	1					
ANR	8062497	CompoundStatement		19:16:193:193	8062455	1					
ANR	8062498	ExpressionStatement	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]	27:8:444:477	8062455	0	True				
ANR	8062499	AssignmentExpression	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]		8062455	0		=			
ANR	8062500	ArrayIndexing	pmv [ 1 ]		8062455	0					
ANR	8062501	Identifier	pmv		8062455	0					
ANR	8062502	PrimaryExpression	1		8062455	1					
ANR	8062503	AssignmentExpression	pmv [ 2 ] = pmv [ 0 ]		8062455	1		=			
ANR	8062504	ArrayIndexing	pmv [ 2 ]		8062455	0					
ANR	8062505	Identifier	pmv		8062455	0					
ANR	8062506	PrimaryExpression	2		8062455	1					
ANR	8062507	ArrayIndexing	pmv [ 0 ]		8062455	1					
ANR	8062508	Identifier	pmv		8062455	0					
ANR	8062509	PrimaryExpression	0		8062455	1					
ANR	8062510	ElseStatement	else		8062455	0					
ANR	8062511	CompoundStatement		25:11:251:251	8062455	0					
ANR	8062512	ExpressionStatement	pmv [ 1 ] = & motion [ ( x / 8 ) + 2 ]	33:8:502:531	8062455	0	True				
ANR	8062513	AssignmentExpression	pmv [ 1 ] = & motion [ ( x / 8 ) + 2 ]		8062455	0		=			
ANR	8062514	ArrayIndexing	pmv [ 1 ]		8062455	0					
ANR	8062515	Identifier	pmv		8062455	0					
ANR	8062516	PrimaryExpression	1		8062455	1					
ANR	8062517	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062518	UnaryOperator	&		8062455	0					
ANR	8062519	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062520	Identifier	motion		8062455	0					
ANR	8062521	AdditiveExpression	( x / 8 ) + 2		8062455	1		+			
ANR	8062522	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062523	Identifier	x		8062455	0					
ANR	8062524	PrimaryExpression	8		8062455	1					
ANR	8062525	PrimaryExpression	2		8062455	1					
ANR	8062526	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 4 ]	35:8:542:571	8062455	1	True				
ANR	8062527	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 4 ]		8062455	0		=			
ANR	8062528	ArrayIndexing	pmv [ 2 ]		8062455	0					
ANR	8062529	Identifier	pmv		8062455	0					
ANR	8062530	PrimaryExpression	2		8062455	1					
ANR	8062531	UnaryOperationExpression	& motion [ ( x / 8 ) + 4 ]		8062455	1					
ANR	8062532	UnaryOperator	&		8062455	0					
ANR	8062533	ArrayIndexing	motion [ ( x / 8 ) + 4 ]		8062455	1					
ANR	8062534	Identifier	motion		8062455	0					
ANR	8062535	AdditiveExpression	( x / 8 ) + 4		8062455	1		+			
ANR	8062536	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062537	Identifier	x		8062455	0					
ANR	8062538	PrimaryExpression	8		8062455	1					
ANR	8062539	PrimaryExpression	4		8062455	1					
ANR	8062540	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & mv , pmv )"	41:4:587:639	8062455	7	True				
ANR	8062541	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & mv , pmv )"		8062455	0		=			
ANR	8062542	Identifier	result		8062455	0					
ANR	8062543	CallExpression	"svq1_decode_motion_vector ( bitbuf , & mv , pmv )"		8062455	1					
ANR	8062544	Callee	svq1_decode_motion_vector		8062455	0					
ANR	8062545	Identifier	svq1_decode_motion_vector		8062455	0					
ANR	8062546	ArgumentList	bitbuf		8062455	1					
ANR	8062547	Argument	bitbuf		8062455	0					
ANR	8062548	Identifier	bitbuf		8062455	0					
ANR	8062549	Argument	& mv		8062455	1					
ANR	8062550	UnaryOperationExpression	& mv		8062455	0					
ANR	8062551	UnaryOperator	&		8062455	0					
ANR	8062552	Identifier	mv		8062455	1					
ANR	8062553	Argument	pmv		8062455	2					
ANR	8062554	Identifier	pmv		8062455	0					
ANR	8062555	IfStatement	if ( result != 0 )		8062455	8					
ANR	8062556	Condition	result != 0	45:8:652:662	8062455	0	True				
ANR	8062557	EqualityExpression	result != 0		8062455	0		!=			
ANR	8062558	Identifier	result		8062455	0					
ANR	8062559	PrimaryExpression	0		8062455	1					
ANR	8062560	ReturnStatement	return result ;	47:8:674:687	8062455	1	True				
ANR	8062561	Identifier	result		8062455	0					
ANR	8062562	ExpressionStatement	pmv [ 0 ] = & mv	53:4:744:756	8062455	9	True				
ANR	8062563	AssignmentExpression	pmv [ 0 ] = & mv		8062455	0		=			
ANR	8062564	ArrayIndexing	pmv [ 0 ]		8062455	0					
ANR	8062565	Identifier	pmv		8062455	0					
ANR	8062566	PrimaryExpression	0		8062455	1					
ANR	8062567	UnaryOperationExpression	& mv		8062455	1					
ANR	8062568	UnaryOperator	&		8062455	0					
ANR	8062569	Identifier	mv		8062455	1					
ANR	8062570	IfStatement	if ( y == 0 )		8062455	10					
ANR	8062571	Condition	y == 0	55:8:767:772	8062455	0	True				
ANR	8062572	EqualityExpression	y == 0		8062455	0		==			
ANR	8062573	Identifier	y		8062455	0					
ANR	8062574	PrimaryExpression	0		8062455	1					
ANR	8062575	CompoundStatement		49:16:535:535	8062455	1					
ANR	8062576	ExpressionStatement	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]	57:8:786:819	8062455	0	True				
ANR	8062577	AssignmentExpression	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]		8062455	0		=			
ANR	8062578	ArrayIndexing	pmv [ 1 ]		8062455	0					
ANR	8062579	Identifier	pmv		8062455	0					
ANR	8062580	PrimaryExpression	1		8062455	1					
ANR	8062581	AssignmentExpression	pmv [ 2 ] = pmv [ 0 ]		8062455	1		=			
ANR	8062582	ArrayIndexing	pmv [ 2 ]		8062455	0					
ANR	8062583	Identifier	pmv		8062455	0					
ANR	8062584	PrimaryExpression	2		8062455	1					
ANR	8062585	ArrayIndexing	pmv [ 0 ]		8062455	1					
ANR	8062586	Identifier	pmv		8062455	0					
ANR	8062587	PrimaryExpression	0		8062455	1					
ANR	8062588	ElseStatement	else		8062455	0					
ANR	8062589	CompoundStatement		55:11:593:593	8062455	0					
ANR	8062590	ExpressionStatement	pmv [ 1 ] = & motion [ ( x / 8 ) + 3 ]	63:8:844:873	8062455	0	True				
ANR	8062591	AssignmentExpression	pmv [ 1 ] = & motion [ ( x / 8 ) + 3 ]		8062455	0		=			
ANR	8062592	ArrayIndexing	pmv [ 1 ]		8062455	0					
ANR	8062593	Identifier	pmv		8062455	0					
ANR	8062594	PrimaryExpression	1		8062455	1					
ANR	8062595	UnaryOperationExpression	& motion [ ( x / 8 ) + 3 ]		8062455	1					
ANR	8062596	UnaryOperator	&		8062455	0					
ANR	8062597	ArrayIndexing	motion [ ( x / 8 ) + 3 ]		8062455	1					
ANR	8062598	Identifier	motion		8062455	0					
ANR	8062599	AdditiveExpression	( x / 8 ) + 3		8062455	1		+			
ANR	8062600	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062601	Identifier	x		8062455	0					
ANR	8062602	PrimaryExpression	8		8062455	1					
ANR	8062603	PrimaryExpression	3		8062455	1					
ANR	8062604	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"	67:4:887:946	8062455	11	True				
ANR	8062605	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"		8062455	0		=			
ANR	8062606	Identifier	result		8062455	0					
ANR	8062607	CallExpression	"svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"		8062455	1					
ANR	8062608	Callee	svq1_decode_motion_vector		8062455	0					
ANR	8062609	Identifier	svq1_decode_motion_vector		8062455	0					
ANR	8062610	ArgumentList	bitbuf		8062455	1					
ANR	8062611	Argument	bitbuf		8062455	0					
ANR	8062612	Identifier	bitbuf		8062455	0					
ANR	8062613	Argument	& motion [ 0 ]		8062455	1					
ANR	8062614	UnaryOperationExpression	& motion [ 0 ]		8062455	0					
ANR	8062615	UnaryOperator	&		8062455	0					
ANR	8062616	ArrayIndexing	motion [ 0 ]		8062455	1					
ANR	8062617	Identifier	motion		8062455	0					
ANR	8062618	PrimaryExpression	0		8062455	1					
ANR	8062619	Argument	pmv		8062455	2					
ANR	8062620	Identifier	pmv		8062455	0					
ANR	8062621	IfStatement	if ( result != 0 )		8062455	12					
ANR	8062622	Condition	result != 0	71:8:959:969	8062455	0	True				
ANR	8062623	EqualityExpression	result != 0		8062455	0		!=			
ANR	8062624	Identifier	result		8062455	0					
ANR	8062625	PrimaryExpression	0		8062455	1					
ANR	8062626	ReturnStatement	return result ;	73:8:981:994	8062455	1	True				
ANR	8062627	Identifier	result		8062455	0					
ANR	8062628	ExpressionStatement	pmv [ 1 ] = & motion [ 0 ]	79:4:1051:1070	8062455	13	True				
ANR	8062629	AssignmentExpression	pmv [ 1 ] = & motion [ 0 ]		8062455	0		=			
ANR	8062630	ArrayIndexing	pmv [ 1 ]		8062455	0					
ANR	8062631	Identifier	pmv		8062455	0					
ANR	8062632	PrimaryExpression	1		8062455	1					
ANR	8062633	UnaryOperationExpression	& motion [ 0 ]		8062455	1					
ANR	8062634	UnaryOperator	&		8062455	0					
ANR	8062635	ArrayIndexing	motion [ 0 ]		8062455	1					
ANR	8062636	Identifier	motion		8062455	0					
ANR	8062637	PrimaryExpression	0		8062455	1					
ANR	8062638	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 1 ]	81:4:1077:1106	8062455	14	True				
ANR	8062639	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 1 ]		8062455	0		=			
ANR	8062640	ArrayIndexing	pmv [ 2 ]		8062455	0					
ANR	8062641	Identifier	pmv		8062455	0					
ANR	8062642	PrimaryExpression	2		8062455	1					
ANR	8062643	UnaryOperationExpression	& motion [ ( x / 8 ) + 1 ]		8062455	1					
ANR	8062644	UnaryOperator	&		8062455	0					
ANR	8062645	ArrayIndexing	motion [ ( x / 8 ) + 1 ]		8062455	1					
ANR	8062646	Identifier	motion		8062455	0					
ANR	8062647	AdditiveExpression	( x / 8 ) + 1		8062455	1		+			
ANR	8062648	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062649	Identifier	x		8062455	0					
ANR	8062650	PrimaryExpression	8		8062455	1					
ANR	8062651	PrimaryExpression	1		8062455	1					
ANR	8062652	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"	85:4:1115:1184	8062455	15	True				
ANR	8062653	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"		8062455	0		=			
ANR	8062654	Identifier	result		8062455	0					
ANR	8062655	CallExpression	"svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"		8062455	1					
ANR	8062656	Callee	svq1_decode_motion_vector		8062455	0					
ANR	8062657	Identifier	svq1_decode_motion_vector		8062455	0					
ANR	8062658	ArgumentList	bitbuf		8062455	1					
ANR	8062659	Argument	bitbuf		8062455	0					
ANR	8062660	Identifier	bitbuf		8062455	0					
ANR	8062661	Argument	& motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062662	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062455	0					
ANR	8062663	UnaryOperator	&		8062455	0					
ANR	8062664	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062665	Identifier	motion		8062455	0					
ANR	8062666	AdditiveExpression	( x / 8 ) + 2		8062455	1		+			
ANR	8062667	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062668	Identifier	x		8062455	0					
ANR	8062669	PrimaryExpression	8		8062455	1					
ANR	8062670	PrimaryExpression	2		8062455	1					
ANR	8062671	Argument	pmv		8062455	2					
ANR	8062672	Identifier	pmv		8062455	0					
ANR	8062673	IfStatement	if ( result != 0 )		8062455	16					
ANR	8062674	Condition	result != 0	89:8:1197:1207	8062455	0	True				
ANR	8062675	EqualityExpression	result != 0		8062455	0		!=			
ANR	8062676	Identifier	result		8062455	0					
ANR	8062677	PrimaryExpression	0		8062455	1					
ANR	8062678	ReturnStatement	return result ;	91:8:1219:1232	8062455	1	True				
ANR	8062679	Identifier	result		8062455	0					
ANR	8062680	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 2 ]	97:4:1289:1318	8062455	17	True				
ANR	8062681	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 2 ]		8062455	0		=			
ANR	8062682	ArrayIndexing	pmv [ 2 ]		8062455	0					
ANR	8062683	Identifier	pmv		8062455	0					
ANR	8062684	PrimaryExpression	2		8062455	1					
ANR	8062685	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062686	UnaryOperator	&		8062455	0					
ANR	8062687	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062455	1					
ANR	8062688	Identifier	motion		8062455	0					
ANR	8062689	AdditiveExpression	( x / 8 ) + 2		8062455	1		+			
ANR	8062690	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062691	Identifier	x		8062455	0					
ANR	8062692	PrimaryExpression	8		8062455	1					
ANR	8062693	PrimaryExpression	2		8062455	1					
ANR	8062694	ExpressionStatement	pmv [ 3 ] = & motion [ ( x / 8 ) + 3 ]	99:4:1325:1354	8062455	18	True				
ANR	8062695	AssignmentExpression	pmv [ 3 ] = & motion [ ( x / 8 ) + 3 ]		8062455	0		=			
ANR	8062696	ArrayIndexing	pmv [ 3 ]		8062455	0					
ANR	8062697	Identifier	pmv		8062455	0					
ANR	8062698	PrimaryExpression	3		8062455	1					
ANR	8062699	UnaryOperationExpression	& motion [ ( x / 8 ) + 3 ]		8062455	1					
ANR	8062700	UnaryOperator	&		8062455	0					
ANR	8062701	ArrayIndexing	motion [ ( x / 8 ) + 3 ]		8062455	1					
ANR	8062702	Identifier	motion		8062455	0					
ANR	8062703	AdditiveExpression	( x / 8 ) + 3		8062455	1		+			
ANR	8062704	MultiplicativeExpression	x / 8		8062455	0		/			
ANR	8062705	Identifier	x		8062455	0					
ANR	8062706	PrimaryExpression	8		8062455	1					
ANR	8062707	PrimaryExpression	3		8062455	1					
ANR	8062708	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"	103:4:1363:1418	8062455	19	True				
ANR	8062709	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"		8062455	0		=			
ANR	8062710	Identifier	result		8062455	0					
ANR	8062711	CallExpression	"svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"		8062455	1					
ANR	8062712	Callee	svq1_decode_motion_vector		8062455	0					
ANR	8062713	Identifier	svq1_decode_motion_vector		8062455	0					
ANR	8062714	ArgumentList	bitbuf		8062455	1					
ANR	8062715	Argument	bitbuf		8062455	0					
ANR	8062716	Identifier	bitbuf		8062455	0					
ANR	8062717	Argument	pmv [ 3 ]		8062455	1					
ANR	8062718	ArrayIndexing	pmv [ 3 ]		8062455	0					
ANR	8062719	Identifier	pmv		8062455	0					
ANR	8062720	PrimaryExpression	3		8062455	1					
ANR	8062721	Argument	pmv		8062455	2					
ANR	8062722	Identifier	pmv		8062455	0					
ANR	8062723	IfStatement	if ( result != 0 )		8062455	20					
ANR	8062724	Condition	result != 0	107:8:1431:1441	8062455	0	True				
ANR	8062725	EqualityExpression	result != 0		8062455	0		!=			
ANR	8062726	Identifier	result		8062455	0					
ANR	8062727	PrimaryExpression	0		8062455	1					
ANR	8062728	ReturnStatement	return result ;	109:8:1453:1466	8062455	1	True				
ANR	8062729	Identifier	result		8062455	0					
ANR	8062730	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8062455	21					
ANR	8062731	ForInit	i = 0 ;	115:9:1508:1513	8062455	0	True				
ANR	8062732	AssignmentExpression	i = 0		8062455	0		=			
ANR	8062733	Identifier	i		8062455	0					
ANR	8062734	PrimaryExpression	0		8062455	1					
ANR	8062735	Condition	i < 4	115:16:1515:1519	8062455	1	True				
ANR	8062736	RelationalExpression	i < 4		8062455	0		<			
ANR	8062737	Identifier	i		8062455	0					
ANR	8062738	PrimaryExpression	4		8062455	1					
ANR	8062739	PostIncDecOperationExpression	i ++	115:23:1522:1524	8062455	2	True				
ANR	8062740	Identifier	i		8062455	0					
ANR	8062741	IncDec	++		8062455	1					
ANR	8062742	CompoundStatement		113:8:1344:1379	8062455	3					
ANR	8062743	IdentifierDeclStatement	int mvx = pmv [ i ] -> x + ( i & 1 ) * 16 ;	117:8:1538:1573	8062455	0	True				
ANR	8062744	IdentifierDecl	mvx = pmv [ i ] -> x + ( i & 1 ) * 16		8062455	0					
ANR	8062745	IdentifierDeclType	int		8062455	0					
ANR	8062746	Identifier	mvx		8062455	1					
ANR	8062747	AssignmentExpression	mvx = pmv [ i ] -> x + ( i & 1 ) * 16		8062455	2		=			
ANR	8062748	Identifier	mvx		8062455	0					
ANR	8062749	AdditiveExpression	pmv [ i ] -> x + ( i & 1 ) * 16		8062455	1		+			
ANR	8062750	PtrMemberAccess	pmv [ i ] -> x		8062455	0					
ANR	8062751	ArrayIndexing	pmv [ i ]		8062455	0					
ANR	8062752	Identifier	pmv		8062455	0					
ANR	8062753	Identifier	i		8062455	1					
ANR	8062754	Identifier	x		8062455	1					
ANR	8062755	MultiplicativeExpression	( i & 1 ) * 16		8062455	1		*			
ANR	8062756	BitAndExpression	i & 1		8062455	0		&			
ANR	8062757	Identifier	i		8062455	0					
ANR	8062758	PrimaryExpression	1		8062455	1					
ANR	8062759	PrimaryExpression	16		8062455	1					
ANR	8062760	IdentifierDeclStatement	int mvy = pmv [ i ] -> y + ( i >> 1 ) * 16 ;	119:8:1584:1619	8062455	1	True				
ANR	8062761	IdentifierDecl	mvy = pmv [ i ] -> y + ( i >> 1 ) * 16		8062455	0					
ANR	8062762	IdentifierDeclType	int		8062455	0					
ANR	8062763	Identifier	mvy		8062455	1					
ANR	8062764	AssignmentExpression	mvy = pmv [ i ] -> y + ( i >> 1 ) * 16		8062455	2		=			
ANR	8062765	Identifier	mvy		8062455	0					
ANR	8062766	AdditiveExpression	pmv [ i ] -> y + ( i >> 1 ) * 16		8062455	1		+			
ANR	8062767	PtrMemberAccess	pmv [ i ] -> y		8062455	0					
ANR	8062768	ArrayIndexing	pmv [ i ]		8062455	0					
ANR	8062769	Identifier	pmv		8062455	0					
ANR	8062770	Identifier	i		8062455	1					
ANR	8062771	Identifier	y		8062455	1					
ANR	8062772	MultiplicativeExpression	( i >> 1 ) * 16		8062455	1		*			
ANR	8062773	ShiftExpression	i >> 1		8062455	0		>>			
ANR	8062774	Identifier	i		8062455	0					
ANR	8062775	PrimaryExpression	1		8062455	1					
ANR	8062776	PrimaryExpression	16		8062455	1					
ANR	8062777	IfStatement	if ( y + ( mvy >> 1 ) < 0 )		8062455	2					
ANR	8062778	Condition	y + ( mvy >> 1 ) < 0	125:12:1676:1693	8062455	0	True				
ANR	8062779	RelationalExpression	y + ( mvy >> 1 ) < 0		8062455	0		<			
ANR	8062780	AdditiveExpression	y + ( mvy >> 1 )		8062455	0		+			
ANR	8062781	Identifier	y		8062455	0					
ANR	8062782	ShiftExpression	mvy >> 1		8062455	1		>>			
ANR	8062783	Identifier	mvy		8062455	0					
ANR	8062784	PrimaryExpression	1		8062455	1					
ANR	8062785	PrimaryExpression	0		8062455	1					
ANR	8062786	ExpressionStatement	mvy = 0	127:12:1709:1716	8062455	1	True				
ANR	8062787	AssignmentExpression	mvy = 0		8062455	0		=			
ANR	8062788	Identifier	mvy		8062455	0					
ANR	8062789	PrimaryExpression	0		8062455	1					
ANR	8062790	IfStatement	if ( x + ( mvx >> 1 ) < 0 )		8062455	3					
ANR	8062791	Condition	x + ( mvx >> 1 ) < 0	129:12:1731:1748	8062455	0	True				
ANR	8062792	RelationalExpression	x + ( mvx >> 1 ) < 0		8062455	0		<			
ANR	8062793	AdditiveExpression	x + ( mvx >> 1 )		8062455	0		+			
ANR	8062794	Identifier	x		8062455	0					
ANR	8062795	ShiftExpression	mvx >> 1		8062455	1		>>			
ANR	8062796	Identifier	mvx		8062455	0					
ANR	8062797	PrimaryExpression	1		8062455	1					
ANR	8062798	PrimaryExpression	0		8062455	1					
ANR	8062799	ExpressionStatement	mvx = 0	131:12:1764:1771	8062455	1	True				
ANR	8062800	AssignmentExpression	mvx = 0		8062455	0		=			
ANR	8062801	Identifier	mvx		8062455	0					
ANR	8062802	PrimaryExpression	0		8062455	1					
ANR	8062803	ExpressionStatement	src = & previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]	135:8:1784:1844	8062455	4	True				
ANR	8062804	AssignmentExpression	src = & previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062455	0		=			
ANR	8062805	Identifier	src		8062455	0					
ANR	8062806	UnaryOperationExpression	& previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062455	1					
ANR	8062807	UnaryOperator	&		8062455	0					
ANR	8062808	ArrayIndexing	previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062455	1					
ANR	8062809	Identifier	previous		8062455	0					
ANR	8062810	AdditiveExpression	( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch		8062455	1		+			
ANR	8062811	AdditiveExpression	x + ( mvx >> 1 )		8062455	0		+			
ANR	8062812	Identifier	x		8062455	0					
ANR	8062813	ShiftExpression	mvx >> 1		8062455	1		>>			
ANR	8062814	Identifier	mvx		8062455	0					
ANR	8062815	PrimaryExpression	1		8062455	1					
ANR	8062816	MultiplicativeExpression	( y + ( mvy >> 1 ) ) * pitch		8062455	1		*			
ANR	8062817	AdditiveExpression	y + ( mvy >> 1 )		8062455	0		+			
ANR	8062818	Identifier	y		8062455	0					
ANR	8062819	ShiftExpression	mvy >> 1		8062455	1		>>			
ANR	8062820	Identifier	mvy		8062455	0					
ANR	8062821	PrimaryExpression	1		8062455	1					
ANR	8062822	Identifier	pitch		8062455	1					
ANR	8062823	ExpressionStatement	dst = current	137:8:1855:1868	8062455	5	True				
ANR	8062824	AssignmentExpression	dst = current		8062455	0		=			
ANR	8062825	Identifier	dst		8062455	0					
ANR	8062826	Identifier	current		8062455	1					
ANR	8062827	ExpressionStatement	"s -> dsp . put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ] ( dst , src , pitch , 8 )"	141:8:1881:1955	8062455	6	True				
ANR	8062828	CallExpression	"s -> dsp . put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ] ( dst , src , pitch , 8 )"		8062455	0					
ANR	8062829	Callee	s -> dsp . put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ]		8062455	0					
ANR	8062830	ArrayIndexing	s -> dsp . put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ]		8062455	0					
ANR	8062831	ArrayIndexing	s -> dsp . put_pixels_tab [ 1 ]		8062455	0					
ANR	8062832	MemberAccess	s -> dsp . put_pixels_tab		8062455	0					
ANR	8062833	PtrMemberAccess	s -> dsp		8062455	0					
ANR	8062834	Identifier	s		8062455	0					
ANR	8062835	Identifier	dsp		8062455	1					
ANR	8062836	Identifier	put_pixels_tab		8062455	1					
ANR	8062837	PrimaryExpression	1		8062455	1					
ANR	8062838	InclusiveOrExpression	( ( mvy & 1 ) << 1 ) | ( mvx & 1 )		8062455	1		|			
ANR	8062839	ShiftExpression	( mvy & 1 ) << 1		8062455	0		<<			
ANR	8062840	BitAndExpression	mvy & 1		8062455	0		&			
ANR	8062841	Identifier	mvy		8062455	0					
ANR	8062842	PrimaryExpression	1		8062455	1					
ANR	8062843	PrimaryExpression	1		8062455	1					
ANR	8062844	BitAndExpression	mvx & 1		8062455	1		&			
ANR	8062845	Identifier	mvx		8062455	0					
ANR	8062846	PrimaryExpression	1		8062455	1					
ANR	8062847	ArgumentList	dst		8062455	1					
ANR	8062848	Argument	dst		8062455	0					
ANR	8062849	Identifier	dst		8062455	0					
ANR	8062850	Argument	src		8062455	1					
ANR	8062851	Identifier	src		8062455	0					
ANR	8062852	Argument	pitch		8062455	2					
ANR	8062853	Identifier	pitch		8062455	0					
ANR	8062854	Argument	8		8062455	3					
ANR	8062855	PrimaryExpression	8		8062455	0					
ANR	8062856	IfStatement	if ( i & 1 )		8062455	7					
ANR	8062857	Condition	i & 1	147:12:2005:2009	8062455	0	True				
ANR	8062858	BitAndExpression	i & 1		8062455	0		&			
ANR	8062859	Identifier	i		8062455	0					
ANR	8062860	PrimaryExpression	1		8062455	1					
ANR	8062861	ExpressionStatement	current += 8 * ( pitch - 1 )	149:12:2025:2051	8062455	1	True				
ANR	8062862	AssignmentExpression	current += 8 * ( pitch - 1 )		8062455	0		+=			
ANR	8062863	Identifier	current		8062455	0					
ANR	8062864	MultiplicativeExpression	8 * ( pitch - 1 )		8062455	1		*			
ANR	8062865	PrimaryExpression	8		8062455	0					
ANR	8062866	AdditiveExpression	pitch - 1		8062455	1		-			
ANR	8062867	Identifier	pitch		8062455	0					
ANR	8062868	PrimaryExpression	1		8062455	1					
ANR	8062869	ElseStatement	else		8062455	0					
ANR	8062870	ExpressionStatement	current += 8	153:12:2080:2092	8062455	0	True				
ANR	8062871	AssignmentExpression	current += 8		8062455	0		+=			
ANR	8062872	Identifier	current		8062455	0					
ANR	8062873	PrimaryExpression	8		8062455	1					
ANR	8062874	ReturnStatement	return 0 ;	159:4:2108:2116	8062455	22	True				
ANR	8062875	PrimaryExpression	0		8062455	0					
ANR	8062876	ReturnType	static int		8062455	1					
ANR	8062877	Identifier	svq1_motion_inter_4v_block		8062455	2					
ANR	8062878	ParameterList	"MpegEncContext * s , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y"		8062455	3					
ANR	8062879	Parameter	MpegEncContext * s	1:38:38:54	8062455	0	True				
ANR	8062880	ParameterType	MpegEncContext *		8062455	0					
ANR	8062881	Identifier	s		8062455	1					
ANR	8062882	Parameter	GetBitContext * bitbuf	1:57:57:77	8062455	1	True				
ANR	8062883	ParameterType	GetBitContext *		8062455	0					
ANR	8062884	Identifier	bitbuf		8062455	1					
ANR	8062885	Parameter	uint8_t * current	3:38:119:134	8062455	2	True				
ANR	8062886	ParameterType	uint8_t *		8062455	0					
ANR	8062887	Identifier	current		8062455	1					
ANR	8062888	Parameter	uint8_t * previous	3:56:137:153	8062455	3	True				
ANR	8062889	ParameterType	uint8_t *		8062455	0					
ANR	8062890	Identifier	previous		8062455	1					
ANR	8062891	Parameter	int pitch	5:38:195:203	8062455	4	True				
ANR	8062892	ParameterType	int		8062455	0					
ANR	8062893	Identifier	pitch		8062455	1					
ANR	8062894	Parameter	svq1_pmv * motion	5:49:206:221	8062455	5	True				
ANR	8062895	ParameterType	svq1_pmv *		8062455	0					
ANR	8062896	Identifier	motion		8062455	1					
ANR	8062897	Parameter	int x	5:67:224:228	8062455	6	True				
ANR	8062898	ParameterType	int		8062455	0					
ANR	8062899	Identifier	x		8062455	1					
ANR	8062900	Parameter	int y	5:74:231:235	8062455	7	True				
ANR	8062901	ParameterType	int		8062455	0					
ANR	8062902	Identifier	y		8062455	1					
ANR	8062903	CFGEntryNode	ENTRY		8062455		True				
ANR	8062904	CFGExitNode	EXIT		8062455		True				
ANR	8062905	Symbol	* pmv		8062455						
ANR	8062906	Symbol	dst		8062455						
ANR	8062907	Symbol	result		8062455						
ANR	8062908	Symbol	current		8062455						
ANR	8062909	Symbol	pmv		8062455						
ANR	8062910	Symbol	* * s		8062455						
ANR	8062911	Symbol	svq1_decode_motion_vector		8062455						
ANR	8062912	Symbol	* s -> dsp		8062455						
ANR	8062913	Symbol	pitch		8062455						
ANR	8062914	Symbol	* * i		8062455						
ANR	8062915	Symbol	* s -> dsp . put_pixels_tab		8062455						
ANR	8062916	Symbol	previous		8062455						
ANR	8062917	Symbol	motion		8062455						
ANR	8062918	Symbol	src		8062455						
ANR	8062919	Symbol	mv		8062455						
ANR	8062920	Symbol	i		8062455						
ANR	8062921	Symbol	* * pmv		8062455						
ANR	8062922	Symbol	s -> dsp		8062455						
ANR	8062923	Symbol	mvx		8062455						
ANR	8062924	Symbol	pmv [ i ] -> x		8062455						
ANR	8062925	Symbol	mvy		8062455						
ANR	8062926	Symbol	pmv [ i ] -> y		8062455						
ANR	8062927	Symbol	& mv		8062455						
ANR	8062928	Symbol	s		8062455						
ANR	8062929	Symbol	* i		8062455						
ANR	8062930	Symbol	x		8062455						
ANR	8062931	Symbol	y		8062455						
ANR	8062932	Symbol	* s		8062455						
ANR	8062933	Symbol	s -> dsp . put_pixels_tab		8062455						
ANR	8062934	Symbol	bitbuf		8062455						
