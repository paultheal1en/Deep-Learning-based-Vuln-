command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2070933	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_subband_internal_1.c								
ANR	2070934	Function	decode_subband_internal	1:0:0:1078							
ANR	2070935	FunctionDef	"decode_subband_internal (DiracContext * s , SubBand * b , int is_arith)"		2070934	0					
ANR	2070936	CompoundStatement		3:0:97:1078	2070934	0					
ANR	2070937	IdentifierDeclStatement	"int cb_x , cb_y , left , right , top , bottom ;"	5:4:104:144	2070934	0	True				
ANR	2070938	IdentifierDecl	cb_x		2070934	0					
ANR	2070939	IdentifierDeclType	int		2070934	0					
ANR	2070940	Identifier	cb_x		2070934	1					
ANR	2070941	IdentifierDecl	cb_y		2070934	1					
ANR	2070942	IdentifierDeclType	int		2070934	0					
ANR	2070943	Identifier	cb_y		2070934	1					
ANR	2070944	IdentifierDecl	left		2070934	2					
ANR	2070945	IdentifierDeclType	int		2070934	0					
ANR	2070946	Identifier	left		2070934	1					
ANR	2070947	IdentifierDecl	right		2070934	3					
ANR	2070948	IdentifierDeclType	int		2070934	0					
ANR	2070949	Identifier	right		2070934	1					
ANR	2070950	IdentifierDecl	top		2070934	4					
ANR	2070951	IdentifierDeclType	int		2070934	0					
ANR	2070952	Identifier	top		2070934	1					
ANR	2070953	IdentifierDecl	bottom		2070934	5					
ANR	2070954	IdentifierDeclType	int		2070934	0					
ANR	2070955	Identifier	bottom		2070934	1					
ANR	2070956	IdentifierDeclStatement	DiracArith c ;	7:4:151:163	2070934	1	True				
ANR	2070957	IdentifierDecl	c		2070934	0					
ANR	2070958	IdentifierDeclType	DiracArith		2070934	0					
ANR	2070959	Identifier	c		2070934	1					
ANR	2070960	IdentifierDeclStatement	GetBitContext gb ;	9:4:170:186	2070934	2	True				
ANR	2070961	IdentifierDecl	gb		2070934	0					
ANR	2070962	IdentifierDeclType	GetBitContext		2070934	0					
ANR	2070963	Identifier	gb		2070934	1					
ANR	2070964	IdentifierDeclStatement	int cb_width = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . width ;	11:4:193:270	2070934	3	True				
ANR	2070965	IdentifierDecl	cb_width = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . width		2070934	0					
ANR	2070966	IdentifierDeclType	int		2070934	0					
ANR	2070967	Identifier	cb_width		2070934	1					
ANR	2070968	AssignmentExpression	cb_width = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . width		2070934	2		=			
ANR	2070969	Identifier	cb_width		2070934	0					
ANR	2070970	MemberAccess	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . width		2070934	1					
ANR	2070971	ArrayIndexing	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ]		2070934	0					
ANR	2070972	PtrMemberAccess	s -> codeblock		2070934	0					
ANR	2070973	Identifier	s		2070934	0					
ANR	2070974	Identifier	codeblock		2070934	1					
ANR	2070975	AdditiveExpression	b -> level + ( b -> orientation != subband_ll )		2070934	1		+			
ANR	2070976	PtrMemberAccess	b -> level		2070934	0					
ANR	2070977	Identifier	b		2070934	0					
ANR	2070978	Identifier	level		2070934	1					
ANR	2070979	EqualityExpression	b -> orientation != subband_ll		2070934	1		!=			
ANR	2070980	PtrMemberAccess	b -> orientation		2070934	0					
ANR	2070981	Identifier	b		2070934	0					
ANR	2070982	Identifier	orientation		2070934	1					
ANR	2070983	Identifier	subband_ll		2070934	1					
ANR	2070984	Identifier	width		2070934	1					
ANR	2070985	IdentifierDeclStatement	int cb_height = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . height ;	13:4:277:355	2070934	4	True				
ANR	2070986	IdentifierDecl	cb_height = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . height		2070934	0					
ANR	2070987	IdentifierDeclType	int		2070934	0					
ANR	2070988	Identifier	cb_height		2070934	1					
ANR	2070989	AssignmentExpression	cb_height = s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . height		2070934	2		=			
ANR	2070990	Identifier	cb_height		2070934	0					
ANR	2070991	MemberAccess	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . height		2070934	1					
ANR	2070992	ArrayIndexing	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ]		2070934	0					
ANR	2070993	PtrMemberAccess	s -> codeblock		2070934	0					
ANR	2070994	Identifier	s		2070934	0					
ANR	2070995	Identifier	codeblock		2070934	1					
ANR	2070996	AdditiveExpression	b -> level + ( b -> orientation != subband_ll )		2070934	1		+			
ANR	2070997	PtrMemberAccess	b -> level		2070934	0					
ANR	2070998	Identifier	b		2070934	0					
ANR	2070999	Identifier	level		2070934	1					
ANR	2071000	EqualityExpression	b -> orientation != subband_ll		2070934	1		!=			
ANR	2071001	PtrMemberAccess	b -> orientation		2070934	0					
ANR	2071002	Identifier	b		2070934	0					
ANR	2071003	Identifier	orientation		2070934	1					
ANR	2071004	Identifier	subband_ll		2070934	1					
ANR	2071005	Identifier	height		2070934	1					
ANR	2071006	IdentifierDeclStatement	int blockcnt_one = ( cb_width + cb_height ) == 2 ;	15:4:362:408	2070934	5	True				
ANR	2071007	IdentifierDecl	blockcnt_one = ( cb_width + cb_height ) == 2		2070934	0					
ANR	2071008	IdentifierDeclType	int		2070934	0					
ANR	2071009	Identifier	blockcnt_one		2070934	1					
ANR	2071010	AssignmentExpression	blockcnt_one = ( cb_width + cb_height ) == 2		2070934	2		=			
ANR	2071011	Identifier	blockcnt_one		2070934	0					
ANR	2071012	EqualityExpression	( cb_width + cb_height ) == 2		2070934	1		==			
ANR	2071013	AdditiveExpression	cb_width + cb_height		2070934	0		+			
ANR	2071014	Identifier	cb_width		2070934	0					
ANR	2071015	Identifier	cb_height		2070934	1					
ANR	2071016	PrimaryExpression	2		2070934	1					
ANR	2071017	IfStatement	if ( ! b -> length )		2070934	6					
ANR	2071018	Condition	! b -> length	19:8:421:430	2070934	0	True				
ANR	2071019	UnaryOperationExpression	! b -> length		2070934	0					
ANR	2071020	UnaryOperator	!		2070934	0					
ANR	2071021	PtrMemberAccess	b -> length		2070934	1					
ANR	2071022	Identifier	b		2070934	0					
ANR	2071023	Identifier	length		2070934	1					
ANR	2071024	ReturnStatement	return ;	21:8:442:448	2070934	1	True				
ANR	2071025	ExpressionStatement	"init_get_bits8 ( & gb , b -> coeff_data , b -> length )"	25:4:457:502	2070934	7	True				
ANR	2071026	CallExpression	"init_get_bits8 ( & gb , b -> coeff_data , b -> length )"		2070934	0					
ANR	2071027	Callee	init_get_bits8		2070934	0					
ANR	2071028	Identifier	init_get_bits8		2070934	0					
ANR	2071029	ArgumentList	& gb		2070934	1					
ANR	2071030	Argument	& gb		2070934	0					
ANR	2071031	UnaryOperationExpression	& gb		2070934	0					
ANR	2071032	UnaryOperator	&		2070934	0					
ANR	2071033	Identifier	gb		2070934	1					
ANR	2071034	Argument	b -> coeff_data		2070934	1					
ANR	2071035	PtrMemberAccess	b -> coeff_data		2070934	0					
ANR	2071036	Identifier	b		2070934	0					
ANR	2071037	Identifier	coeff_data		2070934	1					
ANR	2071038	Argument	b -> length		2070934	2					
ANR	2071039	PtrMemberAccess	b -> length		2070934	0					
ANR	2071040	Identifier	b		2070934	0					
ANR	2071041	Identifier	length		2070934	1					
ANR	2071042	IfStatement	if ( is_arith )		2070934	8					
ANR	2071043	Condition	is_arith	29:8:515:522	2070934	0	True				
ANR	2071044	Identifier	is_arith		2070934	0					
ANR	2071045	ExpressionStatement	"ff_dirac_init_arith_decoder ( & c , & gb , b -> length )"	31:8:534:581	2070934	1	True				
ANR	2071046	CallExpression	"ff_dirac_init_arith_decoder ( & c , & gb , b -> length )"		2070934	0					
ANR	2071047	Callee	ff_dirac_init_arith_decoder		2070934	0					
ANR	2071048	Identifier	ff_dirac_init_arith_decoder		2070934	0					
ANR	2071049	ArgumentList	& c		2070934	1					
ANR	2071050	Argument	& c		2070934	0					
ANR	2071051	UnaryOperationExpression	& c		2070934	0					
ANR	2071052	UnaryOperator	&		2070934	0					
ANR	2071053	Identifier	c		2070934	1					
ANR	2071054	Argument	& gb		2070934	1					
ANR	2071055	UnaryOperationExpression	& gb		2070934	0					
ANR	2071056	UnaryOperator	&		2070934	0					
ANR	2071057	Identifier	gb		2070934	1					
ANR	2071058	Argument	b -> length		2070934	2					
ANR	2071059	PtrMemberAccess	b -> length		2070934	0					
ANR	2071060	Identifier	b		2070934	0					
ANR	2071061	Identifier	length		2070934	1					
ANR	2071062	ExpressionStatement	top = 0	35:4:590:597	2070934	9	True				
ANR	2071063	AssignmentExpression	top = 0		2070934	0		=			
ANR	2071064	Identifier	top		2070934	0					
ANR	2071065	PrimaryExpression	0		2070934	1					
ANR	2071066	ForStatement	for ( cb_y = 0 ; cb_y < cb_height ; cb_y ++ )		2070934	10					
ANR	2071067	ForInit	cb_y = 0 ;	37:9:609:617	2070934	0	True				
ANR	2071068	AssignmentExpression	cb_y = 0		2070934	0		=			
ANR	2071069	Identifier	cb_y		2070934	0					
ANR	2071070	PrimaryExpression	0		2070934	1					
ANR	2071071	Condition	cb_y < cb_height	37:19:619:634	2070934	1	True				
ANR	2071072	RelationalExpression	cb_y < cb_height		2070934	0		<			
ANR	2071073	Identifier	cb_y		2070934	0					
ANR	2071074	Identifier	cb_height		2070934	1					
ANR	2071075	PostIncDecOperationExpression	cb_y ++	37:37:637:642	2070934	2	True				
ANR	2071076	Identifier	cb_y		2070934	0					
ANR	2071077	IncDec	++		2070934	1					
ANR	2071078	CompoundStatement		35:45:547:547	2070934	3					
ANR	2071079	ExpressionStatement	bottom = ( b -> height * ( cb_y + 1 ) ) / cb_height	39:8:656:699	2070934	0	True				
ANR	2071080	AssignmentExpression	bottom = ( b -> height * ( cb_y + 1 ) ) / cb_height		2070934	0		=			
ANR	2071081	Identifier	bottom		2070934	0					
ANR	2071082	MultiplicativeExpression	( b -> height * ( cb_y + 1 ) ) / cb_height		2070934	1		/			
ANR	2071083	MultiplicativeExpression	b -> height * ( cb_y + 1 )		2070934	0		*			
ANR	2071084	PtrMemberAccess	b -> height		2070934	0					
ANR	2071085	Identifier	b		2070934	0					
ANR	2071086	Identifier	height		2070934	1					
ANR	2071087	AdditiveExpression	cb_y + 1		2070934	1		+			
ANR	2071088	Identifier	cb_y		2070934	0					
ANR	2071089	PrimaryExpression	1		2070934	1					
ANR	2071090	Identifier	cb_height		2070934	1					
ANR	2071091	ExpressionStatement	left = 0	41:8:710:718	2070934	1	True				
ANR	2071092	AssignmentExpression	left = 0		2070934	0		=			
ANR	2071093	Identifier	left		2070934	0					
ANR	2071094	PrimaryExpression	0		2070934	1					
ANR	2071095	ForStatement	for ( cb_x = 0 ; cb_x < cb_width ; cb_x ++ )		2070934	2					
ANR	2071096	ForInit	cb_x = 0 ;	43:13:734:742	2070934	0	True				
ANR	2071097	AssignmentExpression	cb_x = 0		2070934	0		=			
ANR	2071098	Identifier	cb_x		2070934	0					
ANR	2071099	PrimaryExpression	0		2070934	1					
ANR	2071100	Condition	cb_x < cb_width	43:23:744:758	2070934	1	True				
ANR	2071101	RelationalExpression	cb_x < cb_width		2070934	0		<			
ANR	2071102	Identifier	cb_x		2070934	0					
ANR	2071103	Identifier	cb_width		2070934	1					
ANR	2071104	PostIncDecOperationExpression	cb_x ++	43:40:761:766	2070934	2	True				
ANR	2071105	Identifier	cb_x		2070934	0					
ANR	2071106	IncDec	++		2070934	1					
ANR	2071107	CompoundStatement		41:48:671:671	2070934	3					
ANR	2071108	ExpressionStatement	right = ( b -> width * ( cb_x + 1 ) ) / cb_width	45:12:784:824	2070934	0	True				
ANR	2071109	AssignmentExpression	right = ( b -> width * ( cb_x + 1 ) ) / cb_width		2070934	0		=			
ANR	2071110	Identifier	right		2070934	0					
ANR	2071111	MultiplicativeExpression	( b -> width * ( cb_x + 1 ) ) / cb_width		2070934	1		/			
ANR	2071112	MultiplicativeExpression	b -> width * ( cb_x + 1 )		2070934	0		*			
ANR	2071113	PtrMemberAccess	b -> width		2070934	0					
ANR	2071114	Identifier	b		2070934	0					
ANR	2071115	Identifier	width		2070934	1					
ANR	2071116	AdditiveExpression	cb_x + 1		2070934	1		+			
ANR	2071117	Identifier	cb_x		2070934	0					
ANR	2071118	PrimaryExpression	1		2070934	1					
ANR	2071119	Identifier	cb_width		2070934	1					
ANR	2071120	ExpressionStatement	"codeblock ( s , b , & gb , & c , left , right , top , bottom , blockcnt_one , is_arith )"	47:12:839:913	2070934	1	True				
ANR	2071121	CallExpression	"codeblock ( s , b , & gb , & c , left , right , top , bottom , blockcnt_one , is_arith )"		2070934	0					
ANR	2071122	Callee	codeblock		2070934	0					
ANR	2071123	Identifier	codeblock		2070934	0					
ANR	2071124	ArgumentList	s		2070934	1					
ANR	2071125	Argument	s		2070934	0					
ANR	2071126	Identifier	s		2070934	0					
ANR	2071127	Argument	b		2070934	1					
ANR	2071128	Identifier	b		2070934	0					
ANR	2071129	Argument	& gb		2070934	2					
ANR	2071130	UnaryOperationExpression	& gb		2070934	0					
ANR	2071131	UnaryOperator	&		2070934	0					
ANR	2071132	Identifier	gb		2070934	1					
ANR	2071133	Argument	& c		2070934	3					
ANR	2071134	UnaryOperationExpression	& c		2070934	0					
ANR	2071135	UnaryOperator	&		2070934	0					
ANR	2071136	Identifier	c		2070934	1					
ANR	2071137	Argument	left		2070934	4					
ANR	2071138	Identifier	left		2070934	0					
ANR	2071139	Argument	right		2070934	5					
ANR	2071140	Identifier	right		2070934	0					
ANR	2071141	Argument	top		2070934	6					
ANR	2071142	Identifier	top		2070934	0					
ANR	2071143	Argument	bottom		2070934	7					
ANR	2071144	Identifier	bottom		2070934	0					
ANR	2071145	Argument	blockcnt_one		2070934	8					
ANR	2071146	Identifier	blockcnt_one		2070934	0					
ANR	2071147	Argument	is_arith		2070934	9					
ANR	2071148	Identifier	is_arith		2070934	0					
ANR	2071149	ExpressionStatement	left = right	49:12:928:940	2070934	2	True				
ANR	2071150	AssignmentExpression	left = right		2070934	0		=			
ANR	2071151	Identifier	left		2070934	0					
ANR	2071152	Identifier	right		2070934	1					
ANR	2071153	ExpressionStatement	top = bottom	53:8:962:974	2070934	3	True				
ANR	2071154	AssignmentExpression	top = bottom		2070934	0		=			
ANR	2071155	Identifier	top		2070934	0					
ANR	2071156	Identifier	bottom		2070934	1					
ANR	2071157	IfStatement	if ( b -> orientation == subband_ll && s -> num_refs == 0 )		2070934	11					
ANR	2071158	Condition	b -> orientation == subband_ll && s -> num_refs == 0	59:8:994:1041	2070934	0	True				
ANR	2071159	AndExpression	b -> orientation == subband_ll && s -> num_refs == 0		2070934	0		&&			
ANR	2071160	EqualityExpression	b -> orientation == subband_ll		2070934	0		==			
ANR	2071161	PtrMemberAccess	b -> orientation		2070934	0					
ANR	2071162	Identifier	b		2070934	0					
ANR	2071163	Identifier	orientation		2070934	1					
ANR	2071164	Identifier	subband_ll		2070934	1					
ANR	2071165	EqualityExpression	s -> num_refs == 0		2070934	1		==			
ANR	2071166	PtrMemberAccess	s -> num_refs		2070934	0					
ANR	2071167	Identifier	s		2070934	0					
ANR	2071168	Identifier	num_refs		2070934	1					
ANR	2071169	PrimaryExpression	0		2070934	1					
ANR	2071170	ExpressionStatement	intra_dc_prediction ( b )	61:8:1053:1075	2070934	1	True				
ANR	2071171	CallExpression	intra_dc_prediction ( b )		2070934	0					
ANR	2071172	Callee	intra_dc_prediction		2070934	0					
ANR	2071173	Identifier	intra_dc_prediction		2070934	0					
ANR	2071174	ArgumentList	b		2070934	1					
ANR	2071175	Argument	b		2070934	0					
ANR	2071176	Identifier	b		2070934	0					
ANR	2071177	ReturnType	static av_always_inline void		2070934	1					
ANR	2071178	Identifier	decode_subband_internal		2070934	2					
ANR	2071179	ParameterList	"DiracContext * s , SubBand * b , int is_arith"		2070934	3					
ANR	2071180	Parameter	DiracContext * s	1:53:53:67	2070934	0	True				
ANR	2071181	ParameterType	DiracContext *		2070934	0					
ANR	2071182	Identifier	s		2070934	1					
ANR	2071183	Parameter	SubBand * b	1:70:70:79	2070934	1	True				
ANR	2071184	ParameterType	SubBand *		2070934	0					
ANR	2071185	Identifier	b		2070934	1					
ANR	2071186	Parameter	int is_arith	1:82:82:93	2070934	2	True				
ANR	2071187	ParameterType	int		2070934	0					
ANR	2071188	Identifier	is_arith		2070934	1					
ANR	2071189	CFGEntryNode	ENTRY		2070934		True				
ANR	2071190	CFGExitNode	EXIT		2070934		True				
ANR	2071191	Symbol	& gb		2070934						
ANR	2071192	Symbol	is_arith		2070934						
ANR	2071193	Symbol	b -> width		2070934						
ANR	2071194	Symbol	top		2070934						
ANR	2071195	Symbol	cb_height		2070934						
ANR	2071196	Symbol	blockcnt_one		2070934						
ANR	2071197	Symbol	subband_ll		2070934						
ANR	2071198	Symbol	b -> length		2070934						
ANR	2071199	Symbol	* * s		2070934						
ANR	2071200	Symbol	* subband_ll		2070934						
ANR	2071201	Symbol	s -> codeblock		2070934						
ANR	2071202	Symbol	gb		2070934						
ANR	2071203	Symbol	* b -> orientation		2070934						
ANR	2071204	Symbol	b		2070934						
ANR	2071205	Symbol	c		2070934						
ANR	2071206	Symbol	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . height		2070934						
ANR	2071207	Symbol	bottom		2070934						
ANR	2071208	Symbol	* * b		2070934						
ANR	2071209	Symbol	& c		2070934						
ANR	2071210	Symbol	right		2070934						
ANR	2071211	Symbol	s -> codeblock [ b -> level + ( b -> orientation != subband_ll ) ] . width		2070934						
ANR	2071212	Symbol	b -> level		2070934						
ANR	2071213	Symbol	* b		2070934						
ANR	2071214	Symbol	b -> height		2070934						
ANR	2071215	Symbol	s		2070934						
ANR	2071216	Symbol	* b -> level		2070934						
ANR	2071217	Symbol	left		2070934						
ANR	2071218	Symbol	cb_x		2070934						
ANR	2071219	Symbol	cb_y		2070934						
ANR	2071220	Symbol	cb_width		2070934						
ANR	2071221	Symbol	* s -> codeblock		2070934						
ANR	2071222	Symbol	b -> coeff_data		2070934						
ANR	2071223	Symbol	b -> orientation		2070934						
ANR	2071224	Symbol	* s		2070934						
ANR	2071225	Symbol	s -> num_refs		2070934						
