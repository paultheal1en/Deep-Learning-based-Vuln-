command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3790599	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ffv1_encode_init_0.c								
ANR	3790600	Function	ffv1_encode_init	1:0:0:10936							
ANR	3790601	FunctionDef	ffv1_encode_init (AVCodecContext * avctx)		3790600	0					
ANR	3790602	CompoundStatement		3:0:60:10936	3790600	0					
ANR	3790603	IdentifierDeclStatement	FFV1Context * s = avctx -> priv_data ;	5:4:67:100	3790600	0	True				
ANR	3790604	IdentifierDecl	* s = avctx -> priv_data		3790600	0					
ANR	3790605	IdentifierDeclType	FFV1Context *		3790600	0					
ANR	3790606	Identifier	s		3790600	1					
ANR	3790607	AssignmentExpression	* s = avctx -> priv_data		3790600	2		=			
ANR	3790608	Identifier	s		3790600	0					
ANR	3790609	PtrMemberAccess	avctx -> priv_data		3790600	1					
ANR	3790610	Identifier	avctx		3790600	0					
ANR	3790611	Identifier	priv_data		3790600	1					
ANR	3790612	IdentifierDeclStatement	const AVPixFmtDescriptor * desc = av_pix_fmt_desc_get ( avctx -> pix_fmt ) ;	7:4:107:175	3790600	1	True				
ANR	3790613	IdentifierDecl	* desc = av_pix_fmt_desc_get ( avctx -> pix_fmt )		3790600	0					
ANR	3790614	IdentifierDeclType	const AVPixFmtDescriptor *		3790600	0					
ANR	3790615	Identifier	desc		3790600	1					
ANR	3790616	AssignmentExpression	* desc = av_pix_fmt_desc_get ( avctx -> pix_fmt )		3790600	2		=			
ANR	3790617	Identifier	desc		3790600	0					
ANR	3790618	CallExpression	av_pix_fmt_desc_get ( avctx -> pix_fmt )		3790600	1					
ANR	3790619	Callee	av_pix_fmt_desc_get		3790600	0					
ANR	3790620	Identifier	av_pix_fmt_desc_get		3790600	0					
ANR	3790621	ArgumentList	avctx -> pix_fmt		3790600	1					
ANR	3790622	Argument	avctx -> pix_fmt		3790600	0					
ANR	3790623	PtrMemberAccess	avctx -> pix_fmt		3790600	0					
ANR	3790624	Identifier	avctx		3790600	0					
ANR	3790625	Identifier	pix_fmt		3790600	1					
ANR	3790626	IdentifierDeclStatement	"int i , j , k , m , ret ;"	9:4:182:201	3790600	2	True				
ANR	3790627	IdentifierDecl	i		3790600	0					
ANR	3790628	IdentifierDeclType	int		3790600	0					
ANR	3790629	Identifier	i		3790600	1					
ANR	3790630	IdentifierDecl	j		3790600	1					
ANR	3790631	IdentifierDeclType	int		3790600	0					
ANR	3790632	Identifier	j		3790600	1					
ANR	3790633	IdentifierDecl	k		3790600	2					
ANR	3790634	IdentifierDeclType	int		3790600	0					
ANR	3790635	Identifier	k		3790600	1					
ANR	3790636	IdentifierDecl	m		3790600	3					
ANR	3790637	IdentifierDeclType	int		3790600	0					
ANR	3790638	Identifier	m		3790600	1					
ANR	3790639	IdentifierDecl	ret		3790600	4					
ANR	3790640	IdentifierDeclType	int		3790600	0					
ANR	3790641	Identifier	ret		3790600	1					
ANR	3790642	ExpressionStatement	ffv1_common_init ( avctx )	13:4:210:233	3790600	3	True				
ANR	3790643	CallExpression	ffv1_common_init ( avctx )		3790600	0					
ANR	3790644	Callee	ffv1_common_init		3790600	0					
ANR	3790645	Identifier	ffv1_common_init		3790600	0					
ANR	3790646	ArgumentList	avctx		3790600	1					
ANR	3790647	Argument	avctx		3790600	0					
ANR	3790648	Identifier	avctx		3790600	0					
ANR	3790649	ExpressionStatement	s -> version = 0	17:4:242:256	3790600	4	True				
ANR	3790650	AssignmentExpression	s -> version = 0		3790600	0		=			
ANR	3790651	PtrMemberAccess	s -> version		3790600	0					
ANR	3790652	Identifier	s		3790600	0					
ANR	3790653	Identifier	version		3790600	1					
ANR	3790654	PrimaryExpression	0		3790600	1					
ANR	3790655	IfStatement	if ( ( avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 ) ) || avctx -> slices > 1 )		3790600	5					
ANR	3790656	Condition	( avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 ) ) || avctx -> slices > 1	21:8:269:352	3790600	0	True				
ANR	3790657	OrExpression	( avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 ) ) || avctx -> slices > 1		3790600	0		||			
ANR	3790658	BitAndExpression	avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 )		3790600	0		&			
ANR	3790659	PtrMemberAccess	avctx -> flags		3790600	0					
ANR	3790660	Identifier	avctx		3790600	0					
ANR	3790661	Identifier	flags		3790600	1					
ANR	3790662	InclusiveOrExpression	CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2		3790600	1		|			
ANR	3790663	Identifier	CODEC_FLAG_PASS1		3790600	0					
ANR	3790664	Identifier	CODEC_FLAG_PASS2		3790600	1					
ANR	3790665	RelationalExpression	avctx -> slices > 1		3790600	1		>			
ANR	3790666	PtrMemberAccess	avctx -> slices		3790600	0					
ANR	3790667	Identifier	avctx		3790600	0					
ANR	3790668	Identifier	slices		3790600	1					
ANR	3790669	PrimaryExpression	1		3790600	1					
ANR	3790670	ExpressionStatement	"s -> version = FFMAX ( s -> version , 2 )"	25:8:364:397	3790600	1	True				
ANR	3790671	AssignmentExpression	"s -> version = FFMAX ( s -> version , 2 )"		3790600	0		=			
ANR	3790672	PtrMemberAccess	s -> version		3790600	0					
ANR	3790673	Identifier	s		3790600	0					
ANR	3790674	Identifier	version		3790600	1					
ANR	3790675	CallExpression	"FFMAX ( s -> version , 2 )"		3790600	1					
ANR	3790676	Callee	FFMAX		3790600	0					
ANR	3790677	Identifier	FFMAX		3790600	0					
ANR	3790678	ArgumentList	s -> version		3790600	1					
ANR	3790679	Argument	s -> version		3790600	0					
ANR	3790680	PtrMemberAccess	s -> version		3790600	0					
ANR	3790681	Identifier	s		3790600	0					
ANR	3790682	Identifier	version		3790600	1					
ANR	3790683	Argument	2		3790600	1					
ANR	3790684	PrimaryExpression	2		3790600	0					
ANR	3790685	IfStatement	if ( avctx -> level == 3 )		3790600	6					
ANR	3790686	Condition	avctx -> level == 3	29:8:410:426	3790600	0	True				
ANR	3790687	EqualityExpression	avctx -> level == 3		3790600	0		==			
ANR	3790688	PtrMemberAccess	avctx -> level		3790600	0					
ANR	3790689	Identifier	avctx		3790600	0					
ANR	3790690	Identifier	level		3790600	1					
ANR	3790691	PrimaryExpression	3		3790600	1					
ANR	3790692	CompoundStatement		27:27:368:368	3790600	1					
ANR	3790693	ExpressionStatement	s -> version = 3	31:8:440:454	3790600	0	True				
ANR	3790694	AssignmentExpression	s -> version = 3		3790600	0		=			
ANR	3790695	PtrMemberAccess	s -> version		3790600	0					
ANR	3790696	Identifier	s		3790600	0					
ANR	3790697	Identifier	version		3790600	1					
ANR	3790698	PrimaryExpression	3		3790600	1					
ANR	3790699	IfStatement	if ( s -> ec < 0 )		3790600	7					
ANR	3790700	Condition	s -> ec < 0	37:8:474:482	3790600	0	True				
ANR	3790701	RelationalExpression	s -> ec < 0		3790600	0		<			
ANR	3790702	PtrMemberAccess	s -> ec		3790600	0					
ANR	3790703	Identifier	s		3790600	0					
ANR	3790704	Identifier	ec		3790600	1					
ANR	3790705	PrimaryExpression	0		3790600	1					
ANR	3790706	CompoundStatement		35:19:424:424	3790600	1					
ANR	3790707	ExpressionStatement	s -> ec = ( s -> version >= 3 )	39:8:496:521	3790600	0	True				
ANR	3790708	AssignmentExpression	s -> ec = ( s -> version >= 3 )		3790600	0		=			
ANR	3790709	PtrMemberAccess	s -> ec		3790600	0					
ANR	3790710	Identifier	s		3790600	0					
ANR	3790711	Identifier	ec		3790600	1					
ANR	3790712	RelationalExpression	s -> version >= 3		3790600	1		>=			
ANR	3790713	PtrMemberAccess	s -> version		3790600	0					
ANR	3790714	Identifier	s		3790600	0					
ANR	3790715	Identifier	version		3790600	1					
ANR	3790716	PrimaryExpression	3		3790600	1					
ANR	3790717	IfStatement	if ( s -> version >= 2 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL )		3790600	8					
ANR	3790718	Condition	s -> version >= 2 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL	45:8:541:625	3790600	0	True				
ANR	3790719	AndExpression	s -> version >= 2 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		3790600	0		&&			
ANR	3790720	RelationalExpression	s -> version >= 2		3790600	0		>=			
ANR	3790721	PtrMemberAccess	s -> version		3790600	0					
ANR	3790722	Identifier	s		3790600	0					
ANR	3790723	Identifier	version		3790600	1					
ANR	3790724	PrimaryExpression	2		3790600	1					
ANR	3790725	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		3790600	1		>			
ANR	3790726	PtrMemberAccess	avctx -> strict_std_compliance		3790600	0					
ANR	3790727	Identifier	avctx		3790600	0					
ANR	3790728	Identifier	strict_std_compliance		3790600	1					
ANR	3790729	Identifier	FF_COMPLIANCE_EXPERIMENTAL		3790600	1					
ANR	3790730	CompoundStatement		45:67:567:567	3790600	1					
ANR	3790731	Statement	av_log	49:8:639:644	3790600	0	True				
ANR	3790732	Statement	(	49:14:645:645	3790600	1	True				
ANR	3790733	Statement	avctx	49:15:646:650	3790600	2	True				
ANR	3790734	Statement	","	49:20:651:651	3790600	3	True				
ANR	3790735	Statement	AV_LOG_ERROR	49:22:653:664	3790600	4	True				
ANR	3790736	Statement	","	49:34:665:665	3790600	5	True				
ANR	3790737	Statement	"""Version %d requested, please set -strict experimental in """	51:15:683:741	3790600	6	True				
ANR	3790738	Statement	"""order to enable it\\n"""	53:15:759:780	3790600	7	True				
ANR	3790739	Statement	","	53:37:781:781	3790600	8	True				
ANR	3790740	Statement	s	55:15:799:799	3790600	9	True				
ANR	3790741	Statement	->	55:16:800:801	3790600	10	True				
ANR	3790742	Statement	version	55:18:802:808	3790600	11	True				
ANR	3790743	Statement	)	55:25:809:809	3790600	12	True				
ANR	3790744	ExpressionStatement		55:26:810:810	3790600	13	True				
ANR	3790745	ReturnStatement	return AVERROR ( ENOSYS ) ;	57:8:821:843	3790600	14	True				
ANR	3790746	CallExpression	AVERROR ( ENOSYS )		3790600	0					
ANR	3790747	Callee	AVERROR		3790600	0					
ANR	3790748	Identifier	AVERROR		3790600	0					
ANR	3790749	ArgumentList	ENOSYS		3790600	1					
ANR	3790750	Argument	ENOSYS		3790600	0					
ANR	3790751	Identifier	ENOSYS		3790600	0					
ANR	3790752	ExpressionStatement	s -> ac = avctx -> coder_type > 0 ? 2 : 0	63:4:859:896	3790600	9	True				
ANR	3790753	AssignmentExpression	s -> ac = avctx -> coder_type > 0 ? 2 : 0		3790600	0		=			
ANR	3790754	PtrMemberAccess	s -> ac		3790600	0					
ANR	3790755	Identifier	s		3790600	0					
ANR	3790756	Identifier	ac		3790600	1					
ANR	3790757	ConditionalExpression	avctx -> coder_type > 0 ? 2 : 0		3790600	1					
ANR	3790758	Condition	avctx -> coder_type > 0		3790600	0					
ANR	3790759	RelationalExpression	avctx -> coder_type > 0		3790600	0		>			
ANR	3790760	PtrMemberAccess	avctx -> coder_type		3790600	0					
ANR	3790761	Identifier	avctx		3790600	0					
ANR	3790762	Identifier	coder_type		3790600	1					
ANR	3790763	PrimaryExpression	0		3790600	1					
ANR	3790764	PrimaryExpression	2		3790600	1					
ANR	3790765	PrimaryExpression	0		3790600	2					
ANR	3790766	ExpressionStatement	s -> plane_count = 3	67:4:905:923	3790600	10	True				
ANR	3790767	AssignmentExpression	s -> plane_count = 3		3790600	0		=			
ANR	3790768	PtrMemberAccess	s -> plane_count		3790600	0					
ANR	3790769	Identifier	s		3790600	0					
ANR	3790770	Identifier	plane_count		3790600	1					
ANR	3790771	PrimaryExpression	3		3790600	1					
ANR	3790772	SwitchStatement	switch ( avctx -> pix_fmt )		3790600	11					
ANR	3790773	Condition	avctx -> pix_fmt	69:12:938:951	3790600	0	True				
ANR	3790774	PtrMemberAccess	avctx -> pix_fmt		3790600	0					
ANR	3790775	Identifier	avctx		3790600	0					
ANR	3790776	Identifier	pix_fmt		3790600	1					
ANR	3790777	CompoundStatement		67:28:893:893	3790600	1					
ANR	3790778	Label	case AV_PIX_FMT_YUV444P9 :	71:4:961:985	3790600	0	True				
ANR	3790779	Identifier	AV_PIX_FMT_YUV444P9		3790600	0					
ANR	3790780	Label	case AV_PIX_FMT_YUV422P9 :	73:4:992:1016	3790600	1	True				
ANR	3790781	Identifier	AV_PIX_FMT_YUV422P9		3790600	0					
ANR	3790782	Label	case AV_PIX_FMT_YUV420P9 :	75:4:1023:1047	3790600	2	True				
ANR	3790783	Identifier	AV_PIX_FMT_YUV420P9		3790600	0					
ANR	3790784	IfStatement	if ( ! avctx -> bits_per_raw_sample )		3790600	3					
ANR	3790785	Condition	! avctx -> bits_per_raw_sample	77:12:1062:1088	3790600	0	True				
ANR	3790786	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3790787	UnaryOperator	!		3790600	0					
ANR	3790788	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3790789	Identifier	avctx		3790600	0					
ANR	3790790	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790791	ExpressionStatement	s -> bits_per_raw_sample = 9	79:12:1104:1130	3790600	1	True				
ANR	3790792	AssignmentExpression	s -> bits_per_raw_sample = 9		3790600	0		=			
ANR	3790793	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3790794	Identifier	s		3790600	0					
ANR	3790795	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790796	PrimaryExpression	9		3790600	1					
ANR	3790797	Label	case AV_PIX_FMT_YUV444P10 :	81:4:1137:1162	3790600	4	True				
ANR	3790798	Identifier	AV_PIX_FMT_YUV444P10		3790600	0					
ANR	3790799	Label	case AV_PIX_FMT_YUV420P10 :	83:4:1169:1194	3790600	5	True				
ANR	3790800	Identifier	AV_PIX_FMT_YUV420P10		3790600	0					
ANR	3790801	Label	case AV_PIX_FMT_YUV422P10 :	85:4:1201:1226	3790600	6	True				
ANR	3790802	Identifier	AV_PIX_FMT_YUV422P10		3790600	0					
ANR	3790803	ExpressionStatement	s -> packed_at_lsb = 1	87:8:1237:1257	3790600	7	True				
ANR	3790804	AssignmentExpression	s -> packed_at_lsb = 1		3790600	0		=			
ANR	3790805	PtrMemberAccess	s -> packed_at_lsb		3790600	0					
ANR	3790806	Identifier	s		3790600	0					
ANR	3790807	Identifier	packed_at_lsb		3790600	1					
ANR	3790808	PrimaryExpression	1		3790600	1					
ANR	3790809	IfStatement	if ( ! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample )		3790600	8					
ANR	3790810	Condition	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample	89:12:1272:1325	3790600	0	True				
ANR	3790811	AndExpression	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample		3790600	0		&&			
ANR	3790812	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3790813	UnaryOperator	!		3790600	0					
ANR	3790814	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3790815	Identifier	avctx		3790600	0					
ANR	3790816	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790817	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	1					
ANR	3790818	UnaryOperator	!		3790600	0					
ANR	3790819	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3790820	Identifier	s		3790600	0					
ANR	3790821	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790822	ExpressionStatement	s -> bits_per_raw_sample = 10	91:12:1341:1368	3790600	1	True				
ANR	3790823	AssignmentExpression	s -> bits_per_raw_sample = 10		3790600	0		=			
ANR	3790824	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3790825	Identifier	s		3790600	0					
ANR	3790826	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790827	PrimaryExpression	10		3790600	1					
ANR	3790828	Label	case AV_PIX_FMT_GRAY16 :	93:4:1375:1397	3790600	9	True				
ANR	3790829	Identifier	AV_PIX_FMT_GRAY16		3790600	0					
ANR	3790830	Label	case AV_PIX_FMT_YUV444P16 :	95:4:1404:1429	3790600	10	True				
ANR	3790831	Identifier	AV_PIX_FMT_YUV444P16		3790600	0					
ANR	3790832	Label	case AV_PIX_FMT_YUV422P16 :	97:4:1436:1461	3790600	11	True				
ANR	3790833	Identifier	AV_PIX_FMT_YUV422P16		3790600	0					
ANR	3790834	Label	case AV_PIX_FMT_YUV420P16 :	99:4:1468:1493	3790600	12	True				
ANR	3790835	Identifier	AV_PIX_FMT_YUV420P16		3790600	0					
ANR	3790836	IfStatement	if ( ! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample )		3790600	13					
ANR	3790837	Condition	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample	101:12:1508:1561	3790600	0	True				
ANR	3790838	AndExpression	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample		3790600	0		&&			
ANR	3790839	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3790840	UnaryOperator	!		3790600	0					
ANR	3790841	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3790842	Identifier	avctx		3790600	0					
ANR	3790843	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790844	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	1					
ANR	3790845	UnaryOperator	!		3790600	0					
ANR	3790846	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3790847	Identifier	s		3790600	0					
ANR	3790848	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790849	CompoundStatement		99:68:1503:1503	3790600	1					
ANR	3790850	ExpressionStatement	s -> bits_per_raw_sample = 16	103:12:1579:1606	3790600	0	True				
ANR	3790851	AssignmentExpression	s -> bits_per_raw_sample = 16		3790600	0		=			
ANR	3790852	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3790853	Identifier	s		3790600	0					
ANR	3790854	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790855	PrimaryExpression	16		3790600	1					
ANR	3790856	ElseStatement	else		3790600	0					
ANR	3790857	IfStatement	if ( ! s -> bits_per_raw_sample )		3790600	0					
ANR	3790858	Condition	! s -> bits_per_raw_sample	105:19:1628:1650	3790600	0	True				
ANR	3790859	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	0					
ANR	3790860	UnaryOperator	!		3790600	0					
ANR	3790861	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3790862	Identifier	s		3790600	0					
ANR	3790863	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790864	CompoundStatement		103:44:1592:1592	3790600	1					
ANR	3790865	ExpressionStatement	s -> bits_per_raw_sample = avctx -> bits_per_raw_sample	107:12:1668:1719	3790600	0	True				
ANR	3790866	AssignmentExpression	s -> bits_per_raw_sample = avctx -> bits_per_raw_sample		3790600	0		=			
ANR	3790867	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3790868	Identifier	s		3790600	0					
ANR	3790869	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790870	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3790871	Identifier	avctx		3790600	0					
ANR	3790872	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790873	IfStatement	if ( s -> bits_per_raw_sample <= 8 )		3790600	14					
ANR	3790874	Condition	s -> bits_per_raw_sample <= 8	111:12:1745:1771	3790600	0	True				
ANR	3790875	RelationalExpression	s -> bits_per_raw_sample <= 8		3790600	0		<=			
ANR	3790876	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3790877	Identifier	s		3790600	0					
ANR	3790878	Identifier	bits_per_raw_sample		3790600	1					
ANR	3790879	PrimaryExpression	8		3790600	1					
ANR	3790880	CompoundStatement		109:41:1713:1713	3790600	1					
ANR	3790881	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bits_per_raw_sample invalid\\n"" )"	113:12:1789:1849	3790600	0	True				
ANR	3790882	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bits_per_raw_sample invalid\\n"" )"		3790600	0					
ANR	3790883	Callee	av_log		3790600	0					
ANR	3790884	Identifier	av_log		3790600	0					
ANR	3790885	ArgumentList	avctx		3790600	1					
ANR	3790886	Argument	avctx		3790600	0					
ANR	3790887	Identifier	avctx		3790600	0					
ANR	3790888	Argument	AV_LOG_ERROR		3790600	1					
ANR	3790889	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3790890	Argument	"""bits_per_raw_sample invalid\\n"""		3790600	2					
ANR	3790891	PrimaryExpression	"""bits_per_raw_sample invalid\\n"""		3790600	0					
ANR	3790892	ReturnStatement	return AVERROR_INVALIDDATA ;	115:12:1864:1890	3790600	1	True				
ANR	3790893	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3790894	IfStatement	if ( ! s -> ac && avctx -> coder_type == - 1 )		3790600	15					
ANR	3790895	Condition	! s -> ac && avctx -> coder_type == - 1	119:12:1916:1948	3790600	0	True				
ANR	3790896	AndExpression	! s -> ac && avctx -> coder_type == - 1		3790600	0		&&			
ANR	3790897	UnaryOperationExpression	! s -> ac		3790600	0					
ANR	3790898	UnaryOperator	!		3790600	0					
ANR	3790899	PtrMemberAccess	s -> ac		3790600	1					
ANR	3790900	Identifier	s		3790600	0					
ANR	3790901	Identifier	ac		3790600	1					
ANR	3790902	EqualityExpression	avctx -> coder_type == - 1		3790600	1		==			
ANR	3790903	PtrMemberAccess	avctx -> coder_type		3790600	0					
ANR	3790904	Identifier	avctx		3790600	0					
ANR	3790905	Identifier	coder_type		3790600	1					
ANR	3790906	UnaryOperationExpression	- 1		3790600	1					
ANR	3790907	UnaryOperator	-		3790600	0					
ANR	3790908	PrimaryExpression	1		3790600	1					
ANR	3790909	CompoundStatement		117:47:1890:1890	3790600	1					
ANR	3790910	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""bits_per_raw_sample > 8, forcing coder 1\\n"" )"	121:12:1966:2058	3790600	0	True				
ANR	3790911	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""bits_per_raw_sample > 8, forcing coder 1\\n"" )"		3790600	0					
ANR	3790912	Callee	av_log		3790600	0					
ANR	3790913	Identifier	av_log		3790600	0					
ANR	3790914	ArgumentList	avctx		3790600	1					
ANR	3790915	Argument	avctx		3790600	0					
ANR	3790916	Identifier	avctx		3790600	0					
ANR	3790917	Argument	AV_LOG_INFO		3790600	1					
ANR	3790918	Identifier	AV_LOG_INFO		3790600	0					
ANR	3790919	Argument	"""bits_per_raw_sample > 8, forcing coder 1\\n"""		3790600	2					
ANR	3790920	PrimaryExpression	"""bits_per_raw_sample > 8, forcing coder 1\\n"""		3790600	0					
ANR	3790921	ExpressionStatement	s -> ac = 2	125:12:2073:2082	3790600	1	True				
ANR	3790922	AssignmentExpression	s -> ac = 2		3790600	0		=			
ANR	3790923	PtrMemberAccess	s -> ac		3790600	0					
ANR	3790924	Identifier	s		3790600	0					
ANR	3790925	Identifier	ac		3790600	1					
ANR	3790926	PrimaryExpression	2		3790600	1					
ANR	3790927	IfStatement	if ( ! s -> ac )		3790600	16					
ANR	3790928	Condition	! s -> ac	129:12:2108:2113	3790600	0	True				
ANR	3790929	UnaryOperationExpression	! s -> ac		3790600	0					
ANR	3790930	UnaryOperator	!		3790600	0					
ANR	3790931	PtrMemberAccess	s -> ac		3790600	1					
ANR	3790932	Identifier	s		3790600	0					
ANR	3790933	Identifier	ac		3790600	1					
ANR	3790934	CompoundStatement		127:20:2055:2055	3790600	1					
ANR	3790935	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bits_per_raw_sample of more than 8 needs -coder 1 currently\\n"" )"	131:12:2131:2258	3790600	0	True				
ANR	3790936	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bits_per_raw_sample of more than 8 needs -coder 1 currently\\n"" )"		3790600	0					
ANR	3790937	Callee	av_log		3790600	0					
ANR	3790938	Identifier	av_log		3790600	0					
ANR	3790939	ArgumentList	avctx		3790600	1					
ANR	3790940	Argument	avctx		3790600	0					
ANR	3790941	Identifier	avctx		3790600	0					
ANR	3790942	Argument	AV_LOG_ERROR		3790600	1					
ANR	3790943	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3790944	Argument	"""bits_per_raw_sample of more than 8 needs -coder 1 currently\\n"""		3790600	2					
ANR	3790945	PrimaryExpression	"""bits_per_raw_sample of more than 8 needs -coder 1 currently\\n"""		3790600	0					
ANR	3790946	ReturnStatement	return AVERROR_INVALIDDATA ;	137:12:2273:2299	3790600	1	True				
ANR	3790947	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3790948	ExpressionStatement	"s -> version = FFMAX ( s -> version , 1 )"	141:8:2321:2354	3790600	17	True				
ANR	3790949	AssignmentExpression	"s -> version = FFMAX ( s -> version , 1 )"		3790600	0		=			
ANR	3790950	PtrMemberAccess	s -> version		3790600	0					
ANR	3790951	Identifier	s		3790600	0					
ANR	3790952	Identifier	version		3790600	1					
ANR	3790953	CallExpression	"FFMAX ( s -> version , 1 )"		3790600	1					
ANR	3790954	Callee	FFMAX		3790600	0					
ANR	3790955	Identifier	FFMAX		3790600	0					
ANR	3790956	ArgumentList	s -> version		3790600	1					
ANR	3790957	Argument	s -> version		3790600	0					
ANR	3790958	PtrMemberAccess	s -> version		3790600	0					
ANR	3790959	Identifier	s		3790600	0					
ANR	3790960	Identifier	version		3790600	1					
ANR	3790961	Argument	1		3790600	1					
ANR	3790962	PrimaryExpression	1		3790600	0					
ANR	3790963	Label	case AV_PIX_FMT_GRAY8 :	143:4:2361:2382	3790600	18	True				
ANR	3790964	Identifier	AV_PIX_FMT_GRAY8		3790600	0					
ANR	3790965	Label	case AV_PIX_FMT_YUV444P :	145:4:2389:2412	3790600	19	True				
ANR	3790966	Identifier	AV_PIX_FMT_YUV444P		3790600	0					
ANR	3790967	Label	case AV_PIX_FMT_YUV440P :	147:4:2419:2442	3790600	20	True				
ANR	3790968	Identifier	AV_PIX_FMT_YUV440P		3790600	0					
ANR	3790969	Label	case AV_PIX_FMT_YUV422P :	149:4:2449:2472	3790600	21	True				
ANR	3790970	Identifier	AV_PIX_FMT_YUV422P		3790600	0					
ANR	3790971	Label	case AV_PIX_FMT_YUV420P :	151:4:2479:2502	3790600	22	True				
ANR	3790972	Identifier	AV_PIX_FMT_YUV420P		3790600	0					
ANR	3790973	Label	case AV_PIX_FMT_YUV411P :	153:4:2509:2532	3790600	23	True				
ANR	3790974	Identifier	AV_PIX_FMT_YUV411P		3790600	0					
ANR	3790975	Label	case AV_PIX_FMT_YUV410P :	155:4:2539:2562	3790600	24	True				
ANR	3790976	Identifier	AV_PIX_FMT_YUV410P		3790600	0					
ANR	3790977	ExpressionStatement	s -> chroma_planes = desc -> nb_components < 3 ? 0 : 1	157:8:2573:2623	3790600	25	True				
ANR	3790978	AssignmentExpression	s -> chroma_planes = desc -> nb_components < 3 ? 0 : 1		3790600	0		=			
ANR	3790979	PtrMemberAccess	s -> chroma_planes		3790600	0					
ANR	3790980	Identifier	s		3790600	0					
ANR	3790981	Identifier	chroma_planes		3790600	1					
ANR	3790982	ConditionalExpression	desc -> nb_components < 3 ? 0 : 1		3790600	1					
ANR	3790983	Condition	desc -> nb_components < 3		3790600	0					
ANR	3790984	RelationalExpression	desc -> nb_components < 3		3790600	0		<			
ANR	3790985	PtrMemberAccess	desc -> nb_components		3790600	0					
ANR	3790986	Identifier	desc		3790600	0					
ANR	3790987	Identifier	nb_components		3790600	1					
ANR	3790988	PrimaryExpression	3		3790600	1					
ANR	3790989	PrimaryExpression	0		3790600	1					
ANR	3790990	PrimaryExpression	1		3790600	2					
ANR	3790991	ExpressionStatement	s -> colorspace = 0	159:8:2634:2654	3790600	26	True				
ANR	3790992	AssignmentExpression	s -> colorspace = 0		3790600	0		=			
ANR	3790993	PtrMemberAccess	s -> colorspace		3790600	0					
ANR	3790994	Identifier	s		3790600	0					
ANR	3790995	Identifier	colorspace		3790600	1					
ANR	3790996	PrimaryExpression	0		3790600	1					
ANR	3790997	BreakStatement	break ;	161:8:2665:2670	3790600	27	True				
ANR	3790998	Label	case AV_PIX_FMT_YUVA444P :	163:4:2677:2701	3790600	28	True				
ANR	3790999	Identifier	AV_PIX_FMT_YUVA444P		3790600	0					
ANR	3791000	Label	case AV_PIX_FMT_YUVA422P :	165:4:2708:2732	3790600	29	True				
ANR	3791001	Identifier	AV_PIX_FMT_YUVA422P		3790600	0					
ANR	3791002	Label	case AV_PIX_FMT_YUVA420P :	167:4:2739:2763	3790600	30	True				
ANR	3791003	Identifier	AV_PIX_FMT_YUVA420P		3790600	0					
ANR	3791004	ExpressionStatement	s -> chroma_planes = 1	169:8:2774:2794	3790600	31	True				
ANR	3791005	AssignmentExpression	s -> chroma_planes = 1		3790600	0		=			
ANR	3791006	PtrMemberAccess	s -> chroma_planes		3790600	0					
ANR	3791007	Identifier	s		3790600	0					
ANR	3791008	Identifier	chroma_planes		3790600	1					
ANR	3791009	PrimaryExpression	1		3790600	1					
ANR	3791010	ExpressionStatement	s -> colorspace = 0	171:8:2805:2825	3790600	32	True				
ANR	3791011	AssignmentExpression	s -> colorspace = 0		3790600	0		=			
ANR	3791012	PtrMemberAccess	s -> colorspace		3790600	0					
ANR	3791013	Identifier	s		3790600	0					
ANR	3791014	Identifier	colorspace		3790600	1					
ANR	3791015	PrimaryExpression	0		3790600	1					
ANR	3791016	ExpressionStatement	s -> transparency = 1	173:8:2836:2856	3790600	33	True				
ANR	3791017	AssignmentExpression	s -> transparency = 1		3790600	0		=			
ANR	3791018	PtrMemberAccess	s -> transparency		3790600	0					
ANR	3791019	Identifier	s		3790600	0					
ANR	3791020	Identifier	transparency		3790600	1					
ANR	3791021	PrimaryExpression	1		3790600	1					
ANR	3791022	BreakStatement	break ;	175:8:2867:2872	3790600	34	True				
ANR	3791023	Label	case AV_PIX_FMT_RGB32 :	177:4:2879:2900	3790600	35	True				
ANR	3791024	Identifier	AV_PIX_FMT_RGB32		3790600	0					
ANR	3791025	ExpressionStatement	s -> colorspace = 1	179:8:2911:2930	3790600	36	True				
ANR	3791026	AssignmentExpression	s -> colorspace = 1		3790600	0		=			
ANR	3791027	PtrMemberAccess	s -> colorspace		3790600	0					
ANR	3791028	Identifier	s		3790600	0					
ANR	3791029	Identifier	colorspace		3790600	1					
ANR	3791030	PrimaryExpression	1		3790600	1					
ANR	3791031	ExpressionStatement	s -> transparency = 1	181:8:2941:2960	3790600	37	True				
ANR	3791032	AssignmentExpression	s -> transparency = 1		3790600	0		=			
ANR	3791033	PtrMemberAccess	s -> transparency		3790600	0					
ANR	3791034	Identifier	s		3790600	0					
ANR	3791035	Identifier	transparency		3790600	1					
ANR	3791036	PrimaryExpression	1		3790600	1					
ANR	3791037	BreakStatement	break ;	183:8:2971:2976	3790600	38	True				
ANR	3791038	Label	case AV_PIX_FMT_GBRP9 :	185:4:2983:3004	3790600	39	True				
ANR	3791039	Identifier	AV_PIX_FMT_GBRP9		3790600	0					
ANR	3791040	IfStatement	if ( ! avctx -> bits_per_raw_sample )		3790600	40					
ANR	3791041	Condition	! avctx -> bits_per_raw_sample	187:12:3019:3045	3790600	0	True				
ANR	3791042	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3791043	UnaryOperator	!		3790600	0					
ANR	3791044	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3791045	Identifier	avctx		3790600	0					
ANR	3791046	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791047	ExpressionStatement	s -> bits_per_raw_sample = 9	189:12:3061:3087	3790600	1	True				
ANR	3791048	AssignmentExpression	s -> bits_per_raw_sample = 9		3790600	0		=			
ANR	3791049	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3791050	Identifier	s		3790600	0					
ANR	3791051	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791052	PrimaryExpression	9		3790600	1					
ANR	3791053	Label	case AV_PIX_FMT_GBRP10 :	191:4:3094:3116	3790600	41	True				
ANR	3791054	Identifier	AV_PIX_FMT_GBRP10		3790600	0					
ANR	3791055	IfStatement	if ( ! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample )		3790600	42					
ANR	3791056	Condition	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample	193:12:3131:3184	3790600	0	True				
ANR	3791057	AndExpression	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample		3790600	0		&&			
ANR	3791058	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3791059	UnaryOperator	!		3790600	0					
ANR	3791060	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3791061	Identifier	avctx		3790600	0					
ANR	3791062	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791063	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	1					
ANR	3791064	UnaryOperator	!		3790600	0					
ANR	3791065	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3791066	Identifier	s		3790600	0					
ANR	3791067	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791068	ExpressionStatement	s -> bits_per_raw_sample = 10	195:12:3200:3227	3790600	1	True				
ANR	3791069	AssignmentExpression	s -> bits_per_raw_sample = 10		3790600	0		=			
ANR	3791070	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3791071	Identifier	s		3790600	0					
ANR	3791072	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791073	PrimaryExpression	10		3790600	1					
ANR	3791074	Label	case AV_PIX_FMT_GBRP16 :	197:4:3234:3256	3790600	43	True				
ANR	3791075	Identifier	AV_PIX_FMT_GBRP16		3790600	0					
ANR	3791076	IfStatement	if ( ! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample )		3790600	44					
ANR	3791077	Condition	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample	199:12:3271:3324	3790600	0	True				
ANR	3791078	AndExpression	! avctx -> bits_per_raw_sample && ! s -> bits_per_raw_sample		3790600	0		&&			
ANR	3791079	UnaryOperationExpression	! avctx -> bits_per_raw_sample		3790600	0					
ANR	3791080	UnaryOperator	!		3790600	0					
ANR	3791081	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3791082	Identifier	avctx		3790600	0					
ANR	3791083	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791084	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	1					
ANR	3791085	UnaryOperator	!		3790600	0					
ANR	3791086	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3791087	Identifier	s		3790600	0					
ANR	3791088	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791089	ExpressionStatement	s -> bits_per_raw_sample = 16	201:12:3340:3367	3790600	1	True				
ANR	3791090	AssignmentExpression	s -> bits_per_raw_sample = 16		3790600	0		=			
ANR	3791091	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3791092	Identifier	s		3790600	0					
ANR	3791093	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791094	PrimaryExpression	16		3790600	1					
ANR	3791095	ElseStatement	else		3790600	0					
ANR	3791096	IfStatement	if ( ! s -> bits_per_raw_sample )		3790600	0					
ANR	3791097	Condition	! s -> bits_per_raw_sample	203:17:3387:3409	3790600	0	True				
ANR	3791098	UnaryOperationExpression	! s -> bits_per_raw_sample		3790600	0					
ANR	3791099	UnaryOperator	!		3790600	0					
ANR	3791100	PtrMemberAccess	s -> bits_per_raw_sample		3790600	1					
ANR	3791101	Identifier	s		3790600	0					
ANR	3791102	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791103	ExpressionStatement	s -> bits_per_raw_sample = avctx -> bits_per_raw_sample	205:12:3425:3476	3790600	1	True				
ANR	3791104	AssignmentExpression	s -> bits_per_raw_sample = avctx -> bits_per_raw_sample		3790600	0		=			
ANR	3791105	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3791106	Identifier	s		3790600	0					
ANR	3791107	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791108	PtrMemberAccess	avctx -> bits_per_raw_sample		3790600	1					
ANR	3791109	Identifier	avctx		3790600	0					
ANR	3791110	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791111	ExpressionStatement	s -> colorspace = 1	207:8:3487:3507	3790600	45	True				
ANR	3791112	AssignmentExpression	s -> colorspace = 1		3790600	0		=			
ANR	3791113	PtrMemberAccess	s -> colorspace		3790600	0					
ANR	3791114	Identifier	s		3790600	0					
ANR	3791115	Identifier	colorspace		3790600	1					
ANR	3791116	PrimaryExpression	1		3790600	1					
ANR	3791117	ExpressionStatement	s -> chroma_planes = 1	209:8:3518:3538	3790600	46	True				
ANR	3791118	AssignmentExpression	s -> chroma_planes = 1		3790600	0		=			
ANR	3791119	PtrMemberAccess	s -> chroma_planes		3790600	0					
ANR	3791120	Identifier	s		3790600	0					
ANR	3791121	Identifier	chroma_planes		3790600	1					
ANR	3791122	PrimaryExpression	1		3790600	1					
ANR	3791123	ExpressionStatement	"s -> version = FFMAX ( s -> version , 1 )"	211:8:3549:3588	3790600	47	True				
ANR	3791124	AssignmentExpression	"s -> version = FFMAX ( s -> version , 1 )"		3790600	0		=			
ANR	3791125	PtrMemberAccess	s -> version		3790600	0					
ANR	3791126	Identifier	s		3790600	0					
ANR	3791127	Identifier	version		3790600	1					
ANR	3791128	CallExpression	"FFMAX ( s -> version , 1 )"		3790600	1					
ANR	3791129	Callee	FFMAX		3790600	0					
ANR	3791130	Identifier	FFMAX		3790600	0					
ANR	3791131	ArgumentList	s -> version		3790600	1					
ANR	3791132	Argument	s -> version		3790600	0					
ANR	3791133	PtrMemberAccess	s -> version		3790600	0					
ANR	3791134	Identifier	s		3790600	0					
ANR	3791135	Identifier	version		3790600	1					
ANR	3791136	Argument	1		3790600	1					
ANR	3791137	PrimaryExpression	1		3790600	0					
ANR	3791138	BreakStatement	break ;	213:8:3599:3604	3790600	48	True				
ANR	3791139	Label	default :	215:4:3611:3618	3790600	49	True				
ANR	3791140	Identifier	default		3790600	0					
ANR	3791141	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""format not supported\\n"" )"	217:8:3629:3682	3790600	50	True				
ANR	3791142	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""format not supported\\n"" )"		3790600	0					
ANR	3791143	Callee	av_log		3790600	0					
ANR	3791144	Identifier	av_log		3790600	0					
ANR	3791145	ArgumentList	avctx		3790600	1					
ANR	3791146	Argument	avctx		3790600	0					
ANR	3791147	Identifier	avctx		3790600	0					
ANR	3791148	Argument	AV_LOG_ERROR		3790600	1					
ANR	3791149	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3791150	Argument	"""format not supported\\n"""		3790600	2					
ANR	3791151	PrimaryExpression	"""format not supported\\n"""		3790600	0					
ANR	3791152	ReturnStatement	return AVERROR_INVALIDDATA ;	219:8:3693:3719	3790600	51	True				
ANR	3791153	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3791154	IfStatement	if ( s -> transparency )		3790600	12					
ANR	3791155	Condition	s -> transparency	223:8:3737:3751	3790600	0	True				
ANR	3791156	PtrMemberAccess	s -> transparency		3790600	0					
ANR	3791157	Identifier	s		3790600	0					
ANR	3791158	Identifier	transparency		3790600	1					
ANR	3791159	CompoundStatement		221:25:3693:3693	3790600	1					
ANR	3791160	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Storing alpha plane, this will require a recent FFV1 decoder to playback!\\n"" )"	225:8:3765:3900	3790600	0	True				
ANR	3791161	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Storing alpha plane, this will require a recent FFV1 decoder to playback!\\n"" )"		3790600	0					
ANR	3791162	Callee	av_log		3790600	0					
ANR	3791163	Identifier	av_log		3790600	0					
ANR	3791164	ArgumentList	avctx		3790600	1					
ANR	3791165	Argument	avctx		3790600	0					
ANR	3791166	Identifier	avctx		3790600	0					
ANR	3791167	Argument	AV_LOG_WARNING		3790600	1					
ANR	3791168	Identifier	AV_LOG_WARNING		3790600	0					
ANR	3791169	Argument	"""Storing alpha plane, this will require a recent FFV1 decoder to playback!\\n"""		3790600	2					
ANR	3791170	PrimaryExpression	"""Storing alpha plane, this will require a recent FFV1 decoder to playback!\\n"""		3790600	0					
ANR	3791171	IfStatement	if ( avctx -> context_model > 1U )		3790600	13					
ANR	3791172	Condition	avctx -> context_model > 1U	233:8:3918:3942	3790600	0	True				
ANR	3791173	RelationalExpression	avctx -> context_model > 1U		3790600	0		>			
ANR	3791174	PtrMemberAccess	avctx -> context_model		3790600	0					
ANR	3791175	Identifier	avctx		3790600	0					
ANR	3791176	Identifier	context_model		3790600	1					
ANR	3791177	PrimaryExpression	1U		3790600	1					
ANR	3791178	CompoundStatement		231:35:3884:3884	3790600	1					
ANR	3791179	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid context model %d, valid values are 0 and 1\\n"" , avctx -> context_model )"	235:8:3956:4093	3790600	0	True				
ANR	3791180	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid context model %d, valid values are 0 and 1\\n"" , avctx -> context_model )"		3790600	0					
ANR	3791181	Callee	av_log		3790600	0					
ANR	3791182	Identifier	av_log		3790600	0					
ANR	3791183	ArgumentList	avctx		3790600	1					
ANR	3791184	Argument	avctx		3790600	0					
ANR	3791185	Identifier	avctx		3790600	0					
ANR	3791186	Argument	AV_LOG_ERROR		3790600	1					
ANR	3791187	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3791188	Argument	"""Invalid context model %d, valid values are 0 and 1\\n"""		3790600	2					
ANR	3791189	PrimaryExpression	"""Invalid context model %d, valid values are 0 and 1\\n"""		3790600	0					
ANR	3791190	Argument	avctx -> context_model		3790600	3					
ANR	3791191	PtrMemberAccess	avctx -> context_model		3790600	0					
ANR	3791192	Identifier	avctx		3790600	0					
ANR	3791193	Identifier	context_model		3790600	1					
ANR	3791194	ReturnStatement	return AVERROR ( EINVAL ) ;	241:8:4104:4126	3790600	1	True				
ANR	3791195	CallExpression	AVERROR ( EINVAL )		3790600	0					
ANR	3791196	Callee	AVERROR		3790600	0					
ANR	3791197	Identifier	AVERROR		3790600	0					
ANR	3791198	ArgumentList	EINVAL		3790600	1					
ANR	3791199	Argument	EINVAL		3790600	0					
ANR	3791200	Identifier	EINVAL		3790600	0					
ANR	3791201	IfStatement	if ( s -> ac > 1 )		3790600	14					
ANR	3791202	Condition	s -> ac > 1	247:8:4146:4154	3790600	0	True				
ANR	3791203	RelationalExpression	s -> ac > 1		3790600	0		>			
ANR	3791204	PtrMemberAccess	s -> ac		3790600	0					
ANR	3791205	Identifier	s		3790600	0					
ANR	3791206	Identifier	ac		3790600	1					
ANR	3791207	PrimaryExpression	1		3790600	1					
ANR	3791208	ForStatement	for ( i = 1 ; i < 256 ; i ++ )		3790600	1					
ANR	3791209	ForInit	i = 1 ;	249:13:4171:4176	3790600	0	True				
ANR	3791210	AssignmentExpression	i = 1		3790600	0		=			
ANR	3791211	Identifier	i		3790600	0					
ANR	3791212	PrimaryExpression	1		3790600	1					
ANR	3791213	Condition	i < 256	249:20:4178:4184	3790600	1	True				
ANR	3791214	RelationalExpression	i < 256		3790600	0		<			
ANR	3791215	Identifier	i		3790600	0					
ANR	3791216	PrimaryExpression	256		3790600	1					
ANR	3791217	PostIncDecOperationExpression	i ++	249:29:4187:4189	3790600	2	True				
ANR	3791218	Identifier	i		3790600	0					
ANR	3791219	IncDec	++		3790600	1					
ANR	3791220	ExpressionStatement	s -> state_transition [ i ] = ffv1_ver2_state [ i ]	251:12:4205:4248	3790600	3	True				
ANR	3791221	AssignmentExpression	s -> state_transition [ i ] = ffv1_ver2_state [ i ]		3790600	0		=			
ANR	3791222	ArrayIndexing	s -> state_transition [ i ]		3790600	0					
ANR	3791223	PtrMemberAccess	s -> state_transition		3790600	0					
ANR	3791224	Identifier	s		3790600	0					
ANR	3791225	Identifier	state_transition		3790600	1					
ANR	3791226	Identifier	i		3790600	1					
ANR	3791227	ArrayIndexing	ffv1_ver2_state [ i ]		3790600	1					
ANR	3791228	Identifier	ffv1_ver2_state		3790600	0					
ANR	3791229	Identifier	i		3790600	1					
ANR	3791230	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		3790600	15					
ANR	3791231	ForInit	i = 0 ;	255:9:4262:4267	3790600	0	True				
ANR	3791232	AssignmentExpression	i = 0		3790600	0		=			
ANR	3791233	Identifier	i		3790600	0					
ANR	3791234	PrimaryExpression	0		3790600	1					
ANR	3791235	Condition	i < 256	255:16:4269:4275	3790600	1	True				
ANR	3791236	RelationalExpression	i < 256		3790600	0		<			
ANR	3791237	Identifier	i		3790600	0					
ANR	3791238	PrimaryExpression	256		3790600	1					
ANR	3791239	PostIncDecOperationExpression	i ++	255:25:4278:4280	3790600	2	True				
ANR	3791240	Identifier	i		3790600	0					
ANR	3791241	IncDec	++		3790600	1					
ANR	3791242	CompoundStatement		253:30:4222:4222	3790600	3					
ANR	3791243	ExpressionStatement	s -> quant_table_count = 2	257:8:4294:4318	3790600	0	True				
ANR	3791244	AssignmentExpression	s -> quant_table_count = 2		3790600	0		=			
ANR	3791245	PtrMemberAccess	s -> quant_table_count		3790600	0					
ANR	3791246	Identifier	s		3790600	0					
ANR	3791247	Identifier	quant_table_count		3790600	1					
ANR	3791248	PrimaryExpression	2		3790600	1					
ANR	3791249	IfStatement	if ( s -> bits_per_raw_sample <= 8 )		3790600	1					
ANR	3791250	Condition	s -> bits_per_raw_sample <= 8	259:12:4333:4359	3790600	0	True				
ANR	3791251	RelationalExpression	s -> bits_per_raw_sample <= 8		3790600	0		<=			
ANR	3791252	PtrMemberAccess	s -> bits_per_raw_sample		3790600	0					
ANR	3791253	Identifier	s		3790600	0					
ANR	3791254	Identifier	bits_per_raw_sample		3790600	1					
ANR	3791255	PrimaryExpression	8		3790600	1					
ANR	3791256	CompoundStatement		257:41:4301:4301	3790600	1					
ANR	3791257	ExpressionStatement	s -> quant_tables [ 0 ] [ 0 ] [ i ] = ffv1_quant11 [ i ]	261:12:4377:4419	3790600	0	True				
ANR	3791258	AssignmentExpression	s -> quant_tables [ 0 ] [ 0 ] [ i ] = ffv1_quant11 [ i ]		3790600	0		=			
ANR	3791259	ArrayIndexing	s -> quant_tables [ 0 ] [ 0 ] [ i ]		3790600	0					
ANR	3791260	ArrayIndexing	s -> quant_tables [ 0 ] [ 0 ]		3790600	0					
ANR	3791261	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791262	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791263	Identifier	s		3790600	0					
ANR	3791264	Identifier	quant_tables		3790600	1					
ANR	3791265	PrimaryExpression	0		3790600	1					
ANR	3791266	PrimaryExpression	0		3790600	1					
ANR	3791267	Identifier	i		3790600	1					
ANR	3791268	ArrayIndexing	ffv1_quant11 [ i ]		3790600	1					
ANR	3791269	Identifier	ffv1_quant11		3790600	0					
ANR	3791270	Identifier	i		3790600	1					
ANR	3791271	ExpressionStatement	s -> quant_tables [ 0 ] [ 1 ] [ i ] = ffv1_quant11 [ i ] * 11	263:12:4434:4481	3790600	1	True				
ANR	3791272	AssignmentExpression	s -> quant_tables [ 0 ] [ 1 ] [ i ] = ffv1_quant11 [ i ] * 11		3790600	0		=			
ANR	3791273	ArrayIndexing	s -> quant_tables [ 0 ] [ 1 ] [ i ]		3790600	0					
ANR	3791274	ArrayIndexing	s -> quant_tables [ 0 ] [ 1 ]		3790600	0					
ANR	3791275	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791276	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791277	Identifier	s		3790600	0					
ANR	3791278	Identifier	quant_tables		3790600	1					
ANR	3791279	PrimaryExpression	0		3790600	1					
ANR	3791280	PrimaryExpression	1		3790600	1					
ANR	3791281	Identifier	i		3790600	1					
ANR	3791282	MultiplicativeExpression	ffv1_quant11 [ i ] * 11		3790600	1		*			
ANR	3791283	ArrayIndexing	ffv1_quant11 [ i ]		3790600	0					
ANR	3791284	Identifier	ffv1_quant11		3790600	0					
ANR	3791285	Identifier	i		3790600	1					
ANR	3791286	PrimaryExpression	11		3790600	1					
ANR	3791287	ExpressionStatement	s -> quant_tables [ 0 ] [ 2 ] [ i ] = ffv1_quant11 [ i ] * 11 * 11	265:12:4496:4548	3790600	2	True				
ANR	3791288	AssignmentExpression	s -> quant_tables [ 0 ] [ 2 ] [ i ] = ffv1_quant11 [ i ] * 11 * 11		3790600	0		=			
ANR	3791289	ArrayIndexing	s -> quant_tables [ 0 ] [ 2 ] [ i ]		3790600	0					
ANR	3791290	ArrayIndexing	s -> quant_tables [ 0 ] [ 2 ]		3790600	0					
ANR	3791291	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791292	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791293	Identifier	s		3790600	0					
ANR	3791294	Identifier	quant_tables		3790600	1					
ANR	3791295	PrimaryExpression	0		3790600	1					
ANR	3791296	PrimaryExpression	2		3790600	1					
ANR	3791297	Identifier	i		3790600	1					
ANR	3791298	MultiplicativeExpression	ffv1_quant11 [ i ] * 11 * 11		3790600	1		*			
ANR	3791299	ArrayIndexing	ffv1_quant11 [ i ]		3790600	0					
ANR	3791300	Identifier	ffv1_quant11		3790600	0					
ANR	3791301	Identifier	i		3790600	1					
ANR	3791302	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791303	PrimaryExpression	11		3790600	0					
ANR	3791304	PrimaryExpression	11		3790600	1					
ANR	3791305	ExpressionStatement	s -> quant_tables [ 1 ] [ 0 ] [ i ] = ffv1_quant11 [ i ]	267:12:4563:4605	3790600	3	True				
ANR	3791306	AssignmentExpression	s -> quant_tables [ 1 ] [ 0 ] [ i ] = ffv1_quant11 [ i ]		3790600	0		=			
ANR	3791307	ArrayIndexing	s -> quant_tables [ 1 ] [ 0 ] [ i ]		3790600	0					
ANR	3791308	ArrayIndexing	s -> quant_tables [ 1 ] [ 0 ]		3790600	0					
ANR	3791309	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791310	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791311	Identifier	s		3790600	0					
ANR	3791312	Identifier	quant_tables		3790600	1					
ANR	3791313	PrimaryExpression	1		3790600	1					
ANR	3791314	PrimaryExpression	0		3790600	1					
ANR	3791315	Identifier	i		3790600	1					
ANR	3791316	ArrayIndexing	ffv1_quant11 [ i ]		3790600	1					
ANR	3791317	Identifier	ffv1_quant11		3790600	0					
ANR	3791318	Identifier	i		3790600	1					
ANR	3791319	ExpressionStatement	s -> quant_tables [ 1 ] [ 1 ] [ i ] = ffv1_quant11 [ i ] * 11	269:12:4620:4667	3790600	4	True				
ANR	3791320	AssignmentExpression	s -> quant_tables [ 1 ] [ 1 ] [ i ] = ffv1_quant11 [ i ] * 11		3790600	0		=			
ANR	3791321	ArrayIndexing	s -> quant_tables [ 1 ] [ 1 ] [ i ]		3790600	0					
ANR	3791322	ArrayIndexing	s -> quant_tables [ 1 ] [ 1 ]		3790600	0					
ANR	3791323	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791324	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791325	Identifier	s		3790600	0					
ANR	3791326	Identifier	quant_tables		3790600	1					
ANR	3791327	PrimaryExpression	1		3790600	1					
ANR	3791328	PrimaryExpression	1		3790600	1					
ANR	3791329	Identifier	i		3790600	1					
ANR	3791330	MultiplicativeExpression	ffv1_quant11 [ i ] * 11		3790600	1		*			
ANR	3791331	ArrayIndexing	ffv1_quant11 [ i ]		3790600	0					
ANR	3791332	Identifier	ffv1_quant11		3790600	0					
ANR	3791333	Identifier	i		3790600	1					
ANR	3791334	PrimaryExpression	11		3790600	1					
ANR	3791335	ExpressionStatement	s -> quant_tables [ 1 ] [ 2 ] [ i ] = ffv1_quant5 [ i ] * 11 * 11	271:12:4682:4734	3790600	5	True				
ANR	3791336	AssignmentExpression	s -> quant_tables [ 1 ] [ 2 ] [ i ] = ffv1_quant5 [ i ] * 11 * 11		3790600	0		=			
ANR	3791337	ArrayIndexing	s -> quant_tables [ 1 ] [ 2 ] [ i ]		3790600	0					
ANR	3791338	ArrayIndexing	s -> quant_tables [ 1 ] [ 2 ]		3790600	0					
ANR	3791339	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791340	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791341	Identifier	s		3790600	0					
ANR	3791342	Identifier	quant_tables		3790600	1					
ANR	3791343	PrimaryExpression	1		3790600	1					
ANR	3791344	PrimaryExpression	2		3790600	1					
ANR	3791345	Identifier	i		3790600	1					
ANR	3791346	MultiplicativeExpression	ffv1_quant5 [ i ] * 11 * 11		3790600	1		*			
ANR	3791347	ArrayIndexing	ffv1_quant5 [ i ]		3790600	0					
ANR	3791348	Identifier	ffv1_quant5		3790600	0					
ANR	3791349	Identifier	i		3790600	1					
ANR	3791350	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791351	PrimaryExpression	11		3790600	0					
ANR	3791352	PrimaryExpression	11		3790600	1					
ANR	3791353	ExpressionStatement	s -> quant_tables [ 1 ] [ 3 ] [ i ] = ffv1_quant5 [ i ] * 5 * 11 * 11	273:12:4749:4806	3790600	6	True				
ANR	3791354	AssignmentExpression	s -> quant_tables [ 1 ] [ 3 ] [ i ] = ffv1_quant5 [ i ] * 5 * 11 * 11		3790600	0		=			
ANR	3791355	ArrayIndexing	s -> quant_tables [ 1 ] [ 3 ] [ i ]		3790600	0					
ANR	3791356	ArrayIndexing	s -> quant_tables [ 1 ] [ 3 ]		3790600	0					
ANR	3791357	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791358	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791359	Identifier	s		3790600	0					
ANR	3791360	Identifier	quant_tables		3790600	1					
ANR	3791361	PrimaryExpression	1		3790600	1					
ANR	3791362	PrimaryExpression	3		3790600	1					
ANR	3791363	Identifier	i		3790600	1					
ANR	3791364	MultiplicativeExpression	ffv1_quant5 [ i ] * 5 * 11 * 11		3790600	1		*			
ANR	3791365	ArrayIndexing	ffv1_quant5 [ i ]		3790600	0					
ANR	3791366	Identifier	ffv1_quant5		3790600	0					
ANR	3791367	Identifier	i		3790600	1					
ANR	3791368	MultiplicativeExpression	5 * 11 * 11		3790600	1		*			
ANR	3791369	PrimaryExpression	5		3790600	0					
ANR	3791370	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791371	PrimaryExpression	11		3790600	0					
ANR	3791372	PrimaryExpression	11		3790600	1					
ANR	3791373	ExpressionStatement	s -> quant_tables [ 1 ] [ 4 ] [ i ] = ffv1_quant5 [ i ] * 5 * 5 * 11 * 11	275:12:4821:4883	3790600	7	True				
ANR	3791374	AssignmentExpression	s -> quant_tables [ 1 ] [ 4 ] [ i ] = ffv1_quant5 [ i ] * 5 * 5 * 11 * 11		3790600	0		=			
ANR	3791375	ArrayIndexing	s -> quant_tables [ 1 ] [ 4 ] [ i ]		3790600	0					
ANR	3791376	ArrayIndexing	s -> quant_tables [ 1 ] [ 4 ]		3790600	0					
ANR	3791377	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791378	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791379	Identifier	s		3790600	0					
ANR	3791380	Identifier	quant_tables		3790600	1					
ANR	3791381	PrimaryExpression	1		3790600	1					
ANR	3791382	PrimaryExpression	4		3790600	1					
ANR	3791383	Identifier	i		3790600	1					
ANR	3791384	MultiplicativeExpression	ffv1_quant5 [ i ] * 5 * 5 * 11 * 11		3790600	1		*			
ANR	3791385	ArrayIndexing	ffv1_quant5 [ i ]		3790600	0					
ANR	3791386	Identifier	ffv1_quant5		3790600	0					
ANR	3791387	Identifier	i		3790600	1					
ANR	3791388	MultiplicativeExpression	5 * 5 * 11 * 11		3790600	1		*			
ANR	3791389	PrimaryExpression	5		3790600	0					
ANR	3791390	MultiplicativeExpression	5 * 11 * 11		3790600	1		*			
ANR	3791391	PrimaryExpression	5		3790600	0					
ANR	3791392	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791393	PrimaryExpression	11		3790600	0					
ANR	3791394	PrimaryExpression	11		3790600	1					
ANR	3791395	ElseStatement	else		3790600	0					
ANR	3791396	CompoundStatement		275:15:4840:4840	3790600	0					
ANR	3791397	ExpressionStatement	s -> quant_tables [ 0 ] [ 0 ] [ i ] = ffv1_quant9_10bit [ i ]	279:12:4916:4963	3790600	0	True				
ANR	3791398	AssignmentExpression	s -> quant_tables [ 0 ] [ 0 ] [ i ] = ffv1_quant9_10bit [ i ]		3790600	0		=			
ANR	3791399	ArrayIndexing	s -> quant_tables [ 0 ] [ 0 ] [ i ]		3790600	0					
ANR	3791400	ArrayIndexing	s -> quant_tables [ 0 ] [ 0 ]		3790600	0					
ANR	3791401	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791402	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791403	Identifier	s		3790600	0					
ANR	3791404	Identifier	quant_tables		3790600	1					
ANR	3791405	PrimaryExpression	0		3790600	1					
ANR	3791406	PrimaryExpression	0		3790600	1					
ANR	3791407	Identifier	i		3790600	1					
ANR	3791408	ArrayIndexing	ffv1_quant9_10bit [ i ]		3790600	1					
ANR	3791409	Identifier	ffv1_quant9_10bit		3790600	0					
ANR	3791410	Identifier	i		3790600	1					
ANR	3791411	ExpressionStatement	s -> quant_tables [ 0 ] [ 1 ] [ i ] = ffv1_quant9_10bit [ i ] * 11	281:12:4978:5030	3790600	1	True				
ANR	3791412	AssignmentExpression	s -> quant_tables [ 0 ] [ 1 ] [ i ] = ffv1_quant9_10bit [ i ] * 11		3790600	0		=			
ANR	3791413	ArrayIndexing	s -> quant_tables [ 0 ] [ 1 ] [ i ]		3790600	0					
ANR	3791414	ArrayIndexing	s -> quant_tables [ 0 ] [ 1 ]		3790600	0					
ANR	3791415	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791416	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791417	Identifier	s		3790600	0					
ANR	3791418	Identifier	quant_tables		3790600	1					
ANR	3791419	PrimaryExpression	0		3790600	1					
ANR	3791420	PrimaryExpression	1		3790600	1					
ANR	3791421	Identifier	i		3790600	1					
ANR	3791422	MultiplicativeExpression	ffv1_quant9_10bit [ i ] * 11		3790600	1		*			
ANR	3791423	ArrayIndexing	ffv1_quant9_10bit [ i ]		3790600	0					
ANR	3791424	Identifier	ffv1_quant9_10bit		3790600	0					
ANR	3791425	Identifier	i		3790600	1					
ANR	3791426	PrimaryExpression	11		3790600	1					
ANR	3791427	ExpressionStatement	s -> quant_tables [ 0 ] [ 2 ] [ i ] = ffv1_quant9_10bit [ i ] * 11 * 11	283:12:5045:5102	3790600	2	True				
ANR	3791428	AssignmentExpression	s -> quant_tables [ 0 ] [ 2 ] [ i ] = ffv1_quant9_10bit [ i ] * 11 * 11		3790600	0		=			
ANR	3791429	ArrayIndexing	s -> quant_tables [ 0 ] [ 2 ] [ i ]		3790600	0					
ANR	3791430	ArrayIndexing	s -> quant_tables [ 0 ] [ 2 ]		3790600	0					
ANR	3791431	ArrayIndexing	s -> quant_tables [ 0 ]		3790600	0					
ANR	3791432	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791433	Identifier	s		3790600	0					
ANR	3791434	Identifier	quant_tables		3790600	1					
ANR	3791435	PrimaryExpression	0		3790600	1					
ANR	3791436	PrimaryExpression	2		3790600	1					
ANR	3791437	Identifier	i		3790600	1					
ANR	3791438	MultiplicativeExpression	ffv1_quant9_10bit [ i ] * 11 * 11		3790600	1		*			
ANR	3791439	ArrayIndexing	ffv1_quant9_10bit [ i ]		3790600	0					
ANR	3791440	Identifier	ffv1_quant9_10bit		3790600	0					
ANR	3791441	Identifier	i		3790600	1					
ANR	3791442	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791443	PrimaryExpression	11		3790600	0					
ANR	3791444	PrimaryExpression	11		3790600	1					
ANR	3791445	ExpressionStatement	s -> quant_tables [ 1 ] [ 0 ] [ i ] = ffv1_quant9_10bit [ i ]	285:12:5117:5164	3790600	3	True				
ANR	3791446	AssignmentExpression	s -> quant_tables [ 1 ] [ 0 ] [ i ] = ffv1_quant9_10bit [ i ]		3790600	0		=			
ANR	3791447	ArrayIndexing	s -> quant_tables [ 1 ] [ 0 ] [ i ]		3790600	0					
ANR	3791448	ArrayIndexing	s -> quant_tables [ 1 ] [ 0 ]		3790600	0					
ANR	3791449	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791450	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791451	Identifier	s		3790600	0					
ANR	3791452	Identifier	quant_tables		3790600	1					
ANR	3791453	PrimaryExpression	1		3790600	1					
ANR	3791454	PrimaryExpression	0		3790600	1					
ANR	3791455	Identifier	i		3790600	1					
ANR	3791456	ArrayIndexing	ffv1_quant9_10bit [ i ]		3790600	1					
ANR	3791457	Identifier	ffv1_quant9_10bit		3790600	0					
ANR	3791458	Identifier	i		3790600	1					
ANR	3791459	ExpressionStatement	s -> quant_tables [ 1 ] [ 1 ] [ i ] = ffv1_quant9_10bit [ i ] * 11	287:12:5179:5231	3790600	4	True				
ANR	3791460	AssignmentExpression	s -> quant_tables [ 1 ] [ 1 ] [ i ] = ffv1_quant9_10bit [ i ] * 11		3790600	0		=			
ANR	3791461	ArrayIndexing	s -> quant_tables [ 1 ] [ 1 ] [ i ]		3790600	0					
ANR	3791462	ArrayIndexing	s -> quant_tables [ 1 ] [ 1 ]		3790600	0					
ANR	3791463	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791464	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791465	Identifier	s		3790600	0					
ANR	3791466	Identifier	quant_tables		3790600	1					
ANR	3791467	PrimaryExpression	1		3790600	1					
ANR	3791468	PrimaryExpression	1		3790600	1					
ANR	3791469	Identifier	i		3790600	1					
ANR	3791470	MultiplicativeExpression	ffv1_quant9_10bit [ i ] * 11		3790600	1		*			
ANR	3791471	ArrayIndexing	ffv1_quant9_10bit [ i ]		3790600	0					
ANR	3791472	Identifier	ffv1_quant9_10bit		3790600	0					
ANR	3791473	Identifier	i		3790600	1					
ANR	3791474	PrimaryExpression	11		3790600	1					
ANR	3791475	ExpressionStatement	s -> quant_tables [ 1 ] [ 2 ] [ i ] = ffv1_quant5_10bit [ i ] * 11 * 11	289:12:5246:5303	3790600	5	True				
ANR	3791476	AssignmentExpression	s -> quant_tables [ 1 ] [ 2 ] [ i ] = ffv1_quant5_10bit [ i ] * 11 * 11		3790600	0		=			
ANR	3791477	ArrayIndexing	s -> quant_tables [ 1 ] [ 2 ] [ i ]		3790600	0					
ANR	3791478	ArrayIndexing	s -> quant_tables [ 1 ] [ 2 ]		3790600	0					
ANR	3791479	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791480	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791481	Identifier	s		3790600	0					
ANR	3791482	Identifier	quant_tables		3790600	1					
ANR	3791483	PrimaryExpression	1		3790600	1					
ANR	3791484	PrimaryExpression	2		3790600	1					
ANR	3791485	Identifier	i		3790600	1					
ANR	3791486	MultiplicativeExpression	ffv1_quant5_10bit [ i ] * 11 * 11		3790600	1		*			
ANR	3791487	ArrayIndexing	ffv1_quant5_10bit [ i ]		3790600	0					
ANR	3791488	Identifier	ffv1_quant5_10bit		3790600	0					
ANR	3791489	Identifier	i		3790600	1					
ANR	3791490	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791491	PrimaryExpression	11		3790600	0					
ANR	3791492	PrimaryExpression	11		3790600	1					
ANR	3791493	ExpressionStatement	s -> quant_tables [ 1 ] [ 3 ] [ i ] = ffv1_quant5_10bit [ i ] * 5 * 11 * 11	291:12:5318:5380	3790600	6	True				
ANR	3791494	AssignmentExpression	s -> quant_tables [ 1 ] [ 3 ] [ i ] = ffv1_quant5_10bit [ i ] * 5 * 11 * 11		3790600	0		=			
ANR	3791495	ArrayIndexing	s -> quant_tables [ 1 ] [ 3 ] [ i ]		3790600	0					
ANR	3791496	ArrayIndexing	s -> quant_tables [ 1 ] [ 3 ]		3790600	0					
ANR	3791497	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791498	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791499	Identifier	s		3790600	0					
ANR	3791500	Identifier	quant_tables		3790600	1					
ANR	3791501	PrimaryExpression	1		3790600	1					
ANR	3791502	PrimaryExpression	3		3790600	1					
ANR	3791503	Identifier	i		3790600	1					
ANR	3791504	MultiplicativeExpression	ffv1_quant5_10bit [ i ] * 5 * 11 * 11		3790600	1		*			
ANR	3791505	ArrayIndexing	ffv1_quant5_10bit [ i ]		3790600	0					
ANR	3791506	Identifier	ffv1_quant5_10bit		3790600	0					
ANR	3791507	Identifier	i		3790600	1					
ANR	3791508	MultiplicativeExpression	5 * 11 * 11		3790600	1		*			
ANR	3791509	PrimaryExpression	5		3790600	0					
ANR	3791510	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791511	PrimaryExpression	11		3790600	0					
ANR	3791512	PrimaryExpression	11		3790600	1					
ANR	3791513	ExpressionStatement	s -> quant_tables [ 1 ] [ 4 ] [ i ] = ffv1_quant5_10bit [ i ] * 5 * 5 * 11 * 11	293:12:5395:5462	3790600	7	True				
ANR	3791514	AssignmentExpression	s -> quant_tables [ 1 ] [ 4 ] [ i ] = ffv1_quant5_10bit [ i ] * 5 * 5 * 11 * 11		3790600	0		=			
ANR	3791515	ArrayIndexing	s -> quant_tables [ 1 ] [ 4 ] [ i ]		3790600	0					
ANR	3791516	ArrayIndexing	s -> quant_tables [ 1 ] [ 4 ]		3790600	0					
ANR	3791517	ArrayIndexing	s -> quant_tables [ 1 ]		3790600	0					
ANR	3791518	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791519	Identifier	s		3790600	0					
ANR	3791520	Identifier	quant_tables		3790600	1					
ANR	3791521	PrimaryExpression	1		3790600	1					
ANR	3791522	PrimaryExpression	4		3790600	1					
ANR	3791523	Identifier	i		3790600	1					
ANR	3791524	MultiplicativeExpression	ffv1_quant5_10bit [ i ] * 5 * 5 * 11 * 11		3790600	1		*			
ANR	3791525	ArrayIndexing	ffv1_quant5_10bit [ i ]		3790600	0					
ANR	3791526	Identifier	ffv1_quant5_10bit		3790600	0					
ANR	3791527	Identifier	i		3790600	1					
ANR	3791528	MultiplicativeExpression	5 * 5 * 11 * 11		3790600	1		*			
ANR	3791529	PrimaryExpression	5		3790600	0					
ANR	3791530	MultiplicativeExpression	5 * 11 * 11		3790600	1		*			
ANR	3791531	PrimaryExpression	5		3790600	0					
ANR	3791532	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791533	PrimaryExpression	11		3790600	0					
ANR	3791534	PrimaryExpression	11		3790600	1					
ANR	3791535	ExpressionStatement	s -> context_count [ 0 ] = ( 11 * 11 * 11 + 1 ) / 2	299:4:5487:5538	3790600	16	True				
ANR	3791536	AssignmentExpression	s -> context_count [ 0 ] = ( 11 * 11 * 11 + 1 ) / 2		3790600	0		=			
ANR	3791537	ArrayIndexing	s -> context_count [ 0 ]		3790600	0					
ANR	3791538	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3791539	Identifier	s		3790600	0					
ANR	3791540	Identifier	context_count		3790600	1					
ANR	3791541	PrimaryExpression	0		3790600	1					
ANR	3791542	MultiplicativeExpression	( 11 * 11 * 11 + 1 ) / 2		3790600	1		/			
ANR	3791543	AdditiveExpression	11 * 11 * 11 + 1		3790600	0		+			
ANR	3791544	MultiplicativeExpression	11 * 11 * 11		3790600	0		*			
ANR	3791545	PrimaryExpression	11		3790600	0					
ANR	3791546	MultiplicativeExpression	11 * 11		3790600	1		*			
ANR	3791547	PrimaryExpression	11		3790600	0					
ANR	3791548	PrimaryExpression	11		3790600	1					
ANR	3791549	PrimaryExpression	1		3790600	1					
ANR	3791550	PrimaryExpression	2		3790600	1					
ANR	3791551	ExpressionStatement	s -> context_count [ 1 ] = ( 11 * 11 * 5 * 5 * 5 + 1 ) / 2	301:4:5545:5596	3790600	17	True				
ANR	3791552	AssignmentExpression	s -> context_count [ 1 ] = ( 11 * 11 * 5 * 5 * 5 + 1 ) / 2		3790600	0		=			
ANR	3791553	ArrayIndexing	s -> context_count [ 1 ]		3790600	0					
ANR	3791554	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3791555	Identifier	s		3790600	0					
ANR	3791556	Identifier	context_count		3790600	1					
ANR	3791557	PrimaryExpression	1		3790600	1					
ANR	3791558	MultiplicativeExpression	( 11 * 11 * 5 * 5 * 5 + 1 ) / 2		3790600	1		/			
ANR	3791559	AdditiveExpression	11 * 11 * 5 * 5 * 5 + 1		3790600	0		+			
ANR	3791560	MultiplicativeExpression	11 * 11 * 5 * 5 * 5		3790600	0		*			
ANR	3791561	PrimaryExpression	11		3790600	0					
ANR	3791562	MultiplicativeExpression	11 * 5 * 5 * 5		3790600	1		*			
ANR	3791563	PrimaryExpression	11		3790600	0					
ANR	3791564	MultiplicativeExpression	5 * 5 * 5		3790600	1		*			
ANR	3791565	PrimaryExpression	5		3790600	0					
ANR	3791566	MultiplicativeExpression	5 * 5		3790600	1		*			
ANR	3791567	PrimaryExpression	5		3790600	0					
ANR	3791568	PrimaryExpression	5		3790600	1					
ANR	3791569	PrimaryExpression	1		3790600	1					
ANR	3791570	PrimaryExpression	2		3790600	1					
ANR	3791571	ExpressionStatement	"memcpy ( s -> quant_table , s -> quant_tables [ avctx -> context_model ] , sizeof ( s -> quant_table ) )"	303:4:5603:5700	3790600	18	True				
ANR	3791572	CallExpression	"memcpy ( s -> quant_table , s -> quant_tables [ avctx -> context_model ] , sizeof ( s -> quant_table ) )"		3790600	0					
ANR	3791573	Callee	memcpy		3790600	0					
ANR	3791574	Identifier	memcpy		3790600	0					
ANR	3791575	ArgumentList	s -> quant_table		3790600	1					
ANR	3791576	Argument	s -> quant_table		3790600	0					
ANR	3791577	PtrMemberAccess	s -> quant_table		3790600	0					
ANR	3791578	Identifier	s		3790600	0					
ANR	3791579	Identifier	quant_table		3790600	1					
ANR	3791580	Argument	s -> quant_tables [ avctx -> context_model ]		3790600	1					
ANR	3791581	ArrayIndexing	s -> quant_tables [ avctx -> context_model ]		3790600	0					
ANR	3791582	PtrMemberAccess	s -> quant_tables		3790600	0					
ANR	3791583	Identifier	s		3790600	0					
ANR	3791584	Identifier	quant_tables		3790600	1					
ANR	3791585	PtrMemberAccess	avctx -> context_model		3790600	1					
ANR	3791586	Identifier	avctx		3790600	0					
ANR	3791587	Identifier	context_model		3790600	1					
ANR	3791588	Argument	sizeof ( s -> quant_table )		3790600	2					
ANR	3791589	SizeofExpression	sizeof ( s -> quant_table )		3790600	0					
ANR	3791590	Sizeof	sizeof		3790600	0					
ANR	3791591	PtrMemberAccess	s -> quant_table		3790600	1					
ANR	3791592	Identifier	s		3790600	0					
ANR	3791593	Identifier	quant_table		3790600	1					
ANR	3791594	ForStatement	for ( i = 0 ; i < s -> plane_count ; i ++ )		3790600	19					
ANR	3791595	ForInit	i = 0 ;	309:9:5714:5719	3790600	0	True				
ANR	3791596	AssignmentExpression	i = 0		3790600	0		=			
ANR	3791597	Identifier	i		3790600	0					
ANR	3791598	PrimaryExpression	0		3790600	1					
ANR	3791599	Condition	i < s -> plane_count	309:16:5721:5738	3790600	1	True				
ANR	3791600	RelationalExpression	i < s -> plane_count		3790600	0		<			
ANR	3791601	Identifier	i		3790600	0					
ANR	3791602	PtrMemberAccess	s -> plane_count		3790600	1					
ANR	3791603	Identifier	s		3790600	0					
ANR	3791604	Identifier	plane_count		3790600	1					
ANR	3791605	PostIncDecOperationExpression	i ++	309:36:5741:5743	3790600	2	True				
ANR	3791606	Identifier	i		3790600	0					
ANR	3791607	IncDec	++		3790600	1					
ANR	3791608	CompoundStatement		307:41:5685:5685	3790600	3					
ANR	3791609	Statement	PlaneContext	311:8:5757:5768	3790600	0	True				
ANR	3791610	Statement	*	311:21:5770:5770	3790600	1	True				
ANR	3791611	Statement	const	311:22:5771:5775	3790600	2	True				
ANR	3791612	ExpressionStatement	p = & s -> plane [ i ]	311:28:5777:5793	3790600	3	True				
ANR	3791613	AssignmentExpression	p = & s -> plane [ i ]		3790600	0		=			
ANR	3791614	Identifier	p		3790600	0					
ANR	3791615	UnaryOperationExpression	& s -> plane [ i ]		3790600	1					
ANR	3791616	UnaryOperator	&		3790600	0					
ANR	3791617	ArrayIndexing	s -> plane [ i ]		3790600	1					
ANR	3791618	PtrMemberAccess	s -> plane		3790600	0					
ANR	3791619	Identifier	s		3790600	0					
ANR	3791620	Identifier	plane		3790600	1					
ANR	3791621	Identifier	i		3790600	1					
ANR	3791622	ExpressionStatement	"memcpy ( p -> quant_table , s -> quant_table , sizeof ( p -> quant_table ) )"	315:8:5806:5868	3790600	4	True				
ANR	3791623	CallExpression	"memcpy ( p -> quant_table , s -> quant_table , sizeof ( p -> quant_table ) )"		3790600	0					
ANR	3791624	Callee	memcpy		3790600	0					
ANR	3791625	Identifier	memcpy		3790600	0					
ANR	3791626	ArgumentList	p -> quant_table		3790600	1					
ANR	3791627	Argument	p -> quant_table		3790600	0					
ANR	3791628	PtrMemberAccess	p -> quant_table		3790600	0					
ANR	3791629	Identifier	p		3790600	0					
ANR	3791630	Identifier	quant_table		3790600	1					
ANR	3791631	Argument	s -> quant_table		3790600	1					
ANR	3791632	PtrMemberAccess	s -> quant_table		3790600	0					
ANR	3791633	Identifier	s		3790600	0					
ANR	3791634	Identifier	quant_table		3790600	1					
ANR	3791635	Argument	sizeof ( p -> quant_table )		3790600	2					
ANR	3791636	SizeofExpression	sizeof ( p -> quant_table )		3790600	0					
ANR	3791637	Sizeof	sizeof		3790600	0					
ANR	3791638	PtrMemberAccess	p -> quant_table		3790600	1					
ANR	3791639	Identifier	p		3790600	0					
ANR	3791640	Identifier	quant_table		3790600	1					
ANR	3791641	ExpressionStatement	p -> quant_table_index = avctx -> context_model	317:8:5879:5922	3790600	5	True				
ANR	3791642	AssignmentExpression	p -> quant_table_index = avctx -> context_model		3790600	0		=			
ANR	3791643	PtrMemberAccess	p -> quant_table_index		3790600	0					
ANR	3791644	Identifier	p		3790600	0					
ANR	3791645	Identifier	quant_table_index		3790600	1					
ANR	3791646	PtrMemberAccess	avctx -> context_model		3790600	1					
ANR	3791647	Identifier	avctx		3790600	0					
ANR	3791648	Identifier	context_model		3790600	1					
ANR	3791649	ExpressionStatement	p -> context_count = s -> context_count [ p -> quant_table_index ]	319:8:5933:5994	3790600	6	True				
ANR	3791650	AssignmentExpression	p -> context_count = s -> context_count [ p -> quant_table_index ]		3790600	0		=			
ANR	3791651	PtrMemberAccess	p -> context_count		3790600	0					
ANR	3791652	Identifier	p		3790600	0					
ANR	3791653	Identifier	context_count		3790600	1					
ANR	3791654	ArrayIndexing	s -> context_count [ p -> quant_table_index ]		3790600	1					
ANR	3791655	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3791656	Identifier	s		3790600	0					
ANR	3791657	Identifier	context_count		3790600	1					
ANR	3791658	PtrMemberAccess	p -> quant_table_index		3790600	1					
ANR	3791659	Identifier	p		3790600	0					
ANR	3791660	Identifier	quant_table_index		3790600	1					
ANR	3791661	IfStatement	if ( ( ret = ffv1_allocate_initial_states ( s ) ) < 0 )		3790600	20					
ANR	3791662	Condition	( ret = ffv1_allocate_initial_states ( s ) ) < 0	325:8:6014:6056	3790600	0	True				
ANR	3791663	RelationalExpression	( ret = ffv1_allocate_initial_states ( s ) ) < 0		3790600	0		<			
ANR	3791664	AssignmentExpression	ret = ffv1_allocate_initial_states ( s )		3790600	0		=			
ANR	3791665	Identifier	ret		3790600	0					
ANR	3791666	CallExpression	ffv1_allocate_initial_states ( s )		3790600	1					
ANR	3791667	Callee	ffv1_allocate_initial_states		3790600	0					
ANR	3791668	Identifier	ffv1_allocate_initial_states		3790600	0					
ANR	3791669	ArgumentList	s		3790600	1					
ANR	3791670	Argument	s		3790600	0					
ANR	3791671	Identifier	s		3790600	0					
ANR	3791672	PrimaryExpression	0		3790600	1					
ANR	3791673	ReturnStatement	return ret ;	327:8:6068:6078	3790600	1	True				
ANR	3791674	Identifier	ret		3790600	0					
ANR	3791675	ExpressionStatement	avctx -> coded_frame = av_frame_alloc ( )	331:4:6087:6124	3790600	21	True				
ANR	3791676	AssignmentExpression	avctx -> coded_frame = av_frame_alloc ( )		3790600	0		=			
ANR	3791677	PtrMemberAccess	avctx -> coded_frame		3790600	0					
ANR	3791678	Identifier	avctx		3790600	0					
ANR	3791679	Identifier	coded_frame		3790600	1					
ANR	3791680	CallExpression	av_frame_alloc ( )		3790600	1					
ANR	3791681	Callee	av_frame_alloc		3790600	0					
ANR	3791682	Identifier	av_frame_alloc		3790600	0					
ANR	3791683	ArgumentList			3790600	1					
ANR	3791684	IfStatement	if ( ! avctx -> coded_frame )		3790600	22					
ANR	3791685	Condition	! avctx -> coded_frame	333:8:6135:6153	3790600	0	True				
ANR	3791686	UnaryOperationExpression	! avctx -> coded_frame		3790600	0					
ANR	3791687	UnaryOperator	!		3790600	0					
ANR	3791688	PtrMemberAccess	avctx -> coded_frame		3790600	1					
ANR	3791689	Identifier	avctx		3790600	0					
ANR	3791690	Identifier	coded_frame		3790600	1					
ANR	3791691	ReturnStatement	return AVERROR ( ENOMEM ) ;	335:8:6165:6187	3790600	1	True				
ANR	3791692	CallExpression	AVERROR ( ENOMEM )		3790600	0					
ANR	3791693	Callee	AVERROR		3790600	0					
ANR	3791694	Identifier	AVERROR		3790600	0					
ANR	3791695	ArgumentList	ENOMEM		3790600	1					
ANR	3791696	Argument	ENOMEM		3790600	0					
ANR	3791697	Identifier	ENOMEM		3790600	0					
ANR	3791698	ExpressionStatement	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I	339:4:6196:6245	3790600	23	True				
ANR	3791699	AssignmentExpression	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I		3790600	0		=			
ANR	3791700	PtrMemberAccess	avctx -> coded_frame -> pict_type		3790600	0					
ANR	3791701	PtrMemberAccess	avctx -> coded_frame		3790600	0					
ANR	3791702	Identifier	avctx		3790600	0					
ANR	3791703	Identifier	coded_frame		3790600	1					
ANR	3791704	Identifier	pict_type		3790600	1					
ANR	3791705	Identifier	AV_PICTURE_TYPE_I		3790600	1					
ANR	3791706	IfStatement	if ( ! s -> transparency )		3790600	24					
ANR	3791707	Condition	! s -> transparency	343:8:6258:6273	3790600	0	True				
ANR	3791708	UnaryOperationExpression	! s -> transparency		3790600	0					
ANR	3791709	UnaryOperator	!		3790600	0					
ANR	3791710	PtrMemberAccess	s -> transparency		3790600	1					
ANR	3791711	Identifier	s		3790600	0					
ANR	3791712	Identifier	transparency		3790600	1					
ANR	3791713	ExpressionStatement	s -> plane_count = 2	345:8:6285:6303	3790600	1	True				
ANR	3791714	AssignmentExpression	s -> plane_count = 2		3790600	0		=			
ANR	3791715	PtrMemberAccess	s -> plane_count		3790600	0					
ANR	3791716	Identifier	s		3790600	0					
ANR	3791717	Identifier	plane_count		3790600	1					
ANR	3791718	PrimaryExpression	2		3790600	1					
ANR	3791719	ExpressionStatement	"av_pix_fmt_get_chroma_sub_sample ( avctx -> pix_fmt , & s -> chroma_h_shift , & s -> chroma_v_shift )"	349:4:6312:6438	3790600	25	True				
ANR	3791720	CallExpression	"av_pix_fmt_get_chroma_sub_sample ( avctx -> pix_fmt , & s -> chroma_h_shift , & s -> chroma_v_shift )"		3790600	0					
ANR	3791721	Callee	av_pix_fmt_get_chroma_sub_sample		3790600	0					
ANR	3791722	Identifier	av_pix_fmt_get_chroma_sub_sample		3790600	0					
ANR	3791723	ArgumentList	avctx -> pix_fmt		3790600	1					
ANR	3791724	Argument	avctx -> pix_fmt		3790600	0					
ANR	3791725	PtrMemberAccess	avctx -> pix_fmt		3790600	0					
ANR	3791726	Identifier	avctx		3790600	0					
ANR	3791727	Identifier	pix_fmt		3790600	1					
ANR	3791728	Argument	& s -> chroma_h_shift		3790600	1					
ANR	3791729	UnaryOperationExpression	& s -> chroma_h_shift		3790600	0					
ANR	3791730	UnaryOperator	&		3790600	0					
ANR	3791731	PtrMemberAccess	s -> chroma_h_shift		3790600	1					
ANR	3791732	Identifier	s		3790600	0					
ANR	3791733	Identifier	chroma_h_shift		3790600	1					
ANR	3791734	Argument	& s -> chroma_v_shift		3790600	2					
ANR	3791735	UnaryOperationExpression	& s -> chroma_v_shift		3790600	0					
ANR	3791736	UnaryOperator	&		3790600	0					
ANR	3791737	PtrMemberAccess	s -> chroma_v_shift		3790600	1					
ANR	3791738	Identifier	s		3790600	0					
ANR	3791739	Identifier	chroma_v_shift		3790600	1					
ANR	3791740	ExpressionStatement	s -> picture_number = 0	355:4:6447:6468	3790600	26	True				
ANR	3791741	AssignmentExpression	s -> picture_number = 0		3790600	0		=			
ANR	3791742	PtrMemberAccess	s -> picture_number		3790600	0					
ANR	3791743	Identifier	s		3790600	0					
ANR	3791744	Identifier	picture_number		3790600	1					
ANR	3791745	PrimaryExpression	0		3790600	1					
ANR	3791746	IfStatement	if ( avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 ) )		3790600	27					
ANR	3791747	Condition	avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 )	359:8:6481:6532	3790600	0	True				
ANR	3791748	BitAndExpression	avctx -> flags & ( CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2 )		3790600	0		&			
ANR	3791749	PtrMemberAccess	avctx -> flags		3790600	0					
ANR	3791750	Identifier	avctx		3790600	0					
ANR	3791751	Identifier	flags		3790600	1					
ANR	3791752	InclusiveOrExpression	CODEC_FLAG_PASS1 | CODEC_FLAG_PASS2		3790600	1		|			
ANR	3791753	Identifier	CODEC_FLAG_PASS1		3790600	0					
ANR	3791754	Identifier	CODEC_FLAG_PASS2		3790600	1					
ANR	3791755	CompoundStatement		357:62:6474:6474	3790600	1					
ANR	3791756	ForStatement	for ( i = 0 ; i < s -> quant_table_count ; i ++ )		3790600	0					
ANR	3791757	ForInit	i = 0 ;	361:13:6551:6556	3790600	0	True				
ANR	3791758	AssignmentExpression	i = 0		3790600	0		=			
ANR	3791759	Identifier	i		3790600	0					
ANR	3791760	PrimaryExpression	0		3790600	1					
ANR	3791761	Condition	i < s -> quant_table_count	361:20:6558:6581	3790600	1	True				
ANR	3791762	RelationalExpression	i < s -> quant_table_count		3790600	0		<			
ANR	3791763	Identifier	i		3790600	0					
ANR	3791764	PtrMemberAccess	s -> quant_table_count		3790600	1					
ANR	3791765	Identifier	s		3790600	0					
ANR	3791766	Identifier	quant_table_count		3790600	1					
ANR	3791767	PostIncDecOperationExpression	i ++	361:46:6584:6586	3790600	2	True				
ANR	3791768	Identifier	i		3790600	0					
ANR	3791769	IncDec	++		3790600	1					
ANR	3791770	CompoundStatement		359:51:6528:6528	3790600	3					
ANR	3791771	ExpressionStatement	s -> rc_stat2 [ i ] = av_mallocz ( s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] ) )	363:12:6604:6719	3790600	0	True				
ANR	3791772	AssignmentExpression	s -> rc_stat2 [ i ] = av_mallocz ( s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] ) )		3790600	0		=			
ANR	3791773	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3791774	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3791775	Identifier	s		3790600	0					
ANR	3791776	Identifier	rc_stat2		3790600	1					
ANR	3791777	Identifier	i		3790600	1					
ANR	3791778	CallExpression	av_mallocz ( s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] ) )		3790600	1					
ANR	3791779	Callee	av_mallocz		3790600	0					
ANR	3791780	Identifier	av_mallocz		3790600	0					
ANR	3791781	ArgumentList	s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] )		3790600	1					
ANR	3791782	Argument	s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] )		3790600	0					
ANR	3791783	MultiplicativeExpression	s -> context_count [ i ] * sizeof ( * s -> rc_stat2 [ i ] )		3790600	0		*			
ANR	3791784	ArrayIndexing	s -> context_count [ i ]		3790600	0					
ANR	3791785	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3791786	Identifier	s		3790600	0					
ANR	3791787	Identifier	context_count		3790600	1					
ANR	3791788	Identifier	i		3790600	1					
ANR	3791789	SizeofExpression	sizeof ( * s -> rc_stat2 [ i ] )		3790600	1					
ANR	3791790	Sizeof	sizeof		3790600	0					
ANR	3791791	UnaryOperationExpression	* s -> rc_stat2 [ i ]		3790600	1					
ANR	3791792	UnaryOperator	*		3790600	0					
ANR	3791793	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	1					
ANR	3791794	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3791795	Identifier	s		3790600	0					
ANR	3791796	Identifier	rc_stat2		3790600	1					
ANR	3791797	Identifier	i		3790600	1					
ANR	3791798	IfStatement	if ( ! s -> rc_stat2 [ i ] )		3790600	1					
ANR	3791799	Condition	! s -> rc_stat2 [ i ]	367:16:6738:6752	3790600	0	True				
ANR	3791800	UnaryOperationExpression	! s -> rc_stat2 [ i ]		3790600	0					
ANR	3791801	UnaryOperator	!		3790600	0					
ANR	3791802	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	1					
ANR	3791803	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3791804	Identifier	s		3790600	0					
ANR	3791805	Identifier	rc_stat2		3790600	1					
ANR	3791806	Identifier	i		3790600	1					
ANR	3791807	ReturnStatement	return AVERROR ( ENOMEM ) ;	369:16:6772:6794	3790600	1	True				
ANR	3791808	CallExpression	AVERROR ( ENOMEM )		3790600	0					
ANR	3791809	Callee	AVERROR		3790600	0					
ANR	3791810	Identifier	AVERROR		3790600	0					
ANR	3791811	ArgumentList	ENOMEM		3790600	1					
ANR	3791812	Argument	ENOMEM		3790600	0					
ANR	3791813	Identifier	ENOMEM		3790600	0					
ANR	3791814	IfStatement	if ( avctx -> stats_in )		3790600	28					
ANR	3791815	Condition	avctx -> stats_in	375:8:6823:6837	3790600	0	True				
ANR	3791816	PtrMemberAccess	avctx -> stats_in		3790600	0					
ANR	3791817	Identifier	avctx		3790600	0					
ANR	3791818	Identifier	stats_in		3790600	1					
ANR	3791819	CompoundStatement		381:8:6893:6903	3790600	1					
ANR	3791820	IdentifierDeclStatement	char * p = avctx -> stats_in ;	377:8:6851:6876	3790600	0	True				
ANR	3791821	IdentifierDecl	* p = avctx -> stats_in		3790600	0					
ANR	3791822	IdentifierDeclType	char *		3790600	0					
ANR	3791823	Identifier	p		3790600	1					
ANR	3791824	AssignmentExpression	* p = avctx -> stats_in		3790600	2		=			
ANR	3791825	Identifier	p		3790600	0					
ANR	3791826	PtrMemberAccess	avctx -> stats_in		3790600	1					
ANR	3791827	Identifier	avctx		3790600	0					
ANR	3791828	Identifier	stats_in		3790600	1					
ANR	3791829	Statement	uint8_t	379:8:6887:6893	3790600	1	True				
ANR	3791830	ExpressionStatement	best_state [ 256 ] [ 256 ]	379:16:6895:6915	3790600	2	True				
ANR	3791831	ArrayIndexing	best_state [ 256 ] [ 256 ]		3790600	0					
ANR	3791832	ArrayIndexing	best_state [ 256 ]		3790600	0					
ANR	3791833	Identifier	best_state		3790600	0					
ANR	3791834	PrimaryExpression	256		3790600	1					
ANR	3791835	PrimaryExpression	256		3790600	1					
ANR	3791836	IdentifierDeclStatement	int gob_count = 0 ;	381:8:6926:6943	3790600	3	True				
ANR	3791837	IdentifierDecl	gob_count = 0		3790600	0					
ANR	3791838	IdentifierDeclType	int		3790600	0					
ANR	3791839	Identifier	gob_count		3790600	1					
ANR	3791840	AssignmentExpression	gob_count = 0		3790600	2		=			
ANR	3791841	Identifier	gob_count		3790600	0					
ANR	3791842	PrimaryExpression	0		3790600	1					
ANR	3791843	IdentifierDeclStatement	char * next ;	383:8:6954:6964	3790600	4	True				
ANR	3791844	IdentifierDecl	* next		3790600	0					
ANR	3791845	IdentifierDeclType	char *		3790600	0					
ANR	3791846	Identifier	next		3790600	1					
ANR	3791847	ExpressionStatement	av_assert0 ( s -> version >= 2 )	387:8:6977:7004	3790600	5	True				
ANR	3791848	CallExpression	av_assert0 ( s -> version >= 2 )		3790600	0					
ANR	3791849	Callee	av_assert0		3790600	0					
ANR	3791850	Identifier	av_assert0		3790600	0					
ANR	3791851	ArgumentList	s -> version >= 2		3790600	1					
ANR	3791852	Argument	s -> version >= 2		3790600	0					
ANR	3791853	RelationalExpression	s -> version >= 2		3790600	0		>=			
ANR	3791854	PtrMemberAccess	s -> version		3790600	0					
ANR	3791855	Identifier	s		3790600	0					
ANR	3791856	Identifier	version		3790600	1					
ANR	3791857	PrimaryExpression	2		3790600	1					
ANR	3791858	ForStatement	for ( ; ; )		3790600	6					
ANR	3791859	CompoundStatement		389:18:6966:6966	3790600	0					
ANR	3791860	ForStatement	for ( j = 0 ; j < 256 ; j ++ )		3790600	0					
ANR	3791861	ForInit	j = 0 ;	393:17:7047:7052	3790600	0	True				
ANR	3791862	AssignmentExpression	j = 0		3790600	0		=			
ANR	3791863	Identifier	j		3790600	0					
ANR	3791864	PrimaryExpression	0		3790600	1					
ANR	3791865	Condition	j < 256	393:24:7054:7060	3790600	1	True				
ANR	3791866	RelationalExpression	j < 256		3790600	0		<			
ANR	3791867	Identifier	j		3790600	0					
ANR	3791868	PrimaryExpression	256		3790600	1					
ANR	3791869	PostIncDecOperationExpression	j ++	393:33:7063:7065	3790600	2	True				
ANR	3791870	Identifier	j		3790600	0					
ANR	3791871	IncDec	++		3790600	1					
ANR	3791872	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3790600	3					
ANR	3791873	ForInit	i = 0 ;	395:21:7090:7095	3790600	0	True				
ANR	3791874	AssignmentExpression	i = 0		3790600	0		=			
ANR	3791875	Identifier	i		3790600	0					
ANR	3791876	PrimaryExpression	0		3790600	1					
ANR	3791877	Condition	i < 2	395:28:7097:7101	3790600	1	True				
ANR	3791878	RelationalExpression	i < 2		3790600	0		<			
ANR	3791879	Identifier	i		3790600	0					
ANR	3791880	PrimaryExpression	2		3790600	1					
ANR	3791881	PostIncDecOperationExpression	i ++	395:35:7104:7106	3790600	2	True				
ANR	3791882	Identifier	i		3790600	0					
ANR	3791883	IncDec	++		3790600	1					
ANR	3791884	CompoundStatement		393:40:7048:7048	3790600	3					
ANR	3791885	ExpressionStatement	"s -> rc_stat [ j ] [ i ] = strtol ( p , & next , 0 )"	397:20:7132:7170	3790600	0	True				
ANR	3791886	AssignmentExpression	"s -> rc_stat [ j ] [ i ] = strtol ( p , & next , 0 )"		3790600	0		=			
ANR	3791887	ArrayIndexing	s -> rc_stat [ j ] [ i ]		3790600	0					
ANR	3791888	ArrayIndexing	s -> rc_stat [ j ]		3790600	0					
ANR	3791889	PtrMemberAccess	s -> rc_stat		3790600	0					
ANR	3791890	Identifier	s		3790600	0					
ANR	3791891	Identifier	rc_stat		3790600	1					
ANR	3791892	Identifier	j		3790600	1					
ANR	3791893	Identifier	i		3790600	1					
ANR	3791894	CallExpression	"strtol ( p , & next , 0 )"		3790600	1					
ANR	3791895	Callee	strtol		3790600	0					
ANR	3791896	Identifier	strtol		3790600	0					
ANR	3791897	ArgumentList	p		3790600	1					
ANR	3791898	Argument	p		3790600	0					
ANR	3791899	Identifier	p		3790600	0					
ANR	3791900	Argument	& next		3790600	1					
ANR	3791901	UnaryOperationExpression	& next		3790600	0					
ANR	3791902	UnaryOperator	&		3790600	0					
ANR	3791903	Identifier	next		3790600	1					
ANR	3791904	Argument	0		3790600	2					
ANR	3791905	PrimaryExpression	0		3790600	0					
ANR	3791906	IfStatement	if ( next == p )		3790600	1					
ANR	3791907	Condition	next == p	399:24:7197:7205	3790600	0	True				
ANR	3791908	EqualityExpression	next == p		3790600	0		==			
ANR	3791909	Identifier	next		3790600	0					
ANR	3791910	Identifier	p		3790600	1					
ANR	3791911	CompoundStatement		397:35:7147:7147	3790600	1					
ANR	3791912	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid at %d %d [%s]\\n"" , j , i , p )"	401:24:7235:7341	3790600	0	True				
ANR	3791913	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid at %d %d [%s]\\n"" , j , i , p )"		3790600	0					
ANR	3791914	Callee	av_log		3790600	0					
ANR	3791915	Identifier	av_log		3790600	0					
ANR	3791916	ArgumentList	avctx		3790600	1					
ANR	3791917	Argument	avctx		3790600	0					
ANR	3791918	Identifier	avctx		3790600	0					
ANR	3791919	Argument	AV_LOG_ERROR		3790600	1					
ANR	3791920	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3791921	Argument	"""2Pass file invalid at %d %d [%s]\\n"""		3790600	2					
ANR	3791922	PrimaryExpression	"""2Pass file invalid at %d %d [%s]\\n"""		3790600	0					
ANR	3791923	Argument	j		3790600	3					
ANR	3791924	Identifier	j		3790600	0					
ANR	3791925	Argument	i		3790600	4					
ANR	3791926	Identifier	i		3790600	0					
ANR	3791927	Argument	p		3790600	5					
ANR	3791928	Identifier	p		3790600	0					
ANR	3791929	ReturnStatement	return AVERROR_INVALIDDATA ;	405:24:7368:7394	3790600	1	True				
ANR	3791930	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3791931	ExpressionStatement	p = next	409:20:7440:7448	3790600	2	True				
ANR	3791932	AssignmentExpression	p = next		3790600	0		=			
ANR	3791933	Identifier	p		3790600	0					
ANR	3791934	Identifier	next		3790600	1					
ANR	3791935	ForStatement	for ( i = 0 ; i < s -> quant_table_count ; i ++ )		3790600	1					
ANR	3791936	ForInit	i = 0 ;	413:17:7487:7492	3790600	0	True				
ANR	3791937	AssignmentExpression	i = 0		3790600	0		=			
ANR	3791938	Identifier	i		3790600	0					
ANR	3791939	PrimaryExpression	0		3790600	1					
ANR	3791940	Condition	i < s -> quant_table_count	413:24:7494:7517	3790600	1	True				
ANR	3791941	RelationalExpression	i < s -> quant_table_count		3790600	0		<			
ANR	3791942	Identifier	i		3790600	0					
ANR	3791943	PtrMemberAccess	s -> quant_table_count		3790600	1					
ANR	3791944	Identifier	s		3790600	0					
ANR	3791945	Identifier	quant_table_count		3790600	1					
ANR	3791946	PostIncDecOperationExpression	i ++	413:50:7520:7522	3790600	2	True				
ANR	3791947	Identifier	i		3790600	0					
ANR	3791948	IncDec	++		3790600	1					
ANR	3791949	ForStatement	for ( j = 0 ; j < s -> context_count [ i ] ; j ++ )		3790600	3					
ANR	3791950	ForInit	j = 0 ;	415:21:7547:7552	3790600	0	True				
ANR	3791951	AssignmentExpression	j = 0		3790600	0		=			
ANR	3791952	Identifier	j		3790600	0					
ANR	3791953	PrimaryExpression	0		3790600	1					
ANR	3791954	Condition	j < s -> context_count [ i ]	415:28:7554:7576	3790600	1	True				
ANR	3791955	RelationalExpression	j < s -> context_count [ i ]		3790600	0		<			
ANR	3791956	Identifier	j		3790600	0					
ANR	3791957	ArrayIndexing	s -> context_count [ i ]		3790600	1					
ANR	3791958	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3791959	Identifier	s		3790600	0					
ANR	3791960	Identifier	context_count		3790600	1					
ANR	3791961	Identifier	i		3790600	1					
ANR	3791962	PostIncDecOperationExpression	j ++	415:53:7579:7581	3790600	2	True				
ANR	3791963	Identifier	j		3790600	0					
ANR	3791964	IncDec	++		3790600	1					
ANR	3791965	CompoundStatement		413:58:7523:7523	3790600	3					
ANR	3791966	ForStatement	for ( k = 0 ; k < 32 ; k ++ )		3790600	0					
ANR	3791967	ForInit	k = 0 ;	417:25:7612:7617	3790600	0	True				
ANR	3791968	AssignmentExpression	k = 0		3790600	0		=			
ANR	3791969	Identifier	k		3790600	0					
ANR	3791970	PrimaryExpression	0		3790600	1					
ANR	3791971	Condition	k < 32	417:32:7619:7624	3790600	1	True				
ANR	3791972	RelationalExpression	k < 32		3790600	0		<			
ANR	3791973	Identifier	k		3790600	0					
ANR	3791974	PrimaryExpression	32		3790600	1					
ANR	3791975	PostIncDecOperationExpression	k ++	417:40:7627:7629	3790600	2	True				
ANR	3791976	Identifier	k		3790600	0					
ANR	3791977	IncDec	++		3790600	1					
ANR	3791978	ForStatement	for ( m = 0 ; m < 2 ; m ++ )		3790600	3					
ANR	3791979	ForInit	m = 0 ;	419:29:7662:7667	3790600	0	True				
ANR	3791980	AssignmentExpression	m = 0		3790600	0		=			
ANR	3791981	Identifier	m		3790600	0					
ANR	3791982	PrimaryExpression	0		3790600	1					
ANR	3791983	Condition	m < 2	419:36:7669:7673	3790600	1	True				
ANR	3791984	RelationalExpression	m < 2		3790600	0		<			
ANR	3791985	Identifier	m		3790600	0					
ANR	3791986	PrimaryExpression	2		3790600	1					
ANR	3791987	PostIncDecOperationExpression	m ++	419:43:7676:7678	3790600	2	True				
ANR	3791988	Identifier	m		3790600	0					
ANR	3791989	IncDec	++		3790600	1					
ANR	3791990	CompoundStatement		417:48:7620:7620	3790600	3					
ANR	3791991	ExpressionStatement	"s -> rc_stat2 [ i ] [ j ] [ k ] [ m ] = strtol ( p , & next , 0 )"	421:28:7712:7757	3790600	0	True				
ANR	3791992	AssignmentExpression	"s -> rc_stat2 [ i ] [ j ] [ k ] [ m ] = strtol ( p , & next , 0 )"		3790600	0		=			
ANR	3791993	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ m ]		3790600	0					
ANR	3791994	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3791995	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3791996	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3791997	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3791998	Identifier	s		3790600	0					
ANR	3791999	Identifier	rc_stat2		3790600	1					
ANR	3792000	Identifier	i		3790600	1					
ANR	3792001	Identifier	j		3790600	1					
ANR	3792002	Identifier	k		3790600	1					
ANR	3792003	Identifier	m		3790600	1					
ANR	3792004	CallExpression	"strtol ( p , & next , 0 )"		3790600	1					
ANR	3792005	Callee	strtol		3790600	0					
ANR	3792006	Identifier	strtol		3790600	0					
ANR	3792007	ArgumentList	p		3790600	1					
ANR	3792008	Argument	p		3790600	0					
ANR	3792009	Identifier	p		3790600	0					
ANR	3792010	Argument	& next		3790600	1					
ANR	3792011	UnaryOperationExpression	& next		3790600	0					
ANR	3792012	UnaryOperator	&		3790600	0					
ANR	3792013	Identifier	next		3790600	1					
ANR	3792014	Argument	0		3790600	2					
ANR	3792015	PrimaryExpression	0		3790600	0					
ANR	3792016	IfStatement	if ( next == p )		3790600	1					
ANR	3792017	Condition	next == p	423:32:7792:7800	3790600	0	True				
ANR	3792018	EqualityExpression	next == p		3790600	0		==			
ANR	3792019	Identifier	next		3790600	0					
ANR	3792020	Identifier	p		3790600	1					
ANR	3792021	CompoundStatement		421:43:7742:7742	3790600	1					
ANR	3792022	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid at %d %d %d %d [%s]\\n"" , i , j , k , m , p )"	425:32:7838:8004	3790600	0	True				
ANR	3792023	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid at %d %d %d %d [%s]\\n"" , i , j , k , m , p )"		3790600	0					
ANR	3792024	Callee	av_log		3790600	0					
ANR	3792025	Identifier	av_log		3790600	0					
ANR	3792026	ArgumentList	avctx		3790600	1					
ANR	3792027	Argument	avctx		3790600	0					
ANR	3792028	Identifier	avctx		3790600	0					
ANR	3792029	Argument	AV_LOG_ERROR		3790600	1					
ANR	3792030	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3792031	Argument	"""2Pass file invalid at %d %d %d %d [%s]\\n"""		3790600	2					
ANR	3792032	PrimaryExpression	"""2Pass file invalid at %d %d %d %d [%s]\\n"""		3790600	0					
ANR	3792033	Argument	i		3790600	3					
ANR	3792034	Identifier	i		3790600	0					
ANR	3792035	Argument	j		3790600	4					
ANR	3792036	Identifier	j		3790600	0					
ANR	3792037	Argument	k		3790600	5					
ANR	3792038	Identifier	k		3790600	0					
ANR	3792039	Argument	m		3790600	6					
ANR	3792040	Identifier	m		3790600	0					
ANR	3792041	Argument	p		3790600	7					
ANR	3792042	Identifier	p		3790600	0					
ANR	3792043	ReturnStatement	return AVERROR_INVALIDDATA ;	431:32:8039:8065	3790600	1	True				
ANR	3792044	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3792045	ExpressionStatement	p = next	435:28:8127:8135	3790600	2	True				
ANR	3792046	AssignmentExpression	p = next		3790600	0		=			
ANR	3792047	Identifier	p		3790600	0					
ANR	3792048	Identifier	next		3790600	1					
ANR	3792049	ExpressionStatement	"gob_count = strtol ( p , & next , 0 )"	441:12:8196:8227	3790600	2	True				
ANR	3792050	AssignmentExpression	"gob_count = strtol ( p , & next , 0 )"		3790600	0		=			
ANR	3792051	Identifier	gob_count		3790600	0					
ANR	3792052	CallExpression	"strtol ( p , & next , 0 )"		3790600	1					
ANR	3792053	Callee	strtol		3790600	0					
ANR	3792054	Identifier	strtol		3790600	0					
ANR	3792055	ArgumentList	p		3790600	1					
ANR	3792056	Argument	p		3790600	0					
ANR	3792057	Identifier	p		3790600	0					
ANR	3792058	Argument	& next		3790600	1					
ANR	3792059	UnaryOperationExpression	& next		3790600	0					
ANR	3792060	UnaryOperator	&		3790600	0					
ANR	3792061	Identifier	next		3790600	1					
ANR	3792062	Argument	0		3790600	2					
ANR	3792063	PrimaryExpression	0		3790600	0					
ANR	3792064	IfStatement	if ( next == p || gob_count <= 0 )		3790600	3					
ANR	3792065	Condition	next == p || gob_count <= 0	443:16:8246:8272	3790600	0	True				
ANR	3792066	OrExpression	next == p || gob_count <= 0		3790600	0		||			
ANR	3792067	EqualityExpression	next == p		3790600	0		==			
ANR	3792068	Identifier	next		3790600	0					
ANR	3792069	Identifier	p		3790600	1					
ANR	3792070	RelationalExpression	gob_count <= 0		3790600	1		<=			
ANR	3792071	Identifier	gob_count		3790600	0					
ANR	3792072	PrimaryExpression	0		3790600	1					
ANR	3792073	CompoundStatement		441:45:8214:8214	3790600	1					
ANR	3792074	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid\\n"" )"	445:16:8294:8345	3790600	0	True				
ANR	3792075	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""2Pass file invalid\\n"" )"		3790600	0					
ANR	3792076	Callee	av_log		3790600	0					
ANR	3792077	Identifier	av_log		3790600	0					
ANR	3792078	ArgumentList	avctx		3790600	1					
ANR	3792079	Argument	avctx		3790600	0					
ANR	3792080	Identifier	avctx		3790600	0					
ANR	3792081	Argument	AV_LOG_ERROR		3790600	1					
ANR	3792082	Identifier	AV_LOG_ERROR		3790600	0					
ANR	3792083	Argument	"""2Pass file invalid\\n"""		3790600	2					
ANR	3792084	PrimaryExpression	"""2Pass file invalid\\n"""		3790600	0					
ANR	3792085	ReturnStatement	return AVERROR_INVALIDDATA ;	447:16:8364:8390	3790600	1	True				
ANR	3792086	Identifier	AVERROR_INVALIDDATA		3790600	0					
ANR	3792087	ExpressionStatement	p = next	451:12:8420:8428	3790600	4	True				
ANR	3792088	AssignmentExpression	p = next		3790600	0		=			
ANR	3792089	Identifier	p		3790600	0					
ANR	3792090	Identifier	next		3790600	1					
ANR	3792091	WhileStatement	while ( * p == '\\n' || * p == ' ' )		3790600	5					
ANR	3792092	Condition	* p == '\\n' || * p == ' '	453:19:8450:8472	3790600	0	True				
ANR	3792093	OrExpression	* p == '\\n' || * p == ' '		3790600	0		||			
ANR	3792094	EqualityExpression	* p == '\\n'		3790600	0		==			
ANR	3792095	UnaryOperationExpression	* p		3790600	0					
ANR	3792096	UnaryOperator	*		3790600	0					
ANR	3792097	Identifier	p		3790600	1					
ANR	3792098	PrimaryExpression	'\\n'		3790600	1					
ANR	3792099	EqualityExpression	* p == ' '		3790600	1		==			
ANR	3792100	UnaryOperationExpression	* p		3790600	0					
ANR	3792101	UnaryOperator	*		3790600	0					
ANR	3792102	Identifier	p		3790600	1					
ANR	3792103	PrimaryExpression	' '		3790600	1					
ANR	3792104	ExpressionStatement	p ++	455:16:8492:8495	3790600	1	True				
ANR	3792105	PostIncDecOperationExpression	p ++		3790600	0					
ANR	3792106	Identifier	p		3790600	0					
ANR	3792107	IncDec	++		3790600	1					
ANR	3792108	IfStatement	if ( p [ 0 ] == 0 )		3790600	6					
ANR	3792109	Condition	p [ 0 ] == 0	457:16:8514:8522	3790600	0	True				
ANR	3792110	EqualityExpression	p [ 0 ] == 0		3790600	0		==			
ANR	3792111	ArrayIndexing	p [ 0 ]		3790600	0					
ANR	3792112	Identifier	p		3790600	0					
ANR	3792113	PrimaryExpression	0		3790600	1					
ANR	3792114	PrimaryExpression	0		3790600	1					
ANR	3792115	BreakStatement	break ;	459:16:8542:8547	3790600	1	True				
ANR	3792116	ExpressionStatement	"sort_stt ( s , s -> state_transition )"	463:8:8569:8601	3790600	7	True				
ANR	3792117	CallExpression	"sort_stt ( s , s -> state_transition )"		3790600	0					
ANR	3792118	Callee	sort_stt		3790600	0					
ANR	3792119	Identifier	sort_stt		3790600	0					
ANR	3792120	ArgumentList	s		3790600	1					
ANR	3792121	Argument	s		3790600	0					
ANR	3792122	Identifier	s		3790600	0					
ANR	3792123	Argument	s -> state_transition		3790600	1					
ANR	3792124	PtrMemberAccess	s -> state_transition		3790600	0					
ANR	3792125	Identifier	s		3790600	0					
ANR	3792126	Identifier	state_transition		3790600	1					
ANR	3792127	ExpressionStatement	"find_best_state ( best_state , s -> state_transition )"	467:8:8614:8662	3790600	8	True				
ANR	3792128	CallExpression	"find_best_state ( best_state , s -> state_transition )"		3790600	0					
ANR	3792129	Callee	find_best_state		3790600	0					
ANR	3792130	Identifier	find_best_state		3790600	0					
ANR	3792131	ArgumentList	best_state		3790600	1					
ANR	3792132	Argument	best_state		3790600	0					
ANR	3792133	Identifier	best_state		3790600	0					
ANR	3792134	Argument	s -> state_transition		3790600	1					
ANR	3792135	PtrMemberAccess	s -> state_transition		3790600	0					
ANR	3792136	Identifier	s		3790600	0					
ANR	3792137	Identifier	state_transition		3790600	1					
ANR	3792138	ForStatement	for ( i = 0 ; i < s -> quant_table_count ; i ++ )		3790600	9					
ANR	3792139	ForInit	i = 0 ;	471:13:8680:8685	3790600	0	True				
ANR	3792140	AssignmentExpression	i = 0		3790600	0		=			
ANR	3792141	Identifier	i		3790600	0					
ANR	3792142	PrimaryExpression	0		3790600	1					
ANR	3792143	Condition	i < s -> quant_table_count	471:20:8687:8710	3790600	1	True				
ANR	3792144	RelationalExpression	i < s -> quant_table_count		3790600	0		<			
ANR	3792145	Identifier	i		3790600	0					
ANR	3792146	PtrMemberAccess	s -> quant_table_count		3790600	1					
ANR	3792147	Identifier	s		3790600	0					
ANR	3792148	Identifier	quant_table_count		3790600	1					
ANR	3792149	PostIncDecOperationExpression	i ++	471:46:8713:8715	3790600	2	True				
ANR	3792150	Identifier	i		3790600	0					
ANR	3792151	IncDec	++		3790600	1					
ANR	3792152	CompoundStatement		469:51:8657:8657	3790600	3					
ANR	3792153	ForStatement	for ( j = 0 ; j < s -> context_count [ i ] ; j ++ )		3790600	0					
ANR	3792154	ForInit	j = 0 ;	473:17:8738:8743	3790600	0	True				
ANR	3792155	AssignmentExpression	j = 0		3790600	0		=			
ANR	3792156	Identifier	j		3790600	0					
ANR	3792157	PrimaryExpression	0		3790600	1					
ANR	3792158	Condition	j < s -> context_count [ i ]	473:24:8745:8767	3790600	1	True				
ANR	3792159	RelationalExpression	j < s -> context_count [ i ]		3790600	0		<			
ANR	3792160	Identifier	j		3790600	0					
ANR	3792161	ArrayIndexing	s -> context_count [ i ]		3790600	1					
ANR	3792162	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3792163	Identifier	s		3790600	0					
ANR	3792164	Identifier	context_count		3790600	1					
ANR	3792165	Identifier	i		3790600	1					
ANR	3792166	PostIncDecOperationExpression	j ++	473:49:8770:8772	3790600	2	True				
ANR	3792167	Identifier	j		3790600	0					
ANR	3792168	IncDec	++		3790600	1					
ANR	3792169	ForStatement	for ( k = 0 ; k < 32 ; k ++ )		3790600	3					
ANR	3792170	ForInit	k = 0 ;	475:21:8797:8802	3790600	0	True				
ANR	3792171	AssignmentExpression	k = 0		3790600	0		=			
ANR	3792172	Identifier	k		3790600	0					
ANR	3792173	PrimaryExpression	0		3790600	1					
ANR	3792174	Condition	k < 32	475:28:8804:8809	3790600	1	True				
ANR	3792175	RelationalExpression	k < 32		3790600	0		<			
ANR	3792176	Identifier	k		3790600	0					
ANR	3792177	PrimaryExpression	32		3790600	1					
ANR	3792178	PostIncDecOperationExpression	k ++	475:36:8812:8814	3790600	2	True				
ANR	3792179	Identifier	k		3790600	0					
ANR	3792180	IncDec	++		3790600	1					
ANR	3792181	CompoundStatement		475:20:8779:8793	3790600	3					
ANR	3792182	IdentifierDeclStatement	double p = 128 ;	477:20:8840:8854	3790600	0	True				
ANR	3792183	IdentifierDecl	p = 128		3790600	0					
ANR	3792184	IdentifierDeclType	double		3790600	0					
ANR	3792185	Identifier	p		3790600	1					
ANR	3792186	AssignmentExpression	p = 128		3790600	2		=			
ANR	3792187	Identifier	p		3790600	0					
ANR	3792188	PrimaryExpression	128		3790600	1					
ANR	3792189	IfStatement	if ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] )		3790600	1					
ANR	3792190	Condition	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]	479:24:8881:8929	3790600	0	True				
ANR	3792191	AdditiveExpression	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	0		+			
ANR	3792192	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ]		3790600	0					
ANR	3792193	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792194	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792195	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792196	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792197	Identifier	s		3790600	0					
ANR	3792198	Identifier	rc_stat2		3790600	1					
ANR	3792199	Identifier	i		3790600	1					
ANR	3792200	Identifier	j		3790600	1					
ANR	3792201	Identifier	k		3790600	1					
ANR	3792202	PrimaryExpression	0		3790600	1					
ANR	3792203	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	1					
ANR	3792204	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792205	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792206	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792207	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792208	Identifier	s		3790600	0					
ANR	3792209	Identifier	rc_stat2		3790600	1					
ANR	3792210	Identifier	i		3790600	1					
ANR	3792211	Identifier	j		3790600	1					
ANR	3792212	Identifier	k		3790600	1					
ANR	3792213	PrimaryExpression	1		3790600	1					
ANR	3792214	CompoundStatement		477:75:8871:8871	3790600	1					
ANR	3792215	ExpressionStatement	p = 256.0 * s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] / ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] )	481:24:8959:9077	3790600	0	True				
ANR	3792216	AssignmentExpression	p = 256.0 * s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] / ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] )		3790600	0		=			
ANR	3792217	Identifier	p		3790600	0					
ANR	3792218	MultiplicativeExpression	256.0 * s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] / ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] )		3790600	1		*			
ANR	3792219	PrimaryExpression	256.0		3790600	0					
ANR	3792220	MultiplicativeExpression	s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] / ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] )		3790600	1		/			
ANR	3792221	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	0					
ANR	3792222	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792223	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792224	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792225	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792226	Identifier	s		3790600	0					
ANR	3792227	Identifier	rc_stat2		3790600	1					
ANR	3792228	Identifier	i		3790600	1					
ANR	3792229	Identifier	j		3790600	1					
ANR	3792230	Identifier	k		3790600	1					
ANR	3792231	PrimaryExpression	1		3790600	1					
ANR	3792232	AdditiveExpression	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	1		+			
ANR	3792233	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ]		3790600	0					
ANR	3792234	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792235	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792236	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792237	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792238	Identifier	s		3790600	0					
ANR	3792239	Identifier	rc_stat2		3790600	1					
ANR	3792240	Identifier	i		3790600	1					
ANR	3792241	Identifier	j		3790600	1					
ANR	3792242	Identifier	k		3790600	1					
ANR	3792243	PrimaryExpression	0		3790600	1					
ANR	3792244	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	1					
ANR	3792245	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792246	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792247	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792248	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792249	Identifier	s		3790600	0					
ANR	3792250	Identifier	rc_stat2		3790600	1					
ANR	3792251	Identifier	i		3790600	1					
ANR	3792252	Identifier	j		3790600	1					
ANR	3792253	Identifier	k		3790600	1					
ANR	3792254	PrimaryExpression	1		3790600	1					
ANR	3792255	ExpressionStatement	"s -> initial_states [ i ] [ j ] [ k ] = best_state [ av_clip ( round ( p ) , 1 , 255 ) ] [ av_clip ( ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count , 0 , 255 ) ]"	487:20:9123:9439	3790600	2	True				
ANR	3792256	AssignmentExpression	"s -> initial_states [ i ] [ j ] [ k ] = best_state [ av_clip ( round ( p ) , 1 , 255 ) ] [ av_clip ( ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count , 0 , 255 ) ]"		3790600	0		=			
ANR	3792257	ArrayIndexing	s -> initial_states [ i ] [ j ] [ k ]		3790600	0					
ANR	3792258	ArrayIndexing	s -> initial_states [ i ] [ j ]		3790600	0					
ANR	3792259	ArrayIndexing	s -> initial_states [ i ]		3790600	0					
ANR	3792260	PtrMemberAccess	s -> initial_states		3790600	0					
ANR	3792261	Identifier	s		3790600	0					
ANR	3792262	Identifier	initial_states		3790600	1					
ANR	3792263	Identifier	i		3790600	1					
ANR	3792264	Identifier	j		3790600	1					
ANR	3792265	Identifier	k		3790600	1					
ANR	3792266	ArrayIndexing	"best_state [ av_clip ( round ( p ) , 1 , 255 ) ] [ av_clip ( ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count , 0 , 255 ) ]"		3790600	1					
ANR	3792267	ArrayIndexing	"best_state [ av_clip ( round ( p ) , 1 , 255 ) ]"		3790600	0					
ANR	3792268	Identifier	best_state		3790600	0					
ANR	3792269	CallExpression	"av_clip ( round ( p ) , 1 , 255 )"		3790600	1					
ANR	3792270	Callee	av_clip		3790600	0					
ANR	3792271	Identifier	av_clip		3790600	0					
ANR	3792272	ArgumentList	round ( p )		3790600	1					
ANR	3792273	Argument	round ( p )		3790600	0					
ANR	3792274	CallExpression	round ( p )		3790600	0					
ANR	3792275	Callee	round		3790600	0					
ANR	3792276	Identifier	round		3790600	0					
ANR	3792277	ArgumentList	p		3790600	1					
ANR	3792278	Argument	p		3790600	0					
ANR	3792279	Identifier	p		3790600	0					
ANR	3792280	Argument	1		3790600	1					
ANR	3792281	PrimaryExpression	1		3790600	0					
ANR	3792282	Argument	255		3790600	2					
ANR	3792283	PrimaryExpression	255		3790600	0					
ANR	3792284	CallExpression	"av_clip ( ( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count , 0 , 255 )"		3790600	1					
ANR	3792285	Callee	av_clip		3790600	0					
ANR	3792286	Identifier	av_clip		3790600	0					
ANR	3792287	ArgumentList	( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count		3790600	1					
ANR	3792288	Argument	( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count		3790600	0					
ANR	3792289	MultiplicativeExpression	( s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ] ) / gob_count		3790600	0		/			
ANR	3792290	AdditiveExpression	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ] + s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	0		+			
ANR	3792291	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 0 ]		3790600	0					
ANR	3792292	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792293	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792294	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792295	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792296	Identifier	s		3790600	0					
ANR	3792297	Identifier	rc_stat2		3790600	1					
ANR	3792298	Identifier	i		3790600	1					
ANR	3792299	Identifier	j		3790600	1					
ANR	3792300	Identifier	k		3790600	1					
ANR	3792301	PrimaryExpression	0		3790600	1					
ANR	3792302	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ] [ 1 ]		3790600	1					
ANR	3792303	ArrayIndexing	s -> rc_stat2 [ i ] [ j ] [ k ]		3790600	0					
ANR	3792304	ArrayIndexing	s -> rc_stat2 [ i ] [ j ]		3790600	0					
ANR	3792305	ArrayIndexing	s -> rc_stat2 [ i ]		3790600	0					
ANR	3792306	PtrMemberAccess	s -> rc_stat2		3790600	0					
ANR	3792307	Identifier	s		3790600	0					
ANR	3792308	Identifier	rc_stat2		3790600	1					
ANR	3792309	Identifier	i		3790600	1					
ANR	3792310	Identifier	j		3790600	1					
ANR	3792311	Identifier	k		3790600	1					
ANR	3792312	PrimaryExpression	1		3790600	1					
ANR	3792313	Identifier	gob_count		3790600	1					
ANR	3792314	Argument	0		3790600	1					
ANR	3792315	PrimaryExpression	0		3790600	0					
ANR	3792316	Argument	255		3790600	2					
ANR	3792317	PrimaryExpression	255		3790600	0					
ANR	3792318	IfStatement	if ( s -> version > 1 )		3790600	29					
ANR	3792319	Condition	s -> version > 1	503:8:9489:9502	3790600	0	True				
ANR	3792320	RelationalExpression	s -> version > 1		3790600	0		>			
ANR	3792321	PtrMemberAccess	s -> version		3790600	0					
ANR	3792322	Identifier	s		3790600	0					
ANR	3792323	Identifier	version		3790600	1					
ANR	3792324	PrimaryExpression	1		3790600	1					
ANR	3792325	CompoundStatement		501:24:9444:9444	3790600	1					
ANR	3792326	ForStatement	for ( s -> num_v_slices = 2 ; s -> num_v_slices < 9 ; s -> num_v_slices ++ )		3790600	0					
ANR	3792327	ForInit	s -> num_v_slices = 2 ;	505:13:9521:9540	3790600	0	True				
ANR	3792328	AssignmentExpression	s -> num_v_slices = 2		3790600	0		=			
ANR	3792329	PtrMemberAccess	s -> num_v_slices		3790600	0					
ANR	3792330	Identifier	s		3790600	0					
ANR	3792331	Identifier	num_v_slices		3790600	1					
ANR	3792332	PrimaryExpression	2		3790600	1					
ANR	3792333	Condition	s -> num_v_slices < 9	505:34:9542:9560	3790600	1	True				
ANR	3792334	RelationalExpression	s -> num_v_slices < 9		3790600	0		<			
ANR	3792335	PtrMemberAccess	s -> num_v_slices		3790600	0					
ANR	3792336	Identifier	s		3790600	0					
ANR	3792337	Identifier	num_v_slices		3790600	1					
ANR	3792338	PrimaryExpression	9		3790600	1					
ANR	3792339	PostIncDecOperationExpression	s -> num_v_slices ++	505:55:9563:9579	3790600	2	True				
ANR	3792340	PtrMemberAccess	s -> num_v_slices		3790600	0					
ANR	3792341	Identifier	s		3790600	0					
ANR	3792342	Identifier	num_v_slices		3790600	1					
ANR	3792343	IncDec	++		3790600	1					
ANR	3792344	ForStatement	for ( s -> num_h_slices = s -> num_v_slices ; s -> num_h_slices < 2 * s -> num_v_slices ; s -> num_h_slices ++ )		3790600	3					
ANR	3792345	ForInit	s -> num_h_slices = s -> num_v_slices ;	507:17:9600:9633	3790600	0	True				
ANR	3792346	AssignmentExpression	s -> num_h_slices = s -> num_v_slices		3790600	0		=			
ANR	3792347	PtrMemberAccess	s -> num_h_slices		3790600	0					
ANR	3792348	Identifier	s		3790600	0					
ANR	3792349	Identifier	num_h_slices		3790600	1					
ANR	3792350	PtrMemberAccess	s -> num_v_slices		3790600	1					
ANR	3792351	Identifier	s		3790600	0					
ANR	3792352	Identifier	num_v_slices		3790600	1					
ANR	3792353	Condition	s -> num_h_slices < 2 * s -> num_v_slices	509:17:9653:9689	3790600	1	True				
ANR	3792354	RelationalExpression	s -> num_h_slices < 2 * s -> num_v_slices		3790600	0		<			
ANR	3792355	PtrMemberAccess	s -> num_h_slices		3790600	0					
ANR	3792356	Identifier	s		3790600	0					
ANR	3792357	Identifier	num_h_slices		3790600	1					
ANR	3792358	MultiplicativeExpression	2 * s -> num_v_slices		3790600	1		*			
ANR	3792359	PrimaryExpression	2		3790600	0					
ANR	3792360	PtrMemberAccess	s -> num_v_slices		3790600	1					
ANR	3792361	Identifier	s		3790600	0					
ANR	3792362	Identifier	num_v_slices		3790600	1					
ANR	3792363	PostIncDecOperationExpression	s -> num_h_slices ++	509:56:9692:9708	3790600	2	True				
ANR	3792364	PtrMemberAccess	s -> num_h_slices		3790600	0					
ANR	3792365	Identifier	s		3790600	0					
ANR	3792366	Identifier	num_h_slices		3790600	1					
ANR	3792367	IncDec	++		3790600	1					
ANR	3792368	IfStatement	if ( avctx -> slices == s -> num_h_slices * s -> num_v_slices && avctx -> slices <= 64 || ! avctx -> slices )		3790600	3					
ANR	3792369	Condition	avctx -> slices == s -> num_h_slices * s -> num_v_slices && avctx -> slices <= 64 || ! avctx -> slices	511:20:9732:9843	3790600	0	True				
ANR	3792370	OrExpression	avctx -> slices == s -> num_h_slices * s -> num_v_slices && avctx -> slices <= 64 || ! avctx -> slices		3790600	0		||			
ANR	3792371	AndExpression	avctx -> slices == s -> num_h_slices * s -> num_v_slices && avctx -> slices <= 64		3790600	0		&&			
ANR	3792372	EqualityExpression	avctx -> slices == s -> num_h_slices * s -> num_v_slices		3790600	0		==			
ANR	3792373	PtrMemberAccess	avctx -> slices		3790600	0					
ANR	3792374	Identifier	avctx		3790600	0					
ANR	3792375	Identifier	slices		3790600	1					
ANR	3792376	MultiplicativeExpression	s -> num_h_slices * s -> num_v_slices		3790600	1		*			
ANR	3792377	PtrMemberAccess	s -> num_h_slices		3790600	0					
ANR	3792378	Identifier	s		3790600	0					
ANR	3792379	Identifier	num_h_slices		3790600	1					
ANR	3792380	PtrMemberAccess	s -> num_v_slices		3790600	1					
ANR	3792381	Identifier	s		3790600	0					
ANR	3792382	Identifier	num_v_slices		3790600	1					
ANR	3792383	RelationalExpression	avctx -> slices <= 64		3790600	1		<=			
ANR	3792384	PtrMemberAccess	avctx -> slices		3790600	0					
ANR	3792385	Identifier	avctx		3790600	0					
ANR	3792386	Identifier	slices		3790600	1					
ANR	3792387	PrimaryExpression	64		3790600	1					
ANR	3792388	UnaryOperationExpression	! avctx -> slices		3790600	1					
ANR	3792389	UnaryOperator	!		3790600	0					
ANR	3792390	PtrMemberAccess	avctx -> slices		3790600	1					
ANR	3792391	Identifier	avctx		3790600	0					
ANR	3792392	Identifier	slices		3790600	1					
ANR	3792393	GotoStatement	goto slices_ok ;	515:20:9867:9881	3790600	1	True				
ANR	3792394	Identifier	slices_ok		3790600	0					
ANR	3792395	Statement	av_log	517:8:9892:9897	3790600	1	True				
ANR	3792396	Statement	(	517:14:9898:9898	3790600	2	True				
ANR	3792397	Statement	avctx	517:15:9899:9903	3790600	3	True				
ANR	3792398	Statement	","	517:20:9904:9904	3790600	4	True				
ANR	3792399	Statement	AV_LOG_ERROR	517:22:9906:9917	3790600	5	True				
ANR	3792400	Statement	","	517:34:9918:9918	3790600	6	True				
ANR	3792401	Statement	"""Unsupported number %d of slices requested, please specify a """	519:15:9936:9997	3790600	7	True				
ANR	3792402	Statement	"""supported number with -slices (ex:4,6,9,12,16, ...)\\n"""	521:15:10015:10069	3790600	8	True				
ANR	3792403	Statement	","	521:70:10070:10070	3790600	9	True				
ANR	3792404	Statement	avctx	523:15:10088:10092	3790600	10	True				
ANR	3792405	Statement	->	523:20:10093:10094	3790600	11	True				
ANR	3792406	Statement	slices	523:22:10095:10100	3790600	12	True				
ANR	3792407	Statement	)	523:28:10101:10101	3790600	13	True				
ANR	3792408	ExpressionStatement		523:29:10102:10102	3790600	14	True				
ANR	3792409	ReturnStatement	return AVERROR ( ENOSYS ) ;	525:8:10113:10135	3790600	15	True				
ANR	3792410	CallExpression	AVERROR ( ENOSYS )		3790600	0					
ANR	3792411	Callee	AVERROR		3790600	0					
ANR	3792412	Identifier	AVERROR		3790600	0					
ANR	3792413	ArgumentList	ENOSYS		3790600	1					
ANR	3792414	Argument	ENOSYS		3790600	0					
ANR	3792415	Identifier	ENOSYS		3790600	0					
ANR	3792416	Label	slices_ok :	527:0:10138:10147	3790600	16	True				
ANR	3792417	Identifier	slices_ok		3790600	0					
ANR	3792418	ExpressionStatement	write_extradata ( s )	529:8:10158:10176	3790600	17	True				
ANR	3792419	CallExpression	write_extradata ( s )		3790600	0					
ANR	3792420	Callee	write_extradata		3790600	0					
ANR	3792421	Identifier	write_extradata		3790600	0					
ANR	3792422	ArgumentList	s		3790600	1					
ANR	3792423	Argument	s		3790600	0					
ANR	3792424	Identifier	s		3790600	0					
ANR	3792425	IfStatement	if ( ( ret = ffv1_init_slice_contexts ( s ) ) < 0 )		3790600	30					
ANR	3792426	Condition	( ret = ffv1_init_slice_contexts ( s ) ) < 0	535:8:10196:10234	3790600	0	True				
ANR	3792427	RelationalExpression	( ret = ffv1_init_slice_contexts ( s ) ) < 0		3790600	0		<			
ANR	3792428	AssignmentExpression	ret = ffv1_init_slice_contexts ( s )		3790600	0		=			
ANR	3792429	Identifier	ret		3790600	0					
ANR	3792430	CallExpression	ffv1_init_slice_contexts ( s )		3790600	1					
ANR	3792431	Callee	ffv1_init_slice_contexts		3790600	0					
ANR	3792432	Identifier	ffv1_init_slice_contexts		3790600	0					
ANR	3792433	ArgumentList	s		3790600	1					
ANR	3792434	Argument	s		3790600	0					
ANR	3792435	Identifier	s		3790600	0					
ANR	3792436	PrimaryExpression	0		3790600	1					
ANR	3792437	ReturnStatement	return ret ;	537:8:10246:10256	3790600	1	True				
ANR	3792438	Identifier	ret		3790600	0					
ANR	3792439	IfStatement	if ( ( ret = init_slices_state ( s ) ) < 0 )		3790600	31					
ANR	3792440	Condition	( ret = init_slices_state ( s ) ) < 0	539:8:10267:10298	3790600	0	True				
ANR	3792441	RelationalExpression	( ret = init_slices_state ( s ) ) < 0		3790600	0		<			
ANR	3792442	AssignmentExpression	ret = init_slices_state ( s )		3790600	0		=			
ANR	3792443	Identifier	ret		3790600	0					
ANR	3792444	CallExpression	init_slices_state ( s )		3790600	1					
ANR	3792445	Callee	init_slices_state		3790600	0					
ANR	3792446	Identifier	init_slices_state		3790600	0					
ANR	3792447	ArgumentList	s		3790600	1					
ANR	3792448	Argument	s		3790600	0					
ANR	3792449	Identifier	s		3790600	0					
ANR	3792450	PrimaryExpression	0		3790600	1					
ANR	3792451	ReturnStatement	return ret ;	541:8:10310:10320	3790600	1	True				
ANR	3792452	Identifier	ret		3790600	0					
ANR	3792453	Statement	define	545:1:10326:10331	3790600	32	True				
ANR	3792454	Statement	STATS_OUT_SIZE	545:8:10333:10346	3790600	33	True				
ANR	3792455	Statement	1024	545:23:10348:10351	3790600	34	True				
ANR	3792456	Statement	*	545:28:10353:10353	3790600	35	True				
ANR	3792457	Statement	1024	545:30:10355:10358	3790600	36	True				
ANR	3792458	Statement	*	545:35:10360:10360	3790600	37	True				
ANR	3792459	Statement	6	545:37:10362:10362	3790600	38	True				
ANR	3792460	IfStatement	if ( avctx -> flags & CODEC_FLAG_PASS1 )		3790600	39					
ANR	3792461	Condition	avctx -> flags & CODEC_FLAG_PASS1	547:8:10373:10403	3790600	0	True				
ANR	3792462	BitAndExpression	avctx -> flags & CODEC_FLAG_PASS1		3790600	0		&			
ANR	3792463	PtrMemberAccess	avctx -> flags		3790600	0					
ANR	3792464	Identifier	avctx		3790600	0					
ANR	3792465	Identifier	flags		3790600	1					
ANR	3792466	Identifier	CODEC_FLAG_PASS1		3790600	1					
ANR	3792467	CompoundStatement		545:41:10345:10345	3790600	1					
ANR	3792468	ExpressionStatement	avctx -> stats_out = av_mallocz ( STATS_OUT_SIZE )	549:8:10417:10462	3790600	0	True				
ANR	3792469	AssignmentExpression	avctx -> stats_out = av_mallocz ( STATS_OUT_SIZE )		3790600	0		=			
ANR	3792470	PtrMemberAccess	avctx -> stats_out		3790600	0					
ANR	3792471	Identifier	avctx		3790600	0					
ANR	3792472	Identifier	stats_out		3790600	1					
ANR	3792473	CallExpression	av_mallocz ( STATS_OUT_SIZE )		3790600	1					
ANR	3792474	Callee	av_mallocz		3790600	0					
ANR	3792475	Identifier	av_mallocz		3790600	0					
ANR	3792476	ArgumentList	STATS_OUT_SIZE		3790600	1					
ANR	3792477	Argument	STATS_OUT_SIZE		3790600	0					
ANR	3792478	Identifier	STATS_OUT_SIZE		3790600	0					
ANR	3792479	ForStatement	for ( i = 0 ; i < s -> quant_table_count ; i ++ )		3790600	1					
ANR	3792480	ForInit	i = 0 ;	551:13:10478:10483	3790600	0	True				
ANR	3792481	AssignmentExpression	i = 0		3790600	0		=			
ANR	3792482	Identifier	i		3790600	0					
ANR	3792483	PrimaryExpression	0		3790600	1					
ANR	3792484	Condition	i < s -> quant_table_count	551:20:10485:10508	3790600	1	True				
ANR	3792485	RelationalExpression	i < s -> quant_table_count		3790600	0		<			
ANR	3792486	Identifier	i		3790600	0					
ANR	3792487	PtrMemberAccess	s -> quant_table_count		3790600	1					
ANR	3792488	Identifier	s		3790600	0					
ANR	3792489	Identifier	quant_table_count		3790600	1					
ANR	3792490	PostIncDecOperationExpression	i ++	551:46:10511:10513	3790600	2	True				
ANR	3792491	Identifier	i		3790600	0					
ANR	3792492	IncDec	++		3790600	1					
ANR	3792493	ForStatement	for ( j = 0 ; j < s -> slice_count ; j ++ )		3790600	3					
ANR	3792494	ForInit	j = 0 ;	553:17:10534:10539	3790600	0	True				
ANR	3792495	AssignmentExpression	j = 0		3790600	0		=			
ANR	3792496	Identifier	j		3790600	0					
ANR	3792497	PrimaryExpression	0		3790600	1					
ANR	3792498	Condition	j < s -> slice_count	553:24:10541:10558	3790600	1	True				
ANR	3792499	RelationalExpression	j < s -> slice_count		3790600	0		<			
ANR	3792500	Identifier	j		3790600	0					
ANR	3792501	PtrMemberAccess	s -> slice_count		3790600	1					
ANR	3792502	Identifier	s		3790600	0					
ANR	3792503	Identifier	slice_count		3790600	1					
ANR	3792504	PostIncDecOperationExpression	j ++	553:44:10561:10563	3790600	2	True				
ANR	3792505	Identifier	j		3790600	0					
ANR	3792506	IncDec	++		3790600	1					
ANR	3792507	CompoundStatement		553:16:10524:10561	3790600	3					
ANR	3792508	IdentifierDeclStatement	FFV1Context * sf = s -> slice_context [ j ] ;	555:16:10585:10622	3790600	0	True				
ANR	3792509	IdentifierDecl	* sf = s -> slice_context [ j ]		3790600	0					
ANR	3792510	IdentifierDeclType	FFV1Context *		3790600	0					
ANR	3792511	Identifier	sf		3790600	1					
ANR	3792512	AssignmentExpression	* sf = s -> slice_context [ j ]		3790600	2		=			
ANR	3792513	Identifier	sf		3790600	0					
ANR	3792514	ArrayIndexing	s -> slice_context [ j ]		3790600	1					
ANR	3792515	PtrMemberAccess	s -> slice_context		3790600	0					
ANR	3792516	Identifier	s		3790600	0					
ANR	3792517	Identifier	slice_context		3790600	1					
ANR	3792518	Identifier	j		3790600	1					
ANR	3792519	ExpressionStatement	av_assert0 ( ! sf -> rc_stat2 [ i ] )	557:16:10641:10669	3790600	1	True				
ANR	3792520	CallExpression	av_assert0 ( ! sf -> rc_stat2 [ i ] )		3790600	0					
ANR	3792521	Callee	av_assert0		3790600	0					
ANR	3792522	Identifier	av_assert0		3790600	0					
ANR	3792523	ArgumentList	! sf -> rc_stat2 [ i ]		3790600	1					
ANR	3792524	Argument	! sf -> rc_stat2 [ i ]		3790600	0					
ANR	3792525	UnaryOperationExpression	! sf -> rc_stat2 [ i ]		3790600	0					
ANR	3792526	UnaryOperator	!		3790600	0					
ANR	3792527	ArrayIndexing	sf -> rc_stat2 [ i ]		3790600	1					
ANR	3792528	PtrMemberAccess	sf -> rc_stat2		3790600	0					
ANR	3792529	Identifier	sf		3790600	0					
ANR	3792530	Identifier	rc_stat2		3790600	1					
ANR	3792531	Identifier	i		3790600	1					
ANR	3792532	ExpressionStatement	sf -> rc_stat2 [ i ] = av_mallocz ( s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] ) )	559:16:10688:10810	3790600	2	True				
ANR	3792533	AssignmentExpression	sf -> rc_stat2 [ i ] = av_mallocz ( s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] ) )		3790600	0		=			
ANR	3792534	ArrayIndexing	sf -> rc_stat2 [ i ]		3790600	0					
ANR	3792535	PtrMemberAccess	sf -> rc_stat2		3790600	0					
ANR	3792536	Identifier	sf		3790600	0					
ANR	3792537	Identifier	rc_stat2		3790600	1					
ANR	3792538	Identifier	i		3790600	1					
ANR	3792539	CallExpression	av_mallocz ( s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] ) )		3790600	1					
ANR	3792540	Callee	av_mallocz		3790600	0					
ANR	3792541	Identifier	av_mallocz		3790600	0					
ANR	3792542	ArgumentList	s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] )		3790600	1					
ANR	3792543	Argument	s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] )		3790600	0					
ANR	3792544	MultiplicativeExpression	s -> context_count [ i ] * sizeof ( * sf -> rc_stat2 [ i ] )		3790600	0		*			
ANR	3792545	ArrayIndexing	s -> context_count [ i ]		3790600	0					
ANR	3792546	PtrMemberAccess	s -> context_count		3790600	0					
ANR	3792547	Identifier	s		3790600	0					
ANR	3792548	Identifier	context_count		3790600	1					
ANR	3792549	Identifier	i		3790600	1					
ANR	3792550	SizeofExpression	sizeof ( * sf -> rc_stat2 [ i ] )		3790600	1					
ANR	3792551	Sizeof	sizeof		3790600	0					
ANR	3792552	UnaryOperationExpression	* sf -> rc_stat2 [ i ]		3790600	1					
ANR	3792553	UnaryOperator	*		3790600	0					
ANR	3792554	ArrayIndexing	sf -> rc_stat2 [ i ]		3790600	1					
ANR	3792555	PtrMemberAccess	sf -> rc_stat2		3790600	0					
ANR	3792556	Identifier	sf		3790600	0					
ANR	3792557	Identifier	rc_stat2		3790600	1					
ANR	3792558	Identifier	i		3790600	1					
ANR	3792559	IfStatement	if ( ! sf -> rc_stat2 [ i ] )		3790600	3					
ANR	3792560	Condition	! sf -> rc_stat2 [ i ]	563:20:10833:10848	3790600	0	True				
ANR	3792561	UnaryOperationExpression	! sf -> rc_stat2 [ i ]		3790600	0					
ANR	3792562	UnaryOperator	!		3790600	0					
ANR	3792563	ArrayIndexing	sf -> rc_stat2 [ i ]		3790600	1					
ANR	3792564	PtrMemberAccess	sf -> rc_stat2		3790600	0					
ANR	3792565	Identifier	sf		3790600	0					
ANR	3792566	Identifier	rc_stat2		3790600	1					
ANR	3792567	Identifier	i		3790600	1					
ANR	3792568	ReturnStatement	return AVERROR ( ENOMEM ) ;	565:20:10872:10894	3790600	1	True				
ANR	3792569	CallExpression	AVERROR ( ENOMEM )		3790600	0					
ANR	3792570	Callee	AVERROR		3790600	0					
ANR	3792571	Identifier	AVERROR		3790600	0					
ANR	3792572	ArgumentList	ENOMEM		3790600	1					
ANR	3792573	Argument	ENOMEM		3790600	0					
ANR	3792574	Identifier	ENOMEM		3790600	0					
ANR	3792575	ReturnStatement	return 0 ;	573:4:10925:10933	3790600	40	True				
ANR	3792576	PrimaryExpression	0		3790600	0					
ANR	3792577	ReturnType	static av_cold int		3790600	1					
ANR	3792578	Identifier	ffv1_encode_init		3790600	2					
ANR	3792579	ParameterList	AVCodecContext * avctx		3790600	3					
ANR	3792580	Parameter	AVCodecContext * avctx	1:36:36:56	3790600	0	True				
ANR	3792581	ParameterType	AVCodecContext *		3790600	0					
ANR	3792582	Identifier	avctx		3790600	1					
ANR	3792583	CFGEntryNode	ENTRY		3790600		True				
ANR	3792584	CFGExitNode	EXIT		3790600		True				
ANR	3792585	InfiniteForNode	true		3790600		True				
ANR	3792586	Symbol	avctx -> slices		3790600						
ANR	3792587	Symbol	ENOMEM		3790600						
ANR	3792588	Symbol	avctx -> coded_frame -> pict_type		3790600						
ANR	3792589	Symbol	* * s -> quant_tables		3790600						
ANR	3792590	Symbol	ffv1_ver2_state		3790600						
ANR	3792591	Symbol	ENOSYS		3790600						
ANR	3792592	Symbol	* s -> rc_stat2 [ i ]		3790600						
ANR	3792593	Symbol	s -> quant_tables		3790600						
ANR	3792594	Symbol	avctx -> bits_per_raw_sample		3790600						
ANR	3792595	Symbol	* s -> context_count		3790600						
ANR	3792596	Symbol	s -> transparency		3790600						
ANR	3792597	Symbol	* sf		3790600						
ANR	3792598	Symbol	gob_count		3790600						
ANR	3792599	Symbol	av_clip		3790600						
ANR	3792600	Symbol	CODEC_FLAG_PASS2		3790600						
ANR	3792601	Symbol	s -> ec		3790600						
ANR	3792602	Symbol	CODEC_FLAG_PASS1		3790600						
ANR	3792603	Symbol	ffv1_quant5_10bit		3790600						
ANR	3792604	Symbol	s -> quant_table		3790600						
ANR	3792605	Symbol	* p -> quant_table_index		3790600						
ANR	3792606	Symbol	* ffv1_ver2_state		3790600						
ANR	3792607	Symbol	* * avctx		3790600						
ANR	3792608	Symbol	av_mallocz		3790600						
ANR	3792609	Symbol	* ffv1_quant11		3790600						
ANR	3792610	Symbol	* * * s		3790600						
ANR	3792611	Symbol	* sf -> rc_stat2		3790600						
ANR	3792612	Symbol	avctx -> level		3790600						
ANR	3792613	Symbol	* * * j		3790600						
ANR	3792614	Symbol	* * * i		3790600						
ANR	3792615	Symbol	avctx -> pix_fmt		3790600						
ANR	3792616	Symbol	av_pix_fmt_desc_get		3790600						
ANR	3792617	Symbol	ffv1_allocate_initial_states		3790600						
ANR	3792618	Symbol	AV_LOG_INFO		3790600						
ANR	3792619	Symbol	ffv1_quant5		3790600						
ANR	3792620	Symbol	* av_clip		3790600						
ANR	3792621	Symbol	best_state		3790600						
ANR	3792622	Symbol	* * s -> initial_states		3790600						
ANR	3792623	Symbol	s -> initial_states		3790600						
ANR	3792624	Symbol	s -> num_v_slices		3790600						
ANR	3792625	Symbol	sf		3790600						
ANR	3792626	Symbol	strtol		3790600						
ANR	3792627	Symbol	* avctx -> context_model		3790600						
ANR	3792628	Symbol	s -> bits_per_raw_sample		3790600						
ANR	3792629	Symbol	* * s		3790600						
ANR	3792630	Symbol	* desc		3790600						
ANR	3792631	Symbol	* * p		3790600						
ANR	3792632	Symbol	* avctx -> coded_frame		3790600						
ANR	3792633	Symbol	avctx		3790600						
ANR	3792634	Symbol	ffv1_init_slice_contexts		3790600						
ANR	3792635	Symbol	& next		3790600						
ANR	3792636	Symbol	AV_LOG_ERROR		3790600						
ANR	3792637	Symbol	* * * s -> initial_states		3790600						
ANR	3792638	Symbol	i		3790600						
ANR	3792639	Symbol	j		3790600						
ANR	3792640	Symbol	k		3790600						
ANR	3792641	Symbol	m		3790600						
ANR	3792642	Symbol	s -> slice_context		3790600						
ANR	3792643	Symbol	EINVAL		3790600						
ANR	3792644	Symbol	p		3790600						
ANR	3792645	Symbol	p -> context_count		3790600						
ANR	3792646	Symbol	s		3790600						
ANR	3792647	Symbol	* s -> state_transition		3790600						
ANR	3792648	Symbol	AVERROR_INVALIDDATA		3790600						
ANR	3792649	Symbol	s -> context_count		3790600						
ANR	3792650	Symbol	AV_LOG_WARNING		3790600						
ANR	3792651	Symbol	avctx -> context_model		3790600						
ANR	3792652	Symbol	* ffv1_quant5		3790600						
ANR	3792653	Symbol	FFMAX		3790600						
ANR	3792654	Symbol	s -> colorspace		3790600						
ANR	3792655	Symbol	init_slices_state		3790600						
ANR	3792656	Symbol	& s -> chroma_v_shift		3790600						
ANR	3792657	Symbol	s -> quant_table_count		3790600						
ANR	3792658	Symbol	* * * * s		3790600						
ANR	3792659	Symbol	& s -> chroma_h_shift		3790600						
ANR	3792660	Symbol	* s -> initial_states		3790600						
ANR	3792661	Symbol	avctx -> stats_out		3790600						
ANR	3792662	Symbol	* * * * i		3790600						
ANR	3792663	Symbol	* ffv1_quant5_10bit		3790600						
ANR	3792664	Symbol	avctx -> flags		3790600						
ANR	3792665	Symbol	* s -> rc_stat		3790600						
ANR	3792666	Symbol	sf -> rc_stat2		3790600						
ANR	3792667	Symbol	s -> ac		3790600						
ANR	3792668	Symbol	ret		3790600						
ANR	3792669	Symbol	p -> quant_table_index		3790600						
ANR	3792670	Symbol	* * k		3790600						
ANR	3792671	Symbol	* * j		3790600						
ANR	3792672	Symbol	* * i		3790600						
ANR	3792673	Symbol	* * s -> rc_stat2		3790600						
ANR	3792674	Symbol	s -> rc_stat2		3790600						
ANR	3792675	Symbol	ffv1_quant11		3790600						
ANR	3792676	Symbol	s -> picture_number		3790600						
ANR	3792677	Symbol	FF_COMPLIANCE_EXPERIMENTAL		3790600						
ANR	3792678	Symbol	avctx -> strict_std_compliance		3790600						
ANR	3792679	Symbol	av_frame_alloc		3790600						
ANR	3792680	Symbol	avctx -> coder_type		3790600						
ANR	3792681	Symbol	* sf -> rc_stat2 [ i ]		3790600						
ANR	3792682	Symbol	s -> chroma_planes		3790600						
ANR	3792683	Symbol	* avctx		3790600						
ANR	3792684	Symbol	s -> packed_at_lsb		3790600						
ANR	3792685	Symbol	* s -> quant_tables		3790600						
ANR	3792686	Symbol	avctx -> stats_in		3790600						
ANR	3792687	Symbol	ffv1_quant9_10bit		3790600						
ANR	3792688	Symbol	* * av_clip		3790600						
ANR	3792689	Symbol	* * * * s -> rc_stat2		3790600						
ANR	3792690	Symbol	* * sf		3790600						
ANR	3792691	Symbol	desc		3790600						
ANR	3792692	Symbol	next		3790600						
ANR	3792693	Symbol	* * * s -> rc_stat2		3790600						
ANR	3792694	Symbol	desc -> nb_components		3790600						
ANR	3792695	Symbol	s -> version		3790600						
ANR	3792696	Symbol	* * * s -> quant_tables		3790600						
ANR	3792697	Symbol	p -> quant_table		3790600						
ANR	3792698	Symbol	* * * sf		3790600						
ANR	3792699	Symbol	s -> num_h_slices		3790600						
ANR	3792700	Symbol	avctx -> coded_frame		3790600						
ANR	3792701	Symbol	* best_state		3790600						
ANR	3792702	Symbol	s -> slice_count		3790600						
ANR	3792703	Symbol	s -> state_transition		3790600						
ANR	3792704	Symbol	AV_PICTURE_TYPE_I		3790600						
ANR	3792705	Symbol	STATS_OUT_SIZE		3790600						
ANR	3792706	Symbol	* * best_state		3790600						
ANR	3792707	Symbol	s -> plane		3790600						
ANR	3792708	Symbol	* ffv1_quant9_10bit		3790600						
ANR	3792709	Symbol	* * s -> rc_stat		3790600						
ANR	3792710	Symbol	s -> rc_stat		3790600						
ANR	3792711	Symbol	avctx -> priv_data		3790600						
ANR	3792712	Symbol	* * sf -> rc_stat2		3790600						
ANR	3792713	Symbol	* s -> slice_context		3790600						
ANR	3792714	Symbol	* i		3790600						
ANR	3792715	Symbol	* j		3790600						
ANR	3792716	Symbol	round		3790600						
ANR	3792717	Symbol	* s -> rc_stat2		3790600						
ANR	3792718	Symbol	* k		3790600						
ANR	3792719	Symbol	* * * * * s		3790600						
ANR	3792720	Symbol	* m		3790600						
ANR	3792721	Symbol	s -> plane_count		3790600						
ANR	3792722	Symbol	* p		3790600						
ANR	3792723	Symbol	AVERROR		3790600						
ANR	3792724	Symbol	* s		3790600						
