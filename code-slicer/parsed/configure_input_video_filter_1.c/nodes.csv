command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1401714	File	/home/p4ultr4n/workplace/ReVeal/raw_code/configure_input_video_filter_1.c								
ANR	1401715	Function	configure_input_video_filter	1:0:0:5336							
ANR	1401716	FunctionDef	"configure_input_video_filter (FilterGraph * fg , InputFilter * ifilter , AVFilterInOut * in)"		1401715	0					
ANR	1401717	CompoundStatement		5:0:140:5336	1401715	0					
ANR	1401718	IdentifierDeclStatement	AVFilterContext * last_filter ;	7:4:147:175	1401715	0	True				
ANR	1401719	IdentifierDecl	* last_filter		1401715	0					
ANR	1401720	IdentifierDeclType	AVFilterContext *		1401715	0					
ANR	1401721	Identifier	last_filter		1401715	1					
ANR	1401722	IdentifierDeclStatement	"const AVFilter * buffer_filt = avfilter_get_by_name ( ""buffer"" ) ;"	9:4:182:242	1401715	1	True				
ANR	1401723	IdentifierDecl	"* buffer_filt = avfilter_get_by_name ( ""buffer"" )"		1401715	0					
ANR	1401724	IdentifierDeclType	const AVFilter *		1401715	0					
ANR	1401725	Identifier	buffer_filt		1401715	1					
ANR	1401726	AssignmentExpression	"* buffer_filt = avfilter_get_by_name ( ""buffer"" )"		1401715	2		=			
ANR	1401727	Identifier	buffer_filt		1401715	0					
ANR	1401728	CallExpression	"avfilter_get_by_name ( ""buffer"" )"		1401715	1					
ANR	1401729	Callee	avfilter_get_by_name		1401715	0					
ANR	1401730	Identifier	avfilter_get_by_name		1401715	0					
ANR	1401731	ArgumentList	"""buffer"""		1401715	1					
ANR	1401732	Argument	"""buffer"""		1401715	0					
ANR	1401733	PrimaryExpression	"""buffer"""		1401715	0					
ANR	1401734	IdentifierDeclStatement	InputStream * ist = ifilter -> ist ;	11:4:249:280	1401715	2	True				
ANR	1401735	IdentifierDecl	* ist = ifilter -> ist		1401715	0					
ANR	1401736	IdentifierDeclType	InputStream *		1401715	0					
ANR	1401737	Identifier	ist		1401715	1					
ANR	1401738	AssignmentExpression	* ist = ifilter -> ist		1401715	2		=			
ANR	1401739	Identifier	ist		1401715	0					
ANR	1401740	PtrMemberAccess	ifilter -> ist		1401715	1					
ANR	1401741	Identifier	ifilter		1401715	0					
ANR	1401742	Identifier	ist		1401715	1					
ANR	1401743	IdentifierDeclStatement	InputFile * f = input_files [ ist -> file_index ] ;	13:4:287:334	1401715	3	True				
ANR	1401744	IdentifierDecl	* f = input_files [ ist -> file_index ]		1401715	0					
ANR	1401745	IdentifierDeclType	InputFile *		1401715	0					
ANR	1401746	Identifier	f		1401715	1					
ANR	1401747	AssignmentExpression	* f = input_files [ ist -> file_index ]		1401715	2		=			
ANR	1401748	Identifier	f		1401715	0					
ANR	1401749	ArrayIndexing	input_files [ ist -> file_index ]		1401715	1					
ANR	1401750	Identifier	input_files		1401715	0					
ANR	1401751	PtrMemberAccess	ist -> file_index		1401715	1					
ANR	1401752	Identifier	ist		1401715	0					
ANR	1401753	Identifier	file_index		1401715	1					
ANR	1401754	IdentifierDeclStatement	AVRational tb = ist -> framerate . num ? av_inv_q ( ist -> framerate ) : ist -> st -> time_base ;	15:4:341:465	1401715	4	True				
ANR	1401755	IdentifierDecl	tb = ist -> framerate . num ? av_inv_q ( ist -> framerate ) : ist -> st -> time_base		1401715	0					
ANR	1401756	IdentifierDeclType	AVRational		1401715	0					
ANR	1401757	Identifier	tb		1401715	1					
ANR	1401758	AssignmentExpression	tb = ist -> framerate . num ? av_inv_q ( ist -> framerate ) : ist -> st -> time_base		1401715	2		=			
ANR	1401759	Identifier	tb		1401715	0					
ANR	1401760	ConditionalExpression	ist -> framerate . num ? av_inv_q ( ist -> framerate ) : ist -> st -> time_base		1401715	1					
ANR	1401761	Condition	ist -> framerate . num		1401715	0					
ANR	1401762	MemberAccess	ist -> framerate . num		1401715	0					
ANR	1401763	PtrMemberAccess	ist -> framerate		1401715	0					
ANR	1401764	Identifier	ist		1401715	0					
ANR	1401765	Identifier	framerate		1401715	1					
ANR	1401766	Identifier	num		1401715	1					
ANR	1401767	CallExpression	av_inv_q ( ist -> framerate )		1401715	1					
ANR	1401768	Callee	av_inv_q		1401715	0					
ANR	1401769	Identifier	av_inv_q		1401715	0					
ANR	1401770	ArgumentList	ist -> framerate		1401715	1					
ANR	1401771	Argument	ist -> framerate		1401715	0					
ANR	1401772	PtrMemberAccess	ist -> framerate		1401715	0					
ANR	1401773	Identifier	ist		1401715	0					
ANR	1401774	Identifier	framerate		1401715	1					
ANR	1401775	PtrMemberAccess	ist -> st -> time_base		1401715	2					
ANR	1401776	PtrMemberAccess	ist -> st		1401715	0					
ANR	1401777	Identifier	ist		1401715	0					
ANR	1401778	Identifier	st		1401715	1					
ANR	1401779	Identifier	time_base		1401715	1					
ANR	1401780	IdentifierDeclStatement	AVRational fr = ist -> framerate ;	19:4:472:502	1401715	5	True				
ANR	1401781	IdentifierDecl	fr = ist -> framerate		1401715	0					
ANR	1401782	IdentifierDeclType	AVRational		1401715	0					
ANR	1401783	Identifier	fr		1401715	1					
ANR	1401784	AssignmentExpression	fr = ist -> framerate		1401715	2		=			
ANR	1401785	Identifier	fr		1401715	0					
ANR	1401786	PtrMemberAccess	ist -> framerate		1401715	1					
ANR	1401787	Identifier	ist		1401715	0					
ANR	1401788	Identifier	framerate		1401715	1					
ANR	1401789	IdentifierDeclStatement	AVRational sar ;	21:4:509:523	1401715	6	True				
ANR	1401790	IdentifierDecl	sar		1401715	0					
ANR	1401791	IdentifierDeclType	AVRational		1401715	0					
ANR	1401792	Identifier	sar		1401715	1					
ANR	1401793	IdentifierDeclStatement	AVBPrint args ;	23:4:530:543	1401715	7	True				
ANR	1401794	IdentifierDecl	args		1401715	0					
ANR	1401795	IdentifierDeclType	AVBPrint		1401715	0					
ANR	1401796	Identifier	args		1401715	1					
ANR	1401797	IdentifierDeclStatement	char name [ 255 ] ;	25:4:550:564	1401715	8	True				
ANR	1401798	IdentifierDecl	name [ 255 ]		1401715	0					
ANR	1401799	IdentifierDeclType	char [ 255 ]		1401715	0					
ANR	1401800	Identifier	name		1401715	1					
ANR	1401801	PrimaryExpression	255		1401715	2					
ANR	1401802	IdentifierDeclStatement	"int ret , pad_idx = 0 ;"	27:4:571:591	1401715	9	True				
ANR	1401803	IdentifierDecl	ret		1401715	0					
ANR	1401804	IdentifierDeclType	int		1401715	0					
ANR	1401805	Identifier	ret		1401715	1					
ANR	1401806	IdentifierDecl	pad_idx = 0		1401715	1					
ANR	1401807	IdentifierDeclType	int		1401715	0					
ANR	1401808	Identifier	pad_idx		1401715	1					
ANR	1401809	AssignmentExpression	pad_idx = 0		1401715	2		=			
ANR	1401810	Identifier	pad_idx		1401715	0					
ANR	1401811	PrimaryExpression	0		1401715	1					
ANR	1401812	IdentifierDeclStatement	int64_t tsoffset = 0 ;	29:4:598:618	1401715	10	True				
ANR	1401813	IdentifierDecl	tsoffset = 0		1401715	0					
ANR	1401814	IdentifierDeclType	int64_t		1401715	0					
ANR	1401815	Identifier	tsoffset		1401715	1					
ANR	1401816	AssignmentExpression	tsoffset = 0		1401715	2		=			
ANR	1401817	Identifier	tsoffset		1401715	0					
ANR	1401818	PrimaryExpression	0		1401715	1					
ANR	1401819	IdentifierDeclStatement	AVBufferSrcParameters * par = av_buffersrc_parameters_alloc ( ) ;	31:4:625:685	1401715	11	True				
ANR	1401820	IdentifierDecl	* par = av_buffersrc_parameters_alloc ( )		1401715	0					
ANR	1401821	IdentifierDeclType	AVBufferSrcParameters *		1401715	0					
ANR	1401822	Identifier	par		1401715	1					
ANR	1401823	AssignmentExpression	* par = av_buffersrc_parameters_alloc ( )		1401715	2		=			
ANR	1401824	Identifier	par		1401715	0					
ANR	1401825	CallExpression	av_buffersrc_parameters_alloc ( )		1401715	1					
ANR	1401826	Callee	av_buffersrc_parameters_alloc		1401715	0					
ANR	1401827	Identifier	av_buffersrc_parameters_alloc		1401715	0					
ANR	1401828	ArgumentList			1401715	1					
ANR	1401829	IfStatement	if ( ! par )		1401715	12					
ANR	1401830	Condition	! par	35:8:698:701	1401715	0	True				
ANR	1401831	UnaryOperationExpression	! par		1401715	0					
ANR	1401832	UnaryOperator	!		1401715	0					
ANR	1401833	Identifier	par		1401715	1					
ANR	1401834	ReturnStatement	return AVERROR ( ENOMEM ) ;	37:8:713:735	1401715	1	True				
ANR	1401835	CallExpression	AVERROR ( ENOMEM )		1401715	0					
ANR	1401836	Callee	AVERROR		1401715	0					
ANR	1401837	Identifier	AVERROR		1401715	0					
ANR	1401838	ArgumentList	ENOMEM		1401715	1					
ANR	1401839	Argument	ENOMEM		1401715	0					
ANR	1401840	Identifier	ENOMEM		1401715	0					
ANR	1401841	ExpressionStatement	"memset ( par , 0 , sizeof ( * par ) )"	39:4:742:770	1401715	13	True				
ANR	1401842	CallExpression	"memset ( par , 0 , sizeof ( * par ) )"		1401715	0					
ANR	1401843	Callee	memset		1401715	0					
ANR	1401844	Identifier	memset		1401715	0					
ANR	1401845	ArgumentList	par		1401715	1					
ANR	1401846	Argument	par		1401715	0					
ANR	1401847	Identifier	par		1401715	0					
ANR	1401848	Argument	0		1401715	1					
ANR	1401849	PrimaryExpression	0		1401715	0					
ANR	1401850	Argument	sizeof ( * par )		1401715	2					
ANR	1401851	SizeofExpression	sizeof ( * par )		1401715	0					
ANR	1401852	Sizeof	sizeof		1401715	0					
ANR	1401853	UnaryOperationExpression	* par		1401715	1					
ANR	1401854	UnaryOperator	*		1401715	0					
ANR	1401855	Identifier	par		1401715	1					
ANR	1401856	ExpressionStatement	par -> format = AV_PIX_FMT_NONE	41:4:777:806	1401715	14	True				
ANR	1401857	AssignmentExpression	par -> format = AV_PIX_FMT_NONE		1401715	0		=			
ANR	1401858	PtrMemberAccess	par -> format		1401715	0					
ANR	1401859	Identifier	par		1401715	0					
ANR	1401860	Identifier	format		1401715	1					
ANR	1401861	Identifier	AV_PIX_FMT_NONE		1401715	1					
ANR	1401862	IfStatement	if ( ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_AUDIO )		1401715	15					
ANR	1401863	Condition	ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_AUDIO	45:8:819:864	1401715	0	True				
ANR	1401864	EqualityExpression	ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_AUDIO		1401715	0		==			
ANR	1401865	PtrMemberAccess	ist -> dec_ctx -> codec_type		1401715	0					
ANR	1401866	PtrMemberAccess	ist -> dec_ctx		1401715	0					
ANR	1401867	Identifier	ist		1401715	0					
ANR	1401868	Identifier	dec_ctx		1401715	1					
ANR	1401869	Identifier	codec_type		1401715	1					
ANR	1401870	Identifier	AVMEDIA_TYPE_AUDIO		1401715	1					
ANR	1401871	CompoundStatement		41:56:726:726	1401715	1					
ANR	1401872	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Cannot connect video filter to audio input\\n"" )"	47:8:878:952	1401715	0	True				
ANR	1401873	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Cannot connect video filter to audio input\\n"" )"		1401715	0					
ANR	1401874	Callee	av_log		1401715	0					
ANR	1401875	Identifier	av_log		1401715	0					
ANR	1401876	ArgumentList	NULL		1401715	1					
ANR	1401877	Argument	NULL		1401715	0					
ANR	1401878	Identifier	NULL		1401715	0					
ANR	1401879	Argument	AV_LOG_ERROR		1401715	1					
ANR	1401880	Identifier	AV_LOG_ERROR		1401715	0					
ANR	1401881	Argument	"""Cannot connect video filter to audio input\\n"""		1401715	2					
ANR	1401882	PrimaryExpression	"""Cannot connect video filter to audio input\\n"""		1401715	0					
ANR	1401883	ReturnStatement	return AVERROR ( EINVAL ) ;	49:8:963:985	1401715	1	True				
ANR	1401884	CallExpression	AVERROR ( EINVAL )		1401715	0					
ANR	1401885	Callee	AVERROR		1401715	0					
ANR	1401886	Identifier	AVERROR		1401715	0					
ANR	1401887	ArgumentList	EINVAL		1401715	1					
ANR	1401888	Argument	EINVAL		1401715	0					
ANR	1401889	Identifier	EINVAL		1401715	0					
ANR	1401890	IfStatement	if ( ! fr . num )		1401715	16					
ANR	1401891	Condition	! fr . num	55:8:1005:1011	1401715	0	True				
ANR	1401892	UnaryOperationExpression	! fr . num		1401715	0					
ANR	1401893	UnaryOperator	!		1401715	0					
ANR	1401894	MemberAccess	fr . num		1401715	1					
ANR	1401895	Identifier	fr		1401715	0					
ANR	1401896	Identifier	num		1401715	1					
ANR	1401897	ExpressionStatement	"fr = av_guess_frame_rate ( input_files [ ist -> file_index ] -> ctx , ist -> st , NULL )"	57:8:1023:1097	1401715	1	True				
ANR	1401898	AssignmentExpression	"fr = av_guess_frame_rate ( input_files [ ist -> file_index ] -> ctx , ist -> st , NULL )"		1401715	0		=			
ANR	1401899	Identifier	fr		1401715	0					
ANR	1401900	CallExpression	"av_guess_frame_rate ( input_files [ ist -> file_index ] -> ctx , ist -> st , NULL )"		1401715	1					
ANR	1401901	Callee	av_guess_frame_rate		1401715	0					
ANR	1401902	Identifier	av_guess_frame_rate		1401715	0					
ANR	1401903	ArgumentList	input_files [ ist -> file_index ] -> ctx		1401715	1					
ANR	1401904	Argument	input_files [ ist -> file_index ] -> ctx		1401715	0					
ANR	1401905	PtrMemberAccess	input_files [ ist -> file_index ] -> ctx		1401715	0					
ANR	1401906	ArrayIndexing	input_files [ ist -> file_index ]		1401715	0					
ANR	1401907	Identifier	input_files		1401715	0					
ANR	1401908	PtrMemberAccess	ist -> file_index		1401715	1					
ANR	1401909	Identifier	ist		1401715	0					
ANR	1401910	Identifier	file_index		1401715	1					
ANR	1401911	Identifier	ctx		1401715	1					
ANR	1401912	Argument	ist -> st		1401715	1					
ANR	1401913	PtrMemberAccess	ist -> st		1401715	0					
ANR	1401914	Identifier	ist		1401715	0					
ANR	1401915	Identifier	st		1401715	1					
ANR	1401916	Argument	NULL		1401715	2					
ANR	1401917	Identifier	NULL		1401715	0					
ANR	1401918	IfStatement	if ( ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_SUBTITLE )		1401715	17					
ANR	1401919	Condition	ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_SUBTITLE	61:8:1110:1158	1401715	0	True				
ANR	1401920	EqualityExpression	ist -> dec_ctx -> codec_type == AVMEDIA_TYPE_SUBTITLE		1401715	0		==			
ANR	1401921	PtrMemberAccess	ist -> dec_ctx -> codec_type		1401715	0					
ANR	1401922	PtrMemberAccess	ist -> dec_ctx		1401715	0					
ANR	1401923	Identifier	ist		1401715	0					
ANR	1401924	Identifier	dec_ctx		1401715	1					
ANR	1401925	Identifier	codec_type		1401715	1					
ANR	1401926	Identifier	AVMEDIA_TYPE_SUBTITLE		1401715	1					
ANR	1401927	CompoundStatement		57:59:1020:1020	1401715	1					
ANR	1401928	ExpressionStatement	ret = sub2video_prepare ( ist )	63:8:1172:1200	1401715	0	True				
ANR	1401929	AssignmentExpression	ret = sub2video_prepare ( ist )		1401715	0		=			
ANR	1401930	Identifier	ret		1401715	0					
ANR	1401931	CallExpression	sub2video_prepare ( ist )		1401715	1					
ANR	1401932	Callee	sub2video_prepare		1401715	0					
ANR	1401933	Identifier	sub2video_prepare		1401715	0					
ANR	1401934	ArgumentList	ist		1401715	1					
ANR	1401935	Argument	ist		1401715	0					
ANR	1401936	Identifier	ist		1401715	0					
ANR	1401937	IfStatement	if ( ret < 0 )		1401715	1					
ANR	1401938	Condition	ret < 0	65:12:1215:1221	1401715	0	True				
ANR	1401939	RelationalExpression	ret < 0		1401715	0		<			
ANR	1401940	Identifier	ret		1401715	0					
ANR	1401941	PrimaryExpression	0		1401715	1					
ANR	1401942	ReturnStatement	return ret ;	67:12:1237:1247	1401715	1	True				
ANR	1401943	Identifier	ret		1401715	0					
ANR	1401944	ExpressionStatement	sar = ist -> st -> sample_aspect_ratio . num ? ist -> st -> sample_aspect_ratio : ist -> dec_ctx -> sample_aspect_ratio	73:4:1263:1390	1401715	18	True				
ANR	1401945	AssignmentExpression	sar = ist -> st -> sample_aspect_ratio . num ? ist -> st -> sample_aspect_ratio : ist -> dec_ctx -> sample_aspect_ratio		1401715	0		=			
ANR	1401946	Identifier	sar		1401715	0					
ANR	1401947	ConditionalExpression	ist -> st -> sample_aspect_ratio . num ? ist -> st -> sample_aspect_ratio : ist -> dec_ctx -> sample_aspect_ratio		1401715	1					
ANR	1401948	Condition	ist -> st -> sample_aspect_ratio . num		1401715	0					
ANR	1401949	MemberAccess	ist -> st -> sample_aspect_ratio . num		1401715	0					
ANR	1401950	PtrMemberAccess	ist -> st -> sample_aspect_ratio		1401715	0					
ANR	1401951	PtrMemberAccess	ist -> st		1401715	0					
ANR	1401952	Identifier	ist		1401715	0					
ANR	1401953	Identifier	st		1401715	1					
ANR	1401954	Identifier	sample_aspect_ratio		1401715	1					
ANR	1401955	Identifier	num		1401715	1					
ANR	1401956	PtrMemberAccess	ist -> st -> sample_aspect_ratio		1401715	1					
ANR	1401957	PtrMemberAccess	ist -> st		1401715	0					
ANR	1401958	Identifier	ist		1401715	0					
ANR	1401959	Identifier	st		1401715	1					
ANR	1401960	Identifier	sample_aspect_ratio		1401715	1					
ANR	1401961	PtrMemberAccess	ist -> dec_ctx -> sample_aspect_ratio		1401715	2					
ANR	1401962	PtrMemberAccess	ist -> dec_ctx		1401715	0					
ANR	1401963	Identifier	ist		1401715	0					
ANR	1401964	Identifier	dec_ctx		1401715	1					
ANR	1401965	Identifier	sample_aspect_ratio		1401715	1					
ANR	1401966	IfStatement	if ( ! sar . den )		1401715	19					
ANR	1401967	Condition	! sar . den	79:7:1400:1407	1401715	0	True				
ANR	1401968	UnaryOperationExpression	! sar . den		1401715	0					
ANR	1401969	UnaryOperator	!		1401715	0					
ANR	1401970	MemberAccess	sar . den		1401715	1					
ANR	1401971	Identifier	sar		1401715	0					
ANR	1401972	Identifier	den		1401715	1					
ANR	1401973	Statement	sar	81:8:1419:1421	1401715	1	True				
ANR	1401974	Statement	=	81:12:1423:1423	1401715	20	True				
ANR	1401975	Statement	(	81:14:1425:1425	1401715	21	True				
ANR	1401976	Statement	AVRational	81:15:1426:1435	1401715	22	True				
ANR	1401977	Statement	)	81:25:1436:1436	1401715	23	True				
ANR	1401978	CompoundStatement		77:26:1296:1296	1401715	24					
ANR	1401979	Statement	0	81:27:1438:1438	1401715	0	True				
ANR	1401980	Statement	","	81:28:1439:1439	1401715	1	True				
ANR	1401981	Statement	1	81:29:1440:1440	1401715	2	True				
ANR	1401982	ExpressionStatement		81:31:1442:1442	1401715	25	True				
ANR	1401983	ExpressionStatement	"av_bprint_init ( & args , 0 , 1 )"	83:4:1449:1476	1401715	26	True				
ANR	1401984	CallExpression	"av_bprint_init ( & args , 0 , 1 )"		1401715	0					
ANR	1401985	Callee	av_bprint_init		1401715	0					
ANR	1401986	Identifier	av_bprint_init		1401715	0					
ANR	1401987	ArgumentList	& args		1401715	1					
ANR	1401988	Argument	& args		1401715	0					
ANR	1401989	UnaryOperationExpression	& args		1401715	0					
ANR	1401990	UnaryOperator	&		1401715	0					
ANR	1401991	Identifier	args		1401715	1					
ANR	1401992	Argument	0		1401715	1					
ANR	1401993	PrimaryExpression	0		1401715	0					
ANR	1401994	Argument	1		1401715	2					
ANR	1401995	PrimaryExpression	1		1401715	0					
ANR	1401996	Statement	av_bprintf	85:4:1483:1492	1401715	27	True				
ANR	1401997	Statement	(	85:14:1493:1493	1401715	28	True				
ANR	1401998	Statement	&	85:15:1494:1494	1401715	29	True				
ANR	1401999	Statement	args	85:16:1495:1498	1401715	30	True				
ANR	1402000	Statement	","	85:20:1499:1499	1401715	31	True				
ANR	1402001	Statement	"""video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:"""	87:13:1515:1560	1401715	32	True				
ANR	1402002	Statement	"""pixel_aspect=%d/%d:sws_param=flags=%d"""	89:13:1576:1614	1401715	33	True				
ANR	1402003	Statement	","	89:52:1615:1615	1401715	34	True				
ANR	1402004	Statement	ist	89:54:1617:1619	1401715	35	True				
ANR	1402005	Statement	->	89:57:1620:1621	1401715	36	True				
ANR	1402006	Statement	resample_width	89:59:1622:1635	1401715	37	True				
ANR	1402007	Statement	","	89:73:1636:1636	1401715	38	True				
ANR	1402008	Statement	ist	91:13:1652:1654	1401715	39	True				
ANR	1402009	Statement	->	91:16:1655:1656	1401715	40	True				
ANR	1402010	Statement	resample_height	91:18:1657:1671	1401715	41	True				
ANR	1402011	Statement	","	91:33:1672:1672	1401715	42	True				
ANR	1402012	Statement	ist	93:13:1688:1690	1401715	43	True				
ANR	1402013	Statement	->	93:16:1691:1692	1401715	44	True				
ANR	1402014	Statement	hwaccel_retrieve_data	93:18:1693:1713	1401715	45	True				
ANR	1402015	Statement	?	93:40:1715:1715	1401715	46	True				
ANR	1402016	Statement	ist	93:42:1717:1719	1401715	47	True				
ANR	1402017	Statement	->	93:45:1720:1721	1401715	48	True				
ANR	1402018	Label	hwaccel_retrieved_pix_fmt :	93:47:1722:1748	1401715	49	True				
ANR	1402019	Identifier	hwaccel_retrieved_pix_fmt		1401715	0					
ANR	1402020	Statement	ist	93:75:1750:1752	1401715	50	True				
ANR	1402021	Statement	->	93:78:1753:1754	1401715	51	True				
ANR	1402022	Statement	resample_pix_fmt	93:80:1755:1770	1401715	52	True				
ANR	1402023	Statement	","	93:96:1771:1771	1401715	53	True				
ANR	1402024	Statement	tb	95:13:1787:1788	1401715	54	True				
ANR	1402025	Statement	.	95:15:1789:1789	1401715	55	True				
ANR	1402026	Statement	num	95:16:1790:1792	1401715	56	True				
ANR	1402027	Statement	","	95:19:1793:1793	1401715	57	True				
ANR	1402028	Statement	tb	95:21:1795:1796	1401715	58	True				
ANR	1402029	Statement	.	95:23:1797:1797	1401715	59	True				
ANR	1402030	Statement	den	95:24:1798:1800	1401715	60	True				
ANR	1402031	Statement	","	95:27:1801:1801	1401715	61	True				
ANR	1402032	Statement	sar	95:29:1803:1805	1401715	62	True				
ANR	1402033	Statement	.	95:32:1806:1806	1401715	63	True				
ANR	1402034	Statement	num	95:33:1807:1809	1401715	64	True				
ANR	1402035	Statement	","	95:36:1810:1810	1401715	65	True				
ANR	1402036	Statement	sar	95:38:1812:1814	1401715	66	True				
ANR	1402037	Statement	.	95:41:1815:1815	1401715	67	True				
ANR	1402038	Statement	den	95:42:1816:1818	1401715	68	True				
ANR	1402039	Statement	","	95:45:1819:1819	1401715	69	True				
ANR	1402040	Statement	SWS_BILINEAR	97:13:1835:1846	1401715	70	True				
ANR	1402041	Statement	+	97:26:1848:1848	1401715	71	True				
ANR	1402042	Statement	(	97:28:1850:1850	1401715	72	True				
ANR	1402043	Statement	(	97:29:1851:1851	1401715	73	True				
ANR	1402044	Statement	ist	97:30:1852:1854	1401715	74	True				
ANR	1402045	Statement	->	97:33:1855:1856	1401715	75	True				
ANR	1402046	Statement	dec_ctx	97:35:1857:1863	1401715	76	True				
ANR	1402047	Statement	->	97:42:1864:1865	1401715	77	True				
ANR	1402048	Statement	flags	97:44:1866:1870	1401715	78	True				
ANR	1402049	Statement	&	97:49:1871:1871	1401715	79	True				
ANR	1402050	Statement	AV_CODEC_FLAG_BITEXACT	97:50:1872:1893	1401715	80	True				
ANR	1402051	Statement	)	97:72:1894:1894	1401715	81	True				
ANR	1402052	Statement	?	97:74:1896:1896	1401715	82	True				
ANR	1402053	Label	SWS_BITEXACT :	97:76:1898:1910	1401715	83	True				
ANR	1402054	Identifier	SWS_BITEXACT		1401715	0					
ANR	1402055	Statement	0	97:89:1911:1911	1401715	84	True				
ANR	1402056	Statement	)	97:90:1912:1912	1401715	85	True				
ANR	1402057	Statement	)	97:91:1913:1913	1401715	86	True				
ANR	1402058	ExpressionStatement		97:92:1914:1914	1401715	87	True				
ANR	1402059	IfStatement	if ( fr . num && fr . den )		1401715	88					
ANR	1402060	Condition	fr . num && fr . den	99:8:1925:1940	1401715	0	True				
ANR	1402061	AndExpression	fr . num && fr . den		1401715	0		&&			
ANR	1402062	MemberAccess	fr . num		1401715	0					
ANR	1402063	Identifier	fr		1401715	0					
ANR	1402064	Identifier	num		1401715	1					
ANR	1402065	MemberAccess	fr . den		1401715	1					
ANR	1402066	Identifier	fr		1401715	0					
ANR	1402067	Identifier	den		1401715	1					
ANR	1402068	ExpressionStatement	"av_bprintf ( & args , "":frame_rate=%d/%d"" , fr . num , fr . den )"	101:8:1952:2006	1401715	1	True				
ANR	1402069	CallExpression	"av_bprintf ( & args , "":frame_rate=%d/%d"" , fr . num , fr . den )"		1401715	0					
ANR	1402070	Callee	av_bprintf		1401715	0					
ANR	1402071	Identifier	av_bprintf		1401715	0					
ANR	1402072	ArgumentList	& args		1401715	1					
ANR	1402073	Argument	& args		1401715	0					
ANR	1402074	UnaryOperationExpression	& args		1401715	0					
ANR	1402075	UnaryOperator	&		1401715	0					
ANR	1402076	Identifier	args		1401715	1					
ANR	1402077	Argument	""":frame_rate=%d/%d"""		1401715	1					
ANR	1402078	PrimaryExpression	""":frame_rate=%d/%d"""		1401715	0					
ANR	1402079	Argument	fr . num		1401715	2					
ANR	1402080	MemberAccess	fr . num		1401715	0					
ANR	1402081	Identifier	fr		1401715	0					
ANR	1402082	Identifier	num		1401715	1					
ANR	1402083	Argument	fr . den		1401715	3					
ANR	1402084	MemberAccess	fr . den		1401715	0					
ANR	1402085	Identifier	fr		1401715	0					
ANR	1402086	Identifier	den		1401715	1					
ANR	1402087	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""graph %d input from stream %d:%d"" , fg -> index , ist -> file_index , ist -> st -> index )"	103:4:2013:2135	1401715	89	True				
ANR	1402088	CallExpression	"snprintf ( name , sizeof ( name ) , ""graph %d input from stream %d:%d"" , fg -> index , ist -> file_index , ist -> st -> index )"		1401715	0					
ANR	1402089	Callee	snprintf		1401715	0					
ANR	1402090	Identifier	snprintf		1401715	0					
ANR	1402091	ArgumentList	name		1401715	1					
ANR	1402092	Argument	name		1401715	0					
ANR	1402093	Identifier	name		1401715	0					
ANR	1402094	Argument	sizeof ( name )		1401715	1					
ANR	1402095	SizeofExpression	sizeof ( name )		1401715	0					
ANR	1402096	Sizeof	sizeof		1401715	0					
ANR	1402097	SizeofOperand	name		1401715	1					
ANR	1402098	Argument	"""graph %d input from stream %d:%d"""		1401715	2					
ANR	1402099	PrimaryExpression	"""graph %d input from stream %d:%d"""		1401715	0					
ANR	1402100	Argument	fg -> index		1401715	3					
ANR	1402101	PtrMemberAccess	fg -> index		1401715	0					
ANR	1402102	Identifier	fg		1401715	0					
ANR	1402103	Identifier	index		1401715	1					
ANR	1402104	Argument	ist -> file_index		1401715	4					
ANR	1402105	PtrMemberAccess	ist -> file_index		1401715	0					
ANR	1402106	Identifier	ist		1401715	0					
ANR	1402107	Identifier	file_index		1401715	1					
ANR	1402108	Argument	ist -> st -> index		1401715	5					
ANR	1402109	PtrMemberAccess	ist -> st -> index		1401715	0					
ANR	1402110	PtrMemberAccess	ist -> st		1401715	0					
ANR	1402111	Identifier	ist		1401715	0					
ANR	1402112	Identifier	st		1401715	1					
ANR	1402113	Identifier	index		1401715	1					
ANR	1402114	IfStatement	"if ( ( ret = avfilter_graph_create_filter ( & ifilter -> filter , buffer_filt , name , args . str , NULL , fg -> graph ) ) < 0 )"		1401715	90					
ANR	1402115	Condition	"( ret = avfilter_graph_create_filter ( & ifilter -> filter , buffer_filt , name , args . str , NULL , fg -> graph ) ) < 0"	111:8:2150:2298	1401715	0	True				
ANR	1402116	RelationalExpression	"( ret = avfilter_graph_create_filter ( & ifilter -> filter , buffer_filt , name , args . str , NULL , fg -> graph ) ) < 0"		1401715	0		<			
ANR	1402117	AssignmentExpression	"ret = avfilter_graph_create_filter ( & ifilter -> filter , buffer_filt , name , args . str , NULL , fg -> graph )"		1401715	0		=			
ANR	1402118	Identifier	ret		1401715	0					
ANR	1402119	CallExpression	"avfilter_graph_create_filter ( & ifilter -> filter , buffer_filt , name , args . str , NULL , fg -> graph )"		1401715	1					
ANR	1402120	Callee	avfilter_graph_create_filter		1401715	0					
ANR	1402121	Identifier	avfilter_graph_create_filter		1401715	0					
ANR	1402122	ArgumentList	& ifilter -> filter		1401715	1					
ANR	1402123	Argument	& ifilter -> filter		1401715	0					
ANR	1402124	UnaryOperationExpression	& ifilter -> filter		1401715	0					
ANR	1402125	UnaryOperator	&		1401715	0					
ANR	1402126	PtrMemberAccess	ifilter -> filter		1401715	1					
ANR	1402127	Identifier	ifilter		1401715	0					
ANR	1402128	Identifier	filter		1401715	1					
ANR	1402129	Argument	buffer_filt		1401715	1					
ANR	1402130	Identifier	buffer_filt		1401715	0					
ANR	1402131	Argument	name		1401715	2					
ANR	1402132	Identifier	name		1401715	0					
ANR	1402133	Argument	args . str		1401715	3					
ANR	1402134	MemberAccess	args . str		1401715	0					
ANR	1402135	Identifier	args		1401715	0					
ANR	1402136	Identifier	str		1401715	1					
ANR	1402137	Argument	NULL		1401715	4					
ANR	1402138	Identifier	NULL		1401715	0					
ANR	1402139	Argument	fg -> graph		1401715	5					
ANR	1402140	PtrMemberAccess	fg -> graph		1401715	0					
ANR	1402141	Identifier	fg		1401715	0					
ANR	1402142	Identifier	graph		1401715	1					
ANR	1402143	PrimaryExpression	0		1401715	1					
ANR	1402144	ReturnStatement	return ret ;	115:8:2310:2320	1401715	1	True				
ANR	1402145	Identifier	ret		1401715	0					
ANR	1402146	ExpressionStatement	par -> hw_frames_ctx = ist -> hw_frames_ctx	117:4:2327:2366	1401715	91	True				
ANR	1402147	AssignmentExpression	par -> hw_frames_ctx = ist -> hw_frames_ctx		1401715	0		=			
ANR	1402148	PtrMemberAccess	par -> hw_frames_ctx		1401715	0					
ANR	1402149	Identifier	par		1401715	0					
ANR	1402150	Identifier	hw_frames_ctx		1401715	1					
ANR	1402151	PtrMemberAccess	ist -> hw_frames_ctx		1401715	1					
ANR	1402152	Identifier	ist		1401715	0					
ANR	1402153	Identifier	hw_frames_ctx		1401715	1					
ANR	1402154	ExpressionStatement	"ret = av_buffersrc_parameters_set ( ifilter -> filter , par )"	119:4:2373:2428	1401715	92	True				
ANR	1402155	AssignmentExpression	"ret = av_buffersrc_parameters_set ( ifilter -> filter , par )"		1401715	0		=			
ANR	1402156	Identifier	ret		1401715	0					
ANR	1402157	CallExpression	"av_buffersrc_parameters_set ( ifilter -> filter , par )"		1401715	1					
ANR	1402158	Callee	av_buffersrc_parameters_set		1401715	0					
ANR	1402159	Identifier	av_buffersrc_parameters_set		1401715	0					
ANR	1402160	ArgumentList	ifilter -> filter		1401715	1					
ANR	1402161	Argument	ifilter -> filter		1401715	0					
ANR	1402162	PtrMemberAccess	ifilter -> filter		1401715	0					
ANR	1402163	Identifier	ifilter		1401715	0					
ANR	1402164	Identifier	filter		1401715	1					
ANR	1402165	Argument	par		1401715	1					
ANR	1402166	Identifier	par		1401715	0					
ANR	1402167	IfStatement	if ( ret < 0 )		1401715	93					
ANR	1402168	Condition	ret < 0	121:8:2439:2445	1401715	0	True				
ANR	1402169	RelationalExpression	ret < 0		1401715	0		<			
ANR	1402170	Identifier	ret		1401715	0					
ANR	1402171	PrimaryExpression	0		1401715	1					
ANR	1402172	ReturnStatement	return ret ;	123:8:2457:2467	1401715	1	True				
ANR	1402173	Identifier	ret		1401715	0					
ANR	1402174	ExpressionStatement	av_freep ( & par )	125:4:2474:2488	1401715	94	True				
ANR	1402175	CallExpression	av_freep ( & par )		1401715	0					
ANR	1402176	Callee	av_freep		1401715	0					
ANR	1402177	Identifier	av_freep		1401715	0					
ANR	1402178	ArgumentList	& par		1401715	1					
ANR	1402179	Argument	& par		1401715	0					
ANR	1402180	UnaryOperationExpression	& par		1401715	0					
ANR	1402181	UnaryOperator	&		1401715	0					
ANR	1402182	Identifier	par		1401715	1					
ANR	1402183	ExpressionStatement	last_filter = ifilter -> filter	127:4:2495:2524	1401715	95	True				
ANR	1402184	AssignmentExpression	last_filter = ifilter -> filter		1401715	0		=			
ANR	1402185	Identifier	last_filter		1401715	0					
ANR	1402186	PtrMemberAccess	ifilter -> filter		1401715	1					
ANR	1402187	Identifier	ifilter		1401715	0					
ANR	1402188	Identifier	filter		1401715	1					
ANR	1402189	IfStatement	if ( ist -> autorotate )		1401715	96					
ANR	1402190	Condition	ist -> autorotate	131:8:2537:2551	1401715	0	True				
ANR	1402191	PtrMemberAccess	ist -> autorotate		1401715	0					
ANR	1402192	Identifier	ist		1401715	0					
ANR	1402193	Identifier	autorotate		1401715	1					
ANR	1402194	CompoundStatement		129:8:2424:2460	1401715	1					
ANR	1402195	IdentifierDeclStatement	double theta = get_rotation ( ist -> st ) ;	133:8:2565:2601	1401715	0	True				
ANR	1402196	IdentifierDecl	theta = get_rotation ( ist -> st )		1401715	0					
ANR	1402197	IdentifierDeclType	double		1401715	0					
ANR	1402198	Identifier	theta		1401715	1					
ANR	1402199	AssignmentExpression	theta = get_rotation ( ist -> st )		1401715	2		=			
ANR	1402200	Identifier	theta		1401715	0					
ANR	1402201	CallExpression	get_rotation ( ist -> st )		1401715	1					
ANR	1402202	Callee	get_rotation		1401715	0					
ANR	1402203	Identifier	get_rotation		1401715	0					
ANR	1402204	ArgumentList	ist -> st		1401715	1					
ANR	1402205	Argument	ist -> st		1401715	0					
ANR	1402206	PtrMemberAccess	ist -> st		1401715	0					
ANR	1402207	Identifier	ist		1401715	0					
ANR	1402208	Identifier	st		1401715	1					
ANR	1402209	IfStatement	if ( fabs ( theta - 90 ) < 1.0 )		1401715	1					
ANR	1402210	Condition	fabs ( theta - 90 ) < 1.0	137:12:2618:2639	1401715	0	True				
ANR	1402211	RelationalExpression	fabs ( theta - 90 ) < 1.0		1401715	0		<			
ANR	1402212	CallExpression	fabs ( theta - 90 )		1401715	0					
ANR	1402213	Callee	fabs		1401715	0					
ANR	1402214	Identifier	fabs		1401715	0					
ANR	1402215	ArgumentList	theta - 90		1401715	1					
ANR	1402216	Argument	theta - 90		1401715	0					
ANR	1402217	AdditiveExpression	theta - 90		1401715	0		-			
ANR	1402218	Identifier	theta		1401715	0					
ANR	1402219	PrimaryExpression	90		1401715	1					
ANR	1402220	PrimaryExpression	1.0		1401715	1					
ANR	1402221	CompoundStatement		133:36:2501:2501	1401715	1					
ANR	1402222	ExpressionStatement	"ret = insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""clock"" )"	139:12:2657:2722	1401715	0	True				
ANR	1402223	AssignmentExpression	"ret = insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""clock"" )"		1401715	0		=			
ANR	1402224	Identifier	ret		1401715	0					
ANR	1402225	CallExpression	"insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""clock"" )"		1401715	1					
ANR	1402226	Callee	insert_filter		1401715	0					
ANR	1402227	Identifier	insert_filter		1401715	0					
ANR	1402228	ArgumentList	& last_filter		1401715	1					
ANR	1402229	Argument	& last_filter		1401715	0					
ANR	1402230	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402231	UnaryOperator	&		1401715	0					
ANR	1402232	Identifier	last_filter		1401715	1					
ANR	1402233	Argument	& pad_idx		1401715	1					
ANR	1402234	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402235	UnaryOperator	&		1401715	0					
ANR	1402236	Identifier	pad_idx		1401715	1					
ANR	1402237	Argument	"""transpose"""		1401715	2					
ANR	1402238	PrimaryExpression	"""transpose"""		1401715	0					
ANR	1402239	Argument	"""clock"""		1401715	3					
ANR	1402240	PrimaryExpression	"""clock"""		1401715	0					
ANR	1402241	ElseStatement	else		1401715	0					
ANR	1402242	IfStatement	if ( fabs ( theta - 180 ) < 1.0 )		1401715	0					
ANR	1402243	Condition	fabs ( theta - 180 ) < 1.0	141:19:2744:2766	1401715	0	True				
ANR	1402244	RelationalExpression	fabs ( theta - 180 ) < 1.0		1401715	0		<			
ANR	1402245	CallExpression	fabs ( theta - 180 )		1401715	0					
ANR	1402246	Callee	fabs		1401715	0					
ANR	1402247	Identifier	fabs		1401715	0					
ANR	1402248	ArgumentList	theta - 180		1401715	1					
ANR	1402249	Argument	theta - 180		1401715	0					
ANR	1402250	AdditiveExpression	theta - 180		1401715	0		-			
ANR	1402251	Identifier	theta		1401715	0					
ANR	1402252	PrimaryExpression	180		1401715	1					
ANR	1402253	PrimaryExpression	1.0		1401715	1					
ANR	1402254	CompoundStatement		137:44:2628:2628	1401715	1					
ANR	1402255	ExpressionStatement	"ret = insert_filter ( & last_filter , & pad_idx , ""hflip"" , NULL )"	143:12:2784:2842	1401715	0	True				
ANR	1402256	AssignmentExpression	"ret = insert_filter ( & last_filter , & pad_idx , ""hflip"" , NULL )"		1401715	0		=			
ANR	1402257	Identifier	ret		1401715	0					
ANR	1402258	CallExpression	"insert_filter ( & last_filter , & pad_idx , ""hflip"" , NULL )"		1401715	1					
ANR	1402259	Callee	insert_filter		1401715	0					
ANR	1402260	Identifier	insert_filter		1401715	0					
ANR	1402261	ArgumentList	& last_filter		1401715	1					
ANR	1402262	Argument	& last_filter		1401715	0					
ANR	1402263	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402264	UnaryOperator	&		1401715	0					
ANR	1402265	Identifier	last_filter		1401715	1					
ANR	1402266	Argument	& pad_idx		1401715	1					
ANR	1402267	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402268	UnaryOperator	&		1401715	0					
ANR	1402269	Identifier	pad_idx		1401715	1					
ANR	1402270	Argument	"""hflip"""		1401715	2					
ANR	1402271	PrimaryExpression	"""hflip"""		1401715	0					
ANR	1402272	Argument	NULL		1401715	3					
ANR	1402273	Identifier	NULL		1401715	0					
ANR	1402274	IfStatement	if ( ret < 0 )		1401715	1					
ANR	1402275	Condition	ret < 0	145:16:2861:2867	1401715	0	True				
ANR	1402276	RelationalExpression	ret < 0		1401715	0		<			
ANR	1402277	Identifier	ret		1401715	0					
ANR	1402278	PrimaryExpression	0		1401715	1					
ANR	1402279	ReturnStatement	return ret ;	147:16:2887:2897	1401715	1	True				
ANR	1402280	Identifier	ret		1401715	0					
ANR	1402281	ExpressionStatement	"ret = insert_filter ( & last_filter , & pad_idx , ""vflip"" , NULL )"	149:12:2912:2970	1401715	2	True				
ANR	1402282	AssignmentExpression	"ret = insert_filter ( & last_filter , & pad_idx , ""vflip"" , NULL )"		1401715	0		=			
ANR	1402283	Identifier	ret		1401715	0					
ANR	1402284	CallExpression	"insert_filter ( & last_filter , & pad_idx , ""vflip"" , NULL )"		1401715	1					
ANR	1402285	Callee	insert_filter		1401715	0					
ANR	1402286	Identifier	insert_filter		1401715	0					
ANR	1402287	ArgumentList	& last_filter		1401715	1					
ANR	1402288	Argument	& last_filter		1401715	0					
ANR	1402289	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402290	UnaryOperator	&		1401715	0					
ANR	1402291	Identifier	last_filter		1401715	1					
ANR	1402292	Argument	& pad_idx		1401715	1					
ANR	1402293	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402294	UnaryOperator	&		1401715	0					
ANR	1402295	Identifier	pad_idx		1401715	1					
ANR	1402296	Argument	"""vflip"""		1401715	2					
ANR	1402297	PrimaryExpression	"""vflip"""		1401715	0					
ANR	1402298	Argument	NULL		1401715	3					
ANR	1402299	Identifier	NULL		1401715	0					
ANR	1402300	ElseStatement	else		1401715	0					
ANR	1402301	IfStatement	if ( fabs ( theta - 270 ) < 1.0 )		1401715	0					
ANR	1402302	Condition	fabs ( theta - 270 ) < 1.0	151:19:2992:3014	1401715	0	True				
ANR	1402303	RelationalExpression	fabs ( theta - 270 ) < 1.0		1401715	0		<			
ANR	1402304	CallExpression	fabs ( theta - 270 )		1401715	0					
ANR	1402305	Callee	fabs		1401715	0					
ANR	1402306	Identifier	fabs		1401715	0					
ANR	1402307	ArgumentList	theta - 270		1401715	1					
ANR	1402308	Argument	theta - 270		1401715	0					
ANR	1402309	AdditiveExpression	theta - 270		1401715	0		-			
ANR	1402310	Identifier	theta		1401715	0					
ANR	1402311	PrimaryExpression	270		1401715	1					
ANR	1402312	PrimaryExpression	1.0		1401715	1					
ANR	1402313	CompoundStatement		147:44:2876:2876	1401715	1					
ANR	1402314	ExpressionStatement	"ret = insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""cclock"" )"	153:12:3032:3098	1401715	0	True				
ANR	1402315	AssignmentExpression	"ret = insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""cclock"" )"		1401715	0		=			
ANR	1402316	Identifier	ret		1401715	0					
ANR	1402317	CallExpression	"insert_filter ( & last_filter , & pad_idx , ""transpose"" , ""cclock"" )"		1401715	1					
ANR	1402318	Callee	insert_filter		1401715	0					
ANR	1402319	Identifier	insert_filter		1401715	0					
ANR	1402320	ArgumentList	& last_filter		1401715	1					
ANR	1402321	Argument	& last_filter		1401715	0					
ANR	1402322	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402323	UnaryOperator	&		1401715	0					
ANR	1402324	Identifier	last_filter		1401715	1					
ANR	1402325	Argument	& pad_idx		1401715	1					
ANR	1402326	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402327	UnaryOperator	&		1401715	0					
ANR	1402328	Identifier	pad_idx		1401715	1					
ANR	1402329	Argument	"""transpose"""		1401715	2					
ANR	1402330	PrimaryExpression	"""transpose"""		1401715	0					
ANR	1402331	Argument	"""cclock"""		1401715	3					
ANR	1402332	PrimaryExpression	"""cclock"""		1401715	0					
ANR	1402333	ElseStatement	else		1401715	0					
ANR	1402334	IfStatement	if ( fabs ( theta ) > 1.0 )		1401715	0					
ANR	1402335	Condition	fabs ( theta ) > 1.0	155:19:3120:3136	1401715	0	True				
ANR	1402336	RelationalExpression	fabs ( theta ) > 1.0		1401715	0		>			
ANR	1402337	CallExpression	fabs ( theta )		1401715	0					
ANR	1402338	Callee	fabs		1401715	0					
ANR	1402339	Identifier	fabs		1401715	0					
ANR	1402340	ArgumentList	theta		1401715	1					
ANR	1402341	Argument	theta		1401715	0					
ANR	1402342	Identifier	theta		1401715	0					
ANR	1402343	PrimaryExpression	1.0		1401715	1					
ANR	1402344	CompoundStatement		153:12:3013:3032	1401715	1					
ANR	1402345	IdentifierDeclStatement	char rotate_buf [ 64 ] ;	157:12:3154:3173	1401715	0	True				
ANR	1402346	IdentifierDecl	rotate_buf [ 64 ]		1401715	0					
ANR	1402347	IdentifierDeclType	char [ 64 ]		1401715	0					
ANR	1402348	Identifier	rotate_buf		1401715	1					
ANR	1402349	PrimaryExpression	64		1401715	2					
ANR	1402350	ExpressionStatement	"snprintf ( rotate_buf , sizeof ( rotate_buf ) , ""%f*PI/180"" , theta )"	159:12:3188:3248	1401715	1	True				
ANR	1402351	CallExpression	"snprintf ( rotate_buf , sizeof ( rotate_buf ) , ""%f*PI/180"" , theta )"		1401715	0					
ANR	1402352	Callee	snprintf		1401715	0					
ANR	1402353	Identifier	snprintf		1401715	0					
ANR	1402354	ArgumentList	rotate_buf		1401715	1					
ANR	1402355	Argument	rotate_buf		1401715	0					
ANR	1402356	Identifier	rotate_buf		1401715	0					
ANR	1402357	Argument	sizeof ( rotate_buf )		1401715	1					
ANR	1402358	SizeofExpression	sizeof ( rotate_buf )		1401715	0					
ANR	1402359	Sizeof	sizeof		1401715	0					
ANR	1402360	SizeofOperand	rotate_buf		1401715	1					
ANR	1402361	Argument	"""%f*PI/180"""		1401715	2					
ANR	1402362	PrimaryExpression	"""%f*PI/180"""		1401715	0					
ANR	1402363	Argument	theta		1401715	3					
ANR	1402364	Identifier	theta		1401715	0					
ANR	1402365	ExpressionStatement	"ret = insert_filter ( & last_filter , & pad_idx , ""rotate"" , rotate_buf )"	161:12:3263:3328	1401715	2	True				
ANR	1402366	AssignmentExpression	"ret = insert_filter ( & last_filter , & pad_idx , ""rotate"" , rotate_buf )"		1401715	0		=			
ANR	1402367	Identifier	ret		1401715	0					
ANR	1402368	CallExpression	"insert_filter ( & last_filter , & pad_idx , ""rotate"" , rotate_buf )"		1401715	1					
ANR	1402369	Callee	insert_filter		1401715	0					
ANR	1402370	Identifier	insert_filter		1401715	0					
ANR	1402371	ArgumentList	& last_filter		1401715	1					
ANR	1402372	Argument	& last_filter		1401715	0					
ANR	1402373	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402374	UnaryOperator	&		1401715	0					
ANR	1402375	Identifier	last_filter		1401715	1					
ANR	1402376	Argument	& pad_idx		1401715	1					
ANR	1402377	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402378	UnaryOperator	&		1401715	0					
ANR	1402379	Identifier	pad_idx		1401715	1					
ANR	1402380	Argument	"""rotate"""		1401715	2					
ANR	1402381	PrimaryExpression	"""rotate"""		1401715	0					
ANR	1402382	Argument	rotate_buf		1401715	3					
ANR	1402383	Identifier	rotate_buf		1401715	0					
ANR	1402384	IfStatement	if ( ret < 0 )		1401715	2					
ANR	1402385	Condition	ret < 0	165:12:3354:3360	1401715	0	True				
ANR	1402386	RelationalExpression	ret < 0		1401715	0		<			
ANR	1402387	Identifier	ret		1401715	0					
ANR	1402388	PrimaryExpression	0		1401715	1					
ANR	1402389	ReturnStatement	return ret ;	167:12:3376:3386	1401715	1	True				
ANR	1402390	Identifier	ret		1401715	0					
ANR	1402391	IfStatement	if ( ist -> framerate . num )		1401715	97					
ANR	1402392	Condition	ist -> framerate . num	173:8:3406:3423	1401715	0	True				
ANR	1402393	MemberAccess	ist -> framerate . num		1401715	0					
ANR	1402394	PtrMemberAccess	ist -> framerate		1401715	0					
ANR	1402395	Identifier	ist		1401715	0					
ANR	1402396	Identifier	framerate		1401715	1					
ANR	1402397	Identifier	num		1401715	1					
ANR	1402398	CompoundStatement		171:8:3296:3319	1401715	1					
ANR	1402399	IdentifierDeclStatement	AVFilterContext * setpts ;	175:8:3437:3460	1401715	0	True				
ANR	1402400	IdentifierDecl	* setpts		1401715	0					
ANR	1402401	IdentifierDeclType	AVFilterContext *		1401715	0					
ANR	1402402	Identifier	setpts		1401715	1					
ANR	1402403	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""force CFR for input from stream %d:%d"" , ist -> file_index , ist -> st -> index )"	179:8:3473:3593	1401715	1	True				
ANR	1402404	CallExpression	"snprintf ( name , sizeof ( name ) , ""force CFR for input from stream %d:%d"" , ist -> file_index , ist -> st -> index )"		1401715	0					
ANR	1402405	Callee	snprintf		1401715	0					
ANR	1402406	Identifier	snprintf		1401715	0					
ANR	1402407	ArgumentList	name		1401715	1					
ANR	1402408	Argument	name		1401715	0					
ANR	1402409	Identifier	name		1401715	0					
ANR	1402410	Argument	sizeof ( name )		1401715	1					
ANR	1402411	SizeofExpression	sizeof ( name )		1401715	0					
ANR	1402412	Sizeof	sizeof		1401715	0					
ANR	1402413	SizeofOperand	name		1401715	1					
ANR	1402414	Argument	"""force CFR for input from stream %d:%d"""		1401715	2					
ANR	1402415	PrimaryExpression	"""force CFR for input from stream %d:%d"""		1401715	0					
ANR	1402416	Argument	ist -> file_index		1401715	3					
ANR	1402417	PtrMemberAccess	ist -> file_index		1401715	0					
ANR	1402418	Identifier	ist		1401715	0					
ANR	1402419	Identifier	file_index		1401715	1					
ANR	1402420	Argument	ist -> st -> index		1401715	4					
ANR	1402421	PtrMemberAccess	ist -> st -> index		1401715	0					
ANR	1402422	PtrMemberAccess	ist -> st		1401715	0					
ANR	1402423	Identifier	ist		1401715	0					
ANR	1402424	Identifier	st		1401715	1					
ANR	1402425	Identifier	index		1401715	1					
ANR	1402426	IfStatement	"if ( ( ret = avfilter_graph_create_filter ( & setpts , avfilter_get_by_name ( ""setpts"" ) , name , ""N"" , NULL , fg -> graph ) ) < 0 )"		1401715	2					
ANR	1402427	Condition	"( ret = avfilter_graph_create_filter ( & setpts , avfilter_get_by_name ( ""setpts"" ) , name , ""N"" , NULL , fg -> graph ) ) < 0"	183:12:3608:3863	1401715	0	True				
ANR	1402428	RelationalExpression	"( ret = avfilter_graph_create_filter ( & setpts , avfilter_get_by_name ( ""setpts"" ) , name , ""N"" , NULL , fg -> graph ) ) < 0"		1401715	0		<			
ANR	1402429	AssignmentExpression	"ret = avfilter_graph_create_filter ( & setpts , avfilter_get_by_name ( ""setpts"" ) , name , ""N"" , NULL , fg -> graph )"		1401715	0		=			
ANR	1402430	Identifier	ret		1401715	0					
ANR	1402431	CallExpression	"avfilter_graph_create_filter ( & setpts , avfilter_get_by_name ( ""setpts"" ) , name , ""N"" , NULL , fg -> graph )"		1401715	1					
ANR	1402432	Callee	avfilter_graph_create_filter		1401715	0					
ANR	1402433	Identifier	avfilter_graph_create_filter		1401715	0					
ANR	1402434	ArgumentList	& setpts		1401715	1					
ANR	1402435	Argument	& setpts		1401715	0					
ANR	1402436	UnaryOperationExpression	& setpts		1401715	0					
ANR	1402437	UnaryOperator	&		1401715	0					
ANR	1402438	Identifier	setpts		1401715	1					
ANR	1402439	Argument	"avfilter_get_by_name ( ""setpts"" )"		1401715	1					
ANR	1402440	CallExpression	"avfilter_get_by_name ( ""setpts"" )"		1401715	0					
ANR	1402441	Callee	avfilter_get_by_name		1401715	0					
ANR	1402442	Identifier	avfilter_get_by_name		1401715	0					
ANR	1402443	ArgumentList	"""setpts"""		1401715	1					
ANR	1402444	Argument	"""setpts"""		1401715	0					
ANR	1402445	PrimaryExpression	"""setpts"""		1401715	0					
ANR	1402446	Argument	name		1401715	2					
ANR	1402447	Identifier	name		1401715	0					
ANR	1402448	Argument	"""N"""		1401715	3					
ANR	1402449	PrimaryExpression	"""N"""		1401715	0					
ANR	1402450	Argument	NULL		1401715	4					
ANR	1402451	Identifier	NULL		1401715	0					
ANR	1402452	Argument	fg -> graph		1401715	5					
ANR	1402453	PtrMemberAccess	fg -> graph		1401715	0					
ANR	1402454	Identifier	fg		1401715	0					
ANR	1402455	Identifier	graph		1401715	1					
ANR	1402456	PrimaryExpression	0		1401715	1					
ANR	1402457	ReturnStatement	return ret ;	191:12:3879:3889	1401715	1	True				
ANR	1402458	Identifier	ret		1401715	0					
ANR	1402459	IfStatement	"if ( ( ret = avfilter_link ( last_filter , 0 , setpts , 0 ) ) < 0 )"		1401715	3					
ANR	1402460	Condition	"( ret = avfilter_link ( last_filter , 0 , setpts , 0 ) ) < 0"	195:12:3906:3957	1401715	0	True				
ANR	1402461	RelationalExpression	"( ret = avfilter_link ( last_filter , 0 , setpts , 0 ) ) < 0"		1401715	0		<			
ANR	1402462	AssignmentExpression	"ret = avfilter_link ( last_filter , 0 , setpts , 0 )"		1401715	0		=			
ANR	1402463	Identifier	ret		1401715	0					
ANR	1402464	CallExpression	"avfilter_link ( last_filter , 0 , setpts , 0 )"		1401715	1					
ANR	1402465	Callee	avfilter_link		1401715	0					
ANR	1402466	Identifier	avfilter_link		1401715	0					
ANR	1402467	ArgumentList	last_filter		1401715	1					
ANR	1402468	Argument	last_filter		1401715	0					
ANR	1402469	Identifier	last_filter		1401715	0					
ANR	1402470	Argument	0		1401715	1					
ANR	1402471	PrimaryExpression	0		1401715	0					
ANR	1402472	Argument	setpts		1401715	2					
ANR	1402473	Identifier	setpts		1401715	0					
ANR	1402474	Argument	0		1401715	3					
ANR	1402475	PrimaryExpression	0		1401715	0					
ANR	1402476	PrimaryExpression	0		1401715	1					
ANR	1402477	ReturnStatement	return ret ;	197:12:3973:3983	1401715	1	True				
ANR	1402478	Identifier	ret		1401715	0					
ANR	1402479	ExpressionStatement	last_filter = setpts	201:8:3996:4016	1401715	4	True				
ANR	1402480	AssignmentExpression	last_filter = setpts		1401715	0		=			
ANR	1402481	Identifier	last_filter		1401715	0					
ANR	1402482	Identifier	setpts		1401715	1					
ANR	1402483	IfStatement	if ( do_deinterlace )		1401715	98					
ANR	1402484	Condition	do_deinterlace	207:8:4036:4049	1401715	0	True				
ANR	1402485	Identifier	do_deinterlace		1401715	0					
ANR	1402486	CompoundStatement		205:8:3922:3944	1401715	1					
ANR	1402487	IdentifierDeclStatement	AVFilterContext * yadif ;	209:8:4063:4085	1401715	0	True				
ANR	1402488	IdentifierDecl	* yadif		1401715	0					
ANR	1402489	IdentifierDeclType	AVFilterContext *		1401715	0					
ANR	1402490	Identifier	yadif		1401715	1					
ANR	1402491	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""deinterlace input from stream %d:%d"" , ist -> file_index , ist -> st -> index )"	213:8:4098:4216	1401715	1	True				
ANR	1402492	CallExpression	"snprintf ( name , sizeof ( name ) , ""deinterlace input from stream %d:%d"" , ist -> file_index , ist -> st -> index )"		1401715	0					
ANR	1402493	Callee	snprintf		1401715	0					
ANR	1402494	Identifier	snprintf		1401715	0					
ANR	1402495	ArgumentList	name		1401715	1					
ANR	1402496	Argument	name		1401715	0					
ANR	1402497	Identifier	name		1401715	0					
ANR	1402498	Argument	sizeof ( name )		1401715	1					
ANR	1402499	SizeofExpression	sizeof ( name )		1401715	0					
ANR	1402500	Sizeof	sizeof		1401715	0					
ANR	1402501	SizeofOperand	name		1401715	1					
ANR	1402502	Argument	"""deinterlace input from stream %d:%d"""		1401715	2					
ANR	1402503	PrimaryExpression	"""deinterlace input from stream %d:%d"""		1401715	0					
ANR	1402504	Argument	ist -> file_index		1401715	3					
ANR	1402505	PtrMemberAccess	ist -> file_index		1401715	0					
ANR	1402506	Identifier	ist		1401715	0					
ANR	1402507	Identifier	file_index		1401715	1					
ANR	1402508	Argument	ist -> st -> index		1401715	4					
ANR	1402509	PtrMemberAccess	ist -> st -> index		1401715	0					
ANR	1402510	PtrMemberAccess	ist -> st		1401715	0					
ANR	1402511	Identifier	ist		1401715	0					
ANR	1402512	Identifier	st		1401715	1					
ANR	1402513	Identifier	index		1401715	1					
ANR	1402514	IfStatement	"if ( ( ret = avfilter_graph_create_filter ( & yadif , avfilter_get_by_name ( ""yadif"" ) , name , """" , NULL , fg -> graph ) ) < 0 )"		1401715	2					
ANR	1402515	Condition	"( ret = avfilter_graph_create_filter ( & yadif , avfilter_get_by_name ( ""yadif"" ) , name , """" , NULL , fg -> graph ) ) < 0"	217:12:4231:4483	1401715	0	True				
ANR	1402516	RelationalExpression	"( ret = avfilter_graph_create_filter ( & yadif , avfilter_get_by_name ( ""yadif"" ) , name , """" , NULL , fg -> graph ) ) < 0"		1401715	0		<			
ANR	1402517	AssignmentExpression	"ret = avfilter_graph_create_filter ( & yadif , avfilter_get_by_name ( ""yadif"" ) , name , """" , NULL , fg -> graph )"		1401715	0		=			
ANR	1402518	Identifier	ret		1401715	0					
ANR	1402519	CallExpression	"avfilter_graph_create_filter ( & yadif , avfilter_get_by_name ( ""yadif"" ) , name , """" , NULL , fg -> graph )"		1401715	1					
ANR	1402520	Callee	avfilter_graph_create_filter		1401715	0					
ANR	1402521	Identifier	avfilter_graph_create_filter		1401715	0					
ANR	1402522	ArgumentList	& yadif		1401715	1					
ANR	1402523	Argument	& yadif		1401715	0					
ANR	1402524	UnaryOperationExpression	& yadif		1401715	0					
ANR	1402525	UnaryOperator	&		1401715	0					
ANR	1402526	Identifier	yadif		1401715	1					
ANR	1402527	Argument	"avfilter_get_by_name ( ""yadif"" )"		1401715	1					
ANR	1402528	CallExpression	"avfilter_get_by_name ( ""yadif"" )"		1401715	0					
ANR	1402529	Callee	avfilter_get_by_name		1401715	0					
ANR	1402530	Identifier	avfilter_get_by_name		1401715	0					
ANR	1402531	ArgumentList	"""yadif"""		1401715	1					
ANR	1402532	Argument	"""yadif"""		1401715	0					
ANR	1402533	PrimaryExpression	"""yadif"""		1401715	0					
ANR	1402534	Argument	name		1401715	2					
ANR	1402535	Identifier	name		1401715	0					
ANR	1402536	Argument	""""""		1401715	3					
ANR	1402537	PrimaryExpression	""""""		1401715	0					
ANR	1402538	Argument	NULL		1401715	4					
ANR	1402539	Identifier	NULL		1401715	0					
ANR	1402540	Argument	fg -> graph		1401715	5					
ANR	1402541	PtrMemberAccess	fg -> graph		1401715	0					
ANR	1402542	Identifier	fg		1401715	0					
ANR	1402543	Identifier	graph		1401715	1					
ANR	1402544	PrimaryExpression	0		1401715	1					
ANR	1402545	ReturnStatement	return ret ;	225:12:4499:4509	1401715	1	True				
ANR	1402546	Identifier	ret		1401715	0					
ANR	1402547	IfStatement	"if ( ( ret = avfilter_link ( last_filter , 0 , yadif , 0 ) ) < 0 )"		1401715	3					
ANR	1402548	Condition	"( ret = avfilter_link ( last_filter , 0 , yadif , 0 ) ) < 0"	229:12:4526:4576	1401715	0	True				
ANR	1402549	RelationalExpression	"( ret = avfilter_link ( last_filter , 0 , yadif , 0 ) ) < 0"		1401715	0		<			
ANR	1402550	AssignmentExpression	"ret = avfilter_link ( last_filter , 0 , yadif , 0 )"		1401715	0		=			
ANR	1402551	Identifier	ret		1401715	0					
ANR	1402552	CallExpression	"avfilter_link ( last_filter , 0 , yadif , 0 )"		1401715	1					
ANR	1402553	Callee	avfilter_link		1401715	0					
ANR	1402554	Identifier	avfilter_link		1401715	0					
ANR	1402555	ArgumentList	last_filter		1401715	1					
ANR	1402556	Argument	last_filter		1401715	0					
ANR	1402557	Identifier	last_filter		1401715	0					
ANR	1402558	Argument	0		1401715	1					
ANR	1402559	PrimaryExpression	0		1401715	0					
ANR	1402560	Argument	yadif		1401715	2					
ANR	1402561	Identifier	yadif		1401715	0					
ANR	1402562	Argument	0		1401715	3					
ANR	1402563	PrimaryExpression	0		1401715	0					
ANR	1402564	PrimaryExpression	0		1401715	1					
ANR	1402565	ReturnStatement	return ret ;	231:12:4592:4602	1401715	1	True				
ANR	1402566	Identifier	ret		1401715	0					
ANR	1402567	ExpressionStatement	last_filter = yadif	235:8:4615:4634	1401715	4	True				
ANR	1402568	AssignmentExpression	last_filter = yadif		1401715	0		=			
ANR	1402569	Identifier	last_filter		1401715	0					
ANR	1402570	Identifier	yadif		1401715	1					
ANR	1402571	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""trim for input stream %d:%d"" , ist -> file_index , ist -> st -> index )"	241:4:4650:4756	1401715	99	True				
ANR	1402572	CallExpression	"snprintf ( name , sizeof ( name ) , ""trim for input stream %d:%d"" , ist -> file_index , ist -> st -> index )"		1401715	0					
ANR	1402573	Callee	snprintf		1401715	0					
ANR	1402574	Identifier	snprintf		1401715	0					
ANR	1402575	ArgumentList	name		1401715	1					
ANR	1402576	Argument	name		1401715	0					
ANR	1402577	Identifier	name		1401715	0					
ANR	1402578	Argument	sizeof ( name )		1401715	1					
ANR	1402579	SizeofExpression	sizeof ( name )		1401715	0					
ANR	1402580	Sizeof	sizeof		1401715	0					
ANR	1402581	SizeofOperand	name		1401715	1					
ANR	1402582	Argument	"""trim for input stream %d:%d"""		1401715	2					
ANR	1402583	PrimaryExpression	"""trim for input stream %d:%d"""		1401715	0					
ANR	1402584	Argument	ist -> file_index		1401715	3					
ANR	1402585	PtrMemberAccess	ist -> file_index		1401715	0					
ANR	1402586	Identifier	ist		1401715	0					
ANR	1402587	Identifier	file_index		1401715	1					
ANR	1402588	Argument	ist -> st -> index		1401715	4					
ANR	1402589	PtrMemberAccess	ist -> st -> index		1401715	0					
ANR	1402590	PtrMemberAccess	ist -> st		1401715	0					
ANR	1402591	Identifier	ist		1401715	0					
ANR	1402592	Identifier	st		1401715	1					
ANR	1402593	Identifier	index		1401715	1					
ANR	1402594	IfStatement	if ( copy_ts )		1401715	100					
ANR	1402595	Condition	copy_ts	245:8:4767:4773	1401715	0	True				
ANR	1402596	Identifier	copy_ts		1401715	0					
ANR	1402597	CompoundStatement		241:17:4635:4635	1401715	1					
ANR	1402598	ExpressionStatement	tsoffset = f -> start_time == AV_NOPTS_VALUE ? 0 : f -> start_time	247:8:4787:4849	1401715	0	True				
ANR	1402599	AssignmentExpression	tsoffset = f -> start_time == AV_NOPTS_VALUE ? 0 : f -> start_time		1401715	0		=			
ANR	1402600	Identifier	tsoffset		1401715	0					
ANR	1402601	ConditionalExpression	f -> start_time == AV_NOPTS_VALUE ? 0 : f -> start_time		1401715	1					
ANR	1402602	Condition	f -> start_time == AV_NOPTS_VALUE		1401715	0					
ANR	1402603	EqualityExpression	f -> start_time == AV_NOPTS_VALUE		1401715	0		==			
ANR	1402604	PtrMemberAccess	f -> start_time		1401715	0					
ANR	1402605	Identifier	f		1401715	0					
ANR	1402606	Identifier	start_time		1401715	1					
ANR	1402607	Identifier	AV_NOPTS_VALUE		1401715	1					
ANR	1402608	PrimaryExpression	0		1401715	1					
ANR	1402609	PtrMemberAccess	f -> start_time		1401715	2					
ANR	1402610	Identifier	f		1401715	0					
ANR	1402611	Identifier	start_time		1401715	1					
ANR	1402612	IfStatement	if ( ! start_at_zero && f -> ctx -> start_time != AV_NOPTS_VALUE )		1401715	1					
ANR	1402613	Condition	! start_at_zero && f -> ctx -> start_time != AV_NOPTS_VALUE	249:12:4864:4917	1401715	0	True				
ANR	1402614	AndExpression	! start_at_zero && f -> ctx -> start_time != AV_NOPTS_VALUE		1401715	0		&&			
ANR	1402615	UnaryOperationExpression	! start_at_zero		1401715	0					
ANR	1402616	UnaryOperator	!		1401715	0					
ANR	1402617	Identifier	start_at_zero		1401715	1					
ANR	1402618	EqualityExpression	f -> ctx -> start_time != AV_NOPTS_VALUE		1401715	1		!=			
ANR	1402619	PtrMemberAccess	f -> ctx -> start_time		1401715	0					
ANR	1402620	PtrMemberAccess	f -> ctx		1401715	0					
ANR	1402621	Identifier	f		1401715	0					
ANR	1402622	Identifier	ctx		1401715	1					
ANR	1402623	Identifier	start_time		1401715	1					
ANR	1402624	Identifier	AV_NOPTS_VALUE		1401715	1					
ANR	1402625	ExpressionStatement	tsoffset += f -> ctx -> start_time	251:12:4933:4963	1401715	1	True				
ANR	1402626	AssignmentExpression	tsoffset += f -> ctx -> start_time		1401715	0		+=			
ANR	1402627	Identifier	tsoffset		1401715	0					
ANR	1402628	PtrMemberAccess	f -> ctx -> start_time		1401715	1					
ANR	1402629	PtrMemberAccess	f -> ctx		1401715	0					
ANR	1402630	Identifier	f		1401715	0					
ANR	1402631	Identifier	ctx		1401715	1					
ANR	1402632	Identifier	start_time		1401715	1					
ANR	1402633	ExpressionStatement	"ret = insert_trim ( ( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset , f -> recording_time , & last_filter , & pad_idx , name )"	255:4:4977:5175	1401715	101	True				
ANR	1402634	AssignmentExpression	"ret = insert_trim ( ( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset , f -> recording_time , & last_filter , & pad_idx , name )"		1401715	0		=			
ANR	1402635	Identifier	ret		1401715	0					
ANR	1402636	CallExpression	"insert_trim ( ( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset , f -> recording_time , & last_filter , & pad_idx , name )"		1401715	1					
ANR	1402637	Callee	insert_trim		1401715	0					
ANR	1402638	Identifier	insert_trim		1401715	0					
ANR	1402639	ArgumentList	( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset		1401715	1					
ANR	1402640	Argument	( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset		1401715	0					
ANR	1402641	ConditionalExpression	( ( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek ) ? AV_NOPTS_VALUE : tsoffset		1401715	0					
ANR	1402642	Condition	( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek		1401715	0					
ANR	1402643	OrExpression	( f -> start_time == AV_NOPTS_VALUE ) || ! f -> accurate_seek		1401715	0		||			
ANR	1402644	EqualityExpression	f -> start_time == AV_NOPTS_VALUE		1401715	0		==			
ANR	1402645	PtrMemberAccess	f -> start_time		1401715	0					
ANR	1402646	Identifier	f		1401715	0					
ANR	1402647	Identifier	start_time		1401715	1					
ANR	1402648	Identifier	AV_NOPTS_VALUE		1401715	1					
ANR	1402649	UnaryOperationExpression	! f -> accurate_seek		1401715	1					
ANR	1402650	UnaryOperator	!		1401715	0					
ANR	1402651	PtrMemberAccess	f -> accurate_seek		1401715	1					
ANR	1402652	Identifier	f		1401715	0					
ANR	1402653	Identifier	accurate_seek		1401715	1					
ANR	1402654	Identifier	AV_NOPTS_VALUE		1401715	1					
ANR	1402655	Identifier	tsoffset		1401715	2					
ANR	1402656	Argument	f -> recording_time		1401715	1					
ANR	1402657	PtrMemberAccess	f -> recording_time		1401715	0					
ANR	1402658	Identifier	f		1401715	0					
ANR	1402659	Identifier	recording_time		1401715	1					
ANR	1402660	Argument	& last_filter		1401715	2					
ANR	1402661	UnaryOperationExpression	& last_filter		1401715	0					
ANR	1402662	UnaryOperator	&		1401715	0					
ANR	1402663	Identifier	last_filter		1401715	1					
ANR	1402664	Argument	& pad_idx		1401715	3					
ANR	1402665	UnaryOperationExpression	& pad_idx		1401715	0					
ANR	1402666	UnaryOperator	&		1401715	0					
ANR	1402667	Identifier	pad_idx		1401715	1					
ANR	1402668	Argument	name		1401715	4					
ANR	1402669	Identifier	name		1401715	0					
ANR	1402670	IfStatement	if ( ret < 0 )		1401715	102					
ANR	1402671	Condition	ret < 0	261:8:5186:5192	1401715	0	True				
ANR	1402672	RelationalExpression	ret < 0		1401715	0		<			
ANR	1402673	Identifier	ret		1401715	0					
ANR	1402674	PrimaryExpression	0		1401715	1					
ANR	1402675	ReturnStatement	return ret ;	263:8:5204:5214	1401715	1	True				
ANR	1402676	Identifier	ret		1401715	0					
ANR	1402677	IfStatement	"if ( ( ret = avfilter_link ( last_filter , 0 , in -> filter_ctx , in -> pad_idx ) ) < 0 )"		1401715	103					
ANR	1402678	Condition	"( ret = avfilter_link ( last_filter , 0 , in -> filter_ctx , in -> pad_idx ) ) < 0"	267:8:5227:5296	1401715	0	True				
ANR	1402679	RelationalExpression	"( ret = avfilter_link ( last_filter , 0 , in -> filter_ctx , in -> pad_idx ) ) < 0"		1401715	0		<			
ANR	1402680	AssignmentExpression	"ret = avfilter_link ( last_filter , 0 , in -> filter_ctx , in -> pad_idx )"		1401715	0		=			
ANR	1402681	Identifier	ret		1401715	0					
ANR	1402682	CallExpression	"avfilter_link ( last_filter , 0 , in -> filter_ctx , in -> pad_idx )"		1401715	1					
ANR	1402683	Callee	avfilter_link		1401715	0					
ANR	1402684	Identifier	avfilter_link		1401715	0					
ANR	1402685	ArgumentList	last_filter		1401715	1					
ANR	1402686	Argument	last_filter		1401715	0					
ANR	1402687	Identifier	last_filter		1401715	0					
ANR	1402688	Argument	0		1401715	1					
ANR	1402689	PrimaryExpression	0		1401715	0					
ANR	1402690	Argument	in -> filter_ctx		1401715	2					
ANR	1402691	PtrMemberAccess	in -> filter_ctx		1401715	0					
ANR	1402692	Identifier	in		1401715	0					
ANR	1402693	Identifier	filter_ctx		1401715	1					
ANR	1402694	Argument	in -> pad_idx		1401715	3					
ANR	1402695	PtrMemberAccess	in -> pad_idx		1401715	0					
ANR	1402696	Identifier	in		1401715	0					
ANR	1402697	Identifier	pad_idx		1401715	1					
ANR	1402698	PrimaryExpression	0		1401715	1					
ANR	1402699	ReturnStatement	return ret ;	269:8:5308:5318	1401715	1	True				
ANR	1402700	Identifier	ret		1401715	0					
ANR	1402701	ReturnStatement	return 0 ;	271:4:5325:5333	1401715	104	True				
ANR	1402702	PrimaryExpression	0		1401715	0					
ANR	1402703	ReturnType	static int		1401715	1					
ANR	1402704	Identifier	configure_input_video_filter		1401715	2					
ANR	1402705	ParameterList	"FilterGraph * fg , InputFilter * ifilter , AVFilterInOut * in"		1401715	3					
ANR	1402706	Parameter	FilterGraph * fg	1:40:40:54	1401715	0	True				
ANR	1402707	ParameterType	FilterGraph *		1401715	0					
ANR	1402708	Identifier	fg		1401715	1					
ANR	1402709	Parameter	InputFilter * ifilter	1:57:57:76	1401715	1	True				
ANR	1402710	ParameterType	InputFilter *		1401715	0					
ANR	1402711	Identifier	ifilter		1401715	1					
ANR	1402712	Parameter	AVFilterInOut * in	3:40:120:136	1401715	2	True				
ANR	1402713	ParameterType	AVFilterInOut *		1401715	0					
ANR	1402714	Identifier	in		1401715	1					
ANR	1402715	CFGEntryNode	ENTRY		1401715		True				
ANR	1402716	CFGExitNode	EXIT		1401715		True				
ANR	1402717	Symbol	ENOMEM		1401715						
ANR	1402718	Symbol	ist -> st -> time_base		1401715						
ANR	1402719	Symbol	par -> hw_frames_ctx		1401715						
ANR	1402720	Symbol	fg -> index		1401715						
ANR	1402721	Symbol	* * * ist		1401715						
ANR	1402722	Symbol	theta		1401715						
ANR	1402723	Symbol	av_guess_frame_rate		1401715						
ANR	1402724	Symbol	sar . den		1401715						
ANR	1402725	Symbol	in -> filter_ctx		1401715						
ANR	1402726	Symbol	f -> start_time		1401715						
ANR	1402727	Symbol	ist -> dec_ctx		1401715						
ANR	1402728	Symbol	in		1401715						
ANR	1402729	Symbol	& pad_idx		1401715						
ANR	1402730	Symbol	fr . num		1401715						
ANR	1402731	Symbol	f -> accurate_seek		1401715						
ANR	1402732	Symbol	insert_trim		1401715						
ANR	1402733	Symbol	ist -> file_index		1401715						
ANR	1402734	Symbol	* f -> ctx		1401715						
ANR	1402735	Symbol	av_buffersrc_parameters_alloc		1401715						
ANR	1402736	Symbol	in -> pad_idx		1401715						
ANR	1402737	Symbol	AV_NOPTS_VALUE		1401715						
ANR	1402738	Symbol	ist -> autorotate		1401715						
ANR	1402739	Symbol	setpts		1401715						
ANR	1402740	Symbol	AVMEDIA_TYPE_SUBTITLE		1401715						
ANR	1402741	Symbol	ifilter		1401715						
ANR	1402742	Symbol	* * ist -> file_index		1401715						
ANR	1402743	Symbol	copy_ts		1401715						
ANR	1402744	Symbol	& args		1401715						
ANR	1402745	Symbol	& yadif		1401715						
ANR	1402746	Symbol	fabs		1401715						
ANR	1402747	Symbol	AV_LOG_ERROR		1401715						
ANR	1402748	Symbol	* fg		1401715						
ANR	1402749	Symbol	ifilter -> ist		1401715						
ANR	1402750	Symbol	f		1401715						
ANR	1402751	Symbol	tb		1401715						
ANR	1402752	Symbol	ist -> framerate		1401715						
ANR	1402753	Symbol	EINVAL		1401715						
ANR	1402754	Symbol	& last_filter		1401715						
ANR	1402755	Symbol	avfilter_link		1401715						
ANR	1402756	Symbol	input_files [ ist -> file_index ] -> ctx		1401715						
ANR	1402757	Symbol	insert_filter		1401715						
ANR	1402758	Symbol	f -> ctx -> start_time		1401715						
ANR	1402759	Symbol	tsoffset		1401715						
ANR	1402760	Symbol	& par		1401715						
ANR	1402761	Symbol	AVMEDIA_TYPE_AUDIO		1401715						
ANR	1402762	Symbol	ist -> dec_ctx -> codec_type		1401715						
ANR	1402763	Symbol	f -> recording_time		1401715						
ANR	1402764	Symbol	ist		1401715						
ANR	1402765	Symbol	sub2video_prepare		1401715						
ANR	1402766	Symbol	av_inv_q		1401715						
ANR	1402767	Symbol	fg -> graph		1401715						
ANR	1402768	Symbol	ret		1401715						
ANR	1402769	Symbol	par		1401715						
ANR	1402770	Symbol	NULL		1401715						
ANR	1402771	Symbol	* * f		1401715						
ANR	1402772	Symbol	ist -> st		1401715						
ANR	1402773	Symbol	yadif		1401715						
ANR	1402774	Symbol	& setpts		1401715						
ANR	1402775	Symbol	input_files		1401715						
ANR	1402776	Symbol	& ifilter -> filter		1401715						
ANR	1402777	Symbol	* * input_files		1401715						
ANR	1402778	Symbol	fr . den		1401715						
ANR	1402779	Symbol	name		1401715						
ANR	1402780	Symbol	args . str		1401715						
ANR	1402781	Symbol	ist -> hw_frames_ctx		1401715						
ANR	1402782	Symbol	start_at_zero		1401715						
ANR	1402783	Symbol	ifilter -> filter		1401715						
ANR	1402784	Symbol	get_rotation		1401715						
ANR	1402785	Symbol	fg		1401715						
ANR	1402786	Symbol	avfilter_get_by_name		1401715						
ANR	1402787	Symbol	* in		1401715						
ANR	1402788	Symbol	* ist -> dec_ctx		1401715						
ANR	1402789	Symbol	avfilter_graph_create_filter		1401715						
ANR	1402790	Symbol	buffer_filt		1401715						
ANR	1402791	Symbol	* ist		1401715						
ANR	1402792	Symbol	* par		1401715						
ANR	1402793	Symbol	fr		1401715						
ANR	1402794	Symbol	last_filter		1401715						
ANR	1402795	Symbol	* ist -> st		1401715						
ANR	1402796	Symbol	rotate_buf		1401715						
ANR	1402797	Symbol	* * ist		1401715						
ANR	1402798	Symbol	sar		1401715						
ANR	1402799	Symbol	par -> format		1401715						
ANR	1402800	Symbol	AV_PIX_FMT_NONE		1401715						
ANR	1402801	Symbol	* input_files		1401715						
ANR	1402802	Symbol	ist -> dec_ctx -> sample_aspect_ratio		1401715						
ANR	1402803	Symbol	args		1401715						
ANR	1402804	Symbol	ist -> st -> sample_aspect_ratio . num		1401715						
ANR	1402805	Symbol	* f		1401715						
ANR	1402806	Symbol	f -> ctx		1401715						
ANR	1402807	Symbol	ist -> framerate . num		1401715						
ANR	1402808	Symbol	av_buffersrc_parameters_set		1401715						
ANR	1402809	Symbol	do_deinterlace		1401715						
ANR	1402810	Symbol	AVERROR		1401715						
ANR	1402811	Symbol	pad_idx		1401715						
ANR	1402812	Symbol	ist -> st -> index		1401715						
ANR	1402813	Symbol	* ifilter		1401715						
ANR	1402814	Symbol	ist -> st -> sample_aspect_ratio		1401715						
ANR	1402815	Symbol	* ist -> file_index		1401715						
