command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6312884	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_dsd_prop_1.c								
ANR	6312885	Function	parse_dsd_prop	1:0:0:3908							
ANR	6312886	FunctionDef	"parse_dsd_prop (AVFormatContext * s , AVStream * st , uint64_t eof)"		6312885	0					
ANR	6312887	CompoundStatement		3:0:75:3908	6312885	0					
ANR	6312888	IdentifierDeclStatement	AVIOContext * pb = s -> pb ;	5:4:82:105	6312885	0	True				
ANR	6312889	IdentifierDecl	* pb = s -> pb		6312885	0					
ANR	6312890	IdentifierDeclType	AVIOContext *		6312885	0					
ANR	6312891	Identifier	pb		6312885	1					
ANR	6312892	AssignmentExpression	* pb = s -> pb		6312885	2		=			
ANR	6312893	Identifier	pb		6312885	0					
ANR	6312894	PtrMemberAccess	s -> pb		6312885	1					
ANR	6312895	Identifier	s		6312885	0					
ANR	6312896	Identifier	pb		6312885	1					
ANR	6312897	IdentifierDeclStatement	char abss [ 24 ] ;	7:4:112:125	6312885	1	True				
ANR	6312898	IdentifierDecl	abss [ 24 ]		6312885	0					
ANR	6312899	IdentifierDeclType	char [ 24 ]		6312885	0					
ANR	6312900	Identifier	abss		6312885	1					
ANR	6312901	PrimaryExpression	24		6312885	2					
ANR	6312902	IdentifierDeclStatement	"int hour , min , sec , i , ret , config ;"	9:4:132:166	6312885	2	True				
ANR	6312903	IdentifierDecl	hour		6312885	0					
ANR	6312904	IdentifierDeclType	int		6312885	0					
ANR	6312905	Identifier	hour		6312885	1					
ANR	6312906	IdentifierDecl	min		6312885	1					
ANR	6312907	IdentifierDeclType	int		6312885	0					
ANR	6312908	Identifier	min		6312885	1					
ANR	6312909	IdentifierDecl	sec		6312885	2					
ANR	6312910	IdentifierDeclType	int		6312885	0					
ANR	6312911	Identifier	sec		6312885	1					
ANR	6312912	IdentifierDecl	i		6312885	3					
ANR	6312913	IdentifierDeclType	int		6312885	0					
ANR	6312914	Identifier	i		6312885	1					
ANR	6312915	IdentifierDecl	ret		6312885	4					
ANR	6312916	IdentifierDeclType	int		6312885	0					
ANR	6312917	Identifier	ret		6312885	1					
ANR	6312918	IdentifierDecl	config		6312885	5					
ANR	6312919	IdentifierDeclType	int		6312885	0					
ANR	6312920	Identifier	config		6312885	1					
ANR	6312921	IdentifierDeclStatement	int dsd_layout [ 6 ] ;	11:4:173:190	6312885	3	True				
ANR	6312922	IdentifierDecl	dsd_layout [ 6 ]		6312885	0					
ANR	6312923	IdentifierDeclType	int [ 6 ]		6312885	0					
ANR	6312924	Identifier	dsd_layout		6312885	1					
ANR	6312925	PrimaryExpression	6		6312885	2					
ANR	6312926	IdentifierDeclStatement	ID3v2ExtraMeta * id3v2_extra_meta ;	13:4:197:229	6312885	4	True				
ANR	6312927	IdentifierDecl	* id3v2_extra_meta		6312885	0					
ANR	6312928	IdentifierDeclType	ID3v2ExtraMeta *		6312885	0					
ANR	6312929	Identifier	id3v2_extra_meta		6312885	1					
ANR	6312930	WhileStatement	while ( avio_tell ( pb ) + 12 <= eof )		6312885	5					
ANR	6312931	Condition	avio_tell ( pb ) + 12 <= eof	17:11:245:269	6312885	0	True				
ANR	6312932	RelationalExpression	avio_tell ( pb ) + 12 <= eof		6312885	0		<=			
ANR	6312933	AdditiveExpression	avio_tell ( pb ) + 12		6312885	0		+			
ANR	6312934	CallExpression	avio_tell ( pb )		6312885	0					
ANR	6312935	Callee	avio_tell		6312885	0					
ANR	6312936	Identifier	avio_tell		6312885	0					
ANR	6312937	ArgumentList	pb		6312885	1					
ANR	6312938	Argument	pb		6312885	0					
ANR	6312939	Identifier	pb		6312885	0					
ANR	6312940	PrimaryExpression	12		6312885	1					
ANR	6312941	Identifier	eof		6312885	1					
ANR	6312942	CompoundStatement		21:8:295:328	6312885	1					
ANR	6312943	IdentifierDeclStatement	uint32_t tag = avio_rl32 ( pb ) ;	19:8:283:316	6312885	0	True				
ANR	6312944	IdentifierDecl	tag = avio_rl32 ( pb )		6312885	0					
ANR	6312945	IdentifierDeclType	uint32_t		6312885	0					
ANR	6312946	Identifier	tag		6312885	1					
ANR	6312947	AssignmentExpression	tag = avio_rl32 ( pb )		6312885	2		=			
ANR	6312948	Identifier	tag		6312885	0					
ANR	6312949	CallExpression	avio_rl32 ( pb )		6312885	1					
ANR	6312950	Callee	avio_rl32		6312885	0					
ANR	6312951	Identifier	avio_rl32		6312885	0					
ANR	6312952	ArgumentList	pb		6312885	1					
ANR	6312953	Argument	pb		6312885	0					
ANR	6312954	Identifier	pb		6312885	0					
ANR	6312955	IdentifierDeclStatement	uint64_t size = avio_rb64 ( pb ) ;	21:8:327:360	6312885	1	True				
ANR	6312956	IdentifierDecl	size = avio_rb64 ( pb )		6312885	0					
ANR	6312957	IdentifierDeclType	uint64_t		6312885	0					
ANR	6312958	Identifier	size		6312885	1					
ANR	6312959	AssignmentExpression	size = avio_rb64 ( pb )		6312885	2		=			
ANR	6312960	Identifier	size		6312885	0					
ANR	6312961	CallExpression	avio_rb64 ( pb )		6312885	1					
ANR	6312962	Callee	avio_rb64		6312885	0					
ANR	6312963	Identifier	avio_rb64		6312885	0					
ANR	6312964	ArgumentList	pb		6312885	1					
ANR	6312965	Argument	pb		6312885	0					
ANR	6312966	Identifier	pb		6312885	0					
ANR	6312967	IdentifierDeclStatement	uint64_t orig_pos = avio_tell ( pb ) ;	23:8:371:404	6312885	2	True				
ANR	6312968	IdentifierDecl	orig_pos = avio_tell ( pb )		6312885	0					
ANR	6312969	IdentifierDeclType	uint64_t		6312885	0					
ANR	6312970	Identifier	orig_pos		6312885	1					
ANR	6312971	AssignmentExpression	orig_pos = avio_tell ( pb )		6312885	2		=			
ANR	6312972	Identifier	orig_pos		6312885	0					
ANR	6312973	CallExpression	avio_tell ( pb )		6312885	1					
ANR	6312974	Callee	avio_tell		6312885	0					
ANR	6312975	Identifier	avio_tell		6312885	0					
ANR	6312976	ArgumentList	pb		6312885	1					
ANR	6312977	Argument	pb		6312885	0					
ANR	6312978	Identifier	pb		6312885	0					
ANR	6312979	SwitchStatement	switch ( tag )		6312885	3					
ANR	6312980	Condition	tag	27:15:424:426	6312885	0	True				
ANR	6312981	Identifier	tag		6312885	0					
ANR	6312982	CompoundStatement		25:20:353:353	6312885	1					
ANR	6312983	Statement	case	29:8:440:443	6312885	0	True				
ANR	6312984	Statement	MKTAG	29:13:445:449	6312885	1	True				
ANR	6312985	Statement	(	29:18:450:450	6312885	2	True				
ANR	6312986	Statement	'A'	29:19:451:453	6312885	3	True				
ANR	6312987	Statement	","	29:22:454:454	6312885	4	True				
ANR	6312988	Statement	'B'	29:23:455:457	6312885	5	True				
ANR	6312989	Statement	","	29:26:458:458	6312885	6	True				
ANR	6312990	Statement	'S'	29:27:459:461	6312885	7	True				
ANR	6312991	Statement	","	29:30:462:462	6312885	8	True				
ANR	6312992	Statement	'S'	29:31:463:465	6312885	9	True				
ANR	6312993	Statement	)	29:34:466:466	6312885	10	True				
ANR	6312994	Statement	:	29:35:467:467	6312885	11	True				
ANR	6312995	IfStatement	if ( size < 8 )		6312885	12					
ANR	6312996	Condition	size < 8	31:16:486:493	6312885	0	True				
ANR	6312997	RelationalExpression	size < 8		6312885	0		<			
ANR	6312998	Identifier	size		6312885	0					
ANR	6312999	PrimaryExpression	8		6312885	1					
ANR	6313000	ReturnStatement	return AVERROR_INVALIDDATA ;	33:16:513:539	6312885	1	True				
ANR	6313001	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313002	ExpressionStatement	hour = avio_rb16 ( pb )	35:12:554:574	6312885	13	True				
ANR	6313003	AssignmentExpression	hour = avio_rb16 ( pb )		6312885	0		=			
ANR	6313004	Identifier	hour		6312885	0					
ANR	6313005	CallExpression	avio_rb16 ( pb )		6312885	1					
ANR	6313006	Callee	avio_rb16		6312885	0					
ANR	6313007	Identifier	avio_rb16		6312885	0					
ANR	6313008	ArgumentList	pb		6312885	1					
ANR	6313009	Argument	pb		6312885	0					
ANR	6313010	Identifier	pb		6312885	0					
ANR	6313011	ExpressionStatement	min = avio_r8 ( pb )	37:12:589:607	6312885	14	True				
ANR	6313012	AssignmentExpression	min = avio_r8 ( pb )		6312885	0		=			
ANR	6313013	Identifier	min		6312885	0					
ANR	6313014	CallExpression	avio_r8 ( pb )		6312885	1					
ANR	6313015	Callee	avio_r8		6312885	0					
ANR	6313016	Identifier	avio_r8		6312885	0					
ANR	6313017	ArgumentList	pb		6312885	1					
ANR	6313018	Argument	pb		6312885	0					
ANR	6313019	Identifier	pb		6312885	0					
ANR	6313020	ExpressionStatement	sec = avio_r8 ( pb )	39:12:622:640	6312885	15	True				
ANR	6313021	AssignmentExpression	sec = avio_r8 ( pb )		6312885	0		=			
ANR	6313022	Identifier	sec		6312885	0					
ANR	6313023	CallExpression	avio_r8 ( pb )		6312885	1					
ANR	6313024	Callee	avio_r8		6312885	0					
ANR	6313025	Identifier	avio_r8		6312885	0					
ANR	6313026	ArgumentList	pb		6312885	1					
ANR	6313027	Argument	pb		6312885	0					
ANR	6313028	Identifier	pb		6312885	0					
ANR	6313029	ExpressionStatement	"snprintf ( abss , sizeof ( abss ) , ""%02dh:%02dm:%02ds:%d"" , hour , min , sec , avio_rb32 ( pb ) )"	41:12:655:738	6312885	16	True				
ANR	6313030	CallExpression	"snprintf ( abss , sizeof ( abss ) , ""%02dh:%02dm:%02ds:%d"" , hour , min , sec , avio_rb32 ( pb ) )"		6312885	0					
ANR	6313031	Callee	snprintf		6312885	0					
ANR	6313032	Identifier	snprintf		6312885	0					
ANR	6313033	ArgumentList	abss		6312885	1					
ANR	6313034	Argument	abss		6312885	0					
ANR	6313035	Identifier	abss		6312885	0					
ANR	6313036	Argument	sizeof ( abss )		6312885	1					
ANR	6313037	SizeofExpression	sizeof ( abss )		6312885	0					
ANR	6313038	Sizeof	sizeof		6312885	0					
ANR	6313039	SizeofOperand	abss		6312885	1					
ANR	6313040	Argument	"""%02dh:%02dm:%02ds:%d"""		6312885	2					
ANR	6313041	PrimaryExpression	"""%02dh:%02dm:%02ds:%d"""		6312885	0					
ANR	6313042	Argument	hour		6312885	3					
ANR	6313043	Identifier	hour		6312885	0					
ANR	6313044	Argument	min		6312885	4					
ANR	6313045	Identifier	min		6312885	0					
ANR	6313046	Argument	sec		6312885	5					
ANR	6313047	Identifier	sec		6312885	0					
ANR	6313048	Argument	avio_rb32 ( pb )		6312885	6					
ANR	6313049	CallExpression	avio_rb32 ( pb )		6312885	0					
ANR	6313050	Callee	avio_rb32		6312885	0					
ANR	6313051	Identifier	avio_rb32		6312885	0					
ANR	6313052	ArgumentList	pb		6312885	1					
ANR	6313053	Argument	pb		6312885	0					
ANR	6313054	Identifier	pb		6312885	0					
ANR	6313055	ExpressionStatement	"av_dict_set ( & st -> metadata , ""absolute_start_time"" , abss , 0 )"	43:12:753:811	6312885	17	True				
ANR	6313056	CallExpression	"av_dict_set ( & st -> metadata , ""absolute_start_time"" , abss , 0 )"		6312885	0					
ANR	6313057	Callee	av_dict_set		6312885	0					
ANR	6313058	Identifier	av_dict_set		6312885	0					
ANR	6313059	ArgumentList	& st -> metadata		6312885	1					
ANR	6313060	Argument	& st -> metadata		6312885	0					
ANR	6313061	UnaryOperationExpression	& st -> metadata		6312885	0					
ANR	6313062	UnaryOperator	&		6312885	0					
ANR	6313063	PtrMemberAccess	st -> metadata		6312885	1					
ANR	6313064	Identifier	st		6312885	0					
ANR	6313065	Identifier	metadata		6312885	1					
ANR	6313066	Argument	"""absolute_start_time"""		6312885	1					
ANR	6313067	PrimaryExpression	"""absolute_start_time"""		6312885	0					
ANR	6313068	Argument	abss		6312885	2					
ANR	6313069	Identifier	abss		6312885	0					
ANR	6313070	Argument	0		6312885	3					
ANR	6313071	PrimaryExpression	0		6312885	0					
ANR	6313072	BreakStatement	break ;	45:12:826:831	6312885	18	True				
ANR	6313073	Statement	case	49:8:844:847	6312885	19	True				
ANR	6313074	Statement	MKTAG	49:13:849:853	6312885	20	True				
ANR	6313075	Statement	(	49:18:854:854	6312885	21	True				
ANR	6313076	Statement	'C'	49:19:855:857	6312885	22	True				
ANR	6313077	Statement	","	49:22:858:858	6312885	23	True				
ANR	6313078	Statement	'H'	49:23:859:861	6312885	24	True				
ANR	6313079	Statement	","	49:26:862:862	6312885	25	True				
ANR	6313080	Statement	'N'	49:27:863:865	6312885	26	True				
ANR	6313081	Statement	","	49:30:866:866	6312885	27	True				
ANR	6313082	Statement	'L'	49:31:867:869	6312885	28	True				
ANR	6313083	Statement	)	49:34:870:870	6312885	29	True				
ANR	6313084	Statement	:	49:35:871:871	6312885	30	True				
ANR	6313085	IfStatement	if ( size < 2 )		6312885	31					
ANR	6313086	Condition	size < 2	51:16:890:897	6312885	0	True				
ANR	6313087	RelationalExpression	size < 2		6312885	0		<			
ANR	6313088	Identifier	size		6312885	0					
ANR	6313089	PrimaryExpression	2		6312885	1					
ANR	6313090	ReturnStatement	return AVERROR_INVALIDDATA ;	53:16:917:943	6312885	1	True				
ANR	6313091	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313092	ExpressionStatement	st -> codecpar -> channels = avio_rb16 ( pb )	55:12:958:1002	6312885	32	True				
ANR	6313093	AssignmentExpression	st -> codecpar -> channels = avio_rb16 ( pb )		6312885	0		=			
ANR	6313094	PtrMemberAccess	st -> codecpar -> channels		6312885	0					
ANR	6313095	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313096	Identifier	st		6312885	0					
ANR	6313097	Identifier	codecpar		6312885	1					
ANR	6313098	Identifier	channels		6312885	1					
ANR	6313099	CallExpression	avio_rb16 ( pb )		6312885	1					
ANR	6313100	Callee	avio_rb16		6312885	0					
ANR	6313101	Identifier	avio_rb16		6312885	0					
ANR	6313102	ArgumentList	pb		6312885	1					
ANR	6313103	Argument	pb		6312885	0					
ANR	6313104	Identifier	pb		6312885	0					
ANR	6313105	IfStatement	if ( size < 2 + st -> codecpar -> channels * 4 )		6312885	33					
ANR	6313106	Condition	size < 2 + st -> codecpar -> channels * 4	57:16:1021:1057	6312885	0	True				
ANR	6313107	RelationalExpression	size < 2 + st -> codecpar -> channels * 4		6312885	0		<			
ANR	6313108	Identifier	size		6312885	0					
ANR	6313109	AdditiveExpression	2 + st -> codecpar -> channels * 4		6312885	1		+			
ANR	6313110	PrimaryExpression	2		6312885	0					
ANR	6313111	MultiplicativeExpression	st -> codecpar -> channels * 4		6312885	1		*			
ANR	6313112	PtrMemberAccess	st -> codecpar -> channels		6312885	0					
ANR	6313113	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313114	Identifier	st		6312885	0					
ANR	6313115	Identifier	codecpar		6312885	1					
ANR	6313116	Identifier	channels		6312885	1					
ANR	6313117	PrimaryExpression	4		6312885	1					
ANR	6313118	ReturnStatement	return AVERROR_INVALIDDATA ;	59:16:1077:1103	6312885	1	True				
ANR	6313119	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313120	ExpressionStatement	st -> codecpar -> channel_layout = 0	61:12:1118:1150	6312885	34	True				
ANR	6313121	AssignmentExpression	st -> codecpar -> channel_layout = 0		6312885	0		=			
ANR	6313122	PtrMemberAccess	st -> codecpar -> channel_layout		6312885	0					
ANR	6313123	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313124	Identifier	st		6312885	0					
ANR	6313125	Identifier	codecpar		6312885	1					
ANR	6313126	Identifier	channel_layout		6312885	1					
ANR	6313127	PrimaryExpression	0		6312885	1					
ANR	6313128	IfStatement	if ( st -> codecpar -> channels > FF_ARRAY_ELEMS ( dsd_layout ) )		6312885	35					
ANR	6313129	Condition	st -> codecpar -> channels > FF_ARRAY_ELEMS ( dsd_layout )	63:16:1169:1219	6312885	0	True				
ANR	6313130	RelationalExpression	st -> codecpar -> channels > FF_ARRAY_ELEMS ( dsd_layout )		6312885	0		>			
ANR	6313131	PtrMemberAccess	st -> codecpar -> channels		6312885	0					
ANR	6313132	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313133	Identifier	st		6312885	0					
ANR	6313134	Identifier	codecpar		6312885	1					
ANR	6313135	Identifier	channels		6312885	1					
ANR	6313136	CallExpression	FF_ARRAY_ELEMS ( dsd_layout )		6312885	1					
ANR	6313137	Callee	FF_ARRAY_ELEMS		6312885	0					
ANR	6313138	Identifier	FF_ARRAY_ELEMS		6312885	0					
ANR	6313139	ArgumentList	dsd_layout		6312885	1					
ANR	6313140	Argument	dsd_layout		6312885	0					
ANR	6313141	Identifier	dsd_layout		6312885	0					
ANR	6313142	CompoundStatement		61:69:1146:1146	6312885	1					
ANR	6313143	ExpressionStatement	"avpriv_request_sample ( s , ""channel layout"" )"	65:16:1241:1283	6312885	0	True				
ANR	6313144	CallExpression	"avpriv_request_sample ( s , ""channel layout"" )"		6312885	0					
ANR	6313145	Callee	avpriv_request_sample		6312885	0					
ANR	6313146	Identifier	avpriv_request_sample		6312885	0					
ANR	6313147	ArgumentList	s		6312885	1					
ANR	6313148	Argument	s		6312885	0					
ANR	6313149	Identifier	s		6312885	0					
ANR	6313150	Argument	"""channel layout"""		6312885	1					
ANR	6313151	PrimaryExpression	"""channel layout"""		6312885	0					
ANR	6313152	BreakStatement	break ;	67:16:1302:1307	6312885	1	True				
ANR	6313153	ForStatement	for ( i = 0 ; i < st -> codecpar -> channels ; i ++ )		6312885	36					
ANR	6313154	ForInit	i = 0 ;	71:17:1342:1347	6312885	0	True				
ANR	6313155	AssignmentExpression	i = 0		6312885	0		=			
ANR	6313156	Identifier	i		6312885	0					
ANR	6313157	PrimaryExpression	0		6312885	1					
ANR	6313158	Condition	i < st -> codecpar -> channels	71:24:1349:1374	6312885	1	True				
ANR	6313159	RelationalExpression	i < st -> codecpar -> channels		6312885	0		<			
ANR	6313160	Identifier	i		6312885	0					
ANR	6313161	PtrMemberAccess	st -> codecpar -> channels		6312885	1					
ANR	6313162	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313163	Identifier	st		6312885	0					
ANR	6313164	Identifier	codecpar		6312885	1					
ANR	6313165	Identifier	channels		6312885	1					
ANR	6313166	PostIncDecOperationExpression	i ++	71:52:1377:1379	6312885	2	True				
ANR	6313167	Identifier	i		6312885	0					
ANR	6313168	IncDec	++		6312885	1					
ANR	6313169	ExpressionStatement	dsd_layout [ i ] = avio_rl32 ( pb )	73:16:1399:1428	6312885	3	True				
ANR	6313170	AssignmentExpression	dsd_layout [ i ] = avio_rl32 ( pb )		6312885	0		=			
ANR	6313171	ArrayIndexing	dsd_layout [ i ]		6312885	0					
ANR	6313172	Identifier	dsd_layout		6312885	0					
ANR	6313173	Identifier	i		6312885	1					
ANR	6313174	CallExpression	avio_rl32 ( pb )		6312885	1					
ANR	6313175	Callee	avio_rl32		6312885	0					
ANR	6313176	Identifier	avio_rl32		6312885	0					
ANR	6313177	ArgumentList	pb		6312885	1					
ANR	6313178	Argument	pb		6312885	0					
ANR	6313179	Identifier	pb		6312885	0					
ANR	6313180	ForStatement	for ( i = 0 ; i < FF_ARRAY_ELEMS ( dsd_channel_layout ) ; i ++ )		6312885	37					
ANR	6313181	ForInit	i = 0 ;	75:17:1448:1453	6312885	0	True				
ANR	6313182	AssignmentExpression	i = 0		6312885	0		=			
ANR	6313183	Identifier	i		6312885	0					
ANR	6313184	PrimaryExpression	0		6312885	1					
ANR	6313185	Condition	i < FF_ARRAY_ELEMS ( dsd_channel_layout )	75:24:1455:1492	6312885	1	True				
ANR	6313186	RelationalExpression	i < FF_ARRAY_ELEMS ( dsd_channel_layout )		6312885	0		<			
ANR	6313187	Identifier	i		6312885	0					
ANR	6313188	CallExpression	FF_ARRAY_ELEMS ( dsd_channel_layout )		6312885	1					
ANR	6313189	Callee	FF_ARRAY_ELEMS		6312885	0					
ANR	6313190	Identifier	FF_ARRAY_ELEMS		6312885	0					
ANR	6313191	ArgumentList	dsd_channel_layout		6312885	1					
ANR	6313192	Argument	dsd_channel_layout		6312885	0					
ANR	6313193	Identifier	dsd_channel_layout		6312885	0					
ANR	6313194	PostIncDecOperationExpression	i ++	75:64:1495:1497	6312885	2	True				
ANR	6313195	Identifier	i		6312885	0					
ANR	6313196	IncDec	++		6312885	1					
ANR	6313197	CompoundStatement		75:16:1443:1491	6312885	3					
ANR	6313198	IdentifierDeclStatement	const DSDLayoutDesc * d = & dsd_channel_layout [ i ] ;	77:16:1519:1567	6312885	0	True				
ANR	6313199	IdentifierDecl	* d = & dsd_channel_layout [ i ]		6312885	0					
ANR	6313200	IdentifierDeclType	const DSDLayoutDesc *		6312885	0					
ANR	6313201	Identifier	d		6312885	1					
ANR	6313202	AssignmentExpression	* d = & dsd_channel_layout [ i ]		6312885	2		=			
ANR	6313203	Identifier	d		6312885	0					
ANR	6313204	UnaryOperationExpression	& dsd_channel_layout [ i ]		6312885	1					
ANR	6313205	UnaryOperator	&		6312885	0					
ANR	6313206	ArrayIndexing	dsd_channel_layout [ i ]		6312885	1					
ANR	6313207	Identifier	dsd_channel_layout		6312885	0					
ANR	6313208	Identifier	i		6312885	1					
ANR	6313209	IfStatement	"if ( av_get_channel_layout_nb_channels ( d -> layout ) == st -> codecpar -> channels && ! memcmp ( d -> dsd_layout , dsd_layout , st -> codecpar -> channels * sizeof ( uint32_t ) ) )"		6312885	1					
ANR	6313210	Condition	"av_get_channel_layout_nb_channels ( d -> layout ) == st -> codecpar -> channels && ! memcmp ( d -> dsd_layout , dsd_layout , st -> codecpar -> channels * sizeof ( uint32_t ) )"	79:20:1590:1761	6312885	0	True				
ANR	6313211	AndExpression	"av_get_channel_layout_nb_channels ( d -> layout ) == st -> codecpar -> channels && ! memcmp ( d -> dsd_layout , dsd_layout , st -> codecpar -> channels * sizeof ( uint32_t ) )"		6312885	0		&&			
ANR	6313212	EqualityExpression	av_get_channel_layout_nb_channels ( d -> layout ) == st -> codecpar -> channels		6312885	0		==			
ANR	6313213	CallExpression	av_get_channel_layout_nb_channels ( d -> layout )		6312885	0					
ANR	6313214	Callee	av_get_channel_layout_nb_channels		6312885	0					
ANR	6313215	Identifier	av_get_channel_layout_nb_channels		6312885	0					
ANR	6313216	ArgumentList	d -> layout		6312885	1					
ANR	6313217	Argument	d -> layout		6312885	0					
ANR	6313218	PtrMemberAccess	d -> layout		6312885	0					
ANR	6313219	Identifier	d		6312885	0					
ANR	6313220	Identifier	layout		6312885	1					
ANR	6313221	PtrMemberAccess	st -> codecpar -> channels		6312885	1					
ANR	6313222	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313223	Identifier	st		6312885	0					
ANR	6313224	Identifier	codecpar		6312885	1					
ANR	6313225	Identifier	channels		6312885	1					
ANR	6313226	UnaryOperationExpression	"! memcmp ( d -> dsd_layout , dsd_layout , st -> codecpar -> channels * sizeof ( uint32_t ) )"		6312885	1					
ANR	6313227	UnaryOperator	!		6312885	0					
ANR	6313228	CallExpression	"memcmp ( d -> dsd_layout , dsd_layout , st -> codecpar -> channels * sizeof ( uint32_t ) )"		6312885	1					
ANR	6313229	Callee	memcmp		6312885	0					
ANR	6313230	Identifier	memcmp		6312885	0					
ANR	6313231	ArgumentList	d -> dsd_layout		6312885	1					
ANR	6313232	Argument	d -> dsd_layout		6312885	0					
ANR	6313233	PtrMemberAccess	d -> dsd_layout		6312885	0					
ANR	6313234	Identifier	d		6312885	0					
ANR	6313235	Identifier	dsd_layout		6312885	1					
ANR	6313236	Argument	dsd_layout		6312885	1					
ANR	6313237	Identifier	dsd_layout		6312885	0					
ANR	6313238	Argument	st -> codecpar -> channels * sizeof ( uint32_t )		6312885	2					
ANR	6313239	MultiplicativeExpression	st -> codecpar -> channels * sizeof ( uint32_t )		6312885	0		*			
ANR	6313240	PtrMemberAccess	st -> codecpar -> channels		6312885	0					
ANR	6313241	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313242	Identifier	st		6312885	0					
ANR	6313243	Identifier	codecpar		6312885	1					
ANR	6313244	Identifier	channels		6312885	1					
ANR	6313245	SizeofExpression	sizeof ( uint32_t )		6312885	1					
ANR	6313246	Sizeof	sizeof		6312885	0					
ANR	6313247	SizeofOperand	uint32_t		6312885	1					
ANR	6313248	CompoundStatement		79:99:1688:1688	6312885	1					
ANR	6313249	ExpressionStatement	st -> codecpar -> channel_layout = d -> layout	83:20:1787:1827	6312885	0	True				
ANR	6313250	AssignmentExpression	st -> codecpar -> channel_layout = d -> layout		6312885	0		=			
ANR	6313251	PtrMemberAccess	st -> codecpar -> channel_layout		6312885	0					
ANR	6313252	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313253	Identifier	st		6312885	0					
ANR	6313254	Identifier	codecpar		6312885	1					
ANR	6313255	Identifier	channel_layout		6312885	1					
ANR	6313256	PtrMemberAccess	d -> layout		6312885	1					
ANR	6313257	Identifier	d		6312885	0					
ANR	6313258	Identifier	layout		6312885	1					
ANR	6313259	BreakStatement	break ;	85:20:1850:1855	6312885	1	True				
ANR	6313260	BreakStatement	break ;	91:12:1904:1909	6312885	38	True				
ANR	6313261	Statement	case	95:8:1922:1925	6312885	39	True				
ANR	6313262	Statement	MKTAG	95:13:1927:1931	6312885	40	True				
ANR	6313263	Statement	(	95:18:1932:1932	6312885	41	True				
ANR	6313264	Statement	'C'	95:19:1933:1935	6312885	42	True				
ANR	6313265	Statement	","	95:22:1936:1936	6312885	43	True				
ANR	6313266	Statement	'M'	95:23:1937:1939	6312885	44	True				
ANR	6313267	Statement	","	95:26:1940:1940	6312885	45	True				
ANR	6313268	Statement	'P'	95:27:1941:1943	6312885	46	True				
ANR	6313269	Statement	","	95:30:1944:1944	6312885	47	True				
ANR	6313270	Statement	'R'	95:31:1945:1947	6312885	48	True				
ANR	6313271	Statement	)	95:34:1948:1948	6312885	49	True				
ANR	6313272	Statement	:	95:35:1949:1949	6312885	50	True				
ANR	6313273	IfStatement	if ( size < 4 )		6312885	51					
ANR	6313274	Condition	size < 4	97:16:1968:1975	6312885	0	True				
ANR	6313275	RelationalExpression	size < 4		6312885	0		<			
ANR	6313276	Identifier	size		6312885	0					
ANR	6313277	PrimaryExpression	4		6312885	1					
ANR	6313278	ReturnStatement	return AVERROR_INVALIDDATA ;	99:16:1995:2021	6312885	1	True				
ANR	6313279	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313280	ExpressionStatement	tag = avio_rl32 ( pb )	101:12:2036:2055	6312885	52	True				
ANR	6313281	AssignmentExpression	tag = avio_rl32 ( pb )		6312885	0		=			
ANR	6313282	Identifier	tag		6312885	0					
ANR	6313283	CallExpression	avio_rl32 ( pb )		6312885	1					
ANR	6313284	Callee	avio_rl32		6312885	0					
ANR	6313285	Identifier	avio_rl32		6312885	0					
ANR	6313286	ArgumentList	pb		6312885	1					
ANR	6313287	Argument	pb		6312885	0					
ANR	6313288	Identifier	pb		6312885	0					
ANR	6313289	ExpressionStatement	"st -> codecpar -> codec_id = ff_codec_get_id ( dsd_codec_tags , tag )"	103:12:2070:2131	6312885	53	True				
ANR	6313290	AssignmentExpression	"st -> codecpar -> codec_id = ff_codec_get_id ( dsd_codec_tags , tag )"		6312885	0		=			
ANR	6313291	PtrMemberAccess	st -> codecpar -> codec_id		6312885	0					
ANR	6313292	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313293	Identifier	st		6312885	0					
ANR	6313294	Identifier	codecpar		6312885	1					
ANR	6313295	Identifier	codec_id		6312885	1					
ANR	6313296	CallExpression	"ff_codec_get_id ( dsd_codec_tags , tag )"		6312885	1					
ANR	6313297	Callee	ff_codec_get_id		6312885	0					
ANR	6313298	Identifier	ff_codec_get_id		6312885	0					
ANR	6313299	ArgumentList	dsd_codec_tags		6312885	1					
ANR	6313300	Argument	dsd_codec_tags		6312885	0					
ANR	6313301	Identifier	dsd_codec_tags		6312885	0					
ANR	6313302	Argument	tag		6312885	1					
ANR	6313303	Identifier	tag		6312885	0					
ANR	6313304	IfStatement	if ( ! st -> codecpar -> codec_id )		6312885	54					
ANR	6313305	Condition	! st -> codecpar -> codec_id	105:16:2150:2172	6312885	0	True				
ANR	6313306	UnaryOperationExpression	! st -> codecpar -> codec_id		6312885	0					
ANR	6313307	UnaryOperator	!		6312885	0					
ANR	6313308	PtrMemberAccess	st -> codecpar -> codec_id		6312885	1					
ANR	6313309	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313310	Identifier	st		6312885	0					
ANR	6313311	Identifier	codecpar		6312885	1					
ANR	6313312	Identifier	codec_id		6312885	1					
ANR	6313313	CompoundStatement		103:41:2099:2099	6312885	1					
ANR	6313314	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""'%c%c%c%c' compression is not supported\\n"" , tag & 0xFF , ( tag >> 8 ) & 0xFF , ( tag >> 16 ) & 0xFF , ( tag >> 24 ) & 0xFF )"	107:16:2194:2340	6312885	0	True				
ANR	6313315	CallExpression	"av_log ( s , AV_LOG_ERROR , ""'%c%c%c%c' compression is not supported\\n"" , tag & 0xFF , ( tag >> 8 ) & 0xFF , ( tag >> 16 ) & 0xFF , ( tag >> 24 ) & 0xFF )"		6312885	0					
ANR	6313316	Callee	av_log		6312885	0					
ANR	6313317	Identifier	av_log		6312885	0					
ANR	6313318	ArgumentList	s		6312885	1					
ANR	6313319	Argument	s		6312885	0					
ANR	6313320	Identifier	s		6312885	0					
ANR	6313321	Argument	AV_LOG_ERROR		6312885	1					
ANR	6313322	Identifier	AV_LOG_ERROR		6312885	0					
ANR	6313323	Argument	"""'%c%c%c%c' compression is not supported\\n"""		6312885	2					
ANR	6313324	PrimaryExpression	"""'%c%c%c%c' compression is not supported\\n"""		6312885	0					
ANR	6313325	Argument	tag & 0xFF		6312885	3					
ANR	6313326	BitAndExpression	tag & 0xFF		6312885	0		&			
ANR	6313327	Identifier	tag		6312885	0					
ANR	6313328	PrimaryExpression	0xFF		6312885	1					
ANR	6313329	Argument	( tag >> 8 ) & 0xFF		6312885	4					
ANR	6313330	BitAndExpression	( tag >> 8 ) & 0xFF		6312885	0		&			
ANR	6313331	ShiftExpression	tag >> 8		6312885	0		>>			
ANR	6313332	Identifier	tag		6312885	0					
ANR	6313333	PrimaryExpression	8		6312885	1					
ANR	6313334	PrimaryExpression	0xFF		6312885	1					
ANR	6313335	Argument	( tag >> 16 ) & 0xFF		6312885	5					
ANR	6313336	BitAndExpression	( tag >> 16 ) & 0xFF		6312885	0		&			
ANR	6313337	ShiftExpression	tag >> 16		6312885	0		>>			
ANR	6313338	Identifier	tag		6312885	0					
ANR	6313339	PrimaryExpression	16		6312885	1					
ANR	6313340	PrimaryExpression	0xFF		6312885	1					
ANR	6313341	Argument	( tag >> 24 ) & 0xFF		6312885	6					
ANR	6313342	BitAndExpression	( tag >> 24 ) & 0xFF		6312885	0		&			
ANR	6313343	ShiftExpression	tag >> 24		6312885	0		>>			
ANR	6313344	Identifier	tag		6312885	0					
ANR	6313345	PrimaryExpression	24		6312885	1					
ANR	6313346	PrimaryExpression	0xFF		6312885	1					
ANR	6313347	ReturnStatement	return AVERROR_PATCHWELCOME ;	111:16:2359:2386	6312885	1	True				
ANR	6313348	Identifier	AVERROR_PATCHWELCOME		6312885	0					
ANR	6313349	BreakStatement	break ;	115:12:2416:2421	6312885	55	True				
ANR	6313350	Statement	case	119:8:2434:2437	6312885	56	True				
ANR	6313351	Statement	MKTAG	119:13:2439:2443	6312885	57	True				
ANR	6313352	Statement	(	119:18:2444:2444	6312885	58	True				
ANR	6313353	Statement	'F'	119:19:2445:2447	6312885	59	True				
ANR	6313354	Statement	","	119:22:2448:2448	6312885	60	True				
ANR	6313355	Statement	'S'	119:23:2449:2451	6312885	61	True				
ANR	6313356	Statement	","	119:26:2452:2452	6312885	62	True				
ANR	6313357	Statement	' '	119:27:2453:2455	6312885	63	True				
ANR	6313358	Statement	","	119:30:2456:2456	6312885	64	True				
ANR	6313359	Statement	' '	119:31:2457:2459	6312885	65	True				
ANR	6313360	Statement	)	119:34:2460:2460	6312885	66	True				
ANR	6313361	Statement	:	119:35:2461:2461	6312885	67	True				
ANR	6313362	IfStatement	if ( size < 4 )		6312885	68					
ANR	6313363	Condition	size < 4	121:16:2480:2487	6312885	0	True				
ANR	6313364	RelationalExpression	size < 4		6312885	0		<			
ANR	6313365	Identifier	size		6312885	0					
ANR	6313366	PrimaryExpression	4		6312885	1					
ANR	6313367	ReturnStatement	return AVERROR_INVALIDDATA ;	123:16:2507:2533	6312885	1	True				
ANR	6313368	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313369	ExpressionStatement	st -> codecpar -> sample_rate = avio_rb32 ( pb ) / 8	125:12:2548:2593	6312885	69	True				
ANR	6313370	AssignmentExpression	st -> codecpar -> sample_rate = avio_rb32 ( pb ) / 8		6312885	0		=			
ANR	6313371	PtrMemberAccess	st -> codecpar -> sample_rate		6312885	0					
ANR	6313372	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313373	Identifier	st		6312885	0					
ANR	6313374	Identifier	codecpar		6312885	1					
ANR	6313375	Identifier	sample_rate		6312885	1					
ANR	6313376	MultiplicativeExpression	avio_rb32 ( pb ) / 8		6312885	1		/			
ANR	6313377	CallExpression	avio_rb32 ( pb )		6312885	0					
ANR	6313378	Callee	avio_rb32		6312885	0					
ANR	6313379	Identifier	avio_rb32		6312885	0					
ANR	6313380	ArgumentList	pb		6312885	1					
ANR	6313381	Argument	pb		6312885	0					
ANR	6313382	Identifier	pb		6312885	0					
ANR	6313383	PrimaryExpression	8		6312885	1					
ANR	6313384	BreakStatement	break ;	127:12:2608:2613	6312885	70	True				
ANR	6313385	Statement	case	131:8:2626:2629	6312885	71	True				
ANR	6313386	Statement	MKTAG	131:13:2631:2635	6312885	72	True				
ANR	6313387	Statement	(	131:18:2636:2636	6312885	73	True				
ANR	6313388	Statement	'I'	131:19:2637:2639	6312885	74	True				
ANR	6313389	Statement	","	131:22:2640:2640	6312885	75	True				
ANR	6313390	Statement	'D'	131:23:2641:2643	6312885	76	True				
ANR	6313391	Statement	","	131:26:2644:2644	6312885	77	True				
ANR	6313392	Statement	'3'	131:27:2645:2647	6312885	78	True				
ANR	6313393	Statement	","	131:30:2648:2648	6312885	79	True				
ANR	6313394	Statement	' '	131:31:2649:2651	6312885	80	True				
ANR	6313395	Statement	)	131:34:2652:2652	6312885	81	True				
ANR	6313396	Statement	:	131:35:2653:2653	6312885	82	True				
ANR	6313397	ExpressionStatement	id3v2_extra_meta = NULL	133:12:2668:2691	6312885	83	True				
ANR	6313398	AssignmentExpression	id3v2_extra_meta = NULL		6312885	0		=			
ANR	6313399	Identifier	id3v2_extra_meta		6312885	0					
ANR	6313400	Identifier	NULL		6312885	1					
ANR	6313401	ExpressionStatement	"ff_id3v2_read ( s , ID3v2_DEFAULT_MAGIC , & id3v2_extra_meta , size )"	135:12:2706:2768	6312885	84	True				
ANR	6313402	CallExpression	"ff_id3v2_read ( s , ID3v2_DEFAULT_MAGIC , & id3v2_extra_meta , size )"		6312885	0					
ANR	6313403	Callee	ff_id3v2_read		6312885	0					
ANR	6313404	Identifier	ff_id3v2_read		6312885	0					
ANR	6313405	ArgumentList	s		6312885	1					
ANR	6313406	Argument	s		6312885	0					
ANR	6313407	Identifier	s		6312885	0					
ANR	6313408	Argument	ID3v2_DEFAULT_MAGIC		6312885	1					
ANR	6313409	Identifier	ID3v2_DEFAULT_MAGIC		6312885	0					
ANR	6313410	Argument	& id3v2_extra_meta		6312885	2					
ANR	6313411	UnaryOperationExpression	& id3v2_extra_meta		6312885	0					
ANR	6313412	UnaryOperator	&		6312885	0					
ANR	6313413	Identifier	id3v2_extra_meta		6312885	1					
ANR	6313414	Argument	size		6312885	3					
ANR	6313415	Identifier	size		6312885	0					
ANR	6313416	IfStatement	if ( id3v2_extra_meta )		6312885	85					
ANR	6313417	Condition	id3v2_extra_meta	137:16:2787:2802	6312885	0	True				
ANR	6313418	Identifier	id3v2_extra_meta		6312885	0					
ANR	6313419	CompoundStatement		135:34:2729:2729	6312885	1					
ANR	6313420	IfStatement	"if ( ( ret = ff_id3v2_parse_apic ( s , & id3v2_extra_meta ) ) < 0 )"		6312885	0					
ANR	6313421	Condition	"( ret = ff_id3v2_parse_apic ( s , & id3v2_extra_meta ) ) < 0"	139:20:2828:2880	6312885	0	True				
ANR	6313422	RelationalExpression	"( ret = ff_id3v2_parse_apic ( s , & id3v2_extra_meta ) ) < 0"		6312885	0		<			
ANR	6313423	AssignmentExpression	"ret = ff_id3v2_parse_apic ( s , & id3v2_extra_meta )"		6312885	0		=			
ANR	6313424	Identifier	ret		6312885	0					
ANR	6313425	CallExpression	"ff_id3v2_parse_apic ( s , & id3v2_extra_meta )"		6312885	1					
ANR	6313426	Callee	ff_id3v2_parse_apic		6312885	0					
ANR	6313427	Identifier	ff_id3v2_parse_apic		6312885	0					
ANR	6313428	ArgumentList	s		6312885	1					
ANR	6313429	Argument	s		6312885	0					
ANR	6313430	Identifier	s		6312885	0					
ANR	6313431	Argument	& id3v2_extra_meta		6312885	1					
ANR	6313432	UnaryOperationExpression	& id3v2_extra_meta		6312885	0					
ANR	6313433	UnaryOperator	&		6312885	0					
ANR	6313434	Identifier	id3v2_extra_meta		6312885	1					
ANR	6313435	PrimaryExpression	0		6312885	1					
ANR	6313436	CompoundStatement		137:75:2807:2807	6312885	1					
ANR	6313437	ExpressionStatement	ff_id3v2_free_extra_meta ( & id3v2_extra_meta )	141:20:2906:2949	6312885	0	True				
ANR	6313438	CallExpression	ff_id3v2_free_extra_meta ( & id3v2_extra_meta )		6312885	0					
ANR	6313439	Callee	ff_id3v2_free_extra_meta		6312885	0					
ANR	6313440	Identifier	ff_id3v2_free_extra_meta		6312885	0					
ANR	6313441	ArgumentList	& id3v2_extra_meta		6312885	1					
ANR	6313442	Argument	& id3v2_extra_meta		6312885	0					
ANR	6313443	UnaryOperationExpression	& id3v2_extra_meta		6312885	0					
ANR	6313444	UnaryOperator	&		6312885	0					
ANR	6313445	Identifier	id3v2_extra_meta		6312885	1					
ANR	6313446	ReturnStatement	return ret ;	143:20:2972:2982	6312885	1	True				
ANR	6313447	Identifier	ret		6312885	0					
ANR	6313448	ExpressionStatement	ff_id3v2_free_extra_meta ( & id3v2_extra_meta )	147:16:3020:3063	6312885	1	True				
ANR	6313449	CallExpression	ff_id3v2_free_extra_meta ( & id3v2_extra_meta )		6312885	0					
ANR	6313450	Callee	ff_id3v2_free_extra_meta		6312885	0					
ANR	6313451	Identifier	ff_id3v2_free_extra_meta		6312885	0					
ANR	6313452	ArgumentList	& id3v2_extra_meta		6312885	1					
ANR	6313453	Argument	& id3v2_extra_meta		6312885	0					
ANR	6313454	UnaryOperationExpression	& id3v2_extra_meta		6312885	0					
ANR	6313455	UnaryOperator	&		6312885	0					
ANR	6313456	Identifier	id3v2_extra_meta		6312885	1					
ANR	6313457	IfStatement	if ( size < avio_tell ( pb ) - orig_pos )		6312885	86					
ANR	6313458	Condition	size < avio_tell ( pb ) - orig_pos	153:16:3099:3129	6312885	0	True				
ANR	6313459	RelationalExpression	size < avio_tell ( pb ) - orig_pos		6312885	0		<			
ANR	6313460	Identifier	size		6312885	0					
ANR	6313461	AdditiveExpression	avio_tell ( pb ) - orig_pos		6312885	1		-			
ANR	6313462	CallExpression	avio_tell ( pb )		6312885	0					
ANR	6313463	Callee	avio_tell		6312885	0					
ANR	6313464	Identifier	avio_tell		6312885	0					
ANR	6313465	ArgumentList	pb		6312885	1					
ANR	6313466	Argument	pb		6312885	0					
ANR	6313467	Identifier	pb		6312885	0					
ANR	6313468	Identifier	orig_pos		6312885	1					
ANR	6313469	CompoundStatement		151:49:3056:3056	6312885	1					
ANR	6313470	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""id3 exceeds chunk size\\n"" )"	155:16:3151:3202	6312885	0	True				
ANR	6313471	CallExpression	"av_log ( s , AV_LOG_ERROR , ""id3 exceeds chunk size\\n"" )"		6312885	0					
ANR	6313472	Callee	av_log		6312885	0					
ANR	6313473	Identifier	av_log		6312885	0					
ANR	6313474	ArgumentList	s		6312885	1					
ANR	6313475	Argument	s		6312885	0					
ANR	6313476	Identifier	s		6312885	0					
ANR	6313477	Argument	AV_LOG_ERROR		6312885	1					
ANR	6313478	Identifier	AV_LOG_ERROR		6312885	0					
ANR	6313479	Argument	"""id3 exceeds chunk size\\n"""		6312885	2					
ANR	6313480	PrimaryExpression	"""id3 exceeds chunk size\\n"""		6312885	0					
ANR	6313481	ReturnStatement	return AVERROR_INVALIDDATA ;	157:16:3221:3247	6312885	1	True				
ANR	6313482	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313483	BreakStatement	break ;	161:12:3277:3282	6312885	87	True				
ANR	6313484	Statement	case	165:8:3295:3298	6312885	88	True				
ANR	6313485	Statement	MKTAG	165:13:3300:3304	6312885	89	True				
ANR	6313486	Statement	(	165:18:3305:3305	6312885	90	True				
ANR	6313487	Statement	'L'	165:19:3306:3308	6312885	91	True				
ANR	6313488	Statement	","	165:22:3309:3309	6312885	92	True				
ANR	6313489	Statement	'S'	165:23:3310:3312	6312885	93	True				
ANR	6313490	Statement	","	165:26:3313:3313	6312885	94	True				
ANR	6313491	Statement	'C'	165:27:3314:3316	6312885	95	True				
ANR	6313492	Statement	","	165:30:3317:3317	6312885	96	True				
ANR	6313493	Statement	'O'	165:31:3318:3320	6312885	97	True				
ANR	6313494	Statement	)	165:34:3321:3321	6312885	98	True				
ANR	6313495	Statement	:	165:35:3322:3322	6312885	99	True				
ANR	6313496	IfStatement	if ( size < 2 )		6312885	100					
ANR	6313497	Condition	size < 2	167:16:3341:3348	6312885	0	True				
ANR	6313498	RelationalExpression	size < 2		6312885	0		<			
ANR	6313499	Identifier	size		6312885	0					
ANR	6313500	PrimaryExpression	2		6312885	1					
ANR	6313501	ReturnStatement	return AVERROR_INVALIDDATA ;	169:16:3368:3394	6312885	1	True				
ANR	6313502	Identifier	AVERROR_INVALIDDATA		6312885	0					
ANR	6313503	ExpressionStatement	config = avio_rb16 ( pb )	171:12:3409:3431	6312885	101	True				
ANR	6313504	AssignmentExpression	config = avio_rb16 ( pb )		6312885	0		=			
ANR	6313505	Identifier	config		6312885	0					
ANR	6313506	CallExpression	avio_rb16 ( pb )		6312885	1					
ANR	6313507	Callee	avio_rb16		6312885	0					
ANR	6313508	Identifier	avio_rb16		6312885	0					
ANR	6313509	ArgumentList	pb		6312885	1					
ANR	6313510	Argument	pb		6312885	0					
ANR	6313511	Identifier	pb		6312885	0					
ANR	6313512	IfStatement	if ( config != 0xFFFF )		6312885	102					
ANR	6313513	Condition	config != 0xFFFF	173:16:3450:3465	6312885	0	True				
ANR	6313514	EqualityExpression	config != 0xFFFF		6312885	0		!=			
ANR	6313515	Identifier	config		6312885	0					
ANR	6313516	PrimaryExpression	0xFFFF		6312885	1					
ANR	6313517	CompoundStatement		171:34:3392:3392	6312885	1					
ANR	6313518	IfStatement	if ( config < FF_ARRAY_ELEMS ( dsd_loudspeaker_config ) )		6312885	0					
ANR	6313519	Condition	config < FF_ARRAY_ELEMS ( dsd_loudspeaker_config )	175:20:3491:3537	6312885	0	True				
ANR	6313520	RelationalExpression	config < FF_ARRAY_ELEMS ( dsd_loudspeaker_config )		6312885	0		<			
ANR	6313521	Identifier	config		6312885	0					
ANR	6313522	CallExpression	FF_ARRAY_ELEMS ( dsd_loudspeaker_config )		6312885	1					
ANR	6313523	Callee	FF_ARRAY_ELEMS		6312885	0					
ANR	6313524	Identifier	FF_ARRAY_ELEMS		6312885	0					
ANR	6313525	ArgumentList	dsd_loudspeaker_config		6312885	1					
ANR	6313526	Argument	dsd_loudspeaker_config		6312885	0					
ANR	6313527	Identifier	dsd_loudspeaker_config		6312885	0					
ANR	6313528	ExpressionStatement	st -> codecpar -> channel_layout = dsd_loudspeaker_config [ config ]	177:20:3561:3622	6312885	1	True				
ANR	6313529	AssignmentExpression	st -> codecpar -> channel_layout = dsd_loudspeaker_config [ config ]		6312885	0		=			
ANR	6313530	PtrMemberAccess	st -> codecpar -> channel_layout		6312885	0					
ANR	6313531	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313532	Identifier	st		6312885	0					
ANR	6313533	Identifier	codecpar		6312885	1					
ANR	6313534	Identifier	channel_layout		6312885	1					
ANR	6313535	ArrayIndexing	dsd_loudspeaker_config [ config ]		6312885	1					
ANR	6313536	Identifier	dsd_loudspeaker_config		6312885	0					
ANR	6313537	Identifier	config		6312885	1					
ANR	6313538	IfStatement	if ( ! st -> codecpar -> channel_layout )		6312885	1					
ANR	6313539	Condition	! st -> codecpar -> channel_layout	179:20:3645:3673	6312885	0	True				
ANR	6313540	UnaryOperationExpression	! st -> codecpar -> channel_layout		6312885	0					
ANR	6313541	UnaryOperator	!		6312885	0					
ANR	6313542	PtrMemberAccess	st -> codecpar -> channel_layout		6312885	1					
ANR	6313543	PtrMemberAccess	st -> codecpar		6312885	0					
ANR	6313544	Identifier	st		6312885	0					
ANR	6313545	Identifier	codecpar		6312885	1					
ANR	6313546	Identifier	channel_layout		6312885	1					
ANR	6313547	ExpressionStatement	"avpriv_request_sample ( s , ""loudspeaker configuration %d"" , config )"	181:20:3697:3761	6312885	1	True				
ANR	6313548	CallExpression	"avpriv_request_sample ( s , ""loudspeaker configuration %d"" , config )"		6312885	0					
ANR	6313549	Callee	avpriv_request_sample		6312885	0					
ANR	6313550	Identifier	avpriv_request_sample		6312885	0					
ANR	6313551	ArgumentList	s		6312885	1					
ANR	6313552	Argument	s		6312885	0					
ANR	6313553	Identifier	s		6312885	0					
ANR	6313554	Argument	"""loudspeaker configuration %d"""		6312885	1					
ANR	6313555	PrimaryExpression	"""loudspeaker configuration %d"""		6312885	0					
ANR	6313556	Argument	config		6312885	2					
ANR	6313557	Identifier	config		6312885	0					
ANR	6313558	BreakStatement	break ;	185:12:3791:3796	6312885	103	True				
ANR	6313559	ExpressionStatement	"avio_skip ( pb , size - ( avio_tell ( pb ) - orig_pos ) + ( size & 1 ) )"	191:8:3820:3881	6312885	4	True				
ANR	6313560	CallExpression	"avio_skip ( pb , size - ( avio_tell ( pb ) - orig_pos ) + ( size & 1 ) )"		6312885	0					
ANR	6313561	Callee	avio_skip		6312885	0					
ANR	6313562	Identifier	avio_skip		6312885	0					
ANR	6313563	ArgumentList	pb		6312885	1					
ANR	6313564	Argument	pb		6312885	0					
ANR	6313565	Identifier	pb		6312885	0					
ANR	6313566	Argument	size - ( avio_tell ( pb ) - orig_pos ) + ( size & 1 )		6312885	1					
ANR	6313567	AdditiveExpression	size - ( avio_tell ( pb ) - orig_pos ) + ( size & 1 )		6312885	0		-			
ANR	6313568	Identifier	size		6312885	0					
ANR	6313569	AdditiveExpression	( avio_tell ( pb ) - orig_pos ) + ( size & 1 )		6312885	1		+			
ANR	6313570	AdditiveExpression	avio_tell ( pb ) - orig_pos		6312885	0		-			
ANR	6313571	CallExpression	avio_tell ( pb )		6312885	0					
ANR	6313572	Callee	avio_tell		6312885	0					
ANR	6313573	Identifier	avio_tell		6312885	0					
ANR	6313574	ArgumentList	pb		6312885	1					
ANR	6313575	Argument	pb		6312885	0					
ANR	6313576	Identifier	pb		6312885	0					
ANR	6313577	Identifier	orig_pos		6312885	1					
ANR	6313578	BitAndExpression	size & 1		6312885	1		&			
ANR	6313579	Identifier	size		6312885	0					
ANR	6313580	PrimaryExpression	1		6312885	1					
ANR	6313581	ReturnStatement	return 0 ;	197:4:3897:3905	6312885	6	True				
ANR	6313582	PrimaryExpression	0		6312885	0					
ANR	6313583	ReturnType	static int		6312885	1					
ANR	6313584	Identifier	parse_dsd_prop		6312885	2					
ANR	6313585	ParameterList	"AVFormatContext * s , AVStream * st , uint64_t eof"		6312885	3					
ANR	6313586	Parameter	AVFormatContext * s	1:26:26:43	6312885	0	True				
ANR	6313587	ParameterType	AVFormatContext *		6312885	0					
ANR	6313588	Identifier	s		6312885	1					
ANR	6313589	Parameter	AVStream * st	1:46:46:57	6312885	1	True				
ANR	6313590	ParameterType	AVStream *		6312885	0					
ANR	6313591	Identifier	st		6312885	1					
ANR	6313592	Parameter	uint64_t eof	1:60:60:71	6312885	2	True				
ANR	6313593	ParameterType	uint64_t		6312885	0					
ANR	6313594	Identifier	eof		6312885	1					
ANR	6313595	CFGEntryNode	ENTRY		6312885		True				
ANR	6313596	CFGExitNode	EXIT		6312885		True				
ANR	6313597	Symbol	* config		6312885						
ANR	6313598	Symbol	* st		6312885						
ANR	6313599	Symbol	st -> codecpar -> channels		6312885						
ANR	6313600	Symbol	d -> layout		6312885						
ANR	6313601	Symbol	ff_codec_get_id		6312885						
ANR	6313602	Symbol	st -> codecpar		6312885						
ANR	6313603	Symbol	avio_rb64		6312885						
ANR	6313604	Symbol	* dsd_loudspeaker_config		6312885						
ANR	6313605	Symbol	memcmp		6312885						
ANR	6313606	Symbol	st -> codecpar -> sample_rate		6312885						
ANR	6313607	Symbol	& id3v2_extra_meta		6312885						
ANR	6313608	Symbol	tag		6312885						
ANR	6313609	Symbol	ret		6312885						
ANR	6313610	Symbol	NULL		6312885						
ANR	6313611	Symbol	dsd_channel_layout		6312885						
ANR	6313612	Symbol	av_get_channel_layout_nb_channels		6312885						
ANR	6313613	Symbol	avio_rb32		6312885						
ANR	6313614	Symbol	size		6312885						
ANR	6313615	Symbol	FF_ARRAY_ELEMS		6312885						
ANR	6313616	Symbol	* st -> codecpar		6312885						
ANR	6313617	Symbol	& st -> metadata		6312885						
ANR	6313618	Symbol	avio_r8		6312885						
ANR	6313619	Symbol	avio_rl32		6312885						
ANR	6313620	Symbol	st -> codecpar -> channel_layout		6312885						
ANR	6313621	Symbol	* dsd_layout		6312885						
ANR	6313622	Symbol	id3v2_extra_meta		6312885						
ANR	6313623	Symbol	d -> dsd_layout		6312885						
ANR	6313624	Symbol	s -> pb		6312885						
ANR	6313625	Symbol	* * st		6312885						
ANR	6313626	Symbol	dsd_loudspeaker_config		6312885						
ANR	6313627	Symbol	sec		6312885						
ANR	6313628	Symbol	min		6312885						
ANR	6313629	Symbol	hour		6312885						
ANR	6313630	Symbol	avio_tell		6312885						
ANR	6313631	Symbol	st -> codecpar -> codec_id		6312885						
ANR	6313632	Symbol	AVERROR_PATCHWELCOME		6312885						
ANR	6313633	Symbol	dsd_layout		6312885						
ANR	6313634	Symbol	st		6312885						
ANR	6313635	Symbol	ID3v2_DEFAULT_MAGIC		6312885						
ANR	6313636	Symbol	ff_id3v2_parse_apic		6312885						
ANR	6313637	Symbol	d		6312885						
ANR	6313638	Symbol	AV_LOG_ERROR		6312885						
ANR	6313639	Symbol	i		6312885						
ANR	6313640	Symbol	abss		6312885						
ANR	6313641	Symbol	dsd_codec_tags		6312885						
ANR	6313642	Symbol	* d		6312885						
ANR	6313643	Symbol	pb		6312885						
ANR	6313644	Symbol	s		6312885						
ANR	6313645	Symbol	* i		6312885						
ANR	6313646	Symbol	orig_pos		6312885						
ANR	6313647	Symbol	avio_rb16		6312885						
ANR	6313648	Symbol	AVERROR_INVALIDDATA		6312885						
ANR	6313649	Symbol	eof		6312885						
ANR	6313650	Symbol	* s		6312885						
ANR	6313651	Symbol	config		6312885						
