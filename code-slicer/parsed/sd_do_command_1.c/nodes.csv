command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7667641	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sd_do_command_1.c								
ANR	7667642	Function	sd_do_command	1:0:0:2023							
ANR	7667643	FunctionDef	"sd_do_command (SDState * sd , SDRequest * req , uint8_t * response)"		7667642	0					
ANR	7667644	CompoundStatement		3:37:85:2023	7667642	0					
ANR	7667645	IdentifierDeclStatement	uint32_t last_status = sd -> card_status ;	5:4:92:130	7667642	0	True				
ANR	7667646	IdentifierDecl	last_status = sd -> card_status		7667642	0					
ANR	7667647	IdentifierDeclType	uint32_t		7667642	0					
ANR	7667648	Identifier	last_status		7667642	1					
ANR	7667649	AssignmentExpression	last_status = sd -> card_status		7667642	2		=			
ANR	7667650	Identifier	last_status		7667642	0					
ANR	7667651	PtrMemberAccess	sd -> card_status		7667642	1					
ANR	7667652	Identifier	sd		7667642	0					
ANR	7667653	Identifier	card_status		7667642	1					
ANR	7667654	IdentifierDeclStatement	sd_rsp_type_t rtype ;	7:4:137:156	7667642	1	True				
ANR	7667655	IdentifierDecl	rtype		7667642	0					
ANR	7667656	IdentifierDeclType	sd_rsp_type_t		7667642	0					
ANR	7667657	Identifier	rtype		7667642	1					
ANR	7667658	IdentifierDeclStatement	int rsplen ;	9:4:163:173	7667642	2	True				
ANR	7667659	IdentifierDecl	rsplen		7667642	0					
ANR	7667660	IdentifierDeclType	int		7667642	0					
ANR	7667661	Identifier	rsplen		7667642	1					
ANR	7667662	IfStatement	if ( ! sd -> bdrv || ! bdrv_is_inserted ( sd -> bdrv ) || ! sd -> enable )		7667642	3					
ANR	7667663	Condition	! sd -> bdrv || ! bdrv_is_inserted ( sd -> bdrv ) || ! sd -> enable	13:8:186:240	7667642	0	True				
ANR	7667664	OrExpression	! sd -> bdrv || ! bdrv_is_inserted ( sd -> bdrv ) || ! sd -> enable		7667642	0		||			
ANR	7667665	UnaryOperationExpression	! sd -> bdrv		7667642	0					
ANR	7667666	UnaryOperator	!		7667642	0					
ANR	7667667	PtrMemberAccess	sd -> bdrv		7667642	1					
ANR	7667668	Identifier	sd		7667642	0					
ANR	7667669	Identifier	bdrv		7667642	1					
ANR	7667670	OrExpression	! bdrv_is_inserted ( sd -> bdrv ) || ! sd -> enable		7667642	1		||			
ANR	7667671	UnaryOperationExpression	! bdrv_is_inserted ( sd -> bdrv )		7667642	0					
ANR	7667672	UnaryOperator	!		7667642	0					
ANR	7667673	CallExpression	bdrv_is_inserted ( sd -> bdrv )		7667642	1					
ANR	7667674	Callee	bdrv_is_inserted		7667642	0					
ANR	7667675	Identifier	bdrv_is_inserted		7667642	0					
ANR	7667676	ArgumentList	sd -> bdrv		7667642	1					
ANR	7667677	Argument	sd -> bdrv		7667642	0					
ANR	7667678	PtrMemberAccess	sd -> bdrv		7667642	0					
ANR	7667679	Identifier	sd		7667642	0					
ANR	7667680	Identifier	bdrv		7667642	1					
ANR	7667681	UnaryOperationExpression	! sd -> enable		7667642	1					
ANR	7667682	UnaryOperator	!		7667642	0					
ANR	7667683	PtrMemberAccess	sd -> enable		7667642	1					
ANR	7667684	Identifier	sd		7667642	0					
ANR	7667685	Identifier	enable		7667642	1					
ANR	7667686	CompoundStatement		11:65:157:157	7667642	1					
ANR	7667687	ReturnStatement	return 0 ;	15:8:254:262	7667642	0	True				
ANR	7667688	PrimaryExpression	0		7667642	0					
ANR	7667689	IfStatement	if ( sd_req_crc_validate ( req ) )		7667642	4					
ANR	7667690	Condition	sd_req_crc_validate ( req )	21:8:282:305	7667642	0	True				
ANR	7667691	CallExpression	sd_req_crc_validate ( req )		7667642	0					
ANR	7667692	Callee	sd_req_crc_validate		7667642	0					
ANR	7667693	Identifier	sd_req_crc_validate		7667642	0					
ANR	7667694	ArgumentList	req		7667642	1					
ANR	7667695	Argument	req		7667642	0					
ANR	7667696	Identifier	req		7667642	0					
ANR	7667697	CompoundStatement		19:34:222:222	7667642	1					
ANR	7667698	ExpressionStatement	sd -> card_status &= ~COM_CRC_ERROR	23:8:319:352	7667642	0	True				
ANR	7667699	AssignmentExpression	sd -> card_status &= ~COM_CRC_ERROR		7667642	0		&=			
ANR	7667700	PtrMemberAccess	sd -> card_status		7667642	0					
ANR	7667701	Identifier	sd		7667642	0					
ANR	7667702	Identifier	card_status		7667642	1					
ANR	7667703	Identifier	~COM_CRC_ERROR		7667642	1					
ANR	7667704	ReturnStatement	return 0 ;	25:8:363:371	7667642	1	True				
ANR	7667705	PrimaryExpression	0		7667642	0					
ANR	7667706	ExpressionStatement	sd -> card_status &= ~CARD_STATUS_B	31:4:387:420	7667642	5	True				
ANR	7667707	AssignmentExpression	sd -> card_status &= ~CARD_STATUS_B		7667642	0		&=			
ANR	7667708	PtrMemberAccess	sd -> card_status		7667642	0					
ANR	7667709	Identifier	sd		7667642	0					
ANR	7667710	Identifier	card_status		7667642	1					
ANR	7667711	Identifier	~CARD_STATUS_B		7667642	1					
ANR	7667712	ExpressionStatement	sd_set_status ( sd )	33:4:427:444	7667642	6	True				
ANR	7667713	CallExpression	sd_set_status ( sd )		7667642	0					
ANR	7667714	Callee	sd_set_status		7667642	0					
ANR	7667715	Identifier	sd_set_status		7667642	0					
ANR	7667716	ArgumentList	sd		7667642	1					
ANR	7667717	Argument	sd		7667642	0					
ANR	7667718	Identifier	sd		7667642	0					
ANR	7667719	IfStatement	if ( last_status & CARD_IS_LOCKED )		7667642	7					
ANR	7667720	Condition	last_status & CARD_IS_LOCKED	37:8:457:484	7667642	0	True				
ANR	7667721	BitAndExpression	last_status & CARD_IS_LOCKED		7667642	0		&			
ANR	7667722	Identifier	last_status		7667642	0					
ANR	7667723	Identifier	CARD_IS_LOCKED		7667642	1					
ANR	7667724	CompoundStatement		35:38:401:401	7667642	1					
ANR	7667725	IfStatement	"if ( ! cmd_valid_while_locked ( sd , req ) )"		7667642	0					
ANR	7667726	Condition	"! cmd_valid_while_locked ( sd , req )"	39:12:502:533	7667642	0	True				
ANR	7667727	UnaryOperationExpression	"! cmd_valid_while_locked ( sd , req )"		7667642	0					
ANR	7667728	UnaryOperator	!		7667642	0					
ANR	7667729	CallExpression	"cmd_valid_while_locked ( sd , req )"		7667642	1					
ANR	7667730	Callee	cmd_valid_while_locked		7667642	0					
ANR	7667731	Identifier	cmd_valid_while_locked		7667642	0					
ANR	7667732	ArgumentList	sd		7667642	1					
ANR	7667733	Argument	sd		7667642	0					
ANR	7667734	Identifier	sd		7667642	0					
ANR	7667735	Argument	req		7667642	1					
ANR	7667736	Identifier	req		7667642	0					
ANR	7667737	CompoundStatement		37:46:450:450	7667642	1					
ANR	7667738	ExpressionStatement	sd -> card_status |= ILLEGAL_COMMAND	41:12:551:585	7667642	0	True				
ANR	7667739	AssignmentExpression	sd -> card_status |= ILLEGAL_COMMAND		7667642	0		|=			
ANR	7667740	PtrMemberAccess	sd -> card_status		7667642	0					
ANR	7667741	Identifier	sd		7667642	0					
ANR	7667742	Identifier	card_status		7667642	1					
ANR	7667743	Identifier	ILLEGAL_COMMAND		7667642	1					
ANR	7667744	ExpressionStatement	"fprintf ( stderr , ""SD: Card is locked\\n"" )"	43:12:600:639	7667642	1	True				
ANR	7667745	CallExpression	"fprintf ( stderr , ""SD: Card is locked\\n"" )"		7667642	0					
ANR	7667746	Callee	fprintf		7667642	0					
ANR	7667747	Identifier	fprintf		7667642	0					
ANR	7667748	ArgumentList	stderr		7667642	1					
ANR	7667749	Argument	stderr		7667642	0					
ANR	7667750	Identifier	stderr		7667642	0					
ANR	7667751	Argument	"""SD: Card is locked\\n"""		7667642	1					
ANR	7667752	PrimaryExpression	"""SD: Card is locked\\n"""		7667642	0					
ANR	7667753	ReturnStatement	return 0 ;	45:12:654:662	7667642	2	True				
ANR	7667754	PrimaryExpression	0		7667642	0					
ANR	7667755	IfStatement	if ( last_status & APP_CMD )		7667642	8					
ANR	7667756	Condition	last_status & APP_CMD	53:8:693:713	7667642	0	True				
ANR	7667757	BitAndExpression	last_status & APP_CMD		7667642	0		&			
ANR	7667758	Identifier	last_status		7667642	0					
ANR	7667759	Identifier	APP_CMD		7667642	1					
ANR	7667760	CompoundStatement		51:31:630:630	7667642	1					
ANR	7667761	ExpressionStatement	"rtype = sd_app_command ( sd , * req )"	55:8:727:759	7667642	0	True				
ANR	7667762	AssignmentExpression	"rtype = sd_app_command ( sd , * req )"		7667642	0		=			
ANR	7667763	Identifier	rtype		7667642	0					
ANR	7667764	CallExpression	"sd_app_command ( sd , * req )"		7667642	1					
ANR	7667765	Callee	sd_app_command		7667642	0					
ANR	7667766	Identifier	sd_app_command		7667642	0					
ANR	7667767	ArgumentList	sd		7667642	1					
ANR	7667768	Argument	sd		7667642	0					
ANR	7667769	Identifier	sd		7667642	0					
ANR	7667770	Argument	* req		7667642	1					
ANR	7667771	UnaryOperationExpression	* req		7667642	0					
ANR	7667772	UnaryOperator	*		7667642	0					
ANR	7667773	Identifier	req		7667642	1					
ANR	7667774	ExpressionStatement	sd -> card_status &= ~APP_CMD	57:8:770:797	7667642	1	True				
ANR	7667775	AssignmentExpression	sd -> card_status &= ~APP_CMD		7667642	0		&=			
ANR	7667776	PtrMemberAccess	sd -> card_status		7667642	0					
ANR	7667777	Identifier	sd		7667642	0					
ANR	7667778	Identifier	card_status		7667642	1					
ANR	7667779	Identifier	~APP_CMD		7667642	1					
ANR	7667780	ElseStatement	else		7667642	0					
ANR	7667781	ExpressionStatement	"rtype = sd_normal_command ( sd , * req )"	61:8:820:855	7667642	0	True				
ANR	7667782	AssignmentExpression	"rtype = sd_normal_command ( sd , * req )"		7667642	0		=			
ANR	7667783	Identifier	rtype		7667642	0					
ANR	7667784	CallExpression	"sd_normal_command ( sd , * req )"		7667642	1					
ANR	7667785	Callee	sd_normal_command		7667642	0					
ANR	7667786	Identifier	sd_normal_command		7667642	0					
ANR	7667787	ArgumentList	sd		7667642	1					
ANR	7667788	Argument	sd		7667642	0					
ANR	7667789	Identifier	sd		7667642	0					
ANR	7667790	Argument	* req		7667642	1					
ANR	7667791	UnaryOperationExpression	* req		7667642	0					
ANR	7667792	UnaryOperator	*		7667642	0					
ANR	7667793	Identifier	req		7667642	1					
ANR	7667794	ExpressionStatement	sd -> current_cmd = req -> cmd	65:4:864:890	7667642	9	True				
ANR	7667795	AssignmentExpression	sd -> current_cmd = req -> cmd		7667642	0		=			
ANR	7667796	PtrMemberAccess	sd -> current_cmd		7667642	0					
ANR	7667797	Identifier	sd		7667642	0					
ANR	7667798	Identifier	current_cmd		7667642	1					
ANR	7667799	PtrMemberAccess	req -> cmd		7667642	1					
ANR	7667800	Identifier	req		7667642	0					
ANR	7667801	Identifier	cmd		7667642	1					
ANR	7667802	SwitchStatement	switch ( rtype )		7667642	10					
ANR	7667803	Condition	rtype	69:12:907:911	7667642	0	True				
ANR	7667804	Identifier	rtype		7667642	0					
ANR	7667805	CompoundStatement		67:19:828:828	7667642	1					
ANR	7667806	Label	case sd_r1 :	71:4:921:931	7667642	0	True				
ANR	7667807	Identifier	sd_r1		7667642	0					
ANR	7667808	Label	case sd_r1b :	73:4:938:949	7667642	1	True				
ANR	7667809	Identifier	sd_r1b		7667642	0					
ANR	7667810	ExpressionStatement	"sd_response_r1_make ( sd , response , last_status )"	75:8:960:1006	7667642	2	True				
ANR	7667811	CallExpression	"sd_response_r1_make ( sd , response , last_status )"		7667642	0					
ANR	7667812	Callee	sd_response_r1_make		7667642	0					
ANR	7667813	Identifier	sd_response_r1_make		7667642	0					
ANR	7667814	ArgumentList	sd		7667642	1					
ANR	7667815	Argument	sd		7667642	0					
ANR	7667816	Identifier	sd		7667642	0					
ANR	7667817	Argument	response		7667642	1					
ANR	7667818	Identifier	response		7667642	0					
ANR	7667819	Argument	last_status		7667642	2					
ANR	7667820	Identifier	last_status		7667642	0					
ANR	7667821	ExpressionStatement	rsplen = 4	77:8:1017:1027	7667642	3	True				
ANR	7667822	AssignmentExpression	rsplen = 4		7667642	0		=			
ANR	7667823	Identifier	rsplen		7667642	0					
ANR	7667824	PrimaryExpression	4		7667642	1					
ANR	7667825	BreakStatement	break ;	79:8:1038:1043	7667642	4	True				
ANR	7667826	Label	case sd_r2_i :	83:4:1052:1064	7667642	5	True				
ANR	7667827	Identifier	sd_r2_i		7667642	0					
ANR	7667828	ExpressionStatement	"memcpy ( response , sd -> cid , sizeof ( sd -> cid ) )"	85:8:1075:1117	7667642	6	True				
ANR	7667829	CallExpression	"memcpy ( response , sd -> cid , sizeof ( sd -> cid ) )"		7667642	0					
ANR	7667830	Callee	memcpy		7667642	0					
ANR	7667831	Identifier	memcpy		7667642	0					
ANR	7667832	ArgumentList	response		7667642	1					
ANR	7667833	Argument	response		7667642	0					
ANR	7667834	Identifier	response		7667642	0					
ANR	7667835	Argument	sd -> cid		7667642	1					
ANR	7667836	PtrMemberAccess	sd -> cid		7667642	0					
ANR	7667837	Identifier	sd		7667642	0					
ANR	7667838	Identifier	cid		7667642	1					
ANR	7667839	Argument	sizeof ( sd -> cid )		7667642	2					
ANR	7667840	SizeofExpression	sizeof ( sd -> cid )		7667642	0					
ANR	7667841	Sizeof	sizeof		7667642	0					
ANR	7667842	PtrMemberAccess	sd -> cid		7667642	1					
ANR	7667843	Identifier	sd		7667642	0					
ANR	7667844	Identifier	cid		7667642	1					
ANR	7667845	ExpressionStatement	rsplen = 16	87:8:1128:1139	7667642	7	True				
ANR	7667846	AssignmentExpression	rsplen = 16		7667642	0		=			
ANR	7667847	Identifier	rsplen		7667642	0					
ANR	7667848	PrimaryExpression	16		7667642	1					
ANR	7667849	BreakStatement	break ;	89:8:1150:1155	7667642	8	True				
ANR	7667850	Label	case sd_r2_s :	93:4:1164:1176	7667642	9	True				
ANR	7667851	Identifier	sd_r2_s		7667642	0					
ANR	7667852	ExpressionStatement	"memcpy ( response , sd -> csd , sizeof ( sd -> csd ) )"	95:8:1187:1229	7667642	10	True				
ANR	7667853	CallExpression	"memcpy ( response , sd -> csd , sizeof ( sd -> csd ) )"		7667642	0					
ANR	7667854	Callee	memcpy		7667642	0					
ANR	7667855	Identifier	memcpy		7667642	0					
ANR	7667856	ArgumentList	response		7667642	1					
ANR	7667857	Argument	response		7667642	0					
ANR	7667858	Identifier	response		7667642	0					
ANR	7667859	Argument	sd -> csd		7667642	1					
ANR	7667860	PtrMemberAccess	sd -> csd		7667642	0					
ANR	7667861	Identifier	sd		7667642	0					
ANR	7667862	Identifier	csd		7667642	1					
ANR	7667863	Argument	sizeof ( sd -> csd )		7667642	2					
ANR	7667864	SizeofExpression	sizeof ( sd -> csd )		7667642	0					
ANR	7667865	Sizeof	sizeof		7667642	0					
ANR	7667866	PtrMemberAccess	sd -> csd		7667642	1					
ANR	7667867	Identifier	sd		7667642	0					
ANR	7667868	Identifier	csd		7667642	1					
ANR	7667869	ExpressionStatement	rsplen = 16	97:8:1240:1251	7667642	11	True				
ANR	7667870	AssignmentExpression	rsplen = 16		7667642	0		=			
ANR	7667871	Identifier	rsplen		7667642	0					
ANR	7667872	PrimaryExpression	16		7667642	1					
ANR	7667873	BreakStatement	break ;	99:8:1262:1267	7667642	12	True				
ANR	7667874	Label	case sd_r3 :	103:4:1276:1286	7667642	13	True				
ANR	7667875	Identifier	sd_r3		7667642	0					
ANR	7667876	ExpressionStatement	"sd_response_r3_make ( sd , response )"	105:8:1297:1330	7667642	14	True				
ANR	7667877	CallExpression	"sd_response_r3_make ( sd , response )"		7667642	0					
ANR	7667878	Callee	sd_response_r3_make		7667642	0					
ANR	7667879	Identifier	sd_response_r3_make		7667642	0					
ANR	7667880	ArgumentList	sd		7667642	1					
ANR	7667881	Argument	sd		7667642	0					
ANR	7667882	Identifier	sd		7667642	0					
ANR	7667883	Argument	response		7667642	1					
ANR	7667884	Identifier	response		7667642	0					
ANR	7667885	ExpressionStatement	rsplen = 4	107:8:1341:1351	7667642	15	True				
ANR	7667886	AssignmentExpression	rsplen = 4		7667642	0		=			
ANR	7667887	Identifier	rsplen		7667642	0					
ANR	7667888	PrimaryExpression	4		7667642	1					
ANR	7667889	BreakStatement	break ;	109:8:1362:1367	7667642	16	True				
ANR	7667890	Label	case sd_r6 :	113:4:1376:1386	7667642	17	True				
ANR	7667891	Identifier	sd_r6		7667642	0					
ANR	7667892	ExpressionStatement	"sd_response_r6_make ( sd , response )"	115:8:1397:1430	7667642	18	True				
ANR	7667893	CallExpression	"sd_response_r6_make ( sd , response )"		7667642	0					
ANR	7667894	Callee	sd_response_r6_make		7667642	0					
ANR	7667895	Identifier	sd_response_r6_make		7667642	0					
ANR	7667896	ArgumentList	sd		7667642	1					
ANR	7667897	Argument	sd		7667642	0					
ANR	7667898	Identifier	sd		7667642	0					
ANR	7667899	Argument	response		7667642	1					
ANR	7667900	Identifier	response		7667642	0					
ANR	7667901	ExpressionStatement	rsplen = 4	117:8:1441:1451	7667642	19	True				
ANR	7667902	AssignmentExpression	rsplen = 4		7667642	0		=			
ANR	7667903	Identifier	rsplen		7667642	0					
ANR	7667904	PrimaryExpression	4		7667642	1					
ANR	7667905	BreakStatement	break ;	119:8:1462:1467	7667642	20	True				
ANR	7667906	Label	case sd_r7 :	123:4:1476:1486	7667642	21	True				
ANR	7667907	Identifier	sd_r7		7667642	0					
ANR	7667908	ExpressionStatement	"sd_response_r7_make ( sd , response )"	125:8:1497:1530	7667642	22	True				
ANR	7667909	CallExpression	"sd_response_r7_make ( sd , response )"		7667642	0					
ANR	7667910	Callee	sd_response_r7_make		7667642	0					
ANR	7667911	Identifier	sd_response_r7_make		7667642	0					
ANR	7667912	ArgumentList	sd		7667642	1					
ANR	7667913	Argument	sd		7667642	0					
ANR	7667914	Identifier	sd		7667642	0					
ANR	7667915	Argument	response		7667642	1					
ANR	7667916	Identifier	response		7667642	0					
ANR	7667917	ExpressionStatement	rsplen = 4	127:8:1541:1551	7667642	23	True				
ANR	7667918	AssignmentExpression	rsplen = 4		7667642	0		=			
ANR	7667919	Identifier	rsplen		7667642	0					
ANR	7667920	PrimaryExpression	4		7667642	1					
ANR	7667921	BreakStatement	break ;	129:8:1562:1567	7667642	24	True				
ANR	7667922	Label	case sd_r0 :	133:4:1576:1586	7667642	25	True				
ANR	7667923	Identifier	sd_r0		7667642	0					
ANR	7667924	Label	default :	135:4:1593:1600	7667642	26	True				
ANR	7667925	Identifier	default		7667642	0					
ANR	7667926	ExpressionStatement	rsplen = 0	137:8:1611:1621	7667642	27	True				
ANR	7667927	AssignmentExpression	rsplen = 0		7667642	0		=			
ANR	7667928	Identifier	rsplen		7667642	0					
ANR	7667929	PrimaryExpression	0		7667642	1					
ANR	7667930	BreakStatement	break ;	139:8:1632:1637	7667642	28	True				
ANR	7667931	IfStatement	if ( sd -> card_status & ILLEGAL_COMMAND )		7667642	11					
ANR	7667932	Condition	sd -> card_status & ILLEGAL_COMMAND	145:8:1657:1689	7667642	0	True				
ANR	7667933	BitAndExpression	sd -> card_status & ILLEGAL_COMMAND		7667642	0		&			
ANR	7667934	PtrMemberAccess	sd -> card_status		7667642	0					
ANR	7667935	Identifier	sd		7667642	0					
ANR	7667936	Identifier	card_status		7667642	1					
ANR	7667937	Identifier	ILLEGAL_COMMAND		7667642	1					
ANR	7667938	ExpressionStatement	rsplen = 0	147:8:1701:1711	7667642	1	True				
ANR	7667939	AssignmentExpression	rsplen = 0		7667642	0		=			
ANR	7667940	Identifier	rsplen		7667642	0					
ANR	7667941	PrimaryExpression	0		7667642	1					
ANR	7667942	IfStatement	if ( rsplen )		7667642	12					
ANR	7667943	Condition	rsplen	153:8:1741:1746	7667642	0	True				
ANR	7667944	Identifier	rsplen		7667642	0					
ANR	7667945	CompoundStatement		153:8:1674:1679	7667642	1					
ANR	7667946	IdentifierDeclStatement	int i ;	155:8:1760:1765	7667642	0	True				
ANR	7667947	IdentifierDecl	i		7667642	0					
ANR	7667948	IdentifierDeclType	int		7667642	0					
ANR	7667949	Identifier	i		7667642	1					
ANR	7667950	ExpressionStatement	"DPRINTF ( ""Response:"" )"	157:8:1776:1796	7667642	1	True				
ANR	7667951	CallExpression	"DPRINTF ( ""Response:"" )"		7667642	0					
ANR	7667952	Callee	DPRINTF		7667642	0					
ANR	7667953	Identifier	DPRINTF		7667642	0					
ANR	7667954	ArgumentList	"""Response:"""		7667642	1					
ANR	7667955	Argument	"""Response:"""		7667642	0					
ANR	7667956	PrimaryExpression	"""Response:"""		7667642	0					
ANR	7667957	ForStatement	for ( i = 0 ; i < rsplen ; i ++ )		7667642	2					
ANR	7667958	ForInit	i = 0 ;	159:13:1812:1817	7667642	0	True				
ANR	7667959	AssignmentExpression	i = 0		7667642	0		=			
ANR	7667960	Identifier	i		7667642	0					
ANR	7667961	PrimaryExpression	0		7667642	1					
ANR	7667962	Condition	i < rsplen	159:20:1819:1828	7667642	1	True				
ANR	7667963	RelationalExpression	i < rsplen		7667642	0		<			
ANR	7667964	Identifier	i		7667642	0					
ANR	7667965	Identifier	rsplen		7667642	1					
ANR	7667966	PostIncDecOperationExpression	i ++	159:32:1831:1833	7667642	2	True				
ANR	7667967	Identifier	i		7667642	0					
ANR	7667968	IncDec	++		7667642	1					
ANR	7667969	ExpressionStatement	"printf ( "" %02x"" , response [ i ] )"	161:12:1849:1877	7667642	3	True				
ANR	7667970	CallExpression	"printf ( "" %02x"" , response [ i ] )"		7667642	0					
ANR	7667971	Callee	printf		7667642	0					
ANR	7667972	Identifier	printf		7667642	0					
ANR	7667973	ArgumentList	""" %02x"""		7667642	1					
ANR	7667974	Argument	""" %02x"""		7667642	0					
ANR	7667975	PrimaryExpression	""" %02x"""		7667642	0					
ANR	7667976	Argument	response [ i ]		7667642	1					
ANR	7667977	ArrayIndexing	response [ i ]		7667642	0					
ANR	7667978	Identifier	response		7667642	0					
ANR	7667979	Identifier	i		7667642	1					
ANR	7667980	ExpressionStatement	"printf ( "" state %d\\n"" , sd -> state )"	163:8:1888:1920	7667642	3	True				
ANR	7667981	CallExpression	"printf ( "" state %d\\n"" , sd -> state )"		7667642	0					
ANR	7667982	Callee	printf		7667642	0					
ANR	7667983	Identifier	printf		7667642	0					
ANR	7667984	ArgumentList	""" state %d\\n"""		7667642	1					
ANR	7667985	Argument	""" state %d\\n"""		7667642	0					
ANR	7667986	PrimaryExpression	""" state %d\\n"""		7667642	0					
ANR	7667987	Argument	sd -> state		7667642	1					
ANR	7667988	PtrMemberAccess	sd -> state		7667642	0					
ANR	7667989	Identifier	sd		7667642	0					
ANR	7667990	Identifier	state		7667642	1					
ANR	7667991	ElseStatement	else		7667642	0					
ANR	7667992	CompoundStatement		163:11:1848:1848	7667642	0					
ANR	7667993	ExpressionStatement	"DPRINTF ( ""No response %d\\n"" , sd -> state )"	167:8:1945:1983	7667642	0	True				
ANR	7667994	CallExpression	"DPRINTF ( ""No response %d\\n"" , sd -> state )"		7667642	0					
ANR	7667995	Callee	DPRINTF		7667642	0					
ANR	7667996	Identifier	DPRINTF		7667642	0					
ANR	7667997	ArgumentList	"""No response %d\\n"""		7667642	1					
ANR	7667998	Argument	"""No response %d\\n"""		7667642	0					
ANR	7667999	PrimaryExpression	"""No response %d\\n"""		7667642	0					
ANR	7668000	Argument	sd -> state		7667642	1					
ANR	7668001	PtrMemberAccess	sd -> state		7667642	0					
ANR	7668002	Identifier	sd		7667642	0					
ANR	7668003	Identifier	state		7667642	1					
ANR	7668004	ReturnStatement	return rsplen ;	175:4:2007:2020	7667642	13	True				
ANR	7668005	Identifier	rsplen		7667642	0					
ANR	7668006	ReturnType	int		7667642	1					
ANR	7668007	Identifier	sd_do_command		7667642	2					
ANR	7668008	ParameterList	"SDState * sd , SDRequest * req , uint8_t * response"		7667642	3					
ANR	7668009	Parameter	SDState * sd	1:18:18:28	7667642	0	True				
ANR	7668010	ParameterType	SDState *		7667642	0					
ANR	7668011	Identifier	sd		7667642	1					
ANR	7668012	Parameter	SDRequest * req	1:31:31:44	7667642	1	True				
ANR	7668013	ParameterType	SDRequest *		7667642	0					
ANR	7668014	Identifier	req		7667642	1					
ANR	7668015	Parameter	uint8_t * response	3:18:66:82	7667642	2	True				
ANR	7668016	ParameterType	uint8_t *		7667642	0					
ANR	7668017	Identifier	response		7667642	1					
ANR	7668018	CFGEntryNode	ENTRY		7667642		True				
ANR	7668019	CFGExitNode	EXIT		7667642		True				
ANR	7668020	Symbol	sd -> cid		7667642						
ANR	7668021	Symbol	CARD_IS_LOCKED		7667642						
ANR	7668022	Symbol	bdrv_is_inserted		7667642						
ANR	7668023	Symbol	* req		7667642						
ANR	7668024	Symbol	sd -> current_cmd		7667642						
ANR	7668025	Symbol	sd -> csd		7667642						
ANR	7668026	Symbol	APP_CMD		7667642						
ANR	7668027	Symbol	sd		7667642						
ANR	7668028	Symbol	rtype		7667642						
ANR	7668029	Symbol	sd -> bdrv		7667642						
ANR	7668030	Symbol	* sd		7667642						
ANR	7668031	Symbol	sd -> card_status		7667642						
ANR	7668032	Symbol	sd_app_command		7667642						
ANR	7668033	Symbol	ILLEGAL_COMMAND		7667642						
ANR	7668034	Symbol	sd_normal_command		7667642						
ANR	7668035	Symbol	req		7667642						
ANR	7668036	Symbol	* response		7667642						
ANR	7668037	Symbol	sd -> state		7667642						
ANR	7668038	Symbol	cmd_valid_while_locked		7667642						
ANR	7668039	Symbol	last_status		7667642						
ANR	7668040	Symbol	req -> cmd		7667642						
ANR	7668041	Symbol	i		7667642						
ANR	7668042	Symbol	sd_req_crc_validate		7667642						
ANR	7668043	Symbol	~COM_CRC_ERROR		7667642						
ANR	7668044	Symbol	stderr		7667642						
ANR	7668045	Symbol	~CARD_STATUS_B		7667642						
ANR	7668046	Symbol	* i		7667642						
ANR	7668047	Symbol	response		7667642						
ANR	7668048	Symbol	rsplen		7667642						
ANR	7668049	Symbol	sd -> enable		7667642						
ANR	7668050	Symbol	~APP_CMD		7667642						
