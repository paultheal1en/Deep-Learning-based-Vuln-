command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1034793	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bink_decode_plane_01_0.c								
ANR	1034794	Function	bink_decode_plane	1:0:0:9427							
ANR	1034795	FunctionDef	"bink_decode_plane (BinkContext * c , AVFrame * frame , BitstreamContext * bc , int plane_idx , int is_chroma)"		1034794	0					
ANR	1034796	CompoundStatement		5:0:144:9427	1034794	0					
ANR	1034797	IdentifierDeclStatement	"int blk , ret ;"	7:4:151:163	1034794	0	True				
ANR	1034798	IdentifierDecl	blk		1034794	0					
ANR	1034799	IdentifierDeclType	int		1034794	0					
ANR	1034800	Identifier	blk		1034794	1					
ANR	1034801	IdentifierDecl	ret		1034794	1					
ANR	1034802	IdentifierDeclType	int		1034794	0					
ANR	1034803	Identifier	ret		1034794	1					
ANR	1034804	IdentifierDeclStatement	"int i , j , bx , by ;"	9:4:170:186	1034794	1	True				
ANR	1034805	IdentifierDecl	i		1034794	0					
ANR	1034806	IdentifierDeclType	int		1034794	0					
ANR	1034807	Identifier	i		1034794	1					
ANR	1034808	IdentifierDecl	j		1034794	1					
ANR	1034809	IdentifierDeclType	int		1034794	0					
ANR	1034810	Identifier	j		1034794	1					
ANR	1034811	IdentifierDecl	bx		1034794	2					
ANR	1034812	IdentifierDeclType	int		1034794	0					
ANR	1034813	Identifier	bx		1034794	1					
ANR	1034814	IdentifierDecl	by		1034794	3					
ANR	1034815	IdentifierDeclType	int		1034794	0					
ANR	1034816	Identifier	by		1034794	1					
ANR	1034817	IdentifierDeclStatement	"uint8_t * dst , * prev , * ref_start , * ref_end ;"	11:4:193:234	1034794	2	True				
ANR	1034818	IdentifierDecl	* dst		1034794	0					
ANR	1034819	IdentifierDeclType	uint8_t *		1034794	0					
ANR	1034820	Identifier	dst		1034794	1					
ANR	1034821	IdentifierDecl	* prev		1034794	1					
ANR	1034822	IdentifierDeclType	uint8_t *		1034794	0					
ANR	1034823	Identifier	prev		1034794	1					
ANR	1034824	IdentifierDecl	* ref_start		1034794	2					
ANR	1034825	IdentifierDeclType	uint8_t *		1034794	0					
ANR	1034826	Identifier	ref_start		1034794	1					
ANR	1034827	IdentifierDecl	* ref_end		1034794	3					
ANR	1034828	IdentifierDeclType	uint8_t *		1034794	0					
ANR	1034829	Identifier	ref_end		1034794	1					
ANR	1034830	IdentifierDeclStatement	"int v , col [ 2 ] ;"	13:4:241:254	1034794	3	True				
ANR	1034831	IdentifierDecl	v		1034794	0					
ANR	1034832	IdentifierDeclType	int		1034794	0					
ANR	1034833	Identifier	v		1034794	1					
ANR	1034834	IdentifierDecl	col [ 2 ]		1034794	1					
ANR	1034835	IdentifierDeclType	int [ 2 ]		1034794	0					
ANR	1034836	Identifier	col		1034794	1					
ANR	1034837	PrimaryExpression	2		1034794	2					
ANR	1034838	IdentifierDeclStatement	const uint8_t * scan ;	15:4:261:280	1034794	4	True				
ANR	1034839	IdentifierDecl	* scan		1034794	0					
ANR	1034840	IdentifierDeclType	const uint8_t *		1034794	0					
ANR	1034841	Identifier	scan		1034794	1					
ANR	1034842	Statement	LOCAL_ALIGNED_16	17:4:287:302	1034794	5	True				
ANR	1034843	Statement	(	17:20:303:303	1034794	6	True				
ANR	1034844	Statement	int16_t	17:21:304:310	1034794	7	True				
ANR	1034845	Statement	","	17:28:311:311	1034794	8	True				
ANR	1034846	Statement	block	17:30:313:317	1034794	9	True				
ANR	1034847	Statement	","	17:35:318:318	1034794	10	True				
ANR	1034848	Statement	[	17:37:320:320	1034794	11	True				
ANR	1034849	Statement	64	17:38:321:322	1034794	12	True				
ANR	1034850	Statement	]	17:40:323:323	1034794	13	True				
ANR	1034851	Statement	)	17:41:324:324	1034794	14	True				
ANR	1034852	ExpressionStatement		17:42:325:325	1034794	15	True				
ANR	1034853	Statement	LOCAL_ALIGNED_16	19:4:332:347	1034794	16	True				
ANR	1034854	Statement	(	19:20:348:348	1034794	17	True				
ANR	1034855	Statement	uint8_t	19:21:349:355	1034794	18	True				
ANR	1034856	Statement	","	19:28:356:356	1034794	19	True				
ANR	1034857	Statement	ublock	19:30:358:363	1034794	20	True				
ANR	1034858	Statement	","	19:36:364:364	1034794	21	True				
ANR	1034859	Statement	[	19:38:366:366	1034794	22	True				
ANR	1034860	Statement	64	19:39:367:368	1034794	23	True				
ANR	1034861	Statement	]	19:41:369:369	1034794	24	True				
ANR	1034862	Statement	)	19:42:370:370	1034794	25	True				
ANR	1034863	ExpressionStatement		19:43:371:371	1034794	26	True				
ANR	1034864	Statement	LOCAL_ALIGNED_16	21:4:378:393	1034794	27	True				
ANR	1034865	Statement	(	21:20:394:394	1034794	28	True				
ANR	1034866	Statement	int32_t	21:21:395:401	1034794	29	True				
ANR	1034867	Statement	","	21:28:402:402	1034794	30	True				
ANR	1034868	Statement	dctblock	21:30:404:411	1034794	31	True				
ANR	1034869	Statement	","	21:38:412:412	1034794	32	True				
ANR	1034870	Statement	[	21:40:414:414	1034794	33	True				
ANR	1034871	Statement	64	21:41:415:416	1034794	34	True				
ANR	1034872	Statement	]	21:43:417:417	1034794	35	True				
ANR	1034873	Statement	)	21:44:418:418	1034794	36	True				
ANR	1034874	ExpressionStatement		21:45:419:419	1034794	37	True				
ANR	1034875	IdentifierDeclStatement	int coordmap [ 64 ] ;	23:4:426:442	1034794	38	True				
ANR	1034876	IdentifierDecl	coordmap [ 64 ]		1034794	0					
ANR	1034877	IdentifierDeclType	int [ 64 ]		1034794	0					
ANR	1034878	Identifier	coordmap		1034794	1					
ANR	1034879	PrimaryExpression	64		1034794	2					
ANR	1034880	IdentifierDeclStatement	const int stride = frame -> linesize [ plane_idx ] ;	27:4:451:496	1034794	39	True				
ANR	1034881	IdentifierDecl	stride = frame -> linesize [ plane_idx ]		1034794	0					
ANR	1034882	IdentifierDeclType	const int		1034794	0					
ANR	1034883	Identifier	stride		1034794	1					
ANR	1034884	AssignmentExpression	stride = frame -> linesize [ plane_idx ]		1034794	2		=			
ANR	1034885	Identifier	stride		1034794	0					
ANR	1034886	ArrayIndexing	frame -> linesize [ plane_idx ]		1034794	1					
ANR	1034887	PtrMemberAccess	frame -> linesize		1034794	0					
ANR	1034888	Identifier	frame		1034794	0					
ANR	1034889	Identifier	linesize		1034794	1					
ANR	1034890	Identifier	plane_idx		1034794	1					
ANR	1034891	IdentifierDeclStatement	int bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3 ;	29:4:503:582	1034794	40	True				
ANR	1034892	IdentifierDecl	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1034794	0					
ANR	1034893	IdentifierDeclType	int		1034794	0					
ANR	1034894	Identifier	bw		1034794	1					
ANR	1034895	AssignmentExpression	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1034794	2		=			
ANR	1034896	Identifier	bw		1034794	0					
ANR	1034897	ConditionalExpression	is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1034794	1					
ANR	1034898	Condition	is_chroma		1034794	0					
ANR	1034899	Identifier	is_chroma		1034794	0					
ANR	1034900	ShiftExpression	( c -> avctx -> width + 15 ) >> 4		1034794	1		>>			
ANR	1034901	AdditiveExpression	c -> avctx -> width + 15		1034794	0		+			
ANR	1034902	PtrMemberAccess	c -> avctx -> width		1034794	0					
ANR	1034903	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1034904	Identifier	c		1034794	0					
ANR	1034905	Identifier	avctx		1034794	1					
ANR	1034906	Identifier	width		1034794	1					
ANR	1034907	PrimaryExpression	15		1034794	1					
ANR	1034908	PrimaryExpression	4		1034794	1					
ANR	1034909	ShiftExpression	( c -> avctx -> width + 7 ) >> 3		1034794	2		>>			
ANR	1034910	AdditiveExpression	c -> avctx -> width + 7		1034794	0		+			
ANR	1034911	PtrMemberAccess	c -> avctx -> width		1034794	0					
ANR	1034912	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1034913	Identifier	c		1034794	0					
ANR	1034914	Identifier	avctx		1034794	1					
ANR	1034915	Identifier	width		1034794	1					
ANR	1034916	PrimaryExpression	7		1034794	1					
ANR	1034917	PrimaryExpression	3		1034794	1					
ANR	1034918	IdentifierDeclStatement	int bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3 ;	31:4:589:668	1034794	41	True				
ANR	1034919	IdentifierDecl	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1034794	0					
ANR	1034920	IdentifierDeclType	int		1034794	0					
ANR	1034921	Identifier	bh		1034794	1					
ANR	1034922	AssignmentExpression	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1034794	2		=			
ANR	1034923	Identifier	bh		1034794	0					
ANR	1034924	ConditionalExpression	is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1034794	1					
ANR	1034925	Condition	is_chroma		1034794	0					
ANR	1034926	Identifier	is_chroma		1034794	0					
ANR	1034927	ShiftExpression	( c -> avctx -> height + 15 ) >> 4		1034794	1		>>			
ANR	1034928	AdditiveExpression	c -> avctx -> height + 15		1034794	0		+			
ANR	1034929	PtrMemberAccess	c -> avctx -> height		1034794	0					
ANR	1034930	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1034931	Identifier	c		1034794	0					
ANR	1034932	Identifier	avctx		1034794	1					
ANR	1034933	Identifier	height		1034794	1					
ANR	1034934	PrimaryExpression	15		1034794	1					
ANR	1034935	PrimaryExpression	4		1034794	1					
ANR	1034936	ShiftExpression	( c -> avctx -> height + 7 ) >> 3		1034794	2		>>			
ANR	1034937	AdditiveExpression	c -> avctx -> height + 7		1034794	0		+			
ANR	1034938	PtrMemberAccess	c -> avctx -> height		1034794	0					
ANR	1034939	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1034940	Identifier	c		1034794	0					
ANR	1034941	Identifier	avctx		1034794	1					
ANR	1034942	Identifier	height		1034794	1					
ANR	1034943	PrimaryExpression	7		1034794	1					
ANR	1034944	PrimaryExpression	3		1034794	1					
ANR	1034945	IdentifierDeclStatement	int width = c -> avctx -> width >> is_chroma ;	33:4:675:715	1034794	42	True				
ANR	1034946	IdentifierDecl	width = c -> avctx -> width >> is_chroma		1034794	0					
ANR	1034947	IdentifierDeclType	int		1034794	0					
ANR	1034948	Identifier	width		1034794	1					
ANR	1034949	AssignmentExpression	width = c -> avctx -> width >> is_chroma		1034794	2		=			
ANR	1034950	Identifier	width		1034794	0					
ANR	1034951	ShiftExpression	c -> avctx -> width >> is_chroma		1034794	1		>>			
ANR	1034952	PtrMemberAccess	c -> avctx -> width		1034794	0					
ANR	1034953	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1034954	Identifier	c		1034794	0					
ANR	1034955	Identifier	avctx		1034794	1					
ANR	1034956	Identifier	width		1034794	1					
ANR	1034957	Identifier	is_chroma		1034794	1					
ANR	1034958	ExpressionStatement	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"	37:4:724:760	1034794	43	True				
ANR	1034959	CallExpression	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"		1034794	0					
ANR	1034960	Callee	init_lengths		1034794	0					
ANR	1034961	Identifier	init_lengths		1034794	0					
ANR	1034962	ArgumentList	c		1034794	1					
ANR	1034963	Argument	c		1034794	0					
ANR	1034964	Identifier	c		1034794	0					
ANR	1034965	Argument	"FFMAX ( width , 8 )"		1034794	1					
ANR	1034966	CallExpression	"FFMAX ( width , 8 )"		1034794	0					
ANR	1034967	Callee	FFMAX		1034794	0					
ANR	1034968	Identifier	FFMAX		1034794	0					
ANR	1034969	ArgumentList	width		1034794	1					
ANR	1034970	Argument	width		1034794	0					
ANR	1034971	Identifier	width		1034794	0					
ANR	1034972	Argument	8		1034794	1					
ANR	1034973	PrimaryExpression	8		1034794	0					
ANR	1034974	Argument	bw		1034794	2					
ANR	1034975	Identifier	bw		1034794	0					
ANR	1034976	ForStatement	for ( i = 0 ; i < BINK_NB_SRC ; i ++ )		1034794	44					
ANR	1034977	ForInit	i = 0 ;	39:9:772:777	1034794	0	True				
ANR	1034978	AssignmentExpression	i = 0		1034794	0		=			
ANR	1034979	Identifier	i		1034794	0					
ANR	1034980	PrimaryExpression	0		1034794	1					
ANR	1034981	Condition	i < BINK_NB_SRC	39:16:779:793	1034794	1	True				
ANR	1034982	RelationalExpression	i < BINK_NB_SRC		1034794	0		<			
ANR	1034983	Identifier	i		1034794	0					
ANR	1034984	Identifier	BINK_NB_SRC		1034794	1					
ANR	1034985	PostIncDecOperationExpression	i ++	39:33:796:798	1034794	2	True				
ANR	1034986	Identifier	i		1034794	0					
ANR	1034987	IncDec	++		1034794	1					
ANR	1034988	ExpressionStatement	"read_bundle ( bc , c , i )"	41:8:810:831	1034794	3	True				
ANR	1034989	CallExpression	"read_bundle ( bc , c , i )"		1034794	0					
ANR	1034990	Callee	read_bundle		1034794	0					
ANR	1034991	Identifier	read_bundle		1034794	0					
ANR	1034992	ArgumentList	bc		1034794	1					
ANR	1034993	Argument	bc		1034794	0					
ANR	1034994	Identifier	bc		1034794	0					
ANR	1034995	Argument	c		1034794	1					
ANR	1034996	Identifier	c		1034794	0					
ANR	1034997	Argument	i		1034794	2					
ANR	1034998	Identifier	i		1034794	0					
ANR	1034999	ExpressionStatement	ref_start = c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]	45:4:840:970	1034794	45	True				
ANR	1035000	AssignmentExpression	ref_start = c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1034794	0		=			
ANR	1035001	Identifier	ref_start		1034794	0					
ANR	1035002	ConditionalExpression	c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1034794	1					
ANR	1035003	Condition	c -> last -> data [ plane_idx ]		1034794	0					
ANR	1035004	ArrayIndexing	c -> last -> data [ plane_idx ]		1034794	0					
ANR	1035005	PtrMemberAccess	c -> last -> data		1034794	0					
ANR	1035006	PtrMemberAccess	c -> last		1034794	0					
ANR	1035007	Identifier	c		1034794	0					
ANR	1035008	Identifier	last		1034794	1					
ANR	1035009	Identifier	data		1034794	1					
ANR	1035010	Identifier	plane_idx		1034794	1					
ANR	1035011	ArrayIndexing	c -> last -> data [ plane_idx ]		1034794	1					
ANR	1035012	PtrMemberAccess	c -> last -> data		1034794	0					
ANR	1035013	PtrMemberAccess	c -> last		1034794	0					
ANR	1035014	Identifier	c		1034794	0					
ANR	1035015	Identifier	last		1034794	1					
ANR	1035016	Identifier	data		1034794	1					
ANR	1035017	Identifier	plane_idx		1034794	1					
ANR	1035018	ArrayIndexing	frame -> data [ plane_idx ]		1034794	2					
ANR	1035019	PtrMemberAccess	frame -> data		1034794	0					
ANR	1035020	Identifier	frame		1034794	0					
ANR	1035021	Identifier	data		1034794	1					
ANR	1035022	Identifier	plane_idx		1034794	1					
ANR	1035023	ExpressionStatement	ref_end = ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8	49:4:977:1072	1034794	46	True				
ANR	1035024	AssignmentExpression	ref_end = ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1034794	0		=			
ANR	1035025	Identifier	ref_end		1034794	0					
ANR	1035026	AdditiveExpression	ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1034794	1		+			
ANR	1035027	Identifier	ref_start		1034794	0					
ANR	1035028	MultiplicativeExpression	( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1034794	1		*			
ANR	1035029	AdditiveExpression	bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1034794	0		-			
ANR	1035030	Identifier	bw		1034794	0					
ANR	1035031	AdditiveExpression	1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1034794	1		+			
ANR	1035032	PrimaryExpression	1		1034794	0					
ANR	1035033	MultiplicativeExpression	c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1034794	1		*			
ANR	1035034	ArrayIndexing	c -> last -> linesize [ plane_idx ]		1034794	0					
ANR	1035035	PtrMemberAccess	c -> last -> linesize		1034794	0					
ANR	1035036	PtrMemberAccess	c -> last		1034794	0					
ANR	1035037	Identifier	c		1034794	0					
ANR	1035038	Identifier	last		1034794	1					
ANR	1035039	Identifier	linesize		1034794	1					
ANR	1035040	Identifier	plane_idx		1034794	1					
ANR	1035041	AdditiveExpression	bh - 1		1034794	1		-			
ANR	1035042	Identifier	bh		1034794	0					
ANR	1035043	PrimaryExpression	1		1034794	1					
ANR	1035044	PrimaryExpression	8		1034794	1					
ANR	1035045	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1034794	47					
ANR	1035046	ForInit	i = 0 ;	55:9:1086:1091	1034794	0	True				
ANR	1035047	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035048	Identifier	i		1034794	0					
ANR	1035049	PrimaryExpression	0		1034794	1					
ANR	1035050	Condition	i < 64	55:16:1093:1098	1034794	1	True				
ANR	1035051	RelationalExpression	i < 64		1034794	0		<			
ANR	1035052	Identifier	i		1034794	0					
ANR	1035053	PrimaryExpression	64		1034794	1					
ANR	1035054	PostIncDecOperationExpression	i ++	55:24:1101:1103	1034794	2	True				
ANR	1035055	Identifier	i		1034794	0					
ANR	1035056	IncDec	++		1034794	1					
ANR	1035057	ExpressionStatement	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride	57:8:1115:1156	1034794	3	True				
ANR	1035058	AssignmentExpression	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride		1034794	0		=			
ANR	1035059	ArrayIndexing	coordmap [ i ]		1034794	0					
ANR	1035060	Identifier	coordmap		1034794	0					
ANR	1035061	Identifier	i		1034794	1					
ANR	1035062	AdditiveExpression	( i & 7 ) + ( i >> 3 ) * stride		1034794	1		+			
ANR	1035063	BitAndExpression	i & 7		1034794	0		&			
ANR	1035064	Identifier	i		1034794	0					
ANR	1035065	PrimaryExpression	7		1034794	1					
ANR	1035066	MultiplicativeExpression	( i >> 3 ) * stride		1034794	1		*			
ANR	1035067	ShiftExpression	i >> 3		1034794	0		>>			
ANR	1035068	Identifier	i		1034794	0					
ANR	1035069	PrimaryExpression	3		1034794	1					
ANR	1035070	Identifier	stride		1034794	1					
ANR	1035071	ForStatement	for ( by = 0 ; by < bh ; by ++ )		1034794	48					
ANR	1035072	ForInit	by = 0 ;	61:9:1170:1176	1034794	0	True				
ANR	1035073	AssignmentExpression	by = 0		1034794	0		=			
ANR	1035074	Identifier	by		1034794	0					
ANR	1035075	PrimaryExpression	0		1034794	1					
ANR	1035076	Condition	by < bh	61:17:1178:1184	1034794	1	True				
ANR	1035077	RelationalExpression	by < bh		1034794	0		<			
ANR	1035078	Identifier	by		1034794	0					
ANR	1035079	Identifier	bh		1034794	1					
ANR	1035080	PostIncDecOperationExpression	by ++	61:26:1187:1190	1034794	2	True				
ANR	1035081	Identifier	by		1034794	0					
ANR	1035082	IncDec	++		1034794	1					
ANR	1035083	CompoundStatement		57:32:1048:1048	1034794	3					
ANR	1035084	IfStatement	"if ( ( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0 )"		1034794	0					
ANR	1035085	Condition	"( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0"	63:12:1208:1283	1034794	0	True				
ANR	1035086	RelationalExpression	"( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0"		1034794	0		<			
ANR	1035087	AssignmentExpression	"ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] )"		1034794	0		=			
ANR	1035088	Identifier	ret		1034794	0					
ANR	1035089	CallExpression	"read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] )"		1034794	1					
ANR	1035090	Callee	read_block_types		1034794	0					
ANR	1035091	Identifier	read_block_types		1034794	0					
ANR	1035092	ArgumentList	c -> avctx		1034794	1					
ANR	1035093	Argument	c -> avctx		1034794	0					
ANR	1035094	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035095	Identifier	c		1034794	0					
ANR	1035096	Identifier	avctx		1034794	1					
ANR	1035097	Argument	bc		1034794	1					
ANR	1035098	Identifier	bc		1034794	0					
ANR	1035099	Argument	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1034794	2					
ANR	1035100	UnaryOperationExpression	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1034794	0					
ANR	1035101	UnaryOperator	&		1034794	0					
ANR	1035102	ArrayIndexing	c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1034794	1					
ANR	1035103	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035104	Identifier	c		1034794	0					
ANR	1035105	Identifier	bundle		1034794	1					
ANR	1035106	Identifier	BINK_SRC_BLOCK_TYPES		1034794	1					
ANR	1035107	PrimaryExpression	0		1034794	1					
ANR	1035108	ReturnStatement	return ret ;	65:12:1299:1309	1034794	1	True				
ANR	1035109	Identifier	ret		1034794	0					
ANR	1035110	IfStatement	"if ( ( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0 )"		1034794	1					
ANR	1035111	Condition	"( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0"	67:12:1324:1403	1034794	0	True				
ANR	1035112	RelationalExpression	"( ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0"		1034794	0		<			
ANR	1035113	AssignmentExpression	"ret = read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] )"		1034794	0		=			
ANR	1035114	Identifier	ret		1034794	0					
ANR	1035115	CallExpression	"read_block_types ( c -> avctx , bc , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] )"		1034794	1					
ANR	1035116	Callee	read_block_types		1034794	0					
ANR	1035117	Identifier	read_block_types		1034794	0					
ANR	1035118	ArgumentList	c -> avctx		1034794	1					
ANR	1035119	Argument	c -> avctx		1034794	0					
ANR	1035120	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035121	Identifier	c		1034794	0					
ANR	1035122	Identifier	avctx		1034794	1					
ANR	1035123	Argument	bc		1034794	1					
ANR	1035124	Identifier	bc		1034794	0					
ANR	1035125	Argument	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1034794	2					
ANR	1035126	UnaryOperationExpression	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1034794	0					
ANR	1035127	UnaryOperator	&		1034794	0					
ANR	1035128	ArrayIndexing	c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1034794	1					
ANR	1035129	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035130	Identifier	c		1034794	0					
ANR	1035131	Identifier	bundle		1034794	1					
ANR	1035132	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1034794	1					
ANR	1035133	PrimaryExpression	0		1034794	1					
ANR	1035134	ReturnStatement	return ret ;	69:12:1419:1429	1034794	1	True				
ANR	1035135	Identifier	ret		1034794	0					
ANR	1035136	IfStatement	"if ( ( ret = read_colors ( bc , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0 )"		1034794	2					
ANR	1035137	Condition	"( ret = read_colors ( bc , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0"	71:12:1444:1502	1034794	0	True				
ANR	1035138	RelationalExpression	"( ret = read_colors ( bc , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0"		1034794	0		<			
ANR	1035139	AssignmentExpression	"ret = read_colors ( bc , & c -> bundle [ BINK_SRC_COLORS ] , c )"		1034794	0		=			
ANR	1035140	Identifier	ret		1034794	0					
ANR	1035141	CallExpression	"read_colors ( bc , & c -> bundle [ BINK_SRC_COLORS ] , c )"		1034794	1					
ANR	1035142	Callee	read_colors		1034794	0					
ANR	1035143	Identifier	read_colors		1034794	0					
ANR	1035144	ArgumentList	bc		1034794	1					
ANR	1035145	Argument	bc		1034794	0					
ANR	1035146	Identifier	bc		1034794	0					
ANR	1035147	Argument	& c -> bundle [ BINK_SRC_COLORS ]		1034794	1					
ANR	1035148	UnaryOperationExpression	& c -> bundle [ BINK_SRC_COLORS ]		1034794	0					
ANR	1035149	UnaryOperator	&		1034794	0					
ANR	1035150	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1034794	1					
ANR	1035151	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035152	Identifier	c		1034794	0					
ANR	1035153	Identifier	bundle		1034794	1					
ANR	1035154	Identifier	BINK_SRC_COLORS		1034794	1					
ANR	1035155	Argument	c		1034794	2					
ANR	1035156	Identifier	c		1034794	0					
ANR	1035157	PrimaryExpression	0		1034794	1					
ANR	1035158	ReturnStatement	return ret ;	73:12:1518:1528	1034794	1	True				
ANR	1035159	Identifier	ret		1034794	0					
ANR	1035160	IfStatement	"if ( ( ret = read_patterns ( c -> avctx , bc , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0 )"		1034794	3					
ANR	1035161	Condition	"( ret = read_patterns ( c -> avctx , bc , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0"	75:12:1543:1611	1034794	0	True				
ANR	1035162	RelationalExpression	"( ret = read_patterns ( c -> avctx , bc , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0"		1034794	0		<			
ANR	1035163	AssignmentExpression	"ret = read_patterns ( c -> avctx , bc , & c -> bundle [ BINK_SRC_PATTERN ] )"		1034794	0		=			
ANR	1035164	Identifier	ret		1034794	0					
ANR	1035165	CallExpression	"read_patterns ( c -> avctx , bc , & c -> bundle [ BINK_SRC_PATTERN ] )"		1034794	1					
ANR	1035166	Callee	read_patterns		1034794	0					
ANR	1035167	Identifier	read_patterns		1034794	0					
ANR	1035168	ArgumentList	c -> avctx		1034794	1					
ANR	1035169	Argument	c -> avctx		1034794	0					
ANR	1035170	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035171	Identifier	c		1034794	0					
ANR	1035172	Identifier	avctx		1034794	1					
ANR	1035173	Argument	bc		1034794	1					
ANR	1035174	Identifier	bc		1034794	0					
ANR	1035175	Argument	& c -> bundle [ BINK_SRC_PATTERN ]		1034794	2					
ANR	1035176	UnaryOperationExpression	& c -> bundle [ BINK_SRC_PATTERN ]		1034794	0					
ANR	1035177	UnaryOperator	&		1034794	0					
ANR	1035178	ArrayIndexing	c -> bundle [ BINK_SRC_PATTERN ]		1034794	1					
ANR	1035179	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035180	Identifier	c		1034794	0					
ANR	1035181	Identifier	bundle		1034794	1					
ANR	1035182	Identifier	BINK_SRC_PATTERN		1034794	1					
ANR	1035183	PrimaryExpression	0		1034794	1					
ANR	1035184	ReturnStatement	return ret ;	77:12:1627:1637	1034794	1	True				
ANR	1035185	Identifier	ret		1034794	0					
ANR	1035186	IfStatement	"if ( ( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0 )"		1034794	4					
ANR	1035187	Condition	"( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0"	79:12:1652:1723	1034794	0	True				
ANR	1035188	RelationalExpression	"( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0"		1034794	0		<			
ANR	1035189	AssignmentExpression	"ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_X_OFF ] )"		1034794	0		=			
ANR	1035190	Identifier	ret		1034794	0					
ANR	1035191	CallExpression	"read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_X_OFF ] )"		1034794	1					
ANR	1035192	Callee	read_motion_values		1034794	0					
ANR	1035193	Identifier	read_motion_values		1034794	0					
ANR	1035194	ArgumentList	c -> avctx		1034794	1					
ANR	1035195	Argument	c -> avctx		1034794	0					
ANR	1035196	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035197	Identifier	c		1034794	0					
ANR	1035198	Identifier	avctx		1034794	1					
ANR	1035199	Argument	bc		1034794	1					
ANR	1035200	Identifier	bc		1034794	0					
ANR	1035201	Argument	& c -> bundle [ BINK_SRC_X_OFF ]		1034794	2					
ANR	1035202	UnaryOperationExpression	& c -> bundle [ BINK_SRC_X_OFF ]		1034794	0					
ANR	1035203	UnaryOperator	&		1034794	0					
ANR	1035204	ArrayIndexing	c -> bundle [ BINK_SRC_X_OFF ]		1034794	1					
ANR	1035205	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035206	Identifier	c		1034794	0					
ANR	1035207	Identifier	bundle		1034794	1					
ANR	1035208	Identifier	BINK_SRC_X_OFF		1034794	1					
ANR	1035209	PrimaryExpression	0		1034794	1					
ANR	1035210	ReturnStatement	return ret ;	81:12:1739:1749	1034794	1	True				
ANR	1035211	Identifier	ret		1034794	0					
ANR	1035212	IfStatement	"if ( ( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0 )"		1034794	5					
ANR	1035213	Condition	"( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0"	83:12:1764:1835	1034794	0	True				
ANR	1035214	RelationalExpression	"( ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0"		1034794	0		<			
ANR	1035215	AssignmentExpression	"ret = read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_Y_OFF ] )"		1034794	0		=			
ANR	1035216	Identifier	ret		1034794	0					
ANR	1035217	CallExpression	"read_motion_values ( c -> avctx , bc , & c -> bundle [ BINK_SRC_Y_OFF ] )"		1034794	1					
ANR	1035218	Callee	read_motion_values		1034794	0					
ANR	1035219	Identifier	read_motion_values		1034794	0					
ANR	1035220	ArgumentList	c -> avctx		1034794	1					
ANR	1035221	Argument	c -> avctx		1034794	0					
ANR	1035222	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035223	Identifier	c		1034794	0					
ANR	1035224	Identifier	avctx		1034794	1					
ANR	1035225	Argument	bc		1034794	1					
ANR	1035226	Identifier	bc		1034794	0					
ANR	1035227	Argument	& c -> bundle [ BINK_SRC_Y_OFF ]		1034794	2					
ANR	1035228	UnaryOperationExpression	& c -> bundle [ BINK_SRC_Y_OFF ]		1034794	0					
ANR	1035229	UnaryOperator	&		1034794	0					
ANR	1035230	ArrayIndexing	c -> bundle [ BINK_SRC_Y_OFF ]		1034794	1					
ANR	1035231	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035232	Identifier	c		1034794	0					
ANR	1035233	Identifier	bundle		1034794	1					
ANR	1035234	Identifier	BINK_SRC_Y_OFF		1034794	1					
ANR	1035235	PrimaryExpression	0		1034794	1					
ANR	1035236	ReturnStatement	return ret ;	85:12:1851:1861	1034794	1	True				
ANR	1035237	Identifier	ret		1034794	0					
ANR	1035238	IfStatement	"if ( ( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0 )"		1034794	6					
ANR	1035239	Condition	"( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0"	87:12:1876:1958	1034794	0	True				
ANR	1035240	RelationalExpression	"( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0"		1034794	0		<			
ANR	1035241	AssignmentExpression	"ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 )"		1034794	0		=			
ANR	1035242	Identifier	ret		1034794	0					
ANR	1035243	CallExpression	"read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 )"		1034794	1					
ANR	1035244	Callee	read_dcs		1034794	0					
ANR	1035245	Identifier	read_dcs		1034794	0					
ANR	1035246	ArgumentList	c -> avctx		1034794	1					
ANR	1035247	Argument	c -> avctx		1034794	0					
ANR	1035248	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035249	Identifier	c		1034794	0					
ANR	1035250	Identifier	avctx		1034794	1					
ANR	1035251	Argument	bc		1034794	1					
ANR	1035252	Identifier	bc		1034794	0					
ANR	1035253	Argument	& c -> bundle [ BINK_SRC_INTRA_DC ]		1034794	2					
ANR	1035254	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTRA_DC ]		1034794	0					
ANR	1035255	UnaryOperator	&		1034794	0					
ANR	1035256	ArrayIndexing	c -> bundle [ BINK_SRC_INTRA_DC ]		1034794	1					
ANR	1035257	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035258	Identifier	c		1034794	0					
ANR	1035259	Identifier	bundle		1034794	1					
ANR	1035260	Identifier	BINK_SRC_INTRA_DC		1034794	1					
ANR	1035261	Argument	DC_START_BITS		1034794	3					
ANR	1035262	Identifier	DC_START_BITS		1034794	0					
ANR	1035263	Argument	0		1034794	4					
ANR	1035264	PrimaryExpression	0		1034794	0					
ANR	1035265	PrimaryExpression	0		1034794	1					
ANR	1035266	ReturnStatement	return ret ;	89:12:1974:1984	1034794	1	True				
ANR	1035267	Identifier	ret		1034794	0					
ANR	1035268	IfStatement	"if ( ( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0 )"		1034794	7					
ANR	1035269	Condition	"( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0"	91:12:1999:2081	1034794	0	True				
ANR	1035270	RelationalExpression	"( ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0"		1034794	0		<			
ANR	1035271	AssignmentExpression	"ret = read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 )"		1034794	0		=			
ANR	1035272	Identifier	ret		1034794	0					
ANR	1035273	CallExpression	"read_dcs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 )"		1034794	1					
ANR	1035274	Callee	read_dcs		1034794	0					
ANR	1035275	Identifier	read_dcs		1034794	0					
ANR	1035276	ArgumentList	c -> avctx		1034794	1					
ANR	1035277	Argument	c -> avctx		1034794	0					
ANR	1035278	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035279	Identifier	c		1034794	0					
ANR	1035280	Identifier	avctx		1034794	1					
ANR	1035281	Argument	bc		1034794	1					
ANR	1035282	Identifier	bc		1034794	0					
ANR	1035283	Argument	& c -> bundle [ BINK_SRC_INTER_DC ]		1034794	2					
ANR	1035284	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTER_DC ]		1034794	0					
ANR	1035285	UnaryOperator	&		1034794	0					
ANR	1035286	ArrayIndexing	c -> bundle [ BINK_SRC_INTER_DC ]		1034794	1					
ANR	1035287	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035288	Identifier	c		1034794	0					
ANR	1035289	Identifier	bundle		1034794	1					
ANR	1035290	Identifier	BINK_SRC_INTER_DC		1034794	1					
ANR	1035291	Argument	DC_START_BITS		1034794	3					
ANR	1035292	Identifier	DC_START_BITS		1034794	0					
ANR	1035293	Argument	1		1034794	4					
ANR	1035294	PrimaryExpression	1		1034794	0					
ANR	1035295	PrimaryExpression	0		1034794	1					
ANR	1035296	ReturnStatement	return ret ;	93:12:2097:2107	1034794	1	True				
ANR	1035297	Identifier	ret		1034794	0					
ANR	1035298	IfStatement	"if ( ( ret = read_runs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0 )"		1034794	8					
ANR	1035299	Condition	"( ret = read_runs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0"	95:12:2122:2182	1034794	0	True				
ANR	1035300	RelationalExpression	"( ret = read_runs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0"		1034794	0		<			
ANR	1035301	AssignmentExpression	"ret = read_runs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_RUN ] )"		1034794	0		=			
ANR	1035302	Identifier	ret		1034794	0					
ANR	1035303	CallExpression	"read_runs ( c -> avctx , bc , & c -> bundle [ BINK_SRC_RUN ] )"		1034794	1					
ANR	1035304	Callee	read_runs		1034794	0					
ANR	1035305	Identifier	read_runs		1034794	0					
ANR	1035306	ArgumentList	c -> avctx		1034794	1					
ANR	1035307	Argument	c -> avctx		1034794	0					
ANR	1035308	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035309	Identifier	c		1034794	0					
ANR	1035310	Identifier	avctx		1034794	1					
ANR	1035311	Argument	bc		1034794	1					
ANR	1035312	Identifier	bc		1034794	0					
ANR	1035313	Argument	& c -> bundle [ BINK_SRC_RUN ]		1034794	2					
ANR	1035314	UnaryOperationExpression	& c -> bundle [ BINK_SRC_RUN ]		1034794	0					
ANR	1035315	UnaryOperator	&		1034794	0					
ANR	1035316	ArrayIndexing	c -> bundle [ BINK_SRC_RUN ]		1034794	1					
ANR	1035317	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1035318	Identifier	c		1034794	0					
ANR	1035319	Identifier	bundle		1034794	1					
ANR	1035320	Identifier	BINK_SRC_RUN		1034794	1					
ANR	1035321	PrimaryExpression	0		1034794	1					
ANR	1035322	ReturnStatement	return ret ;	97:12:2198:2208	1034794	1	True				
ANR	1035323	Identifier	ret		1034794	0					
ANR	1035324	IfStatement	if ( by == bh )		1034794	9					
ANR	1035325	Condition	by == bh	101:12:2225:2232	1034794	0	True				
ANR	1035326	EqualityExpression	by == bh		1034794	0		==			
ANR	1035327	Identifier	by		1034794	0					
ANR	1035328	Identifier	bh		1034794	1					
ANR	1035329	BreakStatement	break ;	103:12:2248:2253	1034794	1	True				
ANR	1035330	ExpressionStatement	dst = frame -> data [ plane_idx ] + 8 * by * stride	105:8:2264:2308	1034794	10	True				
ANR	1035331	AssignmentExpression	dst = frame -> data [ plane_idx ] + 8 * by * stride		1034794	0		=			
ANR	1035332	Identifier	dst		1034794	0					
ANR	1035333	AdditiveExpression	frame -> data [ plane_idx ] + 8 * by * stride		1034794	1		+			
ANR	1035334	ArrayIndexing	frame -> data [ plane_idx ]		1034794	0					
ANR	1035335	PtrMemberAccess	frame -> data		1034794	0					
ANR	1035336	Identifier	frame		1034794	0					
ANR	1035337	Identifier	data		1034794	1					
ANR	1035338	Identifier	plane_idx		1034794	1					
ANR	1035339	MultiplicativeExpression	8 * by * stride		1034794	1		*			
ANR	1035340	PrimaryExpression	8		1034794	0					
ANR	1035341	MultiplicativeExpression	by * stride		1034794	1		*			
ANR	1035342	Identifier	by		1034794	0					
ANR	1035343	Identifier	stride		1034794	1					
ANR	1035344	ExpressionStatement	prev = ( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride	107:8:2319:2460	1034794	11	True				
ANR	1035345	AssignmentExpression	prev = ( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride		1034794	0		=			
ANR	1035346	Identifier	prev		1034794	0					
ANR	1035347	AdditiveExpression	( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride		1034794	1		+			
ANR	1035348	ConditionalExpression	c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1034794	0					
ANR	1035349	Condition	c -> last -> data [ plane_idx ]		1034794	0					
ANR	1035350	ArrayIndexing	c -> last -> data [ plane_idx ]		1034794	0					
ANR	1035351	PtrMemberAccess	c -> last -> data		1034794	0					
ANR	1035352	PtrMemberAccess	c -> last		1034794	0					
ANR	1035353	Identifier	c		1034794	0					
ANR	1035354	Identifier	last		1034794	1					
ANR	1035355	Identifier	data		1034794	1					
ANR	1035356	Identifier	plane_idx		1034794	1					
ANR	1035357	ArrayIndexing	c -> last -> data [ plane_idx ]		1034794	1					
ANR	1035358	PtrMemberAccess	c -> last -> data		1034794	0					
ANR	1035359	PtrMemberAccess	c -> last		1034794	0					
ANR	1035360	Identifier	c		1034794	0					
ANR	1035361	Identifier	last		1034794	1					
ANR	1035362	Identifier	data		1034794	1					
ANR	1035363	Identifier	plane_idx		1034794	1					
ANR	1035364	ArrayIndexing	frame -> data [ plane_idx ]		1034794	2					
ANR	1035365	PtrMemberAccess	frame -> data		1034794	0					
ANR	1035366	Identifier	frame		1034794	0					
ANR	1035367	Identifier	data		1034794	1					
ANR	1035368	Identifier	plane_idx		1034794	1					
ANR	1035369	MultiplicativeExpression	8 * by * stride		1034794	1		*			
ANR	1035370	PrimaryExpression	8		1034794	0					
ANR	1035371	MultiplicativeExpression	by * stride		1034794	1		*			
ANR	1035372	Identifier	by		1034794	0					
ANR	1035373	Identifier	stride		1034794	1					
ANR	1035374	ForStatement	"for ( bx = 0 ; bx < bw ; bx ++ , dst += 8 , prev += 8 )"		1034794	12					
ANR	1035375	ForInit	bx = 0 ;	111:13:2476:2482	1034794	0	True				
ANR	1035376	AssignmentExpression	bx = 0		1034794	0		=			
ANR	1035377	Identifier	bx		1034794	0					
ANR	1035378	PrimaryExpression	0		1034794	1					
ANR	1035379	Condition	bx < bw	111:21:2484:2490	1034794	1	True				
ANR	1035380	RelationalExpression	bx < bw		1034794	0		<			
ANR	1035381	Identifier	bx		1034794	0					
ANR	1035382	Identifier	bw		1034794	1					
ANR	1035383	Expression	"bx ++ , dst += 8 , prev += 8"	111:30:2493:2517	1034794	2	True				
ANR	1035384	PostIncDecOperationExpression	bx ++		1034794	0					
ANR	1035385	Identifier	bx		1034794	0					
ANR	1035386	IncDec	++		1034794	1					
ANR	1035387	Expression	"dst += 8 , prev += 8"		1034794	1					
ANR	1035388	AssignmentExpression	dst += 8		1034794	0		+=			
ANR	1035389	Identifier	dst		1034794	0					
ANR	1035390	PrimaryExpression	8		1034794	1					
ANR	1035391	AssignmentExpression	prev += 8		1034794	1		+=			
ANR	1035392	Identifier	prev		1034794	0					
ANR	1035393	PrimaryExpression	8		1034794	1					
ANR	1035394	CompoundStatement		107:57:2375:2375	1034794	3					
ANR	1035395	ExpressionStatement	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"	113:12:2535:2575	1034794	0	True				
ANR	1035396	AssignmentExpression	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"		1034794	0		=			
ANR	1035397	Identifier	blk		1034794	0					
ANR	1035398	CallExpression	"get_value ( c , BINK_SRC_BLOCK_TYPES )"		1034794	1					
ANR	1035399	Callee	get_value		1034794	0					
ANR	1035400	Identifier	get_value		1034794	0					
ANR	1035401	ArgumentList	c		1034794	1					
ANR	1035402	Argument	c		1034794	0					
ANR	1035403	Identifier	c		1034794	0					
ANR	1035404	Argument	BINK_SRC_BLOCK_TYPES		1034794	1					
ANR	1035405	Identifier	BINK_SRC_BLOCK_TYPES		1034794	0					
ANR	1035406	IfStatement	if ( ( by & 1 ) && blk == SCALED_BLOCK )		1034794	1					
ANR	1035407	Condition	( by & 1 ) && blk == SCALED_BLOCK	117:16:2691:2721	1034794	0	True				
ANR	1035408	AndExpression	( by & 1 ) && blk == SCALED_BLOCK		1034794	0		&&			
ANR	1035409	BitAndExpression	by & 1		1034794	0		&			
ANR	1035410	Identifier	by		1034794	0					
ANR	1035411	PrimaryExpression	1		1034794	1					
ANR	1035412	EqualityExpression	blk == SCALED_BLOCK		1034794	1		==			
ANR	1035413	Identifier	blk		1034794	0					
ANR	1035414	Identifier	SCALED_BLOCK		1034794	1					
ANR	1035415	CompoundStatement		113:49:2579:2579	1034794	1					
ANR	1035416	ExpressionStatement	bx ++	119:16:2743:2747	1034794	0	True				
ANR	1035417	PostIncDecOperationExpression	bx ++		1034794	0					
ANR	1035418	Identifier	bx		1034794	0					
ANR	1035419	IncDec	++		1034794	1					
ANR	1035420	ExpressionStatement	dst += 8	121:16:2766:2775	1034794	1	True				
ANR	1035421	AssignmentExpression	dst += 8		1034794	0		+=			
ANR	1035422	Identifier	dst		1034794	0					
ANR	1035423	PrimaryExpression	8		1034794	1					
ANR	1035424	ExpressionStatement	prev += 8	123:16:2794:2803	1034794	2	True				
ANR	1035425	AssignmentExpression	prev += 8		1034794	0		+=			
ANR	1035426	Identifier	prev		1034794	0					
ANR	1035427	PrimaryExpression	8		1034794	1					
ANR	1035428	ContinueStatement	continue ;	125:16:2822:2830	1034794	3	True				
ANR	1035429	SwitchStatement	switch ( blk )		1034794	2					
ANR	1035430	Condition	blk	129:20:2868:2870	1034794	0	True				
ANR	1035431	Identifier	blk		1034794	0					
ANR	1035432	CompoundStatement		125:25:2728:2728	1034794	1					
ANR	1035433	Label	case SKIP_BLOCK :	131:12:2888:2903	1034794	0	True				
ANR	1035434	Identifier	SKIP_BLOCK		1034794	0					
ANR	1035435	ExpressionStatement	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"	133:16:2922:2972	1034794	1	True				
ANR	1035436	CallExpression	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"		1034794	0					
ANR	1035437	Callee	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1034794	0					
ANR	1035438	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1034794	0					
ANR	1035439	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ]		1034794	0					
ANR	1035440	MemberAccess	c -> hdsp . put_pixels_tab		1034794	0					
ANR	1035441	PtrMemberAccess	c -> hdsp		1034794	0					
ANR	1035442	Identifier	c		1034794	0					
ANR	1035443	Identifier	hdsp		1034794	1					
ANR	1035444	Identifier	put_pixels_tab		1034794	1					
ANR	1035445	PrimaryExpression	1		1034794	1					
ANR	1035446	PrimaryExpression	0		1034794	1					
ANR	1035447	ArgumentList	dst		1034794	1					
ANR	1035448	Argument	dst		1034794	0					
ANR	1035449	Identifier	dst		1034794	0					
ANR	1035450	Argument	prev		1034794	1					
ANR	1035451	Identifier	prev		1034794	0					
ANR	1035452	Argument	stride		1034794	2					
ANR	1035453	Identifier	stride		1034794	0					
ANR	1035454	Argument	8		1034794	3					
ANR	1035455	PrimaryExpression	8		1034794	0					
ANR	1035456	BreakStatement	break ;	135:16:2991:2996	1034794	2	True				
ANR	1035457	Label	case SCALED_BLOCK :	137:12:3011:3028	1034794	3	True				
ANR	1035458	Identifier	SCALED_BLOCK		1034794	0					
ANR	1035459	ExpressionStatement	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"	139:16:3047:3091	1034794	4	True				
ANR	1035460	AssignmentExpression	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1034794	0		=			
ANR	1035461	Identifier	blk		1034794	0					
ANR	1035462	CallExpression	"get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1034794	1					
ANR	1035463	Callee	get_value		1034794	0					
ANR	1035464	Identifier	get_value		1034794	0					
ANR	1035465	ArgumentList	c		1034794	1					
ANR	1035466	Argument	c		1034794	0					
ANR	1035467	Identifier	c		1034794	0					
ANR	1035468	Argument	BINK_SRC_SUB_BLOCK_TYPES		1034794	1					
ANR	1035469	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1034794	0					
ANR	1035470	SwitchStatement	switch ( blk )		1034794	5					
ANR	1035471	Condition	blk	141:24:3118:3120	1034794	0	True				
ANR	1035472	Identifier	blk		1034794	0					
ANR	1035473	CompoundStatement		137:29:2978:2978	1034794	1					
ANR	1035474	Label	case RUN_BLOCK :	143:16:3142:3156	1034794	0	True				
ANR	1035475	Identifier	RUN_BLOCK		1034794	0					
ANR	1035476	ExpressionStatement	"scan = bink_patterns [ bitstream_read ( bc , 4 ) ]"	145:20:3179:3222	1034794	1	True				
ANR	1035477	AssignmentExpression	"scan = bink_patterns [ bitstream_read ( bc , 4 ) ]"		1034794	0		=			
ANR	1035478	Identifier	scan		1034794	0					
ANR	1035479	ArrayIndexing	"bink_patterns [ bitstream_read ( bc , 4 ) ]"		1034794	1					
ANR	1035480	Identifier	bink_patterns		1034794	0					
ANR	1035481	CallExpression	"bitstream_read ( bc , 4 )"		1034794	1					
ANR	1035482	Callee	bitstream_read		1034794	0					
ANR	1035483	Identifier	bitstream_read		1034794	0					
ANR	1035484	ArgumentList	bc		1034794	1					
ANR	1035485	Argument	bc		1034794	0					
ANR	1035486	Identifier	bc		1034794	0					
ANR	1035487	Argument	4		1034794	1					
ANR	1035488	PrimaryExpression	4		1034794	0					
ANR	1035489	ExpressionStatement	i = 0	147:20:3245:3250	1034794	2	True				
ANR	1035490	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035491	Identifier	i		1034794	0					
ANR	1035492	PrimaryExpression	0		1034794	1					
ANR	1035493	DoStatement	do		1034794	3					
ANR	1035494	CompoundStatement		147:24:3158:3198	1034794	0					
ANR	1035495	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	151:24:3303:3343	1034794	0	True				
ANR	1035496	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1034794	0					
ANR	1035497	IdentifierDeclType	int		1034794	0					
ANR	1035498	Identifier	run		1034794	1					
ANR	1035499	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1034794	2		=			
ANR	1035500	Identifier	run		1034794	0					
ANR	1035501	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1034794	1		+			
ANR	1035502	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1034794	0					
ANR	1035503	Callee	get_value		1034794	0					
ANR	1035504	Identifier	get_value		1034794	0					
ANR	1035505	ArgumentList	c		1034794	1					
ANR	1035506	Argument	c		1034794	0					
ANR	1035507	Identifier	c		1034794	0					
ANR	1035508	Argument	BINK_SRC_RUN		1034794	1					
ANR	1035509	Identifier	BINK_SRC_RUN		1034794	0					
ANR	1035510	PrimaryExpression	1		1034794	1					
ANR	1035511	ExpressionStatement	i += run	155:24:3372:3380	1034794	1	True				
ANR	1035512	AssignmentExpression	i += run		1034794	0		+=			
ANR	1035513	Identifier	i		1034794	0					
ANR	1035514	Identifier	run		1034794	1					
ANR	1035515	IfStatement	if ( i > 64 )		1034794	2					
ANR	1035516	Condition	i > 64	157:28:3411:3416	1034794	0	True				
ANR	1035517	RelationalExpression	i > 64		1034794	0		>			
ANR	1035518	Identifier	i		1034794	0					
ANR	1035519	PrimaryExpression	64		1034794	1					
ANR	1035520	CompoundStatement		153:36:3274:3274	1034794	1					
ANR	1035521	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	159:28:3450:3508	1034794	0	True				
ANR	1035522	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1034794	0					
ANR	1035523	Callee	av_log		1034794	0					
ANR	1035524	Identifier	av_log		1034794	0					
ANR	1035525	ArgumentList	c -> avctx		1034794	1					
ANR	1035526	Argument	c -> avctx		1034794	0					
ANR	1035527	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035528	Identifier	c		1034794	0					
ANR	1035529	Identifier	avctx		1034794	1					
ANR	1035530	Argument	AV_LOG_ERROR		1034794	1					
ANR	1035531	Identifier	AV_LOG_ERROR		1034794	0					
ANR	1035532	Argument	"""Run went out of bounds\\n"""		1034794	2					
ANR	1035533	PrimaryExpression	"""Run went out of bounds\\n"""		1034794	0					
ANR	1035534	ReturnStatement	return AVERROR_INVALIDDATA ;	161:28:3539:3565	1034794	1	True				
ANR	1035535	Identifier	AVERROR_INVALIDDATA		1034794	0					
ANR	1035536	IfStatement	if ( bitstream_read_bit ( bc ) )		1034794	3					
ANR	1035537	Condition	bitstream_read_bit ( bc )	165:28:3623:3644	1034794	0	True				
ANR	1035538	CallExpression	bitstream_read_bit ( bc )		1034794	0					
ANR	1035539	Callee	bitstream_read_bit		1034794	0					
ANR	1035540	Identifier	bitstream_read_bit		1034794	0					
ANR	1035541	ArgumentList	bc		1034794	1					
ANR	1035542	Argument	bc		1034794	0					
ANR	1035543	Identifier	bc		1034794	0					
ANR	1035544	CompoundStatement		161:52:3502:3502	1034794	1					
ANR	1035545	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	167:28:3678:3711	1034794	0	True				
ANR	1035546	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035547	Identifier	v		1034794	0					
ANR	1035548	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035549	Callee	get_value		1034794	0					
ANR	1035550	Identifier	get_value		1034794	0					
ANR	1035551	ArgumentList	c		1034794	1					
ANR	1035552	Argument	c		1034794	0					
ANR	1035553	Identifier	c		1034794	0					
ANR	1035554	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035555	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035556	ForStatement	for ( j = 0 ; j < run ; j ++ )		1034794	1					
ANR	1035557	ForInit	j = 0 ;	169:33:3747:3752	1034794	0	True				
ANR	1035558	AssignmentExpression	j = 0		1034794	0		=			
ANR	1035559	Identifier	j		1034794	0					
ANR	1035560	PrimaryExpression	0		1034794	1					
ANR	1035561	Condition	j < run	169:40:3754:3760	1034794	1	True				
ANR	1035562	RelationalExpression	j < run		1034794	0		<			
ANR	1035563	Identifier	j		1034794	0					
ANR	1035564	Identifier	run		1034794	1					
ANR	1035565	PostIncDecOperationExpression	j ++	169:49:3763:3765	1034794	2	True				
ANR	1035566	Identifier	j		1034794	0					
ANR	1035567	IncDec	++		1034794	1					
ANR	1035568	ExpressionStatement	ublock [ * scan ++ ] = v	171:32:3801:3820	1034794	3	True				
ANR	1035569	AssignmentExpression	ublock [ * scan ++ ] = v		1034794	0		=			
ANR	1035570	ArrayIndexing	ublock [ * scan ++ ]		1034794	0					
ANR	1035571	Identifier	ublock		1034794	0					
ANR	1035572	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1035573	UnaryOperator	*		1034794	0					
ANR	1035574	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1035575	Identifier	scan		1034794	0					
ANR	1035576	IncDec	++		1034794	1					
ANR	1035577	Identifier	v		1034794	1					
ANR	1035578	ElseStatement	else		1034794	0					
ANR	1035579	CompoundStatement		169:31:3709:3709	1034794	0					
ANR	1035580	ForStatement	for ( j = 0 ; j < run ; j ++ )		1034794	0					
ANR	1035581	ForInit	j = 0 ;	175:33:3890:3895	1034794	0	True				
ANR	1035582	AssignmentExpression	j = 0		1034794	0		=			
ANR	1035583	Identifier	j		1034794	0					
ANR	1035584	PrimaryExpression	0		1034794	1					
ANR	1035585	Condition	j < run	175:40:3897:3903	1034794	1	True				
ANR	1035586	RelationalExpression	j < run		1034794	0		<			
ANR	1035587	Identifier	j		1034794	0					
ANR	1035588	Identifier	run		1034794	1					
ANR	1035589	PostIncDecOperationExpression	j ++	175:49:3906:3908	1034794	2	True				
ANR	1035590	Identifier	j		1034794	0					
ANR	1035591	IncDec	++		1034794	1					
ANR	1035592	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	177:32:3944:3991	1034794	3	True				
ANR	1035593	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035594	ArrayIndexing	ublock [ * scan ++ ]		1034794	0					
ANR	1035595	Identifier	ublock		1034794	0					
ANR	1035596	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1035597	UnaryOperator	*		1034794	0					
ANR	1035598	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1035599	Identifier	scan		1034794	0					
ANR	1035600	IncDec	++		1034794	1					
ANR	1035601	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035602	Callee	get_value		1034794	0					
ANR	1035603	Identifier	get_value		1034794	0					
ANR	1035604	ArgumentList	c		1034794	1					
ANR	1035605	Argument	c		1034794	0					
ANR	1035606	Identifier	c		1034794	0					
ANR	1035607	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035608	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035609	Condition	i < 63	181:29:4050:4055	1034794	1	True				
ANR	1035610	RelationalExpression	i < 63		1034794	0		<			
ANR	1035611	Identifier	i		1034794	0					
ANR	1035612	PrimaryExpression	63		1034794	1					
ANR	1035613	IfStatement	if ( i == 63 )		1034794	4					
ANR	1035614	Condition	i == 63	183:24:4084:4090	1034794	0	True				
ANR	1035615	EqualityExpression	i == 63		1034794	0		==			
ANR	1035616	Identifier	i		1034794	0					
ANR	1035617	PrimaryExpression	63		1034794	1					
ANR	1035618	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	185:24:4118:4165	1034794	1	True				
ANR	1035619	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035620	ArrayIndexing	ublock [ * scan ++ ]		1034794	0					
ANR	1035621	Identifier	ublock		1034794	0					
ANR	1035622	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1035623	UnaryOperator	*		1034794	0					
ANR	1035624	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1035625	Identifier	scan		1034794	0					
ANR	1035626	IncDec	++		1034794	1					
ANR	1035627	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035628	Callee	get_value		1034794	0					
ANR	1035629	Identifier	get_value		1034794	0					
ANR	1035630	ArgumentList	c		1034794	1					
ANR	1035631	Argument	c		1034794	0					
ANR	1035632	Identifier	c		1034794	0					
ANR	1035633	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035634	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035635	BreakStatement	break ;	187:20:4188:4193	1034794	5	True				
ANR	1035636	Label	case INTRA_BLOCK :	189:16:4212:4228	1034794	6	True				
ANR	1035637	Identifier	INTRA_BLOCK		1034794	0					
ANR	1035638	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	191:20:4251:4294	1034794	7	True				
ANR	1035639	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1034794	0					
ANR	1035640	Callee	memset		1034794	0					
ANR	1035641	Identifier	memset		1034794	0					
ANR	1035642	ArgumentList	dctblock		1034794	1					
ANR	1035643	Argument	dctblock		1034794	0					
ANR	1035644	Identifier	dctblock		1034794	0					
ANR	1035645	Argument	0		1034794	1					
ANR	1035646	PrimaryExpression	0		1034794	0					
ANR	1035647	Argument	sizeof ( * dctblock ) * 64		1034794	2					
ANR	1035648	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1034794	0		*			
ANR	1035649	SizeofExpression	sizeof ( * dctblock )		1034794	0					
ANR	1035650	Sizeof	sizeof		1034794	0					
ANR	1035651	UnaryOperationExpression	* dctblock		1034794	1					
ANR	1035652	UnaryOperator	*		1034794	0					
ANR	1035653	Identifier	dctblock		1034794	1					
ANR	1035654	PrimaryExpression	64		1034794	1					
ANR	1035655	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	193:20:4317:4362	1034794	8	True				
ANR	1035656	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1034794	0		=			
ANR	1035657	ArrayIndexing	dctblock [ 0 ]		1034794	0					
ANR	1035658	Identifier	dctblock		1034794	0					
ANR	1035659	PrimaryExpression	0		1034794	1					
ANR	1035660	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1034794	1					
ANR	1035661	Callee	get_value		1034794	0					
ANR	1035662	Identifier	get_value		1034794	0					
ANR	1035663	ArgumentList	c		1034794	1					
ANR	1035664	Argument	c		1034794	0					
ANR	1035665	Identifier	c		1034794	0					
ANR	1035666	Argument	BINK_SRC_INTRA_DC		1034794	1					
ANR	1035667	Identifier	BINK_SRC_INTRA_DC		1034794	0					
ANR	1035668	ExpressionStatement	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_intra_quant , - 1 )"	195:20:4385:4447	1034794	9	True				
ANR	1035669	CallExpression	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_intra_quant , - 1 )"		1034794	0					
ANR	1035670	Callee	read_dct_coeffs		1034794	0					
ANR	1035671	Identifier	read_dct_coeffs		1034794	0					
ANR	1035672	ArgumentList	bc		1034794	1					
ANR	1035673	Argument	bc		1034794	0					
ANR	1035674	Identifier	bc		1034794	0					
ANR	1035675	Argument	dctblock		1034794	1					
ANR	1035676	Identifier	dctblock		1034794	0					
ANR	1035677	Argument	bink_scan		1034794	2					
ANR	1035678	Identifier	bink_scan		1034794	0					
ANR	1035679	Argument	bink_intra_quant		1034794	3					
ANR	1035680	Identifier	bink_intra_quant		1034794	0					
ANR	1035681	Argument	- 1		1034794	4					
ANR	1035682	UnaryOperationExpression	- 1		1034794	0					
ANR	1035683	UnaryOperator	-		1034794	0					
ANR	1035684	PrimaryExpression	1		1034794	1					
ANR	1035685	ExpressionStatement	"c -> binkdsp . idct_put ( ublock , 8 , dctblock )"	197:20:4470:4510	1034794	10	True				
ANR	1035686	CallExpression	"c -> binkdsp . idct_put ( ublock , 8 , dctblock )"		1034794	0					
ANR	1035687	Callee	c -> binkdsp . idct_put		1034794	0					
ANR	1035688	MemberAccess	c -> binkdsp . idct_put		1034794	0					
ANR	1035689	PtrMemberAccess	c -> binkdsp		1034794	0					
ANR	1035690	Identifier	c		1034794	0					
ANR	1035691	Identifier	binkdsp		1034794	1					
ANR	1035692	Identifier	idct_put		1034794	1					
ANR	1035693	ArgumentList	ublock		1034794	1					
ANR	1035694	Argument	ublock		1034794	0					
ANR	1035695	Identifier	ublock		1034794	0					
ANR	1035696	Argument	8		1034794	1					
ANR	1035697	PrimaryExpression	8		1034794	0					
ANR	1035698	Argument	dctblock		1034794	2					
ANR	1035699	Identifier	dctblock		1034794	0					
ANR	1035700	BreakStatement	break ;	199:20:4533:4538	1034794	11	True				
ANR	1035701	Label	case FILL_BLOCK :	201:16:4557:4572	1034794	12	True				
ANR	1035702	Identifier	FILL_BLOCK		1034794	0					
ANR	1035703	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	203:20:4595:4628	1034794	13	True				
ANR	1035704	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035705	Identifier	v		1034794	0					
ANR	1035706	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035707	Callee	get_value		1034794	0					
ANR	1035708	Identifier	get_value		1034794	0					
ANR	1035709	ArgumentList	c		1034794	1					
ANR	1035710	Argument	c		1034794	0					
ANR	1035711	Identifier	c		1034794	0					
ANR	1035712	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035713	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035714	ExpressionStatement	"c -> bdsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"	205:20:4651:4696	1034794	14	True				
ANR	1035715	CallExpression	"c -> bdsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"		1034794	0					
ANR	1035716	Callee	c -> bdsp . fill_block_tab [ 0 ]		1034794	0					
ANR	1035717	ArrayIndexing	c -> bdsp . fill_block_tab [ 0 ]		1034794	0					
ANR	1035718	MemberAccess	c -> bdsp . fill_block_tab		1034794	0					
ANR	1035719	PtrMemberAccess	c -> bdsp		1034794	0					
ANR	1035720	Identifier	c		1034794	0					
ANR	1035721	Identifier	bdsp		1034794	1					
ANR	1035722	Identifier	fill_block_tab		1034794	1					
ANR	1035723	PrimaryExpression	0		1034794	1					
ANR	1035724	ArgumentList	dst		1034794	1					
ANR	1035725	Argument	dst		1034794	0					
ANR	1035726	Identifier	dst		1034794	0					
ANR	1035727	Argument	v		1034794	1					
ANR	1035728	Identifier	v		1034794	0					
ANR	1035729	Argument	stride		1034794	2					
ANR	1035730	Identifier	stride		1034794	0					
ANR	1035731	Argument	16		1034794	3					
ANR	1035732	PrimaryExpression	16		1034794	0					
ANR	1035733	BreakStatement	break ;	207:20:4719:4724	1034794	15	True				
ANR	1035734	Label	case PATTERN_BLOCK :	209:16:4743:4761	1034794	16	True				
ANR	1035735	Identifier	PATTERN_BLOCK		1034794	0					
ANR	1035736	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1034794	17					
ANR	1035737	ForInit	i = 0 ;	211:25:4789:4794	1034794	0	True				
ANR	1035738	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035739	Identifier	i		1034794	0					
ANR	1035740	PrimaryExpression	0		1034794	1					
ANR	1035741	Condition	i < 2	211:32:4796:4800	1034794	1	True				
ANR	1035742	RelationalExpression	i < 2		1034794	0		<			
ANR	1035743	Identifier	i		1034794	0					
ANR	1035744	PrimaryExpression	2		1034794	1					
ANR	1035745	PostIncDecOperationExpression	i ++	211:39:4803:4805	1034794	2	True				
ANR	1035746	Identifier	i		1034794	0					
ANR	1035747	IncDec	++		1034794	1					
ANR	1035748	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	213:24:4833:4871	1034794	3	True				
ANR	1035749	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035750	ArrayIndexing	col [ i ]		1034794	0					
ANR	1035751	Identifier	col		1034794	0					
ANR	1035752	Identifier	i		1034794	1					
ANR	1035753	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035754	Callee	get_value		1034794	0					
ANR	1035755	Identifier	get_value		1034794	0					
ANR	1035756	ArgumentList	c		1034794	1					
ANR	1035757	Argument	c		1034794	0					
ANR	1035758	Identifier	c		1034794	0					
ANR	1035759	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035760	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035761	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1034794	18					
ANR	1035762	ForInit	j = 0 ;	215:25:4899:4904	1034794	0	True				
ANR	1035763	AssignmentExpression	j = 0		1034794	0		=			
ANR	1035764	Identifier	j		1034794	0					
ANR	1035765	PrimaryExpression	0		1034794	1					
ANR	1035766	Condition	j < 8	215:32:4906:4910	1034794	1	True				
ANR	1035767	RelationalExpression	j < 8		1034794	0		<			
ANR	1035768	Identifier	j		1034794	0					
ANR	1035769	PrimaryExpression	8		1034794	1					
ANR	1035770	PostIncDecOperationExpression	j ++	215:39:4913:4915	1034794	2	True				
ANR	1035771	Identifier	j		1034794	0					
ANR	1035772	IncDec	++		1034794	1					
ANR	1035773	CompoundStatement		211:44:4773:4773	1034794	3					
ANR	1035774	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	217:24:4945:4979	1034794	0	True				
ANR	1035775	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1034794	0		=			
ANR	1035776	Identifier	v		1034794	0					
ANR	1035777	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1034794	1					
ANR	1035778	Callee	get_value		1034794	0					
ANR	1035779	Identifier	get_value		1034794	0					
ANR	1035780	ArgumentList	c		1034794	1					
ANR	1035781	Argument	c		1034794	0					
ANR	1035782	Identifier	c		1034794	0					
ANR	1035783	Argument	BINK_SRC_PATTERN		1034794	1					
ANR	1035784	Identifier	BINK_SRC_PATTERN		1034794	0					
ANR	1035785	ForStatement	"for ( i = 0 ; i < 8 ; i ++ , v >>= 1 )"		1034794	1					
ANR	1035786	ForInit	i = 0 ;	219:29:5011:5016	1034794	0	True				
ANR	1035787	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035788	Identifier	i		1034794	0					
ANR	1035789	PrimaryExpression	0		1034794	1					
ANR	1035790	Condition	i < 8	219:36:5018:5022	1034794	1	True				
ANR	1035791	RelationalExpression	i < 8		1034794	0		<			
ANR	1035792	Identifier	i		1034794	0					
ANR	1035793	PrimaryExpression	8		1034794	1					
ANR	1035794	Expression	"i ++ , v >>= 1"	219:43:5025:5036	1034794	2	True				
ANR	1035795	PostIncDecOperationExpression	i ++		1034794	0					
ANR	1035796	Identifier	i		1034794	0					
ANR	1035797	IncDec	++		1034794	1					
ANR	1035798	AssignmentExpression	v >>= 1		1034794	1		>>=			
ANR	1035799	Identifier	v		1034794	0					
ANR	1035800	PrimaryExpression	1		1034794	1					
ANR	1035801	ExpressionStatement	ublock [ i + j * 8 ] = col [ v & 1 ]	221:28:5068:5096	1034794	3	True				
ANR	1035802	AssignmentExpression	ublock [ i + j * 8 ] = col [ v & 1 ]		1034794	0		=			
ANR	1035803	ArrayIndexing	ublock [ i + j * 8 ]		1034794	0					
ANR	1035804	Identifier	ublock		1034794	0					
ANR	1035805	AdditiveExpression	i + j * 8		1034794	1		+			
ANR	1035806	Identifier	i		1034794	0					
ANR	1035807	MultiplicativeExpression	j * 8		1034794	1		*			
ANR	1035808	Identifier	j		1034794	0					
ANR	1035809	PrimaryExpression	8		1034794	1					
ANR	1035810	ArrayIndexing	col [ v & 1 ]		1034794	1					
ANR	1035811	Identifier	col		1034794	0					
ANR	1035812	BitAndExpression	v & 1		1034794	1		&			
ANR	1035813	Identifier	v		1034794	0					
ANR	1035814	PrimaryExpression	1		1034794	1					
ANR	1035815	BreakStatement	break ;	225:20:5142:5147	1034794	19	True				
ANR	1035816	Label	case RAW_BLOCK :	227:16:5166:5180	1034794	20	True				
ANR	1035817	Identifier	RAW_BLOCK		1034794	0					
ANR	1035818	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1034794	21					
ANR	1035819	ForInit	j = 0 ;	229:25:5208:5213	1034794	0	True				
ANR	1035820	AssignmentExpression	j = 0		1034794	0		=			
ANR	1035821	Identifier	j		1034794	0					
ANR	1035822	PrimaryExpression	0		1034794	1					
ANR	1035823	Condition	j < 8	229:32:5215:5219	1034794	1	True				
ANR	1035824	RelationalExpression	j < 8		1034794	0		<			
ANR	1035825	Identifier	j		1034794	0					
ANR	1035826	PrimaryExpression	8		1034794	1					
ANR	1035827	PostIncDecOperationExpression	j ++	229:39:5222:5224	1034794	2	True				
ANR	1035828	Identifier	j		1034794	0					
ANR	1035829	IncDec	++		1034794	1					
ANR	1035830	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1034794	3					
ANR	1035831	ForInit	i = 0 ;	231:29:5257:5262	1034794	0	True				
ANR	1035832	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035833	Identifier	i		1034794	0					
ANR	1035834	PrimaryExpression	0		1034794	1					
ANR	1035835	Condition	i < 8	231:36:5264:5268	1034794	1	True				
ANR	1035836	RelationalExpression	i < 8		1034794	0		<			
ANR	1035837	Identifier	i		1034794	0					
ANR	1035838	PrimaryExpression	8		1034794	1					
ANR	1035839	PostIncDecOperationExpression	i ++	231:43:5271:5273	1034794	2	True				
ANR	1035840	Identifier	i		1034794	0					
ANR	1035841	IncDec	++		1034794	1					
ANR	1035842	ExpressionStatement	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"	233:28:5305:5352	1034794	3	True				
ANR	1035843	AssignmentExpression	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1035844	ArrayIndexing	ublock [ i + j * 8 ]		1034794	0					
ANR	1035845	Identifier	ublock		1034794	0					
ANR	1035846	AdditiveExpression	i + j * 8		1034794	1		+			
ANR	1035847	Identifier	i		1034794	0					
ANR	1035848	MultiplicativeExpression	j * 8		1034794	1		*			
ANR	1035849	Identifier	j		1034794	0					
ANR	1035850	PrimaryExpression	8		1034794	1					
ANR	1035851	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1035852	Callee	get_value		1034794	0					
ANR	1035853	Identifier	get_value		1034794	0					
ANR	1035854	ArgumentList	c		1034794	1					
ANR	1035855	Argument	c		1034794	0					
ANR	1035856	Identifier	c		1034794	0					
ANR	1035857	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1035858	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1035859	BreakStatement	break ;	235:20:5375:5380	1034794	22	True				
ANR	1035860	Label	default :	237:16:5399:5406	1034794	23	True				
ANR	1035861	Identifier	default		1034794	0					
ANR	1035862	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"	239:20:5429:5499	1034794	24	True				
ANR	1035863	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"		1034794	0					
ANR	1035864	Callee	av_log		1034794	0					
ANR	1035865	Identifier	av_log		1034794	0					
ANR	1035866	ArgumentList	c -> avctx		1034794	1					
ANR	1035867	Argument	c -> avctx		1034794	0					
ANR	1035868	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035869	Identifier	c		1034794	0					
ANR	1035870	Identifier	avctx		1034794	1					
ANR	1035871	Argument	AV_LOG_ERROR		1034794	1					
ANR	1035872	Identifier	AV_LOG_ERROR		1034794	0					
ANR	1035873	Argument	"""Incorrect 16x16 block type %d\\n"""		1034794	2					
ANR	1035874	PrimaryExpression	"""Incorrect 16x16 block type %d\\n"""		1034794	0					
ANR	1035875	Argument	blk		1034794	3					
ANR	1035876	Identifier	blk		1034794	0					
ANR	1035877	ReturnStatement	return AVERROR_INVALIDDATA ;	241:20:5522:5548	1034794	25	True				
ANR	1035878	Identifier	AVERROR_INVALIDDATA		1034794	0					
ANR	1035879	IfStatement	if ( blk != FILL_BLOCK )		1034794	6					
ANR	1035880	Condition	blk != FILL_BLOCK	245:20:5590:5606	1034794	0	True				
ANR	1035881	EqualityExpression	blk != FILL_BLOCK		1034794	0		!=			
ANR	1035882	Identifier	blk		1034794	0					
ANR	1035883	Identifier	FILL_BLOCK		1034794	1					
ANR	1035884	ExpressionStatement	"c -> binkdsp . scale_block ( ublock , dst , stride )"	247:16:5626:5669	1034794	1	True				
ANR	1035885	CallExpression	"c -> binkdsp . scale_block ( ublock , dst , stride )"		1034794	0					
ANR	1035886	Callee	c -> binkdsp . scale_block		1034794	0					
ANR	1035887	MemberAccess	c -> binkdsp . scale_block		1034794	0					
ANR	1035888	PtrMemberAccess	c -> binkdsp		1034794	0					
ANR	1035889	Identifier	c		1034794	0					
ANR	1035890	Identifier	binkdsp		1034794	1					
ANR	1035891	Identifier	scale_block		1034794	1					
ANR	1035892	ArgumentList	ublock		1034794	1					
ANR	1035893	Argument	ublock		1034794	0					
ANR	1035894	Identifier	ublock		1034794	0					
ANR	1035895	Argument	dst		1034794	1					
ANR	1035896	Identifier	dst		1034794	0					
ANR	1035897	Argument	stride		1034794	2					
ANR	1035898	Identifier	stride		1034794	0					
ANR	1035899	ExpressionStatement	bx ++	249:16:5688:5692	1034794	7	True				
ANR	1035900	PostIncDecOperationExpression	bx ++		1034794	0					
ANR	1035901	Identifier	bx		1034794	0					
ANR	1035902	IncDec	++		1034794	1					
ANR	1035903	ExpressionStatement	dst += 8	251:16:5711:5720	1034794	8	True				
ANR	1035904	AssignmentExpression	dst += 8		1034794	0		+=			
ANR	1035905	Identifier	dst		1034794	0					
ANR	1035906	PrimaryExpression	8		1034794	1					
ANR	1035907	ExpressionStatement	prev += 8	253:16:5739:5748	1034794	9	True				
ANR	1035908	AssignmentExpression	prev += 8		1034794	0		+=			
ANR	1035909	Identifier	prev		1034794	0					
ANR	1035910	PrimaryExpression	8		1034794	1					
ANR	1035911	BreakStatement	break ;	255:16:5767:5772	1034794	10	True				
ANR	1035912	Label	case MOTION_BLOCK :	257:12:5787:5804	1034794	11	True				
ANR	1035913	Identifier	MOTION_BLOCK		1034794	0					
ANR	1035914	ExpressionStatement	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"	259:16:5823:5925	1034794	12	True				
ANR	1035915	AssignmentExpression	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	0		=			
ANR	1035916	Identifier	ret		1034794	0					
ANR	1035917	CallExpression	"bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	1					
ANR	1035918	Callee	bink_put_pixels		1034794	0					
ANR	1035919	Identifier	bink_put_pixels		1034794	0					
ANR	1035920	ArgumentList	c		1034794	1					
ANR	1035921	Argument	c		1034794	0					
ANR	1035922	Identifier	c		1034794	0					
ANR	1035923	Argument	dst		1034794	1					
ANR	1035924	Identifier	dst		1034794	0					
ANR	1035925	Argument	prev		1034794	2					
ANR	1035926	Identifier	prev		1034794	0					
ANR	1035927	Argument	stride		1034794	3					
ANR	1035928	Identifier	stride		1034794	0					
ANR	1035929	Argument	ref_start		1034794	4					
ANR	1035930	Identifier	ref_start		1034794	0					
ANR	1035931	Argument	ref_end		1034794	5					
ANR	1035932	Identifier	ref_end		1034794	0					
ANR	1035933	IfStatement	if ( ret < 0 )		1034794	13					
ANR	1035934	Condition	ret < 0	263:20:5948:5954	1034794	0	True				
ANR	1035935	RelationalExpression	ret < 0		1034794	0		<			
ANR	1035936	Identifier	ret		1034794	0					
ANR	1035937	PrimaryExpression	0		1034794	1					
ANR	1035938	ReturnStatement	return ret ;	265:20:5978:5988	1034794	1	True				
ANR	1035939	Identifier	ret		1034794	0					
ANR	1035940	BreakStatement	break ;	267:16:6007:6012	1034794	14	True				
ANR	1035941	Label	case RUN_BLOCK :	269:12:6027:6041	1034794	15	True				
ANR	1035942	Identifier	RUN_BLOCK		1034794	0					
ANR	1035943	ExpressionStatement	"scan = bink_patterns [ bitstream_read ( bc , 4 ) ]"	271:16:6060:6103	1034794	16	True				
ANR	1035944	AssignmentExpression	"scan = bink_patterns [ bitstream_read ( bc , 4 ) ]"		1034794	0		=			
ANR	1035945	Identifier	scan		1034794	0					
ANR	1035946	ArrayIndexing	"bink_patterns [ bitstream_read ( bc , 4 ) ]"		1034794	1					
ANR	1035947	Identifier	bink_patterns		1034794	0					
ANR	1035948	CallExpression	"bitstream_read ( bc , 4 )"		1034794	1					
ANR	1035949	Callee	bitstream_read		1034794	0					
ANR	1035950	Identifier	bitstream_read		1034794	0					
ANR	1035951	ArgumentList	bc		1034794	1					
ANR	1035952	Argument	bc		1034794	0					
ANR	1035953	Identifier	bc		1034794	0					
ANR	1035954	Argument	4		1034794	1					
ANR	1035955	PrimaryExpression	4		1034794	0					
ANR	1035956	ExpressionStatement	i = 0	273:16:6122:6127	1034794	17	True				
ANR	1035957	AssignmentExpression	i = 0		1034794	0		=			
ANR	1035958	Identifier	i		1034794	0					
ANR	1035959	PrimaryExpression	0		1034794	1					
ANR	1035960	DoStatement	do		1034794	18					
ANR	1035961	CompoundStatement		273:20:6027:6067	1034794	0					
ANR	1035962	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	277:20:6172:6212	1034794	0	True				
ANR	1035963	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1034794	0					
ANR	1035964	IdentifierDeclType	int		1034794	0					
ANR	1035965	Identifier	run		1034794	1					
ANR	1035966	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1034794	2		=			
ANR	1035967	Identifier	run		1034794	0					
ANR	1035968	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1034794	1		+			
ANR	1035969	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1034794	0					
ANR	1035970	Callee	get_value		1034794	0					
ANR	1035971	Identifier	get_value		1034794	0					
ANR	1035972	ArgumentList	c		1034794	1					
ANR	1035973	Argument	c		1034794	0					
ANR	1035974	Identifier	c		1034794	0					
ANR	1035975	Argument	BINK_SRC_RUN		1034794	1					
ANR	1035976	Identifier	BINK_SRC_RUN		1034794	0					
ANR	1035977	PrimaryExpression	1		1034794	1					
ANR	1035978	ExpressionStatement	i += run	281:20:6237:6245	1034794	1	True				
ANR	1035979	AssignmentExpression	i += run		1034794	0		+=			
ANR	1035980	Identifier	i		1034794	0					
ANR	1035981	Identifier	run		1034794	1					
ANR	1035982	IfStatement	if ( i > 64 )		1034794	2					
ANR	1035983	Condition	i > 64	283:24:6272:6277	1034794	0	True				
ANR	1035984	RelationalExpression	i > 64		1034794	0		>			
ANR	1035985	Identifier	i		1034794	0					
ANR	1035986	PrimaryExpression	64		1034794	1					
ANR	1035987	CompoundStatement		279:32:6135:6135	1034794	1					
ANR	1035988	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	285:24:6307:6365	1034794	0	True				
ANR	1035989	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1034794	0					
ANR	1035990	Callee	av_log		1034794	0					
ANR	1035991	Identifier	av_log		1034794	0					
ANR	1035992	ArgumentList	c -> avctx		1034794	1					
ANR	1035993	Argument	c -> avctx		1034794	0					
ANR	1035994	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1035995	Identifier	c		1034794	0					
ANR	1035996	Identifier	avctx		1034794	1					
ANR	1035997	Argument	AV_LOG_ERROR		1034794	1					
ANR	1035998	Identifier	AV_LOG_ERROR		1034794	0					
ANR	1035999	Argument	"""Run went out of bounds\\n"""		1034794	2					
ANR	1036000	PrimaryExpression	"""Run went out of bounds\\n"""		1034794	0					
ANR	1036001	ReturnStatement	return AVERROR_INVALIDDATA ;	287:24:6392:6418	1034794	1	True				
ANR	1036002	Identifier	AVERROR_INVALIDDATA		1034794	0					
ANR	1036003	IfStatement	if ( bitstream_read_bit ( bc ) )		1034794	3					
ANR	1036004	Condition	bitstream_read_bit ( bc )	291:24:6468:6489	1034794	0	True				
ANR	1036005	CallExpression	bitstream_read_bit ( bc )		1034794	0					
ANR	1036006	Callee	bitstream_read_bit		1034794	0					
ANR	1036007	Identifier	bitstream_read_bit		1034794	0					
ANR	1036008	ArgumentList	bc		1034794	1					
ANR	1036009	Argument	bc		1034794	0					
ANR	1036010	Identifier	bc		1034794	0					
ANR	1036011	CompoundStatement		287:48:6347:6347	1034794	1					
ANR	1036012	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	293:24:6519:6552	1034794	0	True				
ANR	1036013	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1036014	Identifier	v		1034794	0					
ANR	1036015	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1036016	Callee	get_value		1034794	0					
ANR	1036017	Identifier	get_value		1034794	0					
ANR	1036018	ArgumentList	c		1034794	1					
ANR	1036019	Argument	c		1034794	0					
ANR	1036020	Identifier	c		1034794	0					
ANR	1036021	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1036022	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1036023	ForStatement	for ( j = 0 ; j < run ; j ++ )		1034794	1					
ANR	1036024	ForInit	j = 0 ;	295:29:6584:6589	1034794	0	True				
ANR	1036025	AssignmentExpression	j = 0		1034794	0		=			
ANR	1036026	Identifier	j		1034794	0					
ANR	1036027	PrimaryExpression	0		1034794	1					
ANR	1036028	Condition	j < run	295:36:6591:6597	1034794	1	True				
ANR	1036029	RelationalExpression	j < run		1034794	0		<			
ANR	1036030	Identifier	j		1034794	0					
ANR	1036031	Identifier	run		1034794	1					
ANR	1036032	PostIncDecOperationExpression	j ++	295:45:6600:6602	1034794	2	True				
ANR	1036033	Identifier	j		1034794	0					
ANR	1036034	IncDec	++		1034794	1					
ANR	1036035	ExpressionStatement	dst [ coordmap [ * scan ++ ] ] = v	297:28:6634:6660	1034794	3	True				
ANR	1036036	AssignmentExpression	dst [ coordmap [ * scan ++ ] ] = v		1034794	0		=			
ANR	1036037	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1034794	0					
ANR	1036038	Identifier	dst		1034794	0					
ANR	1036039	ArrayIndexing	coordmap [ * scan ++ ]		1034794	1					
ANR	1036040	Identifier	coordmap		1034794	0					
ANR	1036041	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1036042	UnaryOperator	*		1034794	0					
ANR	1036043	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1036044	Identifier	scan		1034794	0					
ANR	1036045	IncDec	++		1034794	1					
ANR	1036046	Identifier	v		1034794	1					
ANR	1036047	ElseStatement	else		1034794	0					
ANR	1036048	CompoundStatement		295:27:6545:6545	1034794	0					
ANR	1036049	ForStatement	for ( j = 0 ; j < run ; j ++ )		1034794	0					
ANR	1036050	ForInit	j = 0 ;	301:29:6722:6727	1034794	0	True				
ANR	1036051	AssignmentExpression	j = 0		1034794	0		=			
ANR	1036052	Identifier	j		1034794	0					
ANR	1036053	PrimaryExpression	0		1034794	1					
ANR	1036054	Condition	j < run	301:36:6729:6735	1034794	1	True				
ANR	1036055	RelationalExpression	j < run		1034794	0		<			
ANR	1036056	Identifier	j		1034794	0					
ANR	1036057	Identifier	run		1034794	1					
ANR	1036058	PostIncDecOperationExpression	j ++	301:45:6738:6740	1034794	2	True				
ANR	1036059	Identifier	j		1034794	0					
ANR	1036060	IncDec	++		1034794	1					
ANR	1036061	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	303:28:6772:6826	1034794	3	True				
ANR	1036062	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1036063	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1034794	0					
ANR	1036064	Identifier	dst		1034794	0					
ANR	1036065	ArrayIndexing	coordmap [ * scan ++ ]		1034794	1					
ANR	1036066	Identifier	coordmap		1034794	0					
ANR	1036067	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1036068	UnaryOperator	*		1034794	0					
ANR	1036069	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1036070	Identifier	scan		1034794	0					
ANR	1036071	IncDec	++		1034794	1					
ANR	1036072	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1036073	Callee	get_value		1034794	0					
ANR	1036074	Identifier	get_value		1034794	0					
ANR	1036075	ArgumentList	c		1034794	1					
ANR	1036076	Argument	c		1034794	0					
ANR	1036077	Identifier	c		1034794	0					
ANR	1036078	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1036079	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1036080	Condition	i < 63	307:25:6877:6882	1034794	1	True				
ANR	1036081	RelationalExpression	i < 63		1034794	0		<			
ANR	1036082	Identifier	i		1034794	0					
ANR	1036083	PrimaryExpression	63		1034794	1					
ANR	1036084	IfStatement	if ( i == 63 )		1034794	19					
ANR	1036085	Condition	i == 63	309:20:6907:6913	1034794	0	True				
ANR	1036086	EqualityExpression	i == 63		1034794	0		==			
ANR	1036087	Identifier	i		1034794	0					
ANR	1036088	PrimaryExpression	63		1034794	1					
ANR	1036089	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	311:20:6937:6991	1034794	1	True				
ANR	1036090	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1036091	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1034794	0					
ANR	1036092	Identifier	dst		1034794	0					
ANR	1036093	ArrayIndexing	coordmap [ * scan ++ ]		1034794	1					
ANR	1036094	Identifier	coordmap		1034794	0					
ANR	1036095	UnaryOperationExpression	* scan ++		1034794	1					
ANR	1036096	UnaryOperator	*		1034794	0					
ANR	1036097	PostIncDecOperationExpression	scan ++		1034794	1					
ANR	1036098	Identifier	scan		1034794	0					
ANR	1036099	IncDec	++		1034794	1					
ANR	1036100	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1036101	Callee	get_value		1034794	0					
ANR	1036102	Identifier	get_value		1034794	0					
ANR	1036103	ArgumentList	c		1034794	1					
ANR	1036104	Argument	c		1034794	0					
ANR	1036105	Identifier	c		1034794	0					
ANR	1036106	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1036107	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1036108	BreakStatement	break ;	313:16:7010:7015	1034794	20	True				
ANR	1036109	Label	case RESIDUE_BLOCK :	315:12:7030:7048	1034794	21	True				
ANR	1036110	Identifier	RESIDUE_BLOCK		1034794	0					
ANR	1036111	ExpressionStatement	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"	317:16:7067:7169	1034794	22	True				
ANR	1036112	AssignmentExpression	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	0		=			
ANR	1036113	Identifier	ret		1034794	0					
ANR	1036114	CallExpression	"bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	1					
ANR	1036115	Callee	bink_put_pixels		1034794	0					
ANR	1036116	Identifier	bink_put_pixels		1034794	0					
ANR	1036117	ArgumentList	c		1034794	1					
ANR	1036118	Argument	c		1034794	0					
ANR	1036119	Identifier	c		1034794	0					
ANR	1036120	Argument	dst		1034794	1					
ANR	1036121	Identifier	dst		1034794	0					
ANR	1036122	Argument	prev		1034794	2					
ANR	1036123	Identifier	prev		1034794	0					
ANR	1036124	Argument	stride		1034794	3					
ANR	1036125	Identifier	stride		1034794	0					
ANR	1036126	Argument	ref_start		1034794	4					
ANR	1036127	Identifier	ref_start		1034794	0					
ANR	1036128	Argument	ref_end		1034794	5					
ANR	1036129	Identifier	ref_end		1034794	0					
ANR	1036130	IfStatement	if ( ret < 0 )		1034794	23					
ANR	1036131	Condition	ret < 0	321:20:7192:7198	1034794	0	True				
ANR	1036132	RelationalExpression	ret < 0		1034794	0		<			
ANR	1036133	Identifier	ret		1034794	0					
ANR	1036134	PrimaryExpression	0		1034794	1					
ANR	1036135	ReturnStatement	return ret ;	323:20:7222:7232	1034794	1	True				
ANR	1036136	Identifier	ret		1034794	0					
ANR	1036137	ExpressionStatement	c -> bdsp . clear_block ( block )	325:16:7251:7277	1034794	24	True				
ANR	1036138	CallExpression	c -> bdsp . clear_block ( block )		1034794	0					
ANR	1036139	Callee	c -> bdsp . clear_block		1034794	0					
ANR	1036140	MemberAccess	c -> bdsp . clear_block		1034794	0					
ANR	1036141	PtrMemberAccess	c -> bdsp		1034794	0					
ANR	1036142	Identifier	c		1034794	0					
ANR	1036143	Identifier	bdsp		1034794	1					
ANR	1036144	Identifier	clear_block		1034794	1					
ANR	1036145	ArgumentList	block		1034794	1					
ANR	1036146	Argument	block		1034794	0					
ANR	1036147	Identifier	block		1034794	0					
ANR	1036148	ExpressionStatement	"v = bitstream_read ( bc , 7 )"	327:16:7296:7321	1034794	25	True				
ANR	1036149	AssignmentExpression	"v = bitstream_read ( bc , 7 )"		1034794	0		=			
ANR	1036150	Identifier	v		1034794	0					
ANR	1036151	CallExpression	"bitstream_read ( bc , 7 )"		1034794	1					
ANR	1036152	Callee	bitstream_read		1034794	0					
ANR	1036153	Identifier	bitstream_read		1034794	0					
ANR	1036154	ArgumentList	bc		1034794	1					
ANR	1036155	Argument	bc		1034794	0					
ANR	1036156	Identifier	bc		1034794	0					
ANR	1036157	Argument	7		1034794	1					
ANR	1036158	PrimaryExpression	7		1034794	0					
ANR	1036159	ExpressionStatement	"read_residue ( bc , block , v )"	329:16:7340:7366	1034794	26	True				
ANR	1036160	CallExpression	"read_residue ( bc , block , v )"		1034794	0					
ANR	1036161	Callee	read_residue		1034794	0					
ANR	1036162	Identifier	read_residue		1034794	0					
ANR	1036163	ArgumentList	bc		1034794	1					
ANR	1036164	Argument	bc		1034794	0					
ANR	1036165	Identifier	bc		1034794	0					
ANR	1036166	Argument	block		1034794	1					
ANR	1036167	Identifier	block		1034794	0					
ANR	1036168	Argument	v		1034794	2					
ANR	1036169	Identifier	v		1034794	0					
ANR	1036170	ExpressionStatement	"c -> binkdsp . add_pixels8 ( dst , block , stride )"	331:16:7385:7427	1034794	27	True				
ANR	1036171	CallExpression	"c -> binkdsp . add_pixels8 ( dst , block , stride )"		1034794	0					
ANR	1036172	Callee	c -> binkdsp . add_pixels8		1034794	0					
ANR	1036173	MemberAccess	c -> binkdsp . add_pixels8		1034794	0					
ANR	1036174	PtrMemberAccess	c -> binkdsp		1034794	0					
ANR	1036175	Identifier	c		1034794	0					
ANR	1036176	Identifier	binkdsp		1034794	1					
ANR	1036177	Identifier	add_pixels8		1034794	1					
ANR	1036178	ArgumentList	dst		1034794	1					
ANR	1036179	Argument	dst		1034794	0					
ANR	1036180	Identifier	dst		1034794	0					
ANR	1036181	Argument	block		1034794	1					
ANR	1036182	Identifier	block		1034794	0					
ANR	1036183	Argument	stride		1034794	2					
ANR	1036184	Identifier	stride		1034794	0					
ANR	1036185	BreakStatement	break ;	333:16:7446:7451	1034794	28	True				
ANR	1036186	Label	case INTRA_BLOCK :	335:12:7466:7482	1034794	29	True				
ANR	1036187	Identifier	INTRA_BLOCK		1034794	0					
ANR	1036188	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	337:16:7501:7544	1034794	30	True				
ANR	1036189	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1034794	0					
ANR	1036190	Callee	memset		1034794	0					
ANR	1036191	Identifier	memset		1034794	0					
ANR	1036192	ArgumentList	dctblock		1034794	1					
ANR	1036193	Argument	dctblock		1034794	0					
ANR	1036194	Identifier	dctblock		1034794	0					
ANR	1036195	Argument	0		1034794	1					
ANR	1036196	PrimaryExpression	0		1034794	0					
ANR	1036197	Argument	sizeof ( * dctblock ) * 64		1034794	2					
ANR	1036198	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1034794	0		*			
ANR	1036199	SizeofExpression	sizeof ( * dctblock )		1034794	0					
ANR	1036200	Sizeof	sizeof		1034794	0					
ANR	1036201	UnaryOperationExpression	* dctblock		1034794	1					
ANR	1036202	UnaryOperator	*		1034794	0					
ANR	1036203	Identifier	dctblock		1034794	1					
ANR	1036204	PrimaryExpression	64		1034794	1					
ANR	1036205	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	339:16:7563:7608	1034794	31	True				
ANR	1036206	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1034794	0		=			
ANR	1036207	ArrayIndexing	dctblock [ 0 ]		1034794	0					
ANR	1036208	Identifier	dctblock		1034794	0					
ANR	1036209	PrimaryExpression	0		1034794	1					
ANR	1036210	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1034794	1					
ANR	1036211	Callee	get_value		1034794	0					
ANR	1036212	Identifier	get_value		1034794	0					
ANR	1036213	ArgumentList	c		1034794	1					
ANR	1036214	Argument	c		1034794	0					
ANR	1036215	Identifier	c		1034794	0					
ANR	1036216	Argument	BINK_SRC_INTRA_DC		1034794	1					
ANR	1036217	Identifier	BINK_SRC_INTRA_DC		1034794	0					
ANR	1036218	ExpressionStatement	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_intra_quant , - 1 )"	341:16:7627:7689	1034794	32	True				
ANR	1036219	CallExpression	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_intra_quant , - 1 )"		1034794	0					
ANR	1036220	Callee	read_dct_coeffs		1034794	0					
ANR	1036221	Identifier	read_dct_coeffs		1034794	0					
ANR	1036222	ArgumentList	bc		1034794	1					
ANR	1036223	Argument	bc		1034794	0					
ANR	1036224	Identifier	bc		1034794	0					
ANR	1036225	Argument	dctblock		1034794	1					
ANR	1036226	Identifier	dctblock		1034794	0					
ANR	1036227	Argument	bink_scan		1034794	2					
ANR	1036228	Identifier	bink_scan		1034794	0					
ANR	1036229	Argument	bink_intra_quant		1034794	3					
ANR	1036230	Identifier	bink_intra_quant		1034794	0					
ANR	1036231	Argument	- 1		1034794	4					
ANR	1036232	UnaryOperationExpression	- 1		1034794	0					
ANR	1036233	UnaryOperator	-		1034794	0					
ANR	1036234	PrimaryExpression	1		1034794	1					
ANR	1036235	ExpressionStatement	"c -> binkdsp . idct_put ( dst , stride , dctblock )"	343:16:7708:7750	1034794	33	True				
ANR	1036236	CallExpression	"c -> binkdsp . idct_put ( dst , stride , dctblock )"		1034794	0					
ANR	1036237	Callee	c -> binkdsp . idct_put		1034794	0					
ANR	1036238	MemberAccess	c -> binkdsp . idct_put		1034794	0					
ANR	1036239	PtrMemberAccess	c -> binkdsp		1034794	0					
ANR	1036240	Identifier	c		1034794	0					
ANR	1036241	Identifier	binkdsp		1034794	1					
ANR	1036242	Identifier	idct_put		1034794	1					
ANR	1036243	ArgumentList	dst		1034794	1					
ANR	1036244	Argument	dst		1034794	0					
ANR	1036245	Identifier	dst		1034794	0					
ANR	1036246	Argument	stride		1034794	1					
ANR	1036247	Identifier	stride		1034794	0					
ANR	1036248	Argument	dctblock		1034794	2					
ANR	1036249	Identifier	dctblock		1034794	0					
ANR	1036250	BreakStatement	break ;	345:16:7769:7774	1034794	34	True				
ANR	1036251	Label	case FILL_BLOCK :	347:12:7789:7804	1034794	35	True				
ANR	1036252	Identifier	FILL_BLOCK		1034794	0					
ANR	1036253	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	349:16:7823:7856	1034794	36	True				
ANR	1036254	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1036255	Identifier	v		1034794	0					
ANR	1036256	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1036257	Callee	get_value		1034794	0					
ANR	1036258	Identifier	get_value		1034794	0					
ANR	1036259	ArgumentList	c		1034794	1					
ANR	1036260	Argument	c		1034794	0					
ANR	1036261	Identifier	c		1034794	0					
ANR	1036262	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1036263	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1036264	ExpressionStatement	"c -> bdsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"	351:16:7875:7919	1034794	37	True				
ANR	1036265	CallExpression	"c -> bdsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"		1034794	0					
ANR	1036266	Callee	c -> bdsp . fill_block_tab [ 1 ]		1034794	0					
ANR	1036267	ArrayIndexing	c -> bdsp . fill_block_tab [ 1 ]		1034794	0					
ANR	1036268	MemberAccess	c -> bdsp . fill_block_tab		1034794	0					
ANR	1036269	PtrMemberAccess	c -> bdsp		1034794	0					
ANR	1036270	Identifier	c		1034794	0					
ANR	1036271	Identifier	bdsp		1034794	1					
ANR	1036272	Identifier	fill_block_tab		1034794	1					
ANR	1036273	PrimaryExpression	1		1034794	1					
ANR	1036274	ArgumentList	dst		1034794	1					
ANR	1036275	Argument	dst		1034794	0					
ANR	1036276	Identifier	dst		1034794	0					
ANR	1036277	Argument	v		1034794	1					
ANR	1036278	Identifier	v		1034794	0					
ANR	1036279	Argument	stride		1034794	2					
ANR	1036280	Identifier	stride		1034794	0					
ANR	1036281	Argument	8		1034794	3					
ANR	1036282	PrimaryExpression	8		1034794	0					
ANR	1036283	BreakStatement	break ;	353:16:7938:7943	1034794	38	True				
ANR	1036284	Label	case INTER_BLOCK :	355:12:7958:7974	1034794	39	True				
ANR	1036285	Identifier	INTER_BLOCK		1034794	0					
ANR	1036286	ExpressionStatement	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"	357:16:7993:8095	1034794	40	True				
ANR	1036287	AssignmentExpression	"ret = bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	0		=			
ANR	1036288	Identifier	ret		1034794	0					
ANR	1036289	CallExpression	"bink_put_pixels ( c , dst , prev , stride , ref_start , ref_end )"		1034794	1					
ANR	1036290	Callee	bink_put_pixels		1034794	0					
ANR	1036291	Identifier	bink_put_pixels		1034794	0					
ANR	1036292	ArgumentList	c		1034794	1					
ANR	1036293	Argument	c		1034794	0					
ANR	1036294	Identifier	c		1034794	0					
ANR	1036295	Argument	dst		1034794	1					
ANR	1036296	Identifier	dst		1034794	0					
ANR	1036297	Argument	prev		1034794	2					
ANR	1036298	Identifier	prev		1034794	0					
ANR	1036299	Argument	stride		1034794	3					
ANR	1036300	Identifier	stride		1034794	0					
ANR	1036301	Argument	ref_start		1034794	4					
ANR	1036302	Identifier	ref_start		1034794	0					
ANR	1036303	Argument	ref_end		1034794	5					
ANR	1036304	Identifier	ref_end		1034794	0					
ANR	1036305	IfStatement	if ( ret < 0 )		1034794	41					
ANR	1036306	Condition	ret < 0	361:20:8118:8124	1034794	0	True				
ANR	1036307	RelationalExpression	ret < 0		1034794	0		<			
ANR	1036308	Identifier	ret		1034794	0					
ANR	1036309	PrimaryExpression	0		1034794	1					
ANR	1036310	ReturnStatement	return ret ;	363:20:8148:8158	1034794	1	True				
ANR	1036311	Identifier	ret		1034794	0					
ANR	1036312	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	365:16:8177:8220	1034794	42	True				
ANR	1036313	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1034794	0					
ANR	1036314	Callee	memset		1034794	0					
ANR	1036315	Identifier	memset		1034794	0					
ANR	1036316	ArgumentList	dctblock		1034794	1					
ANR	1036317	Argument	dctblock		1034794	0					
ANR	1036318	Identifier	dctblock		1034794	0					
ANR	1036319	Argument	0		1034794	1					
ANR	1036320	PrimaryExpression	0		1034794	0					
ANR	1036321	Argument	sizeof ( * dctblock ) * 64		1034794	2					
ANR	1036322	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1034794	0		*			
ANR	1036323	SizeofExpression	sizeof ( * dctblock )		1034794	0					
ANR	1036324	Sizeof	sizeof		1034794	0					
ANR	1036325	UnaryOperationExpression	* dctblock		1034794	1					
ANR	1036326	UnaryOperator	*		1034794	0					
ANR	1036327	Identifier	dctblock		1034794	1					
ANR	1036328	PrimaryExpression	64		1034794	1					
ANR	1036329	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"	367:16:8239:8284	1034794	43	True				
ANR	1036330	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"		1034794	0		=			
ANR	1036331	ArrayIndexing	dctblock [ 0 ]		1034794	0					
ANR	1036332	Identifier	dctblock		1034794	0					
ANR	1036333	PrimaryExpression	0		1034794	1					
ANR	1036334	CallExpression	"get_value ( c , BINK_SRC_INTER_DC )"		1034794	1					
ANR	1036335	Callee	get_value		1034794	0					
ANR	1036336	Identifier	get_value		1034794	0					
ANR	1036337	ArgumentList	c		1034794	1					
ANR	1036338	Argument	c		1034794	0					
ANR	1036339	Identifier	c		1034794	0					
ANR	1036340	Argument	BINK_SRC_INTER_DC		1034794	1					
ANR	1036341	Identifier	BINK_SRC_INTER_DC		1034794	0					
ANR	1036342	ExpressionStatement	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_inter_quant , - 1 )"	369:16:8303:8365	1034794	44	True				
ANR	1036343	CallExpression	"read_dct_coeffs ( bc , dctblock , bink_scan , bink_inter_quant , - 1 )"		1034794	0					
ANR	1036344	Callee	read_dct_coeffs		1034794	0					
ANR	1036345	Identifier	read_dct_coeffs		1034794	0					
ANR	1036346	ArgumentList	bc		1034794	1					
ANR	1036347	Argument	bc		1034794	0					
ANR	1036348	Identifier	bc		1034794	0					
ANR	1036349	Argument	dctblock		1034794	1					
ANR	1036350	Identifier	dctblock		1034794	0					
ANR	1036351	Argument	bink_scan		1034794	2					
ANR	1036352	Identifier	bink_scan		1034794	0					
ANR	1036353	Argument	bink_inter_quant		1034794	3					
ANR	1036354	Identifier	bink_inter_quant		1034794	0					
ANR	1036355	Argument	- 1		1034794	4					
ANR	1036356	UnaryOperationExpression	- 1		1034794	0					
ANR	1036357	UnaryOperator	-		1034794	0					
ANR	1036358	PrimaryExpression	1		1034794	1					
ANR	1036359	ExpressionStatement	"c -> binkdsp . idct_add ( dst , stride , dctblock )"	371:16:8384:8426	1034794	45	True				
ANR	1036360	CallExpression	"c -> binkdsp . idct_add ( dst , stride , dctblock )"		1034794	0					
ANR	1036361	Callee	c -> binkdsp . idct_add		1034794	0					
ANR	1036362	MemberAccess	c -> binkdsp . idct_add		1034794	0					
ANR	1036363	PtrMemberAccess	c -> binkdsp		1034794	0					
ANR	1036364	Identifier	c		1034794	0					
ANR	1036365	Identifier	binkdsp		1034794	1					
ANR	1036366	Identifier	idct_add		1034794	1					
ANR	1036367	ArgumentList	dst		1034794	1					
ANR	1036368	Argument	dst		1034794	0					
ANR	1036369	Identifier	dst		1034794	0					
ANR	1036370	Argument	stride		1034794	1					
ANR	1036371	Identifier	stride		1034794	0					
ANR	1036372	Argument	dctblock		1034794	2					
ANR	1036373	Identifier	dctblock		1034794	0					
ANR	1036374	BreakStatement	break ;	373:16:8445:8450	1034794	46	True				
ANR	1036375	Label	case PATTERN_BLOCK :	375:12:8465:8483	1034794	47	True				
ANR	1036376	Identifier	PATTERN_BLOCK		1034794	0					
ANR	1036377	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1034794	48					
ANR	1036378	ForInit	i = 0 ;	377:21:8507:8512	1034794	0	True				
ANR	1036379	AssignmentExpression	i = 0		1034794	0		=			
ANR	1036380	Identifier	i		1034794	0					
ANR	1036381	PrimaryExpression	0		1034794	1					
ANR	1036382	Condition	i < 2	377:28:8514:8518	1034794	1	True				
ANR	1036383	RelationalExpression	i < 2		1034794	0		<			
ANR	1036384	Identifier	i		1034794	0					
ANR	1036385	PrimaryExpression	2		1034794	1					
ANR	1036386	PostIncDecOperationExpression	i ++	377:35:8521:8523	1034794	2	True				
ANR	1036387	Identifier	i		1034794	0					
ANR	1036388	IncDec	++		1034794	1					
ANR	1036389	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	379:20:8547:8585	1034794	3	True				
ANR	1036390	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1034794	0		=			
ANR	1036391	ArrayIndexing	col [ i ]		1034794	0					
ANR	1036392	Identifier	col		1034794	0					
ANR	1036393	Identifier	i		1034794	1					
ANR	1036394	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1034794	1					
ANR	1036395	Callee	get_value		1034794	0					
ANR	1036396	Identifier	get_value		1034794	0					
ANR	1036397	ArgumentList	c		1034794	1					
ANR	1036398	Argument	c		1034794	0					
ANR	1036399	Identifier	c		1034794	0					
ANR	1036400	Argument	BINK_SRC_COLORS		1034794	1					
ANR	1036401	Identifier	BINK_SRC_COLORS		1034794	0					
ANR	1036402	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1034794	49					
ANR	1036403	ForInit	i = 0 ;	381:21:8609:8614	1034794	0	True				
ANR	1036404	AssignmentExpression	i = 0		1034794	0		=			
ANR	1036405	Identifier	i		1034794	0					
ANR	1036406	PrimaryExpression	0		1034794	1					
ANR	1036407	Condition	i < 8	381:28:8616:8620	1034794	1	True				
ANR	1036408	RelationalExpression	i < 8		1034794	0		<			
ANR	1036409	Identifier	i		1034794	0					
ANR	1036410	PrimaryExpression	8		1034794	1					
ANR	1036411	PostIncDecOperationExpression	i ++	381:35:8623:8625	1034794	2	True				
ANR	1036412	Identifier	i		1034794	0					
ANR	1036413	IncDec	++		1034794	1					
ANR	1036414	CompoundStatement		377:40:8483:8483	1034794	3					
ANR	1036415	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	383:20:8651:8685	1034794	0	True				
ANR	1036416	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1034794	0		=			
ANR	1036417	Identifier	v		1034794	0					
ANR	1036418	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1034794	1					
ANR	1036419	Callee	get_value		1034794	0					
ANR	1036420	Identifier	get_value		1034794	0					
ANR	1036421	ArgumentList	c		1034794	1					
ANR	1036422	Argument	c		1034794	0					
ANR	1036423	Identifier	c		1034794	0					
ANR	1036424	Argument	BINK_SRC_PATTERN		1034794	1					
ANR	1036425	Identifier	BINK_SRC_PATTERN		1034794	0					
ANR	1036426	ForStatement	"for ( j = 0 ; j < 8 ; j ++ , v >>= 1 )"		1034794	1					
ANR	1036427	ForInit	j = 0 ;	385:25:8713:8718	1034794	0	True				
ANR	1036428	AssignmentExpression	j = 0		1034794	0		=			
ANR	1036429	Identifier	j		1034794	0					
ANR	1036430	PrimaryExpression	0		1034794	1					
ANR	1036431	Condition	j < 8	385:32:8720:8724	1034794	1	True				
ANR	1036432	RelationalExpression	j < 8		1034794	0		<			
ANR	1036433	Identifier	j		1034794	0					
ANR	1036434	PrimaryExpression	8		1034794	1					
ANR	1036435	Expression	"j ++ , v >>= 1"	385:39:8727:8738	1034794	2	True				
ANR	1036436	PostIncDecOperationExpression	j ++		1034794	0					
ANR	1036437	Identifier	j		1034794	0					
ANR	1036438	IncDec	++		1034794	1					
ANR	1036439	AssignmentExpression	v >>= 1		1034794	1		>>=			
ANR	1036440	Identifier	v		1034794	0					
ANR	1036441	PrimaryExpression	1		1034794	1					
ANR	1036442	ExpressionStatement	dst [ i * stride + j ] = col [ v & 1 ]	387:24:8766:8796	1034794	3	True				
ANR	1036443	AssignmentExpression	dst [ i * stride + j ] = col [ v & 1 ]		1034794	0		=			
ANR	1036444	ArrayIndexing	dst [ i * stride + j ]		1034794	0					
ANR	1036445	Identifier	dst		1034794	0					
ANR	1036446	AdditiveExpression	i * stride + j		1034794	1		+			
ANR	1036447	MultiplicativeExpression	i * stride		1034794	0		*			
ANR	1036448	Identifier	i		1034794	0					
ANR	1036449	Identifier	stride		1034794	1					
ANR	1036450	Identifier	j		1034794	1					
ANR	1036451	ArrayIndexing	col [ v & 1 ]		1034794	1					
ANR	1036452	Identifier	col		1034794	0					
ANR	1036453	BitAndExpression	v & 1		1034794	1		&			
ANR	1036454	Identifier	v		1034794	0					
ANR	1036455	PrimaryExpression	1		1034794	1					
ANR	1036456	BreakStatement	break ;	391:16:8834:8839	1034794	50	True				
ANR	1036457	Label	case RAW_BLOCK :	393:12:8854:8868	1034794	51	True				
ANR	1036458	Identifier	RAW_BLOCK		1034794	0					
ANR	1036459	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1034794	52					
ANR	1036460	ForInit	i = 0 ;	395:21:8892:8897	1034794	0	True				
ANR	1036461	AssignmentExpression	i = 0		1034794	0		=			
ANR	1036462	Identifier	i		1034794	0					
ANR	1036463	PrimaryExpression	0		1034794	1					
ANR	1036464	Condition	i < 8	395:28:8899:8903	1034794	1	True				
ANR	1036465	RelationalExpression	i < 8		1034794	0		<			
ANR	1036466	Identifier	i		1034794	0					
ANR	1036467	PrimaryExpression	8		1034794	1					
ANR	1036468	PostIncDecOperationExpression	i ++	395:35:8906:8908	1034794	2	True				
ANR	1036469	Identifier	i		1034794	0					
ANR	1036470	IncDec	++		1034794	1					
ANR	1036471	ExpressionStatement	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"	397:20:8932:8999	1034794	3	True				
ANR	1036472	CallExpression	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"		1034794	0					
ANR	1036473	Callee	memcpy		1034794	0					
ANR	1036474	Identifier	memcpy		1034794	0					
ANR	1036475	ArgumentList	dst + i * stride		1034794	1					
ANR	1036476	Argument	dst + i * stride		1034794	0					
ANR	1036477	AdditiveExpression	dst + i * stride		1034794	0		+			
ANR	1036478	Identifier	dst		1034794	0					
ANR	1036479	MultiplicativeExpression	i * stride		1034794	1		*			
ANR	1036480	Identifier	i		1034794	0					
ANR	1036481	Identifier	stride		1034794	1					
ANR	1036482	Argument	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1034794	1					
ANR	1036483	AdditiveExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1034794	0		+			
ANR	1036484	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1034794	0					
ANR	1036485	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1034794	0					
ANR	1036486	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1036487	Identifier	c		1034794	0					
ANR	1036488	Identifier	bundle		1034794	1					
ANR	1036489	Identifier	BINK_SRC_COLORS		1034794	1					
ANR	1036490	Identifier	cur_ptr		1034794	1					
ANR	1036491	MultiplicativeExpression	i * 8		1034794	1		*			
ANR	1036492	Identifier	i		1034794	0					
ANR	1036493	PrimaryExpression	8		1034794	1					
ANR	1036494	Argument	8		1034794	2					
ANR	1036495	PrimaryExpression	8		1034794	0					
ANR	1036496	ExpressionStatement	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64	399:16:9018:9058	1034794	53	True				
ANR	1036497	AssignmentExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64		1034794	0		+=			
ANR	1036498	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1034794	0					
ANR	1036499	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1034794	0					
ANR	1036500	PtrMemberAccess	c -> bundle		1034794	0					
ANR	1036501	Identifier	c		1034794	0					
ANR	1036502	Identifier	bundle		1034794	1					
ANR	1036503	Identifier	BINK_SRC_COLORS		1034794	1					
ANR	1036504	Identifier	cur_ptr		1034794	1					
ANR	1036505	PrimaryExpression	64		1034794	1					
ANR	1036506	BreakStatement	break ;	401:16:9077:9082	1034794	54	True				
ANR	1036507	Label	default :	403:12:9097:9104	1034794	55	True				
ANR	1036508	Identifier	default		1034794	0					
ANR	1036509	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"	405:16:9123:9185	1034794	56	True				
ANR	1036510	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"		1034794	0					
ANR	1036511	Callee	av_log		1034794	0					
ANR	1036512	Identifier	av_log		1034794	0					
ANR	1036513	ArgumentList	c -> avctx		1034794	1					
ANR	1036514	Argument	c -> avctx		1034794	0					
ANR	1036515	PtrMemberAccess	c -> avctx		1034794	0					
ANR	1036516	Identifier	c		1034794	0					
ANR	1036517	Identifier	avctx		1034794	1					
ANR	1036518	Argument	AV_LOG_ERROR		1034794	1					
ANR	1036519	Identifier	AV_LOG_ERROR		1034794	0					
ANR	1036520	Argument	"""Unknown block type %d\\n"""		1034794	2					
ANR	1036521	PrimaryExpression	"""Unknown block type %d\\n"""		1034794	0					
ANR	1036522	Argument	blk		1034794	3					
ANR	1036523	Identifier	blk		1034794	0					
ANR	1036524	ReturnStatement	return AVERROR_INVALIDDATA ;	407:16:9204:9230	1034794	57	True				
ANR	1036525	Identifier	AVERROR_INVALIDDATA		1034794	0					
ANR	1036526	IfStatement	if ( bitstream_tell ( bc ) & 0x1F )		1034794	49					
ANR	1036527	Condition	bitstream_tell ( bc ) & 0x1F	415:8:9274:9298	1034794	0	True				
ANR	1036528	BitAndExpression	bitstream_tell ( bc ) & 0x1F		1034794	0		&			
ANR	1036529	CallExpression	bitstream_tell ( bc )		1034794	0					
ANR	1036530	Callee	bitstream_tell		1034794	0					
ANR	1036531	Identifier	bitstream_tell		1034794	0					
ANR	1036532	ArgumentList	bc		1034794	1					
ANR	1036533	Argument	bc		1034794	0					
ANR	1036534	Identifier	bc		1034794	0					
ANR	1036535	PrimaryExpression	0x1F		1034794	1					
ANR	1036536	ExpressionStatement	"bitstream_skip ( bc , 32 - ( bitstream_tell ( bc ) & 0x1F ) )"	417:8:9355:9407	1034794	1	True				
ANR	1036537	CallExpression	"bitstream_skip ( bc , 32 - ( bitstream_tell ( bc ) & 0x1F ) )"		1034794	0					
ANR	1036538	Callee	bitstream_skip		1034794	0					
ANR	1036539	Identifier	bitstream_skip		1034794	0					
ANR	1036540	ArgumentList	bc		1034794	1					
ANR	1036541	Argument	bc		1034794	0					
ANR	1036542	Identifier	bc		1034794	0					
ANR	1036543	Argument	32 - ( bitstream_tell ( bc ) & 0x1F )		1034794	1					
ANR	1036544	AdditiveExpression	32 - ( bitstream_tell ( bc ) & 0x1F )		1034794	0		-			
ANR	1036545	PrimaryExpression	32		1034794	0					
ANR	1036546	BitAndExpression	bitstream_tell ( bc ) & 0x1F		1034794	1		&			
ANR	1036547	CallExpression	bitstream_tell ( bc )		1034794	0					
ANR	1036548	Callee	bitstream_tell		1034794	0					
ANR	1036549	Identifier	bitstream_tell		1034794	0					
ANR	1036550	ArgumentList	bc		1034794	1					
ANR	1036551	Argument	bc		1034794	0					
ANR	1036552	Identifier	bc		1034794	0					
ANR	1036553	PrimaryExpression	0x1F		1034794	1					
ANR	1036554	ReturnStatement	return 0 ;	421:4:9416:9424	1034794	50	True				
ANR	1036555	PrimaryExpression	0		1034794	0					
ANR	1036556	ReturnType	static int		1034794	1					
ANR	1036557	Identifier	bink_decode_plane		1034794	2					
ANR	1036558	ParameterList	"BinkContext * c , AVFrame * frame , BitstreamContext * bc , int plane_idx , int is_chroma"		1034794	3					
ANR	1036559	Parameter	BinkContext * c	1:29:29:42	1034794	0	True				
ANR	1036560	ParameterType	BinkContext *		1034794	0					
ANR	1036561	Identifier	c		1034794	1					
ANR	1036562	Parameter	AVFrame * frame	1:45:45:58	1034794	1	True				
ANR	1036563	ParameterType	AVFrame *		1034794	0					
ANR	1036564	Identifier	frame		1034794	1					
ANR	1036565	Parameter	BitstreamContext * bc	1:61:61:80	1034794	2	True				
ANR	1036566	ParameterType	BitstreamContext *		1034794	0					
ANR	1036567	Identifier	bc		1034794	1					
ANR	1036568	Parameter	int plane_idx	3:29:113:125	1034794	3	True				
ANR	1036569	ParameterType	int		1034794	0					
ANR	1036570	Identifier	plane_idx		1034794	1					
ANR	1036571	Parameter	int is_chroma	3:44:128:140	1034794	4	True				
ANR	1036572	ParameterType	int		1034794	0					
ANR	1036573	Identifier	is_chroma		1034794	1					
ANR	1036574	CFGEntryNode	ENTRY		1034794		True				
ANR	1036575	CFGExitNode	EXIT		1034794		True				
ANR	1036576	Symbol	* v		1034794						
ANR	1036577	Symbol	* bitstream_read		1034794						
ANR	1036578	Symbol	* stride		1034794						
ANR	1036579	Symbol	ref_start		1034794						
ANR	1036580	Symbol	BINK_NB_SRC		1034794						
ANR	1036581	Symbol	ublock		1034794						
ANR	1036582	Symbol	prev		1034794						
ANR	1036583	Symbol	c -> last -> data		1034794						
ANR	1036584	Symbol	stride		1034794						
ANR	1036585	Symbol	c -> binkdsp		1034794						
ANR	1036586	Symbol	* ublock		1034794						
ANR	1036587	Symbol	BINK_SRC_RUN		1034794						
ANR	1036588	Symbol	bink_scan		1034794						
ANR	1036589	Symbol	block		1034794						
ANR	1036590	Symbol	* coordmap		1034794						
ANR	1036591	Symbol	read_patterns		1034794						
ANR	1036592	Symbol	FILL_BLOCK		1034794						
ANR	1036593	Symbol	BINK_SRC_BLOCK_TYPES		1034794						
ANR	1036594	Symbol	* dctblock		1034794						
ANR	1036595	Symbol	* * * scan ++		1034794						
ANR	1036596	Symbol	BINK_SRC_SUB_BLOCK_TYPES		1034794						
ANR	1036597	Symbol	* * coordmap		1034794						
ANR	1036598	Symbol	get_value		1034794						
ANR	1036599	Symbol	* c -> hdsp . put_pixels_tab		1034794						
ANR	1036600	Symbol	* * * c		1034794						
ANR	1036601	Symbol	c -> last		1034794						
ANR	1036602	Symbol	bc		1034794						
ANR	1036603	Symbol	* * c -> last		1034794						
ANR	1036604	Symbol	* c -> avctx		1034794						
ANR	1036605	Symbol	bh		1034794						
ANR	1036606	Symbol	scan		1034794						
ANR	1036607	Symbol	dctblock		1034794						
ANR	1036608	Symbol	bw		1034794						
ANR	1036609	Symbol	bx		1034794						
ANR	1036610	Symbol	* bink_patterns		1034794						
ANR	1036611	Symbol	by		1034794						
ANR	1036612	Symbol	read_colors		1034794						
ANR	1036613	Symbol	BINK_SRC_Y_OFF		1034794						
ANR	1036614	Symbol	blk		1034794						
ANR	1036615	Symbol	c		1034794						
ANR	1036616	Symbol	AV_LOG_ERROR		1034794						
ANR	1036617	Symbol	* frame -> linesize		1034794						
ANR	1036618	Symbol	i		1034794						
ANR	1036619	Symbol	j		1034794						
ANR	1036620	Symbol	c -> hdsp . put_pixels_tab		1034794						
ANR	1036621	Symbol	SCALED_BLOCK		1034794						
ANR	1036622	Symbol	c -> last -> linesize		1034794						
ANR	1036623	Symbol	read_motion_values		1034794						
ANR	1036624	Symbol	v		1034794						
ANR	1036625	Symbol	c -> avctx -> height		1034794						
ANR	1036626	Symbol	width		1034794						
ANR	1036627	Symbol	AVERROR_INVALIDDATA		1034794						
ANR	1036628	Symbol	c -> hdsp		1034794						
ANR	1036629	Symbol	FFMAX		1034794						
ANR	1036630	Symbol	coordmap		1034794						
ANR	1036631	Symbol	col		1034794						
ANR	1036632	Symbol	c -> bundle		1034794						
ANR	1036633	Symbol	ref_end		1034794						
ANR	1036634	Symbol	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1034794						
ANR	1036635	Symbol	run		1034794						
ANR	1036636	Symbol	* * scan ++		1034794						
ANR	1036637	Symbol	* dst		1034794						
ANR	1036638	Symbol	* * frame		1034794						
ANR	1036639	Symbol	bink_intra_quant		1034794						
ANR	1036640	Symbol	* BINK_SRC_COLORS		1034794						
ANR	1036641	Symbol	frame -> data		1034794						
ANR	1036642	Symbol	ret		1034794						
ANR	1036643	Symbol	BINK_SRC_PATTERN		1034794						
ANR	1036644	Symbol	c -> bdsp		1034794						
ANR	1036645	Symbol	* * c		1034794						
ANR	1036646	Symbol	* scan ++		1034794						
ANR	1036647	Symbol	DC_START_BITS		1034794						
ANR	1036648	Symbol	bitstream_read_bit		1034794						
ANR	1036649	Symbol	is_chroma		1034794						
ANR	1036650	Symbol	* plane_idx		1034794						
ANR	1036651	Symbol	c -> avctx		1034794						
ANR	1036652	Symbol	* c -> last -> data		1034794						
ANR	1036653	Symbol	BINK_SRC_COLORS		1034794						
ANR	1036654	Symbol	* c -> hdsp		1034794						
ANR	1036655	Symbol	bink_inter_quant		1034794						
ANR	1036656	Symbol	frame		1034794						
ANR	1036657	Symbol	* frame -> data		1034794						
ANR	1036658	Symbol	* c -> last -> linesize		1034794						
ANR	1036659	Symbol	dst		1034794						
ANR	1036660	Symbol	* frame		1034794						
ANR	1036661	Symbol	bitstream_tell		1034794						
ANR	1036662	Symbol	plane_idx		1034794						
ANR	1036663	Symbol	c -> bdsp . fill_block_tab		1034794						
ANR	1036664	Symbol	* col		1034794						
ANR	1036665	Symbol	* c -> bundle		1034794						
ANR	1036666	Symbol	bink_patterns		1034794						
ANR	1036667	Symbol	bink_put_pixels		1034794						
ANR	1036668	Symbol	frame -> linesize		1034794						
ANR	1036669	Symbol	c -> avctx -> width		1034794						
ANR	1036670	Symbol	read_dcs		1034794						
ANR	1036671	Symbol	BINK_SRC_INTER_DC		1034794						
ANR	1036672	Symbol	bitstream_read		1034794						
ANR	1036673	Symbol	* c		1034794						
ANR	1036674	Symbol	BINK_SRC_X_OFF		1034794						
ANR	1036675	Symbol	read_runs		1034794						
ANR	1036676	Symbol	BINK_SRC_INTRA_DC		1034794						
ANR	1036677	Symbol	* i		1034794						
ANR	1036678	Symbol	* j		1034794						
ANR	1036679	Symbol	* c -> last		1034794						
ANR	1036680	Symbol	read_block_types		1034794						
