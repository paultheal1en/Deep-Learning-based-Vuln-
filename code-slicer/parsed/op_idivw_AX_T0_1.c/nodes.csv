command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6198059	File	/home/p4ultr4n/workplace/ReVeal/raw_code/op_idivw_AX_T0_1.c								
ANR	6198060	Function	op_idivw_AX_T0	1:0:0:334							
ANR	6198061	FunctionDef	op_idivw_AX_T0 ()		6198060	0					
ANR	6198062	CompoundStatement		3:0:35:334	6198060	0					
ANR	6198063	IdentifierDeclStatement	"int num , den , q , r ;"	5:4:42:60	6198060	0	True				
ANR	6198064	IdentifierDecl	num		6198060	0					
ANR	6198065	IdentifierDeclType	int		6198060	0					
ANR	6198066	Identifier	num		6198060	1					
ANR	6198067	IdentifierDecl	den		6198060	1					
ANR	6198068	IdentifierDeclType	int		6198060	0					
ANR	6198069	Identifier	den		6198060	1					
ANR	6198070	IdentifierDecl	q		6198060	2					
ANR	6198071	IdentifierDeclType	int		6198060	0					
ANR	6198072	Identifier	q		6198060	1					
ANR	6198073	IdentifierDecl	r		6198060	3					
ANR	6198074	IdentifierDeclType	int		6198060	0					
ANR	6198075	Identifier	r		6198060	1					
ANR	6198076	ExpressionStatement	num = ( EAX & 0xffff ) | ( ( EDX & 0xffff ) << 16 )	9:4:69:114	6198060	1	True				
ANR	6198077	AssignmentExpression	num = ( EAX & 0xffff ) | ( ( EDX & 0xffff ) << 16 )		6198060	0		=			
ANR	6198078	Identifier	num		6198060	0					
ANR	6198079	InclusiveOrExpression	( EAX & 0xffff ) | ( ( EDX & 0xffff ) << 16 )		6198060	1		|			
ANR	6198080	BitAndExpression	EAX & 0xffff		6198060	0		&			
ANR	6198081	Identifier	EAX		6198060	0					
ANR	6198082	PrimaryExpression	0xffff		6198060	1					
ANR	6198083	ShiftExpression	( EDX & 0xffff ) << 16		6198060	1		<<			
ANR	6198084	BitAndExpression	EDX & 0xffff		6198060	0		&			
ANR	6198085	Identifier	EDX		6198060	0					
ANR	6198086	PrimaryExpression	0xffff		6198060	1					
ANR	6198087	PrimaryExpression	16		6198060	1					
ANR	6198088	ExpressionStatement	den = ( int16_t ) T0	11:4:121:138	6198060	2	True				
ANR	6198089	AssignmentExpression	den = ( int16_t ) T0		6198060	0		=			
ANR	6198090	Identifier	den		6198060	0					
ANR	6198091	CastExpression	( int16_t ) T0		6198060	1					
ANR	6198092	CastTarget	int16_t		6198060	0					
ANR	6198093	Identifier	T0		6198060	1					
ANR	6198094	IfStatement	if ( den == 0 )		6198060	3					
ANR	6198095	Condition	den == 0	13:8:149:156	6198060	0	True				
ANR	6198096	EqualityExpression	den == 0		6198060	0		==			
ANR	6198097	Identifier	den		6198060	0					
ANR	6198098	PrimaryExpression	0		6198060	1					
ANR	6198099	CompoundStatement		11:18:123:123	6198060	1					
ANR	6198100	ExpressionStatement	raise_exception ( EXCP00_DIVZ )	15:8:170:198	6198060	0	True				
ANR	6198101	CallExpression	raise_exception ( EXCP00_DIVZ )		6198060	0					
ANR	6198102	Callee	raise_exception		6198060	0					
ANR	6198103	Identifier	raise_exception		6198060	0					
ANR	6198104	ArgumentList	EXCP00_DIVZ		6198060	1					
ANR	6198105	Argument	EXCP00_DIVZ		6198060	0					
ANR	6198106	Identifier	EXCP00_DIVZ		6198060	0					
ANR	6198107	ExpressionStatement	q = ( num / den ) & 0xffff	19:4:212:236	6198060	4	True				
ANR	6198108	AssignmentExpression	q = ( num / den ) & 0xffff		6198060	0		=			
ANR	6198109	Identifier	q		6198060	0					
ANR	6198110	BitAndExpression	( num / den ) & 0xffff		6198060	1		&			
ANR	6198111	MultiplicativeExpression	num / den		6198060	0		/			
ANR	6198112	Identifier	num		6198060	0					
ANR	6198113	Identifier	den		6198060	1					
ANR	6198114	PrimaryExpression	0xffff		6198060	1					
ANR	6198115	ExpressionStatement	r = ( num % den ) & 0xffff	21:4:243:267	6198060	5	True				
ANR	6198116	AssignmentExpression	r = ( num % den ) & 0xffff		6198060	0		=			
ANR	6198117	Identifier	r		6198060	0					
ANR	6198118	BitAndExpression	( num % den ) & 0xffff		6198060	1		&			
ANR	6198119	MultiplicativeExpression	num % den		6198060	0		%			
ANR	6198120	Identifier	num		6198060	0					
ANR	6198121	Identifier	den		6198060	1					
ANR	6198122	PrimaryExpression	0xffff		6198060	1					
ANR	6198123	ExpressionStatement	EAX = ( EAX & ~0xffff ) | q	23:4:274:299	6198060	6	True				
ANR	6198124	AssignmentExpression	EAX = ( EAX & ~0xffff ) | q		6198060	0		=			
ANR	6198125	Identifier	EAX		6198060	0					
ANR	6198126	InclusiveOrExpression	( EAX & ~0xffff ) | q		6198060	1		|			
ANR	6198127	BitAndExpression	EAX & ~0xffff		6198060	0		&			
ANR	6198128	Identifier	EAX		6198060	0					
ANR	6198129	Identifier	~0xffff		6198060	1					
ANR	6198130	Identifier	q		6198060	1					
ANR	6198131	ExpressionStatement	EDX = ( EDX & ~0xffff ) | r	25:4:306:331	6198060	7	True				
ANR	6198132	AssignmentExpression	EDX = ( EDX & ~0xffff ) | r		6198060	0		=			
ANR	6198133	Identifier	EDX		6198060	0					
ANR	6198134	InclusiveOrExpression	( EDX & ~0xffff ) | r		6198060	1		|			
ANR	6198135	BitAndExpression	EDX & ~0xffff		6198060	0		&			
ANR	6198136	Identifier	EDX		6198060	0					
ANR	6198137	Identifier	~0xffff		6198060	1					
ANR	6198138	Identifier	r		6198060	1					
ANR	6198139	ReturnType	void OPPROTO		6198060	1					
ANR	6198140	Identifier	op_idivw_AX_T0		6198060	2					
ANR	6198141	ParameterList			6198060	3					
ANR	6198142	CFGEntryNode	ENTRY		6198060		True				
ANR	6198143	CFGExitNode	EXIT		6198060		True				
ANR	6198144	Symbol	EXCP00_DIVZ		6198060						
ANR	6198145	Symbol	q		6198060						
ANR	6198146	Symbol	r		6198060						
ANR	6198147	Symbol	~0xffff		6198060						
ANR	6198148	Symbol	num		6198060						
ANR	6198149	Symbol	EDX		6198060						
ANR	6198150	Symbol	den		6198060						
ANR	6198151	Symbol	T0		6198060						
ANR	6198152	Symbol	EAX		6198060						
