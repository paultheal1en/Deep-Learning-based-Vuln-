command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1368059	File	/home/p4ultr4n/workplace/ReVeal/raw_code/compute_default_clut_0.c								
ANR	1368060	Function	compute_default_clut	1:0:0:1825							
ANR	1368061	FunctionDef	"compute_default_clut (AVSubtitleRect * rect , int w , int h)"		1368060	0					
ANR	1368062	CompoundStatement		3:0:70:1825	1368060	0					
ANR	1368063	IdentifierDeclStatement	uint8_t list [ 256 ] = { 0 } ;	5:4:77:100	1368060	0	True				
ANR	1368064	IdentifierDecl	list [ 256 ] = { 0 }		1368060	0					
ANR	1368065	IdentifierDeclType	uint8_t [ 256 ]		1368060	0					
ANR	1368066	Identifier	list		1368060	1					
ANR	1368067	PrimaryExpression	256		1368060	2					
ANR	1368068	AssignmentExpression	list [ 256 ] = { 0 }		1368060	3		=			
ANR	1368069	Identifier	list		1368060	0					
ANR	1368070	InitializerList	0		1368060	1					
ANR	1368071	PrimaryExpression	0		1368060	0					
ANR	1368072	IdentifierDeclStatement	uint8_t list_inv [ 256 ] ;	7:4:107:128	1368060	1	True				
ANR	1368073	IdentifierDecl	list_inv [ 256 ]		1368060	0					
ANR	1368074	IdentifierDeclType	uint8_t [ 256 ]		1368060	0					
ANR	1368075	Identifier	list_inv		1368060	1					
ANR	1368076	PrimaryExpression	256		1368060	2					
ANR	1368077	IdentifierDeclStatement	int counttab [ 256 ] = { 0 } ;	9:4:135:158	1368060	2	True				
ANR	1368078	IdentifierDecl	counttab [ 256 ] = { 0 }		1368060	0					
ANR	1368079	IdentifierDeclType	int [ 256 ]		1368060	0					
ANR	1368080	Identifier	counttab		1368060	1					
ANR	1368081	PrimaryExpression	256		1368060	2					
ANR	1368082	AssignmentExpression	counttab [ 256 ] = { 0 }		1368060	3		=			
ANR	1368083	Identifier	counttab		1368060	0					
ANR	1368084	InitializerList	0		1368060	1					
ANR	1368085	PrimaryExpression	0		1368060	0					
ANR	1368086	IdentifierDeclStatement	"int count , i , x , y ;"	11:4:165:183	1368060	3	True				
ANR	1368087	IdentifierDecl	count		1368060	0					
ANR	1368088	IdentifierDeclType	int		1368060	0					
ANR	1368089	Identifier	count		1368060	1					
ANR	1368090	IdentifierDecl	i		1368060	1					
ANR	1368091	IdentifierDeclType	int		1368060	0					
ANR	1368092	Identifier	i		1368060	1					
ANR	1368093	IdentifierDecl	x		1368060	2					
ANR	1368094	IdentifierDeclType	int		1368060	0					
ANR	1368095	Identifier	x		1368060	1					
ANR	1368096	IdentifierDecl	y		1368060	3					
ANR	1368097	IdentifierDeclType	int		1368060	0					
ANR	1368098	Identifier	y		1368060	1					
ANR	1368099	Statement	define	15:1:189:194	1368060	4	True				
ANR	1368100	Statement	V	15:8:196:196	1368060	5	True				
ANR	1368101	Statement	(	15:9:197:197	1368060	6	True				
ANR	1368102	Statement	x	15:10:198:198	1368060	7	True				
ANR	1368103	Statement	","	15:11:199:199	1368060	8	True				
ANR	1368104	Statement	y	15:12:200:200	1368060	9	True				
ANR	1368105	Statement	)	15:13:201:201	1368060	10	True				
ANR	1368106	Statement	rect	15:15:203:206	1368060	11	True				
ANR	1368107	Statement	->	15:19:207:208	1368060	12	True				
ANR	1368108	Statement	data	15:21:209:212	1368060	13	True				
ANR	1368109	Statement	[	15:25:213:213	1368060	14	True				
ANR	1368110	Statement	0	15:26:214:214	1368060	15	True				
ANR	1368111	Statement	]	15:27:215:215	1368060	16	True				
ANR	1368112	Statement	[	15:28:216:216	1368060	17	True				
ANR	1368113	Statement	(	15:29:217:217	1368060	18	True				
ANR	1368114	Statement	x	15:30:218:218	1368060	19	True				
ANR	1368115	Statement	)	15:31:219:219	1368060	20	True				
ANR	1368116	Statement	+	15:33:221:221	1368060	21	True				
ANR	1368117	Statement	(	15:35:223:223	1368060	22	True				
ANR	1368118	Statement	y	15:36:224:224	1368060	23	True				
ANR	1368119	Statement	)	15:37:225:225	1368060	24	True				
ANR	1368120	Statement	*	15:38:226:226	1368060	25	True				
ANR	1368121	Statement	rect	15:39:227:230	1368060	26	True				
ANR	1368122	Statement	->	15:43:231:232	1368060	27	True				
ANR	1368123	Statement	linesize	15:45:233:240	1368060	28	True				
ANR	1368124	Statement	[	15:53:241:241	1368060	29	True				
ANR	1368125	Statement	0	15:54:242:242	1368060	30	True				
ANR	1368126	Statement	]	15:55:243:243	1368060	31	True				
ANR	1368127	Statement	]	15:56:244:244	1368060	32	True				
ANR	1368128	ForStatement	for ( y = 0 ; y < h ; y ++ )		1368060	33					
ANR	1368129	ForInit	y = 0 ;	17:9:256:261	1368060	0	True				
ANR	1368130	AssignmentExpression	y = 0		1368060	0		=			
ANR	1368131	Identifier	y		1368060	0					
ANR	1368132	PrimaryExpression	0		1368060	1					
ANR	1368133	Condition	y < h	17:16:263:265	1368060	1	True				
ANR	1368134	RelationalExpression	y < h		1368060	0		<			
ANR	1368135	Identifier	y		1368060	0					
ANR	1368136	Identifier	h		1368060	1					
ANR	1368137	PostIncDecOperationExpression	y ++	17:21:268:270	1368060	2	True				
ANR	1368138	Identifier	y		1368060	0					
ANR	1368139	IncDec	++		1368060	1					
ANR	1368140	CompoundStatement		15:26:202:202	1368060	3					
ANR	1368141	ForStatement	for ( x = 0 ; x < w ; x ++ )		1368060	0					
ANR	1368142	ForInit	x = 0 ;	19:13:289:294	1368060	0	True				
ANR	1368143	AssignmentExpression	x = 0		1368060	0		=			
ANR	1368144	Identifier	x		1368060	0					
ANR	1368145	PrimaryExpression	0		1368060	1					
ANR	1368146	Condition	x < w	19:20:296:298	1368060	1	True				
ANR	1368147	RelationalExpression	x < w		1368060	0		<			
ANR	1368148	Identifier	x		1368060	0					
ANR	1368149	Identifier	w		1368060	1					
ANR	1368150	PostIncDecOperationExpression	x ++	19:25:301:303	1368060	2	True				
ANR	1368151	Identifier	x		1368060	0					
ANR	1368152	IncDec	++		1368060	1					
ANR	1368153	CompoundStatement		27:12:427:460	1368060	3					
ANR	1368154	IdentifierDeclStatement	"int v = V ( x , y ) + 1 ;"	21:12:321:339	1368060	0	True				
ANR	1368155	IdentifierDecl	"v = V ( x , y ) + 1"		1368060	0					
ANR	1368156	IdentifierDeclType	int		1368060	0					
ANR	1368157	Identifier	v		1368060	1					
ANR	1368158	AssignmentExpression	"v = V ( x , y ) + 1"		1368060	2		=			
ANR	1368159	Identifier	v		1368060	0					
ANR	1368160	AdditiveExpression	"V ( x , y ) + 1"		1368060	1		+			
ANR	1368161	CallExpression	"V ( x , y )"		1368060	0					
ANR	1368162	Callee	V		1368060	0					
ANR	1368163	Identifier	V		1368060	0					
ANR	1368164	ArgumentList	x		1368060	1					
ANR	1368165	Argument	x		1368060	0					
ANR	1368166	Identifier	x		1368060	0					
ANR	1368167	Argument	y		1368060	1					
ANR	1368168	Identifier	y		1368060	0					
ANR	1368169	PrimaryExpression	1		1368060	1					
ANR	1368170	IdentifierDeclStatement	"int vl = x ? V ( x - 1 , y ) + 1 : 0 ;"	23:12:354:387	1368060	1	True				
ANR	1368171	IdentifierDecl	"vl = x ? V ( x - 1 , y ) + 1 : 0"		1368060	0					
ANR	1368172	IdentifierDeclType	int		1368060	0					
ANR	1368173	Identifier	vl		1368060	1					
ANR	1368174	AssignmentExpression	"vl = x ? V ( x - 1 , y ) + 1 : 0"		1368060	2		=			
ANR	1368175	Identifier	vl		1368060	0					
ANR	1368176	ConditionalExpression	"x ? V ( x - 1 , y ) + 1 : 0"		1368060	1					
ANR	1368177	Condition	x		1368060	0					
ANR	1368178	Identifier	x		1368060	0					
ANR	1368179	AdditiveExpression	"V ( x - 1 , y ) + 1"		1368060	1		+			
ANR	1368180	CallExpression	"V ( x - 1 , y )"		1368060	0					
ANR	1368181	Callee	V		1368060	0					
ANR	1368182	Identifier	V		1368060	0					
ANR	1368183	ArgumentList	x - 1		1368060	1					
ANR	1368184	Argument	x - 1		1368060	0					
ANR	1368185	AdditiveExpression	x - 1		1368060	0		-			
ANR	1368186	Identifier	x		1368060	0					
ANR	1368187	PrimaryExpression	1		1368060	1					
ANR	1368188	Argument	y		1368060	1					
ANR	1368189	Identifier	y		1368060	0					
ANR	1368190	PrimaryExpression	1		1368060	1					
ANR	1368191	PrimaryExpression	0		1368060	2					
ANR	1368192	IdentifierDeclStatement	"int vr = x + 1 < w ? V ( x + 1 , y ) + 1 : 0 ;"	25:12:402:435	1368060	2	True				
ANR	1368193	IdentifierDecl	"vr = x + 1 < w ? V ( x + 1 , y ) + 1 : 0"		1368060	0					
ANR	1368194	IdentifierDeclType	int		1368060	0					
ANR	1368195	Identifier	vr		1368060	1					
ANR	1368196	AssignmentExpression	"vr = x + 1 < w ? V ( x + 1 , y ) + 1 : 0"		1368060	2		=			
ANR	1368197	Identifier	vr		1368060	0					
ANR	1368198	ConditionalExpression	"x + 1 < w ? V ( x + 1 , y ) + 1 : 0"		1368060	1					
ANR	1368199	Condition	x + 1 < w		1368060	0					
ANR	1368200	RelationalExpression	x + 1 < w		1368060	0		<			
ANR	1368201	AdditiveExpression	x + 1		1368060	0		+			
ANR	1368202	Identifier	x		1368060	0					
ANR	1368203	PrimaryExpression	1		1368060	1					
ANR	1368204	Identifier	w		1368060	1					
ANR	1368205	AdditiveExpression	"V ( x + 1 , y ) + 1"		1368060	1		+			
ANR	1368206	CallExpression	"V ( x + 1 , y )"		1368060	0					
ANR	1368207	Callee	V		1368060	0					
ANR	1368208	Identifier	V		1368060	0					
ANR	1368209	ArgumentList	x + 1		1368060	1					
ANR	1368210	Argument	x + 1		1368060	0					
ANR	1368211	AdditiveExpression	x + 1		1368060	0		+			
ANR	1368212	Identifier	x		1368060	0					
ANR	1368213	PrimaryExpression	1		1368060	1					
ANR	1368214	Argument	y		1368060	1					
ANR	1368215	Identifier	y		1368060	0					
ANR	1368216	PrimaryExpression	1		1368060	1					
ANR	1368217	PrimaryExpression	0		1368060	2					
ANR	1368218	IdentifierDeclStatement	"int vt = y ? V ( x , y - 1 ) + 1 : 0 ;"	27:12:450:483	1368060	3	True				
ANR	1368219	IdentifierDecl	"vt = y ? V ( x , y - 1 ) + 1 : 0"		1368060	0					
ANR	1368220	IdentifierDeclType	int		1368060	0					
ANR	1368221	Identifier	vt		1368060	1					
ANR	1368222	AssignmentExpression	"vt = y ? V ( x , y - 1 ) + 1 : 0"		1368060	2		=			
ANR	1368223	Identifier	vt		1368060	0					
ANR	1368224	ConditionalExpression	"y ? V ( x , y - 1 ) + 1 : 0"		1368060	1					
ANR	1368225	Condition	y		1368060	0					
ANR	1368226	Identifier	y		1368060	0					
ANR	1368227	AdditiveExpression	"V ( x , y - 1 ) + 1"		1368060	1		+			
ANR	1368228	CallExpression	"V ( x , y - 1 )"		1368060	0					
ANR	1368229	Callee	V		1368060	0					
ANR	1368230	Identifier	V		1368060	0					
ANR	1368231	ArgumentList	x		1368060	1					
ANR	1368232	Argument	x		1368060	0					
ANR	1368233	Identifier	x		1368060	0					
ANR	1368234	Argument	y - 1		1368060	1					
ANR	1368235	AdditiveExpression	y - 1		1368060	0		-			
ANR	1368236	Identifier	y		1368060	0					
ANR	1368237	PrimaryExpression	1		1368060	1					
ANR	1368238	PrimaryExpression	1		1368060	1					
ANR	1368239	PrimaryExpression	0		1368060	2					
ANR	1368240	IdentifierDeclStatement	"int vb = y + 1 < h ? V ( x , y + 1 ) + 1 : 0 ;"	29:12:498:531	1368060	4	True				
ANR	1368241	IdentifierDecl	"vb = y + 1 < h ? V ( x , y + 1 ) + 1 : 0"		1368060	0					
ANR	1368242	IdentifierDeclType	int		1368060	0					
ANR	1368243	Identifier	vb		1368060	1					
ANR	1368244	AssignmentExpression	"vb = y + 1 < h ? V ( x , y + 1 ) + 1 : 0"		1368060	2		=			
ANR	1368245	Identifier	vb		1368060	0					
ANR	1368246	ConditionalExpression	"y + 1 < h ? V ( x , y + 1 ) + 1 : 0"		1368060	1					
ANR	1368247	Condition	y + 1 < h		1368060	0					
ANR	1368248	RelationalExpression	y + 1 < h		1368060	0		<			
ANR	1368249	AdditiveExpression	y + 1		1368060	0		+			
ANR	1368250	Identifier	y		1368060	0					
ANR	1368251	PrimaryExpression	1		1368060	1					
ANR	1368252	Identifier	h		1368060	1					
ANR	1368253	AdditiveExpression	"V ( x , y + 1 ) + 1"		1368060	1		+			
ANR	1368254	CallExpression	"V ( x , y + 1 )"		1368060	0					
ANR	1368255	Callee	V		1368060	0					
ANR	1368256	Identifier	V		1368060	0					
ANR	1368257	ArgumentList	x		1368060	1					
ANR	1368258	Argument	x		1368060	0					
ANR	1368259	Identifier	x		1368060	0					
ANR	1368260	Argument	y + 1		1368060	1					
ANR	1368261	AdditiveExpression	y + 1		1368060	0		+			
ANR	1368262	Identifier	y		1368060	0					
ANR	1368263	PrimaryExpression	1		1368060	1					
ANR	1368264	PrimaryExpression	1		1368060	1					
ANR	1368265	PrimaryExpression	0		1368060	2					
ANR	1368266	ExpressionStatement	counttab [ v - 1 ] += ! ! ( ( v != vl ) + ( v != vr ) + ( v != vt ) + ( v != vb ) )	31:12:546:604	1368060	5	True				
ANR	1368267	AssignmentExpression	counttab [ v - 1 ] += ! ! ( ( v != vl ) + ( v != vr ) + ( v != vt ) + ( v != vb ) )		1368060	0		+=			
ANR	1368268	ArrayIndexing	counttab [ v - 1 ]		1368060	0					
ANR	1368269	Identifier	counttab		1368060	0					
ANR	1368270	AdditiveExpression	v - 1		1368060	1		-			
ANR	1368271	Identifier	v		1368060	0					
ANR	1368272	PrimaryExpression	1		1368060	1					
ANR	1368273	UnaryOperationExpression	! ! ( ( v != vl ) + ( v != vr ) + ( v != vt ) + ( v != vb ) )		1368060	1					
ANR	1368274	UnaryOperator	!		1368060	0					
ANR	1368275	UnaryOperationExpression	! ( ( v != vl ) + ( v != vr ) + ( v != vt ) + ( v != vb ) )		1368060	1					
ANR	1368276	UnaryOperator	!		1368060	0					
ANR	1368277	AdditiveExpression	( v != vl ) + ( v != vr ) + ( v != vt ) + ( v != vb )		1368060	1		+			
ANR	1368278	EqualityExpression	v != vl		1368060	0		!=			
ANR	1368279	Identifier	v		1368060	0					
ANR	1368280	Identifier	vl		1368060	1					
ANR	1368281	AdditiveExpression	( v != vr ) + ( v != vt ) + ( v != vb )		1368060	1		+			
ANR	1368282	EqualityExpression	v != vr		1368060	0		!=			
ANR	1368283	Identifier	v		1368060	0					
ANR	1368284	Identifier	vr		1368060	1					
ANR	1368285	AdditiveExpression	( v != vt ) + ( v != vb )		1368060	1		+			
ANR	1368286	EqualityExpression	v != vt		1368060	0		!=			
ANR	1368287	Identifier	v		1368060	0					
ANR	1368288	Identifier	vt		1368060	1					
ANR	1368289	EqualityExpression	v != vb		1368060	1		!=			
ANR	1368290	Identifier	v		1368060	0					
ANR	1368291	Identifier	vb		1368060	1					
ANR	1368292	Statement	define	37:1:626:631	1368060	34	True				
ANR	1368293	Statement	L	37:8:633:633	1368060	35	True				
ANR	1368294	Statement	(	37:9:634:634	1368060	36	True				
ANR	1368295	Statement	x	37:10:635:635	1368060	37	True				
ANR	1368296	Statement	","	37:11:636:636	1368060	38	True				
ANR	1368297	Statement	y	37:12:637:637	1368060	39	True				
ANR	1368298	Statement	)	37:13:638:638	1368060	40	True				
ANR	1368299	Statement	list	37:15:640:643	1368060	41	True				
ANR	1368300	Statement	[	37:19:644:644	1368060	42	True				
ANR	1368301	Statement	rect	37:21:646:649	1368060	43	True				
ANR	1368302	Statement	->	37:25:650:651	1368060	44	True				
ANR	1368303	Statement	data	37:27:652:655	1368060	45	True				
ANR	1368304	Statement	[	37:31:656:656	1368060	46	True				
ANR	1368305	Statement	0	37:32:657:657	1368060	47	True				
ANR	1368306	Statement	]	37:33:658:658	1368060	48	True				
ANR	1368307	Statement	[	37:34:659:659	1368060	49	True				
ANR	1368308	Statement	(	37:35:660:660	1368060	50	True				
ANR	1368309	Statement	x	37:36:661:661	1368060	51	True				
ANR	1368310	Statement	)	37:37:662:662	1368060	52	True				
ANR	1368311	Statement	+	37:39:664:664	1368060	53	True				
ANR	1368312	Statement	(	37:41:666:666	1368060	54	True				
ANR	1368313	Statement	y	37:42:667:667	1368060	55	True				
ANR	1368314	Statement	)	37:43:668:668	1368060	56	True				
ANR	1368315	Statement	*	37:44:669:669	1368060	57	True				
ANR	1368316	Statement	rect	37:45:670:673	1368060	58	True				
ANR	1368317	Statement	->	37:49:674:675	1368060	59	True				
ANR	1368318	Statement	linesize	37:51:676:683	1368060	60	True				
ANR	1368319	Statement	[	37:59:684:684	1368060	61	True				
ANR	1368320	Statement	0	37:60:685:685	1368060	62	True				
ANR	1368321	Statement	]	37:61:686:686	1368060	63	True				
ANR	1368322	Statement	]	37:62:687:687	1368060	64	True				
ANR	1368323	Statement	]	37:64:689:689	1368060	65	True				
ANR	1368324	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1368060	66					
ANR	1368325	ForInit	i = 0 ;	41:9:703:708	1368060	0	True				
ANR	1368326	AssignmentExpression	i = 0		1368060	0		=			
ANR	1368327	Identifier	i		1368060	0					
ANR	1368328	PrimaryExpression	0		1368060	1					
ANR	1368329	Condition	i < 256	41:16:710:714	1368060	1	True				
ANR	1368330	RelationalExpression	i < 256		1368060	0		<			
ANR	1368331	Identifier	i		1368060	0					
ANR	1368332	PrimaryExpression	256		1368060	1					
ANR	1368333	PostIncDecOperationExpression	i ++	41:23:717:719	1368060	2	True				
ANR	1368334	Identifier	i		1368060	0					
ANR	1368335	IncDec	++		1368060	1					
ANR	1368336	CompoundStatement		45:8:724:737	1368060	3					
ANR	1368337	IdentifierDeclStatement	int scoretab [ 256 ] = { 0 } ;	43:8:733:756	1368060	0	True				
ANR	1368338	IdentifierDecl	scoretab [ 256 ] = { 0 }		1368060	0					
ANR	1368339	IdentifierDeclType	int [ 256 ]		1368060	0					
ANR	1368340	Identifier	scoretab		1368060	1					
ANR	1368341	PrimaryExpression	256		1368060	2					
ANR	1368342	AssignmentExpression	scoretab [ 256 ] = { 0 }		1368060	3		=			
ANR	1368343	Identifier	scoretab		1368060	0					
ANR	1368344	InitializerList	0		1368060	1					
ANR	1368345	PrimaryExpression	0		1368060	0					
ANR	1368346	IdentifierDeclStatement	int bestscore = 0 ;	45:8:767:784	1368060	1	True				
ANR	1368347	IdentifierDecl	bestscore = 0		1368060	0					
ANR	1368348	IdentifierDeclType	int		1368060	0					
ANR	1368349	Identifier	bestscore		1368060	1					
ANR	1368350	AssignmentExpression	bestscore = 0		1368060	2		=			
ANR	1368351	Identifier	bestscore		1368060	0					
ANR	1368352	PrimaryExpression	0		1368060	1					
ANR	1368353	IdentifierDeclStatement	int bestv = 0 ;	47:8:795:808	1368060	2	True				
ANR	1368354	IdentifierDecl	bestv = 0		1368060	0					
ANR	1368355	IdentifierDeclType	int		1368060	0					
ANR	1368356	Identifier	bestv		1368060	1					
ANR	1368357	AssignmentExpression	bestv = 0		1368060	2		=			
ANR	1368358	Identifier	bestv		1368060	0					
ANR	1368359	PrimaryExpression	0		1368060	1					
ANR	1368360	ForStatement	for ( y = 0 ; y < h ; y ++ )		1368060	3					
ANR	1368361	ForInit	y = 0 ;	49:13:824:829	1368060	0	True				
ANR	1368362	AssignmentExpression	y = 0		1368060	0		=			
ANR	1368363	Identifier	y		1368060	0					
ANR	1368364	PrimaryExpression	0		1368060	1					
ANR	1368365	Condition	y < h	49:20:831:833	1368060	1	True				
ANR	1368366	RelationalExpression	y < h		1368060	0		<			
ANR	1368367	Identifier	y		1368060	0					
ANR	1368368	Identifier	h		1368060	1					
ANR	1368369	PostIncDecOperationExpression	y ++	49:25:836:838	1368060	2	True				
ANR	1368370	Identifier	y		1368060	0					
ANR	1368371	IncDec	++		1368060	1					
ANR	1368372	CompoundStatement		47:30:770:770	1368060	3					
ANR	1368373	ForStatement	for ( x = 0 ; x < w ; x ++ )		1368060	0					
ANR	1368374	ForInit	x = 0 ;	51:17:861:866	1368060	0	True				
ANR	1368375	AssignmentExpression	x = 0		1368060	0		=			
ANR	1368376	Identifier	x		1368060	0					
ANR	1368377	PrimaryExpression	0		1368060	1					
ANR	1368378	Condition	x < w	51:24:868:870	1368060	1	True				
ANR	1368379	RelationalExpression	x < w		1368060	0		<			
ANR	1368380	Identifier	x		1368060	0					
ANR	1368381	Identifier	w		1368060	1					
ANR	1368382	PostIncDecOperationExpression	x ++	51:29:873:875	1368060	2	True				
ANR	1368383	Identifier	x		1368060	0					
ANR	1368384	IncDec	++		1368060	1					
ANR	1368385	CompoundStatement		63:16:1127:1136	1368060	3					
ANR	1368386	IdentifierDeclStatement	int v = rect -> data [ 0 ] [ x + y * rect -> linesize [ 0 ] ] ;	53:16:897:943	1368060	0	True				
ANR	1368387	IdentifierDecl	v = rect -> data [ 0 ] [ x + y * rect -> linesize [ 0 ] ]		1368060	0					
ANR	1368388	IdentifierDeclType	int		1368060	0					
ANR	1368389	Identifier	v		1368060	1					
ANR	1368390	AssignmentExpression	v = rect -> data [ 0 ] [ x + y * rect -> linesize [ 0 ] ]		1368060	2		=			
ANR	1368391	Identifier	v		1368060	0					
ANR	1368392	ArrayIndexing	rect -> data [ 0 ] [ x + y * rect -> linesize [ 0 ] ]		1368060	1					
ANR	1368393	ArrayIndexing	rect -> data [ 0 ]		1368060	0					
ANR	1368394	PtrMemberAccess	rect -> data		1368060	0					
ANR	1368395	Identifier	rect		1368060	0					
ANR	1368396	Identifier	data		1368060	1					
ANR	1368397	PrimaryExpression	0		1368060	1					
ANR	1368398	AdditiveExpression	x + y * rect -> linesize [ 0 ]		1368060	1		+			
ANR	1368399	Identifier	x		1368060	0					
ANR	1368400	MultiplicativeExpression	y * rect -> linesize [ 0 ]		1368060	1		*			
ANR	1368401	Identifier	y		1368060	0					
ANR	1368402	ArrayIndexing	rect -> linesize [ 0 ]		1368060	1					
ANR	1368403	PtrMemberAccess	rect -> linesize		1368060	0					
ANR	1368404	Identifier	rect		1368060	0					
ANR	1368405	Identifier	linesize		1368060	1					
ANR	1368406	PrimaryExpression	0		1368060	1					
ANR	1368407	IdentifierDeclStatement	int l_m = list [ v ] ;	55:16:962:979	1368060	1	True				
ANR	1368408	IdentifierDecl	l_m = list [ v ]		1368060	0					
ANR	1368409	IdentifierDeclType	int		1368060	0					
ANR	1368410	Identifier	l_m		1368060	1					
ANR	1368411	AssignmentExpression	l_m = list [ v ]		1368060	2		=			
ANR	1368412	Identifier	l_m		1368060	0					
ANR	1368413	ArrayIndexing	list [ v ]		1368060	1					
ANR	1368414	Identifier	list		1368060	0					
ANR	1368415	Identifier	v		1368060	1					
ANR	1368416	IdentifierDeclStatement	"int l_l = x ? L ( x - 1 , y ) : 1 ;"	57:16:998:1029	1368060	2	True				
ANR	1368417	IdentifierDecl	"l_l = x ? L ( x - 1 , y ) : 1"		1368060	0					
ANR	1368418	IdentifierDeclType	int		1368060	0					
ANR	1368419	Identifier	l_l		1368060	1					
ANR	1368420	AssignmentExpression	"l_l = x ? L ( x - 1 , y ) : 1"		1368060	2		=			
ANR	1368421	Identifier	l_l		1368060	0					
ANR	1368422	ConditionalExpression	"x ? L ( x - 1 , y ) : 1"		1368060	1					
ANR	1368423	Condition	x		1368060	0					
ANR	1368424	Identifier	x		1368060	0					
ANR	1368425	CallExpression	"L ( x - 1 , y )"		1368060	1					
ANR	1368426	Callee	L		1368060	0					
ANR	1368427	Identifier	L		1368060	0					
ANR	1368428	ArgumentList	x - 1		1368060	1					
ANR	1368429	Argument	x - 1		1368060	0					
ANR	1368430	AdditiveExpression	x - 1		1368060	0		-			
ANR	1368431	Identifier	x		1368060	0					
ANR	1368432	PrimaryExpression	1		1368060	1					
ANR	1368433	Argument	y		1368060	1					
ANR	1368434	Identifier	y		1368060	0					
ANR	1368435	PrimaryExpression	1		1368060	2					
ANR	1368436	IdentifierDeclStatement	"int l_r = x + 1 < w ? L ( x + 1 , y ) : 1 ;"	59:16:1048:1079	1368060	3	True				
ANR	1368437	IdentifierDecl	"l_r = x + 1 < w ? L ( x + 1 , y ) : 1"		1368060	0					
ANR	1368438	IdentifierDeclType	int		1368060	0					
ANR	1368439	Identifier	l_r		1368060	1					
ANR	1368440	AssignmentExpression	"l_r = x + 1 < w ? L ( x + 1 , y ) : 1"		1368060	2		=			
ANR	1368441	Identifier	l_r		1368060	0					
ANR	1368442	ConditionalExpression	"x + 1 < w ? L ( x + 1 , y ) : 1"		1368060	1					
ANR	1368443	Condition	x + 1 < w		1368060	0					
ANR	1368444	RelationalExpression	x + 1 < w		1368060	0		<			
ANR	1368445	AdditiveExpression	x + 1		1368060	0		+			
ANR	1368446	Identifier	x		1368060	0					
ANR	1368447	PrimaryExpression	1		1368060	1					
ANR	1368448	Identifier	w		1368060	1					
ANR	1368449	CallExpression	"L ( x + 1 , y )"		1368060	1					
ANR	1368450	Callee	L		1368060	0					
ANR	1368451	Identifier	L		1368060	0					
ANR	1368452	ArgumentList	x + 1		1368060	1					
ANR	1368453	Argument	x + 1		1368060	0					
ANR	1368454	AdditiveExpression	x + 1		1368060	0		+			
ANR	1368455	Identifier	x		1368060	0					
ANR	1368456	PrimaryExpression	1		1368060	1					
ANR	1368457	Argument	y		1368060	1					
ANR	1368458	Identifier	y		1368060	0					
ANR	1368459	PrimaryExpression	1		1368060	2					
ANR	1368460	IdentifierDeclStatement	"int l_t = y ? L ( x , y - 1 ) : 1 ;"	61:16:1098:1129	1368060	4	True				
ANR	1368461	IdentifierDecl	"l_t = y ? L ( x , y - 1 ) : 1"		1368060	0					
ANR	1368462	IdentifierDeclType	int		1368060	0					
ANR	1368463	Identifier	l_t		1368060	1					
ANR	1368464	AssignmentExpression	"l_t = y ? L ( x , y - 1 ) : 1"		1368060	2		=			
ANR	1368465	Identifier	l_t		1368060	0					
ANR	1368466	ConditionalExpression	"y ? L ( x , y - 1 ) : 1"		1368060	1					
ANR	1368467	Condition	y		1368060	0					
ANR	1368468	Identifier	y		1368060	0					
ANR	1368469	CallExpression	"L ( x , y - 1 )"		1368060	1					
ANR	1368470	Callee	L		1368060	0					
ANR	1368471	Identifier	L		1368060	0					
ANR	1368472	ArgumentList	x		1368060	1					
ANR	1368473	Argument	x		1368060	0					
ANR	1368474	Identifier	x		1368060	0					
ANR	1368475	Argument	y - 1		1368060	1					
ANR	1368476	AdditiveExpression	y - 1		1368060	0		-			
ANR	1368477	Identifier	y		1368060	0					
ANR	1368478	PrimaryExpression	1		1368060	1					
ANR	1368479	PrimaryExpression	1		1368060	2					
ANR	1368480	IdentifierDeclStatement	"int l_b = y + 1 < h ? L ( x , y + 1 ) : 1 ;"	63:16:1148:1179	1368060	5	True				
ANR	1368481	IdentifierDecl	"l_b = y + 1 < h ? L ( x , y + 1 ) : 1"		1368060	0					
ANR	1368482	IdentifierDeclType	int		1368060	0					
ANR	1368483	Identifier	l_b		1368060	1					
ANR	1368484	AssignmentExpression	"l_b = y + 1 < h ? L ( x , y + 1 ) : 1"		1368060	2		=			
ANR	1368485	Identifier	l_b		1368060	0					
ANR	1368486	ConditionalExpression	"y + 1 < h ? L ( x , y + 1 ) : 1"		1368060	1					
ANR	1368487	Condition	y + 1 < h		1368060	0					
ANR	1368488	RelationalExpression	y + 1 < h		1368060	0		<			
ANR	1368489	AdditiveExpression	y + 1		1368060	0		+			
ANR	1368490	Identifier	y		1368060	0					
ANR	1368491	PrimaryExpression	1		1368060	1					
ANR	1368492	Identifier	h		1368060	1					
ANR	1368493	CallExpression	"L ( x , y + 1 )"		1368060	1					
ANR	1368494	Callee	L		1368060	0					
ANR	1368495	Identifier	L		1368060	0					
ANR	1368496	ArgumentList	x		1368060	1					
ANR	1368497	Argument	x		1368060	0					
ANR	1368498	Identifier	x		1368060	0					
ANR	1368499	Argument	y + 1		1368060	1					
ANR	1368500	AdditiveExpression	y + 1		1368060	0		+			
ANR	1368501	Identifier	y		1368060	0					
ANR	1368502	PrimaryExpression	1		1368060	1					
ANR	1368503	PrimaryExpression	1		1368060	2					
ANR	1368504	IdentifierDeclStatement	int score ;	65:16:1198:1207	1368060	6	True				
ANR	1368505	IdentifierDecl	score		1368060	0					
ANR	1368506	IdentifierDeclType	int		1368060	0					
ANR	1368507	Identifier	score		1368060	1					
ANR	1368508	IfStatement	if ( l_m )		1368060	7					
ANR	1368509	Condition	l_m	67:20:1230:1232	1368060	0	True				
ANR	1368510	Identifier	l_m		1368060	0					
ANR	1368511	ContinueStatement	continue ;	69:20:1256:1264	1368060	1	True				
ANR	1368512	ExpressionStatement	scoretab [ v ] += l_l + l_r + l_t + l_b	71:16:1283:1319	1368060	8	True				
ANR	1368513	AssignmentExpression	scoretab [ v ] += l_l + l_r + l_t + l_b		1368060	0		+=			
ANR	1368514	ArrayIndexing	scoretab [ v ]		1368060	0					
ANR	1368515	Identifier	scoretab		1368060	0					
ANR	1368516	Identifier	v		1368060	1					
ANR	1368517	AdditiveExpression	l_l + l_r + l_t + l_b		1368060	1		+			
ANR	1368518	Identifier	l_l		1368060	0					
ANR	1368519	AdditiveExpression	l_r + l_t + l_b		1368060	1		+			
ANR	1368520	Identifier	l_r		1368060	0					
ANR	1368521	AdditiveExpression	l_t + l_b		1368060	1		+			
ANR	1368522	Identifier	l_t		1368060	0					
ANR	1368523	Identifier	l_b		1368060	1					
ANR	1368524	Statement	score	73:16:1338:1342	1368060	9	True				
ANR	1368525	Statement	=	73:22:1344:1344	1368060	10	True				
ANR	1368526	Statement	1024L	73:24:1346:1350	1368060	11	True				
ANR	1368527	ExpressionStatement	L * scoretab [ v ] / counttab [ v ]	73:29:1351:1378	1368060	12	True				
ANR	1368528	MultiplicativeExpression	L * scoretab [ v ] / counttab [ v ]		1368060	0		*			
ANR	1368529	Identifier	L		1368060	0					
ANR	1368530	MultiplicativeExpression	scoretab [ v ] / counttab [ v ]		1368060	1		/			
ANR	1368531	ArrayIndexing	scoretab [ v ]		1368060	0					
ANR	1368532	Identifier	scoretab		1368060	0					
ANR	1368533	Identifier	v		1368060	1					
ANR	1368534	ArrayIndexing	counttab [ v ]		1368060	1					
ANR	1368535	Identifier	counttab		1368060	0					
ANR	1368536	Identifier	v		1368060	1					
ANR	1368537	IfStatement	if ( score > bestscore )		1368060	13					
ANR	1368538	Condition	score > bestscore	75:20:1401:1417	1368060	0	True				
ANR	1368539	RelationalExpression	score > bestscore		1368060	0		>			
ANR	1368540	Identifier	score		1368060	0					
ANR	1368541	Identifier	bestscore		1368060	1					
ANR	1368542	CompoundStatement		73:39:1349:1349	1368060	1					
ANR	1368543	ExpressionStatement	bestscore = score	77:20:1443:1460	1368060	0	True				
ANR	1368544	AssignmentExpression	bestscore = score		1368060	0		=			
ANR	1368545	Identifier	bestscore		1368060	0					
ANR	1368546	Identifier	score		1368060	1					
ANR	1368547	ExpressionStatement	bestv = v	79:20:1483:1492	1368060	1	True				
ANR	1368548	AssignmentExpression	bestv = v		1368060	0		=			
ANR	1368549	Identifier	bestv		1368060	0					
ANR	1368550	Identifier	v		1368060	1					
ANR	1368551	IfStatement	if ( ! bestscore )		1368060	4					
ANR	1368552	Condition	! bestscore	87:12:1552:1561	1368060	0	True				
ANR	1368553	UnaryOperationExpression	! bestscore		1368060	0					
ANR	1368554	UnaryOperator	!		1368060	0					
ANR	1368555	Identifier	bestscore		1368060	1					
ANR	1368556	BreakStatement	break ;	89:12:1577:1582	1368060	1	True				
ANR	1368557	ExpressionStatement	list [ bestv ] = 1	91:8:1593:1614	1368060	5	True				
ANR	1368558	AssignmentExpression	list [ bestv ] = 1		1368060	0		=			
ANR	1368559	ArrayIndexing	list [ bestv ]		1368060	0					
ANR	1368560	Identifier	list		1368060	0					
ANR	1368561	Identifier	bestv		1368060	1					
ANR	1368562	PrimaryExpression	1		1368060	1					
ANR	1368563	ExpressionStatement	list_inv [ i ] = bestv	93:8:1625:1650	1368060	6	True				
ANR	1368564	AssignmentExpression	list_inv [ i ] = bestv		1368060	0		=			
ANR	1368565	ArrayIndexing	list_inv [ i ]		1368060	0					
ANR	1368566	Identifier	list_inv		1368060	0					
ANR	1368567	Identifier	i		1368060	1					
ANR	1368568	Identifier	bestv		1368060	1					
ANR	1368569	ExpressionStatement	"count = FFMAX ( i - 1 , 1 )"	99:4:1666:1689	1368060	67	True				
ANR	1368570	AssignmentExpression	"count = FFMAX ( i - 1 , 1 )"		1368060	0		=			
ANR	1368571	Identifier	count		1368060	0					
ANR	1368572	CallExpression	"FFMAX ( i - 1 , 1 )"		1368060	1					
ANR	1368573	Callee	FFMAX		1368060	0					
ANR	1368574	Identifier	FFMAX		1368060	0					
ANR	1368575	ArgumentList	i - 1		1368060	1					
ANR	1368576	Argument	i - 1		1368060	0					
ANR	1368577	AdditiveExpression	i - 1		1368060	0		-			
ANR	1368578	Identifier	i		1368060	0					
ANR	1368579	PrimaryExpression	1		1368060	1					
ANR	1368580	Argument	1		1368060	1					
ANR	1368581	PrimaryExpression	1		1368060	0					
ANR	1368582	ForStatement	for ( i -- ; i >= 0 ; i -- )		1368060	68					
ANR	1368583	ForInit	i -- ;	101:9:1701:1704	1368060	0	True				
ANR	1368584	PostIncDecOperationExpression	i --		1368060	0					
ANR	1368585	Identifier	i		1368060	0					
ANR	1368586	IncDec	--		1368060	1					
ANR	1368587	Condition	i >= 0	101:14:1706:1709	1368060	1	True				
ANR	1368588	RelationalExpression	i >= 0		1368060	0		>=			
ANR	1368589	Identifier	i		1368060	0					
ANR	1368590	PrimaryExpression	0		1368060	1					
ANR	1368591	PostIncDecOperationExpression	i --	101:20:1712:1714	1368060	2	True				
ANR	1368592	Identifier	i		1368060	0					
ANR	1368593	IncDec	--		1368060	1					
ANR	1368594	CompoundStatement		101:8:1657:1676	1368060	3					
ANR	1368595	IdentifierDeclStatement	int v = i * 255 / count ;	103:8:1728:1747	1368060	0	True				
ANR	1368596	IdentifierDecl	v = i * 255 / count		1368060	0					
ANR	1368597	IdentifierDeclType	int		1368060	0					
ANR	1368598	Identifier	v		1368060	1					
ANR	1368599	AssignmentExpression	v = i * 255 / count		1368060	2		=			
ANR	1368600	Identifier	v		1368060	0					
ANR	1368601	MultiplicativeExpression	i * 255 / count		1368060	1		*			
ANR	1368602	Identifier	i		1368060	0					
ANR	1368603	MultiplicativeExpression	255 / count		1368060	1		/			
ANR	1368604	PrimaryExpression	255		1368060	0					
ANR	1368605	Identifier	count		1368060	1					
ANR	1368606	ExpressionStatement	"AV_WN32 ( rect -> data [ 1 ] + 4 * list_inv [ i ] , RGBA ( v / 2 , v , v / 2 , v ) )"	105:8:1758:1815	1368060	1	True				
ANR	1368607	CallExpression	"AV_WN32 ( rect -> data [ 1 ] + 4 * list_inv [ i ] , RGBA ( v / 2 , v , v / 2 , v ) )"		1368060	0					
ANR	1368608	Callee	AV_WN32		1368060	0					
ANR	1368609	Identifier	AV_WN32		1368060	0					
ANR	1368610	ArgumentList	rect -> data [ 1 ] + 4 * list_inv [ i ]		1368060	1					
ANR	1368611	Argument	rect -> data [ 1 ] + 4 * list_inv [ i ]		1368060	0					
ANR	1368612	AdditiveExpression	rect -> data [ 1 ] + 4 * list_inv [ i ]		1368060	0		+			
ANR	1368613	ArrayIndexing	rect -> data [ 1 ]		1368060	0					
ANR	1368614	PtrMemberAccess	rect -> data		1368060	0					
ANR	1368615	Identifier	rect		1368060	0					
ANR	1368616	Identifier	data		1368060	1					
ANR	1368617	PrimaryExpression	1		1368060	1					
ANR	1368618	MultiplicativeExpression	4 * list_inv [ i ]		1368060	1		*			
ANR	1368619	PrimaryExpression	4		1368060	0					
ANR	1368620	ArrayIndexing	list_inv [ i ]		1368060	1					
ANR	1368621	Identifier	list_inv		1368060	0					
ANR	1368622	Identifier	i		1368060	1					
ANR	1368623	Argument	"RGBA ( v / 2 , v , v / 2 , v )"		1368060	1					
ANR	1368624	CallExpression	"RGBA ( v / 2 , v , v / 2 , v )"		1368060	0					
ANR	1368625	Callee	RGBA		1368060	0					
ANR	1368626	Identifier	RGBA		1368060	0					
ANR	1368627	ArgumentList	v / 2		1368060	1					
ANR	1368628	Argument	v / 2		1368060	0					
ANR	1368629	MultiplicativeExpression	v / 2		1368060	0		/			
ANR	1368630	Identifier	v		1368060	0					
ANR	1368631	PrimaryExpression	2		1368060	1					
ANR	1368632	Argument	v		1368060	1					
ANR	1368633	Identifier	v		1368060	0					
ANR	1368634	Argument	v / 2		1368060	2					
ANR	1368635	MultiplicativeExpression	v / 2		1368060	0		/			
ANR	1368636	Identifier	v		1368060	0					
ANR	1368637	PrimaryExpression	2		1368060	1					
ANR	1368638	Argument	v		1368060	3					
ANR	1368639	Identifier	v		1368060	0					
ANR	1368640	ReturnType	static void		1368060	1					
ANR	1368641	Identifier	compute_default_clut		1368060	2					
ANR	1368642	ParameterList	"AVSubtitleRect * rect , int w , int h"		1368060	3					
ANR	1368643	Parameter	AVSubtitleRect * rect	1:33:33:52	1368060	0	True				
ANR	1368644	ParameterType	AVSubtitleRect *		1368060	0					
ANR	1368645	Identifier	rect		1368060	1					
ANR	1368646	Parameter	int w	1:55:55:59	1368060	1	True				
ANR	1368647	ParameterType	int		1368060	0					
ANR	1368648	Identifier	w		1368060	1					
ANR	1368649	Parameter	int h	1:62:62:66	1368060	2	True				
ANR	1368650	ParameterType	int		1368060	0					
ANR	1368651	Identifier	h		1368060	1					
ANR	1368652	CFGEntryNode	ENTRY		1368060		True				
ANR	1368653	CFGExitNode	EXIT		1368060		True				
ANR	1368654	Symbol	* v		1368060						
ANR	1368655	Symbol	* x		1368060						
ANR	1368656	Symbol	* y		1368060						
ANR	1368657	Symbol	bestscore		1368060						
ANR	1368658	Symbol	* rect -> linesize		1368060						
ANR	1368659	Symbol	bestv		1368060						
ANR	1368660	Symbol	* * rect		1368060						
ANR	1368661	Symbol	L		1368060						
ANR	1368662	Symbol	l_b		1368060						
ANR	1368663	Symbol	rect		1368060						
ANR	1368664	Symbol	score		1368060						
ANR	1368665	Symbol	* * rect -> data		1368060						
ANR	1368666	Symbol	* list_inv		1368060						
ANR	1368667	Symbol	RGBA		1368060						
ANR	1368668	Symbol	scoretab		1368060						
ANR	1368669	Symbol	* scoretab		1368060						
ANR	1368670	Symbol	V		1368060						
ANR	1368671	Symbol	rect -> linesize		1368060						
ANR	1368672	Symbol	l_l		1368060						
ANR	1368673	Symbol	l_m		1368060						
ANR	1368674	Symbol	l_r		1368060						
ANR	1368675	Symbol	* * rect -> linesize		1368060						
ANR	1368676	Symbol	l_t		1368060						
ANR	1368677	Symbol	rect -> data		1368060						
ANR	1368678	Symbol	h		1368060						
ANR	1368679	Symbol	count		1368060						
ANR	1368680	Symbol	list_inv		1368060						
ANR	1368681	Symbol	i		1368060						
ANR	1368682	Symbol	* bestv		1368060						
ANR	1368683	Symbol	list		1368060						
ANR	1368684	Symbol	vb		1368060						
ANR	1368685	Symbol	* rect -> data		1368060						
ANR	1368686	Symbol	* * * rect		1368060						
ANR	1368687	Symbol	* counttab		1368060						
ANR	1368688	Symbol	* i		1368060						
ANR	1368689	Symbol	counttab		1368060						
ANR	1368690	Symbol	* list		1368060						
ANR	1368691	Symbol	v		1368060						
ANR	1368692	Symbol	vl		1368060						
ANR	1368693	Symbol	w		1368060						
ANR	1368694	Symbol	x		1368060						
ANR	1368695	Symbol	y		1368060						
ANR	1368696	Symbol	* rect		1368060						
ANR	1368697	Symbol	vr		1368060						
ANR	1368698	Symbol	vt		1368060						
ANR	1368699	Symbol	FFMAX		1368060						
