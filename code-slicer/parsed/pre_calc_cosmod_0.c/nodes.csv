command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6667799	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pre_calc_cosmod_0.c								
ANR	6667800	Function	pre_calc_cosmod	1:0:0:636							
ANR	6667801	FunctionDef	pre_calc_cosmod (DCAContext * s)		6667800	0					
ANR	6667802	CompoundStatement		3:0:45:636	6667800	0					
ANR	6667803	IdentifierDeclStatement	"int i , j , k ;"	5:4:52:63	6667800	0	True				
ANR	6667804	IdentifierDecl	i		6667800	0					
ANR	6667805	IdentifierDeclType	int		6667800	0					
ANR	6667806	Identifier	i		6667800	1					
ANR	6667807	IdentifierDecl	j		6667800	1					
ANR	6667808	IdentifierDeclType	int		6667800	0					
ANR	6667809	Identifier	j		6667800	1					
ANR	6667810	IdentifierDecl	k		6667800	2					
ANR	6667811	IdentifierDeclType	int		6667800	0					
ANR	6667812	Identifier	k		6667800	1					
ANR	6667813	Statement	static	7:4:70:75	6667800	1	True				
ANR	6667814	IdentifierDeclStatement	int cosmod_inited = 0 ;	7:11:77:98	6667800	2	True				
ANR	6667815	IdentifierDecl	cosmod_inited = 0		6667800	0					
ANR	6667816	IdentifierDeclType	int		6667800	0					
ANR	6667817	Identifier	cosmod_inited		6667800	1					
ANR	6667818	AssignmentExpression	cosmod_inited = 0		6667800	2		=			
ANR	6667819	Identifier	cosmod_inited		6667800	0					
ANR	6667820	PrimaryExpression	0		6667800	1					
ANR	6667821	IfStatement	if ( cosmod_inited )		6667800	3					
ANR	6667822	Condition	cosmod_inited	11:7:110:122	6667800	0	True				
ANR	6667823	Identifier	cosmod_inited		6667800	0					
ANR	6667824	ReturnStatement	return ;	11:22:125:131	6667800	1	True				
ANR	6667825	ForStatement	"for ( j = 0 , k = 0 ; k < 16 ; k ++ )"		6667800	4					
ANR	6667826	ForInit	"j = 0 , k = 0 ;"	13:9:143:155	6667800	0	True				
ANR	6667827	Expression	"j = 0 , k = 0"		6667800	0					
ANR	6667828	AssignmentExpression	j = 0		6667800	0		=			
ANR	6667829	Identifier	j		6667800	0					
ANR	6667830	PrimaryExpression	0		6667800	1					
ANR	6667831	AssignmentExpression	k = 0		6667800	1		=			
ANR	6667832	Identifier	k		6667800	0					
ANR	6667833	PrimaryExpression	0		6667800	1					
ANR	6667834	Condition	k < 16	13:23:157:162	6667800	1	True				
ANR	6667835	RelationalExpression	k < 16		6667800	0		<			
ANR	6667836	Identifier	k		6667800	0					
ANR	6667837	PrimaryExpression	16		6667800	1					
ANR	6667838	PostIncDecOperationExpression	k ++	13:31:165:167	6667800	2	True				
ANR	6667839	Identifier	k		6667800	0					
ANR	6667840	IncDec	++		6667800	1					
ANR	6667841	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		6667800	3					
ANR	6667842	ForInit	i = 0 ;	15:13:184:189	6667800	0	True				
ANR	6667843	AssignmentExpression	i = 0		6667800	0		=			
ANR	6667844	Identifier	i		6667800	0					
ANR	6667845	PrimaryExpression	0		6667800	1					
ANR	6667846	Condition	i < 16	15:20:191:196	6667800	1	True				
ANR	6667847	RelationalExpression	i < 16		6667800	0		<			
ANR	6667848	Identifier	i		6667800	0					
ANR	6667849	PrimaryExpression	16		6667800	1					
ANR	6667850	PostIncDecOperationExpression	i ++	15:28:199:201	6667800	2	True				
ANR	6667851	Identifier	i		6667800	0					
ANR	6667852	IncDec	++		6667800	1					
ANR	6667853	ExpressionStatement	cos_mod [ j ++ ] = cos ( ( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64 )	17:12:217:274	6667800	3	True				
ANR	6667854	AssignmentExpression	cos_mod [ j ++ ] = cos ( ( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64 )		6667800	0		=			
ANR	6667855	ArrayIndexing	cos_mod [ j ++ ]		6667800	0					
ANR	6667856	Identifier	cos_mod		6667800	0					
ANR	6667857	PostIncDecOperationExpression	j ++		6667800	1					
ANR	6667858	Identifier	j		6667800	0					
ANR	6667859	IncDec	++		6667800	1					
ANR	6667860	CallExpression	cos ( ( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64 )		6667800	1					
ANR	6667861	Callee	cos		6667800	0					
ANR	6667862	Identifier	cos		6667800	0					
ANR	6667863	ArgumentList	( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64		6667800	1					
ANR	6667864	Argument	( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64		6667800	0					
ANR	6667865	MultiplicativeExpression	( 2 * i + 1 ) * ( 2 * k + 1 ) * M_PI / 64		6667800	0		*			
ANR	6667866	AdditiveExpression	2 * i + 1		6667800	0		+			
ANR	6667867	MultiplicativeExpression	2 * i		6667800	0		*			
ANR	6667868	PrimaryExpression	2		6667800	0					
ANR	6667869	Identifier	i		6667800	1					
ANR	6667870	PrimaryExpression	1		6667800	1					
ANR	6667871	MultiplicativeExpression	( 2 * k + 1 ) * M_PI / 64		6667800	1		*			
ANR	6667872	AdditiveExpression	2 * k + 1		6667800	0		+			
ANR	6667873	MultiplicativeExpression	2 * k		6667800	0		*			
ANR	6667874	PrimaryExpression	2		6667800	0					
ANR	6667875	Identifier	k		6667800	1					
ANR	6667876	PrimaryExpression	1		6667800	1					
ANR	6667877	MultiplicativeExpression	M_PI / 64		6667800	1		/			
ANR	6667878	Identifier	M_PI		6667800	0					
ANR	6667879	PrimaryExpression	64		6667800	1					
ANR	6667880	ForStatement	for ( k = 0 ; k < 16 ; k ++ )		6667800	5					
ANR	6667881	ForInit	k = 0 ;	21:9:288:293	6667800	0	True				
ANR	6667882	AssignmentExpression	k = 0		6667800	0		=			
ANR	6667883	Identifier	k		6667800	0					
ANR	6667884	PrimaryExpression	0		6667800	1					
ANR	6667885	Condition	k < 16	21:16:295:300	6667800	1	True				
ANR	6667886	RelationalExpression	k < 16		6667800	0		<			
ANR	6667887	Identifier	k		6667800	0					
ANR	6667888	PrimaryExpression	16		6667800	1					
ANR	6667889	PostIncDecOperationExpression	k ++	21:24:303:305	6667800	2	True				
ANR	6667890	Identifier	k		6667800	0					
ANR	6667891	IncDec	++		6667800	1					
ANR	6667892	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		6667800	3					
ANR	6667893	ForInit	i = 0 ;	23:13:322:327	6667800	0	True				
ANR	6667894	AssignmentExpression	i = 0		6667800	0		=			
ANR	6667895	Identifier	i		6667800	0					
ANR	6667896	PrimaryExpression	0		6667800	1					
ANR	6667897	Condition	i < 16	23:20:329:334	6667800	1	True				
ANR	6667898	RelationalExpression	i < 16		6667800	0		<			
ANR	6667899	Identifier	i		6667800	0					
ANR	6667900	PrimaryExpression	16		6667800	1					
ANR	6667901	PostIncDecOperationExpression	i ++	23:28:337:339	6667800	2	True				
ANR	6667902	Identifier	i		6667800	0					
ANR	6667903	IncDec	++		6667800	1					
ANR	6667904	ExpressionStatement	cos_mod [ j ++ ] = cos ( ( i ) * ( 2 * k + 1 ) * M_PI / 32 )	25:12:355:404	6667800	3	True				
ANR	6667905	AssignmentExpression	cos_mod [ j ++ ] = cos ( ( i ) * ( 2 * k + 1 ) * M_PI / 32 )		6667800	0		=			
ANR	6667906	ArrayIndexing	cos_mod [ j ++ ]		6667800	0					
ANR	6667907	Identifier	cos_mod		6667800	0					
ANR	6667908	PostIncDecOperationExpression	j ++		6667800	1					
ANR	6667909	Identifier	j		6667800	0					
ANR	6667910	IncDec	++		6667800	1					
ANR	6667911	CallExpression	cos ( ( i ) * ( 2 * k + 1 ) * M_PI / 32 )		6667800	1					
ANR	6667912	Callee	cos		6667800	0					
ANR	6667913	Identifier	cos		6667800	0					
ANR	6667914	ArgumentList	( i ) * ( 2 * k + 1 ) * M_PI / 32		6667800	1					
ANR	6667915	Argument	( i ) * ( 2 * k + 1 ) * M_PI / 32		6667800	0					
ANR	6667916	MultiplicativeExpression	( i ) * ( 2 * k + 1 ) * M_PI / 32		6667800	0		*			
ANR	6667917	CastExpression	( i ) * ( 2 * k + 1 )		6667800	0					
ANR	6667918	CastTarget	i		6667800	0					
ANR	6667919	UnaryOperationExpression	* ( 2 * k + 1 )		6667800	1					
ANR	6667920	UnaryOperator	*		6667800	0					
ANR	6667921	AdditiveExpression	2 * k + 1		6667800	1		+			
ANR	6667922	MultiplicativeExpression	2 * k		6667800	0		*			
ANR	6667923	PrimaryExpression	2		6667800	0					
ANR	6667924	Identifier	k		6667800	1					
ANR	6667925	PrimaryExpression	1		6667800	1					
ANR	6667926	MultiplicativeExpression	M_PI / 32		6667800	1		/			
ANR	6667927	Identifier	M_PI		6667800	0					
ANR	6667928	PrimaryExpression	32		6667800	1					
ANR	6667929	ForStatement	for ( k = 0 ; k < 16 ; k ++ )		6667800	6					
ANR	6667930	ForInit	k = 0 ;	29:9:418:423	6667800	0	True				
ANR	6667931	AssignmentExpression	k = 0		6667800	0		=			
ANR	6667932	Identifier	k		6667800	0					
ANR	6667933	PrimaryExpression	0		6667800	1					
ANR	6667934	Condition	k < 16	29:16:425:430	6667800	1	True				
ANR	6667935	RelationalExpression	k < 16		6667800	0		<			
ANR	6667936	Identifier	k		6667800	0					
ANR	6667937	PrimaryExpression	16		6667800	1					
ANR	6667938	PostIncDecOperationExpression	k ++	29:24:433:435	6667800	2	True				
ANR	6667939	Identifier	k		6667800	0					
ANR	6667940	IncDec	++		6667800	1					
ANR	6667941	ExpressionStatement	cos_mod [ j ++ ] = 0.25 / ( 2 * cos ( ( 2 * k + 1 ) * M_PI / 128 ) )	31:8:447:504	6667800	3	True				
ANR	6667942	AssignmentExpression	cos_mod [ j ++ ] = 0.25 / ( 2 * cos ( ( 2 * k + 1 ) * M_PI / 128 ) )		6667800	0		=			
ANR	6667943	ArrayIndexing	cos_mod [ j ++ ]		6667800	0					
ANR	6667944	Identifier	cos_mod		6667800	0					
ANR	6667945	PostIncDecOperationExpression	j ++		6667800	1					
ANR	6667946	Identifier	j		6667800	0					
ANR	6667947	IncDec	++		6667800	1					
ANR	6667948	MultiplicativeExpression	0.25 / ( 2 * cos ( ( 2 * k + 1 ) * M_PI / 128 ) )		6667800	1		/			
ANR	6667949	PrimaryExpression	0.25		6667800	0					
ANR	6667950	MultiplicativeExpression	2 * cos ( ( 2 * k + 1 ) * M_PI / 128 )		6667800	1		*			
ANR	6667951	PrimaryExpression	2		6667800	0					
ANR	6667952	CallExpression	cos ( ( 2 * k + 1 ) * M_PI / 128 )		6667800	1					
ANR	6667953	Callee	cos		6667800	0					
ANR	6667954	Identifier	cos		6667800	0					
ANR	6667955	ArgumentList	( 2 * k + 1 ) * M_PI / 128		6667800	1					
ANR	6667956	Argument	( 2 * k + 1 ) * M_PI / 128		6667800	0					
ANR	6667957	MultiplicativeExpression	( 2 * k + 1 ) * M_PI / 128		6667800	0		*			
ANR	6667958	AdditiveExpression	2 * k + 1		6667800	0		+			
ANR	6667959	MultiplicativeExpression	2 * k		6667800	0		*			
ANR	6667960	PrimaryExpression	2		6667800	0					
ANR	6667961	Identifier	k		6667800	1					
ANR	6667962	PrimaryExpression	1		6667800	1					
ANR	6667963	MultiplicativeExpression	M_PI / 128		6667800	1		/			
ANR	6667964	Identifier	M_PI		6667800	0					
ANR	6667965	PrimaryExpression	128		6667800	1					
ANR	6667966	ForStatement	for ( k = 0 ; k < 16 ; k ++ )		6667800	7					
ANR	6667967	ForInit	k = 0 ;	35:9:518:523	6667800	0	True				
ANR	6667968	AssignmentExpression	k = 0		6667800	0		=			
ANR	6667969	Identifier	k		6667800	0					
ANR	6667970	PrimaryExpression	0		6667800	1					
ANR	6667971	Condition	k < 16	35:16:525:530	6667800	1	True				
ANR	6667972	RelationalExpression	k < 16		6667800	0		<			
ANR	6667973	Identifier	k		6667800	0					
ANR	6667974	PrimaryExpression	16		6667800	1					
ANR	6667975	PostIncDecOperationExpression	k ++	35:24:533:535	6667800	2	True				
ANR	6667976	Identifier	k		6667800	0					
ANR	6667977	IncDec	++		6667800	1					
ANR	6667978	ExpressionStatement	cos_mod [ j ++ ] = - 0.25 / ( 2.0 * sin ( ( 2 * k + 1 ) * M_PI / 128 ) )	37:8:547:607	6667800	3	True				
ANR	6667979	AssignmentExpression	cos_mod [ j ++ ] = - 0.25 / ( 2.0 * sin ( ( 2 * k + 1 ) * M_PI / 128 ) )		6667800	0		=			
ANR	6667980	ArrayIndexing	cos_mod [ j ++ ]		6667800	0					
ANR	6667981	Identifier	cos_mod		6667800	0					
ANR	6667982	PostIncDecOperationExpression	j ++		6667800	1					
ANR	6667983	Identifier	j		6667800	0					
ANR	6667984	IncDec	++		6667800	1					
ANR	6667985	MultiplicativeExpression	- 0.25 / ( 2.0 * sin ( ( 2 * k + 1 ) * M_PI / 128 ) )		6667800	1		/			
ANR	6667986	UnaryOperationExpression	- 0.25		6667800	0					
ANR	6667987	UnaryOperator	-		6667800	0					
ANR	6667988	PrimaryExpression	0.25		6667800	1					
ANR	6667989	MultiplicativeExpression	2.0 * sin ( ( 2 * k + 1 ) * M_PI / 128 )		6667800	1		*			
ANR	6667990	PrimaryExpression	2.0		6667800	0					
ANR	6667991	CallExpression	sin ( ( 2 * k + 1 ) * M_PI / 128 )		6667800	1					
ANR	6667992	Callee	sin		6667800	0					
ANR	6667993	Identifier	sin		6667800	0					
ANR	6667994	ArgumentList	( 2 * k + 1 ) * M_PI / 128		6667800	1					
ANR	6667995	Argument	( 2 * k + 1 ) * M_PI / 128		6667800	0					
ANR	6667996	MultiplicativeExpression	( 2 * k + 1 ) * M_PI / 128		6667800	0		*			
ANR	6667997	AdditiveExpression	2 * k + 1		6667800	0		+			
ANR	6667998	MultiplicativeExpression	2 * k		6667800	0		*			
ANR	6667999	PrimaryExpression	2		6667800	0					
ANR	6668000	Identifier	k		6667800	1					
ANR	6668001	PrimaryExpression	1		6667800	1					
ANR	6668002	MultiplicativeExpression	M_PI / 128		6667800	1		/			
ANR	6668003	Identifier	M_PI		6667800	0					
ANR	6668004	PrimaryExpression	128		6667800	1					
ANR	6668005	ExpressionStatement	cosmod_inited = 1	41:4:616:633	6667800	8	True				
ANR	6668006	AssignmentExpression	cosmod_inited = 1		6667800	0		=			
ANR	6668007	Identifier	cosmod_inited		6667800	0					
ANR	6668008	PrimaryExpression	1		6667800	1					
ANR	6668009	ReturnType	static void		6667800	1					
ANR	6668010	Identifier	pre_calc_cosmod		6667800	2					
ANR	6668011	ParameterList	DCAContext * s		6667800	3					
ANR	6668012	Parameter	DCAContext * s	1:28:28:41	6667800	0	True				
ANR	6668013	ParameterType	DCAContext *		6667800	0					
ANR	6668014	Identifier	s		6667800	1					
ANR	6668015	CFGEntryNode	ENTRY		6667800		True				
ANR	6668016	CFGExitNode	EXIT		6667800		True				
ANR	6668017	Symbol	* cos_mod		6667800						
ANR	6668018	Symbol	cosmod_inited		6667800						
ANR	6668019	Symbol	s		6667800						
ANR	6668020	Symbol	* k		6667800						
ANR	6668021	Symbol	cos		6667800						
ANR	6668022	Symbol	i		6667800						
ANR	6668023	Symbol	sin		6667800						
ANR	6668024	Symbol	j		6667800						
ANR	6668025	Symbol	k		6667800						
ANR	6668026	Symbol	* ( 2 * k + 1 )		6667800						
ANR	6668027	Symbol	cos_mod		6667800						
ANR	6668028	Symbol	M_PI		6667800						
