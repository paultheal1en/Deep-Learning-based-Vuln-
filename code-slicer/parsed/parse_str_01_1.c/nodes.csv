command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6368155	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_str_01_1.c								
ANR	6368156	Function	parse_str	1:0:0:2931							
ANR	6368157	FunctionDef	"parse_str (StringInputVisitor * siv , Error * * errp)"		6368156	0					
ANR	6368158	CompoundStatement		3:0:62:2931	6368156	0					
ANR	6368159	IdentifierDeclStatement	char * str = ( char * ) siv -> string ;	5:4:69:101	6368156	0	True				
ANR	6368160	IdentifierDecl	* str = ( char * ) siv -> string		6368156	0					
ANR	6368161	IdentifierDeclType	char *		6368156	0					
ANR	6368162	Identifier	str		6368156	1					
ANR	6368163	AssignmentExpression	* str = ( char * ) siv -> string		6368156	2		=			
ANR	6368164	Identifier	str		6368156	0					
ANR	6368165	CastExpression	( char * ) siv -> string		6368156	1					
ANR	6368166	CastTarget	char *		6368156	0					
ANR	6368167	PtrMemberAccess	siv -> string		6368156	1					
ANR	6368168	Identifier	siv		6368156	0					
ANR	6368169	Identifier	string		6368156	1					
ANR	6368170	IdentifierDeclStatement	"long long start , end ;"	7:4:108:128	6368156	1	True				
ANR	6368171	IdentifierDecl	start		6368156	0					
ANR	6368172	IdentifierDeclType	long long		6368156	0					
ANR	6368173	Identifier	start		6368156	1					
ANR	6368174	IdentifierDecl	end		6368156	1					
ANR	6368175	IdentifierDeclType	long long		6368156	0					
ANR	6368176	Identifier	end		6368156	1					
ANR	6368177	IdentifierDeclStatement	Range * cur ;	9:4:135:145	6368156	2	True				
ANR	6368178	IdentifierDecl	* cur		6368156	0					
ANR	6368179	IdentifierDeclType	Range *		6368156	0					
ANR	6368180	Identifier	cur		6368156	1					
ANR	6368181	IdentifierDeclStatement	char * endptr ;	11:4:152:164	6368156	3	True				
ANR	6368182	IdentifierDecl	* endptr		6368156	0					
ANR	6368183	IdentifierDeclType	char *		6368156	0					
ANR	6368184	Identifier	endptr		6368156	1					
ANR	6368185	IfStatement	if ( siv -> ranges )		6368156	4					
ANR	6368186	Condition	siv -> ranges	15:8:177:187	6368156	0	True				
ANR	6368187	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368188	Identifier	siv		6368156	0					
ANR	6368189	Identifier	ranges		6368156	1					
ANR	6368190	CompoundStatement		13:21:127:127	6368156	1					
ANR	6368191	ReturnStatement	return ;	17:8:201:207	6368156	0	True				
ANR	6368192	DoStatement	do		6368156	5					
ANR	6368193	CompoundStatement		21:7:163:163	6368156	0					
ANR	6368194	ExpressionStatement	errno = 0	25:8:237:246	6368156	0	True				
ANR	6368195	AssignmentExpression	errno = 0		6368156	0		=			
ANR	6368196	Identifier	errno		6368156	0					
ANR	6368197	PrimaryExpression	0		6368156	1					
ANR	6368198	ExpressionStatement	"start = strtoll ( str , & endptr , 0 )"	27:8:257:289	6368156	1	True				
ANR	6368199	AssignmentExpression	"start = strtoll ( str , & endptr , 0 )"		6368156	0		=			
ANR	6368200	Identifier	start		6368156	0					
ANR	6368201	CallExpression	"strtoll ( str , & endptr , 0 )"		6368156	1					
ANR	6368202	Callee	strtoll		6368156	0					
ANR	6368203	Identifier	strtoll		6368156	0					
ANR	6368204	ArgumentList	str		6368156	1					
ANR	6368205	Argument	str		6368156	0					
ANR	6368206	Identifier	str		6368156	0					
ANR	6368207	Argument	& endptr		6368156	1					
ANR	6368208	UnaryOperationExpression	& endptr		6368156	0					
ANR	6368209	UnaryOperator	&		6368156	0					
ANR	6368210	Identifier	endptr		6368156	1					
ANR	6368211	Argument	0		6368156	2					
ANR	6368212	PrimaryExpression	0		6368156	0					
ANR	6368213	IfStatement	if ( errno == 0 && endptr > str )		6368156	2					
ANR	6368214	Condition	errno == 0 && endptr > str	29:12:304:329	6368156	0	True				
ANR	6368215	AndExpression	errno == 0 && endptr > str		6368156	0		&&			
ANR	6368216	EqualityExpression	errno == 0		6368156	0		==			
ANR	6368217	Identifier	errno		6368156	0					
ANR	6368218	PrimaryExpression	0		6368156	1					
ANR	6368219	RelationalExpression	endptr > str		6368156	1		>			
ANR	6368220	Identifier	endptr		6368156	0					
ANR	6368221	Identifier	str		6368156	1					
ANR	6368222	CompoundStatement		27:40:269:269	6368156	1					
ANR	6368223	IfStatement	if ( * endptr == '\\0' )		6368156	0					
ANR	6368224	Condition	* endptr == '\\0'	31:16:351:365	6368156	0	True				
ANR	6368225	EqualityExpression	* endptr == '\\0'		6368156	0		==			
ANR	6368226	UnaryOperationExpression	* endptr		6368156	0					
ANR	6368227	UnaryOperator	*		6368156	0					
ANR	6368228	Identifier	endptr		6368156	1					
ANR	6368229	PrimaryExpression	'\\0'		6368156	1					
ANR	6368230	CompoundStatement		29:33:305:305	6368156	1					
ANR	6368231	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	33:16:387:416	6368156	0	True				
ANR	6368232	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368156	0		=			
ANR	6368233	Identifier	cur		6368156	0					
ANR	6368234	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368156	1					
ANR	6368235	Callee	g_malloc0		6368156	0					
ANR	6368236	Identifier	g_malloc0		6368156	0					
ANR	6368237	ArgumentList	sizeof ( * cur )		6368156	1					
ANR	6368238	Argument	sizeof ( * cur )		6368156	0					
ANR	6368239	SizeofExpression	sizeof ( * cur )		6368156	0					
ANR	6368240	Sizeof	sizeof		6368156	0					
ANR	6368241	UnaryOperationExpression	* cur		6368156	1					
ANR	6368242	UnaryOperator	*		6368156	0					
ANR	6368243	Identifier	cur		6368156	1					
ANR	6368244	ExpressionStatement	cur -> begin = start	35:16:435:453	6368156	1	True				
ANR	6368245	AssignmentExpression	cur -> begin = start		6368156	0		=			
ANR	6368246	PtrMemberAccess	cur -> begin		6368156	0					
ANR	6368247	Identifier	cur		6368156	0					
ANR	6368248	Identifier	begin		6368156	1					
ANR	6368249	Identifier	start		6368156	1					
ANR	6368250	ExpressionStatement	cur -> end = start + 1	37:16:472:492	6368156	2	True				
ANR	6368251	AssignmentExpression	cur -> end = start + 1		6368156	0		=			
ANR	6368252	PtrMemberAccess	cur -> end		6368156	0					
ANR	6368253	Identifier	cur		6368156	0					
ANR	6368254	Identifier	end		6368156	1					
ANR	6368255	AdditiveExpression	start + 1		6368156	1		+			
ANR	6368256	Identifier	start		6368156	0					
ANR	6368257	PrimaryExpression	1		6368156	1					
ANR	6368258	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	39:16:511:644	6368156	3	True				
ANR	6368259	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	0		=			
ANR	6368260	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368261	Identifier	siv		6368156	0					
ANR	6368262	Identifier	ranges		6368156	1					
ANR	6368263	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	1					
ANR	6368264	Callee	g_list_insert_sorted_merged		6368156	0					
ANR	6368265	Identifier	g_list_insert_sorted_merged		6368156	0					
ANR	6368266	ArgumentList	siv -> ranges		6368156	1					
ANR	6368267	Argument	siv -> ranges		6368156	0					
ANR	6368268	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368269	Identifier	siv		6368156	0					
ANR	6368270	Identifier	ranges		6368156	1					
ANR	6368271	Argument	cur		6368156	1					
ANR	6368272	Identifier	cur		6368156	0					
ANR	6368273	Argument	range_compare		6368156	2					
ANR	6368274	Identifier	range_compare		6368156	0					
ANR	6368275	ExpressionStatement	cur = NULL	43:16:663:673	6368156	4	True				
ANR	6368276	AssignmentExpression	cur = NULL		6368156	0		=			
ANR	6368277	Identifier	cur		6368156	0					
ANR	6368278	Identifier	NULL		6368156	1					
ANR	6368279	ExpressionStatement	str = NULL	45:16:692:702	6368156	5	True				
ANR	6368280	AssignmentExpression	str = NULL		6368156	0		=			
ANR	6368281	Identifier	str		6368156	0					
ANR	6368282	Identifier	NULL		6368156	1					
ANR	6368283	ElseStatement	else		6368156	0					
ANR	6368284	IfStatement	if ( * endptr == '-' )		6368156	0					
ANR	6368285	Condition	* endptr == '-'	47:23:728:741	6368156	0	True				
ANR	6368286	EqualityExpression	* endptr == '-'		6368156	0		==			
ANR	6368287	UnaryOperationExpression	* endptr		6368156	0					
ANR	6368288	UnaryOperator	*		6368156	0					
ANR	6368289	Identifier	endptr		6368156	1					
ANR	6368290	PrimaryExpression	'-'		6368156	1					
ANR	6368291	CompoundStatement		45:39:681:681	6368156	1					
ANR	6368292	ExpressionStatement	str = endptr + 1	49:16:763:779	6368156	0	True				
ANR	6368293	AssignmentExpression	str = endptr + 1		6368156	0		=			
ANR	6368294	Identifier	str		6368156	0					
ANR	6368295	AdditiveExpression	endptr + 1		6368156	1		+			
ANR	6368296	Identifier	endptr		6368156	0					
ANR	6368297	PrimaryExpression	1		6368156	1					
ANR	6368298	ExpressionStatement	errno = 0	51:16:798:807	6368156	1	True				
ANR	6368299	AssignmentExpression	errno = 0		6368156	0		=			
ANR	6368300	Identifier	errno		6368156	0					
ANR	6368301	PrimaryExpression	0		6368156	1					
ANR	6368302	ExpressionStatement	"end = strtoll ( str , & endptr , 0 )"	53:16:826:856	6368156	2	True				
ANR	6368303	AssignmentExpression	"end = strtoll ( str , & endptr , 0 )"		6368156	0		=			
ANR	6368304	Identifier	end		6368156	0					
ANR	6368305	CallExpression	"strtoll ( str , & endptr , 0 )"		6368156	1					
ANR	6368306	Callee	strtoll		6368156	0					
ANR	6368307	Identifier	strtoll		6368156	0					
ANR	6368308	ArgumentList	str		6368156	1					
ANR	6368309	Argument	str		6368156	0					
ANR	6368310	Identifier	str		6368156	0					
ANR	6368311	Argument	& endptr		6368156	1					
ANR	6368312	UnaryOperationExpression	& endptr		6368156	0					
ANR	6368313	UnaryOperator	&		6368156	0					
ANR	6368314	Identifier	endptr		6368156	1					
ANR	6368315	Argument	0		6368156	2					
ANR	6368316	PrimaryExpression	0		6368156	0					
ANR	6368317	IfStatement	if ( errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 ) )		6368156	3					
ANR	6368318	Condition	errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )	55:20:879:1017	6368156	0	True				
ANR	6368319	AndExpression	errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368156	0		&&			
ANR	6368320	EqualityExpression	errno == 0		6368156	0		==			
ANR	6368321	Identifier	errno		6368156	0					
ANR	6368322	PrimaryExpression	0		6368156	1					
ANR	6368323	AndExpression	endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368156	1		&&			
ANR	6368324	RelationalExpression	endptr > str		6368156	0		>			
ANR	6368325	Identifier	endptr		6368156	0					
ANR	6368326	Identifier	str		6368156	1					
ANR	6368327	AndExpression	start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368156	1		&&			
ANR	6368328	RelationalExpression	start <= end		6368156	0		<=			
ANR	6368329	Identifier	start		6368156	0					
ANR	6368330	Identifier	end		6368156	1					
ANR	6368331	OrExpression	start > INT64_MAX - 65536 || end < start + 65536		6368156	1		||			
ANR	6368332	RelationalExpression	start > INT64_MAX - 65536		6368156	0		>			
ANR	6368333	Identifier	start		6368156	0					
ANR	6368334	AdditiveExpression	INT64_MAX - 65536		6368156	1		-			
ANR	6368335	Identifier	INT64_MAX		6368156	0					
ANR	6368336	PrimaryExpression	65536		6368156	1					
ANR	6368337	RelationalExpression	end < start + 65536		6368156	1		<			
ANR	6368338	Identifier	end		6368156	0					
ANR	6368339	AdditiveExpression	start + 65536		6368156	1		+			
ANR	6368340	Identifier	start		6368156	0					
ANR	6368341	PrimaryExpression	65536		6368156	1					
ANR	6368342	CompoundStatement		57:43:957:957	6368156	1					
ANR	6368343	IfStatement	if ( * endptr == '\\0' )		6368156	0					
ANR	6368344	Condition	* endptr == '\\0'	61:24:1047:1061	6368156	0	True				
ANR	6368345	EqualityExpression	* endptr == '\\0'		6368156	0		==			
ANR	6368346	UnaryOperationExpression	* endptr		6368156	0					
ANR	6368347	UnaryOperator	*		6368156	0					
ANR	6368348	Identifier	endptr		6368156	1					
ANR	6368349	PrimaryExpression	'\\0'		6368156	1					
ANR	6368350	CompoundStatement		59:41:1001:1001	6368156	1					
ANR	6368351	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	63:24:1091:1120	6368156	0	True				
ANR	6368352	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368156	0		=			
ANR	6368353	Identifier	cur		6368156	0					
ANR	6368354	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368156	1					
ANR	6368355	Callee	g_malloc0		6368156	0					
ANR	6368356	Identifier	g_malloc0		6368156	0					
ANR	6368357	ArgumentList	sizeof ( * cur )		6368156	1					
ANR	6368358	Argument	sizeof ( * cur )		6368156	0					
ANR	6368359	SizeofExpression	sizeof ( * cur )		6368156	0					
ANR	6368360	Sizeof	sizeof		6368156	0					
ANR	6368361	UnaryOperationExpression	* cur		6368156	1					
ANR	6368362	UnaryOperator	*		6368156	0					
ANR	6368363	Identifier	cur		6368156	1					
ANR	6368364	ExpressionStatement	cur -> begin = start	65:24:1147:1165	6368156	1	True				
ANR	6368365	AssignmentExpression	cur -> begin = start		6368156	0		=			
ANR	6368366	PtrMemberAccess	cur -> begin		6368156	0					
ANR	6368367	Identifier	cur		6368156	0					
ANR	6368368	Identifier	begin		6368156	1					
ANR	6368369	Identifier	start		6368156	1					
ANR	6368370	ExpressionStatement	cur -> end = end + 1	67:24:1192:1210	6368156	2	True				
ANR	6368371	AssignmentExpression	cur -> end = end + 1		6368156	0		=			
ANR	6368372	PtrMemberAccess	cur -> end		6368156	0					
ANR	6368373	Identifier	cur		6368156	0					
ANR	6368374	Identifier	end		6368156	1					
ANR	6368375	AdditiveExpression	end + 1		6368156	1		+			
ANR	6368376	Identifier	end		6368156	0					
ANR	6368377	PrimaryExpression	1		6368156	1					
ANR	6368378	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	69:24:1237:1454	6368156	3	True				
ANR	6368379	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	0		=			
ANR	6368380	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368381	Identifier	siv		6368156	0					
ANR	6368382	Identifier	ranges		6368156	1					
ANR	6368383	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	1					
ANR	6368384	Callee	g_list_insert_sorted_merged		6368156	0					
ANR	6368385	Identifier	g_list_insert_sorted_merged		6368156	0					
ANR	6368386	ArgumentList	siv -> ranges		6368156	1					
ANR	6368387	Argument	siv -> ranges		6368156	0					
ANR	6368388	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368389	Identifier	siv		6368156	0					
ANR	6368390	Identifier	ranges		6368156	1					
ANR	6368391	Argument	cur		6368156	1					
ANR	6368392	Identifier	cur		6368156	0					
ANR	6368393	Argument	range_compare		6368156	2					
ANR	6368394	Identifier	range_compare		6368156	0					
ANR	6368395	ExpressionStatement	cur = NULL	77:24:1481:1491	6368156	4	True				
ANR	6368396	AssignmentExpression	cur = NULL		6368156	0		=			
ANR	6368397	Identifier	cur		6368156	0					
ANR	6368398	Identifier	NULL		6368156	1					
ANR	6368399	ExpressionStatement	str = NULL	79:24:1518:1528	6368156	5	True				
ANR	6368400	AssignmentExpression	str = NULL		6368156	0		=			
ANR	6368401	Identifier	str		6368156	0					
ANR	6368402	Identifier	NULL		6368156	1					
ANR	6368403	ElseStatement	else		6368156	0					
ANR	6368404	IfStatement	"if ( * endptr == ',' )"		6368156	0					
ANR	6368405	Condition	"* endptr == ','"	81:31:1562:1575	6368156	0	True				
ANR	6368406	EqualityExpression	"* endptr == ','"		6368156	0		==			
ANR	6368407	UnaryOperationExpression	* endptr		6368156	0					
ANR	6368408	UnaryOperator	*		6368156	0					
ANR	6368409	Identifier	endptr		6368156	1					
ANR	6368410	PrimaryExpression	"','"		6368156	1					
ANR	6368411	CompoundStatement		79:47:1515:1515	6368156	1					
ANR	6368412	ExpressionStatement	str = endptr + 1	83:24:1605:1621	6368156	0	True				
ANR	6368413	AssignmentExpression	str = endptr + 1		6368156	0		=			
ANR	6368414	Identifier	str		6368156	0					
ANR	6368415	AdditiveExpression	endptr + 1		6368156	1		+			
ANR	6368416	Identifier	endptr		6368156	0					
ANR	6368417	PrimaryExpression	1		6368156	1					
ANR	6368418	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	85:24:1648:1677	6368156	1	True				
ANR	6368419	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368156	0		=			
ANR	6368420	Identifier	cur		6368156	0					
ANR	6368421	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368156	1					
ANR	6368422	Callee	g_malloc0		6368156	0					
ANR	6368423	Identifier	g_malloc0		6368156	0					
ANR	6368424	ArgumentList	sizeof ( * cur )		6368156	1					
ANR	6368425	Argument	sizeof ( * cur )		6368156	0					
ANR	6368426	SizeofExpression	sizeof ( * cur )		6368156	0					
ANR	6368427	Sizeof	sizeof		6368156	0					
ANR	6368428	UnaryOperationExpression	* cur		6368156	1					
ANR	6368429	UnaryOperator	*		6368156	0					
ANR	6368430	Identifier	cur		6368156	1					
ANR	6368431	ExpressionStatement	cur -> begin = start	87:24:1704:1722	6368156	2	True				
ANR	6368432	AssignmentExpression	cur -> begin = start		6368156	0		=			
ANR	6368433	PtrMemberAccess	cur -> begin		6368156	0					
ANR	6368434	Identifier	cur		6368156	0					
ANR	6368435	Identifier	begin		6368156	1					
ANR	6368436	Identifier	start		6368156	1					
ANR	6368437	ExpressionStatement	cur -> end = end + 1	89:24:1749:1767	6368156	3	True				
ANR	6368438	AssignmentExpression	cur -> end = end + 1		6368156	0		=			
ANR	6368439	PtrMemberAccess	cur -> end		6368156	0					
ANR	6368440	Identifier	cur		6368156	0					
ANR	6368441	Identifier	end		6368156	1					
ANR	6368442	AdditiveExpression	end + 1		6368156	1		+			
ANR	6368443	Identifier	end		6368156	0					
ANR	6368444	PrimaryExpression	1		6368156	1					
ANR	6368445	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	91:24:1794:2011	6368156	4	True				
ANR	6368446	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	0		=			
ANR	6368447	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368448	Identifier	siv		6368156	0					
ANR	6368449	Identifier	ranges		6368156	1					
ANR	6368450	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	1					
ANR	6368451	Callee	g_list_insert_sorted_merged		6368156	0					
ANR	6368452	Identifier	g_list_insert_sorted_merged		6368156	0					
ANR	6368453	ArgumentList	siv -> ranges		6368156	1					
ANR	6368454	Argument	siv -> ranges		6368156	0					
ANR	6368455	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368456	Identifier	siv		6368156	0					
ANR	6368457	Identifier	ranges		6368156	1					
ANR	6368458	Argument	cur		6368156	1					
ANR	6368459	Identifier	cur		6368156	0					
ANR	6368460	Argument	range_compare		6368156	2					
ANR	6368461	Identifier	range_compare		6368156	0					
ANR	6368462	ExpressionStatement	cur = NULL	99:24:2038:2048	6368156	5	True				
ANR	6368463	AssignmentExpression	cur = NULL		6368156	0		=			
ANR	6368464	Identifier	cur		6368156	0					
ANR	6368465	Identifier	NULL		6368156	1					
ANR	6368466	ElseStatement	else		6368156	0					
ANR	6368467	CompoundStatement		99:27:2015:2015	6368156	0					
ANR	6368468	GotoStatement	goto error ;	103:24:2105:2115	6368156	0	True				
ANR	6368469	Identifier	error		6368156	0					
ANR	6368470	ElseStatement	else		6368156	0					
ANR	6368471	CompoundStatement		105:23:2101:2101	6368156	0					
ANR	6368472	GotoStatement	goto error ;	109:20:2187:2197	6368156	0	True				
ANR	6368473	Identifier	error		6368156	0					
ANR	6368474	ElseStatement	else		6368156	0					
ANR	6368475	IfStatement	"if ( * endptr == ',' )"		6368156	0					
ANR	6368476	Condition	"* endptr == ','"	113:23:2242:2255	6368156	0	True				
ANR	6368477	EqualityExpression	"* endptr == ','"		6368156	0		==			
ANR	6368478	UnaryOperationExpression	* endptr		6368156	0					
ANR	6368479	UnaryOperator	*		6368156	0					
ANR	6368480	Identifier	endptr		6368156	1					
ANR	6368481	PrimaryExpression	"','"		6368156	1					
ANR	6368482	CompoundStatement		111:39:2195:2195	6368156	1					
ANR	6368483	ExpressionStatement	str = endptr + 1	115:16:2277:2293	6368156	0	True				
ANR	6368484	AssignmentExpression	str = endptr + 1		6368156	0		=			
ANR	6368485	Identifier	str		6368156	0					
ANR	6368486	AdditiveExpression	endptr + 1		6368156	1		+			
ANR	6368487	Identifier	endptr		6368156	0					
ANR	6368488	PrimaryExpression	1		6368156	1					
ANR	6368489	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	117:16:2312:2341	6368156	1	True				
ANR	6368490	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368156	0		=			
ANR	6368491	Identifier	cur		6368156	0					
ANR	6368492	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368156	1					
ANR	6368493	Callee	g_malloc0		6368156	0					
ANR	6368494	Identifier	g_malloc0		6368156	0					
ANR	6368495	ArgumentList	sizeof ( * cur )		6368156	1					
ANR	6368496	Argument	sizeof ( * cur )		6368156	0					
ANR	6368497	SizeofExpression	sizeof ( * cur )		6368156	0					
ANR	6368498	Sizeof	sizeof		6368156	0					
ANR	6368499	UnaryOperationExpression	* cur		6368156	1					
ANR	6368500	UnaryOperator	*		6368156	0					
ANR	6368501	Identifier	cur		6368156	1					
ANR	6368502	ExpressionStatement	cur -> begin = start	119:16:2360:2378	6368156	2	True				
ANR	6368503	AssignmentExpression	cur -> begin = start		6368156	0		=			
ANR	6368504	PtrMemberAccess	cur -> begin		6368156	0					
ANR	6368505	Identifier	cur		6368156	0					
ANR	6368506	Identifier	begin		6368156	1					
ANR	6368507	Identifier	start		6368156	1					
ANR	6368508	ExpressionStatement	cur -> end = start + 1	121:16:2397:2417	6368156	3	True				
ANR	6368509	AssignmentExpression	cur -> end = start + 1		6368156	0		=			
ANR	6368510	PtrMemberAccess	cur -> end		6368156	0					
ANR	6368511	Identifier	cur		6368156	0					
ANR	6368512	Identifier	end		6368156	1					
ANR	6368513	AdditiveExpression	start + 1		6368156	1		+			
ANR	6368514	Identifier	start		6368156	0					
ANR	6368515	PrimaryExpression	1		6368156	1					
ANR	6368516	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	123:16:2436:2628	6368156	4	True				
ANR	6368517	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	0		=			
ANR	6368518	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368519	Identifier	siv		6368156	0					
ANR	6368520	Identifier	ranges		6368156	1					
ANR	6368521	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368156	1					
ANR	6368522	Callee	g_list_insert_sorted_merged		6368156	0					
ANR	6368523	Identifier	g_list_insert_sorted_merged		6368156	0					
ANR	6368524	ArgumentList	siv -> ranges		6368156	1					
ANR	6368525	Argument	siv -> ranges		6368156	0					
ANR	6368526	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368527	Identifier	siv		6368156	0					
ANR	6368528	Identifier	ranges		6368156	1					
ANR	6368529	Argument	cur		6368156	1					
ANR	6368530	Identifier	cur		6368156	0					
ANR	6368531	Argument	range_compare		6368156	2					
ANR	6368532	Identifier	range_compare		6368156	0					
ANR	6368533	ExpressionStatement	cur = NULL	129:16:2647:2657	6368156	5	True				
ANR	6368534	AssignmentExpression	cur = NULL		6368156	0		=			
ANR	6368535	Identifier	cur		6368156	0					
ANR	6368536	Identifier	NULL		6368156	1					
ANR	6368537	ElseStatement	else		6368156	0					
ANR	6368538	CompoundStatement		129:19:2616:2616	6368156	0					
ANR	6368539	GotoStatement	goto error ;	133:16:2698:2708	6368156	0	True				
ANR	6368540	Identifier	error		6368156	0					
ANR	6368541	ElseStatement	else		6368156	0					
ANR	6368542	CompoundStatement		135:15:2678:2678	6368156	0					
ANR	6368543	GotoStatement	goto error ;	139:12:2756:2766	6368156	0	True				
ANR	6368544	Identifier	error		6368156	0					
ANR	6368545	Condition	str	143:13:2793:2795	6368156	1	True				
ANR	6368546	Identifier	str		6368156	0					
ANR	6368547	ReturnStatement	return ;	147:4:2806:2812	6368156	6	True				
ANR	6368548	Label	error :	149:0:2815:2820	6368156	7	True				
ANR	6368549	Identifier	error		6368156	0					
ANR	6368550	ExpressionStatement	"g_list_foreach ( siv -> ranges , free_range , NULL )"	151:4:2827:2872	6368156	8	True				
ANR	6368551	CallExpression	"g_list_foreach ( siv -> ranges , free_range , NULL )"		6368156	0					
ANR	6368552	Callee	g_list_foreach		6368156	0					
ANR	6368553	Identifier	g_list_foreach		6368156	0					
ANR	6368554	ArgumentList	siv -> ranges		6368156	1					
ANR	6368555	Argument	siv -> ranges		6368156	0					
ANR	6368556	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368557	Identifier	siv		6368156	0					
ANR	6368558	Identifier	ranges		6368156	1					
ANR	6368559	Argument	free_range		6368156	1					
ANR	6368560	Identifier	free_range		6368156	0					
ANR	6368561	Argument	NULL		6368156	2					
ANR	6368562	Identifier	NULL		6368156	0					
ANR	6368563	ExpressionStatement	g_list_free ( siv -> ranges )	153:4:2879:2903	6368156	9	True				
ANR	6368564	CallExpression	g_list_free ( siv -> ranges )		6368156	0					
ANR	6368565	Callee	g_list_free		6368156	0					
ANR	6368566	Identifier	g_list_free		6368156	0					
ANR	6368567	ArgumentList	siv -> ranges		6368156	1					
ANR	6368568	Argument	siv -> ranges		6368156	0					
ANR	6368569	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368570	Identifier	siv		6368156	0					
ANR	6368571	Identifier	ranges		6368156	1					
ANR	6368572	ExpressionStatement	siv -> ranges = NULL	155:4:2910:2928	6368156	10	True				
ANR	6368573	AssignmentExpression	siv -> ranges = NULL		6368156	0		=			
ANR	6368574	PtrMemberAccess	siv -> ranges		6368156	0					
ANR	6368575	Identifier	siv		6368156	0					
ANR	6368576	Identifier	ranges		6368156	1					
ANR	6368577	Identifier	NULL		6368156	1					
ANR	6368578	ReturnType	static void		6368156	1					
ANR	6368579	Identifier	parse_str		6368156	2					
ANR	6368580	ParameterList	"StringInputVisitor * siv , Error * * errp"		6368156	3					
ANR	6368581	Parameter	StringInputVisitor * siv	1:22:22:44	6368156	0	True				
ANR	6368582	ParameterType	StringInputVisitor *		6368156	0					
ANR	6368583	Identifier	siv		6368156	1					
ANR	6368584	Parameter	Error * * errp	1:47:47:58	6368156	1	True				
ANR	6368585	ParameterType	Error * *		6368156	0					
ANR	6368586	Identifier	errp		6368156	1					
ANR	6368587	CFGEntryNode	ENTRY		6368156		True				
ANR	6368588	CFGExitNode	EXIT		6368156		True				
ANR	6368589	Symbol	siv		6368156						
ANR	6368590	Symbol	cur		6368156						
ANR	6368591	Symbol	errno		6368156						
ANR	6368592	Symbol	NULL		6368156						
ANR	6368593	Symbol	errp		6368156						
ANR	6368594	Symbol	endptr		6368156						
ANR	6368595	Symbol	* endptr		6368156						
ANR	6368596	Symbol	& endptr		6368156						
ANR	6368597	Symbol	start		6368156						
ANR	6368598	Symbol	* siv		6368156						
ANR	6368599	Symbol	INT64_MAX		6368156						
ANR	6368600	Symbol	str		6368156						
ANR	6368601	Symbol	cur -> end		6368156						
ANR	6368602	Symbol	range_compare		6368156						
ANR	6368603	Symbol	free_range		6368156						
ANR	6368604	Symbol	* cur		6368156						
ANR	6368605	Symbol	strtoll		6368156						
ANR	6368606	Symbol	g_list_insert_sorted_merged		6368156						
ANR	6368607	Symbol	siv -> ranges		6368156						
ANR	6368608	Symbol	end		6368156						
ANR	6368609	Symbol	g_malloc0		6368156						
ANR	6368610	Symbol	cur -> begin		6368156						
ANR	6368611	Symbol	siv -> string		6368156						
