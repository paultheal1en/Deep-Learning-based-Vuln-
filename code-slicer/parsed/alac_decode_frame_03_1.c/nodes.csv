command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	505851	File	/home/p4ultr4n/workplace/ReVeal/raw_code/alac_decode_frame_03_1.c								
ANR	505852	Function	alac_decode_frame	1:0:0:7334							
ANR	505853	FunctionDef	"alac_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		505852	0					
ANR	505854	CompoundStatement		5:0:132:7334	505852	0					
ANR	505855	IdentifierDeclStatement	const uint8_t * inbuffer = avpkt -> data ;	7:4:139:176	505852	0	True				
ANR	505856	IdentifierDecl	* inbuffer = avpkt -> data		505852	0					
ANR	505857	IdentifierDeclType	const uint8_t *		505852	0					
ANR	505858	Identifier	inbuffer		505852	1					
ANR	505859	AssignmentExpression	* inbuffer = avpkt -> data		505852	2		=			
ANR	505860	Identifier	inbuffer		505852	0					
ANR	505861	PtrMemberAccess	avpkt -> data		505852	1					
ANR	505862	Identifier	avpkt		505852	0					
ANR	505863	Identifier	data		505852	1					
ANR	505864	IdentifierDeclStatement	int input_buffer_size = avpkt -> size ;	9:4:183:218	505852	1	True				
ANR	505865	IdentifierDecl	input_buffer_size = avpkt -> size		505852	0					
ANR	505866	IdentifierDeclType	int		505852	0					
ANR	505867	Identifier	input_buffer_size		505852	1					
ANR	505868	AssignmentExpression	input_buffer_size = avpkt -> size		505852	2		=			
ANR	505869	Identifier	input_buffer_size		505852	0					
ANR	505870	PtrMemberAccess	avpkt -> size		505852	1					
ANR	505871	Identifier	avpkt		505852	0					
ANR	505872	Identifier	size		505852	1					
ANR	505873	IdentifierDeclStatement	ALACContext * alac = avctx -> priv_data ;	11:4:225:261	505852	2	True				
ANR	505874	IdentifierDecl	* alac = avctx -> priv_data		505852	0					
ANR	505875	IdentifierDeclType	ALACContext *		505852	0					
ANR	505876	Identifier	alac		505852	1					
ANR	505877	AssignmentExpression	* alac = avctx -> priv_data		505852	2		=			
ANR	505878	Identifier	alac		505852	0					
ANR	505879	PtrMemberAccess	avctx -> priv_data		505852	1					
ANR	505880	Identifier	avctx		505852	0					
ANR	505881	Identifier	priv_data		505852	1					
ANR	505882	IdentifierDeclStatement	int channels ;	15:4:270:282	505852	3	True				
ANR	505883	IdentifierDecl	channels		505852	0					
ANR	505884	IdentifierDeclType	int		505852	0					
ANR	505885	Identifier	channels		505852	1					
ANR	505886	IdentifierDeclStatement	unsigned int outputsamples ;	17:4:289:315	505852	4	True				
ANR	505887	IdentifierDecl	outputsamples		505852	0					
ANR	505888	IdentifierDeclType	unsigned int		505852	0					
ANR	505889	Identifier	outputsamples		505852	1					
ANR	505890	IdentifierDeclStatement	int hassize ;	19:4:322:333	505852	5	True				
ANR	505891	IdentifierDecl	hassize		505852	0					
ANR	505892	IdentifierDeclType	int		505852	0					
ANR	505893	Identifier	hassize		505852	1					
ANR	505894	IdentifierDeclStatement	unsigned int readsamplesize ;	21:4:340:367	505852	6	True				
ANR	505895	IdentifierDecl	readsamplesize		505852	0					
ANR	505896	IdentifierDeclType	unsigned int		505852	0					
ANR	505897	Identifier	readsamplesize		505852	1					
ANR	505898	IdentifierDeclStatement	int isnotcompressed ;	23:4:374:393	505852	7	True				
ANR	505899	IdentifierDecl	isnotcompressed		505852	0					
ANR	505900	IdentifierDeclType	int		505852	0					
ANR	505901	Identifier	isnotcompressed		505852	1					
ANR	505902	IdentifierDeclStatement	uint8_t interlacing_shift ;	25:4:400:425	505852	8	True				
ANR	505903	IdentifierDecl	interlacing_shift		505852	0					
ANR	505904	IdentifierDeclType	uint8_t		505852	0					
ANR	505905	Identifier	interlacing_shift		505852	1					
ANR	505906	IdentifierDeclStatement	uint8_t interlacing_leftweight ;	27:4:432:462	505852	9	True				
ANR	505907	IdentifierDecl	interlacing_leftweight		505852	0					
ANR	505908	IdentifierDeclType	uint8_t		505852	0					
ANR	505909	Identifier	interlacing_leftweight		505852	1					
ANR	505910	IdentifierDeclStatement	"int i , ch , ret ;"	29:4:469:483	505852	10	True				
ANR	505911	IdentifierDecl	i		505852	0					
ANR	505912	IdentifierDeclType	int		505852	0					
ANR	505913	Identifier	i		505852	1					
ANR	505914	IdentifierDecl	ch		505852	1					
ANR	505915	IdentifierDeclType	int		505852	0					
ANR	505916	Identifier	ch		505852	1					
ANR	505917	IdentifierDecl	ret		505852	2					
ANR	505918	IdentifierDeclType	int		505852	0					
ANR	505919	Identifier	ret		505852	1					
ANR	505920	ExpressionStatement	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"	33:4:492:549	505852	11	True				
ANR	505921	CallExpression	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"		505852	0					
ANR	505922	Callee	init_get_bits		505852	0					
ANR	505923	Identifier	init_get_bits		505852	0					
ANR	505924	ArgumentList	& alac -> gb		505852	1					
ANR	505925	Argument	& alac -> gb		505852	0					
ANR	505926	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	505927	UnaryOperator	&		505852	0					
ANR	505928	PtrMemberAccess	alac -> gb		505852	1					
ANR	505929	Identifier	alac		505852	0					
ANR	505930	Identifier	gb		505852	1					
ANR	505931	Argument	inbuffer		505852	1					
ANR	505932	Identifier	inbuffer		505852	0					
ANR	505933	Argument	input_buffer_size * 8		505852	2					
ANR	505934	MultiplicativeExpression	input_buffer_size * 8		505852	0		*			
ANR	505935	Identifier	input_buffer_size		505852	0					
ANR	505936	PrimaryExpression	8		505852	1					
ANR	505937	ExpressionStatement	"channels = get_bits ( & alac -> gb , 3 ) + 1"	37:4:558:595	505852	12	True				
ANR	505938	AssignmentExpression	"channels = get_bits ( & alac -> gb , 3 ) + 1"		505852	0		=			
ANR	505939	Identifier	channels		505852	0					
ANR	505940	AdditiveExpression	"get_bits ( & alac -> gb , 3 ) + 1"		505852	1		+			
ANR	505941	CallExpression	"get_bits ( & alac -> gb , 3 )"		505852	0					
ANR	505942	Callee	get_bits		505852	0					
ANR	505943	Identifier	get_bits		505852	0					
ANR	505944	ArgumentList	& alac -> gb		505852	1					
ANR	505945	Argument	& alac -> gb		505852	0					
ANR	505946	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	505947	UnaryOperator	&		505852	0					
ANR	505948	PtrMemberAccess	alac -> gb		505852	1					
ANR	505949	Identifier	alac		505852	0					
ANR	505950	Identifier	gb		505852	1					
ANR	505951	Argument	3		505852	1					
ANR	505952	PrimaryExpression	3		505852	0					
ANR	505953	PrimaryExpression	1		505852	1					
ANR	505954	IfStatement	if ( channels != avctx -> channels )		505852	13					
ANR	505955	Condition	channels != avctx -> channels	39:8:606:632	505852	0	True				
ANR	505956	EqualityExpression	channels != avctx -> channels		505852	0		!=			
ANR	505957	Identifier	channels		505852	0					
ANR	505958	PtrMemberAccess	avctx -> channels		505852	1					
ANR	505959	Identifier	avctx		505852	0					
ANR	505960	Identifier	channels		505852	1					
ANR	505961	CompoundStatement		35:37:502:502	505852	1					
ANR	505962	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame header channel count mismatch\\n"" )"	41:8:646:714	505852	0	True				
ANR	505963	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame header channel count mismatch\\n"" )"		505852	0					
ANR	505964	Callee	av_log		505852	0					
ANR	505965	Identifier	av_log		505852	0					
ANR	505966	ArgumentList	avctx		505852	1					
ANR	505967	Argument	avctx		505852	0					
ANR	505968	Identifier	avctx		505852	0					
ANR	505969	Argument	AV_LOG_ERROR		505852	1					
ANR	505970	Identifier	AV_LOG_ERROR		505852	0					
ANR	505971	Argument	"""frame header channel count mismatch\\n"""		505852	2					
ANR	505972	PrimaryExpression	"""frame header channel count mismatch\\n"""		505852	0					
ANR	505973	ReturnStatement	return AVERROR_INVALIDDATA ;	43:8:725:751	505852	1	True				
ANR	505974	Identifier	AVERROR_INVALIDDATA		505852	0					
ANR	505975	ExpressionStatement	"skip_bits ( & alac -> gb , 4 )"	55:4:888:911	505852	14	True				
ANR	505976	CallExpression	"skip_bits ( & alac -> gb , 4 )"		505852	0					
ANR	505977	Callee	skip_bits		505852	0					
ANR	505978	Identifier	skip_bits		505852	0					
ANR	505979	ArgumentList	& alac -> gb		505852	1					
ANR	505980	Argument	& alac -> gb		505852	0					
ANR	505981	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	505982	UnaryOperator	&		505852	0					
ANR	505983	PtrMemberAccess	alac -> gb		505852	1					
ANR	505984	Identifier	alac		505852	0					
ANR	505985	Identifier	gb		505852	1					
ANR	505986	Argument	4		505852	1					
ANR	505987	PrimaryExpression	4		505852	0					
ANR	505988	ExpressionStatement	"skip_bits ( & alac -> gb , 12 )"	59:4:920:944	505852	15	True				
ANR	505989	CallExpression	"skip_bits ( & alac -> gb , 12 )"		505852	0					
ANR	505990	Callee	skip_bits		505852	0					
ANR	505991	Identifier	skip_bits		505852	0					
ANR	505992	ArgumentList	& alac -> gb		505852	1					
ANR	505993	Argument	& alac -> gb		505852	0					
ANR	505994	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	505995	UnaryOperator	&		505852	0					
ANR	505996	PtrMemberAccess	alac -> gb		505852	1					
ANR	505997	Identifier	alac		505852	0					
ANR	505998	Identifier	gb		505852	1					
ANR	505999	Argument	12		505852	1					
ANR	506000	PrimaryExpression	12		505852	0					
ANR	506001	ExpressionStatement	hassize = get_bits1 ( & alac -> gb )	65:4:1030:1060	505852	16	True				
ANR	506002	AssignmentExpression	hassize = get_bits1 ( & alac -> gb )		505852	0		=			
ANR	506003	Identifier	hassize		505852	0					
ANR	506004	CallExpression	get_bits1 ( & alac -> gb )		505852	1					
ANR	506005	Callee	get_bits1		505852	0					
ANR	506006	Identifier	get_bits1		505852	0					
ANR	506007	ArgumentList	& alac -> gb		505852	1					
ANR	506008	Argument	& alac -> gb		505852	0					
ANR	506009	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506010	UnaryOperator	&		505852	0					
ANR	506011	PtrMemberAccess	alac -> gb		505852	1					
ANR	506012	Identifier	alac		505852	0					
ANR	506013	Identifier	gb		505852	1					
ANR	506014	ExpressionStatement	"alac -> extra_bits = get_bits ( & alac -> gb , 2 ) << 3"	69:4:1069:1115	505852	17	True				
ANR	506015	AssignmentExpression	"alac -> extra_bits = get_bits ( & alac -> gb , 2 ) << 3"		505852	0		=			
ANR	506016	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506017	Identifier	alac		505852	0					
ANR	506018	Identifier	extra_bits		505852	1					
ANR	506019	ShiftExpression	"get_bits ( & alac -> gb , 2 ) << 3"		505852	1		<<			
ANR	506020	CallExpression	"get_bits ( & alac -> gb , 2 )"		505852	0					
ANR	506021	Callee	get_bits		505852	0					
ANR	506022	Identifier	get_bits		505852	0					
ANR	506023	ArgumentList	& alac -> gb		505852	1					
ANR	506024	Argument	& alac -> gb		505852	0					
ANR	506025	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506026	UnaryOperator	&		505852	0					
ANR	506027	PtrMemberAccess	alac -> gb		505852	1					
ANR	506028	Identifier	alac		505852	0					
ANR	506029	Identifier	gb		505852	1					
ANR	506030	Argument	2		505852	1					
ANR	506031	PrimaryExpression	2		505852	0					
ANR	506032	PrimaryExpression	3		505852	1					
ANR	506033	ExpressionStatement	isnotcompressed = get_bits1 ( & alac -> gb )	75:4:1167:1205	505852	18	True				
ANR	506034	AssignmentExpression	isnotcompressed = get_bits1 ( & alac -> gb )		505852	0		=			
ANR	506035	Identifier	isnotcompressed		505852	0					
ANR	506036	CallExpression	get_bits1 ( & alac -> gb )		505852	1					
ANR	506037	Callee	get_bits1		505852	0					
ANR	506038	Identifier	get_bits1		505852	0					
ANR	506039	ArgumentList	& alac -> gb		505852	1					
ANR	506040	Argument	& alac -> gb		505852	0					
ANR	506041	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506042	UnaryOperator	&		505852	0					
ANR	506043	PtrMemberAccess	alac -> gb		505852	1					
ANR	506044	Identifier	alac		505852	0					
ANR	506045	Identifier	gb		505852	1					
ANR	506046	IfStatement	if ( hassize )		505852	19					
ANR	506047	Condition	hassize	79:8:1218:1224	505852	0	True				
ANR	506048	Identifier	hassize		505852	0					
ANR	506049	CompoundStatement		75:17:1094:1094	505852	1					
ANR	506050	ExpressionStatement	"outputsamples = get_bits_long ( & alac -> gb , 32 )"	83:8:1303:1347	505852	0	True				
ANR	506051	AssignmentExpression	"outputsamples = get_bits_long ( & alac -> gb , 32 )"		505852	0		=			
ANR	506052	Identifier	outputsamples		505852	0					
ANR	506053	CallExpression	"get_bits_long ( & alac -> gb , 32 )"		505852	1					
ANR	506054	Callee	get_bits_long		505852	0					
ANR	506055	Identifier	get_bits_long		505852	0					
ANR	506056	ArgumentList	& alac -> gb		505852	1					
ANR	506057	Argument	& alac -> gb		505852	0					
ANR	506058	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506059	UnaryOperator	&		505852	0					
ANR	506060	PtrMemberAccess	alac -> gb		505852	1					
ANR	506061	Identifier	alac		505852	0					
ANR	506062	Identifier	gb		505852	1					
ANR	506063	Argument	32		505852	1					
ANR	506064	PrimaryExpression	32		505852	0					
ANR	506065	IfStatement	if ( outputsamples > alac -> setinfo_max_samples_per_frame )		505852	1					
ANR	506066	Condition	outputsamples > alac -> setinfo_max_samples_per_frame	85:11:1361:1411	505852	0	True				
ANR	506067	RelationalExpression	outputsamples > alac -> setinfo_max_samples_per_frame		505852	0		>			
ANR	506068	Identifier	outputsamples		505852	0					
ANR	506069	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		505852	1					
ANR	506070	Identifier	alac		505852	0					
ANR	506071	Identifier	setinfo_max_samples_per_frame		505852	1					
ANR	506072	CompoundStatement		81:63:1280:1280	505852	1					
ANR	506073	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"	87:12:1428:1534	505852	0	True				
ANR	506074	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"		505852	0					
ANR	506075	Callee	av_log		505852	0					
ANR	506076	Identifier	av_log		505852	0					
ANR	506077	ArgumentList	avctx		505852	1					
ANR	506078	Argument	avctx		505852	0					
ANR	506079	Identifier	avctx		505852	0					
ANR	506080	Argument	AV_LOG_ERROR		505852	1					
ANR	506081	Identifier	AV_LOG_ERROR		505852	0					
ANR	506082	Argument	"""outputsamples %d > %d\\n"""		505852	2					
ANR	506083	PrimaryExpression	"""outputsamples %d > %d\\n"""		505852	0					
ANR	506084	Argument	outputsamples		505852	3					
ANR	506085	Identifier	outputsamples		505852	0					
ANR	506086	Argument	alac -> setinfo_max_samples_per_frame		505852	4					
ANR	506087	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		505852	0					
ANR	506088	Identifier	alac		505852	0					
ANR	506089	Identifier	setinfo_max_samples_per_frame		505852	1					
ANR	506090	ReturnStatement	return - 1 ;	89:12:1549:1558	505852	1	True				
ANR	506091	UnaryOperationExpression	- 1		505852	0					
ANR	506092	UnaryOperator	-		505852	0					
ANR	506093	PrimaryExpression	1		505852	1					
ANR	506094	ElseStatement	else		505852	0					
ANR	506095	ExpressionStatement	outputsamples = alac -> setinfo_max_samples_per_frame	95:8:1592:1643	505852	0	True				
ANR	506096	AssignmentExpression	outputsamples = alac -> setinfo_max_samples_per_frame		505852	0		=			
ANR	506097	Identifier	outputsamples		505852	0					
ANR	506098	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		505852	1					
ANR	506099	Identifier	alac		505852	0					
ANR	506100	Identifier	setinfo_max_samples_per_frame		505852	1					
ANR	506101	IfStatement	if ( outputsamples > INT32_MAX )		505852	20					
ANR	506102	Condition	outputsamples > INT32_MAX	101:8:1685:1709	505852	0	True				
ANR	506103	RelationalExpression	outputsamples > INT32_MAX		505852	0		>			
ANR	506104	Identifier	outputsamples		505852	0					
ANR	506105	Identifier	INT32_MAX		505852	1					
ANR	506106	CompoundStatement		97:35:1579:1579	505852	1					
ANR	506107	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported block size: %u\\n"" , outputsamples )"	103:8:1723:1797	505852	0	True				
ANR	506108	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported block size: %u\\n"" , outputsamples )"		505852	0					
ANR	506109	Callee	av_log		505852	0					
ANR	506110	Identifier	av_log		505852	0					
ANR	506111	ArgumentList	avctx		505852	1					
ANR	506112	Argument	avctx		505852	0					
ANR	506113	Identifier	avctx		505852	0					
ANR	506114	Argument	AV_LOG_ERROR		505852	1					
ANR	506115	Identifier	AV_LOG_ERROR		505852	0					
ANR	506116	Argument	"""unsupported block size: %u\\n"""		505852	2					
ANR	506117	PrimaryExpression	"""unsupported block size: %u\\n"""		505852	0					
ANR	506118	Argument	outputsamples		505852	3					
ANR	506119	Identifier	outputsamples		505852	0					
ANR	506120	ReturnStatement	return AVERROR_INVALIDDATA ;	105:8:1808:1834	505852	1	True				
ANR	506121	Identifier	AVERROR_INVALIDDATA		505852	0					
ANR	506122	ExpressionStatement	alac -> frame . nb_samples = outputsamples	109:4:1848:1886	505852	21	True				
ANR	506123	AssignmentExpression	alac -> frame . nb_samples = outputsamples		505852	0		=			
ANR	506124	MemberAccess	alac -> frame . nb_samples		505852	0					
ANR	506125	PtrMemberAccess	alac -> frame		505852	0					
ANR	506126	Identifier	alac		505852	0					
ANR	506127	Identifier	frame		505852	1					
ANR	506128	Identifier	nb_samples		505852	1					
ANR	506129	Identifier	outputsamples		505852	1					
ANR	506130	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & alac -> frame ) ) < 0 )"		505852	22					
ANR	506131	Condition	"( ret = avctx -> get_buffer ( avctx , & alac -> frame ) ) < 0"	111:8:1897:1946	505852	0	True				
ANR	506132	RelationalExpression	"( ret = avctx -> get_buffer ( avctx , & alac -> frame ) ) < 0"		505852	0		<			
ANR	506133	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & alac -> frame )"		505852	0		=			
ANR	506134	Identifier	ret		505852	0					
ANR	506135	CallExpression	"avctx -> get_buffer ( avctx , & alac -> frame )"		505852	1					
ANR	506136	Callee	avctx -> get_buffer		505852	0					
ANR	506137	PtrMemberAccess	avctx -> get_buffer		505852	0					
ANR	506138	Identifier	avctx		505852	0					
ANR	506139	Identifier	get_buffer		505852	1					
ANR	506140	ArgumentList	avctx		505852	1					
ANR	506141	Argument	avctx		505852	0					
ANR	506142	Identifier	avctx		505852	0					
ANR	506143	Argument	& alac -> frame		505852	1					
ANR	506144	UnaryOperationExpression	& alac -> frame		505852	0					
ANR	506145	UnaryOperator	&		505852	0					
ANR	506146	PtrMemberAccess	alac -> frame		505852	1					
ANR	506147	Identifier	alac		505852	0					
ANR	506148	Identifier	frame		505852	1					
ANR	506149	PrimaryExpression	0		505852	1					
ANR	506150	CompoundStatement		107:60:1816:1816	505852	1					
ANR	506151	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	113:8:1960:2012	505852	0	True				
ANR	506152	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		505852	0					
ANR	506153	Callee	av_log		505852	0					
ANR	506154	Identifier	av_log		505852	0					
ANR	506155	ArgumentList	avctx		505852	1					
ANR	506156	Argument	avctx		505852	0					
ANR	506157	Identifier	avctx		505852	0					
ANR	506158	Argument	AV_LOG_ERROR		505852	1					
ANR	506159	Identifier	AV_LOG_ERROR		505852	0					
ANR	506160	Argument	"""get_buffer() failed\\n"""		505852	2					
ANR	506161	PrimaryExpression	"""get_buffer() failed\\n"""		505852	0					
ANR	506162	ReturnStatement	return ret ;	115:8:2023:2033	505852	1	True				
ANR	506163	Identifier	ret		505852	0					
ANR	506164	ExpressionStatement	readsamplesize = alac -> setinfo_sample_size - alac -> extra_bits + channels - 1	121:4:2049:2125	505852	23	True				
ANR	506165	AssignmentExpression	readsamplesize = alac -> setinfo_sample_size - alac -> extra_bits + channels - 1		505852	0		=			
ANR	506166	Identifier	readsamplesize		505852	0					
ANR	506167	AdditiveExpression	alac -> setinfo_sample_size - alac -> extra_bits + channels - 1		505852	1		-			
ANR	506168	PtrMemberAccess	alac -> setinfo_sample_size		505852	0					
ANR	506169	Identifier	alac		505852	0					
ANR	506170	Identifier	setinfo_sample_size		505852	1					
ANR	506171	AdditiveExpression	alac -> extra_bits + channels - 1		505852	1		+			
ANR	506172	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506173	Identifier	alac		505852	0					
ANR	506174	Identifier	extra_bits		505852	1					
ANR	506175	AdditiveExpression	channels - 1		505852	1		-			
ANR	506176	Identifier	channels		505852	0					
ANR	506177	PrimaryExpression	1		505852	1					
ANR	506178	IfStatement	if ( readsamplesize > MIN_CACHE_BITS )		505852	24					
ANR	506179	Condition	readsamplesize > MIN_CACHE_BITS	123:8:2136:2166	505852	0	True				
ANR	506180	RelationalExpression	readsamplesize > MIN_CACHE_BITS		505852	0		>			
ANR	506181	Identifier	readsamplesize		505852	0					
ANR	506182	Identifier	MIN_CACHE_BITS		505852	1					
ANR	506183	CompoundStatement		119:41:2036:2036	505852	1					
ANR	506184	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"	125:8:2180:2256	505852	0	True				
ANR	506185	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"		505852	0					
ANR	506186	Callee	av_log		505852	0					
ANR	506187	Identifier	av_log		505852	0					
ANR	506188	ArgumentList	avctx		505852	1					
ANR	506189	Argument	avctx		505852	0					
ANR	506190	Identifier	avctx		505852	0					
ANR	506191	Argument	AV_LOG_ERROR		505852	1					
ANR	506192	Identifier	AV_LOG_ERROR		505852	0					
ANR	506193	Argument	"""readsamplesize too big (%d)\\n"""		505852	2					
ANR	506194	PrimaryExpression	"""readsamplesize too big (%d)\\n"""		505852	0					
ANR	506195	Argument	readsamplesize		505852	3					
ANR	506196	Identifier	readsamplesize		505852	0					
ANR	506197	ReturnStatement	return - 1 ;	127:8:2267:2276	505852	1	True				
ANR	506198	UnaryOperationExpression	- 1		505852	0					
ANR	506199	UnaryOperator	-		505852	0					
ANR	506200	PrimaryExpression	1		505852	1					
ANR	506201	IfStatement	if ( ! isnotcompressed )		505852	25					
ANR	506202	Condition	! isnotcompressed	133:8:2296:2311	505852	0	True				
ANR	506203	UnaryOperationExpression	! isnotcompressed		505852	0					
ANR	506204	UnaryOperator	!		505852	0					
ANR	506205	Identifier	isnotcompressed		505852	1					
ANR	506206	CompoundStatement		141:8:2429:2459	505852	1					
ANR	506207	Statement	int16_t	137:8:2360:2366	505852	0	True				
ANR	506208	ExpressionStatement	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]	137:16:2368:2406	505852	1	True				
ANR	506209	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]		505852	0					
ANR	506210	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ]		505852	0					
ANR	506211	Identifier	predictor_coef_table		505852	0					
ANR	506212	Identifier	MAX_CHANNELS		505852	1					
ANR	506213	PrimaryExpression	32		505852	1					
ANR	506214	IdentifierDeclStatement	int predictor_coef_num [ MAX_CHANNELS ] ;	139:8:2417:2453	505852	2	True				
ANR	506215	IdentifierDecl	predictor_coef_num [ MAX_CHANNELS ]		505852	0					
ANR	506216	IdentifierDeclType	int [ MAX_CHANNELS ]		505852	0					
ANR	506217	Identifier	predictor_coef_num		505852	1					
ANR	506218	Identifier	MAX_CHANNELS		505852	2					
ANR	506219	IdentifierDeclStatement	int prediction_type [ MAX_CHANNELS ] ;	141:8:2464:2497	505852	3	True				
ANR	506220	IdentifierDecl	prediction_type [ MAX_CHANNELS ]		505852	0					
ANR	506221	IdentifierDeclType	int [ MAX_CHANNELS ]		505852	0					
ANR	506222	Identifier	prediction_type		505852	1					
ANR	506223	Identifier	MAX_CHANNELS		505852	2					
ANR	506224	IdentifierDeclStatement	int prediction_quantitization [ MAX_CHANNELS ] ;	143:8:2508:2551	505852	4	True				
ANR	506225	IdentifierDecl	prediction_quantitization [ MAX_CHANNELS ]		505852	0					
ANR	506226	IdentifierDeclType	int [ MAX_CHANNELS ]		505852	0					
ANR	506227	Identifier	prediction_quantitization		505852	1					
ANR	506228	Identifier	MAX_CHANNELS		505852	2					
ANR	506229	IdentifierDeclStatement	int ricemodifier [ MAX_CHANNELS ] ;	145:8:2562:2592	505852	5	True				
ANR	506230	IdentifierDecl	ricemodifier [ MAX_CHANNELS ]		505852	0					
ANR	506231	IdentifierDeclType	int [ MAX_CHANNELS ]		505852	0					
ANR	506232	Identifier	ricemodifier		505852	1					
ANR	506233	Identifier	MAX_CHANNELS		505852	2					
ANR	506234	ExpressionStatement	"interlacing_shift = get_bits ( & alac -> gb , 8 )"	149:8:2605:2647	505852	6	True				
ANR	506235	AssignmentExpression	"interlacing_shift = get_bits ( & alac -> gb , 8 )"		505852	0		=			
ANR	506236	Identifier	interlacing_shift		505852	0					
ANR	506237	CallExpression	"get_bits ( & alac -> gb , 8 )"		505852	1					
ANR	506238	Callee	get_bits		505852	0					
ANR	506239	Identifier	get_bits		505852	0					
ANR	506240	ArgumentList	& alac -> gb		505852	1					
ANR	506241	Argument	& alac -> gb		505852	0					
ANR	506242	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506243	UnaryOperator	&		505852	0					
ANR	506244	PtrMemberAccess	alac -> gb		505852	1					
ANR	506245	Identifier	alac		505852	0					
ANR	506246	Identifier	gb		505852	1					
ANR	506247	Argument	8		505852	1					
ANR	506248	PrimaryExpression	8		505852	0					
ANR	506249	ExpressionStatement	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"	151:8:2658:2705	505852	7	True				
ANR	506250	AssignmentExpression	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"		505852	0		=			
ANR	506251	Identifier	interlacing_leftweight		505852	0					
ANR	506252	CallExpression	"get_bits ( & alac -> gb , 8 )"		505852	1					
ANR	506253	Callee	get_bits		505852	0					
ANR	506254	Identifier	get_bits		505852	0					
ANR	506255	ArgumentList	& alac -> gb		505852	1					
ANR	506256	Argument	& alac -> gb		505852	0					
ANR	506257	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506258	UnaryOperator	&		505852	0					
ANR	506259	PtrMemberAccess	alac -> gb		505852	1					
ANR	506260	Identifier	alac		505852	0					
ANR	506261	Identifier	gb		505852	1					
ANR	506262	Argument	8		505852	1					
ANR	506263	PrimaryExpression	8		505852	0					
ANR	506264	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		505852	8					
ANR	506265	ForInit	ch = 0 ;	155:13:2723:2729	505852	0	True				
ANR	506266	AssignmentExpression	ch = 0		505852	0		=			
ANR	506267	Identifier	ch		505852	0					
ANR	506268	PrimaryExpression	0		505852	1					
ANR	506269	Condition	ch < channels	155:21:2731:2743	505852	1	True				
ANR	506270	RelationalExpression	ch < channels		505852	0		<			
ANR	506271	Identifier	ch		505852	0					
ANR	506272	Identifier	channels		505852	1					
ANR	506273	PostIncDecOperationExpression	ch ++	155:36:2746:2749	505852	2	True				
ANR	506274	Identifier	ch		505852	0					
ANR	506275	IncDec	++		505852	1					
ANR	506276	CompoundStatement		151:42:2619:2619	505852	3					
ANR	506277	ExpressionStatement	"prediction_type [ ch ] = get_bits ( & alac -> gb , 4 )"	157:12:2767:2811	505852	0	True				
ANR	506278	AssignmentExpression	"prediction_type [ ch ] = get_bits ( & alac -> gb , 4 )"		505852	0		=			
ANR	506279	ArrayIndexing	prediction_type [ ch ]		505852	0					
ANR	506280	Identifier	prediction_type		505852	0					
ANR	506281	Identifier	ch		505852	1					
ANR	506282	CallExpression	"get_bits ( & alac -> gb , 4 )"		505852	1					
ANR	506283	Callee	get_bits		505852	0					
ANR	506284	Identifier	get_bits		505852	0					
ANR	506285	ArgumentList	& alac -> gb		505852	1					
ANR	506286	Argument	& alac -> gb		505852	0					
ANR	506287	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506288	UnaryOperator	&		505852	0					
ANR	506289	PtrMemberAccess	alac -> gb		505852	1					
ANR	506290	Identifier	alac		505852	0					
ANR	506291	Identifier	gb		505852	1					
ANR	506292	Argument	4		505852	1					
ANR	506293	PrimaryExpression	4		505852	0					
ANR	506294	ExpressionStatement	"prediction_quantitization [ ch ] = get_bits ( & alac -> gb , 4 )"	159:12:2826:2880	505852	1	True				
ANR	506295	AssignmentExpression	"prediction_quantitization [ ch ] = get_bits ( & alac -> gb , 4 )"		505852	0		=			
ANR	506296	ArrayIndexing	prediction_quantitization [ ch ]		505852	0					
ANR	506297	Identifier	prediction_quantitization		505852	0					
ANR	506298	Identifier	ch		505852	1					
ANR	506299	CallExpression	"get_bits ( & alac -> gb , 4 )"		505852	1					
ANR	506300	Callee	get_bits		505852	0					
ANR	506301	Identifier	get_bits		505852	0					
ANR	506302	ArgumentList	& alac -> gb		505852	1					
ANR	506303	Argument	& alac -> gb		505852	0					
ANR	506304	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506305	UnaryOperator	&		505852	0					
ANR	506306	PtrMemberAccess	alac -> gb		505852	1					
ANR	506307	Identifier	alac		505852	0					
ANR	506308	Identifier	gb		505852	1					
ANR	506309	Argument	4		505852	1					
ANR	506310	PrimaryExpression	4		505852	0					
ANR	506311	ExpressionStatement	"ricemodifier [ ch ] = get_bits ( & alac -> gb , 3 )"	163:12:2897:2938	505852	2	True				
ANR	506312	AssignmentExpression	"ricemodifier [ ch ] = get_bits ( & alac -> gb , 3 )"		505852	0		=			
ANR	506313	ArrayIndexing	ricemodifier [ ch ]		505852	0					
ANR	506314	Identifier	ricemodifier		505852	0					
ANR	506315	Identifier	ch		505852	1					
ANR	506316	CallExpression	"get_bits ( & alac -> gb , 3 )"		505852	1					
ANR	506317	Callee	get_bits		505852	0					
ANR	506318	Identifier	get_bits		505852	0					
ANR	506319	ArgumentList	& alac -> gb		505852	1					
ANR	506320	Argument	& alac -> gb		505852	0					
ANR	506321	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506322	UnaryOperator	&		505852	0					
ANR	506323	PtrMemberAccess	alac -> gb		505852	1					
ANR	506324	Identifier	alac		505852	0					
ANR	506325	Identifier	gb		505852	1					
ANR	506326	Argument	3		505852	1					
ANR	506327	PrimaryExpression	3		505852	0					
ANR	506328	ExpressionStatement	"predictor_coef_num [ ch ] = get_bits ( & alac -> gb , 5 )"	165:12:2953:3000	505852	3	True				
ANR	506329	AssignmentExpression	"predictor_coef_num [ ch ] = get_bits ( & alac -> gb , 5 )"		505852	0		=			
ANR	506330	ArrayIndexing	predictor_coef_num [ ch ]		505852	0					
ANR	506331	Identifier	predictor_coef_num		505852	0					
ANR	506332	Identifier	ch		505852	1					
ANR	506333	CallExpression	"get_bits ( & alac -> gb , 5 )"		505852	1					
ANR	506334	Callee	get_bits		505852	0					
ANR	506335	Identifier	get_bits		505852	0					
ANR	506336	ArgumentList	& alac -> gb		505852	1					
ANR	506337	Argument	& alac -> gb		505852	0					
ANR	506338	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506339	UnaryOperator	&		505852	0					
ANR	506340	PtrMemberAccess	alac -> gb		505852	1					
ANR	506341	Identifier	alac		505852	0					
ANR	506342	Identifier	gb		505852	1					
ANR	506343	Argument	5		505852	1					
ANR	506344	PrimaryExpression	5		505852	0					
ANR	506345	ForStatement	for ( i = 0 ; i < predictor_coef_num [ ch ] ; i ++ )		505852	4					
ANR	506346	ForInit	i = 0 ;	171:17:3066:3071	505852	0	True				
ANR	506347	AssignmentExpression	i = 0		505852	0		=			
ANR	506348	Identifier	i		505852	0					
ANR	506349	PrimaryExpression	0		505852	1					
ANR	506350	Condition	i < predictor_coef_num [ ch ]	171:24:3073:3098	505852	1	True				
ANR	506351	RelationalExpression	i < predictor_coef_num [ ch ]		505852	0		<			
ANR	506352	Identifier	i		505852	0					
ANR	506353	ArrayIndexing	predictor_coef_num [ ch ]		505852	1					
ANR	506354	Identifier	predictor_coef_num		505852	0					
ANR	506355	Identifier	ch		505852	1					
ANR	506356	PostIncDecOperationExpression	i ++	171:52:3101:3103	505852	2	True				
ANR	506357	Identifier	i		505852	0					
ANR	506358	IncDec	++		505852	1					
ANR	506359	ExpressionStatement	"predictor_coef_table [ ch ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"	173:16:3123:3185	505852	3	True				
ANR	506360	AssignmentExpression	"predictor_coef_table [ ch ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"		505852	0		=			
ANR	506361	ArrayIndexing	predictor_coef_table [ ch ] [ i ]		505852	0					
ANR	506362	ArrayIndexing	predictor_coef_table [ ch ]		505852	0					
ANR	506363	Identifier	predictor_coef_table		505852	0					
ANR	506364	Identifier	ch		505852	1					
ANR	506365	Identifier	i		505852	1					
ANR	506366	CastExpression	"( int16_t ) get_bits ( & alac -> gb , 16 )"		505852	1					
ANR	506367	CastTarget	int16_t		505852	0					
ANR	506368	CallExpression	"get_bits ( & alac -> gb , 16 )"		505852	1					
ANR	506369	Callee	get_bits		505852	0					
ANR	506370	Identifier	get_bits		505852	0					
ANR	506371	ArgumentList	& alac -> gb		505852	1					
ANR	506372	Argument	& alac -> gb		505852	0					
ANR	506373	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506374	UnaryOperator	&		505852	0					
ANR	506375	PtrMemberAccess	alac -> gb		505852	1					
ANR	506376	Identifier	alac		505852	0					
ANR	506377	Identifier	gb		505852	1					
ANR	506378	Argument	16		505852	1					
ANR	506379	PrimaryExpression	16		505852	0					
ANR	506380	IfStatement	if ( alac -> extra_bits )		505852	9					
ANR	506381	Condition	alac -> extra_bits	179:12:3213:3228	505852	0	True				
ANR	506382	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506383	Identifier	alac		505852	0					
ANR	506384	Identifier	extra_bits		505852	1					
ANR	506385	CompoundStatement		175:30:3098:3098	505852	1					
ANR	506386	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		505852	0					
ANR	506387	ForInit	i = 0 ;	181:17:3251:3256	505852	0	True				
ANR	506388	AssignmentExpression	i = 0		505852	0		=			
ANR	506389	Identifier	i		505852	0					
ANR	506390	PrimaryExpression	0		505852	1					
ANR	506391	Condition	i < outputsamples	181:24:3258:3274	505852	1	True				
ANR	506392	RelationalExpression	i < outputsamples		505852	0		<			
ANR	506393	Identifier	i		505852	0					
ANR	506394	Identifier	outputsamples		505852	1					
ANR	506395	PostIncDecOperationExpression	i ++	181:43:3277:3279	505852	2	True				
ANR	506396	Identifier	i		505852	0					
ANR	506397	IncDec	++		505852	1					
ANR	506398	CompoundStatement		177:48:3149:3149	505852	3					
ANR	506399	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		505852	0					
ANR	506400	ForInit	ch = 0 ;	183:21:3306:3312	505852	0	True				
ANR	506401	AssignmentExpression	ch = 0		505852	0		=			
ANR	506402	Identifier	ch		505852	0					
ANR	506403	PrimaryExpression	0		505852	1					
ANR	506404	Condition	ch < channels	183:29:3314:3326	505852	1	True				
ANR	506405	RelationalExpression	ch < channels		505852	0		<			
ANR	506406	Identifier	ch		505852	0					
ANR	506407	Identifier	channels		505852	1					
ANR	506408	PostIncDecOperationExpression	ch ++	183:44:3329:3332	505852	2	True				
ANR	506409	Identifier	ch		505852	0					
ANR	506410	IncDec	++		505852	1					
ANR	506411	ExpressionStatement	"alac -> extra_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> extra_bits )"	185:20:3356:3426	505852	3	True				
ANR	506412	AssignmentExpression	"alac -> extra_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> extra_bits )"		505852	0		=			
ANR	506413	ArrayIndexing	alac -> extra_bits_buffer [ ch ] [ i ]		505852	0					
ANR	506414	ArrayIndexing	alac -> extra_bits_buffer [ ch ]		505852	0					
ANR	506415	PtrMemberAccess	alac -> extra_bits_buffer		505852	0					
ANR	506416	Identifier	alac		505852	0					
ANR	506417	Identifier	extra_bits_buffer		505852	1					
ANR	506418	Identifier	ch		505852	1					
ANR	506419	Identifier	i		505852	1					
ANR	506420	CallExpression	"get_bits ( & alac -> gb , alac -> extra_bits )"		505852	1					
ANR	506421	Callee	get_bits		505852	0					
ANR	506422	Identifier	get_bits		505852	0					
ANR	506423	ArgumentList	& alac -> gb		505852	1					
ANR	506424	Argument	& alac -> gb		505852	0					
ANR	506425	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506426	UnaryOperator	&		505852	0					
ANR	506427	PtrMemberAccess	alac -> gb		505852	1					
ANR	506428	Identifier	alac		505852	0					
ANR	506429	Identifier	gb		505852	1					
ANR	506430	Argument	alac -> extra_bits		505852	1					
ANR	506431	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506432	Identifier	alac		505852	0					
ANR	506433	Identifier	extra_bits		505852	1					
ANR	506434	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		505852	10					
ANR	506435	ForInit	ch = 0 ;	191:13:3468:3474	505852	0	True				
ANR	506436	AssignmentExpression	ch = 0		505852	0		=			
ANR	506437	Identifier	ch		505852	0					
ANR	506438	PrimaryExpression	0		505852	1					
ANR	506439	Condition	ch < channels	191:21:3476:3488	505852	1	True				
ANR	506440	RelationalExpression	ch < channels		505852	0		<			
ANR	506441	Identifier	ch		505852	0					
ANR	506442	Identifier	channels		505852	1					
ANR	506443	PostIncDecOperationExpression	ch ++	191:36:3491:3494	505852	2	True				
ANR	506444	Identifier	ch		505852	0					
ANR	506445	IncDec	++		505852	1					
ANR	506446	CompoundStatement		187:42:3364:3364	505852	3					
ANR	506447	ExpressionStatement	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ ch ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"	193:12:3512:4055	505852	0	True				
ANR	506448	CallExpression	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ ch ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"		505852	0					
ANR	506449	Callee	bastardized_rice_decompress		505852	0					
ANR	506450	Identifier	bastardized_rice_decompress		505852	0					
ANR	506451	ArgumentList	alac		505852	1					
ANR	506452	Argument	alac		505852	0					
ANR	506453	Identifier	alac		505852	0					
ANR	506454	Argument	alac -> predicterror_buffer [ ch ]		505852	1					
ANR	506455	ArrayIndexing	alac -> predicterror_buffer [ ch ]		505852	0					
ANR	506456	PtrMemberAccess	alac -> predicterror_buffer		505852	0					
ANR	506457	Identifier	alac		505852	0					
ANR	506458	Identifier	predicterror_buffer		505852	1					
ANR	506459	Identifier	ch		505852	1					
ANR	506460	Argument	outputsamples		505852	2					
ANR	506461	Identifier	outputsamples		505852	0					
ANR	506462	Argument	readsamplesize		505852	3					
ANR	506463	Identifier	readsamplesize		505852	0					
ANR	506464	Argument	alac -> setinfo_rice_initialhistory		505852	4					
ANR	506465	PtrMemberAccess	alac -> setinfo_rice_initialhistory		505852	0					
ANR	506466	Identifier	alac		505852	0					
ANR	506467	Identifier	setinfo_rice_initialhistory		505852	1					
ANR	506468	Argument	alac -> setinfo_rice_kmodifier		505852	5					
ANR	506469	PtrMemberAccess	alac -> setinfo_rice_kmodifier		505852	0					
ANR	506470	Identifier	alac		505852	0					
ANR	506471	Identifier	setinfo_rice_kmodifier		505852	1					
ANR	506472	Argument	ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4		505852	6					
ANR	506473	MultiplicativeExpression	ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4		505852	0		*			
ANR	506474	ArrayIndexing	ricemodifier [ ch ]		505852	0					
ANR	506475	Identifier	ricemodifier		505852	0					
ANR	506476	Identifier	ch		505852	1					
ANR	506477	MultiplicativeExpression	alac -> setinfo_rice_historymult / 4		505852	1		/			
ANR	506478	PtrMemberAccess	alac -> setinfo_rice_historymult		505852	0					
ANR	506479	Identifier	alac		505852	0					
ANR	506480	Identifier	setinfo_rice_historymult		505852	1					
ANR	506481	PrimaryExpression	4		505852	1					
ANR	506482	Argument	( 1 << alac -> setinfo_rice_kmodifier ) - 1		505852	7					
ANR	506483	AdditiveExpression	( 1 << alac -> setinfo_rice_kmodifier ) - 1		505852	0		-			
ANR	506484	ShiftExpression	1 << alac -> setinfo_rice_kmodifier		505852	0		<<			
ANR	506485	PrimaryExpression	1		505852	0					
ANR	506486	PtrMemberAccess	alac -> setinfo_rice_kmodifier		505852	1					
ANR	506487	Identifier	alac		505852	0					
ANR	506488	Identifier	setinfo_rice_kmodifier		505852	1					
ANR	506489	PrimaryExpression	1		505852	1					
ANR	506490	IfStatement	if ( prediction_type [ ch ] == 0 )		505852	1					
ANR	506491	Condition	prediction_type [ ch ] == 0	211:16:4076:4099	505852	0	True				
ANR	506492	EqualityExpression	prediction_type [ ch ] == 0		505852	0		==			
ANR	506493	ArrayIndexing	prediction_type [ ch ]		505852	0					
ANR	506494	Identifier	prediction_type		505852	0					
ANR	506495	Identifier	ch		505852	1					
ANR	506496	PrimaryExpression	0		505852	1					
ANR	506497	CompoundStatement		207:42:3969:3969	505852	1					
ANR	506498	ExpressionStatement	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ ch ] , alac -> outputsamples_buffer [ ch ] , outputsamples , readsamplesize , predictor_coef_table [ ch ] , predictor_coef_num [ ch ] , prediction_quantitization [ ch ] )"	215:16:4157:4650	505852	0	True				
ANR	506499	CallExpression	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ ch ] , alac -> outputsamples_buffer [ ch ] , outputsamples , readsamplesize , predictor_coef_table [ ch ] , predictor_coef_num [ ch ] , prediction_quantitization [ ch ] )"		505852	0					
ANR	506500	Callee	predictor_decompress_fir_adapt		505852	0					
ANR	506501	Identifier	predictor_decompress_fir_adapt		505852	0					
ANR	506502	ArgumentList	alac -> predicterror_buffer [ ch ]		505852	1					
ANR	506503	Argument	alac -> predicterror_buffer [ ch ]		505852	0					
ANR	506504	ArrayIndexing	alac -> predicterror_buffer [ ch ]		505852	0					
ANR	506505	PtrMemberAccess	alac -> predicterror_buffer		505852	0					
ANR	506506	Identifier	alac		505852	0					
ANR	506507	Identifier	predicterror_buffer		505852	1					
ANR	506508	Identifier	ch		505852	1					
ANR	506509	Argument	alac -> outputsamples_buffer [ ch ]		505852	1					
ANR	506510	ArrayIndexing	alac -> outputsamples_buffer [ ch ]		505852	0					
ANR	506511	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506512	Identifier	alac		505852	0					
ANR	506513	Identifier	outputsamples_buffer		505852	1					
ANR	506514	Identifier	ch		505852	1					
ANR	506515	Argument	outputsamples		505852	2					
ANR	506516	Identifier	outputsamples		505852	0					
ANR	506517	Argument	readsamplesize		505852	3					
ANR	506518	Identifier	readsamplesize		505852	0					
ANR	506519	Argument	predictor_coef_table [ ch ]		505852	4					
ANR	506520	ArrayIndexing	predictor_coef_table [ ch ]		505852	0					
ANR	506521	Identifier	predictor_coef_table		505852	0					
ANR	506522	Identifier	ch		505852	1					
ANR	506523	Argument	predictor_coef_num [ ch ]		505852	5					
ANR	506524	ArrayIndexing	predictor_coef_num [ ch ]		505852	0					
ANR	506525	Identifier	predictor_coef_num		505852	0					
ANR	506526	Identifier	ch		505852	1					
ANR	506527	Argument	prediction_quantitization [ ch ]		505852	6					
ANR	506528	ArrayIndexing	prediction_quantitization [ ch ]		505852	0					
ANR	506529	Identifier	prediction_quantitization		505852	0					
ANR	506530	Identifier	ch		505852	1					
ANR	506531	ElseStatement	else		505852	0					
ANR	506532	CompoundStatement		225:19:4539:4539	505852	0					
ANR	506533	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ ch ] )"	231:16:4691:4781	505852	0	True				
ANR	506534	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ ch ] )"		505852	0					
ANR	506535	Callee	av_log		505852	0					
ANR	506536	Identifier	av_log		505852	0					
ANR	506537	ArgumentList	avctx		505852	1					
ANR	506538	Argument	avctx		505852	0					
ANR	506539	Identifier	avctx		505852	0					
ANR	506540	Argument	AV_LOG_ERROR		505852	1					
ANR	506541	Identifier	AV_LOG_ERROR		505852	0					
ANR	506542	Argument	"""FIXME: unhandled prediction type: %i\\n"""		505852	2					
ANR	506543	PrimaryExpression	"""FIXME: unhandled prediction type: %i\\n"""		505852	0					
ANR	506544	Argument	prediction_type [ ch ]		505852	3					
ANR	506545	ArrayIndexing	prediction_type [ ch ]		505852	0					
ANR	506546	Identifier	prediction_type		505852	0					
ANR	506547	Identifier	ch		505852	1					
ANR	506548	ElseStatement	else		505852	0					
ANR	506549	CompoundStatement		245:11:5063:5063	505852	0					
ANR	506550	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		505852	0					
ANR	506551	ForInit	i = 0 ;	253:13:5253:5258	505852	0	True				
ANR	506552	AssignmentExpression	i = 0		505852	0		=			
ANR	506553	Identifier	i		505852	0					
ANR	506554	PrimaryExpression	0		505852	1					
ANR	506555	Condition	i < outputsamples	253:20:5260:5276	505852	1	True				
ANR	506556	RelationalExpression	i < outputsamples		505852	0		<			
ANR	506557	Identifier	i		505852	0					
ANR	506558	Identifier	outputsamples		505852	1					
ANR	506559	PostIncDecOperationExpression	i ++	253:39:5279:5281	505852	2	True				
ANR	506560	Identifier	i		505852	0					
ANR	506561	IncDec	++		505852	1					
ANR	506562	CompoundStatement		249:44:5151:5151	505852	3					
ANR	506563	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		505852	0					
ANR	506564	ForInit	ch = 0 ;	255:17:5304:5310	505852	0	True				
ANR	506565	AssignmentExpression	ch = 0		505852	0		=			
ANR	506566	Identifier	ch		505852	0					
ANR	506567	PrimaryExpression	0		505852	1					
ANR	506568	Condition	ch < channels	255:25:5312:5324	505852	1	True				
ANR	506569	RelationalExpression	ch < channels		505852	0		<			
ANR	506570	Identifier	ch		505852	0					
ANR	506571	Identifier	channels		505852	1					
ANR	506572	PostIncDecOperationExpression	ch ++	255:40:5327:5330	505852	2	True				
ANR	506573	Identifier	ch		505852	0					
ANR	506574	IncDec	++		505852	1					
ANR	506575	CompoundStatement		251:46:5200:5200	505852	3					
ANR	506576	ExpressionStatement	"alac -> outputsamples_buffer [ ch ] [ i ] = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"	257:16:5352:5508	505852	0	True				
ANR	506577	AssignmentExpression	"alac -> outputsamples_buffer [ ch ] [ i ] = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		505852	0		=			
ANR	506578	ArrayIndexing	alac -> outputsamples_buffer [ ch ] [ i ]		505852	0					
ANR	506579	ArrayIndexing	alac -> outputsamples_buffer [ ch ]		505852	0					
ANR	506580	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506581	Identifier	alac		505852	0					
ANR	506582	Identifier	outputsamples_buffer		505852	1					
ANR	506583	Identifier	ch		505852	1					
ANR	506584	Identifier	i		505852	1					
ANR	506585	CallExpression	"get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		505852	1					
ANR	506586	Callee	get_sbits_long		505852	0					
ANR	506587	Identifier	get_sbits_long		505852	0					
ANR	506588	ArgumentList	& alac -> gb		505852	1					
ANR	506589	Argument	& alac -> gb		505852	0					
ANR	506590	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506591	UnaryOperator	&		505852	0					
ANR	506592	PtrMemberAccess	alac -> gb		505852	1					
ANR	506593	Identifier	alac		505852	0					
ANR	506594	Identifier	gb		505852	1					
ANR	506595	Argument	alac -> setinfo_sample_size		505852	1					
ANR	506596	PtrMemberAccess	alac -> setinfo_sample_size		505852	0					
ANR	506597	Identifier	alac		505852	0					
ANR	506598	Identifier	setinfo_sample_size		505852	1					
ANR	506599	ExpressionStatement	alac -> extra_bits = 0	265:8:5545:5565	505852	1	True				
ANR	506600	AssignmentExpression	alac -> extra_bits = 0		505852	0		=			
ANR	506601	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506602	Identifier	alac		505852	0					
ANR	506603	Identifier	extra_bits		505852	1					
ANR	506604	PrimaryExpression	0		505852	1					
ANR	506605	ExpressionStatement	interlacing_shift = 0	267:8:5576:5597	505852	2	True				
ANR	506606	AssignmentExpression	interlacing_shift = 0		505852	0		=			
ANR	506607	Identifier	interlacing_shift		505852	0					
ANR	506608	PrimaryExpression	0		505852	1					
ANR	506609	ExpressionStatement	interlacing_leftweight = 0	269:8:5608:5634	505852	3	True				
ANR	506610	AssignmentExpression	interlacing_leftweight = 0		505852	0		=			
ANR	506611	Identifier	interlacing_leftweight		505852	0					
ANR	506612	PrimaryExpression	0		505852	1					
ANR	506613	IfStatement	"if ( get_bits ( & alac -> gb , 3 ) != 7 )"		505852	26					
ANR	506614	Condition	"get_bits ( & alac -> gb , 3 ) != 7"	273:8:5652:5678	505852	0	True				
ANR	506615	EqualityExpression	"get_bits ( & alac -> gb , 3 ) != 7"		505852	0		!=			
ANR	506616	CallExpression	"get_bits ( & alac -> gb , 3 )"		505852	0					
ANR	506617	Callee	get_bits		505852	0					
ANR	506618	Identifier	get_bits		505852	0					
ANR	506619	ArgumentList	& alac -> gb		505852	1					
ANR	506620	Argument	& alac -> gb		505852	0					
ANR	506621	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506622	UnaryOperator	&		505852	0					
ANR	506623	PtrMemberAccess	alac -> gb		505852	1					
ANR	506624	Identifier	alac		505852	0					
ANR	506625	Identifier	gb		505852	1					
ANR	506626	Argument	3		505852	1					
ANR	506627	PrimaryExpression	3		505852	0					
ANR	506628	PrimaryExpression	7		505852	1					
ANR	506629	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"	275:8:5690:5749	505852	1	True				
ANR	506630	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"		505852	0					
ANR	506631	Callee	av_log		505852	0					
ANR	506632	Identifier	av_log		505852	0					
ANR	506633	ArgumentList	avctx		505852	1					
ANR	506634	Argument	avctx		505852	0					
ANR	506635	Identifier	avctx		505852	0					
ANR	506636	Argument	AV_LOG_ERROR		505852	1					
ANR	506637	Identifier	AV_LOG_ERROR		505852	0					
ANR	506638	Argument	"""Error : Wrong End Of Frame\\n"""		505852	2					
ANR	506639	PrimaryExpression	"""Error : Wrong End Of Frame\\n"""		505852	0					
ANR	506640	IfStatement	if ( channels == 2 && interlacing_leftweight )		505852	27					
ANR	506641	Condition	channels == 2 && interlacing_leftweight	279:8:5762:5800	505852	0	True				
ANR	506642	AndExpression	channels == 2 && interlacing_leftweight		505852	0		&&			
ANR	506643	EqualityExpression	channels == 2		505852	0		==			
ANR	506644	Identifier	channels		505852	0					
ANR	506645	PrimaryExpression	2		505852	1					
ANR	506646	Identifier	interlacing_leftweight		505852	1					
ANR	506647	CompoundStatement		275:49:5670:5670	505852	1					
ANR	506648	ExpressionStatement	"decorrelate_stereo ( alac -> outputsamples_buffer , outputsamples , interlacing_shift , interlacing_leftweight )"	281:8:5814:5946	505852	0	True				
ANR	506649	CallExpression	"decorrelate_stereo ( alac -> outputsamples_buffer , outputsamples , interlacing_shift , interlacing_leftweight )"		505852	0					
ANR	506650	Callee	decorrelate_stereo		505852	0					
ANR	506651	Identifier	decorrelate_stereo		505852	0					
ANR	506652	ArgumentList	alac -> outputsamples_buffer		505852	1					
ANR	506653	Argument	alac -> outputsamples_buffer		505852	0					
ANR	506654	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506655	Identifier	alac		505852	0					
ANR	506656	Identifier	outputsamples_buffer		505852	1					
ANR	506657	Argument	outputsamples		505852	1					
ANR	506658	Identifier	outputsamples		505852	0					
ANR	506659	Argument	interlacing_shift		505852	2					
ANR	506660	Identifier	interlacing_shift		505852	0					
ANR	506661	Argument	interlacing_leftweight		505852	3					
ANR	506662	Identifier	interlacing_leftweight		505852	0					
ANR	506663	IfStatement	if ( alac -> extra_bits )		505852	28					
ANR	506664	Condition	alac -> extra_bits	289:8:5966:5981	505852	0	True				
ANR	506665	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506666	Identifier	alac		505852	0					
ANR	506667	Identifier	extra_bits		505852	1					
ANR	506668	CompoundStatement		285:26:5851:5851	505852	1					
ANR	506669	ExpressionStatement	"append_extra_bits ( alac -> outputsamples_buffer , alac -> extra_bits_buffer , alac -> extra_bits , alac -> numchannels , outputsamples )"	291:8:5995:6144	505852	0	True				
ANR	506670	CallExpression	"append_extra_bits ( alac -> outputsamples_buffer , alac -> extra_bits_buffer , alac -> extra_bits , alac -> numchannels , outputsamples )"		505852	0					
ANR	506671	Callee	append_extra_bits		505852	0					
ANR	506672	Identifier	append_extra_bits		505852	0					
ANR	506673	ArgumentList	alac -> outputsamples_buffer		505852	1					
ANR	506674	Argument	alac -> outputsamples_buffer		505852	0					
ANR	506675	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506676	Identifier	alac		505852	0					
ANR	506677	Identifier	outputsamples_buffer		505852	1					
ANR	506678	Argument	alac -> extra_bits_buffer		505852	1					
ANR	506679	PtrMemberAccess	alac -> extra_bits_buffer		505852	0					
ANR	506680	Identifier	alac		505852	0					
ANR	506681	Identifier	extra_bits_buffer		505852	1					
ANR	506682	Argument	alac -> extra_bits		505852	2					
ANR	506683	PtrMemberAccess	alac -> extra_bits		505852	0					
ANR	506684	Identifier	alac		505852	0					
ANR	506685	Identifier	extra_bits		505852	1					
ANR	506686	Argument	alac -> numchannels		505852	3					
ANR	506687	PtrMemberAccess	alac -> numchannels		505852	0					
ANR	506688	Identifier	alac		505852	0					
ANR	506689	Identifier	numchannels		505852	1					
ANR	506690	Argument	outputsamples		505852	4					
ANR	506691	Identifier	outputsamples		505852	0					
ANR	506692	SwitchStatement	switch ( alac -> setinfo_sample_size )		505852	29					
ANR	506693	Condition	alac -> setinfo_sample_size	299:11:6167:6191	505852	0	True				
ANR	506694	PtrMemberAccess	alac -> setinfo_sample_size		505852	0					
ANR	506695	Identifier	alac		505852	0					
ANR	506696	Identifier	setinfo_sample_size		505852	1					
ANR	506697	CompoundStatement		295:38:6061:6061	505852	1					
ANR	506698	Label	case 16 :	301:4:6201:6208	505852	0	True				
ANR	506699	IfStatement	if ( channels == 2 )		505852	1					
ANR	506700	Condition	channels == 2	303:12:6223:6235	505852	0	True				
ANR	506701	EqualityExpression	channels == 2		505852	0		==			
ANR	506702	Identifier	channels		505852	0					
ANR	506703	PrimaryExpression	2		505852	1					
ANR	506704	CompoundStatement		299:27:6105:6105	505852	1					
ANR	506705	ExpressionStatement	"interleave_stereo_16 ( alac -> outputsamples_buffer , ( int16_t * ) alac -> frame . data [ 0 ] , outputsamples )"	305:12:6253:6382	505852	0	True				
ANR	506706	CallExpression	"interleave_stereo_16 ( alac -> outputsamples_buffer , ( int16_t * ) alac -> frame . data [ 0 ] , outputsamples )"		505852	0					
ANR	506707	Callee	interleave_stereo_16		505852	0					
ANR	506708	Identifier	interleave_stereo_16		505852	0					
ANR	506709	ArgumentList	alac -> outputsamples_buffer		505852	1					
ANR	506710	Argument	alac -> outputsamples_buffer		505852	0					
ANR	506711	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506712	Identifier	alac		505852	0					
ANR	506713	Identifier	outputsamples_buffer		505852	1					
ANR	506714	Argument	( int16_t * ) alac -> frame . data [ 0 ]		505852	1					
ANR	506715	CastExpression	( int16_t * ) alac -> frame . data [ 0 ]		505852	0					
ANR	506716	CastTarget	int16_t *		505852	0					
ANR	506717	ArrayIndexing	alac -> frame . data [ 0 ]		505852	1					
ANR	506718	MemberAccess	alac -> frame . data		505852	0					
ANR	506719	PtrMemberAccess	alac -> frame		505852	0					
ANR	506720	Identifier	alac		505852	0					
ANR	506721	Identifier	frame		505852	1					
ANR	506722	Identifier	data		505852	1					
ANR	506723	PrimaryExpression	0		505852	1					
ANR	506724	Argument	outputsamples		505852	2					
ANR	506725	Identifier	outputsamples		505852	0					
ANR	506726	ElseStatement	else		505852	0					
ANR	506727	CompoundStatement		307:12:6282:6333	505852	0					
ANR	506728	IdentifierDeclStatement	int16_t * outbuffer = ( int16_t * ) alac -> frame . data [ 0 ] ;	311:12:6415:6466	505852	0	True				
ANR	506729	IdentifierDecl	* outbuffer = ( int16_t * ) alac -> frame . data [ 0 ]		505852	0					
ANR	506730	IdentifierDeclType	int16_t *		505852	0					
ANR	506731	Identifier	outbuffer		505852	1					
ANR	506732	AssignmentExpression	* outbuffer = ( int16_t * ) alac -> frame . data [ 0 ]		505852	2		=			
ANR	506733	Identifier	outbuffer		505852	0					
ANR	506734	CastExpression	( int16_t * ) alac -> frame . data [ 0 ]		505852	1					
ANR	506735	CastTarget	int16_t *		505852	0					
ANR	506736	ArrayIndexing	alac -> frame . data [ 0 ]		505852	1					
ANR	506737	MemberAccess	alac -> frame . data		505852	0					
ANR	506738	PtrMemberAccess	alac -> frame		505852	0					
ANR	506739	Identifier	alac		505852	0					
ANR	506740	Identifier	frame		505852	1					
ANR	506741	Identifier	data		505852	1					
ANR	506742	PrimaryExpression	0		505852	1					
ANR	506743	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		505852	1					
ANR	506744	ForInit	i = 0 ;	313:17:6486:6491	505852	0	True				
ANR	506745	AssignmentExpression	i = 0		505852	0		=			
ANR	506746	Identifier	i		505852	0					
ANR	506747	PrimaryExpression	0		505852	1					
ANR	506748	Condition	i < outputsamples	313:24:6493:6509	505852	1	True				
ANR	506749	RelationalExpression	i < outputsamples		505852	0		<			
ANR	506750	Identifier	i		505852	0					
ANR	506751	Identifier	outputsamples		505852	1					
ANR	506752	PostIncDecOperationExpression	i ++	313:43:6512:6514	505852	2	True				
ANR	506753	Identifier	i		505852	0					
ANR	506754	IncDec	++		505852	1					
ANR	506755	CompoundStatement		309:48:6384:6384	505852	3					
ANR	506756	ExpressionStatement	outbuffer [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]	315:16:6536:6583	505852	0	True				
ANR	506757	AssignmentExpression	outbuffer [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]		505852	0		=			
ANR	506758	ArrayIndexing	outbuffer [ i ]		505852	0					
ANR	506759	Identifier	outbuffer		505852	0					
ANR	506760	Identifier	i		505852	1					
ANR	506761	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		505852	1					
ANR	506762	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		505852	0					
ANR	506763	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506764	Identifier	alac		505852	0					
ANR	506765	Identifier	outputsamples_buffer		505852	1					
ANR	506766	PrimaryExpression	0		505852	1					
ANR	506767	Identifier	i		505852	1					
ANR	506768	BreakStatement	break ;	321:8:6620:6625	505852	2	True				
ANR	506769	Label	case 24 :	323:4:6632:6639	505852	3	True				
ANR	506770	IfStatement	if ( channels == 2 )		505852	4					
ANR	506771	Condition	channels == 2	325:12:6654:6666	505852	0	True				
ANR	506772	EqualityExpression	channels == 2		505852	0		==			
ANR	506773	Identifier	channels		505852	0					
ANR	506774	PrimaryExpression	2		505852	1					
ANR	506775	CompoundStatement		321:27:6536:6536	505852	1					
ANR	506776	ExpressionStatement	"interleave_stereo_24 ( alac -> outputsamples_buffer , ( int32_t * ) alac -> frame . data [ 0 ] , outputsamples )"	327:12:6684:6813	505852	0	True				
ANR	506777	CallExpression	"interleave_stereo_24 ( alac -> outputsamples_buffer , ( int32_t * ) alac -> frame . data [ 0 ] , outputsamples )"		505852	0					
ANR	506778	Callee	interleave_stereo_24		505852	0					
ANR	506779	Identifier	interleave_stereo_24		505852	0					
ANR	506780	ArgumentList	alac -> outputsamples_buffer		505852	1					
ANR	506781	Argument	alac -> outputsamples_buffer		505852	0					
ANR	506782	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506783	Identifier	alac		505852	0					
ANR	506784	Identifier	outputsamples_buffer		505852	1					
ANR	506785	Argument	( int32_t * ) alac -> frame . data [ 0 ]		505852	1					
ANR	506786	CastExpression	( int32_t * ) alac -> frame . data [ 0 ]		505852	0					
ANR	506787	CastTarget	int32_t *		505852	0					
ANR	506788	ArrayIndexing	alac -> frame . data [ 0 ]		505852	1					
ANR	506789	MemberAccess	alac -> frame . data		505852	0					
ANR	506790	PtrMemberAccess	alac -> frame		505852	0					
ANR	506791	Identifier	alac		505852	0					
ANR	506792	Identifier	frame		505852	1					
ANR	506793	Identifier	data		505852	1					
ANR	506794	PrimaryExpression	0		505852	1					
ANR	506795	Argument	outputsamples		505852	2					
ANR	506796	Identifier	outputsamples		505852	0					
ANR	506797	ElseStatement	else		505852	0					
ANR	506798	CompoundStatement		329:12:6713:6764	505852	0					
ANR	506799	IdentifierDeclStatement	int32_t * outbuffer = ( int32_t * ) alac -> frame . data [ 0 ] ;	333:12:6846:6897	505852	0	True				
ANR	506800	IdentifierDecl	* outbuffer = ( int32_t * ) alac -> frame . data [ 0 ]		505852	0					
ANR	506801	IdentifierDeclType	int32_t *		505852	0					
ANR	506802	Identifier	outbuffer		505852	1					
ANR	506803	AssignmentExpression	* outbuffer = ( int32_t * ) alac -> frame . data [ 0 ]		505852	2		=			
ANR	506804	Identifier	outbuffer		505852	0					
ANR	506805	CastExpression	( int32_t * ) alac -> frame . data [ 0 ]		505852	1					
ANR	506806	CastTarget	int32_t *		505852	0					
ANR	506807	ArrayIndexing	alac -> frame . data [ 0 ]		505852	1					
ANR	506808	MemberAccess	alac -> frame . data		505852	0					
ANR	506809	PtrMemberAccess	alac -> frame		505852	0					
ANR	506810	Identifier	alac		505852	0					
ANR	506811	Identifier	frame		505852	1					
ANR	506812	Identifier	data		505852	1					
ANR	506813	PrimaryExpression	0		505852	1					
ANR	506814	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		505852	1					
ANR	506815	ForInit	i = 0 ;	335:17:6917:6922	505852	0	True				
ANR	506816	AssignmentExpression	i = 0		505852	0		=			
ANR	506817	Identifier	i		505852	0					
ANR	506818	PrimaryExpression	0		505852	1					
ANR	506819	Condition	i < outputsamples	335:24:6924:6940	505852	1	True				
ANR	506820	RelationalExpression	i < outputsamples		505852	0		<			
ANR	506821	Identifier	i		505852	0					
ANR	506822	Identifier	outputsamples		505852	1					
ANR	506823	PostIncDecOperationExpression	i ++	335:43:6943:6945	505852	2	True				
ANR	506824	Identifier	i		505852	0					
ANR	506825	IncDec	++		505852	1					
ANR	506826	ExpressionStatement	outbuffer [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8	337:16:6965:7017	505852	3	True				
ANR	506827	AssignmentExpression	outbuffer [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8		505852	0		=			
ANR	506828	ArrayIndexing	outbuffer [ i ]		505852	0					
ANR	506829	Identifier	outbuffer		505852	0					
ANR	506830	Identifier	i		505852	1					
ANR	506831	ShiftExpression	alac -> outputsamples_buffer [ 0 ] [ i ] << 8		505852	1		<<			
ANR	506832	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		505852	0					
ANR	506833	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		505852	0					
ANR	506834	PtrMemberAccess	alac -> outputsamples_buffer		505852	0					
ANR	506835	Identifier	alac		505852	0					
ANR	506836	Identifier	outputsamples_buffer		505852	1					
ANR	506837	PrimaryExpression	0		505852	1					
ANR	506838	Identifier	i		505852	1					
ANR	506839	PrimaryExpression	8		505852	1					
ANR	506840	BreakStatement	break ;	341:8:7039:7044	505852	5	True				
ANR	506841	IfStatement	if ( input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8 )		505852	30					
ANR	506842	Condition	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8	347:8:7064:7116	505852	0	True				
ANR	506843	RelationalExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8		505852	0		>			
ANR	506844	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		505852	0		-			
ANR	506845	MultiplicativeExpression	input_buffer_size * 8		505852	0		*			
ANR	506846	Identifier	input_buffer_size		505852	0					
ANR	506847	PrimaryExpression	8		505852	1					
ANR	506848	CallExpression	get_bits_count ( & alac -> gb )		505852	1					
ANR	506849	Callee	get_bits_count		505852	0					
ANR	506850	Identifier	get_bits_count		505852	0					
ANR	506851	ArgumentList	& alac -> gb		505852	1					
ANR	506852	Argument	& alac -> gb		505852	0					
ANR	506853	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506854	UnaryOperator	&		505852	0					
ANR	506855	PtrMemberAccess	alac -> gb		505852	1					
ANR	506856	Identifier	alac		505852	0					
ANR	506857	Identifier	gb		505852	1					
ANR	506858	PrimaryExpression	8		505852	1					
ANR	506859	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"	349:8:7128:7232	505852	1	True				
ANR	506860	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"		505852	0					
ANR	506861	Callee	av_log		505852	0					
ANR	506862	Identifier	av_log		505852	0					
ANR	506863	ArgumentList	avctx		505852	1					
ANR	506864	Argument	avctx		505852	0					
ANR	506865	Identifier	avctx		505852	0					
ANR	506866	Argument	AV_LOG_ERROR		505852	1					
ANR	506867	Identifier	AV_LOG_ERROR		505852	0					
ANR	506868	Argument	"""Error : %d bits left\\n"""		505852	2					
ANR	506869	PrimaryExpression	"""Error : %d bits left\\n"""		505852	0					
ANR	506870	Argument	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		505852	3					
ANR	506871	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		505852	0		-			
ANR	506872	MultiplicativeExpression	input_buffer_size * 8		505852	0		*			
ANR	506873	Identifier	input_buffer_size		505852	0					
ANR	506874	PrimaryExpression	8		505852	1					
ANR	506875	CallExpression	get_bits_count ( & alac -> gb )		505852	1					
ANR	506876	Callee	get_bits_count		505852	0					
ANR	506877	Identifier	get_bits_count		505852	0					
ANR	506878	ArgumentList	& alac -> gb		505852	1					
ANR	506879	Argument	& alac -> gb		505852	0					
ANR	506880	UnaryOperationExpression	& alac -> gb		505852	0					
ANR	506881	UnaryOperator	&		505852	0					
ANR	506882	PtrMemberAccess	alac -> gb		505852	1					
ANR	506883	Identifier	alac		505852	0					
ANR	506884	Identifier	gb		505852	1					
ANR	506885	ExpressionStatement	* got_frame_ptr = 1	353:4:7241:7261	505852	31	True				
ANR	506886	AssignmentExpression	* got_frame_ptr = 1		505852	0		=			
ANR	506887	UnaryOperationExpression	* got_frame_ptr		505852	0					
ANR	506888	UnaryOperator	*		505852	0					
ANR	506889	Identifier	got_frame_ptr		505852	1					
ANR	506890	PrimaryExpression	1		505852	1					
ANR	506891	ExpressionStatement	* ( AVFrame * ) data = alac -> frame	355:4:7268:7298	505852	32	True				
ANR	506892	AssignmentExpression	* ( AVFrame * ) data = alac -> frame		505852	0		=			
ANR	506893	UnaryOperationExpression	* ( AVFrame * ) data		505852	0					
ANR	506894	UnaryOperator	*		505852	0					
ANR	506895	CastExpression	( AVFrame * ) data		505852	1					
ANR	506896	CastTarget	AVFrame *		505852	0					
ANR	506897	Identifier	data		505852	1					
ANR	506898	PtrMemberAccess	alac -> frame		505852	1					
ANR	506899	Identifier	alac		505852	0					
ANR	506900	Identifier	frame		505852	1					
ANR	506901	ReturnStatement	return input_buffer_size ;	359:4:7307:7331	505852	33	True				
ANR	506902	Identifier	input_buffer_size		505852	0					
ANR	506903	ReturnType	static int		505852	1					
ANR	506904	Identifier	alac_decode_frame		505852	2					
ANR	506905	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		505852	3					
ANR	506906	Parameter	AVCodecContext * avctx	1:29:29:49	505852	0	True				
ANR	506907	ParameterType	AVCodecContext *		505852	0					
ANR	506908	Identifier	avctx		505852	1					
ANR	506909	Parameter	void * data	1:52:52:61	505852	1	True				
ANR	506910	ParameterType	void *		505852	0					
ANR	506911	Identifier	data		505852	1					
ANR	506912	Parameter	int * got_frame_ptr	3:29:94:111	505852	2	True				
ANR	506913	ParameterType	int *		505852	0					
ANR	506914	Identifier	got_frame_ptr		505852	1					
ANR	506915	Parameter	AVPacket * avpkt	3:49:114:128	505852	3	True				
ANR	506916	ParameterType	AVPacket *		505852	0					
ANR	506917	Identifier	avpkt		505852	1					
ANR	506918	CFGEntryNode	ENTRY		505852		True				
ANR	506919	CFGExitNode	EXIT		505852		True				
ANR	506920	Symbol	inbuffer		505852						
ANR	506921	Symbol	MIN_CACHE_BITS		505852						
ANR	506922	Symbol	prediction_quantitization		505852						
ANR	506923	Symbol	* * alac -> extra_bits_buffer		505852						
ANR	506924	Symbol	hassize		505852						
ANR	506925	Symbol	data		505852						
ANR	506926	Symbol	* ricemodifier		505852						
ANR	506927	Symbol	get_bits		505852						
ANR	506928	Symbol	* ch		505852						
ANR	506929	Symbol	alac -> frame		505852						
ANR	506930	Symbol	got_frame_ptr		505852						
ANR	506931	Symbol	avpkt		505852						
ANR	506932	Symbol	* prediction_type		505852						
ANR	506933	Symbol	prediction_type		505852						
ANR	506934	Symbol	avctx -> channels		505852						
ANR	506935	Symbol	alac -> frame . nb_samples		505852						
ANR	506936	Symbol	* predictor_coef_table		505852						
ANR	506937	Symbol	predictor_coef_num		505852						
ANR	506938	Symbol	alac		505852						
ANR	506939	Symbol	ret		505852						
ANR	506940	Symbol	alac -> setinfo_rice_historymult		505852						
ANR	506941	Symbol	isnotcompressed		505852						
ANR	506942	Symbol	& alac -> gb		505852						
ANR	506943	Symbol	get_bits1		505852						
ANR	506944	Symbol	alac -> extra_bits		505852						
ANR	506945	Symbol	* * alac		505852						
ANR	506946	Symbol	get_bits_count		505852						
ANR	506947	Symbol	* prediction_quantitization		505852						
ANR	506948	Symbol	ricemodifier		505852						
ANR	506949	Symbol	* avctx		505852						
ANR	506950	Symbol	channels		505852						
ANR	506951	Symbol	& alac -> frame		505852						
ANR	506952	Symbol	* alac -> outputsamples_buffer		505852						
ANR	506953	Symbol	* alac -> predicterror_buffer		505852						
ANR	506954	Symbol	interlacing_leftweight		505852						
ANR	506955	Symbol	alac -> setinfo_rice_initialhistory		505852						
ANR	506956	Symbol	avpkt -> data		505852						
ANR	506957	Symbol	alac -> extra_bits_buffer		505852						
ANR	506958	Symbol	* alac -> extra_bits_buffer		505852						
ANR	506959	Symbol	alac -> outputsamples_buffer		505852						
ANR	506960	Symbol	* * * alac		505852						
ANR	506961	Symbol	input_buffer_size		505852						
ANR	506962	Symbol	MAX_CHANNELS		505852						
ANR	506963	Symbol	interlacing_shift		505852						
ANR	506964	Symbol	* * predictor_coef_table		505852						
ANR	506965	Symbol	* alac -> frame		505852						
ANR	506966	Symbol	outbuffer		505852						
ANR	506967	Symbol	alac -> numchannels		505852						
ANR	506968	Symbol	outputsamples		505852						
ANR	506969	Symbol	* MAX_CHANNELS		505852						
ANR	506970	Symbol	* * ch		505852						
ANR	506971	Symbol	get_bits_long		505852						
ANR	506972	Symbol	alac -> setinfo_rice_kmodifier		505852						
ANR	506973	Symbol	avpkt -> size		505852						
ANR	506974	Symbol	avctx		505852						
ANR	506975	Symbol	alac -> frame . data		505852						
ANR	506976	Symbol	* alac		505852						
ANR	506977	Symbol	get_sbits_long		505852						
ANR	506978	Symbol	predictor_coef_table		505852						
ANR	506979	Symbol	* avpkt		505852						
ANR	506980	Symbol	AV_LOG_ERROR		505852						
ANR	506981	Symbol	avctx -> get_buffer		505852						
ANR	506982	Symbol	ch		505852						
ANR	506983	Symbol	* alac -> frame . data		505852						
ANR	506984	Symbol	* got_frame_ptr		505852						
ANR	506985	Symbol	i		505852						
ANR	506986	Symbol	* predictor_coef_num		505852						
ANR	506987	Symbol	avctx -> priv_data		505852						
ANR	506988	Symbol	alac -> setinfo_max_samples_per_frame		505852						
ANR	506989	Symbol	INT32_MAX		505852						
ANR	506990	Symbol	* outbuffer		505852						
ANR	506991	Symbol	readsamplesize		505852						
ANR	506992	Symbol	* i		505852						
ANR	506993	Symbol	alac -> predicterror_buffer		505852						
ANR	506994	Symbol	alac -> setinfo_sample_size		505852						
ANR	506995	Symbol	AVERROR_INVALIDDATA		505852						
ANR	506996	Symbol	* ( AVFrame * ) data		505852						
ANR	506997	Symbol	* data		505852						
ANR	506998	Symbol	* * alac -> outputsamples_buffer		505852						
