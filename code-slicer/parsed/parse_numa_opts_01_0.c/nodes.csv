command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6346193	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_numa_opts_01_0.c								
ANR	6346194	Function	parse_numa_opts	1:0:0:4169							
ANR	6346195	FunctionDef	parse_numa_opts (MachineState * ms)		6346194	0					
ANR	6346196	CompoundStatement		3:0:40:4169	6346194	0					
ANR	6346197	IdentifierDeclStatement	int i ;	5:4:47:52	6346194	0	True				
ANR	6346198	IdentifierDecl	i		6346194	0					
ANR	6346199	IdentifierDeclType	int		6346194	0					
ANR	6346200	Identifier	i		6346194	1					
ANR	6346201	IdentifierDeclStatement	const CPUArchIdList * possible_cpus ;	7:4:59:93	6346194	1	True				
ANR	6346202	IdentifierDecl	* possible_cpus		6346194	0					
ANR	6346203	IdentifierDeclType	const CPUArchIdList *		6346194	0					
ANR	6346204	Identifier	possible_cpus		6346194	1					
ANR	6346205	IdentifierDeclStatement	MachineClass * mc = MACHINE_GET_CLASS ( ms ) ;	9:4:100:140	6346194	2	True				
ANR	6346206	IdentifierDecl	* mc = MACHINE_GET_CLASS ( ms )		6346194	0					
ANR	6346207	IdentifierDeclType	MachineClass *		6346194	0					
ANR	6346208	Identifier	mc		6346194	1					
ANR	6346209	AssignmentExpression	* mc = MACHINE_GET_CLASS ( ms )		6346194	2		=			
ANR	6346210	Identifier	mc		6346194	0					
ANR	6346211	CallExpression	MACHINE_GET_CLASS ( ms )		6346194	1					
ANR	6346212	Callee	MACHINE_GET_CLASS		6346194	0					
ANR	6346213	Identifier	MACHINE_GET_CLASS		6346194	0					
ANR	6346214	ArgumentList	ms		6346194	1					
ANR	6346215	Argument	ms		6346194	0					
ANR	6346216	Identifier	ms		6346194	0					
ANR	6346217	ForStatement	for ( i = 0 ; i < MAX_NODES ; i ++ )		6346194	3					
ANR	6346218	ForInit	i = 0 ;	13:9:154:159	6346194	0	True				
ANR	6346219	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346220	Identifier	i		6346194	0					
ANR	6346221	PrimaryExpression	0		6346194	1					
ANR	6346222	Condition	i < MAX_NODES	13:16:161:173	6346194	1	True				
ANR	6346223	RelationalExpression	i < MAX_NODES		6346194	0		<			
ANR	6346224	Identifier	i		6346194	0					
ANR	6346225	Identifier	MAX_NODES		6346194	1					
ANR	6346226	PostIncDecOperationExpression	i ++	13:31:176:178	6346194	2	True				
ANR	6346227	Identifier	i		6346194	0					
ANR	6346228	IncDec	++		6346194	1					
ANR	6346229	CompoundStatement		11:36:140:140	6346194	3					
ANR	6346230	ExpressionStatement	numa_info [ i ] . node_cpu = bitmap_new ( max_cpus )	15:8:192:236	6346194	0	True				
ANR	6346231	AssignmentExpression	numa_info [ i ] . node_cpu = bitmap_new ( max_cpus )		6346194	0		=			
ANR	6346232	MemberAccess	numa_info [ i ] . node_cpu		6346194	0					
ANR	6346233	ArrayIndexing	numa_info [ i ]		6346194	0					
ANR	6346234	Identifier	numa_info		6346194	0					
ANR	6346235	Identifier	i		6346194	1					
ANR	6346236	Identifier	node_cpu		6346194	1					
ANR	6346237	CallExpression	bitmap_new ( max_cpus )		6346194	1					
ANR	6346238	Callee	bitmap_new		6346194	0					
ANR	6346239	Identifier	bitmap_new		6346194	0					
ANR	6346240	ArgumentList	max_cpus		6346194	1					
ANR	6346241	Argument	max_cpus		6346194	0					
ANR	6346242	Identifier	max_cpus		6346194	0					
ANR	6346243	IfStatement	"if ( qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , ms , NULL ) )"		6346194	4					
ANR	6346244	Condition	"qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , ms , NULL )"	21:8:256:318	6346194	0	True				
ANR	6346245	CallExpression	"qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , ms , NULL )"		6346194	0					
ANR	6346246	Callee	qemu_opts_foreach		6346194	0					
ANR	6346247	Identifier	qemu_opts_foreach		6346194	0					
ANR	6346248	ArgumentList	"qemu_find_opts ( ""numa"" )"		6346194	1					
ANR	6346249	Argument	"qemu_find_opts ( ""numa"" )"		6346194	0					
ANR	6346250	CallExpression	"qemu_find_opts ( ""numa"" )"		6346194	0					
ANR	6346251	Callee	qemu_find_opts		6346194	0					
ANR	6346252	Identifier	qemu_find_opts		6346194	0					
ANR	6346253	ArgumentList	"""numa"""		6346194	1					
ANR	6346254	Argument	"""numa"""		6346194	0					
ANR	6346255	PrimaryExpression	"""numa"""		6346194	0					
ANR	6346256	Argument	parse_numa		6346194	1					
ANR	6346257	Identifier	parse_numa		6346194	0					
ANR	6346258	Argument	ms		6346194	2					
ANR	6346259	Identifier	ms		6346194	0					
ANR	6346260	Argument	NULL		6346194	3					
ANR	6346261	Identifier	NULL		6346194	0					
ANR	6346262	CompoundStatement		19:73:280:280	6346194	1					
ANR	6346263	ExpressionStatement	exit ( 1 )	23:8:332:339	6346194	0	True				
ANR	6346264	CallExpression	exit ( 1 )		6346194	0					
ANR	6346265	Callee	exit		6346194	0					
ANR	6346266	Identifier	exit		6346194	0					
ANR	6346267	ArgumentList	1		6346194	1					
ANR	6346268	Argument	1		6346194	0					
ANR	6346269	PrimaryExpression	1		6346194	0					
ANR	6346270	ExpressionStatement	assert ( max_numa_nodeid <= MAX_NODES )	29:4:355:391	6346194	5	True				
ANR	6346271	CallExpression	assert ( max_numa_nodeid <= MAX_NODES )		6346194	0					
ANR	6346272	Callee	assert		6346194	0					
ANR	6346273	Identifier	assert		6346194	0					
ANR	6346274	ArgumentList	max_numa_nodeid <= MAX_NODES		6346194	1					
ANR	6346275	Argument	max_numa_nodeid <= MAX_NODES		6346194	0					
ANR	6346276	RelationalExpression	max_numa_nodeid <= MAX_NODES		6346194	0		<=			
ANR	6346277	Identifier	max_numa_nodeid		6346194	0					
ANR	6346278	Identifier	MAX_NODES		6346194	1					
ANR	6346279	ForStatement	for ( i = max_numa_nodeid - 1 ; i >= 0 ; i -- )		6346194	6					
ANR	6346280	ForInit	i = max_numa_nodeid - 1 ;	35:9:457:480	6346194	0	True				
ANR	6346281	AssignmentExpression	i = max_numa_nodeid - 1		6346194	0		=			
ANR	6346282	Identifier	i		6346194	0					
ANR	6346283	AdditiveExpression	max_numa_nodeid - 1		6346194	1		-			
ANR	6346284	Identifier	max_numa_nodeid		6346194	0					
ANR	6346285	PrimaryExpression	1		6346194	1					
ANR	6346286	Condition	i >= 0	35:34:482:487	6346194	1	True				
ANR	6346287	RelationalExpression	i >= 0		6346194	0		>=			
ANR	6346288	Identifier	i		6346194	0					
ANR	6346289	PrimaryExpression	0		6346194	1					
ANR	6346290	PostIncDecOperationExpression	i --	35:42:490:492	6346194	2	True				
ANR	6346291	Identifier	i		6346194	0					
ANR	6346292	IncDec	--		6346194	1					
ANR	6346293	CompoundStatement		33:47:454:454	6346194	3					
ANR	6346294	IfStatement	if ( ! numa_info [ i ] . present )		6346194	0					
ANR	6346295	Condition	! numa_info [ i ] . present	39:12:586:606	6346194	0	True				
ANR	6346296	UnaryOperationExpression	! numa_info [ i ] . present		6346194	0					
ANR	6346297	UnaryOperator	!		6346194	0					
ANR	6346298	MemberAccess	numa_info [ i ] . present		6346194	1					
ANR	6346299	ArrayIndexing	numa_info [ i ]		6346194	0					
ANR	6346300	Identifier	numa_info		6346194	0					
ANR	6346301	Identifier	i		6346194	1					
ANR	6346302	Identifier	present		6346194	1					
ANR	6346303	CompoundStatement		37:35:568:568	6346194	1					
ANR	6346304	ExpressionStatement	"error_report ( ""numa: Node ID missing: %d"" , i )"	41:12:624:668	6346194	0	True				
ANR	6346305	CallExpression	"error_report ( ""numa: Node ID missing: %d"" , i )"		6346194	0					
ANR	6346306	Callee	error_report		6346194	0					
ANR	6346307	Identifier	error_report		6346194	0					
ANR	6346308	ArgumentList	"""numa: Node ID missing: %d"""		6346194	1					
ANR	6346309	Argument	"""numa: Node ID missing: %d"""		6346194	0					
ANR	6346310	PrimaryExpression	"""numa: Node ID missing: %d"""		6346194	0					
ANR	6346311	Argument	i		6346194	1					
ANR	6346312	Identifier	i		6346194	0					
ANR	6346313	ExpressionStatement	exit ( 1 )	43:12:683:690	6346194	1	True				
ANR	6346314	CallExpression	exit ( 1 )		6346194	0					
ANR	6346315	Callee	exit		6346194	0					
ANR	6346316	Identifier	exit		6346194	0					
ANR	6346317	ArgumentList	1		6346194	1					
ANR	6346318	Argument	1		6346194	0					
ANR	6346319	PrimaryExpression	1		6346194	0					
ANR	6346320	ExpressionStatement	assert ( nb_numa_nodes == max_numa_nodeid )	53:4:779:819	6346194	7	True				
ANR	6346321	CallExpression	assert ( nb_numa_nodes == max_numa_nodeid )		6346194	0					
ANR	6346322	Callee	assert		6346194	0					
ANR	6346323	Identifier	assert		6346194	0					
ANR	6346324	ArgumentList	nb_numa_nodes == max_numa_nodeid		6346194	1					
ANR	6346325	Argument	nb_numa_nodes == max_numa_nodeid		6346194	0					
ANR	6346326	EqualityExpression	nb_numa_nodes == max_numa_nodeid		6346194	0		==			
ANR	6346327	Identifier	nb_numa_nodes		6346194	0					
ANR	6346328	Identifier	max_numa_nodeid		6346194	1					
ANR	6346329	IfStatement	if ( nb_numa_nodes > 0 )		6346194	8					
ANR	6346330	Condition	nb_numa_nodes > 0	57:8:832:848	6346194	0	True				
ANR	6346331	RelationalExpression	nb_numa_nodes > 0		6346194	0		>			
ANR	6346332	Identifier	nb_numa_nodes		6346194	0					
ANR	6346333	PrimaryExpression	0		6346194	1					
ANR	6346334	CompoundStatement		57:8:821:840	6346194	1					
ANR	6346335	IdentifierDeclStatement	uint64_t numa_total ;	59:8:862:881	6346194	0	True				
ANR	6346336	IdentifierDecl	numa_total		6346194	0					
ANR	6346337	IdentifierDeclType	uint64_t		6346194	0					
ANR	6346338	Identifier	numa_total		6346194	1					
ANR	6346339	IfStatement	if ( nb_numa_nodes > MAX_NODES )		6346194	1					
ANR	6346340	Condition	nb_numa_nodes > MAX_NODES	63:12:898:922	6346194	0	True				
ANR	6346341	RelationalExpression	nb_numa_nodes > MAX_NODES		6346194	0		>			
ANR	6346342	Identifier	nb_numa_nodes		6346194	0					
ANR	6346343	Identifier	MAX_NODES		6346194	1					
ANR	6346344	CompoundStatement		61:39:884:884	6346194	1					
ANR	6346345	ExpressionStatement	nb_numa_nodes = MAX_NODES	65:12:940:965	6346194	0	True				
ANR	6346346	AssignmentExpression	nb_numa_nodes = MAX_NODES		6346194	0		=			
ANR	6346347	Identifier	nb_numa_nodes		6346194	0					
ANR	6346348	Identifier	MAX_NODES		6346194	1					
ANR	6346349	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6346194	2					
ANR	6346350	ForInit	i = 0 ;	77:13:1157:1162	6346194	0	True				
ANR	6346351	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346352	Identifier	i		6346194	0					
ANR	6346353	PrimaryExpression	0		6346194	1					
ANR	6346354	Condition	i < nb_numa_nodes	77:20:1164:1180	6346194	1	True				
ANR	6346355	RelationalExpression	i < nb_numa_nodes		6346194	0		<			
ANR	6346356	Identifier	i		6346194	0					
ANR	6346357	Identifier	nb_numa_nodes		6346194	1					
ANR	6346358	PostIncDecOperationExpression	i ++	77:39:1183:1185	6346194	2	True				
ANR	6346359	Identifier	i		6346194	0					
ANR	6346360	IncDec	++		6346194	1					
ANR	6346361	CompoundStatement		75:44:1147:1147	6346194	3					
ANR	6346362	IfStatement	if ( numa_info [ i ] . node_mem != 0 )		6346194	0					
ANR	6346363	Condition	numa_info [ i ] . node_mem != 0	79:16:1207:1232	6346194	0	True				
ANR	6346364	EqualityExpression	numa_info [ i ] . node_mem != 0		6346194	0		!=			
ANR	6346365	MemberAccess	numa_info [ i ] . node_mem		6346194	0					
ANR	6346366	ArrayIndexing	numa_info [ i ]		6346194	0					
ANR	6346367	Identifier	numa_info		6346194	0					
ANR	6346368	Identifier	i		6346194	1					
ANR	6346369	Identifier	node_mem		6346194	1					
ANR	6346370	PrimaryExpression	0		6346194	1					
ANR	6346371	CompoundStatement		77:44:1194:1194	6346194	1					
ANR	6346372	BreakStatement	break ;	81:16:1254:1259	6346194	0	True				
ANR	6346373	IfStatement	if ( i == nb_numa_nodes )		6346194	3					
ANR	6346374	Condition	i == nb_numa_nodes	87:12:1300:1317	6346194	0	True				
ANR	6346375	EqualityExpression	i == nb_numa_nodes		6346194	0		==			
ANR	6346376	Identifier	i		6346194	0					
ANR	6346377	Identifier	nb_numa_nodes		6346194	1					
ANR	6346378	CompoundStatement		85:32:1279:1279	6346194	1					
ANR	6346379	ExpressionStatement	assert ( mc -> numa_auto_assign_ram )	89:12:1335:1367	6346194	0	True				
ANR	6346380	CallExpression	assert ( mc -> numa_auto_assign_ram )		6346194	0					
ANR	6346381	Callee	assert		6346194	0					
ANR	6346382	Identifier	assert		6346194	0					
ANR	6346383	ArgumentList	mc -> numa_auto_assign_ram		6346194	1					
ANR	6346384	Argument	mc -> numa_auto_assign_ram		6346194	0					
ANR	6346385	PtrMemberAccess	mc -> numa_auto_assign_ram		6346194	0					
ANR	6346386	Identifier	mc		6346194	0					
ANR	6346387	Identifier	numa_auto_assign_ram		6346194	1					
ANR	6346388	ExpressionStatement	"mc -> numa_auto_assign_ram ( mc , numa_info , nb_numa_nodes , ram_size )"	91:12:1382:1446	6346194	1	True				
ANR	6346389	CallExpression	"mc -> numa_auto_assign_ram ( mc , numa_info , nb_numa_nodes , ram_size )"		6346194	0					
ANR	6346390	Callee	mc -> numa_auto_assign_ram		6346194	0					
ANR	6346391	PtrMemberAccess	mc -> numa_auto_assign_ram		6346194	0					
ANR	6346392	Identifier	mc		6346194	0					
ANR	6346393	Identifier	numa_auto_assign_ram		6346194	1					
ANR	6346394	ArgumentList	mc		6346194	1					
ANR	6346395	Argument	mc		6346194	0					
ANR	6346396	Identifier	mc		6346194	0					
ANR	6346397	Argument	numa_info		6346194	1					
ANR	6346398	Identifier	numa_info		6346194	0					
ANR	6346399	Argument	nb_numa_nodes		6346194	2					
ANR	6346400	Identifier	nb_numa_nodes		6346194	0					
ANR	6346401	Argument	ram_size		6346194	3					
ANR	6346402	Identifier	ram_size		6346194	0					
ANR	6346403	ExpressionStatement	numa_total = 0	97:8:1470:1484	6346194	4	True				
ANR	6346404	AssignmentExpression	numa_total = 0		6346194	0		=			
ANR	6346405	Identifier	numa_total		6346194	0					
ANR	6346406	PrimaryExpression	0		6346194	1					
ANR	6346407	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6346194	5					
ANR	6346408	ForInit	i = 0 ;	99:13:1500:1505	6346194	0	True				
ANR	6346409	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346410	Identifier	i		6346194	0					
ANR	6346411	PrimaryExpression	0		6346194	1					
ANR	6346412	Condition	i < nb_numa_nodes	99:20:1507:1523	6346194	1	True				
ANR	6346413	RelationalExpression	i < nb_numa_nodes		6346194	0		<			
ANR	6346414	Identifier	i		6346194	0					
ANR	6346415	Identifier	nb_numa_nodes		6346194	1					
ANR	6346416	PostIncDecOperationExpression	i ++	99:39:1526:1528	6346194	2	True				
ANR	6346417	Identifier	i		6346194	0					
ANR	6346418	IncDec	++		6346194	1					
ANR	6346419	CompoundStatement		97:44:1490:1490	6346194	3					
ANR	6346420	ExpressionStatement	numa_total += numa_info [ i ] . node_mem	101:12:1546:1581	6346194	0	True				
ANR	6346421	AssignmentExpression	numa_total += numa_info [ i ] . node_mem		6346194	0		+=			
ANR	6346422	Identifier	numa_total		6346194	0					
ANR	6346423	MemberAccess	numa_info [ i ] . node_mem		6346194	1					
ANR	6346424	ArrayIndexing	numa_info [ i ]		6346194	0					
ANR	6346425	Identifier	numa_info		6346194	0					
ANR	6346426	Identifier	i		6346194	1					
ANR	6346427	Identifier	node_mem		6346194	1					
ANR	6346428	IfStatement	if ( numa_total != ram_size )		6346194	6					
ANR	6346429	Condition	numa_total != ram_size	105:12:1607:1628	6346194	0	True				
ANR	6346430	EqualityExpression	numa_total != ram_size		6346194	0		!=			
ANR	6346431	Identifier	numa_total		6346194	0					
ANR	6346432	Identifier	ram_size		6346194	1					
ANR	6346433	CompoundStatement		103:36:1590:1590	6346194	1					
ANR	6346434	Statement	error_report	107:12:1646:1657	6346194	0	True				
ANR	6346435	Statement	(	107:24:1658:1658	6346194	1	True				
ANR	6346436	Statement	"""total memory for NUMA nodes (0x%"""	107:25:1659:1692	6346194	2	True				
ANR	6346437	Statement	PRIx64	107:60:1694:1699	6346194	3	True				
ANR	6346438	Statement	""")"""	107:67:1701:1703	6346194	4	True				
ANR	6346439	Statement	""" should equal RAM size (0x"""	109:25:1731:1758	6346194	5	True				
ANR	6346440	Statement	RAM_ADDR_FMT	109:54:1760:1771	6346194	6	True				
ANR	6346441	Statement	""")"""	109:67:1773:1775	6346194	7	True				
ANR	6346442	Statement	","	109:70:1776:1776	6346194	8	True				
ANR	6346443	Statement	numa_total	111:25:1804:1813	6346194	9	True				
ANR	6346444	Statement	","	111:35:1814:1814	6346194	10	True				
ANR	6346445	Statement	ram_size	111:37:1816:1823	6346194	11	True				
ANR	6346446	Statement	)	111:45:1824:1824	6346194	12	True				
ANR	6346447	ExpressionStatement		111:46:1825:1825	6346194	13	True				
ANR	6346448	ExpressionStatement	exit ( 1 )	113:12:1840:1847	6346194	14	True				
ANR	6346449	CallExpression	exit ( 1 )		6346194	0					
ANR	6346450	Callee	exit		6346194	0					
ANR	6346451	Identifier	exit		6346194	0					
ANR	6346452	ArgumentList	1		6346194	1					
ANR	6346453	Argument	1		6346194	0					
ANR	6346454	PrimaryExpression	1		6346194	0					
ANR	6346455	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6346194	7					
ANR	6346456	ForInit	i = 0 ;	119:13:1876:1881	6346194	0	True				
ANR	6346457	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346458	Identifier	i		6346194	0					
ANR	6346459	PrimaryExpression	0		6346194	1					
ANR	6346460	Condition	i < nb_numa_nodes	119:20:1883:1899	6346194	1	True				
ANR	6346461	RelationalExpression	i < nb_numa_nodes		6346194	0		<			
ANR	6346462	Identifier	i		6346194	0					
ANR	6346463	Identifier	nb_numa_nodes		6346194	1					
ANR	6346464	PostIncDecOperationExpression	i ++	119:39:1902:1904	6346194	2	True				
ANR	6346465	Identifier	i		6346194	0					
ANR	6346466	IncDec	++		6346194	1					
ANR	6346467	CompoundStatement		117:44:1866:1866	6346194	3					
ANR	6346468	ExpressionStatement	QLIST_INIT ( & numa_info [ i ] . addr )	121:12:1922:1952	6346194	0	True				
ANR	6346469	CallExpression	QLIST_INIT ( & numa_info [ i ] . addr )		6346194	0					
ANR	6346470	Callee	QLIST_INIT		6346194	0					
ANR	6346471	Identifier	QLIST_INIT		6346194	0					
ANR	6346472	ArgumentList	& numa_info [ i ] . addr		6346194	1					
ANR	6346473	Argument	& numa_info [ i ] . addr		6346194	0					
ANR	6346474	UnaryOperationExpression	& numa_info [ i ] . addr		6346194	0					
ANR	6346475	UnaryOperator	&		6346194	0					
ANR	6346476	MemberAccess	numa_info [ i ] . addr		6346194	1					
ANR	6346477	ArrayIndexing	numa_info [ i ]		6346194	0					
ANR	6346478	Identifier	numa_info		6346194	0					
ANR	6346479	Identifier	i		6346194	1					
ANR	6346480	Identifier	addr		6346194	1					
ANR	6346481	ExpressionStatement	numa_set_mem_ranges ( )	127:8:1976:1997	6346194	8	True				
ANR	6346482	CallExpression	numa_set_mem_ranges ( )		6346194	0					
ANR	6346483	Callee	numa_set_mem_ranges		6346194	0					
ANR	6346484	Identifier	numa_set_mem_ranges		6346194	0					
ANR	6346485	ArgumentList			6346194	1					
ANR	6346486	IfStatement	if ( ! mc -> cpu_index_to_instance_props || ! mc -> possible_cpu_arch_ids )		6346194	9					
ANR	6346487	Condition	! mc -> cpu_index_to_instance_props || ! mc -> possible_cpu_arch_ids	133:12:2087:2148	6346194	0	True				
ANR	6346488	OrExpression	! mc -> cpu_index_to_instance_props || ! mc -> possible_cpu_arch_ids		6346194	0		||			
ANR	6346489	UnaryOperationExpression	! mc -> cpu_index_to_instance_props		6346194	0					
ANR	6346490	UnaryOperator	!		6346194	0					
ANR	6346491	PtrMemberAccess	mc -> cpu_index_to_instance_props		6346194	1					
ANR	6346492	Identifier	mc		6346194	0					
ANR	6346493	Identifier	cpu_index_to_instance_props		6346194	1					
ANR	6346494	UnaryOperationExpression	! mc -> possible_cpu_arch_ids		6346194	1					
ANR	6346495	UnaryOperator	!		6346194	0					
ANR	6346496	PtrMemberAccess	mc -> possible_cpu_arch_ids		6346194	1					
ANR	6346497	Identifier	mc		6346194	0					
ANR	6346498	Identifier	possible_cpu_arch_ids		6346194	1					
ANR	6346499	CompoundStatement		131:76:2110:2110	6346194	1					
ANR	6346500	ExpressionStatement	"error_report ( ""default CPUs to NUMA node mapping isn't supported"" )"	135:12:2166:2231	6346194	0	True				
ANR	6346501	CallExpression	"error_report ( ""default CPUs to NUMA node mapping isn't supported"" )"		6346194	0					
ANR	6346502	Callee	error_report		6346194	0					
ANR	6346503	Identifier	error_report		6346194	0					
ANR	6346504	ArgumentList	"""default CPUs to NUMA node mapping isn't supported"""		6346194	1					
ANR	6346505	Argument	"""default CPUs to NUMA node mapping isn't supported"""		6346194	0					
ANR	6346506	PrimaryExpression	"""default CPUs to NUMA node mapping isn't supported"""		6346194	0					
ANR	6346507	ExpressionStatement	exit ( 1 )	137:12:2246:2253	6346194	1	True				
ANR	6346508	CallExpression	exit ( 1 )		6346194	0					
ANR	6346509	Callee	exit		6346194	0					
ANR	6346510	Identifier	exit		6346194	0					
ANR	6346511	ArgumentList	1		6346194	1					
ANR	6346512	Argument	1		6346194	0					
ANR	6346513	PrimaryExpression	1		6346194	0					
ANR	6346514	ExpressionStatement	possible_cpus = mc -> possible_cpu_arch_ids ( ms )	143:8:2277:2322	6346194	10	True				
ANR	6346515	AssignmentExpression	possible_cpus = mc -> possible_cpu_arch_ids ( ms )		6346194	0		=			
ANR	6346516	Identifier	possible_cpus		6346194	0					
ANR	6346517	CallExpression	mc -> possible_cpu_arch_ids ( ms )		6346194	1					
ANR	6346518	Callee	mc -> possible_cpu_arch_ids		6346194	0					
ANR	6346519	PtrMemberAccess	mc -> possible_cpu_arch_ids		6346194	0					
ANR	6346520	Identifier	mc		6346194	0					
ANR	6346521	Identifier	possible_cpu_arch_ids		6346194	1					
ANR	6346522	ArgumentList	ms		6346194	1					
ANR	6346523	Argument	ms		6346194	0					
ANR	6346524	Identifier	ms		6346194	0					
ANR	6346525	ForStatement	for ( i = 0 ; i < possible_cpus -> len ; i ++ )		6346194	11					
ANR	6346526	ForInit	i = 0 ;	145:13:2338:2343	6346194	0	True				
ANR	6346527	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346528	Identifier	i		6346194	0					
ANR	6346529	PrimaryExpression	0		6346194	1					
ANR	6346530	Condition	i < possible_cpus -> len	145:20:2345:2366	6346194	1	True				
ANR	6346531	RelationalExpression	i < possible_cpus -> len		6346194	0		<			
ANR	6346532	Identifier	i		6346194	0					
ANR	6346533	PtrMemberAccess	possible_cpus -> len		6346194	1					
ANR	6346534	Identifier	possible_cpus		6346194	0					
ANR	6346535	Identifier	len		6346194	1					
ANR	6346536	PostIncDecOperationExpression	i ++	145:44:2369:2371	6346194	2	True				
ANR	6346537	Identifier	i		6346194	0					
ANR	6346538	IncDec	++		6346194	1					
ANR	6346539	CompoundStatement		143:49:2333:2333	6346194	3					
ANR	6346540	IfStatement	if ( possible_cpus -> cpus [ i ] . props . has_node_id )		6346194	0					
ANR	6346541	Condition	possible_cpus -> cpus [ i ] . props . has_node_id	147:16:2393:2432	6346194	0	True				
ANR	6346542	MemberAccess	possible_cpus -> cpus [ i ] . props . has_node_id		6346194	0					
ANR	6346543	MemberAccess	possible_cpus -> cpus [ i ] . props		6346194	0					
ANR	6346544	ArrayIndexing	possible_cpus -> cpus [ i ]		6346194	0					
ANR	6346545	PtrMemberAccess	possible_cpus -> cpus		6346194	0					
ANR	6346546	Identifier	possible_cpus		6346194	0					
ANR	6346547	Identifier	cpus		6346194	1					
ANR	6346548	Identifier	i		6346194	1					
ANR	6346549	Identifier	props		6346194	1					
ANR	6346550	Identifier	has_node_id		6346194	1					
ANR	6346551	CompoundStatement		145:58:2394:2394	6346194	1					
ANR	6346552	BreakStatement	break ;	149:16:2454:2459	6346194	0	True				
ANR	6346553	IfStatement	if ( i == possible_cpus -> len )		6346194	12					
ANR	6346554	Condition	i == possible_cpus -> len	159:12:2552:2574	6346194	0	True				
ANR	6346555	EqualityExpression	i == possible_cpus -> len		6346194	0		==			
ANR	6346556	Identifier	i		6346194	0					
ANR	6346557	PtrMemberAccess	possible_cpus -> len		6346194	1					
ANR	6346558	Identifier	possible_cpus		6346194	0					
ANR	6346559	Identifier	len		6346194	1					
ANR	6346560	CompoundStatement		157:37:2536:2536	6346194	1					
ANR	6346561	ForStatement	for ( i = 0 ; i < max_cpus ; i ++ )		6346194	0					
ANR	6346562	ForInit	i = 0 ;	161:17:2597:2602	6346194	0	True				
ANR	6346563	AssignmentExpression	i = 0		6346194	0		=			
ANR	6346564	Identifier	i		6346194	0					
ANR	6346565	PrimaryExpression	0		6346194	1					
ANR	6346566	Condition	i < max_cpus	161:24:2604:2615	6346194	1	True				
ANR	6346567	RelationalExpression	i < max_cpus		6346194	0		<			
ANR	6346568	Identifier	i		6346194	0					
ANR	6346569	Identifier	max_cpus		6346194	1					
ANR	6346570	PostIncDecOperationExpression	i ++	161:38:2618:2620	6346194	2	True				
ANR	6346571	Identifier	i		6346194	0					
ANR	6346572	IncDec	++		6346194	1					
ANR	6346573	CompoundStatement		161:16:2601:2628	6346194	3					
ANR	6346574	IdentifierDeclStatement	CpuInstanceProperties props ;	163:16:2642:2669	6346194	0	True				
ANR	6346575	IdentifierDecl	props		6346194	0					
ANR	6346576	IdentifierDeclType	CpuInstanceProperties		6346194	0					
ANR	6346577	Identifier	props		6346194	1					
ANR	6346578	ExpressionStatement	"props = mc -> cpu_index_to_instance_props ( ms , i )"	167:16:2758:2804	6346194	1	True				
ANR	6346579	AssignmentExpression	"props = mc -> cpu_index_to_instance_props ( ms , i )"		6346194	0		=			
ANR	6346580	Identifier	props		6346194	0					
ANR	6346581	CallExpression	"mc -> cpu_index_to_instance_props ( ms , i )"		6346194	1					
ANR	6346582	Callee	mc -> cpu_index_to_instance_props		6346194	0					
ANR	6346583	PtrMemberAccess	mc -> cpu_index_to_instance_props		6346194	0					
ANR	6346584	Identifier	mc		6346194	0					
ANR	6346585	Identifier	cpu_index_to_instance_props		6346194	1					
ANR	6346586	ArgumentList	ms		6346194	1					
ANR	6346587	Argument	ms		6346194	0					
ANR	6346588	Identifier	ms		6346194	0					
ANR	6346589	Argument	i		6346194	1					
ANR	6346590	Identifier	i		6346194	0					
ANR	6346591	ExpressionStatement	props . has_node_id = true	169:16:2823:2847	6346194	2	True				
ANR	6346592	AssignmentExpression	props . has_node_id = true		6346194	0		=			
ANR	6346593	MemberAccess	props . has_node_id		6346194	0					
ANR	6346594	Identifier	props		6346194	0					
ANR	6346595	Identifier	has_node_id		6346194	1					
ANR	6346596	Identifier	true		6346194	1					
ANR	6346597	ExpressionStatement	"set_bit ( i , numa_info [ props . node_id ] . node_cpu )"	173:16:2868:2913	6346194	3	True				
ANR	6346598	CallExpression	"set_bit ( i , numa_info [ props . node_id ] . node_cpu )"		6346194	0					
ANR	6346599	Callee	set_bit		6346194	0					
ANR	6346600	Identifier	set_bit		6346194	0					
ANR	6346601	ArgumentList	i		6346194	1					
ANR	6346602	Argument	i		6346194	0					
ANR	6346603	Identifier	i		6346194	0					
ANR	6346604	Argument	numa_info [ props . node_id ] . node_cpu		6346194	1					
ANR	6346605	MemberAccess	numa_info [ props . node_id ] . node_cpu		6346194	0					
ANR	6346606	ArrayIndexing	numa_info [ props . node_id ]		6346194	0					
ANR	6346607	Identifier	numa_info		6346194	0					
ANR	6346608	MemberAccess	props . node_id		6346194	1					
ANR	6346609	Identifier	props		6346194	0					
ANR	6346610	Identifier	node_id		6346194	1					
ANR	6346611	Identifier	node_cpu		6346194	1					
ANR	6346612	ExpressionStatement	"machine_set_cpu_numa_node ( ms , & props , & error_fatal )"	175:16:2932:2983	6346194	4	True				
ANR	6346613	CallExpression	"machine_set_cpu_numa_node ( ms , & props , & error_fatal )"		6346194	0					
ANR	6346614	Callee	machine_set_cpu_numa_node		6346194	0					
ANR	6346615	Identifier	machine_set_cpu_numa_node		6346194	0					
ANR	6346616	ArgumentList	ms		6346194	1					
ANR	6346617	Argument	ms		6346194	0					
ANR	6346618	Identifier	ms		6346194	0					
ANR	6346619	Argument	& props		6346194	1					
ANR	6346620	UnaryOperationExpression	& props		6346194	0					
ANR	6346621	UnaryOperator	&		6346194	0					
ANR	6346622	Identifier	props		6346194	1					
ANR	6346623	Argument	& error_fatal		6346194	2					
ANR	6346624	UnaryOperationExpression	& error_fatal		6346194	0					
ANR	6346625	UnaryOperator	&		6346194	0					
ANR	6346626	Identifier	error_fatal		6346194	1					
ANR	6346627	ExpressionStatement	validate_numa_cpus ( )	183:8:3022:3042	6346194	13	True				
ANR	6346628	CallExpression	validate_numa_cpus ( )		6346194	0					
ANR	6346629	Callee	validate_numa_cpus		6346194	0					
ANR	6346630	Identifier	validate_numa_cpus		6346194	0					
ANR	6346631	ArgumentList			6346194	1					
ANR	6346632	IfStatement	if ( have_numa_distance )		6346194	14					
ANR	6346633	Condition	have_numa_distance	211:12:3831:3848	6346194	0	True				
ANR	6346634	Identifier	have_numa_distance		6346194	0					
ANR	6346635	CompoundStatement		209:32:3810:3810	6346194	1					
ANR	6346636	ExpressionStatement	validate_numa_distance ( )	215:12:3941:3965	6346194	0	True				
ANR	6346637	CallExpression	validate_numa_distance ( )		6346194	0					
ANR	6346638	Callee	validate_numa_distance		6346194	0					
ANR	6346639	Identifier	validate_numa_distance		6346194	0					
ANR	6346640	ArgumentList			6346194	1					
ANR	6346641	ExpressionStatement	complete_init_numa_distance ( )	221:12:4058:4087	6346194	1	True				
ANR	6346642	CallExpression	complete_init_numa_distance ( )		6346194	0					
ANR	6346643	Callee	complete_init_numa_distance		6346194	0					
ANR	6346644	Identifier	complete_init_numa_distance		6346194	0					
ANR	6346645	ArgumentList			6346194	1					
ANR	6346646	ElseStatement	else		6346194	0					
ANR	6346647	CompoundStatement		223:11:4071:4071	6346194	0					
ANR	6346648	ExpressionStatement	"numa_set_mem_node_id ( 0 , ram_size , 0 )"	227:8:4123:4159	6346194	0	True				
ANR	6346649	CallExpression	"numa_set_mem_node_id ( 0 , ram_size , 0 )"		6346194	0					
ANR	6346650	Callee	numa_set_mem_node_id		6346194	0					
ANR	6346651	Identifier	numa_set_mem_node_id		6346194	0					
ANR	6346652	ArgumentList	0		6346194	1					
ANR	6346653	Argument	0		6346194	0					
ANR	6346654	PrimaryExpression	0		6346194	0					
ANR	6346655	Argument	ram_size		6346194	1					
ANR	6346656	Identifier	ram_size		6346194	0					
ANR	6346657	Argument	0		6346194	2					
ANR	6346658	PrimaryExpression	0		6346194	0					
ANR	6346659	ReturnType	void		6346194	1					
ANR	6346660	Identifier	parse_numa_opts		6346194	2					
ANR	6346661	ParameterList	MachineState * ms		6346194	3					
ANR	6346662	Parameter	MachineState * ms	1:21:21:36	6346194	0	True				
ANR	6346663	ParameterType	MachineState *		6346194	0					
ANR	6346664	Identifier	ms		6346194	1					
ANR	6346665	CFGEntryNode	ENTRY		6346194		True				
ANR	6346666	CFGExitNode	EXIT		6346194		True				
ANR	6346667	Symbol	qemu_find_opts		6346194						
ANR	6346668	Symbol	nb_numa_nodes		6346194						
ANR	6346669	Symbol	numa_total		6346194						
ANR	6346670	Symbol	have_numa_distance		6346194						
ANR	6346671	Symbol	mc -> cpu_index_to_instance_props		6346194						
ANR	6346672	Symbol	bitmap_new		6346194						
ANR	6346673	Symbol	max_cpus		6346194						
ANR	6346674	Symbol	MACHINE_GET_CLASS		6346194						
ANR	6346675	Symbol	& props		6346194						
ANR	6346676	Symbol	numa_info [ i ] . node_mem		6346194						
ANR	6346677	Symbol	mc		6346194						
ANR	6346678	Symbol	* possible_cpus		6346194						
ANR	6346679	Symbol	numa_info		6346194						
ANR	6346680	Symbol	possible_cpus -> cpus		6346194						
ANR	6346681	Symbol	possible_cpus -> len		6346194						
ANR	6346682	Symbol	* mc		6346194						
ANR	6346683	Symbol	* numa_info		6346194						
ANR	6346684	Symbol	* * possible_cpus		6346194						
ANR	6346685	Symbol	NULL		6346194						
ANR	6346686	Symbol	possible_cpus -> cpus [ i ] . props . has_node_id		6346194						
ANR	6346687	Symbol	MAX_NODES		6346194						
ANR	6346688	Symbol	props . has_node_id		6346194						
ANR	6346689	Symbol	possible_cpus		6346194						
ANR	6346690	Symbol	possible_cpus -> cpus [ i ] . props		6346194						
ANR	6346691	Symbol	ms		6346194						
ANR	6346692	Symbol	* props . node_id		6346194						
ANR	6346693	Symbol	i		6346194						
ANR	6346694	Symbol	parse_numa		6346194						
ANR	6346695	Symbol	max_numa_nodeid		6346194						
ANR	6346696	Symbol	numa_info [ i ] . node_cpu		6346194						
ANR	6346697	Symbol	mc -> numa_auto_assign_ram		6346194						
ANR	6346698	Symbol	& numa_info [ i ] . addr		6346194						
ANR	6346699	Symbol	props		6346194						
ANR	6346700	Symbol	ram_size		6346194						
ANR	6346701	Symbol	* i		6346194						
ANR	6346702	Symbol	mc -> possible_cpu_arch_ids		6346194						
ANR	6346703	Symbol	& error_fatal		6346194						
ANR	6346704	Symbol	numa_info [ i ] . present		6346194						
ANR	6346705	Symbol	true		6346194						
ANR	6346706	Symbol	props . node_id		6346194						
ANR	6346707	Symbol	* props		6346194						
ANR	6346708	Symbol	qemu_opts_foreach		6346194						
ANR	6346709	Symbol	numa_info [ props . node_id ] . node_cpu		6346194						
ANR	6346710	Symbol	* possible_cpus -> cpus		6346194						
