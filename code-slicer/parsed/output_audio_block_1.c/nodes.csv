command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6267325	File	/home/p4ultr4n/workplace/ReVeal/raw_code/output_audio_block_1.c								
ANR	6267326	Function	output_audio_block	1:0:0:6651							
ANR	6267327	FunctionDef	"output_audio_block (AC3EncodeContext * s , int blk)"		6267326	0					
ANR	6267328	CompoundStatement		3:0:62:6651	6267326	0					
ANR	6267329	IdentifierDeclStatement	"int ch , i , baie , bnd , got_cpl , ch0 ;"	5:4:69:103	6267326	0	True				
ANR	6267330	IdentifierDecl	ch		6267326	0					
ANR	6267331	IdentifierDeclType	int		6267326	0					
ANR	6267332	Identifier	ch		6267326	1					
ANR	6267333	IdentifierDecl	i		6267326	1					
ANR	6267334	IdentifierDeclType	int		6267326	0					
ANR	6267335	Identifier	i		6267326	1					
ANR	6267336	IdentifierDecl	baie		6267326	2					
ANR	6267337	IdentifierDeclType	int		6267326	0					
ANR	6267338	Identifier	baie		6267326	1					
ANR	6267339	IdentifierDecl	bnd		6267326	3					
ANR	6267340	IdentifierDeclType	int		6267326	0					
ANR	6267341	Identifier	bnd		6267326	1					
ANR	6267342	IdentifierDecl	got_cpl		6267326	4					
ANR	6267343	IdentifierDeclType	int		6267326	0					
ANR	6267344	Identifier	got_cpl		6267326	1					
ANR	6267345	IdentifierDecl	ch0		6267326	5					
ANR	6267346	IdentifierDeclType	int		6267326	0					
ANR	6267347	Identifier	ch0		6267326	1					
ANR	6267348	IdentifierDeclStatement	AC3Block * block = & s -> blocks [ blk ] ;	7:4:110:143	6267326	1	True				
ANR	6267349	IdentifierDecl	* block = & s -> blocks [ blk ]		6267326	0					
ANR	6267350	IdentifierDeclType	AC3Block *		6267326	0					
ANR	6267351	Identifier	block		6267326	1					
ANR	6267352	AssignmentExpression	* block = & s -> blocks [ blk ]		6267326	2		=			
ANR	6267353	Identifier	block		6267326	0					
ANR	6267354	UnaryOperationExpression	& s -> blocks [ blk ]		6267326	1					
ANR	6267355	UnaryOperator	&		6267326	0					
ANR	6267356	ArrayIndexing	s -> blocks [ blk ]		6267326	1					
ANR	6267357	PtrMemberAccess	s -> blocks		6267326	0					
ANR	6267358	Identifier	s		6267326	0					
ANR	6267359	Identifier	blocks		6267326	1					
ANR	6267360	Identifier	blk		6267326	1					
ANR	6267361	IfStatement	if ( ! s -> eac3 )		6267326	2					
ANR	6267362	Condition	! s -> eac3	13:8:183:190	6267326	0	True				
ANR	6267363	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267364	UnaryOperator	!		6267326	0					
ANR	6267365	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267366	Identifier	s		6267326	0					
ANR	6267367	Identifier	eac3		6267326	1					
ANR	6267368	CompoundStatement		11:18:130:130	6267326	1					
ANR	6267369	ForStatement	for ( ch = 0 ; ch < s -> fbw_channels ; ch ++ )		6267326	0					
ANR	6267370	ForInit	ch = 0 ;	15:13:209:215	6267326	0	True				
ANR	6267371	AssignmentExpression	ch = 0		6267326	0		=			
ANR	6267372	Identifier	ch		6267326	0					
ANR	6267373	PrimaryExpression	0		6267326	1					
ANR	6267374	Condition	ch < s -> fbw_channels	15:21:217:236	6267326	1	True				
ANR	6267375	RelationalExpression	ch < s -> fbw_channels		6267326	0		<			
ANR	6267376	Identifier	ch		6267326	0					
ANR	6267377	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6267378	Identifier	s		6267326	0					
ANR	6267379	Identifier	fbw_channels		6267326	1					
ANR	6267380	PostIncDecOperationExpression	ch ++	15:43:239:242	6267326	2	True				
ANR	6267381	Identifier	ch		6267326	0					
ANR	6267382	IncDec	++		6267326	1					
ANR	6267383	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	17:12:258:280	6267326	3	True				
ANR	6267384	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267385	Callee	put_bits		6267326	0					
ANR	6267386	Identifier	put_bits		6267326	0					
ANR	6267387	ArgumentList	& s -> pb		6267326	1					
ANR	6267388	Argument	& s -> pb		6267326	0					
ANR	6267389	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267390	UnaryOperator	&		6267326	0					
ANR	6267391	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267392	Identifier	s		6267326	0					
ANR	6267393	Identifier	pb		6267326	1					
ANR	6267394	Argument	1		6267326	1					
ANR	6267395	PrimaryExpression	1		6267326	0					
ANR	6267396	Argument	0		6267326	2					
ANR	6267397	PrimaryExpression	0		6267326	0					
ANR	6267398	IfStatement	if ( ! s -> eac3 )		6267326	3					
ANR	6267399	Condition	! s -> eac3	25:8:324:331	6267326	0	True				
ANR	6267400	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267401	UnaryOperator	!		6267326	0					
ANR	6267402	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267403	Identifier	s		6267326	0					
ANR	6267404	Identifier	eac3		6267326	1					
ANR	6267405	CompoundStatement		23:18:271:271	6267326	1					
ANR	6267406	ForStatement	for ( ch = 0 ; ch < s -> fbw_channels ; ch ++ )		6267326	0					
ANR	6267407	ForInit	ch = 0 ;	27:13:350:356	6267326	0	True				
ANR	6267408	AssignmentExpression	ch = 0		6267326	0		=			
ANR	6267409	Identifier	ch		6267326	0					
ANR	6267410	PrimaryExpression	0		6267326	1					
ANR	6267411	Condition	ch < s -> fbw_channels	27:21:358:377	6267326	1	True				
ANR	6267412	RelationalExpression	ch < s -> fbw_channels		6267326	0		<			
ANR	6267413	Identifier	ch		6267326	0					
ANR	6267414	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6267415	Identifier	s		6267326	0					
ANR	6267416	Identifier	fbw_channels		6267326	1					
ANR	6267417	PostIncDecOperationExpression	ch ++	27:43:380:383	6267326	2	True				
ANR	6267418	Identifier	ch		6267326	0					
ANR	6267419	IncDec	++		6267326	1					
ANR	6267420	ExpressionStatement	"put_bits ( & s -> pb , 1 , 1 )"	29:12:399:421	6267326	3	True				
ANR	6267421	CallExpression	"put_bits ( & s -> pb , 1 , 1 )"		6267326	0					
ANR	6267422	Callee	put_bits		6267326	0					
ANR	6267423	Identifier	put_bits		6267326	0					
ANR	6267424	ArgumentList	& s -> pb		6267326	1					
ANR	6267425	Argument	& s -> pb		6267326	0					
ANR	6267426	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267427	UnaryOperator	&		6267326	0					
ANR	6267428	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267429	Identifier	s		6267326	0					
ANR	6267430	Identifier	pb		6267326	1					
ANR	6267431	Argument	1		6267326	1					
ANR	6267432	PrimaryExpression	1		6267326	0					
ANR	6267433	Argument	1		6267326	2					
ANR	6267434	PrimaryExpression	1		6267326	0					
ANR	6267435	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	37:4:468:490	6267326	4	True				
ANR	6267436	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267437	Callee	put_bits		6267326	0					
ANR	6267438	Identifier	put_bits		6267326	0					
ANR	6267439	ArgumentList	& s -> pb		6267326	1					
ANR	6267440	Argument	& s -> pb		6267326	0					
ANR	6267441	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267442	UnaryOperator	&		6267326	0					
ANR	6267443	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267444	Identifier	s		6267326	0					
ANR	6267445	Identifier	pb		6267326	1					
ANR	6267446	Argument	1		6267326	1					
ANR	6267447	PrimaryExpression	1		6267326	0					
ANR	6267448	Argument	0		6267326	2					
ANR	6267449	PrimaryExpression	0		6267326	0					
ANR	6267450	IfStatement	if ( s -> eac3 )		6267326	5					
ANR	6267451	Condition	s -> eac3	43:8:533:539	6267326	0	True				
ANR	6267452	PtrMemberAccess	s -> eac3		6267326	0					
ANR	6267453	Identifier	s		6267326	0					
ANR	6267454	Identifier	eac3		6267326	1					
ANR	6267455	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	45:8:551:573	6267326	1	True				
ANR	6267456	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267457	Callee	put_bits		6267326	0					
ANR	6267458	Identifier	put_bits		6267326	0					
ANR	6267459	ArgumentList	& s -> pb		6267326	1					
ANR	6267460	Argument	& s -> pb		6267326	0					
ANR	6267461	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267462	UnaryOperator	&		6267326	0					
ANR	6267463	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267464	Identifier	s		6267326	0					
ANR	6267465	Identifier	pb		6267326	1					
ANR	6267466	Argument	1		6267326	1					
ANR	6267467	PrimaryExpression	1		6267326	0					
ANR	6267468	Argument	0		6267326	2					
ANR	6267469	PrimaryExpression	0		6267326	0					
ANR	6267470	IfStatement	if ( ! s -> eac3 )		6267326	6					
ANR	6267471	Condition	! s -> eac3	51:8:614:621	6267326	0	True				
ANR	6267472	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267473	UnaryOperator	!		6267326	0					
ANR	6267474	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267475	Identifier	s		6267326	0					
ANR	6267476	Identifier	eac3		6267326	1					
ANR	6267477	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> new_cpl_strategy )"	53:8:633:677	6267326	1	True				
ANR	6267478	CallExpression	"put_bits ( & s -> pb , 1 , block -> new_cpl_strategy )"		6267326	0					
ANR	6267479	Callee	put_bits		6267326	0					
ANR	6267480	Identifier	put_bits		6267326	0					
ANR	6267481	ArgumentList	& s -> pb		6267326	1					
ANR	6267482	Argument	& s -> pb		6267326	0					
ANR	6267483	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267484	UnaryOperator	&		6267326	0					
ANR	6267485	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267486	Identifier	s		6267326	0					
ANR	6267487	Identifier	pb		6267326	1					
ANR	6267488	Argument	1		6267326	1					
ANR	6267489	PrimaryExpression	1		6267326	0					
ANR	6267490	Argument	block -> new_cpl_strategy		6267326	2					
ANR	6267491	PtrMemberAccess	block -> new_cpl_strategy		6267326	0					
ANR	6267492	Identifier	block		6267326	0					
ANR	6267493	Identifier	new_cpl_strategy		6267326	1					
ANR	6267494	IfStatement	if ( block -> new_cpl_strategy )		6267326	7					
ANR	6267495	Condition	block -> new_cpl_strategy	55:8:688:710	6267326	0	True				
ANR	6267496	PtrMemberAccess	block -> new_cpl_strategy		6267326	0					
ANR	6267497	Identifier	block		6267326	0					
ANR	6267498	Identifier	new_cpl_strategy		6267326	1					
ANR	6267499	CompoundStatement		53:33:650:650	6267326	1					
ANR	6267500	IfStatement	if ( ! s -> eac3 )		6267326	0					
ANR	6267501	Condition	! s -> eac3	57:12:728:735	6267326	0	True				
ANR	6267502	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267503	UnaryOperator	!		6267326	0					
ANR	6267504	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267505	Identifier	s		6267326	0					
ANR	6267506	Identifier	eac3		6267326	1					
ANR	6267507	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> cpl_in_use )"	59:12:751:789	6267326	1	True				
ANR	6267508	CallExpression	"put_bits ( & s -> pb , 1 , block -> cpl_in_use )"		6267326	0					
ANR	6267509	Callee	put_bits		6267326	0					
ANR	6267510	Identifier	put_bits		6267326	0					
ANR	6267511	ArgumentList	& s -> pb		6267326	1					
ANR	6267512	Argument	& s -> pb		6267326	0					
ANR	6267513	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267514	UnaryOperator	&		6267326	0					
ANR	6267515	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267516	Identifier	s		6267326	0					
ANR	6267517	Identifier	pb		6267326	1					
ANR	6267518	Argument	1		6267326	1					
ANR	6267519	PrimaryExpression	1		6267326	0					
ANR	6267520	Argument	block -> cpl_in_use		6267326	2					
ANR	6267521	PtrMemberAccess	block -> cpl_in_use		6267326	0					
ANR	6267522	Identifier	block		6267326	0					
ANR	6267523	Identifier	cpl_in_use		6267326	1					
ANR	6267524	IfStatement	if ( block -> cpl_in_use )		6267326	1					
ANR	6267525	Condition	block -> cpl_in_use	61:12:804:820	6267326	0	True				
ANR	6267526	PtrMemberAccess	block -> cpl_in_use		6267326	0					
ANR	6267527	Identifier	block		6267326	0					
ANR	6267528	Identifier	cpl_in_use		6267326	1					
ANR	6267529	CompoundStatement		61:12:775:797	6267326	1					
ANR	6267530	IdentifierDeclStatement	"int start_sub , end_sub ;"	63:12:838:860	6267326	0	True				
ANR	6267531	IdentifierDecl	start_sub		6267326	0					
ANR	6267532	IdentifierDeclType	int		6267326	0					
ANR	6267533	Identifier	start_sub		6267326	1					
ANR	6267534	IdentifierDecl	end_sub		6267326	1					
ANR	6267535	IdentifierDeclType	int		6267326	0					
ANR	6267536	Identifier	end_sub		6267326	1					
ANR	6267537	IfStatement	if ( s -> eac3 )		6267326	1					
ANR	6267538	Condition	s -> eac3	65:16:879:885	6267326	0	True				
ANR	6267539	PtrMemberAccess	s -> eac3		6267326	0					
ANR	6267540	Identifier	s		6267326	0					
ANR	6267541	Identifier	eac3		6267326	1					
ANR	6267542	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	67:16:905:927	6267326	1	True				
ANR	6267543	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267544	Callee	put_bits		6267326	0					
ANR	6267545	Identifier	put_bits		6267326	0					
ANR	6267546	ArgumentList	& s -> pb		6267326	1					
ANR	6267547	Argument	& s -> pb		6267326	0					
ANR	6267548	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267549	UnaryOperator	&		6267326	0					
ANR	6267550	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267551	Identifier	s		6267326	0					
ANR	6267552	Identifier	pb		6267326	1					
ANR	6267553	Argument	1		6267326	1					
ANR	6267554	PrimaryExpression	1		6267326	0					
ANR	6267555	Argument	0		6267326	2					
ANR	6267556	PrimaryExpression	0		6267326	0					
ANR	6267557	IfStatement	if ( ! s -> eac3 || s -> channel_mode != AC3_CHMODE_STEREO )		6267326	2					
ANR	6267558	Condition	! s -> eac3 || s -> channel_mode != AC3_CHMODE_STEREO	69:16:970:1017	6267326	0	True				
ANR	6267559	OrExpression	! s -> eac3 || s -> channel_mode != AC3_CHMODE_STEREO		6267326	0		||			
ANR	6267560	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267561	UnaryOperator	!		6267326	0					
ANR	6267562	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267563	Identifier	s		6267326	0					
ANR	6267564	Identifier	eac3		6267326	1					
ANR	6267565	EqualityExpression	s -> channel_mode != AC3_CHMODE_STEREO		6267326	1		!=			
ANR	6267566	PtrMemberAccess	s -> channel_mode		6267326	0					
ANR	6267567	Identifier	s		6267326	0					
ANR	6267568	Identifier	channel_mode		6267326	1					
ANR	6267569	Identifier	AC3_CHMODE_STEREO		6267326	1					
ANR	6267570	CompoundStatement		67:66:957:957	6267326	1					
ANR	6267571	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		6267326	0					
ANR	6267572	ForInit	ch = 1 ;	71:21:1044:1050	6267326	0	True				
ANR	6267573	AssignmentExpression	ch = 1		6267326	0		=			
ANR	6267574	Identifier	ch		6267326	0					
ANR	6267575	PrimaryExpression	1		6267326	1					
ANR	6267576	Condition	ch <= s -> fbw_channels	71:29:1052:1072	6267326	1	True				
ANR	6267577	RelationalExpression	ch <= s -> fbw_channels		6267326	0		<=			
ANR	6267578	Identifier	ch		6267326	0					
ANR	6267579	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6267580	Identifier	s		6267326	0					
ANR	6267581	Identifier	fbw_channels		6267326	1					
ANR	6267582	PostIncDecOperationExpression	ch ++	71:52:1075:1078	6267326	2	True				
ANR	6267583	Identifier	ch		6267326	0					
ANR	6267584	IncDec	++		6267326	1					
ANR	6267585	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> channel_in_cpl [ ch ] )"	73:20:1102:1148	6267326	3	True				
ANR	6267586	CallExpression	"put_bits ( & s -> pb , 1 , block -> channel_in_cpl [ ch ] )"		6267326	0					
ANR	6267587	Callee	put_bits		6267326	0					
ANR	6267588	Identifier	put_bits		6267326	0					
ANR	6267589	ArgumentList	& s -> pb		6267326	1					
ANR	6267590	Argument	& s -> pb		6267326	0					
ANR	6267591	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267592	UnaryOperator	&		6267326	0					
ANR	6267593	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267594	Identifier	s		6267326	0					
ANR	6267595	Identifier	pb		6267326	1					
ANR	6267596	Argument	1		6267326	1					
ANR	6267597	PrimaryExpression	1		6267326	0					
ANR	6267598	Argument	block -> channel_in_cpl [ ch ]		6267326	2					
ANR	6267599	ArrayIndexing	block -> channel_in_cpl [ ch ]		6267326	0					
ANR	6267600	PtrMemberAccess	block -> channel_in_cpl		6267326	0					
ANR	6267601	Identifier	block		6267326	0					
ANR	6267602	Identifier	channel_in_cpl		6267326	1					
ANR	6267603	Identifier	ch		6267326	1					
ANR	6267604	IfStatement	if ( s -> channel_mode == AC3_CHMODE_STEREO )		6267326	3					
ANR	6267605	Condition	s -> channel_mode == AC3_CHMODE_STEREO	77:16:1182:1217	6267326	0	True				
ANR	6267606	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		6267326	0		==			
ANR	6267607	PtrMemberAccess	s -> channel_mode		6267326	0					
ANR	6267608	Identifier	s		6267326	0					
ANR	6267609	Identifier	channel_mode		6267326	1					
ANR	6267610	Identifier	AC3_CHMODE_STEREO		6267326	1					
ANR	6267611	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	79:16:1237:1259	6267326	1	True				
ANR	6267612	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267613	Callee	put_bits		6267326	0					
ANR	6267614	Identifier	put_bits		6267326	0					
ANR	6267615	ArgumentList	& s -> pb		6267326	1					
ANR	6267616	Argument	& s -> pb		6267326	0					
ANR	6267617	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267618	UnaryOperator	&		6267326	0					
ANR	6267619	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267620	Identifier	s		6267326	0					
ANR	6267621	Identifier	pb		6267326	1					
ANR	6267622	Argument	1		6267326	1					
ANR	6267623	PrimaryExpression	1		6267326	0					
ANR	6267624	Argument	0		6267326	2					
ANR	6267625	PrimaryExpression	0		6267326	0					
ANR	6267626	ExpressionStatement	start_sub = ( s -> start_freq [ CPL_CH ] - 37 ) / 12	81:12:1299:1344	6267326	4	True				
ANR	6267627	AssignmentExpression	start_sub = ( s -> start_freq [ CPL_CH ] - 37 ) / 12		6267326	0		=			
ANR	6267628	Identifier	start_sub		6267326	0					
ANR	6267629	MultiplicativeExpression	( s -> start_freq [ CPL_CH ] - 37 ) / 12		6267326	1		/			
ANR	6267630	AdditiveExpression	s -> start_freq [ CPL_CH ] - 37		6267326	0		-			
ANR	6267631	ArrayIndexing	s -> start_freq [ CPL_CH ]		6267326	0					
ANR	6267632	PtrMemberAccess	s -> start_freq		6267326	0					
ANR	6267633	Identifier	s		6267326	0					
ANR	6267634	Identifier	start_freq		6267326	1					
ANR	6267635	Identifier	CPL_CH		6267326	1					
ANR	6267636	PrimaryExpression	37		6267326	1					
ANR	6267637	PrimaryExpression	12		6267326	1					
ANR	6267638	ExpressionStatement	end_sub = ( s -> cpl_end_freq - 37 ) / 12	83:12:1359:1404	6267326	5	True				
ANR	6267639	AssignmentExpression	end_sub = ( s -> cpl_end_freq - 37 ) / 12		6267326	0		=			
ANR	6267640	Identifier	end_sub		6267326	0					
ANR	6267641	MultiplicativeExpression	( s -> cpl_end_freq - 37 ) / 12		6267326	1		/			
ANR	6267642	AdditiveExpression	s -> cpl_end_freq - 37		6267326	0		-			
ANR	6267643	PtrMemberAccess	s -> cpl_end_freq		6267326	0					
ANR	6267644	Identifier	s		6267326	0					
ANR	6267645	Identifier	cpl_end_freq		6267326	1					
ANR	6267646	PrimaryExpression	37		6267326	1					
ANR	6267647	PrimaryExpression	12		6267326	1					
ANR	6267648	ExpressionStatement	"put_bits ( & s -> pb , 4 , start_sub )"	85:12:1419:1449	6267326	6	True				
ANR	6267649	CallExpression	"put_bits ( & s -> pb , 4 , start_sub )"		6267326	0					
ANR	6267650	Callee	put_bits		6267326	0					
ANR	6267651	Identifier	put_bits		6267326	0					
ANR	6267652	ArgumentList	& s -> pb		6267326	1					
ANR	6267653	Argument	& s -> pb		6267326	0					
ANR	6267654	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267655	UnaryOperator	&		6267326	0					
ANR	6267656	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267657	Identifier	s		6267326	0					
ANR	6267658	Identifier	pb		6267326	1					
ANR	6267659	Argument	4		6267326	1					
ANR	6267660	PrimaryExpression	4		6267326	0					
ANR	6267661	Argument	start_sub		6267326	2					
ANR	6267662	Identifier	start_sub		6267326	0					
ANR	6267663	ExpressionStatement	"put_bits ( & s -> pb , 4 , end_sub - 3 )"	87:12:1464:1496	6267326	7	True				
ANR	6267664	CallExpression	"put_bits ( & s -> pb , 4 , end_sub - 3 )"		6267326	0					
ANR	6267665	Callee	put_bits		6267326	0					
ANR	6267666	Identifier	put_bits		6267326	0					
ANR	6267667	ArgumentList	& s -> pb		6267326	1					
ANR	6267668	Argument	& s -> pb		6267326	0					
ANR	6267669	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267670	UnaryOperator	&		6267326	0					
ANR	6267671	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267672	Identifier	s		6267326	0					
ANR	6267673	Identifier	pb		6267326	1					
ANR	6267674	Argument	4		6267326	1					
ANR	6267675	PrimaryExpression	4		6267326	0					
ANR	6267676	Argument	end_sub - 3		6267326	2					
ANR	6267677	AdditiveExpression	end_sub - 3		6267326	0		-			
ANR	6267678	Identifier	end_sub		6267326	0					
ANR	6267679	PrimaryExpression	3		6267326	1					
ANR	6267680	IfStatement	if ( s -> eac3 )		6267326	8					
ANR	6267681	Condition	s -> eac3	91:16:1558:1564	6267326	0	True				
ANR	6267682	PtrMemberAccess	s -> eac3		6267326	0					
ANR	6267683	Identifier	s		6267326	0					
ANR	6267684	Identifier	eac3		6267326	1					
ANR	6267685	CompoundStatement		89:25:1504:1504	6267326	1					
ANR	6267686	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	93:16:1586:1608	6267326	0	True				
ANR	6267687	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6267688	Callee	put_bits		6267326	0					
ANR	6267689	Identifier	put_bits		6267326	0					
ANR	6267690	ArgumentList	& s -> pb		6267326	1					
ANR	6267691	Argument	& s -> pb		6267326	0					
ANR	6267692	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267693	UnaryOperator	&		6267326	0					
ANR	6267694	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267695	Identifier	s		6267326	0					
ANR	6267696	Identifier	pb		6267326	1					
ANR	6267697	Argument	1		6267326	1					
ANR	6267698	PrimaryExpression	1		6267326	0					
ANR	6267699	Argument	0		6267326	2					
ANR	6267700	PrimaryExpression	0		6267326	0					
ANR	6267701	ElseStatement	else		6267326	0					
ANR	6267702	CompoundStatement		93:19:1585:1585	6267326	0					
ANR	6267703	ForStatement	for ( bnd = start_sub + 1 ; bnd < end_sub ; bnd ++ )		6267326	0					
ANR	6267704	ForInit	bnd = start_sub + 1 ;	97:21:1672:1689	6267326	0	True				
ANR	6267705	AssignmentExpression	bnd = start_sub + 1		6267326	0		=			
ANR	6267706	Identifier	bnd		6267326	0					
ANR	6267707	AdditiveExpression	start_sub + 1		6267326	1		+			
ANR	6267708	Identifier	start_sub		6267326	0					
ANR	6267709	PrimaryExpression	1		6267326	1					
ANR	6267710	Condition	bnd < end_sub	97:40:1691:1703	6267326	1	True				
ANR	6267711	RelationalExpression	bnd < end_sub		6267326	0		<			
ANR	6267712	Identifier	bnd		6267326	0					
ANR	6267713	Identifier	end_sub		6267326	1					
ANR	6267714	PostIncDecOperationExpression	bnd ++	97:55:1706:1710	6267326	2	True				
ANR	6267715	Identifier	bnd		6267326	0					
ANR	6267716	IncDec	++		6267326	1					
ANR	6267717	ExpressionStatement	"put_bits ( & s -> pb , 1 , ff_eac3_default_cpl_band_struct [ bnd ] )"	99:20:1734:1791	6267326	3	True				
ANR	6267718	CallExpression	"put_bits ( & s -> pb , 1 , ff_eac3_default_cpl_band_struct [ bnd ] )"		6267326	0					
ANR	6267719	Callee	put_bits		6267326	0					
ANR	6267720	Identifier	put_bits		6267326	0					
ANR	6267721	ArgumentList	& s -> pb		6267326	1					
ANR	6267722	Argument	& s -> pb		6267326	0					
ANR	6267723	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267724	UnaryOperator	&		6267326	0					
ANR	6267725	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267726	Identifier	s		6267326	0					
ANR	6267727	Identifier	pb		6267326	1					
ANR	6267728	Argument	1		6267326	1					
ANR	6267729	PrimaryExpression	1		6267326	0					
ANR	6267730	Argument	ff_eac3_default_cpl_band_struct [ bnd ]		6267326	2					
ANR	6267731	ArrayIndexing	ff_eac3_default_cpl_band_struct [ bnd ]		6267326	0					
ANR	6267732	Identifier	ff_eac3_default_cpl_band_struct		6267326	0					
ANR	6267733	Identifier	bnd		6267326	1					
ANR	6267734	IfStatement	if ( block -> cpl_in_use )		6267326	8					
ANR	6267735	Condition	block -> cpl_in_use	111:8:1869:1885	6267326	0	True				
ANR	6267736	PtrMemberAccess	block -> cpl_in_use		6267326	0					
ANR	6267737	Identifier	block		6267326	0					
ANR	6267738	Identifier	cpl_in_use		6267326	1					
ANR	6267739	CompoundStatement		109:27:1825:1825	6267326	1					
ANR	6267740	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		6267326	0					
ANR	6267741	ForInit	ch = 1 ;	113:13:1904:1910	6267326	0	True				
ANR	6267742	AssignmentExpression	ch = 1		6267326	0		=			
ANR	6267743	Identifier	ch		6267326	0					
ANR	6267744	PrimaryExpression	1		6267326	1					
ANR	6267745	Condition	ch <= s -> fbw_channels	113:21:1912:1932	6267326	1	True				
ANR	6267746	RelationalExpression	ch <= s -> fbw_channels		6267326	0		<=			
ANR	6267747	Identifier	ch		6267326	0					
ANR	6267748	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6267749	Identifier	s		6267326	0					
ANR	6267750	Identifier	fbw_channels		6267326	1					
ANR	6267751	PostIncDecOperationExpression	ch ++	113:44:1935:1938	6267326	2	True				
ANR	6267752	Identifier	ch		6267326	0					
ANR	6267753	IncDec	++		6267326	1					
ANR	6267754	CompoundStatement		111:50:1878:1878	6267326	3					
ANR	6267755	IfStatement	if ( block -> channel_in_cpl [ ch ] )		6267326	0					
ANR	6267756	Condition	block -> channel_in_cpl [ ch ]	115:16:1960:1984	6267326	0	True				
ANR	6267757	ArrayIndexing	block -> channel_in_cpl [ ch ]		6267326	0					
ANR	6267758	PtrMemberAccess	block -> channel_in_cpl		6267326	0					
ANR	6267759	Identifier	block		6267326	0					
ANR	6267760	Identifier	channel_in_cpl		6267326	1					
ANR	6267761	Identifier	ch		6267326	1					
ANR	6267762	CompoundStatement		113:43:1924:1924	6267326	1					
ANR	6267763	IfStatement	if ( ! s -> eac3 || block -> new_cpl_coords [ ch ] != 2 )		6267326	0					
ANR	6267764	Condition	! s -> eac3 || block -> new_cpl_coords [ ch ] != 2	117:20:2010:2051	6267326	0	True				
ANR	6267765	OrExpression	! s -> eac3 || block -> new_cpl_coords [ ch ] != 2		6267326	0		||			
ANR	6267766	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267767	UnaryOperator	!		6267326	0					
ANR	6267768	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267769	Identifier	s		6267326	0					
ANR	6267770	Identifier	eac3		6267326	1					
ANR	6267771	EqualityExpression	block -> new_cpl_coords [ ch ] != 2		6267326	1		!=			
ANR	6267772	ArrayIndexing	block -> new_cpl_coords [ ch ]		6267326	0					
ANR	6267773	PtrMemberAccess	block -> new_cpl_coords		6267326	0					
ANR	6267774	Identifier	block		6267326	0					
ANR	6267775	Identifier	new_cpl_coords		6267326	1					
ANR	6267776	Identifier	ch		6267326	1					
ANR	6267777	PrimaryExpression	2		6267326	1					
ANR	6267778	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> new_cpl_coords [ ch ] )"	119:20:2075:2121	6267326	1	True				
ANR	6267779	CallExpression	"put_bits ( & s -> pb , 1 , block -> new_cpl_coords [ ch ] )"		6267326	0					
ANR	6267780	Callee	put_bits		6267326	0					
ANR	6267781	Identifier	put_bits		6267326	0					
ANR	6267782	ArgumentList	& s -> pb		6267326	1					
ANR	6267783	Argument	& s -> pb		6267326	0					
ANR	6267784	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267785	UnaryOperator	&		6267326	0					
ANR	6267786	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267787	Identifier	s		6267326	0					
ANR	6267788	Identifier	pb		6267326	1					
ANR	6267789	Argument	1		6267326	1					
ANR	6267790	PrimaryExpression	1		6267326	0					
ANR	6267791	Argument	block -> new_cpl_coords [ ch ]		6267326	2					
ANR	6267792	ArrayIndexing	block -> new_cpl_coords [ ch ]		6267326	0					
ANR	6267793	PtrMemberAccess	block -> new_cpl_coords		6267326	0					
ANR	6267794	Identifier	block		6267326	0					
ANR	6267795	Identifier	new_cpl_coords		6267326	1					
ANR	6267796	Identifier	ch		6267326	1					
ANR	6267797	IfStatement	if ( block -> new_cpl_coords [ ch ] )		6267326	1					
ANR	6267798	Condition	block -> new_cpl_coords [ ch ]	121:20:2144:2168	6267326	0	True				
ANR	6267799	ArrayIndexing	block -> new_cpl_coords [ ch ]		6267326	0					
ANR	6267800	PtrMemberAccess	block -> new_cpl_coords		6267326	0					
ANR	6267801	Identifier	block		6267326	0					
ANR	6267802	Identifier	new_cpl_coords		6267326	1					
ANR	6267803	Identifier	ch		6267326	1					
ANR	6267804	CompoundStatement		119:47:2108:2108	6267326	1					
ANR	6267805	ExpressionStatement	"put_bits ( & s -> pb , 2 , block -> cpl_master_exp [ ch ] )"	123:20:2194:2240	6267326	0	True				
ANR	6267806	CallExpression	"put_bits ( & s -> pb , 2 , block -> cpl_master_exp [ ch ] )"		6267326	0					
ANR	6267807	Callee	put_bits		6267326	0					
ANR	6267808	Identifier	put_bits		6267326	0					
ANR	6267809	ArgumentList	& s -> pb		6267326	1					
ANR	6267810	Argument	& s -> pb		6267326	0					
ANR	6267811	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267812	UnaryOperator	&		6267326	0					
ANR	6267813	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267814	Identifier	s		6267326	0					
ANR	6267815	Identifier	pb		6267326	1					
ANR	6267816	Argument	2		6267326	1					
ANR	6267817	PrimaryExpression	2		6267326	0					
ANR	6267818	Argument	block -> cpl_master_exp [ ch ]		6267326	2					
ANR	6267819	ArrayIndexing	block -> cpl_master_exp [ ch ]		6267326	0					
ANR	6267820	PtrMemberAccess	block -> cpl_master_exp		6267326	0					
ANR	6267821	Identifier	block		6267326	0					
ANR	6267822	Identifier	cpl_master_exp		6267326	1					
ANR	6267823	Identifier	ch		6267326	1					
ANR	6267824	ForStatement	for ( bnd = 0 ; bnd < s -> num_cpl_bands ; bnd ++ )		6267326	1					
ANR	6267825	ForInit	bnd = 0 ;	125:25:2268:2275	6267326	0	True				
ANR	6267826	AssignmentExpression	bnd = 0		6267326	0		=			
ANR	6267827	Identifier	bnd		6267326	0					
ANR	6267828	PrimaryExpression	0		6267326	1					
ANR	6267829	Condition	bnd < s -> num_cpl_bands	125:34:2277:2298	6267326	1	True				
ANR	6267830	RelationalExpression	bnd < s -> num_cpl_bands		6267326	0		<			
ANR	6267831	Identifier	bnd		6267326	0					
ANR	6267832	PtrMemberAccess	s -> num_cpl_bands		6267326	1					
ANR	6267833	Identifier	s		6267326	0					
ANR	6267834	Identifier	num_cpl_bands		6267326	1					
ANR	6267835	PostIncDecOperationExpression	bnd ++	125:58:2301:2305	6267326	2	True				
ANR	6267836	Identifier	bnd		6267326	0					
ANR	6267837	IncDec	++		6267326	1					
ANR	6267838	CompoundStatement		123:65:2245:2245	6267326	3					
ANR	6267839	ExpressionStatement	"put_bits ( & s -> pb , 4 , block -> cpl_coord_exp [ ch ] [ bnd ] )"	127:24:2335:2386	6267326	0	True				
ANR	6267840	CallExpression	"put_bits ( & s -> pb , 4 , block -> cpl_coord_exp [ ch ] [ bnd ] )"		6267326	0					
ANR	6267841	Callee	put_bits		6267326	0					
ANR	6267842	Identifier	put_bits		6267326	0					
ANR	6267843	ArgumentList	& s -> pb		6267326	1					
ANR	6267844	Argument	& s -> pb		6267326	0					
ANR	6267845	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267846	UnaryOperator	&		6267326	0					
ANR	6267847	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267848	Identifier	s		6267326	0					
ANR	6267849	Identifier	pb		6267326	1					
ANR	6267850	Argument	4		6267326	1					
ANR	6267851	PrimaryExpression	4		6267326	0					
ANR	6267852	Argument	block -> cpl_coord_exp [ ch ] [ bnd ]		6267326	2					
ANR	6267853	ArrayIndexing	block -> cpl_coord_exp [ ch ] [ bnd ]		6267326	0					
ANR	6267854	ArrayIndexing	block -> cpl_coord_exp [ ch ]		6267326	0					
ANR	6267855	PtrMemberAccess	block -> cpl_coord_exp		6267326	0					
ANR	6267856	Identifier	block		6267326	0					
ANR	6267857	Identifier	cpl_coord_exp		6267326	1					
ANR	6267858	Identifier	ch		6267326	1					
ANR	6267859	Identifier	bnd		6267326	1					
ANR	6267860	ExpressionStatement	"put_bits ( & s -> pb , 4 , block -> cpl_coord_mant [ ch ] [ bnd ] )"	129:24:2413:2464	6267326	1	True				
ANR	6267861	CallExpression	"put_bits ( & s -> pb , 4 , block -> cpl_coord_mant [ ch ] [ bnd ] )"		6267326	0					
ANR	6267862	Callee	put_bits		6267326	0					
ANR	6267863	Identifier	put_bits		6267326	0					
ANR	6267864	ArgumentList	& s -> pb		6267326	1					
ANR	6267865	Argument	& s -> pb		6267326	0					
ANR	6267866	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267867	UnaryOperator	&		6267326	0					
ANR	6267868	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267869	Identifier	s		6267326	0					
ANR	6267870	Identifier	pb		6267326	1					
ANR	6267871	Argument	4		6267326	1					
ANR	6267872	PrimaryExpression	4		6267326	0					
ANR	6267873	Argument	block -> cpl_coord_mant [ ch ] [ bnd ]		6267326	2					
ANR	6267874	ArrayIndexing	block -> cpl_coord_mant [ ch ] [ bnd ]		6267326	0					
ANR	6267875	ArrayIndexing	block -> cpl_coord_mant [ ch ]		6267326	0					
ANR	6267876	PtrMemberAccess	block -> cpl_coord_mant		6267326	0					
ANR	6267877	Identifier	block		6267326	0					
ANR	6267878	Identifier	cpl_coord_mant		6267326	1					
ANR	6267879	Identifier	ch		6267326	1					
ANR	6267880	Identifier	bnd		6267326	1					
ANR	6267881	IfStatement	if ( s -> channel_mode == AC3_CHMODE_STEREO )		6267326	9					
ANR	6267882	Condition	s -> channel_mode == AC3_CHMODE_STEREO	145:8:2582:2617	6267326	0	True				
ANR	6267883	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		6267326	0		==			
ANR	6267884	PtrMemberAccess	s -> channel_mode		6267326	0					
ANR	6267885	Identifier	s		6267326	0					
ANR	6267886	Identifier	channel_mode		6267326	1					
ANR	6267887	Identifier	AC3_CHMODE_STEREO		6267326	1					
ANR	6267888	CompoundStatement		143:46:2557:2557	6267326	1					
ANR	6267889	IfStatement	if ( ! s -> eac3 || blk > 0 )		6267326	0					
ANR	6267890	Condition	! s -> eac3 || blk > 0	147:12:2635:2653	6267326	0	True				
ANR	6267891	OrExpression	! s -> eac3 || blk > 0		6267326	0		||			
ANR	6267892	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267893	UnaryOperator	!		6267326	0					
ANR	6267894	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267895	Identifier	s		6267326	0					
ANR	6267896	Identifier	eac3		6267326	1					
ANR	6267897	RelationalExpression	blk > 0		6267326	1		>			
ANR	6267898	Identifier	blk		6267326	0					
ANR	6267899	PrimaryExpression	0		6267326	1					
ANR	6267900	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> new_rematrixing_strategy )"	149:12:2669:2721	6267326	1	True				
ANR	6267901	CallExpression	"put_bits ( & s -> pb , 1 , block -> new_rematrixing_strategy )"		6267326	0					
ANR	6267902	Callee	put_bits		6267326	0					
ANR	6267903	Identifier	put_bits		6267326	0					
ANR	6267904	ArgumentList	& s -> pb		6267326	1					
ANR	6267905	Argument	& s -> pb		6267326	0					
ANR	6267906	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267907	UnaryOperator	&		6267326	0					
ANR	6267908	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267909	Identifier	s		6267326	0					
ANR	6267910	Identifier	pb		6267326	1					
ANR	6267911	Argument	1		6267326	1					
ANR	6267912	PrimaryExpression	1		6267326	0					
ANR	6267913	Argument	block -> new_rematrixing_strategy		6267326	2					
ANR	6267914	PtrMemberAccess	block -> new_rematrixing_strategy		6267326	0					
ANR	6267915	Identifier	block		6267326	0					
ANR	6267916	Identifier	new_rematrixing_strategy		6267326	1					
ANR	6267917	IfStatement	if ( block -> new_rematrixing_strategy )		6267326	1					
ANR	6267918	Condition	block -> new_rematrixing_strategy	151:12:2736:2766	6267326	0	True				
ANR	6267919	PtrMemberAccess	block -> new_rematrixing_strategy		6267326	0					
ANR	6267920	Identifier	block		6267326	0					
ANR	6267921	Identifier	new_rematrixing_strategy		6267326	1					
ANR	6267922	CompoundStatement		149:45:2706:2706	6267326	1					
ANR	6267923	ForStatement	for ( bnd = 0 ; bnd < block -> num_rematrixing_bands ; bnd ++ )		6267326	0					
ANR	6267924	ForInit	bnd = 0 ;	155:17:2826:2833	6267326	0	True				
ANR	6267925	AssignmentExpression	bnd = 0		6267326	0		=			
ANR	6267926	Identifier	bnd		6267326	0					
ANR	6267927	PrimaryExpression	0		6267326	1					
ANR	6267928	Condition	bnd < block -> num_rematrixing_bands	155:26:2835:2868	6267326	1	True				
ANR	6267929	RelationalExpression	bnd < block -> num_rematrixing_bands		6267326	0		<			
ANR	6267930	Identifier	bnd		6267326	0					
ANR	6267931	PtrMemberAccess	block -> num_rematrixing_bands		6267326	1					
ANR	6267932	Identifier	block		6267326	0					
ANR	6267933	Identifier	num_rematrixing_bands		6267326	1					
ANR	6267934	PostIncDecOperationExpression	bnd ++	155:62:2871:2875	6267326	2	True				
ANR	6267935	Identifier	bnd		6267326	0					
ANR	6267936	IncDec	++		6267326	1					
ANR	6267937	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> rematrixing_flags [ bnd ] )"	157:16:2895:2945	6267326	3	True				
ANR	6267938	CallExpression	"put_bits ( & s -> pb , 1 , block -> rematrixing_flags [ bnd ] )"		6267326	0					
ANR	6267939	Callee	put_bits		6267326	0					
ANR	6267940	Identifier	put_bits		6267326	0					
ANR	6267941	ArgumentList	& s -> pb		6267326	1					
ANR	6267942	Argument	& s -> pb		6267326	0					
ANR	6267943	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267944	UnaryOperator	&		6267326	0					
ANR	6267945	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267946	Identifier	s		6267326	0					
ANR	6267947	Identifier	pb		6267326	1					
ANR	6267948	Argument	1		6267326	1					
ANR	6267949	PrimaryExpression	1		6267326	0					
ANR	6267950	Argument	block -> rematrixing_flags [ bnd ]		6267326	2					
ANR	6267951	ArrayIndexing	block -> rematrixing_flags [ bnd ]		6267326	0					
ANR	6267952	PtrMemberAccess	block -> rematrixing_flags		6267326	0					
ANR	6267953	Identifier	block		6267326	0					
ANR	6267954	Identifier	rematrixing_flags		6267326	1					
ANR	6267955	Identifier	bnd		6267326	1					
ANR	6267956	IfStatement	if ( ! s -> eac3 )		6267326	10					
ANR	6267957	Condition	! s -> eac3	167:8:3005:3012	6267326	0	True				
ANR	6267958	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6267959	UnaryOperator	!		6267326	0					
ANR	6267960	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6267961	Identifier	s		6267326	0					
ANR	6267962	Identifier	eac3		6267326	1					
ANR	6267963	CompoundStatement		165:18:2952:2952	6267326	1					
ANR	6267964	ForStatement	for ( ch = ! block -> cpl_in_use ; ch <= s -> fbw_channels ; ch ++ )		6267326	0					
ANR	6267965	ForInit	ch = ! block -> cpl_in_use ;	169:13:3031:3054	6267326	0	True				
ANR	6267966	AssignmentExpression	ch = ! block -> cpl_in_use		6267326	0		=			
ANR	6267967	Identifier	ch		6267326	0					
ANR	6267968	UnaryOperationExpression	! block -> cpl_in_use		6267326	1					
ANR	6267969	UnaryOperator	!		6267326	0					
ANR	6267970	PtrMemberAccess	block -> cpl_in_use		6267326	1					
ANR	6267971	Identifier	block		6267326	0					
ANR	6267972	Identifier	cpl_in_use		6267326	1					
ANR	6267973	Condition	ch <= s -> fbw_channels	169:38:3056:3076	6267326	1	True				
ANR	6267974	RelationalExpression	ch <= s -> fbw_channels		6267326	0		<=			
ANR	6267975	Identifier	ch		6267326	0					
ANR	6267976	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6267977	Identifier	s		6267326	0					
ANR	6267978	Identifier	fbw_channels		6267326	1					
ANR	6267979	PostIncDecOperationExpression	ch ++	169:61:3079:3082	6267326	2	True				
ANR	6267980	Identifier	ch		6267326	0					
ANR	6267981	IncDec	++		6267326	1					
ANR	6267982	ExpressionStatement	"put_bits ( & s -> pb , 2 , s -> exp_strategy [ ch ] [ blk ] )"	171:12:3098:3143	6267326	3	True				
ANR	6267983	CallExpression	"put_bits ( & s -> pb , 2 , s -> exp_strategy [ ch ] [ blk ] )"		6267326	0					
ANR	6267984	Callee	put_bits		6267326	0					
ANR	6267985	Identifier	put_bits		6267326	0					
ANR	6267986	ArgumentList	& s -> pb		6267326	1					
ANR	6267987	Argument	& s -> pb		6267326	0					
ANR	6267988	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6267989	UnaryOperator	&		6267326	0					
ANR	6267990	PtrMemberAccess	s -> pb		6267326	1					
ANR	6267991	Identifier	s		6267326	0					
ANR	6267992	Identifier	pb		6267326	1					
ANR	6267993	Argument	2		6267326	1					
ANR	6267994	PrimaryExpression	2		6267326	0					
ANR	6267995	Argument	s -> exp_strategy [ ch ] [ blk ]		6267326	2					
ANR	6267996	ArrayIndexing	s -> exp_strategy [ ch ] [ blk ]		6267326	0					
ANR	6267997	ArrayIndexing	s -> exp_strategy [ ch ]		6267326	0					
ANR	6267998	PtrMemberAccess	s -> exp_strategy		6267326	0					
ANR	6267999	Identifier	s		6267326	0					
ANR	6268000	Identifier	exp_strategy		6267326	1					
ANR	6268001	Identifier	ch		6267326	1					
ANR	6268002	Identifier	blk		6267326	1					
ANR	6268003	IfStatement	if ( s -> lfe_on )		6267326	1					
ANR	6268004	Condition	s -> lfe_on	173:12:3158:3166	6267326	0	True				
ANR	6268005	PtrMemberAccess	s -> lfe_on		6267326	0					
ANR	6268006	Identifier	s		6267326	0					
ANR	6268007	Identifier	lfe_on		6267326	1					
ANR	6268008	ExpressionStatement	"put_bits ( & s -> pb , 1 , s -> exp_strategy [ s -> lfe_channel ] [ blk ] )"	175:12:3182:3239	6267326	1	True				
ANR	6268009	CallExpression	"put_bits ( & s -> pb , 1 , s -> exp_strategy [ s -> lfe_channel ] [ blk ] )"		6267326	0					
ANR	6268010	Callee	put_bits		6267326	0					
ANR	6268011	Identifier	put_bits		6267326	0					
ANR	6268012	ArgumentList	& s -> pb		6267326	1					
ANR	6268013	Argument	& s -> pb		6267326	0					
ANR	6268014	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268015	UnaryOperator	&		6267326	0					
ANR	6268016	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268017	Identifier	s		6267326	0					
ANR	6268018	Identifier	pb		6267326	1					
ANR	6268019	Argument	1		6267326	1					
ANR	6268020	PrimaryExpression	1		6267326	0					
ANR	6268021	Argument	s -> exp_strategy [ s -> lfe_channel ] [ blk ]		6267326	2					
ANR	6268022	ArrayIndexing	s -> exp_strategy [ s -> lfe_channel ] [ blk ]		6267326	0					
ANR	6268023	ArrayIndexing	s -> exp_strategy [ s -> lfe_channel ]		6267326	0					
ANR	6268024	PtrMemberAccess	s -> exp_strategy		6267326	0					
ANR	6268025	Identifier	s		6267326	0					
ANR	6268026	Identifier	exp_strategy		6267326	1					
ANR	6268027	PtrMemberAccess	s -> lfe_channel		6267326	1					
ANR	6268028	Identifier	s		6267326	0					
ANR	6268029	Identifier	lfe_channel		6267326	1					
ANR	6268030	Identifier	blk		6267326	1					
ANR	6268031	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		6267326	11					
ANR	6268032	ForInit	ch = 1 ;	183:9:3281:3287	6267326	0	True				
ANR	6268033	AssignmentExpression	ch = 1		6267326	0		=			
ANR	6268034	Identifier	ch		6267326	0					
ANR	6268035	PrimaryExpression	1		6267326	1					
ANR	6268036	Condition	ch <= s -> fbw_channels	183:17:3289:3309	6267326	1	True				
ANR	6268037	RelationalExpression	ch <= s -> fbw_channels		6267326	0		<=			
ANR	6268038	Identifier	ch		6267326	0					
ANR	6268039	PtrMemberAccess	s -> fbw_channels		6267326	1					
ANR	6268040	Identifier	s		6267326	0					
ANR	6268041	Identifier	fbw_channels		6267326	1					
ANR	6268042	PostIncDecOperationExpression	ch ++	183:40:3312:3315	6267326	2	True				
ANR	6268043	Identifier	ch		6267326	0					
ANR	6268044	IncDec	++		6267326	1					
ANR	6268045	CompoundStatement		181:46:3255:3255	6267326	3					
ANR	6268046	IfStatement	if ( s -> exp_strategy [ ch ] [ blk ] != EXP_REUSE && ! block -> channel_in_cpl [ ch ] )		6267326	0					
ANR	6268047	Condition	s -> exp_strategy [ ch ] [ blk ] != EXP_REUSE && ! block -> channel_in_cpl [ ch ]	185:12:3333:3399	6267326	0	True				
ANR	6268048	AndExpression	s -> exp_strategy [ ch ] [ blk ] != EXP_REUSE && ! block -> channel_in_cpl [ ch ]		6267326	0		&&			
ANR	6268049	EqualityExpression	s -> exp_strategy [ ch ] [ blk ] != EXP_REUSE		6267326	0		!=			
ANR	6268050	ArrayIndexing	s -> exp_strategy [ ch ] [ blk ]		6267326	0					
ANR	6268051	ArrayIndexing	s -> exp_strategy [ ch ]		6267326	0					
ANR	6268052	PtrMemberAccess	s -> exp_strategy		6267326	0					
ANR	6268053	Identifier	s		6267326	0					
ANR	6268054	Identifier	exp_strategy		6267326	1					
ANR	6268055	Identifier	ch		6267326	1					
ANR	6268056	Identifier	blk		6267326	1					
ANR	6268057	Identifier	EXP_REUSE		6267326	1					
ANR	6268058	UnaryOperationExpression	! block -> channel_in_cpl [ ch ]		6267326	1					
ANR	6268059	UnaryOperator	!		6267326	0					
ANR	6268060	ArrayIndexing	block -> channel_in_cpl [ ch ]		6267326	1					
ANR	6268061	PtrMemberAccess	block -> channel_in_cpl		6267326	0					
ANR	6268062	Identifier	block		6267326	0					
ANR	6268063	Identifier	channel_in_cpl		6267326	1					
ANR	6268064	Identifier	ch		6267326	1					
ANR	6268065	ExpressionStatement	"put_bits ( & s -> pb , 6 , s -> bandwidth_code )"	187:12:3415:3453	6267326	1	True				
ANR	6268066	CallExpression	"put_bits ( & s -> pb , 6 , s -> bandwidth_code )"		6267326	0					
ANR	6268067	Callee	put_bits		6267326	0					
ANR	6268068	Identifier	put_bits		6267326	0					
ANR	6268069	ArgumentList	& s -> pb		6267326	1					
ANR	6268070	Argument	& s -> pb		6267326	0					
ANR	6268071	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268072	UnaryOperator	&		6267326	0					
ANR	6268073	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268074	Identifier	s		6267326	0					
ANR	6268075	Identifier	pb		6267326	1					
ANR	6268076	Argument	6		6267326	1					
ANR	6268077	PrimaryExpression	6		6267326	0					
ANR	6268078	Argument	s -> bandwidth_code		6267326	2					
ANR	6268079	PtrMemberAccess	s -> bandwidth_code		6267326	0					
ANR	6268080	Identifier	s		6267326	0					
ANR	6268081	Identifier	bandwidth_code		6267326	1					
ANR	6268082	ForStatement	for ( ch = ! block -> cpl_in_use ; ch <= s -> channels ; ch ++ )		6267326	12					
ANR	6268083	ForInit	ch = ! block -> cpl_in_use ;	195:9:3495:3518	6267326	0	True				
ANR	6268084	AssignmentExpression	ch = ! block -> cpl_in_use		6267326	0		=			
ANR	6268085	Identifier	ch		6267326	0					
ANR	6268086	UnaryOperationExpression	! block -> cpl_in_use		6267326	1					
ANR	6268087	UnaryOperator	!		6267326	0					
ANR	6268088	PtrMemberAccess	block -> cpl_in_use		6267326	1					
ANR	6268089	Identifier	block		6267326	0					
ANR	6268090	Identifier	cpl_in_use		6267326	1					
ANR	6268091	Condition	ch <= s -> channels	195:34:3520:3536	6267326	1	True				
ANR	6268092	RelationalExpression	ch <= s -> channels		6267326	0		<=			
ANR	6268093	Identifier	ch		6267326	0					
ANR	6268094	PtrMemberAccess	s -> channels		6267326	1					
ANR	6268095	Identifier	s		6267326	0					
ANR	6268096	Identifier	channels		6267326	1					
ANR	6268097	PostIncDecOperationExpression	ch ++	195:53:3539:3542	6267326	2	True				
ANR	6268098	Identifier	ch		6267326	0					
ANR	6268099	IncDec	++		6267326	1					
ANR	6268100	CompoundStatement		197:8:3517:3541	6267326	3					
ANR	6268101	IdentifierDeclStatement	int nb_groups ;	197:8:3556:3569	6267326	0	True				
ANR	6268102	IdentifierDecl	nb_groups		6267326	0					
ANR	6268103	IdentifierDeclType	int		6267326	0					
ANR	6268104	Identifier	nb_groups		6267326	1					
ANR	6268105	IdentifierDeclStatement	int cpl = ( ch == CPL_CH ) ;	199:8:3580:3604	6267326	1	True				
ANR	6268106	IdentifierDecl	cpl = ( ch == CPL_CH )		6267326	0					
ANR	6268107	IdentifierDeclType	int		6267326	0					
ANR	6268108	Identifier	cpl		6267326	1					
ANR	6268109	AssignmentExpression	cpl = ( ch == CPL_CH )		6267326	2		=			
ANR	6268110	Identifier	cpl		6267326	0					
ANR	6268111	EqualityExpression	ch == CPL_CH		6267326	1		==			
ANR	6268112	Identifier	ch		6267326	0					
ANR	6268113	Identifier	CPL_CH		6267326	1					
ANR	6268114	IfStatement	if ( s -> exp_strategy [ ch ] [ blk ] == EXP_REUSE )		6267326	2					
ANR	6268115	Condition	s -> exp_strategy [ ch ] [ blk ] == EXP_REUSE	203:12:3621:3657	6267326	0	True				
ANR	6268116	EqualityExpression	s -> exp_strategy [ ch ] [ blk ] == EXP_REUSE		6267326	0		==			
ANR	6268117	ArrayIndexing	s -> exp_strategy [ ch ] [ blk ]		6267326	0					
ANR	6268118	ArrayIndexing	s -> exp_strategy [ ch ]		6267326	0					
ANR	6268119	PtrMemberAccess	s -> exp_strategy		6267326	0					
ANR	6268120	Identifier	s		6267326	0					
ANR	6268121	Identifier	exp_strategy		6267326	1					
ANR	6268122	Identifier	ch		6267326	1					
ANR	6268123	Identifier	blk		6267326	1					
ANR	6268124	Identifier	EXP_REUSE		6267326	1					
ANR	6268125	ContinueStatement	continue ;	205:12:3673:3681	6267326	1	True				
ANR	6268126	ExpressionStatement	"put_bits ( & s -> pb , 4 , block -> grouped_exp [ ch ] [ 0 ] >> cpl )"	211:8:3721:3774	6267326	3	True				
ANR	6268127	CallExpression	"put_bits ( & s -> pb , 4 , block -> grouped_exp [ ch ] [ 0 ] >> cpl )"		6267326	0					
ANR	6268128	Callee	put_bits		6267326	0					
ANR	6268129	Identifier	put_bits		6267326	0					
ANR	6268130	ArgumentList	& s -> pb		6267326	1					
ANR	6268131	Argument	& s -> pb		6267326	0					
ANR	6268132	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268133	UnaryOperator	&		6267326	0					
ANR	6268134	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268135	Identifier	s		6267326	0					
ANR	6268136	Identifier	pb		6267326	1					
ANR	6268137	Argument	4		6267326	1					
ANR	6268138	PrimaryExpression	4		6267326	0					
ANR	6268139	Argument	block -> grouped_exp [ ch ] [ 0 ] >> cpl		6267326	2					
ANR	6268140	ShiftExpression	block -> grouped_exp [ ch ] [ 0 ] >> cpl		6267326	0		>>			
ANR	6268141	ArrayIndexing	block -> grouped_exp [ ch ] [ 0 ]		6267326	0					
ANR	6268142	ArrayIndexing	block -> grouped_exp [ ch ]		6267326	0					
ANR	6268143	PtrMemberAccess	block -> grouped_exp		6267326	0					
ANR	6268144	Identifier	block		6267326	0					
ANR	6268145	Identifier	grouped_exp		6267326	1					
ANR	6268146	Identifier	ch		6267326	1					
ANR	6268147	PrimaryExpression	0		6267326	1					
ANR	6268148	Identifier	cpl		6267326	1					
ANR	6268149	ExpressionStatement	nb_groups = exponent_group_tab [ cpl ] [ s -> exp_strategy [ ch ] [ blk ] - 1 ] [ block -> end_freq [ ch ] - s -> start_freq [ ch ] ]	217:8:3818:3920	6267326	4	True				
ANR	6268150	AssignmentExpression	nb_groups = exponent_group_tab [ cpl ] [ s -> exp_strategy [ ch ] [ blk ] - 1 ] [ block -> end_freq [ ch ] - s -> start_freq [ ch ] ]		6267326	0		=			
ANR	6268151	Identifier	nb_groups		6267326	0					
ANR	6268152	ArrayIndexing	exponent_group_tab [ cpl ] [ s -> exp_strategy [ ch ] [ blk ] - 1 ] [ block -> end_freq [ ch ] - s -> start_freq [ ch ] ]		6267326	1					
ANR	6268153	ArrayIndexing	exponent_group_tab [ cpl ] [ s -> exp_strategy [ ch ] [ blk ] - 1 ]		6267326	0					
ANR	6268154	ArrayIndexing	exponent_group_tab [ cpl ]		6267326	0					
ANR	6268155	Identifier	exponent_group_tab		6267326	0					
ANR	6268156	Identifier	cpl		6267326	1					
ANR	6268157	AdditiveExpression	s -> exp_strategy [ ch ] [ blk ] - 1		6267326	1		-			
ANR	6268158	ArrayIndexing	s -> exp_strategy [ ch ] [ blk ]		6267326	0					
ANR	6268159	ArrayIndexing	s -> exp_strategy [ ch ]		6267326	0					
ANR	6268160	PtrMemberAccess	s -> exp_strategy		6267326	0					
ANR	6268161	Identifier	s		6267326	0					
ANR	6268162	Identifier	exp_strategy		6267326	1					
ANR	6268163	Identifier	ch		6267326	1					
ANR	6268164	Identifier	blk		6267326	1					
ANR	6268165	PrimaryExpression	1		6267326	1					
ANR	6268166	AdditiveExpression	block -> end_freq [ ch ] - s -> start_freq [ ch ]		6267326	1		-			
ANR	6268167	ArrayIndexing	block -> end_freq [ ch ]		6267326	0					
ANR	6268168	PtrMemberAccess	block -> end_freq		6267326	0					
ANR	6268169	Identifier	block		6267326	0					
ANR	6268170	Identifier	end_freq		6267326	1					
ANR	6268171	Identifier	ch		6267326	1					
ANR	6268172	ArrayIndexing	s -> start_freq [ ch ]		6267326	1					
ANR	6268173	PtrMemberAccess	s -> start_freq		6267326	0					
ANR	6268174	Identifier	s		6267326	0					
ANR	6268175	Identifier	start_freq		6267326	1					
ANR	6268176	Identifier	ch		6267326	1					
ANR	6268177	ForStatement	for ( i = 1 ; i <= nb_groups ; i ++ )		6267326	5					
ANR	6268178	ForInit	i = 1 ;	219:13:3936:3941	6267326	0	True				
ANR	6268179	AssignmentExpression	i = 1		6267326	0		=			
ANR	6268180	Identifier	i		6267326	0					
ANR	6268181	PrimaryExpression	1		6267326	1					
ANR	6268182	Condition	i <= nb_groups	219:20:3943:3956	6267326	1	True				
ANR	6268183	RelationalExpression	i <= nb_groups		6267326	0		<=			
ANR	6268184	Identifier	i		6267326	0					
ANR	6268185	Identifier	nb_groups		6267326	1					
ANR	6268186	PostIncDecOperationExpression	i ++	219:36:3959:3961	6267326	2	True				
ANR	6268187	Identifier	i		6267326	0					
ANR	6268188	IncDec	++		6267326	1					
ANR	6268189	ExpressionStatement	"put_bits ( & s -> pb , 7 , block -> grouped_exp [ ch ] [ i ] )"	221:12:3977:4023	6267326	3	True				
ANR	6268190	CallExpression	"put_bits ( & s -> pb , 7 , block -> grouped_exp [ ch ] [ i ] )"		6267326	0					
ANR	6268191	Callee	put_bits		6267326	0					
ANR	6268192	Identifier	put_bits		6267326	0					
ANR	6268193	ArgumentList	& s -> pb		6267326	1					
ANR	6268194	Argument	& s -> pb		6267326	0					
ANR	6268195	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268196	UnaryOperator	&		6267326	0					
ANR	6268197	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268198	Identifier	s		6267326	0					
ANR	6268199	Identifier	pb		6267326	1					
ANR	6268200	Argument	7		6267326	1					
ANR	6268201	PrimaryExpression	7		6267326	0					
ANR	6268202	Argument	block -> grouped_exp [ ch ] [ i ]		6267326	2					
ANR	6268203	ArrayIndexing	block -> grouped_exp [ ch ] [ i ]		6267326	0					
ANR	6268204	ArrayIndexing	block -> grouped_exp [ ch ]		6267326	0					
ANR	6268205	PtrMemberAccess	block -> grouped_exp		6267326	0					
ANR	6268206	Identifier	block		6267326	0					
ANR	6268207	Identifier	grouped_exp		6267326	1					
ANR	6268208	Identifier	ch		6267326	1					
ANR	6268209	Identifier	i		6267326	1					
ANR	6268210	IfStatement	if ( ch != s -> lfe_channel && ! cpl )		6267326	6					
ANR	6268211	Condition	ch != s -> lfe_channel && ! cpl	227:12:4071:4098	6267326	0	True				
ANR	6268212	AndExpression	ch != s -> lfe_channel && ! cpl		6267326	0		&&			
ANR	6268213	EqualityExpression	ch != s -> lfe_channel		6267326	0		!=			
ANR	6268214	Identifier	ch		6267326	0					
ANR	6268215	PtrMemberAccess	s -> lfe_channel		6267326	1					
ANR	6268216	Identifier	s		6267326	0					
ANR	6268217	Identifier	lfe_channel		6267326	1					
ANR	6268218	UnaryOperationExpression	! cpl		6267326	1					
ANR	6268219	UnaryOperator	!		6267326	0					
ANR	6268220	Identifier	cpl		6267326	1					
ANR	6268221	ExpressionStatement	"put_bits ( & s -> pb , 2 , 0 )"	229:12:4114:4136	6267326	1	True				
ANR	6268222	CallExpression	"put_bits ( & s -> pb , 2 , 0 )"		6267326	0					
ANR	6268223	Callee	put_bits		6267326	0					
ANR	6268224	Identifier	put_bits		6267326	0					
ANR	6268225	ArgumentList	& s -> pb		6267326	1					
ANR	6268226	Argument	& s -> pb		6267326	0					
ANR	6268227	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268228	UnaryOperator	&		6267326	0					
ANR	6268229	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268230	Identifier	s		6267326	0					
ANR	6268231	Identifier	pb		6267326	1					
ANR	6268232	Argument	2		6267326	1					
ANR	6268233	PrimaryExpression	2		6267326	0					
ANR	6268234	Argument	0		6267326	2					
ANR	6268235	PrimaryExpression	0		6267326	0					
ANR	6268236	IfStatement	if ( ! s -> eac3 )		6267326	13					
ANR	6268237	Condition	! s -> eac3	237:8:4187:4194	6267326	0	True				
ANR	6268238	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6268239	UnaryOperator	!		6267326	0					
ANR	6268240	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6268241	Identifier	s		6267326	0					
ANR	6268242	Identifier	eac3		6267326	1					
ANR	6268243	CompoundStatement		235:18:4134:4134	6267326	1					
ANR	6268244	ExpressionStatement	baie = ( blk == 0 )	239:8:4208:4225	6267326	0	True				
ANR	6268245	AssignmentExpression	baie = ( blk == 0 )		6267326	0		=			
ANR	6268246	Identifier	baie		6267326	0					
ANR	6268247	EqualityExpression	blk == 0		6267326	1		==			
ANR	6268248	Identifier	blk		6267326	0					
ANR	6268249	PrimaryExpression	0		6267326	1					
ANR	6268250	ExpressionStatement	"put_bits ( & s -> pb , 1 , baie )"	241:8:4236:4261	6267326	1	True				
ANR	6268251	CallExpression	"put_bits ( & s -> pb , 1 , baie )"		6267326	0					
ANR	6268252	Callee	put_bits		6267326	0					
ANR	6268253	Identifier	put_bits		6267326	0					
ANR	6268254	ArgumentList	& s -> pb		6267326	1					
ANR	6268255	Argument	& s -> pb		6267326	0					
ANR	6268256	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268257	UnaryOperator	&		6267326	0					
ANR	6268258	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268259	Identifier	s		6267326	0					
ANR	6268260	Identifier	pb		6267326	1					
ANR	6268261	Argument	1		6267326	1					
ANR	6268262	PrimaryExpression	1		6267326	0					
ANR	6268263	Argument	baie		6267326	2					
ANR	6268264	Identifier	baie		6267326	0					
ANR	6268265	IfStatement	if ( baie )		6267326	2					
ANR	6268266	Condition	baie	243:12:4276:4279	6267326	0	True				
ANR	6268267	Identifier	baie		6267326	0					
ANR	6268268	CompoundStatement		241:18:4219:4219	6267326	1					
ANR	6268269	ExpressionStatement	"put_bits ( & s -> pb , 2 , s -> slow_decay_code )"	245:12:4297:4336	6267326	0	True				
ANR	6268270	CallExpression	"put_bits ( & s -> pb , 2 , s -> slow_decay_code )"		6267326	0					
ANR	6268271	Callee	put_bits		6267326	0					
ANR	6268272	Identifier	put_bits		6267326	0					
ANR	6268273	ArgumentList	& s -> pb		6267326	1					
ANR	6268274	Argument	& s -> pb		6267326	0					
ANR	6268275	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268276	UnaryOperator	&		6267326	0					
ANR	6268277	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268278	Identifier	s		6267326	0					
ANR	6268279	Identifier	pb		6267326	1					
ANR	6268280	Argument	2		6267326	1					
ANR	6268281	PrimaryExpression	2		6267326	0					
ANR	6268282	Argument	s -> slow_decay_code		6267326	2					
ANR	6268283	PtrMemberAccess	s -> slow_decay_code		6267326	0					
ANR	6268284	Identifier	s		6267326	0					
ANR	6268285	Identifier	slow_decay_code		6267326	1					
ANR	6268286	ExpressionStatement	"put_bits ( & s -> pb , 2 , s -> fast_decay_code )"	247:12:4351:4390	6267326	1	True				
ANR	6268287	CallExpression	"put_bits ( & s -> pb , 2 , s -> fast_decay_code )"		6267326	0					
ANR	6268288	Callee	put_bits		6267326	0					
ANR	6268289	Identifier	put_bits		6267326	0					
ANR	6268290	ArgumentList	& s -> pb		6267326	1					
ANR	6268291	Argument	& s -> pb		6267326	0					
ANR	6268292	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268293	UnaryOperator	&		6267326	0					
ANR	6268294	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268295	Identifier	s		6267326	0					
ANR	6268296	Identifier	pb		6267326	1					
ANR	6268297	Argument	2		6267326	1					
ANR	6268298	PrimaryExpression	2		6267326	0					
ANR	6268299	Argument	s -> fast_decay_code		6267326	2					
ANR	6268300	PtrMemberAccess	s -> fast_decay_code		6267326	0					
ANR	6268301	Identifier	s		6267326	0					
ANR	6268302	Identifier	fast_decay_code		6267326	1					
ANR	6268303	ExpressionStatement	"put_bits ( & s -> pb , 2 , s -> slow_gain_code )"	249:12:4405:4443	6267326	2	True				
ANR	6268304	CallExpression	"put_bits ( & s -> pb , 2 , s -> slow_gain_code )"		6267326	0					
ANR	6268305	Callee	put_bits		6267326	0					
ANR	6268306	Identifier	put_bits		6267326	0					
ANR	6268307	ArgumentList	& s -> pb		6267326	1					
ANR	6268308	Argument	& s -> pb		6267326	0					
ANR	6268309	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268310	UnaryOperator	&		6267326	0					
ANR	6268311	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268312	Identifier	s		6267326	0					
ANR	6268313	Identifier	pb		6267326	1					
ANR	6268314	Argument	2		6267326	1					
ANR	6268315	PrimaryExpression	2		6267326	0					
ANR	6268316	Argument	s -> slow_gain_code		6267326	2					
ANR	6268317	PtrMemberAccess	s -> slow_gain_code		6267326	0					
ANR	6268318	Identifier	s		6267326	0					
ANR	6268319	Identifier	slow_gain_code		6267326	1					
ANR	6268320	ExpressionStatement	"put_bits ( & s -> pb , 2 , s -> db_per_bit_code )"	251:12:4458:4497	6267326	3	True				
ANR	6268321	CallExpression	"put_bits ( & s -> pb , 2 , s -> db_per_bit_code )"		6267326	0					
ANR	6268322	Callee	put_bits		6267326	0					
ANR	6268323	Identifier	put_bits		6267326	0					
ANR	6268324	ArgumentList	& s -> pb		6267326	1					
ANR	6268325	Argument	& s -> pb		6267326	0					
ANR	6268326	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268327	UnaryOperator	&		6267326	0					
ANR	6268328	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268329	Identifier	s		6267326	0					
ANR	6268330	Identifier	pb		6267326	1					
ANR	6268331	Argument	2		6267326	1					
ANR	6268332	PrimaryExpression	2		6267326	0					
ANR	6268333	Argument	s -> db_per_bit_code		6267326	2					
ANR	6268334	PtrMemberAccess	s -> db_per_bit_code		6267326	0					
ANR	6268335	Identifier	s		6267326	0					
ANR	6268336	Identifier	db_per_bit_code		6267326	1					
ANR	6268337	ExpressionStatement	"put_bits ( & s -> pb , 3 , s -> floor_code )"	253:12:4512:4546	6267326	4	True				
ANR	6268338	CallExpression	"put_bits ( & s -> pb , 3 , s -> floor_code )"		6267326	0					
ANR	6268339	Callee	put_bits		6267326	0					
ANR	6268340	Identifier	put_bits		6267326	0					
ANR	6268341	ArgumentList	& s -> pb		6267326	1					
ANR	6268342	Argument	& s -> pb		6267326	0					
ANR	6268343	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268344	UnaryOperator	&		6267326	0					
ANR	6268345	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268346	Identifier	s		6267326	0					
ANR	6268347	Identifier	pb		6267326	1					
ANR	6268348	Argument	3		6267326	1					
ANR	6268349	PrimaryExpression	3		6267326	0					
ANR	6268350	Argument	s -> floor_code		6267326	2					
ANR	6268351	PtrMemberAccess	s -> floor_code		6267326	0					
ANR	6268352	Identifier	s		6267326	0					
ANR	6268353	Identifier	floor_code		6267326	1					
ANR	6268354	IfStatement	if ( ! s -> eac3 )		6267326	14					
ANR	6268355	Condition	! s -> eac3	263:8:4599:4606	6267326	0	True				
ANR	6268356	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6268357	UnaryOperator	!		6267326	0					
ANR	6268358	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6268359	Identifier	s		6267326	0					
ANR	6268360	Identifier	eac3		6267326	1					
ANR	6268361	CompoundStatement		261:18:4546:4546	6267326	1					
ANR	6268362	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> new_snr_offsets )"	265:8:4620:4663	6267326	0	True				
ANR	6268363	CallExpression	"put_bits ( & s -> pb , 1 , block -> new_snr_offsets )"		6267326	0					
ANR	6268364	Callee	put_bits		6267326	0					
ANR	6268365	Identifier	put_bits		6267326	0					
ANR	6268366	ArgumentList	& s -> pb		6267326	1					
ANR	6268367	Argument	& s -> pb		6267326	0					
ANR	6268368	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268369	UnaryOperator	&		6267326	0					
ANR	6268370	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268371	Identifier	s		6267326	0					
ANR	6268372	Identifier	pb		6267326	1					
ANR	6268373	Argument	1		6267326	1					
ANR	6268374	PrimaryExpression	1		6267326	0					
ANR	6268375	Argument	block -> new_snr_offsets		6267326	2					
ANR	6268376	PtrMemberAccess	block -> new_snr_offsets		6267326	0					
ANR	6268377	Identifier	block		6267326	0					
ANR	6268378	Identifier	new_snr_offsets		6267326	1					
ANR	6268379	IfStatement	if ( block -> new_snr_offsets )		6267326	1					
ANR	6268380	Condition	block -> new_snr_offsets	267:12:4678:4699	6267326	0	True				
ANR	6268381	PtrMemberAccess	block -> new_snr_offsets		6267326	0					
ANR	6268382	Identifier	block		6267326	0					
ANR	6268383	Identifier	new_snr_offsets		6267326	1					
ANR	6268384	CompoundStatement		265:36:4639:4639	6267326	1					
ANR	6268385	ExpressionStatement	"put_bits ( & s -> pb , 6 , s -> coarse_snr_offset )"	269:12:4717:4758	6267326	0	True				
ANR	6268386	CallExpression	"put_bits ( & s -> pb , 6 , s -> coarse_snr_offset )"		6267326	0					
ANR	6268387	Callee	put_bits		6267326	0					
ANR	6268388	Identifier	put_bits		6267326	0					
ANR	6268389	ArgumentList	& s -> pb		6267326	1					
ANR	6268390	Argument	& s -> pb		6267326	0					
ANR	6268391	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268392	UnaryOperator	&		6267326	0					
ANR	6268393	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268394	Identifier	s		6267326	0					
ANR	6268395	Identifier	pb		6267326	1					
ANR	6268396	Argument	6		6267326	1					
ANR	6268397	PrimaryExpression	6		6267326	0					
ANR	6268398	Argument	s -> coarse_snr_offset		6267326	2					
ANR	6268399	PtrMemberAccess	s -> coarse_snr_offset		6267326	0					
ANR	6268400	Identifier	s		6267326	0					
ANR	6268401	Identifier	coarse_snr_offset		6267326	1					
ANR	6268402	ForStatement	for ( ch = ! block -> cpl_in_use ; ch <= s -> channels ; ch ++ )		6267326	1					
ANR	6268403	ForInit	ch = ! block -> cpl_in_use ;	271:17:4778:4801	6267326	0	True				
ANR	6268404	AssignmentExpression	ch = ! block -> cpl_in_use		6267326	0		=			
ANR	6268405	Identifier	ch		6267326	0					
ANR	6268406	UnaryOperationExpression	! block -> cpl_in_use		6267326	1					
ANR	6268407	UnaryOperator	!		6267326	0					
ANR	6268408	PtrMemberAccess	block -> cpl_in_use		6267326	1					
ANR	6268409	Identifier	block		6267326	0					
ANR	6268410	Identifier	cpl_in_use		6267326	1					
ANR	6268411	Condition	ch <= s -> channels	271:42:4803:4819	6267326	1	True				
ANR	6268412	RelationalExpression	ch <= s -> channels		6267326	0		<=			
ANR	6268413	Identifier	ch		6267326	0					
ANR	6268414	PtrMemberAccess	s -> channels		6267326	1					
ANR	6268415	Identifier	s		6267326	0					
ANR	6268416	Identifier	channels		6267326	1					
ANR	6268417	PostIncDecOperationExpression	ch ++	271:61:4822:4825	6267326	2	True				
ANR	6268418	Identifier	ch		6267326	0					
ANR	6268419	IncDec	++		6267326	1					
ANR	6268420	CompoundStatement		269:67:4765:4765	6267326	3					
ANR	6268421	ExpressionStatement	"put_bits ( & s -> pb , 4 , s -> fine_snr_offset [ ch ] )"	273:16:4847:4890	6267326	0	True				
ANR	6268422	CallExpression	"put_bits ( & s -> pb , 4 , s -> fine_snr_offset [ ch ] )"		6267326	0					
ANR	6268423	Callee	put_bits		6267326	0					
ANR	6268424	Identifier	put_bits		6267326	0					
ANR	6268425	ArgumentList	& s -> pb		6267326	1					
ANR	6268426	Argument	& s -> pb		6267326	0					
ANR	6268427	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268428	UnaryOperator	&		6267326	0					
ANR	6268429	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268430	Identifier	s		6267326	0					
ANR	6268431	Identifier	pb		6267326	1					
ANR	6268432	Argument	4		6267326	1					
ANR	6268433	PrimaryExpression	4		6267326	0					
ANR	6268434	Argument	s -> fine_snr_offset [ ch ]		6267326	2					
ANR	6268435	ArrayIndexing	s -> fine_snr_offset [ ch ]		6267326	0					
ANR	6268436	PtrMemberAccess	s -> fine_snr_offset		6267326	0					
ANR	6268437	Identifier	s		6267326	0					
ANR	6268438	Identifier	fine_snr_offset		6267326	1					
ANR	6268439	Identifier	ch		6267326	1					
ANR	6268440	ExpressionStatement	"put_bits ( & s -> pb , 3 , s -> fast_gain_code [ ch ] )"	275:16:4909:4951	6267326	1	True				
ANR	6268441	CallExpression	"put_bits ( & s -> pb , 3 , s -> fast_gain_code [ ch ] )"		6267326	0					
ANR	6268442	Callee	put_bits		6267326	0					
ANR	6268443	Identifier	put_bits		6267326	0					
ANR	6268444	ArgumentList	& s -> pb		6267326	1					
ANR	6268445	Argument	& s -> pb		6267326	0					
ANR	6268446	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268447	UnaryOperator	&		6267326	0					
ANR	6268448	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268449	Identifier	s		6267326	0					
ANR	6268450	Identifier	pb		6267326	1					
ANR	6268451	Argument	3		6267326	1					
ANR	6268452	PrimaryExpression	3		6267326	0					
ANR	6268453	Argument	s -> fast_gain_code [ ch ]		6267326	2					
ANR	6268454	ArrayIndexing	s -> fast_gain_code [ ch ]		6267326	0					
ANR	6268455	PtrMemberAccess	s -> fast_gain_code		6267326	0					
ANR	6268456	Identifier	s		6267326	0					
ANR	6268457	Identifier	fast_gain_code		6267326	1					
ANR	6268458	Identifier	ch		6267326	1					
ANR	6268459	ElseStatement	else		6267326	0					
ANR	6268460	CompoundStatement		279:11:4928:4928	6267326	0					
ANR	6268461	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	283:8:5002:5024	6267326	0	True				
ANR	6268462	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6268463	Callee	put_bits		6267326	0					
ANR	6268464	Identifier	put_bits		6267326	0					
ANR	6268465	ArgumentList	& s -> pb		6267326	1					
ANR	6268466	Argument	& s -> pb		6267326	0					
ANR	6268467	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268468	UnaryOperator	&		6267326	0					
ANR	6268469	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268470	Identifier	s		6267326	0					
ANR	6268471	Identifier	pb		6267326	1					
ANR	6268472	Argument	1		6267326	1					
ANR	6268473	PrimaryExpression	1		6267326	0					
ANR	6268474	Argument	0		6267326	2					
ANR	6268475	PrimaryExpression	0		6267326	0					
ANR	6268476	IfStatement	if ( block -> cpl_in_use )		6267326	15					
ANR	6268477	Condition	block -> cpl_in_use	291:8:5099:5115	6267326	0	True				
ANR	6268478	PtrMemberAccess	block -> cpl_in_use		6267326	0					
ANR	6268479	Identifier	block		6267326	0					
ANR	6268480	Identifier	cpl_in_use		6267326	1					
ANR	6268481	CompoundStatement		289:27:5055:5055	6267326	1					
ANR	6268482	IfStatement	if ( ! s -> eac3 || block -> new_cpl_leak != 2 )		6267326	0					
ANR	6268483	Condition	! s -> eac3 || block -> new_cpl_leak != 2	293:12:5133:5168	6267326	0	True				
ANR	6268484	OrExpression	! s -> eac3 || block -> new_cpl_leak != 2		6267326	0		||			
ANR	6268485	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6268486	UnaryOperator	!		6267326	0					
ANR	6268487	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6268488	Identifier	s		6267326	0					
ANR	6268489	Identifier	eac3		6267326	1					
ANR	6268490	EqualityExpression	block -> new_cpl_leak != 2		6267326	1		!=			
ANR	6268491	PtrMemberAccess	block -> new_cpl_leak		6267326	0					
ANR	6268492	Identifier	block		6267326	0					
ANR	6268493	Identifier	new_cpl_leak		6267326	1					
ANR	6268494	PrimaryExpression	2		6267326	1					
ANR	6268495	ExpressionStatement	"put_bits ( & s -> pb , 1 , block -> new_cpl_leak )"	295:12:5184:5224	6267326	1	True				
ANR	6268496	CallExpression	"put_bits ( & s -> pb , 1 , block -> new_cpl_leak )"		6267326	0					
ANR	6268497	Callee	put_bits		6267326	0					
ANR	6268498	Identifier	put_bits		6267326	0					
ANR	6268499	ArgumentList	& s -> pb		6267326	1					
ANR	6268500	Argument	& s -> pb		6267326	0					
ANR	6268501	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268502	UnaryOperator	&		6267326	0					
ANR	6268503	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268504	Identifier	s		6267326	0					
ANR	6268505	Identifier	pb		6267326	1					
ANR	6268506	Argument	1		6267326	1					
ANR	6268507	PrimaryExpression	1		6267326	0					
ANR	6268508	Argument	block -> new_cpl_leak		6267326	2					
ANR	6268509	PtrMemberAccess	block -> new_cpl_leak		6267326	0					
ANR	6268510	Identifier	block		6267326	0					
ANR	6268511	Identifier	new_cpl_leak		6267326	1					
ANR	6268512	IfStatement	if ( block -> new_cpl_leak )		6267326	1					
ANR	6268513	Condition	block -> new_cpl_leak	297:12:5239:5257	6267326	0	True				
ANR	6268514	PtrMemberAccess	block -> new_cpl_leak		6267326	0					
ANR	6268515	Identifier	block		6267326	0					
ANR	6268516	Identifier	new_cpl_leak		6267326	1					
ANR	6268517	CompoundStatement		295:33:5197:5197	6267326	1					
ANR	6268518	ExpressionStatement	"put_bits ( & s -> pb , 3 , s -> bit_alloc . cpl_fast_leak )"	299:12:5275:5322	6267326	0	True				
ANR	6268519	CallExpression	"put_bits ( & s -> pb , 3 , s -> bit_alloc . cpl_fast_leak )"		6267326	0					
ANR	6268520	Callee	put_bits		6267326	0					
ANR	6268521	Identifier	put_bits		6267326	0					
ANR	6268522	ArgumentList	& s -> pb		6267326	1					
ANR	6268523	Argument	& s -> pb		6267326	0					
ANR	6268524	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268525	UnaryOperator	&		6267326	0					
ANR	6268526	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268527	Identifier	s		6267326	0					
ANR	6268528	Identifier	pb		6267326	1					
ANR	6268529	Argument	3		6267326	1					
ANR	6268530	PrimaryExpression	3		6267326	0					
ANR	6268531	Argument	s -> bit_alloc . cpl_fast_leak		6267326	2					
ANR	6268532	MemberAccess	s -> bit_alloc . cpl_fast_leak		6267326	0					
ANR	6268533	PtrMemberAccess	s -> bit_alloc		6267326	0					
ANR	6268534	Identifier	s		6267326	0					
ANR	6268535	Identifier	bit_alloc		6267326	1					
ANR	6268536	Identifier	cpl_fast_leak		6267326	1					
ANR	6268537	ExpressionStatement	"put_bits ( & s -> pb , 3 , s -> bit_alloc . cpl_slow_leak )"	301:12:5337:5384	6267326	1	True				
ANR	6268538	CallExpression	"put_bits ( & s -> pb , 3 , s -> bit_alloc . cpl_slow_leak )"		6267326	0					
ANR	6268539	Callee	put_bits		6267326	0					
ANR	6268540	Identifier	put_bits		6267326	0					
ANR	6268541	ArgumentList	& s -> pb		6267326	1					
ANR	6268542	Argument	& s -> pb		6267326	0					
ANR	6268543	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268544	UnaryOperator	&		6267326	0					
ANR	6268545	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268546	Identifier	s		6267326	0					
ANR	6268547	Identifier	pb		6267326	1					
ANR	6268548	Argument	3		6267326	1					
ANR	6268549	PrimaryExpression	3		6267326	0					
ANR	6268550	Argument	s -> bit_alloc . cpl_slow_leak		6267326	2					
ANR	6268551	MemberAccess	s -> bit_alloc . cpl_slow_leak		6267326	0					
ANR	6268552	PtrMemberAccess	s -> bit_alloc		6267326	0					
ANR	6268553	Identifier	s		6267326	0					
ANR	6268554	Identifier	bit_alloc		6267326	1					
ANR	6268555	Identifier	cpl_slow_leak		6267326	1					
ANR	6268556	IfStatement	if ( ! s -> eac3 )		6267326	16					
ANR	6268557	Condition	! s -> eac3	309:8:5415:5422	6267326	0	True				
ANR	6268558	UnaryOperationExpression	! s -> eac3		6267326	0					
ANR	6268559	UnaryOperator	!		6267326	0					
ANR	6268560	PtrMemberAccess	s -> eac3		6267326	1					
ANR	6268561	Identifier	s		6267326	0					
ANR	6268562	Identifier	eac3		6267326	1					
ANR	6268563	CompoundStatement		307:18:5362:5362	6267326	1					
ANR	6268564	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	311:8:5436:5458	6267326	0	True				
ANR	6268565	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6268566	Callee	put_bits		6267326	0					
ANR	6268567	Identifier	put_bits		6267326	0					
ANR	6268568	ArgumentList	& s -> pb		6267326	1					
ANR	6268569	Argument	& s -> pb		6267326	0					
ANR	6268570	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268571	UnaryOperator	&		6267326	0					
ANR	6268572	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268573	Identifier	s		6267326	0					
ANR	6268574	Identifier	pb		6267326	1					
ANR	6268575	Argument	1		6267326	1					
ANR	6268576	PrimaryExpression	1		6267326	0					
ANR	6268577	Argument	0		6267326	2					
ANR	6268578	PrimaryExpression	0		6267326	0					
ANR	6268579	ExpressionStatement	"put_bits ( & s -> pb , 1 , 0 )"	313:8:5499:5521	6267326	1	True				
ANR	6268580	CallExpression	"put_bits ( & s -> pb , 1 , 0 )"		6267326	0					
ANR	6268581	Callee	put_bits		6267326	0					
ANR	6268582	Identifier	put_bits		6267326	0					
ANR	6268583	ArgumentList	& s -> pb		6267326	1					
ANR	6268584	Argument	& s -> pb		6267326	0					
ANR	6268585	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268586	UnaryOperator	&		6267326	0					
ANR	6268587	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268588	Identifier	s		6267326	0					
ANR	6268589	Identifier	pb		6267326	1					
ANR	6268590	Argument	1		6267326	1					
ANR	6268591	PrimaryExpression	1		6267326	0					
ANR	6268592	Argument	0		6267326	2					
ANR	6268593	PrimaryExpression	0		6267326	0					
ANR	6268594	ExpressionStatement	got_cpl = ! block -> cpl_in_use	321:4:5580:5608	6267326	17	True				
ANR	6268595	AssignmentExpression	got_cpl = ! block -> cpl_in_use		6267326	0		=			
ANR	6268596	Identifier	got_cpl		6267326	0					
ANR	6268597	UnaryOperationExpression	! block -> cpl_in_use		6267326	1					
ANR	6268598	UnaryOperator	!		6267326	0					
ANR	6268599	PtrMemberAccess	block -> cpl_in_use		6267326	1					
ANR	6268600	Identifier	block		6267326	0					
ANR	6268601	Identifier	cpl_in_use		6267326	1					
ANR	6268602	ForStatement	for ( ch = 1 ; ch <= s -> channels ; ch ++ )		6267326	18					
ANR	6268603	ForInit	ch = 1 ;	323:9:5620:5626	6267326	0	True				
ANR	6268604	AssignmentExpression	ch = 1		6267326	0		=			
ANR	6268605	Identifier	ch		6267326	0					
ANR	6268606	PrimaryExpression	1		6267326	1					
ANR	6268607	Condition	ch <= s -> channels	323:17:5628:5644	6267326	1	True				
ANR	6268608	RelationalExpression	ch <= s -> channels		6267326	0		<=			
ANR	6268609	Identifier	ch		6267326	0					
ANR	6268610	PtrMemberAccess	s -> channels		6267326	1					
ANR	6268611	Identifier	s		6267326	0					
ANR	6268612	Identifier	channels		6267326	1					
ANR	6268613	PostIncDecOperationExpression	ch ++	323:36:5647:5650	6267326	2	True				
ANR	6268614	Identifier	ch		6267326	0					
ANR	6268615	IncDec	++		6267326	1					
ANR	6268616	CompoundStatement		323:8:5601:5609	6267326	3					
ANR	6268617	IdentifierDeclStatement	"int b , q ;"	325:8:5664:5672	6267326	0	True				
ANR	6268618	IdentifierDecl	b		6267326	0					
ANR	6268619	IdentifierDeclType	int		6267326	0					
ANR	6268620	Identifier	b		6267326	1					
ANR	6268621	IdentifierDecl	q		6267326	1					
ANR	6268622	IdentifierDeclType	int		6267326	0					
ANR	6268623	Identifier	q		6267326	1					
ANR	6268624	IfStatement	if ( ! got_cpl && ch > 1 && block -> channel_in_cpl [ ch - 1 ] )		6267326	1					
ANR	6268625	Condition	! got_cpl && ch > 1 && block -> channel_in_cpl [ ch - 1 ]	329:12:5689:5737	6267326	0	True				
ANR	6268626	AndExpression	! got_cpl && ch > 1 && block -> channel_in_cpl [ ch - 1 ]		6267326	0		&&			
ANR	6268627	UnaryOperationExpression	! got_cpl		6267326	0					
ANR	6268628	UnaryOperator	!		6267326	0					
ANR	6268629	Identifier	got_cpl		6267326	1					
ANR	6268630	AndExpression	ch > 1 && block -> channel_in_cpl [ ch - 1 ]		6267326	1		&&			
ANR	6268631	RelationalExpression	ch > 1		6267326	0		>			
ANR	6268632	Identifier	ch		6267326	0					
ANR	6268633	PrimaryExpression	1		6267326	1					
ANR	6268634	ArrayIndexing	block -> channel_in_cpl [ ch - 1 ]		6267326	1					
ANR	6268635	PtrMemberAccess	block -> channel_in_cpl		6267326	0					
ANR	6268636	Identifier	block		6267326	0					
ANR	6268637	Identifier	channel_in_cpl		6267326	1					
ANR	6268638	AdditiveExpression	ch - 1		6267326	1		-			
ANR	6268639	Identifier	ch		6267326	0					
ANR	6268640	PrimaryExpression	1		6267326	1					
ANR	6268641	CompoundStatement		327:63:5677:5677	6267326	1					
ANR	6268642	ExpressionStatement	ch0 = ch - 1	331:12:5755:5771	6267326	0	True				
ANR	6268643	AssignmentExpression	ch0 = ch - 1		6267326	0		=			
ANR	6268644	Identifier	ch0		6267326	0					
ANR	6268645	AdditiveExpression	ch - 1		6267326	1		-			
ANR	6268646	Identifier	ch		6267326	0					
ANR	6268647	PrimaryExpression	1		6267326	1					
ANR	6268648	ExpressionStatement	ch = CPL_CH	333:12:5786:5802	6267326	1	True				
ANR	6268649	AssignmentExpression	ch = CPL_CH		6267326	0		=			
ANR	6268650	Identifier	ch		6267326	0					
ANR	6268651	Identifier	CPL_CH		6267326	1					
ANR	6268652	ExpressionStatement	got_cpl = 1	335:12:5817:5828	6267326	2	True				
ANR	6268653	AssignmentExpression	got_cpl = 1		6267326	0		=			
ANR	6268654	Identifier	got_cpl		6267326	0					
ANR	6268655	PrimaryExpression	1		6267326	1					
ANR	6268656	ForStatement	for ( i = s -> start_freq [ ch ] ; i < block -> end_freq [ ch ] ; i ++ )		6267326	2					
ANR	6268657	ForInit	i = s -> start_freq [ ch ] ;	339:13:5855:5876	6267326	0	True				
ANR	6268658	AssignmentExpression	i = s -> start_freq [ ch ]		6267326	0		=			
ANR	6268659	Identifier	i		6267326	0					
ANR	6268660	ArrayIndexing	s -> start_freq [ ch ]		6267326	1					
ANR	6268661	PtrMemberAccess	s -> start_freq		6267326	0					
ANR	6268662	Identifier	s		6267326	0					
ANR	6268663	Identifier	start_freq		6267326	1					
ANR	6268664	Identifier	ch		6267326	1					
ANR	6268665	Condition	i < block -> end_freq [ ch ]	339:36:5878:5900	6267326	1	True				
ANR	6268666	RelationalExpression	i < block -> end_freq [ ch ]		6267326	0		<			
ANR	6268667	Identifier	i		6267326	0					
ANR	6268668	ArrayIndexing	block -> end_freq [ ch ]		6267326	1					
ANR	6268669	PtrMemberAccess	block -> end_freq		6267326	0					
ANR	6268670	Identifier	block		6267326	0					
ANR	6268671	Identifier	end_freq		6267326	1					
ANR	6268672	Identifier	ch		6267326	1					
ANR	6268673	PostIncDecOperationExpression	i ++	339:61:5903:5905	6267326	2	True				
ANR	6268674	Identifier	i		6267326	0					
ANR	6268675	IncDec	++		6267326	1					
ANR	6268676	CompoundStatement		337:66:5845:5845	6267326	3					
ANR	6268677	ExpressionStatement	q = block -> qmant [ ch ] [ i ]	341:12:5923:5946	6267326	0	True				
ANR	6268678	AssignmentExpression	q = block -> qmant [ ch ] [ i ]		6267326	0		=			
ANR	6268679	Identifier	q		6267326	0					
ANR	6268680	ArrayIndexing	block -> qmant [ ch ] [ i ]		6267326	1					
ANR	6268681	ArrayIndexing	block -> qmant [ ch ]		6267326	0					
ANR	6268682	PtrMemberAccess	block -> qmant		6267326	0					
ANR	6268683	Identifier	block		6267326	0					
ANR	6268684	Identifier	qmant		6267326	1					
ANR	6268685	Identifier	ch		6267326	1					
ANR	6268686	Identifier	i		6267326	1					
ANR	6268687	ExpressionStatement	b = s -> ref_bap [ ch ] [ blk ] [ i ]	343:12:5961:5987	6267326	1	True				
ANR	6268688	AssignmentExpression	b = s -> ref_bap [ ch ] [ blk ] [ i ]		6267326	0		=			
ANR	6268689	Identifier	b		6267326	0					
ANR	6268690	ArrayIndexing	s -> ref_bap [ ch ] [ blk ] [ i ]		6267326	1					
ANR	6268691	ArrayIndexing	s -> ref_bap [ ch ] [ blk ]		6267326	0					
ANR	6268692	ArrayIndexing	s -> ref_bap [ ch ]		6267326	0					
ANR	6268693	PtrMemberAccess	s -> ref_bap		6267326	0					
ANR	6268694	Identifier	s		6267326	0					
ANR	6268695	Identifier	ref_bap		6267326	1					
ANR	6268696	Identifier	ch		6267326	1					
ANR	6268697	Identifier	blk		6267326	1					
ANR	6268698	Identifier	i		6267326	1					
ANR	6268699	SwitchStatement	switch ( b )		6267326	2					
ANR	6268700	Condition	b	345:20:6010:6010	6267326	0	True				
ANR	6268701	Identifier	b		6267326	0					
ANR	6268702	CompoundStatement		343:23:5950:5950	6267326	1					
ANR	6268703	Label	case 0 :	347:12:6028:6034	6267326	0	True				
ANR	6268704	BreakStatement	break ;	347:61:6077:6082	6267326	1	True				
ANR	6268705	Label	case 1 :	349:12:6097:6103	6267326	2	True				
ANR	6268706	IfStatement	if ( q != 128 )		6267326	3					
ANR	6268707	Condition	q != 128	349:24:6109:6116	6267326	0	True				
ANR	6268708	EqualityExpression	q != 128		6267326	0		!=			
ANR	6268709	Identifier	q		6267326	0					
ANR	6268710	PrimaryExpression	128		6267326	1					
ANR	6268711	ExpressionStatement	"put_bits ( & s -> pb , 5 , q )"	349:34:6119:6144	6267326	1	True				
ANR	6268712	CallExpression	"put_bits ( & s -> pb , 5 , q )"		6267326	0					
ANR	6268713	Callee	put_bits		6267326	0					
ANR	6268714	Identifier	put_bits		6267326	0					
ANR	6268715	ArgumentList	& s -> pb		6267326	1					
ANR	6268716	Argument	& s -> pb		6267326	0					
ANR	6268717	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268718	UnaryOperator	&		6267326	0					
ANR	6268719	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268720	Identifier	s		6267326	0					
ANR	6268721	Identifier	pb		6267326	1					
ANR	6268722	Argument	5		6267326	1					
ANR	6268723	PrimaryExpression	5		6267326	0					
ANR	6268724	Argument	q		6267326	2					
ANR	6268725	Identifier	q		6267326	0					
ANR	6268726	BreakStatement	break ;	349:61:6146:6151	6267326	4	True				
ANR	6268727	Label	case 2 :	351:12:6166:6172	6267326	5	True				
ANR	6268728	IfStatement	if ( q != 128 )		6267326	6					
ANR	6268729	Condition	q != 128	351:24:6178:6185	6267326	0	True				
ANR	6268730	EqualityExpression	q != 128		6267326	0		!=			
ANR	6268731	Identifier	q		6267326	0					
ANR	6268732	PrimaryExpression	128		6267326	1					
ANR	6268733	ExpressionStatement	"put_bits ( & s -> pb , 7 , q )"	351:34:6188:6213	6267326	1	True				
ANR	6268734	CallExpression	"put_bits ( & s -> pb , 7 , q )"		6267326	0					
ANR	6268735	Callee	put_bits		6267326	0					
ANR	6268736	Identifier	put_bits		6267326	0					
ANR	6268737	ArgumentList	& s -> pb		6267326	1					
ANR	6268738	Argument	& s -> pb		6267326	0					
ANR	6268739	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268740	UnaryOperator	&		6267326	0					
ANR	6268741	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268742	Identifier	s		6267326	0					
ANR	6268743	Identifier	pb		6267326	1					
ANR	6268744	Argument	7		6267326	1					
ANR	6268745	PrimaryExpression	7		6267326	0					
ANR	6268746	Argument	q		6267326	2					
ANR	6268747	Identifier	q		6267326	0					
ANR	6268748	BreakStatement	break ;	351:61:6215:6220	6267326	7	True				
ANR	6268749	Label	case 3 :	353:12:6235:6241	6267326	8	True				
ANR	6268750	ExpressionStatement	"put_sbits ( & s -> pb , 3 , q )"	353:34:6257:6282	6267326	9	True				
ANR	6268751	CallExpression	"put_sbits ( & s -> pb , 3 , q )"		6267326	0					
ANR	6268752	Callee	put_sbits		6267326	0					
ANR	6268753	Identifier	put_sbits		6267326	0					
ANR	6268754	ArgumentList	& s -> pb		6267326	1					
ANR	6268755	Argument	& s -> pb		6267326	0					
ANR	6268756	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268757	UnaryOperator	&		6267326	0					
ANR	6268758	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268759	Identifier	s		6267326	0					
ANR	6268760	Identifier	pb		6267326	1					
ANR	6268761	Argument	3		6267326	1					
ANR	6268762	PrimaryExpression	3		6267326	0					
ANR	6268763	Argument	q		6267326	2					
ANR	6268764	Identifier	q		6267326	0					
ANR	6268765	BreakStatement	break ;	353:61:6284:6289	6267326	10	True				
ANR	6268766	Label	case 4 :	355:12:6304:6310	6267326	11	True				
ANR	6268767	IfStatement	if ( q != 128 )		6267326	12					
ANR	6268768	Condition	q != 128	355:24:6316:6323	6267326	0	True				
ANR	6268769	EqualityExpression	q != 128		6267326	0		!=			
ANR	6268770	Identifier	q		6267326	0					
ANR	6268771	PrimaryExpression	128		6267326	1					
ANR	6268772	ExpressionStatement	"put_bits ( & s -> pb , 7 , q )"	355:34:6326:6351	6267326	1	True				
ANR	6268773	CallExpression	"put_bits ( & s -> pb , 7 , q )"		6267326	0					
ANR	6268774	Callee	put_bits		6267326	0					
ANR	6268775	Identifier	put_bits		6267326	0					
ANR	6268776	ArgumentList	& s -> pb		6267326	1					
ANR	6268777	Argument	& s -> pb		6267326	0					
ANR	6268778	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268779	UnaryOperator	&		6267326	0					
ANR	6268780	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268781	Identifier	s		6267326	0					
ANR	6268782	Identifier	pb		6267326	1					
ANR	6268783	Argument	7		6267326	1					
ANR	6268784	PrimaryExpression	7		6267326	0					
ANR	6268785	Argument	q		6267326	2					
ANR	6268786	Identifier	q		6267326	0					
ANR	6268787	BreakStatement	break ;	355:61:6353:6358	6267326	13	True				
ANR	6268788	Label	case 14 :	357:12:6373:6380	6267326	14	True				
ANR	6268789	ExpressionStatement	"put_sbits ( & s -> pb , 14 , q )"	357:34:6395:6420	6267326	15	True				
ANR	6268790	CallExpression	"put_sbits ( & s -> pb , 14 , q )"		6267326	0					
ANR	6268791	Callee	put_sbits		6267326	0					
ANR	6268792	Identifier	put_sbits		6267326	0					
ANR	6268793	ArgumentList	& s -> pb		6267326	1					
ANR	6268794	Argument	& s -> pb		6267326	0					
ANR	6268795	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268796	UnaryOperator	&		6267326	0					
ANR	6268797	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268798	Identifier	s		6267326	0					
ANR	6268799	Identifier	pb		6267326	1					
ANR	6268800	Argument	14		6267326	1					
ANR	6268801	PrimaryExpression	14		6267326	0					
ANR	6268802	Argument	q		6267326	2					
ANR	6268803	Identifier	q		6267326	0					
ANR	6268804	BreakStatement	break ;	357:61:6422:6427	6267326	16	True				
ANR	6268805	Label	case 15 :	359:12:6442:6449	6267326	17	True				
ANR	6268806	ExpressionStatement	"put_sbits ( & s -> pb , 16 , q )"	359:34:6464:6489	6267326	18	True				
ANR	6268807	CallExpression	"put_sbits ( & s -> pb , 16 , q )"		6267326	0					
ANR	6268808	Callee	put_sbits		6267326	0					
ANR	6268809	Identifier	put_sbits		6267326	0					
ANR	6268810	ArgumentList	& s -> pb		6267326	1					
ANR	6268811	Argument	& s -> pb		6267326	0					
ANR	6268812	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268813	UnaryOperator	&		6267326	0					
ANR	6268814	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268815	Identifier	s		6267326	0					
ANR	6268816	Identifier	pb		6267326	1					
ANR	6268817	Argument	16		6267326	1					
ANR	6268818	PrimaryExpression	16		6267326	0					
ANR	6268819	Argument	q		6267326	2					
ANR	6268820	Identifier	q		6267326	0					
ANR	6268821	BreakStatement	break ;	359:61:6491:6496	6267326	19	True				
ANR	6268822	Label	default :	361:12:6511:6518	6267326	20	True				
ANR	6268823	Identifier	default		6267326	0					
ANR	6268824	ExpressionStatement	"put_sbits ( & s -> pb , b - 1 , q )"	361:34:6533:6558	6267326	21	True				
ANR	6268825	CallExpression	"put_sbits ( & s -> pb , b - 1 , q )"		6267326	0					
ANR	6268826	Callee	put_sbits		6267326	0					
ANR	6268827	Identifier	put_sbits		6267326	0					
ANR	6268828	ArgumentList	& s -> pb		6267326	1					
ANR	6268829	Argument	& s -> pb		6267326	0					
ANR	6268830	UnaryOperationExpression	& s -> pb		6267326	0					
ANR	6268831	UnaryOperator	&		6267326	0					
ANR	6268832	PtrMemberAccess	s -> pb		6267326	1					
ANR	6268833	Identifier	s		6267326	0					
ANR	6268834	Identifier	pb		6267326	1					
ANR	6268835	Argument	b - 1		6267326	1					
ANR	6268836	AdditiveExpression	b - 1		6267326	0		-			
ANR	6268837	Identifier	b		6267326	0					
ANR	6268838	PrimaryExpression	1		6267326	1					
ANR	6268839	Argument	q		6267326	2					
ANR	6268840	Identifier	q		6267326	0					
ANR	6268841	BreakStatement	break ;	361:61:6560:6565	6267326	22	True				
ANR	6268842	IfStatement	if ( ch == CPL_CH )		6267326	3					
ANR	6268843	Condition	ch == CPL_CH	367:12:6606:6617	6267326	0	True				
ANR	6268844	EqualityExpression	ch == CPL_CH		6267326	0		==			
ANR	6268845	Identifier	ch		6267326	0					
ANR	6268846	Identifier	CPL_CH		6267326	1					
ANR	6268847	ExpressionStatement	ch = ch0	369:12:6633:6641	6267326	1	True				
ANR	6268848	AssignmentExpression	ch = ch0		6267326	0		=			
ANR	6268849	Identifier	ch		6267326	0					
ANR	6268850	Identifier	ch0		6267326	1					
ANR	6268851	ReturnType	static void		6267326	1					
ANR	6268852	Identifier	output_audio_block		6267326	2					
ANR	6268853	ParameterList	"AC3EncodeContext * s , int blk"		6267326	3					
ANR	6268854	Parameter	AC3EncodeContext * s	1:31:31:49	6267326	0	True				
ANR	6268855	ParameterType	AC3EncodeContext *		6267326	0					
ANR	6268856	Identifier	s		6267326	1					
ANR	6268857	Parameter	int blk	1:52:52:58	6267326	1	True				
ANR	6268858	ParameterType	int		6267326	0					
ANR	6268859	Identifier	blk		6267326	1					
ANR	6268860	CFGEntryNode	ENTRY		6267326		True				
ANR	6268861	CFGExitNode	EXIT		6267326		True				
ANR	6268862	Symbol	* * block -> grouped_exp		6267326						
ANR	6268863	Symbol	* block -> cpl_master_exp		6267326						
ANR	6268864	Symbol	* * s -> lfe_channel		6267326						
ANR	6268865	Symbol	* ch		6267326						
ANR	6268866	Symbol	s -> db_per_bit_code		6267326						
ANR	6268867	Symbol	block -> qmant		6267326						
ANR	6268868	Symbol	s -> lfe_on		6267326						
ANR	6268869	Symbol	block -> num_rematrixing_bands		6267326						
ANR	6268870	Symbol	s -> fast_gain_code		6267326						
ANR	6268871	Symbol	block -> cpl_coord_mant		6267326						
ANR	6268872	Symbol	block -> end_freq		6267326						
ANR	6268873	Symbol	block		6267326						
ANR	6268874	Symbol	* * * s -> ref_bap		6267326						
ANR	6268875	Symbol	block -> cpl_master_exp		6267326						
ANR	6268876	Symbol	* * * cpl		6267326						
ANR	6268877	Symbol	EXP_REUSE		6267326						
ANR	6268878	Symbol	block -> new_snr_offsets		6267326						
ANR	6268879	Symbol	* s -> start_freq		6267326						
ANR	6268880	Symbol	s -> exp_strategy		6267326						
ANR	6268881	Symbol	* * * s -> exp_strategy		6267326						
ANR	6268882	Symbol	* exponent_group_tab		6267326						
ANR	6268883	Symbol	* * * s		6267326						
ANR	6268884	Symbol	s -> eac3		6267326						
ANR	6268885	Symbol	s -> start_freq		6267326						
ANR	6268886	Symbol	* blk		6267326						
ANR	6268887	Symbol	* * blk		6267326						
ANR	6268888	Symbol	s -> bit_alloc		6267326						
ANR	6268889	Symbol	& s -> pb		6267326						
ANR	6268890	Symbol	* ff_eac3_default_cpl_band_struct		6267326						
ANR	6268891	Symbol	* * * ch		6267326						
ANR	6268892	Symbol	* block -> cpl_coord_mant		6267326						
ANR	6268893	Symbol	* * block -> end_freq		6267326						
ANR	6268894	Symbol	* * block -> cpl_coord_mant		6267326						
ANR	6268895	Symbol	* CPL_CH		6267326						
ANR	6268896	Symbol	block -> new_rematrixing_strategy		6267326						
ANR	6268897	Symbol	* * s		6267326						
ANR	6268898	Symbol	s -> floor_code		6267326						
ANR	6268899	Symbol	* * s -> exp_strategy		6267326						
ANR	6268900	Symbol	blk		6267326						
ANR	6268901	Symbol	* * s -> ref_bap		6267326						
ANR	6268902	Symbol	b		6267326						
ANR	6268903	Symbol	s -> bandwidth_code		6267326						
ANR	6268904	Symbol	ch		6267326						
ANR	6268905	Symbol	i		6267326						
ANR	6268906	Symbol	ch0		6267326						
ANR	6268907	Symbol	s -> ref_bap		6267326						
ANR	6268908	Symbol	q		6267326						
ANR	6268909	Symbol	s		6267326						
ANR	6268910	Symbol	s -> cpl_end_freq		6267326						
ANR	6268911	Symbol	s -> lfe_channel		6267326						
ANR	6268912	Symbol	* * block		6267326						
ANR	6268913	Symbol	block -> new_cpl_strategy		6267326						
ANR	6268914	Symbol	* * * * s		6267326						
ANR	6268915	Symbol	* s -> exp_strategy		6267326						
ANR	6268916	Symbol	* s -> ref_bap		6267326						
ANR	6268917	Symbol	s -> num_cpl_bands		6267326						
ANR	6268918	Symbol	ff_eac3_default_cpl_band_struct		6267326						
ANR	6268919	Symbol	s -> slow_gain_code		6267326						
ANR	6268920	Symbol	bnd		6267326						
ANR	6268921	Symbol	AC3_CHMODE_STEREO		6267326						
ANR	6268922	Symbol	block -> rematrixing_flags		6267326						
ANR	6268923	Symbol	* block -> qmant		6267326						
ANR	6268924	Symbol	s -> channel_mode		6267326						
ANR	6268925	Symbol	* block -> end_freq		6267326						
ANR	6268926	Symbol	block -> new_cpl_leak		6267326						
ANR	6268927	Symbol	cpl		6267326						
ANR	6268928	Symbol	block -> cpl_in_use		6267326						
ANR	6268929	Symbol	* s -> fine_snr_offset		6267326						
ANR	6268930	Symbol	* * * block		6267326						
ANR	6268931	Symbol	s -> fine_snr_offset		6267326						
ANR	6268932	Symbol	* s -> fast_gain_code		6267326						
ANR	6268933	Symbol	* block -> channel_in_cpl		6267326						
ANR	6268934	Symbol	* * * exponent_group_tab		6267326						
ANR	6268935	Symbol	baie		6267326						
ANR	6268936	Symbol	* block -> new_cpl_coords		6267326						
ANR	6268937	Symbol	exponent_group_tab		6267326						
ANR	6268938	Symbol	* block -> grouped_exp		6267326						
ANR	6268939	Symbol	s -> fbw_channels		6267326						
ANR	6268940	Symbol	CPL_CH		6267326						
ANR	6268941	Symbol	* * s -> start_freq		6267326						
ANR	6268942	Symbol	s -> blocks		6267326						
ANR	6268943	Symbol	* * block -> cpl_coord_exp		6267326						
ANR	6268944	Symbol	s -> channels		6267326						
ANR	6268945	Symbol	* * * * s -> exp_strategy		6267326						
ANR	6268946	Symbol	* * exponent_group_tab		6267326						
ANR	6268947	Symbol	* * ch		6267326						
ANR	6268948	Symbol	s -> bit_alloc . cpl_fast_leak		6267326						
ANR	6268949	Symbol	s -> coarse_snr_offset		6267326						
ANR	6268950	Symbol	* block -> cpl_coord_exp		6267326						
ANR	6268951	Symbol	* * * blk		6267326						
ANR	6268952	Symbol	s -> slow_decay_code		6267326						
ANR	6268953	Symbol	s -> bit_alloc . cpl_slow_leak		6267326						
ANR	6268954	Symbol	end_sub		6267326						
ANR	6268955	Symbol	s -> fast_decay_code		6267326						
ANR	6268956	Symbol	block -> channel_in_cpl		6267326						
ANR	6268957	Symbol	* s -> lfe_channel		6267326						
ANR	6268958	Symbol	block -> grouped_exp		6267326						
ANR	6268959	Symbol	* * * * ch		6267326						
ANR	6268960	Symbol	* block		6267326						
ANR	6268961	Symbol	block -> new_cpl_coords		6267326						
ANR	6268962	Symbol	* * block -> qmant		6267326						
ANR	6268963	Symbol	* * cpl		6267326						
ANR	6268964	Symbol	* i		6267326						
ANR	6268965	Symbol	block -> cpl_coord_exp		6267326						
ANR	6268966	Symbol	* cpl		6267326						
ANR	6268967	Symbol	* * * * * s		6267326						
ANR	6268968	Symbol	got_cpl		6267326						
ANR	6268969	Symbol	nb_groups		6267326						
ANR	6268970	Symbol	start_sub		6267326						
ANR	6268971	Symbol	* s		6267326						
ANR	6268972	Symbol	* bnd		6267326						
ANR	6268973	Symbol	* block -> rematrixing_flags		6267326						
