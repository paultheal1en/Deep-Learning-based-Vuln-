command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	874109	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avg_pixels8_altivec_0.c								
ANR	874110	Function	avg_pixels8_altivec	1:0:0:2142							
ANR	874111	FunctionDef	"avg_pixels8_altivec (uint8_t * block , const uint8_t * pixels , int line_size , int h)"		874110	0					
ANR	874112	CompoundStatement		3:0:89:2142	874110	0					
ANR	874113	ExpressionStatement	"POWERPC_TBL_DECLARE ( altivec_avg_pixels8_num , 1 )"	5:0:92:139	874110	0	True				
ANR	874114	CallExpression	"POWERPC_TBL_DECLARE ( altivec_avg_pixels8_num , 1 )"		874110	0					
ANR	874115	Callee	POWERPC_TBL_DECLARE		874110	0					
ANR	874116	Identifier	POWERPC_TBL_DECLARE		874110	0					
ANR	874117	ArgumentList	altivec_avg_pixels8_num		874110	1					
ANR	874118	Argument	altivec_avg_pixels8_num		874110	0					
ANR	874119	Identifier	altivec_avg_pixels8_num		874110	0					
ANR	874120	Argument	1		874110	1					
ANR	874121	PrimaryExpression	1		874110	0					
ANR	874122	IdentifierDeclStatement	int i ;	9:4:183:188	874110	1	True				
ANR	874123	IdentifierDecl	i		874110	0					
ANR	874124	IdentifierDeclType	int		874110	0					
ANR	874125	Identifier	i		874110	1					
ANR	874126	ExpressionStatement	"POWERPC_TBL_START_COUNT ( altivec_avg_pixels8_num , 1 )"	11:0:191:242	874110	2	True				
ANR	874127	CallExpression	"POWERPC_TBL_START_COUNT ( altivec_avg_pixels8_num , 1 )"		874110	0					
ANR	874128	Callee	POWERPC_TBL_START_COUNT		874110	0					
ANR	874129	Identifier	POWERPC_TBL_START_COUNT		874110	0					
ANR	874130	ArgumentList	altivec_avg_pixels8_num		874110	1					
ANR	874131	Argument	altivec_avg_pixels8_num		874110	0					
ANR	874132	Identifier	altivec_avg_pixels8_num		874110	0					
ANR	874133	Argument	1		874110	1					
ANR	874134	PrimaryExpression	1		874110	0					
ANR	874135	ForStatement	for ( i = 0 ; i < h ; i ++ )		874110	3					
ANR	874136	ForInit	i = 0 ;	13:9:254:259	874110	0	True				
ANR	874137	AssignmentExpression	i = 0		874110	0		=			
ANR	874138	Identifier	i		874110	0					
ANR	874139	PrimaryExpression	0		874110	1					
ANR	874140	Condition	i < h	13:16:261:265	874110	1	True				
ANR	874141	RelationalExpression	i < h		874110	0		<			
ANR	874142	Identifier	i		874110	0					
ANR	874143	Identifier	h		874110	1					
ANR	874144	PostIncDecOperationExpression	i ++	13:23:268:270	874110	2	True				
ANR	874145	Identifier	i		874110	0					
ANR	874146	IncDec	++		874110	1					
ANR	874147	CompoundStatement		11:28:183:183	874110	3					
ANR	874148	ExpressionStatement	* ( ( uint32_t * ) ( block ) ) = ( ( ( * ( ( uint32_t * ) ( block ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 ) )	15:8:284:572	874110	0	True				
ANR	874149	AssignmentExpression	* ( ( uint32_t * ) ( block ) ) = ( ( ( * ( ( uint32_t * ) ( block ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 ) )		874110	0		=			
ANR	874150	UnaryOperationExpression	* ( ( uint32_t * ) ( block ) )		874110	0					
ANR	874151	UnaryOperator	*		874110	0					
ANR	874152	CastExpression	( uint32_t * ) ( block )		874110	1					
ANR	874153	CastTarget	uint32_t *		874110	0					
ANR	874154	Identifier	block		874110	1					
ANR	874155	AdditiveExpression	( ( * ( ( uint32_t * ) ( block ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 )		874110	1		-			
ANR	874156	InclusiveOrExpression	( * ( ( uint32_t * ) ( block ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) )		874110	0		|			
ANR	874157	UnaryOperationExpression	* ( ( uint32_t * ) ( block ) )		874110	0					
ANR	874158	UnaryOperator	*		874110	0					
ANR	874159	CastExpression	( uint32_t * ) ( block )		874110	1					
ANR	874160	CastTarget	uint32_t *		874110	0					
ANR	874161	Identifier	block		874110	1					
ANR	874162	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		874110	1					
ANR	874163	CastExpression	( const struct unaligned_32 * ) ( pixels )		874110	0					
ANR	874164	CastTarget	const struct unaligned_32 *		874110	0					
ANR	874165	Identifier	pixels		874110	1					
ANR	874166	Identifier	l		874110	1					
ANR	874167	ShiftExpression	( ( ( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1		874110	1		>>			
ANR	874168	BitAndExpression	( ( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ) ) & 0xFEFEFEFEUL		874110	0		&			
ANR	874169	ExclusiveOrExpression	( * ( ( uint32_t * ) ( block ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) )		874110	0		^			
ANR	874170	UnaryOperationExpression	* ( ( uint32_t * ) ( block ) )		874110	0					
ANR	874171	UnaryOperator	*		874110	0					
ANR	874172	CastExpression	( uint32_t * ) ( block )		874110	1					
ANR	874173	CastTarget	uint32_t *		874110	0					
ANR	874174	Identifier	block		874110	1					
ANR	874175	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		874110	1					
ANR	874176	CastExpression	( const struct unaligned_32 * ) ( pixels )		874110	0					
ANR	874177	CastTarget	const struct unaligned_32 *		874110	0					
ANR	874178	Identifier	pixels		874110	1					
ANR	874179	Identifier	l		874110	1					
ANR	874180	PrimaryExpression	0xFEFEFEFEUL		874110	1					
ANR	874181	PrimaryExpression	1		874110	1					
ANR	874182	ExpressionStatement	* ( ( uint32_t * ) ( block + 4 ) ) = ( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 ) )	27:8:583:942	874110	1	True				
ANR	874183	AssignmentExpression	* ( ( uint32_t * ) ( block + 4 ) ) = ( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 ) )		874110	0		=			
ANR	874184	UnaryOperationExpression	* ( ( uint32_t * ) ( block + 4 ) )		874110	0					
ANR	874185	UnaryOperator	*		874110	0					
ANR	874186	CastExpression	( uint32_t * ) ( block + 4 )		874110	1					
ANR	874187	CastTarget	uint32_t *		874110	0					
ANR	874188	AdditiveExpression	block + 4		874110	1		+			
ANR	874189	Identifier	block		874110	0					
ANR	874190	PrimaryExpression	4		874110	1					
ANR	874191	AdditiveExpression	( ( * ( ( uint32_t * ) ( block + 4 ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) - ( ( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1 )		874110	1		-			
ANR	874192	InclusiveOrExpression	( * ( ( uint32_t * ) ( block + 4 ) ) ) | ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) )		874110	0		|			
ANR	874193	UnaryOperationExpression	* ( ( uint32_t * ) ( block + 4 ) )		874110	0					
ANR	874194	UnaryOperator	*		874110	0					
ANR	874195	CastExpression	( uint32_t * ) ( block + 4 )		874110	1					
ANR	874196	CastTarget	uint32_t *		874110	0					
ANR	874197	AdditiveExpression	block + 4		874110	1		+			
ANR	874198	Identifier	block		874110	0					
ANR	874199	PrimaryExpression	4		874110	1					
ANR	874200	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l		874110	1					
ANR	874201	CastExpression	( const struct unaligned_32 * ) ( pixels + 4 )		874110	0					
ANR	874202	CastTarget	const struct unaligned_32 *		874110	0					
ANR	874203	AdditiveExpression	pixels + 4		874110	1		+			
ANR	874204	Identifier	pixels		874110	0					
ANR	874205	PrimaryExpression	4		874110	1					
ANR	874206	Identifier	l		874110	1					
ANR	874207	ShiftExpression	( ( ( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) & 0xFEFEFEFEUL ) >> 1		874110	1		>>			
ANR	874208	BitAndExpression	( ( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) ) ) & 0xFEFEFEFEUL		874110	0		&			
ANR	874209	ExclusiveOrExpression	( * ( ( uint32_t * ) ( block + 4 ) ) ) ^ ( ( ( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l ) )		874110	0		^			
ANR	874210	UnaryOperationExpression	* ( ( uint32_t * ) ( block + 4 ) )		874110	0					
ANR	874211	UnaryOperator	*		874110	0					
ANR	874212	CastExpression	( uint32_t * ) ( block + 4 )		874110	1					
ANR	874213	CastTarget	uint32_t *		874110	0					
ANR	874214	AdditiveExpression	block + 4		874110	1		+			
ANR	874215	Identifier	block		874110	0					
ANR	874216	PrimaryExpression	4		874110	1					
ANR	874217	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l		874110	1					
ANR	874218	CastExpression	( const struct unaligned_32 * ) ( pixels + 4 )		874110	0					
ANR	874219	CastTarget	const struct unaligned_32 *		874110	0					
ANR	874220	AdditiveExpression	pixels + 4		874110	1		+			
ANR	874221	Identifier	pixels		874110	0					
ANR	874222	PrimaryExpression	4		874110	1					
ANR	874223	Identifier	l		874110	1					
ANR	874224	PrimaryExpression	0xFEFEFEFEUL		874110	1					
ANR	874225	PrimaryExpression	1		874110	1					
ANR	874226	ExpressionStatement	pixels += line_size	41:8:953:972	874110	2	True				
ANR	874227	AssignmentExpression	pixels += line_size		874110	0		+=			
ANR	874228	Identifier	pixels		874110	0					
ANR	874229	Identifier	line_size		874110	1					
ANR	874230	ExpressionStatement	block += line_size	43:8:983:1001	874110	3	True				
ANR	874231	AssignmentExpression	block += line_size		874110	0		+=			
ANR	874232	Identifier	block		874110	0					
ANR	874233	Identifier	line_size		874110	1					
ANR	874234	ExpressionStatement	"POWERPC_TBL_STOP_COUNT ( altivec_avg_pixels8_num , 1 )"	47:0:1011:1061	874110	4	True				
ANR	874235	CallExpression	"POWERPC_TBL_STOP_COUNT ( altivec_avg_pixels8_num , 1 )"		874110	0					
ANR	874236	Callee	POWERPC_TBL_STOP_COUNT		874110	0					
ANR	874237	Identifier	POWERPC_TBL_STOP_COUNT		874110	0					
ANR	874238	ArgumentList	altivec_avg_pixels8_num		874110	1					
ANR	874239	Argument	altivec_avg_pixels8_num		874110	0					
ANR	874240	Identifier	altivec_avg_pixels8_num		874110	0					
ANR	874241	Argument	1		874110	1					
ANR	874242	PrimaryExpression	1		874110	0					
ANR	874243	ReturnType	void		874110	1					
ANR	874244	Identifier	avg_pixels8_altivec		874110	2					
ANR	874245	ParameterList	"uint8_t * block , const uint8_t * pixels , int line_size , int h"		874110	3					
ANR	874246	Parameter	uint8_t * block	1:25:25:39	874110	0	True				
ANR	874247	ParameterType	uint8_t *		874110	0					
ANR	874248	Identifier	block		874110	1					
ANR	874249	Parameter	const uint8_t * pixels	1:42:42:63	874110	1	True				
ANR	874250	ParameterType	const uint8_t *		874110	0					
ANR	874251	Identifier	pixels		874110	1					
ANR	874252	Parameter	int line_size	1:66:66:78	874110	2	True				
ANR	874253	ParameterType	int		874110	0					
ANR	874254	Identifier	line_size		874110	1					
ANR	874255	Parameter	int h	1:81:81:85	874110	3	True				
ANR	874256	ParameterType	int		874110	0					
ANR	874257	Identifier	h		874110	1					
ANR	874258	CFGEntryNode	ENTRY		874110		True				
ANR	874259	CFGExitNode	EXIT		874110		True				
ANR	874260	Symbol	altivec_avg_pixels8_num		874110						
ANR	874261	Symbol	pixels		874110						
ANR	874262	Symbol	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		874110						
ANR	874263	Symbol	* ( ( uint32_t * ) ( block + 4 ) )		874110						
ANR	874264	Symbol	* pixels		874110						
ANR	874265	Symbol	h		874110						
ANR	874266	Symbol	i		874110						
ANR	874267	Symbol	( ( const struct unaligned_32 * ) ( pixels + 4 ) ) -> l		874110						
ANR	874268	Symbol	block		874110						
ANR	874269	Symbol	* ( ( uint32_t * ) ( block ) )		874110						
ANR	874270	Symbol	line_size		874110						
ANR	874271	Symbol	* block		874110						
