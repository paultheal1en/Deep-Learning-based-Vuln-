command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7218464	File	/home/p4ultr4n/workplace/ReVeal/raw_code/rac_get_model256_sym_1.c								
ANR	7218465	Function	rac_get_model256_sym	1:0:0:897							
ANR	7218466	FunctionDef	"rac_get_model256_sym (RangeCoder * c , Model256 * m)"		7218465	0					
ANR	7218467	CompoundStatement		3:0:61:897	7218465	0					
ANR	7218468	IdentifierDeclStatement	"int prob , prob2 , helper , val ;"	5:4:68:96	7218465	0	True				
ANR	7218469	IdentifierDecl	prob		7218465	0					
ANR	7218470	IdentifierDeclType	int		7218465	0					
ANR	7218471	Identifier	prob		7218465	1					
ANR	7218472	IdentifierDecl	prob2		7218465	1					
ANR	7218473	IdentifierDeclType	int		7218465	0					
ANR	7218474	Identifier	prob2		7218465	1					
ANR	7218475	IdentifierDecl	helper		7218465	2					
ANR	7218476	IdentifierDeclType	int		7218465	0					
ANR	7218477	Identifier	helper		7218465	1					
ANR	7218478	IdentifierDecl	val		7218465	3					
ANR	7218479	IdentifierDeclType	int		7218465	0					
ANR	7218480	Identifier	val		7218465	1					
ANR	7218481	IdentifierDeclStatement	"int start , end ;"	7:4:103:117	7218465	1	True				
ANR	7218482	IdentifierDecl	start		7218465	0					
ANR	7218483	IdentifierDeclType	int		7218465	0					
ANR	7218484	Identifier	start		7218465	1					
ANR	7218485	IdentifierDecl	end		7218465	1					
ANR	7218486	IdentifierDeclType	int		7218465	0					
ANR	7218487	Identifier	end		7218465	1					
ANR	7218488	IdentifierDeclStatement	int ssym ;	9:4:124:132	7218465	2	True				
ANR	7218489	IdentifierDecl	ssym		7218465	0					
ANR	7218490	IdentifierDeclType	int		7218465	0					
ANR	7218491	Identifier	ssym		7218465	1					
ANR	7218492	ExpressionStatement	prob2 = c -> range	13:4:141:162	7218465	3	True				
ANR	7218493	AssignmentExpression	prob2 = c -> range		7218465	0		=			
ANR	7218494	Identifier	prob2		7218465	0					
ANR	7218495	PtrMemberAccess	c -> range		7218465	1					
ANR	7218496	Identifier	c		7218465	0					
ANR	7218497	Identifier	range		7218465	1					
ANR	7218498	ExpressionStatement	c -> range >>= MODEL_SCALE	15:4:169:193	7218465	4	True				
ANR	7218499	AssignmentExpression	c -> range >>= MODEL_SCALE		7218465	0		>>=			
ANR	7218500	PtrMemberAccess	c -> range		7218465	0					
ANR	7218501	Identifier	c		7218465	0					
ANR	7218502	Identifier	range		7218465	1					
ANR	7218503	Identifier	MODEL_SCALE		7218465	1					
ANR	7218504	ExpressionStatement	helper = c -> low / c -> range	19:4:202:232	7218465	5	True				
ANR	7218505	AssignmentExpression	helper = c -> low / c -> range		7218465	0		=			
ANR	7218506	Identifier	helper		7218465	0					
ANR	7218507	MultiplicativeExpression	c -> low / c -> range		7218465	1		/			
ANR	7218508	PtrMemberAccess	c -> low		7218465	0					
ANR	7218509	Identifier	c		7218465	0					
ANR	7218510	Identifier	low		7218465	1					
ANR	7218511	PtrMemberAccess	c -> range		7218465	1					
ANR	7218512	Identifier	c		7218465	0					
ANR	7218513	Identifier	range		7218465	1					
ANR	7218514	ExpressionStatement	ssym = helper >> MODEL256_SEC_SCALE	21:4:239:280	7218465	6	True				
ANR	7218515	AssignmentExpression	ssym = helper >> MODEL256_SEC_SCALE		7218465	0		=			
ANR	7218516	Identifier	ssym		7218465	0					
ANR	7218517	ShiftExpression	helper >> MODEL256_SEC_SCALE		7218465	1		>>			
ANR	7218518	Identifier	helper		7218465	0					
ANR	7218519	Identifier	MODEL256_SEC_SCALE		7218465	1					
ANR	7218520	ExpressionStatement	val = m -> secondary [ ssym ]	23:4:287:318	7218465	7	True				
ANR	7218521	AssignmentExpression	val = m -> secondary [ ssym ]		7218465	0		=			
ANR	7218522	Identifier	val		7218465	0					
ANR	7218523	ArrayIndexing	m -> secondary [ ssym ]		7218465	1					
ANR	7218524	PtrMemberAccess	m -> secondary		7218465	0					
ANR	7218525	Identifier	m		7218465	0					
ANR	7218526	Identifier	secondary		7218465	1					
ANR	7218527	Identifier	ssym		7218465	1					
ANR	7218528	ExpressionStatement	end = start = m -> secondary [ ssym + 1 ] + 1	27:4:327:367	7218465	8	True				
ANR	7218529	AssignmentExpression	end = start = m -> secondary [ ssym + 1 ] + 1		7218465	0		=			
ANR	7218530	Identifier	end		7218465	0					
ANR	7218531	AssignmentExpression	start = m -> secondary [ ssym + 1 ] + 1		7218465	1		=			
ANR	7218532	Identifier	start		7218465	0					
ANR	7218533	AdditiveExpression	m -> secondary [ ssym + 1 ] + 1		7218465	1		+			
ANR	7218534	ArrayIndexing	m -> secondary [ ssym + 1 ]		7218465	0					
ANR	7218535	PtrMemberAccess	m -> secondary		7218465	0					
ANR	7218536	Identifier	m		7218465	0					
ANR	7218537	Identifier	secondary		7218465	1					
ANR	7218538	AdditiveExpression	ssym + 1		7218465	1		+			
ANR	7218539	Identifier	ssym		7218465	0					
ANR	7218540	PrimaryExpression	1		7218465	1					
ANR	7218541	PrimaryExpression	1		7218465	1					
ANR	7218542	WhileStatement	while ( end > val + 1 )		7218465	9					
ANR	7218543	Condition	end > val + 1	29:11:381:393	7218465	0	True				
ANR	7218544	RelationalExpression	end > val + 1		7218465	0		>			
ANR	7218545	Identifier	end		7218465	0					
ANR	7218546	AdditiveExpression	val + 1		7218465	1		+			
ANR	7218547	Identifier	val		7218465	0					
ANR	7218548	PrimaryExpression	1		7218465	1					
ANR	7218549	CompoundStatement		27:26:334:334	7218465	1					
ANR	7218550	ExpressionStatement	ssym = ( end + val ) >> 1	31:8:407:430	7218465	0	True				
ANR	7218551	AssignmentExpression	ssym = ( end + val ) >> 1		7218465	0		=			
ANR	7218552	Identifier	ssym		7218465	0					
ANR	7218553	ShiftExpression	( end + val ) >> 1		7218465	1		>>			
ANR	7218554	AdditiveExpression	end + val		7218465	0		+			
ANR	7218555	Identifier	end		7218465	0					
ANR	7218556	Identifier	val		7218465	1					
ANR	7218557	PrimaryExpression	1		7218465	1					
ANR	7218558	IfStatement	if ( m -> freqs [ ssym ] <= helper )		7218465	1					
ANR	7218559	Condition	m -> freqs [ ssym ] <= helper	33:12:445:468	7218465	0	True				
ANR	7218560	RelationalExpression	m -> freqs [ ssym ] <= helper		7218465	0		<=			
ANR	7218561	ArrayIndexing	m -> freqs [ ssym ]		7218465	0					
ANR	7218562	PtrMemberAccess	m -> freqs		7218465	0					
ANR	7218563	Identifier	m		7218465	0					
ANR	7218564	Identifier	freqs		7218465	1					
ANR	7218565	Identifier	ssym		7218465	1					
ANR	7218566	Identifier	helper		7218465	1					
ANR	7218567	CompoundStatement		31:38:409:409	7218465	1					
ANR	7218568	ExpressionStatement	end = start	35:12:486:497	7218465	0	True				
ANR	7218569	AssignmentExpression	end = start		7218465	0		=			
ANR	7218570	Identifier	end		7218465	0					
ANR	7218571	Identifier	start		7218465	1					
ANR	7218572	ExpressionStatement	val = ssym	37:12:512:522	7218465	1	True				
ANR	7218573	AssignmentExpression	val = ssym		7218465	0		=			
ANR	7218574	Identifier	val		7218465	0					
ANR	7218575	Identifier	ssym		7218465	1					
ANR	7218576	ElseStatement	else		7218465	0					
ANR	7218577	CompoundStatement		37:15:478:478	7218465	0					
ANR	7218578	ExpressionStatement	end = ( end + val ) >> 1	41:12:555:579	7218465	0	True				
ANR	7218579	AssignmentExpression	end = ( end + val ) >> 1		7218465	0		=			
ANR	7218580	Identifier	end		7218465	0					
ANR	7218581	ShiftExpression	( end + val ) >> 1		7218465	1		>>			
ANR	7218582	AdditiveExpression	end + val		7218465	0		+			
ANR	7218583	Identifier	end		7218465	0					
ANR	7218584	Identifier	val		7218465	1					
ANR	7218585	PrimaryExpression	1		7218465	1					
ANR	7218586	ExpressionStatement	start = ssym	43:12:594:606	7218465	1	True				
ANR	7218587	AssignmentExpression	start = ssym		7218465	0		=			
ANR	7218588	Identifier	start		7218465	0					
ANR	7218589	Identifier	ssym		7218465	1					
ANR	7218590	ExpressionStatement	prob = m -> freqs [ val ] * c -> range	49:4:631:662	7218465	10	True				
ANR	7218591	AssignmentExpression	prob = m -> freqs [ val ] * c -> range		7218465	0		=			
ANR	7218592	Identifier	prob		7218465	0					
ANR	7218593	MultiplicativeExpression	m -> freqs [ val ] * c -> range		7218465	1		*			
ANR	7218594	ArrayIndexing	m -> freqs [ val ]		7218465	0					
ANR	7218595	PtrMemberAccess	m -> freqs		7218465	0					
ANR	7218596	Identifier	m		7218465	0					
ANR	7218597	Identifier	freqs		7218465	1					
ANR	7218598	Identifier	val		7218465	1					
ANR	7218599	PtrMemberAccess	c -> range		7218465	1					
ANR	7218600	Identifier	c		7218465	0					
ANR	7218601	Identifier	range		7218465	1					
ANR	7218602	IfStatement	if ( val != 255 )		7218465	11					
ANR	7218603	Condition	val != 255	51:8:673:682	7218465	0	True				
ANR	7218604	EqualityExpression	val != 255		7218465	0		!=			
ANR	7218605	Identifier	val		7218465	0					
ANR	7218606	PrimaryExpression	255		7218465	1					
ANR	7218607	ExpressionStatement	prob2 = m -> freqs [ val + 1 ] * c -> range	53:8:694:730	7218465	1	True				
ANR	7218608	AssignmentExpression	prob2 = m -> freqs [ val + 1 ] * c -> range		7218465	0		=			
ANR	7218609	Identifier	prob2		7218465	0					
ANR	7218610	MultiplicativeExpression	m -> freqs [ val + 1 ] * c -> range		7218465	1		*			
ANR	7218611	ArrayIndexing	m -> freqs [ val + 1 ]		7218465	0					
ANR	7218612	PtrMemberAccess	m -> freqs		7218465	0					
ANR	7218613	Identifier	m		7218465	0					
ANR	7218614	Identifier	freqs		7218465	1					
ANR	7218615	AdditiveExpression	val + 1		7218465	1		+			
ANR	7218616	Identifier	val		7218465	0					
ANR	7218617	PrimaryExpression	1		7218465	1					
ANR	7218618	PtrMemberAccess	c -> range		7218465	1					
ANR	7218619	Identifier	c		7218465	0					
ANR	7218620	Identifier	range		7218465	1					
ANR	7218621	ExpressionStatement	c -> low -= prob	57:4:739:754	7218465	12	True				
ANR	7218622	AssignmentExpression	c -> low -= prob		7218465	0		-=			
ANR	7218623	PtrMemberAccess	c -> low		7218465	0					
ANR	7218624	Identifier	c		7218465	0					
ANR	7218625	Identifier	low		7218465	1					
ANR	7218626	Identifier	prob		7218465	1					
ANR	7218627	ExpressionStatement	c -> range = prob2 - prob	59:4:761:784	7218465	13	True				
ANR	7218628	AssignmentExpression	c -> range = prob2 - prob		7218465	0		=			
ANR	7218629	PtrMemberAccess	c -> range		7218465	0					
ANR	7218630	Identifier	c		7218465	0					
ANR	7218631	Identifier	range		7218465	1					
ANR	7218632	AdditiveExpression	prob2 - prob		7218465	1		-			
ANR	7218633	Identifier	prob2		7218465	0					
ANR	7218634	Identifier	prob		7218465	1					
ANR	7218635	IfStatement	if ( c -> range < RAC_BOTTOM )		7218465	14					
ANR	7218636	Condition	c -> range < RAC_BOTTOM	61:8:795:815	7218465	0	True				
ANR	7218637	RelationalExpression	c -> range < RAC_BOTTOM		7218465	0		<			
ANR	7218638	PtrMemberAccess	c -> range		7218465	0					
ANR	7218639	Identifier	c		7218465	0					
ANR	7218640	Identifier	range		7218465	1					
ANR	7218641	Identifier	RAC_BOTTOM		7218465	1					
ANR	7218642	ExpressionStatement	rac_normalise ( c )	63:8:827:843	7218465	1	True				
ANR	7218643	CallExpression	rac_normalise ( c )		7218465	0					
ANR	7218644	Callee	rac_normalise		7218465	0					
ANR	7218645	Identifier	rac_normalise		7218465	0					
ANR	7218646	ArgumentList	c		7218465	1					
ANR	7218647	Argument	c		7218465	0					
ANR	7218648	Identifier	c		7218465	0					
ANR	7218649	ExpressionStatement	"model256_update ( m , val )"	67:4:852:875	7218465	15	True				
ANR	7218650	CallExpression	"model256_update ( m , val )"		7218465	0					
ANR	7218651	Callee	model256_update		7218465	0					
ANR	7218652	Identifier	model256_update		7218465	0					
ANR	7218653	ArgumentList	m		7218465	1					
ANR	7218654	Argument	m		7218465	0					
ANR	7218655	Identifier	m		7218465	0					
ANR	7218656	Argument	val		7218465	1					
ANR	7218657	Identifier	val		7218465	0					
ANR	7218658	ReturnStatement	return val ;	71:4:884:894	7218465	16	True				
ANR	7218659	Identifier	val		7218465	0					
ANR	7218660	ReturnType	static int		7218465	1					
ANR	7218661	Identifier	rac_get_model256_sym		7218465	2					
ANR	7218662	ParameterList	"RangeCoder * c , Model256 * m"		7218465	3					
ANR	7218663	Parameter	RangeCoder * c	1:32:32:44	7218465	0	True				
ANR	7218664	ParameterType	RangeCoder *		7218465	0					
ANR	7218665	Identifier	c		7218465	1					
ANR	7218666	Parameter	Model256 * m	1:47:47:57	7218465	1	True				
ANR	7218667	ParameterType	Model256 *		7218465	0					
ANR	7218668	Identifier	m		7218465	1					
ANR	7218669	CFGEntryNode	ENTRY		7218465		True				
ANR	7218670	CFGExitNode	EXIT		7218465		True				
ANR	7218671	Symbol	val		7218465						
ANR	7218672	Symbol	prob		7218465						
ANR	7218673	Symbol	prob2		7218465						
ANR	7218674	Symbol	ssym		7218465						
ANR	7218675	Symbol	c		7218465						
ANR	7218676	Symbol	* m -> freqs		7218465						
ANR	7218677	Symbol	m -> secondary		7218465						
ANR	7218678	Symbol	m -> freqs		7218465						
ANR	7218679	Symbol	start		7218465						
ANR	7218680	Symbol	* val		7218465						
ANR	7218681	Symbol	m		7218465						
ANR	7218682	Symbol	* c		7218465						
ANR	7218683	Symbol	MODEL_SCALE		7218465						
ANR	7218684	Symbol	* ssym		7218465						
ANR	7218685	Symbol	c -> range		7218465						
ANR	7218686	Symbol	MODEL256_SEC_SCALE		7218465						
ANR	7218687	Symbol	RAC_BOTTOM		7218465						
ANR	7218688	Symbol	helper		7218465						
ANR	7218689	Symbol	* m -> secondary		7218465						
ANR	7218690	Symbol	* m		7218465						
ANR	7218691	Symbol	end		7218465						
ANR	7218692	Symbol	c -> low		7218465						
ANR	7218693	Symbol	* * m		7218465						
