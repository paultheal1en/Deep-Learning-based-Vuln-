command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1460317	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cpu_exec_03_1.c								
ANR	1460318	Function	cpu_exec	1:0:0:24221							
ANR	1460319	FunctionDef	cpu_exec (CPUArchState * env)		1460318	0					
ANR	1460320	CompoundStatement		3:0:33:24221	1460318	0					
ANR	1460321	IdentifierDeclStatement	CPUState * cpu = ENV_GET_CPU ( env ) ;	5:4:40:72	1460318	0	True				
ANR	1460322	IdentifierDecl	* cpu = ENV_GET_CPU ( env )		1460318	0					
ANR	1460323	IdentifierDeclType	CPUState *		1460318	0					
ANR	1460324	Identifier	cpu		1460318	1					
ANR	1460325	AssignmentExpression	* cpu = ENV_GET_CPU ( env )		1460318	2		=			
ANR	1460326	Identifier	cpu		1460318	0					
ANR	1460327	CallExpression	ENV_GET_CPU ( env )		1460318	1					
ANR	1460328	Callee	ENV_GET_CPU		1460318	0					
ANR	1460329	Identifier	ENV_GET_CPU		1460318	0					
ANR	1460330	ArgumentList	env		1460318	1					
ANR	1460331	Argument	env		1460318	0					
ANR	1460332	Identifier	env		1460318	0					
ANR	1460333	Statement	(	9:6:119:119	1460318	1	True				
ANR	1460334	Statement	defined	9:7:120:126	1460318	2	True				
ANR	1460335	Statement	(	9:14:127:127	1460318	3	True				
ANR	1460336	Statement	TARGET_M68K	9:15:128:138	1460318	4	True				
ANR	1460337	Statement	)	9:26:139:139	1460318	5	True				
ANR	1460338	Statement	||	9:28:141:142	1460318	6	True				
ANR	1460339	Statement	defined	9:31:144:150	1460318	7	True				
ANR	1460340	Statement	(	9:38:151:151	1460318	8	True				
ANR	1460341	Statement	TARGET_PPC	9:39:152:161	1460318	9	True				
ANR	1460342	Statement	)	9:49:162:162	1460318	10	True				
ANR	1460343	Statement	||	9:51:164:165	1460318	11	True				
ANR	1460344	Statement	defined	9:54:167:173	1460318	12	True				
ANR	1460345	Statement	(	9:61:174:174	1460318	13	True				
ANR	1460346	Statement	TARGET_S390X	9:62:175:186	1460318	14	True				
ANR	1460347	Statement	)	9:74:187:187	1460318	15	True				
ANR	1460348	Statement	)	9:75:188:188	1460318	16	True				
ANR	1460349	Statement	)	9:76:189:189	1460318	17	True				
ANR	1460350	IdentifierDeclStatement	CPUClass * cc = CPU_GET_CLASS ( cpu ) ;	11:4:196:229	1460318	18	True				
ANR	1460351	IdentifierDecl	* cc = CPU_GET_CLASS ( cpu )		1460318	0					
ANR	1460352	IdentifierDeclType	CPUClass *		1460318	0					
ANR	1460353	Identifier	cc		1460318	1					
ANR	1460354	AssignmentExpression	* cc = CPU_GET_CLASS ( cpu )		1460318	2		=			
ANR	1460355	Identifier	cc		1460318	0					
ANR	1460356	CallExpression	CPU_GET_CLASS ( cpu )		1460318	1					
ANR	1460357	Callee	CPU_GET_CLASS		1460318	0					
ANR	1460358	Identifier	CPU_GET_CLASS		1460318	0					
ANR	1460359	ArgumentList	cpu		1460318	1					
ANR	1460360	Argument	cpu		1460318	0					
ANR	1460361	Identifier	cpu		1460318	0					
ANR	1460362	IdentifierDeclStatement	X86CPU * x86_cpu = X86_CPU ( cpu ) ;	17:4:264:294	1460318	19	True				
ANR	1460363	IdentifierDecl	* x86_cpu = X86_CPU ( cpu )		1460318	0					
ANR	1460364	IdentifierDeclType	X86CPU *		1460318	0					
ANR	1460365	Identifier	x86_cpu		1460318	1					
ANR	1460366	AssignmentExpression	* x86_cpu = X86_CPU ( cpu )		1460318	2		=			
ANR	1460367	Identifier	x86_cpu		1460318	0					
ANR	1460368	CallExpression	X86_CPU ( cpu )		1460318	1					
ANR	1460369	Callee	X86_CPU		1460318	0					
ANR	1460370	Identifier	X86_CPU		1460318	0					
ANR	1460371	ArgumentList	cpu		1460318	1					
ANR	1460372	Argument	cpu		1460318	0					
ANR	1460373	Identifier	cpu		1460318	0					
ANR	1460374	IdentifierDeclStatement	"int ret , interrupt_request ;"	21:4:309:335	1460318	20	True				
ANR	1460375	IdentifierDecl	ret		1460318	0					
ANR	1460376	IdentifierDeclType	int		1460318	0					
ANR	1460377	Identifier	ret		1460318	1					
ANR	1460378	IdentifierDecl	interrupt_request		1460318	1					
ANR	1460379	IdentifierDeclType	int		1460318	0					
ANR	1460380	Identifier	interrupt_request		1460318	1					
ANR	1460381	IdentifierDeclStatement	TranslationBlock * tb ;	23:4:342:362	1460318	21	True				
ANR	1460382	IdentifierDecl	* tb		1460318	0					
ANR	1460383	IdentifierDeclType	TranslationBlock *		1460318	0					
ANR	1460384	Identifier	tb		1460318	1					
ANR	1460385	IdentifierDeclStatement	uint8_t * tc_ptr ;	25:4:369:384	1460318	22	True				
ANR	1460386	IdentifierDecl	* tc_ptr		1460318	0					
ANR	1460387	IdentifierDeclType	uint8_t *		1460318	0					
ANR	1460388	Identifier	tc_ptr		1460318	1					
ANR	1460389	IdentifierDeclStatement	uintptr_t next_tb ;	27:4:391:408	1460318	23	True				
ANR	1460390	IdentifierDecl	next_tb		1460318	0					
ANR	1460391	IdentifierDeclType	uintptr_t		1460318	0					
ANR	1460392	Identifier	next_tb		1460318	1					
ANR	1460393	IfStatement	if ( cpu -> halted )		1460318	24					
ANR	1460394	Condition	cpu -> halted	33:8:423:433	1460318	0	True				
ANR	1460395	PtrMemberAccess	cpu -> halted		1460318	0					
ANR	1460396	Identifier	cpu		1460318	0					
ANR	1460397	Identifier	halted		1460318	1					
ANR	1460398	CompoundStatement		31:21:402:402	1460318	1					
ANR	1460399	IfStatement	if ( ! cpu_has_work ( cpu ) )		1460318	0					
ANR	1460400	Condition	! cpu_has_work ( cpu )	35:12:451:468	1460318	0	True				
ANR	1460401	UnaryOperationExpression	! cpu_has_work ( cpu )		1460318	0					
ANR	1460402	UnaryOperator	!		1460318	0					
ANR	1460403	CallExpression	cpu_has_work ( cpu )		1460318	1					
ANR	1460404	Callee	cpu_has_work		1460318	0					
ANR	1460405	Identifier	cpu_has_work		1460318	0					
ANR	1460406	ArgumentList	cpu		1460318	1					
ANR	1460407	Argument	cpu		1460318	0					
ANR	1460408	Identifier	cpu		1460318	0					
ANR	1460409	CompoundStatement		33:32:437:437	1460318	1					
ANR	1460410	ReturnStatement	return EXCP_HALTED ;	37:12:486:504	1460318	0	True				
ANR	1460411	Identifier	EXCP_HALTED		1460318	0					
ANR	1460412	ExpressionStatement	cpu -> halted = 0	43:8:528:543	1460318	1	True				
ANR	1460413	AssignmentExpression	cpu -> halted = 0		1460318	0		=			
ANR	1460414	PtrMemberAccess	cpu -> halted		1460318	0					
ANR	1460415	Identifier	cpu		1460318	0					
ANR	1460416	Identifier	halted		1460318	1					
ANR	1460417	PrimaryExpression	0		1460318	1					
ANR	1460418	ExpressionStatement	current_cpu = cpu	49:4:559:576	1460318	25	True				
ANR	1460419	AssignmentExpression	current_cpu = cpu		1460318	0		=			
ANR	1460420	Identifier	current_cpu		1460318	0					
ANR	1460421	Identifier	cpu		1460318	1					
ANR	1460422	ExpressionStatement	smp_mb ( )	65:4:1033:1041	1460318	26	True				
ANR	1460423	CallExpression	smp_mb ( )		1460318	0					
ANR	1460424	Callee	smp_mb		1460318	0					
ANR	1460425	Identifier	smp_mb		1460318	0					
ANR	1460426	ArgumentList			1460318	1					
ANR	1460427	IfStatement	if ( unlikely ( exit_request ) )		1460318	27					
ANR	1460428	Condition	unlikely ( exit_request )	69:8:1054:1075	1460318	0	True				
ANR	1460429	CallExpression	unlikely ( exit_request )		1460318	0					
ANR	1460430	Callee	unlikely		1460318	0					
ANR	1460431	Identifier	unlikely		1460318	0					
ANR	1460432	ArgumentList	exit_request		1460318	1					
ANR	1460433	Argument	exit_request		1460318	0					
ANR	1460434	Identifier	exit_request		1460318	0					
ANR	1460435	CompoundStatement		67:32:1044:1044	1460318	1					
ANR	1460436	ExpressionStatement	cpu -> exit_request = 1	71:8:1089:1110	1460318	0	True				
ANR	1460437	AssignmentExpression	cpu -> exit_request = 1		1460318	0		=			
ANR	1460438	PtrMemberAccess	cpu -> exit_request		1460318	0					
ANR	1460439	Identifier	cpu		1460318	0					
ANR	1460440	Identifier	exit_request		1460318	1					
ANR	1460441	PrimaryExpression	1		1460318	1					
ANR	1460442	ExpressionStatement	CC_SRC = env -> eflags & ( CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )	81:4:1198:1262	1460318	28	True				
ANR	1460443	AssignmentExpression	CC_SRC = env -> eflags & ( CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )		1460318	0		=			
ANR	1460444	Identifier	CC_SRC		1460318	0					
ANR	1460445	BitAndExpression	env -> eflags & ( CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )		1460318	1		&			
ANR	1460446	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1460447	Identifier	env		1460318	0					
ANR	1460448	Identifier	eflags		1460318	1					
ANR	1460449	InclusiveOrExpression	CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460450	Identifier	CC_O		1460318	0					
ANR	1460451	InclusiveOrExpression	CC_S | CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460452	Identifier	CC_S		1460318	0					
ANR	1460453	InclusiveOrExpression	CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460454	Identifier	CC_Z		1460318	0					
ANR	1460455	InclusiveOrExpression	CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460456	Identifier	CC_A		1460318	0					
ANR	1460457	InclusiveOrExpression	CC_P | CC_C		1460318	1		|			
ANR	1460458	Identifier	CC_P		1460318	0					
ANR	1460459	Identifier	CC_C		1460318	1					
ANR	1460460	ExpressionStatement	env -> df = 1 - ( 2 * ( ( env -> eflags >> 10 ) & 1 ) )	83:4:1269:1314	1460318	29	True				
ANR	1460461	AssignmentExpression	env -> df = 1 - ( 2 * ( ( env -> eflags >> 10 ) & 1 ) )		1460318	0		=			
ANR	1460462	PtrMemberAccess	env -> df		1460318	0					
ANR	1460463	Identifier	env		1460318	0					
ANR	1460464	Identifier	df		1460318	1					
ANR	1460465	AdditiveExpression	1 - ( 2 * ( ( env -> eflags >> 10 ) & 1 ) )		1460318	1		-			
ANR	1460466	PrimaryExpression	1		1460318	0					
ANR	1460467	MultiplicativeExpression	2 * ( ( env -> eflags >> 10 ) & 1 )		1460318	1		*			
ANR	1460468	PrimaryExpression	2		1460318	0					
ANR	1460469	BitAndExpression	( env -> eflags >> 10 ) & 1		1460318	1		&			
ANR	1460470	ShiftExpression	env -> eflags >> 10		1460318	0		>>			
ANR	1460471	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1460472	Identifier	env		1460318	0					
ANR	1460473	Identifier	eflags		1460318	1					
ANR	1460474	PrimaryExpression	10		1460318	1					
ANR	1460475	PrimaryExpression	1		1460318	1					
ANR	1460476	ExpressionStatement	CC_OP = CC_OP_EFLAGS	85:4:1321:1341	1460318	30	True				
ANR	1460477	AssignmentExpression	CC_OP = CC_OP_EFLAGS		1460318	0		=			
ANR	1460478	Identifier	CC_OP		1460318	0					
ANR	1460479	Identifier	CC_OP_EFLAGS		1460318	1					
ANR	1460480	ExpressionStatement	env -> eflags &= ~ ( DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )	87:4:1348:1415	1460318	31	True				
ANR	1460481	AssignmentExpression	env -> eflags &= ~ ( DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )		1460318	0		&=			
ANR	1460482	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1460483	Identifier	env		1460318	0					
ANR	1460484	Identifier	eflags		1460318	1					
ANR	1460485	UnaryOperationExpression	~ ( DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C )		1460318	1					
ANR	1460486	UnaryOperator	~		1460318	0					
ANR	1460487	InclusiveOrExpression	DF_MASK | CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460488	Identifier	DF_MASK		1460318	0					
ANR	1460489	InclusiveOrExpression	CC_O | CC_S | CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460490	Identifier	CC_O		1460318	0					
ANR	1460491	InclusiveOrExpression	CC_S | CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460492	Identifier	CC_S		1460318	0					
ANR	1460493	InclusiveOrExpression	CC_Z | CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460494	Identifier	CC_Z		1460318	0					
ANR	1460495	InclusiveOrExpression	CC_A | CC_P | CC_C		1460318	1		|			
ANR	1460496	Identifier	CC_A		1460318	0					
ANR	1460497	InclusiveOrExpression	CC_P | CC_C		1460318	1		|			
ANR	1460498	Identifier	CC_P		1460318	0					
ANR	1460499	Identifier	CC_C		1460318	1					
ANR	1460500	ExpressionStatement	cpu -> exception_index = - 1	135:4:2055:2080	1460318	32	True				
ANR	1460501	AssignmentExpression	cpu -> exception_index = - 1		1460318	0		=			
ANR	1460502	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460503	Identifier	cpu		1460318	0					
ANR	1460504	Identifier	exception_index		1460318	1					
ANR	1460505	UnaryOperationExpression	- 1		1460318	1					
ANR	1460506	UnaryOperator	-		1460318	0					
ANR	1460507	PrimaryExpression	1		1460318	1					
ANR	1460508	ForStatement	for ( ; ; )		1460318	33					
ANR	1460509	CompoundStatement		139:12:2120:2120	1460318	0					
ANR	1460510	IfStatement	"if ( sigsetjmp ( cpu -> jmp_env , 0 ) == 0 )"		1460318	0					
ANR	1460511	Condition	"sigsetjmp ( cpu -> jmp_env , 0 ) == 0"	143:12:2169:2199	1460318	0	True				
ANR	1460512	EqualityExpression	"sigsetjmp ( cpu -> jmp_env , 0 ) == 0"		1460318	0		==			
ANR	1460513	CallExpression	"sigsetjmp ( cpu -> jmp_env , 0 )"		1460318	0					
ANR	1460514	Callee	sigsetjmp		1460318	0					
ANR	1460515	Identifier	sigsetjmp		1460318	0					
ANR	1460516	ArgumentList	cpu -> jmp_env		1460318	1					
ANR	1460517	Argument	cpu -> jmp_env		1460318	0					
ANR	1460518	PtrMemberAccess	cpu -> jmp_env		1460318	0					
ANR	1460519	Identifier	cpu		1460318	0					
ANR	1460520	Identifier	jmp_env		1460318	1					
ANR	1460521	Argument	0		1460318	1					
ANR	1460522	PrimaryExpression	0		1460318	0					
ANR	1460523	PrimaryExpression	0		1460318	1					
ANR	1460524	CompoundStatement		141:45:2168:2168	1460318	1					
ANR	1460525	IfStatement	if ( cpu -> exception_index >= 0 )		1460318	0					
ANR	1460526	Condition	cpu -> exception_index >= 0	147:16:2287:2311	1460318	0	True				
ANR	1460527	RelationalExpression	cpu -> exception_index >= 0		1460318	0		>=			
ANR	1460528	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460529	Identifier	cpu		1460318	0					
ANR	1460530	Identifier	exception_index		1460318	1					
ANR	1460531	PrimaryExpression	0		1460318	1					
ANR	1460532	CompoundStatement		145:43:2280:2280	1460318	1					
ANR	1460533	IfStatement	if ( cpu -> exception_index >= EXCP_INTERRUPT )		1460318	0					
ANR	1460534	Condition	cpu -> exception_index >= EXCP_INTERRUPT	149:20:2337:2374	1460318	0	True				
ANR	1460535	RelationalExpression	cpu -> exception_index >= EXCP_INTERRUPT		1460318	0		>=			
ANR	1460536	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460537	Identifier	cpu		1460318	0					
ANR	1460538	Identifier	exception_index		1460318	1					
ANR	1460539	Identifier	EXCP_INTERRUPT		1460318	1					
ANR	1460540	CompoundStatement		147:60:2343:2343	1460318	1					
ANR	1460541	ExpressionStatement	ret = cpu -> exception_index	153:20:2468:2494	1460318	0	True				
ANR	1460542	AssignmentExpression	ret = cpu -> exception_index		1460318	0		=			
ANR	1460543	Identifier	ret		1460318	0					
ANR	1460544	PtrMemberAccess	cpu -> exception_index		1460318	1					
ANR	1460545	Identifier	cpu		1460318	0					
ANR	1460546	Identifier	exception_index		1460318	1					
ANR	1460547	IfStatement	if ( ret == EXCP_DEBUG )		1460318	1					
ANR	1460548	Condition	ret == EXCP_DEBUG	155:24:2521:2537	1460318	0	True				
ANR	1460549	EqualityExpression	ret == EXCP_DEBUG		1460318	0		==			
ANR	1460550	Identifier	ret		1460318	0					
ANR	1460551	Identifier	EXCP_DEBUG		1460318	1					
ANR	1460552	CompoundStatement		153:43:2506:2506	1460318	1					
ANR	1460553	ExpressionStatement	cpu_handle_debug_exception ( env )	157:24:2567:2598	1460318	0	True				
ANR	1460554	CallExpression	cpu_handle_debug_exception ( env )		1460318	0					
ANR	1460555	Callee	cpu_handle_debug_exception		1460318	0					
ANR	1460556	Identifier	cpu_handle_debug_exception		1460318	0					
ANR	1460557	ArgumentList	env		1460318	1					
ANR	1460558	Argument	env		1460318	0					
ANR	1460559	Identifier	env		1460318	0					
ANR	1460560	BreakStatement	break ;	161:20:2644:2649	1460318	2	True				
ANR	1460561	ElseStatement	else		1460318	0					
ANR	1460562	CompoundStatement		161:23:2641:2641	1460318	0					
ANR	1460563	ExpressionStatement	cc -> do_interrupt ( cpu )	175:20:2931:2952	1460318	0	True				
ANR	1460564	CallExpression	cc -> do_interrupt ( cpu )		1460318	0					
ANR	1460565	Callee	cc -> do_interrupt		1460318	0					
ANR	1460566	PtrMemberAccess	cc -> do_interrupt		1460318	0					
ANR	1460567	Identifier	cc		1460318	0					
ANR	1460568	Identifier	do_interrupt		1460318	1					
ANR	1460569	ArgumentList	cpu		1460318	1					
ANR	1460570	Argument	cpu		1460318	0					
ANR	1460571	Identifier	cpu		1460318	0					
ANR	1460572	ExpressionStatement	ret = cpu -> exception_index	179:20:2983:3009	1460318	1	True				
ANR	1460573	AssignmentExpression	ret = cpu -> exception_index		1460318	0		=			
ANR	1460574	Identifier	ret		1460318	0					
ANR	1460575	PtrMemberAccess	cpu -> exception_index		1460318	1					
ANR	1460576	Identifier	cpu		1460318	0					
ANR	1460577	Identifier	exception_index		1460318	1					
ANR	1460578	BreakStatement	break ;	181:20:3032:3037	1460318	2	True				
ANR	1460579	ExpressionStatement	next_tb = 0	197:12:3195:3206	1460318	1	True				
ANR	1460580	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1460581	Identifier	next_tb		1460318	0					
ANR	1460582	PrimaryExpression	0		1460318	1					
ANR	1460583	ForStatement	for ( ; ; )		1460318	2					
ANR	1460584	CompoundStatement		197:20:3226:3226	1460318	0					
ANR	1460585	ExpressionStatement	interrupt_request = cpu -> interrupt_request	201:16:3279:3321	1460318	0	True				
ANR	1460586	AssignmentExpression	interrupt_request = cpu -> interrupt_request		1460318	0		=			
ANR	1460587	Identifier	interrupt_request		1460318	0					
ANR	1460588	PtrMemberAccess	cpu -> interrupt_request		1460318	1					
ANR	1460589	Identifier	cpu		1460318	0					
ANR	1460590	Identifier	interrupt_request		1460318	1					
ANR	1460591	IfStatement	if ( unlikely ( interrupt_request ) )		1460318	1					
ANR	1460592	Condition	unlikely ( interrupt_request )	203:20:3344:3370	1460318	0	True				
ANR	1460593	CallExpression	unlikely ( interrupt_request )		1460318	0					
ANR	1460594	Callee	unlikely		1460318	0					
ANR	1460595	Identifier	unlikely		1460318	0					
ANR	1460596	ArgumentList	interrupt_request		1460318	1					
ANR	1460597	Argument	interrupt_request		1460318	0					
ANR	1460598	Identifier	interrupt_request		1460318	0					
ANR	1460599	CompoundStatement		201:49:3339:3339	1460318	1					
ANR	1460600	IfStatement	if ( unlikely ( cpu -> singlestep_enabled & SSTEP_NOIRQ ) )		1460318	0					
ANR	1460601	Condition	unlikely ( cpu -> singlestep_enabled & SSTEP_NOIRQ )	205:24:3400:3446	1460318	0	True				
ANR	1460602	CallExpression	unlikely ( cpu -> singlestep_enabled & SSTEP_NOIRQ )		1460318	0					
ANR	1460603	Callee	unlikely		1460318	0					
ANR	1460604	Identifier	unlikely		1460318	0					
ANR	1460605	ArgumentList	cpu -> singlestep_enabled & SSTEP_NOIRQ		1460318	1					
ANR	1460606	Argument	cpu -> singlestep_enabled & SSTEP_NOIRQ		1460318	0					
ANR	1460607	BitAndExpression	cpu -> singlestep_enabled & SSTEP_NOIRQ		1460318	0		&			
ANR	1460608	PtrMemberAccess	cpu -> singlestep_enabled		1460318	0					
ANR	1460609	Identifier	cpu		1460318	0					
ANR	1460610	Identifier	singlestep_enabled		1460318	1					
ANR	1460611	Identifier	SSTEP_NOIRQ		1460318	1					
ANR	1460612	CompoundStatement		203:73:3415:3415	1460318	1					
ANR	1460613	ExpressionStatement	interrupt_request &= ~CPU_INTERRUPT_SSTEP_MASK	209:24:3551:3597	1460318	0	True				
ANR	1460614	AssignmentExpression	interrupt_request &= ~CPU_INTERRUPT_SSTEP_MASK		1460318	0		&=			
ANR	1460615	Identifier	interrupt_request		1460318	0					
ANR	1460616	Identifier	~CPU_INTERRUPT_SSTEP_MASK		1460318	1					
ANR	1460617	IfStatement	if ( interrupt_request & CPU_INTERRUPT_DEBUG )		1460318	1					
ANR	1460618	Condition	interrupt_request & CPU_INTERRUPT_DEBUG	213:24:3647:3685	1460318	0	True				
ANR	1460619	BitAndExpression	interrupt_request & CPU_INTERRUPT_DEBUG		1460318	0		&			
ANR	1460620	Identifier	interrupt_request		1460318	0					
ANR	1460621	Identifier	CPU_INTERRUPT_DEBUG		1460318	1					
ANR	1460622	CompoundStatement		211:65:3654:3654	1460318	1					
ANR	1460623	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_DEBUG	215:24:3715:3761	1460318	0	True				
ANR	1460624	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_DEBUG		1460318	0		&=			
ANR	1460625	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460626	Identifier	cpu		1460318	0					
ANR	1460627	Identifier	interrupt_request		1460318	1					
ANR	1460628	Identifier	~CPU_INTERRUPT_DEBUG		1460318	1					
ANR	1460629	ExpressionStatement	cpu -> exception_index = EXCP_DEBUG	217:24:3788:3821	1460318	1	True				
ANR	1460630	AssignmentExpression	cpu -> exception_index = EXCP_DEBUG		1460318	0		=			
ANR	1460631	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460632	Identifier	cpu		1460318	0					
ANR	1460633	Identifier	exception_index		1460318	1					
ANR	1460634	Identifier	EXCP_DEBUG		1460318	1					
ANR	1460635	ExpressionStatement	cpu_loop_exit ( cpu )	219:24:3848:3866	1460318	2	True				
ANR	1460636	CallExpression	cpu_loop_exit ( cpu )		1460318	0					
ANR	1460637	Callee	cpu_loop_exit		1460318	0					
ANR	1460638	Identifier	cpu_loop_exit		1460318	0					
ANR	1460639	ArgumentList	cpu		1460318	1					
ANR	1460640	Argument	cpu		1460318	0					
ANR	1460641	Identifier	cpu		1460318	0					
ANR	1460642	Statement	defined	225:4:3975:3981	1460318	2	True				
ANR	1460643	Statement	(	225:11:3982:3982	1460318	3	True				
ANR	1460644	Statement	TARGET_PPC	225:12:3983:3992	1460318	4	True				
ANR	1460645	Statement	)	225:22:3993:3993	1460318	5	True				
ANR	1460646	Statement	||	225:24:3995:3996	1460318	6	True				
ANR	1460647	Statement	defined	225:27:3998:4004	1460318	7	True				
ANR	1460648	Statement	(	225:34:4005:4005	1460318	8	True				
ANR	1460649	Statement	TARGET_ALPHA	225:35:4006:4017	1460318	9	True				
ANR	1460650	Statement	)	225:47:4018:4018	1460318	10	True				
ANR	1460651	Statement	||	225:49:4020:4021	1460318	11	True				
ANR	1460652	Statement	defined	225:52:4023:4029	1460318	12	True				
ANR	1460653	Statement	(	225:59:4030:4030	1460318	13	True				
ANR	1460654	Statement	TARGET_CRIS	225:60:4031:4041	1460318	14	True				
ANR	1460655	Statement	)	225:71:4042:4042	1460318	15	True				
ANR	1460656	Statement	||	225:73:4044:4045	1460318	16	True				
ANR	1460657	Statement	defined	227:4:4054:4060	1460318	17	True				
ANR	1460658	Statement	(	227:11:4061:4061	1460318	18	True				
ANR	1460659	Statement	TARGET_MICROBLAZE	227:12:4062:4078	1460318	19	True				
ANR	1460660	Statement	)	227:29:4079:4079	1460318	20	True				
ANR	1460661	Statement	||	227:31:4081:4082	1460318	21	True				
ANR	1460662	Statement	defined	227:34:4084:4090	1460318	22	True				
ANR	1460663	Statement	(	227:41:4091:4091	1460318	23	True				
ANR	1460664	Statement	TARGET_LM32	227:42:4092:4102	1460318	24	True				
ANR	1460665	Statement	)	227:53:4103:4103	1460318	25	True				
ANR	1460666	Statement	||	227:55:4105:4106	1460318	26	True				
ANR	1460667	Statement	defined	227:58:4108:4114	1460318	27	True				
ANR	1460668	Statement	(	227:65:4115:4115	1460318	28	True				
ANR	1460669	Statement	TARGET_UNICORE32	227:66:4116:4131	1460318	29	True				
ANR	1460670	Statement	)	227:82:4132:4132	1460318	30	True				
ANR	1460671	IfStatement	if ( interrupt_request & CPU_INTERRUPT_HALT )		1460318	31					
ANR	1460672	Condition	interrupt_request & CPU_INTERRUPT_HALT	229:24:4159:4196	1460318	0	True				
ANR	1460673	BitAndExpression	interrupt_request & CPU_INTERRUPT_HALT		1460318	0		&			
ANR	1460674	Identifier	interrupt_request		1460318	0					
ANR	1460675	Identifier	CPU_INTERRUPT_HALT		1460318	1					
ANR	1460676	CompoundStatement		227:64:4165:4165	1460318	1					
ANR	1460677	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_HALT	231:24:4226:4271	1460318	0	True				
ANR	1460678	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_HALT		1460318	0		&=			
ANR	1460679	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460680	Identifier	cpu		1460318	0					
ANR	1460681	Identifier	interrupt_request		1460318	1					
ANR	1460682	Identifier	~CPU_INTERRUPT_HALT		1460318	1					
ANR	1460683	ExpressionStatement	cpu -> halted = 1	233:24:4298:4313	1460318	1	True				
ANR	1460684	AssignmentExpression	cpu -> halted = 1		1460318	0		=			
ANR	1460685	PtrMemberAccess	cpu -> halted		1460318	0					
ANR	1460686	Identifier	cpu		1460318	0					
ANR	1460687	Identifier	halted		1460318	1					
ANR	1460688	PrimaryExpression	1		1460318	1					
ANR	1460689	ExpressionStatement	cpu -> exception_index = EXCP_HLT	235:24:4340:4371	1460318	2	True				
ANR	1460690	AssignmentExpression	cpu -> exception_index = EXCP_HLT		1460318	0		=			
ANR	1460691	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460692	Identifier	cpu		1460318	0					
ANR	1460693	Identifier	exception_index		1460318	1					
ANR	1460694	Identifier	EXCP_HLT		1460318	1					
ANR	1460695	ExpressionStatement	cpu_loop_exit ( cpu )	237:24:4398:4416	1460318	3	True				
ANR	1460696	CallExpression	cpu_loop_exit ( cpu )		1460318	0					
ANR	1460697	Callee	cpu_loop_exit		1460318	0					
ANR	1460698	Identifier	cpu_loop_exit		1460318	0					
ANR	1460699	ArgumentList	cpu		1460318	1					
ANR	1460700	Argument	cpu		1460318	0					
ANR	1460701	Identifier	cpu		1460318	0					
ANR	1460702	IfStatement	if ( interrupt_request & CPU_INTERRUPT_POLL )		1460318	32					
ANR	1460703	Condition	interrupt_request & CPU_INTERRUPT_POLL	247:24:4532:4569	1460318	0	True				
ANR	1460704	BitAndExpression	interrupt_request & CPU_INTERRUPT_POLL		1460318	0		&			
ANR	1460705	Identifier	interrupt_request		1460318	0					
ANR	1460706	Identifier	CPU_INTERRUPT_POLL		1460318	1					
ANR	1460707	CompoundStatement		245:64:4538:4538	1460318	1					
ANR	1460708	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_POLL	249:24:4599:4644	1460318	0	True				
ANR	1460709	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_POLL		1460318	0		&=			
ANR	1460710	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460711	Identifier	cpu		1460318	0					
ANR	1460712	Identifier	interrupt_request		1460318	1					
ANR	1460713	Identifier	~CPU_INTERRUPT_POLL		1460318	1					
ANR	1460714	ExpressionStatement	apic_poll_irq ( x86_cpu -> apic_state )	251:24:4671:4705	1460318	1	True				
ANR	1460715	CallExpression	apic_poll_irq ( x86_cpu -> apic_state )		1460318	0					
ANR	1460716	Callee	apic_poll_irq		1460318	0					
ANR	1460717	Identifier	apic_poll_irq		1460318	0					
ANR	1460718	ArgumentList	x86_cpu -> apic_state		1460318	1					
ANR	1460719	Argument	x86_cpu -> apic_state		1460318	0					
ANR	1460720	PtrMemberAccess	x86_cpu -> apic_state		1460318	0					
ANR	1460721	Identifier	x86_cpu		1460318	0					
ANR	1460722	Identifier	apic_state		1460318	1					
ANR	1460723	IfStatement	if ( interrupt_request & CPU_INTERRUPT_INIT )		1460318	33					
ANR	1460724	Condition	interrupt_request & CPU_INTERRUPT_INIT	257:24:4763:4800	1460318	0	True				
ANR	1460725	BitAndExpression	interrupt_request & CPU_INTERRUPT_INIT		1460318	0		&			
ANR	1460726	Identifier	interrupt_request		1460318	0					
ANR	1460727	Identifier	CPU_INTERRUPT_INIT		1460318	1					
ANR	1460728	CompoundStatement		255:64:4769:4769	1460318	1					
ANR	1460729	ExpressionStatement	"cpu_svm_check_intercept_param ( env , SVM_EXIT_INIT , 0 )"	259:28:4834:4945	1460318	0	True				
ANR	1460730	CallExpression	"cpu_svm_check_intercept_param ( env , SVM_EXIT_INIT , 0 )"		1460318	0					
ANR	1460731	Callee	cpu_svm_check_intercept_param		1460318	0					
ANR	1460732	Identifier	cpu_svm_check_intercept_param		1460318	0					
ANR	1460733	ArgumentList	env		1460318	1					
ANR	1460734	Argument	env		1460318	0					
ANR	1460735	Identifier	env		1460318	0					
ANR	1460736	Argument	SVM_EXIT_INIT		1460318	1					
ANR	1460737	Identifier	SVM_EXIT_INIT		1460318	0					
ANR	1460738	Argument	0		1460318	2					
ANR	1460739	PrimaryExpression	0		1460318	0					
ANR	1460740	ExpressionStatement	do_cpu_init ( x86_cpu )	263:28:4976:4996	1460318	1	True				
ANR	1460741	CallExpression	do_cpu_init ( x86_cpu )		1460318	0					
ANR	1460742	Callee	do_cpu_init		1460318	0					
ANR	1460743	Identifier	do_cpu_init		1460318	0					
ANR	1460744	ArgumentList	x86_cpu		1460318	1					
ANR	1460745	Argument	x86_cpu		1460318	0					
ANR	1460746	Identifier	x86_cpu		1460318	0					
ANR	1460747	ExpressionStatement	cpu -> exception_index = EXCP_HALTED	265:28:5027:5061	1460318	2	True				
ANR	1460748	AssignmentExpression	cpu -> exception_index = EXCP_HALTED		1460318	0		=			
ANR	1460749	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1460750	Identifier	cpu		1460318	0					
ANR	1460751	Identifier	exception_index		1460318	1					
ANR	1460752	Identifier	EXCP_HALTED		1460318	1					
ANR	1460753	ExpressionStatement	cpu_loop_exit ( cpu )	267:28:5092:5110	1460318	3	True				
ANR	1460754	CallExpression	cpu_loop_exit ( cpu )		1460318	0					
ANR	1460755	Callee	cpu_loop_exit		1460318	0					
ANR	1460756	Identifier	cpu_loop_exit		1460318	0					
ANR	1460757	ArgumentList	cpu		1460318	1					
ANR	1460758	Argument	cpu		1460318	0					
ANR	1460759	Identifier	cpu		1460318	0					
ANR	1460760	ElseStatement	else		1460318	0					
ANR	1460761	IfStatement	if ( interrupt_request & CPU_INTERRUPT_SIPI )		1460318	0					
ANR	1460762	Condition	interrupt_request & CPU_INTERRUPT_SIPI	269:31:5144:5181	1460318	0	True				
ANR	1460763	BitAndExpression	interrupt_request & CPU_INTERRUPT_SIPI		1460318	0		&			
ANR	1460764	Identifier	interrupt_request		1460318	0					
ANR	1460765	Identifier	CPU_INTERRUPT_SIPI		1460318	1					
ANR	1460766	CompoundStatement		267:71:5150:5150	1460318	1					
ANR	1460767	ExpressionStatement	do_cpu_sipi ( x86_cpu )	271:28:5215:5235	1460318	0	True				
ANR	1460768	CallExpression	do_cpu_sipi ( x86_cpu )		1460318	0					
ANR	1460769	Callee	do_cpu_sipi		1460318	0					
ANR	1460770	Identifier	do_cpu_sipi		1460318	0					
ANR	1460771	ArgumentList	x86_cpu		1460318	1					
ANR	1460772	Argument	x86_cpu		1460318	0					
ANR	1460773	Identifier	x86_cpu		1460318	0					
ANR	1460774	ElseStatement	else		1460318	0					
ANR	1460775	IfStatement	if ( env -> hflags2 & HF2_GIF_MASK )		1460318	0					
ANR	1460776	Condition	env -> hflags2 & HF2_GIF_MASK	273:31:5269:5295	1460318	0	True				
ANR	1460777	BitAndExpression	env -> hflags2 & HF2_GIF_MASK		1460318	0		&			
ANR	1460778	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460779	Identifier	env		1460318	0					
ANR	1460780	Identifier	hflags2		1460318	1					
ANR	1460781	Identifier	HF2_GIF_MASK		1460318	1					
ANR	1460782	CompoundStatement		271:60:5264:5264	1460318	1					
ANR	1460783	IfStatement	if ( ( interrupt_request & CPU_INTERRUPT_SMI ) && ! ( env -> hflags & HF_SMM_MASK ) )		1460318	0					
ANR	1460784	Condition	( interrupt_request & CPU_INTERRUPT_SMI ) && ! ( env -> hflags & HF_SMM_MASK )	275:28:5329:5428	1460318	0	True				
ANR	1460785	AndExpression	( interrupt_request & CPU_INTERRUPT_SMI ) && ! ( env -> hflags & HF_SMM_MASK )		1460318	0		&&			
ANR	1460786	BitAndExpression	interrupt_request & CPU_INTERRUPT_SMI		1460318	0		&			
ANR	1460787	Identifier	interrupt_request		1460318	0					
ANR	1460788	Identifier	CPU_INTERRUPT_SMI		1460318	1					
ANR	1460789	UnaryOperationExpression	! ( env -> hflags & HF_SMM_MASK )		1460318	1					
ANR	1460790	UnaryOperator	!		1460318	0					
ANR	1460791	BitAndExpression	env -> hflags & HF_SMM_MASK		1460318	1		&			
ANR	1460792	PtrMemberAccess	env -> hflags		1460318	0					
ANR	1460793	Identifier	env		1460318	0					
ANR	1460794	Identifier	hflags		1460318	1					
ANR	1460795	Identifier	HF_SMM_MASK		1460318	1					
ANR	1460796	CompoundStatement		275:58:5397:5397	1460318	1					
ANR	1460797	ExpressionStatement	"cpu_svm_check_intercept_param ( env , SVM_EXIT_SMI , 0 )"	279:28:5462:5572	1460318	0	True				
ANR	1460798	CallExpression	"cpu_svm_check_intercept_param ( env , SVM_EXIT_SMI , 0 )"		1460318	0					
ANR	1460799	Callee	cpu_svm_check_intercept_param		1460318	0					
ANR	1460800	Identifier	cpu_svm_check_intercept_param		1460318	0					
ANR	1460801	ArgumentList	env		1460318	1					
ANR	1460802	Argument	env		1460318	0					
ANR	1460803	Identifier	env		1460318	0					
ANR	1460804	Argument	SVM_EXIT_SMI		1460318	1					
ANR	1460805	Identifier	SVM_EXIT_SMI		1460318	0					
ANR	1460806	Argument	0		1460318	2					
ANR	1460807	PrimaryExpression	0		1460318	0					
ANR	1460808	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_SMI	283:28:5603:5647	1460318	1	True				
ANR	1460809	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_SMI		1460318	0		&=			
ANR	1460810	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460811	Identifier	cpu		1460318	0					
ANR	1460812	Identifier	interrupt_request		1460318	1					
ANR	1460813	Identifier	~CPU_INTERRUPT_SMI		1460318	1					
ANR	1460814	ExpressionStatement	do_smm_enter ( x86_cpu )	285:28:5678:5699	1460318	2	True				
ANR	1460815	CallExpression	do_smm_enter ( x86_cpu )		1460318	0					
ANR	1460816	Callee	do_smm_enter		1460318	0					
ANR	1460817	Identifier	do_smm_enter		1460318	0					
ANR	1460818	ArgumentList	x86_cpu		1460318	1					
ANR	1460819	Argument	x86_cpu		1460318	0					
ANR	1460820	Identifier	x86_cpu		1460318	0					
ANR	1460821	ExpressionStatement	next_tb = 0	287:28:5730:5741	1460318	3	True				
ANR	1460822	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1460823	Identifier	next_tb		1460318	0					
ANR	1460824	PrimaryExpression	0		1460318	1					
ANR	1460825	ElseStatement	else		1460318	0					
ANR	1460826	IfStatement	if ( ( interrupt_request & CPU_INTERRUPT_NMI ) && ! ( env -> hflags2 & HF2_NMI_MASK ) )		1460318	0					
ANR	1460827	Condition	( interrupt_request & CPU_INTERRUPT_NMI ) && ! ( env -> hflags2 & HF2_NMI_MASK )	289:35:5779:5887	1460318	0	True				
ANR	1460828	AndExpression	( interrupt_request & CPU_INTERRUPT_NMI ) && ! ( env -> hflags2 & HF2_NMI_MASK )		1460318	0		&&			
ANR	1460829	BitAndExpression	interrupt_request & CPU_INTERRUPT_NMI		1460318	0		&			
ANR	1460830	Identifier	interrupt_request		1460318	0					
ANR	1460831	Identifier	CPU_INTERRUPT_NMI		1460318	1					
ANR	1460832	UnaryOperationExpression	! ( env -> hflags2 & HF2_NMI_MASK )		1460318	1					
ANR	1460833	UnaryOperator	!		1460318	0					
ANR	1460834	BitAndExpression	env -> hflags2 & HF2_NMI_MASK		1460318	1		&			
ANR	1460835	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460836	Identifier	env		1460318	0					
ANR	1460837	Identifier	hflags2		1460318	1					
ANR	1460838	Identifier	HF2_NMI_MASK		1460318	1					
ANR	1460839	CompoundStatement		289:67:5856:5856	1460318	1					
ANR	1460840	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_NMI	293:28:5921:5965	1460318	0	True				
ANR	1460841	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_NMI		1460318	0		&=			
ANR	1460842	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460843	Identifier	cpu		1460318	0					
ANR	1460844	Identifier	interrupt_request		1460318	1					
ANR	1460845	Identifier	~CPU_INTERRUPT_NMI		1460318	1					
ANR	1460846	ExpressionStatement	env -> hflags2 |= HF2_NMI_MASK	295:28:5996:6024	1460318	1	True				
ANR	1460847	AssignmentExpression	env -> hflags2 |= HF2_NMI_MASK		1460318	0		|=			
ANR	1460848	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460849	Identifier	env		1460318	0					
ANR	1460850	Identifier	hflags2		1460318	1					
ANR	1460851	Identifier	HF2_NMI_MASK		1460318	1					
ANR	1460852	ExpressionStatement	"do_interrupt_x86_hardirq ( env , EXCP02_NMI , 1 )"	297:28:6055:6099	1460318	2	True				
ANR	1460853	CallExpression	"do_interrupt_x86_hardirq ( env , EXCP02_NMI , 1 )"		1460318	0					
ANR	1460854	Callee	do_interrupt_x86_hardirq		1460318	0					
ANR	1460855	Identifier	do_interrupt_x86_hardirq		1460318	0					
ANR	1460856	ArgumentList	env		1460318	1					
ANR	1460857	Argument	env		1460318	0					
ANR	1460858	Identifier	env		1460318	0					
ANR	1460859	Argument	EXCP02_NMI		1460318	1					
ANR	1460860	Identifier	EXCP02_NMI		1460318	0					
ANR	1460861	Argument	1		1460318	2					
ANR	1460862	PrimaryExpression	1		1460318	0					
ANR	1460863	ExpressionStatement	next_tb = 0	299:28:6130:6141	1460318	3	True				
ANR	1460864	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1460865	Identifier	next_tb		1460318	0					
ANR	1460866	PrimaryExpression	0		1460318	1					
ANR	1460867	ElseStatement	else		1460318	0					
ANR	1460868	IfStatement	if ( interrupt_request & CPU_INTERRUPT_MCE )		1460318	0					
ANR	1460869	Condition	interrupt_request & CPU_INTERRUPT_MCE	301:35:6179:6215	1460318	0	True				
ANR	1460870	BitAndExpression	interrupt_request & CPU_INTERRUPT_MCE		1460318	0		&			
ANR	1460871	Identifier	interrupt_request		1460318	0					
ANR	1460872	Identifier	CPU_INTERRUPT_MCE		1460318	1					
ANR	1460873	CompoundStatement		299:74:6184:6184	1460318	1					
ANR	1460874	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_MCE	303:28:6249:6293	1460318	0	True				
ANR	1460875	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_MCE		1460318	0		&=			
ANR	1460876	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460877	Identifier	cpu		1460318	0					
ANR	1460878	Identifier	interrupt_request		1460318	1					
ANR	1460879	Identifier	~CPU_INTERRUPT_MCE		1460318	1					
ANR	1460880	ExpressionStatement	"do_interrupt_x86_hardirq ( env , EXCP12_MCHK , 0 )"	305:28:6324:6369	1460318	1	True				
ANR	1460881	CallExpression	"do_interrupt_x86_hardirq ( env , EXCP12_MCHK , 0 )"		1460318	0					
ANR	1460882	Callee	do_interrupt_x86_hardirq		1460318	0					
ANR	1460883	Identifier	do_interrupt_x86_hardirq		1460318	0					
ANR	1460884	ArgumentList	env		1460318	1					
ANR	1460885	Argument	env		1460318	0					
ANR	1460886	Identifier	env		1460318	0					
ANR	1460887	Argument	EXCP12_MCHK		1460318	1					
ANR	1460888	Identifier	EXCP12_MCHK		1460318	0					
ANR	1460889	Argument	0		1460318	2					
ANR	1460890	PrimaryExpression	0		1460318	0					
ANR	1460891	ExpressionStatement	next_tb = 0	307:28:6400:6411	1460318	2	True				
ANR	1460892	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1460893	Identifier	next_tb		1460318	0					
ANR	1460894	PrimaryExpression	0		1460318	1					
ANR	1460895	ElseStatement	else		1460318	0					
ANR	1460896	IfStatement	if ( ( interrupt_request & CPU_INTERRUPT_HARD ) && ( ( ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> hflags2 & HF2_HIF_MASK ) ) || ( ! ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) ) ) ) )		1460318	0					
ANR	1460897	Condition	( interrupt_request & CPU_INTERRUPT_HARD ) && ( ( ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> hflags2 & HF2_HIF_MASK ) ) || ( ! ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) ) ) )	309:35:6449:6856	1460318	0	True				
ANR	1460898	AndExpression	( interrupt_request & CPU_INTERRUPT_HARD ) && ( ( ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> hflags2 & HF2_HIF_MASK ) ) || ( ! ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) ) ) )		1460318	0		&&			
ANR	1460899	BitAndExpression	interrupt_request & CPU_INTERRUPT_HARD		1460318	0		&			
ANR	1460900	Identifier	interrupt_request		1460318	0					
ANR	1460901	Identifier	CPU_INTERRUPT_HARD		1460318	1					
ANR	1460902	OrExpression	( ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> hflags2 & HF2_HIF_MASK ) ) || ( ! ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) ) )		1460318	1		||			
ANR	1460903	AndExpression	( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> hflags2 & HF2_HIF_MASK )		1460318	0		&&			
ANR	1460904	BitAndExpression	env -> hflags2 & HF2_VINTR_MASK		1460318	0		&			
ANR	1460905	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460906	Identifier	env		1460318	0					
ANR	1460907	Identifier	hflags2		1460318	1					
ANR	1460908	Identifier	HF2_VINTR_MASK		1460318	1					
ANR	1460909	BitAndExpression	env -> hflags2 & HF2_HIF_MASK		1460318	1		&			
ANR	1460910	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460911	Identifier	env		1460318	0					
ANR	1460912	Identifier	hflags2		1460318	1					
ANR	1460913	Identifier	HF2_HIF_MASK		1460318	1					
ANR	1460914	AndExpression	! ( env -> hflags2 & HF2_VINTR_MASK ) && ( env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) )		1460318	1		&&			
ANR	1460915	UnaryOperationExpression	! ( env -> hflags2 & HF2_VINTR_MASK )		1460318	0					
ANR	1460916	UnaryOperator	!		1460318	0					
ANR	1460917	BitAndExpression	env -> hflags2 & HF2_VINTR_MASK		1460318	1		&			
ANR	1460918	PtrMemberAccess	env -> hflags2		1460318	0					
ANR	1460919	Identifier	env		1460318	0					
ANR	1460920	Identifier	hflags2		1460318	1					
ANR	1460921	Identifier	HF2_VINTR_MASK		1460318	1					
ANR	1460922	AndExpression	env -> eflags & IF_MASK && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK )		1460318	1		&&			
ANR	1460923	BitAndExpression	env -> eflags & IF_MASK		1460318	0		&			
ANR	1460924	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1460925	Identifier	env		1460318	0					
ANR	1460926	Identifier	eflags		1460318	1					
ANR	1460927	Identifier	IF_MASK		1460318	1					
ANR	1460928	UnaryOperationExpression	! ( env -> hflags & HF_INHIBIT_IRQ_MASK )		1460318	1					
ANR	1460929	UnaryOperator	!		1460318	0					
ANR	1460930	BitAndExpression	env -> hflags & HF_INHIBIT_IRQ_MASK		1460318	1		&			
ANR	1460931	PtrMemberAccess	env -> hflags		1460318	0					
ANR	1460932	Identifier	env		1460318	0					
ANR	1460933	Identifier	hflags		1460318	1					
ANR	1460934	Identifier	HF_INHIBIT_IRQ_MASK		1460318	1					
ANR	1460935	CompoundStatement		319:28:6856:6865	1460318	1					
ANR	1460936	IdentifierDeclStatement	int intno ;	321:28:6890:6899	1460318	0	True				
ANR	1460937	IdentifierDecl	intno		1460318	0					
ANR	1460938	IdentifierDeclType	int		1460318	0					
ANR	1460939	Identifier	intno		1460318	1					
ANR	1460940	ExpressionStatement	"cpu_svm_check_intercept_param ( env , SVM_EXIT_INTR , 0 )"	323:28:6930:7041	1460318	1	True				
ANR	1460941	CallExpression	"cpu_svm_check_intercept_param ( env , SVM_EXIT_INTR , 0 )"		1460318	0					
ANR	1460942	Callee	cpu_svm_check_intercept_param		1460318	0					
ANR	1460943	Identifier	cpu_svm_check_intercept_param		1460318	0					
ANR	1460944	ArgumentList	env		1460318	1					
ANR	1460945	Argument	env		1460318	0					
ANR	1460946	Identifier	env		1460318	0					
ANR	1460947	Argument	SVM_EXIT_INTR		1460318	1					
ANR	1460948	Identifier	SVM_EXIT_INTR		1460318	0					
ANR	1460949	Argument	0		1460318	2					
ANR	1460950	PrimaryExpression	0		1460318	0					
ANR	1460951	ExpressionStatement	cpu -> interrupt_request &= ~ ( CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ )	327:28:7072:7197	1460318	2	True				
ANR	1460952	AssignmentExpression	cpu -> interrupt_request &= ~ ( CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ )		1460318	0		&=			
ANR	1460953	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1460954	Identifier	cpu		1460318	0					
ANR	1460955	Identifier	interrupt_request		1460318	1					
ANR	1460956	UnaryOperationExpression	~ ( CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ )		1460318	1					
ANR	1460957	UnaryOperator	~		1460318	0					
ANR	1460958	InclusiveOrExpression	CPU_INTERRUPT_HARD | CPU_INTERRUPT_VIRQ		1460318	1		|			
ANR	1460959	Identifier	CPU_INTERRUPT_HARD		1460318	0					
ANR	1460960	Identifier	CPU_INTERRUPT_VIRQ		1460318	1					
ANR	1460961	ExpressionStatement	intno = cpu_get_pic_interrupt ( env )	331:28:7228:7262	1460318	3	True				
ANR	1460962	AssignmentExpression	intno = cpu_get_pic_interrupt ( env )		1460318	0		=			
ANR	1460963	Identifier	intno		1460318	0					
ANR	1460964	CallExpression	cpu_get_pic_interrupt ( env )		1460318	1					
ANR	1460965	Callee	cpu_get_pic_interrupt		1460318	0					
ANR	1460966	Identifier	cpu_get_pic_interrupt		1460318	0					
ANR	1460967	ArgumentList	env		1460318	1					
ANR	1460968	Argument	env		1460318	0					
ANR	1460969	Identifier	env		1460318	0					
ANR	1460970	ExpressionStatement	"qemu_log_mask ( CPU_LOG_TB_IN_ASM , ""Servicing hardware INT=0x%02x\\n"" , intno )"	333:28:7293:7367	1460318	4	True				
ANR	1460971	CallExpression	"qemu_log_mask ( CPU_LOG_TB_IN_ASM , ""Servicing hardware INT=0x%02x\\n"" , intno )"		1460318	0					
ANR	1460972	Callee	qemu_log_mask		1460318	0					
ANR	1460973	Identifier	qemu_log_mask		1460318	0					
ANR	1460974	ArgumentList	CPU_LOG_TB_IN_ASM		1460318	1					
ANR	1460975	Argument	CPU_LOG_TB_IN_ASM		1460318	0					
ANR	1460976	Identifier	CPU_LOG_TB_IN_ASM		1460318	0					
ANR	1460977	Argument	"""Servicing hardware INT=0x%02x\\n"""		1460318	1					
ANR	1460978	PrimaryExpression	"""Servicing hardware INT=0x%02x\\n"""		1460318	0					
ANR	1460979	Argument	intno		1460318	2					
ANR	1460980	Identifier	intno		1460318	0					
ANR	1460981	ExpressionStatement	"do_interrupt_x86_hardirq ( env , intno , 1 )"	335:28:7398:7437	1460318	5	True				
ANR	1460982	CallExpression	"do_interrupt_x86_hardirq ( env , intno , 1 )"		1460318	0					
ANR	1460983	Callee	do_interrupt_x86_hardirq		1460318	0					
ANR	1460984	Identifier	do_interrupt_x86_hardirq		1460318	0					
ANR	1460985	ArgumentList	env		1460318	1					
ANR	1460986	Argument	env		1460318	0					
ANR	1460987	Identifier	env		1460318	0					
ANR	1460988	Argument	intno		1460318	1					
ANR	1460989	Identifier	intno		1460318	0					
ANR	1460990	Argument	1		1460318	2					
ANR	1460991	PrimaryExpression	1		1460318	0					
ANR	1460992	ExpressionStatement	next_tb = 0	341:28:7607:7618	1460318	6	True				
ANR	1460993	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1460994	Identifier	next_tb		1460318	0					
ANR	1460995	PrimaryExpression	0		1460318	1					
ANR	1460996	ElseStatement	else		1460318	0					
ANR	1460997	IfStatement	if ( ( interrupt_request & CPU_INTERRUPT_VIRQ ) && ( env -> eflags & IF_MASK ) && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK ) )		1460318	0					
ANR	1460998	Condition	( interrupt_request & CPU_INTERRUPT_VIRQ ) && ( env -> eflags & IF_MASK ) && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK )	345:35:7688:7867	1460318	0	True				
ANR	1460999	AndExpression	( interrupt_request & CPU_INTERRUPT_VIRQ ) && ( env -> eflags & IF_MASK ) && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK )		1460318	0		&&			
ANR	1461000	BitAndExpression	interrupt_request & CPU_INTERRUPT_VIRQ		1460318	0		&			
ANR	1461001	Identifier	interrupt_request		1460318	0					
ANR	1461002	Identifier	CPU_INTERRUPT_VIRQ		1460318	1					
ANR	1461003	AndExpression	( env -> eflags & IF_MASK ) && ! ( env -> hflags & HF_INHIBIT_IRQ_MASK )		1460318	1		&&			
ANR	1461004	BitAndExpression	env -> eflags & IF_MASK		1460318	0		&			
ANR	1461005	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1461006	Identifier	env		1460318	0					
ANR	1461007	Identifier	eflags		1460318	1					
ANR	1461008	Identifier	IF_MASK		1460318	1					
ANR	1461009	UnaryOperationExpression	! ( env -> hflags & HF_INHIBIT_IRQ_MASK )		1460318	1					
ANR	1461010	UnaryOperator	!		1460318	0					
ANR	1461011	BitAndExpression	env -> hflags & HF_INHIBIT_IRQ_MASK		1460318	1		&			
ANR	1461012	PtrMemberAccess	env -> hflags		1460318	0					
ANR	1461013	Identifier	env		1460318	0					
ANR	1461014	Identifier	hflags		1460318	1					
ANR	1461015	Identifier	HF_INHIBIT_IRQ_MASK		1460318	1					
ANR	1461016	CompoundStatement		349:28:7867:7876	1460318	1					
ANR	1461017	IdentifierDeclStatement	int intno ;	351:28:7901:7910	1460318	0	True				
ANR	1461018	IdentifierDecl	intno		1460318	0					
ANR	1461019	IdentifierDeclType	int		1460318	0					
ANR	1461020	Identifier	intno		1460318	1					
ANR	1461021	ExpressionStatement	"cpu_svm_check_intercept_param ( env , SVM_EXIT_VINTR , 0 )"	355:28:8007:8119	1460318	1	True				
ANR	1461022	CallExpression	"cpu_svm_check_intercept_param ( env , SVM_EXIT_VINTR , 0 )"		1460318	0					
ANR	1461023	Callee	cpu_svm_check_intercept_param		1460318	0					
ANR	1461024	Identifier	cpu_svm_check_intercept_param		1460318	0					
ANR	1461025	ArgumentList	env		1460318	1					
ANR	1461026	Argument	env		1460318	0					
ANR	1461027	Identifier	env		1460318	0					
ANR	1461028	Argument	SVM_EXIT_VINTR		1460318	1					
ANR	1461029	Identifier	SVM_EXIT_VINTR		1460318	0					
ANR	1461030	Argument	0		1460318	2					
ANR	1461031	PrimaryExpression	0		1460318	0					
ANR	1461032	Statement	intno	359:28:8150:8154	1460318	2	True				
ANR	1461033	Statement	=	359:34:8156:8156	1460318	3	True				
ANR	1461034	Statement	ldl_phys	359:36:8158:8165	1460318	4	True				
ANR	1461035	Statement	(	359:44:8166:8166	1460318	5	True				
ANR	1461036	Statement	cpu	359:45:8167:8169	1460318	6	True				
ANR	1461037	Statement	->	359:48:8170:8171	1460318	7	True				
ANR	1461038	Statement	as	359:50:8172:8173	1460318	8	True				
ANR	1461039	Statement	","	359:52:8174:8174	1460318	9	True				
ANR	1461040	Statement	env	361:45:8222:8224	1460318	10	True				
ANR	1461041	Statement	->	361:48:8225:8226	1460318	11	True				
ANR	1461042	Statement	vm_vmcb	361:50:8227:8233	1460318	12	True				
ANR	1461043	Statement	+	363:45:8281:8281	1460318	13	True				
ANR	1461044	Statement	offsetof	363:47:8283:8290	1460318	14	True				
ANR	1461045	Statement	(	363:55:8291:8291	1460318	15	True				
ANR	1461046	Statement	struct	363:56:8292:8297	1460318	16	True				
ANR	1461047	Statement	vmcb	363:63:8299:8302	1460318	17	True				
ANR	1461048	Statement	","	363:67:8303:8303	1460318	18	True				
ANR	1461049	Statement	control	365:56:8362:8368	1460318	19	True				
ANR	1461050	Statement	.	365:63:8369:8369	1460318	20	True				
ANR	1461051	Statement	int_vector	365:64:8370:8379	1460318	21	True				
ANR	1461052	Statement	)	365:74:8380:8380	1460318	22	True				
ANR	1461053	Statement	)	365:75:8381:8381	1460318	23	True				
ANR	1461054	ExpressionStatement		365:76:8382:8382	1460318	24	True				
ANR	1461055	ExpressionStatement	"qemu_log_mask ( CPU_LOG_TB_IN_ASM , ""Servicing virtual hardware INT=0x%02x\\n"" , intno )"	367:28:8413:8495	1460318	25	True				
ANR	1461056	CallExpression	"qemu_log_mask ( CPU_LOG_TB_IN_ASM , ""Servicing virtual hardware INT=0x%02x\\n"" , intno )"		1460318	0					
ANR	1461057	Callee	qemu_log_mask		1460318	0					
ANR	1461058	Identifier	qemu_log_mask		1460318	0					
ANR	1461059	ArgumentList	CPU_LOG_TB_IN_ASM		1460318	1					
ANR	1461060	Argument	CPU_LOG_TB_IN_ASM		1460318	0					
ANR	1461061	Identifier	CPU_LOG_TB_IN_ASM		1460318	0					
ANR	1461062	Argument	"""Servicing virtual hardware INT=0x%02x\\n"""		1460318	1					
ANR	1461063	PrimaryExpression	"""Servicing virtual hardware INT=0x%02x\\n"""		1460318	0					
ANR	1461064	Argument	intno		1460318	2					
ANR	1461065	Identifier	intno		1460318	0					
ANR	1461066	ExpressionStatement	"do_interrupt_x86_hardirq ( env , intno , 1 )"	369:28:8526:8565	1460318	26	True				
ANR	1461067	CallExpression	"do_interrupt_x86_hardirq ( env , intno , 1 )"		1460318	0					
ANR	1461068	Callee	do_interrupt_x86_hardirq		1460318	0					
ANR	1461069	Identifier	do_interrupt_x86_hardirq		1460318	0					
ANR	1461070	ArgumentList	env		1460318	1					
ANR	1461071	Argument	env		1460318	0					
ANR	1461072	Identifier	env		1460318	0					
ANR	1461073	Argument	intno		1460318	1					
ANR	1461074	Identifier	intno		1460318	0					
ANR	1461075	Argument	1		1460318	2					
ANR	1461076	PrimaryExpression	1		1460318	0					
ANR	1461077	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_VIRQ	371:28:8596:8641	1460318	27	True				
ANR	1461078	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_VIRQ		1460318	0		&=			
ANR	1461079	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1461080	Identifier	cpu		1460318	0					
ANR	1461081	Identifier	interrupt_request		1460318	1					
ANR	1461082	Identifier	~CPU_INTERRUPT_VIRQ		1460318	1					
ANR	1461083	ExpressionStatement	next_tb = 0	373:28:8672:8683	1460318	28	True				
ANR	1461084	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1461085	Identifier	next_tb		1460318	0					
ANR	1461086	PrimaryExpression	0		1460318	1					
ANR	1461087	IfStatement	if ( cpu -> interrupt_request & CPU_INTERRUPT_EXITTB )		1460318	34					
ANR	1461088	Condition	cpu -> interrupt_request & CPU_INTERRUPT_EXITTB	751:24:17776:17820	1460318	0	True				
ANR	1461089	BitAndExpression	cpu -> interrupt_request & CPU_INTERRUPT_EXITTB		1460318	0		&			
ANR	1461090	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1461091	Identifier	cpu		1460318	0					
ANR	1461092	Identifier	interrupt_request		1460318	1					
ANR	1461093	Identifier	CPU_INTERRUPT_EXITTB		1460318	1					
ANR	1461094	CompoundStatement		749:71:17789:17789	1460318	1					
ANR	1461095	ExpressionStatement	cpu -> interrupt_request &= ~CPU_INTERRUPT_EXITTB	753:24:17850:17897	1460318	0	True				
ANR	1461096	AssignmentExpression	cpu -> interrupt_request &= ~CPU_INTERRUPT_EXITTB		1460318	0		&=			
ANR	1461097	PtrMemberAccess	cpu -> interrupt_request		1460318	0					
ANR	1461098	Identifier	cpu		1460318	0					
ANR	1461099	Identifier	interrupt_request		1460318	1					
ANR	1461100	Identifier	~CPU_INTERRUPT_EXITTB		1460318	1					
ANR	1461101	ExpressionStatement	next_tb = 0	759:24:18055:18066	1460318	1	True				
ANR	1461102	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1461103	Identifier	next_tb		1460318	0					
ANR	1461104	PrimaryExpression	0		1460318	1					
ANR	1461105	IfStatement	if ( unlikely ( cpu -> exit_request ) )		1460318	2					
ANR	1461106	Condition	unlikely ( cpu -> exit_request )	765:20:18131:18157	1460318	0	True				
ANR	1461107	CallExpression	unlikely ( cpu -> exit_request )		1460318	0					
ANR	1461108	Callee	unlikely		1460318	0					
ANR	1461109	Identifier	unlikely		1460318	0					
ANR	1461110	ArgumentList	cpu -> exit_request		1460318	1					
ANR	1461111	Argument	cpu -> exit_request		1460318	0					
ANR	1461112	PtrMemberAccess	cpu -> exit_request		1460318	0					
ANR	1461113	Identifier	cpu		1460318	0					
ANR	1461114	Identifier	exit_request		1460318	1					
ANR	1461115	CompoundStatement		763:49:18126:18126	1460318	1					
ANR	1461116	ExpressionStatement	cpu -> exit_request = 0	767:20:18183:18204	1460318	0	True				
ANR	1461117	AssignmentExpression	cpu -> exit_request = 0		1460318	0		=			
ANR	1461118	PtrMemberAccess	cpu -> exit_request		1460318	0					
ANR	1461119	Identifier	cpu		1460318	0					
ANR	1461120	Identifier	exit_request		1460318	1					
ANR	1461121	PrimaryExpression	0		1460318	1					
ANR	1461122	ExpressionStatement	cpu -> exception_index = EXCP_INTERRUPT	769:20:18227:18264	1460318	1	True				
ANR	1461123	AssignmentExpression	cpu -> exception_index = EXCP_INTERRUPT		1460318	0		=			
ANR	1461124	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1461125	Identifier	cpu		1460318	0					
ANR	1461126	Identifier	exception_index		1460318	1					
ANR	1461127	Identifier	EXCP_INTERRUPT		1460318	1					
ANR	1461128	ExpressionStatement	cpu_loop_exit ( cpu )	771:20:18287:18305	1460318	2	True				
ANR	1461129	CallExpression	cpu_loop_exit ( cpu )		1460318	0					
ANR	1461130	Callee	cpu_loop_exit		1460318	0					
ANR	1461131	Identifier	cpu_loop_exit		1460318	0					
ANR	1461132	ArgumentList	cpu		1460318	1					
ANR	1461133	Argument	cpu		1460318	0					
ANR	1461134	Identifier	cpu		1460318	0					
ANR	1461135	ExpressionStatement	spin_lock ( & tcg_ctx . tb_ctx . tb_lock )	775:16:18343:18377	1460318	3	True				
ANR	1461136	CallExpression	spin_lock ( & tcg_ctx . tb_ctx . tb_lock )		1460318	0					
ANR	1461137	Callee	spin_lock		1460318	0					
ANR	1461138	Identifier	spin_lock		1460318	0					
ANR	1461139	ArgumentList	& tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461140	Argument	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461141	UnaryOperationExpression	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461142	UnaryOperator	&		1460318	0					
ANR	1461143	MemberAccess	tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461144	MemberAccess	tcg_ctx . tb_ctx		1460318	0					
ANR	1461145	Identifier	tcg_ctx		1460318	0					
ANR	1461146	Identifier	tb_ctx		1460318	1					
ANR	1461147	Identifier	tb_lock		1460318	1					
ANR	1461148	ExpressionStatement	have_tb_lock = true	777:16:18396:18415	1460318	4	True				
ANR	1461149	AssignmentExpression	have_tb_lock = true		1460318	0		=			
ANR	1461150	Identifier	have_tb_lock		1460318	0					
ANR	1461151	Identifier	true		1460318	1					
ANR	1461152	ExpressionStatement	tb = tb_find_fast ( env )	779:16:18434:18456	1460318	5	True				
ANR	1461153	AssignmentExpression	tb = tb_find_fast ( env )		1460318	0		=			
ANR	1461154	Identifier	tb		1460318	0					
ANR	1461155	CallExpression	tb_find_fast ( env )		1460318	1					
ANR	1461156	Callee	tb_find_fast		1460318	0					
ANR	1461157	Identifier	tb_find_fast		1460318	0					
ANR	1461158	ArgumentList	env		1460318	1					
ANR	1461159	Argument	env		1460318	0					
ANR	1461160	Identifier	env		1460318	0					
ANR	1461161	IfStatement	if ( tcg_ctx . tb_ctx . tb_invalidated_flag )		1460318	6					
ANR	1461162	Condition	tcg_ctx . tb_ctx . tb_invalidated_flag	785:20:18603:18636	1460318	0	True				
ANR	1461163	MemberAccess	tcg_ctx . tb_ctx . tb_invalidated_flag		1460318	0					
ANR	1461164	MemberAccess	tcg_ctx . tb_ctx		1460318	0					
ANR	1461165	Identifier	tcg_ctx		1460318	0					
ANR	1461166	Identifier	tb_ctx		1460318	1					
ANR	1461167	Identifier	tb_invalidated_flag		1460318	1					
ANR	1461168	CompoundStatement		783:56:18605:18605	1460318	1					
ANR	1461169	ExpressionStatement	next_tb = 0	793:20:18870:18881	1460318	0	True				
ANR	1461170	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1461171	Identifier	next_tb		1460318	0					
ANR	1461172	PrimaryExpression	0		1460318	1					
ANR	1461173	ExpressionStatement	tcg_ctx . tb_ctx . tb_invalidated_flag = 0	795:20:18904:18942	1460318	1	True				
ANR	1461174	AssignmentExpression	tcg_ctx . tb_ctx . tb_invalidated_flag = 0		1460318	0		=			
ANR	1461175	MemberAccess	tcg_ctx . tb_ctx . tb_invalidated_flag		1460318	0					
ANR	1461176	MemberAccess	tcg_ctx . tb_ctx		1460318	0					
ANR	1461177	Identifier	tcg_ctx		1460318	0					
ANR	1461178	Identifier	tb_ctx		1460318	1					
ANR	1461179	Identifier	tb_invalidated_flag		1460318	1					
ANR	1461180	PrimaryExpression	0		1460318	1					
ANR	1461181	IfStatement	if ( qemu_loglevel_mask ( CPU_LOG_EXEC ) )		1460318	7					
ANR	1461182	Condition	qemu_loglevel_mask ( CPU_LOG_EXEC )	799:20:18984:19015	1460318	0	True				
ANR	1461183	CallExpression	qemu_loglevel_mask ( CPU_LOG_EXEC )		1460318	0					
ANR	1461184	Callee	qemu_loglevel_mask		1460318	0					
ANR	1461185	Identifier	qemu_loglevel_mask		1460318	0					
ANR	1461186	ArgumentList	CPU_LOG_EXEC		1460318	1					
ANR	1461187	Argument	CPU_LOG_EXEC		1460318	0					
ANR	1461188	Identifier	CPU_LOG_EXEC		1460318	0					
ANR	1461189	CompoundStatement		797:54:18984:18984	1460318	1					
ANR	1461190	Statement	qemu_log	801:20:19041:19048	1460318	0	True				
ANR	1461191	Statement	(	801:28:19049:19049	1460318	1	True				
ANR	1461192	Statement	"""Trace %p ["""	801:29:19050:19061	1460318	2	True				
ANR	1461193	Statement	TARGET_FMT_lx	801:42:19063:19075	1460318	3	True				
ANR	1461194	Statement	"""] %s\\n"""	801:56:19077:19084	1460318	4	True				
ANR	1461195	Statement	","	801:64:19085:19085	1460318	5	True				
ANR	1461196	Statement	tb	803:29:19117:19118	1460318	6	True				
ANR	1461197	Statement	->	803:31:19119:19120	1460318	7	True				
ANR	1461198	Statement	tc_ptr	803:33:19121:19126	1460318	8	True				
ANR	1461199	Statement	","	803:39:19127:19127	1460318	9	True				
ANR	1461200	Statement	tb	803:41:19129:19130	1460318	10	True				
ANR	1461201	Statement	->	803:43:19131:19132	1460318	11	True				
ANR	1461202	Statement	pc	803:45:19133:19134	1460318	12	True				
ANR	1461203	Statement	","	803:47:19135:19135	1460318	13	True				
ANR	1461204	Statement	lookup_symbol	803:49:19137:19149	1460318	14	True				
ANR	1461205	Statement	(	803:62:19150:19150	1460318	15	True				
ANR	1461206	Statement	tb	803:63:19151:19152	1460318	16	True				
ANR	1461207	Statement	->	803:65:19153:19154	1460318	17	True				
ANR	1461208	Statement	pc	803:67:19155:19156	1460318	18	True				
ANR	1461209	Statement	)	803:69:19157:19157	1460318	19	True				
ANR	1461210	Statement	)	803:70:19158:19158	1460318	20	True				
ANR	1461211	ExpressionStatement		803:71:19159:19159	1460318	21	True				
ANR	1461212	IfStatement	if ( next_tb != 0 && tb -> page_addr [ 1 ] == - 1 )		1460318	8					
ANR	1461213	Condition	next_tb != 0 && tb -> page_addr [ 1 ] == - 1	813:20:19364:19401	1460318	0	True				
ANR	1461214	AndExpression	next_tb != 0 && tb -> page_addr [ 1 ] == - 1		1460318	0		&&			
ANR	1461215	EqualityExpression	next_tb != 0		1460318	0		!=			
ANR	1461216	Identifier	next_tb		1460318	0					
ANR	1461217	PrimaryExpression	0		1460318	1					
ANR	1461218	EqualityExpression	tb -> page_addr [ 1 ] == - 1		1460318	1		==			
ANR	1461219	ArrayIndexing	tb -> page_addr [ 1 ]		1460318	0					
ANR	1461220	PtrMemberAccess	tb -> page_addr		1460318	0					
ANR	1461221	Identifier	tb		1460318	0					
ANR	1461222	Identifier	page_addr		1460318	1					
ANR	1461223	PrimaryExpression	1		1460318	1					
ANR	1461224	UnaryOperationExpression	- 1		1460318	1					
ANR	1461225	UnaryOperator	-		1460318	0					
ANR	1461226	PrimaryExpression	1		1460318	1					
ANR	1461227	CompoundStatement		811:60:19370:19370	1460318	1					
ANR	1461228	ExpressionStatement	"tb_add_jump ( ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK ) , next_tb & TB_EXIT_MASK , tb )"	815:20:19427:19546	1460318	0	True				
ANR	1461229	CallExpression	"tb_add_jump ( ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK ) , next_tb & TB_EXIT_MASK , tb )"		1460318	0					
ANR	1461230	Callee	tb_add_jump		1460318	0					
ANR	1461231	Identifier	tb_add_jump		1460318	0					
ANR	1461232	ArgumentList	( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	1					
ANR	1461233	Argument	( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	0					
ANR	1461234	CastExpression	( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	0					
ANR	1461235	CastTarget	TranslationBlock *		1460318	0					
ANR	1461236	BitAndExpression	next_tb & ~TB_EXIT_MASK		1460318	1		&			
ANR	1461237	Identifier	next_tb		1460318	0					
ANR	1461238	Identifier	~TB_EXIT_MASK		1460318	1					
ANR	1461239	Argument	next_tb & TB_EXIT_MASK		1460318	1					
ANR	1461240	BitAndExpression	next_tb & TB_EXIT_MASK		1460318	0		&			
ANR	1461241	Identifier	next_tb		1460318	0					
ANR	1461242	Identifier	TB_EXIT_MASK		1460318	1					
ANR	1461243	Argument	tb		1460318	2					
ANR	1461244	Identifier	tb		1460318	0					
ANR	1461245	ExpressionStatement	have_tb_lock = false	821:16:19584:19604	1460318	9	True				
ANR	1461246	AssignmentExpression	have_tb_lock = false		1460318	0		=			
ANR	1461247	Identifier	have_tb_lock		1460318	0					
ANR	1461248	Identifier	false		1460318	1					
ANR	1461249	ExpressionStatement	spin_unlock ( & tcg_ctx . tb_ctx . tb_lock )	823:16:19623:19659	1460318	10	True				
ANR	1461250	CallExpression	spin_unlock ( & tcg_ctx . tb_ctx . tb_lock )		1460318	0					
ANR	1461251	Callee	spin_unlock		1460318	0					
ANR	1461252	Identifier	spin_unlock		1460318	0					
ANR	1461253	ArgumentList	& tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461254	Argument	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461255	UnaryOperationExpression	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461256	UnaryOperator	&		1460318	0					
ANR	1461257	MemberAccess	tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461258	MemberAccess	tcg_ctx . tb_ctx		1460318	0					
ANR	1461259	Identifier	tcg_ctx		1460318	0					
ANR	1461260	Identifier	tb_ctx		1460318	1					
ANR	1461261	Identifier	tb_lock		1460318	1					
ANR	1461262	ExpressionStatement	cpu -> current_tb = tb	835:16:19963:19983	1460318	11	True				
ANR	1461263	AssignmentExpression	cpu -> current_tb = tb		1460318	0		=			
ANR	1461264	PtrMemberAccess	cpu -> current_tb		1460318	0					
ANR	1461265	Identifier	cpu		1460318	0					
ANR	1461266	Identifier	current_tb		1460318	1					
ANR	1461267	Identifier	tb		1460318	1					
ANR	1461268	ExpressionStatement	barrier ( )	837:16:20002:20011	1460318	12	True				
ANR	1461269	CallExpression	barrier ( )		1460318	0					
ANR	1461270	Callee	barrier		1460318	0					
ANR	1461271	Identifier	barrier		1460318	0					
ANR	1461272	ArgumentList			1460318	1					
ANR	1461273	IfStatement	if ( likely ( ! cpu -> exit_request ) )		1460318	13					
ANR	1461274	Condition	likely ( ! cpu -> exit_request )	839:20:20034:20059	1460318	0	True				
ANR	1461275	CallExpression	likely ( ! cpu -> exit_request )		1460318	0					
ANR	1461276	Callee	likely		1460318	0					
ANR	1461277	Identifier	likely		1460318	0					
ANR	1461278	ArgumentList	! cpu -> exit_request		1460318	1					
ANR	1461279	Argument	! cpu -> exit_request		1460318	0					
ANR	1461280	UnaryOperationExpression	! cpu -> exit_request		1460318	0					
ANR	1461281	UnaryOperator	!		1460318	0					
ANR	1461282	PtrMemberAccess	cpu -> exit_request		1460318	1					
ANR	1461283	Identifier	cpu		1460318	0					
ANR	1461284	Identifier	exit_request		1460318	1					
ANR	1461285	CompoundStatement		837:48:20028:20028	1460318	1					
ANR	1461286	ExpressionStatement	tc_ptr = tb -> tc_ptr	841:20:20085:20104	1460318	0	True				
ANR	1461287	AssignmentExpression	tc_ptr = tb -> tc_ptr		1460318	0		=			
ANR	1461288	Identifier	tc_ptr		1460318	0					
ANR	1461289	PtrMemberAccess	tb -> tc_ptr		1460318	1					
ANR	1461290	Identifier	tb		1460318	0					
ANR	1461291	Identifier	tc_ptr		1460318	1					
ANR	1461292	ExpressionStatement	"next_tb = cpu_tb_exec ( cpu , tc_ptr )"	845:20:20181:20215	1460318	1	True				
ANR	1461293	AssignmentExpression	"next_tb = cpu_tb_exec ( cpu , tc_ptr )"		1460318	0		=			
ANR	1461294	Identifier	next_tb		1460318	0					
ANR	1461295	CallExpression	"cpu_tb_exec ( cpu , tc_ptr )"		1460318	1					
ANR	1461296	Callee	cpu_tb_exec		1460318	0					
ANR	1461297	Identifier	cpu_tb_exec		1460318	0					
ANR	1461298	ArgumentList	cpu		1460318	1					
ANR	1461299	Argument	cpu		1460318	0					
ANR	1461300	Identifier	cpu		1460318	0					
ANR	1461301	Argument	tc_ptr		1460318	1					
ANR	1461302	Identifier	tc_ptr		1460318	0					
ANR	1461303	SwitchStatement	switch ( next_tb & TB_EXIT_MASK )		1460318	2					
ANR	1461304	Condition	next_tb & TB_EXIT_MASK	847:28:20246:20267	1460318	0	True				
ANR	1461305	BitAndExpression	next_tb & TB_EXIT_MASK		1460318	0		&			
ANR	1461306	Identifier	next_tb		1460318	0					
ANR	1461307	Identifier	TB_EXIT_MASK		1460318	1					
ANR	1461308	CompoundStatement		845:52:20236:20236	1460318	1					
ANR	1461309	Label	case TB_EXIT_REQUESTED :	849:20:20293:20315	1460318	0	True				
ANR	1461310	Identifier	TB_EXIT_REQUESTED		1460318	0					
ANR	1461311	ExpressionStatement	tb = ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )	865:24:20773:20823	1460318	1	True				
ANR	1461312	AssignmentExpression	tb = ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	0		=			
ANR	1461313	Identifier	tb		1460318	0					
ANR	1461314	CastExpression	( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	1					
ANR	1461315	CastTarget	TranslationBlock *		1460318	0					
ANR	1461316	BitAndExpression	next_tb & ~TB_EXIT_MASK		1460318	1		&			
ANR	1461317	Identifier	next_tb		1460318	0					
ANR	1461318	Identifier	~TB_EXIT_MASK		1460318	1					
ANR	1461319	ExpressionStatement	next_tb = 0	867:24:20850:20861	1460318	2	True				
ANR	1461320	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1461321	Identifier	next_tb		1460318	0					
ANR	1461322	PrimaryExpression	0		1460318	1					
ANR	1461323	BreakStatement	break ;	869:24:20888:20893	1460318	3	True				
ANR	1461324	Label	case TB_EXIT_ICOUNT_EXPIRED :	871:20:20916:20943	1460318	4	True				
ANR	1461325	Identifier	TB_EXIT_ICOUNT_EXPIRED		1460318	0					
ANR	1461326	CompoundStatement		875:24:21020:21034	1460318	5					
ANR	1461327	IdentifierDeclStatement	int insns_left ;	877:24:21054:21068	1460318	0	True				
ANR	1461328	IdentifierDecl	insns_left		1460318	0					
ANR	1461329	IdentifierDeclType	int		1460318	0					
ANR	1461330	Identifier	insns_left		1460318	1					
ANR	1461331	ExpressionStatement	tb = ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )	879:24:21095:21145	1460318	1	True				
ANR	1461332	AssignmentExpression	tb = ( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	0		=			
ANR	1461333	Identifier	tb		1460318	0					
ANR	1461334	CastExpression	( TranslationBlock * ) ( next_tb & ~TB_EXIT_MASK )		1460318	1					
ANR	1461335	CastTarget	TranslationBlock *		1460318	0					
ANR	1461336	BitAndExpression	next_tb & ~TB_EXIT_MASK		1460318	1		&			
ANR	1461337	Identifier	next_tb		1460318	0					
ANR	1461338	Identifier	~TB_EXIT_MASK		1460318	1					
ANR	1461339	ExpressionStatement	insns_left = cpu -> icount_decr . u32	881:24:21172:21205	1460318	2	True				
ANR	1461340	AssignmentExpression	insns_left = cpu -> icount_decr . u32		1460318	0		=			
ANR	1461341	Identifier	insns_left		1460318	0					
ANR	1461342	MemberAccess	cpu -> icount_decr . u32		1460318	1					
ANR	1461343	PtrMemberAccess	cpu -> icount_decr		1460318	0					
ANR	1461344	Identifier	cpu		1460318	0					
ANR	1461345	Identifier	icount_decr		1460318	1					
ANR	1461346	Identifier	u32		1460318	1					
ANR	1461347	IfStatement	if ( cpu -> icount_extra && insns_left >= 0 )		1460318	3					
ANR	1461348	Condition	cpu -> icount_extra && insns_left >= 0	883:28:21236:21271	1460318	0	True				
ANR	1461349	AndExpression	cpu -> icount_extra && insns_left >= 0		1460318	0		&&			
ANR	1461350	PtrMemberAccess	cpu -> icount_extra		1460318	0					
ANR	1461351	Identifier	cpu		1460318	0					
ANR	1461352	Identifier	icount_extra		1460318	1					
ANR	1461353	RelationalExpression	insns_left >= 0		1460318	1		>=			
ANR	1461354	Identifier	insns_left		1460318	0					
ANR	1461355	PrimaryExpression	0		1460318	1					
ANR	1461356	CompoundStatement		881:66:21240:21240	1460318	1					
ANR	1461357	ExpressionStatement	cpu -> icount_extra += insns_left	887:28:21384:21415	1460318	0	True				
ANR	1461358	AssignmentExpression	cpu -> icount_extra += insns_left		1460318	0		+=			
ANR	1461359	PtrMemberAccess	cpu -> icount_extra		1460318	0					
ANR	1461360	Identifier	cpu		1460318	0					
ANR	1461361	Identifier	icount_extra		1460318	1					
ANR	1461362	Identifier	insns_left		1460318	1					
ANR	1461363	IfStatement	if ( cpu -> icount_extra > 0xffff )		1460318	1					
ANR	1461364	Condition	cpu -> icount_extra > 0xffff	889:32:21450:21475	1460318	0	True				
ANR	1461365	RelationalExpression	cpu -> icount_extra > 0xffff		1460318	0		>			
ANR	1461366	PtrMemberAccess	cpu -> icount_extra		1460318	0					
ANR	1461367	Identifier	cpu		1460318	0					
ANR	1461368	Identifier	icount_extra		1460318	1					
ANR	1461369	PrimaryExpression	0xffff		1460318	1					
ANR	1461370	CompoundStatement		887:60:21444:21444	1460318	1					
ANR	1461371	ExpressionStatement	insns_left = 0xffff	891:32:21513:21532	1460318	0	True				
ANR	1461372	AssignmentExpression	insns_left = 0xffff		1460318	0		=			
ANR	1461373	Identifier	insns_left		1460318	0					
ANR	1461374	PrimaryExpression	0xffff		1460318	1					
ANR	1461375	ElseStatement	else		1460318	0					
ANR	1461376	CompoundStatement		891:35:21536:21536	1460318	0					
ANR	1461377	ExpressionStatement	insns_left = cpu -> icount_extra	895:32:21605:21635	1460318	0	True				
ANR	1461378	AssignmentExpression	insns_left = cpu -> icount_extra		1460318	0		=			
ANR	1461379	Identifier	insns_left		1460318	0					
ANR	1461380	PtrMemberAccess	cpu -> icount_extra		1460318	1					
ANR	1461381	Identifier	cpu		1460318	0					
ANR	1461382	Identifier	icount_extra		1460318	1					
ANR	1461383	ExpressionStatement	cpu -> icount_extra -= insns_left	899:28:21697:21728	1460318	2	True				
ANR	1461384	AssignmentExpression	cpu -> icount_extra -= insns_left		1460318	0		-=			
ANR	1461385	PtrMemberAccess	cpu -> icount_extra		1460318	0					
ANR	1461386	Identifier	cpu		1460318	0					
ANR	1461387	Identifier	icount_extra		1460318	1					
ANR	1461388	Identifier	insns_left		1460318	1					
ANR	1461389	ExpressionStatement	cpu -> icount_decr . u16 . low = insns_left	901:28:21759:21796	1460318	3	True				
ANR	1461390	AssignmentExpression	cpu -> icount_decr . u16 . low = insns_left		1460318	0		=			
ANR	1461391	MemberAccess	cpu -> icount_decr . u16 . low		1460318	0					
ANR	1461392	MemberAccess	cpu -> icount_decr . u16		1460318	0					
ANR	1461393	PtrMemberAccess	cpu -> icount_decr		1460318	0					
ANR	1461394	Identifier	cpu		1460318	0					
ANR	1461395	Identifier	icount_decr		1460318	1					
ANR	1461396	Identifier	u16		1460318	1					
ANR	1461397	Identifier	low		1460318	1					
ANR	1461398	Identifier	insns_left		1460318	1					
ANR	1461399	ElseStatement	else		1460318	0					
ANR	1461400	CompoundStatement		901:31:21796:21796	1460318	0					
ANR	1461401	IfStatement	if ( insns_left > 0 )		1460318	0					
ANR	1461402	Condition	insns_left > 0	905:32:21865:21878	1460318	0	True				
ANR	1461403	RelationalExpression	insns_left > 0		1460318	0		>			
ANR	1461404	Identifier	insns_left		1460318	0					
ANR	1461405	PrimaryExpression	0		1460318	1					
ANR	1461406	CompoundStatement		903:48:21847:21847	1460318	1					
ANR	1461407	ExpressionStatement	"cpu_exec_nocache ( env , insns_left , tb )"	909:32:21988:22025	1460318	0	True				
ANR	1461408	CallExpression	"cpu_exec_nocache ( env , insns_left , tb )"		1460318	0					
ANR	1461409	Callee	cpu_exec_nocache		1460318	0					
ANR	1461410	Identifier	cpu_exec_nocache		1460318	0					
ANR	1461411	ArgumentList	env		1460318	1					
ANR	1461412	Argument	env		1460318	0					
ANR	1461413	Identifier	env		1460318	0					
ANR	1461414	Argument	insns_left		1460318	1					
ANR	1461415	Identifier	insns_left		1460318	0					
ANR	1461416	Argument	tb		1460318	2					
ANR	1461417	Identifier	tb		1460318	0					
ANR	1461418	ExpressionStatement	cpu -> exception_index = EXCP_INTERRUPT	913:28:22087:22124	1460318	1	True				
ANR	1461419	AssignmentExpression	cpu -> exception_index = EXCP_INTERRUPT		1460318	0		=			
ANR	1461420	PtrMemberAccess	cpu -> exception_index		1460318	0					
ANR	1461421	Identifier	cpu		1460318	0					
ANR	1461422	Identifier	exception_index		1460318	1					
ANR	1461423	Identifier	EXCP_INTERRUPT		1460318	1					
ANR	1461424	ExpressionStatement	next_tb = 0	915:28:22155:22166	1460318	2	True				
ANR	1461425	AssignmentExpression	next_tb = 0		1460318	0		=			
ANR	1461426	Identifier	next_tb		1460318	0					
ANR	1461427	PrimaryExpression	0		1460318	1					
ANR	1461428	ExpressionStatement	cpu_loop_exit ( cpu )	917:28:22197:22215	1460318	3	True				
ANR	1461429	CallExpression	cpu_loop_exit ( cpu )		1460318	0					
ANR	1461430	Callee	cpu_loop_exit		1460318	0					
ANR	1461431	Identifier	cpu_loop_exit		1460318	0					
ANR	1461432	ArgumentList	cpu		1460318	1					
ANR	1461433	Argument	cpu		1460318	0					
ANR	1461434	Identifier	cpu		1460318	0					
ANR	1461435	BreakStatement	break ;	921:24:22269:22274	1460318	4	True				
ANR	1461436	Label	default :	925:20:22320:22327	1460318	6	True				
ANR	1461437	Identifier	default		1460318	0					
ANR	1461438	BreakStatement	break ;	927:24:22354:22359	1460318	7	True				
ANR	1461439	ExpressionStatement	cpu -> current_tb = NULL	933:16:22420:22442	1460318	14	True				
ANR	1461440	AssignmentExpression	cpu -> current_tb = NULL		1460318	0		=			
ANR	1461441	PtrMemberAccess	cpu -> current_tb		1460318	0					
ANR	1461442	Identifier	cpu		1460318	0					
ANR	1461443	Identifier	current_tb		1460318	1					
ANR	1461444	Identifier	NULL		1460318	1					
ANR	1461445	ElseStatement	else		1460318	0					
ANR	1461446	CompoundStatement		939:15:22577:22577	1460318	0					
ANR	1461447	ExpressionStatement	cpu = current_cpu	947:12:22771:22788	1460318	0	True				
ANR	1461448	AssignmentExpression	cpu = current_cpu		1460318	0		=			
ANR	1461449	Identifier	cpu		1460318	0					
ANR	1461450	Identifier	current_cpu		1460318	1					
ANR	1461451	ExpressionStatement	env = cpu -> env_ptr	949:12:22803:22821	1460318	1	True				
ANR	1461452	AssignmentExpression	env = cpu -> env_ptr		1460318	0		=			
ANR	1461453	Identifier	env		1460318	0					
ANR	1461454	PtrMemberAccess	cpu -> env_ptr		1460318	1					
ANR	1461455	Identifier	cpu		1460318	0					
ANR	1461456	Identifier	env_ptr		1460318	1					
ANR	1461457	Statement	(	953:6:22868:22868	1460318	2	True				
ANR	1461458	Statement	defined	953:7:22869:22875	1460318	3	True				
ANR	1461459	Statement	(	953:14:22876:22876	1460318	4	True				
ANR	1461460	Statement	TARGET_M68K	953:15:22877:22887	1460318	5	True				
ANR	1461461	Statement	)	953:26:22888:22888	1460318	6	True				
ANR	1461462	Statement	||	953:28:22890:22891	1460318	7	True				
ANR	1461463	Statement	defined	953:31:22893:22899	1460318	8	True				
ANR	1461464	Statement	(	953:38:22900:22900	1460318	9	True				
ANR	1461465	Statement	TARGET_PPC	953:39:22901:22910	1460318	10	True				
ANR	1461466	Statement	)	953:49:22911:22911	1460318	11	True				
ANR	1461467	Statement	||	953:51:22913:22914	1460318	12	True				
ANR	1461468	Statement	defined	953:54:22916:22922	1460318	13	True				
ANR	1461469	Statement	(	953:61:22923:22923	1460318	14	True				
ANR	1461470	Statement	TARGET_S390X	953:62:22924:22935	1460318	15	True				
ANR	1461471	Statement	)	953:74:22936:22936	1460318	16	True				
ANR	1461472	Statement	)	953:75:22937:22937	1460318	17	True				
ANR	1461473	Statement	)	953:76:22938:22938	1460318	18	True				
ANR	1461474	ExpressionStatement	cc = CPU_GET_CLASS ( cpu )	955:12:22953:22976	1460318	19	True				
ANR	1461475	AssignmentExpression	cc = CPU_GET_CLASS ( cpu )		1460318	0		=			
ANR	1461476	Identifier	cc		1460318	0					
ANR	1461477	CallExpression	CPU_GET_CLASS ( cpu )		1460318	1					
ANR	1461478	Callee	CPU_GET_CLASS		1460318	0					
ANR	1461479	Identifier	CPU_GET_CLASS		1460318	0					
ANR	1461480	ArgumentList	cpu		1460318	1					
ANR	1461481	Argument	cpu		1460318	0					
ANR	1461482	Identifier	cpu		1460318	0					
ANR	1461483	ExpressionStatement	x86_cpu = X86_CPU ( cpu )	961:12:23019:23041	1460318	20	True				
ANR	1461484	AssignmentExpression	x86_cpu = X86_CPU ( cpu )		1460318	0		=			
ANR	1461485	Identifier	x86_cpu		1460318	0					
ANR	1461486	CallExpression	X86_CPU ( cpu )		1460318	1					
ANR	1461487	Callee	X86_CPU		1460318	0					
ANR	1461488	Identifier	X86_CPU		1460318	0					
ANR	1461489	ArgumentList	cpu		1460318	1					
ANR	1461490	Argument	cpu		1460318	0					
ANR	1461491	Identifier	cpu		1460318	0					
ANR	1461492	IfStatement	if ( have_tb_lock )		1460318	21					
ANR	1461493	Condition	have_tb_lock	965:16:23068:23079	1460318	0	True				
ANR	1461494	Identifier	have_tb_lock		1460318	0					
ANR	1461495	CompoundStatement		963:30:23048:23048	1460318	1					
ANR	1461496	ExpressionStatement	spin_unlock ( & tcg_ctx . tb_ctx . tb_lock )	967:16:23101:23137	1460318	0	True				
ANR	1461497	CallExpression	spin_unlock ( & tcg_ctx . tb_ctx . tb_lock )		1460318	0					
ANR	1461498	Callee	spin_unlock		1460318	0					
ANR	1461499	Identifier	spin_unlock		1460318	0					
ANR	1461500	ArgumentList	& tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461501	Argument	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461502	UnaryOperationExpression	& tcg_ctx . tb_ctx . tb_lock		1460318	0					
ANR	1461503	UnaryOperator	&		1460318	0					
ANR	1461504	MemberAccess	tcg_ctx . tb_ctx . tb_lock		1460318	1					
ANR	1461505	MemberAccess	tcg_ctx . tb_ctx		1460318	0					
ANR	1461506	Identifier	tcg_ctx		1460318	0					
ANR	1461507	Identifier	tb_ctx		1460318	1					
ANR	1461508	Identifier	tb_lock		1460318	1					
ANR	1461509	ExpressionStatement	have_tb_lock = false	969:16:23156:23176	1460318	1	True				
ANR	1461510	AssignmentExpression	have_tb_lock = false		1460318	0		=			
ANR	1461511	Identifier	have_tb_lock		1460318	0					
ANR	1461512	Identifier	false		1460318	1					
ANR	1461513	ExpressionStatement	"env -> eflags = env -> eflags | cpu_cc_compute_all ( env , CC_OP ) | ( env -> df & DF_MASK )"	985:4:23304:23393	1460318	34	True				
ANR	1461514	AssignmentExpression	"env -> eflags = env -> eflags | cpu_cc_compute_all ( env , CC_OP ) | ( env -> df & DF_MASK )"		1460318	0		=			
ANR	1461515	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1461516	Identifier	env		1460318	0					
ANR	1461517	Identifier	eflags		1460318	1					
ANR	1461518	InclusiveOrExpression	"env -> eflags | cpu_cc_compute_all ( env , CC_OP ) | ( env -> df & DF_MASK )"		1460318	1		|			
ANR	1461519	PtrMemberAccess	env -> eflags		1460318	0					
ANR	1461520	Identifier	env		1460318	0					
ANR	1461521	Identifier	eflags		1460318	1					
ANR	1461522	InclusiveOrExpression	"cpu_cc_compute_all ( env , CC_OP ) | ( env -> df & DF_MASK )"		1460318	1		|			
ANR	1461523	CallExpression	"cpu_cc_compute_all ( env , CC_OP )"		1460318	0					
ANR	1461524	Callee	cpu_cc_compute_all		1460318	0					
ANR	1461525	Identifier	cpu_cc_compute_all		1460318	0					
ANR	1461526	ArgumentList	env		1460318	1					
ANR	1461527	Argument	env		1460318	0					
ANR	1461528	Identifier	env		1460318	0					
ANR	1461529	Argument	CC_OP		1460318	1					
ANR	1461530	Identifier	CC_OP		1460318	0					
ANR	1461531	BitAndExpression	env -> df & DF_MASK		1460318	1		&			
ANR	1461532	PtrMemberAccess	env -> df		1460318	0					
ANR	1461533	Identifier	env		1460318	0					
ANR	1461534	Identifier	df		1460318	1					
ANR	1461535	Identifier	DF_MASK		1460318	1					
ANR	1461536	ExpressionStatement	current_cpu = NULL	1041:4:24183:24201	1460318	35	True				
ANR	1461537	AssignmentExpression	current_cpu = NULL		1460318	0		=			
ANR	1461538	Identifier	current_cpu		1460318	0					
ANR	1461539	Identifier	NULL		1460318	1					
ANR	1461540	ReturnStatement	return ret ;	1043:4:24208:24218	1460318	36	True				
ANR	1461541	Identifier	ret		1460318	0					
ANR	1461542	ReturnType	int		1460318	1					
ANR	1461543	Identifier	cpu_exec		1460318	2					
ANR	1461544	ParameterList	CPUArchState * env		1460318	3					
ANR	1461545	Parameter	CPUArchState * env	1:13:13:29	1460318	0	True				
ANR	1461546	ParameterType	CPUArchState *		1460318	0					
ANR	1461547	Identifier	env		1460318	1					
ANR	1461548	CFGEntryNode	ENTRY		1460318		True				
ANR	1461549	CFGExitNode	EXIT		1460318		True				
ANR	1461550	InfiniteForNode	true		1460318		True				
ANR	1461551	InfiniteForNode	true		1460318		True				
ANR	1461552	Symbol	CC_OP_EFLAGS		1460318						
ANR	1461553	Symbol	~CPU_INTERRUPT_EXITTB		1460318						
ANR	1461554	Symbol	EXCP02_NMI		1460318						
ANR	1461555	Symbol	cpu -> halted		1460318						
ANR	1461556	Symbol	qemu_loglevel_mask		1460318						
ANR	1461557	Symbol	env -> hflags2		1460318						
ANR	1461558	Symbol	intno		1460318						
ANR	1461559	Symbol	x86_cpu -> apic_state		1460318						
ANR	1461560	Symbol	cpu -> env_ptr		1460318						
ANR	1461561	Symbol	tb -> tc_ptr		1460318						
ANR	1461562	Symbol	~CPU_INTERRUPT_NMI		1460318						
ANR	1461563	Symbol	~CPU_INTERRUPT_MCE		1460318						
ANR	1461564	Symbol	unlikely		1460318						
ANR	1461565	Symbol	likely		1460318						
ANR	1461566	Symbol	next_tb		1460318						
ANR	1461567	Symbol	tcg_ctx . tb_ctx . tb_invalidated_flag		1460318						
ANR	1461568	Symbol	~CPU_INTERRUPT_POLL		1460318						
ANR	1461569	Symbol	exit_request		1460318						
ANR	1461570	Symbol	CC_Z		1460318						
ANR	1461571	Symbol	SVM_EXIT_VINTR		1460318						
ANR	1461572	Symbol	CC_S		1460318						
ANR	1461573	Symbol	CC_P		1460318						
ANR	1461574	Symbol	& tcg_ctx		1460318						
ANR	1461575	Symbol	* tb -> page_addr		1460318						
ANR	1461576	Symbol	CC_O		1460318						
ANR	1461577	Symbol	CPU_INTERRUPT_INIT		1460318						
ANR	1461578	Symbol	& tcg_ctx . tb_ctx . tb_lock		1460318						
ANR	1461579	Symbol	tcg_ctx . tb_ctx		1460318						
ANR	1461580	Symbol	* tb		1460318						
ANR	1461581	Symbol	current_cpu		1460318						
ANR	1461582	Symbol	CC_C		1460318						
ANR	1461583	Symbol	CC_A		1460318						
ANR	1461584	Symbol	CPU_GET_CLASS		1460318						
ANR	1461585	Symbol	env -> eflags		1460318						
ANR	1461586	Symbol	EXCP_INTERRUPT		1460318						
ANR	1461587	Symbol	cpu -> icount_decr		1460318						
ANR	1461588	Symbol	tb -> page_addr		1460318						
ANR	1461589	Symbol	sigsetjmp		1460318						
ANR	1461590	Symbol	CPU_INTERRUPT_HALT		1460318						
ANR	1461591	Symbol	HF_SMM_MASK		1460318						
ANR	1461592	Symbol	SVM_EXIT_INTR		1460318						
ANR	1461593	Symbol	cpu_tb_exec		1460318						
ANR	1461594	Symbol	env -> df		1460318						
ANR	1461595	Symbol	cpu_has_work		1460318						
ANR	1461596	Symbol	CC_SRC		1460318						
ANR	1461597	Symbol	tcg_ctx		1460318						
ANR	1461598	Symbol	CPU_INTERRUPT_VIRQ		1460318						
ANR	1461599	Symbol	cc		1460318						
ANR	1461600	Symbol	cpu -> icount_decr . u16		1460318						
ANR	1461601	Symbol	& tcg_ctx . tb_ctx		1460318						
ANR	1461602	Symbol	* x86_cpu		1460318						
ANR	1461603	Symbol	TB_EXIT_MASK		1460318						
ANR	1461604	Symbol	cpu -> icount_decr . u16 . low		1460318						
ANR	1461605	Symbol	tb		1460318						
ANR	1461606	Symbol	~TB_EXIT_MASK		1460318						
ANR	1461607	Symbol	cpu -> jmp_env		1460318						
ANR	1461608	Symbol	DF_MASK		1460318						
ANR	1461609	Symbol	EXCP_HALTED		1460318						
ANR	1461610	Symbol	cpu -> current_tb		1460318						
ANR	1461611	Symbol	tb_find_fast		1460318						
ANR	1461612	Symbol	ENV_GET_CPU		1460318						
ANR	1461613	Symbol	HF2_HIF_MASK		1460318						
ANR	1461614	Symbol	HF2_NMI_MASK		1460318						
ANR	1461615	Symbol	~CPU_INTERRUPT_DEBUG		1460318						
ANR	1461616	Symbol	CPU_LOG_EXEC		1460318						
ANR	1461617	Symbol	HF_INHIBIT_IRQ_MASK		1460318						
ANR	1461618	Symbol	tc_ptr		1460318						
ANR	1461619	Symbol	cpu -> exit_request		1460318						
ANR	1461620	Symbol	cpu_get_pic_interrupt		1460318						
ANR	1461621	Symbol	CPU_INTERRUPT_DEBUG		1460318						
ANR	1461622	Symbol	ret		1460318						
ANR	1461623	Symbol	NULL		1460318						
ANR	1461624	Symbol	CPU_INTERRUPT_NMI		1460318						
ANR	1461625	Symbol	* env		1460318						
ANR	1461626	Symbol	cpu		1460318						
ANR	1461627	Symbol	cpu -> exception_index		1460318						
ANR	1461628	Symbol	cpu -> icount_decr . u32		1460318						
ANR	1461629	Symbol	CPU_INTERRUPT_MCE		1460318						
ANR	1461630	Symbol	have_tb_lock		1460318						
ANR	1461631	Symbol	IF_MASK		1460318						
ANR	1461632	Symbol	~CPU_INTERRUPT_VIRQ		1460318						
ANR	1461633	Symbol	cpu_cc_compute_all		1460318						
ANR	1461634	Symbol	true		1460318						
ANR	1461635	Symbol	EXCP_DEBUG		1460318						
ANR	1461636	Symbol	HF2_GIF_MASK		1460318						
ANR	1461637	Symbol	HF2_VINTR_MASK		1460318						
ANR	1461638	Symbol	SVM_EXIT_INIT		1460318						
ANR	1461639	Symbol	~CPU_INTERRUPT_HALT		1460318						
ANR	1461640	Symbol	cpu -> interrupt_request		1460318						
ANR	1461641	Symbol	CPU_INTERRUPT_POLL		1460318						
ANR	1461642	Symbol	env -> hflags		1460318						
ANR	1461643	Symbol	X86_CPU		1460318						
ANR	1461644	Symbol	CPU_INTERRUPT_EXITTB		1460318						
ANR	1461645	Symbol	EXCP_HLT		1460318						
ANR	1461646	Symbol	cpu -> icount_extra		1460318						
ANR	1461647	Symbol	insns_left		1460318						
ANR	1461648	Symbol	* * tb		1460318						
ANR	1461649	Symbol	SSTEP_NOIRQ		1460318						
ANR	1461650	Symbol	~CPU_INTERRUPT_SMI		1460318						
ANR	1461651	Symbol	false		1460318						
ANR	1461652	Symbol	env		1460318						
ANR	1461653	Symbol	* cpu		1460318						
ANR	1461654	Symbol	CPU_INTERRUPT_HARD		1460318						
ANR	1461655	Symbol	cpu -> singlestep_enabled		1460318						
ANR	1461656	Symbol	CPU_INTERRUPT_SMI		1460318						
ANR	1461657	Symbol	CC_OP		1460318						
ANR	1461658	Symbol	interrupt_request		1460318						
ANR	1461659	Symbol	CPU_LOG_TB_IN_ASM		1460318						
ANR	1461660	Symbol	CPU_INTERRUPT_SIPI		1460318						
ANR	1461661	Symbol	EXCP12_MCHK		1460318						
ANR	1461662	Symbol	~CPU_INTERRUPT_SSTEP_MASK		1460318						
ANR	1461663	Symbol	x86_cpu		1460318						
ANR	1461664	Symbol	SVM_EXIT_SMI		1460318						
