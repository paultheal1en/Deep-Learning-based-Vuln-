command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6949669	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_new_0.c								
ANR	6949670	Function	qemu_chr_new	1:0:0:668							
ANR	6949671	FunctionDef	"qemu_chr_new (const char * label , const char * filename , void ( * init ) ( struct CharDriverState * s ))"		6949670	0					
ANR	6949672	CompoundStatement		3:0:113:668	6949670	0					
ANR	6949673	IdentifierDeclStatement	const char * p ;	5:4:120:133	6949670	0	True				
ANR	6949674	IdentifierDecl	* p		6949670	0					
ANR	6949675	IdentifierDeclType	const char *		6949670	0					
ANR	6949676	Identifier	p		6949670	1					
ANR	6949677	IdentifierDeclStatement	CharDriverState * chr ;	7:4:140:160	6949670	1	True				
ANR	6949678	IdentifierDecl	* chr		6949670	0					
ANR	6949679	IdentifierDeclType	CharDriverState *		6949670	0					
ANR	6949680	Identifier	chr		6949670	1					
ANR	6949681	IdentifierDeclStatement	QemuOpts * opts ;	9:4:167:181	6949670	2	True				
ANR	6949682	IdentifierDecl	* opts		6949670	0					
ANR	6949683	IdentifierDeclType	QemuOpts *		6949670	0					
ANR	6949684	Identifier	opts		6949670	1					
ANR	6949685	IdentifierDeclStatement	Error * err = NULL ;	11:4:188:205	6949670	3	True				
ANR	6949686	IdentifierDecl	* err = NULL		6949670	0					
ANR	6949687	IdentifierDeclType	Error *		6949670	0					
ANR	6949688	Identifier	err		6949670	1					
ANR	6949689	AssignmentExpression	* err = NULL		6949670	2		=			
ANR	6949690	Identifier	NULL		6949670	0					
ANR	6949691	Identifier	NULL		6949670	1					
ANR	6949692	IfStatement	"if ( strstart ( filename , ""chardev:"" , & p ) )"		6949670	4					
ANR	6949693	Condition	"strstart ( filename , ""chardev:"" , & p )"	15:8:218:251	6949670	0	True				
ANR	6949694	CallExpression	"strstart ( filename , ""chardev:"" , & p )"		6949670	0					
ANR	6949695	Callee	strstart		6949670	0					
ANR	6949696	Identifier	strstart		6949670	0					
ANR	6949697	ArgumentList	filename		6949670	1					
ANR	6949698	Argument	filename		6949670	0					
ANR	6949699	Identifier	filename		6949670	0					
ANR	6949700	Argument	"""chardev:"""		6949670	1					
ANR	6949701	PrimaryExpression	"""chardev:"""		6949670	0					
ANR	6949702	Argument	& p		6949670	2					
ANR	6949703	UnaryOperationExpression	& p		6949670	0					
ANR	6949704	UnaryOperator	&		6949670	0					
ANR	6949705	Identifier	p		6949670	1					
ANR	6949706	CompoundStatement		13:44:140:140	6949670	1					
ANR	6949707	ReturnStatement	return qemu_chr_find ( p ) ;	17:8:265:288	6949670	0	True				
ANR	6949708	CallExpression	qemu_chr_find ( p )		6949670	0					
ANR	6949709	Callee	qemu_chr_find		6949670	0					
ANR	6949710	Identifier	qemu_chr_find		6949670	0					
ANR	6949711	ArgumentList	p		6949670	1					
ANR	6949712	Argument	p		6949670	0					
ANR	6949713	Identifier	p		6949670	0					
ANR	6949714	ExpressionStatement	"opts = qemu_chr_parse_compat ( label , filename )"	23:4:304:349	6949670	5	True				
ANR	6949715	AssignmentExpression	"opts = qemu_chr_parse_compat ( label , filename )"		6949670	0		=			
ANR	6949716	Identifier	opts		6949670	0					
ANR	6949717	CallExpression	"qemu_chr_parse_compat ( label , filename )"		6949670	1					
ANR	6949718	Callee	qemu_chr_parse_compat		6949670	0					
ANR	6949719	Identifier	qemu_chr_parse_compat		6949670	0					
ANR	6949720	ArgumentList	label		6949670	1					
ANR	6949721	Argument	label		6949670	0					
ANR	6949722	Identifier	label		6949670	0					
ANR	6949723	Argument	filename		6949670	1					
ANR	6949724	Identifier	filename		6949670	0					
ANR	6949725	IfStatement	if ( ! opts )		6949670	6					
ANR	6949726	Condition	! opts	25:8:360:364	6949670	0	True				
ANR	6949727	UnaryOperationExpression	! opts		6949670	0					
ANR	6949728	UnaryOperator	!		6949670	0					
ANR	6949729	Identifier	opts		6949670	1					
ANR	6949730	ReturnStatement	return NULL ;	27:8:376:387	6949670	1	True				
ANR	6949731	Identifier	NULL		6949670	0					
ANR	6949732	ExpressionStatement	"chr = qemu_chr_new_from_opts ( opts , init , & err )"	31:4:396:442	6949670	7	True				
ANR	6949733	AssignmentExpression	"chr = qemu_chr_new_from_opts ( opts , init , & err )"		6949670	0		=			
ANR	6949734	Identifier	chr		6949670	0					
ANR	6949735	CallExpression	"qemu_chr_new_from_opts ( opts , init , & err )"		6949670	1					
ANR	6949736	Callee	qemu_chr_new_from_opts		6949670	0					
ANR	6949737	Identifier	qemu_chr_new_from_opts		6949670	0					
ANR	6949738	ArgumentList	opts		6949670	1					
ANR	6949739	Argument	opts		6949670	0					
ANR	6949740	Identifier	opts		6949670	0					
ANR	6949741	Argument	init		6949670	1					
ANR	6949742	Identifier	init		6949670	0					
ANR	6949743	Argument	& err		6949670	2					
ANR	6949744	UnaryOperationExpression	& err		6949670	0					
ANR	6949745	UnaryOperator	&		6949670	0					
ANR	6949746	Identifier	err		6949670	1					
ANR	6949747	IfStatement	if ( err )		6949670	8					
ANR	6949748	Condition	err	33:8:453:455	6949670	0	True				
ANR	6949749	Identifier	err		6949670	0					
ANR	6949750	CompoundStatement		31:13:344:344	6949670	1					
ANR	6949751	ExpressionStatement	error_report_err ( err )	35:8:469:490	6949670	0	True				
ANR	6949752	CallExpression	error_report_err ( err )		6949670	0					
ANR	6949753	Callee	error_report_err		6949670	0					
ANR	6949754	Identifier	error_report_err		6949670	0					
ANR	6949755	ArgumentList	err		6949670	1					
ANR	6949756	Argument	err		6949670	0					
ANR	6949757	Identifier	err		6949670	0					
ANR	6949758	IfStatement	"if ( chr && qemu_opt_get_bool ( opts , ""mux"" , 0 ) )"		6949670	9					
ANR	6949759	Condition	"chr && qemu_opt_get_bool ( opts , ""mux"" , 0 )"	39:8:508:547	6949670	0	True				
ANR	6949760	AndExpression	"chr && qemu_opt_get_bool ( opts , ""mux"" , 0 )"		6949670	0		&&			
ANR	6949761	Identifier	chr		6949670	0					
ANR	6949762	CallExpression	"qemu_opt_get_bool ( opts , ""mux"" , 0 )"		6949670	1					
ANR	6949763	Callee	qemu_opt_get_bool		6949670	0					
ANR	6949764	Identifier	qemu_opt_get_bool		6949670	0					
ANR	6949765	ArgumentList	opts		6949670	1					
ANR	6949766	Argument	opts		6949670	0					
ANR	6949767	Identifier	opts		6949670	0					
ANR	6949768	Argument	"""mux"""		6949670	1					
ANR	6949769	PrimaryExpression	"""mux"""		6949670	0					
ANR	6949770	Argument	0		6949670	2					
ANR	6949771	PrimaryExpression	0		6949670	0					
ANR	6949772	CompoundStatement		37:50:436:436	6949670	1					
ANR	6949773	ExpressionStatement	qemu_chr_fe_claim_no_fail ( chr )	41:8:561:591	6949670	0	True				
ANR	6949774	CallExpression	qemu_chr_fe_claim_no_fail ( chr )		6949670	0					
ANR	6949775	Callee	qemu_chr_fe_claim_no_fail		6949670	0					
ANR	6949776	Identifier	qemu_chr_fe_claim_no_fail		6949670	0					
ANR	6949777	ArgumentList	chr		6949670	1					
ANR	6949778	Argument	chr		6949670	0					
ANR	6949779	Identifier	chr		6949670	0					
ANR	6949780	ExpressionStatement	"monitor_init ( chr , MONITOR_USE_READLINE )"	43:8:602:641	6949670	1	True				
ANR	6949781	CallExpression	"monitor_init ( chr , MONITOR_USE_READLINE )"		6949670	0					
ANR	6949782	Callee	monitor_init		6949670	0					
ANR	6949783	Identifier	monitor_init		6949670	0					
ANR	6949784	ArgumentList	chr		6949670	1					
ANR	6949785	Argument	chr		6949670	0					
ANR	6949786	Identifier	chr		6949670	0					
ANR	6949787	Argument	MONITOR_USE_READLINE		6949670	1					
ANR	6949788	Identifier	MONITOR_USE_READLINE		6949670	0					
ANR	6949789	ReturnStatement	return chr ;	47:4:655:665	6949670	10	True				
ANR	6949790	Identifier	chr		6949670	0					
ANR	6949791	ReturnType	CharDriverState *		6949670	1					
ANR	6949792	Identifier	qemu_chr_new		6949670	2					
ANR	6949793	ParameterList	"const char * label , const char * filename , void ( * init ) ( struct CharDriverState * s )"		6949670	3					
ANR	6949794	Parameter	const char * label	1:30:30:46	6949670	0	True				
ANR	6949795	ParameterType	const char *		6949670	0					
ANR	6949796	Identifier	label		6949670	1					
ANR	6949797	Parameter	const char * filename	1:49:49:68	6949670	1	True				
ANR	6949798	ParameterType	const char *		6949670	0					
ANR	6949799	Identifier	filename		6949670	1					
ANR	6949800	Parameter	void ( * init ) ( struct CharDriverState * s )	1:71:71:109	6949670	2	True				
ANR	6949801	ParameterType	(( struct CharDriverState * s ) void) *		6949670	0					
ANR	6949802	Identifier	init		6949670	1					
ANR	6949803	CFGEntryNode	ENTRY		6949670		True				
ANR	6949804	CFGExitNode	EXIT		6949670		True				
ANR	6949805	Symbol	init		6949670						
ANR	6949806	Symbol	qemu_chr_new_from_opts		6949670						
ANR	6949807	Symbol	NULL		6949670						
ANR	6949808	Symbol	err		6949670						
ANR	6949809	Symbol	qemu_chr_parse_compat		6949670						
ANR	6949810	Symbol	MONITOR_USE_READLINE		6949670						
ANR	6949811	Symbol	label		6949670						
ANR	6949812	Symbol	chr		6949670						
ANR	6949813	Symbol	& err		6949670						
ANR	6949814	Symbol	p		6949670						
ANR	6949815	Symbol	filename		6949670						
ANR	6949816	Symbol	opts		6949670						
ANR	6949817	Symbol	& p		6949670						
ANR	6949818	Symbol	qemu_opt_get_bool		6949670						
ANR	6949819	Symbol	strstart		6949670						
ANR	6949820	Symbol	qemu_chr_find		6949670						
