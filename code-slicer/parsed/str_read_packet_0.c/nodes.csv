command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8000804	File	/home/p4ultr4n/workplace/ReVeal/raw_code/str_read_packet_0.c								
ANR	8000805	Function	str_read_packet	1:0:0:4441							
ANR	8000806	FunctionDef	"str_read_packet (AVFormatContext * s , AVPacket * ret_pkt)"		8000805	0					
ANR	8000807	CompoundStatement		5:0:95:4441	8000805	0					
ANR	8000808	IdentifierDeclStatement	ByteIOContext * pb = s -> pb ;	7:4:102:127	8000805	0	True				
ANR	8000809	IdentifierDecl	* pb = s -> pb		8000805	0					
ANR	8000810	IdentifierDeclType	ByteIOContext *		8000805	0					
ANR	8000811	Identifier	pb		8000805	1					
ANR	8000812	AssignmentExpression	* pb = s -> pb		8000805	2		=			
ANR	8000813	Identifier	pb		8000805	0					
ANR	8000814	PtrMemberAccess	s -> pb		8000805	1					
ANR	8000815	Identifier	s		8000805	0					
ANR	8000816	Identifier	pb		8000805	1					
ANR	8000817	IdentifierDeclStatement	StrDemuxContext * str = s -> priv_data ;	9:4:134:169	8000805	1	True				
ANR	8000818	IdentifierDecl	* str = s -> priv_data		8000805	0					
ANR	8000819	IdentifierDeclType	StrDemuxContext *		8000805	0					
ANR	8000820	Identifier	str		8000805	1					
ANR	8000821	AssignmentExpression	* str = s -> priv_data		8000805	2		=			
ANR	8000822	Identifier	str		8000805	0					
ANR	8000823	PtrMemberAccess	s -> priv_data		8000805	1					
ANR	8000824	Identifier	s		8000805	0					
ANR	8000825	Identifier	priv_data		8000805	1					
ANR	8000826	IdentifierDeclStatement	unsigned char sector [ RAW_CD_SECTOR_SIZE ] ;	11:4:176:216	8000805	2	True				
ANR	8000827	IdentifierDecl	sector [ RAW_CD_SECTOR_SIZE ]		8000805	0					
ANR	8000828	IdentifierDeclType	unsigned char [ RAW_CD_SECTOR_SIZE ]		8000805	0					
ANR	8000829	Identifier	sector		8000805	1					
ANR	8000830	Identifier	RAW_CD_SECTOR_SIZE		8000805	2					
ANR	8000831	IdentifierDeclStatement	int channel ;	13:4:223:234	8000805	3	True				
ANR	8000832	IdentifierDecl	channel		8000805	0					
ANR	8000833	IdentifierDeclType	int		8000805	0					
ANR	8000834	Identifier	channel		8000805	1					
ANR	8000835	IdentifierDeclStatement	AVPacket * pkt ;	15:4:241:254	8000805	4	True				
ANR	8000836	IdentifierDecl	* pkt		8000805	0					
ANR	8000837	IdentifierDeclType	AVPacket *		8000805	0					
ANR	8000838	Identifier	pkt		8000805	1					
ANR	8000839	IdentifierDeclStatement	AVStream * st ;	17:4:261:273	8000805	5	True				
ANR	8000840	IdentifierDecl	* st		8000805	0					
ANR	8000841	IdentifierDeclType	AVStream *		8000805	0					
ANR	8000842	Identifier	st		8000805	1					
ANR	8000843	WhileStatement	while ( 1 )		8000805	6					
ANR	8000844	Condition	1	21:11:289:289	8000805	0	True				
ANR	8000845	PrimaryExpression	1		8000805	0					
ANR	8000846	CompoundStatement		17:14:196:196	8000805	1					
ANR	8000847	IfStatement	"if ( get_buffer ( pb , sector , RAW_CD_SECTOR_SIZE ) != RAW_CD_SECTOR_SIZE )"		8000805	0					
ANR	8000848	Condition	"get_buffer ( pb , sector , RAW_CD_SECTOR_SIZE ) != RAW_CD_SECTOR_SIZE"	25:12:309:372	8000805	0	True				
ANR	8000849	EqualityExpression	"get_buffer ( pb , sector , RAW_CD_SECTOR_SIZE ) != RAW_CD_SECTOR_SIZE"		8000805	0		!=			
ANR	8000850	CallExpression	"get_buffer ( pb , sector , RAW_CD_SECTOR_SIZE )"		8000805	0					
ANR	8000851	Callee	get_buffer		8000805	0					
ANR	8000852	Identifier	get_buffer		8000805	0					
ANR	8000853	ArgumentList	pb		8000805	1					
ANR	8000854	Argument	pb		8000805	0					
ANR	8000855	Identifier	pb		8000805	0					
ANR	8000856	Argument	sector		8000805	1					
ANR	8000857	Identifier	sector		8000805	0					
ANR	8000858	Argument	RAW_CD_SECTOR_SIZE		8000805	2					
ANR	8000859	Identifier	RAW_CD_SECTOR_SIZE		8000805	0					
ANR	8000860	Identifier	RAW_CD_SECTOR_SIZE		8000805	1					
ANR	8000861	ReturnStatement	return AVERROR ( EIO ) ;	27:12:388:407	8000805	1	True				
ANR	8000862	CallExpression	AVERROR ( EIO )		8000805	0					
ANR	8000863	Callee	AVERROR		8000805	0					
ANR	8000864	Identifier	AVERROR		8000805	0					
ANR	8000865	ArgumentList	EIO		8000805	1					
ANR	8000866	Argument	EIO		8000805	0					
ANR	8000867	Identifier	EIO		8000805	0					
ANR	8000868	ExpressionStatement	channel = sector [ 0x11 ]	31:8:420:442	8000805	1	True				
ANR	8000869	AssignmentExpression	channel = sector [ 0x11 ]		8000805	0		=			
ANR	8000870	Identifier	channel		8000805	0					
ANR	8000871	ArrayIndexing	sector [ 0x11 ]		8000805	1					
ANR	8000872	Identifier	sector		8000805	0					
ANR	8000873	PrimaryExpression	0x11		8000805	1					
ANR	8000874	IfStatement	if ( channel >= 32 )		8000805	2					
ANR	8000875	Condition	channel >= 32	33:12:457:469	8000805	0	True				
ANR	8000876	RelationalExpression	channel >= 32		8000805	0		>=			
ANR	8000877	Identifier	channel		8000805	0					
ANR	8000878	PrimaryExpression	32		8000805	1					
ANR	8000879	ReturnStatement	return AVERROR_INVALIDDATA ;	35:12:485:511	8000805	1	True				
ANR	8000880	Identifier	AVERROR_INVALIDDATA		8000805	0					
ANR	8000881	SwitchStatement	switch ( sector [ 0x12 ] & CDXA_TYPE_MASK )		8000805	3					
ANR	8000882	Condition	sector [ 0x12 ] & CDXA_TYPE_MASK	39:16:532:560	8000805	0	True				
ANR	8000883	BitAndExpression	sector [ 0x12 ] & CDXA_TYPE_MASK		8000805	0		&			
ANR	8000884	ArrayIndexing	sector [ 0x12 ]		8000805	0					
ANR	8000885	Identifier	sector		8000805	0					
ANR	8000886	PrimaryExpression	0x12		8000805	1					
ANR	8000887	Identifier	CDXA_TYPE_MASK		8000805	1					
ANR	8000888	CompoundStatement		35:47:467:467	8000805	1					
ANR	8000889	Label	case CDXA_TYPE_DATA :	43:8:576:595	8000805	0	True				
ANR	8000890	Identifier	CDXA_TYPE_DATA		8000805	0					
ANR	8000891	Label	case CDXA_TYPE_VIDEO :	45:8:606:626	8000805	1	True				
ANR	8000892	Identifier	CDXA_TYPE_VIDEO		8000805	0					
ANR	8000893	CompoundStatement		51:16:690:729	8000805	2					
ANR	8000894	IdentifierDeclStatement	int current_sector = AV_RL16 ( & sector [ 0x1C ] ) ;	51:16:662:705	8000805	0	True				
ANR	8000895	IdentifierDecl	current_sector = AV_RL16 ( & sector [ 0x1C ] )		8000805	0					
ANR	8000896	IdentifierDeclType	int		8000805	0					
ANR	8000897	Identifier	current_sector		8000805	1					
ANR	8000898	AssignmentExpression	current_sector = AV_RL16 ( & sector [ 0x1C ] )		8000805	2		=			
ANR	8000899	Identifier	current_sector		8000805	0					
ANR	8000900	CallExpression	AV_RL16 ( & sector [ 0x1C ] )		8000805	1					
ANR	8000901	Callee	AV_RL16		8000805	0					
ANR	8000902	Identifier	AV_RL16		8000805	0					
ANR	8000903	ArgumentList	& sector [ 0x1C ]		8000805	1					
ANR	8000904	Argument	& sector [ 0x1C ]		8000805	0					
ANR	8000905	UnaryOperationExpression	& sector [ 0x1C ]		8000805	0					
ANR	8000906	UnaryOperator	&		8000805	0					
ANR	8000907	ArrayIndexing	sector [ 0x1C ]		8000805	1					
ANR	8000908	Identifier	sector		8000805	0					
ANR	8000909	PrimaryExpression	0x1C		8000805	1					
ANR	8000910	IdentifierDeclStatement	int sector_count = AV_RL16 ( & sector [ 0x1E ] ) ;	53:16:724:767	8000805	1	True				
ANR	8000911	IdentifierDecl	sector_count = AV_RL16 ( & sector [ 0x1E ] )		8000805	0					
ANR	8000912	IdentifierDeclType	int		8000805	0					
ANR	8000913	Identifier	sector_count		8000805	1					
ANR	8000914	AssignmentExpression	sector_count = AV_RL16 ( & sector [ 0x1E ] )		8000805	2		=			
ANR	8000915	Identifier	sector_count		8000805	0					
ANR	8000916	CallExpression	AV_RL16 ( & sector [ 0x1E ] )		8000805	1					
ANR	8000917	Callee	AV_RL16		8000805	0					
ANR	8000918	Identifier	AV_RL16		8000805	0					
ANR	8000919	ArgumentList	& sector [ 0x1E ]		8000805	1					
ANR	8000920	Argument	& sector [ 0x1E ]		8000805	0					
ANR	8000921	UnaryOperationExpression	& sector [ 0x1E ]		8000805	0					
ANR	8000922	UnaryOperator	&		8000805	0					
ANR	8000923	ArrayIndexing	sector [ 0x1E ]		8000805	1					
ANR	8000924	Identifier	sector		8000805	0					
ANR	8000925	PrimaryExpression	0x1E		8000805	1					
ANR	8000926	IdentifierDeclStatement	int frame_size = AV_RL32 ( & sector [ 0x24 ] ) ;	55:16:786:825	8000805	2	True				
ANR	8000927	IdentifierDecl	frame_size = AV_RL32 ( & sector [ 0x24 ] )		8000805	0					
ANR	8000928	IdentifierDeclType	int		8000805	0					
ANR	8000929	Identifier	frame_size		8000805	1					
ANR	8000930	AssignmentExpression	frame_size = AV_RL32 ( & sector [ 0x24 ] )		8000805	2		=			
ANR	8000931	Identifier	frame_size		8000805	0					
ANR	8000932	CallExpression	AV_RL32 ( & sector [ 0x24 ] )		8000805	1					
ANR	8000933	Callee	AV_RL32		8000805	0					
ANR	8000934	Identifier	AV_RL32		8000805	0					
ANR	8000935	ArgumentList	& sector [ 0x24 ]		8000805	1					
ANR	8000936	Argument	& sector [ 0x24 ]		8000805	0					
ANR	8000937	UnaryOperationExpression	& sector [ 0x24 ]		8000805	0					
ANR	8000938	UnaryOperator	&		8000805	0					
ANR	8000939	ArrayIndexing	sector [ 0x24 ]		8000805	1					
ANR	8000940	Identifier	sector		8000805	0					
ANR	8000941	PrimaryExpression	0x24		8000805	1					
ANR	8000942	IfStatement	if ( ! ( frame_size >= 0 && current_sector < sector_count && sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size ) )		8000805	3					
ANR	8000943	Condition	! ( frame_size >= 0 && current_sector < sector_count && sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size )	59:19:849:995	8000805	0	True				
ANR	8000944	UnaryOperationExpression	! ( frame_size >= 0 && current_sector < sector_count && sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size )		8000805	0					
ANR	8000945	UnaryOperator	!		8000805	0					
ANR	8000946	AndExpression	frame_size >= 0 && current_sector < sector_count && sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size		8000805	1		&&			
ANR	8000947	RelationalExpression	frame_size >= 0		8000805	0		>=			
ANR	8000948	Identifier	frame_size		8000805	0					
ANR	8000949	PrimaryExpression	0		8000805	1					
ANR	8000950	AndExpression	current_sector < sector_count && sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size		8000805	1		&&			
ANR	8000951	RelationalExpression	current_sector < sector_count		8000805	0		<			
ANR	8000952	Identifier	current_sector		8000805	0					
ANR	8000953	Identifier	sector_count		8000805	1					
ANR	8000954	RelationalExpression	sector_count * VIDEO_DATA_CHUNK_SIZE >= frame_size		8000805	1		>=			
ANR	8000955	MultiplicativeExpression	sector_count * VIDEO_DATA_CHUNK_SIZE		8000805	0		*			
ANR	8000956	Identifier	sector_count		8000805	0					
ANR	8000957	Identifier	VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8000958	Identifier	frame_size		8000805	1					
ANR	8000959	CompoundStatement		59:73:901:901	8000805	1					
ANR	8000960	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Invalid parameters %d %d %d\\n"" , current_sector , sector_count , frame_size )"	65:20:1020:1118	8000805	0	True				
ANR	8000961	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Invalid parameters %d %d %d\\n"" , current_sector , sector_count , frame_size )"		8000805	0					
ANR	8000962	Callee	av_log		8000805	0					
ANR	8000963	Identifier	av_log		8000805	0					
ANR	8000964	ArgumentList	s		8000805	1					
ANR	8000965	Argument	s		8000805	0					
ANR	8000966	Identifier	s		8000805	0					
ANR	8000967	Argument	AV_LOG_ERROR		8000805	1					
ANR	8000968	Identifier	AV_LOG_ERROR		8000805	0					
ANR	8000969	Argument	"""Invalid parameters %d %d %d\\n"""		8000805	2					
ANR	8000970	PrimaryExpression	"""Invalid parameters %d %d %d\\n"""		8000805	0					
ANR	8000971	Argument	current_sector		8000805	3					
ANR	8000972	Identifier	current_sector		8000805	0					
ANR	8000973	Argument	sector_count		8000805	4					
ANR	8000974	Identifier	sector_count		8000805	0					
ANR	8000975	Argument	frame_size		8000805	5					
ANR	8000976	Identifier	frame_size		8000805	0					
ANR	8000977	ReturnStatement	return AVERROR_INVALIDDATA ;	67:20:1141:1167	8000805	1	True				
ANR	8000978	Identifier	AVERROR_INVALIDDATA		8000805	0					
ANR	8000979	IfStatement	if ( str -> channels [ channel ] . video_stream_index < 0 )		8000805	4					
ANR	8000980	Condition	str -> channels [ channel ] . video_stream_index < 0	73:19:1210:1254	8000805	0	True				
ANR	8000981	RelationalExpression	str -> channels [ channel ] . video_stream_index < 0		8000805	0		<			
ANR	8000982	MemberAccess	str -> channels [ channel ] . video_stream_index		8000805	0					
ANR	8000983	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8000984	PtrMemberAccess	str -> channels		8000805	0					
ANR	8000985	Identifier	str		8000805	0					
ANR	8000986	Identifier	channels		8000805	1					
ANR	8000987	Identifier	channel		8000805	1					
ANR	8000988	Identifier	video_stream_index		8000805	1					
ANR	8000989	PrimaryExpression	0		8000805	1					
ANR	8000990	CompoundStatement		69:65:1160:1160	8000805	1					
ANR	8000991	ExpressionStatement	"st = av_new_stream ( s , 0 )"	77:20:1330:1354	8000805	0	True				
ANR	8000992	AssignmentExpression	"st = av_new_stream ( s , 0 )"		8000805	0		=			
ANR	8000993	Identifier	st		8000805	0					
ANR	8000994	CallExpression	"av_new_stream ( s , 0 )"		8000805	1					
ANR	8000995	Callee	av_new_stream		8000805	0					
ANR	8000996	Identifier	av_new_stream		8000805	0					
ANR	8000997	ArgumentList	s		8000805	1					
ANR	8000998	Argument	s		8000805	0					
ANR	8000999	Identifier	s		8000805	0					
ANR	8001000	Argument	0		8000805	1					
ANR	8001001	PrimaryExpression	0		8000805	0					
ANR	8001002	IfStatement	if ( ! st )		8000805	1					
ANR	8001003	Condition	! st	79:24:1381:1383	8000805	0	True				
ANR	8001004	UnaryOperationExpression	! st		8000805	0					
ANR	8001005	UnaryOperator	!		8000805	0					
ANR	8001006	Identifier	st		8000805	1					
ANR	8001007	ReturnStatement	return AVERROR ( ENOMEM ) ;	81:24:1411:1433	8000805	1	True				
ANR	8001008	CallExpression	AVERROR ( ENOMEM )		8000805	0					
ANR	8001009	Callee	AVERROR		8000805	0					
ANR	8001010	Identifier	AVERROR		8000805	0					
ANR	8001011	ArgumentList	ENOMEM		8000805	1					
ANR	8001012	Argument	ENOMEM		8000805	0					
ANR	8001013	Identifier	ENOMEM		8000805	0					
ANR	8001014	ExpressionStatement	"av_set_pts_info ( st , 64 , 1 , 15 )"	83:20:1456:1486	8000805	2	True				
ANR	8001015	CallExpression	"av_set_pts_info ( st , 64 , 1 , 15 )"		8000805	0					
ANR	8001016	Callee	av_set_pts_info		8000805	0					
ANR	8001017	Identifier	av_set_pts_info		8000805	0					
ANR	8001018	ArgumentList	st		8000805	1					
ANR	8001019	Argument	st		8000805	0					
ANR	8001020	Identifier	st		8000805	0					
ANR	8001021	Argument	64		8000805	1					
ANR	8001022	PrimaryExpression	64		8000805	0					
ANR	8001023	Argument	1		8000805	2					
ANR	8001024	PrimaryExpression	1		8000805	0					
ANR	8001025	Argument	15		8000805	3					
ANR	8001026	PrimaryExpression	15		8000805	0					
ANR	8001027	ExpressionStatement	str -> channels [ channel ] . video_stream_index = st -> index	87:20:1511:1564	8000805	3	True				
ANR	8001028	AssignmentExpression	str -> channels [ channel ] . video_stream_index = st -> index		8000805	0		=			
ANR	8001029	MemberAccess	str -> channels [ channel ] . video_stream_index		8000805	0					
ANR	8001030	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001031	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001032	Identifier	str		8000805	0					
ANR	8001033	Identifier	channels		8000805	1					
ANR	8001034	Identifier	channel		8000805	1					
ANR	8001035	Identifier	video_stream_index		8000805	1					
ANR	8001036	PtrMemberAccess	st -> index		8000805	1					
ANR	8001037	Identifier	st		8000805	0					
ANR	8001038	Identifier	index		8000805	1					
ANR	8001039	ExpressionStatement	st -> codec -> codec_type = CODEC_TYPE_VIDEO	91:20:1589:1629	8000805	4	True				
ANR	8001040	AssignmentExpression	st -> codec -> codec_type = CODEC_TYPE_VIDEO		8000805	0		=			
ANR	8001041	PtrMemberAccess	st -> codec -> codec_type		8000805	0					
ANR	8001042	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001043	Identifier	st		8000805	0					
ANR	8001044	Identifier	codec		8000805	1					
ANR	8001045	Identifier	codec_type		8000805	1					
ANR	8001046	Identifier	CODEC_TYPE_VIDEO		8000805	1					
ANR	8001047	ExpressionStatement	st -> codec -> codec_id = CODEC_ID_MDEC	93:20:1652:1689	8000805	5	True				
ANR	8001048	AssignmentExpression	st -> codec -> codec_id = CODEC_ID_MDEC		8000805	0		=			
ANR	8001049	PtrMemberAccess	st -> codec -> codec_id		8000805	0					
ANR	8001050	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001051	Identifier	st		8000805	0					
ANR	8001052	Identifier	codec		8000805	1					
ANR	8001053	Identifier	codec_id		8000805	1					
ANR	8001054	Identifier	CODEC_ID_MDEC		8000805	1					
ANR	8001055	ExpressionStatement	st -> codec -> codec_tag = 0	95:20:1712:1737	8000805	6	True				
ANR	8001056	AssignmentExpression	st -> codec -> codec_tag = 0		8000805	0		=			
ANR	8001057	PtrMemberAccess	st -> codec -> codec_tag		8000805	0					
ANR	8001058	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001059	Identifier	st		8000805	0					
ANR	8001060	Identifier	codec		8000805	1					
ANR	8001061	Identifier	codec_tag		8000805	1					
ANR	8001062	PrimaryExpression	0		8000805	1					
ANR	8001063	ExpressionStatement	st -> codec -> width = AV_RL16 ( & sector [ 0x28 ] )	97:20:1777:1823	8000805	7	True				
ANR	8001064	AssignmentExpression	st -> codec -> width = AV_RL16 ( & sector [ 0x28 ] )		8000805	0		=			
ANR	8001065	PtrMemberAccess	st -> codec -> width		8000805	0					
ANR	8001066	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001067	Identifier	st		8000805	0					
ANR	8001068	Identifier	codec		8000805	1					
ANR	8001069	Identifier	width		8000805	1					
ANR	8001070	CallExpression	AV_RL16 ( & sector [ 0x28 ] )		8000805	1					
ANR	8001071	Callee	AV_RL16		8000805	0					
ANR	8001072	Identifier	AV_RL16		8000805	0					
ANR	8001073	ArgumentList	& sector [ 0x28 ]		8000805	1					
ANR	8001074	Argument	& sector [ 0x28 ]		8000805	0					
ANR	8001075	UnaryOperationExpression	& sector [ 0x28 ]		8000805	0					
ANR	8001076	UnaryOperator	&		8000805	0					
ANR	8001077	ArrayIndexing	sector [ 0x28 ]		8000805	1					
ANR	8001078	Identifier	sector		8000805	0					
ANR	8001079	PrimaryExpression	0x28		8000805	1					
ANR	8001080	ExpressionStatement	st -> codec -> height = AV_RL16 ( & sector [ 0x2A ] )	99:20:1846:1892	8000805	8	True				
ANR	8001081	AssignmentExpression	st -> codec -> height = AV_RL16 ( & sector [ 0x2A ] )		8000805	0		=			
ANR	8001082	PtrMemberAccess	st -> codec -> height		8000805	0					
ANR	8001083	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001084	Identifier	st		8000805	0					
ANR	8001085	Identifier	codec		8000805	1					
ANR	8001086	Identifier	height		8000805	1					
ANR	8001087	CallExpression	AV_RL16 ( & sector [ 0x2A ] )		8000805	1					
ANR	8001088	Callee	AV_RL16		8000805	0					
ANR	8001089	Identifier	AV_RL16		8000805	0					
ANR	8001090	ArgumentList	& sector [ 0x2A ]		8000805	1					
ANR	8001091	Argument	& sector [ 0x2A ]		8000805	0					
ANR	8001092	UnaryOperationExpression	& sector [ 0x2A ]		8000805	0					
ANR	8001093	UnaryOperator	&		8000805	0					
ANR	8001094	ArrayIndexing	sector [ 0x2A ]		8000805	1					
ANR	8001095	Identifier	sector		8000805	0					
ANR	8001096	PrimaryExpression	0x2A		8000805	1					
ANR	8001097	ExpressionStatement	pkt = & str -> channels [ channel ] . tmp_pkt	107:16:2012:2049	8000805	5	True				
ANR	8001098	AssignmentExpression	pkt = & str -> channels [ channel ] . tmp_pkt		8000805	0		=			
ANR	8001099	Identifier	pkt		8000805	0					
ANR	8001100	UnaryOperationExpression	& str -> channels [ channel ] . tmp_pkt		8000805	1					
ANR	8001101	UnaryOperator	&		8000805	0					
ANR	8001102	MemberAccess	str -> channels [ channel ] . tmp_pkt		8000805	1					
ANR	8001103	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001104	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001105	Identifier	str		8000805	0					
ANR	8001106	Identifier	channels		8000805	1					
ANR	8001107	Identifier	channel		8000805	1					
ANR	8001108	Identifier	tmp_pkt		8000805	1					
ANR	8001109	IfStatement	if ( pkt -> size != sector_count * VIDEO_DATA_CHUNK_SIZE )		8000805	6					
ANR	8001110	Condition	pkt -> size != sector_count * VIDEO_DATA_CHUNK_SIZE	111:19:2073:2119	8000805	0	True				
ANR	8001111	EqualityExpression	pkt -> size != sector_count * VIDEO_DATA_CHUNK_SIZE		8000805	0		!=			
ANR	8001112	PtrMemberAccess	pkt -> size		8000805	0					
ANR	8001113	Identifier	pkt		8000805	0					
ANR	8001114	Identifier	size		8000805	1					
ANR	8001115	MultiplicativeExpression	sector_count * VIDEO_DATA_CHUNK_SIZE		8000805	1		*			
ANR	8001116	Identifier	sector_count		8000805	0					
ANR	8001117	Identifier	VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8001118	CompoundStatement		107:67:2025:2025	8000805	1					
ANR	8001119	IfStatement	if ( pkt -> data )		8000805	0					
ANR	8001120	Condition	pkt -> data	113:23:2147:2155	8000805	0	True				
ANR	8001121	PtrMemberAccess	pkt -> data		8000805	0					
ANR	8001122	Identifier	pkt		8000805	0					
ANR	8001123	Identifier	data		8000805	1					
ANR	8001124	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""missmatching sector_count\\n"" )"	115:24:2183:2237	8000805	1	True				
ANR	8001125	CallExpression	"av_log ( s , AV_LOG_ERROR , ""missmatching sector_count\\n"" )"		8000805	0					
ANR	8001126	Callee	av_log		8000805	0					
ANR	8001127	Identifier	av_log		8000805	0					
ANR	8001128	ArgumentList	s		8000805	1					
ANR	8001129	Argument	s		8000805	0					
ANR	8001130	Identifier	s		8000805	0					
ANR	8001131	Argument	AV_LOG_ERROR		8000805	1					
ANR	8001132	Identifier	AV_LOG_ERROR		8000805	0					
ANR	8001133	Argument	"""missmatching sector_count\\n"""		8000805	2					
ANR	8001134	PrimaryExpression	"""missmatching sector_count\\n"""		8000805	0					
ANR	8001135	ExpressionStatement	av_free_packet ( pkt )	117:20:2260:2279	8000805	1	True				
ANR	8001136	CallExpression	av_free_packet ( pkt )		8000805	0					
ANR	8001137	Callee	av_free_packet		8000805	0					
ANR	8001138	Identifier	av_free_packet		8000805	0					
ANR	8001139	ArgumentList	pkt		8000805	1					
ANR	8001140	Argument	pkt		8000805	0					
ANR	8001141	Identifier	pkt		8000805	0					
ANR	8001142	IfStatement	"if ( av_new_packet ( pkt , sector_count * VIDEO_DATA_CHUNK_SIZE ) )"		8000805	2					
ANR	8001143	Condition	"av_new_packet ( pkt , sector_count * VIDEO_DATA_CHUNK_SIZE )"	119:24:2306:2359	8000805	0	True				
ANR	8001144	CallExpression	"av_new_packet ( pkt , sector_count * VIDEO_DATA_CHUNK_SIZE )"		8000805	0					
ANR	8001145	Callee	av_new_packet		8000805	0					
ANR	8001146	Identifier	av_new_packet		8000805	0					
ANR	8001147	ArgumentList	pkt		8000805	1					
ANR	8001148	Argument	pkt		8000805	0					
ANR	8001149	Identifier	pkt		8000805	0					
ANR	8001150	Argument	sector_count * VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8001151	MultiplicativeExpression	sector_count * VIDEO_DATA_CHUNK_SIZE		8000805	0		*			
ANR	8001152	Identifier	sector_count		8000805	0					
ANR	8001153	Identifier	VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8001154	ReturnStatement	return AVERROR ( EIO ) ;	121:24:2387:2406	8000805	1	True				
ANR	8001155	CallExpression	AVERROR ( EIO )		8000805	0					
ANR	8001156	Callee	AVERROR		8000805	0					
ANR	8001157	Identifier	AVERROR		8000805	0					
ANR	8001158	ArgumentList	EIO		8000805	1					
ANR	8001159	Argument	EIO		8000805	0					
ANR	8001160	Identifier	EIO		8000805	0					
ANR	8001161	ExpressionStatement	pkt -> pos = url_ftell ( pb ) - RAW_CD_SECTOR_SIZE	125:20:2431:2475	8000805	3	True				
ANR	8001162	AssignmentExpression	pkt -> pos = url_ftell ( pb ) - RAW_CD_SECTOR_SIZE		8000805	0		=			
ANR	8001163	PtrMemberAccess	pkt -> pos		8000805	0					
ANR	8001164	Identifier	pkt		8000805	0					
ANR	8001165	Identifier	pos		8000805	1					
ANR	8001166	AdditiveExpression	url_ftell ( pb ) - RAW_CD_SECTOR_SIZE		8000805	1		-			
ANR	8001167	CallExpression	url_ftell ( pb )		8000805	0					
ANR	8001168	Callee	url_ftell		8000805	0					
ANR	8001169	Identifier	url_ftell		8000805	0					
ANR	8001170	ArgumentList	pb		8000805	1					
ANR	8001171	Argument	pb		8000805	0					
ANR	8001172	Identifier	pb		8000805	0					
ANR	8001173	Identifier	RAW_CD_SECTOR_SIZE		8000805	1					
ANR	8001174	ExpressionStatement	pkt -> stream_index = str -> channels [ channel ] . video_stream_index	127:20:2498:2584	8000805	4	True				
ANR	8001175	AssignmentExpression	pkt -> stream_index = str -> channels [ channel ] . video_stream_index		8000805	0		=			
ANR	8001176	PtrMemberAccess	pkt -> stream_index		8000805	0					
ANR	8001177	Identifier	pkt		8000805	0					
ANR	8001178	Identifier	stream_index		8000805	1					
ANR	8001179	MemberAccess	str -> channels [ channel ] . video_stream_index		8000805	1					
ANR	8001180	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001181	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001182	Identifier	str		8000805	0					
ANR	8001183	Identifier	channels		8000805	1					
ANR	8001184	Identifier	channel		8000805	1					
ANR	8001185	Identifier	video_stream_index		8000805	1					
ANR	8001186	ExpressionStatement	"memcpy ( pkt -> data + current_sector * VIDEO_DATA_CHUNK_SIZE , sector + VIDEO_DATA_HEADER_SIZE , VIDEO_DATA_CHUNK_SIZE )"	135:16:2624:2784	8000805	7	True				
ANR	8001187	CallExpression	"memcpy ( pkt -> data + current_sector * VIDEO_DATA_CHUNK_SIZE , sector + VIDEO_DATA_HEADER_SIZE , VIDEO_DATA_CHUNK_SIZE )"		8000805	0					
ANR	8001188	Callee	memcpy		8000805	0					
ANR	8001189	Identifier	memcpy		8000805	0					
ANR	8001190	ArgumentList	pkt -> data + current_sector * VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8001191	Argument	pkt -> data + current_sector * VIDEO_DATA_CHUNK_SIZE		8000805	0					
ANR	8001192	AdditiveExpression	pkt -> data + current_sector * VIDEO_DATA_CHUNK_SIZE		8000805	0		+			
ANR	8001193	PtrMemberAccess	pkt -> data		8000805	0					
ANR	8001194	Identifier	pkt		8000805	0					
ANR	8001195	Identifier	data		8000805	1					
ANR	8001196	MultiplicativeExpression	current_sector * VIDEO_DATA_CHUNK_SIZE		8000805	1		*			
ANR	8001197	Identifier	current_sector		8000805	0					
ANR	8001198	Identifier	VIDEO_DATA_CHUNK_SIZE		8000805	1					
ANR	8001199	Argument	sector + VIDEO_DATA_HEADER_SIZE		8000805	1					
ANR	8001200	AdditiveExpression	sector + VIDEO_DATA_HEADER_SIZE		8000805	0		+			
ANR	8001201	Identifier	sector		8000805	0					
ANR	8001202	Identifier	VIDEO_DATA_HEADER_SIZE		8000805	1					
ANR	8001203	Argument	VIDEO_DATA_CHUNK_SIZE		8000805	2					
ANR	8001204	Identifier	VIDEO_DATA_CHUNK_SIZE		8000805	0					
ANR	8001205	IfStatement	if ( current_sector == sector_count - 1 )		8000805	8					
ANR	8001206	Condition	current_sector == sector_count - 1	143:20:2809:2840	8000805	0	True				
ANR	8001207	EqualityExpression	current_sector == sector_count - 1		8000805	0		==			
ANR	8001208	Identifier	current_sector		8000805	0					
ANR	8001209	AdditiveExpression	sector_count - 1		8000805	1		-			
ANR	8001210	Identifier	sector_count		8000805	0					
ANR	8001211	PrimaryExpression	1		8000805	1					
ANR	8001212	CompoundStatement		139:54:2747:2747	8000805	1					
ANR	8001213	ExpressionStatement	pkt -> size = frame_size	145:20:2866:2887	8000805	0	True				
ANR	8001214	AssignmentExpression	pkt -> size = frame_size		8000805	0		=			
ANR	8001215	PtrMemberAccess	pkt -> size		8000805	0					
ANR	8001216	Identifier	pkt		8000805	0					
ANR	8001217	Identifier	size		8000805	1					
ANR	8001218	Identifier	frame_size		8000805	1					
ANR	8001219	ExpressionStatement	* ret_pkt = * pkt	147:20:2910:2925	8000805	1	True				
ANR	8001220	AssignmentExpression	* ret_pkt = * pkt		8000805	0		=			
ANR	8001221	UnaryOperationExpression	* ret_pkt		8000805	0					
ANR	8001222	UnaryOperator	*		8000805	0					
ANR	8001223	Identifier	ret_pkt		8000805	1					
ANR	8001224	UnaryOperationExpression	* pkt		8000805	1					
ANR	8001225	UnaryOperator	*		8000805	0					
ANR	8001226	Identifier	pkt		8000805	1					
ANR	8001227	ExpressionStatement	pkt -> data = NULL	149:20:2948:2963	8000805	2	True				
ANR	8001228	AssignmentExpression	pkt -> data = NULL		8000805	0		=			
ANR	8001229	PtrMemberAccess	pkt -> data		8000805	0					
ANR	8001230	Identifier	pkt		8000805	0					
ANR	8001231	Identifier	data		8000805	1					
ANR	8001232	Identifier	NULL		8000805	1					
ANR	8001233	ExpressionStatement	pkt -> size = - 1	151:20:2986:2999	8000805	3	True				
ANR	8001234	AssignmentExpression	pkt -> size = - 1		8000805	0		=			
ANR	8001235	PtrMemberAccess	pkt -> size		8000805	0					
ANR	8001236	Identifier	pkt		8000805	0					
ANR	8001237	Identifier	size		8000805	1					
ANR	8001238	UnaryOperationExpression	- 1		8000805	1					
ANR	8001239	UnaryOperator	-		8000805	0					
ANR	8001240	PrimaryExpression	1		8000805	1					
ANR	8001241	ReturnStatement	return 0 ;	153:20:3022:3030	8000805	4	True				
ANR	8001242	PrimaryExpression	0		8000805	0					
ANR	8001243	BreakStatement	break ;	161:12:3081:3086	8000805	3	True				
ANR	8001244	Label	case CDXA_TYPE_AUDIO :	165:8:3099:3119	8000805	4	True				
ANR	8001245	Identifier	CDXA_TYPE_AUDIO		8000805	0					
ANR	8001246	IfStatement	if ( str -> channels [ channel ] . audio_stream_index < 0 )		8000805	5					
ANR	8001247	Condition	str -> channels [ channel ] . audio_stream_index < 0	167:15:3137:3181	8000805	0	True				
ANR	8001248	RelationalExpression	str -> channels [ channel ] . audio_stream_index < 0		8000805	0		<			
ANR	8001249	MemberAccess	str -> channels [ channel ] . audio_stream_index		8000805	0					
ANR	8001250	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001251	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001252	Identifier	str		8000805	0					
ANR	8001253	Identifier	channels		8000805	1					
ANR	8001254	Identifier	channel		8000805	1					
ANR	8001255	Identifier	audio_stream_index		8000805	1					
ANR	8001256	PrimaryExpression	0		8000805	1					
ANR	8001257	CompoundStatement		165:16:3106:3128	8000805	1					
ANR	8001258	IdentifierDeclStatement	int fmt = sector [ 0x13 ] ;	169:16:3202:3224	8000805	0	True				
ANR	8001259	IdentifierDecl	fmt = sector [ 0x13 ]		8000805	0					
ANR	8001260	IdentifierDeclType	int		8000805	0					
ANR	8001261	Identifier	fmt		8000805	1					
ANR	8001262	AssignmentExpression	fmt = sector [ 0x13 ]		8000805	2		=			
ANR	8001263	Identifier	fmt		8000805	0					
ANR	8001264	ArrayIndexing	sector [ 0x13 ]		8000805	1					
ANR	8001265	Identifier	sector		8000805	0					
ANR	8001266	PrimaryExpression	0x13		8000805	1					
ANR	8001267	ExpressionStatement	"st = av_new_stream ( s , 0 )"	173:16:3290:3314	8000805	1	True				
ANR	8001268	AssignmentExpression	"st = av_new_stream ( s , 0 )"		8000805	0		=			
ANR	8001269	Identifier	st		8000805	0					
ANR	8001270	CallExpression	"av_new_stream ( s , 0 )"		8000805	1					
ANR	8001271	Callee	av_new_stream		8000805	0					
ANR	8001272	Identifier	av_new_stream		8000805	0					
ANR	8001273	ArgumentList	s		8000805	1					
ANR	8001274	Argument	s		8000805	0					
ANR	8001275	Identifier	s		8000805	0					
ANR	8001276	Argument	0		8000805	1					
ANR	8001277	PrimaryExpression	0		8000805	0					
ANR	8001278	IfStatement	if ( ! st )		8000805	2					
ANR	8001279	Condition	! st	175:20:3337:3339	8000805	0	True				
ANR	8001280	UnaryOperationExpression	! st		8000805	0					
ANR	8001281	UnaryOperator	!		8000805	0					
ANR	8001282	Identifier	st		8000805	1					
ANR	8001283	ReturnStatement	return AVERROR ( ENOMEM ) ;	177:20:3363:3385	8000805	1	True				
ANR	8001284	CallExpression	AVERROR ( ENOMEM )		8000805	0					
ANR	8001285	Callee	AVERROR		8000805	0					
ANR	8001286	Identifier	AVERROR		8000805	0					
ANR	8001287	ArgumentList	ENOMEM		8000805	1					
ANR	8001288	Argument	ENOMEM		8000805	0					
ANR	8001289	Identifier	ENOMEM		8000805	0					
ANR	8001290	ExpressionStatement	str -> channels [ channel ] . audio_stream_index = st -> index	181:16:3406:3459	8000805	3	True				
ANR	8001291	AssignmentExpression	str -> channels [ channel ] . audio_stream_index = st -> index		8000805	0		=			
ANR	8001292	MemberAccess	str -> channels [ channel ] . audio_stream_index		8000805	0					
ANR	8001293	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001294	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001295	Identifier	str		8000805	0					
ANR	8001296	Identifier	channels		8000805	1					
ANR	8001297	Identifier	channel		8000805	1					
ANR	8001298	Identifier	audio_stream_index		8000805	1					
ANR	8001299	PtrMemberAccess	st -> index		8000805	1					
ANR	8001300	Identifier	st		8000805	0					
ANR	8001301	Identifier	index		8000805	1					
ANR	8001302	ExpressionStatement	st -> codec -> codec_type = CODEC_TYPE_AUDIO	185:16:3480:3521	8000805	4	True				
ANR	8001303	AssignmentExpression	st -> codec -> codec_type = CODEC_TYPE_AUDIO		8000805	0		=			
ANR	8001304	PtrMemberAccess	st -> codec -> codec_type		8000805	0					
ANR	8001305	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001306	Identifier	st		8000805	0					
ANR	8001307	Identifier	codec		8000805	1					
ANR	8001308	Identifier	codec_type		8000805	1					
ANR	8001309	Identifier	CODEC_TYPE_AUDIO		8000805	1					
ANR	8001310	ExpressionStatement	st -> codec -> codec_id = CODEC_ID_ADPCM_XA	187:16:3540:3582	8000805	5	True				
ANR	8001311	AssignmentExpression	st -> codec -> codec_id = CODEC_ID_ADPCM_XA		8000805	0		=			
ANR	8001312	PtrMemberAccess	st -> codec -> codec_id		8000805	0					
ANR	8001313	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001314	Identifier	st		8000805	0					
ANR	8001315	Identifier	codec		8000805	1					
ANR	8001316	Identifier	codec_id		8000805	1					
ANR	8001317	Identifier	CODEC_ID_ADPCM_XA		8000805	1					
ANR	8001318	ExpressionStatement	st -> codec -> codec_tag = 0	189:16:3601:3627	8000805	6	True				
ANR	8001319	AssignmentExpression	st -> codec -> codec_tag = 0		8000805	0		=			
ANR	8001320	PtrMemberAccess	st -> codec -> codec_tag		8000805	0					
ANR	8001321	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001322	Identifier	st		8000805	0					
ANR	8001323	Identifier	codec		8000805	1					
ANR	8001324	Identifier	codec_tag		8000805	1					
ANR	8001325	PrimaryExpression	0		8000805	1					
ANR	8001326	ExpressionStatement	st -> codec -> channels = ( fmt & 1 ) ? 2 : 1	191:16:3663:3699	8000805	7	True				
ANR	8001327	AssignmentExpression	st -> codec -> channels = ( fmt & 1 ) ? 2 : 1		8000805	0		=			
ANR	8001328	PtrMemberAccess	st -> codec -> channels		8000805	0					
ANR	8001329	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001330	Identifier	st		8000805	0					
ANR	8001331	Identifier	codec		8000805	1					
ANR	8001332	Identifier	channels		8000805	1					
ANR	8001333	ConditionalExpression	( fmt & 1 ) ? 2 : 1		8000805	1					
ANR	8001334	Condition	fmt & 1		8000805	0					
ANR	8001335	BitAndExpression	fmt & 1		8000805	0		&			
ANR	8001336	Identifier	fmt		8000805	0					
ANR	8001337	PrimaryExpression	1		8000805	1					
ANR	8001338	PrimaryExpression	2		8000805	1					
ANR	8001339	PrimaryExpression	1		8000805	2					
ANR	8001340	ExpressionStatement	st -> codec -> sample_rate = ( fmt & 4 ) ? 18900 : 37800	193:16:3718:3762	8000805	8	True				
ANR	8001341	AssignmentExpression	st -> codec -> sample_rate = ( fmt & 4 ) ? 18900 : 37800		8000805	0		=			
ANR	8001342	PtrMemberAccess	st -> codec -> sample_rate		8000805	0					
ANR	8001343	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001344	Identifier	st		8000805	0					
ANR	8001345	Identifier	codec		8000805	1					
ANR	8001346	Identifier	sample_rate		8000805	1					
ANR	8001347	ConditionalExpression	( fmt & 4 ) ? 18900 : 37800		8000805	1					
ANR	8001348	Condition	fmt & 4		8000805	0					
ANR	8001349	BitAndExpression	fmt & 4		8000805	0		&			
ANR	8001350	Identifier	fmt		8000805	0					
ANR	8001351	PrimaryExpression	4		8000805	1					
ANR	8001352	PrimaryExpression	18900		8000805	1					
ANR	8001353	PrimaryExpression	37800		8000805	2					
ANR	8001354	ExpressionStatement	st -> codec -> block_align = 128	197:16:3834:3862	8000805	9	True				
ANR	8001355	AssignmentExpression	st -> codec -> block_align = 128		8000805	0		=			
ANR	8001356	PtrMemberAccess	st -> codec -> block_align		8000805	0					
ANR	8001357	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001358	Identifier	st		8000805	0					
ANR	8001359	Identifier	codec		8000805	1					
ANR	8001360	Identifier	block_align		8000805	1					
ANR	8001361	PrimaryExpression	128		8000805	1					
ANR	8001362	ExpressionStatement	"av_set_pts_info ( st , 64 , 128 , st -> codec -> sample_rate )"	201:16:3883:3935	8000805	10	True				
ANR	8001363	CallExpression	"av_set_pts_info ( st , 64 , 128 , st -> codec -> sample_rate )"		8000805	0					
ANR	8001364	Callee	av_set_pts_info		8000805	0					
ANR	8001365	Identifier	av_set_pts_info		8000805	0					
ANR	8001366	ArgumentList	st		8000805	1					
ANR	8001367	Argument	st		8000805	0					
ANR	8001368	Identifier	st		8000805	0					
ANR	8001369	Argument	64		8000805	1					
ANR	8001370	PrimaryExpression	64		8000805	0					
ANR	8001371	Argument	128		8000805	2					
ANR	8001372	PrimaryExpression	128		8000805	0					
ANR	8001373	Argument	st -> codec -> sample_rate		8000805	3					
ANR	8001374	PtrMemberAccess	st -> codec -> sample_rate		8000805	0					
ANR	8001375	PtrMemberAccess	st -> codec		8000805	0					
ANR	8001376	Identifier	st		8000805	0					
ANR	8001377	Identifier	codec		8000805	1					
ANR	8001378	Identifier	sample_rate		8000805	1					
ANR	8001379	ExpressionStatement	pkt = ret_pkt	205:16:3969:3982	8000805	6	True				
ANR	8001380	AssignmentExpression	pkt = ret_pkt		8000805	0		=			
ANR	8001381	Identifier	pkt		8000805	0					
ANR	8001382	Identifier	ret_pkt		8000805	1					
ANR	8001383	IfStatement	"if ( av_new_packet ( pkt , 2304 ) )"		8000805	7					
ANR	8001384	Condition	"av_new_packet ( pkt , 2304 )"	207:20:4005:4028	8000805	0	True				
ANR	8001385	CallExpression	"av_new_packet ( pkt , 2304 )"		8000805	0					
ANR	8001386	Callee	av_new_packet		8000805	0					
ANR	8001387	Identifier	av_new_packet		8000805	0					
ANR	8001388	ArgumentList	pkt		8000805	1					
ANR	8001389	Argument	pkt		8000805	0					
ANR	8001390	Identifier	pkt		8000805	0					
ANR	8001391	Argument	2304		8000805	1					
ANR	8001392	PrimaryExpression	2304		8000805	0					
ANR	8001393	ReturnStatement	return AVERROR ( EIO ) ;	209:20:4052:4071	8000805	1	True				
ANR	8001394	CallExpression	AVERROR ( EIO )		8000805	0					
ANR	8001395	Callee	AVERROR		8000805	0					
ANR	8001396	Identifier	AVERROR		8000805	0					
ANR	8001397	ArgumentList	EIO		8000805	1					
ANR	8001398	Argument	EIO		8000805	0					
ANR	8001399	Identifier	EIO		8000805	0					
ANR	8001400	ExpressionStatement	"memcpy ( pkt -> data , sector + 24 , 2304 )"	211:16:4090:4122	8000805	8	True				
ANR	8001401	CallExpression	"memcpy ( pkt -> data , sector + 24 , 2304 )"		8000805	0					
ANR	8001402	Callee	memcpy		8000805	0					
ANR	8001403	Identifier	memcpy		8000805	0					
ANR	8001404	ArgumentList	pkt -> data		8000805	1					
ANR	8001405	Argument	pkt -> data		8000805	0					
ANR	8001406	PtrMemberAccess	pkt -> data		8000805	0					
ANR	8001407	Identifier	pkt		8000805	0					
ANR	8001408	Identifier	data		8000805	1					
ANR	8001409	Argument	sector + 24		8000805	1					
ANR	8001410	AdditiveExpression	sector + 24		8000805	0		+			
ANR	8001411	Identifier	sector		8000805	0					
ANR	8001412	PrimaryExpression	24		8000805	1					
ANR	8001413	Argument	2304		8000805	2					
ANR	8001414	PrimaryExpression	2304		8000805	0					
ANR	8001415	ExpressionStatement	pkt -> stream_index = str -> channels [ channel ] . audio_stream_index	215:16:4143:4225	8000805	9	True				
ANR	8001416	AssignmentExpression	pkt -> stream_index = str -> channels [ channel ] . audio_stream_index		8000805	0		=			
ANR	8001417	PtrMemberAccess	pkt -> stream_index		8000805	0					
ANR	8001418	Identifier	pkt		8000805	0					
ANR	8001419	Identifier	stream_index		8000805	1					
ANR	8001420	MemberAccess	str -> channels [ channel ] . audio_stream_index		8000805	1					
ANR	8001421	ArrayIndexing	str -> channels [ channel ]		8000805	0					
ANR	8001422	PtrMemberAccess	str -> channels		8000805	0					
ANR	8001423	Identifier	str		8000805	0					
ANR	8001424	Identifier	channels		8000805	1					
ANR	8001425	Identifier	channel		8000805	1					
ANR	8001426	Identifier	audio_stream_index		8000805	1					
ANR	8001427	ReturnStatement	return 0 ;	219:16:4244:4252	8000805	10	True				
ANR	8001428	PrimaryExpression	0		8000805	0					
ANR	8001429	BreakStatement	break ;	221:12:4267:4272	8000805	11	True				
ANR	8001430	Label	default :	223:8:4283:4290	8000805	12	True				
ANR	8001431	Identifier	default		8000805	0					
ANR	8001432	BreakStatement	break ;	227:12:4352:4357	8000805	13	True				
ANR	8001433	IfStatement	if ( url_feof ( pb ) )		8000805	4					
ANR	8001434	Condition	url_feof ( pb )	233:12:4385:4396	8000805	0	True				
ANR	8001435	CallExpression	url_feof ( pb )		8000805	0					
ANR	8001436	Callee	url_feof		8000805	0					
ANR	8001437	Identifier	url_feof		8000805	0					
ANR	8001438	ArgumentList	pb		8000805	1					
ANR	8001439	Argument	pb		8000805	0					
ANR	8001440	Identifier	pb		8000805	0					
ANR	8001441	ReturnStatement	return AVERROR ( EIO ) ;	235:12:4412:4431	8000805	1	True				
ANR	8001442	CallExpression	AVERROR ( EIO )		8000805	0					
ANR	8001443	Callee	AVERROR		8000805	0					
ANR	8001444	Identifier	AVERROR		8000805	0					
ANR	8001445	ArgumentList	EIO		8000805	1					
ANR	8001446	Argument	EIO		8000805	0					
ANR	8001447	Identifier	EIO		8000805	0					
ANR	8001448	ReturnType	static int		8000805	1					
ANR	8001449	Identifier	str_read_packet		8000805	2					
ANR	8001450	ParameterList	"AVFormatContext * s , AVPacket * ret_pkt"		8000805	3					
ANR	8001451	Parameter	AVFormatContext * s	1:27:27:44	8000805	0	True				
ANR	8001452	ParameterType	AVFormatContext *		8000805	0					
ANR	8001453	Identifier	s		8000805	1					
ANR	8001454	Parameter	AVPacket * ret_pkt	3:27:75:91	8000805	1	True				
ANR	8001455	ParameterType	AVPacket *		8000805	0					
ANR	8001456	Identifier	ret_pkt		8000805	1					
ANR	8001457	CFGEntryNode	ENTRY		8000805		True				
ANR	8001458	CFGExitNode	EXIT		8000805		True				
ANR	8001459	Symbol	ENOMEM		8000805						
ANR	8001460	Symbol	current_sector		8000805						
ANR	8001461	Symbol	* pkt		8000805						
ANR	8001462	Symbol	url_feof		8000805						
ANR	8001463	Symbol	* st		8000805						
ANR	8001464	Symbol	* * str		8000805						
ANR	8001465	Symbol	channel		8000805						
ANR	8001466	Symbol	st -> codec -> codec_tag		8000805						
ANR	8001467	Symbol	* ret_pkt		8000805						
ANR	8001468	Symbol	fmt		8000805						
ANR	8001469	Symbol	* st -> codec		8000805						
ANR	8001470	Symbol	str -> channels [ channel ] . audio_stream_index		8000805						
ANR	8001471	Symbol	sector		8000805						
ANR	8001472	Symbol	s -> priv_data		8000805						
ANR	8001473	Symbol	NULL		8000805						
ANR	8001474	Symbol	* sector		8000805						
ANR	8001475	Symbol	st -> codec -> width		8000805						
ANR	8001476	Symbol	get_buffer		8000805						
ANR	8001477	Symbol	EIO		8000805						
ANR	8001478	Symbol	sector_count		8000805						
ANR	8001479	Symbol	av_new_stream		8000805						
ANR	8001480	Symbol	st -> codec -> block_align		8000805						
ANR	8001481	Symbol	str		8000805						
ANR	8001482	Symbol	CODEC_TYPE_VIDEO		8000805						
ANR	8001483	Symbol	AV_RL16		8000805						
ANR	8001484	Symbol	pkt -> pos		8000805						
ANR	8001485	Symbol	CODEC_ID_ADPCM_XA		8000805						
ANR	8001486	Symbol	st -> codec -> height		8000805						
ANR	8001487	Symbol	s -> pb		8000805						
ANR	8001488	Symbol	st -> codec -> sample_rate		8000805						
ANR	8001489	Symbol	RAW_CD_SECTOR_SIZE		8000805						
ANR	8001490	Symbol	frame_size		8000805						
ANR	8001491	Symbol	& str -> channels [ channel ] . tmp_pkt		8000805						
ANR	8001492	Symbol	* * st		8000805						
ANR	8001493	Symbol	str -> channels [ channel ] . video_stream_index		8000805						
ANR	8001494	Symbol	ret_pkt		8000805						
ANR	8001495	Symbol	st -> codec -> codec_id		8000805						
ANR	8001496	Symbol	CDXA_TYPE_MASK		8000805						
ANR	8001497	Symbol	pkt		8000805						
ANR	8001498	Symbol	url_ftell		8000805						
ANR	8001499	Symbol	* str		8000805						
ANR	8001500	Symbol	VIDEO_DATA_HEADER_SIZE		8000805						
ANR	8001501	Symbol	* str -> channels		8000805						
ANR	8001502	Symbol	st -> codec -> codec_type		8000805						
ANR	8001503	Symbol	st		8000805						
ANR	8001504	Symbol	st -> codec -> channels		8000805						
ANR	8001505	Symbol	AV_LOG_ERROR		8000805						
ANR	8001506	Symbol	av_new_packet		8000805						
ANR	8001507	Symbol	* channel		8000805						
ANR	8001508	Symbol	st -> codec		8000805						
ANR	8001509	Symbol	pkt -> data		8000805						
ANR	8001510	Symbol	pkt -> stream_index		8000805						
ANR	8001511	Symbol	pkt -> size		8000805						
ANR	8001512	Symbol	pb		8000805						
ANR	8001513	Symbol	s		8000805						
ANR	8001514	Symbol	AV_RL32		8000805						
ANR	8001515	Symbol	AVERROR_INVALIDDATA		8000805						
ANR	8001516	Symbol	AVERROR		8000805						
ANR	8001517	Symbol	CODEC_TYPE_AUDIO		8000805						
ANR	8001518	Symbol	VIDEO_DATA_CHUNK_SIZE		8000805						
ANR	8001519	Symbol	str -> channels		8000805						
ANR	8001520	Symbol	st -> index		8000805						
ANR	8001521	Symbol	* s		8000805						
ANR	8001522	Symbol	CODEC_ID_MDEC		8000805						
