command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7868086	File	/home/p4ultr4n/workplace/ReVeal/raw_code/smc_decode_stream_1.c								
ANR	7868087	Function	smc_decode_stream	1:0:0:13223							
ANR	7868088	FunctionDef	smc_decode_stream (SmcContext * s)		7868087	0					
ANR	7868089	CompoundStatement		3:0:46:13223	7868087	0					
ANR	7868090	IdentifierDeclStatement	int width = s -> avctx -> width ;	5:4:53:80	7868087	0	True				
ANR	7868091	IdentifierDecl	width = s -> avctx -> width		7868087	0					
ANR	7868092	IdentifierDeclType	int		7868087	0					
ANR	7868093	Identifier	width		7868087	1					
ANR	7868094	AssignmentExpression	width = s -> avctx -> width		7868087	2		=			
ANR	7868095	Identifier	width		7868087	0					
ANR	7868096	PtrMemberAccess	s -> avctx -> width		7868087	1					
ANR	7868097	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868098	Identifier	s		7868087	0					
ANR	7868099	Identifier	avctx		7868087	1					
ANR	7868100	Identifier	width		7868087	1					
ANR	7868101	IdentifierDeclStatement	int height = s -> avctx -> height ;	7:4:87:116	7868087	1	True				
ANR	7868102	IdentifierDecl	height = s -> avctx -> height		7868087	0					
ANR	7868103	IdentifierDeclType	int		7868087	0					
ANR	7868104	Identifier	height		7868087	1					
ANR	7868105	AssignmentExpression	height = s -> avctx -> height		7868087	2		=			
ANR	7868106	Identifier	height		7868087	0					
ANR	7868107	PtrMemberAccess	s -> avctx -> height		7868087	1					
ANR	7868108	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868109	Identifier	s		7868087	0					
ANR	7868110	Identifier	avctx		7868087	1					
ANR	7868111	Identifier	height		7868087	1					
ANR	7868112	IdentifierDeclStatement	int stride = s -> frame . linesize [ 0 ] ;	9:4:123:156	7868087	2	True				
ANR	7868113	IdentifierDecl	stride = s -> frame . linesize [ 0 ]		7868087	0					
ANR	7868114	IdentifierDeclType	int		7868087	0					
ANR	7868115	Identifier	stride		7868087	1					
ANR	7868116	AssignmentExpression	stride = s -> frame . linesize [ 0 ]		7868087	2		=			
ANR	7868117	Identifier	stride		7868087	0					
ANR	7868118	ArrayIndexing	s -> frame . linesize [ 0 ]		7868087	1					
ANR	7868119	MemberAccess	s -> frame . linesize		7868087	0					
ANR	7868120	PtrMemberAccess	s -> frame		7868087	0					
ANR	7868121	Identifier	s		7868087	0					
ANR	7868122	Identifier	frame		7868087	1					
ANR	7868123	Identifier	linesize		7868087	1					
ANR	7868124	PrimaryExpression	0		7868087	1					
ANR	7868125	IdentifierDeclStatement	int i ;	11:4:163:168	7868087	3	True				
ANR	7868126	IdentifierDecl	i		7868087	0					
ANR	7868127	IdentifierDeclType	int		7868087	0					
ANR	7868128	Identifier	i		7868087	1					
ANR	7868129	IdentifierDeclStatement	int stream_ptr = 0 ;	13:4:175:193	7868087	4	True				
ANR	7868130	IdentifierDecl	stream_ptr = 0		7868087	0					
ANR	7868131	IdentifierDeclType	int		7868087	0					
ANR	7868132	Identifier	stream_ptr		7868087	1					
ANR	7868133	AssignmentExpression	stream_ptr = 0		7868087	2		=			
ANR	7868134	Identifier	stream_ptr		7868087	0					
ANR	7868135	PrimaryExpression	0		7868087	1					
ANR	7868136	IdentifierDeclStatement	int chunk_size ;	15:4:200:214	7868087	5	True				
ANR	7868137	IdentifierDecl	chunk_size		7868087	0					
ANR	7868138	IdentifierDeclType	int		7868087	0					
ANR	7868139	Identifier	chunk_size		7868087	1					
ANR	7868140	IdentifierDeclStatement	unsigned char opcode ;	17:4:221:241	7868087	6	True				
ANR	7868141	IdentifierDecl	opcode		7868087	0					
ANR	7868142	IdentifierDeclType	unsigned char		7868087	0					
ANR	7868143	Identifier	opcode		7868087	1					
ANR	7868144	IdentifierDeclStatement	int n_blocks ;	19:4:248:260	7868087	7	True				
ANR	7868145	IdentifierDecl	n_blocks		7868087	0					
ANR	7868146	IdentifierDeclType	int		7868087	0					
ANR	7868147	Identifier	n_blocks		7868087	1					
ANR	7868148	IdentifierDeclStatement	unsigned int color_flags ;	21:4:267:291	7868087	8	True				
ANR	7868149	IdentifierDecl	color_flags		7868087	0					
ANR	7868150	IdentifierDeclType	unsigned int		7868087	0					
ANR	7868151	Identifier	color_flags		7868087	1					
ANR	7868152	IdentifierDeclStatement	unsigned int color_flags_a ;	23:4:298:324	7868087	9	True				
ANR	7868153	IdentifierDecl	color_flags_a		7868087	0					
ANR	7868154	IdentifierDeclType	unsigned int		7868087	0					
ANR	7868155	Identifier	color_flags_a		7868087	1					
ANR	7868156	IdentifierDeclStatement	unsigned int color_flags_b ;	25:4:331:357	7868087	10	True				
ANR	7868157	IdentifierDecl	color_flags_b		7868087	0					
ANR	7868158	IdentifierDeclType	unsigned int		7868087	0					
ANR	7868159	Identifier	color_flags_b		7868087	1					
ANR	7868160	IdentifierDeclStatement	unsigned int flag_mask ;	27:4:364:386	7868087	11	True				
ANR	7868161	IdentifierDecl	flag_mask		7868087	0					
ANR	7868162	IdentifierDeclType	unsigned int		7868087	0					
ANR	7868163	Identifier	flag_mask		7868087	1					
ANR	7868164	IdentifierDeclStatement	unsigned char * pixels = s -> frame . data [ 0 ] ;	31:4:395:435	7868087	12	True				
ANR	7868165	IdentifierDecl	* pixels = s -> frame . data [ 0 ]		7868087	0					
ANR	7868166	IdentifierDeclType	unsigned char *		7868087	0					
ANR	7868167	Identifier	pixels		7868087	1					
ANR	7868168	AssignmentExpression	* pixels = s -> frame . data [ 0 ]		7868087	2		=			
ANR	7868169	Identifier	pixels		7868087	0					
ANR	7868170	ArrayIndexing	s -> frame . data [ 0 ]		7868087	1					
ANR	7868171	MemberAccess	s -> frame . data		7868087	0					
ANR	7868172	PtrMemberAccess	s -> frame		7868087	0					
ANR	7868173	Identifier	s		7868087	0					
ANR	7868174	Identifier	frame		7868087	1					
ANR	7868175	Identifier	data		7868087	1					
ANR	7868176	PrimaryExpression	0		7868087	1					
ANR	7868177	IdentifierDeclStatement	int image_size = height * s -> frame . linesize [ 0 ] ;	35:4:444:490	7868087	13	True				
ANR	7868178	IdentifierDecl	image_size = height * s -> frame . linesize [ 0 ]		7868087	0					
ANR	7868179	IdentifierDeclType	int		7868087	0					
ANR	7868180	Identifier	image_size		7868087	1					
ANR	7868181	AssignmentExpression	image_size = height * s -> frame . linesize [ 0 ]		7868087	2		=			
ANR	7868182	Identifier	image_size		7868087	0					
ANR	7868183	MultiplicativeExpression	height * s -> frame . linesize [ 0 ]		7868087	1		*			
ANR	7868184	Identifier	height		7868087	0					
ANR	7868185	ArrayIndexing	s -> frame . linesize [ 0 ]		7868087	1					
ANR	7868186	MemberAccess	s -> frame . linesize		7868087	0					
ANR	7868187	PtrMemberAccess	s -> frame		7868087	0					
ANR	7868188	Identifier	s		7868087	0					
ANR	7868189	Identifier	frame		7868087	1					
ANR	7868190	Identifier	linesize		7868087	1					
ANR	7868191	PrimaryExpression	0		7868087	1					
ANR	7868192	IdentifierDeclStatement	int row_ptr = 0 ;	37:4:497:512	7868087	14	True				
ANR	7868193	IdentifierDecl	row_ptr = 0		7868087	0					
ANR	7868194	IdentifierDeclType	int		7868087	0					
ANR	7868195	Identifier	row_ptr		7868087	1					
ANR	7868196	AssignmentExpression	row_ptr = 0		7868087	2		=			
ANR	7868197	Identifier	row_ptr		7868087	0					
ANR	7868198	PrimaryExpression	0		7868087	1					
ANR	7868199	IdentifierDeclStatement	int pixel_ptr = 0 ;	39:4:519:536	7868087	15	True				
ANR	7868200	IdentifierDecl	pixel_ptr = 0		7868087	0					
ANR	7868201	IdentifierDeclType	int		7868087	0					
ANR	7868202	Identifier	pixel_ptr		7868087	1					
ANR	7868203	AssignmentExpression	pixel_ptr = 0		7868087	2		=			
ANR	7868204	Identifier	pixel_ptr		7868087	0					
ANR	7868205	PrimaryExpression	0		7868087	1					
ANR	7868206	IdentifierDeclStatement	"int pixel_x , pixel_y ;"	41:4:543:563	7868087	16	True				
ANR	7868207	IdentifierDecl	pixel_x		7868087	0					
ANR	7868208	IdentifierDeclType	int		7868087	0					
ANR	7868209	Identifier	pixel_x		7868087	1					
ANR	7868210	IdentifierDecl	pixel_y		7868087	1					
ANR	7868211	IdentifierDeclType	int		7868087	0					
ANR	7868212	Identifier	pixel_y		7868087	1					
ANR	7868213	IdentifierDeclStatement	int row_inc = stride - 4 ;	43:4:570:594	7868087	17	True				
ANR	7868214	IdentifierDecl	row_inc = stride - 4		7868087	0					
ANR	7868215	IdentifierDeclType	int		7868087	0					
ANR	7868216	Identifier	row_inc		7868087	1					
ANR	7868217	AssignmentExpression	row_inc = stride - 4		7868087	2		=			
ANR	7868218	Identifier	row_inc		7868087	0					
ANR	7868219	AdditiveExpression	stride - 4		7868087	1		-			
ANR	7868220	Identifier	stride		7868087	0					
ANR	7868221	PrimaryExpression	4		7868087	1					
ANR	7868222	IdentifierDeclStatement	int block_ptr ;	45:4:601:614	7868087	18	True				
ANR	7868223	IdentifierDecl	block_ptr		7868087	0					
ANR	7868224	IdentifierDeclType	int		7868087	0					
ANR	7868225	Identifier	block_ptr		7868087	1					
ANR	7868226	IdentifierDeclStatement	int prev_block_ptr ;	47:4:621:639	7868087	19	True				
ANR	7868227	IdentifierDecl	prev_block_ptr		7868087	0					
ANR	7868228	IdentifierDeclType	int		7868087	0					
ANR	7868229	Identifier	prev_block_ptr		7868087	1					
ANR	7868230	IdentifierDeclStatement	"int prev_block_ptr1 , prev_block_ptr2 ;"	49:4:646:682	7868087	20	True				
ANR	7868231	IdentifierDecl	prev_block_ptr1		7868087	0					
ANR	7868232	IdentifierDeclType	int		7868087	0					
ANR	7868233	Identifier	prev_block_ptr1		7868087	1					
ANR	7868234	IdentifierDecl	prev_block_ptr2		7868087	1					
ANR	7868235	IdentifierDeclType	int		7868087	0					
ANR	7868236	Identifier	prev_block_ptr2		7868087	1					
ANR	7868237	IdentifierDeclStatement	int prev_block_flag ;	51:4:689:708	7868087	21	True				
ANR	7868238	IdentifierDecl	prev_block_flag		7868087	0					
ANR	7868239	IdentifierDeclType	int		7868087	0					
ANR	7868240	Identifier	prev_block_flag		7868087	1					
ANR	7868241	IdentifierDeclStatement	int total_blocks ;	53:4:715:731	7868087	22	True				
ANR	7868242	IdentifierDecl	total_blocks		7868087	0					
ANR	7868243	IdentifierDeclType	int		7868087	0					
ANR	7868244	Identifier	total_blocks		7868087	1					
ANR	7868245	IdentifierDeclStatement	int color_table_index ;	55:4:738:759	7868087	23	True				
ANR	7868246	IdentifierDecl	color_table_index		7868087	0					
ANR	7868247	IdentifierDeclType	int		7868087	0					
ANR	7868248	Identifier	color_table_index		7868087	1					
ANR	7868249	IdentifierDeclStatement	int pixel ;	57:4:818:827	7868087	24	True				
ANR	7868250	IdentifierDecl	pixel		7868087	0					
ANR	7868251	IdentifierDeclType	int		7868087	0					
ANR	7868252	Identifier	pixel		7868087	1					
ANR	7868253	IdentifierDeclStatement	int color_pair_index = 0 ;	61:4:836:860	7868087	25	True				
ANR	7868254	IdentifierDecl	color_pair_index = 0		7868087	0					
ANR	7868255	IdentifierDeclType	int		7868087	0					
ANR	7868256	Identifier	color_pair_index		7868087	1					
ANR	7868257	AssignmentExpression	color_pair_index = 0		7868087	2		=			
ANR	7868258	Identifier	color_pair_index		7868087	0					
ANR	7868259	PrimaryExpression	0		7868087	1					
ANR	7868260	IdentifierDeclStatement	int color_quad_index = 0 ;	63:4:867:891	7868087	26	True				
ANR	7868261	IdentifierDecl	color_quad_index = 0		7868087	0					
ANR	7868262	IdentifierDeclType	int		7868087	0					
ANR	7868263	Identifier	color_quad_index		7868087	1					
ANR	7868264	AssignmentExpression	color_quad_index = 0		7868087	2		=			
ANR	7868265	Identifier	color_quad_index		7868087	0					
ANR	7868266	PrimaryExpression	0		7868087	1					
ANR	7868267	IdentifierDeclStatement	int color_octet_index = 0 ;	65:4:898:923	7868087	27	True				
ANR	7868268	IdentifierDecl	color_octet_index = 0		7868087	0					
ANR	7868269	IdentifierDeclType	int		7868087	0					
ANR	7868270	Identifier	color_octet_index		7868087	1					
ANR	7868271	AssignmentExpression	color_octet_index = 0		7868087	2		=			
ANR	7868272	Identifier	color_octet_index		7868087	0					
ANR	7868273	PrimaryExpression	0		7868087	1					
ANR	7868274	ExpressionStatement	"memcpy ( s -> frame . data [ 1 ] , s -> pal , AVPALETTE_SIZE )"	71:4:970:1018	7868087	28	True				
ANR	7868275	CallExpression	"memcpy ( s -> frame . data [ 1 ] , s -> pal , AVPALETTE_SIZE )"		7868087	0					
ANR	7868276	Callee	memcpy		7868087	0					
ANR	7868277	Identifier	memcpy		7868087	0					
ANR	7868278	ArgumentList	s -> frame . data [ 1 ]		7868087	1					
ANR	7868279	Argument	s -> frame . data [ 1 ]		7868087	0					
ANR	7868280	ArrayIndexing	s -> frame . data [ 1 ]		7868087	0					
ANR	7868281	MemberAccess	s -> frame . data		7868087	0					
ANR	7868282	PtrMemberAccess	s -> frame		7868087	0					
ANR	7868283	Identifier	s		7868087	0					
ANR	7868284	Identifier	frame		7868087	1					
ANR	7868285	Identifier	data		7868087	1					
ANR	7868286	PrimaryExpression	1		7868087	1					
ANR	7868287	Argument	s -> pal		7868087	1					
ANR	7868288	PtrMemberAccess	s -> pal		7868087	0					
ANR	7868289	Identifier	s		7868087	0					
ANR	7868290	Identifier	pal		7868087	1					
ANR	7868291	Argument	AVPALETTE_SIZE		7868087	2					
ANR	7868292	Identifier	AVPALETTE_SIZE		7868087	0					
ANR	7868293	ExpressionStatement	chunk_size = AV_RB32 ( & s -> buf [ stream_ptr ] ) & 0x00FFFFFF	75:4:1027:1081	7868087	29	True				
ANR	7868294	AssignmentExpression	chunk_size = AV_RB32 ( & s -> buf [ stream_ptr ] ) & 0x00FFFFFF		7868087	0		=			
ANR	7868295	Identifier	chunk_size		7868087	0					
ANR	7868296	BitAndExpression	AV_RB32 ( & s -> buf [ stream_ptr ] ) & 0x00FFFFFF		7868087	1		&			
ANR	7868297	CallExpression	AV_RB32 ( & s -> buf [ stream_ptr ] )		7868087	0					
ANR	7868298	Callee	AV_RB32		7868087	0					
ANR	7868299	Identifier	AV_RB32		7868087	0					
ANR	7868300	ArgumentList	& s -> buf [ stream_ptr ]		7868087	1					
ANR	7868301	Argument	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7868302	UnaryOperationExpression	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7868303	UnaryOperator	&		7868087	0					
ANR	7868304	ArrayIndexing	s -> buf [ stream_ptr ]		7868087	1					
ANR	7868305	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868306	Identifier	s		7868087	0					
ANR	7868307	Identifier	buf		7868087	1					
ANR	7868308	Identifier	stream_ptr		7868087	1					
ANR	7868309	PrimaryExpression	0x00FFFFFF		7868087	1					
ANR	7868310	ExpressionStatement	stream_ptr += 4	77:4:1088:1103	7868087	30	True				
ANR	7868311	AssignmentExpression	stream_ptr += 4		7868087	0		+=			
ANR	7868312	Identifier	stream_ptr		7868087	0					
ANR	7868313	PrimaryExpression	4		7868087	1					
ANR	7868314	IfStatement	if ( chunk_size != s -> size )		7868087	31					
ANR	7868315	Condition	chunk_size != s -> size	79:8:1114:1134	7868087	0	True				
ANR	7868316	EqualityExpression	chunk_size != s -> size		7868087	0		!=			
ANR	7868317	Identifier	chunk_size		7868087	0					
ANR	7868318	PtrMemberAccess	s -> size		7868087	1					
ANR	7868319	Identifier	s		7868087	0					
ANR	7868320	Identifier	size		7868087	1					
ANR	7868321	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""warning: MOV chunk size != encoded chunk size (%d != %d); using MOV chunk size\\n"" , chunk_size , s -> size )"	81:8:1146:1293	7868087	1	True				
ANR	7868322	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""warning: MOV chunk size != encoded chunk size (%d != %d); using MOV chunk size\\n"" , chunk_size , s -> size )"		7868087	0					
ANR	7868323	Callee	av_log		7868087	0					
ANR	7868324	Identifier	av_log		7868087	0					
ANR	7868325	ArgumentList	s -> avctx		7868087	1					
ANR	7868326	Argument	s -> avctx		7868087	0					
ANR	7868327	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868328	Identifier	s		7868087	0					
ANR	7868329	Identifier	avctx		7868087	1					
ANR	7868330	Argument	AV_LOG_INFO		7868087	1					
ANR	7868331	Identifier	AV_LOG_INFO		7868087	0					
ANR	7868332	Argument	"""warning: MOV chunk size != encoded chunk size (%d != %d); using MOV chunk size\\n"""		7868087	2					
ANR	7868333	PrimaryExpression	"""warning: MOV chunk size != encoded chunk size (%d != %d); using MOV chunk size\\n"""		7868087	0					
ANR	7868334	Argument	chunk_size		7868087	3					
ANR	7868335	Identifier	chunk_size		7868087	0					
ANR	7868336	Argument	s -> size		7868087	4					
ANR	7868337	PtrMemberAccess	s -> size		7868087	0					
ANR	7868338	Identifier	s		7868087	0					
ANR	7868339	Identifier	size		7868087	1					
ANR	7868340	ExpressionStatement	chunk_size = s -> size	87:4:1302:1322	7868087	32	True				
ANR	7868341	AssignmentExpression	chunk_size = s -> size		7868087	0		=			
ANR	7868342	Identifier	chunk_size		7868087	0					
ANR	7868343	PtrMemberAccess	s -> size		7868087	1					
ANR	7868344	Identifier	s		7868087	0					
ANR	7868345	Identifier	size		7868087	1					
ANR	7868346	ExpressionStatement	total_blocks = ( ( s -> avctx -> width + 3 ) / 4 ) * ( ( s -> avctx -> height + 3 ) / 4 )	89:4:1329:1402	7868087	33	True				
ANR	7868347	AssignmentExpression	total_blocks = ( ( s -> avctx -> width + 3 ) / 4 ) * ( ( s -> avctx -> height + 3 ) / 4 )		7868087	0		=			
ANR	7868348	Identifier	total_blocks		7868087	0					
ANR	7868349	MultiplicativeExpression	( ( s -> avctx -> width + 3 ) / 4 ) * ( ( s -> avctx -> height + 3 ) / 4 )		7868087	1		*			
ANR	7868350	MultiplicativeExpression	( s -> avctx -> width + 3 ) / 4		7868087	0		/			
ANR	7868351	AdditiveExpression	s -> avctx -> width + 3		7868087	0		+			
ANR	7868352	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868353	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868354	Identifier	s		7868087	0					
ANR	7868355	Identifier	avctx		7868087	1					
ANR	7868356	Identifier	width		7868087	1					
ANR	7868357	PrimaryExpression	3		7868087	1					
ANR	7868358	PrimaryExpression	4		7868087	1					
ANR	7868359	MultiplicativeExpression	( s -> avctx -> height + 3 ) / 4		7868087	1		/			
ANR	7868360	AdditiveExpression	s -> avctx -> height + 3		7868087	0		+			
ANR	7868361	PtrMemberAccess	s -> avctx -> height		7868087	0					
ANR	7868362	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868363	Identifier	s		7868087	0					
ANR	7868364	Identifier	avctx		7868087	1					
ANR	7868365	Identifier	height		7868087	1					
ANR	7868366	PrimaryExpression	3		7868087	1					
ANR	7868367	PrimaryExpression	4		7868087	1					
ANR	7868368	WhileStatement	while ( total_blocks )		7868087	34					
ANR	7868369	Condition	total_blocks	95:11:1457:1468	7868087	0	True				
ANR	7868370	Identifier	total_blocks		7868087	0					
ANR	7868371	CompoundStatement		93:25:1424:1424	7868087	1					
ANR	7868372	IfStatement	if ( stream_ptr > chunk_size )		7868087	0					
ANR	7868373	Condition	stream_ptr > chunk_size	101:12:1577:1599	7868087	0	True				
ANR	7868374	RelationalExpression	stream_ptr > chunk_size		7868087	0		>			
ANR	7868375	Identifier	stream_ptr		7868087	0					
ANR	7868376	Identifier	chunk_size		7868087	1					
ANR	7868377	CompoundStatement		99:37:1555:1555	7868087	1					
ANR	7868378	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""SMC decoder just went out of bounds (stream ptr = %d, chunk size = %d)\\n"" , stream_ptr , chunk_size )"	103:12:1617:1763	7868087	0	True				
ANR	7868379	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""SMC decoder just went out of bounds (stream ptr = %d, chunk size = %d)\\n"" , stream_ptr , chunk_size )"		7868087	0					
ANR	7868380	Callee	av_log		7868087	0					
ANR	7868381	Identifier	av_log		7868087	0					
ANR	7868382	ArgumentList	s -> avctx		7868087	1					
ANR	7868383	Argument	s -> avctx		7868087	0					
ANR	7868384	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868385	Identifier	s		7868087	0					
ANR	7868386	Identifier	avctx		7868087	1					
ANR	7868387	Argument	AV_LOG_INFO		7868087	1					
ANR	7868388	Identifier	AV_LOG_INFO		7868087	0					
ANR	7868389	Argument	"""SMC decoder just went out of bounds (stream ptr = %d, chunk size = %d)\\n"""		7868087	2					
ANR	7868390	PrimaryExpression	"""SMC decoder just went out of bounds (stream ptr = %d, chunk size = %d)\\n"""		7868087	0					
ANR	7868391	Argument	stream_ptr		7868087	3					
ANR	7868392	Identifier	stream_ptr		7868087	0					
ANR	7868393	Argument	chunk_size		7868087	4					
ANR	7868394	Identifier	chunk_size		7868087	0					
ANR	7868395	ReturnStatement	return ;	107:12:1778:1784	7868087	1	True				
ANR	7868396	IfStatement	if ( row_ptr >= image_size )		7868087	1					
ANR	7868397	Condition	row_ptr >= image_size	113:12:1868:1888	7868087	0	True				
ANR	7868398	RelationalExpression	row_ptr >= image_size		7868087	0		>=			
ANR	7868399	Identifier	row_ptr		7868087	0					
ANR	7868400	Identifier	image_size		7868087	1					
ANR	7868401	CompoundStatement		111:35:1844:1844	7868087	1					
ANR	7868402	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""SMC decoder just went out of bounds (row ptr = %d, height = %d)\\n"" , row_ptr , image_size )"	115:12:1906:2042	7868087	0	True				
ANR	7868403	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""SMC decoder just went out of bounds (row ptr = %d, height = %d)\\n"" , row_ptr , image_size )"		7868087	0					
ANR	7868404	Callee	av_log		7868087	0					
ANR	7868405	Identifier	av_log		7868087	0					
ANR	7868406	ArgumentList	s -> avctx		7868087	1					
ANR	7868407	Argument	s -> avctx		7868087	0					
ANR	7868408	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868409	Identifier	s		7868087	0					
ANR	7868410	Identifier	avctx		7868087	1					
ANR	7868411	Argument	AV_LOG_INFO		7868087	1					
ANR	7868412	Identifier	AV_LOG_INFO		7868087	0					
ANR	7868413	Argument	"""SMC decoder just went out of bounds (row ptr = %d, height = %d)\\n"""		7868087	2					
ANR	7868414	PrimaryExpression	"""SMC decoder just went out of bounds (row ptr = %d, height = %d)\\n"""		7868087	0					
ANR	7868415	Argument	row_ptr		7868087	3					
ANR	7868416	Identifier	row_ptr		7868087	0					
ANR	7868417	Argument	image_size		7868087	4					
ANR	7868418	Identifier	image_size		7868087	0					
ANR	7868419	ReturnStatement	return ;	119:12:2057:2063	7868087	1	True				
ANR	7868420	ExpressionStatement	opcode = s -> buf [ stream_ptr ++ ]	125:8:2087:2116	7868087	2	True				
ANR	7868421	AssignmentExpression	opcode = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7868422	Identifier	opcode		7868087	0					
ANR	7868423	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7868424	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868425	Identifier	s		7868087	0					
ANR	7868426	Identifier	buf		7868087	1					
ANR	7868427	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7868428	Identifier	stream_ptr		7868087	0					
ANR	7868429	IncDec	++		7868087	1					
ANR	7868430	SwitchStatement	switch ( opcode & 0xF0 )		7868087	3					
ANR	7868431	Condition	opcode & 0xF0	127:16:2135:2147	7868087	0	True				
ANR	7868432	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7868433	Identifier	opcode		7868087	0					
ANR	7868434	PrimaryExpression	0xF0		7868087	1					
ANR	7868435	CompoundStatement		125:31:2103:2103	7868087	1					
ANR	7868436	Label	case 0x00 :	131:8:2190:2199	7868087	0	True				
ANR	7868437	Label	case 0x10 :	133:8:2210:2219	7868087	1	True				
ANR	7868438	ExpressionStatement	n_blocks = GET_BLOCK_COUNT ( )	135:12:2234:2262	7868087	2	True				
ANR	7868439	AssignmentExpression	n_blocks = GET_BLOCK_COUNT ( )		7868087	0		=			
ANR	7868440	Identifier	n_blocks		7868087	0					
ANR	7868441	CallExpression	GET_BLOCK_COUNT ( )		7868087	1					
ANR	7868442	Callee	GET_BLOCK_COUNT		7868087	0					
ANR	7868443	Identifier	GET_BLOCK_COUNT		7868087	0					
ANR	7868444	ArgumentList			7868087	1					
ANR	7868445	WhileStatement	while ( n_blocks -- )		7868087	3					
ANR	7868446	Condition	n_blocks --	137:19:2284:2293	7868087	0	True				
ANR	7868447	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7868448	Identifier	n_blocks		7868087	0					
ANR	7868449	IncDec	--		7868087	1					
ANR	7868450	CompoundStatement		135:31:2249:2249	7868087	1					
ANR	7868451	ExpressionStatement	ADVANCE_BLOCK ( )	139:16:2315:2330	7868087	0	True				
ANR	7868452	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7868453	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7868454	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7868455	ArgumentList			7868087	1					
ANR	7868456	BreakStatement	break ;	143:12:2360:2365	7868087	4	True				
ANR	7868457	Label	case 0x20 :	149:8:2419:2428	7868087	5	True				
ANR	7868458	Label	case 0x30 :	151:8:2439:2448	7868087	6	True				
ANR	7868459	ExpressionStatement	n_blocks = GET_BLOCK_COUNT ( )	153:12:2463:2491	7868087	7	True				
ANR	7868460	AssignmentExpression	n_blocks = GET_BLOCK_COUNT ( )		7868087	0		=			
ANR	7868461	Identifier	n_blocks		7868087	0					
ANR	7868462	CallExpression	GET_BLOCK_COUNT ( )		7868087	1					
ANR	7868463	Callee	GET_BLOCK_COUNT		7868087	0					
ANR	7868464	Identifier	GET_BLOCK_COUNT		7868087	0					
ANR	7868465	ArgumentList			7868087	1					
ANR	7868466	IfStatement	if ( ( row_ptr == 0 ) && ( pixel_ptr == 0 ) )		7868087	8					
ANR	7868467	Condition	( row_ptr == 0 ) && ( pixel_ptr == 0 )	159:16:2544:2577	7868087	0	True				
ANR	7868468	AndExpression	( row_ptr == 0 ) && ( pixel_ptr == 0 )		7868087	0		&&			
ANR	7868469	EqualityExpression	row_ptr == 0		7868087	0		==			
ANR	7868470	Identifier	row_ptr		7868087	0					
ANR	7868471	PrimaryExpression	0		7868087	1					
ANR	7868472	EqualityExpression	pixel_ptr == 0		7868087	1		==			
ANR	7868473	Identifier	pixel_ptr		7868087	0					
ANR	7868474	PrimaryExpression	0		7868087	1					
ANR	7868475	CompoundStatement		157:52:2533:2533	7868087	1					
ANR	7868476	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""encountered repeat block opcode (%02X) but no blocks rendered yet\\n"" , opcode & 0xF0 )"	161:16:2599:2735	7868087	0	True				
ANR	7868477	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""encountered repeat block opcode (%02X) but no blocks rendered yet\\n"" , opcode & 0xF0 )"		7868087	0					
ANR	7868478	Callee	av_log		7868087	0					
ANR	7868479	Identifier	av_log		7868087	0					
ANR	7868480	ArgumentList	s -> avctx		7868087	1					
ANR	7868481	Argument	s -> avctx		7868087	0					
ANR	7868482	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868483	Identifier	s		7868087	0					
ANR	7868484	Identifier	avctx		7868087	1					
ANR	7868485	Argument	AV_LOG_INFO		7868087	1					
ANR	7868486	Identifier	AV_LOG_INFO		7868087	0					
ANR	7868487	Argument	"""encountered repeat block opcode (%02X) but no blocks rendered yet\\n"""		7868087	2					
ANR	7868488	PrimaryExpression	"""encountered repeat block opcode (%02X) but no blocks rendered yet\\n"""		7868087	0					
ANR	7868489	Argument	opcode & 0xF0		7868087	3					
ANR	7868490	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7868491	Identifier	opcode		7868087	0					
ANR	7868492	PrimaryExpression	0xF0		7868087	1					
ANR	7868493	BreakStatement	break ;	165:16:2754:2759	7868087	1	True				
ANR	7868494	IfStatement	if ( pixel_ptr == 0 )		7868087	9					
ANR	7868495	Condition	pixel_ptr == 0	173:16:2858:2871	7868087	0	True				
ANR	7868496	EqualityExpression	pixel_ptr == 0		7868087	0		==			
ANR	7868497	Identifier	pixel_ptr		7868087	0					
ANR	7868498	PrimaryExpression	0		7868087	1					
ANR	7868499	ExpressionStatement	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4	175:16:2891:2983	7868087	1	True				
ANR	7868500	AssignmentExpression	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4		7868087	0		=			
ANR	7868501	Identifier	prev_block_ptr1		7868087	0					
ANR	7868502	AdditiveExpression	( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4		7868087	1		+			
ANR	7868503	AdditiveExpression	row_ptr - s -> avctx -> width * 4		7868087	0		-			
ANR	7868504	Identifier	row_ptr		7868087	0					
ANR	7868505	MultiplicativeExpression	s -> avctx -> width * 4		7868087	1		*			
ANR	7868506	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868507	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868508	Identifier	s		7868087	0					
ANR	7868509	Identifier	avctx		7868087	1					
ANR	7868510	Identifier	width		7868087	1					
ANR	7868511	PrimaryExpression	4		7868087	1					
ANR	7868512	AdditiveExpression	s -> avctx -> width - 4		7868087	1		-			
ANR	7868513	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868514	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868515	Identifier	s		7868087	0					
ANR	7868516	Identifier	avctx		7868087	1					
ANR	7868517	Identifier	width		7868087	1					
ANR	7868518	PrimaryExpression	4		7868087	1					
ANR	7868519	ElseStatement	else		7868087	0					
ANR	7868520	ExpressionStatement	prev_block_ptr1 = row_ptr + pixel_ptr - 4	181:16:3020:3061	7868087	0	True				
ANR	7868521	AssignmentExpression	prev_block_ptr1 = row_ptr + pixel_ptr - 4		7868087	0		=			
ANR	7868522	Identifier	prev_block_ptr1		7868087	0					
ANR	7868523	AdditiveExpression	row_ptr + pixel_ptr - 4		7868087	1		+			
ANR	7868524	Identifier	row_ptr		7868087	0					
ANR	7868525	AdditiveExpression	pixel_ptr - 4		7868087	1		-			
ANR	7868526	Identifier	pixel_ptr		7868087	0					
ANR	7868527	PrimaryExpression	4		7868087	1					
ANR	7868528	WhileStatement	while ( n_blocks -- )		7868087	10					
ANR	7868529	Condition	n_blocks --	185:19:3085:3094	7868087	0	True				
ANR	7868530	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7868531	Identifier	n_blocks		7868087	0					
ANR	7868532	IncDec	--		7868087	1					
ANR	7868533	CompoundStatement		183:31:3050:3050	7868087	1					
ANR	7868534	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	187:16:3116:3147	7868087	0	True				
ANR	7868535	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7868536	Identifier	block_ptr		7868087	0					
ANR	7868537	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7868538	Identifier	row_ptr		7868087	0					
ANR	7868539	Identifier	pixel_ptr		7868087	1					
ANR	7868540	ExpressionStatement	prev_block_ptr = prev_block_ptr1	189:16:3166:3198	7868087	1	True				
ANR	7868541	AssignmentExpression	prev_block_ptr = prev_block_ptr1		7868087	0		=			
ANR	7868542	Identifier	prev_block_ptr		7868087	0					
ANR	7868543	Identifier	prev_block_ptr1		7868087	1					
ANR	7868544	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	2					
ANR	7868545	ForInit	pixel_y = 0 ;	191:21:3222:3233	7868087	0	True				
ANR	7868546	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7868547	Identifier	pixel_y		7868087	0					
ANR	7868548	PrimaryExpression	0		7868087	1					
ANR	7868549	Condition	pixel_y < 4	191:34:3235:3245	7868087	1	True				
ANR	7868550	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7868551	Identifier	pixel_y		7868087	0					
ANR	7868552	PrimaryExpression	4		7868087	1					
ANR	7868553	PostIncDecOperationExpression	pixel_y ++	191:47:3248:3256	7868087	2	True				
ANR	7868554	Identifier	pixel_y		7868087	0					
ANR	7868555	IncDec	++		7868087	1					
ANR	7868556	CompoundStatement		189:58:3212:3212	7868087	3					
ANR	7868557	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7868558	ForInit	pixel_x = 0 ;	193:25:3287:3298	7868087	0	True				
ANR	7868559	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7868560	Identifier	pixel_x		7868087	0					
ANR	7868561	PrimaryExpression	0		7868087	1					
ANR	7868562	Condition	pixel_x < 4	193:38:3300:3310	7868087	1	True				
ANR	7868563	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7868564	Identifier	pixel_x		7868087	0					
ANR	7868565	PrimaryExpression	4		7868087	1					
ANR	7868566	PostIncDecOperationExpression	pixel_x ++	193:51:3313:3321	7868087	2	True				
ANR	7868567	Identifier	pixel_x		7868087	0					
ANR	7868568	IncDec	++		7868087	1					
ANR	7868569	CompoundStatement		191:62:3277:3277	7868087	3					
ANR	7868570	ExpressionStatement	pixels [ block_ptr ++ ] = pixels [ prev_block_ptr ++ ]	195:24:3351:3397	7868087	0	True				
ANR	7868571	AssignmentExpression	pixels [ block_ptr ++ ] = pixels [ prev_block_ptr ++ ]		7868087	0		=			
ANR	7868572	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7868573	Identifier	pixels		7868087	0					
ANR	7868574	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7868575	Identifier	block_ptr		7868087	0					
ANR	7868576	IncDec	++		7868087	1					
ANR	7868577	ArrayIndexing	pixels [ prev_block_ptr ++ ]		7868087	1					
ANR	7868578	Identifier	pixels		7868087	0					
ANR	7868579	PostIncDecOperationExpression	prev_block_ptr ++		7868087	1					
ANR	7868580	Identifier	prev_block_ptr		7868087	0					
ANR	7868581	IncDec	++		7868087	1					
ANR	7868582	ExpressionStatement	block_ptr += row_inc	199:20:3443:3463	7868087	1	True				
ANR	7868583	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7868584	Identifier	block_ptr		7868087	0					
ANR	7868585	Identifier	row_inc		7868087	1					
ANR	7868586	ExpressionStatement	prev_block_ptr += row_inc	201:20:3486:3511	7868087	2	True				
ANR	7868587	AssignmentExpression	prev_block_ptr += row_inc		7868087	0		+=			
ANR	7868588	Identifier	prev_block_ptr		7868087	0					
ANR	7868589	Identifier	row_inc		7868087	1					
ANR	7868590	ExpressionStatement	ADVANCE_BLOCK ( )	205:16:3549:3564	7868087	3	True				
ANR	7868591	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7868592	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7868593	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7868594	ArgumentList			7868087	1					
ANR	7868595	BreakStatement	break ;	209:12:3594:3599	7868087	11	True				
ANR	7868596	Label	case 0x40 :	215:8:3666:3675	7868087	12	True				
ANR	7868597	Label	case 0x50 :	217:8:3686:3695	7868087	13	True				
ANR	7868598	ExpressionStatement	n_blocks = GET_BLOCK_COUNT ( )	219:12:3710:3738	7868087	14	True				
ANR	7868599	AssignmentExpression	n_blocks = GET_BLOCK_COUNT ( )		7868087	0		=			
ANR	7868600	Identifier	n_blocks		7868087	0					
ANR	7868601	CallExpression	GET_BLOCK_COUNT ( )		7868087	1					
ANR	7868602	Callee	GET_BLOCK_COUNT		7868087	0					
ANR	7868603	Identifier	GET_BLOCK_COUNT		7868087	0					
ANR	7868604	ArgumentList			7868087	1					
ANR	7868605	ExpressionStatement	n_blocks *= 2	221:12:3753:3766	7868087	15	True				
ANR	7868606	AssignmentExpression	n_blocks *= 2		7868087	0		*=			
ANR	7868607	Identifier	n_blocks		7868087	0					
ANR	7868608	PrimaryExpression	2		7868087	1					
ANR	7868609	IfStatement	if ( ( row_ptr == 0 ) && ( pixel_ptr < 2 * 4 ) )		7868087	16					
ANR	7868610	Condition	( row_ptr == 0 ) && ( pixel_ptr < 2 * 4 )	227:16:3819:3855	7868087	0	True				
ANR	7868611	AndExpression	( row_ptr == 0 ) && ( pixel_ptr < 2 * 4 )		7868087	0		&&			
ANR	7868612	EqualityExpression	row_ptr == 0		7868087	0		==			
ANR	7868613	Identifier	row_ptr		7868087	0					
ANR	7868614	PrimaryExpression	0		7868087	1					
ANR	7868615	RelationalExpression	pixel_ptr < 2 * 4		7868087	1		<			
ANR	7868616	Identifier	pixel_ptr		7868087	0					
ANR	7868617	MultiplicativeExpression	2 * 4		7868087	1		*			
ANR	7868618	PrimaryExpression	2		7868087	0					
ANR	7868619	PrimaryExpression	4		7868087	1					
ANR	7868620	CompoundStatement		225:55:3811:3811	7868087	1					
ANR	7868621	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""encountered repeat block opcode (%02X) but not enough blocks rendered yet\\n"" , opcode & 0xF0 )"	229:16:3877:4021	7868087	0	True				
ANR	7868622	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""encountered repeat block opcode (%02X) but not enough blocks rendered yet\\n"" , opcode & 0xF0 )"		7868087	0					
ANR	7868623	Callee	av_log		7868087	0					
ANR	7868624	Identifier	av_log		7868087	0					
ANR	7868625	ArgumentList	s -> avctx		7868087	1					
ANR	7868626	Argument	s -> avctx		7868087	0					
ANR	7868627	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868628	Identifier	s		7868087	0					
ANR	7868629	Identifier	avctx		7868087	1					
ANR	7868630	Argument	AV_LOG_INFO		7868087	1					
ANR	7868631	Identifier	AV_LOG_INFO		7868087	0					
ANR	7868632	Argument	"""encountered repeat block opcode (%02X) but not enough blocks rendered yet\\n"""		7868087	2					
ANR	7868633	PrimaryExpression	"""encountered repeat block opcode (%02X) but not enough blocks rendered yet\\n"""		7868087	0					
ANR	7868634	Argument	opcode & 0xF0		7868087	3					
ANR	7868635	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7868636	Identifier	opcode		7868087	0					
ANR	7868637	PrimaryExpression	0xF0		7868087	1					
ANR	7868638	BreakStatement	break ;	233:16:4040:4045	7868087	1	True				
ANR	7868639	IfStatement	if ( pixel_ptr == 0 )		7868087	17					
ANR	7868640	Condition	pixel_ptr == 0	241:16:4147:4160	7868087	0	True				
ANR	7868641	EqualityExpression	pixel_ptr == 0		7868087	0		==			
ANR	7868642	Identifier	pixel_ptr		7868087	0					
ANR	7868643	PrimaryExpression	0		7868087	1					
ANR	7868644	ExpressionStatement	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4 * 2	243:16:4180:4276	7868087	1	True				
ANR	7868645	AssignmentExpression	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4 * 2		7868087	0		=			
ANR	7868646	Identifier	prev_block_ptr1		7868087	0					
ANR	7868647	AdditiveExpression	( row_ptr - s -> avctx -> width * 4 ) + s -> avctx -> width - 4 * 2		7868087	1		+			
ANR	7868648	AdditiveExpression	row_ptr - s -> avctx -> width * 4		7868087	0		-			
ANR	7868649	Identifier	row_ptr		7868087	0					
ANR	7868650	MultiplicativeExpression	s -> avctx -> width * 4		7868087	1		*			
ANR	7868651	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868652	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868653	Identifier	s		7868087	0					
ANR	7868654	Identifier	avctx		7868087	1					
ANR	7868655	Identifier	width		7868087	1					
ANR	7868656	PrimaryExpression	4		7868087	1					
ANR	7868657	AdditiveExpression	s -> avctx -> width - 4 * 2		7868087	1		-			
ANR	7868658	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868659	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868660	Identifier	s		7868087	0					
ANR	7868661	Identifier	avctx		7868087	1					
ANR	7868662	Identifier	width		7868087	1					
ANR	7868663	MultiplicativeExpression	4 * 2		7868087	1		*			
ANR	7868664	PrimaryExpression	4		7868087	0					
ANR	7868665	PrimaryExpression	2		7868087	1					
ANR	7868666	ElseStatement	else		7868087	0					
ANR	7868667	IfStatement	if ( pixel_ptr == 4 )		7868087	0					
ANR	7868668	Condition	pixel_ptr == 4	247:21:4300:4313	7868087	0	True				
ANR	7868669	EqualityExpression	pixel_ptr == 4		7868087	0		==			
ANR	7868670	Identifier	pixel_ptr		7868087	0					
ANR	7868671	PrimaryExpression	4		7868087	1					
ANR	7868672	ExpressionStatement	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + row_inc	249:16:4333:4392	7868087	1	True				
ANR	7868673	AssignmentExpression	prev_block_ptr1 = ( row_ptr - s -> avctx -> width * 4 ) + row_inc		7868087	0		=			
ANR	7868674	Identifier	prev_block_ptr1		7868087	0					
ANR	7868675	AdditiveExpression	( row_ptr - s -> avctx -> width * 4 ) + row_inc		7868087	1		+			
ANR	7868676	AdditiveExpression	row_ptr - s -> avctx -> width * 4		7868087	0		-			
ANR	7868677	Identifier	row_ptr		7868087	0					
ANR	7868678	MultiplicativeExpression	s -> avctx -> width * 4		7868087	1		*			
ANR	7868679	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868680	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868681	Identifier	s		7868087	0					
ANR	7868682	Identifier	avctx		7868087	1					
ANR	7868683	Identifier	width		7868087	1					
ANR	7868684	PrimaryExpression	4		7868087	1					
ANR	7868685	Identifier	row_inc		7868087	1					
ANR	7868686	ElseStatement	else		7868087	0					
ANR	7868687	ExpressionStatement	prev_block_ptr1 = row_ptr + pixel_ptr - 4 * 2	253:16:4429:4474	7868087	0	True				
ANR	7868688	AssignmentExpression	prev_block_ptr1 = row_ptr + pixel_ptr - 4 * 2		7868087	0		=			
ANR	7868689	Identifier	prev_block_ptr1		7868087	0					
ANR	7868690	AdditiveExpression	row_ptr + pixel_ptr - 4 * 2		7868087	1		+			
ANR	7868691	Identifier	row_ptr		7868087	0					
ANR	7868692	AdditiveExpression	pixel_ptr - 4 * 2		7868087	1		-			
ANR	7868693	Identifier	pixel_ptr		7868087	0					
ANR	7868694	MultiplicativeExpression	4 * 2		7868087	1		*			
ANR	7868695	PrimaryExpression	4		7868087	0					
ANR	7868696	PrimaryExpression	2		7868087	1					
ANR	7868697	IfStatement	if ( pixel_ptr == 0 )		7868087	18					
ANR	7868698	Condition	pixel_ptr == 0	257:16:4495:4508	7868087	0	True				
ANR	7868699	EqualityExpression	pixel_ptr == 0		7868087	0		==			
ANR	7868700	Identifier	pixel_ptr		7868087	0					
ANR	7868701	PrimaryExpression	0		7868087	1					
ANR	7868702	ExpressionStatement	prev_block_ptr2 = ( row_ptr - s -> avctx -> width * 4 ) + row_inc	259:16:4528:4587	7868087	1	True				
ANR	7868703	AssignmentExpression	prev_block_ptr2 = ( row_ptr - s -> avctx -> width * 4 ) + row_inc		7868087	0		=			
ANR	7868704	Identifier	prev_block_ptr2		7868087	0					
ANR	7868705	AdditiveExpression	( row_ptr - s -> avctx -> width * 4 ) + row_inc		7868087	1		+			
ANR	7868706	AdditiveExpression	row_ptr - s -> avctx -> width * 4		7868087	0		-			
ANR	7868707	Identifier	row_ptr		7868087	0					
ANR	7868708	MultiplicativeExpression	s -> avctx -> width * 4		7868087	1		*			
ANR	7868709	PtrMemberAccess	s -> avctx -> width		7868087	0					
ANR	7868710	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7868711	Identifier	s		7868087	0					
ANR	7868712	Identifier	avctx		7868087	1					
ANR	7868713	Identifier	width		7868087	1					
ANR	7868714	PrimaryExpression	4		7868087	1					
ANR	7868715	Identifier	row_inc		7868087	1					
ANR	7868716	ElseStatement	else		7868087	0					
ANR	7868717	ExpressionStatement	prev_block_ptr2 = row_ptr + pixel_ptr - 4	263:16:4624:4665	7868087	0	True				
ANR	7868718	AssignmentExpression	prev_block_ptr2 = row_ptr + pixel_ptr - 4		7868087	0		=			
ANR	7868719	Identifier	prev_block_ptr2		7868087	0					
ANR	7868720	AdditiveExpression	row_ptr + pixel_ptr - 4		7868087	1		+			
ANR	7868721	Identifier	row_ptr		7868087	0					
ANR	7868722	AdditiveExpression	pixel_ptr - 4		7868087	1		-			
ANR	7868723	Identifier	pixel_ptr		7868087	0					
ANR	7868724	PrimaryExpression	4		7868087	1					
ANR	7868725	ExpressionStatement	prev_block_flag = 0	267:12:4682:4701	7868087	19	True				
ANR	7868726	AssignmentExpression	prev_block_flag = 0		7868087	0		=			
ANR	7868727	Identifier	prev_block_flag		7868087	0					
ANR	7868728	PrimaryExpression	0		7868087	1					
ANR	7868729	WhileStatement	while ( n_blocks -- )		7868087	20					
ANR	7868730	Condition	n_blocks --	269:19:4723:4732	7868087	0	True				
ANR	7868731	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7868732	Identifier	n_blocks		7868087	0					
ANR	7868733	IncDec	--		7868087	1					
ANR	7868734	CompoundStatement		267:31:4688:4688	7868087	1					
ANR	7868735	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	271:16:4754:4785	7868087	0	True				
ANR	7868736	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7868737	Identifier	block_ptr		7868087	0					
ANR	7868738	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7868739	Identifier	row_ptr		7868087	0					
ANR	7868740	Identifier	pixel_ptr		7868087	1					
ANR	7868741	IfStatement	if ( prev_block_flag )		7868087	1					
ANR	7868742	Condition	prev_block_flag	273:20:4808:4822	7868087	0	True				
ANR	7868743	Identifier	prev_block_flag		7868087	0					
ANR	7868744	ExpressionStatement	prev_block_ptr = prev_block_ptr2	275:20:4846:4878	7868087	1	True				
ANR	7868745	AssignmentExpression	prev_block_ptr = prev_block_ptr2		7868087	0		=			
ANR	7868746	Identifier	prev_block_ptr		7868087	0					
ANR	7868747	Identifier	prev_block_ptr2		7868087	1					
ANR	7868748	ElseStatement	else		7868087	0					
ANR	7868749	ExpressionStatement	prev_block_ptr = prev_block_ptr1	279:20:4923:4955	7868087	0	True				
ANR	7868750	AssignmentExpression	prev_block_ptr = prev_block_ptr1		7868087	0		=			
ANR	7868751	Identifier	prev_block_ptr		7868087	0					
ANR	7868752	Identifier	prev_block_ptr1		7868087	1					
ANR	7868753	ExpressionStatement	prev_block_flag = ! prev_block_flag	281:16:4974:5008	7868087	2	True				
ANR	7868754	AssignmentExpression	prev_block_flag = ! prev_block_flag		7868087	0		=			
ANR	7868755	Identifier	prev_block_flag		7868087	0					
ANR	7868756	UnaryOperationExpression	! prev_block_flag		7868087	1					
ANR	7868757	UnaryOperator	!		7868087	0					
ANR	7868758	Identifier	prev_block_flag		7868087	1					
ANR	7868759	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	3					
ANR	7868760	ForInit	pixel_y = 0 ;	285:21:5034:5045	7868087	0	True				
ANR	7868761	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7868762	Identifier	pixel_y		7868087	0					
ANR	7868763	PrimaryExpression	0		7868087	1					
ANR	7868764	Condition	pixel_y < 4	285:34:5047:5057	7868087	1	True				
ANR	7868765	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7868766	Identifier	pixel_y		7868087	0					
ANR	7868767	PrimaryExpression	4		7868087	1					
ANR	7868768	PostIncDecOperationExpression	pixel_y ++	285:47:5060:5068	7868087	2	True				
ANR	7868769	Identifier	pixel_y		7868087	0					
ANR	7868770	IncDec	++		7868087	1					
ANR	7868771	CompoundStatement		283:58:5024:5024	7868087	3					
ANR	7868772	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7868773	ForInit	pixel_x = 0 ;	287:25:5099:5110	7868087	0	True				
ANR	7868774	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7868775	Identifier	pixel_x		7868087	0					
ANR	7868776	PrimaryExpression	0		7868087	1					
ANR	7868777	Condition	pixel_x < 4	287:38:5112:5122	7868087	1	True				
ANR	7868778	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7868779	Identifier	pixel_x		7868087	0					
ANR	7868780	PrimaryExpression	4		7868087	1					
ANR	7868781	PostIncDecOperationExpression	pixel_x ++	287:51:5125:5133	7868087	2	True				
ANR	7868782	Identifier	pixel_x		7868087	0					
ANR	7868783	IncDec	++		7868087	1					
ANR	7868784	CompoundStatement		285:62:5089:5089	7868087	3					
ANR	7868785	ExpressionStatement	pixels [ block_ptr ++ ] = pixels [ prev_block_ptr ++ ]	289:24:5163:5209	7868087	0	True				
ANR	7868786	AssignmentExpression	pixels [ block_ptr ++ ] = pixels [ prev_block_ptr ++ ]		7868087	0		=			
ANR	7868787	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7868788	Identifier	pixels		7868087	0					
ANR	7868789	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7868790	Identifier	block_ptr		7868087	0					
ANR	7868791	IncDec	++		7868087	1					
ANR	7868792	ArrayIndexing	pixels [ prev_block_ptr ++ ]		7868087	1					
ANR	7868793	Identifier	pixels		7868087	0					
ANR	7868794	PostIncDecOperationExpression	prev_block_ptr ++		7868087	1					
ANR	7868795	Identifier	prev_block_ptr		7868087	0					
ANR	7868796	IncDec	++		7868087	1					
ANR	7868797	ExpressionStatement	block_ptr += row_inc	293:20:5255:5275	7868087	1	True				
ANR	7868798	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7868799	Identifier	block_ptr		7868087	0					
ANR	7868800	Identifier	row_inc		7868087	1					
ANR	7868801	ExpressionStatement	prev_block_ptr += row_inc	295:20:5298:5323	7868087	2	True				
ANR	7868802	AssignmentExpression	prev_block_ptr += row_inc		7868087	0		+=			
ANR	7868803	Identifier	prev_block_ptr		7868087	0					
ANR	7868804	Identifier	row_inc		7868087	1					
ANR	7868805	ExpressionStatement	ADVANCE_BLOCK ( )	299:16:5361:5376	7868087	4	True				
ANR	7868806	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7868807	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7868808	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7868809	ArgumentList			7868087	1					
ANR	7868810	BreakStatement	break ;	303:12:5406:5411	7868087	21	True				
ANR	7868811	Label	case 0x60 :	309:8:5462:5471	7868087	22	True				
ANR	7868812	Label	case 0x70 :	311:8:5482:5491	7868087	23	True				
ANR	7868813	ExpressionStatement	n_blocks = GET_BLOCK_COUNT ( )	313:12:5506:5534	7868087	24	True				
ANR	7868814	AssignmentExpression	n_blocks = GET_BLOCK_COUNT ( )		7868087	0		=			
ANR	7868815	Identifier	n_blocks		7868087	0					
ANR	7868816	CallExpression	GET_BLOCK_COUNT ( )		7868087	1					
ANR	7868817	Callee	GET_BLOCK_COUNT		7868087	0					
ANR	7868818	Identifier	GET_BLOCK_COUNT		7868087	0					
ANR	7868819	ArgumentList			7868087	1					
ANR	7868820	ExpressionStatement	pixel = s -> buf [ stream_ptr ++ ]	315:12:5549:5577	7868087	25	True				
ANR	7868821	AssignmentExpression	pixel = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7868822	Identifier	pixel		7868087	0					
ANR	7868823	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7868824	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868825	Identifier	s		7868087	0					
ANR	7868826	Identifier	buf		7868087	1					
ANR	7868827	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7868828	Identifier	stream_ptr		7868087	0					
ANR	7868829	IncDec	++		7868087	1					
ANR	7868830	WhileStatement	while ( n_blocks -- )		7868087	26					
ANR	7868831	Condition	n_blocks --	319:19:5601:5610	7868087	0	True				
ANR	7868832	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7868833	Identifier	n_blocks		7868087	0					
ANR	7868834	IncDec	--		7868087	1					
ANR	7868835	CompoundStatement		317:31:5566:5566	7868087	1					
ANR	7868836	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	321:16:5632:5663	7868087	0	True				
ANR	7868837	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7868838	Identifier	block_ptr		7868087	0					
ANR	7868839	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7868840	Identifier	row_ptr		7868087	0					
ANR	7868841	Identifier	pixel_ptr		7868087	1					
ANR	7868842	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	1					
ANR	7868843	ForInit	pixel_y = 0 ;	323:21:5687:5698	7868087	0	True				
ANR	7868844	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7868845	Identifier	pixel_y		7868087	0					
ANR	7868846	PrimaryExpression	0		7868087	1					
ANR	7868847	Condition	pixel_y < 4	323:34:5700:5710	7868087	1	True				
ANR	7868848	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7868849	Identifier	pixel_y		7868087	0					
ANR	7868850	PrimaryExpression	4		7868087	1					
ANR	7868851	PostIncDecOperationExpression	pixel_y ++	323:47:5713:5721	7868087	2	True				
ANR	7868852	Identifier	pixel_y		7868087	0					
ANR	7868853	IncDec	++		7868087	1					
ANR	7868854	CompoundStatement		321:58:5677:5677	7868087	3					
ANR	7868855	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7868856	ForInit	pixel_x = 0 ;	325:25:5752:5763	7868087	0	True				
ANR	7868857	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7868858	Identifier	pixel_x		7868087	0					
ANR	7868859	PrimaryExpression	0		7868087	1					
ANR	7868860	Condition	pixel_x < 4	325:38:5765:5775	7868087	1	True				
ANR	7868861	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7868862	Identifier	pixel_x		7868087	0					
ANR	7868863	PrimaryExpression	4		7868087	1					
ANR	7868864	PostIncDecOperationExpression	pixel_x ++	325:51:5778:5786	7868087	2	True				
ANR	7868865	Identifier	pixel_x		7868087	0					
ANR	7868866	IncDec	++		7868087	1					
ANR	7868867	CompoundStatement		323:62:5742:5742	7868087	3					
ANR	7868868	ExpressionStatement	pixels [ block_ptr ++ ] = pixel	327:24:5816:5843	7868087	0	True				
ANR	7868869	AssignmentExpression	pixels [ block_ptr ++ ] = pixel		7868087	0		=			
ANR	7868870	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7868871	Identifier	pixels		7868087	0					
ANR	7868872	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7868873	Identifier	block_ptr		7868087	0					
ANR	7868874	IncDec	++		7868087	1					
ANR	7868875	Identifier	pixel		7868087	1					
ANR	7868876	ExpressionStatement	block_ptr += row_inc	331:20:5889:5909	7868087	1	True				
ANR	7868877	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7868878	Identifier	block_ptr		7868087	0					
ANR	7868879	Identifier	row_inc		7868087	1					
ANR	7868880	ExpressionStatement	ADVANCE_BLOCK ( )	335:16:5947:5962	7868087	2	True				
ANR	7868881	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7868882	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7868883	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7868884	ArgumentList			7868087	1					
ANR	7868885	BreakStatement	break ;	339:12:5992:5997	7868087	27	True				
ANR	7868886	Label	case 0x80 :	345:8:6048:6057	7868087	28	True				
ANR	7868887	Label	case 0x90 :	347:8:6068:6077	7868087	29	True				
ANR	7868888	ExpressionStatement	n_blocks = ( opcode & 0x0F ) + 1	349:12:6092:6122	7868087	30	True				
ANR	7868889	AssignmentExpression	n_blocks = ( opcode & 0x0F ) + 1		7868087	0		=			
ANR	7868890	Identifier	n_blocks		7868087	0					
ANR	7868891	AdditiveExpression	( opcode & 0x0F ) + 1		7868087	1		+			
ANR	7868892	BitAndExpression	opcode & 0x0F		7868087	0		&			
ANR	7868893	Identifier	opcode		7868087	0					
ANR	7868894	PrimaryExpression	0x0F		7868087	1					
ANR	7868895	PrimaryExpression	1		7868087	1					
ANR	7868896	IfStatement	if ( ( opcode & 0xF0 ) == 0x80 )		7868087	31					
ANR	7868897	Condition	( opcode & 0xF0 ) == 0x80	355:16:6224:6246	7868087	0	True				
ANR	7868898	EqualityExpression	( opcode & 0xF0 ) == 0x80		7868087	0		==			
ANR	7868899	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7868900	Identifier	opcode		7868087	0					
ANR	7868901	PrimaryExpression	0xF0		7868087	1					
ANR	7868902	PrimaryExpression	0x80		7868087	1					
ANR	7868903	CompoundStatement		353:41:6202:6202	7868087	1					
ANR	7868904	ForStatement	for ( i = 0 ; i < CPAIR ; i ++ )		7868087	0					
ANR	7868905	ForInit	i = 0 ;	361:21:6414:6419	7868087	0	True				
ANR	7868906	AssignmentExpression	i = 0		7868087	0		=			
ANR	7868907	Identifier	i		7868087	0					
ANR	7868908	PrimaryExpression	0		7868087	1					
ANR	7868909	Condition	i < CPAIR	361:28:6421:6429	7868087	1	True				
ANR	7868910	RelationalExpression	i < CPAIR		7868087	0		<			
ANR	7868911	Identifier	i		7868087	0					
ANR	7868912	Identifier	CPAIR		7868087	1					
ANR	7868913	PostIncDecOperationExpression	i ++	361:39:6432:6434	7868087	2	True				
ANR	7868914	Identifier	i		7868087	0					
ANR	7868915	IncDec	++		7868087	1					
ANR	7868916	CompoundStatement		359:44:6390:6390	7868087	3					
ANR	7868917	ExpressionStatement	pixel = s -> buf [ stream_ptr ++ ]	363:20:6460:6488	7868087	0	True				
ANR	7868918	AssignmentExpression	pixel = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7868919	Identifier	pixel		7868087	0					
ANR	7868920	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7868921	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868922	Identifier	s		7868087	0					
ANR	7868923	Identifier	buf		7868087	1					
ANR	7868924	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7868925	Identifier	stream_ptr		7868087	0					
ANR	7868926	IncDec	++		7868087	1					
ANR	7868927	ExpressionStatement	color_table_index = CPAIR * color_pair_index + i	365:20:6511:6559	7868087	1	True				
ANR	7868928	AssignmentExpression	color_table_index = CPAIR * color_pair_index + i		7868087	0		=			
ANR	7868929	Identifier	color_table_index		7868087	0					
ANR	7868930	AdditiveExpression	CPAIR * color_pair_index + i		7868087	1		+			
ANR	7868931	MultiplicativeExpression	CPAIR * color_pair_index		7868087	0		*			
ANR	7868932	Identifier	CPAIR		7868087	0					
ANR	7868933	Identifier	color_pair_index		7868087	1					
ANR	7868934	Identifier	i		7868087	1					
ANR	7868935	ExpressionStatement	s -> color_pairs [ color_table_index ] = pixel	367:20:6582:6623	7868087	2	True				
ANR	7868936	AssignmentExpression	s -> color_pairs [ color_table_index ] = pixel		7868087	0		=			
ANR	7868937	ArrayIndexing	s -> color_pairs [ color_table_index ]		7868087	0					
ANR	7868938	PtrMemberAccess	s -> color_pairs		7868087	0					
ANR	7868939	Identifier	s		7868087	0					
ANR	7868940	Identifier	color_pairs		7868087	1					
ANR	7868941	Identifier	color_table_index		7868087	1					
ANR	7868942	Identifier	pixel		7868087	1					
ANR	7868943	ExpressionStatement	color_table_index = CPAIR * color_pair_index	373:16:6729:6773	7868087	1	True				
ANR	7868944	AssignmentExpression	color_table_index = CPAIR * color_pair_index		7868087	0		=			
ANR	7868945	Identifier	color_table_index		7868087	0					
ANR	7868946	MultiplicativeExpression	CPAIR * color_pair_index		7868087	1		*			
ANR	7868947	Identifier	CPAIR		7868087	0					
ANR	7868948	Identifier	color_pair_index		7868087	1					
ANR	7868949	ExpressionStatement	color_pair_index ++	375:16:6792:6810	7868087	2	True				
ANR	7868950	PostIncDecOperationExpression	color_pair_index ++		7868087	0					
ANR	7868951	Identifier	color_pair_index		7868087	0					
ANR	7868952	IncDec	++		7868087	1					
ANR	7868953	IfStatement	if ( color_pair_index == COLORS_PER_TABLE )		7868087	3					
ANR	7868954	Condition	color_pair_index == COLORS_PER_TABLE	379:20:6867:6902	7868087	0	True				
ANR	7868955	EqualityExpression	color_pair_index == COLORS_PER_TABLE		7868087	0		==			
ANR	7868956	Identifier	color_pair_index		7868087	0					
ANR	7868957	Identifier	COLORS_PER_TABLE		7868087	1					
ANR	7868958	ExpressionStatement	color_pair_index = 0	381:20:6926:6946	7868087	1	True				
ANR	7868959	AssignmentExpression	color_pair_index = 0		7868087	0		=			
ANR	7868960	Identifier	color_pair_index		7868087	0					
ANR	7868961	PrimaryExpression	0		7868087	1					
ANR	7868962	ElseStatement	else		7868087	0					
ANR	7868963	ExpressionStatement	color_table_index = CPAIR * s -> buf [ stream_ptr ++ ]	385:16:6985:7033	7868087	0	True				
ANR	7868964	AssignmentExpression	color_table_index = CPAIR * s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7868965	Identifier	color_table_index		7868087	0					
ANR	7868966	MultiplicativeExpression	CPAIR * s -> buf [ stream_ptr ++ ]		7868087	1		*			
ANR	7868967	Identifier	CPAIR		7868087	0					
ANR	7868968	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7868969	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868970	Identifier	s		7868087	0					
ANR	7868971	Identifier	buf		7868087	1					
ANR	7868972	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7868973	Identifier	stream_ptr		7868087	0					
ANR	7868974	IncDec	++		7868087	1					
ANR	7868975	WhileStatement	while ( n_blocks -- )		7868087	32					
ANR	7868976	Condition	n_blocks --	389:19:7057:7066	7868087	0	True				
ANR	7868977	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7868978	Identifier	n_blocks		7868087	0					
ANR	7868979	IncDec	--		7868087	1					
ANR	7868980	CompoundStatement		387:31:7022:7022	7868087	1					
ANR	7868981	ExpressionStatement	color_flags = AV_RB16 ( & s -> buf [ stream_ptr ] )	391:16:7088:7130	7868087	0	True				
ANR	7868982	AssignmentExpression	color_flags = AV_RB16 ( & s -> buf [ stream_ptr ] )		7868087	0		=			
ANR	7868983	Identifier	color_flags		7868087	0					
ANR	7868984	CallExpression	AV_RB16 ( & s -> buf [ stream_ptr ] )		7868087	1					
ANR	7868985	Callee	AV_RB16		7868087	0					
ANR	7868986	Identifier	AV_RB16		7868087	0					
ANR	7868987	ArgumentList	& s -> buf [ stream_ptr ]		7868087	1					
ANR	7868988	Argument	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7868989	UnaryOperationExpression	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7868990	UnaryOperator	&		7868087	0					
ANR	7868991	ArrayIndexing	s -> buf [ stream_ptr ]		7868087	1					
ANR	7868992	PtrMemberAccess	s -> buf		7868087	0					
ANR	7868993	Identifier	s		7868087	0					
ANR	7868994	Identifier	buf		7868087	1					
ANR	7868995	Identifier	stream_ptr		7868087	1					
ANR	7868996	ExpressionStatement	stream_ptr += 2	393:16:7149:7164	7868087	1	True				
ANR	7868997	AssignmentExpression	stream_ptr += 2		7868087	0		+=			
ANR	7868998	Identifier	stream_ptr		7868087	0					
ANR	7868999	PrimaryExpression	2		7868087	1					
ANR	7869000	ExpressionStatement	flag_mask = 0x8000	395:16:7183:7201	7868087	2	True				
ANR	7869001	AssignmentExpression	flag_mask = 0x8000		7868087	0		=			
ANR	7869002	Identifier	flag_mask		7868087	0					
ANR	7869003	PrimaryExpression	0x8000		7868087	1					
ANR	7869004	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	397:16:7220:7251	7868087	3	True				
ANR	7869005	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7869006	Identifier	block_ptr		7868087	0					
ANR	7869007	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7869008	Identifier	row_ptr		7868087	0					
ANR	7869009	Identifier	pixel_ptr		7868087	1					
ANR	7869010	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	4					
ANR	7869011	ForInit	pixel_y = 0 ;	399:21:7275:7286	7868087	0	True				
ANR	7869012	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7869013	Identifier	pixel_y		7868087	0					
ANR	7869014	PrimaryExpression	0		7868087	1					
ANR	7869015	Condition	pixel_y < 4	399:34:7288:7298	7868087	1	True				
ANR	7869016	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7869017	Identifier	pixel_y		7868087	0					
ANR	7869018	PrimaryExpression	4		7868087	1					
ANR	7869019	PostIncDecOperationExpression	pixel_y ++	399:47:7301:7309	7868087	2	True				
ANR	7869020	Identifier	pixel_y		7868087	0					
ANR	7869021	IncDec	++		7868087	1					
ANR	7869022	CompoundStatement		397:58:7265:7265	7868087	3					
ANR	7869023	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7869024	ForInit	pixel_x = 0 ;	401:25:7340:7351	7868087	0	True				
ANR	7869025	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7869026	Identifier	pixel_x		7868087	0					
ANR	7869027	PrimaryExpression	0		7868087	1					
ANR	7869028	Condition	pixel_x < 4	401:38:7353:7363	7868087	1	True				
ANR	7869029	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7869030	Identifier	pixel_x		7868087	0					
ANR	7869031	PrimaryExpression	4		7868087	1					
ANR	7869032	PostIncDecOperationExpression	pixel_x ++	401:51:7366:7374	7868087	2	True				
ANR	7869033	Identifier	pixel_x		7868087	0					
ANR	7869034	IncDec	++		7868087	1					
ANR	7869035	CompoundStatement		399:62:7330:7330	7868087	3					
ANR	7869036	IfStatement	if ( color_flags & flag_mask )		7868087	0					
ANR	7869037	Condition	color_flags & flag_mask	403:28:7408:7430	7868087	0	True				
ANR	7869038	BitAndExpression	color_flags & flag_mask		7868087	0		&			
ANR	7869039	Identifier	color_flags		7868087	0					
ANR	7869040	Identifier	flag_mask		7868087	1					
ANR	7869041	ExpressionStatement	pixel = color_table_index + 1	405:28:7462:7491	7868087	1	True				
ANR	7869042	AssignmentExpression	pixel = color_table_index + 1		7868087	0		=			
ANR	7869043	Identifier	pixel		7868087	0					
ANR	7869044	AdditiveExpression	color_table_index + 1		7868087	1		+			
ANR	7869045	Identifier	color_table_index		7868087	0					
ANR	7869046	PrimaryExpression	1		7868087	1					
ANR	7869047	ElseStatement	else		7868087	0					
ANR	7869048	ExpressionStatement	pixel = color_table_index	409:28:7552:7577	7868087	0	True				
ANR	7869049	AssignmentExpression	pixel = color_table_index		7868087	0		=			
ANR	7869050	Identifier	pixel		7868087	0					
ANR	7869051	Identifier	color_table_index		7868087	1					
ANR	7869052	ExpressionStatement	flag_mask >>= 1	411:24:7604:7619	7868087	1	True				
ANR	7869053	AssignmentExpression	flag_mask >>= 1		7868087	0		>>=			
ANR	7869054	Identifier	flag_mask		7868087	0					
ANR	7869055	PrimaryExpression	1		7868087	1					
ANR	7869056	ExpressionStatement	pixels [ block_ptr ++ ] = s -> color_pairs [ pixel ]	413:24:7646:7689	7868087	2	True				
ANR	7869057	AssignmentExpression	pixels [ block_ptr ++ ] = s -> color_pairs [ pixel ]		7868087	0		=			
ANR	7869058	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7869059	Identifier	pixels		7868087	0					
ANR	7869060	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7869061	Identifier	block_ptr		7868087	0					
ANR	7869062	IncDec	++		7868087	1					
ANR	7869063	ArrayIndexing	s -> color_pairs [ pixel ]		7868087	1					
ANR	7869064	PtrMemberAccess	s -> color_pairs		7868087	0					
ANR	7869065	Identifier	s		7868087	0					
ANR	7869066	Identifier	color_pairs		7868087	1					
ANR	7869067	Identifier	pixel		7868087	1					
ANR	7869068	ExpressionStatement	block_ptr += row_inc	417:20:7735:7755	7868087	1	True				
ANR	7869069	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7869070	Identifier	block_ptr		7868087	0					
ANR	7869071	Identifier	row_inc		7868087	1					
ANR	7869072	ExpressionStatement	ADVANCE_BLOCK ( )	421:16:7793:7808	7868087	5	True				
ANR	7869073	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7869074	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7869075	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7869076	ArgumentList			7868087	1					
ANR	7869077	BreakStatement	break ;	425:12:7838:7843	7868087	33	True				
ANR	7869078	Label	case 0xA0 :	431:8:7894:7903	7868087	34	True				
ANR	7869079	Label	case 0xB0 :	433:8:7914:7923	7868087	35	True				
ANR	7869080	ExpressionStatement	n_blocks = ( opcode & 0x0F ) + 1	435:12:7938:7968	7868087	36	True				
ANR	7869081	AssignmentExpression	n_blocks = ( opcode & 0x0F ) + 1		7868087	0		=			
ANR	7869082	Identifier	n_blocks		7868087	0					
ANR	7869083	AdditiveExpression	( opcode & 0x0F ) + 1		7868087	1		+			
ANR	7869084	BitAndExpression	opcode & 0x0F		7868087	0		&			
ANR	7869085	Identifier	opcode		7868087	0					
ANR	7869086	PrimaryExpression	0x0F		7868087	1					
ANR	7869087	PrimaryExpression	1		7868087	1					
ANR	7869088	IfStatement	if ( ( opcode & 0xF0 ) == 0xA0 )		7868087	37					
ANR	7869089	Condition	( opcode & 0xF0 ) == 0xA0	441:16:8070:8092	7868087	0	True				
ANR	7869090	EqualityExpression	( opcode & 0xF0 ) == 0xA0		7868087	0		==			
ANR	7869091	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7869092	Identifier	opcode		7868087	0					
ANR	7869093	PrimaryExpression	0xF0		7868087	1					
ANR	7869094	PrimaryExpression	0xA0		7868087	1					
ANR	7869095	CompoundStatement		439:41:8048:8048	7868087	1					
ANR	7869096	ForStatement	for ( i = 0 ; i < CQUAD ; i ++ )		7868087	0					
ANR	7869097	ForInit	i = 0 ;	447:21:8260:8265	7868087	0	True				
ANR	7869098	AssignmentExpression	i = 0		7868087	0		=			
ANR	7869099	Identifier	i		7868087	0					
ANR	7869100	PrimaryExpression	0		7868087	1					
ANR	7869101	Condition	i < CQUAD	447:28:8267:8275	7868087	1	True				
ANR	7869102	RelationalExpression	i < CQUAD		7868087	0		<			
ANR	7869103	Identifier	i		7868087	0					
ANR	7869104	Identifier	CQUAD		7868087	1					
ANR	7869105	PostIncDecOperationExpression	i ++	447:39:8278:8280	7868087	2	True				
ANR	7869106	Identifier	i		7868087	0					
ANR	7869107	IncDec	++		7868087	1					
ANR	7869108	CompoundStatement		445:44:8236:8236	7868087	3					
ANR	7869109	ExpressionStatement	pixel = s -> buf [ stream_ptr ++ ]	449:20:8306:8334	7868087	0	True				
ANR	7869110	AssignmentExpression	pixel = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7869111	Identifier	pixel		7868087	0					
ANR	7869112	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7869113	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869114	Identifier	s		7868087	0					
ANR	7869115	Identifier	buf		7868087	1					
ANR	7869116	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7869117	Identifier	stream_ptr		7868087	0					
ANR	7869118	IncDec	++		7868087	1					
ANR	7869119	ExpressionStatement	color_table_index = CQUAD * color_quad_index + i	451:20:8357:8405	7868087	1	True				
ANR	7869120	AssignmentExpression	color_table_index = CQUAD * color_quad_index + i		7868087	0		=			
ANR	7869121	Identifier	color_table_index		7868087	0					
ANR	7869122	AdditiveExpression	CQUAD * color_quad_index + i		7868087	1		+			
ANR	7869123	MultiplicativeExpression	CQUAD * color_quad_index		7868087	0		*			
ANR	7869124	Identifier	CQUAD		7868087	0					
ANR	7869125	Identifier	color_quad_index		7868087	1					
ANR	7869126	Identifier	i		7868087	1					
ANR	7869127	ExpressionStatement	s -> color_quads [ color_table_index ] = pixel	453:20:8428:8469	7868087	2	True				
ANR	7869128	AssignmentExpression	s -> color_quads [ color_table_index ] = pixel		7868087	0		=			
ANR	7869129	ArrayIndexing	s -> color_quads [ color_table_index ]		7868087	0					
ANR	7869130	PtrMemberAccess	s -> color_quads		7868087	0					
ANR	7869131	Identifier	s		7868087	0					
ANR	7869132	Identifier	color_quads		7868087	1					
ANR	7869133	Identifier	color_table_index		7868087	1					
ANR	7869134	Identifier	pixel		7868087	1					
ANR	7869135	ExpressionStatement	color_table_index = CQUAD * color_quad_index	459:16:8575:8619	7868087	1	True				
ANR	7869136	AssignmentExpression	color_table_index = CQUAD * color_quad_index		7868087	0		=			
ANR	7869137	Identifier	color_table_index		7868087	0					
ANR	7869138	MultiplicativeExpression	CQUAD * color_quad_index		7868087	1		*			
ANR	7869139	Identifier	CQUAD		7868087	0					
ANR	7869140	Identifier	color_quad_index		7868087	1					
ANR	7869141	ExpressionStatement	color_quad_index ++	461:16:8638:8656	7868087	2	True				
ANR	7869142	PostIncDecOperationExpression	color_quad_index ++		7868087	0					
ANR	7869143	Identifier	color_quad_index		7868087	0					
ANR	7869144	IncDec	++		7868087	1					
ANR	7869145	IfStatement	if ( color_quad_index == COLORS_PER_TABLE )		7868087	3					
ANR	7869146	Condition	color_quad_index == COLORS_PER_TABLE	465:20:8713:8748	7868087	0	True				
ANR	7869147	EqualityExpression	color_quad_index == COLORS_PER_TABLE		7868087	0		==			
ANR	7869148	Identifier	color_quad_index		7868087	0					
ANR	7869149	Identifier	COLORS_PER_TABLE		7868087	1					
ANR	7869150	ExpressionStatement	color_quad_index = 0	467:20:8772:8792	7868087	1	True				
ANR	7869151	AssignmentExpression	color_quad_index = 0		7868087	0		=			
ANR	7869152	Identifier	color_quad_index		7868087	0					
ANR	7869153	PrimaryExpression	0		7868087	1					
ANR	7869154	ElseStatement	else		7868087	0					
ANR	7869155	ExpressionStatement	color_table_index = CQUAD * s -> buf [ stream_ptr ++ ]	471:16:8831:8879	7868087	0	True				
ANR	7869156	AssignmentExpression	color_table_index = CQUAD * s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7869157	Identifier	color_table_index		7868087	0					
ANR	7869158	MultiplicativeExpression	CQUAD * s -> buf [ stream_ptr ++ ]		7868087	1		*			
ANR	7869159	Identifier	CQUAD		7868087	0					
ANR	7869160	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7869161	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869162	Identifier	s		7868087	0					
ANR	7869163	Identifier	buf		7868087	1					
ANR	7869164	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7869165	Identifier	stream_ptr		7868087	0					
ANR	7869166	IncDec	++		7868087	1					
ANR	7869167	WhileStatement	while ( n_blocks -- )		7868087	38					
ANR	7869168	Condition	n_blocks --	475:19:8903:8912	7868087	0	True				
ANR	7869169	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7869170	Identifier	n_blocks		7868087	0					
ANR	7869171	IncDec	--		7868087	1					
ANR	7869172	CompoundStatement		473:31:8868:8868	7868087	1					
ANR	7869173	ExpressionStatement	color_flags = AV_RB32 ( & s -> buf [ stream_ptr ] )	477:16:8934:8976	7868087	0	True				
ANR	7869174	AssignmentExpression	color_flags = AV_RB32 ( & s -> buf [ stream_ptr ] )		7868087	0		=			
ANR	7869175	Identifier	color_flags		7868087	0					
ANR	7869176	CallExpression	AV_RB32 ( & s -> buf [ stream_ptr ] )		7868087	1					
ANR	7869177	Callee	AV_RB32		7868087	0					
ANR	7869178	Identifier	AV_RB32		7868087	0					
ANR	7869179	ArgumentList	& s -> buf [ stream_ptr ]		7868087	1					
ANR	7869180	Argument	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7869181	UnaryOperationExpression	& s -> buf [ stream_ptr ]		7868087	0					
ANR	7869182	UnaryOperator	&		7868087	0					
ANR	7869183	ArrayIndexing	s -> buf [ stream_ptr ]		7868087	1					
ANR	7869184	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869185	Identifier	s		7868087	0					
ANR	7869186	Identifier	buf		7868087	1					
ANR	7869187	Identifier	stream_ptr		7868087	1					
ANR	7869188	ExpressionStatement	stream_ptr += 4	479:16:8995:9010	7868087	1	True				
ANR	7869189	AssignmentExpression	stream_ptr += 4		7868087	0		+=			
ANR	7869190	Identifier	stream_ptr		7868087	0					
ANR	7869191	PrimaryExpression	4		7868087	1					
ANR	7869192	ExpressionStatement	flag_mask = 30	483:16:9102:9116	7868087	2	True				
ANR	7869193	AssignmentExpression	flag_mask = 30		7868087	0		=			
ANR	7869194	Identifier	flag_mask		7868087	0					
ANR	7869195	PrimaryExpression	30		7868087	1					
ANR	7869196	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	485:16:9135:9166	7868087	3	True				
ANR	7869197	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7869198	Identifier	block_ptr		7868087	0					
ANR	7869199	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7869200	Identifier	row_ptr		7868087	0					
ANR	7869201	Identifier	pixel_ptr		7868087	1					
ANR	7869202	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	4					
ANR	7869203	ForInit	pixel_y = 0 ;	487:21:9190:9201	7868087	0	True				
ANR	7869204	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7869205	Identifier	pixel_y		7868087	0					
ANR	7869206	PrimaryExpression	0		7868087	1					
ANR	7869207	Condition	pixel_y < 4	487:34:9203:9213	7868087	1	True				
ANR	7869208	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7869209	Identifier	pixel_y		7868087	0					
ANR	7869210	PrimaryExpression	4		7868087	1					
ANR	7869211	PostIncDecOperationExpression	pixel_y ++	487:47:9216:9224	7868087	2	True				
ANR	7869212	Identifier	pixel_y		7868087	0					
ANR	7869213	IncDec	++		7868087	1					
ANR	7869214	CompoundStatement		485:58:9180:9180	7868087	3					
ANR	7869215	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7869216	ForInit	pixel_x = 0 ;	489:25:9255:9266	7868087	0	True				
ANR	7869217	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7869218	Identifier	pixel_x		7868087	0					
ANR	7869219	PrimaryExpression	0		7868087	1					
ANR	7869220	Condition	pixel_x < 4	489:38:9268:9278	7868087	1	True				
ANR	7869221	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7869222	Identifier	pixel_x		7868087	0					
ANR	7869223	PrimaryExpression	4		7868087	1					
ANR	7869224	PostIncDecOperationExpression	pixel_x ++	489:51:9281:9289	7868087	2	True				
ANR	7869225	Identifier	pixel_x		7868087	0					
ANR	7869226	IncDec	++		7868087	1					
ANR	7869227	CompoundStatement		487:62:9245:9245	7868087	3					
ANR	7869228	ExpressionStatement	pixel = color_table_index + ( ( color_flags >> flag_mask ) & 0x03 )	491:24:9319:9411	7868087	0	True				
ANR	7869229	AssignmentExpression	pixel = color_table_index + ( ( color_flags >> flag_mask ) & 0x03 )		7868087	0		=			
ANR	7869230	Identifier	pixel		7868087	0					
ANR	7869231	AdditiveExpression	color_table_index + ( ( color_flags >> flag_mask ) & 0x03 )		7868087	1		+			
ANR	7869232	Identifier	color_table_index		7868087	0					
ANR	7869233	BitAndExpression	( color_flags >> flag_mask ) & 0x03		7868087	1		&			
ANR	7869234	ShiftExpression	color_flags >> flag_mask		7868087	0		>>			
ANR	7869235	Identifier	color_flags		7868087	0					
ANR	7869236	Identifier	flag_mask		7868087	1					
ANR	7869237	PrimaryExpression	0x03		7868087	1					
ANR	7869238	ExpressionStatement	flag_mask -= 2	495:24:9438:9452	7868087	1	True				
ANR	7869239	AssignmentExpression	flag_mask -= 2		7868087	0		-=			
ANR	7869240	Identifier	flag_mask		7868087	0					
ANR	7869241	PrimaryExpression	2		7868087	1					
ANR	7869242	ExpressionStatement	pixels [ block_ptr ++ ] = s -> color_quads [ pixel ]	497:24:9479:9522	7868087	2	True				
ANR	7869243	AssignmentExpression	pixels [ block_ptr ++ ] = s -> color_quads [ pixel ]		7868087	0		=			
ANR	7869244	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7869245	Identifier	pixels		7868087	0					
ANR	7869246	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7869247	Identifier	block_ptr		7868087	0					
ANR	7869248	IncDec	++		7868087	1					
ANR	7869249	ArrayIndexing	s -> color_quads [ pixel ]		7868087	1					
ANR	7869250	PtrMemberAccess	s -> color_quads		7868087	0					
ANR	7869251	Identifier	s		7868087	0					
ANR	7869252	Identifier	color_quads		7868087	1					
ANR	7869253	Identifier	pixel		7868087	1					
ANR	7869254	ExpressionStatement	block_ptr += row_inc	501:20:9568:9588	7868087	1	True				
ANR	7869255	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7869256	Identifier	block_ptr		7868087	0					
ANR	7869257	Identifier	row_inc		7868087	1					
ANR	7869258	ExpressionStatement	ADVANCE_BLOCK ( )	505:16:9626:9641	7868087	5	True				
ANR	7869259	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7869260	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7869261	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7869262	ArgumentList			7868087	1					
ANR	7869263	BreakStatement	break ;	509:12:9671:9676	7868087	39	True				
ANR	7869264	Label	case 0xC0 :	515:8:9727:9736	7868087	40	True				
ANR	7869265	Label	case 0xD0 :	517:8:9747:9756	7868087	41	True				
ANR	7869266	ExpressionStatement	n_blocks = ( opcode & 0x0F ) + 1	519:12:9771:9801	7868087	42	True				
ANR	7869267	AssignmentExpression	n_blocks = ( opcode & 0x0F ) + 1		7868087	0		=			
ANR	7869268	Identifier	n_blocks		7868087	0					
ANR	7869269	AdditiveExpression	( opcode & 0x0F ) + 1		7868087	1		+			
ANR	7869270	BitAndExpression	opcode & 0x0F		7868087	0		&			
ANR	7869271	Identifier	opcode		7868087	0					
ANR	7869272	PrimaryExpression	0x0F		7868087	1					
ANR	7869273	PrimaryExpression	1		7868087	1					
ANR	7869274	IfStatement	if ( ( opcode & 0xF0 ) == 0xC0 )		7868087	43					
ANR	7869275	Condition	( opcode & 0xF0 ) == 0xC0	525:16:9904:9926	7868087	0	True				
ANR	7869276	EqualityExpression	( opcode & 0xF0 ) == 0xC0		7868087	0		==			
ANR	7869277	BitAndExpression	opcode & 0xF0		7868087	0		&			
ANR	7869278	Identifier	opcode		7868087	0					
ANR	7869279	PrimaryExpression	0xF0		7868087	1					
ANR	7869280	PrimaryExpression	0xC0		7868087	1					
ANR	7869281	CompoundStatement		523:41:9882:9882	7868087	1					
ANR	7869282	ForStatement	for ( i = 0 ; i < COCTET ; i ++ )		7868087	0					
ANR	7869283	ForInit	i = 0 ;	531:21:10095:10100	7868087	0	True				
ANR	7869284	AssignmentExpression	i = 0		7868087	0		=			
ANR	7869285	Identifier	i		7868087	0					
ANR	7869286	PrimaryExpression	0		7868087	1					
ANR	7869287	Condition	i < COCTET	531:28:10102:10111	7868087	1	True				
ANR	7869288	RelationalExpression	i < COCTET		7868087	0		<			
ANR	7869289	Identifier	i		7868087	0					
ANR	7869290	Identifier	COCTET		7868087	1					
ANR	7869291	PostIncDecOperationExpression	i ++	531:40:10114:10116	7868087	2	True				
ANR	7869292	Identifier	i		7868087	0					
ANR	7869293	IncDec	++		7868087	1					
ANR	7869294	CompoundStatement		529:45:10072:10072	7868087	3					
ANR	7869295	ExpressionStatement	pixel = s -> buf [ stream_ptr ++ ]	533:20:10142:10170	7868087	0	True				
ANR	7869296	AssignmentExpression	pixel = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7869297	Identifier	pixel		7868087	0					
ANR	7869298	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7869299	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869300	Identifier	s		7868087	0					
ANR	7869301	Identifier	buf		7868087	1					
ANR	7869302	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7869303	Identifier	stream_ptr		7868087	0					
ANR	7869304	IncDec	++		7868087	1					
ANR	7869305	ExpressionStatement	color_table_index = COCTET * color_octet_index + i	535:20:10193:10243	7868087	1	True				
ANR	7869306	AssignmentExpression	color_table_index = COCTET * color_octet_index + i		7868087	0		=			
ANR	7869307	Identifier	color_table_index		7868087	0					
ANR	7869308	AdditiveExpression	COCTET * color_octet_index + i		7868087	1		+			
ANR	7869309	MultiplicativeExpression	COCTET * color_octet_index		7868087	0		*			
ANR	7869310	Identifier	COCTET		7868087	0					
ANR	7869311	Identifier	color_octet_index		7868087	1					
ANR	7869312	Identifier	i		7868087	1					
ANR	7869313	ExpressionStatement	s -> color_octets [ color_table_index ] = pixel	537:20:10266:10308	7868087	2	True				
ANR	7869314	AssignmentExpression	s -> color_octets [ color_table_index ] = pixel		7868087	0		=			
ANR	7869315	ArrayIndexing	s -> color_octets [ color_table_index ]		7868087	0					
ANR	7869316	PtrMemberAccess	s -> color_octets		7868087	0					
ANR	7869317	Identifier	s		7868087	0					
ANR	7869318	Identifier	color_octets		7868087	1					
ANR	7869319	Identifier	color_table_index		7868087	1					
ANR	7869320	Identifier	pixel		7868087	1					
ANR	7869321	ExpressionStatement	color_table_index = COCTET * color_octet_index	543:16:10414:10460	7868087	1	True				
ANR	7869322	AssignmentExpression	color_table_index = COCTET * color_octet_index		7868087	0		=			
ANR	7869323	Identifier	color_table_index		7868087	0					
ANR	7869324	MultiplicativeExpression	COCTET * color_octet_index		7868087	1		*			
ANR	7869325	Identifier	COCTET		7868087	0					
ANR	7869326	Identifier	color_octet_index		7868087	1					
ANR	7869327	ExpressionStatement	color_octet_index ++	545:16:10479:10498	7868087	2	True				
ANR	7869328	PostIncDecOperationExpression	color_octet_index ++		7868087	0					
ANR	7869329	Identifier	color_octet_index		7868087	0					
ANR	7869330	IncDec	++		7868087	1					
ANR	7869331	IfStatement	if ( color_octet_index == COLORS_PER_TABLE )		7868087	3					
ANR	7869332	Condition	color_octet_index == COLORS_PER_TABLE	549:20:10555:10591	7868087	0	True				
ANR	7869333	EqualityExpression	color_octet_index == COLORS_PER_TABLE		7868087	0		==			
ANR	7869334	Identifier	color_octet_index		7868087	0					
ANR	7869335	Identifier	COLORS_PER_TABLE		7868087	1					
ANR	7869336	ExpressionStatement	color_octet_index = 0	551:20:10615:10636	7868087	1	True				
ANR	7869337	AssignmentExpression	color_octet_index = 0		7868087	0		=			
ANR	7869338	Identifier	color_octet_index		7868087	0					
ANR	7869339	PrimaryExpression	0		7868087	1					
ANR	7869340	ElseStatement	else		7868087	0					
ANR	7869341	ExpressionStatement	color_table_index = COCTET * s -> buf [ stream_ptr ++ ]	555:16:10675:10724	7868087	0	True				
ANR	7869342	AssignmentExpression	color_table_index = COCTET * s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7869343	Identifier	color_table_index		7868087	0					
ANR	7869344	MultiplicativeExpression	COCTET * s -> buf [ stream_ptr ++ ]		7868087	1		*			
ANR	7869345	Identifier	COCTET		7868087	0					
ANR	7869346	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7869347	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869348	Identifier	s		7868087	0					
ANR	7869349	Identifier	buf		7868087	1					
ANR	7869350	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7869351	Identifier	stream_ptr		7868087	0					
ANR	7869352	IncDec	++		7868087	1					
ANR	7869353	WhileStatement	while ( n_blocks -- )		7868087	44					
ANR	7869354	Condition	n_blocks --	559:19:10748:10757	7868087	0	True				
ANR	7869355	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7869356	Identifier	n_blocks		7868087	0					
ANR	7869357	IncDec	--		7868087	1					
ANR	7869358	CompoundStatement		557:31:10713:10713	7868087	1					
ANR	7869359	ExpressionStatement	color_flags_a = ( ( AV_RB16 ( s -> buf + stream_ptr ) & 0xFFF0 ) << 8 ) | ( AV_RB16 ( s -> buf + stream_ptr + 2 ) >> 4 )	575:16:11058:11209	7868087	0	True				
ANR	7869360	AssignmentExpression	color_flags_a = ( ( AV_RB16 ( s -> buf + stream_ptr ) & 0xFFF0 ) << 8 ) | ( AV_RB16 ( s -> buf + stream_ptr + 2 ) >> 4 )		7868087	0		=			
ANR	7869361	Identifier	color_flags_a		7868087	0					
ANR	7869362	InclusiveOrExpression	( ( AV_RB16 ( s -> buf + stream_ptr ) & 0xFFF0 ) << 8 ) | ( AV_RB16 ( s -> buf + stream_ptr + 2 ) >> 4 )		7868087	1		|			
ANR	7869363	ShiftExpression	( AV_RB16 ( s -> buf + stream_ptr ) & 0xFFF0 ) << 8		7868087	0		<<			
ANR	7869364	BitAndExpression	AV_RB16 ( s -> buf + stream_ptr ) & 0xFFF0		7868087	0		&			
ANR	7869365	CallExpression	AV_RB16 ( s -> buf + stream_ptr )		7868087	0					
ANR	7869366	Callee	AV_RB16		7868087	0					
ANR	7869367	Identifier	AV_RB16		7868087	0					
ANR	7869368	ArgumentList	s -> buf + stream_ptr		7868087	1					
ANR	7869369	Argument	s -> buf + stream_ptr		7868087	0					
ANR	7869370	AdditiveExpression	s -> buf + stream_ptr		7868087	0		+			
ANR	7869371	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869372	Identifier	s		7868087	0					
ANR	7869373	Identifier	buf		7868087	1					
ANR	7869374	Identifier	stream_ptr		7868087	1					
ANR	7869375	PrimaryExpression	0xFFF0		7868087	1					
ANR	7869376	PrimaryExpression	8		7868087	1					
ANR	7869377	ShiftExpression	AV_RB16 ( s -> buf + stream_ptr + 2 ) >> 4		7868087	1		>>			
ANR	7869378	CallExpression	AV_RB16 ( s -> buf + stream_ptr + 2 )		7868087	0					
ANR	7869379	Callee	AV_RB16		7868087	0					
ANR	7869380	Identifier	AV_RB16		7868087	0					
ANR	7869381	ArgumentList	s -> buf + stream_ptr + 2		7868087	1					
ANR	7869382	Argument	s -> buf + stream_ptr + 2		7868087	0					
ANR	7869383	AdditiveExpression	s -> buf + stream_ptr + 2		7868087	0		+			
ANR	7869384	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869385	Identifier	s		7868087	0					
ANR	7869386	Identifier	buf		7868087	1					
ANR	7869387	AdditiveExpression	stream_ptr + 2		7868087	1		+			
ANR	7869388	Identifier	stream_ptr		7868087	0					
ANR	7869389	PrimaryExpression	2		7868087	1					
ANR	7869390	PrimaryExpression	4		7868087	1					
ANR	7869391	ExpressionStatement	color_flags_b = ( ( AV_RB16 ( s -> buf + stream_ptr + 4 ) & 0xFFF0 ) << 8 ) | ( ( s -> buf [ stream_ptr + 1 ] & 0x0F ) << 8 ) | ( ( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4 ) | ( s -> buf [ stream_ptr + 5 ] & 0x0F )	581:16:11228:11494	7868087	1	True				
ANR	7869392	AssignmentExpression	color_flags_b = ( ( AV_RB16 ( s -> buf + stream_ptr + 4 ) & 0xFFF0 ) << 8 ) | ( ( s -> buf [ stream_ptr + 1 ] & 0x0F ) << 8 ) | ( ( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4 ) | ( s -> buf [ stream_ptr + 5 ] & 0x0F )		7868087	0		=			
ANR	7869393	Identifier	color_flags_b		7868087	0					
ANR	7869394	InclusiveOrExpression	( ( AV_RB16 ( s -> buf + stream_ptr + 4 ) & 0xFFF0 ) << 8 ) | ( ( s -> buf [ stream_ptr + 1 ] & 0x0F ) << 8 ) | ( ( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4 ) | ( s -> buf [ stream_ptr + 5 ] & 0x0F )		7868087	1		|			
ANR	7869395	ShiftExpression	( AV_RB16 ( s -> buf + stream_ptr + 4 ) & 0xFFF0 ) << 8		7868087	0		<<			
ANR	7869396	BitAndExpression	AV_RB16 ( s -> buf + stream_ptr + 4 ) & 0xFFF0		7868087	0		&			
ANR	7869397	CallExpression	AV_RB16 ( s -> buf + stream_ptr + 4 )		7868087	0					
ANR	7869398	Callee	AV_RB16		7868087	0					
ANR	7869399	Identifier	AV_RB16		7868087	0					
ANR	7869400	ArgumentList	s -> buf + stream_ptr + 4		7868087	1					
ANR	7869401	Argument	s -> buf + stream_ptr + 4		7868087	0					
ANR	7869402	AdditiveExpression	s -> buf + stream_ptr + 4		7868087	0		+			
ANR	7869403	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869404	Identifier	s		7868087	0					
ANR	7869405	Identifier	buf		7868087	1					
ANR	7869406	AdditiveExpression	stream_ptr + 4		7868087	1		+			
ANR	7869407	Identifier	stream_ptr		7868087	0					
ANR	7869408	PrimaryExpression	4		7868087	1					
ANR	7869409	PrimaryExpression	0xFFF0		7868087	1					
ANR	7869410	PrimaryExpression	8		7868087	1					
ANR	7869411	InclusiveOrExpression	( ( s -> buf [ stream_ptr + 1 ] & 0x0F ) << 8 ) | ( ( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4 ) | ( s -> buf [ stream_ptr + 5 ] & 0x0F )		7868087	1		|			
ANR	7869412	ShiftExpression	( s -> buf [ stream_ptr + 1 ] & 0x0F ) << 8		7868087	0		<<			
ANR	7869413	BitAndExpression	s -> buf [ stream_ptr + 1 ] & 0x0F		7868087	0		&			
ANR	7869414	ArrayIndexing	s -> buf [ stream_ptr + 1 ]		7868087	0					
ANR	7869415	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869416	Identifier	s		7868087	0					
ANR	7869417	Identifier	buf		7868087	1					
ANR	7869418	AdditiveExpression	stream_ptr + 1		7868087	1		+			
ANR	7869419	Identifier	stream_ptr		7868087	0					
ANR	7869420	PrimaryExpression	1		7868087	1					
ANR	7869421	PrimaryExpression	0x0F		7868087	1					
ANR	7869422	PrimaryExpression	8		7868087	1					
ANR	7869423	InclusiveOrExpression	( ( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4 ) | ( s -> buf [ stream_ptr + 5 ] & 0x0F )		7868087	1		|			
ANR	7869424	ShiftExpression	( s -> buf [ stream_ptr + 3 ] & 0x0F ) << 4		7868087	0		<<			
ANR	7869425	BitAndExpression	s -> buf [ stream_ptr + 3 ] & 0x0F		7868087	0		&			
ANR	7869426	ArrayIndexing	s -> buf [ stream_ptr + 3 ]		7868087	0					
ANR	7869427	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869428	Identifier	s		7868087	0					
ANR	7869429	Identifier	buf		7868087	1					
ANR	7869430	AdditiveExpression	stream_ptr + 3		7868087	1		+			
ANR	7869431	Identifier	stream_ptr		7868087	0					
ANR	7869432	PrimaryExpression	3		7868087	1					
ANR	7869433	PrimaryExpression	0x0F		7868087	1					
ANR	7869434	PrimaryExpression	4		7868087	1					
ANR	7869435	BitAndExpression	s -> buf [ stream_ptr + 5 ] & 0x0F		7868087	1		&			
ANR	7869436	ArrayIndexing	s -> buf [ stream_ptr + 5 ]		7868087	0					
ANR	7869437	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869438	Identifier	s		7868087	0					
ANR	7869439	Identifier	buf		7868087	1					
ANR	7869440	AdditiveExpression	stream_ptr + 5		7868087	1		+			
ANR	7869441	Identifier	stream_ptr		7868087	0					
ANR	7869442	PrimaryExpression	5		7868087	1					
ANR	7869443	PrimaryExpression	0x0F		7868087	1					
ANR	7869444	ExpressionStatement	stream_ptr += 6	591:16:11513:11528	7868087	2	True				
ANR	7869445	AssignmentExpression	stream_ptr += 6		7868087	0		+=			
ANR	7869446	Identifier	stream_ptr		7868087	0					
ANR	7869447	PrimaryExpression	6		7868087	1					
ANR	7869448	ExpressionStatement	color_flags = color_flags_a	595:16:11549:11576	7868087	3	True				
ANR	7869449	AssignmentExpression	color_flags = color_flags_a		7868087	0		=			
ANR	7869450	Identifier	color_flags		7868087	0					
ANR	7869451	Identifier	color_flags_a		7868087	1					
ANR	7869452	ExpressionStatement	flag_mask = 21	599:16:11668:11682	7868087	4	True				
ANR	7869453	AssignmentExpression	flag_mask = 21		7868087	0		=			
ANR	7869454	Identifier	flag_mask		7868087	0					
ANR	7869455	PrimaryExpression	21		7868087	1					
ANR	7869456	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	601:16:11701:11732	7868087	5	True				
ANR	7869457	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7869458	Identifier	block_ptr		7868087	0					
ANR	7869459	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7869460	Identifier	row_ptr		7868087	0					
ANR	7869461	Identifier	pixel_ptr		7868087	1					
ANR	7869462	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	6					
ANR	7869463	ForInit	pixel_y = 0 ;	603:21:11756:11767	7868087	0	True				
ANR	7869464	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7869465	Identifier	pixel_y		7868087	0					
ANR	7869466	PrimaryExpression	0		7868087	1					
ANR	7869467	Condition	pixel_y < 4	603:34:11769:11779	7868087	1	True				
ANR	7869468	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7869469	Identifier	pixel_y		7868087	0					
ANR	7869470	PrimaryExpression	4		7868087	1					
ANR	7869471	PostIncDecOperationExpression	pixel_y ++	603:47:11782:11790	7868087	2	True				
ANR	7869472	Identifier	pixel_y		7868087	0					
ANR	7869473	IncDec	++		7868087	1					
ANR	7869474	CompoundStatement		601:58:11746:11746	7868087	3					
ANR	7869475	IfStatement	if ( pixel_y == 2 )		7868087	0					
ANR	7869476	Condition	pixel_y == 2	607:24:11898:11909	7868087	0	True				
ANR	7869477	EqualityExpression	pixel_y == 2		7868087	0		==			
ANR	7869478	Identifier	pixel_y		7868087	0					
ANR	7869479	PrimaryExpression	2		7868087	1					
ANR	7869480	CompoundStatement		605:38:11865:11865	7868087	1					
ANR	7869481	ExpressionStatement	color_flags = color_flags_b	609:24:11939:11966	7868087	0	True				
ANR	7869482	AssignmentExpression	color_flags = color_flags_b		7868087	0		=			
ANR	7869483	Identifier	color_flags		7868087	0					
ANR	7869484	Identifier	color_flags_b		7868087	1					
ANR	7869485	ExpressionStatement	flag_mask = 21	611:24:11993:12007	7868087	1	True				
ANR	7869486	AssignmentExpression	flag_mask = 21		7868087	0		=			
ANR	7869487	Identifier	flag_mask		7868087	0					
ANR	7869488	PrimaryExpression	21		7868087	1					
ANR	7869489	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	1					
ANR	7869490	ForInit	pixel_x = 0 ;	615:25:12058:12069	7868087	0	True				
ANR	7869491	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7869492	Identifier	pixel_x		7868087	0					
ANR	7869493	PrimaryExpression	0		7868087	1					
ANR	7869494	Condition	pixel_x < 4	615:38:12071:12081	7868087	1	True				
ANR	7869495	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7869496	Identifier	pixel_x		7868087	0					
ANR	7869497	PrimaryExpression	4		7868087	1					
ANR	7869498	PostIncDecOperationExpression	pixel_x ++	615:51:12084:12092	7868087	2	True				
ANR	7869499	Identifier	pixel_x		7868087	0					
ANR	7869500	IncDec	++		7868087	1					
ANR	7869501	CompoundStatement		613:62:12048:12048	7868087	3					
ANR	7869502	ExpressionStatement	pixel = color_table_index + ( ( color_flags >> flag_mask ) & 0x07 )	617:24:12122:12214	7868087	0	True				
ANR	7869503	AssignmentExpression	pixel = color_table_index + ( ( color_flags >> flag_mask ) & 0x07 )		7868087	0		=			
ANR	7869504	Identifier	pixel		7868087	0					
ANR	7869505	AdditiveExpression	color_table_index + ( ( color_flags >> flag_mask ) & 0x07 )		7868087	1		+			
ANR	7869506	Identifier	color_table_index		7868087	0					
ANR	7869507	BitAndExpression	( color_flags >> flag_mask ) & 0x07		7868087	1		&			
ANR	7869508	ShiftExpression	color_flags >> flag_mask		7868087	0		>>			
ANR	7869509	Identifier	color_flags		7868087	0					
ANR	7869510	Identifier	flag_mask		7868087	1					
ANR	7869511	PrimaryExpression	0x07		7868087	1					
ANR	7869512	ExpressionStatement	flag_mask -= 3	621:24:12241:12255	7868087	1	True				
ANR	7869513	AssignmentExpression	flag_mask -= 3		7868087	0		-=			
ANR	7869514	Identifier	flag_mask		7868087	0					
ANR	7869515	PrimaryExpression	3		7868087	1					
ANR	7869516	ExpressionStatement	pixels [ block_ptr ++ ] = s -> color_octets [ pixel ]	623:24:12282:12326	7868087	2	True				
ANR	7869517	AssignmentExpression	pixels [ block_ptr ++ ] = s -> color_octets [ pixel ]		7868087	0		=			
ANR	7869518	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7869519	Identifier	pixels		7868087	0					
ANR	7869520	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7869521	Identifier	block_ptr		7868087	0					
ANR	7869522	IncDec	++		7868087	1					
ANR	7869523	ArrayIndexing	s -> color_octets [ pixel ]		7868087	1					
ANR	7869524	PtrMemberAccess	s -> color_octets		7868087	0					
ANR	7869525	Identifier	s		7868087	0					
ANR	7869526	Identifier	color_octets		7868087	1					
ANR	7869527	Identifier	pixel		7868087	1					
ANR	7869528	ExpressionStatement	block_ptr += row_inc	627:20:12372:12392	7868087	2	True				
ANR	7869529	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7869530	Identifier	block_ptr		7868087	0					
ANR	7869531	Identifier	row_inc		7868087	1					
ANR	7869532	ExpressionStatement	ADVANCE_BLOCK ( )	631:16:12430:12445	7868087	7	True				
ANR	7869533	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7869534	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7869535	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7869536	ArgumentList			7868087	1					
ANR	7869537	BreakStatement	break ;	635:12:12475:12480	7868087	45	True				
ANR	7869538	Label	case 0xE0 :	641:8:12567:12576	7868087	46	True				
ANR	7869539	ExpressionStatement	n_blocks = ( opcode & 0x0F ) + 1	643:12:12591:12621	7868087	47	True				
ANR	7869540	AssignmentExpression	n_blocks = ( opcode & 0x0F ) + 1		7868087	0		=			
ANR	7869541	Identifier	n_blocks		7868087	0					
ANR	7869542	AdditiveExpression	( opcode & 0x0F ) + 1		7868087	1		+			
ANR	7869543	BitAndExpression	opcode & 0x0F		7868087	0		&			
ANR	7869544	Identifier	opcode		7868087	0					
ANR	7869545	PrimaryExpression	0x0F		7868087	1					
ANR	7869546	PrimaryExpression	1		7868087	1					
ANR	7869547	WhileStatement	while ( n_blocks -- )		7868087	48					
ANR	7869548	Condition	n_blocks --	647:19:12645:12654	7868087	0	True				
ANR	7869549	PostIncDecOperationExpression	n_blocks --		7868087	0					
ANR	7869550	Identifier	n_blocks		7868087	0					
ANR	7869551	IncDec	--		7868087	1					
ANR	7869552	CompoundStatement		645:31:12610:12610	7868087	1					
ANR	7869553	ExpressionStatement	block_ptr = row_ptr + pixel_ptr	649:16:12676:12707	7868087	0	True				
ANR	7869554	AssignmentExpression	block_ptr = row_ptr + pixel_ptr		7868087	0		=			
ANR	7869555	Identifier	block_ptr		7868087	0					
ANR	7869556	AdditiveExpression	row_ptr + pixel_ptr		7868087	1		+			
ANR	7869557	Identifier	row_ptr		7868087	0					
ANR	7869558	Identifier	pixel_ptr		7868087	1					
ANR	7869559	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		7868087	1					
ANR	7869560	ForInit	pixel_y = 0 ;	651:21:12731:12742	7868087	0	True				
ANR	7869561	AssignmentExpression	pixel_y = 0		7868087	0		=			
ANR	7869562	Identifier	pixel_y		7868087	0					
ANR	7869563	PrimaryExpression	0		7868087	1					
ANR	7869564	Condition	pixel_y < 4	651:34:12744:12754	7868087	1	True				
ANR	7869565	RelationalExpression	pixel_y < 4		7868087	0		<			
ANR	7869566	Identifier	pixel_y		7868087	0					
ANR	7869567	PrimaryExpression	4		7868087	1					
ANR	7869568	PostIncDecOperationExpression	pixel_y ++	651:47:12757:12765	7868087	2	True				
ANR	7869569	Identifier	pixel_y		7868087	0					
ANR	7869570	IncDec	++		7868087	1					
ANR	7869571	CompoundStatement		649:58:12721:12721	7868087	3					
ANR	7869572	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		7868087	0					
ANR	7869573	ForInit	pixel_x = 0 ;	653:25:12796:12807	7868087	0	True				
ANR	7869574	AssignmentExpression	pixel_x = 0		7868087	0		=			
ANR	7869575	Identifier	pixel_x		7868087	0					
ANR	7869576	PrimaryExpression	0		7868087	1					
ANR	7869577	Condition	pixel_x < 4	653:38:12809:12819	7868087	1	True				
ANR	7869578	RelationalExpression	pixel_x < 4		7868087	0		<			
ANR	7869579	Identifier	pixel_x		7868087	0					
ANR	7869580	PrimaryExpression	4		7868087	1					
ANR	7869581	PostIncDecOperationExpression	pixel_x ++	653:51:12822:12830	7868087	2	True				
ANR	7869582	Identifier	pixel_x		7868087	0					
ANR	7869583	IncDec	++		7868087	1					
ANR	7869584	CompoundStatement		651:62:12786:12786	7868087	3					
ANR	7869585	ExpressionStatement	pixels [ block_ptr ++ ] = s -> buf [ stream_ptr ++ ]	655:24:12860:12902	7868087	0	True				
ANR	7869586	AssignmentExpression	pixels [ block_ptr ++ ] = s -> buf [ stream_ptr ++ ]		7868087	0		=			
ANR	7869587	ArrayIndexing	pixels [ block_ptr ++ ]		7868087	0					
ANR	7869588	Identifier	pixels		7868087	0					
ANR	7869589	PostIncDecOperationExpression	block_ptr ++		7868087	1					
ANR	7869590	Identifier	block_ptr		7868087	0					
ANR	7869591	IncDec	++		7868087	1					
ANR	7869592	ArrayIndexing	s -> buf [ stream_ptr ++ ]		7868087	1					
ANR	7869593	PtrMemberAccess	s -> buf		7868087	0					
ANR	7869594	Identifier	s		7868087	0					
ANR	7869595	Identifier	buf		7868087	1					
ANR	7869596	PostIncDecOperationExpression	stream_ptr ++		7868087	1					
ANR	7869597	Identifier	stream_ptr		7868087	0					
ANR	7869598	IncDec	++		7868087	1					
ANR	7869599	ExpressionStatement	block_ptr += row_inc	659:20:12948:12968	7868087	1	True				
ANR	7869600	AssignmentExpression	block_ptr += row_inc		7868087	0		+=			
ANR	7869601	Identifier	block_ptr		7868087	0					
ANR	7869602	Identifier	row_inc		7868087	1					
ANR	7869603	ExpressionStatement	ADVANCE_BLOCK ( )	663:16:13006:13021	7868087	2	True				
ANR	7869604	CallExpression	ADVANCE_BLOCK ( )		7868087	0					
ANR	7869605	Callee	ADVANCE_BLOCK		7868087	0					
ANR	7869606	Identifier	ADVANCE_BLOCK		7868087	0					
ANR	7869607	ArgumentList			7868087	1					
ANR	7869608	BreakStatement	break ;	667:12:13051:13056	7868087	49	True				
ANR	7869609	Label	case 0xF0 :	671:8:13069:13078	7868087	50	True				
ANR	7869610	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""0xF0 opcode seen in SMC chunk (contact the developers)\\n"" )"	673:12:13093:13182	7868087	51	True				
ANR	7869611	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""0xF0 opcode seen in SMC chunk (contact the developers)\\n"" )"		7868087	0					
ANR	7869612	Callee	av_log		7868087	0					
ANR	7869613	Identifier	av_log		7868087	0					
ANR	7869614	ArgumentList	s -> avctx		7868087	1					
ANR	7869615	Argument	s -> avctx		7868087	0					
ANR	7869616	PtrMemberAccess	s -> avctx		7868087	0					
ANR	7869617	Identifier	s		7868087	0					
ANR	7869618	Identifier	avctx		7868087	1					
ANR	7869619	Argument	AV_LOG_INFO		7868087	1					
ANR	7869620	Identifier	AV_LOG_INFO		7868087	0					
ANR	7869621	Argument	"""0xF0 opcode seen in SMC chunk (contact the developers)\\n"""		7868087	2					
ANR	7869622	PrimaryExpression	"""0xF0 opcode seen in SMC chunk (contact the developers)\\n"""		7868087	0					
ANR	7869623	BreakStatement	break ;	675:12:13197:13202	7868087	52	True				
ANR	7869624	ReturnType	static void		7868087	1					
ANR	7869625	Identifier	smc_decode_stream		7868087	2					
ANR	7869626	ParameterList	SmcContext * s		7868087	3					
ANR	7869627	Parameter	SmcContext * s	1:30:30:42	7868087	0	True				
ANR	7869628	ParameterType	SmcContext *		7868087	0					
ANR	7869629	Identifier	s		7868087	1					
ANR	7869630	CFGEntryNode	ENTRY		7868087		True				
ANR	7869631	CFGExitNode	EXIT		7868087		True				
ANR	7869632	Symbol	COCTET		7868087						
ANR	7869633	Symbol	chunk_size		7868087						
ANR	7869634	Symbol	pixel_ptr		7868087						
ANR	7869635	Symbol	s -> frame . data		7868087						
ANR	7869636	Symbol	AV_RB16		7868087						
ANR	7869637	Symbol	stride		7868087						
ANR	7869638	Symbol	opcode		7868087						
ANR	7869639	Symbol	* s -> frame		7868087						
ANR	7869640	Symbol	color_flags		7868087						
ANR	7869641	Symbol	prev_block_ptr		7868087						
ANR	7869642	Symbol	s -> frame		7868087						
ANR	7869643	Symbol	height		7868087						
ANR	7869644	Symbol	* s -> avctx		7868087						
ANR	7869645	Symbol	row_ptr		7868087						
ANR	7869646	Symbol	* s -> color_quads		7868087						
ANR	7869647	Symbol	* pixel		7868087						
ANR	7869648	Symbol	AVPALETTE_SIZE		7868087						
ANR	7869649	Symbol	pixel_y		7868087						
ANR	7869650	Symbol	s -> color_quads		7868087						
ANR	7869651	Symbol	pixels		7868087						
ANR	7869652	Symbol	* pixels		7868087						
ANR	7869653	Symbol	prev_block_flag		7868087						
ANR	7869654	Symbol	block_ptr		7868087						
ANR	7869655	Symbol	s -> avctx		7868087						
ANR	7869656	Symbol	AV_LOG_INFO		7868087						
ANR	7869657	Symbol	* s -> color_pairs		7868087						
ANR	7869658	Symbol	color_octet_index		7868087						
ANR	7869659	Symbol	s -> size		7868087						
ANR	7869660	Symbol	s -> color_octets		7868087						
ANR	7869661	Symbol	color_table_index		7868087						
ANR	7869662	Symbol	color_quad_index		7868087						
ANR	7869663	Symbol	CPAIR		7868087						
ANR	7869664	Symbol	s -> pal		7868087						
ANR	7869665	Symbol	* s -> buf		7868087						
ANR	7869666	Symbol	total_blocks		7868087						
ANR	7869667	Symbol	pixel_x		7868087						
ANR	7869668	Symbol	AV_RB32		7868087						
ANR	7869669	Symbol	color_flags_a		7868087						
ANR	7869670	Symbol	* s -> frame . data		7868087						
ANR	7869671	Symbol	color_flags_b		7868087						
ANR	7869672	Symbol	row_inc		7868087						
ANR	7869673	Symbol	GET_BLOCK_COUNT		7868087						
ANR	7869674	Symbol	s -> avctx -> width		7868087						
ANR	7869675	Symbol	* * s		7868087						
ANR	7869676	Symbol	CQUAD		7868087						
ANR	7869677	Symbol	pixel		7868087						
ANR	7869678	Symbol	prev_block_ptr1		7868087						
ANR	7869679	Symbol	stream_ptr		7868087						
ANR	7869680	Symbol	prev_block_ptr2		7868087						
ANR	7869681	Symbol	s -> buf		7868087						
ANR	7869682	Symbol	n_blocks		7868087						
ANR	7869683	Symbol	image_size		7868087						
ANR	7869684	Symbol	color_pair_index		7868087						
ANR	7869685	Symbol	i		7868087						
ANR	7869686	Symbol	* s -> frame . linesize		7868087						
ANR	7869687	Symbol	* stream_ptr		7868087						
ANR	7869688	Symbol	flag_mask		7868087						
ANR	7869689	Symbol	s		7868087						
ANR	7869690	Symbol	s -> frame . linesize		7868087						
ANR	7869691	Symbol	width		7868087						
ANR	7869692	Symbol	s -> avctx -> height		7868087						
ANR	7869693	Symbol	COLORS_PER_TABLE		7868087						
ANR	7869694	Symbol	* color_table_index		7868087						
ANR	7869695	Symbol	* s		7868087						
ANR	7869696	Symbol	* s -> color_octets		7868087						
ANR	7869697	Symbol	s -> color_pairs		7868087						
