command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7313671	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_restart_header_0.c								
ANR	7313672	Function	read_restart_header	1:0:0:6244							
ANR	7313673	FunctionDef	"read_restart_header (MLPDecodeContext * m , GetBitContext * gbp , const uint8_t * buf , unsigned int substr)"		7313672	0					
ANR	7313674	CompoundStatement		5:0:146:6244	7313672	0					
ANR	7313675	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	7:4:153:189	7313672	0	True				
ANR	7313676	IdentifierDecl	* s = & m -> substream [ substr ]		7313672	0					
ANR	7313677	IdentifierDeclType	SubStream *		7313672	0					
ANR	7313678	Identifier	s		7313672	1					
ANR	7313679	AssignmentExpression	* s = & m -> substream [ substr ]		7313672	2		=			
ANR	7313680	Identifier	s		7313672	0					
ANR	7313681	UnaryOperationExpression	& m -> substream [ substr ]		7313672	1					
ANR	7313682	UnaryOperator	&		7313672	0					
ANR	7313683	ArrayIndexing	m -> substream [ substr ]		7313672	1					
ANR	7313684	PtrMemberAccess	m -> substream		7313672	0					
ANR	7313685	Identifier	m		7313672	0					
ANR	7313686	Identifier	substream		7313672	1					
ANR	7313687	Identifier	substr		7313672	1					
ANR	7313688	IdentifierDeclStatement	unsigned int ch ;	9:4:196:211	7313672	1	True				
ANR	7313689	IdentifierDecl	ch		7313672	0					
ANR	7313690	IdentifierDeclType	unsigned int		7313672	0					
ANR	7313691	Identifier	ch		7313672	1					
ANR	7313692	IdentifierDeclStatement	"int sync_word , tmp ;"	11:4:218:236	7313672	2	True				
ANR	7313693	IdentifierDecl	sync_word		7313672	0					
ANR	7313694	IdentifierDeclType	int		7313672	0					
ANR	7313695	Identifier	sync_word		7313672	1					
ANR	7313696	IdentifierDecl	tmp		7313672	1					
ANR	7313697	IdentifierDeclType	int		7313672	0					
ANR	7313698	Identifier	tmp		7313672	1					
ANR	7313699	IdentifierDeclStatement	uint8_t checksum ;	13:4:243:259	7313672	3	True				
ANR	7313700	IdentifierDecl	checksum		7313672	0					
ANR	7313701	IdentifierDeclType	uint8_t		7313672	0					
ANR	7313702	Identifier	checksum		7313672	1					
ANR	7313703	IdentifierDeclStatement	uint8_t lossless_check ;	15:4:266:288	7313672	4	True				
ANR	7313704	IdentifierDecl	lossless_check		7313672	0					
ANR	7313705	IdentifierDeclType	uint8_t		7313672	0					
ANR	7313706	Identifier	lossless_check		7313672	1					
ANR	7313707	IdentifierDeclStatement	int start_count = get_bits_count ( gbp ) ;	17:4:295:332	7313672	5	True				
ANR	7313708	IdentifierDecl	start_count = get_bits_count ( gbp )		7313672	0					
ANR	7313709	IdentifierDeclType	int		7313672	0					
ANR	7313710	Identifier	start_count		7313672	1					
ANR	7313711	AssignmentExpression	start_count = get_bits_count ( gbp )		7313672	2		=			
ANR	7313712	Identifier	start_count		7313672	0					
ANR	7313713	CallExpression	get_bits_count ( gbp )		7313672	1					
ANR	7313714	Callee	get_bits_count		7313672	0					
ANR	7313715	Identifier	get_bits_count		7313672	0					
ANR	7313716	ArgumentList	gbp		7313672	1					
ANR	7313717	Argument	gbp		7313672	0					
ANR	7313718	Identifier	gbp		7313672	0					
ANR	7313719	IdentifierDeclStatement	const int max_matrix_channel = m -> avctx -> codec_id == CODEC_ID_MLP ? MAX_MATRIX_CHANNEL_MLP : MAX_MATRIX_CHANNEL_TRUEHD ;	19:4:339:525	7313672	6	True				
ANR	7313720	IdentifierDecl	max_matrix_channel = m -> avctx -> codec_id == CODEC_ID_MLP ? MAX_MATRIX_CHANNEL_MLP : MAX_MATRIX_CHANNEL_TRUEHD		7313672	0					
ANR	7313721	IdentifierDeclType	const int		7313672	0					
ANR	7313722	Identifier	max_matrix_channel		7313672	1					
ANR	7313723	AssignmentExpression	max_matrix_channel = m -> avctx -> codec_id == CODEC_ID_MLP ? MAX_MATRIX_CHANNEL_MLP : MAX_MATRIX_CHANNEL_TRUEHD		7313672	2		=			
ANR	7313724	Identifier	max_matrix_channel		7313672	0					
ANR	7313725	ConditionalExpression	m -> avctx -> codec_id == CODEC_ID_MLP ? MAX_MATRIX_CHANNEL_MLP : MAX_MATRIX_CHANNEL_TRUEHD		7313672	1					
ANR	7313726	Condition	m -> avctx -> codec_id == CODEC_ID_MLP		7313672	0					
ANR	7313727	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_MLP		7313672	0		==			
ANR	7313728	PtrMemberAccess	m -> avctx -> codec_id		7313672	0					
ANR	7313729	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313730	Identifier	m		7313672	0					
ANR	7313731	Identifier	avctx		7313672	1					
ANR	7313732	Identifier	codec_id		7313672	1					
ANR	7313733	Identifier	CODEC_ID_MLP		7313672	1					
ANR	7313734	Identifier	MAX_MATRIX_CHANNEL_MLP		7313672	1					
ANR	7313735	Identifier	MAX_MATRIX_CHANNEL_TRUEHD		7313672	2					
ANR	7313736	ExpressionStatement	"sync_word = get_bits ( gbp , 13 )"	27:4:534:563	7313672	7	True				
ANR	7313737	AssignmentExpression	"sync_word = get_bits ( gbp , 13 )"		7313672	0		=			
ANR	7313738	Identifier	sync_word		7313672	0					
ANR	7313739	CallExpression	"get_bits ( gbp , 13 )"		7313672	1					
ANR	7313740	Callee	get_bits		7313672	0					
ANR	7313741	Identifier	get_bits		7313672	0					
ANR	7313742	ArgumentList	gbp		7313672	1					
ANR	7313743	Argument	gbp		7313672	0					
ANR	7313744	Identifier	gbp		7313672	0					
ANR	7313745	Argument	13		7313672	1					
ANR	7313746	PrimaryExpression	13		7313672	0					
ANR	7313747	IfStatement	if ( sync_word != 0x31ea >> 1 )		7313672	8					
ANR	7313748	Condition	sync_word != 0x31ea >> 1	31:8:576:599	7313672	0	True				
ANR	7313749	EqualityExpression	sync_word != 0x31ea >> 1		7313672	0		!=			
ANR	7313750	Identifier	sync_word		7313672	0					
ANR	7313751	ShiftExpression	0x31ea >> 1		7313672	1		>>			
ANR	7313752	PrimaryExpression	0x31ea		7313672	0					
ANR	7313753	PrimaryExpression	1		7313672	1					
ANR	7313754	CompoundStatement		27:34:455:455	7313672	1					
ANR	7313755	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""restart header sync incorrect (got 0x%04x)\\n"" , sync_word )"	33:8:613:718	7313672	0	True				
ANR	7313756	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""restart header sync incorrect (got 0x%04x)\\n"" , sync_word )"		7313672	0					
ANR	7313757	Callee	av_log		7313672	0					
ANR	7313758	Identifier	av_log		7313672	0					
ANR	7313759	ArgumentList	m -> avctx		7313672	1					
ANR	7313760	Argument	m -> avctx		7313672	0					
ANR	7313761	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313762	Identifier	m		7313672	0					
ANR	7313763	Identifier	avctx		7313672	1					
ANR	7313764	Argument	AV_LOG_ERROR		7313672	1					
ANR	7313765	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7313766	Argument	"""restart header sync incorrect (got 0x%04x)\\n"""		7313672	2					
ANR	7313767	PrimaryExpression	"""restart header sync incorrect (got 0x%04x)\\n"""		7313672	0					
ANR	7313768	Argument	sync_word		7313672	3					
ANR	7313769	Identifier	sync_word		7313672	0					
ANR	7313770	ReturnStatement	return AVERROR_INVALIDDATA ;	37:8:729:755	7313672	1	True				
ANR	7313771	Identifier	AVERROR_INVALIDDATA		7313672	0					
ANR	7313772	ExpressionStatement	s -> noise_type = get_bits1 ( gbp )	43:4:771:801	7313672	9	True				
ANR	7313773	AssignmentExpression	s -> noise_type = get_bits1 ( gbp )		7313672	0		=			
ANR	7313774	PtrMemberAccess	s -> noise_type		7313672	0					
ANR	7313775	Identifier	s		7313672	0					
ANR	7313776	Identifier	noise_type		7313672	1					
ANR	7313777	CallExpression	get_bits1 ( gbp )		7313672	1					
ANR	7313778	Callee	get_bits1		7313672	0					
ANR	7313779	Identifier	get_bits1		7313672	0					
ANR	7313780	ArgumentList	gbp		7313672	1					
ANR	7313781	Argument	gbp		7313672	0					
ANR	7313782	Identifier	gbp		7313672	0					
ANR	7313783	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_MLP && s -> noise_type )		7313672	10					
ANR	7313784	Condition	m -> avctx -> codec_id == CODEC_ID_MLP && s -> noise_type	47:8:814:864	7313672	0	True				
ANR	7313785	AndExpression	m -> avctx -> codec_id == CODEC_ID_MLP && s -> noise_type		7313672	0		&&			
ANR	7313786	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_MLP		7313672	0		==			
ANR	7313787	PtrMemberAccess	m -> avctx -> codec_id		7313672	0					
ANR	7313788	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313789	Identifier	m		7313672	0					
ANR	7313790	Identifier	avctx		7313672	1					
ANR	7313791	Identifier	codec_id		7313672	1					
ANR	7313792	Identifier	CODEC_ID_MLP		7313672	1					
ANR	7313793	PtrMemberAccess	s -> noise_type		7313672	1					
ANR	7313794	Identifier	s		7313672	0					
ANR	7313795	Identifier	noise_type		7313672	1					
ANR	7313796	CompoundStatement		43:61:720:720	7313672	1					
ANR	7313797	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""MLP must have 0x31ea sync word.\\n"" )"	49:8:878:945	7313672	0	True				
ANR	7313798	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""MLP must have 0x31ea sync word.\\n"" )"		7313672	0					
ANR	7313799	Callee	av_log		7313672	0					
ANR	7313800	Identifier	av_log		7313672	0					
ANR	7313801	ArgumentList	m -> avctx		7313672	1					
ANR	7313802	Argument	m -> avctx		7313672	0					
ANR	7313803	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313804	Identifier	m		7313672	0					
ANR	7313805	Identifier	avctx		7313672	1					
ANR	7313806	Argument	AV_LOG_ERROR		7313672	1					
ANR	7313807	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7313808	Argument	"""MLP must have 0x31ea sync word.\\n"""		7313672	2					
ANR	7313809	PrimaryExpression	"""MLP must have 0x31ea sync word.\\n"""		7313672	0					
ANR	7313810	ReturnStatement	return AVERROR_INVALIDDATA ;	51:8:956:982	7313672	1	True				
ANR	7313811	Identifier	AVERROR_INVALIDDATA		7313672	0					
ANR	7313812	ExpressionStatement	"skip_bits ( gbp , 16 )"	57:4:998:1016	7313672	11	True				
ANR	7313813	CallExpression	"skip_bits ( gbp , 16 )"		7313672	0					
ANR	7313814	Callee	skip_bits		7313672	0					
ANR	7313815	Identifier	skip_bits		7313672	0					
ANR	7313816	ArgumentList	gbp		7313672	1					
ANR	7313817	Argument	gbp		7313672	0					
ANR	7313818	Identifier	gbp		7313672	0					
ANR	7313819	Argument	16		7313672	1					
ANR	7313820	PrimaryExpression	16		7313672	0					
ANR	7313821	ExpressionStatement	"s -> min_channel = get_bits ( gbp , 4 )"	61:4:1048:1088	7313672	12	True				
ANR	7313822	AssignmentExpression	"s -> min_channel = get_bits ( gbp , 4 )"		7313672	0		=			
ANR	7313823	PtrMemberAccess	s -> min_channel		7313672	0					
ANR	7313824	Identifier	s		7313672	0					
ANR	7313825	Identifier	min_channel		7313672	1					
ANR	7313826	CallExpression	"get_bits ( gbp , 4 )"		7313672	1					
ANR	7313827	Callee	get_bits		7313672	0					
ANR	7313828	Identifier	get_bits		7313672	0					
ANR	7313829	ArgumentList	gbp		7313672	1					
ANR	7313830	Argument	gbp		7313672	0					
ANR	7313831	Identifier	gbp		7313672	0					
ANR	7313832	Argument	4		7313672	1					
ANR	7313833	PrimaryExpression	4		7313672	0					
ANR	7313834	ExpressionStatement	"s -> max_channel = get_bits ( gbp , 4 )"	63:4:1095:1135	7313672	13	True				
ANR	7313835	AssignmentExpression	"s -> max_channel = get_bits ( gbp , 4 )"		7313672	0		=			
ANR	7313836	PtrMemberAccess	s -> max_channel		7313672	0					
ANR	7313837	Identifier	s		7313672	0					
ANR	7313838	Identifier	max_channel		7313672	1					
ANR	7313839	CallExpression	"get_bits ( gbp , 4 )"		7313672	1					
ANR	7313840	Callee	get_bits		7313672	0					
ANR	7313841	Identifier	get_bits		7313672	0					
ANR	7313842	ArgumentList	gbp		7313672	1					
ANR	7313843	Argument	gbp		7313672	0					
ANR	7313844	Identifier	gbp		7313672	0					
ANR	7313845	Argument	4		7313672	1					
ANR	7313846	PrimaryExpression	4		7313672	0					
ANR	7313847	ExpressionStatement	"s -> max_matrix_channel = get_bits ( gbp , 4 )"	65:4:1142:1182	7313672	14	True				
ANR	7313848	AssignmentExpression	"s -> max_matrix_channel = get_bits ( gbp , 4 )"		7313672	0		=			
ANR	7313849	PtrMemberAccess	s -> max_matrix_channel		7313672	0					
ANR	7313850	Identifier	s		7313672	0					
ANR	7313851	Identifier	max_matrix_channel		7313672	1					
ANR	7313852	CallExpression	"get_bits ( gbp , 4 )"		7313672	1					
ANR	7313853	Callee	get_bits		7313672	0					
ANR	7313854	Identifier	get_bits		7313672	0					
ANR	7313855	ArgumentList	gbp		7313672	1					
ANR	7313856	Argument	gbp		7313672	0					
ANR	7313857	Identifier	gbp		7313672	0					
ANR	7313858	Argument	4		7313672	1					
ANR	7313859	PrimaryExpression	4		7313672	0					
ANR	7313860	IfStatement	if ( s -> max_matrix_channel > max_matrix_channel )		7313672	15					
ANR	7313861	Condition	s -> max_matrix_channel > max_matrix_channel	69:8:1195:1236	7313672	0	True				
ANR	7313862	RelationalExpression	s -> max_matrix_channel > max_matrix_channel		7313672	0		>			
ANR	7313863	PtrMemberAccess	s -> max_matrix_channel		7313672	0					
ANR	7313864	Identifier	s		7313672	0					
ANR	7313865	Identifier	max_matrix_channel		7313672	1					
ANR	7313866	Identifier	max_matrix_channel		7313672	1					
ANR	7313867	CompoundStatement		65:52:1092:1092	7313672	1					
ANR	7313868	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Max matrix channel cannot be greater than %d.\\n"" , max_matrix_channel )"	71:8:1250:1383	7313672	0	True				
ANR	7313869	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Max matrix channel cannot be greater than %d.\\n"" , max_matrix_channel )"		7313672	0					
ANR	7313870	Callee	av_log		7313672	0					
ANR	7313871	Identifier	av_log		7313672	0					
ANR	7313872	ArgumentList	m -> avctx		7313672	1					
ANR	7313873	Argument	m -> avctx		7313672	0					
ANR	7313874	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313875	Identifier	m		7313672	0					
ANR	7313876	Identifier	avctx		7313672	1					
ANR	7313877	Argument	AV_LOG_ERROR		7313672	1					
ANR	7313878	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7313879	Argument	"""Max matrix channel cannot be greater than %d.\\n"""		7313672	2					
ANR	7313880	PrimaryExpression	"""Max matrix channel cannot be greater than %d.\\n"""		7313672	0					
ANR	7313881	Argument	max_matrix_channel		7313672	3					
ANR	7313882	Identifier	max_matrix_channel		7313672	0					
ANR	7313883	ReturnStatement	return AVERROR_INVALIDDATA ;	77:8:1394:1420	7313672	1	True				
ANR	7313884	Identifier	AVERROR_INVALIDDATA		7313672	0					
ANR	7313885	IfStatement	if ( s -> max_channel != s -> max_matrix_channel )		7313672	16					
ANR	7313886	Condition	s -> max_channel != s -> max_matrix_channel	83:8:1440:1478	7313672	0	True				
ANR	7313887	EqualityExpression	s -> max_channel != s -> max_matrix_channel		7313672	0		!=			
ANR	7313888	PtrMemberAccess	s -> max_channel		7313672	0					
ANR	7313889	Identifier	s		7313672	0					
ANR	7313890	Identifier	max_channel		7313672	1					
ANR	7313891	PtrMemberAccess	s -> max_matrix_channel		7313672	1					
ANR	7313892	Identifier	s		7313672	0					
ANR	7313893	Identifier	max_matrix_channel		7313672	1					
ANR	7313894	CompoundStatement		79:49:1334:1334	7313672	1					
ANR	7313895	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Max channel must be equal max matrix channel.\\n"" )"	85:8:1492:1589	7313672	0	True				
ANR	7313896	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Max channel must be equal max matrix channel.\\n"" )"		7313672	0					
ANR	7313897	Callee	av_log		7313672	0					
ANR	7313898	Identifier	av_log		7313672	0					
ANR	7313899	ArgumentList	m -> avctx		7313672	1					
ANR	7313900	Argument	m -> avctx		7313672	0					
ANR	7313901	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313902	Identifier	m		7313672	0					
ANR	7313903	Identifier	avctx		7313672	1					
ANR	7313904	Argument	AV_LOG_ERROR		7313672	1					
ANR	7313905	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7313906	Argument	"""Max channel must be equal max matrix channel.\\n"""		7313672	2					
ANR	7313907	PrimaryExpression	"""Max channel must be equal max matrix channel.\\n"""		7313672	0					
ANR	7313908	ReturnStatement	return AVERROR_INVALIDDATA ;	89:8:1600:1626	7313672	1	True				
ANR	7313909	Identifier	AVERROR_INVALIDDATA		7313672	0					
ANR	7313910	IfStatement	if ( s -> max_channel > MAX_MATRIX_CHANNEL_MLP && ! s -> noise_type )		7313672	17					
ANR	7313911	Condition	s -> max_channel > MAX_MATRIX_CHANNEL_MLP && ! s -> noise_type	99:8:1782:1838	7313672	0	True				
ANR	7313912	AndExpression	s -> max_channel > MAX_MATRIX_CHANNEL_MLP && ! s -> noise_type		7313672	0		&&			
ANR	7313913	RelationalExpression	s -> max_channel > MAX_MATRIX_CHANNEL_MLP		7313672	0		>			
ANR	7313914	PtrMemberAccess	s -> max_channel		7313672	0					
ANR	7313915	Identifier	s		7313672	0					
ANR	7313916	Identifier	max_channel		7313672	1					
ANR	7313917	Identifier	MAX_MATRIX_CHANNEL_MLP		7313672	1					
ANR	7313918	UnaryOperationExpression	! s -> noise_type		7313672	1					
ANR	7313919	UnaryOperator	!		7313672	0					
ANR	7313920	PtrMemberAccess	s -> noise_type		7313672	1					
ANR	7313921	Identifier	s		7313672	0					
ANR	7313922	Identifier	noise_type		7313672	1					
ANR	7313923	CompoundStatement		95:67:1694:1694	7313672	1					
ANR	7313924	Statement	av_log_ask_for_sample	101:8:1852:1872	7313672	0	True				
ANR	7313925	Statement	(	101:29:1873:1873	7313672	1	True				
ANR	7313926	Statement	m	101:30:1874:1874	7313672	2	True				
ANR	7313927	Statement	->	101:31:1875:1876	7313672	3	True				
ANR	7313928	Statement	avctx	101:33:1877:1881	7313672	4	True				
ANR	7313929	Statement	","	101:38:1882:1882	7313672	5	True				
ANR	7313930	Statement	"""Number of channels %d is larger than the maximum supported """	103:15:1900:1960	7313672	6	True				
ANR	7313931	Statement	"""by the decoder.\\n"""	105:15:1978:1996	7313672	7	True				
ANR	7313932	Statement	","	105:34:1997:1997	7313672	8	True				
ANR	7313933	Statement	s	105:36:1999:1999	7313672	9	True				
ANR	7313934	Statement	->	105:37:2000:2001	7313672	10	True				
ANR	7313935	Statement	max_channel	105:39:2002:2012	7313672	11	True				
ANR	7313936	Statement	+	105:51:2014:2014	7313672	12	True				
ANR	7313937	Statement	2	105:53:2016:2016	7313672	13	True				
ANR	7313938	Statement	)	105:54:2017:2017	7313672	14	True				
ANR	7313939	ExpressionStatement		105:55:2018:2018	7313672	15	True				
ANR	7313940	ReturnStatement	return AVERROR_PATCHWELCOME ;	107:8:2029:2056	7313672	16	True				
ANR	7313941	Identifier	AVERROR_PATCHWELCOME		7313672	0					
ANR	7313942	IfStatement	if ( s -> min_channel > s -> max_channel )		7313672	18					
ANR	7313943	Condition	s -> min_channel > s -> max_channel	113:8:2076:2106	7313672	0	True				
ANR	7313944	RelationalExpression	s -> min_channel > s -> max_channel		7313672	0		>			
ANR	7313945	PtrMemberAccess	s -> min_channel		7313672	0					
ANR	7313946	Identifier	s		7313672	0					
ANR	7313947	Identifier	min_channel		7313672	1					
ANR	7313948	PtrMemberAccess	s -> max_channel		7313672	1					
ANR	7313949	Identifier	s		7313672	0					
ANR	7313950	Identifier	max_channel		7313672	1					
ANR	7313951	CompoundStatement		109:41:1962:1962	7313672	1					
ANR	7313952	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream min channel cannot be greater than max channel.\\n"" )"	115:8:2120:2229	7313672	0	True				
ANR	7313953	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream min channel cannot be greater than max channel.\\n"" )"		7313672	0					
ANR	7313954	Callee	av_log		7313672	0					
ANR	7313955	Identifier	av_log		7313672	0					
ANR	7313956	ArgumentList	m -> avctx		7313672	1					
ANR	7313957	Argument	m -> avctx		7313672	0					
ANR	7313958	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313959	Identifier	m		7313672	0					
ANR	7313960	Identifier	avctx		7313672	1					
ANR	7313961	Argument	AV_LOG_ERROR		7313672	1					
ANR	7313962	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7313963	Argument	"""Substream min channel cannot be greater than max channel.\\n"""		7313672	2					
ANR	7313964	PrimaryExpression	"""Substream min channel cannot be greater than max channel.\\n"""		7313672	0					
ANR	7313965	ReturnStatement	return AVERROR_INVALIDDATA ;	119:8:2240:2266	7313672	1	True				
ANR	7313966	Identifier	AVERROR_INVALIDDATA		7313672	0					
ANR	7313967	IfStatement	if ( m -> avctx -> request_channels > 0 && s -> max_channel + 1 >= m -> avctx -> request_channels && substr < m -> max_decoded_substream )		7313672	19					
ANR	7313968	Condition	m -> avctx -> request_channels > 0 && s -> max_channel + 1 >= m -> avctx -> request_channels && substr < m -> max_decoded_substream	125:8:2286:2422	7313672	0	True				
ANR	7313969	AndExpression	m -> avctx -> request_channels > 0 && s -> max_channel + 1 >= m -> avctx -> request_channels && substr < m -> max_decoded_substream		7313672	0		&&			
ANR	7313970	RelationalExpression	m -> avctx -> request_channels > 0		7313672	0		>			
ANR	7313971	PtrMemberAccess	m -> avctx -> request_channels		7313672	0					
ANR	7313972	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313973	Identifier	m		7313672	0					
ANR	7313974	Identifier	avctx		7313672	1					
ANR	7313975	Identifier	request_channels		7313672	1					
ANR	7313976	PrimaryExpression	0		7313672	1					
ANR	7313977	AndExpression	s -> max_channel + 1 >= m -> avctx -> request_channels && substr < m -> max_decoded_substream		7313672	1		&&			
ANR	7313978	RelationalExpression	s -> max_channel + 1 >= m -> avctx -> request_channels		7313672	0		>=			
ANR	7313979	AdditiveExpression	s -> max_channel + 1		7313672	0		+			
ANR	7313980	PtrMemberAccess	s -> max_channel		7313672	0					
ANR	7313981	Identifier	s		7313672	0					
ANR	7313982	Identifier	max_channel		7313672	1					
ANR	7313983	PrimaryExpression	1		7313672	1					
ANR	7313984	PtrMemberAccess	m -> avctx -> request_channels		7313672	1					
ANR	7313985	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7313986	Identifier	m		7313672	0					
ANR	7313987	Identifier	avctx		7313672	1					
ANR	7313988	Identifier	request_channels		7313672	1					
ANR	7313989	RelationalExpression	substr < m -> max_decoded_substream		7313672	1		<			
ANR	7313990	Identifier	substr		7313672	0					
ANR	7313991	PtrMemberAccess	m -> max_decoded_substream		7313672	1					
ANR	7313992	Identifier	m		7313672	0					
ANR	7313993	Identifier	max_decoded_substream		7313672	1					
ANR	7313994	CompoundStatement		125:46:2278:2278	7313672	1					
ANR	7313995	Statement	av_log	131:8:2436:2441	7313672	0	True				
ANR	7313996	Statement	(	131:14:2442:2442	7313672	1	True				
ANR	7313997	Statement	m	131:15:2443:2443	7313672	2	True				
ANR	7313998	Statement	->	131:16:2444:2445	7313672	3	True				
ANR	7313999	Statement	avctx	131:18:2446:2450	7313672	4	True				
ANR	7314000	Statement	","	131:23:2451:2451	7313672	5	True				
ANR	7314001	Statement	AV_LOG_DEBUG	131:25:2453:2464	7313672	6	True				
ANR	7314002	Statement	","	131:37:2465:2465	7313672	7	True				
ANR	7314003	Statement	"""Extracting %d channel downmix from substream %d. """	133:15:2483:2533	7313672	8	True				
ANR	7314004	Statement	"""Further substreams will be skipped.\\n"""	135:15:2551:2589	7313672	9	True				
ANR	7314005	Statement	","	135:54:2590:2590	7313672	10	True				
ANR	7314006	Statement	s	137:15:2608:2608	7313672	11	True				
ANR	7314007	Statement	->	137:16:2609:2610	7313672	12	True				
ANR	7314008	Statement	max_channel	137:18:2611:2621	7313672	13	True				
ANR	7314009	Statement	+	137:30:2623:2623	7313672	14	True				
ANR	7314010	Statement	1	137:32:2625:2625	7313672	15	True				
ANR	7314011	Statement	","	137:33:2626:2626	7313672	16	True				
ANR	7314012	Statement	substr	137:35:2628:2633	7313672	17	True				
ANR	7314013	Statement	)	137:41:2634:2634	7313672	18	True				
ANR	7314014	ExpressionStatement		137:42:2635:2635	7313672	19	True				
ANR	7314015	ExpressionStatement	m -> max_decoded_substream = substr	139:8:2646:2679	7313672	20	True				
ANR	7314016	AssignmentExpression	m -> max_decoded_substream = substr		7313672	0		=			
ANR	7314017	PtrMemberAccess	m -> max_decoded_substream		7313672	0					
ANR	7314018	Identifier	m		7313672	0					
ANR	7314019	Identifier	max_decoded_substream		7313672	1					
ANR	7314020	Identifier	substr		7313672	1					
ANR	7314021	ExpressionStatement	"s -> noise_shift = get_bits ( gbp , 4 )"	145:4:2695:2731	7313672	20	True				
ANR	7314022	AssignmentExpression	"s -> noise_shift = get_bits ( gbp , 4 )"		7313672	0		=			
ANR	7314023	PtrMemberAccess	s -> noise_shift		7313672	0					
ANR	7314024	Identifier	s		7313672	0					
ANR	7314025	Identifier	noise_shift		7313672	1					
ANR	7314026	CallExpression	"get_bits ( gbp , 4 )"		7313672	1					
ANR	7314027	Callee	get_bits		7313672	0					
ANR	7314028	Identifier	get_bits		7313672	0					
ANR	7314029	ArgumentList	gbp		7313672	1					
ANR	7314030	Argument	gbp		7313672	0					
ANR	7314031	Identifier	gbp		7313672	0					
ANR	7314032	Argument	4		7313672	1					
ANR	7314033	PrimaryExpression	4		7313672	0					
ANR	7314034	ExpressionStatement	"s -> noisegen_seed = get_bits ( gbp , 23 )"	147:4:2738:2774	7313672	21	True				
ANR	7314035	AssignmentExpression	"s -> noisegen_seed = get_bits ( gbp , 23 )"		7313672	0		=			
ANR	7314036	PtrMemberAccess	s -> noisegen_seed		7313672	0					
ANR	7314037	Identifier	s		7313672	0					
ANR	7314038	Identifier	noisegen_seed		7313672	1					
ANR	7314039	CallExpression	"get_bits ( gbp , 23 )"		7313672	1					
ANR	7314040	Callee	get_bits		7313672	0					
ANR	7314041	Identifier	get_bits		7313672	0					
ANR	7314042	ArgumentList	gbp		7313672	1					
ANR	7314043	Argument	gbp		7313672	0					
ANR	7314044	Identifier	gbp		7313672	0					
ANR	7314045	Argument	23		7313672	1					
ANR	7314046	PrimaryExpression	23		7313672	0					
ANR	7314047	ExpressionStatement	"skip_bits ( gbp , 19 )"	151:4:2783:2801	7313672	22	True				
ANR	7314048	CallExpression	"skip_bits ( gbp , 19 )"		7313672	0					
ANR	7314049	Callee	skip_bits		7313672	0					
ANR	7314050	Identifier	skip_bits		7313672	0					
ANR	7314051	ArgumentList	gbp		7313672	1					
ANR	7314052	Argument	gbp		7313672	0					
ANR	7314053	Identifier	gbp		7313672	0					
ANR	7314054	Argument	19		7313672	1					
ANR	7314055	PrimaryExpression	19		7313672	0					
ANR	7314056	ExpressionStatement	s -> data_check_present = get_bits1 ( gbp )	155:4:2810:2848	7313672	23	True				
ANR	7314057	AssignmentExpression	s -> data_check_present = get_bits1 ( gbp )		7313672	0		=			
ANR	7314058	PtrMemberAccess	s -> data_check_present		7313672	0					
ANR	7314059	Identifier	s		7313672	0					
ANR	7314060	Identifier	data_check_present		7313672	1					
ANR	7314061	CallExpression	get_bits1 ( gbp )		7313672	1					
ANR	7314062	Callee	get_bits1		7313672	0					
ANR	7314063	Identifier	get_bits1		7313672	0					
ANR	7314064	ArgumentList	gbp		7313672	1					
ANR	7314065	Argument	gbp		7313672	0					
ANR	7314066	Identifier	gbp		7313672	0					
ANR	7314067	ExpressionStatement	"lossless_check = get_bits ( gbp , 8 )"	157:4:2855:2888	7313672	24	True				
ANR	7314068	AssignmentExpression	"lossless_check = get_bits ( gbp , 8 )"		7313672	0		=			
ANR	7314069	Identifier	lossless_check		7313672	0					
ANR	7314070	CallExpression	"get_bits ( gbp , 8 )"		7313672	1					
ANR	7314071	Callee	get_bits		7313672	0					
ANR	7314072	Identifier	get_bits		7313672	0					
ANR	7314073	ArgumentList	gbp		7313672	1					
ANR	7314074	Argument	gbp		7313672	0					
ANR	7314075	Identifier	gbp		7313672	0					
ANR	7314076	Argument	8		7313672	1					
ANR	7314077	PrimaryExpression	8		7313672	0					
ANR	7314078	IfStatement	if ( substr == m -> max_decoded_substream && s -> lossless_check_data != 0xffffffff )		7313672	25					
ANR	7314079	Condition	substr == m -> max_decoded_substream && s -> lossless_check_data != 0xffffffff	159:8:2899:2981	7313672	0	True				
ANR	7314080	AndExpression	substr == m -> max_decoded_substream && s -> lossless_check_data != 0xffffffff		7313672	0		&&			
ANR	7314081	EqualityExpression	substr == m -> max_decoded_substream		7313672	0		==			
ANR	7314082	Identifier	substr		7313672	0					
ANR	7314083	PtrMemberAccess	m -> max_decoded_substream		7313672	1					
ANR	7314084	Identifier	m		7313672	0					
ANR	7314085	Identifier	max_decoded_substream		7313672	1					
ANR	7314086	EqualityExpression	s -> lossless_check_data != 0xffffffff		7313672	1		!=			
ANR	7314087	PtrMemberAccess	s -> lossless_check_data		7313672	0					
ANR	7314088	Identifier	s		7313672	0					
ANR	7314089	Identifier	lossless_check_data		7313672	1					
ANR	7314090	PrimaryExpression	0xffffffff		7313672	1					
ANR	7314091	CompoundStatement		157:49:2837:2837	7313672	1					
ANR	7314092	ExpressionStatement	tmp = xor_32_to_8 ( s -> lossless_check_data )	163:8:2995:3036	7313672	0	True				
ANR	7314093	AssignmentExpression	tmp = xor_32_to_8 ( s -> lossless_check_data )		7313672	0		=			
ANR	7314094	Identifier	tmp		7313672	0					
ANR	7314095	CallExpression	xor_32_to_8 ( s -> lossless_check_data )		7313672	1					
ANR	7314096	Callee	xor_32_to_8		7313672	0					
ANR	7314097	Identifier	xor_32_to_8		7313672	0					
ANR	7314098	ArgumentList	s -> lossless_check_data		7313672	1					
ANR	7314099	Argument	s -> lossless_check_data		7313672	0					
ANR	7314100	PtrMemberAccess	s -> lossless_check_data		7313672	0					
ANR	7314101	Identifier	s		7313672	0					
ANR	7314102	Identifier	lossless_check_data		7313672	1					
ANR	7314103	IfStatement	if ( tmp != lossless_check )		7313672	1					
ANR	7314104	Condition	tmp != lossless_check	165:12:3051:3071	7313672	0	True				
ANR	7314105	EqualityExpression	tmp != lossless_check		7313672	0		!=			
ANR	7314106	Identifier	tmp		7313672	0					
ANR	7314107	Identifier	lossless_check		7313672	1					
ANR	7314108	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_WARNING , ""Lossless check failed - expected %02x, calculated %02x.\\n"" , lossless_check , tmp )"	167:12:3087:3241	7313672	1	True				
ANR	7314109	CallExpression	"av_log ( m -> avctx , AV_LOG_WARNING , ""Lossless check failed - expected %02x, calculated %02x.\\n"" , lossless_check , tmp )"		7313672	0					
ANR	7314110	Callee	av_log		7313672	0					
ANR	7314111	Identifier	av_log		7313672	0					
ANR	7314112	ArgumentList	m -> avctx		7313672	1					
ANR	7314113	Argument	m -> avctx		7313672	0					
ANR	7314114	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314115	Identifier	m		7313672	0					
ANR	7314116	Identifier	avctx		7313672	1					
ANR	7314117	Argument	AV_LOG_WARNING		7313672	1					
ANR	7314118	Identifier	AV_LOG_WARNING		7313672	0					
ANR	7314119	Argument	"""Lossless check failed - expected %02x, calculated %02x.\\n"""		7313672	2					
ANR	7314120	PrimaryExpression	"""Lossless check failed - expected %02x, calculated %02x.\\n"""		7313672	0					
ANR	7314121	Argument	lossless_check		7313672	3					
ANR	7314122	Identifier	lossless_check		7313672	0					
ANR	7314123	Argument	tmp		7313672	4					
ANR	7314124	Identifier	tmp		7313672	0					
ANR	7314125	ExpressionStatement	"skip_bits ( gbp , 16 )"	177:4:3257:3275	7313672	26	True				
ANR	7314126	CallExpression	"skip_bits ( gbp , 16 )"		7313672	0					
ANR	7314127	Callee	skip_bits		7313672	0					
ANR	7314128	Identifier	skip_bits		7313672	0					
ANR	7314129	ArgumentList	gbp		7313672	1					
ANR	7314130	Argument	gbp		7313672	0					
ANR	7314131	Identifier	gbp		7313672	0					
ANR	7314132	Argument	16		7313672	1					
ANR	7314133	PrimaryExpression	16		7313672	0					
ANR	7314134	ExpressionStatement	"memset ( s -> ch_assign , 0 , sizeof ( s -> ch_assign ) )"	181:4:3284:3329	7313672	27	True				
ANR	7314135	CallExpression	"memset ( s -> ch_assign , 0 , sizeof ( s -> ch_assign ) )"		7313672	0					
ANR	7314136	Callee	memset		7313672	0					
ANR	7314137	Identifier	memset		7313672	0					
ANR	7314138	ArgumentList	s -> ch_assign		7313672	1					
ANR	7314139	Argument	s -> ch_assign		7313672	0					
ANR	7314140	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314141	Identifier	s		7313672	0					
ANR	7314142	Identifier	ch_assign		7313672	1					
ANR	7314143	Argument	0		7313672	1					
ANR	7314144	PrimaryExpression	0		7313672	0					
ANR	7314145	Argument	sizeof ( s -> ch_assign )		7313672	2					
ANR	7314146	SizeofExpression	sizeof ( s -> ch_assign )		7313672	0					
ANR	7314147	Sizeof	sizeof		7313672	0					
ANR	7314148	PtrMemberAccess	s -> ch_assign		7313672	1					
ANR	7314149	Identifier	s		7313672	0					
ANR	7314150	Identifier	ch_assign		7313672	1					
ANR	7314151	ForStatement	for ( ch = 0 ; ch <= s -> max_matrix_channel ; ch ++ )		7313672	28					
ANR	7314152	ForInit	ch = 0 ;	185:9:3343:3349	7313672	0	True				
ANR	7314153	AssignmentExpression	ch = 0		7313672	0		=			
ANR	7314154	Identifier	ch		7313672	0					
ANR	7314155	PrimaryExpression	0		7313672	1					
ANR	7314156	Condition	ch <= s -> max_matrix_channel	185:17:3351:3377	7313672	1	True				
ANR	7314157	RelationalExpression	ch <= s -> max_matrix_channel		7313672	0		<=			
ANR	7314158	Identifier	ch		7313672	0					
ANR	7314159	PtrMemberAccess	s -> max_matrix_channel		7313672	1					
ANR	7314160	Identifier	s		7313672	0					
ANR	7314161	Identifier	max_matrix_channel		7313672	1					
ANR	7314162	PostIncDecOperationExpression	ch ++	185:46:3380:3383	7313672	2	True				
ANR	7314163	Identifier	ch		7313672	0					
ANR	7314164	IncDec	++		7313672	1					
ANR	7314165	CompoundStatement		183:8:3250:3282	7313672	3					
ANR	7314166	IdentifierDeclStatement	"int ch_assign = get_bits ( gbp , 6 ) ;"	187:8:3397:3429	7313672	0	True				
ANR	7314167	IdentifierDecl	"ch_assign = get_bits ( gbp , 6 )"		7313672	0					
ANR	7314168	IdentifierDeclType	int		7313672	0					
ANR	7314169	Identifier	ch_assign		7313672	1					
ANR	7314170	AssignmentExpression	"ch_assign = get_bits ( gbp , 6 )"		7313672	2		=			
ANR	7314171	Identifier	ch_assign		7313672	0					
ANR	7314172	CallExpression	"get_bits ( gbp , 6 )"		7313672	1					
ANR	7314173	Callee	get_bits		7313672	0					
ANR	7314174	Identifier	get_bits		7313672	0					
ANR	7314175	ArgumentList	gbp		7313672	1					
ANR	7314176	Argument	gbp		7313672	0					
ANR	7314177	Identifier	gbp		7313672	0					
ANR	7314178	Argument	6		7313672	1					
ANR	7314179	PrimaryExpression	6		7313672	0					
ANR	7314180	IfStatement	if ( ch_assign > s -> max_matrix_channel )		7313672	1					
ANR	7314181	Condition	ch_assign > s -> max_matrix_channel	189:12:3444:3476	7313672	0	True				
ANR	7314182	RelationalExpression	ch_assign > s -> max_matrix_channel		7313672	0		>			
ANR	7314183	Identifier	ch_assign		7313672	0					
ANR	7314184	PtrMemberAccess	s -> max_matrix_channel		7313672	1					
ANR	7314185	Identifier	s		7313672	0					
ANR	7314186	Identifier	max_matrix_channel		7313672	1					
ANR	7314187	CompoundStatement		185:47:3332:3332	7313672	1					
ANR	7314188	ExpressionStatement	"av_log_ask_for_sample ( m -> avctx , ""Assignment of matrix channel %d to invalid output channel %d.\\n"" , ch , ch_assign )"	191:12:3494:3647	7313672	0	True				
ANR	7314189	CallExpression	"av_log_ask_for_sample ( m -> avctx , ""Assignment of matrix channel %d to invalid output channel %d.\\n"" , ch , ch_assign )"		7313672	0					
ANR	7314190	Callee	av_log_ask_for_sample		7313672	0					
ANR	7314191	Identifier	av_log_ask_for_sample		7313672	0					
ANR	7314192	ArgumentList	m -> avctx		7313672	1					
ANR	7314193	Argument	m -> avctx		7313672	0					
ANR	7314194	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314195	Identifier	m		7313672	0					
ANR	7314196	Identifier	avctx		7313672	1					
ANR	7314197	Argument	"""Assignment of matrix channel %d to invalid output channel %d.\\n"""		7313672	1					
ANR	7314198	PrimaryExpression	"""Assignment of matrix channel %d to invalid output channel %d.\\n"""		7313672	0					
ANR	7314199	Argument	ch		7313672	2					
ANR	7314200	Identifier	ch		7313672	0					
ANR	7314201	Argument	ch_assign		7313672	3					
ANR	7314202	Identifier	ch_assign		7313672	0					
ANR	7314203	ReturnStatement	return AVERROR_PATCHWELCOME ;	197:12:3662:3689	7313672	1	True				
ANR	7314204	Identifier	AVERROR_PATCHWELCOME		7313672	0					
ANR	7314205	ExpressionStatement	s -> ch_assign [ ch_assign ] = ch	201:8:3711:3739	7313672	2	True				
ANR	7314206	AssignmentExpression	s -> ch_assign [ ch_assign ] = ch		7313672	0		=			
ANR	7314207	ArrayIndexing	s -> ch_assign [ ch_assign ]		7313672	0					
ANR	7314208	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314209	Identifier	s		7313672	0					
ANR	7314210	Identifier	ch_assign		7313672	1					
ANR	7314211	Identifier	ch_assign		7313672	1					
ANR	7314212	Identifier	ch		7313672	1					
ANR	7314213	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_MLP && m -> needs_reordering )		7313672	29					
ANR	7314214	Condition	m -> avctx -> codec_id == CODEC_ID_MLP && m -> needs_reordering	207:8:3759:3815	7313672	0	True				
ANR	7314215	AndExpression	m -> avctx -> codec_id == CODEC_ID_MLP && m -> needs_reordering		7313672	0		&&			
ANR	7314216	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_MLP		7313672	0		==			
ANR	7314217	PtrMemberAccess	m -> avctx -> codec_id		7313672	0					
ANR	7314218	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314219	Identifier	m		7313672	0					
ANR	7314220	Identifier	avctx		7313672	1					
ANR	7314221	Identifier	codec_id		7313672	1					
ANR	7314222	Identifier	CODEC_ID_MLP		7313672	1					
ANR	7314223	PtrMemberAccess	m -> needs_reordering		7313672	1					
ANR	7314224	Identifier	m		7313672	0					
ANR	7314225	Identifier	needs_reordering		7313672	1					
ANR	7314226	CompoundStatement		203:67:3671:3671	7313672	1					
ANR	7314227	IfStatement	if ( m -> avctx -> channel_layout == ( AV_CH_LAYOUT_QUAD | AV_CH_LOW_FREQUENCY ) || m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT0_BACK )		7313672	0					
ANR	7314228	Condition	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_QUAD | AV_CH_LOW_FREQUENCY ) || m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT0_BACK	209:12:3833:3969	7313672	0	True				
ANR	7314229	OrExpression	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_QUAD | AV_CH_LOW_FREQUENCY ) || m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT0_BACK		7313672	0		||			
ANR	7314230	EqualityExpression	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_QUAD | AV_CH_LOW_FREQUENCY )		7313672	0		==			
ANR	7314231	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314232	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314233	Identifier	m		7313672	0					
ANR	7314234	Identifier	avctx		7313672	1					
ANR	7314235	Identifier	channel_layout		7313672	1					
ANR	7314236	InclusiveOrExpression	AV_CH_LAYOUT_QUAD | AV_CH_LOW_FREQUENCY		7313672	1		|			
ANR	7314237	Identifier	AV_CH_LAYOUT_QUAD		7313672	0					
ANR	7314238	Identifier	AV_CH_LOW_FREQUENCY		7313672	1					
ANR	7314239	EqualityExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT0_BACK		7313672	1		==			
ANR	7314240	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314241	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314242	Identifier	m		7313672	0					
ANR	7314243	Identifier	avctx		7313672	1					
ANR	7314244	Identifier	channel_layout		7313672	1					
ANR	7314245	Identifier	AV_CH_LAYOUT_5POINT0_BACK		7313672	1					
ANR	7314246	CompoundStatement		209:12:3840:3863	7313672	1					
ANR	7314247	IdentifierDeclStatement	int i = s -> ch_assign [ 4 ] ;	213:12:3987:4010	7313672	0	True				
ANR	7314248	IdentifierDecl	i = s -> ch_assign [ 4 ]		7313672	0					
ANR	7314249	IdentifierDeclType	int		7313672	0					
ANR	7314250	Identifier	i		7313672	1					
ANR	7314251	AssignmentExpression	i = s -> ch_assign [ 4 ]		7313672	2		=			
ANR	7314252	Identifier	i		7313672	0					
ANR	7314253	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	1					
ANR	7314254	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314255	Identifier	s		7313672	0					
ANR	7314256	Identifier	ch_assign		7313672	1					
ANR	7314257	PrimaryExpression	4		7313672	1					
ANR	7314258	ExpressionStatement	s -> ch_assign [ 4 ] = s -> ch_assign [ 3 ]	215:12:4025:4058	7313672	1	True				
ANR	7314259	AssignmentExpression	s -> ch_assign [ 4 ] = s -> ch_assign [ 3 ]		7313672	0		=			
ANR	7314260	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	0					
ANR	7314261	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314262	Identifier	s		7313672	0					
ANR	7314263	Identifier	ch_assign		7313672	1					
ANR	7314264	PrimaryExpression	4		7313672	1					
ANR	7314265	ArrayIndexing	s -> ch_assign [ 3 ]		7313672	1					
ANR	7314266	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314267	Identifier	s		7313672	0					
ANR	7314268	Identifier	ch_assign		7313672	1					
ANR	7314269	PrimaryExpression	3		7313672	1					
ANR	7314270	ExpressionStatement	s -> ch_assign [ 3 ] = s -> ch_assign [ 2 ]	217:12:4073:4106	7313672	2	True				
ANR	7314271	AssignmentExpression	s -> ch_assign [ 3 ] = s -> ch_assign [ 2 ]		7313672	0		=			
ANR	7314272	ArrayIndexing	s -> ch_assign [ 3 ]		7313672	0					
ANR	7314273	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314274	Identifier	s		7313672	0					
ANR	7314275	Identifier	ch_assign		7313672	1					
ANR	7314276	PrimaryExpression	3		7313672	1					
ANR	7314277	ArrayIndexing	s -> ch_assign [ 2 ]		7313672	1					
ANR	7314278	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314279	Identifier	s		7313672	0					
ANR	7314280	Identifier	ch_assign		7313672	1					
ANR	7314281	PrimaryExpression	2		7313672	1					
ANR	7314282	ExpressionStatement	s -> ch_assign [ 2 ] = i	219:12:4121:4140	7313672	3	True				
ANR	7314283	AssignmentExpression	s -> ch_assign [ 2 ] = i		7313672	0		=			
ANR	7314284	ArrayIndexing	s -> ch_assign [ 2 ]		7313672	0					
ANR	7314285	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314286	Identifier	s		7313672	0					
ANR	7314287	Identifier	ch_assign		7313672	1					
ANR	7314288	PrimaryExpression	2		7313672	1					
ANR	7314289	Identifier	i		7313672	1					
ANR	7314290	ElseStatement	else		7313672	0					
ANR	7314291	IfStatement	if ( m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT1_BACK )		7313672	0					
ANR	7314292	Condition	m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT1_BACK	221:19:4162:4214	7313672	0	True				
ANR	7314293	EqualityExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_5POINT1_BACK		7313672	0		==			
ANR	7314294	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314295	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314296	Identifier	m		7313672	0					
ANR	7314297	Identifier	avctx		7313672	1					
ANR	7314298	Identifier	channel_layout		7313672	1					
ANR	7314299	Identifier	AV_CH_LAYOUT_5POINT1_BACK		7313672	1					
ANR	7314300	CompoundStatement		217:74:4070:4070	7313672	1					
ANR	7314301	ExpressionStatement	"FFSWAP ( int , s -> ch_assign [ 2 ] , s -> ch_assign [ 4 ] )"	223:12:4232:4277	7313672	0	True				
ANR	7314302	CallExpression	"FFSWAP ( int , s -> ch_assign [ 2 ] , s -> ch_assign [ 4 ] )"		7313672	0					
ANR	7314303	Callee	FFSWAP		7313672	0					
ANR	7314304	Identifier	FFSWAP		7313672	0					
ANR	7314305	ArgumentList	int		7313672	1					
ANR	7314306	Argument	int		7313672	0					
ANR	7314307	Identifier	int		7313672	0					
ANR	7314308	Argument	s -> ch_assign [ 2 ]		7313672	1					
ANR	7314309	ArrayIndexing	s -> ch_assign [ 2 ]		7313672	0					
ANR	7314310	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314311	Identifier	s		7313672	0					
ANR	7314312	Identifier	ch_assign		7313672	1					
ANR	7314313	PrimaryExpression	2		7313672	1					
ANR	7314314	Argument	s -> ch_assign [ 4 ]		7313672	2					
ANR	7314315	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	0					
ANR	7314316	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314317	Identifier	s		7313672	0					
ANR	7314318	Identifier	ch_assign		7313672	1					
ANR	7314319	PrimaryExpression	4		7313672	1					
ANR	7314320	ExpressionStatement	"FFSWAP ( int , s -> ch_assign [ 3 ] , s -> ch_assign [ 5 ] )"	225:12:4292:4337	7313672	1	True				
ANR	7314321	CallExpression	"FFSWAP ( int , s -> ch_assign [ 3 ] , s -> ch_assign [ 5 ] )"		7313672	0					
ANR	7314322	Callee	FFSWAP		7313672	0					
ANR	7314323	Identifier	FFSWAP		7313672	0					
ANR	7314324	ArgumentList	int		7313672	1					
ANR	7314325	Argument	int		7313672	0					
ANR	7314326	Identifier	int		7313672	0					
ANR	7314327	Argument	s -> ch_assign [ 3 ]		7313672	1					
ANR	7314328	ArrayIndexing	s -> ch_assign [ 3 ]		7313672	0					
ANR	7314329	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314330	Identifier	s		7313672	0					
ANR	7314331	Identifier	ch_assign		7313672	1					
ANR	7314332	PrimaryExpression	3		7313672	1					
ANR	7314333	Argument	s -> ch_assign [ 5 ]		7313672	2					
ANR	7314334	ArrayIndexing	s -> ch_assign [ 5 ]		7313672	0					
ANR	7314335	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314336	Identifier	s		7313672	0					
ANR	7314337	Identifier	ch_assign		7313672	1					
ANR	7314338	PrimaryExpression	5		7313672	1					
ANR	7314339	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1 || m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1_WIDE ) )		7313672	30					
ANR	7314340	Condition	m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1 || m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1_WIDE )	231:8:4366:4531	7313672	0	True				
ANR	7314341	AndExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1 || m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1_WIDE )		7313672	0		&&			
ANR	7314342	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD		7313672	0		==			
ANR	7314343	PtrMemberAccess	m -> avctx -> codec_id		7313672	0					
ANR	7314344	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314345	Identifier	m		7313672	0					
ANR	7314346	Identifier	avctx		7313672	1					
ANR	7314347	Identifier	codec_id		7313672	1					
ANR	7314348	Identifier	CODEC_ID_TRUEHD		7313672	1					
ANR	7314349	OrExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1 || m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1_WIDE		7313672	1		||			
ANR	7314350	EqualityExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1		7313672	0		==			
ANR	7314351	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314352	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314353	Identifier	m		7313672	0					
ANR	7314354	Identifier	avctx		7313672	1					
ANR	7314355	Identifier	channel_layout		7313672	1					
ANR	7314356	Identifier	AV_CH_LAYOUT_7POINT1		7313672	1					
ANR	7314357	EqualityExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_7POINT1_WIDE		7313672	1		==			
ANR	7314358	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314359	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314360	Identifier	m		7313672	0					
ANR	7314361	Identifier	avctx		7313672	1					
ANR	7314362	Identifier	channel_layout		7313672	1					
ANR	7314363	Identifier	AV_CH_LAYOUT_7POINT1_WIDE		7313672	1					
ANR	7314364	CompoundStatement		231:64:4387:4387	7313672	1					
ANR	7314365	ExpressionStatement	"FFSWAP ( int , s -> ch_assign [ 4 ] , s -> ch_assign [ 6 ] )"	237:8:4545:4590	7313672	0	True				
ANR	7314366	CallExpression	"FFSWAP ( int , s -> ch_assign [ 4 ] , s -> ch_assign [ 6 ] )"		7313672	0					
ANR	7314367	Callee	FFSWAP		7313672	0					
ANR	7314368	Identifier	FFSWAP		7313672	0					
ANR	7314369	ArgumentList	int		7313672	1					
ANR	7314370	Argument	int		7313672	0					
ANR	7314371	Identifier	int		7313672	0					
ANR	7314372	Argument	s -> ch_assign [ 4 ]		7313672	1					
ANR	7314373	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	0					
ANR	7314374	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314375	Identifier	s		7313672	0					
ANR	7314376	Identifier	ch_assign		7313672	1					
ANR	7314377	PrimaryExpression	4		7313672	1					
ANR	7314378	Argument	s -> ch_assign [ 6 ]		7313672	2					
ANR	7314379	ArrayIndexing	s -> ch_assign [ 6 ]		7313672	0					
ANR	7314380	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314381	Identifier	s		7313672	0					
ANR	7314382	Identifier	ch_assign		7313672	1					
ANR	7314383	PrimaryExpression	6		7313672	1					
ANR	7314384	ExpressionStatement	"FFSWAP ( int , s -> ch_assign [ 5 ] , s -> ch_assign [ 7 ] )"	239:8:4601:4646	7313672	1	True				
ANR	7314385	CallExpression	"FFSWAP ( int , s -> ch_assign [ 5 ] , s -> ch_assign [ 7 ] )"		7313672	0					
ANR	7314386	Callee	FFSWAP		7313672	0					
ANR	7314387	Identifier	FFSWAP		7313672	0					
ANR	7314388	ArgumentList	int		7313672	1					
ANR	7314389	Argument	int		7313672	0					
ANR	7314390	Identifier	int		7313672	0					
ANR	7314391	Argument	s -> ch_assign [ 5 ]		7313672	1					
ANR	7314392	ArrayIndexing	s -> ch_assign [ 5 ]		7313672	0					
ANR	7314393	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314394	Identifier	s		7313672	0					
ANR	7314395	Identifier	ch_assign		7313672	1					
ANR	7314396	PrimaryExpression	5		7313672	1					
ANR	7314397	Argument	s -> ch_assign [ 7 ]		7313672	2					
ANR	7314398	ArrayIndexing	s -> ch_assign [ 7 ]		7313672	0					
ANR	7314399	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314400	Identifier	s		7313672	0					
ANR	7314401	Identifier	ch_assign		7313672	1					
ANR	7314402	PrimaryExpression	7		7313672	1					
ANR	7314403	ElseStatement	else		7313672	0					
ANR	7314404	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_6POINT1 || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER ) || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER ) ) )		7313672	0					
ANR	7314405	Condition	m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_6POINT1 || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER ) || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER ) )	241:15:4664:4933	7313672	0	True				
ANR	7314406	AndExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD && ( m -> avctx -> channel_layout == AV_CH_LAYOUT_6POINT1 || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER ) || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER ) )		7313672	0		&&			
ANR	7314407	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD		7313672	0		==			
ANR	7314408	PtrMemberAccess	m -> avctx -> codec_id		7313672	0					
ANR	7314409	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314410	Identifier	m		7313672	0					
ANR	7314411	Identifier	avctx		7313672	1					
ANR	7314412	Identifier	codec_id		7313672	1					
ANR	7314413	Identifier	CODEC_ID_TRUEHD		7313672	1					
ANR	7314414	OrExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_6POINT1 || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER ) || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER )		7313672	1		||			
ANR	7314415	EqualityExpression	m -> avctx -> channel_layout == AV_CH_LAYOUT_6POINT1		7313672	0		==			
ANR	7314416	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314417	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314418	Identifier	m		7313672	0					
ANR	7314419	Identifier	avctx		7313672	1					
ANR	7314420	Identifier	channel_layout		7313672	1					
ANR	7314421	Identifier	AV_CH_LAYOUT_6POINT1		7313672	1					
ANR	7314422	OrExpression	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER ) || m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER )		7313672	1		||			
ANR	7314423	EqualityExpression	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER )		7313672	0		==			
ANR	7314424	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314425	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314426	Identifier	m		7313672	0					
ANR	7314427	Identifier	avctx		7313672	1					
ANR	7314428	Identifier	channel_layout		7313672	1					
ANR	7314429	InclusiveOrExpression	AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_CENTER		7313672	1		|			
ANR	7314430	Identifier	AV_CH_LAYOUT_6POINT1		7313672	0					
ANR	7314431	Identifier	AV_CH_TOP_CENTER		7313672	1					
ANR	7314432	EqualityExpression	m -> avctx -> channel_layout == ( AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER )		7313672	1		==			
ANR	7314433	PtrMemberAccess	m -> avctx -> channel_layout		7313672	0					
ANR	7314434	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314435	Identifier	m		7313672	0					
ANR	7314436	Identifier	avctx		7313672	1					
ANR	7314437	Identifier	channel_layout		7313672	1					
ANR	7314438	InclusiveOrExpression	AV_CH_LAYOUT_6POINT1 | AV_CH_TOP_FRONT_CENTER		7313672	1		|			
ANR	7314439	Identifier	AV_CH_LAYOUT_6POINT1		7313672	0					
ANR	7314440	Identifier	AV_CH_TOP_FRONT_CENTER		7313672	1					
ANR	7314441	CompoundStatement		245:8:4800:4823	7313672	1					
ANR	7314442	IdentifierDeclStatement	int i = s -> ch_assign [ 6 ] ;	249:8:4947:4970	7313672	0	True				
ANR	7314443	IdentifierDecl	i = s -> ch_assign [ 6 ]		7313672	0					
ANR	7314444	IdentifierDeclType	int		7313672	0					
ANR	7314445	Identifier	i		7313672	1					
ANR	7314446	AssignmentExpression	i = s -> ch_assign [ 6 ]		7313672	2		=			
ANR	7314447	Identifier	i		7313672	0					
ANR	7314448	ArrayIndexing	s -> ch_assign [ 6 ]		7313672	1					
ANR	7314449	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314450	Identifier	s		7313672	0					
ANR	7314451	Identifier	ch_assign		7313672	1					
ANR	7314452	PrimaryExpression	6		7313672	1					
ANR	7314453	ExpressionStatement	s -> ch_assign [ 6 ] = s -> ch_assign [ 5 ]	251:8:4981:5014	7313672	1	True				
ANR	7314454	AssignmentExpression	s -> ch_assign [ 6 ] = s -> ch_assign [ 5 ]		7313672	0		=			
ANR	7314455	ArrayIndexing	s -> ch_assign [ 6 ]		7313672	0					
ANR	7314456	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314457	Identifier	s		7313672	0					
ANR	7314458	Identifier	ch_assign		7313672	1					
ANR	7314459	PrimaryExpression	6		7313672	1					
ANR	7314460	ArrayIndexing	s -> ch_assign [ 5 ]		7313672	1					
ANR	7314461	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314462	Identifier	s		7313672	0					
ANR	7314463	Identifier	ch_assign		7313672	1					
ANR	7314464	PrimaryExpression	5		7313672	1					
ANR	7314465	ExpressionStatement	s -> ch_assign [ 5 ] = s -> ch_assign [ 4 ]	253:8:5025:5058	7313672	2	True				
ANR	7314466	AssignmentExpression	s -> ch_assign [ 5 ] = s -> ch_assign [ 4 ]		7313672	0		=			
ANR	7314467	ArrayIndexing	s -> ch_assign [ 5 ]		7313672	0					
ANR	7314468	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314469	Identifier	s		7313672	0					
ANR	7314470	Identifier	ch_assign		7313672	1					
ANR	7314471	PrimaryExpression	5		7313672	1					
ANR	7314472	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	1					
ANR	7314473	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314474	Identifier	s		7313672	0					
ANR	7314475	Identifier	ch_assign		7313672	1					
ANR	7314476	PrimaryExpression	4		7313672	1					
ANR	7314477	ExpressionStatement	s -> ch_assign [ 4 ] = i	255:8:5069:5088	7313672	3	True				
ANR	7314478	AssignmentExpression	s -> ch_assign [ 4 ] = i		7313672	0		=			
ANR	7314479	ArrayIndexing	s -> ch_assign [ 4 ]		7313672	0					
ANR	7314480	PtrMemberAccess	s -> ch_assign		7313672	0					
ANR	7314481	Identifier	s		7313672	0					
ANR	7314482	Identifier	ch_assign		7313672	1					
ANR	7314483	PrimaryExpression	4		7313672	1					
ANR	7314484	Identifier	i		7313672	1					
ANR	7314485	ExpressionStatement	"checksum = ff_mlp_restart_checksum ( buf , get_bits_count ( gbp ) - start_count )"	261:4:5104:5178	7313672	31	True				
ANR	7314486	AssignmentExpression	"checksum = ff_mlp_restart_checksum ( buf , get_bits_count ( gbp ) - start_count )"		7313672	0		=			
ANR	7314487	Identifier	checksum		7313672	0					
ANR	7314488	CallExpression	"ff_mlp_restart_checksum ( buf , get_bits_count ( gbp ) - start_count )"		7313672	1					
ANR	7314489	Callee	ff_mlp_restart_checksum		7313672	0					
ANR	7314490	Identifier	ff_mlp_restart_checksum		7313672	0					
ANR	7314491	ArgumentList	buf		7313672	1					
ANR	7314492	Argument	buf		7313672	0					
ANR	7314493	Identifier	buf		7313672	0					
ANR	7314494	Argument	get_bits_count ( gbp ) - start_count		7313672	1					
ANR	7314495	AdditiveExpression	get_bits_count ( gbp ) - start_count		7313672	0		-			
ANR	7314496	CallExpression	get_bits_count ( gbp )		7313672	0					
ANR	7314497	Callee	get_bits_count		7313672	0					
ANR	7314498	Identifier	get_bits_count		7313672	0					
ANR	7314499	ArgumentList	gbp		7313672	1					
ANR	7314500	Argument	gbp		7313672	0					
ANR	7314501	Identifier	gbp		7313672	0					
ANR	7314502	Identifier	start_count		7313672	1					
ANR	7314503	IfStatement	"if ( checksum != get_bits ( gbp , 8 ) )"		7313672	32					
ANR	7314504	Condition	"checksum != get_bits ( gbp , 8 )"	265:8:5191:5218	7313672	0	True				
ANR	7314505	EqualityExpression	"checksum != get_bits ( gbp , 8 )"		7313672	0		!=			
ANR	7314506	Identifier	checksum		7313672	0					
ANR	7314507	CallExpression	"get_bits ( gbp , 8 )"		7313672	1					
ANR	7314508	Callee	get_bits		7313672	0					
ANR	7314509	Identifier	get_bits		7313672	0					
ANR	7314510	ArgumentList	gbp		7313672	1					
ANR	7314511	Argument	gbp		7313672	0					
ANR	7314512	Identifier	gbp		7313672	0					
ANR	7314513	Argument	8		7313672	1					
ANR	7314514	PrimaryExpression	8		7313672	0					
ANR	7314515	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""restart header checksum error\\n"" )"	267:8:5230:5295	7313672	1	True				
ANR	7314516	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""restart header checksum error\\n"" )"		7313672	0					
ANR	7314517	Callee	av_log		7313672	0					
ANR	7314518	Identifier	av_log		7313672	0					
ANR	7314519	ArgumentList	m -> avctx		7313672	1					
ANR	7314520	Argument	m -> avctx		7313672	0					
ANR	7314521	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314522	Identifier	m		7313672	0					
ANR	7314523	Identifier	avctx		7313672	1					
ANR	7314524	Argument	AV_LOG_ERROR		7313672	1					
ANR	7314525	Identifier	AV_LOG_ERROR		7313672	0					
ANR	7314526	Argument	"""restart header checksum error\\n"""		7313672	2					
ANR	7314527	PrimaryExpression	"""restart header checksum error\\n"""		7313672	0					
ANR	7314528	ExpressionStatement	s -> param_presence_flags = 0xff	273:4:5348:5380	7313672	33	True				
ANR	7314529	AssignmentExpression	s -> param_presence_flags = 0xff		7313672	0		=			
ANR	7314530	PtrMemberAccess	s -> param_presence_flags		7313672	0					
ANR	7314531	Identifier	s		7313672	0					
ANR	7314532	Identifier	param_presence_flags		7313672	1					
ANR	7314533	PrimaryExpression	0xff		7313672	1					
ANR	7314534	ExpressionStatement	s -> num_primitive_matrices = 0	275:4:5387:5416	7313672	34	True				
ANR	7314535	AssignmentExpression	s -> num_primitive_matrices = 0		7313672	0		=			
ANR	7314536	PtrMemberAccess	s -> num_primitive_matrices		7313672	0					
ANR	7314537	Identifier	s		7313672	0					
ANR	7314538	Identifier	num_primitive_matrices		7313672	1					
ANR	7314539	PrimaryExpression	0		7313672	1					
ANR	7314540	ExpressionStatement	s -> blocksize = 8	277:4:5423:5452	7313672	35	True				
ANR	7314541	AssignmentExpression	s -> blocksize = 8		7313672	0		=			
ANR	7314542	PtrMemberAccess	s -> blocksize		7313672	0					
ANR	7314543	Identifier	s		7313672	0					
ANR	7314544	Identifier	blocksize		7313672	1					
ANR	7314545	PrimaryExpression	8		7313672	1					
ANR	7314546	ExpressionStatement	s -> lossless_check_data = 0	279:4:5459:5488	7313672	36	True				
ANR	7314547	AssignmentExpression	s -> lossless_check_data = 0		7313672	0		=			
ANR	7314548	PtrMemberAccess	s -> lossless_check_data		7313672	0					
ANR	7314549	Identifier	s		7313672	0					
ANR	7314550	Identifier	lossless_check_data		7313672	1					
ANR	7314551	PrimaryExpression	0		7313672	1					
ANR	7314552	ExpressionStatement	"memset ( s -> output_shift , 0 , sizeof ( s -> output_shift ) )"	283:4:5497:5554	7313672	37	True				
ANR	7314553	CallExpression	"memset ( s -> output_shift , 0 , sizeof ( s -> output_shift ) )"		7313672	0					
ANR	7314554	Callee	memset		7313672	0					
ANR	7314555	Identifier	memset		7313672	0					
ANR	7314556	ArgumentList	s -> output_shift		7313672	1					
ANR	7314557	Argument	s -> output_shift		7313672	0					
ANR	7314558	PtrMemberAccess	s -> output_shift		7313672	0					
ANR	7314559	Identifier	s		7313672	0					
ANR	7314560	Identifier	output_shift		7313672	1					
ANR	7314561	Argument	0		7313672	1					
ANR	7314562	PrimaryExpression	0		7313672	0					
ANR	7314563	Argument	sizeof ( s -> output_shift )		7313672	2					
ANR	7314564	SizeofExpression	sizeof ( s -> output_shift )		7313672	0					
ANR	7314565	Sizeof	sizeof		7313672	0					
ANR	7314566	PtrMemberAccess	s -> output_shift		7313672	1					
ANR	7314567	Identifier	s		7313672	0					
ANR	7314568	Identifier	output_shift		7313672	1					
ANR	7314569	ExpressionStatement	"memset ( s -> quant_step_size , 0 , sizeof ( s -> quant_step_size ) )"	285:4:5561:5618	7313672	38	True				
ANR	7314570	CallExpression	"memset ( s -> quant_step_size , 0 , sizeof ( s -> quant_step_size ) )"		7313672	0					
ANR	7314571	Callee	memset		7313672	0					
ANR	7314572	Identifier	memset		7313672	0					
ANR	7314573	ArgumentList	s -> quant_step_size		7313672	1					
ANR	7314574	Argument	s -> quant_step_size		7313672	0					
ANR	7314575	PtrMemberAccess	s -> quant_step_size		7313672	0					
ANR	7314576	Identifier	s		7313672	0					
ANR	7314577	Identifier	quant_step_size		7313672	1					
ANR	7314578	Argument	0		7313672	1					
ANR	7314579	PrimaryExpression	0		7313672	0					
ANR	7314580	Argument	sizeof ( s -> quant_step_size )		7313672	2					
ANR	7314581	SizeofExpression	sizeof ( s -> quant_step_size )		7313672	0					
ANR	7314582	Sizeof	sizeof		7313672	0					
ANR	7314583	PtrMemberAccess	s -> quant_step_size		7313672	1					
ANR	7314584	Identifier	s		7313672	0					
ANR	7314585	Identifier	quant_step_size		7313672	1					
ANR	7314586	ForStatement	for ( ch = s -> min_channel ; ch <= s -> max_channel ; ch ++ )		7313672	39					
ANR	7314587	ForInit	ch = s -> min_channel ;	289:9:5632:5651	7313672	0	True				
ANR	7314588	AssignmentExpression	ch = s -> min_channel		7313672	0		=			
ANR	7314589	Identifier	ch		7313672	0					
ANR	7314590	PtrMemberAccess	s -> min_channel		7313672	1					
ANR	7314591	Identifier	s		7313672	0					
ANR	7314592	Identifier	min_channel		7313672	1					
ANR	7314593	Condition	ch <= s -> max_channel	289:30:5653:5672	7313672	1	True				
ANR	7314594	RelationalExpression	ch <= s -> max_channel		7313672	0		<=			
ANR	7314595	Identifier	ch		7313672	0					
ANR	7314596	PtrMemberAccess	s -> max_channel		7313672	1					
ANR	7314597	Identifier	s		7313672	0					
ANR	7314598	Identifier	max_channel		7313672	1					
ANR	7314599	PostIncDecOperationExpression	ch ++	289:52:5675:5678	7313672	2	True				
ANR	7314600	Identifier	ch		7313672	0					
ANR	7314601	IncDec	++		7313672	1					
ANR	7314602	CompoundStatement		287:8:5545:5587	7313672	3					
ANR	7314603	IdentifierDeclStatement	ChannelParams * cp = & s -> channel_params [ ch ] ;	291:8:5692:5734	7313672	0	True				
ANR	7314604	IdentifierDecl	* cp = & s -> channel_params [ ch ]		7313672	0					
ANR	7314605	IdentifierDeclType	ChannelParams *		7313672	0					
ANR	7314606	Identifier	cp		7313672	1					
ANR	7314607	AssignmentExpression	* cp = & s -> channel_params [ ch ]		7313672	2		=			
ANR	7314608	Identifier	cp		7313672	0					
ANR	7314609	UnaryOperationExpression	& s -> channel_params [ ch ]		7313672	1					
ANR	7314610	UnaryOperator	&		7313672	0					
ANR	7314611	ArrayIndexing	s -> channel_params [ ch ]		7313672	1					
ANR	7314612	PtrMemberAccess	s -> channel_params		7313672	0					
ANR	7314613	Identifier	s		7313672	0					
ANR	7314614	Identifier	channel_params		7313672	1					
ANR	7314615	Identifier	ch		7313672	1					
ANR	7314616	ExpressionStatement	cp -> filter_params [ FIR ] . order = 0	293:8:5745:5777	7313672	1	True				
ANR	7314617	AssignmentExpression	cp -> filter_params [ FIR ] . order = 0		7313672	0		=			
ANR	7314618	MemberAccess	cp -> filter_params [ FIR ] . order		7313672	0					
ANR	7314619	ArrayIndexing	cp -> filter_params [ FIR ]		7313672	0					
ANR	7314620	PtrMemberAccess	cp -> filter_params		7313672	0					
ANR	7314621	Identifier	cp		7313672	0					
ANR	7314622	Identifier	filter_params		7313672	1					
ANR	7314623	Identifier	FIR		7313672	1					
ANR	7314624	Identifier	order		7313672	1					
ANR	7314625	PrimaryExpression	0		7313672	1					
ANR	7314626	ExpressionStatement	cp -> filter_params [ IIR ] . order = 0	295:8:5788:5820	7313672	2	True				
ANR	7314627	AssignmentExpression	cp -> filter_params [ IIR ] . order = 0		7313672	0		=			
ANR	7314628	MemberAccess	cp -> filter_params [ IIR ] . order		7313672	0					
ANR	7314629	ArrayIndexing	cp -> filter_params [ IIR ]		7313672	0					
ANR	7314630	PtrMemberAccess	cp -> filter_params		7313672	0					
ANR	7314631	Identifier	cp		7313672	0					
ANR	7314632	Identifier	filter_params		7313672	1					
ANR	7314633	Identifier	IIR		7313672	1					
ANR	7314634	Identifier	order		7313672	1					
ANR	7314635	PrimaryExpression	0		7313672	1					
ANR	7314636	ExpressionStatement	cp -> filter_params [ FIR ] . shift = 0	297:8:5831:5863	7313672	3	True				
ANR	7314637	AssignmentExpression	cp -> filter_params [ FIR ] . shift = 0		7313672	0		=			
ANR	7314638	MemberAccess	cp -> filter_params [ FIR ] . shift		7313672	0					
ANR	7314639	ArrayIndexing	cp -> filter_params [ FIR ]		7313672	0					
ANR	7314640	PtrMemberAccess	cp -> filter_params		7313672	0					
ANR	7314641	Identifier	cp		7313672	0					
ANR	7314642	Identifier	filter_params		7313672	1					
ANR	7314643	Identifier	FIR		7313672	1					
ANR	7314644	Identifier	shift		7313672	1					
ANR	7314645	PrimaryExpression	0		7313672	1					
ANR	7314646	ExpressionStatement	cp -> filter_params [ IIR ] . shift = 0	299:8:5874:5906	7313672	4	True				
ANR	7314647	AssignmentExpression	cp -> filter_params [ IIR ] . shift = 0		7313672	0		=			
ANR	7314648	MemberAccess	cp -> filter_params [ IIR ] . shift		7313672	0					
ANR	7314649	ArrayIndexing	cp -> filter_params [ IIR ]		7313672	0					
ANR	7314650	PtrMemberAccess	cp -> filter_params		7313672	0					
ANR	7314651	Identifier	cp		7313672	0					
ANR	7314652	Identifier	filter_params		7313672	1					
ANR	7314653	Identifier	IIR		7313672	1					
ANR	7314654	Identifier	shift		7313672	1					
ANR	7314655	PrimaryExpression	0		7313672	1					
ANR	7314656	ExpressionStatement	cp -> huff_offset = 0	305:8:5974:5998	7313672	5	True				
ANR	7314657	AssignmentExpression	cp -> huff_offset = 0		7313672	0		=			
ANR	7314658	PtrMemberAccess	cp -> huff_offset		7313672	0					
ANR	7314659	Identifier	cp		7313672	0					
ANR	7314660	Identifier	huff_offset		7313672	1					
ANR	7314661	PrimaryExpression	0		7313672	1					
ANR	7314662	ExpressionStatement	cp -> sign_huff_offset = ( - 1 ) << 23	307:8:6009:6042	7313672	6	True				
ANR	7314663	AssignmentExpression	cp -> sign_huff_offset = ( - 1 ) << 23		7313672	0		=			
ANR	7314664	PtrMemberAccess	cp -> sign_huff_offset		7313672	0					
ANR	7314665	Identifier	cp		7313672	0					
ANR	7314666	Identifier	sign_huff_offset		7313672	1					
ANR	7314667	ShiftExpression	( - 1 ) << 23		7313672	1		<<			
ANR	7314668	UnaryOperationExpression	- 1		7313672	0					
ANR	7314669	UnaryOperator	-		7313672	0					
ANR	7314670	PrimaryExpression	1		7313672	1					
ANR	7314671	PrimaryExpression	23		7313672	1					
ANR	7314672	ExpressionStatement	cp -> codebook = 0	309:8:6053:6077	7313672	7	True				
ANR	7314673	AssignmentExpression	cp -> codebook = 0		7313672	0		=			
ANR	7314674	PtrMemberAccess	cp -> codebook		7313672	0					
ANR	7314675	Identifier	cp		7313672	0					
ANR	7314676	Identifier	codebook		7313672	1					
ANR	7314677	PrimaryExpression	0		7313672	1					
ANR	7314678	ExpressionStatement	cp -> huff_lsbs = 24	311:8:6088:6113	7313672	8	True				
ANR	7314679	AssignmentExpression	cp -> huff_lsbs = 24		7313672	0		=			
ANR	7314680	PtrMemberAccess	cp -> huff_lsbs		7313672	0					
ANR	7314681	Identifier	cp		7313672	0					
ANR	7314682	Identifier	huff_lsbs		7313672	1					
ANR	7314683	PrimaryExpression	24		7313672	1					
ANR	7314684	IfStatement	if ( substr == m -> max_decoded_substream )		7313672	40					
ANR	7314685	Condition	substr == m -> max_decoded_substream	317:8:6133:6166	7313672	0	True				
ANR	7314686	EqualityExpression	substr == m -> max_decoded_substream		7313672	0		==			
ANR	7314687	Identifier	substr		7313672	0					
ANR	7314688	PtrMemberAccess	m -> max_decoded_substream		7313672	1					
ANR	7314689	Identifier	m		7313672	0					
ANR	7314690	Identifier	max_decoded_substream		7313672	1					
ANR	7314691	ExpressionStatement	m -> avctx -> channels = s -> max_matrix_channel + 1	319:8:6178:6224	7313672	1	True				
ANR	7314692	AssignmentExpression	m -> avctx -> channels = s -> max_matrix_channel + 1		7313672	0		=			
ANR	7314693	PtrMemberAccess	m -> avctx -> channels		7313672	0					
ANR	7314694	PtrMemberAccess	m -> avctx		7313672	0					
ANR	7314695	Identifier	m		7313672	0					
ANR	7314696	Identifier	avctx		7313672	1					
ANR	7314697	Identifier	channels		7313672	1					
ANR	7314698	AdditiveExpression	s -> max_matrix_channel + 1		7313672	1		+			
ANR	7314699	PtrMemberAccess	s -> max_matrix_channel		7313672	0					
ANR	7314700	Identifier	s		7313672	0					
ANR	7314701	Identifier	max_matrix_channel		7313672	1					
ANR	7314702	PrimaryExpression	1		7313672	1					
ANR	7314703	ReturnStatement	return 0 ;	323:4:6233:6241	7313672	41	True				
ANR	7314704	PrimaryExpression	0		7313672	0					
ANR	7314705	ReturnType	static int		7313672	1					
ANR	7314706	Identifier	read_restart_header		7313672	2					
ANR	7314707	ParameterList	"MLPDecodeContext * m , GetBitContext * gbp , const uint8_t * buf , unsigned int substr"		7313672	3					
ANR	7314708	Parameter	MLPDecodeContext * m	1:31:31:49	7313672	0	True				
ANR	7314709	ParameterType	MLPDecodeContext *		7313672	0					
ANR	7314710	Identifier	m		7313672	1					
ANR	7314711	Parameter	GetBitContext * gbp	1:52:52:69	7313672	1	True				
ANR	7314712	ParameterType	GetBitContext *		7313672	0					
ANR	7314713	Identifier	gbp		7313672	1					
ANR	7314714	Parameter	const uint8_t * buf	3:31:104:121	7313672	2	True				
ANR	7314715	ParameterType	const uint8_t *		7313672	0					
ANR	7314716	Identifier	buf		7313672	1					
ANR	7314717	Parameter	unsigned int substr	3:51:124:142	7313672	3	True				
ANR	7314718	ParameterType	unsigned int		7313672	0					
ANR	7314719	Identifier	substr		7313672	1					
ANR	7314720	CFGEntryNode	ENTRY		7313672		True				
ANR	7314721	CFGExitNode	EXIT		7313672		True				
ANR	7314722	Symbol	get_bits		7313672						
ANR	7314723	Symbol	* s -> ch_assign		7313672						
ANR	7314724	Symbol	ff_mlp_restart_checksum		7313672						
ANR	7314725	Symbol	s -> noisegen_seed		7313672						
ANR	7314726	Symbol	s -> num_primitive_matrices		7313672						
ANR	7314727	Symbol	s -> lossless_check_data		7313672						
ANR	7314728	Symbol	cp -> codebook		7313672						
ANR	7314729	Symbol	tmp		7313672						
ANR	7314730	Symbol	s -> min_channel		7313672						
ANR	7314731	Symbol	MAX_MATRIX_CHANNEL_MLP		7313672						
ANR	7314732	Symbol	s -> noise_type		7313672						
ANR	7314733	Symbol	AV_CH_LAYOUT_5POINT0_BACK		7313672						
ANR	7314734	Symbol	AV_CH_LAYOUT_7POINT1		7313672						
ANR	7314735	Symbol	m -> avctx -> request_channels		7313672						
ANR	7314736	Symbol	m -> avctx -> codec_id		7313672						
ANR	7314737	Symbol	* cp -> filter_params		7313672						
ANR	7314738	Symbol	* m -> avctx		7313672						
ANR	7314739	Symbol	m -> avctx		7313672						
ANR	7314740	Symbol	* FIR		7313672						
ANR	7314741	Symbol	get_bits1		7313672						
ANR	7314742	Symbol	cp -> sign_huff_offset		7313672						
ANR	7314743	Symbol	substr		7313672						
ANR	7314744	Symbol	get_bits_count		7313672						
ANR	7314745	Symbol	s -> blocksize		7313672						
ANR	7314746	Symbol	* cp		7313672						
ANR	7314747	Symbol	IIR		7313672						
ANR	7314748	Symbol	s -> quant_step_size		7313672						
ANR	7314749	Symbol	AV_CH_LAYOUT_6POINT1		7313672						
ANR	7314750	Symbol	CODEC_ID_MLP		7313672						
ANR	7314751	Symbol	* ch_assign		7313672						
ANR	7314752	Symbol	m -> avctx -> channels		7313672						
ANR	7314753	Symbol	s -> channel_params		7313672						
ANR	7314754	Symbol	start_count		7313672						
ANR	7314755	Symbol	max_matrix_channel		7313672						
ANR	7314756	Symbol	s -> max_matrix_channel		7313672						
ANR	7314757	Symbol	m -> avctx -> channel_layout		7313672						
ANR	7314758	Symbol	s -> max_channel		7313672						
ANR	7314759	Symbol	xor_32_to_8		7313672						
ANR	7314760	Symbol	MAX_MATRIX_CHANNEL_TRUEHD		7313672						
ANR	7314761	Symbol	CODEC_ID_TRUEHD		7313672						
ANR	7314762	Symbol	cp -> huff_offset		7313672						
ANR	7314763	Symbol	cp -> huff_lsbs		7313672						
ANR	7314764	Symbol	sync_word		7313672						
ANR	7314765	Symbol	s -> noise_shift		7313672						
ANR	7314766	Symbol	s -> param_presence_flags		7313672						
ANR	7314767	Symbol	checksum		7313672						
ANR	7314768	Symbol	s -> ch_assign		7313672						
ANR	7314769	Symbol	* * s		7313672						
ANR	7314770	Symbol	AV_CH_TOP_CENTER		7313672						
ANR	7314771	Symbol	AVERROR_PATCHWELCOME		7313672						
ANR	7314772	Symbol	AV_CH_TOP_FRONT_CENTER		7313672						
ANR	7314773	Symbol	* * cp		7313672						
ANR	7314774	Symbol	m -> substream		7313672						
ANR	7314775	Symbol	* * m		7313672						
ANR	7314776	Symbol	cp -> filter_params [ FIR ] . order		7313672						
ANR	7314777	Symbol	cp -> filter_params [ FIR ] . shift		7313672						
ANR	7314778	Symbol	* IIR		7313672						
ANR	7314779	Symbol	AV_LOG_ERROR		7313672						
ANR	7314780	Symbol	ch		7313672						
ANR	7314781	Symbol	i		7313672						
ANR	7314782	Symbol	cp -> filter_params [ IIR ] . order		7313672						
ANR	7314783	Symbol	m -> max_decoded_substream		7313672						
ANR	7314784	Symbol	m		7313672						
ANR	7314785	Symbol	cp		7313672						
ANR	7314786	Symbol	int		7313672						
ANR	7314787	Symbol	FIR		7313672						
ANR	7314788	Symbol	AV_CH_LAYOUT_QUAD		7313672						
ANR	7314789	Symbol	s -> output_shift		7313672						
ANR	7314790	Symbol	buf		7313672						
ANR	7314791	Symbol	AV_CH_LAYOUT_7POINT1_WIDE		7313672						
ANR	7314792	Symbol	s		7313672						
ANR	7314793	Symbol	gbp		7313672						
ANR	7314794	Symbol	AV_CH_LAYOUT_5POINT1_BACK		7313672						
ANR	7314795	Symbol	* m		7313672						
ANR	7314796	Symbol	ch_assign		7313672						
ANR	7314797	Symbol	cp -> filter_params		7313672						
ANR	7314798	Symbol	cp -> filter_params [ IIR ] . shift		7313672						
ANR	7314799	Symbol	AVERROR_INVALIDDATA		7313672						
ANR	7314800	Symbol	m -> needs_reordering		7313672						
ANR	7314801	Symbol	s -> data_check_present		7313672						
ANR	7314802	Symbol	AV_LOG_WARNING		7313672						
ANR	7314803	Symbol	* s		7313672						
ANR	7314804	Symbol	AV_CH_LOW_FREQUENCY		7313672						
ANR	7314805	Symbol	lossless_check		7313672						
