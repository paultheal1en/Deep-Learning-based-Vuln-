command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8018895	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sun4c_hw_init_0.c								
ANR	8018896	Function	sun4c_hw_init	1:0:0:6008							
ANR	8018897	FunctionDef	"sun4c_hw_init (const struct sun4c_hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model)"		8018896	0					
ANR	8018898	CompoundStatement		11:0:341:6008	8018896	0					
ANR	8018899	IdentifierDeclStatement	CPUState * env ;	13:4:348:361	8018896	0	True				
ANR	8018900	IdentifierDecl	* env		8018896	0					
ANR	8018901	IdentifierDeclType	CPUState *		8018896	0					
ANR	8018902	Identifier	env		8018896	1					
ANR	8018903	IdentifierDeclStatement	unsigned int i ;	15:4:368:382	8018896	1	True				
ANR	8018904	IdentifierDecl	i		8018896	0					
ANR	8018905	IdentifierDeclType	unsigned int		8018896	0					
ANR	8018906	Identifier	i		8018896	1					
ANR	8018907	IdentifierDeclStatement	"void * iommu , * espdma , * ledma , * main_esp , * nvram ;"	17:4:389:436	8018896	2	True				
ANR	8018908	IdentifierDecl	* iommu		8018896	0					
ANR	8018909	IdentifierDeclType	void *		8018896	0					
ANR	8018910	Identifier	iommu		8018896	1					
ANR	8018911	IdentifierDecl	* espdma		8018896	1					
ANR	8018912	IdentifierDeclType	void *		8018896	0					
ANR	8018913	Identifier	espdma		8018896	1					
ANR	8018914	IdentifierDecl	* ledma		8018896	2					
ANR	8018915	IdentifierDeclType	void *		8018896	0					
ANR	8018916	Identifier	ledma		8018896	1					
ANR	8018917	IdentifierDecl	* main_esp		8018896	3					
ANR	8018918	IdentifierDeclType	void *		8018896	0					
ANR	8018919	Identifier	main_esp		8018896	1					
ANR	8018920	IdentifierDecl	* nvram		8018896	4					
ANR	8018921	IdentifierDeclType	void *		8018896	0					
ANR	8018922	Identifier	nvram		8018896	1					
ANR	8018923	IdentifierDeclStatement	"qemu_irq * cpu_irqs , * slavio_irq , * espdma_irq , * ledma_irq ;"	19:4:443:499	8018896	3	True				
ANR	8018924	IdentifierDecl	* cpu_irqs		8018896	0					
ANR	8018925	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018926	Identifier	cpu_irqs		8018896	1					
ANR	8018927	IdentifierDecl	* slavio_irq		8018896	1					
ANR	8018928	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018929	Identifier	slavio_irq		8018896	1					
ANR	8018930	IdentifierDecl	* espdma_irq		8018896	2					
ANR	8018931	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018932	Identifier	espdma_irq		8018896	1					
ANR	8018933	IdentifierDecl	* ledma_irq		8018896	3					
ANR	8018934	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018935	Identifier	ledma_irq		8018896	1					
ANR	8018936	IdentifierDeclStatement	"qemu_irq * esp_reset , * le_reset ;"	21:4:506:536	8018896	4	True				
ANR	8018937	IdentifierDecl	* esp_reset		8018896	0					
ANR	8018938	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018939	Identifier	esp_reset		8018896	1					
ANR	8018940	IdentifierDecl	* le_reset		8018896	1					
ANR	8018941	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018942	Identifier	le_reset		8018896	1					
ANR	8018943	IdentifierDeclStatement	qemu_irq * fdc_tc ;	23:4:543:559	8018896	5	True				
ANR	8018944	IdentifierDecl	* fdc_tc		8018896	0					
ANR	8018945	IdentifierDeclType	qemu_irq *		8018896	0					
ANR	8018946	Identifier	fdc_tc		8018896	1					
ANR	8018947	IdentifierDeclStatement	"ram_addr_t ram_offset , prom_offset , tcx_offset ;"	25:4:566:612	8018896	6	True				
ANR	8018948	IdentifierDecl	ram_offset		8018896	0					
ANR	8018949	IdentifierDeclType	ram_addr_t		8018896	0					
ANR	8018950	Identifier	ram_offset		8018896	1					
ANR	8018951	IdentifierDecl	prom_offset		8018896	1					
ANR	8018952	IdentifierDeclType	ram_addr_t		8018896	0					
ANR	8018953	Identifier	prom_offset		8018896	1					
ANR	8018954	IdentifierDecl	tcx_offset		8018896	2					
ANR	8018955	IdentifierDeclType	ram_addr_t		8018896	0					
ANR	8018956	Identifier	tcx_offset		8018896	1					
ANR	8018957	IdentifierDeclStatement	unsigned long kernel_size ;	27:4:619:644	8018896	7	True				
ANR	8018958	IdentifierDecl	kernel_size		8018896	0					
ANR	8018959	IdentifierDeclType	unsigned long		8018896	0					
ANR	8018960	Identifier	kernel_size		8018896	1					
ANR	8018961	IdentifierDeclStatement	int ret ;	29:4:651:658	8018896	8	True				
ANR	8018962	IdentifierDecl	ret		8018896	0					
ANR	8018963	IdentifierDeclType	int		8018896	0					
ANR	8018964	Identifier	ret		8018896	1					
ANR	8018965	IdentifierDeclStatement	char buf [ 1024 ] ;	31:4:665:679	8018896	9	True				
ANR	8018966	IdentifierDecl	buf [ 1024 ]		8018896	0					
ANR	8018967	IdentifierDeclType	char [ 1024 ]		8018896	0					
ANR	8018968	Identifier	buf		8018896	1					
ANR	8018969	PrimaryExpression	1024		8018896	2					
ANR	8018970	IdentifierDeclStatement	BlockDriverState * fd [ MAX_FD ] ;	33:4:686:714	8018896	10	True				
ANR	8018971	IdentifierDecl	* fd [ MAX_FD ]		8018896	0					
ANR	8018972	IdentifierDeclType	BlockDriverState * [ MAX_FD ]		8018896	0					
ANR	8018973	Identifier	fd		8018896	1					
ANR	8018974	Identifier	MAX_FD		8018896	2					
ANR	8018975	IdentifierDeclStatement	int drive_index ;	35:4:721:736	8018896	11	True				
ANR	8018976	IdentifierDecl	drive_index		8018896	0					
ANR	8018977	IdentifierDeclType	int		8018896	0					
ANR	8018978	Identifier	drive_index		8018896	1					
ANR	8018979	IdentifierDeclStatement	void * fw_cfg ;	37:4:743:755	8018896	12	True				
ANR	8018980	IdentifierDecl	* fw_cfg		8018896	0					
ANR	8018981	IdentifierDeclType	void *		8018896	0					
ANR	8018982	Identifier	fw_cfg		8018896	1					
ANR	8018983	IfStatement	if ( ! cpu_model )		8018896	13					
ANR	8018984	Condition	! cpu_model	43:8:788:797	8018896	0	True				
ANR	8018985	UnaryOperationExpression	! cpu_model		8018896	0					
ANR	8018986	UnaryOperator	!		8018896	0					
ANR	8018987	Identifier	cpu_model		8018896	1					
ANR	8018988	ExpressionStatement	cpu_model = hwdef -> default_cpu_model	45:8:809:845	8018896	1	True				
ANR	8018989	AssignmentExpression	cpu_model = hwdef -> default_cpu_model		8018896	0		=			
ANR	8018990	Identifier	cpu_model		8018896	0					
ANR	8018991	PtrMemberAccess	hwdef -> default_cpu_model		8018896	1					
ANR	8018992	Identifier	hwdef		8018896	0					
ANR	8018993	Identifier	default_cpu_model		8018896	1					
ANR	8018994	ExpressionStatement	env = cpu_init ( cpu_model )	49:4:854:879	8018896	14	True				
ANR	8018995	AssignmentExpression	env = cpu_init ( cpu_model )		8018896	0		=			
ANR	8018996	Identifier	env		8018896	0					
ANR	8018997	CallExpression	cpu_init ( cpu_model )		8018896	1					
ANR	8018998	Callee	cpu_init		8018896	0					
ANR	8018999	Identifier	cpu_init		8018896	0					
ANR	8019000	ArgumentList	cpu_model		8018896	1					
ANR	8019001	Argument	cpu_model		8018896	0					
ANR	8019002	Identifier	cpu_model		8018896	0					
ANR	8019003	IfStatement	if ( ! env )		8018896	15					
ANR	8019004	Condition	! env	51:8:890:893	8018896	0	True				
ANR	8019005	UnaryOperationExpression	! env		8018896	0					
ANR	8019006	UnaryOperator	!		8018896	0					
ANR	8019007	Identifier	env		8018896	1					
ANR	8019008	CompoundStatement		41:14:554:554	8018896	1					
ANR	8019009	ExpressionStatement	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"	53:8:907:969	8018896	0	True				
ANR	8019010	CallExpression	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"		8018896	0					
ANR	8019011	Callee	fprintf		8018896	0					
ANR	8019012	Identifier	fprintf		8018896	0					
ANR	8019013	ArgumentList	stderr		8018896	1					
ANR	8019014	Argument	stderr		8018896	0					
ANR	8019015	Identifier	stderr		8018896	0					
ANR	8019016	Argument	"""qemu: Unable to find Sparc CPU definition\\n"""		8018896	1					
ANR	8019017	PrimaryExpression	"""qemu: Unable to find Sparc CPU definition\\n"""		8018896	0					
ANR	8019018	ExpressionStatement	exit ( 1 )	55:8:980:987	8018896	1	True				
ANR	8019019	CallExpression	exit ( 1 )		8018896	0					
ANR	8019020	Callee	exit		8018896	0					
ANR	8019021	Identifier	exit		8018896	0					
ANR	8019022	ArgumentList	1		8018896	1					
ANR	8019023	Argument	1		8018896	0					
ANR	8019024	PrimaryExpression	1		8018896	0					
ANR	8019025	ExpressionStatement	"cpu_sparc_set_id ( env , 0 )"	61:4:1003:1027	8018896	16	True				
ANR	8019026	CallExpression	"cpu_sparc_set_id ( env , 0 )"		8018896	0					
ANR	8019027	Callee	cpu_sparc_set_id		8018896	0					
ANR	8019028	Identifier	cpu_sparc_set_id		8018896	0					
ANR	8019029	ArgumentList	env		8018896	1					
ANR	8019030	Argument	env		8018896	0					
ANR	8019031	Identifier	env		8018896	0					
ANR	8019032	Argument	0		8018896	1					
ANR	8019033	PrimaryExpression	0		8018896	0					
ANR	8019034	ExpressionStatement	"qemu_register_reset ( main_cpu_reset , env )"	65:4:1036:1076	8018896	17	True				
ANR	8019035	CallExpression	"qemu_register_reset ( main_cpu_reset , env )"		8018896	0					
ANR	8019036	Callee	qemu_register_reset		8018896	0					
ANR	8019037	Identifier	qemu_register_reset		8018896	0					
ANR	8019038	ArgumentList	main_cpu_reset		8018896	1					
ANR	8019039	Argument	main_cpu_reset		8018896	0					
ANR	8019040	Identifier	main_cpu_reset		8018896	0					
ANR	8019041	Argument	env		8018896	1					
ANR	8019042	Identifier	env		8018896	0					
ANR	8019043	ExpressionStatement	"cpu_irqs = qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"	67:4:1083:1140	8018896	18	True				
ANR	8019044	AssignmentExpression	"cpu_irqs = qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"		8018896	0		=			
ANR	8019045	Identifier	cpu_irqs		8018896	0					
ANR	8019046	CallExpression	"qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"		8018896	1					
ANR	8019047	Callee	qemu_allocate_irqs		8018896	0					
ANR	8019048	Identifier	qemu_allocate_irqs		8018896	0					
ANR	8019049	ArgumentList	cpu_set_irq		8018896	1					
ANR	8019050	Argument	cpu_set_irq		8018896	0					
ANR	8019051	Identifier	cpu_set_irq		8018896	0					
ANR	8019052	Argument	env		8018896	1					
ANR	8019053	Identifier	env		8018896	0					
ANR	8019054	Argument	MAX_PILS		8018896	2					
ANR	8019055	Identifier	MAX_PILS		8018896	0					
ANR	8019056	ExpressionStatement	env -> prom_addr = hwdef -> slavio_base	69:4:1147:1182	8018896	19	True				
ANR	8019057	AssignmentExpression	env -> prom_addr = hwdef -> slavio_base		8018896	0		=			
ANR	8019058	PtrMemberAccess	env -> prom_addr		8018896	0					
ANR	8019059	Identifier	env		8018896	0					
ANR	8019060	Identifier	prom_addr		8018896	1					
ANR	8019061	PtrMemberAccess	hwdef -> slavio_base		8018896	1					
ANR	8019062	Identifier	hwdef		8018896	0					
ANR	8019063	Identifier	slavio_base		8018896	1					
ANR	8019064	IfStatement	if ( ( uint64_t ) RAM_size > hwdef -> max_mem )		8018896	20					
ANR	8019065	Condition	( uint64_t ) RAM_size > hwdef -> max_mem	75:8:1219:1253	8018896	0	True				
ANR	8019066	RelationalExpression	( uint64_t ) RAM_size > hwdef -> max_mem		8018896	0		>			
ANR	8019067	CastExpression	( uint64_t ) RAM_size		8018896	0					
ANR	8019068	CastTarget	uint64_t		8018896	0					
ANR	8019069	Identifier	RAM_size		8018896	1					
ANR	8019070	PtrMemberAccess	hwdef -> max_mem		8018896	1					
ANR	8019071	Identifier	hwdef		8018896	0					
ANR	8019072	Identifier	max_mem		8018896	1					
ANR	8019073	CompoundStatement		65:45:914:914	8018896	1					
ANR	8019074	ExpressionStatement	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"	77:8:1267:1483	8018896	0	True				
ANR	8019075	CallExpression	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"		8018896	0					
ANR	8019076	Callee	fprintf		8018896	0					
ANR	8019077	Identifier	fprintf		8018896	0					
ANR	8019078	ArgumentList	stderr		8018896	1					
ANR	8019079	Argument	stderr		8018896	0					
ANR	8019080	Identifier	stderr		8018896	0					
ANR	8019081	Argument	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8018896	1					
ANR	8019082	PrimaryExpression	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8018896	0					
ANR	8019083	Argument	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8018896	2					
ANR	8019084	CastExpression	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8018896	0					
ANR	8019085	CastTarget	unsigned int		8018896	0					
ANR	8019086	MultiplicativeExpression	RAM_size / ( 1024 * 1024 )		8018896	1		/			
ANR	8019087	Identifier	RAM_size		8018896	0					
ANR	8019088	MultiplicativeExpression	1024 * 1024		8018896	1		*			
ANR	8019089	PrimaryExpression	1024		8018896	0					
ANR	8019090	PrimaryExpression	1024		8018896	1					
ANR	8019091	Argument	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8018896	3					
ANR	8019092	CastExpression	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8018896	0					
ANR	8019093	CastTarget	unsigned int		8018896	0					
ANR	8019094	MultiplicativeExpression	hwdef -> max_mem / ( 1024 * 1024 )		8018896	1		/			
ANR	8019095	PtrMemberAccess	hwdef -> max_mem		8018896	0					
ANR	8019096	Identifier	hwdef		8018896	0					
ANR	8019097	Identifier	max_mem		8018896	1					
ANR	8019098	MultiplicativeExpression	1024 * 1024		8018896	1		*			
ANR	8019099	PrimaryExpression	1024		8018896	0					
ANR	8019100	PrimaryExpression	1024		8018896	1					
ANR	8019101	ExpressionStatement	exit ( 1 )	85:8:1494:1501	8018896	1	True				
ANR	8019102	CallExpression	exit ( 1 )		8018896	0					
ANR	8019103	Callee	exit		8018896	0					
ANR	8019104	Identifier	exit		8018896	0					
ANR	8019105	ArgumentList	1		8018896	1					
ANR	8019106	Argument	1		8018896	0					
ANR	8019107	PrimaryExpression	1		8018896	0					
ANR	8019108	ExpressionStatement	ram_offset = qemu_ram_alloc ( RAM_size )	89:4:1515:1552	8018896	21	True				
ANR	8019109	AssignmentExpression	ram_offset = qemu_ram_alloc ( RAM_size )		8018896	0		=			
ANR	8019110	Identifier	ram_offset		8018896	0					
ANR	8019111	CallExpression	qemu_ram_alloc ( RAM_size )		8018896	1					
ANR	8019112	Callee	qemu_ram_alloc		8018896	0					
ANR	8019113	Identifier	qemu_ram_alloc		8018896	0					
ANR	8019114	ArgumentList	RAM_size		8018896	1					
ANR	8019115	Argument	RAM_size		8018896	0					
ANR	8019116	Identifier	RAM_size		8018896	0					
ANR	8019117	ExpressionStatement	"cpu_register_physical_memory ( 0 , RAM_size , ram_offset )"	91:4:1559:1612	8018896	22	True				
ANR	8019118	CallExpression	"cpu_register_physical_memory ( 0 , RAM_size , ram_offset )"		8018896	0					
ANR	8019119	Callee	cpu_register_physical_memory		8018896	0					
ANR	8019120	Identifier	cpu_register_physical_memory		8018896	0					
ANR	8019121	ArgumentList	0		8018896	1					
ANR	8019122	Argument	0		8018896	0					
ANR	8019123	PrimaryExpression	0		8018896	0					
ANR	8019124	Argument	RAM_size		8018896	1					
ANR	8019125	Identifier	RAM_size		8018896	0					
ANR	8019126	Argument	ram_offset		8018896	2					
ANR	8019127	Identifier	ram_offset		8018896	0					
ANR	8019128	ExpressionStatement	prom_offset = qemu_ram_alloc ( PROM_SIZE_MAX )	97:4:1647:1690	8018896	23	True				
ANR	8019129	AssignmentExpression	prom_offset = qemu_ram_alloc ( PROM_SIZE_MAX )		8018896	0		=			
ANR	8019130	Identifier	prom_offset		8018896	0					
ANR	8019131	CallExpression	qemu_ram_alloc ( PROM_SIZE_MAX )		8018896	1					
ANR	8019132	Callee	qemu_ram_alloc		8018896	0					
ANR	8019133	Identifier	qemu_ram_alloc		8018896	0					
ANR	8019134	ArgumentList	PROM_SIZE_MAX		8018896	1					
ANR	8019135	Argument	PROM_SIZE_MAX		8018896	0					
ANR	8019136	Identifier	PROM_SIZE_MAX		8018896	0					
ANR	8019137	ExpressionStatement	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"	99:4:1697:1932	8018896	24	True				
ANR	8019138	CallExpression	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"		8018896	0					
ANR	8019139	Callee	cpu_register_physical_memory		8018896	0					
ANR	8019140	Identifier	cpu_register_physical_memory		8018896	0					
ANR	8019141	ArgumentList	hwdef -> slavio_base		8018896	1					
ANR	8019142	Argument	hwdef -> slavio_base		8018896	0					
ANR	8019143	PtrMemberAccess	hwdef -> slavio_base		8018896	0					
ANR	8019144	Identifier	hwdef		8018896	0					
ANR	8019145	Identifier	slavio_base		8018896	1					
ANR	8019146	Argument	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8018896	1					
ANR	8019147	BitAndExpression	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8018896	0		&			
ANR	8019148	AdditiveExpression	PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1		8018896	0		+			
ANR	8019149	Identifier	PROM_SIZE_MAX		8018896	0					
ANR	8019150	AdditiveExpression	TARGET_PAGE_SIZE - 1		8018896	1		-			
ANR	8019151	Identifier	TARGET_PAGE_SIZE		8018896	0					
ANR	8019152	PrimaryExpression	1		8018896	1					
ANR	8019153	Identifier	TARGET_PAGE_MASK		8018896	1					
ANR	8019154	Argument	prom_offset | IO_MEM_ROM		8018896	2					
ANR	8019155	InclusiveOrExpression	prom_offset | IO_MEM_ROM		8018896	0		|			
ANR	8019156	Identifier	prom_offset		8018896	0					
ANR	8019157	Identifier	IO_MEM_ROM		8018896	1					
ANR	8019158	IfStatement	if ( bios_name == NULL )		8018896	25					
ANR	8019159	Condition	bios_name == NULL	109:8:1945:1961	8018896	0	True				
ANR	8019160	EqualityExpression	bios_name == NULL		8018896	0		==			
ANR	8019161	Identifier	bios_name		8018896	0					
ANR	8019162	Identifier	NULL		8018896	1					
ANR	8019163	ExpressionStatement	bios_name = PROM_FILENAME	111:8:1973:1998	8018896	1	True				
ANR	8019164	AssignmentExpression	bios_name = PROM_FILENAME		8018896	0		=			
ANR	8019165	Identifier	bios_name		8018896	0					
ANR	8019166	Identifier	PROM_FILENAME		8018896	1					
ANR	8019167	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"	113:4:2005:2061	8018896	26	True				
ANR	8019168	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"		8018896	0					
ANR	8019169	Callee	snprintf		8018896	0					
ANR	8019170	Identifier	snprintf		8018896	0					
ANR	8019171	ArgumentList	buf		8018896	1					
ANR	8019172	Argument	buf		8018896	0					
ANR	8019173	Identifier	buf		8018896	0					
ANR	8019174	Argument	sizeof ( buf )		8018896	1					
ANR	8019175	SizeofExpression	sizeof ( buf )		8018896	0					
ANR	8019176	Sizeof	sizeof		8018896	0					
ANR	8019177	SizeofOperand	buf		8018896	1					
ANR	8019178	Argument	"""%s/%s"""		8018896	2					
ANR	8019179	PrimaryExpression	"""%s/%s"""		8018896	0					
ANR	8019180	Argument	bios_dir		8018896	3					
ANR	8019181	Identifier	bios_dir		8018896	0					
ANR	8019182	Argument	bios_name		8018896	4					
ANR	8019183	Identifier	bios_name		8018896	0					
ANR	8019184	ExpressionStatement	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"	115:4:2068:2138	8018896	27	True				
ANR	8019185	AssignmentExpression	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8018896	0		=			
ANR	8019186	Identifier	ret		8018896	0					
ANR	8019187	CallExpression	"load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8018896	1					
ANR	8019188	Callee	load_elf		8018896	0					
ANR	8019189	Identifier	load_elf		8018896	0					
ANR	8019190	ArgumentList	buf		8018896	1					
ANR	8019191	Argument	buf		8018896	0					
ANR	8019192	Identifier	buf		8018896	0					
ANR	8019193	Argument	hwdef -> slavio_base - PROM_VADDR		8018896	1					
ANR	8019194	AdditiveExpression	hwdef -> slavio_base - PROM_VADDR		8018896	0		-			
ANR	8019195	PtrMemberAccess	hwdef -> slavio_base		8018896	0					
ANR	8019196	Identifier	hwdef		8018896	0					
ANR	8019197	Identifier	slavio_base		8018896	1					
ANR	8019198	Identifier	PROM_VADDR		8018896	1					
ANR	8019199	Argument	NULL		8018896	2					
ANR	8019200	Identifier	NULL		8018896	0					
ANR	8019201	Argument	NULL		8018896	3					
ANR	8019202	Identifier	NULL		8018896	0					
ANR	8019203	Argument	NULL		8018896	4					
ANR	8019204	Identifier	NULL		8018896	0					
ANR	8019205	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8018896	28					
ANR	8019206	Condition	ret < 0 || ret > PROM_SIZE_MAX	117:8:2149:2178	8018896	0	True				
ANR	8019207	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8018896	0		||			
ANR	8019208	RelationalExpression	ret < 0		8018896	0		<			
ANR	8019209	Identifier	ret		8018896	0					
ANR	8019210	PrimaryExpression	0		8018896	1					
ANR	8019211	RelationalExpression	ret > PROM_SIZE_MAX		8018896	1		>			
ANR	8019212	Identifier	ret		8018896	0					
ANR	8019213	Identifier	PROM_SIZE_MAX		8018896	1					
ANR	8019214	ExpressionStatement	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"	119:8:2190:2255	8018896	1	True				
ANR	8019215	AssignmentExpression	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8018896	0		=			
ANR	8019216	Identifier	ret		8018896	0					
ANR	8019217	CallExpression	"load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8018896	1					
ANR	8019218	Callee	load_image_targphys		8018896	0					
ANR	8019219	Identifier	load_image_targphys		8018896	0					
ANR	8019220	ArgumentList	buf		8018896	1					
ANR	8019221	Argument	buf		8018896	0					
ANR	8019222	Identifier	buf		8018896	0					
ANR	8019223	Argument	hwdef -> slavio_base		8018896	1					
ANR	8019224	PtrMemberAccess	hwdef -> slavio_base		8018896	0					
ANR	8019225	Identifier	hwdef		8018896	0					
ANR	8019226	Identifier	slavio_base		8018896	1					
ANR	8019227	Argument	PROM_SIZE_MAX		8018896	2					
ANR	8019228	Identifier	PROM_SIZE_MAX		8018896	0					
ANR	8019229	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8018896	29					
ANR	8019230	Condition	ret < 0 || ret > PROM_SIZE_MAX	121:8:2266:2295	8018896	0	True				
ANR	8019231	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8018896	0		||			
ANR	8019232	RelationalExpression	ret < 0		8018896	0		<			
ANR	8019233	Identifier	ret		8018896	0					
ANR	8019234	PrimaryExpression	0		8018896	1					
ANR	8019235	RelationalExpression	ret > PROM_SIZE_MAX		8018896	1		>			
ANR	8019236	Identifier	ret		8018896	0					
ANR	8019237	Identifier	PROM_SIZE_MAX		8018896	1					
ANR	8019238	CompoundStatement		111:40:1956:1956	8018896	1					
ANR	8019239	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"	123:8:2309:2382	8018896	0	True				
ANR	8019240	CallExpression	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"		8018896	0					
ANR	8019241	Callee	fprintf		8018896	0					
ANR	8019242	Identifier	fprintf		8018896	0					
ANR	8019243	ArgumentList	stderr		8018896	1					
ANR	8019244	Argument	stderr		8018896	0					
ANR	8019245	Identifier	stderr		8018896	0					
ANR	8019246	Argument	"""qemu: could not load prom '%s'\\n"""		8018896	1					
ANR	8019247	PrimaryExpression	"""qemu: could not load prom '%s'\\n"""		8018896	0					
ANR	8019248	Argument	buf		8018896	2					
ANR	8019249	Identifier	buf		8018896	0					
ANR	8019250	ExpressionStatement	exit ( 1 )	127:8:2393:2400	8018896	1	True				
ANR	8019251	CallExpression	exit ( 1 )		8018896	0					
ANR	8019252	Callee	exit		8018896	0					
ANR	8019253	Identifier	exit		8018896	0					
ANR	8019254	ArgumentList	1		8018896	1					
ANR	8019255	Argument	1		8018896	0					
ANR	8019256	PrimaryExpression	1		8018896	0					
ANR	8019257	ExpressionStatement	"slavio_intctl = sun4c_intctl_init ( hwdef -> intctl_base , & slavio_irq , cpu_irqs )"	135:4:2442:2557	8018896	30	True				
ANR	8019258	AssignmentExpression	"slavio_intctl = sun4c_intctl_init ( hwdef -> intctl_base , & slavio_irq , cpu_irqs )"		8018896	0		=			
ANR	8019259	Identifier	slavio_intctl		8018896	0					
ANR	8019260	CallExpression	"sun4c_intctl_init ( hwdef -> intctl_base , & slavio_irq , cpu_irqs )"		8018896	1					
ANR	8019261	Callee	sun4c_intctl_init		8018896	0					
ANR	8019262	Identifier	sun4c_intctl_init		8018896	0					
ANR	8019263	ArgumentList	hwdef -> intctl_base		8018896	1					
ANR	8019264	Argument	hwdef -> intctl_base		8018896	0					
ANR	8019265	PtrMemberAccess	hwdef -> intctl_base		8018896	0					
ANR	8019266	Identifier	hwdef		8018896	0					
ANR	8019267	Identifier	intctl_base		8018896	1					
ANR	8019268	Argument	& slavio_irq		8018896	1					
ANR	8019269	UnaryOperationExpression	& slavio_irq		8018896	0					
ANR	8019270	UnaryOperator	&		8018896	0					
ANR	8019271	Identifier	slavio_irq		8018896	1					
ANR	8019272	Argument	cpu_irqs		8018896	2					
ANR	8019273	Identifier	cpu_irqs		8018896	0					
ANR	8019274	ExpressionStatement	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"	141:4:2566:2676	8018896	31	True				
ANR	8019275	AssignmentExpression	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8018896	0		=			
ANR	8019276	Identifier	iommu		8018896	0					
ANR	8019277	CallExpression	"iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8018896	1					
ANR	8019278	Callee	iommu_init		8018896	0					
ANR	8019279	Identifier	iommu_init		8018896	0					
ANR	8019280	ArgumentList	hwdef -> iommu_base		8018896	1					
ANR	8019281	Argument	hwdef -> iommu_base		8018896	0					
ANR	8019282	PtrMemberAccess	hwdef -> iommu_base		8018896	0					
ANR	8019283	Identifier	hwdef		8018896	0					
ANR	8019284	Identifier	iommu_base		8018896	1					
ANR	8019285	Argument	hwdef -> iommu_version		8018896	1					
ANR	8019286	PtrMemberAccess	hwdef -> iommu_version		8018896	0					
ANR	8019287	Identifier	hwdef		8018896	0					
ANR	8019288	Identifier	iommu_version		8018896	1					
ANR	8019289	Argument	slavio_irq [ hwdef -> me_irq ]		8018896	2					
ANR	8019290	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8018896	0					
ANR	8019291	Identifier	slavio_irq		8018896	0					
ANR	8019292	PtrMemberAccess	hwdef -> me_irq		8018896	1					
ANR	8019293	Identifier	hwdef		8018896	0					
ANR	8019294	Identifier	me_irq		8018896	1					
ANR	8019295	ExpressionStatement	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"	147:4:2685:2818	8018896	32	True				
ANR	8019296	AssignmentExpression	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8018896	0		=			
ANR	8019297	Identifier	espdma		8018896	0					
ANR	8019298	CallExpression	"sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8018896	1					
ANR	8019299	Callee	sparc32_dma_init		8018896	0					
ANR	8019300	Identifier	sparc32_dma_init		8018896	0					
ANR	8019301	ArgumentList	hwdef -> dma_base		8018896	1					
ANR	8019302	Argument	hwdef -> dma_base		8018896	0					
ANR	8019303	PtrMemberAccess	hwdef -> dma_base		8018896	0					
ANR	8019304	Identifier	hwdef		8018896	0					
ANR	8019305	Identifier	dma_base		8018896	1					
ANR	8019306	Argument	slavio_irq [ hwdef -> esp_irq ]		8018896	1					
ANR	8019307	ArrayIndexing	slavio_irq [ hwdef -> esp_irq ]		8018896	0					
ANR	8019308	Identifier	slavio_irq		8018896	0					
ANR	8019309	PtrMemberAccess	hwdef -> esp_irq		8018896	1					
ANR	8019310	Identifier	hwdef		8018896	0					
ANR	8019311	Identifier	esp_irq		8018896	1					
ANR	8019312	Argument	iommu		8018896	2					
ANR	8019313	Identifier	iommu		8018896	0					
ANR	8019314	Argument	& espdma_irq		8018896	3					
ANR	8019315	UnaryOperationExpression	& espdma_irq		8018896	0					
ANR	8019316	UnaryOperator	&		8018896	0					
ANR	8019317	Identifier	espdma_irq		8018896	1					
ANR	8019318	Argument	& esp_reset		8018896	4					
ANR	8019319	UnaryOperationExpression	& esp_reset		8018896	0					
ANR	8019320	UnaryOperator	&		8018896	0					
ANR	8019321	Identifier	esp_reset		8018896	1					
ANR	8019322	Statement	ledma	153:4:2827:2831	8018896	33	True				
ANR	8019323	Statement	=	153:10:2833:2833	8018896	34	True				
ANR	8019324	Statement	sparc32_dma_init	153:12:2835:2850	8018896	35	True				
ANR	8019325	Statement	(	153:28:2851:2851	8018896	36	True				
ANR	8019326	Statement	hwdef	153:29:2852:2856	8018896	37	True				
ANR	8019327	Statement	->	153:34:2857:2858	8018896	38	True				
ANR	8019328	Statement	dma_base	153:36:2859:2866	8018896	39	True				
ANR	8019329	Statement	+	153:45:2868:2868	8018896	40	True				
ANR	8019330	Statement	16UL	153:47:2870:2873	8018896	41	True				
ANR	8019331	Statement	L	153:51:2874:2874	8018896	42	True				
ANR	8019332	Statement	","	153:52:2875:2875	8018896	43	True				
ANR	8019333	Statement	slavio_irq	155:29:2907:2916	8018896	44	True				
ANR	8019334	Statement	[	155:39:2917:2917	8018896	45	True				
ANR	8019335	Statement	hwdef	155:40:2918:2922	8018896	46	True				
ANR	8019336	Statement	->	155:45:2923:2924	8018896	47	True				
ANR	8019337	Statement	le_irq	155:47:2925:2930	8018896	48	True				
ANR	8019338	Statement	]	155:53:2931:2931	8018896	49	True				
ANR	8019339	Statement	","	155:54:2932:2932	8018896	50	True				
ANR	8019340	Statement	iommu	155:56:2934:2938	8018896	51	True				
ANR	8019341	Statement	","	155:61:2939:2939	8018896	52	True				
ANR	8019342	Statement	&	155:63:2941:2941	8018896	53	True				
ANR	8019343	Statement	ledma_irq	155:64:2942:2950	8018896	54	True				
ANR	8019344	Statement	","	155:73:2951:2951	8018896	55	True				
ANR	8019345	Statement	&	157:29:2983:2983	8018896	56	True				
ANR	8019346	Statement	le_reset	157:30:2984:2991	8018896	57	True				
ANR	8019347	Statement	)	157:38:2992:2992	8018896	58	True				
ANR	8019348	ExpressionStatement		157:39:2993:2993	8018896	59	True				
ANR	8019349	IfStatement	if ( graphic_depth != 8 && graphic_depth != 24 )		8018896	60					
ANR	8019350	Condition	graphic_depth != 8 && graphic_depth != 24	161:8:3006:3046	8018896	0	True				
ANR	8019351	AndExpression	graphic_depth != 8 && graphic_depth != 24		8018896	0		&&			
ANR	8019352	EqualityExpression	graphic_depth != 8		8018896	0		!=			
ANR	8019353	Identifier	graphic_depth		8018896	0					
ANR	8019354	PrimaryExpression	8		8018896	1					
ANR	8019355	EqualityExpression	graphic_depth != 24		8018896	1		!=			
ANR	8019356	Identifier	graphic_depth		8018896	0					
ANR	8019357	PrimaryExpression	24		8018896	1					
ANR	8019358	CompoundStatement		151:51:2707:2707	8018896	1					
ANR	8019359	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"	163:8:3060:3123	8018896	0	True				
ANR	8019360	CallExpression	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"		8018896	0					
ANR	8019361	Callee	fprintf		8018896	0					
ANR	8019362	Identifier	fprintf		8018896	0					
ANR	8019363	ArgumentList	stderr		8018896	1					
ANR	8019364	Argument	stderr		8018896	0					
ANR	8019365	Identifier	stderr		8018896	0					
ANR	8019366	Argument	"""qemu: Unsupported depth: %d\\n"""		8018896	1					
ANR	8019367	PrimaryExpression	"""qemu: Unsupported depth: %d\\n"""		8018896	0					
ANR	8019368	Argument	graphic_depth		8018896	2					
ANR	8019369	Identifier	graphic_depth		8018896	0					
ANR	8019370	ExpressionStatement	exit ( 1 )	165:8:3134:3142	8018896	1	True				
ANR	8019371	CallExpression	exit ( 1 )		8018896	0					
ANR	8019372	Callee	exit		8018896	0					
ANR	8019373	Identifier	exit		8018896	0					
ANR	8019374	ArgumentList	1		8018896	1					
ANR	8019375	Argument	1		8018896	0					
ANR	8019376	PrimaryExpression	1		8018896	0					
ANR	8019377	ExpressionStatement	tcx_offset = qemu_ram_alloc ( hwdef -> vram_size )	169:4:3156:3201	8018896	61	True				
ANR	8019378	AssignmentExpression	tcx_offset = qemu_ram_alloc ( hwdef -> vram_size )		8018896	0		=			
ANR	8019379	Identifier	tcx_offset		8018896	0					
ANR	8019380	CallExpression	qemu_ram_alloc ( hwdef -> vram_size )		8018896	1					
ANR	8019381	Callee	qemu_ram_alloc		8018896	0					
ANR	8019382	Identifier	qemu_ram_alloc		8018896	0					
ANR	8019383	ArgumentList	hwdef -> vram_size		8018896	1					
ANR	8019384	Argument	hwdef -> vram_size		8018896	0					
ANR	8019385	PtrMemberAccess	hwdef -> vram_size		8018896	0					
ANR	8019386	Identifier	hwdef		8018896	0					
ANR	8019387	Identifier	vram_size		8018896	1					
ANR	8019388	ExpressionStatement	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + tcx_offset , tcx_offset , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"	171:4:3208:3355	8018896	62	True				
ANR	8019389	CallExpression	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + tcx_offset , tcx_offset , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"		8018896	0					
ANR	8019390	Callee	tcx_init		8018896	0					
ANR	8019391	Identifier	tcx_init		8018896	0					
ANR	8019392	ArgumentList	ds		8018896	1					
ANR	8019393	Argument	ds		8018896	0					
ANR	8019394	Identifier	ds		8018896	0					
ANR	8019395	Argument	hwdef -> tcx_base		8018896	1					
ANR	8019396	PtrMemberAccess	hwdef -> tcx_base		8018896	0					
ANR	8019397	Identifier	hwdef		8018896	0					
ANR	8019398	Identifier	tcx_base		8018896	1					
ANR	8019399	Argument	phys_ram_base + tcx_offset		8018896	2					
ANR	8019400	AdditiveExpression	phys_ram_base + tcx_offset		8018896	0		+			
ANR	8019401	Identifier	phys_ram_base		8018896	0					
ANR	8019402	Identifier	tcx_offset		8018896	1					
ANR	8019403	Argument	tcx_offset		8018896	3					
ANR	8019404	Identifier	tcx_offset		8018896	0					
ANR	8019405	Argument	hwdef -> vram_size		8018896	4					
ANR	8019406	PtrMemberAccess	hwdef -> vram_size		8018896	0					
ANR	8019407	Identifier	hwdef		8018896	0					
ANR	8019408	Identifier	vram_size		8018896	1					
ANR	8019409	Argument	graphic_width		8018896	5					
ANR	8019410	Identifier	graphic_width		8018896	0					
ANR	8019411	Argument	graphic_height		8018896	6					
ANR	8019412	Identifier	graphic_height		8018896	0					
ANR	8019413	Argument	graphic_depth		8018896	7					
ANR	8019414	Identifier	graphic_depth		8018896	0					
ANR	8019415	IfStatement	if ( nd_table [ 0 ] . model == NULL )		8018896	63					
ANR	8019416	Condition	nd_table [ 0 ] . model == NULL	177:8:3368:3392	8018896	0	True				
ANR	8019417	EqualityExpression	nd_table [ 0 ] . model == NULL		8018896	0		==			
ANR	8019418	MemberAccess	nd_table [ 0 ] . model		8018896	0					
ANR	8019419	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019420	Identifier	nd_table		8018896	0					
ANR	8019421	PrimaryExpression	0		8018896	1					
ANR	8019422	Identifier	model		8018896	1					
ANR	8019423	Identifier	NULL		8018896	1					
ANR	8019424	ExpressionStatement	"nd_table [ 0 ] . model = ""lance"""	179:8:3404:3431	8018896	1	True				
ANR	8019425	AssignmentExpression	"nd_table [ 0 ] . model = ""lance"""		8018896	0		=			
ANR	8019426	MemberAccess	nd_table [ 0 ] . model		8018896	0					
ANR	8019427	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019428	Identifier	nd_table		8018896	0					
ANR	8019429	PrimaryExpression	0		8018896	1					
ANR	8019430	Identifier	model		8018896	1					
ANR	8019431	PrimaryExpression	"""lance"""		8018896	1					
ANR	8019432	IfStatement	"if ( strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0 )"		8018896	64					
ANR	8019433	Condition	"strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"	181:8:3442:3480	8018896	0	True				
ANR	8019434	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"		8018896	0		==			
ANR	8019435	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" )"		8018896	0					
ANR	8019436	Callee	strcmp		8018896	0					
ANR	8019437	Identifier	strcmp		8018896	0					
ANR	8019438	ArgumentList	nd_table [ 0 ] . model		8018896	1					
ANR	8019439	Argument	nd_table [ 0 ] . model		8018896	0					
ANR	8019440	MemberAccess	nd_table [ 0 ] . model		8018896	0					
ANR	8019441	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019442	Identifier	nd_table		8018896	0					
ANR	8019443	PrimaryExpression	0		8018896	1					
ANR	8019444	Identifier	model		8018896	1					
ANR	8019445	Argument	"""lance"""		8018896	1					
ANR	8019446	PrimaryExpression	"""lance"""		8018896	0					
ANR	8019447	PrimaryExpression	0		8018896	1					
ANR	8019448	CompoundStatement		171:49:3141:3141	8018896	1					
ANR	8019449	ExpressionStatement	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"	183:8:3494:3563	8018896	0	True				
ANR	8019450	CallExpression	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"		8018896	0					
ANR	8019451	Callee	lance_init		8018896	0					
ANR	8019452	Identifier	lance_init		8018896	0					
ANR	8019453	ArgumentList	& nd_table [ 0 ]		8018896	1					
ANR	8019454	Argument	& nd_table [ 0 ]		8018896	0					
ANR	8019455	UnaryOperationExpression	& nd_table [ 0 ]		8018896	0					
ANR	8019456	UnaryOperator	&		8018896	0					
ANR	8019457	ArrayIndexing	nd_table [ 0 ]		8018896	1					
ANR	8019458	Identifier	nd_table		8018896	0					
ANR	8019459	PrimaryExpression	0		8018896	1					
ANR	8019460	Argument	hwdef -> le_base		8018896	1					
ANR	8019461	PtrMemberAccess	hwdef -> le_base		8018896	0					
ANR	8019462	Identifier	hwdef		8018896	0					
ANR	8019463	Identifier	le_base		8018896	1					
ANR	8019464	Argument	ledma		8018896	2					
ANR	8019465	Identifier	ledma		8018896	0					
ANR	8019466	Argument	* ledma_irq		8018896	3					
ANR	8019467	UnaryOperationExpression	* ledma_irq		8018896	0					
ANR	8019468	UnaryOperator	*		8018896	0					
ANR	8019469	Identifier	ledma_irq		8018896	1					
ANR	8019470	Argument	le_reset		8018896	4					
ANR	8019471	Identifier	le_reset		8018896	0					
ANR	8019472	ElseStatement	else		8018896	0					
ANR	8019473	IfStatement	"if ( strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0 )"		8018896	0					
ANR	8019474	Condition	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"	185:15:3581:3615	8018896	0	True				
ANR	8019475	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"		8018896	0		==			
ANR	8019476	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" )"		8018896	0					
ANR	8019477	Callee	strcmp		8018896	0					
ANR	8019478	Identifier	strcmp		8018896	0					
ANR	8019479	ArgumentList	nd_table [ 0 ] . model		8018896	1					
ANR	8019480	Argument	nd_table [ 0 ] . model		8018896	0					
ANR	8019481	MemberAccess	nd_table [ 0 ] . model		8018896	0					
ANR	8019482	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019483	Identifier	nd_table		8018896	0					
ANR	8019484	PrimaryExpression	0		8018896	1					
ANR	8019485	Identifier	model		8018896	1					
ANR	8019486	Argument	"""?"""		8018896	1					
ANR	8019487	PrimaryExpression	"""?"""		8018896	0					
ANR	8019488	PrimaryExpression	0		8018896	1					
ANR	8019489	CompoundStatement		175:52:3276:3276	8018896	1					
ANR	8019490	ExpressionStatement	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"	187:8:3629:3677	8018896	0	True				
ANR	8019491	CallExpression	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"		8018896	0					
ANR	8019492	Callee	fprintf		8018896	0					
ANR	8019493	Identifier	fprintf		8018896	0					
ANR	8019494	ArgumentList	stderr		8018896	1					
ANR	8019495	Argument	stderr		8018896	0					
ANR	8019496	Identifier	stderr		8018896	0					
ANR	8019497	Argument	"""qemu: Supported NICs: lance\\n"""		8018896	1					
ANR	8019498	PrimaryExpression	"""qemu: Supported NICs: lance\\n"""		8018896	0					
ANR	8019499	ExpressionStatement	exit ( 1 )	189:8:3688:3696	8018896	1	True				
ANR	8019500	CallExpression	exit ( 1 )		8018896	0					
ANR	8019501	Callee	exit		8018896	0					
ANR	8019502	Identifier	exit		8018896	0					
ANR	8019503	ArgumentList	1		8018896	1					
ANR	8019504	Argument	1		8018896	0					
ANR	8019505	PrimaryExpression	1		8018896	0					
ANR	8019506	ElseStatement	else		8018896	0					
ANR	8019507	CompoundStatement		181:11:3368:3368	8018896	0					
ANR	8019508	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"	193:8:3721:3786	8018896	0	True				
ANR	8019509	CallExpression	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"		8018896	0					
ANR	8019510	Callee	fprintf		8018896	0					
ANR	8019511	Identifier	fprintf		8018896	0					
ANR	8019512	ArgumentList	stderr		8018896	1					
ANR	8019513	Argument	stderr		8018896	0					
ANR	8019514	Identifier	stderr		8018896	0					
ANR	8019515	Argument	"""qemu: Unsupported NIC: %s\\n"""		8018896	1					
ANR	8019516	PrimaryExpression	"""qemu: Unsupported NIC: %s\\n"""		8018896	0					
ANR	8019517	Argument	nd_table [ 0 ] . model		8018896	2					
ANR	8019518	MemberAccess	nd_table [ 0 ] . model		8018896	0					
ANR	8019519	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019520	Identifier	nd_table		8018896	0					
ANR	8019521	PrimaryExpression	0		8018896	1					
ANR	8019522	Identifier	model		8018896	1					
ANR	8019523	ExpressionStatement	exit ( 1 )	195:8:3797:3805	8018896	1	True				
ANR	8019524	CallExpression	exit ( 1 )		8018896	0					
ANR	8019525	Callee	exit		8018896	0					
ANR	8019526	Identifier	exit		8018896	0					
ANR	8019527	ArgumentList	1		8018896	1					
ANR	8019528	Argument	1		8018896	0					
ANR	8019529	PrimaryExpression	1		8018896	0					
ANR	8019530	ExpressionStatement	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"	201:4:3821:3924	8018896	65	True				
ANR	8019531	AssignmentExpression	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"		8018896	0		=			
ANR	8019532	Identifier	nvram		8018896	0					
ANR	8019533	CallExpression	"m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"		8018896	1					
ANR	8019534	Callee	m48t59_init		8018896	0					
ANR	8019535	Identifier	m48t59_init		8018896	0					
ANR	8019536	ArgumentList	slavio_irq [ 0 ]		8018896	1					
ANR	8019537	Argument	slavio_irq [ 0 ]		8018896	0					
ANR	8019538	ArrayIndexing	slavio_irq [ 0 ]		8018896	0					
ANR	8019539	Identifier	slavio_irq		8018896	0					
ANR	8019540	PrimaryExpression	0		8018896	1					
ANR	8019541	Argument	hwdef -> nvram_base		8018896	1					
ANR	8019542	PtrMemberAccess	hwdef -> nvram_base		8018896	0					
ANR	8019543	Identifier	hwdef		8018896	0					
ANR	8019544	Identifier	nvram_base		8018896	1					
ANR	8019545	Argument	0		8018896	2					
ANR	8019546	PrimaryExpression	0		8018896	0					
ANR	8019547	Argument	hwdef -> nvram_size		8018896	3					
ANR	8019548	PtrMemberAccess	hwdef -> nvram_size		8018896	0					
ANR	8019549	Identifier	hwdef		8018896	0					
ANR	8019550	Identifier	nvram_size		8018896	1					
ANR	8019551	Argument	2		8018896	4					
ANR	8019552	PrimaryExpression	2		8018896	0					
ANR	8019553	ExpressionStatement	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic , ESCC_CLOCK , 1 )"	207:4:3933:4064	8018896	66	True				
ANR	8019554	CallExpression	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic , ESCC_CLOCK , 1 )"		8018896	0					
ANR	8019555	Callee	slavio_serial_ms_kbd_init		8018896	0					
ANR	8019556	Identifier	slavio_serial_ms_kbd_init		8018896	0					
ANR	8019557	ArgumentList	hwdef -> ms_kb_base		8018896	1					
ANR	8019558	Argument	hwdef -> ms_kb_base		8018896	0					
ANR	8019559	PtrMemberAccess	hwdef -> ms_kb_base		8018896	0					
ANR	8019560	Identifier	hwdef		8018896	0					
ANR	8019561	Identifier	ms_kb_base		8018896	1					
ANR	8019562	Argument	slavio_irq [ hwdef -> ms_kb_irq ]		8018896	1					
ANR	8019563	ArrayIndexing	slavio_irq [ hwdef -> ms_kb_irq ]		8018896	0					
ANR	8019564	Identifier	slavio_irq		8018896	0					
ANR	8019565	PtrMemberAccess	hwdef -> ms_kb_irq		8018896	1					
ANR	8019566	Identifier	hwdef		8018896	0					
ANR	8019567	Identifier	ms_kb_irq		8018896	1					
ANR	8019568	Argument	nographic		8018896	2					
ANR	8019569	Identifier	nographic		8018896	0					
ANR	8019570	Argument	ESCC_CLOCK		8018896	3					
ANR	8019571	Identifier	ESCC_CLOCK		8018896	0					
ANR	8019572	Argument	1		8018896	4					
ANR	8019573	PrimaryExpression	1		8018896	0					
ANR	8019574	ExpressionStatement	"escc_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 0 ] , serial_hds [ 1 ] , ESCC_CLOCK , 1 )"	215:4:4220:4337	8018896	67	True				
ANR	8019575	CallExpression	"escc_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 0 ] , serial_hds [ 1 ] , ESCC_CLOCK , 1 )"		8018896	0					
ANR	8019576	Callee	escc_init		8018896	0					
ANR	8019577	Identifier	escc_init		8018896	0					
ANR	8019578	ArgumentList	hwdef -> serial_base		8018896	1					
ANR	8019579	Argument	hwdef -> serial_base		8018896	0					
ANR	8019580	PtrMemberAccess	hwdef -> serial_base		8018896	0					
ANR	8019581	Identifier	hwdef		8018896	0					
ANR	8019582	Identifier	serial_base		8018896	1					
ANR	8019583	Argument	slavio_irq [ hwdef -> ser_irq ]		8018896	1					
ANR	8019584	ArrayIndexing	slavio_irq [ hwdef -> ser_irq ]		8018896	0					
ANR	8019585	Identifier	slavio_irq		8018896	0					
ANR	8019586	PtrMemberAccess	hwdef -> ser_irq		8018896	1					
ANR	8019587	Identifier	hwdef		8018896	0					
ANR	8019588	Identifier	ser_irq		8018896	1					
ANR	8019589	Argument	serial_hds [ 0 ]		8018896	2					
ANR	8019590	ArrayIndexing	serial_hds [ 0 ]		8018896	0					
ANR	8019591	Identifier	serial_hds		8018896	0					
ANR	8019592	PrimaryExpression	0		8018896	1					
ANR	8019593	Argument	serial_hds [ 1 ]		8018896	3					
ANR	8019594	ArrayIndexing	serial_hds [ 1 ]		8018896	0					
ANR	8019595	Identifier	serial_hds		8018896	0					
ANR	8019596	PrimaryExpression	1		8018896	1					
ANR	8019597	Argument	ESCC_CLOCK		8018896	4					
ANR	8019598	Identifier	ESCC_CLOCK		8018896	0					
ANR	8019599	Argument	1		8018896	5					
ANR	8019600	PrimaryExpression	1		8018896	0					
ANR	8019601	ExpressionStatement	"slavio_misc = slavio_misc_init ( 0 , 0 , hwdef -> aux1_base , 0 , slavio_irq [ hwdef -> me_irq ] , NULL , & fdc_tc )"	221:4:4346:4481	8018896	68	True				
ANR	8019602	AssignmentExpression	"slavio_misc = slavio_misc_init ( 0 , 0 , hwdef -> aux1_base , 0 , slavio_irq [ hwdef -> me_irq ] , NULL , & fdc_tc )"		8018896	0		=			
ANR	8019603	Identifier	slavio_misc		8018896	0					
ANR	8019604	CallExpression	"slavio_misc_init ( 0 , 0 , hwdef -> aux1_base , 0 , slavio_irq [ hwdef -> me_irq ] , NULL , & fdc_tc )"		8018896	1					
ANR	8019605	Callee	slavio_misc_init		8018896	0					
ANR	8019606	Identifier	slavio_misc_init		8018896	0					
ANR	8019607	ArgumentList	0		8018896	1					
ANR	8019608	Argument	0		8018896	0					
ANR	8019609	PrimaryExpression	0		8018896	0					
ANR	8019610	Argument	0		8018896	1					
ANR	8019611	PrimaryExpression	0		8018896	0					
ANR	8019612	Argument	hwdef -> aux1_base		8018896	2					
ANR	8019613	PtrMemberAccess	hwdef -> aux1_base		8018896	0					
ANR	8019614	Identifier	hwdef		8018896	0					
ANR	8019615	Identifier	aux1_base		8018896	1					
ANR	8019616	Argument	0		8018896	3					
ANR	8019617	PrimaryExpression	0		8018896	0					
ANR	8019618	Argument	slavio_irq [ hwdef -> me_irq ]		8018896	4					
ANR	8019619	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8018896	0					
ANR	8019620	Identifier	slavio_irq		8018896	0					
ANR	8019621	PtrMemberAccess	hwdef -> me_irq		8018896	1					
ANR	8019622	Identifier	hwdef		8018896	0					
ANR	8019623	Identifier	me_irq		8018896	1					
ANR	8019624	Argument	NULL		8018896	5					
ANR	8019625	Identifier	NULL		8018896	0					
ANR	8019626	Argument	& fdc_tc		8018896	6					
ANR	8019627	UnaryOperationExpression	& fdc_tc		8018896	0					
ANR	8019628	UnaryOperator	&		8018896	0					
ANR	8019629	Identifier	fdc_tc		8018896	1					
ANR	8019630	IfStatement	if ( hwdef -> fd_base != ( target_phys_addr_t ) - 1 )		8018896	69					
ANR	8019631	Condition	hwdef -> fd_base != ( target_phys_addr_t ) - 1	227:8:4494:4533	8018896	0	True				
ANR	8019632	EqualityExpression	hwdef -> fd_base != ( target_phys_addr_t ) - 1		8018896	0		!=			
ANR	8019633	PtrMemberAccess	hwdef -> fd_base		8018896	0					
ANR	8019634	Identifier	hwdef		8018896	0					
ANR	8019635	Identifier	fd_base		8018896	1					
ANR	8019636	CastExpression	( target_phys_addr_t ) - 1		8018896	1					
ANR	8019637	CastTarget	target_phys_addr_t		8018896	0					
ANR	8019638	UnaryOperationExpression	- 1		8018896	1					
ANR	8019639	UnaryOperator	-		8018896	0					
ANR	8019640	PrimaryExpression	1		8018896	1					
ANR	8019641	CompoundStatement		217:50:4194:4194	8018896	1					
ANR	8019642	ExpressionStatement	"memset ( fd , 0 , sizeof ( fd ) )"	231:8:4596:4621	8018896	0	True				
ANR	8019643	CallExpression	"memset ( fd , 0 , sizeof ( fd ) )"		8018896	0					
ANR	8019644	Callee	memset		8018896	0					
ANR	8019645	Identifier	memset		8018896	0					
ANR	8019646	ArgumentList	fd		8018896	1					
ANR	8019647	Argument	fd		8018896	0					
ANR	8019648	Identifier	fd		8018896	0					
ANR	8019649	Argument	0		8018896	1					
ANR	8019650	PrimaryExpression	0		8018896	0					
ANR	8019651	Argument	sizeof ( fd )		8018896	2					
ANR	8019652	SizeofExpression	sizeof ( fd )		8018896	0					
ANR	8019653	Sizeof	sizeof		8018896	0					
ANR	8019654	SizeofOperand	fd		8018896	1					
ANR	8019655	ExpressionStatement	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"	233:8:4632:4678	8018896	1	True				
ANR	8019656	AssignmentExpression	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"		8018896	0		=			
ANR	8019657	Identifier	drive_index		8018896	0					
ANR	8019658	CallExpression	"drive_get_index ( IF_FLOPPY , 0 , 0 )"		8018896	1					
ANR	8019659	Callee	drive_get_index		8018896	0					
ANR	8019660	Identifier	drive_get_index		8018896	0					
ANR	8019661	ArgumentList	IF_FLOPPY		8018896	1					
ANR	8019662	Argument	IF_FLOPPY		8018896	0					
ANR	8019663	Identifier	IF_FLOPPY		8018896	0					
ANR	8019664	Argument	0		8018896	1					
ANR	8019665	PrimaryExpression	0		8018896	0					
ANR	8019666	Argument	0		8018896	2					
ANR	8019667	PrimaryExpression	0		8018896	0					
ANR	8019668	IfStatement	if ( drive_index != - 1 )		8018896	2					
ANR	8019669	Condition	drive_index != - 1	235:12:4693:4709	8018896	0	True				
ANR	8019670	EqualityExpression	drive_index != - 1		8018896	0		!=			
ANR	8019671	Identifier	drive_index		8018896	0					
ANR	8019672	UnaryOperationExpression	- 1		8018896	1					
ANR	8019673	UnaryOperator	-		8018896	0					
ANR	8019674	PrimaryExpression	1		8018896	1					
ANR	8019675	ExpressionStatement	fd [ 0 ] = drives_table [ drive_index ] . bdrv	237:12:4725:4763	8018896	1	True				
ANR	8019676	AssignmentExpression	fd [ 0 ] = drives_table [ drive_index ] . bdrv		8018896	0		=			
ANR	8019677	ArrayIndexing	fd [ 0 ]		8018896	0					
ANR	8019678	Identifier	fd		8018896	0					
ANR	8019679	PrimaryExpression	0		8018896	1					
ANR	8019680	MemberAccess	drives_table [ drive_index ] . bdrv		8018896	1					
ANR	8019681	ArrayIndexing	drives_table [ drive_index ]		8018896	0					
ANR	8019682	Identifier	drives_table		8018896	0					
ANR	8019683	Identifier	drive_index		8018896	1					
ANR	8019684	Identifier	bdrv		8018896	1					
ANR	8019685	ExpressionStatement	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"	241:8:4776:4875	8018896	3	True				
ANR	8019686	CallExpression	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"		8018896	0					
ANR	8019687	Callee	sun4m_fdctrl_init		8018896	0					
ANR	8019688	Identifier	sun4m_fdctrl_init		8018896	0					
ANR	8019689	ArgumentList	slavio_irq [ hwdef -> fd_irq ]		8018896	1					
ANR	8019690	Argument	slavio_irq [ hwdef -> fd_irq ]		8018896	0					
ANR	8019691	ArrayIndexing	slavio_irq [ hwdef -> fd_irq ]		8018896	0					
ANR	8019692	Identifier	slavio_irq		8018896	0					
ANR	8019693	PtrMemberAccess	hwdef -> fd_irq		8018896	1					
ANR	8019694	Identifier	hwdef		8018896	0					
ANR	8019695	Identifier	fd_irq		8018896	1					
ANR	8019696	Argument	hwdef -> fd_base		8018896	1					
ANR	8019697	PtrMemberAccess	hwdef -> fd_base		8018896	0					
ANR	8019698	Identifier	hwdef		8018896	0					
ANR	8019699	Identifier	fd_base		8018896	1					
ANR	8019700	Argument	fd		8018896	2					
ANR	8019701	Identifier	fd		8018896	0					
ANR	8019702	Argument	fdc_tc		8018896	3					
ANR	8019703	Identifier	fdc_tc		8018896	0					
ANR	8019704	IfStatement	if ( drive_get_max_bus ( IF_SCSI ) > 0 )		8018896	70					
ANR	8019705	Condition	drive_get_max_bus ( IF_SCSI ) > 0	249:8:4895:4924	8018896	0	True				
ANR	8019706	RelationalExpression	drive_get_max_bus ( IF_SCSI ) > 0		8018896	0		>			
ANR	8019707	CallExpression	drive_get_max_bus ( IF_SCSI )		8018896	0					
ANR	8019708	Callee	drive_get_max_bus		8018896	0					
ANR	8019709	Identifier	drive_get_max_bus		8018896	0					
ANR	8019710	ArgumentList	IF_SCSI		8018896	1					
ANR	8019711	Argument	IF_SCSI		8018896	0					
ANR	8019712	Identifier	IF_SCSI		8018896	0					
ANR	8019713	PrimaryExpression	0		8018896	1					
ANR	8019714	CompoundStatement		239:40:4585:4585	8018896	1					
ANR	8019715	ExpressionStatement	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"	251:8:4938:4982	8018896	0	True				
ANR	8019716	CallExpression	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"		8018896	0					
ANR	8019717	Callee	fprintf		8018896	0					
ANR	8019718	Identifier	fprintf		8018896	0					
ANR	8019719	ArgumentList	stderr		8018896	1					
ANR	8019720	Argument	stderr		8018896	0					
ANR	8019721	Identifier	stderr		8018896	0					
ANR	8019722	Argument	"""qemu: too many SCSI bus\\n"""		8018896	1					
ANR	8019723	PrimaryExpression	"""qemu: too many SCSI bus\\n"""		8018896	0					
ANR	8019724	ExpressionStatement	exit ( 1 )	253:8:4993:5000	8018896	1	True				
ANR	8019725	CallExpression	exit ( 1 )		8018896	0					
ANR	8019726	Callee	exit		8018896	0					
ANR	8019727	Identifier	exit		8018896	0					
ANR	8019728	ArgumentList	1		8018896	1					
ANR	8019729	Argument	1		8018896	0					
ANR	8019730	PrimaryExpression	1		8018896	0					
ANR	8019731	ExpressionStatement	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"	259:4:5016:5178	8018896	71	True				
ANR	8019732	AssignmentExpression	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8018896	0		=			
ANR	8019733	Identifier	main_esp		8018896	0					
ANR	8019734	CallExpression	"esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8018896	1					
ANR	8019735	Callee	esp_init		8018896	0					
ANR	8019736	Identifier	esp_init		8018896	0					
ANR	8019737	ArgumentList	hwdef -> esp_base		8018896	1					
ANR	8019738	Argument	hwdef -> esp_base		8018896	0					
ANR	8019739	PtrMemberAccess	hwdef -> esp_base		8018896	0					
ANR	8019740	Identifier	hwdef		8018896	0					
ANR	8019741	Identifier	esp_base		8018896	1					
ANR	8019742	Argument	2		8018896	1					
ANR	8019743	PrimaryExpression	2		8018896	0					
ANR	8019744	Argument	espdma_memory_read		8018896	2					
ANR	8019745	Identifier	espdma_memory_read		8018896	0					
ANR	8019746	Argument	espdma_memory_write		8018896	3					
ANR	8019747	Identifier	espdma_memory_write		8018896	0					
ANR	8019748	Argument	espdma		8018896	4					
ANR	8019749	Identifier	espdma		8018896	0					
ANR	8019750	Argument	* espdma_irq		8018896	5					
ANR	8019751	UnaryOperationExpression	* espdma_irq		8018896	0					
ANR	8019752	UnaryOperator	*		8018896	0					
ANR	8019753	Identifier	espdma_irq		8018896	1					
ANR	8019754	Argument	esp_reset		8018896	6					
ANR	8019755	Identifier	esp_reset		8018896	0					
ANR	8019756	ForStatement	for ( i = 0 ; i < ESP_MAX_DEVS ; i ++ )		8018896	72					
ANR	8019757	ForInit	i = 0 ;	267:9:5192:5197	8018896	0	True				
ANR	8019758	AssignmentExpression	i = 0		8018896	0		=			
ANR	8019759	Identifier	i		8018896	0					
ANR	8019760	PrimaryExpression	0		8018896	1					
ANR	8019761	Condition	i < ESP_MAX_DEVS	267:16:5199:5214	8018896	1	True				
ANR	8019762	RelationalExpression	i < ESP_MAX_DEVS		8018896	0		<			
ANR	8019763	Identifier	i		8018896	0					
ANR	8019764	Identifier	ESP_MAX_DEVS		8018896	1					
ANR	8019765	PostIncDecOperationExpression	i ++	267:34:5217:5219	8018896	2	True				
ANR	8019766	Identifier	i		8018896	0					
ANR	8019767	IncDec	++		8018896	1					
ANR	8019768	CompoundStatement		257:39:4880:4880	8018896	3					
ANR	8019769	ExpressionStatement	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"	269:8:5233:5277	8018896	0	True				
ANR	8019770	AssignmentExpression	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"		8018896	0		=			
ANR	8019771	Identifier	drive_index		8018896	0					
ANR	8019772	CallExpression	"drive_get_index ( IF_SCSI , 0 , i )"		8018896	1					
ANR	8019773	Callee	drive_get_index		8018896	0					
ANR	8019774	Identifier	drive_get_index		8018896	0					
ANR	8019775	ArgumentList	IF_SCSI		8018896	1					
ANR	8019776	Argument	IF_SCSI		8018896	0					
ANR	8019777	Identifier	IF_SCSI		8018896	0					
ANR	8019778	Argument	0		8018896	1					
ANR	8019779	PrimaryExpression	0		8018896	0					
ANR	8019780	Argument	i		8018896	2					
ANR	8019781	Identifier	i		8018896	0					
ANR	8019782	IfStatement	if ( drive_index == - 1 )		8018896	1					
ANR	8019783	Condition	drive_index == - 1	271:12:5292:5308	8018896	0	True				
ANR	8019784	EqualityExpression	drive_index == - 1		8018896	0		==			
ANR	8019785	Identifier	drive_index		8018896	0					
ANR	8019786	UnaryOperationExpression	- 1		8018896	1					
ANR	8019787	UnaryOperator	-		8018896	0					
ANR	8019788	PrimaryExpression	1		8018896	1					
ANR	8019789	ContinueStatement	continue ;	273:12:5324:5332	8018896	1	True				
ANR	8019790	ExpressionStatement	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"	275:8:5343:5403	8018896	2	True				
ANR	8019791	CallExpression	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"		8018896	0					
ANR	8019792	Callee	esp_scsi_attach		8018896	0					
ANR	8019793	Identifier	esp_scsi_attach		8018896	0					
ANR	8019794	ArgumentList	main_esp		8018896	1					
ANR	8019795	Argument	main_esp		8018896	0					
ANR	8019796	Identifier	main_esp		8018896	0					
ANR	8019797	Argument	drives_table [ drive_index ] . bdrv		8018896	1					
ANR	8019798	MemberAccess	drives_table [ drive_index ] . bdrv		8018896	0					
ANR	8019799	ArrayIndexing	drives_table [ drive_index ]		8018896	0					
ANR	8019800	Identifier	drives_table		8018896	0					
ANR	8019801	Identifier	drive_index		8018896	1					
ANR	8019802	Identifier	bdrv		8018896	1					
ANR	8019803	Argument	i		8018896	2					
ANR	8019804	Identifier	i		8018896	0					
ANR	8019805	ExpressionStatement	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"	281:4:5419:5531	8018896	73	True				
ANR	8019806	AssignmentExpression	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8018896	0		=			
ANR	8019807	Identifier	kernel_size		8018896	0					
ANR	8019808	CallExpression	"sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8018896	1					
ANR	8019809	Callee	sun4m_load_kernel		8018896	0					
ANR	8019810	Identifier	sun4m_load_kernel		8018896	0					
ANR	8019811	ArgumentList	kernel_filename		8018896	1					
ANR	8019812	Argument	kernel_filename		8018896	0					
ANR	8019813	Identifier	kernel_filename		8018896	0					
ANR	8019814	Argument	initrd_filename		8018896	1					
ANR	8019815	Identifier	initrd_filename		8018896	0					
ANR	8019816	Argument	RAM_size		8018896	2					
ANR	8019817	Identifier	RAM_size		8018896	0					
ANR	8019818	ExpressionStatement	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4c"" )"	287:4:5540:5770	8018896	74	True				
ANR	8019819	CallExpression	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4c"" )"		8018896	0					
ANR	8019820	Callee	nvram_init		8018896	0					
ANR	8019821	Identifier	nvram_init		8018896	0					
ANR	8019822	ArgumentList	nvram		8018896	1					
ANR	8019823	Argument	nvram		8018896	0					
ANR	8019824	Identifier	nvram		8018896	0					
ANR	8019825	Argument	( uint8_t * ) & nd_table [ 0 ] . macaddr		8018896	1					
ANR	8019826	CastExpression	( uint8_t * ) & nd_table [ 0 ] . macaddr		8018896	0					
ANR	8019827	CastTarget	uint8_t *		8018896	0					
ANR	8019828	UnaryOperationExpression	& nd_table [ 0 ] . macaddr		8018896	1					
ANR	8019829	UnaryOperator	&		8018896	0					
ANR	8019830	MemberAccess	nd_table [ 0 ] . macaddr		8018896	1					
ANR	8019831	ArrayIndexing	nd_table [ 0 ]		8018896	0					
ANR	8019832	Identifier	nd_table		8018896	0					
ANR	8019833	PrimaryExpression	0		8018896	1					
ANR	8019834	Identifier	macaddr		8018896	1					
ANR	8019835	Argument	kernel_cmdline		8018896	2					
ANR	8019836	Identifier	kernel_cmdline		8018896	0					
ANR	8019837	Argument	boot_device		8018896	3					
ANR	8019838	Identifier	boot_device		8018896	0					
ANR	8019839	Argument	RAM_size		8018896	4					
ANR	8019840	Identifier	RAM_size		8018896	0					
ANR	8019841	Argument	kernel_size		8018896	5					
ANR	8019842	Identifier	kernel_size		8018896	0					
ANR	8019843	Argument	graphic_width		8018896	6					
ANR	8019844	Identifier	graphic_width		8018896	0					
ANR	8019845	Argument	graphic_height		8018896	7					
ANR	8019846	Identifier	graphic_height		8018896	0					
ANR	8019847	Argument	graphic_depth		8018896	8					
ANR	8019848	Identifier	graphic_depth		8018896	0					
ANR	8019849	Argument	hwdef -> nvram_machine_id		8018896	9					
ANR	8019850	PtrMemberAccess	hwdef -> nvram_machine_id		8018896	0					
ANR	8019851	Identifier	hwdef		8018896	0					
ANR	8019852	Identifier	nvram_machine_id		8018896	1					
ANR	8019853	Argument	"""Sun4c"""		8018896	10					
ANR	8019854	PrimaryExpression	"""Sun4c"""		8018896	0					
ANR	8019855	ExpressionStatement	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"	297:4:5779:5829	8018896	75	True				
ANR	8019856	AssignmentExpression	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8018896	0		=			
ANR	8019857	Identifier	fw_cfg		8018896	0					
ANR	8019858	CallExpression	"fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8018896	1					
ANR	8019859	Callee	fw_cfg_init		8018896	0					
ANR	8019860	Identifier	fw_cfg_init		8018896	0					
ANR	8019861	ArgumentList	0		8018896	1					
ANR	8019862	Argument	0		8018896	0					
ANR	8019863	PrimaryExpression	0		8018896	0					
ANR	8019864	Argument	0		8018896	1					
ANR	8019865	PrimaryExpression	0		8018896	0					
ANR	8019866	Argument	CFG_ADDR		8018896	2					
ANR	8019867	Identifier	CFG_ADDR		8018896	0					
ANR	8019868	Argument	CFG_ADDR + 2		8018896	3					
ANR	8019869	AdditiveExpression	CFG_ADDR + 2		8018896	0		+			
ANR	8019870	Identifier	CFG_ADDR		8018896	0					
ANR	8019871	PrimaryExpression	2		8018896	1					
ANR	8019872	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"	299:4:5836:5872	8018896	76	True				
ANR	8019873	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"		8018896	0					
ANR	8019874	Callee	fw_cfg_add_i32		8018896	0					
ANR	8019875	Identifier	fw_cfg_add_i32		8018896	0					
ANR	8019876	ArgumentList	fw_cfg		8018896	1					
ANR	8019877	Argument	fw_cfg		8018896	0					
ANR	8019878	Identifier	fw_cfg		8018896	0					
ANR	8019879	Argument	FW_CFG_ID		8018896	1					
ANR	8019880	Identifier	FW_CFG_ID		8018896	0					
ANR	8019881	Argument	1		8018896	2					
ANR	8019882	PrimaryExpression	1		8018896	0					
ANR	8019883	ExpressionStatement	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"	301:4:5879:5938	8018896	77	True				
ANR	8019884	CallExpression	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"		8018896	0					
ANR	8019885	Callee	fw_cfg_add_i64		8018896	0					
ANR	8019886	Identifier	fw_cfg_add_i64		8018896	0					
ANR	8019887	ArgumentList	fw_cfg		8018896	1					
ANR	8019888	Argument	fw_cfg		8018896	0					
ANR	8019889	Identifier	fw_cfg		8018896	0					
ANR	8019890	Argument	FW_CFG_RAM_SIZE		8018896	1					
ANR	8019891	Identifier	FW_CFG_RAM_SIZE		8018896	0					
ANR	8019892	Argument	( uint64_t ) ram_size		8018896	2					
ANR	8019893	CastExpression	( uint64_t ) ram_size		8018896	0					
ANR	8019894	CastTarget	uint64_t		8018896	0					
ANR	8019895	Identifier	ram_size		8018896	1					
ANR	8019896	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"	303:4:5945:6005	8018896	78	True				
ANR	8019897	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"		8018896	0					
ANR	8019898	Callee	fw_cfg_add_i16		8018896	0					
ANR	8019899	Identifier	fw_cfg_add_i16		8018896	0					
ANR	8019900	ArgumentList	fw_cfg		8018896	1					
ANR	8019901	Argument	fw_cfg		8018896	0					
ANR	8019902	Identifier	fw_cfg		8018896	0					
ANR	8019903	Argument	FW_CFG_MACHINE_ID		8018896	1					
ANR	8019904	Identifier	FW_CFG_MACHINE_ID		8018896	0					
ANR	8019905	Argument	hwdef -> machine_id		8018896	2					
ANR	8019906	PtrMemberAccess	hwdef -> machine_id		8018896	0					
ANR	8019907	Identifier	hwdef		8018896	0					
ANR	8019908	Identifier	machine_id		8018896	1					
ANR	8019909	ReturnType	static void		8018896	1					
ANR	8019910	Identifier	sun4c_hw_init		8018896	2					
ANR	8019911	ParameterList	"const struct sun4c_hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model"		8018896	3					
ANR	8019912	Parameter	const struct sun4c_hwdef * hwdef	1:26:26:56	8018896	0	True				
ANR	8019913	ParameterType	const struct sun4c_hwdef *		8018896	0					
ANR	8019914	Identifier	hwdef		8018896	1					
ANR	8019915	Parameter	ram_addr_t RAM_size	1:59:59:77	8018896	1	True				
ANR	8019916	ParameterType	ram_addr_t		8018896	0					
ANR	8019917	Identifier	RAM_size		8018896	1					
ANR	8019918	Parameter	const char * boot_device	3:26:107:129	8018896	2	True				
ANR	8019919	ParameterType	const char *		8018896	0					
ANR	8019920	Identifier	boot_device		8018896	1					
ANR	8019921	Parameter	DisplayState * ds	5:26:159:174	8018896	3	True				
ANR	8019922	ParameterType	DisplayState *		8018896	0					
ANR	8019923	Identifier	ds		8018896	1					
ANR	8019924	Parameter	const char * kernel_filename	5:44:177:203	8018896	4	True				
ANR	8019925	ParameterType	const char *		8018896	0					
ANR	8019926	Identifier	kernel_filename		8018896	1					
ANR	8019927	Parameter	const char * kernel_cmdline	7:26:233:258	8018896	5	True				
ANR	8019928	ParameterType	const char *		8018896	0					
ANR	8019929	Identifier	kernel_cmdline		8018896	1					
ANR	8019930	Parameter	const char * initrd_filename	9:26:288:314	8018896	6	True				
ANR	8019931	ParameterType	const char *		8018896	0					
ANR	8019932	Identifier	initrd_filename		8018896	1					
ANR	8019933	Parameter	const char * cpu_model	9:55:317:337	8018896	7	True				
ANR	8019934	ParameterType	const char *		8018896	0					
ANR	8019935	Identifier	cpu_model		8018896	1					
ANR	8019936	CFGEntryNode	ENTRY		8018896		True				
ANR	8019937	CFGExitNode	EXIT		8018896		True				
ANR	8019938	Symbol	graphic_width		8018896						
ANR	8019939	Symbol	hwdef -> slavio_base		8018896						
ANR	8019940	Symbol	IO_MEM_ROM		8018896						
ANR	8019941	Symbol	drive_get_max_bus		8018896						
ANR	8019942	Symbol	drive_index		8018896						
ANR	8019943	Symbol	nvram		8018896						
ANR	8019944	Symbol	iommu		8018896						
ANR	8019945	Symbol	PROM_SIZE_MAX		8018896						
ANR	8019946	Symbol	fw_cfg_init		8018896						
ANR	8019947	Symbol	ledma_irq		8018896						
ANR	8019948	Symbol	esp_reset		8018896						
ANR	8019949	Symbol	TARGET_PAGE_SIZE		8018896						
ANR	8019950	Symbol	hwdef -> machine_id		8018896						
ANR	8019951	Symbol	* slavio_irq		8018896						
ANR	8019952	Symbol	m48t59_init		8018896						
ANR	8019953	Symbol	fw_cfg		8018896						
ANR	8019954	Symbol	& fdc_tc		8018896						
ANR	8019955	Symbol	fdc_tc		8018896						
ANR	8019956	Symbol	hwdef -> default_cpu_model		8018896						
ANR	8019957	Symbol	sparc32_dma_init		8018896						
ANR	8019958	Symbol	bios_dir		8018896						
ANR	8019959	Symbol	graphic_depth		8018896						
ANR	8019960	Symbol	PROM_VADDR		8018896						
ANR	8019961	Symbol	phys_ram_base		8018896						
ANR	8019962	Symbol	hwdef -> max_mem		8018896						
ANR	8019963	Symbol	sun4c_intctl_init		8018896						
ANR	8019964	Symbol	ESP_MAX_DEVS		8018896						
ANR	8019965	Symbol	nd_table [ 0 ] . model		8018896						
ANR	8019966	Symbol	hwdef -> le_base		8018896						
ANR	8019967	Symbol	* hwdef -> fd_irq		8018896						
ANR	8019968	Symbol	& esp_reset		8018896						
ANR	8019969	Symbol	* ledma_irq		8018896						
ANR	8019970	Symbol	hwdef -> fd_irq		8018896						
ANR	8019971	Symbol	hwdef -> fd_base		8018896						
ANR	8019972	Symbol	hwdef -> iommu_version		8018896						
ANR	8019973	Symbol	hwdef -> tcx_base		8018896						
ANR	8019974	Symbol	cpu_model		8018896						
ANR	8019975	Symbol	load_image_targphys		8018896						
ANR	8019976	Symbol	hwdef -> dma_base		8018896						
ANR	8019977	Symbol	nd_table		8018896						
ANR	8019978	Symbol	tcx_offset		8018896						
ANR	8019979	Symbol	hwdef -> vram_size		8018896						
ANR	8019980	Symbol	slavio_irq		8018896						
ANR	8019981	Symbol	* drive_index		8018896						
ANR	8019982	Symbol	hwdef -> nvram_base		8018896						
ANR	8019983	Symbol	* hwdef -> ser_irq		8018896						
ANR	8019984	Symbol	esp_init		8018896						
ANR	8019985	Symbol	hwdef -> me_irq		8018896						
ANR	8019986	Symbol	hwdef		8018896						
ANR	8019987	Symbol	hwdef -> aux1_base		8018896						
ANR	8019988	Symbol	* fd		8018896						
ANR	8019989	Symbol	CFG_ADDR		8018896						
ANR	8019990	Symbol	i		8018896						
ANR	8019991	Symbol	drive_get_index		8018896						
ANR	8019992	Symbol	qemu_ram_alloc		8018896						
ANR	8019993	Symbol	qemu_allocate_irqs		8018896						
ANR	8019994	Symbol	* hwdef -> me_irq		8018896						
ANR	8019995	Symbol	drives_table [ drive_index ] . bdrv		8018896						
ANR	8019996	Symbol	espdma_memory_write		8018896						
ANR	8019997	Symbol	le_reset		8018896						
ANR	8019998	Symbol	& slavio_irq		8018896						
ANR	8019999	Symbol	espdma_irq		8018896						
ANR	8020000	Symbol	* hwdef		8018896						
ANR	8020001	Symbol	ram_size		8018896						
ANR	8020002	Symbol	buf		8018896						
ANR	8020003	Symbol	main_esp		8018896						
ANR	8020004	Symbol	hwdef -> esp_irq		8018896						
ANR	8020005	Symbol	kernel_filename		8018896						
ANR	8020006	Symbol	serial_hds		8018896						
ANR	8020007	Symbol	sun4m_load_kernel		8018896						
ANR	8020008	Symbol	espdma_memory_read		8018896						
ANR	8020009	Symbol	hwdef -> nvram_machine_id		8018896						
ANR	8020010	Symbol	* hwdef -> ms_kb_irq		8018896						
ANR	8020011	Symbol	& nd_table [ 0 ] . macaddr		8018896						
ANR	8020012	Symbol	ds		8018896						
ANR	8020013	Symbol	slavio_intctl		8018896						
ANR	8020014	Symbol	* hwdef -> esp_irq		8018896						
ANR	8020015	Symbol	* * hwdef		8018896						
ANR	8020016	Symbol	hwdef -> iommu_base		8018896						
ANR	8020017	Symbol	kernel_size		8018896						
ANR	8020018	Symbol	IF_FLOPPY		8018896						
ANR	8020019	Symbol	ret		8018896						
ANR	8020020	Symbol	strcmp		8018896						
ANR	8020021	Symbol	cpu_irqs		8018896						
ANR	8020022	Symbol	NULL		8018896						
ANR	8020023	Symbol	prom_offset		8018896						
ANR	8020024	Symbol	FW_CFG_MACHINE_ID		8018896						
ANR	8020025	Symbol	iommu_init		8018896						
ANR	8020026	Symbol	cpu_init		8018896						
ANR	8020027	Symbol	* env		8018896						
ANR	8020028	Symbol	hwdef -> ser_irq		8018896						
ANR	8020029	Symbol	stderr		8018896						
ANR	8020030	Symbol	hwdef -> esp_base		8018896						
ANR	8020031	Symbol	boot_device		8018896						
ANR	8020032	Symbol	nographic		8018896						
ANR	8020033	Symbol	env -> prom_addr		8018896						
ANR	8020034	Symbol	& espdma_irq		8018896						
ANR	8020035	Symbol	fd		8018896						
ANR	8020036	Symbol	load_elf		8018896						
ANR	8020037	Symbol	PROM_FILENAME		8018896						
ANR	8020038	Symbol	kernel_cmdline		8018896						
ANR	8020039	Symbol	RAM_size		8018896						
ANR	8020040	Symbol	TARGET_PAGE_MASK		8018896						
ANR	8020041	Symbol	graphic_height		8018896						
ANR	8020042	Symbol	hwdef -> nvram_size		8018896						
ANR	8020043	Symbol	cpu_set_irq		8018896						
ANR	8020044	Symbol	* nd_table		8018896						
ANR	8020045	Symbol	initrd_filename		8018896						
ANR	8020046	Symbol	main_cpu_reset		8018896						
ANR	8020047	Symbol	hwdef -> ms_kb_base		8018896						
ANR	8020048	Symbol	FW_CFG_RAM_SIZE		8018896						
ANR	8020049	Symbol	bios_name		8018896						
ANR	8020050	Symbol	espdma		8018896						
ANR	8020051	Symbol	FW_CFG_ID		8018896						
ANR	8020052	Symbol	hwdef -> intctl_base		8018896						
ANR	8020053	Symbol	MAX_PILS		8018896						
ANR	8020054	Symbol	ESCC_CLOCK		8018896						
ANR	8020055	Symbol	slavio_misc		8018896						
ANR	8020056	Symbol	hwdef -> ms_kb_irq		8018896						
ANR	8020057	Symbol	env		8018896						
ANR	8020058	Symbol	slavio_misc_init		8018896						
ANR	8020059	Symbol	drives_table		8018896						
ANR	8020060	Symbol	hwdef -> serial_base		8018896						
ANR	8020061	Symbol	* serial_hds		8018896						
ANR	8020062	Symbol	IF_SCSI		8018896						
ANR	8020063	Symbol	* drives_table		8018896						
ANR	8020064	Symbol	* espdma_irq		8018896						
ANR	8020065	Symbol	ram_offset		8018896						
ANR	8020066	Symbol	ledma		8018896						
