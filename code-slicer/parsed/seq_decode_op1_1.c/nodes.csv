command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7750404	File	/home/p4ultr4n/workplace/ReVeal/raw_code/seq_decode_op1_1.c								
ANR	7750405	Function	seq_decode_op1	1:0:0:1254							
ANR	7750406	FunctionDef	"seq_decode_op1 (SeqVideoContext * seq , const unsigned char * src , unsigned char * dst)"		7750405	0					
ANR	7750407	CompoundStatement		3:0:112:1254	7750405	0					
ANR	7750408	IdentifierDeclStatement	const unsigned char * color_table ;	5:4:119:151	7750405	0	True				
ANR	7750409	IdentifierDecl	* color_table		7750405	0					
ANR	7750410	IdentifierDeclType	const unsigned char *		7750405	0					
ANR	7750411	Identifier	color_table		7750405	1					
ANR	7750412	IdentifierDeclStatement	"int b , i , len , bits ;"	7:4:158:177	7750405	1	True				
ANR	7750413	IdentifierDecl	b		7750405	0					
ANR	7750414	IdentifierDeclType	int		7750405	0					
ANR	7750415	Identifier	b		7750405	1					
ANR	7750416	IdentifierDecl	i		7750405	1					
ANR	7750417	IdentifierDeclType	int		7750405	0					
ANR	7750418	Identifier	i		7750405	1					
ANR	7750419	IdentifierDecl	len		7750405	2					
ANR	7750420	IdentifierDeclType	int		7750405	0					
ANR	7750421	Identifier	len		7750405	1					
ANR	7750422	IdentifierDecl	bits		7750405	3					
ANR	7750423	IdentifierDeclType	int		7750405	0					
ANR	7750424	Identifier	bits		7750405	1					
ANR	7750425	IdentifierDeclStatement	GetBitContext gb ;	9:4:184:200	7750405	2	True				
ANR	7750426	IdentifierDecl	gb		7750405	0					
ANR	7750427	IdentifierDeclType	GetBitContext		7750405	0					
ANR	7750428	Identifier	gb		7750405	1					
ANR	7750429	IdentifierDeclStatement	unsigned char block [ 8 * 8 ] ;	11:4:207:233	7750405	3	True				
ANR	7750430	IdentifierDecl	block [ 8 * 8 ]		7750405	0					
ANR	7750431	IdentifierDeclType	unsigned char [ 8 * 8 ]		7750405	0					
ANR	7750432	Identifier	block		7750405	1					
ANR	7750433	MultiplicativeExpression	8 * 8		7750405	2		*			
ANR	7750434	PrimaryExpression	8		7750405	0					
ANR	7750435	PrimaryExpression	8		7750405	1					
ANR	7750436	ExpressionStatement	len = * src ++	15:4:242:254	7750405	4	True				
ANR	7750437	AssignmentExpression	len = * src ++		7750405	0		=			
ANR	7750438	Identifier	len		7750405	0					
ANR	7750439	UnaryOperationExpression	* src ++		7750405	1					
ANR	7750440	UnaryOperator	*		7750405	0					
ANR	7750441	PostIncDecOperationExpression	src ++		7750405	1					
ANR	7750442	Identifier	src		7750405	0					
ANR	7750443	IncDec	++		7750405	1					
ANR	7750444	IfStatement	if ( len & 0x80 )		7750405	5					
ANR	7750445	Condition	len & 0x80	17:8:265:274	7750405	0	True				
ANR	7750446	BitAndExpression	len & 0x80		7750405	0		&			
ANR	7750447	Identifier	len		7750405	0					
ANR	7750448	PrimaryExpression	0x80		7750405	1					
ANR	7750449	CompoundStatement		15:20:164:164	7750405	1					
ANR	7750450	SwitchStatement	switch ( len & 3 )		7750405	0					
ANR	7750451	Condition	len & 3	19:16:296:302	7750405	0	True				
ANR	7750452	BitAndExpression	len & 3		7750405	0		&			
ANR	7750453	Identifier	len		7750405	0					
ANR	7750454	PrimaryExpression	3		7750405	1					
ANR	7750455	CompoundStatement		17:25:192:192	7750405	1					
ANR	7750456	Label	case 1 :	21:8:316:322	7750405	0	True				
ANR	7750457	ExpressionStatement	"src = seq_unpack_rle_block ( src , block , sizeof ( block ) )"	23:12:337:390	7750405	1	True				
ANR	7750458	AssignmentExpression	"src = seq_unpack_rle_block ( src , block , sizeof ( block ) )"		7750405	0		=			
ANR	7750459	Identifier	src		7750405	0					
ANR	7750460	CallExpression	"seq_unpack_rle_block ( src , block , sizeof ( block ) )"		7750405	1					
ANR	7750461	Callee	seq_unpack_rle_block		7750405	0					
ANR	7750462	Identifier	seq_unpack_rle_block		7750405	0					
ANR	7750463	ArgumentList	src		7750405	1					
ANR	7750464	Argument	src		7750405	0					
ANR	7750465	Identifier	src		7750405	0					
ANR	7750466	Argument	block		7750405	1					
ANR	7750467	Identifier	block		7750405	0					
ANR	7750468	Argument	sizeof ( block )		7750405	2					
ANR	7750469	SizeofExpression	sizeof ( block )		7750405	0					
ANR	7750470	Sizeof	sizeof		7750405	0					
ANR	7750471	SizeofOperand	block		7750405	1					
ANR	7750472	ForStatement	for ( b = 0 ; b < 8 ; b ++ )		7750405	2					
ANR	7750473	ForInit	b = 0 ;	25:17:410:415	7750405	0	True				
ANR	7750474	AssignmentExpression	b = 0		7750405	0		=			
ANR	7750475	Identifier	b		7750405	0					
ANR	7750476	PrimaryExpression	0		7750405	1					
ANR	7750477	Condition	b < 8	25:24:417:421	7750405	1	True				
ANR	7750478	RelationalExpression	b < 8		7750405	0		<			
ANR	7750479	Identifier	b		7750405	0					
ANR	7750480	PrimaryExpression	8		7750405	1					
ANR	7750481	PostIncDecOperationExpression	b ++	25:31:424:426	7750405	2	True				
ANR	7750482	Identifier	b		7750405	0					
ANR	7750483	IncDec	++		7750405	1					
ANR	7750484	CompoundStatement		23:36:316:316	7750405	3					
ANR	7750485	ExpressionStatement	"memcpy ( dst , & block [ b * 8 ] , 8 )"	27:16:448:477	7750405	0	True				
ANR	7750486	CallExpression	"memcpy ( dst , & block [ b * 8 ] , 8 )"		7750405	0					
ANR	7750487	Callee	memcpy		7750405	0					
ANR	7750488	Identifier	memcpy		7750405	0					
ANR	7750489	ArgumentList	dst		7750405	1					
ANR	7750490	Argument	dst		7750405	0					
ANR	7750491	Identifier	dst		7750405	0					
ANR	7750492	Argument	& block [ b * 8 ]		7750405	1					
ANR	7750493	UnaryOperationExpression	& block [ b * 8 ]		7750405	0					
ANR	7750494	UnaryOperator	&		7750405	0					
ANR	7750495	ArrayIndexing	block [ b * 8 ]		7750405	1					
ANR	7750496	Identifier	block		7750405	0					
ANR	7750497	MultiplicativeExpression	b * 8		7750405	1		*			
ANR	7750498	Identifier	b		7750405	0					
ANR	7750499	PrimaryExpression	8		7750405	1					
ANR	7750500	Argument	8		7750405	2					
ANR	7750501	PrimaryExpression	8		7750405	0					
ANR	7750502	ExpressionStatement	dst += seq -> frame . linesize [ 0 ]	29:16:496:525	7750405	1	True				
ANR	7750503	AssignmentExpression	dst += seq -> frame . linesize [ 0 ]		7750405	0		+=			
ANR	7750504	Identifier	dst		7750405	0					
ANR	7750505	ArrayIndexing	seq -> frame . linesize [ 0 ]		7750405	1					
ANR	7750506	MemberAccess	seq -> frame . linesize		7750405	0					
ANR	7750507	PtrMemberAccess	seq -> frame		7750405	0					
ANR	7750508	Identifier	seq		7750405	0					
ANR	7750509	Identifier	frame		7750405	1					
ANR	7750510	Identifier	linesize		7750405	1					
ANR	7750511	PrimaryExpression	0		7750405	1					
ANR	7750512	BreakStatement	break ;	33:12:555:560	7750405	3	True				
ANR	7750513	Label	case 2 :	35:8:571:577	7750405	4	True				
ANR	7750514	ExpressionStatement	"src = seq_unpack_rle_block ( src , block , sizeof ( block ) )"	37:12:592:645	7750405	5	True				
ANR	7750515	AssignmentExpression	"src = seq_unpack_rle_block ( src , block , sizeof ( block ) )"		7750405	0		=			
ANR	7750516	Identifier	src		7750405	0					
ANR	7750517	CallExpression	"seq_unpack_rle_block ( src , block , sizeof ( block ) )"		7750405	1					
ANR	7750518	Callee	seq_unpack_rle_block		7750405	0					
ANR	7750519	Identifier	seq_unpack_rle_block		7750405	0					
ANR	7750520	ArgumentList	src		7750405	1					
ANR	7750521	Argument	src		7750405	0					
ANR	7750522	Identifier	src		7750405	0					
ANR	7750523	Argument	block		7750405	1					
ANR	7750524	Identifier	block		7750405	0					
ANR	7750525	Argument	sizeof ( block )		7750405	2					
ANR	7750526	SizeofExpression	sizeof ( block )		7750405	0					
ANR	7750527	Sizeof	sizeof		7750405	0					
ANR	7750528	SizeofOperand	block		7750405	1					
ANR	7750529	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		7750405	6					
ANR	7750530	ForInit	i = 0 ;	39:17:665:670	7750405	0	True				
ANR	7750531	AssignmentExpression	i = 0		7750405	0		=			
ANR	7750532	Identifier	i		7750405	0					
ANR	7750533	PrimaryExpression	0		7750405	1					
ANR	7750534	Condition	i < 8	39:24:672:676	7750405	1	True				
ANR	7750535	RelationalExpression	i < 8		7750405	0		<			
ANR	7750536	Identifier	i		7750405	0					
ANR	7750537	PrimaryExpression	8		7750405	1					
ANR	7750538	PostIncDecOperationExpression	i ++	39:31:679:681	7750405	2	True				
ANR	7750539	Identifier	i		7750405	0					
ANR	7750540	IncDec	++		7750405	1					
ANR	7750541	CompoundStatement		37:36:571:571	7750405	3					
ANR	7750542	ForStatement	for ( b = 0 ; b < 8 ; b ++ )		7750405	0					
ANR	7750543	ForInit	b = 0 ;	41:21:708:713	7750405	0	True				
ANR	7750544	AssignmentExpression	b = 0		7750405	0		=			
ANR	7750545	Identifier	b		7750405	0					
ANR	7750546	PrimaryExpression	0		7750405	1					
ANR	7750547	Condition	b < 8	41:28:715:719	7750405	1	True				
ANR	7750548	RelationalExpression	b < 8		7750405	0		<			
ANR	7750549	Identifier	b		7750405	0					
ANR	7750550	PrimaryExpression	8		7750405	1					
ANR	7750551	PostIncDecOperationExpression	b ++	41:35:722:724	7750405	2	True				
ANR	7750552	Identifier	b		7750405	0					
ANR	7750553	IncDec	++		7750405	1					
ANR	7750554	ExpressionStatement	dst [ b * seq -> frame . linesize [ 0 ] ] = block [ i * 8 + b ]	43:20:748:798	7750405	3	True				
ANR	7750555	AssignmentExpression	dst [ b * seq -> frame . linesize [ 0 ] ] = block [ i * 8 + b ]		7750405	0		=			
ANR	7750556	ArrayIndexing	dst [ b * seq -> frame . linesize [ 0 ] ]		7750405	0					
ANR	7750557	Identifier	dst		7750405	0					
ANR	7750558	MultiplicativeExpression	b * seq -> frame . linesize [ 0 ]		7750405	1		*			
ANR	7750559	Identifier	b		7750405	0					
ANR	7750560	ArrayIndexing	seq -> frame . linesize [ 0 ]		7750405	1					
ANR	7750561	MemberAccess	seq -> frame . linesize		7750405	0					
ANR	7750562	PtrMemberAccess	seq -> frame		7750405	0					
ANR	7750563	Identifier	seq		7750405	0					
ANR	7750564	Identifier	frame		7750405	1					
ANR	7750565	Identifier	linesize		7750405	1					
ANR	7750566	PrimaryExpression	0		7750405	1					
ANR	7750567	ArrayIndexing	block [ i * 8 + b ]		7750405	1					
ANR	7750568	Identifier	block		7750405	0					
ANR	7750569	AdditiveExpression	i * 8 + b		7750405	1		+			
ANR	7750570	MultiplicativeExpression	i * 8		7750405	0		*			
ANR	7750571	Identifier	i		7750405	0					
ANR	7750572	PrimaryExpression	8		7750405	1					
ANR	7750573	Identifier	b		7750405	1					
ANR	7750574	ExpressionStatement	++ dst	45:16:817:822	7750405	1	True				
ANR	7750575	UnaryExpression	++ dst		7750405	0					
ANR	7750576	IncDec	++		7750405	0					
ANR	7750577	Identifier	dst		7750405	1					
ANR	7750578	BreakStatement	break ;	49:12:852:857	7750405	7	True				
ANR	7750579	ElseStatement	else		7750405	0					
ANR	7750580	CompoundStatement		51:11:769:769	7750405	0					
ANR	7750581	ExpressionStatement	color_table = src	55:8:893:910	7750405	0	True				
ANR	7750582	AssignmentExpression	color_table = src		7750405	0		=			
ANR	7750583	Identifier	color_table		7750405	0					
ANR	7750584	Identifier	src		7750405	1					
ANR	7750585	ExpressionStatement	src += len	57:8:921:931	7750405	1	True				
ANR	7750586	AssignmentExpression	src += len		7750405	0		+=			
ANR	7750587	Identifier	src		7750405	0					
ANR	7750588	Identifier	len		7750405	1					
ANR	7750589	ExpressionStatement	bits = ff_log2_tab [ len - 1 ] + 1	59:8:942:973	7750405	2	True				
ANR	7750590	AssignmentExpression	bits = ff_log2_tab [ len - 1 ] + 1		7750405	0		=			
ANR	7750591	Identifier	bits		7750405	0					
ANR	7750592	AdditiveExpression	ff_log2_tab [ len - 1 ] + 1		7750405	1		+			
ANR	7750593	ArrayIndexing	ff_log2_tab [ len - 1 ]		7750405	0					
ANR	7750594	Identifier	ff_log2_tab		7750405	0					
ANR	7750595	AdditiveExpression	len - 1		7750405	1		-			
ANR	7750596	Identifier	len		7750405	0					
ANR	7750597	PrimaryExpression	1		7750405	1					
ANR	7750598	PrimaryExpression	1		7750405	1					
ANR	7750599	ExpressionStatement	"init_get_bits ( & gb , src , bits * 8 * 8 )"	61:8:984:1021	7750405	3	True				
ANR	7750600	CallExpression	"init_get_bits ( & gb , src , bits * 8 * 8 )"		7750405	0					
ANR	7750601	Callee	init_get_bits		7750405	0					
ANR	7750602	Identifier	init_get_bits		7750405	0					
ANR	7750603	ArgumentList	& gb		7750405	1					
ANR	7750604	Argument	& gb		7750405	0					
ANR	7750605	UnaryOperationExpression	& gb		7750405	0					
ANR	7750606	UnaryOperator	&		7750405	0					
ANR	7750607	Identifier	gb		7750405	1					
ANR	7750608	Argument	src		7750405	1					
ANR	7750609	Identifier	src		7750405	0					
ANR	7750610	Argument	bits * 8 * 8		7750405	2					
ANR	7750611	MultiplicativeExpression	bits * 8 * 8		7750405	0		*			
ANR	7750612	Identifier	bits		7750405	0					
ANR	7750613	MultiplicativeExpression	8 * 8		7750405	1		*			
ANR	7750614	PrimaryExpression	8		7750405	0					
ANR	7750615	PrimaryExpression	8		7750405	1					
ANR	7750616	ExpressionStatement	src += bits * 8	61:47:1023:1038	7750405	4	True				
ANR	7750617	AssignmentExpression	src += bits * 8		7750405	0		+=			
ANR	7750618	Identifier	src		7750405	0					
ANR	7750619	MultiplicativeExpression	bits * 8		7750405	1		*			
ANR	7750620	Identifier	bits		7750405	0					
ANR	7750621	PrimaryExpression	8		7750405	1					
ANR	7750622	ForStatement	for ( b = 0 ; b < 8 ; b ++ )		7750405	5					
ANR	7750623	ForInit	b = 0 ;	63:13:1054:1059	7750405	0	True				
ANR	7750624	AssignmentExpression	b = 0		7750405	0		=			
ANR	7750625	Identifier	b		7750405	0					
ANR	7750626	PrimaryExpression	0		7750405	1					
ANR	7750627	Condition	b < 8	63:20:1061:1065	7750405	1	True				
ANR	7750628	RelationalExpression	b < 8		7750405	0		<			
ANR	7750629	Identifier	b		7750405	0					
ANR	7750630	PrimaryExpression	8		7750405	1					
ANR	7750631	PostIncDecOperationExpression	b ++	63:27:1068:1070	7750405	2	True				
ANR	7750632	Identifier	b		7750405	0					
ANR	7750633	IncDec	++		7750405	1					
ANR	7750634	CompoundStatement		61:32:960:960	7750405	3					
ANR	7750635	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		7750405	0					
ANR	7750636	ForInit	i = 0 ;	65:17:1093:1098	7750405	0	True				
ANR	7750637	AssignmentExpression	i = 0		7750405	0		=			
ANR	7750638	Identifier	i		7750405	0					
ANR	7750639	PrimaryExpression	0		7750405	1					
ANR	7750640	Condition	i < 8	65:24:1100:1104	7750405	1	True				
ANR	7750641	RelationalExpression	i < 8		7750405	0		<			
ANR	7750642	Identifier	i		7750405	0					
ANR	7750643	PrimaryExpression	8		7750405	1					
ANR	7750644	PostIncDecOperationExpression	i ++	65:31:1107:1109	7750405	2	True				
ANR	7750645	Identifier	i		7750405	0					
ANR	7750646	IncDec	++		7750405	1					
ANR	7750647	ExpressionStatement	"dst [ i ] = color_table [ get_bits ( & gb , bits ) ]"	67:16:1129:1170	7750405	3	True				
ANR	7750648	AssignmentExpression	"dst [ i ] = color_table [ get_bits ( & gb , bits ) ]"		7750405	0		=			
ANR	7750649	ArrayIndexing	dst [ i ]		7750405	0					
ANR	7750650	Identifier	dst		7750405	0					
ANR	7750651	Identifier	i		7750405	1					
ANR	7750652	ArrayIndexing	"color_table [ get_bits ( & gb , bits ) ]"		7750405	1					
ANR	7750653	Identifier	color_table		7750405	0					
ANR	7750654	CallExpression	"get_bits ( & gb , bits )"		7750405	1					
ANR	7750655	Callee	get_bits		7750405	0					
ANR	7750656	Identifier	get_bits		7750405	0					
ANR	7750657	ArgumentList	& gb		7750405	1					
ANR	7750658	Argument	& gb		7750405	0					
ANR	7750659	UnaryOperationExpression	& gb		7750405	0					
ANR	7750660	UnaryOperator	&		7750405	0					
ANR	7750661	Identifier	gb		7750405	1					
ANR	7750662	Argument	bits		7750405	1					
ANR	7750663	Identifier	bits		7750405	0					
ANR	7750664	ExpressionStatement	dst += seq -> frame . linesize [ 0 ]	69:12:1185:1214	7750405	1	True				
ANR	7750665	AssignmentExpression	dst += seq -> frame . linesize [ 0 ]		7750405	0		+=			
ANR	7750666	Identifier	dst		7750405	0					
ANR	7750667	ArrayIndexing	seq -> frame . linesize [ 0 ]		7750405	1					
ANR	7750668	MemberAccess	seq -> frame . linesize		7750405	0					
ANR	7750669	PtrMemberAccess	seq -> frame		7750405	0					
ANR	7750670	Identifier	seq		7750405	0					
ANR	7750671	Identifier	frame		7750405	1					
ANR	7750672	Identifier	linesize		7750405	1					
ANR	7750673	PrimaryExpression	0		7750405	1					
ANR	7750674	ReturnStatement	return src ;	77:4:1241:1251	7750405	6	True				
ANR	7750675	Identifier	src		7750405	0					
ANR	7750676	ReturnType	static const unsigned char *		7750405	1					
ANR	7750677	Identifier	seq_decode_op1		7750405	2					
ANR	7750678	ParameterList	"SeqVideoContext * seq , const unsigned char * src , unsigned char * dst"		7750405	3					
ANR	7750679	Parameter	SeqVideoContext * seq	1:43:43:62	7750405	0	True				
ANR	7750680	ParameterType	SeqVideoContext *		7750405	0					
ANR	7750681	Identifier	seq		7750405	1					
ANR	7750682	Parameter	const unsigned char * src	1:65:65:88	7750405	1	True				
ANR	7750683	ParameterType	const unsigned char *		7750405	0					
ANR	7750684	Identifier	src		7750405	1					
ANR	7750685	Parameter	unsigned char * dst	1:91:91:108	7750405	2	True				
ANR	7750686	ParameterType	unsigned char *		7750405	0					
ANR	7750687	Identifier	dst		7750405	1					
ANR	7750688	CFGEntryNode	ENTRY		7750405		True				
ANR	7750689	CFGExitNode	EXIT		7750405		True				
ANR	7750690	Symbol	seq -> frame . linesize		7750405						
ANR	7750691	Symbol	* * seq -> frame . linesize		7750405						
ANR	7750692	Symbol	dst		7750405						
ANR	7750693	Symbol	& gb		7750405						
ANR	7750694	Symbol	get_bits		7750405						
ANR	7750695	Symbol	* seq		7750405						
ANR	7750696	Symbol	seq_unpack_rle_block		7750405						
ANR	7750697	Symbol	* color_table		7750405						
ANR	7750698	Symbol	color_table		7750405						
ANR	7750699	Symbol	* dst		7750405						
ANR	7750700	Symbol	* ff_log2_tab		7750405						
ANR	7750701	Symbol	len		7750405						
ANR	7750702	Symbol	block		7750405						
ANR	7750703	Symbol	seq -> frame		7750405						
ANR	7750704	Symbol	gb		7750405						
ANR	7750705	Symbol	* seq -> frame		7750405						
ANR	7750706	Symbol	* * * seq		7750405						
ANR	7750707	Symbol	seq		7750405						
ANR	7750708	Symbol	b		7750405						
ANR	7750709	Symbol	src		7750405						
ANR	7750710	Symbol	* get_bits		7750405						
ANR	7750711	Symbol	bits		7750405						
ANR	7750712	Symbol	i		7750405						
ANR	7750713	Symbol	ff_log2_tab		7750405						
ANR	7750714	Symbol	* b		7750405						
ANR	7750715	Symbol	* * seq -> frame		7750405						
ANR	7750716	Symbol	* block		7750405						
ANR	7750717	Symbol	* * seq		7750405						
ANR	7750718	Symbol	* i		7750405						
ANR	7750719	Symbol	* seq -> frame . linesize		7750405						
ANR	7750720	Symbol	* src ++		7750405						
ANR	7750721	Symbol	* len		7750405						
