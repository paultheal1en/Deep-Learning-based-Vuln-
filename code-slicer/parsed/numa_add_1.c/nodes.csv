command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6053945	File	/home/p4ultr4n/workplace/ReVeal/raw_code/numa_add_1.c								
ANR	6053946	Function	numa_add	1:0:0:1970							
ANR	6053947	FunctionDef	numa_add (const char * optarg)		6053946	0					
ANR	6053948	CompoundStatement		3:0:42:1970	6053946	0					
ANR	6053949	IdentifierDeclStatement	char option [ 128 ] ;	5:4:49:65	6053946	0	True				
ANR	6053950	IdentifierDecl	option [ 128 ]		6053946	0					
ANR	6053951	IdentifierDeclType	char [ 128 ]		6053946	0					
ANR	6053952	Identifier	option		6053946	1					
ANR	6053953	PrimaryExpression	128		6053946	2					
ANR	6053954	IdentifierDeclStatement	char * endptr ;	7:4:72:84	6053946	1	True				
ANR	6053955	IdentifierDecl	* endptr		6053946	0					
ANR	6053956	IdentifierDeclType	char *		6053946	0					
ANR	6053957	Identifier	endptr		6053946	1					
ANR	6053958	IdentifierDeclStatement	"unsigned long long value , endvalue ;"	9:4:91:125	6053946	2	True				
ANR	6053959	IdentifierDecl	value		6053946	0					
ANR	6053960	IdentifierDeclType	unsigned long long		6053946	0					
ANR	6053961	Identifier	value		6053946	1					
ANR	6053962	IdentifierDecl	endvalue		6053946	1					
ANR	6053963	IdentifierDeclType	unsigned long long		6053946	0					
ANR	6053964	Identifier	endvalue		6053946	1					
ANR	6053965	IdentifierDeclStatement	unsigned long long nodenr ;	11:4:132:157	6053946	3	True				
ANR	6053966	IdentifierDecl	nodenr		6053946	0					
ANR	6053967	IdentifierDeclType	unsigned long long		6053946	0					
ANR	6053968	Identifier	nodenr		6053946	1					
ANR	6053969	Statement	value	15:4:166:170	6053946	4	True				
ANR	6053970	Statement	=	15:10:172:172	6053946	5	True				
ANR	6053971	Statement	endvalue	15:12:174:181	6053946	6	True				
ANR	6053972	Statement	=	15:21:183:183	6053946	7	True				
ANR	6053973	Statement	0UL	15:23:185:187	6053946	8	True				
ANR	6053974	ExpressionStatement	L	15:26:188:189	6053946	9	True				
ANR	6053975	Identifier	L		6053946	0					
ANR	6053976	ExpressionStatement	"optarg = get_opt_name ( option , 128 , optarg , ',' )"	19:4:198:245	6053946	10	True				
ANR	6053977	AssignmentExpression	"optarg = get_opt_name ( option , 128 , optarg , ',' )"		6053946	0		=			
ANR	6053978	Identifier	optarg		6053946	0					
ANR	6053979	CallExpression	"get_opt_name ( option , 128 , optarg , ',' )"		6053946	1					
ANR	6053980	Callee	get_opt_name		6053946	0					
ANR	6053981	Identifier	get_opt_name		6053946	0					
ANR	6053982	ArgumentList	option		6053946	1					
ANR	6053983	Argument	option		6053946	0					
ANR	6053984	Identifier	option		6053946	0					
ANR	6053985	Argument	128		6053946	1					
ANR	6053986	PrimaryExpression	128		6053946	0					
ANR	6053987	Argument	optarg		6053946	2					
ANR	6053988	Identifier	optarg		6053946	0					
ANR	6053989	Argument	"','"		6053946	3					
ANR	6053990	PrimaryExpression	"','"		6053946	0					
ANR	6053991	IfStatement	"if ( * optarg == ',' )"		6053946	11					
ANR	6053992	Condition	"* optarg == ','"	21:8:256:269	6053946	0	True				
ANR	6053993	EqualityExpression	"* optarg == ','"		6053946	0		==			
ANR	6053994	UnaryOperationExpression	* optarg		6053946	0					
ANR	6053995	UnaryOperator	*		6053946	0					
ANR	6053996	Identifier	optarg		6053946	1					
ANR	6053997	PrimaryExpression	"','"		6053946	1					
ANR	6053998	CompoundStatement		19:24:229:229	6053946	1					
ANR	6053999	ExpressionStatement	optarg ++	23:8:283:291	6053946	0	True				
ANR	6054000	PostIncDecOperationExpression	optarg ++		6053946	0					
ANR	6054001	Identifier	optarg		6053946	0					
ANR	6054002	IncDec	++		6053946	1					
ANR	6054003	IfStatement	"if ( ! strcmp ( option , ""node"" ) )"		6053946	12					
ANR	6054004	Condition	"! strcmp ( option , ""node"" )"	27:8:309:331	6053946	0	True				
ANR	6054005	UnaryOperationExpression	"! strcmp ( option , ""node"" )"		6053946	0					
ANR	6054006	UnaryOperator	!		6053946	0					
ANR	6054007	CallExpression	"strcmp ( option , ""node"" )"		6053946	1					
ANR	6054008	Callee	strcmp		6053946	0					
ANR	6054009	Identifier	strcmp		6053946	0					
ANR	6054010	ArgumentList	option		6053946	1					
ANR	6054011	Argument	option		6053946	0					
ANR	6054012	Identifier	option		6053946	0					
ANR	6054013	Argument	"""node"""		6053946	1					
ANR	6054014	PrimaryExpression	"""node"""		6053946	0					
ANR	6054015	CompoundStatement		25:33:291:291	6053946	1					
ANR	6054016	IfStatement	if ( nb_numa_nodes >= MAX_NODES )		6053946	0					
ANR	6054017	Condition	nb_numa_nodes >= MAX_NODES	31:12:351:376	6053946	0	True				
ANR	6054018	RelationalExpression	nb_numa_nodes >= MAX_NODES		6053946	0		>=			
ANR	6054019	Identifier	nb_numa_nodes		6053946	0					
ANR	6054020	Identifier	MAX_NODES		6053946	1					
ANR	6054021	CompoundStatement		29:40:336:336	6053946	1					
ANR	6054022	ExpressionStatement	"fprintf ( stderr , ""qemu: too many NUMA nodes\\n"" )"	33:12:394:440	6053946	0	True				
ANR	6054023	CallExpression	"fprintf ( stderr , ""qemu: too many NUMA nodes\\n"" )"		6053946	0					
ANR	6054024	Callee	fprintf		6053946	0					
ANR	6054025	Identifier	fprintf		6053946	0					
ANR	6054026	ArgumentList	stderr		6053946	1					
ANR	6054027	Argument	stderr		6053946	0					
ANR	6054028	Identifier	stderr		6053946	0					
ANR	6054029	Argument	"""qemu: too many NUMA nodes\\n"""		6053946	1					
ANR	6054030	PrimaryExpression	"""qemu: too many NUMA nodes\\n"""		6053946	0					
ANR	6054031	ExpressionStatement	exit ( 1 )	35:12:455:462	6053946	1	True				
ANR	6054032	CallExpression	exit ( 1 )		6053946	0					
ANR	6054033	Callee	exit		6053946	0					
ANR	6054034	Identifier	exit		6053946	0					
ANR	6054035	ArgumentList	1		6053946	1					
ANR	6054036	Argument	1		6053946	0					
ANR	6054037	PrimaryExpression	1		6053946	0					
ANR	6054038	IfStatement	"if ( get_param_value ( option , 128 , ""nodeid"" , optarg ) == 0 )"		6053946	1					
ANR	6054039	Condition	"get_param_value ( option , 128 , ""nodeid"" , optarg ) == 0"	41:12:490:540	6053946	0	True				
ANR	6054040	EqualityExpression	"get_param_value ( option , 128 , ""nodeid"" , optarg ) == 0"		6053946	0		==			
ANR	6054041	CallExpression	"get_param_value ( option , 128 , ""nodeid"" , optarg )"		6053946	0					
ANR	6054042	Callee	get_param_value		6053946	0					
ANR	6054043	Identifier	get_param_value		6053946	0					
ANR	6054044	ArgumentList	option		6053946	1					
ANR	6054045	Argument	option		6053946	0					
ANR	6054046	Identifier	option		6053946	0					
ANR	6054047	Argument	128		6053946	1					
ANR	6054048	PrimaryExpression	128		6053946	0					
ANR	6054049	Argument	"""nodeid"""		6053946	2					
ANR	6054050	PrimaryExpression	"""nodeid"""		6053946	0					
ANR	6054051	Argument	optarg		6053946	3					
ANR	6054052	Identifier	optarg		6053946	0					
ANR	6054053	PrimaryExpression	0		6053946	1					
ANR	6054054	CompoundStatement		39:65:500:500	6053946	1					
ANR	6054055	ExpressionStatement	nodenr = nb_numa_nodes	43:12:558:580	6053946	0	True				
ANR	6054056	AssignmentExpression	nodenr = nb_numa_nodes		6053946	0		=			
ANR	6054057	Identifier	nodenr		6053946	0					
ANR	6054058	Identifier	nb_numa_nodes		6053946	1					
ANR	6054059	ElseStatement	else		6053946	0					
ANR	6054060	CompoundStatement		43:15:555:555	6053946	0					
ANR	6054061	ExpressionStatement	"nodenr = strtoull ( option , NULL , 10 )"	47:12:613:648	6053946	0	True				
ANR	6054062	AssignmentExpression	"nodenr = strtoull ( option , NULL , 10 )"		6053946	0		=			
ANR	6054063	Identifier	nodenr		6053946	0					
ANR	6054064	CallExpression	"strtoull ( option , NULL , 10 )"		6053946	1					
ANR	6054065	Callee	strtoull		6053946	0					
ANR	6054066	Identifier	strtoull		6053946	0					
ANR	6054067	ArgumentList	option		6053946	1					
ANR	6054068	Argument	option		6053946	0					
ANR	6054069	Identifier	option		6053946	0					
ANR	6054070	Argument	NULL		6053946	1					
ANR	6054071	Identifier	NULL		6053946	0					
ANR	6054072	Argument	10		6053946	2					
ANR	6054073	PrimaryExpression	10		6053946	0					
ANR	6054074	IfStatement	if ( nodenr >= MAX_NODES )		6053946	2					
ANR	6054075	Condition	nodenr >= MAX_NODES	53:12:676:694	6053946	0	True				
ANR	6054076	RelationalExpression	nodenr >= MAX_NODES		6053946	0		>=			
ANR	6054077	Identifier	nodenr		6053946	0					
ANR	6054078	Identifier	MAX_NODES		6053946	1					
ANR	6054079	CompoundStatement		51:33:654:654	6053946	1					
ANR	6054080	ExpressionStatement	"fprintf ( stderr , ""qemu: invalid NUMA nodeid: %llu\\n"" , nodenr )"	55:12:712:772	6053946	0	True				
ANR	6054081	CallExpression	"fprintf ( stderr , ""qemu: invalid NUMA nodeid: %llu\\n"" , nodenr )"		6053946	0					
ANR	6054082	Callee	fprintf		6053946	0					
ANR	6054083	Identifier	fprintf		6053946	0					
ANR	6054084	ArgumentList	stderr		6053946	1					
ANR	6054085	Argument	stderr		6053946	0					
ANR	6054086	Identifier	stderr		6053946	0					
ANR	6054087	Argument	"""qemu: invalid NUMA nodeid: %llu\\n"""		6053946	1					
ANR	6054088	PrimaryExpression	"""qemu: invalid NUMA nodeid: %llu\\n"""		6053946	0					
ANR	6054089	Argument	nodenr		6053946	2					
ANR	6054090	Identifier	nodenr		6053946	0					
ANR	6054091	ExpressionStatement	exit ( 1 )	57:12:787:794	6053946	1	True				
ANR	6054092	CallExpression	exit ( 1 )		6053946	0					
ANR	6054093	Callee	exit		6053946	0					
ANR	6054094	Identifier	exit		6053946	0					
ANR	6054095	ArgumentList	1		6053946	1					
ANR	6054096	Argument	1		6053946	0					
ANR	6054097	PrimaryExpression	1		6053946	0					
ANR	6054098	IfStatement	"if ( get_param_value ( option , 128 , ""mem"" , optarg ) == 0 )"		6053946	3					
ANR	6054099	Condition	"get_param_value ( option , 128 , ""mem"" , optarg ) == 0"	63:12:822:869	6053946	0	True				
ANR	6054100	EqualityExpression	"get_param_value ( option , 128 , ""mem"" , optarg ) == 0"		6053946	0		==			
ANR	6054101	CallExpression	"get_param_value ( option , 128 , ""mem"" , optarg )"		6053946	0					
ANR	6054102	Callee	get_param_value		6053946	0					
ANR	6054103	Identifier	get_param_value		6053946	0					
ANR	6054104	ArgumentList	option		6053946	1					
ANR	6054105	Argument	option		6053946	0					
ANR	6054106	Identifier	option		6053946	0					
ANR	6054107	Argument	128		6053946	1					
ANR	6054108	PrimaryExpression	128		6053946	0					
ANR	6054109	Argument	"""mem"""		6053946	2					
ANR	6054110	PrimaryExpression	"""mem"""		6053946	0					
ANR	6054111	Argument	optarg		6053946	3					
ANR	6054112	Identifier	optarg		6053946	0					
ANR	6054113	PrimaryExpression	0		6053946	1					
ANR	6054114	CompoundStatement		61:62:829:829	6053946	1					
ANR	6054115	ExpressionStatement	node_mem [ nodenr ] = 0	65:12:887:907	6053946	0	True				
ANR	6054116	AssignmentExpression	node_mem [ nodenr ] = 0		6053946	0		=			
ANR	6054117	ArrayIndexing	node_mem [ nodenr ]		6053946	0					
ANR	6054118	Identifier	node_mem		6053946	0					
ANR	6054119	Identifier	nodenr		6053946	1					
ANR	6054120	PrimaryExpression	0		6053946	1					
ANR	6054121	ElseStatement	else		6053946	0					
ANR	6054122	CompoundStatement		67:12:897:909	6053946	0					
ANR	6054123	IdentifierDeclStatement	int64_t sval ;	69:12:940:952	6053946	0	True				
ANR	6054124	IdentifierDecl	sval		6053946	0					
ANR	6054125	IdentifierDeclType	int64_t		6053946	0					
ANR	6054126	Identifier	sval		6053946	1					
ANR	6054127	ExpressionStatement	"sval = strtosz ( option , & endptr )"	71:12:967:998	6053946	1	True				
ANR	6054128	AssignmentExpression	"sval = strtosz ( option , & endptr )"		6053946	0		=			
ANR	6054129	Identifier	sval		6053946	0					
ANR	6054130	CallExpression	"strtosz ( option , & endptr )"		6053946	1					
ANR	6054131	Callee	strtosz		6053946	0					
ANR	6054132	Identifier	strtosz		6053946	0					
ANR	6054133	ArgumentList	option		6053946	1					
ANR	6054134	Argument	option		6053946	0					
ANR	6054135	Identifier	option		6053946	0					
ANR	6054136	Argument	& endptr		6053946	1					
ANR	6054137	UnaryOperationExpression	& endptr		6053946	0					
ANR	6054138	UnaryOperator	&		6053946	0					
ANR	6054139	Identifier	endptr		6053946	1					
ANR	6054140	IfStatement	if ( sval < 0 || * endptr )		6053946	2					
ANR	6054141	Condition	sval < 0 || * endptr	73:16:1017:1035	6053946	0	True				
ANR	6054142	OrExpression	sval < 0 || * endptr		6053946	0		||			
ANR	6054143	RelationalExpression	sval < 0		6053946	0		<			
ANR	6054144	Identifier	sval		6053946	0					
ANR	6054145	PrimaryExpression	0		6053946	1					
ANR	6054146	UnaryOperationExpression	* endptr		6053946	1					
ANR	6054147	UnaryOperator	*		6053946	0					
ANR	6054148	Identifier	endptr		6053946	1					
ANR	6054149	CompoundStatement		71:37:995:995	6053946	1					
ANR	6054150	ExpressionStatement	"fprintf ( stderr , ""qemu: invalid numa mem size: %s\\n"" , optarg )"	75:16:1057:1117	6053946	0	True				
ANR	6054151	CallExpression	"fprintf ( stderr , ""qemu: invalid numa mem size: %s\\n"" , optarg )"		6053946	0					
ANR	6054152	Callee	fprintf		6053946	0					
ANR	6054153	Identifier	fprintf		6053946	0					
ANR	6054154	ArgumentList	stderr		6053946	1					
ANR	6054155	Argument	stderr		6053946	0					
ANR	6054156	Identifier	stderr		6053946	0					
ANR	6054157	Argument	"""qemu: invalid numa mem size: %s\\n"""		6053946	1					
ANR	6054158	PrimaryExpression	"""qemu: invalid numa mem size: %s\\n"""		6053946	0					
ANR	6054159	Argument	optarg		6053946	2					
ANR	6054160	Identifier	optarg		6053946	0					
ANR	6054161	ExpressionStatement	exit ( 1 )	77:16:1136:1143	6053946	1	True				
ANR	6054162	CallExpression	exit ( 1 )		6053946	0					
ANR	6054163	Callee	exit		6053946	0					
ANR	6054164	Identifier	exit		6053946	0					
ANR	6054165	ArgumentList	1		6053946	1					
ANR	6054166	Argument	1		6053946	0					
ANR	6054167	PrimaryExpression	1		6053946	0					
ANR	6054168	ExpressionStatement	node_mem [ nodenr ] = sval	81:12:1173:1196	6053946	3	True				
ANR	6054169	AssignmentExpression	node_mem [ nodenr ] = sval		6053946	0		=			
ANR	6054170	ArrayIndexing	node_mem [ nodenr ]		6053946	0					
ANR	6054171	Identifier	node_mem		6053946	0					
ANR	6054172	Identifier	nodenr		6053946	1					
ANR	6054173	Identifier	sval		6053946	1					
ANR	6054174	IfStatement	"if ( get_param_value ( option , 128 , ""cpus"" , optarg ) != 0 )"		6053946	4					
ANR	6054175	Condition	"get_param_value ( option , 128 , ""cpus"" , optarg ) != 0"	85:12:1222:1270	6053946	0	True				
ANR	6054176	EqualityExpression	"get_param_value ( option , 128 , ""cpus"" , optarg ) != 0"		6053946	0		!=			
ANR	6054177	CallExpression	"get_param_value ( option , 128 , ""cpus"" , optarg )"		6053946	0					
ANR	6054178	Callee	get_param_value		6053946	0					
ANR	6054179	Identifier	get_param_value		6053946	0					
ANR	6054180	ArgumentList	option		6053946	1					
ANR	6054181	Argument	option		6053946	0					
ANR	6054182	Identifier	option		6053946	0					
ANR	6054183	Argument	128		6053946	1					
ANR	6054184	PrimaryExpression	128		6053946	0					
ANR	6054185	Argument	"""cpus"""		6053946	2					
ANR	6054186	PrimaryExpression	"""cpus"""		6053946	0					
ANR	6054187	Argument	optarg		6053946	3					
ANR	6054188	Identifier	optarg		6053946	0					
ANR	6054189	PrimaryExpression	0		6053946	1					
ANR	6054190	CompoundStatement		83:63:1230:1230	6053946	1					
ANR	6054191	ExpressionStatement	"value = strtoull ( option , & endptr , 10 )"	87:12:1288:1325	6053946	0	True				
ANR	6054192	AssignmentExpression	"value = strtoull ( option , & endptr , 10 )"		6053946	0		=			
ANR	6054193	Identifier	value		6053946	0					
ANR	6054194	CallExpression	"strtoull ( option , & endptr , 10 )"		6053946	1					
ANR	6054195	Callee	strtoull		6053946	0					
ANR	6054196	Identifier	strtoull		6053946	0					
ANR	6054197	ArgumentList	option		6053946	1					
ANR	6054198	Argument	option		6053946	0					
ANR	6054199	Identifier	option		6053946	0					
ANR	6054200	Argument	& endptr		6053946	1					
ANR	6054201	UnaryOperationExpression	& endptr		6053946	0					
ANR	6054202	UnaryOperator	&		6053946	0					
ANR	6054203	Identifier	endptr		6053946	1					
ANR	6054204	Argument	10		6053946	2					
ANR	6054205	PrimaryExpression	10		6053946	0					
ANR	6054206	IfStatement	if ( * endptr == '-' )		6053946	1					
ANR	6054207	Condition	* endptr == '-'	89:16:1344:1357	6053946	0	True				
ANR	6054208	EqualityExpression	* endptr == '-'		6053946	0		==			
ANR	6054209	UnaryOperationExpression	* endptr		6053946	0					
ANR	6054210	UnaryOperator	*		6053946	0					
ANR	6054211	Identifier	endptr		6053946	1					
ANR	6054212	PrimaryExpression	'-'		6053946	1					
ANR	6054213	CompoundStatement		87:32:1317:1317	6053946	1					
ANR	6054214	ExpressionStatement	"endvalue = strtoull ( endptr + 1 , & endptr , 10 )"	91:16:1379:1421	6053946	0	True				
ANR	6054215	AssignmentExpression	"endvalue = strtoull ( endptr + 1 , & endptr , 10 )"		6053946	0		=			
ANR	6054216	Identifier	endvalue		6053946	0					
ANR	6054217	CallExpression	"strtoull ( endptr + 1 , & endptr , 10 )"		6053946	1					
ANR	6054218	Callee	strtoull		6053946	0					
ANR	6054219	Identifier	strtoull		6053946	0					
ANR	6054220	ArgumentList	endptr + 1		6053946	1					
ANR	6054221	Argument	endptr + 1		6053946	0					
ANR	6054222	AdditiveExpression	endptr + 1		6053946	0		+			
ANR	6054223	Identifier	endptr		6053946	0					
ANR	6054224	PrimaryExpression	1		6053946	1					
ANR	6054225	Argument	& endptr		6053946	1					
ANR	6054226	UnaryOperationExpression	& endptr		6053946	0					
ANR	6054227	UnaryOperator	&		6053946	0					
ANR	6054228	Identifier	endptr		6053946	1					
ANR	6054229	Argument	10		6053946	2					
ANR	6054230	PrimaryExpression	10		6053946	0					
ANR	6054231	ElseStatement	else		6053946	0					
ANR	6054232	CompoundStatement		91:19:1400:1400	6053946	0					
ANR	6054233	ExpressionStatement	endvalue = value	95:16:1462:1478	6053946	0	True				
ANR	6054234	AssignmentExpression	endvalue = value		6053946	0		=			
ANR	6054235	Identifier	endvalue		6053946	0					
ANR	6054236	Identifier	value		6053946	1					
ANR	6054237	IfStatement	if ( ! ( endvalue < MAX_CPUMASK_BITS ) )		6053946	2					
ANR	6054238	Condition	! ( endvalue < MAX_CPUMASK_BITS )	101:16:1514:1543	6053946	0	True				
ANR	6054239	UnaryOperationExpression	! ( endvalue < MAX_CPUMASK_BITS )		6053946	0					
ANR	6054240	UnaryOperator	!		6053946	0					
ANR	6054241	RelationalExpression	endvalue < MAX_CPUMASK_BITS		6053946	1		<			
ANR	6054242	Identifier	endvalue		6053946	0					
ANR	6054243	Identifier	MAX_CPUMASK_BITS		6053946	1					
ANR	6054244	CompoundStatement		99:48:1503:1503	6053946	1					
ANR	6054245	ExpressionStatement	endvalue = MAX_CPUMASK_BITS - 1	103:16:1565:1596	6053946	0	True				
ANR	6054246	AssignmentExpression	endvalue = MAX_CPUMASK_BITS - 1		6053946	0		=			
ANR	6054247	Identifier	endvalue		6053946	0					
ANR	6054248	AdditiveExpression	MAX_CPUMASK_BITS - 1		6053946	1		-			
ANR	6054249	Identifier	MAX_CPUMASK_BITS		6053946	0					
ANR	6054250	PrimaryExpression	1		6053946	1					
ANR	6054251	ExpressionStatement	"fprintf ( stderr , ""A max of %d CPUs are supported in a guest\\n"" , MAX_CPUMASK_BITS )"	105:16:1615:1738	6053946	1	True				
ANR	6054252	CallExpression	"fprintf ( stderr , ""A max of %d CPUs are supported in a guest\\n"" , MAX_CPUMASK_BITS )"		6053946	0					
ANR	6054253	Callee	fprintf		6053946	0					
ANR	6054254	Identifier	fprintf		6053946	0					
ANR	6054255	ArgumentList	stderr		6053946	1					
ANR	6054256	Argument	stderr		6053946	0					
ANR	6054257	Identifier	stderr		6053946	0					
ANR	6054258	Argument	"""A max of %d CPUs are supported in a guest\\n"""		6053946	1					
ANR	6054259	PrimaryExpression	"""A max of %d CPUs are supported in a guest\\n"""		6053946	0					
ANR	6054260	Argument	MAX_CPUMASK_BITS		6053946	2					
ANR	6054261	Identifier	MAX_CPUMASK_BITS		6053946	0					
ANR	6054262	ExpressionStatement	"bitmap_set ( node_cpumask [ nodenr ] , value , endvalue - value + 1 )"	115:12:1770:1827	6053946	3	True				
ANR	6054263	CallExpression	"bitmap_set ( node_cpumask [ nodenr ] , value , endvalue - value + 1 )"		6053946	0					
ANR	6054264	Callee	bitmap_set		6053946	0					
ANR	6054265	Identifier	bitmap_set		6053946	0					
ANR	6054266	ArgumentList	node_cpumask [ nodenr ]		6053946	1					
ANR	6054267	Argument	node_cpumask [ nodenr ]		6053946	0					
ANR	6054268	ArrayIndexing	node_cpumask [ nodenr ]		6053946	0					
ANR	6054269	Identifier	node_cpumask		6053946	0					
ANR	6054270	Identifier	nodenr		6053946	1					
ANR	6054271	Argument	value		6053946	1					
ANR	6054272	Identifier	value		6053946	0					
ANR	6054273	Argument	endvalue - value + 1		6053946	2					
ANR	6054274	AdditiveExpression	endvalue - value + 1		6053946	0		-			
ANR	6054275	Identifier	endvalue		6053946	0					
ANR	6054276	AdditiveExpression	value + 1		6053946	1		+			
ANR	6054277	Identifier	value		6053946	0					
ANR	6054278	PrimaryExpression	1		6053946	1					
ANR	6054279	ExpressionStatement	nb_numa_nodes ++	119:8:1849:1864	6053946	5	True				
ANR	6054280	PostIncDecOperationExpression	nb_numa_nodes ++		6053946	0					
ANR	6054281	Identifier	nb_numa_nodes		6053946	0					
ANR	6054282	IncDec	++		6053946	1					
ANR	6054283	ElseStatement	else		6053946	0					
ANR	6054284	CompoundStatement		119:11:1835:1835	6053946	0					
ANR	6054285	ExpressionStatement	"fprintf ( stderr , ""Invalid -numa option: %s\\n"" , option )"	123:8:1889:1942	6053946	0	True				
ANR	6054286	CallExpression	"fprintf ( stderr , ""Invalid -numa option: %s\\n"" , option )"		6053946	0					
ANR	6054287	Callee	fprintf		6053946	0					
ANR	6054288	Identifier	fprintf		6053946	0					
ANR	6054289	ArgumentList	stderr		6053946	1					
ANR	6054290	Argument	stderr		6053946	0					
ANR	6054291	Identifier	stderr		6053946	0					
ANR	6054292	Argument	"""Invalid -numa option: %s\\n"""		6053946	1					
ANR	6054293	PrimaryExpression	"""Invalid -numa option: %s\\n"""		6053946	0					
ANR	6054294	Argument	option		6053946	2					
ANR	6054295	Identifier	option		6053946	0					
ANR	6054296	ExpressionStatement	exit ( 1 )	125:8:1953:1960	6053946	1	True				
ANR	6054297	CallExpression	exit ( 1 )		6053946	0					
ANR	6054298	Callee	exit		6053946	0					
ANR	6054299	Identifier	exit		6053946	0					
ANR	6054300	ArgumentList	1		6053946	1					
ANR	6054301	Argument	1		6053946	0					
ANR	6054302	PrimaryExpression	1		6053946	0					
ANR	6054303	ReturnType	static void		6053946	1					
ANR	6054304	Identifier	numa_add		6053946	2					
ANR	6054305	ParameterList	const char * optarg		6053946	3					
ANR	6054306	Parameter	const char * optarg	1:21:21:38	6053946	0	True				
ANR	6054307	ParameterType	const char *		6053946	0					
ANR	6054308	Identifier	optarg		6053946	1					
ANR	6054309	CFGEntryNode	ENTRY		6053946		True				
ANR	6054310	CFGExitNode	EXIT		6053946		True				
ANR	6054311	Symbol	* node_cpumask		6053946						
ANR	6054312	Symbol	nb_numa_nodes		6053946						
ANR	6054313	Symbol	* nodenr		6053946						
ANR	6054314	Symbol	nodenr		6053946						
ANR	6054315	Symbol	get_param_value		6053946						
ANR	6054316	Symbol	strtosz		6053946						
ANR	6054317	Symbol	optarg		6053946						
ANR	6054318	Symbol	MAX_CPUMASK_BITS		6053946						
ANR	6054319	Symbol	strtoull		6053946						
ANR	6054320	Symbol	value		6053946						
ANR	6054321	Symbol	* node_mem		6053946						
ANR	6054322	Symbol	node_cpumask		6053946						
ANR	6054323	Symbol	strcmp		6053946						
ANR	6054324	Symbol	endvalue		6053946						
ANR	6054325	Symbol	NULL		6053946						
ANR	6054326	Symbol	MAX_NODES		6053946						
ANR	6054327	Symbol	endptr		6053946						
ANR	6054328	Symbol	* endptr		6053946						
ANR	6054329	Symbol	& endptr		6053946						
ANR	6054330	Symbol	stderr		6053946						
ANR	6054331	Symbol	node_mem		6053946						
ANR	6054332	Symbol	sval		6053946						
ANR	6054333	Symbol	* optarg		6053946						
ANR	6054334	Symbol	get_opt_name		6053946						
ANR	6054335	Symbol	option		6053946						
