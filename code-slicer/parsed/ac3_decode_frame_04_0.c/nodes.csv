command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	350858	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ac3_decode_frame_04_0.c								
ANR	350859	Function	ac3_decode_frame	1:0:0:4816							
ANR	350860	FunctionDef	"ac3_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		350859	0					
ANR	350861	CompoundStatement		5:0:127:4816	350859	0					
ANR	350862	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:134:166	350859	0	True				
ANR	350863	IdentifierDecl	* buf = avpkt -> data		350859	0					
ANR	350864	IdentifierDeclType	const uint8_t *		350859	0					
ANR	350865	Identifier	buf		350859	1					
ANR	350866	AssignmentExpression	* buf = avpkt -> data		350859	2		=			
ANR	350867	Identifier	buf		350859	0					
ANR	350868	PtrMemberAccess	avpkt -> data		350859	1					
ANR	350869	Identifier	avpkt		350859	0					
ANR	350870	Identifier	data		350859	1					
ANR	350871	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:173:199	350859	1	True				
ANR	350872	IdentifierDecl	buf_size = avpkt -> size		350859	0					
ANR	350873	IdentifierDeclType	int		350859	0					
ANR	350874	Identifier	buf_size		350859	1					
ANR	350875	AssignmentExpression	buf_size = avpkt -> size		350859	2		=			
ANR	350876	Identifier	buf_size		350859	0					
ANR	350877	PtrMemberAccess	avpkt -> size		350859	1					
ANR	350878	Identifier	avpkt		350859	0					
ANR	350879	Identifier	size		350859	1					
ANR	350880	IdentifierDeclStatement	AC3DecodeContext * s = avctx -> priv_data ;	11:4:206:244	350859	2	True				
ANR	350881	IdentifierDecl	* s = avctx -> priv_data		350859	0					
ANR	350882	IdentifierDeclType	AC3DecodeContext *		350859	0					
ANR	350883	Identifier	s		350859	1					
ANR	350884	AssignmentExpression	* s = avctx -> priv_data		350859	2		=			
ANR	350885	Identifier	s		350859	0					
ANR	350886	PtrMemberAccess	avctx -> priv_data		350859	1					
ANR	350887	Identifier	avctx		350859	0					
ANR	350888	Identifier	priv_data		350859	1					
ANR	350889	IdentifierDeclStatement	int16_t * out_samples = ( int16_t * ) data ;	13:4:251:289	350859	3	True				
ANR	350890	IdentifierDecl	* out_samples = ( int16_t * ) data		350859	0					
ANR	350891	IdentifierDeclType	int16_t *		350859	0					
ANR	350892	Identifier	out_samples		350859	1					
ANR	350893	AssignmentExpression	* out_samples = ( int16_t * ) data		350859	2		=			
ANR	350894	Identifier	out_samples		350859	0					
ANR	350895	CastExpression	( int16_t * ) data		350859	1					
ANR	350896	CastTarget	int16_t *		350859	0					
ANR	350897	Identifier	data		350859	1					
ANR	350898	IdentifierDeclStatement	"int blk , ch , err ;"	15:4:296:312	350859	4	True				
ANR	350899	IdentifierDecl	blk		350859	0					
ANR	350900	IdentifierDeclType	int		350859	0					
ANR	350901	Identifier	blk		350859	1					
ANR	350902	IdentifierDecl	ch		350859	1					
ANR	350903	IdentifierDeclType	int		350859	0					
ANR	350904	Identifier	ch		350859	1					
ANR	350905	IdentifierDecl	err		350859	2					
ANR	350906	IdentifierDeclType	int		350859	0					
ANR	350907	Identifier	err		350859	1					
ANR	350908	IdentifierDeclStatement	const uint8_t * channel_map ;	17:4:319:345	350859	5	True				
ANR	350909	IdentifierDecl	* channel_map		350859	0					
ANR	350910	IdentifierDeclType	const uint8_t *		350859	0					
ANR	350911	Identifier	channel_map		350859	1					
ANR	350912	IdentifierDeclStatement	const float * output [ AC3_MAX_CHANNELS ] ;	19:4:352:389	350859	6	True				
ANR	350913	IdentifierDecl	* output [ AC3_MAX_CHANNELS ]		350859	0					
ANR	350914	IdentifierDeclType	const float * [ AC3_MAX_CHANNELS ]		350859	0					
ANR	350915	Identifier	output		350859	1					
ANR	350916	Identifier	AC3_MAX_CHANNELS		350859	2					
ANR	350917	IfStatement	if ( s -> input_buffer )		350859	7					
ANR	350918	Condition	s -> input_buffer	25:8:477:491	350859	0	True				
ANR	350919	PtrMemberAccess	s -> input_buffer		350859	0					
ANR	350920	Identifier	s		350859	0					
ANR	350921	Identifier	input_buffer		350859	1					
ANR	350922	CompoundStatement		21:25:366:366	350859	1					
ANR	350923	ExpressionStatement	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"	31:8:661:729	350859	0	True				
ANR	350924	CallExpression	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"		350859	0					
ANR	350925	Callee	memcpy		350859	0					
ANR	350926	Identifier	memcpy		350859	0					
ANR	350927	ArgumentList	s -> input_buffer		350859	1					
ANR	350928	Argument	s -> input_buffer		350859	0					
ANR	350929	PtrMemberAccess	s -> input_buffer		350859	0					
ANR	350930	Identifier	s		350859	0					
ANR	350931	Identifier	input_buffer		350859	1					
ANR	350932	Argument	buf		350859	1					
ANR	350933	Identifier	buf		350859	0					
ANR	350934	Argument	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		350859	2					
ANR	350935	CallExpression	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		350859	0					
ANR	350936	Callee	FFMIN		350859	0					
ANR	350937	Identifier	FFMIN		350859	0					
ANR	350938	ArgumentList	buf_size		350859	1					
ANR	350939	Argument	buf_size		350859	0					
ANR	350940	Identifier	buf_size		350859	0					
ANR	350941	Argument	AC3_FRAME_BUFFER_SIZE		350859	1					
ANR	350942	Identifier	AC3_FRAME_BUFFER_SIZE		350859	0					
ANR	350943	ExpressionStatement	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"	33:8:740:793	350859	1	True				
ANR	350944	CallExpression	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"		350859	0					
ANR	350945	Callee	init_get_bits		350859	0					
ANR	350946	Identifier	init_get_bits		350859	0					
ANR	350947	ArgumentList	& s -> gbc		350859	1					
ANR	350948	Argument	& s -> gbc		350859	0					
ANR	350949	UnaryOperationExpression	& s -> gbc		350859	0					
ANR	350950	UnaryOperator	&		350859	0					
ANR	350951	PtrMemberAccess	s -> gbc		350859	1					
ANR	350952	Identifier	s		350859	0					
ANR	350953	Identifier	gbc		350859	1					
ANR	350954	Argument	s -> input_buffer		350859	1					
ANR	350955	PtrMemberAccess	s -> input_buffer		350859	0					
ANR	350956	Identifier	s		350859	0					
ANR	350957	Identifier	input_buffer		350859	1					
ANR	350958	Argument	buf_size * 8		350859	2					
ANR	350959	MultiplicativeExpression	buf_size * 8		350859	0		*			
ANR	350960	Identifier	buf_size		350859	0					
ANR	350961	PrimaryExpression	8		350859	1					
ANR	350962	ElseStatement	else		350859	0					
ANR	350963	CompoundStatement		31:11:679:679	350859	0					
ANR	350964	ExpressionStatement	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"	37:8:818:859	350859	0	True				
ANR	350965	CallExpression	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"		350859	0					
ANR	350966	Callee	init_get_bits		350859	0					
ANR	350967	Identifier	init_get_bits		350859	0					
ANR	350968	ArgumentList	& s -> gbc		350859	1					
ANR	350969	Argument	& s -> gbc		350859	0					
ANR	350970	UnaryOperationExpression	& s -> gbc		350859	0					
ANR	350971	UnaryOperator	&		350859	0					
ANR	350972	PtrMemberAccess	s -> gbc		350859	1					
ANR	350973	Identifier	s		350859	0					
ANR	350974	Identifier	gbc		350859	1					
ANR	350975	Argument	buf		350859	1					
ANR	350976	Identifier	buf		350859	0					
ANR	350977	Argument	buf_size * 8		350859	2					
ANR	350978	MultiplicativeExpression	buf_size * 8		350859	0		*			
ANR	350979	Identifier	buf_size		350859	0					
ANR	350980	PrimaryExpression	8		350859	1					
ANR	350981	ExpressionStatement	* data_size = 0	45:4:905:919	350859	8	True				
ANR	350982	AssignmentExpression	* data_size = 0		350859	0		=			
ANR	350983	UnaryOperationExpression	* data_size		350859	0					
ANR	350984	UnaryOperator	*		350859	0					
ANR	350985	Identifier	data_size		350859	1					
ANR	350986	PrimaryExpression	0		350859	1					
ANR	350987	ExpressionStatement	err = parse_frame_header ( s )	47:4:926:953	350859	9	True				
ANR	350988	AssignmentExpression	err = parse_frame_header ( s )		350859	0		=			
ANR	350989	Identifier	err		350859	0					
ANR	350990	CallExpression	parse_frame_header ( s )		350859	1					
ANR	350991	Callee	parse_frame_header		350859	0					
ANR	350992	Identifier	parse_frame_header		350859	0					
ANR	350993	ArgumentList	s		350859	1					
ANR	350994	Argument	s		350859	0					
ANR	350995	Identifier	s		350859	0					
ANR	350996	IfStatement	if ( s -> frame_size > buf_size )		350859	10					
ANR	350997	Condition	s -> frame_size > buf_size	53:7:1028:1051	350859	0	True				
ANR	350998	RelationalExpression	s -> frame_size > buf_size		350859	0		>			
ANR	350999	PtrMemberAccess	s -> frame_size		350859	0					
ANR	351000	Identifier	s		350859	0					
ANR	351001	Identifier	frame_size		350859	1					
ANR	351002	Identifier	buf_size		350859	1					
ANR	351003	CompoundStatement		49:33:926:926	350859	1					
ANR	351004	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"	55:8:1065:1114	350859	0	True				
ANR	351005	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"		350859	0					
ANR	351006	Callee	av_log		350859	0					
ANR	351007	Identifier	av_log		350859	0					
ANR	351008	ArgumentList	avctx		350859	1					
ANR	351009	Argument	avctx		350859	0					
ANR	351010	Identifier	avctx		350859	0					
ANR	351011	Argument	AV_LOG_ERROR		350859	1					
ANR	351012	Identifier	AV_LOG_ERROR		350859	0					
ANR	351013	Argument	"""incomplete frame\\n"""		350859	2					
ANR	351014	PrimaryExpression	"""incomplete frame\\n"""		350859	0					
ANR	351015	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE	57:8:1125:1161	350859	1	True				
ANR	351016	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859	0		=			
ANR	351017	Identifier	err		350859	0					
ANR	351018	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859	1					
ANR	351019	IfStatement	if ( err != AAC_AC3_PARSE_ERROR_FRAME_SIZE && avctx -> error_recognition >= FF_ER_CAREFUL )		350859	11					
ANR	351020	Condition	err != AAC_AC3_PARSE_ERROR_FRAME_SIZE && avctx -> error_recognition >= FF_ER_CAREFUL	65:7:1214:1295	350859	0	True				
ANR	351021	AndExpression	err != AAC_AC3_PARSE_ERROR_FRAME_SIZE && avctx -> error_recognition >= FF_ER_CAREFUL		350859	0		&&			
ANR	351022	EqualityExpression	err != AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859	0		!=			
ANR	351023	Identifier	err		350859	0					
ANR	351024	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859	1					
ANR	351025	RelationalExpression	avctx -> error_recognition >= FF_ER_CAREFUL		350859	1		>=			
ANR	351026	PtrMemberAccess	avctx -> error_recognition		350859	0					
ANR	351027	Identifier	avctx		350859	0					
ANR	351028	Identifier	error_recognition		350859	1					
ANR	351029	Identifier	FF_ER_CAREFUL		350859	1					
ANR	351030	CompoundStatement		61:91:1170:1170	350859	1					
ANR	351031	IfStatement	"if ( av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 ) )"		350859	0					
ANR	351032	Condition	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"	67:11:1312:1380	350859	0	True				
ANR	351033	CallExpression	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"		350859	0					
ANR	351034	Callee	av_crc		350859	0					
ANR	351035	Identifier	av_crc		350859	0					
ANR	351036	ArgumentList	av_crc_get_table ( AV_CRC_16_ANSI )		350859	1					
ANR	351037	Argument	av_crc_get_table ( AV_CRC_16_ANSI )		350859	0					
ANR	351038	CallExpression	av_crc_get_table ( AV_CRC_16_ANSI )		350859	0					
ANR	351039	Callee	av_crc_get_table		350859	0					
ANR	351040	Identifier	av_crc_get_table		350859	0					
ANR	351041	ArgumentList	AV_CRC_16_ANSI		350859	1					
ANR	351042	Argument	AV_CRC_16_ANSI		350859	0					
ANR	351043	Identifier	AV_CRC_16_ANSI		350859	0					
ANR	351044	Argument	0		350859	1					
ANR	351045	PrimaryExpression	0		350859	0					
ANR	351046	Argument	& buf [ 2 ]		350859	2					
ANR	351047	UnaryOperationExpression	& buf [ 2 ]		350859	0					
ANR	351048	UnaryOperator	&		350859	0					
ANR	351049	ArrayIndexing	buf [ 2 ]		350859	1					
ANR	351050	Identifier	buf		350859	0					
ANR	351051	PrimaryExpression	2		350859	1					
ANR	351052	Argument	s -> frame_size - 2		350859	3					
ANR	351053	AdditiveExpression	s -> frame_size - 2		350859	0		-			
ANR	351054	PtrMemberAccess	s -> frame_size		350859	0					
ANR	351055	Identifier	s		350859	0					
ANR	351056	Identifier	frame_size		350859	1					
ANR	351057	PrimaryExpression	2		350859	1					
ANR	351058	CompoundStatement		63:82:1255:1255	350859	1					
ANR	351059	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"	69:12:1398:1449	350859	0	True				
ANR	351060	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"		350859	0					
ANR	351061	Callee	av_log		350859	0					
ANR	351062	Identifier	av_log		350859	0					
ANR	351063	ArgumentList	avctx		350859	1					
ANR	351064	Argument	avctx		350859	0					
ANR	351065	Identifier	avctx		350859	0					
ANR	351066	Argument	AV_LOG_ERROR		350859	1					
ANR	351067	Identifier	AV_LOG_ERROR		350859	0					
ANR	351068	Argument	"""frame CRC mismatch\\n"""		350859	2					
ANR	351069	PrimaryExpression	"""frame CRC mismatch\\n"""		350859	0					
ANR	351070	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_CRC	71:12:1464:1493	350859	1	True				
ANR	351071	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_CRC		350859	0		=			
ANR	351072	Identifier	err		350859	0					
ANR	351073	Identifier	AAC_AC3_PARSE_ERROR_CRC		350859	1					
ANR	351074	IfStatement	if ( err && err != AAC_AC3_PARSE_ERROR_CRC )		350859	12					
ANR	351075	Condition	err && err != AAC_AC3_PARSE_ERROR_CRC	79:7:1523:1559	350859	0	True				
ANR	351076	AndExpression	err && err != AAC_AC3_PARSE_ERROR_CRC		350859	0		&&			
ANR	351077	Identifier	err		350859	0					
ANR	351078	EqualityExpression	err != AAC_AC3_PARSE_ERROR_CRC		350859	1		!=			
ANR	351079	Identifier	err		350859	0					
ANR	351080	Identifier	AAC_AC3_PARSE_ERROR_CRC		350859	1					
ANR	351081	CompoundStatement		75:46:1434:1434	350859	1					
ANR	351082	SwitchStatement	switch ( err )		350859	0					
ANR	351083	Condition	err	81:15:1580:1582	350859	0	True				
ANR	351084	Identifier	err		350859	0					
ANR	351085	CompoundStatement		77:20:1457:1457	350859	1					
ANR	351086	Label	case AAC_AC3_PARSE_ERROR_SYNC :	83:12:1600:1629	350859	0	True				
ANR	351087	Identifier	AAC_AC3_PARSE_ERROR_SYNC		350859	0					
ANR	351088	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"	85:16:1648:1697	350859	1	True				
ANR	351089	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"		350859	0					
ANR	351090	Callee	av_log		350859	0					
ANR	351091	Identifier	av_log		350859	0					
ANR	351092	ArgumentList	avctx		350859	1					
ANR	351093	Argument	avctx		350859	0					
ANR	351094	Identifier	avctx		350859	0					
ANR	351095	Argument	AV_LOG_ERROR		350859	1					
ANR	351096	Identifier	AV_LOG_ERROR		350859	0					
ANR	351097	Argument	"""frame sync error\\n"""		350859	2					
ANR	351098	PrimaryExpression	"""frame sync error\\n"""		350859	0					
ANR	351099	ReturnStatement	return - 1 ;	87:16:1716:1725	350859	2	True				
ANR	351100	UnaryOperationExpression	- 1		350859	0					
ANR	351101	UnaryOperator	-		350859	0					
ANR	351102	PrimaryExpression	1		350859	1					
ANR	351103	Label	case AAC_AC3_PARSE_ERROR_BSID :	89:12:1740:1769	350859	3	True				
ANR	351104	Identifier	AAC_AC3_PARSE_ERROR_BSID		350859	0					
ANR	351105	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"	91:16:1788:1841	350859	4	True				
ANR	351106	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"		350859	0					
ANR	351107	Callee	av_log		350859	0					
ANR	351108	Identifier	av_log		350859	0					
ANR	351109	ArgumentList	avctx		350859	1					
ANR	351110	Argument	avctx		350859	0					
ANR	351111	Identifier	avctx		350859	0					
ANR	351112	Argument	AV_LOG_ERROR		350859	1					
ANR	351113	Identifier	AV_LOG_ERROR		350859	0					
ANR	351114	Argument	"""invalid bitstream id\\n"""		350859	2					
ANR	351115	PrimaryExpression	"""invalid bitstream id\\n"""		350859	0					
ANR	351116	BreakStatement	break ;	93:16:1860:1865	350859	5	True				
ANR	351117	Label	case AAC_AC3_PARSE_ERROR_SAMPLE_RATE :	95:12:1880:1916	350859	6	True				
ANR	351118	Identifier	AAC_AC3_PARSE_ERROR_SAMPLE_RATE		350859	0					
ANR	351119	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"	97:16:1935:1987	350859	7	True				
ANR	351120	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"		350859	0					
ANR	351121	Callee	av_log		350859	0					
ANR	351122	Identifier	av_log		350859	0					
ANR	351123	ArgumentList	avctx		350859	1					
ANR	351124	Argument	avctx		350859	0					
ANR	351125	Identifier	avctx		350859	0					
ANR	351126	Argument	AV_LOG_ERROR		350859	1					
ANR	351127	Identifier	AV_LOG_ERROR		350859	0					
ANR	351128	Argument	"""invalid sample rate\\n"""		350859	2					
ANR	351129	PrimaryExpression	"""invalid sample rate\\n"""		350859	0					
ANR	351130	BreakStatement	break ;	99:16:2006:2011	350859	8	True				
ANR	351131	Label	case AAC_AC3_PARSE_ERROR_FRAME_SIZE :	101:12:2026:2061	350859	9	True				
ANR	351132	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859	0					
ANR	351133	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"	103:16:2080:2131	350859	10	True				
ANR	351134	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"		350859	0					
ANR	351135	Callee	av_log		350859	0					
ANR	351136	Identifier	av_log		350859	0					
ANR	351137	ArgumentList	avctx		350859	1					
ANR	351138	Argument	avctx		350859	0					
ANR	351139	Identifier	avctx		350859	0					
ANR	351140	Argument	AV_LOG_ERROR		350859	1					
ANR	351141	Identifier	AV_LOG_ERROR		350859	0					
ANR	351142	Argument	"""invalid frame size\\n"""		350859	2					
ANR	351143	PrimaryExpression	"""invalid frame size\\n"""		350859	0					
ANR	351144	BreakStatement	break ;	105:16:2150:2155	350859	11	True				
ANR	351145	Label	case AAC_AC3_PARSE_ERROR_FRAME_TYPE :	107:12:2170:2205	350859	12	True				
ANR	351146	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		350859	0					
ANR	351147	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid )		350859	13					
ANR	351148	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid	113:19:2385:2444	350859	0	True				
ANR	351149	OrExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid		350859	0		||			
ANR	351150	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		350859	0		==			
ANR	351151	PtrMemberAccess	s -> frame_type		350859	0					
ANR	351152	Identifier	s		350859	0					
ANR	351153	Identifier	frame_type		350859	1					
ANR	351154	Identifier	EAC3_FRAME_TYPE_DEPENDENT		350859	1					
ANR	351155	PtrMemberAccess	s -> substreamid		350859	1					
ANR	351156	Identifier	s		350859	0					
ANR	351157	Identifier	substreamid		350859	1					
ANR	351158	CompoundStatement		109:81:2319:2319	350859	1					
ANR	351159	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported frame type : skipping frame\\n"" )"	115:20:2470:2542	350859	0	True				
ANR	351160	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported frame type : skipping frame\\n"" )"		350859	0					
ANR	351161	Callee	av_log		350859	0					
ANR	351162	Identifier	av_log		350859	0					
ANR	351163	ArgumentList	avctx		350859	1					
ANR	351164	Argument	avctx		350859	0					
ANR	351165	Identifier	avctx		350859	0					
ANR	351166	Argument	AV_LOG_ERROR		350859	1					
ANR	351167	Identifier	AV_LOG_ERROR		350859	0					
ANR	351168	Argument	"""unsupported frame type : skipping frame\\n"""		350859	2					
ANR	351169	PrimaryExpression	"""unsupported frame type : skipping frame\\n"""		350859	0					
ANR	351170	ReturnStatement	return s -> frame_size ;	117:20:2565:2585	350859	1	True				
ANR	351171	PtrMemberAccess	s -> frame_size		350859	0					
ANR	351172	Identifier	s		350859	0					
ANR	351173	Identifier	frame_size		350859	1					
ANR	351174	ElseStatement	else		350859	0					
ANR	351175	CompoundStatement		115:23:2483:2483	350859	0					
ANR	351176	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"	121:20:2634:2685	350859	0	True				
ANR	351177	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"		350859	0					
ANR	351178	Callee	av_log		350859	0					
ANR	351179	Identifier	av_log		350859	0					
ANR	351180	ArgumentList	avctx		350859	1					
ANR	351181	Argument	avctx		350859	0					
ANR	351182	Identifier	avctx		350859	0					
ANR	351183	Argument	AV_LOG_ERROR		350859	1					
ANR	351184	Identifier	AV_LOG_ERROR		350859	0					
ANR	351185	Argument	"""invalid frame type\\n"""		350859	2					
ANR	351186	PrimaryExpression	"""invalid frame type\\n"""		350859	0					
ANR	351187	BreakStatement	break ;	125:16:2723:2728	350859	14	True				
ANR	351188	Label	default :	127:12:2743:2750	350859	15	True				
ANR	351189	Identifier	default		350859	0					
ANR	351190	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"	129:16:2769:2816	350859	16	True				
ANR	351191	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"		350859	0					
ANR	351192	Callee	av_log		350859	0					
ANR	351193	Identifier	av_log		350859	0					
ANR	351194	ArgumentList	avctx		350859	1					
ANR	351195	Argument	avctx		350859	0					
ANR	351196	Identifier	avctx		350859	0					
ANR	351197	Argument	AV_LOG_ERROR		350859	1					
ANR	351198	Identifier	AV_LOG_ERROR		350859	0					
ANR	351199	Argument	"""invalid header\\n"""		350859	2					
ANR	351200	PrimaryExpression	"""invalid header\\n"""		350859	0					
ANR	351201	BreakStatement	break ;	131:16:2835:2840	350859	17	True				
ANR	351202	IfStatement	if ( ! err )		350859	13					
ANR	351203	Condition	! err	141:8:2919:2922	350859	0	True				
ANR	351204	UnaryOperationExpression	! err		350859	0					
ANR	351205	UnaryOperator	!		350859	0					
ANR	351206	Identifier	err		350859	1					
ANR	351207	CompoundStatement		137:14:2797:2797	350859	1					
ANR	351208	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	143:8:2936:2971	350859	0	True				
ANR	351209	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		350859	0		=			
ANR	351210	PtrMemberAccess	avctx -> sample_rate		350859	0					
ANR	351211	Identifier	avctx		350859	0					
ANR	351212	Identifier	sample_rate		350859	1					
ANR	351213	PtrMemberAccess	s -> sample_rate		350859	1					
ANR	351214	Identifier	s		350859	0					
ANR	351215	Identifier	sample_rate		350859	1					
ANR	351216	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	145:8:2982:3011	350859	1	True				
ANR	351217	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		350859	0		=			
ANR	351218	PtrMemberAccess	avctx -> bit_rate		350859	0					
ANR	351219	Identifier	avctx		350859	0					
ANR	351220	Identifier	bit_rate		350859	1					
ANR	351221	PtrMemberAccess	s -> bit_rate		350859	1					
ANR	351222	Identifier	s		350859	0					
ANR	351223	Identifier	bit_rate		350859	1					
ANR	351224	ExpressionStatement	s -> out_channels = s -> channels	151:8:3054:3083	350859	2	True				
ANR	351225	AssignmentExpression	s -> out_channels = s -> channels		350859	0		=			
ANR	351226	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351227	Identifier	s		350859	0					
ANR	351228	Identifier	out_channels		350859	1					
ANR	351229	PtrMemberAccess	s -> channels		350859	1					
ANR	351230	Identifier	s		350859	0					
ANR	351231	Identifier	channels		350859	1					
ANR	351232	ExpressionStatement	s -> output_mode = s -> channel_mode	153:8:3094:3126	350859	3	True				
ANR	351233	AssignmentExpression	s -> output_mode = s -> channel_mode		350859	0		=			
ANR	351234	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351235	Identifier	s		350859	0					
ANR	351236	Identifier	output_mode		350859	1					
ANR	351237	PtrMemberAccess	s -> channel_mode		350859	1					
ANR	351238	Identifier	s		350859	0					
ANR	351239	Identifier	channel_mode		350859	1					
ANR	351240	IfStatement	if ( s -> lfe_on )		350859	4					
ANR	351241	Condition	s -> lfe_on	155:11:3140:3148	350859	0	True				
ANR	351242	PtrMemberAccess	s -> lfe_on		350859	0					
ANR	351243	Identifier	s		350859	0					
ANR	351244	Identifier	lfe_on		350859	1					
ANR	351245	ExpressionStatement	s -> output_mode |= AC3_OUTPUT_LFEON	157:12:3164:3198	350859	1	True				
ANR	351246	AssignmentExpression	s -> output_mode |= AC3_OUTPUT_LFEON		350859	0		|=			
ANR	351247	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351248	Identifier	s		350859	0					
ANR	351249	Identifier	output_mode		350859	1					
ANR	351250	Identifier	AC3_OUTPUT_LFEON		350859	1					
ANR	351251	IfStatement	if ( avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels )		350859	5					
ANR	351252	Condition	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels	159:12:3213:3329	350859	0	True				
ANR	351253	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		350859	0		&&			
ANR	351254	RelationalExpression	avctx -> request_channels > 0		350859	0		>			
ANR	351255	PtrMemberAccess	avctx -> request_channels		350859	0					
ANR	351256	Identifier	avctx		350859	0					
ANR	351257	Identifier	request_channels		350859	1					
ANR	351258	PrimaryExpression	0		350859	1					
ANR	351259	AndExpression	avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		350859	1		&&			
ANR	351260	RelationalExpression	avctx -> request_channels <= 2		350859	0		<=			
ANR	351261	PtrMemberAccess	avctx -> request_channels		350859	0					
ANR	351262	Identifier	avctx		350859	0					
ANR	351263	Identifier	request_channels		350859	1					
ANR	351264	PrimaryExpression	2		350859	1					
ANR	351265	RelationalExpression	avctx -> request_channels < s -> channels		350859	1		<			
ANR	351266	PtrMemberAccess	avctx -> request_channels		350859	0					
ANR	351267	Identifier	avctx		350859	0					
ANR	351268	Identifier	request_channels		350859	1					
ANR	351269	PtrMemberAccess	s -> channels		350859	1					
ANR	351270	Identifier	s		350859	0					
ANR	351271	Identifier	channels		350859	1					
ANR	351272	CompoundStatement		157:55:3204:3204	350859	1					
ANR	351273	ExpressionStatement	s -> out_channels = avctx -> request_channels	163:12:3347:3388	350859	0	True				
ANR	351274	AssignmentExpression	s -> out_channels = avctx -> request_channels		350859	0		=			
ANR	351275	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351276	Identifier	s		350859	0					
ANR	351277	Identifier	out_channels		350859	1					
ANR	351278	PtrMemberAccess	avctx -> request_channels		350859	1					
ANR	351279	Identifier	avctx		350859	0					
ANR	351280	Identifier	request_channels		350859	1					
ANR	351281	ExpressionStatement	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	165:12:3403:3487	350859	1	True				
ANR	351282	AssignmentExpression	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		350859	0		=			
ANR	351283	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351284	Identifier	s		350859	0					
ANR	351285	Identifier	output_mode		350859	1					
ANR	351286	ConditionalExpression	avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		350859	1					
ANR	351287	Condition	avctx -> request_channels == 1		350859	0					
ANR	351288	EqualityExpression	avctx -> request_channels == 1		350859	0		==			
ANR	351289	PtrMemberAccess	avctx -> request_channels		350859	0					
ANR	351290	Identifier	avctx		350859	0					
ANR	351291	Identifier	request_channels		350859	1					
ANR	351292	PrimaryExpression	1		350859	1					
ANR	351293	Identifier	AC3_CHMODE_MONO		350859	1					
ANR	351294	Identifier	AC3_CHMODE_STEREO		350859	2					
ANR	351295	ExpressionStatement	s -> channel_layout = ff_ac3_channel_layout_tab [ s -> output_mode ]	167:12:3502:3563	350859	2	True				
ANR	351296	AssignmentExpression	s -> channel_layout = ff_ac3_channel_layout_tab [ s -> output_mode ]		350859	0		=			
ANR	351297	PtrMemberAccess	s -> channel_layout		350859	0					
ANR	351298	Identifier	s		350859	0					
ANR	351299	Identifier	channel_layout		350859	1					
ANR	351300	ArrayIndexing	ff_ac3_channel_layout_tab [ s -> output_mode ]		350859	1					
ANR	351301	Identifier	ff_ac3_channel_layout_tab		350859	0					
ANR	351302	PtrMemberAccess	s -> output_mode		350859	1					
ANR	351303	Identifier	s		350859	0					
ANR	351304	Identifier	output_mode		350859	1					
ANR	351305	ExpressionStatement	avctx -> channels = s -> out_channels	171:8:3585:3618	350859	6	True				
ANR	351306	AssignmentExpression	avctx -> channels = s -> out_channels		350859	0		=			
ANR	351307	PtrMemberAccess	avctx -> channels		350859	0					
ANR	351308	Identifier	avctx		350859	0					
ANR	351309	Identifier	channels		350859	1					
ANR	351310	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351311	Identifier	s		350859	0					
ANR	351312	Identifier	out_channels		350859	1					
ANR	351313	ExpressionStatement	avctx -> channel_layout = s -> channel_layout	173:8:3629:3670	350859	7	True				
ANR	351314	AssignmentExpression	avctx -> channel_layout = s -> channel_layout		350859	0		=			
ANR	351315	PtrMemberAccess	avctx -> channel_layout		350859	0					
ANR	351316	Identifier	avctx		350859	0					
ANR	351317	Identifier	channel_layout		350859	1					
ANR	351318	PtrMemberAccess	s -> channel_layout		350859	1					
ANR	351319	Identifier	s		350859	0					
ANR	351320	Identifier	channel_layout		350859	1					
ANR	351321	IfStatement	if ( s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels ) )		350859	8					
ANR	351322	Condition	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )	179:11:3739:3865	350859	0	True				
ANR	351323	AndExpression	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		350859	0		&&			
ANR	351324	EqualityExpression	s -> channels != s -> out_channels		350859	0		!=			
ANR	351325	PtrMemberAccess	s -> channels		350859	0					
ANR	351326	Identifier	s		350859	0					
ANR	351327	Identifier	channels		350859	1					
ANR	351328	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351329	Identifier	s		350859	0					
ANR	351330	Identifier	out_channels		350859	1					
ANR	351331	UnaryOperationExpression	! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		350859	1					
ANR	351332	UnaryOperator	!		350859	0					
ANR	351333	AndExpression	( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels		350859	1		&&			
ANR	351334	BitAndExpression	s -> output_mode & AC3_OUTPUT_LFEON		350859	0		&			
ANR	351335	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351336	Identifier	s		350859	0					
ANR	351337	Identifier	output_mode		350859	1					
ANR	351338	Identifier	AC3_OUTPUT_LFEON		350859	1					
ANR	351339	EqualityExpression	s -> fbw_channels == s -> out_channels		350859	1		==			
ANR	351340	PtrMemberAccess	s -> fbw_channels		350859	0					
ANR	351341	Identifier	s		350859	0					
ANR	351342	Identifier	fbw_channels		350859	1					
ANR	351343	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351344	Identifier	s		350859	0					
ANR	351345	Identifier	out_channels		350859	1					
ANR	351346	CompoundStatement		177:53:3740:3740	350859	1					
ANR	351347	ExpressionStatement	set_downmix_coeffs ( s )	183:12:3883:3904	350859	0	True				
ANR	351348	CallExpression	set_downmix_coeffs ( s )		350859	0					
ANR	351349	Callee	set_downmix_coeffs		350859	0					
ANR	351350	Identifier	set_downmix_coeffs		350859	0					
ANR	351351	ArgumentList	s		350859	1					
ANR	351352	Argument	s		350859	0					
ANR	351353	Identifier	s		350859	0					
ANR	351354	ElseStatement	else		350859	0					
ANR	351355	IfStatement	if ( ! s -> out_channels )		350859	0					
ANR	351356	Condition	! s -> out_channels	187:15:3933:3948	350859	0	True				
ANR	351357	UnaryOperationExpression	! s -> out_channels		350859	0					
ANR	351358	UnaryOperator	!		350859	0					
ANR	351359	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351360	Identifier	s		350859	0					
ANR	351361	Identifier	out_channels		350859	1					
ANR	351362	CompoundStatement		183:33:3823:3823	350859	1					
ANR	351363	ExpressionStatement	s -> out_channels = avctx -> channels	189:8:3962:3995	350859	0	True				
ANR	351364	AssignmentExpression	s -> out_channels = avctx -> channels		350859	0		=			
ANR	351365	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351366	Identifier	s		350859	0					
ANR	351367	Identifier	out_channels		350859	1					
ANR	351368	PtrMemberAccess	avctx -> channels		350859	1					
ANR	351369	Identifier	avctx		350859	0					
ANR	351370	Identifier	channels		350859	1					
ANR	351371	IfStatement	if ( s -> out_channels < s -> channels )		350859	1					
ANR	351372	Condition	s -> out_channels < s -> channels	191:11:4009:4037	350859	0	True				
ANR	351373	RelationalExpression	s -> out_channels < s -> channels		350859	0		<			
ANR	351374	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351375	Identifier	s		350859	0					
ANR	351376	Identifier	out_channels		350859	1					
ANR	351377	PtrMemberAccess	s -> channels		350859	1					
ANR	351378	Identifier	s		350859	0					
ANR	351379	Identifier	channels		350859	1					
ANR	351380	ExpressionStatement	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	193:12:4053:4129	350859	1	True				
ANR	351381	AssignmentExpression	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		350859	0		=			
ANR	351382	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351383	Identifier	s		350859	0					
ANR	351384	Identifier	output_mode		350859	1					
ANR	351385	ConditionalExpression	s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		350859	1					
ANR	351386	Condition	s -> out_channels == 1		350859	0					
ANR	351387	EqualityExpression	s -> out_channels == 1		350859	0		==			
ANR	351388	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351389	Identifier	s		350859	0					
ANR	351390	Identifier	out_channels		350859	1					
ANR	351391	PrimaryExpression	1		350859	1					
ANR	351392	Identifier	AC3_CHMODE_MONO		350859	1					
ANR	351393	Identifier	AC3_CHMODE_STEREO		350859	2					
ANR	351394	ExpressionStatement	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]	201:4:4180:4263	350859	14	True				
ANR	351395	AssignmentExpression	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		350859	0		=			
ANR	351396	Identifier	channel_map		350859	0					
ANR	351397	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		350859	1					
ANR	351398	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ]		350859	0					
ANR	351399	Identifier	ff_ac3_dec_channel_map		350859	0					
ANR	351400	BitAndExpression	s -> output_mode & ~AC3_OUTPUT_LFEON		350859	1		&			
ANR	351401	PtrMemberAccess	s -> output_mode		350859	0					
ANR	351402	Identifier	s		350859	0					
ANR	351403	Identifier	output_mode		350859	1					
ANR	351404	Identifier	~AC3_OUTPUT_LFEON		350859	1					
ANR	351405	PtrMemberAccess	s -> lfe_on		350859	1					
ANR	351406	Identifier	s		350859	0					
ANR	351407	Identifier	lfe_on		350859	1					
ANR	351408	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		350859	15					
ANR	351409	ForInit	ch = 0 ;	203:9:4275:4281	350859	0	True				
ANR	351410	AssignmentExpression	ch = 0		350859	0		=			
ANR	351411	Identifier	ch		350859	0					
ANR	351412	PrimaryExpression	0		350859	1					
ANR	351413	Condition	ch < s -> out_channels	203:17:4283:4302	350859	1	True				
ANR	351414	RelationalExpression	ch < s -> out_channels		350859	0		<			
ANR	351415	Identifier	ch		350859	0					
ANR	351416	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351417	Identifier	s		350859	0					
ANR	351418	Identifier	out_channels		350859	1					
ANR	351419	PostIncDecOperationExpression	ch ++	203:39:4305:4308	350859	2	True				
ANR	351420	Identifier	ch		350859	0					
ANR	351421	IncDec	++		350859	1					
ANR	351422	ExpressionStatement	output [ ch ] = s -> output [ channel_map [ ch ] ]	205:8:4320:4359	350859	3	True				
ANR	351423	AssignmentExpression	output [ ch ] = s -> output [ channel_map [ ch ] ]		350859	0		=			
ANR	351424	ArrayIndexing	output [ ch ]		350859	0					
ANR	351425	Identifier	output		350859	0					
ANR	351426	Identifier	ch		350859	1					
ANR	351427	ArrayIndexing	s -> output [ channel_map [ ch ] ]		350859	1					
ANR	351428	PtrMemberAccess	s -> output		350859	0					
ANR	351429	Identifier	s		350859	0					
ANR	351430	Identifier	output		350859	1					
ANR	351431	ArrayIndexing	channel_map [ ch ]		350859	1					
ANR	351432	Identifier	channel_map		350859	0					
ANR	351433	Identifier	ch		350859	1					
ANR	351434	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		350859	16					
ANR	351435	ForInit	blk = 0 ;	207:9:4371:4378	350859	0	True				
ANR	351436	AssignmentExpression	blk = 0		350859	0		=			
ANR	351437	Identifier	blk		350859	0					
ANR	351438	PrimaryExpression	0		350859	1					
ANR	351439	Condition	blk < s -> num_blocks	207:18:4380:4398	350859	1	True				
ANR	351440	RelationalExpression	blk < s -> num_blocks		350859	0		<			
ANR	351441	Identifier	blk		350859	0					
ANR	351442	PtrMemberAccess	s -> num_blocks		350859	1					
ANR	351443	Identifier	s		350859	0					
ANR	351444	Identifier	num_blocks		350859	1					
ANR	351445	PostIncDecOperationExpression	blk ++	207:39:4401:4405	350859	2	True				
ANR	351446	Identifier	blk		350859	0					
ANR	351447	IncDec	++		350859	1					
ANR	351448	CompoundStatement		203:46:4280:4280	350859	3					
ANR	351449	IfStatement	"if ( ! err && decode_audio_block ( s , blk ) )"		350859	0					
ANR	351450	Condition	"! err && decode_audio_block ( s , blk )"	209:12:4423:4456	350859	0	True				
ANR	351451	AndExpression	"! err && decode_audio_block ( s , blk )"		350859	0		&&			
ANR	351452	UnaryOperationExpression	! err		350859	0					
ANR	351453	UnaryOperator	!		350859	0					
ANR	351454	Identifier	err		350859	1					
ANR	351455	CallExpression	"decode_audio_block ( s , blk )"		350859	1					
ANR	351456	Callee	decode_audio_block		350859	0					
ANR	351457	Identifier	decode_audio_block		350859	0					
ANR	351458	ArgumentList	s		350859	1					
ANR	351459	Argument	s		350859	0					
ANR	351460	Identifier	s		350859	0					
ANR	351461	Argument	blk		350859	1					
ANR	351462	Identifier	blk		350859	0					
ANR	351463	CompoundStatement		205:48:4331:4331	350859	1					
ANR	351464	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"	211:12:4474:4537	350859	0	True				
ANR	351465	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"		350859	0					
ANR	351466	Callee	av_log		350859	0					
ANR	351467	Identifier	av_log		350859	0					
ANR	351468	ArgumentList	avctx		350859	1					
ANR	351469	Argument	avctx		350859	0					
ANR	351470	Identifier	avctx		350859	0					
ANR	351471	Argument	AV_LOG_ERROR		350859	1					
ANR	351472	Identifier	AV_LOG_ERROR		350859	0					
ANR	351473	Argument	"""error decoding the audio block\\n"""		350859	2					
ANR	351474	PrimaryExpression	"""error decoding the audio block\\n"""		350859	0					
ANR	351475	ExpressionStatement	err = 1	213:12:4552:4559	350859	1	True				
ANR	351476	AssignmentExpression	err = 1		350859	0		=			
ANR	351477	Identifier	err		350859	0					
ANR	351478	PrimaryExpression	1		350859	1					
ANR	351479	ExpressionStatement	"s -> dsp . float_to_int16_interleave ( out_samples , output , 256 , s -> out_channels )"	217:8:4581:4656	350859	1	True				
ANR	351480	CallExpression	"s -> dsp . float_to_int16_interleave ( out_samples , output , 256 , s -> out_channels )"		350859	0					
ANR	351481	Callee	s -> dsp . float_to_int16_interleave		350859	0					
ANR	351482	MemberAccess	s -> dsp . float_to_int16_interleave		350859	0					
ANR	351483	PtrMemberAccess	s -> dsp		350859	0					
ANR	351484	Identifier	s		350859	0					
ANR	351485	Identifier	dsp		350859	1					
ANR	351486	Identifier	float_to_int16_interleave		350859	1					
ANR	351487	ArgumentList	out_samples		350859	1					
ANR	351488	Argument	out_samples		350859	0					
ANR	351489	Identifier	out_samples		350859	0					
ANR	351490	Argument	output		350859	1					
ANR	351491	Identifier	output		350859	0					
ANR	351492	Argument	256		350859	2					
ANR	351493	PrimaryExpression	256		350859	0					
ANR	351494	Argument	s -> out_channels		350859	3					
ANR	351495	PtrMemberAccess	s -> out_channels		350859	0					
ANR	351496	Identifier	s		350859	0					
ANR	351497	Identifier	out_channels		350859	1					
ANR	351498	ExpressionStatement	out_samples += 256 * s -> out_channels	219:8:4667:4703	350859	2	True				
ANR	351499	AssignmentExpression	out_samples += 256 * s -> out_channels		350859	0		+=			
ANR	351500	Identifier	out_samples		350859	0					
ANR	351501	MultiplicativeExpression	256 * s -> out_channels		350859	1		*			
ANR	351502	PrimaryExpression	256		350859	0					
ANR	351503	PtrMemberAccess	s -> out_channels		350859	1					
ANR	351504	Identifier	s		350859	0					
ANR	351505	Identifier	out_channels		350859	1					
ANR	351506	ExpressionStatement	* data_size = s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )	223:4:4717:4786	350859	17	True				
ANR	351507	AssignmentExpression	* data_size = s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )		350859	0		=			
ANR	351508	UnaryOperationExpression	* data_size		350859	0					
ANR	351509	UnaryOperator	*		350859	0					
ANR	351510	Identifier	data_size		350859	1					
ANR	351511	MultiplicativeExpression	s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )		350859	1		*			
ANR	351512	PtrMemberAccess	s -> num_blocks		350859	0					
ANR	351513	Identifier	s		350859	0					
ANR	351514	Identifier	num_blocks		350859	1					
ANR	351515	MultiplicativeExpression	256 * avctx -> channels * sizeof ( int16_t )		350859	1		*			
ANR	351516	PrimaryExpression	256		350859	0					
ANR	351517	MultiplicativeExpression	avctx -> channels * sizeof ( int16_t )		350859	1		*			
ANR	351518	PtrMemberAccess	avctx -> channels		350859	0					
ANR	351519	Identifier	avctx		350859	0					
ANR	351520	Identifier	channels		350859	1					
ANR	351521	SizeofExpression	sizeof ( int16_t )		350859	1					
ANR	351522	Sizeof	sizeof		350859	0					
ANR	351523	SizeofOperand	int16_t		350859	1					
ANR	351524	ReturnStatement	return s -> frame_size ;	225:4:4793:4813	350859	18	True				
ANR	351525	PtrMemberAccess	s -> frame_size		350859	0					
ANR	351526	Identifier	s		350859	0					
ANR	351527	Identifier	frame_size		350859	1					
ANR	351528	ReturnType	static int		350859	1					
ANR	351529	Identifier	ac3_decode_frame		350859	2					
ANR	351530	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		350859	3					
ANR	351531	Parameter	AVCodecContext * avctx	1:28:28:49	350859	0	True				
ANR	351532	ParameterType	AVCodecContext *		350859	0					
ANR	351533	Identifier	avctx		350859	1					
ANR	351534	Parameter	void * data	1:52:52:61	350859	1	True				
ANR	351535	ParameterType	void *		350859	0					
ANR	351536	Identifier	data		350859	1					
ANR	351537	Parameter	int * data_size	1:64:64:77	350859	2	True				
ANR	351538	ParameterType	int *		350859	0					
ANR	351539	Identifier	data_size		350859	1					
ANR	351540	Parameter	AVPacket * avpkt	3:28:109:123	350859	3	True				
ANR	351541	ParameterType	AVPacket *		350859	0					
ANR	351542	Identifier	avpkt		350859	1					
ANR	351543	CFGEntryNode	ENTRY		350859		True				
ANR	351544	CFGExitNode	EXIT		350859		True				
ANR	351545	Symbol	data		350859						
ANR	351546	Symbol	s -> channel_layout		350859						
ANR	351547	Symbol	* ch		350859						
ANR	351548	Symbol	FFMIN		350859						
ANR	351549	Symbol	AAC_AC3_PARSE_ERROR_FRAME_SIZE		350859						
ANR	351550	Symbol	EAC3_FRAME_TYPE_DEPENDENT		350859						
ANR	351551	Symbol	avpkt		350859						
ANR	351552	Symbol	* data_size		350859						
ANR	351553	Symbol	s -> lfe_on		350859						
ANR	351554	Symbol	output		350859						
ANR	351555	Symbol	avctx -> channels		350859						
ANR	351556	Symbol	avctx -> error_recognition		350859						
ANR	351557	Symbol	ff_ac3_dec_channel_map		350859						
ANR	351558	Symbol	AAC_AC3_PARSE_ERROR_CRC		350859						
ANR	351559	Symbol	AC3_CHMODE_STEREO		350859						
ANR	351560	Symbol	s -> channel_mode		350859						
ANR	351561	Symbol	data_size		350859						
ANR	351562	Symbol	AV_CRC_16_ANSI		350859						
ANR	351563	Symbol	FF_ER_CAREFUL		350859						
ANR	351564	Symbol	* channel_map		350859						
ANR	351565	Symbol	buf_size		350859						
ANR	351566	Symbol	s -> input_buffer		350859						
ANR	351567	Symbol	s -> substreamid		350859						
ANR	351568	Symbol	& s -> gbc		350859						
ANR	351569	Symbol	AC3_OUTPUT_LFEON		350859						
ANR	351570	Symbol	s -> bit_rate		350859						
ANR	351571	Symbol	* ~AC3_OUTPUT_LFEON		350859						
ANR	351572	Symbol	s -> dsp		350859						
ANR	351573	Symbol	* * * s		350859						
ANR	351574	Symbol	avctx -> request_channels		350859						
ANR	351575	Symbol	s -> output		350859						
ANR	351576	Symbol	s -> sample_rate		350859						
ANR	351577	Symbol	* avctx		350859						
ANR	351578	Symbol	avctx -> bit_rate		350859						
ANR	351579	Symbol	s -> num_blocks		350859						
ANR	351580	Symbol	decode_audio_block		350859						
ANR	351581	Symbol	avpkt -> data		350859						
ANR	351582	Symbol	s -> frame_size		350859						
ANR	351583	Symbol	~AC3_OUTPUT_LFEON		350859						
ANR	351584	Symbol	s -> fbw_channels		350859						
ANR	351585	Symbol	s -> output_mode		350859						
ANR	351586	Symbol	parse_frame_header		350859						
ANR	351587	Symbol	s -> channels		350859						
ANR	351588	Symbol	* s -> output_mode		350859						
ANR	351589	Symbol	* s -> lfe_on		350859						
ANR	351590	Symbol	s -> out_channels		350859						
ANR	351591	Symbol	* * ch		350859						
ANR	351592	Symbol	* * s -> output_mode		350859						
ANR	351593	Symbol	AC3_FRAME_BUFFER_SIZE		350859						
ANR	351594	Symbol	* * s		350859						
ANR	351595	Symbol	avpkt -> size		350859						
ANR	351596	Symbol	avctx		350859						
ANR	351597	Symbol	blk		350859						
ANR	351598	Symbol	s -> frame_type		350859						
ANR	351599	Symbol	* avpkt		350859						
ANR	351600	Symbol	* ff_ac3_channel_layout_tab		350859						
ANR	351601	Symbol	err		350859						
ANR	351602	Symbol	AV_LOG_ERROR		350859						
ANR	351603	Symbol	ch		350859						
ANR	351604	Symbol	* * ff_ac3_dec_channel_map		350859						
ANR	351605	Symbol	avctx -> channel_layout		350859						
ANR	351606	Symbol	* s -> output		350859						
ANR	351607	Symbol	out_samples		350859						
ANR	351608	Symbol	avctx -> priv_data		350859						
ANR	351609	Symbol	avctx -> sample_rate		350859						
ANR	351610	Symbol	AC3_CHMODE_MONO		350859						
ANR	351611	Symbol	* * ~AC3_OUTPUT_LFEON		350859						
ANR	351612	Symbol	buf		350859						
ANR	351613	Symbol	s		350859						
ANR	351614	Symbol	ff_ac3_channel_layout_tab		350859						
ANR	351615	Symbol	* ff_ac3_dec_channel_map		350859						
ANR	351616	Symbol	av_crc		350859						
ANR	351617	Symbol	channel_map		350859						
ANR	351618	Symbol	* * channel_map		350859						
ANR	351619	Symbol	* s		350859						
ANR	351620	Symbol	av_crc_get_table		350859						
ANR	351621	Symbol	* output		350859						
