command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8920085	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vcr1_decode_frame_1.c								
ANR	8920086	Function	vcr1_decode_frame	1:0:0:2700							
ANR	8920087	FunctionDef	"vcr1_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		8920086	0					
ANR	8920088	CompoundStatement		3:0:126:2700	8920086	0					
ANR	8920089	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	4:4:132:171	8920086	0	True				
ANR	8920090	IdentifierDecl	* buf = avpkt -> data		8920086	0					
ANR	8920091	IdentifierDeclType	const uint8_t *		8920086	0					
ANR	8920092	Identifier	buf		8920086	1					
ANR	8920093	AssignmentExpression	* buf = avpkt -> data		8920086	2		=			
ANR	8920094	Identifier	buf		8920086	0					
ANR	8920095	PtrMemberAccess	avpkt -> data		8920086	1					
ANR	8920096	Identifier	avpkt		8920086	0					
ANR	8920097	Identifier	data		8920086	1					
ANR	8920098	IdentifierDeclStatement	int buf_size = avpkt -> size ;	5:4:177:216	8920086	1	True				
ANR	8920099	IdentifierDecl	buf_size = avpkt -> size		8920086	0					
ANR	8920100	IdentifierDeclType	int		8920086	0					
ANR	8920101	Identifier	buf_size		8920086	1					
ANR	8920102	AssignmentExpression	buf_size = avpkt -> size		8920086	2		=			
ANR	8920103	Identifier	buf_size		8920086	0					
ANR	8920104	PtrMemberAccess	avpkt -> size		8920086	1					
ANR	8920105	Identifier	avpkt		8920086	0					
ANR	8920106	Identifier	size		8920086	1					
ANR	8920107	Statement	VCR1Context	6:4:222:232	8920086	2	True				
ANR	8920108	Statement	*	6:16:234:234	8920086	3	True				
ANR	8920109	Statement	const	6:17:235:239	8920086	4	True				
ANR	8920110	ExpressionStatement	a = avctx -> priv_data	6:23:241:266	8920086	5	True				
ANR	8920111	AssignmentExpression	a = avctx -> priv_data		8920086	0		=			
ANR	8920112	Identifier	a		8920086	0					
ANR	8920113	PtrMemberAccess	avctx -> priv_data		8920086	1					
ANR	8920114	Identifier	avctx		8920086	0					
ANR	8920115	Identifier	priv_data		8920086	1					
ANR	8920116	Statement	AVFrame	7:4:272:278	8920086	6	True				
ANR	8920117	Statement	*	7:12:280:280	8920086	7	True				
ANR	8920118	Statement	const	7:13:281:285	8920086	8	True				
ANR	8920119	ExpressionStatement	p = data	7:19:287:304	8920086	9	True				
ANR	8920120	AssignmentExpression	p = data		8920086	0		=			
ANR	8920121	Identifier	p		8920086	0					
ANR	8920122	Identifier	data		8920086	1					
ANR	8920123	IdentifierDeclStatement	const uint8_t * bytestream = buf ;	8:4:310:341	8920086	10	True				
ANR	8920124	IdentifierDecl	* bytestream = buf		8920086	0					
ANR	8920125	IdentifierDeclType	const uint8_t *		8920086	0					
ANR	8920126	Identifier	bytestream		8920086	1					
ANR	8920127	AssignmentExpression	* bytestream = buf		8920086	2		=			
ANR	8920128	Identifier	buf		8920086	0					
ANR	8920129	Identifier	buf		8920086	1					
ANR	8920130	IdentifierDeclStatement	"int i , x , y , ret ;"	9:4:347:363	8920086	11	True				
ANR	8920131	IdentifierDecl	i		8920086	0					
ANR	8920132	IdentifierDeclType	int		8920086	0					
ANR	8920133	Identifier	i		8920086	1					
ANR	8920134	IdentifierDecl	x		8920086	1					
ANR	8920135	IdentifierDeclType	int		8920086	0					
ANR	8920136	Identifier	x		8920086	1					
ANR	8920137	IdentifierDecl	y		8920086	2					
ANR	8920138	IdentifierDeclType	int		8920086	0					
ANR	8920139	Identifier	y		8920086	1					
ANR	8920140	IdentifierDecl	ret		8920086	3					
ANR	8920141	IdentifierDeclType	int		8920086	0					
ANR	8920142	Identifier	ret		8920086	1					
ANR	8920143	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0 )"		8920086	12					
ANR	8920144	Condition	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"	10:8:373:410	8920086	0	True				
ANR	8920145	RelationalExpression	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"		8920086	0		<			
ANR	8920146	AssignmentExpression	"ret = ff_get_buffer ( avctx , p , 0 )"		8920086	0		=			
ANR	8920147	Identifier	ret		8920086	0					
ANR	8920148	CallExpression	"ff_get_buffer ( avctx , p , 0 )"		8920086	1					
ANR	8920149	Callee	ff_get_buffer		8920086	0					
ANR	8920150	Identifier	ff_get_buffer		8920086	0					
ANR	8920151	ArgumentList	avctx		8920086	1					
ANR	8920152	Argument	avctx		8920086	0					
ANR	8920153	Identifier	avctx		8920086	0					
ANR	8920154	Argument	p		8920086	1					
ANR	8920155	Identifier	p		8920086	0					
ANR	8920156	Argument	0		8920086	2					
ANR	8920157	PrimaryExpression	0		8920086	0					
ANR	8920158	PrimaryExpression	0		8920086	1					
ANR	8920159	CompoundStatement		8:48:286:286	8920086	1					
ANR	8920160	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	11:8:423:475	8920086	0	True				
ANR	8920161	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		8920086	0					
ANR	8920162	Callee	av_log		8920086	0					
ANR	8920163	Identifier	av_log		8920086	0					
ANR	8920164	ArgumentList	avctx		8920086	1					
ANR	8920165	Argument	avctx		8920086	0					
ANR	8920166	Identifier	avctx		8920086	0					
ANR	8920167	Argument	AV_LOG_ERROR		8920086	1					
ANR	8920168	Identifier	AV_LOG_ERROR		8920086	0					
ANR	8920169	Argument	"""get_buffer() failed\\n"""		8920086	2					
ANR	8920170	PrimaryExpression	"""get_buffer() failed\\n"""		8920086	0					
ANR	8920171	ReturnStatement	return ret ;	12:8:485:495	8920086	1	True				
ANR	8920172	Identifier	ret		8920086	0					
ANR	8920173	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	14:4:507:539	8920086	13	True				
ANR	8920174	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		8920086	0		=			
ANR	8920175	PtrMemberAccess	p -> pict_type		8920086	0					
ANR	8920176	Identifier	p		8920086	0					
ANR	8920177	Identifier	pict_type		8920086	1					
ANR	8920178	Identifier	AV_PICTURE_TYPE_I		8920086	1					
ANR	8920179	ExpressionStatement	p -> key_frame = 1	15:4:545:561	8920086	14	True				
ANR	8920180	AssignmentExpression	p -> key_frame = 1		8920086	0		=			
ANR	8920181	PtrMemberAccess	p -> key_frame		8920086	0					
ANR	8920182	Identifier	p		8920086	0					
ANR	8920183	Identifier	key_frame		8920086	1					
ANR	8920184	PrimaryExpression	1		8920086	1					
ANR	8920185	IfStatement	if ( buf_size < 32 )		8920086	15					
ANR	8920186	Condition	buf_size < 32	16:8:571:583	8920086	0	True				
ANR	8920187	RelationalExpression	buf_size < 32		8920086	0		<			
ANR	8920188	Identifier	buf_size		8920086	0					
ANR	8920189	PrimaryExpression	32		8920086	1					
ANR	8920190	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		8920086	1					
ANR	8920191	ForInit	i = 0 ;	17:9:595:600	8920086	0	True				
ANR	8920192	AssignmentExpression	i = 0		8920086	0		=			
ANR	8920193	Identifier	i		8920086	0					
ANR	8920194	PrimaryExpression	0		8920086	1					
ANR	8920195	Condition	i < 16	17:16:602:607	8920086	1	True				
ANR	8920196	RelationalExpression	i < 16		8920086	0		<			
ANR	8920197	Identifier	i		8920086	0					
ANR	8920198	PrimaryExpression	16		8920086	1					
ANR	8920199	PostIncDecOperationExpression	i ++	17:24:610:612	8920086	2	True				
ANR	8920200	Identifier	i		8920086	0					
ANR	8920201	IncDec	++		8920086	1					
ANR	8920202	CompoundStatement		15:29:488:488	8920086	3					
ANR	8920203	ExpressionStatement	a -> delta [ i ] = * bytestream ++	18:8:625:652	8920086	0	True				
ANR	8920204	AssignmentExpression	a -> delta [ i ] = * bytestream ++		8920086	0		=			
ANR	8920205	ArrayIndexing	a -> delta [ i ]		8920086	0					
ANR	8920206	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920207	Identifier	a		8920086	0					
ANR	8920208	Identifier	delta		8920086	1					
ANR	8920209	Identifier	i		8920086	1					
ANR	8920210	UnaryOperationExpression	* bytestream ++		8920086	1					
ANR	8920211	UnaryOperator	*		8920086	0					
ANR	8920212	PostIncDecOperationExpression	bytestream ++		8920086	1					
ANR	8920213	Identifier	bytestream		8920086	0					
ANR	8920214	IncDec	++		8920086	1					
ANR	8920215	ExpressionStatement	bytestream ++	19:8:662:674	8920086	1	True				
ANR	8920216	PostIncDecOperationExpression	bytestream ++		8920086	0					
ANR	8920217	Identifier	bytestream		8920086	0					
ANR	8920218	IncDec	++		8920086	1					
ANR	8920219	ExpressionStatement	buf_size --	20:8:684:694	8920086	2	True				
ANR	8920220	PostIncDecOperationExpression	buf_size --		8920086	0					
ANR	8920221	Identifier	buf_size		8920086	0					
ANR	8920222	IncDec	--		8920086	1					
ANR	8920223	ForStatement	for ( y = 0 ; y < avctx -> height ; y ++ )		8920086	16					
ANR	8920224	ForInit	y = 0 ;	22:9:711:716	8920086	0	True				
ANR	8920225	AssignmentExpression	y = 0		8920086	0		=			
ANR	8920226	Identifier	y		8920086	0					
ANR	8920227	PrimaryExpression	0		8920086	1					
ANR	8920228	Condition	y < avctx -> height	22:16:718:734	8920086	1	True				
ANR	8920229	RelationalExpression	y < avctx -> height		8920086	0		<			
ANR	8920230	Identifier	y		8920086	0					
ANR	8920231	PtrMemberAccess	avctx -> height		8920086	1					
ANR	8920232	Identifier	avctx		8920086	0					
ANR	8920233	Identifier	height		8920086	1					
ANR	8920234	PostIncDecOperationExpression	y ++	22:35:737:739	8920086	2	True				
ANR	8920235	Identifier	y		8920086	0					
ANR	8920236	IncDec	++		8920086	1					
ANR	8920237	CompoundStatement		22:8:645:692	8920086	3					
ANR	8920238	IdentifierDeclStatement	int offset ;	23:8:752:762	8920086	0	True				
ANR	8920239	IdentifierDecl	offset		8920086	0					
ANR	8920240	IdentifierDeclType	int		8920086	0					
ANR	8920241	Identifier	offset		8920086	1					
ANR	8920242	IdentifierDeclStatement	uint8_t * luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ] ;	24:8:772:819	8920086	1	True				
ANR	8920243	IdentifierDecl	* luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8920086	0					
ANR	8920244	IdentifierDeclType	uint8_t *		8920086	0					
ANR	8920245	Identifier	luma		8920086	1					
ANR	8920246	AssignmentExpression	* luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8920086	2		=			
ANR	8920247	Identifier	luma		8920086	0					
ANR	8920248	UnaryOperationExpression	& p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8920086	1					
ANR	8920249	UnaryOperator	&		8920086	0					
ANR	8920250	ArrayIndexing	p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8920086	1					
ANR	8920251	ArrayIndexing	p -> data [ 0 ]		8920086	0					
ANR	8920252	PtrMemberAccess	p -> data		8920086	0					
ANR	8920253	Identifier	p		8920086	0					
ANR	8920254	Identifier	data		8920086	1					
ANR	8920255	PrimaryExpression	0		8920086	1					
ANR	8920256	MultiplicativeExpression	y * p -> linesize [ 0 ]		8920086	1		*			
ANR	8920257	Identifier	y		8920086	0					
ANR	8920258	ArrayIndexing	p -> linesize [ 0 ]		8920086	1					
ANR	8920259	PtrMemberAccess	p -> linesize		8920086	0					
ANR	8920260	Identifier	p		8920086	0					
ANR	8920261	Identifier	linesize		8920086	1					
ANR	8920262	PrimaryExpression	0		8920086	1					
ANR	8920263	IfStatement	if ( ( y & 3 ) == 0 )		8920086	2					
ANR	8920264	Condition	( y & 3 ) == 0	25:12:833:844	8920086	0	True				
ANR	8920265	EqualityExpression	( y & 3 ) == 0		8920086	0		==			
ANR	8920266	BitAndExpression	y & 3		8920086	0		&			
ANR	8920267	Identifier	y		8920086	0					
ANR	8920268	PrimaryExpression	3		8920086	1					
ANR	8920269	PrimaryExpression	0		8920086	1					
ANR	8920270	CompoundStatement		25:12:800:852	8920086	1					
ANR	8920271	IdentifierDeclStatement	uint8_t * cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ] ;	26:12:861:913	8920086	0	True				
ANR	8920272	IdentifierDecl	* cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8920086	0					
ANR	8920273	IdentifierDeclType	uint8_t *		8920086	0					
ANR	8920274	Identifier	cb		8920086	1					
ANR	8920275	AssignmentExpression	* cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8920086	2		=			
ANR	8920276	Identifier	cb		8920086	0					
ANR	8920277	UnaryOperationExpression	& p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8920086	1					
ANR	8920278	UnaryOperator	&		8920086	0					
ANR	8920279	ArrayIndexing	p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8920086	1					
ANR	8920280	ArrayIndexing	p -> data [ 1 ]		8920086	0					
ANR	8920281	PtrMemberAccess	p -> data		8920086	0					
ANR	8920282	Identifier	p		8920086	0					
ANR	8920283	Identifier	data		8920086	1					
ANR	8920284	PrimaryExpression	1		8920086	1					
ANR	8920285	MultiplicativeExpression	( y >> 2 ) * p -> linesize [ 1 ]		8920086	1		*			
ANR	8920286	ShiftExpression	y >> 2		8920086	0		>>			
ANR	8920287	Identifier	y		8920086	0					
ANR	8920288	PrimaryExpression	2		8920086	1					
ANR	8920289	ArrayIndexing	p -> linesize [ 1 ]		8920086	1					
ANR	8920290	PtrMemberAccess	p -> linesize		8920086	0					
ANR	8920291	Identifier	p		8920086	0					
ANR	8920292	Identifier	linesize		8920086	1					
ANR	8920293	PrimaryExpression	1		8920086	1					
ANR	8920294	IdentifierDeclStatement	uint8_t * cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ] ;	27:12:927:979	8920086	1	True				
ANR	8920295	IdentifierDecl	* cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8920086	0					
ANR	8920296	IdentifierDeclType	uint8_t *		8920086	0					
ANR	8920297	Identifier	cr		8920086	1					
ANR	8920298	AssignmentExpression	* cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8920086	2		=			
ANR	8920299	Identifier	cr		8920086	0					
ANR	8920300	UnaryOperationExpression	& p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8920086	1					
ANR	8920301	UnaryOperator	&		8920086	0					
ANR	8920302	ArrayIndexing	p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8920086	1					
ANR	8920303	ArrayIndexing	p -> data [ 2 ]		8920086	0					
ANR	8920304	PtrMemberAccess	p -> data		8920086	0					
ANR	8920305	Identifier	p		8920086	0					
ANR	8920306	Identifier	data		8920086	1					
ANR	8920307	PrimaryExpression	2		8920086	1					
ANR	8920308	MultiplicativeExpression	( y >> 2 ) * p -> linesize [ 2 ]		8920086	1		*			
ANR	8920309	ShiftExpression	y >> 2		8920086	0		>>			
ANR	8920310	Identifier	y		8920086	0					
ANR	8920311	PrimaryExpression	2		8920086	1					
ANR	8920312	ArrayIndexing	p -> linesize [ 2 ]		8920086	1					
ANR	8920313	PtrMemberAccess	p -> linesize		8920086	0					
ANR	8920314	Identifier	p		8920086	0					
ANR	8920315	Identifier	linesize		8920086	1					
ANR	8920316	PrimaryExpression	2		8920086	1					
ANR	8920317	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8920086	2					
ANR	8920318	ForInit	i = 0 ;	28:17:998:1003	8920086	0	True				
ANR	8920319	AssignmentExpression	i = 0		8920086	0		=			
ANR	8920320	Identifier	i		8920086	0					
ANR	8920321	PrimaryExpression	0		8920086	1					
ANR	8920322	Condition	i < 4	28:24:1005:1009	8920086	1	True				
ANR	8920323	RelationalExpression	i < 4		8920086	0		<			
ANR	8920324	Identifier	i		8920086	0					
ANR	8920325	PrimaryExpression	4		8920086	1					
ANR	8920326	PostIncDecOperationExpression	i ++	28:31:1012:1014	8920086	2	True				
ANR	8920327	Identifier	i		8920086	0					
ANR	8920328	IncDec	++		8920086	1					
ANR	8920329	ExpressionStatement	a -> offset [ i ] = * bytestream ++	29:16:1033:1061	8920086	3	True				
ANR	8920330	AssignmentExpression	a -> offset [ i ] = * bytestream ++		8920086	0		=			
ANR	8920331	ArrayIndexing	a -> offset [ i ]		8920086	0					
ANR	8920332	PtrMemberAccess	a -> offset		8920086	0					
ANR	8920333	Identifier	a		8920086	0					
ANR	8920334	Identifier	offset		8920086	1					
ANR	8920335	Identifier	i		8920086	1					
ANR	8920336	UnaryOperationExpression	* bytestream ++		8920086	1					
ANR	8920337	UnaryOperator	*		8920086	0					
ANR	8920338	PostIncDecOperationExpression	bytestream ++		8920086	1					
ANR	8920339	Identifier	bytestream		8920086	0					
ANR	8920340	IncDec	++		8920086	1					
ANR	8920341	ExpressionStatement	offset = a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]	30:12:1075:1128	8920086	3	True				
ANR	8920342	AssignmentExpression	offset = a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	0		=			
ANR	8920343	Identifier	offset		8920086	0					
ANR	8920344	AdditiveExpression	a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1		-			
ANR	8920345	ArrayIndexing	a -> offset [ 0 ]		8920086	0					
ANR	8920346	PtrMemberAccess	a -> offset		8920086	0					
ANR	8920347	Identifier	a		8920086	0					
ANR	8920348	Identifier	offset		8920086	1					
ANR	8920349	PrimaryExpression	0		8920086	1					
ANR	8920350	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1					
ANR	8920351	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920352	Identifier	a		8920086	0					
ANR	8920353	Identifier	delta		8920086	1					
ANR	8920354	BitAndExpression	bytestream [ 2 ] & 0xF		8920086	1		&			
ANR	8920355	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920356	Identifier	bytestream		8920086	0					
ANR	8920357	PrimaryExpression	2		8920086	1					
ANR	8920358	PrimaryExpression	0xF		8920086	1					
ANR	8920359	ForStatement	for ( x = 0 ; x < avctx -> width ; x += 4 )		8920086	4					
ANR	8920360	ForInit	x = 0 ;	31:17:1147:1152	8920086	0	True				
ANR	8920361	AssignmentExpression	x = 0		8920086	0		=			
ANR	8920362	Identifier	x		8920086	0					
ANR	8920363	PrimaryExpression	0		8920086	1					
ANR	8920364	Condition	x < avctx -> width	31:24:1154:1169	8920086	1	True				
ANR	8920365	RelationalExpression	x < avctx -> width		8920086	0		<			
ANR	8920366	Identifier	x		8920086	0					
ANR	8920367	PtrMemberAccess	avctx -> width		8920086	1					
ANR	8920368	Identifier	avctx		8920086	0					
ANR	8920369	Identifier	width		8920086	1					
ANR	8920370	AssignmentExpression	x += 4	31:42:1172:1177	8920086	2	True	+=			
ANR	8920371	Identifier	x		8920086	0					
ANR	8920372	PrimaryExpression	4		8920086	1					
ANR	8920373	CompoundStatement		29:50:1053:1053	8920086	3					
ANR	8920374	ExpressionStatement	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]	32:16:1198:1251	8920086	0	True				
ANR	8920375	AssignmentExpression	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	0		=			
ANR	8920376	ArrayIndexing	luma [ 0 ]		8920086	0					
ANR	8920377	Identifier	luma		8920086	0					
ANR	8920378	PrimaryExpression	0		8920086	1					
ANR	8920379	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1		+=			
ANR	8920380	Identifier	offset		8920086	0					
ANR	8920381	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1					
ANR	8920382	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920383	Identifier	a		8920086	0					
ANR	8920384	Identifier	delta		8920086	1					
ANR	8920385	BitAndExpression	bytestream [ 2 ] & 0xF		8920086	1		&			
ANR	8920386	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920387	Identifier	bytestream		8920086	0					
ANR	8920388	PrimaryExpression	2		8920086	1					
ANR	8920389	PrimaryExpression	0xF		8920086	1					
ANR	8920390	ExpressionStatement	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]	33:16:1269:1322	8920086	1	True				
ANR	8920391	AssignmentExpression	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	0		=			
ANR	8920392	ArrayIndexing	luma [ 1 ]		8920086	0					
ANR	8920393	Identifier	luma		8920086	0					
ANR	8920394	PrimaryExpression	1		8920086	1					
ANR	8920395	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	1		+=			
ANR	8920396	Identifier	offset		8920086	0					
ANR	8920397	ArrayIndexing	a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	1					
ANR	8920398	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920399	Identifier	a		8920086	0					
ANR	8920400	Identifier	delta		8920086	1					
ANR	8920401	ShiftExpression	bytestream [ 2 ] >> 4		8920086	1		>>			
ANR	8920402	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920403	Identifier	bytestream		8920086	0					
ANR	8920404	PrimaryExpression	2		8920086	1					
ANR	8920405	PrimaryExpression	4		8920086	1					
ANR	8920406	ExpressionStatement	luma [ 2 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]	34:16:1340:1393	8920086	2	True				
ANR	8920407	AssignmentExpression	luma [ 2 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	0		=			
ANR	8920408	ArrayIndexing	luma [ 2 ]		8920086	0					
ANR	8920409	Identifier	luma		8920086	0					
ANR	8920410	PrimaryExpression	2		8920086	1					
ANR	8920411	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	1		+=			
ANR	8920412	Identifier	offset		8920086	0					
ANR	8920413	ArrayIndexing	a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	1					
ANR	8920414	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920415	Identifier	a		8920086	0					
ANR	8920416	Identifier	delta		8920086	1					
ANR	8920417	BitAndExpression	bytestream [ 0 ] & 0xF		8920086	1		&			
ANR	8920418	ArrayIndexing	bytestream [ 0 ]		8920086	0					
ANR	8920419	Identifier	bytestream		8920086	0					
ANR	8920420	PrimaryExpression	0		8920086	1					
ANR	8920421	PrimaryExpression	0xF		8920086	1					
ANR	8920422	ExpressionStatement	luma [ 3 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]	35:16:1411:1464	8920086	3	True				
ANR	8920423	AssignmentExpression	luma [ 3 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	0		=			
ANR	8920424	ArrayIndexing	luma [ 3 ]		8920086	0					
ANR	8920425	Identifier	luma		8920086	0					
ANR	8920426	PrimaryExpression	3		8920086	1					
ANR	8920427	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	1		+=			
ANR	8920428	Identifier	offset		8920086	0					
ANR	8920429	ArrayIndexing	a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	1					
ANR	8920430	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920431	Identifier	a		8920086	0					
ANR	8920432	Identifier	delta		8920086	1					
ANR	8920433	ShiftExpression	bytestream [ 0 ] >> 4		8920086	1		>>			
ANR	8920434	ArrayIndexing	bytestream [ 0 ]		8920086	0					
ANR	8920435	Identifier	bytestream		8920086	0					
ANR	8920436	PrimaryExpression	0		8920086	1					
ANR	8920437	PrimaryExpression	4		8920086	1					
ANR	8920438	ExpressionStatement	luma += 4	36:16:1482:1497	8920086	4	True				
ANR	8920439	AssignmentExpression	luma += 4		8920086	0		+=			
ANR	8920440	Identifier	luma		8920086	0					
ANR	8920441	PrimaryExpression	4		8920086	1					
ANR	8920442	ExpressionStatement	* cb ++ = bytestream [ 3 ]	37:16:1515:1542	8920086	5	True				
ANR	8920443	AssignmentExpression	* cb ++ = bytestream [ 3 ]		8920086	0		=			
ANR	8920444	UnaryOperationExpression	* cb ++		8920086	0					
ANR	8920445	UnaryOperator	*		8920086	0					
ANR	8920446	PostIncDecOperationExpression	cb ++		8920086	1					
ANR	8920447	Identifier	cb		8920086	0					
ANR	8920448	IncDec	++		8920086	1					
ANR	8920449	ArrayIndexing	bytestream [ 3 ]		8920086	1					
ANR	8920450	Identifier	bytestream		8920086	0					
ANR	8920451	PrimaryExpression	3		8920086	1					
ANR	8920452	ExpressionStatement	* cr ++ = bytestream [ 1 ]	38:16:1560:1587	8920086	6	True				
ANR	8920453	AssignmentExpression	* cr ++ = bytestream [ 1 ]		8920086	0		=			
ANR	8920454	UnaryOperationExpression	* cr ++		8920086	0					
ANR	8920455	UnaryOperator	*		8920086	0					
ANR	8920456	PostIncDecOperationExpression	cr ++		8920086	1					
ANR	8920457	Identifier	cr		8920086	0					
ANR	8920458	IncDec	++		8920086	1					
ANR	8920459	ArrayIndexing	bytestream [ 1 ]		8920086	1					
ANR	8920460	Identifier	bytestream		8920086	0					
ANR	8920461	PrimaryExpression	1		8920086	1					
ANR	8920462	ExpressionStatement	bytestream += 4	39:16:1605:1620	8920086	7	True				
ANR	8920463	AssignmentExpression	bytestream += 4		8920086	0		+=			
ANR	8920464	Identifier	bytestream		8920086	0					
ANR	8920465	PrimaryExpression	4		8920086	1					
ANR	8920466	ExpressionStatement	buf_size -= 4	40:16:1638:1653	8920086	8	True				
ANR	8920467	AssignmentExpression	buf_size -= 4		8920086	0		-=			
ANR	8920468	Identifier	buf_size		8920086	0					
ANR	8920469	PrimaryExpression	4		8920086	1					
ANR	8920470	ElseStatement	else		8920086	0					
ANR	8920471	CompoundStatement		40:15:1557:1557	8920086	0					
ANR	8920472	IfStatement	if ( buf_size < avctx -> width / 2 )		8920086	0					
ANR	8920473	Condition	buf_size < avctx -> width / 2	43:16:1702:1728	8920086	0	True				
ANR	8920474	RelationalExpression	buf_size < avctx -> width / 2		8920086	0		<			
ANR	8920475	Identifier	buf_size		8920086	0					
ANR	8920476	MultiplicativeExpression	avctx -> width / 2		8920086	1		/			
ANR	8920477	PtrMemberAccess	avctx -> width		8920086	0					
ANR	8920478	Identifier	avctx		8920086	0					
ANR	8920479	Identifier	width		8920086	1					
ANR	8920480	PrimaryExpression	2		8920086	1					
ANR	8920481	ExpressionStatement	offset = a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]	44:12:1743:1800	8920086	1	True				
ANR	8920482	AssignmentExpression	offset = a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	0		=			
ANR	8920483	Identifier	offset		8920086	0					
ANR	8920484	AdditiveExpression	a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1		-			
ANR	8920485	ArrayIndexing	a -> offset [ y & 3 ]		8920086	0					
ANR	8920486	PtrMemberAccess	a -> offset		8920086	0					
ANR	8920487	Identifier	a		8920086	0					
ANR	8920488	Identifier	offset		8920086	1					
ANR	8920489	BitAndExpression	y & 3		8920086	1		&			
ANR	8920490	Identifier	y		8920086	0					
ANR	8920491	PrimaryExpression	3		8920086	1					
ANR	8920492	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1					
ANR	8920493	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920494	Identifier	a		8920086	0					
ANR	8920495	Identifier	delta		8920086	1					
ANR	8920496	BitAndExpression	bytestream [ 2 ] & 0xF		8920086	1		&			
ANR	8920497	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920498	Identifier	bytestream		8920086	0					
ANR	8920499	PrimaryExpression	2		8920086	1					
ANR	8920500	PrimaryExpression	0xF		8920086	1					
ANR	8920501	ForStatement	for ( x = 0 ; x < avctx -> width ; x += 8 )		8920086	1					
ANR	8920502	ForInit	x = 0 ;	45:17:1819:1824	8920086	0	True				
ANR	8920503	AssignmentExpression	x = 0		8920086	0		=			
ANR	8920504	Identifier	x		8920086	0					
ANR	8920505	PrimaryExpression	0		8920086	1					
ANR	8920506	Condition	x < avctx -> width	45:24:1826:1841	8920086	1	True				
ANR	8920507	RelationalExpression	x < avctx -> width		8920086	0		<			
ANR	8920508	Identifier	x		8920086	0					
ANR	8920509	PtrMemberAccess	avctx -> width		8920086	1					
ANR	8920510	Identifier	avctx		8920086	0					
ANR	8920511	Identifier	width		8920086	1					
ANR	8920512	AssignmentExpression	x += 8	45:42:1844:1849	8920086	2	True	+=			
ANR	8920513	Identifier	x		8920086	0					
ANR	8920514	PrimaryExpression	8		8920086	1					
ANR	8920515	CompoundStatement		43:50:1725:1725	8920086	3					
ANR	8920516	ExpressionStatement	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]	46:16:1870:1923	8920086	0	True				
ANR	8920517	AssignmentExpression	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	0		=			
ANR	8920518	ArrayIndexing	luma [ 0 ]		8920086	0					
ANR	8920519	Identifier	luma		8920086	0					
ANR	8920520	PrimaryExpression	0		8920086	1					
ANR	8920521	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1		+=			
ANR	8920522	Identifier	offset		8920086	0					
ANR	8920523	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8920086	1					
ANR	8920524	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920525	Identifier	a		8920086	0					
ANR	8920526	Identifier	delta		8920086	1					
ANR	8920527	BitAndExpression	bytestream [ 2 ] & 0xF		8920086	1		&			
ANR	8920528	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920529	Identifier	bytestream		8920086	0					
ANR	8920530	PrimaryExpression	2		8920086	1					
ANR	8920531	PrimaryExpression	0xF		8920086	1					
ANR	8920532	ExpressionStatement	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]	47:16:1941:1994	8920086	1	True				
ANR	8920533	AssignmentExpression	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	0		=			
ANR	8920534	ArrayIndexing	luma [ 1 ]		8920086	0					
ANR	8920535	Identifier	luma		8920086	0					
ANR	8920536	PrimaryExpression	1		8920086	1					
ANR	8920537	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	1		+=			
ANR	8920538	Identifier	offset		8920086	0					
ANR	8920539	ArrayIndexing	a -> delta [ bytestream [ 2 ] >> 4 ]		8920086	1					
ANR	8920540	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920541	Identifier	a		8920086	0					
ANR	8920542	Identifier	delta		8920086	1					
ANR	8920543	ShiftExpression	bytestream [ 2 ] >> 4		8920086	1		>>			
ANR	8920544	ArrayIndexing	bytestream [ 2 ]		8920086	0					
ANR	8920545	Identifier	bytestream		8920086	0					
ANR	8920546	PrimaryExpression	2		8920086	1					
ANR	8920547	PrimaryExpression	4		8920086	1					
ANR	8920548	ExpressionStatement	luma [ 2 ] = offset += a -> delta [ bytestream [ 3 ] & 0xF ]	48:16:2012:2065	8920086	2	True				
ANR	8920549	AssignmentExpression	luma [ 2 ] = offset += a -> delta [ bytestream [ 3 ] & 0xF ]		8920086	0		=			
ANR	8920550	ArrayIndexing	luma [ 2 ]		8920086	0					
ANR	8920551	Identifier	luma		8920086	0					
ANR	8920552	PrimaryExpression	2		8920086	1					
ANR	8920553	AssignmentExpression	offset += a -> delta [ bytestream [ 3 ] & 0xF ]		8920086	1		+=			
ANR	8920554	Identifier	offset		8920086	0					
ANR	8920555	ArrayIndexing	a -> delta [ bytestream [ 3 ] & 0xF ]		8920086	1					
ANR	8920556	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920557	Identifier	a		8920086	0					
ANR	8920558	Identifier	delta		8920086	1					
ANR	8920559	BitAndExpression	bytestream [ 3 ] & 0xF		8920086	1		&			
ANR	8920560	ArrayIndexing	bytestream [ 3 ]		8920086	0					
ANR	8920561	Identifier	bytestream		8920086	0					
ANR	8920562	PrimaryExpression	3		8920086	1					
ANR	8920563	PrimaryExpression	0xF		8920086	1					
ANR	8920564	ExpressionStatement	luma [ 3 ] = offset += a -> delta [ bytestream [ 3 ] >> 4 ]	49:16:2083:2136	8920086	3	True				
ANR	8920565	AssignmentExpression	luma [ 3 ] = offset += a -> delta [ bytestream [ 3 ] >> 4 ]		8920086	0		=			
ANR	8920566	ArrayIndexing	luma [ 3 ]		8920086	0					
ANR	8920567	Identifier	luma		8920086	0					
ANR	8920568	PrimaryExpression	3		8920086	1					
ANR	8920569	AssignmentExpression	offset += a -> delta [ bytestream [ 3 ] >> 4 ]		8920086	1		+=			
ANR	8920570	Identifier	offset		8920086	0					
ANR	8920571	ArrayIndexing	a -> delta [ bytestream [ 3 ] >> 4 ]		8920086	1					
ANR	8920572	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920573	Identifier	a		8920086	0					
ANR	8920574	Identifier	delta		8920086	1					
ANR	8920575	ShiftExpression	bytestream [ 3 ] >> 4		8920086	1		>>			
ANR	8920576	ArrayIndexing	bytestream [ 3 ]		8920086	0					
ANR	8920577	Identifier	bytestream		8920086	0					
ANR	8920578	PrimaryExpression	3		8920086	1					
ANR	8920579	PrimaryExpression	4		8920086	1					
ANR	8920580	ExpressionStatement	luma [ 4 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]	50:16:2154:2207	8920086	4	True				
ANR	8920581	AssignmentExpression	luma [ 4 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	0		=			
ANR	8920582	ArrayIndexing	luma [ 4 ]		8920086	0					
ANR	8920583	Identifier	luma		8920086	0					
ANR	8920584	PrimaryExpression	4		8920086	1					
ANR	8920585	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	1		+=			
ANR	8920586	Identifier	offset		8920086	0					
ANR	8920587	ArrayIndexing	a -> delta [ bytestream [ 0 ] & 0xF ]		8920086	1					
ANR	8920588	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920589	Identifier	a		8920086	0					
ANR	8920590	Identifier	delta		8920086	1					
ANR	8920591	BitAndExpression	bytestream [ 0 ] & 0xF		8920086	1		&			
ANR	8920592	ArrayIndexing	bytestream [ 0 ]		8920086	0					
ANR	8920593	Identifier	bytestream		8920086	0					
ANR	8920594	PrimaryExpression	0		8920086	1					
ANR	8920595	PrimaryExpression	0xF		8920086	1					
ANR	8920596	ExpressionStatement	luma [ 5 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]	51:16:2225:2278	8920086	5	True				
ANR	8920597	AssignmentExpression	luma [ 5 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	0		=			
ANR	8920598	ArrayIndexing	luma [ 5 ]		8920086	0					
ANR	8920599	Identifier	luma		8920086	0					
ANR	8920600	PrimaryExpression	5		8920086	1					
ANR	8920601	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	1		+=			
ANR	8920602	Identifier	offset		8920086	0					
ANR	8920603	ArrayIndexing	a -> delta [ bytestream [ 0 ] >> 4 ]		8920086	1					
ANR	8920604	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920605	Identifier	a		8920086	0					
ANR	8920606	Identifier	delta		8920086	1					
ANR	8920607	ShiftExpression	bytestream [ 0 ] >> 4		8920086	1		>>			
ANR	8920608	ArrayIndexing	bytestream [ 0 ]		8920086	0					
ANR	8920609	Identifier	bytestream		8920086	0					
ANR	8920610	PrimaryExpression	0		8920086	1					
ANR	8920611	PrimaryExpression	4		8920086	1					
ANR	8920612	ExpressionStatement	luma [ 6 ] = offset += a -> delta [ bytestream [ 1 ] & 0xF ]	52:16:2296:2349	8920086	6	True				
ANR	8920613	AssignmentExpression	luma [ 6 ] = offset += a -> delta [ bytestream [ 1 ] & 0xF ]		8920086	0		=			
ANR	8920614	ArrayIndexing	luma [ 6 ]		8920086	0					
ANR	8920615	Identifier	luma		8920086	0					
ANR	8920616	PrimaryExpression	6		8920086	1					
ANR	8920617	AssignmentExpression	offset += a -> delta [ bytestream [ 1 ] & 0xF ]		8920086	1		+=			
ANR	8920618	Identifier	offset		8920086	0					
ANR	8920619	ArrayIndexing	a -> delta [ bytestream [ 1 ] & 0xF ]		8920086	1					
ANR	8920620	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920621	Identifier	a		8920086	0					
ANR	8920622	Identifier	delta		8920086	1					
ANR	8920623	BitAndExpression	bytestream [ 1 ] & 0xF		8920086	1		&			
ANR	8920624	ArrayIndexing	bytestream [ 1 ]		8920086	0					
ANR	8920625	Identifier	bytestream		8920086	0					
ANR	8920626	PrimaryExpression	1		8920086	1					
ANR	8920627	PrimaryExpression	0xF		8920086	1					
ANR	8920628	ExpressionStatement	luma [ 7 ] = offset += a -> delta [ bytestream [ 1 ] >> 4 ]	53:16:2367:2420	8920086	7	True				
ANR	8920629	AssignmentExpression	luma [ 7 ] = offset += a -> delta [ bytestream [ 1 ] >> 4 ]		8920086	0		=			
ANR	8920630	ArrayIndexing	luma [ 7 ]		8920086	0					
ANR	8920631	Identifier	luma		8920086	0					
ANR	8920632	PrimaryExpression	7		8920086	1					
ANR	8920633	AssignmentExpression	offset += a -> delta [ bytestream [ 1 ] >> 4 ]		8920086	1		+=			
ANR	8920634	Identifier	offset		8920086	0					
ANR	8920635	ArrayIndexing	a -> delta [ bytestream [ 1 ] >> 4 ]		8920086	1					
ANR	8920636	PtrMemberAccess	a -> delta		8920086	0					
ANR	8920637	Identifier	a		8920086	0					
ANR	8920638	Identifier	delta		8920086	1					
ANR	8920639	ShiftExpression	bytestream [ 1 ] >> 4		8920086	1		>>			
ANR	8920640	ArrayIndexing	bytestream [ 1 ]		8920086	0					
ANR	8920641	Identifier	bytestream		8920086	0					
ANR	8920642	PrimaryExpression	1		8920086	1					
ANR	8920643	PrimaryExpression	4		8920086	1					
ANR	8920644	ExpressionStatement	luma += 8	54:16:2438:2453	8920086	8	True				
ANR	8920645	AssignmentExpression	luma += 8		8920086	0		+=			
ANR	8920646	Identifier	luma		8920086	0					
ANR	8920647	PrimaryExpression	8		8920086	1					
ANR	8920648	ExpressionStatement	bytestream += 4	55:16:2471:2486	8920086	9	True				
ANR	8920649	AssignmentExpression	bytestream += 4		8920086	0		+=			
ANR	8920650	Identifier	bytestream		8920086	0					
ANR	8920651	PrimaryExpression	4		8920086	1					
ANR	8920652	ExpressionStatement	buf_size -= 4	56:16:2504:2519	8920086	10	True				
ANR	8920653	AssignmentExpression	buf_size -= 4		8920086	0		-=			
ANR	8920654	Identifier	buf_size		8920086	0					
ANR	8920655	PrimaryExpression	4		8920086	1					
ANR	8920656	ExpressionStatement	* got_frame = 1	60:4:2555:2569	8920086	17	True				
ANR	8920657	AssignmentExpression	* got_frame = 1		8920086	0		=			
ANR	8920658	UnaryOperationExpression	* got_frame		8920086	0					
ANR	8920659	UnaryOperator	*		8920086	0					
ANR	8920660	Identifier	got_frame		8920086	1					
ANR	8920661	PrimaryExpression	1		8920086	1					
ANR	8920662	ReturnStatement	return buf_size ;	61:4:2575:2590	8920086	18	True				
ANR	8920663	Identifier	buf_size		8920086	0					
ANR	8920664	Label	packet_small :	62:0:2592:2604	8920086	19	True				
ANR	8920665	Identifier	packet_small		8920086	0					
ANR	8920666	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Input packet too small.\\n"" )"	63:4:2610:2666	8920086	20	True				
ANR	8920667	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Input packet too small.\\n"" )"		8920086	0					
ANR	8920668	Callee	av_log		8920086	0					
ANR	8920669	Identifier	av_log		8920086	0					
ANR	8920670	ArgumentList	avctx		8920086	1					
ANR	8920671	Argument	avctx		8920086	0					
ANR	8920672	Identifier	avctx		8920086	0					
ANR	8920673	Argument	AV_LOG_ERROR		8920086	1					
ANR	8920674	Identifier	AV_LOG_ERROR		8920086	0					
ANR	8920675	Argument	"""Input packet too small.\\n"""		8920086	2					
ANR	8920676	PrimaryExpression	"""Input packet too small.\\n"""		8920086	0					
ANR	8920677	ReturnStatement	return AVERROR_INVALIDDATA ;	64:4:2672:2698	8920086	21	True				
ANR	8920678	Identifier	AVERROR_INVALIDDATA		8920086	0					
ANR	8920679	ReturnType	static int		8920086	1					
ANR	8920680	Identifier	vcr1_decode_frame		8920086	2					
ANR	8920681	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		8920086	3					
ANR	8920682	Parameter	AVCodecContext * avctx	1:29:29:49	8920086	0	True				
ANR	8920683	ParameterType	AVCodecContext *		8920086	0					
ANR	8920684	Identifier	avctx		8920086	1					
ANR	8920685	Parameter	void * data	1:52:52:61	8920086	1	True				
ANR	8920686	ParameterType	void *		8920086	0					
ANR	8920687	Identifier	data		8920086	1					
ANR	8920688	Parameter	int * got_frame	2:29:93:106	8920086	2	True				
ANR	8920689	ParameterType	int *		8920086	0					
ANR	8920690	Identifier	got_frame		8920086	1					
ANR	8920691	Parameter	AVPacket * avpkt	2:45:109:123	8920086	3	True				
ANR	8920692	ParameterType	AVPacket *		8920086	0					
ANR	8920693	Identifier	avpkt		8920086	1					
ANR	8920694	CFGEntryNode	ENTRY		8920086		True				
ANR	8920695	CFGExitNode	EXIT		8920086		True				
ANR	8920696	Symbol	* y		8920086						
ANR	8920697	Symbol	data		8920086						
ANR	8920698	Symbol	a -> offset		8920086						
ANR	8920699	Symbol	avpkt		8920086						
ANR	8920700	Symbol	ff_get_buffer		8920086						
ANR	8920701	Symbol	* p -> data		8920086						
ANR	8920702	Symbol	got_frame		8920086						
ANR	8920703	Symbol	bytestream		8920086						
ANR	8920704	Symbol	ret		8920086						
ANR	8920705	Symbol	* bytestream ++		8920086						
ANR	8920706	Symbol	offset		8920086						
ANR	8920707	Symbol	* got_frame		8920086						
ANR	8920708	Symbol	buf_size		8920086						
ANR	8920709	Symbol	* * a		8920086						
ANR	8920710	Symbol	p -> linesize		8920086						
ANR	8920711	Symbol	* avctx		8920086						
ANR	8920712	Symbol	* luma		8920086						
ANR	8920713	Symbol	* cr ++		8920086						
ANR	8920714	Symbol	avpkt -> data		8920086						
ANR	8920715	Symbol	p -> data		8920086						
ANR	8920716	Symbol	avctx -> width		8920086						
ANR	8920717	Symbol	* cb ++		8920086						
ANR	8920718	Symbol	avctx -> height		8920086						
ANR	8920719	Symbol	avpkt -> size		8920086						
ANR	8920720	Symbol	AV_PICTURE_TYPE_I		8920086						
ANR	8920721	Symbol	* bytestream		8920086						
ANR	8920722	Symbol	* * p		8920086						
ANR	8920723	Symbol	avctx		8920086						
ANR	8920724	Symbol	p -> pict_type		8920086						
ANR	8920725	Symbol	* * bytestream		8920086						
ANR	8920726	Symbol	* a -> delta		8920086						
ANR	8920727	Symbol	cb		8920086						
ANR	8920728	Symbol	* avpkt		8920086						
ANR	8920729	Symbol	a		8920086						
ANR	8920730	Symbol	AV_LOG_ERROR		8920086						
ANR	8920731	Symbol	p -> key_frame		8920086						
ANR	8920732	Symbol	i		8920086						
ANR	8920733	Symbol	* a		8920086						
ANR	8920734	Symbol	avctx -> priv_data		8920086						
ANR	8920735	Symbol	a -> delta		8920086						
ANR	8920736	Symbol	* p -> linesize		8920086						
ANR	8920737	Symbol	luma		8920086						
ANR	8920738	Symbol	cr		8920086						
ANR	8920739	Symbol	p		8920086						
ANR	8920740	Symbol	buf		8920086						
ANR	8920741	Symbol	* i		8920086						
ANR	8920742	Symbol	* a -> offset		8920086						
ANR	8920743	Symbol	x		8920086						
ANR	8920744	Symbol	y		8920086						
ANR	8920745	Symbol	* p		8920086						
ANR	8920746	Symbol	AVERROR_INVALIDDATA		8920086						
