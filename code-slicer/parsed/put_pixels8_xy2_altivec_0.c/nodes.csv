command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6775088	File	/home/p4ultr4n/workplace/ReVeal/raw_code/put_pixels8_xy2_altivec_0.c								
ANR	6775089	Function	put_pixels8_xy2_altivec	1:0:0:4117							
ANR	6775090	FunctionDef	"put_pixels8_xy2_altivec (uint8_t * block , const uint8_t * pixels , int line_size , int h)"		6775089	0					
ANR	6775091	CompoundStatement		3:0:91:4117	6775089	0					
ANR	6775092	ExpressionStatement	"POWERPC_TBL_DECLARE ( altivec_put_pixels8_xy2_num , 1 )"	5:0:94:145	6775089	0	True				
ANR	6775093	CallExpression	"POWERPC_TBL_DECLARE ( altivec_put_pixels8_xy2_num , 1 )"		6775089	0					
ANR	6775094	Callee	POWERPC_TBL_DECLARE		6775089	0					
ANR	6775095	Identifier	POWERPC_TBL_DECLARE		6775089	0					
ANR	6775096	ArgumentList	altivec_put_pixels8_xy2_num		6775089	1					
ANR	6775097	Argument	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775098	Identifier	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775099	Argument	1		6775089	1					
ANR	6775100	PrimaryExpression	1		6775089	0					
ANR	6775101	IdentifierDeclStatement	int j ;	9:4:189:194	6775089	1	True				
ANR	6775102	IdentifierDecl	j		6775089	0					
ANR	6775103	IdentifierDeclType	int		6775089	0					
ANR	6775104	Identifier	j		6775089	1					
ANR	6775105	ExpressionStatement	"POWERPC_TBL_START_COUNT ( altivec_put_pixels8_xy2_num , 1 )"	11:0:197:252	6775089	2	True				
ANR	6775106	CallExpression	"POWERPC_TBL_START_COUNT ( altivec_put_pixels8_xy2_num , 1 )"		6775089	0					
ANR	6775107	Callee	POWERPC_TBL_START_COUNT		6775089	0					
ANR	6775108	Identifier	POWERPC_TBL_START_COUNT		6775089	0					
ANR	6775109	ArgumentList	altivec_put_pixels8_xy2_num		6775089	1					
ANR	6775110	Argument	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775111	Identifier	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775112	Argument	1		6775089	1					
ANR	6775113	PrimaryExpression	1		6775089	0					
ANR	6775114	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		6775089	3					
ANR	6775115	ForInit	j = 0 ;	13:9:264:269	6775089	0	True				
ANR	6775116	AssignmentExpression	j = 0		6775089	0		=			
ANR	6775117	Identifier	j		6775089	0					
ANR	6775118	PrimaryExpression	0		6775089	1					
ANR	6775119	Condition	j < 2	13:16:271:275	6775089	1	True				
ANR	6775120	RelationalExpression	j < 2		6775089	0		<			
ANR	6775121	Identifier	j		6775089	0					
ANR	6775122	PrimaryExpression	2		6775089	1					
ANR	6775123	PostIncDecOperationExpression	j ++	13:23:278:280	6775089	2	True				
ANR	6775124	Identifier	j		6775089	0					
ANR	6775125	IncDec	++		6775089	1					
ANR	6775126	CompoundStatement		29:6:544:559	6775089	3					
ANR	6775127	IdentifierDeclStatement	int i ;	15:6:292:297	6775089	0	True				
ANR	6775128	IdentifierDecl	i		6775089	0					
ANR	6775129	IdentifierDeclType	int		6775089	0					
ANR	6775130	Identifier	i		6775089	1					
ANR	6775131	IdentifierDeclStatement	const uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	17:6:306:370	6775089	1	True				
ANR	6775132	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6775089	0					
ANR	6775133	IdentifierDeclType	const uint32_t		6775089	0					
ANR	6775134	Identifier	a		6775089	1					
ANR	6775135	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6775089	2		=			
ANR	6775136	Identifier	a		6775089	0					
ANR	6775137	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6775089	1					
ANR	6775138	CastExpression	( const struct unaligned_32 * ) ( pixels )		6775089	0					
ANR	6775139	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775140	Identifier	pixels		6775089	1					
ANR	6775141	Identifier	l		6775089	1					
ANR	6775142	IdentifierDeclStatement	const uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	19:6:379:456	6775089	2	True				
ANR	6775143	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6775089	0					
ANR	6775144	IdentifierDeclType	const uint32_t		6775089	0					
ANR	6775145	Identifier	b		6775089	1					
ANR	6775146	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6775089	2		=			
ANR	6775147	Identifier	b		6775089	0					
ANR	6775148	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6775089	1					
ANR	6775149	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6775089	0					
ANR	6775150	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775151	AdditiveExpression	pixels + 1		6775089	1		+			
ANR	6775152	Identifier	pixels		6775089	0					
ANR	6775153	PrimaryExpression	1		6775089	1					
ANR	6775154	Identifier	l		6775089	1					
ANR	6775155	IdentifierDeclStatement	uint32_t l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL ;	23:6:465:542	6775089	3	True				
ANR	6775156	IdentifierDecl	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6775089	0					
ANR	6775157	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775158	Identifier	l0		6775089	1					
ANR	6775159	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6775089	2		=			
ANR	6775160	Identifier	l0		6775089	0					
ANR	6775161	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6775089	1		+			
ANR	6775162	BitAndExpression	a & 0x03030303UL		6775089	0		&			
ANR	6775163	Identifier	a		6775089	0					
ANR	6775164	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775165	AdditiveExpression	( b & 0x03030303UL ) + 0x02020202UL		6775089	1		+			
ANR	6775166	BitAndExpression	b & 0x03030303UL		6775089	0		&			
ANR	6775167	Identifier	b		6775089	0					
ANR	6775168	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775169	PrimaryExpression	0x02020202UL		6775089	1					
ANR	6775170	IdentifierDeclStatement	uint32_t h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 ) ;	27:6:551:627	6775089	4	True				
ANR	6775171	IdentifierDecl	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	0					
ANR	6775172	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775173	Identifier	h0		6775089	1					
ANR	6775174	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	2		=			
ANR	6775175	Identifier	h0		6775089	0					
ANR	6775176	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	1		+			
ANR	6775177	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6775089	0		>>			
ANR	6775178	BitAndExpression	a & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775179	Identifier	a		6775089	0					
ANR	6775180	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775181	PrimaryExpression	2		6775089	1					
ANR	6775182	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6775089	1		>>			
ANR	6775183	BitAndExpression	b & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775184	Identifier	b		6775089	0					
ANR	6775185	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775186	PrimaryExpression	2		6775089	1					
ANR	6775187	IdentifierDeclStatement	"uint32_t l1 , h1 ;"	31:6:636:651	6775089	5	True				
ANR	6775188	IdentifierDecl	l1		6775089	0					
ANR	6775189	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775190	Identifier	l1		6775089	1					
ANR	6775191	IdentifierDecl	h1		6775089	1					
ANR	6775192	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775193	Identifier	h1		6775089	1					
ANR	6775194	ExpressionStatement	pixels += line_size	33:6:660:679	6775089	6	True				
ANR	6775195	AssignmentExpression	pixels += line_size		6775089	0		+=			
ANR	6775196	Identifier	pixels		6775089	0					
ANR	6775197	Identifier	line_size		6775089	1					
ANR	6775198	ForStatement	for ( i = 0 ; i < h ; i += 2 )		6775089	7					
ANR	6775199	ForInit	i = 0 ;	35:11:693:698	6775089	0	True				
ANR	6775200	AssignmentExpression	i = 0		6775089	0		=			
ANR	6775201	Identifier	i		6775089	0					
ANR	6775202	PrimaryExpression	0		6775089	1					
ANR	6775203	Condition	i < h	35:18:700:704	6775089	1	True				
ANR	6775204	RelationalExpression	i < h		6775089	0		<			
ANR	6775205	Identifier	i		6775089	0					
ANR	6775206	Identifier	h		6775089	1					
ANR	6775207	AssignmentExpression	i += 2	35:25:707:712	6775089	2	True	+=			
ANR	6775208	Identifier	i		6775089	0					
ANR	6775209	PrimaryExpression	2		6775089	1					
ANR	6775210	CompoundStatement		37:8:703:765	6775089	3					
ANR	6775211	IdentifierDeclStatement	uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	37:8:726:784	6775089	0	True				
ANR	6775212	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6775089	0					
ANR	6775213	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775214	Identifier	a		6775089	1					
ANR	6775215	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6775089	2		=			
ANR	6775216	Identifier	a		6775089	0					
ANR	6775217	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6775089	1					
ANR	6775218	CastExpression	( const struct unaligned_32 * ) ( pixels )		6775089	0					
ANR	6775219	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775220	Identifier	pixels		6775089	1					
ANR	6775221	Identifier	l		6775089	1					
ANR	6775222	IdentifierDeclStatement	uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	39:8:795:857	6775089	1	True				
ANR	6775223	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6775089	0					
ANR	6775224	IdentifierDeclType	uint32_t		6775089	0					
ANR	6775225	Identifier	b		6775089	1					
ANR	6775226	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6775089	2		=			
ANR	6775227	Identifier	b		6775089	0					
ANR	6775228	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6775089	1					
ANR	6775229	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6775089	0					
ANR	6775230	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775231	AdditiveExpression	pixels + 1		6775089	1		+			
ANR	6775232	Identifier	pixels		6775089	0					
ANR	6775233	PrimaryExpression	1		6775089	1					
ANR	6775234	Identifier	l		6775089	1					
ANR	6775235	ExpressionStatement	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )	41:8:868:912	6775089	2	True				
ANR	6775236	AssignmentExpression	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )		6775089	0		=			
ANR	6775237	Identifier	l1		6775089	0					
ANR	6775238	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL )		6775089	1		+			
ANR	6775239	BitAndExpression	a & 0x03030303UL		6775089	0		&			
ANR	6775240	Identifier	a		6775089	0					
ANR	6775241	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775242	BitAndExpression	b & 0x03030303UL		6775089	1		&			
ANR	6775243	Identifier	b		6775089	0					
ANR	6775244	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775245	ExpressionStatement	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	43:8:923:981	6775089	3	True				
ANR	6775246	AssignmentExpression	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	0		=			
ANR	6775247	Identifier	h1		6775089	0					
ANR	6775248	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	1		+			
ANR	6775249	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6775089	0		>>			
ANR	6775250	BitAndExpression	a & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775251	Identifier	a		6775089	0					
ANR	6775252	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775253	PrimaryExpression	2		6775089	1					
ANR	6775254	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6775089	1		>>			
ANR	6775255	BitAndExpression	b & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775256	Identifier	b		6775089	0					
ANR	6775257	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775258	PrimaryExpression	2		6775089	1					
ANR	6775259	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	45:8:992:1070	6775089	4	True				
ANR	6775260	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	0		=			
ANR	6775261	UnaryOperationExpression	* ( ( uint32_t * ) block )		6775089	0					
ANR	6775262	UnaryOperator	*		6775089	0					
ANR	6775263	CastExpression	( uint32_t * ) block		6775089	1					
ANR	6775264	CastTarget	uint32_t *		6775089	0					
ANR	6775265	Identifier	block		6775089	1					
ANR	6775266	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	1		+			
ANR	6775267	Identifier	h0		6775089	0					
ANR	6775268	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	1		+			
ANR	6775269	Identifier	h1		6775089	0					
ANR	6775270	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6775089	1		&			
ANR	6775271	ShiftExpression	( l0 + l1 ) >> 2		6775089	0		>>			
ANR	6775272	AdditiveExpression	l0 + l1		6775089	0		+			
ANR	6775273	Identifier	l0		6775089	0					
ANR	6775274	Identifier	l1		6775089	1					
ANR	6775275	PrimaryExpression	2		6775089	1					
ANR	6775276	PrimaryExpression	0x0F0F0F0FUL		6775089	1					
ANR	6775277	ExpressionStatement	pixels += line_size	49:8:1081:1100	6775089	5	True				
ANR	6775278	AssignmentExpression	pixels += line_size		6775089	0		+=			
ANR	6775279	Identifier	pixels		6775089	0					
ANR	6775280	Identifier	line_size		6775089	1					
ANR	6775281	ExpressionStatement	block += line_size	51:8:1111:1129	6775089	6	True				
ANR	6775282	AssignmentExpression	block += line_size		6775089	0		+=			
ANR	6775283	Identifier	block		6775089	0					
ANR	6775284	Identifier	line_size		6775089	1					
ANR	6775285	ExpressionStatement	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )	53:8:1140:1189	6775089	7	True				
ANR	6775286	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6775089	0		=			
ANR	6775287	Identifier	a		6775089	0					
ANR	6775288	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6775089	1					
ANR	6775289	CastExpression	( const struct unaligned_32 * ) ( pixels )		6775089	0					
ANR	6775290	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775291	Identifier	pixels		6775089	1					
ANR	6775292	Identifier	l		6775089	1					
ANR	6775293	ExpressionStatement	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )	55:8:1200:1253	6775089	8	True				
ANR	6775294	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6775089	0		=			
ANR	6775295	Identifier	b		6775089	0					
ANR	6775296	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6775089	1					
ANR	6775297	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6775089	0					
ANR	6775298	CastTarget	const struct unaligned_32 *		6775089	0					
ANR	6775299	AdditiveExpression	pixels + 1		6775089	1		+			
ANR	6775300	Identifier	pixels		6775089	0					
ANR	6775301	PrimaryExpression	1		6775089	1					
ANR	6775302	Identifier	l		6775089	1					
ANR	6775303	ExpressionStatement	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL	57:8:1264:1323	6775089	9	True				
ANR	6775304	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6775089	0		=			
ANR	6775305	Identifier	l0		6775089	0					
ANR	6775306	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6775089	1		+			
ANR	6775307	BitAndExpression	a & 0x03030303UL		6775089	0		&			
ANR	6775308	Identifier	a		6775089	0					
ANR	6775309	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775310	AdditiveExpression	( b & 0x03030303UL ) + 0x02020202UL		6775089	1		+			
ANR	6775311	BitAndExpression	b & 0x03030303UL		6775089	0		&			
ANR	6775312	Identifier	b		6775089	0					
ANR	6775313	PrimaryExpression	0x03030303UL		6775089	1					
ANR	6775314	PrimaryExpression	0x02020202UL		6775089	1					
ANR	6775315	ExpressionStatement	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	59:8:1334:1392	6775089	10	True				
ANR	6775316	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	0		=			
ANR	6775317	Identifier	h0		6775089	0					
ANR	6775318	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6775089	1		+			
ANR	6775319	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6775089	0		>>			
ANR	6775320	BitAndExpression	a & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775321	Identifier	a		6775089	0					
ANR	6775322	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775323	PrimaryExpression	2		6775089	1					
ANR	6775324	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6775089	1		>>			
ANR	6775325	BitAndExpression	b & 0xFCFCFCFCUL		6775089	0		&			
ANR	6775326	Identifier	b		6775089	0					
ANR	6775327	PrimaryExpression	0xFCFCFCFCUL		6775089	1					
ANR	6775328	PrimaryExpression	2		6775089	1					
ANR	6775329	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	61:8:1403:1481	6775089	11	True				
ANR	6775330	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	0		=			
ANR	6775331	UnaryOperationExpression	* ( ( uint32_t * ) block )		6775089	0					
ANR	6775332	UnaryOperator	*		6775089	0					
ANR	6775333	CastExpression	( uint32_t * ) block		6775089	1					
ANR	6775334	CastTarget	uint32_t *		6775089	0					
ANR	6775335	Identifier	block		6775089	1					
ANR	6775336	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	1		+			
ANR	6775337	Identifier	h0		6775089	0					
ANR	6775338	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6775089	1		+			
ANR	6775339	Identifier	h1		6775089	0					
ANR	6775340	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6775089	1		&			
ANR	6775341	ShiftExpression	( l0 + l1 ) >> 2		6775089	0		>>			
ANR	6775342	AdditiveExpression	l0 + l1		6775089	0		+			
ANR	6775343	Identifier	l0		6775089	0					
ANR	6775344	Identifier	l1		6775089	1					
ANR	6775345	PrimaryExpression	2		6775089	1					
ANR	6775346	PrimaryExpression	0x0F0F0F0FUL		6775089	1					
ANR	6775347	ExpressionStatement	pixels += line_size	65:8:1492:1511	6775089	12	True				
ANR	6775348	AssignmentExpression	pixels += line_size		6775089	0		+=			
ANR	6775349	Identifier	pixels		6775089	0					
ANR	6775350	Identifier	line_size		6775089	1					
ANR	6775351	ExpressionStatement	block += line_size	67:8:1522:1540	6775089	13	True				
ANR	6775352	AssignmentExpression	block += line_size		6775089	0		+=			
ANR	6775353	Identifier	block		6775089	0					
ANR	6775354	Identifier	line_size		6775089	1					
ANR	6775355	ExpressionStatement	pixels += 4 - line_size * ( h + 1 )	69:8:1551:1584	6775089	8	True				
ANR	6775356	AssignmentExpression	pixels += 4 - line_size * ( h + 1 )		6775089	0		+=			
ANR	6775357	Identifier	pixels		6775089	0					
ANR	6775358	AdditiveExpression	4 - line_size * ( h + 1 )		6775089	1		-			
ANR	6775359	PrimaryExpression	4		6775089	0					
ANR	6775360	MultiplicativeExpression	line_size * ( h + 1 )		6775089	1		*			
ANR	6775361	Identifier	line_size		6775089	0					
ANR	6775362	AdditiveExpression	h + 1		6775089	1		+			
ANR	6775363	Identifier	h		6775089	0					
ANR	6775364	PrimaryExpression	1		6775089	1					
ANR	6775365	ExpressionStatement	block += 4 - line_size * h	71:6:1593:1619	6775089	9	True				
ANR	6775366	AssignmentExpression	block += 4 - line_size * h		6775089	0		+=			
ANR	6775367	Identifier	block		6775089	0					
ANR	6775368	AdditiveExpression	4 - line_size * h		6775089	1		-			
ANR	6775369	PrimaryExpression	4		6775089	0					
ANR	6775370	MultiplicativeExpression	line_size * h		6775089	1		*			
ANR	6775371	Identifier	line_size		6775089	0					
ANR	6775372	Identifier	h		6775089	1					
ANR	6775373	ExpressionStatement	"POWERPC_TBL_STOP_COUNT ( altivec_put_pixels8_xy2_num , 1 )"	77:0:1631:1685	6775089	4	True				
ANR	6775374	CallExpression	"POWERPC_TBL_STOP_COUNT ( altivec_put_pixels8_xy2_num , 1 )"		6775089	0					
ANR	6775375	Callee	POWERPC_TBL_STOP_COUNT		6775089	0					
ANR	6775376	Identifier	POWERPC_TBL_STOP_COUNT		6775089	0					
ANR	6775377	ArgumentList	altivec_put_pixels8_xy2_num		6775089	1					
ANR	6775378	Argument	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775379	Identifier	altivec_put_pixels8_xy2_num		6775089	0					
ANR	6775380	Argument	1		6775089	1					
ANR	6775381	PrimaryExpression	1		6775089	0					
ANR	6775382	ReturnType	void		6775089	1					
ANR	6775383	Identifier	put_pixels8_xy2_altivec		6775089	2					
ANR	6775384	ParameterList	"uint8_t * block , const uint8_t * pixels , int line_size , int h"		6775089	3					
ANR	6775385	Parameter	uint8_t * block	1:29:29:42	6775089	0	True				
ANR	6775386	ParameterType	uint8_t *		6775089	0					
ANR	6775387	Identifier	block		6775089	1					
ANR	6775388	Parameter	const uint8_t * pixels	1:45:45:65	6775089	1	True				
ANR	6775389	ParameterType	const uint8_t *		6775089	0					
ANR	6775390	Identifier	pixels		6775089	1					
ANR	6775391	Parameter	int line_size	1:68:68:80	6775089	2	True				
ANR	6775392	ParameterType	int		6775089	0					
ANR	6775393	Identifier	line_size		6775089	1					
ANR	6775394	Parameter	int h	1:83:83:87	6775089	3	True				
ANR	6775395	ParameterType	int		6775089	0					
ANR	6775396	Identifier	h		6775089	1					
ANR	6775397	CFGEntryNode	ENTRY		6775089		True				
ANR	6775398	CFGExitNode	EXIT		6775089		True				
ANR	6775399	Symbol	a		6775089						
ANR	6775400	Symbol	b		6775089						
ANR	6775401	Symbol	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6775089						
ANR	6775402	Symbol	l0		6775089						
ANR	6775403	Symbol	l1		6775089						
ANR	6775404	Symbol	* ( ( uint32_t * ) block )		6775089						
ANR	6775405	Symbol	h		6775089						
ANR	6775406	Symbol	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6775089						
ANR	6775407	Symbol	h0		6775089						
ANR	6775408	Symbol	i		6775089						
ANR	6775409	Symbol	h1		6775089						
ANR	6775410	Symbol	j		6775089						
ANR	6775411	Symbol	* block		6775089						
ANR	6775412	Symbol	pixels		6775089						
ANR	6775413	Symbol	* pixels		6775089						
ANR	6775414	Symbol	altivec_put_pixels8_xy2_num		6775089						
ANR	6775415	Symbol	block		6775089						
ANR	6775416	Symbol	line_size		6775089						
