command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8062935	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_motion_inter_4v_block_1.c								
ANR	8062936	Function	svq1_motion_inter_4v_block	1:0:0:2115							
ANR	8062937	FunctionDef	"svq1_motion_inter_4v_block (DSPContext * dsp , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y)"		8062936	0					
ANR	8062938	CompoundStatement		7:0:237:2115	8062936	0					
ANR	8062939	IdentifierDeclStatement	uint8_t * src ;	9:4:244:256	8062936	0	True				
ANR	8062940	IdentifierDecl	* src		8062936	0					
ANR	8062941	IdentifierDeclType	uint8_t *		8062936	0					
ANR	8062942	Identifier	src		8062936	1					
ANR	8062943	IdentifierDeclStatement	uint8_t * dst ;	11:4:263:275	8062936	1	True				
ANR	8062944	IdentifierDecl	* dst		8062936	0					
ANR	8062945	IdentifierDeclType	uint8_t *		8062936	0					
ANR	8062946	Identifier	dst		8062936	1					
ANR	8062947	IdentifierDeclStatement	svq1_pmv mv ;	13:4:282:293	8062936	2	True				
ANR	8062948	IdentifierDecl	mv		8062936	0					
ANR	8062949	IdentifierDeclType	svq1_pmv		8062936	0					
ANR	8062950	Identifier	mv		8062936	1					
ANR	8062951	IdentifierDeclStatement	svq1_pmv * pmv [ 4 ] ;	15:4:300:316	8062936	3	True				
ANR	8062952	IdentifierDecl	* pmv [ 4 ]		8062936	0					
ANR	8062953	IdentifierDeclType	svq1_pmv * [ 4 ]		8062936	0					
ANR	8062954	Identifier	pmv		8062936	1					
ANR	8062955	PrimaryExpression	4		8062936	2					
ANR	8062956	IdentifierDeclStatement	"int i , result ;"	17:4:323:336	8062936	4	True				
ANR	8062957	IdentifierDecl	i		8062936	0					
ANR	8062958	IdentifierDeclType	int		8062936	0					
ANR	8062959	Identifier	i		8062936	1					
ANR	8062960	IdentifierDecl	result		8062936	1					
ANR	8062961	IdentifierDeclType	int		8062936	0					
ANR	8062962	Identifier	result		8062936	1					
ANR	8062963	ExpressionStatement	pmv [ 0 ] = & motion [ 0 ]	23:4:393:412	8062936	5	True				
ANR	8062964	AssignmentExpression	pmv [ 0 ] = & motion [ 0 ]		8062936	0		=			
ANR	8062965	ArrayIndexing	pmv [ 0 ]		8062936	0					
ANR	8062966	Identifier	pmv		8062936	0					
ANR	8062967	PrimaryExpression	0		8062936	1					
ANR	8062968	UnaryOperationExpression	& motion [ 0 ]		8062936	1					
ANR	8062969	UnaryOperator	&		8062936	0					
ANR	8062970	ArrayIndexing	motion [ 0 ]		8062936	1					
ANR	8062971	Identifier	motion		8062936	0					
ANR	8062972	PrimaryExpression	0		8062936	1					
ANR	8062973	IfStatement	if ( y == 0 )		8062936	6					
ANR	8062974	Condition	y == 0	25:8:423:428	8062936	0	True				
ANR	8062975	EqualityExpression	y == 0		8062936	0		==			
ANR	8062976	Identifier	y		8062936	0					
ANR	8062977	PrimaryExpression	0		8062936	1					
ANR	8062978	CompoundStatement		19:16:193:193	8062936	1					
ANR	8062979	ExpressionStatement	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]	27:8:442:475	8062936	0	True				
ANR	8062980	AssignmentExpression	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]		8062936	0		=			
ANR	8062981	ArrayIndexing	pmv [ 1 ]		8062936	0					
ANR	8062982	Identifier	pmv		8062936	0					
ANR	8062983	PrimaryExpression	1		8062936	1					
ANR	8062984	AssignmentExpression	pmv [ 2 ] = pmv [ 0 ]		8062936	1		=			
ANR	8062985	ArrayIndexing	pmv [ 2 ]		8062936	0					
ANR	8062986	Identifier	pmv		8062936	0					
ANR	8062987	PrimaryExpression	2		8062936	1					
ANR	8062988	ArrayIndexing	pmv [ 0 ]		8062936	1					
ANR	8062989	Identifier	pmv		8062936	0					
ANR	8062990	PrimaryExpression	0		8062936	1					
ANR	8062991	ElseStatement	else		8062936	0					
ANR	8062992	CompoundStatement		25:11:251:251	8062936	0					
ANR	8062993	ExpressionStatement	pmv [ 1 ] = & motion [ ( x / 8 ) + 2 ]	33:8:500:529	8062936	0	True				
ANR	8062994	AssignmentExpression	pmv [ 1 ] = & motion [ ( x / 8 ) + 2 ]		8062936	0		=			
ANR	8062995	ArrayIndexing	pmv [ 1 ]		8062936	0					
ANR	8062996	Identifier	pmv		8062936	0					
ANR	8062997	PrimaryExpression	1		8062936	1					
ANR	8062998	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8062999	UnaryOperator	&		8062936	0					
ANR	8063000	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8063001	Identifier	motion		8062936	0					
ANR	8063002	AdditiveExpression	( x / 8 ) + 2		8062936	1		+			
ANR	8063003	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063004	Identifier	x		8062936	0					
ANR	8063005	PrimaryExpression	8		8062936	1					
ANR	8063006	PrimaryExpression	2		8062936	1					
ANR	8063007	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 4 ]	35:8:540:569	8062936	1	True				
ANR	8063008	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 4 ]		8062936	0		=			
ANR	8063009	ArrayIndexing	pmv [ 2 ]		8062936	0					
ANR	8063010	Identifier	pmv		8062936	0					
ANR	8063011	PrimaryExpression	2		8062936	1					
ANR	8063012	UnaryOperationExpression	& motion [ ( x / 8 ) + 4 ]		8062936	1					
ANR	8063013	UnaryOperator	&		8062936	0					
ANR	8063014	ArrayIndexing	motion [ ( x / 8 ) + 4 ]		8062936	1					
ANR	8063015	Identifier	motion		8062936	0					
ANR	8063016	AdditiveExpression	( x / 8 ) + 4		8062936	1		+			
ANR	8063017	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063018	Identifier	x		8062936	0					
ANR	8063019	PrimaryExpression	8		8062936	1					
ANR	8063020	PrimaryExpression	4		8062936	1					
ANR	8063021	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & mv , pmv )"	41:4:585:637	8062936	7	True				
ANR	8063022	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & mv , pmv )"		8062936	0		=			
ANR	8063023	Identifier	result		8062936	0					
ANR	8063024	CallExpression	"svq1_decode_motion_vector ( bitbuf , & mv , pmv )"		8062936	1					
ANR	8063025	Callee	svq1_decode_motion_vector		8062936	0					
ANR	8063026	Identifier	svq1_decode_motion_vector		8062936	0					
ANR	8063027	ArgumentList	bitbuf		8062936	1					
ANR	8063028	Argument	bitbuf		8062936	0					
ANR	8063029	Identifier	bitbuf		8062936	0					
ANR	8063030	Argument	& mv		8062936	1					
ANR	8063031	UnaryOperationExpression	& mv		8062936	0					
ANR	8063032	UnaryOperator	&		8062936	0					
ANR	8063033	Identifier	mv		8062936	1					
ANR	8063034	Argument	pmv		8062936	2					
ANR	8063035	Identifier	pmv		8062936	0					
ANR	8063036	IfStatement	if ( result != 0 )		8062936	8					
ANR	8063037	Condition	result != 0	45:8:650:660	8062936	0	True				
ANR	8063038	EqualityExpression	result != 0		8062936	0		!=			
ANR	8063039	Identifier	result		8062936	0					
ANR	8063040	PrimaryExpression	0		8062936	1					
ANR	8063041	ReturnStatement	return result ;	47:8:672:685	8062936	1	True				
ANR	8063042	Identifier	result		8062936	0					
ANR	8063043	ExpressionStatement	pmv [ 0 ] = & mv	53:4:742:754	8062936	9	True				
ANR	8063044	AssignmentExpression	pmv [ 0 ] = & mv		8062936	0		=			
ANR	8063045	ArrayIndexing	pmv [ 0 ]		8062936	0					
ANR	8063046	Identifier	pmv		8062936	0					
ANR	8063047	PrimaryExpression	0		8062936	1					
ANR	8063048	UnaryOperationExpression	& mv		8062936	1					
ANR	8063049	UnaryOperator	&		8062936	0					
ANR	8063050	Identifier	mv		8062936	1					
ANR	8063051	IfStatement	if ( y == 0 )		8062936	10					
ANR	8063052	Condition	y == 0	55:8:765:770	8062936	0	True				
ANR	8063053	EqualityExpression	y == 0		8062936	0		==			
ANR	8063054	Identifier	y		8062936	0					
ANR	8063055	PrimaryExpression	0		8062936	1					
ANR	8063056	CompoundStatement		49:16:535:535	8062936	1					
ANR	8063057	ExpressionStatement	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]	57:8:784:817	8062936	0	True				
ANR	8063058	AssignmentExpression	pmv [ 1 ] = pmv [ 2 ] = pmv [ 0 ]		8062936	0		=			
ANR	8063059	ArrayIndexing	pmv [ 1 ]		8062936	0					
ANR	8063060	Identifier	pmv		8062936	0					
ANR	8063061	PrimaryExpression	1		8062936	1					
ANR	8063062	AssignmentExpression	pmv [ 2 ] = pmv [ 0 ]		8062936	1		=			
ANR	8063063	ArrayIndexing	pmv [ 2 ]		8062936	0					
ANR	8063064	Identifier	pmv		8062936	0					
ANR	8063065	PrimaryExpression	2		8062936	1					
ANR	8063066	ArrayIndexing	pmv [ 0 ]		8062936	1					
ANR	8063067	Identifier	pmv		8062936	0					
ANR	8063068	PrimaryExpression	0		8062936	1					
ANR	8063069	ElseStatement	else		8062936	0					
ANR	8063070	CompoundStatement		55:11:593:593	8062936	0					
ANR	8063071	ExpressionStatement	pmv [ 1 ] = & motion [ ( x / 8 ) + 3 ]	63:8:842:871	8062936	0	True				
ANR	8063072	AssignmentExpression	pmv [ 1 ] = & motion [ ( x / 8 ) + 3 ]		8062936	0		=			
ANR	8063073	ArrayIndexing	pmv [ 1 ]		8062936	0					
ANR	8063074	Identifier	pmv		8062936	0					
ANR	8063075	PrimaryExpression	1		8062936	1					
ANR	8063076	UnaryOperationExpression	& motion [ ( x / 8 ) + 3 ]		8062936	1					
ANR	8063077	UnaryOperator	&		8062936	0					
ANR	8063078	ArrayIndexing	motion [ ( x / 8 ) + 3 ]		8062936	1					
ANR	8063079	Identifier	motion		8062936	0					
ANR	8063080	AdditiveExpression	( x / 8 ) + 3		8062936	1		+			
ANR	8063081	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063082	Identifier	x		8062936	0					
ANR	8063083	PrimaryExpression	8		8062936	1					
ANR	8063084	PrimaryExpression	3		8062936	1					
ANR	8063085	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"	67:4:885:944	8062936	11	True				
ANR	8063086	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"		8062936	0		=			
ANR	8063087	Identifier	result		8062936	0					
ANR	8063088	CallExpression	"svq1_decode_motion_vector ( bitbuf , & motion [ 0 ] , pmv )"		8062936	1					
ANR	8063089	Callee	svq1_decode_motion_vector		8062936	0					
ANR	8063090	Identifier	svq1_decode_motion_vector		8062936	0					
ANR	8063091	ArgumentList	bitbuf		8062936	1					
ANR	8063092	Argument	bitbuf		8062936	0					
ANR	8063093	Identifier	bitbuf		8062936	0					
ANR	8063094	Argument	& motion [ 0 ]		8062936	1					
ANR	8063095	UnaryOperationExpression	& motion [ 0 ]		8062936	0					
ANR	8063096	UnaryOperator	&		8062936	0					
ANR	8063097	ArrayIndexing	motion [ 0 ]		8062936	1					
ANR	8063098	Identifier	motion		8062936	0					
ANR	8063099	PrimaryExpression	0		8062936	1					
ANR	8063100	Argument	pmv		8062936	2					
ANR	8063101	Identifier	pmv		8062936	0					
ANR	8063102	IfStatement	if ( result != 0 )		8062936	12					
ANR	8063103	Condition	result != 0	71:8:957:967	8062936	0	True				
ANR	8063104	EqualityExpression	result != 0		8062936	0		!=			
ANR	8063105	Identifier	result		8062936	0					
ANR	8063106	PrimaryExpression	0		8062936	1					
ANR	8063107	ReturnStatement	return result ;	73:8:979:992	8062936	1	True				
ANR	8063108	Identifier	result		8062936	0					
ANR	8063109	ExpressionStatement	pmv [ 1 ] = & motion [ 0 ]	79:4:1049:1068	8062936	13	True				
ANR	8063110	AssignmentExpression	pmv [ 1 ] = & motion [ 0 ]		8062936	0		=			
ANR	8063111	ArrayIndexing	pmv [ 1 ]		8062936	0					
ANR	8063112	Identifier	pmv		8062936	0					
ANR	8063113	PrimaryExpression	1		8062936	1					
ANR	8063114	UnaryOperationExpression	& motion [ 0 ]		8062936	1					
ANR	8063115	UnaryOperator	&		8062936	0					
ANR	8063116	ArrayIndexing	motion [ 0 ]		8062936	1					
ANR	8063117	Identifier	motion		8062936	0					
ANR	8063118	PrimaryExpression	0		8062936	1					
ANR	8063119	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 1 ]	81:4:1075:1104	8062936	14	True				
ANR	8063120	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 1 ]		8062936	0		=			
ANR	8063121	ArrayIndexing	pmv [ 2 ]		8062936	0					
ANR	8063122	Identifier	pmv		8062936	0					
ANR	8063123	PrimaryExpression	2		8062936	1					
ANR	8063124	UnaryOperationExpression	& motion [ ( x / 8 ) + 1 ]		8062936	1					
ANR	8063125	UnaryOperator	&		8062936	0					
ANR	8063126	ArrayIndexing	motion [ ( x / 8 ) + 1 ]		8062936	1					
ANR	8063127	Identifier	motion		8062936	0					
ANR	8063128	AdditiveExpression	( x / 8 ) + 1		8062936	1		+			
ANR	8063129	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063130	Identifier	x		8062936	0					
ANR	8063131	PrimaryExpression	8		8062936	1					
ANR	8063132	PrimaryExpression	1		8062936	1					
ANR	8063133	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"	85:4:1113:1182	8062936	15	True				
ANR	8063134	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"		8062936	0		=			
ANR	8063135	Identifier	result		8062936	0					
ANR	8063136	CallExpression	"svq1_decode_motion_vector ( bitbuf , & motion [ ( x / 8 ) + 2 ] , pmv )"		8062936	1					
ANR	8063137	Callee	svq1_decode_motion_vector		8062936	0					
ANR	8063138	Identifier	svq1_decode_motion_vector		8062936	0					
ANR	8063139	ArgumentList	bitbuf		8062936	1					
ANR	8063140	Argument	bitbuf		8062936	0					
ANR	8063141	Identifier	bitbuf		8062936	0					
ANR	8063142	Argument	& motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8063143	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062936	0					
ANR	8063144	UnaryOperator	&		8062936	0					
ANR	8063145	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8063146	Identifier	motion		8062936	0					
ANR	8063147	AdditiveExpression	( x / 8 ) + 2		8062936	1		+			
ANR	8063148	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063149	Identifier	x		8062936	0					
ANR	8063150	PrimaryExpression	8		8062936	1					
ANR	8063151	PrimaryExpression	2		8062936	1					
ANR	8063152	Argument	pmv		8062936	2					
ANR	8063153	Identifier	pmv		8062936	0					
ANR	8063154	IfStatement	if ( result != 0 )		8062936	16					
ANR	8063155	Condition	result != 0	89:8:1195:1205	8062936	0	True				
ANR	8063156	EqualityExpression	result != 0		8062936	0		!=			
ANR	8063157	Identifier	result		8062936	0					
ANR	8063158	PrimaryExpression	0		8062936	1					
ANR	8063159	ReturnStatement	return result ;	91:8:1217:1230	8062936	1	True				
ANR	8063160	Identifier	result		8062936	0					
ANR	8063161	ExpressionStatement	pmv [ 2 ] = & motion [ ( x / 8 ) + 2 ]	97:4:1287:1316	8062936	17	True				
ANR	8063162	AssignmentExpression	pmv [ 2 ] = & motion [ ( x / 8 ) + 2 ]		8062936	0		=			
ANR	8063163	ArrayIndexing	pmv [ 2 ]		8062936	0					
ANR	8063164	Identifier	pmv		8062936	0					
ANR	8063165	PrimaryExpression	2		8062936	1					
ANR	8063166	UnaryOperationExpression	& motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8063167	UnaryOperator	&		8062936	0					
ANR	8063168	ArrayIndexing	motion [ ( x / 8 ) + 2 ]		8062936	1					
ANR	8063169	Identifier	motion		8062936	0					
ANR	8063170	AdditiveExpression	( x / 8 ) + 2		8062936	1		+			
ANR	8063171	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063172	Identifier	x		8062936	0					
ANR	8063173	PrimaryExpression	8		8062936	1					
ANR	8063174	PrimaryExpression	2		8062936	1					
ANR	8063175	ExpressionStatement	pmv [ 3 ] = & motion [ ( x / 8 ) + 3 ]	99:4:1323:1352	8062936	18	True				
ANR	8063176	AssignmentExpression	pmv [ 3 ] = & motion [ ( x / 8 ) + 3 ]		8062936	0		=			
ANR	8063177	ArrayIndexing	pmv [ 3 ]		8062936	0					
ANR	8063178	Identifier	pmv		8062936	0					
ANR	8063179	PrimaryExpression	3		8062936	1					
ANR	8063180	UnaryOperationExpression	& motion [ ( x / 8 ) + 3 ]		8062936	1					
ANR	8063181	UnaryOperator	&		8062936	0					
ANR	8063182	ArrayIndexing	motion [ ( x / 8 ) + 3 ]		8062936	1					
ANR	8063183	Identifier	motion		8062936	0					
ANR	8063184	AdditiveExpression	( x / 8 ) + 3		8062936	1		+			
ANR	8063185	MultiplicativeExpression	x / 8		8062936	0		/			
ANR	8063186	Identifier	x		8062936	0					
ANR	8063187	PrimaryExpression	8		8062936	1					
ANR	8063188	PrimaryExpression	3		8062936	1					
ANR	8063189	ExpressionStatement	"result = svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"	103:4:1361:1416	8062936	19	True				
ANR	8063190	AssignmentExpression	"result = svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"		8062936	0		=			
ANR	8063191	Identifier	result		8062936	0					
ANR	8063192	CallExpression	"svq1_decode_motion_vector ( bitbuf , pmv [ 3 ] , pmv )"		8062936	1					
ANR	8063193	Callee	svq1_decode_motion_vector		8062936	0					
ANR	8063194	Identifier	svq1_decode_motion_vector		8062936	0					
ANR	8063195	ArgumentList	bitbuf		8062936	1					
ANR	8063196	Argument	bitbuf		8062936	0					
ANR	8063197	Identifier	bitbuf		8062936	0					
ANR	8063198	Argument	pmv [ 3 ]		8062936	1					
ANR	8063199	ArrayIndexing	pmv [ 3 ]		8062936	0					
ANR	8063200	Identifier	pmv		8062936	0					
ANR	8063201	PrimaryExpression	3		8062936	1					
ANR	8063202	Argument	pmv		8062936	2					
ANR	8063203	Identifier	pmv		8062936	0					
ANR	8063204	IfStatement	if ( result != 0 )		8062936	20					
ANR	8063205	Condition	result != 0	107:8:1429:1439	8062936	0	True				
ANR	8063206	EqualityExpression	result != 0		8062936	0		!=			
ANR	8063207	Identifier	result		8062936	0					
ANR	8063208	PrimaryExpression	0		8062936	1					
ANR	8063209	ReturnStatement	return result ;	109:8:1451:1464	8062936	1	True				
ANR	8063210	Identifier	result		8062936	0					
ANR	8063211	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8062936	21					
ANR	8063212	ForInit	i = 0 ;	115:9:1506:1511	8062936	0	True				
ANR	8063213	AssignmentExpression	i = 0		8062936	0		=			
ANR	8063214	Identifier	i		8062936	0					
ANR	8063215	PrimaryExpression	0		8062936	1					
ANR	8063216	Condition	i < 4	115:16:1513:1517	8062936	1	True				
ANR	8063217	RelationalExpression	i < 4		8062936	0		<			
ANR	8063218	Identifier	i		8062936	0					
ANR	8063219	PrimaryExpression	4		8062936	1					
ANR	8063220	PostIncDecOperationExpression	i ++	115:23:1520:1522	8062936	2	True				
ANR	8063221	Identifier	i		8062936	0					
ANR	8063222	IncDec	++		8062936	1					
ANR	8063223	CompoundStatement		113:8:1344:1379	8062936	3					
ANR	8063224	IdentifierDeclStatement	int mvx = pmv [ i ] -> x + ( i & 1 ) * 16 ;	117:8:1536:1571	8062936	0	True				
ANR	8063225	IdentifierDecl	mvx = pmv [ i ] -> x + ( i & 1 ) * 16		8062936	0					
ANR	8063226	IdentifierDeclType	int		8062936	0					
ANR	8063227	Identifier	mvx		8062936	1					
ANR	8063228	AssignmentExpression	mvx = pmv [ i ] -> x + ( i & 1 ) * 16		8062936	2		=			
ANR	8063229	Identifier	mvx		8062936	0					
ANR	8063230	AdditiveExpression	pmv [ i ] -> x + ( i & 1 ) * 16		8062936	1		+			
ANR	8063231	PtrMemberAccess	pmv [ i ] -> x		8062936	0					
ANR	8063232	ArrayIndexing	pmv [ i ]		8062936	0					
ANR	8063233	Identifier	pmv		8062936	0					
ANR	8063234	Identifier	i		8062936	1					
ANR	8063235	Identifier	x		8062936	1					
ANR	8063236	MultiplicativeExpression	( i & 1 ) * 16		8062936	1		*			
ANR	8063237	BitAndExpression	i & 1		8062936	0		&			
ANR	8063238	Identifier	i		8062936	0					
ANR	8063239	PrimaryExpression	1		8062936	1					
ANR	8063240	PrimaryExpression	16		8062936	1					
ANR	8063241	IdentifierDeclStatement	int mvy = pmv [ i ] -> y + ( i >> 1 ) * 16 ;	119:8:1582:1617	8062936	1	True				
ANR	8063242	IdentifierDecl	mvy = pmv [ i ] -> y + ( i >> 1 ) * 16		8062936	0					
ANR	8063243	IdentifierDeclType	int		8062936	0					
ANR	8063244	Identifier	mvy		8062936	1					
ANR	8063245	AssignmentExpression	mvy = pmv [ i ] -> y + ( i >> 1 ) * 16		8062936	2		=			
ANR	8063246	Identifier	mvy		8062936	0					
ANR	8063247	AdditiveExpression	pmv [ i ] -> y + ( i >> 1 ) * 16		8062936	1		+			
ANR	8063248	PtrMemberAccess	pmv [ i ] -> y		8062936	0					
ANR	8063249	ArrayIndexing	pmv [ i ]		8062936	0					
ANR	8063250	Identifier	pmv		8062936	0					
ANR	8063251	Identifier	i		8062936	1					
ANR	8063252	Identifier	y		8062936	1					
ANR	8063253	MultiplicativeExpression	( i >> 1 ) * 16		8062936	1		*			
ANR	8063254	ShiftExpression	i >> 1		8062936	0		>>			
ANR	8063255	Identifier	i		8062936	0					
ANR	8063256	PrimaryExpression	1		8062936	1					
ANR	8063257	PrimaryExpression	16		8062936	1					
ANR	8063258	IfStatement	if ( y + ( mvy >> 1 ) < 0 )		8062936	2					
ANR	8063259	Condition	y + ( mvy >> 1 ) < 0	125:12:1674:1691	8062936	0	True				
ANR	8063260	RelationalExpression	y + ( mvy >> 1 ) < 0		8062936	0		<			
ANR	8063261	AdditiveExpression	y + ( mvy >> 1 )		8062936	0		+			
ANR	8063262	Identifier	y		8062936	0					
ANR	8063263	ShiftExpression	mvy >> 1		8062936	1		>>			
ANR	8063264	Identifier	mvy		8062936	0					
ANR	8063265	PrimaryExpression	1		8062936	1					
ANR	8063266	PrimaryExpression	0		8062936	1					
ANR	8063267	ExpressionStatement	mvy = 0	127:12:1707:1714	8062936	1	True				
ANR	8063268	AssignmentExpression	mvy = 0		8062936	0		=			
ANR	8063269	Identifier	mvy		8062936	0					
ANR	8063270	PrimaryExpression	0		8062936	1					
ANR	8063271	IfStatement	if ( x + ( mvx >> 1 ) < 0 )		8062936	3					
ANR	8063272	Condition	x + ( mvx >> 1 ) < 0	129:12:1729:1746	8062936	0	True				
ANR	8063273	RelationalExpression	x + ( mvx >> 1 ) < 0		8062936	0		<			
ANR	8063274	AdditiveExpression	x + ( mvx >> 1 )		8062936	0		+			
ANR	8063275	Identifier	x		8062936	0					
ANR	8063276	ShiftExpression	mvx >> 1		8062936	1		>>			
ANR	8063277	Identifier	mvx		8062936	0					
ANR	8063278	PrimaryExpression	1		8062936	1					
ANR	8063279	PrimaryExpression	0		8062936	1					
ANR	8063280	ExpressionStatement	mvx = 0	131:12:1762:1769	8062936	1	True				
ANR	8063281	AssignmentExpression	mvx = 0		8062936	0		=			
ANR	8063282	Identifier	mvx		8062936	0					
ANR	8063283	PrimaryExpression	0		8062936	1					
ANR	8063284	ExpressionStatement	src = & previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]	135:8:1782:1842	8062936	4	True				
ANR	8063285	AssignmentExpression	src = & previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062936	0		=			
ANR	8063286	Identifier	src		8062936	0					
ANR	8063287	UnaryOperationExpression	& previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062936	1					
ANR	8063288	UnaryOperator	&		8062936	0					
ANR	8063289	ArrayIndexing	previous [ ( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch ]		8062936	1					
ANR	8063290	Identifier	previous		8062936	0					
ANR	8063291	AdditiveExpression	( x + ( mvx >> 1 ) ) + ( y + ( mvy >> 1 ) ) * pitch		8062936	1		+			
ANR	8063292	AdditiveExpression	x + ( mvx >> 1 )		8062936	0		+			
ANR	8063293	Identifier	x		8062936	0					
ANR	8063294	ShiftExpression	mvx >> 1		8062936	1		>>			
ANR	8063295	Identifier	mvx		8062936	0					
ANR	8063296	PrimaryExpression	1		8062936	1					
ANR	8063297	MultiplicativeExpression	( y + ( mvy >> 1 ) ) * pitch		8062936	1		*			
ANR	8063298	AdditiveExpression	y + ( mvy >> 1 )		8062936	0		+			
ANR	8063299	Identifier	y		8062936	0					
ANR	8063300	ShiftExpression	mvy >> 1		8062936	1		>>			
ANR	8063301	Identifier	mvy		8062936	0					
ANR	8063302	PrimaryExpression	1		8062936	1					
ANR	8063303	Identifier	pitch		8062936	1					
ANR	8063304	ExpressionStatement	dst = current	137:8:1853:1866	8062936	5	True				
ANR	8063305	AssignmentExpression	dst = current		8062936	0		=			
ANR	8063306	Identifier	dst		8062936	0					
ANR	8063307	Identifier	current		8062936	1					
ANR	8063308	ExpressionStatement	"dsp -> put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ] ( dst , src , pitch , 8 )"	141:8:1879:1951	8062936	6	True				
ANR	8063309	CallExpression	"dsp -> put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ] ( dst , src , pitch , 8 )"		8062936	0					
ANR	8063310	Callee	dsp -> put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ]		8062936	0					
ANR	8063311	ArrayIndexing	dsp -> put_pixels_tab [ 1 ] [ ( ( mvy & 1 ) << 1 ) | ( mvx & 1 ) ]		8062936	0					
ANR	8063312	ArrayIndexing	dsp -> put_pixels_tab [ 1 ]		8062936	0					
ANR	8063313	PtrMemberAccess	dsp -> put_pixels_tab		8062936	0					
ANR	8063314	Identifier	dsp		8062936	0					
ANR	8063315	Identifier	put_pixels_tab		8062936	1					
ANR	8063316	PrimaryExpression	1		8062936	1					
ANR	8063317	InclusiveOrExpression	( ( mvy & 1 ) << 1 ) | ( mvx & 1 )		8062936	1		|			
ANR	8063318	ShiftExpression	( mvy & 1 ) << 1		8062936	0		<<			
ANR	8063319	BitAndExpression	mvy & 1		8062936	0		&			
ANR	8063320	Identifier	mvy		8062936	0					
ANR	8063321	PrimaryExpression	1		8062936	1					
ANR	8063322	PrimaryExpression	1		8062936	1					
ANR	8063323	BitAndExpression	mvx & 1		8062936	1		&			
ANR	8063324	Identifier	mvx		8062936	0					
ANR	8063325	PrimaryExpression	1		8062936	1					
ANR	8063326	ArgumentList	dst		8062936	1					
ANR	8063327	Argument	dst		8062936	0					
ANR	8063328	Identifier	dst		8062936	0					
ANR	8063329	Argument	src		8062936	1					
ANR	8063330	Identifier	src		8062936	0					
ANR	8063331	Argument	pitch		8062936	2					
ANR	8063332	Identifier	pitch		8062936	0					
ANR	8063333	Argument	8		8062936	3					
ANR	8063334	PrimaryExpression	8		8062936	0					
ANR	8063335	IfStatement	if ( i & 1 )		8062936	7					
ANR	8063336	Condition	i & 1	147:12:2001:2005	8062936	0	True				
ANR	8063337	BitAndExpression	i & 1		8062936	0		&			
ANR	8063338	Identifier	i		8062936	0					
ANR	8063339	PrimaryExpression	1		8062936	1					
ANR	8063340	ExpressionStatement	current += 8 * ( pitch - 1 )	149:12:2021:2047	8062936	1	True				
ANR	8063341	AssignmentExpression	current += 8 * ( pitch - 1 )		8062936	0		+=			
ANR	8063342	Identifier	current		8062936	0					
ANR	8063343	MultiplicativeExpression	8 * ( pitch - 1 )		8062936	1		*			
ANR	8063344	PrimaryExpression	8		8062936	0					
ANR	8063345	AdditiveExpression	pitch - 1		8062936	1		-			
ANR	8063346	Identifier	pitch		8062936	0					
ANR	8063347	PrimaryExpression	1		8062936	1					
ANR	8063348	ElseStatement	else		8062936	0					
ANR	8063349	ExpressionStatement	current += 8	153:12:2076:2088	8062936	0	True				
ANR	8063350	AssignmentExpression	current += 8		8062936	0		+=			
ANR	8063351	Identifier	current		8062936	0					
ANR	8063352	PrimaryExpression	8		8062936	1					
ANR	8063353	ReturnStatement	return 0 ;	159:4:2104:2112	8062936	22	True				
ANR	8063354	PrimaryExpression	0		8062936	0					
ANR	8063355	ReturnType	static int		8062936	1					
ANR	8063356	Identifier	svq1_motion_inter_4v_block		8062936	2					
ANR	8063357	ParameterList	"DSPContext * dsp , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y"		8062936	3					
ANR	8063358	Parameter	DSPContext * dsp	1:38:38:52	8062936	0	True				
ANR	8063359	ParameterType	DSPContext *		8062936	0					
ANR	8063360	Identifier	dsp		8062936	1					
ANR	8063361	Parameter	GetBitContext * bitbuf	1:55:55:75	8062936	1	True				
ANR	8063362	ParameterType	GetBitContext *		8062936	0					
ANR	8063363	Identifier	bitbuf		8062936	1					
ANR	8063364	Parameter	uint8_t * current	3:38:117:132	8062936	2	True				
ANR	8063365	ParameterType	uint8_t *		8062936	0					
ANR	8063366	Identifier	current		8062936	1					
ANR	8063367	Parameter	uint8_t * previous	3:56:135:151	8062936	3	True				
ANR	8063368	ParameterType	uint8_t *		8062936	0					
ANR	8063369	Identifier	previous		8062936	1					
ANR	8063370	Parameter	int pitch	5:38:193:201	8062936	4	True				
ANR	8063371	ParameterType	int		8062936	0					
ANR	8063372	Identifier	pitch		8062936	1					
ANR	8063373	Parameter	svq1_pmv * motion	5:49:204:219	8062936	5	True				
ANR	8063374	ParameterType	svq1_pmv *		8062936	0					
ANR	8063375	Identifier	motion		8062936	1					
ANR	8063376	Parameter	int x	5:67:222:226	8062936	6	True				
ANR	8063377	ParameterType	int		8062936	0					
ANR	8063378	Identifier	x		8062936	1					
ANR	8063379	Parameter	int y	5:74:229:233	8062936	7	True				
ANR	8063380	ParameterType	int		8062936	0					
ANR	8063381	Identifier	y		8062936	1					
ANR	8063382	CFGEntryNode	ENTRY		8062936		True				
ANR	8063383	CFGExitNode	EXIT		8062936		True				
ANR	8063384	Symbol	dsp		8062936						
ANR	8063385	Symbol	* pmv		8062936						
ANR	8063386	Symbol	dst		8062936						
ANR	8063387	Symbol	result		8062936						
ANR	8063388	Symbol	current		8062936						
ANR	8063389	Symbol	* dsp		8062936						
ANR	8063390	Symbol	* * dsp		8062936						
ANR	8063391	Symbol	pmv		8062936						
ANR	8063392	Symbol	svq1_decode_motion_vector		8062936						
ANR	8063393	Symbol	pitch		8062936						
ANR	8063394	Symbol	* * i		8062936						
ANR	8063395	Symbol	dsp -> put_pixels_tab		8062936						
ANR	8063396	Symbol	previous		8062936						
ANR	8063397	Symbol	motion		8062936						
ANR	8063398	Symbol	src		8062936						
ANR	8063399	Symbol	mv		8062936						
ANR	8063400	Symbol	i		8062936						
ANR	8063401	Symbol	* * pmv		8062936						
ANR	8063402	Symbol	pmv [ i ] -> x		8062936						
ANR	8063403	Symbol	mvx		8062936						
ANR	8063404	Symbol	mvy		8062936						
ANR	8063405	Symbol	pmv [ i ] -> y		8062936						
ANR	8063406	Symbol	& mv		8062936						
ANR	8063407	Symbol	* i		8062936						
ANR	8063408	Symbol	* dsp -> put_pixels_tab		8062936						
ANR	8063409	Symbol	x		8062936						
ANR	8063410	Symbol	y		8062936						
ANR	8063411	Symbol	bitbuf		8062936						
