command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3218098	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_dca_xll_decode_audio_1.c								
ANR	3218099	Function	ff_dca_xll_decode_audio	1:0:0:15748							
ANR	3218100	FunctionDef	"ff_dca_xll_decode_audio (DCAContext * s , AVFrame * frame)"		3218099	0					
ANR	3218101	CompoundStatement		3:0:60:15748	3218099	0					
ANR	3218102	IdentifierDeclStatement	"int seg , chset_i ;"	7:4:124:140	3218099	0	True				
ANR	3218103	IdentifierDecl	seg		3218099	0					
ANR	3218104	IdentifierDeclType	int		3218099	0					
ANR	3218105	Identifier	seg		3218099	1					
ANR	3218106	IdentifierDecl	chset_i		3218099	1					
ANR	3218107	IdentifierDeclType	int		3218099	0					
ANR	3218108	Identifier	chset_i		3218099	1					
ANR	3218109	ClassDefStatement	struct coding_params { int seg_type ; int rice_code_flag [ 16 ] ; int pancAuxABIT [ 16 ] ; int pancABIT0 [ 16 ] ; int pancABIT [ 16 ] ; int nSamplPart0 [ 16 ] ; } param_state [ 16 ] ;	13:4:200:475	3218099	1	True				
ANR	3218110	Identifier	coding_params		3218099	0					
ANR	3218111	IdentifierDecl	param_state [ 16 ]		3218099	1					
ANR	3218112	IdentifierDeclType	coding_params [ 16 ]		3218099	0					
ANR	3218113	Identifier	param_state		3218099	1					
ANR	3218114	PrimaryExpression	16		3218099	2					
ANR	3218115	IdentifierDeclStatement	GetBitContext * gb = & s -> xll_navi . gb ;	31:4:484:519	3218099	2	True				
ANR	3218116	IdentifierDecl	* gb = & s -> xll_navi . gb		3218099	0					
ANR	3218117	IdentifierDeclType	GetBitContext *		3218099	0					
ANR	3218118	Identifier	gb		3218099	1					
ANR	3218119	AssignmentExpression	* gb = & s -> xll_navi . gb		3218099	2		=			
ANR	3218120	Identifier	gb		3218099	0					
ANR	3218121	UnaryOperationExpression	& s -> xll_navi . gb		3218099	1					
ANR	3218122	UnaryOperator	&		3218099	0					
ANR	3218123	MemberAccess	s -> xll_navi . gb		3218099	1					
ANR	3218124	PtrMemberAccess	s -> xll_navi		3218099	0					
ANR	3218125	Identifier	s		3218099	0					
ANR	3218126	Identifier	xll_navi		3218099	1					
ANR	3218127	Identifier	gb		3218099	1					
ANR	3218128	IdentifierDeclStatement	int * history ;	33:4:526:538	3218099	3	True				
ANR	3218129	IdentifierDecl	* history		3218099	0					
ANR	3218130	IdentifierDeclType	int *		3218099	0					
ANR	3218131	Identifier	history		3218099	1					
ANR	3218132	ExpressionStatement	"av_fast_malloc ( & s -> xll_sample_buf , & s -> xll_sample_buf_size , ( s -> xll_smpl_in_seg + DCA_XLL_AORDER_MAX ) * s -> xll_channels * sizeof ( * s -> xll_sample_buf ) )"	43:4:711:900	3218099	4	True				
ANR	3218133	CallExpression	"av_fast_malloc ( & s -> xll_sample_buf , & s -> xll_sample_buf_size , ( s -> xll_smpl_in_seg + DCA_XLL_AORDER_MAX ) * s -> xll_channels * sizeof ( * s -> xll_sample_buf ) )"		3218099	0					
ANR	3218134	Callee	av_fast_malloc		3218099	0					
ANR	3218135	Identifier	av_fast_malloc		3218099	0					
ANR	3218136	ArgumentList	& s -> xll_sample_buf		3218099	1					
ANR	3218137	Argument	& s -> xll_sample_buf		3218099	0					
ANR	3218138	UnaryOperationExpression	& s -> xll_sample_buf		3218099	0					
ANR	3218139	UnaryOperator	&		3218099	0					
ANR	3218140	PtrMemberAccess	s -> xll_sample_buf		3218099	1					
ANR	3218141	Identifier	s		3218099	0					
ANR	3218142	Identifier	xll_sample_buf		3218099	1					
ANR	3218143	Argument	& s -> xll_sample_buf_size		3218099	1					
ANR	3218144	UnaryOperationExpression	& s -> xll_sample_buf_size		3218099	0					
ANR	3218145	UnaryOperator	&		3218099	0					
ANR	3218146	PtrMemberAccess	s -> xll_sample_buf_size		3218099	1					
ANR	3218147	Identifier	s		3218099	0					
ANR	3218148	Identifier	xll_sample_buf_size		3218099	1					
ANR	3218149	Argument	( s -> xll_smpl_in_seg + DCA_XLL_AORDER_MAX ) * s -> xll_channels * sizeof ( * s -> xll_sample_buf )		3218099	2					
ANR	3218150	MultiplicativeExpression	( s -> xll_smpl_in_seg + DCA_XLL_AORDER_MAX ) * s -> xll_channels * sizeof ( * s -> xll_sample_buf )		3218099	0		*			
ANR	3218151	AdditiveExpression	s -> xll_smpl_in_seg + DCA_XLL_AORDER_MAX		3218099	0		+			
ANR	3218152	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3218153	Identifier	s		3218099	0					
ANR	3218154	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218155	Identifier	DCA_XLL_AORDER_MAX		3218099	1					
ANR	3218156	MultiplicativeExpression	s -> xll_channels * sizeof ( * s -> xll_sample_buf )		3218099	1		*			
ANR	3218157	PtrMemberAccess	s -> xll_channels		3218099	0					
ANR	3218158	Identifier	s		3218099	0					
ANR	3218159	Identifier	xll_channels		3218099	1					
ANR	3218160	SizeofExpression	sizeof ( * s -> xll_sample_buf )		3218099	1					
ANR	3218161	Sizeof	sizeof		3218099	0					
ANR	3218162	UnaryOperationExpression	* s -> xll_sample_buf		3218099	1					
ANR	3218163	UnaryOperator	*		3218099	0					
ANR	3218164	PtrMemberAccess	s -> xll_sample_buf		3218099	1					
ANR	3218165	Identifier	s		3218099	0					
ANR	3218166	Identifier	xll_sample_buf		3218099	1					
ANR	3218167	IfStatement	if ( ! s -> xll_sample_buf )		3218099	5					
ANR	3218168	Condition	! s -> xll_sample_buf	49:8:911:928	3218099	0	True				
ANR	3218169	UnaryOperationExpression	! s -> xll_sample_buf		3218099	0					
ANR	3218170	UnaryOperator	!		3218099	0					
ANR	3218171	PtrMemberAccess	s -> xll_sample_buf		3218099	1					
ANR	3218172	Identifier	s		3218099	0					
ANR	3218173	Identifier	xll_sample_buf		3218099	1					
ANR	3218174	ReturnStatement	return AVERROR ( ENOMEM ) ;	51:8:940:962	3218099	1	True				
ANR	3218175	CallExpression	AVERROR ( ENOMEM )		3218099	0					
ANR	3218176	Callee	AVERROR		3218099	0					
ANR	3218177	Identifier	AVERROR		3218099	0					
ANR	3218178	ArgumentList	ENOMEM		3218099	1					
ANR	3218179	Argument	ENOMEM		3218099	0					
ANR	3218180	Identifier	ENOMEM		3218099	0					
ANR	3218181	ExpressionStatement	history = s -> xll_sample_buf + s -> xll_smpl_in_seg * s -> xll_channels	55:4:971:1037	3218099	6	True				
ANR	3218182	AssignmentExpression	history = s -> xll_sample_buf + s -> xll_smpl_in_seg * s -> xll_channels		3218099	0		=			
ANR	3218183	Identifier	history		3218099	0					
ANR	3218184	AdditiveExpression	s -> xll_sample_buf + s -> xll_smpl_in_seg * s -> xll_channels		3218099	1		+			
ANR	3218185	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3218186	Identifier	s		3218099	0					
ANR	3218187	Identifier	xll_sample_buf		3218099	1					
ANR	3218188	MultiplicativeExpression	s -> xll_smpl_in_seg * s -> xll_channels		3218099	1		*			
ANR	3218189	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3218190	Identifier	s		3218099	0					
ANR	3218191	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218192	PtrMemberAccess	s -> xll_channels		3218099	1					
ANR	3218193	Identifier	s		3218099	0					
ANR	3218194	Identifier	xll_channels		3218099	1					
ANR	3218195	ForStatement	for ( seg = 0 ; seg < s -> xll_segments ; seg ++ )		3218099	7					
ANR	3218196	ForInit	seg = 0 ;	59:9:1051:1058	3218099	0	True				
ANR	3218197	AssignmentExpression	seg = 0		3218099	0		=			
ANR	3218198	Identifier	seg		3218099	0					
ANR	3218199	PrimaryExpression	0		3218099	1					
ANR	3218200	Condition	seg < s -> xll_segments	59:18:1060:1080	3218099	1	True				
ANR	3218201	RelationalExpression	seg < s -> xll_segments		3218099	0		<			
ANR	3218202	Identifier	seg		3218099	0					
ANR	3218203	PtrMemberAccess	s -> xll_segments		3218099	1					
ANR	3218204	Identifier	s		3218099	0					
ANR	3218205	Identifier	xll_segments		3218099	1					
ANR	3218206	PostIncDecOperationExpression	seg ++	59:41:1083:1087	3218099	2	True				
ANR	3218207	Identifier	seg		3218099	0					
ANR	3218208	IncDec	++		3218099	1					
ANR	3218209	CompoundStatement		59:8:1040:1059	3218099	3					
ANR	3218210	IdentifierDeclStatement	unsigned in_channel ;	61:8:1101:1120	3218099	0	True				
ANR	3218211	IdentifierDecl	in_channel		3218099	0					
ANR	3218212	IdentifierDeclType	unsigned		3218099	0					
ANR	3218213	Identifier	in_channel		3218099	1					
ANR	3218214	ForStatement	for ( chset_i = in_channel = 0 ; chset_i < s -> xll_nch_sets ; chset_i ++ )		3218099	1					
ANR	3218215	ForInit	chset_i = in_channel = 0 ;	65:13:1138:1162	3218099	0	True				
ANR	3218216	AssignmentExpression	chset_i = in_channel = 0		3218099	0		=			
ANR	3218217	Identifier	chset_i		3218099	0					
ANR	3218218	AssignmentExpression	in_channel = 0		3218099	1		=			
ANR	3218219	Identifier	in_channel		3218099	0					
ANR	3218220	PrimaryExpression	0		3218099	1					
ANR	3218221	Condition	chset_i < s -> xll_nch_sets	65:39:1164:1188	3218099	1	True				
ANR	3218222	RelationalExpression	chset_i < s -> xll_nch_sets		3218099	0		<			
ANR	3218223	Identifier	chset_i		3218099	0					
ANR	3218224	PtrMemberAccess	s -> xll_nch_sets		3218099	1					
ANR	3218225	Identifier	s		3218099	0					
ANR	3218226	Identifier	xll_nch_sets		3218099	1					
ANR	3218227	PostIncDecOperationExpression	chset_i ++	65:66:1191:1199	3218099	2	True				
ANR	3218228	Identifier	chset_i		3218099	0					
ANR	3218229	IncDec	++		3218099	1					
ANR	3218230	CompoundStatement		81:12:1635:1685	3218099	3					
ANR	3218231	IdentifierDeclStatement	int end_pos = get_bits_count ( gb ) + 8 * s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ] ;	69:12:1307:1412	3218099	0	True				
ANR	3218232	IdentifierDecl	end_pos = get_bits_count ( gb ) + 8 * s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ]		3218099	0					
ANR	3218233	IdentifierDeclType	int		3218099	0					
ANR	3218234	Identifier	end_pos		3218099	1					
ANR	3218235	AssignmentExpression	end_pos = get_bits_count ( gb ) + 8 * s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ]		3218099	2		=			
ANR	3218236	Identifier	end_pos		3218099	0					
ANR	3218237	AdditiveExpression	get_bits_count ( gb ) + 8 * s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ]		3218099	1		+			
ANR	3218238	CallExpression	get_bits_count ( gb )		3218099	0					
ANR	3218239	Callee	get_bits_count		3218099	0					
ANR	3218240	Identifier	get_bits_count		3218099	0					
ANR	3218241	ArgumentList	gb		3218099	1					
ANR	3218242	Argument	gb		3218099	0					
ANR	3218243	Identifier	gb		3218099	0					
ANR	3218244	MultiplicativeExpression	8 * s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ]		3218099	1		*			
ANR	3218245	PrimaryExpression	8		3218099	0					
ANR	3218246	ArrayIndexing	s -> xll_navi . chset_size [ 0 ] [ seg ] [ chset_i ]		3218099	1					
ANR	3218247	ArrayIndexing	s -> xll_navi . chset_size [ 0 ] [ seg ]		3218099	0					
ANR	3218248	ArrayIndexing	s -> xll_navi . chset_size [ 0 ]		3218099	0					
ANR	3218249	MemberAccess	s -> xll_navi . chset_size		3218099	0					
ANR	3218250	PtrMemberAccess	s -> xll_navi		3218099	0					
ANR	3218251	Identifier	s		3218099	0					
ANR	3218252	Identifier	xll_navi		3218099	1					
ANR	3218253	Identifier	chset_size		3218099	1					
ANR	3218254	PrimaryExpression	0		3218099	1					
ANR	3218255	Identifier	seg		3218099	1					
ANR	3218256	Identifier	chset_i		3218099	1					
ANR	3218257	IdentifierDeclStatement	"int i , j ;"	73:12:1427:1435	3218099	1	True				
ANR	3218258	IdentifierDecl	i		3218099	0					
ANR	3218259	IdentifierDeclType	int		3218099	0					
ANR	3218260	Identifier	i		3218099	1					
ANR	3218261	IdentifierDecl	j		3218099	1					
ANR	3218262	IdentifierDeclType	int		3218099	0					
ANR	3218263	Identifier	j		3218099	1					
ANR	3218264	IdentifierDeclStatement	struct coding_params * params = & param_state [ chset_i ] ;	75:12:1450:1502	3218099	2	True				
ANR	3218265	IdentifierDecl	* params = & param_state [ chset_i ]		3218099	0					
ANR	3218266	IdentifierDeclType	struct coding_params *		3218099	0					
ANR	3218267	Identifier	params		3218099	1					
ANR	3218268	AssignmentExpression	* params = & param_state [ chset_i ]		3218099	2		=			
ANR	3218269	Identifier	params		3218099	0					
ANR	3218270	UnaryOperationExpression	& param_state [ chset_i ]		3218099	1					
ANR	3218271	UnaryOperator	&		3218099	0					
ANR	3218272	ArrayIndexing	param_state [ chset_i ]		3218099	1					
ANR	3218273	Identifier	param_state		3218099	0					
ANR	3218274	Identifier	chset_i		3218099	1					
ANR	3218275	IdentifierDeclStatement	int use_seg_state_code_param ;	81:12:1653:1681	3218099	3	True				
ANR	3218276	IdentifierDecl	use_seg_state_code_param		3218099	0					
ANR	3218277	IdentifierDeclType	int		3218099	0					
ANR	3218278	Identifier	use_seg_state_code_param		3218099	1					
ANR	3218279	IdentifierDeclStatement	XllChSetSubHeader * chset = & s -> xll_chsets [ chset_i ] ;	83:12:1696:1746	3218099	4	True				
ANR	3218280	IdentifierDecl	* chset = & s -> xll_chsets [ chset_i ]		3218099	0					
ANR	3218281	IdentifierDeclType	XllChSetSubHeader *		3218099	0					
ANR	3218282	Identifier	chset		3218099	1					
ANR	3218283	AssignmentExpression	* chset = & s -> xll_chsets [ chset_i ]		3218099	2		=			
ANR	3218284	Identifier	chset		3218099	0					
ANR	3218285	UnaryOperationExpression	& s -> xll_chsets [ chset_i ]		3218099	1					
ANR	3218286	UnaryOperator	&		3218099	0					
ANR	3218287	ArrayIndexing	s -> xll_chsets [ chset_i ]		3218099	1					
ANR	3218288	PtrMemberAccess	s -> xll_chsets		3218099	0					
ANR	3218289	Identifier	s		3218099	0					
ANR	3218290	Identifier	xll_chsets		3218099	1					
ANR	3218291	Identifier	chset_i		3218099	1					
ANR	3218292	IfStatement	if ( in_channel >= s -> avctx -> channels )		3218099	5					
ANR	3218293	Condition	in_channel >= s -> avctx -> channels	85:16:1765:1796	3218099	0	True				
ANR	3218294	RelationalExpression	in_channel >= s -> avctx -> channels		3218099	0		>=			
ANR	3218295	Identifier	in_channel		3218099	0					
ANR	3218296	PtrMemberAccess	s -> avctx -> channels		3218099	1					
ANR	3218297	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3218298	Identifier	s		3218099	0					
ANR	3218299	Identifier	avctx		3218099	1					
ANR	3218300	Identifier	channels		3218099	1					
ANR	3218301	GotoStatement	goto next_chset ;	89:16:1880:1895	3218099	1	True				
ANR	3218302	Identifier	next_chset		3218099	0					
ANR	3218303	IfStatement	if ( s -> avctx -> sample_rate != chset -> sampling_frequency )		3218099	6					
ANR	3218304	Condition	s -> avctx -> sample_rate != chset -> sampling_frequency	93:16:1916:1965	3218099	0	True				
ANR	3218305	EqualityExpression	s -> avctx -> sample_rate != chset -> sampling_frequency		3218099	0		!=			
ANR	3218306	PtrMemberAccess	s -> avctx -> sample_rate		3218099	0					
ANR	3218307	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3218308	Identifier	s		3218099	0					
ANR	3218309	Identifier	avctx		3218099	1					
ANR	3218310	Identifier	sample_rate		3218099	1					
ANR	3218311	PtrMemberAccess	chset -> sampling_frequency		3218099	1					
ANR	3218312	Identifier	chset		3218099	0					
ANR	3218313	Identifier	sampling_frequency		3218099	1					
ANR	3218314	CompoundStatement		91:68:1907:1907	3218099	1					
ANR	3218315	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""XLL: unexpected chset sample rate %d, expected %d\\n"" , chset -> sampling_frequency , s -> avctx -> sample_rate )"	95:16:1987:2172	3218099	0	True				
ANR	3218316	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""XLL: unexpected chset sample rate %d, expected %d\\n"" , chset -> sampling_frequency , s -> avctx -> sample_rate )"		3218099	0					
ANR	3218317	Callee	av_log		3218099	0					
ANR	3218318	Identifier	av_log		3218099	0					
ANR	3218319	ArgumentList	s -> avctx		3218099	1					
ANR	3218320	Argument	s -> avctx		3218099	0					
ANR	3218321	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3218322	Identifier	s		3218099	0					
ANR	3218323	Identifier	avctx		3218099	1					
ANR	3218324	Argument	AV_LOG_WARNING		3218099	1					
ANR	3218325	Identifier	AV_LOG_WARNING		3218099	0					
ANR	3218326	Argument	"""XLL: unexpected chset sample rate %d, expected %d\\n"""		3218099	2					
ANR	3218327	PrimaryExpression	"""XLL: unexpected chset sample rate %d, expected %d\\n"""		3218099	0					
ANR	3218328	Argument	chset -> sampling_frequency		3218099	3					
ANR	3218329	PtrMemberAccess	chset -> sampling_frequency		3218099	0					
ANR	3218330	Identifier	chset		3218099	0					
ANR	3218331	Identifier	sampling_frequency		3218099	1					
ANR	3218332	Argument	s -> avctx -> sample_rate		3218099	4					
ANR	3218333	PtrMemberAccess	s -> avctx -> sample_rate		3218099	0					
ANR	3218334	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3218335	Identifier	s		3218099	0					
ANR	3218336	Identifier	avctx		3218099	1					
ANR	3218337	Identifier	sample_rate		3218099	1					
ANR	3218338	GotoStatement	goto next_chset ;	101:16:2191:2206	3218099	1	True				
ANR	3218339	Identifier	next_chset		3218099	0					
ANR	3218340	IfStatement	if ( seg != 0 )		3218099	7					
ANR	3218341	Condition	seg != 0	105:16:2240:2247	3218099	0	True				
ANR	3218342	EqualityExpression	seg != 0		3218099	0		!=			
ANR	3218343	Identifier	seg		3218099	0					
ANR	3218344	PrimaryExpression	0		3218099	1					
ANR	3218345	ExpressionStatement	"use_seg_state_code_param = get_bits ( gb , 1 )"	107:16:2267:2309	3218099	1	True				
ANR	3218346	AssignmentExpression	"use_seg_state_code_param = get_bits ( gb , 1 )"		3218099	0		=			
ANR	3218347	Identifier	use_seg_state_code_param		3218099	0					
ANR	3218348	CallExpression	"get_bits ( gb , 1 )"		3218099	1					
ANR	3218349	Callee	get_bits		3218099	0					
ANR	3218350	Identifier	get_bits		3218099	0					
ANR	3218351	ArgumentList	gb		3218099	1					
ANR	3218352	Argument	gb		3218099	0					
ANR	3218353	Identifier	gb		3218099	0					
ANR	3218354	Argument	1		3218099	1					
ANR	3218355	PrimaryExpression	1		3218099	0					
ANR	3218356	ElseStatement	else		3218099	0					
ANR	3218357	ExpressionStatement	use_seg_state_code_param = 0	111:16:2346:2374	3218099	0	True				
ANR	3218358	AssignmentExpression	use_seg_state_code_param = 0		3218099	0		=			
ANR	3218359	Identifier	use_seg_state_code_param		3218099	0					
ANR	3218360	PrimaryExpression	0		3218099	1					
ANR	3218361	IfStatement	if ( ! use_seg_state_code_param )		3218099	8					
ANR	3218362	Condition	! use_seg_state_code_param	115:16:2395:2419	3218099	0	True				
ANR	3218363	UnaryOperationExpression	! use_seg_state_code_param		3218099	0					
ANR	3218364	UnaryOperator	!		3218099	0					
ANR	3218365	Identifier	use_seg_state_code_param		3218099	1					
ANR	3218366	CompoundStatement		117:16:2420:2438	3218099	1					
ANR	3218367	IdentifierDeclStatement	"int num_param_sets , i ;"	117:16:2441:2462	3218099	0	True				
ANR	3218368	IdentifierDecl	num_param_sets		3218099	0					
ANR	3218369	IdentifierDeclType	int		3218099	0					
ANR	3218370	Identifier	num_param_sets		3218099	1					
ANR	3218371	IdentifierDecl	i		3218099	1					
ANR	3218372	IdentifierDeclType	int		3218099	0					
ANR	3218373	Identifier	i		3218099	1					
ANR	3218374	IdentifierDeclStatement	unsigned bits4ABIT ;	119:16:2481:2499	3218099	1	True				
ANR	3218375	IdentifierDecl	bits4ABIT		3218099	0					
ANR	3218376	IdentifierDeclType	unsigned		3218099	0					
ANR	3218377	Identifier	bits4ABIT		3218099	1					
ANR	3218378	ExpressionStatement	"params -> seg_type = get_bits ( gb , 1 )"	123:16:2520:2554	3218099	2	True				
ANR	3218379	AssignmentExpression	"params -> seg_type = get_bits ( gb , 1 )"		3218099	0		=			
ANR	3218380	PtrMemberAccess	params -> seg_type		3218099	0					
ANR	3218381	Identifier	params		3218099	0					
ANR	3218382	Identifier	seg_type		3218099	1					
ANR	3218383	CallExpression	"get_bits ( gb , 1 )"		3218099	1					
ANR	3218384	Callee	get_bits		3218099	0					
ANR	3218385	Identifier	get_bits		3218099	0					
ANR	3218386	ArgumentList	gb		3218099	1					
ANR	3218387	Argument	gb		3218099	0					
ANR	3218388	Identifier	gb		3218099	0					
ANR	3218389	Argument	1		3218099	1					
ANR	3218390	PrimaryExpression	1		3218099	0					
ANR	3218391	ExpressionStatement	num_param_sets = params -> seg_type ? 1 : chset -> channels	125:16:2573:2630	3218099	3	True				
ANR	3218392	AssignmentExpression	num_param_sets = params -> seg_type ? 1 : chset -> channels		3218099	0		=			
ANR	3218393	Identifier	num_param_sets		3218099	0					
ANR	3218394	ConditionalExpression	params -> seg_type ? 1 : chset -> channels		3218099	1					
ANR	3218395	Condition	params -> seg_type		3218099	0					
ANR	3218396	PtrMemberAccess	params -> seg_type		3218099	0					
ANR	3218397	Identifier	params		3218099	0					
ANR	3218398	Identifier	seg_type		3218099	1					
ANR	3218399	PrimaryExpression	1		3218099	1					
ANR	3218400	PtrMemberAccess	chset -> channels		3218099	2					
ANR	3218401	Identifier	chset		3218099	0					
ANR	3218402	Identifier	channels		3218099	1					
ANR	3218403	IfStatement	if ( chset -> bit_width > 16 )		3218099	4					
ANR	3218404	Condition	chset -> bit_width > 16	129:20:2655:2675	3218099	0	True				
ANR	3218405	RelationalExpression	chset -> bit_width > 16		3218099	0		>			
ANR	3218406	PtrMemberAccess	chset -> bit_width		3218099	0					
ANR	3218407	Identifier	chset		3218099	0					
ANR	3218408	Identifier	bit_width		3218099	1					
ANR	3218409	PrimaryExpression	16		3218099	1					
ANR	3218410	CompoundStatement		127:43:2617:2617	3218099	1					
ANR	3218411	ExpressionStatement	bits4ABIT = 5	131:20:2701:2714	3218099	0	True				
ANR	3218412	AssignmentExpression	bits4ABIT = 5		3218099	0		=			
ANR	3218413	Identifier	bits4ABIT		3218099	0					
ANR	3218414	PrimaryExpression	5		3218099	1					
ANR	3218415	ElseStatement	else		3218099	0					
ANR	3218416	CompoundStatement		131:23:2679:2679	3218099	0					
ANR	3218417	IfStatement	if ( chset -> bit_width > 8 )		3218099	0					
ANR	3218418	Condition	chset -> bit_width > 8	135:24:2767:2786	3218099	0	True				
ANR	3218419	RelationalExpression	chset -> bit_width > 8		3218099	0		>			
ANR	3218420	PtrMemberAccess	chset -> bit_width		3218099	0					
ANR	3218421	Identifier	chset		3218099	0					
ANR	3218422	Identifier	bit_width		3218099	1					
ANR	3218423	PrimaryExpression	8		3218099	1					
ANR	3218424	ExpressionStatement	bits4ABIT = 4	137:24:2814:2827	3218099	1	True				
ANR	3218425	AssignmentExpression	bits4ABIT = 4		3218099	0		=			
ANR	3218426	Identifier	bits4ABIT		3218099	0					
ANR	3218427	PrimaryExpression	4		3218099	1					
ANR	3218428	ElseStatement	else		3218099	0					
ANR	3218429	ExpressionStatement	bits4ABIT = 3	141:24:2880:2893	3218099	0	True				
ANR	3218430	AssignmentExpression	bits4ABIT = 3		3218099	0		=			
ANR	3218431	Identifier	bits4ABIT		3218099	0					
ANR	3218432	PrimaryExpression	3		3218099	1					
ANR	3218433	IfStatement	if ( s -> xll_nch_sets > 1 )		3218099	1					
ANR	3218434	Condition	s -> xll_nch_sets > 1	143:24:2920:2938	3218099	0	True				
ANR	3218435	RelationalExpression	s -> xll_nch_sets > 1		3218099	0		>			
ANR	3218436	PtrMemberAccess	s -> xll_nch_sets		3218099	0					
ANR	3218437	Identifier	s		3218099	0					
ANR	3218438	Identifier	xll_nch_sets		3218099	1					
ANR	3218439	PrimaryExpression	1		3218099	1					
ANR	3218440	ExpressionStatement	bits4ABIT ++	145:24:2966:2977	3218099	1	True				
ANR	3218441	PostIncDecOperationExpression	bits4ABIT ++		3218099	0					
ANR	3218442	Identifier	bits4ABIT		3218099	0					
ANR	3218443	IncDec	++		3218099	1					
ANR	3218444	ForStatement	for ( i = 0 ; i < num_param_sets ; i ++ )		3218099	5					
ANR	3218445	ForInit	i = 0 ;	151:21:3022:3027	3218099	0	True				
ANR	3218446	AssignmentExpression	i = 0		3218099	0		=			
ANR	3218447	Identifier	i		3218099	0					
ANR	3218448	PrimaryExpression	0		3218099	1					
ANR	3218449	Condition	i < num_param_sets	151:28:3029:3046	3218099	1	True				
ANR	3218450	RelationalExpression	i < num_param_sets		3218099	0		<			
ANR	3218451	Identifier	i		3218099	0					
ANR	3218452	Identifier	num_param_sets		3218099	1					
ANR	3218453	PostIncDecOperationExpression	i ++	151:48:3049:3051	3218099	2	True				
ANR	3218454	Identifier	i		3218099	0					
ANR	3218455	IncDec	++		3218099	1					
ANR	3218456	CompoundStatement		149:53:2993:2993	3218099	3					
ANR	3218457	ExpressionStatement	"params -> rice_code_flag [ i ] = get_bits ( gb , 1 )"	153:20:3077:3120	3218099	0	True				
ANR	3218458	AssignmentExpression	"params -> rice_code_flag [ i ] = get_bits ( gb , 1 )"		3218099	0		=			
ANR	3218459	ArrayIndexing	params -> rice_code_flag [ i ]		3218099	0					
ANR	3218460	PtrMemberAccess	params -> rice_code_flag		3218099	0					
ANR	3218461	Identifier	params		3218099	0					
ANR	3218462	Identifier	rice_code_flag		3218099	1					
ANR	3218463	Identifier	i		3218099	1					
ANR	3218464	CallExpression	"get_bits ( gb , 1 )"		3218099	1					
ANR	3218465	Callee	get_bits		3218099	0					
ANR	3218466	Identifier	get_bits		3218099	0					
ANR	3218467	ArgumentList	gb		3218099	1					
ANR	3218468	Argument	gb		3218099	0					
ANR	3218469	Identifier	gb		3218099	0					
ANR	3218470	Argument	1		3218099	1					
ANR	3218471	PrimaryExpression	1		3218099	0					
ANR	3218472	IfStatement	"if ( ! params -> seg_type && params -> rice_code_flag [ i ] && get_bits ( gb , 1 ) )"		3218099	1					
ANR	3218473	Condition	"! params -> seg_type && params -> rice_code_flag [ i ] && get_bits ( gb , 1 )"	155:24:3147:3211	3218099	0	True				
ANR	3218474	AndExpression	"! params -> seg_type && params -> rice_code_flag [ i ] && get_bits ( gb , 1 )"		3218099	0		&&			
ANR	3218475	UnaryOperationExpression	! params -> seg_type		3218099	0					
ANR	3218476	UnaryOperator	!		3218099	0					
ANR	3218477	PtrMemberAccess	params -> seg_type		3218099	1					
ANR	3218478	Identifier	params		3218099	0					
ANR	3218479	Identifier	seg_type		3218099	1					
ANR	3218480	AndExpression	"params -> rice_code_flag [ i ] && get_bits ( gb , 1 )"		3218099	1		&&			
ANR	3218481	ArrayIndexing	params -> rice_code_flag [ i ]		3218099	0					
ANR	3218482	PtrMemberAccess	params -> rice_code_flag		3218099	0					
ANR	3218483	Identifier	params		3218099	0					
ANR	3218484	Identifier	rice_code_flag		3218099	1					
ANR	3218485	Identifier	i		3218099	1					
ANR	3218486	CallExpression	"get_bits ( gb , 1 )"		3218099	1					
ANR	3218487	Callee	get_bits		3218099	0					
ANR	3218488	Identifier	get_bits		3218099	0					
ANR	3218489	ArgumentList	gb		3218099	1					
ANR	3218490	Argument	gb		3218099	0					
ANR	3218491	Identifier	gb		3218099	0					
ANR	3218492	Argument	1		3218099	1					
ANR	3218493	PrimaryExpression	1		3218099	0					
ANR	3218494	ExpressionStatement	"params -> pancAuxABIT [ i ] = get_bits ( gb , bits4ABIT ) + 1"	157:24:3239:3291	3218099	1	True				
ANR	3218495	AssignmentExpression	"params -> pancAuxABIT [ i ] = get_bits ( gb , bits4ABIT ) + 1"		3218099	0		=			
ANR	3218496	ArrayIndexing	params -> pancAuxABIT [ i ]		3218099	0					
ANR	3218497	PtrMemberAccess	params -> pancAuxABIT		3218099	0					
ANR	3218498	Identifier	params		3218099	0					
ANR	3218499	Identifier	pancAuxABIT		3218099	1					
ANR	3218500	Identifier	i		3218099	1					
ANR	3218501	AdditiveExpression	"get_bits ( gb , bits4ABIT ) + 1"		3218099	1		+			
ANR	3218502	CallExpression	"get_bits ( gb , bits4ABIT )"		3218099	0					
ANR	3218503	Callee	get_bits		3218099	0					
ANR	3218504	Identifier	get_bits		3218099	0					
ANR	3218505	ArgumentList	gb		3218099	1					
ANR	3218506	Argument	gb		3218099	0					
ANR	3218507	Identifier	gb		3218099	0					
ANR	3218508	Argument	bits4ABIT		3218099	1					
ANR	3218509	Identifier	bits4ABIT		3218099	0					
ANR	3218510	PrimaryExpression	1		3218099	1					
ANR	3218511	ElseStatement	else		3218099	0					
ANR	3218512	ExpressionStatement	params -> pancAuxABIT [ i ] = 0	161:24:3344:3370	3218099	0	True				
ANR	3218513	AssignmentExpression	params -> pancAuxABIT [ i ] = 0		3218099	0		=			
ANR	3218514	ArrayIndexing	params -> pancAuxABIT [ i ]		3218099	0					
ANR	3218515	PtrMemberAccess	params -> pancAuxABIT		3218099	0					
ANR	3218516	Identifier	params		3218099	0					
ANR	3218517	Identifier	pancAuxABIT		3218099	1					
ANR	3218518	Identifier	i		3218099	1					
ANR	3218519	PrimaryExpression	0		3218099	1					
ANR	3218520	ForStatement	for ( i = 0 ; i < num_param_sets ; i ++ )		3218099	6					
ANR	3218521	ForInit	i = 0 ;	167:21:3415:3420	3218099	0	True				
ANR	3218522	AssignmentExpression	i = 0		3218099	0		=			
ANR	3218523	Identifier	i		3218099	0					
ANR	3218524	PrimaryExpression	0		3218099	1					
ANR	3218525	Condition	i < num_param_sets	167:28:3422:3439	3218099	1	True				
ANR	3218526	RelationalExpression	i < num_param_sets		3218099	0		<			
ANR	3218527	Identifier	i		3218099	0					
ANR	3218528	Identifier	num_param_sets		3218099	1					
ANR	3218529	PostIncDecOperationExpression	i ++	167:48:3442:3444	3218099	2	True				
ANR	3218530	Identifier	i		3218099	0					
ANR	3218531	IncDec	++		3218099	1					
ANR	3218532	CompoundStatement		165:53:3386:3386	3218099	3					
ANR	3218533	IfStatement	if ( ! seg )		3218099	0					
ANR	3218534	Condition	! seg	169:24:3474:3477	3218099	0	True				
ANR	3218535	UnaryOperationExpression	! seg		3218099	0					
ANR	3218536	UnaryOperator	!		3218099	0					
ANR	3218537	Identifier	seg		3218099	1					
ANR	3218538	CompoundStatement		167:30:3419:3419	3218099	1					
ANR	3218539	ExpressionStatement	"params -> pancABIT0 [ i ] = get_bits ( gb , bits4ABIT )"	173:24:3560:3606	3218099	0	True				
ANR	3218540	AssignmentExpression	"params -> pancABIT0 [ i ] = get_bits ( gb , bits4ABIT )"		3218099	0		=			
ANR	3218541	ArrayIndexing	params -> pancABIT0 [ i ]		3218099	0					
ANR	3218542	PtrMemberAccess	params -> pancABIT0		3218099	0					
ANR	3218543	Identifier	params		3218099	0					
ANR	3218544	Identifier	pancABIT0		3218099	1					
ANR	3218545	Identifier	i		3218099	1					
ANR	3218546	CallExpression	"get_bits ( gb , bits4ABIT )"		3218099	1					
ANR	3218547	Callee	get_bits		3218099	0					
ANR	3218548	Identifier	get_bits		3218099	0					
ANR	3218549	ArgumentList	gb		3218099	1					
ANR	3218550	Argument	gb		3218099	0					
ANR	3218551	Identifier	gb		3218099	0					
ANR	3218552	Argument	bits4ABIT		3218099	1					
ANR	3218553	Identifier	bits4ABIT		3218099	0					
ANR	3218554	IfStatement	if ( params -> rice_code_flag [ i ] == 0 && params -> pancABIT0 [ i ] > 0 )		3218099	1					
ANR	3218555	Condition	params -> rice_code_flag [ i ] == 0 && params -> pancABIT0 [ i ] > 0	175:28:3637:3694	3218099	0	True				
ANR	3218556	AndExpression	params -> rice_code_flag [ i ] == 0 && params -> pancABIT0 [ i ] > 0		3218099	0		&&			
ANR	3218557	EqualityExpression	params -> rice_code_flag [ i ] == 0		3218099	0		==			
ANR	3218558	ArrayIndexing	params -> rice_code_flag [ i ]		3218099	0					
ANR	3218559	PtrMemberAccess	params -> rice_code_flag		3218099	0					
ANR	3218560	Identifier	params		3218099	0					
ANR	3218561	Identifier	rice_code_flag		3218099	1					
ANR	3218562	Identifier	i		3218099	1					
ANR	3218563	PrimaryExpression	0		3218099	1					
ANR	3218564	RelationalExpression	params -> pancABIT0 [ i ] > 0		3218099	1		>			
ANR	3218565	ArrayIndexing	params -> pancABIT0 [ i ]		3218099	0					
ANR	3218566	PtrMemberAccess	params -> pancABIT0		3218099	0					
ANR	3218567	Identifier	params		3218099	0					
ANR	3218568	Identifier	pancABIT0		3218099	1					
ANR	3218569	Identifier	i		3218099	1					
ANR	3218570	PrimaryExpression	0		3218099	1					
ANR	3218571	ExpressionStatement	params -> pancABIT0 [ i ] ++	179:28:3777:3799	3218099	1	True				
ANR	3218572	PostIncDecOperationExpression	params -> pancABIT0 [ i ] ++		3218099	0					
ANR	3218573	ArrayIndexing	params -> pancABIT0 [ i ]		3218099	0					
ANR	3218574	PtrMemberAccess	params -> pancABIT0		3218099	0					
ANR	3218575	Identifier	params		3218099	0					
ANR	3218576	Identifier	pancABIT0		3218099	1					
ANR	3218577	Identifier	i		3218099	1					
ANR	3218578	IncDec	++		3218099	1					
ANR	3218579	IfStatement	if ( params -> seg_type == 0 )		3218099	2					
ANR	3218580	Condition	params -> seg_type == 0	185:28:3905:3925	3218099	0	True				
ANR	3218581	EqualityExpression	params -> seg_type == 0		3218099	0		==			
ANR	3218582	PtrMemberAccess	params -> seg_type		3218099	0					
ANR	3218583	Identifier	params		3218099	0					
ANR	3218584	Identifier	seg_type		3218099	1					
ANR	3218585	PrimaryExpression	0		3218099	1					
ANR	3218586	ExpressionStatement	params -> nSamplPart0 [ i ] = chset -> adapt_order [ 0 ] [ i ]	187:28:3957:4006	3218099	1	True				
ANR	3218587	AssignmentExpression	params -> nSamplPart0 [ i ] = chset -> adapt_order [ 0 ] [ i ]		3218099	0		=			
ANR	3218588	ArrayIndexing	params -> nSamplPart0 [ i ]		3218099	0					
ANR	3218589	PtrMemberAccess	params -> nSamplPart0		3218099	0					
ANR	3218590	Identifier	params		3218099	0					
ANR	3218591	Identifier	nSamplPart0		3218099	1					
ANR	3218592	Identifier	i		3218099	1					
ANR	3218593	ArrayIndexing	chset -> adapt_order [ 0 ] [ i ]		3218099	1					
ANR	3218594	ArrayIndexing	chset -> adapt_order [ 0 ]		3218099	0					
ANR	3218595	PtrMemberAccess	chset -> adapt_order		3218099	0					
ANR	3218596	Identifier	chset		3218099	0					
ANR	3218597	Identifier	adapt_order		3218099	1					
ANR	3218598	PrimaryExpression	0		3218099	1					
ANR	3218599	Identifier	i		3218099	1					
ANR	3218600	ElseStatement	else		3218099	0					
ANR	3218601	ExpressionStatement	params -> nSamplPart0 [ i ] = chset -> adapt_order_max [ 0 ]	191:28:4067:4117	3218099	0	True				
ANR	3218602	AssignmentExpression	params -> nSamplPart0 [ i ] = chset -> adapt_order_max [ 0 ]		3218099	0		=			
ANR	3218603	ArrayIndexing	params -> nSamplPart0 [ i ]		3218099	0					
ANR	3218604	PtrMemberAccess	params -> nSamplPart0		3218099	0					
ANR	3218605	Identifier	params		3218099	0					
ANR	3218606	Identifier	nSamplPart0		3218099	1					
ANR	3218607	Identifier	i		3218099	1					
ANR	3218608	ArrayIndexing	chset -> adapt_order_max [ 0 ]		3218099	1					
ANR	3218609	PtrMemberAccess	chset -> adapt_order_max		3218099	0					
ANR	3218610	Identifier	chset		3218099	0					
ANR	3218611	Identifier	adapt_order_max		3218099	1					
ANR	3218612	PrimaryExpression	0		3218099	1					
ANR	3218613	ElseStatement	else		3218099	0					
ANR	3218614	ExpressionStatement	params -> nSamplPart0 [ i ] = 0	195:24:4172:4198	3218099	0	True				
ANR	3218615	AssignmentExpression	params -> nSamplPart0 [ i ] = 0		3218099	0		=			
ANR	3218616	ArrayIndexing	params -> nSamplPart0 [ i ]		3218099	0					
ANR	3218617	PtrMemberAccess	params -> nSamplPart0		3218099	0					
ANR	3218618	Identifier	params		3218099	0					
ANR	3218619	Identifier	nSamplPart0		3218099	1					
ANR	3218620	Identifier	i		3218099	1					
ANR	3218621	PrimaryExpression	0		3218099	1					
ANR	3218622	ExpressionStatement	"params -> pancABIT [ i ] = get_bits ( gb , bits4ABIT )"	201:20:4272:4317	3218099	1	True				
ANR	3218623	AssignmentExpression	"params -> pancABIT [ i ] = get_bits ( gb , bits4ABIT )"		3218099	0		=			
ANR	3218624	ArrayIndexing	params -> pancABIT [ i ]		3218099	0					
ANR	3218625	PtrMemberAccess	params -> pancABIT		3218099	0					
ANR	3218626	Identifier	params		3218099	0					
ANR	3218627	Identifier	pancABIT		3218099	1					
ANR	3218628	Identifier	i		3218099	1					
ANR	3218629	CallExpression	"get_bits ( gb , bits4ABIT )"		3218099	1					
ANR	3218630	Callee	get_bits		3218099	0					
ANR	3218631	Identifier	get_bits		3218099	0					
ANR	3218632	ArgumentList	gb		3218099	1					
ANR	3218633	Argument	gb		3218099	0					
ANR	3218634	Identifier	gb		3218099	0					
ANR	3218635	Argument	bits4ABIT		3218099	1					
ANR	3218636	Identifier	bits4ABIT		3218099	0					
ANR	3218637	IfStatement	if ( params -> rice_code_flag [ i ] == 0 && params -> pancABIT [ i ] > 0 )		3218099	2					
ANR	3218638	Condition	params -> rice_code_flag [ i ] == 0 && params -> pancABIT [ i ] > 0	203:24:4344:4400	3218099	0	True				
ANR	3218639	AndExpression	params -> rice_code_flag [ i ] == 0 && params -> pancABIT [ i ] > 0		3218099	0		&&			
ANR	3218640	EqualityExpression	params -> rice_code_flag [ i ] == 0		3218099	0		==			
ANR	3218641	ArrayIndexing	params -> rice_code_flag [ i ]		3218099	0					
ANR	3218642	PtrMemberAccess	params -> rice_code_flag		3218099	0					
ANR	3218643	Identifier	params		3218099	0					
ANR	3218644	Identifier	rice_code_flag		3218099	1					
ANR	3218645	Identifier	i		3218099	1					
ANR	3218646	PrimaryExpression	0		3218099	1					
ANR	3218647	RelationalExpression	params -> pancABIT [ i ] > 0		3218099	1		>			
ANR	3218648	ArrayIndexing	params -> pancABIT [ i ]		3218099	0					
ANR	3218649	PtrMemberAccess	params -> pancABIT		3218099	0					
ANR	3218650	Identifier	params		3218099	0					
ANR	3218651	Identifier	pancABIT		3218099	1					
ANR	3218652	Identifier	i		3218099	1					
ANR	3218653	PrimaryExpression	0		3218099	1					
ANR	3218654	ExpressionStatement	params -> pancABIT [ i ] ++	207:24:4475:4496	3218099	1	True				
ANR	3218655	PostIncDecOperationExpression	params -> pancABIT [ i ] ++		3218099	0					
ANR	3218656	ArrayIndexing	params -> pancABIT [ i ]		3218099	0					
ANR	3218657	PtrMemberAccess	params -> pancABIT		3218099	0					
ANR	3218658	Identifier	params		3218099	0					
ANR	3218659	Identifier	pancABIT		3218099	1					
ANR	3218660	Identifier	i		3218099	1					
ANR	3218661	IncDec	++		3218099	1					
ANR	3218662	ForStatement	for ( i = 0 ; i < chset -> channels ; i ++ )		3218099	9					
ANR	3218663	ForInit	i = 0 ;	213:17:4550:4555	3218099	0	True				
ANR	3218664	AssignmentExpression	i = 0		3218099	0		=			
ANR	3218665	Identifier	i		3218099	0					
ANR	3218666	PrimaryExpression	0		3218099	1					
ANR	3218667	Condition	i < chset -> channels	213:24:4557:4575	3218099	1	True				
ANR	3218668	RelationalExpression	i < chset -> channels		3218099	0		<			
ANR	3218669	Identifier	i		3218099	0					
ANR	3218670	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3218671	Identifier	chset		3218099	0					
ANR	3218672	Identifier	channels		3218099	1					
ANR	3218673	PostIncDecOperationExpression	i ++	213:45:4578:4580	3218099	2	True				
ANR	3218674	Identifier	i		3218099	0					
ANR	3218675	IncDec	++		3218099	1					
ANR	3218676	CompoundStatement		219:16:4738:4848	3218099	3					
ANR	3218677	IdentifierDeclStatement	int param_index = params -> seg_type ? 0 : i ;	215:16:4602:4644	3218099	0	True				
ANR	3218678	IdentifierDecl	param_index = params -> seg_type ? 0 : i		3218099	0					
ANR	3218679	IdentifierDeclType	int		3218099	0					
ANR	3218680	Identifier	param_index		3218099	1					
ANR	3218681	AssignmentExpression	param_index = params -> seg_type ? 0 : i		3218099	2		=			
ANR	3218682	Identifier	param_index		3218099	0					
ANR	3218683	ConditionalExpression	params -> seg_type ? 0 : i		3218099	1					
ANR	3218684	Condition	params -> seg_type		3218099	0					
ANR	3218685	PtrMemberAccess	params -> seg_type		3218099	0					
ANR	3218686	Identifier	params		3218099	0					
ANR	3218687	Identifier	seg_type		3218099	1					
ANR	3218688	PrimaryExpression	0		3218099	1					
ANR	3218689	Identifier	i		3218099	2					
ANR	3218690	IdentifierDeclStatement	int bits = params -> pancABIT0 [ param_index ] ;	217:16:4663:4711	3218099	1	True				
ANR	3218691	IdentifierDecl	bits = params -> pancABIT0 [ param_index ]		3218099	0					
ANR	3218692	IdentifierDeclType	int		3218099	0					
ANR	3218693	Identifier	bits		3218099	1					
ANR	3218694	AssignmentExpression	bits = params -> pancABIT0 [ param_index ]		3218099	2		=			
ANR	3218695	Identifier	bits		3218099	0					
ANR	3218696	ArrayIndexing	params -> pancABIT0 [ param_index ]		3218099	1					
ANR	3218697	PtrMemberAccess	params -> pancABIT0		3218099	0					
ANR	3218698	Identifier	params		3218099	0					
ANR	3218699	Identifier	pancABIT0		3218099	1					
ANR	3218700	Identifier	param_index		3218099	1					
ANR	3218701	IdentifierDeclStatement	int part0 = params -> nSamplPart0 [ param_index ] ;	219:16:4730:4780	3218099	2	True				
ANR	3218702	IdentifierDecl	part0 = params -> nSamplPart0 [ param_index ]		3218099	0					
ANR	3218703	IdentifierDeclType	int		3218099	0					
ANR	3218704	Identifier	part0		3218099	1					
ANR	3218705	AssignmentExpression	part0 = params -> nSamplPart0 [ param_index ]		3218099	2		=			
ANR	3218706	Identifier	part0		3218099	0					
ANR	3218707	ArrayIndexing	params -> nSamplPart0 [ param_index ]		3218099	1					
ANR	3218708	PtrMemberAccess	params -> nSamplPart0		3218099	0					
ANR	3218709	Identifier	params		3218099	0					
ANR	3218710	Identifier	nSamplPart0		3218099	1					
ANR	3218711	Identifier	param_index		3218099	1					
ANR	3218712	IdentifierDeclStatement	int * sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg ;	221:16:4799:4909	3218099	3	True				
ANR	3218713	IdentifierDecl	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	0					
ANR	3218714	IdentifierDeclType	int *		3218099	0					
ANR	3218715	Identifier	sample_buf		3218099	1					
ANR	3218716	AssignmentExpression	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	2		=			
ANR	3218717	Identifier	sample_buf		3218099	0					
ANR	3218718	AdditiveExpression	s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		+			
ANR	3218719	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3218720	Identifier	s		3218099	0					
ANR	3218721	Identifier	xll_sample_buf		3218099	1					
ANR	3218722	MultiplicativeExpression	( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3218723	AdditiveExpression	in_channel + i		3218099	0		+			
ANR	3218724	Identifier	in_channel		3218099	0					
ANR	3218725	Identifier	i		3218099	1					
ANR	3218726	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3218727	Identifier	s		3218099	0					
ANR	3218728	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218729	IfStatement	if ( ! params -> rice_code_flag [ param_index ] )		3218099	4					
ANR	3218730	Condition	! params -> rice_code_flag [ param_index ]	227:20:4934:4969	3218099	0	True				
ANR	3218731	UnaryOperationExpression	! params -> rice_code_flag [ param_index ]		3218099	0					
ANR	3218732	UnaryOperator	!		3218099	0					
ANR	3218733	ArrayIndexing	params -> rice_code_flag [ param_index ]		3218099	1					
ANR	3218734	PtrMemberAccess	params -> rice_code_flag		3218099	0					
ANR	3218735	Identifier	params		3218099	0					
ANR	3218736	Identifier	rice_code_flag		3218099	1					
ANR	3218737	Identifier	param_index		3218099	1					
ANR	3218738	CompoundStatement		225:58:4911:4911	3218099	1					
ANR	3218739	IfStatement	if ( bits )		3218099	0					
ANR	3218740	Condition	bits	231:24:5038:5041	3218099	0	True				
ANR	3218741	Identifier	bits		3218099	0					
ANR	3218742	ForStatement	for ( j = 0 ; j < part0 ; j ++ )		3218099	1					
ANR	3218743	ForInit	j = 0 ;	233:29:5074:5079	3218099	0	True				
ANR	3218744	AssignmentExpression	j = 0		3218099	0		=			
ANR	3218745	Identifier	j		3218099	0					
ANR	3218746	PrimaryExpression	0		3218099	1					
ANR	3218747	Condition	j < part0	233:36:5081:5089	3218099	1	True				
ANR	3218748	RelationalExpression	j < part0		3218099	0		<			
ANR	3218749	Identifier	j		3218099	0					
ANR	3218750	Identifier	part0		3218099	1					
ANR	3218751	PostIncDecOperationExpression	j ++	233:47:5092:5094	3218099	2	True				
ANR	3218752	Identifier	j		3218099	0					
ANR	3218753	IncDec	++		3218099	1					
ANR	3218754	ExpressionStatement	"sample_buf [ j ] = get_bits_sm ( gb , bits )"	235:28:5126:5163	3218099	3	True				
ANR	3218755	AssignmentExpression	"sample_buf [ j ] = get_bits_sm ( gb , bits )"		3218099	0		=			
ANR	3218756	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3218757	Identifier	sample_buf		3218099	0					
ANR	3218758	Identifier	j		3218099	1					
ANR	3218759	CallExpression	"get_bits_sm ( gb , bits )"		3218099	1					
ANR	3218760	Callee	get_bits_sm		3218099	0					
ANR	3218761	Identifier	get_bits_sm		3218099	0					
ANR	3218762	ArgumentList	gb		3218099	1					
ANR	3218763	Argument	gb		3218099	0					
ANR	3218764	Identifier	gb		3218099	0					
ANR	3218765	Argument	bits		3218099	1					
ANR	3218766	Identifier	bits		3218099	0					
ANR	3218767	ElseStatement	else		3218099	0					
ANR	3218768	ExpressionStatement	"memset ( sample_buf , 0 , part0 * sizeof ( sample_buf [ 0 ] ) )"	239:24:5216:5268	3218099	0	True				
ANR	3218769	CallExpression	"memset ( sample_buf , 0 , part0 * sizeof ( sample_buf [ 0 ] ) )"		3218099	0					
ANR	3218770	Callee	memset		3218099	0					
ANR	3218771	Identifier	memset		3218099	0					
ANR	3218772	ArgumentList	sample_buf		3218099	1					
ANR	3218773	Argument	sample_buf		3218099	0					
ANR	3218774	Identifier	sample_buf		3218099	0					
ANR	3218775	Argument	0		3218099	1					
ANR	3218776	PrimaryExpression	0		3218099	0					
ANR	3218777	Argument	part0 * sizeof ( sample_buf [ 0 ] )		3218099	2					
ANR	3218778	MultiplicativeExpression	part0 * sizeof ( sample_buf [ 0 ] )		3218099	0		*			
ANR	3218779	Identifier	part0		3218099	0					
ANR	3218780	SizeofExpression	sizeof ( sample_buf [ 0 ] )		3218099	1					
ANR	3218781	Sizeof	sizeof		3218099	0					
ANR	3218782	ArrayIndexing	sample_buf [ 0 ]		3218099	1					
ANR	3218783	Identifier	sample_buf		3218099	0					
ANR	3218784	PrimaryExpression	0		3218099	1					
ANR	3218785	ExpressionStatement	bits = params -> pancABIT [ param_index ]	245:20:5332:5368	3218099	1	True				
ANR	3218786	AssignmentExpression	bits = params -> pancABIT [ param_index ]		3218099	0		=			
ANR	3218787	Identifier	bits		3218099	0					
ANR	3218788	ArrayIndexing	params -> pancABIT [ param_index ]		3218099	1					
ANR	3218789	PtrMemberAccess	params -> pancABIT		3218099	0					
ANR	3218790	Identifier	params		3218099	0					
ANR	3218791	Identifier	pancABIT		3218099	1					
ANR	3218792	Identifier	param_index		3218099	1					
ANR	3218793	IfStatement	if ( bits )		3218099	2					
ANR	3218794	Condition	bits	247:24:5395:5398	3218099	0	True				
ANR	3218795	Identifier	bits		3218099	0					
ANR	3218796	ForStatement	for ( j = part0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	1					
ANR	3218797	ForInit	j = part0 ;	249:29:5431:5440	3218099	0	True				
ANR	3218798	AssignmentExpression	j = part0		3218099	0		=			
ANR	3218799	Identifier	j		3218099	0					
ANR	3218800	Identifier	part0		3218099	1					
ANR	3218801	Condition	j < s -> xll_smpl_in_seg	249:40:5442:5463	3218099	1	True				
ANR	3218802	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3218803	Identifier	j		3218099	0					
ANR	3218804	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3218805	Identifier	s		3218099	0					
ANR	3218806	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218807	PostIncDecOperationExpression	j ++	249:64:5466:5468	3218099	2	True				
ANR	3218808	Identifier	j		3218099	0					
ANR	3218809	IncDec	++		3218099	1					
ANR	3218810	ExpressionStatement	"sample_buf [ j ] = get_bits_sm ( gb , bits )"	251:28:5500:5537	3218099	3	True				
ANR	3218811	AssignmentExpression	"sample_buf [ j ] = get_bits_sm ( gb , bits )"		3218099	0		=			
ANR	3218812	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3218813	Identifier	sample_buf		3218099	0					
ANR	3218814	Identifier	j		3218099	1					
ANR	3218815	CallExpression	"get_bits_sm ( gb , bits )"		3218099	1					
ANR	3218816	Callee	get_bits_sm		3218099	0					
ANR	3218817	Identifier	get_bits_sm		3218099	0					
ANR	3218818	ArgumentList	gb		3218099	1					
ANR	3218819	Argument	gb		3218099	0					
ANR	3218820	Identifier	gb		3218099	0					
ANR	3218821	Argument	bits		3218099	1					
ANR	3218822	Identifier	bits		3218099	0					
ANR	3218823	ElseStatement	else		3218099	0					
ANR	3218824	ExpressionStatement	"memset ( sample_buf + part0 , 0 , ( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] ) )"	255:24:5590:5705	3218099	0	True				
ANR	3218825	CallExpression	"memset ( sample_buf + part0 , 0 , ( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] ) )"		3218099	0					
ANR	3218826	Callee	memset		3218099	0					
ANR	3218827	Identifier	memset		3218099	0					
ANR	3218828	ArgumentList	sample_buf + part0		3218099	1					
ANR	3218829	Argument	sample_buf + part0		3218099	0					
ANR	3218830	AdditiveExpression	sample_buf + part0		3218099	0		+			
ANR	3218831	Identifier	sample_buf		3218099	0					
ANR	3218832	Identifier	part0		3218099	1					
ANR	3218833	Argument	0		3218099	1					
ANR	3218834	PrimaryExpression	0		3218099	0					
ANR	3218835	Argument	( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] )		3218099	2					
ANR	3218836	MultiplicativeExpression	( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] )		3218099	0		*			
ANR	3218837	AdditiveExpression	s -> xll_smpl_in_seg - part0		3218099	0		-			
ANR	3218838	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3218839	Identifier	s		3218099	0					
ANR	3218840	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218841	Identifier	part0		3218099	1					
ANR	3218842	SizeofExpression	sizeof ( sample_buf [ 0 ] )		3218099	1					
ANR	3218843	Sizeof	sizeof		3218099	0					
ANR	3218844	ArrayIndexing	sample_buf [ 0 ]		3218099	1					
ANR	3218845	Identifier	sample_buf		3218099	0					
ANR	3218846	PrimaryExpression	0		3218099	1					
ANR	3218847	ElseStatement	else		3218099	0					
ANR	3218848	CompoundStatement		259:20:5693:5740	3218099	0					
ANR	3218849	IdentifierDeclStatement	int aux_bits = params -> pancAuxABIT [ param_index ] ;	261:20:5754:5801	3218099	0	True				
ANR	3218850	IdentifierDecl	aux_bits = params -> pancAuxABIT [ param_index ]		3218099	0					
ANR	3218851	IdentifierDeclType	int		3218099	0					
ANR	3218852	Identifier	aux_bits		3218099	1					
ANR	3218853	AssignmentExpression	aux_bits = params -> pancAuxABIT [ param_index ]		3218099	2		=			
ANR	3218854	Identifier	aux_bits		3218099	0					
ANR	3218855	ArrayIndexing	params -> pancAuxABIT [ param_index ]		3218099	1					
ANR	3218856	PtrMemberAccess	params -> pancAuxABIT		3218099	0					
ANR	3218857	Identifier	params		3218099	0					
ANR	3218858	Identifier	pancAuxABIT		3218099	1					
ANR	3218859	Identifier	param_index		3218099	1					
ANR	3218860	ForStatement	for ( j = 0 ; j < part0 ; j ++ )		3218099	1					
ANR	3218861	ForInit	j = 0 ;	265:25:5831:5836	3218099	0	True				
ANR	3218862	AssignmentExpression	j = 0		3218099	0		=			
ANR	3218863	Identifier	j		3218099	0					
ANR	3218864	PrimaryExpression	0		3218099	1					
ANR	3218865	Condition	j < part0	265:32:5838:5846	3218099	1	True				
ANR	3218866	RelationalExpression	j < part0		3218099	0		<			
ANR	3218867	Identifier	j		3218099	0					
ANR	3218868	Identifier	part0		3218099	1					
ANR	3218869	PostIncDecOperationExpression	j ++	265:43:5849:5851	3218099	2	True				
ANR	3218870	Identifier	j		3218099	0					
ANR	3218871	IncDec	++		3218099	1					
ANR	3218872	CompoundStatement		267:24:5892:5928	3218099	3					
ANR	3218873	IdentifierDeclStatement	"int t = get_unary ( gb , 1 , 33 ) << bits ;"	269:24:5953:5989	3218099	0	True				
ANR	3218874	IdentifierDecl	"t = get_unary ( gb , 1 , 33 ) << bits"		3218099	0					
ANR	3218875	IdentifierDeclType	int		3218099	0					
ANR	3218876	Identifier	t		3218099	1					
ANR	3218877	AssignmentExpression	"t = get_unary ( gb , 1 , 33 ) << bits"		3218099	2		=			
ANR	3218878	Identifier	t		3218099	0					
ANR	3218879	ShiftExpression	"get_unary ( gb , 1 , 33 ) << bits"		3218099	1		<<			
ANR	3218880	CallExpression	"get_unary ( gb , 1 , 33 )"		3218099	0					
ANR	3218881	Callee	get_unary		3218099	0					
ANR	3218882	Identifier	get_unary		3218099	0					
ANR	3218883	ArgumentList	gb		3218099	1					
ANR	3218884	Argument	gb		3218099	0					
ANR	3218885	Identifier	gb		3218099	0					
ANR	3218886	Argument	1		3218099	1					
ANR	3218887	PrimaryExpression	1		3218099	0					
ANR	3218888	Argument	33		3218099	2					
ANR	3218889	PrimaryExpression	33		3218099	0					
ANR	3218890	Identifier	bits		3218099	1					
ANR	3218891	IfStatement	if ( bits )		3218099	1					
ANR	3218892	Condition	bits	273:28:6116:6119	3218099	0	True				
ANR	3218893	Identifier	bits		3218099	0					
ANR	3218894	ExpressionStatement	"t |= get_bits ( gb , bits )"	275:28:6151:6174	3218099	1	True				
ANR	3218895	AssignmentExpression	"t |= get_bits ( gb , bits )"		3218099	0		|=			
ANR	3218896	Identifier	t		3218099	0					
ANR	3218897	CallExpression	"get_bits ( gb , bits )"		3218099	1					
ANR	3218898	Callee	get_bits		3218099	0					
ANR	3218899	Identifier	get_bits		3218099	0					
ANR	3218900	ArgumentList	gb		3218099	1					
ANR	3218901	Argument	gb		3218099	0					
ANR	3218902	Identifier	gb		3218099	0					
ANR	3218903	Argument	bits		3218099	1					
ANR	3218904	Identifier	bits		3218099	0					
ANR	3218905	ExpressionStatement	sample_buf [ j ] = ( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )	277:24:6201:6251	3218099	2	True				
ANR	3218906	AssignmentExpression	sample_buf [ j ] = ( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )		3218099	0		=			
ANR	3218907	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3218908	Identifier	sample_buf		3218099	0					
ANR	3218909	Identifier	j		3218099	1					
ANR	3218910	ConditionalExpression	( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )		3218099	1					
ANR	3218911	Condition	t & 1		3218099	0					
ANR	3218912	BitAndExpression	t & 1		3218099	0		&			
ANR	3218913	Identifier	t		3218099	0					
ANR	3218914	PrimaryExpression	1		3218099	1					
ANR	3218915	AdditiveExpression	- ( t >> 1 ) - 1		3218099	1		-			
ANR	3218916	UnaryOperationExpression	- ( t >> 1 )		3218099	0					
ANR	3218917	UnaryOperator	-		3218099	0					
ANR	3218918	ShiftExpression	t >> 1		3218099	1		>>			
ANR	3218919	Identifier	t		3218099	0					
ANR	3218920	PrimaryExpression	1		3218099	1					
ANR	3218921	PrimaryExpression	1		3218099	1					
ANR	3218922	ShiftExpression	t >> 1		3218099	2		>>			
ANR	3218923	Identifier	t		3218099	0					
ANR	3218924	PrimaryExpression	1		3218099	1					
ANR	3218925	ExpressionStatement	bits = params -> pancABIT [ param_index ]	285:20:6338:6374	3218099	2	True				
ANR	3218926	AssignmentExpression	bits = params -> pancABIT [ param_index ]		3218099	0		=			
ANR	3218927	Identifier	bits		3218099	0					
ANR	3218928	ArrayIndexing	params -> pancABIT [ param_index ]		3218099	1					
ANR	3218929	PtrMemberAccess	params -> pancABIT		3218099	0					
ANR	3218930	Identifier	params		3218099	0					
ANR	3218931	Identifier	pancABIT		3218099	1					
ANR	3218932	Identifier	param_index		3218099	1					
ANR	3218933	ExpressionStatement	"memset ( sample_buf + part0 , 0 , ( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] ) )"	293:20:6536:6647	3218099	3	True				
ANR	3218934	CallExpression	"memset ( sample_buf + part0 , 0 , ( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] ) )"		3218099	0					
ANR	3218935	Callee	memset		3218099	0					
ANR	3218936	Identifier	memset		3218099	0					
ANR	3218937	ArgumentList	sample_buf + part0		3218099	1					
ANR	3218938	Argument	sample_buf + part0		3218099	0					
ANR	3218939	AdditiveExpression	sample_buf + part0		3218099	0		+			
ANR	3218940	Identifier	sample_buf		3218099	0					
ANR	3218941	Identifier	part0		3218099	1					
ANR	3218942	Argument	0		3218099	1					
ANR	3218943	PrimaryExpression	0		3218099	0					
ANR	3218944	Argument	( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] )		3218099	2					
ANR	3218945	MultiplicativeExpression	( s -> xll_smpl_in_seg - part0 ) * sizeof ( sample_buf [ 0 ] )		3218099	0		*			
ANR	3218946	AdditiveExpression	s -> xll_smpl_in_seg - part0		3218099	0		-			
ANR	3218947	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3218948	Identifier	s		3218099	0					
ANR	3218949	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3218950	Identifier	part0		3218099	1					
ANR	3218951	SizeofExpression	sizeof ( sample_buf [ 0 ] )		3218099	1					
ANR	3218952	Sizeof	sizeof		3218099	0					
ANR	3218953	ArrayIndexing	sample_buf [ 0 ]		3218099	1					
ANR	3218954	Identifier	sample_buf		3218099	0					
ANR	3218955	PrimaryExpression	0		3218099	1					
ANR	3218956	IfStatement	if ( aux_bits > 0 )		3218099	4					
ANR	3218957	Condition	aux_bits > 0	299:24:6676:6687	3218099	0	True				
ANR	3218958	RelationalExpression	aux_bits > 0		3218099	0		>			
ANR	3218959	Identifier	aux_bits		3218099	0					
ANR	3218960	PrimaryExpression	0		3218099	1					
ANR	3218961	CompoundStatement		309:24:7010:7058	3218099	1					
ANR	3218962	IdentifierDeclStatement	"int count = get_bits ( gb , s -> xll_log_smpl_in_seg ) ;"	311:24:7071:7119	3218099	0	True				
ANR	3218963	IdentifierDecl	"count = get_bits ( gb , s -> xll_log_smpl_in_seg )"		3218099	0					
ANR	3218964	IdentifierDeclType	int		3218099	0					
ANR	3218965	Identifier	count		3218099	1					
ANR	3218966	AssignmentExpression	"count = get_bits ( gb , s -> xll_log_smpl_in_seg )"		3218099	2		=			
ANR	3218967	Identifier	count		3218099	0					
ANR	3218968	CallExpression	"get_bits ( gb , s -> xll_log_smpl_in_seg )"		3218099	1					
ANR	3218969	Callee	get_bits		3218099	0					
ANR	3218970	Identifier	get_bits		3218099	0					
ANR	3218971	ArgumentList	gb		3218099	1					
ANR	3218972	Argument	gb		3218099	0					
ANR	3218973	Identifier	gb		3218099	0					
ANR	3218974	Argument	s -> xll_log_smpl_in_seg		3218099	1					
ANR	3218975	PtrMemberAccess	s -> xll_log_smpl_in_seg		3218099	0					
ANR	3218976	Identifier	s		3218099	0					
ANR	3218977	Identifier	xll_log_smpl_in_seg		3218099	1					
ANR	3218978	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""aux count %d (bits %d)\\n"" , count , s -> xll_log_smpl_in_seg )"	313:24:7146:7267	3218099	1	True				
ANR	3218979	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""aux count %d (bits %d)\\n"" , count , s -> xll_log_smpl_in_seg )"		3218099	0					
ANR	3218980	Callee	av_log		3218099	0					
ANR	3218981	Identifier	av_log		3218099	0					
ANR	3218982	ArgumentList	s -> avctx		3218099	1					
ANR	3218983	Argument	s -> avctx		3218099	0					
ANR	3218984	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3218985	Identifier	s		3218099	0					
ANR	3218986	Identifier	avctx		3218099	1					
ANR	3218987	Argument	AV_LOG_DEBUG		3218099	1					
ANR	3218988	Identifier	AV_LOG_DEBUG		3218099	0					
ANR	3218989	Argument	"""aux count %d (bits %d)\\n"""		3218099	2					
ANR	3218990	PrimaryExpression	"""aux count %d (bits %d)\\n"""		3218099	0					
ANR	3218991	Argument	count		3218099	3					
ANR	3218992	Identifier	count		3218099	0					
ANR	3218993	Argument	s -> xll_log_smpl_in_seg		3218099	4					
ANR	3218994	PtrMemberAccess	s -> xll_log_smpl_in_seg		3218099	0					
ANR	3218995	Identifier	s		3218099	0					
ANR	3218996	Identifier	xll_log_smpl_in_seg		3218099	1					
ANR	3218997	ForStatement	for ( j = 0 ; j < count ; j ++ )		3218099	2					
ANR	3218998	ForInit	j = 0 ;	319:29:7301:7306	3218099	0	True				
ANR	3218999	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219000	Identifier	j		3218099	0					
ANR	3219001	PrimaryExpression	0		3218099	1					
ANR	3219002	Condition	j < count	319:36:7308:7316	3218099	1	True				
ANR	3219003	RelationalExpression	j < count		3218099	0		<			
ANR	3219004	Identifier	j		3218099	0					
ANR	3219005	Identifier	count		3218099	1					
ANR	3219006	PostIncDecOperationExpression	j ++	319:47:7319:7321	3218099	2	True				
ANR	3219007	Identifier	j		3218099	0					
ANR	3219008	IncDec	++		3218099	1					
ANR	3219009	ExpressionStatement	"sample_buf [ get_bits ( gb , s -> xll_log_smpl_in_seg ) ] = 1"	321:28:7353:7405	3218099	3	True				
ANR	3219010	AssignmentExpression	"sample_buf [ get_bits ( gb , s -> xll_log_smpl_in_seg ) ] = 1"		3218099	0		=			
ANR	3219011	ArrayIndexing	"sample_buf [ get_bits ( gb , s -> xll_log_smpl_in_seg ) ]"		3218099	0					
ANR	3219012	Identifier	sample_buf		3218099	0					
ANR	3219013	CallExpression	"get_bits ( gb , s -> xll_log_smpl_in_seg )"		3218099	1					
ANR	3219014	Callee	get_bits		3218099	0					
ANR	3219015	Identifier	get_bits		3218099	0					
ANR	3219016	ArgumentList	gb		3218099	1					
ANR	3219017	Argument	gb		3218099	0					
ANR	3219018	Identifier	gb		3218099	0					
ANR	3219019	Argument	s -> xll_log_smpl_in_seg		3218099	1					
ANR	3219020	PtrMemberAccess	s -> xll_log_smpl_in_seg		3218099	0					
ANR	3219021	Identifier	s		3218099	0					
ANR	3219022	Identifier	xll_log_smpl_in_seg		3218099	1					
ANR	3219023	PrimaryExpression	1		3218099	1					
ANR	3219024	ForStatement	for ( j = part0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	5					
ANR	3219025	ForInit	j = part0 ;	325:25:7456:7465	3218099	0	True				
ANR	3219026	AssignmentExpression	j = part0		3218099	0		=			
ANR	3219027	Identifier	j		3218099	0					
ANR	3219028	Identifier	part0		3218099	1					
ANR	3219029	Condition	j < s -> xll_smpl_in_seg	325:36:7467:7488	3218099	1	True				
ANR	3219030	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219031	Identifier	j		3218099	0					
ANR	3219032	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219033	Identifier	s		3218099	0					
ANR	3219034	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219035	PostIncDecOperationExpression	j ++	325:60:7491:7493	3218099	2	True				
ANR	3219036	Identifier	j		3218099	0					
ANR	3219037	IncDec	++		3218099	1					
ANR	3219038	CompoundStatement		323:65:7435:7435	3218099	3					
ANR	3219039	IfStatement	if ( ! sample_buf [ j ] )		3218099	0					
ANR	3219040	Condition	! sample_buf [ j ]	327:28:7527:7540	3218099	0	True				
ANR	3219041	UnaryOperationExpression	! sample_buf [ j ]		3218099	0					
ANR	3219042	UnaryOperator	!		3218099	0					
ANR	3219043	ArrayIndexing	sample_buf [ j ]		3218099	1					
ANR	3219044	Identifier	sample_buf		3218099	0					
ANR	3219045	Identifier	j		3218099	1					
ANR	3219046	CompoundStatement		327:28:7513:7541	3218099	1					
ANR	3219047	IdentifierDeclStatement	"int t = get_unary ( gb , 1 , 33 ) ;"	329:28:7574:7602	3218099	0	True				
ANR	3219048	IdentifierDecl	"t = get_unary ( gb , 1 , 33 )"		3218099	0					
ANR	3219049	IdentifierDeclType	int		3218099	0					
ANR	3219050	Identifier	t		3218099	1					
ANR	3219051	AssignmentExpression	"t = get_unary ( gb , 1 , 33 )"		3218099	2		=			
ANR	3219052	Identifier	t		3218099	0					
ANR	3219053	CallExpression	"get_unary ( gb , 1 , 33 )"		3218099	1					
ANR	3219054	Callee	get_unary		3218099	0					
ANR	3219055	Identifier	get_unary		3218099	0					
ANR	3219056	ArgumentList	gb		3218099	1					
ANR	3219057	Argument	gb		3218099	0					
ANR	3219058	Identifier	gb		3218099	0					
ANR	3219059	Argument	1		3218099	1					
ANR	3219060	PrimaryExpression	1		3218099	0					
ANR	3219061	Argument	33		3218099	2					
ANR	3219062	PrimaryExpression	33		3218099	0					
ANR	3219063	IfStatement	if ( bits )		3218099	1					
ANR	3219064	Condition	bits	331:32:7637:7640	3218099	0	True				
ANR	3219065	Identifier	bits		3218099	0					
ANR	3219066	ExpressionStatement	"t = ( t << bits ) | get_bits ( gb , bits )"	333:32:7676:7712	3218099	1	True				
ANR	3219067	AssignmentExpression	"t = ( t << bits ) | get_bits ( gb , bits )"		3218099	0		=			
ANR	3219068	Identifier	t		3218099	0					
ANR	3219069	InclusiveOrExpression	"( t << bits ) | get_bits ( gb , bits )"		3218099	1		|			
ANR	3219070	ShiftExpression	t << bits		3218099	0		<<			
ANR	3219071	Identifier	t		3218099	0					
ANR	3219072	Identifier	bits		3218099	1					
ANR	3219073	CallExpression	"get_bits ( gb , bits )"		3218099	1					
ANR	3219074	Callee	get_bits		3218099	0					
ANR	3219075	Identifier	get_bits		3218099	0					
ANR	3219076	ArgumentList	gb		3218099	1					
ANR	3219077	Argument	gb		3218099	0					
ANR	3219078	Identifier	gb		3218099	0					
ANR	3219079	Argument	bits		3218099	1					
ANR	3219080	Identifier	bits		3218099	0					
ANR	3219081	ExpressionStatement	sample_buf [ j ] = ( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )	335:28:7743:7793	3218099	2	True				
ANR	3219082	AssignmentExpression	sample_buf [ j ] = ( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )		3218099	0		=			
ANR	3219083	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219084	Identifier	sample_buf		3218099	0					
ANR	3219085	Identifier	j		3218099	1					
ANR	3219086	ConditionalExpression	( t & 1 ) ? - ( t >> 1 ) - 1 : ( t >> 1 )		3218099	1					
ANR	3219087	Condition	t & 1		3218099	0					
ANR	3219088	BitAndExpression	t & 1		3218099	0		&			
ANR	3219089	Identifier	t		3218099	0					
ANR	3219090	PrimaryExpression	1		3218099	1					
ANR	3219091	AdditiveExpression	- ( t >> 1 ) - 1		3218099	1		-			
ANR	3219092	UnaryOperationExpression	- ( t >> 1 )		3218099	0					
ANR	3219093	UnaryOperator	-		3218099	0					
ANR	3219094	ShiftExpression	t >> 1		3218099	1		>>			
ANR	3219095	Identifier	t		3218099	0					
ANR	3219096	PrimaryExpression	1		3218099	1					
ANR	3219097	PrimaryExpression	1		3218099	1					
ANR	3219098	ShiftExpression	t >> 1		3218099	2		>>			
ANR	3219099	Identifier	t		3218099	0					
ANR	3219100	PrimaryExpression	1		3218099	1					
ANR	3219101	ElseStatement	else		3218099	0					
ANR	3219102	ExpressionStatement	"sample_buf [ j ] = get_bits_sm ( gb , aux_bits )"	339:28:7856:7897	3218099	0	True				
ANR	3219103	AssignmentExpression	"sample_buf [ j ] = get_bits_sm ( gb , aux_bits )"		3218099	0		=			
ANR	3219104	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219105	Identifier	sample_buf		3218099	0					
ANR	3219106	Identifier	j		3218099	1					
ANR	3219107	CallExpression	"get_bits_sm ( gb , aux_bits )"		3218099	1					
ANR	3219108	Callee	get_bits_sm		3218099	0					
ANR	3219109	Identifier	get_bits_sm		3218099	0					
ANR	3219110	ArgumentList	gb		3218099	1					
ANR	3219111	Argument	gb		3218099	0					
ANR	3219112	Identifier	gb		3218099	0					
ANR	3219113	Argument	aux_bits		3218099	1					
ANR	3219114	Identifier	aux_bits		3218099	0					
ANR	3219115	ForStatement	for ( i = 0 ; i < chset -> channels ; i ++ )		3218099	10					
ANR	3219116	ForInit	i = 0 ;	349:17:7976:7981	3218099	0	True				
ANR	3219117	AssignmentExpression	i = 0		3218099	0		=			
ANR	3219118	Identifier	i		3218099	0					
ANR	3219119	PrimaryExpression	0		3218099	1					
ANR	3219120	Condition	i < chset -> channels	349:24:7983:8001	3218099	1	True				
ANR	3219121	RelationalExpression	i < chset -> channels		3218099	0		<			
ANR	3219122	Identifier	i		3218099	0					
ANR	3219123	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3219124	Identifier	chset		3218099	0					
ANR	3219125	Identifier	channels		3218099	1					
ANR	3219126	PostIncDecOperationExpression	i ++	349:45:8004:8006	3218099	2	True				
ANR	3219127	Identifier	i		3218099	0					
ANR	3219128	IncDec	++		3218099	1					
ANR	3219129	CompoundStatement		355:16:8162:8221	3218099	3					
ANR	3219130	IdentifierDeclStatement	unsigned adapt_order = chset -> adapt_order [ 0 ] [ i ] ;	351:16:8028:8075	3218099	0	True				
ANR	3219131	IdentifierDecl	adapt_order = chset -> adapt_order [ 0 ] [ i ]		3218099	0					
ANR	3219132	IdentifierDeclType	unsigned		3218099	0					
ANR	3219133	Identifier	adapt_order		3218099	1					
ANR	3219134	AssignmentExpression	adapt_order = chset -> adapt_order [ 0 ] [ i ]		3218099	2		=			
ANR	3219135	Identifier	adapt_order		3218099	0					
ANR	3219136	ArrayIndexing	chset -> adapt_order [ 0 ] [ i ]		3218099	1					
ANR	3219137	ArrayIndexing	chset -> adapt_order [ 0 ]		3218099	0					
ANR	3219138	PtrMemberAccess	chset -> adapt_order		3218099	0					
ANR	3219139	Identifier	chset		3218099	0					
ANR	3219140	Identifier	adapt_order		3218099	1					
ANR	3219141	PrimaryExpression	0		3218099	1					
ANR	3219142	Identifier	i		3218099	1					
ANR	3219143	IdentifierDeclStatement	int * sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg ;	353:16:8094:8204	3218099	1	True				
ANR	3219144	IdentifierDecl	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	0					
ANR	3219145	IdentifierDeclType	int *		3218099	0					
ANR	3219146	Identifier	sample_buf		3218099	1					
ANR	3219147	AssignmentExpression	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	2		=			
ANR	3219148	Identifier	sample_buf		3218099	0					
ANR	3219149	AdditiveExpression	s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		+			
ANR	3219150	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3219151	Identifier	s		3218099	0					
ANR	3219152	Identifier	xll_sample_buf		3218099	1					
ANR	3219153	MultiplicativeExpression	( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219154	AdditiveExpression	in_channel + i		3218099	0		+			
ANR	3219155	Identifier	in_channel		3218099	0					
ANR	3219156	Identifier	i		3218099	1					
ANR	3219157	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219158	Identifier	s		3218099	0					
ANR	3219159	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219160	IdentifierDeclStatement	int * prev = history + ( in_channel + i ) * DCA_XLL_AORDER_MAX ;	357:16:8223:8282	3218099	2	True				
ANR	3219161	IdentifierDecl	* prev = history + ( in_channel + i ) * DCA_XLL_AORDER_MAX		3218099	0					
ANR	3219162	IdentifierDeclType	int *		3218099	0					
ANR	3219163	Identifier	prev		3218099	1					
ANR	3219164	AssignmentExpression	* prev = history + ( in_channel + i ) * DCA_XLL_AORDER_MAX		3218099	2		=			
ANR	3219165	Identifier	prev		3218099	0					
ANR	3219166	AdditiveExpression	history + ( in_channel + i ) * DCA_XLL_AORDER_MAX		3218099	1		+			
ANR	3219167	Identifier	history		3218099	0					
ANR	3219168	MultiplicativeExpression	( in_channel + i ) * DCA_XLL_AORDER_MAX		3218099	1		*			
ANR	3219169	AdditiveExpression	in_channel + i		3218099	0		+			
ANR	3219170	Identifier	in_channel		3218099	0					
ANR	3219171	Identifier	i		3218099	1					
ANR	3219172	Identifier	DCA_XLL_AORDER_MAX		3218099	1					
ANR	3219173	IfStatement	if ( ! adapt_order )		3218099	3					
ANR	3219174	Condition	! adapt_order	361:20:8307:8318	3218099	0	True				
ANR	3219175	UnaryOperationExpression	! adapt_order		3218099	0					
ANR	3219176	UnaryOperator	!		3218099	0					
ANR	3219177	Identifier	adapt_order		3218099	1					
ANR	3219178	CompoundStatement		361:20:8283:8297	3218099	1					
ANR	3219179	IdentifierDeclStatement	unsigned order ;	363:20:8344:8358	3218099	0	True				
ANR	3219180	IdentifierDecl	order		3218099	0					
ANR	3219181	IdentifierDeclType	unsigned		3218099	0					
ANR	3219182	Identifier	order		3218099	1					
ANR	3219183	ForStatement	for ( order = chset -> fixed_order [ 0 ] [ i ] ; order > 0 ; order -- )		3218099	1					
ANR	3219184	ForInit	order = chset -> fixed_order [ 0 ] [ i ] ;	365:25:8386:8418	3218099	0	True				
ANR	3219185	AssignmentExpression	order = chset -> fixed_order [ 0 ] [ i ]		3218099	0		=			
ANR	3219186	Identifier	order		3218099	0					
ANR	3219187	ArrayIndexing	chset -> fixed_order [ 0 ] [ i ]		3218099	1					
ANR	3219188	ArrayIndexing	chset -> fixed_order [ 0 ]		3218099	0					
ANR	3219189	PtrMemberAccess	chset -> fixed_order		3218099	0					
ANR	3219190	Identifier	chset		3218099	0					
ANR	3219191	Identifier	fixed_order		3218099	1					
ANR	3219192	PrimaryExpression	0		3218099	1					
ANR	3219193	Identifier	i		3218099	1					
ANR	3219194	Condition	order > 0	365:59:8420:8428	3218099	1	True				
ANR	3219195	RelationalExpression	order > 0		3218099	0		>			
ANR	3219196	Identifier	order		3218099	0					
ANR	3219197	PrimaryExpression	0		3218099	1					
ANR	3219198	PostIncDecOperationExpression	order --	365:70:8431:8437	3218099	2	True				
ANR	3219199	Identifier	order		3218099	0					
ANR	3219200	IncDec	--		3218099	1					
ANR	3219201	CompoundStatement		365:24:8406:8416	3218099	3					
ANR	3219202	IdentifierDeclStatement	unsigned j ;	367:24:8467:8477	3218099	0	True				
ANR	3219203	IdentifierDecl	j		3218099	0					
ANR	3219204	IdentifierDeclType	unsigned		3218099	0					
ANR	3219205	Identifier	j		3218099	1					
ANR	3219206	ForStatement	for ( j = 1 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	1					
ANR	3219207	ForInit	j = 1 ;	369:29:8509:8514	3218099	0	True				
ANR	3219208	AssignmentExpression	j = 1		3218099	0		=			
ANR	3219209	Identifier	j		3218099	0					
ANR	3219210	PrimaryExpression	1		3218099	1					
ANR	3219211	Condition	j < s -> xll_smpl_in_seg	369:36:8516:8537	3218099	1	True				
ANR	3219212	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219213	Identifier	j		3218099	0					
ANR	3219214	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219215	Identifier	s		3218099	0					
ANR	3219216	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219217	PostIncDecOperationExpression	j ++	369:60:8540:8542	3218099	2	True				
ANR	3219218	Identifier	j		3218099	0					
ANR	3219219	IncDec	++		3218099	1					
ANR	3219220	ExpressionStatement	sample_buf [ j ] += sample_buf [ j - 1 ]	371:28:8574:8608	3218099	3	True				
ANR	3219221	AssignmentExpression	sample_buf [ j ] += sample_buf [ j - 1 ]		3218099	0		+=			
ANR	3219222	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219223	Identifier	sample_buf		3218099	0					
ANR	3219224	Identifier	j		3218099	1					
ANR	3219225	ArrayIndexing	sample_buf [ j - 1 ]		3218099	1					
ANR	3219226	Identifier	sample_buf		3218099	0					
ANR	3219227	AdditiveExpression	j - 1		3218099	1		-			
ANR	3219228	Identifier	j		3218099	0					
ANR	3219229	PrimaryExpression	1		3218099	1					
ANR	3219230	ElseStatement	else		3218099	0					
ANR	3219231	ExpressionStatement	"dca_xll_inv_adapt_pred ( sample_buf , s -> xll_smpl_in_seg , adapt_order , seg ? prev : NULL , chset -> lpc_refl_coeffs_q_ind [ 0 ] [ i ] )"	379:20:8744:8954	3218099	0	True				
ANR	3219232	CallExpression	"dca_xll_inv_adapt_pred ( sample_buf , s -> xll_smpl_in_seg , adapt_order , seg ? prev : NULL , chset -> lpc_refl_coeffs_q_ind [ 0 ] [ i ] )"		3218099	0					
ANR	3219233	Callee	dca_xll_inv_adapt_pred		3218099	0					
ANR	3219234	Identifier	dca_xll_inv_adapt_pred		3218099	0					
ANR	3219235	ArgumentList	sample_buf		3218099	1					
ANR	3219236	Argument	sample_buf		3218099	0					
ANR	3219237	Identifier	sample_buf		3218099	0					
ANR	3219238	Argument	s -> xll_smpl_in_seg		3218099	1					
ANR	3219239	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3219240	Identifier	s		3218099	0					
ANR	3219241	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219242	Argument	adapt_order		3218099	2					
ANR	3219243	Identifier	adapt_order		3218099	0					
ANR	3219244	Argument	seg ? prev : NULL		3218099	3					
ANR	3219245	ConditionalExpression	seg ? prev : NULL		3218099	0					
ANR	3219246	Condition	seg		3218099	0					
ANR	3219247	Identifier	seg		3218099	0					
ANR	3219248	Identifier	prev		3218099	1					
ANR	3219249	Identifier	NULL		3218099	2					
ANR	3219250	Argument	chset -> lpc_refl_coeffs_q_ind [ 0 ] [ i ]		3218099	4					
ANR	3219251	ArrayIndexing	chset -> lpc_refl_coeffs_q_ind [ 0 ] [ i ]		3218099	0					
ANR	3219252	ArrayIndexing	chset -> lpc_refl_coeffs_q_ind [ 0 ]		3218099	0					
ANR	3219253	PtrMemberAccess	chset -> lpc_refl_coeffs_q_ind		3218099	0					
ANR	3219254	Identifier	chset		3218099	0					
ANR	3219255	Identifier	lpc_refl_coeffs_q_ind		3218099	1					
ANR	3219256	PrimaryExpression	0		3218099	1					
ANR	3219257	Identifier	i		3218099	1					
ANR	3219258	ExpressionStatement	"memcpy ( prev , sample_buf + s -> xll_smpl_in_seg - DCA_XLL_AORDER_MAX , DCA_XLL_AORDER_MAX * sizeof ( * prev ) )"	385:16:8973:9099	3218099	4	True				
ANR	3219259	CallExpression	"memcpy ( prev , sample_buf + s -> xll_smpl_in_seg - DCA_XLL_AORDER_MAX , DCA_XLL_AORDER_MAX * sizeof ( * prev ) )"		3218099	0					
ANR	3219260	Callee	memcpy		3218099	0					
ANR	3219261	Identifier	memcpy		3218099	0					
ANR	3219262	ArgumentList	prev		3218099	1					
ANR	3219263	Argument	prev		3218099	0					
ANR	3219264	Identifier	prev		3218099	0					
ANR	3219265	Argument	sample_buf + s -> xll_smpl_in_seg - DCA_XLL_AORDER_MAX		3218099	1					
ANR	3219266	AdditiveExpression	sample_buf + s -> xll_smpl_in_seg - DCA_XLL_AORDER_MAX		3218099	0		+			
ANR	3219267	Identifier	sample_buf		3218099	0					
ANR	3219268	AdditiveExpression	s -> xll_smpl_in_seg - DCA_XLL_AORDER_MAX		3218099	1		-			
ANR	3219269	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	0					
ANR	3219270	Identifier	s		3218099	0					
ANR	3219271	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219272	Identifier	DCA_XLL_AORDER_MAX		3218099	1					
ANR	3219273	Argument	DCA_XLL_AORDER_MAX * sizeof ( * prev )		3218099	2					
ANR	3219274	MultiplicativeExpression	DCA_XLL_AORDER_MAX * sizeof ( * prev )		3218099	0		*			
ANR	3219275	Identifier	DCA_XLL_AORDER_MAX		3218099	0					
ANR	3219276	SizeofExpression	sizeof ( * prev )		3218099	1					
ANR	3219277	Sizeof	sizeof		3218099	0					
ANR	3219278	UnaryOperationExpression	* prev		3218099	1					
ANR	3219279	UnaryOperator	*		3218099	0					
ANR	3219280	Identifier	prev		3218099	1					
ANR	3219281	ForStatement	for ( i = 1 ; i < chset -> channels ; i += 2 )		3218099	11					
ANR	3219282	ForInit	i = 1 ;	391:17:9134:9139	3218099	0	True				
ANR	3219283	AssignmentExpression	i = 1		3218099	0		=			
ANR	3219284	Identifier	i		3218099	0					
ANR	3219285	PrimaryExpression	1		3218099	1					
ANR	3219286	Condition	i < chset -> channels	391:24:9141:9159	3218099	1	True				
ANR	3219287	RelationalExpression	i < chset -> channels		3218099	0		<			
ANR	3219288	Identifier	i		3218099	0					
ANR	3219289	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3219290	Identifier	chset		3218099	0					
ANR	3219291	Identifier	channels		3218099	1					
ANR	3219292	AssignmentExpression	i += 2	391:45:9162:9167	3218099	2	True	+=			
ANR	3219293	Identifier	i		3218099	0					
ANR	3219294	PrimaryExpression	2		3218099	1					
ANR	3219295	CompoundStatement		391:16:9128:9175	3218099	3					
ANR	3219296	IdentifierDeclStatement	int coeff = chset -> pw_ch_pairs_coeffs [ 0 ] [ i / 2 ] ;	393:16:9189:9236	3218099	0	True				
ANR	3219297	IdentifierDecl	coeff = chset -> pw_ch_pairs_coeffs [ 0 ] [ i / 2 ]		3218099	0					
ANR	3219298	IdentifierDeclType	int		3218099	0					
ANR	3219299	Identifier	coeff		3218099	1					
ANR	3219300	AssignmentExpression	coeff = chset -> pw_ch_pairs_coeffs [ 0 ] [ i / 2 ]		3218099	2		=			
ANR	3219301	Identifier	coeff		3218099	0					
ANR	3219302	ArrayIndexing	chset -> pw_ch_pairs_coeffs [ 0 ] [ i / 2 ]		3218099	1					
ANR	3219303	ArrayIndexing	chset -> pw_ch_pairs_coeffs [ 0 ]		3218099	0					
ANR	3219304	PtrMemberAccess	chset -> pw_ch_pairs_coeffs		3218099	0					
ANR	3219305	Identifier	chset		3218099	0					
ANR	3219306	Identifier	pw_ch_pairs_coeffs		3218099	1					
ANR	3219307	PrimaryExpression	0		3218099	1					
ANR	3219308	MultiplicativeExpression	i / 2		3218099	1		/			
ANR	3219309	Identifier	i		3218099	0					
ANR	3219310	PrimaryExpression	2		3218099	1					
ANR	3219311	IfStatement	if ( coeff != 0 )		3218099	1					
ANR	3219312	Condition	coeff != 0	395:20:9259:9268	3218099	0	True				
ANR	3219313	EqualityExpression	coeff != 0		3218099	0		!=			
ANR	3219314	Identifier	coeff		3218099	0					
ANR	3219315	PrimaryExpression	0		3218099	1					
ANR	3219316	CompoundStatement		401:20:9436:9446	3218099	1					
ANR	3219317	IdentifierDeclStatement	int * sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg ;	397:20:9294:9408	3218099	0	True				
ANR	3219318	IdentifierDecl	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	0					
ANR	3219319	IdentifierDeclType	int *		3218099	0					
ANR	3219320	Identifier	sample_buf		3218099	1					
ANR	3219321	AssignmentExpression	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	2		=			
ANR	3219322	Identifier	sample_buf		3218099	0					
ANR	3219323	AdditiveExpression	s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		+			
ANR	3219324	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3219325	Identifier	s		3218099	0					
ANR	3219326	Identifier	xll_sample_buf		3218099	1					
ANR	3219327	MultiplicativeExpression	( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219328	AdditiveExpression	in_channel + i		3218099	0		+			
ANR	3219329	Identifier	in_channel		3218099	0					
ANR	3219330	Identifier	i		3218099	1					
ANR	3219331	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219332	Identifier	s		3218099	0					
ANR	3219333	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219334	IdentifierDeclStatement	int * prev = sample_buf - s -> xll_smpl_in_seg ;	401:20:9431:9474	3218099	1	True				
ANR	3219335	IdentifierDecl	* prev = sample_buf - s -> xll_smpl_in_seg		3218099	0					
ANR	3219336	IdentifierDeclType	int *		3218099	0					
ANR	3219337	Identifier	prev		3218099	1					
ANR	3219338	AssignmentExpression	* prev = sample_buf - s -> xll_smpl_in_seg		3218099	2		=			
ANR	3219339	Identifier	prev		3218099	0					
ANR	3219340	AdditiveExpression	sample_buf - s -> xll_smpl_in_seg		3218099	1		-			
ANR	3219341	Identifier	sample_buf		3218099	0					
ANR	3219342	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219343	Identifier	s		3218099	0					
ANR	3219344	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219345	IdentifierDeclStatement	unsigned j ;	403:20:9497:9507	3218099	2	True				
ANR	3219346	IdentifierDecl	j		3218099	0					
ANR	3219347	IdentifierDeclType	unsigned		3218099	0					
ANR	3219348	Identifier	j		3218099	1					
ANR	3219349	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	3					
ANR	3219350	ForInit	j = 0 ;	405:25:9535:9540	3218099	0	True				
ANR	3219351	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219352	Identifier	j		3218099	0					
ANR	3219353	PrimaryExpression	0		3218099	1					
ANR	3219354	Condition	j < s -> xll_smpl_in_seg	405:32:9542:9563	3218099	1	True				
ANR	3219355	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219356	Identifier	j		3218099	0					
ANR	3219357	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219358	Identifier	s		3218099	0					
ANR	3219359	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219360	PostIncDecOperationExpression	j ++	405:56:9566:9568	3218099	2	True				
ANR	3219361	Identifier	j		3218099	0					
ANR	3219362	IncDec	++		3218099	1					
ANR	3219363	ExpressionStatement	sample_buf [ j ] += ( ( int64_t ) coeff * prev [ j ] + 4 ) >> 3	409:24:9677:9730	3218099	3	True				
ANR	3219364	AssignmentExpression	sample_buf [ j ] += ( ( int64_t ) coeff * prev [ j ] + 4 ) >> 3		3218099	0		+=			
ANR	3219365	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219366	Identifier	sample_buf		3218099	0					
ANR	3219367	Identifier	j		3218099	1					
ANR	3219368	ShiftExpression	( ( int64_t ) coeff * prev [ j ] + 4 ) >> 3		3218099	1		>>			
ANR	3219369	AdditiveExpression	( int64_t ) coeff * prev [ j ] + 4		3218099	0		+			
ANR	3219370	MultiplicativeExpression	( int64_t ) coeff * prev [ j ]		3218099	0		*			
ANR	3219371	CastExpression	( int64_t ) coeff		3218099	0					
ANR	3219372	CastTarget	int64_t		3218099	0					
ANR	3219373	Identifier	coeff		3218099	1					
ANR	3219374	ArrayIndexing	prev [ j ]		3218099	1					
ANR	3219375	Identifier	prev		3218099	0					
ANR	3219376	Identifier	j		3218099	1					
ANR	3219377	PrimaryExpression	4		3218099	1					
ANR	3219378	PrimaryExpression	3		3218099	1					
ANR	3219379	IfStatement	if ( s -> xll_scalable_lsb )		3218099	12					
ANR	3219380	Condition	s -> xll_scalable_lsb	417:16:9785:9803	3218099	0	True				
ANR	3219381	PtrMemberAccess	s -> xll_scalable_lsb		3218099	0					
ANR	3219382	Identifier	s		3218099	0					
ANR	3219383	Identifier	xll_scalable_lsb		3218099	1					
ANR	3219384	CompoundStatement		421:16:9897:9905	3218099	1					
ANR	3219385	IdentifierDeclStatement	int lsb_start = end_pos - 8 * chset -> lsb_fsize [ 0 ] - 8 * ( s -> xll_banddata_crc & 2 ) ;	419:16:9825:9939	3218099	0	True				
ANR	3219386	IdentifierDecl	lsb_start = end_pos - 8 * chset -> lsb_fsize [ 0 ] - 8 * ( s -> xll_banddata_crc & 2 )		3218099	0					
ANR	3219387	IdentifierDeclType	int		3218099	0					
ANR	3219388	Identifier	lsb_start		3218099	1					
ANR	3219389	AssignmentExpression	lsb_start = end_pos - 8 * chset -> lsb_fsize [ 0 ] - 8 * ( s -> xll_banddata_crc & 2 )		3218099	2		=			
ANR	3219390	Identifier	lsb_start		3218099	0					
ANR	3219391	AdditiveExpression	end_pos - 8 * chset -> lsb_fsize [ 0 ] - 8 * ( s -> xll_banddata_crc & 2 )		3218099	1		-			
ANR	3219392	Identifier	end_pos		3218099	0					
ANR	3219393	AdditiveExpression	8 * chset -> lsb_fsize [ 0 ] - 8 * ( s -> xll_banddata_crc & 2 )		3218099	1		-			
ANR	3219394	MultiplicativeExpression	8 * chset -> lsb_fsize [ 0 ]		3218099	0		*			
ANR	3219395	PrimaryExpression	8		3218099	0					
ANR	3219396	ArrayIndexing	chset -> lsb_fsize [ 0 ]		3218099	1					
ANR	3219397	PtrMemberAccess	chset -> lsb_fsize		3218099	0					
ANR	3219398	Identifier	chset		3218099	0					
ANR	3219399	Identifier	lsb_fsize		3218099	1					
ANR	3219400	PrimaryExpression	0		3218099	1					
ANR	3219401	MultiplicativeExpression	8 * ( s -> xll_banddata_crc & 2 )		3218099	1		*			
ANR	3219402	PrimaryExpression	8		3218099	0					
ANR	3219403	BitAndExpression	s -> xll_banddata_crc & 2		3218099	1		&			
ANR	3219404	PtrMemberAccess	s -> xll_banddata_crc		3218099	0					
ANR	3219405	Identifier	s		3218099	0					
ANR	3219406	Identifier	xll_banddata_crc		3218099	1					
ANR	3219407	PrimaryExpression	2		3218099	1					
ANR	3219408	IdentifierDeclStatement	int done ;	423:16:9958:9966	3218099	1	True				
ANR	3219409	IdentifierDecl	done		3218099	0					
ANR	3219410	IdentifierDeclType	int		3218099	0					
ANR	3219411	Identifier	done		3218099	1					
ANR	3219412	ExpressionStatement	i = get_bits_count ( gb )	425:16:9985:10007	3218099	2	True				
ANR	3219413	AssignmentExpression	i = get_bits_count ( gb )		3218099	0		=			
ANR	3219414	Identifier	i		3218099	0					
ANR	3219415	CallExpression	get_bits_count ( gb )		3218099	1					
ANR	3219416	Callee	get_bits_count		3218099	0					
ANR	3219417	Identifier	get_bits_count		3218099	0					
ANR	3219418	ArgumentList	gb		3218099	1					
ANR	3219419	Argument	gb		3218099	0					
ANR	3219420	Identifier	gb		3218099	0					
ANR	3219421	IfStatement	if ( i > lsb_start )		3218099	3					
ANR	3219422	Condition	i > lsb_start	427:20:10030:10042	3218099	0	True				
ANR	3219423	RelationalExpression	i > lsb_start		3218099	0		>			
ANR	3219424	Identifier	i		3218099	0					
ANR	3219425	Identifier	lsb_start		3218099	1					
ANR	3219426	CompoundStatement		425:35:9984:9984	3218099	1					
ANR	3219427	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset data lsb exceeds NAVI size, end_pos %d, lsb_start %d, pos %d\\n"" , end_pos , lsb_start , i )"	429:20:10068:10249	3218099	0	True				
ANR	3219428	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset data lsb exceeds NAVI size, end_pos %d, lsb_start %d, pos %d\\n"" , end_pos , lsb_start , i )"		3218099	0					
ANR	3219429	Callee	av_log		3218099	0					
ANR	3219430	Identifier	av_log		3218099	0					
ANR	3219431	ArgumentList	s -> avctx		3218099	1					
ANR	3219432	Argument	s -> avctx		3218099	0					
ANR	3219433	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3219434	Identifier	s		3218099	0					
ANR	3219435	Identifier	avctx		3218099	1					
ANR	3219436	Argument	AV_LOG_ERROR		3218099	1					
ANR	3219437	Identifier	AV_LOG_ERROR		3218099	0					
ANR	3219438	Argument	"""chset data lsb exceeds NAVI size, end_pos %d, lsb_start %d, pos %d\\n"""		3218099	2					
ANR	3219439	PrimaryExpression	"""chset data lsb exceeds NAVI size, end_pos %d, lsb_start %d, pos %d\\n"""		3218099	0					
ANR	3219440	Argument	end_pos		3218099	3					
ANR	3219441	Identifier	end_pos		3218099	0					
ANR	3219442	Argument	lsb_start		3218099	4					
ANR	3219443	Identifier	lsb_start		3218099	0					
ANR	3219444	Argument	i		3218099	5					
ANR	3219445	Identifier	i		3218099	0					
ANR	3219446	ReturnStatement	return AVERROR_INVALIDDATA ;	435:20:10272:10298	3218099	1	True				
ANR	3219447	Identifier	AVERROR_INVALIDDATA		3218099	0					
ANR	3219448	IfStatement	if ( i < lsb_start )		3218099	4					
ANR	3219449	Condition	i < lsb_start	439:20:10340:10352	3218099	0	True				
ANR	3219450	RelationalExpression	i < lsb_start		3218099	0		<			
ANR	3219451	Identifier	i		3218099	0					
ANR	3219452	Identifier	lsb_start		3218099	1					
ANR	3219453	ExpressionStatement	"skip_bits_long ( gb , lsb_start - i )"	441:20:10376:10409	3218099	1	True				
ANR	3219454	CallExpression	"skip_bits_long ( gb , lsb_start - i )"		3218099	0					
ANR	3219455	Callee	skip_bits_long		3218099	0					
ANR	3219456	Identifier	skip_bits_long		3218099	0					
ANR	3219457	ArgumentList	gb		3218099	1					
ANR	3219458	Argument	gb		3218099	0					
ANR	3219459	Identifier	gb		3218099	0					
ANR	3219460	Argument	lsb_start - i		3218099	1					
ANR	3219461	AdditiveExpression	lsb_start - i		3218099	0		-			
ANR	3219462	Identifier	lsb_start		3218099	0					
ANR	3219463	Identifier	i		3218099	1					
ANR	3219464	ForStatement	for ( i = done = 0 ; i < chset -> channels ; i ++ )		3218099	5					
ANR	3219465	ForInit	i = done = 0 ;	445:21:10435:10447	3218099	0	True				
ANR	3219466	AssignmentExpression	i = done = 0		3218099	0		=			
ANR	3219467	Identifier	i		3218099	0					
ANR	3219468	AssignmentExpression	done = 0		3218099	1		=			
ANR	3219469	Identifier	done		3218099	0					
ANR	3219470	PrimaryExpression	0		3218099	1					
ANR	3219471	Condition	i < chset -> channels	445:35:10449:10467	3218099	1	True				
ANR	3219472	RelationalExpression	i < chset -> channels		3218099	0		<			
ANR	3219473	Identifier	i		3218099	0					
ANR	3219474	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3219475	Identifier	chset		3218099	0					
ANR	3219476	Identifier	channels		3218099	1					
ANR	3219477	PostIncDecOperationExpression	i ++	445:56:10470:10472	3218099	2	True				
ANR	3219478	Identifier	i		3218099	0					
ANR	3219479	IncDec	++		3218099	1					
ANR	3219480	CompoundStatement		445:20:10437:10474	3218099	3					
ANR	3219481	IdentifierDeclStatement	int bits = chset -> scalable_lsbs [ 0 ] [ i ] ;	447:20:10498:10535	3218099	0	True				
ANR	3219482	IdentifierDecl	bits = chset -> scalable_lsbs [ 0 ] [ i ]		3218099	0					
ANR	3219483	IdentifierDeclType	int		3218099	0					
ANR	3219484	Identifier	bits		3218099	1					
ANR	3219485	AssignmentExpression	bits = chset -> scalable_lsbs [ 0 ] [ i ]		3218099	2		=			
ANR	3219486	Identifier	bits		3218099	0					
ANR	3219487	ArrayIndexing	chset -> scalable_lsbs [ 0 ] [ i ]		3218099	1					
ANR	3219488	ArrayIndexing	chset -> scalable_lsbs [ 0 ]		3218099	0					
ANR	3219489	PtrMemberAccess	chset -> scalable_lsbs		3218099	0					
ANR	3219490	Identifier	chset		3218099	0					
ANR	3219491	Identifier	scalable_lsbs		3218099	1					
ANR	3219492	PrimaryExpression	0		3218099	1					
ANR	3219493	Identifier	i		3218099	1					
ANR	3219494	IfStatement	if ( bits > 0 )		3218099	1					
ANR	3219495	Condition	bits > 0	449:24:10562:10569	3218099	0	True				
ANR	3219496	RelationalExpression	bits > 0		3218099	0		>			
ANR	3219497	Identifier	bits		3218099	0					
ANR	3219498	PrimaryExpression	0		3218099	1					
ANR	3219499	CompoundStatement		465:24:11077:11087	3218099	1					
ANR	3219500	IdentifierDeclStatement	unsigned pi = chset -> orig_chan_order_inv [ 0 ] [ i ] ;	457:24:10802:10848	3218099	0	True				
ANR	3219501	IdentifierDecl	pi = chset -> orig_chan_order_inv [ 0 ] [ i ]		3218099	0					
ANR	3219502	IdentifierDeclType	unsigned		3218099	0					
ANR	3219503	Identifier	pi		3218099	1					
ANR	3219504	AssignmentExpression	pi = chset -> orig_chan_order_inv [ 0 ] [ i ]		3218099	2		=			
ANR	3219505	Identifier	pi		3218099	0					
ANR	3219506	ArrayIndexing	chset -> orig_chan_order_inv [ 0 ] [ i ]		3218099	1					
ANR	3219507	ArrayIndexing	chset -> orig_chan_order_inv [ 0 ]		3218099	0					
ANR	3219508	PtrMemberAccess	chset -> orig_chan_order_inv		3218099	0					
ANR	3219509	Identifier	chset		3218099	0					
ANR	3219510	Identifier	orig_chan_order_inv		3218099	1					
ANR	3219511	PrimaryExpression	0		3218099	1					
ANR	3219512	Identifier	i		3218099	1					
ANR	3219513	IdentifierDeclStatement	int * sample_buf = s -> xll_sample_buf + ( in_channel + pi ) * s -> xll_smpl_in_seg ;	459:24:10875:10994	3218099	1	True				
ANR	3219514	IdentifierDecl	* sample_buf = s -> xll_sample_buf + ( in_channel + pi ) * s -> xll_smpl_in_seg		3218099	0					
ANR	3219515	IdentifierDeclType	int *		3218099	0					
ANR	3219516	Identifier	sample_buf		3218099	1					
ANR	3219517	AssignmentExpression	* sample_buf = s -> xll_sample_buf + ( in_channel + pi ) * s -> xll_smpl_in_seg		3218099	2		=			
ANR	3219518	Identifier	sample_buf		3218099	0					
ANR	3219519	AdditiveExpression	s -> xll_sample_buf + ( in_channel + pi ) * s -> xll_smpl_in_seg		3218099	1		+			
ANR	3219520	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3219521	Identifier	s		3218099	0					
ANR	3219522	Identifier	xll_sample_buf		3218099	1					
ANR	3219523	MultiplicativeExpression	( in_channel + pi ) * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219524	AdditiveExpression	in_channel + pi		3218099	0		+			
ANR	3219525	Identifier	in_channel		3218099	0					
ANR	3219526	Identifier	pi		3218099	1					
ANR	3219527	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219528	Identifier	s		3218099	0					
ANR	3219529	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219530	IdentifierDeclStatement	int adj = chset -> bit_width_adj_per_ch [ 0 ] [ i ] ;	463:24:11021:11064	3218099	2	True				
ANR	3219531	IdentifierDecl	adj = chset -> bit_width_adj_per_ch [ 0 ] [ i ]		3218099	0					
ANR	3219532	IdentifierDeclType	int		3218099	0					
ANR	3219533	Identifier	adj		3218099	1					
ANR	3219534	AssignmentExpression	adj = chset -> bit_width_adj_per_ch [ 0 ] [ i ]		3218099	2		=			
ANR	3219535	Identifier	adj		3218099	0					
ANR	3219536	ArrayIndexing	chset -> bit_width_adj_per_ch [ 0 ] [ i ]		3218099	1					
ANR	3219537	ArrayIndexing	chset -> bit_width_adj_per_ch [ 0 ]		3218099	0					
ANR	3219538	PtrMemberAccess	chset -> bit_width_adj_per_ch		3218099	0					
ANR	3219539	Identifier	chset		3218099	0					
ANR	3219540	Identifier	bit_width_adj_per_ch		3218099	1					
ANR	3219541	PrimaryExpression	0		3218099	1					
ANR	3219542	Identifier	i		3218099	1					
ANR	3219543	IdentifierDeclStatement	int msb_shift = bits ;	465:24:11091:11111	3218099	3	True				
ANR	3219544	IdentifierDecl	msb_shift = bits		3218099	0					
ANR	3219545	IdentifierDeclType	int		3218099	0					
ANR	3219546	Identifier	msb_shift		3218099	1					
ANR	3219547	AssignmentExpression	msb_shift = bits		3218099	2		=			
ANR	3219548	Identifier	bits		3218099	0					
ANR	3219549	Identifier	bits		3218099	1					
ANR	3219550	IdentifierDeclStatement	unsigned j ;	467:24:11138:11148	3218099	4	True				
ANR	3219551	IdentifierDecl	j		3218099	0					
ANR	3219552	IdentifierDeclType	unsigned		3218099	0					
ANR	3219553	Identifier	j		3218099	1					
ANR	3219554	IfStatement	if ( adj > 0 )		3218099	5					
ANR	3219555	Condition	adj > 0	471:28:11181:11187	3218099	0	True				
ANR	3219556	RelationalExpression	adj > 0		3218099	0		>			
ANR	3219557	Identifier	adj		3218099	0					
ANR	3219558	PrimaryExpression	0		3218099	1					
ANR	3219559	ExpressionStatement	msb_shift += adj - 1	473:28:11219:11239	3218099	1	True				
ANR	3219560	AssignmentExpression	msb_shift += adj - 1		3218099	0		+=			
ANR	3219561	Identifier	msb_shift		3218099	0					
ANR	3219562	AdditiveExpression	adj - 1		3218099	1		-			
ANR	3219563	Identifier	adj		3218099	0					
ANR	3219564	PrimaryExpression	1		3218099	1					
ANR	3219565	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	6					
ANR	3219566	ForInit	j = 0 ;	477:29:11273:11278	3218099	0	True				
ANR	3219567	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219568	Identifier	j		3218099	0					
ANR	3219569	PrimaryExpression	0		3218099	1					
ANR	3219570	Condition	j < s -> xll_smpl_in_seg	477:36:11280:11301	3218099	1	True				
ANR	3219571	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219572	Identifier	j		3218099	0					
ANR	3219573	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219574	Identifier	s		3218099	0					
ANR	3219575	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219576	PostIncDecOperationExpression	j ++	477:60:11304:11306	3218099	2	True				
ANR	3219577	Identifier	j		3218099	0					
ANR	3219578	IncDec	++		3218099	1					
ANR	3219579	ExpressionStatement	"sample_buf [ j ] = ( sample_buf [ j ] << msb_shift ) + ( get_bits ( gb , bits ) << adj )"	479:28:11338:11457	3218099	3	True				
ANR	3219580	AssignmentExpression	"sample_buf [ j ] = ( sample_buf [ j ] << msb_shift ) + ( get_bits ( gb , bits ) << adj )"		3218099	0		=			
ANR	3219581	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219582	Identifier	sample_buf		3218099	0					
ANR	3219583	Identifier	j		3218099	1					
ANR	3219584	AdditiveExpression	"( sample_buf [ j ] << msb_shift ) + ( get_bits ( gb , bits ) << adj )"		3218099	1		+			
ANR	3219585	ShiftExpression	sample_buf [ j ] << msb_shift		3218099	0		<<			
ANR	3219586	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219587	Identifier	sample_buf		3218099	0					
ANR	3219588	Identifier	j		3218099	1					
ANR	3219589	Identifier	msb_shift		3218099	1					
ANR	3219590	ShiftExpression	"get_bits ( gb , bits ) << adj"		3218099	1		<<			
ANR	3219591	CallExpression	"get_bits ( gb , bits )"		3218099	0					
ANR	3219592	Callee	get_bits		3218099	0					
ANR	3219593	Identifier	get_bits		3218099	0					
ANR	3219594	ArgumentList	gb		3218099	1					
ANR	3219595	Argument	gb		3218099	0					
ANR	3219596	Identifier	gb		3218099	0					
ANR	3219597	Argument	bits		3218099	1					
ANR	3219598	Identifier	bits		3218099	0					
ANR	3219599	Identifier	adj		3218099	1					
ANR	3219600	ExpressionStatement	done += bits * s -> xll_smpl_in_seg	485:24:11486:11519	3218099	7	True				
ANR	3219601	AssignmentExpression	done += bits * s -> xll_smpl_in_seg		3218099	0		+=			
ANR	3219602	Identifier	done		3218099	0					
ANR	3219603	MultiplicativeExpression	bits * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219604	Identifier	bits		3218099	0					
ANR	3219605	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219606	Identifier	s		3218099	0					
ANR	3219607	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219608	IfStatement	if ( done > 8 * chset -> lsb_fsize [ 0 ] )		3218099	6					
ANR	3219609	Condition	done > 8 * chset -> lsb_fsize [ 0 ]	491:20:11584:11613	3218099	0	True				
ANR	3219610	RelationalExpression	done > 8 * chset -> lsb_fsize [ 0 ]		3218099	0		>			
ANR	3219611	Identifier	done		3218099	0					
ANR	3219612	MultiplicativeExpression	8 * chset -> lsb_fsize [ 0 ]		3218099	1		*			
ANR	3219613	PrimaryExpression	8		3218099	0					
ANR	3219614	ArrayIndexing	chset -> lsb_fsize [ 0 ]		3218099	1					
ANR	3219615	PtrMemberAccess	chset -> lsb_fsize		3218099	0					
ANR	3219616	Identifier	chset		3218099	0					
ANR	3219617	Identifier	lsb_fsize		3218099	1					
ANR	3219618	PrimaryExpression	0		3218099	1					
ANR	3219619	CompoundStatement		489:52:11555:11555	3218099	1					
ANR	3219620	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset lsb exceeds lsb_size\\n"" )"	493:20:11639:11729	3218099	0	True				
ANR	3219621	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset lsb exceeds lsb_size\\n"" )"		3218099	0					
ANR	3219622	Callee	av_log		3218099	0					
ANR	3219623	Identifier	av_log		3218099	0					
ANR	3219624	ArgumentList	s -> avctx		3218099	1					
ANR	3219625	Argument	s -> avctx		3218099	0					
ANR	3219626	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3219627	Identifier	s		3218099	0					
ANR	3219628	Identifier	avctx		3218099	1					
ANR	3219629	Argument	AV_LOG_ERROR		3218099	1					
ANR	3219630	Identifier	AV_LOG_ERROR		3218099	0					
ANR	3219631	Argument	"""chset lsb exceeds lsb_size\\n"""		3218099	2					
ANR	3219632	PrimaryExpression	"""chset lsb exceeds lsb_size\\n"""		3218099	0					
ANR	3219633	ReturnStatement	return AVERROR_INVALIDDATA ;	497:20:11752:11778	3218099	1	True				
ANR	3219634	Identifier	AVERROR_INVALIDDATA		3218099	0					
ANR	3219635	ForStatement	for ( i = 0 ; i < chset -> channels ; i ++ )		3218099	13					
ANR	3219636	ForInit	i = 0 ;	507:17:11867:11872	3218099	0	True				
ANR	3219637	AssignmentExpression	i = 0		3218099	0		=			
ANR	3219638	Identifier	i		3218099	0					
ANR	3219639	PrimaryExpression	0		3218099	1					
ANR	3219640	Condition	i < chset -> channels	507:24:11874:11892	3218099	1	True				
ANR	3219641	RelationalExpression	i < chset -> channels		3218099	0		<			
ANR	3219642	Identifier	i		3218099	0					
ANR	3219643	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3219644	Identifier	chset		3218099	0					
ANR	3219645	Identifier	channels		3218099	1					
ANR	3219646	PostIncDecOperationExpression	i ++	507:45:11895:11897	3218099	2	True				
ANR	3219647	Identifier	i		3218099	0					
ANR	3219648	IncDec	++		3218099	1					
ANR	3219649	CompoundStatement		515:16:12108:12118	3218099	3					
ANR	3219650	IdentifierDeclStatement	int * sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg ;	509:16:11919:12029	3218099	0	True				
ANR	3219651	IdentifierDecl	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	0					
ANR	3219652	IdentifierDeclType	int *		3218099	0					
ANR	3219653	Identifier	sample_buf		3218099	1					
ANR	3219654	AssignmentExpression	* sample_buf = s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	2		=			
ANR	3219655	Identifier	sample_buf		3218099	0					
ANR	3219656	AdditiveExpression	s -> xll_sample_buf + ( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		+			
ANR	3219657	PtrMemberAccess	s -> xll_sample_buf		3218099	0					
ANR	3219658	Identifier	s		3218099	0					
ANR	3219659	Identifier	xll_sample_buf		3218099	1					
ANR	3219660	MultiplicativeExpression	( in_channel + i ) * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219661	AdditiveExpression	in_channel + i		3218099	0		+			
ANR	3219662	Identifier	in_channel		3218099	0					
ANR	3219663	Identifier	i		3218099	1					
ANR	3219664	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219665	Identifier	s		3218099	0					
ANR	3219666	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219667	IdentifierDeclStatement	int shift = 1 - chset -> bit_resolution ;	513:16:12048:12085	3218099	1	True				
ANR	3219668	IdentifierDecl	shift = 1 - chset -> bit_resolution		3218099	0					
ANR	3219669	IdentifierDeclType	int		3218099	0					
ANR	3219670	Identifier	shift		3218099	1					
ANR	3219671	AssignmentExpression	shift = 1 - chset -> bit_resolution		3218099	2		=			
ANR	3219672	Identifier	shift		3218099	0					
ANR	3219673	AdditiveExpression	1 - chset -> bit_resolution		3218099	1		-			
ANR	3219674	PrimaryExpression	1		3218099	0					
ANR	3219675	PtrMemberAccess	chset -> bit_resolution		3218099	1					
ANR	3219676	Identifier	chset		3218099	0					
ANR	3219677	Identifier	bit_resolution		3218099	1					
ANR	3219678	IdentifierDeclStatement	int out_channel = chset -> orig_chan_order [ 0 ] [ i ] ;	515:16:12104:12150	3218099	2	True				
ANR	3219679	IdentifierDecl	out_channel = chset -> orig_chan_order [ 0 ] [ i ]		3218099	0					
ANR	3219680	IdentifierDeclType	int		3218099	0					
ANR	3219681	Identifier	out_channel		3218099	1					
ANR	3219682	AssignmentExpression	out_channel = chset -> orig_chan_order [ 0 ] [ i ]		3218099	2		=			
ANR	3219683	Identifier	out_channel		3218099	0					
ANR	3219684	ArrayIndexing	chset -> orig_chan_order [ 0 ] [ i ]		3218099	1					
ANR	3219685	ArrayIndexing	chset -> orig_chan_order [ 0 ]		3218099	0					
ANR	3219686	PtrMemberAccess	chset -> orig_chan_order		3218099	0					
ANR	3219687	Identifier	chset		3218099	0					
ANR	3219688	Identifier	orig_chan_order		3218099	1					
ANR	3219689	PrimaryExpression	0		3218099	1					
ANR	3219690	Identifier	i		3218099	1					
ANR	3219691	IdentifierDeclStatement	float * out ;	517:16:12169:12179	3218099	3	True				
ANR	3219692	IdentifierDecl	* out		3218099	0					
ANR	3219693	IdentifierDeclType	float *		3218099	0					
ANR	3219694	Identifier	out		3218099	1					
ANR	3219695	IfStatement	if ( chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && out_channel < 3 )		3218099	4					
ANR	3219696	Condition	chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && out_channel < 3	525:20:12323:12413	3218099	0	True				
ANR	3219697	AndExpression	chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && out_channel < 3		3218099	0		&&			
ANR	3219698	PtrMemberAccess	chset -> ch_mask_enabled		3218099	0					
ANR	3219699	Identifier	chset		3218099	0					
ANR	3219700	Identifier	ch_mask_enabled		3218099	1					
ANR	3219701	AndExpression	( chset -> ch_mask & 7 ) == 7 && out_channel < 3		3218099	1		&&			
ANR	3219702	EqualityExpression	( chset -> ch_mask & 7 ) == 7		3218099	0		==			
ANR	3219703	BitAndExpression	chset -> ch_mask & 7		3218099	0		&			
ANR	3219704	PtrMemberAccess	chset -> ch_mask		3218099	0					
ANR	3219705	Identifier	chset		3218099	0					
ANR	3219706	Identifier	ch_mask		3218099	1					
ANR	3219707	PrimaryExpression	7		3218099	1					
ANR	3219708	PrimaryExpression	7		3218099	1					
ANR	3219709	RelationalExpression	out_channel < 3		3218099	1		<			
ANR	3219710	Identifier	out_channel		3218099	0					
ANR	3219711	PrimaryExpression	3		3218099	1					
ANR	3219712	ExpressionStatement	out_channel = out_channel ? out_channel - 1 : 2	529:20:12437:12484	3218099	1	True				
ANR	3219713	AssignmentExpression	out_channel = out_channel ? out_channel - 1 : 2		3218099	0		=			
ANR	3219714	Identifier	out_channel		3218099	0					
ANR	3219715	ConditionalExpression	out_channel ? out_channel - 1 : 2		3218099	1					
ANR	3219716	Condition	out_channel		3218099	0					
ANR	3219717	Identifier	out_channel		3218099	0					
ANR	3219718	AdditiveExpression	out_channel - 1		3218099	1		-			
ANR	3219719	Identifier	out_channel		3218099	0					
ANR	3219720	PrimaryExpression	1		3218099	1					
ANR	3219721	PrimaryExpression	2		3218099	2					
ANR	3219722	ExpressionStatement	out_channel += in_channel	533:16:12505:12530	3218099	5	True				
ANR	3219723	AssignmentExpression	out_channel += in_channel		3218099	0		+=			
ANR	3219724	Identifier	out_channel		3218099	0					
ANR	3219725	Identifier	in_channel		3218099	1					
ANR	3219726	IfStatement	if ( out_channel >= s -> avctx -> channels )		3218099	6					
ANR	3219727	Condition	out_channel >= s -> avctx -> channels	535:20:12553:12585	3218099	0	True				
ANR	3219728	RelationalExpression	out_channel >= s -> avctx -> channels		3218099	0		>=			
ANR	3219729	Identifier	out_channel		3218099	0					
ANR	3219730	PtrMemberAccess	s -> avctx -> channels		3218099	1					
ANR	3219731	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3219732	Identifier	s		3218099	0					
ANR	3219733	Identifier	avctx		3218099	1					
ANR	3219734	Identifier	channels		3218099	1					
ANR	3219735	ContinueStatement	continue ;	537:20:12609:12617	3218099	1	True				
ANR	3219736	ExpressionStatement	out = ( float * ) frame -> extended_data [ out_channel ]	541:16:12638:12688	3218099	7	True				
ANR	3219737	AssignmentExpression	out = ( float * ) frame -> extended_data [ out_channel ]		3218099	0		=			
ANR	3219738	Identifier	out		3218099	0					
ANR	3219739	CastExpression	( float * ) frame -> extended_data [ out_channel ]		3218099	1					
ANR	3219740	CastTarget	float *		3218099	0					
ANR	3219741	ArrayIndexing	frame -> extended_data [ out_channel ]		3218099	1					
ANR	3219742	PtrMemberAccess	frame -> extended_data		3218099	0					
ANR	3219743	Identifier	frame		3218099	0					
ANR	3219744	Identifier	extended_data		3218099	1					
ANR	3219745	Identifier	out_channel		3218099	1					
ANR	3219746	ExpressionStatement	out += seg * s -> xll_smpl_in_seg	543:16:12707:12738	3218099	8	True				
ANR	3219747	AssignmentExpression	out += seg * s -> xll_smpl_in_seg		3218099	0		+=			
ANR	3219748	Identifier	out		3218099	0					
ANR	3219749	MultiplicativeExpression	seg * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219750	Identifier	seg		3218099	0					
ANR	3219751	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219752	Identifier	s		3218099	0					
ANR	3219753	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219754	IfStatement	if ( ( chset -> residual_encode >> i ) & 1 )		3218099	9					
ANR	3219755	Condition	( chset -> residual_encode >> i ) & 1	549:20:12841:12873	3218099	0	True				
ANR	3219756	BitAndExpression	( chset -> residual_encode >> i ) & 1		3218099	0		&			
ANR	3219757	ShiftExpression	chset -> residual_encode >> i		3218099	0		>>			
ANR	3219758	PtrMemberAccess	chset -> residual_encode		3218099	0					
ANR	3219759	Identifier	chset		3218099	0					
ANR	3219760	Identifier	residual_encode		3218099	1					
ANR	3219761	Identifier	i		3218099	1					
ANR	3219762	PrimaryExpression	1		3218099	1					
ANR	3219763	CompoundStatement		547:55:12815:12815	3218099	1					
ANR	3219764	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	0					
ANR	3219765	ForInit	j = 0 ;	555:25:13026:13031	3218099	0	True				
ANR	3219766	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219767	Identifier	j		3218099	0					
ANR	3219768	PrimaryExpression	0		3218099	1					
ANR	3219769	Condition	j < s -> xll_smpl_in_seg	555:32:13033:13054	3218099	1	True				
ANR	3219770	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219771	Identifier	j		3218099	0					
ANR	3219772	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219773	Identifier	s		3218099	0					
ANR	3219774	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219775	PostIncDecOperationExpression	j ++	555:56:13057:13059	3218099	2	True				
ANR	3219776	Identifier	j		3218099	0					
ANR	3219777	IncDec	++		3218099	1					
ANR	3219778	ExpressionStatement	"out [ j ] = ldexpf ( sample_buf [ j ] , shift )"	557:24:13087:13124	3218099	3	True				
ANR	3219779	AssignmentExpression	"out [ j ] = ldexpf ( sample_buf [ j ] , shift )"		3218099	0		=			
ANR	3219780	ArrayIndexing	out [ j ]		3218099	0					
ANR	3219781	Identifier	out		3218099	0					
ANR	3219782	Identifier	j		3218099	1					
ANR	3219783	CallExpression	"ldexpf ( sample_buf [ j ] , shift )"		3218099	1					
ANR	3219784	Callee	ldexpf		3218099	0					
ANR	3219785	Identifier	ldexpf		3218099	0					
ANR	3219786	ArgumentList	sample_buf [ j ]		3218099	1					
ANR	3219787	Argument	sample_buf [ j ]		3218099	0					
ANR	3219788	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219789	Identifier	sample_buf		3218099	0					
ANR	3219790	Identifier	j		3218099	1					
ANR	3219791	Argument	shift		3218099	1					
ANR	3219792	Identifier	shift		3218099	0					
ANR	3219793	ElseStatement	else		3218099	0					
ANR	3219794	CompoundStatement		557:23:13089:13089	3218099	0					
ANR	3219795	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	0					
ANR	3219796	ForInit	j = 0 ;	563:25:13241:13246	3218099	0	True				
ANR	3219797	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219798	Identifier	j		3218099	0					
ANR	3219799	PrimaryExpression	0		3218099	1					
ANR	3219800	Condition	j < s -> xll_smpl_in_seg	563:32:13248:13269	3218099	1	True				
ANR	3219801	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219802	Identifier	j		3218099	0					
ANR	3219803	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219804	Identifier	s		3218099	0					
ANR	3219805	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219806	PostIncDecOperationExpression	j ++	563:56:13272:13274	3218099	2	True				
ANR	3219807	Identifier	j		3218099	0					
ANR	3219808	IncDec	++		3218099	1					
ANR	3219809	ExpressionStatement	"out [ j ] += ldexpf ( sample_buf [ j ] , shift )"	565:24:13302:13340	3218099	3	True				
ANR	3219810	AssignmentExpression	"out [ j ] += ldexpf ( sample_buf [ j ] , shift )"		3218099	0		+=			
ANR	3219811	ArrayIndexing	out [ j ]		3218099	0					
ANR	3219812	Identifier	out		3218099	0					
ANR	3219813	Identifier	j		3218099	1					
ANR	3219814	CallExpression	"ldexpf ( sample_buf [ j ] , shift )"		3218099	1					
ANR	3219815	Callee	ldexpf		3218099	0					
ANR	3219816	Identifier	ldexpf		3218099	0					
ANR	3219817	ArgumentList	sample_buf [ j ]		3218099	1					
ANR	3219818	Argument	sample_buf [ j ]		3218099	0					
ANR	3219819	ArrayIndexing	sample_buf [ j ]		3218099	0					
ANR	3219820	Identifier	sample_buf		3218099	0					
ANR	3219821	Identifier	j		3218099	1					
ANR	3219822	Argument	shift		3218099	1					
ANR	3219823	Identifier	shift		3218099	0					
ANR	3219824	IfStatement	if ( chset -> downmix_coeff_code_embedded && ! chset -> primary_ch_set && chset -> hier_chset )		3218099	14					
ANR	3219825	Condition	chset -> downmix_coeff_code_embedded && ! chset -> primary_ch_set && chset -> hier_chset	573:16:13395:13492	3218099	0	True				
ANR	3219826	AndExpression	chset -> downmix_coeff_code_embedded && ! chset -> primary_ch_set && chset -> hier_chset		3218099	0		&&			
ANR	3219827	PtrMemberAccess	chset -> downmix_coeff_code_embedded		3218099	0					
ANR	3219828	Identifier	chset		3218099	0					
ANR	3219829	Identifier	downmix_coeff_code_embedded		3218099	1					
ANR	3219830	AndExpression	! chset -> primary_ch_set && chset -> hier_chset		3218099	1		&&			
ANR	3219831	UnaryOperationExpression	! chset -> primary_ch_set		3218099	0					
ANR	3219832	UnaryOperator	!		3218099	0					
ANR	3219833	PtrMemberAccess	chset -> primary_ch_set		3218099	1					
ANR	3219834	Identifier	chset		3218099	0					
ANR	3219835	Identifier	primary_ch_set		3218099	1					
ANR	3219836	PtrMemberAccess	chset -> hier_chset		3218099	1					
ANR	3219837	Identifier	chset		3218099	0					
ANR	3219838	Identifier	hier_chset		3218099	1					
ANR	3219839	CompoundStatement		577:16:13523:13543	3218099	1					
ANR	3219840	IdentifierDeclStatement	unsigned mix_channel ;	579:16:13584:13604	3218099	0	True				
ANR	3219841	IdentifierDecl	mix_channel		3218099	0					
ANR	3219842	IdentifierDeclType	unsigned		3218099	0					
ANR	3219843	Identifier	mix_channel		3218099	1					
ANR	3219844	ForStatement	for ( mix_channel = 0 ; mix_channel < in_channel ; mix_channel ++ )		3218099	1					
ANR	3219845	ForInit	mix_channel = 0 ;	581:21:13628:13643	3218099	0	True				
ANR	3219846	AssignmentExpression	mix_channel = 0		3218099	0		=			
ANR	3219847	Identifier	mix_channel		3218099	0					
ANR	3219848	PrimaryExpression	0		3218099	1					
ANR	3219849	Condition	mix_channel < in_channel	581:38:13645:13668	3218099	1	True				
ANR	3219850	RelationalExpression	mix_channel < in_channel		3218099	0		<			
ANR	3219851	Identifier	mix_channel		3218099	0					
ANR	3219852	Identifier	in_channel		3218099	1					
ANR	3219853	PostIncDecOperationExpression	mix_channel ++	581:64:13671:13683	3218099	2	True				
ANR	3219854	Identifier	mix_channel		3218099	0					
ANR	3219855	IncDec	++		3218099	1					
ANR	3219856	CompoundStatement		587:20:13756:13768	3218099	3					
ANR	3219857	IdentifierDeclStatement	float * mix_buf ;	583:20:13709:13723	3218099	0	True				
ANR	3219858	IdentifierDecl	* mix_buf		3218099	0					
ANR	3219859	IdentifierDeclType	float *		3218099	0					
ANR	3219860	Identifier	mix_buf		3218099	1					
ANR	3219861	IdentifierDeclStatement	const int * col ;	585:20:13746:13760	3218099	1	True				
ANR	3219862	IdentifierDecl	* col		3218099	0					
ANR	3219863	IdentifierDeclType	const int *		3218099	0					
ANR	3219864	Identifier	col		3218099	1					
ANR	3219865	IdentifierDeclStatement	float coeff ;	587:20:13783:13794	3218099	2	True				
ANR	3219866	IdentifierDecl	coeff		3218099	0					
ANR	3219867	IdentifierDeclType	float		3218099	0					
ANR	3219868	Identifier	coeff		3218099	1					
ANR	3219869	IdentifierDeclStatement	unsigned row ;	589:20:13817:13829	3218099	3	True				
ANR	3219870	IdentifierDecl	row		3218099	0					
ANR	3219871	IdentifierDeclType	unsigned		3218099	0					
ANR	3219872	Identifier	row		3218099	1					
ANR	3219873	IfStatement	if ( chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && mix_channel < 3 )		3218099	4					
ANR	3219874	Condition	chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && mix_channel < 3	593:24:13935:14029	3218099	0	True				
ANR	3219875	AndExpression	chset -> ch_mask_enabled && ( chset -> ch_mask & 7 ) == 7 && mix_channel < 3		3218099	0		&&			
ANR	3219876	PtrMemberAccess	chset -> ch_mask_enabled		3218099	0					
ANR	3219877	Identifier	chset		3218099	0					
ANR	3219878	Identifier	ch_mask_enabled		3218099	1					
ANR	3219879	AndExpression	( chset -> ch_mask & 7 ) == 7 && mix_channel < 3		3218099	1		&&			
ANR	3219880	EqualityExpression	( chset -> ch_mask & 7 ) == 7		3218099	0		==			
ANR	3219881	BitAndExpression	chset -> ch_mask & 7		3218099	0		&			
ANR	3219882	PtrMemberAccess	chset -> ch_mask		3218099	0					
ANR	3219883	Identifier	chset		3218099	0					
ANR	3219884	Identifier	ch_mask		3218099	1					
ANR	3219885	PrimaryExpression	7		3218099	1					
ANR	3219886	PrimaryExpression	7		3218099	1					
ANR	3219887	RelationalExpression	mix_channel < 3		3218099	1		<			
ANR	3219888	Identifier	mix_channel		3218099	0					
ANR	3219889	PrimaryExpression	3		3218099	1					
ANR	3219890	ExpressionStatement	mix_buf = ( float * ) frame -> extended_data [ mix_channel ? mix_channel - 1 : 2 ]	597:24:14057:14132	3218099	1	True				
ANR	3219891	AssignmentExpression	mix_buf = ( float * ) frame -> extended_data [ mix_channel ? mix_channel - 1 : 2 ]		3218099	0		=			
ANR	3219892	Identifier	mix_buf		3218099	0					
ANR	3219893	CastExpression	( float * ) frame -> extended_data [ mix_channel ? mix_channel - 1 : 2 ]		3218099	1					
ANR	3219894	CastTarget	float *		3218099	0					
ANR	3219895	ArrayIndexing	frame -> extended_data [ mix_channel ? mix_channel - 1 : 2 ]		3218099	1					
ANR	3219896	PtrMemberAccess	frame -> extended_data		3218099	0					
ANR	3219897	Identifier	frame		3218099	0					
ANR	3219898	Identifier	extended_data		3218099	1					
ANR	3219899	ConditionalExpression	mix_channel ? mix_channel - 1 : 2		3218099	1					
ANR	3219900	Condition	mix_channel		3218099	0					
ANR	3219901	Identifier	mix_channel		3218099	0					
ANR	3219902	AdditiveExpression	mix_channel - 1		3218099	1		-			
ANR	3219903	Identifier	mix_channel		3218099	0					
ANR	3219904	PrimaryExpression	1		3218099	1					
ANR	3219905	PrimaryExpression	2		3218099	2					
ANR	3219906	ElseStatement	else		3218099	0					
ANR	3219907	ExpressionStatement	mix_buf = ( float * ) frame -> extended_data [ mix_channel ]	601:24:14185:14238	3218099	0	True				
ANR	3219908	AssignmentExpression	mix_buf = ( float * ) frame -> extended_data [ mix_channel ]		3218099	0		=			
ANR	3219909	Identifier	mix_buf		3218099	0					
ANR	3219910	CastExpression	( float * ) frame -> extended_data [ mix_channel ]		3218099	1					
ANR	3219911	CastTarget	float *		3218099	0					
ANR	3219912	ArrayIndexing	frame -> extended_data [ mix_channel ]		3218099	1					
ANR	3219913	PtrMemberAccess	frame -> extended_data		3218099	0					
ANR	3219914	Identifier	frame		3218099	0					
ANR	3219915	Identifier	extended_data		3218099	1					
ANR	3219916	Identifier	mix_channel		3218099	1					
ANR	3219917	ExpressionStatement	mix_buf += seg * s -> xll_smpl_in_seg	605:20:14263:14298	3218099	5	True				
ANR	3219918	AssignmentExpression	mix_buf += seg * s -> xll_smpl_in_seg		3218099	0		+=			
ANR	3219919	Identifier	mix_buf		3218099	0					
ANR	3219920	MultiplicativeExpression	seg * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3219921	Identifier	seg		3218099	0					
ANR	3219922	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219923	Identifier	s		3218099	0					
ANR	3219924	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219925	ExpressionStatement	col = & chset -> downmix_coeffs [ mix_channel * ( chset -> channels + 1 ) ]	607:20:14321:14386	3218099	6	True				
ANR	3219926	AssignmentExpression	col = & chset -> downmix_coeffs [ mix_channel * ( chset -> channels + 1 ) ]		3218099	0		=			
ANR	3219927	Identifier	col		3218099	0					
ANR	3219928	UnaryOperationExpression	& chset -> downmix_coeffs [ mix_channel * ( chset -> channels + 1 ) ]		3218099	1					
ANR	3219929	UnaryOperator	&		3218099	0					
ANR	3219930	ArrayIndexing	chset -> downmix_coeffs [ mix_channel * ( chset -> channels + 1 ) ]		3218099	1					
ANR	3219931	PtrMemberAccess	chset -> downmix_coeffs		3218099	0					
ANR	3219932	Identifier	chset		3218099	0					
ANR	3219933	Identifier	downmix_coeffs		3218099	1					
ANR	3219934	MultiplicativeExpression	mix_channel * ( chset -> channels + 1 )		3218099	1		*			
ANR	3219935	Identifier	mix_channel		3218099	0					
ANR	3219936	AdditiveExpression	chset -> channels + 1		3218099	1		+			
ANR	3219937	PtrMemberAccess	chset -> channels		3218099	0					
ANR	3219938	Identifier	chset		3218099	0					
ANR	3219939	Identifier	channels		3218099	1					
ANR	3219940	PrimaryExpression	1		3218099	1					
ANR	3219941	ExpressionStatement	"coeff = ldexpf ( col [ 0 ] , - 16 )"	613:20:14444:14471	3218099	7	True				
ANR	3219942	AssignmentExpression	"coeff = ldexpf ( col [ 0 ] , - 16 )"		3218099	0		=			
ANR	3219943	Identifier	coeff		3218099	0					
ANR	3219944	CallExpression	"ldexpf ( col [ 0 ] , - 16 )"		3218099	1					
ANR	3219945	Callee	ldexpf		3218099	0					
ANR	3219946	Identifier	ldexpf		3218099	0					
ANR	3219947	ArgumentList	col [ 0 ]		3218099	1					
ANR	3219948	Argument	col [ 0 ]		3218099	0					
ANR	3219949	ArrayIndexing	col [ 0 ]		3218099	0					
ANR	3219950	Identifier	col		3218099	0					
ANR	3219951	PrimaryExpression	0		3218099	1					
ANR	3219952	Argument	- 16		3218099	1					
ANR	3219953	UnaryOperationExpression	- 16		3218099	0					
ANR	3219954	UnaryOperator	-		3218099	0					
ANR	3219955	PrimaryExpression	16		3218099	1					
ANR	3219956	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	8					
ANR	3219957	ForInit	j = 0 ;	615:25:14499:14504	3218099	0	True				
ANR	3219958	AssignmentExpression	j = 0		3218099	0		=			
ANR	3219959	Identifier	j		3218099	0					
ANR	3219960	PrimaryExpression	0		3218099	1					
ANR	3219961	Condition	j < s -> xll_smpl_in_seg	615:32:14506:14527	3218099	1	True				
ANR	3219962	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3219963	Identifier	j		3218099	0					
ANR	3219964	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3219965	Identifier	s		3218099	0					
ANR	3219966	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3219967	PostIncDecOperationExpression	j ++	615:56:14530:14532	3218099	2	True				
ANR	3219968	Identifier	j		3218099	0					
ANR	3219969	IncDec	++		3218099	1					
ANR	3219970	ExpressionStatement	mix_buf [ j ] *= coeff	617:24:14560:14579	3218099	3	True				
ANR	3219971	AssignmentExpression	mix_buf [ j ] *= coeff		3218099	0		*=			
ANR	3219972	ArrayIndexing	mix_buf [ j ]		3218099	0					
ANR	3219973	Identifier	mix_buf		3218099	0					
ANR	3219974	Identifier	j		3218099	1					
ANR	3219975	Identifier	coeff		3218099	1					
ANR	3219976	ForStatement	for ( row = 0 ; row < chset -> channels && in_channel + row < s -> avctx -> channels ; row ++ )		3218099	9					
ANR	3219977	ForInit	row = 0 ;	621:25:14609:14616	3218099	0	True				
ANR	3219978	AssignmentExpression	row = 0		3218099	0		=			
ANR	3219979	Identifier	row		3218099	0					
ANR	3219980	PrimaryExpression	0		3218099	1					
ANR	3219981	Condition	row < chset -> channels && in_channel + row < s -> avctx -> channels	623:25:14644:14705	3218099	1	True				
ANR	3219982	AndExpression	row < chset -> channels && in_channel + row < s -> avctx -> channels		3218099	0		&&			
ANR	3219983	RelationalExpression	row < chset -> channels		3218099	0		<			
ANR	3219984	Identifier	row		3218099	0					
ANR	3219985	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3219986	Identifier	chset		3218099	0					
ANR	3219987	Identifier	channels		3218099	1					
ANR	3219988	RelationalExpression	in_channel + row < s -> avctx -> channels		3218099	1		<			
ANR	3219989	AdditiveExpression	in_channel + row		3218099	0		+			
ANR	3219990	Identifier	in_channel		3218099	0					
ANR	3219991	Identifier	row		3218099	1					
ANR	3219992	PtrMemberAccess	s -> avctx -> channels		3218099	1					
ANR	3219993	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3219994	Identifier	s		3218099	0					
ANR	3219995	Identifier	avctx		3218099	1					
ANR	3219996	Identifier	channels		3218099	1					
ANR	3219997	PostIncDecOperationExpression	row ++	625:25:14734:14738	3218099	2	True				
ANR	3219998	Identifier	row		3218099	0					
ANR	3219999	IncDec	++		3218099	1					
ANR	3220000	IfStatement	if ( col [ row + 1 ] )		3218099	3					
ANR	3220001	Condition	col [ row + 1 ]	627:28:14770:14781	3218099	0	True				
ANR	3220002	ArrayIndexing	col [ row + 1 ]		3218099	0					
ANR	3220003	Identifier	col		3218099	0					
ANR	3220004	AdditiveExpression	row + 1		3218099	1		+			
ANR	3220005	Identifier	row		3218099	0					
ANR	3220006	PrimaryExpression	1		3218099	1					
ANR	3220007	CompoundStatement		627:28:14754:14868	3218099	1					
ANR	3220008	IdentifierDeclStatement	const float * new_channel = ( const float * ) frame -> extended_data [ in_channel + row ] ;	629:28:14815:14929	3218099	0	True				
ANR	3220009	IdentifierDecl	* new_channel = ( const float * ) frame -> extended_data [ in_channel + row ]		3218099	0					
ANR	3220010	IdentifierDeclType	const float *		3218099	0					
ANR	3220011	Identifier	new_channel		3218099	1					
ANR	3220012	AssignmentExpression	* new_channel = ( const float * ) frame -> extended_data [ in_channel + row ]		3218099	2		=			
ANR	3220013	Identifier	new_channel		3218099	0					
ANR	3220014	CastExpression	( const float * ) frame -> extended_data [ in_channel + row ]		3218099	1					
ANR	3220015	CastTarget	const float *		3218099	0					
ANR	3220016	ArrayIndexing	frame -> extended_data [ in_channel + row ]		3218099	1					
ANR	3220017	PtrMemberAccess	frame -> extended_data		3218099	0					
ANR	3220018	Identifier	frame		3218099	0					
ANR	3220019	Identifier	extended_data		3218099	1					
ANR	3220020	AdditiveExpression	in_channel + row		3218099	1		+			
ANR	3220021	Identifier	in_channel		3218099	0					
ANR	3220022	Identifier	row		3218099	1					
ANR	3220023	ExpressionStatement	new_channel += seg * s -> xll_smpl_in_seg	633:28:14960:14999	3218099	1	True				
ANR	3220024	AssignmentExpression	new_channel += seg * s -> xll_smpl_in_seg		3218099	0		+=			
ANR	3220025	Identifier	new_channel		3218099	0					
ANR	3220026	MultiplicativeExpression	seg * s -> xll_smpl_in_seg		3218099	1		*			
ANR	3220027	Identifier	seg		3218099	0					
ANR	3220028	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3220029	Identifier	s		3218099	0					
ANR	3220030	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3220031	ExpressionStatement	"coeff = ldexpf ( col [ row + 1 ] , - 15 )"	635:28:15030:15070	3218099	2	True				
ANR	3220032	AssignmentExpression	"coeff = ldexpf ( col [ row + 1 ] , - 15 )"		3218099	0		=			
ANR	3220033	Identifier	coeff		3218099	0					
ANR	3220034	CallExpression	"ldexpf ( col [ row + 1 ] , - 15 )"		3218099	1					
ANR	3220035	Callee	ldexpf		3218099	0					
ANR	3220036	Identifier	ldexpf		3218099	0					
ANR	3220037	ArgumentList	col [ row + 1 ]		3218099	1					
ANR	3220038	Argument	col [ row + 1 ]		3218099	0					
ANR	3220039	ArrayIndexing	col [ row + 1 ]		3218099	0					
ANR	3220040	Identifier	col		3218099	0					
ANR	3220041	AdditiveExpression	row + 1		3218099	1		+			
ANR	3220042	Identifier	row		3218099	0					
ANR	3220043	PrimaryExpression	1		3218099	1					
ANR	3220044	Argument	- 15		3218099	1					
ANR	3220045	UnaryOperationExpression	- 15		3218099	0					
ANR	3220046	UnaryOperator	-		3218099	0					
ANR	3220047	PrimaryExpression	15		3218099	1					
ANR	3220048	ForStatement	for ( j = 0 ; j < s -> xll_smpl_in_seg ; j ++ )		3218099	3					
ANR	3220049	ForInit	j = 0 ;	637:33:15106:15111	3218099	0	True				
ANR	3220050	AssignmentExpression	j = 0		3218099	0		=			
ANR	3220051	Identifier	j		3218099	0					
ANR	3220052	PrimaryExpression	0		3218099	1					
ANR	3220053	Condition	j < s -> xll_smpl_in_seg	637:40:15113:15134	3218099	1	True				
ANR	3220054	RelationalExpression	j < s -> xll_smpl_in_seg		3218099	0		<			
ANR	3220055	Identifier	j		3218099	0					
ANR	3220056	PtrMemberAccess	s -> xll_smpl_in_seg		3218099	1					
ANR	3220057	Identifier	s		3218099	0					
ANR	3220058	Identifier	xll_smpl_in_seg		3218099	1					
ANR	3220059	PostIncDecOperationExpression	j ++	637:64:15137:15139	3218099	2	True				
ANR	3220060	Identifier	j		3218099	0					
ANR	3220061	IncDec	++		3218099	1					
ANR	3220062	ExpressionStatement	mix_buf [ j ] -= coeff * new_channel [ j ]	639:32:15175:15211	3218099	3	True				
ANR	3220063	AssignmentExpression	mix_buf [ j ] -= coeff * new_channel [ j ]		3218099	0		-=			
ANR	3220064	ArrayIndexing	mix_buf [ j ]		3218099	0					
ANR	3220065	Identifier	mix_buf		3218099	0					
ANR	3220066	Identifier	j		3218099	1					
ANR	3220067	MultiplicativeExpression	coeff * new_channel [ j ]		3218099	1		*			
ANR	3220068	Identifier	coeff		3218099	0					
ANR	3220069	ArrayIndexing	new_channel [ j ]		3218099	1					
ANR	3220070	Identifier	new_channel		3218099	0					
ANR	3220071	Identifier	j		3218099	1					
ANR	3220072	Label	next_chset :	649:0:15277:15287	3218099	15	True				
ANR	3220073	Identifier	next_chset		3218099	0					
ANR	3220074	ExpressionStatement	in_channel += chset -> channels	651:12:15302:15331	3218099	16	True				
ANR	3220075	AssignmentExpression	in_channel += chset -> channels		3218099	0		+=			
ANR	3220076	Identifier	in_channel		3218099	0					
ANR	3220077	PtrMemberAccess	chset -> channels		3218099	1					
ANR	3220078	Identifier	chset		3218099	0					
ANR	3220079	Identifier	channels		3218099	1					
ANR	3220080	ExpressionStatement	i = get_bits_count ( gb )	655:12:15411:15433	3218099	17	True				
ANR	3220081	AssignmentExpression	i = get_bits_count ( gb )		3218099	0		=			
ANR	3220082	Identifier	i		3218099	0					
ANR	3220083	CallExpression	get_bits_count ( gb )		3218099	1					
ANR	3220084	Callee	get_bits_count		3218099	0					
ANR	3220085	Identifier	get_bits_count		3218099	0					
ANR	3220086	ArgumentList	gb		3218099	1					
ANR	3220087	Argument	gb		3218099	0					
ANR	3220088	Identifier	gb		3218099	0					
ANR	3220089	IfStatement	if ( i > end_pos )		3218099	18					
ANR	3220090	Condition	i > end_pos	657:16:15452:15462	3218099	0	True				
ANR	3220091	RelationalExpression	i > end_pos		3218099	0		>			
ANR	3220092	Identifier	i		3218099	0					
ANR	3220093	Identifier	end_pos		3218099	1					
ANR	3220094	CompoundStatement		655:29:15404:15404	3218099	1					
ANR	3220095	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset data exceeds NAVI size\\n"" )"	659:16:15484:15572	3218099	0	True				
ANR	3220096	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""chset data exceeds NAVI size\\n"" )"		3218099	0					
ANR	3220097	Callee	av_log		3218099	0					
ANR	3220098	Identifier	av_log		3218099	0					
ANR	3220099	ArgumentList	s -> avctx		3218099	1					
ANR	3220100	Argument	s -> avctx		3218099	0					
ANR	3220101	PtrMemberAccess	s -> avctx		3218099	0					
ANR	3220102	Identifier	s		3218099	0					
ANR	3220103	Identifier	avctx		3218099	1					
ANR	3220104	Argument	AV_LOG_ERROR		3218099	1					
ANR	3220105	Identifier	AV_LOG_ERROR		3218099	0					
ANR	3220106	Argument	"""chset data exceeds NAVI size\\n"""		3218099	2					
ANR	3220107	PrimaryExpression	"""chset data exceeds NAVI size\\n"""		3218099	0					
ANR	3220108	ReturnStatement	return AVERROR_INVALIDDATA ;	663:16:15591:15617	3218099	1	True				
ANR	3220109	Identifier	AVERROR_INVALIDDATA		3218099	0					
ANR	3220110	IfStatement	if ( i < end_pos )		3218099	19					
ANR	3220111	Condition	i < end_pos	667:16:15651:15661	3218099	0	True				
ANR	3220112	RelationalExpression	i < end_pos		3218099	0		<			
ANR	3220113	Identifier	i		3218099	0					
ANR	3220114	Identifier	end_pos		3218099	1					
ANR	3220115	ExpressionStatement	"skip_bits_long ( gb , end_pos - i )"	669:16:15681:15712	3218099	1	True				
ANR	3220116	CallExpression	"skip_bits_long ( gb , end_pos - i )"		3218099	0					
ANR	3220117	Callee	skip_bits_long		3218099	0					
ANR	3220118	Identifier	skip_bits_long		3218099	0					
ANR	3220119	ArgumentList	gb		3218099	1					
ANR	3220120	Argument	gb		3218099	0					
ANR	3220121	Identifier	gb		3218099	0					
ANR	3220122	Argument	end_pos - i		3218099	1					
ANR	3220123	AdditiveExpression	end_pos - i		3218099	0		-			
ANR	3220124	Identifier	end_pos		3218099	0					
ANR	3220125	Identifier	i		3218099	1					
ANR	3220126	ReturnStatement	return 0 ;	675:4:15737:15745	3218099	8	True				
ANR	3220127	PrimaryExpression	0		3218099	0					
ANR	3220128	ReturnType	int		3218099	1					
ANR	3220129	Identifier	ff_dca_xll_decode_audio		3218099	2					
ANR	3220130	ParameterList	"DCAContext * s , AVFrame * frame"		3218099	3					
ANR	3220131	Parameter	DCAContext * s	1:28:28:40	3218099	0	True				
ANR	3220132	ParameterType	DCAContext *		3218099	0					
ANR	3220133	Identifier	s		3218099	1					
ANR	3220134	Parameter	AVFrame * frame	1:43:43:56	3218099	1	True				
ANR	3220135	ParameterType	AVFrame *		3218099	0					
ANR	3220136	Identifier	frame		3218099	1					
ANR	3220137	CFGEntryNode	ENTRY		3218099		True				
ANR	3220138	CFGExitNode	EXIT		3218099		True				
ANR	3220139	Symbol	& s -> xll_sample_buf		3218099						
ANR	3220140	Symbol	ENOMEM		3218099						
ANR	3220141	Symbol	& s -> xll_sample_buf_size		3218099						
ANR	3220142	Symbol	chset -> orig_chan_order_inv		3218099						
ANR	3220143	Symbol	param_state		3218099						
ANR	3220144	Symbol	prev		3218099						
ANR	3220145	Symbol	shift		3218099						
ANR	3220146	Symbol	* * * s -> xll_navi		3218099						
ANR	3220147	Symbol	s -> xll_banddata_crc		3218099						
ANR	3220148	Symbol	params -> rice_code_flag		3218099						
ANR	3220149	Symbol	chset -> bit_width_adj_per_ch		3218099						
ANR	3220150	Symbol	mix_channel		3218099						
ANR	3220151	Symbol	lsb_start		3218099						
ANR	3220152	Symbol	* * chset		3218099						
ANR	3220153	Symbol	* out_channel		3218099						
ANR	3220154	Symbol	aux_bits		3218099						
ANR	3220155	Symbol	s -> xll_scalable_lsb		3218099						
ANR	3220156	Symbol	s -> xll_sample_buf		3218099						
ANR	3220157	Symbol	chset -> channels		3218099						
ANR	3220158	Symbol	AV_LOG_DEBUG		3218099						
ANR	3220159	Symbol	chset -> residual_encode		3218099						
ANR	3220160	Symbol	order		3218099						
ANR	3220161	Symbol	* frame -> extended_data		3218099						
ANR	3220162	Symbol	s -> xll_channels		3218099						
ANR	3220163	Symbol	chset -> pw_ch_pairs_coeffs		3218099						
ANR	3220164	Symbol	chset -> bit_width		3218099						
ANR	3220165	Symbol	chset -> fixed_order		3218099						
ANR	3220166	Symbol	bits		3218099						
ANR	3220167	Symbol	* * seg		3218099						
ANR	3220168	Symbol	chset -> bit_resolution		3218099						
ANR	3220169	Symbol	* params -> nSamplPart0		3218099						
ANR	3220170	Symbol	* param_index		3218099						
ANR	3220171	Symbol	params		3218099						
ANR	3220172	Symbol	s -> xll_segments		3218099						
ANR	3220173	Symbol	* * * s		3218099						
ANR	3220174	Symbol	params -> nSamplPart0		3218099						
ANR	3220175	Symbol	* params -> pancABIT		3218099						
ANR	3220176	Symbol	s -> xll_smpl_in_seg		3218099						
ANR	3220177	Symbol	chset -> downmix_coeffs		3218099						
ANR	3220178	Symbol	* new_channel		3218099						
ANR	3220179	Symbol	* chset -> adapt_order_max		3218099						
ANR	3220180	Symbol	& s -> xll_navi		3218099						
ANR	3220181	Symbol	* out		3218099						
ANR	3220182	Symbol	chset -> orig_chan_order		3218099						
ANR	3220183	Symbol	get_bits_sm		3218099						
ANR	3220184	Symbol	params -> pancABIT		3218099						
ANR	3220185	Symbol	* chset -> bit_width_adj_per_ch		3218099						
ANR	3220186	Symbol	* seg		3218099						
ANR	3220187	Symbol	* mix_buf		3218099						
ANR	3220188	Symbol	* in_channel		3218099						
ANR	3220189	Symbol	out_channel		3218099						
ANR	3220190	Symbol	use_seg_state_code_param		3218099						
ANR	3220191	Symbol	chset -> hier_chset		3218099						
ANR	3220192	Symbol	s -> avctx -> channels		3218099						
ANR	3220193	Symbol	* * chset -> adapt_order		3218099						
ANR	3220194	Symbol	chset -> adapt_order_max		3218099						
ANR	3220195	Symbol	out		3218099						
ANR	3220196	Symbol	* * chset -> pw_ch_pairs_coeffs		3218099						
ANR	3220197	Symbol	seg		3218099						
ANR	3220198	Symbol	& s -> xll_navi . gb		3218099						
ANR	3220199	Symbol	* * s -> xll_navi		3218099						
ANR	3220200	Symbol	* * s		3218099						
ANR	3220201	Symbol	* params -> pancAuxABIT		3218099						
ANR	3220202	Symbol	params -> seg_type		3218099						
ANR	3220203	Symbol	* sample_buf		3218099						
ANR	3220204	Symbol	coeff		3218099						
ANR	3220205	Symbol	* params		3218099						
ANR	3220206	Symbol	params -> pancABIT0		3218099						
ANR	3220207	Symbol	* chset -> scalable_lsbs		3218099						
ANR	3220208	Symbol	* chset		3218099						
ANR	3220209	Symbol	AV_LOG_ERROR		3218099						
ANR	3220210	Symbol	i		3218099						
ANR	3220211	Symbol	j		3218099						
ANR	3220212	Symbol	s -> xll_log_smpl_in_seg		3218099						
ANR	3220213	Symbol	param_index		3218099						
ANR	3220214	Symbol	* chset -> lsb_fsize		3218099						
ANR	3220215	Symbol	s		3218099						
ANR	3220216	Symbol	* chset -> lpc_refl_coeffs_q_ind		3218099						
ANR	3220217	Symbol	* s -> xll_navi . chset_size		3218099						
ANR	3220218	Symbol	t		3218099						
ANR	3220219	Symbol	get_unary		3218099						
ANR	3220220	Symbol	DCA_XLL_AORDER_MAX		3218099						
ANR	3220221	Symbol	frame -> extended_data		3218099						
ANR	3220222	Symbol	* params -> rice_code_flag		3218099						
ANR	3220223	Symbol	chset		3218099						
ANR	3220224	Symbol	AVERROR_INVALIDDATA		3218099						
ANR	3220225	Symbol	adapt_order		3218099						
ANR	3220226	Symbol	AV_LOG_WARNING		3218099						
ANR	3220227	Symbol	col		3218099						
ANR	3220228	Symbol	chset_i		3218099						
ANR	3220229	Symbol	* * * * s		3218099						
ANR	3220230	Symbol	* row		3218099						
ANR	3220231	Symbol	get_bits		3218099						
ANR	3220232	Symbol	* * params		3218099						
ANR	3220233	Symbol	s -> xll_nch_sets		3218099						
ANR	3220234	Symbol	* * chset -> lpc_refl_coeffs_q_ind		3218099						
ANR	3220235	Symbol	chset -> primary_ch_set		3218099						
ANR	3220236	Symbol	chset -> sampling_frequency		3218099						
ANR	3220237	Symbol	* * frame		3218099						
ANR	3220238	Symbol	s -> xll_navi . chset_size		3218099						
ANR	3220239	Symbol	* * chset -> scalable_lsbs		3218099						
ANR	3220240	Symbol	ldexpf		3218099						
ANR	3220241	Symbol	* s -> xll_sample_buf		3218099						
ANR	3220242	Symbol	* s -> avctx		3218099						
ANR	3220243	Symbol	* * chset -> bit_width_adj_per_ch		3218099						
ANR	3220244	Symbol	NULL		3218099						
ANR	3220245	Symbol	adj		3218099						
ANR	3220246	Symbol	* params -> pancABIT0		3218099						
ANR	3220247	Symbol	count		3218099						
ANR	3220248	Symbol	* chset -> orig_chan_order		3218099						
ANR	3220249	Symbol	history		3218099						
ANR	3220250	Symbol	* * chset -> orig_chan_order_inv		3218099						
ANR	3220251	Symbol	get_bits_count		3218099						
ANR	3220252	Symbol	done		3218099						
ANR	3220253	Symbol	num_param_sets		3218099						
ANR	3220254	Symbol	chset -> scalable_lsbs		3218099						
ANR	3220255	Symbol	* * chset -> orig_chan_order		3218099						
ANR	3220256	Symbol	* * * s -> xll_navi . chset_size		3218099						
ANR	3220257	Symbol	* * chset -> fixed_order		3218099						
ANR	3220258	Symbol	s -> xll_chsets		3218099						
ANR	3220259	Symbol	s -> avctx		3218099						
ANR	3220260	Symbol	* chset -> adapt_order		3218099						
ANR	3220261	Symbol	params -> pancAuxABIT		3218099						
ANR	3220262	Symbol	chset -> ch_mask		3218099						
ANR	3220263	Symbol	frame		3218099						
ANR	3220264	Symbol	* s -> xll_navi		3218099						
ANR	3220265	Symbol	* frame		3218099						
ANR	3220266	Symbol	part0		3218099						
ANR	3220267	Symbol	end_pos		3218099						
ANR	3220268	Symbol	* mix_channel		3218099						
ANR	3220269	Symbol	* prev		3218099						
ANR	3220270	Symbol	in_channel		3218099						
ANR	3220271	Symbol	chset -> lpc_refl_coeffs_q_ind		3218099						
ANR	3220272	Symbol	new_channel		3218099						
ANR	3220273	Symbol	* chset -> fixed_order		3218099						
ANR	3220274	Symbol	sample_buf		3218099						
ANR	3220275	Symbol	* col		3218099						
ANR	3220276	Symbol	gb		3218099						
ANR	3220277	Symbol	chset -> ch_mask_enabled		3218099						
ANR	3220278	Symbol	row		3218099						
ANR	3220279	Symbol	chset -> lsb_fsize		3218099						
ANR	3220280	Symbol	bits4ABIT		3218099						
ANR	3220281	Symbol	* * * chset		3218099						
ANR	3220282	Symbol	* get_bits		3218099						
ANR	3220283	Symbol	* * s -> xll_navi . chset_size		3218099						
ANR	3220284	Symbol	mix_buf		3218099						
ANR	3220285	Symbol	s -> xll_navi		3218099						
ANR	3220286	Symbol	* chset -> orig_chan_order_inv		3218099						
ANR	3220287	Symbol	s -> avctx -> sample_rate		3218099						
ANR	3220288	Symbol	chset -> downmix_coeff_code_embedded		3218099						
ANR	3220289	Symbol	msb_shift		3218099						
ANR	3220290	Symbol	chset -> adapt_order		3218099						
ANR	3220291	Symbol	* i		3218099						
ANR	3220292	Symbol	* chset -> pw_ch_pairs_coeffs		3218099						
ANR	3220293	Symbol	* j		3218099						
ANR	3220294	Symbol	* chset_i		3218099						
ANR	3220295	Symbol	pi		3218099						
ANR	3220296	Symbol	AVERROR		3218099						
ANR	3220297	Symbol	* s		3218099						
