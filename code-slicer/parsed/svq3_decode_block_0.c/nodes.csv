command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8064669	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq3_decode_block_0.c								
ANR	8064670	Function	svq3_decode_block	1:0:0:1780							
ANR	8064671	FunctionDef	"svq3_decode_block (GetBitContext * gb , DCTELEM * block , int index , const int type)"		8064670	0					
ANR	8064672	CompoundStatement		5:0:136:1780	8064670	0					
ANR	8064673	Statement	static	7:4:143:148	8064670	0	True				
ANR	8064674	Statement	const	7:11:150:154	8064670	1	True				
ANR	8064675	Statement	uint8_t	7:17:156:162	8064670	2	True				
ANR	8064676	Statement	*	7:25:164:164	8064670	3	True				
ANR	8064677	Statement	const	7:26:165:169	8064670	4	True				
ANR	8064678	Statement	scan_patterns	7:32:171:183	8064670	5	True				
ANR	8064679	Statement	[	7:45:184:184	8064670	6	True				
ANR	8064680	Statement	4	7:46:185:185	8064670	7	True				
ANR	8064681	Statement	]	7:47:186:186	8064670	8	True				
ANR	8064682	Statement	=	7:49:188:188	8064670	9	True				
ANR	8064683	CompoundStatement		5:4:58:58	8064670	10					
ANR	8064684	Statement	luma_dc_zigzag_scan	9:6:197:215	8064670	0	True				
ANR	8064685	Statement	","	9:25:216:216	8064670	1	True				
ANR	8064686	Statement	zigzag_scan	9:27:218:228	8064670	2	True				
ANR	8064687	Statement	","	9:38:229:229	8064670	3	True				
ANR	8064688	Statement	svq3_scan	9:40:231:239	8064670	4	True				
ANR	8064689	Statement	","	9:49:240:240	8064670	5	True				
ANR	8064690	Statement	chroma_dc_scan	9:51:242:255	8064670	6	True				
ANR	8064691	ExpressionStatement		9:67:258:258	8064670	11	True				
ANR	8064692	IdentifierDeclStatement	"int run , level , sign , vlc , limit ;"	13:4:267:299	8064670	12	True				
ANR	8064693	IdentifierDecl	run		8064670	0					
ANR	8064694	IdentifierDeclType	int		8064670	0					
ANR	8064695	Identifier	run		8064670	1					
ANR	8064696	IdentifierDecl	level		8064670	1					
ANR	8064697	IdentifierDeclType	int		8064670	0					
ANR	8064698	Identifier	level		8064670	1					
ANR	8064699	IdentifierDecl	sign		8064670	2					
ANR	8064700	IdentifierDeclType	int		8064670	0					
ANR	8064701	Identifier	sign		8064670	1					
ANR	8064702	IdentifierDecl	vlc		8064670	3					
ANR	8064703	IdentifierDeclType	int		8064670	0					
ANR	8064704	Identifier	vlc		8064670	1					
ANR	8064705	IdentifierDecl	limit		8064670	4					
ANR	8064706	IdentifierDeclType	int		8064670	0					
ANR	8064707	Identifier	limit		8064670	1					
ANR	8064708	IdentifierDeclStatement	const int intra = ( 3 * type ) >> 2 ;	15:4:306:339	8064670	13	True				
ANR	8064709	IdentifierDecl	intra = ( 3 * type ) >> 2		8064670	0					
ANR	8064710	IdentifierDeclType	const int		8064670	0					
ANR	8064711	Identifier	intra		8064670	1					
ANR	8064712	AssignmentExpression	intra = ( 3 * type ) >> 2		8064670	2		=			
ANR	8064713	Identifier	intra		8064670	0					
ANR	8064714	ShiftExpression	( 3 * type ) >> 2		8064670	1		>>			
ANR	8064715	MultiplicativeExpression	3 * type		8064670	0		*			
ANR	8064716	PrimaryExpression	3		8064670	0					
ANR	8064717	Identifier	type		8064670	1					
ANR	8064718	PrimaryExpression	2		8064670	1					
ANR	8064719	Statement	const	17:4:346:350	8064670	14	True				
ANR	8064720	Statement	uint8_t	17:10:352:358	8064670	15	True				
ANR	8064721	Statement	*	17:18:360:360	8064670	16	True				
ANR	8064722	Statement	const	17:19:361:365	8064670	17	True				
ANR	8064723	ExpressionStatement	scan = scan_patterns [ type ]	17:25:367:393	8064670	18	True				
ANR	8064724	AssignmentExpression	scan = scan_patterns [ type ]		8064670	0		=			
ANR	8064725	Identifier	scan		8064670	0					
ANR	8064726	ArrayIndexing	scan_patterns [ type ]		8064670	1					
ANR	8064727	Identifier	scan_patterns		8064670	0					
ANR	8064728	Identifier	type		8064670	1					
ANR	8064729	ForStatement	"for ( limit = ( 16 >> intra ) ; index < 16 ; index = limit , limit += 8 )"		8064670	19					
ANR	8064730	ForInit	limit = ( 16 >> intra ) ;	21:9:407:428	8064670	0	True				
ANR	8064731	AssignmentExpression	limit = ( 16 >> intra )		8064670	0		=			
ANR	8064732	Identifier	limit		8064670	0					
ANR	8064733	ShiftExpression	16 >> intra		8064670	1		>>			
ANR	8064734	PrimaryExpression	16		8064670	0					
ANR	8064735	Identifier	intra		8064670	1					
ANR	8064736	Condition	index < 16	21:32:430:439	8064670	1	True				
ANR	8064737	RelationalExpression	index < 16		8064670	0		<			
ANR	8064738	Identifier	index		8064670	0					
ANR	8064739	PrimaryExpression	16		8064670	1					
ANR	8064740	Expression	"index = limit , limit += 8"	21:44:442:466	8064670	2	True				
ANR	8064741	AssignmentExpression	index = limit		8064670	0		=			
ANR	8064742	Identifier	index		8064670	0					
ANR	8064743	Identifier	limit		8064670	1					
ANR	8064744	AssignmentExpression	limit += 8		8064670	1		+=			
ANR	8064745	Identifier	limit		8064670	0					
ANR	8064746	PrimaryExpression	8		8064670	1					
ANR	8064747	CompoundStatement		17:71:332:332	8064670	3					
ANR	8064748	ForStatement	for ( ; ( vlc = svq3_get_ue_golomb ( gb ) ) != 0 ; index ++ )		8064670	0					
ANR	8064749	Condition	( vlc = svq3_get_ue_golomb ( gb ) ) != 0	23:15:487:521	8064670	0	True				
ANR	8064750	EqualityExpression	( vlc = svq3_get_ue_golomb ( gb ) ) != 0		8064670	0		!=			
ANR	8064751	AssignmentExpression	vlc = svq3_get_ue_golomb ( gb )		8064670	0		=			
ANR	8064752	Identifier	vlc		8064670	0					
ANR	8064753	CallExpression	svq3_get_ue_golomb ( gb )		8064670	1					
ANR	8064754	Callee	svq3_get_ue_golomb		8064670	0					
ANR	8064755	Identifier	svq3_get_ue_golomb		8064670	0					
ANR	8064756	ArgumentList	gb		8064670	1					
ANR	8064757	Argument	gb		8064670	0					
ANR	8064758	Identifier	gb		8064670	0					
ANR	8064759	PrimaryExpression	0		8064670	1					
ANR	8064760	PostIncDecOperationExpression	index ++	23:52:524:530	8064670	1	True				
ANR	8064761	Identifier	index		8064670	0					
ANR	8064762	IncDec	++		8064670	1					
ANR	8064763	CompoundStatement		19:61:396:396	8064670	2					
ANR	8064764	IfStatement	if ( vlc == INVALID_VLC )		8064670	0					
ANR	8064765	Condition	vlc == INVALID_VLC	27:14:552:569	8064670	0	True				
ANR	8064766	EqualityExpression	vlc == INVALID_VLC		8064670	0		==			
ANR	8064767	Identifier	vlc		8064670	0					
ANR	8064768	Identifier	INVALID_VLC		8064670	1					
ANR	8064769	ReturnStatement	return - 1 ;	29:14:587:596	8064670	1	True				
ANR	8064770	UnaryOperationExpression	- 1		8064670	0					
ANR	8064771	UnaryOperator	-		8064670	0					
ANR	8064772	PrimaryExpression	1		8064670	1					
ANR	8064773	ExpressionStatement	sign = ( vlc & 0x1 ) - 1	33:10:611:633	8064670	1	True				
ANR	8064774	AssignmentExpression	sign = ( vlc & 0x1 ) - 1		8064670	0		=			
ANR	8064775	Identifier	sign		8064670	0					
ANR	8064776	AdditiveExpression	( vlc & 0x1 ) - 1		8064670	1		-			
ANR	8064777	BitAndExpression	vlc & 0x1		8064670	0		&			
ANR	8064778	Identifier	vlc		8064670	0					
ANR	8064779	PrimaryExpression	0x1		8064670	1					
ANR	8064780	PrimaryExpression	1		8064670	1					
ANR	8064781	ExpressionStatement	vlc = ( vlc + 1 ) >> 1	35:10:646:667	8064670	2	True				
ANR	8064782	AssignmentExpression	vlc = ( vlc + 1 ) >> 1		8064670	0		=			
ANR	8064783	Identifier	vlc		8064670	0					
ANR	8064784	ShiftExpression	( vlc + 1 ) >> 1		8064670	1		>>			
ANR	8064785	AdditiveExpression	vlc + 1		8064670	0		+			
ANR	8064786	Identifier	vlc		8064670	0					
ANR	8064787	PrimaryExpression	1		8064670	1					
ANR	8064788	PrimaryExpression	1		8064670	1					
ANR	8064789	IfStatement	if ( type == 3 )		8064670	3					
ANR	8064790	Condition	type == 3	39:14:686:694	8064670	0	True				
ANR	8064791	EqualityExpression	type == 3		8064670	0		==			
ANR	8064792	Identifier	type		8064670	0					
ANR	8064793	PrimaryExpression	3		8064670	1					
ANR	8064794	CompoundStatement		35:25:560:560	8064670	1					
ANR	8064795	IfStatement	if ( vlc < 3 )		8064670	0					
ANR	8064796	Condition	vlc < 3	41:18:718:724	8064670	0	True				
ANR	8064797	RelationalExpression	vlc < 3		8064670	0		<			
ANR	8064798	Identifier	vlc		8064670	0					
ANR	8064799	PrimaryExpression	3		8064670	1					
ANR	8064800	CompoundStatement		37:27:590:590	8064670	1					
ANR	8064801	ExpressionStatement	run = 0	43:18:748:757	8064670	0	True				
ANR	8064802	AssignmentExpression	run = 0		8064670	0		=			
ANR	8064803	Identifier	run		8064670	0					
ANR	8064804	PrimaryExpression	0		8064670	1					
ANR	8064805	ExpressionStatement	level = vlc	45:18:778:789	8064670	1	True				
ANR	8064806	AssignmentExpression	level = vlc		8064670	0		=			
ANR	8064807	Identifier	level		8064670	0					
ANR	8064808	Identifier	vlc		8064670	1					
ANR	8064809	ElseStatement	else		8064670	0					
ANR	8064810	IfStatement	if ( vlc < 4 )		8064670	0					
ANR	8064811	Condition	vlc < 4	47:25:817:823	8064670	0	True				
ANR	8064812	RelationalExpression	vlc < 4		8064670	0		<			
ANR	8064813	Identifier	vlc		8064670	0					
ANR	8064814	PrimaryExpression	4		8064670	1					
ANR	8064815	CompoundStatement		43:34:689:689	8064670	1					
ANR	8064816	ExpressionStatement	run = 1	49:18:847:856	8064670	0	True				
ANR	8064817	AssignmentExpression	run = 1		8064670	0		=			
ANR	8064818	Identifier	run		8064670	0					
ANR	8064819	PrimaryExpression	1		8064670	1					
ANR	8064820	ExpressionStatement	level = 1	51:18:877:886	8064670	1	True				
ANR	8064821	AssignmentExpression	level = 1		8064670	0		=			
ANR	8064822	Identifier	level		8064670	0					
ANR	8064823	PrimaryExpression	1		8064670	1					
ANR	8064824	ElseStatement	else		8064670	0					
ANR	8064825	CompoundStatement		49:21:773:773	8064670	0					
ANR	8064826	ExpressionStatement	run = ( vlc & 0x3 )	55:18:931:950	8064670	0	True				
ANR	8064827	AssignmentExpression	run = ( vlc & 0x3 )		8064670	0		=			
ANR	8064828	Identifier	run		8064670	0					
ANR	8064829	BitAndExpression	vlc & 0x3		8064670	1		&			
ANR	8064830	Identifier	vlc		8064670	0					
ANR	8064831	PrimaryExpression	0x3		8064670	1					
ANR	8064832	ExpressionStatement	level = ( ( vlc + 9 ) >> 2 ) - run	57:18:971:1001	8064670	1	True				
ANR	8064833	AssignmentExpression	level = ( ( vlc + 9 ) >> 2 ) - run		8064670	0		=			
ANR	8064834	Identifier	level		8064670	0					
ANR	8064835	AdditiveExpression	( ( vlc + 9 ) >> 2 ) - run		8064670	1		-			
ANR	8064836	ShiftExpression	( vlc + 9 ) >> 2		8064670	0		>>			
ANR	8064837	AdditiveExpression	vlc + 9		8064670	0		+			
ANR	8064838	Identifier	vlc		8064670	0					
ANR	8064839	PrimaryExpression	9		8064670	1					
ANR	8064840	PrimaryExpression	2		8064670	1					
ANR	8064841	Identifier	run		8064670	1					
ANR	8064842	ElseStatement	else		8064670	0					
ANR	8064843	CompoundStatement		57:17:901:901	8064670	0					
ANR	8064844	IfStatement	if ( vlc < 16 )		8064670	0					
ANR	8064845	Condition	vlc < 16	63:18:1059:1066	8064670	0	True				
ANR	8064846	RelationalExpression	vlc < 16		8064670	0		<			
ANR	8064847	Identifier	vlc		8064670	0					
ANR	8064848	PrimaryExpression	16		8064670	1					
ANR	8064849	CompoundStatement		59:28:932:932	8064670	1					
ANR	8064850	ExpressionStatement	run = svq3_dct_tables [ intra ] [ vlc ] . run	65:18:1090:1129	8064670	0	True				
ANR	8064851	AssignmentExpression	run = svq3_dct_tables [ intra ] [ vlc ] . run		8064670	0		=			
ANR	8064852	Identifier	run		8064670	0					
ANR	8064853	MemberAccess	svq3_dct_tables [ intra ] [ vlc ] . run		8064670	1					
ANR	8064854	ArrayIndexing	svq3_dct_tables [ intra ] [ vlc ]		8064670	0					
ANR	8064855	ArrayIndexing	svq3_dct_tables [ intra ]		8064670	0					
ANR	8064856	Identifier	svq3_dct_tables		8064670	0					
ANR	8064857	Identifier	intra		8064670	1					
ANR	8064858	Identifier	vlc		8064670	1					
ANR	8064859	Identifier	run		8064670	1					
ANR	8064860	ExpressionStatement	level = svq3_dct_tables [ intra ] [ vlc ] . level	67:18:1150:1191	8064670	1	True				
ANR	8064861	AssignmentExpression	level = svq3_dct_tables [ intra ] [ vlc ] . level		8064670	0		=			
ANR	8064862	Identifier	level		8064670	0					
ANR	8064863	MemberAccess	svq3_dct_tables [ intra ] [ vlc ] . level		8064670	1					
ANR	8064864	ArrayIndexing	svq3_dct_tables [ intra ] [ vlc ]		8064670	0					
ANR	8064865	ArrayIndexing	svq3_dct_tables [ intra ]		8064670	0					
ANR	8064866	Identifier	svq3_dct_tables		8064670	0					
ANR	8064867	Identifier	intra		8064670	1					
ANR	8064868	Identifier	vlc		8064670	1					
ANR	8064869	Identifier	level		8064670	1					
ANR	8064870	ElseStatement	else		8064670	0					
ANR	8064871	IfStatement	if ( intra )		8064670	0					
ANR	8064872	Condition	intra	69:25:1219:1223	8064670	0	True				
ANR	8064873	Identifier	intra		8064670	0					
ANR	8064874	CompoundStatement		65:32:1089:1089	8064670	1					
ANR	8064875	ExpressionStatement	run = ( vlc & 0x7 )	71:18:1247:1266	8064670	0	True				
ANR	8064876	AssignmentExpression	run = ( vlc & 0x7 )		8064670	0		=			
ANR	8064877	Identifier	run		8064670	0					
ANR	8064878	BitAndExpression	vlc & 0x7		8064670	1		&			
ANR	8064879	Identifier	vlc		8064670	0					
ANR	8064880	PrimaryExpression	0x7		8064670	1					
ANR	8064881	ExpressionStatement	level = ( vlc >> 3 ) + ( ( run == 0 ) ? 8 : ( ( run < 2 ) ? 2 : ( ( run < 5 ) ? 0 : - 1 ) ) )	73:18:1287:1365	8064670	1	True				
ANR	8064882	AssignmentExpression	level = ( vlc >> 3 ) + ( ( run == 0 ) ? 8 : ( ( run < 2 ) ? 2 : ( ( run < 5 ) ? 0 : - 1 ) ) )		8064670	0		=			
ANR	8064883	Identifier	level		8064670	0					
ANR	8064884	AdditiveExpression	( vlc >> 3 ) + ( ( run == 0 ) ? 8 : ( ( run < 2 ) ? 2 : ( ( run < 5 ) ? 0 : - 1 ) ) )		8064670	1		+			
ANR	8064885	ShiftExpression	vlc >> 3		8064670	0		>>			
ANR	8064886	Identifier	vlc		8064670	0					
ANR	8064887	PrimaryExpression	3		8064670	1					
ANR	8064888	ConditionalExpression	( run == 0 ) ? 8 : ( ( run < 2 ) ? 2 : ( ( run < 5 ) ? 0 : - 1 ) )		8064670	1					
ANR	8064889	Condition	run == 0		8064670	0					
ANR	8064890	EqualityExpression	run == 0		8064670	0		==			
ANR	8064891	Identifier	run		8064670	0					
ANR	8064892	PrimaryExpression	0		8064670	1					
ANR	8064893	PrimaryExpression	8		8064670	1					
ANR	8064894	ConditionalExpression	( run < 2 ) ? 2 : ( ( run < 5 ) ? 0 : - 1 )		8064670	2					
ANR	8064895	Condition	run < 2		8064670	0					
ANR	8064896	RelationalExpression	run < 2		8064670	0		<			
ANR	8064897	Identifier	run		8064670	0					
ANR	8064898	PrimaryExpression	2		8064670	1					
ANR	8064899	PrimaryExpression	2		8064670	1					
ANR	8064900	ConditionalExpression	( run < 5 ) ? 0 : - 1		8064670	2					
ANR	8064901	Condition	run < 5		8064670	0					
ANR	8064902	RelationalExpression	run < 5		8064670	0		<			
ANR	8064903	Identifier	run		8064670	0					
ANR	8064904	PrimaryExpression	5		8064670	1					
ANR	8064905	PrimaryExpression	0		8064670	1					
ANR	8064906	UnaryOperationExpression	- 1		8064670	2					
ANR	8064907	UnaryOperator	-		8064670	0					
ANR	8064908	PrimaryExpression	1		8064670	1					
ANR	8064909	ElseStatement	else		8064670	0					
ANR	8064910	CompoundStatement		71:21:1252:1252	8064670	0					
ANR	8064911	ExpressionStatement	run = ( vlc & 0xF )	77:18:1410:1429	8064670	0	True				
ANR	8064912	AssignmentExpression	run = ( vlc & 0xF )		8064670	0		=			
ANR	8064913	Identifier	run		8064670	0					
ANR	8064914	BitAndExpression	vlc & 0xF		8064670	1		&			
ANR	8064915	Identifier	vlc		8064670	0					
ANR	8064916	PrimaryExpression	0xF		8064670	1					
ANR	8064917	ExpressionStatement	level = ( vlc >> 4 ) + ( ( run == 0 ) ? 4 : ( ( run < 3 ) ? 2 : ( ( run < 10 ) ? 1 : 0 ) ) )	79:18:1450:1528	8064670	1	True				
ANR	8064918	AssignmentExpression	level = ( vlc >> 4 ) + ( ( run == 0 ) ? 4 : ( ( run < 3 ) ? 2 : ( ( run < 10 ) ? 1 : 0 ) ) )		8064670	0		=			
ANR	8064919	Identifier	level		8064670	0					
ANR	8064920	AdditiveExpression	( vlc >> 4 ) + ( ( run == 0 ) ? 4 : ( ( run < 3 ) ? 2 : ( ( run < 10 ) ? 1 : 0 ) ) )		8064670	1		+			
ANR	8064921	ShiftExpression	vlc >> 4		8064670	0		>>			
ANR	8064922	Identifier	vlc		8064670	0					
ANR	8064923	PrimaryExpression	4		8064670	1					
ANR	8064924	ConditionalExpression	( run == 0 ) ? 4 : ( ( run < 3 ) ? 2 : ( ( run < 10 ) ? 1 : 0 ) )		8064670	1					
ANR	8064925	Condition	run == 0		8064670	0					
ANR	8064926	EqualityExpression	run == 0		8064670	0		==			
ANR	8064927	Identifier	run		8064670	0					
ANR	8064928	PrimaryExpression	0		8064670	1					
ANR	8064929	PrimaryExpression	4		8064670	1					
ANR	8064930	ConditionalExpression	( run < 3 ) ? 2 : ( ( run < 10 ) ? 1 : 0 )		8064670	2					
ANR	8064931	Condition	run < 3		8064670	0					
ANR	8064932	RelationalExpression	run < 3		8064670	0		<			
ANR	8064933	Identifier	run		8064670	0					
ANR	8064934	PrimaryExpression	3		8064670	1					
ANR	8064935	PrimaryExpression	2		8064670	1					
ANR	8064936	ConditionalExpression	( run < 10 ) ? 1 : 0		8064670	2					
ANR	8064937	Condition	run < 10		8064670	0					
ANR	8064938	RelationalExpression	run < 10		8064670	0		<			
ANR	8064939	Identifier	run		8064670	0					
ANR	8064940	PrimaryExpression	10		8064670	1					
ANR	8064941	PrimaryExpression	1		8064670	1					
ANR	8064942	PrimaryExpression	0		8064670	2					
ANR	8064943	IfStatement	if ( ( index += run ) >= limit )		8064670	4					
ANR	8064944	Condition	( index += run ) >= limit	87:14:1577:1599	8064670	0	True				
ANR	8064945	RelationalExpression	( index += run ) >= limit		8064670	0		>=			
ANR	8064946	AssignmentExpression	index += run		8064670	0		+=			
ANR	8064947	Identifier	index		8064670	0					
ANR	8064948	Identifier	run		8064670	1					
ANR	8064949	Identifier	limit		8064670	1					
ANR	8064950	ReturnStatement	return - 1 ;	89:14:1617:1626	8064670	1	True				
ANR	8064951	UnaryOperationExpression	- 1		8064670	0					
ANR	8064952	UnaryOperator	-		8064670	0					
ANR	8064953	PrimaryExpression	1		8064670	1					
ANR	8064954	ExpressionStatement	block [ scan [ index ] ] = ( level ^ sign ) - sign	93:10:1641:1683	8064670	5	True				
ANR	8064955	AssignmentExpression	block [ scan [ index ] ] = ( level ^ sign ) - sign		8064670	0		=			
ANR	8064956	ArrayIndexing	block [ scan [ index ] ]		8064670	0					
ANR	8064957	Identifier	block		8064670	0					
ANR	8064958	ArrayIndexing	scan [ index ]		8064670	1					
ANR	8064959	Identifier	scan		8064670	0					
ANR	8064960	Identifier	index		8064670	1					
ANR	8064961	AdditiveExpression	( level ^ sign ) - sign		8064670	1		-			
ANR	8064962	ExclusiveOrExpression	level ^ sign		8064670	0		^			
ANR	8064963	Identifier	level		8064670	0					
ANR	8064964	Identifier	sign		8064670	1					
ANR	8064965	Identifier	sign		8064670	1					
ANR	8064966	IfStatement	if ( type != 2 )		8064670	1					
ANR	8064967	Condition	type != 2	99:12:1711:1719	8064670	0	True				
ANR	8064968	EqualityExpression	type != 2		8064670	0		!=			
ANR	8064969	Identifier	type		8064670	0					
ANR	8064970	PrimaryExpression	2		8064670	1					
ANR	8064971	CompoundStatement		95:23:1585:1585	8064670	1					
ANR	8064972	BreakStatement	break ;	101:12:1737:1742	8064670	0	True				
ANR	8064973	ReturnStatement	return 0 ;	109:4:1769:1777	8064670	20	True				
ANR	8064974	PrimaryExpression	0		8064670	0					
ANR	8064975	ReturnType	static inline int		8064670	1					
ANR	8064976	Identifier	svq3_decode_block		8064670	2					
ANR	8064977	ParameterList	"GetBitContext * gb , DCTELEM * block , int index , const int type"		8064670	3					
ANR	8064978	Parameter	GetBitContext * gb	1:36:36:52	8064670	0	True				
ANR	8064979	ParameterType	GetBitContext *		8064670	0					
ANR	8064980	Identifier	gb		8064670	1					
ANR	8064981	Parameter	DCTELEM * block	1:55:55:68	8064670	1	True				
ANR	8064982	ParameterType	DCTELEM *		8064670	0					
ANR	8064983	Identifier	block		8064670	1					
ANR	8064984	Parameter	int index	3:36:108:116	8064670	2	True				
ANR	8064985	ParameterType	int		8064670	0					
ANR	8064986	Identifier	index		8064670	1					
ANR	8064987	Parameter	const int type	3:47:119:132	8064670	3	True				
ANR	8064988	ParameterType	const int		8064670	0					
ANR	8064989	Identifier	type		8064670	1					
ANR	8064990	CFGEntryNode	ENTRY		8064670		True				
ANR	8064991	CFGExitNode	EXIT		8064670		True				
ANR	8064992	Symbol	* svq3_dct_tables		8064670						
ANR	8064993	Symbol	* index		8064670						
ANR	8064994	Symbol	sign		8064670						
ANR	8064995	Symbol	* scan_patterns		8064670						
ANR	8064996	Symbol	scan		8064670						
ANR	8064997	Symbol	run		8064670						
ANR	8064998	Symbol	scan_patterns		8064670						
ANR	8064999	Symbol	type		8064670						
ANR	8065000	Symbol	* * intra		8064670						
ANR	8065001	Symbol	* type		8064670						
ANR	8065002	Symbol	* vlc		8064670						
ANR	8065003	Symbol	svq3_dct_tables [ intra ] [ vlc ] . level		8064670						
ANR	8065004	Symbol	* scan		8064670						
ANR	8065005	Symbol	limit		8064670						
ANR	8065006	Symbol	* * svq3_dct_tables		8064670						
ANR	8065007	Symbol	block		8064670						
ANR	8065008	Symbol	gb		8064670						
ANR	8065009	Symbol	* * index		8064670						
ANR	8065010	Symbol	level		8064670						
ANR	8065011	Symbol	intra		8064670						
ANR	8065012	Symbol	svq3_get_ue_golomb		8064670						
ANR	8065013	Symbol	index		8064670						
ANR	8065014	Symbol	vlc		8064670						
ANR	8065015	Symbol	* block		8064670						
ANR	8065016	Symbol	INVALID_VLC		8064670						
ANR	8065017	Symbol	svq3_dct_tables		8064670						
ANR	8065018	Symbol	* intra		8064670						
ANR	8065019	Symbol	* * scan		8064670						
ANR	8065020	Symbol	svq3_dct_tables [ intra ] [ vlc ] . run		8064670						
