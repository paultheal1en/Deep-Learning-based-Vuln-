command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7269050	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_block_types_1.c								
ANR	7269051	Function	read_block_types	1:0:0:853							
ANR	7269052	FunctionDef	"read_block_types (AVCodecContext * avctx , GetBitContext * gb , Bundle * b)"		7269051	0					
ANR	7269053	CompoundStatement		3:0:82:853	7269051	0					
ANR	7269054	IdentifierDeclStatement	"int t , v ;"	5:4:89:97	7269051	0	True				
ANR	7269055	IdentifierDecl	t		7269051	0					
ANR	7269056	IdentifierDeclType	int		7269051	0					
ANR	7269057	Identifier	t		7269051	1					
ANR	7269058	IdentifierDecl	v		7269051	1					
ANR	7269059	IdentifierDeclType	int		7269051	0					
ANR	7269060	Identifier	v		7269051	1					
ANR	7269061	IdentifierDeclStatement	int last = 0 ;	7:4:104:116	7269051	1	True				
ANR	7269062	IdentifierDecl	last = 0		7269051	0					
ANR	7269063	IdentifierDeclType	int		7269051	0					
ANR	7269064	Identifier	last		7269051	1					
ANR	7269065	AssignmentExpression	last = 0		7269051	2		=			
ANR	7269066	Identifier	last		7269051	0					
ANR	7269067	PrimaryExpression	0		7269051	1					
ANR	7269068	IdentifierDeclStatement	const uint8_t * dec_end ;	9:4:123:145	7269051	2	True				
ANR	7269069	IdentifierDecl	* dec_end		7269051	0					
ANR	7269070	IdentifierDeclType	const uint8_t *		7269051	0					
ANR	7269071	Identifier	dec_end		7269051	1					
ANR	7269072	ExpressionStatement	"CHECK_READ_VAL ( gb , b , t )"	13:4:154:178	7269051	3	True				
ANR	7269073	CallExpression	"CHECK_READ_VAL ( gb , b , t )"		7269051	0					
ANR	7269074	Callee	CHECK_READ_VAL		7269051	0					
ANR	7269075	Identifier	CHECK_READ_VAL		7269051	0					
ANR	7269076	ArgumentList	gb		7269051	1					
ANR	7269077	Argument	gb		7269051	0					
ANR	7269078	Identifier	gb		7269051	0					
ANR	7269079	Argument	b		7269051	1					
ANR	7269080	Identifier	b		7269051	0					
ANR	7269081	Argument	t		7269051	2					
ANR	7269082	Identifier	t		7269051	0					
ANR	7269083	ExpressionStatement	dec_end = b -> cur_dec + t	15:4:185:209	7269051	4	True				
ANR	7269084	AssignmentExpression	dec_end = b -> cur_dec + t		7269051	0		=			
ANR	7269085	Identifier	dec_end		7269051	0					
ANR	7269086	AdditiveExpression	b -> cur_dec + t		7269051	1		+			
ANR	7269087	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269088	Identifier	b		7269051	0					
ANR	7269089	Identifier	cur_dec		7269051	1					
ANR	7269090	Identifier	t		7269051	1					
ANR	7269091	IfStatement	if ( dec_end > b -> data_end )		7269051	5					
ANR	7269092	Condition	dec_end > b -> data_end	17:8:220:240	7269051	0	True				
ANR	7269093	RelationalExpression	dec_end > b -> data_end		7269051	0		>			
ANR	7269094	Identifier	dec_end		7269051	0					
ANR	7269095	PtrMemberAccess	b -> data_end		7269051	1					
ANR	7269096	Identifier	b		7269051	0					
ANR	7269097	Identifier	data_end		7269051	1					
ANR	7269098	CompoundStatement		15:31:160:160	7269051	1					
ANR	7269099	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Too many block type values\\n"" )"	19:8:254:313	7269051	0	True				
ANR	7269100	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Too many block type values\\n"" )"		7269051	0					
ANR	7269101	Callee	av_log		7269051	0					
ANR	7269102	Identifier	av_log		7269051	0					
ANR	7269103	ArgumentList	avctx		7269051	1					
ANR	7269104	Argument	avctx		7269051	0					
ANR	7269105	Identifier	avctx		7269051	0					
ANR	7269106	Argument	AV_LOG_ERROR		7269051	1					
ANR	7269107	Identifier	AV_LOG_ERROR		7269051	0					
ANR	7269108	Argument	"""Too many block type values\\n"""		7269051	2					
ANR	7269109	PrimaryExpression	"""Too many block type values\\n"""		7269051	0					
ANR	7269110	ReturnStatement	return - 1 ;	21:8:324:333	7269051	1	True				
ANR	7269111	UnaryOperationExpression	- 1		7269051	0					
ANR	7269112	UnaryOperator	-		7269051	0					
ANR	7269113	PrimaryExpression	1		7269051	1					
ANR	7269114	IfStatement	if ( get_bits1 ( gb ) )		7269051	6					
ANR	7269115	Condition	get_bits1 ( gb )	25:8:351:363	7269051	0	True				
ANR	7269116	CallExpression	get_bits1 ( gb )		7269051	0					
ANR	7269117	Callee	get_bits1		7269051	0					
ANR	7269118	Identifier	get_bits1		7269051	0					
ANR	7269119	ArgumentList	gb		7269051	1					
ANR	7269120	Argument	gb		7269051	0					
ANR	7269121	Identifier	gb		7269051	0					
ANR	7269122	CompoundStatement		23:23:283:283	7269051	1					
ANR	7269123	ExpressionStatement	"v = get_bits ( gb , 4 )"	27:8:377:396	7269051	0	True				
ANR	7269124	AssignmentExpression	"v = get_bits ( gb , 4 )"		7269051	0		=			
ANR	7269125	Identifier	v		7269051	0					
ANR	7269126	CallExpression	"get_bits ( gb , 4 )"		7269051	1					
ANR	7269127	Callee	get_bits		7269051	0					
ANR	7269128	Identifier	get_bits		7269051	0					
ANR	7269129	ArgumentList	gb		7269051	1					
ANR	7269130	Argument	gb		7269051	0					
ANR	7269131	Identifier	gb		7269051	0					
ANR	7269132	Argument	4		7269051	1					
ANR	7269133	PrimaryExpression	4		7269051	0					
ANR	7269134	ExpressionStatement	"memset ( b -> cur_dec , v , t )"	29:8:407:431	7269051	1	True				
ANR	7269135	CallExpression	"memset ( b -> cur_dec , v , t )"		7269051	0					
ANR	7269136	Callee	memset		7269051	0					
ANR	7269137	Identifier	memset		7269051	0					
ANR	7269138	ArgumentList	b -> cur_dec		7269051	1					
ANR	7269139	Argument	b -> cur_dec		7269051	0					
ANR	7269140	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269141	Identifier	b		7269051	0					
ANR	7269142	Identifier	cur_dec		7269051	1					
ANR	7269143	Argument	v		7269051	1					
ANR	7269144	Identifier	v		7269051	0					
ANR	7269145	Argument	t		7269051	2					
ANR	7269146	Identifier	t		7269051	0					
ANR	7269147	ExpressionStatement	b -> cur_dec += t	31:8:442:457	7269051	2	True				
ANR	7269148	AssignmentExpression	b -> cur_dec += t		7269051	0		+=			
ANR	7269149	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269150	Identifier	b		7269051	0					
ANR	7269151	Identifier	cur_dec		7269051	1					
ANR	7269152	Identifier	t		7269051	1					
ANR	7269153	ElseStatement	else		7269051	0					
ANR	7269154	CompoundStatement		31:11:388:388	7269051	0					
ANR	7269155	DoStatement	do		7269051	0					
ANR	7269156	CompoundStatement		33:11:402:402	7269051	0					
ANR	7269157	ExpressionStatement	"v = GET_HUFF ( gb , b -> tree )"	37:12:500:525	7269051	0	True				
ANR	7269158	AssignmentExpression	"v = GET_HUFF ( gb , b -> tree )"		7269051	0		=			
ANR	7269159	Identifier	v		7269051	0					
ANR	7269160	CallExpression	"GET_HUFF ( gb , b -> tree )"		7269051	1					
ANR	7269161	Callee	GET_HUFF		7269051	0					
ANR	7269162	Identifier	GET_HUFF		7269051	0					
ANR	7269163	ArgumentList	gb		7269051	1					
ANR	7269164	Argument	gb		7269051	0					
ANR	7269165	Identifier	gb		7269051	0					
ANR	7269166	Argument	b -> tree		7269051	1					
ANR	7269167	PtrMemberAccess	b -> tree		7269051	0					
ANR	7269168	Identifier	b		7269051	0					
ANR	7269169	Identifier	tree		7269051	1					
ANR	7269170	IfStatement	if ( v < 12 )		7269051	1					
ANR	7269171	Condition	v < 12	39:16:544:549	7269051	0	True				
ANR	7269172	RelationalExpression	v < 12		7269051	0		<			
ANR	7269173	Identifier	v		7269051	0					
ANR	7269174	PrimaryExpression	12		7269051	1					
ANR	7269175	CompoundStatement		37:24:469:469	7269051	1					
ANR	7269176	ExpressionStatement	last = v	41:16:571:579	7269051	0	True				
ANR	7269177	AssignmentExpression	last = v		7269051	0		=			
ANR	7269178	Identifier	last		7269051	0					
ANR	7269179	Identifier	v		7269051	1					
ANR	7269180	ExpressionStatement	* b -> cur_dec ++ = v	43:16:598:615	7269051	1	True				
ANR	7269181	AssignmentExpression	* b -> cur_dec ++ = v		7269051	0		=			
ANR	7269182	UnaryOperationExpression	* b -> cur_dec ++		7269051	0					
ANR	7269183	UnaryOperator	*		7269051	0					
ANR	7269184	PostIncDecOperationExpression	b -> cur_dec ++		7269051	1					
ANR	7269185	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269186	Identifier	b		7269051	0					
ANR	7269187	Identifier	cur_dec		7269051	1					
ANR	7269188	IncDec	++		7269051	1					
ANR	7269189	Identifier	v		7269051	1					
ANR	7269190	ElseStatement	else		7269051	0					
ANR	7269191	CompoundStatement		45:16:573:603	7269051	0					
ANR	7269192	IdentifierDeclStatement	int run = bink_rlelens [ v - 12 ] ;	47:16:656:686	7269051	0	True				
ANR	7269193	IdentifierDecl	run = bink_rlelens [ v - 12 ]		7269051	0					
ANR	7269194	IdentifierDeclType	int		7269051	0					
ANR	7269195	Identifier	run		7269051	1					
ANR	7269196	AssignmentExpression	run = bink_rlelens [ v - 12 ]		7269051	2		=			
ANR	7269197	Identifier	run		7269051	0					
ANR	7269198	ArrayIndexing	bink_rlelens [ v - 12 ]		7269051	1					
ANR	7269199	Identifier	bink_rlelens		7269051	0					
ANR	7269200	AdditiveExpression	v - 12		7269051	1		-			
ANR	7269201	Identifier	v		7269051	0					
ANR	7269202	PrimaryExpression	12		7269051	1					
ANR	7269203	ExpressionStatement	"memset ( b -> cur_dec , last , run )"	51:16:707:736	7269051	1	True				
ANR	7269204	CallExpression	"memset ( b -> cur_dec , last , run )"		7269051	0					
ANR	7269205	Callee	memset		7269051	0					
ANR	7269206	Identifier	memset		7269051	0					
ANR	7269207	ArgumentList	b -> cur_dec		7269051	1					
ANR	7269208	Argument	b -> cur_dec		7269051	0					
ANR	7269209	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269210	Identifier	b		7269051	0					
ANR	7269211	Identifier	cur_dec		7269051	1					
ANR	7269212	Argument	last		7269051	1					
ANR	7269213	Identifier	last		7269051	0					
ANR	7269214	Argument	run		7269051	2					
ANR	7269215	Identifier	run		7269051	0					
ANR	7269216	ExpressionStatement	b -> cur_dec += run	53:16:755:772	7269051	2	True				
ANR	7269217	AssignmentExpression	b -> cur_dec += run		7269051	0		+=			
ANR	7269218	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269219	Identifier	b		7269051	0					
ANR	7269220	Identifier	cur_dec		7269051	1					
ANR	7269221	Identifier	run		7269051	1					
ANR	7269222	Condition	b -> cur_dec < dec_end	57:17:807:826	7269051	1	True				
ANR	7269223	RelationalExpression	b -> cur_dec < dec_end		7269051	0		<			
ANR	7269224	PtrMemberAccess	b -> cur_dec		7269051	0					
ANR	7269225	Identifier	b		7269051	0					
ANR	7269226	Identifier	cur_dec		7269051	1					
ANR	7269227	Identifier	dec_end		7269051	1					
ANR	7269228	ReturnStatement	return 0 ;	61:4:842:850	7269051	7	True				
ANR	7269229	PrimaryExpression	0		7269051	0					
ANR	7269230	ReturnType	static int		7269051	1					
ANR	7269231	Identifier	read_block_types		7269051	2					
ANR	7269232	ParameterList	"AVCodecContext * avctx , GetBitContext * gb , Bundle * b"		7269051	3					
ANR	7269233	Parameter	AVCodecContext * avctx	1:28:28:48	7269051	0	True				
ANR	7269234	ParameterType	AVCodecContext *		7269051	0					
ANR	7269235	Identifier	avctx		7269051	1					
ANR	7269236	Parameter	GetBitContext * gb	1:51:51:67	7269051	1	True				
ANR	7269237	ParameterType	GetBitContext *		7269051	0					
ANR	7269238	Identifier	gb		7269051	1					
ANR	7269239	Parameter	Bundle * b	1:70:70:78	7269051	2	True				
ANR	7269240	ParameterType	Bundle *		7269051	0					
ANR	7269241	Identifier	b		7269051	1					
ANR	7269242	CFGEntryNode	ENTRY		7269051		True				
ANR	7269243	CFGExitNode	EXIT		7269051		True				
ANR	7269244	Symbol	* v		7269051						
ANR	7269245	Symbol	b		7269051						
ANR	7269246	Symbol	GET_HUFF		7269051						
ANR	7269247	Symbol	* b -> cur_dec ++		7269051						
ANR	7269248	Symbol	last		7269051						
ANR	7269249	Symbol	AV_LOG_ERROR		7269051						
ANR	7269250	Symbol	get_bits		7269051						
ANR	7269251	Symbol	get_bits1		7269051						
ANR	7269252	Symbol	run		7269051						
ANR	7269253	Symbol	* b		7269051						
ANR	7269254	Symbol	b -> cur_dec		7269051						
ANR	7269255	Symbol	t		7269051						
ANR	7269256	Symbol	bink_rlelens		7269051						
ANR	7269257	Symbol	v		7269051						
ANR	7269258	Symbol	dec_end		7269051						
ANR	7269259	Symbol	b -> data_end		7269051						
ANR	7269260	Symbol	b -> tree		7269051						
ANR	7269261	Symbol	* bink_rlelens		7269051						
ANR	7269262	Symbol	gb		7269051						
ANR	7269263	Symbol	avctx		7269051						
