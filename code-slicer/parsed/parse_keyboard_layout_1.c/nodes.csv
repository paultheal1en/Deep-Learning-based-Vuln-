command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6330856	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_keyboard_layout_1.c								
ANR	6330857	Function	parse_keyboard_layout	1:0:0:3012							
ANR	6330858	FunctionDef	"parse_keyboard_layout (const name2keysym_t * table , const char * language , kbd_layout_t * k)"		6330857	0					
ANR	6330859	CompoundStatement		7:0:199:3012	6330857	0					
ANR	6330860	IdentifierDeclStatement	FILE * f ;	9:4:206:213	6330857	0	True				
ANR	6330861	IdentifierDecl	* f		6330857	0					
ANR	6330862	IdentifierDeclType	FILE *		6330857	0					
ANR	6330863	Identifier	f		6330857	1					
ANR	6330864	IdentifierDeclStatement	char * filename ;	11:4:220:235	6330857	1	True				
ANR	6330865	IdentifierDecl	* filename		6330857	0					
ANR	6330866	IdentifierDeclType	char *		6330857	0					
ANR	6330867	Identifier	filename		6330857	1					
ANR	6330868	IdentifierDeclStatement	char line [ 1024 ] ;	13:4:242:257	6330857	2	True				
ANR	6330869	IdentifierDecl	line [ 1024 ]		6330857	0					
ANR	6330870	IdentifierDeclType	char [ 1024 ]		6330857	0					
ANR	6330871	Identifier	line		6330857	1					
ANR	6330872	PrimaryExpression	1024		6330857	2					
ANR	6330873	IdentifierDeclStatement	int len ;	15:4:264:271	6330857	3	True				
ANR	6330874	IdentifierDecl	len		6330857	0					
ANR	6330875	IdentifierDeclType	int		6330857	0					
ANR	6330876	Identifier	len		6330857	1					
ANR	6330877	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"	19:4:280:338	6330857	4	True				
ANR	6330878	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"		6330857	0		=			
ANR	6330879	Identifier	filename		6330857	0					
ANR	6330880	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"		6330857	1					
ANR	6330881	Callee	qemu_find_file		6330857	0					
ANR	6330882	Identifier	qemu_find_file		6330857	0					
ANR	6330883	ArgumentList	QEMU_FILE_TYPE_KEYMAP		6330857	1					
ANR	6330884	Argument	QEMU_FILE_TYPE_KEYMAP		6330857	0					
ANR	6330885	Identifier	QEMU_FILE_TYPE_KEYMAP		6330857	0					
ANR	6330886	Argument	language		6330857	1					
ANR	6330887	Identifier	language		6330857	0					
ANR	6330888	ExpressionStatement	"f = filename ? fopen ( filename , ""r"" ) : NULL"	21:4:345:387	6330857	5	True				
ANR	6330889	AssignmentExpression	"f = filename ? fopen ( filename , ""r"" ) : NULL"		6330857	0		=			
ANR	6330890	Identifier	f		6330857	0					
ANR	6330891	ConditionalExpression	"filename ? fopen ( filename , ""r"" ) : NULL"		6330857	1					
ANR	6330892	Condition	filename		6330857	0					
ANR	6330893	Identifier	filename		6330857	0					
ANR	6330894	CallExpression	"fopen ( filename , ""r"" )"		6330857	1					
ANR	6330895	Callee	fopen		6330857	0					
ANR	6330896	Identifier	fopen		6330857	0					
ANR	6330897	ArgumentList	filename		6330857	1					
ANR	6330898	Argument	filename		6330857	0					
ANR	6330899	Identifier	filename		6330857	0					
ANR	6330900	Argument	"""r"""		6330857	1					
ANR	6330901	PrimaryExpression	"""r"""		6330857	0					
ANR	6330902	Identifier	NULL		6330857	2					
ANR	6330903	ExpressionStatement	g_free ( filename )	23:4:394:410	6330857	6	True				
ANR	6330904	CallExpression	g_free ( filename )		6330857	0					
ANR	6330905	Callee	g_free		6330857	0					
ANR	6330906	Identifier	g_free		6330857	0					
ANR	6330907	ArgumentList	filename		6330857	1					
ANR	6330908	Argument	filename		6330857	0					
ANR	6330909	Identifier	filename		6330857	0					
ANR	6330910	IfStatement	if ( ! f )		6330857	7					
ANR	6330911	Condition	! f	25:8:421:422	6330857	0	True				
ANR	6330912	UnaryOperationExpression	! f		6330857	0					
ANR	6330913	UnaryOperator	!		6330857	0					
ANR	6330914	Identifier	f		6330857	1					
ANR	6330915	CompoundStatement		19:12:225:225	6330857	1					
ANR	6330916	ExpressionStatement	"fprintf ( stderr , ""Could not read keymap file: '%s'\\n"" , language )"	27:8:436:499	6330857	0	True				
ANR	6330917	CallExpression	"fprintf ( stderr , ""Could not read keymap file: '%s'\\n"" , language )"		6330857	0					
ANR	6330918	Callee	fprintf		6330857	0					
ANR	6330919	Identifier	fprintf		6330857	0					
ANR	6330920	ArgumentList	stderr		6330857	1					
ANR	6330921	Argument	stderr		6330857	0					
ANR	6330922	Identifier	stderr		6330857	0					
ANR	6330923	Argument	"""Could not read keymap file: '%s'\\n"""		6330857	1					
ANR	6330924	PrimaryExpression	"""Could not read keymap file: '%s'\\n"""		6330857	0					
ANR	6330925	Argument	language		6330857	2					
ANR	6330926	Identifier	language		6330857	0					
ANR	6330927	ReturnStatement	return NULL ;	29:8:510:521	6330857	1	True				
ANR	6330928	Identifier	NULL		6330857	0					
ANR	6330929	IfStatement	if ( ! k )		6330857	8					
ANR	6330930	Condition	! k	35:8:541:542	6330857	0	True				
ANR	6330931	UnaryOperationExpression	! k		6330857	0					
ANR	6330932	UnaryOperator	!		6330857	0					
ANR	6330933	Identifier	k		6330857	1					
ANR	6330934	CompoundStatement		29:12:345:345	6330857	1					
ANR	6330935	ExpressionStatement	k = g_malloc0 ( sizeof ( kbd_layout_t ) )	37:8:556:591	6330857	0	True				
ANR	6330936	AssignmentExpression	k = g_malloc0 ( sizeof ( kbd_layout_t ) )		6330857	0		=			
ANR	6330937	Identifier	k		6330857	0					
ANR	6330938	CallExpression	g_malloc0 ( sizeof ( kbd_layout_t ) )		6330857	1					
ANR	6330939	Callee	g_malloc0		6330857	0					
ANR	6330940	Identifier	g_malloc0		6330857	0					
ANR	6330941	ArgumentList	sizeof ( kbd_layout_t )		6330857	1					
ANR	6330942	Argument	sizeof ( kbd_layout_t )		6330857	0					
ANR	6330943	SizeofExpression	sizeof ( kbd_layout_t )		6330857	0					
ANR	6330944	Sizeof	sizeof		6330857	0					
ANR	6330945	SizeofOperand	kbd_layout_t		6330857	1					
ANR	6330946	ForStatement	for ( ; ; )		6330857	9					
ANR	6330947	CompoundStatement		37:12:415:415	6330857	0					
ANR	6330948	IfStatement	"if ( fgets ( line , 1024 , f ) == NULL )"		6330857	0					
ANR	6330949	Condition	"fgets ( line , 1024 , f ) == NULL"	45:12:630:657	6330857	0	True				
ANR	6330950	EqualityExpression	"fgets ( line , 1024 , f ) == NULL"		6330857	0		==			
ANR	6330951	CallExpression	"fgets ( line , 1024 , f )"		6330857	0					
ANR	6330952	Callee	fgets		6330857	0					
ANR	6330953	Identifier	fgets		6330857	0					
ANR	6330954	ArgumentList	line		6330857	1					
ANR	6330955	Argument	line		6330857	0					
ANR	6330956	Identifier	line		6330857	0					
ANR	6330957	Argument	1024		6330857	1					
ANR	6330958	PrimaryExpression	1024		6330857	0					
ANR	6330959	Argument	f		6330857	2					
ANR	6330960	Identifier	f		6330857	0					
ANR	6330961	Identifier	NULL		6330857	1					
ANR	6330962	CompoundStatement		39:42:460:460	6330857	1					
ANR	6330963	BreakStatement	break ;	47:12:675:680	6330857	0	True				
ANR	6330964	ExpressionStatement	len = strlen ( line )	51:8:702:720	6330857	1	True				
ANR	6330965	AssignmentExpression	len = strlen ( line )		6330857	0		=			
ANR	6330966	Identifier	len		6330857	0					
ANR	6330967	CallExpression	strlen ( line )		6330857	1					
ANR	6330968	Callee	strlen		6330857	0					
ANR	6330969	Identifier	strlen		6330857	0					
ANR	6330970	ArgumentList	line		6330857	1					
ANR	6330971	Argument	line		6330857	0					
ANR	6330972	Identifier	line		6330857	0					
ANR	6330973	IfStatement	if ( len > 0 && line [ len - 1 ] == '\\n' )		6330857	2					
ANR	6330974	Condition	len > 0 && line [ len - 1 ] == '\\n'	53:12:735:766	6330857	0	True				
ANR	6330975	AndExpression	len > 0 && line [ len - 1 ] == '\\n'		6330857	0		&&			
ANR	6330976	RelationalExpression	len > 0		6330857	0		>			
ANR	6330977	Identifier	len		6330857	0					
ANR	6330978	PrimaryExpression	0		6330857	1					
ANR	6330979	EqualityExpression	line [ len - 1 ] == '\\n'		6330857	1		==			
ANR	6330980	ArrayIndexing	line [ len - 1 ]		6330857	0					
ANR	6330981	Identifier	line		6330857	0					
ANR	6330982	AdditiveExpression	len - 1		6330857	1		-			
ANR	6330983	Identifier	len		6330857	0					
ANR	6330984	PrimaryExpression	1		6330857	1					
ANR	6330985	PrimaryExpression	'\\n'		6330857	1					
ANR	6330986	CompoundStatement		47:46:569:569	6330857	1					
ANR	6330987	ExpressionStatement	line [ len - 1 ] = '\\0'	55:12:784:804	6330857	0	True				
ANR	6330988	AssignmentExpression	line [ len - 1 ] = '\\0'		6330857	0		=			
ANR	6330989	ArrayIndexing	line [ len - 1 ]		6330857	0					
ANR	6330990	Identifier	line		6330857	0					
ANR	6330991	AdditiveExpression	len - 1		6330857	1		-			
ANR	6330992	Identifier	len		6330857	0					
ANR	6330993	PrimaryExpression	1		6330857	1					
ANR	6330994	PrimaryExpression	'\\0'		6330857	1					
ANR	6330995	IfStatement	if ( line [ 0 ] == '#' )		6330857	3					
ANR	6330996	Condition	line [ 0 ] == '#'	59:12:830:843	6330857	0	True				
ANR	6330997	EqualityExpression	line [ 0 ] == '#'		6330857	0		==			
ANR	6330998	ArrayIndexing	line [ 0 ]		6330857	0					
ANR	6330999	Identifier	line		6330857	0					
ANR	6331000	PrimaryExpression	0		6330857	1					
ANR	6331001	PrimaryExpression	'#'		6330857	1					
ANR	6331002	CompoundStatement		53:28:646:646	6330857	1					
ANR	6331003	ContinueStatement	continue ;	61:12:861:869	6330857	0	True				
ANR	6331004	IfStatement	"if ( ! strncmp ( line , ""map "" , 4 ) )"		6330857	4					
ANR	6331005	Condition	"! strncmp ( line , ""map "" , 4 )"	65:12:895:919	6330857	0	True				
ANR	6331006	UnaryOperationExpression	"! strncmp ( line , ""map "" , 4 )"		6330857	0					
ANR	6331007	UnaryOperator	!		6330857	0					
ANR	6331008	CallExpression	"strncmp ( line , ""map "" , 4 )"		6330857	1					
ANR	6331009	Callee	strncmp		6330857	0					
ANR	6331010	Identifier	strncmp		6330857	0					
ANR	6331011	ArgumentList	line		6330857	1					
ANR	6331012	Argument	line		6330857	0					
ANR	6331013	Identifier	line		6330857	0					
ANR	6331014	Argument	"""map """		6330857	1					
ANR	6331015	PrimaryExpression	"""map """		6330857	0					
ANR	6331016	Argument	4		6330857	2					
ANR	6331017	PrimaryExpression	4		6330857	0					
ANR	6331018	CompoundStatement		59:39:722:722	6330857	1					
ANR	6331019	ContinueStatement	continue ;	67:12:937:945	6330857	0	True				
ANR	6331020	IfStatement	"if ( ! strncmp ( line , ""include "" , 8 ) )"		6330857	5					
ANR	6331021	Condition	"! strncmp ( line , ""include "" , 8 )"	71:12:971:999	6330857	0	True				
ANR	6331022	UnaryOperationExpression	"! strncmp ( line , ""include "" , 8 )"		6330857	0					
ANR	6331023	UnaryOperator	!		6330857	0					
ANR	6331024	CallExpression	"strncmp ( line , ""include "" , 8 )"		6330857	1					
ANR	6331025	Callee	strncmp		6330857	0					
ANR	6331026	Identifier	strncmp		6330857	0					
ANR	6331027	ArgumentList	line		6330857	1					
ANR	6331028	Argument	line		6330857	0					
ANR	6331029	Identifier	line		6330857	0					
ANR	6331030	Argument	"""include """		6330857	1					
ANR	6331031	PrimaryExpression	"""include """		6330857	0					
ANR	6331032	Argument	8		6330857	2					
ANR	6331033	PrimaryExpression	8		6330857	0					
ANR	6331034	CompoundStatement		65:43:802:802	6330857	1					
ANR	6331035	ExpressionStatement	"parse_keyboard_layout ( table , line + 8 , k )"	73:12:1017:1058	6330857	0	True				
ANR	6331036	CallExpression	"parse_keyboard_layout ( table , line + 8 , k )"		6330857	0					
ANR	6331037	Callee	parse_keyboard_layout		6330857	0					
ANR	6331038	Identifier	parse_keyboard_layout		6330857	0					
ANR	6331039	ArgumentList	table		6330857	1					
ANR	6331040	Argument	table		6330857	0					
ANR	6331041	Identifier	table		6330857	0					
ANR	6331042	Argument	line + 8		6330857	1					
ANR	6331043	AdditiveExpression	line + 8		6330857	0		+			
ANR	6331044	Identifier	line		6330857	0					
ANR	6331045	PrimaryExpression	8		6330857	1					
ANR	6331046	Argument	k		6330857	2					
ANR	6331047	Identifier	k		6330857	0					
ANR	6331048	ElseStatement	else		6330857	0					
ANR	6331049	CompoundStatement		71:12:891:917	6330857	0					
ANR	6331050	IdentifierDeclStatement	char * end_of_keysym = line ;	77:12:1091:1117	6330857	0	True				
ANR	6331051	IdentifierDecl	* end_of_keysym = line		6330857	0					
ANR	6331052	IdentifierDeclType	char *		6330857	0					
ANR	6331053	Identifier	end_of_keysym		6330857	1					
ANR	6331054	AssignmentExpression	* end_of_keysym = line		6330857	2		=			
ANR	6331055	Identifier	line		6330857	0					
ANR	6331056	Identifier	line		6330857	1					
ANR	6331057	WhileStatement	while ( * end_of_keysym != 0 && * end_of_keysym != ' ' )		6330857	1					
ANR	6331058	Condition	* end_of_keysym != 0 && * end_of_keysym != ' '	79:19:1139:1182	6330857	0	True				
ANR	6331059	AndExpression	* end_of_keysym != 0 && * end_of_keysym != ' '		6330857	0		&&			
ANR	6331060	EqualityExpression	* end_of_keysym != 0		6330857	0		!=			
ANR	6331061	UnaryOperationExpression	* end_of_keysym		6330857	0					
ANR	6331062	UnaryOperator	*		6330857	0					
ANR	6331063	Identifier	end_of_keysym		6330857	1					
ANR	6331064	PrimaryExpression	0		6330857	1					
ANR	6331065	EqualityExpression	* end_of_keysym != ' '		6330857	1		!=			
ANR	6331066	UnaryOperationExpression	* end_of_keysym		6330857	0					
ANR	6331067	UnaryOperator	*		6330857	0					
ANR	6331068	Identifier	end_of_keysym		6330857	1					
ANR	6331069	PrimaryExpression	' '		6330857	1					
ANR	6331070	CompoundStatement		73:65:985:985	6330857	1					
ANR	6331071	ExpressionStatement	end_of_keysym ++	81:16:1204:1219	6330857	0	True				
ANR	6331072	PostIncDecOperationExpression	end_of_keysym ++		6330857	0					
ANR	6331073	Identifier	end_of_keysym		6330857	0					
ANR	6331074	IncDec	++		6330857	1					
ANR	6331075	IfStatement	if ( * end_of_keysym )		6330857	2					
ANR	6331076	Condition	* end_of_keysym	85:16:1253:1266	6330857	0	True				
ANR	6331077	UnaryOperationExpression	* end_of_keysym		6330857	0					
ANR	6331078	UnaryOperator	*		6330857	0					
ANR	6331079	Identifier	end_of_keysym		6330857	1					
ANR	6331080	CompoundStatement		81:16:1088:1098	6330857	1					
ANR	6331081	IdentifierDeclStatement	int keysym ;	87:16:1288:1298	6330857	0	True				
ANR	6331082	IdentifierDecl	keysym		6330857	0					
ANR	6331083	IdentifierDeclType	int		6330857	0					
ANR	6331084	Identifier	keysym		6330857	1					
ANR	6331085	ExpressionStatement	* end_of_keysym = 0	89:16:1317:1335	6330857	1	True				
ANR	6331086	AssignmentExpression	* end_of_keysym = 0		6330857	0		=			
ANR	6331087	UnaryOperationExpression	* end_of_keysym		6330857	0					
ANR	6331088	UnaryOperator	*		6330857	0					
ANR	6331089	Identifier	end_of_keysym		6330857	1					
ANR	6331090	PrimaryExpression	0		6330857	1					
ANR	6331091	ExpressionStatement	"keysym = get_keysym ( table , line )"	91:16:1354:1386	6330857	2	True				
ANR	6331092	AssignmentExpression	"keysym = get_keysym ( table , line )"		6330857	0		=			
ANR	6331093	Identifier	keysym		6330857	0					
ANR	6331094	CallExpression	"get_keysym ( table , line )"		6330857	1					
ANR	6331095	Callee	get_keysym		6330857	0					
ANR	6331096	Identifier	get_keysym		6330857	0					
ANR	6331097	ArgumentList	table		6330857	1					
ANR	6331098	Argument	table		6330857	0					
ANR	6331099	Identifier	table		6330857	0					
ANR	6331100	Argument	line		6330857	1					
ANR	6331101	Identifier	line		6330857	0					
ANR	6331102	IfStatement	if ( keysym == 0 )		6330857	3					
ANR	6331103	Condition	keysym == 0	93:20:1409:1419	6330857	0	True				
ANR	6331104	EqualityExpression	keysym == 0		6330857	0		==			
ANR	6331105	Identifier	keysym		6330857	0					
ANR	6331106	PrimaryExpression	0		6330857	1					
ANR	6331107	CompoundStatement		87:33:1222:1222	6330857	1					
ANR	6331108	ElseStatement	else		6330857	0					
ANR	6331109	CompoundStatement		95:20:1411:1446	6330857	0					
ANR	6331110	IdentifierDeclStatement	const char * rest = end_of_keysym + 1 ;	99:20:1552:1588	6330857	0	True				
ANR	6331111	IdentifierDecl	* rest = end_of_keysym + 1		6330857	0					
ANR	6331112	IdentifierDeclType	const char *		6330857	0					
ANR	6331113	Identifier	rest		6330857	1					
ANR	6331114	AssignmentExpression	* rest = end_of_keysym + 1		6330857	2		=			
ANR	6331115	Identifier	rest		6330857	0					
ANR	6331116	AdditiveExpression	end_of_keysym + 1		6330857	1		+			
ANR	6331117	Identifier	end_of_keysym		6330857	0					
ANR	6331118	PrimaryExpression	1		6330857	1					
ANR	6331119	IdentifierDeclStatement	"int keycode = strtol ( rest , NULL , 0 ) ;"	101:20:1611:1646	6330857	1	True				
ANR	6331120	IdentifierDecl	"keycode = strtol ( rest , NULL , 0 )"		6330857	0					
ANR	6331121	IdentifierDeclType	int		6330857	0					
ANR	6331122	Identifier	keycode		6330857	1					
ANR	6331123	AssignmentExpression	"keycode = strtol ( rest , NULL , 0 )"		6330857	2		=			
ANR	6331124	Identifier	keycode		6330857	0					
ANR	6331125	CallExpression	"strtol ( rest , NULL , 0 )"		6330857	1					
ANR	6331126	Callee	strtol		6330857	0					
ANR	6331127	Identifier	strtol		6330857	0					
ANR	6331128	ArgumentList	rest		6330857	1					
ANR	6331129	Argument	rest		6330857	0					
ANR	6331130	Identifier	rest		6330857	0					
ANR	6331131	Argument	NULL		6330857	1					
ANR	6331132	Identifier	NULL		6330857	0					
ANR	6331133	Argument	0		6330857	2					
ANR	6331134	PrimaryExpression	0		6330857	0					
ANR	6331135	IfStatement	"if ( strstr ( rest , ""numlock"" ) )"		6330857	2					
ANR	6331136	Condition	"strstr ( rest , ""numlock"" )"	105:24:1675:1697	6330857	0	True				
ANR	6331137	CallExpression	"strstr ( rest , ""numlock"" )"		6330857	0					
ANR	6331138	Callee	strstr		6330857	0					
ANR	6331139	Identifier	strstr		6330857	0					
ANR	6331140	ArgumentList	rest		6330857	1					
ANR	6331141	Argument	rest		6330857	0					
ANR	6331142	Identifier	rest		6330857	0					
ANR	6331143	Argument	"""numlock"""		6330857	1					
ANR	6331144	PrimaryExpression	"""numlock"""		6330857	0					
ANR	6331145	CompoundStatement		99:49:1500:1500	6330857	1					
ANR	6331146	ExpressionStatement	"add_to_key_range ( & k -> keypad_range , keycode )"	107:24:1727:1770	6330857	0	True				
ANR	6331147	CallExpression	"add_to_key_range ( & k -> keypad_range , keycode )"		6330857	0					
ANR	6331148	Callee	add_to_key_range		6330857	0					
ANR	6331149	Identifier	add_to_key_range		6330857	0					
ANR	6331150	ArgumentList	& k -> keypad_range		6330857	1					
ANR	6331151	Argument	& k -> keypad_range		6330857	0					
ANR	6331152	UnaryOperationExpression	& k -> keypad_range		6330857	0					
ANR	6331153	UnaryOperator	&		6330857	0					
ANR	6331154	PtrMemberAccess	k -> keypad_range		6330857	1					
ANR	6331155	Identifier	k		6330857	0					
ANR	6331156	Identifier	keypad_range		6330857	1					
ANR	6331157	Argument	keycode		6330857	1					
ANR	6331158	Identifier	keycode		6330857	0					
ANR	6331159	ExpressionStatement	"add_to_key_range ( & k -> numlock_range , keysym )"	109:24:1797:1840	6330857	1	True				
ANR	6331160	CallExpression	"add_to_key_range ( & k -> numlock_range , keysym )"		6330857	0					
ANR	6331161	Callee	add_to_key_range		6330857	0					
ANR	6331162	Identifier	add_to_key_range		6330857	0					
ANR	6331163	ArgumentList	& k -> numlock_range		6330857	1					
ANR	6331164	Argument	& k -> numlock_range		6330857	0					
ANR	6331165	UnaryOperationExpression	& k -> numlock_range		6330857	0					
ANR	6331166	UnaryOperator	&		6330857	0					
ANR	6331167	PtrMemberAccess	k -> numlock_range		6330857	1					
ANR	6331168	Identifier	k		6330857	0					
ANR	6331169	Identifier	numlock_range		6330857	1					
ANR	6331170	Argument	keysym		6330857	1					
ANR	6331171	Identifier	keysym		6330857	0					
ANR	6331172	IfStatement	"if ( strstr ( rest , ""shift"" ) )"		6330857	3					
ANR	6331173	Condition	"strstr ( rest , ""shift"" )"	119:24:2028:2048	6330857	0	True				
ANR	6331174	CallExpression	"strstr ( rest , ""shift"" )"		6330857	0					
ANR	6331175	Callee	strstr		6330857	0					
ANR	6331176	Identifier	strstr		6330857	0					
ANR	6331177	ArgumentList	rest		6330857	1					
ANR	6331178	Argument	rest		6330857	0					
ANR	6331179	Identifier	rest		6330857	0					
ANR	6331180	Argument	"""shift"""		6330857	1					
ANR	6331181	PrimaryExpression	"""shift"""		6330857	0					
ANR	6331182	CompoundStatement		113:47:1851:1851	6330857	1					
ANR	6331183	ExpressionStatement	keycode |= SCANCODE_SHIFT	121:24:2078:2103	6330857	0	True				
ANR	6331184	AssignmentExpression	keycode |= SCANCODE_SHIFT		6330857	0		|=			
ANR	6331185	Identifier	keycode		6330857	0					
ANR	6331186	Identifier	SCANCODE_SHIFT		6330857	1					
ANR	6331187	IfStatement	"if ( strstr ( rest , ""altgr"" ) )"		6330857	4					
ANR	6331188	Condition	"strstr ( rest , ""altgr"" )"	125:24:2153:2173	6330857	0	True				
ANR	6331189	CallExpression	"strstr ( rest , ""altgr"" )"		6330857	0					
ANR	6331190	Callee	strstr		6330857	0					
ANR	6331191	Identifier	strstr		6330857	0					
ANR	6331192	ArgumentList	rest		6330857	1					
ANR	6331193	Argument	rest		6330857	0					
ANR	6331194	Identifier	rest		6330857	0					
ANR	6331195	Argument	"""altgr"""		6330857	1					
ANR	6331196	PrimaryExpression	"""altgr"""		6330857	0					
ANR	6331197	CompoundStatement		119:47:1976:1976	6330857	1					
ANR	6331198	ExpressionStatement	keycode |= SCANCODE_ALTGR	127:24:2203:2228	6330857	0	True				
ANR	6331199	AssignmentExpression	keycode |= SCANCODE_ALTGR		6330857	0		|=			
ANR	6331200	Identifier	keycode		6330857	0					
ANR	6331201	Identifier	SCANCODE_ALTGR		6330857	1					
ANR	6331202	IfStatement	"if ( strstr ( rest , ""ctrl"" ) )"		6330857	5					
ANR	6331203	Condition	"strstr ( rest , ""ctrl"" )"	131:24:2278:2297	6330857	0	True				
ANR	6331204	CallExpression	"strstr ( rest , ""ctrl"" )"		6330857	0					
ANR	6331205	Callee	strstr		6330857	0					
ANR	6331206	Identifier	strstr		6330857	0					
ANR	6331207	ArgumentList	rest		6330857	1					
ANR	6331208	Argument	rest		6330857	0					
ANR	6331209	Identifier	rest		6330857	0					
ANR	6331210	Argument	"""ctrl"""		6330857	1					
ANR	6331211	PrimaryExpression	"""ctrl"""		6330857	0					
ANR	6331212	CompoundStatement		125:46:2100:2100	6330857	1					
ANR	6331213	ExpressionStatement	keycode |= SCANCODE_CTRL	133:24:2327:2351	6330857	0	True				
ANR	6331214	AssignmentExpression	keycode |= SCANCODE_CTRL		6330857	0		|=			
ANR	6331215	Identifier	keycode		6330857	0					
ANR	6331216	Identifier	SCANCODE_CTRL		6330857	1					
ANR	6331217	ExpressionStatement	"add_keysym ( line , keysym , keycode , k )"	139:20:2399:2435	6330857	6	True				
ANR	6331218	CallExpression	"add_keysym ( line , keysym , keycode , k )"		6330857	0					
ANR	6331219	Callee	add_keysym		6330857	0					
ANR	6331220	Identifier	add_keysym		6330857	0					
ANR	6331221	ArgumentList	line		6330857	1					
ANR	6331222	Argument	line		6330857	0					
ANR	6331223	Identifier	line		6330857	0					
ANR	6331224	Argument	keysym		6330857	1					
ANR	6331225	Identifier	keysym		6330857	0					
ANR	6331226	Argument	keycode		6330857	2					
ANR	6331227	Identifier	keycode		6330857	0					
ANR	6331228	Argument	k		6330857	3					
ANR	6331229	Identifier	k		6330857	0					
ANR	6331230	IfStatement	"if ( strstr ( rest , ""addupper"" ) )"		6330857	7					
ANR	6331231	Condition	"strstr ( rest , ""addupper"" )"	143:24:2464:2487	6330857	0	True				
ANR	6331232	CallExpression	"strstr ( rest , ""addupper"" )"		6330857	0					
ANR	6331233	Callee	strstr		6330857	0					
ANR	6331234	Identifier	strstr		6330857	0					
ANR	6331235	ArgumentList	rest		6330857	1					
ANR	6331236	Argument	rest		6330857	0					
ANR	6331237	Identifier	rest		6330857	0					
ANR	6331238	Argument	"""addupper"""		6330857	1					
ANR	6331239	PrimaryExpression	"""addupper"""		6330857	0					
ANR	6331240	CompoundStatement		139:24:2317:2324	6330857	1					
ANR	6331241	IdentifierDeclStatement	char * c ;	145:24:2517:2524	6330857	0	True				
ANR	6331242	IdentifierDecl	* c		6330857	0					
ANR	6331243	IdentifierDeclType	char *		6330857	0					
ANR	6331244	Identifier	c		6330857	1					
ANR	6331245	ForStatement	for ( c = line ; * c ; c ++ )		6330857	1					
ANR	6331246	ForInit	c = line ;	147:29:2556:2564	6330857	0	True				
ANR	6331247	AssignmentExpression	c = line		6330857	0		=			
ANR	6331248	Identifier	c		6330857	0					
ANR	6331249	Identifier	line		6330857	1					
ANR	6331250	Condition	* c	147:39:2566:2567	6330857	1	True				
ANR	6331251	UnaryOperationExpression	* c		6330857	0					
ANR	6331252	UnaryOperator	*		6330857	0					
ANR	6331253	Identifier	c		6330857	1					
ANR	6331254	PostIncDecOperationExpression	c ++	147:43:2570:2572	6330857	2	True				
ANR	6331255	Identifier	c		6330857	0					
ANR	6331256	IncDec	++		6330857	1					
ANR	6331257	CompoundStatement		141:48:2375:2375	6330857	3					
ANR	6331258	ExpressionStatement	* c = qemu_toupper ( * c )	149:28:2606:2627	6330857	0	True				
ANR	6331259	AssignmentExpression	* c = qemu_toupper ( * c )		6330857	0		=			
ANR	6331260	UnaryOperationExpression	* c		6330857	0					
ANR	6331261	UnaryOperator	*		6330857	0					
ANR	6331262	Identifier	c		6330857	1					
ANR	6331263	CallExpression	qemu_toupper ( * c )		6330857	1					
ANR	6331264	Callee	qemu_toupper		6330857	0					
ANR	6331265	Identifier	qemu_toupper		6330857	0					
ANR	6331266	ArgumentList	* c		6330857	1					
ANR	6331267	Argument	* c		6330857	0					
ANR	6331268	UnaryOperationExpression	* c		6330857	0					
ANR	6331269	UnaryOperator	*		6330857	0					
ANR	6331270	Identifier	c		6330857	1					
ANR	6331271	ExpressionStatement	"keysym = get_keysym ( table , line )"	153:24:2681:2713	6330857	2	True				
ANR	6331272	AssignmentExpression	"keysym = get_keysym ( table , line )"		6330857	0		=			
ANR	6331273	Identifier	keysym		6330857	0					
ANR	6331274	CallExpression	"get_keysym ( table , line )"		6330857	1					
ANR	6331275	Callee	get_keysym		6330857	0					
ANR	6331276	Identifier	get_keysym		6330857	0					
ANR	6331277	ArgumentList	table		6330857	1					
ANR	6331278	Argument	table		6330857	0					
ANR	6331279	Identifier	table		6330857	0					
ANR	6331280	Argument	line		6330857	1					
ANR	6331281	Identifier	line		6330857	0					
ANR	6331282	IfStatement	if ( keysym )		6330857	3					
ANR	6331283	Condition	keysym	155:28:2744:2749	6330857	0	True				
ANR	6331284	Identifier	keysym		6330857	0					
ANR	6331285	CompoundStatement		149:36:2552:2552	6330857	1					
ANR	6331286	ExpressionStatement	"add_keysym ( line , keysym , keycode | SCANCODE_SHIFT , k )"	157:28:2783:2876	6330857	0	True				
ANR	6331287	CallExpression	"add_keysym ( line , keysym , keycode | SCANCODE_SHIFT , k )"		6330857	0					
ANR	6331288	Callee	add_keysym		6330857	0					
ANR	6331289	Identifier	add_keysym		6330857	0					
ANR	6331290	ArgumentList	line		6330857	1					
ANR	6331291	Argument	line		6330857	0					
ANR	6331292	Identifier	line		6330857	0					
ANR	6331293	Argument	keysym		6330857	1					
ANR	6331294	Identifier	keysym		6330857	0					
ANR	6331295	Argument	keycode | SCANCODE_SHIFT		6330857	2					
ANR	6331296	InclusiveOrExpression	keycode | SCANCODE_SHIFT		6330857	0		|			
ANR	6331297	Identifier	keycode		6330857	0					
ANR	6331298	Identifier	SCANCODE_SHIFT		6330857	1					
ANR	6331299	Argument	k		6330857	3					
ANR	6331300	Identifier	k		6330857	0					
ANR	6331301	ExpressionStatement	fclose ( f )	173:4:2985:2994	6330857	10	True				
ANR	6331302	CallExpression	fclose ( f )		6330857	0					
ANR	6331303	Callee	fclose		6330857	0					
ANR	6331304	Identifier	fclose		6330857	0					
ANR	6331305	ArgumentList	f		6330857	1					
ANR	6331306	Argument	f		6330857	0					
ANR	6331307	Identifier	f		6330857	0					
ANR	6331308	ReturnStatement	return k ;	175:4:3001:3009	6330857	11	True				
ANR	6331309	Identifier	k		6330857	0					
ANR	6331310	ReturnType	static kbd_layout_t *		6330857	1					
ANR	6331311	Identifier	parse_keyboard_layout		6330857	2					
ANR	6331312	ParameterList	"const name2keysym_t * table , const char * language , kbd_layout_t * k"		6330857	3					
ANR	6331313	Parameter	const name2keysym_t * table	1:43:43:68	6330857	0	True				
ANR	6331314	ParameterType	const name2keysym_t *		6330857	0					
ANR	6331315	Identifier	table		6330857	1					
ANR	6331316	Parameter	const char * language	3:43:115:134	6330857	1	True				
ANR	6331317	ParameterType	const char *		6330857	0					
ANR	6331318	Identifier	language		6330857	1					
ANR	6331319	Parameter	kbd_layout_t * k	5:43:181:195	6330857	2	True				
ANR	6331320	ParameterType	kbd_layout_t *		6330857	0					
ANR	6331321	Identifier	k		6330857	1					
ANR	6331322	CFGEntryNode	ENTRY		6330857		True				
ANR	6331323	CFGExitNode	EXIT		6330857		True				
ANR	6331324	InfiniteForNode	true		6330857		True				
ANR	6331325	Symbol	end_of_keysym		6330857						
ANR	6331326	Symbol	line		6330857						
ANR	6331327	Symbol	language		6330857						
ANR	6331328	Symbol	* line		6330857						
ANR	6331329	Symbol	SCANCODE_SHIFT		6330857						
ANR	6331330	Symbol	fgets		6330857						
ANR	6331331	Symbol	strlen		6330857						
ANR	6331332	Symbol	strncmp		6330857						
ANR	6331333	Symbol	len		6330857						
ANR	6331334	Symbol	strtol		6330857						
ANR	6331335	Symbol	keysym		6330857						
ANR	6331336	Symbol	SCANCODE_ALTGR		6330857						
ANR	6331337	Symbol	table		6330857						
ANR	6331338	Symbol	* end_of_keysym		6330857						
ANR	6331339	Symbol	keycode		6330857						
ANR	6331340	Symbol	qemu_find_file		6330857						
ANR	6331341	Symbol	fopen		6330857						
ANR	6331342	Symbol	rest		6330857						
ANR	6331343	Symbol	& k -> numlock_range		6330857						
ANR	6331344	Symbol	NULL		6330857						
ANR	6331345	Symbol	c		6330857						
ANR	6331346	Symbol	f		6330857						
ANR	6331347	Symbol	qemu_toupper		6330857						
ANR	6331348	Symbol	k		6330857						
ANR	6331349	Symbol	QEMU_FILE_TYPE_KEYMAP		6330857						
ANR	6331350	Symbol	stderr		6330857						
ANR	6331351	Symbol	& k -> keypad_range		6330857						
ANR	6331352	Symbol	* c		6330857						
ANR	6331353	Symbol	SCANCODE_CTRL		6330857						
ANR	6331354	Symbol	get_keysym		6330857						
ANR	6331355	Symbol	filename		6330857						
ANR	6331356	Symbol	strstr		6330857						
ANR	6331357	Symbol	g_malloc0		6330857						
ANR	6331358	Symbol	* len		6330857						
