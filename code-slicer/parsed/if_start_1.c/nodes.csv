command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4813613	File	/home/p4ultr4n/workplace/ReVeal/raw_code/if_start_1.c								
ANR	4813614	Function	if_start	1:0:0:1170							
ANR	4813615	FunctionDef	if_start ()		4813614	0					
ANR	4813616	CompoundStatement		2:0:15:1170	4813614	0					
ANR	4813617	IdentifierDeclStatement	"struct mbuf * ifm , * ifqt ;"	3:1:18:41	4813614	0	True				
ANR	4813618	IdentifierDecl	* ifm		4813614	0					
ANR	4813619	IdentifierDeclType	struct mbuf *		4813614	0					
ANR	4813620	Identifier	ifm		4813614	1					
ANR	4813621	IdentifierDecl	* ifqt		4813614	1					
ANR	4813622	IdentifierDeclType	struct mbuf *		4813614	0					
ANR	4813623	Identifier	ifqt		4813614	1					
ANR	4813624	ExpressionStatement	"DEBUG_CALL ( ""if_start"" )"	4:1:44:66	4813614	1	True				
ANR	4813625	CallExpression	"DEBUG_CALL ( ""if_start"" )"		4813614	0					
ANR	4813626	Callee	DEBUG_CALL		4813614	0					
ANR	4813627	Identifier	DEBUG_CALL		4813614	0					
ANR	4813628	ArgumentList	"""if_start"""		4813614	1					
ANR	4813629	Argument	"""if_start"""		4813614	0					
ANR	4813630	PrimaryExpression	"""if_start"""		4813614	0					
ANR	4813631	IfStatement	if ( if_queued == 0 )		4813614	2					
ANR	4813632	Condition	if_queued == 0	5:5:73:86	4813614	0	True				
ANR	4813633	EqualityExpression	if_queued == 0		4813614	0		==			
ANR	4813634	Identifier	if_queued		4813614	0					
ANR	4813635	PrimaryExpression	0		4813614	1					
ANR	4813636	ReturnStatement	return ;	6:4:93:99	4813614	1	True				
ANR	4813637	Label	again :	7:1:122:127	4813614	3	True				
ANR	4813638	Identifier	again		4813614	0					
ANR	4813639	IfStatement	if ( ! slirp_can_output ( ) )		4813614	4					
ANR	4813640	Condition	! slirp_can_output ( )	9:12:185:203	4813614	0	True				
ANR	4813641	UnaryOperationExpression	! slirp_can_output ( )		4813614	0					
ANR	4813642	UnaryOperator	!		4813614	0					
ANR	4813643	CallExpression	slirp_can_output ( )		4813614	1					
ANR	4813644	Callee	slirp_can_output		4813614	0					
ANR	4813645	Identifier	slirp_can_output		4813614	0					
ANR	4813646	ArgumentList			4813614	1					
ANR	4813647	ReturnStatement	return ;	10:12:218:224	4813614	1	True				
ANR	4813648	IfStatement	if ( if_fastq . ifq_next != & if_fastq )		4813614	5					
ANR	4813649	Condition	if_fastq . ifq_next != & if_fastq	15:5:345:374	4813614	0	True				
ANR	4813650	EqualityExpression	if_fastq . ifq_next != & if_fastq		4813614	0		!=			
ANR	4813651	MemberAccess	if_fastq . ifq_next		4813614	0					
ANR	4813652	Identifier	if_fastq		4813614	0					
ANR	4813653	Identifier	ifq_next		4813614	1					
ANR	4813654	UnaryOperationExpression	& if_fastq		4813614	1					
ANR	4813655	UnaryOperator	&		4813614	0					
ANR	4813656	Identifier	if_fastq		4813614	1					
ANR	4813657	CompoundStatement		14:37:361:361	4813614	1					
ANR	4813658	ExpressionStatement	ifm = if_fastq . ifq_next	16:2:381:404	4813614	0	True				
ANR	4813659	AssignmentExpression	ifm = if_fastq . ifq_next		4813614	0		=			
ANR	4813660	Identifier	ifm		4813614	0					
ANR	4813661	MemberAccess	if_fastq . ifq_next		4813614	1					
ANR	4813662	Identifier	if_fastq		4813614	0					
ANR	4813663	Identifier	ifq_next		4813614	1					
ANR	4813664	ElseStatement	else		4813614	0					
ANR	4813665	CompoundStatement		16:8:398:398	4813614	0					
ANR	4813666	IfStatement	if ( next_m != & if_batchq )		4813614	0					
ANR	4813667	Condition	next_m != & if_batchq	19:6:471:490	4813614	0	True				
ANR	4813668	EqualityExpression	next_m != & if_batchq		4813614	0		!=			
ANR	4813669	Identifier	next_m		4813614	0					
ANR	4813670	UnaryOperationExpression	& if_batchq		4813614	1					
ANR	4813671	UnaryOperator	&		4813614	0					
ANR	4813672	Identifier	if_batchq		4813614	1					
ANR	4813673	ExpressionStatement	ifm = next_m	20:5:498:510	4813614	1	True				
ANR	4813674	AssignmentExpression	ifm = next_m		4813614	0		=			
ANR	4813675	Identifier	ifm		4813614	0					
ANR	4813676	Identifier	next_m		4813614	1					
ANR	4813677	ElseStatement	else		4813614	0					
ANR	4813678	ExpressionStatement	ifm = if_batchq . ifq_next	22:5:524:548	4813614	0	True				
ANR	4813679	AssignmentExpression	ifm = if_batchq . ifq_next		4813614	0		=			
ANR	4813680	Identifier	ifm		4813614	0					
ANR	4813681	MemberAccess	if_batchq . ifq_next		4813614	1					
ANR	4813682	Identifier	if_batchq		4813614	0					
ANR	4813683	Identifier	ifq_next		4813614	1					
ANR	4813684	ExpressionStatement	next_m = ifm -> ifq_next	24:2:603:625	4813614	1	True				
ANR	4813685	AssignmentExpression	next_m = ifm -> ifq_next		4813614	0		=			
ANR	4813686	Identifier	next_m		4813614	0					
ANR	4813687	PtrMemberAccess	ifm -> ifq_next		4813614	1					
ANR	4813688	Identifier	ifm		4813614	0					
ANR	4813689	Identifier	ifq_next		4813614	1					
ANR	4813690	ExpressionStatement	ifqt = ifm -> ifq_prev	27:1:663:683	4813614	6	True				
ANR	4813691	AssignmentExpression	ifqt = ifm -> ifq_prev		4813614	0		=			
ANR	4813692	Identifier	ifqt		4813614	0					
ANR	4813693	PtrMemberAccess	ifm -> ifq_prev		4813614	1					
ANR	4813694	Identifier	ifm		4813614	0					
ANR	4813695	Identifier	ifq_prev		4813614	1					
ANR	4813696	ExpressionStatement	remque ( ifm )	28:1:686:697	4813614	7	True				
ANR	4813697	CallExpression	remque ( ifm )		4813614	0					
ANR	4813698	Callee	remque		4813614	0					
ANR	4813699	Identifier	remque		4813614	0					
ANR	4813700	ArgumentList	ifm		4813614	1					
ANR	4813701	Argument	ifm		4813614	0					
ANR	4813702	Identifier	ifm		4813614	0					
ANR	4813703	ExpressionStatement	-- if_queued	29:1:700:711	4813614	8	True				
ANR	4813704	UnaryExpression	-- if_queued		4813614	0					
ANR	4813705	IncDec	--		4813614	0					
ANR	4813706	Identifier	if_queued		4813614	1					
ANR	4813707	IfStatement	if ( ifm -> ifs_next != ifm )		4813614	9					
ANR	4813708	Condition	ifm -> ifs_next != ifm	31:5:783:825	4813614	0	True				
ANR	4813709	EqualityExpression	ifm -> ifs_next != ifm		4813614	0		!=			
ANR	4813710	PtrMemberAccess	ifm -> ifs_next		4813614	0					
ANR	4813711	Identifier	ifm		4813614	0					
ANR	4813712	Identifier	ifs_next		4813614	1					
ANR	4813713	Identifier	ifm		4813614	1					
ANR	4813714	CompoundStatement		30:50:812:812	4813614	1					
ANR	4813715	ExpressionStatement	"insque ( ifm -> ifs_next , ifqt )"	32:2:832:859	4813614	0	True				
ANR	4813716	CallExpression	"insque ( ifm -> ifs_next , ifqt )"		4813614	0					
ANR	4813717	Callee	insque		4813614	0					
ANR	4813718	Identifier	insque		4813614	0					
ANR	4813719	ArgumentList	ifm -> ifs_next		4813614	1					
ANR	4813720	Argument	ifm -> ifs_next		4813614	0					
ANR	4813721	PtrMemberAccess	ifm -> ifs_next		4813614	0					
ANR	4813722	Identifier	ifm		4813614	0					
ANR	4813723	Identifier	ifs_next		4813614	1					
ANR	4813724	Argument	ifqt		4813614	1					
ANR	4813725	Identifier	ifqt		4813614	0					
ANR	4813726	ExpressionStatement	ifs_remque ( ifm )	33:2:863:878	4813614	1	True				
ANR	4813727	CallExpression	ifs_remque ( ifm )		4813614	0					
ANR	4813728	Callee	ifs_remque		4813614	0					
ANR	4813729	Identifier	ifs_remque		4813614	0					
ANR	4813730	ArgumentList	ifm		4813614	1					
ANR	4813731	Argument	ifm		4813614	0					
ANR	4813732	Identifier	ifm		4813614	0					
ANR	4813733	IfStatement	if ( ifm -> ifq_so )		4813614	10					
ANR	4813734	Condition	ifm -> ifq_so	36:5:912:922	4813614	0	True				
ANR	4813735	PtrMemberAccess	ifm -> ifq_so		4813614	0					
ANR	4813736	Identifier	ifm		4813614	0					
ANR	4813737	Identifier	ifq_so		4813614	1					
ANR	4813738	CompoundStatement		35:18:909:909	4813614	1					
ANR	4813739	IfStatement	if ( -- ifm -> ifq_so -> so_queued == 0 )		4813614	0					
ANR	4813740	Condition	-- ifm -> ifq_so -> so_queued == 0	37:6:933:961	4813614	0	True				
ANR	4813741	EqualityExpression	-- ifm -> ifq_so -> so_queued == 0		4813614	0		==			
ANR	4813742	UnaryExpression	-- ifm -> ifq_so -> so_queued		4813614	0					
ANR	4813743	IncDec	--		4813614	0					
ANR	4813744	PtrMemberAccess	ifm -> ifq_so -> so_queued		4813614	1					
ANR	4813745	PtrMemberAccess	ifm -> ifq_so		4813614	0					
ANR	4813746	Identifier	ifm		4813614	0					
ANR	4813747	Identifier	ifq_so		4813614	1					
ANR	4813748	Identifier	so_queued		4813614	1					
ANR	4813749	PrimaryExpression	0		4813614	1					
ANR	4813750	ExpressionStatement	ifm -> ifq_so -> so_nqueued = 0	39:5:1021:1048	4813614	1	True				
ANR	4813751	AssignmentExpression	ifm -> ifq_so -> so_nqueued = 0		4813614	0		=			
ANR	4813752	PtrMemberAccess	ifm -> ifq_so -> so_nqueued		4813614	0					
ANR	4813753	PtrMemberAccess	ifm -> ifq_so		4813614	0					
ANR	4813754	Identifier	ifm		4813614	0					
ANR	4813755	Identifier	ifq_so		4813614	1					
ANR	4813756	Identifier	so_nqueued		4813614	1					
ANR	4813757	PrimaryExpression	0		4813614	1					
ANR	4813758	ExpressionStatement	"if_encap ( ifm -> m_data , ifm -> m_len )"	42:8:1103:1136	4813614	11	True				
ANR	4813759	CallExpression	"if_encap ( ifm -> m_data , ifm -> m_len )"		4813614	0					
ANR	4813760	Callee	if_encap		4813614	0					
ANR	4813761	Identifier	if_encap		4813614	0					
ANR	4813762	ArgumentList	ifm -> m_data		4813614	1					
ANR	4813763	Argument	ifm -> m_data		4813614	0					
ANR	4813764	PtrMemberAccess	ifm -> m_data		4813614	0					
ANR	4813765	Identifier	ifm		4813614	0					
ANR	4813766	Identifier	m_data		4813614	1					
ANR	4813767	Argument	ifm -> m_len		4813614	1					
ANR	4813768	PtrMemberAccess	ifm -> m_len		4813614	0					
ANR	4813769	Identifier	ifm		4813614	0					
ANR	4813770	Identifier	m_len		4813614	1					
ANR	4813771	IfStatement	if ( if_queued )		4813614	12					
ANR	4813772	Condition	if_queued	43:5:1143:1151	4813614	0	True				
ANR	4813773	Identifier	if_queued		4813614	0					
ANR	4813774	GotoStatement	goto again ;	44:4:1158:1168	4813614	1	True				
ANR	4813775	Identifier	again		4813614	0					
ANR	4813776	Identifier	if_start		4813614	1					
ANR	4813777	ParameterList			4813614	2					
ANR	4813778	CFGEntryNode	ENTRY		4813614		True				
ANR	4813779	CFGExitNode	EXIT		4813614		True				
ANR	4813780	Symbol	ifm -> ifq_next		4813614						
ANR	4813781	Symbol	* * ifm		4813614						
ANR	4813782	Symbol	* ifm		4813614						
ANR	4813783	Symbol	ifm -> m_len		4813614						
ANR	4813784	Symbol	ifm -> ifq_so		4813614						
ANR	4813785	Symbol	if_fastq		4813614						
ANR	4813786	Symbol	ifm -> m_data		4813614						
ANR	4813787	Symbol	if_batchq . ifq_next		4813614						
ANR	4813788	Symbol	ifm -> ifq_so -> so_queued		4813614						
ANR	4813789	Symbol	ifqt		4813614						
ANR	4813790	Symbol	ifm		4813614						
ANR	4813791	Symbol	ifm -> ifs_next		4813614						
ANR	4813792	Symbol	* ifm -> ifq_so		4813614						
ANR	4813793	Symbol	slirp_can_output		4813614						
ANR	4813794	Symbol	if_queued		4813614						
ANR	4813795	Symbol	if_batchq		4813614						
ANR	4813796	Symbol	if_fastq . ifq_next		4813614						
ANR	4813797	Symbol	ifm -> ifq_so -> so_nqueued		4813614						
ANR	4813798	Symbol	next_m		4813614						
ANR	4813799	Symbol	& if_batchq		4813614						
ANR	4813800	Symbol	ifm -> ifq_prev		4813614						
ANR	4813801	Symbol	& if_fastq		4813614						
