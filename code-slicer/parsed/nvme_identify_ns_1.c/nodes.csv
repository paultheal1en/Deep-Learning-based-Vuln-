command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6100610	File	/home/p4ultr4n/workplace/ReVeal/raw_code/nvme_identify_ns_1.c								
ANR	6100611	Function	nvme_identify_ns	1:0:0:460							
ANR	6100612	FunctionDef	"nvme_identify_ns (NvmeCtrl * n , NvmeIdentify * c)"		6100611	0					
ANR	6100613	CompoundStatement		3:0:64:460	6100611	0					
ANR	6100614	IdentifierDeclStatement	NvmeNamespace * ns ;	5:4:71:88	6100611	0	True				
ANR	6100615	IdentifierDecl	* ns		6100611	0					
ANR	6100616	IdentifierDeclType	NvmeNamespace *		6100611	0					
ANR	6100617	Identifier	ns		6100611	1					
ANR	6100618	IdentifierDeclStatement	uint32_t nsid = le32_to_cpu ( c -> nsid ) ;	7:4:95:131	6100611	1	True				
ANR	6100619	IdentifierDecl	nsid = le32_to_cpu ( c -> nsid )		6100611	0					
ANR	6100620	IdentifierDeclType	uint32_t		6100611	0					
ANR	6100621	Identifier	nsid		6100611	1					
ANR	6100622	AssignmentExpression	nsid = le32_to_cpu ( c -> nsid )		6100611	2		=			
ANR	6100623	Identifier	nsid		6100611	0					
ANR	6100624	CallExpression	le32_to_cpu ( c -> nsid )		6100611	1					
ANR	6100625	Callee	le32_to_cpu		6100611	0					
ANR	6100626	Identifier	le32_to_cpu		6100611	0					
ANR	6100627	ArgumentList	c -> nsid		6100611	1					
ANR	6100628	Argument	c -> nsid		6100611	0					
ANR	6100629	PtrMemberAccess	c -> nsid		6100611	0					
ANR	6100630	Identifier	c		6100611	0					
ANR	6100631	Identifier	nsid		6100611	1					
ANR	6100632	IdentifierDeclStatement	uint64_t prp1 = le64_to_cpu ( c -> prp1 ) ;	9:4:138:174	6100611	2	True				
ANR	6100633	IdentifierDecl	prp1 = le64_to_cpu ( c -> prp1 )		6100611	0					
ANR	6100634	IdentifierDeclType	uint64_t		6100611	0					
ANR	6100635	Identifier	prp1		6100611	1					
ANR	6100636	AssignmentExpression	prp1 = le64_to_cpu ( c -> prp1 )		6100611	2		=			
ANR	6100637	Identifier	prp1		6100611	0					
ANR	6100638	CallExpression	le64_to_cpu ( c -> prp1 )		6100611	1					
ANR	6100639	Callee	le64_to_cpu		6100611	0					
ANR	6100640	Identifier	le64_to_cpu		6100611	0					
ANR	6100641	ArgumentList	c -> prp1		6100611	1					
ANR	6100642	Argument	c -> prp1		6100611	0					
ANR	6100643	PtrMemberAccess	c -> prp1		6100611	0					
ANR	6100644	Identifier	c		6100611	0					
ANR	6100645	Identifier	prp1		6100611	1					
ANR	6100646	IdentifierDeclStatement	uint64_t prp2 = le64_to_cpu ( c -> prp2 ) ;	11:4:181:217	6100611	3	True				
ANR	6100647	IdentifierDecl	prp2 = le64_to_cpu ( c -> prp2 )		6100611	0					
ANR	6100648	IdentifierDeclType	uint64_t		6100611	0					
ANR	6100649	Identifier	prp2		6100611	1					
ANR	6100650	AssignmentExpression	prp2 = le64_to_cpu ( c -> prp2 )		6100611	2		=			
ANR	6100651	Identifier	prp2		6100611	0					
ANR	6100652	CallExpression	le64_to_cpu ( c -> prp2 )		6100611	1					
ANR	6100653	Callee	le64_to_cpu		6100611	0					
ANR	6100654	Identifier	le64_to_cpu		6100611	0					
ANR	6100655	ArgumentList	c -> prp2		6100611	1					
ANR	6100656	Argument	c -> prp2		6100611	0					
ANR	6100657	PtrMemberAccess	c -> prp2		6100611	0					
ANR	6100658	Identifier	c		6100611	0					
ANR	6100659	Identifier	prp2		6100611	1					
ANR	6100660	IfStatement	if ( nsid == 0 || nsid > n -> num_namespaces )		6100611	4					
ANR	6100661	Condition	nsid == 0 || nsid > n -> num_namespaces	15:8:230:266	6100611	0	True				
ANR	6100662	OrExpression	nsid == 0 || nsid > n -> num_namespaces		6100611	0		||			
ANR	6100663	EqualityExpression	nsid == 0		6100611	0		==			
ANR	6100664	Identifier	nsid		6100611	0					
ANR	6100665	PrimaryExpression	0		6100611	1					
ANR	6100666	RelationalExpression	nsid > n -> num_namespaces		6100611	1		>			
ANR	6100667	Identifier	nsid		6100611	0					
ANR	6100668	PtrMemberAccess	n -> num_namespaces		6100611	1					
ANR	6100669	Identifier	n		6100611	0					
ANR	6100670	Identifier	num_namespaces		6100611	1					
ANR	6100671	CompoundStatement		13:47:204:204	6100611	1					
ANR	6100672	ReturnStatement	return NVME_INVALID_NSID | NVME_DNR ;	17:8:280:315	6100611	0	True				
ANR	6100673	InclusiveOrExpression	NVME_INVALID_NSID | NVME_DNR		6100611	0		|			
ANR	6100674	Identifier	NVME_INVALID_NSID		6100611	0					
ANR	6100675	Identifier	NVME_DNR		6100611	1					
ANR	6100676	ExpressionStatement	ns = & n -> namespaces [ nsid - 1 ]	23:4:331:360	6100611	5	True				
ANR	6100677	AssignmentExpression	ns = & n -> namespaces [ nsid - 1 ]		6100611	0		=			
ANR	6100678	Identifier	ns		6100611	0					
ANR	6100679	UnaryOperationExpression	& n -> namespaces [ nsid - 1 ]		6100611	1					
ANR	6100680	UnaryOperator	&		6100611	0					
ANR	6100681	ArrayIndexing	n -> namespaces [ nsid - 1 ]		6100611	1					
ANR	6100682	PtrMemberAccess	n -> namespaces		6100611	0					
ANR	6100683	Identifier	n		6100611	0					
ANR	6100684	Identifier	namespaces		6100611	1					
ANR	6100685	AdditiveExpression	nsid - 1		6100611	1		-			
ANR	6100686	Identifier	nsid		6100611	0					
ANR	6100687	PrimaryExpression	1		6100611	1					
ANR	6100688	ReturnStatement	"return nvme_dma_read_prp ( n , ( uint8_t * ) & ns -> id_ns , sizeof ( ns -> id_ns ) , prp1 , prp2 ) ;"	25:4:367:457	6100611	6	True				
ANR	6100689	CallExpression	"nvme_dma_read_prp ( n , ( uint8_t * ) & ns -> id_ns , sizeof ( ns -> id_ns ) , prp1 , prp2 )"		6100611	0					
ANR	6100690	Callee	nvme_dma_read_prp		6100611	0					
ANR	6100691	Identifier	nvme_dma_read_prp		6100611	0					
ANR	6100692	ArgumentList	n		6100611	1					
ANR	6100693	Argument	n		6100611	0					
ANR	6100694	Identifier	n		6100611	0					
ANR	6100695	Argument	( uint8_t * ) & ns -> id_ns		6100611	1					
ANR	6100696	CastExpression	( uint8_t * ) & ns -> id_ns		6100611	0					
ANR	6100697	CastTarget	uint8_t *		6100611	0					
ANR	6100698	UnaryOperationExpression	& ns -> id_ns		6100611	1					
ANR	6100699	UnaryOperator	&		6100611	0					
ANR	6100700	PtrMemberAccess	ns -> id_ns		6100611	1					
ANR	6100701	Identifier	ns		6100611	0					
ANR	6100702	Identifier	id_ns		6100611	1					
ANR	6100703	Argument	sizeof ( ns -> id_ns )		6100611	2					
ANR	6100704	SizeofExpression	sizeof ( ns -> id_ns )		6100611	0					
ANR	6100705	Sizeof	sizeof		6100611	0					
ANR	6100706	PtrMemberAccess	ns -> id_ns		6100611	1					
ANR	6100707	Identifier	ns		6100611	0					
ANR	6100708	Identifier	id_ns		6100611	1					
ANR	6100709	Argument	prp1		6100611	3					
ANR	6100710	Identifier	prp1		6100611	0					
ANR	6100711	Argument	prp2		6100611	4					
ANR	6100712	Identifier	prp2		6100611	0					
ANR	6100713	ReturnType	static uint16_t		6100611	1					
ANR	6100714	Identifier	nvme_identify_ns		6100611	2					
ANR	6100715	ParameterList	"NvmeCtrl * n , NvmeIdentify * c"		6100611	3					
ANR	6100716	Parameter	NvmeCtrl * n	1:33:33:43	6100611	0	True				
ANR	6100717	ParameterType	NvmeCtrl *		6100611	0					
ANR	6100718	Identifier	n		6100611	1					
ANR	6100719	Parameter	NvmeIdentify * c	1:46:46:60	6100611	1	True				
ANR	6100720	ParameterType	NvmeIdentify *		6100611	0					
ANR	6100721	Identifier	c		6100611	1					
ANR	6100722	CFGEntryNode	ENTRY		6100611		True				
ANR	6100723	CFGExitNode	EXIT		6100611		True				
ANR	6100724	Symbol	le64_to_cpu		6100611						
ANR	6100725	Symbol	c		6100611						
ANR	6100726	Symbol	ns		6100611						
ANR	6100727	Symbol	n -> num_namespaces		6100611						
ANR	6100728	Symbol	* ns		6100611						
ANR	6100729	Symbol	c -> nsid		6100611						
ANR	6100730	Symbol	ns -> id_ns		6100611						
ANR	6100731	Symbol	* c		6100611						
ANR	6100732	Symbol	c -> prp1		6100611						
ANR	6100733	Symbol	n		6100611						
ANR	6100734	Symbol	c -> prp2		6100611						
ANR	6100735	Symbol	prp2		6100611						
ANR	6100736	Symbol	nsid		6100611						
ANR	6100737	Symbol	NVME_INVALID_NSID		6100611						
ANR	6100738	Symbol	le32_to_cpu		6100611						
ANR	6100739	Symbol	prp1		6100611						
ANR	6100740	Symbol	* n		6100611						
ANR	6100741	Symbol	NVME_DNR		6100611						
ANR	6100742	Symbol	nvme_dma_read_prp		6100611						
ANR	6100743	Symbol	n -> namespaces		6100611						
ANR	6100744	Symbol	& ns -> id_ns		6100611						
