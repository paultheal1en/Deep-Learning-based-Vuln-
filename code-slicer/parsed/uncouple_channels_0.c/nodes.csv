command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8619947	File	/home/p4ultr4n/workplace/ReVeal/raw_code/uncouple_channels_0.c								
ANR	8619948	Function	uncouple_channels	1:0:0:967							
ANR	8619949	FunctionDef	uncouple_channels (AC3DecodeContext * ctx)		8619948	0					
ANR	8619950	CompoundStatement		3:0:55:967	8619948	0					
ANR	8619951	IdentifierDeclStatement	ac3_audio_block * ab = & ctx -> audio_block ;	5:4:62:101	8619948	0	True				
ANR	8619952	IdentifierDecl	* ab = & ctx -> audio_block		8619948	0					
ANR	8619953	IdentifierDeclType	ac3_audio_block *		8619948	0					
ANR	8619954	Identifier	ab		8619948	1					
ANR	8619955	AssignmentExpression	* ab = & ctx -> audio_block		8619948	2		=			
ANR	8619956	Identifier	ab		8619948	0					
ANR	8619957	UnaryOperationExpression	& ctx -> audio_block		8619948	1					
ANR	8619958	UnaryOperator	&		8619948	0					
ANR	8619959	PtrMemberAccess	ctx -> audio_block		8619948	1					
ANR	8619960	Identifier	ctx		8619948	0					
ANR	8619961	Identifier	audio_block		8619948	1					
ANR	8619962	IdentifierDeclStatement	"int ch , sbnd , bin ;"	7:4:108:125	8619948	1	True				
ANR	8619963	IdentifierDecl	ch		8619948	0					
ANR	8619964	IdentifierDeclType	int		8619948	0					
ANR	8619965	Identifier	ch		8619948	1					
ANR	8619966	IdentifierDecl	sbnd		8619948	1					
ANR	8619967	IdentifierDeclType	int		8619948	0					
ANR	8619968	Identifier	sbnd		8619948	1					
ANR	8619969	IdentifierDecl	bin		8619948	2					
ANR	8619970	IdentifierDeclType	int		8619948	0					
ANR	8619971	Identifier	bin		8619948	1					
ANR	8619972	IdentifierDeclStatement	int index ;	9:4:132:141	8619948	2	True				
ANR	8619973	IdentifierDecl	index		8619948	0					
ANR	8619974	IdentifierDeclType	int		8619948	0					
ANR	8619975	Identifier	index		8619948	1					
ANR	8619976	IdentifierDeclStatement	int16_t mantissa ;	11:4:148:164	8619948	3	True				
ANR	8619977	IdentifierDecl	mantissa		8619948	0					
ANR	8619978	IdentifierDeclType	int16_t		8619948	0					
ANR	8619979	Identifier	mantissa		8619948	1					
ANR	8619980	ForStatement	for ( ch = 0 ; ch < ctx -> bsi . nfchans ; ch ++ )		8619948	4					
ANR	8619981	ForInit	ch = 0 ;	17:9:207:213	8619948	0	True				
ANR	8619982	AssignmentExpression	ch = 0		8619948	0		=			
ANR	8619983	Identifier	ch		8619948	0					
ANR	8619984	PrimaryExpression	0		8619948	1					
ANR	8619985	Condition	ch < ctx -> bsi . nfchans	17:17:215:235	8619948	1	True				
ANR	8619986	RelationalExpression	ch < ctx -> bsi . nfchans		8619948	0		<			
ANR	8619987	Identifier	ch		8619948	0					
ANR	8619988	MemberAccess	ctx -> bsi . nfchans		8619948	1					
ANR	8619989	PtrMemberAccess	ctx -> bsi		8619948	0					
ANR	8619990	Identifier	ctx		8619948	0					
ANR	8619991	Identifier	bsi		8619948	1					
ANR	8619992	Identifier	nfchans		8619948	1					
ANR	8619993	PostIncDecOperationExpression	ch ++	17:40:238:241	8619948	2	True				
ANR	8619994	Identifier	ch		8619948	0					
ANR	8619995	IncDec	++		8619948	1					
ANR	8619996	IfStatement	if ( ab -> chincpl & ( 1 << ch ) )		8619948	3					
ANR	8619997	Condition	ab -> chincpl & ( 1 << ch )	19:12:257:279	8619948	0	True				
ANR	8619998	BitAndExpression	ab -> chincpl & ( 1 << ch )		8619948	0		&			
ANR	8619999	PtrMemberAccess	ab -> chincpl		8619948	0					
ANR	8620000	Identifier	ab		8619948	0					
ANR	8620001	Identifier	chincpl		8619948	1					
ANR	8620002	ShiftExpression	1 << ch		8619948	1		<<			
ANR	8620003	PrimaryExpression	1		8619948	0					
ANR	8620004	Identifier	ch		8619948	1					
ANR	8620005	ForStatement	for ( sbnd = ab -> cplbegf ; sbnd < 3 + ab -> cplendf ; sbnd ++ )		8619948	1					
ANR	8620006	ForInit	sbnd = ab -> cplbegf ;	21:17:300:318	8619948	0	True				
ANR	8620007	AssignmentExpression	sbnd = ab -> cplbegf		8619948	0		=			
ANR	8620008	Identifier	sbnd		8619948	0					
ANR	8620009	PtrMemberAccess	ab -> cplbegf		8619948	1					
ANR	8620010	Identifier	ab		8619948	0					
ANR	8620011	Identifier	cplbegf		8619948	1					
ANR	8620012	Condition	sbnd < 3 + ab -> cplendf	21:37:320:341	8619948	1	True				
ANR	8620013	RelationalExpression	sbnd < 3 + ab -> cplendf		8619948	0		<			
ANR	8620014	Identifier	sbnd		8619948	0					
ANR	8620015	AdditiveExpression	3 + ab -> cplendf		8619948	1		+			
ANR	8620016	PrimaryExpression	3		8619948	0					
ANR	8620017	PtrMemberAccess	ab -> cplendf		8619948	1					
ANR	8620018	Identifier	ab		8619948	0					
ANR	8620019	Identifier	cplendf		8619948	1					
ANR	8620020	PostIncDecOperationExpression	sbnd ++	21:61:344:349	8619948	2	True				
ANR	8620021	Identifier	sbnd		8619948	0					
ANR	8620022	IncDec	++		8619948	1					
ANR	8620023	ForStatement	for ( bin = 0 ; bin < 12 ; bin ++ )		8619948	3					
ANR	8620024	ForInit	bin = 0 ;	23:21:374:381	8619948	0	True				
ANR	8620025	AssignmentExpression	bin = 0		8619948	0		=			
ANR	8620026	Identifier	bin		8619948	0					
ANR	8620027	PrimaryExpression	0		8619948	1					
ANR	8620028	Condition	bin < 12	23:30:383:390	8619948	1	True				
ANR	8620029	RelationalExpression	bin < 12		8619948	0		<			
ANR	8620030	Identifier	bin		8619948	0					
ANR	8620031	PrimaryExpression	12		8619948	1					
ANR	8620032	PostIncDecOperationExpression	bin ++	23:40:393:397	8619948	2	True				
ANR	8620033	Identifier	bin		8619948	0					
ANR	8620034	IncDec	++		8619948	1					
ANR	8620035	CompoundStatement		21:47:344:344	8619948	3					
ANR	8620036	ExpressionStatement	index = sbnd * 12 + bin + 37	25:20:423:451	8619948	0	True				
ANR	8620037	AssignmentExpression	index = sbnd * 12 + bin + 37		8619948	0		=			
ANR	8620038	Identifier	index		8619948	0					
ANR	8620039	AdditiveExpression	sbnd * 12 + bin + 37		8619948	1		+			
ANR	8620040	MultiplicativeExpression	sbnd * 12		8619948	0		*			
ANR	8620041	Identifier	sbnd		8619948	0					
ANR	8620042	PrimaryExpression	12		8619948	1					
ANR	8620043	AdditiveExpression	bin + 37		8619948	1		+			
ANR	8620044	Identifier	bin		8619948	0					
ANR	8620045	PrimaryExpression	37		8619948	1					
ANR	8620046	ExpressionStatement	ab -> transform_coeffs [ ch + 1 ] [ index ] = ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]	27:20:474:573	8619948	1	True				
ANR	8620047	AssignmentExpression	ab -> transform_coeffs [ ch + 1 ] [ index ] = ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8619948	0		=			
ANR	8620048	ArrayIndexing	ab -> transform_coeffs [ ch + 1 ] [ index ]		8619948	0					
ANR	8620049	ArrayIndexing	ab -> transform_coeffs [ ch + 1 ]		8619948	0					
ANR	8620050	PtrMemberAccess	ab -> transform_coeffs		8619948	0					
ANR	8620051	Identifier	ab		8619948	0					
ANR	8620052	Identifier	transform_coeffs		8619948	1					
ANR	8620053	AdditiveExpression	ch + 1		8619948	1		+			
ANR	8620054	Identifier	ch		8619948	0					
ANR	8620055	PrimaryExpression	1		8619948	1					
ANR	8620056	Identifier	index		8619948	1					
ANR	8620057	MultiplicativeExpression	ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8619948	1		*			
ANR	8620058	ArrayIndexing	ab -> cplcoeffs [ index ]		8619948	0					
ANR	8620059	PtrMemberAccess	ab -> cplcoeffs		8619948	0					
ANR	8620060	Identifier	ab		8619948	0					
ANR	8620061	Identifier	cplcoeffs		8619948	1					
ANR	8620062	Identifier	index		8619948	1					
ANR	8620063	MultiplicativeExpression	ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8619948	1		*			
ANR	8620064	ArrayIndexing	ab -> cplco [ ch ] [ sbnd ]		8619948	0					
ANR	8620065	ArrayIndexing	ab -> cplco [ ch ]		8619948	0					
ANR	8620066	PtrMemberAccess	ab -> cplco		8619948	0					
ANR	8620067	Identifier	ab		8619948	0					
ANR	8620068	Identifier	cplco		8619948	1					
ANR	8620069	Identifier	ch		8619948	1					
ANR	8620070	Identifier	sbnd		8619948	1					
ANR	8620071	ArrayIndexing	ab -> chcoeffs [ ch ]		8619948	1					
ANR	8620072	PtrMemberAccess	ab -> chcoeffs		8619948	0					
ANR	8620073	Identifier	ab		8619948	0					
ANR	8620074	Identifier	chcoeffs		8619948	1					
ANR	8620075	Identifier	ch		8619948	1					
ANR	8620076	IfStatement	if ( ! ab -> bap [ ch ] [ index ] && ( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) ) )		8619948	2					
ANR	8620077	Condition	! ab -> bap [ ch ] [ index ] && ( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) )	31:24:655:732	8619948	0	True				
ANR	8620078	AndExpression	! ab -> bap [ ch ] [ index ] && ( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) )		8619948	0		&&			
ANR	8620079	UnaryOperationExpression	! ab -> bap [ ch ] [ index ]		8619948	0					
ANR	8620080	UnaryOperator	!		8619948	0					
ANR	8620081	ArrayIndexing	ab -> bap [ ch ] [ index ]		8619948	1					
ANR	8620082	ArrayIndexing	ab -> bap [ ch ]		8619948	0					
ANR	8620083	PtrMemberAccess	ab -> bap		8619948	0					
ANR	8620084	Identifier	ab		8619948	0					
ANR	8620085	Identifier	bap		8619948	1					
ANR	8620086	Identifier	ch		8619948	1					
ANR	8620087	Identifier	index		8619948	1					
ANR	8620088	AndExpression	( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) )		8619948	1		&&			
ANR	8620089	BitAndExpression	ab -> chincpl & ( 1 << ch )		8619948	0		&			
ANR	8620090	PtrMemberAccess	ab -> chincpl		8619948	0					
ANR	8620091	Identifier	ab		8619948	0					
ANR	8620092	Identifier	chincpl		8619948	1					
ANR	8620093	ShiftExpression	1 << ch		8619948	1		<<			
ANR	8620094	PrimaryExpression	1		8619948	0					
ANR	8620095	Identifier	ch		8619948	1					
ANR	8620096	BitAndExpression	ab -> dithflag & ( 1 << ch )		8619948	1		&			
ANR	8620097	PtrMemberAccess	ab -> dithflag		8619948	0					
ANR	8620098	Identifier	ab		8619948	0					
ANR	8620099	Identifier	dithflag		8619948	1					
ANR	8620100	ShiftExpression	1 << ch		8619948	1		<<			
ANR	8620101	PrimaryExpression	1		8619948	0					
ANR	8620102	Identifier	ch		8619948	1					
ANR	8620103	CompoundStatement		29:104:679:679	8619948	1					
ANR	8620104	ExpressionStatement	mantissa = dither_int16 ( & ctx -> state )	33:24:762:798	8619948	0	True				
ANR	8620105	AssignmentExpression	mantissa = dither_int16 ( & ctx -> state )		8619948	0		=			
ANR	8620106	Identifier	mantissa		8619948	0					
ANR	8620107	CallExpression	dither_int16 ( & ctx -> state )		8619948	1					
ANR	8620108	Callee	dither_int16		8619948	0					
ANR	8620109	Identifier	dither_int16		8619948	0					
ANR	8620110	ArgumentList	& ctx -> state		8619948	1					
ANR	8620111	Argument	& ctx -> state		8619948	0					
ANR	8620112	UnaryOperationExpression	& ctx -> state		8619948	0					
ANR	8620113	UnaryOperator	&		8619948	0					
ANR	8620114	PtrMemberAccess	ctx -> state		8619948	1					
ANR	8620115	Identifier	ctx		8619948	0					
ANR	8620116	Identifier	state		8619948	1					
ANR	8620117	ExpressionStatement	"ab -> transform_coeffs [ ch + 1 ] [ index ] = to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"	35:24:825:922	8619948	1	True				
ANR	8620118	AssignmentExpression	"ab -> transform_coeffs [ ch + 1 ] [ index ] = to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"		8619948	0		=			
ANR	8620119	ArrayIndexing	ab -> transform_coeffs [ ch + 1 ] [ index ]		8619948	0					
ANR	8620120	ArrayIndexing	ab -> transform_coeffs [ ch + 1 ]		8619948	0					
ANR	8620121	PtrMemberAccess	ab -> transform_coeffs		8619948	0					
ANR	8620122	Identifier	ab		8619948	0					
ANR	8620123	Identifier	transform_coeffs		8619948	1					
ANR	8620124	AdditiveExpression	ch + 1		8619948	1		+			
ANR	8620125	Identifier	ch		8619948	0					
ANR	8620126	PrimaryExpression	1		8619948	1					
ANR	8620127	Identifier	index		8619948	1					
ANR	8620128	MultiplicativeExpression	"to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"		8619948	1		*			
ANR	8620129	CallExpression	"to_float ( ab -> dexps [ ch ] [ index ] , mantissa )"		8619948	0					
ANR	8620130	Callee	to_float		8619948	0					
ANR	8620131	Identifier	to_float		8619948	0					
ANR	8620132	ArgumentList	ab -> dexps [ ch ] [ index ]		8619948	1					
ANR	8620133	Argument	ab -> dexps [ ch ] [ index ]		8619948	0					
ANR	8620134	ArrayIndexing	ab -> dexps [ ch ] [ index ]		8619948	0					
ANR	8620135	ArrayIndexing	ab -> dexps [ ch ]		8619948	0					
ANR	8620136	PtrMemberAccess	ab -> dexps		8619948	0					
ANR	8620137	Identifier	ab		8619948	0					
ANR	8620138	Identifier	dexps		8619948	1					
ANR	8620139	Identifier	ch		8619948	1					
ANR	8620140	Identifier	index		8619948	1					
ANR	8620141	Argument	mantissa		8619948	1					
ANR	8620142	Identifier	mantissa		8619948	0					
ANR	8620143	ArrayIndexing	ab -> chcoeffs [ ch ]		8619948	1					
ANR	8620144	PtrMemberAccess	ab -> chcoeffs		8619948	0					
ANR	8620145	Identifier	ab		8619948	0					
ANR	8620146	Identifier	chcoeffs		8619948	1					
ANR	8620147	Identifier	ch		8619948	1					
ANR	8620148	ReturnType	static void		8619948	1					
ANR	8620149	Identifier	uncouple_channels		8619948	2					
ANR	8620150	ParameterList	AC3DecodeContext * ctx		8619948	3					
ANR	8620151	Parameter	AC3DecodeContext * ctx	1:30:30:51	8619948	0	True				
ANR	8620152	ParameterType	AC3DecodeContext *		8619948	0					
ANR	8620153	Identifier	ctx		8619948	1					
ANR	8620154	CFGEntryNode	ENTRY		8619948		True				
ANR	8620155	CFGExitNode	EXIT		8619948		True				
ANR	8620156	Symbol	dither_int16		8619948						
ANR	8620157	Symbol	* * ab -> transform_coeffs		8619948						
ANR	8620158	Symbol	* ab		8619948						
ANR	8620159	Symbol	ab -> dithflag		8619948						
ANR	8620160	Symbol	bin		8619948						
ANR	8620161	Symbol	ab -> chcoeffs		8619948						
ANR	8620162	Symbol	* * ab -> bap		8619948						
ANR	8620163	Symbol	* index		8619948						
ANR	8620164	Symbol	* ch		8619948						
ANR	8620165	Symbol	* ab -> transform_coeffs		8619948						
ANR	8620166	Symbol	& ctx -> audio_block		8619948						
ANR	8620167	Symbol	* * ab		8619948						
ANR	8620168	Symbol	to_float		8619948						
ANR	8620169	Symbol	ctx -> bsi . nfchans		8619948						
ANR	8620170	Symbol	* * ch		8619948						
ANR	8620171	Symbol	* ab -> cplcoeffs		8619948						
ANR	8620172	Symbol	* ab -> bap		8619948						
ANR	8620173	Symbol	* * ab -> cplco		8619948						
ANR	8620174	Symbol	ab -> cplbegf		8619948						
ANR	8620175	Symbol	ab -> cplco		8619948						
ANR	8620176	Symbol	ab -> cplendf		8619948						
ANR	8620177	Symbol	ab -> chincpl		8619948						
ANR	8620178	Symbol	* sbnd		8619948						
ANR	8620179	Symbol	ab		8619948						
ANR	8620180	Symbol	* ab -> chcoeffs		8619948						
ANR	8620181	Symbol	ctx -> bsi		8619948						
ANR	8620182	Symbol	ab -> cplcoeffs		8619948						
ANR	8620183	Symbol	ch		8619948						
ANR	8620184	Symbol	* ab -> cplco		8619948						
ANR	8620185	Symbol	ctx		8619948						
ANR	8620186	Symbol	index		8619948						
ANR	8620187	Symbol	ab -> bap		8619948						
ANR	8620188	Symbol	& ctx -> state		8619948						
ANR	8620189	Symbol	* ctx		8619948						
ANR	8620190	Symbol	sbnd		8619948						
ANR	8620191	Symbol	mantissa		8619948						
ANR	8620192	Symbol	ab -> transform_coeffs		8619948						
ANR	8620193	Symbol	* * * ab		8619948						
ANR	8620194	Symbol	ab -> dexps		8619948						
ANR	8620195	Symbol	* * ab -> dexps		8619948						
ANR	8620196	Symbol	* ab -> dexps		8619948						
