command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4967220	File	/home/p4ultr4n/workplace/ReVeal/raw_code/invalid_qmp_mode_1.c								
ANR	4967221	Function	invalid_qmp_mode	1:0:0:704							
ANR	4967222	FunctionDef	"invalid_qmp_mode (const Monitor * mon , const char * cmd , Error * * errp)"		4967221	0					
ANR	4967223	CompoundStatement		5:0:111:704	4967221	0					
ANR	4967224	IdentifierDeclStatement	"bool is_cap = g_str_equal ( cmd , ""qmp_capabilities"" ) ;"	7:4:118:168	4967221	0	True				
ANR	4967225	IdentifierDecl	"is_cap = g_str_equal ( cmd , ""qmp_capabilities"" )"		4967221	0					
ANR	4967226	IdentifierDeclType	bool		4967221	0					
ANR	4967227	Identifier	is_cap		4967221	1					
ANR	4967228	AssignmentExpression	"is_cap = g_str_equal ( cmd , ""qmp_capabilities"" )"		4967221	2		=			
ANR	4967229	Identifier	is_cap		4967221	0					
ANR	4967230	CallExpression	"g_str_equal ( cmd , ""qmp_capabilities"" )"		4967221	1					
ANR	4967231	Callee	g_str_equal		4967221	0					
ANR	4967232	Identifier	g_str_equal		4967221	0					
ANR	4967233	ArgumentList	cmd		4967221	1					
ANR	4967234	Argument	cmd		4967221	0					
ANR	4967235	Identifier	cmd		4967221	0					
ANR	4967236	Argument	"""qmp_capabilities"""		4967221	1					
ANR	4967237	PrimaryExpression	"""qmp_capabilities"""		4967221	0					
ANR	4967238	IfStatement	if ( is_cap && mon -> qmp . in_command_mode )		4967221	1					
ANR	4967239	Condition	is_cap && mon -> qmp . in_command_mode	11:8:181:214	4967221	0	True				
ANR	4967240	AndExpression	is_cap && mon -> qmp . in_command_mode		4967221	0		&&			
ANR	4967241	Identifier	is_cap		4967221	0					
ANR	4967242	MemberAccess	mon -> qmp . in_command_mode		4967221	1					
ANR	4967243	PtrMemberAccess	mon -> qmp		4967221	0					
ANR	4967244	Identifier	mon		4967221	0					
ANR	4967245	Identifier	qmp		4967221	1					
ANR	4967246	Identifier	in_command_mode		4967221	1					
ANR	4967247	CompoundStatement		7:44:105:105	4967221	1					
ANR	4967248	Statement	error_set	13:8:228:236	4967221	0	True				
ANR	4967249	Statement	(	13:17:237:237	4967221	1	True				
ANR	4967250	Statement	errp	13:18:238:241	4967221	2	True				
ANR	4967251	Statement	","	13:22:242:242	4967221	3	True				
ANR	4967252	Statement	ERROR_CLASS_COMMAND_NOT_FOUND	13:24:244:272	4967221	4	True				
ANR	4967253	Statement	","	13:53:273:273	4967221	5	True				
ANR	4967254	Statement	"""Capabilities negotiation is already complete, command """	15:18:294:349	4967221	6	True				
ANR	4967255	Statement	"""'%s' ignored"""	17:18:370:383	4967221	7	True				
ANR	4967256	Statement	","	17:32:384:384	4967221	8	True				
ANR	4967257	Statement	cmd	17:34:386:388	4967221	9	True				
ANR	4967258	Statement	)	17:37:389:389	4967221	10	True				
ANR	4967259	ExpressionStatement		17:38:390:390	4967221	11	True				
ANR	4967260	ReturnStatement	return true ;	19:8:401:412	4967221	12	True				
ANR	4967261	Identifier	true		4967221	0					
ANR	4967262	IfStatement	if ( ! is_cap && ! mon -> qmp . in_command_mode )		4967221	2					
ANR	4967263	Condition	! is_cap && ! mon -> qmp . in_command_mode	23:8:430:465	4967221	0	True				
ANR	4967264	AndExpression	! is_cap && ! mon -> qmp . in_command_mode		4967221	0		&&			
ANR	4967265	UnaryOperationExpression	! is_cap		4967221	0					
ANR	4967266	UnaryOperator	!		4967221	0					
ANR	4967267	Identifier	is_cap		4967221	1					
ANR	4967268	UnaryOperationExpression	! mon -> qmp . in_command_mode		4967221	1					
ANR	4967269	UnaryOperator	!		4967221	0					
ANR	4967270	MemberAccess	mon -> qmp . in_command_mode		4967221	1					
ANR	4967271	PtrMemberAccess	mon -> qmp		4967221	0					
ANR	4967272	Identifier	mon		4967221	0					
ANR	4967273	Identifier	qmp		4967221	1					
ANR	4967274	Identifier	in_command_mode		4967221	1					
ANR	4967275	CompoundStatement		19:46:356:356	4967221	1					
ANR	4967276	Statement	error_set	25:8:479:487	4967221	0	True				
ANR	4967277	Statement	(	25:17:488:488	4967221	1	True				
ANR	4967278	Statement	errp	25:18:489:492	4967221	2	True				
ANR	4967279	Statement	","	25:22:493:493	4967221	3	True				
ANR	4967280	Statement	ERROR_CLASS_COMMAND_NOT_FOUND	25:24:495:523	4967221	4	True				
ANR	4967281	Statement	","	25:53:524:524	4967221	5	True				
ANR	4967282	Statement	"""Expecting capabilities negotiation with """	27:18:545:586	4967221	6	True				
ANR	4967283	Statement	"""'qmp_capabilities' before command '%s'"""	29:18:607:646	4967221	7	True				
ANR	4967284	Statement	","	29:58:647:647	4967221	8	True				
ANR	4967285	Statement	cmd	29:60:649:651	4967221	9	True				
ANR	4967286	Statement	)	29:63:652:652	4967221	10	True				
ANR	4967287	ExpressionStatement		29:64:653:653	4967221	11	True				
ANR	4967288	ReturnStatement	return true ;	31:8:664:675	4967221	12	True				
ANR	4967289	Identifier	true		4967221	0					
ANR	4967290	ReturnStatement	return false ;	35:4:689:701	4967221	3	True				
ANR	4967291	Identifier	false		4967221	0					
ANR	4967292	ReturnType	static bool		4967221	1					
ANR	4967293	Identifier	invalid_qmp_mode		4967221	2					
ANR	4967294	ParameterList	"const Monitor * mon , const char * cmd , Error * * errp"		4967221	3					
ANR	4967295	Parameter	const Monitor * mon	1:29:29:46	4967221	0	True				
ANR	4967296	ParameterType	const Monitor *		4967221	0					
ANR	4967297	Identifier	mon		4967221	1					
ANR	4967298	Parameter	const char * cmd	1:49:49:63	4967221	1	True				
ANR	4967299	ParameterType	const char *		4967221	0					
ANR	4967300	Identifier	cmd		4967221	1					
ANR	4967301	Parameter	Error * * errp	3:29:96:107	4967221	2	True				
ANR	4967302	ParameterType	Error * *		4967221	0					
ANR	4967303	Identifier	errp		4967221	1					
ANR	4967304	CFGEntryNode	ENTRY		4967221		True				
ANR	4967305	CFGExitNode	EXIT		4967221		True				
ANR	4967306	Symbol	mon -> qmp . in_command_mode		4967221						
ANR	4967307	Symbol	is_cap		4967221						
ANR	4967308	Symbol	errp		4967221						
ANR	4967309	Symbol	* mon		4967221						
ANR	4967310	Symbol	mon -> qmp		4967221						
ANR	4967311	Symbol	true		4967221						
ANR	4967312	Symbol	false		4967221						
ANR	4967313	Symbol	cmd		4967221						
ANR	4967314	Symbol	g_str_equal		4967221						
ANR	4967315	Symbol	mon		4967221						
