command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8581645	File	/home/p4ultr4n/workplace/ReVeal/raw_code/twin_decode_frame_0.c								
ANR	8581646	Function	twin_decode_frame	1:0:0:1463							
ANR	8581647	FunctionDef	"twin_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		8581646	0					
ANR	8581648	CompoundStatement		5:0:129:1463	8581646	0					
ANR	8581649	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:136:168	8581646	0	True				
ANR	8581650	IdentifierDecl	* buf = avpkt -> data		8581646	0					
ANR	8581651	IdentifierDeclType	const uint8_t *		8581646	0					
ANR	8581652	Identifier	buf		8581646	1					
ANR	8581653	AssignmentExpression	* buf = avpkt -> data		8581646	2		=			
ANR	8581654	Identifier	buf		8581646	0					
ANR	8581655	PtrMemberAccess	avpkt -> data		8581646	1					
ANR	8581656	Identifier	avpkt		8581646	0					
ANR	8581657	Identifier	data		8581646	1					
ANR	8581658	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:175:201	8581646	1	True				
ANR	8581659	IdentifierDecl	buf_size = avpkt -> size		8581646	0					
ANR	8581660	IdentifierDeclType	int		8581646	0					
ANR	8581661	Identifier	buf_size		8581646	1					
ANR	8581662	AssignmentExpression	buf_size = avpkt -> size		8581646	2		=			
ANR	8581663	Identifier	buf_size		8581646	0					
ANR	8581664	PtrMemberAccess	avpkt -> size		8581646	1					
ANR	8581665	Identifier	avpkt		8581646	0					
ANR	8581666	Identifier	size		8581646	1					
ANR	8581667	IdentifierDeclStatement	TwinContext * tctx = avctx -> priv_data ;	11:4:208:244	8581646	2	True				
ANR	8581668	IdentifierDecl	* tctx = avctx -> priv_data		8581646	0					
ANR	8581669	IdentifierDeclType	TwinContext *		8581646	0					
ANR	8581670	Identifier	tctx		8581646	1					
ANR	8581671	AssignmentExpression	* tctx = avctx -> priv_data		8581646	2		=			
ANR	8581672	Identifier	tctx		8581646	0					
ANR	8581673	PtrMemberAccess	avctx -> priv_data		8581646	1					
ANR	8581674	Identifier	avctx		8581646	0					
ANR	8581675	Identifier	priv_data		8581646	1					
ANR	8581676	IdentifierDeclStatement	GetBitContext gb ;	13:4:251:267	8581646	3	True				
ANR	8581677	IdentifierDecl	gb		8581646	0					
ANR	8581678	IdentifierDeclType	GetBitContext		8581646	0					
ANR	8581679	Identifier	gb		8581646	1					
ANR	8581680	IdentifierDeclStatement	const ModeTab * mtab = tctx -> mtab ;	15:4:274:306	8581646	4	True				
ANR	8581681	IdentifierDecl	* mtab = tctx -> mtab		8581646	0					
ANR	8581682	IdentifierDeclType	const ModeTab *		8581646	0					
ANR	8581683	Identifier	mtab		8581646	1					
ANR	8581684	AssignmentExpression	* mtab = tctx -> mtab		8581646	2		=			
ANR	8581685	Identifier	mtab		8581646	0					
ANR	8581686	PtrMemberAccess	tctx -> mtab		8581646	1					
ANR	8581687	Identifier	tctx		8581646	0					
ANR	8581688	Identifier	mtab		8581646	1					
ANR	8581689	IdentifierDeclStatement	float * out = data ;	17:4:313:330	8581646	5	True				
ANR	8581690	IdentifierDecl	* out = data		8581646	0					
ANR	8581691	IdentifierDeclType	float *		8581646	0					
ANR	8581692	Identifier	out		8581646	1					
ANR	8581693	AssignmentExpression	* out = data		8581646	2		=			
ANR	8581694	Identifier	data		8581646	0					
ANR	8581695	Identifier	data		8581646	1					
ANR	8581696	IdentifierDeclStatement	enum FrameType ftype ;	19:4:337:357	8581646	6	True				
ANR	8581697	IdentifierDecl	ftype		8581646	0					
ANR	8581698	IdentifierDeclType	enum FrameType		8581646	0					
ANR	8581699	Identifier	ftype		8581646	1					
ANR	8581700	IdentifierDeclStatement	int window_type ;	21:4:364:379	8581646	7	True				
ANR	8581701	IdentifierDecl	window_type		8581646	0					
ANR	8581702	IdentifierDeclType	int		8581646	0					
ANR	8581703	Identifier	window_type		8581646	1					
ANR	8581704	Statement	static	23:4:386:391	8581646	8	True				
ANR	8581705	IdentifierDeclStatement	"const enum FrameType wtype_to_ftype_table [ ] = { FT_LONG , FT_LONG , FT_SHORT , FT_LONG , FT_MEDIUM , FT_LONG , FT_LONG , FT_MEDIUM , FT_MEDIUM } ;"	23:11:393:555	8581646	9	True				
ANR	8581706	IdentifierDecl	"wtype_to_ftype_table [ ] = { FT_LONG , FT_LONG , FT_SHORT , FT_LONG , FT_MEDIUM , FT_LONG , FT_LONG , FT_MEDIUM , FT_MEDIUM }"		8581646	0					
ANR	8581707	IdentifierDeclType	const enum FrameType [ ]		8581646	0					
ANR	8581708	Identifier	wtype_to_ftype_table		8581646	1					
ANR	8581709	AssignmentExpression	"wtype_to_ftype_table [ ] = { FT_LONG , FT_LONG , FT_SHORT , FT_LONG , FT_MEDIUM , FT_LONG , FT_LONG , FT_MEDIUM , FT_MEDIUM }"		8581646	2		=			
ANR	8581710	Identifier	wtype_to_ftype_table		8581646	0					
ANR	8581711	InitializerList	FT_LONG		8581646	1					
ANR	8581712	Identifier	FT_LONG		8581646	0					
ANR	8581713	Identifier	FT_LONG		8581646	1					
ANR	8581714	Identifier	FT_SHORT		8581646	2					
ANR	8581715	Identifier	FT_LONG		8581646	3					
ANR	8581716	Identifier	FT_MEDIUM		8581646	4					
ANR	8581717	Identifier	FT_LONG		8581646	5					
ANR	8581718	Identifier	FT_LONG		8581646	6					
ANR	8581719	Identifier	FT_MEDIUM		8581646	7					
ANR	8581720	Identifier	FT_MEDIUM		8581646	8					
ANR	8581721	IfStatement	if ( buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8 )		8581646	10					
ANR	8581722	Condition	buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8	33:8:568:629	8581646	0	True				
ANR	8581723	RelationalExpression	buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8		8581646	0		<			
ANR	8581724	MultiplicativeExpression	buf_size * 8		8581646	0		*			
ANR	8581725	Identifier	buf_size		8581646	0					
ANR	8581726	PrimaryExpression	8		8581646	1					
ANR	8581727	AdditiveExpression	avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8		8581646	1		+			
ANR	8581728	MultiplicativeExpression	avctx -> bit_rate * mtab -> size / avctx -> sample_rate		8581646	0		*			
ANR	8581729	PtrMemberAccess	avctx -> bit_rate		8581646	0					
ANR	8581730	Identifier	avctx		8581646	0					
ANR	8581731	Identifier	bit_rate		8581646	1					
ANR	8581732	MultiplicativeExpression	mtab -> size / avctx -> sample_rate		8581646	1		/			
ANR	8581733	PtrMemberAccess	mtab -> size		8581646	0					
ANR	8581734	Identifier	mtab		8581646	0					
ANR	8581735	Identifier	size		8581646	1					
ANR	8581736	PtrMemberAccess	avctx -> sample_rate		8581646	1					
ANR	8581737	Identifier	avctx		8581646	0					
ANR	8581738	Identifier	sample_rate		8581646	1					
ANR	8581739	PrimaryExpression	8		8581646	1					
ANR	8581740	CompoundStatement		29:72:502:502	8581646	1					
ANR	8581741	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"	35:8:643:745	8581646	0	True				
ANR	8581742	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"		8581646	0					
ANR	8581743	Callee	av_log		8581646	0					
ANR	8581744	Identifier	av_log		8581646	0					
ANR	8581745	ArgumentList	avctx		8581646	1					
ANR	8581746	Argument	avctx		8581646	0					
ANR	8581747	Identifier	avctx		8581646	0					
ANR	8581748	Argument	AV_LOG_ERROR		8581646	1					
ANR	8581749	Identifier	AV_LOG_ERROR		8581646	0					
ANR	8581750	Argument	"""Frame too small (%d bytes). Truncated file?\\n"""		8581646	2					
ANR	8581751	PrimaryExpression	"""Frame too small (%d bytes). Truncated file?\\n"""		8581646	0					
ANR	8581752	Argument	buf_size		8581646	3					
ANR	8581753	Identifier	buf_size		8581646	0					
ANR	8581754	ReturnStatement	return AVERROR ( EINVAL ) ;	39:8:756:778	8581646	1	True				
ANR	8581755	CallExpression	AVERROR ( EINVAL )		8581646	0					
ANR	8581756	Callee	AVERROR		8581646	0					
ANR	8581757	Identifier	AVERROR		8581646	0					
ANR	8581758	ArgumentList	EINVAL		8581646	1					
ANR	8581759	Argument	EINVAL		8581646	0					
ANR	8581760	Identifier	EINVAL		8581646	0					
ANR	8581761	ExpressionStatement	"init_get_bits ( & gb , buf , buf_size * 8 )"	45:4:794:831	8581646	11	True				
ANR	8581762	CallExpression	"init_get_bits ( & gb , buf , buf_size * 8 )"		8581646	0					
ANR	8581763	Callee	init_get_bits		8581646	0					
ANR	8581764	Identifier	init_get_bits		8581646	0					
ANR	8581765	ArgumentList	& gb		8581646	1					
ANR	8581766	Argument	& gb		8581646	0					
ANR	8581767	UnaryOperationExpression	& gb		8581646	0					
ANR	8581768	UnaryOperator	&		8581646	0					
ANR	8581769	Identifier	gb		8581646	1					
ANR	8581770	Argument	buf		8581646	1					
ANR	8581771	Identifier	buf		8581646	0					
ANR	8581772	Argument	buf_size * 8		8581646	2					
ANR	8581773	MultiplicativeExpression	buf_size * 8		8581646	0		*			
ANR	8581774	Identifier	buf_size		8581646	0					
ANR	8581775	PrimaryExpression	8		8581646	1					
ANR	8581776	ExpressionStatement	"skip_bits ( & gb , get_bits ( & gb , 8 ) )"	47:4:838:870	8581646	12	True				
ANR	8581777	CallExpression	"skip_bits ( & gb , get_bits ( & gb , 8 ) )"		8581646	0					
ANR	8581778	Callee	skip_bits		8581646	0					
ANR	8581779	Identifier	skip_bits		8581646	0					
ANR	8581780	ArgumentList	& gb		8581646	1					
ANR	8581781	Argument	& gb		8581646	0					
ANR	8581782	UnaryOperationExpression	& gb		8581646	0					
ANR	8581783	UnaryOperator	&		8581646	0					
ANR	8581784	Identifier	gb		8581646	1					
ANR	8581785	Argument	"get_bits ( & gb , 8 )"		8581646	1					
ANR	8581786	CallExpression	"get_bits ( & gb , 8 )"		8581646	0					
ANR	8581787	Callee	get_bits		8581646	0					
ANR	8581788	Identifier	get_bits		8581646	0					
ANR	8581789	ArgumentList	& gb		8581646	1					
ANR	8581790	Argument	& gb		8581646	0					
ANR	8581791	UnaryOperationExpression	& gb		8581646	0					
ANR	8581792	UnaryOperator	&		8581646	0					
ANR	8581793	Identifier	gb		8581646	1					
ANR	8581794	Argument	8		8581646	1					
ANR	8581795	PrimaryExpression	8		8581646	0					
ANR	8581796	ExpressionStatement	"window_type = get_bits ( & gb , WINDOW_TYPE_BITS )"	49:4:877:922	8581646	13	True				
ANR	8581797	AssignmentExpression	"window_type = get_bits ( & gb , WINDOW_TYPE_BITS )"		8581646	0		=			
ANR	8581798	Identifier	window_type		8581646	0					
ANR	8581799	CallExpression	"get_bits ( & gb , WINDOW_TYPE_BITS )"		8581646	1					
ANR	8581800	Callee	get_bits		8581646	0					
ANR	8581801	Identifier	get_bits		8581646	0					
ANR	8581802	ArgumentList	& gb		8581646	1					
ANR	8581803	Argument	& gb		8581646	0					
ANR	8581804	UnaryOperationExpression	& gb		8581646	0					
ANR	8581805	UnaryOperator	&		8581646	0					
ANR	8581806	Identifier	gb		8581646	1					
ANR	8581807	Argument	WINDOW_TYPE_BITS		8581646	1					
ANR	8581808	Identifier	WINDOW_TYPE_BITS		8581646	0					
ANR	8581809	IfStatement	if ( window_type > 8 )		8581646	14					
ANR	8581810	Condition	window_type > 8	53:8:935:949	8581646	0	True				
ANR	8581811	RelationalExpression	window_type > 8		8581646	0		>			
ANR	8581812	Identifier	window_type		8581646	0					
ANR	8581813	PrimaryExpression	8		8581646	1					
ANR	8581814	CompoundStatement		49:25:822:822	8581646	1					
ANR	8581815	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid window type, broken sample?\\n"" )"	55:8:963:1031	8581646	0	True				
ANR	8581816	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid window type, broken sample?\\n"" )"		8581646	0					
ANR	8581817	Callee	av_log		8581646	0					
ANR	8581818	Identifier	av_log		8581646	0					
ANR	8581819	ArgumentList	avctx		8581646	1					
ANR	8581820	Argument	avctx		8581646	0					
ANR	8581821	Identifier	avctx		8581646	0					
ANR	8581822	Argument	AV_LOG_ERROR		8581646	1					
ANR	8581823	Identifier	AV_LOG_ERROR		8581646	0					
ANR	8581824	Argument	"""Invalid window type, broken sample?\\n"""		8581646	2					
ANR	8581825	PrimaryExpression	"""Invalid window type, broken sample?\\n"""		8581646	0					
ANR	8581826	ReturnStatement	return - 1 ;	57:8:1042:1051	8581646	1	True				
ANR	8581827	UnaryOperationExpression	- 1		8581646	0					
ANR	8581828	UnaryOperator	-		8581646	0					
ANR	8581829	PrimaryExpression	1		8581646	1					
ANR	8581830	ExpressionStatement	ftype = wtype_to_ftype_table [ window_type ]	63:4:1067:1108	8581646	15	True				
ANR	8581831	AssignmentExpression	ftype = wtype_to_ftype_table [ window_type ]		8581646	0		=			
ANR	8581832	Identifier	ftype		8581646	0					
ANR	8581833	ArrayIndexing	wtype_to_ftype_table [ window_type ]		8581646	1					
ANR	8581834	Identifier	wtype_to_ftype_table		8581646	0					
ANR	8581835	Identifier	window_type		8581646	1					
ANR	8581836	ExpressionStatement	"read_and_decode_spectrum ( tctx , & gb , tctx -> spectrum , ftype )"	67:4:1117:1175	8581646	16	True				
ANR	8581837	CallExpression	"read_and_decode_spectrum ( tctx , & gb , tctx -> spectrum , ftype )"		8581646	0					
ANR	8581838	Callee	read_and_decode_spectrum		8581646	0					
ANR	8581839	Identifier	read_and_decode_spectrum		8581646	0					
ANR	8581840	ArgumentList	tctx		8581646	1					
ANR	8581841	Argument	tctx		8581646	0					
ANR	8581842	Identifier	tctx		8581646	0					
ANR	8581843	Argument	& gb		8581646	1					
ANR	8581844	UnaryOperationExpression	& gb		8581646	0					
ANR	8581845	UnaryOperator	&		8581646	0					
ANR	8581846	Identifier	gb		8581646	1					
ANR	8581847	Argument	tctx -> spectrum		8581646	2					
ANR	8581848	PtrMemberAccess	tctx -> spectrum		8581646	0					
ANR	8581849	Identifier	tctx		8581646	0					
ANR	8581850	Identifier	spectrum		8581646	1					
ANR	8581851	Argument	ftype		8581646	3					
ANR	8581852	Identifier	ftype		8581646	0					
ANR	8581853	ExpressionStatement	"imdct_output ( tctx , ftype , window_type , out )"	71:4:1184:1227	8581646	17	True				
ANR	8581854	CallExpression	"imdct_output ( tctx , ftype , window_type , out )"		8581646	0					
ANR	8581855	Callee	imdct_output		8581646	0					
ANR	8581856	Identifier	imdct_output		8581646	0					
ANR	8581857	ArgumentList	tctx		8581646	1					
ANR	8581858	Argument	tctx		8581646	0					
ANR	8581859	Identifier	tctx		8581646	0					
ANR	8581860	Argument	ftype		8581646	1					
ANR	8581861	Identifier	ftype		8581646	0					
ANR	8581862	Argument	window_type		8581646	2					
ANR	8581863	Identifier	window_type		8581646	0					
ANR	8581864	Argument	out		8581646	3					
ANR	8581865	Identifier	out		8581646	0					
ANR	8581866	Statement	FFSWAP	75:4:1236:1241	8581646	18	True				
ANR	8581867	Statement	(	75:10:1242:1242	8581646	19	True				
ANR	8581868	Statement	float	75:11:1243:1247	8581646	20	True				
ANR	8581869	Statement	*	75:16:1248:1248	8581646	21	True				
ANR	8581870	Statement	","	75:17:1249:1249	8581646	22	True				
ANR	8581871	Statement	tctx	75:19:1251:1254	8581646	23	True				
ANR	8581872	Statement	->	75:23:1255:1256	8581646	24	True				
ANR	8581873	Statement	curr_frame	75:25:1257:1266	8581646	25	True				
ANR	8581874	Statement	","	75:35:1267:1267	8581646	26	True				
ANR	8581875	Statement	tctx	75:37:1269:1272	8581646	27	True				
ANR	8581876	Statement	->	75:41:1273:1274	8581646	28	True				
ANR	8581877	Statement	prev_frame	75:43:1275:1284	8581646	29	True				
ANR	8581878	Statement	)	75:53:1285:1285	8581646	30	True				
ANR	8581879	ExpressionStatement		75:54:1286:1286	8581646	31	True				
ANR	8581880	IfStatement	if ( tctx -> avctx -> frame_number < 2 )		8581646	32					
ANR	8581881	Condition	tctx -> avctx -> frame_number < 2	79:8:1299:1327	8581646	0	True				
ANR	8581882	RelationalExpression	tctx -> avctx -> frame_number < 2		8581646	0		<			
ANR	8581883	PtrMemberAccess	tctx -> avctx -> frame_number		8581646	0					
ANR	8581884	PtrMemberAccess	tctx -> avctx		8581646	0					
ANR	8581885	Identifier	tctx		8581646	0					
ANR	8581886	Identifier	avctx		8581646	1					
ANR	8581887	Identifier	frame_number		8581646	1					
ANR	8581888	PrimaryExpression	2		8581646	1					
ANR	8581889	CompoundStatement		75:39:1200:1200	8581646	1					
ANR	8581890	ExpressionStatement	* data_size = 0	81:8:1341:1353	8581646	0	True				
ANR	8581891	AssignmentExpression	* data_size = 0		8581646	0		=			
ANR	8581892	UnaryOperationExpression	* data_size		8581646	0					
ANR	8581893	UnaryOperator	*		8581646	0					
ANR	8581894	Identifier	data_size		8581646	1					
ANR	8581895	PrimaryExpression	0		8581646	1					
ANR	8581896	ReturnStatement	return buf_size ;	83:8:1364:1379	8581646	1	True				
ANR	8581897	Identifier	buf_size		8581646	0					
ANR	8581898	ExpressionStatement	* data_size = mtab -> size * avctx -> channels * 4	89:4:1395:1436	8581646	33	True				
ANR	8581899	AssignmentExpression	* data_size = mtab -> size * avctx -> channels * 4		8581646	0		=			
ANR	8581900	UnaryOperationExpression	* data_size		8581646	0					
ANR	8581901	UnaryOperator	*		8581646	0					
ANR	8581902	Identifier	data_size		8581646	1					
ANR	8581903	MultiplicativeExpression	mtab -> size * avctx -> channels * 4		8581646	1		*			
ANR	8581904	PtrMemberAccess	mtab -> size		8581646	0					
ANR	8581905	Identifier	mtab		8581646	0					
ANR	8581906	Identifier	size		8581646	1					
ANR	8581907	MultiplicativeExpression	avctx -> channels * 4		8581646	1		*			
ANR	8581908	PtrMemberAccess	avctx -> channels		8581646	0					
ANR	8581909	Identifier	avctx		8581646	0					
ANR	8581910	Identifier	channels		8581646	1					
ANR	8581911	PrimaryExpression	4		8581646	1					
ANR	8581912	ReturnStatement	return buf_size ;	93:4:1445:1460	8581646	34	True				
ANR	8581913	Identifier	buf_size		8581646	0					
ANR	8581914	ReturnType	static int		8581646	1					
ANR	8581915	Identifier	twin_decode_frame		8581646	2					
ANR	8581916	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		8581646	3					
ANR	8581917	Parameter	AVCodecContext * avctx	1:29:29:50	8581646	0	True				
ANR	8581918	ParameterType	AVCodecContext *		8581646	0					
ANR	8581919	Identifier	avctx		8581646	1					
ANR	8581920	Parameter	void * data	1:53:53:62	8581646	1	True				
ANR	8581921	ParameterType	void *		8581646	0					
ANR	8581922	Identifier	data		8581646	1					
ANR	8581923	Parameter	int * data_size	3:29:95:108	8581646	2	True				
ANR	8581924	ParameterType	int *		8581646	0					
ANR	8581925	Identifier	data_size		8581646	1					
ANR	8581926	Parameter	AVPacket * avpkt	3:45:111:125	8581646	3	True				
ANR	8581927	ParameterType	AVPacket *		8581646	0					
ANR	8581928	Identifier	avpkt		8581646	1					
ANR	8581929	CFGEntryNode	ENTRY		8581646		True				
ANR	8581930	CFGExitNode	EXIT		8581646		True				
ANR	8581931	Symbol	* * tctx		8581646						
ANR	8581932	Symbol	data		8581646						
ANR	8581933	Symbol	& gb		8581646						
ANR	8581934	Symbol	WINDOW_TYPE_BITS		8581646						
ANR	8581935	Symbol	tctx		8581646						
ANR	8581936	Symbol	tctx -> mtab		8581646						
ANR	8581937	Symbol	FT_SHORT		8581646						
ANR	8581938	Symbol	get_bits		8581646						
ANR	8581939	Symbol	window_type		8581646						
ANR	8581940	Symbol	avpkt		8581646						
ANR	8581941	Symbol	* data_size		8581646						
ANR	8581942	Symbol	* tctx		8581646						
ANR	8581943	Symbol	out		8581646						
ANR	8581944	Symbol	tctx -> avctx -> frame_number		8581646						
ANR	8581945	Symbol	avctx -> channels		8581646						
ANR	8581946	Symbol	* wtype_to_ftype_table		8581646						
ANR	8581947	Symbol	wtype_to_ftype_table		8581646						
ANR	8581948	Symbol	mtab -> size		8581646						
ANR	8581949	Symbol	avpkt -> size		8581646						
ANR	8581950	Symbol	gb		8581646						
ANR	8581951	Symbol	avctx		8581646						
ANR	8581952	Symbol	FT_MEDIUM		8581646						
ANR	8581953	Symbol	* tctx -> avctx		8581646						
ANR	8581954	Symbol	tctx -> avctx		8581646						
ANR	8581955	Symbol	* mtab		8581646						
ANR	8581956	Symbol	data_size		8581646						
ANR	8581957	Symbol	* avpkt		8581646						
ANR	8581958	Symbol	FT_LONG		8581646						
ANR	8581959	Symbol	AV_LOG_ERROR		8581646						
ANR	8581960	Symbol	buf_size		8581646						
ANR	8581961	Symbol	* window_type		8581646						
ANR	8581962	Symbol	avctx -> priv_data		8581646						
ANR	8581963	Symbol	avctx -> sample_rate		8581646						
ANR	8581964	Symbol	EINVAL		8581646						
ANR	8581965	Symbol	buf		8581646						
ANR	8581966	Symbol	* avctx		8581646						
ANR	8581967	Symbol	ftype		8581646						
ANR	8581968	Symbol	avctx -> bit_rate		8581646						
ANR	8581969	Symbol	tctx -> spectrum		8581646						
ANR	8581970	Symbol	avpkt -> data		8581646						
ANR	8581971	Symbol	mtab		8581646						
ANR	8581972	Symbol	AVERROR		8581646						
