command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	561325	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ape_decode_value_0.c								
ANR	561326	Function	ape_decode_value	1:0:0:1855							
ANR	561327	FunctionDef	"ape_decode_value (APEContext * ctx , APERice * rice)"		561326	0					
ANR	561328	CompoundStatement		3:0:68:1855	561326	0					
ANR	561329	IdentifierDeclStatement	"int x , overflow ;"	5:4:75:90	561326	0	True				
ANR	561330	IdentifierDecl	x		561326	0					
ANR	561331	IdentifierDeclType	int		561326	0					
ANR	561332	Identifier	x		561326	1					
ANR	561333	IdentifierDecl	overflow		561326	1					
ANR	561334	IdentifierDeclType	int		561326	0					
ANR	561335	Identifier	overflow		561326	1					
ANR	561336	IfStatement	if ( ctx -> fileversion < 3990 )		561326	1					
ANR	561337	Condition	ctx -> fileversion < 3990	9:8:103:125	561326	0	True				
ANR	561338	RelationalExpression	ctx -> fileversion < 3990		561326	0		<			
ANR	561339	PtrMemberAccess	ctx -> fileversion		561326	0					
ANR	561340	Identifier	ctx		561326	0					
ANR	561341	Identifier	fileversion		561326	1					
ANR	561342	PrimaryExpression	3990		561326	1					
ANR	561343	CompoundStatement		9:8:70:78	561326	1					
ANR	561344	IdentifierDeclStatement	int tmpk ;	11:8:139:147	561326	0	True				
ANR	561345	IdentifierDecl	tmpk		561326	0					
ANR	561346	IdentifierDeclType	int		561326	0					
ANR	561347	Identifier	tmpk		561326	1					
ANR	561348	ExpressionStatement	"overflow = range_get_symbol ( ctx , counts_3970 , counts_diff_3970 )"	15:8:160:223	561326	1	True				
ANR	561349	AssignmentExpression	"overflow = range_get_symbol ( ctx , counts_3970 , counts_diff_3970 )"		561326	0		=			
ANR	561350	Identifier	overflow		561326	0					
ANR	561351	CallExpression	"range_get_symbol ( ctx , counts_3970 , counts_diff_3970 )"		561326	1					
ANR	561352	Callee	range_get_symbol		561326	0					
ANR	561353	Identifier	range_get_symbol		561326	0					
ANR	561354	ArgumentList	ctx		561326	1					
ANR	561355	Argument	ctx		561326	0					
ANR	561356	Identifier	ctx		561326	0					
ANR	561357	Argument	counts_3970		561326	1					
ANR	561358	Identifier	counts_3970		561326	0					
ANR	561359	Argument	counts_diff_3970		561326	2					
ANR	561360	Identifier	counts_diff_3970		561326	0					
ANR	561361	IfStatement	if ( overflow == ( MODEL_ELEMENTS - 1 ) )		561326	2					
ANR	561362	Condition	overflow == ( MODEL_ELEMENTS - 1 )	19:12:240:271	561326	0	True				
ANR	561363	EqualityExpression	overflow == ( MODEL_ELEMENTS - 1 )		561326	0		==			
ANR	561364	Identifier	overflow		561326	0					
ANR	561365	AdditiveExpression	MODEL_ELEMENTS - 1		561326	1		-			
ANR	561366	Identifier	MODEL_ELEMENTS		561326	0					
ANR	561367	PrimaryExpression	1		561326	1					
ANR	561368	CompoundStatement		17:46:205:205	561326	1					
ANR	561369	ExpressionStatement	"tmpk = range_decode_bits ( ctx , 5 )"	21:12:289:321	561326	0	True				
ANR	561370	AssignmentExpression	"tmpk = range_decode_bits ( ctx , 5 )"		561326	0		=			
ANR	561371	Identifier	tmpk		561326	0					
ANR	561372	CallExpression	"range_decode_bits ( ctx , 5 )"		561326	1					
ANR	561373	Callee	range_decode_bits		561326	0					
ANR	561374	Identifier	range_decode_bits		561326	0					
ANR	561375	ArgumentList	ctx		561326	1					
ANR	561376	Argument	ctx		561326	0					
ANR	561377	Identifier	ctx		561326	0					
ANR	561378	Argument	5		561326	1					
ANR	561379	PrimaryExpression	5		561326	0					
ANR	561380	ExpressionStatement	overflow = 0	23:12:336:348	561326	1	True				
ANR	561381	AssignmentExpression	overflow = 0		561326	0		=			
ANR	561382	Identifier	overflow		561326	0					
ANR	561383	PrimaryExpression	0		561326	1					
ANR	561384	ElseStatement	else		561326	0					
ANR	561385	ExpressionStatement	tmpk = ( rice -> k < 1 ) ? 0 : rice -> k - 1	27:12:379:417	561326	0	True				
ANR	561386	AssignmentExpression	tmpk = ( rice -> k < 1 ) ? 0 : rice -> k - 1		561326	0		=			
ANR	561387	Identifier	tmpk		561326	0					
ANR	561388	ConditionalExpression	( rice -> k < 1 ) ? 0 : rice -> k - 1		561326	1					
ANR	561389	Condition	rice -> k < 1		561326	0					
ANR	561390	RelationalExpression	rice -> k < 1		561326	0		<			
ANR	561391	PtrMemberAccess	rice -> k		561326	0					
ANR	561392	Identifier	rice		561326	0					
ANR	561393	Identifier	k		561326	1					
ANR	561394	PrimaryExpression	1		561326	1					
ANR	561395	PrimaryExpression	0		561326	1					
ANR	561396	AdditiveExpression	rice -> k - 1		561326	2		-			
ANR	561397	PtrMemberAccess	rice -> k		561326	0					
ANR	561398	Identifier	rice		561326	0					
ANR	561399	Identifier	k		561326	1					
ANR	561400	PrimaryExpression	1		561326	1					
ANR	561401	IfStatement	if ( tmpk <= 16 )		561326	3					
ANR	561402	Condition	tmpk <= 16	31:12:434:443	561326	0	True				
ANR	561403	RelationalExpression	tmpk <= 16		561326	0		<=			
ANR	561404	Identifier	tmpk		561326	0					
ANR	561405	PrimaryExpression	16		561326	1					
ANR	561406	ExpressionStatement	"x = range_decode_bits ( ctx , tmpk )"	33:12:459:491	561326	1	True				
ANR	561407	AssignmentExpression	"x = range_decode_bits ( ctx , tmpk )"		561326	0		=			
ANR	561408	Identifier	x		561326	0					
ANR	561409	CallExpression	"range_decode_bits ( ctx , tmpk )"		561326	1					
ANR	561410	Callee	range_decode_bits		561326	0					
ANR	561411	Identifier	range_decode_bits		561326	0					
ANR	561412	ArgumentList	ctx		561326	1					
ANR	561413	Argument	ctx		561326	0					
ANR	561414	Identifier	ctx		561326	0					
ANR	561415	Argument	tmpk		561326	1					
ANR	561416	Identifier	tmpk		561326	0					
ANR	561417	ElseStatement	else		561326	0					
ANR	561418	CompoundStatement		33:13:438:438	561326	0					
ANR	561419	ExpressionStatement	"x = range_decode_bits ( ctx , 16 )"	37:12:522:552	561326	0	True				
ANR	561420	AssignmentExpression	"x = range_decode_bits ( ctx , 16 )"		561326	0		=			
ANR	561421	Identifier	x		561326	0					
ANR	561422	CallExpression	"range_decode_bits ( ctx , 16 )"		561326	1					
ANR	561423	Callee	range_decode_bits		561326	0					
ANR	561424	Identifier	range_decode_bits		561326	0					
ANR	561425	ArgumentList	ctx		561326	1					
ANR	561426	Argument	ctx		561326	0					
ANR	561427	Identifier	ctx		561326	0					
ANR	561428	Argument	16		561326	1					
ANR	561429	PrimaryExpression	16		561326	0					
ANR	561430	ExpressionStatement	"x |= ( range_decode_bits ( ctx , tmpk - 16 ) << 16 )"	39:12:567:613	561326	1	True				
ANR	561431	AssignmentExpression	"x |= ( range_decode_bits ( ctx , tmpk - 16 ) << 16 )"		561326	0		|=			
ANR	561432	Identifier	x		561326	0					
ANR	561433	ShiftExpression	"range_decode_bits ( ctx , tmpk - 16 ) << 16"		561326	1		<<			
ANR	561434	CallExpression	"range_decode_bits ( ctx , tmpk - 16 )"		561326	0					
ANR	561435	Callee	range_decode_bits		561326	0					
ANR	561436	Identifier	range_decode_bits		561326	0					
ANR	561437	ArgumentList	ctx		561326	1					
ANR	561438	Argument	ctx		561326	0					
ANR	561439	Identifier	ctx		561326	0					
ANR	561440	Argument	tmpk - 16		561326	1					
ANR	561441	AdditiveExpression	tmpk - 16		561326	0		-			
ANR	561442	Identifier	tmpk		561326	0					
ANR	561443	PrimaryExpression	16		561326	1					
ANR	561444	PrimaryExpression	16		561326	1					
ANR	561445	ExpressionStatement	x += overflow << tmpk	43:8:635:656	561326	4	True				
ANR	561446	AssignmentExpression	x += overflow << tmpk		561326	0		+=			
ANR	561447	Identifier	x		561326	0					
ANR	561448	ShiftExpression	overflow << tmpk		561326	1		<<			
ANR	561449	Identifier	overflow		561326	0					
ANR	561450	Identifier	tmpk		561326	1					
ANR	561451	ElseStatement	else		561326	0					
ANR	561452	CompoundStatement		45:8:612:627	561326	0					
ANR	561453	IdentifierDeclStatement	"int base , pivot ;"	47:8:681:696	561326	0	True				
ANR	561454	IdentifierDecl	base		561326	0					
ANR	561455	IdentifierDeclType	int		561326	0					
ANR	561456	Identifier	base		561326	1					
ANR	561457	IdentifierDecl	pivot		561326	1					
ANR	561458	IdentifierDeclType	int		561326	0					
ANR	561459	Identifier	pivot		561326	1					
ANR	561460	ExpressionStatement	pivot = rice -> ksum >> 5	51:8:709:732	561326	1	True				
ANR	561461	AssignmentExpression	pivot = rice -> ksum >> 5		561326	0		=			
ANR	561462	Identifier	pivot		561326	0					
ANR	561463	ShiftExpression	rice -> ksum >> 5		561326	1		>>			
ANR	561464	PtrMemberAccess	rice -> ksum		561326	0					
ANR	561465	Identifier	rice		561326	0					
ANR	561466	Identifier	ksum		561326	1					
ANR	561467	PrimaryExpression	5		561326	1					
ANR	561468	IfStatement	if ( pivot == 0 )		561326	2					
ANR	561469	Condition	pivot == 0	53:12:747:756	561326	0	True				
ANR	561470	EqualityExpression	pivot == 0		561326	0		==			
ANR	561471	Identifier	pivot		561326	0					
ANR	561472	PrimaryExpression	0		561326	1					
ANR	561473	ExpressionStatement	pivot = 1	55:12:772:781	561326	1	True				
ANR	561474	AssignmentExpression	pivot = 1		561326	0		=			
ANR	561475	Identifier	pivot		561326	0					
ANR	561476	PrimaryExpression	1		561326	1					
ANR	561477	ExpressionStatement	"overflow = range_get_symbol ( ctx , counts_3980 , counts_diff_3980 )"	59:8:794:857	561326	3	True				
ANR	561478	AssignmentExpression	"overflow = range_get_symbol ( ctx , counts_3980 , counts_diff_3980 )"		561326	0		=			
ANR	561479	Identifier	overflow		561326	0					
ANR	561480	CallExpression	"range_get_symbol ( ctx , counts_3980 , counts_diff_3980 )"		561326	1					
ANR	561481	Callee	range_get_symbol		561326	0					
ANR	561482	Identifier	range_get_symbol		561326	0					
ANR	561483	ArgumentList	ctx		561326	1					
ANR	561484	Argument	ctx		561326	0					
ANR	561485	Identifier	ctx		561326	0					
ANR	561486	Argument	counts_3980		561326	1					
ANR	561487	Identifier	counts_3980		561326	0					
ANR	561488	Argument	counts_diff_3980		561326	2					
ANR	561489	Identifier	counts_diff_3980		561326	0					
ANR	561490	IfStatement	if ( overflow == ( MODEL_ELEMENTS - 1 ) )		561326	4					
ANR	561491	Condition	overflow == ( MODEL_ELEMENTS - 1 )	63:12:874:905	561326	0	True				
ANR	561492	EqualityExpression	overflow == ( MODEL_ELEMENTS - 1 )		561326	0		==			
ANR	561493	Identifier	overflow		561326	0					
ANR	561494	AdditiveExpression	MODEL_ELEMENTS - 1		561326	1		-			
ANR	561495	Identifier	MODEL_ELEMENTS		561326	0					
ANR	561496	PrimaryExpression	1		561326	1					
ANR	561497	CompoundStatement		61:46:839:839	561326	1					
ANR	561498	ExpressionStatement	"overflow = range_decode_bits ( ctx , 16 ) << 16"	65:12:923:967	561326	0	True				
ANR	561499	AssignmentExpression	"overflow = range_decode_bits ( ctx , 16 ) << 16"		561326	0		=			
ANR	561500	Identifier	overflow		561326	0					
ANR	561501	ShiftExpression	"range_decode_bits ( ctx , 16 ) << 16"		561326	1		<<			
ANR	561502	CallExpression	"range_decode_bits ( ctx , 16 )"		561326	0					
ANR	561503	Callee	range_decode_bits		561326	0					
ANR	561504	Identifier	range_decode_bits		561326	0					
ANR	561505	ArgumentList	ctx		561326	1					
ANR	561506	Argument	ctx		561326	0					
ANR	561507	Identifier	ctx		561326	0					
ANR	561508	Argument	16		561326	1					
ANR	561509	PrimaryExpression	16		561326	0					
ANR	561510	PrimaryExpression	16		561326	1					
ANR	561511	ExpressionStatement	"overflow |= range_decode_bits ( ctx , 16 )"	67:12:982:1020	561326	1	True				
ANR	561512	AssignmentExpression	"overflow |= range_decode_bits ( ctx , 16 )"		561326	0		|=			
ANR	561513	Identifier	overflow		561326	0					
ANR	561514	CallExpression	"range_decode_bits ( ctx , 16 )"		561326	1					
ANR	561515	Callee	range_decode_bits		561326	0					
ANR	561516	Identifier	range_decode_bits		561326	0					
ANR	561517	ArgumentList	ctx		561326	1					
ANR	561518	Argument	ctx		561326	0					
ANR	561519	Identifier	ctx		561326	0					
ANR	561520	Argument	16		561326	1					
ANR	561521	PrimaryExpression	16		561326	0					
ANR	561522	IfStatement	if ( pivot < 0x10000 )		561326	5					
ANR	561523	Condition	pivot < 0x10000	73:12:1048:1062	561326	0	True				
ANR	561524	RelationalExpression	pivot < 0x10000		561326	0		<			
ANR	561525	Identifier	pivot		561326	0					
ANR	561526	PrimaryExpression	0x10000		561326	1					
ANR	561527	CompoundStatement		71:29:996:996	561326	1					
ANR	561528	ExpressionStatement	"base = range_decode_culfreq ( ctx , pivot )"	75:12:1080:1119	561326	0	True				
ANR	561529	AssignmentExpression	"base = range_decode_culfreq ( ctx , pivot )"		561326	0		=			
ANR	561530	Identifier	base		561326	0					
ANR	561531	CallExpression	"range_decode_culfreq ( ctx , pivot )"		561326	1					
ANR	561532	Callee	range_decode_culfreq		561326	0					
ANR	561533	Identifier	range_decode_culfreq		561326	0					
ANR	561534	ArgumentList	ctx		561326	1					
ANR	561535	Argument	ctx		561326	0					
ANR	561536	Identifier	ctx		561326	0					
ANR	561537	Argument	pivot		561326	1					
ANR	561538	Identifier	pivot		561326	0					
ANR	561539	ExpressionStatement	"range_decode_update ( ctx , 1 , base )"	77:12:1134:1167	561326	1	True				
ANR	561540	CallExpression	"range_decode_update ( ctx , 1 , base )"		561326	0					
ANR	561541	Callee	range_decode_update		561326	0					
ANR	561542	Identifier	range_decode_update		561326	0					
ANR	561543	ArgumentList	ctx		561326	1					
ANR	561544	Argument	ctx		561326	0					
ANR	561545	Identifier	ctx		561326	0					
ANR	561546	Argument	1		561326	1					
ANR	561547	PrimaryExpression	1		561326	0					
ANR	561548	Argument	base		561326	2					
ANR	561549	Identifier	base		561326	0					
ANR	561550	ElseStatement	else		561326	0					
ANR	561551	CompoundStatement		81:12:1174:1187	561326	0					
ANR	561552	IdentifierDeclStatement	"int base_hi = pivot , base_lo ;"	81:12:1200:1228	561326	0	True				
ANR	561553	IdentifierDecl	base_hi = pivot		561326	0					
ANR	561554	IdentifierDeclType	int		561326	0					
ANR	561555	Identifier	base_hi		561326	1					
ANR	561556	AssignmentExpression	base_hi = pivot		561326	2		=			
ANR	561557	Identifier	pivot		561326	0					
ANR	561558	Identifier	pivot		561326	1					
ANR	561559	IdentifierDecl	base_lo		561326	1					
ANR	561560	IdentifierDeclType	int		561326	0					
ANR	561561	Identifier	base_lo		561326	1					
ANR	561562	IdentifierDeclStatement	int bbits = 0 ;	83:12:1243:1256	561326	1	True				
ANR	561563	IdentifierDecl	bbits = 0		561326	0					
ANR	561564	IdentifierDeclType	int		561326	0					
ANR	561565	Identifier	bbits		561326	1					
ANR	561566	AssignmentExpression	bbits = 0		561326	2		=			
ANR	561567	Identifier	bbits		561326	0					
ANR	561568	PrimaryExpression	0		561326	1					
ANR	561569	WhileStatement	while ( base_hi & ~0xFFFF )		561326	2					
ANR	561570	Condition	base_hi & ~0xFFFF	87:19:1280:1296	561326	0	True				
ANR	561571	BitAndExpression	base_hi & ~0xFFFF		561326	0		&			
ANR	561572	Identifier	base_hi		561326	0					
ANR	561573	Identifier	~0xFFFF		561326	1					
ANR	561574	CompoundStatement		85:38:1230:1230	561326	1					
ANR	561575	ExpressionStatement	base_hi >>= 1	89:16:1318:1331	561326	0	True				
ANR	561576	AssignmentExpression	base_hi >>= 1		561326	0		>>=			
ANR	561577	Identifier	base_hi		561326	0					
ANR	561578	PrimaryExpression	1		561326	1					
ANR	561579	ExpressionStatement	bbits ++	91:16:1350:1357	561326	1	True				
ANR	561580	PostIncDecOperationExpression	bbits ++		561326	0					
ANR	561581	Identifier	bbits		561326	0					
ANR	561582	IncDec	++		561326	1					
ANR	561583	ExpressionStatement	"base_hi = range_decode_culfreq ( ctx , base_hi + 1 )"	95:12:1387:1435	561326	3	True				
ANR	561584	AssignmentExpression	"base_hi = range_decode_culfreq ( ctx , base_hi + 1 )"		561326	0		=			
ANR	561585	Identifier	base_hi		561326	0					
ANR	561586	CallExpression	"range_decode_culfreq ( ctx , base_hi + 1 )"		561326	1					
ANR	561587	Callee	range_decode_culfreq		561326	0					
ANR	561588	Identifier	range_decode_culfreq		561326	0					
ANR	561589	ArgumentList	ctx		561326	1					
ANR	561590	Argument	ctx		561326	0					
ANR	561591	Identifier	ctx		561326	0					
ANR	561592	Argument	base_hi + 1		561326	1					
ANR	561593	AdditiveExpression	base_hi + 1		561326	0		+			
ANR	561594	Identifier	base_hi		561326	0					
ANR	561595	PrimaryExpression	1		561326	1					
ANR	561596	ExpressionStatement	"range_decode_update ( ctx , 1 , base_hi )"	97:12:1450:1486	561326	4	True				
ANR	561597	CallExpression	"range_decode_update ( ctx , 1 , base_hi )"		561326	0					
ANR	561598	Callee	range_decode_update		561326	0					
ANR	561599	Identifier	range_decode_update		561326	0					
ANR	561600	ArgumentList	ctx		561326	1					
ANR	561601	Argument	ctx		561326	0					
ANR	561602	Identifier	ctx		561326	0					
ANR	561603	Argument	1		561326	1					
ANR	561604	PrimaryExpression	1		561326	0					
ANR	561605	Argument	base_hi		561326	2					
ANR	561606	Identifier	base_hi		561326	0					
ANR	561607	ExpressionStatement	"base_lo = range_decode_culfreq ( ctx , 1 << bbits )"	99:12:1501:1548	561326	5	True				
ANR	561608	AssignmentExpression	"base_lo = range_decode_culfreq ( ctx , 1 << bbits )"		561326	0		=			
ANR	561609	Identifier	base_lo		561326	0					
ANR	561610	CallExpression	"range_decode_culfreq ( ctx , 1 << bbits )"		561326	1					
ANR	561611	Callee	range_decode_culfreq		561326	0					
ANR	561612	Identifier	range_decode_culfreq		561326	0					
ANR	561613	ArgumentList	ctx		561326	1					
ANR	561614	Argument	ctx		561326	0					
ANR	561615	Identifier	ctx		561326	0					
ANR	561616	Argument	1 << bbits		561326	1					
ANR	561617	ShiftExpression	1 << bbits		561326	0		<<			
ANR	561618	PrimaryExpression	1		561326	0					
ANR	561619	Identifier	bbits		561326	1					
ANR	561620	ExpressionStatement	"range_decode_update ( ctx , 1 , base_lo )"	101:12:1563:1599	561326	6	True				
ANR	561621	CallExpression	"range_decode_update ( ctx , 1 , base_lo )"		561326	0					
ANR	561622	Callee	range_decode_update		561326	0					
ANR	561623	Identifier	range_decode_update		561326	0					
ANR	561624	ArgumentList	ctx		561326	1					
ANR	561625	Argument	ctx		561326	0					
ANR	561626	Identifier	ctx		561326	0					
ANR	561627	Argument	1		561326	1					
ANR	561628	PrimaryExpression	1		561326	0					
ANR	561629	Argument	base_lo		561326	2					
ANR	561630	Identifier	base_lo		561326	0					
ANR	561631	ExpressionStatement	base = ( base_hi << bbits ) + base_lo	105:12:1616:1651	561326	7	True				
ANR	561632	AssignmentExpression	base = ( base_hi << bbits ) + base_lo		561326	0		=			
ANR	561633	Identifier	base		561326	0					
ANR	561634	AdditiveExpression	( base_hi << bbits ) + base_lo		561326	1		+			
ANR	561635	ShiftExpression	base_hi << bbits		561326	0		<<			
ANR	561636	Identifier	base_hi		561326	0					
ANR	561637	Identifier	bbits		561326	1					
ANR	561638	Identifier	base_lo		561326	1					
ANR	561639	ExpressionStatement	x = base + overflow * pivot	111:8:1675:1702	561326	6	True				
ANR	561640	AssignmentExpression	x = base + overflow * pivot		561326	0		=			
ANR	561641	Identifier	x		561326	0					
ANR	561642	AdditiveExpression	base + overflow * pivot		561326	1		+			
ANR	561643	Identifier	base		561326	0					
ANR	561644	MultiplicativeExpression	overflow * pivot		561326	1		*			
ANR	561645	Identifier	overflow		561326	0					
ANR	561646	Identifier	pivot		561326	1					
ANR	561647	ExpressionStatement	"update_rice ( rice , x )"	117:4:1718:1738	561326	2	True				
ANR	561648	CallExpression	"update_rice ( rice , x )"		561326	0					
ANR	561649	Callee	update_rice		561326	0					
ANR	561650	Identifier	update_rice		561326	0					
ANR	561651	ArgumentList	rice		561326	1					
ANR	561652	Argument	rice		561326	0					
ANR	561653	Identifier	rice		561326	0					
ANR	561654	Argument	x		561326	1					
ANR	561655	Identifier	x		561326	0					
ANR	561656	IfStatement	if ( x & 1 )		561326	3					
ANR	561657	Condition	x & 1	123:8:1780:1784	561326	0	True				
ANR	561658	BitAndExpression	x & 1		561326	0		&			
ANR	561659	Identifier	x		561326	0					
ANR	561660	PrimaryExpression	1		561326	1					
ANR	561661	ReturnStatement	return ( x >> 1 ) + 1 ;	125:8:1796:1815	561326	1	True				
ANR	561662	AdditiveExpression	( x >> 1 ) + 1		561326	0		+			
ANR	561663	ShiftExpression	x >> 1		561326	0		>>			
ANR	561664	Identifier	x		561326	0					
ANR	561665	PrimaryExpression	1		561326	1					
ANR	561666	PrimaryExpression	1		561326	1					
ANR	561667	ElseStatement	else		561326	0					
ANR	561668	ReturnStatement	return - ( x >> 1 ) ;	129:8:1836:1852	561326	0	True				
ANR	561669	UnaryOperationExpression	- ( x >> 1 )		561326	0					
ANR	561670	UnaryOperator	-		561326	0					
ANR	561671	ShiftExpression	x >> 1		561326	1		>>			
ANR	561672	Identifier	x		561326	0					
ANR	561673	PrimaryExpression	1		561326	1					
ANR	561674	ReturnType	static inline int		561326	1					
ANR	561675	Identifier	ape_decode_value		561326	2					
ANR	561676	ParameterList	"APEContext * ctx , APERice * rice"		561326	3					
ANR	561677	Parameter	APEContext * ctx	1:35:35:49	561326	0	True				
ANR	561678	ParameterType	APEContext *		561326	0					
ANR	561679	Identifier	ctx		561326	1					
ANR	561680	Parameter	APERice * rice	1:52:52:64	561326	1	True				
ANR	561681	ParameterType	APERice *		561326	0					
ANR	561682	Identifier	rice		561326	1					
ANR	561683	CFGEntryNode	ENTRY		561326		True				
ANR	561684	CFGExitNode	EXIT		561326		True				
ANR	561685	Symbol	ctx -> fileversion		561326						
ANR	561686	Symbol	range_decode_culfreq		561326						
ANR	561687	Symbol	tmpk		561326						
ANR	561688	Symbol	base_hi		561326						
ANR	561689	Symbol	ctx		561326						
ANR	561690	Symbol	rice -> ksum		561326						
ANR	561691	Symbol	rice		561326						
ANR	561692	Symbol	rice -> k		561326						
ANR	561693	Symbol	* rice		561326						
ANR	561694	Symbol	range_get_symbol		561326						
ANR	561695	Symbol	counts_3980		561326						
ANR	561696	Symbol	* ctx		561326						
ANR	561697	Symbol	counts_3970		561326						
ANR	561698	Symbol	range_decode_bits		561326						
ANR	561699	Symbol	overflow		561326						
ANR	561700	Symbol	~0xFFFF		561326						
ANR	561701	Symbol	x		561326						
ANR	561702	Symbol	counts_diff_3980		561326						
ANR	561703	Symbol	pivot		561326						
ANR	561704	Symbol	counts_diff_3970		561326						
ANR	561705	Symbol	bbits		561326						
ANR	561706	Symbol	base_lo		561326						
ANR	561707	Symbol	MODEL_ELEMENTS		561326						
ANR	561708	Symbol	base		561326						
