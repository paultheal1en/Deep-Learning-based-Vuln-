command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1076417	File	/home/p4ultr4n/workplace/ReVeal/raw_code/block_load_1.c								
ANR	1076418	Function	block_load	1:0:0:1697							
ANR	1076419	FunctionDef	"block_load (QEMUFile * f , void * opaque , int version_id)"		1076418	0					
ANR	1076420	CompoundStatement		3:0:66:1697	1076418	0					
ANR	1076421	Statement	static	5:4:73:78	1076418	0	True				
ANR	1076422	IdentifierDeclStatement	int banner_printed ;	5:11:80:98	1076418	1	True				
ANR	1076423	IdentifierDecl	banner_printed		1076418	0					
ANR	1076424	IdentifierDeclType	int		1076418	0					
ANR	1076425	Identifier	banner_printed		1076418	1					
ANR	1076426	IdentifierDeclStatement	"int len , flags ;"	7:4:105:119	1076418	2	True				
ANR	1076427	IdentifierDecl	len		1076418	0					
ANR	1076428	IdentifierDeclType	int		1076418	0					
ANR	1076429	Identifier	len		1076418	1					
ANR	1076430	IdentifierDecl	flags		1076418	1					
ANR	1076431	IdentifierDeclType	int		1076418	0					
ANR	1076432	Identifier	flags		1076418	1					
ANR	1076433	IdentifierDeclStatement	char device_name [ 256 ] ;	9:4:126:147	1076418	3	True				
ANR	1076434	IdentifierDecl	device_name [ 256 ]		1076418	0					
ANR	1076435	IdentifierDeclType	char [ 256 ]		1076418	0					
ANR	1076436	Identifier	device_name		1076418	1					
ANR	1076437	PrimaryExpression	256		1076418	2					
ANR	1076438	IdentifierDeclStatement	int64_t addr ;	11:4:154:166	1076418	4	True				
ANR	1076439	IdentifierDecl	addr		1076418	0					
ANR	1076440	IdentifierDeclType	int64_t		1076418	0					
ANR	1076441	Identifier	addr		1076418	1					
ANR	1076442	IdentifierDeclStatement	BlockDriverState * bs ;	13:4:173:193	1076418	5	True				
ANR	1076443	IdentifierDecl	* bs		1076418	0					
ANR	1076444	IdentifierDeclType	BlockDriverState *		1076418	0					
ANR	1076445	Identifier	bs		1076418	1					
ANR	1076446	IdentifierDeclStatement	uint8_t * buf ;	15:4:200:212	1076418	6	True				
ANR	1076447	IdentifierDecl	* buf		1076418	0					
ANR	1076448	IdentifierDeclType	uint8_t *		1076418	0					
ANR	1076449	Identifier	buf		1076418	1					
ANR	1076450	DoStatement	do		1076418	7					
ANR	1076451	CompoundStatement		17:7:157:157	1076418	0					
ANR	1076452	ExpressionStatement	addr = qemu_get_be64 ( f )	21:8:235:258	1076418	0	True				
ANR	1076453	AssignmentExpression	addr = qemu_get_be64 ( f )		1076418	0		=			
ANR	1076454	Identifier	addr		1076418	0					
ANR	1076455	CallExpression	qemu_get_be64 ( f )		1076418	1					
ANR	1076456	Callee	qemu_get_be64		1076418	0					
ANR	1076457	Identifier	qemu_get_be64		1076418	0					
ANR	1076458	ArgumentList	f		1076418	1					
ANR	1076459	Argument	f		1076418	0					
ANR	1076460	Identifier	f		1076418	0					
ANR	1076461	ExpressionStatement	flags = addr & ~BDRV_SECTOR_MASK	25:8:271:303	1076418	1	True				
ANR	1076462	AssignmentExpression	flags = addr & ~BDRV_SECTOR_MASK		1076418	0		=			
ANR	1076463	Identifier	flags		1076418	0					
ANR	1076464	BitAndExpression	addr & ~BDRV_SECTOR_MASK		1076418	1		&			
ANR	1076465	Identifier	addr		1076418	0					
ANR	1076466	Identifier	~BDRV_SECTOR_MASK		1076418	1					
ANR	1076467	ExpressionStatement	addr >>= BDRV_SECTOR_BITS	27:8:314:339	1076418	2	True				
ANR	1076468	AssignmentExpression	addr >>= BDRV_SECTOR_BITS		1076418	0		>>=			
ANR	1076469	Identifier	addr		1076418	0					
ANR	1076470	Identifier	BDRV_SECTOR_BITS		1076418	1					
ANR	1076471	IfStatement	if ( flags & BLK_MIG_FLAG_DEVICE_BLOCK )		1076418	3					
ANR	1076472	Condition	flags & BLK_MIG_FLAG_DEVICE_BLOCK	31:12:356:388	1076418	0	True				
ANR	1076473	BitAndExpression	flags & BLK_MIG_FLAG_DEVICE_BLOCK		1076418	0		&			
ANR	1076474	Identifier	flags		1076418	0					
ANR	1076475	Identifier	BLK_MIG_FLAG_DEVICE_BLOCK		1076418	1					
ANR	1076476	CompoundStatement		31:12:339:346	1076418	1					
ANR	1076477	IdentifierDeclStatement	int ret ;	33:12:406:413	1076418	0	True				
ANR	1076478	IdentifierDecl	ret		1076418	0					
ANR	1076479	IdentifierDeclType	int		1076418	0					
ANR	1076480	Identifier	ret		1076418	1					
ANR	1076481	ExpressionStatement	len = qemu_get_byte ( f )	37:12:463:485	1076418	1	True				
ANR	1076482	AssignmentExpression	len = qemu_get_byte ( f )		1076418	0		=			
ANR	1076483	Identifier	len		1076418	0					
ANR	1076484	CallExpression	qemu_get_byte ( f )		1076418	1					
ANR	1076485	Callee	qemu_get_byte		1076418	0					
ANR	1076486	Identifier	qemu_get_byte		1076418	0					
ANR	1076487	ArgumentList	f		1076418	1					
ANR	1076488	Argument	f		1076418	0					
ANR	1076489	Identifier	f		1076418	0					
ANR	1076490	ExpressionStatement	"qemu_get_buffer ( f , ( uint8_t * ) device_name , len )"	39:12:500:547	1076418	2	True				
ANR	1076491	CallExpression	"qemu_get_buffer ( f , ( uint8_t * ) device_name , len )"		1076418	0					
ANR	1076492	Callee	qemu_get_buffer		1076418	0					
ANR	1076493	Identifier	qemu_get_buffer		1076418	0					
ANR	1076494	ArgumentList	f		1076418	1					
ANR	1076495	Argument	f		1076418	0					
ANR	1076496	Identifier	f		1076418	0					
ANR	1076497	Argument	( uint8_t * ) device_name		1076418	1					
ANR	1076498	CastExpression	( uint8_t * ) device_name		1076418	0					
ANR	1076499	CastTarget	uint8_t *		1076418	0					
ANR	1076500	Identifier	device_name		1076418	1					
ANR	1076501	Argument	len		1076418	2					
ANR	1076502	Identifier	len		1076418	0					
ANR	1076503	ExpressionStatement	device_name [ len ] = '\\0'	41:12:562:585	1076418	3	True				
ANR	1076504	AssignmentExpression	device_name [ len ] = '\\0'		1076418	0		=			
ANR	1076505	ArrayIndexing	device_name [ len ]		1076418	0					
ANR	1076506	Identifier	device_name		1076418	0					
ANR	1076507	Identifier	len		1076418	1					
ANR	1076508	PrimaryExpression	'\\0'		1076418	1					
ANR	1076509	ExpressionStatement	bs = bdrv_find ( device_name )	45:12:602:629	1076418	4	True				
ANR	1076510	AssignmentExpression	bs = bdrv_find ( device_name )		1076418	0		=			
ANR	1076511	Identifier	bs		1076418	0					
ANR	1076512	CallExpression	bdrv_find ( device_name )		1076418	1					
ANR	1076513	Callee	bdrv_find		1076418	0					
ANR	1076514	Identifier	bdrv_find		1076418	0					
ANR	1076515	ArgumentList	device_name		1076418	1					
ANR	1076516	Argument	device_name		1076418	0					
ANR	1076517	Identifier	device_name		1076418	0					
ANR	1076518	IfStatement	if ( ! bs )		1076418	5					
ANR	1076519	Condition	! bs	47:16:648:650	1076418	0	True				
ANR	1076520	UnaryOperationExpression	! bs		1076418	0					
ANR	1076521	UnaryOperator	!		1076418	0					
ANR	1076522	Identifier	bs		1076418	1					
ANR	1076523	CompoundStatement		45:21:586:586	1076418	1					
ANR	1076524	ExpressionStatement	"fprintf ( stderr , ""Error unknown block device %s\\n"" , device_name )"	49:16:672:760	1076418	0	True				
ANR	1076525	CallExpression	"fprintf ( stderr , ""Error unknown block device %s\\n"" , device_name )"		1076418	0					
ANR	1076526	Callee	fprintf		1076418	0					
ANR	1076527	Identifier	fprintf		1076418	0					
ANR	1076528	ArgumentList	stderr		1076418	1					
ANR	1076529	Argument	stderr		1076418	0					
ANR	1076530	Identifier	stderr		1076418	0					
ANR	1076531	Argument	"""Error unknown block device %s\\n"""		1076418	1					
ANR	1076532	PrimaryExpression	"""Error unknown block device %s\\n"""		1076418	0					
ANR	1076533	Argument	device_name		1076418	2					
ANR	1076534	Identifier	device_name		1076418	0					
ANR	1076535	ReturnStatement	return - EINVAL ;	53:16:779:793	1076418	1	True				
ANR	1076536	UnaryOperationExpression	- EINVAL		1076418	0					
ANR	1076537	UnaryOperator	-		1076418	0					
ANR	1076538	Identifier	EINVAL		1076418	1					
ANR	1076539	ExpressionStatement	buf = qemu_malloc ( BLOCK_SIZE )	59:12:825:854	1076418	6	True				
ANR	1076540	AssignmentExpression	buf = qemu_malloc ( BLOCK_SIZE )		1076418	0		=			
ANR	1076541	Identifier	buf		1076418	0					
ANR	1076542	CallExpression	qemu_malloc ( BLOCK_SIZE )		1076418	1					
ANR	1076543	Callee	qemu_malloc		1076418	0					
ANR	1076544	Identifier	qemu_malloc		1076418	0					
ANR	1076545	ArgumentList	BLOCK_SIZE		1076418	1					
ANR	1076546	Argument	BLOCK_SIZE		1076418	0					
ANR	1076547	Identifier	BLOCK_SIZE		1076418	0					
ANR	1076548	ExpressionStatement	"qemu_get_buffer ( f , buf , BLOCK_SIZE )"	63:12:871:906	1076418	7	True				
ANR	1076549	CallExpression	"qemu_get_buffer ( f , buf , BLOCK_SIZE )"		1076418	0					
ANR	1076550	Callee	qemu_get_buffer		1076418	0					
ANR	1076551	Identifier	qemu_get_buffer		1076418	0					
ANR	1076552	ArgumentList	f		1076418	1					
ANR	1076553	Argument	f		1076418	0					
ANR	1076554	Identifier	f		1076418	0					
ANR	1076555	Argument	buf		1076418	1					
ANR	1076556	Identifier	buf		1076418	0					
ANR	1076557	Argument	BLOCK_SIZE		1076418	2					
ANR	1076558	Identifier	BLOCK_SIZE		1076418	0					
ANR	1076559	ExpressionStatement	"ret = bdrv_write ( bs , addr , buf , BDRV_SECTORS_PER_DIRTY_CHUNK )"	65:12:921:982	1076418	8	True				
ANR	1076560	AssignmentExpression	"ret = bdrv_write ( bs , addr , buf , BDRV_SECTORS_PER_DIRTY_CHUNK )"		1076418	0		=			
ANR	1076561	Identifier	ret		1076418	0					
ANR	1076562	CallExpression	"bdrv_write ( bs , addr , buf , BDRV_SECTORS_PER_DIRTY_CHUNK )"		1076418	1					
ANR	1076563	Callee	bdrv_write		1076418	0					
ANR	1076564	Identifier	bdrv_write		1076418	0					
ANR	1076565	ArgumentList	bs		1076418	1					
ANR	1076566	Argument	bs		1076418	0					
ANR	1076567	Identifier	bs		1076418	0					
ANR	1076568	Argument	addr		1076418	1					
ANR	1076569	Identifier	addr		1076418	0					
ANR	1076570	Argument	buf		1076418	2					
ANR	1076571	Identifier	buf		1076418	0					
ANR	1076572	Argument	BDRV_SECTORS_PER_DIRTY_CHUNK		1076418	3					
ANR	1076573	Identifier	BDRV_SECTORS_PER_DIRTY_CHUNK		1076418	0					
ANR	1076574	ExpressionStatement	qemu_free ( buf )	69:12:999:1013	1076418	9	True				
ANR	1076575	CallExpression	qemu_free ( buf )		1076418	0					
ANR	1076576	Callee	qemu_free		1076418	0					
ANR	1076577	Identifier	qemu_free		1076418	0					
ANR	1076578	ArgumentList	buf		1076418	1					
ANR	1076579	Argument	buf		1076418	0					
ANR	1076580	Identifier	buf		1076418	0					
ANR	1076581	IfStatement	if ( ret < 0 )		1076418	10					
ANR	1076582	Condition	ret < 0	71:16:1032:1038	1076418	0	True				
ANR	1076583	RelationalExpression	ret < 0		1076418	0		<			
ANR	1076584	Identifier	ret		1076418	0					
ANR	1076585	PrimaryExpression	0		1076418	1					
ANR	1076586	CompoundStatement		69:25:974:974	1076418	1					
ANR	1076587	ReturnStatement	return ret ;	73:16:1060:1070	1076418	0	True				
ANR	1076588	Identifier	ret		1076418	0					
ANR	1076589	ElseStatement	else		1076418	0					
ANR	1076590	IfStatement	if ( flags & BLK_MIG_FLAG_PROGRESS )		1076418	0					
ANR	1076591	Condition	flags & BLK_MIG_FLAG_PROGRESS	77:19:1107:1135	1076418	0	True				
ANR	1076592	BitAndExpression	flags & BLK_MIG_FLAG_PROGRESS		1076418	0		&			
ANR	1076593	Identifier	flags		1076418	0					
ANR	1076594	Identifier	BLK_MIG_FLAG_PROGRESS		1076418	1					
ANR	1076595	CompoundStatement		75:50:1071:1071	1076418	1					
ANR	1076596	IfStatement	if ( ! banner_printed )		1076418	0					
ANR	1076597	Condition	! banner_printed	79:16:1157:1171	1076418	0	True				
ANR	1076598	UnaryOperationExpression	! banner_printed		1076418	0					
ANR	1076599	UnaryOperator	!		1076418	0					
ANR	1076600	Identifier	banner_printed		1076418	1					
ANR	1076601	CompoundStatement		77:33:1107:1107	1076418	1					
ANR	1076602	ExpressionStatement	"printf ( ""Receiving block device images\\n"" )"	81:16:1193:1234	1076418	0	True				
ANR	1076603	CallExpression	"printf ( ""Receiving block device images\\n"" )"		1076418	0					
ANR	1076604	Callee	printf		1076418	0					
ANR	1076605	Identifier	printf		1076418	0					
ANR	1076606	ArgumentList	"""Receiving block device images\\n"""		1076418	1					
ANR	1076607	Argument	"""Receiving block device images\\n"""		1076418	0					
ANR	1076608	PrimaryExpression	"""Receiving block device images\\n"""		1076418	0					
ANR	1076609	ExpressionStatement	banner_printed = 1	83:16:1253:1271	1076418	1	True				
ANR	1076610	AssignmentExpression	banner_printed = 1		1076418	0		=			
ANR	1076611	Identifier	banner_printed		1076418	0					
ANR	1076612	PrimaryExpression	1		1076418	1					
ANR	1076613	ExpressionStatement	"printf ( ""Completed %d %%%c"" , ( int ) addr , ( addr == 100 ) ? '\\n' : '\\r' )"	87:12:1301:1388	1076418	1	True				
ANR	1076614	CallExpression	"printf ( ""Completed %d %%%c"" , ( int ) addr , ( addr == 100 ) ? '\\n' : '\\r' )"		1076418	0					
ANR	1076615	Callee	printf		1076418	0					
ANR	1076616	Identifier	printf		1076418	0					
ANR	1076617	ArgumentList	"""Completed %d %%%c"""		1076418	1					
ANR	1076618	Argument	"""Completed %d %%%c"""		1076418	0					
ANR	1076619	PrimaryExpression	"""Completed %d %%%c"""		1076418	0					
ANR	1076620	Argument	( int ) addr		1076418	1					
ANR	1076621	CastExpression	( int ) addr		1076418	0					
ANR	1076622	CastTarget	int		1076418	0					
ANR	1076623	Identifier	addr		1076418	1					
ANR	1076624	Argument	( addr == 100 ) ? '\\n' : '\\r'		1076418	2					
ANR	1076625	ConditionalExpression	( addr == 100 ) ? '\\n' : '\\r'		1076418	0					
ANR	1076626	Condition	addr == 100		1076418	0					
ANR	1076627	EqualityExpression	addr == 100		1076418	0		==			
ANR	1076628	Identifier	addr		1076418	0					
ANR	1076629	PrimaryExpression	100		1076418	1					
ANR	1076630	PrimaryExpression	'\\n'		1076418	1					
ANR	1076631	PrimaryExpression	'\\r'		1076418	2					
ANR	1076632	ExpressionStatement	fflush ( stdout )	91:12:1403:1417	1076418	2	True				
ANR	1076633	CallExpression	fflush ( stdout )		1076418	0					
ANR	1076634	Callee	fflush		1076418	0					
ANR	1076635	Identifier	fflush		1076418	0					
ANR	1076636	ArgumentList	stdout		1076418	1					
ANR	1076637	Argument	stdout		1076418	0					
ANR	1076638	Identifier	stdout		1076418	0					
ANR	1076639	ElseStatement	else		1076418	0					
ANR	1076640	IfStatement	if ( ! ( flags & BLK_MIG_FLAG_EOS ) )		1076418	0					
ANR	1076641	Condition	! ( flags & BLK_MIG_FLAG_EOS )	93:19:1439:1465	1076418	0	True				
ANR	1076642	UnaryOperationExpression	! ( flags & BLK_MIG_FLAG_EOS )		1076418	0					
ANR	1076643	UnaryOperator	!		1076418	0					
ANR	1076644	BitAndExpression	flags & BLK_MIG_FLAG_EOS		1076418	1		&			
ANR	1076645	Identifier	flags		1076418	0					
ANR	1076646	Identifier	BLK_MIG_FLAG_EOS		1076418	1					
ANR	1076647	CompoundStatement		91:48:1401:1401	1076418	1					
ANR	1076648	ExpressionStatement	"fprintf ( stderr , ""Unknown flags\\n"" )"	95:12:1483:1517	1076418	0	True				
ANR	1076649	CallExpression	"fprintf ( stderr , ""Unknown flags\\n"" )"		1076418	0					
ANR	1076650	Callee	fprintf		1076418	0					
ANR	1076651	Identifier	fprintf		1076418	0					
ANR	1076652	ArgumentList	stderr		1076418	1					
ANR	1076653	Argument	stderr		1076418	0					
ANR	1076654	Identifier	stderr		1076418	0					
ANR	1076655	Argument	"""Unknown flags\\n"""		1076418	1					
ANR	1076656	PrimaryExpression	"""Unknown flags\\n"""		1076418	0					
ANR	1076657	ReturnStatement	return - EINVAL ;	97:12:1532:1546	1076418	1	True				
ANR	1076658	UnaryOperationExpression	- EINVAL		1076418	0					
ANR	1076659	UnaryOperator	-		1076418	0					
ANR	1076660	Identifier	EINVAL		1076418	1					
ANR	1076661	IfStatement	if ( qemu_file_has_error ( f ) )		1076418	4					
ANR	1076662	Condition	qemu_file_has_error ( f )	101:12:1572:1593	1076418	0	True				
ANR	1076663	CallExpression	qemu_file_has_error ( f )		1076418	0					
ANR	1076664	Callee	qemu_file_has_error		1076418	0					
ANR	1076665	Identifier	qemu_file_has_error		1076418	0					
ANR	1076666	ArgumentList	f		1076418	1					
ANR	1076667	Argument	f		1076418	0					
ANR	1076668	Identifier	f		1076418	0					
ANR	1076669	CompoundStatement		99:36:1529:1529	1076418	1					
ANR	1076670	ReturnStatement	return - EIO ;	103:12:1611:1622	1076418	0	True				
ANR	1076671	UnaryOperationExpression	- EIO		1076418	0					
ANR	1076672	UnaryOperator	-		1076418	0					
ANR	1076673	Identifier	EIO		1076418	1					
ANR	1076674	Condition	! ( flags & BLK_MIG_FLAG_EOS )	107:13:1649:1675	1076418	1	True				
ANR	1076675	UnaryOperationExpression	! ( flags & BLK_MIG_FLAG_EOS )		1076418	0					
ANR	1076676	UnaryOperator	!		1076418	0					
ANR	1076677	BitAndExpression	flags & BLK_MIG_FLAG_EOS		1076418	1		&			
ANR	1076678	Identifier	flags		1076418	0					
ANR	1076679	Identifier	BLK_MIG_FLAG_EOS		1076418	1					
ANR	1076680	ReturnStatement	return 0 ;	111:4:1686:1694	1076418	8	True				
ANR	1076681	PrimaryExpression	0		1076418	0					
ANR	1076682	ReturnType	static int		1076418	1					
ANR	1076683	Identifier	block_load		1076418	2					
ANR	1076684	ParameterList	"QEMUFile * f , void * opaque , int version_id"		1076418	3					
ANR	1076685	Parameter	QEMUFile * f	1:22:22:32	1076418	0	True				
ANR	1076686	ParameterType	QEMUFile *		1076418	0					
ANR	1076687	Identifier	f		1076418	1					
ANR	1076688	Parameter	void * opaque	1:35:35:46	1076418	1	True				
ANR	1076689	ParameterType	void *		1076418	0					
ANR	1076690	Identifier	opaque		1076418	1					
ANR	1076691	Parameter	int version_id	1:49:49:62	1076418	2	True				
ANR	1076692	ParameterType	int		1076418	0					
ANR	1076693	Identifier	version_id		1076418	1					
ANR	1076694	CFGEntryNode	ENTRY		1076418		True				
ANR	1076695	CFGExitNode	EXIT		1076418		True				
ANR	1076696	Symbol	stdout		1076418						
ANR	1076697	Symbol	BLK_MIG_FLAG_EOS		1076418						
ANR	1076698	Symbol	flags		1076418						
ANR	1076699	Symbol	BLOCK_SIZE		1076418						
ANR	1076700	Symbol	BLK_MIG_FLAG_PROGRESS		1076418						
ANR	1076701	Symbol	bs		1076418						
ANR	1076702	Symbol	device_name		1076418						
ANR	1076703	Symbol	len		1076418						
ANR	1076704	Symbol	addr		1076418						
ANR	1076705	Symbol	banner_printed		1076418						
ANR	1076706	Symbol	ret		1076418						
ANR	1076707	Symbol	qemu_file_has_error		1076418						
ANR	1076708	Symbol	BDRV_SECTORS_PER_DIRTY_CHUNK		1076418						
ANR	1076709	Symbol	opaque		1076418						
ANR	1076710	Symbol	* device_name		1076418						
ANR	1076711	Symbol	~BDRV_SECTOR_MASK		1076418						
ANR	1076712	Symbol	f		1076418						
ANR	1076713	Symbol	qemu_get_be64		1076418						
ANR	1076714	Symbol	bdrv_find		1076418						
ANR	1076715	Symbol	BDRV_SECTOR_BITS		1076418						
ANR	1076716	Symbol	EIO		1076418						
ANR	1076717	Symbol	version_id		1076418						
ANR	1076718	Symbol	stderr		1076418						
ANR	1076719	Symbol	EINVAL		1076418						
ANR	1076720	Symbol	buf		1076418						
ANR	1076721	Symbol	qemu_malloc		1076418						
ANR	1076722	Symbol	bdrv_write		1076418						
ANR	1076723	Symbol	BLK_MIG_FLAG_DEVICE_BLOCK		1076418						
ANR	1076724	Symbol	qemu_get_byte		1076418						
ANR	1076725	Symbol	* len		1076418						
