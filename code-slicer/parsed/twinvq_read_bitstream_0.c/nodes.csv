command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8583108	File	/home/p4ultr4n/workplace/ReVeal/raw_code/twinvq_read_bitstream_0.c								
ANR	8583109	Function	twinvq_read_bitstream	1:0:0:2544							
ANR	8583110	FunctionDef	"twinvq_read_bitstream (AVCodecContext * avctx , TwinVQContext * tctx , const uint8_t * buf , int buf_size)"		8583109	0					
ANR	8583111	CompoundStatement		5:0:146:2544	8583109	0					
ANR	8583112	IdentifierDeclStatement	TwinVQFrameData * bits = & tctx -> bits ;	7:4:153:192	8583109	0	True				
ANR	8583113	IdentifierDecl	* bits = & tctx -> bits		8583109	0					
ANR	8583114	IdentifierDeclType	TwinVQFrameData *		8583109	0					
ANR	8583115	Identifier	bits		8583109	1					
ANR	8583116	AssignmentExpression	* bits = & tctx -> bits		8583109	2		=			
ANR	8583117	Identifier	bits		8583109	0					
ANR	8583118	UnaryOperationExpression	& tctx -> bits		8583109	1					
ANR	8583119	UnaryOperator	&		8583109	0					
ANR	8583120	PtrMemberAccess	tctx -> bits		8583109	1					
ANR	8583121	Identifier	tctx		8583109	0					
ANR	8583122	Identifier	bits		8583109	1					
ANR	8583123	IdentifierDeclStatement	const TwinVQModeTab * mtab = tctx -> mtab ;	9:4:199:237	8583109	1	True				
ANR	8583124	IdentifierDecl	* mtab = tctx -> mtab		8583109	0					
ANR	8583125	IdentifierDeclType	const TwinVQModeTab *		8583109	0					
ANR	8583126	Identifier	mtab		8583109	1					
ANR	8583127	AssignmentExpression	* mtab = tctx -> mtab		8583109	2		=			
ANR	8583128	Identifier	mtab		8583109	0					
ANR	8583129	PtrMemberAccess	tctx -> mtab		8583109	1					
ANR	8583130	Identifier	tctx		8583109	0					
ANR	8583131	Identifier	mtab		8583109	1					
ANR	8583132	IdentifierDeclStatement	int channels = tctx -> avctx -> channels ;	11:4:244:293	8583109	2	True				
ANR	8583133	IdentifierDecl	channels = tctx -> avctx -> channels		8583109	0					
ANR	8583134	IdentifierDeclType	int		8583109	0					
ANR	8583135	Identifier	channels		8583109	1					
ANR	8583136	AssignmentExpression	channels = tctx -> avctx -> channels		8583109	2		=			
ANR	8583137	Identifier	channels		8583109	0					
ANR	8583138	PtrMemberAccess	tctx -> avctx -> channels		8583109	1					
ANR	8583139	PtrMemberAccess	tctx -> avctx		8583109	0					
ANR	8583140	Identifier	tctx		8583109	0					
ANR	8583141	Identifier	avctx		8583109	1					
ANR	8583142	Identifier	channels		8583109	1					
ANR	8583143	IdentifierDeclStatement	int sub ;	13:4:300:307	8583109	3	True				
ANR	8583144	IdentifierDecl	sub		8583109	0					
ANR	8583145	IdentifierDeclType	int		8583109	0					
ANR	8583146	Identifier	sub		8583109	1					
ANR	8583147	IdentifierDeclStatement	GetBitContext gb ;	15:4:314:330	8583109	4	True				
ANR	8583148	IdentifierDecl	gb		8583109	0					
ANR	8583149	IdentifierDeclType	GetBitContext		8583109	0					
ANR	8583150	Identifier	gb		8583109	1					
ANR	8583151	IdentifierDeclStatement	"int i , j , k ;"	17:4:337:348	8583109	5	True				
ANR	8583152	IdentifierDecl	i		8583109	0					
ANR	8583153	IdentifierDeclType	int		8583109	0					
ANR	8583154	Identifier	i		8583109	1					
ANR	8583155	IdentifierDecl	j		8583109	1					
ANR	8583156	IdentifierDeclType	int		8583109	0					
ANR	8583157	Identifier	j		8583109	1					
ANR	8583158	IdentifierDecl	k		8583109	2					
ANR	8583159	IdentifierDeclType	int		8583109	0					
ANR	8583160	Identifier	k		8583109	1					
ANR	8583161	IfStatement	if ( buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8 )		8583109	6					
ANR	8583162	Condition	buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8	21:8:361:428	8583109	0	True				
ANR	8583163	RelationalExpression	buf_size * 8 < avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8		8583109	0		<			
ANR	8583164	MultiplicativeExpression	buf_size * 8		8583109	0		*			
ANR	8583165	Identifier	buf_size		8583109	0					
ANR	8583166	PrimaryExpression	8		8583109	1					
ANR	8583167	AdditiveExpression	avctx -> bit_rate * mtab -> size / avctx -> sample_rate + 8		8583109	1		+			
ANR	8583168	MultiplicativeExpression	avctx -> bit_rate * mtab -> size / avctx -> sample_rate		8583109	0		*			
ANR	8583169	PtrMemberAccess	avctx -> bit_rate		8583109	0					
ANR	8583170	Identifier	avctx		8583109	0					
ANR	8583171	Identifier	bit_rate		8583109	1					
ANR	8583172	MultiplicativeExpression	mtab -> size / avctx -> sample_rate		8583109	1		/			
ANR	8583173	PtrMemberAccess	mtab -> size		8583109	0					
ANR	8583174	Identifier	mtab		8583109	0					
ANR	8583175	Identifier	size		8583109	1					
ANR	8583176	PtrMemberAccess	avctx -> sample_rate		8583109	1					
ANR	8583177	Identifier	avctx		8583109	0					
ANR	8583178	Identifier	sample_rate		8583109	1					
ANR	8583179	PrimaryExpression	8		8583109	1					
ANR	8583180	CompoundStatement		17:78:284:284	8583109	1					
ANR	8583181	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"	23:8:442:544	8583109	0	True				
ANR	8583182	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"		8583109	0					
ANR	8583183	Callee	av_log		8583109	0					
ANR	8583184	Identifier	av_log		8583109	0					
ANR	8583185	ArgumentList	avctx		8583109	1					
ANR	8583186	Argument	avctx		8583109	0					
ANR	8583187	Identifier	avctx		8583109	0					
ANR	8583188	Argument	AV_LOG_ERROR		8583109	1					
ANR	8583189	Identifier	AV_LOG_ERROR		8583109	0					
ANR	8583190	Argument	"""Frame too small (%d bytes). Truncated file?\\n"""		8583109	2					
ANR	8583191	PrimaryExpression	"""Frame too small (%d bytes). Truncated file?\\n"""		8583109	0					
ANR	8583192	Argument	buf_size		8583109	3					
ANR	8583193	Identifier	buf_size		8583109	0					
ANR	8583194	ReturnStatement	return AVERROR ( EINVAL ) ;	27:8:555:577	8583109	1	True				
ANR	8583195	CallExpression	AVERROR ( EINVAL )		8583109	0					
ANR	8583196	Callee	AVERROR		8583109	0					
ANR	8583197	Identifier	AVERROR		8583109	0					
ANR	8583198	ArgumentList	EINVAL		8583109	1					
ANR	8583199	Argument	EINVAL		8583109	0					
ANR	8583200	Identifier	EINVAL		8583109	0					
ANR	8583201	ExpressionStatement	"init_get_bits ( & gb , buf , buf_size * 8 )"	33:4:593:630	8583109	7	True				
ANR	8583202	CallExpression	"init_get_bits ( & gb , buf , buf_size * 8 )"		8583109	0					
ANR	8583203	Callee	init_get_bits		8583109	0					
ANR	8583204	Identifier	init_get_bits		8583109	0					
ANR	8583205	ArgumentList	& gb		8583109	1					
ANR	8583206	Argument	& gb		8583109	0					
ANR	8583207	UnaryOperationExpression	& gb		8583109	0					
ANR	8583208	UnaryOperator	&		8583109	0					
ANR	8583209	Identifier	gb		8583109	1					
ANR	8583210	Argument	buf		8583109	1					
ANR	8583211	Identifier	buf		8583109	0					
ANR	8583212	Argument	buf_size * 8		8583109	2					
ANR	8583213	MultiplicativeExpression	buf_size * 8		8583109	0		*			
ANR	8583214	Identifier	buf_size		8583109	0					
ANR	8583215	PrimaryExpression	8		8583109	1					
ANR	8583216	ExpressionStatement	"skip_bits ( & gb , get_bits ( & gb , 8 ) )"	35:4:637:669	8583109	8	True				
ANR	8583217	CallExpression	"skip_bits ( & gb , get_bits ( & gb , 8 ) )"		8583109	0					
ANR	8583218	Callee	skip_bits		8583109	0					
ANR	8583219	Identifier	skip_bits		8583109	0					
ANR	8583220	ArgumentList	& gb		8583109	1					
ANR	8583221	Argument	& gb		8583109	0					
ANR	8583222	UnaryOperationExpression	& gb		8583109	0					
ANR	8583223	UnaryOperator	&		8583109	0					
ANR	8583224	Identifier	gb		8583109	1					
ANR	8583225	Argument	"get_bits ( & gb , 8 )"		8583109	1					
ANR	8583226	CallExpression	"get_bits ( & gb , 8 )"		8583109	0					
ANR	8583227	Callee	get_bits		8583109	0					
ANR	8583228	Identifier	get_bits		8583109	0					
ANR	8583229	ArgumentList	& gb		8583109	1					
ANR	8583230	Argument	& gb		8583109	0					
ANR	8583231	UnaryOperationExpression	& gb		8583109	0					
ANR	8583232	UnaryOperator	&		8583109	0					
ANR	8583233	Identifier	gb		8583109	1					
ANR	8583234	Argument	8		8583109	1					
ANR	8583235	PrimaryExpression	8		8583109	0					
ANR	8583236	ExpressionStatement	"bits -> window_type = get_bits ( & gb , TWINVQ_WINDOW_TYPE_BITS )"	39:4:678:736	8583109	9	True				
ANR	8583237	AssignmentExpression	"bits -> window_type = get_bits ( & gb , TWINVQ_WINDOW_TYPE_BITS )"		8583109	0		=			
ANR	8583238	PtrMemberAccess	bits -> window_type		8583109	0					
ANR	8583239	Identifier	bits		8583109	0					
ANR	8583240	Identifier	window_type		8583109	1					
ANR	8583241	CallExpression	"get_bits ( & gb , TWINVQ_WINDOW_TYPE_BITS )"		8583109	1					
ANR	8583242	Callee	get_bits		8583109	0					
ANR	8583243	Identifier	get_bits		8583109	0					
ANR	8583244	ArgumentList	& gb		8583109	1					
ANR	8583245	Argument	& gb		8583109	0					
ANR	8583246	UnaryOperationExpression	& gb		8583109	0					
ANR	8583247	UnaryOperator	&		8583109	0					
ANR	8583248	Identifier	gb		8583109	1					
ANR	8583249	Argument	TWINVQ_WINDOW_TYPE_BITS		8583109	1					
ANR	8583250	Identifier	TWINVQ_WINDOW_TYPE_BITS		8583109	0					
ANR	8583251	IfStatement	if ( bits -> window_type > 8 )		8583109	10					
ANR	8583252	Condition	bits -> window_type > 8	43:8:749:769	8583109	0	True				
ANR	8583253	RelationalExpression	bits -> window_type > 8		8583109	0		>			
ANR	8583254	PtrMemberAccess	bits -> window_type		8583109	0					
ANR	8583255	Identifier	bits		8583109	0					
ANR	8583256	Identifier	window_type		8583109	1					
ANR	8583257	PrimaryExpression	8		8583109	1					
ANR	8583258	CompoundStatement		39:31:625:625	8583109	1					
ANR	8583259	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid window type, broken sample?\\n"" )"	45:8:783:851	8583109	0	True				
ANR	8583260	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid window type, broken sample?\\n"" )"		8583109	0					
ANR	8583261	Callee	av_log		8583109	0					
ANR	8583262	Identifier	av_log		8583109	0					
ANR	8583263	ArgumentList	avctx		8583109	1					
ANR	8583264	Argument	avctx		8583109	0					
ANR	8583265	Identifier	avctx		8583109	0					
ANR	8583266	Argument	AV_LOG_ERROR		8583109	1					
ANR	8583267	Identifier	AV_LOG_ERROR		8583109	0					
ANR	8583268	Argument	"""Invalid window type, broken sample?\\n"""		8583109	2					
ANR	8583269	PrimaryExpression	"""Invalid window type, broken sample?\\n"""		8583109	0					
ANR	8583270	ReturnStatement	return AVERROR_INVALIDDATA ;	47:8:862:888	8583109	1	True				
ANR	8583271	Identifier	AVERROR_INVALIDDATA		8583109	0					
ANR	8583272	ExpressionStatement	bits -> ftype = ff_twinvq_wtype_to_ftype_table [ tctx -> bits . window_type ]	53:4:904:972	8583109	11	True				
ANR	8583273	AssignmentExpression	bits -> ftype = ff_twinvq_wtype_to_ftype_table [ tctx -> bits . window_type ]		8583109	0		=			
ANR	8583274	PtrMemberAccess	bits -> ftype		8583109	0					
ANR	8583275	Identifier	bits		8583109	0					
ANR	8583276	Identifier	ftype		8583109	1					
ANR	8583277	ArrayIndexing	ff_twinvq_wtype_to_ftype_table [ tctx -> bits . window_type ]		8583109	1					
ANR	8583278	Identifier	ff_twinvq_wtype_to_ftype_table		8583109	0					
ANR	8583279	MemberAccess	tctx -> bits . window_type		8583109	1					
ANR	8583280	PtrMemberAccess	tctx -> bits		8583109	0					
ANR	8583281	Identifier	tctx		8583109	0					
ANR	8583282	Identifier	bits		8583109	1					
ANR	8583283	Identifier	window_type		8583109	1					
ANR	8583284	ExpressionStatement	sub = mtab -> fmode [ bits -> ftype ] . sub	57:4:981:1015	8583109	12	True				
ANR	8583285	AssignmentExpression	sub = mtab -> fmode [ bits -> ftype ] . sub		8583109	0		=			
ANR	8583286	Identifier	sub		8583109	0					
ANR	8583287	MemberAccess	mtab -> fmode [ bits -> ftype ] . sub		8583109	1					
ANR	8583288	ArrayIndexing	mtab -> fmode [ bits -> ftype ]		8583109	0					
ANR	8583289	PtrMemberAccess	mtab -> fmode		8583109	0					
ANR	8583290	Identifier	mtab		8583109	0					
ANR	8583291	Identifier	fmode		8583109	1					
ANR	8583292	PtrMemberAccess	bits -> ftype		8583109	1					
ANR	8583293	Identifier	bits		8583109	0					
ANR	8583294	Identifier	ftype		8583109	1					
ANR	8583295	Identifier	sub		8583109	1					
ANR	8583296	ExpressionStatement	"read_cb_data ( tctx , & gb , bits -> main_coeffs , bits -> ftype )"	61:4:1024:1079	8583109	13	True				
ANR	8583297	CallExpression	"read_cb_data ( tctx , & gb , bits -> main_coeffs , bits -> ftype )"		8583109	0					
ANR	8583298	Callee	read_cb_data		8583109	0					
ANR	8583299	Identifier	read_cb_data		8583109	0					
ANR	8583300	ArgumentList	tctx		8583109	1					
ANR	8583301	Argument	tctx		8583109	0					
ANR	8583302	Identifier	tctx		8583109	0					
ANR	8583303	Argument	& gb		8583109	1					
ANR	8583304	UnaryOperationExpression	& gb		8583109	0					
ANR	8583305	UnaryOperator	&		8583109	0					
ANR	8583306	Identifier	gb		8583109	1					
ANR	8583307	Argument	bits -> main_coeffs		8583109	2					
ANR	8583308	PtrMemberAccess	bits -> main_coeffs		8583109	0					
ANR	8583309	Identifier	bits		8583109	0					
ANR	8583310	Identifier	main_coeffs		8583109	1					
ANR	8583311	Argument	bits -> ftype		8583109	3					
ANR	8583312	PtrMemberAccess	bits -> ftype		8583109	0					
ANR	8583313	Identifier	bits		8583109	0					
ANR	8583314	Identifier	ftype		8583109	1					
ANR	8583315	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	14					
ANR	8583316	ForInit	i = 0 ;	65:9:1093:1098	8583109	0	True				
ANR	8583317	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583318	Identifier	i		8583109	0					
ANR	8583319	PrimaryExpression	0		8583109	1					
ANR	8583320	Condition	i < channels	65:16:1100:1111	8583109	1	True				
ANR	8583321	RelationalExpression	i < channels		8583109	0		<			
ANR	8583322	Identifier	i		8583109	0					
ANR	8583323	Identifier	channels		8583109	1					
ANR	8583324	PostIncDecOperationExpression	i ++	65:30:1114:1116	8583109	2	True				
ANR	8583325	Identifier	i		8583109	0					
ANR	8583326	IncDec	++		8583109	1					
ANR	8583327	ForStatement	for ( j = 0 ; j < sub ; j ++ )		8583109	3					
ANR	8583328	ForInit	j = 0 ;	67:13:1133:1138	8583109	0	True				
ANR	8583329	AssignmentExpression	j = 0		8583109	0		=			
ANR	8583330	Identifier	j		8583109	0					
ANR	8583331	PrimaryExpression	0		8583109	1					
ANR	8583332	Condition	j < sub	67:20:1140:1146	8583109	1	True				
ANR	8583333	RelationalExpression	j < sub		8583109	0		<			
ANR	8583334	Identifier	j		8583109	0					
ANR	8583335	Identifier	sub		8583109	1					
ANR	8583336	PostIncDecOperationExpression	j ++	67:29:1149:1151	8583109	2	True				
ANR	8583337	Identifier	j		8583109	0					
ANR	8583338	IncDec	++		8583109	1					
ANR	8583339	ForStatement	for ( k = 0 ; k < mtab -> fmode [ bits -> ftype ] . bark_n_coef ; k ++ )		8583109	3					
ANR	8583340	ForInit	k = 0 ;	69:17:1172:1177	8583109	0	True				
ANR	8583341	AssignmentExpression	k = 0		8583109	0		=			
ANR	8583342	Identifier	k		8583109	0					
ANR	8583343	PrimaryExpression	0		8583109	1					
ANR	8583344	Condition	k < mtab -> fmode [ bits -> ftype ] . bark_n_coef	69:24:1179:1218	8583109	1	True				
ANR	8583345	RelationalExpression	k < mtab -> fmode [ bits -> ftype ] . bark_n_coef		8583109	0		<			
ANR	8583346	Identifier	k		8583109	0					
ANR	8583347	MemberAccess	mtab -> fmode [ bits -> ftype ] . bark_n_coef		8583109	1					
ANR	8583348	ArrayIndexing	mtab -> fmode [ bits -> ftype ]		8583109	0					
ANR	8583349	PtrMemberAccess	mtab -> fmode		8583109	0					
ANR	8583350	Identifier	mtab		8583109	0					
ANR	8583351	Identifier	fmode		8583109	1					
ANR	8583352	PtrMemberAccess	bits -> ftype		8583109	1					
ANR	8583353	Identifier	bits		8583109	0					
ANR	8583354	Identifier	ftype		8583109	1					
ANR	8583355	Identifier	bark_n_coef		8583109	1					
ANR	8583356	PostIncDecOperationExpression	k ++	69:66:1221:1223	8583109	2	True				
ANR	8583357	Identifier	k		8583109	0					
ANR	8583358	IncDec	++		8583109	1					
ANR	8583359	ExpressionStatement	"bits -> bark1 [ i ] [ j ] [ k ] = get_bits ( & gb , mtab -> fmode [ bits -> ftype ] . bark_n_bit )"	71:16:1243:1337	8583109	3	True				
ANR	8583360	AssignmentExpression	"bits -> bark1 [ i ] [ j ] [ k ] = get_bits ( & gb , mtab -> fmode [ bits -> ftype ] . bark_n_bit )"		8583109	0		=			
ANR	8583361	ArrayIndexing	bits -> bark1 [ i ] [ j ] [ k ]		8583109	0					
ANR	8583362	ArrayIndexing	bits -> bark1 [ i ] [ j ]		8583109	0					
ANR	8583363	ArrayIndexing	bits -> bark1 [ i ]		8583109	0					
ANR	8583364	PtrMemberAccess	bits -> bark1		8583109	0					
ANR	8583365	Identifier	bits		8583109	0					
ANR	8583366	Identifier	bark1		8583109	1					
ANR	8583367	Identifier	i		8583109	1					
ANR	8583368	Identifier	j		8583109	1					
ANR	8583369	Identifier	k		8583109	1					
ANR	8583370	CallExpression	"get_bits ( & gb , mtab -> fmode [ bits -> ftype ] . bark_n_bit )"		8583109	1					
ANR	8583371	Callee	get_bits		8583109	0					
ANR	8583372	Identifier	get_bits		8583109	0					
ANR	8583373	ArgumentList	& gb		8583109	1					
ANR	8583374	Argument	& gb		8583109	0					
ANR	8583375	UnaryOperationExpression	& gb		8583109	0					
ANR	8583376	UnaryOperator	&		8583109	0					
ANR	8583377	Identifier	gb		8583109	1					
ANR	8583378	Argument	mtab -> fmode [ bits -> ftype ] . bark_n_bit		8583109	1					
ANR	8583379	MemberAccess	mtab -> fmode [ bits -> ftype ] . bark_n_bit		8583109	0					
ANR	8583380	ArrayIndexing	mtab -> fmode [ bits -> ftype ]		8583109	0					
ANR	8583381	PtrMemberAccess	mtab -> fmode		8583109	0					
ANR	8583382	Identifier	mtab		8583109	0					
ANR	8583383	Identifier	fmode		8583109	1					
ANR	8583384	PtrMemberAccess	bits -> ftype		8583109	1					
ANR	8583385	Identifier	bits		8583109	0					
ANR	8583386	Identifier	ftype		8583109	1					
ANR	8583387	Identifier	bark_n_bit		8583109	1					
ANR	8583388	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	15					
ANR	8583389	ForInit	i = 0 ;	77:9:1351:1356	8583109	0	True				
ANR	8583390	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583391	Identifier	i		8583109	0					
ANR	8583392	PrimaryExpression	0		8583109	1					
ANR	8583393	Condition	i < channels	77:16:1358:1369	8583109	1	True				
ANR	8583394	RelationalExpression	i < channels		8583109	0		<			
ANR	8583395	Identifier	i		8583109	0					
ANR	8583396	Identifier	channels		8583109	1					
ANR	8583397	PostIncDecOperationExpression	i ++	77:30:1372:1374	8583109	2	True				
ANR	8583398	Identifier	i		8583109	0					
ANR	8583399	IncDec	++		8583109	1					
ANR	8583400	ForStatement	for ( j = 0 ; j < sub ; j ++ )		8583109	3					
ANR	8583401	ForInit	j = 0 ;	79:13:1391:1396	8583109	0	True				
ANR	8583402	AssignmentExpression	j = 0		8583109	0		=			
ANR	8583403	Identifier	j		8583109	0					
ANR	8583404	PrimaryExpression	0		8583109	1					
ANR	8583405	Condition	j < sub	79:20:1398:1404	8583109	1	True				
ANR	8583406	RelationalExpression	j < sub		8583109	0		<			
ANR	8583407	Identifier	j		8583109	0					
ANR	8583408	Identifier	sub		8583109	1					
ANR	8583409	PostIncDecOperationExpression	j ++	79:29:1407:1409	8583109	2	True				
ANR	8583410	Identifier	j		8583109	0					
ANR	8583411	IncDec	++		8583109	1					
ANR	8583412	ExpressionStatement	bits -> bark_use_hist [ i ] [ j ] = get_bits1 ( & gb )	81:12:1425:1467	8583109	3	True				
ANR	8583413	AssignmentExpression	bits -> bark_use_hist [ i ] [ j ] = get_bits1 ( & gb )		8583109	0		=			
ANR	8583414	ArrayIndexing	bits -> bark_use_hist [ i ] [ j ]		8583109	0					
ANR	8583415	ArrayIndexing	bits -> bark_use_hist [ i ]		8583109	0					
ANR	8583416	PtrMemberAccess	bits -> bark_use_hist		8583109	0					
ANR	8583417	Identifier	bits		8583109	0					
ANR	8583418	Identifier	bark_use_hist		8583109	1					
ANR	8583419	Identifier	i		8583109	1					
ANR	8583420	Identifier	j		8583109	1					
ANR	8583421	CallExpression	get_bits1 ( & gb )		8583109	1					
ANR	8583422	Callee	get_bits1		8583109	0					
ANR	8583423	Identifier	get_bits1		8583109	0					
ANR	8583424	ArgumentList	& gb		8583109	1					
ANR	8583425	Argument	& gb		8583109	0					
ANR	8583426	UnaryOperationExpression	& gb		8583109	0					
ANR	8583427	UnaryOperator	&		8583109	0					
ANR	8583428	Identifier	gb		8583109	1					
ANR	8583429	IfStatement	if ( bits -> ftype == TWINVQ_FT_LONG )		8583109	16					
ANR	8583430	Condition	bits -> ftype == TWINVQ_FT_LONG	85:8:1480:1508	8583109	0	True				
ANR	8583431	EqualityExpression	bits -> ftype == TWINVQ_FT_LONG		8583109	0		==			
ANR	8583432	PtrMemberAccess	bits -> ftype		8583109	0					
ANR	8583433	Identifier	bits		8583109	0					
ANR	8583434	Identifier	ftype		8583109	1					
ANR	8583435	Identifier	TWINVQ_FT_LONG		8583109	1					
ANR	8583436	CompoundStatement		81:39:1364:1364	8583109	1					
ANR	8583437	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	0					
ANR	8583438	ForInit	i = 0 ;	87:13:1527:1532	8583109	0	True				
ANR	8583439	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583440	Identifier	i		8583109	0					
ANR	8583441	PrimaryExpression	0		8583109	1					
ANR	8583442	Condition	i < channels	87:20:1534:1545	8583109	1	True				
ANR	8583443	RelationalExpression	i < channels		8583109	0		<			
ANR	8583444	Identifier	i		8583109	0					
ANR	8583445	Identifier	channels		8583109	1					
ANR	8583446	PostIncDecOperationExpression	i ++	87:34:1548:1550	8583109	2	True				
ANR	8583447	Identifier	i		8583109	0					
ANR	8583448	IncDec	++		8583109	1					
ANR	8583449	ExpressionStatement	"bits -> gain_bits [ i ] = get_bits ( & gb , TWINVQ_GAIN_BITS )"	89:12:1566:1618	8583109	3	True				
ANR	8583450	AssignmentExpression	"bits -> gain_bits [ i ] = get_bits ( & gb , TWINVQ_GAIN_BITS )"		8583109	0		=			
ANR	8583451	ArrayIndexing	bits -> gain_bits [ i ]		8583109	0					
ANR	8583452	PtrMemberAccess	bits -> gain_bits		8583109	0					
ANR	8583453	Identifier	bits		8583109	0					
ANR	8583454	Identifier	gain_bits		8583109	1					
ANR	8583455	Identifier	i		8583109	1					
ANR	8583456	CallExpression	"get_bits ( & gb , TWINVQ_GAIN_BITS )"		8583109	1					
ANR	8583457	Callee	get_bits		8583109	0					
ANR	8583458	Identifier	get_bits		8583109	0					
ANR	8583459	ArgumentList	& gb		8583109	1					
ANR	8583460	Argument	& gb		8583109	0					
ANR	8583461	UnaryOperationExpression	& gb		8583109	0					
ANR	8583462	UnaryOperator	&		8583109	0					
ANR	8583463	Identifier	gb		8583109	1					
ANR	8583464	Argument	TWINVQ_GAIN_BITS		8583109	1					
ANR	8583465	Identifier	TWINVQ_GAIN_BITS		8583109	0					
ANR	8583466	ElseStatement	else		8583109	0					
ANR	8583467	CompoundStatement		87:11:1485:1485	8583109	0					
ANR	8583468	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	0					
ANR	8583469	ForInit	i = 0 ;	93:13:1648:1653	8583109	0	True				
ANR	8583470	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583471	Identifier	i		8583109	0					
ANR	8583472	PrimaryExpression	0		8583109	1					
ANR	8583473	Condition	i < channels	93:20:1655:1666	8583109	1	True				
ANR	8583474	RelationalExpression	i < channels		8583109	0		<			
ANR	8583475	Identifier	i		8583109	0					
ANR	8583476	Identifier	channels		8583109	1					
ANR	8583477	PostIncDecOperationExpression	i ++	93:34:1669:1671	8583109	2	True				
ANR	8583478	Identifier	i		8583109	0					
ANR	8583479	IncDec	++		8583109	1					
ANR	8583480	CompoundStatement		89:39:1527:1527	8583109	3					
ANR	8583481	ExpressionStatement	"bits -> gain_bits [ i ] = get_bits ( & gb , TWINVQ_GAIN_BITS )"	95:12:1689:1741	8583109	0	True				
ANR	8583482	AssignmentExpression	"bits -> gain_bits [ i ] = get_bits ( & gb , TWINVQ_GAIN_BITS )"		8583109	0		=			
ANR	8583483	ArrayIndexing	bits -> gain_bits [ i ]		8583109	0					
ANR	8583484	PtrMemberAccess	bits -> gain_bits		8583109	0					
ANR	8583485	Identifier	bits		8583109	0					
ANR	8583486	Identifier	gain_bits		8583109	1					
ANR	8583487	Identifier	i		8583109	1					
ANR	8583488	CallExpression	"get_bits ( & gb , TWINVQ_GAIN_BITS )"		8583109	1					
ANR	8583489	Callee	get_bits		8583109	0					
ANR	8583490	Identifier	get_bits		8583109	0					
ANR	8583491	ArgumentList	& gb		8583109	1					
ANR	8583492	Argument	& gb		8583109	0					
ANR	8583493	UnaryOperationExpression	& gb		8583109	0					
ANR	8583494	UnaryOperator	&		8583109	0					
ANR	8583495	Identifier	gb		8583109	1					
ANR	8583496	Argument	TWINVQ_GAIN_BITS		8583109	1					
ANR	8583497	Identifier	TWINVQ_GAIN_BITS		8583109	0					
ANR	8583498	ForStatement	for ( j = 0 ; j < sub ; j ++ )		8583109	1					
ANR	8583499	ForInit	j = 0 ;	97:17:1761:1766	8583109	0	True				
ANR	8583500	AssignmentExpression	j = 0		8583109	0		=			
ANR	8583501	Identifier	j		8583109	0					
ANR	8583502	PrimaryExpression	0		8583109	1					
ANR	8583503	Condition	j < sub	97:24:1768:1774	8583109	1	True				
ANR	8583504	RelationalExpression	j < sub		8583109	0		<			
ANR	8583505	Identifier	j		8583109	0					
ANR	8583506	Identifier	sub		8583109	1					
ANR	8583507	PostIncDecOperationExpression	j ++	97:33:1777:1779	8583109	2	True				
ANR	8583508	Identifier	j		8583109	0					
ANR	8583509	IncDec	++		8583109	1					
ANR	8583510	ExpressionStatement	"bits -> sub_gain_bits [ i * sub + j ] = get_bits ( & gb , TWINVQ_SUB_GAIN_BITS )"	99:16:1799:1925	8583109	3	True				
ANR	8583511	AssignmentExpression	"bits -> sub_gain_bits [ i * sub + j ] = get_bits ( & gb , TWINVQ_SUB_GAIN_BITS )"		8583109	0		=			
ANR	8583512	ArrayIndexing	bits -> sub_gain_bits [ i * sub + j ]		8583109	0					
ANR	8583513	PtrMemberAccess	bits -> sub_gain_bits		8583109	0					
ANR	8583514	Identifier	bits		8583109	0					
ANR	8583515	Identifier	sub_gain_bits		8583109	1					
ANR	8583516	AdditiveExpression	i * sub + j		8583109	1		+			
ANR	8583517	MultiplicativeExpression	i * sub		8583109	0		*			
ANR	8583518	Identifier	i		8583109	0					
ANR	8583519	Identifier	sub		8583109	1					
ANR	8583520	Identifier	j		8583109	1					
ANR	8583521	CallExpression	"get_bits ( & gb , TWINVQ_SUB_GAIN_BITS )"		8583109	1					
ANR	8583522	Callee	get_bits		8583109	0					
ANR	8583523	Identifier	get_bits		8583109	0					
ANR	8583524	ArgumentList	& gb		8583109	1					
ANR	8583525	Argument	& gb		8583109	0					
ANR	8583526	UnaryOperationExpression	& gb		8583109	0					
ANR	8583527	UnaryOperator	&		8583109	0					
ANR	8583528	Identifier	gb		8583109	1					
ANR	8583529	Argument	TWINVQ_SUB_GAIN_BITS		8583109	1					
ANR	8583530	Identifier	TWINVQ_SUB_GAIN_BITS		8583109	0					
ANR	8583531	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	17					
ANR	8583532	ForInit	i = 0 ;	109:9:1957:1962	8583109	0	True				
ANR	8583533	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583534	Identifier	i		8583109	0					
ANR	8583535	PrimaryExpression	0		8583109	1					
ANR	8583536	Condition	i < channels	109:16:1964:1975	8583109	1	True				
ANR	8583537	RelationalExpression	i < channels		8583109	0		<			
ANR	8583538	Identifier	i		8583109	0					
ANR	8583539	Identifier	channels		8583109	1					
ANR	8583540	PostIncDecOperationExpression	i ++	109:30:1978:1980	8583109	2	True				
ANR	8583541	Identifier	i		8583109	0					
ANR	8583542	IncDec	++		8583109	1					
ANR	8583543	CompoundStatement		105:35:1836:1836	8583109	3					
ANR	8583544	ExpressionStatement	"bits -> lpc_hist_idx [ i ] = get_bits ( & gb , mtab -> lsp_bit0 )"	111:8:1994:2047	8583109	0	True				
ANR	8583545	AssignmentExpression	"bits -> lpc_hist_idx [ i ] = get_bits ( & gb , mtab -> lsp_bit0 )"		8583109	0		=			
ANR	8583546	ArrayIndexing	bits -> lpc_hist_idx [ i ]		8583109	0					
ANR	8583547	PtrMemberAccess	bits -> lpc_hist_idx		8583109	0					
ANR	8583548	Identifier	bits		8583109	0					
ANR	8583549	Identifier	lpc_hist_idx		8583109	1					
ANR	8583550	Identifier	i		8583109	1					
ANR	8583551	CallExpression	"get_bits ( & gb , mtab -> lsp_bit0 )"		8583109	1					
ANR	8583552	Callee	get_bits		8583109	0					
ANR	8583553	Identifier	get_bits		8583109	0					
ANR	8583554	ArgumentList	& gb		8583109	1					
ANR	8583555	Argument	& gb		8583109	0					
ANR	8583556	UnaryOperationExpression	& gb		8583109	0					
ANR	8583557	UnaryOperator	&		8583109	0					
ANR	8583558	Identifier	gb		8583109	1					
ANR	8583559	Argument	mtab -> lsp_bit0		8583109	1					
ANR	8583560	PtrMemberAccess	mtab -> lsp_bit0		8583109	0					
ANR	8583561	Identifier	mtab		8583109	0					
ANR	8583562	Identifier	lsp_bit0		8583109	1					
ANR	8583563	ExpressionStatement	"bits -> lpc_idx1 [ i ] = get_bits ( & gb , mtab -> lsp_bit1 )"	113:8:2058:2111	8583109	1	True				
ANR	8583564	AssignmentExpression	"bits -> lpc_idx1 [ i ] = get_bits ( & gb , mtab -> lsp_bit1 )"		8583109	0		=			
ANR	8583565	ArrayIndexing	bits -> lpc_idx1 [ i ]		8583109	0					
ANR	8583566	PtrMemberAccess	bits -> lpc_idx1		8583109	0					
ANR	8583567	Identifier	bits		8583109	0					
ANR	8583568	Identifier	lpc_idx1		8583109	1					
ANR	8583569	Identifier	i		8583109	1					
ANR	8583570	CallExpression	"get_bits ( & gb , mtab -> lsp_bit1 )"		8583109	1					
ANR	8583571	Callee	get_bits		8583109	0					
ANR	8583572	Identifier	get_bits		8583109	0					
ANR	8583573	ArgumentList	& gb		8583109	1					
ANR	8583574	Argument	& gb		8583109	0					
ANR	8583575	UnaryOperationExpression	& gb		8583109	0					
ANR	8583576	UnaryOperator	&		8583109	0					
ANR	8583577	Identifier	gb		8583109	1					
ANR	8583578	Argument	mtab -> lsp_bit1		8583109	1					
ANR	8583579	PtrMemberAccess	mtab -> lsp_bit1		8583109	0					
ANR	8583580	Identifier	mtab		8583109	0					
ANR	8583581	Identifier	lsp_bit1		8583109	1					
ANR	8583582	ForStatement	for ( j = 0 ; j < mtab -> lsp_split ; j ++ )		8583109	2					
ANR	8583583	ForInit	j = 0 ;	117:13:2129:2134	8583109	0	True				
ANR	8583584	AssignmentExpression	j = 0		8583109	0		=			
ANR	8583585	Identifier	j		8583109	0					
ANR	8583586	PrimaryExpression	0		8583109	1					
ANR	8583587	Condition	j < mtab -> lsp_split	117:20:2136:2154	8583109	1	True				
ANR	8583588	RelationalExpression	j < mtab -> lsp_split		8583109	0		<			
ANR	8583589	Identifier	j		8583109	0					
ANR	8583590	PtrMemberAccess	mtab -> lsp_split		8583109	1					
ANR	8583591	Identifier	mtab		8583109	0					
ANR	8583592	Identifier	lsp_split		8583109	1					
ANR	8583593	PostIncDecOperationExpression	j ++	117:41:2157:2159	8583109	2	True				
ANR	8583594	Identifier	j		8583109	0					
ANR	8583595	IncDec	++		8583109	1					
ANR	8583596	ExpressionStatement	"bits -> lpc_idx2 [ i ] [ j ] = get_bits ( & gb , mtab -> lsp_bit2 )"	119:12:2175:2227	8583109	3	True				
ANR	8583597	AssignmentExpression	"bits -> lpc_idx2 [ i ] [ j ] = get_bits ( & gb , mtab -> lsp_bit2 )"		8583109	0		=			
ANR	8583598	ArrayIndexing	bits -> lpc_idx2 [ i ] [ j ]		8583109	0					
ANR	8583599	ArrayIndexing	bits -> lpc_idx2 [ i ]		8583109	0					
ANR	8583600	PtrMemberAccess	bits -> lpc_idx2		8583109	0					
ANR	8583601	Identifier	bits		8583109	0					
ANR	8583602	Identifier	lpc_idx2		8583109	1					
ANR	8583603	Identifier	i		8583109	1					
ANR	8583604	Identifier	j		8583109	1					
ANR	8583605	CallExpression	"get_bits ( & gb , mtab -> lsp_bit2 )"		8583109	1					
ANR	8583606	Callee	get_bits		8583109	0					
ANR	8583607	Identifier	get_bits		8583109	0					
ANR	8583608	ArgumentList	& gb		8583109	1					
ANR	8583609	Argument	& gb		8583109	0					
ANR	8583610	UnaryOperationExpression	& gb		8583109	0					
ANR	8583611	UnaryOperator	&		8583109	0					
ANR	8583612	Identifier	gb		8583109	1					
ANR	8583613	Argument	mtab -> lsp_bit2		8583109	1					
ANR	8583614	PtrMemberAccess	mtab -> lsp_bit2		8583109	0					
ANR	8583615	Identifier	mtab		8583109	0					
ANR	8583616	Identifier	lsp_bit2		8583109	1					
ANR	8583617	IfStatement	if ( bits -> ftype == TWINVQ_FT_LONG )		8583109	18					
ANR	8583618	Condition	bits -> ftype == TWINVQ_FT_LONG	125:8:2247:2275	8583109	0	True				
ANR	8583619	EqualityExpression	bits -> ftype == TWINVQ_FT_LONG		8583109	0		==			
ANR	8583620	PtrMemberAccess	bits -> ftype		8583109	0					
ANR	8583621	Identifier	bits		8583109	0					
ANR	8583622	Identifier	ftype		8583109	1					
ANR	8583623	Identifier	TWINVQ_FT_LONG		8583109	1					
ANR	8583624	CompoundStatement		121:39:2131:2131	8583109	1					
ANR	8583625	ExpressionStatement	"read_cb_data ( tctx , & gb , bits -> ppc_coeffs , 3 )"	127:8:2289:2333	8583109	0	True				
ANR	8583626	CallExpression	"read_cb_data ( tctx , & gb , bits -> ppc_coeffs , 3 )"		8583109	0					
ANR	8583627	Callee	read_cb_data		8583109	0					
ANR	8583628	Identifier	read_cb_data		8583109	0					
ANR	8583629	ArgumentList	tctx		8583109	1					
ANR	8583630	Argument	tctx		8583109	0					
ANR	8583631	Identifier	tctx		8583109	0					
ANR	8583632	Argument	& gb		8583109	1					
ANR	8583633	UnaryOperationExpression	& gb		8583109	0					
ANR	8583634	UnaryOperator	&		8583109	0					
ANR	8583635	Identifier	gb		8583109	1					
ANR	8583636	Argument	bits -> ppc_coeffs		8583109	2					
ANR	8583637	PtrMemberAccess	bits -> ppc_coeffs		8583109	0					
ANR	8583638	Identifier	bits		8583109	0					
ANR	8583639	Identifier	ppc_coeffs		8583109	1					
ANR	8583640	Argument	3		8583109	3					
ANR	8583641	PrimaryExpression	3		8583109	0					
ANR	8583642	ForStatement	for ( i = 0 ; i < channels ; i ++ )		8583109	1					
ANR	8583643	ForInit	i = 0 ;	129:13:2349:2354	8583109	0	True				
ANR	8583644	AssignmentExpression	i = 0		8583109	0		=			
ANR	8583645	Identifier	i		8583109	0					
ANR	8583646	PrimaryExpression	0		8583109	1					
ANR	8583647	Condition	i < channels	129:20:2356:2367	8583109	1	True				
ANR	8583648	RelationalExpression	i < channels		8583109	0		<			
ANR	8583649	Identifier	i		8583109	0					
ANR	8583650	Identifier	channels		8583109	1					
ANR	8583651	PostIncDecOperationExpression	i ++	129:34:2370:2372	8583109	2	True				
ANR	8583652	Identifier	i		8583109	0					
ANR	8583653	IncDec	++		8583109	1					
ANR	8583654	CompoundStatement		125:39:2228:2228	8583109	3					
ANR	8583655	ExpressionStatement	"bits -> p_coef [ i ] = get_bits ( & gb , mtab -> ppc_period_bit )"	131:12:2390:2443	8583109	0	True				
ANR	8583656	AssignmentExpression	"bits -> p_coef [ i ] = get_bits ( & gb , mtab -> ppc_period_bit )"		8583109	0		=			
ANR	8583657	ArrayIndexing	bits -> p_coef [ i ]		8583109	0					
ANR	8583658	PtrMemberAccess	bits -> p_coef		8583109	0					
ANR	8583659	Identifier	bits		8583109	0					
ANR	8583660	Identifier	p_coef		8583109	1					
ANR	8583661	Identifier	i		8583109	1					
ANR	8583662	CallExpression	"get_bits ( & gb , mtab -> ppc_period_bit )"		8583109	1					
ANR	8583663	Callee	get_bits		8583109	0					
ANR	8583664	Identifier	get_bits		8583109	0					
ANR	8583665	ArgumentList	& gb		8583109	1					
ANR	8583666	Argument	& gb		8583109	0					
ANR	8583667	UnaryOperationExpression	& gb		8583109	0					
ANR	8583668	UnaryOperator	&		8583109	0					
ANR	8583669	Identifier	gb		8583109	1					
ANR	8583670	Argument	mtab -> ppc_period_bit		8583109	1					
ANR	8583671	PtrMemberAccess	mtab -> ppc_period_bit		8583109	0					
ANR	8583672	Identifier	mtab		8583109	0					
ANR	8583673	Identifier	ppc_period_bit		8583109	1					
ANR	8583674	ExpressionStatement	"bits -> g_coef [ i ] = get_bits ( & gb , mtab -> pgain_bit )"	133:12:2458:2506	8583109	1	True				
ANR	8583675	AssignmentExpression	"bits -> g_coef [ i ] = get_bits ( & gb , mtab -> pgain_bit )"		8583109	0		=			
ANR	8583676	ArrayIndexing	bits -> g_coef [ i ]		8583109	0					
ANR	8583677	PtrMemberAccess	bits -> g_coef		8583109	0					
ANR	8583678	Identifier	bits		8583109	0					
ANR	8583679	Identifier	g_coef		8583109	1					
ANR	8583680	Identifier	i		8583109	1					
ANR	8583681	CallExpression	"get_bits ( & gb , mtab -> pgain_bit )"		8583109	1					
ANR	8583682	Callee	get_bits		8583109	0					
ANR	8583683	Identifier	get_bits		8583109	0					
ANR	8583684	ArgumentList	& gb		8583109	1					
ANR	8583685	Argument	& gb		8583109	0					
ANR	8583686	UnaryOperationExpression	& gb		8583109	0					
ANR	8583687	UnaryOperator	&		8583109	0					
ANR	8583688	Identifier	gb		8583109	1					
ANR	8583689	Argument	mtab -> pgain_bit		8583109	1					
ANR	8583690	PtrMemberAccess	mtab -> pgain_bit		8583109	0					
ANR	8583691	Identifier	mtab		8583109	0					
ANR	8583692	Identifier	pgain_bit		8583109	1					
ANR	8583693	ReturnStatement	return 0 ;	141:4:2533:2541	8583109	19	True				
ANR	8583694	PrimaryExpression	0		8583109	0					
ANR	8583695	ReturnType	static int		8583109	1					
ANR	8583696	Identifier	twinvq_read_bitstream		8583109	2					
ANR	8583697	ParameterList	"AVCodecContext * avctx , TwinVQContext * tctx , const uint8_t * buf , int buf_size"		8583109	3					
ANR	8583698	Parameter	AVCodecContext * avctx	1:33:33:53	8583109	0	True				
ANR	8583699	ParameterType	AVCodecContext *		8583109	0					
ANR	8583700	Identifier	avctx		8583109	1					
ANR	8583701	Parameter	TwinVQContext * tctx	1:56:56:74	8583109	1	True				
ANR	8583702	ParameterType	TwinVQContext *		8583109	0					
ANR	8583703	Identifier	tctx		8583109	1					
ANR	8583704	Parameter	const uint8_t * buf	3:33:111:128	8583109	2	True				
ANR	8583705	ParameterType	const uint8_t *		8583109	0					
ANR	8583706	Identifier	buf		8583109	1					
ANR	8583707	Parameter	int buf_size	3:53:131:142	8583109	3	True				
ANR	8583708	ParameterType	int		8583109	0					
ANR	8583709	Identifier	buf_size		8583109	1					
ANR	8583710	CFGEntryNode	ENTRY		8583109		True				
ANR	8583711	CFGExitNode	EXIT		8583109		True				
ANR	8583712	Symbol	TWINVQ_FT_LONG		8583109						
ANR	8583713	Symbol	& gb		8583109						
ANR	8583714	Symbol	tctx		8583109						
ANR	8583715	Symbol	mtab -> lsp_split		8583109						
ANR	8583716	Symbol	tctx -> mtab		8583109						
ANR	8583717	Symbol	get_bits		8583109						
ANR	8583718	Symbol	bits -> g_coef		8583109						
ANR	8583719	Symbol	bits -> gain_bits		8583109						
ANR	8583720	Symbol	* ff_twinvq_wtype_to_ftype_table		8583109						
ANR	8583721	Symbol	tctx -> bits		8583109						
ANR	8583722	Symbol	TWINVQ_GAIN_BITS		8583109						
ANR	8583723	Symbol	* bits -> lpc_idx2		8583109						
ANR	8583724	Symbol	& tctx -> bits		8583109						
ANR	8583725	Symbol	bits -> bark1		8583109						
ANR	8583726	Symbol	mtab -> fmode [ bits -> ftype ] . bark_n_bit		8583109						
ANR	8583727	Symbol	tctx -> avctx -> channels		8583109						
ANR	8583728	Symbol	bits -> sub_gain_bits		8583109						
ANR	8583729	Symbol	* tctx -> avctx		8583109						
ANR	8583730	Symbol	mtab -> lsp_bit0		8583109						
ANR	8583731	Symbol	bits -> window_type		8583109						
ANR	8583732	Symbol	mtab -> lsp_bit1		8583109						
ANR	8583733	Symbol	mtab -> lsp_bit2		8583109						
ANR	8583734	Symbol	* mtab		8583109						
ANR	8583735	Symbol	* tctx -> bits . window_type		8583109						
ANR	8583736	Symbol	* bits -> lpc_hist_idx		8583109						
ANR	8583737	Symbol	* bits		8583109						
ANR	8583738	Symbol	* * j		8583109						
ANR	8583739	Symbol	* * i		8583109						
ANR	8583740	Symbol	* * bits -> bark_use_hist		8583109						
ANR	8583741	Symbol	buf_size		8583109						
ANR	8583742	Symbol	* * bits		8583109						
ANR	8583743	Symbol	get_bits1		8583109						
ANR	8583744	Symbol	bits		8583109						
ANR	8583745	Symbol	* sub		8583109						
ANR	8583746	Symbol	mtab -> fmode		8583109						
ANR	8583747	Symbol	* * mtab		8583109						
ANR	8583748	Symbol	* bits -> p_coef		8583109						
ANR	8583749	Symbol	* bits -> lpc_idx1		8583109						
ANR	8583750	Symbol	* * bits -> bark1		8583109						
ANR	8583751	Symbol	* avctx		8583109						
ANR	8583752	Symbol	avctx -> bit_rate		8583109						
ANR	8583753	Symbol	bits -> ftype		8583109						
ANR	8583754	Symbol	channels		8583109						
ANR	8583755	Symbol	* tctx -> bits		8583109						
ANR	8583756	Symbol	* * * i		8583109						
ANR	8583757	Symbol	mtab		8583109						
ANR	8583758	Symbol	* bits -> g_coef		8583109						
ANR	8583759	Symbol	* bits -> sub_gain_bits		8583109						
ANR	8583760	Symbol	sub		8583109						
ANR	8583761	Symbol	mtab -> fmode [ bits -> ftype ] . bark_n_coef		8583109						
ANR	8583762	Symbol	* bits -> bark1		8583109						
ANR	8583763	Symbol	* * tctx		8583109						
ANR	8583764	Symbol	tctx -> bits . window_type		8583109						
ANR	8583765	Symbol	bits -> bark_use_hist		8583109						
ANR	8583766	Symbol	* * * bits		8583109						
ANR	8583767	Symbol	TWINVQ_SUB_GAIN_BITS		8583109						
ANR	8583768	Symbol	* tctx		8583109						
ANR	8583769	Symbol	bits -> lpc_hist_idx		8583109						
ANR	8583770	Symbol	bits -> main_coeffs		8583109						
ANR	8583771	Symbol	TWINVQ_WINDOW_TYPE_BITS		8583109						
ANR	8583772	Symbol	ff_twinvq_wtype_to_ftype_table		8583109						
ANR	8583773	Symbol	mtab -> size		8583109						
ANR	8583774	Symbol	* bits -> gain_bits		8583109						
ANR	8583775	Symbol	gb		8583109						
ANR	8583776	Symbol	mtab -> fmode [ bits -> ftype ] . sub		8583109						
ANR	8583777	Symbol	avctx		8583109						
ANR	8583778	Symbol	mtab -> ppc_period_bit		8583109						
ANR	8583779	Symbol	tctx -> avctx		8583109						
ANR	8583780	Symbol	* * bits -> lpc_idx2		8583109						
ANR	8583781	Symbol	bits -> p_coef		8583109						
ANR	8583782	Symbol	AV_LOG_ERROR		8583109						
ANR	8583783	Symbol	* bits -> ftype		8583109						
ANR	8583784	Symbol	i		8583109						
ANR	8583785	Symbol	j		8583109						
ANR	8583786	Symbol	k		8583109						
ANR	8583787	Symbol	* mtab -> fmode		8583109						
ANR	8583788	Symbol	avctx -> sample_rate		8583109						
ANR	8583789	Symbol	bits -> lpc_idx1		8583109						
ANR	8583790	Symbol	bits -> lpc_idx2		8583109						
ANR	8583791	Symbol	EINVAL		8583109						
ANR	8583792	Symbol	buf		8583109						
ANR	8583793	Symbol	* i		8583109						
ANR	8583794	Symbol	* bits -> bark_use_hist		8583109						
ANR	8583795	Symbol	* j		8583109						
ANR	8583796	Symbol	* k		8583109						
ANR	8583797	Symbol	* * * * bits		8583109						
ANR	8583798	Symbol	bits -> ppc_coeffs		8583109						
ANR	8583799	Symbol	mtab -> pgain_bit		8583109						
ANR	8583800	Symbol	* * * bits -> bark1		8583109						
ANR	8583801	Symbol	AVERROR_INVALIDDATA		8583109						
ANR	8583802	Symbol	AVERROR		8583109						
