command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3500764	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_ivi_decode_frame_1.c								
ANR	3500765	Function	ff_ivi_decode_frame	1:0:0:3007							
ANR	3500766	FunctionDef	"ff_ivi_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		3500765	0					
ANR	3500767	CompoundStatement		5:0:118:3007	3500765	0					
ANR	3500768	IdentifierDeclStatement	IVI45DecContext * ctx = avctx -> priv_data ;	7:4:125:164	3500765	0	True				
ANR	3500769	IdentifierDecl	* ctx = avctx -> priv_data		3500765	0					
ANR	3500770	IdentifierDeclType	IVI45DecContext *		3500765	0					
ANR	3500771	Identifier	ctx		3500765	1					
ANR	3500772	AssignmentExpression	* ctx = avctx -> priv_data		3500765	2		=			
ANR	3500773	Identifier	ctx		3500765	0					
ANR	3500774	PtrMemberAccess	avctx -> priv_data		3500765	1					
ANR	3500775	Identifier	avctx		3500765	0					
ANR	3500776	Identifier	priv_data		3500765	1					
ANR	3500777	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:171:205	3500765	1	True				
ANR	3500778	IdentifierDecl	* buf = avpkt -> data		3500765	0					
ANR	3500779	IdentifierDeclType	const uint8_t *		3500765	0					
ANR	3500780	Identifier	buf		3500765	1					
ANR	3500781	AssignmentExpression	* buf = avpkt -> data		3500765	2		=			
ANR	3500782	Identifier	buf		3500765	0					
ANR	3500783	PtrMemberAccess	avpkt -> data		3500765	1					
ANR	3500784	Identifier	avpkt		3500765	0					
ANR	3500785	Identifier	data		3500765	1					
ANR	3500786	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:212:250	3500765	2	True				
ANR	3500787	IdentifierDecl	buf_size = avpkt -> size		3500765	0					
ANR	3500788	IdentifierDeclType	int		3500765	0					
ANR	3500789	Identifier	buf_size		3500765	1					
ANR	3500790	AssignmentExpression	buf_size = avpkt -> size		3500765	2		=			
ANR	3500791	Identifier	buf_size		3500765	0					
ANR	3500792	PtrMemberAccess	avpkt -> size		3500765	1					
ANR	3500793	Identifier	avpkt		3500765	0					
ANR	3500794	Identifier	size		3500765	1					
ANR	3500795	IdentifierDeclStatement	"int result , p , b ;"	13:4:257:285	3500765	3	True				
ANR	3500796	IdentifierDecl	result		3500765	0					
ANR	3500797	IdentifierDeclType	int		3500765	0					
ANR	3500798	Identifier	result		3500765	1					
ANR	3500799	IdentifierDecl	p		3500765	1					
ANR	3500800	IdentifierDeclType	int		3500765	0					
ANR	3500801	Identifier	p		3500765	1					
ANR	3500802	IdentifierDecl	b		3500765	2					
ANR	3500803	IdentifierDeclType	int		3500765	0					
ANR	3500804	Identifier	b		3500765	1					
ANR	3500805	ExpressionStatement	"init_get_bits ( & ctx -> gb , buf , buf_size * 8 )"	17:4:294:336	3500765	4	True				
ANR	3500806	CallExpression	"init_get_bits ( & ctx -> gb , buf , buf_size * 8 )"		3500765	0					
ANR	3500807	Callee	init_get_bits		3500765	0					
ANR	3500808	Identifier	init_get_bits		3500765	0					
ANR	3500809	ArgumentList	& ctx -> gb		3500765	1					
ANR	3500810	Argument	& ctx -> gb		3500765	0					
ANR	3500811	UnaryOperationExpression	& ctx -> gb		3500765	0					
ANR	3500812	UnaryOperator	&		3500765	0					
ANR	3500813	PtrMemberAccess	ctx -> gb		3500765	1					
ANR	3500814	Identifier	ctx		3500765	0					
ANR	3500815	Identifier	gb		3500765	1					
ANR	3500816	Argument	buf		3500765	1					
ANR	3500817	Identifier	buf		3500765	0					
ANR	3500818	Argument	buf_size * 8		3500765	2					
ANR	3500819	MultiplicativeExpression	buf_size * 8		3500765	0		*			
ANR	3500820	Identifier	buf_size		3500765	0					
ANR	3500821	PrimaryExpression	8		3500765	1					
ANR	3500822	ExpressionStatement	ctx -> frame_data = buf	19:4:343:364	3500765	5	True				
ANR	3500823	AssignmentExpression	ctx -> frame_data = buf		3500765	0		=			
ANR	3500824	PtrMemberAccess	ctx -> frame_data		3500765	0					
ANR	3500825	Identifier	ctx		3500765	0					
ANR	3500826	Identifier	frame_data		3500765	1					
ANR	3500827	Identifier	buf		3500765	1					
ANR	3500828	ExpressionStatement	ctx -> frame_size = buf_size	21:4:371:397	3500765	6	True				
ANR	3500829	AssignmentExpression	ctx -> frame_size = buf_size		3500765	0		=			
ANR	3500830	PtrMemberAccess	ctx -> frame_size		3500765	0					
ANR	3500831	Identifier	ctx		3500765	0					
ANR	3500832	Identifier	frame_size		3500765	1					
ANR	3500833	Identifier	buf_size		3500765	1					
ANR	3500834	ExpressionStatement	"result = ctx -> decode_pic_hdr ( ctx , avctx )"	25:4:406:446	3500765	7	True				
ANR	3500835	AssignmentExpression	"result = ctx -> decode_pic_hdr ( ctx , avctx )"		3500765	0		=			
ANR	3500836	Identifier	result		3500765	0					
ANR	3500837	CallExpression	"ctx -> decode_pic_hdr ( ctx , avctx )"		3500765	1					
ANR	3500838	Callee	ctx -> decode_pic_hdr		3500765	0					
ANR	3500839	PtrMemberAccess	ctx -> decode_pic_hdr		3500765	0					
ANR	3500840	Identifier	ctx		3500765	0					
ANR	3500841	Identifier	decode_pic_hdr		3500765	1					
ANR	3500842	ArgumentList	ctx		3500765	1					
ANR	3500843	Argument	ctx		3500765	0					
ANR	3500844	Identifier	ctx		3500765	0					
ANR	3500845	Argument	avctx		3500765	1					
ANR	3500846	Identifier	avctx		3500765	0					
ANR	3500847	IfStatement	if ( result )		3500765	8					
ANR	3500848	Condition	result	27:8:457:462	3500765	0	True				
ANR	3500849	Identifier	result		3500765	0					
ANR	3500850	CompoundStatement		23:16:346:346	3500765	1					
ANR	3500851	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error while decoding picture header: %d\\n"" , result )"	29:8:476:572	3500765	0	True				
ANR	3500852	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error while decoding picture header: %d\\n"" , result )"		3500765	0					
ANR	3500853	Callee	av_log		3500765	0					
ANR	3500854	Identifier	av_log		3500765	0					
ANR	3500855	ArgumentList	avctx		3500765	1					
ANR	3500856	Argument	avctx		3500765	0					
ANR	3500857	Identifier	avctx		3500765	0					
ANR	3500858	Argument	AV_LOG_ERROR		3500765	1					
ANR	3500859	Identifier	AV_LOG_ERROR		3500765	0					
ANR	3500860	Argument	"""Error while decoding picture header: %d\\n"""		3500765	2					
ANR	3500861	PrimaryExpression	"""Error while decoding picture header: %d\\n"""		3500765	0					
ANR	3500862	Argument	result		3500765	3					
ANR	3500863	Identifier	result		3500765	0					
ANR	3500864	ReturnStatement	return - 1 ;	33:8:583:592	3500765	1	True				
ANR	3500865	UnaryOperationExpression	- 1		3500765	0					
ANR	3500866	UnaryOperator	-		3500765	0					
ANR	3500867	PrimaryExpression	1		3500765	1					
ANR	3500868	IfStatement	if ( ctx -> gop_invalid )		3500765	9					
ANR	3500869	Condition	ctx -> gop_invalid	37:8:610:625	3500765	0	True				
ANR	3500870	PtrMemberAccess	ctx -> gop_invalid		3500765	0					
ANR	3500871	Identifier	ctx		3500765	0					
ANR	3500872	Identifier	gop_invalid		3500765	1					
ANR	3500873	ReturnStatement	return AVERROR_INVALIDDATA ;	39:8:637:663	3500765	1	True				
ANR	3500874	Identifier	AVERROR_INVALIDDATA		3500765	0					
ANR	3500875	IfStatement	if ( ctx -> gop_flags & IVI5_IS_PROTECTED )		3500765	10					
ANR	3500876	Condition	ctx -> gop_flags & IVI5_IS_PROTECTED	43:8:676:709	3500765	0	True				
ANR	3500877	BitAndExpression	ctx -> gop_flags & IVI5_IS_PROTECTED		3500765	0		&			
ANR	3500878	PtrMemberAccess	ctx -> gop_flags		3500765	0					
ANR	3500879	Identifier	ctx		3500765	0					
ANR	3500880	Identifier	gop_flags		3500765	1					
ANR	3500881	Identifier	IVI5_IS_PROTECTED		3500765	1					
ANR	3500882	CompoundStatement		39:44:593:593	3500765	1					
ANR	3500883	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Password-protected clip!\\n"" )"	45:8:723:780	3500765	0	True				
ANR	3500884	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Password-protected clip!\\n"" )"		3500765	0					
ANR	3500885	Callee	av_log		3500765	0					
ANR	3500886	Identifier	av_log		3500765	0					
ANR	3500887	ArgumentList	avctx		3500765	1					
ANR	3500888	Argument	avctx		3500765	0					
ANR	3500889	Identifier	avctx		3500765	0					
ANR	3500890	Argument	AV_LOG_ERROR		3500765	1					
ANR	3500891	Identifier	AV_LOG_ERROR		3500765	0					
ANR	3500892	Argument	"""Password-protected clip!\\n"""		3500765	2					
ANR	3500893	PrimaryExpression	"""Password-protected clip!\\n"""		3500765	0					
ANR	3500894	ReturnStatement	return - 1 ;	47:8:791:800	3500765	1	True				
ANR	3500895	UnaryOperationExpression	- 1		3500765	0					
ANR	3500896	UnaryOperator	-		3500765	0					
ANR	3500897	PrimaryExpression	1		3500765	1					
ANR	3500898	ExpressionStatement	ctx -> switch_buffers ( ctx )	53:4:816:840	3500765	11	True				
ANR	3500899	CallExpression	ctx -> switch_buffers ( ctx )		3500765	0					
ANR	3500900	Callee	ctx -> switch_buffers		3500765	0					
ANR	3500901	PtrMemberAccess	ctx -> switch_buffers		3500765	0					
ANR	3500902	Identifier	ctx		3500765	0					
ANR	3500903	Identifier	switch_buffers		3500765	1					
ANR	3500904	ArgumentList	ctx		3500765	1					
ANR	3500905	Argument	ctx		3500765	0					
ANR	3500906	Identifier	ctx		3500765	0					
ANR	3500907	IfStatement	if ( ctx -> is_nonnull_frame ( ctx ) )		3500765	12					
ANR	3500908	Condition	ctx -> is_nonnull_frame ( ctx )	61:8:877:902	3500765	0	True				
ANR	3500909	CallExpression	ctx -> is_nonnull_frame ( ctx )		3500765	0					
ANR	3500910	Callee	ctx -> is_nonnull_frame		3500765	0					
ANR	3500911	PtrMemberAccess	ctx -> is_nonnull_frame		3500765	0					
ANR	3500912	Identifier	ctx		3500765	0					
ANR	3500913	Identifier	is_nonnull_frame		3500765	1					
ANR	3500914	ArgumentList	ctx		3500765	1					
ANR	3500915	Argument	ctx		3500765	0					
ANR	3500916	Identifier	ctx		3500765	0					
ANR	3500917	CompoundStatement		57:36:786:786	3500765	1					
ANR	3500918	ForStatement	for ( p = 0 ; p < 3 ; p ++ )		3500765	0					
ANR	3500919	ForInit	p = 0 ;	63:13:921:926	3500765	0	True				
ANR	3500920	AssignmentExpression	p = 0		3500765	0		=			
ANR	3500921	Identifier	p		3500765	0					
ANR	3500922	PrimaryExpression	0		3500765	1					
ANR	3500923	Condition	p < 3	63:20:928:932	3500765	1	True				
ANR	3500924	RelationalExpression	p < 3		3500765	0		<			
ANR	3500925	Identifier	p		3500765	0					
ANR	3500926	PrimaryExpression	3		3500765	1					
ANR	3500927	PostIncDecOperationExpression	p ++	63:27:935:937	3500765	2	True				
ANR	3500928	Identifier	p		3500765	0					
ANR	3500929	IncDec	++		3500765	1					
ANR	3500930	CompoundStatement		59:32:821:821	3500765	3					
ANR	3500931	ForStatement	for ( b = 0 ; b < ctx -> planes [ p ] . num_bands ; b ++ )		3500765	0					
ANR	3500932	ForInit	b = 0 ;	65:17:960:965	3500765	0	True				
ANR	3500933	AssignmentExpression	b = 0		3500765	0		=			
ANR	3500934	Identifier	b		3500765	0					
ANR	3500935	PrimaryExpression	0		3500765	1					
ANR	3500936	Condition	b < ctx -> planes [ p ] . num_bands	65:24:967:994	3500765	1	True				
ANR	3500937	RelationalExpression	b < ctx -> planes [ p ] . num_bands		3500765	0		<			
ANR	3500938	Identifier	b		3500765	0					
ANR	3500939	MemberAccess	ctx -> planes [ p ] . num_bands		3500765	1					
ANR	3500940	ArrayIndexing	ctx -> planes [ p ]		3500765	0					
ANR	3500941	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3500942	Identifier	ctx		3500765	0					
ANR	3500943	Identifier	planes		3500765	1					
ANR	3500944	Identifier	p		3500765	1					
ANR	3500945	Identifier	num_bands		3500765	1					
ANR	3500946	PostIncDecOperationExpression	b ++	65:54:997:999	3500765	2	True				
ANR	3500947	Identifier	b		3500765	0					
ANR	3500948	IncDec	++		3500765	1					
ANR	3500949	CompoundStatement		61:59:883:883	3500765	3					
ANR	3500950	ExpressionStatement	"result = decode_band ( ctx , p , & ctx -> planes [ p ] . bands [ b ] , avctx )"	67:16:1021:1082	3500765	0	True				
ANR	3500951	AssignmentExpression	"result = decode_band ( ctx , p , & ctx -> planes [ p ] . bands [ b ] , avctx )"		3500765	0		=			
ANR	3500952	Identifier	result		3500765	0					
ANR	3500953	CallExpression	"decode_band ( ctx , p , & ctx -> planes [ p ] . bands [ b ] , avctx )"		3500765	1					
ANR	3500954	Callee	decode_band		3500765	0					
ANR	3500955	Identifier	decode_band		3500765	0					
ANR	3500956	ArgumentList	ctx		3500765	1					
ANR	3500957	Argument	ctx		3500765	0					
ANR	3500958	Identifier	ctx		3500765	0					
ANR	3500959	Argument	p		3500765	1					
ANR	3500960	Identifier	p		3500765	0					
ANR	3500961	Argument	& ctx -> planes [ p ] . bands [ b ]		3500765	2					
ANR	3500962	UnaryOperationExpression	& ctx -> planes [ p ] . bands [ b ]		3500765	0					
ANR	3500963	UnaryOperator	&		3500765	0					
ANR	3500964	ArrayIndexing	ctx -> planes [ p ] . bands [ b ]		3500765	1					
ANR	3500965	MemberAccess	ctx -> planes [ p ] . bands		3500765	0					
ANR	3500966	ArrayIndexing	ctx -> planes [ p ]		3500765	0					
ANR	3500967	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3500968	Identifier	ctx		3500765	0					
ANR	3500969	Identifier	planes		3500765	1					
ANR	3500970	Identifier	p		3500765	1					
ANR	3500971	Identifier	bands		3500765	1					
ANR	3500972	Identifier	b		3500765	1					
ANR	3500973	Argument	avctx		3500765	3					
ANR	3500974	Identifier	avctx		3500765	0					
ANR	3500975	IfStatement	if ( result )		3500765	1					
ANR	3500976	Condition	result	69:20:1105:1110	3500765	0	True				
ANR	3500977	Identifier	result		3500765	0					
ANR	3500978	CompoundStatement		65:28:994:994	3500765	1					
ANR	3500979	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error while decoding band: %d, plane: %d\\n"" , b , p )"	71:20:1136:1243	3500765	0	True				
ANR	3500980	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error while decoding band: %d, plane: %d\\n"" , b , p )"		3500765	0					
ANR	3500981	Callee	av_log		3500765	0					
ANR	3500982	Identifier	av_log		3500765	0					
ANR	3500983	ArgumentList	avctx		3500765	1					
ANR	3500984	Argument	avctx		3500765	0					
ANR	3500985	Identifier	avctx		3500765	0					
ANR	3500986	Argument	AV_LOG_ERROR		3500765	1					
ANR	3500987	Identifier	AV_LOG_ERROR		3500765	0					
ANR	3500988	Argument	"""Error while decoding band: %d, plane: %d\\n"""		3500765	2					
ANR	3500989	PrimaryExpression	"""Error while decoding band: %d, plane: %d\\n"""		3500765	0					
ANR	3500990	Argument	b		3500765	3					
ANR	3500991	Identifier	b		3500765	0					
ANR	3500992	Argument	p		3500765	4					
ANR	3500993	Identifier	p		3500765	0					
ANR	3500994	ReturnStatement	return - 1 ;	75:20:1266:1275	3500765	1	True				
ANR	3500995	UnaryOperationExpression	- 1		3500765	0					
ANR	3500996	UnaryOperator	-		3500765	0					
ANR	3500997	PrimaryExpression	1		3500765	1					
ANR	3500998	IfStatement	if ( avctx -> codec_id == AV_CODEC_ID_INDEO4 && ctx -> frame_type == 0 )		3500765	13					
ANR	3500999	Condition	avctx -> codec_id == AV_CODEC_ID_INDEO4 && ctx -> frame_type == 0	97:8:1641:1701	3500765	0	True				
ANR	3501000	AndExpression	avctx -> codec_id == AV_CODEC_ID_INDEO4 && ctx -> frame_type == 0		3500765	0		&&			
ANR	3501001	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_INDEO4		3500765	0		==			
ANR	3501002	PtrMemberAccess	avctx -> codec_id		3500765	0					
ANR	3501003	Identifier	avctx		3500765	0					
ANR	3501004	Identifier	codec_id		3500765	1					
ANR	3501005	Identifier	AV_CODEC_ID_INDEO4		3500765	1					
ANR	3501006	EqualityExpression	ctx -> frame_type == 0		3500765	1		==			
ANR	3501007	PtrMemberAccess	ctx -> frame_type		3500765	0					
ANR	3501008	Identifier	ctx		3500765	0					
ANR	3501009	Identifier	frame_type		3500765	1					
ANR	3501010	PrimaryExpression	0		3500765	1					
ANR	3501011	CompoundStatement		93:90:1604:1604	3500765	1					
ANR	3501012	WhileStatement	"while ( get_bits ( & ctx -> gb , 8 ) )"		3500765	0					
ANR	3501013	Condition	"get_bits ( & ctx -> gb , 8 )"	99:15:1741:1761	3500765	0	True				
ANR	3501014	CallExpression	"get_bits ( & ctx -> gb , 8 )"		3500765	0					
ANR	3501015	Callee	get_bits		3500765	0					
ANR	3501016	Identifier	get_bits		3500765	0					
ANR	3501017	ArgumentList	& ctx -> gb		3500765	1					
ANR	3501018	Argument	& ctx -> gb		3500765	0					
ANR	3501019	UnaryOperationExpression	& ctx -> gb		3500765	0					
ANR	3501020	UnaryOperator	&		3500765	0					
ANR	3501021	PtrMemberAccess	ctx -> gb		3500765	1					
ANR	3501022	Identifier	ctx		3500765	0					
ANR	3501023	Identifier	gb		3500765	1					
ANR	3501024	Argument	8		3500765	1					
ANR	3501025	PrimaryExpression	8		3500765	0					
ANR	3501026	ExpressionStatement		99:37:1763:1763	3500765	1	True				
ANR	3501027	ExpressionStatement	"skip_bits_long ( & ctx -> gb , 64 )"	101:8:1797:1825	3500765	1	True				
ANR	3501028	CallExpression	"skip_bits_long ( & ctx -> gb , 64 )"		3500765	0					
ANR	3501029	Callee	skip_bits_long		3500765	0					
ANR	3501030	Identifier	skip_bits_long		3500765	0					
ANR	3501031	ArgumentList	& ctx -> gb		3500765	1					
ANR	3501032	Argument	& ctx -> gb		3500765	0					
ANR	3501033	UnaryOperationExpression	& ctx -> gb		3500765	0					
ANR	3501034	UnaryOperator	&		3500765	0					
ANR	3501035	PtrMemberAccess	ctx -> gb		3500765	1					
ANR	3501036	Identifier	ctx		3500765	0					
ANR	3501037	Identifier	gb		3500765	1					
ANR	3501038	Argument	64		3500765	1					
ANR	3501039	PrimaryExpression	64		3500765	0					
ANR	3501040	IfStatement	"if ( get_bits_left ( & ctx -> gb ) > 18 && show_bits ( & ctx -> gb , 18 ) == 0x3FFF8 )"		3500765	2					
ANR	3501041	Condition	"get_bits_left ( & ctx -> gb ) > 18 && show_bits ( & ctx -> gb , 18 ) == 0x3FFF8"	103:12:1900:1965	3500765	0	True				
ANR	3501042	AndExpression	"get_bits_left ( & ctx -> gb ) > 18 && show_bits ( & ctx -> gb , 18 ) == 0x3FFF8"		3500765	0		&&			
ANR	3501043	RelationalExpression	get_bits_left ( & ctx -> gb ) > 18		3500765	0		>			
ANR	3501044	CallExpression	get_bits_left ( & ctx -> gb )		3500765	0					
ANR	3501045	Callee	get_bits_left		3500765	0					
ANR	3501046	Identifier	get_bits_left		3500765	0					
ANR	3501047	ArgumentList	& ctx -> gb		3500765	1					
ANR	3501048	Argument	& ctx -> gb		3500765	0					
ANR	3501049	UnaryOperationExpression	& ctx -> gb		3500765	0					
ANR	3501050	UnaryOperator	&		3500765	0					
ANR	3501051	PtrMemberAccess	ctx -> gb		3500765	1					
ANR	3501052	Identifier	ctx		3500765	0					
ANR	3501053	Identifier	gb		3500765	1					
ANR	3501054	PrimaryExpression	18		3500765	1					
ANR	3501055	EqualityExpression	"show_bits ( & ctx -> gb , 18 ) == 0x3FFF8"		3500765	1		==			
ANR	3501056	CallExpression	"show_bits ( & ctx -> gb , 18 )"		3500765	0					
ANR	3501057	Callee	show_bits		3500765	0					
ANR	3501058	Identifier	show_bits		3500765	0					
ANR	3501059	ArgumentList	& ctx -> gb		3500765	1					
ANR	3501060	Argument	& ctx -> gb		3500765	0					
ANR	3501061	UnaryOperationExpression	& ctx -> gb		3500765	0					
ANR	3501062	UnaryOperator	&		3500765	0					
ANR	3501063	PtrMemberAccess	ctx -> gb		3500765	1					
ANR	3501064	Identifier	ctx		3500765	0					
ANR	3501065	Identifier	gb		3500765	1					
ANR	3501066	Argument	18		3500765	1					
ANR	3501067	PrimaryExpression	18		3500765	0					
ANR	3501068	PrimaryExpression	0x3FFF8		3500765	1					
ANR	3501069	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Buffer contains IP frames!\\n"" )"	105:12:1981:2040	3500765	1	True				
ANR	3501070	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Buffer contains IP frames!\\n"" )"		3500765	0					
ANR	3501071	Callee	av_log		3500765	0					
ANR	3501072	Identifier	av_log		3500765	0					
ANR	3501073	ArgumentList	avctx		3500765	1					
ANR	3501074	Argument	avctx		3500765	0					
ANR	3501075	Identifier	avctx		3500765	0					
ANR	3501076	Argument	AV_LOG_ERROR		3500765	1					
ANR	3501077	Identifier	AV_LOG_ERROR		3500765	0					
ANR	3501078	Argument	"""Buffer contains IP frames!\\n"""		3500765	2					
ANR	3501079	PrimaryExpression	"""Buffer contains IP frames!\\n"""		3500765	0					
ANR	3501080	IfStatement	if ( ctx -> frame . data [ 0 ] )		3500765	14					
ANR	3501081	Condition	ctx -> frame . data [ 0 ]	111:8:2060:2077	3500765	0	True				
ANR	3501082	ArrayIndexing	ctx -> frame . data [ 0 ]		3500765	0					
ANR	3501083	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501084	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501085	Identifier	ctx		3500765	0					
ANR	3501086	Identifier	frame		3500765	1					
ANR	3501087	Identifier	data		3500765	1					
ANR	3501088	PrimaryExpression	0		3500765	1					
ANR	3501089	ExpressionStatement	"avctx -> release_buffer ( avctx , & ctx -> frame )"	113:8:2089:2130	3500765	1	True				
ANR	3501090	CallExpression	"avctx -> release_buffer ( avctx , & ctx -> frame )"		3500765	0					
ANR	3501091	Callee	avctx -> release_buffer		3500765	0					
ANR	3501092	PtrMemberAccess	avctx -> release_buffer		3500765	0					
ANR	3501093	Identifier	avctx		3500765	0					
ANR	3501094	Identifier	release_buffer		3500765	1					
ANR	3501095	ArgumentList	avctx		3500765	1					
ANR	3501096	Argument	avctx		3500765	0					
ANR	3501097	Identifier	avctx		3500765	0					
ANR	3501098	Argument	& ctx -> frame		3500765	1					
ANR	3501099	UnaryOperationExpression	& ctx -> frame		3500765	0					
ANR	3501100	UnaryOperator	&		3500765	0					
ANR	3501101	PtrMemberAccess	ctx -> frame		3500765	1					
ANR	3501102	Identifier	ctx		3500765	0					
ANR	3501103	Identifier	frame		3500765	1					
ANR	3501104	ExpressionStatement	ctx -> frame . reference = 0	117:4:2139:2163	3500765	15	True				
ANR	3501105	AssignmentExpression	ctx -> frame . reference = 0		3500765	0		=			
ANR	3501106	MemberAccess	ctx -> frame . reference		3500765	0					
ANR	3501107	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501108	Identifier	ctx		3500765	0					
ANR	3501109	Identifier	frame		3500765	1					
ANR	3501110	Identifier	reference		3500765	1					
ANR	3501111	PrimaryExpression	0		3500765	1					
ANR	3501112	IfStatement	"if ( ( result = avctx -> get_buffer ( avctx , & ctx -> frame ) ) < 0 )"		3500765	16					
ANR	3501113	Condition	"( result = avctx -> get_buffer ( avctx , & ctx -> frame ) ) < 0"	120:8:2175:2226	3500765	0	True				
ANR	3501114	RelationalExpression	"( result = avctx -> get_buffer ( avctx , & ctx -> frame ) ) < 0"		3500765	0		<			
ANR	3501115	AssignmentExpression	"result = avctx -> get_buffer ( avctx , & ctx -> frame )"		3500765	0		=			
ANR	3501116	Identifier	result		3500765	0					
ANR	3501117	CallExpression	"avctx -> get_buffer ( avctx , & ctx -> frame )"		3500765	1					
ANR	3501118	Callee	avctx -> get_buffer		3500765	0					
ANR	3501119	PtrMemberAccess	avctx -> get_buffer		3500765	0					
ANR	3501120	Identifier	avctx		3500765	0					
ANR	3501121	Identifier	get_buffer		3500765	1					
ANR	3501122	ArgumentList	avctx		3500765	1					
ANR	3501123	Argument	avctx		3500765	0					
ANR	3501124	Identifier	avctx		3500765	0					
ANR	3501125	Argument	& ctx -> frame		3500765	1					
ANR	3501126	UnaryOperationExpression	& ctx -> frame		3500765	0					
ANR	3501127	UnaryOperator	&		3500765	0					
ANR	3501128	PtrMemberAccess	ctx -> frame		3500765	1					
ANR	3501129	Identifier	ctx		3500765	0					
ANR	3501130	Identifier	frame		3500765	1					
ANR	3501131	PrimaryExpression	0		3500765	1					
ANR	3501132	CompoundStatement		116:62:2110:2110	3500765	1					
ANR	3501133	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	122:8:2240:2292	3500765	0	True				
ANR	3501134	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		3500765	0					
ANR	3501135	Callee	av_log		3500765	0					
ANR	3501136	Identifier	av_log		3500765	0					
ANR	3501137	ArgumentList	avctx		3500765	1					
ANR	3501138	Argument	avctx		3500765	0					
ANR	3501139	Identifier	avctx		3500765	0					
ANR	3501140	Argument	AV_LOG_ERROR		3500765	1					
ANR	3501141	Identifier	AV_LOG_ERROR		3500765	0					
ANR	3501142	Argument	"""get_buffer() failed\\n"""		3500765	2					
ANR	3501143	PrimaryExpression	"""get_buffer() failed\\n"""		3500765	0					
ANR	3501144	ReturnStatement	return result ;	124:8:2303:2316	3500765	1	True				
ANR	3501145	Identifier	result		3500765	0					
ANR	3501146	IfStatement	if ( ctx -> is_scalable )		3500765	17					
ANR	3501147	Condition	ctx -> is_scalable	130:8:2336:2351	3500765	0	True				
ANR	3501148	PtrMemberAccess	ctx -> is_scalable		3500765	0					
ANR	3501149	Identifier	ctx		3500765	0					
ANR	3501150	Identifier	is_scalable		3500765	1					
ANR	3501151	CompoundStatement		126:26:2235:2235	3500765	1					
ANR	3501152	IfStatement	if ( avctx -> codec_id == AV_CODEC_ID_INDEO4 )		3500765	0					
ANR	3501153	Condition	avctx -> codec_id == AV_CODEC_ID_INDEO4	132:12:2369:2405	3500765	0	True				
ANR	3501154	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_INDEO4		3500765	0		==			
ANR	3501155	PtrMemberAccess	avctx -> codec_id		3500765	0					
ANR	3501156	Identifier	avctx		3500765	0					
ANR	3501157	Identifier	codec_id		3500765	1					
ANR	3501158	Identifier	AV_CODEC_ID_INDEO4		3500765	1					
ANR	3501159	ExpressionStatement	"ff_ivi_recompose_haar ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] , 4 )"	134:12:2421:2506	3500765	1	True				
ANR	3501160	CallExpression	"ff_ivi_recompose_haar ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] , 4 )"		3500765	0					
ANR	3501161	Callee	ff_ivi_recompose_haar		3500765	0					
ANR	3501162	Identifier	ff_ivi_recompose_haar		3500765	0					
ANR	3501163	ArgumentList	& ctx -> planes [ 0 ]		3500765	1					
ANR	3501164	Argument	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501165	UnaryOperationExpression	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501166	UnaryOperator	&		3500765	0					
ANR	3501167	ArrayIndexing	ctx -> planes [ 0 ]		3500765	1					
ANR	3501168	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3501169	Identifier	ctx		3500765	0					
ANR	3501170	Identifier	planes		3500765	1					
ANR	3501171	PrimaryExpression	0		3500765	1					
ANR	3501172	Argument	ctx -> frame . data [ 0 ]		3500765	1					
ANR	3501173	ArrayIndexing	ctx -> frame . data [ 0 ]		3500765	0					
ANR	3501174	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501175	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501176	Identifier	ctx		3500765	0					
ANR	3501177	Identifier	frame		3500765	1					
ANR	3501178	Identifier	data		3500765	1					
ANR	3501179	PrimaryExpression	0		3500765	1					
ANR	3501180	Argument	ctx -> frame . linesize [ 0 ]		3500765	2					
ANR	3501181	ArrayIndexing	ctx -> frame . linesize [ 0 ]		3500765	0					
ANR	3501182	MemberAccess	ctx -> frame . linesize		3500765	0					
ANR	3501183	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501184	Identifier	ctx		3500765	0					
ANR	3501185	Identifier	frame		3500765	1					
ANR	3501186	Identifier	linesize		3500765	1					
ANR	3501187	PrimaryExpression	0		3500765	1					
ANR	3501188	Argument	4		3500765	3					
ANR	3501189	PrimaryExpression	4		3500765	0					
ANR	3501190	ElseStatement	else		3500765	0					
ANR	3501191	ExpressionStatement	"ff_ivi_recompose53 ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] , 4 )"	138:12:2535:2620	3500765	0	True				
ANR	3501192	CallExpression	"ff_ivi_recompose53 ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] , 4 )"		3500765	0					
ANR	3501193	Callee	ff_ivi_recompose53		3500765	0					
ANR	3501194	Identifier	ff_ivi_recompose53		3500765	0					
ANR	3501195	ArgumentList	& ctx -> planes [ 0 ]		3500765	1					
ANR	3501196	Argument	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501197	UnaryOperationExpression	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501198	UnaryOperator	&		3500765	0					
ANR	3501199	ArrayIndexing	ctx -> planes [ 0 ]		3500765	1					
ANR	3501200	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3501201	Identifier	ctx		3500765	0					
ANR	3501202	Identifier	planes		3500765	1					
ANR	3501203	PrimaryExpression	0		3500765	1					
ANR	3501204	Argument	ctx -> frame . data [ 0 ]		3500765	1					
ANR	3501205	ArrayIndexing	ctx -> frame . data [ 0 ]		3500765	0					
ANR	3501206	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501207	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501208	Identifier	ctx		3500765	0					
ANR	3501209	Identifier	frame		3500765	1					
ANR	3501210	Identifier	data		3500765	1					
ANR	3501211	PrimaryExpression	0		3500765	1					
ANR	3501212	Argument	ctx -> frame . linesize [ 0 ]		3500765	2					
ANR	3501213	ArrayIndexing	ctx -> frame . linesize [ 0 ]		3500765	0					
ANR	3501214	MemberAccess	ctx -> frame . linesize		3500765	0					
ANR	3501215	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501216	Identifier	ctx		3500765	0					
ANR	3501217	Identifier	frame		3500765	1					
ANR	3501218	Identifier	linesize		3500765	1					
ANR	3501219	PrimaryExpression	0		3500765	1					
ANR	3501220	Argument	4		3500765	3					
ANR	3501221	PrimaryExpression	4		3500765	0					
ANR	3501222	ElseStatement	else		3500765	0					
ANR	3501223	CompoundStatement		136:11:2515:2515	3500765	0					
ANR	3501224	ExpressionStatement	"ff_ivi_output_plane ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] )"	142:8:2645:2725	3500765	0	True				
ANR	3501225	CallExpression	"ff_ivi_output_plane ( & ctx -> planes [ 0 ] , ctx -> frame . data [ 0 ] , ctx -> frame . linesize [ 0 ] )"		3500765	0					
ANR	3501226	Callee	ff_ivi_output_plane		3500765	0					
ANR	3501227	Identifier	ff_ivi_output_plane		3500765	0					
ANR	3501228	ArgumentList	& ctx -> planes [ 0 ]		3500765	1					
ANR	3501229	Argument	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501230	UnaryOperationExpression	& ctx -> planes [ 0 ]		3500765	0					
ANR	3501231	UnaryOperator	&		3500765	0					
ANR	3501232	ArrayIndexing	ctx -> planes [ 0 ]		3500765	1					
ANR	3501233	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3501234	Identifier	ctx		3500765	0					
ANR	3501235	Identifier	planes		3500765	1					
ANR	3501236	PrimaryExpression	0		3500765	1					
ANR	3501237	Argument	ctx -> frame . data [ 0 ]		3500765	1					
ANR	3501238	ArrayIndexing	ctx -> frame . data [ 0 ]		3500765	0					
ANR	3501239	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501240	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501241	Identifier	ctx		3500765	0					
ANR	3501242	Identifier	frame		3500765	1					
ANR	3501243	Identifier	data		3500765	1					
ANR	3501244	PrimaryExpression	0		3500765	1					
ANR	3501245	Argument	ctx -> frame . linesize [ 0 ]		3500765	2					
ANR	3501246	ArrayIndexing	ctx -> frame . linesize [ 0 ]		3500765	0					
ANR	3501247	MemberAccess	ctx -> frame . linesize		3500765	0					
ANR	3501248	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501249	Identifier	ctx		3500765	0					
ANR	3501250	Identifier	frame		3500765	1					
ANR	3501251	Identifier	linesize		3500765	1					
ANR	3501252	PrimaryExpression	0		3500765	1					
ANR	3501253	ExpressionStatement	"ff_ivi_output_plane ( & ctx -> planes [ 2 ] , ctx -> frame . data [ 1 ] , ctx -> frame . linesize [ 1 ] )"	148:4:2741:2821	3500765	18	True				
ANR	3501254	CallExpression	"ff_ivi_output_plane ( & ctx -> planes [ 2 ] , ctx -> frame . data [ 1 ] , ctx -> frame . linesize [ 1 ] )"		3500765	0					
ANR	3501255	Callee	ff_ivi_output_plane		3500765	0					
ANR	3501256	Identifier	ff_ivi_output_plane		3500765	0					
ANR	3501257	ArgumentList	& ctx -> planes [ 2 ]		3500765	1					
ANR	3501258	Argument	& ctx -> planes [ 2 ]		3500765	0					
ANR	3501259	UnaryOperationExpression	& ctx -> planes [ 2 ]		3500765	0					
ANR	3501260	UnaryOperator	&		3500765	0					
ANR	3501261	ArrayIndexing	ctx -> planes [ 2 ]		3500765	1					
ANR	3501262	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3501263	Identifier	ctx		3500765	0					
ANR	3501264	Identifier	planes		3500765	1					
ANR	3501265	PrimaryExpression	2		3500765	1					
ANR	3501266	Argument	ctx -> frame . data [ 1 ]		3500765	1					
ANR	3501267	ArrayIndexing	ctx -> frame . data [ 1 ]		3500765	0					
ANR	3501268	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501269	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501270	Identifier	ctx		3500765	0					
ANR	3501271	Identifier	frame		3500765	1					
ANR	3501272	Identifier	data		3500765	1					
ANR	3501273	PrimaryExpression	1		3500765	1					
ANR	3501274	Argument	ctx -> frame . linesize [ 1 ]		3500765	2					
ANR	3501275	ArrayIndexing	ctx -> frame . linesize [ 1 ]		3500765	0					
ANR	3501276	MemberAccess	ctx -> frame . linesize		3500765	0					
ANR	3501277	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501278	Identifier	ctx		3500765	0					
ANR	3501279	Identifier	frame		3500765	1					
ANR	3501280	Identifier	linesize		3500765	1					
ANR	3501281	PrimaryExpression	1		3500765	1					
ANR	3501282	ExpressionStatement	"ff_ivi_output_plane ( & ctx -> planes [ 1 ] , ctx -> frame . data [ 2 ] , ctx -> frame . linesize [ 2 ] )"	150:4:2828:2908	3500765	19	True				
ANR	3501283	CallExpression	"ff_ivi_output_plane ( & ctx -> planes [ 1 ] , ctx -> frame . data [ 2 ] , ctx -> frame . linesize [ 2 ] )"		3500765	0					
ANR	3501284	Callee	ff_ivi_output_plane		3500765	0					
ANR	3501285	Identifier	ff_ivi_output_plane		3500765	0					
ANR	3501286	ArgumentList	& ctx -> planes [ 1 ]		3500765	1					
ANR	3501287	Argument	& ctx -> planes [ 1 ]		3500765	0					
ANR	3501288	UnaryOperationExpression	& ctx -> planes [ 1 ]		3500765	0					
ANR	3501289	UnaryOperator	&		3500765	0					
ANR	3501290	ArrayIndexing	ctx -> planes [ 1 ]		3500765	1					
ANR	3501291	PtrMemberAccess	ctx -> planes		3500765	0					
ANR	3501292	Identifier	ctx		3500765	0					
ANR	3501293	Identifier	planes		3500765	1					
ANR	3501294	PrimaryExpression	1		3500765	1					
ANR	3501295	Argument	ctx -> frame . data [ 2 ]		3500765	1					
ANR	3501296	ArrayIndexing	ctx -> frame . data [ 2 ]		3500765	0					
ANR	3501297	MemberAccess	ctx -> frame . data		3500765	0					
ANR	3501298	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501299	Identifier	ctx		3500765	0					
ANR	3501300	Identifier	frame		3500765	1					
ANR	3501301	Identifier	data		3500765	1					
ANR	3501302	PrimaryExpression	2		3500765	1					
ANR	3501303	Argument	ctx -> frame . linesize [ 2 ]		3500765	2					
ANR	3501304	ArrayIndexing	ctx -> frame . linesize [ 2 ]		3500765	0					
ANR	3501305	MemberAccess	ctx -> frame . linesize		3500765	0					
ANR	3501306	PtrMemberAccess	ctx -> frame		3500765	0					
ANR	3501307	Identifier	ctx		3500765	0					
ANR	3501308	Identifier	frame		3500765	1					
ANR	3501309	Identifier	linesize		3500765	1					
ANR	3501310	PrimaryExpression	2		3500765	1					
ANR	3501311	ExpressionStatement	* data_size = sizeof ( AVFrame )	154:4:2917:2945	3500765	20	True				
ANR	3501312	AssignmentExpression	* data_size = sizeof ( AVFrame )		3500765	0		=			
ANR	3501313	UnaryOperationExpression	* data_size		3500765	0					
ANR	3501314	UnaryOperator	*		3500765	0					
ANR	3501315	Identifier	data_size		3500765	1					
ANR	3501316	SizeofExpression	sizeof ( AVFrame )		3500765	1					
ANR	3501317	Sizeof	sizeof		3500765	0					
ANR	3501318	SizeofOperand	AVFrame		3500765	1					
ANR	3501319	ExpressionStatement	* ( AVFrame * ) data = ctx -> frame	156:4:2952:2980	3500765	21	True				
ANR	3501320	AssignmentExpression	* ( AVFrame * ) data = ctx -> frame		3500765	0		=			
ANR	3501321	UnaryOperationExpression	* ( AVFrame * ) data		3500765	0					
ANR	3501322	UnaryOperator	*		3500765	0					
ANR	3501323	CastExpression	( AVFrame * ) data		3500765	1					
ANR	3501324	CastTarget	AVFrame *		3500765	0					
ANR	3501325	Identifier	data		3500765	1					
ANR	3501326	PtrMemberAccess	ctx -> frame		3500765	1					
ANR	3501327	Identifier	ctx		3500765	0					
ANR	3501328	Identifier	frame		3500765	1					
ANR	3501329	ReturnStatement	return buf_size ;	160:4:2989:3004	3500765	22	True				
ANR	3501330	Identifier	buf_size		3500765	0					
ANR	3501331	ReturnType	int		3500765	1					
ANR	3501332	Identifier	ff_ivi_decode_frame		3500765	2					
ANR	3501333	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		3500765	3					
ANR	3501334	Parameter	AVCodecContext * avctx	1:24:24:44	3500765	0	True				
ANR	3501335	ParameterType	AVCodecContext *		3500765	0					
ANR	3501336	Identifier	avctx		3500765	1					
ANR	3501337	Parameter	void * data	1:47:47:56	3500765	1	True				
ANR	3501338	ParameterType	void *		3500765	0					
ANR	3501339	Identifier	data		3500765	1					
ANR	3501340	Parameter	int * data_size	1:59:59:72	3500765	2	True				
ANR	3501341	ParameterType	int *		3500765	0					
ANR	3501342	Identifier	data_size		3500765	1					
ANR	3501343	Parameter	AVPacket * avpkt	3:24:100:114	3500765	3	True				
ANR	3501344	ParameterType	AVPacket *		3500765	0					
ANR	3501345	Identifier	avpkt		3500765	1					
ANR	3501346	CFGEntryNode	ENTRY		3500765		True				
ANR	3501347	CFGExitNode	EXIT		3500765		True				
ANR	3501348	Symbol	ctx -> frame_type		3500765						
ANR	3501349	Symbol	data		3500765						
ANR	3501350	Symbol	ctx -> frame		3500765						
ANR	3501351	Symbol	get_bits		3500765						
ANR	3501352	Symbol	* ctx -> frame . linesize		3500765						
ANR	3501353	Symbol	avpkt		3500765						
ANR	3501354	Symbol	* data_size		3500765						
ANR	3501355	Symbol	ctx -> frame_data		3500765						
ANR	3501356	Symbol	show_bits		3500765						
ANR	3501357	Symbol	ctx -> planes		3500765						
ANR	3501358	Symbol	AV_CODEC_ID_INDEO4		3500765						
ANR	3501359	Symbol	* ctx -> frame		3500765						
ANR	3501360	Symbol	data_size		3500765						
ANR	3501361	Symbol	ctx -> gop_invalid		3500765						
ANR	3501362	Symbol	ctx		3500765						
ANR	3501363	Symbol	buf_size		3500765						
ANR	3501364	Symbol	ctx -> decode_pic_hdr		3500765						
ANR	3501365	Symbol	ctx -> frame . data		3500765						
ANR	3501366	Symbol	& ctx -> frame		3500765						
ANR	3501367	Symbol	* avctx		3500765						
ANR	3501368	Symbol	avpkt -> data		3500765						
ANR	3501369	Symbol	ctx -> planes [ p ] . bands		3500765						
ANR	3501370	Symbol	ctx -> frame . reference		3500765						
ANR	3501371	Symbol	avctx -> codec_id		3500765						
ANR	3501372	Symbol	ctx -> frame_size		3500765						
ANR	3501373	Symbol	& ctx -> gb		3500765						
ANR	3501374	Symbol	get_bits_left		3500765						
ANR	3501375	Symbol	result		3500765						
ANR	3501376	Symbol	IVI5_IS_PROTECTED		3500765						
ANR	3501377	Symbol	ctx -> is_scalable		3500765						
ANR	3501378	Symbol	avpkt -> size		3500765						
ANR	3501379	Symbol	avctx		3500765						
ANR	3501380	Symbol	ctx -> planes [ p ] . num_bands		3500765						
ANR	3501381	Symbol	* avpkt		3500765						
ANR	3501382	Symbol	b		3500765						
ANR	3501383	Symbol	ctx -> frame . linesize		3500765						
ANR	3501384	Symbol	AV_LOG_ERROR		3500765						
ANR	3501385	Symbol	ctx -> is_nonnull_frame		3500765						
ANR	3501386	Symbol	avctx -> get_buffer		3500765						
ANR	3501387	Symbol	avctx -> priv_data		3500765						
ANR	3501388	Symbol	* ctx -> planes		3500765						
ANR	3501389	Symbol	* ctx		3500765						
ANR	3501390	Symbol	p		3500765						
ANR	3501391	Symbol	buf		3500765						
ANR	3501392	Symbol	ctx -> gop_flags		3500765						
ANR	3501393	Symbol	* ctx -> frame . data		3500765						
ANR	3501394	Symbol	AVERROR_INVALIDDATA		3500765						
ANR	3501395	Symbol	* p		3500765						
ANR	3501396	Symbol	* * ctx		3500765						
ANR	3501397	Symbol	* ( AVFrame * ) data		3500765						
ANR	3501398	Symbol	decode_band		3500765						
ANR	3501399	Symbol	* data		3500765						
