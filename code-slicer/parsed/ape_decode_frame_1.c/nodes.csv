command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	559988	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ape_decode_frame_1.c								
ANR	559989	Function	ape_decode_frame	1:0:0:2547							
ANR	559990	FunctionDef	"ape_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		559989	0					
ANR	559991	CompoundStatement		7:0:155:2547	559989	0					
ANR	559992	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	559989	0	True				
ANR	559993	IdentifierDecl	* buf = avpkt -> data		559989	0					
ANR	559994	IdentifierDeclType	const uint8_t *		559989	0					
ANR	559995	Identifier	buf		559989	1					
ANR	559996	AssignmentExpression	* buf = avpkt -> data		559989	2		=			
ANR	559997	Identifier	buf		559989	0					
ANR	559998	PtrMemberAccess	avpkt -> data		559989	1					
ANR	559999	Identifier	avpkt		559989	0					
ANR	560000	Identifier	data		559989	1					
ANR	560001	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:227	559989	1	True				
ANR	560002	IdentifierDecl	buf_size = avpkt -> size		559989	0					
ANR	560003	IdentifierDeclType	int		559989	0					
ANR	560004	Identifier	buf_size		559989	1					
ANR	560005	AssignmentExpression	buf_size = avpkt -> size		559989	2		=			
ANR	560006	Identifier	buf_size		559989	0					
ANR	560007	PtrMemberAccess	avpkt -> size		559989	1					
ANR	560008	Identifier	avpkt		559989	0					
ANR	560009	Identifier	size		559989	1					
ANR	560010	IdentifierDeclStatement	APEContext * s = avctx -> priv_data ;	13:4:234:266	559989	2	True				
ANR	560011	IdentifierDecl	* s = avctx -> priv_data		559989	0					
ANR	560012	IdentifierDeclType	APEContext *		559989	0					
ANR	560013	Identifier	s		559989	1					
ANR	560014	AssignmentExpression	* s = avctx -> priv_data		559989	2		=			
ANR	560015	Identifier	s		559989	0					
ANR	560016	PtrMemberAccess	avctx -> priv_data		559989	1					
ANR	560017	Identifier	avctx		559989	0					
ANR	560018	Identifier	priv_data		559989	1					
ANR	560019	IdentifierDeclStatement	int16_t * samples = data ;	15:4:273:296	559989	3	True				
ANR	560020	IdentifierDecl	* samples = data		559989	0					
ANR	560021	IdentifierDeclType	int16_t *		559989	0					
ANR	560022	Identifier	samples		559989	1					
ANR	560023	AssignmentExpression	* samples = data		559989	2		=			
ANR	560024	Identifier	data		559989	0					
ANR	560025	Identifier	data		559989	1					
ANR	560026	IdentifierDeclStatement	int nblocks ;	17:4:303:314	559989	4	True				
ANR	560027	IdentifierDecl	nblocks		559989	0					
ANR	560028	IdentifierDeclType	int		559989	0					
ANR	560029	Identifier	nblocks		559989	1					
ANR	560030	IdentifierDeclStatement	"int i , n ;"	19:4:321:329	559989	5	True				
ANR	560031	IdentifierDecl	i		559989	0					
ANR	560032	IdentifierDeclType	int		559989	0					
ANR	560033	Identifier	i		559989	1					
ANR	560034	IdentifierDecl	n		559989	1					
ANR	560035	IdentifierDeclType	int		559989	0					
ANR	560036	Identifier	n		559989	1					
ANR	560037	IdentifierDeclStatement	int blockstodecode ;	21:4:336:354	559989	6	True				
ANR	560038	IdentifierDecl	blockstodecode		559989	0					
ANR	560039	IdentifierDeclType	int		559989	0					
ANR	560040	Identifier	blockstodecode		559989	1					
ANR	560041	IdentifierDeclStatement	int bytes_used ;	23:4:361:375	559989	7	True				
ANR	560042	IdentifierDecl	bytes_used		559989	0					
ANR	560043	IdentifierDeclType	int		559989	0					
ANR	560044	Identifier	bytes_used		559989	1					
ANR	560045	IfStatement	if ( BLOCKS_PER_LOOP * 2 * avctx -> channels > * data_size )		559989	8					
ANR	560046	Condition	BLOCKS_PER_LOOP * 2 * avctx -> channels > * data_size	29:8:431:480	559989	0	True				
ANR	560047	RelationalExpression	BLOCKS_PER_LOOP * 2 * avctx -> channels > * data_size		559989	0		>			
ANR	560048	MultiplicativeExpression	BLOCKS_PER_LOOP * 2 * avctx -> channels		559989	0		*			
ANR	560049	Identifier	BLOCKS_PER_LOOP		559989	0					
ANR	560050	MultiplicativeExpression	2 * avctx -> channels		559989	1		*			
ANR	560051	PrimaryExpression	2		559989	0					
ANR	560052	PtrMemberAccess	avctx -> channels		559989	1					
ANR	560053	Identifier	avctx		559989	0					
ANR	560054	Identifier	channels		559989	1					
ANR	560055	UnaryOperationExpression	* data_size		559989	1					
ANR	560056	UnaryOperator	*		559989	0					
ANR	560057	Identifier	data_size		559989	1					
ANR	560058	CompoundStatement		23:60:327:327	559989	1					
ANR	560059	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Output buffer is too small.\\n"" )"	31:8:494:555	559989	0	True				
ANR	560060	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Output buffer is too small.\\n"" )"		559989	0					
ANR	560061	Callee	av_log		559989	0					
ANR	560062	Identifier	av_log		559989	0					
ANR	560063	ArgumentList	avctx		559989	1					
ANR	560064	Argument	avctx		559989	0					
ANR	560065	Identifier	avctx		559989	0					
ANR	560066	Argument	AV_LOG_ERROR		559989	1					
ANR	560067	Identifier	AV_LOG_ERROR		559989	0					
ANR	560068	Argument	"""Output buffer is too small.\\n"""		559989	2					
ANR	560069	PrimaryExpression	"""Output buffer is too small.\\n"""		559989	0					
ANR	560070	ReturnStatement	return AVERROR ( EINVAL ) ;	33:8:566:588	559989	1	True				
ANR	560071	CallExpression	AVERROR ( EINVAL )		559989	0					
ANR	560072	Callee	AVERROR		559989	0					
ANR	560073	Identifier	AVERROR		559989	0					
ANR	560074	ArgumentList	EINVAL		559989	1					
ANR	560075	Argument	EINVAL		559989	0					
ANR	560076	Identifier	EINVAL		559989	0					
ANR	560077	IfStatement	if ( ! s -> samples )		559989	9					
ANR	560078	Condition	! s -> samples	39:7:607:617	559989	0	True				
ANR	560079	UnaryOperationExpression	! s -> samples		559989	0					
ANR	560080	UnaryOperator	!		559989	0					
ANR	560081	PtrMemberAccess	s -> samples		559989	1					
ANR	560082	Identifier	s		559989	0					
ANR	560083	Identifier	samples		559989	1					
ANR	560084	CompoundStatement		35:8:474:531	559989	1					
ANR	560085	IdentifierDeclStatement	"void * tmp_data = av_realloc ( s -> data , ( buf_size + 3 ) & ~3 ) ;"	41:8:630:687	559989	0	True				
ANR	560086	IdentifierDecl	"* tmp_data = av_realloc ( s -> data , ( buf_size + 3 ) & ~3 )"		559989	0					
ANR	560087	IdentifierDeclType	void *		559989	0					
ANR	560088	Identifier	tmp_data		559989	1					
ANR	560089	AssignmentExpression	"* tmp_data = av_realloc ( s -> data , ( buf_size + 3 ) & ~3 )"		559989	2		=			
ANR	560090	Identifier	tmp_data		559989	0					
ANR	560091	CallExpression	"av_realloc ( s -> data , ( buf_size + 3 ) & ~3 )"		559989	1					
ANR	560092	Callee	av_realloc		559989	0					
ANR	560093	Identifier	av_realloc		559989	0					
ANR	560094	ArgumentList	s -> data		559989	1					
ANR	560095	Argument	s -> data		559989	0					
ANR	560096	PtrMemberAccess	s -> data		559989	0					
ANR	560097	Identifier	s		559989	0					
ANR	560098	Identifier	data		559989	1					
ANR	560099	Argument	( buf_size + 3 ) & ~3		559989	1					
ANR	560100	BitAndExpression	( buf_size + 3 ) & ~3		559989	0		&			
ANR	560101	AdditiveExpression	buf_size + 3		559989	0		+			
ANR	560102	Identifier	buf_size		559989	0					
ANR	560103	PrimaryExpression	3		559989	1					
ANR	560104	Identifier	~3		559989	1					
ANR	560105	IfStatement	if ( ! tmp_data )		559989	1					
ANR	560106	Condition	! tmp_data	43:12:702:710	559989	0	True				
ANR	560107	UnaryOperationExpression	! tmp_data		559989	0					
ANR	560108	UnaryOperator	!		559989	0					
ANR	560109	Identifier	tmp_data		559989	1					
ANR	560110	ReturnStatement	return AVERROR ( ENOMEM ) ;	45:12:726:748	559989	1	True				
ANR	560111	CallExpression	AVERROR ( ENOMEM )		559989	0					
ANR	560112	Callee	AVERROR		559989	0					
ANR	560113	Identifier	AVERROR		559989	0					
ANR	560114	ArgumentList	ENOMEM		559989	1					
ANR	560115	Argument	ENOMEM		559989	0					
ANR	560116	Identifier	ENOMEM		559989	0					
ANR	560117	ExpressionStatement	s -> data = tmp_data	47:8:759:777	559989	2	True				
ANR	560118	AssignmentExpression	s -> data = tmp_data		559989	0		=			
ANR	560119	PtrMemberAccess	s -> data		559989	0					
ANR	560120	Identifier	s		559989	0					
ANR	560121	Identifier	data		559989	1					
ANR	560122	Identifier	tmp_data		559989	1					
ANR	560123	ExpressionStatement	"s -> dsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"	49:8:788:861	559989	3	True				
ANR	560124	CallExpression	"s -> dsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"		559989	0					
ANR	560125	Callee	s -> dsp . bswap_buf		559989	0					
ANR	560126	MemberAccess	s -> dsp . bswap_buf		559989	0					
ANR	560127	PtrMemberAccess	s -> dsp		559989	0					
ANR	560128	Identifier	s		559989	0					
ANR	560129	Identifier	dsp		559989	1					
ANR	560130	Identifier	bswap_buf		559989	1					
ANR	560131	ArgumentList	( uint32_t * ) s -> data		559989	1					
ANR	560132	Argument	( uint32_t * ) s -> data		559989	0					
ANR	560133	CastExpression	( uint32_t * ) s -> data		559989	0					
ANR	560134	CastTarget	uint32_t *		559989	0					
ANR	560135	PtrMemberAccess	s -> data		559989	1					
ANR	560136	Identifier	s		559989	0					
ANR	560137	Identifier	data		559989	1					
ANR	560138	Argument	( const uint32_t * ) buf		559989	1					
ANR	560139	CastExpression	( const uint32_t * ) buf		559989	0					
ANR	560140	CastTarget	const uint32_t *		559989	0					
ANR	560141	Identifier	buf		559989	1					
ANR	560142	Argument	buf_size >> 2		559989	2					
ANR	560143	ShiftExpression	buf_size >> 2		559989	0		>>			
ANR	560144	Identifier	buf_size		559989	0					
ANR	560145	PrimaryExpression	2		559989	1					
ANR	560146	ExpressionStatement	s -> ptr = s -> last_ptr = s -> data	51:8:872:902	559989	4	True				
ANR	560147	AssignmentExpression	s -> ptr = s -> last_ptr = s -> data		559989	0		=			
ANR	560148	PtrMemberAccess	s -> ptr		559989	0					
ANR	560149	Identifier	s		559989	0					
ANR	560150	Identifier	ptr		559989	1					
ANR	560151	AssignmentExpression	s -> last_ptr = s -> data		559989	1		=			
ANR	560152	PtrMemberAccess	s -> last_ptr		559989	0					
ANR	560153	Identifier	s		559989	0					
ANR	560154	Identifier	last_ptr		559989	1					
ANR	560155	PtrMemberAccess	s -> data		559989	1					
ANR	560156	Identifier	s		559989	0					
ANR	560157	Identifier	data		559989	1					
ANR	560158	ExpressionStatement	s -> data_end = s -> data + buf_size	53:8:913:945	559989	5	True				
ANR	560159	AssignmentExpression	s -> data_end = s -> data + buf_size		559989	0		=			
ANR	560160	PtrMemberAccess	s -> data_end		559989	0					
ANR	560161	Identifier	s		559989	0					
ANR	560162	Identifier	data_end		559989	1					
ANR	560163	AdditiveExpression	s -> data + buf_size		559989	1		+			
ANR	560164	PtrMemberAccess	s -> data		559989	0					
ANR	560165	Identifier	s		559989	0					
ANR	560166	Identifier	data		559989	1					
ANR	560167	Identifier	buf_size		559989	1					
ANR	560168	ExpressionStatement	nblocks = s -> samples = bytestream_get_be32 ( & s -> ptr )	57:8:958:1009	559989	6	True				
ANR	560169	AssignmentExpression	nblocks = s -> samples = bytestream_get_be32 ( & s -> ptr )		559989	0		=			
ANR	560170	Identifier	nblocks		559989	0					
ANR	560171	AssignmentExpression	s -> samples = bytestream_get_be32 ( & s -> ptr )		559989	1		=			
ANR	560172	PtrMemberAccess	s -> samples		559989	0					
ANR	560173	Identifier	s		559989	0					
ANR	560174	Identifier	samples		559989	1					
ANR	560175	CallExpression	bytestream_get_be32 ( & s -> ptr )		559989	1					
ANR	560176	Callee	bytestream_get_be32		559989	0					
ANR	560177	Identifier	bytestream_get_be32		559989	0					
ANR	560178	ArgumentList	& s -> ptr		559989	1					
ANR	560179	Argument	& s -> ptr		559989	0					
ANR	560180	UnaryOperationExpression	& s -> ptr		559989	0					
ANR	560181	UnaryOperator	&		559989	0					
ANR	560182	PtrMemberAccess	s -> ptr		559989	1					
ANR	560183	Identifier	s		559989	0					
ANR	560184	Identifier	ptr		559989	1					
ANR	560185	ExpressionStatement	n = bytestream_get_be32 ( & s -> ptr )	59:8:1020:1053	559989	7	True				
ANR	560186	AssignmentExpression	n = bytestream_get_be32 ( & s -> ptr )		559989	0		=			
ANR	560187	Identifier	n		559989	0					
ANR	560188	CallExpression	bytestream_get_be32 ( & s -> ptr )		559989	1					
ANR	560189	Callee	bytestream_get_be32		559989	0					
ANR	560190	Identifier	bytestream_get_be32		559989	0					
ANR	560191	ArgumentList	& s -> ptr		559989	1					
ANR	560192	Argument	& s -> ptr		559989	0					
ANR	560193	UnaryOperationExpression	& s -> ptr		559989	0					
ANR	560194	UnaryOperator	&		559989	0					
ANR	560195	PtrMemberAccess	s -> ptr		559989	1					
ANR	560196	Identifier	s		559989	0					
ANR	560197	Identifier	ptr		559989	1					
ANR	560198	IfStatement	if ( n < 0 || n > 3 )		559989	8					
ANR	560199	Condition	n < 0 || n > 3	61:11:1067:1080	559989	0	True				
ANR	560200	OrExpression	n < 0 || n > 3		559989	0		||			
ANR	560201	RelationalExpression	n < 0		559989	0		<			
ANR	560202	Identifier	n		559989	0					
ANR	560203	PrimaryExpression	0		559989	1					
ANR	560204	RelationalExpression	n > 3		559989	1		>			
ANR	560205	Identifier	n		559989	0					
ANR	560206	PrimaryExpression	3		559989	1					
ANR	560207	CompoundStatement		55:26:926:926	559989	1					
ANR	560208	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"	63:12:1097:1153	559989	0	True				
ANR	560209	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"		559989	0					
ANR	560210	Callee	av_log		559989	0					
ANR	560211	Identifier	av_log		559989	0					
ANR	560212	ArgumentList	avctx		559989	1					
ANR	560213	Argument	avctx		559989	0					
ANR	560214	Identifier	avctx		559989	0					
ANR	560215	Argument	AV_LOG_ERROR		559989	1					
ANR	560216	Identifier	AV_LOG_ERROR		559989	0					
ANR	560217	Argument	"""Incorrect offset passed\\n"""		559989	2					
ANR	560218	PrimaryExpression	"""Incorrect offset passed\\n"""		559989	0					
ANR	560219	ExpressionStatement	s -> data = NULL	65:12:1168:1182	559989	1	True				
ANR	560220	AssignmentExpression	s -> data = NULL		559989	0		=			
ANR	560221	PtrMemberAccess	s -> data		559989	0					
ANR	560222	Identifier	s		559989	0					
ANR	560223	Identifier	data		559989	1					
ANR	560224	Identifier	NULL		559989	1					
ANR	560225	ReturnStatement	return AVERROR_INVALIDDATA ;	67:12:1197:1223	559989	2	True				
ANR	560226	Identifier	AVERROR_INVALIDDATA		559989	0					
ANR	560227	ExpressionStatement	s -> ptr += n	71:8:1245:1256	559989	9	True				
ANR	560228	AssignmentExpression	s -> ptr += n		559989	0		+=			
ANR	560229	PtrMemberAccess	s -> ptr		559989	0					
ANR	560230	Identifier	s		559989	0					
ANR	560231	Identifier	ptr		559989	1					
ANR	560232	Identifier	n		559989	1					
ANR	560233	ExpressionStatement	s -> currentframeblocks = nblocks	75:8:1269:1300	559989	10	True				
ANR	560234	AssignmentExpression	s -> currentframeblocks = nblocks		559989	0		=			
ANR	560235	PtrMemberAccess	s -> currentframeblocks		559989	0					
ANR	560236	Identifier	s		559989	0					
ANR	560237	Identifier	currentframeblocks		559989	1					
ANR	560238	Identifier	nblocks		559989	1					
ANR	560239	ExpressionStatement	buf += 4	77:8:1311:1319	559989	11	True				
ANR	560240	AssignmentExpression	buf += 4		559989	0		+=			
ANR	560241	Identifier	buf		559989	0					
ANR	560242	PrimaryExpression	4		559989	1					
ANR	560243	IfStatement	if ( s -> samples <= 0 )		559989	12					
ANR	560244	Condition	s -> samples <= 0	79:12:1334:1348	559989	0	True				
ANR	560245	RelationalExpression	s -> samples <= 0		559989	0		<=			
ANR	560246	PtrMemberAccess	s -> samples		559989	0					
ANR	560247	Identifier	s		559989	0					
ANR	560248	Identifier	samples		559989	1					
ANR	560249	PrimaryExpression	0		559989	1					
ANR	560250	CompoundStatement		73:29:1195:1195	559989	1					
ANR	560251	ExpressionStatement	* data_size = 0	81:12:1366:1380	559989	0	True				
ANR	560252	AssignmentExpression	* data_size = 0		559989	0		=			
ANR	560253	UnaryOperationExpression	* data_size		559989	0					
ANR	560254	UnaryOperator	*		559989	0					
ANR	560255	Identifier	data_size		559989	1					
ANR	560256	PrimaryExpression	0		559989	1					
ANR	560257	ReturnStatement	return buf_size ;	83:12:1395:1410	559989	1	True				
ANR	560258	Identifier	buf_size		559989	0					
ANR	560259	ExpressionStatement	"memset ( s -> decoded0 , 0 , sizeof ( s -> decoded0 ) )"	89:8:1434:1478	559989	13	True				
ANR	560260	CallExpression	"memset ( s -> decoded0 , 0 , sizeof ( s -> decoded0 ) )"		559989	0					
ANR	560261	Callee	memset		559989	0					
ANR	560262	Identifier	memset		559989	0					
ANR	560263	ArgumentList	s -> decoded0		559989	1					
ANR	560264	Argument	s -> decoded0		559989	0					
ANR	560265	PtrMemberAccess	s -> decoded0		559989	0					
ANR	560266	Identifier	s		559989	0					
ANR	560267	Identifier	decoded0		559989	1					
ANR	560268	Argument	0		559989	1					
ANR	560269	PrimaryExpression	0		559989	0					
ANR	560270	Argument	sizeof ( s -> decoded0 )		559989	2					
ANR	560271	SizeofExpression	sizeof ( s -> decoded0 )		559989	0					
ANR	560272	Sizeof	sizeof		559989	0					
ANR	560273	PtrMemberAccess	s -> decoded0		559989	1					
ANR	560274	Identifier	s		559989	0					
ANR	560275	Identifier	decoded0		559989	1					
ANR	560276	ExpressionStatement	"memset ( s -> decoded1 , 0 , sizeof ( s -> decoded1 ) )"	91:8:1489:1533	559989	14	True				
ANR	560277	CallExpression	"memset ( s -> decoded1 , 0 , sizeof ( s -> decoded1 ) )"		559989	0					
ANR	560278	Callee	memset		559989	0					
ANR	560279	Identifier	memset		559989	0					
ANR	560280	ArgumentList	s -> decoded1		559989	1					
ANR	560281	Argument	s -> decoded1		559989	0					
ANR	560282	PtrMemberAccess	s -> decoded1		559989	0					
ANR	560283	Identifier	s		559989	0					
ANR	560284	Identifier	decoded1		559989	1					
ANR	560285	Argument	0		559989	1					
ANR	560286	PrimaryExpression	0		559989	0					
ANR	560287	Argument	sizeof ( s -> decoded1 )		559989	2					
ANR	560288	SizeofExpression	sizeof ( s -> decoded1 )		559989	0					
ANR	560289	Sizeof	sizeof		559989	0					
ANR	560290	PtrMemberAccess	s -> decoded1		559989	1					
ANR	560291	Identifier	s		559989	0					
ANR	560292	Identifier	decoded1		559989	1					
ANR	560293	ExpressionStatement	init_frame_decoder ( s )	97:8:1590:1611	559989	15	True				
ANR	560294	CallExpression	init_frame_decoder ( s )		559989	0					
ANR	560295	Callee	init_frame_decoder		559989	0					
ANR	560296	Identifier	init_frame_decoder		559989	0					
ANR	560297	ArgumentList	s		559989	1					
ANR	560298	Argument	s		559989	0					
ANR	560299	Identifier	s		559989	0					
ANR	560300	IfStatement	if ( ! s -> data )		559989	10					
ANR	560301	Condition	! s -> data	103:8:1631:1638	559989	0	True				
ANR	560302	UnaryOperationExpression	! s -> data		559989	0					
ANR	560303	UnaryOperator	!		559989	0					
ANR	560304	PtrMemberAccess	s -> data		559989	1					
ANR	560305	Identifier	s		559989	0					
ANR	560306	Identifier	data		559989	1					
ANR	560307	CompoundStatement		97:18:1485:1485	559989	1					
ANR	560308	ExpressionStatement	* data_size = 0	105:8:1652:1666	559989	0	True				
ANR	560309	AssignmentExpression	* data_size = 0		559989	0		=			
ANR	560310	UnaryOperationExpression	* data_size		559989	0					
ANR	560311	UnaryOperator	*		559989	0					
ANR	560312	Identifier	data_size		559989	1					
ANR	560313	PrimaryExpression	0		559989	1					
ANR	560314	ReturnStatement	return buf_size ;	107:8:1677:1692	559989	1	True				
ANR	560315	Identifier	buf_size		559989	0					
ANR	560316	ExpressionStatement	nblocks = s -> samples	113:4:1708:1728	559989	11	True				
ANR	560317	AssignmentExpression	nblocks = s -> samples		559989	0		=			
ANR	560318	Identifier	nblocks		559989	0					
ANR	560319	PtrMemberAccess	s -> samples		559989	1					
ANR	560320	Identifier	s		559989	0					
ANR	560321	Identifier	samples		559989	1					
ANR	560322	ExpressionStatement	"blockstodecode = FFMIN ( BLOCKS_PER_LOOP , nblocks )"	115:4:1735:1783	559989	12	True				
ANR	560323	AssignmentExpression	"blockstodecode = FFMIN ( BLOCKS_PER_LOOP , nblocks )"		559989	0		=			
ANR	560324	Identifier	blockstodecode		559989	0					
ANR	560325	CallExpression	"FFMIN ( BLOCKS_PER_LOOP , nblocks )"		559989	1					
ANR	560326	Callee	FFMIN		559989	0					
ANR	560327	Identifier	FFMIN		559989	0					
ANR	560328	ArgumentList	BLOCKS_PER_LOOP		559989	1					
ANR	560329	Argument	BLOCKS_PER_LOOP		559989	0					
ANR	560330	Identifier	BLOCKS_PER_LOOP		559989	0					
ANR	560331	Argument	nblocks		559989	1					
ANR	560332	Identifier	nblocks		559989	0					
ANR	560333	ExpressionStatement	s -> error = 0	119:4:1792:1802	559989	13	True				
ANR	560334	AssignmentExpression	s -> error = 0		559989	0		=			
ANR	560335	PtrMemberAccess	s -> error		559989	0					
ANR	560336	Identifier	s		559989	0					
ANR	560337	Identifier	error		559989	1					
ANR	560338	PrimaryExpression	0		559989	1					
ANR	560339	IfStatement	if ( ( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO ) )		559989	14					
ANR	560340	Condition	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )	123:8:1815:1881	559989	0	True				
ANR	560341	OrExpression	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )		559989	0		||			
ANR	560342	EqualityExpression	s -> channels == 1		559989	0		==			
ANR	560343	PtrMemberAccess	s -> channels		559989	0					
ANR	560344	Identifier	s		559989	0					
ANR	560345	Identifier	channels		559989	1					
ANR	560346	PrimaryExpression	1		559989	1					
ANR	560347	BitAndExpression	s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO		559989	1		&			
ANR	560348	PtrMemberAccess	s -> frameflags		559989	0					
ANR	560349	Identifier	s		559989	0					
ANR	560350	Identifier	frameflags		559989	1					
ANR	560351	Identifier	APE_FRAMECODE_PSEUDO_STEREO		559989	1					
ANR	560352	ExpressionStatement	"ape_unpack_mono ( s , blockstodecode )"	125:8:1893:1927	559989	1	True				
ANR	560353	CallExpression	"ape_unpack_mono ( s , blockstodecode )"		559989	0					
ANR	560354	Callee	ape_unpack_mono		559989	0					
ANR	560355	Identifier	ape_unpack_mono		559989	0					
ANR	560356	ArgumentList	s		559989	1					
ANR	560357	Argument	s		559989	0					
ANR	560358	Identifier	s		559989	0					
ANR	560359	Argument	blockstodecode		559989	1					
ANR	560360	Identifier	blockstodecode		559989	0					
ANR	560361	ElseStatement	else		559989	0					
ANR	560362	ExpressionStatement	"ape_unpack_stereo ( s , blockstodecode )"	129:8:1948:1984	559989	0	True				
ANR	560363	CallExpression	"ape_unpack_stereo ( s , blockstodecode )"		559989	0					
ANR	560364	Callee	ape_unpack_stereo		559989	0					
ANR	560365	Identifier	ape_unpack_stereo		559989	0					
ANR	560366	ArgumentList	s		559989	1					
ANR	560367	Argument	s		559989	0					
ANR	560368	Identifier	s		559989	0					
ANR	560369	Argument	blockstodecode		559989	1					
ANR	560370	Identifier	blockstodecode		559989	0					
ANR	560371	ExpressionStatement	emms_c ( )	131:4:1991:1999	559989	15	True				
ANR	560372	CallExpression	emms_c ( )		559989	0					
ANR	560373	Callee	emms_c		559989	0					
ANR	560374	Identifier	emms_c		559989	0					
ANR	560375	ArgumentList			559989	1					
ANR	560376	IfStatement	if ( s -> error || s -> ptr > s -> data_end )		559989	16					
ANR	560377	Condition	s -> error || s -> ptr > s -> data_end	135:7:2011:2042	559989	0	True				
ANR	560378	OrExpression	s -> error || s -> ptr > s -> data_end		559989	0		||			
ANR	560379	PtrMemberAccess	s -> error		559989	0					
ANR	560380	Identifier	s		559989	0					
ANR	560381	Identifier	error		559989	1					
ANR	560382	RelationalExpression	s -> ptr > s -> data_end		559989	1		>			
ANR	560383	PtrMemberAccess	s -> ptr		559989	0					
ANR	560384	Identifier	s		559989	0					
ANR	560385	Identifier	ptr		559989	1					
ANR	560386	PtrMemberAccess	s -> data_end		559989	1					
ANR	560387	Identifier	s		559989	0					
ANR	560388	Identifier	data_end		559989	1					
ANR	560389	CompoundStatement		129:40:1888:1888	559989	1					
ANR	560390	ExpressionStatement	s -> samples = 0	137:8:2055:2067	559989	0	True				
ANR	560391	AssignmentExpression	s -> samples = 0		559989	0		=			
ANR	560392	PtrMemberAccess	s -> samples		559989	0					
ANR	560393	Identifier	s		559989	0					
ANR	560394	Identifier	samples		559989	1					
ANR	560395	PrimaryExpression	0		559989	1					
ANR	560396	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"	139:8:2078:2131	559989	1	True				
ANR	560397	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"		559989	0					
ANR	560398	Callee	av_log		559989	0					
ANR	560399	Identifier	av_log		559989	0					
ANR	560400	ArgumentList	avctx		559989	1					
ANR	560401	Argument	avctx		559989	0					
ANR	560402	Identifier	avctx		559989	0					
ANR	560403	Argument	AV_LOG_ERROR		559989	1					
ANR	560404	Identifier	AV_LOG_ERROR		559989	0					
ANR	560405	Argument	"""Error decoding frame\\n"""		559989	2					
ANR	560406	PrimaryExpression	"""Error decoding frame\\n"""		559989	0					
ANR	560407	ReturnStatement	return AVERROR_INVALIDDATA ;	141:8:2142:2168	559989	2	True				
ANR	560408	Identifier	AVERROR_INVALIDDATA		559989	0					
ANR	560409	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		559989	17					
ANR	560410	ForInit	i = 0 ;	147:9:2189:2194	559989	0	True				
ANR	560411	AssignmentExpression	i = 0		559989	0		=			
ANR	560412	Identifier	i		559989	0					
ANR	560413	PrimaryExpression	0		559989	1					
ANR	560414	Condition	i < blockstodecode	147:16:2196:2213	559989	1	True				
ANR	560415	RelationalExpression	i < blockstodecode		559989	0		<			
ANR	560416	Identifier	i		559989	0					
ANR	560417	Identifier	blockstodecode		559989	1					
ANR	560418	PostIncDecOperationExpression	i ++	147:36:2216:2218	559989	2	True				
ANR	560419	Identifier	i		559989	0					
ANR	560420	IncDec	++		559989	1					
ANR	560421	CompoundStatement		141:41:2065:2065	559989	3					
ANR	560422	ExpressionStatement	* samples ++ = s -> decoded0 [ i ]	149:8:2232:2259	559989	0	True				
ANR	560423	AssignmentExpression	* samples ++ = s -> decoded0 [ i ]		559989	0		=			
ANR	560424	UnaryOperationExpression	* samples ++		559989	0					
ANR	560425	UnaryOperator	*		559989	0					
ANR	560426	PostIncDecOperationExpression	samples ++		559989	1					
ANR	560427	Identifier	samples		559989	0					
ANR	560428	IncDec	++		559989	1					
ANR	560429	ArrayIndexing	s -> decoded0 [ i ]		559989	1					
ANR	560430	PtrMemberAccess	s -> decoded0		559989	0					
ANR	560431	Identifier	s		559989	0					
ANR	560432	Identifier	decoded0		559989	1					
ANR	560433	Identifier	i		559989	1					
ANR	560434	IfStatement	if ( s -> channels == 2 )		559989	1					
ANR	560435	Condition	s -> channels == 2	151:11:2273:2288	559989	0	True				
ANR	560436	EqualityExpression	s -> channels == 2		559989	0		==			
ANR	560437	PtrMemberAccess	s -> channels		559989	0					
ANR	560438	Identifier	s		559989	0					
ANR	560439	Identifier	channels		559989	1					
ANR	560440	PrimaryExpression	2		559989	1					
ANR	560441	ExpressionStatement	* samples ++ = s -> decoded1 [ i ]	153:12:2304:2331	559989	1	True				
ANR	560442	AssignmentExpression	* samples ++ = s -> decoded1 [ i ]		559989	0		=			
ANR	560443	UnaryOperationExpression	* samples ++		559989	0					
ANR	560444	UnaryOperator	*		559989	0					
ANR	560445	PostIncDecOperationExpression	samples ++		559989	1					
ANR	560446	Identifier	samples		559989	0					
ANR	560447	IncDec	++		559989	1					
ANR	560448	ArrayIndexing	s -> decoded1 [ i ]		559989	1					
ANR	560449	PtrMemberAccess	s -> decoded1		559989	0					
ANR	560450	Identifier	s		559989	0					
ANR	560451	Identifier	decoded1		559989	1					
ANR	560452	Identifier	i		559989	1					
ANR	560453	ExpressionStatement	s -> samples -= blockstodecode	159:4:2347:2375	559989	18	True				
ANR	560454	AssignmentExpression	s -> samples -= blockstodecode		559989	0		-=			
ANR	560455	PtrMemberAccess	s -> samples		559989	0					
ANR	560456	Identifier	s		559989	0					
ANR	560457	Identifier	samples		559989	1					
ANR	560458	Identifier	blockstodecode		559989	1					
ANR	560459	ExpressionStatement	* data_size = blockstodecode * 2 * s -> channels	163:4:2384:2429	559989	19	True				
ANR	560460	AssignmentExpression	* data_size = blockstodecode * 2 * s -> channels		559989	0		=			
ANR	560461	UnaryOperationExpression	* data_size		559989	0					
ANR	560462	UnaryOperator	*		559989	0					
ANR	560463	Identifier	data_size		559989	1					
ANR	560464	MultiplicativeExpression	blockstodecode * 2 * s -> channels		559989	1		*			
ANR	560465	Identifier	blockstodecode		559989	0					
ANR	560466	MultiplicativeExpression	2 * s -> channels		559989	1		*			
ANR	560467	PrimaryExpression	2		559989	0					
ANR	560468	PtrMemberAccess	s -> channels		559989	1					
ANR	560469	Identifier	s		559989	0					
ANR	560470	Identifier	channels		559989	1					
ANR	560471	ExpressionStatement	bytes_used = s -> samples ? s -> ptr - s -> last_ptr : buf_size	165:4:2436:2493	559989	20	True				
ANR	560472	AssignmentExpression	bytes_used = s -> samples ? s -> ptr - s -> last_ptr : buf_size		559989	0		=			
ANR	560473	Identifier	bytes_used		559989	0					
ANR	560474	ConditionalExpression	s -> samples ? s -> ptr - s -> last_ptr : buf_size		559989	1					
ANR	560475	Condition	s -> samples		559989	0					
ANR	560476	PtrMemberAccess	s -> samples		559989	0					
ANR	560477	Identifier	s		559989	0					
ANR	560478	Identifier	samples		559989	1					
ANR	560479	AdditiveExpression	s -> ptr - s -> last_ptr		559989	1		-			
ANR	560480	PtrMemberAccess	s -> ptr		559989	0					
ANR	560481	Identifier	s		559989	0					
ANR	560482	Identifier	ptr		559989	1					
ANR	560483	PtrMemberAccess	s -> last_ptr		559989	1					
ANR	560484	Identifier	s		559989	0					
ANR	560485	Identifier	last_ptr		559989	1					
ANR	560486	Identifier	buf_size		559989	2					
ANR	560487	ExpressionStatement	s -> last_ptr = s -> ptr	167:4:2500:2520	559989	21	True				
ANR	560488	AssignmentExpression	s -> last_ptr = s -> ptr		559989	0		=			
ANR	560489	PtrMemberAccess	s -> last_ptr		559989	0					
ANR	560490	Identifier	s		559989	0					
ANR	560491	Identifier	last_ptr		559989	1					
ANR	560492	PtrMemberAccess	s -> ptr		559989	1					
ANR	560493	Identifier	s		559989	0					
ANR	560494	Identifier	ptr		559989	1					
ANR	560495	ReturnStatement	return bytes_used ;	169:4:2527:2544	559989	22	True				
ANR	560496	Identifier	bytes_used		559989	0					
ANR	560497	ReturnType	static int		559989	1					
ANR	560498	Identifier	ape_decode_frame		559989	2					
ANR	560499	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		559989	3					
ANR	560500	Parameter	AVCodecContext * avctx	1:28:28:48	559989	0	True				
ANR	560501	ParameterType	AVCodecContext *		559989	0					
ANR	560502	Identifier	avctx		559989	1					
ANR	560503	Parameter	void * data	3:28:80:89	559989	1	True				
ANR	560504	ParameterType	void *		559989	0					
ANR	560505	Identifier	data		559989	1					
ANR	560506	Parameter	int * data_size	3:40:92:105	559989	2	True				
ANR	560507	ParameterType	int *		559989	0					
ANR	560508	Identifier	data_size		559989	1					
ANR	560509	Parameter	AVPacket * avpkt	5:28:137:151	559989	3	True				
ANR	560510	ParameterType	AVPacket *		559989	0					
ANR	560511	Identifier	avpkt		559989	1					
ANR	560512	CFGEntryNode	ENTRY		559989		True				
ANR	560513	CFGExitNode	EXIT		559989		True				
ANR	560514	Symbol	av_realloc		559989						
ANR	560515	Symbol	ENOMEM		559989						
ANR	560516	Symbol	data		559989						
ANR	560517	Symbol	s -> last_ptr		559989						
ANR	560518	Symbol	FFMIN		559989						
ANR	560519	Symbol	avpkt		559989						
ANR	560520	Symbol	* data_size		559989						
ANR	560521	Symbol	avctx -> channels		559989						
ANR	560522	Symbol	bytes_used		559989						
ANR	560523	Symbol	s -> data		559989						
ANR	560524	Symbol	data_size		559989						
ANR	560525	Symbol	& s -> ptr		559989						
ANR	560526	Symbol	NULL		559989						
ANR	560527	Symbol	s -> error		559989						
ANR	560528	Symbol	buf_size		559989						
ANR	560529	Symbol	s -> dsp		559989						
ANR	560530	Symbol	samples		559989						
ANR	560531	Symbol	s -> frameflags		559989						
ANR	560532	Symbol	* avctx		559989						
ANR	560533	Symbol	nblocks		559989						
ANR	560534	Symbol	avpkt -> data		559989						
ANR	560535	Symbol	s -> decoded1		559989						
ANR	560536	Symbol	s -> decoded0		559989						
ANR	560537	Symbol	tmp_data		559989						
ANR	560538	Symbol	s -> currentframeblocks		559989						
ANR	560539	Symbol	s -> samples		559989						
ANR	560540	Symbol	APE_FRAMECODE_PSEUDO_STEREO		559989						
ANR	560541	Symbol	s -> channels		559989						
ANR	560542	Symbol	bytestream_get_be32		559989						
ANR	560543	Symbol	* * s		559989						
ANR	560544	Symbol	avpkt -> size		559989						
ANR	560545	Symbol	avctx		559989						
ANR	560546	Symbol	* samples ++		559989						
ANR	560547	Symbol	* avpkt		559989						
ANR	560548	Symbol	AV_LOG_ERROR		559989						
ANR	560549	Symbol	i		559989						
ANR	560550	Symbol	s -> data_end		559989						
ANR	560551	Symbol	avctx -> priv_data		559989						
ANR	560552	Symbol	n		559989						
ANR	560553	Symbol	EINVAL		559989						
ANR	560554	Symbol	buf		559989						
ANR	560555	Symbol	s		559989						
ANR	560556	Symbol	* i		559989						
ANR	560557	Symbol	~3		559989						
ANR	560558	Symbol	AVERROR_INVALIDDATA		559989						
ANR	560559	Symbol	blockstodecode		559989						
ANR	560560	Symbol	AVERROR		559989						
ANR	560561	Symbol	BLOCKS_PER_LOOP		559989						
ANR	560562	Symbol	* s		559989						
ANR	560563	Symbol	s -> ptr		559989						
ANR	560564	Symbol	* s -> decoded1		559989						
ANR	560565	Symbol	* s -> decoded0		559989						
