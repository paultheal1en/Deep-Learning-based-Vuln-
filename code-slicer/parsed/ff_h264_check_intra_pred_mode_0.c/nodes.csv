command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3324803	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_check_intra_pred_mode_0.c								
ANR	3324804	Function	ff_h264_check_intra_pred_mode	1:0:0:1379							
ANR	3324805	FunctionDef	"ff_h264_check_intra_pred_mode (H264Context * h , int mode , int is_chroma)"		3324804	0					
ANR	3324806	CompoundStatement		3:0:76:1379	3324804	0					
ANR	3324807	Statement	static	5:4:83:88	3324804	0	True				
ANR	3324808	IdentifierDeclStatement	"const int8_t top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 } ;"	5:11:90:143	3324804	1	True				
ANR	3324809	IdentifierDecl	"top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 }"		3324804	0					
ANR	3324810	IdentifierDeclType	const int8_t [ 7 ]		3324804	0					
ANR	3324811	Identifier	top		3324804	1					
ANR	3324812	PrimaryExpression	7		3324804	2					
ANR	3324813	AssignmentExpression	"top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 }"		3324804	3		=			
ANR	3324814	Identifier	top		3324804	0					
ANR	3324815	InitializerList	LEFT_DC_PRED8x8		3324804	1					
ANR	3324816	Identifier	LEFT_DC_PRED8x8		3324804	0					
ANR	3324817	PrimaryExpression	1		3324804	1					
ANR	3324818	UnaryOperationExpression	- 1		3324804	2					
ANR	3324819	UnaryOperator	-		3324804	0					
ANR	3324820	PrimaryExpression	1		3324804	1					
ANR	3324821	UnaryOperationExpression	- 1		3324804	3					
ANR	3324822	UnaryOperator	-		3324804	0					
ANR	3324823	PrimaryExpression	1		3324804	1					
ANR	3324824	Statement	static	7:4:150:155	3324804	2	True				
ANR	3324825	IdentifierDeclStatement	"const int8_t left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 } ;"	7:11:157:225	3324804	3	True				
ANR	3324826	IdentifierDecl	"left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 }"		3324804	0					
ANR	3324827	IdentifierDeclType	const int8_t [ 7 ]		3324804	0					
ANR	3324828	Identifier	left		3324804	1					
ANR	3324829	PrimaryExpression	7		3324804	2					
ANR	3324830	AssignmentExpression	"left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 }"		3324804	3		=			
ANR	3324831	Identifier	left		3324804	0					
ANR	3324832	InitializerList	TOP_DC_PRED8x8		3324804	1					
ANR	3324833	Identifier	TOP_DC_PRED8x8		3324804	0					
ANR	3324834	UnaryOperationExpression	- 1		3324804	1					
ANR	3324835	UnaryOperator	-		3324804	0					
ANR	3324836	PrimaryExpression	1		3324804	1					
ANR	3324837	PrimaryExpression	2		3324804	2					
ANR	3324838	UnaryOperationExpression	- 1		3324804	3					
ANR	3324839	UnaryOperator	-		3324804	0					
ANR	3324840	PrimaryExpression	1		3324804	1					
ANR	3324841	Identifier	DC_128_PRED8x8		3324804	4					
ANR	3324842	IfStatement	if ( mode > 6U )		3324804	4					
ANR	3324843	Condition	mode > 6U	11:8:238:246	3324804	0	True				
ANR	3324844	RelationalExpression	mode > 6U		3324804	0		>			
ANR	3324845	Identifier	mode		3324804	0					
ANR	3324846	PrimaryExpression	6U		3324804	1					
ANR	3324847	CompoundStatement		9:19:172:172	3324804	1					
ANR	3324848	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""out of range intra chroma pred mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"	13:8:260:390	3324804	0	True				
ANR	3324849	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""out of range intra chroma pred mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"		3324804	0					
ANR	3324850	Callee	av_log		3324804	0					
ANR	3324851	Identifier	av_log		3324804	0					
ANR	3324852	ArgumentList	h -> avctx		3324804	1					
ANR	3324853	Argument	h -> avctx		3324804	0					
ANR	3324854	PtrMemberAccess	h -> avctx		3324804	0					
ANR	3324855	Identifier	h		3324804	0					
ANR	3324856	Identifier	avctx		3324804	1					
ANR	3324857	Argument	AV_LOG_ERROR		3324804	1					
ANR	3324858	Identifier	AV_LOG_ERROR		3324804	0					
ANR	3324859	Argument	"""out of range intra chroma pred mode at %d %d\\n"""		3324804	2					
ANR	3324860	PrimaryExpression	"""out of range intra chroma pred mode at %d %d\\n"""		3324804	0					
ANR	3324861	Argument	h -> mb_x		3324804	3					
ANR	3324862	PtrMemberAccess	h -> mb_x		3324804	0					
ANR	3324863	Identifier	h		3324804	0					
ANR	3324864	Identifier	mb_x		3324804	1					
ANR	3324865	Argument	h -> mb_y		3324804	4					
ANR	3324866	PtrMemberAccess	h -> mb_y		3324804	0					
ANR	3324867	Identifier	h		3324804	0					
ANR	3324868	Identifier	mb_y		3324804	1					
ANR	3324869	ReturnStatement	return - 1 ;	19:8:401:410	3324804	1	True				
ANR	3324870	UnaryOperationExpression	- 1		3324804	0					
ANR	3324871	UnaryOperator	-		3324804	0					
ANR	3324872	PrimaryExpression	1		3324804	1					
ANR	3324873	IfStatement	if ( ! ( h -> top_samples_available & 0x8000 ) )		3324804	5					
ANR	3324874	Condition	! ( h -> top_samples_available & 0x8000 )	25:8:430:465	3324804	0	True				
ANR	3324875	UnaryOperationExpression	! ( h -> top_samples_available & 0x8000 )		3324804	0					
ANR	3324876	UnaryOperator	!		3324804	0					
ANR	3324877	BitAndExpression	h -> top_samples_available & 0x8000		3324804	1		&			
ANR	3324878	PtrMemberAccess	h -> top_samples_available		3324804	0					
ANR	3324879	Identifier	h		3324804	0					
ANR	3324880	Identifier	top_samples_available		3324804	1					
ANR	3324881	PrimaryExpression	0x8000		3324804	1					
ANR	3324882	CompoundStatement		23:46:391:391	3324804	1					
ANR	3324883	ExpressionStatement	mode = top [ mode ]	27:8:479:495	3324804	0	True				
ANR	3324884	AssignmentExpression	mode = top [ mode ]		3324804	0		=			
ANR	3324885	Identifier	mode		3324804	0					
ANR	3324886	ArrayIndexing	top [ mode ]		3324804	1					
ANR	3324887	Identifier	top		3324804	0					
ANR	3324888	Identifier	mode		3324804	1					
ANR	3324889	IfStatement	if ( mode < 0 )		3324804	1					
ANR	3324890	Condition	mode < 0	29:12:510:517	3324804	0	True				
ANR	3324891	RelationalExpression	mode < 0		3324804	0		<			
ANR	3324892	Identifier	mode		3324804	0					
ANR	3324893	PrimaryExpression	0		3324804	1					
ANR	3324894	CompoundStatement		27:22:443:443	3324804	1					
ANR	3324895	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""top block unavailable for requested intra mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"	31:12:535:684	3324804	0	True				
ANR	3324896	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""top block unavailable for requested intra mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"		3324804	0					
ANR	3324897	Callee	av_log		3324804	0					
ANR	3324898	Identifier	av_log		3324804	0					
ANR	3324899	ArgumentList	h -> avctx		3324804	1					
ANR	3324900	Argument	h -> avctx		3324804	0					
ANR	3324901	PtrMemberAccess	h -> avctx		3324804	0					
ANR	3324902	Identifier	h		3324804	0					
ANR	3324903	Identifier	avctx		3324804	1					
ANR	3324904	Argument	AV_LOG_ERROR		3324804	1					
ANR	3324905	Identifier	AV_LOG_ERROR		3324804	0					
ANR	3324906	Argument	"""top block unavailable for requested intra mode at %d %d\\n"""		3324804	2					
ANR	3324907	PrimaryExpression	"""top block unavailable for requested intra mode at %d %d\\n"""		3324804	0					
ANR	3324908	Argument	h -> mb_x		3324804	3					
ANR	3324909	PtrMemberAccess	h -> mb_x		3324804	0					
ANR	3324910	Identifier	h		3324804	0					
ANR	3324911	Identifier	mb_x		3324804	1					
ANR	3324912	Argument	h -> mb_y		3324804	4					
ANR	3324913	PtrMemberAccess	h -> mb_y		3324804	0					
ANR	3324914	Identifier	h		3324804	0					
ANR	3324915	Identifier	mb_y		3324804	1					
ANR	3324916	ReturnStatement	return - 1 ;	37:12:699:708	3324804	1	True				
ANR	3324917	UnaryOperationExpression	- 1		3324804	0					
ANR	3324918	UnaryOperator	-		3324804	0					
ANR	3324919	PrimaryExpression	1		3324804	1					
ANR	3324920	IfStatement	if ( ( h -> left_samples_available & 0x8080 ) != 0x8080 )		3324804	6					
ANR	3324921	Condition	( h -> left_samples_available & 0x8080 ) != 0x8080	45:8:739:784	3324804	0	True				
ANR	3324922	EqualityExpression	( h -> left_samples_available & 0x8080 ) != 0x8080		3324804	0		!=			
ANR	3324923	BitAndExpression	h -> left_samples_available & 0x8080		3324804	0		&			
ANR	3324924	PtrMemberAccess	h -> left_samples_available		3324804	0					
ANR	3324925	Identifier	h		3324804	0					
ANR	3324926	Identifier	left_samples_available		3324804	1					
ANR	3324927	PrimaryExpression	0x8080		3324804	1					
ANR	3324928	PrimaryExpression	0x8080		3324804	1					
ANR	3324929	CompoundStatement		43:56:710:710	3324804	1					
ANR	3324930	ExpressionStatement	mode = left [ mode ]	47:8:798:815	3324804	0	True				
ANR	3324931	AssignmentExpression	mode = left [ mode ]		3324804	0		=			
ANR	3324932	Identifier	mode		3324804	0					
ANR	3324933	ArrayIndexing	left [ mode ]		3324804	1					
ANR	3324934	Identifier	left		3324804	0					
ANR	3324935	Identifier	mode		3324804	1					
ANR	3324936	IfStatement	if ( is_chroma && ( h -> left_samples_available & 0x8080 ) )		3324804	1					
ANR	3324937	Condition	is_chroma && ( h -> left_samples_available & 0x8080 )	49:12:830:878	3324804	0	True				
ANR	3324938	AndExpression	is_chroma && ( h -> left_samples_available & 0x8080 )		3324804	0		&&			
ANR	3324939	Identifier	is_chroma		3324804	0					
ANR	3324940	BitAndExpression	h -> left_samples_available & 0x8080		3324804	1		&			
ANR	3324941	PtrMemberAccess	h -> left_samples_available		3324804	0					
ANR	3324942	Identifier	h		3324804	0					
ANR	3324943	Identifier	left_samples_available		3324804	1					
ANR	3324944	PrimaryExpression	0x8080		3324804	1					
ANR	3324945	CompoundStatement		47:63:804:804	3324804	1					
ANR	3324946	ExpressionStatement	mode = ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )	53:12:969:1113	3324804	0	True				
ANR	3324947	AssignmentExpression	mode = ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3324804	0		=			
ANR	3324948	Identifier	mode		3324804	0					
ANR	3324949	AdditiveExpression	ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3324804	1		+			
ANR	3324950	Identifier	ALZHEIMER_DC_L0T_PRED8x8		3324804	0					
ANR	3324951	AdditiveExpression	( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3324804	1		+			
ANR	3324952	UnaryOperationExpression	! ( h -> left_samples_available & 0x8000 )		3324804	0					
ANR	3324953	UnaryOperator	!		3324804	0					
ANR	3324954	BitAndExpression	h -> left_samples_available & 0x8000		3324804	1		&			
ANR	3324955	PtrMemberAccess	h -> left_samples_available		3324804	0					
ANR	3324956	Identifier	h		3324804	0					
ANR	3324957	Identifier	left_samples_available		3324804	1					
ANR	3324958	PrimaryExpression	0x8000		3324804	1					
ANR	3324959	MultiplicativeExpression	2 * ( mode == DC_128_PRED8x8 )		3324804	1		*			
ANR	3324960	PrimaryExpression	2		3324804	0					
ANR	3324961	EqualityExpression	mode == DC_128_PRED8x8		3324804	1		==			
ANR	3324962	Identifier	mode		3324804	0					
ANR	3324963	Identifier	DC_128_PRED8x8		3324804	1					
ANR	3324964	IfStatement	if ( mode < 0 )		3324804	2					
ANR	3324965	Condition	mode < 0	61:12:1139:1146	3324804	0	True				
ANR	3324966	RelationalExpression	mode < 0		3324804	0		<			
ANR	3324967	Identifier	mode		3324804	0					
ANR	3324968	PrimaryExpression	0		3324804	1					
ANR	3324969	CompoundStatement		59:22:1072:1072	3324804	1					
ANR	3324970	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""left block unavailable for requested intra mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"	63:12:1164:1314	3324804	0	True				
ANR	3324971	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""left block unavailable for requested intra mode at %d %d\\n"" , h -> mb_x , h -> mb_y )"		3324804	0					
ANR	3324972	Callee	av_log		3324804	0					
ANR	3324973	Identifier	av_log		3324804	0					
ANR	3324974	ArgumentList	h -> avctx		3324804	1					
ANR	3324975	Argument	h -> avctx		3324804	0					
ANR	3324976	PtrMemberAccess	h -> avctx		3324804	0					
ANR	3324977	Identifier	h		3324804	0					
ANR	3324978	Identifier	avctx		3324804	1					
ANR	3324979	Argument	AV_LOG_ERROR		3324804	1					
ANR	3324980	Identifier	AV_LOG_ERROR		3324804	0					
ANR	3324981	Argument	"""left block unavailable for requested intra mode at %d %d\\n"""		3324804	2					
ANR	3324982	PrimaryExpression	"""left block unavailable for requested intra mode at %d %d\\n"""		3324804	0					
ANR	3324983	Argument	h -> mb_x		3324804	3					
ANR	3324984	PtrMemberAccess	h -> mb_x		3324804	0					
ANR	3324985	Identifier	h		3324804	0					
ANR	3324986	Identifier	mb_x		3324804	1					
ANR	3324987	Argument	h -> mb_y		3324804	4					
ANR	3324988	PtrMemberAccess	h -> mb_y		3324804	0					
ANR	3324989	Identifier	h		3324804	0					
ANR	3324990	Identifier	mb_y		3324804	1					
ANR	3324991	ReturnStatement	return - 1 ;	69:12:1329:1338	3324804	1	True				
ANR	3324992	UnaryOperationExpression	- 1		3324804	0					
ANR	3324993	UnaryOperator	-		3324804	0					
ANR	3324994	PrimaryExpression	1		3324804	1					
ANR	3324995	ReturnStatement	return mode ;	77:4:1365:1376	3324804	7	True				
ANR	3324996	Identifier	mode		3324804	0					
ANR	3324997	ReturnType	int		3324804	1					
ANR	3324998	Identifier	ff_h264_check_intra_pred_mode		3324804	2					
ANR	3324999	ParameterList	"H264Context * h , int mode , int is_chroma"		3324804	3					
ANR	3325000	Parameter	H264Context * h	1:34:34:47	3324804	0	True				
ANR	3325001	ParameterType	H264Context *		3324804	0					
ANR	3325002	Identifier	h		3324804	1					
ANR	3325003	Parameter	int mode	1:50:50:57	3324804	1	True				
ANR	3325004	ParameterType	int		3324804	0					
ANR	3325005	Identifier	mode		3324804	1					
ANR	3325006	Parameter	int is_chroma	1:60:60:72	3324804	2	True				
ANR	3325007	ParameterType	int		3324804	0					
ANR	3325008	Identifier	is_chroma		3324804	1					
ANR	3325009	CFGEntryNode	ENTRY		3324804		True				
ANR	3325010	CFGExitNode	EXIT		3324804		True				
ANR	3325011	Symbol	LEFT_DC_PRED8x8		3324804						
ANR	3325012	Symbol	AV_LOG_ERROR		3324804						
ANR	3325013	Symbol	h		3324804						
ANR	3325014	Symbol	h -> mb_x		3324804						
ANR	3325015	Symbol	h -> mb_y		3324804						
ANR	3325016	Symbol	is_chroma		3324804						
ANR	3325017	Symbol	ALZHEIMER_DC_L0T_PRED8x8		3324804						
ANR	3325018	Symbol	mode		3324804						
ANR	3325019	Symbol	* h		3324804						
ANR	3325020	Symbol	h -> top_samples_available		3324804						
ANR	3325021	Symbol	top		3324804						
ANR	3325022	Symbol	left		3324804						
ANR	3325023	Symbol	h -> left_samples_available		3324804						
ANR	3325024	Symbol	* mode		3324804						
ANR	3325025	Symbol	TOP_DC_PRED8x8		3324804						
ANR	3325026	Symbol	* left		3324804						
ANR	3325027	Symbol	DC_128_PRED8x8		3324804						
ANR	3325028	Symbol	h -> avctx		3324804						
ANR	3325029	Symbol	* top		3324804						
