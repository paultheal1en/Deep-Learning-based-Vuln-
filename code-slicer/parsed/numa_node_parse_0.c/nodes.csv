command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6054457	File	/home/p4ultr4n/workplace/ReVeal/raw_code/numa_node_parse_0.c								
ANR	6054458	Function	numa_node_parse	1:0:0:2160							
ANR	6054459	FunctionDef	"numa_node_parse (NumaNodeOptions * node , QemuOpts * opts , Error * * errp)"		6054458	0					
ANR	6054460	CompoundStatement		3:0:82:2160	6054458	0					
ANR	6054461	IdentifierDeclStatement	uint16_t nodenr ;	5:4:89:104	6054458	0	True				
ANR	6054462	IdentifierDecl	nodenr		6054458	0					
ANR	6054463	IdentifierDeclType	uint16_t		6054458	0					
ANR	6054464	Identifier	nodenr		6054458	1					
ANR	6054465	IdentifierDeclStatement	uint16List * cpus = NULL ;	7:4:111:134	6054458	1	True				
ANR	6054466	IdentifierDecl	* cpus = NULL		6054458	0					
ANR	6054467	IdentifierDeclType	uint16List *		6054458	0					
ANR	6054468	Identifier	cpus		6054458	1					
ANR	6054469	AssignmentExpression	* cpus = NULL		6054458	2		=			
ANR	6054470	Identifier	NULL		6054458	0					
ANR	6054471	Identifier	NULL		6054458	1					
ANR	6054472	IfStatement	if ( node -> has_nodeid )		6054458	2					
ANR	6054473	Condition	node -> has_nodeid	11:8:147:162	6054458	0	True				
ANR	6054474	PtrMemberAccess	node -> has_nodeid		6054458	0					
ANR	6054475	Identifier	node		6054458	0					
ANR	6054476	Identifier	has_nodeid		6054458	1					
ANR	6054477	CompoundStatement		9:26:82:82	6054458	1					
ANR	6054478	ExpressionStatement	nodenr = node -> nodeid	13:8:176:197	6054458	0	True				
ANR	6054479	AssignmentExpression	nodenr = node -> nodeid		6054458	0		=			
ANR	6054480	Identifier	nodenr		6054458	0					
ANR	6054481	PtrMemberAccess	node -> nodeid		6054458	1					
ANR	6054482	Identifier	node		6054458	0					
ANR	6054483	Identifier	nodeid		6054458	1					
ANR	6054484	ElseStatement	else		6054458	0					
ANR	6054485	CompoundStatement		13:11:128:128	6054458	0					
ANR	6054486	ExpressionStatement	nodenr = nb_numa_nodes	17:8:222:244	6054458	0	True				
ANR	6054487	AssignmentExpression	nodenr = nb_numa_nodes		6054458	0		=			
ANR	6054488	Identifier	nodenr		6054458	0					
ANR	6054489	Identifier	nb_numa_nodes		6054458	1					
ANR	6054490	IfStatement	if ( nodenr >= MAX_NODES )		6054458	3					
ANR	6054491	Condition	nodenr >= MAX_NODES	23:8:264:282	6054458	0	True				
ANR	6054492	RelationalExpression	nodenr >= MAX_NODES		6054458	0		>=			
ANR	6054493	Identifier	nodenr		6054458	0					
ANR	6054494	Identifier	MAX_NODES		6054458	1					
ANR	6054495	CompoundStatement		21:29:202:202	6054458	1					
ANR	6054496	Statement	error_setg	25:8:296:305	6054458	0	True				
ANR	6054497	Statement	(	25:18:306:306	6054458	1	True				
ANR	6054498	Statement	errp	25:19:307:310	6054458	2	True				
ANR	6054499	Statement	","	25:23:311:311	6054458	3	True				
ANR	6054500	Statement	"""Max number of NUMA nodes reached: %"""	25:25:313:349	6054458	4	True				
ANR	6054501	Statement	PRIu16	27:19:371:376	6054458	5	True				
ANR	6054502	Statement	""""""	27:26:378:379	6054458	6	True				
ANR	6054503	Statement	","	27:28:380:380	6054458	7	True				
ANR	6054504	Statement	nodenr	27:30:382:387	6054458	8	True				
ANR	6054505	Statement	)	27:36:388:388	6054458	9	True				
ANR	6054506	ExpressionStatement		27:37:389:389	6054458	10	True				
ANR	6054507	ReturnStatement	return ;	29:8:400:406	6054458	11	True				
ANR	6054508	IfStatement	if ( numa_info [ nodenr ] . present )		6054458	4					
ANR	6054509	Condition	numa_info [ nodenr ] . present	35:8:426:450	6054458	0	True				
ANR	6054510	MemberAccess	numa_info [ nodenr ] . present		6054458	0					
ANR	6054511	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054512	Identifier	numa_info		6054458	0					
ANR	6054513	Identifier	nodenr		6054458	1					
ANR	6054514	Identifier	present		6054458	1					
ANR	6054515	CompoundStatement		33:35:370:370	6054458	1					
ANR	6054516	Statement	error_setg	37:8:464:473	6054458	0	True				
ANR	6054517	Statement	(	37:18:474:474	6054458	1	True				
ANR	6054518	Statement	errp	37:19:475:478	6054458	2	True				
ANR	6054519	Statement	","	37:23:479:479	6054458	3	True				
ANR	6054520	Statement	"""Duplicate NUMA nodeid: %"""	37:25:481:506	6054458	4	True				
ANR	6054521	Statement	PRIu16	37:52:508:513	6054458	5	True				
ANR	6054522	Statement	","	37:58:514:514	6054458	6	True				
ANR	6054523	Statement	nodenr	37:60:516:521	6054458	7	True				
ANR	6054524	Statement	)	37:66:522:522	6054458	8	True				
ANR	6054525	ExpressionStatement		37:67:523:523	6054458	9	True				
ANR	6054526	ReturnStatement	return ;	39:8:534:540	6054458	10	True				
ANR	6054527	ForStatement	for ( cpus = node -> cpus ; cpus ; cpus = cpus -> next )		6054458	5					
ANR	6054528	ForInit	cpus = node -> cpus ;	45:9:561:578	6054458	0	True				
ANR	6054529	AssignmentExpression	cpus = node -> cpus		6054458	0		=			
ANR	6054530	Identifier	cpus		6054458	0					
ANR	6054531	PtrMemberAccess	node -> cpus		6054458	1					
ANR	6054532	Identifier	node		6054458	0					
ANR	6054533	Identifier	cpus		6054458	1					
ANR	6054534	Condition	cpus	45:28:580:583	6054458	1	True				
ANR	6054535	Identifier	cpus		6054458	0					
ANR	6054536	AssignmentExpression	cpus = cpus -> next	45:34:586:602	6054458	2	True	=			
ANR	6054537	Identifier	cpus		6054458	0					
ANR	6054538	PtrMemberAccess	cpus -> next		6054458	1					
ANR	6054539	Identifier	cpus		6054458	0					
ANR	6054540	Identifier	next		6054458	1					
ANR	6054541	CompoundStatement		43:53:522:522	6054458	3					
ANR	6054542	IfStatement	if ( cpus -> value >= MAX_CPUMASK_BITS )		6054458	0					
ANR	6054543	Condition	cpus -> value >= MAX_CPUMASK_BITS	47:12:620:650	6054458	0	True				
ANR	6054544	RelationalExpression	cpus -> value >= MAX_CPUMASK_BITS		6054458	0		>=			
ANR	6054545	PtrMemberAccess	cpus -> value		6054458	0					
ANR	6054546	Identifier	cpus		6054458	0					
ANR	6054547	Identifier	value		6054458	1					
ANR	6054548	Identifier	MAX_CPUMASK_BITS		6054458	1					
ANR	6054549	CompoundStatement		45:45:570:570	6054458	1					
ANR	6054550	Statement	error_setg	49:12:668:677	6054458	0	True				
ANR	6054551	Statement	(	49:22:678:678	6054458	1	True				
ANR	6054552	Statement	errp	49:23:679:682	6054458	2	True				
ANR	6054553	Statement	","	49:27:683:683	6054458	3	True				
ANR	6054554	Statement	"""CPU number %"""	49:29:685:698	6054458	4	True				
ANR	6054555	Statement	PRIu16	49:44:700:705	6054458	5	True				
ANR	6054556	Statement	""" is bigger than %d"""	49:51:707:726	6054458	6	True				
ANR	6054557	Statement	","	49:71:727:727	6054458	7	True				
ANR	6054558	Statement	cpus	51:23:753:756	6054458	8	True				
ANR	6054559	Statement	->	51:27:757:758	6054458	9	True				
ANR	6054560	Statement	value	51:29:759:763	6054458	10	True				
ANR	6054561	Statement	","	51:34:764:764	6054458	11	True				
ANR	6054562	Statement	MAX_CPUMASK_BITS	51:36:766:781	6054458	12	True				
ANR	6054563	Statement	-	51:53:783:783	6054458	13	True				
ANR	6054564	Statement	1	51:55:785:785	6054458	14	True				
ANR	6054565	Statement	)	51:56:786:786	6054458	15	True				
ANR	6054566	ExpressionStatement		51:57:787:787	6054458	16	True				
ANR	6054567	ReturnStatement	return ;	53:12:802:808	6054458	17	True				
ANR	6054568	ExpressionStatement	"bitmap_set ( numa_info [ nodenr ] . node_cpu , cpus -> value , 1 )"	57:8:830:884	6054458	1	True				
ANR	6054569	CallExpression	"bitmap_set ( numa_info [ nodenr ] . node_cpu , cpus -> value , 1 )"		6054458	0					
ANR	6054570	Callee	bitmap_set		6054458	0					
ANR	6054571	Identifier	bitmap_set		6054458	0					
ANR	6054572	ArgumentList	numa_info [ nodenr ] . node_cpu		6054458	1					
ANR	6054573	Argument	numa_info [ nodenr ] . node_cpu		6054458	0					
ANR	6054574	MemberAccess	numa_info [ nodenr ] . node_cpu		6054458	0					
ANR	6054575	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054576	Identifier	numa_info		6054458	0					
ANR	6054577	Identifier	nodenr		6054458	1					
ANR	6054578	Identifier	node_cpu		6054458	1					
ANR	6054579	Argument	cpus -> value		6054458	1					
ANR	6054580	PtrMemberAccess	cpus -> value		6054458	0					
ANR	6054581	Identifier	cpus		6054458	0					
ANR	6054582	Identifier	value		6054458	1					
ANR	6054583	Argument	1		6054458	2					
ANR	6054584	PrimaryExpression	1		6054458	0					
ANR	6054585	IfStatement	if ( node -> has_mem && node -> has_memdev )		6054458	6					
ANR	6054586	Condition	node -> has_mem && node -> has_memdev	63:8:904:936	6054458	0	True				
ANR	6054587	AndExpression	node -> has_mem && node -> has_memdev		6054458	0		&&			
ANR	6054588	PtrMemberAccess	node -> has_mem		6054458	0					
ANR	6054589	Identifier	node		6054458	0					
ANR	6054590	Identifier	has_mem		6054458	1					
ANR	6054591	PtrMemberAccess	node -> has_memdev		6054458	1					
ANR	6054592	Identifier	node		6054458	0					
ANR	6054593	Identifier	has_memdev		6054458	1					
ANR	6054594	CompoundStatement		61:43:856:856	6054458	1					
ANR	6054595	ExpressionStatement	"error_setg ( errp , ""qemu: cannot specify both mem= and memdev="" )"	65:8:950:1012	6054458	0	True				
ANR	6054596	CallExpression	"error_setg ( errp , ""qemu: cannot specify both mem= and memdev="" )"		6054458	0					
ANR	6054597	Callee	error_setg		6054458	0					
ANR	6054598	Identifier	error_setg		6054458	0					
ANR	6054599	ArgumentList	errp		6054458	1					
ANR	6054600	Argument	errp		6054458	0					
ANR	6054601	Identifier	errp		6054458	0					
ANR	6054602	Argument	"""qemu: cannot specify both mem= and memdev="""		6054458	1					
ANR	6054603	PrimaryExpression	"""qemu: cannot specify both mem= and memdev="""		6054458	0					
ANR	6054604	ReturnStatement	return ;	67:8:1023:1029	6054458	1	True				
ANR	6054605	IfStatement	if ( have_memdevs == - 1 )		6054458	7					
ANR	6054606	Condition	have_memdevs == - 1	73:8:1049:1066	6054458	0	True				
ANR	6054607	EqualityExpression	have_memdevs == - 1		6054458	0		==			
ANR	6054608	Identifier	have_memdevs		6054458	0					
ANR	6054609	UnaryOperationExpression	- 1		6054458	1					
ANR	6054610	UnaryOperator	-		6054458	0					
ANR	6054611	PrimaryExpression	1		6054458	1					
ANR	6054612	CompoundStatement		71:28:986:986	6054458	1					
ANR	6054613	ExpressionStatement	have_memdevs = node -> has_memdev	75:8:1080:1111	6054458	0	True				
ANR	6054614	AssignmentExpression	have_memdevs = node -> has_memdev		6054458	0		=			
ANR	6054615	Identifier	have_memdevs		6054458	0					
ANR	6054616	PtrMemberAccess	node -> has_memdev		6054458	1					
ANR	6054617	Identifier	node		6054458	0					
ANR	6054618	Identifier	has_memdev		6054458	1					
ANR	6054619	IfStatement	if ( node -> has_memdev != have_memdevs )		6054458	8					
ANR	6054620	Condition	node -> has_memdev != have_memdevs	79:8:1129:1160	6054458	0	True				
ANR	6054621	EqualityExpression	node -> has_memdev != have_memdevs		6054458	0		!=			
ANR	6054622	PtrMemberAccess	node -> has_memdev		6054458	0					
ANR	6054623	Identifier	node		6054458	0					
ANR	6054624	Identifier	has_memdev		6054458	1					
ANR	6054625	Identifier	have_memdevs		6054458	1					
ANR	6054626	CompoundStatement		77:42:1080:1080	6054458	1					
ANR	6054627	Statement	error_setg	81:8:1174:1183	6054458	0	True				
ANR	6054628	Statement	(	81:18:1184:1184	6054458	1	True				
ANR	6054629	Statement	errp	81:19:1185:1188	6054458	2	True				
ANR	6054630	Statement	","	81:23:1189:1189	6054458	3	True				
ANR	6054631	Statement	"""qemu: memdev option must be specified for either """	81:25:1191:1241	6054458	4	True				
ANR	6054632	Statement	"""all or no nodes"""	83:19:1263:1279	6054458	5	True				
ANR	6054633	Statement	)	83:36:1280:1280	6054458	6	True				
ANR	6054634	ExpressionStatement		83:37:1281:1281	6054458	7	True				
ANR	6054635	ReturnStatement	return ;	85:8:1292:1298	6054458	8	True				
ANR	6054636	IfStatement	if ( node -> has_mem )		6054458	9					
ANR	6054637	Condition	node -> has_mem	91:8:1318:1330	6054458	0	True				
ANR	6054638	PtrMemberAccess	node -> has_mem		6054458	0					
ANR	6054639	Identifier	node		6054458	0					
ANR	6054640	Identifier	has_mem		6054458	1					
ANR	6054641	CompoundStatement		93:8:1301:1348	6054458	1					
ANR	6054642	IdentifierDeclStatement	uint64_t mem_size = node -> mem ;	93:8:1344:1373	6054458	0	True				
ANR	6054643	IdentifierDecl	mem_size = node -> mem		6054458	0					
ANR	6054644	IdentifierDeclType	uint64_t		6054458	0					
ANR	6054645	Identifier	mem_size		6054458	1					
ANR	6054646	AssignmentExpression	mem_size = node -> mem		6054458	2		=			
ANR	6054647	Identifier	mem_size		6054458	0					
ANR	6054648	PtrMemberAccess	node -> mem		6054458	1					
ANR	6054649	Identifier	node		6054458	0					
ANR	6054650	Identifier	mem		6054458	1					
ANR	6054651	IdentifierDeclStatement	"const char * mem_str = qemu_opt_get ( opts , ""mem"" ) ;"	95:8:1384:1431	6054458	1	True				
ANR	6054652	IdentifierDecl	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6054458	0					
ANR	6054653	IdentifierDeclType	const char *		6054458	0					
ANR	6054654	Identifier	mem_str		6054458	1					
ANR	6054655	AssignmentExpression	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6054458	2		=			
ANR	6054656	Identifier	mem_str		6054458	0					
ANR	6054657	CallExpression	"qemu_opt_get ( opts , ""mem"" )"		6054458	1					
ANR	6054658	Callee	qemu_opt_get		6054458	0					
ANR	6054659	Identifier	qemu_opt_get		6054458	0					
ANR	6054660	ArgumentList	opts		6054458	1					
ANR	6054661	Argument	opts		6054458	0					
ANR	6054662	Identifier	opts		6054458	0					
ANR	6054663	Argument	"""mem"""		6054458	1					
ANR	6054664	PrimaryExpression	"""mem"""		6054458	0					
ANR	6054665	IfStatement	if ( g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] ) )		6054458	2					
ANR	6054666	Condition	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )	99:12:1494:1538	6054458	0	True				
ANR	6054667	CallExpression	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )		6054458	0					
ANR	6054668	Callee	g_ascii_isdigit		6054458	0					
ANR	6054669	Identifier	g_ascii_isdigit		6054458	0					
ANR	6054670	ArgumentList	mem_str [ strlen ( mem_str ) - 1 ]		6054458	1					
ANR	6054671	Argument	mem_str [ strlen ( mem_str ) - 1 ]		6054458	0					
ANR	6054672	ArrayIndexing	mem_str [ strlen ( mem_str ) - 1 ]		6054458	0					
ANR	6054673	Identifier	mem_str		6054458	0					
ANR	6054674	AdditiveExpression	strlen ( mem_str ) - 1		6054458	1		-			
ANR	6054675	CallExpression	strlen ( mem_str )		6054458	0					
ANR	6054676	Callee	strlen		6054458	0					
ANR	6054677	Identifier	strlen		6054458	0					
ANR	6054678	ArgumentList	mem_str		6054458	1					
ANR	6054679	Argument	mem_str		6054458	0					
ANR	6054680	Identifier	mem_str		6054458	0					
ANR	6054681	PrimaryExpression	1		6054458	1					
ANR	6054682	CompoundStatement		97:59:1458:1458	6054458	1					
ANR	6054683	ExpressionStatement	mem_size <<= 20	101:12:1556:1571	6054458	0	True				
ANR	6054684	AssignmentExpression	mem_size <<= 20		6054458	0		<<=			
ANR	6054685	Identifier	mem_size		6054458	0					
ANR	6054686	PrimaryExpression	20		6054458	1					
ANR	6054687	ExpressionStatement	numa_info [ nodenr ] . node_mem = mem_size	105:8:1593:1630	6054458	3	True				
ANR	6054688	AssignmentExpression	numa_info [ nodenr ] . node_mem = mem_size		6054458	0		=			
ANR	6054689	MemberAccess	numa_info [ nodenr ] . node_mem		6054458	0					
ANR	6054690	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054691	Identifier	numa_info		6054458	0					
ANR	6054692	Identifier	nodenr		6054458	1					
ANR	6054693	Identifier	node_mem		6054458	1					
ANR	6054694	Identifier	mem_size		6054458	1					
ANR	6054695	IfStatement	if ( node -> has_memdev )		6054458	10					
ANR	6054696	Condition	node -> has_memdev	109:8:1648:1663	6054458	0	True				
ANR	6054697	PtrMemberAccess	node -> has_memdev		6054458	0					
ANR	6054698	Identifier	node		6054458	0					
ANR	6054699	Identifier	has_memdev		6054458	1					
ANR	6054700	CompoundStatement		109:8:1594:1603	6054458	1					
ANR	6054701	IdentifierDeclStatement	Object * o ;	111:8:1677:1686	6054458	0	True				
ANR	6054702	IdentifierDecl	* o		6054458	0					
ANR	6054703	IdentifierDeclType	Object *		6054458	0					
ANR	6054704	Identifier	o		6054458	1					
ANR	6054705	ExpressionStatement	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"	113:8:1697:1766	6054458	1	True				
ANR	6054706	AssignmentExpression	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6054458	0		=			
ANR	6054707	Identifier	o		6054458	0					
ANR	6054708	CallExpression	"object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6054458	1					
ANR	6054709	Callee	object_resolve_path_type		6054458	0					
ANR	6054710	Identifier	object_resolve_path_type		6054458	0					
ANR	6054711	ArgumentList	node -> memdev		6054458	1					
ANR	6054712	Argument	node -> memdev		6054458	0					
ANR	6054713	PtrMemberAccess	node -> memdev		6054458	0					
ANR	6054714	Identifier	node		6054458	0					
ANR	6054715	Identifier	memdev		6054458	1					
ANR	6054716	Argument	TYPE_MEMORY_BACKEND		6054458	1					
ANR	6054717	Identifier	TYPE_MEMORY_BACKEND		6054458	0					
ANR	6054718	Argument	NULL		6054458	2					
ANR	6054719	Identifier	NULL		6054458	0					
ANR	6054720	IfStatement	if ( ! o )		6054458	2					
ANR	6054721	Condition	! o	115:12:1781:1782	6054458	0	True				
ANR	6054722	UnaryOperationExpression	! o		6054458	0					
ANR	6054723	UnaryOperator	!		6054458	0					
ANR	6054724	Identifier	o		6054458	1					
ANR	6054725	CompoundStatement		113:16:1702:1702	6054458	1					
ANR	6054726	ExpressionStatement	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"	117:12:1800:1856	6054458	0	True				
ANR	6054727	CallExpression	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"		6054458	0					
ANR	6054728	Callee	error_setg		6054458	0					
ANR	6054729	Identifier	error_setg		6054458	0					
ANR	6054730	ArgumentList	errp		6054458	1					
ANR	6054731	Argument	errp		6054458	0					
ANR	6054732	Identifier	errp		6054458	0					
ANR	6054733	Argument	"""memdev=%s is ambiguous"""		6054458	1					
ANR	6054734	PrimaryExpression	"""memdev=%s is ambiguous"""		6054458	0					
ANR	6054735	Argument	node -> memdev		6054458	2					
ANR	6054736	PtrMemberAccess	node -> memdev		6054458	0					
ANR	6054737	Identifier	node		6054458	0					
ANR	6054738	Identifier	memdev		6054458	1					
ANR	6054739	ReturnStatement	return ;	119:12:1871:1877	6054458	1	True				
ANR	6054740	ExpressionStatement	object_ref ( o )	125:8:1901:1914	6054458	3	True				
ANR	6054741	CallExpression	object_ref ( o )		6054458	0					
ANR	6054742	Callee	object_ref		6054458	0					
ANR	6054743	Identifier	object_ref		6054458	0					
ANR	6054744	ArgumentList	o		6054458	1					
ANR	6054745	Argument	o		6054458	0					
ANR	6054746	Identifier	o		6054458	0					
ANR	6054747	ExpressionStatement	"numa_info [ nodenr ] . node_mem = object_property_get_int ( o , ""size"" , NULL )"	127:8:1925:1994	6054458	4	True				
ANR	6054748	AssignmentExpression	"numa_info [ nodenr ] . node_mem = object_property_get_int ( o , ""size"" , NULL )"		6054458	0		=			
ANR	6054749	MemberAccess	numa_info [ nodenr ] . node_mem		6054458	0					
ANR	6054750	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054751	Identifier	numa_info		6054458	0					
ANR	6054752	Identifier	nodenr		6054458	1					
ANR	6054753	Identifier	node_mem		6054458	1					
ANR	6054754	CallExpression	"object_property_get_int ( o , ""size"" , NULL )"		6054458	1					
ANR	6054755	Callee	object_property_get_int		6054458	0					
ANR	6054756	Identifier	object_property_get_int		6054458	0					
ANR	6054757	ArgumentList	o		6054458	1					
ANR	6054758	Argument	o		6054458	0					
ANR	6054759	Identifier	o		6054458	0					
ANR	6054760	Argument	"""size"""		6054458	1					
ANR	6054761	PrimaryExpression	"""size"""		6054458	0					
ANR	6054762	Argument	NULL		6054458	2					
ANR	6054763	Identifier	NULL		6054458	0					
ANR	6054764	ExpressionStatement	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )	129:8:2005:2054	6054458	5	True				
ANR	6054765	AssignmentExpression	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )		6054458	0		=			
ANR	6054766	MemberAccess	numa_info [ nodenr ] . node_memdev		6054458	0					
ANR	6054767	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054768	Identifier	numa_info		6054458	0					
ANR	6054769	Identifier	nodenr		6054458	1					
ANR	6054770	Identifier	node_memdev		6054458	1					
ANR	6054771	CallExpression	MEMORY_BACKEND ( o )		6054458	1					
ANR	6054772	Callee	MEMORY_BACKEND		6054458	0					
ANR	6054773	Identifier	MEMORY_BACKEND		6054458	0					
ANR	6054774	ArgumentList	o		6054458	1					
ANR	6054775	Argument	o		6054458	0					
ANR	6054776	Identifier	o		6054458	0					
ANR	6054777	ExpressionStatement	numa_info [ nodenr ] . present = true	133:4:2068:2100	6054458	11	True				
ANR	6054778	AssignmentExpression	numa_info [ nodenr ] . present = true		6054458	0		=			
ANR	6054779	MemberAccess	numa_info [ nodenr ] . present		6054458	0					
ANR	6054780	ArrayIndexing	numa_info [ nodenr ]		6054458	0					
ANR	6054781	Identifier	numa_info		6054458	0					
ANR	6054782	Identifier	nodenr		6054458	1					
ANR	6054783	Identifier	present		6054458	1					
ANR	6054784	Identifier	true		6054458	1					
ANR	6054785	ExpressionStatement	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"	135:4:2107:2157	6054458	12	True				
ANR	6054786	AssignmentExpression	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"		6054458	0		=			
ANR	6054787	Identifier	max_numa_nodeid		6054458	0					
ANR	6054788	CallExpression	"MAX ( max_numa_nodeid , nodenr + 1 )"		6054458	1					
ANR	6054789	Callee	MAX		6054458	0					
ANR	6054790	Identifier	MAX		6054458	0					
ANR	6054791	ArgumentList	max_numa_nodeid		6054458	1					
ANR	6054792	Argument	max_numa_nodeid		6054458	0					
ANR	6054793	Identifier	max_numa_nodeid		6054458	0					
ANR	6054794	Argument	nodenr + 1		6054458	1					
ANR	6054795	AdditiveExpression	nodenr + 1		6054458	0		+			
ANR	6054796	Identifier	nodenr		6054458	0					
ANR	6054797	PrimaryExpression	1		6054458	1					
ANR	6054798	ReturnType	static void		6054458	1					
ANR	6054799	Identifier	numa_node_parse		6054458	2					
ANR	6054800	ParameterList	"NumaNodeOptions * node , QemuOpts * opts , Error * * errp"		6054458	3					
ANR	6054801	Parameter	NumaNodeOptions * node	1:28:28:48	6054458	0	True				
ANR	6054802	ParameterType	NumaNodeOptions *		6054458	0					
ANR	6054803	Identifier	node		6054458	1					
ANR	6054804	Parameter	QemuOpts * opts	1:51:51:64	6054458	1	True				
ANR	6054805	ParameterType	QemuOpts *		6054458	0					
ANR	6054806	Identifier	opts		6054458	1					
ANR	6054807	Parameter	Error * * errp	1:67:67:78	6054458	2	True				
ANR	6054808	ParameterType	Error * *		6054458	0					
ANR	6054809	Identifier	errp		6054458	1					
ANR	6054810	CFGEntryNode	ENTRY		6054458		True				
ANR	6054811	CFGExitNode	EXIT		6054458		True				
ANR	6054812	Symbol	errp		6054458						
ANR	6054813	Symbol	nb_numa_nodes		6054458						
ANR	6054814	Symbol	* nodenr		6054458						
ANR	6054815	Symbol	MAX		6054458						
ANR	6054816	Symbol	nodenr		6054458						
ANR	6054817	Symbol	qemu_opt_get		6054458						
ANR	6054818	Symbol	numa_info [ nodenr ] . node_mem		6054458						
ANR	6054819	Symbol	node -> has_nodeid		6054458						
ANR	6054820	Symbol	object_property_get_int		6054458						
ANR	6054821	Symbol	mem_str		6054458						
ANR	6054822	Symbol	MAX_CPUMASK_BITS		6054458						
ANR	6054823	Symbol	node -> has_memdev		6054458						
ANR	6054824	Symbol	mem_size		6054458						
ANR	6054825	Symbol	node -> nodeid		6054458						
ANR	6054826	Symbol	strlen		6054458						
ANR	6054827	Symbol	opts		6054458						
ANR	6054828	Symbol	node -> memdev		6054458						
ANR	6054829	Symbol	numa_info		6054458						
ANR	6054830	Symbol	* node		6054458						
ANR	6054831	Symbol	* cpus		6054458						
ANR	6054832	Symbol	cpus -> next		6054458						
ANR	6054833	Symbol	object_resolve_path_type		6054458						
ANR	6054834	Symbol	node -> has_mem		6054458						
ANR	6054835	Symbol	* numa_info		6054458						
ANR	6054836	Symbol	NULL		6054458						
ANR	6054837	Symbol	cpus -> value		6054458						
ANR	6054838	Symbol	MAX_NODES		6054458						
ANR	6054839	Symbol	cpus		6054458						
ANR	6054840	Symbol	g_ascii_isdigit		6054458						
ANR	6054841	Symbol	numa_info [ nodenr ] . present		6054458						
ANR	6054842	Symbol	max_numa_nodeid		6054458						
ANR	6054843	Symbol	o		6054458						
ANR	6054844	Symbol	TYPE_MEMORY_BACKEND		6054458						
ANR	6054845	Symbol	have_memdevs		6054458						
ANR	6054846	Symbol	node		6054458						
ANR	6054847	Symbol	numa_info [ nodenr ] . node_memdev		6054458						
ANR	6054848	Symbol	numa_info [ nodenr ] . node_cpu		6054458						
ANR	6054849	Symbol	* strlen		6054458						
ANR	6054850	Symbol	MEMORY_BACKEND		6054458						
ANR	6054851	Symbol	node -> cpus		6054458						
ANR	6054852	Symbol	true		6054458						
ANR	6054853	Symbol	* mem_str		6054458						
ANR	6054854	Symbol	node -> mem		6054458						
