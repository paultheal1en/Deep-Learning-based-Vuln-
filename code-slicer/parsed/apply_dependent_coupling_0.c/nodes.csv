command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	579987	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_dependent_coupling_0.c								
ANR	579988	Function	apply_dependent_coupling	1:0:0:1123							
ANR	579989	FunctionDef	"apply_dependent_coupling (AACContext * ac , SingleChannelElement * target , ChannelElement * cce , int index)"		579988	0					
ANR	579990	CompoundStatement		1:118:118:1123	579988	0					
ANR	579991	IdentifierDeclStatement	IndividualChannelStream * ics = & cce -> ch [ 0 ] . ics ;	3:4:125:172	579988	0	True				
ANR	579992	IdentifierDecl	* ics = & cce -> ch [ 0 ] . ics		579988	0					
ANR	579993	IdentifierDeclType	IndividualChannelStream *		579988	0					
ANR	579994	Identifier	ics		579988	1					
ANR	579995	AssignmentExpression	* ics = & cce -> ch [ 0 ] . ics		579988	2		=			
ANR	579996	Identifier	ics		579988	0					
ANR	579997	UnaryOperationExpression	& cce -> ch [ 0 ] . ics		579988	1					
ANR	579998	UnaryOperator	&		579988	0					
ANR	579999	MemberAccess	cce -> ch [ 0 ] . ics		579988	1					
ANR	580000	ArrayIndexing	cce -> ch [ 0 ]		579988	0					
ANR	580001	PtrMemberAccess	cce -> ch		579988	0					
ANR	580002	Identifier	cce		579988	0					
ANR	580003	Identifier	ch		579988	1					
ANR	580004	PrimaryExpression	0		579988	1					
ANR	580005	Identifier	ics		579988	1					
ANR	580006	IdentifierDeclStatement	const uint16_t * offsets = ics -> swb_offset ;	5:4:179:221	579988	1	True				
ANR	580007	IdentifierDecl	* offsets = ics -> swb_offset		579988	0					
ANR	580008	IdentifierDeclType	const uint16_t *		579988	0					
ANR	580009	Identifier	offsets		579988	1					
ANR	580010	AssignmentExpression	* offsets = ics -> swb_offset		579988	2		=			
ANR	580011	Identifier	offsets		579988	0					
ANR	580012	PtrMemberAccess	ics -> swb_offset		579988	1					
ANR	580013	Identifier	ics		579988	0					
ANR	580014	Identifier	swb_offset		579988	1					
ANR	580015	IdentifierDeclStatement	float * dest = target -> coeffs ;	7:4:228:257	579988	2	True				
ANR	580016	IdentifierDecl	* dest = target -> coeffs		579988	0					
ANR	580017	IdentifierDeclType	float *		579988	0					
ANR	580018	Identifier	dest		579988	1					
ANR	580019	AssignmentExpression	* dest = target -> coeffs		579988	2		=			
ANR	580020	Identifier	dest		579988	0					
ANR	580021	PtrMemberAccess	target -> coeffs		579988	1					
ANR	580022	Identifier	target		579988	0					
ANR	580023	Identifier	coeffs		579988	1					
ANR	580024	IdentifierDeclStatement	const float * src = cce -> ch [ 0 ] . coeffs ;	9:4:264:301	579988	3	True				
ANR	580025	IdentifierDecl	* src = cce -> ch [ 0 ] . coeffs		579988	0					
ANR	580026	IdentifierDeclType	const float *		579988	0					
ANR	580027	Identifier	src		579988	1					
ANR	580028	AssignmentExpression	* src = cce -> ch [ 0 ] . coeffs		579988	2		=			
ANR	580029	Identifier	src		579988	0					
ANR	580030	MemberAccess	cce -> ch [ 0 ] . coeffs		579988	1					
ANR	580031	ArrayIndexing	cce -> ch [ 0 ]		579988	0					
ANR	580032	PtrMemberAccess	cce -> ch		579988	0					
ANR	580033	Identifier	cce		579988	0					
ANR	580034	Identifier	ch		579988	1					
ANR	580035	PrimaryExpression	0		579988	1					
ANR	580036	Identifier	coeffs		579988	1					
ANR	580037	IdentifierDeclStatement	"int g , i , group , k , idx = 0 ;"	11:4:308:335	579988	4	True				
ANR	580038	IdentifierDecl	g		579988	0					
ANR	580039	IdentifierDeclType	int		579988	0					
ANR	580040	Identifier	g		579988	1					
ANR	580041	IdentifierDecl	i		579988	1					
ANR	580042	IdentifierDeclType	int		579988	0					
ANR	580043	Identifier	i		579988	1					
ANR	580044	IdentifierDecl	group		579988	2					
ANR	580045	IdentifierDeclType	int		579988	0					
ANR	580046	Identifier	group		579988	1					
ANR	580047	IdentifierDecl	k		579988	3					
ANR	580048	IdentifierDeclType	int		579988	0					
ANR	580049	Identifier	k		579988	1					
ANR	580050	IdentifierDecl	idx = 0		579988	4					
ANR	580051	IdentifierDeclType	int		579988	0					
ANR	580052	Identifier	idx		579988	1					
ANR	580053	AssignmentExpression	idx = 0		579988	2		=			
ANR	580054	Identifier	idx		579988	0					
ANR	580055	PrimaryExpression	0		579988	1					
ANR	580056	IfStatement	if ( ac -> m4ac . object_type == AOT_AAC_LTP )		579988	5					
ANR	580057	Condition	ac -> m4ac . object_type == AOT_AAC_LTP	13:7:345:379	579988	0	True				
ANR	580058	EqualityExpression	ac -> m4ac . object_type == AOT_AAC_LTP		579988	0		==			
ANR	580059	MemberAccess	ac -> m4ac . object_type		579988	0					
ANR	580060	PtrMemberAccess	ac -> m4ac		579988	0					
ANR	580061	Identifier	ac		579988	0					
ANR	580062	Identifier	m4ac		579988	1					
ANR	580063	Identifier	object_type		579988	1					
ANR	580064	Identifier	AOT_AAC_LTP		579988	1					
ANR	580065	CompoundStatement		13:44:263:263	579988	1					
ANR	580066	ExpressionStatement	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""Dependent coupling is not supported together with LTP\\n"" )"	15:8:393:504	579988	0	True				
ANR	580067	CallExpression	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""Dependent coupling is not supported together with LTP\\n"" )"		579988	0					
ANR	580068	Callee	av_log		579988	0					
ANR	580069	Identifier	av_log		579988	0					
ANR	580070	ArgumentList	ac -> avccontext		579988	1					
ANR	580071	Argument	ac -> avccontext		579988	0					
ANR	580072	PtrMemberAccess	ac -> avccontext		579988	0					
ANR	580073	Identifier	ac		579988	0					
ANR	580074	Identifier	avccontext		579988	1					
ANR	580075	Argument	AV_LOG_ERROR		579988	1					
ANR	580076	Identifier	AV_LOG_ERROR		579988	0					
ANR	580077	Argument	"""Dependent coupling is not supported together with LTP\\n"""		579988	2					
ANR	580078	PrimaryExpression	"""Dependent coupling is not supported together with LTP\\n"""		579988	0					
ANR	580079	ReturnStatement	return ;	19:8:515:521	579988	1	True				
ANR	580080	ForStatement	for ( g = 0 ; g < ics -> num_window_groups ; g ++ )		579988	6					
ANR	580081	ForInit	g = 0 ;	23:9:540:545	579988	0	True				
ANR	580082	AssignmentExpression	g = 0		579988	0		=			
ANR	580083	Identifier	g		579988	0					
ANR	580084	PrimaryExpression	0		579988	1					
ANR	580085	Condition	g < ics -> num_window_groups	23:16:547:572	579988	1	True				
ANR	580086	RelationalExpression	g < ics -> num_window_groups		579988	0		<			
ANR	580087	Identifier	g		579988	0					
ANR	580088	PtrMemberAccess	ics -> num_window_groups		579988	1					
ANR	580089	Identifier	ics		579988	0					
ANR	580090	Identifier	num_window_groups		579988	1					
ANR	580091	PostIncDecOperationExpression	g ++	23:44:575:577	579988	2	True				
ANR	580092	Identifier	g		579988	0					
ANR	580093	IncDec	++		579988	1					
ANR	580094	CompoundStatement		23:49:461:461	579988	3					
ANR	580095	ForStatement	"for ( i = 0 ; i < ics -> max_sfb ; i ++ , idx ++ )"		579988	0					
ANR	580096	ForInit	i = 0 ;	25:13:596:601	579988	0	True				
ANR	580097	AssignmentExpression	i = 0		579988	0		=			
ANR	580098	Identifier	i		579988	0					
ANR	580099	PrimaryExpression	0		579988	1					
ANR	580100	Condition	i < ics -> max_sfb	25:20:603:618	579988	1	True				
ANR	580101	RelationalExpression	i < ics -> max_sfb		579988	0		<			
ANR	580102	Identifier	i		579988	0					
ANR	580103	PtrMemberAccess	ics -> max_sfb		579988	1					
ANR	580104	Identifier	ics		579988	0					
ANR	580105	Identifier	max_sfb		579988	1					
ANR	580106	Expression	"i ++ , idx ++"	25:38:621:630	579988	2	True				
ANR	580107	PostIncDecOperationExpression	i ++		579988	0					
ANR	580108	Identifier	i		579988	0					
ANR	580109	IncDec	++		579988	1					
ANR	580110	PostIncDecOperationExpression	idx ++		579988	1					
ANR	580111	Identifier	idx		579988	0					
ANR	580112	IncDec	++		579988	1					
ANR	580113	CompoundStatement		25:50:514:514	579988	3					
ANR	580114	IfStatement	if ( cce -> ch [ 0 ] . band_type [ idx ] != ZERO_BT )		579988	0					
ANR	580115	Condition	cce -> ch [ 0 ] . band_type [ idx ] != ZERO_BT	27:16:652:687	579988	0	True				
ANR	580116	EqualityExpression	cce -> ch [ 0 ] . band_type [ idx ] != ZERO_BT		579988	0		!=			
ANR	580117	ArrayIndexing	cce -> ch [ 0 ] . band_type [ idx ]		579988	0					
ANR	580118	MemberAccess	cce -> ch [ 0 ] . band_type		579988	0					
ANR	580119	ArrayIndexing	cce -> ch [ 0 ]		579988	0					
ANR	580120	PtrMemberAccess	cce -> ch		579988	0					
ANR	580121	Identifier	cce		579988	0					
ANR	580122	Identifier	ch		579988	1					
ANR	580123	PrimaryExpression	0		579988	1					
ANR	580124	Identifier	band_type		579988	1					
ANR	580125	Identifier	idx		579988	1					
ANR	580126	Identifier	ZERO_BT		579988	1					
ANR	580127	CompoundStatement		27:54:571:571	579988	1					
ANR	580128	ForStatement	for ( group = 0 ; group < ics -> group_len [ g ] ; group ++ )		579988	0					
ANR	580129	ForInit	group = 0 ;	29:21:714:723	579988	0	True				
ANR	580130	AssignmentExpression	group = 0		579988	0		=			
ANR	580131	Identifier	group		579988	0					
ANR	580132	PrimaryExpression	0		579988	1					
ANR	580133	Condition	group < ics -> group_len [ g ]	29:32:725:749	579988	1	True				
ANR	580134	RelationalExpression	group < ics -> group_len [ g ]		579988	0		<			
ANR	580135	Identifier	group		579988	0					
ANR	580136	ArrayIndexing	ics -> group_len [ g ]		579988	1					
ANR	580137	PtrMemberAccess	ics -> group_len		579988	0					
ANR	580138	Identifier	ics		579988	0					
ANR	580139	Identifier	group_len		579988	1					
ANR	580140	Identifier	g		579988	1					
ANR	580141	PostIncDecOperationExpression	group ++	29:59:752:758	579988	2	True				
ANR	580142	Identifier	group		579988	0					
ANR	580143	IncDec	++		579988	1					
ANR	580144	CompoundStatement		29:68:642:642	579988	3					
ANR	580145	ForStatement	for ( k = offsets [ i ] ; k < offsets [ i + 1 ] ; k ++ )		579988	0					
ANR	580146	ForInit	k = offsets [ i ] ;	31:25:789:803	579988	0	True				
ANR	580147	AssignmentExpression	k = offsets [ i ]		579988	0		=			
ANR	580148	Identifier	k		579988	0					
ANR	580149	ArrayIndexing	offsets [ i ]		579988	1					
ANR	580150	Identifier	offsets		579988	0					
ANR	580151	Identifier	i		579988	1					
ANR	580152	Condition	k < offsets [ i + 1 ]	31:41:805:820	579988	1	True				
ANR	580153	RelationalExpression	k < offsets [ i + 1 ]		579988	0		<			
ANR	580154	Identifier	k		579988	0					
ANR	580155	ArrayIndexing	offsets [ i + 1 ]		579988	1					
ANR	580156	Identifier	offsets		579988	0					
ANR	580157	AdditiveExpression	i + 1		579988	1		+			
ANR	580158	Identifier	i		579988	0					
ANR	580159	PrimaryExpression	1		579988	1					
ANR	580160	PostIncDecOperationExpression	k ++	31:59:823:825	579988	2	True				
ANR	580161	Identifier	k		579988	0					
ANR	580162	IncDec	++		579988	1					
ANR	580163	CompoundStatement		31:64:709:709	579988	3					
ANR	580164	ExpressionStatement	dest [ group * 128 + k ] += cce -> coup . gain [ index ] [ idx ] * src [ group * 128 + k ]	35:24:899:965	579988	0	True				
ANR	580165	AssignmentExpression	dest [ group * 128 + k ] += cce -> coup . gain [ index ] [ idx ] * src [ group * 128 + k ]		579988	0		+=			
ANR	580166	ArrayIndexing	dest [ group * 128 + k ]		579988	0					
ANR	580167	Identifier	dest		579988	0					
ANR	580168	AdditiveExpression	group * 128 + k		579988	1		+			
ANR	580169	MultiplicativeExpression	group * 128		579988	0		*			
ANR	580170	Identifier	group		579988	0					
ANR	580171	PrimaryExpression	128		579988	1					
ANR	580172	Identifier	k		579988	1					
ANR	580173	MultiplicativeExpression	cce -> coup . gain [ index ] [ idx ] * src [ group * 128 + k ]		579988	1		*			
ANR	580174	ArrayIndexing	cce -> coup . gain [ index ] [ idx ]		579988	0					
ANR	580175	ArrayIndexing	cce -> coup . gain [ index ]		579988	0					
ANR	580176	MemberAccess	cce -> coup . gain		579988	0					
ANR	580177	PtrMemberAccess	cce -> coup		579988	0					
ANR	580178	Identifier	cce		579988	0					
ANR	580179	Identifier	coup		579988	1					
ANR	580180	Identifier	gain		579988	1					
ANR	580181	Identifier	index		579988	1					
ANR	580182	Identifier	idx		579988	1					
ANR	580183	ArrayIndexing	src [ group * 128 + k ]		579988	1					
ANR	580184	Identifier	src		579988	0					
ANR	580185	AdditiveExpression	group * 128 + k		579988	1		+			
ANR	580186	MultiplicativeExpression	group * 128		579988	0		*			
ANR	580187	Identifier	group		579988	0					
ANR	580188	PrimaryExpression	128		579988	1					
ANR	580189	Identifier	k		579988	1					
ANR	580190	ExpressionStatement	dest += ics -> group_len [ g ] * 128	45:8:1044:1073	579988	1	True				
ANR	580191	AssignmentExpression	dest += ics -> group_len [ g ] * 128		579988	0		+=			
ANR	580192	Identifier	dest		579988	0					
ANR	580193	MultiplicativeExpression	ics -> group_len [ g ] * 128		579988	1		*			
ANR	580194	ArrayIndexing	ics -> group_len [ g ]		579988	0					
ANR	580195	PtrMemberAccess	ics -> group_len		579988	0					
ANR	580196	Identifier	ics		579988	0					
ANR	580197	Identifier	group_len		579988	1					
ANR	580198	Identifier	g		579988	1					
ANR	580199	PrimaryExpression	128		579988	1					
ANR	580200	ExpressionStatement	src += ics -> group_len [ g ] * 128	47:8:1084:1113	579988	2	True				
ANR	580201	AssignmentExpression	src += ics -> group_len [ g ] * 128		579988	0		+=			
ANR	580202	Identifier	src		579988	0					
ANR	580203	MultiplicativeExpression	ics -> group_len [ g ] * 128		579988	1		*			
ANR	580204	ArrayIndexing	ics -> group_len [ g ]		579988	0					
ANR	580205	PtrMemberAccess	ics -> group_len		579988	0					
ANR	580206	Identifier	ics		579988	0					
ANR	580207	Identifier	group_len		579988	1					
ANR	580208	Identifier	g		579988	1					
ANR	580209	PrimaryExpression	128		579988	1					
ANR	580210	ReturnType	static void		579988	1					
ANR	580211	Identifier	apply_dependent_coupling		579988	2					
ANR	580212	ParameterList	"AACContext * ac , SingleChannelElement * target , ChannelElement * cce , int index"		579988	3					
ANR	580213	Parameter	AACContext * ac	1:37:37:51	579988	0	True				
ANR	580214	ParameterType	AACContext *		579988	0					
ANR	580215	Identifier	ac		579988	1					
ANR	580216	Parameter	SingleChannelElement * target	1:54:54:82	579988	1	True				
ANR	580217	ParameterType	SingleChannelElement *		579988	0					
ANR	580218	Identifier	target		579988	1					
ANR	580219	Parameter	ChannelElement * cce	1:85:85:104	579988	2	True				
ANR	580220	ParameterType	ChannelElement *		579988	0					
ANR	580221	Identifier	cce		579988	1					
ANR	580222	Parameter	int index	1:107:107:115	579988	3	True				
ANR	580223	ParameterType	int		579988	0					
ANR	580224	Identifier	index		579988	1					
ANR	580225	CFGEntryNode	ENTRY		579988		True				
ANR	580226	CFGExitNode	EXIT		579988		True				
ANR	580227	Symbol	* * * cce		579988						
ANR	580228	Symbol	cce		579988						
ANR	580229	Symbol	* cce -> coup . gain		579988						
ANR	580230	Symbol	* index		579988						
ANR	580231	Symbol	& cce -> ch [ 0 ] . ics		579988						
ANR	580232	Symbol	dest		579988						
ANR	580233	Symbol	* src		579988						
ANR	580234	Symbol	ZERO_BT		579988						
ANR	580235	Symbol	* * cce -> ch		579988						
ANR	580236	Symbol	ics -> num_window_groups		579988						
ANR	580237	Symbol	ics		579988						
ANR	580238	Symbol	* idx		579988						
ANR	580239	Symbol	group		579988						
ANR	580240	Symbol	ac		579988						
ANR	580241	Symbol	* cce -> ch		579988						
ANR	580242	Symbol	cce -> ch [ 0 ] . coeffs		579988						
ANR	580243	Symbol	* cce -> ch [ 0 ] . band_type		579988						
ANR	580244	Symbol	AOT_AAC_LTP		579988						
ANR	580245	Symbol	index		579988						
ANR	580246	Symbol	* * cce -> coup		579988						
ANR	580247	Symbol	target -> coeffs		579988						
ANR	580248	Symbol	cce -> coup . gain		579988						
ANR	580249	Symbol	idx		579988						
ANR	580250	Symbol	* ics -> group_len		579988						
ANR	580251	Symbol	* dest		579988						
ANR	580252	Symbol	* group		579988						
ANR	580253	Symbol	cce -> coup		579988						
ANR	580254	Symbol	cce -> ch		579988						
ANR	580255	Symbol	* ac		579988						
ANR	580256	Symbol	* cce		579988						
ANR	580257	Symbol	ics -> group_len		579988						
ANR	580258	Symbol	ac -> avccontext		579988						
ANR	580259	Symbol	* * cce -> coup . gain		579988						
ANR	580260	Symbol	ics -> swb_offset		579988						
ANR	580261	Symbol	* * cce		579988						
ANR	580262	Symbol	* * index		579988						
ANR	580263	Symbol	* offsets		579988						
ANR	580264	Symbol	* cce -> coup		579988						
ANR	580265	Symbol	AV_LOG_ERROR		579988						
ANR	580266	Symbol	src		579988						
ANR	580267	Symbol	g		579988						
ANR	580268	Symbol	i		579988						
ANR	580269	Symbol	k		579988						
ANR	580270	Symbol	cce -> ch [ 0 ] . band_type		579988						
ANR	580271	Symbol	* * ics		579988						
ANR	580272	Symbol	target		579988						
ANR	580273	Symbol	* target		579988						
ANR	580274	Symbol	ac -> m4ac		579988						
ANR	580275	Symbol	ics -> max_sfb		579988						
ANR	580276	Symbol	* g		579988						
ANR	580277	Symbol	* i		579988						
ANR	580278	Symbol	offsets		579988						
ANR	580279	Symbol	* k		579988						
ANR	580280	Symbol	ac -> m4ac . object_type		579988						
ANR	580281	Symbol	* ics		579988						
