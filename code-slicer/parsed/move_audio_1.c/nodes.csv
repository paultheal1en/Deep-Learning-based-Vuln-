command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5673833	File	/home/p4ultr4n/workplace/ReVeal/raw_code/move_audio_1.c								
ANR	5673834	Function	move_audio	1:0:0:653							
ANR	5673835	FunctionDef	"move_audio (vorbis_enc_context * venc , float * * audio , int * samples , int sf_size)"		5673834	0					
ANR	5673836	CompoundStatement		3:0:92:653	5673834	0					
ANR	5673837	IdentifierDeclStatement	AVFrame * cur = NULL ;	5:4:99:118	5673834	0	True				
ANR	5673838	IdentifierDecl	* cur = NULL		5673834	0					
ANR	5673839	IdentifierDeclType	AVFrame *		5673834	0					
ANR	5673840	Identifier	cur		5673834	1					
ANR	5673841	AssignmentExpression	* cur = NULL		5673834	2		=			
ANR	5673842	Identifier	NULL		5673834	0					
ANR	5673843	Identifier	NULL		5673834	1					
ANR	5673844	IdentifierDeclStatement	int frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 ) ;	7:4:125:176	5673834	1	True				
ANR	5673845	IdentifierDecl	frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673834	0					
ANR	5673846	IdentifierDeclType	int		5673834	0					
ANR	5673847	Identifier	frame_size		5673834	1					
ANR	5673848	AssignmentExpression	frame_size = 1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673834	2		=			
ANR	5673849	Identifier	frame_size		5673834	0					
ANR	5673850	ShiftExpression	1 << ( venc -> log2_blocksize [ 1 ] - 1 )		5673834	1		<<			
ANR	5673851	PrimaryExpression	1		5673834	0					
ANR	5673852	AdditiveExpression	venc -> log2_blocksize [ 1 ] - 1		5673834	1		-			
ANR	5673853	ArrayIndexing	venc -> log2_blocksize [ 1 ]		5673834	0					
ANR	5673854	PtrMemberAccess	venc -> log2_blocksize		5673834	0					
ANR	5673855	Identifier	venc		5673834	0					
ANR	5673856	Identifier	log2_blocksize		5673834	1					
ANR	5673857	PrimaryExpression	1		5673834	1					
ANR	5673858	PrimaryExpression	1		5673834	1					
ANR	5673859	IdentifierDeclStatement	int subframes = frame_size / sf_size ;	9:4:183:219	5673834	2	True				
ANR	5673860	IdentifierDecl	subframes = frame_size / sf_size		5673834	0					
ANR	5673861	IdentifierDeclType	int		5673834	0					
ANR	5673862	Identifier	subframes		5673834	1					
ANR	5673863	AssignmentExpression	subframes = frame_size / sf_size		5673834	2		=			
ANR	5673864	Identifier	subframes		5673834	0					
ANR	5673865	MultiplicativeExpression	frame_size / sf_size		5673834	1		/			
ANR	5673866	Identifier	frame_size		5673834	0					
ANR	5673867	Identifier	sf_size		5673834	1					
ANR	5673868	ForStatement	for ( int sf = 0 ; sf < subframes ; sf ++ )		5673834	3					
ANR	5673869	ForInit	int sf = 0 ;	13:9:233:243	5673834	0	True				
ANR	5673870	IdentifierDeclStatement	int sf = 0 ;		5673834	0					
ANR	5673871	IdentifierDecl	sf = 0		5673834	0					
ANR	5673872	IdentifierDeclType	int		5673834	0					
ANR	5673873	Identifier	sf		5673834	1					
ANR	5673874	AssignmentExpression	sf = 0		5673834	2		=			
ANR	5673875	Identifier	sf		5673834	0					
ANR	5673876	PrimaryExpression	0		5673834	1					
ANR	5673877	Condition	sf < subframes	13:21:245:258	5673834	1	True				
ANR	5673878	RelationalExpression	sf < subframes		5673834	0		<			
ANR	5673879	Identifier	sf		5673834	0					
ANR	5673880	Identifier	subframes		5673834	1					
ANR	5673881	PostIncDecOperationExpression	sf ++	13:37:261:264	5673834	2	True				
ANR	5673882	Identifier	sf		5673834	0					
ANR	5673883	IncDec	++		5673834	1					
ANR	5673884	CompoundStatement		11:43:174:174	5673834	3					
ANR	5673885	ExpressionStatement	cur = ff_bufqueue_get ( & venc -> bufqueue )	15:8:278:316	5673834	0	True				
ANR	5673886	AssignmentExpression	cur = ff_bufqueue_get ( & venc -> bufqueue )		5673834	0		=			
ANR	5673887	Identifier	cur		5673834	0					
ANR	5673888	CallExpression	ff_bufqueue_get ( & venc -> bufqueue )		5673834	1					
ANR	5673889	Callee	ff_bufqueue_get		5673834	0					
ANR	5673890	Identifier	ff_bufqueue_get		5673834	0					
ANR	5673891	ArgumentList	& venc -> bufqueue		5673834	1					
ANR	5673892	Argument	& venc -> bufqueue		5673834	0					
ANR	5673893	UnaryOperationExpression	& venc -> bufqueue		5673834	0					
ANR	5673894	UnaryOperator	&		5673834	0					
ANR	5673895	PtrMemberAccess	venc -> bufqueue		5673834	1					
ANR	5673896	Identifier	venc		5673834	0					
ANR	5673897	Identifier	bufqueue		5673834	1					
ANR	5673898	ExpressionStatement	* samples += cur -> nb_samples	17:8:327:354	5673834	1	True				
ANR	5673899	AssignmentExpression	* samples += cur -> nb_samples		5673834	0		+=			
ANR	5673900	UnaryOperationExpression	* samples		5673834	0					
ANR	5673901	UnaryOperator	*		5673834	0					
ANR	5673902	Identifier	samples		5673834	1					
ANR	5673903	PtrMemberAccess	cur -> nb_samples		5673834	1					
ANR	5673904	Identifier	cur		5673834	0					
ANR	5673905	Identifier	nb_samples		5673834	1					
ANR	5673906	ForStatement	for ( int ch = 0 ; ch < venc -> channels ; ch ++ )		5673834	2					
ANR	5673907	ForInit	int ch = 0 ;	21:13:372:382	5673834	0	True				
ANR	5673908	IdentifierDeclStatement	int ch = 0 ;		5673834	0					
ANR	5673909	IdentifierDecl	ch = 0		5673834	0					
ANR	5673910	IdentifierDeclType	int		5673834	0					
ANR	5673911	Identifier	ch		5673834	1					
ANR	5673912	AssignmentExpression	ch = 0		5673834	2		=			
ANR	5673913	Identifier	ch		5673834	0					
ANR	5673914	PrimaryExpression	0		5673834	1					
ANR	5673915	Condition	ch < venc -> channels	21:25:384:402	5673834	1	True				
ANR	5673916	RelationalExpression	ch < venc -> channels		5673834	0		<			
ANR	5673917	Identifier	ch		5673834	0					
ANR	5673918	PtrMemberAccess	venc -> channels		5673834	1					
ANR	5673919	Identifier	venc		5673834	0					
ANR	5673920	Identifier	channels		5673834	1					
ANR	5673921	PostIncDecOperationExpression	ch ++	21:46:405:408	5673834	2	True				
ANR	5673922	Identifier	ch		5673834	0					
ANR	5673923	IncDec	++		5673834	1					
ANR	5673924	CompoundStatement		23:12:401:452	5673834	3					
ANR	5673925	IdentifierDeclStatement	const float * input = ( float * ) cur -> extended_data [ ch ] ;	23:12:426:479	5673834	0	True				
ANR	5673926	IdentifierDecl	* input = ( float * ) cur -> extended_data [ ch ]		5673834	0					
ANR	5673927	IdentifierDeclType	const float *		5673834	0					
ANR	5673928	Identifier	input		5673834	1					
ANR	5673929	AssignmentExpression	* input = ( float * ) cur -> extended_data [ ch ]		5673834	2		=			
ANR	5673930	Identifier	input		5673834	0					
ANR	5673931	CastExpression	( float * ) cur -> extended_data [ ch ]		5673834	1					
ANR	5673932	CastTarget	float *		5673834	0					
ANR	5673933	ArrayIndexing	cur -> extended_data [ ch ]		5673834	1					
ANR	5673934	PtrMemberAccess	cur -> extended_data		5673834	0					
ANR	5673935	Identifier	cur		5673834	0					
ANR	5673936	Identifier	extended_data		5673834	1					
ANR	5673937	Identifier	ch		5673834	1					
ANR	5673938	IdentifierDeclStatement	const size_t len = cur -> nb_samples * sizeof ( float ) ;	25:12:494:545	5673834	1	True				
ANR	5673939	IdentifierDecl	len = cur -> nb_samples * sizeof ( float )		5673834	0					
ANR	5673940	IdentifierDeclType	const size_t		5673834	0					
ANR	5673941	Identifier	len		5673834	1					
ANR	5673942	AssignmentExpression	len = cur -> nb_samples * sizeof ( float )		5673834	2		=			
ANR	5673943	Identifier	len		5673834	0					
ANR	5673944	MultiplicativeExpression	cur -> nb_samples * sizeof ( float )		5673834	1		*			
ANR	5673945	PtrMemberAccess	cur -> nb_samples		5673834	0					
ANR	5673946	Identifier	cur		5673834	0					
ANR	5673947	Identifier	nb_samples		5673834	1					
ANR	5673948	SizeofExpression	sizeof ( float )		5673834	1					
ANR	5673949	Sizeof	sizeof		5673834	0					
ANR	5673950	SizeofOperand	float		5673834	1					
ANR	5673951	ExpressionStatement	"memcpy ( & audio [ ch ] [ sf * sf_size ] , input , len )"	27:12:560:602	5673834	2	True				
ANR	5673952	CallExpression	"memcpy ( & audio [ ch ] [ sf * sf_size ] , input , len )"		5673834	0					
ANR	5673953	Callee	memcpy		5673834	0					
ANR	5673954	Identifier	memcpy		5673834	0					
ANR	5673955	ArgumentList	& audio [ ch ] [ sf * sf_size ]		5673834	1					
ANR	5673956	Argument	& audio [ ch ] [ sf * sf_size ]		5673834	0					
ANR	5673957	UnaryOperationExpression	& audio [ ch ] [ sf * sf_size ]		5673834	0					
ANR	5673958	UnaryOperator	&		5673834	0					
ANR	5673959	ArrayIndexing	audio [ ch ] [ sf * sf_size ]		5673834	1					
ANR	5673960	ArrayIndexing	audio [ ch ]		5673834	0					
ANR	5673961	Identifier	audio		5673834	0					
ANR	5673962	Identifier	ch		5673834	1					
ANR	5673963	MultiplicativeExpression	sf * sf_size		5673834	1		*			
ANR	5673964	Identifier	sf		5673834	0					
ANR	5673965	Identifier	sf_size		5673834	1					
ANR	5673966	Argument	input		5673834	1					
ANR	5673967	Identifier	input		5673834	0					
ANR	5673968	Argument	len		5673834	2					
ANR	5673969	Identifier	len		5673834	0					
ANR	5673970	ExpressionStatement	av_frame_free ( & cur )	31:8:624:643	5673834	3	True				
ANR	5673971	CallExpression	av_frame_free ( & cur )		5673834	0					
ANR	5673972	Callee	av_frame_free		5673834	0					
ANR	5673973	Identifier	av_frame_free		5673834	0					
ANR	5673974	ArgumentList	& cur		5673834	1					
ANR	5673975	Argument	& cur		5673834	0					
ANR	5673976	UnaryOperationExpression	& cur		5673834	0					
ANR	5673977	UnaryOperator	&		5673834	0					
ANR	5673978	Identifier	cur		5673834	1					
ANR	5673979	ReturnType	static void		5673834	1					
ANR	5673980	Identifier	move_audio		5673834	2					
ANR	5673981	ParameterList	"vorbis_enc_context * venc , float * * audio , int * samples , int sf_size"		5673834	3					
ANR	5673982	Parameter	vorbis_enc_context * venc	1:23:23:46	5673834	0	True				
ANR	5673983	ParameterType	vorbis_enc_context *		5673834	0					
ANR	5673984	Identifier	venc		5673834	1					
ANR	5673985	Parameter	float * * audio	1:49:49:61	5673834	1	True				
ANR	5673986	ParameterType	float * *		5673834	0					
ANR	5673987	Identifier	audio		5673834	1					
ANR	5673988	Parameter	int * samples	1:64:64:75	5673834	2	True				
ANR	5673989	ParameterType	int *		5673834	0					
ANR	5673990	Identifier	samples		5673834	1					
ANR	5673991	Parameter	int sf_size	1:78:78:88	5673834	3	True				
ANR	5673992	ParameterType	int		5673834	0					
ANR	5673993	Identifier	sf_size		5673834	1					
ANR	5673994	CFGEntryNode	ENTRY		5673834		True				
ANR	5673995	CFGExitNode	EXIT		5673834		True				
ANR	5673996	Symbol	cur		5673834						
ANR	5673997	Symbol	sf_size		5673834						
ANR	5673998	Symbol	venc -> log2_blocksize		5673834						
ANR	5673999	Symbol	* ch		5673834						
ANR	5674000	Symbol	* venc -> log2_blocksize		5673834						
ANR	5674001	Symbol	cur -> nb_samples		5673834						
ANR	5674002	Symbol	venc -> channels		5673834						
ANR	5674003	Symbol	frame_size		5673834						
ANR	5674004	Symbol	* * venc		5673834						
ANR	5674005	Symbol	* audio		5673834						
ANR	5674006	Symbol	venc		5673834						
ANR	5674007	Symbol	sf		5673834						
ANR	5674008	Symbol	* samples		5673834						
ANR	5674009	Symbol	* * cur		5673834						
ANR	5674010	Symbol	len		5673834						
ANR	5674011	Symbol	* cur		5673834						
ANR	5674012	Symbol	& venc -> bufqueue		5673834						
ANR	5674013	Symbol	audio		5673834						
ANR	5674014	Symbol	cur -> extended_data		5673834						
ANR	5674015	Symbol	* cur -> extended_data		5673834						
ANR	5674016	Symbol	& cur		5673834						
ANR	5674017	Symbol	NULL		5673834						
ANR	5674018	Symbol	ch		5673834						
ANR	5674019	Symbol	subframes		5673834						
ANR	5674020	Symbol	samples		5673834						
ANR	5674021	Symbol	input		5673834						
ANR	5674022	Symbol	* venc		5673834						
ANR	5674023	Symbol	ff_bufqueue_get		5673834						
