command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3028502	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_plane_0.c								
ANR	3028503	Function	encode_plane	1:0:0:1304							
ANR	3028504	FunctionDef	"encode_plane (FFV1Context * s , uint8_t * src , int w , int h , int stride , int plane_index)"		3028503	0					
ANR	3028505	CompoundStatement		5:0:125:1304	3028503	0					
ANR	3028506	IdentifierDeclStatement	"int x , y , i ;"	7:4:132:143	3028503	0	True				
ANR	3028507	IdentifierDecl	x		3028503	0					
ANR	3028508	IdentifierDeclType	int		3028503	0					
ANR	3028509	Identifier	x		3028503	1					
ANR	3028510	IdentifierDecl	y		3028503	1					
ANR	3028511	IdentifierDeclType	int		3028503	0					
ANR	3028512	Identifier	y		3028503	1					
ANR	3028513	IdentifierDecl	i		3028503	2					
ANR	3028514	IdentifierDeclType	int		3028503	0					
ANR	3028515	Identifier	i		3028503	1					
ANR	3028516	IdentifierDeclStatement	const int ring_size = s -> avctx -> context_model ? 3 : 2 ;	9:4:150:203	3028503	1	True				
ANR	3028517	IdentifierDecl	ring_size = s -> avctx -> context_model ? 3 : 2		3028503	0					
ANR	3028518	IdentifierDeclType	const int		3028503	0					
ANR	3028519	Identifier	ring_size		3028503	1					
ANR	3028520	AssignmentExpression	ring_size = s -> avctx -> context_model ? 3 : 2		3028503	2		=			
ANR	3028521	Identifier	ring_size		3028503	0					
ANR	3028522	ConditionalExpression	s -> avctx -> context_model ? 3 : 2		3028503	1					
ANR	3028523	Condition	s -> avctx -> context_model		3028503	0					
ANR	3028524	PtrMemberAccess	s -> avctx -> context_model		3028503	0					
ANR	3028525	PtrMemberAccess	s -> avctx		3028503	0					
ANR	3028526	Identifier	s		3028503	0					
ANR	3028527	Identifier	avctx		3028503	1					
ANR	3028528	Identifier	context_model		3028503	1					
ANR	3028529	PrimaryExpression	3		3028503	1					
ANR	3028530	PrimaryExpression	2		3028503	2					
ANR	3028531	IdentifierDeclStatement	int16_t * sample [ 3 ] ;	11:4:210:228	3028503	2	True				
ANR	3028532	IdentifierDecl	* sample [ 3 ]		3028503	0					
ANR	3028533	IdentifierDeclType	int16_t * [ 3 ]		3028503	0					
ANR	3028534	Identifier	sample		3028503	1					
ANR	3028535	PrimaryExpression	3		3028503	2					
ANR	3028536	ExpressionStatement	s -> run_index = 0	13:4:235:251	3028503	3	True				
ANR	3028537	AssignmentExpression	s -> run_index = 0		3028503	0		=			
ANR	3028538	PtrMemberAccess	s -> run_index		3028503	0					
ANR	3028539	Identifier	s		3028503	0					
ANR	3028540	Identifier	run_index		3028503	1					
ANR	3028541	PrimaryExpression	0		3028503	1					
ANR	3028542	ExpressionStatement	"memset ( s -> sample_buffer , 0 , ring_size * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"	17:4:260:336	3028503	4	True				
ANR	3028543	CallExpression	"memset ( s -> sample_buffer , 0 , ring_size * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"		3028503	0					
ANR	3028544	Callee	memset		3028503	0					
ANR	3028545	Identifier	memset		3028503	0					
ANR	3028546	ArgumentList	s -> sample_buffer		3028503	1					
ANR	3028547	Argument	s -> sample_buffer		3028503	0					
ANR	3028548	PtrMemberAccess	s -> sample_buffer		3028503	0					
ANR	3028549	Identifier	s		3028503	0					
ANR	3028550	Identifier	sample_buffer		3028503	1					
ANR	3028551	Argument	0		3028503	1					
ANR	3028552	PrimaryExpression	0		3028503	0					
ANR	3028553	Argument	ring_size * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3028503	2					
ANR	3028554	MultiplicativeExpression	ring_size * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3028503	0		*			
ANR	3028555	Identifier	ring_size		3028503	0					
ANR	3028556	MultiplicativeExpression	( w + 6 ) * sizeof ( * s -> sample_buffer )		3028503	1		*			
ANR	3028557	AdditiveExpression	w + 6		3028503	0		+			
ANR	3028558	Identifier	w		3028503	0					
ANR	3028559	PrimaryExpression	6		3028503	1					
ANR	3028560	SizeofExpression	sizeof ( * s -> sample_buffer )		3028503	1					
ANR	3028561	Sizeof	sizeof		3028503	0					
ANR	3028562	UnaryOperationExpression	* s -> sample_buffer		3028503	1					
ANR	3028563	UnaryOperator	*		3028503	0					
ANR	3028564	PtrMemberAccess	s -> sample_buffer		3028503	1					
ANR	3028565	Identifier	s		3028503	0					
ANR	3028566	Identifier	sample_buffer		3028503	1					
ANR	3028567	ForStatement	for ( y = 0 ; y < h ; y ++ )		3028503	5					
ANR	3028568	ForInit	y = 0 ;	21:9:350:355	3028503	0	True				
ANR	3028569	AssignmentExpression	y = 0		3028503	0		=			
ANR	3028570	Identifier	y		3028503	0					
ANR	3028571	PrimaryExpression	0		3028503	1					
ANR	3028572	Condition	y < h	21:16:357:361	3028503	1	True				
ANR	3028573	RelationalExpression	y < h		3028503	0		<			
ANR	3028574	Identifier	y		3028503	0					
ANR	3028575	Identifier	h		3028503	1					
ANR	3028576	PostIncDecOperationExpression	y ++	21:23:364:366	3028503	2	True				
ANR	3028577	Identifier	y		3028503	0					
ANR	3028578	IncDec	++		3028503	1					
ANR	3028579	CompoundStatement		17:28:243:243	3028503	3					
ANR	3028580	ForStatement	for ( i = 0 ; i < ring_size ; i ++ )		3028503	0					
ANR	3028581	ForInit	i = 0 ;	23:13:385:390	3028503	0	True				
ANR	3028582	AssignmentExpression	i = 0		3028503	0		=			
ANR	3028583	Identifier	i		3028503	0					
ANR	3028584	PrimaryExpression	0		3028503	1					
ANR	3028585	Condition	i < ring_size	23:20:392:404	3028503	1	True				
ANR	3028586	RelationalExpression	i < ring_size		3028503	0		<			
ANR	3028587	Identifier	i		3028503	0					
ANR	3028588	Identifier	ring_size		3028503	1					
ANR	3028589	PostIncDecOperationExpression	i ++	23:35:407:409	3028503	2	True				
ANR	3028590	Identifier	i		3028503	0					
ANR	3028591	IncDec	++		3028503	1					
ANR	3028592	ExpressionStatement	sample [ i ] = s -> sample_buffer + ( w + 6 ) * ( ( h + i - y ) % ring_size ) + 3	25:12:425:495	3028503	3	True				
ANR	3028593	AssignmentExpression	sample [ i ] = s -> sample_buffer + ( w + 6 ) * ( ( h + i - y ) % ring_size ) + 3		3028503	0		=			
ANR	3028594	ArrayIndexing	sample [ i ]		3028503	0					
ANR	3028595	Identifier	sample		3028503	0					
ANR	3028596	Identifier	i		3028503	1					
ANR	3028597	AdditiveExpression	s -> sample_buffer + ( w + 6 ) * ( ( h + i - y ) % ring_size ) + 3		3028503	1		+			
ANR	3028598	PtrMemberAccess	s -> sample_buffer		3028503	0					
ANR	3028599	Identifier	s		3028503	0					
ANR	3028600	Identifier	sample_buffer		3028503	1					
ANR	3028601	AdditiveExpression	( w + 6 ) * ( ( h + i - y ) % ring_size ) + 3		3028503	1		+			
ANR	3028602	MultiplicativeExpression	( w + 6 ) * ( ( h + i - y ) % ring_size )		3028503	0		*			
ANR	3028603	AdditiveExpression	w + 6		3028503	0		+			
ANR	3028604	Identifier	w		3028503	0					
ANR	3028605	PrimaryExpression	6		3028503	1					
ANR	3028606	MultiplicativeExpression	( h + i - y ) % ring_size		3028503	1		%			
ANR	3028607	AdditiveExpression	h + i - y		3028503	0		+			
ANR	3028608	Identifier	h		3028503	0					
ANR	3028609	AdditiveExpression	i - y		3028503	1		-			
ANR	3028610	Identifier	i		3028503	0					
ANR	3028611	Identifier	y		3028503	1					
ANR	3028612	Identifier	ring_size		3028503	1					
ANR	3028613	PrimaryExpression	3		3028503	1					
ANR	3028614	ExpressionStatement	sample [ 0 ] [ - 1 ] = sample [ 1 ] [ 0 ]	29:8:508:537	3028503	1	True				
ANR	3028615	AssignmentExpression	sample [ 0 ] [ - 1 ] = sample [ 1 ] [ 0 ]		3028503	0		=			
ANR	3028616	ArrayIndexing	sample [ 0 ] [ - 1 ]		3028503	0					
ANR	3028617	ArrayIndexing	sample [ 0 ]		3028503	0					
ANR	3028618	Identifier	sample		3028503	0					
ANR	3028619	PrimaryExpression	0		3028503	1					
ANR	3028620	UnaryOperationExpression	- 1		3028503	1					
ANR	3028621	UnaryOperator	-		3028503	0					
ANR	3028622	PrimaryExpression	1		3028503	1					
ANR	3028623	ArrayIndexing	sample [ 1 ] [ 0 ]		3028503	1					
ANR	3028624	ArrayIndexing	sample [ 1 ]		3028503	0					
ANR	3028625	Identifier	sample		3028503	0					
ANR	3028626	PrimaryExpression	1		3028503	1					
ANR	3028627	PrimaryExpression	0		3028503	1					
ANR	3028628	ExpressionStatement	sample [ 1 ] [ w ] = sample [ 1 ] [ w - 1 ]	31:8:548:577	3028503	2	True				
ANR	3028629	AssignmentExpression	sample [ 1 ] [ w ] = sample [ 1 ] [ w - 1 ]		3028503	0		=			
ANR	3028630	ArrayIndexing	sample [ 1 ] [ w ]		3028503	0					
ANR	3028631	ArrayIndexing	sample [ 1 ]		3028503	0					
ANR	3028632	Identifier	sample		3028503	0					
ANR	3028633	PrimaryExpression	1		3028503	1					
ANR	3028634	Identifier	w		3028503	1					
ANR	3028635	ArrayIndexing	sample [ 1 ] [ w - 1 ]		3028503	1					
ANR	3028636	ArrayIndexing	sample [ 1 ]		3028503	0					
ANR	3028637	Identifier	sample		3028503	0					
ANR	3028638	PrimaryExpression	1		3028503	1					
ANR	3028639	AdditiveExpression	w - 1		3028503	1		-			
ANR	3028640	Identifier	w		3028503	0					
ANR	3028641	PrimaryExpression	1		3028503	1					
ANR	3028642	IfStatement	if ( s -> bits_per_raw_sample <= 8 )		3028503	3					
ANR	3028643	Condition	s -> bits_per_raw_sample <= 8	35:12:610:636	3028503	0	True				
ANR	3028644	RelationalExpression	s -> bits_per_raw_sample <= 8		3028503	0		<=			
ANR	3028645	PtrMemberAccess	s -> bits_per_raw_sample		3028503	0					
ANR	3028646	Identifier	s		3028503	0					
ANR	3028647	Identifier	bits_per_raw_sample		3028503	1					
ANR	3028648	PrimaryExpression	8		3028503	1					
ANR	3028649	CompoundStatement		31:41:513:513	3028503	1					
ANR	3028650	ForStatement	for ( x = 0 ; x < w ; x ++ )		3028503	0					
ANR	3028651	ForInit	x = 0 ;	37:17:659:664	3028503	0	True				
ANR	3028652	AssignmentExpression	x = 0		3028503	0		=			
ANR	3028653	Identifier	x		3028503	0					
ANR	3028654	PrimaryExpression	0		3028503	1					
ANR	3028655	Condition	x < w	37:24:666:670	3028503	1	True				
ANR	3028656	RelationalExpression	x < w		3028503	0		<			
ANR	3028657	Identifier	x		3028503	0					
ANR	3028658	Identifier	w		3028503	1					
ANR	3028659	PostIncDecOperationExpression	x ++	37:31:673:675	3028503	2	True				
ANR	3028660	Identifier	x		3028503	0					
ANR	3028661	IncDec	++		3028503	1					
ANR	3028662	ExpressionStatement	sample [ 0 ] [ x ] = src [ x + stride * y ]	39:16:695:729	3028503	3	True				
ANR	3028663	AssignmentExpression	sample [ 0 ] [ x ] = src [ x + stride * y ]		3028503	0		=			
ANR	3028664	ArrayIndexing	sample [ 0 ] [ x ]		3028503	0					
ANR	3028665	ArrayIndexing	sample [ 0 ]		3028503	0					
ANR	3028666	Identifier	sample		3028503	0					
ANR	3028667	PrimaryExpression	0		3028503	1					
ANR	3028668	Identifier	x		3028503	1					
ANR	3028669	ArrayIndexing	src [ x + stride * y ]		3028503	1					
ANR	3028670	Identifier	src		3028503	0					
ANR	3028671	AdditiveExpression	x + stride * y		3028503	1		+			
ANR	3028672	Identifier	x		3028503	0					
ANR	3028673	MultiplicativeExpression	stride * y		3028503	1		*			
ANR	3028674	Identifier	stride		3028503	0					
ANR	3028675	Identifier	y		3028503	1					
ANR	3028676	ExpressionStatement	"encode_line ( s , w , sample , plane_index , 8 )"	41:12:744:785	3028503	1	True				
ANR	3028677	CallExpression	"encode_line ( s , w , sample , plane_index , 8 )"		3028503	0					
ANR	3028678	Callee	encode_line		3028503	0					
ANR	3028679	Identifier	encode_line		3028503	0					
ANR	3028680	ArgumentList	s		3028503	1					
ANR	3028681	Argument	s		3028503	0					
ANR	3028682	Identifier	s		3028503	0					
ANR	3028683	Argument	w		3028503	1					
ANR	3028684	Identifier	w		3028503	0					
ANR	3028685	Argument	sample		3028503	2					
ANR	3028686	Identifier	sample		3028503	0					
ANR	3028687	Argument	plane_index		3028503	3					
ANR	3028688	Identifier	plane_index		3028503	0					
ANR	3028689	Argument	8		3028503	4					
ANR	3028690	PrimaryExpression	8		3028503	0					
ANR	3028691	ElseStatement	else		3028503	0					
ANR	3028692	CompoundStatement		39:15:677:677	3028503	0					
ANR	3028693	IfStatement	if ( s -> packed_at_lsb )		3028503	0					
ANR	3028694	Condition	s -> packed_at_lsb	45:16:822:837	3028503	0	True				
ANR	3028695	PtrMemberAccess	s -> packed_at_lsb		3028503	0					
ANR	3028696	Identifier	s		3028503	0					
ANR	3028697	Identifier	packed_at_lsb		3028503	1					
ANR	3028698	CompoundStatement		41:34:714:714	3028503	1					
ANR	3028699	ForStatement	for ( x = 0 ; x < w ; x ++ )		3028503	0					
ANR	3028700	ForInit	x = 0 ;	47:21:864:869	3028503	0	True				
ANR	3028701	AssignmentExpression	x = 0		3028503	0		=			
ANR	3028702	Identifier	x		3028503	0					
ANR	3028703	PrimaryExpression	0		3028503	1					
ANR	3028704	Condition	x < w	47:28:871:875	3028503	1	True				
ANR	3028705	RelationalExpression	x < w		3028503	0		<			
ANR	3028706	Identifier	x		3028503	0					
ANR	3028707	Identifier	w		3028503	1					
ANR	3028708	PostIncDecOperationExpression	x ++	47:35:878:880	3028503	2	True				
ANR	3028709	Identifier	x		3028503	0					
ANR	3028710	IncDec	++		3028503	1					
ANR	3028711	CompoundStatement		43:40:757:757	3028503	3					
ANR	3028712	ExpressionStatement	sample [ 0 ] [ x ] = ( ( uint16_t * ) ( src + stride * y ) ) [ x ]	49:20:906:953	3028503	0	True				
ANR	3028713	AssignmentExpression	sample [ 0 ] [ x ] = ( ( uint16_t * ) ( src + stride * y ) ) [ x ]		3028503	0		=			
ANR	3028714	ArrayIndexing	sample [ 0 ] [ x ]		3028503	0					
ANR	3028715	ArrayIndexing	sample [ 0 ]		3028503	0					
ANR	3028716	Identifier	sample		3028503	0					
ANR	3028717	PrimaryExpression	0		3028503	1					
ANR	3028718	Identifier	x		3028503	1					
ANR	3028719	ArrayIndexing	( ( uint16_t * ) ( src + stride * y ) ) [ x ]		3028503	1					
ANR	3028720	CastExpression	( uint16_t * ) ( src + stride * y )		3028503	0					
ANR	3028721	CastTarget	uint16_t *		3028503	0					
ANR	3028722	AdditiveExpression	src + stride * y		3028503	1		+			
ANR	3028723	Identifier	src		3028503	0					
ANR	3028724	MultiplicativeExpression	stride * y		3028503	1		*			
ANR	3028725	Identifier	stride		3028503	0					
ANR	3028726	Identifier	y		3028503	1					
ANR	3028727	Identifier	x		3028503	1					
ANR	3028728	ElseStatement	else		3028503	0					
ANR	3028729	CompoundStatement		49:19:868:868	3028503	0					
ANR	3028730	ForStatement	for ( x = 0 ; x < w ; x ++ )		3028503	0					
ANR	3028731	ForInit	x = 0 ;	55:21:1018:1023	3028503	0	True				
ANR	3028732	AssignmentExpression	x = 0		3028503	0		=			
ANR	3028733	Identifier	x		3028503	0					
ANR	3028734	PrimaryExpression	0		3028503	1					
ANR	3028735	Condition	x < w	55:28:1025:1029	3028503	1	True				
ANR	3028736	RelationalExpression	x < w		3028503	0		<			
ANR	3028737	Identifier	x		3028503	0					
ANR	3028738	Identifier	w		3028503	1					
ANR	3028739	PostIncDecOperationExpression	x ++	55:35:1032:1034	3028503	2	True				
ANR	3028740	Identifier	x		3028503	0					
ANR	3028741	IncDec	++		3028503	1					
ANR	3028742	CompoundStatement		51:40:911:911	3028503	3					
ANR	3028743	ExpressionStatement	sample [ 0 ] [ x ] = ( ( uint16_t * ) ( src + stride * y ) ) [ x ] >> ( 16 - s -> bits_per_raw_sample )	57:20:1060:1140	3028503	0	True				
ANR	3028744	AssignmentExpression	sample [ 0 ] [ x ] = ( ( uint16_t * ) ( src + stride * y ) ) [ x ] >> ( 16 - s -> bits_per_raw_sample )		3028503	0		=			
ANR	3028745	ArrayIndexing	sample [ 0 ] [ x ]		3028503	0					
ANR	3028746	ArrayIndexing	sample [ 0 ]		3028503	0					
ANR	3028747	Identifier	sample		3028503	0					
ANR	3028748	PrimaryExpression	0		3028503	1					
ANR	3028749	Identifier	x		3028503	1					
ANR	3028750	ShiftExpression	( ( uint16_t * ) ( src + stride * y ) ) [ x ] >> ( 16 - s -> bits_per_raw_sample )		3028503	1		>>			
ANR	3028751	ArrayIndexing	( ( uint16_t * ) ( src + stride * y ) ) [ x ]		3028503	0					
ANR	3028752	CastExpression	( uint16_t * ) ( src + stride * y )		3028503	0					
ANR	3028753	CastTarget	uint16_t *		3028503	0					
ANR	3028754	AdditiveExpression	src + stride * y		3028503	1		+			
ANR	3028755	Identifier	src		3028503	0					
ANR	3028756	MultiplicativeExpression	stride * y		3028503	1		*			
ANR	3028757	Identifier	stride		3028503	0					
ANR	3028758	Identifier	y		3028503	1					
ANR	3028759	Identifier	x		3028503	1					
ANR	3028760	AdditiveExpression	16 - s -> bits_per_raw_sample		3028503	1		-			
ANR	3028761	PrimaryExpression	16		3028503	0					
ANR	3028762	PtrMemberAccess	s -> bits_per_raw_sample		3028503	1					
ANR	3028763	Identifier	s		3028503	0					
ANR	3028764	Identifier	bits_per_raw_sample		3028503	1					
ANR	3028765	ExpressionStatement	"encode_line ( s , w , sample , plane_index , s -> bits_per_raw_sample )"	63:12:1189:1251	3028503	1	True				
ANR	3028766	CallExpression	"encode_line ( s , w , sample , plane_index , s -> bits_per_raw_sample )"		3028503	0					
ANR	3028767	Callee	encode_line		3028503	0					
ANR	3028768	Identifier	encode_line		3028503	0					
ANR	3028769	ArgumentList	s		3028503	1					
ANR	3028770	Argument	s		3028503	0					
ANR	3028771	Identifier	s		3028503	0					
ANR	3028772	Argument	w		3028503	1					
ANR	3028773	Identifier	w		3028503	0					
ANR	3028774	Argument	sample		3028503	2					
ANR	3028775	Identifier	sample		3028503	0					
ANR	3028776	Argument	plane_index		3028503	3					
ANR	3028777	Identifier	plane_index		3028503	0					
ANR	3028778	Argument	s -> bits_per_raw_sample		3028503	4					
ANR	3028779	PtrMemberAccess	s -> bits_per_raw_sample		3028503	0					
ANR	3028780	Identifier	s		3028503	0					
ANR	3028781	Identifier	bits_per_raw_sample		3028503	1					
ANR	3028782	ReturnType	static void		3028503	1					
ANR	3028783	Identifier	encode_plane		3028503	2					
ANR	3028784	ParameterList	"FFV1Context * s , uint8_t * src , int w , int h , int stride , int plane_index"		3028503	3					
ANR	3028785	Parameter	FFV1Context * s	1:25:25:38	3028503	0	True				
ANR	3028786	ParameterType	FFV1Context *		3028503	0					
ANR	3028787	Identifier	s		3028503	1					
ANR	3028788	Parameter	uint8_t * src	1:41:41:52	3028503	1	True				
ANR	3028789	ParameterType	uint8_t *		3028503	0					
ANR	3028790	Identifier	src		3028503	1					
ANR	3028791	Parameter	int w	1:55:55:59	3028503	2	True				
ANR	3028792	ParameterType	int		3028503	0					
ANR	3028793	Identifier	w		3028503	1					
ANR	3028794	Parameter	int h	1:62:62:66	3028503	3	True				
ANR	3028795	ParameterType	int		3028503	0					
ANR	3028796	Identifier	h		3028503	1					
ANR	3028797	Parameter	int stride	3:25:95:104	3028503	4	True				
ANR	3028798	ParameterType	int		3028503	0					
ANR	3028799	Identifier	stride		3028503	1					
ANR	3028800	Parameter	int plane_index	3:37:107:121	3028503	5	True				
ANR	3028801	ParameterType	int		3028503	0					
ANR	3028802	Identifier	plane_index		3028503	1					
ANR	3028803	CFGEntryNode	ENTRY		3028503		True				
ANR	3028804	CFGExitNode	EXIT		3028503		True				
ANR	3028805	Symbol	* w		3028503						
ANR	3028806	Symbol	* stride		3028503						
ANR	3028807	Symbol	* x		3028503						
ANR	3028808	Symbol	* y		3028503						
ANR	3028809	Symbol	* s -> sample_buffer		3028503						
ANR	3028810	Symbol	ring_size		3028503						
ANR	3028811	Symbol	plane_index		3028503						
ANR	3028812	Symbol	s -> run_index		3028503						
ANR	3028813	Symbol	stride		3028503						
ANR	3028814	Symbol	* * sample		3028503						
ANR	3028815	Symbol	* src		3028503						
ANR	3028816	Symbol	* * s		3028503						
ANR	3028817	Symbol	s -> bits_per_raw_sample		3028503						
ANR	3028818	Symbol	s -> sample_buffer		3028503						
ANR	3028819	Symbol	* sample		3028503						
ANR	3028820	Symbol	* s -> avctx		3028503						
ANR	3028821	Symbol	src		3028503						
ANR	3028822	Symbol	h		3028503						
ANR	3028823	Symbol	i		3028503						
ANR	3028824	Symbol	sample		3028503						
ANR	3028825	Symbol	s -> avctx -> context_model		3028503						
ANR	3028826	Symbol	s -> packed_at_lsb		3028503						
ANR	3028827	Symbol	s		3028503						
ANR	3028828	Symbol	* i		3028503						
ANR	3028829	Symbol	w		3028503						
ANR	3028830	Symbol	x		3028503						
ANR	3028831	Symbol	y		3028503						
ANR	3028832	Symbol	s -> avctx		3028503						
ANR	3028833	Symbol	* s		3028503						
