command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	411285	File	/home/p4ultr4n/workplace/ReVeal/raw_code/adpcm_decode_frame_0.c								
ANR	411286	Function	adpcm_decode_frame	1:0:0:28357							
ANR	411287	FunctionDef	"adpcm_decode_frame (AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size)"		411286	0					
ANR	411288	CompoundStatement		7:0:174:28357	411286	0					
ANR	411289	IdentifierDeclStatement	ADPCMContext * c = avctx -> priv_data ;	9:4:181:215	411286	0	True				
ANR	411290	IdentifierDecl	* c = avctx -> priv_data		411286	0					
ANR	411291	IdentifierDeclType	ADPCMContext *		411286	0					
ANR	411292	Identifier	c		411286	1					
ANR	411293	AssignmentExpression	* c = avctx -> priv_data		411286	2		=			
ANR	411294	Identifier	c		411286	0					
ANR	411295	PtrMemberAccess	avctx -> priv_data		411286	1					
ANR	411296	Identifier	avctx		411286	0					
ANR	411297	Identifier	priv_data		411286	1					
ANR	411298	IdentifierDeclStatement	ADPCMChannelStatus * cs ;	11:4:222:244	411286	1	True				
ANR	411299	IdentifierDecl	* cs		411286	0					
ANR	411300	IdentifierDeclType	ADPCMChannelStatus *		411286	0					
ANR	411301	Identifier	cs		411286	1					
ANR	411302	IdentifierDeclStatement	"int n , m , channel , i ;"	13:4:251:271	411286	2	True				
ANR	411303	IdentifierDecl	n		411286	0					
ANR	411304	IdentifierDeclType	int		411286	0					
ANR	411305	Identifier	n		411286	1					
ANR	411306	IdentifierDecl	m		411286	1					
ANR	411307	IdentifierDeclType	int		411286	0					
ANR	411308	Identifier	m		411286	1					
ANR	411309	IdentifierDecl	channel		411286	2					
ANR	411310	IdentifierDeclType	int		411286	0					
ANR	411311	Identifier	channel		411286	1					
ANR	411312	IdentifierDecl	i		411286	3					
ANR	411313	IdentifierDeclType	int		411286	0					
ANR	411314	Identifier	i		411286	1					
ANR	411315	IdentifierDeclStatement	int block_predictor [ 2 ] ;	15:4:278:300	411286	3	True				
ANR	411316	IdentifierDecl	block_predictor [ 2 ]		411286	0					
ANR	411317	IdentifierDeclType	int [ 2 ]		411286	0					
ANR	411318	Identifier	block_predictor		411286	1					
ANR	411319	PrimaryExpression	2		411286	2					
ANR	411320	IdentifierDeclStatement	short * samples ;	17:4:307:321	411286	4	True				
ANR	411321	IdentifierDecl	* samples		411286	0					
ANR	411322	IdentifierDeclType	short *		411286	0					
ANR	411323	Identifier	samples		411286	1					
ANR	411324	IdentifierDeclStatement	short * samples_end ;	19:4:328:346	411286	5	True				
ANR	411325	IdentifierDecl	* samples_end		411286	0					
ANR	411326	IdentifierDeclType	short *		411286	0					
ANR	411327	Identifier	samples_end		411286	1					
ANR	411328	IdentifierDeclStatement	const uint8_t * src ;	21:4:353:371	411286	6	True				
ANR	411329	IdentifierDecl	* src		411286	0					
ANR	411330	IdentifierDeclType	const uint8_t *		411286	0					
ANR	411331	Identifier	src		411286	1					
ANR	411332	IdentifierDeclStatement	int st ;	23:4:378:384	411286	7	True				
ANR	411333	IdentifierDecl	st		411286	0					
ANR	411334	IdentifierDeclType	int		411286	0					
ANR	411335	Identifier	st		411286	1					
ANR	411336	IdentifierDeclStatement	unsigned char last_byte = 0 ;	29:4:448:475	411286	8	True				
ANR	411337	IdentifierDecl	last_byte = 0		411286	0					
ANR	411338	IdentifierDeclType	unsigned char		411286	0					
ANR	411339	Identifier	last_byte		411286	1					
ANR	411340	AssignmentExpression	last_byte = 0		411286	2		=			
ANR	411341	Identifier	last_byte		411286	0					
ANR	411342	PrimaryExpression	0		411286	1					
ANR	411343	IdentifierDeclStatement	unsigned char nibble ;	31:4:482:502	411286	9	True				
ANR	411344	IdentifierDecl	nibble		411286	0					
ANR	411345	IdentifierDeclType	unsigned char		411286	0					
ANR	411346	Identifier	nibble		411286	1					
ANR	411347	IdentifierDeclStatement	int decode_top_nibble_next = 0 ;	33:4:509:539	411286	10	True				
ANR	411348	IdentifierDecl	decode_top_nibble_next = 0		411286	0					
ANR	411349	IdentifierDeclType	int		411286	0					
ANR	411350	Identifier	decode_top_nibble_next		411286	1					
ANR	411351	AssignmentExpression	decode_top_nibble_next = 0		411286	2		=			
ANR	411352	Identifier	decode_top_nibble_next		411286	0					
ANR	411353	PrimaryExpression	0		411286	1					
ANR	411354	IdentifierDeclStatement	int diff_channel ;	35:4:546:562	411286	11	True				
ANR	411355	IdentifierDecl	diff_channel		411286	0					
ANR	411356	IdentifierDeclType	int		411286	0					
ANR	411357	Identifier	diff_channel		411286	1					
ANR	411358	IdentifierDeclStatement	uint32_t samples_in_chunk ;	41:4:607:632	411286	12	True				
ANR	411359	IdentifierDecl	samples_in_chunk		411286	0					
ANR	411360	IdentifierDeclType	uint32_t		411286	0					
ANR	411361	Identifier	samples_in_chunk		411286	1					
ANR	411362	IdentifierDeclStatement	"int32_t previous_left_sample , previous_right_sample ;"	43:4:639:690	411286	13	True				
ANR	411363	IdentifierDecl	previous_left_sample		411286	0					
ANR	411364	IdentifierDeclType	int32_t		411286	0					
ANR	411365	Identifier	previous_left_sample		411286	1					
ANR	411366	IdentifierDecl	previous_right_sample		411286	1					
ANR	411367	IdentifierDeclType	int32_t		411286	0					
ANR	411368	Identifier	previous_right_sample		411286	1					
ANR	411369	IdentifierDeclStatement	"int32_t current_left_sample , current_right_sample ;"	45:4:697:746	411286	14	True				
ANR	411370	IdentifierDecl	current_left_sample		411286	0					
ANR	411371	IdentifierDeclType	int32_t		411286	0					
ANR	411372	Identifier	current_left_sample		411286	1					
ANR	411373	IdentifierDecl	current_right_sample		411286	1					
ANR	411374	IdentifierDeclType	int32_t		411286	0					
ANR	411375	Identifier	current_right_sample		411286	1					
ANR	411376	IdentifierDeclStatement	"int32_t next_left_sample , next_right_sample ;"	47:4:753:796	411286	15	True				
ANR	411377	IdentifierDecl	next_left_sample		411286	0					
ANR	411378	IdentifierDeclType	int32_t		411286	0					
ANR	411379	Identifier	next_left_sample		411286	1					
ANR	411380	IdentifierDecl	next_right_sample		411286	1					
ANR	411381	IdentifierDeclType	int32_t		411286	0					
ANR	411382	Identifier	next_right_sample		411286	1					
ANR	411383	IdentifierDeclStatement	"int32_t coeff1l , coeff2l , coeff1r , coeff2r ;"	49:4:803:845	411286	16	True				
ANR	411384	IdentifierDecl	coeff1l		411286	0					
ANR	411385	IdentifierDeclType	int32_t		411286	0					
ANR	411386	Identifier	coeff1l		411286	1					
ANR	411387	IdentifierDecl	coeff2l		411286	1					
ANR	411388	IdentifierDeclType	int32_t		411286	0					
ANR	411389	Identifier	coeff2l		411286	1					
ANR	411390	IdentifierDecl	coeff1r		411286	2					
ANR	411391	IdentifierDeclType	int32_t		411286	0					
ANR	411392	Identifier	coeff1r		411286	1					
ANR	411393	IdentifierDecl	coeff2r		411286	3					
ANR	411394	IdentifierDeclType	int32_t		411286	0					
ANR	411395	Identifier	coeff2r		411286	1					
ANR	411396	IdentifierDeclStatement	"uint8_t shift_left , shift_right ;"	51:4:852:883	411286	17	True				
ANR	411397	IdentifierDecl	shift_left		411286	0					
ANR	411398	IdentifierDeclType	uint8_t		411286	0					
ANR	411399	Identifier	shift_left		411286	1					
ANR	411400	IdentifierDecl	shift_right		411286	1					
ANR	411401	IdentifierDeclType	uint8_t		411286	0					
ANR	411402	Identifier	shift_right		411286	1					
ANR	411403	IdentifierDeclStatement	"int count1 , count2 ;"	53:4:890:908	411286	18	True				
ANR	411404	IdentifierDecl	count1		411286	0					
ANR	411405	IdentifierDeclType	int		411286	0					
ANR	411406	Identifier	count1		411286	1					
ANR	411407	IdentifierDecl	count2		411286	1					
ANR	411408	IdentifierDeclType	int		411286	0					
ANR	411409	Identifier	count2		411286	1					
ANR	411410	Statement	int	55:4:915:917	411286	19	True				
ANR	411411	ExpressionStatement	"coeff [ 2 ] [ 2 ] , shift [ 2 ]"	55:8:919:940	411286	20	True				
ANR	411412	Expression	"coeff [ 2 ] [ 2 ] , shift [ 2 ]"		411286	0					
ANR	411413	ArrayIndexing	coeff [ 2 ] [ 2 ]		411286	0					
ANR	411414	ArrayIndexing	coeff [ 2 ]		411286	0					
ANR	411415	Identifier	coeff		411286	0					
ANR	411416	PrimaryExpression	2		411286	1					
ANR	411417	PrimaryExpression	2		411286	1					
ANR	411418	ArrayIndexing	shift [ 2 ]		411286	1					
ANR	411419	Identifier	shift		411286	0					
ANR	411420	PrimaryExpression	2		411286	1					
ANR	411421	IfStatement	if ( ! buf_size )		411286	21					
ANR	411422	Condition	! buf_size	59:8:977:985	411286	0	True				
ANR	411423	UnaryOperationExpression	! buf_size		411286	0					
ANR	411424	UnaryOperator	!		411286	0					
ANR	411425	Identifier	buf_size		411286	1					
ANR	411426	ReturnStatement	return 0 ;	61:8:997:1005	411286	1	True				
ANR	411427	PrimaryExpression	0		411286	0					
ANR	411428	IfStatement	if ( * data_size / 4 < buf_size + 8 )		411286	22					
ANR	411429	Condition	* data_size / 4 < buf_size + 8	71:7:1133:1159	411286	0	True				
ANR	411430	RelationalExpression	* data_size / 4 < buf_size + 8		411286	0		<			
ANR	411431	MultiplicativeExpression	* data_size / 4		411286	0		/			
ANR	411432	UnaryOperationExpression	* data_size		411286	0					
ANR	411433	UnaryOperator	*		411286	0					
ANR	411434	Identifier	data_size		411286	1					
ANR	411435	PrimaryExpression	4		411286	1					
ANR	411436	AdditiveExpression	buf_size + 8		411286	1		+			
ANR	411437	Identifier	buf_size		411286	0					
ANR	411438	PrimaryExpression	8		411286	1					
ANR	411439	ReturnStatement	return - 1 ;	73:8:1171:1180	411286	1	True				
ANR	411440	UnaryOperationExpression	- 1		411286	0					
ANR	411441	UnaryOperator	-		411286	0					
ANR	411442	PrimaryExpression	1		411286	1					
ANR	411443	ExpressionStatement	samples = data	77:4:1189:1203	411286	23	True				
ANR	411444	AssignmentExpression	samples = data		411286	0		=			
ANR	411445	Identifier	samples		411286	0					
ANR	411446	Identifier	data		411286	1					
ANR	411447	ExpressionStatement	samples_end = samples + * data_size / 2	79:4:1210:1245	411286	24	True				
ANR	411448	AssignmentExpression	samples_end = samples + * data_size / 2		411286	0		=			
ANR	411449	Identifier	samples_end		411286	0					
ANR	411450	AdditiveExpression	samples + * data_size / 2		411286	1		+			
ANR	411451	Identifier	samples		411286	0					
ANR	411452	MultiplicativeExpression	* data_size / 2		411286	1		/			
ANR	411453	UnaryOperationExpression	* data_size		411286	0					
ANR	411454	UnaryOperator	*		411286	0					
ANR	411455	Identifier	data_size		411286	1					
ANR	411456	PrimaryExpression	2		411286	1					
ANR	411457	ExpressionStatement	* data_size = 0	81:4:1252:1265	411286	25	True				
ANR	411458	AssignmentExpression	* data_size = 0		411286	0		=			
ANR	411459	UnaryOperationExpression	* data_size		411286	0					
ANR	411460	UnaryOperator	*		411286	0					
ANR	411461	Identifier	data_size		411286	1					
ANR	411462	PrimaryExpression	0		411286	1					
ANR	411463	ExpressionStatement	src = buf	83:4:1272:1281	411286	26	True				
ANR	411464	AssignmentExpression	src = buf		411286	0		=			
ANR	411465	Identifier	src		411286	0					
ANR	411466	Identifier	buf		411286	1					
ANR	411467	ExpressionStatement	st = avctx -> channels == 2 ? 1 : 0	87:4:1290:1323	411286	27	True				
ANR	411468	AssignmentExpression	st = avctx -> channels == 2 ? 1 : 0		411286	0		=			
ANR	411469	Identifier	st		411286	0					
ANR	411470	ConditionalExpression	avctx -> channels == 2 ? 1 : 0		411286	1					
ANR	411471	Condition	avctx -> channels == 2		411286	0					
ANR	411472	EqualityExpression	avctx -> channels == 2		411286	0		==			
ANR	411473	PtrMemberAccess	avctx -> channels		411286	0					
ANR	411474	Identifier	avctx		411286	0					
ANR	411475	Identifier	channels		411286	1					
ANR	411476	PrimaryExpression	2		411286	1					
ANR	411477	PrimaryExpression	1		411286	1					
ANR	411478	PrimaryExpression	0		411286	2					
ANR	411479	SwitchStatement	switch ( avctx -> codec -> id )		411286	28					
ANR	411480	Condition	avctx -> codec -> id	91:11:1339:1354	411286	0	True				
ANR	411481	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	411482	PtrMemberAccess	avctx -> codec		411286	0					
ANR	411483	Identifier	avctx		411286	0					
ANR	411484	Identifier	codec		411286	1					
ANR	411485	Identifier	id		411286	1					
ANR	411486	CompoundStatement		85:29:1182:1182	411286	1					
ANR	411487	Label	case CODEC_ID_ADPCM_IMA_QT :	93:4:1364:1390	411286	0	True				
ANR	411488	Identifier	CODEC_ID_ADPCM_IMA_QT		411286	0					
ANR	411489	ExpressionStatement	n = ( buf_size - 2 )	95:8:1401:1419	411286	1	True				
ANR	411490	AssignmentExpression	n = ( buf_size - 2 )		411286	0		=			
ANR	411491	Identifier	n		411286	0					
ANR	411492	AdditiveExpression	buf_size - 2		411286	1		-			
ANR	411493	Identifier	buf_size		411286	0					
ANR	411494	PrimaryExpression	2		411286	1					
ANR	411495	ExpressionStatement	channel = c -> channel	97:8:1456:1476	411286	2	True				
ANR	411496	AssignmentExpression	channel = c -> channel		411286	0		=			
ANR	411497	Identifier	channel		411286	0					
ANR	411498	PtrMemberAccess	c -> channel		411286	1					
ANR	411499	Identifier	c		411286	0					
ANR	411500	Identifier	channel		411286	1					
ANR	411501	ExpressionStatement	cs = & ( c -> status [ channel ] )	99:8:1487:1513	411286	3	True				
ANR	411502	AssignmentExpression	cs = & ( c -> status [ channel ] )		411286	0		=			
ANR	411503	Identifier	cs		411286	0					
ANR	411504	UnaryOperationExpression	& ( c -> status [ channel ] )		411286	1					
ANR	411505	UnaryOperator	&		411286	0					
ANR	411506	ArrayIndexing	c -> status [ channel ]		411286	1					
ANR	411507	PtrMemberAccess	c -> status		411286	0					
ANR	411508	Identifier	c		411286	0					
ANR	411509	Identifier	status		411286	1					
ANR	411510	Identifier	channel		411286	1					
ANR	411511	ExpressionStatement	cs -> predictor = ( * src ++ ) << 8	107:8:1645:1674	411286	4	True				
ANR	411512	AssignmentExpression	cs -> predictor = ( * src ++ ) << 8		411286	0		=			
ANR	411513	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411514	Identifier	cs		411286	0					
ANR	411515	Identifier	predictor		411286	1					
ANR	411516	ShiftExpression	( * src ++ ) << 8		411286	1		<<			
ANR	411517	UnaryOperationExpression	* src ++		411286	0					
ANR	411518	UnaryOperator	*		411286	0					
ANR	411519	PostIncDecOperationExpression	src ++		411286	1					
ANR	411520	Identifier	src		411286	0					
ANR	411521	IncDec	++		411286	1					
ANR	411522	PrimaryExpression	8		411286	1					
ANR	411523	ExpressionStatement	cs -> predictor |= ( * src & 0x80 )	109:8:1685:1715	411286	5	True				
ANR	411524	AssignmentExpression	cs -> predictor |= ( * src & 0x80 )		411286	0		|=			
ANR	411525	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411526	Identifier	cs		411286	0					
ANR	411527	Identifier	predictor		411286	1					
ANR	411528	BitAndExpression	* src & 0x80		411286	1		&			
ANR	411529	UnaryOperationExpression	* src		411286	0					
ANR	411530	UnaryOperator	*		411286	0					
ANR	411531	Identifier	src		411286	1					
ANR	411532	PrimaryExpression	0x80		411286	1					
ANR	411533	ExpressionStatement	cs -> predictor &= 0xFF80	111:8:1726:1749	411286	6	True				
ANR	411534	AssignmentExpression	cs -> predictor &= 0xFF80		411286	0		&=			
ANR	411535	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411536	Identifier	cs		411286	0					
ANR	411537	Identifier	predictor		411286	1					
ANR	411538	PrimaryExpression	0xFF80		411286	1					
ANR	411539	IfStatement	if ( cs -> predictor & 0x8000 )		411286	7					
ANR	411540	Condition	cs -> predictor & 0x8000	117:11:1795:1816	411286	0	True				
ANR	411541	BitAndExpression	cs -> predictor & 0x8000		411286	0		&			
ANR	411542	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411543	Identifier	cs		411286	0					
ANR	411544	Identifier	predictor		411286	1					
ANR	411545	PrimaryExpression	0x8000		411286	1					
ANR	411546	ExpressionStatement	cs -> predictor -= 0x10000	119:12:1832:1856	411286	1	True				
ANR	411547	AssignmentExpression	cs -> predictor -= 0x10000		411286	0		-=			
ANR	411548	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411549	Identifier	cs		411286	0					
ANR	411550	Identifier	predictor		411286	1					
ANR	411551	PrimaryExpression	0x10000		411286	1					
ANR	411552	ExpressionStatement	cs -> predictor = av_clip_int16 ( cs -> predictor )	123:8:1869:1913	411286	8	True				
ANR	411553	AssignmentExpression	cs -> predictor = av_clip_int16 ( cs -> predictor )		411286	0		=			
ANR	411554	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411555	Identifier	cs		411286	0					
ANR	411556	Identifier	predictor		411286	1					
ANR	411557	CallExpression	av_clip_int16 ( cs -> predictor )		411286	1					
ANR	411558	Callee	av_clip_int16		411286	0					
ANR	411559	Identifier	av_clip_int16		411286	0					
ANR	411560	ArgumentList	cs -> predictor		411286	1					
ANR	411561	Argument	cs -> predictor		411286	0					
ANR	411562	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411563	Identifier	cs		411286	0					
ANR	411564	Identifier	predictor		411286	1					
ANR	411565	ExpressionStatement	cs -> step_index = ( * src ++ ) & 0x7F	127:8:1926:1958	411286	9	True				
ANR	411566	AssignmentExpression	cs -> step_index = ( * src ++ ) & 0x7F		411286	0		=			
ANR	411567	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411568	Identifier	cs		411286	0					
ANR	411569	Identifier	step_index		411286	1					
ANR	411570	BitAndExpression	( * src ++ ) & 0x7F		411286	1		&			
ANR	411571	UnaryOperationExpression	* src ++		411286	0					
ANR	411572	UnaryOperator	*		411286	0					
ANR	411573	PostIncDecOperationExpression	src ++		411286	1					
ANR	411574	Identifier	src		411286	0					
ANR	411575	IncDec	++		411286	1					
ANR	411576	PrimaryExpression	0x7F		411286	1					
ANR	411577	IfStatement	if ( cs -> step_index > 88 )		411286	10					
ANR	411578	Condition	cs -> step_index > 88	131:12:1975:1993	411286	0	True				
ANR	411579	RelationalExpression	cs -> step_index > 88		411286	0		>			
ANR	411580	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411581	Identifier	cs		411286	0					
ANR	411582	Identifier	step_index		411286	1					
ANR	411583	PrimaryExpression	88		411286	1					
ANR	411584	CompoundStatement		125:32:1820:1820	411286	1					
ANR	411585	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""ERROR: step_index = %i\\n"" , cs -> step_index )"	133:12:2010:2081	411286	0	True				
ANR	411586	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""ERROR: step_index = %i\\n"" , cs -> step_index )"		411286	0					
ANR	411587	Callee	av_log		411286	0					
ANR	411588	Identifier	av_log		411286	0					
ANR	411589	ArgumentList	avctx		411286	1					
ANR	411590	Argument	avctx		411286	0					
ANR	411591	Identifier	avctx		411286	0					
ANR	411592	Argument	AV_LOG_ERROR		411286	1					
ANR	411593	Identifier	AV_LOG_ERROR		411286	0					
ANR	411594	Argument	"""ERROR: step_index = %i\\n"""		411286	2					
ANR	411595	PrimaryExpression	"""ERROR: step_index = %i\\n"""		411286	0					
ANR	411596	Argument	cs -> step_index		411286	3					
ANR	411597	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411598	Identifier	cs		411286	0					
ANR	411599	Identifier	step_index		411286	1					
ANR	411600	ExpressionStatement	cs -> step_index = 88	135:12:2096:2115	411286	1	True				
ANR	411601	AssignmentExpression	cs -> step_index = 88		411286	0		=			
ANR	411602	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411603	Identifier	cs		411286	0					
ANR	411604	Identifier	step_index		411286	1					
ANR	411605	PrimaryExpression	88		411286	1					
ANR	411606	ExpressionStatement	cs -> step = step_table [ cs -> step_index ]	141:8:2139:2176	411286	11	True				
ANR	411607	AssignmentExpression	cs -> step = step_table [ cs -> step_index ]		411286	0		=			
ANR	411608	PtrMemberAccess	cs -> step		411286	0					
ANR	411609	Identifier	cs		411286	0					
ANR	411610	Identifier	step		411286	1					
ANR	411611	ArrayIndexing	step_table [ cs -> step_index ]		411286	1					
ANR	411612	Identifier	step_table		411286	0					
ANR	411613	PtrMemberAccess	cs -> step_index		411286	1					
ANR	411614	Identifier	cs		411286	0					
ANR	411615	Identifier	step_index		411286	1					
ANR	411616	IfStatement	if ( st && channel )		411286	12					
ANR	411617	Condition	st && channel	145:12:2193:2205	411286	0	True				
ANR	411618	AndExpression	st && channel		411286	0		&&			
ANR	411619	Identifier	st		411286	0					
ANR	411620	Identifier	channel		411286	1					
ANR	411621	ExpressionStatement	samples ++	147:12:2221:2230	411286	1	True				
ANR	411622	PostIncDecOperationExpression	samples ++		411286	0					
ANR	411623	Identifier	samples		411286	0					
ANR	411624	IncDec	++		411286	1					
ANR	411625	ForStatement	"for ( m = 32 ; n > 0 && m > 0 ; n -- , m -- )"		411286	13					
ANR	411626	ForInit	m = 32 ;	151:12:2247:2251	411286	0	True				
ANR	411627	AssignmentExpression	m = 32		411286	0		=			
ANR	411628	Identifier	m		411286	0					
ANR	411629	PrimaryExpression	32		411286	1					
ANR	411630	Condition	n > 0 && m > 0	151:18:2253:2262	411286	1	True				
ANR	411631	AndExpression	n > 0 && m > 0		411286	0		&&			
ANR	411632	RelationalExpression	n > 0		411286	0		>			
ANR	411633	Identifier	n		411286	0					
ANR	411634	PrimaryExpression	0		411286	1					
ANR	411635	RelationalExpression	m > 0		411286	1		>			
ANR	411636	Identifier	m		411286	0					
ANR	411637	PrimaryExpression	0		411286	1					
ANR	411638	Expression	"n -- , m --"	151:30:2265:2272	411286	2	True				
ANR	411639	PostIncDecOperationExpression	n --		411286	0					
ANR	411640	Identifier	n		411286	0					
ANR	411641	IncDec	--		411286	1					
ANR	411642	PostIncDecOperationExpression	m --		411286	1					
ANR	411643	Identifier	m		411286	0					
ANR	411644	IncDec	--		411286	1					
ANR	411645	CompoundStatement		145:40:2100:2100	411286	3					
ANR	411646	ExpressionStatement	"* samples = adpcm_ima_expand_nibble ( cs , src [ 0 ] & 0x0F , 3 )"	153:12:2362:2418	411286	0	True				
ANR	411647	AssignmentExpression	"* samples = adpcm_ima_expand_nibble ( cs , src [ 0 ] & 0x0F , 3 )"		411286	0		=			
ANR	411648	UnaryOperationExpression	* samples		411286	0					
ANR	411649	UnaryOperator	*		411286	0					
ANR	411650	Identifier	samples		411286	1					
ANR	411651	CallExpression	"adpcm_ima_expand_nibble ( cs , src [ 0 ] & 0x0F , 3 )"		411286	1					
ANR	411652	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	411653	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	411654	ArgumentList	cs		411286	1					
ANR	411655	Argument	cs		411286	0					
ANR	411656	Identifier	cs		411286	0					
ANR	411657	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	411658	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	411659	ArrayIndexing	src [ 0 ]		411286	0					
ANR	411660	Identifier	src		411286	0					
ANR	411661	PrimaryExpression	0		411286	1					
ANR	411662	PrimaryExpression	0x0F		411286	1					
ANR	411663	Argument	3		411286	2					
ANR	411664	PrimaryExpression	3		411286	0					
ANR	411665	ExpressionStatement	samples += avctx -> channels	155:12:2433:2459	411286	1	True				
ANR	411666	AssignmentExpression	samples += avctx -> channels		411286	0		+=			
ANR	411667	Identifier	samples		411286	0					
ANR	411668	PtrMemberAccess	avctx -> channels		411286	1					
ANR	411669	Identifier	avctx		411286	0					
ANR	411670	Identifier	channels		411286	1					
ANR	411671	ExpressionStatement	"* samples = adpcm_ima_expand_nibble ( cs , src [ 0 ] >> 4 , 3 )"	157:12:2474:2530	411286	2	True				
ANR	411672	AssignmentExpression	"* samples = adpcm_ima_expand_nibble ( cs , src [ 0 ] >> 4 , 3 )"		411286	0		=			
ANR	411673	UnaryOperationExpression	* samples		411286	0					
ANR	411674	UnaryOperator	*		411286	0					
ANR	411675	Identifier	samples		411286	1					
ANR	411676	CallExpression	"adpcm_ima_expand_nibble ( cs , src [ 0 ] >> 4 , 3 )"		411286	1					
ANR	411677	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	411678	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	411679	ArgumentList	cs		411286	1					
ANR	411680	Argument	cs		411286	0					
ANR	411681	Identifier	cs		411286	0					
ANR	411682	Argument	src [ 0 ] >> 4		411286	1					
ANR	411683	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	411684	ArrayIndexing	src [ 0 ]		411286	0					
ANR	411685	Identifier	src		411286	0					
ANR	411686	PrimaryExpression	0		411286	1					
ANR	411687	PrimaryExpression	4		411286	1					
ANR	411688	Argument	3		411286	2					
ANR	411689	PrimaryExpression	3		411286	0					
ANR	411690	ExpressionStatement	samples += avctx -> channels	159:12:2545:2571	411286	3	True				
ANR	411691	AssignmentExpression	samples += avctx -> channels		411286	0		+=			
ANR	411692	Identifier	samples		411286	0					
ANR	411693	PtrMemberAccess	avctx -> channels		411286	1					
ANR	411694	Identifier	avctx		411286	0					
ANR	411695	Identifier	channels		411286	1					
ANR	411696	ExpressionStatement	src ++	161:12:2586:2592	411286	4	True				
ANR	411697	PostIncDecOperationExpression	src ++		411286	0					
ANR	411698	Identifier	src		411286	0					
ANR	411699	IncDec	++		411286	1					
ANR	411700	IfStatement	if ( st )		411286	14					
ANR	411701	Condition	st	167:11:2619:2620	411286	0	True				
ANR	411702	Identifier	st		411286	0					
ANR	411703	CompoundStatement		161:15:2448:2448	411286	1					
ANR	411704	ExpressionStatement	c -> channel = ( channel + 1 ) % 2	169:12:2670:2700	411286	0	True				
ANR	411705	AssignmentExpression	c -> channel = ( channel + 1 ) % 2		411286	0		=			
ANR	411706	PtrMemberAccess	c -> channel		411286	0					
ANR	411707	Identifier	c		411286	0					
ANR	411708	Identifier	channel		411286	1					
ANR	411709	MultiplicativeExpression	( channel + 1 ) % 2		411286	1		%			
ANR	411710	AdditiveExpression	channel + 1		411286	0		+			
ANR	411711	Identifier	channel		411286	0					
ANR	411712	PrimaryExpression	1		411286	1					
ANR	411713	PrimaryExpression	2		411286	1					
ANR	411714	IfStatement	if ( ! channel )		411286	1					
ANR	411715	Condition	! channel	171:15:2776:2783	411286	0	True				
ANR	411716	UnaryOperationExpression	! channel		411286	0					
ANR	411717	UnaryOperator	!		411286	0					
ANR	411718	Identifier	channel		411286	1					
ANR	411719	CompoundStatement		165:25:2611:2611	411286	1					
ANR	411720	ReturnStatement	return src - buf ;	173:16:2863:2879	411286	0	True				
ANR	411721	AdditiveExpression	src - buf		411286	0		-			
ANR	411722	Identifier	src		411286	0					
ANR	411723	Identifier	buf		411286	1					
ANR	411724	ExpressionStatement	samples --	177:12:2909:2918	411286	2	True				
ANR	411725	PostIncDecOperationExpression	samples --		411286	0					
ANR	411726	Identifier	samples		411286	0					
ANR	411727	IncDec	--		411286	1					
ANR	411728	BreakStatement	break ;	181:8:2940:2945	411286	15	True				
ANR	411729	Label	case CODEC_ID_ADPCM_IMA_WAV :	183:4:2952:2979	411286	16	True				
ANR	411730	Identifier	CODEC_ID_ADPCM_IMA_WAV		411286	0					
ANR	411731	IfStatement	if ( avctx -> block_align != 0 && buf_size > avctx -> block_align )		411286	17					
ANR	411732	Condition	avctx -> block_align != 0 && buf_size > avctx -> block_align	185:12:2994:3049	411286	0	True				
ANR	411733	AndExpression	avctx -> block_align != 0 && buf_size > avctx -> block_align		411286	0		&&			
ANR	411734	EqualityExpression	avctx -> block_align != 0		411286	0		!=			
ANR	411735	PtrMemberAccess	avctx -> block_align		411286	0					
ANR	411736	Identifier	avctx		411286	0					
ANR	411737	Identifier	block_align		411286	1					
ANR	411738	PrimaryExpression	0		411286	1					
ANR	411739	RelationalExpression	buf_size > avctx -> block_align		411286	1		>			
ANR	411740	Identifier	buf_size		411286	0					
ANR	411741	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	411742	Identifier	avctx		411286	0					
ANR	411743	Identifier	block_align		411286	1					
ANR	411744	ExpressionStatement	buf_size = avctx -> block_align	187:12:3065:3094	411286	1	True				
ANR	411745	AssignmentExpression	buf_size = avctx -> block_align		411286	0		=			
ANR	411746	Identifier	buf_size		411286	0					
ANR	411747	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	411748	Identifier	avctx		411286	0					
ANR	411749	Identifier	block_align		411286	1					
ANR	411750	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		411286	18					
ANR	411751	ForInit	i = 0 ;	195:12:3204:3207	411286	0	True				
ANR	411752	AssignmentExpression	i = 0		411286	0		=			
ANR	411753	Identifier	i		411286	0					
ANR	411754	PrimaryExpression	0		411286	1					
ANR	411755	Condition	i < avctx -> channels	195:17:3209:3225	411286	1	True				
ANR	411756	RelationalExpression	i < avctx -> channels		411286	0		<			
ANR	411757	Identifier	i		411286	0					
ANR	411758	PtrMemberAccess	avctx -> channels		411286	1					
ANR	411759	Identifier	avctx		411286	0					
ANR	411760	Identifier	channels		411286	1					
ANR	411761	PostIncDecOperationExpression	i ++	195:36:3228:3230	411286	2	True				
ANR	411762	Identifier	i		411286	0					
ANR	411763	IncDec	++		411286	1					
ANR	411764	CompoundStatement		189:40:3057:3057	411286	3					
ANR	411765	ExpressionStatement	cs = & ( c -> status [ i ] )	197:12:3247:3267	411286	0	True				
ANR	411766	AssignmentExpression	cs = & ( c -> status [ i ] )		411286	0		=			
ANR	411767	Identifier	cs		411286	0					
ANR	411768	UnaryOperationExpression	& ( c -> status [ i ] )		411286	1					
ANR	411769	UnaryOperator	&		411286	0					
ANR	411770	ArrayIndexing	c -> status [ i ]		411286	1					
ANR	411771	PtrMemberAccess	c -> status		411286	0					
ANR	411772	Identifier	c		411286	0					
ANR	411773	Identifier	status		411286	1					
ANR	411774	Identifier	i		411286	1					
ANR	411775	ExpressionStatement	cs -> predictor = * samples ++ = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )	199:12:3282:3342	411286	1	True				
ANR	411776	AssignmentExpression	cs -> predictor = * samples ++ = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	411777	PtrMemberAccess	cs -> predictor		411286	0					
ANR	411778	Identifier	cs		411286	0					
ANR	411779	Identifier	predictor		411286	1					
ANR	411780	AssignmentExpression	* samples ++ = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1		=			
ANR	411781	UnaryOperationExpression	* samples ++		411286	0					
ANR	411782	UnaryOperator	*		411286	0					
ANR	411783	PostIncDecOperationExpression	samples ++		411286	1					
ANR	411784	Identifier	samples		411286	0					
ANR	411785	IncDec	++		411286	1					
ANR	411786	CastExpression	( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1					
ANR	411787	CastTarget	int16_t		411286	0					
ANR	411788	AdditiveExpression	src [ 0 ] + ( src [ 1 ] << 8 )		411286	1		+			
ANR	411789	ArrayIndexing	src [ 0 ]		411286	0					
ANR	411790	Identifier	src		411286	0					
ANR	411791	PrimaryExpression	0		411286	1					
ANR	411792	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	411793	ArrayIndexing	src [ 1 ]		411286	0					
ANR	411794	Identifier	src		411286	0					
ANR	411795	PrimaryExpression	1		411286	1					
ANR	411796	PrimaryExpression	8		411286	1					
ANR	411797	ExpressionStatement	src += 2	201:12:3357:3363	411286	2	True				
ANR	411798	AssignmentExpression	src += 2		411286	0		+=			
ANR	411799	Identifier	src		411286	0					
ANR	411800	PrimaryExpression	2		411286	1					
ANR	411801	ExpressionStatement	cs -> step_index = * src ++	205:12:3380:3403	411286	3	True				
ANR	411802	AssignmentExpression	cs -> step_index = * src ++		411286	0		=			
ANR	411803	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411804	Identifier	cs		411286	0					
ANR	411805	Identifier	step_index		411286	1					
ANR	411806	UnaryOperationExpression	* src ++		411286	1					
ANR	411807	UnaryOperator	*		411286	0					
ANR	411808	PostIncDecOperationExpression	src ++		411286	1					
ANR	411809	Identifier	src		411286	0					
ANR	411810	IncDec	++		411286	1					
ANR	411811	IfStatement	if ( cs -> step_index > 88 )		411286	4					
ANR	411812	Condition	cs -> step_index > 88	207:16:3422:3440	411286	0	True				
ANR	411813	RelationalExpression	cs -> step_index > 88		411286	0		>			
ANR	411814	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411815	Identifier	cs		411286	0					
ANR	411816	Identifier	step_index		411286	1					
ANR	411817	PrimaryExpression	88		411286	1					
ANR	411818	CompoundStatement		201:36:3267:3267	411286	1					
ANR	411819	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""ERROR: step_index = %i\\n"" , cs -> step_index )"	209:16:3461:3532	411286	0	True				
ANR	411820	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""ERROR: step_index = %i\\n"" , cs -> step_index )"		411286	0					
ANR	411821	Callee	av_log		411286	0					
ANR	411822	Identifier	av_log		411286	0					
ANR	411823	ArgumentList	avctx		411286	1					
ANR	411824	Argument	avctx		411286	0					
ANR	411825	Identifier	avctx		411286	0					
ANR	411826	Argument	AV_LOG_ERROR		411286	1					
ANR	411827	Identifier	AV_LOG_ERROR		411286	0					
ANR	411828	Argument	"""ERROR: step_index = %i\\n"""		411286	2					
ANR	411829	PrimaryExpression	"""ERROR: step_index = %i\\n"""		411286	0					
ANR	411830	Argument	cs -> step_index		411286	3					
ANR	411831	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411832	Identifier	cs		411286	0					
ANR	411833	Identifier	step_index		411286	1					
ANR	411834	ExpressionStatement	cs -> step_index = 88	211:16:3551:3570	411286	1	True				
ANR	411835	AssignmentExpression	cs -> step_index = 88		411286	0		=			
ANR	411836	PtrMemberAccess	cs -> step_index		411286	0					
ANR	411837	Identifier	cs		411286	0					
ANR	411838	Identifier	step_index		411286	1					
ANR	411839	PrimaryExpression	88		411286	1					
ANR	411840	IfStatement	if ( * src ++ )		411286	5					
ANR	411841	Condition	* src ++	215:16:3604:3609	411286	0	True				
ANR	411842	UnaryOperationExpression	* src ++		411286	0					
ANR	411843	UnaryOperator	*		411286	0					
ANR	411844	PostIncDecOperationExpression	src ++		411286	1					
ANR	411845	Identifier	src		411286	0					
ANR	411846	IncDec	++		411286	1					
ANR	411847	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unused byte should be null but is %d!!\\n"" , src [ - 1 ] )"	215:24:3612:3692	411286	1	True				
ANR	411848	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unused byte should be null but is %d!!\\n"" , src [ - 1 ] )"		411286	0					
ANR	411849	Callee	av_log		411286	0					
ANR	411850	Identifier	av_log		411286	0					
ANR	411851	ArgumentList	avctx		411286	1					
ANR	411852	Argument	avctx		411286	0					
ANR	411853	Identifier	avctx		411286	0					
ANR	411854	Argument	AV_LOG_ERROR		411286	1					
ANR	411855	Identifier	AV_LOG_ERROR		411286	0					
ANR	411856	Argument	"""unused byte should be null but is %d!!\\n"""		411286	2					
ANR	411857	PrimaryExpression	"""unused byte should be null but is %d!!\\n"""		411286	0					
ANR	411858	Argument	src [ - 1 ]		411286	3					
ANR	411859	ArrayIndexing	src [ - 1 ]		411286	0					
ANR	411860	Identifier	src		411286	0					
ANR	411861	UnaryOperationExpression	- 1		411286	1					
ANR	411862	UnaryOperator	-		411286	0					
ANR	411863	PrimaryExpression	1		411286	1					
ANR	411864	WhileStatement	while ( src < buf + buf_size )		411286	19					
ANR	411865	Condition	src < buf + buf_size	221:14:3735:3754	411286	0	True				
ANR	411866	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	411867	Identifier	src		411286	0					
ANR	411868	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	411869	Identifier	buf		411286	0					
ANR	411870	Identifier	buf_size		411286	1					
ANR	411871	CompoundStatement		215:35:3581:3581	411286	1					
ANR	411872	ForStatement	for ( m = 0 ; m < 4 ; m ++ )		411286	0					
ANR	411873	ForInit	m = 0 ;	223:16:3775:3778	411286	0	True				
ANR	411874	AssignmentExpression	m = 0		411286	0		=			
ANR	411875	Identifier	m		411286	0					
ANR	411876	PrimaryExpression	0		411286	1					
ANR	411877	Condition	m < 4	223:21:3780:3782	411286	1	True				
ANR	411878	RelationalExpression	m < 4		411286	0		<			
ANR	411879	Identifier	m		411286	0					
ANR	411880	PrimaryExpression	4		411286	1					
ANR	411881	PostIncDecOperationExpression	m ++	223:26:3785:3787	411286	2	True				
ANR	411882	Identifier	m		411286	0					
ANR	411883	IncDec	++		411286	1					
ANR	411884	CompoundStatement		217:30:3614:3614	411286	3					
ANR	411885	ForStatement	for ( i = 0 ; i <= st ; i ++ )		411286	0					
ANR	411886	ForInit	i = 0 ;	225:20:3812:3815	411286	0	True				
ANR	411887	AssignmentExpression	i = 0		411286	0		=			
ANR	411888	Identifier	i		411286	0					
ANR	411889	PrimaryExpression	0		411286	1					
ANR	411890	Condition	i <= st	225:25:3817:3821	411286	1	True				
ANR	411891	RelationalExpression	i <= st		411286	0		<=			
ANR	411892	Identifier	i		411286	0					
ANR	411893	Identifier	st		411286	1					
ANR	411894	PostIncDecOperationExpression	i ++	225:32:3824:3826	411286	2	True				
ANR	411895	Identifier	i		411286	0					
ANR	411896	IncDec	++		411286	1					
ANR	411897	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] & 0x0F , 3 )"	227:20:3850:3921	411286	3	True				
ANR	411898	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] & 0x0F , 3 )"		411286	0		=			
ANR	411899	UnaryOperationExpression	* samples ++		411286	0					
ANR	411900	UnaryOperator	*		411286	0					
ANR	411901	PostIncDecOperationExpression	samples ++		411286	1					
ANR	411902	Identifier	samples		411286	0					
ANR	411903	IncDec	++		411286	1					
ANR	411904	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] & 0x0F , 3 )"		411286	1					
ANR	411905	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	411906	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	411907	ArgumentList	& c -> status [ i ]		411286	1					
ANR	411908	Argument	& c -> status [ i ]		411286	0					
ANR	411909	UnaryOperationExpression	& c -> status [ i ]		411286	0					
ANR	411910	UnaryOperator	&		411286	0					
ANR	411911	ArrayIndexing	c -> status [ i ]		411286	1					
ANR	411912	PtrMemberAccess	c -> status		411286	0					
ANR	411913	Identifier	c		411286	0					
ANR	411914	Identifier	status		411286	1					
ANR	411915	Identifier	i		411286	1					
ANR	411916	Argument	src [ 4 * i ] & 0x0F		411286	1					
ANR	411917	BitAndExpression	src [ 4 * i ] & 0x0F		411286	0		&			
ANR	411918	ArrayIndexing	src [ 4 * i ]		411286	0					
ANR	411919	Identifier	src		411286	0					
ANR	411920	MultiplicativeExpression	4 * i		411286	1		*			
ANR	411921	PrimaryExpression	4		411286	0					
ANR	411922	Identifier	i		411286	1					
ANR	411923	PrimaryExpression	0x0F		411286	1					
ANR	411924	Argument	3		411286	2					
ANR	411925	PrimaryExpression	3		411286	0					
ANR	411926	ForStatement	for ( i = 0 ; i <= st ; i ++ )		411286	1					
ANR	411927	ForInit	i = 0 ;	229:20:3944:3947	411286	0	True				
ANR	411928	AssignmentExpression	i = 0		411286	0		=			
ANR	411929	Identifier	i		411286	0					
ANR	411930	PrimaryExpression	0		411286	1					
ANR	411931	Condition	i <= st	229:25:3949:3953	411286	1	True				
ANR	411932	RelationalExpression	i <= st		411286	0		<=			
ANR	411933	Identifier	i		411286	0					
ANR	411934	Identifier	st		411286	1					
ANR	411935	PostIncDecOperationExpression	i ++	229:32:3956:3958	411286	2	True				
ANR	411936	Identifier	i		411286	0					
ANR	411937	IncDec	++		411286	1					
ANR	411938	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] >> 4 , 3 )"	231:20:3982:4053	411286	3	True				
ANR	411939	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] >> 4 , 3 )"		411286	0		=			
ANR	411940	UnaryOperationExpression	* samples ++		411286	0					
ANR	411941	UnaryOperator	*		411286	0					
ANR	411942	PostIncDecOperationExpression	samples ++		411286	1					
ANR	411943	Identifier	samples		411286	0					
ANR	411944	IncDec	++		411286	1					
ANR	411945	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ i ] , src [ 4 * i ] >> 4 , 3 )"		411286	1					
ANR	411946	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	411947	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	411948	ArgumentList	& c -> status [ i ]		411286	1					
ANR	411949	Argument	& c -> status [ i ]		411286	0					
ANR	411950	UnaryOperationExpression	& c -> status [ i ]		411286	0					
ANR	411951	UnaryOperator	&		411286	0					
ANR	411952	ArrayIndexing	c -> status [ i ]		411286	1					
ANR	411953	PtrMemberAccess	c -> status		411286	0					
ANR	411954	Identifier	c		411286	0					
ANR	411955	Identifier	status		411286	1					
ANR	411956	Identifier	i		411286	1					
ANR	411957	Argument	src [ 4 * i ] >> 4		411286	1					
ANR	411958	ShiftExpression	src [ 4 * i ] >> 4		411286	0		>>			
ANR	411959	ArrayIndexing	src [ 4 * i ]		411286	0					
ANR	411960	Identifier	src		411286	0					
ANR	411961	MultiplicativeExpression	4 * i		411286	1		*			
ANR	411962	PrimaryExpression	4		411286	0					
ANR	411963	Identifier	i		411286	1					
ANR	411964	PrimaryExpression	4		411286	1					
ANR	411965	Argument	3		411286	2					
ANR	411966	PrimaryExpression	3		411286	0					
ANR	411967	ExpressionStatement	src ++	233:16:4072:4077	411286	2	True				
ANR	411968	PostIncDecOperationExpression	src ++		411286	0					
ANR	411969	Identifier	src		411286	0					
ANR	411970	IncDec	++		411286	1					
ANR	411971	ExpressionStatement	src += 4 * st	237:12:4107:4118	411286	1	True				
ANR	411972	AssignmentExpression	src += 4 * st		411286	0		+=			
ANR	411973	Identifier	src		411286	0					
ANR	411974	MultiplicativeExpression	4 * st		411286	1		*			
ANR	411975	PrimaryExpression	4		411286	0					
ANR	411976	Identifier	st		411286	1					
ANR	411977	BreakStatement	break ;	241:8:4140:4145	411286	20	True				
ANR	411978	Label	case CODEC_ID_ADPCM_4XM :	243:4:4152:4175	411286	21	True				
ANR	411979	Identifier	CODEC_ID_ADPCM_4XM		411286	0					
ANR	411980	ExpressionStatement	cs = & ( c -> status [ 0 ] )	245:8:4186:4206	411286	22	True				
ANR	411981	AssignmentExpression	cs = & ( c -> status [ 0 ] )		411286	0		=			
ANR	411982	Identifier	cs		411286	0					
ANR	411983	UnaryOperationExpression	& ( c -> status [ 0 ] )		411286	1					
ANR	411984	UnaryOperator	&		411286	0					
ANR	411985	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	411986	PtrMemberAccess	c -> status		411286	0					
ANR	411987	Identifier	c		411286	0					
ANR	411988	Identifier	status		411286	1					
ANR	411989	PrimaryExpression	0		411286	1					
ANR	411990	ExpressionStatement	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )	247:8:4217:4272	411286	23	True				
ANR	411991	AssignmentExpression	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	411992	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	411993	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	411994	PtrMemberAccess	c -> status		411286	0					
ANR	411995	Identifier	c		411286	0					
ANR	411996	Identifier	status		411286	1					
ANR	411997	PrimaryExpression	0		411286	1					
ANR	411998	Identifier	predictor		411286	1					
ANR	411999	CastExpression	( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1					
ANR	412000	CastTarget	int16_t		411286	0					
ANR	412001	AdditiveExpression	src [ 0 ] + ( src [ 1 ] << 8 )		411286	1		+			
ANR	412002	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412003	Identifier	src		411286	0					
ANR	412004	PrimaryExpression	0		411286	1					
ANR	412005	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412006	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412007	Identifier	src		411286	0					
ANR	412008	PrimaryExpression	1		411286	1					
ANR	412009	PrimaryExpression	8		411286	1					
ANR	412010	ExpressionStatement	src += 2	247:65:4274:4280	411286	24	True				
ANR	412011	AssignmentExpression	src += 2		411286	0		+=			
ANR	412012	Identifier	src		411286	0					
ANR	412013	PrimaryExpression	2		411286	1					
ANR	412014	IfStatement	if ( st )		411286	25					
ANR	412015	Condition	st	249:11:4294:4295	411286	0	True				
ANR	412016	Identifier	st		411286	0					
ANR	412017	CompoundStatement		243:14:4122:4122	411286	1					
ANR	412018	ExpressionStatement	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )	251:12:4312:4367	411286	0	True				
ANR	412019	AssignmentExpression	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	412020	MemberAccess	c -> status [ 1 ] . predictor		411286	0					
ANR	412021	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412022	PtrMemberAccess	c -> status		411286	0					
ANR	412023	Identifier	c		411286	0					
ANR	412024	Identifier	status		411286	1					
ANR	412025	PrimaryExpression	1		411286	1					
ANR	412026	Identifier	predictor		411286	1					
ANR	412027	CastExpression	( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1					
ANR	412028	CastTarget	int16_t		411286	0					
ANR	412029	AdditiveExpression	src [ 0 ] + ( src [ 1 ] << 8 )		411286	1		+			
ANR	412030	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412031	Identifier	src		411286	0					
ANR	412032	PrimaryExpression	0		411286	1					
ANR	412033	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412034	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412035	Identifier	src		411286	0					
ANR	412036	PrimaryExpression	1		411286	1					
ANR	412037	PrimaryExpression	8		411286	1					
ANR	412038	ExpressionStatement	src += 2	251:69:4369:4375	411286	1	True				
ANR	412039	AssignmentExpression	src += 2		411286	0		+=			
ANR	412040	Identifier	src		411286	0					
ANR	412041	PrimaryExpression	2		411286	1					
ANR	412042	ExpressionStatement	c -> status [ 0 ] . step_index = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )	255:8:4397:4453	411286	26	True				
ANR	412043	AssignmentExpression	c -> status [ 0 ] . step_index = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	412044	MemberAccess	c -> status [ 0 ] . step_index		411286	0					
ANR	412045	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412046	PtrMemberAccess	c -> status		411286	0					
ANR	412047	Identifier	c		411286	0					
ANR	412048	Identifier	status		411286	1					
ANR	412049	PrimaryExpression	0		411286	1					
ANR	412050	Identifier	step_index		411286	1					
ANR	412051	CastExpression	( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1					
ANR	412052	CastTarget	int16_t		411286	0					
ANR	412053	AdditiveExpression	src [ 0 ] + ( src [ 1 ] << 8 )		411286	1		+			
ANR	412054	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412055	Identifier	src		411286	0					
ANR	412056	PrimaryExpression	0		411286	1					
ANR	412057	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412058	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412059	Identifier	src		411286	0					
ANR	412060	PrimaryExpression	1		411286	1					
ANR	412061	PrimaryExpression	8		411286	1					
ANR	412062	ExpressionStatement	src += 2	255:66:4455:4461	411286	27	True				
ANR	412063	AssignmentExpression	src += 2		411286	0		+=			
ANR	412064	Identifier	src		411286	0					
ANR	412065	PrimaryExpression	2		411286	1					
ANR	412066	IfStatement	if ( st )		411286	28					
ANR	412067	Condition	st	257:11:4475:4476	411286	0	True				
ANR	412068	Identifier	st		411286	0					
ANR	412069	CompoundStatement		251:14:4303:4303	411286	1					
ANR	412070	ExpressionStatement	c -> status [ 1 ] . step_index = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )	259:12:4493:4549	411286	0	True				
ANR	412071	AssignmentExpression	c -> status [ 1 ] . step_index = ( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	412072	MemberAccess	c -> status [ 1 ] . step_index		411286	0					
ANR	412073	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412074	PtrMemberAccess	c -> status		411286	0					
ANR	412075	Identifier	c		411286	0					
ANR	412076	Identifier	status		411286	1					
ANR	412077	PrimaryExpression	1		411286	1					
ANR	412078	Identifier	step_index		411286	1					
ANR	412079	CastExpression	( int16_t ) ( src [ 0 ] + ( src [ 1 ] << 8 ) )		411286	1					
ANR	412080	CastTarget	int16_t		411286	0					
ANR	412081	AdditiveExpression	src [ 0 ] + ( src [ 1 ] << 8 )		411286	1		+			
ANR	412082	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412083	Identifier	src		411286	0					
ANR	412084	PrimaryExpression	0		411286	1					
ANR	412085	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412086	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412087	Identifier	src		411286	0					
ANR	412088	PrimaryExpression	1		411286	1					
ANR	412089	PrimaryExpression	8		411286	1					
ANR	412090	ExpressionStatement	src += 2	259:70:4551:4557	411286	1	True				
ANR	412091	AssignmentExpression	src += 2		411286	0		+=			
ANR	412092	Identifier	src		411286	0					
ANR	412093	PrimaryExpression	2		411286	1					
ANR	412094	IfStatement	if ( cs -> step_index < 0 )		411286	29					
ANR	412095	Condition	cs -> step_index < 0	263:12:4583:4600	411286	0	True				
ANR	412096	RelationalExpression	cs -> step_index < 0		411286	0		<			
ANR	412097	PtrMemberAccess	cs -> step_index		411286	0					
ANR	412098	Identifier	cs		411286	0					
ANR	412099	Identifier	step_index		411286	1					
ANR	412100	PrimaryExpression	0		411286	1					
ANR	412101	ExpressionStatement	cs -> step_index = 0	263:32:4603:4621	411286	1	True				
ANR	412102	AssignmentExpression	cs -> step_index = 0		411286	0		=			
ANR	412103	PtrMemberAccess	cs -> step_index		411286	0					
ANR	412104	Identifier	cs		411286	0					
ANR	412105	Identifier	step_index		411286	1					
ANR	412106	PrimaryExpression	0		411286	1					
ANR	412107	IfStatement	if ( cs -> step_index > 88 )		411286	30					
ANR	412108	Condition	cs -> step_index > 88	265:12:4636:4654	411286	0	True				
ANR	412109	RelationalExpression	cs -> step_index > 88		411286	0		>			
ANR	412110	PtrMemberAccess	cs -> step_index		411286	0					
ANR	412111	Identifier	cs		411286	0					
ANR	412112	Identifier	step_index		411286	1					
ANR	412113	PrimaryExpression	88		411286	1					
ANR	412114	ExpressionStatement	cs -> step_index = 88	265:33:4657:4676	411286	1	True				
ANR	412115	AssignmentExpression	cs -> step_index = 88		411286	0		=			
ANR	412116	PtrMemberAccess	cs -> step_index		411286	0					
ANR	412117	Identifier	cs		411286	0					
ANR	412118	Identifier	step_index		411286	1					
ANR	412119	PrimaryExpression	88		411286	1					
ANR	412120	ExpressionStatement	m = ( buf_size - ( src - buf ) ) >> st	269:8:4689:4720	411286	31	True				
ANR	412121	AssignmentExpression	m = ( buf_size - ( src - buf ) ) >> st		411286	0		=			
ANR	412122	Identifier	m		411286	0					
ANR	412123	ShiftExpression	( buf_size - ( src - buf ) ) >> st		411286	1		>>			
ANR	412124	AdditiveExpression	buf_size - ( src - buf )		411286	0		-			
ANR	412125	Identifier	buf_size		411286	0					
ANR	412126	AdditiveExpression	src - buf		411286	1		-			
ANR	412127	Identifier	src		411286	0					
ANR	412128	Identifier	buf		411286	1					
ANR	412129	Identifier	st		411286	1					
ANR	412130	ForStatement	for ( i = 0 ; i < m ; i ++ )		411286	32					
ANR	412131	ForInit	i = 0 ;	271:12:4735:4738	411286	0	True				
ANR	412132	AssignmentExpression	i = 0		411286	0		=			
ANR	412133	Identifier	i		411286	0					
ANR	412134	PrimaryExpression	0		411286	1					
ANR	412135	Condition	i < m	271:17:4740:4742	411286	1	True				
ANR	412136	RelationalExpression	i < m		411286	0		<			
ANR	412137	Identifier	i		411286	0					
ANR	412138	Identifier	m		411286	1					
ANR	412139	PostIncDecOperationExpression	i ++	271:22:4745:4747	411286	2	True				
ANR	412140	Identifier	i		411286	0					
ANR	412141	IncDec	++		411286	1					
ANR	412142	CompoundStatement		265:27:4575:4575	411286	3					
ANR	412143	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] & 0x0F , 4 )"	273:12:4765:4834	411286	0	True				
ANR	412144	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] & 0x0F , 4 )"		411286	0		=			
ANR	412145	UnaryOperationExpression	* samples ++		411286	0					
ANR	412146	UnaryOperator	*		411286	0					
ANR	412147	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412148	Identifier	samples		411286	0					
ANR	412149	IncDec	++		411286	1					
ANR	412150	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] & 0x0F , 4 )"		411286	1					
ANR	412151	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412152	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412153	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	412154	Argument	& c -> status [ 0 ]		411286	0					
ANR	412155	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	412156	UnaryOperator	&		411286	0					
ANR	412157	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	412158	PtrMemberAccess	c -> status		411286	0					
ANR	412159	Identifier	c		411286	0					
ANR	412160	Identifier	status		411286	1					
ANR	412161	PrimaryExpression	0		411286	1					
ANR	412162	Argument	src [ i ] & 0x0F		411286	1					
ANR	412163	BitAndExpression	src [ i ] & 0x0F		411286	0		&			
ANR	412164	ArrayIndexing	src [ i ]		411286	0					
ANR	412165	Identifier	src		411286	0					
ANR	412166	Identifier	i		411286	1					
ANR	412167	PrimaryExpression	0x0F		411286	1					
ANR	412168	Argument	4		411286	2					
ANR	412169	PrimaryExpression	4		411286	0					
ANR	412170	IfStatement	if ( st )		411286	1					
ANR	412171	Condition	st	275:16:4853:4854	411286	0	True				
ANR	412172	Identifier	st		411286	0					
ANR	412173	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] & 0x0F , 4 )"	277:16:4874:4945	411286	1	True				
ANR	412174	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] & 0x0F , 4 )"		411286	0		=			
ANR	412175	UnaryOperationExpression	* samples ++		411286	0					
ANR	412176	UnaryOperator	*		411286	0					
ANR	412177	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412178	Identifier	samples		411286	0					
ANR	412179	IncDec	++		411286	1					
ANR	412180	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] & 0x0F , 4 )"		411286	1					
ANR	412181	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412182	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412183	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	412184	Argument	& c -> status [ 1 ]		411286	0					
ANR	412185	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	412186	UnaryOperator	&		411286	0					
ANR	412187	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	412188	PtrMemberAccess	c -> status		411286	0					
ANR	412189	Identifier	c		411286	0					
ANR	412190	Identifier	status		411286	1					
ANR	412191	PrimaryExpression	1		411286	1					
ANR	412192	Argument	src [ i + m ] & 0x0F		411286	1					
ANR	412193	BitAndExpression	src [ i + m ] & 0x0F		411286	0		&			
ANR	412194	ArrayIndexing	src [ i + m ]		411286	0					
ANR	412195	Identifier	src		411286	0					
ANR	412196	AdditiveExpression	i + m		411286	1		+			
ANR	412197	Identifier	i		411286	0					
ANR	412198	Identifier	m		411286	1					
ANR	412199	PrimaryExpression	0x0F		411286	1					
ANR	412200	Argument	4		411286	2					
ANR	412201	PrimaryExpression	4		411286	0					
ANR	412202	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] >> 4 , 4 )"	279:12:4960:5027	411286	2	True				
ANR	412203	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] >> 4 , 4 )"		411286	0		=			
ANR	412204	UnaryOperationExpression	* samples ++		411286	0					
ANR	412205	UnaryOperator	*		411286	0					
ANR	412206	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412207	Identifier	samples		411286	0					
ANR	412208	IncDec	++		411286	1					
ANR	412209	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ i ] >> 4 , 4 )"		411286	1					
ANR	412210	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412211	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412212	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	412213	Argument	& c -> status [ 0 ]		411286	0					
ANR	412214	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	412215	UnaryOperator	&		411286	0					
ANR	412216	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	412217	PtrMemberAccess	c -> status		411286	0					
ANR	412218	Identifier	c		411286	0					
ANR	412219	Identifier	status		411286	1					
ANR	412220	PrimaryExpression	0		411286	1					
ANR	412221	Argument	src [ i ] >> 4		411286	1					
ANR	412222	ShiftExpression	src [ i ] >> 4		411286	0		>>			
ANR	412223	ArrayIndexing	src [ i ]		411286	0					
ANR	412224	Identifier	src		411286	0					
ANR	412225	Identifier	i		411286	1					
ANR	412226	PrimaryExpression	4		411286	1					
ANR	412227	Argument	4		411286	2					
ANR	412228	PrimaryExpression	4		411286	0					
ANR	412229	IfStatement	if ( st )		411286	3					
ANR	412230	Condition	st	281:16:5046:5047	411286	0	True				
ANR	412231	Identifier	st		411286	0					
ANR	412232	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] >> 4 , 4 )"	283:16:5067:5136	411286	1	True				
ANR	412233	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] >> 4 , 4 )"		411286	0		=			
ANR	412234	UnaryOperationExpression	* samples ++		411286	0					
ANR	412235	UnaryOperator	*		411286	0					
ANR	412236	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412237	Identifier	samples		411286	0					
ANR	412238	IncDec	++		411286	1					
ANR	412239	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ i + m ] >> 4 , 4 )"		411286	1					
ANR	412240	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412241	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412242	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	412243	Argument	& c -> status [ 1 ]		411286	0					
ANR	412244	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	412245	UnaryOperator	&		411286	0					
ANR	412246	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	412247	PtrMemberAccess	c -> status		411286	0					
ANR	412248	Identifier	c		411286	0					
ANR	412249	Identifier	status		411286	1					
ANR	412250	PrimaryExpression	1		411286	1					
ANR	412251	Argument	src [ i + m ] >> 4		411286	1					
ANR	412252	ShiftExpression	src [ i + m ] >> 4		411286	0		>>			
ANR	412253	ArrayIndexing	src [ i + m ]		411286	0					
ANR	412254	Identifier	src		411286	0					
ANR	412255	AdditiveExpression	i + m		411286	1		+			
ANR	412256	Identifier	i		411286	0					
ANR	412257	Identifier	m		411286	1					
ANR	412258	PrimaryExpression	4		411286	1					
ANR	412259	Argument	4		411286	2					
ANR	412260	PrimaryExpression	4		411286	0					
ANR	412261	ExpressionStatement	src += m << st	289:8:5160:5172	411286	33	True				
ANR	412262	AssignmentExpression	src += m << st		411286	0		+=			
ANR	412263	Identifier	src		411286	0					
ANR	412264	ShiftExpression	m << st		411286	1		<<			
ANR	412265	Identifier	m		411286	0					
ANR	412266	Identifier	st		411286	1					
ANR	412267	BreakStatement	break ;	293:8:5185:5190	411286	34	True				
ANR	412268	Label	case CODEC_ID_ADPCM_MS :	295:4:5197:5219	411286	35	True				
ANR	412269	Identifier	CODEC_ID_ADPCM_MS		411286	0					
ANR	412270	IfStatement	if ( avctx -> block_align != 0 && buf_size > avctx -> block_align )		411286	36					
ANR	412271	Condition	avctx -> block_align != 0 && buf_size > avctx -> block_align	297:12:5234:5289	411286	0	True				
ANR	412272	AndExpression	avctx -> block_align != 0 && buf_size > avctx -> block_align		411286	0		&&			
ANR	412273	EqualityExpression	avctx -> block_align != 0		411286	0		!=			
ANR	412274	PtrMemberAccess	avctx -> block_align		411286	0					
ANR	412275	Identifier	avctx		411286	0					
ANR	412276	Identifier	block_align		411286	1					
ANR	412277	PrimaryExpression	0		411286	1					
ANR	412278	RelationalExpression	buf_size > avctx -> block_align		411286	1		>			
ANR	412279	Identifier	buf_size		411286	0					
ANR	412280	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412281	Identifier	avctx		411286	0					
ANR	412282	Identifier	block_align		411286	1					
ANR	412283	ExpressionStatement	buf_size = avctx -> block_align	299:12:5305:5334	411286	1	True				
ANR	412284	AssignmentExpression	buf_size = avctx -> block_align		411286	0		=			
ANR	412285	Identifier	buf_size		411286	0					
ANR	412286	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412287	Identifier	avctx		411286	0					
ANR	412288	Identifier	block_align		411286	1					
ANR	412289	ExpressionStatement	n = buf_size - 7 * avctx -> channels	301:8:5345:5379	411286	37	True				
ANR	412290	AssignmentExpression	n = buf_size - 7 * avctx -> channels		411286	0		=			
ANR	412291	Identifier	n		411286	0					
ANR	412292	AdditiveExpression	buf_size - 7 * avctx -> channels		411286	1		-			
ANR	412293	Identifier	buf_size		411286	0					
ANR	412294	MultiplicativeExpression	7 * avctx -> channels		411286	1		*			
ANR	412295	PrimaryExpression	7		411286	0					
ANR	412296	PtrMemberAccess	avctx -> channels		411286	1					
ANR	412297	Identifier	avctx		411286	0					
ANR	412298	Identifier	channels		411286	1					
ANR	412299	IfStatement	if ( n < 0 )		411286	38					
ANR	412300	Condition	n < 0	303:12:5394:5398	411286	0	True				
ANR	412301	RelationalExpression	n < 0		411286	0		<			
ANR	412302	Identifier	n		411286	0					
ANR	412303	PrimaryExpression	0		411286	1					
ANR	412304	ReturnStatement	return - 1 ;	305:12:5414:5423	411286	1	True				
ANR	412305	UnaryOperationExpression	- 1		411286	0					
ANR	412306	UnaryOperator	-		411286	0					
ANR	412307	PrimaryExpression	1		411286	1					
ANR	412308	ExpressionStatement	"block_predictor [ 0 ] = av_clip ( * src ++ , 0 , 7 )"	307:8:5434:5476	411286	39	True				
ANR	412309	AssignmentExpression	"block_predictor [ 0 ] = av_clip ( * src ++ , 0 , 7 )"		411286	0		=			
ANR	412310	ArrayIndexing	block_predictor [ 0 ]		411286	0					
ANR	412311	Identifier	block_predictor		411286	0					
ANR	412312	PrimaryExpression	0		411286	1					
ANR	412313	CallExpression	"av_clip ( * src ++ , 0 , 7 )"		411286	1					
ANR	412314	Callee	av_clip		411286	0					
ANR	412315	Identifier	av_clip		411286	0					
ANR	412316	ArgumentList	* src ++		411286	1					
ANR	412317	Argument	* src ++		411286	0					
ANR	412318	UnaryOperationExpression	* src ++		411286	0					
ANR	412319	UnaryOperator	*		411286	0					
ANR	412320	PostIncDecOperationExpression	src ++		411286	1					
ANR	412321	Identifier	src		411286	0					
ANR	412322	IncDec	++		411286	1					
ANR	412323	Argument	0		411286	1					
ANR	412324	PrimaryExpression	0		411286	0					
ANR	412325	Argument	7		411286	2					
ANR	412326	PrimaryExpression	7		411286	0					
ANR	412327	ExpressionStatement	block_predictor [ 1 ] = 0	309:8:5487:5509	411286	40	True				
ANR	412328	AssignmentExpression	block_predictor [ 1 ] = 0		411286	0		=			
ANR	412329	ArrayIndexing	block_predictor [ 1 ]		411286	0					
ANR	412330	Identifier	block_predictor		411286	0					
ANR	412331	PrimaryExpression	1		411286	1					
ANR	412332	PrimaryExpression	0		411286	1					
ANR	412333	IfStatement	if ( st )		411286	41					
ANR	412334	Condition	st	311:12:5524:5525	411286	0	True				
ANR	412335	Identifier	st		411286	0					
ANR	412336	ExpressionStatement	"block_predictor [ 1 ] = av_clip ( * src ++ , 0 , 7 )"	313:12:5541:5583	411286	1	True				
ANR	412337	AssignmentExpression	"block_predictor [ 1 ] = av_clip ( * src ++ , 0 , 7 )"		411286	0		=			
ANR	412338	ArrayIndexing	block_predictor [ 1 ]		411286	0					
ANR	412339	Identifier	block_predictor		411286	0					
ANR	412340	PrimaryExpression	1		411286	1					
ANR	412341	CallExpression	"av_clip ( * src ++ , 0 , 7 )"		411286	1					
ANR	412342	Callee	av_clip		411286	0					
ANR	412343	Identifier	av_clip		411286	0					
ANR	412344	ArgumentList	* src ++		411286	1					
ANR	412345	Argument	* src ++		411286	0					
ANR	412346	UnaryOperationExpression	* src ++		411286	0					
ANR	412347	UnaryOperator	*		411286	0					
ANR	412348	PostIncDecOperationExpression	src ++		411286	1					
ANR	412349	Identifier	src		411286	0					
ANR	412350	IncDec	++		411286	1					
ANR	412351	Argument	0		411286	1					
ANR	412352	PrimaryExpression	0		411286	0					
ANR	412353	Argument	7		411286	2					
ANR	412354	PrimaryExpression	7		411286	0					
ANR	412355	ExpressionStatement	c -> status [ 0 ] . idelta = ( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	315:8:5594:5667	411286	42	True				
ANR	412356	AssignmentExpression	c -> status [ 0 ] . idelta = ( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412357	MemberAccess	c -> status [ 0 ] . idelta		411286	0					
ANR	412358	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412359	PtrMemberAccess	c -> status		411286	0					
ANR	412360	Identifier	c		411286	0					
ANR	412361	Identifier	status		411286	1					
ANR	412362	PrimaryExpression	0		411286	1					
ANR	412363	Identifier	idelta		411286	1					
ANR	412364	CastExpression	( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	1					
ANR	412365	CastTarget	int16_t		411286	0					
ANR	412366	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412367	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412368	UnaryOperationExpression	* src		411286	0					
ANR	412369	UnaryOperator	*		411286	0					
ANR	412370	Identifier	src		411286	1					
ANR	412371	PrimaryExpression	0xFF		411286	1					
ANR	412372	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412373	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412374	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412375	Identifier	src		411286	0					
ANR	412376	PrimaryExpression	1		411286	1					
ANR	412377	PrimaryExpression	8		411286	1					
ANR	412378	PrimaryExpression	0xFF00		411286	1					
ANR	412379	ExpressionStatement	src += 2	317:8:5678:5684	411286	43	True				
ANR	412380	AssignmentExpression	src += 2		411286	0		+=			
ANR	412381	Identifier	src		411286	0					
ANR	412382	PrimaryExpression	2		411286	1					
ANR	412383	IfStatement	if ( st )		411286	44					
ANR	412384	Condition	st	319:12:5699:5700	411286	0	True				
ANR	412385	Identifier	st		411286	0					
ANR	412386	CompoundStatement		313:15:5527:5527	411286	1					
ANR	412387	ExpressionStatement	c -> status [ 1 ] . idelta = ( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	321:12:5717:5790	411286	0	True				
ANR	412388	AssignmentExpression	c -> status [ 1 ] . idelta = ( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412389	MemberAccess	c -> status [ 1 ] . idelta		411286	0					
ANR	412390	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412391	PtrMemberAccess	c -> status		411286	0					
ANR	412392	Identifier	c		411286	0					
ANR	412393	Identifier	status		411286	1					
ANR	412394	PrimaryExpression	1		411286	1					
ANR	412395	Identifier	idelta		411286	1					
ANR	412396	CastExpression	( int16_t ) ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	1					
ANR	412397	CastTarget	int16_t		411286	0					
ANR	412398	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412399	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412400	UnaryOperationExpression	* src		411286	0					
ANR	412401	UnaryOperator	*		411286	0					
ANR	412402	Identifier	src		411286	1					
ANR	412403	PrimaryExpression	0xFF		411286	1					
ANR	412404	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412405	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412406	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412407	Identifier	src		411286	0					
ANR	412408	PrimaryExpression	1		411286	1					
ANR	412409	PrimaryExpression	8		411286	1					
ANR	412410	PrimaryExpression	0xFF00		411286	1					
ANR	412411	ExpressionStatement	src += 2	323:12:5805:5811	411286	1	True				
ANR	412412	AssignmentExpression	src += 2		411286	0		+=			
ANR	412413	Identifier	src		411286	0					
ANR	412414	PrimaryExpression	2		411286	1					
ANR	412415	ExpressionStatement	c -> status [ 0 ] . coeff1 = AdaptCoeff1 [ block_predictor [ 0 ] ]	327:8:5833:5886	411286	45	True				
ANR	412416	AssignmentExpression	c -> status [ 0 ] . coeff1 = AdaptCoeff1 [ block_predictor [ 0 ] ]		411286	0		=			
ANR	412417	MemberAccess	c -> status [ 0 ] . coeff1		411286	0					
ANR	412418	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412419	PtrMemberAccess	c -> status		411286	0					
ANR	412420	Identifier	c		411286	0					
ANR	412421	Identifier	status		411286	1					
ANR	412422	PrimaryExpression	0		411286	1					
ANR	412423	Identifier	coeff1		411286	1					
ANR	412424	ArrayIndexing	AdaptCoeff1 [ block_predictor [ 0 ] ]		411286	1					
ANR	412425	Identifier	AdaptCoeff1		411286	0					
ANR	412426	ArrayIndexing	block_predictor [ 0 ]		411286	1					
ANR	412427	Identifier	block_predictor		411286	0					
ANR	412428	PrimaryExpression	0		411286	1					
ANR	412429	ExpressionStatement	c -> status [ 0 ] . coeff2 = AdaptCoeff2 [ block_predictor [ 0 ] ]	329:8:5897:5950	411286	46	True				
ANR	412430	AssignmentExpression	c -> status [ 0 ] . coeff2 = AdaptCoeff2 [ block_predictor [ 0 ] ]		411286	0		=			
ANR	412431	MemberAccess	c -> status [ 0 ] . coeff2		411286	0					
ANR	412432	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412433	PtrMemberAccess	c -> status		411286	0					
ANR	412434	Identifier	c		411286	0					
ANR	412435	Identifier	status		411286	1					
ANR	412436	PrimaryExpression	0		411286	1					
ANR	412437	Identifier	coeff2		411286	1					
ANR	412438	ArrayIndexing	AdaptCoeff2 [ block_predictor [ 0 ] ]		411286	1					
ANR	412439	Identifier	AdaptCoeff2		411286	0					
ANR	412440	ArrayIndexing	block_predictor [ 0 ]		411286	1					
ANR	412441	Identifier	block_predictor		411286	0					
ANR	412442	PrimaryExpression	0		411286	1					
ANR	412443	ExpressionStatement	c -> status [ 1 ] . coeff1 = AdaptCoeff1 [ block_predictor [ 1 ] ]	331:8:5961:6014	411286	47	True				
ANR	412444	AssignmentExpression	c -> status [ 1 ] . coeff1 = AdaptCoeff1 [ block_predictor [ 1 ] ]		411286	0		=			
ANR	412445	MemberAccess	c -> status [ 1 ] . coeff1		411286	0					
ANR	412446	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412447	PtrMemberAccess	c -> status		411286	0					
ANR	412448	Identifier	c		411286	0					
ANR	412449	Identifier	status		411286	1					
ANR	412450	PrimaryExpression	1		411286	1					
ANR	412451	Identifier	coeff1		411286	1					
ANR	412452	ArrayIndexing	AdaptCoeff1 [ block_predictor [ 1 ] ]		411286	1					
ANR	412453	Identifier	AdaptCoeff1		411286	0					
ANR	412454	ArrayIndexing	block_predictor [ 1 ]		411286	1					
ANR	412455	Identifier	block_predictor		411286	0					
ANR	412456	PrimaryExpression	1		411286	1					
ANR	412457	ExpressionStatement	c -> status [ 1 ] . coeff2 = AdaptCoeff2 [ block_predictor [ 1 ] ]	333:8:6025:6078	411286	48	True				
ANR	412458	AssignmentExpression	c -> status [ 1 ] . coeff2 = AdaptCoeff2 [ block_predictor [ 1 ] ]		411286	0		=			
ANR	412459	MemberAccess	c -> status [ 1 ] . coeff2		411286	0					
ANR	412460	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412461	PtrMemberAccess	c -> status		411286	0					
ANR	412462	Identifier	c		411286	0					
ANR	412463	Identifier	status		411286	1					
ANR	412464	PrimaryExpression	1		411286	1					
ANR	412465	Identifier	coeff2		411286	1					
ANR	412466	ArrayIndexing	AdaptCoeff2 [ block_predictor [ 1 ] ]		411286	1					
ANR	412467	Identifier	AdaptCoeff2		411286	0					
ANR	412468	ArrayIndexing	block_predictor [ 1 ]		411286	1					
ANR	412469	Identifier	block_predictor		411286	0					
ANR	412470	PrimaryExpression	1		411286	1					
ANR	412471	ExpressionStatement	c -> status [ 0 ] . sample1 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	337:8:6091:6156	411286	49	True				
ANR	412472	AssignmentExpression	c -> status [ 0 ] . sample1 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412473	MemberAccess	c -> status [ 0 ] . sample1		411286	0					
ANR	412474	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412475	PtrMemberAccess	c -> status		411286	0					
ANR	412476	Identifier	c		411286	0					
ANR	412477	Identifier	status		411286	1					
ANR	412478	PrimaryExpression	0		411286	1					
ANR	412479	Identifier	sample1		411286	1					
ANR	412480	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412481	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412482	UnaryOperationExpression	* src		411286	0					
ANR	412483	UnaryOperator	*		411286	0					
ANR	412484	Identifier	src		411286	1					
ANR	412485	PrimaryExpression	0xFF		411286	1					
ANR	412486	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412487	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412488	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412489	Identifier	src		411286	0					
ANR	412490	PrimaryExpression	1		411286	1					
ANR	412491	PrimaryExpression	8		411286	1					
ANR	412492	PrimaryExpression	0xFF00		411286	1					
ANR	412493	ExpressionStatement	src += 2	339:8:6167:6173	411286	50	True				
ANR	412494	AssignmentExpression	src += 2		411286	0		+=			
ANR	412495	Identifier	src		411286	0					
ANR	412496	PrimaryExpression	2		411286	1					
ANR	412497	IfStatement	if ( st )		411286	51					
ANR	412498	Condition	st	341:12:6188:6189	411286	0	True				
ANR	412499	Identifier	st		411286	0					
ANR	412500	ExpressionStatement	c -> status [ 1 ] . sample1 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	341:16:6192:6257	411286	1	True				
ANR	412501	AssignmentExpression	c -> status [ 1 ] . sample1 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412502	MemberAccess	c -> status [ 1 ] . sample1		411286	0					
ANR	412503	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412504	PtrMemberAccess	c -> status		411286	0					
ANR	412505	Identifier	c		411286	0					
ANR	412506	Identifier	status		411286	1					
ANR	412507	PrimaryExpression	1		411286	1					
ANR	412508	Identifier	sample1		411286	1					
ANR	412509	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412510	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412511	UnaryOperationExpression	* src		411286	0					
ANR	412512	UnaryOperator	*		411286	0					
ANR	412513	Identifier	src		411286	1					
ANR	412514	PrimaryExpression	0xFF		411286	1					
ANR	412515	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412516	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412517	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412518	Identifier	src		411286	0					
ANR	412519	PrimaryExpression	1		411286	1					
ANR	412520	PrimaryExpression	8		411286	1					
ANR	412521	PrimaryExpression	0xFF00		411286	1					
ANR	412522	IfStatement	if ( st )		411286	52					
ANR	412523	Condition	st	343:12:6272:6273	411286	0	True				
ANR	412524	Identifier	st		411286	0					
ANR	412525	ExpressionStatement	src += 2	343:16:6276:6282	411286	1	True				
ANR	412526	AssignmentExpression	src += 2		411286	0		+=			
ANR	412527	Identifier	src		411286	0					
ANR	412528	PrimaryExpression	2		411286	1					
ANR	412529	ExpressionStatement	c -> status [ 0 ] . sample2 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	345:8:6293:6358	411286	53	True				
ANR	412530	AssignmentExpression	c -> status [ 0 ] . sample2 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412531	MemberAccess	c -> status [ 0 ] . sample2		411286	0					
ANR	412532	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412533	PtrMemberAccess	c -> status		411286	0					
ANR	412534	Identifier	c		411286	0					
ANR	412535	Identifier	status		411286	1					
ANR	412536	PrimaryExpression	0		411286	1					
ANR	412537	Identifier	sample2		411286	1					
ANR	412538	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412539	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412540	UnaryOperationExpression	* src		411286	0					
ANR	412541	UnaryOperator	*		411286	0					
ANR	412542	Identifier	src		411286	1					
ANR	412543	PrimaryExpression	0xFF		411286	1					
ANR	412544	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412545	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412546	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412547	Identifier	src		411286	0					
ANR	412548	PrimaryExpression	1		411286	1					
ANR	412549	PrimaryExpression	8		411286	1					
ANR	412550	PrimaryExpression	0xFF00		411286	1					
ANR	412551	ExpressionStatement	src += 2	347:8:6369:6375	411286	54	True				
ANR	412552	AssignmentExpression	src += 2		411286	0		+=			
ANR	412553	Identifier	src		411286	0					
ANR	412554	PrimaryExpression	2		411286	1					
ANR	412555	IfStatement	if ( st )		411286	55					
ANR	412556	Condition	st	349:12:6390:6391	411286	0	True				
ANR	412557	Identifier	st		411286	0					
ANR	412558	ExpressionStatement	c -> status [ 1 ] . sample2 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )	349:16:6394:6459	411286	1	True				
ANR	412559	AssignmentExpression	c -> status [ 1 ] . sample2 = ( ( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 ) )		411286	0		=			
ANR	412560	MemberAccess	c -> status [ 1 ] . sample2		411286	0					
ANR	412561	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412562	PtrMemberAccess	c -> status		411286	0					
ANR	412563	Identifier	c		411286	0					
ANR	412564	Identifier	status		411286	1					
ANR	412565	PrimaryExpression	1		411286	1					
ANR	412566	Identifier	sample2		411286	1					
ANR	412567	InclusiveOrExpression	( * src & 0xFF ) | ( ( src [ 1 ] << 8 ) & 0xFF00 )		411286	1		|			
ANR	412568	BitAndExpression	* src & 0xFF		411286	0		&			
ANR	412569	UnaryOperationExpression	* src		411286	0					
ANR	412570	UnaryOperator	*		411286	0					
ANR	412571	Identifier	src		411286	1					
ANR	412572	PrimaryExpression	0xFF		411286	1					
ANR	412573	BitAndExpression	( src [ 1 ] << 8 ) & 0xFF00		411286	1		&			
ANR	412574	ShiftExpression	src [ 1 ] << 8		411286	0		<<			
ANR	412575	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412576	Identifier	src		411286	0					
ANR	412577	PrimaryExpression	1		411286	1					
ANR	412578	PrimaryExpression	8		411286	1					
ANR	412579	PrimaryExpression	0xFF00		411286	1					
ANR	412580	IfStatement	if ( st )		411286	56					
ANR	412581	Condition	st	351:12:6474:6475	411286	0	True				
ANR	412582	Identifier	st		411286	0					
ANR	412583	ExpressionStatement	src += 2	351:16:6478:6484	411286	1	True				
ANR	412584	AssignmentExpression	src += 2		411286	0		+=			
ANR	412585	Identifier	src		411286	0					
ANR	412586	PrimaryExpression	2		411286	1					
ANR	412587	ExpressionStatement	* samples ++ = c -> status [ 0 ] . sample1	355:8:6497:6530	411286	57	True				
ANR	412588	AssignmentExpression	* samples ++ = c -> status [ 0 ] . sample1		411286	0		=			
ANR	412589	UnaryOperationExpression	* samples ++		411286	0					
ANR	412590	UnaryOperator	*		411286	0					
ANR	412591	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412592	Identifier	samples		411286	0					
ANR	412593	IncDec	++		411286	1					
ANR	412594	MemberAccess	c -> status [ 0 ] . sample1		411286	1					
ANR	412595	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412596	PtrMemberAccess	c -> status		411286	0					
ANR	412597	Identifier	c		411286	0					
ANR	412598	Identifier	status		411286	1					
ANR	412599	PrimaryExpression	0		411286	1					
ANR	412600	Identifier	sample1		411286	1					
ANR	412601	IfStatement	if ( st )		411286	58					
ANR	412602	Condition	st	357:12:6545:6546	411286	0	True				
ANR	412603	Identifier	st		411286	0					
ANR	412604	ExpressionStatement	* samples ++ = c -> status [ 1 ] . sample1	357:16:6549:6582	411286	1	True				
ANR	412605	AssignmentExpression	* samples ++ = c -> status [ 1 ] . sample1		411286	0		=			
ANR	412606	UnaryOperationExpression	* samples ++		411286	0					
ANR	412607	UnaryOperator	*		411286	0					
ANR	412608	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412609	Identifier	samples		411286	0					
ANR	412610	IncDec	++		411286	1					
ANR	412611	MemberAccess	c -> status [ 1 ] . sample1		411286	1					
ANR	412612	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412613	PtrMemberAccess	c -> status		411286	0					
ANR	412614	Identifier	c		411286	0					
ANR	412615	Identifier	status		411286	1					
ANR	412616	PrimaryExpression	1		411286	1					
ANR	412617	Identifier	sample1		411286	1					
ANR	412618	ExpressionStatement	* samples ++ = c -> status [ 0 ] . sample2	359:8:6593:6626	411286	59	True				
ANR	412619	AssignmentExpression	* samples ++ = c -> status [ 0 ] . sample2		411286	0		=			
ANR	412620	UnaryOperationExpression	* samples ++		411286	0					
ANR	412621	UnaryOperator	*		411286	0					
ANR	412622	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412623	Identifier	samples		411286	0					
ANR	412624	IncDec	++		411286	1					
ANR	412625	MemberAccess	c -> status [ 0 ] . sample2		411286	1					
ANR	412626	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412627	PtrMemberAccess	c -> status		411286	0					
ANR	412628	Identifier	c		411286	0					
ANR	412629	Identifier	status		411286	1					
ANR	412630	PrimaryExpression	0		411286	1					
ANR	412631	Identifier	sample2		411286	1					
ANR	412632	IfStatement	if ( st )		411286	60					
ANR	412633	Condition	st	361:12:6641:6642	411286	0	True				
ANR	412634	Identifier	st		411286	0					
ANR	412635	ExpressionStatement	* samples ++ = c -> status [ 1 ] . sample2	361:16:6645:6678	411286	1	True				
ANR	412636	AssignmentExpression	* samples ++ = c -> status [ 1 ] . sample2		411286	0		=			
ANR	412637	UnaryOperationExpression	* samples ++		411286	0					
ANR	412638	UnaryOperator	*		411286	0					
ANR	412639	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412640	Identifier	samples		411286	0					
ANR	412641	IncDec	++		411286	1					
ANR	412642	MemberAccess	c -> status [ 1 ] . sample2		411286	1					
ANR	412643	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412644	PtrMemberAccess	c -> status		411286	0					
ANR	412645	Identifier	c		411286	0					
ANR	412646	Identifier	status		411286	1					
ANR	412647	PrimaryExpression	1		411286	1					
ANR	412648	Identifier	sample2		411286	1					
ANR	412649	ForStatement	for ( ; n > 0 ; n -- )		411286	61					
ANR	412650	Condition	n > 0	363:13:6694:6696	411286	0	True				
ANR	412651	RelationalExpression	n > 0		411286	0		>			
ANR	412652	Identifier	n		411286	0					
ANR	412653	PrimaryExpression	0		411286	1					
ANR	412654	PostIncDecOperationExpression	n --	363:17:6698:6700	411286	1	True				
ANR	412655	Identifier	n		411286	0					
ANR	412656	IncDec	--		411286	1					
ANR	412657	CompoundStatement		357:22:6528:6528	411286	2					
ANR	412658	ExpressionStatement	"* samples ++ = adpcm_ms_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"	365:12:6718:6784	411286	0	True				
ANR	412659	AssignmentExpression	"* samples ++ = adpcm_ms_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	0		=			
ANR	412660	UnaryOperationExpression	* samples ++		411286	0					
ANR	412661	UnaryOperator	*		411286	0					
ANR	412662	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412663	Identifier	samples		411286	0					
ANR	412664	IncDec	++		411286	1					
ANR	412665	CallExpression	"adpcm_ms_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	1					
ANR	412666	Callee	adpcm_ms_expand_nibble		411286	0					
ANR	412667	Identifier	adpcm_ms_expand_nibble		411286	0					
ANR	412668	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	412669	Argument	& c -> status [ 0 ]		411286	0					
ANR	412670	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	412671	UnaryOperator	&		411286	0					
ANR	412672	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	412673	PtrMemberAccess	c -> status		411286	0					
ANR	412674	Identifier	c		411286	0					
ANR	412675	Identifier	status		411286	1					
ANR	412676	PrimaryExpression	0		411286	1					
ANR	412677	Argument	src [ 0 ] >> 4		411286	1					
ANR	412678	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	412679	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412680	Identifier	src		411286	0					
ANR	412681	PrimaryExpression	0		411286	1					
ANR	412682	PrimaryExpression	4		411286	1					
ANR	412683	ExpressionStatement	"* samples ++ = adpcm_ms_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F )"	367:12:6799:6865	411286	1	True				
ANR	412684	AssignmentExpression	"* samples ++ = adpcm_ms_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F )"		411286	0		=			
ANR	412685	UnaryOperationExpression	* samples ++		411286	0					
ANR	412686	UnaryOperator	*		411286	0					
ANR	412687	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412688	Identifier	samples		411286	0					
ANR	412689	IncDec	++		411286	1					
ANR	412690	CallExpression	"adpcm_ms_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F )"		411286	1					
ANR	412691	Callee	adpcm_ms_expand_nibble		411286	0					
ANR	412692	Identifier	adpcm_ms_expand_nibble		411286	0					
ANR	412693	ArgumentList	& c -> status [ st ]		411286	1					
ANR	412694	Argument	& c -> status [ st ]		411286	0					
ANR	412695	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	412696	UnaryOperator	&		411286	0					
ANR	412697	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	412698	PtrMemberAccess	c -> status		411286	0					
ANR	412699	Identifier	c		411286	0					
ANR	412700	Identifier	status		411286	1					
ANR	412701	Identifier	st		411286	1					
ANR	412702	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	412703	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	412704	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412705	Identifier	src		411286	0					
ANR	412706	PrimaryExpression	0		411286	1					
ANR	412707	PrimaryExpression	0x0F		411286	1					
ANR	412708	ExpressionStatement	src ++	369:12:6880:6886	411286	2	True				
ANR	412709	PostIncDecOperationExpression	src ++		411286	0					
ANR	412710	Identifier	src		411286	0					
ANR	412711	IncDec	++		411286	1					
ANR	412712	BreakStatement	break ;	373:8:6908:6913	411286	62	True				
ANR	412713	Label	case CODEC_ID_ADPCM_IMA_DK4 :	375:4:6920:6947	411286	63	True				
ANR	412714	Identifier	CODEC_ID_ADPCM_IMA_DK4		411286	0					
ANR	412715	IfStatement	if ( avctx -> block_align != 0 && buf_size > avctx -> block_align )		411286	64					
ANR	412716	Condition	avctx -> block_align != 0 && buf_size > avctx -> block_align	377:12:6962:7017	411286	0	True				
ANR	412717	AndExpression	avctx -> block_align != 0 && buf_size > avctx -> block_align		411286	0		&&			
ANR	412718	EqualityExpression	avctx -> block_align != 0		411286	0		!=			
ANR	412719	PtrMemberAccess	avctx -> block_align		411286	0					
ANR	412720	Identifier	avctx		411286	0					
ANR	412721	Identifier	block_align		411286	1					
ANR	412722	PrimaryExpression	0		411286	1					
ANR	412723	RelationalExpression	buf_size > avctx -> block_align		411286	1		>			
ANR	412724	Identifier	buf_size		411286	0					
ANR	412725	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412726	Identifier	avctx		411286	0					
ANR	412727	Identifier	block_align		411286	1					
ANR	412728	ExpressionStatement	buf_size = avctx -> block_align	379:12:7033:7062	411286	1	True				
ANR	412729	AssignmentExpression	buf_size = avctx -> block_align		411286	0		=			
ANR	412730	Identifier	buf_size		411286	0					
ANR	412731	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412732	Identifier	avctx		411286	0					
ANR	412733	Identifier	block_align		411286	1					
ANR	412734	ExpressionStatement	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )	383:8:7075:7133	411286	65	True				
ANR	412735	AssignmentExpression	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	412736	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	412737	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412738	PtrMemberAccess	c -> status		411286	0					
ANR	412739	Identifier	c		411286	0					
ANR	412740	Identifier	status		411286	1					
ANR	412741	PrimaryExpression	0		411286	1					
ANR	412742	Identifier	predictor		411286	1					
ANR	412743	CastExpression	( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )		411286	1					
ANR	412744	CastTarget	int16_t		411286	0					
ANR	412745	InclusiveOrExpression	src [ 0 ] | ( src [ 1 ] << 8 )		411286	1		|			
ANR	412746	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412747	Identifier	src		411286	0					
ANR	412748	PrimaryExpression	0		411286	1					
ANR	412749	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412750	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412751	Identifier	src		411286	0					
ANR	412752	PrimaryExpression	1		411286	1					
ANR	412753	PrimaryExpression	8		411286	1					
ANR	412754	ExpressionStatement	c -> status [ 0 ] . step_index = src [ 2 ]	385:8:7144:7176	411286	66	True				
ANR	412755	AssignmentExpression	c -> status [ 0 ] . step_index = src [ 2 ]		411286	0		=			
ANR	412756	MemberAccess	c -> status [ 0 ] . step_index		411286	0					
ANR	412757	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412758	PtrMemberAccess	c -> status		411286	0					
ANR	412759	Identifier	c		411286	0					
ANR	412760	Identifier	status		411286	1					
ANR	412761	PrimaryExpression	0		411286	1					
ANR	412762	Identifier	step_index		411286	1					
ANR	412763	ArrayIndexing	src [ 2 ]		411286	1					
ANR	412764	Identifier	src		411286	0					
ANR	412765	PrimaryExpression	2		411286	1					
ANR	412766	ExpressionStatement	src += 4	387:8:7187:7195	411286	67	True				
ANR	412767	AssignmentExpression	src += 4		411286	0		+=			
ANR	412768	Identifier	src		411286	0					
ANR	412769	PrimaryExpression	4		411286	1					
ANR	412770	ExpressionStatement	* samples ++ = c -> status [ 0 ] . predictor	389:8:7206:7241	411286	68	True				
ANR	412771	AssignmentExpression	* samples ++ = c -> status [ 0 ] . predictor		411286	0		=			
ANR	412772	UnaryOperationExpression	* samples ++		411286	0					
ANR	412773	UnaryOperator	*		411286	0					
ANR	412774	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412775	Identifier	samples		411286	0					
ANR	412776	IncDec	++		411286	1					
ANR	412777	MemberAccess	c -> status [ 0 ] . predictor		411286	1					
ANR	412778	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412779	PtrMemberAccess	c -> status		411286	0					
ANR	412780	Identifier	c		411286	0					
ANR	412781	Identifier	status		411286	1					
ANR	412782	PrimaryExpression	0		411286	1					
ANR	412783	Identifier	predictor		411286	1					
ANR	412784	IfStatement	if ( st )		411286	69					
ANR	412785	Condition	st	391:12:7256:7257	411286	0	True				
ANR	412786	Identifier	st		411286	0					
ANR	412787	CompoundStatement		385:16:7085:7085	411286	1					
ANR	412788	ExpressionStatement	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )	393:12:7275:7333	411286	0	True				
ANR	412789	AssignmentExpression	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )		411286	0		=			
ANR	412790	MemberAccess	c -> status [ 1 ] . predictor		411286	0					
ANR	412791	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412792	PtrMemberAccess	c -> status		411286	0					
ANR	412793	Identifier	c		411286	0					
ANR	412794	Identifier	status		411286	1					
ANR	412795	PrimaryExpression	1		411286	1					
ANR	412796	Identifier	predictor		411286	1					
ANR	412797	CastExpression	( int16_t ) ( src [ 0 ] | ( src [ 1 ] << 8 ) )		411286	1					
ANR	412798	CastTarget	int16_t		411286	0					
ANR	412799	InclusiveOrExpression	src [ 0 ] | ( src [ 1 ] << 8 )		411286	1		|			
ANR	412800	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412801	Identifier	src		411286	0					
ANR	412802	PrimaryExpression	0		411286	1					
ANR	412803	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	412804	ArrayIndexing	src [ 1 ]		411286	0					
ANR	412805	Identifier	src		411286	0					
ANR	412806	PrimaryExpression	1		411286	1					
ANR	412807	PrimaryExpression	8		411286	1					
ANR	412808	ExpressionStatement	c -> status [ 1 ] . step_index = src [ 2 ]	395:12:7348:7380	411286	1	True				
ANR	412809	AssignmentExpression	c -> status [ 1 ] . step_index = src [ 2 ]		411286	0		=			
ANR	412810	MemberAccess	c -> status [ 1 ] . step_index		411286	0					
ANR	412811	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412812	PtrMemberAccess	c -> status		411286	0					
ANR	412813	Identifier	c		411286	0					
ANR	412814	Identifier	status		411286	1					
ANR	412815	PrimaryExpression	1		411286	1					
ANR	412816	Identifier	step_index		411286	1					
ANR	412817	ArrayIndexing	src [ 2 ]		411286	1					
ANR	412818	Identifier	src		411286	0					
ANR	412819	PrimaryExpression	2		411286	1					
ANR	412820	ExpressionStatement	src += 4	397:12:7395:7403	411286	2	True				
ANR	412821	AssignmentExpression	src += 4		411286	0		+=			
ANR	412822	Identifier	src		411286	0					
ANR	412823	PrimaryExpression	4		411286	1					
ANR	412824	ExpressionStatement	* samples ++ = c -> status [ 1 ] . predictor	399:12:7418:7453	411286	3	True				
ANR	412825	AssignmentExpression	* samples ++ = c -> status [ 1 ] . predictor		411286	0		=			
ANR	412826	UnaryOperationExpression	* samples ++		411286	0					
ANR	412827	UnaryOperator	*		411286	0					
ANR	412828	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412829	Identifier	samples		411286	0					
ANR	412830	IncDec	++		411286	1					
ANR	412831	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	412832	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412833	PtrMemberAccess	c -> status		411286	0					
ANR	412834	Identifier	c		411286	0					
ANR	412835	Identifier	status		411286	1					
ANR	412836	PrimaryExpression	1		411286	1					
ANR	412837	Identifier	predictor		411286	1					
ANR	412838	WhileStatement	while ( src < buf + buf_size )		411286	70					
ANR	412839	Condition	src < buf + buf_size	403:15:7482:7501	411286	0	True				
ANR	412840	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	412841	Identifier	src		411286	0					
ANR	412842	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	412843	Identifier	buf		411286	0					
ANR	412844	Identifier	buf_size		411286	1					
ANR	412845	CompoundStatement		397:37:7329:7329	411286	1					
ANR	412846	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"	409:12:7598:7682	411286	0	True				
ANR	412847	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	0		=			
ANR	412848	UnaryOperationExpression	* samples ++		411286	0					
ANR	412849	UnaryOperator	*		411286	0					
ANR	412850	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412851	Identifier	samples		411286	0					
ANR	412852	IncDec	++		411286	1					
ANR	412853	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	1					
ANR	412854	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412855	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412856	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	412857	Argument	& c -> status [ 0 ]		411286	0					
ANR	412858	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	412859	UnaryOperator	&		411286	0					
ANR	412860	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	412861	PtrMemberAccess	c -> status		411286	0					
ANR	412862	Identifier	c		411286	0					
ANR	412863	Identifier	status		411286	1					
ANR	412864	PrimaryExpression	0		411286	1					
ANR	412865	Argument	src [ 0 ] >> 4		411286	1					
ANR	412866	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	412867	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412868	Identifier	src		411286	0					
ANR	412869	PrimaryExpression	0		411286	1					
ANR	412870	PrimaryExpression	4		411286	1					
ANR	412871	Argument	3		411286	2					
ANR	412872	PrimaryExpression	3		411286	0					
ANR	412873	IfStatement	if ( st )		411286	1					
ANR	412874	Condition	st	419:16:7827:7828	411286	0	True				
ANR	412875	Identifier	st		411286	0					
ANR	412876	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"	421:16:7848:7938	411286	1	True				
ANR	412877	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"		411286	0		=			
ANR	412878	UnaryOperationExpression	* samples ++		411286	0					
ANR	412879	UnaryOperator	*		411286	0					
ANR	412880	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412881	Identifier	samples		411286	0					
ANR	412882	IncDec	++		411286	1					
ANR	412883	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"		411286	1					
ANR	412884	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412885	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412886	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	412887	Argument	& c -> status [ 1 ]		411286	0					
ANR	412888	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	412889	UnaryOperator	&		411286	0					
ANR	412890	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	412891	PtrMemberAccess	c -> status		411286	0					
ANR	412892	Identifier	c		411286	0					
ANR	412893	Identifier	status		411286	1					
ANR	412894	PrimaryExpression	1		411286	1					
ANR	412895	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	412896	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	412897	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412898	Identifier	src		411286	0					
ANR	412899	PrimaryExpression	0		411286	1					
ANR	412900	PrimaryExpression	0x0F		411286	1					
ANR	412901	Argument	3		411286	2					
ANR	412902	PrimaryExpression	3		411286	0					
ANR	412903	ElseStatement	else		411286	0					
ANR	412904	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"	427:16:7975:8065	411286	0	True				
ANR	412905	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"		411286	0		=			
ANR	412906	UnaryOperationExpression	* samples ++		411286	0					
ANR	412907	UnaryOperator	*		411286	0					
ANR	412908	PostIncDecOperationExpression	samples ++		411286	1					
ANR	412909	Identifier	samples		411286	0					
ANR	412910	IncDec	++		411286	1					
ANR	412911	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"		411286	1					
ANR	412912	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	412913	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	412914	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	412915	Argument	& c -> status [ 0 ]		411286	0					
ANR	412916	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	412917	UnaryOperator	&		411286	0					
ANR	412918	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	412919	PtrMemberAccess	c -> status		411286	0					
ANR	412920	Identifier	c		411286	0					
ANR	412921	Identifier	status		411286	1					
ANR	412922	PrimaryExpression	0		411286	1					
ANR	412923	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	412924	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	412925	ArrayIndexing	src [ 0 ]		411286	0					
ANR	412926	Identifier	src		411286	0					
ANR	412927	PrimaryExpression	0		411286	1					
ANR	412928	PrimaryExpression	0x0F		411286	1					
ANR	412929	Argument	3		411286	2					
ANR	412930	PrimaryExpression	3		411286	0					
ANR	412931	ExpressionStatement	src ++	433:12:8082:8087	411286	2	True				
ANR	412932	PostIncDecOperationExpression	src ++		411286	0					
ANR	412933	Identifier	src		411286	0					
ANR	412934	IncDec	++		411286	1					
ANR	412935	BreakStatement	break ;	437:8:8109:8114	411286	71	True				
ANR	412936	Label	case CODEC_ID_ADPCM_IMA_DK3 :	439:4:8121:8148	411286	72	True				
ANR	412937	Identifier	CODEC_ID_ADPCM_IMA_DK3		411286	0					
ANR	412938	IfStatement	if ( avctx -> block_align != 0 && buf_size > avctx -> block_align )		411286	73					
ANR	412939	Condition	avctx -> block_align != 0 && buf_size > avctx -> block_align	441:12:8163:8218	411286	0	True				
ANR	412940	AndExpression	avctx -> block_align != 0 && buf_size > avctx -> block_align		411286	0		&&			
ANR	412941	EqualityExpression	avctx -> block_align != 0		411286	0		!=			
ANR	412942	PtrMemberAccess	avctx -> block_align		411286	0					
ANR	412943	Identifier	avctx		411286	0					
ANR	412944	Identifier	block_align		411286	1					
ANR	412945	PrimaryExpression	0		411286	1					
ANR	412946	RelationalExpression	buf_size > avctx -> block_align		411286	1		>			
ANR	412947	Identifier	buf_size		411286	0					
ANR	412948	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412949	Identifier	avctx		411286	0					
ANR	412950	Identifier	block_align		411286	1					
ANR	412951	ExpressionStatement	buf_size = avctx -> block_align	443:12:8234:8263	411286	1	True				
ANR	412952	AssignmentExpression	buf_size = avctx -> block_align		411286	0		=			
ANR	412953	Identifier	buf_size		411286	0					
ANR	412954	PtrMemberAccess	avctx -> block_align		411286	1					
ANR	412955	Identifier	avctx		411286	0					
ANR	412956	Identifier	block_align		411286	1					
ANR	412957	IfStatement	if ( buf_size + 16 > ( samples_end - samples ) * 3 / 8 )		411286	74					
ANR	412958	Condition	buf_size + 16 > ( samples_end - samples ) * 3 / 8	447:11:8279:8321	411286	0	True				
ANR	412959	RelationalExpression	buf_size + 16 > ( samples_end - samples ) * 3 / 8		411286	0		>			
ANR	412960	AdditiveExpression	buf_size + 16		411286	0		+			
ANR	412961	Identifier	buf_size		411286	0					
ANR	412962	PrimaryExpression	16		411286	1					
ANR	412963	MultiplicativeExpression	( samples_end - samples ) * 3 / 8		411286	1		*			
ANR	412964	AdditiveExpression	samples_end - samples		411286	0		-			
ANR	412965	Identifier	samples_end		411286	0					
ANR	412966	Identifier	samples		411286	1					
ANR	412967	MultiplicativeExpression	3 / 8		411286	1		/			
ANR	412968	PrimaryExpression	3		411286	0					
ANR	412969	PrimaryExpression	8		411286	1					
ANR	412970	ReturnStatement	return - 1 ;	449:12:8337:8346	411286	1	True				
ANR	412971	UnaryOperationExpression	- 1		411286	0					
ANR	412972	UnaryOperator	-		411286	0					
ANR	412973	PrimaryExpression	1		411286	1					
ANR	412974	ExpressionStatement	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 10 ] | ( src [ 11 ] << 8 ) )	453:8:8359:8419	411286	75	True				
ANR	412975	AssignmentExpression	c -> status [ 0 ] . predictor = ( int16_t ) ( src [ 10 ] | ( src [ 11 ] << 8 ) )		411286	0		=			
ANR	412976	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	412977	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	412978	PtrMemberAccess	c -> status		411286	0					
ANR	412979	Identifier	c		411286	0					
ANR	412980	Identifier	status		411286	1					
ANR	412981	PrimaryExpression	0		411286	1					
ANR	412982	Identifier	predictor		411286	1					
ANR	412983	CastExpression	( int16_t ) ( src [ 10 ] | ( src [ 11 ] << 8 ) )		411286	1					
ANR	412984	CastTarget	int16_t		411286	0					
ANR	412985	InclusiveOrExpression	src [ 10 ] | ( src [ 11 ] << 8 )		411286	1		|			
ANR	412986	ArrayIndexing	src [ 10 ]		411286	0					
ANR	412987	Identifier	src		411286	0					
ANR	412988	PrimaryExpression	10		411286	1					
ANR	412989	ShiftExpression	src [ 11 ] << 8		411286	1		<<			
ANR	412990	ArrayIndexing	src [ 11 ]		411286	0					
ANR	412991	Identifier	src		411286	0					
ANR	412992	PrimaryExpression	11		411286	1					
ANR	412993	PrimaryExpression	8		411286	1					
ANR	412994	ExpressionStatement	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 12 ] | ( src [ 13 ] << 8 ) )	455:8:8430:8490	411286	76	True				
ANR	412995	AssignmentExpression	c -> status [ 1 ] . predictor = ( int16_t ) ( src [ 12 ] | ( src [ 13 ] << 8 ) )		411286	0		=			
ANR	412996	MemberAccess	c -> status [ 1 ] . predictor		411286	0					
ANR	412997	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	412998	PtrMemberAccess	c -> status		411286	0					
ANR	412999	Identifier	c		411286	0					
ANR	413000	Identifier	status		411286	1					
ANR	413001	PrimaryExpression	1		411286	1					
ANR	413002	Identifier	predictor		411286	1					
ANR	413003	CastExpression	( int16_t ) ( src [ 12 ] | ( src [ 13 ] << 8 ) )		411286	1					
ANR	413004	CastTarget	int16_t		411286	0					
ANR	413005	InclusiveOrExpression	src [ 12 ] | ( src [ 13 ] << 8 )		411286	1		|			
ANR	413006	ArrayIndexing	src [ 12 ]		411286	0					
ANR	413007	Identifier	src		411286	0					
ANR	413008	PrimaryExpression	12		411286	1					
ANR	413009	ShiftExpression	src [ 13 ] << 8		411286	1		<<			
ANR	413010	ArrayIndexing	src [ 13 ]		411286	0					
ANR	413011	Identifier	src		411286	0					
ANR	413012	PrimaryExpression	13		411286	1					
ANR	413013	PrimaryExpression	8		411286	1					
ANR	413014	ExpressionStatement	c -> status [ 0 ] . step_index = src [ 14 ]	457:8:8501:8534	411286	77	True				
ANR	413015	AssignmentExpression	c -> status [ 0 ] . step_index = src [ 14 ]		411286	0		=			
ANR	413016	MemberAccess	c -> status [ 0 ] . step_index		411286	0					
ANR	413017	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	413018	PtrMemberAccess	c -> status		411286	0					
ANR	413019	Identifier	c		411286	0					
ANR	413020	Identifier	status		411286	1					
ANR	413021	PrimaryExpression	0		411286	1					
ANR	413022	Identifier	step_index		411286	1					
ANR	413023	ArrayIndexing	src [ 14 ]		411286	1					
ANR	413024	Identifier	src		411286	0					
ANR	413025	PrimaryExpression	14		411286	1					
ANR	413026	ExpressionStatement	c -> status [ 1 ] . step_index = src [ 15 ]	459:8:8545:8578	411286	78	True				
ANR	413027	AssignmentExpression	c -> status [ 1 ] . step_index = src [ 15 ]		411286	0		=			
ANR	413028	MemberAccess	c -> status [ 1 ] . step_index		411286	0					
ANR	413029	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413030	PtrMemberAccess	c -> status		411286	0					
ANR	413031	Identifier	c		411286	0					
ANR	413032	Identifier	status		411286	1					
ANR	413033	PrimaryExpression	1		411286	1					
ANR	413034	Identifier	step_index		411286	1					
ANR	413035	ArrayIndexing	src [ 15 ]		411286	1					
ANR	413036	Identifier	src		411286	0					
ANR	413037	PrimaryExpression	15		411286	1					
ANR	413038	ExpressionStatement	src += 16	463:8:8631:8640	411286	79	True				
ANR	413039	AssignmentExpression	src += 16		411286	0		+=			
ANR	413040	Identifier	src		411286	0					
ANR	413041	PrimaryExpression	16		411286	1					
ANR	413042	ExpressionStatement	diff_channel = c -> status [ 1 ] . predictor	465:8:8651:8688	411286	80	True				
ANR	413043	AssignmentExpression	diff_channel = c -> status [ 1 ] . predictor		411286	0		=			
ANR	413044	Identifier	diff_channel		411286	0					
ANR	413045	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413046	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413047	PtrMemberAccess	c -> status		411286	0					
ANR	413048	Identifier	c		411286	0					
ANR	413049	Identifier	status		411286	1					
ANR	413050	PrimaryExpression	1		411286	1					
ANR	413051	Identifier	predictor		411286	1					
ANR	413052	WhileStatement	while ( 1 )		411286	81					
ANR	413053	Condition	1	473:15:8820:8820	411286	0	True				
ANR	413054	PrimaryExpression	1		411286	0					
ANR	413055	CompoundStatement		467:18:8648:8648	411286	1					
ANR	413056	ExpressionStatement	DK3_GET_NEXT_NIBBLE ( )	485:12:9032:9053	411286	0	True				
ANR	413057	CallExpression	DK3_GET_NEXT_NIBBLE ( )		411286	0					
ANR	413058	Callee	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413059	Identifier	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413060	ArgumentList			411286	1					
ANR	413061	ExpressionStatement	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , nibble , 3 )"	487:12:9068:9117	411286	1	True				
ANR	413062	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , nibble , 3 )"		411286	0					
ANR	413063	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413064	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413065	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413066	Argument	& c -> status [ 0 ]		411286	0					
ANR	413067	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413068	UnaryOperator	&		411286	0					
ANR	413069	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413070	PtrMemberAccess	c -> status		411286	0					
ANR	413071	Identifier	c		411286	0					
ANR	413072	Identifier	status		411286	1					
ANR	413073	PrimaryExpression	0		411286	1					
ANR	413074	Argument	nibble		411286	1					
ANR	413075	Identifier	nibble		411286	0					
ANR	413076	Argument	3		411286	2					
ANR	413077	PrimaryExpression	3		411286	0					
ANR	413078	ExpressionStatement	DK3_GET_NEXT_NIBBLE ( )	493:12:9188:9209	411286	2	True				
ANR	413079	CallExpression	DK3_GET_NEXT_NIBBLE ( )		411286	0					
ANR	413080	Callee	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413081	Identifier	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413082	ArgumentList			411286	1					
ANR	413083	ExpressionStatement	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , nibble , 3 )"	495:12:9224:9273	411286	3	True				
ANR	413084	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , nibble , 3 )"		411286	0					
ANR	413085	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413086	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413087	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	413088	Argument	& c -> status [ 1 ]		411286	0					
ANR	413089	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	413090	UnaryOperator	&		411286	0					
ANR	413091	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	413092	PtrMemberAccess	c -> status		411286	0					
ANR	413093	Identifier	c		411286	0					
ANR	413094	Identifier	status		411286	1					
ANR	413095	PrimaryExpression	1		411286	1					
ANR	413096	Argument	nibble		411286	1					
ANR	413097	Identifier	nibble		411286	0					
ANR	413098	Argument	3		411286	2					
ANR	413099	PrimaryExpression	3		411286	0					
ANR	413100	ExpressionStatement	diff_channel = ( diff_channel + c -> status [ 1 ] . predictor ) / 2	501:12:9354:9412	411286	4	True				
ANR	413101	AssignmentExpression	diff_channel = ( diff_channel + c -> status [ 1 ] . predictor ) / 2		411286	0		=			
ANR	413102	Identifier	diff_channel		411286	0					
ANR	413103	MultiplicativeExpression	( diff_channel + c -> status [ 1 ] . predictor ) / 2		411286	1		/			
ANR	413104	AdditiveExpression	diff_channel + c -> status [ 1 ] . predictor		411286	0		+			
ANR	413105	Identifier	diff_channel		411286	0					
ANR	413106	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413107	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413108	PtrMemberAccess	c -> status		411286	0					
ANR	413109	Identifier	c		411286	0					
ANR	413110	Identifier	status		411286	1					
ANR	413111	PrimaryExpression	1		411286	1					
ANR	413112	Identifier	predictor		411286	1					
ANR	413113	PrimaryExpression	2		411286	1					
ANR	413114	ExpressionStatement	* samples ++ = c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor	503:12:9427:9487	411286	5	True				
ANR	413115	AssignmentExpression	* samples ++ = c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor		411286	0		=			
ANR	413116	UnaryOperationExpression	* samples ++		411286	0					
ANR	413117	UnaryOperator	*		411286	0					
ANR	413118	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413119	Identifier	samples		411286	0					
ANR	413120	IncDec	++		411286	1					
ANR	413121	AdditiveExpression	c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor		411286	1		+			
ANR	413122	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	413123	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	413124	PtrMemberAccess	c -> status		411286	0					
ANR	413125	Identifier	c		411286	0					
ANR	413126	Identifier	status		411286	1					
ANR	413127	PrimaryExpression	0		411286	1					
ANR	413128	Identifier	predictor		411286	1					
ANR	413129	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413130	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413131	PtrMemberAccess	c -> status		411286	0					
ANR	413132	Identifier	c		411286	0					
ANR	413133	Identifier	status		411286	1					
ANR	413134	PrimaryExpression	1		411286	1					
ANR	413135	Identifier	predictor		411286	1					
ANR	413136	ExpressionStatement	* samples ++ = c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor	505:12:9502:9562	411286	6	True				
ANR	413137	AssignmentExpression	* samples ++ = c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor		411286	0		=			
ANR	413138	UnaryOperationExpression	* samples ++		411286	0					
ANR	413139	UnaryOperator	*		411286	0					
ANR	413140	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413141	Identifier	samples		411286	0					
ANR	413142	IncDec	++		411286	1					
ANR	413143	AdditiveExpression	c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor		411286	1		-			
ANR	413144	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	413145	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	413146	PtrMemberAccess	c -> status		411286	0					
ANR	413147	Identifier	c		411286	0					
ANR	413148	Identifier	status		411286	1					
ANR	413149	PrimaryExpression	0		411286	1					
ANR	413150	Identifier	predictor		411286	1					
ANR	413151	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413152	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413153	PtrMemberAccess	c -> status		411286	0					
ANR	413154	Identifier	c		411286	0					
ANR	413155	Identifier	status		411286	1					
ANR	413156	PrimaryExpression	1		411286	1					
ANR	413157	Identifier	predictor		411286	1					
ANR	413158	ExpressionStatement	DK3_GET_NEXT_NIBBLE ( )	511:12:9646:9667	411286	7	True				
ANR	413159	CallExpression	DK3_GET_NEXT_NIBBLE ( )		411286	0					
ANR	413160	Callee	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413161	Identifier	DK3_GET_NEXT_NIBBLE		411286	0					
ANR	413162	ArgumentList			411286	1					
ANR	413163	ExpressionStatement	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , nibble , 3 )"	513:12:9682:9731	411286	8	True				
ANR	413164	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , nibble , 3 )"		411286	0					
ANR	413165	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413166	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413167	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413168	Argument	& c -> status [ 0 ]		411286	0					
ANR	413169	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413170	UnaryOperator	&		411286	0					
ANR	413171	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413172	PtrMemberAccess	c -> status		411286	0					
ANR	413173	Identifier	c		411286	0					
ANR	413174	Identifier	status		411286	1					
ANR	413175	PrimaryExpression	0		411286	1					
ANR	413176	Argument	nibble		411286	1					
ANR	413177	Identifier	nibble		411286	0					
ANR	413178	Argument	3		411286	2					
ANR	413179	PrimaryExpression	3		411286	0					
ANR	413180	ExpressionStatement	diff_channel = ( diff_channel + c -> status [ 1 ] . predictor ) / 2	519:12:9813:9871	411286	9	True				
ANR	413181	AssignmentExpression	diff_channel = ( diff_channel + c -> status [ 1 ] . predictor ) / 2		411286	0		=			
ANR	413182	Identifier	diff_channel		411286	0					
ANR	413183	MultiplicativeExpression	( diff_channel + c -> status [ 1 ] . predictor ) / 2		411286	1		/			
ANR	413184	AdditiveExpression	diff_channel + c -> status [ 1 ] . predictor		411286	0		+			
ANR	413185	Identifier	diff_channel		411286	0					
ANR	413186	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413187	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413188	PtrMemberAccess	c -> status		411286	0					
ANR	413189	Identifier	c		411286	0					
ANR	413190	Identifier	status		411286	1					
ANR	413191	PrimaryExpression	1		411286	1					
ANR	413192	Identifier	predictor		411286	1					
ANR	413193	PrimaryExpression	2		411286	1					
ANR	413194	ExpressionStatement	* samples ++ = c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor	521:12:9886:9946	411286	10	True				
ANR	413195	AssignmentExpression	* samples ++ = c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor		411286	0		=			
ANR	413196	UnaryOperationExpression	* samples ++		411286	0					
ANR	413197	UnaryOperator	*		411286	0					
ANR	413198	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413199	Identifier	samples		411286	0					
ANR	413200	IncDec	++		411286	1					
ANR	413201	AdditiveExpression	c -> status [ 0 ] . predictor + c -> status [ 1 ] . predictor		411286	1		+			
ANR	413202	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	413203	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	413204	PtrMemberAccess	c -> status		411286	0					
ANR	413205	Identifier	c		411286	0					
ANR	413206	Identifier	status		411286	1					
ANR	413207	PrimaryExpression	0		411286	1					
ANR	413208	Identifier	predictor		411286	1					
ANR	413209	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413210	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413211	PtrMemberAccess	c -> status		411286	0					
ANR	413212	Identifier	c		411286	0					
ANR	413213	Identifier	status		411286	1					
ANR	413214	PrimaryExpression	1		411286	1					
ANR	413215	Identifier	predictor		411286	1					
ANR	413216	ExpressionStatement	* samples ++ = c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor	523:12:9961:10021	411286	11	True				
ANR	413217	AssignmentExpression	* samples ++ = c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor		411286	0		=			
ANR	413218	UnaryOperationExpression	* samples ++		411286	0					
ANR	413219	UnaryOperator	*		411286	0					
ANR	413220	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413221	Identifier	samples		411286	0					
ANR	413222	IncDec	++		411286	1					
ANR	413223	AdditiveExpression	c -> status [ 0 ] . predictor - c -> status [ 1 ] . predictor		411286	1		-			
ANR	413224	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	413225	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	413226	PtrMemberAccess	c -> status		411286	0					
ANR	413227	Identifier	c		411286	0					
ANR	413228	Identifier	status		411286	1					
ANR	413229	PrimaryExpression	0		411286	1					
ANR	413230	Identifier	predictor		411286	1					
ANR	413231	MemberAccess	c -> status [ 1 ] . predictor		411286	1					
ANR	413232	ArrayIndexing	c -> status [ 1 ]		411286	0					
ANR	413233	PtrMemberAccess	c -> status		411286	0					
ANR	413234	Identifier	c		411286	0					
ANR	413235	Identifier	status		411286	1					
ANR	413236	PrimaryExpression	1		411286	1					
ANR	413237	Identifier	predictor		411286	1					
ANR	413238	BreakStatement	break ;	527:8:10043:10048	411286	82	True				
ANR	413239	Label	case CODEC_ID_ADPCM_IMA_WS :	529:4:10055:10081	411286	83	True				
ANR	413240	Identifier	CODEC_ID_ADPCM_IMA_WS		411286	0					
ANR	413241	WhileStatement	while ( src < buf + buf_size )		411286	84					
ANR	413242	Condition	src < buf + buf_size	533:15:10172:10191	411286	0	True				
ANR	413243	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	413244	Identifier	src		411286	0					
ANR	413245	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	413246	Identifier	buf		411286	0					
ANR	413247	Identifier	buf_size		411286	1					
ANR	413248	CompoundStatement		527:37:10019:10019	411286	1					
ANR	413249	IfStatement	if ( st )		411286	0					
ANR	413250	Condition	st	537:16:10215:10216	411286	0	True				
ANR	413251	Identifier	st		411286	0					
ANR	413252	CompoundStatement		531:20:10044:10044	411286	1					
ANR	413253	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"	539:16:10238:10328	411286	0	True				
ANR	413254	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	0		=			
ANR	413255	UnaryOperationExpression	* samples ++		411286	0					
ANR	413256	UnaryOperator	*		411286	0					
ANR	413257	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413258	Identifier	samples		411286	0					
ANR	413259	IncDec	++		411286	1					
ANR	413260	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	1					
ANR	413261	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413262	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413263	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413264	Argument	& c -> status [ 0 ]		411286	0					
ANR	413265	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413266	UnaryOperator	&		411286	0					
ANR	413267	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413268	PtrMemberAccess	c -> status		411286	0					
ANR	413269	Identifier	c		411286	0					
ANR	413270	Identifier	status		411286	1					
ANR	413271	PrimaryExpression	0		411286	1					
ANR	413272	Argument	src [ 0 ] >> 4		411286	1					
ANR	413273	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	413274	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413275	Identifier	src		411286	0					
ANR	413276	PrimaryExpression	0		411286	1					
ANR	413277	PrimaryExpression	4		411286	1					
ANR	413278	Argument	3		411286	2					
ANR	413279	PrimaryExpression	3		411286	0					
ANR	413280	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"	543:16:10347:10437	411286	1	True				
ANR	413281	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"		411286	0		=			
ANR	413282	UnaryOperationExpression	* samples ++		411286	0					
ANR	413283	UnaryOperator	*		411286	0					
ANR	413284	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413285	Identifier	samples		411286	0					
ANR	413286	IncDec	++		411286	1					
ANR	413287	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F , 3 )"		411286	1					
ANR	413288	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413289	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413290	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	413291	Argument	& c -> status [ 1 ]		411286	0					
ANR	413292	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	413293	UnaryOperator	&		411286	0					
ANR	413294	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	413295	PtrMemberAccess	c -> status		411286	0					
ANR	413296	Identifier	c		411286	0					
ANR	413297	Identifier	status		411286	1					
ANR	413298	PrimaryExpression	1		411286	1					
ANR	413299	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	413300	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	413301	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413302	Identifier	src		411286	0					
ANR	413303	PrimaryExpression	0		411286	1					
ANR	413304	PrimaryExpression	0x0F		411286	1					
ANR	413305	Argument	3		411286	2					
ANR	413306	PrimaryExpression	3		411286	0					
ANR	413307	ElseStatement	else		411286	0					
ANR	413308	CompoundStatement		541:19:10284:10284	411286	0					
ANR	413309	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"	549:16:10478:10568	411286	0	True				
ANR	413310	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	0		=			
ANR	413311	UnaryOperationExpression	* samples ++		411286	0					
ANR	413312	UnaryOperator	*		411286	0					
ANR	413313	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413314	Identifier	samples		411286	0					
ANR	413315	IncDec	++		411286	1					
ANR	413316	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 3 )"		411286	1					
ANR	413317	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413318	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413319	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413320	Argument	& c -> status [ 0 ]		411286	0					
ANR	413321	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413322	UnaryOperator	&		411286	0					
ANR	413323	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413324	PtrMemberAccess	c -> status		411286	0					
ANR	413325	Identifier	c		411286	0					
ANR	413326	Identifier	status		411286	1					
ANR	413327	PrimaryExpression	0		411286	1					
ANR	413328	Argument	src [ 0 ] >> 4		411286	1					
ANR	413329	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	413330	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413331	Identifier	src		411286	0					
ANR	413332	PrimaryExpression	0		411286	1					
ANR	413333	PrimaryExpression	4		411286	1					
ANR	413334	Argument	3		411286	2					
ANR	413335	PrimaryExpression	3		411286	0					
ANR	413336	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"	553:16:10587:10677	411286	1	True				
ANR	413337	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"		411286	0		=			
ANR	413338	UnaryOperationExpression	* samples ++		411286	0					
ANR	413339	UnaryOperator	*		411286	0					
ANR	413340	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413341	Identifier	samples		411286	0					
ANR	413342	IncDec	++		411286	1					
ANR	413343	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F , 3 )"		411286	1					
ANR	413344	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413345	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413346	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413347	Argument	& c -> status [ 0 ]		411286	0					
ANR	413348	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413349	UnaryOperator	&		411286	0					
ANR	413350	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413351	PtrMemberAccess	c -> status		411286	0					
ANR	413352	Identifier	c		411286	0					
ANR	413353	Identifier	status		411286	1					
ANR	413354	PrimaryExpression	0		411286	1					
ANR	413355	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	413356	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	413357	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413358	Identifier	src		411286	0					
ANR	413359	PrimaryExpression	0		411286	1					
ANR	413360	PrimaryExpression	0x0F		411286	1					
ANR	413361	Argument	3		411286	2					
ANR	413362	PrimaryExpression	3		411286	0					
ANR	413363	ExpressionStatement	src ++	561:12:10709:10714	411286	1	True				
ANR	413364	PostIncDecOperationExpression	src ++		411286	0					
ANR	413365	Identifier	src		411286	0					
ANR	413366	IncDec	++		411286	1					
ANR	413367	BreakStatement	break ;	565:8:10736:10741	411286	85	True				
ANR	413368	Label	case CODEC_ID_ADPCM_XA :	567:4:10748:10770	411286	86	True				
ANR	413369	Identifier	CODEC_ID_ADPCM_XA		411286	0					
ANR	413370	WhileStatement	while ( buf_size >= 128 )		411286	87					
ANR	413371	Condition	buf_size >= 128	569:15:10788:10802	411286	0	True				
ANR	413372	RelationalExpression	buf_size >= 128		411286	0		>=			
ANR	413373	Identifier	buf_size		411286	0					
ANR	413374	PrimaryExpression	128		411286	1					
ANR	413375	CompoundStatement		563:32:10630:10630	411286	1					
ANR	413376	ExpressionStatement	"xa_decode ( samples , src , & c -> status [ 0 ] , & c -> status [ 1 ] , avctx -> channels )"	571:12:10820:10907	411286	0	True				
ANR	413377	CallExpression	"xa_decode ( samples , src , & c -> status [ 0 ] , & c -> status [ 1 ] , avctx -> channels )"		411286	0					
ANR	413378	Callee	xa_decode		411286	0					
ANR	413379	Identifier	xa_decode		411286	0					
ANR	413380	ArgumentList	samples		411286	1					
ANR	413381	Argument	samples		411286	0					
ANR	413382	Identifier	samples		411286	0					
ANR	413383	Argument	src		411286	1					
ANR	413384	Identifier	src		411286	0					
ANR	413385	Argument	& c -> status [ 0 ]		411286	2					
ANR	413386	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413387	UnaryOperator	&		411286	0					
ANR	413388	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413389	PtrMemberAccess	c -> status		411286	0					
ANR	413390	Identifier	c		411286	0					
ANR	413391	Identifier	status		411286	1					
ANR	413392	PrimaryExpression	0		411286	1					
ANR	413393	Argument	& c -> status [ 1 ]		411286	3					
ANR	413394	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	413395	UnaryOperator	&		411286	0					
ANR	413396	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	413397	PtrMemberAccess	c -> status		411286	0					
ANR	413398	Identifier	c		411286	0					
ANR	413399	Identifier	status		411286	1					
ANR	413400	PrimaryExpression	1		411286	1					
ANR	413401	Argument	avctx -> channels		411286	4					
ANR	413402	PtrMemberAccess	avctx -> channels		411286	0					
ANR	413403	Identifier	avctx		411286	0					
ANR	413404	Identifier	channels		411286	1					
ANR	413405	ExpressionStatement	src += 128	575:12:10922:10932	411286	1	True				
ANR	413406	AssignmentExpression	src += 128		411286	0		+=			
ANR	413407	Identifier	src		411286	0					
ANR	413408	PrimaryExpression	128		411286	1					
ANR	413409	ExpressionStatement	samples += 28 * 8	577:12:10947:10964	411286	2	True				
ANR	413410	AssignmentExpression	samples += 28 * 8		411286	0		+=			
ANR	413411	Identifier	samples		411286	0					
ANR	413412	MultiplicativeExpression	28 * 8		411286	1		*			
ANR	413413	PrimaryExpression	28		411286	0					
ANR	413414	PrimaryExpression	8		411286	1					
ANR	413415	ExpressionStatement	buf_size -= 128	579:12:10979:10994	411286	3	True				
ANR	413416	AssignmentExpression	buf_size -= 128		411286	0		-=			
ANR	413417	Identifier	buf_size		411286	0					
ANR	413418	PrimaryExpression	128		411286	1					
ANR	413419	BreakStatement	break ;	583:8:11016:11021	411286	88	True				
ANR	413420	Label	case CODEC_ID_ADPCM_IMA_EA_EACS :	585:4:11028:11059	411286	89	True				
ANR	413421	Identifier	CODEC_ID_ADPCM_IMA_EA_EACS		411286	0					
ANR	413422	ExpressionStatement	samples_in_chunk = bytestream_get_le32 ( & src ) >> ( 1 - st )	587:8:11070:11124	411286	90	True				
ANR	413423	AssignmentExpression	samples_in_chunk = bytestream_get_le32 ( & src ) >> ( 1 - st )		411286	0		=			
ANR	413424	Identifier	samples_in_chunk		411286	0					
ANR	413425	ShiftExpression	bytestream_get_le32 ( & src ) >> ( 1 - st )		411286	1		>>			
ANR	413426	CallExpression	bytestream_get_le32 ( & src )		411286	0					
ANR	413427	Callee	bytestream_get_le32		411286	0					
ANR	413428	Identifier	bytestream_get_le32		411286	0					
ANR	413429	ArgumentList	& src		411286	1					
ANR	413430	Argument	& src		411286	0					
ANR	413431	UnaryOperationExpression	& src		411286	0					
ANR	413432	UnaryOperator	&		411286	0					
ANR	413433	Identifier	src		411286	1					
ANR	413434	AdditiveExpression	1 - st		411286	1		-			
ANR	413435	PrimaryExpression	1		411286	0					
ANR	413436	Identifier	st		411286	1					
ANR	413437	IfStatement	if ( samples_in_chunk > buf_size - 4 - ( 8 << st ) )		411286	91					
ANR	413438	Condition	samples_in_chunk > buf_size - 4 - ( 8 << st )	591:12:11141:11177	411286	0	True				
ANR	413439	RelationalExpression	samples_in_chunk > buf_size - 4 - ( 8 << st )		411286	0		>			
ANR	413440	Identifier	samples_in_chunk		411286	0					
ANR	413441	AdditiveExpression	buf_size - 4 - ( 8 << st )		411286	1		-			
ANR	413442	Identifier	buf_size		411286	0					
ANR	413443	AdditiveExpression	4 - ( 8 << st )		411286	1		-			
ANR	413444	PrimaryExpression	4		411286	0					
ANR	413445	ShiftExpression	8 << st		411286	1		<<			
ANR	413446	PrimaryExpression	8		411286	0					
ANR	413447	Identifier	st		411286	1					
ANR	413448	CompoundStatement		585:51:11005:11005	411286	1					
ANR	413449	ExpressionStatement	src += buf_size - 4	593:12:11195:11214	411286	0	True				
ANR	413450	AssignmentExpression	src += buf_size - 4		411286	0		+=			
ANR	413451	Identifier	src		411286	0					
ANR	413452	AdditiveExpression	buf_size - 4		411286	1		-			
ANR	413453	Identifier	buf_size		411286	0					
ANR	413454	PrimaryExpression	4		411286	1					
ANR	413455	BreakStatement	break ;	595:12:11229:11234	411286	1	True				
ANR	413456	ForStatement	for ( i = 0 ; i <= st ; i ++ )		411286	92					
ANR	413457	ForInit	i = 0 ;	601:13:11263:11266	411286	0	True				
ANR	413458	AssignmentExpression	i = 0		411286	0		=			
ANR	413459	Identifier	i		411286	0					
ANR	413460	PrimaryExpression	0		411286	1					
ANR	413461	Condition	i <= st	601:18:11268:11272	411286	1	True				
ANR	413462	RelationalExpression	i <= st		411286	0		<=			
ANR	413463	Identifier	i		411286	0					
ANR	413464	Identifier	st		411286	1					
ANR	413465	PostIncDecOperationExpression	i ++	601:25:11275:11277	411286	2	True				
ANR	413466	Identifier	i		411286	0					
ANR	413467	IncDec	++		411286	1					
ANR	413468	ExpressionStatement	c -> status [ i ] . step_index = bytestream_get_le32 ( & src )	603:12:11293:11344	411286	3	True				
ANR	413469	AssignmentExpression	c -> status [ i ] . step_index = bytestream_get_le32 ( & src )		411286	0		=			
ANR	413470	MemberAccess	c -> status [ i ] . step_index		411286	0					
ANR	413471	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	413472	PtrMemberAccess	c -> status		411286	0					
ANR	413473	Identifier	c		411286	0					
ANR	413474	Identifier	status		411286	1					
ANR	413475	Identifier	i		411286	1					
ANR	413476	Identifier	step_index		411286	1					
ANR	413477	CallExpression	bytestream_get_le32 ( & src )		411286	1					
ANR	413478	Callee	bytestream_get_le32		411286	0					
ANR	413479	Identifier	bytestream_get_le32		411286	0					
ANR	413480	ArgumentList	& src		411286	1					
ANR	413481	Argument	& src		411286	0					
ANR	413482	UnaryOperationExpression	& src		411286	0					
ANR	413483	UnaryOperator	&		411286	0					
ANR	413484	Identifier	src		411286	1					
ANR	413485	ForStatement	for ( i = 0 ; i <= st ; i ++ )		411286	93					
ANR	413486	ForInit	i = 0 ;	605:13:11360:11363	411286	0	True				
ANR	413487	AssignmentExpression	i = 0		411286	0		=			
ANR	413488	Identifier	i		411286	0					
ANR	413489	PrimaryExpression	0		411286	1					
ANR	413490	Condition	i <= st	605:18:11365:11369	411286	1	True				
ANR	413491	RelationalExpression	i <= st		411286	0		<=			
ANR	413492	Identifier	i		411286	0					
ANR	413493	Identifier	st		411286	1					
ANR	413494	PostIncDecOperationExpression	i ++	605:25:11372:11374	411286	2	True				
ANR	413495	Identifier	i		411286	0					
ANR	413496	IncDec	++		411286	1					
ANR	413497	ExpressionStatement	c -> status [ i ] . predictor = bytestream_get_le32 ( & src )	607:12:11390:11441	411286	3	True				
ANR	413498	AssignmentExpression	c -> status [ i ] . predictor = bytestream_get_le32 ( & src )		411286	0		=			
ANR	413499	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	413500	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	413501	PtrMemberAccess	c -> status		411286	0					
ANR	413502	Identifier	c		411286	0					
ANR	413503	Identifier	status		411286	1					
ANR	413504	Identifier	i		411286	1					
ANR	413505	Identifier	predictor		411286	1					
ANR	413506	CallExpression	bytestream_get_le32 ( & src )		411286	1					
ANR	413507	Callee	bytestream_get_le32		411286	0					
ANR	413508	Identifier	bytestream_get_le32		411286	0					
ANR	413509	ArgumentList	& src		411286	1					
ANR	413510	Argument	& src		411286	0					
ANR	413511	UnaryOperationExpression	& src		411286	0					
ANR	413512	UnaryOperator	&		411286	0					
ANR	413513	Identifier	src		411286	1					
ANR	413514	ForStatement	"for ( ; samples_in_chunk ; samples_in_chunk -- , src ++ )"		411286	94					
ANR	413515	Condition	samples_in_chunk	611:15:11461:11476	411286	0	True				
ANR	413516	Identifier	samples_in_chunk		411286	0					
ANR	413517	Expression	"samples_in_chunk -- , src ++"	611:33:11479:11503	411286	1	True				
ANR	413518	PostIncDecOperationExpression	samples_in_chunk --		411286	0					
ANR	413519	Identifier	samples_in_chunk		411286	0					
ANR	413520	IncDec	--		411286	1					
ANR	413521	PostIncDecOperationExpression	src ++		411286	1					
ANR	413522	Identifier	src		411286	0					
ANR	413523	IncDec	++		411286	1					
ANR	413524	CompoundStatement		605:60:11331:11331	411286	2					
ANR	413525	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , * src >> 4 , 3 )"	613:12:11521:11587	411286	0	True				
ANR	413526	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , * src >> 4 , 3 )"		411286	0		=			
ANR	413527	UnaryOperationExpression	* samples ++		411286	0					
ANR	413528	UnaryOperator	*		411286	0					
ANR	413529	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413530	Identifier	samples		411286	0					
ANR	413531	IncDec	++		411286	1					
ANR	413532	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , * src >> 4 , 3 )"		411286	1					
ANR	413533	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413534	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413535	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413536	Argument	& c -> status [ 0 ]		411286	0					
ANR	413537	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413538	UnaryOperator	&		411286	0					
ANR	413539	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413540	PtrMemberAccess	c -> status		411286	0					
ANR	413541	Identifier	c		411286	0					
ANR	413542	Identifier	status		411286	1					
ANR	413543	PrimaryExpression	0		411286	1					
ANR	413544	Argument	* src >> 4		411286	1					
ANR	413545	ShiftExpression	* src >> 4		411286	0		>>			
ANR	413546	UnaryOperationExpression	* src		411286	0					
ANR	413547	UnaryOperator	*		411286	0					
ANR	413548	Identifier	src		411286	1					
ANR	413549	PrimaryExpression	4		411286	1					
ANR	413550	Argument	3		411286	2					
ANR	413551	PrimaryExpression	3		411286	0					
ANR	413552	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ st ] , * src & 0x0F , 3 )"	615:12:11602:11668	411286	1	True				
ANR	413553	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ st ] , * src & 0x0F , 3 )"		411286	0		=			
ANR	413554	UnaryOperationExpression	* samples ++		411286	0					
ANR	413555	UnaryOperator	*		411286	0					
ANR	413556	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413557	Identifier	samples		411286	0					
ANR	413558	IncDec	++		411286	1					
ANR	413559	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ st ] , * src & 0x0F , 3 )"		411286	1					
ANR	413560	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413561	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413562	ArgumentList	& c -> status [ st ]		411286	1					
ANR	413563	Argument	& c -> status [ st ]		411286	0					
ANR	413564	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	413565	UnaryOperator	&		411286	0					
ANR	413566	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	413567	PtrMemberAccess	c -> status		411286	0					
ANR	413568	Identifier	c		411286	0					
ANR	413569	Identifier	status		411286	1					
ANR	413570	Identifier	st		411286	1					
ANR	413571	Argument	* src & 0x0F		411286	1					
ANR	413572	BitAndExpression	* src & 0x0F		411286	0		&			
ANR	413573	UnaryOperationExpression	* src		411286	0					
ANR	413574	UnaryOperator	*		411286	0					
ANR	413575	Identifier	src		411286	1					
ANR	413576	PrimaryExpression	0x0F		411286	1					
ANR	413577	Argument	3		411286	2					
ANR	413578	PrimaryExpression	3		411286	0					
ANR	413579	BreakStatement	break ;	619:8:11690:11695	411286	95	True				
ANR	413580	Label	case CODEC_ID_ADPCM_IMA_EA_SEAD :	621:4:11702:11733	411286	96	True				
ANR	413581	Identifier	CODEC_ID_ADPCM_IMA_EA_SEAD		411286	0					
ANR	413582	ForStatement	for ( ; src < buf + buf_size ; src ++ )		411286	97					
ANR	413583	Condition	src < buf + buf_size	623:15:11751:11768	411286	0	True				
ANR	413584	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	413585	Identifier	src		411286	0					
ANR	413586	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	413587	Identifier	buf		411286	0					
ANR	413588	Identifier	buf_size		411286	1					
ANR	413589	PostIncDecOperationExpression	src ++	623:35:11771:11775	411286	1	True				
ANR	413590	Identifier	src		411286	0					
ANR	413591	IncDec	++		411286	1					
ANR	413592	CompoundStatement		617:42:11603:11603	411286	2					
ANR	413593	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 6 )"	625:12:11793:11860	411286	0	True				
ANR	413594	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 6 )"		411286	0		=			
ANR	413595	UnaryOperationExpression	* samples ++		411286	0					
ANR	413596	UnaryOperator	*		411286	0					
ANR	413597	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413598	Identifier	samples		411286	0					
ANR	413599	IncDec	++		411286	1					
ANR	413600	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 6 )"		411286	1					
ANR	413601	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413602	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413603	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	413604	Argument	& c -> status [ 0 ]		411286	0					
ANR	413605	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	413606	UnaryOperator	&		411286	0					
ANR	413607	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	413608	PtrMemberAccess	c -> status		411286	0					
ANR	413609	Identifier	c		411286	0					
ANR	413610	Identifier	status		411286	1					
ANR	413611	PrimaryExpression	0		411286	1					
ANR	413612	Argument	src [ 0 ] >> 4		411286	1					
ANR	413613	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	413614	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413615	Identifier	src		411286	0					
ANR	413616	PrimaryExpression	0		411286	1					
ANR	413617	PrimaryExpression	4		411286	1					
ANR	413618	Argument	6		411286	2					
ANR	413619	PrimaryExpression	6		411286	0					
ANR	413620	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 6 )"	627:12:11875:11942	411286	1	True				
ANR	413621	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 6 )"		411286	0		=			
ANR	413622	UnaryOperationExpression	* samples ++		411286	0					
ANR	413623	UnaryOperator	*		411286	0					
ANR	413624	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413625	Identifier	samples		411286	0					
ANR	413626	IncDec	++		411286	1					
ANR	413627	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 6 )"		411286	1					
ANR	413628	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	413629	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	413630	ArgumentList	& c -> status [ st ]		411286	1					
ANR	413631	Argument	& c -> status [ st ]		411286	0					
ANR	413632	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	413633	UnaryOperator	&		411286	0					
ANR	413634	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	413635	PtrMemberAccess	c -> status		411286	0					
ANR	413636	Identifier	c		411286	0					
ANR	413637	Identifier	status		411286	1					
ANR	413638	Identifier	st		411286	1					
ANR	413639	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	413640	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	413641	ArrayIndexing	src [ 0 ]		411286	0					
ANR	413642	Identifier	src		411286	0					
ANR	413643	PrimaryExpression	0		411286	1					
ANR	413644	PrimaryExpression	0x0F		411286	1					
ANR	413645	Argument	6		411286	2					
ANR	413646	PrimaryExpression	6		411286	0					
ANR	413647	BreakStatement	break ;	631:8:11964:11969	411286	98	True				
ANR	413648	Label	case CODEC_ID_ADPCM_EA :	633:4:11976:11998	411286	99	True				
ANR	413649	Identifier	CODEC_ID_ADPCM_EA		411286	0					
ANR	413650	ExpressionStatement	samples_in_chunk = AV_RL32 ( src )	635:8:12009:12040	411286	100	True				
ANR	413651	AssignmentExpression	samples_in_chunk = AV_RL32 ( src )		411286	0		=			
ANR	413652	Identifier	samples_in_chunk		411286	0					
ANR	413653	CallExpression	AV_RL32 ( src )		411286	1					
ANR	413654	Callee	AV_RL32		411286	0					
ANR	413655	Identifier	AV_RL32		411286	0					
ANR	413656	ArgumentList	src		411286	1					
ANR	413657	Argument	src		411286	0					
ANR	413658	Identifier	src		411286	0					
ANR	413659	IfStatement	if ( samples_in_chunk >= ( ( buf_size - 12 ) * 2 ) )		411286	101					
ANR	413660	Condition	samples_in_chunk >= ( ( buf_size - 12 ) * 2 )	637:12:12055:12095	411286	0	True				
ANR	413661	RelationalExpression	samples_in_chunk >= ( ( buf_size - 12 ) * 2 )		411286	0		>=			
ANR	413662	Identifier	samples_in_chunk		411286	0					
ANR	413663	MultiplicativeExpression	( buf_size - 12 ) * 2		411286	1		*			
ANR	413664	AdditiveExpression	buf_size - 12		411286	0		-			
ANR	413665	Identifier	buf_size		411286	0					
ANR	413666	PrimaryExpression	12		411286	1					
ANR	413667	PrimaryExpression	2		411286	1					
ANR	413668	CompoundStatement		631:55:11923:11923	411286	1					
ANR	413669	ExpressionStatement	src += buf_size	639:12:12113:12128	411286	0	True				
ANR	413670	AssignmentExpression	src += buf_size		411286	0		+=			
ANR	413671	Identifier	src		411286	0					
ANR	413672	Identifier	buf_size		411286	1					
ANR	413673	BreakStatement	break ;	641:12:12143:12148	411286	1	True				
ANR	413674	ExpressionStatement	src += 4	645:8:12170:12178	411286	102	True				
ANR	413675	AssignmentExpression	src += 4		411286	0		+=			
ANR	413676	Identifier	src		411286	0					
ANR	413677	PrimaryExpression	4		411286	1					
ANR	413678	ExpressionStatement	current_left_sample = ( int16_t ) AV_RL16 ( src )	647:8:12189:12232	411286	103	True				
ANR	413679	AssignmentExpression	current_left_sample = ( int16_t ) AV_RL16 ( src )		411286	0		=			
ANR	413680	Identifier	current_left_sample		411286	0					
ANR	413681	CastExpression	( int16_t ) AV_RL16 ( src )		411286	1					
ANR	413682	CastTarget	int16_t		411286	0					
ANR	413683	CallExpression	AV_RL16 ( src )		411286	1					
ANR	413684	Callee	AV_RL16		411286	0					
ANR	413685	Identifier	AV_RL16		411286	0					
ANR	413686	ArgumentList	src		411286	1					
ANR	413687	Argument	src		411286	0					
ANR	413688	Identifier	src		411286	0					
ANR	413689	ExpressionStatement	src += 2	649:8:12243:12251	411286	104	True				
ANR	413690	AssignmentExpression	src += 2		411286	0		+=			
ANR	413691	Identifier	src		411286	0					
ANR	413692	PrimaryExpression	2		411286	1					
ANR	413693	ExpressionStatement	previous_left_sample = ( int16_t ) AV_RL16 ( src )	651:8:12262:12306	411286	105	True				
ANR	413694	AssignmentExpression	previous_left_sample = ( int16_t ) AV_RL16 ( src )		411286	0		=			
ANR	413695	Identifier	previous_left_sample		411286	0					
ANR	413696	CastExpression	( int16_t ) AV_RL16 ( src )		411286	1					
ANR	413697	CastTarget	int16_t		411286	0					
ANR	413698	CallExpression	AV_RL16 ( src )		411286	1					
ANR	413699	Callee	AV_RL16		411286	0					
ANR	413700	Identifier	AV_RL16		411286	0					
ANR	413701	ArgumentList	src		411286	1					
ANR	413702	Argument	src		411286	0					
ANR	413703	Identifier	src		411286	0					
ANR	413704	ExpressionStatement	src += 2	653:8:12317:12325	411286	106	True				
ANR	413705	AssignmentExpression	src += 2		411286	0		+=			
ANR	413706	Identifier	src		411286	0					
ANR	413707	PrimaryExpression	2		411286	1					
ANR	413708	ExpressionStatement	current_right_sample = ( int16_t ) AV_RL16 ( src )	655:8:12336:12380	411286	107	True				
ANR	413709	AssignmentExpression	current_right_sample = ( int16_t ) AV_RL16 ( src )		411286	0		=			
ANR	413710	Identifier	current_right_sample		411286	0					
ANR	413711	CastExpression	( int16_t ) AV_RL16 ( src )		411286	1					
ANR	413712	CastTarget	int16_t		411286	0					
ANR	413713	CallExpression	AV_RL16 ( src )		411286	1					
ANR	413714	Callee	AV_RL16		411286	0					
ANR	413715	Identifier	AV_RL16		411286	0					
ANR	413716	ArgumentList	src		411286	1					
ANR	413717	Argument	src		411286	0					
ANR	413718	Identifier	src		411286	0					
ANR	413719	ExpressionStatement	src += 2	657:8:12391:12399	411286	108	True				
ANR	413720	AssignmentExpression	src += 2		411286	0		+=			
ANR	413721	Identifier	src		411286	0					
ANR	413722	PrimaryExpression	2		411286	1					
ANR	413723	ExpressionStatement	previous_right_sample = ( int16_t ) AV_RL16 ( src )	659:8:12410:12455	411286	109	True				
ANR	413724	AssignmentExpression	previous_right_sample = ( int16_t ) AV_RL16 ( src )		411286	0		=			
ANR	413725	Identifier	previous_right_sample		411286	0					
ANR	413726	CastExpression	( int16_t ) AV_RL16 ( src )		411286	1					
ANR	413727	CastTarget	int16_t		411286	0					
ANR	413728	CallExpression	AV_RL16 ( src )		411286	1					
ANR	413729	Callee	AV_RL16		411286	0					
ANR	413730	Identifier	AV_RL16		411286	0					
ANR	413731	ArgumentList	src		411286	1					
ANR	413732	Argument	src		411286	0					
ANR	413733	Identifier	src		411286	0					
ANR	413734	ExpressionStatement	src += 2	661:8:12466:12474	411286	110	True				
ANR	413735	AssignmentExpression	src += 2		411286	0		+=			
ANR	413736	Identifier	src		411286	0					
ANR	413737	PrimaryExpression	2		411286	1					
ANR	413738	ForStatement	for ( count1 = 0 ; count1 < samples_in_chunk / 28 ; count1 ++ )		411286	111					
ANR	413739	ForInit	count1 = 0 ;	665:13:12492:12502	411286	0	True				
ANR	413740	AssignmentExpression	count1 = 0		411286	0		=			
ANR	413741	Identifier	count1		411286	0					
ANR	413742	PrimaryExpression	0		411286	1					
ANR	413743	Condition	count1 < samples_in_chunk / 28	665:25:12504:12531	411286	1	True				
ANR	413744	RelationalExpression	count1 < samples_in_chunk / 28		411286	0		<			
ANR	413745	Identifier	count1		411286	0					
ANR	413746	MultiplicativeExpression	samples_in_chunk / 28		411286	1		/			
ANR	413747	Identifier	samples_in_chunk		411286	0					
ANR	413748	PrimaryExpression	28		411286	1					
ANR	413749	PostIncDecOperationExpression	count1 ++	665:54:12533:12540	411286	2	True				
ANR	413750	Identifier	count1		411286	0					
ANR	413751	IncDec	++		411286	1					
ANR	413752	CompoundStatement		659:64:12368:12368	411286	3					
ANR	413753	ExpressionStatement	coeff1l = ea_adpcm_table [ * src >> 4 ]	667:12:12558:12601	411286	0	True				
ANR	413754	AssignmentExpression	coeff1l = ea_adpcm_table [ * src >> 4 ]		411286	0		=			
ANR	413755	Identifier	coeff1l		411286	0					
ANR	413756	ArrayIndexing	ea_adpcm_table [ * src >> 4 ]		411286	1					
ANR	413757	Identifier	ea_adpcm_table		411286	0					
ANR	413758	ShiftExpression	* src >> 4		411286	1		>>			
ANR	413759	UnaryOperationExpression	* src		411286	0					
ANR	413760	UnaryOperator	*		411286	0					
ANR	413761	Identifier	src		411286	1					
ANR	413762	PrimaryExpression	4		411286	1					
ANR	413763	ExpressionStatement	coeff2l = ea_adpcm_table [ ( * src >> 4 ) + 4 ]	669:12:12616:12659	411286	1	True				
ANR	413764	AssignmentExpression	coeff2l = ea_adpcm_table [ ( * src >> 4 ) + 4 ]		411286	0		=			
ANR	413765	Identifier	coeff2l		411286	0					
ANR	413766	ArrayIndexing	ea_adpcm_table [ ( * src >> 4 ) + 4 ]		411286	1					
ANR	413767	Identifier	ea_adpcm_table		411286	0					
ANR	413768	AdditiveExpression	( * src >> 4 ) + 4		411286	1		+			
ANR	413769	ShiftExpression	* src >> 4		411286	0		>>			
ANR	413770	UnaryOperationExpression	* src		411286	0					
ANR	413771	UnaryOperator	*		411286	0					
ANR	413772	Identifier	src		411286	1					
ANR	413773	PrimaryExpression	4		411286	1					
ANR	413774	PrimaryExpression	4		411286	1					
ANR	413775	ExpressionStatement	coeff1r = ea_adpcm_table [ * src & 0x0F ]	671:12:12674:12711	411286	2	True				
ANR	413776	AssignmentExpression	coeff1r = ea_adpcm_table [ * src & 0x0F ]		411286	0		=			
ANR	413777	Identifier	coeff1r		411286	0					
ANR	413778	ArrayIndexing	ea_adpcm_table [ * src & 0x0F ]		411286	1					
ANR	413779	Identifier	ea_adpcm_table		411286	0					
ANR	413780	BitAndExpression	* src & 0x0F		411286	1		&			
ANR	413781	UnaryOperationExpression	* src		411286	0					
ANR	413782	UnaryOperator	*		411286	0					
ANR	413783	Identifier	src		411286	1					
ANR	413784	PrimaryExpression	0x0F		411286	1					
ANR	413785	ExpressionStatement	coeff2r = ea_adpcm_table [ ( * src & 0x0F ) + 4 ]	673:12:12726:12769	411286	3	True				
ANR	413786	AssignmentExpression	coeff2r = ea_adpcm_table [ ( * src & 0x0F ) + 4 ]		411286	0		=			
ANR	413787	Identifier	coeff2r		411286	0					
ANR	413788	ArrayIndexing	ea_adpcm_table [ ( * src & 0x0F ) + 4 ]		411286	1					
ANR	413789	Identifier	ea_adpcm_table		411286	0					
ANR	413790	AdditiveExpression	( * src & 0x0F ) + 4		411286	1		+			
ANR	413791	BitAndExpression	* src & 0x0F		411286	0		&			
ANR	413792	UnaryOperationExpression	* src		411286	0					
ANR	413793	UnaryOperator	*		411286	0					
ANR	413794	Identifier	src		411286	1					
ANR	413795	PrimaryExpression	0x0F		411286	1					
ANR	413796	PrimaryExpression	4		411286	1					
ANR	413797	ExpressionStatement	src ++	675:12:12784:12789	411286	4	True				
ANR	413798	PostIncDecOperationExpression	src ++		411286	0					
ANR	413799	Identifier	src		411286	0					
ANR	413800	IncDec	++		411286	1					
ANR	413801	ExpressionStatement	shift_left = ( * src >> 4 ) + 8	679:12:12806:12837	411286	5	True				
ANR	413802	AssignmentExpression	shift_left = ( * src >> 4 ) + 8		411286	0		=			
ANR	413803	Identifier	shift_left		411286	0					
ANR	413804	AdditiveExpression	( * src >> 4 ) + 8		411286	1		+			
ANR	413805	ShiftExpression	* src >> 4		411286	0		>>			
ANR	413806	UnaryOperationExpression	* src		411286	0					
ANR	413807	UnaryOperator	*		411286	0					
ANR	413808	Identifier	src		411286	1					
ANR	413809	PrimaryExpression	4		411286	1					
ANR	413810	PrimaryExpression	8		411286	1					
ANR	413811	ExpressionStatement	shift_right = ( * src & 0x0F ) + 8	681:12:12852:12883	411286	6	True				
ANR	413812	AssignmentExpression	shift_right = ( * src & 0x0F ) + 8		411286	0		=			
ANR	413813	Identifier	shift_right		411286	0					
ANR	413814	AdditiveExpression	( * src & 0x0F ) + 8		411286	1		+			
ANR	413815	BitAndExpression	* src & 0x0F		411286	0		&			
ANR	413816	UnaryOperationExpression	* src		411286	0					
ANR	413817	UnaryOperator	*		411286	0					
ANR	413818	Identifier	src		411286	1					
ANR	413819	PrimaryExpression	0x0F		411286	1					
ANR	413820	PrimaryExpression	8		411286	1					
ANR	413821	ExpressionStatement	src ++	683:12:12898:12903	411286	7	True				
ANR	413822	PostIncDecOperationExpression	src ++		411286	0					
ANR	413823	Identifier	src		411286	0					
ANR	413824	IncDec	++		411286	1					
ANR	413825	ForStatement	for ( count2 = 0 ; count2 < 28 ; count2 ++ )		411286	8					
ANR	413826	ForInit	count2 = 0 ;	687:17:12925:12935	411286	0	True				
ANR	413827	AssignmentExpression	count2 = 0		411286	0		=			
ANR	413828	Identifier	count2		411286	0					
ANR	413829	PrimaryExpression	0		411286	1					
ANR	413830	Condition	count2 < 28	687:29:12937:12947	411286	1	True				
ANR	413831	RelationalExpression	count2 < 28		411286	0		<			
ANR	413832	Identifier	count2		411286	0					
ANR	413833	PrimaryExpression	28		411286	1					
ANR	413834	PostIncDecOperationExpression	count2 ++	687:42:12950:12957	411286	2	True				
ANR	413835	Identifier	count2		411286	0					
ANR	413836	IncDec	++		411286	1					
ANR	413837	CompoundStatement		681:52:12785:12785	411286	3					
ANR	413838	ExpressionStatement	next_left_sample = ( int32_t ) ( ( * src & 0xF0 ) << 24 ) >> shift_left	689:16:12979:13043	411286	0	True				
ANR	413839	AssignmentExpression	next_left_sample = ( int32_t ) ( ( * src & 0xF0 ) << 24 ) >> shift_left		411286	0		=			
ANR	413840	Identifier	next_left_sample		411286	0					
ANR	413841	ShiftExpression	( int32_t ) ( ( * src & 0xF0 ) << 24 ) >> shift_left		411286	1		>>			
ANR	413842	CastExpression	( int32_t ) ( ( * src & 0xF0 ) << 24 )		411286	0					
ANR	413843	CastTarget	int32_t		411286	0					
ANR	413844	ShiftExpression	( * src & 0xF0 ) << 24		411286	1		<<			
ANR	413845	BitAndExpression	* src & 0xF0		411286	0		&			
ANR	413846	UnaryOperationExpression	* src		411286	0					
ANR	413847	UnaryOperator	*		411286	0					
ANR	413848	Identifier	src		411286	1					
ANR	413849	PrimaryExpression	0xF0		411286	1					
ANR	413850	PrimaryExpression	24		411286	1					
ANR	413851	Identifier	shift_left		411286	1					
ANR	413852	ExpressionStatement	next_right_sample = ( int32_t ) ( ( * src & 0x0F ) << 28 ) >> shift_right	691:16:13062:13127	411286	1	True				
ANR	413853	AssignmentExpression	next_right_sample = ( int32_t ) ( ( * src & 0x0F ) << 28 ) >> shift_right		411286	0		=			
ANR	413854	Identifier	next_right_sample		411286	0					
ANR	413855	ShiftExpression	( int32_t ) ( ( * src & 0x0F ) << 28 ) >> shift_right		411286	1		>>			
ANR	413856	CastExpression	( int32_t ) ( ( * src & 0x0F ) << 28 )		411286	0					
ANR	413857	CastTarget	int32_t		411286	0					
ANR	413858	ShiftExpression	( * src & 0x0F ) << 28		411286	1		<<			
ANR	413859	BitAndExpression	* src & 0x0F		411286	0		&			
ANR	413860	UnaryOperationExpression	* src		411286	0					
ANR	413861	UnaryOperator	*		411286	0					
ANR	413862	Identifier	src		411286	1					
ANR	413863	PrimaryExpression	0x0F		411286	1					
ANR	413864	PrimaryExpression	28		411286	1					
ANR	413865	Identifier	shift_right		411286	1					
ANR	413866	ExpressionStatement	src ++	693:16:13146:13151	411286	2	True				
ANR	413867	PostIncDecOperationExpression	src ++		411286	0					
ANR	413868	Identifier	src		411286	0					
ANR	413869	IncDec	++		411286	1					
ANR	413870	ExpressionStatement	next_left_sample = ( next_left_sample + ( current_left_sample * coeff1l ) + ( previous_left_sample * coeff2l ) + 0x80 ) >> 8	697:16:13172:13332	411286	3	True				
ANR	413871	AssignmentExpression	next_left_sample = ( next_left_sample + ( current_left_sample * coeff1l ) + ( previous_left_sample * coeff2l ) + 0x80 ) >> 8		411286	0		=			
ANR	413872	Identifier	next_left_sample		411286	0					
ANR	413873	ShiftExpression	( next_left_sample + ( current_left_sample * coeff1l ) + ( previous_left_sample * coeff2l ) + 0x80 ) >> 8		411286	1		>>			
ANR	413874	AdditiveExpression	next_left_sample + ( current_left_sample * coeff1l ) + ( previous_left_sample * coeff2l ) + 0x80		411286	0		+			
ANR	413875	Identifier	next_left_sample		411286	0					
ANR	413876	AdditiveExpression	( current_left_sample * coeff1l ) + ( previous_left_sample * coeff2l ) + 0x80		411286	1		+			
ANR	413877	MultiplicativeExpression	current_left_sample * coeff1l		411286	0		*			
ANR	413878	Identifier	current_left_sample		411286	0					
ANR	413879	Identifier	coeff1l		411286	1					
ANR	413880	AdditiveExpression	( previous_left_sample * coeff2l ) + 0x80		411286	1		+			
ANR	413881	MultiplicativeExpression	previous_left_sample * coeff2l		411286	0		*			
ANR	413882	Identifier	previous_left_sample		411286	0					
ANR	413883	Identifier	coeff2l		411286	1					
ANR	413884	PrimaryExpression	0x80		411286	1					
ANR	413885	PrimaryExpression	8		411286	1					
ANR	413886	ExpressionStatement	next_right_sample = ( next_right_sample + ( current_right_sample * coeff1r ) + ( previous_right_sample * coeff2r ) + 0x80 ) >> 8	703:16:13351:13515	411286	4	True				
ANR	413887	AssignmentExpression	next_right_sample = ( next_right_sample + ( current_right_sample * coeff1r ) + ( previous_right_sample * coeff2r ) + 0x80 ) >> 8		411286	0		=			
ANR	413888	Identifier	next_right_sample		411286	0					
ANR	413889	ShiftExpression	( next_right_sample + ( current_right_sample * coeff1r ) + ( previous_right_sample * coeff2r ) + 0x80 ) >> 8		411286	1		>>			
ANR	413890	AdditiveExpression	next_right_sample + ( current_right_sample * coeff1r ) + ( previous_right_sample * coeff2r ) + 0x80		411286	0		+			
ANR	413891	Identifier	next_right_sample		411286	0					
ANR	413892	AdditiveExpression	( current_right_sample * coeff1r ) + ( previous_right_sample * coeff2r ) + 0x80		411286	1		+			
ANR	413893	MultiplicativeExpression	current_right_sample * coeff1r		411286	0		*			
ANR	413894	Identifier	current_right_sample		411286	0					
ANR	413895	Identifier	coeff1r		411286	1					
ANR	413896	AdditiveExpression	( previous_right_sample * coeff2r ) + 0x80		411286	1		+			
ANR	413897	MultiplicativeExpression	previous_right_sample * coeff2r		411286	0		*			
ANR	413898	Identifier	previous_right_sample		411286	0					
ANR	413899	Identifier	coeff2r		411286	1					
ANR	413900	PrimaryExpression	0x80		411286	1					
ANR	413901	PrimaryExpression	8		411286	1					
ANR	413902	ExpressionStatement	previous_left_sample = current_left_sample	711:16:13536:13578	411286	5	True				
ANR	413903	AssignmentExpression	previous_left_sample = current_left_sample		411286	0		=			
ANR	413904	Identifier	previous_left_sample		411286	0					
ANR	413905	Identifier	current_left_sample		411286	1					
ANR	413906	ExpressionStatement	current_left_sample = av_clip_int16 ( next_left_sample )	713:16:13597:13650	411286	6	True				
ANR	413907	AssignmentExpression	current_left_sample = av_clip_int16 ( next_left_sample )		411286	0		=			
ANR	413908	Identifier	current_left_sample		411286	0					
ANR	413909	CallExpression	av_clip_int16 ( next_left_sample )		411286	1					
ANR	413910	Callee	av_clip_int16		411286	0					
ANR	413911	Identifier	av_clip_int16		411286	0					
ANR	413912	ArgumentList	next_left_sample		411286	1					
ANR	413913	Argument	next_left_sample		411286	0					
ANR	413914	Identifier	next_left_sample		411286	0					
ANR	413915	ExpressionStatement	previous_right_sample = current_right_sample	715:16:13669:13713	411286	7	True				
ANR	413916	AssignmentExpression	previous_right_sample = current_right_sample		411286	0		=			
ANR	413917	Identifier	previous_right_sample		411286	0					
ANR	413918	Identifier	current_right_sample		411286	1					
ANR	413919	ExpressionStatement	current_right_sample = av_clip_int16 ( next_right_sample )	717:16:13732:13787	411286	8	True				
ANR	413920	AssignmentExpression	current_right_sample = av_clip_int16 ( next_right_sample )		411286	0		=			
ANR	413921	Identifier	current_right_sample		411286	0					
ANR	413922	CallExpression	av_clip_int16 ( next_right_sample )		411286	1					
ANR	413923	Callee	av_clip_int16		411286	0					
ANR	413924	Identifier	av_clip_int16		411286	0					
ANR	413925	ArgumentList	next_right_sample		411286	1					
ANR	413926	Argument	next_right_sample		411286	0					
ANR	413927	Identifier	next_right_sample		411286	0					
ANR	413928	ExpressionStatement	* samples ++ = ( unsigned short ) current_left_sample	719:16:13806:13854	411286	9	True				
ANR	413929	AssignmentExpression	* samples ++ = ( unsigned short ) current_left_sample		411286	0		=			
ANR	413930	UnaryOperationExpression	* samples ++		411286	0					
ANR	413931	UnaryOperator	*		411286	0					
ANR	413932	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413933	Identifier	samples		411286	0					
ANR	413934	IncDec	++		411286	1					
ANR	413935	CastExpression	( unsigned short ) current_left_sample		411286	1					
ANR	413936	CastTarget	unsigned short		411286	0					
ANR	413937	Identifier	current_left_sample		411286	1					
ANR	413938	ExpressionStatement	* samples ++ = ( unsigned short ) current_right_sample	721:16:13873:13922	411286	10	True				
ANR	413939	AssignmentExpression	* samples ++ = ( unsigned short ) current_right_sample		411286	0		=			
ANR	413940	UnaryOperationExpression	* samples ++		411286	0					
ANR	413941	UnaryOperator	*		411286	0					
ANR	413942	PostIncDecOperationExpression	samples ++		411286	1					
ANR	413943	Identifier	samples		411286	0					
ANR	413944	IncDec	++		411286	1					
ANR	413945	CastExpression	( unsigned short ) current_right_sample		411286	1					
ANR	413946	CastTarget	unsigned short		411286	0					
ANR	413947	Identifier	current_right_sample		411286	1					
ANR	413948	BreakStatement	break ;	727:8:13959:13964	411286	112	True				
ANR	413949	Label	case CODEC_ID_ADPCM_EA_MAXIS_XA :	729:4:13971:14002	411286	113	True				
ANR	413950	Identifier	CODEC_ID_ADPCM_EA_MAXIS_XA		411286	0					
ANR	413951	ForStatement	for ( channel = 0 ; channel < avctx -> channels ; channel ++ )		411286	114					
ANR	413952	ForInit	channel = 0 ;	731:12:14017:14028	411286	0	True				
ANR	413953	AssignmentExpression	channel = 0		411286	0		=			
ANR	413954	Identifier	channel		411286	0					
ANR	413955	PrimaryExpression	0		411286	1					
ANR	413956	Condition	channel < avctx -> channels	731:25:14030:14054	411286	1	True				
ANR	413957	RelationalExpression	channel < avctx -> channels		411286	0		<			
ANR	413958	Identifier	channel		411286	0					
ANR	413959	PtrMemberAccess	avctx -> channels		411286	1					
ANR	413960	Identifier	avctx		411286	0					
ANR	413961	Identifier	channels		411286	1					
ANR	413962	PostIncDecOperationExpression	channel ++	731:52:14057:14065	411286	2	True				
ANR	413963	Identifier	channel		411286	0					
ANR	413964	IncDec	++		411286	1					
ANR	413965	CompoundStatement		725:63:13893:13893	411286	3					
ANR	413966	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		411286	0					
ANR	413967	ForInit	i = 0 ;	733:17:14088:14091	411286	0	True				
ANR	413968	AssignmentExpression	i = 0		411286	0		=			
ANR	413969	Identifier	i		411286	0					
ANR	413970	PrimaryExpression	0		411286	1					
ANR	413971	Condition	i < 2	733:22:14093:14095	411286	1	True				
ANR	413972	RelationalExpression	i < 2		411286	0		<			
ANR	413973	Identifier	i		411286	0					
ANR	413974	PrimaryExpression	2		411286	1					
ANR	413975	PostIncDecOperationExpression	i ++	733:27:14098:14100	411286	2	True				
ANR	413976	Identifier	i		411286	0					
ANR	413977	IncDec	++		411286	1					
ANR	413978	ExpressionStatement	coeff [ channel ] [ i ] = ea_adpcm_table [ ( * src >> 4 ) + 4 * i ]	735:16:14120:14173	411286	3	True				
ANR	413979	AssignmentExpression	coeff [ channel ] [ i ] = ea_adpcm_table [ ( * src >> 4 ) + 4 * i ]		411286	0		=			
ANR	413980	ArrayIndexing	coeff [ channel ] [ i ]		411286	0					
ANR	413981	ArrayIndexing	coeff [ channel ]		411286	0					
ANR	413982	Identifier	coeff		411286	0					
ANR	413983	Identifier	channel		411286	1					
ANR	413984	Identifier	i		411286	1					
ANR	413985	ArrayIndexing	ea_adpcm_table [ ( * src >> 4 ) + 4 * i ]		411286	1					
ANR	413986	Identifier	ea_adpcm_table		411286	0					
ANR	413987	AdditiveExpression	( * src >> 4 ) + 4 * i		411286	1		+			
ANR	413988	ShiftExpression	* src >> 4		411286	0		>>			
ANR	413989	UnaryOperationExpression	* src		411286	0					
ANR	413990	UnaryOperator	*		411286	0					
ANR	413991	Identifier	src		411286	1					
ANR	413992	PrimaryExpression	4		411286	1					
ANR	413993	MultiplicativeExpression	4 * i		411286	1		*			
ANR	413994	PrimaryExpression	4		411286	0					
ANR	413995	Identifier	i		411286	1					
ANR	413996	ExpressionStatement	shift [ channel ] = ( * src & 0x0F ) + 8	737:12:14188:14222	411286	1	True				
ANR	413997	AssignmentExpression	shift [ channel ] = ( * src & 0x0F ) + 8		411286	0		=			
ANR	413998	ArrayIndexing	shift [ channel ]		411286	0					
ANR	413999	Identifier	shift		411286	0					
ANR	414000	Identifier	channel		411286	1					
ANR	414001	AdditiveExpression	( * src & 0x0F ) + 8		411286	1		+			
ANR	414002	BitAndExpression	* src & 0x0F		411286	0		&			
ANR	414003	UnaryOperationExpression	* src		411286	0					
ANR	414004	UnaryOperator	*		411286	0					
ANR	414005	Identifier	src		411286	1					
ANR	414006	PrimaryExpression	0x0F		411286	1					
ANR	414007	PrimaryExpression	8		411286	1					
ANR	414008	ExpressionStatement	src ++	739:12:14237:14242	411286	2	True				
ANR	414009	PostIncDecOperationExpression	src ++		411286	0					
ANR	414010	Identifier	src		411286	0					
ANR	414011	IncDec	++		411286	1					
ANR	414012	ForStatement	for ( count1 = 0 ; count1 < ( buf_size - avctx -> channels ) / avctx -> channels ; count1 ++ )		411286	115					
ANR	414013	ForInit	count1 = 0 ;	743:13:14269:14279	411286	0	True				
ANR	414014	AssignmentExpression	count1 = 0		411286	0		=			
ANR	414015	Identifier	count1		411286	0					
ANR	414016	PrimaryExpression	0		411286	1					
ANR	414017	Condition	count1 < ( buf_size - avctx -> channels ) / avctx -> channels	743:25:14281:14335	411286	1	True				
ANR	414018	RelationalExpression	count1 < ( buf_size - avctx -> channels ) / avctx -> channels		411286	0		<			
ANR	414019	Identifier	count1		411286	0					
ANR	414020	MultiplicativeExpression	( buf_size - avctx -> channels ) / avctx -> channels		411286	1		/			
ANR	414021	AdditiveExpression	buf_size - avctx -> channels		411286	0		-			
ANR	414022	Identifier	buf_size		411286	0					
ANR	414023	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414024	Identifier	avctx		411286	0					
ANR	414025	Identifier	channels		411286	1					
ANR	414026	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414027	Identifier	avctx		411286	0					
ANR	414028	Identifier	channels		411286	1					
ANR	414029	PostIncDecOperationExpression	count1 ++	743:82:14338:14345	411286	2	True				
ANR	414030	Identifier	count1		411286	0					
ANR	414031	IncDec	++		411286	1					
ANR	414032	CompoundStatement		737:92:14173:14173	411286	3					
ANR	414033	ForStatement	for ( i = 4 ; i >= 0 ; i -= 4 )		411286	0					
ANR	414034	ForInit	i = 4 ;	745:16:14367:14372	411286	0	True				
ANR	414035	AssignmentExpression	i = 4		411286	0		=			
ANR	414036	Identifier	i		411286	0					
ANR	414037	PrimaryExpression	4		411286	1					
ANR	414038	Condition	i >= 0	745:23:14374:14379	411286	1	True				
ANR	414039	RelationalExpression	i >= 0		411286	0		>=			
ANR	414040	Identifier	i		411286	0					
ANR	414041	PrimaryExpression	0		411286	1					
ANR	414042	AssignmentExpression	i -= 4	745:31:14382:14385	411286	2	True	-=			
ANR	414043	Identifier	i		411286	0					
ANR	414044	PrimaryExpression	4		411286	1					
ANR	414045	CompoundStatement		739:37:14213:14213	411286	3					
ANR	414046	ForStatement	for ( channel = 0 ; channel < avctx -> channels ; channel ++ )		411286	0					
ANR	414047	ForInit	channel = 0 ;	747:20:14461:14472	411286	0	True				
ANR	414048	AssignmentExpression	channel = 0		411286	0		=			
ANR	414049	Identifier	channel		411286	0					
ANR	414050	PrimaryExpression	0		411286	1					
ANR	414051	Condition	channel < avctx -> channels	747:33:14474:14498	411286	1	True				
ANR	414052	RelationalExpression	channel < avctx -> channels		411286	0		<			
ANR	414053	Identifier	channel		411286	0					
ANR	414054	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414055	Identifier	avctx		411286	0					
ANR	414056	Identifier	channels		411286	1					
ANR	414057	PostIncDecOperationExpression	channel ++	747:60:14501:14509	411286	2	True				
ANR	414058	Identifier	channel		411286	0					
ANR	414059	IncDec	++		411286	1					
ANR	414060	CompoundStatement		743:20:14360:14444	411286	3					
ANR	414061	IdentifierDeclStatement	int32_t sample = ( int32_t ) ( ( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C ) >> shift [ channel ] ;	749:20:14535:14619	411286	0	True				
ANR	414062	IdentifierDecl	sample = ( int32_t ) ( ( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C ) >> shift [ channel ]		411286	0					
ANR	414063	IdentifierDeclType	int32_t		411286	0					
ANR	414064	Identifier	sample		411286	1					
ANR	414065	AssignmentExpression	sample = ( int32_t ) ( ( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C ) >> shift [ channel ]		411286	2		=			
ANR	414066	Identifier	sample		411286	0					
ANR	414067	ShiftExpression	( int32_t ) ( ( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C ) >> shift [ channel ]		411286	1		>>			
ANR	414068	CastExpression	( int32_t ) ( ( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C )		411286	0					
ANR	414069	CastTarget	int32_t		411286	0					
ANR	414070	ShiftExpression	( ( * ( src + channel ) >> i ) & 0x0F ) << 0x1C		411286	1		<<			
ANR	414071	BitAndExpression	( * ( src + channel ) >> i ) & 0x0F		411286	0		&			
ANR	414072	ShiftExpression	* ( src + channel ) >> i		411286	0		>>			
ANR	414073	UnaryOperationExpression	* ( src + channel )		411286	0					
ANR	414074	UnaryOperator	*		411286	0					
ANR	414075	AdditiveExpression	src + channel		411286	1		+			
ANR	414076	Identifier	src		411286	0					
ANR	414077	Identifier	channel		411286	1					
ANR	414078	Identifier	i		411286	1					
ANR	414079	PrimaryExpression	0x0F		411286	1					
ANR	414080	PrimaryExpression	0x1C		411286	1					
ANR	414081	ArrayIndexing	shift [ channel ]		411286	1					
ANR	414082	Identifier	shift		411286	0					
ANR	414083	Identifier	channel		411286	1					
ANR	414084	ExpressionStatement	sample = ( sample + c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ] + c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80 ) >> 8	751:20:14642:14829	411286	1	True				
ANR	414085	AssignmentExpression	sample = ( sample + c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ] + c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80 ) >> 8		411286	0		=			
ANR	414086	Identifier	sample		411286	0					
ANR	414087	ShiftExpression	( sample + c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ] + c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80 ) >> 8		411286	1		>>			
ANR	414088	AdditiveExpression	sample + c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ] + c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80		411286	0		+			
ANR	414089	Identifier	sample		411286	0					
ANR	414090	AdditiveExpression	c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ] + c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80		411286	1		+			
ANR	414091	MultiplicativeExpression	c -> status [ channel ] . sample1 * coeff [ channel ] [ 0 ]		411286	0		*			
ANR	414092	MemberAccess	c -> status [ channel ] . sample1		411286	0					
ANR	414093	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414094	PtrMemberAccess	c -> status		411286	0					
ANR	414095	Identifier	c		411286	0					
ANR	414096	Identifier	status		411286	1					
ANR	414097	Identifier	channel		411286	1					
ANR	414098	Identifier	sample1		411286	1					
ANR	414099	ArrayIndexing	coeff [ channel ] [ 0 ]		411286	1					
ANR	414100	ArrayIndexing	coeff [ channel ]		411286	0					
ANR	414101	Identifier	coeff		411286	0					
ANR	414102	Identifier	channel		411286	1					
ANR	414103	PrimaryExpression	0		411286	1					
ANR	414104	AdditiveExpression	c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ] + 0x80		411286	1		+			
ANR	414105	MultiplicativeExpression	c -> status [ channel ] . sample2 * coeff [ channel ] [ 1 ]		411286	0		*			
ANR	414106	MemberAccess	c -> status [ channel ] . sample2		411286	0					
ANR	414107	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414108	PtrMemberAccess	c -> status		411286	0					
ANR	414109	Identifier	c		411286	0					
ANR	414110	Identifier	status		411286	1					
ANR	414111	Identifier	channel		411286	1					
ANR	414112	Identifier	sample2		411286	1					
ANR	414113	ArrayIndexing	coeff [ channel ] [ 1 ]		411286	1					
ANR	414114	ArrayIndexing	coeff [ channel ]		411286	0					
ANR	414115	Identifier	coeff		411286	0					
ANR	414116	Identifier	channel		411286	1					
ANR	414117	PrimaryExpression	1		411286	1					
ANR	414118	PrimaryExpression	0x80		411286	1					
ANR	414119	PrimaryExpression	8		411286	1					
ANR	414120	ExpressionStatement	c -> status [ channel ] . sample2 = c -> status [ channel ] . sample1	757:20:14852:14907	411286	2	True				
ANR	414121	AssignmentExpression	c -> status [ channel ] . sample2 = c -> status [ channel ] . sample1		411286	0		=			
ANR	414122	MemberAccess	c -> status [ channel ] . sample2		411286	0					
ANR	414123	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414124	PtrMemberAccess	c -> status		411286	0					
ANR	414125	Identifier	c		411286	0					
ANR	414126	Identifier	status		411286	1					
ANR	414127	Identifier	channel		411286	1					
ANR	414128	Identifier	sample2		411286	1					
ANR	414129	MemberAccess	c -> status [ channel ] . sample1		411286	1					
ANR	414130	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414131	PtrMemberAccess	c -> status		411286	0					
ANR	414132	Identifier	c		411286	0					
ANR	414133	Identifier	status		411286	1					
ANR	414134	Identifier	channel		411286	1					
ANR	414135	Identifier	sample1		411286	1					
ANR	414136	ExpressionStatement	c -> status [ channel ] . sample1 = av_clip_int16 ( sample )	759:20:14930:14980	411286	3	True				
ANR	414137	AssignmentExpression	c -> status [ channel ] . sample1 = av_clip_int16 ( sample )		411286	0		=			
ANR	414138	MemberAccess	c -> status [ channel ] . sample1		411286	0					
ANR	414139	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414140	PtrMemberAccess	c -> status		411286	0					
ANR	414141	Identifier	c		411286	0					
ANR	414142	Identifier	status		411286	1					
ANR	414143	Identifier	channel		411286	1					
ANR	414144	Identifier	sample1		411286	1					
ANR	414145	CallExpression	av_clip_int16 ( sample )		411286	1					
ANR	414146	Callee	av_clip_int16		411286	0					
ANR	414147	Identifier	av_clip_int16		411286	0					
ANR	414148	ArgumentList	sample		411286	1					
ANR	414149	Argument	sample		411286	0					
ANR	414150	Identifier	sample		411286	0					
ANR	414151	ExpressionStatement	* samples ++ = c -> status [ channel ] . sample1	761:20:15003:15042	411286	4	True				
ANR	414152	AssignmentExpression	* samples ++ = c -> status [ channel ] . sample1		411286	0		=			
ANR	414153	UnaryOperationExpression	* samples ++		411286	0					
ANR	414154	UnaryOperator	*		411286	0					
ANR	414155	PostIncDecOperationExpression	samples ++		411286	1					
ANR	414156	Identifier	samples		411286	0					
ANR	414157	IncDec	++		411286	1					
ANR	414158	MemberAccess	c -> status [ channel ] . sample1		411286	1					
ANR	414159	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414160	PtrMemberAccess	c -> status		411286	0					
ANR	414161	Identifier	c		411286	0					
ANR	414162	Identifier	status		411286	1					
ANR	414163	Identifier	channel		411286	1					
ANR	414164	Identifier	sample1		411286	1					
ANR	414165	ExpressionStatement	src += avctx -> channels	767:12:15091:15111	411286	1	True				
ANR	414166	AssignmentExpression	src += avctx -> channels		411286	0		+=			
ANR	414167	Identifier	src		411286	0					
ANR	414168	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414169	Identifier	avctx		411286	0					
ANR	414170	Identifier	channels		411286	1					
ANR	414171	BreakStatement	break ;	771:8:15133:15138	411286	116	True				
ANR	414172	Label	case CODEC_ID_ADPCM_EA_R1 :	773:4:15145:15170	411286	117	True				
ANR	414173	Identifier	CODEC_ID_ADPCM_EA_R1		411286	0					
ANR	414174	Label	case CODEC_ID_ADPCM_EA_R2 :	775:4:15177:15202	411286	118	True				
ANR	414175	Identifier	CODEC_ID_ADPCM_EA_R2		411286	0					
ANR	414176	Label	case CODEC_ID_ADPCM_EA_R3 :	777:4:15209:15234	411286	119	True				
ANR	414177	Identifier	CODEC_ID_ADPCM_EA_R3		411286	0					
ANR	414178	CompoundStatement		793:8:15487:15506	411286	120					
ANR	414179	IdentifierDeclStatement	const int big_endian = avctx -> codec -> id == CODEC_ID_ADPCM_EA_R3 ;	787:8:15408:15471	411286	0	True				
ANR	414180	IdentifierDecl	big_endian = avctx -> codec -> id == CODEC_ID_ADPCM_EA_R3		411286	0					
ANR	414181	IdentifierDeclType	const int		411286	0					
ANR	414182	Identifier	big_endian		411286	1					
ANR	414183	AssignmentExpression	big_endian = avctx -> codec -> id == CODEC_ID_ADPCM_EA_R3		411286	2		=			
ANR	414184	Identifier	big_endian		411286	0					
ANR	414185	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_EA_R3		411286	1		==			
ANR	414186	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	414187	PtrMemberAccess	avctx -> codec		411286	0					
ANR	414188	Identifier	avctx		411286	0					
ANR	414189	Identifier	codec		411286	1					
ANR	414190	Identifier	id		411286	1					
ANR	414191	Identifier	CODEC_ID_ADPCM_EA_R3		411286	1					
ANR	414192	IdentifierDeclStatement	"int32_t previous_sample , current_sample , next_sample ;"	789:8:15482:15534	411286	1	True				
ANR	414193	IdentifierDecl	previous_sample		411286	0					
ANR	414194	IdentifierDeclType	int32_t		411286	0					
ANR	414195	Identifier	previous_sample		411286	1					
ANR	414196	IdentifierDecl	current_sample		411286	1					
ANR	414197	IdentifierDeclType	int32_t		411286	0					
ANR	414198	Identifier	current_sample		411286	1					
ANR	414199	IdentifierDecl	next_sample		411286	2					
ANR	414200	IdentifierDeclType	int32_t		411286	0					
ANR	414201	Identifier	next_sample		411286	1					
ANR	414202	IdentifierDeclStatement	"int32_t coeff1 , coeff2 ;"	791:8:15545:15567	411286	2	True				
ANR	414203	IdentifierDecl	coeff1		411286	0					
ANR	414204	IdentifierDeclType	int32_t		411286	0					
ANR	414205	Identifier	coeff1		411286	1					
ANR	414206	IdentifierDecl	coeff2		411286	1					
ANR	414207	IdentifierDeclType	int32_t		411286	0					
ANR	414208	Identifier	coeff2		411286	1					
ANR	414209	IdentifierDeclStatement	uint8_t shift ;	793:8:15578:15591	411286	3	True				
ANR	414210	IdentifierDecl	shift		411286	0					
ANR	414211	IdentifierDeclType	uint8_t		411286	0					
ANR	414212	Identifier	shift		411286	1					
ANR	414213	IdentifierDeclStatement	unsigned int channel ;	795:8:15602:15622	411286	4	True				
ANR	414214	IdentifierDecl	channel		411286	0					
ANR	414215	IdentifierDeclType	unsigned int		411286	0					
ANR	414216	Identifier	channel		411286	1					
ANR	414217	IdentifierDeclStatement	uint16_t * samplesC ;	797:8:15633:15651	411286	5	True				
ANR	414218	IdentifierDecl	* samplesC		411286	0					
ANR	414219	IdentifierDeclType	uint16_t *		411286	0					
ANR	414220	Identifier	samplesC		411286	1					
ANR	414221	IdentifierDeclStatement	const uint8_t * srcC ;	799:8:15662:15681	411286	6	True				
ANR	414222	IdentifierDecl	* srcC		411286	0					
ANR	414223	IdentifierDeclType	const uint8_t *		411286	0					
ANR	414224	Identifier	srcC		411286	1					
ANR	414225	ExpressionStatement	samples_in_chunk = ( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) / 28	803:8:15694:15826	411286	7	True				
ANR	414226	AssignmentExpression	samples_in_chunk = ( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) / 28		411286	0		=			
ANR	414227	Identifier	samples_in_chunk		411286	0					
ANR	414228	MultiplicativeExpression	( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) / 28		411286	1		/			
ANR	414229	ConditionalExpression	big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src )		411286	0					
ANR	414230	Condition	big_endian		411286	0					
ANR	414231	Identifier	big_endian		411286	0					
ANR	414232	CallExpression	bytestream_get_be32 ( & src )		411286	1					
ANR	414233	Callee	bytestream_get_be32		411286	0					
ANR	414234	Identifier	bytestream_get_be32		411286	0					
ANR	414235	ArgumentList	& src		411286	1					
ANR	414236	Argument	& src		411286	0					
ANR	414237	UnaryOperationExpression	& src		411286	0					
ANR	414238	UnaryOperator	&		411286	0					
ANR	414239	Identifier	src		411286	1					
ANR	414240	CallExpression	bytestream_get_le32 ( & src )		411286	2					
ANR	414241	Callee	bytestream_get_le32		411286	0					
ANR	414242	Identifier	bytestream_get_le32		411286	0					
ANR	414243	ArgumentList	& src		411286	1					
ANR	414244	Argument	& src		411286	0					
ANR	414245	UnaryOperationExpression	& src		411286	0					
ANR	414246	UnaryOperator	&		411286	0					
ANR	414247	Identifier	src		411286	1					
ANR	414248	PrimaryExpression	28		411286	1					
ANR	414249	IfStatement	if ( samples_in_chunk > UINT32_MAX / ( 28 * avctx -> channels ) || 28 * samples_in_chunk * avctx -> channels > samples_end - samples )		411286	8					
ANR	414250	Condition	samples_in_chunk > UINT32_MAX / ( 28 * avctx -> channels ) || 28 * samples_in_chunk * avctx -> channels > samples_end - samples	807:12:15841:15964	411286	0	True				
ANR	414251	OrExpression	samples_in_chunk > UINT32_MAX / ( 28 * avctx -> channels ) || 28 * samples_in_chunk * avctx -> channels > samples_end - samples		411286	0		||			
ANR	414252	RelationalExpression	samples_in_chunk > UINT32_MAX / ( 28 * avctx -> channels )		411286	0		>			
ANR	414253	Identifier	samples_in_chunk		411286	0					
ANR	414254	MultiplicativeExpression	UINT32_MAX / ( 28 * avctx -> channels )		411286	1		/			
ANR	414255	Identifier	UINT32_MAX		411286	0					
ANR	414256	MultiplicativeExpression	28 * avctx -> channels		411286	1		*			
ANR	414257	PrimaryExpression	28		411286	0					
ANR	414258	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414259	Identifier	avctx		411286	0					
ANR	414260	Identifier	channels		411286	1					
ANR	414261	RelationalExpression	28 * samples_in_chunk * avctx -> channels > samples_end - samples		411286	1		>			
ANR	414262	MultiplicativeExpression	28 * samples_in_chunk * avctx -> channels		411286	0		*			
ANR	414263	PrimaryExpression	28		411286	0					
ANR	414264	MultiplicativeExpression	samples_in_chunk * avctx -> channels		411286	1		*			
ANR	414265	Identifier	samples_in_chunk		411286	0					
ANR	414266	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414267	Identifier	avctx		411286	0					
ANR	414268	Identifier	channels		411286	1					
ANR	414269	AdditiveExpression	samples_end - samples		411286	1		-			
ANR	414270	Identifier	samples_end		411286	0					
ANR	414271	Identifier	samples		411286	1					
ANR	414272	CompoundStatement		803:71:15792:15792	411286	1					
ANR	414273	ExpressionStatement	src += buf_size - 4	811:12:15982:16001	411286	0	True				
ANR	414274	AssignmentExpression	src += buf_size - 4		411286	0		+=			
ANR	414275	Identifier	src		411286	0					
ANR	414276	AdditiveExpression	buf_size - 4		411286	1		-			
ANR	414277	Identifier	buf_size		411286	0					
ANR	414278	PrimaryExpression	4		411286	1					
ANR	414279	BreakStatement	break ;	813:12:16016:16021	411286	1	True				
ANR	414280	ForStatement	for ( channel = 0 ; channel < avctx -> channels ; channel ++ )		411286	9					
ANR	414281	ForInit	channel = 0 ;	819:13:16050:16059	411286	0	True				
ANR	414282	AssignmentExpression	channel = 0		411286	0		=			
ANR	414283	Identifier	channel		411286	0					
ANR	414284	PrimaryExpression	0		411286	1					
ANR	414285	Condition	channel < avctx -> channels	819:24:16061:16083	411286	1	True				
ANR	414286	RelationalExpression	channel < avctx -> channels		411286	0		<			
ANR	414287	Identifier	channel		411286	0					
ANR	414288	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414289	Identifier	avctx		411286	0					
ANR	414290	Identifier	channels		411286	1					
ANR	414291	PostIncDecOperationExpression	channel ++	819:49:16086:16094	411286	2	True				
ANR	414292	Identifier	channel		411286	0					
ANR	414293	IncDec	++		411286	1					
ANR	414294	CompoundStatement		813:60:15922:15922	411286	3					
ANR	414295	ExpressionStatement	srcC = src + ( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) + ( avctx -> channels - channel - 1 ) * 4	821:12:16112:16289	411286	0	True				
ANR	414296	AssignmentExpression	srcC = src + ( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) + ( avctx -> channels - channel - 1 ) * 4		411286	0		=			
ANR	414297	Identifier	srcC		411286	0					
ANR	414298	AdditiveExpression	src + ( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) + ( avctx -> channels - channel - 1 ) * 4		411286	1		+			
ANR	414299	Identifier	src		411286	0					
ANR	414300	AdditiveExpression	( big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src ) ) + ( avctx -> channels - channel - 1 ) * 4		411286	1		+			
ANR	414301	ConditionalExpression	big_endian ? bytestream_get_be32 ( & src ) : bytestream_get_le32 ( & src )		411286	0					
ANR	414302	Condition	big_endian		411286	0					
ANR	414303	Identifier	big_endian		411286	0					
ANR	414304	CallExpression	bytestream_get_be32 ( & src )		411286	1					
ANR	414305	Callee	bytestream_get_be32		411286	0					
ANR	414306	Identifier	bytestream_get_be32		411286	0					
ANR	414307	ArgumentList	& src		411286	1					
ANR	414308	Argument	& src		411286	0					
ANR	414309	UnaryOperationExpression	& src		411286	0					
ANR	414310	UnaryOperator	&		411286	0					
ANR	414311	Identifier	src		411286	1					
ANR	414312	CallExpression	bytestream_get_le32 ( & src )		411286	2					
ANR	414313	Callee	bytestream_get_le32		411286	0					
ANR	414314	Identifier	bytestream_get_le32		411286	0					
ANR	414315	ArgumentList	& src		411286	1					
ANR	414316	Argument	& src		411286	0					
ANR	414317	UnaryOperationExpression	& src		411286	0					
ANR	414318	UnaryOperator	&		411286	0					
ANR	414319	Identifier	src		411286	1					
ANR	414320	MultiplicativeExpression	( avctx -> channels - channel - 1 ) * 4		411286	1		*			
ANR	414321	AdditiveExpression	avctx -> channels - channel - 1		411286	0		-			
ANR	414322	PtrMemberAccess	avctx -> channels		411286	0					
ANR	414323	Identifier	avctx		411286	0					
ANR	414324	Identifier	channels		411286	1					
ANR	414325	AdditiveExpression	channel - 1		411286	1		-			
ANR	414326	Identifier	channel		411286	0					
ANR	414327	PrimaryExpression	1		411286	1					
ANR	414328	PrimaryExpression	4		411286	1					
ANR	414329	ExpressionStatement	samplesC = samples + channel	827:12:16304:16332	411286	1	True				
ANR	414330	AssignmentExpression	samplesC = samples + channel		411286	0		=			
ANR	414331	Identifier	samplesC		411286	0					
ANR	414332	AdditiveExpression	samples + channel		411286	1		+			
ANR	414333	Identifier	samples		411286	0					
ANR	414334	Identifier	channel		411286	1					
ANR	414335	IfStatement	if ( avctx -> codec -> id == CODEC_ID_ADPCM_EA_R1 )		411286	2					
ANR	414336	Condition	avctx -> codec -> id == CODEC_ID_ADPCM_EA_R1	831:16:16353:16392	411286	0	True				
ANR	414337	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_EA_R1		411286	0		==			
ANR	414338	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	414339	PtrMemberAccess	avctx -> codec		411286	0					
ANR	414340	Identifier	avctx		411286	0					
ANR	414341	Identifier	codec		411286	1					
ANR	414342	Identifier	id		411286	1					
ANR	414343	Identifier	CODEC_ID_ADPCM_EA_R1		411286	1					
ANR	414344	CompoundStatement		825:58:16220:16220	411286	1					
ANR	414345	ExpressionStatement	current_sample = ( int16_t ) bytestream_get_le16 ( & srcC )	833:16:16414:16467	411286	0	True				
ANR	414346	AssignmentExpression	current_sample = ( int16_t ) bytestream_get_le16 ( & srcC )		411286	0		=			
ANR	414347	Identifier	current_sample		411286	0					
ANR	414348	CastExpression	( int16_t ) bytestream_get_le16 ( & srcC )		411286	1					
ANR	414349	CastTarget	int16_t		411286	0					
ANR	414350	CallExpression	bytestream_get_le16 ( & srcC )		411286	1					
ANR	414351	Callee	bytestream_get_le16		411286	0					
ANR	414352	Identifier	bytestream_get_le16		411286	0					
ANR	414353	ArgumentList	& srcC		411286	1					
ANR	414354	Argument	& srcC		411286	0					
ANR	414355	UnaryOperationExpression	& srcC		411286	0					
ANR	414356	UnaryOperator	&		411286	0					
ANR	414357	Identifier	srcC		411286	1					
ANR	414358	ExpressionStatement	previous_sample = ( int16_t ) bytestream_get_le16 ( & srcC )	835:16:16486:16539	411286	1	True				
ANR	414359	AssignmentExpression	previous_sample = ( int16_t ) bytestream_get_le16 ( & srcC )		411286	0		=			
ANR	414360	Identifier	previous_sample		411286	0					
ANR	414361	CastExpression	( int16_t ) bytestream_get_le16 ( & srcC )		411286	1					
ANR	414362	CastTarget	int16_t		411286	0					
ANR	414363	CallExpression	bytestream_get_le16 ( & srcC )		411286	1					
ANR	414364	Callee	bytestream_get_le16		411286	0					
ANR	414365	Identifier	bytestream_get_le16		411286	0					
ANR	414366	ArgumentList	& srcC		411286	1					
ANR	414367	Argument	& srcC		411286	0					
ANR	414368	UnaryOperationExpression	& srcC		411286	0					
ANR	414369	UnaryOperator	&		411286	0					
ANR	414370	Identifier	srcC		411286	1					
ANR	414371	ElseStatement	else		411286	0					
ANR	414372	CompoundStatement		831:19:16386:16386	411286	0					
ANR	414373	ExpressionStatement	current_sample = c -> status [ channel ] . predictor	839:16:16580:16626	411286	0	True				
ANR	414374	AssignmentExpression	current_sample = c -> status [ channel ] . predictor		411286	0		=			
ANR	414375	Identifier	current_sample		411286	0					
ANR	414376	MemberAccess	c -> status [ channel ] . predictor		411286	1					
ANR	414377	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414378	PtrMemberAccess	c -> status		411286	0					
ANR	414379	Identifier	c		411286	0					
ANR	414380	Identifier	status		411286	1					
ANR	414381	Identifier	channel		411286	1					
ANR	414382	Identifier	predictor		411286	1					
ANR	414383	ExpressionStatement	previous_sample = c -> status [ channel ] . prev_sample	841:16:16645:16693	411286	1	True				
ANR	414384	AssignmentExpression	previous_sample = c -> status [ channel ] . prev_sample		411286	0		=			
ANR	414385	Identifier	previous_sample		411286	0					
ANR	414386	MemberAccess	c -> status [ channel ] . prev_sample		411286	1					
ANR	414387	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414388	PtrMemberAccess	c -> status		411286	0					
ANR	414389	Identifier	c		411286	0					
ANR	414390	Identifier	status		411286	1					
ANR	414391	Identifier	channel		411286	1					
ANR	414392	Identifier	prev_sample		411286	1					
ANR	414393	ForStatement	for ( count1 = 0 ; count1 < samples_in_chunk ; count1 ++ )		411286	3					
ANR	414394	ForInit	count1 = 0 ;	847:17:16730:16738	411286	0	True				
ANR	414395	AssignmentExpression	count1 = 0		411286	0		=			
ANR	414396	Identifier	count1		411286	0					
ANR	414397	PrimaryExpression	0		411286	1					
ANR	414398	Condition	count1 < samples_in_chunk	847:27:16740:16762	411286	1	True				
ANR	414399	RelationalExpression	count1 < samples_in_chunk		411286	0		<			
ANR	414400	Identifier	count1		411286	0					
ANR	414401	Identifier	samples_in_chunk		411286	1					
ANR	414402	PostIncDecOperationExpression	count1 ++	847:52:16765:16772	411286	2	True				
ANR	414403	Identifier	count1		411286	0					
ANR	414404	IncDec	++		411286	1					
ANR	414405	CompoundStatement		841:62:16600:16600	411286	3					
ANR	414406	IfStatement	if ( * srcC == 0xEE )		411286	0					
ANR	414407	Condition	* srcC == 0xEE	849:20:16798:16810	411286	0	True				
ANR	414408	EqualityExpression	* srcC == 0xEE		411286	0		==			
ANR	414409	UnaryOperationExpression	* srcC		411286	0					
ANR	414410	UnaryOperator	*		411286	0					
ANR	414411	Identifier	srcC		411286	1					
ANR	414412	PrimaryExpression	0xEE		411286	1					
ANR	414413	CompoundStatement		843:35:16638:16638	411286	1					
ANR	414414	ExpressionStatement	srcC ++	851:20:16866:16872	411286	0	True				
ANR	414415	PostIncDecOperationExpression	srcC ++		411286	0					
ANR	414416	Identifier	srcC		411286	0					
ANR	414417	IncDec	++		411286	1					
ANR	414418	ExpressionStatement	current_sample = ( int16_t ) bytestream_get_be16 ( & srcC )	853:20:16895:16948	411286	1	True				
ANR	414419	AssignmentExpression	current_sample = ( int16_t ) bytestream_get_be16 ( & srcC )		411286	0		=			
ANR	414420	Identifier	current_sample		411286	0					
ANR	414421	CastExpression	( int16_t ) bytestream_get_be16 ( & srcC )		411286	1					
ANR	414422	CastTarget	int16_t		411286	0					
ANR	414423	CallExpression	bytestream_get_be16 ( & srcC )		411286	1					
ANR	414424	Callee	bytestream_get_be16		411286	0					
ANR	414425	Identifier	bytestream_get_be16		411286	0					
ANR	414426	ArgumentList	& srcC		411286	1					
ANR	414427	Argument	& srcC		411286	0					
ANR	414428	UnaryOperationExpression	& srcC		411286	0					
ANR	414429	UnaryOperator	&		411286	0					
ANR	414430	Identifier	srcC		411286	1					
ANR	414431	ExpressionStatement	previous_sample = ( int16_t ) bytestream_get_be16 ( & srcC )	855:20:16971:17024	411286	2	True				
ANR	414432	AssignmentExpression	previous_sample = ( int16_t ) bytestream_get_be16 ( & srcC )		411286	0		=			
ANR	414433	Identifier	previous_sample		411286	0					
ANR	414434	CastExpression	( int16_t ) bytestream_get_be16 ( & srcC )		411286	1					
ANR	414435	CastTarget	int16_t		411286	0					
ANR	414436	CallExpression	bytestream_get_be16 ( & srcC )		411286	1					
ANR	414437	Callee	bytestream_get_be16		411286	0					
ANR	414438	Identifier	bytestream_get_be16		411286	0					
ANR	414439	ArgumentList	& srcC		411286	1					
ANR	414440	Argument	& srcC		411286	0					
ANR	414441	UnaryOperationExpression	& srcC		411286	0					
ANR	414442	UnaryOperator	&		411286	0					
ANR	414443	Identifier	srcC		411286	1					
ANR	414444	ForStatement	for ( count2 = 0 ; count2 < 28 ; count2 ++ )		411286	3					
ANR	414445	ForInit	count2 = 0 ;	859:25:17054:17062	411286	0	True				
ANR	414446	AssignmentExpression	count2 = 0		411286	0		=			
ANR	414447	Identifier	count2		411286	0					
ANR	414448	PrimaryExpression	0		411286	1					
ANR	414449	Condition	count2 < 28	859:35:17064:17072	411286	1	True				
ANR	414450	RelationalExpression	count2 < 28		411286	0		<			
ANR	414451	Identifier	count2		411286	0					
ANR	414452	PrimaryExpression	28		411286	1					
ANR	414453	PostIncDecOperationExpression	count2 ++	859:46:17075:17082	411286	2	True				
ANR	414454	Identifier	count2		411286	0					
ANR	414455	IncDec	++		411286	1					
ANR	414456	CompoundStatement		853:56:16910:16910	411286	3					
ANR	414457	ExpressionStatement	* samplesC = ( int16_t ) bytestream_get_be16 ( & srcC )	861:24:17112:17159	411286	0	True				
ANR	414458	AssignmentExpression	* samplesC = ( int16_t ) bytestream_get_be16 ( & srcC )		411286	0		=			
ANR	414459	UnaryOperationExpression	* samplesC		411286	0					
ANR	414460	UnaryOperator	*		411286	0					
ANR	414461	Identifier	samplesC		411286	1					
ANR	414462	CastExpression	( int16_t ) bytestream_get_be16 ( & srcC )		411286	1					
ANR	414463	CastTarget	int16_t		411286	0					
ANR	414464	CallExpression	bytestream_get_be16 ( & srcC )		411286	1					
ANR	414465	Callee	bytestream_get_be16		411286	0					
ANR	414466	Identifier	bytestream_get_be16		411286	0					
ANR	414467	ArgumentList	& srcC		411286	1					
ANR	414468	Argument	& srcC		411286	0					
ANR	414469	UnaryOperationExpression	& srcC		411286	0					
ANR	414470	UnaryOperator	&		411286	0					
ANR	414471	Identifier	srcC		411286	1					
ANR	414472	ExpressionStatement	samplesC += avctx -> channels	863:24:17186:17213	411286	1	True				
ANR	414473	AssignmentExpression	samplesC += avctx -> channels		411286	0		+=			
ANR	414474	Identifier	samplesC		411286	0					
ANR	414475	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414476	Identifier	avctx		411286	0					
ANR	414477	Identifier	channels		411286	1					
ANR	414478	ElseStatement	else		411286	0					
ANR	414479	CompoundStatement		861:23:17087:17087	411286	0					
ANR	414480	ExpressionStatement	coeff1 = ea_adpcm_table [ * srcC >> 4 ]	869:20:17285:17324	411286	0	True				
ANR	414481	AssignmentExpression	coeff1 = ea_adpcm_table [ * srcC >> 4 ]		411286	0		=			
ANR	414482	Identifier	coeff1		411286	0					
ANR	414483	ArrayIndexing	ea_adpcm_table [ * srcC >> 4 ]		411286	1					
ANR	414484	Identifier	ea_adpcm_table		411286	0					
ANR	414485	ShiftExpression	* srcC >> 4		411286	1		>>			
ANR	414486	UnaryOperationExpression	* srcC		411286	0					
ANR	414487	UnaryOperator	*		411286	0					
ANR	414488	Identifier	srcC		411286	1					
ANR	414489	PrimaryExpression	4		411286	1					
ANR	414490	ExpressionStatement	coeff2 = ea_adpcm_table [ ( * srcC >> 4 ) + 4 ]	871:20:17347:17386	411286	1	True				
ANR	414491	AssignmentExpression	coeff2 = ea_adpcm_table [ ( * srcC >> 4 ) + 4 ]		411286	0		=			
ANR	414492	Identifier	coeff2		411286	0					
ANR	414493	ArrayIndexing	ea_adpcm_table [ ( * srcC >> 4 ) + 4 ]		411286	1					
ANR	414494	Identifier	ea_adpcm_table		411286	0					
ANR	414495	AdditiveExpression	( * srcC >> 4 ) + 4		411286	1		+			
ANR	414496	ShiftExpression	* srcC >> 4		411286	0		>>			
ANR	414497	UnaryOperationExpression	* srcC		411286	0					
ANR	414498	UnaryOperator	*		411286	0					
ANR	414499	Identifier	srcC		411286	1					
ANR	414500	PrimaryExpression	4		411286	1					
ANR	414501	PrimaryExpression	4		411286	1					
ANR	414502	ExpressionStatement	shift = ( * srcC ++ & 0x0F ) + 8	873:20:17409:17437	411286	2	True				
ANR	414503	AssignmentExpression	shift = ( * srcC ++ & 0x0F ) + 8		411286	0		=			
ANR	414504	Identifier	shift		411286	0					
ANR	414505	AdditiveExpression	( * srcC ++ & 0x0F ) + 8		411286	1		+			
ANR	414506	BitAndExpression	* srcC ++ & 0x0F		411286	0		&			
ANR	414507	UnaryOperationExpression	* srcC ++		411286	0					
ANR	414508	UnaryOperator	*		411286	0					
ANR	414509	PostIncDecOperationExpression	srcC ++		411286	1					
ANR	414510	Identifier	srcC		411286	0					
ANR	414511	IncDec	++		411286	1					
ANR	414512	PrimaryExpression	0x0F		411286	1					
ANR	414513	PrimaryExpression	8		411286	1					
ANR	414514	ForStatement	for ( count2 = 0 ; count2 < 28 ; count2 ++ )		411286	3					
ANR	414515	ForInit	count2 = 0 ;	877:25:17467:17475	411286	0	True				
ANR	414516	AssignmentExpression	count2 = 0		411286	0		=			
ANR	414517	Identifier	count2		411286	0					
ANR	414518	PrimaryExpression	0		411286	1					
ANR	414519	Condition	count2 < 28	877:35:17477:17485	411286	1	True				
ANR	414520	RelationalExpression	count2 < 28		411286	0		<			
ANR	414521	Identifier	count2		411286	0					
ANR	414522	PrimaryExpression	28		411286	1					
ANR	414523	PostIncDecOperationExpression	count2 ++	877:46:17488:17495	411286	2	True				
ANR	414524	Identifier	count2		411286	0					
ANR	414525	IncDec	++		411286	1					
ANR	414526	CompoundStatement		871:56:17323:17323	411286	3					
ANR	414527	IfStatement	if ( count2 & 1 )		411286	0					
ANR	414528	Condition	count2 & 1	879:28:17529:17538	411286	0	True				
ANR	414529	BitAndExpression	count2 & 1		411286	0		&			
ANR	414530	Identifier	count2		411286	0					
ANR	414531	PrimaryExpression	1		411286	1					
ANR	414532	ExpressionStatement	next_sample = ( int32_t ) ( ( * srcC ++ & 0x0F ) << 28 ) >> shift	881:28:17570:17626	411286	1	True				
ANR	414533	AssignmentExpression	next_sample = ( int32_t ) ( ( * srcC ++ & 0x0F ) << 28 ) >> shift		411286	0		=			
ANR	414534	Identifier	next_sample		411286	0					
ANR	414535	ShiftExpression	( int32_t ) ( ( * srcC ++ & 0x0F ) << 28 ) >> shift		411286	1		>>			
ANR	414536	CastExpression	( int32_t ) ( ( * srcC ++ & 0x0F ) << 28 )		411286	0					
ANR	414537	CastTarget	int32_t		411286	0					
ANR	414538	ShiftExpression	( * srcC ++ & 0x0F ) << 28		411286	1		<<			
ANR	414539	BitAndExpression	* srcC ++ & 0x0F		411286	0		&			
ANR	414540	UnaryOperationExpression	* srcC ++		411286	0					
ANR	414541	UnaryOperator	*		411286	0					
ANR	414542	PostIncDecOperationExpression	srcC ++		411286	1					
ANR	414543	Identifier	srcC		411286	0					
ANR	414544	IncDec	++		411286	1					
ANR	414545	PrimaryExpression	0x0F		411286	1					
ANR	414546	PrimaryExpression	28		411286	1					
ANR	414547	Identifier	shift		411286	1					
ANR	414548	ElseStatement	else		411286	0					
ANR	414549	ExpressionStatement	next_sample = ( int32_t ) ( ( * srcC & 0xF0 ) << 24 ) >> shift	885:28:17687:17743	411286	0	True				
ANR	414550	AssignmentExpression	next_sample = ( int32_t ) ( ( * srcC & 0xF0 ) << 24 ) >> shift		411286	0		=			
ANR	414551	Identifier	next_sample		411286	0					
ANR	414552	ShiftExpression	( int32_t ) ( ( * srcC & 0xF0 ) << 24 ) >> shift		411286	1		>>			
ANR	414553	CastExpression	( int32_t ) ( ( * srcC & 0xF0 ) << 24 )		411286	0					
ANR	414554	CastTarget	int32_t		411286	0					
ANR	414555	ShiftExpression	( * srcC & 0xF0 ) << 24		411286	1		<<			
ANR	414556	BitAndExpression	* srcC & 0xF0		411286	0		&			
ANR	414557	UnaryOperationExpression	* srcC		411286	0					
ANR	414558	UnaryOperator	*		411286	0					
ANR	414559	Identifier	srcC		411286	1					
ANR	414560	PrimaryExpression	0xF0		411286	1					
ANR	414561	PrimaryExpression	24		411286	1					
ANR	414562	Identifier	shift		411286	1					
ANR	414563	ExpressionStatement	next_sample += ( current_sample * coeff1 ) + ( previous_sample * coeff2 )	889:24:17772:17882	411286	1	True				
ANR	414564	AssignmentExpression	next_sample += ( current_sample * coeff1 ) + ( previous_sample * coeff2 )		411286	0		+=			
ANR	414565	Identifier	next_sample		411286	0					
ANR	414566	AdditiveExpression	( current_sample * coeff1 ) + ( previous_sample * coeff2 )		411286	1		+			
ANR	414567	MultiplicativeExpression	current_sample * coeff1		411286	0		*			
ANR	414568	Identifier	current_sample		411286	0					
ANR	414569	Identifier	coeff1		411286	1					
ANR	414570	MultiplicativeExpression	previous_sample * coeff2		411286	1		*			
ANR	414571	Identifier	previous_sample		411286	0					
ANR	414572	Identifier	coeff2		411286	1					
ANR	414573	ExpressionStatement	next_sample = av_clip_int16 ( next_sample >> 8 )	893:24:17909:17954	411286	2	True				
ANR	414574	AssignmentExpression	next_sample = av_clip_int16 ( next_sample >> 8 )		411286	0		=			
ANR	414575	Identifier	next_sample		411286	0					
ANR	414576	CallExpression	av_clip_int16 ( next_sample >> 8 )		411286	1					
ANR	414577	Callee	av_clip_int16		411286	0					
ANR	414578	Identifier	av_clip_int16		411286	0					
ANR	414579	ArgumentList	next_sample >> 8		411286	1					
ANR	414580	Argument	next_sample >> 8		411286	0					
ANR	414581	ShiftExpression	next_sample >> 8		411286	0		>>			
ANR	414582	Identifier	next_sample		411286	0					
ANR	414583	PrimaryExpression	8		411286	1					
ANR	414584	ExpressionStatement	previous_sample = current_sample	897:24:17983:18015	411286	3	True				
ANR	414585	AssignmentExpression	previous_sample = current_sample		411286	0		=			
ANR	414586	Identifier	previous_sample		411286	0					
ANR	414587	Identifier	current_sample		411286	1					
ANR	414588	ExpressionStatement	current_sample = next_sample	899:24:18042:18071	411286	4	True				
ANR	414589	AssignmentExpression	current_sample = next_sample		411286	0		=			
ANR	414590	Identifier	current_sample		411286	0					
ANR	414591	Identifier	next_sample		411286	1					
ANR	414592	ExpressionStatement	* samplesC = current_sample	901:24:18098:18124	411286	5	True				
ANR	414593	AssignmentExpression	* samplesC = current_sample		411286	0		=			
ANR	414594	UnaryOperationExpression	* samplesC		411286	0					
ANR	414595	UnaryOperator	*		411286	0					
ANR	414596	Identifier	samplesC		411286	1					
ANR	414597	Identifier	current_sample		411286	1					
ANR	414598	ExpressionStatement	samplesC += avctx -> channels	903:24:18151:18178	411286	6	True				
ANR	414599	AssignmentExpression	samplesC += avctx -> channels		411286	0		+=			
ANR	414600	Identifier	samplesC		411286	0					
ANR	414601	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414602	Identifier	avctx		411286	0					
ANR	414603	Identifier	channels		411286	1					
ANR	414604	IfStatement	if ( avctx -> codec -> id != CODEC_ID_ADPCM_EA_R1 )		411286	4					
ANR	414605	Condition	avctx -> codec -> id != CODEC_ID_ADPCM_EA_R1	913:16:18256:18295	411286	0	True				
ANR	414606	EqualityExpression	avctx -> codec -> id != CODEC_ID_ADPCM_EA_R1		411286	0		!=			
ANR	414607	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	414608	PtrMemberAccess	avctx -> codec		411286	0					
ANR	414609	Identifier	avctx		411286	0					
ANR	414610	Identifier	codec		411286	1					
ANR	414611	Identifier	id		411286	1					
ANR	414612	Identifier	CODEC_ID_ADPCM_EA_R1		411286	1					
ANR	414613	CompoundStatement		907:58:18123:18123	411286	1					
ANR	414614	ExpressionStatement	c -> status [ channel ] . predictor = current_sample	915:16:18317:18364	411286	0	True				
ANR	414615	AssignmentExpression	c -> status [ channel ] . predictor = current_sample		411286	0		=			
ANR	414616	MemberAccess	c -> status [ channel ] . predictor		411286	0					
ANR	414617	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414618	PtrMemberAccess	c -> status		411286	0					
ANR	414619	Identifier	c		411286	0					
ANR	414620	Identifier	status		411286	1					
ANR	414621	Identifier	channel		411286	1					
ANR	414622	Identifier	predictor		411286	1					
ANR	414623	Identifier	current_sample		411286	1					
ANR	414624	ExpressionStatement	c -> status [ channel ] . prev_sample = previous_sample	917:16:18383:18431	411286	1	True				
ANR	414625	AssignmentExpression	c -> status [ channel ] . prev_sample = previous_sample		411286	0		=			
ANR	414626	MemberAccess	c -> status [ channel ] . prev_sample		411286	0					
ANR	414627	ArrayIndexing	c -> status [ channel ]		411286	0					
ANR	414628	PtrMemberAccess	c -> status		411286	0					
ANR	414629	Identifier	c		411286	0					
ANR	414630	Identifier	status		411286	1					
ANR	414631	Identifier	channel		411286	1					
ANR	414632	Identifier	prev_sample		411286	1					
ANR	414633	Identifier	previous_sample		411286	1					
ANR	414634	ExpressionStatement	src = src + buf_size - ( 4 + 4 * avctx -> channels )	925:8:18470:18516	411286	10	True				
ANR	414635	AssignmentExpression	src = src + buf_size - ( 4 + 4 * avctx -> channels )		411286	0		=			
ANR	414636	Identifier	src		411286	0					
ANR	414637	AdditiveExpression	src + buf_size - ( 4 + 4 * avctx -> channels )		411286	1		+			
ANR	414638	Identifier	src		411286	0					
ANR	414639	AdditiveExpression	buf_size - ( 4 + 4 * avctx -> channels )		411286	1		-			
ANR	414640	Identifier	buf_size		411286	0					
ANR	414641	AdditiveExpression	4 + 4 * avctx -> channels		411286	1		+			
ANR	414642	PrimaryExpression	4		411286	0					
ANR	414643	MultiplicativeExpression	4 * avctx -> channels		411286	1		*			
ANR	414644	PrimaryExpression	4		411286	0					
ANR	414645	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414646	Identifier	avctx		411286	0					
ANR	414647	Identifier	channels		411286	1					
ANR	414648	ExpressionStatement	samples += 28 * samples_in_chunk * avctx -> channels	927:8:18527:18577	411286	11	True				
ANR	414649	AssignmentExpression	samples += 28 * samples_in_chunk * avctx -> channels		411286	0		+=			
ANR	414650	Identifier	samples		411286	0					
ANR	414651	MultiplicativeExpression	28 * samples_in_chunk * avctx -> channels		411286	1		*			
ANR	414652	PrimaryExpression	28		411286	0					
ANR	414653	MultiplicativeExpression	samples_in_chunk * avctx -> channels		411286	1		*			
ANR	414654	Identifier	samples_in_chunk		411286	0					
ANR	414655	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414656	Identifier	avctx		411286	0					
ANR	414657	Identifier	channels		411286	1					
ANR	414658	BreakStatement	break ;	929:8:18588:18593	411286	12	True				
ANR	414659	Label	case CODEC_ID_ADPCM_EA_XAS :	933:4:18607:18633	411286	121	True				
ANR	414660	Identifier	CODEC_ID_ADPCM_EA_XAS		411286	0					
ANR	414661	IfStatement	if ( samples_end - samples < 32 * 4 * avctx -> channels || buf_size < ( 4 + 15 ) * 4 * avctx -> channels )		411286	122					
ANR	414662	Condition	samples_end - samples < 32 * 4 * avctx -> channels || buf_size < ( 4 + 15 ) * 4 * avctx -> channels	935:12:18648:18741	411286	0	True				
ANR	414663	OrExpression	samples_end - samples < 32 * 4 * avctx -> channels || buf_size < ( 4 + 15 ) * 4 * avctx -> channels		411286	0		||			
ANR	414664	RelationalExpression	samples_end - samples < 32 * 4 * avctx -> channels		411286	0		<			
ANR	414665	AdditiveExpression	samples_end - samples		411286	0		-			
ANR	414666	Identifier	samples_end		411286	0					
ANR	414667	Identifier	samples		411286	1					
ANR	414668	MultiplicativeExpression	32 * 4 * avctx -> channels		411286	1		*			
ANR	414669	PrimaryExpression	32		411286	0					
ANR	414670	MultiplicativeExpression	4 * avctx -> channels		411286	1		*			
ANR	414671	PrimaryExpression	4		411286	0					
ANR	414672	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414673	Identifier	avctx		411286	0					
ANR	414674	Identifier	channels		411286	1					
ANR	414675	RelationalExpression	buf_size < ( 4 + 15 ) * 4 * avctx -> channels		411286	1		<			
ANR	414676	Identifier	buf_size		411286	0					
ANR	414677	MultiplicativeExpression	( 4 + 15 ) * 4 * avctx -> channels		411286	1		*			
ANR	414678	AdditiveExpression	4 + 15		411286	0		+			
ANR	414679	PrimaryExpression	4		411286	0					
ANR	414680	PrimaryExpression	15		411286	1					
ANR	414681	MultiplicativeExpression	4 * avctx -> channels		411286	1		*			
ANR	414682	PrimaryExpression	4		411286	0					
ANR	414683	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414684	Identifier	avctx		411286	0					
ANR	414685	Identifier	channels		411286	1					
ANR	414686	CompoundStatement		931:52:18569:18569	411286	1					
ANR	414687	ExpressionStatement	src += buf_size	939:12:18759:18774	411286	0	True				
ANR	414688	AssignmentExpression	src += buf_size		411286	0		+=			
ANR	414689	Identifier	src		411286	0					
ANR	414690	Identifier	buf_size		411286	1					
ANR	414691	BreakStatement	break ;	941:12:18789:18794	411286	1	True				
ANR	414692	ForStatement	for ( channel = 0 ; channel < avctx -> channels ; channel ++ )		411286	123					
ANR	414693	ForInit	channel = 0 ;	945:13:18821:18830	411286	0	True				
ANR	414694	AssignmentExpression	channel = 0		411286	0		=			
ANR	414695	Identifier	channel		411286	0					
ANR	414696	PrimaryExpression	0		411286	1					
ANR	414697	Condition	channel < avctx -> channels	945:24:18832:18854	411286	1	True				
ANR	414698	RelationalExpression	channel < avctx -> channels		411286	0		<			
ANR	414699	Identifier	channel		411286	0					
ANR	414700	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414701	Identifier	avctx		411286	0					
ANR	414702	Identifier	channels		411286	1					
ANR	414703	PostIncDecOperationExpression	channel ++	945:49:18857:18865	411286	2	True				
ANR	414704	Identifier	channel		411286	0					
ANR	414705	IncDec	++		411286	1					
ANR	414706	CompoundStatement		943:12:18748:18781	411286	3					
ANR	414707	Statement	int	947:12:18883:18885	411286	0	True				
ANR	414708	ExpressionStatement	"coeff [ 2 ] [ 4 ] , shift [ 4 ]"	947:16:18887:18908	411286	1	True				
ANR	414709	Expression	"coeff [ 2 ] [ 4 ] , shift [ 4 ]"		411286	0					
ANR	414710	ArrayIndexing	coeff [ 2 ] [ 4 ]		411286	0					
ANR	414711	ArrayIndexing	coeff [ 2 ]		411286	0					
ANR	414712	Identifier	coeff		411286	0					
ANR	414713	PrimaryExpression	2		411286	1					
ANR	414714	PrimaryExpression	4		411286	1					
ANR	414715	ArrayIndexing	shift [ 4 ]		411286	1					
ANR	414716	Identifier	shift		411286	0					
ANR	414717	PrimaryExpression	4		411286	1					
ANR	414718	IdentifierDeclStatement	"short * s2 , * s = & samples [ channel ] ;"	949:12:18923:18956	411286	2	True				
ANR	414719	IdentifierDecl	* s2		411286	0					
ANR	414720	IdentifierDeclType	short *		411286	0					
ANR	414721	Identifier	s2		411286	1					
ANR	414722	IdentifierDecl	* s = & samples [ channel ]		411286	1					
ANR	414723	IdentifierDeclType	short *		411286	0					
ANR	414724	Identifier	s		411286	1					
ANR	414725	AssignmentExpression	* s = & samples [ channel ]		411286	2		=			
ANR	414726	Identifier	s		411286	0					
ANR	414727	UnaryOperationExpression	& samples [ channel ]		411286	1					
ANR	414728	UnaryOperator	&		411286	0					
ANR	414729	ArrayIndexing	samples [ channel ]		411286	1					
ANR	414730	Identifier	samples		411286	0					
ANR	414731	Identifier	channel		411286	1					
ANR	414732	ForStatement	"for ( n = 0 ; n < 4 ; n ++ , s += 32 * avctx -> channels )"		411286	3					
ANR	414733	ForInit	n = 0 ;	951:17:18976:18979	411286	0	True				
ANR	414734	AssignmentExpression	n = 0		411286	0		=			
ANR	414735	Identifier	n		411286	0					
ANR	414736	PrimaryExpression	0		411286	1					
ANR	414737	Condition	n < 4	951:22:18981:18983	411286	1	True				
ANR	414738	RelationalExpression	n < 4		411286	0		<			
ANR	414739	Identifier	n		411286	0					
ANR	414740	PrimaryExpression	4		411286	1					
ANR	414741	Expression	"n ++ , s += 32 * avctx -> channels"	951:27:18986:19011	411286	2	True				
ANR	414742	PostIncDecOperationExpression	n ++		411286	0					
ANR	414743	Identifier	n		411286	0					
ANR	414744	IncDec	++		411286	1					
ANR	414745	AssignmentExpression	s += 32 * avctx -> channels		411286	1		+=			
ANR	414746	Identifier	s		411286	0					
ANR	414747	MultiplicativeExpression	32 * avctx -> channels		411286	1		*			
ANR	414748	PrimaryExpression	32		411286	0					
ANR	414749	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414750	Identifier	avctx		411286	0					
ANR	414751	Identifier	channels		411286	1					
ANR	414752	CompoundStatement		945:55:18839:18839	411286	3					
ANR	414753	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		411286	0					
ANR	414754	ForInit	i = 0 ;	953:21:19038:19041	411286	0	True				
ANR	414755	AssignmentExpression	i = 0		411286	0		=			
ANR	414756	Identifier	i		411286	0					
ANR	414757	PrimaryExpression	0		411286	1					
ANR	414758	Condition	i < 2	953:26:19043:19045	411286	1	True				
ANR	414759	RelationalExpression	i < 2		411286	0		<			
ANR	414760	Identifier	i		411286	0					
ANR	414761	PrimaryExpression	2		411286	1					
ANR	414762	PostIncDecOperationExpression	i ++	953:31:19048:19050	411286	2	True				
ANR	414763	Identifier	i		411286	0					
ANR	414764	IncDec	++		411286	1					
ANR	414765	ExpressionStatement	coeff [ i ] [ n ] = ea_adpcm_table [ ( src [ 0 ] & 0x0F ) + 4 * i ]	955:20:19074:19121	411286	3	True				
ANR	414766	AssignmentExpression	coeff [ i ] [ n ] = ea_adpcm_table [ ( src [ 0 ] & 0x0F ) + 4 * i ]		411286	0		=			
ANR	414767	ArrayIndexing	coeff [ i ] [ n ]		411286	0					
ANR	414768	ArrayIndexing	coeff [ i ]		411286	0					
ANR	414769	Identifier	coeff		411286	0					
ANR	414770	Identifier	i		411286	1					
ANR	414771	Identifier	n		411286	1					
ANR	414772	ArrayIndexing	ea_adpcm_table [ ( src [ 0 ] & 0x0F ) + 4 * i ]		411286	1					
ANR	414773	Identifier	ea_adpcm_table		411286	0					
ANR	414774	AdditiveExpression	( src [ 0 ] & 0x0F ) + 4 * i		411286	1		+			
ANR	414775	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	414776	ArrayIndexing	src [ 0 ]		411286	0					
ANR	414777	Identifier	src		411286	0					
ANR	414778	PrimaryExpression	0		411286	1					
ANR	414779	PrimaryExpression	0x0F		411286	1					
ANR	414780	MultiplicativeExpression	4 * i		411286	1		*			
ANR	414781	PrimaryExpression	4		411286	0					
ANR	414782	Identifier	i		411286	1					
ANR	414783	ExpressionStatement	shift [ n ] = ( src [ 2 ] & 0x0F ) + 8	957:16:19140:19168	411286	1	True				
ANR	414784	AssignmentExpression	shift [ n ] = ( src [ 2 ] & 0x0F ) + 8		411286	0		=			
ANR	414785	ArrayIndexing	shift [ n ]		411286	0					
ANR	414786	Identifier	shift		411286	0					
ANR	414787	Identifier	n		411286	1					
ANR	414788	AdditiveExpression	( src [ 2 ] & 0x0F ) + 8		411286	1		+			
ANR	414789	BitAndExpression	src [ 2 ] & 0x0F		411286	0		&			
ANR	414790	ArrayIndexing	src [ 2 ]		411286	0					
ANR	414791	Identifier	src		411286	0					
ANR	414792	PrimaryExpression	2		411286	1					
ANR	414793	PrimaryExpression	0x0F		411286	1					
ANR	414794	PrimaryExpression	8		411286	1					
ANR	414795	ForStatement	"for ( s2 = s , i = 0 ; i < 2 ; i ++ , src += 2 , s2 += avctx -> channels )"		411286	2					
ANR	414796	ForInit	"s2 = s , i = 0 ;"	959:21:19192:19201	411286	0	True				
ANR	414797	Expression	"s2 = s , i = 0"		411286	0					
ANR	414798	AssignmentExpression	s2 = s		411286	0		=			
ANR	414799	Identifier	s2		411286	0					
ANR	414800	Identifier	s		411286	1					
ANR	414801	AssignmentExpression	i = 0		411286	1		=			
ANR	414802	Identifier	i		411286	0					
ANR	414803	PrimaryExpression	0		411286	1					
ANR	414804	Condition	i < 2	959:32:19203:19205	411286	1	True				
ANR	414805	RelationalExpression	i < 2		411286	0		<			
ANR	414806	Identifier	i		411286	0					
ANR	414807	PrimaryExpression	2		411286	1					
ANR	414808	Expression	"i ++ , src += 2 , s2 += avctx -> channels"	959:37:19208:19239	411286	2	True				
ANR	414809	PostIncDecOperationExpression	i ++		411286	0					
ANR	414810	Identifier	i		411286	0					
ANR	414811	IncDec	++		411286	1					
ANR	414812	Expression	"src += 2 , s2 += avctx -> channels"		411286	1					
ANR	414813	AssignmentExpression	src += 2		411286	0		+=			
ANR	414814	Identifier	src		411286	0					
ANR	414815	PrimaryExpression	2		411286	1					
ANR	414816	AssignmentExpression	s2 += avctx -> channels		411286	1		+=			
ANR	414817	Identifier	s2		411286	0					
ANR	414818	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414819	Identifier	avctx		411286	0					
ANR	414820	Identifier	channels		411286	1					
ANR	414821	ExpressionStatement	s2 [ 0 ] = ( src [ 0 ] & 0xF0 ) + ( src [ 1 ] << 8 )	961:20:19263:19298	411286	3	True				
ANR	414822	AssignmentExpression	s2 [ 0 ] = ( src [ 0 ] & 0xF0 ) + ( src [ 1 ] << 8 )		411286	0		=			
ANR	414823	ArrayIndexing	s2 [ 0 ]		411286	0					
ANR	414824	Identifier	s2		411286	0					
ANR	414825	PrimaryExpression	0		411286	1					
ANR	414826	AdditiveExpression	( src [ 0 ] & 0xF0 ) + ( src [ 1 ] << 8 )		411286	1		+			
ANR	414827	BitAndExpression	src [ 0 ] & 0xF0		411286	0		&			
ANR	414828	ArrayIndexing	src [ 0 ]		411286	0					
ANR	414829	Identifier	src		411286	0					
ANR	414830	PrimaryExpression	0		411286	1					
ANR	414831	PrimaryExpression	0xF0		411286	1					
ANR	414832	ShiftExpression	src [ 1 ] << 8		411286	1		<<			
ANR	414833	ArrayIndexing	src [ 1 ]		411286	0					
ANR	414834	Identifier	src		411286	0					
ANR	414835	PrimaryExpression	1		411286	1					
ANR	414836	PrimaryExpression	8		411286	1					
ANR	414837	ForStatement	for ( m = 2 ; m < 32 ; m += 2 )		411286	4					
ANR	414838	ForInit	m = 2 ;	967:17:19335:19338	411286	0	True				
ANR	414839	AssignmentExpression	m = 2		411286	0		=			
ANR	414840	Identifier	m		411286	0					
ANR	414841	PrimaryExpression	2		411286	1					
ANR	414842	Condition	m < 32	967:22:19340:19343	411286	1	True				
ANR	414843	RelationalExpression	m < 32		411286	0		<			
ANR	414844	Identifier	m		411286	0					
ANR	414845	PrimaryExpression	32		411286	1					
ANR	414846	AssignmentExpression	m += 2	967:28:19346:19349	411286	2	True	+=			
ANR	414847	Identifier	m		411286	0					
ANR	414848	PrimaryExpression	2		411286	1					
ANR	414849	CompoundStatement		961:34:19177:19177	411286	3					
ANR	414850	ExpressionStatement	s = & samples [ m * avctx -> channels + channel ]	969:16:19371:19412	411286	0	True				
ANR	414851	AssignmentExpression	s = & samples [ m * avctx -> channels + channel ]		411286	0		=			
ANR	414852	Identifier	s		411286	0					
ANR	414853	UnaryOperationExpression	& samples [ m * avctx -> channels + channel ]		411286	1					
ANR	414854	UnaryOperator	&		411286	0					
ANR	414855	ArrayIndexing	samples [ m * avctx -> channels + channel ]		411286	1					
ANR	414856	Identifier	samples		411286	0					
ANR	414857	AdditiveExpression	m * avctx -> channels + channel		411286	1		+			
ANR	414858	MultiplicativeExpression	m * avctx -> channels		411286	0		*			
ANR	414859	Identifier	m		411286	0					
ANR	414860	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414861	Identifier	avctx		411286	0					
ANR	414862	Identifier	channels		411286	1					
ANR	414863	Identifier	channel		411286	1					
ANR	414864	ForStatement	"for ( n = 0 ; n < 4 ; n ++ , src ++ , s += 32 * avctx -> channels )"		411286	1					
ANR	414865	ForInit	n = 0 ;	971:21:19436:19439	411286	0	True				
ANR	414866	AssignmentExpression	n = 0		411286	0		=			
ANR	414867	Identifier	n		411286	0					
ANR	414868	PrimaryExpression	0		411286	1					
ANR	414869	Condition	n < 4	971:26:19441:19443	411286	1	True				
ANR	414870	RelationalExpression	n < 4		411286	0		<			
ANR	414871	Identifier	n		411286	0					
ANR	414872	PrimaryExpression	4		411286	1					
ANR	414873	Expression	"n ++ , src ++ , s += 32 * avctx -> channels"	971:31:19446:19478	411286	2	True				
ANR	414874	PostIncDecOperationExpression	n ++		411286	0					
ANR	414875	Identifier	n		411286	0					
ANR	414876	IncDec	++		411286	1					
ANR	414877	Expression	"src ++ , s += 32 * avctx -> channels"		411286	1					
ANR	414878	PostIncDecOperationExpression	src ++		411286	0					
ANR	414879	Identifier	src		411286	0					
ANR	414880	IncDec	++		411286	1					
ANR	414881	AssignmentExpression	s += 32 * avctx -> channels		411286	1		+=			
ANR	414882	Identifier	s		411286	0					
ANR	414883	MultiplicativeExpression	32 * avctx -> channels		411286	1		*			
ANR	414884	PrimaryExpression	32		411286	0					
ANR	414885	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414886	Identifier	avctx		411286	0					
ANR	414887	Identifier	channels		411286	1					
ANR	414888	CompoundStatement		965:66:19306:19306	411286	3					
ANR	414889	ForStatement	"for ( s2 = s , i = 0 ; i < 8 ; i += 4 , s2 += avctx -> channels )"		411286	0					
ANR	414890	ForInit	"s2 = s , i = 0 ;"	973:25:19509:19518	411286	0	True				
ANR	414891	Expression	"s2 = s , i = 0"		411286	0					
ANR	414892	AssignmentExpression	s2 = s		411286	0		=			
ANR	414893	Identifier	s2		411286	0					
ANR	414894	Identifier	s		411286	1					
ANR	414895	AssignmentExpression	i = 0		411286	1		=			
ANR	414896	Identifier	i		411286	0					
ANR	414897	PrimaryExpression	0		411286	1					
ANR	414898	Condition	i < 8	973:36:19520:19522	411286	1	True				
ANR	414899	RelationalExpression	i < 8		411286	0		<			
ANR	414900	Identifier	i		411286	0					
ANR	414901	PrimaryExpression	8		411286	1					
ANR	414902	Expression	"i += 4 , s2 += avctx -> channels"	973:41:19525:19549	411286	2	True				
ANR	414903	AssignmentExpression	i += 4		411286	0		+=			
ANR	414904	Identifier	i		411286	0					
ANR	414905	PrimaryExpression	4		411286	1					
ANR	414906	AssignmentExpression	s2 += avctx -> channels		411286	1		+=			
ANR	414907	Identifier	s2		411286	0					
ANR	414908	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414909	Identifier	avctx		411286	0					
ANR	414910	Identifier	channels		411286	1					
ANR	414911	CompoundStatement		971:24:19494:19616	411286	3					
ANR	414912	IdentifierDeclStatement	int level = ( int32_t ) ( ( * src & ( 0xF0 >> i ) ) << ( 24 + i ) ) >> shift [ n ] ;	975:24:19579:19642	411286	0	True				
ANR	414913	IdentifierDecl	level = ( int32_t ) ( ( * src & ( 0xF0 >> i ) ) << ( 24 + i ) ) >> shift [ n ]		411286	0					
ANR	414914	IdentifierDeclType	int		411286	0					
ANR	414915	Identifier	level		411286	1					
ANR	414916	AssignmentExpression	level = ( int32_t ) ( ( * src & ( 0xF0 >> i ) ) << ( 24 + i ) ) >> shift [ n ]		411286	2		=			
ANR	414917	Identifier	level		411286	0					
ANR	414918	ShiftExpression	( int32_t ) ( ( * src & ( 0xF0 >> i ) ) << ( 24 + i ) ) >> shift [ n ]		411286	1		>>			
ANR	414919	CastExpression	( int32_t ) ( ( * src & ( 0xF0 >> i ) ) << ( 24 + i ) )		411286	0					
ANR	414920	CastTarget	int32_t		411286	0					
ANR	414921	ShiftExpression	( * src & ( 0xF0 >> i ) ) << ( 24 + i )		411286	1		<<			
ANR	414922	BitAndExpression	* src & ( 0xF0 >> i )		411286	0		&			
ANR	414923	UnaryOperationExpression	* src		411286	0					
ANR	414924	UnaryOperator	*		411286	0					
ANR	414925	Identifier	src		411286	1					
ANR	414926	ShiftExpression	0xF0 >> i		411286	1		>>			
ANR	414927	PrimaryExpression	0xF0		411286	0					
ANR	414928	Identifier	i		411286	1					
ANR	414929	AdditiveExpression	24 + i		411286	1		+			
ANR	414930	PrimaryExpression	24		411286	0					
ANR	414931	Identifier	i		411286	1					
ANR	414932	ArrayIndexing	shift [ n ]		411286	1					
ANR	414933	Identifier	shift		411286	0					
ANR	414934	Identifier	n		411286	1					
ANR	414935	IdentifierDeclStatement	int pred = s2 [ - 1 * avctx -> channels ] * coeff [ 0 ] [ n ] + s2 [ - 2 * avctx -> channels ] * coeff [ 1 ] [ n ] ;	977:24:19669:19791	411286	1	True				
ANR	414936	IdentifierDecl	pred = s2 [ - 1 * avctx -> channels ] * coeff [ 0 ] [ n ] + s2 [ - 2 * avctx -> channels ] * coeff [ 1 ] [ n ]		411286	0					
ANR	414937	IdentifierDeclType	int		411286	0					
ANR	414938	Identifier	pred		411286	1					
ANR	414939	AssignmentExpression	pred = s2 [ - 1 * avctx -> channels ] * coeff [ 0 ] [ n ] + s2 [ - 2 * avctx -> channels ] * coeff [ 1 ] [ n ]		411286	2		=			
ANR	414940	Identifier	pred		411286	0					
ANR	414941	AdditiveExpression	s2 [ - 1 * avctx -> channels ] * coeff [ 0 ] [ n ] + s2 [ - 2 * avctx -> channels ] * coeff [ 1 ] [ n ]		411286	1		+			
ANR	414942	MultiplicativeExpression	s2 [ - 1 * avctx -> channels ] * coeff [ 0 ] [ n ]		411286	0		*			
ANR	414943	ArrayIndexing	s2 [ - 1 * avctx -> channels ]		411286	0					
ANR	414944	Identifier	s2		411286	0					
ANR	414945	MultiplicativeExpression	- 1 * avctx -> channels		411286	1		*			
ANR	414946	UnaryOperationExpression	- 1		411286	0					
ANR	414947	UnaryOperator	-		411286	0					
ANR	414948	PrimaryExpression	1		411286	1					
ANR	414949	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414950	Identifier	avctx		411286	0					
ANR	414951	Identifier	channels		411286	1					
ANR	414952	ArrayIndexing	coeff [ 0 ] [ n ]		411286	1					
ANR	414953	ArrayIndexing	coeff [ 0 ]		411286	0					
ANR	414954	Identifier	coeff		411286	0					
ANR	414955	PrimaryExpression	0		411286	1					
ANR	414956	Identifier	n		411286	1					
ANR	414957	MultiplicativeExpression	s2 [ - 2 * avctx -> channels ] * coeff [ 1 ] [ n ]		411286	1		*			
ANR	414958	ArrayIndexing	s2 [ - 2 * avctx -> channels ]		411286	0					
ANR	414959	Identifier	s2		411286	0					
ANR	414960	MultiplicativeExpression	- 2 * avctx -> channels		411286	1		*			
ANR	414961	UnaryOperationExpression	- 2		411286	0					
ANR	414962	UnaryOperator	-		411286	0					
ANR	414963	PrimaryExpression	2		411286	1					
ANR	414964	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414965	Identifier	avctx		411286	0					
ANR	414966	Identifier	channels		411286	1					
ANR	414967	ArrayIndexing	coeff [ 1 ] [ n ]		411286	1					
ANR	414968	ArrayIndexing	coeff [ 1 ]		411286	0					
ANR	414969	Identifier	coeff		411286	0					
ANR	414970	PrimaryExpression	1		411286	1					
ANR	414971	Identifier	n		411286	1					
ANR	414972	ExpressionStatement	s2 [ 0 ] = av_clip_int16 ( ( level + pred + 0x80 ) >> 8 )	981:24:19818:19867	411286	2	True				
ANR	414973	AssignmentExpression	s2 [ 0 ] = av_clip_int16 ( ( level + pred + 0x80 ) >> 8 )		411286	0		=			
ANR	414974	ArrayIndexing	s2 [ 0 ]		411286	0					
ANR	414975	Identifier	s2		411286	0					
ANR	414976	PrimaryExpression	0		411286	1					
ANR	414977	CallExpression	av_clip_int16 ( ( level + pred + 0x80 ) >> 8 )		411286	1					
ANR	414978	Callee	av_clip_int16		411286	0					
ANR	414979	Identifier	av_clip_int16		411286	0					
ANR	414980	ArgumentList	( level + pred + 0x80 ) >> 8		411286	1					
ANR	414981	Argument	( level + pred + 0x80 ) >> 8		411286	0					
ANR	414982	ShiftExpression	( level + pred + 0x80 ) >> 8		411286	0		>>			
ANR	414983	AdditiveExpression	level + pred + 0x80		411286	0		+			
ANR	414984	Identifier	level		411286	0					
ANR	414985	AdditiveExpression	pred + 0x80		411286	1		+			
ANR	414986	Identifier	pred		411286	0					
ANR	414987	PrimaryExpression	0x80		411286	1					
ANR	414988	PrimaryExpression	8		411286	1					
ANR	414989	ExpressionStatement	samples += 32 * 4 * avctx -> channels	991:8:19946:19977	411286	124	True				
ANR	414990	AssignmentExpression	samples += 32 * 4 * avctx -> channels		411286	0		+=			
ANR	414991	Identifier	samples		411286	0					
ANR	414992	MultiplicativeExpression	32 * 4 * avctx -> channels		411286	1		*			
ANR	414993	PrimaryExpression	32		411286	0					
ANR	414994	MultiplicativeExpression	4 * avctx -> channels		411286	1		*			
ANR	414995	PrimaryExpression	4		411286	0					
ANR	414996	PtrMemberAccess	avctx -> channels		411286	1					
ANR	414997	Identifier	avctx		411286	0					
ANR	414998	Identifier	channels		411286	1					
ANR	414999	BreakStatement	break ;	993:8:19988:19993	411286	125	True				
ANR	415000	Label	case CODEC_ID_ADPCM_IMA_AMV :	995:4:20000:20027	411286	126	True				
ANR	415001	Identifier	CODEC_ID_ADPCM_IMA_AMV		411286	0					
ANR	415002	Label	case CODEC_ID_ADPCM_IMA_SMJPEG :	997:4:20034:20064	411286	127	True				
ANR	415003	Identifier	CODEC_ID_ADPCM_IMA_SMJPEG		411286	0					
ANR	415004	ExpressionStatement	c -> status [ 0 ] . predictor = ( int16_t ) bytestream_get_le16 ( & src )	999:8:20075:20134	411286	128	True				
ANR	415005	AssignmentExpression	c -> status [ 0 ] . predictor = ( int16_t ) bytestream_get_le16 ( & src )		411286	0		=			
ANR	415006	MemberAccess	c -> status [ 0 ] . predictor		411286	0					
ANR	415007	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	415008	PtrMemberAccess	c -> status		411286	0					
ANR	415009	Identifier	c		411286	0					
ANR	415010	Identifier	status		411286	1					
ANR	415011	PrimaryExpression	0		411286	1					
ANR	415012	Identifier	predictor		411286	1					
ANR	415013	CastExpression	( int16_t ) bytestream_get_le16 ( & src )		411286	1					
ANR	415014	CastTarget	int16_t		411286	0					
ANR	415015	CallExpression	bytestream_get_le16 ( & src )		411286	1					
ANR	415016	Callee	bytestream_get_le16		411286	0					
ANR	415017	Identifier	bytestream_get_le16		411286	0					
ANR	415018	ArgumentList	& src		411286	1					
ANR	415019	Argument	& src		411286	0					
ANR	415020	UnaryOperationExpression	& src		411286	0					
ANR	415021	UnaryOperator	&		411286	0					
ANR	415022	Identifier	src		411286	1					
ANR	415023	ExpressionStatement	c -> status [ 0 ] . step_index = bytestream_get_le16 ( & src )	1001:8:20145:20196	411286	129	True				
ANR	415024	AssignmentExpression	c -> status [ 0 ] . step_index = bytestream_get_le16 ( & src )		411286	0		=			
ANR	415025	MemberAccess	c -> status [ 0 ] . step_index		411286	0					
ANR	415026	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	415027	PtrMemberAccess	c -> status		411286	0					
ANR	415028	Identifier	c		411286	0					
ANR	415029	Identifier	status		411286	1					
ANR	415030	PrimaryExpression	0		411286	1					
ANR	415031	Identifier	step_index		411286	1					
ANR	415032	CallExpression	bytestream_get_le16 ( & src )		411286	1					
ANR	415033	Callee	bytestream_get_le16		411286	0					
ANR	415034	Identifier	bytestream_get_le16		411286	0					
ANR	415035	ArgumentList	& src		411286	1					
ANR	415036	Argument	& src		411286	0					
ANR	415037	UnaryOperationExpression	& src		411286	0					
ANR	415038	UnaryOperator	&		411286	0					
ANR	415039	Identifier	src		411286	1					
ANR	415040	IfStatement	if ( avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV )		411286	130					
ANR	415041	Condition	avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV	1005:12:20213:20254	411286	0	True				
ANR	415042	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV		411286	0		==			
ANR	415043	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	415044	PtrMemberAccess	avctx -> codec		411286	0					
ANR	415045	Identifier	avctx		411286	0					
ANR	415046	Identifier	codec		411286	1					
ANR	415047	Identifier	id		411286	1					
ANR	415048	Identifier	CODEC_ID_ADPCM_IMA_AMV		411286	1					
ANR	415049	ExpressionStatement	src += 4	1007:12:20270:20276	411286	1	True				
ANR	415050	AssignmentExpression	src += 4		411286	0		+=			
ANR	415051	Identifier	src		411286	0					
ANR	415052	PrimaryExpression	4		411286	1					
ANR	415053	WhileStatement	while ( src < buf + buf_size )		411286	131					
ANR	415054	Condition	src < buf + buf_size	1011:15:20296:20315	411286	0	True				
ANR	415055	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	415056	Identifier	src		411286	0					
ANR	415057	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	415058	Identifier	buf		411286	0					
ANR	415059	Identifier	buf_size		411286	1					
ANR	415060	CompoundStatement		1007:12:20158:20169	411286	1					
ANR	415061	IdentifierDeclStatement	"char hi , lo ;"	1013:12:20333:20344	411286	0	True				
ANR	415062	IdentifierDecl	hi		411286	0					
ANR	415063	IdentifierDeclType	char		411286	0					
ANR	415064	Identifier	hi		411286	1					
ANR	415065	IdentifierDecl	lo		411286	1					
ANR	415066	IdentifierDeclType	char		411286	0					
ANR	415067	Identifier	lo		411286	1					
ANR	415068	ExpressionStatement	lo = * src & 0x0F	1015:12:20359:20375	411286	1	True				
ANR	415069	AssignmentExpression	lo = * src & 0x0F		411286	0		=			
ANR	415070	Identifier	lo		411286	0					
ANR	415071	BitAndExpression	* src & 0x0F		411286	1		&			
ANR	415072	UnaryOperationExpression	* src		411286	0					
ANR	415073	UnaryOperator	*		411286	0					
ANR	415074	Identifier	src		411286	1					
ANR	415075	PrimaryExpression	0x0F		411286	1					
ANR	415076	ExpressionStatement	hi = * src >> 4	1017:12:20390:20404	411286	2	True				
ANR	415077	AssignmentExpression	hi = * src >> 4		411286	0		=			
ANR	415078	Identifier	hi		411286	0					
ANR	415079	ShiftExpression	* src >> 4		411286	1		>>			
ANR	415080	UnaryOperationExpression	* src		411286	0					
ANR	415081	UnaryOperator	*		411286	0					
ANR	415082	Identifier	src		411286	1					
ANR	415083	PrimaryExpression	4		411286	1					
ANR	415084	IfStatement	if ( avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV )		411286	3					
ANR	415085	Condition	avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV	1021:16:20425:20466	411286	0	True				
ANR	415086	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_IMA_AMV		411286	0		==			
ANR	415087	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	415088	PtrMemberAccess	avctx -> codec		411286	0					
ANR	415089	Identifier	avctx		411286	0					
ANR	415090	Identifier	codec		411286	1					
ANR	415091	Identifier	id		411286	1					
ANR	415092	Identifier	CODEC_ID_ADPCM_IMA_AMV		411286	1					
ANR	415093	ExpressionStatement	"FFSWAP ( char , hi , lo )"	1023:16:20486:20506	411286	1	True				
ANR	415094	CallExpression	"FFSWAP ( char , hi , lo )"		411286	0					
ANR	415095	Callee	FFSWAP		411286	0					
ANR	415096	Identifier	FFSWAP		411286	0					
ANR	415097	ArgumentList	char		411286	1					
ANR	415098	Argument	char		411286	0					
ANR	415099	Identifier	char		411286	0					
ANR	415100	Argument	hi		411286	1					
ANR	415101	Identifier	hi		411286	0					
ANR	415102	Argument	lo		411286	2					
ANR	415103	Identifier	lo		411286	0					
ANR	415104	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , lo , 3 )"	1027:12:20523:20598	411286	4	True				
ANR	415105	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , lo , 3 )"		411286	0		=			
ANR	415106	UnaryOperationExpression	* samples ++		411286	0					
ANR	415107	UnaryOperator	*		411286	0					
ANR	415108	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415109	Identifier	samples		411286	0					
ANR	415110	IncDec	++		411286	1					
ANR	415111	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , lo , 3 )"		411286	1					
ANR	415112	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	415113	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	415114	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415115	Argument	& c -> status [ 0 ]		411286	0					
ANR	415116	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415117	UnaryOperator	&		411286	0					
ANR	415118	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415119	PtrMemberAccess	c -> status		411286	0					
ANR	415120	Identifier	c		411286	0					
ANR	415121	Identifier	status		411286	1					
ANR	415122	PrimaryExpression	0		411286	1					
ANR	415123	Argument	lo		411286	1					
ANR	415124	Identifier	lo		411286	0					
ANR	415125	Argument	3		411286	2					
ANR	415126	PrimaryExpression	3		411286	0					
ANR	415127	ExpressionStatement	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , hi , 3 )"	1031:12:20613:20688	411286	5	True				
ANR	415128	AssignmentExpression	"* samples ++ = adpcm_ima_expand_nibble ( & c -> status [ 0 ] , hi , 3 )"		411286	0		=			
ANR	415129	UnaryOperationExpression	* samples ++		411286	0					
ANR	415130	UnaryOperator	*		411286	0					
ANR	415131	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415132	Identifier	samples		411286	0					
ANR	415133	IncDec	++		411286	1					
ANR	415134	CallExpression	"adpcm_ima_expand_nibble ( & c -> status [ 0 ] , hi , 3 )"		411286	1					
ANR	415135	Callee	adpcm_ima_expand_nibble		411286	0					
ANR	415136	Identifier	adpcm_ima_expand_nibble		411286	0					
ANR	415137	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415138	Argument	& c -> status [ 0 ]		411286	0					
ANR	415139	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415140	UnaryOperator	&		411286	0					
ANR	415141	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415142	PtrMemberAccess	c -> status		411286	0					
ANR	415143	Identifier	c		411286	0					
ANR	415144	Identifier	status		411286	1					
ANR	415145	PrimaryExpression	0		411286	1					
ANR	415146	Argument	hi		411286	1					
ANR	415147	Identifier	hi		411286	0					
ANR	415148	Argument	3		411286	2					
ANR	415149	PrimaryExpression	3		411286	0					
ANR	415150	ExpressionStatement	src ++	1035:12:20703:20708	411286	6	True				
ANR	415151	PostIncDecOperationExpression	src ++		411286	0					
ANR	415152	Identifier	src		411286	0					
ANR	415153	IncDec	++		411286	1					
ANR	415154	BreakStatement	break ;	1039:8:20730:20735	411286	132	True				
ANR	415155	Label	case CODEC_ID_ADPCM_CT :	1041:4:20742:20764	411286	133	True				
ANR	415156	Identifier	CODEC_ID_ADPCM_CT		411286	0					
ANR	415157	WhileStatement	while ( src < buf + buf_size )		411286	134					
ANR	415158	Condition	src < buf + buf_size	1043:15:20782:20801	411286	0	True				
ANR	415159	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	415160	Identifier	src		411286	0					
ANR	415161	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	415162	Identifier	buf		411286	0					
ANR	415163	Identifier	buf_size		411286	1					
ANR	415164	CompoundStatement		1037:37:20629:20629	411286	1					
ANR	415165	IfStatement	if ( st )		411286	0					
ANR	415166	Condition	st	1045:16:20823:20824	411286	0	True				
ANR	415167	Identifier	st		411286	0					
ANR	415168	CompoundStatement		1039:20:20652:20652	411286	1					
ANR	415169	ExpressionStatement	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"	1047:16:20846:20930	411286	0	True				
ANR	415170	AssignmentExpression	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	0		=			
ANR	415171	UnaryOperationExpression	* samples ++		411286	0					
ANR	415172	UnaryOperator	*		411286	0					
ANR	415173	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415174	Identifier	samples		411286	0					
ANR	415175	IncDec	++		411286	1					
ANR	415176	CallExpression	"adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	1					
ANR	415177	Callee	adpcm_ct_expand_nibble		411286	0					
ANR	415178	Identifier	adpcm_ct_expand_nibble		411286	0					
ANR	415179	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415180	Argument	& c -> status [ 0 ]		411286	0					
ANR	415181	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415182	UnaryOperator	&		411286	0					
ANR	415183	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415184	PtrMemberAccess	c -> status		411286	0					
ANR	415185	Identifier	c		411286	0					
ANR	415186	Identifier	status		411286	1					
ANR	415187	PrimaryExpression	0		411286	1					
ANR	415188	Argument	src [ 0 ] >> 4		411286	1					
ANR	415189	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	415190	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415191	Identifier	src		411286	0					
ANR	415192	PrimaryExpression	0		411286	1					
ANR	415193	PrimaryExpression	4		411286	1					
ANR	415194	ExpressionStatement	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F )"	1051:16:20949:21035	411286	1	True				
ANR	415195	AssignmentExpression	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F )"		411286	0		=			
ANR	415196	UnaryOperationExpression	* samples ++		411286	0					
ANR	415197	UnaryOperator	*		411286	0					
ANR	415198	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415199	Identifier	samples		411286	0					
ANR	415200	IncDec	++		411286	1					
ANR	415201	CallExpression	"adpcm_ct_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] & 0x0F )"		411286	1					
ANR	415202	Callee	adpcm_ct_expand_nibble		411286	0					
ANR	415203	Identifier	adpcm_ct_expand_nibble		411286	0					
ANR	415204	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	415205	Argument	& c -> status [ 1 ]		411286	0					
ANR	415206	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	415207	UnaryOperator	&		411286	0					
ANR	415208	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	415209	PtrMemberAccess	c -> status		411286	0					
ANR	415210	Identifier	c		411286	0					
ANR	415211	Identifier	status		411286	1					
ANR	415212	PrimaryExpression	1		411286	1					
ANR	415213	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	415214	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	415215	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415216	Identifier	src		411286	0					
ANR	415217	PrimaryExpression	0		411286	1					
ANR	415218	PrimaryExpression	0x0F		411286	1					
ANR	415219	ElseStatement	else		411286	0					
ANR	415220	CompoundStatement		1049:19:20882:20882	411286	0					
ANR	415221	ExpressionStatement	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"	1057:16:21076:21160	411286	0	True				
ANR	415222	AssignmentExpression	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	0		=			
ANR	415223	UnaryOperationExpression	* samples ++		411286	0					
ANR	415224	UnaryOperator	*		411286	0					
ANR	415225	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415226	Identifier	samples		411286	0					
ANR	415227	IncDec	++		411286	1					
ANR	415228	CallExpression	"adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	1					
ANR	415229	Callee	adpcm_ct_expand_nibble		411286	0					
ANR	415230	Identifier	adpcm_ct_expand_nibble		411286	0					
ANR	415231	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415232	Argument	& c -> status [ 0 ]		411286	0					
ANR	415233	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415234	UnaryOperator	&		411286	0					
ANR	415235	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415236	PtrMemberAccess	c -> status		411286	0					
ANR	415237	Identifier	c		411286	0					
ANR	415238	Identifier	status		411286	1					
ANR	415239	PrimaryExpression	0		411286	1					
ANR	415240	Argument	src [ 0 ] >> 4		411286	1					
ANR	415241	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	415242	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415243	Identifier	src		411286	0					
ANR	415244	PrimaryExpression	0		411286	1					
ANR	415245	PrimaryExpression	4		411286	1					
ANR	415246	ExpressionStatement	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"	1061:16:21179:21265	411286	1	True				
ANR	415247	AssignmentExpression	"* samples ++ = adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	0		=			
ANR	415248	UnaryOperationExpression	* samples ++		411286	0					
ANR	415249	UnaryOperator	*		411286	0					
ANR	415250	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415251	Identifier	samples		411286	0					
ANR	415252	IncDec	++		411286	1					
ANR	415253	CallExpression	"adpcm_ct_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	1					
ANR	415254	Callee	adpcm_ct_expand_nibble		411286	0					
ANR	415255	Identifier	adpcm_ct_expand_nibble		411286	0					
ANR	415256	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415257	Argument	& c -> status [ 0 ]		411286	0					
ANR	415258	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415259	UnaryOperator	&		411286	0					
ANR	415260	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415261	PtrMemberAccess	c -> status		411286	0					
ANR	415262	Identifier	c		411286	0					
ANR	415263	Identifier	status		411286	1					
ANR	415264	PrimaryExpression	0		411286	1					
ANR	415265	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	415266	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	415267	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415268	Identifier	src		411286	0					
ANR	415269	PrimaryExpression	0		411286	1					
ANR	415270	PrimaryExpression	0x0F		411286	1					
ANR	415271	ExpressionStatement	src ++	1067:12:21295:21300	411286	1	True				
ANR	415272	PostIncDecOperationExpression	src ++		411286	0					
ANR	415273	Identifier	src		411286	0					
ANR	415274	IncDec	++		411286	1					
ANR	415275	BreakStatement	break ;	1071:8:21322:21327	411286	135	True				
ANR	415276	Label	case CODEC_ID_ADPCM_SBPRO_4 :	1073:4:21334:21361	411286	136	True				
ANR	415277	Identifier	CODEC_ID_ADPCM_SBPRO_4		411286	0					
ANR	415278	Label	case CODEC_ID_ADPCM_SBPRO_3 :	1075:4:21368:21395	411286	137	True				
ANR	415279	Identifier	CODEC_ID_ADPCM_SBPRO_3		411286	0					
ANR	415280	Label	case CODEC_ID_ADPCM_SBPRO_2 :	1077:4:21402:21429	411286	138	True				
ANR	415281	Identifier	CODEC_ID_ADPCM_SBPRO_2		411286	0					
ANR	415282	IfStatement	if ( ! c -> status [ 0 ] . step_index )		411286	139					
ANR	415283	Condition	! c -> status [ 0 ] . step_index	1079:12:21444:21467	411286	0	True				
ANR	415284	UnaryOperationExpression	! c -> status [ 0 ] . step_index		411286	0					
ANR	415285	UnaryOperator	!		411286	0					
ANR	415286	MemberAccess	c -> status [ 0 ] . step_index		411286	1					
ANR	415287	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	415288	PtrMemberAccess	c -> status		411286	0					
ANR	415289	Identifier	c		411286	0					
ANR	415290	Identifier	status		411286	1					
ANR	415291	PrimaryExpression	0		411286	1					
ANR	415292	Identifier	step_index		411286	1					
ANR	415293	CompoundStatement		1073:38:21295:21295	411286	1					
ANR	415294	ExpressionStatement	* samples ++ = 128 * ( * src ++ - 0x80 )	1083:12:21535:21569	411286	0	True				
ANR	415295	AssignmentExpression	* samples ++ = 128 * ( * src ++ - 0x80 )		411286	0		=			
ANR	415296	UnaryOperationExpression	* samples ++		411286	0					
ANR	415297	UnaryOperator	*		411286	0					
ANR	415298	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415299	Identifier	samples		411286	0					
ANR	415300	IncDec	++		411286	1					
ANR	415301	MultiplicativeExpression	128 * ( * src ++ - 0x80 )		411286	1		*			
ANR	415302	PrimaryExpression	128		411286	0					
ANR	415303	AdditiveExpression	* src ++ - 0x80		411286	1		-			
ANR	415304	UnaryOperationExpression	* src ++		411286	0					
ANR	415305	UnaryOperator	*		411286	0					
ANR	415306	PostIncDecOperationExpression	src ++		411286	1					
ANR	415307	Identifier	src		411286	0					
ANR	415308	IncDec	++		411286	1					
ANR	415309	PrimaryExpression	0x80		411286	1					
ANR	415310	IfStatement	if ( st )		411286	1					
ANR	415311	Condition	st	1085:16:21588:21589	411286	0	True				
ANR	415312	Identifier	st		411286	0					
ANR	415313	ExpressionStatement	* samples ++ = 128 * ( * src ++ - 0x80 )	1087:14:21607:21641	411286	1	True				
ANR	415314	AssignmentExpression	* samples ++ = 128 * ( * src ++ - 0x80 )		411286	0		=			
ANR	415315	UnaryOperationExpression	* samples ++		411286	0					
ANR	415316	UnaryOperator	*		411286	0					
ANR	415317	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415318	Identifier	samples		411286	0					
ANR	415319	IncDec	++		411286	1					
ANR	415320	MultiplicativeExpression	128 * ( * src ++ - 0x80 )		411286	1		*			
ANR	415321	PrimaryExpression	128		411286	0					
ANR	415322	AdditiveExpression	* src ++ - 0x80		411286	1		-			
ANR	415323	UnaryOperationExpression	* src ++		411286	0					
ANR	415324	UnaryOperator	*		411286	0					
ANR	415325	PostIncDecOperationExpression	src ++		411286	1					
ANR	415326	Identifier	src		411286	0					
ANR	415327	IncDec	++		411286	1					
ANR	415328	PrimaryExpression	0x80		411286	1					
ANR	415329	ExpressionStatement	c -> status [ 0 ] . step_index = 1	1089:12:21656:21683	411286	2	True				
ANR	415330	AssignmentExpression	c -> status [ 0 ] . step_index = 1		411286	0		=			
ANR	415331	MemberAccess	c -> status [ 0 ] . step_index		411286	0					
ANR	415332	ArrayIndexing	c -> status [ 0 ]		411286	0					
ANR	415333	PtrMemberAccess	c -> status		411286	0					
ANR	415334	Identifier	c		411286	0					
ANR	415335	Identifier	status		411286	1					
ANR	415336	PrimaryExpression	0		411286	1					
ANR	415337	Identifier	step_index		411286	1					
ANR	415338	PrimaryExpression	1		411286	1					
ANR	415339	IfStatement	if ( avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_4 )		411286	140					
ANR	415340	Condition	avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_4	1093:12:21709:21750	411286	0	True				
ANR	415341	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_4		411286	0		==			
ANR	415342	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	415343	PtrMemberAccess	avctx -> codec		411286	0					
ANR	415344	Identifier	avctx		411286	0					
ANR	415345	Identifier	codec		411286	1					
ANR	415346	Identifier	id		411286	1					
ANR	415347	Identifier	CODEC_ID_ADPCM_SBPRO_4		411286	1					
ANR	415348	CompoundStatement		1087:56:21578:21578	411286	1					
ANR	415349	WhileStatement	while ( src < buf + buf_size )		411286	0					
ANR	415350	Condition	src < buf + buf_size	1095:19:21775:21794	411286	0	True				
ANR	415351	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	415352	Identifier	src		411286	0					
ANR	415353	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	415354	Identifier	buf		411286	0					
ANR	415355	Identifier	buf_size		411286	1					
ANR	415356	CompoundStatement		1089:41:21622:21622	411286	1					
ANR	415357	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 4 , 0 )"	1097:16:21816:21909	411286	0	True				
ANR	415358	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 4 , 0 )"		411286	0		=			
ANR	415359	UnaryOperationExpression	* samples ++		411286	0					
ANR	415360	UnaryOperator	*		411286	0					
ANR	415361	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415362	Identifier	samples		411286	0					
ANR	415363	IncDec	++		411286	1					
ANR	415364	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 , 4 , 0 )"		411286	1					
ANR	415365	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415366	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415367	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415368	Argument	& c -> status [ 0 ]		411286	0					
ANR	415369	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415370	UnaryOperator	&		411286	0					
ANR	415371	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415372	PtrMemberAccess	c -> status		411286	0					
ANR	415373	Identifier	c		411286	0					
ANR	415374	Identifier	status		411286	1					
ANR	415375	PrimaryExpression	0		411286	1					
ANR	415376	Argument	src [ 0 ] >> 4		411286	1					
ANR	415377	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	415378	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415379	Identifier	src		411286	0					
ANR	415380	PrimaryExpression	0		411286	1					
ANR	415381	PrimaryExpression	4		411286	1					
ANR	415382	Argument	4		411286	2					
ANR	415383	PrimaryExpression	4		411286	0					
ANR	415384	Argument	0		411286	3					
ANR	415385	PrimaryExpression	0		411286	0					
ANR	415386	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 4 , 0 )"	1101:16:21928:22024	411286	1	True				
ANR	415387	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 4 , 0 )"		411286	0		=			
ANR	415388	UnaryOperationExpression	* samples ++		411286	0					
ANR	415389	UnaryOperator	*		411286	0					
ANR	415390	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415391	Identifier	samples		411286	0					
ANR	415392	IncDec	++		411286	1					
ANR	415393	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x0F , 4 , 0 )"		411286	1					
ANR	415394	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415395	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415396	ArgumentList	& c -> status [ st ]		411286	1					
ANR	415397	Argument	& c -> status [ st ]		411286	0					
ANR	415398	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	415399	UnaryOperator	&		411286	0					
ANR	415400	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	415401	PtrMemberAccess	c -> status		411286	0					
ANR	415402	Identifier	c		411286	0					
ANR	415403	Identifier	status		411286	1					
ANR	415404	Identifier	st		411286	1					
ANR	415405	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	415406	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	415407	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415408	Identifier	src		411286	0					
ANR	415409	PrimaryExpression	0		411286	1					
ANR	415410	PrimaryExpression	0x0F		411286	1					
ANR	415411	Argument	4		411286	2					
ANR	415412	PrimaryExpression	4		411286	0					
ANR	415413	Argument	0		411286	3					
ANR	415414	PrimaryExpression	0		411286	0					
ANR	415415	ExpressionStatement	src ++	1105:16:22043:22048	411286	2	True				
ANR	415416	PostIncDecOperationExpression	src ++		411286	0					
ANR	415417	Identifier	src		411286	0					
ANR	415418	IncDec	++		411286	1					
ANR	415419	ElseStatement	else		411286	0					
ANR	415420	IfStatement	if ( avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_3 )		411286	0					
ANR	415421	Condition	avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_3	1109:19:22085:22126	411286	0	True				
ANR	415422	EqualityExpression	avctx -> codec -> id == CODEC_ID_ADPCM_SBPRO_3		411286	0		==			
ANR	415423	PtrMemberAccess	avctx -> codec -> id		411286	0					
ANR	415424	PtrMemberAccess	avctx -> codec		411286	0					
ANR	415425	Identifier	avctx		411286	0					
ANR	415426	Identifier	codec		411286	1					
ANR	415427	Identifier	id		411286	1					
ANR	415428	Identifier	CODEC_ID_ADPCM_SBPRO_3		411286	1					
ANR	415429	CompoundStatement		1103:63:21954:21954	411286	1					
ANR	415430	WhileStatement	while ( src < buf + buf_size && samples + 2 < samples_end )		411286	0					
ANR	415431	Condition	src < buf + buf_size && samples + 2 < samples_end	1111:19:22151:22199	411286	0	True				
ANR	415432	AndExpression	src < buf + buf_size && samples + 2 < samples_end		411286	0		&&			
ANR	415433	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	415434	Identifier	src		411286	0					
ANR	415435	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	415436	Identifier	buf		411286	0					
ANR	415437	Identifier	buf_size		411286	1					
ANR	415438	RelationalExpression	samples + 2 < samples_end		411286	1		<			
ANR	415439	AdditiveExpression	samples + 2		411286	0		+			
ANR	415440	Identifier	samples		411286	0					
ANR	415441	PrimaryExpression	2		411286	1					
ANR	415442	Identifier	samples_end		411286	1					
ANR	415443	CompoundStatement		1105:70:22027:22027	411286	1					
ANR	415444	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 5 , 3 , 0 )"	1113:16:22221:22323	411286	0	True				
ANR	415445	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 5 , 3 , 0 )"		411286	0		=			
ANR	415446	UnaryOperationExpression	* samples ++		411286	0					
ANR	415447	UnaryOperator	*		411286	0					
ANR	415448	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415449	Identifier	samples		411286	0					
ANR	415450	IncDec	++		411286	1					
ANR	415451	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 5 , 3 , 0 )"		411286	1					
ANR	415452	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415453	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415454	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415455	Argument	& c -> status [ 0 ]		411286	0					
ANR	415456	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415457	UnaryOperator	&		411286	0					
ANR	415458	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415459	PtrMemberAccess	c -> status		411286	0					
ANR	415460	Identifier	c		411286	0					
ANR	415461	Identifier	status		411286	1					
ANR	415462	PrimaryExpression	0		411286	1					
ANR	415463	Argument	src [ 0 ] >> 5		411286	1					
ANR	415464	ShiftExpression	src [ 0 ] >> 5		411286	0		>>			
ANR	415465	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415466	Identifier	src		411286	0					
ANR	415467	PrimaryExpression	0		411286	1					
ANR	415468	PrimaryExpression	5		411286	1					
ANR	415469	Argument	3		411286	2					
ANR	415470	PrimaryExpression	3		411286	0					
ANR	415471	Argument	0		411286	3					
ANR	415472	PrimaryExpression	0		411286	0					
ANR	415473	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x07 , 3 , 0 )"	1117:16:22342:22444	411286	1	True				
ANR	415474	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x07 , 3 , 0 )"		411286	0		=			
ANR	415475	UnaryOperationExpression	* samples ++		411286	0					
ANR	415476	UnaryOperator	*		411286	0					
ANR	415477	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415478	Identifier	samples		411286	0					
ANR	415479	IncDec	++		411286	1					
ANR	415480	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x07 , 3 , 0 )"		411286	1					
ANR	415481	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415482	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415483	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415484	Argument	& c -> status [ 0 ]		411286	0					
ANR	415485	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415486	UnaryOperator	&		411286	0					
ANR	415487	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415488	PtrMemberAccess	c -> status		411286	0					
ANR	415489	Identifier	c		411286	0					
ANR	415490	Identifier	status		411286	1					
ANR	415491	PrimaryExpression	0		411286	1					
ANR	415492	Argument	( src [ 0 ] >> 2 ) & 0x07		411286	1					
ANR	415493	BitAndExpression	( src [ 0 ] >> 2 ) & 0x07		411286	0		&			
ANR	415494	ShiftExpression	src [ 0 ] >> 2		411286	0		>>			
ANR	415495	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415496	Identifier	src		411286	0					
ANR	415497	PrimaryExpression	0		411286	1					
ANR	415498	PrimaryExpression	2		411286	1					
ANR	415499	PrimaryExpression	0x07		411286	1					
ANR	415500	Argument	3		411286	2					
ANR	415501	PrimaryExpression	3		411286	0					
ANR	415502	Argument	0		411286	3					
ANR	415503	PrimaryExpression	0		411286	0					
ANR	415504	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x03 , 2 , 0 )"	1121:16:22463:22558	411286	2	True				
ANR	415505	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x03 , 2 , 0 )"		411286	0		=			
ANR	415506	UnaryOperationExpression	* samples ++		411286	0					
ANR	415507	UnaryOperator	*		411286	0					
ANR	415508	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415509	Identifier	samples		411286	0					
ANR	415510	IncDec	++		411286	1					
ANR	415511	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x03 , 2 , 0 )"		411286	1					
ANR	415512	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415513	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415514	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415515	Argument	& c -> status [ 0 ]		411286	0					
ANR	415516	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415517	UnaryOperator	&		411286	0					
ANR	415518	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415519	PtrMemberAccess	c -> status		411286	0					
ANR	415520	Identifier	c		411286	0					
ANR	415521	Identifier	status		411286	1					
ANR	415522	PrimaryExpression	0		411286	1					
ANR	415523	Argument	src [ 0 ] & 0x03		411286	1					
ANR	415524	BitAndExpression	src [ 0 ] & 0x03		411286	0		&			
ANR	415525	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415526	Identifier	src		411286	0					
ANR	415527	PrimaryExpression	0		411286	1					
ANR	415528	PrimaryExpression	0x03		411286	1					
ANR	415529	Argument	2		411286	2					
ANR	415530	PrimaryExpression	2		411286	0					
ANR	415531	Argument	0		411286	3					
ANR	415532	PrimaryExpression	0		411286	0					
ANR	415533	ExpressionStatement	src ++	1125:16:22577:22582	411286	3	True				
ANR	415534	PostIncDecOperationExpression	src ++		411286	0					
ANR	415535	Identifier	src		411286	0					
ANR	415536	IncDec	++		411286	1					
ANR	415537	ElseStatement	else		411286	0					
ANR	415538	CompoundStatement		1123:15:22440:22440	411286	0					
ANR	415539	WhileStatement	while ( src < buf + buf_size && samples + 3 < samples_end )		411286	0					
ANR	415540	Condition	src < buf + buf_size && samples + 3 < samples_end	1131:19:22637:22685	411286	0	True				
ANR	415541	AndExpression	src < buf + buf_size && samples + 3 < samples_end		411286	0		&&			
ANR	415542	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	415543	Identifier	src		411286	0					
ANR	415544	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	415545	Identifier	buf		411286	0					
ANR	415546	Identifier	buf_size		411286	1					
ANR	415547	RelationalExpression	samples + 3 < samples_end		411286	1		<			
ANR	415548	AdditiveExpression	samples + 3		411286	0		+			
ANR	415549	Identifier	samples		411286	0					
ANR	415550	PrimaryExpression	3		411286	1					
ANR	415551	Identifier	samples_end		411286	1					
ANR	415552	CompoundStatement		1125:70:22513:22513	411286	1					
ANR	415553	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 6 , 2 , 2 )"	1133:16:22707:22809	411286	0	True				
ANR	415554	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 6 , 2 , 2 )"		411286	0		=			
ANR	415555	UnaryOperationExpression	* samples ++		411286	0					
ANR	415556	UnaryOperator	*		411286	0					
ANR	415557	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415558	Identifier	samples		411286	0					
ANR	415559	IncDec	++		411286	1					
ANR	415560	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 6 , 2 , 2 )"		411286	1					
ANR	415561	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415562	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415563	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415564	Argument	& c -> status [ 0 ]		411286	0					
ANR	415565	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415566	UnaryOperator	&		411286	0					
ANR	415567	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415568	PtrMemberAccess	c -> status		411286	0					
ANR	415569	Identifier	c		411286	0					
ANR	415570	Identifier	status		411286	1					
ANR	415571	PrimaryExpression	0		411286	1					
ANR	415572	Argument	src [ 0 ] >> 6		411286	1					
ANR	415573	ShiftExpression	src [ 0 ] >> 6		411286	0		>>			
ANR	415574	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415575	Identifier	src		411286	0					
ANR	415576	PrimaryExpression	0		411286	1					
ANR	415577	PrimaryExpression	6		411286	1					
ANR	415578	Argument	2		411286	2					
ANR	415579	PrimaryExpression	2		411286	0					
ANR	415580	Argument	2		411286	3					
ANR	415581	PrimaryExpression	2		411286	0					
ANR	415582	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , ( src [ 0 ] >> 4 ) & 0x03 , 2 , 2 )"	1137:16:22828:22931	411286	1	True				
ANR	415583	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , ( src [ 0 ] >> 4 ) & 0x03 , 2 , 2 )"		411286	0		=			
ANR	415584	UnaryOperationExpression	* samples ++		411286	0					
ANR	415585	UnaryOperator	*		411286	0					
ANR	415586	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415587	Identifier	samples		411286	0					
ANR	415588	IncDec	++		411286	1					
ANR	415589	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ st ] , ( src [ 0 ] >> 4 ) & 0x03 , 2 , 2 )"		411286	1					
ANR	415590	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415591	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415592	ArgumentList	& c -> status [ st ]		411286	1					
ANR	415593	Argument	& c -> status [ st ]		411286	0					
ANR	415594	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	415595	UnaryOperator	&		411286	0					
ANR	415596	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	415597	PtrMemberAccess	c -> status		411286	0					
ANR	415598	Identifier	c		411286	0					
ANR	415599	Identifier	status		411286	1					
ANR	415600	Identifier	st		411286	1					
ANR	415601	Argument	( src [ 0 ] >> 4 ) & 0x03		411286	1					
ANR	415602	BitAndExpression	( src [ 0 ] >> 4 ) & 0x03		411286	0		&			
ANR	415603	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	415604	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415605	Identifier	src		411286	0					
ANR	415606	PrimaryExpression	0		411286	1					
ANR	415607	PrimaryExpression	4		411286	1					
ANR	415608	PrimaryExpression	0x03		411286	1					
ANR	415609	Argument	2		411286	2					
ANR	415610	PrimaryExpression	2		411286	0					
ANR	415611	Argument	2		411286	3					
ANR	415612	PrimaryExpression	2		411286	0					
ANR	415613	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x03 , 2 , 2 )"	1141:16:22950:23052	411286	2	True				
ANR	415614	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x03 , 2 , 2 )"		411286	0		=			
ANR	415615	UnaryOperationExpression	* samples ++		411286	0					
ANR	415616	UnaryOperator	*		411286	0					
ANR	415617	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415618	Identifier	samples		411286	0					
ANR	415619	IncDec	++		411286	1					
ANR	415620	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ 0 ] , ( src [ 0 ] >> 2 ) & 0x03 , 2 , 2 )"		411286	1					
ANR	415621	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415622	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415623	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	415624	Argument	& c -> status [ 0 ]		411286	0					
ANR	415625	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	415626	UnaryOperator	&		411286	0					
ANR	415627	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	415628	PtrMemberAccess	c -> status		411286	0					
ANR	415629	Identifier	c		411286	0					
ANR	415630	Identifier	status		411286	1					
ANR	415631	PrimaryExpression	0		411286	1					
ANR	415632	Argument	( src [ 0 ] >> 2 ) & 0x03		411286	1					
ANR	415633	BitAndExpression	( src [ 0 ] >> 2 ) & 0x03		411286	0		&			
ANR	415634	ShiftExpression	src [ 0 ] >> 2		411286	0		>>			
ANR	415635	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415636	Identifier	src		411286	0					
ANR	415637	PrimaryExpression	0		411286	1					
ANR	415638	PrimaryExpression	2		411286	1					
ANR	415639	PrimaryExpression	0x03		411286	1					
ANR	415640	Argument	2		411286	2					
ANR	415641	PrimaryExpression	2		411286	0					
ANR	415642	Argument	2		411286	3					
ANR	415643	PrimaryExpression	2		411286	0					
ANR	415644	ExpressionStatement	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x03 , 2 , 2 )"	1145:16:23071:23167	411286	3	True				
ANR	415645	AssignmentExpression	"* samples ++ = adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x03 , 2 , 2 )"		411286	0		=			
ANR	415646	UnaryOperationExpression	* samples ++		411286	0					
ANR	415647	UnaryOperator	*		411286	0					
ANR	415648	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415649	Identifier	samples		411286	0					
ANR	415650	IncDec	++		411286	1					
ANR	415651	CallExpression	"adpcm_sbpro_expand_nibble ( & c -> status [ st ] , src [ 0 ] & 0x03 , 2 , 2 )"		411286	1					
ANR	415652	Callee	adpcm_sbpro_expand_nibble		411286	0					
ANR	415653	Identifier	adpcm_sbpro_expand_nibble		411286	0					
ANR	415654	ArgumentList	& c -> status [ st ]		411286	1					
ANR	415655	Argument	& c -> status [ st ]		411286	0					
ANR	415656	UnaryOperationExpression	& c -> status [ st ]		411286	0					
ANR	415657	UnaryOperator	&		411286	0					
ANR	415658	ArrayIndexing	c -> status [ st ]		411286	1					
ANR	415659	PtrMemberAccess	c -> status		411286	0					
ANR	415660	Identifier	c		411286	0					
ANR	415661	Identifier	status		411286	1					
ANR	415662	Identifier	st		411286	1					
ANR	415663	Argument	src [ 0 ] & 0x03		411286	1					
ANR	415664	BitAndExpression	src [ 0 ] & 0x03		411286	0		&			
ANR	415665	ArrayIndexing	src [ 0 ]		411286	0					
ANR	415666	Identifier	src		411286	0					
ANR	415667	PrimaryExpression	0		411286	1					
ANR	415668	PrimaryExpression	0x03		411286	1					
ANR	415669	Argument	2		411286	2					
ANR	415670	PrimaryExpression	2		411286	0					
ANR	415671	Argument	2		411286	3					
ANR	415672	PrimaryExpression	2		411286	0					
ANR	415673	ExpressionStatement	src ++	1149:16:23186:23191	411286	4	True				
ANR	415674	PostIncDecOperationExpression	src ++		411286	0					
ANR	415675	Identifier	src		411286	0					
ANR	415676	IncDec	++		411286	1					
ANR	415677	BreakStatement	break ;	1155:8:23228:23233	411286	141	True				
ANR	415678	Label	case CODEC_ID_ADPCM_SWF :	1157:4:23240:23263	411286	142	True				
ANR	415679	Identifier	CODEC_ID_ADPCM_SWF		411286	0					
ANR	415680	CompoundStatement		1161:8:23203:23224	411286	143					
ANR	415681	IdentifierDeclStatement	GetBitContext gb ;	1161:8:23281:23297	411286	0	True				
ANR	415682	IdentifierDecl	gb		411286	0					
ANR	415683	IdentifierDeclType	GetBitContext		411286	0					
ANR	415684	Identifier	gb		411286	1					
ANR	415685	IdentifierDeclStatement	const int * table ;	1163:8:23308:23324	411286	1	True				
ANR	415686	IdentifierDecl	* table		411286	0					
ANR	415687	IdentifierDeclType	const int *		411286	0					
ANR	415688	Identifier	table		411286	1					
ANR	415689	IdentifierDeclStatement	"int k0 , signmask , nb_bits , count ;"	1165:8:23335:23367	411286	2	True				
ANR	415690	IdentifierDecl	k0		411286	0					
ANR	415691	IdentifierDeclType	int		411286	0					
ANR	415692	Identifier	k0		411286	1					
ANR	415693	IdentifierDecl	signmask		411286	1					
ANR	415694	IdentifierDeclType	int		411286	0					
ANR	415695	Identifier	signmask		411286	1					
ANR	415696	IdentifierDecl	nb_bits		411286	2					
ANR	415697	IdentifierDeclType	int		411286	0					
ANR	415698	Identifier	nb_bits		411286	1					
ANR	415699	IdentifierDecl	count		411286	3					
ANR	415700	IdentifierDeclType	int		411286	0					
ANR	415701	Identifier	count		411286	1					
ANR	415702	IdentifierDeclStatement	int size = buf_size * 8 ;	1167:8:23378:23399	411286	3	True				
ANR	415703	IdentifierDecl	size = buf_size * 8		411286	0					
ANR	415704	IdentifierDeclType	int		411286	0					
ANR	415705	Identifier	size		411286	1					
ANR	415706	AssignmentExpression	size = buf_size * 8		411286	2		=			
ANR	415707	Identifier	size		411286	0					
ANR	415708	MultiplicativeExpression	buf_size * 8		411286	1		*			
ANR	415709	Identifier	buf_size		411286	0					
ANR	415710	PrimaryExpression	8		411286	1					
ANR	415711	ExpressionStatement	"init_get_bits ( & gb , buf , size )"	1171:8:23412:23441	411286	4	True				
ANR	415712	CallExpression	"init_get_bits ( & gb , buf , size )"		411286	0					
ANR	415713	Callee	init_get_bits		411286	0					
ANR	415714	Identifier	init_get_bits		411286	0					
ANR	415715	ArgumentList	& gb		411286	1					
ANR	415716	Argument	& gb		411286	0					
ANR	415717	UnaryOperationExpression	& gb		411286	0					
ANR	415718	UnaryOperator	&		411286	0					
ANR	415719	Identifier	gb		411286	1					
ANR	415720	Argument	buf		411286	1					
ANR	415721	Identifier	buf		411286	0					
ANR	415722	Argument	size		411286	2					
ANR	415723	Identifier	size		411286	0					
ANR	415724	ExpressionStatement	"nb_bits = get_bits ( & gb , 2 ) + 2"	1177:8:23492:23520	411286	5	True				
ANR	415725	AssignmentExpression	"nb_bits = get_bits ( & gb , 2 ) + 2"		411286	0		=			
ANR	415726	Identifier	nb_bits		411286	0					
ANR	415727	AdditiveExpression	"get_bits ( & gb , 2 ) + 2"		411286	1		+			
ANR	415728	CallExpression	"get_bits ( & gb , 2 )"		411286	0					
ANR	415729	Callee	get_bits		411286	0					
ANR	415730	Identifier	get_bits		411286	0					
ANR	415731	ArgumentList	& gb		411286	1					
ANR	415732	Argument	& gb		411286	0					
ANR	415733	UnaryOperationExpression	& gb		411286	0					
ANR	415734	UnaryOperator	&		411286	0					
ANR	415735	Identifier	gb		411286	1					
ANR	415736	Argument	2		411286	1					
ANR	415737	PrimaryExpression	2		411286	0					
ANR	415738	PrimaryExpression	2		411286	1					
ANR	415739	ExpressionStatement	table = swf_index_tables [ nb_bits - 2 ]	1181:8:23593:23628	411286	6	True				
ANR	415740	AssignmentExpression	table = swf_index_tables [ nb_bits - 2 ]		411286	0		=			
ANR	415741	Identifier	table		411286	0					
ANR	415742	ArrayIndexing	swf_index_tables [ nb_bits - 2 ]		411286	1					
ANR	415743	Identifier	swf_index_tables		411286	0					
ANR	415744	AdditiveExpression	nb_bits - 2		411286	1		-			
ANR	415745	Identifier	nb_bits		411286	0					
ANR	415746	PrimaryExpression	2		411286	1					
ANR	415747	ExpressionStatement	k0 = 1 << ( nb_bits - 2 )	1183:8:23639:23660	411286	7	True				
ANR	415748	AssignmentExpression	k0 = 1 << ( nb_bits - 2 )		411286	0		=			
ANR	415749	Identifier	k0		411286	0					
ANR	415750	ShiftExpression	1 << ( nb_bits - 2 )		411286	1		<<			
ANR	415751	PrimaryExpression	1		411286	0					
ANR	415752	AdditiveExpression	nb_bits - 2		411286	1		-			
ANR	415753	Identifier	nb_bits		411286	0					
ANR	415754	PrimaryExpression	2		411286	1					
ANR	415755	ExpressionStatement	signmask = 1 << ( nb_bits - 1 )	1185:8:23671:23698	411286	8	True				
ANR	415756	AssignmentExpression	signmask = 1 << ( nb_bits - 1 )		411286	0		=			
ANR	415757	Identifier	signmask		411286	0					
ANR	415758	ShiftExpression	1 << ( nb_bits - 1 )		411286	1		<<			
ANR	415759	PrimaryExpression	1		411286	0					
ANR	415760	AdditiveExpression	nb_bits - 1		411286	1		-			
ANR	415761	Identifier	nb_bits		411286	0					
ANR	415762	PrimaryExpression	1		411286	1					
ANR	415763	WhileStatement	while ( get_bits_count ( & gb ) <= size - 22 * avctx -> channels )		411286	9					
ANR	415764	Condition	get_bits_count ( & gb ) <= size - 22 * avctx -> channels	1189:15:23718:23765	411286	0	True				
ANR	415765	RelationalExpression	get_bits_count ( & gb ) <= size - 22 * avctx -> channels		411286	0		<=			
ANR	415766	CallExpression	get_bits_count ( & gb )		411286	0					
ANR	415767	Callee	get_bits_count		411286	0					
ANR	415768	Identifier	get_bits_count		411286	0					
ANR	415769	ArgumentList	& gb		411286	1					
ANR	415770	Argument	& gb		411286	0					
ANR	415771	UnaryOperationExpression	& gb		411286	0					
ANR	415772	UnaryOperator	&		411286	0					
ANR	415773	Identifier	gb		411286	1					
ANR	415774	AdditiveExpression	size - 22 * avctx -> channels		411286	1		-			
ANR	415775	Identifier	size		411286	0					
ANR	415776	MultiplicativeExpression	22 * avctx -> channels		411286	1		*			
ANR	415777	PrimaryExpression	22		411286	0					
ANR	415778	PtrMemberAccess	avctx -> channels		411286	1					
ANR	415779	Identifier	avctx		411286	0					
ANR	415780	Identifier	channels		411286	1					
ANR	415781	CompoundStatement		1183:65:23593:23593	411286	1					
ANR	415782	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		411286	0					
ANR	415783	ForInit	i = 0 ;	1191:17:23788:23793	411286	0	True				
ANR	415784	AssignmentExpression	i = 0		411286	0		=			
ANR	415785	Identifier	i		411286	0					
ANR	415786	PrimaryExpression	0		411286	1					
ANR	415787	Condition	i < avctx -> channels	1191:24:23795:23813	411286	1	True				
ANR	415788	RelationalExpression	i < avctx -> channels		411286	0		<			
ANR	415789	Identifier	i		411286	0					
ANR	415790	PtrMemberAccess	avctx -> channels		411286	1					
ANR	415791	Identifier	avctx		411286	0					
ANR	415792	Identifier	channels		411286	1					
ANR	415793	PostIncDecOperationExpression	i ++	1191:45:23816:23818	411286	2	True				
ANR	415794	Identifier	i		411286	0					
ANR	415795	IncDec	++		411286	1					
ANR	415796	CompoundStatement		1185:50:23646:23646	411286	3					
ANR	415797	ExpressionStatement	"* samples ++ = c -> status [ i ] . predictor = get_sbits ( & gb , 16 )"	1193:16:23840:23896	411286	0	True				
ANR	415798	AssignmentExpression	"* samples ++ = c -> status [ i ] . predictor = get_sbits ( & gb , 16 )"		411286	0		=			
ANR	415799	UnaryOperationExpression	* samples ++		411286	0					
ANR	415800	UnaryOperator	*		411286	0					
ANR	415801	PostIncDecOperationExpression	samples ++		411286	1					
ANR	415802	Identifier	samples		411286	0					
ANR	415803	IncDec	++		411286	1					
ANR	415804	AssignmentExpression	"c -> status [ i ] . predictor = get_sbits ( & gb , 16 )"		411286	1		=			
ANR	415805	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	415806	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415807	PtrMemberAccess	c -> status		411286	0					
ANR	415808	Identifier	c		411286	0					
ANR	415809	Identifier	status		411286	1					
ANR	415810	Identifier	i		411286	1					
ANR	415811	Identifier	predictor		411286	1					
ANR	415812	CallExpression	"get_sbits ( & gb , 16 )"		411286	1					
ANR	415813	Callee	get_sbits		411286	0					
ANR	415814	Identifier	get_sbits		411286	0					
ANR	415815	ArgumentList	& gb		411286	1					
ANR	415816	Argument	& gb		411286	0					
ANR	415817	UnaryOperationExpression	& gb		411286	0					
ANR	415818	UnaryOperator	&		411286	0					
ANR	415819	Identifier	gb		411286	1					
ANR	415820	Argument	16		411286	1					
ANR	415821	PrimaryExpression	16		411286	0					
ANR	415822	ExpressionStatement	"c -> status [ i ] . step_index = get_bits ( & gb , 6 )"	1195:16:23915:23957	411286	1	True				
ANR	415823	AssignmentExpression	"c -> status [ i ] . step_index = get_bits ( & gb , 6 )"		411286	0		=			
ANR	415824	MemberAccess	c -> status [ i ] . step_index		411286	0					
ANR	415825	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415826	PtrMemberAccess	c -> status		411286	0					
ANR	415827	Identifier	c		411286	0					
ANR	415828	Identifier	status		411286	1					
ANR	415829	Identifier	i		411286	1					
ANR	415830	Identifier	step_index		411286	1					
ANR	415831	CallExpression	"get_bits ( & gb , 6 )"		411286	1					
ANR	415832	Callee	get_bits		411286	0					
ANR	415833	Identifier	get_bits		411286	0					
ANR	415834	ArgumentList	& gb		411286	1					
ANR	415835	Argument	& gb		411286	0					
ANR	415836	UnaryOperationExpression	& gb		411286	0					
ANR	415837	UnaryOperator	&		411286	0					
ANR	415838	Identifier	gb		411286	1					
ANR	415839	Argument	6		411286	1					
ANR	415840	PrimaryExpression	6		411286	0					
ANR	415841	ForStatement	for ( count = 0 ; get_bits_count ( & gb ) <= size - nb_bits * avctx -> channels && count < 4095 ; count ++ )		411286	1					
ANR	415842	ForInit	count = 0 ;	1201:17:23994:24003	411286	0	True				
ANR	415843	AssignmentExpression	count = 0		411286	0		=			
ANR	415844	Identifier	count		411286	0					
ANR	415845	PrimaryExpression	0		411286	1					
ANR	415846	Condition	get_bits_count ( & gb ) <= size - nb_bits * avctx -> channels && count < 4095	1201:28:24005:24073	411286	1	True				
ANR	415847	AndExpression	get_bits_count ( & gb ) <= size - nb_bits * avctx -> channels && count < 4095		411286	0		&&			
ANR	415848	RelationalExpression	get_bits_count ( & gb ) <= size - nb_bits * avctx -> channels		411286	0		<=			
ANR	415849	CallExpression	get_bits_count ( & gb )		411286	0					
ANR	415850	Callee	get_bits_count		411286	0					
ANR	415851	Identifier	get_bits_count		411286	0					
ANR	415852	ArgumentList	& gb		411286	1					
ANR	415853	Argument	& gb		411286	0					
ANR	415854	UnaryOperationExpression	& gb		411286	0					
ANR	415855	UnaryOperator	&		411286	0					
ANR	415856	Identifier	gb		411286	1					
ANR	415857	AdditiveExpression	size - nb_bits * avctx -> channels		411286	1		-			
ANR	415858	Identifier	size		411286	0					
ANR	415859	MultiplicativeExpression	nb_bits * avctx -> channels		411286	1		*			
ANR	415860	Identifier	nb_bits		411286	0					
ANR	415861	PtrMemberAccess	avctx -> channels		411286	1					
ANR	415862	Identifier	avctx		411286	0					
ANR	415863	Identifier	channels		411286	1					
ANR	415864	RelationalExpression	count < 4095		411286	1		<			
ANR	415865	Identifier	count		411286	0					
ANR	415866	PrimaryExpression	4095		411286	1					
ANR	415867	PostIncDecOperationExpression	count ++	1201:99:24076:24082	411286	2	True				
ANR	415868	Identifier	count		411286	0					
ANR	415869	IncDec	++		411286	1					
ANR	415870	CompoundStatement		1197:16:23929:23934	411286	3					
ANR	415871	IdentifierDeclStatement	int i ;	1203:16:24104:24109	411286	0	True				
ANR	415872	IdentifierDecl	i		411286	0					
ANR	415873	IdentifierDeclType	int		411286	0					
ANR	415874	Identifier	i		411286	1					
ANR	415875	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		411286	1					
ANR	415876	ForInit	i = 0 ;	1207:21:24135:24140	411286	0	True				
ANR	415877	AssignmentExpression	i = 0		411286	0		=			
ANR	415878	Identifier	i		411286	0					
ANR	415879	PrimaryExpression	0		411286	1					
ANR	415880	Condition	i < avctx -> channels	1207:28:24142:24160	411286	1	True				
ANR	415881	RelationalExpression	i < avctx -> channels		411286	0		<			
ANR	415882	Identifier	i		411286	0					
ANR	415883	PtrMemberAccess	avctx -> channels		411286	1					
ANR	415884	Identifier	avctx		411286	0					
ANR	415885	Identifier	channels		411286	1					
ANR	415886	PostIncDecOperationExpression	i ++	1207:49:24163:24165	411286	2	True				
ANR	415887	Identifier	i		411286	0					
ANR	415888	IncDec	++		411286	1					
ANR	415889	CompoundStatement		1211:20:24256:24266	411286	3					
ANR	415890	IdentifierDeclStatement	"int delta = get_bits ( & gb , nb_bits ) ;"	1211:20:24236:24270	411286	0	True				
ANR	415891	IdentifierDecl	"delta = get_bits ( & gb , nb_bits )"		411286	0					
ANR	415892	IdentifierDeclType	int		411286	0					
ANR	415893	Identifier	delta		411286	1					
ANR	415894	AssignmentExpression	"delta = get_bits ( & gb , nb_bits )"		411286	2		=			
ANR	415895	Identifier	delta		411286	0					
ANR	415896	CallExpression	"get_bits ( & gb , nb_bits )"		411286	1					
ANR	415897	Callee	get_bits		411286	0					
ANR	415898	Identifier	get_bits		411286	0					
ANR	415899	ArgumentList	& gb		411286	1					
ANR	415900	Argument	& gb		411286	0					
ANR	415901	UnaryOperationExpression	& gb		411286	0					
ANR	415902	UnaryOperator	&		411286	0					
ANR	415903	Identifier	gb		411286	1					
ANR	415904	Argument	nb_bits		411286	1					
ANR	415905	Identifier	nb_bits		411286	0					
ANR	415906	IdentifierDeclStatement	int step = step_table [ c -> status [ i ] . step_index ] ;	1213:20:24293:24339	411286	1	True				
ANR	415907	IdentifierDecl	step = step_table [ c -> status [ i ] . step_index ]		411286	0					
ANR	415908	IdentifierDeclType	int		411286	0					
ANR	415909	Identifier	step		411286	1					
ANR	415910	AssignmentExpression	step = step_table [ c -> status [ i ] . step_index ]		411286	2		=			
ANR	415911	Identifier	step		411286	0					
ANR	415912	ArrayIndexing	step_table [ c -> status [ i ] . step_index ]		411286	1					
ANR	415913	Identifier	step_table		411286	0					
ANR	415914	MemberAccess	c -> status [ i ] . step_index		411286	1					
ANR	415915	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415916	PtrMemberAccess	c -> status		411286	0					
ANR	415917	Identifier	c		411286	0					
ANR	415918	Identifier	status		411286	1					
ANR	415919	Identifier	i		411286	1					
ANR	415920	Identifier	step_index		411286	1					
ANR	415921	IdentifierDeclStatement	long vpdiff = 0 ;	1215:20:24362:24377	411286	2	True				
ANR	415922	IdentifierDecl	vpdiff = 0		411286	0					
ANR	415923	IdentifierDeclType	long		411286	0					
ANR	415924	Identifier	vpdiff		411286	1					
ANR	415925	AssignmentExpression	vpdiff = 0		411286	2		=			
ANR	415926	Identifier	vpdiff		411286	0					
ANR	415927	PrimaryExpression	0		411286	1					
ANR	415928	IdentifierDeclStatement	int k = k0 ;	1217:20:24431:24441	411286	3	True				
ANR	415929	IdentifierDecl	k = k0		411286	0					
ANR	415930	IdentifierDeclType	int		411286	0					
ANR	415931	Identifier	k		411286	1					
ANR	415932	AssignmentExpression	k = k0		411286	2		=			
ANR	415933	Identifier	k0		411286	0					
ANR	415934	Identifier	k0		411286	1					
ANR	415935	DoStatement	do		411286	4					
ANR	415936	CompoundStatement		1215:23:24294:24294	411286	0					
ANR	415937	IfStatement	if ( delta & k )		411286	0					
ANR	415938	Condition	delta & k	1223:28:24500:24508	411286	0	True				
ANR	415939	BitAndExpression	delta & k		411286	0		&			
ANR	415940	Identifier	delta		411286	0					
ANR	415941	Identifier	k		411286	1					
ANR	415942	ExpressionStatement	vpdiff += step	1225:28:24540:24554	411286	1	True				
ANR	415943	AssignmentExpression	vpdiff += step		411286	0		+=			
ANR	415944	Identifier	vpdiff		411286	0					
ANR	415945	Identifier	step		411286	1					
ANR	415946	ExpressionStatement	step >>= 1	1227:24:24581:24591	411286	1	True				
ANR	415947	AssignmentExpression	step >>= 1		411286	0		>>=			
ANR	415948	Identifier	step		411286	0					
ANR	415949	PrimaryExpression	1		411286	1					
ANR	415950	ExpressionStatement	k >>= 1	1229:24:24618:24625	411286	2	True				
ANR	415951	AssignmentExpression	k >>= 1		411286	0		>>=			
ANR	415952	Identifier	k		411286	0					
ANR	415953	PrimaryExpression	1		411286	1					
ANR	415954	Condition	k	1231:28:24656:24656	411286	1	True				
ANR	415955	Identifier	k		411286	0					
ANR	415956	ExpressionStatement	vpdiff += step	1233:20:24681:24695	411286	5	True				
ANR	415957	AssignmentExpression	vpdiff += step		411286	0		+=			
ANR	415958	Identifier	vpdiff		411286	0					
ANR	415959	Identifier	step		411286	1					
ANR	415960	IfStatement	if ( delta & signmask )		411286	6					
ANR	415961	Condition	delta & signmask	1237:24:24724:24739	411286	0	True				
ANR	415962	BitAndExpression	delta & signmask		411286	0		&			
ANR	415963	Identifier	delta		411286	0					
ANR	415964	Identifier	signmask		411286	1					
ANR	415965	ExpressionStatement	c -> status [ i ] . predictor -= vpdiff	1239:24:24767:24799	411286	1	True				
ANR	415966	AssignmentExpression	c -> status [ i ] . predictor -= vpdiff		411286	0		-=			
ANR	415967	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	415968	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415969	PtrMemberAccess	c -> status		411286	0					
ANR	415970	Identifier	c		411286	0					
ANR	415971	Identifier	status		411286	1					
ANR	415972	Identifier	i		411286	1					
ANR	415973	Identifier	predictor		411286	1					
ANR	415974	Identifier	vpdiff		411286	1					
ANR	415975	ElseStatement	else		411286	0					
ANR	415976	ExpressionStatement	c -> status [ i ] . predictor += vpdiff	1243:24:24852:24884	411286	0	True				
ANR	415977	AssignmentExpression	c -> status [ i ] . predictor += vpdiff		411286	0		+=			
ANR	415978	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	415979	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415980	PtrMemberAccess	c -> status		411286	0					
ANR	415981	Identifier	c		411286	0					
ANR	415982	Identifier	status		411286	1					
ANR	415983	Identifier	i		411286	1					
ANR	415984	Identifier	predictor		411286	1					
ANR	415985	Identifier	vpdiff		411286	1					
ANR	415986	ExpressionStatement	c -> status [ i ] . step_index += table [ delta & ( ~signmask ) ]	1247:20:24909:24962	411286	7	True				
ANR	415987	AssignmentExpression	c -> status [ i ] . step_index += table [ delta & ( ~signmask ) ]		411286	0		+=			
ANR	415988	MemberAccess	c -> status [ i ] . step_index		411286	0					
ANR	415989	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	415990	PtrMemberAccess	c -> status		411286	0					
ANR	415991	Identifier	c		411286	0					
ANR	415992	Identifier	status		411286	1					
ANR	415993	Identifier	i		411286	1					
ANR	415994	Identifier	step_index		411286	1					
ANR	415995	ArrayIndexing	table [ delta & ( ~signmask ) ]		411286	1					
ANR	415996	Identifier	table		411286	0					
ANR	415997	BitAndExpression	delta & ( ~signmask )		411286	1		&			
ANR	415998	Identifier	delta		411286	0					
ANR	415999	Identifier	~signmask		411286	1					
ANR	416000	ExpressionStatement	"c -> status [ i ] . step_index = av_clip ( c -> status [ i ] . step_index , 0 , 88 )"	1251:20:24987:25052	411286	8	True				
ANR	416001	AssignmentExpression	"c -> status [ i ] . step_index = av_clip ( c -> status [ i ] . step_index , 0 , 88 )"		411286	0		=			
ANR	416002	MemberAccess	c -> status [ i ] . step_index		411286	0					
ANR	416003	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	416004	PtrMemberAccess	c -> status		411286	0					
ANR	416005	Identifier	c		411286	0					
ANR	416006	Identifier	status		411286	1					
ANR	416007	Identifier	i		411286	1					
ANR	416008	Identifier	step_index		411286	1					
ANR	416009	CallExpression	"av_clip ( c -> status [ i ] . step_index , 0 , 88 )"		411286	1					
ANR	416010	Callee	av_clip		411286	0					
ANR	416011	Identifier	av_clip		411286	0					
ANR	416012	ArgumentList	c -> status [ i ] . step_index		411286	1					
ANR	416013	Argument	c -> status [ i ] . step_index		411286	0					
ANR	416014	MemberAccess	c -> status [ i ] . step_index		411286	0					
ANR	416015	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	416016	PtrMemberAccess	c -> status		411286	0					
ANR	416017	Identifier	c		411286	0					
ANR	416018	Identifier	status		411286	1					
ANR	416019	Identifier	i		411286	1					
ANR	416020	Identifier	step_index		411286	1					
ANR	416021	Argument	0		411286	1					
ANR	416022	PrimaryExpression	0		411286	0					
ANR	416023	Argument	88		411286	2					
ANR	416024	PrimaryExpression	88		411286	0					
ANR	416025	ExpressionStatement	c -> status [ i ] . predictor = av_clip_int16 ( c -> status [ i ] . predictor )	1253:20:25075:25137	411286	9	True				
ANR	416026	AssignmentExpression	c -> status [ i ] . predictor = av_clip_int16 ( c -> status [ i ] . predictor )		411286	0		=			
ANR	416027	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	416028	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	416029	PtrMemberAccess	c -> status		411286	0					
ANR	416030	Identifier	c		411286	0					
ANR	416031	Identifier	status		411286	1					
ANR	416032	Identifier	i		411286	1					
ANR	416033	Identifier	predictor		411286	1					
ANR	416034	CallExpression	av_clip_int16 ( c -> status [ i ] . predictor )		411286	1					
ANR	416035	Callee	av_clip_int16		411286	0					
ANR	416036	Identifier	av_clip_int16		411286	0					
ANR	416037	ArgumentList	c -> status [ i ] . predictor		411286	1					
ANR	416038	Argument	c -> status [ i ] . predictor		411286	0					
ANR	416039	MemberAccess	c -> status [ i ] . predictor		411286	0					
ANR	416040	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	416041	PtrMemberAccess	c -> status		411286	0					
ANR	416042	Identifier	c		411286	0					
ANR	416043	Identifier	status		411286	1					
ANR	416044	Identifier	i		411286	1					
ANR	416045	Identifier	predictor		411286	1					
ANR	416046	ExpressionStatement	* samples ++ = c -> status [ i ] . predictor	1257:20:25162:25197	411286	10	True				
ANR	416047	AssignmentExpression	* samples ++ = c -> status [ i ] . predictor		411286	0		=			
ANR	416048	UnaryOperationExpression	* samples ++		411286	0					
ANR	416049	UnaryOperator	*		411286	0					
ANR	416050	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416051	Identifier	samples		411286	0					
ANR	416052	IncDec	++		411286	1					
ANR	416053	MemberAccess	c -> status [ i ] . predictor		411286	1					
ANR	416054	ArrayIndexing	c -> status [ i ]		411286	0					
ANR	416055	PtrMemberAccess	c -> status		411286	0					
ANR	416056	Identifier	c		411286	0					
ANR	416057	Identifier	status		411286	1					
ANR	416058	Identifier	i		411286	1					
ANR	416059	Identifier	predictor		411286	1					
ANR	416060	IfStatement	if ( samples >= samples_end )		411286	11					
ANR	416061	Condition	samples >= samples_end	1259:24:25224:25245	411286	0	True				
ANR	416062	RelationalExpression	samples >= samples_end		411286	0		>=			
ANR	416063	Identifier	samples		411286	0					
ANR	416064	Identifier	samples_end		411286	1					
ANR	416065	CompoundStatement		1253:48:25073:25073	411286	1					
ANR	416066	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""allocated output buffer is too small\\n"" )"	1261:24:25275:25344	411286	0	True				
ANR	416067	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""allocated output buffer is too small\\n"" )"		411286	0					
ANR	416068	Callee	av_log		411286	0					
ANR	416069	Identifier	av_log		411286	0					
ANR	416070	ArgumentList	avctx		411286	1					
ANR	416071	Argument	avctx		411286	0					
ANR	416072	Identifier	avctx		411286	0					
ANR	416073	Argument	AV_LOG_ERROR		411286	1					
ANR	416074	Identifier	AV_LOG_ERROR		411286	0					
ANR	416075	Argument	"""allocated output buffer is too small\\n"""		411286	2					
ANR	416076	PrimaryExpression	"""allocated output buffer is too small\\n"""		411286	0					
ANR	416077	ReturnStatement	return - 1 ;	1263:24:25371:25380	411286	1	True				
ANR	416078	UnaryOperationExpression	- 1		411286	0					
ANR	416079	UnaryOperator	-		411286	0					
ANR	416080	PrimaryExpression	1		411286	1					
ANR	416081	ExpressionStatement	src += buf_size	1273:8:25459:25474	411286	10	True				
ANR	416082	AssignmentExpression	src += buf_size		411286	0		+=			
ANR	416083	Identifier	src		411286	0					
ANR	416084	Identifier	buf_size		411286	1					
ANR	416085	BreakStatement	break ;	1275:8:25485:25490	411286	11	True				
ANR	416086	Label	case CODEC_ID_ADPCM_YAMAHA :	1279:4:25504:25530	411286	144	True				
ANR	416087	Identifier	CODEC_ID_ADPCM_YAMAHA		411286	0					
ANR	416088	WhileStatement	while ( src < buf + buf_size )		411286	145					
ANR	416089	Condition	src < buf + buf_size	1281:15:25548:25567	411286	0	True				
ANR	416090	RelationalExpression	src < buf + buf_size		411286	0		<			
ANR	416091	Identifier	src		411286	0					
ANR	416092	AdditiveExpression	buf + buf_size		411286	1		+			
ANR	416093	Identifier	buf		411286	0					
ANR	416094	Identifier	buf_size		411286	1					
ANR	416095	CompoundStatement		1275:37:25395:25395	411286	1					
ANR	416096	IfStatement	if ( st )		411286	0					
ANR	416097	Condition	st	1283:16:25589:25590	411286	0	True				
ANR	416098	Identifier	st		411286	0					
ANR	416099	CompoundStatement		1277:20:25418:25418	411286	1					
ANR	416100	ExpressionStatement	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"	1285:16:25612:25706	411286	0	True				
ANR	416101	AssignmentExpression	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	0		=			
ANR	416102	UnaryOperationExpression	* samples ++		411286	0					
ANR	416103	UnaryOperator	*		411286	0					
ANR	416104	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416105	Identifier	samples		411286	0					
ANR	416106	IncDec	++		411286	1					
ANR	416107	CallExpression	"adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	1					
ANR	416108	Callee	adpcm_yamaha_expand_nibble		411286	0					
ANR	416109	Identifier	adpcm_yamaha_expand_nibble		411286	0					
ANR	416110	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	416111	Argument	& c -> status [ 0 ]		411286	0					
ANR	416112	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	416113	UnaryOperator	&		411286	0					
ANR	416114	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	416115	PtrMemberAccess	c -> status		411286	0					
ANR	416116	Identifier	c		411286	0					
ANR	416117	Identifier	status		411286	1					
ANR	416118	PrimaryExpression	0		411286	1					
ANR	416119	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	416120	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	416121	ArrayIndexing	src [ 0 ]		411286	0					
ANR	416122	Identifier	src		411286	0					
ANR	416123	PrimaryExpression	0		411286	1					
ANR	416124	PrimaryExpression	0x0F		411286	1					
ANR	416125	ExpressionStatement	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] >> 4 )"	1289:16:25725:25819	411286	1	True				
ANR	416126	AssignmentExpression	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] >> 4 )"		411286	0		=			
ANR	416127	UnaryOperationExpression	* samples ++		411286	0					
ANR	416128	UnaryOperator	*		411286	0					
ANR	416129	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416130	Identifier	samples		411286	0					
ANR	416131	IncDec	++		411286	1					
ANR	416132	CallExpression	"adpcm_yamaha_expand_nibble ( & c -> status [ 1 ] , src [ 0 ] >> 4 )"		411286	1					
ANR	416133	Callee	adpcm_yamaha_expand_nibble		411286	0					
ANR	416134	Identifier	adpcm_yamaha_expand_nibble		411286	0					
ANR	416135	ArgumentList	& c -> status [ 1 ]		411286	1					
ANR	416136	Argument	& c -> status [ 1 ]		411286	0					
ANR	416137	UnaryOperationExpression	& c -> status [ 1 ]		411286	0					
ANR	416138	UnaryOperator	&		411286	0					
ANR	416139	ArrayIndexing	c -> status [ 1 ]		411286	1					
ANR	416140	PtrMemberAccess	c -> status		411286	0					
ANR	416141	Identifier	c		411286	0					
ANR	416142	Identifier	status		411286	1					
ANR	416143	PrimaryExpression	1		411286	1					
ANR	416144	Argument	src [ 0 ] >> 4		411286	1					
ANR	416145	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	416146	ArrayIndexing	src [ 0 ]		411286	0					
ANR	416147	Identifier	src		411286	0					
ANR	416148	PrimaryExpression	0		411286	1					
ANR	416149	PrimaryExpression	4		411286	1					
ANR	416150	ElseStatement	else		411286	0					
ANR	416151	CompoundStatement		1287:19:25666:25666	411286	0					
ANR	416152	ExpressionStatement	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"	1295:16:25860:25954	411286	0	True				
ANR	416153	AssignmentExpression	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	0		=			
ANR	416154	UnaryOperationExpression	* samples ++		411286	0					
ANR	416155	UnaryOperator	*		411286	0					
ANR	416156	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416157	Identifier	samples		411286	0					
ANR	416158	IncDec	++		411286	1					
ANR	416159	CallExpression	"adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] & 0x0F )"		411286	1					
ANR	416160	Callee	adpcm_yamaha_expand_nibble		411286	0					
ANR	416161	Identifier	adpcm_yamaha_expand_nibble		411286	0					
ANR	416162	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	416163	Argument	& c -> status [ 0 ]		411286	0					
ANR	416164	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	416165	UnaryOperator	&		411286	0					
ANR	416166	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	416167	PtrMemberAccess	c -> status		411286	0					
ANR	416168	Identifier	c		411286	0					
ANR	416169	Identifier	status		411286	1					
ANR	416170	PrimaryExpression	0		411286	1					
ANR	416171	Argument	src [ 0 ] & 0x0F		411286	1					
ANR	416172	BitAndExpression	src [ 0 ] & 0x0F		411286	0		&			
ANR	416173	ArrayIndexing	src [ 0 ]		411286	0					
ANR	416174	Identifier	src		411286	0					
ANR	416175	PrimaryExpression	0		411286	1					
ANR	416176	PrimaryExpression	0x0F		411286	1					
ANR	416177	ExpressionStatement	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"	1299:16:25973:26067	411286	1	True				
ANR	416178	AssignmentExpression	"* samples ++ = adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	0		=			
ANR	416179	UnaryOperationExpression	* samples ++		411286	0					
ANR	416180	UnaryOperator	*		411286	0					
ANR	416181	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416182	Identifier	samples		411286	0					
ANR	416183	IncDec	++		411286	1					
ANR	416184	CallExpression	"adpcm_yamaha_expand_nibble ( & c -> status [ 0 ] , src [ 0 ] >> 4 )"		411286	1					
ANR	416185	Callee	adpcm_yamaha_expand_nibble		411286	0					
ANR	416186	Identifier	adpcm_yamaha_expand_nibble		411286	0					
ANR	416187	ArgumentList	& c -> status [ 0 ]		411286	1					
ANR	416188	Argument	& c -> status [ 0 ]		411286	0					
ANR	416189	UnaryOperationExpression	& c -> status [ 0 ]		411286	0					
ANR	416190	UnaryOperator	&		411286	0					
ANR	416191	ArrayIndexing	c -> status [ 0 ]		411286	1					
ANR	416192	PtrMemberAccess	c -> status		411286	0					
ANR	416193	Identifier	c		411286	0					
ANR	416194	Identifier	status		411286	1					
ANR	416195	PrimaryExpression	0		411286	1					
ANR	416196	Argument	src [ 0 ] >> 4		411286	1					
ANR	416197	ShiftExpression	src [ 0 ] >> 4		411286	0		>>			
ANR	416198	ArrayIndexing	src [ 0 ]		411286	0					
ANR	416199	Identifier	src		411286	0					
ANR	416200	PrimaryExpression	0		411286	1					
ANR	416201	PrimaryExpression	4		411286	1					
ANR	416202	ExpressionStatement	src ++	1305:12:26097:26102	411286	1	True				
ANR	416203	PostIncDecOperationExpression	src ++		411286	0					
ANR	416204	Identifier	src		411286	0					
ANR	416205	IncDec	++		411286	1					
ANR	416206	BreakStatement	break ;	1309:8:26124:26129	411286	146	True				
ANR	416207	Label	case CODEC_ID_ADPCM_THP :	1311:4:26136:26159	411286	147	True				
ANR	416208	Identifier	CODEC_ID_ADPCM_THP		411286	0					
ANR	416209	CompoundStatement		1315:8:26087:26093	411286	148					
ANR	416210	Statement	int	1315:8:26177:26179	411286	0	True				
ANR	416211	ExpressionStatement	table [ 2 ] [ 16 ]	1315:12:26181:26193	411286	1	True				
ANR	416212	ArrayIndexing	table [ 2 ] [ 16 ]		411286	0					
ANR	416213	ArrayIndexing	table [ 2 ]		411286	0					
ANR	416214	Identifier	table		411286	0					
ANR	416215	PrimaryExpression	2		411286	1					
ANR	416216	PrimaryExpression	16		411286	1					
ANR	416217	IdentifierDeclStatement	unsigned int samplecnt ;	1317:8:26204:26226	411286	2	True				
ANR	416218	IdentifierDecl	samplecnt		411286	0					
ANR	416219	IdentifierDeclType	unsigned int		411286	0					
ANR	416220	Identifier	samplecnt		411286	1					
ANR	416221	Statement	int	1319:8:26237:26239	411286	3	True				
ANR	416222	ExpressionStatement	prev [ 2 ] [ 2 ]	1319:12:26241:26251	411286	4	True				
ANR	416223	ArrayIndexing	prev [ 2 ] [ 2 ]		411286	0					
ANR	416224	ArrayIndexing	prev [ 2 ]		411286	0					
ANR	416225	Identifier	prev		411286	0					
ANR	416226	PrimaryExpression	2		411286	1					
ANR	416227	PrimaryExpression	2		411286	1					
ANR	416228	IdentifierDeclStatement	int ch ;	1321:8:26262:26268	411286	5	True				
ANR	416229	IdentifierDecl	ch		411286	0					
ANR	416230	IdentifierDeclType	int		411286	0					
ANR	416231	Identifier	ch		411286	1					
ANR	416232	IfStatement	if ( buf_size < 80 )		411286	6					
ANR	416233	Condition	buf_size < 80	1325:12:26285:26297	411286	0	True				
ANR	416234	RelationalExpression	buf_size < 80		411286	0		<			
ANR	416235	Identifier	buf_size		411286	0					
ANR	416236	PrimaryExpression	80		411286	1					
ANR	416237	CompoundStatement		1319:27:26125:26125	411286	1					
ANR	416238	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame too small\\n"" )"	1327:12:26315:26363	411286	0	True				
ANR	416239	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame too small\\n"" )"		411286	0					
ANR	416240	Callee	av_log		411286	0					
ANR	416241	Identifier	av_log		411286	0					
ANR	416242	ArgumentList	avctx		411286	1					
ANR	416243	Argument	avctx		411286	0					
ANR	416244	Identifier	avctx		411286	0					
ANR	416245	Argument	AV_LOG_ERROR		411286	1					
ANR	416246	Identifier	AV_LOG_ERROR		411286	0					
ANR	416247	Argument	"""frame too small\\n"""		411286	2					
ANR	416248	PrimaryExpression	"""frame too small\\n"""		411286	0					
ANR	416249	ReturnStatement	return - 1 ;	1329:12:26378:26387	411286	1	True				
ANR	416250	UnaryOperationExpression	- 1		411286	0					
ANR	416251	UnaryOperator	-		411286	0					
ANR	416252	PrimaryExpression	1		411286	1					
ANR	416253	ExpressionStatement	src += 4	1335:8:26411:26417	411286	7	True				
ANR	416254	AssignmentExpression	src += 4		411286	0		+=			
ANR	416255	Identifier	src		411286	0					
ANR	416256	PrimaryExpression	4		411286	1					
ANR	416257	ExpressionStatement	samplecnt = bytestream_get_be32 ( & src )	1337:8:26428:26465	411286	8	True				
ANR	416258	AssignmentExpression	samplecnt = bytestream_get_be32 ( & src )		411286	0		=			
ANR	416259	Identifier	samplecnt		411286	0					
ANR	416260	CallExpression	bytestream_get_be32 ( & src )		411286	1					
ANR	416261	Callee	bytestream_get_be32		411286	0					
ANR	416262	Identifier	bytestream_get_be32		411286	0					
ANR	416263	ArgumentList	& src		411286	1					
ANR	416264	Argument	& src		411286	0					
ANR	416265	UnaryOperationExpression	& src		411286	0					
ANR	416266	UnaryOperator	&		411286	0					
ANR	416267	Identifier	src		411286	1					
ANR	416268	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		411286	9					
ANR	416269	ForInit	i = 0 ;	1341:13:26483:26488	411286	0	True				
ANR	416270	AssignmentExpression	i = 0		411286	0		=			
ANR	416271	Identifier	i		411286	0					
ANR	416272	PrimaryExpression	0		411286	1					
ANR	416273	Condition	i < 32	1341:20:26490:26495	411286	1	True				
ANR	416274	RelationalExpression	i < 32		411286	0		<			
ANR	416275	Identifier	i		411286	0					
ANR	416276	PrimaryExpression	32		411286	1					
ANR	416277	PostIncDecOperationExpression	i ++	1341:28:26498:26500	411286	2	True				
ANR	416278	Identifier	i		411286	0					
ANR	416279	IncDec	++		411286	1					
ANR	416280	ExpressionStatement	table [ 0 ] [ i ] = ( int16_t ) bytestream_get_be16 ( & src )	1343:12:26516:26564	411286	3	True				
ANR	416281	AssignmentExpression	table [ 0 ] [ i ] = ( int16_t ) bytestream_get_be16 ( & src )		411286	0		=			
ANR	416282	ArrayIndexing	table [ 0 ] [ i ]		411286	0					
ANR	416283	ArrayIndexing	table [ 0 ]		411286	0					
ANR	416284	Identifier	table		411286	0					
ANR	416285	PrimaryExpression	0		411286	1					
ANR	416286	Identifier	i		411286	1					
ANR	416287	CastExpression	( int16_t ) bytestream_get_be16 ( & src )		411286	1					
ANR	416288	CastTarget	int16_t		411286	0					
ANR	416289	CallExpression	bytestream_get_be16 ( & src )		411286	1					
ANR	416290	Callee	bytestream_get_be16		411286	0					
ANR	416291	Identifier	bytestream_get_be16		411286	0					
ANR	416292	ArgumentList	& src		411286	1					
ANR	416293	Argument	& src		411286	0					
ANR	416294	UnaryOperationExpression	& src		411286	0					
ANR	416295	UnaryOperator	&		411286	0					
ANR	416296	Identifier	src		411286	1					
ANR	416297	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		411286	10					
ANR	416298	ForInit	i = 0 ;	1349:13:26630:26635	411286	0	True				
ANR	416299	AssignmentExpression	i = 0		411286	0		=			
ANR	416300	Identifier	i		411286	0					
ANR	416301	PrimaryExpression	0		411286	1					
ANR	416302	Condition	i < 4	1349:20:26637:26641	411286	1	True				
ANR	416303	RelationalExpression	i < 4		411286	0		<			
ANR	416304	Identifier	i		411286	0					
ANR	416305	PrimaryExpression	4		411286	1					
ANR	416306	PostIncDecOperationExpression	i ++	1349:27:26644:26646	411286	2	True				
ANR	416307	Identifier	i		411286	0					
ANR	416308	IncDec	++		411286	1					
ANR	416309	ExpressionStatement	prev [ 0 ] [ i ] = ( int16_t ) bytestream_get_be16 ( & src )	1351:12:26662:26709	411286	3	True				
ANR	416310	AssignmentExpression	prev [ 0 ] [ i ] = ( int16_t ) bytestream_get_be16 ( & src )		411286	0		=			
ANR	416311	ArrayIndexing	prev [ 0 ] [ i ]		411286	0					
ANR	416312	ArrayIndexing	prev [ 0 ]		411286	0					
ANR	416313	Identifier	prev		411286	0					
ANR	416314	PrimaryExpression	0		411286	1					
ANR	416315	Identifier	i		411286	1					
ANR	416316	CastExpression	( int16_t ) bytestream_get_be16 ( & src )		411286	1					
ANR	416317	CastTarget	int16_t		411286	0					
ANR	416318	CallExpression	bytestream_get_be16 ( & src )		411286	1					
ANR	416319	Callee	bytestream_get_be16		411286	0					
ANR	416320	Identifier	bytestream_get_be16		411286	0					
ANR	416321	ArgumentList	& src		411286	1					
ANR	416322	Argument	& src		411286	0					
ANR	416323	UnaryOperationExpression	& src		411286	0					
ANR	416324	UnaryOperator	&		411286	0					
ANR	416325	Identifier	src		411286	1					
ANR	416326	IfStatement	if ( samplecnt >= ( samples_end - samples ) / ( st + 1 ) )		411286	11					
ANR	416327	Condition	samplecnt >= ( samples_end - samples ) / ( st + 1 )	1355:12:26726:26773	411286	0	True				
ANR	416328	RelationalExpression	samplecnt >= ( samples_end - samples ) / ( st + 1 )		411286	0		>=			
ANR	416329	Identifier	samplecnt		411286	0					
ANR	416330	MultiplicativeExpression	( samples_end - samples ) / ( st + 1 )		411286	1		/			
ANR	416331	AdditiveExpression	samples_end - samples		411286	0		-			
ANR	416332	Identifier	samples_end		411286	0					
ANR	416333	Identifier	samples		411286	1					
ANR	416334	AdditiveExpression	st + 1		411286	1		+			
ANR	416335	Identifier	st		411286	0					
ANR	416336	PrimaryExpression	1		411286	1					
ANR	416337	CompoundStatement		1349:62:26601:26601	411286	1					
ANR	416338	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""allocated output buffer is too small\\n"" )"	1357:12:26791:26860	411286	0	True				
ANR	416339	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""allocated output buffer is too small\\n"" )"		411286	0					
ANR	416340	Callee	av_log		411286	0					
ANR	416341	Identifier	av_log		411286	0					
ANR	416342	ArgumentList	avctx		411286	1					
ANR	416343	Argument	avctx		411286	0					
ANR	416344	Identifier	avctx		411286	0					
ANR	416345	Argument	AV_LOG_ERROR		411286	1					
ANR	416346	Identifier	AV_LOG_ERROR		411286	0					
ANR	416347	Argument	"""allocated output buffer is too small\\n"""		411286	2					
ANR	416348	PrimaryExpression	"""allocated output buffer is too small\\n"""		411286	0					
ANR	416349	ReturnStatement	return - 1 ;	1359:12:26875:26884	411286	1	True				
ANR	416350	UnaryOperationExpression	- 1		411286	0					
ANR	416351	UnaryOperator	-		411286	0					
ANR	416352	PrimaryExpression	1		411286	1					
ANR	416353	ForStatement	for ( ch = 0 ; ch <= st ; ch ++ )		411286	12					
ANR	416354	ForInit	ch = 0 ;	1365:13:26913:26919	411286	0	True				
ANR	416355	AssignmentExpression	ch = 0		411286	0		=			
ANR	416356	Identifier	ch		411286	0					
ANR	416357	PrimaryExpression	0		411286	1					
ANR	416358	Condition	ch <= st	1365:21:26921:26928	411286	1	True				
ANR	416359	RelationalExpression	ch <= st		411286	0		<=			
ANR	416360	Identifier	ch		411286	0					
ANR	416361	Identifier	st		411286	1					
ANR	416362	PostIncDecOperationExpression	ch ++	1365:31:26931:26934	411286	2	True				
ANR	416363	Identifier	ch		411286	0					
ANR	416364	IncDec	++		411286	1					
ANR	416365	CompoundStatement		1359:37:26762:26762	411286	3					
ANR	416366	ExpressionStatement	samples = ( unsigned short * ) data + ch	1367:12:26952:26990	411286	0	True				
ANR	416367	AssignmentExpression	samples = ( unsigned short * ) data + ch		411286	0		=			
ANR	416368	Identifier	samples		411286	0					
ANR	416369	AdditiveExpression	( unsigned short * ) data + ch		411286	1		+			
ANR	416370	CastExpression	( unsigned short * ) data		411286	0					
ANR	416371	CastTarget	unsigned short *		411286	0					
ANR	416372	Identifier	data		411286	1					
ANR	416373	Identifier	ch		411286	1					
ANR	416374	ForStatement	for ( i = 0 ; i < samplecnt / 14 ; i ++ )		411286	1					
ANR	416375	ForInit	i = 0 ;	1373:17:27071:27076	411286	0	True				
ANR	416376	AssignmentExpression	i = 0		411286	0		=			
ANR	416377	Identifier	i		411286	0					
ANR	416378	PrimaryExpression	0		411286	1					
ANR	416379	Condition	i < samplecnt / 14	1373:24:27078:27095	411286	1	True				
ANR	416380	RelationalExpression	i < samplecnt / 14		411286	0		<			
ANR	416381	Identifier	i		411286	0					
ANR	416382	MultiplicativeExpression	samplecnt / 14		411286	1		/			
ANR	416383	Identifier	samplecnt		411286	0					
ANR	416384	PrimaryExpression	14		411286	1					
ANR	416385	PostIncDecOperationExpression	i ++	1373:44:27098:27100	411286	2	True				
ANR	416386	Identifier	i		411286	0					
ANR	416387	IncDec	++		411286	1					
ANR	416388	CompoundStatement		1375:16:27102:27140	411286	3					
ANR	416389	IdentifierDeclStatement	int index = ( * src >> 4 ) & 7 ;	1375:16:27122:27149	411286	0	True				
ANR	416390	IdentifierDecl	index = ( * src >> 4 ) & 7		411286	0					
ANR	416391	IdentifierDeclType	int		411286	0					
ANR	416392	Identifier	index		411286	1					
ANR	416393	AssignmentExpression	index = ( * src >> 4 ) & 7		411286	2		=			
ANR	416394	Identifier	index		411286	0					
ANR	416395	BitAndExpression	( * src >> 4 ) & 7		411286	1		&			
ANR	416396	ShiftExpression	* src >> 4		411286	0		>>			
ANR	416397	UnaryOperationExpression	* src		411286	0					
ANR	416398	UnaryOperator	*		411286	0					
ANR	416399	Identifier	src		411286	1					
ANR	416400	PrimaryExpression	4		411286	1					
ANR	416401	PrimaryExpression	7		411286	1					
ANR	416402	IdentifierDeclStatement	unsigned int exp = 28 - ( * src ++ & 15 ) ;	1377:16:27168:27205	411286	1	True				
ANR	416403	IdentifierDecl	exp = 28 - ( * src ++ & 15 )		411286	0					
ANR	416404	IdentifierDeclType	unsigned int		411286	0					
ANR	416405	Identifier	exp		411286	1					
ANR	416406	AssignmentExpression	exp = 28 - ( * src ++ & 15 )		411286	2		=			
ANR	416407	Identifier	exp		411286	0					
ANR	416408	AdditiveExpression	28 - ( * src ++ & 15 )		411286	1		-			
ANR	416409	PrimaryExpression	28		411286	0					
ANR	416410	BitAndExpression	* src ++ & 15		411286	1		&			
ANR	416411	UnaryOperationExpression	* src ++		411286	0					
ANR	416412	UnaryOperator	*		411286	0					
ANR	416413	PostIncDecOperationExpression	src ++		411286	1					
ANR	416414	Identifier	src		411286	0					
ANR	416415	IncDec	++		411286	1					
ANR	416416	PrimaryExpression	15		411286	1					
ANR	416417	IdentifierDeclStatement	int factor1 = table [ ch ] [ index * 2 ] ;	1379:16:27224:27258	411286	2	True				
ANR	416418	IdentifierDecl	factor1 = table [ ch ] [ index * 2 ]		411286	0					
ANR	416419	IdentifierDeclType	int		411286	0					
ANR	416420	Identifier	factor1		411286	1					
ANR	416421	AssignmentExpression	factor1 = table [ ch ] [ index * 2 ]		411286	2		=			
ANR	416422	Identifier	factor1		411286	0					
ANR	416423	ArrayIndexing	table [ ch ] [ index * 2 ]		411286	1					
ANR	416424	ArrayIndexing	table [ ch ]		411286	0					
ANR	416425	Identifier	table		411286	0					
ANR	416426	Identifier	ch		411286	1					
ANR	416427	MultiplicativeExpression	index * 2		411286	1		*			
ANR	416428	Identifier	index		411286	0					
ANR	416429	PrimaryExpression	2		411286	1					
ANR	416430	IdentifierDeclStatement	int factor2 = table [ ch ] [ index * 2 + 1 ] ;	1381:16:27277:27315	411286	3	True				
ANR	416431	IdentifierDecl	factor2 = table [ ch ] [ index * 2 + 1 ]		411286	0					
ANR	416432	IdentifierDeclType	int		411286	0					
ANR	416433	Identifier	factor2		411286	1					
ANR	416434	AssignmentExpression	factor2 = table [ ch ] [ index * 2 + 1 ]		411286	2		=			
ANR	416435	Identifier	factor2		411286	0					
ANR	416436	ArrayIndexing	table [ ch ] [ index * 2 + 1 ]		411286	1					
ANR	416437	ArrayIndexing	table [ ch ]		411286	0					
ANR	416438	Identifier	table		411286	0					
ANR	416439	Identifier	ch		411286	1					
ANR	416440	AdditiveExpression	index * 2 + 1		411286	1		+			
ANR	416441	MultiplicativeExpression	index * 2		411286	0		*			
ANR	416442	Identifier	index		411286	0					
ANR	416443	PrimaryExpression	2		411286	1					
ANR	416444	PrimaryExpression	1		411286	1					
ANR	416445	ForStatement	for ( n = 0 ; n < 14 ; n ++ )		411286	4					
ANR	416446	ForInit	n = 0 ;	1387:21:27384:27389	411286	0	True				
ANR	416447	AssignmentExpression	n = 0		411286	0		=			
ANR	416448	Identifier	n		411286	0					
ANR	416449	PrimaryExpression	0		411286	1					
ANR	416450	Condition	n < 14	1387:28:27391:27396	411286	1	True				
ANR	416451	RelationalExpression	n < 14		411286	0		<			
ANR	416452	Identifier	n		411286	0					
ANR	416453	PrimaryExpression	14		411286	1					
ANR	416454	PostIncDecOperationExpression	n ++	1387:36:27399:27401	411286	2	True				
ANR	416455	Identifier	n		411286	0					
ANR	416456	IncDec	++		411286	1					
ANR	416457	CompoundStatement		1383:20:27252:27269	411286	3					
ANR	416458	IdentifierDeclStatement	int32_t sampledat ;	1389:20:27427:27444	411286	0	True				
ANR	416459	IdentifierDecl	sampledat		411286	0					
ANR	416460	IdentifierDeclType	int32_t		411286	0					
ANR	416461	Identifier	sampledat		411286	1					
ANR	416462	IfStatement	if ( n & 1 )		411286	1					
ANR	416463	Condition	n & 1	1391:23:27470:27472	411286	0	True				
ANR	416464	BitAndExpression	n & 1		411286	0		&			
ANR	416465	Identifier	n		411286	0					
ANR	416466	PrimaryExpression	1		411286	1					
ANR	416467	ExpressionStatement	sampledat = * src ++ << 28	1391:28:27475:27501	411286	1	True				
ANR	416468	AssignmentExpression	sampledat = * src ++ << 28		411286	0		=			
ANR	416469	Identifier	sampledat		411286	0					
ANR	416470	ShiftExpression	* src ++ << 28		411286	1		<<			
ANR	416471	UnaryOperationExpression	* src ++		411286	0					
ANR	416472	UnaryOperator	*		411286	0					
ANR	416473	PostIncDecOperationExpression	src ++		411286	1					
ANR	416474	Identifier	src		411286	0					
ANR	416475	IncDec	++		411286	1					
ANR	416476	PrimaryExpression	28		411286	1					
ANR	416477	ElseStatement	else		411286	0					
ANR	416478	ExpressionStatement	sampledat = ( * src & 0xF0 ) << 24	1393:28:27532:27558	411286	0	True				
ANR	416479	AssignmentExpression	sampledat = ( * src & 0xF0 ) << 24		411286	0		=			
ANR	416480	Identifier	sampledat		411286	0					
ANR	416481	ShiftExpression	( * src & 0xF0 ) << 24		411286	1		<<			
ANR	416482	BitAndExpression	* src & 0xF0		411286	0		&			
ANR	416483	UnaryOperationExpression	* src		411286	0					
ANR	416484	UnaryOperator	*		411286	0					
ANR	416485	Identifier	src		411286	1					
ANR	416486	PrimaryExpression	0xF0		411286	1					
ANR	416487	PrimaryExpression	24		411286	1					
ANR	416488	ExpressionStatement	sampledat = ( ( prev [ ch ] [ 0 ] * factor1 + prev [ ch ] [ 1 ] * factor2 ) >> 11 ) + ( sampledat >> exp )	1397:20:27583:27698	411286	2	True				
ANR	416489	AssignmentExpression	sampledat = ( ( prev [ ch ] [ 0 ] * factor1 + prev [ ch ] [ 1 ] * factor2 ) >> 11 ) + ( sampledat >> exp )		411286	0		=			
ANR	416490	Identifier	sampledat		411286	0					
ANR	416491	AdditiveExpression	( ( prev [ ch ] [ 0 ] * factor1 + prev [ ch ] [ 1 ] * factor2 ) >> 11 ) + ( sampledat >> exp )		411286	1		+			
ANR	416492	ShiftExpression	( prev [ ch ] [ 0 ] * factor1 + prev [ ch ] [ 1 ] * factor2 ) >> 11		411286	0		>>			
ANR	416493	AdditiveExpression	prev [ ch ] [ 0 ] * factor1 + prev [ ch ] [ 1 ] * factor2		411286	0		+			
ANR	416494	MultiplicativeExpression	prev [ ch ] [ 0 ] * factor1		411286	0		*			
ANR	416495	ArrayIndexing	prev [ ch ] [ 0 ]		411286	0					
ANR	416496	ArrayIndexing	prev [ ch ]		411286	0					
ANR	416497	Identifier	prev		411286	0					
ANR	416498	Identifier	ch		411286	1					
ANR	416499	PrimaryExpression	0		411286	1					
ANR	416500	Identifier	factor1		411286	1					
ANR	416501	MultiplicativeExpression	prev [ ch ] [ 1 ] * factor2		411286	1		*			
ANR	416502	ArrayIndexing	prev [ ch ] [ 1 ]		411286	0					
ANR	416503	ArrayIndexing	prev [ ch ]		411286	0					
ANR	416504	Identifier	prev		411286	0					
ANR	416505	Identifier	ch		411286	1					
ANR	416506	PrimaryExpression	1		411286	1					
ANR	416507	Identifier	factor2		411286	1					
ANR	416508	PrimaryExpression	11		411286	1					
ANR	416509	ShiftExpression	sampledat >> exp		411286	1		>>			
ANR	416510	Identifier	sampledat		411286	0					
ANR	416511	Identifier	exp		411286	1					
ANR	416512	ExpressionStatement	* samples = av_clip_int16 ( sampledat )	1401:20:27721:27756	411286	3	True				
ANR	416513	AssignmentExpression	* samples = av_clip_int16 ( sampledat )		411286	0		=			
ANR	416514	UnaryOperationExpression	* samples		411286	0					
ANR	416515	UnaryOperator	*		411286	0					
ANR	416516	Identifier	samples		411286	1					
ANR	416517	CallExpression	av_clip_int16 ( sampledat )		411286	1					
ANR	416518	Callee	av_clip_int16		411286	0					
ANR	416519	Identifier	av_clip_int16		411286	0					
ANR	416520	ArgumentList	sampledat		411286	1					
ANR	416521	Argument	sampledat		411286	0					
ANR	416522	Identifier	sampledat		411286	0					
ANR	416523	ExpressionStatement	prev [ ch ] [ 1 ] = prev [ ch ] [ 0 ]	1403:20:27779:27804	411286	4	True				
ANR	416524	AssignmentExpression	prev [ ch ] [ 1 ] = prev [ ch ] [ 0 ]		411286	0		=			
ANR	416525	ArrayIndexing	prev [ ch ] [ 1 ]		411286	0					
ANR	416526	ArrayIndexing	prev [ ch ]		411286	0					
ANR	416527	Identifier	prev		411286	0					
ANR	416528	Identifier	ch		411286	1					
ANR	416529	PrimaryExpression	1		411286	1					
ANR	416530	ArrayIndexing	prev [ ch ] [ 0 ]		411286	1					
ANR	416531	ArrayIndexing	prev [ ch ]		411286	0					
ANR	416532	Identifier	prev		411286	0					
ANR	416533	Identifier	ch		411286	1					
ANR	416534	PrimaryExpression	0		411286	1					
ANR	416535	ExpressionStatement	prev [ ch ] [ 0 ] = * samples ++	1405:20:27827:27851	411286	5	True				
ANR	416536	AssignmentExpression	prev [ ch ] [ 0 ] = * samples ++		411286	0		=			
ANR	416537	ArrayIndexing	prev [ ch ] [ 0 ]		411286	0					
ANR	416538	ArrayIndexing	prev [ ch ]		411286	0					
ANR	416539	Identifier	prev		411286	0					
ANR	416540	Identifier	ch		411286	1					
ANR	416541	PrimaryExpression	0		411286	1					
ANR	416542	UnaryOperationExpression	* samples ++		411286	1					
ANR	416543	UnaryOperator	*		411286	0					
ANR	416544	PostIncDecOperationExpression	samples ++		411286	1					
ANR	416545	Identifier	samples		411286	0					
ANR	416546	IncDec	++		411286	1					
ANR	416547	ExpressionStatement	samples += st	1413:20:28002:28015	411286	6	True				
ANR	416548	AssignmentExpression	samples += st		411286	0		+=			
ANR	416549	Identifier	samples		411286	0					
ANR	416550	Identifier	st		411286	1					
ANR	416551	ExpressionStatement	samples -= st	1427:8:28196:28209	411286	13	True				
ANR	416552	AssignmentExpression	samples -= st		411286	0		-=			
ANR	416553	Identifier	samples		411286	0					
ANR	416554	Identifier	st		411286	1					
ANR	416555	BreakStatement	break ;	1429:8:28220:28225	411286	14	True				
ANR	416556	Label	default :	1435:4:28241:28248	411286	149	True				
ANR	416557	Identifier	default		411286	0					
ANR	416558	ReturnStatement	return - 1 ;	1437:8:28259:28268	411286	150	True				
ANR	416559	UnaryOperationExpression	- 1		411286	0					
ANR	416560	UnaryOperator	-		411286	0					
ANR	416561	PrimaryExpression	1		411286	1					
ANR	416562	ExpressionStatement	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data	1441:4:28282:28331	411286	29	True				
ANR	416563	AssignmentExpression	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data		411286	0		=			
ANR	416564	UnaryOperationExpression	* data_size		411286	0					
ANR	416565	UnaryOperator	*		411286	0					
ANR	416566	Identifier	data_size		411286	1					
ANR	416567	AdditiveExpression	( uint8_t * ) samples - ( uint8_t * ) data		411286	1		-			
ANR	416568	CastExpression	( uint8_t * ) samples		411286	0					
ANR	416569	CastTarget	uint8_t *		411286	0					
ANR	416570	Identifier	samples		411286	1					
ANR	416571	CastExpression	( uint8_t * ) data		411286	1					
ANR	416572	CastTarget	uint8_t *		411286	0					
ANR	416573	Identifier	data		411286	1					
ANR	416574	ReturnStatement	return src - buf ;	1443:4:28338:28354	411286	30	True				
ANR	416575	AdditiveExpression	src - buf		411286	0		-			
ANR	416576	Identifier	src		411286	0					
ANR	416577	Identifier	buf		411286	1					
ANR	416578	ReturnType	static int		411286	1					
ANR	416579	Identifier	adpcm_decode_frame		411286	2					
ANR	416580	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size"		411286	3					
ANR	416581	Parameter	AVCodecContext * avctx	1:30:30:50	411286	0	True				
ANR	416582	ParameterType	AVCodecContext *		411286	0					
ANR	416583	Identifier	avctx		411286	1					
ANR	416584	Parameter	void * data	3:28:82:91	411286	1	True				
ANR	416585	ParameterType	void *		411286	0					
ANR	416586	Identifier	data		411286	1					
ANR	416587	Parameter	int * data_size	3:40:94:107	411286	2	True				
ANR	416588	ParameterType	int *		411286	0					
ANR	416589	Identifier	data_size		411286	1					
ANR	416590	Parameter	const uint8_t * buf	5:28:139:156	411286	3	True				
ANR	416591	ParameterType	const uint8_t *		411286	0					
ANR	416592	Identifier	buf		411286	1					
ANR	416593	Parameter	int buf_size	5:48:159:170	411286	4	True				
ANR	416594	ParameterType	int		411286	0					
ANR	416595	Identifier	buf_size		411286	1					
ANR	416596	CFGEntryNode	ENTRY		411286		True				
ANR	416597	CFGExitNode	EXIT		411286		True				
ANR	416598	Symbol	c -> status		411286						
ANR	416599	Symbol	coeff2l		411286						
ANR	416600	Symbol	hi		411286						
ANR	416601	Symbol	& gb		411286						
ANR	416602	Symbol	* * block_predictor		411286						
ANR	416603	Symbol	previous_left_sample		411286						
ANR	416604	Symbol	shift		411286						
ANR	416605	Symbol	prev		411286						
ANR	416606	Symbol	* index		411286						
ANR	416607	Symbol	channel		411286						
ANR	416608	Symbol	delta		411286						
ANR	416609	Symbol	* ch		411286						
ANR	416610	Symbol	c -> status [ 1 ] . step_index		411286						
ANR	416611	Symbol	* data_size		411286						
ANR	416612	Symbol	vpdiff		411286						
ANR	416613	Symbol	coeff2r		411286						
ANR	416614	Symbol	current_sample		411286						
ANR	416615	Symbol	adpcm_ima_expand_nibble		411286						
ANR	416616	Symbol	* ( src + channel )		411286						
ANR	416617	Symbol	CODEC_ID_ADPCM_SBPRO_4		411286						
ANR	416618	Symbol	CODEC_ID_ADPCM_SBPRO_3		411286						
ANR	416619	Symbol	pred		411286						
ANR	416620	Symbol	av_clip		411286						
ANR	416621	Symbol	previous_right_sample		411286						
ANR	416622	Symbol	CODEC_ID_ADPCM_IMA_AMV		411286						
ANR	416623	Symbol	exp		411286						
ANR	416624	Symbol	c -> status [ 1 ] . predictor		411286						
ANR	416625	Symbol	s2		411286						
ANR	416626	Symbol	data_size		411286						
ANR	416627	Symbol	nb_bits		411286						
ANR	416628	Symbol	c -> status [ 0 ] . idelta		411286						
ANR	416629	Symbol	avctx -> codec		411286						
ANR	416630	Symbol	adpcm_yamaha_expand_nibble		411286						
ANR	416631	Symbol	k0		411286						
ANR	416632	Symbol	coeff1l		411286						
ANR	416633	Symbol	coeff1r		411286						
ANR	416634	Symbol	* * avctx		411286						
ANR	416635	Symbol	samplecnt		411286						
ANR	416636	Symbol	factor2		411286						
ANR	416637	Symbol	index		411286						
ANR	416638	Symbol	factor1		411286						
ANR	416639	Symbol	* avctx -> channels		411286						
ANR	416640	Symbol	samples		411286						
ANR	416641	Symbol	bytestream_get_le16		411286						
ANR	416642	Symbol	* * table		411286						
ANR	416643	Symbol	cs -> predictor		411286						
ANR	416644	Symbol	size		411286						
ANR	416645	Symbol	* cs		411286						
ANR	416646	Symbol	av_clip_int16		411286						
ANR	416647	Symbol	c -> status [ channel ] . sample2		411286						
ANR	416648	Symbol	c -> status [ channel ] . sample1		411286						
ANR	416649	Symbol	c -> status [ i ] . step_index		411286						
ANR	416650	Symbol	* * * c		411286						
ANR	416651	Symbol	AV_RL16		411286						
ANR	416652	Symbol	UINT32_MAX		411286						
ANR	416653	Symbol	count1		411286						
ANR	416654	Symbol	count2		411286						
ANR	416655	Symbol	cs -> step_index		411286						
ANR	416656	Symbol	* * prev		411286						
ANR	416657	Symbol	adpcm_ms_expand_nibble		411286						
ANR	416658	Symbol	& srcC		411286						
ANR	416659	Symbol	* nb_bits		411286						
ANR	416660	Symbol	samples_in_chunk		411286						
ANR	416661	Symbol	bytestream_get_be32		411286						
ANR	416662	Symbol	previous_sample		411286						
ANR	416663	Symbol	* delta		411286						
ANR	416664	Symbol	current_left_sample		411286						
ANR	416665	Symbol	CODEC_ID_ADPCM_EA_R3		411286						
ANR	416666	Symbol	c -> status [ 1 ] . coeff1		411286						
ANR	416667	Symbol	c -> status [ 1 ] . coeff2		411286						
ANR	416668	Symbol	avctx		411286						
ANR	416669	Symbol	shift_right		411286						
ANR	416670	Symbol	nibble		411286						
ANR	416671	Symbol	coeff		411286						
ANR	416672	Symbol	c -> status [ 0 ] . step_index		411286						
ANR	416673	Symbol	table		411286						
ANR	416674	Symbol	ea_adpcm_table		411286						
ANR	416675	Symbol	st		411286						
ANR	416676	Symbol	coeff2		411286						
ANR	416677	Symbol	c		411286						
ANR	416678	Symbol	coeff1		411286						
ANR	416679	Symbol	AV_LOG_ERROR		411286						
ANR	416680	Symbol	ch		411286						
ANR	416681	Symbol	* channel		411286						
ANR	416682	Symbol	i		411286						
ANR	416683	Symbol	CODEC_ID_ADPCM_EA_R1		411286						
ANR	416684	Symbol	* * c -> status		411286						
ANR	416685	Symbol	k		411286						
ANR	416686	Symbol	c -> status [ 0 ] . coeff1		411286						
ANR	416687	Symbol	m		411286						
ANR	416688	Symbol	c -> status [ 0 ] . coeff2		411286						
ANR	416689	Symbol	sample		411286						
ANR	416690	Symbol	n		411286						
ANR	416691	Symbol	cs		411286						
ANR	416692	Symbol	avctx -> codec -> id		411286						
ANR	416693	Symbol	buf		411286						
ANR	416694	Symbol	s		411286						
ANR	416695	Symbol	big_endian		411286						
ANR	416696	Symbol	AV_RL32		411286						
ANR	416697	Symbol	char		411286						
ANR	416698	Symbol	* c -> status [ i ] . step_index		411286						
ANR	416699	Symbol	c -> status [ channel ] . predictor		411286						
ANR	416700	Symbol	get_sbits		411286						
ANR	416701	Symbol	lo		411286						
ANR	416702	Symbol	data		411286						
ANR	416703	Symbol	* coeff		411286						
ANR	416704	Symbol	bytestream_get_be16		411286						
ANR	416705	Symbol	get_bits		411286						
ANR	416706	Symbol	c -> channel		411286						
ANR	416707	Symbol	* ea_adpcm_table		411286						
ANR	416708	Symbol	* * channel		411286						
ANR	416709	Symbol	c -> status [ 0 ] . sample2		411286						
ANR	416710	Symbol	* src		411286						
ANR	416711	Symbol	c -> status [ 0 ] . sample1		411286						
ANR	416712	Symbol	avctx -> channels		411286						
ANR	416713	Symbol	c -> status [ 1 ] . sample2		411286						
ANR	416714	Symbol	c -> status [ 1 ] . sample1		411286						
ANR	416715	Symbol	* samples		411286						
ANR	416716	Symbol	decode_top_nibble_next		411286						
ANR	416717	Symbol	* * srcC		411286						
ANR	416718	Symbol	samples_end		411286						
ANR	416719	Symbol	* avctx -> codec		411286						
ANR	416720	Symbol	samplesC		411286						
ANR	416721	Symbol	diff_channel		411286						
ANR	416722	Symbol	* * i		411286						
ANR	416723	Symbol	cs -> step		411286						
ANR	416724	Symbol	level		411286						
ANR	416725	Symbol	buf_size		411286						
ANR	416726	Symbol	step_table		411286						
ANR	416727	Symbol	* * c		411286						
ANR	416728	Symbol	count		411286						
ANR	416729	Symbol	* step_table		411286						
ANR	416730	Symbol	* table		411286						
ANR	416731	Symbol	* srcC ++		411286						
ANR	416732	Symbol	get_bits_count		411286						
ANR	416733	Symbol	signmask		411286						
ANR	416734	Symbol	* srcC		411286						
ANR	416735	Symbol	* avctx		411286						
ANR	416736	Symbol	current_right_sample		411286						
ANR	416737	Symbol	* c -> status		411286						
ANR	416738	Symbol	* swf_index_tables		411286						
ANR	416739	Symbol	* src ++		411286						
ANR	416740	Symbol	* * src		411286						
ANR	416741	Symbol	c -> status [ 0 ] . predictor		411286						
ANR	416742	Symbol	adpcm_sbpro_expand_nibble		411286						
ANR	416743	Symbol	* s2		411286						
ANR	416744	Symbol	swf_index_tables		411286						
ANR	416745	Symbol	c -> status [ i ] . predictor		411286						
ANR	416746	Symbol	* ~signmask		411286						
ANR	416747	Symbol	* prev		411286						
ANR	416748	Symbol	* samplesC		411286						
ANR	416749	Symbol	& src		411286						
ANR	416750	Symbol	c -> status [ 1 ] . idelta		411286						
ANR	416751	Symbol	avctx -> block_align		411286						
ANR	416752	Symbol	* * ch		411286						
ANR	416753	Symbol	block_predictor		411286						
ANR	416754	Symbol	gb		411286						
ANR	416755	Symbol	AdaptCoeff1		411286						
ANR	416756	Symbol	* samples ++		411286						
ANR	416757	Symbol	AdaptCoeff2		411286						
ANR	416758	Symbol	* cs -> step_index		411286						
ANR	416759	Symbol	* * cs		411286						
ANR	416760	Symbol	* AdaptCoeff1		411286						
ANR	416761	Symbol	* AdaptCoeff2		411286						
ANR	416762	Symbol	next_sample		411286						
ANR	416763	Symbol	adpcm_ct_expand_nibble		411286						
ANR	416764	Symbol	src		411286						
ANR	416765	Symbol	shift_left		411286						
ANR	416766	Symbol	last_byte		411286						
ANR	416767	Symbol	bytestream_get_le32		411286						
ANR	416768	Symbol	* * coeff		411286						
ANR	416769	Symbol	* shift		411286						
ANR	416770	Symbol	srcC		411286						
ANR	416771	Symbol	avctx -> priv_data		411286						
ANR	416772	Symbol	* c		411286						
ANR	416773	Symbol	next_left_sample		411286						
ANR	416774	Symbol	~signmask		411286						
ANR	416775	Symbol	c -> status [ channel ] . prev_sample		411286						
ANR	416776	Symbol	* i		411286						
ANR	416777	Symbol	* m		411286						
ANR	416778	Symbol	* n		411286						
ANR	416779	Symbol	step		411286						
ANR	416780	Symbol	sampledat		411286						
ANR	416781	Symbol	next_right_sample		411286						
ANR	416782	Symbol	* block_predictor		411286						
