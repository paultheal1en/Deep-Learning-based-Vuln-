command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2125638	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decompress_i_0.c								
ANR	2125639	Function	decompress_i	1:0:0:5226							
ANR	2125640	FunctionDef	"decompress_i (AVCodecContext * avctx , uint32_t * dst , int linesize)"		2125639	0					
ANR	2125641	CompoundStatement		3:0:77:5226	2125639	0					
ANR	2125642	IdentifierDeclStatement	SCPRContext * s = avctx -> priv_data ;	5:4:84:117	2125639	0	True				
ANR	2125643	IdentifierDecl	* s = avctx -> priv_data		2125639	0					
ANR	2125644	IdentifierDeclType	SCPRContext *		2125639	0					
ANR	2125645	Identifier	s		2125639	1					
ANR	2125646	AssignmentExpression	* s = avctx -> priv_data		2125639	2		=			
ANR	2125647	Identifier	s		2125639	0					
ANR	2125648	PtrMemberAccess	avctx -> priv_data		2125639	1					
ANR	2125649	Identifier	avctx		2125639	0					
ANR	2125650	Identifier	priv_data		2125639	1					
ANR	2125651	IdentifierDeclStatement	GetByteContext * gb = & s -> gb ;	7:4:124:151	2125639	1	True				
ANR	2125652	IdentifierDecl	* gb = & s -> gb		2125639	0					
ANR	2125653	IdentifierDeclType	GetByteContext *		2125639	0					
ANR	2125654	Identifier	gb		2125639	1					
ANR	2125655	AssignmentExpression	* gb = & s -> gb		2125639	2		=			
ANR	2125656	Identifier	gb		2125639	0					
ANR	2125657	UnaryOperationExpression	& s -> gb		2125639	1					
ANR	2125658	UnaryOperator	&		2125639	0					
ANR	2125659	PtrMemberAccess	s -> gb		2125639	1					
ANR	2125660	Identifier	s		2125639	0					
ANR	2125661	Identifier	gb		2125639	1					
ANR	2125662	IdentifierDeclStatement	"int cx = 0 , cx1 = 0 , k = 0 , clr = 0 ;"	9:4:158:193	2125639	2	True				
ANR	2125663	IdentifierDecl	cx = 0		2125639	0					
ANR	2125664	IdentifierDeclType	int		2125639	0					
ANR	2125665	Identifier	cx		2125639	1					
ANR	2125666	AssignmentExpression	cx = 0		2125639	2		=			
ANR	2125667	Identifier	cx		2125639	0					
ANR	2125668	PrimaryExpression	0		2125639	1					
ANR	2125669	IdentifierDecl	cx1 = 0		2125639	1					
ANR	2125670	IdentifierDeclType	int		2125639	0					
ANR	2125671	Identifier	cx1		2125639	1					
ANR	2125672	AssignmentExpression	cx1 = 0		2125639	2		=			
ANR	2125673	Identifier	cx1		2125639	0					
ANR	2125674	PrimaryExpression	0		2125639	1					
ANR	2125675	IdentifierDecl	k = 0		2125639	2					
ANR	2125676	IdentifierDeclType	int		2125639	0					
ANR	2125677	Identifier	k		2125639	1					
ANR	2125678	AssignmentExpression	k = 0		2125639	2		=			
ANR	2125679	Identifier	k		2125639	0					
ANR	2125680	PrimaryExpression	0		2125639	1					
ANR	2125681	IdentifierDecl	clr = 0		2125639	3					
ANR	2125682	IdentifierDeclType	int		2125639	0					
ANR	2125683	Identifier	clr		2125639	1					
ANR	2125684	AssignmentExpression	clr = 0		2125639	2		=			
ANR	2125685	Identifier	clr		2125639	0					
ANR	2125686	PrimaryExpression	0		2125639	1					
ANR	2125687	IdentifierDeclStatement	"int run , r , g , b , off , y = 0 , x = 0 , ret ;"	11:4:200:240	2125639	3	True				
ANR	2125688	IdentifierDecl	run		2125639	0					
ANR	2125689	IdentifierDeclType	int		2125639	0					
ANR	2125690	Identifier	run		2125639	1					
ANR	2125691	IdentifierDecl	r		2125639	1					
ANR	2125692	IdentifierDeclType	int		2125639	0					
ANR	2125693	Identifier	r		2125639	1					
ANR	2125694	IdentifierDecl	g		2125639	2					
ANR	2125695	IdentifierDeclType	int		2125639	0					
ANR	2125696	Identifier	g		2125639	1					
ANR	2125697	IdentifierDecl	b		2125639	3					
ANR	2125698	IdentifierDeclType	int		2125639	0					
ANR	2125699	Identifier	b		2125639	1					
ANR	2125700	IdentifierDecl	off		2125639	4					
ANR	2125701	IdentifierDeclType	int		2125639	0					
ANR	2125702	Identifier	off		2125639	1					
ANR	2125703	IdentifierDecl	y = 0		2125639	5					
ANR	2125704	IdentifierDeclType	int		2125639	0					
ANR	2125705	Identifier	y		2125639	1					
ANR	2125706	AssignmentExpression	y = 0		2125639	2		=			
ANR	2125707	Identifier	y		2125639	0					
ANR	2125708	PrimaryExpression	0		2125639	1					
ANR	2125709	IdentifierDecl	x = 0		2125639	6					
ANR	2125710	IdentifierDeclType	int		2125639	0					
ANR	2125711	Identifier	x		2125639	1					
ANR	2125712	AssignmentExpression	x = 0		2125639	2		=			
ANR	2125713	Identifier	x		2125639	0					
ANR	2125714	PrimaryExpression	0		2125639	1					
ANR	2125715	IdentifierDecl	ret		2125639	7					
ANR	2125716	IdentifierDeclType	int		2125639	0					
ANR	2125717	Identifier	ret		2125639	1					
ANR	2125718	IdentifierDeclStatement	const int cxshift = s -> cxshift ;	13:4:247:277	2125639	4	True				
ANR	2125719	IdentifierDecl	cxshift = s -> cxshift		2125639	0					
ANR	2125720	IdentifierDeclType	const int		2125639	0					
ANR	2125721	Identifier	cxshift		2125639	1					
ANR	2125722	AssignmentExpression	cxshift = s -> cxshift		2125639	2		=			
ANR	2125723	Identifier	cxshift		2125639	0					
ANR	2125724	PtrMemberAccess	s -> cxshift		2125639	1					
ANR	2125725	Identifier	s		2125639	0					
ANR	2125726	Identifier	cxshift		2125639	1					
ANR	2125727	IdentifierDeclStatement	"unsigned lx , ly , ptype ;"	15:4:284:306	2125639	5	True				
ANR	2125728	IdentifierDecl	lx		2125639	0					
ANR	2125729	IdentifierDeclType	unsigned		2125639	0					
ANR	2125730	Identifier	lx		2125639	1					
ANR	2125731	IdentifierDecl	ly		2125639	1					
ANR	2125732	IdentifierDeclType	unsigned		2125639	0					
ANR	2125733	Identifier	ly		2125639	1					
ANR	2125734	IdentifierDecl	ptype		2125639	2					
ANR	2125735	IdentifierDeclType	unsigned		2125639	0					
ANR	2125736	Identifier	ptype		2125639	1					
ANR	2125737	ExpressionStatement	reinit_tables ( s )	19:4:315:331	2125639	6	True				
ANR	2125738	CallExpression	reinit_tables ( s )		2125639	0					
ANR	2125739	Callee	reinit_tables		2125639	0					
ANR	2125740	Identifier	reinit_tables		2125639	0					
ANR	2125741	ArgumentList	s		2125639	1					
ANR	2125742	Argument	s		2125639	0					
ANR	2125743	Identifier	s		2125639	0					
ANR	2125744	ExpressionStatement	"bytestream2_skip ( gb , 2 )"	21:4:338:361	2125639	7	True				
ANR	2125745	CallExpression	"bytestream2_skip ( gb , 2 )"		2125639	0					
ANR	2125746	Callee	bytestream2_skip		2125639	0					
ANR	2125747	Identifier	bytestream2_skip		2125639	0					
ANR	2125748	ArgumentList	gb		2125639	1					
ANR	2125749	Argument	gb		2125639	0					
ANR	2125750	Identifier	gb		2125639	0					
ANR	2125751	Argument	2		2125639	1					
ANR	2125752	PrimaryExpression	2		2125639	0					
ANR	2125753	ExpressionStatement	"init_rangecoder ( & s -> rc , gb )"	23:4:368:395	2125639	8	True				
ANR	2125754	CallExpression	"init_rangecoder ( & s -> rc , gb )"		2125639	0					
ANR	2125755	Callee	init_rangecoder		2125639	0					
ANR	2125756	Identifier	init_rangecoder		2125639	0					
ANR	2125757	ArgumentList	& s -> rc		2125639	1					
ANR	2125758	Argument	& s -> rc		2125639	0					
ANR	2125759	UnaryOperationExpression	& s -> rc		2125639	0					
ANR	2125760	UnaryOperator	&		2125639	0					
ANR	2125761	PtrMemberAccess	s -> rc		2125639	1					
ANR	2125762	Identifier	s		2125639	0					
ANR	2125763	Identifier	rc		2125639	1					
ANR	2125764	Argument	gb		2125639	1					
ANR	2125765	Identifier	gb		2125639	0					
ANR	2125766	WhileStatement	while ( k < avctx -> width + 1 )		2125639	9					
ANR	2125767	Condition	k < avctx -> width + 1	27:11:411:430	2125639	0	True				
ANR	2125768	RelationalExpression	k < avctx -> width + 1		2125639	0		<			
ANR	2125769	Identifier	k		2125639	0					
ANR	2125770	AdditiveExpression	avctx -> width + 1		2125639	1		+			
ANR	2125771	PtrMemberAccess	avctx -> width		2125639	0					
ANR	2125772	Identifier	avctx		2125639	0					
ANR	2125773	Identifier	width		2125639	1					
ANR	2125774	PrimaryExpression	1		2125639	1					
ANR	2125775	CompoundStatement		25:33:355:355	2125639	1					
ANR	2125776	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"	29:8:444:503	2125639	0	True				
ANR	2125777	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2125639	0		=			
ANR	2125778	Identifier	ret		2125639	0					
ANR	2125779	CallExpression	"decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2125639	1					
ANR	2125780	Callee	decode_unit		2125639	0					
ANR	2125781	Identifier	decode_unit		2125639	0					
ANR	2125782	ArgumentList	s		2125639	1					
ANR	2125783	Argument	s		2125639	0					
ANR	2125784	Identifier	s		2125639	0					
ANR	2125785	Argument	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	1					
ANR	2125786	UnaryOperationExpression	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	0					
ANR	2125787	UnaryOperator	&		2125639	0					
ANR	2125788	ArrayIndexing	s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	1					
ANR	2125789	ArrayIndexing	s -> pixel_model [ 0 ]		2125639	0					
ANR	2125790	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2125791	Identifier	s		2125639	0					
ANR	2125792	Identifier	pixel_model		2125639	1					
ANR	2125793	PrimaryExpression	0		2125639	1					
ANR	2125794	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2125795	Identifier	cx		2125639	0					
ANR	2125796	Identifier	cx1		2125639	1					
ANR	2125797	Argument	400		2125639	2					
ANR	2125798	PrimaryExpression	400		2125639	0					
ANR	2125799	Argument	& r		2125639	3					
ANR	2125800	UnaryOperationExpression	& r		2125639	0					
ANR	2125801	UnaryOperator	&		2125639	0					
ANR	2125802	Identifier	r		2125639	1					
ANR	2125803	IfStatement	if ( ret < 0 )		2125639	1					
ANR	2125804	Condition	ret < 0	31:12:518:524	2125639	0	True				
ANR	2125805	RelationalExpression	ret < 0		2125639	0		<			
ANR	2125806	Identifier	ret		2125639	0					
ANR	2125807	PrimaryExpression	0		2125639	1					
ANR	2125808	ReturnStatement	return ret ;	33:12:540:550	2125639	1	True				
ANR	2125809	Identifier	ret		2125639	0					
ANR	2125810	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	37:8:563:586	2125639	2	True				
ANR	2125811	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2125812	Identifier	cx1		2125639	0					
ANR	2125813	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2125814	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2125815	Identifier	cx		2125639	0					
ANR	2125816	PrimaryExpression	6		2125639	1					
ANR	2125817	PrimaryExpression	0xFC0		2125639	1					
ANR	2125818	ExpressionStatement	cx = r >> cxshift	39:8:597:614	2125639	3	True				
ANR	2125819	AssignmentExpression	cx = r >> cxshift		2125639	0		=			
ANR	2125820	Identifier	cx		2125639	0					
ANR	2125821	ShiftExpression	r >> cxshift		2125639	1		>>			
ANR	2125822	Identifier	r		2125639	0					
ANR	2125823	Identifier	cxshift		2125639	1					
ANR	2125824	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"	41:8:625:684	2125639	4	True				
ANR	2125825	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2125639	0		=			
ANR	2125826	Identifier	ret		2125639	0					
ANR	2125827	CallExpression	"decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2125639	1					
ANR	2125828	Callee	decode_unit		2125639	0					
ANR	2125829	Identifier	decode_unit		2125639	0					
ANR	2125830	ArgumentList	s		2125639	1					
ANR	2125831	Argument	s		2125639	0					
ANR	2125832	Identifier	s		2125639	0					
ANR	2125833	Argument	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	1					
ANR	2125834	UnaryOperationExpression	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	0					
ANR	2125835	UnaryOperator	&		2125639	0					
ANR	2125836	ArrayIndexing	s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	1					
ANR	2125837	ArrayIndexing	s -> pixel_model [ 1 ]		2125639	0					
ANR	2125838	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2125839	Identifier	s		2125639	0					
ANR	2125840	Identifier	pixel_model		2125639	1					
ANR	2125841	PrimaryExpression	1		2125639	1					
ANR	2125842	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2125843	Identifier	cx		2125639	0					
ANR	2125844	Identifier	cx1		2125639	1					
ANR	2125845	Argument	400		2125639	2					
ANR	2125846	PrimaryExpression	400		2125639	0					
ANR	2125847	Argument	& g		2125639	3					
ANR	2125848	UnaryOperationExpression	& g		2125639	0					
ANR	2125849	UnaryOperator	&		2125639	0					
ANR	2125850	Identifier	g		2125639	1					
ANR	2125851	IfStatement	if ( ret < 0 )		2125639	5					
ANR	2125852	Condition	ret < 0	43:12:699:705	2125639	0	True				
ANR	2125853	RelationalExpression	ret < 0		2125639	0		<			
ANR	2125854	Identifier	ret		2125639	0					
ANR	2125855	PrimaryExpression	0		2125639	1					
ANR	2125856	ReturnStatement	return ret ;	45:12:721:731	2125639	1	True				
ANR	2125857	Identifier	ret		2125639	0					
ANR	2125858	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	49:8:744:767	2125639	6	True				
ANR	2125859	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2125860	Identifier	cx1		2125639	0					
ANR	2125861	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2125862	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2125863	Identifier	cx		2125639	0					
ANR	2125864	PrimaryExpression	6		2125639	1					
ANR	2125865	PrimaryExpression	0xFC0		2125639	1					
ANR	2125866	ExpressionStatement	cx = g >> cxshift	51:8:778:795	2125639	7	True				
ANR	2125867	AssignmentExpression	cx = g >> cxshift		2125639	0		=			
ANR	2125868	Identifier	cx		2125639	0					
ANR	2125869	ShiftExpression	g >> cxshift		2125639	1		>>			
ANR	2125870	Identifier	g		2125639	0					
ANR	2125871	Identifier	cxshift		2125639	1					
ANR	2125872	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"	53:8:806:865	2125639	8	True				
ANR	2125873	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2125639	0		=			
ANR	2125874	Identifier	ret		2125639	0					
ANR	2125875	CallExpression	"decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2125639	1					
ANR	2125876	Callee	decode_unit		2125639	0					
ANR	2125877	Identifier	decode_unit		2125639	0					
ANR	2125878	ArgumentList	s		2125639	1					
ANR	2125879	Argument	s		2125639	0					
ANR	2125880	Identifier	s		2125639	0					
ANR	2125881	Argument	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	1					
ANR	2125882	UnaryOperationExpression	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	0					
ANR	2125883	UnaryOperator	&		2125639	0					
ANR	2125884	ArrayIndexing	s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	1					
ANR	2125885	ArrayIndexing	s -> pixel_model [ 2 ]		2125639	0					
ANR	2125886	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2125887	Identifier	s		2125639	0					
ANR	2125888	Identifier	pixel_model		2125639	1					
ANR	2125889	PrimaryExpression	2		2125639	1					
ANR	2125890	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2125891	Identifier	cx		2125639	0					
ANR	2125892	Identifier	cx1		2125639	1					
ANR	2125893	Argument	400		2125639	2					
ANR	2125894	PrimaryExpression	400		2125639	0					
ANR	2125895	Argument	& b		2125639	3					
ANR	2125896	UnaryOperationExpression	& b		2125639	0					
ANR	2125897	UnaryOperator	&		2125639	0					
ANR	2125898	Identifier	b		2125639	1					
ANR	2125899	IfStatement	if ( ret < 0 )		2125639	9					
ANR	2125900	Condition	ret < 0	55:12:880:886	2125639	0	True				
ANR	2125901	RelationalExpression	ret < 0		2125639	0		<			
ANR	2125902	Identifier	ret		2125639	0					
ANR	2125903	PrimaryExpression	0		2125639	1					
ANR	2125904	ReturnStatement	return ret ;	57:12:902:912	2125639	1	True				
ANR	2125905	Identifier	ret		2125639	0					
ANR	2125906	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	61:8:925:948	2125639	10	True				
ANR	2125907	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2125908	Identifier	cx1		2125639	0					
ANR	2125909	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2125910	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2125911	Identifier	cx		2125639	0					
ANR	2125912	PrimaryExpression	6		2125639	1					
ANR	2125913	PrimaryExpression	0xFC0		2125639	1					
ANR	2125914	ExpressionStatement	cx = b >> cxshift	63:8:959:976	2125639	11	True				
ANR	2125915	AssignmentExpression	cx = b >> cxshift		2125639	0		=			
ANR	2125916	Identifier	cx		2125639	0					
ANR	2125917	ShiftExpression	b >> cxshift		2125639	1		>>			
ANR	2125918	Identifier	b		2125639	0					
ANR	2125919	Identifier	cxshift		2125639	1					
ANR	2125920	ExpressionStatement	"ret = decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"	67:8:989:1043	2125639	12	True				
ANR	2125921	AssignmentExpression	"ret = decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"		2125639	0		=			
ANR	2125922	Identifier	ret		2125639	0					
ANR	2125923	CallExpression	"decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"		2125639	1					
ANR	2125924	Callee	decode_value		2125639	0					
ANR	2125925	Identifier	decode_value		2125639	0					
ANR	2125926	ArgumentList	s		2125639	1					
ANR	2125927	Argument	s		2125639	0					
ANR	2125928	Identifier	s		2125639	0					
ANR	2125929	Argument	s -> run_model [ 0 ]		2125639	1					
ANR	2125930	ArrayIndexing	s -> run_model [ 0 ]		2125639	0					
ANR	2125931	PtrMemberAccess	s -> run_model		2125639	0					
ANR	2125932	Identifier	s		2125639	0					
ANR	2125933	Identifier	run_model		2125639	1					
ANR	2125934	PrimaryExpression	0		2125639	1					
ANR	2125935	Argument	256		2125639	2					
ANR	2125936	PrimaryExpression	256		2125639	0					
ANR	2125937	Argument	400		2125639	3					
ANR	2125938	PrimaryExpression	400		2125639	0					
ANR	2125939	Argument	& run		2125639	4					
ANR	2125940	UnaryOperationExpression	& run		2125639	0					
ANR	2125941	UnaryOperator	&		2125639	0					
ANR	2125942	Identifier	run		2125639	1					
ANR	2125943	IfStatement	if ( ret < 0 )		2125639	13					
ANR	2125944	Condition	ret < 0	69:12:1058:1064	2125639	0	True				
ANR	2125945	RelationalExpression	ret < 0		2125639	0		<			
ANR	2125946	Identifier	ret		2125639	0					
ANR	2125947	PrimaryExpression	0		2125639	1					
ANR	2125948	ReturnStatement	return ret ;	71:12:1080:1090	2125639	1	True				
ANR	2125949	Identifier	ret		2125639	0					
ANR	2125950	ExpressionStatement	clr = ( b << 16 ) + ( g << 8 ) + r	75:8:1103:1133	2125639	14	True				
ANR	2125951	AssignmentExpression	clr = ( b << 16 ) + ( g << 8 ) + r		2125639	0		=			
ANR	2125952	Identifier	clr		2125639	0					
ANR	2125953	AdditiveExpression	( b << 16 ) + ( g << 8 ) + r		2125639	1		+			
ANR	2125954	ShiftExpression	b << 16		2125639	0		<<			
ANR	2125955	Identifier	b		2125639	0					
ANR	2125956	PrimaryExpression	16		2125639	1					
ANR	2125957	AdditiveExpression	( g << 8 ) + r		2125639	1		+			
ANR	2125958	ShiftExpression	g << 8		2125639	0		<<			
ANR	2125959	Identifier	g		2125639	0					
ANR	2125960	PrimaryExpression	8		2125639	1					
ANR	2125961	Identifier	r		2125639	1					
ANR	2125962	ExpressionStatement	k += run	77:8:1144:1152	2125639	15	True				
ANR	2125963	AssignmentExpression	k += run		2125639	0		+=			
ANR	2125964	Identifier	k		2125639	0					
ANR	2125965	Identifier	run		2125639	1					
ANR	2125966	WhileStatement	while ( run -- > 0 )		2125639	16					
ANR	2125967	Condition	run -- > 0	79:15:1170:1178	2125639	0	True				
ANR	2125968	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2125969	PostIncDecOperationExpression	run --		2125639	0					
ANR	2125970	Identifier	run		2125639	0					
ANR	2125971	IncDec	--		2125639	1					
ANR	2125972	PrimaryExpression	0		2125639	1					
ANR	2125973	CompoundStatement		77:26:1103:1103	2125639	1					
ANR	2125974	ExpressionStatement	dst [ y * linesize + x ] = clr	81:12:1196:1223	2125639	0	True				
ANR	2125975	AssignmentExpression	dst [ y * linesize + x ] = clr		2125639	0		=			
ANR	2125976	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2125977	Identifier	dst		2125639	0					
ANR	2125978	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2125979	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2125980	Identifier	y		2125639	0					
ANR	2125981	Identifier	linesize		2125639	1					
ANR	2125982	Identifier	x		2125639	1					
ANR	2125983	Identifier	clr		2125639	1					
ANR	2125984	ExpressionStatement	lx = x	83:12:1238:1244	2125639	1	True				
ANR	2125985	AssignmentExpression	lx = x		2125639	0		=			
ANR	2125986	Identifier	lx		2125639	0					
ANR	2125987	Identifier	x		2125639	1					
ANR	2125988	ExpressionStatement	ly = y	85:12:1259:1265	2125639	2	True				
ANR	2125989	AssignmentExpression	ly = y		2125639	0		=			
ANR	2125990	Identifier	ly		2125639	0					
ANR	2125991	Identifier	y		2125639	1					
ANR	2125992	ExpressionStatement	x ++	87:12:1280:1283	2125639	3	True				
ANR	2125993	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2125994	Identifier	x		2125639	0					
ANR	2125995	IncDec	++		2125639	1					
ANR	2125996	IfStatement	if ( x >= avctx -> width )		2125639	4					
ANR	2125997	Condition	x >= avctx -> width	89:16:1302:1318	2125639	0	True				
ANR	2125998	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2125999	Identifier	x		2125639	0					
ANR	2126000	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126001	Identifier	avctx		2125639	0					
ANR	2126002	Identifier	width		2125639	1					
ANR	2126003	CompoundStatement		87:35:1243:1243	2125639	1					
ANR	2126004	ExpressionStatement	x = 0	91:16:1340:1345	2125639	0	True				
ANR	2126005	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126006	Identifier	x		2125639	0					
ANR	2126007	PrimaryExpression	0		2125639	1					
ANR	2126008	ExpressionStatement	y ++	93:16:1364:1367	2125639	1	True				
ANR	2126009	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126010	Identifier	y		2125639	0					
ANR	2126011	IncDec	++		2125639	1					
ANR	2126012	ExpressionStatement	off = - linesize - 1	101:4:1407:1426	2125639	10	True				
ANR	2126013	AssignmentExpression	off = - linesize - 1		2125639	0		=			
ANR	2126014	Identifier	off		2125639	0					
ANR	2126015	AdditiveExpression	- linesize - 1		2125639	1		-			
ANR	2126016	UnaryOperationExpression	- linesize		2125639	0					
ANR	2126017	UnaryOperator	-		2125639	0					
ANR	2126018	Identifier	linesize		2125639	1					
ANR	2126019	PrimaryExpression	1		2125639	1					
ANR	2126020	ExpressionStatement	ptype = 0	103:4:1433:1442	2125639	11	True				
ANR	2126021	AssignmentExpression	ptype = 0		2125639	0		=			
ANR	2126022	Identifier	ptype		2125639	0					
ANR	2126023	PrimaryExpression	0		2125639	1					
ANR	2126024	WhileStatement	while ( x < avctx -> width && y < avctx -> height )		2125639	12					
ANR	2126025	Condition	x < avctx -> width && y < avctx -> height	107:11:1458:1494	2125639	0	True				
ANR	2126026	AndExpression	x < avctx -> width && y < avctx -> height		2125639	0		&&			
ANR	2126027	RelationalExpression	x < avctx -> width		2125639	0		<			
ANR	2126028	Identifier	x		2125639	0					
ANR	2126029	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126030	Identifier	avctx		2125639	0					
ANR	2126031	Identifier	width		2125639	1					
ANR	2126032	RelationalExpression	y < avctx -> height		2125639	1		<			
ANR	2126033	Identifier	y		2125639	0					
ANR	2126034	PtrMemberAccess	avctx -> height		2125639	1					
ANR	2126035	Identifier	avctx		2125639	0					
ANR	2126036	Identifier	height		2125639	1					
ANR	2126037	CompoundStatement		105:50:1419:1419	2125639	1					
ANR	2126038	ExpressionStatement	"ret = decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"	109:8:1508:1566	2125639	0	True				
ANR	2126039	AssignmentExpression	"ret = decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"		2125639	0		=			
ANR	2126040	Identifier	ret		2125639	0					
ANR	2126041	CallExpression	"decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"		2125639	1					
ANR	2126042	Callee	decode_value		2125639	0					
ANR	2126043	Identifier	decode_value		2125639	0					
ANR	2126044	ArgumentList	s		2125639	1					
ANR	2126045	Argument	s		2125639	0					
ANR	2126046	Identifier	s		2125639	0					
ANR	2126047	Argument	s -> op_model [ ptype ]		2125639	1					
ANR	2126048	ArrayIndexing	s -> op_model [ ptype ]		2125639	0					
ANR	2126049	PtrMemberAccess	s -> op_model		2125639	0					
ANR	2126050	Identifier	s		2125639	0					
ANR	2126051	Identifier	op_model		2125639	1					
ANR	2126052	Identifier	ptype		2125639	1					
ANR	2126053	Argument	6		2125639	2					
ANR	2126054	PrimaryExpression	6		2125639	0					
ANR	2126055	Argument	1000		2125639	3					
ANR	2126056	PrimaryExpression	1000		2125639	0					
ANR	2126057	Argument	& ptype		2125639	4					
ANR	2126058	UnaryOperationExpression	& ptype		2125639	0					
ANR	2126059	UnaryOperator	&		2125639	0					
ANR	2126060	Identifier	ptype		2125639	1					
ANR	2126061	IfStatement	if ( ret < 0 )		2125639	1					
ANR	2126062	Condition	ret < 0	111:12:1581:1587	2125639	0	True				
ANR	2126063	RelationalExpression	ret < 0		2125639	0		<			
ANR	2126064	Identifier	ret		2125639	0					
ANR	2126065	PrimaryExpression	0		2125639	1					
ANR	2126066	ReturnStatement	return ret ;	113:12:1603:1613	2125639	1	True				
ANR	2126067	Identifier	ret		2125639	0					
ANR	2126068	IfStatement	if ( ptype == 0 )		2125639	2					
ANR	2126069	Condition	ptype == 0	115:12:1628:1637	2125639	0	True				
ANR	2126070	EqualityExpression	ptype == 0		2125639	0		==			
ANR	2126071	Identifier	ptype		2125639	0					
ANR	2126072	PrimaryExpression	0		2125639	1					
ANR	2126073	CompoundStatement		113:24:1562:1562	2125639	1					
ANR	2126074	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"	117:12:1655:1714	2125639	0	True				
ANR	2126075	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2125639	0		=			
ANR	2126076	Identifier	ret		2125639	0					
ANR	2126077	CallExpression	"decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2125639	1					
ANR	2126078	Callee	decode_unit		2125639	0					
ANR	2126079	Identifier	decode_unit		2125639	0					
ANR	2126080	ArgumentList	s		2125639	1					
ANR	2126081	Argument	s		2125639	0					
ANR	2126082	Identifier	s		2125639	0					
ANR	2126083	Argument	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	1					
ANR	2126084	UnaryOperationExpression	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	0					
ANR	2126085	UnaryOperator	&		2125639	0					
ANR	2126086	ArrayIndexing	s -> pixel_model [ 0 ] [ cx + cx1 ]		2125639	1					
ANR	2126087	ArrayIndexing	s -> pixel_model [ 0 ]		2125639	0					
ANR	2126088	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2126089	Identifier	s		2125639	0					
ANR	2126090	Identifier	pixel_model		2125639	1					
ANR	2126091	PrimaryExpression	0		2125639	1					
ANR	2126092	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2126093	Identifier	cx		2125639	0					
ANR	2126094	Identifier	cx1		2125639	1					
ANR	2126095	Argument	400		2125639	2					
ANR	2126096	PrimaryExpression	400		2125639	0					
ANR	2126097	Argument	& r		2125639	3					
ANR	2126098	UnaryOperationExpression	& r		2125639	0					
ANR	2126099	UnaryOperator	&		2125639	0					
ANR	2126100	Identifier	r		2125639	1					
ANR	2126101	IfStatement	if ( ret < 0 )		2125639	1					
ANR	2126102	Condition	ret < 0	119:16:1733:1739	2125639	0	True				
ANR	2126103	RelationalExpression	ret < 0		2125639	0		<			
ANR	2126104	Identifier	ret		2125639	0					
ANR	2126105	PrimaryExpression	0		2125639	1					
ANR	2126106	ReturnStatement	return ret ;	121:16:1759:1769	2125639	1	True				
ANR	2126107	Identifier	ret		2125639	0					
ANR	2126108	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	125:12:1786:1809	2125639	2	True				
ANR	2126109	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2126110	Identifier	cx1		2125639	0					
ANR	2126111	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2126112	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2126113	Identifier	cx		2125639	0					
ANR	2126114	PrimaryExpression	6		2125639	1					
ANR	2126115	PrimaryExpression	0xFC0		2125639	1					
ANR	2126116	ExpressionStatement	cx = r >> cxshift	127:12:1824:1841	2125639	3	True				
ANR	2126117	AssignmentExpression	cx = r >> cxshift		2125639	0		=			
ANR	2126118	Identifier	cx		2125639	0					
ANR	2126119	ShiftExpression	r >> cxshift		2125639	1		>>			
ANR	2126120	Identifier	r		2125639	0					
ANR	2126121	Identifier	cxshift		2125639	1					
ANR	2126122	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"	129:12:1856:1915	2125639	4	True				
ANR	2126123	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2125639	0		=			
ANR	2126124	Identifier	ret		2125639	0					
ANR	2126125	CallExpression	"decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2125639	1					
ANR	2126126	Callee	decode_unit		2125639	0					
ANR	2126127	Identifier	decode_unit		2125639	0					
ANR	2126128	ArgumentList	s		2125639	1					
ANR	2126129	Argument	s		2125639	0					
ANR	2126130	Identifier	s		2125639	0					
ANR	2126131	Argument	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	1					
ANR	2126132	UnaryOperationExpression	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	0					
ANR	2126133	UnaryOperator	&		2125639	0					
ANR	2126134	ArrayIndexing	s -> pixel_model [ 1 ] [ cx + cx1 ]		2125639	1					
ANR	2126135	ArrayIndexing	s -> pixel_model [ 1 ]		2125639	0					
ANR	2126136	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2126137	Identifier	s		2125639	0					
ANR	2126138	Identifier	pixel_model		2125639	1					
ANR	2126139	PrimaryExpression	1		2125639	1					
ANR	2126140	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2126141	Identifier	cx		2125639	0					
ANR	2126142	Identifier	cx1		2125639	1					
ANR	2126143	Argument	400		2125639	2					
ANR	2126144	PrimaryExpression	400		2125639	0					
ANR	2126145	Argument	& g		2125639	3					
ANR	2126146	UnaryOperationExpression	& g		2125639	0					
ANR	2126147	UnaryOperator	&		2125639	0					
ANR	2126148	Identifier	g		2125639	1					
ANR	2126149	IfStatement	if ( ret < 0 )		2125639	5					
ANR	2126150	Condition	ret < 0	131:16:1934:1940	2125639	0	True				
ANR	2126151	RelationalExpression	ret < 0		2125639	0		<			
ANR	2126152	Identifier	ret		2125639	0					
ANR	2126153	PrimaryExpression	0		2125639	1					
ANR	2126154	ReturnStatement	return ret ;	133:16:1960:1970	2125639	1	True				
ANR	2126155	Identifier	ret		2125639	0					
ANR	2126156	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	137:12:1987:2010	2125639	6	True				
ANR	2126157	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2126158	Identifier	cx1		2125639	0					
ANR	2126159	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2126160	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2126161	Identifier	cx		2125639	0					
ANR	2126162	PrimaryExpression	6		2125639	1					
ANR	2126163	PrimaryExpression	0xFC0		2125639	1					
ANR	2126164	ExpressionStatement	cx = g >> cxshift	139:12:2025:2042	2125639	7	True				
ANR	2126165	AssignmentExpression	cx = g >> cxshift		2125639	0		=			
ANR	2126166	Identifier	cx		2125639	0					
ANR	2126167	ShiftExpression	g >> cxshift		2125639	1		>>			
ANR	2126168	Identifier	g		2125639	0					
ANR	2126169	Identifier	cxshift		2125639	1					
ANR	2126170	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"	141:12:2057:2116	2125639	8	True				
ANR	2126171	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2125639	0		=			
ANR	2126172	Identifier	ret		2125639	0					
ANR	2126173	CallExpression	"decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2125639	1					
ANR	2126174	Callee	decode_unit		2125639	0					
ANR	2126175	Identifier	decode_unit		2125639	0					
ANR	2126176	ArgumentList	s		2125639	1					
ANR	2126177	Argument	s		2125639	0					
ANR	2126178	Identifier	s		2125639	0					
ANR	2126179	Argument	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	1					
ANR	2126180	UnaryOperationExpression	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	0					
ANR	2126181	UnaryOperator	&		2125639	0					
ANR	2126182	ArrayIndexing	s -> pixel_model [ 2 ] [ cx + cx1 ]		2125639	1					
ANR	2126183	ArrayIndexing	s -> pixel_model [ 2 ]		2125639	0					
ANR	2126184	PtrMemberAccess	s -> pixel_model		2125639	0					
ANR	2126185	Identifier	s		2125639	0					
ANR	2126186	Identifier	pixel_model		2125639	1					
ANR	2126187	PrimaryExpression	2		2125639	1					
ANR	2126188	AdditiveExpression	cx + cx1		2125639	1		+			
ANR	2126189	Identifier	cx		2125639	0					
ANR	2126190	Identifier	cx1		2125639	1					
ANR	2126191	Argument	400		2125639	2					
ANR	2126192	PrimaryExpression	400		2125639	0					
ANR	2126193	Argument	& b		2125639	3					
ANR	2126194	UnaryOperationExpression	& b		2125639	0					
ANR	2126195	UnaryOperator	&		2125639	0					
ANR	2126196	Identifier	b		2125639	1					
ANR	2126197	IfStatement	if ( ret < 0 )		2125639	9					
ANR	2126198	Condition	ret < 0	143:16:2135:2141	2125639	0	True				
ANR	2126199	RelationalExpression	ret < 0		2125639	0		<			
ANR	2126200	Identifier	ret		2125639	0					
ANR	2126201	PrimaryExpression	0		2125639	1					
ANR	2126202	ReturnStatement	return ret ;	145:16:2161:2171	2125639	1	True				
ANR	2126203	Identifier	ret		2125639	0					
ANR	2126204	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	149:12:2188:2211	2125639	10	True				
ANR	2126205	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2125639	0		=			
ANR	2126206	Identifier	cx1		2125639	0					
ANR	2126207	BitAndExpression	( cx << 6 ) & 0xFC0		2125639	1		&			
ANR	2126208	ShiftExpression	cx << 6		2125639	0		<<			
ANR	2126209	Identifier	cx		2125639	0					
ANR	2126210	PrimaryExpression	6		2125639	1					
ANR	2126211	PrimaryExpression	0xFC0		2125639	1					
ANR	2126212	ExpressionStatement	cx = b >> cxshift	151:12:2226:2243	2125639	11	True				
ANR	2126213	AssignmentExpression	cx = b >> cxshift		2125639	0		=			
ANR	2126214	Identifier	cx		2125639	0					
ANR	2126215	ShiftExpression	b >> cxshift		2125639	1		>>			
ANR	2126216	Identifier	b		2125639	0					
ANR	2126217	Identifier	cxshift		2125639	1					
ANR	2126218	ExpressionStatement	clr = ( b << 16 ) + ( g << 8 ) + r	153:12:2258:2288	2125639	12	True				
ANR	2126219	AssignmentExpression	clr = ( b << 16 ) + ( g << 8 ) + r		2125639	0		=			
ANR	2126220	Identifier	clr		2125639	0					
ANR	2126221	AdditiveExpression	( b << 16 ) + ( g << 8 ) + r		2125639	1		+			
ANR	2126222	ShiftExpression	b << 16		2125639	0		<<			
ANR	2126223	Identifier	b		2125639	0					
ANR	2126224	PrimaryExpression	16		2125639	1					
ANR	2126225	AdditiveExpression	( g << 8 ) + r		2125639	1		+			
ANR	2126226	ShiftExpression	g << 8		2125639	0		<<			
ANR	2126227	Identifier	g		2125639	0					
ANR	2126228	PrimaryExpression	8		2125639	1					
ANR	2126229	Identifier	r		2125639	1					
ANR	2126230	IfStatement	if ( ptype > 5 )		2125639	3					
ANR	2126231	Condition	ptype > 5	157:12:2314:2322	2125639	0	True				
ANR	2126232	RelationalExpression	ptype > 5		2125639	0		>			
ANR	2126233	Identifier	ptype		2125639	0					
ANR	2126234	PrimaryExpression	5		2125639	1					
ANR	2126235	ReturnStatement	return AVERROR_INVALIDDATA ;	159:12:2338:2364	2125639	1	True				
ANR	2126236	Identifier	AVERROR_INVALIDDATA		2125639	0					
ANR	2126237	ExpressionStatement	"ret = decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"	161:8:2375:2433	2125639	4	True				
ANR	2126238	AssignmentExpression	"ret = decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"		2125639	0		=			
ANR	2126239	Identifier	ret		2125639	0					
ANR	2126240	CallExpression	"decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"		2125639	1					
ANR	2126241	Callee	decode_value		2125639	0					
ANR	2126242	Identifier	decode_value		2125639	0					
ANR	2126243	ArgumentList	s		2125639	1					
ANR	2126244	Argument	s		2125639	0					
ANR	2126245	Identifier	s		2125639	0					
ANR	2126246	Argument	s -> run_model [ ptype ]		2125639	1					
ANR	2126247	ArrayIndexing	s -> run_model [ ptype ]		2125639	0					
ANR	2126248	PtrMemberAccess	s -> run_model		2125639	0					
ANR	2126249	Identifier	s		2125639	0					
ANR	2126250	Identifier	run_model		2125639	1					
ANR	2126251	Identifier	ptype		2125639	1					
ANR	2126252	Argument	256		2125639	2					
ANR	2126253	PrimaryExpression	256		2125639	0					
ANR	2126254	Argument	400		2125639	3					
ANR	2126255	PrimaryExpression	400		2125639	0					
ANR	2126256	Argument	& run		2125639	4					
ANR	2126257	UnaryOperationExpression	& run		2125639	0					
ANR	2126258	UnaryOperator	&		2125639	0					
ANR	2126259	Identifier	run		2125639	1					
ANR	2126260	IfStatement	if ( ret < 0 )		2125639	5					
ANR	2126261	Condition	ret < 0	163:12:2448:2454	2125639	0	True				
ANR	2126262	RelationalExpression	ret < 0		2125639	0		<			
ANR	2126263	Identifier	ret		2125639	0					
ANR	2126264	PrimaryExpression	0		2125639	1					
ANR	2126265	ReturnStatement	return ret ;	165:12:2470:2480	2125639	1	True				
ANR	2126266	Identifier	ret		2125639	0					
ANR	2126267	SwitchStatement	switch ( ptype )		2125639	6					
ANR	2126268	Condition	ptype	169:16:2501:2505	2125639	0	True				
ANR	2126269	Identifier	ptype		2125639	0					
ANR	2126270	CompoundStatement		167:23:2430:2430	2125639	1					
ANR	2126271	Label	case 0 :	171:8:2519:2525	2125639	0	True				
ANR	2126272	WhileStatement	while ( run -- > 0 )		2125639	1					
ANR	2126273	Condition	run -- > 0	173:19:2547:2555	2125639	0	True				
ANR	2126274	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2126275	PostIncDecOperationExpression	run --		2125639	0					
ANR	2126276	Identifier	run		2125639	0					
ANR	2126277	IncDec	--		2125639	1					
ANR	2126278	PrimaryExpression	0		2125639	1					
ANR	2126279	CompoundStatement		171:30:2480:2480	2125639	1					
ANR	2126280	ExpressionStatement	dst [ y * linesize + x ] = clr	175:16:2577:2604	2125639	0	True				
ANR	2126281	AssignmentExpression	dst [ y * linesize + x ] = clr		2125639	0		=			
ANR	2126282	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2126283	Identifier	dst		2125639	0					
ANR	2126284	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2126285	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126286	Identifier	y		2125639	0					
ANR	2126287	Identifier	linesize		2125639	1					
ANR	2126288	Identifier	x		2125639	1					
ANR	2126289	Identifier	clr		2125639	1					
ANR	2126290	ExpressionStatement	lx = x	177:16:2623:2629	2125639	1	True				
ANR	2126291	AssignmentExpression	lx = x		2125639	0		=			
ANR	2126292	Identifier	lx		2125639	0					
ANR	2126293	Identifier	x		2125639	1					
ANR	2126294	ExpressionStatement	ly = y	179:16:2648:2654	2125639	2	True				
ANR	2126295	AssignmentExpression	ly = y		2125639	0		=			
ANR	2126296	Identifier	ly		2125639	0					
ANR	2126297	Identifier	y		2125639	1					
ANR	2126298	ExpressionStatement	x ++	181:16:2673:2676	2125639	3	True				
ANR	2126299	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2126300	Identifier	x		2125639	0					
ANR	2126301	IncDec	++		2125639	1					
ANR	2126302	IfStatement	if ( x >= avctx -> width )		2125639	4					
ANR	2126303	Condition	x >= avctx -> width	183:20:2699:2715	2125639	0	True				
ANR	2126304	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2126305	Identifier	x		2125639	0					
ANR	2126306	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126307	Identifier	avctx		2125639	0					
ANR	2126308	Identifier	width		2125639	1					
ANR	2126309	CompoundStatement		181:39:2640:2640	2125639	1					
ANR	2126310	ExpressionStatement	x = 0	185:20:2741:2746	2125639	0	True				
ANR	2126311	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126312	Identifier	x		2125639	0					
ANR	2126313	PrimaryExpression	0		2125639	1					
ANR	2126314	ExpressionStatement	y ++	187:20:2769:2772	2125639	1	True				
ANR	2126315	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126316	Identifier	y		2125639	0					
ANR	2126317	IncDec	++		2125639	1					
ANR	2126318	BreakStatement	break ;	193:12:2821:2826	2125639	2	True				
ANR	2126319	Label	case 1 :	195:8:2837:2843	2125639	3	True				
ANR	2126320	WhileStatement	while ( run -- > 0 )		2125639	4					
ANR	2126321	Condition	run -- > 0	197:19:2865:2873	2125639	0	True				
ANR	2126322	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2126323	PostIncDecOperationExpression	run --		2125639	0					
ANR	2126324	Identifier	run		2125639	0					
ANR	2126325	IncDec	--		2125639	1					
ANR	2126326	PrimaryExpression	0		2125639	1					
ANR	2126327	CompoundStatement		195:30:2798:2798	2125639	1					
ANR	2126328	ExpressionStatement	dst [ y * linesize + x ] = dst [ ly * linesize + lx ]	199:16:2895:2942	2125639	0	True				
ANR	2126329	AssignmentExpression	dst [ y * linesize + x ] = dst [ ly * linesize + lx ]		2125639	0		=			
ANR	2126330	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2126331	Identifier	dst		2125639	0					
ANR	2126332	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2126333	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126334	Identifier	y		2125639	0					
ANR	2126335	Identifier	linesize		2125639	1					
ANR	2126336	Identifier	x		2125639	1					
ANR	2126337	ArrayIndexing	dst [ ly * linesize + lx ]		2125639	1					
ANR	2126338	Identifier	dst		2125639	0					
ANR	2126339	AdditiveExpression	ly * linesize + lx		2125639	1		+			
ANR	2126340	MultiplicativeExpression	ly * linesize		2125639	0		*			
ANR	2126341	Identifier	ly		2125639	0					
ANR	2126342	Identifier	linesize		2125639	1					
ANR	2126343	Identifier	lx		2125639	1					
ANR	2126344	ExpressionStatement	lx = x	201:16:2961:2967	2125639	1	True				
ANR	2126345	AssignmentExpression	lx = x		2125639	0		=			
ANR	2126346	Identifier	lx		2125639	0					
ANR	2126347	Identifier	x		2125639	1					
ANR	2126348	ExpressionStatement	ly = y	203:16:2986:2992	2125639	2	True				
ANR	2126349	AssignmentExpression	ly = y		2125639	0		=			
ANR	2126350	Identifier	ly		2125639	0					
ANR	2126351	Identifier	y		2125639	1					
ANR	2126352	ExpressionStatement	x ++	205:16:3011:3014	2125639	3	True				
ANR	2126353	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2126354	Identifier	x		2125639	0					
ANR	2126355	IncDec	++		2125639	1					
ANR	2126356	IfStatement	if ( x >= avctx -> width )		2125639	4					
ANR	2126357	Condition	x >= avctx -> width	207:20:3037:3053	2125639	0	True				
ANR	2126358	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2126359	Identifier	x		2125639	0					
ANR	2126360	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126361	Identifier	avctx		2125639	0					
ANR	2126362	Identifier	width		2125639	1					
ANR	2126363	CompoundStatement		205:39:2978:2978	2125639	1					
ANR	2126364	ExpressionStatement	x = 0	209:20:3079:3084	2125639	0	True				
ANR	2126365	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126366	Identifier	x		2125639	0					
ANR	2126367	PrimaryExpression	0		2125639	1					
ANR	2126368	ExpressionStatement	y ++	211:20:3107:3110	2125639	1	True				
ANR	2126369	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126370	Identifier	y		2125639	0					
ANR	2126371	IncDec	++		2125639	1					
ANR	2126372	ExpressionStatement	clr = dst [ ly * linesize + lx ]	217:12:3159:3188	2125639	5	True				
ANR	2126373	AssignmentExpression	clr = dst [ ly * linesize + lx ]		2125639	0		=			
ANR	2126374	Identifier	clr		2125639	0					
ANR	2126375	ArrayIndexing	dst [ ly * linesize + lx ]		2125639	1					
ANR	2126376	Identifier	dst		2125639	0					
ANR	2126377	AdditiveExpression	ly * linesize + lx		2125639	1		+			
ANR	2126378	MultiplicativeExpression	ly * linesize		2125639	0		*			
ANR	2126379	Identifier	ly		2125639	0					
ANR	2126380	Identifier	linesize		2125639	1					
ANR	2126381	Identifier	lx		2125639	1					
ANR	2126382	BreakStatement	break ;	219:12:3203:3208	2125639	6	True				
ANR	2126383	Label	case 2 :	221:8:3219:3225	2125639	7	True				
ANR	2126384	WhileStatement	while ( run -- > 0 )		2125639	8					
ANR	2126385	Condition	run -- > 0	223:19:3247:3255	2125639	0	True				
ANR	2126386	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2126387	PostIncDecOperationExpression	run --		2125639	0					
ANR	2126388	Identifier	run		2125639	0					
ANR	2126389	IncDec	--		2125639	1					
ANR	2126390	PrimaryExpression	0		2125639	1					
ANR	2126391	CompoundStatement		221:30:3180:3180	2125639	1					
ANR	2126392	ExpressionStatement	clr = dst [ y * linesize + x + off + 1 ]	225:16:3277:3314	2125639	0	True				
ANR	2126393	AssignmentExpression	clr = dst [ y * linesize + x + off + 1 ]		2125639	0		=			
ANR	2126394	Identifier	clr		2125639	0					
ANR	2126395	ArrayIndexing	dst [ y * linesize + x + off + 1 ]		2125639	1					
ANR	2126396	Identifier	dst		2125639	0					
ANR	2126397	AdditiveExpression	y * linesize + x + off + 1		2125639	1		+			
ANR	2126398	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126399	Identifier	y		2125639	0					
ANR	2126400	Identifier	linesize		2125639	1					
ANR	2126401	AdditiveExpression	x + off + 1		2125639	1		+			
ANR	2126402	Identifier	x		2125639	0					
ANR	2126403	AdditiveExpression	off + 1		2125639	1		+			
ANR	2126404	Identifier	off		2125639	0					
ANR	2126405	PrimaryExpression	1		2125639	1					
ANR	2126406	ExpressionStatement	dst [ y * linesize + x ] = clr	227:16:3333:3360	2125639	1	True				
ANR	2126407	AssignmentExpression	dst [ y * linesize + x ] = clr		2125639	0		=			
ANR	2126408	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2126409	Identifier	dst		2125639	0					
ANR	2126410	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2126411	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126412	Identifier	y		2125639	0					
ANR	2126413	Identifier	linesize		2125639	1					
ANR	2126414	Identifier	x		2125639	1					
ANR	2126415	Identifier	clr		2125639	1					
ANR	2126416	ExpressionStatement	lx = x	229:16:3379:3385	2125639	2	True				
ANR	2126417	AssignmentExpression	lx = x		2125639	0		=			
ANR	2126418	Identifier	lx		2125639	0					
ANR	2126419	Identifier	x		2125639	1					
ANR	2126420	ExpressionStatement	ly = y	231:16:3404:3410	2125639	3	True				
ANR	2126421	AssignmentExpression	ly = y		2125639	0		=			
ANR	2126422	Identifier	ly		2125639	0					
ANR	2126423	Identifier	y		2125639	1					
ANR	2126424	ExpressionStatement	x ++	233:16:3429:3432	2125639	4	True				
ANR	2126425	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2126426	Identifier	x		2125639	0					
ANR	2126427	IncDec	++		2125639	1					
ANR	2126428	IfStatement	if ( x >= avctx -> width )		2125639	5					
ANR	2126429	Condition	x >= avctx -> width	235:20:3455:3471	2125639	0	True				
ANR	2126430	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2126431	Identifier	x		2125639	0					
ANR	2126432	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126433	Identifier	avctx		2125639	0					
ANR	2126434	Identifier	width		2125639	1					
ANR	2126435	CompoundStatement		233:39:3396:3396	2125639	1					
ANR	2126436	ExpressionStatement	x = 0	237:20:3497:3502	2125639	0	True				
ANR	2126437	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126438	Identifier	x		2125639	0					
ANR	2126439	PrimaryExpression	0		2125639	1					
ANR	2126440	ExpressionStatement	y ++	239:20:3525:3528	2125639	1	True				
ANR	2126441	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126442	Identifier	y		2125639	0					
ANR	2126443	IncDec	++		2125639	1					
ANR	2126444	BreakStatement	break ;	245:12:3577:3582	2125639	9	True				
ANR	2126445	Label	case 4 :	247:8:3593:3599	2125639	10	True				
ANR	2126446	WhileStatement	while ( run -- > 0 )		2125639	11					
ANR	2126447	Condition	run -- > 0	249:19:3621:3629	2125639	0	True				
ANR	2126448	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2126449	PostIncDecOperationExpression	run --		2125639	0					
ANR	2126450	Identifier	run		2125639	0					
ANR	2126451	IncDec	--		2125639	1					
ANR	2126452	PrimaryExpression	0		2125639	1					
ANR	2126453	CompoundStatement		249:16:3573:3603	2125639	1					
ANR	2126454	IdentifierDeclStatement	uint8_t * odst = ( uint8_t * ) dst ;	251:16:3651:3681	2125639	0	True				
ANR	2126455	IdentifierDecl	* odst = ( uint8_t * ) dst		2125639	0					
ANR	2126456	IdentifierDeclType	uint8_t *		2125639	0					
ANR	2126457	Identifier	odst		2125639	1					
ANR	2126458	AssignmentExpression	* odst = ( uint8_t * ) dst		2125639	2		=			
ANR	2126459	Identifier	odst		2125639	0					
ANR	2126460	CastExpression	( uint8_t * ) dst		2125639	1					
ANR	2126461	CastTarget	uint8_t *		2125639	0					
ANR	2126462	Identifier	dst		2125639	1					
ANR	2126463	ExpressionStatement	r = odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off ) * 4 ]	253:16:3700:3858	2125639	1	True				
ANR	2126464	AssignmentExpression	r = odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off ) * 4 ]		2125639	0		=			
ANR	2126465	Identifier	r		2125639	0					
ANR	2126466	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off ) * 4 ]		2125639	1		+			
ANR	2126467	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 ]		2125639	0					
ANR	2126468	Identifier	odst		2125639	0					
ANR	2126469	MultiplicativeExpression	( ly * linesize + lx ) * 4		2125639	1		*			
ANR	2126470	AdditiveExpression	ly * linesize + lx		2125639	0		+			
ANR	2126471	MultiplicativeExpression	ly * linesize		2125639	0		*			
ANR	2126472	Identifier	ly		2125639	0					
ANR	2126473	Identifier	linesize		2125639	1					
ANR	2126474	Identifier	lx		2125639	1					
ANR	2126475	PrimaryExpression	4		2125639	1					
ANR	2126476	AdditiveExpression	odst [ ( ( y * linesize + x ) + off ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off ) * 4 ]		2125639	1		-			
ANR	2126477	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 + 4 ]		2125639	0					
ANR	2126478	Identifier	odst		2125639	0					
ANR	2126479	AdditiveExpression	( ( y * linesize + x ) + off ) * 4 + 4		2125639	1		+			
ANR	2126480	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	0		*			
ANR	2126481	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126482	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126483	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126484	Identifier	y		2125639	0					
ANR	2126485	Identifier	linesize		2125639	1					
ANR	2126486	Identifier	x		2125639	1					
ANR	2126487	Identifier	off		2125639	1					
ANR	2126488	PrimaryExpression	4		2125639	1					
ANR	2126489	PrimaryExpression	4		2125639	1					
ANR	2126490	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 ]		2125639	1					
ANR	2126491	Identifier	odst		2125639	0					
ANR	2126492	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	1		*			
ANR	2126493	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126494	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126495	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126496	Identifier	y		2125639	0					
ANR	2126497	Identifier	linesize		2125639	1					
ANR	2126498	Identifier	x		2125639	1					
ANR	2126499	Identifier	off		2125639	1					
ANR	2126500	PrimaryExpression	4		2125639	1					
ANR	2126501	ExpressionStatement	g = odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 1 ]	259:16:3877:4043	2125639	2	True				
ANR	2126502	AssignmentExpression	g = odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 1 ]		2125639	0		=			
ANR	2126503	Identifier	g		2125639	0					
ANR	2126504	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 1 ]		2125639	1		+			
ANR	2126505	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 + 1 ]		2125639	0					
ANR	2126506	Identifier	odst		2125639	0					
ANR	2126507	AdditiveExpression	( ly * linesize + lx ) * 4 + 1		2125639	1		+			
ANR	2126508	MultiplicativeExpression	( ly * linesize + lx ) * 4		2125639	0		*			
ANR	2126509	AdditiveExpression	ly * linesize + lx		2125639	0		+			
ANR	2126510	MultiplicativeExpression	ly * linesize		2125639	0		*			
ANR	2126511	Identifier	ly		2125639	0					
ANR	2126512	Identifier	linesize		2125639	1					
ANR	2126513	Identifier	lx		2125639	1					
ANR	2126514	PrimaryExpression	4		2125639	1					
ANR	2126515	PrimaryExpression	1		2125639	1					
ANR	2126516	AdditiveExpression	odst [ ( ( y * linesize + x ) + off ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 1 ]		2125639	1		-			
ANR	2126517	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 + 5 ]		2125639	0					
ANR	2126518	Identifier	odst		2125639	0					
ANR	2126519	AdditiveExpression	( ( y * linesize + x ) + off ) * 4 + 5		2125639	1		+			
ANR	2126520	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	0		*			
ANR	2126521	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126522	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126523	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126524	Identifier	y		2125639	0					
ANR	2126525	Identifier	linesize		2125639	1					
ANR	2126526	Identifier	x		2125639	1					
ANR	2126527	Identifier	off		2125639	1					
ANR	2126528	PrimaryExpression	4		2125639	1					
ANR	2126529	PrimaryExpression	5		2125639	1					
ANR	2126530	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 + 1 ]		2125639	1					
ANR	2126531	Identifier	odst		2125639	0					
ANR	2126532	AdditiveExpression	( ( y * linesize + x ) + off ) * 4 + 1		2125639	1		+			
ANR	2126533	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	0		*			
ANR	2126534	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126535	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126536	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126537	Identifier	y		2125639	0					
ANR	2126538	Identifier	linesize		2125639	1					
ANR	2126539	Identifier	x		2125639	1					
ANR	2126540	Identifier	off		2125639	1					
ANR	2126541	PrimaryExpression	4		2125639	1					
ANR	2126542	PrimaryExpression	1		2125639	1					
ANR	2126543	ExpressionStatement	b = odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 2 ]	265:16:4062:4228	2125639	3	True				
ANR	2126544	AssignmentExpression	b = odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 2 ]		2125639	0		=			
ANR	2126545	Identifier	b		2125639	0					
ANR	2126546	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 2 ]		2125639	1		+			
ANR	2126547	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 + 2 ]		2125639	0					
ANR	2126548	Identifier	odst		2125639	0					
ANR	2126549	AdditiveExpression	( ly * linesize + lx ) * 4 + 2		2125639	1		+			
ANR	2126550	MultiplicativeExpression	( ly * linesize + lx ) * 4		2125639	0		*			
ANR	2126551	AdditiveExpression	ly * linesize + lx		2125639	0		+			
ANR	2126552	MultiplicativeExpression	ly * linesize		2125639	0		*			
ANR	2126553	Identifier	ly		2125639	0					
ANR	2126554	Identifier	linesize		2125639	1					
ANR	2126555	Identifier	lx		2125639	1					
ANR	2126556	PrimaryExpression	4		2125639	1					
ANR	2126557	PrimaryExpression	2		2125639	1					
ANR	2126558	AdditiveExpression	odst [ ( ( y * linesize + x ) + off ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off ) * 4 + 2 ]		2125639	1		-			
ANR	2126559	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 + 6 ]		2125639	0					
ANR	2126560	Identifier	odst		2125639	0					
ANR	2126561	AdditiveExpression	( ( y * linesize + x ) + off ) * 4 + 6		2125639	1		+			
ANR	2126562	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	0		*			
ANR	2126563	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126564	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126565	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126566	Identifier	y		2125639	0					
ANR	2126567	Identifier	linesize		2125639	1					
ANR	2126568	Identifier	x		2125639	1					
ANR	2126569	Identifier	off		2125639	1					
ANR	2126570	PrimaryExpression	4		2125639	1					
ANR	2126571	PrimaryExpression	6		2125639	1					
ANR	2126572	ArrayIndexing	odst [ ( ( y * linesize + x ) + off ) * 4 + 2 ]		2125639	1					
ANR	2126573	Identifier	odst		2125639	0					
ANR	2126574	AdditiveExpression	( ( y * linesize + x ) + off ) * 4 + 2		2125639	1		+			
ANR	2126575	MultiplicativeExpression	( ( y * linesize + x ) + off ) * 4		2125639	0		*			
ANR	2126576	AdditiveExpression	( y * linesize + x ) + off		2125639	0		+			
ANR	2126577	AdditiveExpression	y * linesize + x		2125639	0		+			
ANR	2126578	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126579	Identifier	y		2125639	0					
ANR	2126580	Identifier	linesize		2125639	1					
ANR	2126581	Identifier	x		2125639	1					
ANR	2126582	Identifier	off		2125639	1					
ANR	2126583	PrimaryExpression	4		2125639	1					
ANR	2126584	PrimaryExpression	2		2125639	1					
ANR	2126585	ExpressionStatement	clr = ( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )	271:16:4247:4304	2125639	4	True				
ANR	2126586	AssignmentExpression	clr = ( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2125639	0		=			
ANR	2126587	Identifier	clr		2125639	0					
ANR	2126588	AdditiveExpression	( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2125639	1		+			
ANR	2126589	ShiftExpression	( b & 0xFF ) << 16		2125639	0		<<			
ANR	2126590	BitAndExpression	b & 0xFF		2125639	0		&			
ANR	2126591	Identifier	b		2125639	0					
ANR	2126592	PrimaryExpression	0xFF		2125639	1					
ANR	2126593	PrimaryExpression	16		2125639	1					
ANR	2126594	AdditiveExpression	( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2125639	1		+			
ANR	2126595	ShiftExpression	( g & 0xFF ) << 8		2125639	0		<<			
ANR	2126596	BitAndExpression	g & 0xFF		2125639	0		&			
ANR	2126597	Identifier	g		2125639	0					
ANR	2126598	PrimaryExpression	0xFF		2125639	1					
ANR	2126599	PrimaryExpression	8		2125639	1					
ANR	2126600	BitAndExpression	r & 0xFF		2125639	1		&			
ANR	2126601	Identifier	r		2125639	0					
ANR	2126602	PrimaryExpression	0xFF		2125639	1					
ANR	2126603	ExpressionStatement	dst [ y * linesize + x ] = clr	273:16:4323:4350	2125639	5	True				
ANR	2126604	AssignmentExpression	dst [ y * linesize + x ] = clr		2125639	0		=			
ANR	2126605	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2126606	Identifier	dst		2125639	0					
ANR	2126607	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2126608	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126609	Identifier	y		2125639	0					
ANR	2126610	Identifier	linesize		2125639	1					
ANR	2126611	Identifier	x		2125639	1					
ANR	2126612	Identifier	clr		2125639	1					
ANR	2126613	ExpressionStatement	lx = x	275:16:4369:4375	2125639	6	True				
ANR	2126614	AssignmentExpression	lx = x		2125639	0		=			
ANR	2126615	Identifier	lx		2125639	0					
ANR	2126616	Identifier	x		2125639	1					
ANR	2126617	ExpressionStatement	ly = y	277:16:4394:4400	2125639	7	True				
ANR	2126618	AssignmentExpression	ly = y		2125639	0		=			
ANR	2126619	Identifier	ly		2125639	0					
ANR	2126620	Identifier	y		2125639	1					
ANR	2126621	ExpressionStatement	x ++	279:16:4419:4422	2125639	8	True				
ANR	2126622	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2126623	Identifier	x		2125639	0					
ANR	2126624	IncDec	++		2125639	1					
ANR	2126625	IfStatement	if ( x >= avctx -> width )		2125639	9					
ANR	2126626	Condition	x >= avctx -> width	281:20:4445:4461	2125639	0	True				
ANR	2126627	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2126628	Identifier	x		2125639	0					
ANR	2126629	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126630	Identifier	avctx		2125639	0					
ANR	2126631	Identifier	width		2125639	1					
ANR	2126632	CompoundStatement		279:39:4386:4386	2125639	1					
ANR	2126633	ExpressionStatement	x = 0	283:20:4487:4492	2125639	0	True				
ANR	2126634	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126635	Identifier	x		2125639	0					
ANR	2126636	PrimaryExpression	0		2125639	1					
ANR	2126637	ExpressionStatement	y ++	285:20:4515:4518	2125639	1	True				
ANR	2126638	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126639	Identifier	y		2125639	0					
ANR	2126640	IncDec	++		2125639	1					
ANR	2126641	BreakStatement	break ;	291:12:4567:4572	2125639	12	True				
ANR	2126642	Label	case 5 :	293:8:4583:4589	2125639	13	True				
ANR	2126643	WhileStatement	while ( run -- > 0 )		2125639	14					
ANR	2126644	Condition	run -- > 0	295:19:4611:4619	2125639	0	True				
ANR	2126645	RelationalExpression	run -- > 0		2125639	0		>			
ANR	2126646	PostIncDecOperationExpression	run --		2125639	0					
ANR	2126647	Identifier	run		2125639	0					
ANR	2126648	IncDec	--		2125639	1					
ANR	2126649	PrimaryExpression	0		2125639	1					
ANR	2126650	CompoundStatement		293:30:4544:4544	2125639	1					
ANR	2126651	ExpressionStatement	clr = dst [ y * linesize + x + off ]	297:16:4641:4674	2125639	0	True				
ANR	2126652	AssignmentExpression	clr = dst [ y * linesize + x + off ]		2125639	0		=			
ANR	2126653	Identifier	clr		2125639	0					
ANR	2126654	ArrayIndexing	dst [ y * linesize + x + off ]		2125639	1					
ANR	2126655	Identifier	dst		2125639	0					
ANR	2126656	AdditiveExpression	y * linesize + x + off		2125639	1		+			
ANR	2126657	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126658	Identifier	y		2125639	0					
ANR	2126659	Identifier	linesize		2125639	1					
ANR	2126660	AdditiveExpression	x + off		2125639	1		+			
ANR	2126661	Identifier	x		2125639	0					
ANR	2126662	Identifier	off		2125639	1					
ANR	2126663	ExpressionStatement	dst [ y * linesize + x ] = clr	299:16:4693:4720	2125639	1	True				
ANR	2126664	AssignmentExpression	dst [ y * linesize + x ] = clr		2125639	0		=			
ANR	2126665	ArrayIndexing	dst [ y * linesize + x ]		2125639	0					
ANR	2126666	Identifier	dst		2125639	0					
ANR	2126667	AdditiveExpression	y * linesize + x		2125639	1		+			
ANR	2126668	MultiplicativeExpression	y * linesize		2125639	0		*			
ANR	2126669	Identifier	y		2125639	0					
ANR	2126670	Identifier	linesize		2125639	1					
ANR	2126671	Identifier	x		2125639	1					
ANR	2126672	Identifier	clr		2125639	1					
ANR	2126673	ExpressionStatement	lx = x	301:16:4739:4745	2125639	2	True				
ANR	2126674	AssignmentExpression	lx = x		2125639	0		=			
ANR	2126675	Identifier	lx		2125639	0					
ANR	2126676	Identifier	x		2125639	1					
ANR	2126677	ExpressionStatement	ly = y	303:16:4764:4770	2125639	3	True				
ANR	2126678	AssignmentExpression	ly = y		2125639	0		=			
ANR	2126679	Identifier	ly		2125639	0					
ANR	2126680	Identifier	y		2125639	1					
ANR	2126681	ExpressionStatement	x ++	305:16:4789:4792	2125639	4	True				
ANR	2126682	PostIncDecOperationExpression	x ++		2125639	0					
ANR	2126683	Identifier	x		2125639	0					
ANR	2126684	IncDec	++		2125639	1					
ANR	2126685	IfStatement	if ( x >= avctx -> width )		2125639	5					
ANR	2126686	Condition	x >= avctx -> width	307:20:4815:4831	2125639	0	True				
ANR	2126687	RelationalExpression	x >= avctx -> width		2125639	0		>=			
ANR	2126688	Identifier	x		2125639	0					
ANR	2126689	PtrMemberAccess	avctx -> width		2125639	1					
ANR	2126690	Identifier	avctx		2125639	0					
ANR	2126691	Identifier	width		2125639	1					
ANR	2126692	CompoundStatement		305:39:4756:4756	2125639	1					
ANR	2126693	ExpressionStatement	x = 0	309:20:4857:4862	2125639	0	True				
ANR	2126694	AssignmentExpression	x = 0		2125639	0		=			
ANR	2126695	Identifier	x		2125639	0					
ANR	2126696	PrimaryExpression	0		2125639	1					
ANR	2126697	ExpressionStatement	y ++	311:20:4885:4888	2125639	1	True				
ANR	2126698	PostIncDecOperationExpression	y ++		2125639	0					
ANR	2126699	Identifier	y		2125639	0					
ANR	2126700	IncDec	++		2125639	1					
ANR	2126701	BreakStatement	break ;	317:12:4937:4942	2125639	15	True				
ANR	2126702	IfStatement	if ( avctx -> bits_per_coded_sample == 16 )		2125639	7					
ANR	2126703	Condition	avctx -> bits_per_coded_sample == 16	323:12:4970:5003	2125639	0	True				
ANR	2126704	EqualityExpression	avctx -> bits_per_coded_sample == 16		2125639	0		==			
ANR	2126705	PtrMemberAccess	avctx -> bits_per_coded_sample		2125639	0					
ANR	2126706	Identifier	avctx		2125639	0					
ANR	2126707	Identifier	bits_per_coded_sample		2125639	1					
ANR	2126708	PrimaryExpression	16		2125639	1					
ANR	2126709	CompoundStatement		321:48:4928:4928	2125639	1					
ANR	2126710	ExpressionStatement	cx1 = ( clr & 0xFF00 ) >> 2	325:12:5021:5046	2125639	0	True				
ANR	2126711	AssignmentExpression	cx1 = ( clr & 0xFF00 ) >> 2		2125639	0		=			
ANR	2126712	Identifier	cx1		2125639	0					
ANR	2126713	ShiftExpression	( clr & 0xFF00 ) >> 2		2125639	1		>>			
ANR	2126714	BitAndExpression	clr & 0xFF00		2125639	0		&			
ANR	2126715	Identifier	clr		2125639	0					
ANR	2126716	PrimaryExpression	0xFF00		2125639	1					
ANR	2126717	PrimaryExpression	2		2125639	1					
ANR	2126718	ExpressionStatement	cx = ( clr & 0xFFFFFF ) >> 16	327:12:5061:5088	2125639	1	True				
ANR	2126719	AssignmentExpression	cx = ( clr & 0xFFFFFF ) >> 16		2125639	0		=			
ANR	2126720	Identifier	cx		2125639	0					
ANR	2126721	ShiftExpression	( clr & 0xFFFFFF ) >> 16		2125639	1		>>			
ANR	2126722	BitAndExpression	clr & 0xFFFFFF		2125639	0		&			
ANR	2126723	Identifier	clr		2125639	0					
ANR	2126724	PrimaryExpression	0xFFFFFF		2125639	1					
ANR	2126725	PrimaryExpression	16		2125639	1					
ANR	2126726	ElseStatement	else		2125639	0					
ANR	2126727	CompoundStatement		327:15:5028:5028	2125639	0					
ANR	2126728	ExpressionStatement	cx1 = ( clr & 0xFC00 ) >> 4	331:12:5121:5146	2125639	0	True				
ANR	2126729	AssignmentExpression	cx1 = ( clr & 0xFC00 ) >> 4		2125639	0		=			
ANR	2126730	Identifier	cx1		2125639	0					
ANR	2126731	ShiftExpression	( clr & 0xFC00 ) >> 4		2125639	1		>>			
ANR	2126732	BitAndExpression	clr & 0xFC00		2125639	0		&			
ANR	2126733	Identifier	clr		2125639	0					
ANR	2126734	PrimaryExpression	0xFC00		2125639	1					
ANR	2126735	PrimaryExpression	4		2125639	1					
ANR	2126736	ExpressionStatement	cx = ( clr & 0xFFFFFF ) >> 18	333:12:5161:5188	2125639	1	True				
ANR	2126737	AssignmentExpression	cx = ( clr & 0xFFFFFF ) >> 18		2125639	0		=			
ANR	2126738	Identifier	cx		2125639	0					
ANR	2126739	ShiftExpression	( clr & 0xFFFFFF ) >> 18		2125639	1		>>			
ANR	2126740	BitAndExpression	clr & 0xFFFFFF		2125639	0		&			
ANR	2126741	Identifier	clr		2125639	0					
ANR	2126742	PrimaryExpression	0xFFFFFF		2125639	1					
ANR	2126743	PrimaryExpression	18		2125639	1					
ANR	2126744	ReturnStatement	return 0 ;	341:4:5215:5223	2125639	13	True				
ANR	2126745	PrimaryExpression	0		2125639	0					
ANR	2126746	ReturnType	static int		2125639	1					
ANR	2126747	Identifier	decompress_i		2125639	2					
ANR	2126748	ParameterList	"AVCodecContext * avctx , uint32_t * dst , int linesize"		2125639	3					
ANR	2126749	Parameter	AVCodecContext * avctx	1:24:24:44	2125639	0	True				
ANR	2126750	ParameterType	AVCodecContext *		2125639	0					
ANR	2126751	Identifier	avctx		2125639	1					
ANR	2126752	Parameter	uint32_t * dst	1:47:47:59	2125639	1	True				
ANR	2126753	ParameterType	uint32_t *		2125639	0					
ANR	2126754	Identifier	dst		2125639	1					
ANR	2126755	Parameter	int linesize	1:62:62:73	2125639	2	True				
ANR	2126756	ParameterType	int		2125639	0					
ANR	2126757	Identifier	linesize		2125639	1					
ANR	2126758	CFGEntryNode	ENTRY		2125639		True				
ANR	2126759	CFGExitNode	EXIT		2125639		True				
ANR	2126760	Symbol	* x		2125639						
ANR	2126761	Symbol	* y		2125639						
ANR	2126762	Symbol	run		2125639						
ANR	2126763	Symbol	lx		2125639						
ANR	2126764	Symbol	ly		2125639						
ANR	2126765	Symbol	* odst		2125639						
ANR	2126766	Symbol	* dst		2125639						
ANR	2126767	Symbol	linesize		2125639						
ANR	2126768	Symbol	decode_unit		2125639						
ANR	2126769	Symbol	& ptype		2125639						
ANR	2126770	Symbol	* off		2125639						
ANR	2126771	Symbol	ret		2125639						
ANR	2126772	Symbol	decode_value		2125639						
ANR	2126773	Symbol	clr		2125639						
ANR	2126774	Symbol	* linesize		2125639						
ANR	2126775	Symbol	& s -> gb		2125639						
ANR	2126776	Symbol	* avctx		2125639						
ANR	2126777	Symbol	& run		2125639						
ANR	2126778	Symbol	* s -> op_model		2125639						
ANR	2126779	Symbol	s -> run_model		2125639						
ANR	2126780	Symbol	avctx -> bits_per_coded_sample		2125639						
ANR	2126781	Symbol	* s -> run_model		2125639						
ANR	2126782	Symbol	dst		2125639						
ANR	2126783	Symbol	odst		2125639						
ANR	2126784	Symbol	avctx -> width		2125639						
ANR	2126785	Symbol	ptype		2125639						
ANR	2126786	Symbol	* ly		2125639						
ANR	2126787	Symbol	* s -> pixel_model		2125639						
ANR	2126788	Symbol	* lx		2125639						
ANR	2126789	Symbol	avctx -> height		2125639						
ANR	2126790	Symbol	s -> cxshift		2125639						
ANR	2126791	Symbol	* * s		2125639						
ANR	2126792	Symbol	gb		2125639						
ANR	2126793	Symbol	avctx		2125639						
ANR	2126794	Symbol	cx1		2125639						
ANR	2126795	Symbol	b		2125639						
ANR	2126796	Symbol	s -> pixel_model		2125639						
ANR	2126797	Symbol	s -> op_model		2125639						
ANR	2126798	Symbol	g		2125639						
ANR	2126799	Symbol	& b		2125639						
ANR	2126800	Symbol	k		2125639						
ANR	2126801	Symbol	avctx -> priv_data		2125639						
ANR	2126802	Symbol	& g		2125639						
ANR	2126803	Symbol	off		2125639						
ANR	2126804	Symbol	r		2125639						
ANR	2126805	Symbol	s		2125639						
ANR	2126806	Symbol	cx		2125639						
ANR	2126807	Symbol	& s -> rc		2125639						
ANR	2126808	Symbol	* ptype		2125639						
ANR	2126809	Symbol	x		2125639						
ANR	2126810	Symbol	& r		2125639						
ANR	2126811	Symbol	y		2125639						
ANR	2126812	Symbol	AVERROR_INVALIDDATA		2125639						
ANR	2126813	Symbol	* s		2125639						
ANR	2126814	Symbol	cxshift		2125639						
