command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6054855	File	/home/p4ultr4n/workplace/ReVeal/raw_code/numa_node_parse_1.c								
ANR	6054856	Function	numa_node_parse	1:0:0:2155							
ANR	6054857	FunctionDef	"numa_node_parse (NumaNodeOptions * node , QemuOpts * opts , Error * * errp)"		6054856	0					
ANR	6054858	CompoundStatement		3:0:82:2155	6054856	0					
ANR	6054859	IdentifierDeclStatement	uint16_t nodenr ;	5:4:89:104	6054856	0	True				
ANR	6054860	IdentifierDecl	nodenr		6054856	0					
ANR	6054861	IdentifierDeclType	uint16_t		6054856	0					
ANR	6054862	Identifier	nodenr		6054856	1					
ANR	6054863	IdentifierDeclStatement	uint16List * cpus = NULL ;	7:4:111:134	6054856	1	True				
ANR	6054864	IdentifierDecl	* cpus = NULL		6054856	0					
ANR	6054865	IdentifierDeclType	uint16List *		6054856	0					
ANR	6054866	Identifier	cpus		6054856	1					
ANR	6054867	AssignmentExpression	* cpus = NULL		6054856	2		=			
ANR	6054868	Identifier	NULL		6054856	0					
ANR	6054869	Identifier	NULL		6054856	1					
ANR	6054870	IfStatement	if ( node -> has_nodeid )		6054856	2					
ANR	6054871	Condition	node -> has_nodeid	11:8:147:162	6054856	0	True				
ANR	6054872	PtrMemberAccess	node -> has_nodeid		6054856	0					
ANR	6054873	Identifier	node		6054856	0					
ANR	6054874	Identifier	has_nodeid		6054856	1					
ANR	6054875	CompoundStatement		9:26:82:82	6054856	1					
ANR	6054876	ExpressionStatement	nodenr = node -> nodeid	13:8:176:197	6054856	0	True				
ANR	6054877	AssignmentExpression	nodenr = node -> nodeid		6054856	0		=			
ANR	6054878	Identifier	nodenr		6054856	0					
ANR	6054879	PtrMemberAccess	node -> nodeid		6054856	1					
ANR	6054880	Identifier	node		6054856	0					
ANR	6054881	Identifier	nodeid		6054856	1					
ANR	6054882	ElseStatement	else		6054856	0					
ANR	6054883	CompoundStatement		13:11:128:128	6054856	0					
ANR	6054884	ExpressionStatement	nodenr = nb_numa_nodes	17:8:222:244	6054856	0	True				
ANR	6054885	AssignmentExpression	nodenr = nb_numa_nodes		6054856	0		=			
ANR	6054886	Identifier	nodenr		6054856	0					
ANR	6054887	Identifier	nb_numa_nodes		6054856	1					
ANR	6054888	IfStatement	if ( nodenr >= MAX_NODES )		6054856	3					
ANR	6054889	Condition	nodenr >= MAX_NODES	23:8:264:282	6054856	0	True				
ANR	6054890	RelationalExpression	nodenr >= MAX_NODES		6054856	0		>=			
ANR	6054891	Identifier	nodenr		6054856	0					
ANR	6054892	Identifier	MAX_NODES		6054856	1					
ANR	6054893	CompoundStatement		21:29:202:202	6054856	1					
ANR	6054894	Statement	error_setg	25:8:296:305	6054856	0	True				
ANR	6054895	Statement	(	25:18:306:306	6054856	1	True				
ANR	6054896	Statement	errp	25:19:307:310	6054856	2	True				
ANR	6054897	Statement	","	25:23:311:311	6054856	3	True				
ANR	6054898	Statement	"""Max number of NUMA nodes reached: %"""	25:25:313:349	6054856	4	True				
ANR	6054899	Statement	PRIu16	27:19:371:376	6054856	5	True				
ANR	6054900	Statement	""""""	27:26:378:379	6054856	6	True				
ANR	6054901	Statement	","	27:28:380:380	6054856	7	True				
ANR	6054902	Statement	nodenr	27:30:382:387	6054856	8	True				
ANR	6054903	Statement	)	27:36:388:388	6054856	9	True				
ANR	6054904	ExpressionStatement		27:37:389:389	6054856	10	True				
ANR	6054905	ReturnStatement	return ;	29:8:400:406	6054856	11	True				
ANR	6054906	IfStatement	if ( numa_info [ nodenr ] . present )		6054856	4					
ANR	6054907	Condition	numa_info [ nodenr ] . present	35:8:426:450	6054856	0	True				
ANR	6054908	MemberAccess	numa_info [ nodenr ] . present		6054856	0					
ANR	6054909	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6054910	Identifier	numa_info		6054856	0					
ANR	6054911	Identifier	nodenr		6054856	1					
ANR	6054912	Identifier	present		6054856	1					
ANR	6054913	CompoundStatement		33:35:370:370	6054856	1					
ANR	6054914	Statement	error_setg	37:8:464:473	6054856	0	True				
ANR	6054915	Statement	(	37:18:474:474	6054856	1	True				
ANR	6054916	Statement	errp	37:19:475:478	6054856	2	True				
ANR	6054917	Statement	","	37:23:479:479	6054856	3	True				
ANR	6054918	Statement	"""Duplicate NUMA nodeid: %"""	37:25:481:506	6054856	4	True				
ANR	6054919	Statement	PRIu16	37:52:508:513	6054856	5	True				
ANR	6054920	Statement	","	37:58:514:514	6054856	6	True				
ANR	6054921	Statement	nodenr	37:60:516:521	6054856	7	True				
ANR	6054922	Statement	)	37:66:522:522	6054856	8	True				
ANR	6054923	ExpressionStatement		37:67:523:523	6054856	9	True				
ANR	6054924	ReturnStatement	return ;	39:8:534:540	6054856	10	True				
ANR	6054925	ForStatement	for ( cpus = node -> cpus ; cpus ; cpus = cpus -> next )		6054856	5					
ANR	6054926	ForInit	cpus = node -> cpus ;	45:9:561:578	6054856	0	True				
ANR	6054927	AssignmentExpression	cpus = node -> cpus		6054856	0		=			
ANR	6054928	Identifier	cpus		6054856	0					
ANR	6054929	PtrMemberAccess	node -> cpus		6054856	1					
ANR	6054930	Identifier	node		6054856	0					
ANR	6054931	Identifier	cpus		6054856	1					
ANR	6054932	Condition	cpus	45:28:580:583	6054856	1	True				
ANR	6054933	Identifier	cpus		6054856	0					
ANR	6054934	AssignmentExpression	cpus = cpus -> next	45:34:586:602	6054856	2	True	=			
ANR	6054935	Identifier	cpus		6054856	0					
ANR	6054936	PtrMemberAccess	cpus -> next		6054856	1					
ANR	6054937	Identifier	cpus		6054856	0					
ANR	6054938	Identifier	next		6054856	1					
ANR	6054939	CompoundStatement		43:53:522:522	6054856	3					
ANR	6054940	IfStatement	if ( cpus -> value > MAX_CPUMASK_BITS )		6054856	0					
ANR	6054941	Condition	cpus -> value > MAX_CPUMASK_BITS	47:12:620:649	6054856	0	True				
ANR	6054942	RelationalExpression	cpus -> value > MAX_CPUMASK_BITS		6054856	0		>			
ANR	6054943	PtrMemberAccess	cpus -> value		6054856	0					
ANR	6054944	Identifier	cpus		6054856	0					
ANR	6054945	Identifier	value		6054856	1					
ANR	6054946	Identifier	MAX_CPUMASK_BITS		6054856	1					
ANR	6054947	CompoundStatement		45:44:569:569	6054856	1					
ANR	6054948	Statement	error_setg	49:12:667:676	6054856	0	True				
ANR	6054949	Statement	(	49:22:677:677	6054856	1	True				
ANR	6054950	Statement	errp	49:23:678:681	6054856	2	True				
ANR	6054951	Statement	","	49:27:682:682	6054856	3	True				
ANR	6054952	Statement	"""CPU number %"""	49:29:684:697	6054856	4	True				
ANR	6054953	Statement	PRIu16	49:44:699:704	6054856	5	True				
ANR	6054954	Statement	""" is bigger than %d"""	49:51:706:725	6054856	6	True				
ANR	6054955	Statement	","	49:71:726:726	6054856	7	True				
ANR	6054956	Statement	cpus	51:23:752:755	6054856	8	True				
ANR	6054957	Statement	->	51:27:756:757	6054856	9	True				
ANR	6054958	Statement	value	51:29:758:762	6054856	10	True				
ANR	6054959	Statement	","	51:34:763:763	6054856	11	True				
ANR	6054960	Statement	MAX_CPUMASK_BITS	51:36:765:780	6054856	12	True				
ANR	6054961	Statement	)	51:52:781:781	6054856	13	True				
ANR	6054962	ExpressionStatement		51:53:782:782	6054856	14	True				
ANR	6054963	ReturnStatement	return ;	53:12:797:803	6054856	15	True				
ANR	6054964	ExpressionStatement	"bitmap_set ( numa_info [ nodenr ] . node_cpu , cpus -> value , 1 )"	57:8:825:879	6054856	1	True				
ANR	6054965	CallExpression	"bitmap_set ( numa_info [ nodenr ] . node_cpu , cpus -> value , 1 )"		6054856	0					
ANR	6054966	Callee	bitmap_set		6054856	0					
ANR	6054967	Identifier	bitmap_set		6054856	0					
ANR	6054968	ArgumentList	numa_info [ nodenr ] . node_cpu		6054856	1					
ANR	6054969	Argument	numa_info [ nodenr ] . node_cpu		6054856	0					
ANR	6054970	MemberAccess	numa_info [ nodenr ] . node_cpu		6054856	0					
ANR	6054971	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6054972	Identifier	numa_info		6054856	0					
ANR	6054973	Identifier	nodenr		6054856	1					
ANR	6054974	Identifier	node_cpu		6054856	1					
ANR	6054975	Argument	cpus -> value		6054856	1					
ANR	6054976	PtrMemberAccess	cpus -> value		6054856	0					
ANR	6054977	Identifier	cpus		6054856	0					
ANR	6054978	Identifier	value		6054856	1					
ANR	6054979	Argument	1		6054856	2					
ANR	6054980	PrimaryExpression	1		6054856	0					
ANR	6054981	IfStatement	if ( node -> has_mem && node -> has_memdev )		6054856	6					
ANR	6054982	Condition	node -> has_mem && node -> has_memdev	63:8:899:931	6054856	0	True				
ANR	6054983	AndExpression	node -> has_mem && node -> has_memdev		6054856	0		&&			
ANR	6054984	PtrMemberAccess	node -> has_mem		6054856	0					
ANR	6054985	Identifier	node		6054856	0					
ANR	6054986	Identifier	has_mem		6054856	1					
ANR	6054987	PtrMemberAccess	node -> has_memdev		6054856	1					
ANR	6054988	Identifier	node		6054856	0					
ANR	6054989	Identifier	has_memdev		6054856	1					
ANR	6054990	CompoundStatement		61:43:851:851	6054856	1					
ANR	6054991	ExpressionStatement	"error_setg ( errp , ""qemu: cannot specify both mem= and memdev="" )"	65:8:945:1007	6054856	0	True				
ANR	6054992	CallExpression	"error_setg ( errp , ""qemu: cannot specify both mem= and memdev="" )"		6054856	0					
ANR	6054993	Callee	error_setg		6054856	0					
ANR	6054994	Identifier	error_setg		6054856	0					
ANR	6054995	ArgumentList	errp		6054856	1					
ANR	6054996	Argument	errp		6054856	0					
ANR	6054997	Identifier	errp		6054856	0					
ANR	6054998	Argument	"""qemu: cannot specify both mem= and memdev="""		6054856	1					
ANR	6054999	PrimaryExpression	"""qemu: cannot specify both mem= and memdev="""		6054856	0					
ANR	6055000	ReturnStatement	return ;	67:8:1018:1024	6054856	1	True				
ANR	6055001	IfStatement	if ( have_memdevs == - 1 )		6054856	7					
ANR	6055002	Condition	have_memdevs == - 1	73:8:1044:1061	6054856	0	True				
ANR	6055003	EqualityExpression	have_memdevs == - 1		6054856	0		==			
ANR	6055004	Identifier	have_memdevs		6054856	0					
ANR	6055005	UnaryOperationExpression	- 1		6054856	1					
ANR	6055006	UnaryOperator	-		6054856	0					
ANR	6055007	PrimaryExpression	1		6054856	1					
ANR	6055008	CompoundStatement		71:28:981:981	6054856	1					
ANR	6055009	ExpressionStatement	have_memdevs = node -> has_memdev	75:8:1075:1106	6054856	0	True				
ANR	6055010	AssignmentExpression	have_memdevs = node -> has_memdev		6054856	0		=			
ANR	6055011	Identifier	have_memdevs		6054856	0					
ANR	6055012	PtrMemberAccess	node -> has_memdev		6054856	1					
ANR	6055013	Identifier	node		6054856	0					
ANR	6055014	Identifier	has_memdev		6054856	1					
ANR	6055015	IfStatement	if ( node -> has_memdev != have_memdevs )		6054856	8					
ANR	6055016	Condition	node -> has_memdev != have_memdevs	79:8:1124:1155	6054856	0	True				
ANR	6055017	EqualityExpression	node -> has_memdev != have_memdevs		6054856	0		!=			
ANR	6055018	PtrMemberAccess	node -> has_memdev		6054856	0					
ANR	6055019	Identifier	node		6054856	0					
ANR	6055020	Identifier	has_memdev		6054856	1					
ANR	6055021	Identifier	have_memdevs		6054856	1					
ANR	6055022	CompoundStatement		77:42:1075:1075	6054856	1					
ANR	6055023	Statement	error_setg	81:8:1169:1178	6054856	0	True				
ANR	6055024	Statement	(	81:18:1179:1179	6054856	1	True				
ANR	6055025	Statement	errp	81:19:1180:1183	6054856	2	True				
ANR	6055026	Statement	","	81:23:1184:1184	6054856	3	True				
ANR	6055027	Statement	"""qemu: memdev option must be specified for either """	81:25:1186:1236	6054856	4	True				
ANR	6055028	Statement	"""all or no nodes"""	83:19:1258:1274	6054856	5	True				
ANR	6055029	Statement	)	83:36:1275:1275	6054856	6	True				
ANR	6055030	ExpressionStatement		83:37:1276:1276	6054856	7	True				
ANR	6055031	ReturnStatement	return ;	85:8:1287:1293	6054856	8	True				
ANR	6055032	IfStatement	if ( node -> has_mem )		6054856	9					
ANR	6055033	Condition	node -> has_mem	91:8:1313:1325	6054856	0	True				
ANR	6055034	PtrMemberAccess	node -> has_mem		6054856	0					
ANR	6055035	Identifier	node		6054856	0					
ANR	6055036	Identifier	has_mem		6054856	1					
ANR	6055037	CompoundStatement		93:8:1296:1343	6054856	1					
ANR	6055038	IdentifierDeclStatement	uint64_t mem_size = node -> mem ;	93:8:1339:1368	6054856	0	True				
ANR	6055039	IdentifierDecl	mem_size = node -> mem		6054856	0					
ANR	6055040	IdentifierDeclType	uint64_t		6054856	0					
ANR	6055041	Identifier	mem_size		6054856	1					
ANR	6055042	AssignmentExpression	mem_size = node -> mem		6054856	2		=			
ANR	6055043	Identifier	mem_size		6054856	0					
ANR	6055044	PtrMemberAccess	node -> mem		6054856	1					
ANR	6055045	Identifier	node		6054856	0					
ANR	6055046	Identifier	mem		6054856	1					
ANR	6055047	IdentifierDeclStatement	"const char * mem_str = qemu_opt_get ( opts , ""mem"" ) ;"	95:8:1379:1426	6054856	1	True				
ANR	6055048	IdentifierDecl	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6054856	0					
ANR	6055049	IdentifierDeclType	const char *		6054856	0					
ANR	6055050	Identifier	mem_str		6054856	1					
ANR	6055051	AssignmentExpression	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6054856	2		=			
ANR	6055052	Identifier	mem_str		6054856	0					
ANR	6055053	CallExpression	"qemu_opt_get ( opts , ""mem"" )"		6054856	1					
ANR	6055054	Callee	qemu_opt_get		6054856	0					
ANR	6055055	Identifier	qemu_opt_get		6054856	0					
ANR	6055056	ArgumentList	opts		6054856	1					
ANR	6055057	Argument	opts		6054856	0					
ANR	6055058	Identifier	opts		6054856	0					
ANR	6055059	Argument	"""mem"""		6054856	1					
ANR	6055060	PrimaryExpression	"""mem"""		6054856	0					
ANR	6055061	IfStatement	if ( g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] ) )		6054856	2					
ANR	6055062	Condition	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )	99:12:1489:1533	6054856	0	True				
ANR	6055063	CallExpression	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )		6054856	0					
ANR	6055064	Callee	g_ascii_isdigit		6054856	0					
ANR	6055065	Identifier	g_ascii_isdigit		6054856	0					
ANR	6055066	ArgumentList	mem_str [ strlen ( mem_str ) - 1 ]		6054856	1					
ANR	6055067	Argument	mem_str [ strlen ( mem_str ) - 1 ]		6054856	0					
ANR	6055068	ArrayIndexing	mem_str [ strlen ( mem_str ) - 1 ]		6054856	0					
ANR	6055069	Identifier	mem_str		6054856	0					
ANR	6055070	AdditiveExpression	strlen ( mem_str ) - 1		6054856	1		-			
ANR	6055071	CallExpression	strlen ( mem_str )		6054856	0					
ANR	6055072	Callee	strlen		6054856	0					
ANR	6055073	Identifier	strlen		6054856	0					
ANR	6055074	ArgumentList	mem_str		6054856	1					
ANR	6055075	Argument	mem_str		6054856	0					
ANR	6055076	Identifier	mem_str		6054856	0					
ANR	6055077	PrimaryExpression	1		6054856	1					
ANR	6055078	CompoundStatement		97:59:1453:1453	6054856	1					
ANR	6055079	ExpressionStatement	mem_size <<= 20	101:12:1551:1566	6054856	0	True				
ANR	6055080	AssignmentExpression	mem_size <<= 20		6054856	0		<<=			
ANR	6055081	Identifier	mem_size		6054856	0					
ANR	6055082	PrimaryExpression	20		6054856	1					
ANR	6055083	ExpressionStatement	numa_info [ nodenr ] . node_mem = mem_size	105:8:1588:1625	6054856	3	True				
ANR	6055084	AssignmentExpression	numa_info [ nodenr ] . node_mem = mem_size		6054856	0		=			
ANR	6055085	MemberAccess	numa_info [ nodenr ] . node_mem		6054856	0					
ANR	6055086	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6055087	Identifier	numa_info		6054856	0					
ANR	6055088	Identifier	nodenr		6054856	1					
ANR	6055089	Identifier	node_mem		6054856	1					
ANR	6055090	Identifier	mem_size		6054856	1					
ANR	6055091	IfStatement	if ( node -> has_memdev )		6054856	10					
ANR	6055092	Condition	node -> has_memdev	109:8:1643:1658	6054856	0	True				
ANR	6055093	PtrMemberAccess	node -> has_memdev		6054856	0					
ANR	6055094	Identifier	node		6054856	0					
ANR	6055095	Identifier	has_memdev		6054856	1					
ANR	6055096	CompoundStatement		109:8:1589:1598	6054856	1					
ANR	6055097	IdentifierDeclStatement	Object * o ;	111:8:1672:1681	6054856	0	True				
ANR	6055098	IdentifierDecl	* o		6054856	0					
ANR	6055099	IdentifierDeclType	Object *		6054856	0					
ANR	6055100	Identifier	o		6054856	1					
ANR	6055101	ExpressionStatement	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"	113:8:1692:1761	6054856	1	True				
ANR	6055102	AssignmentExpression	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6054856	0		=			
ANR	6055103	Identifier	o		6054856	0					
ANR	6055104	CallExpression	"object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6054856	1					
ANR	6055105	Callee	object_resolve_path_type		6054856	0					
ANR	6055106	Identifier	object_resolve_path_type		6054856	0					
ANR	6055107	ArgumentList	node -> memdev		6054856	1					
ANR	6055108	Argument	node -> memdev		6054856	0					
ANR	6055109	PtrMemberAccess	node -> memdev		6054856	0					
ANR	6055110	Identifier	node		6054856	0					
ANR	6055111	Identifier	memdev		6054856	1					
ANR	6055112	Argument	TYPE_MEMORY_BACKEND		6054856	1					
ANR	6055113	Identifier	TYPE_MEMORY_BACKEND		6054856	0					
ANR	6055114	Argument	NULL		6054856	2					
ANR	6055115	Identifier	NULL		6054856	0					
ANR	6055116	IfStatement	if ( ! o )		6054856	2					
ANR	6055117	Condition	! o	115:12:1776:1777	6054856	0	True				
ANR	6055118	UnaryOperationExpression	! o		6054856	0					
ANR	6055119	UnaryOperator	!		6054856	0					
ANR	6055120	Identifier	o		6054856	1					
ANR	6055121	CompoundStatement		113:16:1697:1697	6054856	1					
ANR	6055122	ExpressionStatement	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"	117:12:1795:1851	6054856	0	True				
ANR	6055123	CallExpression	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"		6054856	0					
ANR	6055124	Callee	error_setg		6054856	0					
ANR	6055125	Identifier	error_setg		6054856	0					
ANR	6055126	ArgumentList	errp		6054856	1					
ANR	6055127	Argument	errp		6054856	0					
ANR	6055128	Identifier	errp		6054856	0					
ANR	6055129	Argument	"""memdev=%s is ambiguous"""		6054856	1					
ANR	6055130	PrimaryExpression	"""memdev=%s is ambiguous"""		6054856	0					
ANR	6055131	Argument	node -> memdev		6054856	2					
ANR	6055132	PtrMemberAccess	node -> memdev		6054856	0					
ANR	6055133	Identifier	node		6054856	0					
ANR	6055134	Identifier	memdev		6054856	1					
ANR	6055135	ReturnStatement	return ;	119:12:1866:1872	6054856	1	True				
ANR	6055136	ExpressionStatement	object_ref ( o )	125:8:1896:1909	6054856	3	True				
ANR	6055137	CallExpression	object_ref ( o )		6054856	0					
ANR	6055138	Callee	object_ref		6054856	0					
ANR	6055139	Identifier	object_ref		6054856	0					
ANR	6055140	ArgumentList	o		6054856	1					
ANR	6055141	Argument	o		6054856	0					
ANR	6055142	Identifier	o		6054856	0					
ANR	6055143	ExpressionStatement	"numa_info [ nodenr ] . node_mem = object_property_get_int ( o , ""size"" , NULL )"	127:8:1920:1989	6054856	4	True				
ANR	6055144	AssignmentExpression	"numa_info [ nodenr ] . node_mem = object_property_get_int ( o , ""size"" , NULL )"		6054856	0		=			
ANR	6055145	MemberAccess	numa_info [ nodenr ] . node_mem		6054856	0					
ANR	6055146	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6055147	Identifier	numa_info		6054856	0					
ANR	6055148	Identifier	nodenr		6054856	1					
ANR	6055149	Identifier	node_mem		6054856	1					
ANR	6055150	CallExpression	"object_property_get_int ( o , ""size"" , NULL )"		6054856	1					
ANR	6055151	Callee	object_property_get_int		6054856	0					
ANR	6055152	Identifier	object_property_get_int		6054856	0					
ANR	6055153	ArgumentList	o		6054856	1					
ANR	6055154	Argument	o		6054856	0					
ANR	6055155	Identifier	o		6054856	0					
ANR	6055156	Argument	"""size"""		6054856	1					
ANR	6055157	PrimaryExpression	"""size"""		6054856	0					
ANR	6055158	Argument	NULL		6054856	2					
ANR	6055159	Identifier	NULL		6054856	0					
ANR	6055160	ExpressionStatement	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )	129:8:2000:2049	6054856	5	True				
ANR	6055161	AssignmentExpression	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )		6054856	0		=			
ANR	6055162	MemberAccess	numa_info [ nodenr ] . node_memdev		6054856	0					
ANR	6055163	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6055164	Identifier	numa_info		6054856	0					
ANR	6055165	Identifier	nodenr		6054856	1					
ANR	6055166	Identifier	node_memdev		6054856	1					
ANR	6055167	CallExpression	MEMORY_BACKEND ( o )		6054856	1					
ANR	6055168	Callee	MEMORY_BACKEND		6054856	0					
ANR	6055169	Identifier	MEMORY_BACKEND		6054856	0					
ANR	6055170	ArgumentList	o		6054856	1					
ANR	6055171	Argument	o		6054856	0					
ANR	6055172	Identifier	o		6054856	0					
ANR	6055173	ExpressionStatement	numa_info [ nodenr ] . present = true	133:4:2063:2095	6054856	11	True				
ANR	6055174	AssignmentExpression	numa_info [ nodenr ] . present = true		6054856	0		=			
ANR	6055175	MemberAccess	numa_info [ nodenr ] . present		6054856	0					
ANR	6055176	ArrayIndexing	numa_info [ nodenr ]		6054856	0					
ANR	6055177	Identifier	numa_info		6054856	0					
ANR	6055178	Identifier	nodenr		6054856	1					
ANR	6055179	Identifier	present		6054856	1					
ANR	6055180	Identifier	true		6054856	1					
ANR	6055181	ExpressionStatement	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"	135:4:2102:2152	6054856	12	True				
ANR	6055182	AssignmentExpression	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"		6054856	0		=			
ANR	6055183	Identifier	max_numa_nodeid		6054856	0					
ANR	6055184	CallExpression	"MAX ( max_numa_nodeid , nodenr + 1 )"		6054856	1					
ANR	6055185	Callee	MAX		6054856	0					
ANR	6055186	Identifier	MAX		6054856	0					
ANR	6055187	ArgumentList	max_numa_nodeid		6054856	1					
ANR	6055188	Argument	max_numa_nodeid		6054856	0					
ANR	6055189	Identifier	max_numa_nodeid		6054856	0					
ANR	6055190	Argument	nodenr + 1		6054856	1					
ANR	6055191	AdditiveExpression	nodenr + 1		6054856	0		+			
ANR	6055192	Identifier	nodenr		6054856	0					
ANR	6055193	PrimaryExpression	1		6054856	1					
ANR	6055194	ReturnType	static void		6054856	1					
ANR	6055195	Identifier	numa_node_parse		6054856	2					
ANR	6055196	ParameterList	"NumaNodeOptions * node , QemuOpts * opts , Error * * errp"		6054856	3					
ANR	6055197	Parameter	NumaNodeOptions * node	1:28:28:48	6054856	0	True				
ANR	6055198	ParameterType	NumaNodeOptions *		6054856	0					
ANR	6055199	Identifier	node		6054856	1					
ANR	6055200	Parameter	QemuOpts * opts	1:51:51:64	6054856	1	True				
ANR	6055201	ParameterType	QemuOpts *		6054856	0					
ANR	6055202	Identifier	opts		6054856	1					
ANR	6055203	Parameter	Error * * errp	1:67:67:78	6054856	2	True				
ANR	6055204	ParameterType	Error * *		6054856	0					
ANR	6055205	Identifier	errp		6054856	1					
ANR	6055206	CFGEntryNode	ENTRY		6054856		True				
ANR	6055207	CFGExitNode	EXIT		6054856		True				
ANR	6055208	Symbol	errp		6054856						
ANR	6055209	Symbol	nb_numa_nodes		6054856						
ANR	6055210	Symbol	* nodenr		6054856						
ANR	6055211	Symbol	MAX		6054856						
ANR	6055212	Symbol	nodenr		6054856						
ANR	6055213	Symbol	qemu_opt_get		6054856						
ANR	6055214	Symbol	numa_info [ nodenr ] . node_mem		6054856						
ANR	6055215	Symbol	node -> has_nodeid		6054856						
ANR	6055216	Symbol	object_property_get_int		6054856						
ANR	6055217	Symbol	mem_str		6054856						
ANR	6055218	Symbol	MAX_CPUMASK_BITS		6054856						
ANR	6055219	Symbol	node -> has_memdev		6054856						
ANR	6055220	Symbol	mem_size		6054856						
ANR	6055221	Symbol	node -> nodeid		6054856						
ANR	6055222	Symbol	strlen		6054856						
ANR	6055223	Symbol	opts		6054856						
ANR	6055224	Symbol	node -> memdev		6054856						
ANR	6055225	Symbol	numa_info		6054856						
ANR	6055226	Symbol	* node		6054856						
ANR	6055227	Symbol	* cpus		6054856						
ANR	6055228	Symbol	cpus -> next		6054856						
ANR	6055229	Symbol	object_resolve_path_type		6054856						
ANR	6055230	Symbol	node -> has_mem		6054856						
ANR	6055231	Symbol	* numa_info		6054856						
ANR	6055232	Symbol	NULL		6054856						
ANR	6055233	Symbol	cpus -> value		6054856						
ANR	6055234	Symbol	MAX_NODES		6054856						
ANR	6055235	Symbol	cpus		6054856						
ANR	6055236	Symbol	g_ascii_isdigit		6054856						
ANR	6055237	Symbol	numa_info [ nodenr ] . present		6054856						
ANR	6055238	Symbol	max_numa_nodeid		6054856						
ANR	6055239	Symbol	o		6054856						
ANR	6055240	Symbol	TYPE_MEMORY_BACKEND		6054856						
ANR	6055241	Symbol	have_memdevs		6054856						
ANR	6055242	Symbol	node		6054856						
ANR	6055243	Symbol	numa_info [ nodenr ] . node_memdev		6054856						
ANR	6055244	Symbol	numa_info [ nodenr ] . node_cpu		6054856						
ANR	6055245	Symbol	* strlen		6054856						
ANR	6055246	Symbol	MEMORY_BACKEND		6054856						
ANR	6055247	Symbol	node -> cpus		6054856						
ANR	6055248	Symbol	true		6054856						
ANR	6055249	Symbol	* mem_str		6054856						
ANR	6055250	Symbol	node -> mem		6054856						
