command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8312828	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tcx_blit_writel_0.c								
ANR	8312829	Function	tcx_blit_writel	1:0:0:969							
ANR	8312830	FunctionDef	"tcx_blit_writel (void * opaque , hwaddr addr , uint64_t val , unsigned size)"		8312829	0					
ANR	8312831	CompoundStatement		5:0:114:969	8312829	0					
ANR	8312832	IdentifierDeclStatement	TCXState * s = opaque ;	7:4:121:141	8312829	0	True				
ANR	8312833	IdentifierDecl	* s = opaque		8312829	0					
ANR	8312834	IdentifierDeclType	TCXState *		8312829	0					
ANR	8312835	Identifier	s		8312829	1					
ANR	8312836	AssignmentExpression	* s = opaque		8312829	2		=			
ANR	8312837	Identifier	opaque		8312829	0					
ANR	8312838	Identifier	opaque		8312829	1					
ANR	8312839	IdentifierDeclStatement	"uint32_t adsr , len ;"	9:4:148:166	8312829	1	True				
ANR	8312840	IdentifierDecl	adsr		8312829	0					
ANR	8312841	IdentifierDeclType	uint32_t		8312829	0					
ANR	8312842	Identifier	adsr		8312829	1					
ANR	8312843	IdentifierDecl	len		8312829	1					
ANR	8312844	IdentifierDeclType	uint32_t		8312829	0					
ANR	8312845	Identifier	len		8312829	1					
ANR	8312846	IdentifierDeclStatement	int i ;	11:4:173:178	8312829	2	True				
ANR	8312847	IdentifierDecl	i		8312829	0					
ANR	8312848	IdentifierDeclType	int		8312829	0					
ANR	8312849	Identifier	i		8312829	1					
ANR	8312850	IfStatement	if ( ! ( addr & 4 ) )		8312829	3					
ANR	8312851	Condition	! ( addr & 4 )	15:8:191:201	8312829	0	True				
ANR	8312852	UnaryOperationExpression	! ( addr & 4 )		8312829	0					
ANR	8312853	UnaryOperator	!		8312829	0					
ANR	8312854	BitAndExpression	addr & 4		8312829	1		&			
ANR	8312855	Identifier	addr		8312829	0					
ANR	8312856	PrimaryExpression	4		8312829	1					
ANR	8312857	CompoundStatement		11:21:89:89	8312829	1					
ANR	8312858	ExpressionStatement	s -> tmpblit = val	17:8:215:231	8312829	0	True				
ANR	8312859	AssignmentExpression	s -> tmpblit = val		8312829	0		=			
ANR	8312860	PtrMemberAccess	s -> tmpblit		8312829	0					
ANR	8312861	Identifier	s		8312829	0					
ANR	8312862	Identifier	tmpblit		8312829	1					
ANR	8312863	Identifier	val		8312829	1					
ANR	8312864	ElseStatement	else		8312829	0					
ANR	8312865	CompoundStatement		15:11:130:130	8312829	0					
ANR	8312866	ExpressionStatement	addr = ( addr >> 3 ) & 0xfffff	21:8:256:284	8312829	0	True				
ANR	8312867	AssignmentExpression	addr = ( addr >> 3 ) & 0xfffff		8312829	0		=			
ANR	8312868	Identifier	addr		8312829	0					
ANR	8312869	BitAndExpression	( addr >> 3 ) & 0xfffff		8312829	1		&			
ANR	8312870	ShiftExpression	addr >> 3		8312829	0		>>			
ANR	8312871	Identifier	addr		8312829	0					
ANR	8312872	PrimaryExpression	3		8312829	1					
ANR	8312873	PrimaryExpression	0xfffff		8312829	1					
ANR	8312874	ExpressionStatement	adsr = val & 0xffffff	23:8:295:316	8312829	1	True				
ANR	8312875	AssignmentExpression	adsr = val & 0xffffff		8312829	0		=			
ANR	8312876	Identifier	adsr		8312829	0					
ANR	8312877	BitAndExpression	val & 0xffffff		8312829	1		&			
ANR	8312878	Identifier	val		8312829	0					
ANR	8312879	PrimaryExpression	0xffffff		8312829	1					
ANR	8312880	ExpressionStatement	len = ( ( val >> 24 ) & 0x1f ) + 1	25:8:327:357	8312829	2	True				
ANR	8312881	AssignmentExpression	len = ( ( val >> 24 ) & 0x1f ) + 1		8312829	0		=			
ANR	8312882	Identifier	len		8312829	0					
ANR	8312883	AdditiveExpression	( ( val >> 24 ) & 0x1f ) + 1		8312829	1		+			
ANR	8312884	BitAndExpression	( val >> 24 ) & 0x1f		8312829	0		&			
ANR	8312885	ShiftExpression	val >> 24		8312829	0		>>			
ANR	8312886	Identifier	val		8312829	0					
ANR	8312887	PrimaryExpression	24		8312829	1					
ANR	8312888	PrimaryExpression	0x1f		8312829	1					
ANR	8312889	PrimaryExpression	1		8312829	1					
ANR	8312890	IfStatement	if ( adsr == 0xffffff )		8312829	3					
ANR	8312891	Condition	adsr == 0xffffff	27:12:372:387	8312829	0	True				
ANR	8312892	EqualityExpression	adsr == 0xffffff		8312829	0		==			
ANR	8312893	Identifier	adsr		8312829	0					
ANR	8312894	PrimaryExpression	0xffffff		8312829	1					
ANR	8312895	CompoundStatement		23:30:275:275	8312829	1					
ANR	8312896	ExpressionStatement	"memset ( & s -> vram [ addr ] , s -> tmpblit , len )"	29:12:405:444	8312829	0	True				
ANR	8312897	CallExpression	"memset ( & s -> vram [ addr ] , s -> tmpblit , len )"		8312829	0					
ANR	8312898	Callee	memset		8312829	0					
ANR	8312899	Identifier	memset		8312829	0					
ANR	8312900	ArgumentList	& s -> vram [ addr ]		8312829	1					
ANR	8312901	Argument	& s -> vram [ addr ]		8312829	0					
ANR	8312902	UnaryOperationExpression	& s -> vram [ addr ]		8312829	0					
ANR	8312903	UnaryOperator	&		8312829	0					
ANR	8312904	ArrayIndexing	s -> vram [ addr ]		8312829	1					
ANR	8312905	PtrMemberAccess	s -> vram		8312829	0					
ANR	8312906	Identifier	s		8312829	0					
ANR	8312907	Identifier	vram		8312829	1					
ANR	8312908	Identifier	addr		8312829	1					
ANR	8312909	Argument	s -> tmpblit		8312829	1					
ANR	8312910	PtrMemberAccess	s -> tmpblit		8312829	0					
ANR	8312911	Identifier	s		8312829	0					
ANR	8312912	Identifier	tmpblit		8312829	1					
ANR	8312913	Argument	len		8312829	2					
ANR	8312914	Identifier	len		8312829	0					
ANR	8312915	IfStatement	if ( s -> depth == 24 )		8312829	1					
ANR	8312916	Condition	s -> depth == 24	31:16:463:476	8312829	0	True				
ANR	8312917	EqualityExpression	s -> depth == 24		8312829	0		==			
ANR	8312918	PtrMemberAccess	s -> depth		8312829	0					
ANR	8312919	Identifier	s		8312829	0					
ANR	8312920	Identifier	depth		8312829	1					
ANR	8312921	PrimaryExpression	24		8312829	1					
ANR	8312922	CompoundStatement		27:32:364:364	8312829	1					
ANR	8312923	ExpressionStatement	val = s -> tmpblit & 0xffffff	33:16:498:525	8312829	0	True				
ANR	8312924	AssignmentExpression	val = s -> tmpblit & 0xffffff		8312829	0		=			
ANR	8312925	Identifier	val		8312829	0					
ANR	8312926	BitAndExpression	s -> tmpblit & 0xffffff		8312829	1		&			
ANR	8312927	PtrMemberAccess	s -> tmpblit		8312829	0					
ANR	8312928	Identifier	s		8312829	0					
ANR	8312929	Identifier	tmpblit		8312829	1					
ANR	8312930	PrimaryExpression	0xffffff		8312829	1					
ANR	8312931	ExpressionStatement	val = cpu_to_be32 ( val )	35:16:544:566	8312829	1	True				
ANR	8312932	AssignmentExpression	val = cpu_to_be32 ( val )		8312829	0		=			
ANR	8312933	Identifier	val		8312829	0					
ANR	8312934	CallExpression	cpu_to_be32 ( val )		8312829	1					
ANR	8312935	Callee	cpu_to_be32		8312829	0					
ANR	8312936	Identifier	cpu_to_be32		8312829	0					
ANR	8312937	ArgumentList	val		8312829	1					
ANR	8312938	Argument	val		8312829	0					
ANR	8312939	Identifier	val		8312829	0					
ANR	8312940	ForStatement	for ( i = 0 ; i < len ; i ++ )		8312829	2					
ANR	8312941	ForInit	i = 0 ;	37:21:590:595	8312829	0	True				
ANR	8312942	AssignmentExpression	i = 0		8312829	0		=			
ANR	8312943	Identifier	i		8312829	0					
ANR	8312944	PrimaryExpression	0		8312829	1					
ANR	8312945	Condition	i < len	37:28:597:603	8312829	1	True				
ANR	8312946	RelationalExpression	i < len		8312829	0		<			
ANR	8312947	Identifier	i		8312829	0					
ANR	8312948	Identifier	len		8312829	1					
ANR	8312949	PostIncDecOperationExpression	i ++	37:37:606:608	8312829	2	True				
ANR	8312950	Identifier	i		8312829	0					
ANR	8312951	IncDec	++		8312829	1					
ANR	8312952	CompoundStatement		33:42:496:496	8312829	3					
ANR	8312953	ExpressionStatement	s -> vram24 [ addr + i ] = val	39:20:634:659	8312829	0	True				
ANR	8312954	AssignmentExpression	s -> vram24 [ addr + i ] = val		8312829	0		=			
ANR	8312955	ArrayIndexing	s -> vram24 [ addr + i ]		8312829	0					
ANR	8312956	PtrMemberAccess	s -> vram24		8312829	0					
ANR	8312957	Identifier	s		8312829	0					
ANR	8312958	Identifier	vram24		8312829	1					
ANR	8312959	AdditiveExpression	addr + i		8312829	1		+			
ANR	8312960	Identifier	addr		8312829	0					
ANR	8312961	Identifier	i		8312829	1					
ANR	8312962	Identifier	val		8312829	1					
ANR	8312963	ElseStatement	else		8312829	0					
ANR	8312964	CompoundStatement		41:15:596:596	8312829	0					
ANR	8312965	ExpressionStatement	"memcpy ( & s -> vram [ addr ] , & s -> vram [ adsr ] , len )"	47:12:726:769	8312829	0	True				
ANR	8312966	CallExpression	"memcpy ( & s -> vram [ addr ] , & s -> vram [ adsr ] , len )"		8312829	0					
ANR	8312967	Callee	memcpy		8312829	0					
ANR	8312968	Identifier	memcpy		8312829	0					
ANR	8312969	ArgumentList	& s -> vram [ addr ]		8312829	1					
ANR	8312970	Argument	& s -> vram [ addr ]		8312829	0					
ANR	8312971	UnaryOperationExpression	& s -> vram [ addr ]		8312829	0					
ANR	8312972	UnaryOperator	&		8312829	0					
ANR	8312973	ArrayIndexing	s -> vram [ addr ]		8312829	1					
ANR	8312974	PtrMemberAccess	s -> vram		8312829	0					
ANR	8312975	Identifier	s		8312829	0					
ANR	8312976	Identifier	vram		8312829	1					
ANR	8312977	Identifier	addr		8312829	1					
ANR	8312978	Argument	& s -> vram [ adsr ]		8312829	1					
ANR	8312979	UnaryOperationExpression	& s -> vram [ adsr ]		8312829	0					
ANR	8312980	UnaryOperator	&		8312829	0					
ANR	8312981	ArrayIndexing	s -> vram [ adsr ]		8312829	1					
ANR	8312982	PtrMemberAccess	s -> vram		8312829	0					
ANR	8312983	Identifier	s		8312829	0					
ANR	8312984	Identifier	vram		8312829	1					
ANR	8312985	Identifier	adsr		8312829	1					
ANR	8312986	Argument	len		8312829	2					
ANR	8312987	Identifier	len		8312829	0					
ANR	8312988	IfStatement	if ( s -> depth == 24 )		8312829	1					
ANR	8312989	Condition	s -> depth == 24	49:16:788:801	8312829	0	True				
ANR	8312990	EqualityExpression	s -> depth == 24		8312829	0		==			
ANR	8312991	PtrMemberAccess	s -> depth		8312829	0					
ANR	8312992	Identifier	s		8312829	0					
ANR	8312993	Identifier	depth		8312829	1					
ANR	8312994	PrimaryExpression	24		8312829	1					
ANR	8312995	CompoundStatement		45:32:689:689	8312829	1					
ANR	8312996	ExpressionStatement	"memcpy ( & s -> vram24 [ addr ] , & s -> vram24 [ adsr ] , len * 4 )"	51:16:823:874	8312829	0	True				
ANR	8312997	CallExpression	"memcpy ( & s -> vram24 [ addr ] , & s -> vram24 [ adsr ] , len * 4 )"		8312829	0					
ANR	8312998	Callee	memcpy		8312829	0					
ANR	8312999	Identifier	memcpy		8312829	0					
ANR	8313000	ArgumentList	& s -> vram24 [ addr ]		8312829	1					
ANR	8313001	Argument	& s -> vram24 [ addr ]		8312829	0					
ANR	8313002	UnaryOperationExpression	& s -> vram24 [ addr ]		8312829	0					
ANR	8313003	UnaryOperator	&		8312829	0					
ANR	8313004	ArrayIndexing	s -> vram24 [ addr ]		8312829	1					
ANR	8313005	PtrMemberAccess	s -> vram24		8312829	0					
ANR	8313006	Identifier	s		8312829	0					
ANR	8313007	Identifier	vram24		8312829	1					
ANR	8313008	Identifier	addr		8312829	1					
ANR	8313009	Argument	& s -> vram24 [ adsr ]		8312829	1					
ANR	8313010	UnaryOperationExpression	& s -> vram24 [ adsr ]		8312829	0					
ANR	8313011	UnaryOperator	&		8312829	0					
ANR	8313012	ArrayIndexing	s -> vram24 [ adsr ]		8312829	1					
ANR	8313013	PtrMemberAccess	s -> vram24		8312829	0					
ANR	8313014	Identifier	s		8312829	0					
ANR	8313015	Identifier	vram24		8312829	1					
ANR	8313016	Identifier	adsr		8312829	1					
ANR	8313017	Argument	len * 4		8312829	2					
ANR	8313018	MultiplicativeExpression	len * 4		8312829	0		*			
ANR	8313019	Identifier	len		8312829	0					
ANR	8313020	PrimaryExpression	4		8312829	1					
ANR	8313021	ExpressionStatement	"memory_region_set_dirty ( & s -> vram_mem , addr , len )"	57:8:911:959	8312829	4	True				
ANR	8313022	CallExpression	"memory_region_set_dirty ( & s -> vram_mem , addr , len )"		8312829	0					
ANR	8313023	Callee	memory_region_set_dirty		8312829	0					
ANR	8313024	Identifier	memory_region_set_dirty		8312829	0					
ANR	8313025	ArgumentList	& s -> vram_mem		8312829	1					
ANR	8313026	Argument	& s -> vram_mem		8312829	0					
ANR	8313027	UnaryOperationExpression	& s -> vram_mem		8312829	0					
ANR	8313028	UnaryOperator	&		8312829	0					
ANR	8313029	PtrMemberAccess	s -> vram_mem		8312829	1					
ANR	8313030	Identifier	s		8312829	0					
ANR	8313031	Identifier	vram_mem		8312829	1					
ANR	8313032	Argument	addr		8312829	1					
ANR	8313033	Identifier	addr		8312829	0					
ANR	8313034	Argument	len		8312829	2					
ANR	8313035	Identifier	len		8312829	0					
ANR	8313036	ReturnType	static void		8312829	1					
ANR	8313037	Identifier	tcx_blit_writel		8312829	2					
ANR	8313038	ParameterList	"void * opaque , hwaddr addr , uint64_t val , unsigned size"		8312829	3					
ANR	8313039	Parameter	void * opaque	1:28:28:39	8312829	0	True				
ANR	8313040	ParameterType	void *		8312829	0					
ANR	8313041	Identifier	opaque		8312829	1					
ANR	8313042	Parameter	hwaddr addr	1:42:42:52	8312829	1	True				
ANR	8313043	ParameterType	hwaddr		8312829	0					
ANR	8313044	Identifier	addr		8312829	1					
ANR	8313045	Parameter	uint64_t val	3:28:84:95	8312829	2	True				
ANR	8313046	ParameterType	uint64_t		8312829	0					
ANR	8313047	Identifier	val		8312829	1					
ANR	8313048	Parameter	unsigned size	3:42:98:110	8312829	3	True				
ANR	8313049	ParameterType	unsigned		8312829	0					
ANR	8313050	Identifier	size		8312829	1					
ANR	8313051	CFGEntryNode	ENTRY		8312829		True				
ANR	8313052	CFGExitNode	EXIT		8312829		True				
ANR	8313053	Symbol	val		8312829						
ANR	8313054	Symbol	cpu_to_be32		8312829						
ANR	8313055	Symbol	opaque		8312829						
ANR	8313056	Symbol	s -> vram		8312829						
ANR	8313057	Symbol	i		8312829						
ANR	8313058	Symbol	& s -> vram_mem		8312829						
ANR	8313059	Symbol	adsr		8312829						
ANR	8313060	Symbol	s -> depth		8312829						
ANR	8313061	Symbol	s		8312829						
ANR	8313062	Symbol	* s -> vram24		8312829						
ANR	8313063	Symbol	* i		8312829						
ANR	8313064	Symbol	size		8312829						
ANR	8313065	Symbol	len		8312829						
ANR	8313066	Symbol	* * s		8312829						
ANR	8313067	Symbol	s -> tmpblit		8312829						
ANR	8313068	Symbol	* addr		8312829						
ANR	8313069	Symbol	addr		8312829						
ANR	8313070	Symbol	* s		8312829						
ANR	8313071	Symbol	s -> vram24		8312829						
