command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2525074	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dnxhd_decode_header_1.c								
ANR	2525075	Function	dnxhd_decode_header	1:0:0:6434							
ANR	2525076	FunctionDef	"dnxhd_decode_header (DNXHDContext * ctx , AVFrame * frame , const uint8_t * buf , int buf_size , int first_field)"		2525075	0					
ANR	2525077	CompoundStatement		7:0:182:6434	2525075	0					
ANR	2525078	Statement	static	9:4:189:194	2525075	0	True				
ANR	2525079	IdentifierDeclStatement	"const uint8_t header_prefix [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x01 } ;"	9:11:196:263	2525075	1	True				
ANR	2525080	IdentifierDecl	"header_prefix [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x01 }"		2525075	0					
ANR	2525081	IdentifierDeclType	const uint8_t [ ]		2525075	0					
ANR	2525082	Identifier	header_prefix		2525075	1					
ANR	2525083	AssignmentExpression	"header_prefix [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x01 }"		2525075	2		=			
ANR	2525084	Identifier	header_prefix		2525075	0					
ANR	2525085	InitializerList	0x00		2525075	1					
ANR	2525086	PrimaryExpression	0x00		2525075	0					
ANR	2525087	PrimaryExpression	0x00		2525075	1					
ANR	2525088	PrimaryExpression	0x02		2525075	2					
ANR	2525089	PrimaryExpression	0x80		2525075	3					
ANR	2525090	PrimaryExpression	0x01		2525075	4					
ANR	2525091	Statement	static	11:4:270:275	2525075	2	True				
ANR	2525092	IdentifierDeclStatement	"const uint8_t header_prefix444 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x02 } ;"	11:11:277:344	2525075	3	True				
ANR	2525093	IdentifierDecl	"header_prefix444 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x02 }"		2525075	0					
ANR	2525094	IdentifierDeclType	const uint8_t [ ]		2525075	0					
ANR	2525095	Identifier	header_prefix444		2525075	1					
ANR	2525096	AssignmentExpression	"header_prefix444 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x02 }"		2525075	2		=			
ANR	2525097	Identifier	header_prefix444		2525075	0					
ANR	2525098	InitializerList	0x00		2525075	1					
ANR	2525099	PrimaryExpression	0x00		2525075	0					
ANR	2525100	PrimaryExpression	0x00		2525075	1					
ANR	2525101	PrimaryExpression	0x02		2525075	2					
ANR	2525102	PrimaryExpression	0x80		2525075	3					
ANR	2525103	PrimaryExpression	0x02		2525075	4					
ANR	2525104	Statement	static	13:4:351:356	2525075	4	True				
ANR	2525105	IdentifierDeclStatement	"const uint8_t header_prefixhr1 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x03 } ;"	13:11:358:425	2525075	5	True				
ANR	2525106	IdentifierDecl	"header_prefixhr1 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x03 }"		2525075	0					
ANR	2525107	IdentifierDeclType	const uint8_t [ ]		2525075	0					
ANR	2525108	Identifier	header_prefixhr1		2525075	1					
ANR	2525109	AssignmentExpression	"header_prefixhr1 [ ] = { 0x00 , 0x00 , 0x02 , 0x80 , 0x03 }"		2525075	2		=			
ANR	2525110	Identifier	header_prefixhr1		2525075	0					
ANR	2525111	InitializerList	0x00		2525075	1					
ANR	2525112	PrimaryExpression	0x00		2525075	0					
ANR	2525113	PrimaryExpression	0x00		2525075	1					
ANR	2525114	PrimaryExpression	0x02		2525075	2					
ANR	2525115	PrimaryExpression	0x80		2525075	3					
ANR	2525116	PrimaryExpression	0x03		2525075	4					
ANR	2525117	Statement	static	15:4:432:437	2525075	6	True				
ANR	2525118	IdentifierDeclStatement	"const uint8_t header_prefixhr2 [ ] = { 0x00 , 0x00 , 0x03 , 0x8C , 0x03 } ;"	15:11:439:506	2525075	7	True				
ANR	2525119	IdentifierDecl	"header_prefixhr2 [ ] = { 0x00 , 0x00 , 0x03 , 0x8C , 0x03 }"		2525075	0					
ANR	2525120	IdentifierDeclType	const uint8_t [ ]		2525075	0					
ANR	2525121	Identifier	header_prefixhr2		2525075	1					
ANR	2525122	AssignmentExpression	"header_prefixhr2 [ ] = { 0x00 , 0x00 , 0x03 , 0x8C , 0x03 }"		2525075	2		=			
ANR	2525123	Identifier	header_prefixhr2		2525075	0					
ANR	2525124	InitializerList	0x00		2525075	1					
ANR	2525125	PrimaryExpression	0x00		2525075	0					
ANR	2525126	PrimaryExpression	0x00		2525075	1					
ANR	2525127	PrimaryExpression	0x03		2525075	2					
ANR	2525128	PrimaryExpression	0x8C		2525075	3					
ANR	2525129	PrimaryExpression	0x03		2525075	4					
ANR	2525130	IdentifierDeclStatement	"int i , cid , ret ;"	17:4:513:528	2525075	8	True				
ANR	2525131	IdentifierDecl	i		2525075	0					
ANR	2525132	IdentifierDeclType	int		2525075	0					
ANR	2525133	Identifier	i		2525075	1					
ANR	2525134	IdentifierDecl	cid		2525075	1					
ANR	2525135	IdentifierDeclType	int		2525075	0					
ANR	2525136	Identifier	cid		2525075	1					
ANR	2525137	IdentifierDecl	ret		2525075	2					
ANR	2525138	IdentifierDeclType	int		2525075	0					
ANR	2525139	Identifier	ret		2525075	1					
ANR	2525140	IdentifierDeclStatement	"int old_bit_depth = ctx -> bit_depth , bitdepth ;"	19:4:535:579	2525075	9	True				
ANR	2525141	IdentifierDecl	old_bit_depth = ctx -> bit_depth		2525075	0					
ANR	2525142	IdentifierDeclType	int		2525075	0					
ANR	2525143	Identifier	old_bit_depth		2525075	1					
ANR	2525144	AssignmentExpression	old_bit_depth = ctx -> bit_depth		2525075	2		=			
ANR	2525145	Identifier	old_bit_depth		2525075	0					
ANR	2525146	PtrMemberAccess	ctx -> bit_depth		2525075	1					
ANR	2525147	Identifier	ctx		2525075	0					
ANR	2525148	Identifier	bit_depth		2525075	1					
ANR	2525149	IdentifierDecl	bitdepth		2525075	1					
ANR	2525150	IdentifierDeclType	int		2525075	0					
ANR	2525151	Identifier	bitdepth		2525075	1					
ANR	2525152	IdentifierDeclStatement	int old_mb_height = ctx -> mb_height ;	21:4:586:620	2525075	10	True				
ANR	2525153	IdentifierDecl	old_mb_height = ctx -> mb_height		2525075	0					
ANR	2525154	IdentifierDeclType	int		2525075	0					
ANR	2525155	Identifier	old_mb_height		2525075	1					
ANR	2525156	AssignmentExpression	old_mb_height = ctx -> mb_height		2525075	2		=			
ANR	2525157	Identifier	old_mb_height		2525075	0					
ANR	2525158	PtrMemberAccess	ctx -> mb_height		2525075	1					
ANR	2525159	Identifier	ctx		2525075	0					
ANR	2525160	Identifier	mb_height		2525075	1					
ANR	2525161	IfStatement	if ( buf_size < 0x280 )		2525075	11					
ANR	2525162	Condition	buf_size < 0x280	25:8:633:648	2525075	0	True				
ANR	2525163	RelationalExpression	buf_size < 0x280		2525075	0		<			
ANR	2525164	Identifier	buf_size		2525075	0					
ANR	2525165	PrimaryExpression	0x280		2525075	1					
ANR	2525166	CompoundStatement		19:26:468:468	2525075	1					
ANR	2525167	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""buffer too small (%d < 640).\\n"" , buf_size )"	27:8:662:754	2525075	0	True				
ANR	2525168	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""buffer too small (%d < 640).\\n"" , buf_size )"		2525075	0					
ANR	2525169	Callee	av_log		2525075	0					
ANR	2525170	Identifier	av_log		2525075	0					
ANR	2525171	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525172	Argument	ctx -> avctx		2525075	0					
ANR	2525173	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525174	Identifier	ctx		2525075	0					
ANR	2525175	Identifier	avctx		2525075	1					
ANR	2525176	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525177	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2525178	Argument	"""buffer too small (%d < 640).\\n"""		2525075	2					
ANR	2525179	PrimaryExpression	"""buffer too small (%d < 640).\\n"""		2525075	0					
ANR	2525180	Argument	buf_size		2525075	3					
ANR	2525181	Identifier	buf_size		2525075	0					
ANR	2525182	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:765:791	2525075	1	True				
ANR	2525183	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525184	IfStatement	"if ( memcmp ( buf , header_prefix , 5 ) && memcmp ( buf , header_prefix444 , 5 ) && memcmp ( buf , header_prefixhr1 , 5 ) && memcmp ( buf , header_prefixhr2 , 5 ) )"		2525075	12					
ANR	2525185	Condition	"memcmp ( buf , header_prefix , 5 ) && memcmp ( buf , header_prefix444 , 5 ) && memcmp ( buf , header_prefixhr1 , 5 ) && memcmp ( buf , header_prefixhr2 , 5 )"	37:8:811:956	2525075	0	True				
ANR	2525186	AndExpression	"memcmp ( buf , header_prefix , 5 ) && memcmp ( buf , header_prefix444 , 5 ) && memcmp ( buf , header_prefixhr1 , 5 ) && memcmp ( buf , header_prefixhr2 , 5 )"		2525075	0		&&			
ANR	2525187	CallExpression	"memcmp ( buf , header_prefix , 5 )"		2525075	0					
ANR	2525188	Callee	memcmp		2525075	0					
ANR	2525189	Identifier	memcmp		2525075	0					
ANR	2525190	ArgumentList	buf		2525075	1					
ANR	2525191	Argument	buf		2525075	0					
ANR	2525192	Identifier	buf		2525075	0					
ANR	2525193	Argument	header_prefix		2525075	1					
ANR	2525194	Identifier	header_prefix		2525075	0					
ANR	2525195	Argument	5		2525075	2					
ANR	2525196	PrimaryExpression	5		2525075	0					
ANR	2525197	AndExpression	"memcmp ( buf , header_prefix444 , 5 ) && memcmp ( buf , header_prefixhr1 , 5 ) && memcmp ( buf , header_prefixhr2 , 5 )"		2525075	1		&&			
ANR	2525198	CallExpression	"memcmp ( buf , header_prefix444 , 5 )"		2525075	0					
ANR	2525199	Callee	memcmp		2525075	0					
ANR	2525200	Identifier	memcmp		2525075	0					
ANR	2525201	ArgumentList	buf		2525075	1					
ANR	2525202	Argument	buf		2525075	0					
ANR	2525203	Identifier	buf		2525075	0					
ANR	2525204	Argument	header_prefix444		2525075	1					
ANR	2525205	Identifier	header_prefix444		2525075	0					
ANR	2525206	Argument	5		2525075	2					
ANR	2525207	PrimaryExpression	5		2525075	0					
ANR	2525208	AndExpression	"memcmp ( buf , header_prefixhr1 , 5 ) && memcmp ( buf , header_prefixhr2 , 5 )"		2525075	1		&&			
ANR	2525209	CallExpression	"memcmp ( buf , header_prefixhr1 , 5 )"		2525075	0					
ANR	2525210	Callee	memcmp		2525075	0					
ANR	2525211	Identifier	memcmp		2525075	0					
ANR	2525212	ArgumentList	buf		2525075	1					
ANR	2525213	Argument	buf		2525075	0					
ANR	2525214	Identifier	buf		2525075	0					
ANR	2525215	Argument	header_prefixhr1		2525075	1					
ANR	2525216	Identifier	header_prefixhr1		2525075	0					
ANR	2525217	Argument	5		2525075	2					
ANR	2525218	PrimaryExpression	5		2525075	0					
ANR	2525219	CallExpression	"memcmp ( buf , header_prefixhr2 , 5 )"		2525075	1					
ANR	2525220	Callee	memcmp		2525075	0					
ANR	2525221	Identifier	memcmp		2525075	0					
ANR	2525222	ArgumentList	buf		2525075	1					
ANR	2525223	Argument	buf		2525075	0					
ANR	2525224	Identifier	buf		2525075	0					
ANR	2525225	Argument	header_prefixhr2		2525075	1					
ANR	2525226	Identifier	header_prefixhr2		2525075	0					
ANR	2525227	Argument	5		2525075	2					
ANR	2525228	PrimaryExpression	5		2525075	0					
ANR	2525229	CompoundStatement		33:78:776:776	2525075	1					
ANR	2525230	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""unknown header 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\\n"" , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] , buf [ 3 ] , buf [ 4 ] )"	41:8:970:1129	2525075	0	True				
ANR	2525231	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""unknown header 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\\n"" , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] , buf [ 3 ] , buf [ 4 ] )"		2525075	0					
ANR	2525232	Callee	av_log		2525075	0					
ANR	2525233	Identifier	av_log		2525075	0					
ANR	2525234	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525235	Argument	ctx -> avctx		2525075	0					
ANR	2525236	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525237	Identifier	ctx		2525075	0					
ANR	2525238	Identifier	avctx		2525075	1					
ANR	2525239	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525240	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2525241	Argument	"""unknown header 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\\n"""		2525075	2					
ANR	2525242	PrimaryExpression	"""unknown header 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\\n"""		2525075	0					
ANR	2525243	Argument	buf [ 0 ]		2525075	3					
ANR	2525244	ArrayIndexing	buf [ 0 ]		2525075	0					
ANR	2525245	Identifier	buf		2525075	0					
ANR	2525246	PrimaryExpression	0		2525075	1					
ANR	2525247	Argument	buf [ 1 ]		2525075	4					
ANR	2525248	ArrayIndexing	buf [ 1 ]		2525075	0					
ANR	2525249	Identifier	buf		2525075	0					
ANR	2525250	PrimaryExpression	1		2525075	1					
ANR	2525251	Argument	buf [ 2 ]		2525075	5					
ANR	2525252	ArrayIndexing	buf [ 2 ]		2525075	0					
ANR	2525253	Identifier	buf		2525075	0					
ANR	2525254	PrimaryExpression	2		2525075	1					
ANR	2525255	Argument	buf [ 3 ]		2525075	6					
ANR	2525256	ArrayIndexing	buf [ 3 ]		2525075	0					
ANR	2525257	Identifier	buf		2525075	0					
ANR	2525258	PrimaryExpression	3		2525075	1					
ANR	2525259	Argument	buf [ 4 ]		2525075	7					
ANR	2525260	ArrayIndexing	buf [ 4 ]		2525075	0					
ANR	2525261	Identifier	buf		2525075	0					
ANR	2525262	PrimaryExpression	4		2525075	1					
ANR	2525263	ReturnStatement	return AVERROR_INVALIDDATA ;	47:8:1140:1166	2525075	1	True				
ANR	2525264	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525265	IfStatement	if ( buf [ 5 ] & 2 )		2525075	13					
ANR	2525266	Condition	buf [ 5 ] & 2	51:8:1184:1193	2525075	0	True				
ANR	2525267	BitAndExpression	buf [ 5 ] & 2		2525075	0		&			
ANR	2525268	ArrayIndexing	buf [ 5 ]		2525075	0					
ANR	2525269	Identifier	buf		2525075	0					
ANR	2525270	PrimaryExpression	5		2525075	1					
ANR	2525271	PrimaryExpression	2		2525075	1					
ANR	2525272	CompoundStatement		45:20:1013:1013	2525075	1					
ANR	2525273	ExpressionStatement	ctx -> cur_field = buf [ 5 ] & 1	53:8:1224:1251	2525075	0	True				
ANR	2525274	AssignmentExpression	ctx -> cur_field = buf [ 5 ] & 1		2525075	0		=			
ANR	2525275	PtrMemberAccess	ctx -> cur_field		2525075	0					
ANR	2525276	Identifier	ctx		2525075	0					
ANR	2525277	Identifier	cur_field		2525075	1					
ANR	2525278	BitAndExpression	buf [ 5 ] & 1		2525075	1		&			
ANR	2525279	ArrayIndexing	buf [ 5 ]		2525075	0					
ANR	2525280	Identifier	buf		2525075	0					
ANR	2525281	PrimaryExpression	5		2525075	1					
ANR	2525282	PrimaryExpression	1		2525075	1					
ANR	2525283	ExpressionStatement	frame -> interlaced_frame = 1	55:8:1262:1289	2525075	1	True				
ANR	2525284	AssignmentExpression	frame -> interlaced_frame = 1		2525075	0		=			
ANR	2525285	PtrMemberAccess	frame -> interlaced_frame		2525075	0					
ANR	2525286	Identifier	frame		2525075	0					
ANR	2525287	Identifier	interlaced_frame		2525075	1					
ANR	2525288	PrimaryExpression	1		2525075	1					
ANR	2525289	ExpressionStatement	frame -> top_field_first = first_field ^ ctx -> cur_field	57:8:1300:1354	2525075	2	True				
ANR	2525290	AssignmentExpression	frame -> top_field_first = first_field ^ ctx -> cur_field		2525075	0		=			
ANR	2525291	PtrMemberAccess	frame -> top_field_first		2525075	0					
ANR	2525292	Identifier	frame		2525075	0					
ANR	2525293	Identifier	top_field_first		2525075	1					
ANR	2525294	ExclusiveOrExpression	first_field ^ ctx -> cur_field		2525075	1		^			
ANR	2525295	Identifier	first_field		2525075	0					
ANR	2525296	PtrMemberAccess	ctx -> cur_field		2525075	1					
ANR	2525297	Identifier	ctx		2525075	0					
ANR	2525298	Identifier	cur_field		2525075	1					
ANR	2525299	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_DEBUG , ""interlaced %d, cur field %d\\n"" , buf [ 5 ] & 3 , ctx -> cur_field )"	59:8:1365:1474	2525075	3	True				
ANR	2525300	CallExpression	"av_log ( ctx -> avctx , AV_LOG_DEBUG , ""interlaced %d, cur field %d\\n"" , buf [ 5 ] & 3 , ctx -> cur_field )"		2525075	0					
ANR	2525301	Callee	av_log		2525075	0					
ANR	2525302	Identifier	av_log		2525075	0					
ANR	2525303	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525304	Argument	ctx -> avctx		2525075	0					
ANR	2525305	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525306	Identifier	ctx		2525075	0					
ANR	2525307	Identifier	avctx		2525075	1					
ANR	2525308	Argument	AV_LOG_DEBUG		2525075	1					
ANR	2525309	Identifier	AV_LOG_DEBUG		2525075	0					
ANR	2525310	Argument	"""interlaced %d, cur field %d\\n"""		2525075	2					
ANR	2525311	PrimaryExpression	"""interlaced %d, cur field %d\\n"""		2525075	0					
ANR	2525312	Argument	buf [ 5 ] & 3		2525075	3					
ANR	2525313	BitAndExpression	buf [ 5 ] & 3		2525075	0		&			
ANR	2525314	ArrayIndexing	buf [ 5 ]		2525075	0					
ANR	2525315	Identifier	buf		2525075	0					
ANR	2525316	PrimaryExpression	5		2525075	1					
ANR	2525317	PrimaryExpression	3		2525075	1					
ANR	2525318	Argument	ctx -> cur_field		2525075	4					
ANR	2525319	PtrMemberAccess	ctx -> cur_field		2525075	0					
ANR	2525320	Identifier	ctx		2525075	0					
ANR	2525321	Identifier	cur_field		2525075	1					
ANR	2525322	ElseStatement	else		2525075	0					
ANR	2525323	CompoundStatement		57:11:1305:1305	2525075	0					
ANR	2525324	ExpressionStatement	ctx -> cur_field = 0	65:8:1499:1517	2525075	0	True				
ANR	2525325	AssignmentExpression	ctx -> cur_field = 0		2525075	0		=			
ANR	2525326	PtrMemberAccess	ctx -> cur_field		2525075	0					
ANR	2525327	Identifier	ctx		2525075	0					
ANR	2525328	Identifier	cur_field		2525075	1					
ANR	2525329	PrimaryExpression	0		2525075	1					
ANR	2525330	ExpressionStatement	ctx -> mbaff = ( buf [ 0x6 ] >> 5 ) & 1	69:4:1531:1563	2525075	14	True				
ANR	2525331	AssignmentExpression	ctx -> mbaff = ( buf [ 0x6 ] >> 5 ) & 1		2525075	0		=			
ANR	2525332	PtrMemberAccess	ctx -> mbaff		2525075	0					
ANR	2525333	Identifier	ctx		2525075	0					
ANR	2525334	Identifier	mbaff		2525075	1					
ANR	2525335	BitAndExpression	( buf [ 0x6 ] >> 5 ) & 1		2525075	1		&			
ANR	2525336	ShiftExpression	buf [ 0x6 ] >> 5		2525075	0		>>			
ANR	2525337	ArrayIndexing	buf [ 0x6 ]		2525075	0					
ANR	2525338	Identifier	buf		2525075	0					
ANR	2525339	PrimaryExpression	0x6		2525075	1					
ANR	2525340	PrimaryExpression	5		2525075	1					
ANR	2525341	PrimaryExpression	1		2525075	1					
ANR	2525342	ExpressionStatement	ctx -> height = AV_RB16 ( buf + 0x18 )	73:4:1572:1605	2525075	15	True				
ANR	2525343	AssignmentExpression	ctx -> height = AV_RB16 ( buf + 0x18 )		2525075	0		=			
ANR	2525344	PtrMemberAccess	ctx -> height		2525075	0					
ANR	2525345	Identifier	ctx		2525075	0					
ANR	2525346	Identifier	height		2525075	1					
ANR	2525347	CallExpression	AV_RB16 ( buf + 0x18 )		2525075	1					
ANR	2525348	Callee	AV_RB16		2525075	0					
ANR	2525349	Identifier	AV_RB16		2525075	0					
ANR	2525350	ArgumentList	buf + 0x18		2525075	1					
ANR	2525351	Argument	buf + 0x18		2525075	0					
ANR	2525352	AdditiveExpression	buf + 0x18		2525075	0		+			
ANR	2525353	Identifier	buf		2525075	0					
ANR	2525354	PrimaryExpression	0x18		2525075	1					
ANR	2525355	ExpressionStatement	ctx -> width = AV_RB16 ( buf + 0x1a )	75:4:1612:1645	2525075	16	True				
ANR	2525356	AssignmentExpression	ctx -> width = AV_RB16 ( buf + 0x1a )		2525075	0		=			
ANR	2525357	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525358	Identifier	ctx		2525075	0					
ANR	2525359	Identifier	width		2525075	1					
ANR	2525360	CallExpression	AV_RB16 ( buf + 0x1a )		2525075	1					
ANR	2525361	Callee	AV_RB16		2525075	0					
ANR	2525362	Identifier	AV_RB16		2525075	0					
ANR	2525363	ArgumentList	buf + 0x1a		2525075	1					
ANR	2525364	Argument	buf + 0x1a		2525075	0					
ANR	2525365	AdditiveExpression	buf + 0x1a		2525075	0		+			
ANR	2525366	Identifier	buf		2525075	0					
ANR	2525367	PrimaryExpression	0x1a		2525075	1					
ANR	2525368	SwitchStatement	switch ( buf [ 0x21 ] >> 5 )		2525075	17					
ANR	2525369	Condition	buf [ 0x21 ] >> 5	79:11:1661:1674	2525075	0	True				
ANR	2525370	ShiftExpression	buf [ 0x21 ] >> 5		2525075	0		>>			
ANR	2525371	ArrayIndexing	buf [ 0x21 ]		2525075	0					
ANR	2525372	Identifier	buf		2525075	0					
ANR	2525373	PrimaryExpression	0x21		2525075	1					
ANR	2525374	PrimaryExpression	5		2525075	1					
ANR	2525375	CompoundStatement		73:27:1494:1494	2525075	1					
ANR	2525376	Label	case 1 :	81:4:1684:1690	2525075	0	True				
ANR	2525377	ExpressionStatement	bitdepth = 8	81:12:1692:1704	2525075	1	True				
ANR	2525378	AssignmentExpression	bitdepth = 8		2525075	0		=			
ANR	2525379	Identifier	bitdepth		2525075	0					
ANR	2525380	PrimaryExpression	8		2525075	1					
ANR	2525381	BreakStatement	break ;	81:26:1706:1711	2525075	2	True				
ANR	2525382	Label	case 2 :	83:4:1718:1724	2525075	3	True				
ANR	2525383	ExpressionStatement	bitdepth = 10	83:12:1726:1739	2525075	4	True				
ANR	2525384	AssignmentExpression	bitdepth = 10		2525075	0		=			
ANR	2525385	Identifier	bitdepth		2525075	0					
ANR	2525386	PrimaryExpression	10		2525075	1					
ANR	2525387	BreakStatement	break ;	83:27:1741:1746	2525075	5	True				
ANR	2525388	Label	case 3 :	85:4:1753:1759	2525075	6	True				
ANR	2525389	ExpressionStatement	bitdepth = 12	85:12:1761:1774	2525075	7	True				
ANR	2525390	AssignmentExpression	bitdepth = 12		2525075	0		=			
ANR	2525391	Identifier	bitdepth		2525075	0					
ANR	2525392	PrimaryExpression	12		2525075	1					
ANR	2525393	BreakStatement	break ;	85:27:1776:1781	2525075	8	True				
ANR	2525394	Label	default :	87:4:1788:1795	2525075	9	True				
ANR	2525395	Identifier	default		2525075	0					
ANR	2525396	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Unknown bitdepth indicator (%d)\\n"" , buf [ 0x21 ] >> 5 )"	89:8:1806:1907	2525075	10	True				
ANR	2525397	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Unknown bitdepth indicator (%d)\\n"" , buf [ 0x21 ] >> 5 )"		2525075	0					
ANR	2525398	Callee	av_log		2525075	0					
ANR	2525399	Identifier	av_log		2525075	0					
ANR	2525400	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525401	Argument	ctx -> avctx		2525075	0					
ANR	2525402	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525403	Identifier	ctx		2525075	0					
ANR	2525404	Identifier	avctx		2525075	1					
ANR	2525405	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525406	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2525407	Argument	"""Unknown bitdepth indicator (%d)\\n"""		2525075	2					
ANR	2525408	PrimaryExpression	"""Unknown bitdepth indicator (%d)\\n"""		2525075	0					
ANR	2525409	Argument	buf [ 0x21 ] >> 5		2525075	3					
ANR	2525410	ShiftExpression	buf [ 0x21 ] >> 5		2525075	0		>>			
ANR	2525411	ArrayIndexing	buf [ 0x21 ]		2525075	0					
ANR	2525412	Identifier	buf		2525075	0					
ANR	2525413	PrimaryExpression	0x21		2525075	1					
ANR	2525414	PrimaryExpression	5		2525075	1					
ANR	2525415	ReturnStatement	return AVERROR_INVALIDDATA ;	93:8:1918:1944	2525075	11	True				
ANR	2525416	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525417	ExpressionStatement	cid = AV_RB32 ( buf + 0x28 )	99:4:1960:1985	2525075	18	True				
ANR	2525418	AssignmentExpression	cid = AV_RB32 ( buf + 0x28 )		2525075	0		=			
ANR	2525419	Identifier	cid		2525075	0					
ANR	2525420	CallExpression	AV_RB32 ( buf + 0x28 )		2525075	1					
ANR	2525421	Callee	AV_RB32		2525075	0					
ANR	2525422	Identifier	AV_RB32		2525075	0					
ANR	2525423	ArgumentList	buf + 0x28		2525075	1					
ANR	2525424	Argument	buf + 0x28		2525075	0					
ANR	2525425	AdditiveExpression	buf + 0x28		2525075	0		+			
ANR	2525426	Identifier	buf		2525075	0					
ANR	2525427	PrimaryExpression	0x28		2525075	1					
ANR	2525428	IfStatement	"if ( ( ret = dnxhd_init_vlc ( ctx , cid , bitdepth ) ) < 0 )"		2525075	19					
ANR	2525429	Condition	"( ret = dnxhd_init_vlc ( ctx , cid , bitdepth ) ) < 0"	101:8:1996:2041	2525075	0	True				
ANR	2525430	RelationalExpression	"( ret = dnxhd_init_vlc ( ctx , cid , bitdepth ) ) < 0"		2525075	0		<			
ANR	2525431	AssignmentExpression	"ret = dnxhd_init_vlc ( ctx , cid , bitdepth )"		2525075	0		=			
ANR	2525432	Identifier	ret		2525075	0					
ANR	2525433	CallExpression	"dnxhd_init_vlc ( ctx , cid , bitdepth )"		2525075	1					
ANR	2525434	Callee	dnxhd_init_vlc		2525075	0					
ANR	2525435	Identifier	dnxhd_init_vlc		2525075	0					
ANR	2525436	ArgumentList	ctx		2525075	1					
ANR	2525437	Argument	ctx		2525075	0					
ANR	2525438	Identifier	ctx		2525075	0					
ANR	2525439	Argument	cid		2525075	1					
ANR	2525440	Identifier	cid		2525075	0					
ANR	2525441	Argument	bitdepth		2525075	2					
ANR	2525442	Identifier	bitdepth		2525075	0					
ANR	2525443	PrimaryExpression	0		2525075	1					
ANR	2525444	ReturnStatement	return ret ;	103:8:2053:2063	2525075	1	True				
ANR	2525445	Identifier	ret		2525075	0					
ANR	2525446	IfStatement	if ( ctx -> mbaff && ctx -> cid_table -> cid != 1260 )		2525075	20					
ANR	2525447	Condition	ctx -> mbaff && ctx -> cid_table -> cid != 1260	105:8:2074:2114	2525075	0	True				
ANR	2525448	AndExpression	ctx -> mbaff && ctx -> cid_table -> cid != 1260		2525075	0		&&			
ANR	2525449	PtrMemberAccess	ctx -> mbaff		2525075	0					
ANR	2525450	Identifier	ctx		2525075	0					
ANR	2525451	Identifier	mbaff		2525075	1					
ANR	2525452	EqualityExpression	ctx -> cid_table -> cid != 1260		2525075	1		!=			
ANR	2525453	PtrMemberAccess	ctx -> cid_table -> cid		2525075	0					
ANR	2525454	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525455	Identifier	ctx		2525075	0					
ANR	2525456	Identifier	cid_table		2525075	1					
ANR	2525457	Identifier	cid		2525075	1					
ANR	2525458	PrimaryExpression	1260		2525075	1					
ANR	2525459	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""Adaptive MB interlace flag in an unsupported profile.\\n"" )"	107:8:2126:2235	2525075	1	True				
ANR	2525460	CallExpression	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""Adaptive MB interlace flag in an unsupported profile.\\n"" )"		2525075	0					
ANR	2525461	Callee	av_log		2525075	0					
ANR	2525462	Identifier	av_log		2525075	0					
ANR	2525463	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525464	Argument	ctx -> avctx		2525075	0					
ANR	2525465	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525466	Identifier	ctx		2525075	0					
ANR	2525467	Identifier	avctx		2525075	1					
ANR	2525468	Argument	AV_LOG_WARNING		2525075	1					
ANR	2525469	Identifier	AV_LOG_WARNING		2525075	0					
ANR	2525470	Argument	"""Adaptive MB interlace flag in an unsupported profile.\\n"""		2525075	2					
ANR	2525471	PrimaryExpression	"""Adaptive MB interlace flag in an unsupported profile.\\n"""		2525075	0					
ANR	2525472	ExpressionStatement	ctx -> act = buf [ 0x2C ] & 7	113:4:2244:2268	2525075	21	True				
ANR	2525473	AssignmentExpression	ctx -> act = buf [ 0x2C ] & 7		2525075	0		=			
ANR	2525474	PtrMemberAccess	ctx -> act		2525075	0					
ANR	2525475	Identifier	ctx		2525075	0					
ANR	2525476	Identifier	act		2525075	1					
ANR	2525477	BitAndExpression	buf [ 0x2C ] & 7		2525075	1		&			
ANR	2525478	ArrayIndexing	buf [ 0x2C ]		2525075	0					
ANR	2525479	Identifier	buf		2525075	0					
ANR	2525480	PrimaryExpression	0x2C		2525075	1					
ANR	2525481	PrimaryExpression	7		2525075	1					
ANR	2525482	IfStatement	if ( ctx -> act && ctx -> cid_table -> cid != 1256 && ctx -> cid_table -> cid != 1270 )		2525075	22					
ANR	2525483	Condition	ctx -> act && ctx -> cid_table -> cid != 1256 && ctx -> cid_table -> cid != 1270	115:8:2279:2348	2525075	0	True				
ANR	2525484	AndExpression	ctx -> act && ctx -> cid_table -> cid != 1256 && ctx -> cid_table -> cid != 1270		2525075	0		&&			
ANR	2525485	PtrMemberAccess	ctx -> act		2525075	0					
ANR	2525486	Identifier	ctx		2525075	0					
ANR	2525487	Identifier	act		2525075	1					
ANR	2525488	AndExpression	ctx -> cid_table -> cid != 1256 && ctx -> cid_table -> cid != 1270		2525075	1		&&			
ANR	2525489	EqualityExpression	ctx -> cid_table -> cid != 1256		2525075	0		!=			
ANR	2525490	PtrMemberAccess	ctx -> cid_table -> cid		2525075	0					
ANR	2525491	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525492	Identifier	ctx		2525075	0					
ANR	2525493	Identifier	cid_table		2525075	1					
ANR	2525494	Identifier	cid		2525075	1					
ANR	2525495	PrimaryExpression	1256		2525075	1					
ANR	2525496	EqualityExpression	ctx -> cid_table -> cid != 1270		2525075	1		!=			
ANR	2525497	PtrMemberAccess	ctx -> cid_table -> cid		2525075	0					
ANR	2525498	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525499	Identifier	ctx		2525075	0					
ANR	2525500	Identifier	cid_table		2525075	1					
ANR	2525501	Identifier	cid		2525075	1					
ANR	2525502	PrimaryExpression	1270		2525075	1					
ANR	2525503	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""Adaptive color transform in an unsupported profile.\\n"" )"	117:8:2360:2467	2525075	1	True				
ANR	2525504	CallExpression	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""Adaptive color transform in an unsupported profile.\\n"" )"		2525075	0					
ANR	2525505	Callee	av_log		2525075	0					
ANR	2525506	Identifier	av_log		2525075	0					
ANR	2525507	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525508	Argument	ctx -> avctx		2525075	0					
ANR	2525509	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525510	Identifier	ctx		2525075	0					
ANR	2525511	Identifier	avctx		2525075	1					
ANR	2525512	Argument	AV_LOG_WARNING		2525075	1					
ANR	2525513	Identifier	AV_LOG_WARNING		2525075	0					
ANR	2525514	Argument	"""Adaptive color transform in an unsupported profile.\\n"""		2525075	2					
ANR	2525515	PrimaryExpression	"""Adaptive color transform in an unsupported profile.\\n"""		2525075	0					
ANR	2525516	ExpressionStatement	ctx -> is_444 = ( buf [ 0x2C ] >> 6 ) & 1	123:4:2476:2510	2525075	23	True				
ANR	2525517	AssignmentExpression	ctx -> is_444 = ( buf [ 0x2C ] >> 6 ) & 1		2525075	0		=			
ANR	2525518	PtrMemberAccess	ctx -> is_444		2525075	0					
ANR	2525519	Identifier	ctx		2525075	0					
ANR	2525520	Identifier	is_444		2525075	1					
ANR	2525521	BitAndExpression	( buf [ 0x2C ] >> 6 ) & 1		2525075	1		&			
ANR	2525522	ShiftExpression	buf [ 0x2C ] >> 6		2525075	0		>>			
ANR	2525523	ArrayIndexing	buf [ 0x2C ]		2525075	0					
ANR	2525524	Identifier	buf		2525075	0					
ANR	2525525	PrimaryExpression	0x2C		2525075	1					
ANR	2525526	PrimaryExpression	6		2525075	1					
ANR	2525527	PrimaryExpression	1		2525075	1					
ANR	2525528	IfStatement	if ( ctx -> is_444 )		2525075	24					
ANR	2525529	Condition	ctx -> is_444	125:8:2521:2531	2525075	0	True				
ANR	2525530	PtrMemberAccess	ctx -> is_444		2525075	0					
ANR	2525531	Identifier	ctx		2525075	0					
ANR	2525532	Identifier	is_444		2525075	1					
ANR	2525533	CompoundStatement		119:21:2351:2351	2525075	1					
ANR	2525534	IfStatement	if ( bitdepth == 8 )		2525075	0					
ANR	2525535	Condition	bitdepth == 8	127:12:2549:2561	2525075	0	True				
ANR	2525536	EqualityExpression	bitdepth == 8		2525075	0		==			
ANR	2525537	Identifier	bitdepth		2525075	0					
ANR	2525538	PrimaryExpression	8		2525075	1					
ANR	2525539	CompoundStatement		121:27:2381:2381	2525075	1					
ANR	2525540	ExpressionStatement	"avpriv_request_sample ( ctx -> avctx , ""4:4:4 8 bits\\n"" )"	129:12:2579:2630	2525075	0	True				
ANR	2525541	CallExpression	"avpriv_request_sample ( ctx -> avctx , ""4:4:4 8 bits\\n"" )"		2525075	0					
ANR	2525542	Callee	avpriv_request_sample		2525075	0					
ANR	2525543	Identifier	avpriv_request_sample		2525075	0					
ANR	2525544	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525545	Argument	ctx -> avctx		2525075	0					
ANR	2525546	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525547	Identifier	ctx		2525075	0					
ANR	2525548	Identifier	avctx		2525075	1					
ANR	2525549	Argument	"""4:4:4 8 bits\\n"""		2525075	1					
ANR	2525550	PrimaryExpression	"""4:4:4 8 bits\\n"""		2525075	0					
ANR	2525551	ReturnStatement	return AVERROR_INVALIDDATA ;	131:12:2645:2671	2525075	1	True				
ANR	2525552	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525553	ElseStatement	else		2525075	0					
ANR	2525554	IfStatement	if ( bitdepth == 10 )		2525075	0					
ANR	2525555	Condition	bitdepth == 10	133:19:2693:2706	2525075	0	True				
ANR	2525556	EqualityExpression	bitdepth == 10		2525075	0		==			
ANR	2525557	Identifier	bitdepth		2525075	0					
ANR	2525558	PrimaryExpression	10		2525075	1					
ANR	2525559	CompoundStatement		127:35:2526:2526	2525075	1					
ANR	2525560	ExpressionStatement	ctx -> decode_dct_block = dnxhd_decode_dct_block_10_444	135:12:2724:2777	2525075	0	True				
ANR	2525561	AssignmentExpression	ctx -> decode_dct_block = dnxhd_decode_dct_block_10_444		2525075	0		=			
ANR	2525562	PtrMemberAccess	ctx -> decode_dct_block		2525075	0					
ANR	2525563	Identifier	ctx		2525075	0					
ANR	2525564	Identifier	decode_dct_block		2525075	1					
ANR	2525565	Identifier	dnxhd_decode_dct_block_10_444		2525075	1					
ANR	2525566	ExpressionStatement	ctx -> pix_fmt = ctx -> act ? AV_PIX_FMT_YUV444P10 : AV_PIX_FMT_GBRP10	137:12:2792:2895	2525075	1	True				
ANR	2525567	AssignmentExpression	ctx -> pix_fmt = ctx -> act ? AV_PIX_FMT_YUV444P10 : AV_PIX_FMT_GBRP10		2525075	0		=			
ANR	2525568	PtrMemberAccess	ctx -> pix_fmt		2525075	0					
ANR	2525569	Identifier	ctx		2525075	0					
ANR	2525570	Identifier	pix_fmt		2525075	1					
ANR	2525571	ConditionalExpression	ctx -> act ? AV_PIX_FMT_YUV444P10 : AV_PIX_FMT_GBRP10		2525075	1					
ANR	2525572	Condition	ctx -> act		2525075	0					
ANR	2525573	PtrMemberAccess	ctx -> act		2525075	0					
ANR	2525574	Identifier	ctx		2525075	0					
ANR	2525575	Identifier	act		2525075	1					
ANR	2525576	Identifier	AV_PIX_FMT_YUV444P10		2525075	1					
ANR	2525577	Identifier	AV_PIX_FMT_GBRP10		2525075	2					
ANR	2525578	ElseStatement	else		2525075	0					
ANR	2525579	CompoundStatement		135:15:2730:2730	2525075	0					
ANR	2525580	ExpressionStatement	ctx -> decode_dct_block = dnxhd_decode_dct_block_12_444	143:12:2928:2981	2525075	0	True				
ANR	2525581	AssignmentExpression	ctx -> decode_dct_block = dnxhd_decode_dct_block_12_444		2525075	0		=			
ANR	2525582	PtrMemberAccess	ctx -> decode_dct_block		2525075	0					
ANR	2525583	Identifier	ctx		2525075	0					
ANR	2525584	Identifier	decode_dct_block		2525075	1					
ANR	2525585	Identifier	dnxhd_decode_dct_block_12_444		2525075	1					
ANR	2525586	ExpressionStatement	ctx -> pix_fmt = ctx -> act ? AV_PIX_FMT_YUV444P12 : AV_PIX_FMT_GBRP12	145:12:2996:3099	2525075	1	True				
ANR	2525587	AssignmentExpression	ctx -> pix_fmt = ctx -> act ? AV_PIX_FMT_YUV444P12 : AV_PIX_FMT_GBRP12		2525075	0		=			
ANR	2525588	PtrMemberAccess	ctx -> pix_fmt		2525075	0					
ANR	2525589	Identifier	ctx		2525075	0					
ANR	2525590	Identifier	pix_fmt		2525075	1					
ANR	2525591	ConditionalExpression	ctx -> act ? AV_PIX_FMT_YUV444P12 : AV_PIX_FMT_GBRP12		2525075	1					
ANR	2525592	Condition	ctx -> act		2525075	0					
ANR	2525593	PtrMemberAccess	ctx -> act		2525075	0					
ANR	2525594	Identifier	ctx		2525075	0					
ANR	2525595	Identifier	act		2525075	1					
ANR	2525596	Identifier	AV_PIX_FMT_YUV444P12		2525075	1					
ANR	2525597	Identifier	AV_PIX_FMT_GBRP12		2525075	2					
ANR	2525598	ElseStatement	else		2525075	0					
ANR	2525599	IfStatement	if ( bitdepth == 12 )		2525075	0					
ANR	2525600	Condition	bitdepth == 12	151:15:3128:3141	2525075	0	True				
ANR	2525601	EqualityExpression	bitdepth == 12		2525075	0		==			
ANR	2525602	Identifier	bitdepth		2525075	0					
ANR	2525603	PrimaryExpression	12		2525075	1					
ANR	2525604	CompoundStatement		145:31:2961:2961	2525075	1					
ANR	2525605	ExpressionStatement	ctx -> decode_dct_block = dnxhd_decode_dct_block_12	153:8:3155:3204	2525075	0	True				
ANR	2525606	AssignmentExpression	ctx -> decode_dct_block = dnxhd_decode_dct_block_12		2525075	0		=			
ANR	2525607	PtrMemberAccess	ctx -> decode_dct_block		2525075	0					
ANR	2525608	Identifier	ctx		2525075	0					
ANR	2525609	Identifier	decode_dct_block		2525075	1					
ANR	2525610	Identifier	dnxhd_decode_dct_block_12		2525075	1					
ANR	2525611	ExpressionStatement	ctx -> pix_fmt = AV_PIX_FMT_YUV422P12	155:8:3215:3250	2525075	1	True				
ANR	2525612	AssignmentExpression	ctx -> pix_fmt = AV_PIX_FMT_YUV422P12		2525075	0		=			
ANR	2525613	PtrMemberAccess	ctx -> pix_fmt		2525075	0					
ANR	2525614	Identifier	ctx		2525075	0					
ANR	2525615	Identifier	pix_fmt		2525075	1					
ANR	2525616	Identifier	AV_PIX_FMT_YUV422P12		2525075	1					
ANR	2525617	ElseStatement	else		2525075	0					
ANR	2525618	IfStatement	if ( bitdepth == 10 )		2525075	0					
ANR	2525619	Condition	bitdepth == 10	157:15:3268:3281	2525075	0	True				
ANR	2525620	EqualityExpression	bitdepth == 10		2525075	0		==			
ANR	2525621	Identifier	bitdepth		2525075	0					
ANR	2525622	PrimaryExpression	10		2525075	1					
ANR	2525623	CompoundStatement		151:31:3101:3101	2525075	1					
ANR	2525624	ExpressionStatement	ctx -> decode_dct_block = dnxhd_decode_dct_block_10	159:8:3295:3344	2525075	0	True				
ANR	2525625	AssignmentExpression	ctx -> decode_dct_block = dnxhd_decode_dct_block_10		2525075	0		=			
ANR	2525626	PtrMemberAccess	ctx -> decode_dct_block		2525075	0					
ANR	2525627	Identifier	ctx		2525075	0					
ANR	2525628	Identifier	decode_dct_block		2525075	1					
ANR	2525629	Identifier	dnxhd_decode_dct_block_10		2525075	1					
ANR	2525630	ExpressionStatement	ctx -> pix_fmt = AV_PIX_FMT_YUV422P10	161:8:3355:3390	2525075	1	True				
ANR	2525631	AssignmentExpression	ctx -> pix_fmt = AV_PIX_FMT_YUV422P10		2525075	0		=			
ANR	2525632	PtrMemberAccess	ctx -> pix_fmt		2525075	0					
ANR	2525633	Identifier	ctx		2525075	0					
ANR	2525634	Identifier	pix_fmt		2525075	1					
ANR	2525635	Identifier	AV_PIX_FMT_YUV422P10		2525075	1					
ANR	2525636	ElseStatement	else		2525075	0					
ANR	2525637	CompoundStatement		157:11:3221:3221	2525075	0					
ANR	2525638	ExpressionStatement	ctx -> decode_dct_block = dnxhd_decode_dct_block_8	165:8:3415:3463	2525075	0	True				
ANR	2525639	AssignmentExpression	ctx -> decode_dct_block = dnxhd_decode_dct_block_8		2525075	0		=			
ANR	2525640	PtrMemberAccess	ctx -> decode_dct_block		2525075	0					
ANR	2525641	Identifier	ctx		2525075	0					
ANR	2525642	Identifier	decode_dct_block		2525075	1					
ANR	2525643	Identifier	dnxhd_decode_dct_block_8		2525075	1					
ANR	2525644	ExpressionStatement	ctx -> pix_fmt = AV_PIX_FMT_YUV422P	167:8:3474:3507	2525075	1	True				
ANR	2525645	AssignmentExpression	ctx -> pix_fmt = AV_PIX_FMT_YUV422P		2525075	0		=			
ANR	2525646	PtrMemberAccess	ctx -> pix_fmt		2525075	0					
ANR	2525647	Identifier	ctx		2525075	0					
ANR	2525648	Identifier	pix_fmt		2525075	1					
ANR	2525649	Identifier	AV_PIX_FMT_YUV422P		2525075	1					
ANR	2525650	ExpressionStatement	ctx -> avctx -> bits_per_raw_sample = ctx -> bit_depth = bitdepth	173:4:3523:3582	2525075	25	True				
ANR	2525651	AssignmentExpression	ctx -> avctx -> bits_per_raw_sample = ctx -> bit_depth = bitdepth		2525075	0		=			
ANR	2525652	PtrMemberAccess	ctx -> avctx -> bits_per_raw_sample		2525075	0					
ANR	2525653	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525654	Identifier	ctx		2525075	0					
ANR	2525655	Identifier	avctx		2525075	1					
ANR	2525656	Identifier	bits_per_raw_sample		2525075	1					
ANR	2525657	AssignmentExpression	ctx -> bit_depth = bitdepth		2525075	1		=			
ANR	2525658	PtrMemberAccess	ctx -> bit_depth		2525075	0					
ANR	2525659	Identifier	ctx		2525075	0					
ANR	2525660	Identifier	bit_depth		2525075	1					
ANR	2525661	Identifier	bitdepth		2525075	1					
ANR	2525662	IfStatement	if ( ctx -> bit_depth != old_bit_depth )		2525075	26					
ANR	2525663	Condition	ctx -> bit_depth != old_bit_depth	175:8:3593:3623	2525075	0	True				
ANR	2525664	EqualityExpression	ctx -> bit_depth != old_bit_depth		2525075	0		!=			
ANR	2525665	PtrMemberAccess	ctx -> bit_depth		2525075	0					
ANR	2525666	Identifier	ctx		2525075	0					
ANR	2525667	Identifier	bit_depth		2525075	1					
ANR	2525668	Identifier	old_bit_depth		2525075	1					
ANR	2525669	CompoundStatement		169:41:3443:3443	2525075	1					
ANR	2525670	ExpressionStatement	"ff_blockdsp_init ( & ctx -> bdsp , ctx -> avctx )"	177:8:3637:3677	2525075	0	True				
ANR	2525671	CallExpression	"ff_blockdsp_init ( & ctx -> bdsp , ctx -> avctx )"		2525075	0					
ANR	2525672	Callee	ff_blockdsp_init		2525075	0					
ANR	2525673	Identifier	ff_blockdsp_init		2525075	0					
ANR	2525674	ArgumentList	& ctx -> bdsp		2525075	1					
ANR	2525675	Argument	& ctx -> bdsp		2525075	0					
ANR	2525676	UnaryOperationExpression	& ctx -> bdsp		2525075	0					
ANR	2525677	UnaryOperator	&		2525075	0					
ANR	2525678	PtrMemberAccess	ctx -> bdsp		2525075	1					
ANR	2525679	Identifier	ctx		2525075	0					
ANR	2525680	Identifier	bdsp		2525075	1					
ANR	2525681	Argument	ctx -> avctx		2525075	1					
ANR	2525682	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525683	Identifier	ctx		2525075	0					
ANR	2525684	Identifier	avctx		2525075	1					
ANR	2525685	ExpressionStatement	"ff_idctdsp_init ( & ctx -> idsp , ctx -> avctx )"	179:8:3688:3727	2525075	1	True				
ANR	2525686	CallExpression	"ff_idctdsp_init ( & ctx -> idsp , ctx -> avctx )"		2525075	0					
ANR	2525687	Callee	ff_idctdsp_init		2525075	0					
ANR	2525688	Identifier	ff_idctdsp_init		2525075	0					
ANR	2525689	ArgumentList	& ctx -> idsp		2525075	1					
ANR	2525690	Argument	& ctx -> idsp		2525075	0					
ANR	2525691	UnaryOperationExpression	& ctx -> idsp		2525075	0					
ANR	2525692	UnaryOperator	&		2525075	0					
ANR	2525693	PtrMemberAccess	ctx -> idsp		2525075	1					
ANR	2525694	Identifier	ctx		2525075	0					
ANR	2525695	Identifier	idsp		2525075	1					
ANR	2525696	Argument	ctx -> avctx		2525075	1					
ANR	2525697	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525698	Identifier	ctx		2525075	0					
ANR	2525699	Identifier	avctx		2525075	1					
ANR	2525700	ExpressionStatement	"ff_init_scantable ( ctx -> idsp . idct_permutation , & ctx -> scantable , ff_zigzag_direct )"	181:8:3738:3845	2525075	2	True				
ANR	2525701	CallExpression	"ff_init_scantable ( ctx -> idsp . idct_permutation , & ctx -> scantable , ff_zigzag_direct )"		2525075	0					
ANR	2525702	Callee	ff_init_scantable		2525075	0					
ANR	2525703	Identifier	ff_init_scantable		2525075	0					
ANR	2525704	ArgumentList	ctx -> idsp . idct_permutation		2525075	1					
ANR	2525705	Argument	ctx -> idsp . idct_permutation		2525075	0					
ANR	2525706	MemberAccess	ctx -> idsp . idct_permutation		2525075	0					
ANR	2525707	PtrMemberAccess	ctx -> idsp		2525075	0					
ANR	2525708	Identifier	ctx		2525075	0					
ANR	2525709	Identifier	idsp		2525075	1					
ANR	2525710	Identifier	idct_permutation		2525075	1					
ANR	2525711	Argument	& ctx -> scantable		2525075	1					
ANR	2525712	UnaryOperationExpression	& ctx -> scantable		2525075	0					
ANR	2525713	UnaryOperator	&		2525075	0					
ANR	2525714	PtrMemberAccess	ctx -> scantable		2525075	1					
ANR	2525715	Identifier	ctx		2525075	0					
ANR	2525716	Identifier	scantable		2525075	1					
ANR	2525717	Argument	ff_zigzag_direct		2525075	2					
ANR	2525718	Identifier	ff_zigzag_direct		2525075	0					
ANR	2525719	IfStatement	if ( ctx -> width != ctx -> cid_table -> width && ctx -> cid_table -> width != DNXHD_VARIABLE )		2525075	27					
ANR	2525720	Condition	ctx -> width != ctx -> cid_table -> width && ctx -> cid_table -> width != DNXHD_VARIABLE	193:8:3981:4067	2525075	0	True				
ANR	2525721	AndExpression	ctx -> width != ctx -> cid_table -> width && ctx -> cid_table -> width != DNXHD_VARIABLE		2525075	0		&&			
ANR	2525722	EqualityExpression	ctx -> width != ctx -> cid_table -> width		2525075	0		!=			
ANR	2525723	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525724	Identifier	ctx		2525075	0					
ANR	2525725	Identifier	width		2525075	1					
ANR	2525726	PtrMemberAccess	ctx -> cid_table -> width		2525075	1					
ANR	2525727	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525728	Identifier	ctx		2525075	0					
ANR	2525729	Identifier	cid_table		2525075	1					
ANR	2525730	Identifier	width		2525075	1					
ANR	2525731	EqualityExpression	ctx -> cid_table -> width != DNXHD_VARIABLE		2525075	1		!=			
ANR	2525732	PtrMemberAccess	ctx -> cid_table -> width		2525075	0					
ANR	2525733	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525734	Identifier	ctx		2525075	0					
ANR	2525735	Identifier	cid_table		2525075	1					
ANR	2525736	Identifier	width		2525075	1					
ANR	2525737	Identifier	DNXHD_VARIABLE		2525075	1					
ANR	2525738	CompoundStatement		189:49:3887:3887	2525075	1					
ANR	2525739	ExpressionStatement	"av_reduce ( & ctx -> avctx -> sample_aspect_ratio . num , & ctx -> avctx -> sample_aspect_ratio . den , ctx -> width , ctx -> cid_table -> width , 255 )"	197:8:4081:4244	2525075	0	True				
ANR	2525740	CallExpression	"av_reduce ( & ctx -> avctx -> sample_aspect_ratio . num , & ctx -> avctx -> sample_aspect_ratio . den , ctx -> width , ctx -> cid_table -> width , 255 )"		2525075	0					
ANR	2525741	Callee	av_reduce		2525075	0					
ANR	2525742	Identifier	av_reduce		2525075	0					
ANR	2525743	ArgumentList	& ctx -> avctx -> sample_aspect_ratio . num		2525075	1					
ANR	2525744	Argument	& ctx -> avctx -> sample_aspect_ratio . num		2525075	0					
ANR	2525745	UnaryOperationExpression	& ctx -> avctx -> sample_aspect_ratio . num		2525075	0					
ANR	2525746	UnaryOperator	&		2525075	0					
ANR	2525747	MemberAccess	ctx -> avctx -> sample_aspect_ratio . num		2525075	1					
ANR	2525748	PtrMemberAccess	ctx -> avctx -> sample_aspect_ratio		2525075	0					
ANR	2525749	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525750	Identifier	ctx		2525075	0					
ANR	2525751	Identifier	avctx		2525075	1					
ANR	2525752	Identifier	sample_aspect_ratio		2525075	1					
ANR	2525753	Identifier	num		2525075	1					
ANR	2525754	Argument	& ctx -> avctx -> sample_aspect_ratio . den		2525075	1					
ANR	2525755	UnaryOperationExpression	& ctx -> avctx -> sample_aspect_ratio . den		2525075	0					
ANR	2525756	UnaryOperator	&		2525075	0					
ANR	2525757	MemberAccess	ctx -> avctx -> sample_aspect_ratio . den		2525075	1					
ANR	2525758	PtrMemberAccess	ctx -> avctx -> sample_aspect_ratio		2525075	0					
ANR	2525759	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525760	Identifier	ctx		2525075	0					
ANR	2525761	Identifier	avctx		2525075	1					
ANR	2525762	Identifier	sample_aspect_ratio		2525075	1					
ANR	2525763	Identifier	den		2525075	1					
ANR	2525764	Argument	ctx -> width		2525075	2					
ANR	2525765	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525766	Identifier	ctx		2525075	0					
ANR	2525767	Identifier	width		2525075	1					
ANR	2525768	Argument	ctx -> cid_table -> width		2525075	3					
ANR	2525769	PtrMemberAccess	ctx -> cid_table -> width		2525075	0					
ANR	2525770	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525771	Identifier	ctx		2525075	0					
ANR	2525772	Identifier	cid_table		2525075	1					
ANR	2525773	Identifier	width		2525075	1					
ANR	2525774	Argument	255		2525075	4					
ANR	2525775	PrimaryExpression	255		2525075	0					
ANR	2525776	ExpressionStatement	ctx -> width = ctx -> cid_table -> width	203:8:4255:4289	2525075	1	True				
ANR	2525777	AssignmentExpression	ctx -> width = ctx -> cid_table -> width		2525075	0		=			
ANR	2525778	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525779	Identifier	ctx		2525075	0					
ANR	2525780	Identifier	width		2525075	1					
ANR	2525781	PtrMemberAccess	ctx -> cid_table -> width		2525075	1					
ANR	2525782	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525783	Identifier	ctx		2525075	0					
ANR	2525784	Identifier	cid_table		2525075	1					
ANR	2525785	Identifier	width		2525075	1					
ANR	2525786	IfStatement	if ( buf_size < ctx -> cid_table -> coding_unit_size )		2525075	28					
ANR	2525787	Condition	buf_size < ctx -> cid_table -> coding_unit_size	209:8:4309:4351	2525075	0	True				
ANR	2525788	RelationalExpression	buf_size < ctx -> cid_table -> coding_unit_size		2525075	0		<			
ANR	2525789	Identifier	buf_size		2525075	0					
ANR	2525790	PtrMemberAccess	ctx -> cid_table -> coding_unit_size		2525075	1					
ANR	2525791	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525792	Identifier	ctx		2525075	0					
ANR	2525793	Identifier	cid_table		2525075	1					
ANR	2525794	Identifier	coding_unit_size		2525075	1					
ANR	2525795	CompoundStatement		203:53:4171:4171	2525075	1					
ANR	2525796	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""incorrect frame size (%d < %d).\\n"" , buf_size , ctx -> cid_table -> coding_unit_size )"	211:8:4365:4494	2525075	0	True				
ANR	2525797	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""incorrect frame size (%d < %d).\\n"" , buf_size , ctx -> cid_table -> coding_unit_size )"		2525075	0					
ANR	2525798	Callee	av_log		2525075	0					
ANR	2525799	Identifier	av_log		2525075	0					
ANR	2525800	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525801	Argument	ctx -> avctx		2525075	0					
ANR	2525802	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525803	Identifier	ctx		2525075	0					
ANR	2525804	Identifier	avctx		2525075	1					
ANR	2525805	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525806	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2525807	Argument	"""incorrect frame size (%d < %d).\\n"""		2525075	2					
ANR	2525808	PrimaryExpression	"""incorrect frame size (%d < %d).\\n"""		2525075	0					
ANR	2525809	Argument	buf_size		2525075	3					
ANR	2525810	Identifier	buf_size		2525075	0					
ANR	2525811	Argument	ctx -> cid_table -> coding_unit_size		2525075	4					
ANR	2525812	PtrMemberAccess	ctx -> cid_table -> coding_unit_size		2525075	0					
ANR	2525813	PtrMemberAccess	ctx -> cid_table		2525075	0					
ANR	2525814	Identifier	ctx		2525075	0					
ANR	2525815	Identifier	cid_table		2525075	1					
ANR	2525816	Identifier	coding_unit_size		2525075	1					
ANR	2525817	ReturnStatement	return AVERROR_INVALIDDATA ;	215:8:4505:4531	2525075	1	True				
ANR	2525818	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525819	ExpressionStatement	ctx -> mb_width = ( ctx -> width + 15 ) >> 4	221:4:4547:4585	2525075	29	True				
ANR	2525820	AssignmentExpression	ctx -> mb_width = ( ctx -> width + 15 ) >> 4		2525075	0		=			
ANR	2525821	PtrMemberAccess	ctx -> mb_width		2525075	0					
ANR	2525822	Identifier	ctx		2525075	0					
ANR	2525823	Identifier	mb_width		2525075	1					
ANR	2525824	ShiftExpression	( ctx -> width + 15 ) >> 4		2525075	1		>>			
ANR	2525825	AdditiveExpression	ctx -> width + 15		2525075	0		+			
ANR	2525826	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525827	Identifier	ctx		2525075	0					
ANR	2525828	Identifier	width		2525075	1					
ANR	2525829	PrimaryExpression	15		2525075	1					
ANR	2525830	PrimaryExpression	4		2525075	1					
ANR	2525831	ExpressionStatement	ctx -> mb_height = buf [ 0x16d ]	223:4:4592:4619	2525075	30	True				
ANR	2525832	AssignmentExpression	ctx -> mb_height = buf [ 0x16d ]		2525075	0		=			
ANR	2525833	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2525834	Identifier	ctx		2525075	0					
ANR	2525835	Identifier	mb_height		2525075	1					
ANR	2525836	ArrayIndexing	buf [ 0x16d ]		2525075	1					
ANR	2525837	Identifier	buf		2525075	0					
ANR	2525838	PrimaryExpression	0x16d		2525075	1					
ANR	2525839	IfStatement	if ( ( ctx -> height + 15 ) >> 4 == ctx -> mb_height && frame -> interlaced_frame )		2525075	31					
ANR	2525840	Condition	( ctx -> height + 15 ) >> 4 == ctx -> mb_height && frame -> interlaced_frame	227:8:4632:4699	2525075	0	True				
ANR	2525841	AndExpression	( ctx -> height + 15 ) >> 4 == ctx -> mb_height && frame -> interlaced_frame		2525075	0		&&			
ANR	2525842	EqualityExpression	( ctx -> height + 15 ) >> 4 == ctx -> mb_height		2525075	0		==			
ANR	2525843	ShiftExpression	( ctx -> height + 15 ) >> 4		2525075	0		>>			
ANR	2525844	AdditiveExpression	ctx -> height + 15		2525075	0		+			
ANR	2525845	PtrMemberAccess	ctx -> height		2525075	0					
ANR	2525846	Identifier	ctx		2525075	0					
ANR	2525847	Identifier	height		2525075	1					
ANR	2525848	PrimaryExpression	15		2525075	1					
ANR	2525849	PrimaryExpression	4		2525075	1					
ANR	2525850	PtrMemberAccess	ctx -> mb_height		2525075	1					
ANR	2525851	Identifier	ctx		2525075	0					
ANR	2525852	Identifier	mb_height		2525075	1					
ANR	2525853	PtrMemberAccess	frame -> interlaced_frame		2525075	1					
ANR	2525854	Identifier	frame		2525075	0					
ANR	2525855	Identifier	interlaced_frame		2525075	1					
ANR	2525856	ExpressionStatement	ctx -> height <<= 1	229:8:4711:4728	2525075	1	True				
ANR	2525857	AssignmentExpression	ctx -> height <<= 1		2525075	0		<<=			
ANR	2525858	PtrMemberAccess	ctx -> height		2525075	0					
ANR	2525859	Identifier	ctx		2525075	0					
ANR	2525860	Identifier	height		2525075	1					
ANR	2525861	PrimaryExpression	1		2525075	1					
ANR	2525862	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_VERBOSE , ""%dx%d, 4:%s %d bits, MBAFF=%d ACT=%d\\n"" , ctx -> width , ctx -> height , ctx -> is_444 ? ""4:4"" : ""2:2"" , ctx -> bit_depth , ctx -> mbaff , ctx -> act )"	233:4:4737:4929	2525075	32	True				
ANR	2525863	CallExpression	"av_log ( ctx -> avctx , AV_LOG_VERBOSE , ""%dx%d, 4:%s %d bits, MBAFF=%d ACT=%d\\n"" , ctx -> width , ctx -> height , ctx -> is_444 ? ""4:4"" : ""2:2"" , ctx -> bit_depth , ctx -> mbaff , ctx -> act )"		2525075	0					
ANR	2525864	Callee	av_log		2525075	0					
ANR	2525865	Identifier	av_log		2525075	0					
ANR	2525866	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525867	Argument	ctx -> avctx		2525075	0					
ANR	2525868	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525869	Identifier	ctx		2525075	0					
ANR	2525870	Identifier	avctx		2525075	1					
ANR	2525871	Argument	AV_LOG_VERBOSE		2525075	1					
ANR	2525872	Identifier	AV_LOG_VERBOSE		2525075	0					
ANR	2525873	Argument	"""%dx%d, 4:%s %d bits, MBAFF=%d ACT=%d\\n"""		2525075	2					
ANR	2525874	PrimaryExpression	"""%dx%d, 4:%s %d bits, MBAFF=%d ACT=%d\\n"""		2525075	0					
ANR	2525875	Argument	ctx -> width		2525075	3					
ANR	2525876	PtrMemberAccess	ctx -> width		2525075	0					
ANR	2525877	Identifier	ctx		2525075	0					
ANR	2525878	Identifier	width		2525075	1					
ANR	2525879	Argument	ctx -> height		2525075	4					
ANR	2525880	PtrMemberAccess	ctx -> height		2525075	0					
ANR	2525881	Identifier	ctx		2525075	0					
ANR	2525882	Identifier	height		2525075	1					
ANR	2525883	Argument	"ctx -> is_444 ? ""4:4"" : ""2:2"""		2525075	5					
ANR	2525884	ConditionalExpression	"ctx -> is_444 ? ""4:4"" : ""2:2"""		2525075	0					
ANR	2525885	Condition	ctx -> is_444		2525075	0					
ANR	2525886	PtrMemberAccess	ctx -> is_444		2525075	0					
ANR	2525887	Identifier	ctx		2525075	0					
ANR	2525888	Identifier	is_444		2525075	1					
ANR	2525889	PrimaryExpression	"""4:4"""		2525075	1					
ANR	2525890	PrimaryExpression	"""2:2"""		2525075	2					
ANR	2525891	Argument	ctx -> bit_depth		2525075	6					
ANR	2525892	PtrMemberAccess	ctx -> bit_depth		2525075	0					
ANR	2525893	Identifier	ctx		2525075	0					
ANR	2525894	Identifier	bit_depth		2525075	1					
ANR	2525895	Argument	ctx -> mbaff		2525075	7					
ANR	2525896	PtrMemberAccess	ctx -> mbaff		2525075	0					
ANR	2525897	Identifier	ctx		2525075	0					
ANR	2525898	Identifier	mbaff		2525075	1					
ANR	2525899	Argument	ctx -> act		2525075	8					
ANR	2525900	PtrMemberAccess	ctx -> act		2525075	0					
ANR	2525901	Identifier	ctx		2525075	0					
ANR	2525902	Identifier	act		2525075	1					
ANR	2525903	IfStatement	"if ( ! memcmp ( buf , header_prefixhr2 , 5 ) )"		2525075	33					
ANR	2525904	Condition	"! memcmp ( buf , header_prefixhr2 , 5 )"	243:8:5001:5033	2525075	0	True				
ANR	2525905	UnaryOperationExpression	"! memcmp ( buf , header_prefixhr2 , 5 )"		2525075	0					
ANR	2525906	UnaryOperator	!		2525075	0					
ANR	2525907	CallExpression	"memcmp ( buf , header_prefixhr2 , 5 )"		2525075	1					
ANR	2525908	Callee	memcmp		2525075	0					
ANR	2525909	Identifier	memcmp		2525075	0					
ANR	2525910	ArgumentList	buf		2525075	1					
ANR	2525911	Argument	buf		2525075	0					
ANR	2525912	Identifier	buf		2525075	0					
ANR	2525913	Argument	header_prefixhr2		2525075	1					
ANR	2525914	Identifier	header_prefixhr2		2525075	0					
ANR	2525915	Argument	5		2525075	2					
ANR	2525916	PrimaryExpression	5		2525075	0					
ANR	2525917	CompoundStatement		237:43:4853:4853	2525075	1					
ANR	2525918	ExpressionStatement	ctx -> data_offset = 0x170 + ( ctx -> mb_height << 2 )	245:8:5047:5095	2525075	0	True				
ANR	2525919	AssignmentExpression	ctx -> data_offset = 0x170 + ( ctx -> mb_height << 2 )		2525075	0		=			
ANR	2525920	PtrMemberAccess	ctx -> data_offset		2525075	0					
ANR	2525921	Identifier	ctx		2525075	0					
ANR	2525922	Identifier	data_offset		2525075	1					
ANR	2525923	AdditiveExpression	0x170 + ( ctx -> mb_height << 2 )		2525075	1		+			
ANR	2525924	PrimaryExpression	0x170		2525075	0					
ANR	2525925	ShiftExpression	ctx -> mb_height << 2		2525075	1		<<			
ANR	2525926	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2525927	Identifier	ctx		2525075	0					
ANR	2525928	Identifier	mb_height		2525075	1					
ANR	2525929	PrimaryExpression	2		2525075	1					
ANR	2525930	ElseStatement	else		2525075	0					
ANR	2525931	CompoundStatement		241:11:4926:4926	2525075	0					
ANR	2525932	IfStatement	if ( ctx -> mb_height > 68 || ( ctx -> mb_height << frame -> interlaced_frame ) > ( ctx -> height + 15 ) >> 4 )		2525075	0					
ANR	2525933	Condition	ctx -> mb_height > 68 || ( ctx -> mb_height << frame -> interlaced_frame ) > ( ctx -> height + 15 ) >> 4	249:12:5124:5228	2525075	0	True				
ANR	2525934	OrExpression	ctx -> mb_height > 68 || ( ctx -> mb_height << frame -> interlaced_frame ) > ( ctx -> height + 15 ) >> 4		2525075	0		||			
ANR	2525935	RelationalExpression	ctx -> mb_height > 68		2525075	0		>			
ANR	2525936	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2525937	Identifier	ctx		2525075	0					
ANR	2525938	Identifier	mb_height		2525075	1					
ANR	2525939	PrimaryExpression	68		2525075	1					
ANR	2525940	RelationalExpression	( ctx -> mb_height << frame -> interlaced_frame ) > ( ctx -> height + 15 ) >> 4		2525075	1		>			
ANR	2525941	ShiftExpression	ctx -> mb_height << frame -> interlaced_frame		2525075	0		<<			
ANR	2525942	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2525943	Identifier	ctx		2525075	0					
ANR	2525944	Identifier	mb_height		2525075	1					
ANR	2525945	PtrMemberAccess	frame -> interlaced_frame		2525075	1					
ANR	2525946	Identifier	frame		2525075	0					
ANR	2525947	Identifier	interlaced_frame		2525075	1					
ANR	2525948	ShiftExpression	( ctx -> height + 15 ) >> 4		2525075	1		>>			
ANR	2525949	AdditiveExpression	ctx -> height + 15		2525075	0		+			
ANR	2525950	PtrMemberAccess	ctx -> height		2525075	0					
ANR	2525951	Identifier	ctx		2525075	0					
ANR	2525952	Identifier	height		2525075	1					
ANR	2525953	PrimaryExpression	15		2525075	1					
ANR	2525954	PrimaryExpression	4		2525075	1					
ANR	2525955	CompoundStatement		245:83:5048:5048	2525075	1					
ANR	2525956	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""mb height too big: %d\\n"" , ctx -> mb_height )"	253:12:5246:5341	2525075	0	True				
ANR	2525957	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""mb height too big: %d\\n"" , ctx -> mb_height )"		2525075	0					
ANR	2525958	Callee	av_log		2525075	0					
ANR	2525959	Identifier	av_log		2525075	0					
ANR	2525960	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525961	Argument	ctx -> avctx		2525075	0					
ANR	2525962	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525963	Identifier	ctx		2525075	0					
ANR	2525964	Identifier	avctx		2525075	1					
ANR	2525965	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525966	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2525967	Argument	"""mb height too big: %d\\n"""		2525075	2					
ANR	2525968	PrimaryExpression	"""mb height too big: %d\\n"""		2525075	0					
ANR	2525969	Argument	ctx -> mb_height		2525075	3					
ANR	2525970	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2525971	Identifier	ctx		2525075	0					
ANR	2525972	Identifier	mb_height		2525075	1					
ANR	2525973	ReturnStatement	return AVERROR_INVALIDDATA ;	257:12:5356:5382	2525075	1	True				
ANR	2525974	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2525975	ExpressionStatement	ctx -> data_offset = 0x280	261:8:5404:5428	2525075	1	True				
ANR	2525976	AssignmentExpression	ctx -> data_offset = 0x280		2525075	0		=			
ANR	2525977	PtrMemberAccess	ctx -> data_offset		2525075	0					
ANR	2525978	Identifier	ctx		2525075	0					
ANR	2525979	Identifier	data_offset		2525075	1					
ANR	2525980	PrimaryExpression	0x280		2525075	1					
ANR	2525981	IfStatement	if ( buf_size < ctx -> data_offset )		2525075	34					
ANR	2525982	Condition	buf_size < ctx -> data_offset	267:8:5448:5474	2525075	0	True				
ANR	2525983	RelationalExpression	buf_size < ctx -> data_offset		2525075	0		<			
ANR	2525984	Identifier	buf_size		2525075	0					
ANR	2525985	PtrMemberAccess	ctx -> data_offset		2525075	1					
ANR	2525986	Identifier	ctx		2525075	0					
ANR	2525987	Identifier	data_offset		2525075	1					
ANR	2525988	CompoundStatement		261:37:5294:5294	2525075	1					
ANR	2525989	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""buffer too small (%d < %d).\\n"" , buf_size , ctx -> data_offset )"	269:8:5488:5597	2525075	0	True				
ANR	2525990	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""buffer too small (%d < %d).\\n"" , buf_size , ctx -> data_offset )"		2525075	0					
ANR	2525991	Callee	av_log		2525075	0					
ANR	2525992	Identifier	av_log		2525075	0					
ANR	2525993	ArgumentList	ctx -> avctx		2525075	1					
ANR	2525994	Argument	ctx -> avctx		2525075	0					
ANR	2525995	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2525996	Identifier	ctx		2525075	0					
ANR	2525997	Identifier	avctx		2525075	1					
ANR	2525998	Argument	AV_LOG_ERROR		2525075	1					
ANR	2525999	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2526000	Argument	"""buffer too small (%d < %d).\\n"""		2525075	2					
ANR	2526001	PrimaryExpression	"""buffer too small (%d < %d).\\n"""		2525075	0					
ANR	2526002	Argument	buf_size		2525075	3					
ANR	2526003	Identifier	buf_size		2525075	0					
ANR	2526004	Argument	ctx -> data_offset		2525075	4					
ANR	2526005	PtrMemberAccess	ctx -> data_offset		2525075	0					
ANR	2526006	Identifier	ctx		2525075	0					
ANR	2526007	Identifier	data_offset		2525075	1					
ANR	2526008	ReturnStatement	return AVERROR_INVALIDDATA ;	273:8:5608:5634	2525075	1	True				
ANR	2526009	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2526010	IfStatement	if ( ctx -> mb_height != old_mb_height )		2525075	35					
ANR	2526011	Condition	ctx -> mb_height != old_mb_height	279:8:5654:5684	2525075	0	True				
ANR	2526012	EqualityExpression	ctx -> mb_height != old_mb_height		2525075	0		!=			
ANR	2526013	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2526014	Identifier	ctx		2525075	0					
ANR	2526015	Identifier	mb_height		2525075	1					
ANR	2526016	Identifier	old_mb_height		2525075	1					
ANR	2526017	CompoundStatement		273:41:5504:5504	2525075	1					
ANR	2526018	ExpressionStatement	av_freep ( & ctx -> mb_scan_index )	281:8:5698:5727	2525075	0	True				
ANR	2526019	CallExpression	av_freep ( & ctx -> mb_scan_index )		2525075	0					
ANR	2526020	Callee	av_freep		2525075	0					
ANR	2526021	Identifier	av_freep		2525075	0					
ANR	2526022	ArgumentList	& ctx -> mb_scan_index		2525075	1					
ANR	2526023	Argument	& ctx -> mb_scan_index		2525075	0					
ANR	2526024	UnaryOperationExpression	& ctx -> mb_scan_index		2525075	0					
ANR	2526025	UnaryOperator	&		2525075	0					
ANR	2526026	PtrMemberAccess	ctx -> mb_scan_index		2525075	1					
ANR	2526027	Identifier	ctx		2525075	0					
ANR	2526028	Identifier	mb_scan_index		2525075	1					
ANR	2526029	ExpressionStatement	"ctx -> mb_scan_index = av_mallocz_array ( ctx -> mb_height , sizeof ( uint32_t ) )"	285:8:5740:5811	2525075	1	True				
ANR	2526030	AssignmentExpression	"ctx -> mb_scan_index = av_mallocz_array ( ctx -> mb_height , sizeof ( uint32_t ) )"		2525075	0		=			
ANR	2526031	PtrMemberAccess	ctx -> mb_scan_index		2525075	0					
ANR	2526032	Identifier	ctx		2525075	0					
ANR	2526033	Identifier	mb_scan_index		2525075	1					
ANR	2526034	CallExpression	"av_mallocz_array ( ctx -> mb_height , sizeof ( uint32_t ) )"		2525075	1					
ANR	2526035	Callee	av_mallocz_array		2525075	0					
ANR	2526036	Identifier	av_mallocz_array		2525075	0					
ANR	2526037	ArgumentList	ctx -> mb_height		2525075	1					
ANR	2526038	Argument	ctx -> mb_height		2525075	0					
ANR	2526039	PtrMemberAccess	ctx -> mb_height		2525075	0					
ANR	2526040	Identifier	ctx		2525075	0					
ANR	2526041	Identifier	mb_height		2525075	1					
ANR	2526042	Argument	sizeof ( uint32_t )		2525075	1					
ANR	2526043	SizeofExpression	sizeof ( uint32_t )		2525075	0					
ANR	2526044	Sizeof	sizeof		2525075	0					
ANR	2526045	SizeofOperand	uint32_t		2525075	1					
ANR	2526046	IfStatement	if ( ! ctx -> mb_scan_index )		2525075	2					
ANR	2526047	Condition	! ctx -> mb_scan_index	287:12:5826:5844	2525075	0	True				
ANR	2526048	UnaryOperationExpression	! ctx -> mb_scan_index		2525075	0					
ANR	2526049	UnaryOperator	!		2525075	0					
ANR	2526050	PtrMemberAccess	ctx -> mb_scan_index		2525075	1					
ANR	2526051	Identifier	ctx		2525075	0					
ANR	2526052	Identifier	mb_scan_index		2525075	1					
ANR	2526053	ReturnStatement	return AVERROR ( ENOMEM ) ;	289:12:5860:5882	2525075	1	True				
ANR	2526054	CallExpression	AVERROR ( ENOMEM )		2525075	0					
ANR	2526055	Callee	AVERROR		2525075	0					
ANR	2526056	Identifier	AVERROR		2525075	0					
ANR	2526057	ArgumentList	ENOMEM		2525075	1					
ANR	2526058	Argument	ENOMEM		2525075	0					
ANR	2526059	Identifier	ENOMEM		2525075	0					
ANR	2526060	ForStatement	for ( i = 0 ; i < ctx -> mb_height ; i ++ )		2525075	36					
ANR	2526061	ForInit	i = 0 ;	295:9:5903:5908	2525075	0	True				
ANR	2526062	AssignmentExpression	i = 0		2525075	0		=			
ANR	2526063	Identifier	i		2525075	0					
ANR	2526064	PrimaryExpression	0		2525075	1					
ANR	2526065	Condition	i < ctx -> mb_height	295:16:5910:5927	2525075	1	True				
ANR	2526066	RelationalExpression	i < ctx -> mb_height		2525075	0		<			
ANR	2526067	Identifier	i		2525075	0					
ANR	2526068	PtrMemberAccess	ctx -> mb_height		2525075	1					
ANR	2526069	Identifier	ctx		2525075	0					
ANR	2526070	Identifier	mb_height		2525075	1					
ANR	2526071	PostIncDecOperationExpression	i ++	295:36:5930:5932	2525075	2	True				
ANR	2526072	Identifier	i		2525075	0					
ANR	2526073	IncDec	++		2525075	1					
ANR	2526074	CompoundStatement		289:41:5752:5752	2525075	3					
ANR	2526075	ExpressionStatement	ctx -> mb_scan_index [ i ] = AV_RB32 ( buf + 0x170 + ( i << 2 ) )	297:8:5946:6001	2525075	0	True				
ANR	2526076	AssignmentExpression	ctx -> mb_scan_index [ i ] = AV_RB32 ( buf + 0x170 + ( i << 2 ) )		2525075	0		=			
ANR	2526077	ArrayIndexing	ctx -> mb_scan_index [ i ]		2525075	0					
ANR	2526078	PtrMemberAccess	ctx -> mb_scan_index		2525075	0					
ANR	2526079	Identifier	ctx		2525075	0					
ANR	2526080	Identifier	mb_scan_index		2525075	1					
ANR	2526081	Identifier	i		2525075	1					
ANR	2526082	CallExpression	AV_RB32 ( buf + 0x170 + ( i << 2 ) )		2525075	1					
ANR	2526083	Callee	AV_RB32		2525075	0					
ANR	2526084	Identifier	AV_RB32		2525075	0					
ANR	2526085	ArgumentList	buf + 0x170 + ( i << 2 )		2525075	1					
ANR	2526086	Argument	buf + 0x170 + ( i << 2 )		2525075	0					
ANR	2526087	AdditiveExpression	buf + 0x170 + ( i << 2 )		2525075	0		+			
ANR	2526088	Identifier	buf		2525075	0					
ANR	2526089	AdditiveExpression	0x170 + ( i << 2 )		2525075	1		+			
ANR	2526090	PrimaryExpression	0x170		2525075	0					
ANR	2526091	ShiftExpression	i << 2		2525075	1		<<			
ANR	2526092	Identifier	i		2525075	0					
ANR	2526093	PrimaryExpression	2		2525075	1					
ANR	2526094	ExpressionStatement	"ff_dlog ( ctx -> avctx , ""mb scan index %d, pos %d: %u\\n"" , i , 0x170 + ( i << 2 ) , ctx -> mb_scan_index [ i ] )"	299:8:6012:6109	2525075	1	True				
ANR	2526095	CallExpression	"ff_dlog ( ctx -> avctx , ""mb scan index %d, pos %d: %u\\n"" , i , 0x170 + ( i << 2 ) , ctx -> mb_scan_index [ i ] )"		2525075	0					
ANR	2526096	Callee	ff_dlog		2525075	0					
ANR	2526097	Identifier	ff_dlog		2525075	0					
ANR	2526098	ArgumentList	ctx -> avctx		2525075	1					
ANR	2526099	Argument	ctx -> avctx		2525075	0					
ANR	2526100	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2526101	Identifier	ctx		2525075	0					
ANR	2526102	Identifier	avctx		2525075	1					
ANR	2526103	Argument	"""mb scan index %d, pos %d: %u\\n"""		2525075	1					
ANR	2526104	PrimaryExpression	"""mb scan index %d, pos %d: %u\\n"""		2525075	0					
ANR	2526105	Argument	i		2525075	2					
ANR	2526106	Identifier	i		2525075	0					
ANR	2526107	Argument	0x170 + ( i << 2 )		2525075	3					
ANR	2526108	AdditiveExpression	0x170 + ( i << 2 )		2525075	0		+			
ANR	2526109	PrimaryExpression	0x170		2525075	0					
ANR	2526110	ShiftExpression	i << 2		2525075	1		<<			
ANR	2526111	Identifier	i		2525075	0					
ANR	2526112	PrimaryExpression	2		2525075	1					
ANR	2526113	Argument	ctx -> mb_scan_index [ i ]		2525075	4					
ANR	2526114	ArrayIndexing	ctx -> mb_scan_index [ i ]		2525075	0					
ANR	2526115	PtrMemberAccess	ctx -> mb_scan_index		2525075	0					
ANR	2526116	Identifier	ctx		2525075	0					
ANR	2526117	Identifier	mb_scan_index		2525075	1					
ANR	2526118	Identifier	i		2525075	1					
ANR	2526119	IfStatement	if ( buf_size - ctx -> data_offset < ctx -> mb_scan_index [ i ] )		2525075	2					
ANR	2526120	Condition	buf_size - ctx -> data_offset < ctx -> mb_scan_index [ i ]	301:12:6124:6174	2525075	0	True				
ANR	2526121	RelationalExpression	buf_size - ctx -> data_offset < ctx -> mb_scan_index [ i ]		2525075	0		<			
ANR	2526122	AdditiveExpression	buf_size - ctx -> data_offset		2525075	0		-			
ANR	2526123	Identifier	buf_size		2525075	0					
ANR	2526124	PtrMemberAccess	ctx -> data_offset		2525075	1					
ANR	2526125	Identifier	ctx		2525075	0					
ANR	2526126	Identifier	data_offset		2525075	1					
ANR	2526127	ArrayIndexing	ctx -> mb_scan_index [ i ]		2525075	1					
ANR	2526128	PtrMemberAccess	ctx -> mb_scan_index		2525075	0					
ANR	2526129	Identifier	ctx		2525075	0					
ANR	2526130	Identifier	mb_scan_index		2525075	1					
ANR	2526131	Identifier	i		2525075	1					
ANR	2526132	CompoundStatement		295:65:5994:5994	2525075	1					
ANR	2526133	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""invalid mb scan index (%u vs %u).\\n"" , ctx -> mb_scan_index [ i ] , buf_size - ctx -> data_offset )"	303:12:6192:6355	2525075	0	True				
ANR	2526134	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""invalid mb scan index (%u vs %u).\\n"" , ctx -> mb_scan_index [ i ] , buf_size - ctx -> data_offset )"		2525075	0					
ANR	2526135	Callee	av_log		2525075	0					
ANR	2526136	Identifier	av_log		2525075	0					
ANR	2526137	ArgumentList	ctx -> avctx		2525075	1					
ANR	2526138	Argument	ctx -> avctx		2525075	0					
ANR	2526139	PtrMemberAccess	ctx -> avctx		2525075	0					
ANR	2526140	Identifier	ctx		2525075	0					
ANR	2526141	Identifier	avctx		2525075	1					
ANR	2526142	Argument	AV_LOG_ERROR		2525075	1					
ANR	2526143	Identifier	AV_LOG_ERROR		2525075	0					
ANR	2526144	Argument	"""invalid mb scan index (%u vs %u).\\n"""		2525075	2					
ANR	2526145	PrimaryExpression	"""invalid mb scan index (%u vs %u).\\n"""		2525075	0					
ANR	2526146	Argument	ctx -> mb_scan_index [ i ]		2525075	3					
ANR	2526147	ArrayIndexing	ctx -> mb_scan_index [ i ]		2525075	0					
ANR	2526148	PtrMemberAccess	ctx -> mb_scan_index		2525075	0					
ANR	2526149	Identifier	ctx		2525075	0					
ANR	2526150	Identifier	mb_scan_index		2525075	1					
ANR	2526151	Identifier	i		2525075	1					
ANR	2526152	Argument	buf_size - ctx -> data_offset		2525075	4					
ANR	2526153	AdditiveExpression	buf_size - ctx -> data_offset		2525075	0		-			
ANR	2526154	Identifier	buf_size		2525075	0					
ANR	2526155	PtrMemberAccess	ctx -> data_offset		2525075	1					
ANR	2526156	Identifier	ctx		2525075	0					
ANR	2526157	Identifier	data_offset		2525075	1					
ANR	2526158	ReturnStatement	return AVERROR_INVALIDDATA ;	309:12:6370:6396	2525075	1	True				
ANR	2526159	Identifier	AVERROR_INVALIDDATA		2525075	0					
ANR	2526160	ReturnStatement	return 0 ;	317:4:6423:6431	2525075	37	True				
ANR	2526161	PrimaryExpression	0		2525075	0					
ANR	2526162	ReturnType	static int		2525075	1					
ANR	2526163	Identifier	dnxhd_decode_header		2525075	2					
ANR	2526164	ParameterList	"DNXHDContext * ctx , AVFrame * frame , const uint8_t * buf , int buf_size , int first_field"		2525075	3					
ANR	2526165	Parameter	DNXHDContext * ctx	1:31:31:47	2525075	0	True				
ANR	2526166	ParameterType	DNXHDContext *		2525075	0					
ANR	2526167	Identifier	ctx		2525075	1					
ANR	2526168	Parameter	AVFrame * frame	1:50:50:63	2525075	1	True				
ANR	2526169	ParameterType	AVFrame *		2525075	0					
ANR	2526170	Identifier	frame		2525075	1					
ANR	2526171	Parameter	const uint8_t * buf	3:31:98:115	2525075	2	True				
ANR	2526172	ParameterType	const uint8_t *		2525075	0					
ANR	2526173	Identifier	buf		2525075	1					
ANR	2526174	Parameter	int buf_size	3:51:118:129	2525075	3	True				
ANR	2526175	ParameterType	int		2525075	0					
ANR	2526176	Identifier	buf_size		2525075	1					
ANR	2526177	Parameter	int first_field	5:31:164:178	2525075	4	True				
ANR	2526178	ParameterType	int		2525075	0					
ANR	2526179	Identifier	first_field		2525075	1					
ANR	2526180	CFGEntryNode	ENTRY		2525075		True				
ANR	2526181	CFGExitNode	EXIT		2525075		True				
ANR	2526182	Symbol	ENOMEM		2525075						
ANR	2526183	Symbol	ff_zigzag_direct		2525075						
ANR	2526184	Symbol	dnxhd_decode_dct_block_8		2525075						
ANR	2526185	Symbol	av_mallocz_array		2525075						
ANR	2526186	Symbol	& ctx -> idsp		2525075						
ANR	2526187	Symbol	& ctx -> mb_scan_index		2525075						
ANR	2526188	Symbol	AV_RB16		2525075						
ANR	2526189	Symbol	dnxhd_init_vlc		2525075						
ANR	2526190	Symbol	ctx -> width		2525075						
ANR	2526191	Symbol	bitdepth		2525075						
ANR	2526192	Symbol	memcmp		2525075						
ANR	2526193	Symbol	ctx -> avctx -> bits_per_raw_sample		2525075						
ANR	2526194	Symbol	ctx -> avctx -> sample_aspect_ratio		2525075						
ANR	2526195	Symbol	AV_LOG_DEBUG		2525075						
ANR	2526196	Symbol	ctx -> bit_depth		2525075						
ANR	2526197	Symbol	ret		2525075						
ANR	2526198	Symbol	ctx -> height		2525075						
ANR	2526199	Symbol	* ctx -> avctx		2525075						
ANR	2526200	Symbol	* buf		2525075						
ANR	2526201	Symbol	ctx -> is_444		2525075						
ANR	2526202	Symbol	ctx		2525075						
ANR	2526203	Symbol	buf_size		2525075						
ANR	2526204	Symbol	ctx -> decode_dct_block		2525075						
ANR	2526205	Symbol	ctx -> cur_field		2525075						
ANR	2526206	Symbol	ctx -> idsp . idct_permutation		2525075						
ANR	2526207	Symbol	ctx -> cid_table -> coding_unit_size		2525075						
ANR	2526208	Symbol	old_mb_height		2525075						
ANR	2526209	Symbol	AV_LOG_VERBOSE		2525075						
ANR	2526210	Symbol	header_prefixhr1		2525075						
ANR	2526211	Symbol	ctx -> data_offset		2525075						
ANR	2526212	Symbol	ctx -> avctx		2525075						
ANR	2526213	Symbol	first_field		2525075						
ANR	2526214	Symbol	header_prefixhr2		2525075						
ANR	2526215	Symbol	* ctx -> mb_scan_index		2525075						
ANR	2526216	Symbol	ctx -> mbaff		2525075						
ANR	2526217	Symbol	ctx -> act		2525075						
ANR	2526218	Symbol	ctx -> cid_table -> cid		2525075						
ANR	2526219	Symbol	frame		2525075						
ANR	2526220	Symbol	cid		2525075						
ANR	2526221	Symbol	AV_PIX_FMT_GBRP12		2525075						
ANR	2526222	Symbol	AV_PIX_FMT_GBRP10		2525075						
ANR	2526223	Symbol	* frame		2525075						
ANR	2526224	Symbol	& ctx -> avctx -> sample_aspect_ratio . num		2525075						
ANR	2526225	Symbol	ctx -> mb_height		2525075						
ANR	2526226	Symbol	AV_RB32		2525075						
ANR	2526227	Symbol	& ctx -> avctx -> sample_aspect_ratio . den		2525075						
ANR	2526228	Symbol	ctx -> cid_table		2525075						
ANR	2526229	Symbol	ctx -> mb_width		2525075						
ANR	2526230	Symbol	dnxhd_decode_dct_block_10_444		2525075						
ANR	2526231	Symbol	ctx -> pix_fmt		2525075						
ANR	2526232	Symbol	DNXHD_VARIABLE		2525075						
ANR	2526233	Symbol	AV_PIX_FMT_YUV444P10		2525075						
ANR	2526234	Symbol	AV_PIX_FMT_YUV444P12		2525075						
ANR	2526235	Symbol	header_prefix444		2525075						
ANR	2526236	Symbol	AV_LOG_ERROR		2525075						
ANR	2526237	Symbol	dnxhd_decode_dct_block_10		2525075						
ANR	2526238	Symbol	ctx -> idsp		2525075						
ANR	2526239	Symbol	i		2525075						
ANR	2526240	Symbol	dnxhd_decode_dct_block_12		2525075						
ANR	2526241	Symbol	AV_PIX_FMT_YUV422P		2525075						
ANR	2526242	Symbol	* ctx		2525075						
ANR	2526243	Symbol	AV_PIX_FMT_YUV422P10		2525075						
ANR	2526244	Symbol	buf		2525075						
ANR	2526245	Symbol	ctx -> cid_table -> width		2525075						
ANR	2526246	Symbol	AV_PIX_FMT_YUV422P12		2525075						
ANR	2526247	Symbol	* i		2525075						
ANR	2526248	Symbol	& ctx -> bdsp		2525075						
ANR	2526249	Symbol	header_prefix		2525075						
ANR	2526250	Symbol	AVERROR_INVALIDDATA		2525075						
ANR	2526251	Symbol	dnxhd_decode_dct_block_12_444		2525075						
ANR	2526252	Symbol	& ctx -> scantable		2525075						
ANR	2526253	Symbol	ctx -> mb_scan_index		2525075						
ANR	2526254	Symbol	* * ctx		2525075						
ANR	2526255	Symbol	AVERROR		2525075						
ANR	2526256	Symbol	AV_LOG_WARNING		2525075						
ANR	2526257	Symbol	frame -> interlaced_frame		2525075						
ANR	2526258	Symbol	frame -> top_field_first		2525075						
ANR	2526259	Symbol	* ctx -> cid_table		2525075						
ANR	2526260	Symbol	& ctx -> avctx -> sample_aspect_ratio		2525075						
ANR	2526261	Symbol	old_bit_depth		2525075						
