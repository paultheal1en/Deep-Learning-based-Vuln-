command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2564609	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_bit_allocation_0.c								
ANR	2564610	Function	do_bit_allocation	1:0:0:1226							
ANR	2564611	FunctionDef	"do_bit_allocation (AC3DecodeContext * ctx , int flags)"		2564610	0					
ANR	2564612	CompoundStatement		3:0:65:1226	2564610	0					
ANR	2564613	IdentifierDeclStatement	ac3_audio_block * ab = & ctx -> audio_block ;	5:4:72:111	2564610	0	True				
ANR	2564614	IdentifierDecl	* ab = & ctx -> audio_block		2564610	0					
ANR	2564615	IdentifierDeclType	ac3_audio_block *		2564610	0					
ANR	2564616	Identifier	ab		2564610	1					
ANR	2564617	AssignmentExpression	* ab = & ctx -> audio_block		2564610	2		=			
ANR	2564618	Identifier	ab		2564610	0					
ANR	2564619	UnaryOperationExpression	& ctx -> audio_block		2564610	1					
ANR	2564620	UnaryOperator	&		2564610	0					
ANR	2564621	PtrMemberAccess	ctx -> audio_block		2564610	1					
ANR	2564622	Identifier	ctx		2564610	0					
ANR	2564623	Identifier	audio_block		2564610	1					
ANR	2564624	IdentifierDeclStatement	"int i , snroffst = 0 ;"	7:4:118:137	2564610	1	True				
ANR	2564625	IdentifierDecl	i		2564610	0					
ANR	2564626	IdentifierDeclType	int		2564610	0					
ANR	2564627	Identifier	i		2564610	1					
ANR	2564628	IdentifierDecl	snroffst = 0		2564610	1					
ANR	2564629	IdentifierDeclType	int		2564610	0					
ANR	2564630	Identifier	snroffst		2564610	1					
ANR	2564631	AssignmentExpression	snroffst = 0		2564610	2		=			
ANR	2564632	Identifier	snroffst		2564610	0					
ANR	2564633	PrimaryExpression	0		2564610	1					
ANR	2564634	IfStatement	if ( ! flags )		2564610	2					
ANR	2564635	Condition	! flags	11:8:150:155	2564610	0	True				
ANR	2564636	UnaryOperationExpression	! flags		2564610	0					
ANR	2564637	UnaryOperator	!		2564610	0					
ANR	2564638	Identifier	flags		2564610	1					
ANR	2564639	ReturnStatement	return ;	13:8:204:210	2564610	1	True				
ANR	2564640	IfStatement	if ( ab -> flags & AC3_AB_SNROFFSTE )		2564610	3					
ANR	2564641	Condition	ab -> flags & AC3_AB_SNROFFSTE	17:8:223:250	2564610	0	True				
ANR	2564642	BitAndExpression	ab -> flags & AC3_AB_SNROFFSTE		2564610	0		&			
ANR	2564643	PtrMemberAccess	ab -> flags		2564610	0					
ANR	2564644	Identifier	ab		2564610	0					
ANR	2564645	Identifier	flags		2564610	1					
ANR	2564646	Identifier	AC3_AB_SNROFFSTE		2564610	1					
ANR	2564647	CompoundStatement		15:38:187:187	2564610	1					
ANR	2564648	ExpressionStatement	snroffst += ab -> csnroffst	19:8:303:328	2564610	0	True				
ANR	2564649	AssignmentExpression	snroffst += ab -> csnroffst		2564610	0		+=			
ANR	2564650	Identifier	snroffst		2564610	0					
ANR	2564651	PtrMemberAccess	ab -> csnroffst		2564610	1					
ANR	2564652	Identifier	ab		2564610	0					
ANR	2564653	Identifier	csnroffst		2564610	1					
ANR	2564654	IfStatement	if ( ab -> flags & AC3_AB_CPLINU )		2564610	1					
ANR	2564655	Condition	ab -> flags & AC3_AB_CPLINU	21:12:343:367	2564610	0	True				
ANR	2564656	BitAndExpression	ab -> flags & AC3_AB_CPLINU		2564610	0		&			
ANR	2564657	PtrMemberAccess	ab -> flags		2564610	0					
ANR	2564658	Identifier	ab		2564610	0					
ANR	2564659	Identifier	flags		2564610	1					
ANR	2564660	Identifier	AC3_AB_CPLINU		2564610	1					
ANR	2564661	ExpressionStatement	snroffst += ab -> cplfsnroffst	23:12:383:411	2564610	1	True				
ANR	2564662	AssignmentExpression	snroffst += ab -> cplfsnroffst		2564610	0		+=			
ANR	2564663	Identifier	snroffst		2564610	0					
ANR	2564664	PtrMemberAccess	ab -> cplfsnroffst		2564610	1					
ANR	2564665	Identifier	ab		2564610	0					
ANR	2564666	Identifier	cplfsnroffst		2564610	1					
ANR	2564667	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564610	2					
ANR	2564668	ForInit	i = 0 ;	25:13:427:432	2564610	0	True				
ANR	2564669	AssignmentExpression	i = 0		2564610	0		=			
ANR	2564670	Identifier	i		2564610	0					
ANR	2564671	PrimaryExpression	0		2564610	1					
ANR	2564672	Condition	i < ctx -> bsi . nfchans	25:20:434:453	2564610	1	True				
ANR	2564673	RelationalExpression	i < ctx -> bsi . nfchans		2564610	0		<			
ANR	2564674	Identifier	i		2564610	0					
ANR	2564675	MemberAccess	ctx -> bsi . nfchans		2564610	1					
ANR	2564676	PtrMemberAccess	ctx -> bsi		2564610	0					
ANR	2564677	Identifier	ctx		2564610	0					
ANR	2564678	Identifier	bsi		2564610	1					
ANR	2564679	Identifier	nfchans		2564610	1					
ANR	2564680	PostIncDecOperationExpression	i ++	25:42:456:458	2564610	2	True				
ANR	2564681	Identifier	i		2564610	0					
ANR	2564682	IncDec	++		2564610	1					
ANR	2564683	ExpressionStatement	snroffst += ab -> fsnroffst [ i ]	27:12:474:502	2564610	3	True				
ANR	2564684	AssignmentExpression	snroffst += ab -> fsnroffst [ i ]		2564610	0		+=			
ANR	2564685	Identifier	snroffst		2564610	0					
ANR	2564686	ArrayIndexing	ab -> fsnroffst [ i ]		2564610	1					
ANR	2564687	PtrMemberAccess	ab -> fsnroffst		2564610	0					
ANR	2564688	Identifier	ab		2564610	0					
ANR	2564689	Identifier	fsnroffst		2564610	1					
ANR	2564690	Identifier	i		2564610	1					
ANR	2564691	IfStatement	if ( ctx -> bsi . flags & AC3_BSI_LFEON )		2564610	3					
ANR	2564692	Condition	ctx -> bsi . flags & AC3_BSI_LFEON	29:12:517:546	2564610	0	True				
ANR	2564693	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		2564610	0		&			
ANR	2564694	MemberAccess	ctx -> bsi . flags		2564610	0					
ANR	2564695	PtrMemberAccess	ctx -> bsi		2564610	0					
ANR	2564696	Identifier	ctx		2564610	0					
ANR	2564697	Identifier	bsi		2564610	1					
ANR	2564698	Identifier	flags		2564610	1					
ANR	2564699	Identifier	AC3_BSI_LFEON		2564610	1					
ANR	2564700	ExpressionStatement	snroffst += ab -> lfefsnroffst	31:12:562:590	2564610	1	True				
ANR	2564701	AssignmentExpression	snroffst += ab -> lfefsnroffst		2564610	0		+=			
ANR	2564702	Identifier	snroffst		2564610	0					
ANR	2564703	PtrMemberAccess	ab -> lfefsnroffst		2564610	1					
ANR	2564704	Identifier	ab		2564610	0					
ANR	2564705	Identifier	lfefsnroffst		2564610	1					
ANR	2564706	IfStatement	if ( ! snroffst )		2564610	4					
ANR	2564707	Condition	! snroffst	33:12:605:613	2564610	0	True				
ANR	2564708	UnaryOperationExpression	! snroffst		2564610	0					
ANR	2564709	UnaryOperator	!		2564610	0					
ANR	2564710	Identifier	snroffst		2564610	1					
ANR	2564711	CompoundStatement		31:23:550:550	2564610	1					
ANR	2564712	ExpressionStatement	"memset ( ab -> cplbap , 0 , sizeof ( ab -> cplbap ) )"	35:12:631:673	2564610	0	True				
ANR	2564713	CallExpression	"memset ( ab -> cplbap , 0 , sizeof ( ab -> cplbap ) )"		2564610	0					
ANR	2564714	Callee	memset		2564610	0					
ANR	2564715	Identifier	memset		2564610	0					
ANR	2564716	ArgumentList	ab -> cplbap		2564610	1					
ANR	2564717	Argument	ab -> cplbap		2564610	0					
ANR	2564718	PtrMemberAccess	ab -> cplbap		2564610	0					
ANR	2564719	Identifier	ab		2564610	0					
ANR	2564720	Identifier	cplbap		2564610	1					
ANR	2564721	Argument	0		2564610	1					
ANR	2564722	PrimaryExpression	0		2564610	0					
ANR	2564723	Argument	sizeof ( ab -> cplbap )		2564610	2					
ANR	2564724	SizeofExpression	sizeof ( ab -> cplbap )		2564610	0					
ANR	2564725	Sizeof	sizeof		2564610	0					
ANR	2564726	PtrMemberAccess	ab -> cplbap		2564610	1					
ANR	2564727	Identifier	ab		2564610	0					
ANR	2564728	Identifier	cplbap		2564610	1					
ANR	2564729	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564610	1					
ANR	2564730	ForInit	i = 0 ;	37:17:693:698	2564610	0	True				
ANR	2564731	AssignmentExpression	i = 0		2564610	0		=			
ANR	2564732	Identifier	i		2564610	0					
ANR	2564733	PrimaryExpression	0		2564610	1					
ANR	2564734	Condition	i < ctx -> bsi . nfchans	37:24:700:719	2564610	1	True				
ANR	2564735	RelationalExpression	i < ctx -> bsi . nfchans		2564610	0		<			
ANR	2564736	Identifier	i		2564610	0					
ANR	2564737	MemberAccess	ctx -> bsi . nfchans		2564610	1					
ANR	2564738	PtrMemberAccess	ctx -> bsi		2564610	0					
ANR	2564739	Identifier	ctx		2564610	0					
ANR	2564740	Identifier	bsi		2564610	1					
ANR	2564741	Identifier	nfchans		2564610	1					
ANR	2564742	PostIncDecOperationExpression	i ++	37:46:722:724	2564610	2	True				
ANR	2564743	Identifier	i		2564610	0					
ANR	2564744	IncDec	++		2564610	1					
ANR	2564745	ExpressionStatement	"memset ( ab -> bap [ i ] , 0 , sizeof ( ab -> bap [ i ] ) )"	39:16:744:786	2564610	3	True				
ANR	2564746	CallExpression	"memset ( ab -> bap [ i ] , 0 , sizeof ( ab -> bap [ i ] ) )"		2564610	0					
ANR	2564747	Callee	memset		2564610	0					
ANR	2564748	Identifier	memset		2564610	0					
ANR	2564749	ArgumentList	ab -> bap [ i ]		2564610	1					
ANR	2564750	Argument	ab -> bap [ i ]		2564610	0					
ANR	2564751	ArrayIndexing	ab -> bap [ i ]		2564610	0					
ANR	2564752	PtrMemberAccess	ab -> bap		2564610	0					
ANR	2564753	Identifier	ab		2564610	0					
ANR	2564754	Identifier	bap		2564610	1					
ANR	2564755	Identifier	i		2564610	1					
ANR	2564756	Argument	0		2564610	1					
ANR	2564757	PrimaryExpression	0		2564610	0					
ANR	2564758	Argument	sizeof ( ab -> bap [ i ] )		2564610	2					
ANR	2564759	SizeofExpression	sizeof ( ab -> bap [ i ] )		2564610	0					
ANR	2564760	Sizeof	sizeof		2564610	0					
ANR	2564761	ArrayIndexing	ab -> bap [ i ]		2564610	1					
ANR	2564762	PtrMemberAccess	ab -> bap		2564610	0					
ANR	2564763	Identifier	ab		2564610	0					
ANR	2564764	Identifier	bap		2564610	1					
ANR	2564765	Identifier	i		2564610	1					
ANR	2564766	ExpressionStatement	"memset ( ab -> lfebap , 0 , sizeof ( ab -> lfebap ) )"	41:12:801:843	2564610	2	True				
ANR	2564767	CallExpression	"memset ( ab -> lfebap , 0 , sizeof ( ab -> lfebap ) )"		2564610	0					
ANR	2564768	Callee	memset		2564610	0					
ANR	2564769	Identifier	memset		2564610	0					
ANR	2564770	ArgumentList	ab -> lfebap		2564610	1					
ANR	2564771	Argument	ab -> lfebap		2564610	0					
ANR	2564772	PtrMemberAccess	ab -> lfebap		2564610	0					
ANR	2564773	Identifier	ab		2564610	0					
ANR	2564774	Identifier	lfebap		2564610	1					
ANR	2564775	Argument	0		2564610	1					
ANR	2564776	PrimaryExpression	0		2564610	0					
ANR	2564777	Argument	sizeof ( ab -> lfebap )		2564610	2					
ANR	2564778	SizeofExpression	sizeof ( ab -> lfebap )		2564610	0					
ANR	2564779	Sizeof	sizeof		2564610	0					
ANR	2564780	PtrMemberAccess	ab -> lfebap		2564610	1					
ANR	2564781	Identifier	ab		2564610	0					
ANR	2564782	Identifier	lfebap		2564610	1					
ANR	2564783	ReturnStatement	return ;	45:12:860:866	2564610	3	True				
ANR	2564784	IfStatement	if ( ( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 ) )		2564610	4					
ANR	2564785	Condition	( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 )	55:8:931:973	2564610	0	True				
ANR	2564786	AndExpression	( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 )		2564610	0		&&			
ANR	2564787	BitAndExpression	ab -> flags & AC3_AB_CPLINU		2564610	0		&			
ANR	2564788	PtrMemberAccess	ab -> flags		2564610	0					
ANR	2564789	Identifier	ab		2564610	0					
ANR	2564790	Identifier	flags		2564610	1					
ANR	2564791	Identifier	AC3_AB_CPLINU		2564610	1					
ANR	2564792	BitAndExpression	flags & 64		2564610	1		&			
ANR	2564793	Identifier	flags		2564610	0					
ANR	2564794	PrimaryExpression	64		2564610	1					
ANR	2564795	ExpressionStatement	"do_bit_allocation1 ( ctx , 5 )"	57:8:985:1011	2564610	1	True				
ANR	2564796	CallExpression	"do_bit_allocation1 ( ctx , 5 )"		2564610	0					
ANR	2564797	Callee	do_bit_allocation1		2564610	0					
ANR	2564798	Identifier	do_bit_allocation1		2564610	0					
ANR	2564799	ArgumentList	ctx		2564610	1					
ANR	2564800	Argument	ctx		2564610	0					
ANR	2564801	Identifier	ctx		2564610	0					
ANR	2564802	Argument	5		2564610	1					
ANR	2564803	PrimaryExpression	5		2564610	0					
ANR	2564804	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564610	5					
ANR	2564805	ForInit	i = 0 ;	59:9:1023:1028	2564610	0	True				
ANR	2564806	AssignmentExpression	i = 0		2564610	0		=			
ANR	2564807	Identifier	i		2564610	0					
ANR	2564808	PrimaryExpression	0		2564610	1					
ANR	2564809	Condition	i < ctx -> bsi . nfchans	59:16:1030:1049	2564610	1	True				
ANR	2564810	RelationalExpression	i < ctx -> bsi . nfchans		2564610	0		<			
ANR	2564811	Identifier	i		2564610	0					
ANR	2564812	MemberAccess	ctx -> bsi . nfchans		2564610	1					
ANR	2564813	PtrMemberAccess	ctx -> bsi		2564610	0					
ANR	2564814	Identifier	ctx		2564610	0					
ANR	2564815	Identifier	bsi		2564610	1					
ANR	2564816	Identifier	nfchans		2564610	1					
ANR	2564817	PostIncDecOperationExpression	i ++	59:38:1052:1054	2564610	2	True				
ANR	2564818	Identifier	i		2564610	0					
ANR	2564819	IncDec	++		2564610	1					
ANR	2564820	IfStatement	if ( flags & ( 1 << i ) )		2564610	3					
ANR	2564821	Condition	flags & ( 1 << i )	61:12:1070:1085	2564610	0	True				
ANR	2564822	BitAndExpression	flags & ( 1 << i )		2564610	0		&			
ANR	2564823	Identifier	flags		2564610	0					
ANR	2564824	ShiftExpression	1 << i		2564610	1		<<			
ANR	2564825	PrimaryExpression	1		2564610	0					
ANR	2564826	Identifier	i		2564610	1					
ANR	2564827	ExpressionStatement	"do_bit_allocation1 ( ctx , i )"	63:12:1101:1127	2564610	1	True				
ANR	2564828	CallExpression	"do_bit_allocation1 ( ctx , i )"		2564610	0					
ANR	2564829	Callee	do_bit_allocation1		2564610	0					
ANR	2564830	Identifier	do_bit_allocation1		2564610	0					
ANR	2564831	ArgumentList	ctx		2564610	1					
ANR	2564832	Argument	ctx		2564610	0					
ANR	2564833	Identifier	ctx		2564610	0					
ANR	2564834	Argument	i		2564610	1					
ANR	2564835	Identifier	i		2564610	0					
ANR	2564836	IfStatement	if ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 ) )		2564610	6					
ANR	2564837	Condition	( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 )	65:8:1138:1185	2564610	0	True				
ANR	2564838	AndExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 )		2564610	0		&&			
ANR	2564839	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		2564610	0		&			
ANR	2564840	MemberAccess	ctx -> bsi . flags		2564610	0					
ANR	2564841	PtrMemberAccess	ctx -> bsi		2564610	0					
ANR	2564842	Identifier	ctx		2564610	0					
ANR	2564843	Identifier	bsi		2564610	1					
ANR	2564844	Identifier	flags		2564610	1					
ANR	2564845	Identifier	AC3_BSI_LFEON		2564610	1					
ANR	2564846	BitAndExpression	flags & 32		2564610	1		&			
ANR	2564847	Identifier	flags		2564610	0					
ANR	2564848	PrimaryExpression	32		2564610	1					
ANR	2564849	ExpressionStatement	"do_bit_allocation1 ( ctx , 6 )"	67:8:1197:1223	2564610	1	True				
ANR	2564850	CallExpression	"do_bit_allocation1 ( ctx , 6 )"		2564610	0					
ANR	2564851	Callee	do_bit_allocation1		2564610	0					
ANR	2564852	Identifier	do_bit_allocation1		2564610	0					
ANR	2564853	ArgumentList	ctx		2564610	1					
ANR	2564854	Argument	ctx		2564610	0					
ANR	2564855	Identifier	ctx		2564610	0					
ANR	2564856	Argument	6		2564610	1					
ANR	2564857	PrimaryExpression	6		2564610	0					
ANR	2564858	ReturnType	static void		2564610	1					
ANR	2564859	Identifier	do_bit_allocation		2564610	2					
ANR	2564860	ParameterList	"AC3DecodeContext * ctx , int flags"		2564610	3					
ANR	2564861	Parameter	AC3DecodeContext * ctx	1:30:30:50	2564610	0	True				
ANR	2564862	ParameterType	AC3DecodeContext *		2564610	0					
ANR	2564863	Identifier	ctx		2564610	1					
ANR	2564864	Parameter	int flags	1:53:53:61	2564610	1	True				
ANR	2564865	ParameterType	int		2564610	0					
ANR	2564866	Identifier	flags		2564610	1					
ANR	2564867	CFGEntryNode	ENTRY		2564610		True				
ANR	2564868	CFGExitNode	EXIT		2564610		True				
ANR	2564869	Symbol	* ab		2564610						
ANR	2564870	Symbol	flags		2564610						
ANR	2564871	Symbol	ab -> cplbap		2564610						
ANR	2564872	Symbol	& ctx -> audio_block		2564610						
ANR	2564873	Symbol	ab -> lfefsnroffst		2564610						
ANR	2564874	Symbol	* * ab		2564610						
ANR	2564875	Symbol	snroffst		2564610						
ANR	2564876	Symbol	ctx -> bsi . nfchans		2564610						
ANR	2564877	Symbol	* ab -> bap		2564610						
ANR	2564878	Symbol	AC3_AB_SNROFFSTE		2564610						
ANR	2564879	Symbol	AC3_BSI_LFEON		2564610						
ANR	2564880	Symbol	ab -> csnroffst		2564610						
ANR	2564881	Symbol	ab		2564610						
ANR	2564882	Symbol	ab -> flags		2564610						
ANR	2564883	Symbol	ctx -> bsi		2564610						
ANR	2564884	Symbol	ctx		2564610						
ANR	2564885	Symbol	* ab -> fsnroffst		2564610						
ANR	2564886	Symbol	i		2564610						
ANR	2564887	Symbol	ab -> fsnroffst		2564610						
ANR	2564888	Symbol	ab -> lfebap		2564610						
ANR	2564889	Symbol	ab -> cplfsnroffst		2564610						
ANR	2564890	Symbol	ab -> bap		2564610						
ANR	2564891	Symbol	* ctx		2564610						
ANR	2564892	Symbol	AC3_AB_CPLINU		2564610						
ANR	2564893	Symbol	* i		2564610						
ANR	2564894	Symbol	ctx -> bsi . flags		2564610						
