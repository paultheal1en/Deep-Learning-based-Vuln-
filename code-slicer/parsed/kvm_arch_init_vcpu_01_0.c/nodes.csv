command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5093701	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kvm_arch_init_vcpu_01_0.c								
ANR	5093702	Function	kvm_arch_init_vcpu	1:0:0:3876							
ANR	5093703	FunctionDef	kvm_arch_init_vcpu (CPUState * cs)		5093702	0					
ANR	5093704	CompoundStatement		3:0:38:3876	5093702	0					
ANR	5093705	IdentifierDeclStatement	"int i , ret , arraylen ;"	5:4:45:65	5093702	0	True				
ANR	5093706	IdentifierDecl	i		5093702	0					
ANR	5093707	IdentifierDeclType	int		5093702	0					
ANR	5093708	Identifier	i		5093702	1					
ANR	5093709	IdentifierDecl	ret		5093702	1					
ANR	5093710	IdentifierDeclType	int		5093702	0					
ANR	5093711	Identifier	ret		5093702	1					
ANR	5093712	IdentifierDecl	arraylen		5093702	2					
ANR	5093713	IdentifierDeclType	int		5093702	0					
ANR	5093714	Identifier	arraylen		5093702	1					
ANR	5093715	IdentifierDeclStatement	uint64_t v ;	7:4:72:82	5093702	1	True				
ANR	5093716	IdentifierDecl	v		5093702	0					
ANR	5093717	IdentifierDeclType	uint64_t		5093702	0					
ANR	5093718	Identifier	v		5093702	1					
ANR	5093719	IdentifierDeclStatement	struct kvm_one_reg r ;	9:4:89:109	5093702	2	True				
ANR	5093720	IdentifierDecl	r		5093702	0					
ANR	5093721	IdentifierDeclType	struct kvm_one_reg		5093702	0					
ANR	5093722	Identifier	r		5093702	1					
ANR	5093723	IdentifierDeclStatement	struct kvm_reg_list rl ;	11:4:116:138	5093702	3	True				
ANR	5093724	IdentifierDecl	rl		5093702	0					
ANR	5093725	IdentifierDeclType	struct kvm_reg_list		5093702	0					
ANR	5093726	Identifier	rl		5093702	1					
ANR	5093727	IdentifierDeclStatement	struct kvm_reg_list * rlp ;	13:4:145:169	5093702	4	True				
ANR	5093728	IdentifierDecl	* rlp		5093702	0					
ANR	5093729	IdentifierDeclType	struct kvm_reg_list *		5093702	0					
ANR	5093730	Identifier	rlp		5093702	1					
ANR	5093731	IdentifierDeclStatement	ARMCPU * cpu = ARM_CPU ( cs ) ;	15:4:176:201	5093702	5	True				
ANR	5093732	IdentifierDecl	* cpu = ARM_CPU ( cs )		5093702	0					
ANR	5093733	IdentifierDeclType	ARMCPU *		5093702	0					
ANR	5093734	Identifier	cpu		5093702	1					
ANR	5093735	AssignmentExpression	* cpu = ARM_CPU ( cs )		5093702	2		=			
ANR	5093736	Identifier	cpu		5093702	0					
ANR	5093737	CallExpression	ARM_CPU ( cs )		5093702	1					
ANR	5093738	Callee	ARM_CPU		5093702	0					
ANR	5093739	Identifier	ARM_CPU		5093702	0					
ANR	5093740	ArgumentList	cs		5093702	1					
ANR	5093741	Argument	cs		5093702	0					
ANR	5093742	Identifier	cs		5093702	0					
ANR	5093743	IfStatement	if ( cpu -> kvm_target == QEMU_KVM_ARM_TARGET_NONE )		5093702	6					
ANR	5093744	Condition	cpu -> kvm_target == QEMU_KVM_ARM_TARGET_NONE	19:8:214:256	5093702	0	True				
ANR	5093745	EqualityExpression	cpu -> kvm_target == QEMU_KVM_ARM_TARGET_NONE		5093702	0		==			
ANR	5093746	PtrMemberAccess	cpu -> kvm_target		5093702	0					
ANR	5093747	Identifier	cpu		5093702	0					
ANR	5093748	Identifier	kvm_target		5093702	1					
ANR	5093749	Identifier	QEMU_KVM_ARM_TARGET_NONE		5093702	1					
ANR	5093750	CompoundStatement		17:53:220:220	5093702	1					
ANR	5093751	ExpressionStatement	"fprintf ( stderr , ""KVM is not supported for this guest CPU type\\n"" )"	21:8:270:335	5093702	0	True				
ANR	5093752	CallExpression	"fprintf ( stderr , ""KVM is not supported for this guest CPU type\\n"" )"		5093702	0					
ANR	5093753	Callee	fprintf		5093702	0					
ANR	5093754	Identifier	fprintf		5093702	0					
ANR	5093755	ArgumentList	stderr		5093702	1					
ANR	5093756	Argument	stderr		5093702	0					
ANR	5093757	Identifier	stderr		5093702	0					
ANR	5093758	Argument	"""KVM is not supported for this guest CPU type\\n"""		5093702	1					
ANR	5093759	PrimaryExpression	"""KVM is not supported for this guest CPU type\\n"""		5093702	0					
ANR	5093760	ReturnStatement	return - EINVAL ;	23:8:346:360	5093702	1	True				
ANR	5093761	UnaryOperationExpression	- EINVAL		5093702	0					
ANR	5093762	UnaryOperator	-		5093702	0					
ANR	5093763	Identifier	EINVAL		5093702	1					
ANR	5093764	ExpressionStatement	"memset ( cpu -> kvm_init_features , 0 , sizeof ( cpu -> kvm_init_features ) )"	31:4:424:489	5093702	7	True				
ANR	5093765	CallExpression	"memset ( cpu -> kvm_init_features , 0 , sizeof ( cpu -> kvm_init_features ) )"		5093702	0					
ANR	5093766	Callee	memset		5093702	0					
ANR	5093767	Identifier	memset		5093702	0					
ANR	5093768	ArgumentList	cpu -> kvm_init_features		5093702	1					
ANR	5093769	Argument	cpu -> kvm_init_features		5093702	0					
ANR	5093770	PtrMemberAccess	cpu -> kvm_init_features		5093702	0					
ANR	5093771	Identifier	cpu		5093702	0					
ANR	5093772	Identifier	kvm_init_features		5093702	1					
ANR	5093773	Argument	0		5093702	1					
ANR	5093774	PrimaryExpression	0		5093702	0					
ANR	5093775	Argument	sizeof ( cpu -> kvm_init_features )		5093702	2					
ANR	5093776	SizeofExpression	sizeof ( cpu -> kvm_init_features )		5093702	0					
ANR	5093777	Sizeof	sizeof		5093702	0					
ANR	5093778	PtrMemberAccess	cpu -> kvm_init_features		5093702	1					
ANR	5093779	Identifier	cpu		5093702	0					
ANR	5093780	Identifier	kvm_init_features		5093702	1					
ANR	5093781	IfStatement	if ( cpu -> start_powered_off )		5093702	8					
ANR	5093782	Condition	cpu -> start_powered_off	33:8:500:521	5093702	0	True				
ANR	5093783	PtrMemberAccess	cpu -> start_powered_off		5093702	0					
ANR	5093784	Identifier	cpu		5093702	0					
ANR	5093785	Identifier	start_powered_off		5093702	1					
ANR	5093786	CompoundStatement		31:32:485:485	5093702	1					
ANR	5093787	ExpressionStatement	cpu -> kvm_init_features [ 0 ] |= 1 << KVM_ARM_VCPU_POWER_OFF	35:8:535:591	5093702	0	True				
ANR	5093788	AssignmentExpression	cpu -> kvm_init_features [ 0 ] |= 1 << KVM_ARM_VCPU_POWER_OFF		5093702	0		|=			
ANR	5093789	ArrayIndexing	cpu -> kvm_init_features [ 0 ]		5093702	0					
ANR	5093790	PtrMemberAccess	cpu -> kvm_init_features		5093702	0					
ANR	5093791	Identifier	cpu		5093702	0					
ANR	5093792	Identifier	kvm_init_features		5093702	1					
ANR	5093793	PrimaryExpression	0		5093702	1					
ANR	5093794	ShiftExpression	1 << KVM_ARM_VCPU_POWER_OFF		5093702	1		<<			
ANR	5093795	PrimaryExpression	1		5093702	0					
ANR	5093796	Identifier	KVM_ARM_VCPU_POWER_OFF		5093702	1					
ANR	5093797	IfStatement	"if ( kvm_check_extension ( cs -> kvm_state , KVM_CAP_ARM_PSCI_0_2 ) )"		5093702	9					
ANR	5093798	Condition	"kvm_check_extension ( cs -> kvm_state , KVM_CAP_ARM_PSCI_0_2 )"	39:8:609:664	5093702	0	True				
ANR	5093799	CallExpression	"kvm_check_extension ( cs -> kvm_state , KVM_CAP_ARM_PSCI_0_2 )"		5093702	0					
ANR	5093800	Callee	kvm_check_extension		5093702	0					
ANR	5093801	Identifier	kvm_check_extension		5093702	0					
ANR	5093802	ArgumentList	cs -> kvm_state		5093702	1					
ANR	5093803	Argument	cs -> kvm_state		5093702	0					
ANR	5093804	PtrMemberAccess	cs -> kvm_state		5093702	0					
ANR	5093805	Identifier	cs		5093702	0					
ANR	5093806	Identifier	kvm_state		5093702	1					
ANR	5093807	Argument	KVM_CAP_ARM_PSCI_0_2		5093702	1					
ANR	5093808	Identifier	KVM_CAP_ARM_PSCI_0_2		5093702	0					
ANR	5093809	CompoundStatement		37:66:628:628	5093702	1					
ANR	5093810	ExpressionStatement	cpu -> psci_version = 2	41:8:678:699	5093702	0	True				
ANR	5093811	AssignmentExpression	cpu -> psci_version = 2		5093702	0		=			
ANR	5093812	PtrMemberAccess	cpu -> psci_version		5093702	0					
ANR	5093813	Identifier	cpu		5093702	0					
ANR	5093814	Identifier	psci_version		5093702	1					
ANR	5093815	PrimaryExpression	2		5093702	1					
ANR	5093816	ExpressionStatement	cpu -> kvm_init_features [ 0 ] |= 1 << KVM_ARM_VCPU_PSCI_0_2	43:8:710:765	5093702	1	True				
ANR	5093817	AssignmentExpression	cpu -> kvm_init_features [ 0 ] |= 1 << KVM_ARM_VCPU_PSCI_0_2		5093702	0		|=			
ANR	5093818	ArrayIndexing	cpu -> kvm_init_features [ 0 ]		5093702	0					
ANR	5093819	PtrMemberAccess	cpu -> kvm_init_features		5093702	0					
ANR	5093820	Identifier	cpu		5093702	0					
ANR	5093821	Identifier	kvm_init_features		5093702	1					
ANR	5093822	PrimaryExpression	0		5093702	1					
ANR	5093823	ShiftExpression	1 << KVM_ARM_VCPU_PSCI_0_2		5093702	1		<<			
ANR	5093824	PrimaryExpression	1		5093702	0					
ANR	5093825	Identifier	KVM_ARM_VCPU_PSCI_0_2		5093702	1					
ANR	5093826	ExpressionStatement	ret = kvm_arm_vcpu_init ( cs )	51:4:819:846	5093702	10	True				
ANR	5093827	AssignmentExpression	ret = kvm_arm_vcpu_init ( cs )		5093702	0		=			
ANR	5093828	Identifier	ret		5093702	0					
ANR	5093829	CallExpression	kvm_arm_vcpu_init ( cs )		5093702	1					
ANR	5093830	Callee	kvm_arm_vcpu_init		5093702	0					
ANR	5093831	Identifier	kvm_arm_vcpu_init		5093702	0					
ANR	5093832	ArgumentList	cs		5093702	1					
ANR	5093833	Argument	cs		5093702	0					
ANR	5093834	Identifier	cs		5093702	0					
ANR	5093835	IfStatement	if ( ret )		5093702	11					
ANR	5093836	Condition	ret	53:8:857:859	5093702	0	True				
ANR	5093837	Identifier	ret		5093702	0					
ANR	5093838	CompoundStatement		51:13:823:823	5093702	1					
ANR	5093839	ReturnStatement	return ret ;	55:8:873:883	5093702	0	True				
ANR	5093840	Identifier	ret		5093702	0					
ANR	5093841	ExpressionStatement	r . id = KVM_REG_ARM | KVM_REG_SIZE_U64 | KVM_REG_ARM_VFP | 31	71:4:1119:1179	5093702	12	True				
ANR	5093842	AssignmentExpression	r . id = KVM_REG_ARM | KVM_REG_SIZE_U64 | KVM_REG_ARM_VFP | 31		5093702	0		=			
ANR	5093843	MemberAccess	r . id		5093702	0					
ANR	5093844	Identifier	r		5093702	0					
ANR	5093845	Identifier	id		5093702	1					
ANR	5093846	InclusiveOrExpression	KVM_REG_ARM | KVM_REG_SIZE_U64 | KVM_REG_ARM_VFP | 31		5093702	1		|			
ANR	5093847	Identifier	KVM_REG_ARM		5093702	0					
ANR	5093848	InclusiveOrExpression	KVM_REG_SIZE_U64 | KVM_REG_ARM_VFP | 31		5093702	1		|			
ANR	5093849	Identifier	KVM_REG_SIZE_U64		5093702	0					
ANR	5093850	InclusiveOrExpression	KVM_REG_ARM_VFP | 31		5093702	1		|			
ANR	5093851	Identifier	KVM_REG_ARM_VFP		5093702	0					
ANR	5093852	PrimaryExpression	31		5093702	1					
ANR	5093853	ExpressionStatement	r . addr = ( uintptr_t ) ( & v )	73:4:1186:1210	5093702	13	True				
ANR	5093854	AssignmentExpression	r . addr = ( uintptr_t ) ( & v )		5093702	0		=			
ANR	5093855	MemberAccess	r . addr		5093702	0					
ANR	5093856	Identifier	r		5093702	0					
ANR	5093857	Identifier	addr		5093702	1					
ANR	5093858	CastExpression	( uintptr_t ) ( & v )		5093702	1					
ANR	5093859	CastTarget	uintptr_t		5093702	0					
ANR	5093860	UnaryOperationExpression	& v		5093702	1					
ANR	5093861	UnaryOperator	&		5093702	0					
ANR	5093862	Identifier	v		5093702	1					
ANR	5093863	ExpressionStatement	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_ONE_REG , & r )"	75:4:1217:1262	5093702	14	True				
ANR	5093864	AssignmentExpression	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_ONE_REG , & r )"		5093702	0		=			
ANR	5093865	Identifier	ret		5093702	0					
ANR	5093866	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_GET_ONE_REG , & r )"		5093702	1					
ANR	5093867	Callee	kvm_vcpu_ioctl		5093702	0					
ANR	5093868	Identifier	kvm_vcpu_ioctl		5093702	0					
ANR	5093869	ArgumentList	cs		5093702	1					
ANR	5093870	Argument	cs		5093702	0					
ANR	5093871	Identifier	cs		5093702	0					
ANR	5093872	Argument	KVM_GET_ONE_REG		5093702	1					
ANR	5093873	Identifier	KVM_GET_ONE_REG		5093702	0					
ANR	5093874	Argument	& r		5093702	2					
ANR	5093875	UnaryOperationExpression	& r		5093702	0					
ANR	5093876	UnaryOperator	&		5093702	0					
ANR	5093877	Identifier	r		5093702	1					
ANR	5093878	IfStatement	if ( ret == - ENOENT )		5093702	15					
ANR	5093879	Condition	ret == - ENOENT	77:8:1273:1286	5093702	0	True				
ANR	5093880	EqualityExpression	ret == - ENOENT		5093702	0		==			
ANR	5093881	Identifier	ret		5093702	0					
ANR	5093882	UnaryOperationExpression	- ENOENT		5093702	1					
ANR	5093883	UnaryOperator	-		5093702	0					
ANR	5093884	Identifier	ENOENT		5093702	1					
ANR	5093885	CompoundStatement		75:24:1250:1250	5093702	1					
ANR	5093886	ReturnStatement	return - EINVAL ;	79:8:1300:1314	5093702	0	True				
ANR	5093887	UnaryOperationExpression	- EINVAL		5093702	0					
ANR	5093888	UnaryOperator	-		5093702	0					
ANR	5093889	Identifier	EINVAL		5093702	1					
ANR	5093890	ExpressionStatement	rl . n = 0	91:4:1469:1477	5093702	16	True				
ANR	5093891	AssignmentExpression	rl . n = 0		5093702	0		=			
ANR	5093892	MemberAccess	rl . n		5093702	0					
ANR	5093893	Identifier	rl		5093702	0					
ANR	5093894	Identifier	n		5093702	1					
ANR	5093895	PrimaryExpression	0		5093702	1					
ANR	5093896	ExpressionStatement	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , & rl )"	93:4:1484:1531	5093702	17	True				
ANR	5093897	AssignmentExpression	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , & rl )"		5093702	0		=			
ANR	5093898	Identifier	ret		5093702	0					
ANR	5093899	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , & rl )"		5093702	1					
ANR	5093900	Callee	kvm_vcpu_ioctl		5093702	0					
ANR	5093901	Identifier	kvm_vcpu_ioctl		5093702	0					
ANR	5093902	ArgumentList	cs		5093702	1					
ANR	5093903	Argument	cs		5093702	0					
ANR	5093904	Identifier	cs		5093702	0					
ANR	5093905	Argument	KVM_GET_REG_LIST		5093702	1					
ANR	5093906	Identifier	KVM_GET_REG_LIST		5093702	0					
ANR	5093907	Argument	& rl		5093702	2					
ANR	5093908	UnaryOperationExpression	& rl		5093702	0					
ANR	5093909	UnaryOperator	&		5093702	0					
ANR	5093910	Identifier	rl		5093702	1					
ANR	5093911	IfStatement	if ( ret != - E2BIG )		5093702	18					
ANR	5093912	Condition	ret != - E2BIG	95:8:1542:1554	5093702	0	True				
ANR	5093913	EqualityExpression	ret != - E2BIG		5093702	0		!=			
ANR	5093914	Identifier	ret		5093702	0					
ANR	5093915	UnaryOperationExpression	- E2BIG		5093702	1					
ANR	5093916	UnaryOperator	-		5093702	0					
ANR	5093917	Identifier	E2BIG		5093702	1					
ANR	5093918	CompoundStatement		93:23:1518:1518	5093702	1					
ANR	5093919	ReturnStatement	return ret ;	97:8:1568:1578	5093702	0	True				
ANR	5093920	Identifier	ret		5093702	0					
ANR	5093921	ExpressionStatement	rlp = g_malloc ( sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t ) )	101:4:1592:1661	5093702	19	True				
ANR	5093922	AssignmentExpression	rlp = g_malloc ( sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t ) )		5093702	0		=			
ANR	5093923	Identifier	rlp		5093702	0					
ANR	5093924	CallExpression	g_malloc ( sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t ) )		5093702	1					
ANR	5093925	Callee	g_malloc		5093702	0					
ANR	5093926	Identifier	g_malloc		5093702	0					
ANR	5093927	ArgumentList	sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t )		5093702	1					
ANR	5093928	Argument	sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t )		5093702	0					
ANR	5093929	AdditiveExpression	sizeof ( struct kvm_reg_list ) + rl . n * sizeof ( uint64_t )		5093702	0		+			
ANR	5093930	SizeofExpression	sizeof ( struct kvm_reg_list )		5093702	0					
ANR	5093931	Sizeof	sizeof		5093702	0					
ANR	5093932	SizeofOperand	struct kvm_reg_list		5093702	1					
ANR	5093933	MultiplicativeExpression	rl . n * sizeof ( uint64_t )		5093702	1		*			
ANR	5093934	MemberAccess	rl . n		5093702	0					
ANR	5093935	Identifier	rl		5093702	0					
ANR	5093936	Identifier	n		5093702	1					
ANR	5093937	SizeofExpression	sizeof ( uint64_t )		5093702	1					
ANR	5093938	Sizeof	sizeof		5093702	0					
ANR	5093939	SizeofOperand	uint64_t		5093702	1					
ANR	5093940	ExpressionStatement	rlp -> n = rl . n	103:4:1668:1681	5093702	20	True				
ANR	5093941	AssignmentExpression	rlp -> n = rl . n		5093702	0		=			
ANR	5093942	PtrMemberAccess	rlp -> n		5093702	0					
ANR	5093943	Identifier	rlp		5093702	0					
ANR	5093944	Identifier	n		5093702	1					
ANR	5093945	MemberAccess	rl . n		5093702	1					
ANR	5093946	Identifier	rl		5093702	0					
ANR	5093947	Identifier	n		5093702	1					
ANR	5093948	ExpressionStatement	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , rlp )"	105:4:1688:1735	5093702	21	True				
ANR	5093949	AssignmentExpression	"ret = kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , rlp )"		5093702	0		=			
ANR	5093950	Identifier	ret		5093702	0					
ANR	5093951	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_GET_REG_LIST , rlp )"		5093702	1					
ANR	5093952	Callee	kvm_vcpu_ioctl		5093702	0					
ANR	5093953	Identifier	kvm_vcpu_ioctl		5093702	0					
ANR	5093954	ArgumentList	cs		5093702	1					
ANR	5093955	Argument	cs		5093702	0					
ANR	5093956	Identifier	cs		5093702	0					
ANR	5093957	Argument	KVM_GET_REG_LIST		5093702	1					
ANR	5093958	Identifier	KVM_GET_REG_LIST		5093702	0					
ANR	5093959	Argument	rlp		5093702	2					
ANR	5093960	Identifier	rlp		5093702	0					
ANR	5093961	IfStatement	if ( ret )		5093702	22					
ANR	5093962	Condition	ret	107:8:1746:1748	5093702	0	True				
ANR	5093963	Identifier	ret		5093702	0					
ANR	5093964	CompoundStatement		105:13:1712:1712	5093702	1					
ANR	5093965	GotoStatement	goto out ;	109:8:1762:1770	5093702	0	True				
ANR	5093966	Identifier	out		5093702	0					
ANR	5093967	ExpressionStatement	"qsort ( & rlp -> reg , rlp -> n , sizeof ( rlp -> reg [ 0 ] ) , compare_u64 )"	119:4:1908:1966	5093702	23	True				
ANR	5093968	CallExpression	"qsort ( & rlp -> reg , rlp -> n , sizeof ( rlp -> reg [ 0 ] ) , compare_u64 )"		5093702	0					
ANR	5093969	Callee	qsort		5093702	0					
ANR	5093970	Identifier	qsort		5093702	0					
ANR	5093971	ArgumentList	& rlp -> reg		5093702	1					
ANR	5093972	Argument	& rlp -> reg		5093702	0					
ANR	5093973	UnaryOperationExpression	& rlp -> reg		5093702	0					
ANR	5093974	UnaryOperator	&		5093702	0					
ANR	5093975	PtrMemberAccess	rlp -> reg		5093702	1					
ANR	5093976	Identifier	rlp		5093702	0					
ANR	5093977	Identifier	reg		5093702	1					
ANR	5093978	Argument	rlp -> n		5093702	1					
ANR	5093979	PtrMemberAccess	rlp -> n		5093702	0					
ANR	5093980	Identifier	rlp		5093702	0					
ANR	5093981	Identifier	n		5093702	1					
ANR	5093982	Argument	sizeof ( rlp -> reg [ 0 ] )		5093702	2					
ANR	5093983	SizeofExpression	sizeof ( rlp -> reg [ 0 ] )		5093702	0					
ANR	5093984	Sizeof	sizeof		5093702	0					
ANR	5093985	ArrayIndexing	rlp -> reg [ 0 ]		5093702	1					
ANR	5093986	PtrMemberAccess	rlp -> reg		5093702	0					
ANR	5093987	Identifier	rlp		5093702	0					
ANR	5093988	Identifier	reg		5093702	1					
ANR	5093989	PrimaryExpression	0		5093702	1					
ANR	5093990	Argument	compare_u64		5093702	3					
ANR	5093991	Identifier	compare_u64		5093702	0					
ANR	5093992	ForStatement	"for ( i = 0 , arraylen = 0 ; i < rlp -> n ; i ++ )"		5093702	24					
ANR	5093993	ForInit	"i = 0 , arraylen = 0 ;"	123:9:1980:1999	5093702	0	True				
ANR	5093994	Expression	"i = 0 , arraylen = 0"		5093702	0					
ANR	5093995	AssignmentExpression	i = 0		5093702	0		=			
ANR	5093996	Identifier	i		5093702	0					
ANR	5093997	PrimaryExpression	0		5093702	1					
ANR	5093998	AssignmentExpression	arraylen = 0		5093702	1		=			
ANR	5093999	Identifier	arraylen		5093702	0					
ANR	5094000	PrimaryExpression	0		5093702	1					
ANR	5094001	Condition	i < rlp -> n	123:30:2001:2010	5093702	1	True				
ANR	5094002	RelationalExpression	i < rlp -> n		5093702	0		<			
ANR	5094003	Identifier	i		5093702	0					
ANR	5094004	PtrMemberAccess	rlp -> n		5093702	1					
ANR	5094005	Identifier	rlp		5093702	0					
ANR	5094006	Identifier	n		5093702	1					
ANR	5094007	PostIncDecOperationExpression	i ++	123:42:2013:2015	5093702	2	True				
ANR	5094008	Identifier	i		5093702	0					
ANR	5094009	IncDec	++		5093702	1					
ANR	5094010	CompoundStatement		121:47:1979:1979	5093702	3					
ANR	5094011	IfStatement	if ( ! reg_syncs_via_tuple_list ( rlp -> reg [ i ] ) )		5093702	0					
ANR	5094012	Condition	! reg_syncs_via_tuple_list ( rlp -> reg [ i ] )	125:12:2033:2070	5093702	0	True				
ANR	5094013	UnaryOperationExpression	! reg_syncs_via_tuple_list ( rlp -> reg [ i ] )		5093702	0					
ANR	5094014	UnaryOperator	!		5093702	0					
ANR	5094015	CallExpression	reg_syncs_via_tuple_list ( rlp -> reg [ i ] )		5093702	1					
ANR	5094016	Callee	reg_syncs_via_tuple_list		5093702	0					
ANR	5094017	Identifier	reg_syncs_via_tuple_list		5093702	0					
ANR	5094018	ArgumentList	rlp -> reg [ i ]		5093702	1					
ANR	5094019	Argument	rlp -> reg [ i ]		5093702	0					
ANR	5094020	ArrayIndexing	rlp -> reg [ i ]		5093702	0					
ANR	5094021	PtrMemberAccess	rlp -> reg		5093702	0					
ANR	5094022	Identifier	rlp		5093702	0					
ANR	5094023	Identifier	reg		5093702	1					
ANR	5094024	Identifier	i		5093702	1					
ANR	5094025	CompoundStatement		123:52:2034:2034	5093702	1					
ANR	5094026	ContinueStatement	continue ;	127:12:2088:2096	5093702	0	True				
ANR	5094027	SwitchStatement	switch ( rlp -> reg [ i ] & KVM_REG_SIZE_MASK )		5093702	1					
ANR	5094028	Condition	rlp -> reg [ i ] & KVM_REG_SIZE_MASK	131:16:2126:2156	5093702	0	True				
ANR	5094029	BitAndExpression	rlp -> reg [ i ] & KVM_REG_SIZE_MASK		5093702	0		&			
ANR	5094030	ArrayIndexing	rlp -> reg [ i ]		5093702	0					
ANR	5094031	PtrMemberAccess	rlp -> reg		5093702	0					
ANR	5094032	Identifier	rlp		5093702	0					
ANR	5094033	Identifier	reg		5093702	1					
ANR	5094034	Identifier	i		5093702	1					
ANR	5094035	Identifier	KVM_REG_SIZE_MASK		5093702	1					
ANR	5094036	CompoundStatement		129:49:2120:2120	5093702	1					
ANR	5094037	Label	case KVM_REG_SIZE_U32 :	133:8:2170:2191	5093702	0	True				
ANR	5094038	Identifier	KVM_REG_SIZE_U32		5093702	0					
ANR	5094039	Label	case KVM_REG_SIZE_U64 :	135:8:2202:2223	5093702	1	True				
ANR	5094040	Identifier	KVM_REG_SIZE_U64		5093702	0					
ANR	5094041	BreakStatement	break ;	137:12:2238:2243	5093702	2	True				
ANR	5094042	Label	default :	139:8:2254:2261	5093702	3	True				
ANR	5094043	Identifier	default		5093702	0					
ANR	5094044	ExpressionStatement	"fprintf ( stderr , ""Can't handle size of register in kernel list\\n"" )"	141:12:2276:2341	5093702	4	True				
ANR	5094045	CallExpression	"fprintf ( stderr , ""Can't handle size of register in kernel list\\n"" )"		5093702	0					
ANR	5094046	Callee	fprintf		5093702	0					
ANR	5094047	Identifier	fprintf		5093702	0					
ANR	5094048	ArgumentList	stderr		5093702	1					
ANR	5094049	Argument	stderr		5093702	0					
ANR	5094050	Identifier	stderr		5093702	0					
ANR	5094051	Argument	"""Can't handle size of register in kernel list\\n"""		5093702	1					
ANR	5094052	PrimaryExpression	"""Can't handle size of register in kernel list\\n"""		5093702	0					
ANR	5094053	ExpressionStatement	ret = - EINVAL	143:12:2356:2369	5093702	5	True				
ANR	5094054	AssignmentExpression	ret = - EINVAL		5093702	0		=			
ANR	5094055	Identifier	ret		5093702	0					
ANR	5094056	UnaryOperationExpression	- EINVAL		5093702	1					
ANR	5094057	UnaryOperator	-		5093702	0					
ANR	5094058	Identifier	EINVAL		5093702	1					
ANR	5094059	GotoStatement	goto out ;	145:12:2384:2392	5093702	6	True				
ANR	5094060	Identifier	out		5093702	0					
ANR	5094061	ExpressionStatement	arraylen ++	151:8:2416:2426	5093702	2	True				
ANR	5094062	PostIncDecOperationExpression	arraylen ++		5093702	0					
ANR	5094063	Identifier	arraylen		5093702	0					
ANR	5094064	IncDec	++		5093702	1					
ANR	5094065	ExpressionStatement	"cpu -> cpreg_indexes = g_renew ( uint64_t , cpu -> cpreg_indexes , arraylen )"	157:4:2442:2510	5093702	25	True				
ANR	5094066	AssignmentExpression	"cpu -> cpreg_indexes = g_renew ( uint64_t , cpu -> cpreg_indexes , arraylen )"		5093702	0		=			
ANR	5094067	PtrMemberAccess	cpu -> cpreg_indexes		5093702	0					
ANR	5094068	Identifier	cpu		5093702	0					
ANR	5094069	Identifier	cpreg_indexes		5093702	1					
ANR	5094070	CallExpression	"g_renew ( uint64_t , cpu -> cpreg_indexes , arraylen )"		5093702	1					
ANR	5094071	Callee	g_renew		5093702	0					
ANR	5094072	Identifier	g_renew		5093702	0					
ANR	5094073	ArgumentList	uint64_t		5093702	1					
ANR	5094074	Argument	uint64_t		5093702	0					
ANR	5094075	Identifier	uint64_t		5093702	0					
ANR	5094076	Argument	cpu -> cpreg_indexes		5093702	1					
ANR	5094077	PtrMemberAccess	cpu -> cpreg_indexes		5093702	0					
ANR	5094078	Identifier	cpu		5093702	0					
ANR	5094079	Identifier	cpreg_indexes		5093702	1					
ANR	5094080	Argument	arraylen		5093702	2					
ANR	5094081	Identifier	arraylen		5093702	0					
ANR	5094082	ExpressionStatement	"cpu -> cpreg_values = g_renew ( uint64_t , cpu -> cpreg_values , arraylen )"	159:4:2517:2583	5093702	26	True				
ANR	5094083	AssignmentExpression	"cpu -> cpreg_values = g_renew ( uint64_t , cpu -> cpreg_values , arraylen )"		5093702	0		=			
ANR	5094084	PtrMemberAccess	cpu -> cpreg_values		5093702	0					
ANR	5094085	Identifier	cpu		5093702	0					
ANR	5094086	Identifier	cpreg_values		5093702	1					
ANR	5094087	CallExpression	"g_renew ( uint64_t , cpu -> cpreg_values , arraylen )"		5093702	1					
ANR	5094088	Callee	g_renew		5093702	0					
ANR	5094089	Identifier	g_renew		5093702	0					
ANR	5094090	ArgumentList	uint64_t		5093702	1					
ANR	5094091	Argument	uint64_t		5093702	0					
ANR	5094092	Identifier	uint64_t		5093702	0					
ANR	5094093	Argument	cpu -> cpreg_values		5093702	1					
ANR	5094094	PtrMemberAccess	cpu -> cpreg_values		5093702	0					
ANR	5094095	Identifier	cpu		5093702	0					
ANR	5094096	Identifier	cpreg_values		5093702	1					
ANR	5094097	Argument	arraylen		5093702	2					
ANR	5094098	Identifier	arraylen		5093702	0					
ANR	5094099	ExpressionStatement	"cpu -> cpreg_vmstate_indexes = g_renew ( uint64_t , cpu -> cpreg_vmstate_indexes , arraylen )"	161:4:2590:2716	5093702	27	True				
ANR	5094100	AssignmentExpression	"cpu -> cpreg_vmstate_indexes = g_renew ( uint64_t , cpu -> cpreg_vmstate_indexes , arraylen )"		5093702	0		=			
ANR	5094101	PtrMemberAccess	cpu -> cpreg_vmstate_indexes		5093702	0					
ANR	5094102	Identifier	cpu		5093702	0					
ANR	5094103	Identifier	cpreg_vmstate_indexes		5093702	1					
ANR	5094104	CallExpression	"g_renew ( uint64_t , cpu -> cpreg_vmstate_indexes , arraylen )"		5093702	1					
ANR	5094105	Callee	g_renew		5093702	0					
ANR	5094106	Identifier	g_renew		5093702	0					
ANR	5094107	ArgumentList	uint64_t		5093702	1					
ANR	5094108	Argument	uint64_t		5093702	0					
ANR	5094109	Identifier	uint64_t		5093702	0					
ANR	5094110	Argument	cpu -> cpreg_vmstate_indexes		5093702	1					
ANR	5094111	PtrMemberAccess	cpu -> cpreg_vmstate_indexes		5093702	0					
ANR	5094112	Identifier	cpu		5093702	0					
ANR	5094113	Identifier	cpreg_vmstate_indexes		5093702	1					
ANR	5094114	Argument	arraylen		5093702	2					
ANR	5094115	Identifier	arraylen		5093702	0					
ANR	5094116	ExpressionStatement	"cpu -> cpreg_vmstate_values = g_renew ( uint64_t , cpu -> cpreg_vmstate_values , arraylen )"	165:4:2723:2846	5093702	28	True				
ANR	5094117	AssignmentExpression	"cpu -> cpreg_vmstate_values = g_renew ( uint64_t , cpu -> cpreg_vmstate_values , arraylen )"		5093702	0		=			
ANR	5094118	PtrMemberAccess	cpu -> cpreg_vmstate_values		5093702	0					
ANR	5094119	Identifier	cpu		5093702	0					
ANR	5094120	Identifier	cpreg_vmstate_values		5093702	1					
ANR	5094121	CallExpression	"g_renew ( uint64_t , cpu -> cpreg_vmstate_values , arraylen )"		5093702	1					
ANR	5094122	Callee	g_renew		5093702	0					
ANR	5094123	Identifier	g_renew		5093702	0					
ANR	5094124	ArgumentList	uint64_t		5093702	1					
ANR	5094125	Argument	uint64_t		5093702	0					
ANR	5094126	Identifier	uint64_t		5093702	0					
ANR	5094127	Argument	cpu -> cpreg_vmstate_values		5093702	1					
ANR	5094128	PtrMemberAccess	cpu -> cpreg_vmstate_values		5093702	0					
ANR	5094129	Identifier	cpu		5093702	0					
ANR	5094130	Identifier	cpreg_vmstate_values		5093702	1					
ANR	5094131	Argument	arraylen		5093702	2					
ANR	5094132	Identifier	arraylen		5093702	0					
ANR	5094133	ExpressionStatement	cpu -> cpreg_array_len = arraylen	169:4:2853:2884	5093702	29	True				
ANR	5094134	AssignmentExpression	cpu -> cpreg_array_len = arraylen		5093702	0		=			
ANR	5094135	PtrMemberAccess	cpu -> cpreg_array_len		5093702	0					
ANR	5094136	Identifier	cpu		5093702	0					
ANR	5094137	Identifier	cpreg_array_len		5093702	1					
ANR	5094138	Identifier	arraylen		5093702	1					
ANR	5094139	ExpressionStatement	cpu -> cpreg_vmstate_array_len = arraylen	171:4:2891:2930	5093702	30	True				
ANR	5094140	AssignmentExpression	cpu -> cpreg_vmstate_array_len = arraylen		5093702	0		=			
ANR	5094141	PtrMemberAccess	cpu -> cpreg_vmstate_array_len		5093702	0					
ANR	5094142	Identifier	cpu		5093702	0					
ANR	5094143	Identifier	cpreg_vmstate_array_len		5093702	1					
ANR	5094144	Identifier	arraylen		5093702	1					
ANR	5094145	ForStatement	"for ( i = 0 , arraylen = 0 ; i < rlp -> n ; i ++ )"		5093702	31					
ANR	5094146	ForInit	"i = 0 , arraylen = 0 ;"	175:9:2944:2963	5093702	0	True				
ANR	5094147	Expression	"i = 0 , arraylen = 0"		5093702	0					
ANR	5094148	AssignmentExpression	i = 0		5093702	0		=			
ANR	5094149	Identifier	i		5093702	0					
ANR	5094150	PrimaryExpression	0		5093702	1					
ANR	5094151	AssignmentExpression	arraylen = 0		5093702	1		=			
ANR	5094152	Identifier	arraylen		5093702	0					
ANR	5094153	PrimaryExpression	0		5093702	1					
ANR	5094154	Condition	i < rlp -> n	175:30:2965:2974	5093702	1	True				
ANR	5094155	RelationalExpression	i < rlp -> n		5093702	0		<			
ANR	5094156	Identifier	i		5093702	0					
ANR	5094157	PtrMemberAccess	rlp -> n		5093702	1					
ANR	5094158	Identifier	rlp		5093702	0					
ANR	5094159	Identifier	n		5093702	1					
ANR	5094160	PostIncDecOperationExpression	i ++	175:42:2977:2979	5093702	2	True				
ANR	5094161	Identifier	i		5093702	0					
ANR	5094162	IncDec	++		5093702	1					
ANR	5094163	CompoundStatement		175:8:2954:2983	5093702	3					
ANR	5094164	IdentifierDeclStatement	uint64_t regidx = rlp -> reg [ i ] ;	177:8:2993:3022	5093702	0	True				
ANR	5094165	IdentifierDecl	regidx = rlp -> reg [ i ]		5093702	0					
ANR	5094166	IdentifierDeclType	uint64_t		5093702	0					
ANR	5094167	Identifier	regidx		5093702	1					
ANR	5094168	AssignmentExpression	regidx = rlp -> reg [ i ]		5093702	2		=			
ANR	5094169	Identifier	regidx		5093702	0					
ANR	5094170	ArrayIndexing	rlp -> reg [ i ]		5093702	1					
ANR	5094171	PtrMemberAccess	rlp -> reg		5093702	0					
ANR	5094172	Identifier	rlp		5093702	0					
ANR	5094173	Identifier	reg		5093702	1					
ANR	5094174	Identifier	i		5093702	1					
ANR	5094175	IfStatement	if ( ! reg_syncs_via_tuple_list ( regidx ) )		5093702	1					
ANR	5094176	Condition	! reg_syncs_via_tuple_list ( regidx )	179:12:3037:3069	5093702	0	True				
ANR	5094177	UnaryOperationExpression	! reg_syncs_via_tuple_list ( regidx )		5093702	0					
ANR	5094178	UnaryOperator	!		5093702	0					
ANR	5094179	CallExpression	reg_syncs_via_tuple_list ( regidx )		5093702	1					
ANR	5094180	Callee	reg_syncs_via_tuple_list		5093702	0					
ANR	5094181	Identifier	reg_syncs_via_tuple_list		5093702	0					
ANR	5094182	ArgumentList	regidx		5093702	1					
ANR	5094183	Argument	regidx		5093702	0					
ANR	5094184	Identifier	regidx		5093702	0					
ANR	5094185	CompoundStatement		177:47:3033:3033	5093702	1					
ANR	5094186	ContinueStatement	continue ;	181:12:3087:3095	5093702	0	True				
ANR	5094187	ExpressionStatement	cpu -> cpreg_indexes [ arraylen ] = regidx	185:8:3117:3154	5093702	2	True				
ANR	5094188	AssignmentExpression	cpu -> cpreg_indexes [ arraylen ] = regidx		5093702	0		=			
ANR	5094189	ArrayIndexing	cpu -> cpreg_indexes [ arraylen ]		5093702	0					
ANR	5094190	PtrMemberAccess	cpu -> cpreg_indexes		5093702	0					
ANR	5094191	Identifier	cpu		5093702	0					
ANR	5094192	Identifier	cpreg_indexes		5093702	1					
ANR	5094193	Identifier	arraylen		5093702	1					
ANR	5094194	Identifier	regidx		5093702	1					
ANR	5094195	ExpressionStatement	arraylen ++	187:8:3165:3175	5093702	3	True				
ANR	5094196	PostIncDecOperationExpression	arraylen ++		5093702	0					
ANR	5094197	Identifier	arraylen		5093702	0					
ANR	5094198	IncDec	++		5093702	1					
ANR	5094199	ExpressionStatement	assert ( cpu -> cpreg_array_len == arraylen )	191:4:3189:3229	5093702	32	True				
ANR	5094200	CallExpression	assert ( cpu -> cpreg_array_len == arraylen )		5093702	0					
ANR	5094201	Callee	assert		5093702	0					
ANR	5094202	Identifier	assert		5093702	0					
ANR	5094203	ArgumentList	cpu -> cpreg_array_len == arraylen		5093702	1					
ANR	5094204	Argument	cpu -> cpreg_array_len == arraylen		5093702	0					
ANR	5094205	EqualityExpression	cpu -> cpreg_array_len == arraylen		5093702	0		==			
ANR	5094206	PtrMemberAccess	cpu -> cpreg_array_len		5093702	0					
ANR	5094207	Identifier	cpu		5093702	0					
ANR	5094208	Identifier	cpreg_array_len		5093702	1					
ANR	5094209	Identifier	arraylen		5093702	1					
ANR	5094210	IfStatement	if ( ! write_kvmstate_to_list ( cpu ) )		5093702	33					
ANR	5094211	Condition	! write_kvmstate_to_list ( cpu )	195:8:3242:3269	5093702	0	True				
ANR	5094212	UnaryOperationExpression	! write_kvmstate_to_list ( cpu )		5093702	0					
ANR	5094213	UnaryOperator	!		5093702	0					
ANR	5094214	CallExpression	write_kvmstate_to_list ( cpu )		5093702	1					
ANR	5094215	Callee	write_kvmstate_to_list		5093702	0					
ANR	5094216	Identifier	write_kvmstate_to_list		5093702	0					
ANR	5094217	ArgumentList	cpu		5093702	1					
ANR	5094218	Argument	cpu		5093702	0					
ANR	5094219	Identifier	cpu		5093702	0					
ANR	5094220	CompoundStatement		193:38:3233:3233	5093702	1					
ANR	5094221	ExpressionStatement	"fprintf ( stderr , ""Initial read of kernel register state failed\\n"" )"	203:8:3395:3460	5093702	0	True				
ANR	5094222	CallExpression	"fprintf ( stderr , ""Initial read of kernel register state failed\\n"" )"		5093702	0					
ANR	5094223	Callee	fprintf		5093702	0					
ANR	5094224	Identifier	fprintf		5093702	0					
ANR	5094225	ArgumentList	stderr		5093702	1					
ANR	5094226	Argument	stderr		5093702	0					
ANR	5094227	Identifier	stderr		5093702	0					
ANR	5094228	Argument	"""Initial read of kernel register state failed\\n"""		5093702	1					
ANR	5094229	PrimaryExpression	"""Initial read of kernel register state failed\\n"""		5093702	0					
ANR	5094230	ExpressionStatement	ret = - EINVAL	205:8:3471:3484	5093702	1	True				
ANR	5094231	AssignmentExpression	ret = - EINVAL		5093702	0		=			
ANR	5094232	Identifier	ret		5093702	0					
ANR	5094233	UnaryOperationExpression	- EINVAL		5093702	1					
ANR	5094234	UnaryOperator	-		5093702	0					
ANR	5094235	Identifier	EINVAL		5093702	1					
ANR	5094236	GotoStatement	goto out ;	207:8:3495:3503	5093702	2	True				
ANR	5094237	Identifier	out		5093702	0					
ANR	5094238	ExpressionStatement	"cpu -> cpreg_reset_values = g_memdup ( cpu -> cpreg_values , cpu -> cpreg_array_len * sizeof ( cpu -> cpreg_values [ 0 ] ) )"	219:4:3644:3830	5093702	34	True				
ANR	5094239	AssignmentExpression	"cpu -> cpreg_reset_values = g_memdup ( cpu -> cpreg_values , cpu -> cpreg_array_len * sizeof ( cpu -> cpreg_values [ 0 ] ) )"		5093702	0		=			
ANR	5094240	PtrMemberAccess	cpu -> cpreg_reset_values		5093702	0					
ANR	5094241	Identifier	cpu		5093702	0					
ANR	5094242	Identifier	cpreg_reset_values		5093702	1					
ANR	5094243	CallExpression	"g_memdup ( cpu -> cpreg_values , cpu -> cpreg_array_len * sizeof ( cpu -> cpreg_values [ 0 ] ) )"		5093702	1					
ANR	5094244	Callee	g_memdup		5093702	0					
ANR	5094245	Identifier	g_memdup		5093702	0					
ANR	5094246	ArgumentList	cpu -> cpreg_values		5093702	1					
ANR	5094247	Argument	cpu -> cpreg_values		5093702	0					
ANR	5094248	PtrMemberAccess	cpu -> cpreg_values		5093702	0					
ANR	5094249	Identifier	cpu		5093702	0					
ANR	5094250	Identifier	cpreg_values		5093702	1					
ANR	5094251	Argument	cpu -> cpreg_array_len * sizeof ( cpu -> cpreg_values [ 0 ] )		5093702	1					
ANR	5094252	MultiplicativeExpression	cpu -> cpreg_array_len * sizeof ( cpu -> cpreg_values [ 0 ] )		5093702	0		*			
ANR	5094253	PtrMemberAccess	cpu -> cpreg_array_len		5093702	0					
ANR	5094254	Identifier	cpu		5093702	0					
ANR	5094255	Identifier	cpreg_array_len		5093702	1					
ANR	5094256	SizeofExpression	sizeof ( cpu -> cpreg_values [ 0 ] )		5093702	1					
ANR	5094257	Sizeof	sizeof		5093702	0					
ANR	5094258	ArrayIndexing	cpu -> cpreg_values [ 0 ]		5093702	1					
ANR	5094259	PtrMemberAccess	cpu -> cpreg_values		5093702	0					
ANR	5094260	Identifier	cpu		5093702	0					
ANR	5094261	Identifier	cpreg_values		5093702	1					
ANR	5094262	PrimaryExpression	0		5093702	1					
ANR	5094263	Label	out :	227:0:3835:3838	5093702	35	True				
ANR	5094264	Identifier	out		5093702	0					
ANR	5094265	ExpressionStatement	g_free ( rlp )	229:4:3845:3856	5093702	36	True				
ANR	5094266	CallExpression	g_free ( rlp )		5093702	0					
ANR	5094267	Callee	g_free		5093702	0					
ANR	5094268	Identifier	g_free		5093702	0					
ANR	5094269	ArgumentList	rlp		5093702	1					
ANR	5094270	Argument	rlp		5093702	0					
ANR	5094271	Identifier	rlp		5093702	0					
ANR	5094272	ReturnStatement	return ret ;	231:4:3863:3873	5093702	37	True				
ANR	5094273	Identifier	ret		5093702	0					
ANR	5094274	ReturnType	int		5093702	1					
ANR	5094275	Identifier	kvm_arch_init_vcpu		5093702	2					
ANR	5094276	ParameterList	CPUState * cs		5093702	3					
ANR	5094277	Parameter	CPUState * cs	1:23:23:34	5093702	0	True				
ANR	5094278	ParameterType	CPUState *		5093702	0					
ANR	5094279	Identifier	cs		5093702	1					
ANR	5094280	CFGEntryNode	ENTRY		5093702		True				
ANR	5094281	CFGExitNode	EXIT		5093702		True				
ANR	5094282	Symbol	g_renew		5093702						
ANR	5094283	Symbol	uint64_t		5093702						
ANR	5094284	Symbol	cpu -> cpreg_vmstate_values		5093702						
ANR	5094285	Symbol	KVM_GET_ONE_REG		5093702						
ANR	5094286	Symbol	* cpu -> cpreg_values		5093702						
ANR	5094287	Symbol	cpu -> kvm_init_features		5093702						
ANR	5094288	Symbol	cpu -> cpreg_array_len		5093702						
ANR	5094289	Symbol	KVM_REG_SIZE_U64		5093702						
ANR	5094290	Symbol	KVM_REG_ARM		5093702						
ANR	5094291	Symbol	* rlp -> reg		5093702						
ANR	5094292	Symbol	kvm_vcpu_ioctl		5093702						
ANR	5094293	Symbol	rl . n		5093702						
ANR	5094294	Symbol	ret		5093702						
ANR	5094295	Symbol	cpu		5093702						
ANR	5094296	Symbol	g_memdup		5093702						
ANR	5094297	Symbol	KVM_ARM_VCPU_POWER_OFF		5093702						
ANR	5094298	Symbol	stderr		5093702						
ANR	5094299	Symbol	KVM_GET_REG_LIST		5093702						
ANR	5094300	Symbol	rlp -> reg		5093702						
ANR	5094301	Symbol	KVM_REG_SIZE_MASK		5093702						
ANR	5094302	Symbol	cpu -> start_powered_off		5093702						
ANR	5094303	Symbol	* cpu -> kvm_init_features		5093702						
ANR	5094304	Symbol	* cs		5093702						
ANR	5094305	Symbol	kvm_arm_vcpu_init		5093702						
ANR	5094306	Symbol	cpu -> cpreg_vmstate_array_len		5093702						
ANR	5094307	Symbol	rl		5093702						
ANR	5094308	Symbol	reg_syncs_via_tuple_list		5093702						
ANR	5094309	Symbol	cpu -> cpreg_indexes		5093702						
ANR	5094310	Symbol	cpu -> cpreg_vmstate_indexes		5093702						
ANR	5094311	Symbol	* * rlp		5093702						
ANR	5094312	Symbol	ARM_CPU		5093702						
ANR	5094313	Symbol	cs -> kvm_state		5093702						
ANR	5094314	Symbol	cpu -> cpreg_reset_values		5093702						
ANR	5094315	Symbol	g_malloc		5093702						
ANR	5094316	Symbol	cpu -> cpreg_values		5093702						
ANR	5094317	Symbol	cpu -> kvm_target		5093702						
ANR	5094318	Symbol	KVM_REG_ARM_VFP		5093702						
ANR	5094319	Symbol	E2BIG		5093702						
ANR	5094320	Symbol	* arraylen		5093702						
ANR	5094321	Symbol	r . id		5093702						
ANR	5094322	Symbol	QEMU_KVM_ARM_TARGET_NONE		5093702						
ANR	5094323	Symbol	& rlp -> reg		5093702						
ANR	5094324	Symbol	* rlp		5093702						
ANR	5094325	Symbol	regidx		5093702						
ANR	5094326	Symbol	& rl		5093702						
ANR	5094327	Symbol	compare_u64		5093702						
ANR	5094328	Symbol	i		5093702						
ANR	5094329	Symbol	ENOENT		5093702						
ANR	5094330	Symbol	arraylen		5093702						
ANR	5094331	Symbol	* cpu		5093702						
ANR	5094332	Symbol	r . addr		5093702						
ANR	5094333	Symbol	cs		5093702						
ANR	5094334	Symbol	EINVAL		5093702						
ANR	5094335	Symbol	r		5093702						
ANR	5094336	Symbol	write_kvmstate_to_list		5093702						
ANR	5094337	Symbol	* i		5093702						
ANR	5094338	Symbol	v		5093702						
ANR	5094339	Symbol	cpu -> psci_version		5093702						
ANR	5094340	Symbol	rlp		5093702						
ANR	5094341	Symbol	rlp -> n		5093702						
ANR	5094342	Symbol	KVM_ARM_VCPU_PSCI_0_2		5093702						
ANR	5094343	Symbol	& r		5093702						
ANR	5094344	Symbol	KVM_CAP_ARM_PSCI_0_2		5093702						
ANR	5094345	Symbol	* * cpu		5093702						
ANR	5094346	Symbol	kvm_check_extension		5093702						
ANR	5094347	Symbol	& v		5093702						
ANR	5094348	Symbol	* cpu -> cpreg_indexes		5093702						
