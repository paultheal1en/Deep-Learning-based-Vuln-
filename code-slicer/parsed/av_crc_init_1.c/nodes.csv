command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	696000	File	/home/p4ultr4n/workplace/ReVeal/raw_code/av_crc_init_1.c								
ANR	696001	Function	av_crc_init	1:0:0:901							
ANR	696002	FunctionDef	"av_crc_init (AVCRC * ctx , int le , int bits , uint32_t poly , int ctx_size)"		696001	0					
ANR	696003	CompoundStatement		1:74:74:901	696001	0					
ANR	696004	IdentifierDeclStatement	"int i , j ;"	3:4:81:89	696001	0	True				
ANR	696005	IdentifierDecl	i		696001	0					
ANR	696006	IdentifierDeclType	int		696001	0					
ANR	696007	Identifier	i		696001	1					
ANR	696008	IdentifierDecl	j		696001	1					
ANR	696009	IdentifierDeclType	int		696001	0					
ANR	696010	Identifier	j		696001	1					
ANR	696011	IdentifierDeclStatement	uint32_t c ;	5:4:96:106	696001	1	True				
ANR	696012	IdentifierDecl	c		696001	0					
ANR	696013	IdentifierDeclType	uint32_t		696001	0					
ANR	696014	Identifier	c		696001	1					
ANR	696015	Statement	if	9:4:115:116	696001	2	True				
ANR	696016	Statement	(	9:7:118:118	696001	3	True				
ANR	696017	Statement	bits	9:8:119:122	696001	4	True				
ANR	696018	Statement	<	9:13:124:124	696001	5	True				
ANR	696019	Statement	8	9:15:126:126	696001	6	True				
ANR	696020	Statement	||	9:17:128:129	696001	7	True				
ANR	696021	Statement	bits	9:20:131:134	696001	8	True				
ANR	696022	Statement	>	9:25:136:136	696001	9	True				
ANR	696023	Statement	32	9:27:138:139	696001	10	True				
ANR	696024	Statement	||	9:30:141:142	696001	11	True				
ANR	696025	Statement	poly	9:33:144:147	696001	12	True				
ANR	696026	Statement	>=	9:38:149:150	696001	13	True				
ANR	696027	Statement	(	9:41:152:152	696001	14	True				
ANR	696028	Statement	1L	9:42:153:154	696001	15	True				
ANR	696029	Statement	L	9:44:155:155	696001	16	True				
ANR	696030	Statement	<<	9:45:156:157	696001	17	True				
ANR	696031	Statement	bits	9:47:158:161	696001	18	True				
ANR	696032	Statement	)	9:51:162:162	696001	19	True				
ANR	696033	Statement	)	9:52:163:163	696001	20	True				
ANR	696034	ReturnStatement	return - 1 ;	11:8:174:183	696001	21	True				
ANR	696035	UnaryOperationExpression	- 1		696001	0					
ANR	696036	UnaryOperator	-		696001	0					
ANR	696037	PrimaryExpression	1		696001	1					
ANR	696038	IfStatement	if ( ctx_size != sizeof ( AVCRC ) * 257 && ctx_size != sizeof ( AVCRC ) * 1024 )		696001	22					
ANR	696039	Condition	ctx_size != sizeof ( AVCRC ) * 257 && ctx_size != sizeof ( AVCRC ) * 1024	13:8:194:256	696001	0	True				
ANR	696040	AndExpression	ctx_size != sizeof ( AVCRC ) * 257 && ctx_size != sizeof ( AVCRC ) * 1024		696001	0		&&			
ANR	696041	EqualityExpression	ctx_size != sizeof ( AVCRC ) * 257		696001	0		!=			
ANR	696042	Identifier	ctx_size		696001	0					
ANR	696043	MultiplicativeExpression	sizeof ( AVCRC ) * 257		696001	1		*			
ANR	696044	SizeofExpression	sizeof ( AVCRC )		696001	0					
ANR	696045	Sizeof	sizeof		696001	0					
ANR	696046	SizeofOperand	AVCRC		696001	1					
ANR	696047	PrimaryExpression	257		696001	1					
ANR	696048	EqualityExpression	ctx_size != sizeof ( AVCRC ) * 1024		696001	1		!=			
ANR	696049	Identifier	ctx_size		696001	0					
ANR	696050	MultiplicativeExpression	sizeof ( AVCRC ) * 1024		696001	1		*			
ANR	696051	SizeofExpression	sizeof ( AVCRC )		696001	0					
ANR	696052	Sizeof	sizeof		696001	0					
ANR	696053	SizeofOperand	AVCRC		696001	1					
ANR	696054	PrimaryExpression	1024		696001	1					
ANR	696055	ReturnStatement	return - 1 ;	15:8:268:277	696001	1	True				
ANR	696056	UnaryOperationExpression	- 1		696001	0					
ANR	696057	UnaryOperator	-		696001	0					
ANR	696058	PrimaryExpression	1		696001	1					
ANR	696059	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		696001	23					
ANR	696060	ForInit	i = 0 ;	19:9:291:296	696001	0	True				
ANR	696061	AssignmentExpression	i = 0		696001	0		=			
ANR	696062	Identifier	i		696001	0					
ANR	696063	PrimaryExpression	0		696001	1					
ANR	696064	Condition	i < 256	19:16:298:304	696001	1	True				
ANR	696065	RelationalExpression	i < 256		696001	0		<			
ANR	696066	Identifier	i		696001	0					
ANR	696067	PrimaryExpression	256		696001	1					
ANR	696068	PostIncDecOperationExpression	i ++	19:25:307:309	696001	2	True				
ANR	696069	Identifier	i		696001	0					
ANR	696070	IncDec	++		696001	1					
ANR	696071	CompoundStatement		19:30:237:237	696001	3					
ANR	696072	IfStatement	if ( le )		696001	0					
ANR	696073	Condition	le	21:12:327:328	696001	0	True				
ANR	696074	Identifier	le		696001	0					
ANR	696075	CompoundStatement		21:16:256:256	696001	1					
ANR	696076	ForStatement	"for ( c = i , j = 0 ; j < 8 ; j ++ )"		696001	0					
ANR	696077	ForInit	"c = i , j = 0 ;"	23:17:351:363	696001	0	True				
ANR	696078	Expression	"c = i , j = 0"		696001	0					
ANR	696079	AssignmentExpression	c = i		696001	0		=			
ANR	696080	Identifier	c		696001	0					
ANR	696081	Identifier	i		696001	1					
ANR	696082	AssignmentExpression	j = 0		696001	1		=			
ANR	696083	Identifier	j		696001	0					
ANR	696084	PrimaryExpression	0		696001	1					
ANR	696085	Condition	j < 8	23:31:365:369	696001	1	True				
ANR	696086	RelationalExpression	j < 8		696001	0		<			
ANR	696087	Identifier	j		696001	0					
ANR	696088	PrimaryExpression	8		696001	1					
ANR	696089	PostIncDecOperationExpression	j ++	23:38:372:374	696001	2	True				
ANR	696090	Identifier	j		696001	0					
ANR	696091	IncDec	++		696001	1					
ANR	696092	ExpressionStatement	c = ( c >> 1 ) ^ ( poly & ( - ( c & 1 ) ) )	25:16:394:422	696001	3	True				
ANR	696093	AssignmentExpression	c = ( c >> 1 ) ^ ( poly & ( - ( c & 1 ) ) )		696001	0		=			
ANR	696094	Identifier	c		696001	0					
ANR	696095	ExclusiveOrExpression	( c >> 1 ) ^ ( poly & ( - ( c & 1 ) ) )		696001	1		^			
ANR	696096	ShiftExpression	c >> 1		696001	0		>>			
ANR	696097	Identifier	c		696001	0					
ANR	696098	PrimaryExpression	1		696001	1					
ANR	696099	BitAndExpression	poly & ( - ( c & 1 ) )		696001	1		&			
ANR	696100	Identifier	poly		696001	0					
ANR	696101	UnaryOperationExpression	- ( c & 1 )		696001	1					
ANR	696102	UnaryOperator	-		696001	0					
ANR	696103	BitAndExpression	c & 1		696001	1		&			
ANR	696104	Identifier	c		696001	0					
ANR	696105	PrimaryExpression	1		696001	1					
ANR	696106	ExpressionStatement	ctx [ i ] = c	27:12:437:447	696001	1	True				
ANR	696107	AssignmentExpression	ctx [ i ] = c		696001	0		=			
ANR	696108	ArrayIndexing	ctx [ i ]		696001	0					
ANR	696109	Identifier	ctx		696001	0					
ANR	696110	Identifier	i		696001	1					
ANR	696111	Identifier	c		696001	1					
ANR	696112	ElseStatement	else		696001	0					
ANR	696113	CompoundStatement		29:15:390:390	696001	0					
ANR	696114	ForStatement	"for ( c = i << 24 , j = 0 ; j < 8 ; j ++ )"		696001	0					
ANR	696115	ForInit	"c = i << 24 , j = 0 ;"	31:17:485:503	696001	0	True				
ANR	696116	Expression	"c = i << 24 , j = 0"		696001	0					
ANR	696117	AssignmentExpression	c = i << 24		696001	0		=			
ANR	696118	Identifier	c		696001	0					
ANR	696119	ShiftExpression	i << 24		696001	1		<<			
ANR	696120	Identifier	i		696001	0					
ANR	696121	PrimaryExpression	24		696001	1					
ANR	696122	AssignmentExpression	j = 0		696001	1		=			
ANR	696123	Identifier	j		696001	0					
ANR	696124	PrimaryExpression	0		696001	1					
ANR	696125	Condition	j < 8	31:37:505:509	696001	1	True				
ANR	696126	RelationalExpression	j < 8		696001	0		<			
ANR	696127	Identifier	j		696001	0					
ANR	696128	PrimaryExpression	8		696001	1					
ANR	696129	PostIncDecOperationExpression	j ++	31:44:512:514	696001	2	True				
ANR	696130	Identifier	j		696001	0					
ANR	696131	IncDec	++		696001	1					
ANR	696132	ExpressionStatement	c = ( c << 1 ) ^ ( ( poly << ( 32 - bits ) ) & ( ( ( int32_t ) c ) >> 31 ) )	33:16:534:588	696001	3	True				
ANR	696133	AssignmentExpression	c = ( c << 1 ) ^ ( ( poly << ( 32 - bits ) ) & ( ( ( int32_t ) c ) >> 31 ) )		696001	0		=			
ANR	696134	Identifier	c		696001	0					
ANR	696135	ExclusiveOrExpression	( c << 1 ) ^ ( ( poly << ( 32 - bits ) ) & ( ( ( int32_t ) c ) >> 31 ) )		696001	1		^			
ANR	696136	ShiftExpression	c << 1		696001	0		<<			
ANR	696137	Identifier	c		696001	0					
ANR	696138	PrimaryExpression	1		696001	1					
ANR	696139	BitAndExpression	( poly << ( 32 - bits ) ) & ( ( ( int32_t ) c ) >> 31 )		696001	1		&			
ANR	696140	ShiftExpression	poly << ( 32 - bits )		696001	0		<<			
ANR	696141	Identifier	poly		696001	0					
ANR	696142	AdditiveExpression	32 - bits		696001	1		-			
ANR	696143	PrimaryExpression	32		696001	0					
ANR	696144	Identifier	bits		696001	1					
ANR	696145	ShiftExpression	( ( int32_t ) c ) >> 31		696001	1		>>			
ANR	696146	CastExpression	( int32_t ) c		696001	0					
ANR	696147	CastTarget	int32_t		696001	0					
ANR	696148	Identifier	c		696001	1					
ANR	696149	PrimaryExpression	31		696001	1					
ANR	696150	ExpressionStatement	ctx [ i ] = av_bswap32 ( c )	35:12:603:625	696001	1	True				
ANR	696151	AssignmentExpression	ctx [ i ] = av_bswap32 ( c )		696001	0		=			
ANR	696152	ArrayIndexing	ctx [ i ]		696001	0					
ANR	696153	Identifier	ctx		696001	0					
ANR	696154	Identifier	i		696001	1					
ANR	696155	CallExpression	av_bswap32 ( c )		696001	1					
ANR	696156	Callee	av_bswap32		696001	0					
ANR	696157	Identifier	av_bswap32		696001	0					
ANR	696158	ArgumentList	c		696001	1					
ANR	696159	Argument	c		696001	0					
ANR	696160	Identifier	c		696001	0					
ANR	696161	ExpressionStatement	ctx [ 256 ] = 1	41:4:650:660	696001	24	True				
ANR	696162	AssignmentExpression	ctx [ 256 ] = 1		696001	0		=			
ANR	696163	ArrayIndexing	ctx [ 256 ]		696001	0					
ANR	696164	Identifier	ctx		696001	0					
ANR	696165	PrimaryExpression	256		696001	1					
ANR	696166	PrimaryExpression	1		696001	1					
ANR	696167	IfStatement	if ( ctx_size >= sizeof ( AVCRC ) * 1024 )		696001	25					
ANR	696168	Condition	ctx_size >= sizeof ( AVCRC ) * 1024	45:7:689:718	696001	0	True				
ANR	696169	RelationalExpression	ctx_size >= sizeof ( AVCRC ) * 1024		696001	0		>=			
ANR	696170	Identifier	ctx_size		696001	0					
ANR	696171	MultiplicativeExpression	sizeof ( AVCRC ) * 1024		696001	1		*			
ANR	696172	SizeofExpression	sizeof ( AVCRC )		696001	0					
ANR	696173	Sizeof	sizeof		696001	0					
ANR	696174	SizeofOperand	AVCRC		696001	1					
ANR	696175	PrimaryExpression	1024		696001	1					
ANR	696176	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		696001	1					
ANR	696177	ForInit	i = 0 ;	47:13:735:740	696001	0	True				
ANR	696178	AssignmentExpression	i = 0		696001	0		=			
ANR	696179	Identifier	i		696001	0					
ANR	696180	PrimaryExpression	0		696001	1					
ANR	696181	Condition	i < 256	47:20:742:748	696001	1	True				
ANR	696182	RelationalExpression	i < 256		696001	0		<			
ANR	696183	Identifier	i		696001	0					
ANR	696184	PrimaryExpression	256		696001	1					
ANR	696185	PostIncDecOperationExpression	i ++	47:29:751:753	696001	2	True				
ANR	696186	Identifier	i		696001	0					
ANR	696187	IncDec	++		696001	1					
ANR	696188	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		696001	3					
ANR	696189	ForInit	j = 0 ;	49:16:773:776	696001	0	True				
ANR	696190	AssignmentExpression	j = 0		696001	0		=			
ANR	696191	Identifier	j		696001	0					
ANR	696192	PrimaryExpression	0		696001	1					
ANR	696193	Condition	j < 3	49:21:778:780	696001	1	True				
ANR	696194	RelationalExpression	j < 3		696001	0		<			
ANR	696195	Identifier	j		696001	0					
ANR	696196	PrimaryExpression	3		696001	1					
ANR	696197	PostIncDecOperationExpression	j ++	49:26:783:785	696001	2	True				
ANR	696198	Identifier	j		696001	0					
ANR	696199	IncDec	++		696001	1					
ANR	696200	ExpressionStatement	ctx [ 256 * ( j + 1 ) + i ] = ( ctx [ 256 * j + i ] >> 8 ) ^ ctx [ ctx [ 256 * j + i ] & 0xFF ]	51:16:805:873	696001	3	True				
ANR	696201	AssignmentExpression	ctx [ 256 * ( j + 1 ) + i ] = ( ctx [ 256 * j + i ] >> 8 ) ^ ctx [ ctx [ 256 * j + i ] & 0xFF ]		696001	0		=			
ANR	696202	ArrayIndexing	ctx [ 256 * ( j + 1 ) + i ]		696001	0					
ANR	696203	Identifier	ctx		696001	0					
ANR	696204	AdditiveExpression	256 * ( j + 1 ) + i		696001	1		+			
ANR	696205	MultiplicativeExpression	256 * ( j + 1 )		696001	0		*			
ANR	696206	PrimaryExpression	256		696001	0					
ANR	696207	AdditiveExpression	j + 1		696001	1		+			
ANR	696208	Identifier	j		696001	0					
ANR	696209	PrimaryExpression	1		696001	1					
ANR	696210	Identifier	i		696001	1					
ANR	696211	ExclusiveOrExpression	( ctx [ 256 * j + i ] >> 8 ) ^ ctx [ ctx [ 256 * j + i ] & 0xFF ]		696001	1		^			
ANR	696212	ShiftExpression	ctx [ 256 * j + i ] >> 8		696001	0		>>			
ANR	696213	ArrayIndexing	ctx [ 256 * j + i ]		696001	0					
ANR	696214	Identifier	ctx		696001	0					
ANR	696215	AdditiveExpression	256 * j + i		696001	1		+			
ANR	696216	MultiplicativeExpression	256 * j		696001	0		*			
ANR	696217	PrimaryExpression	256		696001	0					
ANR	696218	Identifier	j		696001	1					
ANR	696219	Identifier	i		696001	1					
ANR	696220	PrimaryExpression	8		696001	1					
ANR	696221	ArrayIndexing	ctx [ ctx [ 256 * j + i ] & 0xFF ]		696001	1					
ANR	696222	Identifier	ctx		696001	0					
ANR	696223	BitAndExpression	ctx [ 256 * j + i ] & 0xFF		696001	1		&			
ANR	696224	ArrayIndexing	ctx [ 256 * j + i ]		696001	0					
ANR	696225	Identifier	ctx		696001	0					
ANR	696226	AdditiveExpression	256 * j + i		696001	1		+			
ANR	696227	MultiplicativeExpression	256 * j		696001	0		*			
ANR	696228	PrimaryExpression	256		696001	0					
ANR	696229	Identifier	j		696001	1					
ANR	696230	Identifier	i		696001	1					
ANR	696231	PrimaryExpression	0xFF		696001	1					
ANR	696232	ReturnStatement	return 0 ;	57:4:890:898	696001	26	True				
ANR	696233	PrimaryExpression	0		696001	0					
ANR	696234	ReturnType	int		696001	1					
ANR	696235	Identifier	av_crc_init		696001	2					
ANR	696236	ParameterList	"AVCRC * ctx , int le , int bits , uint32_t poly , int ctx_size"		696001	3					
ANR	696237	Parameter	AVCRC * ctx	1:16:16:25	696001	0	True				
ANR	696238	ParameterType	AVCRC *		696001	0					
ANR	696239	Identifier	ctx		696001	1					
ANR	696240	Parameter	int le	1:28:28:33	696001	1	True				
ANR	696241	ParameterType	int		696001	0					
ANR	696242	Identifier	le		696001	1					
ANR	696243	Parameter	int bits	1:36:36:43	696001	2	True				
ANR	696244	ParameterType	int		696001	0					
ANR	696245	Identifier	bits		696001	1					
ANR	696246	Parameter	uint32_t poly	1:46:46:58	696001	3	True				
ANR	696247	ParameterType	uint32_t		696001	0					
ANR	696248	Identifier	poly		696001	1					
ANR	696249	Parameter	int ctx_size	1:61:61:72	696001	4	True				
ANR	696250	ParameterType	int		696001	0					
ANR	696251	Identifier	ctx_size		696001	1					
ANR	696252	CFGEntryNode	ENTRY		696001		True				
ANR	696253	CFGExitNode	EXIT		696001		True				
ANR	696254	Symbol	* * j		696001						
ANR	696255	Symbol	* * i		696001						
ANR	696256	Symbol	c		696001						
ANR	696257	Symbol	av_bswap32		696001						
ANR	696258	Symbol	ctx_size		696001						
ANR	696259	Symbol	ctx		696001						
ANR	696260	Symbol	bits		696001						
ANR	696261	Symbol	i		696001						
ANR	696262	Symbol	j		696001						
ANR	696263	Symbol	* ctx		696001						
ANR	696264	Symbol	* i		696001						
ANR	696265	Symbol	* j		696001						
ANR	696266	Symbol	poly		696001						
ANR	696267	Symbol	le		696001						
ANR	696268	Symbol	* * ctx		696001						
