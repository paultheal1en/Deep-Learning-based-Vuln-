command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6314785	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_ffconfig_0.c								
ANR	6314786	Function	parse_ffconfig	1:0:0:28482							
ANR	6314787	FunctionDef	parse_ffconfig (const char * filename)		6314786	0					
ANR	6314788	CompoundStatement		3:0:49:28482	6314786	0					
ANR	6314789	IdentifierDeclStatement	FILE * f ;	5:4:56:63	6314786	0	True				
ANR	6314790	IdentifierDecl	* f		6314786	0					
ANR	6314791	IdentifierDeclType	FILE *		6314786	0					
ANR	6314792	Identifier	f		6314786	1					
ANR	6314793	IdentifierDeclStatement	char line [ 1024 ] ;	7:4:70:85	6314786	1	True				
ANR	6314794	IdentifierDecl	line [ 1024 ]		6314786	0					
ANR	6314795	IdentifierDeclType	char [ 1024 ]		6314786	0					
ANR	6314796	Identifier	line		6314786	1					
ANR	6314797	PrimaryExpression	1024		6314786	2					
ANR	6314798	IdentifierDeclStatement	char cmd [ 64 ] ;	9:4:92:104	6314786	2	True				
ANR	6314799	IdentifierDecl	cmd [ 64 ]		6314786	0					
ANR	6314800	IdentifierDeclType	char [ 64 ]		6314786	0					
ANR	6314801	Identifier	cmd		6314786	1					
ANR	6314802	PrimaryExpression	64		6314786	2					
ANR	6314803	IdentifierDeclStatement	char arg [ 1024 ] ;	11:4:111:125	6314786	3	True				
ANR	6314804	IdentifierDecl	arg [ 1024 ]		6314786	0					
ANR	6314805	IdentifierDeclType	char [ 1024 ]		6314786	0					
ANR	6314806	Identifier	arg		6314786	1					
ANR	6314807	PrimaryExpression	1024		6314786	2					
ANR	6314808	IdentifierDeclStatement	const char * p ;	13:4:132:145	6314786	4	True				
ANR	6314809	IdentifierDecl	* p		6314786	0					
ANR	6314810	IdentifierDeclType	const char *		6314786	0					
ANR	6314811	Identifier	p		6314786	1					
ANR	6314812	IdentifierDeclStatement	"int val , errors , line_num ;"	15:4:152:177	6314786	5	True				
ANR	6314813	IdentifierDecl	val		6314786	0					
ANR	6314814	IdentifierDeclType	int		6314786	0					
ANR	6314815	Identifier	val		6314786	1					
ANR	6314816	IdentifierDecl	errors		6314786	1					
ANR	6314817	IdentifierDeclType	int		6314786	0					
ANR	6314818	Identifier	errors		6314786	1					
ANR	6314819	IdentifierDecl	line_num		6314786	2					
ANR	6314820	IdentifierDeclType	int		6314786	0					
ANR	6314821	Identifier	line_num		6314786	1					
ANR	6314822	IdentifierDeclStatement	"FFStream * * last_stream , * stream , * redirect ;"	17:4:184:226	6314786	6	True				
ANR	6314823	IdentifierDecl	* * last_stream		6314786	0					
ANR	6314824	IdentifierDeclType	FFStream * *		6314786	0					
ANR	6314825	Identifier	last_stream		6314786	1					
ANR	6314826	IdentifierDecl	* stream		6314786	1					
ANR	6314827	IdentifierDeclType	FFStream *		6314786	0					
ANR	6314828	Identifier	stream		6314786	1					
ANR	6314829	IdentifierDecl	* redirect		6314786	2					
ANR	6314830	IdentifierDeclType	FFStream *		6314786	0					
ANR	6314831	Identifier	redirect		6314786	1					
ANR	6314832	IdentifierDeclStatement	"FFStream * * last_feed , * feed , * s ;"	19:4:233:264	6314786	7	True				
ANR	6314833	IdentifierDecl	* * last_feed		6314786	0					
ANR	6314834	IdentifierDeclType	FFStream * *		6314786	0					
ANR	6314835	Identifier	last_feed		6314786	1					
ANR	6314836	IdentifierDecl	* feed		6314786	1					
ANR	6314837	IdentifierDeclType	FFStream *		6314786	0					
ANR	6314838	Identifier	feed		6314786	1					
ANR	6314839	IdentifierDecl	* s		6314786	2					
ANR	6314840	IdentifierDeclType	FFStream *		6314786	0					
ANR	6314841	Identifier	s		6314786	1					
ANR	6314842	IdentifierDeclStatement	"AVCodecContext audio_enc , video_enc ;"	21:4:271:306	6314786	8	True				
ANR	6314843	IdentifierDecl	audio_enc		6314786	0					
ANR	6314844	IdentifierDeclType	AVCodecContext		6314786	0					
ANR	6314845	Identifier	audio_enc		6314786	1					
ANR	6314846	IdentifierDecl	video_enc		6314786	1					
ANR	6314847	IdentifierDeclType	AVCodecContext		6314786	0					
ANR	6314848	Identifier	video_enc		6314786	1					
ANR	6314849	IdentifierDeclStatement	"enum CodecID audio_id , video_id ;"	23:4:313:344	6314786	9	True				
ANR	6314850	IdentifierDecl	audio_id		6314786	0					
ANR	6314851	IdentifierDeclType	enum CodecID		6314786	0					
ANR	6314852	Identifier	audio_id		6314786	1					
ANR	6314853	IdentifierDecl	video_id		6314786	1					
ANR	6314854	IdentifierDeclType	enum CodecID		6314786	0					
ANR	6314855	Identifier	video_id		6314786	1					
ANR	6314856	ExpressionStatement	"f = fopen ( filename , ""r"" )"	27:4:353:377	6314786	10	True				
ANR	6314857	AssignmentExpression	"f = fopen ( filename , ""r"" )"		6314786	0		=			
ANR	6314858	Identifier	f		6314786	0					
ANR	6314859	CallExpression	"fopen ( filename , ""r"" )"		6314786	1					
ANR	6314860	Callee	fopen		6314786	0					
ANR	6314861	Identifier	fopen		6314786	0					
ANR	6314862	ArgumentList	filename		6314786	1					
ANR	6314863	Argument	filename		6314786	0					
ANR	6314864	Identifier	filename		6314786	0					
ANR	6314865	Argument	"""r"""		6314786	1					
ANR	6314866	PrimaryExpression	"""r"""		6314786	0					
ANR	6314867	IfStatement	if ( ! f )		6314786	11					
ANR	6314868	Condition	! f	29:8:388:389	6314786	0	True				
ANR	6314869	UnaryOperationExpression	! f		6314786	0					
ANR	6314870	UnaryOperator	!		6314786	0					
ANR	6314871	Identifier	f		6314786	1					
ANR	6314872	CompoundStatement		27:12:342:342	6314786	1					
ANR	6314873	ExpressionStatement	perror ( filename )	31:8:403:419	6314786	0	True				
ANR	6314874	CallExpression	perror ( filename )		6314786	0					
ANR	6314875	Callee	perror		6314786	0					
ANR	6314876	Identifier	perror		6314786	0					
ANR	6314877	ArgumentList	filename		6314786	1					
ANR	6314878	Argument	filename		6314786	0					
ANR	6314879	Identifier	filename		6314786	0					
ANR	6314880	ReturnStatement	return - 1 ;	33:8:430:439	6314786	1	True				
ANR	6314881	UnaryOperationExpression	- 1		6314786	0					
ANR	6314882	UnaryOperator	-		6314786	0					
ANR	6314883	PrimaryExpression	1		6314786	1					
ANR	6314884	ExpressionStatement	errors = 0	39:4:455:465	6314786	12	True				
ANR	6314885	AssignmentExpression	errors = 0		6314786	0		=			
ANR	6314886	Identifier	errors		6314786	0					
ANR	6314887	PrimaryExpression	0		6314786	1					
ANR	6314888	ExpressionStatement	line_num = 0	41:4:472:484	6314786	13	True				
ANR	6314889	AssignmentExpression	line_num = 0		6314786	0		=			
ANR	6314890	Identifier	line_num		6314786	0					
ANR	6314891	PrimaryExpression	0		6314786	1					
ANR	6314892	ExpressionStatement	first_stream = NULL	43:4:491:510	6314786	14	True				
ANR	6314893	AssignmentExpression	first_stream = NULL		6314786	0		=			
ANR	6314894	Identifier	first_stream		6314786	0					
ANR	6314895	Identifier	NULL		6314786	1					
ANR	6314896	ExpressionStatement	last_stream = & first_stream	45:4:517:544	6314786	15	True				
ANR	6314897	AssignmentExpression	last_stream = & first_stream		6314786	0		=			
ANR	6314898	Identifier	last_stream		6314786	0					
ANR	6314899	UnaryOperationExpression	& first_stream		6314786	1					
ANR	6314900	UnaryOperator	&		6314786	0					
ANR	6314901	Identifier	first_stream		6314786	1					
ANR	6314902	ExpressionStatement	first_feed = NULL	47:4:551:568	6314786	16	True				
ANR	6314903	AssignmentExpression	first_feed = NULL		6314786	0		=			
ANR	6314904	Identifier	first_feed		6314786	0					
ANR	6314905	Identifier	NULL		6314786	1					
ANR	6314906	ExpressionStatement	last_feed = & first_feed	49:4:575:598	6314786	17	True				
ANR	6314907	AssignmentExpression	last_feed = & first_feed		6314786	0		=			
ANR	6314908	Identifier	last_feed		6314786	0					
ANR	6314909	UnaryOperationExpression	& first_feed		6314786	1					
ANR	6314910	UnaryOperator	&		6314786	0					
ANR	6314911	Identifier	first_feed		6314786	1					
ANR	6314912	ExpressionStatement	stream = NULL	51:4:605:618	6314786	18	True				
ANR	6314913	AssignmentExpression	stream = NULL		6314786	0		=			
ANR	6314914	Identifier	stream		6314786	0					
ANR	6314915	Identifier	NULL		6314786	1					
ANR	6314916	ExpressionStatement	feed = NULL	53:4:625:636	6314786	19	True				
ANR	6314917	AssignmentExpression	feed = NULL		6314786	0		=			
ANR	6314918	Identifier	feed		6314786	0					
ANR	6314919	Identifier	NULL		6314786	1					
ANR	6314920	ExpressionStatement	redirect = NULL	55:4:643:658	6314786	20	True				
ANR	6314921	AssignmentExpression	redirect = NULL		6314786	0		=			
ANR	6314922	Identifier	redirect		6314786	0					
ANR	6314923	Identifier	NULL		6314786	1					
ANR	6314924	ExpressionStatement	audio_id = CODEC_ID_NONE	57:4:665:689	6314786	21	True				
ANR	6314925	AssignmentExpression	audio_id = CODEC_ID_NONE		6314786	0		=			
ANR	6314926	Identifier	audio_id		6314786	0					
ANR	6314927	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6314928	ExpressionStatement	video_id = CODEC_ID_NONE	59:4:696:720	6314786	22	True				
ANR	6314929	AssignmentExpression	video_id = CODEC_ID_NONE		6314786	0		=			
ANR	6314930	Identifier	video_id		6314786	0					
ANR	6314931	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6314932	ForStatement	for ( ; ; )		6314786	23					
ANR	6314933	CompoundStatement		59:12:685:685	6314786	0					
ANR	6314934	IfStatement	"if ( fgets ( line , sizeof ( line ) , f ) == NULL )"		6314786	0					
ANR	6314935	Condition	"fgets ( line , sizeof ( line ) , f ) == NULL"	63:12:750:785	6314786	0	True				
ANR	6314936	EqualityExpression	"fgets ( line , sizeof ( line ) , f ) == NULL"		6314786	0		==			
ANR	6314937	CallExpression	"fgets ( line , sizeof ( line ) , f )"		6314786	0					
ANR	6314938	Callee	fgets		6314786	0					
ANR	6314939	Identifier	fgets		6314786	0					
ANR	6314940	ArgumentList	line		6314786	1					
ANR	6314941	Argument	line		6314786	0					
ANR	6314942	Identifier	line		6314786	0					
ANR	6314943	Argument	sizeof ( line )		6314786	1					
ANR	6314944	SizeofExpression	sizeof ( line )		6314786	0					
ANR	6314945	Sizeof	sizeof		6314786	0					
ANR	6314946	SizeofOperand	line		6314786	1					
ANR	6314947	Argument	f		6314786	2					
ANR	6314948	Identifier	f		6314786	0					
ANR	6314949	Identifier	NULL		6314786	1					
ANR	6314950	BreakStatement	break ;	65:12:801:806	6314786	1	True				
ANR	6314951	ExpressionStatement	line_num ++	67:8:817:827	6314786	1	True				
ANR	6314952	PostIncDecOperationExpression	line_num ++		6314786	0					
ANR	6314953	Identifier	line_num		6314786	0					
ANR	6314954	IncDec	++		6314786	1					
ANR	6314955	ExpressionStatement	p = line	69:8:838:846	6314786	2	True				
ANR	6314956	AssignmentExpression	p = line		6314786	0		=			
ANR	6314957	Identifier	p		6314786	0					
ANR	6314958	Identifier	line		6314786	1					
ANR	6314959	WhileStatement	while ( isspace ( * p ) )		6314786	3					
ANR	6314960	Condition	isspace ( * p )	71:15:864:874	6314786	0	True				
ANR	6314961	CallExpression	isspace ( * p )		6314786	0					
ANR	6314962	Callee	isspace		6314786	0					
ANR	6314963	Identifier	isspace		6314786	0					
ANR	6314964	ArgumentList	* p		6314786	1					
ANR	6314965	Argument	* p		6314786	0					
ANR	6314966	UnaryOperationExpression	* p		6314786	0					
ANR	6314967	UnaryOperator	*		6314786	0					
ANR	6314968	Identifier	p		6314786	1					
ANR	6314969	ExpressionStatement	p ++	73:12:890:893	6314786	1	True				
ANR	6314970	PostIncDecOperationExpression	p ++		6314786	0					
ANR	6314971	Identifier	p		6314786	0					
ANR	6314972	IncDec	++		6314786	1					
ANR	6314973	IfStatement	if ( * p == '\\0' || * p == '#' )		6314786	4					
ANR	6314974	Condition	* p == '\\0' || * p == '#'	75:12:908:930	6314786	0	True				
ANR	6314975	OrExpression	* p == '\\0' || * p == '#'		6314786	0		||			
ANR	6314976	EqualityExpression	* p == '\\0'		6314786	0		==			
ANR	6314977	UnaryOperationExpression	* p		6314786	0					
ANR	6314978	UnaryOperator	*		6314786	0					
ANR	6314979	Identifier	p		6314786	1					
ANR	6314980	PrimaryExpression	'\\0'		6314786	1					
ANR	6314981	EqualityExpression	* p == '#'		6314786	1		==			
ANR	6314982	UnaryOperationExpression	* p		6314786	0					
ANR	6314983	UnaryOperator	*		6314786	0					
ANR	6314984	Identifier	p		6314786	1					
ANR	6314985	PrimaryExpression	'#'		6314786	1					
ANR	6314986	ContinueStatement	continue ;	77:12:946:954	6314786	1	True				
ANR	6314987	ExpressionStatement	"get_arg ( cmd , sizeof ( cmd ) , & p )"	81:8:967:996	6314786	5	True				
ANR	6314988	CallExpression	"get_arg ( cmd , sizeof ( cmd ) , & p )"		6314786	0					
ANR	6314989	Callee	get_arg		6314786	0					
ANR	6314990	Identifier	get_arg		6314786	0					
ANR	6314991	ArgumentList	cmd		6314786	1					
ANR	6314992	Argument	cmd		6314786	0					
ANR	6314993	Identifier	cmd		6314786	0					
ANR	6314994	Argument	sizeof ( cmd )		6314786	1					
ANR	6314995	SizeofExpression	sizeof ( cmd )		6314786	0					
ANR	6314996	Sizeof	sizeof		6314786	0					
ANR	6314997	SizeofOperand	cmd		6314786	1					
ANR	6314998	Argument	& p		6314786	2					
ANR	6314999	UnaryOperationExpression	& p		6314786	0					
ANR	6315000	UnaryOperator	&		6314786	0					
ANR	6315001	Identifier	p		6314786	1					
ANR	6315002	IfStatement	"if ( ! strcasecmp ( cmd , ""Port"" ) )"		6314786	6					
ANR	6315003	Condition	"! strcasecmp ( cmd , ""Port"" )"	85:12:1013:1036	6314786	0	True				
ANR	6315004	UnaryOperationExpression	"! strcasecmp ( cmd , ""Port"" )"		6314786	0					
ANR	6315005	UnaryOperator	!		6314786	0					
ANR	6315006	CallExpression	"strcasecmp ( cmd , ""Port"" )"		6314786	1					
ANR	6315007	Callee	strcasecmp		6314786	0					
ANR	6315008	Identifier	strcasecmp		6314786	0					
ANR	6315009	ArgumentList	cmd		6314786	1					
ANR	6315010	Argument	cmd		6314786	0					
ANR	6315011	Identifier	cmd		6314786	0					
ANR	6315012	Argument	"""Port"""		6314786	1					
ANR	6315013	PrimaryExpression	"""Port"""		6314786	0					
ANR	6315014	CompoundStatement		83:38:989:989	6314786	1					
ANR	6315015	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	87:12:1054:1083	6314786	0	True				
ANR	6315016	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315017	Callee	get_arg		6314786	0					
ANR	6315018	Identifier	get_arg		6314786	0					
ANR	6315019	ArgumentList	arg		6314786	1					
ANR	6315020	Argument	arg		6314786	0					
ANR	6315021	Identifier	arg		6314786	0					
ANR	6315022	Argument	sizeof ( arg )		6314786	1					
ANR	6315023	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315024	Sizeof	sizeof		6314786	0					
ANR	6315025	SizeofOperand	arg		6314786	1					
ANR	6315026	Argument	& p		6314786	2					
ANR	6315027	UnaryOperationExpression	& p		6314786	0					
ANR	6315028	UnaryOperator	&		6314786	0					
ANR	6315029	Identifier	p		6314786	1					
ANR	6315030	ExpressionStatement	val = atoi ( arg )	89:12:1098:1113	6314786	1	True				
ANR	6315031	AssignmentExpression	val = atoi ( arg )		6314786	0		=			
ANR	6315032	Identifier	val		6314786	0					
ANR	6315033	CallExpression	atoi ( arg )		6314786	1					
ANR	6315034	Callee	atoi		6314786	0					
ANR	6315035	Identifier	atoi		6314786	0					
ANR	6315036	ArgumentList	arg		6314786	1					
ANR	6315037	Argument	arg		6314786	0					
ANR	6315038	Identifier	arg		6314786	0					
ANR	6315039	IfStatement	if ( val < 1 || val > 65536 )		6314786	2					
ANR	6315040	Condition	val < 1 || val > 65536	91:16:1132:1153	6314786	0	True				
ANR	6315041	OrExpression	val < 1 || val > 65536		6314786	0		||			
ANR	6315042	RelationalExpression	val < 1		6314786	0		<			
ANR	6315043	Identifier	val		6314786	0					
ANR	6315044	PrimaryExpression	1		6314786	1					
ANR	6315045	RelationalExpression	val > 65536		6314786	1		>			
ANR	6315046	Identifier	val		6314786	0					
ANR	6315047	PrimaryExpression	65536		6314786	1					
ANR	6315048	CompoundStatement		89:40:1106:1106	6314786	1					
ANR	6315049	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid port: %s\\n"" , filename , line_num , arg )"	93:16:1175:1269	6314786	0	True				
ANR	6315050	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid port: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315051	Callee	fprintf		6314786	0					
ANR	6315052	Identifier	fprintf		6314786	0					
ANR	6315053	ArgumentList	stderr		6314786	1					
ANR	6315054	Argument	stderr		6314786	0					
ANR	6315055	Identifier	stderr		6314786	0					
ANR	6315056	Argument	"""%s:%d: Invalid port: %s\\n"""		6314786	1					
ANR	6315057	PrimaryExpression	"""%s:%d: Invalid port: %s\\n"""		6314786	0					
ANR	6315058	Argument	filename		6314786	2					
ANR	6315059	Identifier	filename		6314786	0					
ANR	6315060	Argument	line_num		6314786	3					
ANR	6315061	Identifier	line_num		6314786	0					
ANR	6315062	Argument	arg		6314786	4					
ANR	6315063	Identifier	arg		6314786	0					
ANR	6315064	ExpressionStatement	errors ++	97:16:1288:1296	6314786	1	True				
ANR	6315065	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315066	Identifier	errors		6314786	0					
ANR	6315067	IncDec	++		6314786	1					
ANR	6315068	ExpressionStatement	my_http_addr . sin_port = htons ( val )	101:12:1326:1360	6314786	3	True				
ANR	6315069	AssignmentExpression	my_http_addr . sin_port = htons ( val )		6314786	0		=			
ANR	6315070	MemberAccess	my_http_addr . sin_port		6314786	0					
ANR	6315071	Identifier	my_http_addr		6314786	0					
ANR	6315072	Identifier	sin_port		6314786	1					
ANR	6315073	CallExpression	htons ( val )		6314786	1					
ANR	6315074	Callee	htons		6314786	0					
ANR	6315075	Identifier	htons		6314786	0					
ANR	6315076	ArgumentList	val		6314786	1					
ANR	6315077	Argument	val		6314786	0					
ANR	6315078	Identifier	val		6314786	0					
ANR	6315079	ElseStatement	else		6314786	0					
ANR	6315080	IfStatement	"if ( ! strcasecmp ( cmd , ""BindAddress"" ) )"		6314786	0					
ANR	6315081	Condition	"! strcasecmp ( cmd , ""BindAddress"" )"	103:19:1382:1412	6314786	0	True				
ANR	6315082	UnaryOperationExpression	"! strcasecmp ( cmd , ""BindAddress"" )"		6314786	0					
ANR	6315083	UnaryOperator	!		6314786	0					
ANR	6315084	CallExpression	"strcasecmp ( cmd , ""BindAddress"" )"		6314786	1					
ANR	6315085	Callee	strcasecmp		6314786	0					
ANR	6315086	Identifier	strcasecmp		6314786	0					
ANR	6315087	ArgumentList	cmd		6314786	1					
ANR	6315088	Argument	cmd		6314786	0					
ANR	6315089	Identifier	cmd		6314786	0					
ANR	6315090	Argument	"""BindAddress"""		6314786	1					
ANR	6315091	PrimaryExpression	"""BindAddress"""		6314786	0					
ANR	6315092	CompoundStatement		101:52:1365:1365	6314786	1					
ANR	6315093	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	105:12:1430:1459	6314786	0	True				
ANR	6315094	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315095	Callee	get_arg		6314786	0					
ANR	6315096	Identifier	get_arg		6314786	0					
ANR	6315097	ArgumentList	arg		6314786	1					
ANR	6315098	Argument	arg		6314786	0					
ANR	6315099	Identifier	arg		6314786	0					
ANR	6315100	Argument	sizeof ( arg )		6314786	1					
ANR	6315101	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315102	Sizeof	sizeof		6314786	0					
ANR	6315103	SizeofOperand	arg		6314786	1					
ANR	6315104	Argument	& p		6314786	2					
ANR	6315105	UnaryOperationExpression	& p		6314786	0					
ANR	6315106	UnaryOperator	&		6314786	0					
ANR	6315107	Identifier	p		6314786	1					
ANR	6315108	IfStatement	"if ( resolve_host ( & my_http_addr . sin_addr , arg ) != 0 )"		6314786	1					
ANR	6315109	Condition	"resolve_host ( & my_http_addr . sin_addr , arg ) != 0"	107:16:1478:1523	6314786	0	True				
ANR	6315110	EqualityExpression	"resolve_host ( & my_http_addr . sin_addr , arg ) != 0"		6314786	0		!=			
ANR	6315111	CallExpression	"resolve_host ( & my_http_addr . sin_addr , arg )"		6314786	0					
ANR	6315112	Callee	resolve_host		6314786	0					
ANR	6315113	Identifier	resolve_host		6314786	0					
ANR	6315114	ArgumentList	& my_http_addr . sin_addr		6314786	1					
ANR	6315115	Argument	& my_http_addr . sin_addr		6314786	0					
ANR	6315116	UnaryOperationExpression	& my_http_addr . sin_addr		6314786	0					
ANR	6315117	UnaryOperator	&		6314786	0					
ANR	6315118	MemberAccess	my_http_addr . sin_addr		6314786	1					
ANR	6315119	Identifier	my_http_addr		6314786	0					
ANR	6315120	Identifier	sin_addr		6314786	1					
ANR	6315121	Argument	arg		6314786	1					
ANR	6315122	Identifier	arg		6314786	0					
ANR	6315123	PrimaryExpression	0		6314786	1					
ANR	6315124	CompoundStatement		105:64:1476:1476	6314786	1					
ANR	6315125	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"	109:16:1545:1650	6314786	0	True				
ANR	6315126	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315127	Callee	fprintf		6314786	0					
ANR	6315128	Identifier	fprintf		6314786	0					
ANR	6315129	ArgumentList	stderr		6314786	1					
ANR	6315130	Argument	stderr		6314786	0					
ANR	6315131	Identifier	stderr		6314786	0					
ANR	6315132	Argument	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	1					
ANR	6315133	PrimaryExpression	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	0					
ANR	6315134	Argument	filename		6314786	2					
ANR	6315135	Identifier	filename		6314786	0					
ANR	6315136	Argument	line_num		6314786	3					
ANR	6315137	Identifier	line_num		6314786	0					
ANR	6315138	Argument	arg		6314786	4					
ANR	6315139	Identifier	arg		6314786	0					
ANR	6315140	ExpressionStatement	errors ++	113:16:1669:1677	6314786	1	True				
ANR	6315141	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315142	Identifier	errors		6314786	0					
ANR	6315143	IncDec	++		6314786	1					
ANR	6315144	ElseStatement	else		6314786	0					
ANR	6315145	IfStatement	"if ( ! strcasecmp ( cmd , ""NoDaemon"" ) )"		6314786	0					
ANR	6315146	Condition	"! strcasecmp ( cmd , ""NoDaemon"" )"	117:19:1714:1741	6314786	0	True				
ANR	6315147	UnaryOperationExpression	"! strcasecmp ( cmd , ""NoDaemon"" )"		6314786	0					
ANR	6315148	UnaryOperator	!		6314786	0					
ANR	6315149	CallExpression	"strcasecmp ( cmd , ""NoDaemon"" )"		6314786	1					
ANR	6315150	Callee	strcasecmp		6314786	0					
ANR	6315151	Identifier	strcasecmp		6314786	0					
ANR	6315152	ArgumentList	cmd		6314786	1					
ANR	6315153	Argument	cmd		6314786	0					
ANR	6315154	Identifier	cmd		6314786	0					
ANR	6315155	Argument	"""NoDaemon"""		6314786	1					
ANR	6315156	PrimaryExpression	"""NoDaemon"""		6314786	0					
ANR	6315157	CompoundStatement		115:49:1694:1694	6314786	1					
ANR	6315158	ExpressionStatement	ffserver_daemon = 0	119:12:1759:1778	6314786	0	True				
ANR	6315159	AssignmentExpression	ffserver_daemon = 0		6314786	0		=			
ANR	6315160	Identifier	ffserver_daemon		6314786	0					
ANR	6315161	PrimaryExpression	0		6314786	1					
ANR	6315162	ElseStatement	else		6314786	0					
ANR	6315163	IfStatement	"if ( ! strcasecmp ( cmd , ""RTSPPort"" ) )"		6314786	0					
ANR	6315164	Condition	"! strcasecmp ( cmd , ""RTSPPort"" )"	121:19:1800:1827	6314786	0	True				
ANR	6315165	UnaryOperationExpression	"! strcasecmp ( cmd , ""RTSPPort"" )"		6314786	0					
ANR	6315166	UnaryOperator	!		6314786	0					
ANR	6315167	CallExpression	"strcasecmp ( cmd , ""RTSPPort"" )"		6314786	1					
ANR	6315168	Callee	strcasecmp		6314786	0					
ANR	6315169	Identifier	strcasecmp		6314786	0					
ANR	6315170	ArgumentList	cmd		6314786	1					
ANR	6315171	Argument	cmd		6314786	0					
ANR	6315172	Identifier	cmd		6314786	0					
ANR	6315173	Argument	"""RTSPPort"""		6314786	1					
ANR	6315174	PrimaryExpression	"""RTSPPort"""		6314786	0					
ANR	6315175	CompoundStatement		119:49:1780:1780	6314786	1					
ANR	6315176	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	123:12:1845:1874	6314786	0	True				
ANR	6315177	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315178	Callee	get_arg		6314786	0					
ANR	6315179	Identifier	get_arg		6314786	0					
ANR	6315180	ArgumentList	arg		6314786	1					
ANR	6315181	Argument	arg		6314786	0					
ANR	6315182	Identifier	arg		6314786	0					
ANR	6315183	Argument	sizeof ( arg )		6314786	1					
ANR	6315184	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315185	Sizeof	sizeof		6314786	0					
ANR	6315186	SizeofOperand	arg		6314786	1					
ANR	6315187	Argument	& p		6314786	2					
ANR	6315188	UnaryOperationExpression	& p		6314786	0					
ANR	6315189	UnaryOperator	&		6314786	0					
ANR	6315190	Identifier	p		6314786	1					
ANR	6315191	ExpressionStatement	val = atoi ( arg )	125:12:1889:1904	6314786	1	True				
ANR	6315192	AssignmentExpression	val = atoi ( arg )		6314786	0		=			
ANR	6315193	Identifier	val		6314786	0					
ANR	6315194	CallExpression	atoi ( arg )		6314786	1					
ANR	6315195	Callee	atoi		6314786	0					
ANR	6315196	Identifier	atoi		6314786	0					
ANR	6315197	ArgumentList	arg		6314786	1					
ANR	6315198	Argument	arg		6314786	0					
ANR	6315199	Identifier	arg		6314786	0					
ANR	6315200	IfStatement	if ( val < 1 || val > 65536 )		6314786	2					
ANR	6315201	Condition	val < 1 || val > 65536	127:16:1923:1944	6314786	0	True				
ANR	6315202	OrExpression	val < 1 || val > 65536		6314786	0		||			
ANR	6315203	RelationalExpression	val < 1		6314786	0		<			
ANR	6315204	Identifier	val		6314786	0					
ANR	6315205	PrimaryExpression	1		6314786	1					
ANR	6315206	RelationalExpression	val > 65536		6314786	1		>			
ANR	6315207	Identifier	val		6314786	0					
ANR	6315208	PrimaryExpression	65536		6314786	1					
ANR	6315209	CompoundStatement		125:40:1897:1897	6314786	1					
ANR	6315210	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid port: %s\\n"" , filename , line_num , arg )"	129:16:1966:2060	6314786	0	True				
ANR	6315211	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid port: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315212	Callee	fprintf		6314786	0					
ANR	6315213	Identifier	fprintf		6314786	0					
ANR	6315214	ArgumentList	stderr		6314786	1					
ANR	6315215	Argument	stderr		6314786	0					
ANR	6315216	Identifier	stderr		6314786	0					
ANR	6315217	Argument	"""%s:%d: Invalid port: %s\\n"""		6314786	1					
ANR	6315218	PrimaryExpression	"""%s:%d: Invalid port: %s\\n"""		6314786	0					
ANR	6315219	Argument	filename		6314786	2					
ANR	6315220	Identifier	filename		6314786	0					
ANR	6315221	Argument	line_num		6314786	3					
ANR	6315222	Identifier	line_num		6314786	0					
ANR	6315223	Argument	arg		6314786	4					
ANR	6315224	Identifier	arg		6314786	0					
ANR	6315225	ExpressionStatement	errors ++	133:16:2079:2087	6314786	1	True				
ANR	6315226	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315227	Identifier	errors		6314786	0					
ANR	6315228	IncDec	++		6314786	1					
ANR	6315229	ExpressionStatement	my_rtsp_addr . sin_port = htons ( atoi ( arg ) )	137:12:2117:2157	6314786	3	True				
ANR	6315230	AssignmentExpression	my_rtsp_addr . sin_port = htons ( atoi ( arg ) )		6314786	0		=			
ANR	6315231	MemberAccess	my_rtsp_addr . sin_port		6314786	0					
ANR	6315232	Identifier	my_rtsp_addr		6314786	0					
ANR	6315233	Identifier	sin_port		6314786	1					
ANR	6315234	CallExpression	htons ( atoi ( arg ) )		6314786	1					
ANR	6315235	Callee	htons		6314786	0					
ANR	6315236	Identifier	htons		6314786	0					
ANR	6315237	ArgumentList	atoi ( arg )		6314786	1					
ANR	6315238	Argument	atoi ( arg )		6314786	0					
ANR	6315239	CallExpression	atoi ( arg )		6314786	0					
ANR	6315240	Callee	atoi		6314786	0					
ANR	6315241	Identifier	atoi		6314786	0					
ANR	6315242	ArgumentList	arg		6314786	1					
ANR	6315243	Argument	arg		6314786	0					
ANR	6315244	Identifier	arg		6314786	0					
ANR	6315245	ElseStatement	else		6314786	0					
ANR	6315246	IfStatement	"if ( ! strcasecmp ( cmd , ""RTSPBindAddress"" ) )"		6314786	0					
ANR	6315247	Condition	"! strcasecmp ( cmd , ""RTSPBindAddress"" )"	139:19:2179:2213	6314786	0	True				
ANR	6315248	UnaryOperationExpression	"! strcasecmp ( cmd , ""RTSPBindAddress"" )"		6314786	0					
ANR	6315249	UnaryOperator	!		6314786	0					
ANR	6315250	CallExpression	"strcasecmp ( cmd , ""RTSPBindAddress"" )"		6314786	1					
ANR	6315251	Callee	strcasecmp		6314786	0					
ANR	6315252	Identifier	strcasecmp		6314786	0					
ANR	6315253	ArgumentList	cmd		6314786	1					
ANR	6315254	Argument	cmd		6314786	0					
ANR	6315255	Identifier	cmd		6314786	0					
ANR	6315256	Argument	"""RTSPBindAddress"""		6314786	1					
ANR	6315257	PrimaryExpression	"""RTSPBindAddress"""		6314786	0					
ANR	6315258	CompoundStatement		137:56:2166:2166	6314786	1					
ANR	6315259	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	141:12:2231:2260	6314786	0	True				
ANR	6315260	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315261	Callee	get_arg		6314786	0					
ANR	6315262	Identifier	get_arg		6314786	0					
ANR	6315263	ArgumentList	arg		6314786	1					
ANR	6315264	Argument	arg		6314786	0					
ANR	6315265	Identifier	arg		6314786	0					
ANR	6315266	Argument	sizeof ( arg )		6314786	1					
ANR	6315267	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315268	Sizeof	sizeof		6314786	0					
ANR	6315269	SizeofOperand	arg		6314786	1					
ANR	6315270	Argument	& p		6314786	2					
ANR	6315271	UnaryOperationExpression	& p		6314786	0					
ANR	6315272	UnaryOperator	&		6314786	0					
ANR	6315273	Identifier	p		6314786	1					
ANR	6315274	IfStatement	"if ( resolve_host ( & my_rtsp_addr . sin_addr , arg ) != 0 )"		6314786	1					
ANR	6315275	Condition	"resolve_host ( & my_rtsp_addr . sin_addr , arg ) != 0"	143:16:2279:2324	6314786	0	True				
ANR	6315276	EqualityExpression	"resolve_host ( & my_rtsp_addr . sin_addr , arg ) != 0"		6314786	0		!=			
ANR	6315277	CallExpression	"resolve_host ( & my_rtsp_addr . sin_addr , arg )"		6314786	0					
ANR	6315278	Callee	resolve_host		6314786	0					
ANR	6315279	Identifier	resolve_host		6314786	0					
ANR	6315280	ArgumentList	& my_rtsp_addr . sin_addr		6314786	1					
ANR	6315281	Argument	& my_rtsp_addr . sin_addr		6314786	0					
ANR	6315282	UnaryOperationExpression	& my_rtsp_addr . sin_addr		6314786	0					
ANR	6315283	UnaryOperator	&		6314786	0					
ANR	6315284	MemberAccess	my_rtsp_addr . sin_addr		6314786	1					
ANR	6315285	Identifier	my_rtsp_addr		6314786	0					
ANR	6315286	Identifier	sin_addr		6314786	1					
ANR	6315287	Argument	arg		6314786	1					
ANR	6315288	Identifier	arg		6314786	0					
ANR	6315289	PrimaryExpression	0		6314786	1					
ANR	6315290	CompoundStatement		141:64:2277:2277	6314786	1					
ANR	6315291	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"	145:16:2346:2451	6314786	0	True				
ANR	6315292	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315293	Callee	fprintf		6314786	0					
ANR	6315294	Identifier	fprintf		6314786	0					
ANR	6315295	ArgumentList	stderr		6314786	1					
ANR	6315296	Argument	stderr		6314786	0					
ANR	6315297	Identifier	stderr		6314786	0					
ANR	6315298	Argument	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	1					
ANR	6315299	PrimaryExpression	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	0					
ANR	6315300	Argument	filename		6314786	2					
ANR	6315301	Identifier	filename		6314786	0					
ANR	6315302	Argument	line_num		6314786	3					
ANR	6315303	Identifier	line_num		6314786	0					
ANR	6315304	Argument	arg		6314786	4					
ANR	6315305	Identifier	arg		6314786	0					
ANR	6315306	ExpressionStatement	errors ++	149:16:2470:2478	6314786	1	True				
ANR	6315307	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315308	Identifier	errors		6314786	0					
ANR	6315309	IncDec	++		6314786	1					
ANR	6315310	ElseStatement	else		6314786	0					
ANR	6315311	IfStatement	"if ( ! strcasecmp ( cmd , ""MaxHTTPConnections"" ) )"		6314786	0					
ANR	6315312	Condition	"! strcasecmp ( cmd , ""MaxHTTPConnections"" )"	153:19:2515:2552	6314786	0	True				
ANR	6315313	UnaryOperationExpression	"! strcasecmp ( cmd , ""MaxHTTPConnections"" )"		6314786	0					
ANR	6315314	UnaryOperator	!		6314786	0					
ANR	6315315	CallExpression	"strcasecmp ( cmd , ""MaxHTTPConnections"" )"		6314786	1					
ANR	6315316	Callee	strcasecmp		6314786	0					
ANR	6315317	Identifier	strcasecmp		6314786	0					
ANR	6315318	ArgumentList	cmd		6314786	1					
ANR	6315319	Argument	cmd		6314786	0					
ANR	6315320	Identifier	cmd		6314786	0					
ANR	6315321	Argument	"""MaxHTTPConnections"""		6314786	1					
ANR	6315322	PrimaryExpression	"""MaxHTTPConnections"""		6314786	0					
ANR	6315323	CompoundStatement		151:59:2505:2505	6314786	1					
ANR	6315324	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	155:12:2570:2599	6314786	0	True				
ANR	6315325	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315326	Callee	get_arg		6314786	0					
ANR	6315327	Identifier	get_arg		6314786	0					
ANR	6315328	ArgumentList	arg		6314786	1					
ANR	6315329	Argument	arg		6314786	0					
ANR	6315330	Identifier	arg		6314786	0					
ANR	6315331	Argument	sizeof ( arg )		6314786	1					
ANR	6315332	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315333	Sizeof	sizeof		6314786	0					
ANR	6315334	SizeofOperand	arg		6314786	1					
ANR	6315335	Argument	& p		6314786	2					
ANR	6315336	UnaryOperationExpression	& p		6314786	0					
ANR	6315337	UnaryOperator	&		6314786	0					
ANR	6315338	Identifier	p		6314786	1					
ANR	6315339	ExpressionStatement	val = atoi ( arg )	157:12:2614:2629	6314786	1	True				
ANR	6315340	AssignmentExpression	val = atoi ( arg )		6314786	0		=			
ANR	6315341	Identifier	val		6314786	0					
ANR	6315342	CallExpression	atoi ( arg )		6314786	1					
ANR	6315343	Callee	atoi		6314786	0					
ANR	6315344	Identifier	atoi		6314786	0					
ANR	6315345	ArgumentList	arg		6314786	1					
ANR	6315346	Argument	arg		6314786	0					
ANR	6315347	Identifier	arg		6314786	0					
ANR	6315348	IfStatement	if ( val < 1 || val > 65536 )		6314786	2					
ANR	6315349	Condition	val < 1 || val > 65536	159:16:2648:2669	6314786	0	True				
ANR	6315350	OrExpression	val < 1 || val > 65536		6314786	0		||			
ANR	6315351	RelationalExpression	val < 1		6314786	0		<			
ANR	6315352	Identifier	val		6314786	0					
ANR	6315353	PrimaryExpression	1		6314786	1					
ANR	6315354	RelationalExpression	val > 65536		6314786	1		>			
ANR	6315355	Identifier	val		6314786	0					
ANR	6315356	PrimaryExpression	65536		6314786	1					
ANR	6315357	CompoundStatement		157:40:2622:2622	6314786	1					
ANR	6315358	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid MaxHTTPConnections: %s\\n"" , filename , line_num , arg )"	161:16:2691:2799	6314786	0	True				
ANR	6315359	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid MaxHTTPConnections: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315360	Callee	fprintf		6314786	0					
ANR	6315361	Identifier	fprintf		6314786	0					
ANR	6315362	ArgumentList	stderr		6314786	1					
ANR	6315363	Argument	stderr		6314786	0					
ANR	6315364	Identifier	stderr		6314786	0					
ANR	6315365	Argument	"""%s:%d: Invalid MaxHTTPConnections: %s\\n"""		6314786	1					
ANR	6315366	PrimaryExpression	"""%s:%d: Invalid MaxHTTPConnections: %s\\n"""		6314786	0					
ANR	6315367	Argument	filename		6314786	2					
ANR	6315368	Identifier	filename		6314786	0					
ANR	6315369	Argument	line_num		6314786	3					
ANR	6315370	Identifier	line_num		6314786	0					
ANR	6315371	Argument	arg		6314786	4					
ANR	6315372	Identifier	arg		6314786	0					
ANR	6315373	ExpressionStatement	errors ++	165:16:2818:2826	6314786	1	True				
ANR	6315374	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315375	Identifier	errors		6314786	0					
ANR	6315376	IncDec	++		6314786	1					
ANR	6315377	ExpressionStatement	nb_max_http_connections = val	169:12:2856:2885	6314786	3	True				
ANR	6315378	AssignmentExpression	nb_max_http_connections = val		6314786	0		=			
ANR	6315379	Identifier	nb_max_http_connections		6314786	0					
ANR	6315380	Identifier	val		6314786	1					
ANR	6315381	ElseStatement	else		6314786	0					
ANR	6315382	IfStatement	"if ( ! strcasecmp ( cmd , ""MaxClients"" ) )"		6314786	0					
ANR	6315383	Condition	"! strcasecmp ( cmd , ""MaxClients"" )"	171:19:2907:2936	6314786	0	True				
ANR	6315384	UnaryOperationExpression	"! strcasecmp ( cmd , ""MaxClients"" )"		6314786	0					
ANR	6315385	UnaryOperator	!		6314786	0					
ANR	6315386	CallExpression	"strcasecmp ( cmd , ""MaxClients"" )"		6314786	1					
ANR	6315387	Callee	strcasecmp		6314786	0					
ANR	6315388	Identifier	strcasecmp		6314786	0					
ANR	6315389	ArgumentList	cmd		6314786	1					
ANR	6315390	Argument	cmd		6314786	0					
ANR	6315391	Identifier	cmd		6314786	0					
ANR	6315392	Argument	"""MaxClients"""		6314786	1					
ANR	6315393	PrimaryExpression	"""MaxClients"""		6314786	0					
ANR	6315394	CompoundStatement		169:51:2889:2889	6314786	1					
ANR	6315395	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	173:12:2954:2983	6314786	0	True				
ANR	6315396	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315397	Callee	get_arg		6314786	0					
ANR	6315398	Identifier	get_arg		6314786	0					
ANR	6315399	ArgumentList	arg		6314786	1					
ANR	6315400	Argument	arg		6314786	0					
ANR	6315401	Identifier	arg		6314786	0					
ANR	6315402	Argument	sizeof ( arg )		6314786	1					
ANR	6315403	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315404	Sizeof	sizeof		6314786	0					
ANR	6315405	SizeofOperand	arg		6314786	1					
ANR	6315406	Argument	& p		6314786	2					
ANR	6315407	UnaryOperationExpression	& p		6314786	0					
ANR	6315408	UnaryOperator	&		6314786	0					
ANR	6315409	Identifier	p		6314786	1					
ANR	6315410	ExpressionStatement	val = atoi ( arg )	175:12:2998:3013	6314786	1	True				
ANR	6315411	AssignmentExpression	val = atoi ( arg )		6314786	0		=			
ANR	6315412	Identifier	val		6314786	0					
ANR	6315413	CallExpression	atoi ( arg )		6314786	1					
ANR	6315414	Callee	atoi		6314786	0					
ANR	6315415	Identifier	atoi		6314786	0					
ANR	6315416	ArgumentList	arg		6314786	1					
ANR	6315417	Argument	arg		6314786	0					
ANR	6315418	Identifier	arg		6314786	0					
ANR	6315419	IfStatement	if ( val < 1 || val > nb_max_http_connections )		6314786	2					
ANR	6315420	Condition	val < 1 || val > nb_max_http_connections	177:16:3032:3071	6314786	0	True				
ANR	6315421	OrExpression	val < 1 || val > nb_max_http_connections		6314786	0		||			
ANR	6315422	RelationalExpression	val < 1		6314786	0		<			
ANR	6315423	Identifier	val		6314786	0					
ANR	6315424	PrimaryExpression	1		6314786	1					
ANR	6315425	RelationalExpression	val > nb_max_http_connections		6314786	1		>			
ANR	6315426	Identifier	val		6314786	0					
ANR	6315427	Identifier	nb_max_http_connections		6314786	1					
ANR	6315428	CompoundStatement		175:58:3024:3024	6314786	1					
ANR	6315429	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid MaxClients: %s\\n"" , filename , line_num , arg )"	179:16:3093:3193	6314786	0	True				
ANR	6315430	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid MaxClients: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315431	Callee	fprintf		6314786	0					
ANR	6315432	Identifier	fprintf		6314786	0					
ANR	6315433	ArgumentList	stderr		6314786	1					
ANR	6315434	Argument	stderr		6314786	0					
ANR	6315435	Identifier	stderr		6314786	0					
ANR	6315436	Argument	"""%s:%d: Invalid MaxClients: %s\\n"""		6314786	1					
ANR	6315437	PrimaryExpression	"""%s:%d: Invalid MaxClients: %s\\n"""		6314786	0					
ANR	6315438	Argument	filename		6314786	2					
ANR	6315439	Identifier	filename		6314786	0					
ANR	6315440	Argument	line_num		6314786	3					
ANR	6315441	Identifier	line_num		6314786	0					
ANR	6315442	Argument	arg		6314786	4					
ANR	6315443	Identifier	arg		6314786	0					
ANR	6315444	ExpressionStatement	errors ++	183:16:3212:3220	6314786	1	True				
ANR	6315445	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315446	Identifier	errors		6314786	0					
ANR	6315447	IncDec	++		6314786	1					
ANR	6315448	ElseStatement	else		6314786	0					
ANR	6315449	CompoundStatement		183:19:3192:3192	6314786	0					
ANR	6315450	ExpressionStatement	nb_max_connections = val	187:16:3261:3285	6314786	0	True				
ANR	6315451	AssignmentExpression	nb_max_connections = val		6314786	0		=			
ANR	6315452	Identifier	nb_max_connections		6314786	0					
ANR	6315453	Identifier	val		6314786	1					
ANR	6315454	ElseStatement	else		6314786	0					
ANR	6315455	IfStatement	"if ( ! strcasecmp ( cmd , ""MaxBandwidth"" ) )"		6314786	0					
ANR	6315456	Condition	"! strcasecmp ( cmd , ""MaxBandwidth"" )"	191:19:3322:3353	6314786	0	True				
ANR	6315457	UnaryOperationExpression	"! strcasecmp ( cmd , ""MaxBandwidth"" )"		6314786	0					
ANR	6315458	UnaryOperator	!		6314786	0					
ANR	6315459	CallExpression	"strcasecmp ( cmd , ""MaxBandwidth"" )"		6314786	1					
ANR	6315460	Callee	strcasecmp		6314786	0					
ANR	6315461	Identifier	strcasecmp		6314786	0					
ANR	6315462	ArgumentList	cmd		6314786	1					
ANR	6315463	Argument	cmd		6314786	0					
ANR	6315464	Identifier	cmd		6314786	0					
ANR	6315465	Argument	"""MaxBandwidth"""		6314786	1					
ANR	6315466	PrimaryExpression	"""MaxBandwidth"""		6314786	0					
ANR	6315467	CompoundStatement		191:12:3321:3334	6314786	1					
ANR	6315468	IdentifierDeclStatement	int64_t llval ;	193:12:3371:3384	6314786	0	True				
ANR	6315469	IdentifierDecl	llval		6314786	0					
ANR	6315470	IdentifierDeclType	int64_t		6314786	0					
ANR	6315471	Identifier	llval		6314786	1					
ANR	6315472	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	195:12:3399:3428	6314786	1	True				
ANR	6315473	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315474	Callee	get_arg		6314786	0					
ANR	6315475	Identifier	get_arg		6314786	0					
ANR	6315476	ArgumentList	arg		6314786	1					
ANR	6315477	Argument	arg		6314786	0					
ANR	6315478	Identifier	arg		6314786	0					
ANR	6315479	Argument	sizeof ( arg )		6314786	1					
ANR	6315480	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315481	Sizeof	sizeof		6314786	0					
ANR	6315482	SizeofOperand	arg		6314786	1					
ANR	6315483	Argument	& p		6314786	2					
ANR	6315484	UnaryOperationExpression	& p		6314786	0					
ANR	6315485	UnaryOperator	&		6314786	0					
ANR	6315486	Identifier	p		6314786	1					
ANR	6315487	ExpressionStatement	llval = atoll ( arg )	197:12:3443:3461	6314786	2	True				
ANR	6315488	AssignmentExpression	llval = atoll ( arg )		6314786	0		=			
ANR	6315489	Identifier	llval		6314786	0					
ANR	6315490	CallExpression	atoll ( arg )		6314786	1					
ANR	6315491	Callee	atoll		6314786	0					
ANR	6315492	Identifier	atoll		6314786	0					
ANR	6315493	ArgumentList	arg		6314786	1					
ANR	6315494	Argument	arg		6314786	0					
ANR	6315495	Identifier	arg		6314786	0					
ANR	6315496	IfStatement	if ( llval < 10 || llval > 10000000 )		6314786	3					
ANR	6315497	Condition	llval < 10 || llval > 10000000	199:16:3480:3509	6314786	0	True				
ANR	6315498	OrExpression	llval < 10 || llval > 10000000		6314786	0		||			
ANR	6315499	RelationalExpression	llval < 10		6314786	0		<			
ANR	6315500	Identifier	llval		6314786	0					
ANR	6315501	PrimaryExpression	10		6314786	1					
ANR	6315502	RelationalExpression	llval > 10000000		6314786	1		>			
ANR	6315503	Identifier	llval		6314786	0					
ANR	6315504	PrimaryExpression	10000000		6314786	1					
ANR	6315505	CompoundStatement		197:48:3462:3462	6314786	1					
ANR	6315506	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid MaxBandwidth: %s\\n"" , filename , line_num , arg )"	201:16:3531:3633	6314786	0	True				
ANR	6315507	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid MaxBandwidth: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6315508	Callee	fprintf		6314786	0					
ANR	6315509	Identifier	fprintf		6314786	0					
ANR	6315510	ArgumentList	stderr		6314786	1					
ANR	6315511	Argument	stderr		6314786	0					
ANR	6315512	Identifier	stderr		6314786	0					
ANR	6315513	Argument	"""%s:%d: Invalid MaxBandwidth: %s\\n"""		6314786	1					
ANR	6315514	PrimaryExpression	"""%s:%d: Invalid MaxBandwidth: %s\\n"""		6314786	0					
ANR	6315515	Argument	filename		6314786	2					
ANR	6315516	Identifier	filename		6314786	0					
ANR	6315517	Argument	line_num		6314786	3					
ANR	6315518	Identifier	line_num		6314786	0					
ANR	6315519	Argument	arg		6314786	4					
ANR	6315520	Identifier	arg		6314786	0					
ANR	6315521	ExpressionStatement	errors ++	205:16:3652:3660	6314786	1	True				
ANR	6315522	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315523	Identifier	errors		6314786	0					
ANR	6315524	IncDec	++		6314786	1					
ANR	6315525	ElseStatement	else		6314786	0					
ANR	6315526	ExpressionStatement	max_bandwidth = llval	209:16:3699:3720	6314786	0	True				
ANR	6315527	AssignmentExpression	max_bandwidth = llval		6314786	0		=			
ANR	6315528	Identifier	max_bandwidth		6314786	0					
ANR	6315529	Identifier	llval		6314786	1					
ANR	6315530	ElseStatement	else		6314786	0					
ANR	6315531	IfStatement	"if ( ! strcasecmp ( cmd , ""CustomLog"" ) )"		6314786	0					
ANR	6315532	Condition	"! strcasecmp ( cmd , ""CustomLog"" )"	211:19:3742:3770	6314786	0	True				
ANR	6315533	UnaryOperationExpression	"! strcasecmp ( cmd , ""CustomLog"" )"		6314786	0					
ANR	6315534	UnaryOperator	!		6314786	0					
ANR	6315535	CallExpression	"strcasecmp ( cmd , ""CustomLog"" )"		6314786	1					
ANR	6315536	Callee	strcasecmp		6314786	0					
ANR	6315537	Identifier	strcasecmp		6314786	0					
ANR	6315538	ArgumentList	cmd		6314786	1					
ANR	6315539	Argument	cmd		6314786	0					
ANR	6315540	Identifier	cmd		6314786	0					
ANR	6315541	Argument	"""CustomLog"""		6314786	1					
ANR	6315542	PrimaryExpression	"""CustomLog"""		6314786	0					
ANR	6315543	CompoundStatement		209:50:3723:3723	6314786	1					
ANR	6315544	IfStatement	if ( ! ffserver_debug )		6314786	0					
ANR	6315545	Condition	! ffserver_debug	213:16:3792:3806	6314786	0	True				
ANR	6315546	UnaryOperationExpression	! ffserver_debug		6314786	0					
ANR	6315547	UnaryOperator	!		6314786	0					
ANR	6315548	Identifier	ffserver_debug		6314786	1					
ANR	6315549	ExpressionStatement	"get_arg ( logfilename , sizeof ( logfilename ) , & p )"	215:16:3826:3871	6314786	1	True				
ANR	6315550	CallExpression	"get_arg ( logfilename , sizeof ( logfilename ) , & p )"		6314786	0					
ANR	6315551	Callee	get_arg		6314786	0					
ANR	6315552	Identifier	get_arg		6314786	0					
ANR	6315553	ArgumentList	logfilename		6314786	1					
ANR	6315554	Argument	logfilename		6314786	0					
ANR	6315555	Identifier	logfilename		6314786	0					
ANR	6315556	Argument	sizeof ( logfilename )		6314786	1					
ANR	6315557	SizeofExpression	sizeof ( logfilename )		6314786	0					
ANR	6315558	Sizeof	sizeof		6314786	0					
ANR	6315559	SizeofOperand	logfilename		6314786	1					
ANR	6315560	Argument	& p		6314786	2					
ANR	6315561	UnaryOperationExpression	& p		6314786	0					
ANR	6315562	UnaryOperator	&		6314786	0					
ANR	6315563	Identifier	p		6314786	1					
ANR	6315564	ElseStatement	else		6314786	0					
ANR	6315565	IfStatement	"if ( ! strcasecmp ( cmd , ""<Feed"" ) )"		6314786	0					
ANR	6315566	Condition	"! strcasecmp ( cmd , ""<Feed"" )"	217:19:3893:3917	6314786	0	True				
ANR	6315567	UnaryOperationExpression	"! strcasecmp ( cmd , ""<Feed"" )"		6314786	0					
ANR	6315568	UnaryOperator	!		6314786	0					
ANR	6315569	CallExpression	"strcasecmp ( cmd , ""<Feed"" )"		6314786	1					
ANR	6315570	Callee	strcasecmp		6314786	0					
ANR	6315571	Identifier	strcasecmp		6314786	0					
ANR	6315572	ArgumentList	cmd		6314786	1					
ANR	6315573	Argument	cmd		6314786	0					
ANR	6315574	Identifier	cmd		6314786	0					
ANR	6315575	Argument	"""<Feed"""		6314786	1					
ANR	6315576	PrimaryExpression	"""<Feed"""		6314786	0					
ANR	6315577	CompoundStatement		221:12:3986:3993	6314786	1					
ANR	6315578	IdentifierDeclStatement	char * q ;	223:12:4036:4043	6314786	0	True				
ANR	6315579	IdentifierDecl	* q		6314786	0					
ANR	6315580	IdentifierDeclType	char *		6314786	0					
ANR	6315581	Identifier	q		6314786	1					
ANR	6315582	IfStatement	if ( stream || feed )		6314786	1					
ANR	6315583	Condition	stream || feed	225:16:4062:4075	6314786	0	True				
ANR	6315584	OrExpression	stream || feed		6314786	0		||			
ANR	6315585	Identifier	stream		6314786	0					
ANR	6315586	Identifier	feed		6314786	1					
ANR	6315587	CompoundStatement		223:32:4028:4028	6314786	1					
ANR	6315588	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"	227:16:4097:4186	6314786	0	True				
ANR	6315589	CallExpression	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"		6314786	0					
ANR	6315590	Callee	fprintf		6314786	0					
ANR	6315591	Identifier	fprintf		6314786	0					
ANR	6315592	ArgumentList	stderr		6314786	1					
ANR	6315593	Argument	stderr		6314786	0					
ANR	6315594	Identifier	stderr		6314786	0					
ANR	6315595	Argument	"""%s:%d: Already in a tag\\n"""		6314786	1					
ANR	6315596	PrimaryExpression	"""%s:%d: Already in a tag\\n"""		6314786	0					
ANR	6315597	Argument	filename		6314786	2					
ANR	6315598	Identifier	filename		6314786	0					
ANR	6315599	Argument	line_num		6314786	3					
ANR	6315600	Identifier	line_num		6314786	0					
ANR	6315601	ElseStatement	else		6314786	0					
ANR	6315602	CompoundStatement		229:19:4158:4158	6314786	0					
ANR	6315603	ExpressionStatement	feed = av_mallocz ( sizeof ( FFStream ) )	233:16:4227:4262	6314786	0	True				
ANR	6315604	AssignmentExpression	feed = av_mallocz ( sizeof ( FFStream ) )		6314786	0		=			
ANR	6315605	Identifier	feed		6314786	0					
ANR	6315606	CallExpression	av_mallocz ( sizeof ( FFStream ) )		6314786	1					
ANR	6315607	Callee	av_mallocz		6314786	0					
ANR	6315608	Identifier	av_mallocz		6314786	0					
ANR	6315609	ArgumentList	sizeof ( FFStream )		6314786	1					
ANR	6315610	Argument	sizeof ( FFStream )		6314786	0					
ANR	6315611	SizeofExpression	sizeof ( FFStream )		6314786	0					
ANR	6315612	Sizeof	sizeof		6314786	0					
ANR	6315613	SizeofOperand	FFStream		6314786	1					
ANR	6315614	ExpressionStatement	"get_arg ( feed -> filename , sizeof ( feed -> filename ) , & p )"	235:16:4281:4332	6314786	1	True				
ANR	6315615	CallExpression	"get_arg ( feed -> filename , sizeof ( feed -> filename ) , & p )"		6314786	0					
ANR	6315616	Callee	get_arg		6314786	0					
ANR	6315617	Identifier	get_arg		6314786	0					
ANR	6315618	ArgumentList	feed -> filename		6314786	1					
ANR	6315619	Argument	feed -> filename		6314786	0					
ANR	6315620	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315621	Identifier	feed		6314786	0					
ANR	6315622	Identifier	filename		6314786	1					
ANR	6315623	Argument	sizeof ( feed -> filename )		6314786	1					
ANR	6315624	SizeofExpression	sizeof ( feed -> filename )		6314786	0					
ANR	6315625	Sizeof	sizeof		6314786	0					
ANR	6315626	PtrMemberAccess	feed -> filename		6314786	1					
ANR	6315627	Identifier	feed		6314786	0					
ANR	6315628	Identifier	filename		6314786	1					
ANR	6315629	Argument	& p		6314786	2					
ANR	6315630	UnaryOperationExpression	& p		6314786	0					
ANR	6315631	UnaryOperator	&		6314786	0					
ANR	6315632	Identifier	p		6314786	1					
ANR	6315633	ExpressionStatement	"q = strrchr ( feed -> filename , '>' )"	237:16:4351:4383	6314786	2	True				
ANR	6315634	AssignmentExpression	"q = strrchr ( feed -> filename , '>' )"		6314786	0		=			
ANR	6315635	Identifier	q		6314786	0					
ANR	6315636	CallExpression	"strrchr ( feed -> filename , '>' )"		6314786	1					
ANR	6315637	Callee	strrchr		6314786	0					
ANR	6315638	Identifier	strrchr		6314786	0					
ANR	6315639	ArgumentList	feed -> filename		6314786	1					
ANR	6315640	Argument	feed -> filename		6314786	0					
ANR	6315641	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315642	Identifier	feed		6314786	0					
ANR	6315643	Identifier	filename		6314786	1					
ANR	6315644	Argument	'>'		6314786	1					
ANR	6315645	PrimaryExpression	'>'		6314786	0					
ANR	6315646	IfStatement	if ( * q )		6314786	3					
ANR	6315647	Condition	* q	239:20:4406:4407	6314786	0	True				
ANR	6315648	UnaryOperationExpression	* q		6314786	0					
ANR	6315649	UnaryOperator	*		6314786	0					
ANR	6315650	Identifier	q		6314786	1					
ANR	6315651	ExpressionStatement	* q = '\\0'	241:20:4431:4440	6314786	1	True				
ANR	6315652	AssignmentExpression	* q = '\\0'		6314786	0		=			
ANR	6315653	UnaryOperationExpression	* q		6314786	0					
ANR	6315654	UnaryOperator	*		6314786	0					
ANR	6315655	Identifier	q		6314786	1					
ANR	6315656	PrimaryExpression	'\\0'		6314786	1					
ANR	6315657	ForStatement	for ( s = first_feed ; s ; s = s -> next )		6314786	4					
ANR	6315658	ForInit	s = first_feed ;	245:21:4466:4480	6314786	0	True				
ANR	6315659	AssignmentExpression	s = first_feed		6314786	0		=			
ANR	6315660	Identifier	s		6314786	0					
ANR	6315661	Identifier	first_feed		6314786	1					
ANR	6315662	Condition	s	245:37:4482:4482	6314786	1	True				
ANR	6315663	Identifier	s		6314786	0					
ANR	6315664	AssignmentExpression	s = s -> next	245:40:4485:4495	6314786	2	True	=			
ANR	6315665	Identifier	s		6314786	0					
ANR	6315666	PtrMemberAccess	s -> next		6314786	1					
ANR	6315667	Identifier	s		6314786	0					
ANR	6315668	Identifier	next		6314786	1					
ANR	6315669	CompoundStatement		243:53:4448:4448	6314786	3					
ANR	6315670	IfStatement	"if ( ! strcmp ( feed -> filename , s -> filename ) )"		6314786	0					
ANR	6315671	Condition	"! strcmp ( feed -> filename , s -> filename )"	247:24:4525:4560	6314786	0	True				
ANR	6315672	UnaryOperationExpression	"! strcmp ( feed -> filename , s -> filename )"		6314786	0					
ANR	6315673	UnaryOperator	!		6314786	0					
ANR	6315674	CallExpression	"strcmp ( feed -> filename , s -> filename )"		6314786	1					
ANR	6315675	Callee	strcmp		6314786	0					
ANR	6315676	Identifier	strcmp		6314786	0					
ANR	6315677	ArgumentList	feed -> filename		6314786	1					
ANR	6315678	Argument	feed -> filename		6314786	0					
ANR	6315679	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315680	Identifier	feed		6314786	0					
ANR	6315681	Identifier	filename		6314786	1					
ANR	6315682	Argument	s -> filename		6314786	1					
ANR	6315683	PtrMemberAccess	s -> filename		6314786	0					
ANR	6315684	Identifier	s		6314786	0					
ANR	6315685	Identifier	filename		6314786	1					
ANR	6315686	CompoundStatement		245:62:4513:4513	6314786	1					
ANR	6315687	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Feed '%s' already registered\\n"" , filename , line_num , s -> filename )"	249:24:4590:4712	6314786	0	True				
ANR	6315688	CallExpression	"fprintf ( stderr , ""%s:%d: Feed '%s' already registered\\n"" , filename , line_num , s -> filename )"		6314786	0					
ANR	6315689	Callee	fprintf		6314786	0					
ANR	6315690	Identifier	fprintf		6314786	0					
ANR	6315691	ArgumentList	stderr		6314786	1					
ANR	6315692	Argument	stderr		6314786	0					
ANR	6315693	Identifier	stderr		6314786	0					
ANR	6315694	Argument	"""%s:%d: Feed '%s' already registered\\n"""		6314786	1					
ANR	6315695	PrimaryExpression	"""%s:%d: Feed '%s' already registered\\n"""		6314786	0					
ANR	6315696	Argument	filename		6314786	2					
ANR	6315697	Identifier	filename		6314786	0					
ANR	6315698	Argument	line_num		6314786	3					
ANR	6315699	Identifier	line_num		6314786	0					
ANR	6315700	Argument	s -> filename		6314786	4					
ANR	6315701	PtrMemberAccess	s -> filename		6314786	0					
ANR	6315702	Identifier	s		6314786	0					
ANR	6315703	Identifier	filename		6314786	1					
ANR	6315704	ExpressionStatement	errors ++	253:24:4739:4747	6314786	1	True				
ANR	6315705	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6315706	Identifier	errors		6314786	0					
ANR	6315707	IncDec	++		6314786	1					
ANR	6315708	ExpressionStatement	"feed -> fmt = guess_format ( ""ffm"" , NULL , NULL )"	261:16:4810:4853	6314786	5	True				
ANR	6315709	AssignmentExpression	"feed -> fmt = guess_format ( ""ffm"" , NULL , NULL )"		6314786	0		=			
ANR	6315710	PtrMemberAccess	feed -> fmt		6314786	0					
ANR	6315711	Identifier	feed		6314786	0					
ANR	6315712	Identifier	fmt		6314786	1					
ANR	6315713	CallExpression	"guess_format ( ""ffm"" , NULL , NULL )"		6314786	1					
ANR	6315714	Callee	guess_format		6314786	0					
ANR	6315715	Identifier	guess_format		6314786	0					
ANR	6315716	ArgumentList	"""ffm"""		6314786	1					
ANR	6315717	Argument	"""ffm"""		6314786	0					
ANR	6315718	PrimaryExpression	"""ffm"""		6314786	0					
ANR	6315719	Argument	NULL		6314786	1					
ANR	6315720	Identifier	NULL		6314786	0					
ANR	6315721	Argument	NULL		6314786	2					
ANR	6315722	Identifier	NULL		6314786	0					
ANR	6315723	ExpressionStatement	"snprintf ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , ""/tmp/%s.ffm"" , feed -> filename )"	265:16:4912:5027	6314786	6	True				
ANR	6315724	CallExpression	"snprintf ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , ""/tmp/%s.ffm"" , feed -> filename )"		6314786	0					
ANR	6315725	Callee	snprintf		6314786	0					
ANR	6315726	Identifier	snprintf		6314786	0					
ANR	6315727	ArgumentList	feed -> feed_filename		6314786	1					
ANR	6315728	Argument	feed -> feed_filename		6314786	0					
ANR	6315729	PtrMemberAccess	feed -> feed_filename		6314786	0					
ANR	6315730	Identifier	feed		6314786	0					
ANR	6315731	Identifier	feed_filename		6314786	1					
ANR	6315732	Argument	sizeof ( feed -> feed_filename )		6314786	1					
ANR	6315733	SizeofExpression	sizeof ( feed -> feed_filename )		6314786	0					
ANR	6315734	Sizeof	sizeof		6314786	0					
ANR	6315735	PtrMemberAccess	feed -> feed_filename		6314786	1					
ANR	6315736	Identifier	feed		6314786	0					
ANR	6315737	Identifier	feed_filename		6314786	1					
ANR	6315738	Argument	"""/tmp/%s.ffm"""		6314786	2					
ANR	6315739	PrimaryExpression	"""/tmp/%s.ffm"""		6314786	0					
ANR	6315740	Argument	feed -> filename		6314786	3					
ANR	6315741	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315742	Identifier	feed		6314786	0					
ANR	6315743	Identifier	filename		6314786	1					
ANR	6315744	ExpressionStatement	feed -> feed_max_size = 5 * 1024 * 1024	269:16:5046:5083	6314786	7	True				
ANR	6315745	AssignmentExpression	feed -> feed_max_size = 5 * 1024 * 1024		6314786	0		=			
ANR	6315746	PtrMemberAccess	feed -> feed_max_size		6314786	0					
ANR	6315747	Identifier	feed		6314786	0					
ANR	6315748	Identifier	feed_max_size		6314786	1					
ANR	6315749	MultiplicativeExpression	5 * 1024 * 1024		6314786	1		*			
ANR	6315750	PrimaryExpression	5		6314786	0					
ANR	6315751	MultiplicativeExpression	1024 * 1024		6314786	1		*			
ANR	6315752	PrimaryExpression	1024		6314786	0					
ANR	6315753	PrimaryExpression	1024		6314786	1					
ANR	6315754	ExpressionStatement	feed -> is_feed = 1	271:16:5102:5119	6314786	8	True				
ANR	6315755	AssignmentExpression	feed -> is_feed = 1		6314786	0		=			
ANR	6315756	PtrMemberAccess	feed -> is_feed		6314786	0					
ANR	6315757	Identifier	feed		6314786	0					
ANR	6315758	Identifier	is_feed		6314786	1					
ANR	6315759	PrimaryExpression	1		6314786	1					
ANR	6315760	ExpressionStatement	feed -> feed = feed	273:16:5138:5155	6314786	9	True				
ANR	6315761	AssignmentExpression	feed -> feed = feed		6314786	0		=			
ANR	6315762	PtrMemberAccess	feed -> feed		6314786	0					
ANR	6315763	Identifier	feed		6314786	0					
ANR	6315764	Identifier	feed		6314786	1					
ANR	6315765	Identifier	feed		6314786	1					
ANR	6315766	ExpressionStatement	* last_stream = feed	279:16:5241:5260	6314786	10	True				
ANR	6315767	AssignmentExpression	* last_stream = feed		6314786	0		=			
ANR	6315768	UnaryOperationExpression	* last_stream		6314786	0					
ANR	6315769	UnaryOperator	*		6314786	0					
ANR	6315770	Identifier	last_stream		6314786	1					
ANR	6315771	Identifier	feed		6314786	1					
ANR	6315772	ExpressionStatement	last_stream = & feed -> next	281:16:5279:5304	6314786	11	True				
ANR	6315773	AssignmentExpression	last_stream = & feed -> next		6314786	0		=			
ANR	6315774	Identifier	last_stream		6314786	0					
ANR	6315775	UnaryOperationExpression	& feed -> next		6314786	1					
ANR	6315776	UnaryOperator	&		6314786	0					
ANR	6315777	PtrMemberAccess	feed -> next		6314786	1					
ANR	6315778	Identifier	feed		6314786	0					
ANR	6315779	Identifier	next		6314786	1					
ANR	6315780	ExpressionStatement	* last_feed = feed	285:16:5363:5380	6314786	12	True				
ANR	6315781	AssignmentExpression	* last_feed = feed		6314786	0		=			
ANR	6315782	UnaryOperationExpression	* last_feed		6314786	0					
ANR	6315783	UnaryOperator	*		6314786	0					
ANR	6315784	Identifier	last_feed		6314786	1					
ANR	6315785	Identifier	feed		6314786	1					
ANR	6315786	ExpressionStatement	last_feed = & feed -> next_feed	287:16:5399:5427	6314786	13	True				
ANR	6315787	AssignmentExpression	last_feed = & feed -> next_feed		6314786	0		=			
ANR	6315788	Identifier	last_feed		6314786	0					
ANR	6315789	UnaryOperationExpression	& feed -> next_feed		6314786	1					
ANR	6315790	UnaryOperator	&		6314786	0					
ANR	6315791	PtrMemberAccess	feed -> next_feed		6314786	1					
ANR	6315792	Identifier	feed		6314786	0					
ANR	6315793	Identifier	next_feed		6314786	1					
ANR	6315794	ElseStatement	else		6314786	0					
ANR	6315795	IfStatement	"if ( ! strcasecmp ( cmd , ""Launch"" ) )"		6314786	0					
ANR	6315796	Condition	"! strcasecmp ( cmd , ""Launch"" )"	291:19:5464:5489	6314786	0	True				
ANR	6315797	UnaryOperationExpression	"! strcasecmp ( cmd , ""Launch"" )"		6314786	0					
ANR	6315798	UnaryOperator	!		6314786	0					
ANR	6315799	CallExpression	"strcasecmp ( cmd , ""Launch"" )"		6314786	1					
ANR	6315800	Callee	strcasecmp		6314786	0					
ANR	6315801	Identifier	strcasecmp		6314786	0					
ANR	6315802	ArgumentList	cmd		6314786	1					
ANR	6315803	Argument	cmd		6314786	0					
ANR	6315804	Identifier	cmd		6314786	0					
ANR	6315805	Argument	"""Launch"""		6314786	1					
ANR	6315806	PrimaryExpression	"""Launch"""		6314786	0					
ANR	6315807	CompoundStatement		289:47:5442:5442	6314786	1					
ANR	6315808	IfStatement	if ( feed )		6314786	0					
ANR	6315809	Condition	feed	293:16:5511:5514	6314786	0	True				
ANR	6315810	Identifier	feed		6314786	0					
ANR	6315811	CompoundStatement		293:16:5486:5491	6314786	1					
ANR	6315812	IdentifierDeclStatement	int i ;	295:16:5536:5541	6314786	0	True				
ANR	6315813	IdentifierDecl	i		6314786	0					
ANR	6315814	IdentifierDeclType	int		6314786	0					
ANR	6315815	Identifier	i		6314786	1					
ANR	6315816	ExpressionStatement	feed -> child_argv = av_mallocz ( 64 * sizeof ( char * ) )	299:16:5562:5612	6314786	1	True				
ANR	6315817	AssignmentExpression	feed -> child_argv = av_mallocz ( 64 * sizeof ( char * ) )		6314786	0		=			
ANR	6315818	PtrMemberAccess	feed -> child_argv		6314786	0					
ANR	6315819	Identifier	feed		6314786	0					
ANR	6315820	Identifier	child_argv		6314786	1					
ANR	6315821	CallExpression	av_mallocz ( 64 * sizeof ( char * ) )		6314786	1					
ANR	6315822	Callee	av_mallocz		6314786	0					
ANR	6315823	Identifier	av_mallocz		6314786	0					
ANR	6315824	ArgumentList	64 * sizeof ( char * )		6314786	1					
ANR	6315825	Argument	64 * sizeof ( char * )		6314786	0					
ANR	6315826	MultiplicativeExpression	64 * sizeof ( char * )		6314786	0		*			
ANR	6315827	PrimaryExpression	64		6314786	0					
ANR	6315828	SizeofExpression	sizeof ( char * )		6314786	1					
ANR	6315829	Sizeof	sizeof		6314786	0					
ANR	6315830	SizeofOperand	char *		6314786	1					
ANR	6315831	ForStatement	for ( i = 0 ; i < 62 ; i ++ )		6314786	2					
ANR	6315832	ForInit	i = 0 ;	303:21:5638:5643	6314786	0	True				
ANR	6315833	AssignmentExpression	i = 0		6314786	0		=			
ANR	6315834	Identifier	i		6314786	0					
ANR	6315835	PrimaryExpression	0		6314786	1					
ANR	6315836	Condition	i < 62	303:28:5645:5650	6314786	1	True				
ANR	6315837	RelationalExpression	i < 62		6314786	0		<			
ANR	6315838	Identifier	i		6314786	0					
ANR	6315839	PrimaryExpression	62		6314786	1					
ANR	6315840	PostIncDecOperationExpression	i ++	303:36:5653:5655	6314786	2	True				
ANR	6315841	Identifier	i		6314786	0					
ANR	6315842	IncDec	++		6314786	1					
ANR	6315843	CompoundStatement		301:41:5608:5608	6314786	3					
ANR	6315844	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	305:20:5681:5710	6314786	0	True				
ANR	6315845	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6315846	Callee	get_arg		6314786	0					
ANR	6315847	Identifier	get_arg		6314786	0					
ANR	6315848	ArgumentList	arg		6314786	1					
ANR	6315849	Argument	arg		6314786	0					
ANR	6315850	Identifier	arg		6314786	0					
ANR	6315851	Argument	sizeof ( arg )		6314786	1					
ANR	6315852	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6315853	Sizeof	sizeof		6314786	0					
ANR	6315854	SizeofOperand	arg		6314786	1					
ANR	6315855	Argument	& p		6314786	2					
ANR	6315856	UnaryOperationExpression	& p		6314786	0					
ANR	6315857	UnaryOperator	&		6314786	0					
ANR	6315858	Identifier	p		6314786	1					
ANR	6315859	IfStatement	if ( ! arg [ 0 ] )		6314786	1					
ANR	6315860	Condition	! arg [ 0 ]	307:24:5737:5743	6314786	0	True				
ANR	6315861	UnaryOperationExpression	! arg [ 0 ]		6314786	0					
ANR	6315862	UnaryOperator	!		6314786	0					
ANR	6315863	ArrayIndexing	arg [ 0 ]		6314786	1					
ANR	6315864	Identifier	arg		6314786	0					
ANR	6315865	PrimaryExpression	0		6314786	1					
ANR	6315866	BreakStatement	break ;	309:24:5771:5776	6314786	1	True				
ANR	6315867	ExpressionStatement	feed -> child_argv [ i ] = av_strdup ( arg )	313:20:5801:5837	6314786	2	True				
ANR	6315868	AssignmentExpression	feed -> child_argv [ i ] = av_strdup ( arg )		6314786	0		=			
ANR	6315869	ArrayIndexing	feed -> child_argv [ i ]		6314786	0					
ANR	6315870	PtrMemberAccess	feed -> child_argv		6314786	0					
ANR	6315871	Identifier	feed		6314786	0					
ANR	6315872	Identifier	child_argv		6314786	1					
ANR	6315873	Identifier	i		6314786	1					
ANR	6315874	CallExpression	av_strdup ( arg )		6314786	1					
ANR	6315875	Callee	av_strdup		6314786	0					
ANR	6315876	Identifier	av_strdup		6314786	0					
ANR	6315877	ArgumentList	arg		6314786	1					
ANR	6315878	Argument	arg		6314786	0					
ANR	6315879	Identifier	arg		6314786	0					
ANR	6315880	ExpressionStatement	feed -> child_argv [ i ] = av_malloc ( 30 + strlen ( feed -> filename ) )	319:16:5877:5937	6314786	3	True				
ANR	6315881	AssignmentExpression	feed -> child_argv [ i ] = av_malloc ( 30 + strlen ( feed -> filename ) )		6314786	0		=			
ANR	6315882	ArrayIndexing	feed -> child_argv [ i ]		6314786	0					
ANR	6315883	PtrMemberAccess	feed -> child_argv		6314786	0					
ANR	6315884	Identifier	feed		6314786	0					
ANR	6315885	Identifier	child_argv		6314786	1					
ANR	6315886	Identifier	i		6314786	1					
ANR	6315887	CallExpression	av_malloc ( 30 + strlen ( feed -> filename ) )		6314786	1					
ANR	6315888	Callee	av_malloc		6314786	0					
ANR	6315889	Identifier	av_malloc		6314786	0					
ANR	6315890	ArgumentList	30 + strlen ( feed -> filename )		6314786	1					
ANR	6315891	Argument	30 + strlen ( feed -> filename )		6314786	0					
ANR	6315892	AdditiveExpression	30 + strlen ( feed -> filename )		6314786	0		+			
ANR	6315893	PrimaryExpression	30		6314786	0					
ANR	6315894	CallExpression	strlen ( feed -> filename )		6314786	1					
ANR	6315895	Callee	strlen		6314786	0					
ANR	6315896	Identifier	strlen		6314786	0					
ANR	6315897	ArgumentList	feed -> filename		6314786	1					
ANR	6315898	Argument	feed -> filename		6314786	0					
ANR	6315899	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315900	Identifier	feed		6314786	0					
ANR	6315901	Identifier	filename		6314786	1					
ANR	6315902	ExpressionStatement	"snprintf ( feed -> child_argv [ i ] , 30 + strlen ( feed -> filename ) , ""http://%s:%d/%s"" , ( my_http_addr . sin_addr . s_addr == INADDR_ANY ) ? ""127.0.0.1"" : inet_ntoa ( my_http_addr . sin_addr ) , ntohs ( my_http_addr . sin_port ) , feed -> filename )"	323:16:5958:6262	6314786	4	True				
ANR	6315903	CallExpression	"snprintf ( feed -> child_argv [ i ] , 30 + strlen ( feed -> filename ) , ""http://%s:%d/%s"" , ( my_http_addr . sin_addr . s_addr == INADDR_ANY ) ? ""127.0.0.1"" : inet_ntoa ( my_http_addr . sin_addr ) , ntohs ( my_http_addr . sin_port ) , feed -> filename )"		6314786	0					
ANR	6315904	Callee	snprintf		6314786	0					
ANR	6315905	Identifier	snprintf		6314786	0					
ANR	6315906	ArgumentList	feed -> child_argv [ i ]		6314786	1					
ANR	6315907	Argument	feed -> child_argv [ i ]		6314786	0					
ANR	6315908	ArrayIndexing	feed -> child_argv [ i ]		6314786	0					
ANR	6315909	PtrMemberAccess	feed -> child_argv		6314786	0					
ANR	6315910	Identifier	feed		6314786	0					
ANR	6315911	Identifier	child_argv		6314786	1					
ANR	6315912	Identifier	i		6314786	1					
ANR	6315913	Argument	30 + strlen ( feed -> filename )		6314786	1					
ANR	6315914	AdditiveExpression	30 + strlen ( feed -> filename )		6314786	0		+			
ANR	6315915	PrimaryExpression	30		6314786	0					
ANR	6315916	CallExpression	strlen ( feed -> filename )		6314786	1					
ANR	6315917	Callee	strlen		6314786	0					
ANR	6315918	Identifier	strlen		6314786	0					
ANR	6315919	ArgumentList	feed -> filename		6314786	1					
ANR	6315920	Argument	feed -> filename		6314786	0					
ANR	6315921	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315922	Identifier	feed		6314786	0					
ANR	6315923	Identifier	filename		6314786	1					
ANR	6315924	Argument	"""http://%s:%d/%s"""		6314786	2					
ANR	6315925	PrimaryExpression	"""http://%s:%d/%s"""		6314786	0					
ANR	6315926	Argument	"( my_http_addr . sin_addr . s_addr == INADDR_ANY ) ? ""127.0.0.1"" : inet_ntoa ( my_http_addr . sin_addr )"		6314786	3					
ANR	6315927	ConditionalExpression	"( my_http_addr . sin_addr . s_addr == INADDR_ANY ) ? ""127.0.0.1"" : inet_ntoa ( my_http_addr . sin_addr )"		6314786	0					
ANR	6315928	Condition	my_http_addr . sin_addr . s_addr == INADDR_ANY		6314786	0					
ANR	6315929	EqualityExpression	my_http_addr . sin_addr . s_addr == INADDR_ANY		6314786	0		==			
ANR	6315930	MemberAccess	my_http_addr . sin_addr . s_addr		6314786	0					
ANR	6315931	MemberAccess	my_http_addr . sin_addr		6314786	0					
ANR	6315932	Identifier	my_http_addr		6314786	0					
ANR	6315933	Identifier	sin_addr		6314786	1					
ANR	6315934	Identifier	s_addr		6314786	1					
ANR	6315935	Identifier	INADDR_ANY		6314786	1					
ANR	6315936	PrimaryExpression	"""127.0.0.1"""		6314786	1					
ANR	6315937	CallExpression	inet_ntoa ( my_http_addr . sin_addr )		6314786	2					
ANR	6315938	Callee	inet_ntoa		6314786	0					
ANR	6315939	Identifier	inet_ntoa		6314786	0					
ANR	6315940	ArgumentList	my_http_addr . sin_addr		6314786	1					
ANR	6315941	Argument	my_http_addr . sin_addr		6314786	0					
ANR	6315942	MemberAccess	my_http_addr . sin_addr		6314786	0					
ANR	6315943	Identifier	my_http_addr		6314786	0					
ANR	6315944	Identifier	sin_addr		6314786	1					
ANR	6315945	Argument	ntohs ( my_http_addr . sin_port )		6314786	4					
ANR	6315946	CallExpression	ntohs ( my_http_addr . sin_port )		6314786	0					
ANR	6315947	Callee	ntohs		6314786	0					
ANR	6315948	Identifier	ntohs		6314786	0					
ANR	6315949	ArgumentList	my_http_addr . sin_port		6314786	1					
ANR	6315950	Argument	my_http_addr . sin_port		6314786	0					
ANR	6315951	MemberAccess	my_http_addr . sin_port		6314786	0					
ANR	6315952	Identifier	my_http_addr		6314786	0					
ANR	6315953	Identifier	sin_port		6314786	1					
ANR	6315954	Argument	feed -> filename		6314786	5					
ANR	6315955	PtrMemberAccess	feed -> filename		6314786	0					
ANR	6315956	Identifier	feed		6314786	0					
ANR	6315957	Identifier	filename		6314786	1					
ANR	6315958	ElseStatement	else		6314786	0					
ANR	6315959	IfStatement	"if ( ! strcasecmp ( cmd , ""ReadOnlyFile"" ) )"		6314786	0					
ANR	6315960	Condition	"! strcasecmp ( cmd , ""ReadOnlyFile"" )"	335:19:6299:6330	6314786	0	True				
ANR	6315961	UnaryOperationExpression	"! strcasecmp ( cmd , ""ReadOnlyFile"" )"		6314786	0					
ANR	6315962	UnaryOperator	!		6314786	0					
ANR	6315963	CallExpression	"strcasecmp ( cmd , ""ReadOnlyFile"" )"		6314786	1					
ANR	6315964	Callee	strcasecmp		6314786	0					
ANR	6315965	Identifier	strcasecmp		6314786	0					
ANR	6315966	ArgumentList	cmd		6314786	1					
ANR	6315967	Argument	cmd		6314786	0					
ANR	6315968	Identifier	cmd		6314786	0					
ANR	6315969	Argument	"""ReadOnlyFile"""		6314786	1					
ANR	6315970	PrimaryExpression	"""ReadOnlyFile"""		6314786	0					
ANR	6315971	CompoundStatement		333:53:6283:6283	6314786	1					
ANR	6315972	IfStatement	if ( feed )		6314786	0					
ANR	6315973	Condition	feed	337:16:6352:6355	6314786	0	True				
ANR	6315974	Identifier	feed		6314786	0					
ANR	6315975	CompoundStatement		335:22:6308:6308	6314786	1					
ANR	6315976	ExpressionStatement	"get_arg ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , & p )"	339:16:6377:6438	6314786	0	True				
ANR	6315977	CallExpression	"get_arg ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , & p )"		6314786	0					
ANR	6315978	Callee	get_arg		6314786	0					
ANR	6315979	Identifier	get_arg		6314786	0					
ANR	6315980	ArgumentList	feed -> feed_filename		6314786	1					
ANR	6315981	Argument	feed -> feed_filename		6314786	0					
ANR	6315982	PtrMemberAccess	feed -> feed_filename		6314786	0					
ANR	6315983	Identifier	feed		6314786	0					
ANR	6315984	Identifier	feed_filename		6314786	1					
ANR	6315985	Argument	sizeof ( feed -> feed_filename )		6314786	1					
ANR	6315986	SizeofExpression	sizeof ( feed -> feed_filename )		6314786	0					
ANR	6315987	Sizeof	sizeof		6314786	0					
ANR	6315988	PtrMemberAccess	feed -> feed_filename		6314786	1					
ANR	6315989	Identifier	feed		6314786	0					
ANR	6315990	Identifier	feed_filename		6314786	1					
ANR	6315991	Argument	& p		6314786	2					
ANR	6315992	UnaryOperationExpression	& p		6314786	0					
ANR	6315993	UnaryOperator	&		6314786	0					
ANR	6315994	Identifier	p		6314786	1					
ANR	6315995	ExpressionStatement	feed -> readonly = 1	341:16:6457:6475	6314786	1	True				
ANR	6315996	AssignmentExpression	feed -> readonly = 1		6314786	0		=			
ANR	6315997	PtrMemberAccess	feed -> readonly		6314786	0					
ANR	6315998	Identifier	feed		6314786	0					
ANR	6315999	Identifier	readonly		6314786	1					
ANR	6316000	PrimaryExpression	1		6314786	1					
ANR	6316001	ElseStatement	else		6314786	0					
ANR	6316002	IfStatement	if ( stream )		6314786	0					
ANR	6316003	Condition	stream	343:23:6501:6506	6314786	0	True				
ANR	6316004	Identifier	stream		6314786	0					
ANR	6316005	CompoundStatement		341:31:6459:6459	6314786	1					
ANR	6316006	ExpressionStatement	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"	345:16:6528:6593	6314786	0	True				
ANR	6316007	CallExpression	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"		6314786	0					
ANR	6316008	Callee	get_arg		6314786	0					
ANR	6316009	Identifier	get_arg		6314786	0					
ANR	6316010	ArgumentList	stream -> feed_filename		6314786	1					
ANR	6316011	Argument	stream -> feed_filename		6314786	0					
ANR	6316012	PtrMemberAccess	stream -> feed_filename		6314786	0					
ANR	6316013	Identifier	stream		6314786	0					
ANR	6316014	Identifier	feed_filename		6314786	1					
ANR	6316015	Argument	sizeof ( stream -> feed_filename )		6314786	1					
ANR	6316016	SizeofExpression	sizeof ( stream -> feed_filename )		6314786	0					
ANR	6316017	Sizeof	sizeof		6314786	0					
ANR	6316018	PtrMemberAccess	stream -> feed_filename		6314786	1					
ANR	6316019	Identifier	stream		6314786	0					
ANR	6316020	Identifier	feed_filename		6314786	1					
ANR	6316021	Argument	& p		6314786	2					
ANR	6316022	UnaryOperationExpression	& p		6314786	0					
ANR	6316023	UnaryOperator	&		6314786	0					
ANR	6316024	Identifier	p		6314786	1					
ANR	6316025	ElseStatement	else		6314786	0					
ANR	6316026	IfStatement	"if ( ! strcasecmp ( cmd , ""File"" ) )"		6314786	0					
ANR	6316027	Condition	"! strcasecmp ( cmd , ""File"" )"	349:19:6630:6653	6314786	0	True				
ANR	6316028	UnaryOperationExpression	"! strcasecmp ( cmd , ""File"" )"		6314786	0					
ANR	6316029	UnaryOperator	!		6314786	0					
ANR	6316030	CallExpression	"strcasecmp ( cmd , ""File"" )"		6314786	1					
ANR	6316031	Callee	strcasecmp		6314786	0					
ANR	6316032	Identifier	strcasecmp		6314786	0					
ANR	6316033	ArgumentList	cmd		6314786	1					
ANR	6316034	Argument	cmd		6314786	0					
ANR	6316035	Identifier	cmd		6314786	0					
ANR	6316036	Argument	"""File"""		6314786	1					
ANR	6316037	PrimaryExpression	"""File"""		6314786	0					
ANR	6316038	CompoundStatement		347:45:6606:6606	6314786	1					
ANR	6316039	IfStatement	if ( feed )		6314786	0					
ANR	6316040	Condition	feed	351:16:6675:6678	6314786	0	True				
ANR	6316041	Identifier	feed		6314786	0					
ANR	6316042	CompoundStatement		349:22:6631:6631	6314786	1					
ANR	6316043	ExpressionStatement	"get_arg ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , & p )"	353:16:6700:6761	6314786	0	True				
ANR	6316044	CallExpression	"get_arg ( feed -> feed_filename , sizeof ( feed -> feed_filename ) , & p )"		6314786	0					
ANR	6316045	Callee	get_arg		6314786	0					
ANR	6316046	Identifier	get_arg		6314786	0					
ANR	6316047	ArgumentList	feed -> feed_filename		6314786	1					
ANR	6316048	Argument	feed -> feed_filename		6314786	0					
ANR	6316049	PtrMemberAccess	feed -> feed_filename		6314786	0					
ANR	6316050	Identifier	feed		6314786	0					
ANR	6316051	Identifier	feed_filename		6314786	1					
ANR	6316052	Argument	sizeof ( feed -> feed_filename )		6314786	1					
ANR	6316053	SizeofExpression	sizeof ( feed -> feed_filename )		6314786	0					
ANR	6316054	Sizeof	sizeof		6314786	0					
ANR	6316055	PtrMemberAccess	feed -> feed_filename		6314786	1					
ANR	6316056	Identifier	feed		6314786	0					
ANR	6316057	Identifier	feed_filename		6314786	1					
ANR	6316058	Argument	& p		6314786	2					
ANR	6316059	UnaryOperationExpression	& p		6314786	0					
ANR	6316060	UnaryOperator	&		6314786	0					
ANR	6316061	Identifier	p		6314786	1					
ANR	6316062	ElseStatement	else		6314786	0					
ANR	6316063	IfStatement	if ( stream )		6314786	0					
ANR	6316064	Condition	stream	355:23:6787:6792	6314786	0	True				
ANR	6316065	Identifier	stream		6314786	0					
ANR	6316066	ExpressionStatement	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"	357:16:6812:6877	6314786	1	True				
ANR	6316067	CallExpression	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"		6314786	0					
ANR	6316068	Callee	get_arg		6314786	0					
ANR	6316069	Identifier	get_arg		6314786	0					
ANR	6316070	ArgumentList	stream -> feed_filename		6314786	1					
ANR	6316071	Argument	stream -> feed_filename		6314786	0					
ANR	6316072	PtrMemberAccess	stream -> feed_filename		6314786	0					
ANR	6316073	Identifier	stream		6314786	0					
ANR	6316074	Identifier	feed_filename		6314786	1					
ANR	6316075	Argument	sizeof ( stream -> feed_filename )		6314786	1					
ANR	6316076	SizeofExpression	sizeof ( stream -> feed_filename )		6314786	0					
ANR	6316077	Sizeof	sizeof		6314786	0					
ANR	6316078	PtrMemberAccess	stream -> feed_filename		6314786	1					
ANR	6316079	Identifier	stream		6314786	0					
ANR	6316080	Identifier	feed_filename		6314786	1					
ANR	6316081	Argument	& p		6314786	2					
ANR	6316082	UnaryOperationExpression	& p		6314786	0					
ANR	6316083	UnaryOperator	&		6314786	0					
ANR	6316084	Identifier	p		6314786	1					
ANR	6316085	ElseStatement	else		6314786	0					
ANR	6316086	IfStatement	"if ( ! strcasecmp ( cmd , ""Truncate"" ) )"		6314786	0					
ANR	6316087	Condition	"! strcasecmp ( cmd , ""Truncate"" )"	359:19:6899:6926	6314786	0	True				
ANR	6316088	UnaryOperationExpression	"! strcasecmp ( cmd , ""Truncate"" )"		6314786	0					
ANR	6316089	UnaryOperator	!		6314786	0					
ANR	6316090	CallExpression	"strcasecmp ( cmd , ""Truncate"" )"		6314786	1					
ANR	6316091	Callee	strcasecmp		6314786	0					
ANR	6316092	Identifier	strcasecmp		6314786	0					
ANR	6316093	ArgumentList	cmd		6314786	1					
ANR	6316094	Argument	cmd		6314786	0					
ANR	6316095	Identifier	cmd		6314786	0					
ANR	6316096	Argument	"""Truncate"""		6314786	1					
ANR	6316097	PrimaryExpression	"""Truncate"""		6314786	0					
ANR	6316098	CompoundStatement		357:49:6879:6879	6314786	1					
ANR	6316099	IfStatement	if ( feed )		6314786	0					
ANR	6316100	Condition	feed	361:16:6948:6951	6314786	0	True				
ANR	6316101	Identifier	feed		6314786	0					
ANR	6316102	CompoundStatement		359:22:6904:6904	6314786	1					
ANR	6316103	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	363:16:6973:7002	6314786	0	True				
ANR	6316104	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6316105	Callee	get_arg		6314786	0					
ANR	6316106	Identifier	get_arg		6314786	0					
ANR	6316107	ArgumentList	arg		6314786	1					
ANR	6316108	Argument	arg		6314786	0					
ANR	6316109	Identifier	arg		6314786	0					
ANR	6316110	Argument	sizeof ( arg )		6314786	1					
ANR	6316111	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6316112	Sizeof	sizeof		6314786	0					
ANR	6316113	SizeofOperand	arg		6314786	1					
ANR	6316114	Argument	& p		6314786	2					
ANR	6316115	UnaryOperationExpression	& p		6314786	0					
ANR	6316116	UnaryOperator	&		6314786	0					
ANR	6316117	Identifier	p		6314786	1					
ANR	6316118	ExpressionStatement	"feed -> truncate = strtod ( arg , NULL )"	365:16:7021:7055	6314786	1	True				
ANR	6316119	AssignmentExpression	"feed -> truncate = strtod ( arg , NULL )"		6314786	0		=			
ANR	6316120	PtrMemberAccess	feed -> truncate		6314786	0					
ANR	6316121	Identifier	feed		6314786	0					
ANR	6316122	Identifier	truncate		6314786	1					
ANR	6316123	CallExpression	"strtod ( arg , NULL )"		6314786	1					
ANR	6316124	Callee	strtod		6314786	0					
ANR	6316125	Identifier	strtod		6314786	0					
ANR	6316126	ArgumentList	arg		6314786	1					
ANR	6316127	Argument	arg		6314786	0					
ANR	6316128	Identifier	arg		6314786	0					
ANR	6316129	Argument	NULL		6314786	1					
ANR	6316130	Identifier	NULL		6314786	0					
ANR	6316131	ElseStatement	else		6314786	0					
ANR	6316132	IfStatement	"if ( ! strcasecmp ( cmd , ""FileMaxSize"" ) )"		6314786	0					
ANR	6316133	Condition	"! strcasecmp ( cmd , ""FileMaxSize"" )"	369:19:7092:7122	6314786	0	True				
ANR	6316134	UnaryOperationExpression	"! strcasecmp ( cmd , ""FileMaxSize"" )"		6314786	0					
ANR	6316135	UnaryOperator	!		6314786	0					
ANR	6316136	CallExpression	"strcasecmp ( cmd , ""FileMaxSize"" )"		6314786	1					
ANR	6316137	Callee	strcasecmp		6314786	0					
ANR	6316138	Identifier	strcasecmp		6314786	0					
ANR	6316139	ArgumentList	cmd		6314786	1					
ANR	6316140	Argument	cmd		6314786	0					
ANR	6316141	Identifier	cmd		6314786	0					
ANR	6316142	Argument	"""FileMaxSize"""		6314786	1					
ANR	6316143	PrimaryExpression	"""FileMaxSize"""		6314786	0					
ANR	6316144	CompoundStatement		367:52:7075:7075	6314786	1					
ANR	6316145	IfStatement	if ( feed )		6314786	0					
ANR	6316146	Condition	feed	371:16:7144:7147	6314786	0	True				
ANR	6316147	Identifier	feed		6314786	0					
ANR	6316148	CompoundStatement		373:16:7146:7158	6314786	1					
ANR	6316149	IdentifierDeclStatement	char * p1 ;	373:16:7169:7177	6314786	0	True				
ANR	6316150	IdentifierDecl	* p1		6314786	0					
ANR	6316151	IdentifierDeclType	char *		6314786	0					
ANR	6316152	Identifier	p1		6314786	1					
ANR	6316153	IdentifierDeclStatement	double fsize ;	375:16:7196:7208	6314786	1	True				
ANR	6316154	IdentifierDecl	fsize		6314786	0					
ANR	6316155	IdentifierDeclType	double		6314786	0					
ANR	6316156	Identifier	fsize		6314786	1					
ANR	6316157	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	379:16:7229:7258	6314786	2	True				
ANR	6316158	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6316159	Callee	get_arg		6314786	0					
ANR	6316160	Identifier	get_arg		6314786	0					
ANR	6316161	ArgumentList	arg		6314786	1					
ANR	6316162	Argument	arg		6314786	0					
ANR	6316163	Identifier	arg		6314786	0					
ANR	6316164	Argument	sizeof ( arg )		6314786	1					
ANR	6316165	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6316166	Sizeof	sizeof		6314786	0					
ANR	6316167	SizeofOperand	arg		6314786	1					
ANR	6316168	Argument	& p		6314786	2					
ANR	6316169	UnaryOperationExpression	& p		6314786	0					
ANR	6316170	UnaryOperator	&		6314786	0					
ANR	6316171	Identifier	p		6314786	1					
ANR	6316172	ExpressionStatement	p1 = arg	381:16:7277:7285	6314786	3	True				
ANR	6316173	AssignmentExpression	p1 = arg		6314786	0		=			
ANR	6316174	Identifier	p1		6314786	0					
ANR	6316175	Identifier	arg		6314786	1					
ANR	6316176	ExpressionStatement	"fsize = strtod ( p1 , & p1 )"	383:16:7304:7327	6314786	4	True				
ANR	6316177	AssignmentExpression	"fsize = strtod ( p1 , & p1 )"		6314786	0		=			
ANR	6316178	Identifier	fsize		6314786	0					
ANR	6316179	CallExpression	"strtod ( p1 , & p1 )"		6314786	1					
ANR	6316180	Callee	strtod		6314786	0					
ANR	6316181	Identifier	strtod		6314786	0					
ANR	6316182	ArgumentList	p1		6314786	1					
ANR	6316183	Argument	p1		6314786	0					
ANR	6316184	Identifier	p1		6314786	0					
ANR	6316185	Argument	& p1		6314786	1					
ANR	6316186	UnaryOperationExpression	& p1		6314786	0					
ANR	6316187	UnaryOperator	&		6314786	0					
ANR	6316188	Identifier	p1		6314786	1					
ANR	6316189	SwitchStatement	switch ( toupper ( * p1 ) )		6314786	5					
ANR	6316190	Condition	toupper ( * p1 )	385:23:7353:7364	6314786	0	True				
ANR	6316191	CallExpression	toupper ( * p1 )		6314786	0					
ANR	6316192	Callee	toupper		6314786	0					
ANR	6316193	Identifier	toupper		6314786	0					
ANR	6316194	ArgumentList	* p1		6314786	1					
ANR	6316195	Argument	* p1		6314786	0					
ANR	6316196	UnaryOperationExpression	* p1		6314786	0					
ANR	6316197	UnaryOperator	*		6314786	0					
ANR	6316198	Identifier	p1		6314786	1					
ANR	6316199	CompoundStatement		383:37:7317:7317	6314786	1					
ANR	6316200	Label	case 'K' :	387:16:7386:7394	6314786	0	True				
ANR	6316201	ExpressionStatement	fsize *= 1024	389:20:7417:7430	6314786	1	True				
ANR	6316202	AssignmentExpression	fsize *= 1024		6314786	0		*=			
ANR	6316203	Identifier	fsize		6314786	0					
ANR	6316204	PrimaryExpression	1024		6314786	1					
ANR	6316205	BreakStatement	break ;	391:20:7453:7458	6314786	2	True				
ANR	6316206	Label	case 'M' :	393:16:7477:7485	6314786	3	True				
ANR	6316207	ExpressionStatement	fsize *= 1024 * 1024	395:20:7508:7528	6314786	4	True				
ANR	6316208	AssignmentExpression	fsize *= 1024 * 1024		6314786	0		*=			
ANR	6316209	Identifier	fsize		6314786	0					
ANR	6316210	MultiplicativeExpression	1024 * 1024		6314786	1		*			
ANR	6316211	PrimaryExpression	1024		6314786	0					
ANR	6316212	PrimaryExpression	1024		6314786	1					
ANR	6316213	BreakStatement	break ;	397:20:7551:7556	6314786	5	True				
ANR	6316214	Label	case 'G' :	399:16:7575:7583	6314786	6	True				
ANR	6316215	ExpressionStatement	fsize *= 1024 * 1024 * 1024	401:20:7606:7633	6314786	7	True				
ANR	6316216	AssignmentExpression	fsize *= 1024 * 1024 * 1024		6314786	0		*=			
ANR	6316217	Identifier	fsize		6314786	0					
ANR	6316218	MultiplicativeExpression	1024 * 1024 * 1024		6314786	1		*			
ANR	6316219	PrimaryExpression	1024		6314786	0					
ANR	6316220	MultiplicativeExpression	1024 * 1024		6314786	1		*			
ANR	6316221	PrimaryExpression	1024		6314786	0					
ANR	6316222	PrimaryExpression	1024		6314786	1					
ANR	6316223	BreakStatement	break ;	403:20:7656:7661	6314786	8	True				
ANR	6316224	ExpressionStatement	feed -> feed_max_size = ( int64_t ) fsize	407:16:7699:7735	6314786	6	True				
ANR	6316225	AssignmentExpression	feed -> feed_max_size = ( int64_t ) fsize		6314786	0		=			
ANR	6316226	PtrMemberAccess	feed -> feed_max_size		6314786	0					
ANR	6316227	Identifier	feed		6314786	0					
ANR	6316228	Identifier	feed_max_size		6314786	1					
ANR	6316229	CastExpression	( int64_t ) fsize		6314786	1					
ANR	6316230	CastTarget	int64_t		6314786	0					
ANR	6316231	Identifier	fsize		6314786	1					
ANR	6316232	IfStatement	if ( feed -> feed_max_size < FFM_PACKET_SIZE * 4 )		6314786	7					
ANR	6316233	Condition	feed -> feed_max_size < FFM_PACKET_SIZE * 4	409:20:7758:7796	6314786	0	True				
ANR	6316234	RelationalExpression	feed -> feed_max_size < FFM_PACKET_SIZE * 4		6314786	0		<			
ANR	6316235	PtrMemberAccess	feed -> feed_max_size		6314786	0					
ANR	6316236	Identifier	feed		6314786	0					
ANR	6316237	Identifier	feed_max_size		6314786	1					
ANR	6316238	MultiplicativeExpression	FFM_PACKET_SIZE * 4		6314786	1		*			
ANR	6316239	Identifier	FFM_PACKET_SIZE		6314786	0					
ANR	6316240	PrimaryExpression	4		6314786	1					
ANR	6316241	CompoundStatement		407:61:7749:7749	6314786	1					
ANR	6316242	Statement	fprintf	411:20:7822:7828	6314786	0	True				
ANR	6316243	Statement	(	411:27:7829:7829	6314786	1	True				
ANR	6316244	Statement	stderr	411:28:7830:7835	6314786	2	True				
ANR	6316245	Statement	","	411:34:7836:7836	6314786	3	True				
ANR	6316246	Statement	"""%s:%d: Feed max file size is too small, """	411:36:7838:7879	6314786	4	True				
ANR	6316247	Statement	"""must be at least %d\\n"""	413:28:7910:7932	6314786	5	True				
ANR	6316248	Statement	","	413:51:7933:7933	6314786	6	True				
ANR	6316249	Statement	filename	413:53:7935:7942	6314786	7	True				
ANR	6316250	Statement	","	413:61:7943:7943	6314786	8	True				
ANR	6316251	Statement	line_num	413:63:7945:7952	6314786	9	True				
ANR	6316252	Statement	","	413:71:7953:7953	6314786	10	True				
ANR	6316253	Statement	FFM_PACKET_SIZE	413:73:7955:7969	6314786	11	True				
ANR	6316254	Statement	*	413:88:7970:7970	6314786	12	True				
ANR	6316255	Statement	4	413:89:7971:7971	6314786	13	True				
ANR	6316256	Statement	)	413:90:7972:7972	6314786	14	True				
ANR	6316257	ExpressionStatement		413:91:7973:7973	6314786	15	True				
ANR	6316258	ExpressionStatement	errors ++	415:20:7996:8004	6314786	16	True				
ANR	6316259	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6316260	Identifier	errors		6314786	0					
ANR	6316261	IncDec	++		6314786	1					
ANR	6316262	ElseStatement	else		6314786	0					
ANR	6316263	IfStatement	"if ( ! strcasecmp ( cmd , ""</Feed>"" ) )"		6314786	0					
ANR	6316264	Condition	"! strcasecmp ( cmd , ""</Feed>"" )"	421:19:8060:8086	6314786	0	True				
ANR	6316265	UnaryOperationExpression	"! strcasecmp ( cmd , ""</Feed>"" )"		6314786	0					
ANR	6316266	UnaryOperator	!		6314786	0					
ANR	6316267	CallExpression	"strcasecmp ( cmd , ""</Feed>"" )"		6314786	1					
ANR	6316268	Callee	strcasecmp		6314786	0					
ANR	6316269	Identifier	strcasecmp		6314786	0					
ANR	6316270	ArgumentList	cmd		6314786	1					
ANR	6316271	Argument	cmd		6314786	0					
ANR	6316272	Identifier	cmd		6314786	0					
ANR	6316273	Argument	"""</Feed>"""		6314786	1					
ANR	6316274	PrimaryExpression	"""</Feed>"""		6314786	0					
ANR	6316275	CompoundStatement		419:48:8039:8039	6314786	1					
ANR	6316276	IfStatement	if ( ! feed )		6314786	0					
ANR	6316277	Condition	! feed	423:16:8108:8112	6314786	0	True				
ANR	6316278	UnaryOperationExpression	! feed		6314786	0					
ANR	6316279	UnaryOperator	!		6314786	0					
ANR	6316280	Identifier	feed		6314786	1					
ANR	6316281	CompoundStatement		421:23:8065:8065	6314786	1					
ANR	6316282	ExpressionStatement	"fprintf ( stderr , ""%s:%d: No corresponding <Feed> for </Feed>\\n"" , filename , line_num )"	425:16:8134:8242	6314786	0	True				
ANR	6316283	CallExpression	"fprintf ( stderr , ""%s:%d: No corresponding <Feed> for </Feed>\\n"" , filename , line_num )"		6314786	0					
ANR	6316284	Callee	fprintf		6314786	0					
ANR	6316285	Identifier	fprintf		6314786	0					
ANR	6316286	ArgumentList	stderr		6314786	1					
ANR	6316287	Argument	stderr		6314786	0					
ANR	6316288	Identifier	stderr		6314786	0					
ANR	6316289	Argument	"""%s:%d: No corresponding <Feed> for </Feed>\\n"""		6314786	1					
ANR	6316290	PrimaryExpression	"""%s:%d: No corresponding <Feed> for </Feed>\\n"""		6314786	0					
ANR	6316291	Argument	filename		6314786	2					
ANR	6316292	Identifier	filename		6314786	0					
ANR	6316293	Argument	line_num		6314786	3					
ANR	6316294	Identifier	line_num		6314786	0					
ANR	6316295	ExpressionStatement	errors ++	429:16:8261:8269	6314786	1	True				
ANR	6316296	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6316297	Identifier	errors		6314786	0					
ANR	6316298	IncDec	++		6314786	1					
ANR	6316299	ExpressionStatement	feed = NULL	433:12:8299:8310	6314786	1	True				
ANR	6316300	AssignmentExpression	feed = NULL		6314786	0		=			
ANR	6316301	Identifier	feed		6314786	0					
ANR	6316302	Identifier	NULL		6314786	1					
ANR	6316303	ElseStatement	else		6314786	0					
ANR	6316304	IfStatement	"if ( ! strcasecmp ( cmd , ""<Stream"" ) )"		6314786	0					
ANR	6316305	Condition	"! strcasecmp ( cmd , ""<Stream"" )"	435:19:8332:8358	6314786	0	True				
ANR	6316306	UnaryOperationExpression	"! strcasecmp ( cmd , ""<Stream"" )"		6314786	0					
ANR	6316307	UnaryOperator	!		6314786	0					
ANR	6316308	CallExpression	"strcasecmp ( cmd , ""<Stream"" )"		6314786	1					
ANR	6316309	Callee	strcasecmp		6314786	0					
ANR	6316310	Identifier	strcasecmp		6314786	0					
ANR	6316311	ArgumentList	cmd		6314786	1					
ANR	6316312	Argument	cmd		6314786	0					
ANR	6316313	Identifier	cmd		6314786	0					
ANR	6316314	Argument	"""<Stream"""		6314786	1					
ANR	6316315	PrimaryExpression	"""<Stream"""		6314786	0					
ANR	6316316	CompoundStatement		439:12:8429:8436	6314786	1					
ANR	6316317	IdentifierDeclStatement	char * q ;	441:12:8479:8486	6314786	0	True				
ANR	6316318	IdentifierDecl	* q		6314786	0					
ANR	6316319	IdentifierDeclType	char *		6314786	0					
ANR	6316320	Identifier	q		6314786	1					
ANR	6316321	IfStatement	if ( stream || feed )		6314786	1					
ANR	6316322	Condition	stream || feed	443:16:8505:8518	6314786	0	True				
ANR	6316323	OrExpression	stream || feed		6314786	0		||			
ANR	6316324	Identifier	stream		6314786	0					
ANR	6316325	Identifier	feed		6314786	1					
ANR	6316326	CompoundStatement		441:32:8471:8471	6314786	1					
ANR	6316327	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"	445:16:8540:8629	6314786	0	True				
ANR	6316328	CallExpression	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"		6314786	0					
ANR	6316329	Callee	fprintf		6314786	0					
ANR	6316330	Identifier	fprintf		6314786	0					
ANR	6316331	ArgumentList	stderr		6314786	1					
ANR	6316332	Argument	stderr		6314786	0					
ANR	6316333	Identifier	stderr		6314786	0					
ANR	6316334	Argument	"""%s:%d: Already in a tag\\n"""		6314786	1					
ANR	6316335	PrimaryExpression	"""%s:%d: Already in a tag\\n"""		6314786	0					
ANR	6316336	Argument	filename		6314786	2					
ANR	6316337	Identifier	filename		6314786	0					
ANR	6316338	Argument	line_num		6314786	3					
ANR	6316339	Identifier	line_num		6314786	0					
ANR	6316340	ElseStatement	else		6314786	0					
ANR	6316341	CompoundStatement		449:16:8620:8631	6314786	0					
ANR	6316342	IdentifierDeclStatement	FFStream * s ;	451:16:8670:8681	6314786	0	True				
ANR	6316343	IdentifierDecl	* s		6314786	0					
ANR	6316344	IdentifierDeclType	FFStream *		6314786	0					
ANR	6316345	Identifier	s		6314786	1					
ANR	6316346	Statement	const	453:16:8700:8704	6314786	1	True				
ANR	6316347	Statement	AVClass	453:22:8706:8712	6314786	2	True				
ANR	6316348	Statement	*	453:30:8714:8714	6314786	3	True				
ANR	6316349	Statement	class	453:31:8715:8719	6314786	4	True				
ANR	6316350	ExpressionStatement		453:36:8720:8720	6314786	5	True				
ANR	6316351	ExpressionStatement	stream = av_mallocz ( sizeof ( FFStream ) )	455:16:8739:8776	6314786	6	True				
ANR	6316352	AssignmentExpression	stream = av_mallocz ( sizeof ( FFStream ) )		6314786	0		=			
ANR	6316353	Identifier	stream		6314786	0					
ANR	6316354	CallExpression	av_mallocz ( sizeof ( FFStream ) )		6314786	1					
ANR	6316355	Callee	av_mallocz		6314786	0					
ANR	6316356	Identifier	av_mallocz		6314786	0					
ANR	6316357	ArgumentList	sizeof ( FFStream )		6314786	1					
ANR	6316358	Argument	sizeof ( FFStream )		6314786	0					
ANR	6316359	SizeofExpression	sizeof ( FFStream )		6314786	0					
ANR	6316360	Sizeof	sizeof		6314786	0					
ANR	6316361	SizeofOperand	FFStream		6314786	1					
ANR	6316362	ExpressionStatement	"get_arg ( stream -> filename , sizeof ( stream -> filename ) , & p )"	457:16:8795:8850	6314786	7	True				
ANR	6316363	CallExpression	"get_arg ( stream -> filename , sizeof ( stream -> filename ) , & p )"		6314786	0					
ANR	6316364	Callee	get_arg		6314786	0					
ANR	6316365	Identifier	get_arg		6314786	0					
ANR	6316366	ArgumentList	stream -> filename		6314786	1					
ANR	6316367	Argument	stream -> filename		6314786	0					
ANR	6316368	PtrMemberAccess	stream -> filename		6314786	0					
ANR	6316369	Identifier	stream		6314786	0					
ANR	6316370	Identifier	filename		6314786	1					
ANR	6316371	Argument	sizeof ( stream -> filename )		6314786	1					
ANR	6316372	SizeofExpression	sizeof ( stream -> filename )		6314786	0					
ANR	6316373	Sizeof	sizeof		6314786	0					
ANR	6316374	PtrMemberAccess	stream -> filename		6314786	1					
ANR	6316375	Identifier	stream		6314786	0					
ANR	6316376	Identifier	filename		6314786	1					
ANR	6316377	Argument	& p		6314786	2					
ANR	6316378	UnaryOperationExpression	& p		6314786	0					
ANR	6316379	UnaryOperator	&		6314786	0					
ANR	6316380	Identifier	p		6314786	1					
ANR	6316381	ExpressionStatement	"q = strrchr ( stream -> filename , '>' )"	459:16:8869:8903	6314786	8	True				
ANR	6316382	AssignmentExpression	"q = strrchr ( stream -> filename , '>' )"		6314786	0		=			
ANR	6316383	Identifier	q		6314786	0					
ANR	6316384	CallExpression	"strrchr ( stream -> filename , '>' )"		6314786	1					
ANR	6316385	Callee	strrchr		6314786	0					
ANR	6316386	Identifier	strrchr		6314786	0					
ANR	6316387	ArgumentList	stream -> filename		6314786	1					
ANR	6316388	Argument	stream -> filename		6314786	0					
ANR	6316389	PtrMemberAccess	stream -> filename		6314786	0					
ANR	6316390	Identifier	stream		6314786	0					
ANR	6316391	Identifier	filename		6314786	1					
ANR	6316392	Argument	'>'		6314786	1					
ANR	6316393	PrimaryExpression	'>'		6314786	0					
ANR	6316394	IfStatement	if ( * q )		6314786	9					
ANR	6316395	Condition	* q	461:20:8926:8927	6314786	0	True				
ANR	6316396	UnaryOperationExpression	* q		6314786	0					
ANR	6316397	UnaryOperator	*		6314786	0					
ANR	6316398	Identifier	q		6314786	1					
ANR	6316399	ExpressionStatement	* q = '\\0'	463:20:8951:8960	6314786	1	True				
ANR	6316400	AssignmentExpression	* q = '\\0'		6314786	0		=			
ANR	6316401	UnaryOperationExpression	* q		6314786	0					
ANR	6316402	UnaryOperator	*		6314786	0					
ANR	6316403	Identifier	q		6314786	1					
ANR	6316404	PrimaryExpression	'\\0'		6314786	1					
ANR	6316405	ForStatement	for ( s = first_stream ; s ; s = s -> next )		6314786	10					
ANR	6316406	ForInit	s = first_stream ;	467:21:8986:9002	6314786	0	True				
ANR	6316407	AssignmentExpression	s = first_stream		6314786	0		=			
ANR	6316408	Identifier	s		6314786	0					
ANR	6316409	Identifier	first_stream		6314786	1					
ANR	6316410	Condition	s	467:39:9004:9004	6314786	1	True				
ANR	6316411	Identifier	s		6314786	0					
ANR	6316412	AssignmentExpression	s = s -> next	467:42:9007:9017	6314786	2	True	=			
ANR	6316413	Identifier	s		6314786	0					
ANR	6316414	PtrMemberAccess	s -> next		6314786	1					
ANR	6316415	Identifier	s		6314786	0					
ANR	6316416	Identifier	next		6314786	1					
ANR	6316417	CompoundStatement		465:55:8970:8970	6314786	3					
ANR	6316418	IfStatement	"if ( ! strcmp ( stream -> filename , s -> filename ) )"		6314786	0					
ANR	6316419	Condition	"! strcmp ( stream -> filename , s -> filename )"	469:24:9047:9084	6314786	0	True				
ANR	6316420	UnaryOperationExpression	"! strcmp ( stream -> filename , s -> filename )"		6314786	0					
ANR	6316421	UnaryOperator	!		6314786	0					
ANR	6316422	CallExpression	"strcmp ( stream -> filename , s -> filename )"		6314786	1					
ANR	6316423	Callee	strcmp		6314786	0					
ANR	6316424	Identifier	strcmp		6314786	0					
ANR	6316425	ArgumentList	stream -> filename		6314786	1					
ANR	6316426	Argument	stream -> filename		6314786	0					
ANR	6316427	PtrMemberAccess	stream -> filename		6314786	0					
ANR	6316428	Identifier	stream		6314786	0					
ANR	6316429	Identifier	filename		6314786	1					
ANR	6316430	Argument	s -> filename		6314786	1					
ANR	6316431	PtrMemberAccess	s -> filename		6314786	0					
ANR	6316432	Identifier	s		6314786	0					
ANR	6316433	Identifier	filename		6314786	1					
ANR	6316434	CompoundStatement		467:64:9037:9037	6314786	1					
ANR	6316435	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Stream '%s' already registered\\n"" , filename , line_num , s -> filename )"	471:24:9114:9238	6314786	0	True				
ANR	6316436	CallExpression	"fprintf ( stderr , ""%s:%d: Stream '%s' already registered\\n"" , filename , line_num , s -> filename )"		6314786	0					
ANR	6316437	Callee	fprintf		6314786	0					
ANR	6316438	Identifier	fprintf		6314786	0					
ANR	6316439	ArgumentList	stderr		6314786	1					
ANR	6316440	Argument	stderr		6314786	0					
ANR	6316441	Identifier	stderr		6314786	0					
ANR	6316442	Argument	"""%s:%d: Stream '%s' already registered\\n"""		6314786	1					
ANR	6316443	PrimaryExpression	"""%s:%d: Stream '%s' already registered\\n"""		6314786	0					
ANR	6316444	Argument	filename		6314786	2					
ANR	6316445	Identifier	filename		6314786	0					
ANR	6316446	Argument	line_num		6314786	3					
ANR	6316447	Identifier	line_num		6314786	0					
ANR	6316448	Argument	s -> filename		6314786	4					
ANR	6316449	PtrMemberAccess	s -> filename		6314786	0					
ANR	6316450	Identifier	s		6314786	0					
ANR	6316451	Identifier	filename		6314786	1					
ANR	6316452	ExpressionStatement	errors ++	475:24:9265:9273	6314786	1	True				
ANR	6316453	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6316454	Identifier	errors		6314786	0					
ANR	6316455	IncDec	++		6314786	1					
ANR	6316456	ExpressionStatement	"stream -> fmt = guess_stream_format ( NULL , stream -> filename , NULL )"	483:16:9336:9399	6314786	11	True				
ANR	6316457	AssignmentExpression	"stream -> fmt = guess_stream_format ( NULL , stream -> filename , NULL )"		6314786	0		=			
ANR	6316458	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316459	Identifier	stream		6314786	0					
ANR	6316460	Identifier	fmt		6314786	1					
ANR	6316461	CallExpression	"guess_stream_format ( NULL , stream -> filename , NULL )"		6314786	1					
ANR	6316462	Callee	guess_stream_format		6314786	0					
ANR	6316463	Identifier	guess_stream_format		6314786	0					
ANR	6316464	ArgumentList	NULL		6314786	1					
ANR	6316465	Argument	NULL		6314786	0					
ANR	6316466	Identifier	NULL		6314786	0					
ANR	6316467	Argument	stream -> filename		6314786	1					
ANR	6316468	PtrMemberAccess	stream -> filename		6314786	0					
ANR	6316469	Identifier	stream		6314786	0					
ANR	6316470	Identifier	filename		6314786	1					
ANR	6316471	Argument	NULL		6314786	2					
ANR	6316472	Identifier	NULL		6314786	0					
ANR	6316473	ExpressionStatement	avcodec_get_context_defaults ( & video_enc )	491:16:9595:9635	6314786	12	True				
ANR	6316474	CallExpression	avcodec_get_context_defaults ( & video_enc )		6314786	0					
ANR	6316475	Callee	avcodec_get_context_defaults		6314786	0					
ANR	6316476	Identifier	avcodec_get_context_defaults		6314786	0					
ANR	6316477	ArgumentList	& video_enc		6314786	1					
ANR	6316478	Argument	& video_enc		6314786	0					
ANR	6316479	UnaryOperationExpression	& video_enc		6314786	0					
ANR	6316480	UnaryOperator	&		6314786	0					
ANR	6316481	Identifier	video_enc		6314786	1					
ANR	6316482	Statement	class	493:16:9654:9658	6314786	13	True				
ANR	6316483	Statement	=	493:22:9660:9660	6314786	14	True				
ANR	6316484	ExpressionStatement	video_enc . av_class	493:24:9662:9680	6314786	15	True				
ANR	6316485	MemberAccess	video_enc . av_class		6314786	0					
ANR	6316486	Identifier	video_enc		6314786	0					
ANR	6316487	Identifier	av_class		6314786	1					
ANR	6316488	ExpressionStatement	"memset ( & audio_enc , 0 , sizeof ( AVCodecContext ) )"	495:16:9699:9744	6314786	16	True				
ANR	6316489	CallExpression	"memset ( & audio_enc , 0 , sizeof ( AVCodecContext ) )"		6314786	0					
ANR	6316490	Callee	memset		6314786	0					
ANR	6316491	Identifier	memset		6314786	0					
ANR	6316492	ArgumentList	& audio_enc		6314786	1					
ANR	6316493	Argument	& audio_enc		6314786	0					
ANR	6316494	UnaryOperationExpression	& audio_enc		6314786	0					
ANR	6316495	UnaryOperator	&		6314786	0					
ANR	6316496	Identifier	audio_enc		6314786	1					
ANR	6316497	Argument	0		6314786	1					
ANR	6316498	PrimaryExpression	0		6314786	0					
ANR	6316499	Argument	sizeof ( AVCodecContext )		6314786	2					
ANR	6316500	SizeofExpression	sizeof ( AVCodecContext )		6314786	0					
ANR	6316501	Sizeof	sizeof		6314786	0					
ANR	6316502	SizeofOperand	AVCodecContext		6314786	1					
ANR	6316503	ExpressionStatement	"memset ( & video_enc , 0 , sizeof ( AVCodecContext ) )"	497:16:9763:9808	6314786	17	True				
ANR	6316504	CallExpression	"memset ( & video_enc , 0 , sizeof ( AVCodecContext ) )"		6314786	0					
ANR	6316505	Callee	memset		6314786	0					
ANR	6316506	Identifier	memset		6314786	0					
ANR	6316507	ArgumentList	& video_enc		6314786	1					
ANR	6316508	Argument	& video_enc		6314786	0					
ANR	6316509	UnaryOperationExpression	& video_enc		6314786	0					
ANR	6316510	UnaryOperator	&		6314786	0					
ANR	6316511	Identifier	video_enc		6314786	1					
ANR	6316512	Argument	0		6314786	1					
ANR	6316513	PrimaryExpression	0		6314786	0					
ANR	6316514	Argument	sizeof ( AVCodecContext )		6314786	2					
ANR	6316515	SizeofExpression	sizeof ( AVCodecContext )		6314786	0					
ANR	6316516	Sizeof	sizeof		6314786	0					
ANR	6316517	SizeofOperand	AVCodecContext		6314786	1					
ANR	6316518	Statement	audio_enc	499:16:9827:9835	6314786	18	True				
ANR	6316519	Statement	.	499:25:9836:9836	6314786	19	True				
ANR	6316520	Statement	av_class	499:26:9837:9844	6314786	20	True				
ANR	6316521	Statement	=	499:35:9846:9846	6314786	21	True				
ANR	6316522	Statement	class	499:37:9848:9852	6314786	22	True				
ANR	6316523	ExpressionStatement		499:42:9853:9853	6314786	23	True				
ANR	6316524	Statement	video_enc	501:16:9872:9880	6314786	24	True				
ANR	6316525	Statement	.	501:25:9881:9881	6314786	25	True				
ANR	6316526	Statement	av_class	501:26:9882:9889	6314786	26	True				
ANR	6316527	Statement	=	501:35:9891:9891	6314786	27	True				
ANR	6316528	Statement	class	501:37:9893:9897	6314786	28	True				
ANR	6316529	ExpressionStatement		501:42:9898:9898	6314786	29	True				
ANR	6316530	ExpressionStatement	audio_id = CODEC_ID_NONE	503:16:9917:9941	6314786	30	True				
ANR	6316531	AssignmentExpression	audio_id = CODEC_ID_NONE		6314786	0		=			
ANR	6316532	Identifier	audio_id		6314786	0					
ANR	6316533	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6316534	ExpressionStatement	video_id = CODEC_ID_NONE	505:16:9960:9984	6314786	31	True				
ANR	6316535	AssignmentExpression	video_id = CODEC_ID_NONE		6314786	0		=			
ANR	6316536	Identifier	video_id		6314786	0					
ANR	6316537	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6316538	IfStatement	if ( stream -> fmt )		6314786	32					
ANR	6316539	Condition	stream -> fmt	507:20:10007:10017	6314786	0	True				
ANR	6316540	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316541	Identifier	stream		6314786	0					
ANR	6316542	Identifier	fmt		6314786	1					
ANR	6316543	CompoundStatement		505:33:9970:9970	6314786	1					
ANR	6316544	ExpressionStatement	audio_id = stream -> fmt -> audio_codec	509:20:10043:10078	6314786	0	True				
ANR	6316545	AssignmentExpression	audio_id = stream -> fmt -> audio_codec		6314786	0		=			
ANR	6316546	Identifier	audio_id		6314786	0					
ANR	6316547	PtrMemberAccess	stream -> fmt -> audio_codec		6314786	1					
ANR	6316548	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316549	Identifier	stream		6314786	0					
ANR	6316550	Identifier	fmt		6314786	1					
ANR	6316551	Identifier	audio_codec		6314786	1					
ANR	6316552	ExpressionStatement	video_id = stream -> fmt -> video_codec	511:20:10101:10136	6314786	1	True				
ANR	6316553	AssignmentExpression	video_id = stream -> fmt -> video_codec		6314786	0		=			
ANR	6316554	Identifier	video_id		6314786	0					
ANR	6316555	PtrMemberAccess	stream -> fmt -> video_codec		6314786	1					
ANR	6316556	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316557	Identifier	stream		6314786	0					
ANR	6316558	Identifier	fmt		6314786	1					
ANR	6316559	Identifier	video_codec		6314786	1					
ANR	6316560	ExpressionStatement	* last_stream = stream	517:16:10176:10197	6314786	33	True				
ANR	6316561	AssignmentExpression	* last_stream = stream		6314786	0		=			
ANR	6316562	UnaryOperationExpression	* last_stream		6314786	0					
ANR	6316563	UnaryOperator	*		6314786	0					
ANR	6316564	Identifier	last_stream		6314786	1					
ANR	6316565	Identifier	stream		6314786	1					
ANR	6316566	ExpressionStatement	last_stream = & stream -> next	519:16:10216:10243	6314786	34	True				
ANR	6316567	AssignmentExpression	last_stream = & stream -> next		6314786	0		=			
ANR	6316568	Identifier	last_stream		6314786	0					
ANR	6316569	UnaryOperationExpression	& stream -> next		6314786	1					
ANR	6316570	UnaryOperator	&		6314786	0					
ANR	6316571	PtrMemberAccess	stream -> next		6314786	1					
ANR	6316572	Identifier	stream		6314786	0					
ANR	6316573	Identifier	next		6314786	1					
ANR	6316574	ElseStatement	else		6314786	0					
ANR	6316575	IfStatement	"if ( ! strcasecmp ( cmd , ""Feed"" ) )"		6314786	0					
ANR	6316576	Condition	"! strcasecmp ( cmd , ""Feed"" )"	523:19:10280:10303	6314786	0	True				
ANR	6316577	UnaryOperationExpression	"! strcasecmp ( cmd , ""Feed"" )"		6314786	0					
ANR	6316578	UnaryOperator	!		6314786	0					
ANR	6316579	CallExpression	"strcasecmp ( cmd , ""Feed"" )"		6314786	1					
ANR	6316580	Callee	strcasecmp		6314786	0					
ANR	6316581	Identifier	strcasecmp		6314786	0					
ANR	6316582	ArgumentList	cmd		6314786	1					
ANR	6316583	Argument	cmd		6314786	0					
ANR	6316584	Identifier	cmd		6314786	0					
ANR	6316585	Argument	"""Feed"""		6314786	1					
ANR	6316586	PrimaryExpression	"""Feed"""		6314786	0					
ANR	6316587	CompoundStatement		521:45:10256:10256	6314786	1					
ANR	6316588	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	525:12:10321:10350	6314786	0	True				
ANR	6316589	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6316590	Callee	get_arg		6314786	0					
ANR	6316591	Identifier	get_arg		6314786	0					
ANR	6316592	ArgumentList	arg		6314786	1					
ANR	6316593	Argument	arg		6314786	0					
ANR	6316594	Identifier	arg		6314786	0					
ANR	6316595	Argument	sizeof ( arg )		6314786	1					
ANR	6316596	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6316597	Sizeof	sizeof		6314786	0					
ANR	6316598	SizeofOperand	arg		6314786	1					
ANR	6316599	Argument	& p		6314786	2					
ANR	6316600	UnaryOperationExpression	& p		6314786	0					
ANR	6316601	UnaryOperator	&		6314786	0					
ANR	6316602	Identifier	p		6314786	1					
ANR	6316603	IfStatement	if ( stream )		6314786	1					
ANR	6316604	Condition	stream	527:16:10369:10374	6314786	0	True				
ANR	6316605	Identifier	stream		6314786	0					
ANR	6316606	CompoundStatement		527:16:10346:10361	6314786	1					
ANR	6316607	IdentifierDeclStatement	FFStream * sfeed ;	529:16:10396:10411	6314786	0	True				
ANR	6316608	IdentifierDecl	* sfeed		6314786	0					
ANR	6316609	IdentifierDeclType	FFStream *		6314786	0					
ANR	6316610	Identifier	sfeed		6314786	1					
ANR	6316611	ExpressionStatement	sfeed = first_feed	533:16:10432:10450	6314786	1	True				
ANR	6316612	AssignmentExpression	sfeed = first_feed		6314786	0		=			
ANR	6316613	Identifier	sfeed		6314786	0					
ANR	6316614	Identifier	first_feed		6314786	1					
ANR	6316615	WhileStatement	while ( sfeed != NULL )		6314786	2					
ANR	6316616	Condition	sfeed != NULL	535:23:10476:10488	6314786	0	True				
ANR	6316617	EqualityExpression	sfeed != NULL		6314786	0		!=			
ANR	6316618	Identifier	sfeed		6314786	0					
ANR	6316619	Identifier	NULL		6314786	1					
ANR	6316620	CompoundStatement		533:38:10441:10441	6314786	1					
ANR	6316621	IfStatement	"if ( ! strcmp ( sfeed -> filename , arg ) )"		6314786	0					
ANR	6316622	Condition	"! strcmp ( sfeed -> filename , arg )"	537:24:10518:10546	6314786	0	True				
ANR	6316623	UnaryOperationExpression	"! strcmp ( sfeed -> filename , arg )"		6314786	0					
ANR	6316624	UnaryOperator	!		6314786	0					
ANR	6316625	CallExpression	"strcmp ( sfeed -> filename , arg )"		6314786	1					
ANR	6316626	Callee	strcmp		6314786	0					
ANR	6316627	Identifier	strcmp		6314786	0					
ANR	6316628	ArgumentList	sfeed -> filename		6314786	1					
ANR	6316629	Argument	sfeed -> filename		6314786	0					
ANR	6316630	PtrMemberAccess	sfeed -> filename		6314786	0					
ANR	6316631	Identifier	sfeed		6314786	0					
ANR	6316632	Identifier	filename		6314786	1					
ANR	6316633	Argument	arg		6314786	1					
ANR	6316634	Identifier	arg		6314786	0					
ANR	6316635	BreakStatement	break ;	539:24:10574:10579	6314786	1	True				
ANR	6316636	ExpressionStatement	sfeed = sfeed -> next_feed	541:20:10602:10626	6314786	1	True				
ANR	6316637	AssignmentExpression	sfeed = sfeed -> next_feed		6314786	0		=			
ANR	6316638	Identifier	sfeed		6314786	0					
ANR	6316639	PtrMemberAccess	sfeed -> next_feed		6314786	1					
ANR	6316640	Identifier	sfeed		6314786	0					
ANR	6316641	Identifier	next_feed		6314786	1					
ANR	6316642	IfStatement	if ( ! sfeed )		6314786	3					
ANR	6316643	Condition	! sfeed	545:20:10668:10673	6314786	0	True				
ANR	6316644	UnaryOperationExpression	! sfeed		6314786	0					
ANR	6316645	UnaryOperator	!		6314786	0					
ANR	6316646	Identifier	sfeed		6314786	1					
ANR	6316647	ExpressionStatement	"fprintf ( stderr , ""%s:%d: feed '%s' not defined\\n"" , filename , line_num , arg )"	547:20:10697:10800	6314786	1	True				
ANR	6316648	CallExpression	"fprintf ( stderr , ""%s:%d: feed '%s' not defined\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6316649	Callee	fprintf		6314786	0					
ANR	6316650	Identifier	fprintf		6314786	0					
ANR	6316651	ArgumentList	stderr		6314786	1					
ANR	6316652	Argument	stderr		6314786	0					
ANR	6316653	Identifier	stderr		6314786	0					
ANR	6316654	Argument	"""%s:%d: feed '%s' not defined\\n"""		6314786	1					
ANR	6316655	PrimaryExpression	"""%s:%d: feed '%s' not defined\\n"""		6314786	0					
ANR	6316656	Argument	filename		6314786	2					
ANR	6316657	Identifier	filename		6314786	0					
ANR	6316658	Argument	line_num		6314786	3					
ANR	6316659	Identifier	line_num		6314786	0					
ANR	6316660	Argument	arg		6314786	4					
ANR	6316661	Identifier	arg		6314786	0					
ANR	6316662	ElseStatement	else		6314786	0					
ANR	6316663	ExpressionStatement	stream -> feed = sfeed	553:20:10845:10865	6314786	0	True				
ANR	6316664	AssignmentExpression	stream -> feed = sfeed		6314786	0		=			
ANR	6316665	PtrMemberAccess	stream -> feed		6314786	0					
ANR	6316666	Identifier	stream		6314786	0					
ANR	6316667	Identifier	feed		6314786	1					
ANR	6316668	Identifier	sfeed		6314786	1					
ANR	6316669	ElseStatement	else		6314786	0					
ANR	6316670	IfStatement	"if ( ! strcasecmp ( cmd , ""Format"" ) )"		6314786	0					
ANR	6316671	Condition	"! strcasecmp ( cmd , ""Format"" )"	557:19:10902:10927	6314786	0	True				
ANR	6316672	UnaryOperationExpression	"! strcasecmp ( cmd , ""Format"" )"		6314786	0					
ANR	6316673	UnaryOperator	!		6314786	0					
ANR	6316674	CallExpression	"strcasecmp ( cmd , ""Format"" )"		6314786	1					
ANR	6316675	Callee	strcasecmp		6314786	0					
ANR	6316676	Identifier	strcasecmp		6314786	0					
ANR	6316677	ArgumentList	cmd		6314786	1					
ANR	6316678	Argument	cmd		6314786	0					
ANR	6316679	Identifier	cmd		6314786	0					
ANR	6316680	Argument	"""Format"""		6314786	1					
ANR	6316681	PrimaryExpression	"""Format"""		6314786	0					
ANR	6316682	CompoundStatement		555:47:10880:10880	6314786	1					
ANR	6316683	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	559:12:10945:10974	6314786	0	True				
ANR	6316684	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6316685	Callee	get_arg		6314786	0					
ANR	6316686	Identifier	get_arg		6314786	0					
ANR	6316687	ArgumentList	arg		6314786	1					
ANR	6316688	Argument	arg		6314786	0					
ANR	6316689	Identifier	arg		6314786	0					
ANR	6316690	Argument	sizeof ( arg )		6314786	1					
ANR	6316691	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6316692	Sizeof	sizeof		6314786	0					
ANR	6316693	SizeofOperand	arg		6314786	1					
ANR	6316694	Argument	& p		6314786	2					
ANR	6316695	UnaryOperationExpression	& p		6314786	0					
ANR	6316696	UnaryOperator	&		6314786	0					
ANR	6316697	Identifier	p		6314786	1					
ANR	6316698	IfStatement	if ( stream )		6314786	1					
ANR	6316699	Condition	stream	561:16:10993:10998	6314786	0	True				
ANR	6316700	Identifier	stream		6314786	0					
ANR	6316701	CompoundStatement		559:24:10951:10951	6314786	1					
ANR	6316702	IfStatement	"if ( ! strcmp ( arg , ""status"" ) )"		6314786	0					
ANR	6316703	Condition	"! strcmp ( arg , ""status"" )"	563:20:11024:11045	6314786	0	True				
ANR	6316704	UnaryOperationExpression	"! strcmp ( arg , ""status"" )"		6314786	0					
ANR	6316705	UnaryOperator	!		6314786	0					
ANR	6316706	CallExpression	"strcmp ( arg , ""status"" )"		6314786	1					
ANR	6316707	Callee	strcmp		6314786	0					
ANR	6316708	Identifier	strcmp		6314786	0					
ANR	6316709	ArgumentList	arg		6314786	1					
ANR	6316710	Argument	arg		6314786	0					
ANR	6316711	Identifier	arg		6314786	0					
ANR	6316712	Argument	"""status"""		6314786	1					
ANR	6316713	PrimaryExpression	"""status"""		6314786	0					
ANR	6316714	CompoundStatement		561:44:10998:10998	6314786	1					
ANR	6316715	ExpressionStatement	stream -> stream_type = STREAM_TYPE_STATUS	565:20:11071:11111	6314786	0	True				
ANR	6316716	AssignmentExpression	stream -> stream_type = STREAM_TYPE_STATUS		6314786	0		=			
ANR	6316717	PtrMemberAccess	stream -> stream_type		6314786	0					
ANR	6316718	Identifier	stream		6314786	0					
ANR	6316719	Identifier	stream_type		6314786	1					
ANR	6316720	Identifier	STREAM_TYPE_STATUS		6314786	1					
ANR	6316721	ExpressionStatement	stream -> fmt = NULL	567:20:11134:11152	6314786	1	True				
ANR	6316722	AssignmentExpression	stream -> fmt = NULL		6314786	0		=			
ANR	6316723	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316724	Identifier	stream		6314786	0					
ANR	6316725	Identifier	fmt		6314786	1					
ANR	6316726	Identifier	NULL		6314786	1					
ANR	6316727	ElseStatement	else		6314786	0					
ANR	6316728	CompoundStatement		567:23:11128:11128	6314786	0					
ANR	6316729	ExpressionStatement	stream -> stream_type = STREAM_TYPE_LIVE	571:20:11201:11239	6314786	0	True				
ANR	6316730	AssignmentExpression	stream -> stream_type = STREAM_TYPE_LIVE		6314786	0		=			
ANR	6316731	PtrMemberAccess	stream -> stream_type		6314786	0					
ANR	6316732	Identifier	stream		6314786	0					
ANR	6316733	Identifier	stream_type		6314786	1					
ANR	6316734	Identifier	STREAM_TYPE_LIVE		6314786	1					
ANR	6316735	IfStatement	"if ( ! strcmp ( arg , ""jpeg"" ) )"		6314786	1					
ANR	6316736	Condition	"! strcmp ( arg , ""jpeg"" )"	575:24:11344:11363	6314786	0	True				
ANR	6316737	UnaryOperationExpression	"! strcmp ( arg , ""jpeg"" )"		6314786	0					
ANR	6316738	UnaryOperator	!		6314786	0					
ANR	6316739	CallExpression	"strcmp ( arg , ""jpeg"" )"		6314786	1					
ANR	6316740	Callee	strcmp		6314786	0					
ANR	6316741	Identifier	strcmp		6314786	0					
ANR	6316742	ArgumentList	arg		6314786	1					
ANR	6316743	Argument	arg		6314786	0					
ANR	6316744	Identifier	arg		6314786	0					
ANR	6316745	Argument	"""jpeg"""		6314786	1					
ANR	6316746	PrimaryExpression	"""jpeg"""		6314786	0					
ANR	6316747	ExpressionStatement	"strcpy ( arg , ""mjpeg"" )"	577:24:11391:11411	6314786	1	True				
ANR	6316748	CallExpression	"strcpy ( arg , ""mjpeg"" )"		6314786	0					
ANR	6316749	Callee	strcpy		6314786	0					
ANR	6316750	Identifier	strcpy		6314786	0					
ANR	6316751	ArgumentList	arg		6314786	1					
ANR	6316752	Argument	arg		6314786	0					
ANR	6316753	Identifier	arg		6314786	0					
ANR	6316754	Argument	"""mjpeg"""		6314786	1					
ANR	6316755	PrimaryExpression	"""mjpeg"""		6314786	0					
ANR	6316756	ExpressionStatement	"stream -> fmt = guess_stream_format ( arg , NULL , NULL )"	579:20:11434:11484	6314786	2	True				
ANR	6316757	AssignmentExpression	"stream -> fmt = guess_stream_format ( arg , NULL , NULL )"		6314786	0		=			
ANR	6316758	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316759	Identifier	stream		6314786	0					
ANR	6316760	Identifier	fmt		6314786	1					
ANR	6316761	CallExpression	"guess_stream_format ( arg , NULL , NULL )"		6314786	1					
ANR	6316762	Callee	guess_stream_format		6314786	0					
ANR	6316763	Identifier	guess_stream_format		6314786	0					
ANR	6316764	ArgumentList	arg		6314786	1					
ANR	6316765	Argument	arg		6314786	0					
ANR	6316766	Identifier	arg		6314786	0					
ANR	6316767	Argument	NULL		6314786	1					
ANR	6316768	Identifier	NULL		6314786	0					
ANR	6316769	Argument	NULL		6314786	2					
ANR	6316770	Identifier	NULL		6314786	0					
ANR	6316771	IfStatement	if ( ! stream -> fmt )		6314786	3					
ANR	6316772	Condition	! stream -> fmt	581:24:11511:11522	6314786	0	True				
ANR	6316773	UnaryOperationExpression	! stream -> fmt		6314786	0					
ANR	6316774	UnaryOperator	!		6314786	0					
ANR	6316775	PtrMemberAccess	stream -> fmt		6314786	1					
ANR	6316776	Identifier	stream		6314786	0					
ANR	6316777	Identifier	fmt		6314786	1					
ANR	6316778	CompoundStatement		579:38:11475:11475	6314786	1					
ANR	6316779	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Unknown Format: %s\\n"" , filename , line_num , arg )"	583:24:11552:11656	6314786	0	True				
ANR	6316780	CallExpression	"fprintf ( stderr , ""%s:%d: Unknown Format: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6316781	Callee	fprintf		6314786	0					
ANR	6316782	Identifier	fprintf		6314786	0					
ANR	6316783	ArgumentList	stderr		6314786	1					
ANR	6316784	Argument	stderr		6314786	0					
ANR	6316785	Identifier	stderr		6314786	0					
ANR	6316786	Argument	"""%s:%d: Unknown Format: %s\\n"""		6314786	1					
ANR	6316787	PrimaryExpression	"""%s:%d: Unknown Format: %s\\n"""		6314786	0					
ANR	6316788	Argument	filename		6314786	2					
ANR	6316789	Identifier	filename		6314786	0					
ANR	6316790	Argument	line_num		6314786	3					
ANR	6316791	Identifier	line_num		6314786	0					
ANR	6316792	Argument	arg		6314786	4					
ANR	6316793	Identifier	arg		6314786	0					
ANR	6316794	ExpressionStatement	errors ++	587:24:11683:11691	6314786	1	True				
ANR	6316795	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6316796	Identifier	errors		6314786	0					
ANR	6316797	IncDec	++		6314786	1					
ANR	6316798	IfStatement	if ( stream -> fmt )		6314786	1					
ANR	6316799	Condition	stream -> fmt	593:20:11756:11766	6314786	0	True				
ANR	6316800	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316801	Identifier	stream		6314786	0					
ANR	6316802	Identifier	fmt		6314786	1					
ANR	6316803	CompoundStatement		591:33:11719:11719	6314786	1					
ANR	6316804	ExpressionStatement	audio_id = stream -> fmt -> audio_codec	595:20:11792:11827	6314786	0	True				
ANR	6316805	AssignmentExpression	audio_id = stream -> fmt -> audio_codec		6314786	0		=			
ANR	6316806	Identifier	audio_id		6314786	0					
ANR	6316807	PtrMemberAccess	stream -> fmt -> audio_codec		6314786	1					
ANR	6316808	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316809	Identifier	stream		6314786	0					
ANR	6316810	Identifier	fmt		6314786	1					
ANR	6316811	Identifier	audio_codec		6314786	1					
ANR	6316812	ExpressionStatement	video_id = stream -> fmt -> video_codec	597:20:11850:11885	6314786	1	True				
ANR	6316813	AssignmentExpression	video_id = stream -> fmt -> video_codec		6314786	0		=			
ANR	6316814	Identifier	video_id		6314786	0					
ANR	6316815	PtrMemberAccess	stream -> fmt -> video_codec		6314786	1					
ANR	6316816	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6316817	Identifier	stream		6314786	0					
ANR	6316818	Identifier	fmt		6314786	1					
ANR	6316819	Identifier	video_codec		6314786	1					
ANR	6316820	ElseStatement	else		6314786	0					
ANR	6316821	IfStatement	"if ( ! strcasecmp ( cmd , ""InputFormat"" ) )"		6314786	0					
ANR	6316822	Condition	"! strcasecmp ( cmd , ""InputFormat"" )"	603:19:11941:11971	6314786	0	True				
ANR	6316823	UnaryOperationExpression	"! strcasecmp ( cmd , ""InputFormat"" )"		6314786	0					
ANR	6316824	UnaryOperator	!		6314786	0					
ANR	6316825	CallExpression	"strcasecmp ( cmd , ""InputFormat"" )"		6314786	1					
ANR	6316826	Callee	strcasecmp		6314786	0					
ANR	6316827	Identifier	strcasecmp		6314786	0					
ANR	6316828	ArgumentList	cmd		6314786	1					
ANR	6316829	Argument	cmd		6314786	0					
ANR	6316830	Identifier	cmd		6314786	0					
ANR	6316831	Argument	"""InputFormat"""		6314786	1					
ANR	6316832	PrimaryExpression	"""InputFormat"""		6314786	0					
ANR	6316833	CompoundStatement		601:52:11924:11924	6314786	1					
ANR	6316834	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	605:12:11989:12018	6314786	0	True				
ANR	6316835	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6316836	Callee	get_arg		6314786	0					
ANR	6316837	Identifier	get_arg		6314786	0					
ANR	6316838	ArgumentList	arg		6314786	1					
ANR	6316839	Argument	arg		6314786	0					
ANR	6316840	Identifier	arg		6314786	0					
ANR	6316841	Argument	sizeof ( arg )		6314786	1					
ANR	6316842	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6316843	Sizeof	sizeof		6314786	0					
ANR	6316844	SizeofOperand	arg		6314786	1					
ANR	6316845	Argument	& p		6314786	2					
ANR	6316846	UnaryOperationExpression	& p		6314786	0					
ANR	6316847	UnaryOperator	&		6314786	0					
ANR	6316848	Identifier	p		6314786	1					
ANR	6316849	IfStatement	if ( stream )		6314786	1					
ANR	6316850	Condition	stream	607:16:12037:12042	6314786	0	True				
ANR	6316851	Identifier	stream		6314786	0					
ANR	6316852	CompoundStatement		605:24:11995:11995	6314786	1					
ANR	6316853	ExpressionStatement	stream -> ifmt = av_find_input_format ( arg )	609:16:12064:12104	6314786	0	True				
ANR	6316854	AssignmentExpression	stream -> ifmt = av_find_input_format ( arg )		6314786	0		=			
ANR	6316855	PtrMemberAccess	stream -> ifmt		6314786	0					
ANR	6316856	Identifier	stream		6314786	0					
ANR	6316857	Identifier	ifmt		6314786	1					
ANR	6316858	CallExpression	av_find_input_format ( arg )		6314786	1					
ANR	6316859	Callee	av_find_input_format		6314786	0					
ANR	6316860	Identifier	av_find_input_format		6314786	0					
ANR	6316861	ArgumentList	arg		6314786	1					
ANR	6316862	Argument	arg		6314786	0					
ANR	6316863	Identifier	arg		6314786	0					
ANR	6316864	IfStatement	if ( ! stream -> ifmt )		6314786	1					
ANR	6316865	Condition	! stream -> ifmt	611:20:12127:12139	6314786	0	True				
ANR	6316866	UnaryOperationExpression	! stream -> ifmt		6314786	0					
ANR	6316867	UnaryOperator	!		6314786	0					
ANR	6316868	PtrMemberAccess	stream -> ifmt		6314786	1					
ANR	6316869	Identifier	stream		6314786	0					
ANR	6316870	Identifier	ifmt		6314786	1					
ANR	6316871	CompoundStatement		609:35:12092:12092	6314786	1					
ANR	6316872	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Unknown input format: %s\\n"" , filename , line_num , arg )"	613:20:12165:12271	6314786	0	True				
ANR	6316873	CallExpression	"fprintf ( stderr , ""%s:%d: Unknown input format: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6316874	Callee	fprintf		6314786	0					
ANR	6316875	Identifier	fprintf		6314786	0					
ANR	6316876	ArgumentList	stderr		6314786	1					
ANR	6316877	Argument	stderr		6314786	0					
ANR	6316878	Identifier	stderr		6314786	0					
ANR	6316879	Argument	"""%s:%d: Unknown input format: %s\\n"""		6314786	1					
ANR	6316880	PrimaryExpression	"""%s:%d: Unknown input format: %s\\n"""		6314786	0					
ANR	6316881	Argument	filename		6314786	2					
ANR	6316882	Identifier	filename		6314786	0					
ANR	6316883	Argument	line_num		6314786	3					
ANR	6316884	Identifier	line_num		6314786	0					
ANR	6316885	Argument	arg		6314786	4					
ANR	6316886	Identifier	arg		6314786	0					
ANR	6316887	ElseStatement	else		6314786	0					
ANR	6316888	IfStatement	"if ( ! strcasecmp ( cmd , ""FaviconURL"" ) )"		6314786	0					
ANR	6316889	Condition	"! strcasecmp ( cmd , ""FaviconURL"" )"	621:19:12327:12356	6314786	0	True				
ANR	6316890	UnaryOperationExpression	"! strcasecmp ( cmd , ""FaviconURL"" )"		6314786	0					
ANR	6316891	UnaryOperator	!		6314786	0					
ANR	6316892	CallExpression	"strcasecmp ( cmd , ""FaviconURL"" )"		6314786	1					
ANR	6316893	Callee	strcasecmp		6314786	0					
ANR	6316894	Identifier	strcasecmp		6314786	0					
ANR	6316895	ArgumentList	cmd		6314786	1					
ANR	6316896	Argument	cmd		6314786	0					
ANR	6316897	Identifier	cmd		6314786	0					
ANR	6316898	Argument	"""FaviconURL"""		6314786	1					
ANR	6316899	PrimaryExpression	"""FaviconURL"""		6314786	0					
ANR	6316900	CompoundStatement		619:51:12309:12309	6314786	1					
ANR	6316901	IfStatement	if ( stream && stream -> stream_type == STREAM_TYPE_STATUS )		6314786	0					
ANR	6316902	Condition	stream && stream -> stream_type == STREAM_TYPE_STATUS	623:16:12378:12428	6314786	0	True				
ANR	6316903	AndExpression	stream && stream -> stream_type == STREAM_TYPE_STATUS		6314786	0		&&			
ANR	6316904	Identifier	stream		6314786	0					
ANR	6316905	EqualityExpression	stream -> stream_type == STREAM_TYPE_STATUS		6314786	1		==			
ANR	6316906	PtrMemberAccess	stream -> stream_type		6314786	0					
ANR	6316907	Identifier	stream		6314786	0					
ANR	6316908	Identifier	stream_type		6314786	1					
ANR	6316909	Identifier	STREAM_TYPE_STATUS		6314786	1					
ANR	6316910	CompoundStatement		621:69:12381:12381	6314786	1					
ANR	6316911	ExpressionStatement	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"	625:16:12450:12515	6314786	0	True				
ANR	6316912	CallExpression	"get_arg ( stream -> feed_filename , sizeof ( stream -> feed_filename ) , & p )"		6314786	0					
ANR	6316913	Callee	get_arg		6314786	0					
ANR	6316914	Identifier	get_arg		6314786	0					
ANR	6316915	ArgumentList	stream -> feed_filename		6314786	1					
ANR	6316916	Argument	stream -> feed_filename		6314786	0					
ANR	6316917	PtrMemberAccess	stream -> feed_filename		6314786	0					
ANR	6316918	Identifier	stream		6314786	0					
ANR	6316919	Identifier	feed_filename		6314786	1					
ANR	6316920	Argument	sizeof ( stream -> feed_filename )		6314786	1					
ANR	6316921	SizeofExpression	sizeof ( stream -> feed_filename )		6314786	0					
ANR	6316922	Sizeof	sizeof		6314786	0					
ANR	6316923	PtrMemberAccess	stream -> feed_filename		6314786	1					
ANR	6316924	Identifier	stream		6314786	0					
ANR	6316925	Identifier	feed_filename		6314786	1					
ANR	6316926	Argument	& p		6314786	2					
ANR	6316927	UnaryOperationExpression	& p		6314786	0					
ANR	6316928	UnaryOperator	&		6314786	0					
ANR	6316929	Identifier	p		6314786	1					
ANR	6316930	ElseStatement	else		6314786	0					
ANR	6316931	CompoundStatement		625:19:12487:12487	6314786	0					
ANR	6316932	ExpressionStatement	"fprintf ( stderr , ""%s:%d: FaviconURL only permitted for status streams\\n"" , filename , line_num )"	629:16:12556:12677	6314786	0	True				
ANR	6316933	CallExpression	"fprintf ( stderr , ""%s:%d: FaviconURL only permitted for status streams\\n"" , filename , line_num )"		6314786	0					
ANR	6316934	Callee	fprintf		6314786	0					
ANR	6316935	Identifier	fprintf		6314786	0					
ANR	6316936	ArgumentList	stderr		6314786	1					
ANR	6316937	Argument	stderr		6314786	0					
ANR	6316938	Identifier	stderr		6314786	0					
ANR	6316939	Argument	"""%s:%d: FaviconURL only permitted for status streams\\n"""		6314786	1					
ANR	6316940	PrimaryExpression	"""%s:%d: FaviconURL only permitted for status streams\\n"""		6314786	0					
ANR	6316941	Argument	filename		6314786	2					
ANR	6316942	Identifier	filename		6314786	0					
ANR	6316943	Argument	line_num		6314786	3					
ANR	6316944	Identifier	line_num		6314786	0					
ANR	6316945	ExpressionStatement	errors ++	633:16:12696:12704	6314786	1	True				
ANR	6316946	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6316947	Identifier	errors		6314786	0					
ANR	6316948	IncDec	++		6314786	1					
ANR	6316949	ElseStatement	else		6314786	0					
ANR	6316950	IfStatement	"if ( ! strcasecmp ( cmd , ""Author"" ) )"		6314786	0					
ANR	6316951	Condition	"! strcasecmp ( cmd , ""Author"" )"	637:19:12741:12766	6314786	0	True				
ANR	6316952	UnaryOperationExpression	"! strcasecmp ( cmd , ""Author"" )"		6314786	0					
ANR	6316953	UnaryOperator	!		6314786	0					
ANR	6316954	CallExpression	"strcasecmp ( cmd , ""Author"" )"		6314786	1					
ANR	6316955	Callee	strcasecmp		6314786	0					
ANR	6316956	Identifier	strcasecmp		6314786	0					
ANR	6316957	ArgumentList	cmd		6314786	1					
ANR	6316958	Argument	cmd		6314786	0					
ANR	6316959	Identifier	cmd		6314786	0					
ANR	6316960	Argument	"""Author"""		6314786	1					
ANR	6316961	PrimaryExpression	"""Author"""		6314786	0					
ANR	6316962	CompoundStatement		635:47:12719:12719	6314786	1					
ANR	6316963	IfStatement	if ( stream )		6314786	0					
ANR	6316964	Condition	stream	639:16:12788:12793	6314786	0	True				
ANR	6316965	Identifier	stream		6314786	0					
ANR	6316966	ExpressionStatement	"get_arg ( stream -> author , sizeof ( stream -> author ) , & p )"	641:16:12813:12864	6314786	1	True				
ANR	6316967	CallExpression	"get_arg ( stream -> author , sizeof ( stream -> author ) , & p )"		6314786	0					
ANR	6316968	Callee	get_arg		6314786	0					
ANR	6316969	Identifier	get_arg		6314786	0					
ANR	6316970	ArgumentList	stream -> author		6314786	1					
ANR	6316971	Argument	stream -> author		6314786	0					
ANR	6316972	PtrMemberAccess	stream -> author		6314786	0					
ANR	6316973	Identifier	stream		6314786	0					
ANR	6316974	Identifier	author		6314786	1					
ANR	6316975	Argument	sizeof ( stream -> author )		6314786	1					
ANR	6316976	SizeofExpression	sizeof ( stream -> author )		6314786	0					
ANR	6316977	Sizeof	sizeof		6314786	0					
ANR	6316978	PtrMemberAccess	stream -> author		6314786	1					
ANR	6316979	Identifier	stream		6314786	0					
ANR	6316980	Identifier	author		6314786	1					
ANR	6316981	Argument	& p		6314786	2					
ANR	6316982	UnaryOperationExpression	& p		6314786	0					
ANR	6316983	UnaryOperator	&		6314786	0					
ANR	6316984	Identifier	p		6314786	1					
ANR	6316985	ElseStatement	else		6314786	0					
ANR	6316986	IfStatement	"if ( ! strcasecmp ( cmd , ""Comment"" ) )"		6314786	0					
ANR	6316987	Condition	"! strcasecmp ( cmd , ""Comment"" )"	643:19:12886:12912	6314786	0	True				
ANR	6316988	UnaryOperationExpression	"! strcasecmp ( cmd , ""Comment"" )"		6314786	0					
ANR	6316989	UnaryOperator	!		6314786	0					
ANR	6316990	CallExpression	"strcasecmp ( cmd , ""Comment"" )"		6314786	1					
ANR	6316991	Callee	strcasecmp		6314786	0					
ANR	6316992	Identifier	strcasecmp		6314786	0					
ANR	6316993	ArgumentList	cmd		6314786	1					
ANR	6316994	Argument	cmd		6314786	0					
ANR	6316995	Identifier	cmd		6314786	0					
ANR	6316996	Argument	"""Comment"""		6314786	1					
ANR	6316997	PrimaryExpression	"""Comment"""		6314786	0					
ANR	6316998	CompoundStatement		641:48:12865:12865	6314786	1					
ANR	6316999	IfStatement	if ( stream )		6314786	0					
ANR	6317000	Condition	stream	645:16:12934:12939	6314786	0	True				
ANR	6317001	Identifier	stream		6314786	0					
ANR	6317002	ExpressionStatement	"get_arg ( stream -> comment , sizeof ( stream -> comment ) , & p )"	647:16:12959:13012	6314786	1	True				
ANR	6317003	CallExpression	"get_arg ( stream -> comment , sizeof ( stream -> comment ) , & p )"		6314786	0					
ANR	6317004	Callee	get_arg		6314786	0					
ANR	6317005	Identifier	get_arg		6314786	0					
ANR	6317006	ArgumentList	stream -> comment		6314786	1					
ANR	6317007	Argument	stream -> comment		6314786	0					
ANR	6317008	PtrMemberAccess	stream -> comment		6314786	0					
ANR	6317009	Identifier	stream		6314786	0					
ANR	6317010	Identifier	comment		6314786	1					
ANR	6317011	Argument	sizeof ( stream -> comment )		6314786	1					
ANR	6317012	SizeofExpression	sizeof ( stream -> comment )		6314786	0					
ANR	6317013	Sizeof	sizeof		6314786	0					
ANR	6317014	PtrMemberAccess	stream -> comment		6314786	1					
ANR	6317015	Identifier	stream		6314786	0					
ANR	6317016	Identifier	comment		6314786	1					
ANR	6317017	Argument	& p		6314786	2					
ANR	6317018	UnaryOperationExpression	& p		6314786	0					
ANR	6317019	UnaryOperator	&		6314786	0					
ANR	6317020	Identifier	p		6314786	1					
ANR	6317021	ElseStatement	else		6314786	0					
ANR	6317022	IfStatement	"if ( ! strcasecmp ( cmd , ""Copyright"" ) )"		6314786	0					
ANR	6317023	Condition	"! strcasecmp ( cmd , ""Copyright"" )"	649:19:13034:13062	6314786	0	True				
ANR	6317024	UnaryOperationExpression	"! strcasecmp ( cmd , ""Copyright"" )"		6314786	0					
ANR	6317025	UnaryOperator	!		6314786	0					
ANR	6317026	CallExpression	"strcasecmp ( cmd , ""Copyright"" )"		6314786	1					
ANR	6317027	Callee	strcasecmp		6314786	0					
ANR	6317028	Identifier	strcasecmp		6314786	0					
ANR	6317029	ArgumentList	cmd		6314786	1					
ANR	6317030	Argument	cmd		6314786	0					
ANR	6317031	Identifier	cmd		6314786	0					
ANR	6317032	Argument	"""Copyright"""		6314786	1					
ANR	6317033	PrimaryExpression	"""Copyright"""		6314786	0					
ANR	6317034	CompoundStatement		647:50:13015:13015	6314786	1					
ANR	6317035	IfStatement	if ( stream )		6314786	0					
ANR	6317036	Condition	stream	651:16:13084:13089	6314786	0	True				
ANR	6317037	Identifier	stream		6314786	0					
ANR	6317038	ExpressionStatement	"get_arg ( stream -> copyright , sizeof ( stream -> copyright ) , & p )"	653:16:13109:13166	6314786	1	True				
ANR	6317039	CallExpression	"get_arg ( stream -> copyright , sizeof ( stream -> copyright ) , & p )"		6314786	0					
ANR	6317040	Callee	get_arg		6314786	0					
ANR	6317041	Identifier	get_arg		6314786	0					
ANR	6317042	ArgumentList	stream -> copyright		6314786	1					
ANR	6317043	Argument	stream -> copyright		6314786	0					
ANR	6317044	PtrMemberAccess	stream -> copyright		6314786	0					
ANR	6317045	Identifier	stream		6314786	0					
ANR	6317046	Identifier	copyright		6314786	1					
ANR	6317047	Argument	sizeof ( stream -> copyright )		6314786	1					
ANR	6317048	SizeofExpression	sizeof ( stream -> copyright )		6314786	0					
ANR	6317049	Sizeof	sizeof		6314786	0					
ANR	6317050	PtrMemberAccess	stream -> copyright		6314786	1					
ANR	6317051	Identifier	stream		6314786	0					
ANR	6317052	Identifier	copyright		6314786	1					
ANR	6317053	Argument	& p		6314786	2					
ANR	6317054	UnaryOperationExpression	& p		6314786	0					
ANR	6317055	UnaryOperator	&		6314786	0					
ANR	6317056	Identifier	p		6314786	1					
ANR	6317057	ElseStatement	else		6314786	0					
ANR	6317058	IfStatement	"if ( ! strcasecmp ( cmd , ""Title"" ) )"		6314786	0					
ANR	6317059	Condition	"! strcasecmp ( cmd , ""Title"" )"	655:19:13188:13212	6314786	0	True				
ANR	6317060	UnaryOperationExpression	"! strcasecmp ( cmd , ""Title"" )"		6314786	0					
ANR	6317061	UnaryOperator	!		6314786	0					
ANR	6317062	CallExpression	"strcasecmp ( cmd , ""Title"" )"		6314786	1					
ANR	6317063	Callee	strcasecmp		6314786	0					
ANR	6317064	Identifier	strcasecmp		6314786	0					
ANR	6317065	ArgumentList	cmd		6314786	1					
ANR	6317066	Argument	cmd		6314786	0					
ANR	6317067	Identifier	cmd		6314786	0					
ANR	6317068	Argument	"""Title"""		6314786	1					
ANR	6317069	PrimaryExpression	"""Title"""		6314786	0					
ANR	6317070	CompoundStatement		653:46:13165:13165	6314786	1					
ANR	6317071	IfStatement	if ( stream )		6314786	0					
ANR	6317072	Condition	stream	657:16:13234:13239	6314786	0	True				
ANR	6317073	Identifier	stream		6314786	0					
ANR	6317074	ExpressionStatement	"get_arg ( stream -> title , sizeof ( stream -> title ) , & p )"	659:16:13259:13308	6314786	1	True				
ANR	6317075	CallExpression	"get_arg ( stream -> title , sizeof ( stream -> title ) , & p )"		6314786	0					
ANR	6317076	Callee	get_arg		6314786	0					
ANR	6317077	Identifier	get_arg		6314786	0					
ANR	6317078	ArgumentList	stream -> title		6314786	1					
ANR	6317079	Argument	stream -> title		6314786	0					
ANR	6317080	PtrMemberAccess	stream -> title		6314786	0					
ANR	6317081	Identifier	stream		6314786	0					
ANR	6317082	Identifier	title		6314786	1					
ANR	6317083	Argument	sizeof ( stream -> title )		6314786	1					
ANR	6317084	SizeofExpression	sizeof ( stream -> title )		6314786	0					
ANR	6317085	Sizeof	sizeof		6314786	0					
ANR	6317086	PtrMemberAccess	stream -> title		6314786	1					
ANR	6317087	Identifier	stream		6314786	0					
ANR	6317088	Identifier	title		6314786	1					
ANR	6317089	Argument	& p		6314786	2					
ANR	6317090	UnaryOperationExpression	& p		6314786	0					
ANR	6317091	UnaryOperator	&		6314786	0					
ANR	6317092	Identifier	p		6314786	1					
ANR	6317093	ElseStatement	else		6314786	0					
ANR	6317094	IfStatement	"if ( ! strcasecmp ( cmd , ""Preroll"" ) )"		6314786	0					
ANR	6317095	Condition	"! strcasecmp ( cmd , ""Preroll"" )"	661:19:13330:13356	6314786	0	True				
ANR	6317096	UnaryOperationExpression	"! strcasecmp ( cmd , ""Preroll"" )"		6314786	0					
ANR	6317097	UnaryOperator	!		6314786	0					
ANR	6317098	CallExpression	"strcasecmp ( cmd , ""Preroll"" )"		6314786	1					
ANR	6317099	Callee	strcasecmp		6314786	0					
ANR	6317100	Identifier	strcasecmp		6314786	0					
ANR	6317101	ArgumentList	cmd		6314786	1					
ANR	6317102	Argument	cmd		6314786	0					
ANR	6317103	Identifier	cmd		6314786	0					
ANR	6317104	Argument	"""Preroll"""		6314786	1					
ANR	6317105	PrimaryExpression	"""Preroll"""		6314786	0					
ANR	6317106	CompoundStatement		659:48:13309:13309	6314786	1					
ANR	6317107	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	663:12:13374:13403	6314786	0	True				
ANR	6317108	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317109	Callee	get_arg		6314786	0					
ANR	6317110	Identifier	get_arg		6314786	0					
ANR	6317111	ArgumentList	arg		6314786	1					
ANR	6317112	Argument	arg		6314786	0					
ANR	6317113	Identifier	arg		6314786	0					
ANR	6317114	Argument	sizeof ( arg )		6314786	1					
ANR	6317115	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317116	Sizeof	sizeof		6314786	0					
ANR	6317117	SizeofOperand	arg		6314786	1					
ANR	6317118	Argument	& p		6314786	2					
ANR	6317119	UnaryOperationExpression	& p		6314786	0					
ANR	6317120	UnaryOperator	&		6314786	0					
ANR	6317121	Identifier	p		6314786	1					
ANR	6317122	IfStatement	if ( stream )		6314786	1					
ANR	6317123	Condition	stream	665:16:13422:13427	6314786	0	True				
ANR	6317124	Identifier	stream		6314786	0					
ANR	6317125	ExpressionStatement	stream -> prebuffer = atof ( arg ) * 1000	667:16:13447:13483	6314786	1	True				
ANR	6317126	AssignmentExpression	stream -> prebuffer = atof ( arg ) * 1000		6314786	0		=			
ANR	6317127	PtrMemberAccess	stream -> prebuffer		6314786	0					
ANR	6317128	Identifier	stream		6314786	0					
ANR	6317129	Identifier	prebuffer		6314786	1					
ANR	6317130	MultiplicativeExpression	atof ( arg ) * 1000		6314786	1		*			
ANR	6317131	CallExpression	atof ( arg )		6314786	0					
ANR	6317132	Callee	atof		6314786	0					
ANR	6317133	Identifier	atof		6314786	0					
ANR	6317134	ArgumentList	arg		6314786	1					
ANR	6317135	Argument	arg		6314786	0					
ANR	6317136	Identifier	arg		6314786	0					
ANR	6317137	PrimaryExpression	1000		6314786	1					
ANR	6317138	ElseStatement	else		6314786	0					
ANR	6317139	IfStatement	"if ( ! strcasecmp ( cmd , ""StartSendOnKey"" ) )"		6314786	0					
ANR	6317140	Condition	"! strcasecmp ( cmd , ""StartSendOnKey"" )"	669:19:13505:13538	6314786	0	True				
ANR	6317141	UnaryOperationExpression	"! strcasecmp ( cmd , ""StartSendOnKey"" )"		6314786	0					
ANR	6317142	UnaryOperator	!		6314786	0					
ANR	6317143	CallExpression	"strcasecmp ( cmd , ""StartSendOnKey"" )"		6314786	1					
ANR	6317144	Callee	strcasecmp		6314786	0					
ANR	6317145	Identifier	strcasecmp		6314786	0					
ANR	6317146	ArgumentList	cmd		6314786	1					
ANR	6317147	Argument	cmd		6314786	0					
ANR	6317148	Identifier	cmd		6314786	0					
ANR	6317149	Argument	"""StartSendOnKey"""		6314786	1					
ANR	6317150	PrimaryExpression	"""StartSendOnKey"""		6314786	0					
ANR	6317151	CompoundStatement		667:55:13491:13491	6314786	1					
ANR	6317152	IfStatement	if ( stream )		6314786	0					
ANR	6317153	Condition	stream	671:16:13560:13565	6314786	0	True				
ANR	6317154	Identifier	stream		6314786	0					
ANR	6317155	ExpressionStatement	stream -> send_on_key = 1	673:16:13585:13608	6314786	1	True				
ANR	6317156	AssignmentExpression	stream -> send_on_key = 1		6314786	0		=			
ANR	6317157	PtrMemberAccess	stream -> send_on_key		6314786	0					
ANR	6317158	Identifier	stream		6314786	0					
ANR	6317159	Identifier	send_on_key		6314786	1					
ANR	6317160	PrimaryExpression	1		6314786	1					
ANR	6317161	ElseStatement	else		6314786	0					
ANR	6317162	IfStatement	"if ( ! strcasecmp ( cmd , ""AudioCodec"" ) )"		6314786	0					
ANR	6317163	Condition	"! strcasecmp ( cmd , ""AudioCodec"" )"	675:19:13630:13659	6314786	0	True				
ANR	6317164	UnaryOperationExpression	"! strcasecmp ( cmd , ""AudioCodec"" )"		6314786	0					
ANR	6317165	UnaryOperator	!		6314786	0					
ANR	6317166	CallExpression	"strcasecmp ( cmd , ""AudioCodec"" )"		6314786	1					
ANR	6317167	Callee	strcasecmp		6314786	0					
ANR	6317168	Identifier	strcasecmp		6314786	0					
ANR	6317169	ArgumentList	cmd		6314786	1					
ANR	6317170	Argument	cmd		6314786	0					
ANR	6317171	Identifier	cmd		6314786	0					
ANR	6317172	Argument	"""AudioCodec"""		6314786	1					
ANR	6317173	PrimaryExpression	"""AudioCodec"""		6314786	0					
ANR	6317174	CompoundStatement		673:51:13612:13612	6314786	1					
ANR	6317175	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	677:12:13677:13706	6314786	0	True				
ANR	6317176	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317177	Callee	get_arg		6314786	0					
ANR	6317178	Identifier	get_arg		6314786	0					
ANR	6317179	ArgumentList	arg		6314786	1					
ANR	6317180	Argument	arg		6314786	0					
ANR	6317181	Identifier	arg		6314786	0					
ANR	6317182	Argument	sizeof ( arg )		6314786	1					
ANR	6317183	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317184	Sizeof	sizeof		6314786	0					
ANR	6317185	SizeofOperand	arg		6314786	1					
ANR	6317186	Argument	& p		6314786	2					
ANR	6317187	UnaryOperationExpression	& p		6314786	0					
ANR	6317188	UnaryOperator	&		6314786	0					
ANR	6317189	Identifier	p		6314786	1					
ANR	6317190	ExpressionStatement	audio_id = opt_audio_codec ( arg )	679:12:13721:13752	6314786	1	True				
ANR	6317191	AssignmentExpression	audio_id = opt_audio_codec ( arg )		6314786	0		=			
ANR	6317192	Identifier	audio_id		6314786	0					
ANR	6317193	CallExpression	opt_audio_codec ( arg )		6314786	1					
ANR	6317194	Callee	opt_audio_codec		6314786	0					
ANR	6317195	Identifier	opt_audio_codec		6314786	0					
ANR	6317196	ArgumentList	arg		6314786	1					
ANR	6317197	Argument	arg		6314786	0					
ANR	6317198	Identifier	arg		6314786	0					
ANR	6317199	IfStatement	if ( audio_id == CODEC_ID_NONE )		6314786	2					
ANR	6317200	Condition	audio_id == CODEC_ID_NONE	681:16:13771:13795	6314786	0	True				
ANR	6317201	EqualityExpression	audio_id == CODEC_ID_NONE		6314786	0		==			
ANR	6317202	Identifier	audio_id		6314786	0					
ANR	6317203	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6317204	CompoundStatement		679:43:13748:13748	6314786	1					
ANR	6317205	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Unknown AudioCodec: %s\\n"" , filename , line_num , arg )"	683:16:13817:13917	6314786	0	True				
ANR	6317206	CallExpression	"fprintf ( stderr , ""%s:%d: Unknown AudioCodec: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6317207	Callee	fprintf		6314786	0					
ANR	6317208	Identifier	fprintf		6314786	0					
ANR	6317209	ArgumentList	stderr		6314786	1					
ANR	6317210	Argument	stderr		6314786	0					
ANR	6317211	Identifier	stderr		6314786	0					
ANR	6317212	Argument	"""%s:%d: Unknown AudioCodec: %s\\n"""		6314786	1					
ANR	6317213	PrimaryExpression	"""%s:%d: Unknown AudioCodec: %s\\n"""		6314786	0					
ANR	6317214	Argument	filename		6314786	2					
ANR	6317215	Identifier	filename		6314786	0					
ANR	6317216	Argument	line_num		6314786	3					
ANR	6317217	Identifier	line_num		6314786	0					
ANR	6317218	Argument	arg		6314786	4					
ANR	6317219	Identifier	arg		6314786	0					
ANR	6317220	ExpressionStatement	errors ++	687:16:13936:13944	6314786	1	True				
ANR	6317221	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6317222	Identifier	errors		6314786	0					
ANR	6317223	IncDec	++		6314786	1					
ANR	6317224	ElseStatement	else		6314786	0					
ANR	6317225	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoCodec"" ) )"		6314786	0					
ANR	6317226	Condition	"! strcasecmp ( cmd , ""VideoCodec"" )"	691:19:13981:14010	6314786	0	True				
ANR	6317227	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoCodec"" )"		6314786	0					
ANR	6317228	UnaryOperator	!		6314786	0					
ANR	6317229	CallExpression	"strcasecmp ( cmd , ""VideoCodec"" )"		6314786	1					
ANR	6317230	Callee	strcasecmp		6314786	0					
ANR	6317231	Identifier	strcasecmp		6314786	0					
ANR	6317232	ArgumentList	cmd		6314786	1					
ANR	6317233	Argument	cmd		6314786	0					
ANR	6317234	Identifier	cmd		6314786	0					
ANR	6317235	Argument	"""VideoCodec"""		6314786	1					
ANR	6317236	PrimaryExpression	"""VideoCodec"""		6314786	0					
ANR	6317237	CompoundStatement		689:51:13963:13963	6314786	1					
ANR	6317238	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	693:12:14028:14057	6314786	0	True				
ANR	6317239	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317240	Callee	get_arg		6314786	0					
ANR	6317241	Identifier	get_arg		6314786	0					
ANR	6317242	ArgumentList	arg		6314786	1					
ANR	6317243	Argument	arg		6314786	0					
ANR	6317244	Identifier	arg		6314786	0					
ANR	6317245	Argument	sizeof ( arg )		6314786	1					
ANR	6317246	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317247	Sizeof	sizeof		6314786	0					
ANR	6317248	SizeofOperand	arg		6314786	1					
ANR	6317249	Argument	& p		6314786	2					
ANR	6317250	UnaryOperationExpression	& p		6314786	0					
ANR	6317251	UnaryOperator	&		6314786	0					
ANR	6317252	Identifier	p		6314786	1					
ANR	6317253	ExpressionStatement	video_id = opt_video_codec ( arg )	695:12:14072:14103	6314786	1	True				
ANR	6317254	AssignmentExpression	video_id = opt_video_codec ( arg )		6314786	0		=			
ANR	6317255	Identifier	video_id		6314786	0					
ANR	6317256	CallExpression	opt_video_codec ( arg )		6314786	1					
ANR	6317257	Callee	opt_video_codec		6314786	0					
ANR	6317258	Identifier	opt_video_codec		6314786	0					
ANR	6317259	ArgumentList	arg		6314786	1					
ANR	6317260	Argument	arg		6314786	0					
ANR	6317261	Identifier	arg		6314786	0					
ANR	6317262	IfStatement	if ( video_id == CODEC_ID_NONE )		6314786	2					
ANR	6317263	Condition	video_id == CODEC_ID_NONE	697:16:14122:14146	6314786	0	True				
ANR	6317264	EqualityExpression	video_id == CODEC_ID_NONE		6314786	0		==			
ANR	6317265	Identifier	video_id		6314786	0					
ANR	6317266	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6317267	CompoundStatement		695:43:14099:14099	6314786	1					
ANR	6317268	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Unknown VideoCodec: %s\\n"" , filename , line_num , arg )"	699:16:14168:14268	6314786	0	True				
ANR	6317269	CallExpression	"fprintf ( stderr , ""%s:%d: Unknown VideoCodec: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6317270	Callee	fprintf		6314786	0					
ANR	6317271	Identifier	fprintf		6314786	0					
ANR	6317272	ArgumentList	stderr		6314786	1					
ANR	6317273	Argument	stderr		6314786	0					
ANR	6317274	Identifier	stderr		6314786	0					
ANR	6317275	Argument	"""%s:%d: Unknown VideoCodec: %s\\n"""		6314786	1					
ANR	6317276	PrimaryExpression	"""%s:%d: Unknown VideoCodec: %s\\n"""		6314786	0					
ANR	6317277	Argument	filename		6314786	2					
ANR	6317278	Identifier	filename		6314786	0					
ANR	6317279	Argument	line_num		6314786	3					
ANR	6317280	Identifier	line_num		6314786	0					
ANR	6317281	Argument	arg		6314786	4					
ANR	6317282	Identifier	arg		6314786	0					
ANR	6317283	ExpressionStatement	errors ++	703:16:14287:14295	6314786	1	True				
ANR	6317284	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6317285	Identifier	errors		6314786	0					
ANR	6317286	IncDec	++		6314786	1					
ANR	6317287	ElseStatement	else		6314786	0					
ANR	6317288	IfStatement	"if ( ! strcasecmp ( cmd , ""MaxTime"" ) )"		6314786	0					
ANR	6317289	Condition	"! strcasecmp ( cmd , ""MaxTime"" )"	707:19:14332:14358	6314786	0	True				
ANR	6317290	UnaryOperationExpression	"! strcasecmp ( cmd , ""MaxTime"" )"		6314786	0					
ANR	6317291	UnaryOperator	!		6314786	0					
ANR	6317292	CallExpression	"strcasecmp ( cmd , ""MaxTime"" )"		6314786	1					
ANR	6317293	Callee	strcasecmp		6314786	0					
ANR	6317294	Identifier	strcasecmp		6314786	0					
ANR	6317295	ArgumentList	cmd		6314786	1					
ANR	6317296	Argument	cmd		6314786	0					
ANR	6317297	Identifier	cmd		6314786	0					
ANR	6317298	Argument	"""MaxTime"""		6314786	1					
ANR	6317299	PrimaryExpression	"""MaxTime"""		6314786	0					
ANR	6317300	CompoundStatement		705:48:14311:14311	6314786	1					
ANR	6317301	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	709:12:14376:14405	6314786	0	True				
ANR	6317302	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317303	Callee	get_arg		6314786	0					
ANR	6317304	Identifier	get_arg		6314786	0					
ANR	6317305	ArgumentList	arg		6314786	1					
ANR	6317306	Argument	arg		6314786	0					
ANR	6317307	Identifier	arg		6314786	0					
ANR	6317308	Argument	sizeof ( arg )		6314786	1					
ANR	6317309	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317310	Sizeof	sizeof		6314786	0					
ANR	6317311	SizeofOperand	arg		6314786	1					
ANR	6317312	Argument	& p		6314786	2					
ANR	6317313	UnaryOperationExpression	& p		6314786	0					
ANR	6317314	UnaryOperator	&		6314786	0					
ANR	6317315	Identifier	p		6314786	1					
ANR	6317316	IfStatement	if ( stream )		6314786	1					
ANR	6317317	Condition	stream	711:16:14424:14429	6314786	0	True				
ANR	6317318	Identifier	stream		6314786	0					
ANR	6317319	ExpressionStatement	stream -> max_time = atof ( arg ) * 1000	713:16:14449:14484	6314786	1	True				
ANR	6317320	AssignmentExpression	stream -> max_time = atof ( arg ) * 1000		6314786	0		=			
ANR	6317321	PtrMemberAccess	stream -> max_time		6314786	0					
ANR	6317322	Identifier	stream		6314786	0					
ANR	6317323	Identifier	max_time		6314786	1					
ANR	6317324	MultiplicativeExpression	atof ( arg ) * 1000		6314786	1		*			
ANR	6317325	CallExpression	atof ( arg )		6314786	0					
ANR	6317326	Callee	atof		6314786	0					
ANR	6317327	Identifier	atof		6314786	0					
ANR	6317328	ArgumentList	arg		6314786	1					
ANR	6317329	Argument	arg		6314786	0					
ANR	6317330	Identifier	arg		6314786	0					
ANR	6317331	PrimaryExpression	1000		6314786	1					
ANR	6317332	ElseStatement	else		6314786	0					
ANR	6317333	IfStatement	"if ( ! strcasecmp ( cmd , ""AudioBitRate"" ) )"		6314786	0					
ANR	6317334	Condition	"! strcasecmp ( cmd , ""AudioBitRate"" )"	715:19:14506:14537	6314786	0	True				
ANR	6317335	UnaryOperationExpression	"! strcasecmp ( cmd , ""AudioBitRate"" )"		6314786	0					
ANR	6317336	UnaryOperator	!		6314786	0					
ANR	6317337	CallExpression	"strcasecmp ( cmd , ""AudioBitRate"" )"		6314786	1					
ANR	6317338	Callee	strcasecmp		6314786	0					
ANR	6317339	Identifier	strcasecmp		6314786	0					
ANR	6317340	ArgumentList	cmd		6314786	1					
ANR	6317341	Argument	cmd		6314786	0					
ANR	6317342	Identifier	cmd		6314786	0					
ANR	6317343	Argument	"""AudioBitRate"""		6314786	1					
ANR	6317344	PrimaryExpression	"""AudioBitRate"""		6314786	0					
ANR	6317345	CompoundStatement		713:53:14490:14490	6314786	1					
ANR	6317346	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	717:12:14555:14584	6314786	0	True				
ANR	6317347	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317348	Callee	get_arg		6314786	0					
ANR	6317349	Identifier	get_arg		6314786	0					
ANR	6317350	ArgumentList	arg		6314786	1					
ANR	6317351	Argument	arg		6314786	0					
ANR	6317352	Identifier	arg		6314786	0					
ANR	6317353	Argument	sizeof ( arg )		6314786	1					
ANR	6317354	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317355	Sizeof	sizeof		6314786	0					
ANR	6317356	SizeofOperand	arg		6314786	1					
ANR	6317357	Argument	& p		6314786	2					
ANR	6317358	UnaryOperationExpression	& p		6314786	0					
ANR	6317359	UnaryOperator	&		6314786	0					
ANR	6317360	Identifier	p		6314786	1					
ANR	6317361	IfStatement	if ( stream )		6314786	1					
ANR	6317362	Condition	stream	719:16:14603:14608	6314786	0	True				
ANR	6317363	Identifier	stream		6314786	0					
ANR	6317364	ExpressionStatement	audio_enc . bit_rate = atoi ( arg ) * 1000	721:16:14628:14665	6314786	1	True				
ANR	6317365	AssignmentExpression	audio_enc . bit_rate = atoi ( arg ) * 1000		6314786	0		=			
ANR	6317366	MemberAccess	audio_enc . bit_rate		6314786	0					
ANR	6317367	Identifier	audio_enc		6314786	0					
ANR	6317368	Identifier	bit_rate		6314786	1					
ANR	6317369	MultiplicativeExpression	atoi ( arg ) * 1000		6314786	1		*			
ANR	6317370	CallExpression	atoi ( arg )		6314786	0					
ANR	6317371	Callee	atoi		6314786	0					
ANR	6317372	Identifier	atoi		6314786	0					
ANR	6317373	ArgumentList	arg		6314786	1					
ANR	6317374	Argument	arg		6314786	0					
ANR	6317375	Identifier	arg		6314786	0					
ANR	6317376	PrimaryExpression	1000		6314786	1					
ANR	6317377	ElseStatement	else		6314786	0					
ANR	6317378	IfStatement	"if ( ! strcasecmp ( cmd , ""AudioChannels"" ) )"		6314786	0					
ANR	6317379	Condition	"! strcasecmp ( cmd , ""AudioChannels"" )"	723:19:14687:14719	6314786	0	True				
ANR	6317380	UnaryOperationExpression	"! strcasecmp ( cmd , ""AudioChannels"" )"		6314786	0					
ANR	6317381	UnaryOperator	!		6314786	0					
ANR	6317382	CallExpression	"strcasecmp ( cmd , ""AudioChannels"" )"		6314786	1					
ANR	6317383	Callee	strcasecmp		6314786	0					
ANR	6317384	Identifier	strcasecmp		6314786	0					
ANR	6317385	ArgumentList	cmd		6314786	1					
ANR	6317386	Argument	cmd		6314786	0					
ANR	6317387	Identifier	cmd		6314786	0					
ANR	6317388	Argument	"""AudioChannels"""		6314786	1					
ANR	6317389	PrimaryExpression	"""AudioChannels"""		6314786	0					
ANR	6317390	CompoundStatement		721:54:14672:14672	6314786	1					
ANR	6317391	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	725:12:14737:14766	6314786	0	True				
ANR	6317392	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317393	Callee	get_arg		6314786	0					
ANR	6317394	Identifier	get_arg		6314786	0					
ANR	6317395	ArgumentList	arg		6314786	1					
ANR	6317396	Argument	arg		6314786	0					
ANR	6317397	Identifier	arg		6314786	0					
ANR	6317398	Argument	sizeof ( arg )		6314786	1					
ANR	6317399	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317400	Sizeof	sizeof		6314786	0					
ANR	6317401	SizeofOperand	arg		6314786	1					
ANR	6317402	Argument	& p		6314786	2					
ANR	6317403	UnaryOperationExpression	& p		6314786	0					
ANR	6317404	UnaryOperator	&		6314786	0					
ANR	6317405	Identifier	p		6314786	1					
ANR	6317406	IfStatement	if ( stream )		6314786	1					
ANR	6317407	Condition	stream	727:16:14785:14790	6314786	0	True				
ANR	6317408	Identifier	stream		6314786	0					
ANR	6317409	ExpressionStatement	audio_enc . channels = atoi ( arg )	729:16:14810:14840	6314786	1	True				
ANR	6317410	AssignmentExpression	audio_enc . channels = atoi ( arg )		6314786	0		=			
ANR	6317411	MemberAccess	audio_enc . channels		6314786	0					
ANR	6317412	Identifier	audio_enc		6314786	0					
ANR	6317413	Identifier	channels		6314786	1					
ANR	6317414	CallExpression	atoi ( arg )		6314786	1					
ANR	6317415	Callee	atoi		6314786	0					
ANR	6317416	Identifier	atoi		6314786	0					
ANR	6317417	ArgumentList	arg		6314786	1					
ANR	6317418	Argument	arg		6314786	0					
ANR	6317419	Identifier	arg		6314786	0					
ANR	6317420	ElseStatement	else		6314786	0					
ANR	6317421	IfStatement	"if ( ! strcasecmp ( cmd , ""AudioSampleRate"" ) )"		6314786	0					
ANR	6317422	Condition	"! strcasecmp ( cmd , ""AudioSampleRate"" )"	731:19:14862:14896	6314786	0	True				
ANR	6317423	UnaryOperationExpression	"! strcasecmp ( cmd , ""AudioSampleRate"" )"		6314786	0					
ANR	6317424	UnaryOperator	!		6314786	0					
ANR	6317425	CallExpression	"strcasecmp ( cmd , ""AudioSampleRate"" )"		6314786	1					
ANR	6317426	Callee	strcasecmp		6314786	0					
ANR	6317427	Identifier	strcasecmp		6314786	0					
ANR	6317428	ArgumentList	cmd		6314786	1					
ANR	6317429	Argument	cmd		6314786	0					
ANR	6317430	Identifier	cmd		6314786	0					
ANR	6317431	Argument	"""AudioSampleRate"""		6314786	1					
ANR	6317432	PrimaryExpression	"""AudioSampleRate"""		6314786	0					
ANR	6317433	CompoundStatement		729:56:14849:14849	6314786	1					
ANR	6317434	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	733:12:14914:14943	6314786	0	True				
ANR	6317435	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317436	Callee	get_arg		6314786	0					
ANR	6317437	Identifier	get_arg		6314786	0					
ANR	6317438	ArgumentList	arg		6314786	1					
ANR	6317439	Argument	arg		6314786	0					
ANR	6317440	Identifier	arg		6314786	0					
ANR	6317441	Argument	sizeof ( arg )		6314786	1					
ANR	6317442	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317443	Sizeof	sizeof		6314786	0					
ANR	6317444	SizeofOperand	arg		6314786	1					
ANR	6317445	Argument	& p		6314786	2					
ANR	6317446	UnaryOperationExpression	& p		6314786	0					
ANR	6317447	UnaryOperator	&		6314786	0					
ANR	6317448	Identifier	p		6314786	1					
ANR	6317449	IfStatement	if ( stream )		6314786	1					
ANR	6317450	Condition	stream	735:16:14962:14967	6314786	0	True				
ANR	6317451	Identifier	stream		6314786	0					
ANR	6317452	ExpressionStatement	audio_enc . sample_rate = atoi ( arg )	737:16:14987:15020	6314786	1	True				
ANR	6317453	AssignmentExpression	audio_enc . sample_rate = atoi ( arg )		6314786	0		=			
ANR	6317454	MemberAccess	audio_enc . sample_rate		6314786	0					
ANR	6317455	Identifier	audio_enc		6314786	0					
ANR	6317456	Identifier	sample_rate		6314786	1					
ANR	6317457	CallExpression	atoi ( arg )		6314786	1					
ANR	6317458	Callee	atoi		6314786	0					
ANR	6317459	Identifier	atoi		6314786	0					
ANR	6317460	ArgumentList	arg		6314786	1					
ANR	6317461	Argument	arg		6314786	0					
ANR	6317462	Identifier	arg		6314786	0					
ANR	6317463	ElseStatement	else		6314786	0					
ANR	6317464	IfStatement	"if ( ! strcasecmp ( cmd , ""AudioQuality"" ) )"		6314786	0					
ANR	6317465	Condition	"! strcasecmp ( cmd , ""AudioQuality"" )"	739:19:15042:15073	6314786	0	True				
ANR	6317466	UnaryOperationExpression	"! strcasecmp ( cmd , ""AudioQuality"" )"		6314786	0					
ANR	6317467	UnaryOperator	!		6314786	0					
ANR	6317468	CallExpression	"strcasecmp ( cmd , ""AudioQuality"" )"		6314786	1					
ANR	6317469	Callee	strcasecmp		6314786	0					
ANR	6317470	Identifier	strcasecmp		6314786	0					
ANR	6317471	ArgumentList	cmd		6314786	1					
ANR	6317472	Argument	cmd		6314786	0					
ANR	6317473	Identifier	cmd		6314786	0					
ANR	6317474	Argument	"""AudioQuality"""		6314786	1					
ANR	6317475	PrimaryExpression	"""AudioQuality"""		6314786	0					
ANR	6317476	CompoundStatement		737:53:15026:15026	6314786	1					
ANR	6317477	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	741:12:15091:15120	6314786	0	True				
ANR	6317478	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317479	Callee	get_arg		6314786	0					
ANR	6317480	Identifier	get_arg		6314786	0					
ANR	6317481	ArgumentList	arg		6314786	1					
ANR	6317482	Argument	arg		6314786	0					
ANR	6317483	Identifier	arg		6314786	0					
ANR	6317484	Argument	sizeof ( arg )		6314786	1					
ANR	6317485	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317486	Sizeof	sizeof		6314786	0					
ANR	6317487	SizeofOperand	arg		6314786	1					
ANR	6317488	Argument	& p		6314786	2					
ANR	6317489	UnaryOperationExpression	& p		6314786	0					
ANR	6317490	UnaryOperator	&		6314786	0					
ANR	6317491	Identifier	p		6314786	1					
ANR	6317492	IfStatement	if ( stream )		6314786	1					
ANR	6317493	Condition	stream	743:16:15139:15144	6314786	0	True				
ANR	6317494	Identifier	stream		6314786	0					
ANR	6317495	CompoundStatement		741:24:15097:15097	6314786	1					
ANR	6317496	ElseStatement	else		6314786	0					
ANR	6317497	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoBitRateRange"" ) )"		6314786	0					
ANR	6317498	Condition	"! strcasecmp ( cmd , ""VideoBitRateRange"" )"	749:19:15241:15277	6314786	0	True				
ANR	6317499	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoBitRateRange"" )"		6314786	0					
ANR	6317500	UnaryOperator	!		6314786	0					
ANR	6317501	CallExpression	"strcasecmp ( cmd , ""VideoBitRateRange"" )"		6314786	1					
ANR	6317502	Callee	strcasecmp		6314786	0					
ANR	6317503	Identifier	strcasecmp		6314786	0					
ANR	6317504	ArgumentList	cmd		6314786	1					
ANR	6317505	Argument	cmd		6314786	0					
ANR	6317506	Identifier	cmd		6314786	0					
ANR	6317507	Argument	"""VideoBitRateRange"""		6314786	1					
ANR	6317508	PrimaryExpression	"""VideoBitRateRange"""		6314786	0					
ANR	6317509	CompoundStatement		747:58:15230:15230	6314786	1					
ANR	6317510	IfStatement	if ( stream )		6314786	0					
ANR	6317511	Condition	stream	751:16:15299:15304	6314786	0	True				
ANR	6317512	Identifier	stream		6314786	0					
ANR	6317513	CompoundStatement		751:16:15276:15296	6314786	1					
ANR	6317514	IdentifierDeclStatement	"int minrate , maxrate ;"	753:16:15326:15346	6314786	0	True				
ANR	6317515	IdentifierDecl	minrate		6314786	0					
ANR	6317516	IdentifierDeclType	int		6314786	0					
ANR	6317517	Identifier	minrate		6314786	1					
ANR	6317518	IdentifierDecl	maxrate		6314786	1					
ANR	6317519	IdentifierDeclType	int		6314786	0					
ANR	6317520	Identifier	maxrate		6314786	1					
ANR	6317521	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	757:16:15367:15396	6314786	1	True				
ANR	6317522	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317523	Callee	get_arg		6314786	0					
ANR	6317524	Identifier	get_arg		6314786	0					
ANR	6317525	ArgumentList	arg		6314786	1					
ANR	6317526	Argument	arg		6314786	0					
ANR	6317527	Identifier	arg		6314786	0					
ANR	6317528	Argument	sizeof ( arg )		6314786	1					
ANR	6317529	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317530	Sizeof	sizeof		6314786	0					
ANR	6317531	SizeofOperand	arg		6314786	1					
ANR	6317532	Argument	& p		6314786	2					
ANR	6317533	UnaryOperationExpression	& p		6314786	0					
ANR	6317534	UnaryOperator	&		6314786	0					
ANR	6317535	Identifier	p		6314786	1					
ANR	6317536	IfStatement	"if ( sscanf ( arg , ""%d-%d"" , & minrate , & maxrate ) == 2 )"		6314786	2					
ANR	6317537	Condition	"sscanf ( arg , ""%d-%d"" , & minrate , & maxrate ) == 2"	761:20:15421:15465	6314786	0	True				
ANR	6317538	EqualityExpression	"sscanf ( arg , ""%d-%d"" , & minrate , & maxrate ) == 2"		6314786	0		==			
ANR	6317539	CallExpression	"sscanf ( arg , ""%d-%d"" , & minrate , & maxrate )"		6314786	0					
ANR	6317540	Callee	sscanf		6314786	0					
ANR	6317541	Identifier	sscanf		6314786	0					
ANR	6317542	ArgumentList	arg		6314786	1					
ANR	6317543	Argument	arg		6314786	0					
ANR	6317544	Identifier	arg		6314786	0					
ANR	6317545	Argument	"""%d-%d"""		6314786	1					
ANR	6317546	PrimaryExpression	"""%d-%d"""		6314786	0					
ANR	6317547	Argument	& minrate		6314786	2					
ANR	6317548	UnaryOperationExpression	& minrate		6314786	0					
ANR	6317549	UnaryOperator	&		6314786	0					
ANR	6317550	Identifier	minrate		6314786	1					
ANR	6317551	Argument	& maxrate		6314786	3					
ANR	6317552	UnaryOperationExpression	& maxrate		6314786	0					
ANR	6317553	UnaryOperator	&		6314786	0					
ANR	6317554	Identifier	maxrate		6314786	1					
ANR	6317555	PrimaryExpression	2		6314786	1					
ANR	6317556	CompoundStatement		759:67:15418:15418	6314786	1					
ANR	6317557	ExpressionStatement	video_enc . rc_min_rate = minrate * 1000	763:20:15491:15529	6314786	0	True				
ANR	6317558	AssignmentExpression	video_enc . rc_min_rate = minrate * 1000		6314786	0		=			
ANR	6317559	MemberAccess	video_enc . rc_min_rate		6314786	0					
ANR	6317560	Identifier	video_enc		6314786	0					
ANR	6317561	Identifier	rc_min_rate		6314786	1					
ANR	6317562	MultiplicativeExpression	minrate * 1000		6314786	1		*			
ANR	6317563	Identifier	minrate		6314786	0					
ANR	6317564	PrimaryExpression	1000		6314786	1					
ANR	6317565	ExpressionStatement	video_enc . rc_max_rate = maxrate * 1000	765:20:15552:15590	6314786	1	True				
ANR	6317566	AssignmentExpression	video_enc . rc_max_rate = maxrate * 1000		6314786	0		=			
ANR	6317567	MemberAccess	video_enc . rc_max_rate		6314786	0					
ANR	6317568	Identifier	video_enc		6314786	0					
ANR	6317569	Identifier	rc_max_rate		6314786	1					
ANR	6317570	MultiplicativeExpression	maxrate * 1000		6314786	1		*			
ANR	6317571	Identifier	maxrate		6314786	0					
ANR	6317572	PrimaryExpression	1000		6314786	1					
ANR	6317573	ElseStatement	else		6314786	0					
ANR	6317574	CompoundStatement		765:23:15566:15566	6314786	0					
ANR	6317575	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Incorrect format for VideoBitRateRange -- should be <min>-<max>: %s\\n"" , filename , line_num , arg )"	769:20:15639:15788	6314786	0	True				
ANR	6317576	CallExpression	"fprintf ( stderr , ""%s:%d: Incorrect format for VideoBitRateRange -- should be <min>-<max>: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6317577	Callee	fprintf		6314786	0					
ANR	6317578	Identifier	fprintf		6314786	0					
ANR	6317579	ArgumentList	stderr		6314786	1					
ANR	6317580	Argument	stderr		6314786	0					
ANR	6317581	Identifier	stderr		6314786	0					
ANR	6317582	Argument	"""%s:%d: Incorrect format for VideoBitRateRange -- should be <min>-<max>: %s\\n"""		6314786	1					
ANR	6317583	PrimaryExpression	"""%s:%d: Incorrect format for VideoBitRateRange -- should be <min>-<max>: %s\\n"""		6314786	0					
ANR	6317584	Argument	filename		6314786	2					
ANR	6317585	Identifier	filename		6314786	0					
ANR	6317586	Argument	line_num		6314786	3					
ANR	6317587	Identifier	line_num		6314786	0					
ANR	6317588	Argument	arg		6314786	4					
ANR	6317589	Identifier	arg		6314786	0					
ANR	6317590	ExpressionStatement	errors ++	773:20:15811:15819	6314786	1	True				
ANR	6317591	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6317592	Identifier	errors		6314786	0					
ANR	6317593	IncDec	++		6314786	1					
ANR	6317594	ElseStatement	else		6314786	0					
ANR	6317595	IfStatement	"if ( ! strcasecmp ( cmd , ""Debug"" ) )"		6314786	0					
ANR	6317596	Condition	"! strcasecmp ( cmd , ""Debug"" )"	779:19:15875:15899	6314786	0	True				
ANR	6317597	UnaryOperationExpression	"! strcasecmp ( cmd , ""Debug"" )"		6314786	0					
ANR	6317598	UnaryOperator	!		6314786	0					
ANR	6317599	CallExpression	"strcasecmp ( cmd , ""Debug"" )"		6314786	1					
ANR	6317600	Callee	strcasecmp		6314786	0					
ANR	6317601	Identifier	strcasecmp		6314786	0					
ANR	6317602	ArgumentList	cmd		6314786	1					
ANR	6317603	Argument	cmd		6314786	0					
ANR	6317604	Identifier	cmd		6314786	0					
ANR	6317605	Argument	"""Debug"""		6314786	1					
ANR	6317606	PrimaryExpression	"""Debug"""		6314786	0					
ANR	6317607	CompoundStatement		777:46:15852:15852	6314786	1					
ANR	6317608	IfStatement	if ( stream )		6314786	0					
ANR	6317609	Condition	stream	781:16:15921:15926	6314786	0	True				
ANR	6317610	Identifier	stream		6314786	0					
ANR	6317611	CompoundStatement		779:24:15879:15879	6314786	1					
ANR	6317612	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	783:16:15948:15977	6314786	0	True				
ANR	6317613	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317614	Callee	get_arg		6314786	0					
ANR	6317615	Identifier	get_arg		6314786	0					
ANR	6317616	ArgumentList	arg		6314786	1					
ANR	6317617	Argument	arg		6314786	0					
ANR	6317618	Identifier	arg		6314786	0					
ANR	6317619	Argument	sizeof ( arg )		6314786	1					
ANR	6317620	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317621	Sizeof	sizeof		6314786	0					
ANR	6317622	SizeofOperand	arg		6314786	1					
ANR	6317623	Argument	& p		6314786	2					
ANR	6317624	UnaryOperationExpression	& p		6314786	0					
ANR	6317625	UnaryOperator	&		6314786	0					
ANR	6317626	Identifier	p		6314786	1					
ANR	6317627	ExpressionStatement	"video_enc . debug = strtol ( arg , 0 , 0 )"	785:16:15996:16029	6314786	1	True				
ANR	6317628	AssignmentExpression	"video_enc . debug = strtol ( arg , 0 , 0 )"		6314786	0		=			
ANR	6317629	MemberAccess	video_enc . debug		6314786	0					
ANR	6317630	Identifier	video_enc		6314786	0					
ANR	6317631	Identifier	debug		6314786	1					
ANR	6317632	CallExpression	"strtol ( arg , 0 , 0 )"		6314786	1					
ANR	6317633	Callee	strtol		6314786	0					
ANR	6317634	Identifier	strtol		6314786	0					
ANR	6317635	ArgumentList	arg		6314786	1					
ANR	6317636	Argument	arg		6314786	0					
ANR	6317637	Identifier	arg		6314786	0					
ANR	6317638	Argument	0		6314786	1					
ANR	6317639	PrimaryExpression	0		6314786	0					
ANR	6317640	Argument	0		6314786	2					
ANR	6317641	PrimaryExpression	0		6314786	0					
ANR	6317642	ElseStatement	else		6314786	0					
ANR	6317643	IfStatement	"if ( ! strcasecmp ( cmd , ""Strict"" ) )"		6314786	0					
ANR	6317644	Condition	"! strcasecmp ( cmd , ""Strict"" )"	789:19:16066:16091	6314786	0	True				
ANR	6317645	UnaryOperationExpression	"! strcasecmp ( cmd , ""Strict"" )"		6314786	0					
ANR	6317646	UnaryOperator	!		6314786	0					
ANR	6317647	CallExpression	"strcasecmp ( cmd , ""Strict"" )"		6314786	1					
ANR	6317648	Callee	strcasecmp		6314786	0					
ANR	6317649	Identifier	strcasecmp		6314786	0					
ANR	6317650	ArgumentList	cmd		6314786	1					
ANR	6317651	Argument	cmd		6314786	0					
ANR	6317652	Identifier	cmd		6314786	0					
ANR	6317653	Argument	"""Strict"""		6314786	1					
ANR	6317654	PrimaryExpression	"""Strict"""		6314786	0					
ANR	6317655	CompoundStatement		787:47:16044:16044	6314786	1					
ANR	6317656	IfStatement	if ( stream )		6314786	0					
ANR	6317657	Condition	stream	791:16:16113:16118	6314786	0	True				
ANR	6317658	Identifier	stream		6314786	0					
ANR	6317659	CompoundStatement		789:24:16071:16071	6314786	1					
ANR	6317660	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	793:16:16140:16169	6314786	0	True				
ANR	6317661	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317662	Callee	get_arg		6314786	0					
ANR	6317663	Identifier	get_arg		6314786	0					
ANR	6317664	ArgumentList	arg		6314786	1					
ANR	6317665	Argument	arg		6314786	0					
ANR	6317666	Identifier	arg		6314786	0					
ANR	6317667	Argument	sizeof ( arg )		6314786	1					
ANR	6317668	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317669	Sizeof	sizeof		6314786	0					
ANR	6317670	SizeofOperand	arg		6314786	1					
ANR	6317671	Argument	& p		6314786	2					
ANR	6317672	UnaryOperationExpression	& p		6314786	0					
ANR	6317673	UnaryOperator	&		6314786	0					
ANR	6317674	Identifier	p		6314786	1					
ANR	6317675	ExpressionStatement	video_enc . strict_std_compliance = atoi ( arg )	795:16:16188:16231	6314786	1	True				
ANR	6317676	AssignmentExpression	video_enc . strict_std_compliance = atoi ( arg )		6314786	0		=			
ANR	6317677	MemberAccess	video_enc . strict_std_compliance		6314786	0					
ANR	6317678	Identifier	video_enc		6314786	0					
ANR	6317679	Identifier	strict_std_compliance		6314786	1					
ANR	6317680	CallExpression	atoi ( arg )		6314786	1					
ANR	6317681	Callee	atoi		6314786	0					
ANR	6317682	Identifier	atoi		6314786	0					
ANR	6317683	ArgumentList	arg		6314786	1					
ANR	6317684	Argument	arg		6314786	0					
ANR	6317685	Identifier	arg		6314786	0					
ANR	6317686	ElseStatement	else		6314786	0					
ANR	6317687	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoBufferSize"" ) )"		6314786	0					
ANR	6317688	Condition	"! strcasecmp ( cmd , ""VideoBufferSize"" )"	799:19:16268:16302	6314786	0	True				
ANR	6317689	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoBufferSize"" )"		6314786	0					
ANR	6317690	UnaryOperator	!		6314786	0					
ANR	6317691	CallExpression	"strcasecmp ( cmd , ""VideoBufferSize"" )"		6314786	1					
ANR	6317692	Callee	strcasecmp		6314786	0					
ANR	6317693	Identifier	strcasecmp		6314786	0					
ANR	6317694	ArgumentList	cmd		6314786	1					
ANR	6317695	Argument	cmd		6314786	0					
ANR	6317696	Identifier	cmd		6314786	0					
ANR	6317697	Argument	"""VideoBufferSize"""		6314786	1					
ANR	6317698	PrimaryExpression	"""VideoBufferSize"""		6314786	0					
ANR	6317699	CompoundStatement		797:56:16255:16255	6314786	1					
ANR	6317700	IfStatement	if ( stream )		6314786	0					
ANR	6317701	Condition	stream	801:16:16324:16329	6314786	0	True				
ANR	6317702	Identifier	stream		6314786	0					
ANR	6317703	CompoundStatement		799:24:16282:16282	6314786	1					
ANR	6317704	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	803:16:16351:16380	6314786	0	True				
ANR	6317705	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317706	Callee	get_arg		6314786	0					
ANR	6317707	Identifier	get_arg		6314786	0					
ANR	6317708	ArgumentList	arg		6314786	1					
ANR	6317709	Argument	arg		6314786	0					
ANR	6317710	Identifier	arg		6314786	0					
ANR	6317711	Argument	sizeof ( arg )		6314786	1					
ANR	6317712	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317713	Sizeof	sizeof		6314786	0					
ANR	6317714	SizeofOperand	arg		6314786	1					
ANR	6317715	Argument	& p		6314786	2					
ANR	6317716	UnaryOperationExpression	& p		6314786	0					
ANR	6317717	UnaryOperator	&		6314786	0					
ANR	6317718	Identifier	p		6314786	1					
ANR	6317719	ExpressionStatement	video_enc . rc_buffer_size = atoi ( arg ) * 8 * 1024	805:16:16399:16444	6314786	1	True				
ANR	6317720	AssignmentExpression	video_enc . rc_buffer_size = atoi ( arg ) * 8 * 1024		6314786	0		=			
ANR	6317721	MemberAccess	video_enc . rc_buffer_size		6314786	0					
ANR	6317722	Identifier	video_enc		6314786	0					
ANR	6317723	Identifier	rc_buffer_size		6314786	1					
ANR	6317724	MultiplicativeExpression	atoi ( arg ) * 8 * 1024		6314786	1		*			
ANR	6317725	CallExpression	atoi ( arg )		6314786	0					
ANR	6317726	Callee	atoi		6314786	0					
ANR	6317727	Identifier	atoi		6314786	0					
ANR	6317728	ArgumentList	arg		6314786	1					
ANR	6317729	Argument	arg		6314786	0					
ANR	6317730	Identifier	arg		6314786	0					
ANR	6317731	MultiplicativeExpression	8 * 1024		6314786	1		*			
ANR	6317732	PrimaryExpression	8		6314786	0					
ANR	6317733	PrimaryExpression	1024		6314786	1					
ANR	6317734	ElseStatement	else		6314786	0					
ANR	6317735	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoBitRateTolerance"" ) )"		6314786	0					
ANR	6317736	Condition	"! strcasecmp ( cmd , ""VideoBitRateTolerance"" )"	809:19:16481:16521	6314786	0	True				
ANR	6317737	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoBitRateTolerance"" )"		6314786	0					
ANR	6317738	UnaryOperator	!		6314786	0					
ANR	6317739	CallExpression	"strcasecmp ( cmd , ""VideoBitRateTolerance"" )"		6314786	1					
ANR	6317740	Callee	strcasecmp		6314786	0					
ANR	6317741	Identifier	strcasecmp		6314786	0					
ANR	6317742	ArgumentList	cmd		6314786	1					
ANR	6317743	Argument	cmd		6314786	0					
ANR	6317744	Identifier	cmd		6314786	0					
ANR	6317745	Argument	"""VideoBitRateTolerance"""		6314786	1					
ANR	6317746	PrimaryExpression	"""VideoBitRateTolerance"""		6314786	0					
ANR	6317747	CompoundStatement		807:62:16474:16474	6314786	1					
ANR	6317748	IfStatement	if ( stream )		6314786	0					
ANR	6317749	Condition	stream	811:16:16543:16548	6314786	0	True				
ANR	6317750	Identifier	stream		6314786	0					
ANR	6317751	CompoundStatement		809:24:16501:16501	6314786	1					
ANR	6317752	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	813:16:16570:16599	6314786	0	True				
ANR	6317753	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317754	Callee	get_arg		6314786	0					
ANR	6317755	Identifier	get_arg		6314786	0					
ANR	6317756	ArgumentList	arg		6314786	1					
ANR	6317757	Argument	arg		6314786	0					
ANR	6317758	Identifier	arg		6314786	0					
ANR	6317759	Argument	sizeof ( arg )		6314786	1					
ANR	6317760	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317761	Sizeof	sizeof		6314786	0					
ANR	6317762	SizeofOperand	arg		6314786	1					
ANR	6317763	Argument	& p		6314786	2					
ANR	6317764	UnaryOperationExpression	& p		6314786	0					
ANR	6317765	UnaryOperator	&		6314786	0					
ANR	6317766	Identifier	p		6314786	1					
ANR	6317767	ExpressionStatement	video_enc . bit_rate_tolerance = atoi ( arg ) * 1000	815:16:16618:16665	6314786	1	True				
ANR	6317768	AssignmentExpression	video_enc . bit_rate_tolerance = atoi ( arg ) * 1000		6314786	0		=			
ANR	6317769	MemberAccess	video_enc . bit_rate_tolerance		6314786	0					
ANR	6317770	Identifier	video_enc		6314786	0					
ANR	6317771	Identifier	bit_rate_tolerance		6314786	1					
ANR	6317772	MultiplicativeExpression	atoi ( arg ) * 1000		6314786	1		*			
ANR	6317773	CallExpression	atoi ( arg )		6314786	0					
ANR	6317774	Callee	atoi		6314786	0					
ANR	6317775	Identifier	atoi		6314786	0					
ANR	6317776	ArgumentList	arg		6314786	1					
ANR	6317777	Argument	arg		6314786	0					
ANR	6317778	Identifier	arg		6314786	0					
ANR	6317779	PrimaryExpression	1000		6314786	1					
ANR	6317780	ElseStatement	else		6314786	0					
ANR	6317781	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoBitRate"" ) )"		6314786	0					
ANR	6317782	Condition	"! strcasecmp ( cmd , ""VideoBitRate"" )"	819:19:16702:16733	6314786	0	True				
ANR	6317783	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoBitRate"" )"		6314786	0					
ANR	6317784	UnaryOperator	!		6314786	0					
ANR	6317785	CallExpression	"strcasecmp ( cmd , ""VideoBitRate"" )"		6314786	1					
ANR	6317786	Callee	strcasecmp		6314786	0					
ANR	6317787	Identifier	strcasecmp		6314786	0					
ANR	6317788	ArgumentList	cmd		6314786	1					
ANR	6317789	Argument	cmd		6314786	0					
ANR	6317790	Identifier	cmd		6314786	0					
ANR	6317791	Argument	"""VideoBitRate"""		6314786	1					
ANR	6317792	PrimaryExpression	"""VideoBitRate"""		6314786	0					
ANR	6317793	CompoundStatement		817:53:16686:16686	6314786	1					
ANR	6317794	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	821:12:16751:16780	6314786	0	True				
ANR	6317795	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317796	Callee	get_arg		6314786	0					
ANR	6317797	Identifier	get_arg		6314786	0					
ANR	6317798	ArgumentList	arg		6314786	1					
ANR	6317799	Argument	arg		6314786	0					
ANR	6317800	Identifier	arg		6314786	0					
ANR	6317801	Argument	sizeof ( arg )		6314786	1					
ANR	6317802	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317803	Sizeof	sizeof		6314786	0					
ANR	6317804	SizeofOperand	arg		6314786	1					
ANR	6317805	Argument	& p		6314786	2					
ANR	6317806	UnaryOperationExpression	& p		6314786	0					
ANR	6317807	UnaryOperator	&		6314786	0					
ANR	6317808	Identifier	p		6314786	1					
ANR	6317809	IfStatement	if ( stream )		6314786	1					
ANR	6317810	Condition	stream	823:16:16799:16804	6314786	0	True				
ANR	6317811	Identifier	stream		6314786	0					
ANR	6317812	CompoundStatement		821:24:16757:16757	6314786	1					
ANR	6317813	ExpressionStatement	video_enc . bit_rate = atoi ( arg ) * 1000	825:16:16826:16863	6314786	0	True				
ANR	6317814	AssignmentExpression	video_enc . bit_rate = atoi ( arg ) * 1000		6314786	0		=			
ANR	6317815	MemberAccess	video_enc . bit_rate		6314786	0					
ANR	6317816	Identifier	video_enc		6314786	0					
ANR	6317817	Identifier	bit_rate		6314786	1					
ANR	6317818	MultiplicativeExpression	atoi ( arg ) * 1000		6314786	1		*			
ANR	6317819	CallExpression	atoi ( arg )		6314786	0					
ANR	6317820	Callee	atoi		6314786	0					
ANR	6317821	Identifier	atoi		6314786	0					
ANR	6317822	ArgumentList	arg		6314786	1					
ANR	6317823	Argument	arg		6314786	0					
ANR	6317824	Identifier	arg		6314786	0					
ANR	6317825	PrimaryExpression	1000		6314786	1					
ANR	6317826	ElseStatement	else		6314786	0					
ANR	6317827	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoSize"" ) )"		6314786	0					
ANR	6317828	Condition	"! strcasecmp ( cmd , ""VideoSize"" )"	829:19:16900:16928	6314786	0	True				
ANR	6317829	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoSize"" )"		6314786	0					
ANR	6317830	UnaryOperator	!		6314786	0					
ANR	6317831	CallExpression	"strcasecmp ( cmd , ""VideoSize"" )"		6314786	1					
ANR	6317832	Callee	strcasecmp		6314786	0					
ANR	6317833	Identifier	strcasecmp		6314786	0					
ANR	6317834	ArgumentList	cmd		6314786	1					
ANR	6317835	Argument	cmd		6314786	0					
ANR	6317836	Identifier	cmd		6314786	0					
ANR	6317837	Argument	"""VideoSize"""		6314786	1					
ANR	6317838	PrimaryExpression	"""VideoSize"""		6314786	0					
ANR	6317839	CompoundStatement		827:50:16881:16881	6314786	1					
ANR	6317840	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	831:12:16946:16975	6314786	0	True				
ANR	6317841	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317842	Callee	get_arg		6314786	0					
ANR	6317843	Identifier	get_arg		6314786	0					
ANR	6317844	ArgumentList	arg		6314786	1					
ANR	6317845	Argument	arg		6314786	0					
ANR	6317846	Identifier	arg		6314786	0					
ANR	6317847	Argument	sizeof ( arg )		6314786	1					
ANR	6317848	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317849	Sizeof	sizeof		6314786	0					
ANR	6317850	SizeofOperand	arg		6314786	1					
ANR	6317851	Argument	& p		6314786	2					
ANR	6317852	UnaryOperationExpression	& p		6314786	0					
ANR	6317853	UnaryOperator	&		6314786	0					
ANR	6317854	Identifier	p		6314786	1					
ANR	6317855	IfStatement	if ( stream )		6314786	1					
ANR	6317856	Condition	stream	833:16:16994:16999	6314786	0	True				
ANR	6317857	Identifier	stream		6314786	0					
ANR	6317858	CompoundStatement		831:24:16952:16952	6314786	1					
ANR	6317859	ExpressionStatement	"av_parse_video_frame_size ( & video_enc . width , & video_enc . height , arg )"	835:16:17021:17088	6314786	0	True				
ANR	6317860	CallExpression	"av_parse_video_frame_size ( & video_enc . width , & video_enc . height , arg )"		6314786	0					
ANR	6317861	Callee	av_parse_video_frame_size		6314786	0					
ANR	6317862	Identifier	av_parse_video_frame_size		6314786	0					
ANR	6317863	ArgumentList	& video_enc . width		6314786	1					
ANR	6317864	Argument	& video_enc . width		6314786	0					
ANR	6317865	UnaryOperationExpression	& video_enc . width		6314786	0					
ANR	6317866	UnaryOperator	&		6314786	0					
ANR	6317867	MemberAccess	video_enc . width		6314786	1					
ANR	6317868	Identifier	video_enc		6314786	0					
ANR	6317869	Identifier	width		6314786	1					
ANR	6317870	Argument	& video_enc . height		6314786	1					
ANR	6317871	UnaryOperationExpression	& video_enc . height		6314786	0					
ANR	6317872	UnaryOperator	&		6314786	0					
ANR	6317873	MemberAccess	video_enc . height		6314786	1					
ANR	6317874	Identifier	video_enc		6314786	0					
ANR	6317875	Identifier	height		6314786	1					
ANR	6317876	Argument	arg		6314786	2					
ANR	6317877	Identifier	arg		6314786	0					
ANR	6317878	IfStatement	if ( ( video_enc . width % 16 ) != 0 || ( video_enc . height % 16 ) != 0 )		6314786	1					
ANR	6317879	Condition	( video_enc . width % 16 ) != 0 || ( video_enc . height % 16 ) != 0	837:20:17111:17190	6314786	0	True				
ANR	6317880	OrExpression	( video_enc . width % 16 ) != 0 || ( video_enc . height % 16 ) != 0		6314786	0		||			
ANR	6317881	EqualityExpression	( video_enc . width % 16 ) != 0		6314786	0		!=			
ANR	6317882	MultiplicativeExpression	video_enc . width % 16		6314786	0		%			
ANR	6317883	MemberAccess	video_enc . width		6314786	0					
ANR	6317884	Identifier	video_enc		6314786	0					
ANR	6317885	Identifier	width		6314786	1					
ANR	6317886	PrimaryExpression	16		6314786	1					
ANR	6317887	PrimaryExpression	0		6314786	1					
ANR	6317888	EqualityExpression	( video_enc . height % 16 ) != 0		6314786	1		!=			
ANR	6317889	MultiplicativeExpression	video_enc . height % 16		6314786	0		%			
ANR	6317890	MemberAccess	video_enc . height		6314786	0					
ANR	6317891	Identifier	video_enc		6314786	0					
ANR	6317892	Identifier	height		6314786	1					
ANR	6317893	PrimaryExpression	16		6314786	1					
ANR	6317894	PrimaryExpression	0		6314786	1					
ANR	6317895	CompoundStatement		837:50:17143:17143	6314786	1					
ANR	6317896	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Image size must be a multiple of 16\\n"" , filename , line_num )"	841:20:17216:17328	6314786	0	True				
ANR	6317897	CallExpression	"fprintf ( stderr , ""%s:%d: Image size must be a multiple of 16\\n"" , filename , line_num )"		6314786	0					
ANR	6317898	Callee	fprintf		6314786	0					
ANR	6317899	Identifier	fprintf		6314786	0					
ANR	6317900	ArgumentList	stderr		6314786	1					
ANR	6317901	Argument	stderr		6314786	0					
ANR	6317902	Identifier	stderr		6314786	0					
ANR	6317903	Argument	"""%s:%d: Image size must be a multiple of 16\\n"""		6314786	1					
ANR	6317904	PrimaryExpression	"""%s:%d: Image size must be a multiple of 16\\n"""		6314786	0					
ANR	6317905	Argument	filename		6314786	2					
ANR	6317906	Identifier	filename		6314786	0					
ANR	6317907	Argument	line_num		6314786	3					
ANR	6317908	Identifier	line_num		6314786	0					
ANR	6317909	ExpressionStatement	errors ++	845:20:17351:17359	6314786	1	True				
ANR	6317910	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6317911	Identifier	errors		6314786	0					
ANR	6317912	IncDec	++		6314786	1					
ANR	6317913	ElseStatement	else		6314786	0					
ANR	6317914	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoFrameRate"" ) )"		6314786	0					
ANR	6317915	Condition	"! strcasecmp ( cmd , ""VideoFrameRate"" )"	851:19:17415:17448	6314786	0	True				
ANR	6317916	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoFrameRate"" )"		6314786	0					
ANR	6317917	UnaryOperator	!		6314786	0					
ANR	6317918	CallExpression	"strcasecmp ( cmd , ""VideoFrameRate"" )"		6314786	1					
ANR	6317919	Callee	strcasecmp		6314786	0					
ANR	6317920	Identifier	strcasecmp		6314786	0					
ANR	6317921	ArgumentList	cmd		6314786	1					
ANR	6317922	Argument	cmd		6314786	0					
ANR	6317923	Identifier	cmd		6314786	0					
ANR	6317924	Argument	"""VideoFrameRate"""		6314786	1					
ANR	6317925	PrimaryExpression	"""VideoFrameRate"""		6314786	0					
ANR	6317926	CompoundStatement		849:55:17401:17401	6314786	1					
ANR	6317927	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	853:12:17466:17495	6314786	0	True				
ANR	6317928	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6317929	Callee	get_arg		6314786	0					
ANR	6317930	Identifier	get_arg		6314786	0					
ANR	6317931	ArgumentList	arg		6314786	1					
ANR	6317932	Argument	arg		6314786	0					
ANR	6317933	Identifier	arg		6314786	0					
ANR	6317934	Argument	sizeof ( arg )		6314786	1					
ANR	6317935	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6317936	Sizeof	sizeof		6314786	0					
ANR	6317937	SizeofOperand	arg		6314786	1					
ANR	6317938	Argument	& p		6314786	2					
ANR	6317939	UnaryOperationExpression	& p		6314786	0					
ANR	6317940	UnaryOperator	&		6314786	0					
ANR	6317941	Identifier	p		6314786	1					
ANR	6317942	IfStatement	if ( stream )		6314786	1					
ANR	6317943	Condition	stream	855:16:17514:17519	6314786	0	True				
ANR	6317944	Identifier	stream		6314786	0					
ANR	6317945	CompoundStatement		855:16:17491:17512	6314786	1					
ANR	6317946	IdentifierDeclStatement	AVRational frame_rate ;	857:16:17541:17562	6314786	0	True				
ANR	6317947	IdentifierDecl	frame_rate		6314786	0					
ANR	6317948	IdentifierDeclType	AVRational		6314786	0					
ANR	6317949	Identifier	frame_rate		6314786	1					
ANR	6317950	IfStatement	"if ( av_parse_video_frame_rate ( & frame_rate , arg ) < 0 )"		6314786	1					
ANR	6317951	Condition	"av_parse_video_frame_rate ( & frame_rate , arg ) < 0"	859:20:17585:17631	6314786	0	True				
ANR	6317952	RelationalExpression	"av_parse_video_frame_rate ( & frame_rate , arg ) < 0"		6314786	0		<			
ANR	6317953	CallExpression	"av_parse_video_frame_rate ( & frame_rate , arg )"		6314786	0					
ANR	6317954	Callee	av_parse_video_frame_rate		6314786	0					
ANR	6317955	Identifier	av_parse_video_frame_rate		6314786	0					
ANR	6317956	ArgumentList	& frame_rate		6314786	1					
ANR	6317957	Argument	& frame_rate		6314786	0					
ANR	6317958	UnaryOperationExpression	& frame_rate		6314786	0					
ANR	6317959	UnaryOperator	&		6314786	0					
ANR	6317960	Identifier	frame_rate		6314786	1					
ANR	6317961	Argument	arg		6314786	1					
ANR	6317962	Identifier	arg		6314786	0					
ANR	6317963	PrimaryExpression	0		6314786	1					
ANR	6317964	CompoundStatement		857:69:17584:17584	6314786	1					
ANR	6317965	ExpressionStatement	"fprintf ( stderr , ""Incorrect frame rate\\n"" )"	861:20:17657:17698	6314786	0	True				
ANR	6317966	CallExpression	"fprintf ( stderr , ""Incorrect frame rate\\n"" )"		6314786	0					
ANR	6317967	Callee	fprintf		6314786	0					
ANR	6317968	Identifier	fprintf		6314786	0					
ANR	6317969	ArgumentList	stderr		6314786	1					
ANR	6317970	Argument	stderr		6314786	0					
ANR	6317971	Identifier	stderr		6314786	0					
ANR	6317972	Argument	"""Incorrect frame rate\\n"""		6314786	1					
ANR	6317973	PrimaryExpression	"""Incorrect frame rate\\n"""		6314786	0					
ANR	6317974	ExpressionStatement	errors ++	863:20:17721:17729	6314786	1	True				
ANR	6317975	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6317976	Identifier	errors		6314786	0					
ANR	6317977	IncDec	++		6314786	1					
ANR	6317978	ElseStatement	else		6314786	0					
ANR	6317979	CompoundStatement		863:23:17705:17705	6314786	0					
ANR	6317980	ExpressionStatement	video_enc . time_base . num = frame_rate . den	867:20:17778:17818	6314786	0	True				
ANR	6317981	AssignmentExpression	video_enc . time_base . num = frame_rate . den		6314786	0		=			
ANR	6317982	MemberAccess	video_enc . time_base . num		6314786	0					
ANR	6317983	MemberAccess	video_enc . time_base		6314786	0					
ANR	6317984	Identifier	video_enc		6314786	0					
ANR	6317985	Identifier	time_base		6314786	1					
ANR	6317986	Identifier	num		6314786	1					
ANR	6317987	MemberAccess	frame_rate . den		6314786	1					
ANR	6317988	Identifier	frame_rate		6314786	0					
ANR	6317989	Identifier	den		6314786	1					
ANR	6317990	ExpressionStatement	video_enc . time_base . den = frame_rate . num	869:20:17841:17881	6314786	1	True				
ANR	6317991	AssignmentExpression	video_enc . time_base . den = frame_rate . num		6314786	0		=			
ANR	6317992	MemberAccess	video_enc . time_base . den		6314786	0					
ANR	6317993	MemberAccess	video_enc . time_base		6314786	0					
ANR	6317994	Identifier	video_enc		6314786	0					
ANR	6317995	Identifier	time_base		6314786	1					
ANR	6317996	Identifier	den		6314786	1					
ANR	6317997	MemberAccess	frame_rate . num		6314786	1					
ANR	6317998	Identifier	frame_rate		6314786	0					
ANR	6317999	Identifier	num		6314786	1					
ANR	6318000	ElseStatement	else		6314786	0					
ANR	6318001	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoGopSize"" ) )"		6314786	0					
ANR	6318002	Condition	"! strcasecmp ( cmd , ""VideoGopSize"" )"	875:19:17937:17968	6314786	0	True				
ANR	6318003	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoGopSize"" )"		6314786	0					
ANR	6318004	UnaryOperator	!		6314786	0					
ANR	6318005	CallExpression	"strcasecmp ( cmd , ""VideoGopSize"" )"		6314786	1					
ANR	6318006	Callee	strcasecmp		6314786	0					
ANR	6318007	Identifier	strcasecmp		6314786	0					
ANR	6318008	ArgumentList	cmd		6314786	1					
ANR	6318009	Argument	cmd		6314786	0					
ANR	6318010	Identifier	cmd		6314786	0					
ANR	6318011	Argument	"""VideoGopSize"""		6314786	1					
ANR	6318012	PrimaryExpression	"""VideoGopSize"""		6314786	0					
ANR	6318013	CompoundStatement		873:53:17921:17921	6314786	1					
ANR	6318014	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	877:12:17986:18015	6314786	0	True				
ANR	6318015	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318016	Callee	get_arg		6314786	0					
ANR	6318017	Identifier	get_arg		6314786	0					
ANR	6318018	ArgumentList	arg		6314786	1					
ANR	6318019	Argument	arg		6314786	0					
ANR	6318020	Identifier	arg		6314786	0					
ANR	6318021	Argument	sizeof ( arg )		6314786	1					
ANR	6318022	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318023	Sizeof	sizeof		6314786	0					
ANR	6318024	SizeofOperand	arg		6314786	1					
ANR	6318025	Argument	& p		6314786	2					
ANR	6318026	UnaryOperationExpression	& p		6314786	0					
ANR	6318027	UnaryOperator	&		6314786	0					
ANR	6318028	Identifier	p		6314786	1					
ANR	6318029	IfStatement	if ( stream )		6314786	1					
ANR	6318030	Condition	stream	879:16:18034:18039	6314786	0	True				
ANR	6318031	Identifier	stream		6314786	0					
ANR	6318032	ExpressionStatement	video_enc . gop_size = atoi ( arg )	881:16:18059:18089	6314786	1	True				
ANR	6318033	AssignmentExpression	video_enc . gop_size = atoi ( arg )		6314786	0		=			
ANR	6318034	MemberAccess	video_enc . gop_size		6314786	0					
ANR	6318035	Identifier	video_enc		6314786	0					
ANR	6318036	Identifier	gop_size		6314786	1					
ANR	6318037	CallExpression	atoi ( arg )		6314786	1					
ANR	6318038	Callee	atoi		6314786	0					
ANR	6318039	Identifier	atoi		6314786	0					
ANR	6318040	ArgumentList	arg		6314786	1					
ANR	6318041	Argument	arg		6314786	0					
ANR	6318042	Identifier	arg		6314786	0					
ANR	6318043	ElseStatement	else		6314786	0					
ANR	6318044	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoIntraOnly"" ) )"		6314786	0					
ANR	6318045	Condition	"! strcasecmp ( cmd , ""VideoIntraOnly"" )"	883:19:18111:18144	6314786	0	True				
ANR	6318046	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoIntraOnly"" )"		6314786	0					
ANR	6318047	UnaryOperator	!		6314786	0					
ANR	6318048	CallExpression	"strcasecmp ( cmd , ""VideoIntraOnly"" )"		6314786	1					
ANR	6318049	Callee	strcasecmp		6314786	0					
ANR	6318050	Identifier	strcasecmp		6314786	0					
ANR	6318051	ArgumentList	cmd		6314786	1					
ANR	6318052	Argument	cmd		6314786	0					
ANR	6318053	Identifier	cmd		6314786	0					
ANR	6318054	Argument	"""VideoIntraOnly"""		6314786	1					
ANR	6318055	PrimaryExpression	"""VideoIntraOnly"""		6314786	0					
ANR	6318056	CompoundStatement		881:55:18097:18097	6314786	1					
ANR	6318057	IfStatement	if ( stream )		6314786	0					
ANR	6318058	Condition	stream	885:16:18166:18171	6314786	0	True				
ANR	6318059	Identifier	stream		6314786	0					
ANR	6318060	ExpressionStatement	video_enc . gop_size = 1	887:16:18191:18213	6314786	1	True				
ANR	6318061	AssignmentExpression	video_enc . gop_size = 1		6314786	0		=			
ANR	6318062	MemberAccess	video_enc . gop_size		6314786	0					
ANR	6318063	Identifier	video_enc		6314786	0					
ANR	6318064	Identifier	gop_size		6314786	1					
ANR	6318065	PrimaryExpression	1		6314786	1					
ANR	6318066	ElseStatement	else		6314786	0					
ANR	6318067	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoHighQuality"" ) )"		6314786	0					
ANR	6318068	Condition	"! strcasecmp ( cmd , ""VideoHighQuality"" )"	889:19:18235:18270	6314786	0	True				
ANR	6318069	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoHighQuality"" )"		6314786	0					
ANR	6318070	UnaryOperator	!		6314786	0					
ANR	6318071	CallExpression	"strcasecmp ( cmd , ""VideoHighQuality"" )"		6314786	1					
ANR	6318072	Callee	strcasecmp		6314786	0					
ANR	6318073	Identifier	strcasecmp		6314786	0					
ANR	6318074	ArgumentList	cmd		6314786	1					
ANR	6318075	Argument	cmd		6314786	0					
ANR	6318076	Identifier	cmd		6314786	0					
ANR	6318077	Argument	"""VideoHighQuality"""		6314786	1					
ANR	6318078	PrimaryExpression	"""VideoHighQuality"""		6314786	0					
ANR	6318079	CompoundStatement		887:57:18223:18223	6314786	1					
ANR	6318080	IfStatement	if ( stream )		6314786	0					
ANR	6318081	Condition	stream	891:16:18292:18297	6314786	0	True				
ANR	6318082	Identifier	stream		6314786	0					
ANR	6318083	ExpressionStatement	video_enc . mb_decision = FF_MB_DECISION_BITS	893:16:18317:18360	6314786	1	True				
ANR	6318084	AssignmentExpression	video_enc . mb_decision = FF_MB_DECISION_BITS		6314786	0		=			
ANR	6318085	MemberAccess	video_enc . mb_decision		6314786	0					
ANR	6318086	Identifier	video_enc		6314786	0					
ANR	6318087	Identifier	mb_decision		6314786	1					
ANR	6318088	Identifier	FF_MB_DECISION_BITS		6314786	1					
ANR	6318089	ElseStatement	else		6314786	0					
ANR	6318090	IfStatement	"if ( ! strcasecmp ( cmd , ""Video4MotionVector"" ) )"		6314786	0					
ANR	6318091	Condition	"! strcasecmp ( cmd , ""Video4MotionVector"" )"	895:19:18382:18419	6314786	0	True				
ANR	6318092	UnaryOperationExpression	"! strcasecmp ( cmd , ""Video4MotionVector"" )"		6314786	0					
ANR	6318093	UnaryOperator	!		6314786	0					
ANR	6318094	CallExpression	"strcasecmp ( cmd , ""Video4MotionVector"" )"		6314786	1					
ANR	6318095	Callee	strcasecmp		6314786	0					
ANR	6318096	Identifier	strcasecmp		6314786	0					
ANR	6318097	ArgumentList	cmd		6314786	1					
ANR	6318098	Argument	cmd		6314786	0					
ANR	6318099	Identifier	cmd		6314786	0					
ANR	6318100	Argument	"""Video4MotionVector"""		6314786	1					
ANR	6318101	PrimaryExpression	"""Video4MotionVector"""		6314786	0					
ANR	6318102	CompoundStatement		893:59:18372:18372	6314786	1					
ANR	6318103	IfStatement	if ( stream )		6314786	0					
ANR	6318104	Condition	stream	897:16:18441:18446	6314786	0	True				
ANR	6318105	Identifier	stream		6314786	0					
ANR	6318106	CompoundStatement		895:24:18399:18399	6314786	1					
ANR	6318107	ExpressionStatement	video_enc . mb_decision = FF_MB_DECISION_BITS	899:16:18468:18511	6314786	0	True				
ANR	6318108	AssignmentExpression	video_enc . mb_decision = FF_MB_DECISION_BITS		6314786	0		=			
ANR	6318109	MemberAccess	video_enc . mb_decision		6314786	0					
ANR	6318110	Identifier	video_enc		6314786	0					
ANR	6318111	Identifier	mb_decision		6314786	1					
ANR	6318112	Identifier	FF_MB_DECISION_BITS		6314786	1					
ANR	6318113	ExpressionStatement	video_enc . flags |= CODEC_FLAG_4MV	901:16:18545:18578	6314786	1	True				
ANR	6318114	AssignmentExpression	video_enc . flags |= CODEC_FLAG_4MV		6314786	0		|=			
ANR	6318115	MemberAccess	video_enc . flags		6314786	0					
ANR	6318116	Identifier	video_enc		6314786	0					
ANR	6318117	Identifier	flags		6314786	1					
ANR	6318118	Identifier	CODEC_FLAG_4MV		6314786	1					
ANR	6318119	ElseStatement	else		6314786	0					
ANR	6318120	IfStatement	"if ( ! strcasecmp ( cmd , ""AVOptionVideo"" ) || ! strcasecmp ( cmd , ""AVOptionAudio"" ) )"		6314786	0					
ANR	6318121	Condition	"! strcasecmp ( cmd , ""AVOptionVideo"" ) || ! strcasecmp ( cmd , ""AVOptionAudio"" )"	905:19:18615:18704	6314786	0	True				
ANR	6318122	OrExpression	"! strcasecmp ( cmd , ""AVOptionVideo"" ) || ! strcasecmp ( cmd , ""AVOptionAudio"" )"		6314786	0		||			
ANR	6318123	UnaryOperationExpression	"! strcasecmp ( cmd , ""AVOptionVideo"" )"		6314786	0					
ANR	6318124	UnaryOperator	!		6314786	0					
ANR	6318125	CallExpression	"strcasecmp ( cmd , ""AVOptionVideo"" )"		6314786	1					
ANR	6318126	Callee	strcasecmp		6314786	0					
ANR	6318127	Identifier	strcasecmp		6314786	0					
ANR	6318128	ArgumentList	cmd		6314786	1					
ANR	6318129	Argument	cmd		6314786	0					
ANR	6318130	Identifier	cmd		6314786	0					
ANR	6318131	Argument	"""AVOptionVideo"""		6314786	1					
ANR	6318132	PrimaryExpression	"""AVOptionVideo"""		6314786	0					
ANR	6318133	UnaryOperationExpression	"! strcasecmp ( cmd , ""AVOptionAudio"" )"		6314786	1					
ANR	6318134	UnaryOperator	!		6314786	0					
ANR	6318135	CallExpression	"strcasecmp ( cmd , ""AVOptionAudio"" )"		6314786	1					
ANR	6318136	Callee	strcasecmp		6314786	0					
ANR	6318137	Identifier	strcasecmp		6314786	0					
ANR	6318138	ArgumentList	cmd		6314786	1					
ANR	6318139	Argument	cmd		6314786	0					
ANR	6318140	Identifier	cmd		6314786	0					
ANR	6318141	Argument	"""AVOptionAudio"""		6314786	1					
ANR	6318142	PrimaryExpression	"""AVOptionAudio"""		6314786	0					
ANR	6318143	CompoundStatement		911:12:18738:18746	6314786	1					
ANR	6318144	IdentifierDeclStatement	char arg2 [ 1024 ] ;	909:12:18722:18737	6314786	0	True				
ANR	6318145	IdentifierDecl	arg2 [ 1024 ]		6314786	0					
ANR	6318146	IdentifierDeclType	char [ 1024 ]		6314786	0					
ANR	6318147	Identifier	arg2		6314786	1					
ANR	6318148	PrimaryExpression	1024		6314786	2					
ANR	6318149	IdentifierDeclStatement	AVCodecContext * avctx ;	911:12:18752:18773	6314786	1	True				
ANR	6318150	IdentifierDecl	* avctx		6314786	0					
ANR	6318151	IdentifierDeclType	AVCodecContext *		6314786	0					
ANR	6318152	Identifier	avctx		6314786	1					
ANR	6318153	IdentifierDeclStatement	int type ;	913:12:18788:18796	6314786	2	True				
ANR	6318154	IdentifierDecl	type		6314786	0					
ANR	6318155	IdentifierDeclType	int		6314786	0					
ANR	6318156	Identifier	type		6314786	1					
ANR	6318157	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	915:12:18811:18840	6314786	3	True				
ANR	6318158	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318159	Callee	get_arg		6314786	0					
ANR	6318160	Identifier	get_arg		6314786	0					
ANR	6318161	ArgumentList	arg		6314786	1					
ANR	6318162	Argument	arg		6314786	0					
ANR	6318163	Identifier	arg		6314786	0					
ANR	6318164	Argument	sizeof ( arg )		6314786	1					
ANR	6318165	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318166	Sizeof	sizeof		6314786	0					
ANR	6318167	SizeofOperand	arg		6314786	1					
ANR	6318168	Argument	& p		6314786	2					
ANR	6318169	UnaryOperationExpression	& p		6314786	0					
ANR	6318170	UnaryOperator	&		6314786	0					
ANR	6318171	Identifier	p		6314786	1					
ANR	6318172	ExpressionStatement	"get_arg ( arg2 , sizeof ( arg2 ) , & p )"	917:12:18855:18886	6314786	4	True				
ANR	6318173	CallExpression	"get_arg ( arg2 , sizeof ( arg2 ) , & p )"		6314786	0					
ANR	6318174	Callee	get_arg		6314786	0					
ANR	6318175	Identifier	get_arg		6314786	0					
ANR	6318176	ArgumentList	arg2		6314786	1					
ANR	6318177	Argument	arg2		6314786	0					
ANR	6318178	Identifier	arg2		6314786	0					
ANR	6318179	Argument	sizeof ( arg2 )		6314786	1					
ANR	6318180	SizeofExpression	sizeof ( arg2 )		6314786	0					
ANR	6318181	Sizeof	sizeof		6314786	0					
ANR	6318182	SizeofOperand	arg2		6314786	1					
ANR	6318183	Argument	& p		6314786	2					
ANR	6318184	UnaryOperationExpression	& p		6314786	0					
ANR	6318185	UnaryOperator	&		6314786	0					
ANR	6318186	Identifier	p		6314786	1					
ANR	6318187	IfStatement	"if ( ! strcasecmp ( cmd , ""AVOptionVideo"" ) )"		6314786	5					
ANR	6318188	Condition	"! strcasecmp ( cmd , ""AVOptionVideo"" )"	919:16:18905:18937	6314786	0	True				
ANR	6318189	UnaryOperationExpression	"! strcasecmp ( cmd , ""AVOptionVideo"" )"		6314786	0					
ANR	6318190	UnaryOperator	!		6314786	0					
ANR	6318191	CallExpression	"strcasecmp ( cmd , ""AVOptionVideo"" )"		6314786	1					
ANR	6318192	Callee	strcasecmp		6314786	0					
ANR	6318193	Identifier	strcasecmp		6314786	0					
ANR	6318194	ArgumentList	cmd		6314786	1					
ANR	6318195	Argument	cmd		6314786	0					
ANR	6318196	Identifier	cmd		6314786	0					
ANR	6318197	Argument	"""AVOptionVideo"""		6314786	1					
ANR	6318198	PrimaryExpression	"""AVOptionVideo"""		6314786	0					
ANR	6318199	CompoundStatement		917:51:18890:18890	6314786	1					
ANR	6318200	ExpressionStatement	avctx = & video_enc	921:16:18959:18977	6314786	0	True				
ANR	6318201	AssignmentExpression	avctx = & video_enc		6314786	0		=			
ANR	6318202	Identifier	avctx		6314786	0					
ANR	6318203	UnaryOperationExpression	& video_enc		6314786	1					
ANR	6318204	UnaryOperator	&		6314786	0					
ANR	6318205	Identifier	video_enc		6314786	1					
ANR	6318206	ExpressionStatement	type = AV_OPT_FLAG_VIDEO_PARAM	923:16:18996:19026	6314786	1	True				
ANR	6318207	AssignmentExpression	type = AV_OPT_FLAG_VIDEO_PARAM		6314786	0		=			
ANR	6318208	Identifier	type		6314786	0					
ANR	6318209	Identifier	AV_OPT_FLAG_VIDEO_PARAM		6314786	1					
ANR	6318210	ElseStatement	else		6314786	0					
ANR	6318211	CompoundStatement		923:19:18998:18998	6314786	0					
ANR	6318212	ExpressionStatement	avctx = & audio_enc	927:16:19067:19085	6314786	0	True				
ANR	6318213	AssignmentExpression	avctx = & audio_enc		6314786	0		=			
ANR	6318214	Identifier	avctx		6314786	0					
ANR	6318215	UnaryOperationExpression	& audio_enc		6314786	1					
ANR	6318216	UnaryOperator	&		6314786	0					
ANR	6318217	Identifier	audio_enc		6314786	1					
ANR	6318218	ExpressionStatement	type = AV_OPT_FLAG_AUDIO_PARAM	929:16:19104:19134	6314786	1	True				
ANR	6318219	AssignmentExpression	type = AV_OPT_FLAG_AUDIO_PARAM		6314786	0		=			
ANR	6318220	Identifier	type		6314786	0					
ANR	6318221	Identifier	AV_OPT_FLAG_AUDIO_PARAM		6314786	1					
ANR	6318222	IfStatement	"if ( ffserver_opt_default ( arg , arg2 , avctx , type | AV_OPT_FLAG_ENCODING_PARAM ) )"		6314786	6					
ANR	6318223	Condition	"ffserver_opt_default ( arg , arg2 , avctx , type | AV_OPT_FLAG_ENCODING_PARAM )"	933:16:19168:19238	6314786	0	True				
ANR	6318224	CallExpression	"ffserver_opt_default ( arg , arg2 , avctx , type | AV_OPT_FLAG_ENCODING_PARAM )"		6314786	0					
ANR	6318225	Callee	ffserver_opt_default		6314786	0					
ANR	6318226	Identifier	ffserver_opt_default		6314786	0					
ANR	6318227	ArgumentList	arg		6314786	1					
ANR	6318228	Argument	arg		6314786	0					
ANR	6318229	Identifier	arg		6314786	0					
ANR	6318230	Argument	arg2		6314786	1					
ANR	6318231	Identifier	arg2		6314786	0					
ANR	6318232	Argument	avctx		6314786	2					
ANR	6318233	Identifier	avctx		6314786	0					
ANR	6318234	Argument	type | AV_OPT_FLAG_ENCODING_PARAM		6314786	3					
ANR	6318235	InclusiveOrExpression	type | AV_OPT_FLAG_ENCODING_PARAM		6314786	0		|			
ANR	6318236	Identifier	type		6314786	0					
ANR	6318237	Identifier	AV_OPT_FLAG_ENCODING_PARAM		6314786	1					
ANR	6318238	CompoundStatement		931:89:19191:19191	6314786	1					
ANR	6318239	ExpressionStatement	"fprintf ( stderr , ""AVOption error: %s %s\\n"" , arg , arg2 )"	935:16:19260:19313	6314786	0	True				
ANR	6318240	CallExpression	"fprintf ( stderr , ""AVOption error: %s %s\\n"" , arg , arg2 )"		6314786	0					
ANR	6318241	Callee	fprintf		6314786	0					
ANR	6318242	Identifier	fprintf		6314786	0					
ANR	6318243	ArgumentList	stderr		6314786	1					
ANR	6318244	Argument	stderr		6314786	0					
ANR	6318245	Identifier	stderr		6314786	0					
ANR	6318246	Argument	"""AVOption error: %s %s\\n"""		6314786	1					
ANR	6318247	PrimaryExpression	"""AVOption error: %s %s\\n"""		6314786	0					
ANR	6318248	Argument	arg		6314786	2					
ANR	6318249	Identifier	arg		6314786	0					
ANR	6318250	Argument	arg2		6314786	3					
ANR	6318251	Identifier	arg2		6314786	0					
ANR	6318252	ExpressionStatement	errors ++	937:16:19332:19340	6314786	1	True				
ANR	6318253	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6318254	Identifier	errors		6314786	0					
ANR	6318255	IncDec	++		6314786	1					
ANR	6318256	ElseStatement	else		6314786	0					
ANR	6318257	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoTag"" ) )"		6314786	0					
ANR	6318258	Condition	"! strcasecmp ( cmd , ""VideoTag"" )"	941:19:19377:19404	6314786	0	True				
ANR	6318259	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoTag"" )"		6314786	0					
ANR	6318260	UnaryOperator	!		6314786	0					
ANR	6318261	CallExpression	"strcasecmp ( cmd , ""VideoTag"" )"		6314786	1					
ANR	6318262	Callee	strcasecmp		6314786	0					
ANR	6318263	Identifier	strcasecmp		6314786	0					
ANR	6318264	ArgumentList	cmd		6314786	1					
ANR	6318265	Argument	cmd		6314786	0					
ANR	6318266	Identifier	cmd		6314786	0					
ANR	6318267	Argument	"""VideoTag"""		6314786	1					
ANR	6318268	PrimaryExpression	"""VideoTag"""		6314786	0					
ANR	6318269	CompoundStatement		939:49:19357:19357	6314786	1					
ANR	6318270	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	943:12:19422:19451	6314786	0	True				
ANR	6318271	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318272	Callee	get_arg		6314786	0					
ANR	6318273	Identifier	get_arg		6314786	0					
ANR	6318274	ArgumentList	arg		6314786	1					
ANR	6318275	Argument	arg		6314786	0					
ANR	6318276	Identifier	arg		6314786	0					
ANR	6318277	Argument	sizeof ( arg )		6314786	1					
ANR	6318278	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318279	Sizeof	sizeof		6314786	0					
ANR	6318280	SizeofOperand	arg		6314786	1					
ANR	6318281	Argument	& p		6314786	2					
ANR	6318282	UnaryOperationExpression	& p		6314786	0					
ANR	6318283	UnaryOperator	&		6314786	0					
ANR	6318284	Identifier	p		6314786	1					
ANR	6318285	IfStatement	if ( ( strlen ( arg ) == 4 ) && stream )		6314786	1					
ANR	6318286	Condition	( strlen ( arg ) == 4 ) && stream	945:16:19470:19497	6314786	0	True				
ANR	6318287	AndExpression	( strlen ( arg ) == 4 ) && stream		6314786	0		&&			
ANR	6318288	EqualityExpression	strlen ( arg ) == 4		6314786	0		==			
ANR	6318289	CallExpression	strlen ( arg )		6314786	0					
ANR	6318290	Callee	strlen		6314786	0					
ANR	6318291	Identifier	strlen		6314786	0					
ANR	6318292	ArgumentList	arg		6314786	1					
ANR	6318293	Argument	arg		6314786	0					
ANR	6318294	Identifier	arg		6314786	0					
ANR	6318295	PrimaryExpression	4		6314786	1					
ANR	6318296	Identifier	stream		6314786	1					
ANR	6318297	ExpressionStatement	video_enc . codec_tag = AV_RL32 ( arg )	947:16:19517:19551	6314786	1	True				
ANR	6318298	AssignmentExpression	video_enc . codec_tag = AV_RL32 ( arg )		6314786	0		=			
ANR	6318299	MemberAccess	video_enc . codec_tag		6314786	0					
ANR	6318300	Identifier	video_enc		6314786	0					
ANR	6318301	Identifier	codec_tag		6314786	1					
ANR	6318302	CallExpression	AV_RL32 ( arg )		6314786	1					
ANR	6318303	Callee	AV_RL32		6314786	0					
ANR	6318304	Identifier	AV_RL32		6314786	0					
ANR	6318305	ArgumentList	arg		6314786	1					
ANR	6318306	Argument	arg		6314786	0					
ANR	6318307	Identifier	arg		6314786	0					
ANR	6318308	ElseStatement	else		6314786	0					
ANR	6318309	IfStatement	"if ( ! strcasecmp ( cmd , ""BitExact"" ) )"		6314786	0					
ANR	6318310	Condition	"! strcasecmp ( cmd , ""BitExact"" )"	949:19:19573:19600	6314786	0	True				
ANR	6318311	UnaryOperationExpression	"! strcasecmp ( cmd , ""BitExact"" )"		6314786	0					
ANR	6318312	UnaryOperator	!		6314786	0					
ANR	6318313	CallExpression	"strcasecmp ( cmd , ""BitExact"" )"		6314786	1					
ANR	6318314	Callee	strcasecmp		6314786	0					
ANR	6318315	Identifier	strcasecmp		6314786	0					
ANR	6318316	ArgumentList	cmd		6314786	1					
ANR	6318317	Argument	cmd		6314786	0					
ANR	6318318	Identifier	cmd		6314786	0					
ANR	6318319	Argument	"""BitExact"""		6314786	1					
ANR	6318320	PrimaryExpression	"""BitExact"""		6314786	0					
ANR	6318321	CompoundStatement		947:49:19553:19553	6314786	1					
ANR	6318322	IfStatement	if ( stream )		6314786	0					
ANR	6318323	Condition	stream	951:16:19622:19627	6314786	0	True				
ANR	6318324	Identifier	stream		6314786	0					
ANR	6318325	ExpressionStatement	video_enc . flags |= CODEC_FLAG_BITEXACT	953:16:19647:19685	6314786	1	True				
ANR	6318326	AssignmentExpression	video_enc . flags |= CODEC_FLAG_BITEXACT		6314786	0		|=			
ANR	6318327	MemberAccess	video_enc . flags		6314786	0					
ANR	6318328	Identifier	video_enc		6314786	0					
ANR	6318329	Identifier	flags		6314786	1					
ANR	6318330	Identifier	CODEC_FLAG_BITEXACT		6314786	1					
ANR	6318331	ElseStatement	else		6314786	0					
ANR	6318332	IfStatement	"if ( ! strcasecmp ( cmd , ""DctFastint"" ) )"		6314786	0					
ANR	6318333	Condition	"! strcasecmp ( cmd , ""DctFastint"" )"	955:19:19707:19736	6314786	0	True				
ANR	6318334	UnaryOperationExpression	"! strcasecmp ( cmd , ""DctFastint"" )"		6314786	0					
ANR	6318335	UnaryOperator	!		6314786	0					
ANR	6318336	CallExpression	"strcasecmp ( cmd , ""DctFastint"" )"		6314786	1					
ANR	6318337	Callee	strcasecmp		6314786	0					
ANR	6318338	Identifier	strcasecmp		6314786	0					
ANR	6318339	ArgumentList	cmd		6314786	1					
ANR	6318340	Argument	cmd		6314786	0					
ANR	6318341	Identifier	cmd		6314786	0					
ANR	6318342	Argument	"""DctFastint"""		6314786	1					
ANR	6318343	PrimaryExpression	"""DctFastint"""		6314786	0					
ANR	6318344	CompoundStatement		953:51:19689:19689	6314786	1					
ANR	6318345	IfStatement	if ( stream )		6314786	0					
ANR	6318346	Condition	stream	957:16:19758:19763	6314786	0	True				
ANR	6318347	Identifier	stream		6314786	0					
ANR	6318348	ExpressionStatement	video_enc . dct_algo = FF_DCT_FASTINT	959:16:19783:19819	6314786	1	True				
ANR	6318349	AssignmentExpression	video_enc . dct_algo = FF_DCT_FASTINT		6314786	0		=			
ANR	6318350	MemberAccess	video_enc . dct_algo		6314786	0					
ANR	6318351	Identifier	video_enc		6314786	0					
ANR	6318352	Identifier	dct_algo		6314786	1					
ANR	6318353	Identifier	FF_DCT_FASTINT		6314786	1					
ANR	6318354	ElseStatement	else		6314786	0					
ANR	6318355	IfStatement	"if ( ! strcasecmp ( cmd , ""IdctSimple"" ) )"		6314786	0					
ANR	6318356	Condition	"! strcasecmp ( cmd , ""IdctSimple"" )"	961:19:19841:19870	6314786	0	True				
ANR	6318357	UnaryOperationExpression	"! strcasecmp ( cmd , ""IdctSimple"" )"		6314786	0					
ANR	6318358	UnaryOperator	!		6314786	0					
ANR	6318359	CallExpression	"strcasecmp ( cmd , ""IdctSimple"" )"		6314786	1					
ANR	6318360	Callee	strcasecmp		6314786	0					
ANR	6318361	Identifier	strcasecmp		6314786	0					
ANR	6318362	ArgumentList	cmd		6314786	1					
ANR	6318363	Argument	cmd		6314786	0					
ANR	6318364	Identifier	cmd		6314786	0					
ANR	6318365	Argument	"""IdctSimple"""		6314786	1					
ANR	6318366	PrimaryExpression	"""IdctSimple"""		6314786	0					
ANR	6318367	CompoundStatement		959:51:19823:19823	6314786	1					
ANR	6318368	IfStatement	if ( stream )		6314786	0					
ANR	6318369	Condition	stream	963:16:19892:19897	6314786	0	True				
ANR	6318370	Identifier	stream		6314786	0					
ANR	6318371	ExpressionStatement	video_enc . idct_algo = FF_IDCT_SIMPLE	965:16:19917:19953	6314786	1	True				
ANR	6318372	AssignmentExpression	video_enc . idct_algo = FF_IDCT_SIMPLE		6314786	0		=			
ANR	6318373	MemberAccess	video_enc . idct_algo		6314786	0					
ANR	6318374	Identifier	video_enc		6314786	0					
ANR	6318375	Identifier	idct_algo		6314786	1					
ANR	6318376	Identifier	FF_IDCT_SIMPLE		6314786	1					
ANR	6318377	ElseStatement	else		6314786	0					
ANR	6318378	IfStatement	"if ( ! strcasecmp ( cmd , ""Qscale"" ) )"		6314786	0					
ANR	6318379	Condition	"! strcasecmp ( cmd , ""Qscale"" )"	967:19:19975:20000	6314786	0	True				
ANR	6318380	UnaryOperationExpression	"! strcasecmp ( cmd , ""Qscale"" )"		6314786	0					
ANR	6318381	UnaryOperator	!		6314786	0					
ANR	6318382	CallExpression	"strcasecmp ( cmd , ""Qscale"" )"		6314786	1					
ANR	6318383	Callee	strcasecmp		6314786	0					
ANR	6318384	Identifier	strcasecmp		6314786	0					
ANR	6318385	ArgumentList	cmd		6314786	1					
ANR	6318386	Argument	cmd		6314786	0					
ANR	6318387	Identifier	cmd		6314786	0					
ANR	6318388	Argument	"""Qscale"""		6314786	1					
ANR	6318389	PrimaryExpression	"""Qscale"""		6314786	0					
ANR	6318390	CompoundStatement		965:47:19953:19953	6314786	1					
ANR	6318391	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	969:12:20018:20047	6314786	0	True				
ANR	6318392	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318393	Callee	get_arg		6314786	0					
ANR	6318394	Identifier	get_arg		6314786	0					
ANR	6318395	ArgumentList	arg		6314786	1					
ANR	6318396	Argument	arg		6314786	0					
ANR	6318397	Identifier	arg		6314786	0					
ANR	6318398	Argument	sizeof ( arg )		6314786	1					
ANR	6318399	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318400	Sizeof	sizeof		6314786	0					
ANR	6318401	SizeofOperand	arg		6314786	1					
ANR	6318402	Argument	& p		6314786	2					
ANR	6318403	UnaryOperationExpression	& p		6314786	0					
ANR	6318404	UnaryOperator	&		6314786	0					
ANR	6318405	Identifier	p		6314786	1					
ANR	6318406	IfStatement	if ( stream )		6314786	1					
ANR	6318407	Condition	stream	971:16:20066:20071	6314786	0	True				
ANR	6318408	Identifier	stream		6314786	0					
ANR	6318409	CompoundStatement		969:24:20024:20024	6314786	1					
ANR	6318410	ExpressionStatement	video_enc . flags |= CODEC_FLAG_QSCALE	973:16:20093:20129	6314786	0	True				
ANR	6318411	AssignmentExpression	video_enc . flags |= CODEC_FLAG_QSCALE		6314786	0		|=			
ANR	6318412	MemberAccess	video_enc . flags		6314786	0					
ANR	6318413	Identifier	video_enc		6314786	0					
ANR	6318414	Identifier	flags		6314786	1					
ANR	6318415	Identifier	CODEC_FLAG_QSCALE		6314786	1					
ANR	6318416	ExpressionStatement	video_enc . global_quality = FF_QP2LAMBDA * atoi ( arg )	975:16:20148:20199	6314786	1	True				
ANR	6318417	AssignmentExpression	video_enc . global_quality = FF_QP2LAMBDA * atoi ( arg )		6314786	0		=			
ANR	6318418	MemberAccess	video_enc . global_quality		6314786	0					
ANR	6318419	Identifier	video_enc		6314786	0					
ANR	6318420	Identifier	global_quality		6314786	1					
ANR	6318421	MultiplicativeExpression	FF_QP2LAMBDA * atoi ( arg )		6314786	1		*			
ANR	6318422	Identifier	FF_QP2LAMBDA		6314786	0					
ANR	6318423	CallExpression	atoi ( arg )		6314786	1					
ANR	6318424	Callee	atoi		6314786	0					
ANR	6318425	Identifier	atoi		6314786	0					
ANR	6318426	ArgumentList	arg		6314786	1					
ANR	6318427	Argument	arg		6314786	0					
ANR	6318428	Identifier	arg		6314786	0					
ANR	6318429	ElseStatement	else		6314786	0					
ANR	6318430	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoQDiff"" ) )"		6314786	0					
ANR	6318431	Condition	"! strcasecmp ( cmd , ""VideoQDiff"" )"	979:19:20236:20265	6314786	0	True				
ANR	6318432	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoQDiff"" )"		6314786	0					
ANR	6318433	UnaryOperator	!		6314786	0					
ANR	6318434	CallExpression	"strcasecmp ( cmd , ""VideoQDiff"" )"		6314786	1					
ANR	6318435	Callee	strcasecmp		6314786	0					
ANR	6318436	Identifier	strcasecmp		6314786	0					
ANR	6318437	ArgumentList	cmd		6314786	1					
ANR	6318438	Argument	cmd		6314786	0					
ANR	6318439	Identifier	cmd		6314786	0					
ANR	6318440	Argument	"""VideoQDiff"""		6314786	1					
ANR	6318441	PrimaryExpression	"""VideoQDiff"""		6314786	0					
ANR	6318442	CompoundStatement		977:51:20218:20218	6314786	1					
ANR	6318443	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	981:12:20283:20312	6314786	0	True				
ANR	6318444	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318445	Callee	get_arg		6314786	0					
ANR	6318446	Identifier	get_arg		6314786	0					
ANR	6318447	ArgumentList	arg		6314786	1					
ANR	6318448	Argument	arg		6314786	0					
ANR	6318449	Identifier	arg		6314786	0					
ANR	6318450	Argument	sizeof ( arg )		6314786	1					
ANR	6318451	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318452	Sizeof	sizeof		6314786	0					
ANR	6318453	SizeofOperand	arg		6314786	1					
ANR	6318454	Argument	& p		6314786	2					
ANR	6318455	UnaryOperationExpression	& p		6314786	0					
ANR	6318456	UnaryOperator	&		6314786	0					
ANR	6318457	Identifier	p		6314786	1					
ANR	6318458	IfStatement	if ( stream )		6314786	1					
ANR	6318459	Condition	stream	983:16:20331:20336	6314786	0	True				
ANR	6318460	Identifier	stream		6314786	0					
ANR	6318461	CompoundStatement		981:24:20289:20289	6314786	1					
ANR	6318462	ExpressionStatement	video_enc . max_qdiff = atoi ( arg )	985:16:20358:20389	6314786	0	True				
ANR	6318463	AssignmentExpression	video_enc . max_qdiff = atoi ( arg )		6314786	0		=			
ANR	6318464	MemberAccess	video_enc . max_qdiff		6314786	0					
ANR	6318465	Identifier	video_enc		6314786	0					
ANR	6318466	Identifier	max_qdiff		6314786	1					
ANR	6318467	CallExpression	atoi ( arg )		6314786	1					
ANR	6318468	Callee	atoi		6314786	0					
ANR	6318469	Identifier	atoi		6314786	0					
ANR	6318470	ArgumentList	arg		6314786	1					
ANR	6318471	Argument	arg		6314786	0					
ANR	6318472	Identifier	arg		6314786	0					
ANR	6318473	IfStatement	if ( video_enc . max_qdiff < 1 || video_enc . max_qdiff > 31 )		6314786	1					
ANR	6318474	Condition	video_enc . max_qdiff < 1 || video_enc . max_qdiff > 31	987:20:20412:20462	6314786	0	True				
ANR	6318475	OrExpression	video_enc . max_qdiff < 1 || video_enc . max_qdiff > 31		6314786	0		||			
ANR	6318476	RelationalExpression	video_enc . max_qdiff < 1		6314786	0		<			
ANR	6318477	MemberAccess	video_enc . max_qdiff		6314786	0					
ANR	6318478	Identifier	video_enc		6314786	0					
ANR	6318479	Identifier	max_qdiff		6314786	1					
ANR	6318480	PrimaryExpression	1		6314786	1					
ANR	6318481	RelationalExpression	video_enc . max_qdiff > 31		6314786	1		>			
ANR	6318482	MemberAccess	video_enc . max_qdiff		6314786	0					
ANR	6318483	Identifier	video_enc		6314786	0					
ANR	6318484	Identifier	max_qdiff		6314786	1					
ANR	6318485	PrimaryExpression	31		6314786	1					
ANR	6318486	CompoundStatement		985:73:20415:20415	6314786	1					
ANR	6318487	ExpressionStatement	"fprintf ( stderr , ""%s:%d: VideoQDiff out of range\\n"" , filename , line_num )"	989:20:20488:20588	6314786	0	True				
ANR	6318488	CallExpression	"fprintf ( stderr , ""%s:%d: VideoQDiff out of range\\n"" , filename , line_num )"		6314786	0					
ANR	6318489	Callee	fprintf		6314786	0					
ANR	6318490	Identifier	fprintf		6314786	0					
ANR	6318491	ArgumentList	stderr		6314786	1					
ANR	6318492	Argument	stderr		6314786	0					
ANR	6318493	Identifier	stderr		6314786	0					
ANR	6318494	Argument	"""%s:%d: VideoQDiff out of range\\n"""		6314786	1					
ANR	6318495	PrimaryExpression	"""%s:%d: VideoQDiff out of range\\n"""		6314786	0					
ANR	6318496	Argument	filename		6314786	2					
ANR	6318497	Identifier	filename		6314786	0					
ANR	6318498	Argument	line_num		6314786	3					
ANR	6318499	Identifier	line_num		6314786	0					
ANR	6318500	ExpressionStatement	errors ++	993:20:20611:20619	6314786	1	True				
ANR	6318501	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6318502	Identifier	errors		6314786	0					
ANR	6318503	IncDec	++		6314786	1					
ANR	6318504	ElseStatement	else		6314786	0					
ANR	6318505	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoQMax"" ) )"		6314786	0					
ANR	6318506	Condition	"! strcasecmp ( cmd , ""VideoQMax"" )"	999:19:20675:20703	6314786	0	True				
ANR	6318507	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoQMax"" )"		6314786	0					
ANR	6318508	UnaryOperator	!		6314786	0					
ANR	6318509	CallExpression	"strcasecmp ( cmd , ""VideoQMax"" )"		6314786	1					
ANR	6318510	Callee	strcasecmp		6314786	0					
ANR	6318511	Identifier	strcasecmp		6314786	0					
ANR	6318512	ArgumentList	cmd		6314786	1					
ANR	6318513	Argument	cmd		6314786	0					
ANR	6318514	Identifier	cmd		6314786	0					
ANR	6318515	Argument	"""VideoQMax"""		6314786	1					
ANR	6318516	PrimaryExpression	"""VideoQMax"""		6314786	0					
ANR	6318517	CompoundStatement		997:50:20656:20656	6314786	1					
ANR	6318518	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1001:12:20721:20750	6314786	0	True				
ANR	6318519	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318520	Callee	get_arg		6314786	0					
ANR	6318521	Identifier	get_arg		6314786	0					
ANR	6318522	ArgumentList	arg		6314786	1					
ANR	6318523	Argument	arg		6314786	0					
ANR	6318524	Identifier	arg		6314786	0					
ANR	6318525	Argument	sizeof ( arg )		6314786	1					
ANR	6318526	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318527	Sizeof	sizeof		6314786	0					
ANR	6318528	SizeofOperand	arg		6314786	1					
ANR	6318529	Argument	& p		6314786	2					
ANR	6318530	UnaryOperationExpression	& p		6314786	0					
ANR	6318531	UnaryOperator	&		6314786	0					
ANR	6318532	Identifier	p		6314786	1					
ANR	6318533	IfStatement	if ( stream )		6314786	1					
ANR	6318534	Condition	stream	1003:16:20769:20774	6314786	0	True				
ANR	6318535	Identifier	stream		6314786	0					
ANR	6318536	CompoundStatement		1001:24:20727:20727	6314786	1					
ANR	6318537	ExpressionStatement	video_enc . qmax = atoi ( arg )	1005:16:20796:20822	6314786	0	True				
ANR	6318538	AssignmentExpression	video_enc . qmax = atoi ( arg )		6314786	0		=			
ANR	6318539	MemberAccess	video_enc . qmax		6314786	0					
ANR	6318540	Identifier	video_enc		6314786	0					
ANR	6318541	Identifier	qmax		6314786	1					
ANR	6318542	CallExpression	atoi ( arg )		6314786	1					
ANR	6318543	Callee	atoi		6314786	0					
ANR	6318544	Identifier	atoi		6314786	0					
ANR	6318545	ArgumentList	arg		6314786	1					
ANR	6318546	Argument	arg		6314786	0					
ANR	6318547	Identifier	arg		6314786	0					
ANR	6318548	IfStatement	if ( video_enc . qmax < 1 || video_enc . qmax > 31 )		6314786	1					
ANR	6318549	Condition	video_enc . qmax < 1 || video_enc . qmax > 31	1007:20:20845:20885	6314786	0	True				
ANR	6318550	OrExpression	video_enc . qmax < 1 || video_enc . qmax > 31		6314786	0		||			
ANR	6318551	RelationalExpression	video_enc . qmax < 1		6314786	0		<			
ANR	6318552	MemberAccess	video_enc . qmax		6314786	0					
ANR	6318553	Identifier	video_enc		6314786	0					
ANR	6318554	Identifier	qmax		6314786	1					
ANR	6318555	PrimaryExpression	1		6314786	1					
ANR	6318556	RelationalExpression	video_enc . qmax > 31		6314786	1		>			
ANR	6318557	MemberAccess	video_enc . qmax		6314786	0					
ANR	6318558	Identifier	video_enc		6314786	0					
ANR	6318559	Identifier	qmax		6314786	1					
ANR	6318560	PrimaryExpression	31		6314786	1					
ANR	6318561	CompoundStatement		1005:63:20838:20838	6314786	1					
ANR	6318562	ExpressionStatement	"fprintf ( stderr , ""%s:%d: VideoQMax out of range\\n"" , filename , line_num )"	1009:20:20911:21010	6314786	0	True				
ANR	6318563	CallExpression	"fprintf ( stderr , ""%s:%d: VideoQMax out of range\\n"" , filename , line_num )"		6314786	0					
ANR	6318564	Callee	fprintf		6314786	0					
ANR	6318565	Identifier	fprintf		6314786	0					
ANR	6318566	ArgumentList	stderr		6314786	1					
ANR	6318567	Argument	stderr		6314786	0					
ANR	6318568	Identifier	stderr		6314786	0					
ANR	6318569	Argument	"""%s:%d: VideoQMax out of range\\n"""		6314786	1					
ANR	6318570	PrimaryExpression	"""%s:%d: VideoQMax out of range\\n"""		6314786	0					
ANR	6318571	Argument	filename		6314786	2					
ANR	6318572	Identifier	filename		6314786	0					
ANR	6318573	Argument	line_num		6314786	3					
ANR	6318574	Identifier	line_num		6314786	0					
ANR	6318575	ExpressionStatement	errors ++	1013:20:21033:21041	6314786	1	True				
ANR	6318576	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6318577	Identifier	errors		6314786	0					
ANR	6318578	IncDec	++		6314786	1					
ANR	6318579	ElseStatement	else		6314786	0					
ANR	6318580	IfStatement	"if ( ! strcasecmp ( cmd , ""VideoQMin"" ) )"		6314786	0					
ANR	6318581	Condition	"! strcasecmp ( cmd , ""VideoQMin"" )"	1019:19:21097:21125	6314786	0	True				
ANR	6318582	UnaryOperationExpression	"! strcasecmp ( cmd , ""VideoQMin"" )"		6314786	0					
ANR	6318583	UnaryOperator	!		6314786	0					
ANR	6318584	CallExpression	"strcasecmp ( cmd , ""VideoQMin"" )"		6314786	1					
ANR	6318585	Callee	strcasecmp		6314786	0					
ANR	6318586	Identifier	strcasecmp		6314786	0					
ANR	6318587	ArgumentList	cmd		6314786	1					
ANR	6318588	Argument	cmd		6314786	0					
ANR	6318589	Identifier	cmd		6314786	0					
ANR	6318590	Argument	"""VideoQMin"""		6314786	1					
ANR	6318591	PrimaryExpression	"""VideoQMin"""		6314786	0					
ANR	6318592	CompoundStatement		1017:50:21078:21078	6314786	1					
ANR	6318593	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1021:12:21143:21172	6314786	0	True				
ANR	6318594	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318595	Callee	get_arg		6314786	0					
ANR	6318596	Identifier	get_arg		6314786	0					
ANR	6318597	ArgumentList	arg		6314786	1					
ANR	6318598	Argument	arg		6314786	0					
ANR	6318599	Identifier	arg		6314786	0					
ANR	6318600	Argument	sizeof ( arg )		6314786	1					
ANR	6318601	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318602	Sizeof	sizeof		6314786	0					
ANR	6318603	SizeofOperand	arg		6314786	1					
ANR	6318604	Argument	& p		6314786	2					
ANR	6318605	UnaryOperationExpression	& p		6314786	0					
ANR	6318606	UnaryOperator	&		6314786	0					
ANR	6318607	Identifier	p		6314786	1					
ANR	6318608	IfStatement	if ( stream )		6314786	1					
ANR	6318609	Condition	stream	1023:16:21191:21196	6314786	0	True				
ANR	6318610	Identifier	stream		6314786	0					
ANR	6318611	CompoundStatement		1021:24:21149:21149	6314786	1					
ANR	6318612	ExpressionStatement	video_enc . qmin = atoi ( arg )	1025:16:21218:21244	6314786	0	True				
ANR	6318613	AssignmentExpression	video_enc . qmin = atoi ( arg )		6314786	0		=			
ANR	6318614	MemberAccess	video_enc . qmin		6314786	0					
ANR	6318615	Identifier	video_enc		6314786	0					
ANR	6318616	Identifier	qmin		6314786	1					
ANR	6318617	CallExpression	atoi ( arg )		6314786	1					
ANR	6318618	Callee	atoi		6314786	0					
ANR	6318619	Identifier	atoi		6314786	0					
ANR	6318620	ArgumentList	arg		6314786	1					
ANR	6318621	Argument	arg		6314786	0					
ANR	6318622	Identifier	arg		6314786	0					
ANR	6318623	IfStatement	if ( video_enc . qmin < 1 || video_enc . qmin > 31 )		6314786	1					
ANR	6318624	Condition	video_enc . qmin < 1 || video_enc . qmin > 31	1027:20:21267:21307	6314786	0	True				
ANR	6318625	OrExpression	video_enc . qmin < 1 || video_enc . qmin > 31		6314786	0		||			
ANR	6318626	RelationalExpression	video_enc . qmin < 1		6314786	0		<			
ANR	6318627	MemberAccess	video_enc . qmin		6314786	0					
ANR	6318628	Identifier	video_enc		6314786	0					
ANR	6318629	Identifier	qmin		6314786	1					
ANR	6318630	PrimaryExpression	1		6314786	1					
ANR	6318631	RelationalExpression	video_enc . qmin > 31		6314786	1		>			
ANR	6318632	MemberAccess	video_enc . qmin		6314786	0					
ANR	6318633	Identifier	video_enc		6314786	0					
ANR	6318634	Identifier	qmin		6314786	1					
ANR	6318635	PrimaryExpression	31		6314786	1					
ANR	6318636	CompoundStatement		1025:63:21260:21260	6314786	1					
ANR	6318637	ExpressionStatement	"fprintf ( stderr , ""%s:%d: VideoQMin out of range\\n"" , filename , line_num )"	1029:20:21333:21432	6314786	0	True				
ANR	6318638	CallExpression	"fprintf ( stderr , ""%s:%d: VideoQMin out of range\\n"" , filename , line_num )"		6314786	0					
ANR	6318639	Callee	fprintf		6314786	0					
ANR	6318640	Identifier	fprintf		6314786	0					
ANR	6318641	ArgumentList	stderr		6314786	1					
ANR	6318642	Argument	stderr		6314786	0					
ANR	6318643	Identifier	stderr		6314786	0					
ANR	6318644	Argument	"""%s:%d: VideoQMin out of range\\n"""		6314786	1					
ANR	6318645	PrimaryExpression	"""%s:%d: VideoQMin out of range\\n"""		6314786	0					
ANR	6318646	Argument	filename		6314786	2					
ANR	6318647	Identifier	filename		6314786	0					
ANR	6318648	Argument	line_num		6314786	3					
ANR	6318649	Identifier	line_num		6314786	0					
ANR	6318650	ExpressionStatement	errors ++	1033:20:21455:21463	6314786	1	True				
ANR	6318651	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6318652	Identifier	errors		6314786	0					
ANR	6318653	IncDec	++		6314786	1					
ANR	6318654	ElseStatement	else		6314786	0					
ANR	6318655	IfStatement	"if ( ! strcasecmp ( cmd , ""LumaElim"" ) )"		6314786	0					
ANR	6318656	Condition	"! strcasecmp ( cmd , ""LumaElim"" )"	1039:19:21519:21546	6314786	0	True				
ANR	6318657	UnaryOperationExpression	"! strcasecmp ( cmd , ""LumaElim"" )"		6314786	0					
ANR	6318658	UnaryOperator	!		6314786	0					
ANR	6318659	CallExpression	"strcasecmp ( cmd , ""LumaElim"" )"		6314786	1					
ANR	6318660	Callee	strcasecmp		6314786	0					
ANR	6318661	Identifier	strcasecmp		6314786	0					
ANR	6318662	ArgumentList	cmd		6314786	1					
ANR	6318663	Argument	cmd		6314786	0					
ANR	6318664	Identifier	cmd		6314786	0					
ANR	6318665	Argument	"""LumaElim"""		6314786	1					
ANR	6318666	PrimaryExpression	"""LumaElim"""		6314786	0					
ANR	6318667	CompoundStatement		1037:49:21499:21499	6314786	1					
ANR	6318668	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1041:12:21564:21593	6314786	0	True				
ANR	6318669	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318670	Callee	get_arg		6314786	0					
ANR	6318671	Identifier	get_arg		6314786	0					
ANR	6318672	ArgumentList	arg		6314786	1					
ANR	6318673	Argument	arg		6314786	0					
ANR	6318674	Identifier	arg		6314786	0					
ANR	6318675	Argument	sizeof ( arg )		6314786	1					
ANR	6318676	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318677	Sizeof	sizeof		6314786	0					
ANR	6318678	SizeofOperand	arg		6314786	1					
ANR	6318679	Argument	& p		6314786	2					
ANR	6318680	UnaryOperationExpression	& p		6314786	0					
ANR	6318681	UnaryOperator	&		6314786	0					
ANR	6318682	Identifier	p		6314786	1					
ANR	6318683	IfStatement	if ( stream )		6314786	1					
ANR	6318684	Condition	stream	1043:16:21612:21617	6314786	0	True				
ANR	6318685	Identifier	stream		6314786	0					
ANR	6318686	ExpressionStatement	video_enc . luma_elim_threshold = atoi ( arg )	1045:16:21637:21678	6314786	1	True				
ANR	6318687	AssignmentExpression	video_enc . luma_elim_threshold = atoi ( arg )		6314786	0		=			
ANR	6318688	MemberAccess	video_enc . luma_elim_threshold		6314786	0					
ANR	6318689	Identifier	video_enc		6314786	0					
ANR	6318690	Identifier	luma_elim_threshold		6314786	1					
ANR	6318691	CallExpression	atoi ( arg )		6314786	1					
ANR	6318692	Callee	atoi		6314786	0					
ANR	6318693	Identifier	atoi		6314786	0					
ANR	6318694	ArgumentList	arg		6314786	1					
ANR	6318695	Argument	arg		6314786	0					
ANR	6318696	Identifier	arg		6314786	0					
ANR	6318697	ElseStatement	else		6314786	0					
ANR	6318698	IfStatement	"if ( ! strcasecmp ( cmd , ""ChromaElim"" ) )"		6314786	0					
ANR	6318699	Condition	"! strcasecmp ( cmd , ""ChromaElim"" )"	1047:19:21700:21729	6314786	0	True				
ANR	6318700	UnaryOperationExpression	"! strcasecmp ( cmd , ""ChromaElim"" )"		6314786	0					
ANR	6318701	UnaryOperator	!		6314786	0					
ANR	6318702	CallExpression	"strcasecmp ( cmd , ""ChromaElim"" )"		6314786	1					
ANR	6318703	Callee	strcasecmp		6314786	0					
ANR	6318704	Identifier	strcasecmp		6314786	0					
ANR	6318705	ArgumentList	cmd		6314786	1					
ANR	6318706	Argument	cmd		6314786	0					
ANR	6318707	Identifier	cmd		6314786	0					
ANR	6318708	Argument	"""ChromaElim"""		6314786	1					
ANR	6318709	PrimaryExpression	"""ChromaElim"""		6314786	0					
ANR	6318710	CompoundStatement		1045:51:21682:21682	6314786	1					
ANR	6318711	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1049:12:21747:21776	6314786	0	True				
ANR	6318712	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318713	Callee	get_arg		6314786	0					
ANR	6318714	Identifier	get_arg		6314786	0					
ANR	6318715	ArgumentList	arg		6314786	1					
ANR	6318716	Argument	arg		6314786	0					
ANR	6318717	Identifier	arg		6314786	0					
ANR	6318718	Argument	sizeof ( arg )		6314786	1					
ANR	6318719	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318720	Sizeof	sizeof		6314786	0					
ANR	6318721	SizeofOperand	arg		6314786	1					
ANR	6318722	Argument	& p		6314786	2					
ANR	6318723	UnaryOperationExpression	& p		6314786	0					
ANR	6318724	UnaryOperator	&		6314786	0					
ANR	6318725	Identifier	p		6314786	1					
ANR	6318726	IfStatement	if ( stream )		6314786	1					
ANR	6318727	Condition	stream	1051:16:21795:21800	6314786	0	True				
ANR	6318728	Identifier	stream		6314786	0					
ANR	6318729	ExpressionStatement	video_enc . chroma_elim_threshold = atoi ( arg )	1053:16:21820:21863	6314786	1	True				
ANR	6318730	AssignmentExpression	video_enc . chroma_elim_threshold = atoi ( arg )		6314786	0		=			
ANR	6318731	MemberAccess	video_enc . chroma_elim_threshold		6314786	0					
ANR	6318732	Identifier	video_enc		6314786	0					
ANR	6318733	Identifier	chroma_elim_threshold		6314786	1					
ANR	6318734	CallExpression	atoi ( arg )		6314786	1					
ANR	6318735	Callee	atoi		6314786	0					
ANR	6318736	Identifier	atoi		6314786	0					
ANR	6318737	ArgumentList	arg		6314786	1					
ANR	6318738	Argument	arg		6314786	0					
ANR	6318739	Identifier	arg		6314786	0					
ANR	6318740	ElseStatement	else		6314786	0					
ANR	6318741	IfStatement	"if ( ! strcasecmp ( cmd , ""LumiMask"" ) )"		6314786	0					
ANR	6318742	Condition	"! strcasecmp ( cmd , ""LumiMask"" )"	1055:19:21885:21912	6314786	0	True				
ANR	6318743	UnaryOperationExpression	"! strcasecmp ( cmd , ""LumiMask"" )"		6314786	0					
ANR	6318744	UnaryOperator	!		6314786	0					
ANR	6318745	CallExpression	"strcasecmp ( cmd , ""LumiMask"" )"		6314786	1					
ANR	6318746	Callee	strcasecmp		6314786	0					
ANR	6318747	Identifier	strcasecmp		6314786	0					
ANR	6318748	ArgumentList	cmd		6314786	1					
ANR	6318749	Argument	cmd		6314786	0					
ANR	6318750	Identifier	cmd		6314786	0					
ANR	6318751	Argument	"""LumiMask"""		6314786	1					
ANR	6318752	PrimaryExpression	"""LumiMask"""		6314786	0					
ANR	6318753	CompoundStatement		1053:49:21865:21865	6314786	1					
ANR	6318754	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1057:12:21930:21959	6314786	0	True				
ANR	6318755	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318756	Callee	get_arg		6314786	0					
ANR	6318757	Identifier	get_arg		6314786	0					
ANR	6318758	ArgumentList	arg		6314786	1					
ANR	6318759	Argument	arg		6314786	0					
ANR	6318760	Identifier	arg		6314786	0					
ANR	6318761	Argument	sizeof ( arg )		6314786	1					
ANR	6318762	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318763	Sizeof	sizeof		6314786	0					
ANR	6318764	SizeofOperand	arg		6314786	1					
ANR	6318765	Argument	& p		6314786	2					
ANR	6318766	UnaryOperationExpression	& p		6314786	0					
ANR	6318767	UnaryOperator	&		6314786	0					
ANR	6318768	Identifier	p		6314786	1					
ANR	6318769	IfStatement	if ( stream )		6314786	1					
ANR	6318770	Condition	stream	1059:16:21978:21983	6314786	0	True				
ANR	6318771	Identifier	stream		6314786	0					
ANR	6318772	ExpressionStatement	video_enc . lumi_masking = atof ( arg )	1061:16:22003:22037	6314786	1	True				
ANR	6318773	AssignmentExpression	video_enc . lumi_masking = atof ( arg )		6314786	0		=			
ANR	6318774	MemberAccess	video_enc . lumi_masking		6314786	0					
ANR	6318775	Identifier	video_enc		6314786	0					
ANR	6318776	Identifier	lumi_masking		6314786	1					
ANR	6318777	CallExpression	atof ( arg )		6314786	1					
ANR	6318778	Callee	atof		6314786	0					
ANR	6318779	Identifier	atof		6314786	0					
ANR	6318780	ArgumentList	arg		6314786	1					
ANR	6318781	Argument	arg		6314786	0					
ANR	6318782	Identifier	arg		6314786	0					
ANR	6318783	ElseStatement	else		6314786	0					
ANR	6318784	IfStatement	"if ( ! strcasecmp ( cmd , ""DarkMask"" ) )"		6314786	0					
ANR	6318785	Condition	"! strcasecmp ( cmd , ""DarkMask"" )"	1063:19:22059:22086	6314786	0	True				
ANR	6318786	UnaryOperationExpression	"! strcasecmp ( cmd , ""DarkMask"" )"		6314786	0					
ANR	6318787	UnaryOperator	!		6314786	0					
ANR	6318788	CallExpression	"strcasecmp ( cmd , ""DarkMask"" )"		6314786	1					
ANR	6318789	Callee	strcasecmp		6314786	0					
ANR	6318790	Identifier	strcasecmp		6314786	0					
ANR	6318791	ArgumentList	cmd		6314786	1					
ANR	6318792	Argument	cmd		6314786	0					
ANR	6318793	Identifier	cmd		6314786	0					
ANR	6318794	Argument	"""DarkMask"""		6314786	1					
ANR	6318795	PrimaryExpression	"""DarkMask"""		6314786	0					
ANR	6318796	CompoundStatement		1061:49:22039:22039	6314786	1					
ANR	6318797	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1065:12:22104:22133	6314786	0	True				
ANR	6318798	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318799	Callee	get_arg		6314786	0					
ANR	6318800	Identifier	get_arg		6314786	0					
ANR	6318801	ArgumentList	arg		6314786	1					
ANR	6318802	Argument	arg		6314786	0					
ANR	6318803	Identifier	arg		6314786	0					
ANR	6318804	Argument	sizeof ( arg )		6314786	1					
ANR	6318805	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318806	Sizeof	sizeof		6314786	0					
ANR	6318807	SizeofOperand	arg		6314786	1					
ANR	6318808	Argument	& p		6314786	2					
ANR	6318809	UnaryOperationExpression	& p		6314786	0					
ANR	6318810	UnaryOperator	&		6314786	0					
ANR	6318811	Identifier	p		6314786	1					
ANR	6318812	IfStatement	if ( stream )		6314786	1					
ANR	6318813	Condition	stream	1067:16:22152:22157	6314786	0	True				
ANR	6318814	Identifier	stream		6314786	0					
ANR	6318815	ExpressionStatement	video_enc . dark_masking = atof ( arg )	1069:16:22177:22211	6314786	1	True				
ANR	6318816	AssignmentExpression	video_enc . dark_masking = atof ( arg )		6314786	0		=			
ANR	6318817	MemberAccess	video_enc . dark_masking		6314786	0					
ANR	6318818	Identifier	video_enc		6314786	0					
ANR	6318819	Identifier	dark_masking		6314786	1					
ANR	6318820	CallExpression	atof ( arg )		6314786	1					
ANR	6318821	Callee	atof		6314786	0					
ANR	6318822	Identifier	atof		6314786	0					
ANR	6318823	ArgumentList	arg		6314786	1					
ANR	6318824	Argument	arg		6314786	0					
ANR	6318825	Identifier	arg		6314786	0					
ANR	6318826	ElseStatement	else		6314786	0					
ANR	6318827	IfStatement	"if ( ! strcasecmp ( cmd , ""NoVideo"" ) )"		6314786	0					
ANR	6318828	Condition	"! strcasecmp ( cmd , ""NoVideo"" )"	1071:19:22233:22259	6314786	0	True				
ANR	6318829	UnaryOperationExpression	"! strcasecmp ( cmd , ""NoVideo"" )"		6314786	0					
ANR	6318830	UnaryOperator	!		6314786	0					
ANR	6318831	CallExpression	"strcasecmp ( cmd , ""NoVideo"" )"		6314786	1					
ANR	6318832	Callee	strcasecmp		6314786	0					
ANR	6318833	Identifier	strcasecmp		6314786	0					
ANR	6318834	ArgumentList	cmd		6314786	1					
ANR	6318835	Argument	cmd		6314786	0					
ANR	6318836	Identifier	cmd		6314786	0					
ANR	6318837	Argument	"""NoVideo"""		6314786	1					
ANR	6318838	PrimaryExpression	"""NoVideo"""		6314786	0					
ANR	6318839	CompoundStatement		1069:48:22212:22212	6314786	1					
ANR	6318840	ExpressionStatement	video_id = CODEC_ID_NONE	1073:12:22277:22301	6314786	0	True				
ANR	6318841	AssignmentExpression	video_id = CODEC_ID_NONE		6314786	0		=			
ANR	6318842	Identifier	video_id		6314786	0					
ANR	6318843	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6318844	ElseStatement	else		6314786	0					
ANR	6318845	IfStatement	"if ( ! strcasecmp ( cmd , ""NoAudio"" ) )"		6314786	0					
ANR	6318846	Condition	"! strcasecmp ( cmd , ""NoAudio"" )"	1075:19:22323:22349	6314786	0	True				
ANR	6318847	UnaryOperationExpression	"! strcasecmp ( cmd , ""NoAudio"" )"		6314786	0					
ANR	6318848	UnaryOperator	!		6314786	0					
ANR	6318849	CallExpression	"strcasecmp ( cmd , ""NoAudio"" )"		6314786	1					
ANR	6318850	Callee	strcasecmp		6314786	0					
ANR	6318851	Identifier	strcasecmp		6314786	0					
ANR	6318852	ArgumentList	cmd		6314786	1					
ANR	6318853	Argument	cmd		6314786	0					
ANR	6318854	Identifier	cmd		6314786	0					
ANR	6318855	Argument	"""NoAudio"""		6314786	1					
ANR	6318856	PrimaryExpression	"""NoAudio"""		6314786	0					
ANR	6318857	CompoundStatement		1073:48:22302:22302	6314786	1					
ANR	6318858	ExpressionStatement	audio_id = CODEC_ID_NONE	1077:12:22367:22391	6314786	0	True				
ANR	6318859	AssignmentExpression	audio_id = CODEC_ID_NONE		6314786	0		=			
ANR	6318860	Identifier	audio_id		6314786	0					
ANR	6318861	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6318862	ElseStatement	else		6314786	0					
ANR	6318863	IfStatement	"if ( ! strcasecmp ( cmd , ""ACL"" ) )"		6314786	0					
ANR	6318864	Condition	"! strcasecmp ( cmd , ""ACL"" )"	1079:19:22413:22435	6314786	0	True				
ANR	6318865	UnaryOperationExpression	"! strcasecmp ( cmd , ""ACL"" )"		6314786	0					
ANR	6318866	UnaryOperator	!		6314786	0					
ANR	6318867	CallExpression	"strcasecmp ( cmd , ""ACL"" )"		6314786	1					
ANR	6318868	Callee	strcasecmp		6314786	0					
ANR	6318869	Identifier	strcasecmp		6314786	0					
ANR	6318870	ArgumentList	cmd		6314786	1					
ANR	6318871	Argument	cmd		6314786	0					
ANR	6318872	Identifier	cmd		6314786	0					
ANR	6318873	Argument	"""ACL"""		6314786	1					
ANR	6318874	PrimaryExpression	"""ACL"""		6314786	0					
ANR	6318875	CompoundStatement		1079:12:22403:22419	6314786	1					
ANR	6318876	IdentifierDeclStatement	IPAddressACL acl ;	1081:12:22453:22469	6314786	0	True				
ANR	6318877	IdentifierDecl	acl		6314786	0					
ANR	6318878	IdentifierDeclType	IPAddressACL		6314786	0					
ANR	6318879	Identifier	acl		6314786	1					
ANR	6318880	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1085:12:22486:22515	6314786	1	True				
ANR	6318881	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318882	Callee	get_arg		6314786	0					
ANR	6318883	Identifier	get_arg		6314786	0					
ANR	6318884	ArgumentList	arg		6314786	1					
ANR	6318885	Argument	arg		6314786	0					
ANR	6318886	Identifier	arg		6314786	0					
ANR	6318887	Argument	sizeof ( arg )		6314786	1					
ANR	6318888	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318889	Sizeof	sizeof		6314786	0					
ANR	6318890	SizeofOperand	arg		6314786	1					
ANR	6318891	Argument	& p		6314786	2					
ANR	6318892	UnaryOperationExpression	& p		6314786	0					
ANR	6318893	UnaryOperator	&		6314786	0					
ANR	6318894	Identifier	p		6314786	1					
ANR	6318895	IfStatement	"if ( strcasecmp ( arg , ""allow"" ) == 0 )"		6314786	2					
ANR	6318896	Condition	"strcasecmp ( arg , ""allow"" ) == 0"	1087:16:22534:22562	6314786	0	True				
ANR	6318897	EqualityExpression	"strcasecmp ( arg , ""allow"" ) == 0"		6314786	0		==			
ANR	6318898	CallExpression	"strcasecmp ( arg , ""allow"" )"		6314786	0					
ANR	6318899	Callee	strcasecmp		6314786	0					
ANR	6318900	Identifier	strcasecmp		6314786	0					
ANR	6318901	ArgumentList	arg		6314786	1					
ANR	6318902	Argument	arg		6314786	0					
ANR	6318903	Identifier	arg		6314786	0					
ANR	6318904	Argument	"""allow"""		6314786	1					
ANR	6318905	PrimaryExpression	"""allow"""		6314786	0					
ANR	6318906	PrimaryExpression	0		6314786	1					
ANR	6318907	ExpressionStatement	acl . action = IP_ALLOW	1089:16:22582:22603	6314786	1	True				
ANR	6318908	AssignmentExpression	acl . action = IP_ALLOW		6314786	0		=			
ANR	6318909	MemberAccess	acl . action		6314786	0					
ANR	6318910	Identifier	acl		6314786	0					
ANR	6318911	Identifier	action		6314786	1					
ANR	6318912	Identifier	IP_ALLOW		6314786	1					
ANR	6318913	ElseStatement	else		6314786	0					
ANR	6318914	IfStatement	"if ( strcasecmp ( arg , ""deny"" ) == 0 )"		6314786	0					
ANR	6318915	Condition	"strcasecmp ( arg , ""deny"" ) == 0"	1091:21:22627:22654	6314786	0	True				
ANR	6318916	EqualityExpression	"strcasecmp ( arg , ""deny"" ) == 0"		6314786	0		==			
ANR	6318917	CallExpression	"strcasecmp ( arg , ""deny"" )"		6314786	0					
ANR	6318918	Callee	strcasecmp		6314786	0					
ANR	6318919	Identifier	strcasecmp		6314786	0					
ANR	6318920	ArgumentList	arg		6314786	1					
ANR	6318921	Argument	arg		6314786	0					
ANR	6318922	Identifier	arg		6314786	0					
ANR	6318923	Argument	"""deny"""		6314786	1					
ANR	6318924	PrimaryExpression	"""deny"""		6314786	0					
ANR	6318925	PrimaryExpression	0		6314786	1					
ANR	6318926	ExpressionStatement	acl . action = IP_DENY	1093:16:22674:22694	6314786	1	True				
ANR	6318927	AssignmentExpression	acl . action = IP_DENY		6314786	0		=			
ANR	6318928	MemberAccess	acl . action		6314786	0					
ANR	6318929	Identifier	acl		6314786	0					
ANR	6318930	Identifier	action		6314786	1					
ANR	6318931	Identifier	IP_DENY		6314786	1					
ANR	6318932	ElseStatement	else		6314786	0					
ANR	6318933	CompoundStatement		1093:17:22664:22664	6314786	0					
ANR	6318934	ExpressionStatement	"fprintf ( stderr , ""%s:%d: ACL action '%s' is not ALLOW or DENY\\n"" , filename , line_num , arg )"	1097:16:22733:22847	6314786	0	True				
ANR	6318935	CallExpression	"fprintf ( stderr , ""%s:%d: ACL action '%s' is not ALLOW or DENY\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6318936	Callee	fprintf		6314786	0					
ANR	6318937	Identifier	fprintf		6314786	0					
ANR	6318938	ArgumentList	stderr		6314786	1					
ANR	6318939	Argument	stderr		6314786	0					
ANR	6318940	Identifier	stderr		6314786	0					
ANR	6318941	Argument	"""%s:%d: ACL action '%s' is not ALLOW or DENY\\n"""		6314786	1					
ANR	6318942	PrimaryExpression	"""%s:%d: ACL action '%s' is not ALLOW or DENY\\n"""		6314786	0					
ANR	6318943	Argument	filename		6314786	2					
ANR	6318944	Identifier	filename		6314786	0					
ANR	6318945	Argument	line_num		6314786	3					
ANR	6318946	Identifier	line_num		6314786	0					
ANR	6318947	Argument	arg		6314786	4					
ANR	6318948	Identifier	arg		6314786	0					
ANR	6318949	ExpressionStatement	errors ++	1101:16:22866:22874	6314786	1	True				
ANR	6318950	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6318951	Identifier	errors		6314786	0					
ANR	6318952	IncDec	++		6314786	1					
ANR	6318953	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1107:12:22906:22935	6314786	3	True				
ANR	6318954	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6318955	Callee	get_arg		6314786	0					
ANR	6318956	Identifier	get_arg		6314786	0					
ANR	6318957	ArgumentList	arg		6314786	1					
ANR	6318958	Argument	arg		6314786	0					
ANR	6318959	Identifier	arg		6314786	0					
ANR	6318960	Argument	sizeof ( arg )		6314786	1					
ANR	6318961	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6318962	Sizeof	sizeof		6314786	0					
ANR	6318963	SizeofOperand	arg		6314786	1					
ANR	6318964	Argument	& p		6314786	2					
ANR	6318965	UnaryOperationExpression	& p		6314786	0					
ANR	6318966	UnaryOperator	&		6314786	0					
ANR	6318967	Identifier	p		6314786	1					
ANR	6318968	IfStatement	"if ( resolve_host ( & acl . first , arg ) != 0 )"		6314786	4					
ANR	6318969	Condition	"resolve_host ( & acl . first , arg ) != 0"	1111:16:22956:22989	6314786	0	True				
ANR	6318970	EqualityExpression	"resolve_host ( & acl . first , arg ) != 0"		6314786	0		!=			
ANR	6318971	CallExpression	"resolve_host ( & acl . first , arg )"		6314786	0					
ANR	6318972	Callee	resolve_host		6314786	0					
ANR	6318973	Identifier	resolve_host		6314786	0					
ANR	6318974	ArgumentList	& acl . first		6314786	1					
ANR	6318975	Argument	& acl . first		6314786	0					
ANR	6318976	UnaryOperationExpression	& acl . first		6314786	0					
ANR	6318977	UnaryOperator	&		6314786	0					
ANR	6318978	MemberAccess	acl . first		6314786	1					
ANR	6318979	Identifier	acl		6314786	0					
ANR	6318980	Identifier	first		6314786	1					
ANR	6318981	Argument	arg		6314786	1					
ANR	6318982	Identifier	arg		6314786	0					
ANR	6318983	PrimaryExpression	0		6314786	1					
ANR	6318984	CompoundStatement		1109:52:22942:22942	6314786	1					
ANR	6318985	ExpressionStatement	"fprintf ( stderr , ""%s:%d: ACL refers to invalid host or ip address '%s'\\n"" , filename , line_num , arg )"	1113:16:23011:23134	6314786	0	True				
ANR	6318986	CallExpression	"fprintf ( stderr , ""%s:%d: ACL refers to invalid host or ip address '%s'\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6318987	Callee	fprintf		6314786	0					
ANR	6318988	Identifier	fprintf		6314786	0					
ANR	6318989	ArgumentList	stderr		6314786	1					
ANR	6318990	Argument	stderr		6314786	0					
ANR	6318991	Identifier	stderr		6314786	0					
ANR	6318992	Argument	"""%s:%d: ACL refers to invalid host or ip address '%s'\\n"""		6314786	1					
ANR	6318993	PrimaryExpression	"""%s:%d: ACL refers to invalid host or ip address '%s'\\n"""		6314786	0					
ANR	6318994	Argument	filename		6314786	2					
ANR	6318995	Identifier	filename		6314786	0					
ANR	6318996	Argument	line_num		6314786	3					
ANR	6318997	Identifier	line_num		6314786	0					
ANR	6318998	Argument	arg		6314786	4					
ANR	6318999	Identifier	arg		6314786	0					
ANR	6319000	ExpressionStatement	errors ++	1117:16:23153:23161	6314786	1	True				
ANR	6319001	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319002	Identifier	errors		6314786	0					
ANR	6319003	IncDec	++		6314786	1					
ANR	6319004	ElseStatement	else		6314786	0					
ANR	6319005	ExpressionStatement	acl . last = acl . first	1121:16:23200:23220	6314786	0	True				
ANR	6319006	AssignmentExpression	acl . last = acl . first		6314786	0		=			
ANR	6319007	MemberAccess	acl . last		6314786	0					
ANR	6319008	Identifier	acl		6314786	0					
ANR	6319009	Identifier	last		6314786	1					
ANR	6319010	MemberAccess	acl . first		6314786	1					
ANR	6319011	Identifier	acl		6314786	0					
ANR	6319012	Identifier	first		6314786	1					
ANR	6319013	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1125:12:23237:23266	6314786	5	True				
ANR	6319014	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319015	Callee	get_arg		6314786	0					
ANR	6319016	Identifier	get_arg		6314786	0					
ANR	6319017	ArgumentList	arg		6314786	1					
ANR	6319018	Argument	arg		6314786	0					
ANR	6319019	Identifier	arg		6314786	0					
ANR	6319020	Argument	sizeof ( arg )		6314786	1					
ANR	6319021	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319022	Sizeof	sizeof		6314786	0					
ANR	6319023	SizeofOperand	arg		6314786	1					
ANR	6319024	Argument	& p		6314786	2					
ANR	6319025	UnaryOperationExpression	& p		6314786	0					
ANR	6319026	UnaryOperator	&		6314786	0					
ANR	6319027	Identifier	p		6314786	1					
ANR	6319028	IfStatement	if ( arg [ 0 ] )		6314786	6					
ANR	6319029	Condition	arg [ 0 ]	1129:16:23287:23292	6314786	0	True				
ANR	6319030	ArrayIndexing	arg [ 0 ]		6314786	0					
ANR	6319031	Identifier	arg		6314786	0					
ANR	6319032	PrimaryExpression	0		6314786	1					
ANR	6319033	CompoundStatement		1127:24:23245:23245	6314786	1					
ANR	6319034	IfStatement	"if ( resolve_host ( & acl . last , arg ) != 0 )"		6314786	0					
ANR	6319035	Condition	"resolve_host ( & acl . last , arg ) != 0"	1131:20:23318:23350	6314786	0	True				
ANR	6319036	EqualityExpression	"resolve_host ( & acl . last , arg ) != 0"		6314786	0		!=			
ANR	6319037	CallExpression	"resolve_host ( & acl . last , arg )"		6314786	0					
ANR	6319038	Callee	resolve_host		6314786	0					
ANR	6319039	Identifier	resolve_host		6314786	0					
ANR	6319040	ArgumentList	& acl . last		6314786	1					
ANR	6319041	Argument	& acl . last		6314786	0					
ANR	6319042	UnaryOperationExpression	& acl . last		6314786	0					
ANR	6319043	UnaryOperator	&		6314786	0					
ANR	6319044	MemberAccess	acl . last		6314786	1					
ANR	6319045	Identifier	acl		6314786	0					
ANR	6319046	Identifier	last		6314786	1					
ANR	6319047	Argument	arg		6314786	1					
ANR	6319048	Identifier	arg		6314786	0					
ANR	6319049	PrimaryExpression	0		6314786	1					
ANR	6319050	CompoundStatement		1129:55:23303:23303	6314786	1					
ANR	6319051	ExpressionStatement	"fprintf ( stderr , ""%s:%d: ACL refers to invalid host or ip address '%s'\\n"" , filename , line_num , arg )"	1133:20:23376:23503	6314786	0	True				
ANR	6319052	CallExpression	"fprintf ( stderr , ""%s:%d: ACL refers to invalid host or ip address '%s'\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6319053	Callee	fprintf		6314786	0					
ANR	6319054	Identifier	fprintf		6314786	0					
ANR	6319055	ArgumentList	stderr		6314786	1					
ANR	6319056	Argument	stderr		6314786	0					
ANR	6319057	Identifier	stderr		6314786	0					
ANR	6319058	Argument	"""%s:%d: ACL refers to invalid host or ip address '%s'\\n"""		6314786	1					
ANR	6319059	PrimaryExpression	"""%s:%d: ACL refers to invalid host or ip address '%s'\\n"""		6314786	0					
ANR	6319060	Argument	filename		6314786	2					
ANR	6319061	Identifier	filename		6314786	0					
ANR	6319062	Argument	line_num		6314786	3					
ANR	6319063	Identifier	line_num		6314786	0					
ANR	6319064	Argument	arg		6314786	4					
ANR	6319065	Identifier	arg		6314786	0					
ANR	6319066	ExpressionStatement	errors ++	1137:20:23526:23534	6314786	1	True				
ANR	6319067	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319068	Identifier	errors		6314786	0					
ANR	6319069	IncDec	++		6314786	1					
ANR	6319070	IfStatement	if ( ! errors )		6314786	7					
ANR	6319071	Condition	! errors	1145:16:23589:23595	6314786	0	True				
ANR	6319072	UnaryOperationExpression	! errors		6314786	0					
ANR	6319073	UnaryOperator	!		6314786	0					
ANR	6319074	Identifier	errors		6314786	1					
ANR	6319075	CompoundStatement		1147:16:23632:23656	6314786	1					
ANR	6319076	IdentifierDeclStatement	IPAddressACL * nacl = av_mallocz ( sizeof ( * nacl ) ) ;	1147:16:23617:23663	6314786	0	True				
ANR	6319077	IdentifierDecl	* nacl = av_mallocz ( sizeof ( * nacl ) )		6314786	0					
ANR	6319078	IdentifierDeclType	IPAddressACL *		6314786	0					
ANR	6319079	Identifier	nacl		6314786	1					
ANR	6319080	AssignmentExpression	* nacl = av_mallocz ( sizeof ( * nacl ) )		6314786	2		=			
ANR	6319081	Identifier	nacl		6314786	0					
ANR	6319082	CallExpression	av_mallocz ( sizeof ( * nacl ) )		6314786	1					
ANR	6319083	Callee	av_mallocz		6314786	0					
ANR	6319084	Identifier	av_mallocz		6314786	0					
ANR	6319085	ArgumentList	sizeof ( * nacl )		6314786	1					
ANR	6319086	Argument	sizeof ( * nacl )		6314786	0					
ANR	6319087	SizeofExpression	sizeof ( * nacl )		6314786	0					
ANR	6319088	Sizeof	sizeof		6314786	0					
ANR	6319089	UnaryOperationExpression	* nacl		6314786	1					
ANR	6319090	UnaryOperator	*		6314786	0					
ANR	6319091	Identifier	nacl		6314786	1					
ANR	6319092	IdentifierDeclStatement	IPAddressACL * * naclp = 0 ;	1149:16:23682:23706	6314786	1	True				
ANR	6319093	IdentifierDecl	* * naclp = 0		6314786	0					
ANR	6319094	IdentifierDeclType	IPAddressACL * *		6314786	0					
ANR	6319095	Identifier	naclp		6314786	1					
ANR	6319096	AssignmentExpression	* * naclp = 0		6314786	2		=			
ANR	6319097	Identifier	naclp		6314786	0					
ANR	6319098	PrimaryExpression	0		6314786	1					
ANR	6319099	ExpressionStatement	acl . next = 0	1153:16:23727:23739	6314786	2	True				
ANR	6319100	AssignmentExpression	acl . next = 0		6314786	0		=			
ANR	6319101	MemberAccess	acl . next		6314786	0					
ANR	6319102	Identifier	acl		6314786	0					
ANR	6319103	Identifier	next		6314786	1					
ANR	6319104	PrimaryExpression	0		6314786	1					
ANR	6319105	ExpressionStatement	* nacl = acl	1155:16:23758:23769	6314786	3	True				
ANR	6319106	AssignmentExpression	* nacl = acl		6314786	0		=			
ANR	6319107	UnaryOperationExpression	* nacl		6314786	0					
ANR	6319108	UnaryOperator	*		6314786	0					
ANR	6319109	Identifier	nacl		6314786	1					
ANR	6319110	Identifier	acl		6314786	1					
ANR	6319111	IfStatement	if ( stream )		6314786	4					
ANR	6319112	Condition	stream	1159:20:23794:23799	6314786	0	True				
ANR	6319113	Identifier	stream		6314786	0					
ANR	6319114	ExpressionStatement	naclp = & stream -> acl	1161:20:23823:23843	6314786	1	True				
ANR	6319115	AssignmentExpression	naclp = & stream -> acl		6314786	0		=			
ANR	6319116	Identifier	naclp		6314786	0					
ANR	6319117	UnaryOperationExpression	& stream -> acl		6314786	1					
ANR	6319118	UnaryOperator	&		6314786	0					
ANR	6319119	PtrMemberAccess	stream -> acl		6314786	1					
ANR	6319120	Identifier	stream		6314786	0					
ANR	6319121	Identifier	acl		6314786	1					
ANR	6319122	ElseStatement	else		6314786	0					
ANR	6319123	IfStatement	if ( feed )		6314786	0					
ANR	6319124	Condition	feed	1163:25:23871:23874	6314786	0	True				
ANR	6319125	Identifier	feed		6314786	0					
ANR	6319126	ExpressionStatement	naclp = & feed -> acl	1165:20:23898:23916	6314786	1	True				
ANR	6319127	AssignmentExpression	naclp = & feed -> acl		6314786	0		=			
ANR	6319128	Identifier	naclp		6314786	0					
ANR	6319129	UnaryOperationExpression	& feed -> acl		6314786	1					
ANR	6319130	UnaryOperator	&		6314786	0					
ANR	6319131	PtrMemberAccess	feed -> acl		6314786	1					
ANR	6319132	Identifier	feed		6314786	0					
ANR	6319133	Identifier	acl		6314786	1					
ANR	6319134	ElseStatement	else		6314786	0					
ANR	6319135	CompoundStatement		1165:21:23890:23890	6314786	0					
ANR	6319136	ExpressionStatement	"fprintf ( stderr , ""%s:%d: ACL found not in <stream> or <feed>\\n"" , filename , line_num )"	1169:20:23963:24075	6314786	0	True				
ANR	6319137	CallExpression	"fprintf ( stderr , ""%s:%d: ACL found not in <stream> or <feed>\\n"" , filename , line_num )"		6314786	0					
ANR	6319138	Callee	fprintf		6314786	0					
ANR	6319139	Identifier	fprintf		6314786	0					
ANR	6319140	ArgumentList	stderr		6314786	1					
ANR	6319141	Argument	stderr		6314786	0					
ANR	6319142	Identifier	stderr		6314786	0					
ANR	6319143	Argument	"""%s:%d: ACL found not in <stream> or <feed>\\n"""		6314786	1					
ANR	6319144	PrimaryExpression	"""%s:%d: ACL found not in <stream> or <feed>\\n"""		6314786	0					
ANR	6319145	Argument	filename		6314786	2					
ANR	6319146	Identifier	filename		6314786	0					
ANR	6319147	Argument	line_num		6314786	3					
ANR	6319148	Identifier	line_num		6314786	0					
ANR	6319149	ExpressionStatement	errors ++	1173:20:24098:24106	6314786	1	True				
ANR	6319150	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319151	Identifier	errors		6314786	0					
ANR	6319152	IncDec	++		6314786	1					
ANR	6319153	IfStatement	if ( naclp )		6314786	5					
ANR	6319154	Condition	naclp	1179:20:24150:24154	6314786	0	True				
ANR	6319155	Identifier	naclp		6314786	0					
ANR	6319156	CompoundStatement		1177:27:24107:24107	6314786	1					
ANR	6319157	WhileStatement	while ( * naclp )		6314786	0					
ANR	6319158	Condition	* naclp	1181:27:24187:24192	6314786	0	True				
ANR	6319159	UnaryOperationExpression	* naclp		6314786	0					
ANR	6319160	UnaryOperator	*		6314786	0					
ANR	6319161	Identifier	naclp		6314786	1					
ANR	6319162	ExpressionStatement	naclp = & ( * naclp ) -> next	1183:24:24220:24243	6314786	1	True				
ANR	6319163	AssignmentExpression	naclp = & ( * naclp ) -> next		6314786	0		=			
ANR	6319164	Identifier	naclp		6314786	0					
ANR	6319165	UnaryOperationExpression	& ( * naclp ) -> next		6314786	1					
ANR	6319166	UnaryOperator	&		6314786	0					
ANR	6319167	PtrMemberAccess	( * naclp ) -> next		6314786	1					
ANR	6319168	UnaryOperationExpression	* naclp		6314786	0					
ANR	6319169	UnaryOperator	*		6314786	0					
ANR	6319170	Identifier	naclp		6314786	1					
ANR	6319171	Identifier	next		6314786	1					
ANR	6319172	ExpressionStatement	* naclp = nacl	1187:20:24268:24281	6314786	1	True				
ANR	6319173	AssignmentExpression	* naclp = nacl		6314786	0		=			
ANR	6319174	UnaryOperationExpression	* naclp		6314786	0					
ANR	6319175	UnaryOperator	*		6314786	0					
ANR	6319176	Identifier	naclp		6314786	1					
ANR	6319177	Identifier	nacl		6314786	1					
ANR	6319178	ElseStatement	else		6314786	0					
ANR	6319179	IfStatement	"if ( ! strcasecmp ( cmd , ""RTSPOption"" ) )"		6314786	0					
ANR	6319180	Condition	"! strcasecmp ( cmd , ""RTSPOption"" )"	1193:19:24337:24366	6314786	0	True				
ANR	6319181	UnaryOperationExpression	"! strcasecmp ( cmd , ""RTSPOption"" )"		6314786	0					
ANR	6319182	UnaryOperator	!		6314786	0					
ANR	6319183	CallExpression	"strcasecmp ( cmd , ""RTSPOption"" )"		6314786	1					
ANR	6319184	Callee	strcasecmp		6314786	0					
ANR	6319185	Identifier	strcasecmp		6314786	0					
ANR	6319186	ArgumentList	cmd		6314786	1					
ANR	6319187	Argument	cmd		6314786	0					
ANR	6319188	Identifier	cmd		6314786	0					
ANR	6319189	Argument	"""RTSPOption"""		6314786	1					
ANR	6319190	PrimaryExpression	"""RTSPOption"""		6314786	0					
ANR	6319191	CompoundStatement		1191:51:24319:24319	6314786	1					
ANR	6319192	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1195:12:24384:24413	6314786	0	True				
ANR	6319193	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319194	Callee	get_arg		6314786	0					
ANR	6319195	Identifier	get_arg		6314786	0					
ANR	6319196	ArgumentList	arg		6314786	1					
ANR	6319197	Argument	arg		6314786	0					
ANR	6319198	Identifier	arg		6314786	0					
ANR	6319199	Argument	sizeof ( arg )		6314786	1					
ANR	6319200	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319201	Sizeof	sizeof		6314786	0					
ANR	6319202	SizeofOperand	arg		6314786	1					
ANR	6319203	Argument	& p		6314786	2					
ANR	6319204	UnaryOperationExpression	& p		6314786	0					
ANR	6319205	UnaryOperator	&		6314786	0					
ANR	6319206	Identifier	p		6314786	1					
ANR	6319207	IfStatement	if ( stream )		6314786	1					
ANR	6319208	Condition	stream	1197:16:24432:24437	6314786	0	True				
ANR	6319209	Identifier	stream		6314786	0					
ANR	6319210	CompoundStatement		1195:24:24390:24390	6314786	1					
ANR	6319211	ExpressionStatement	av_freep ( & stream -> rtsp_option )	1199:16:24459:24489	6314786	0	True				
ANR	6319212	CallExpression	av_freep ( & stream -> rtsp_option )		6314786	0					
ANR	6319213	Callee	av_freep		6314786	0					
ANR	6319214	Identifier	av_freep		6314786	0					
ANR	6319215	ArgumentList	& stream -> rtsp_option		6314786	1					
ANR	6319216	Argument	& stream -> rtsp_option		6314786	0					
ANR	6319217	UnaryOperationExpression	& stream -> rtsp_option		6314786	0					
ANR	6319218	UnaryOperator	&		6314786	0					
ANR	6319219	PtrMemberAccess	stream -> rtsp_option		6314786	1					
ANR	6319220	Identifier	stream		6314786	0					
ANR	6319221	Identifier	rtsp_option		6314786	1					
ANR	6319222	ExpressionStatement	stream -> rtsp_option = av_strdup ( arg )	1201:16:24508:24544	6314786	1	True				
ANR	6319223	AssignmentExpression	stream -> rtsp_option = av_strdup ( arg )		6314786	0		=			
ANR	6319224	PtrMemberAccess	stream -> rtsp_option		6314786	0					
ANR	6319225	Identifier	stream		6314786	0					
ANR	6319226	Identifier	rtsp_option		6314786	1					
ANR	6319227	CallExpression	av_strdup ( arg )		6314786	1					
ANR	6319228	Callee	av_strdup		6314786	0					
ANR	6319229	Identifier	av_strdup		6314786	0					
ANR	6319230	ArgumentList	arg		6314786	1					
ANR	6319231	Argument	arg		6314786	0					
ANR	6319232	Identifier	arg		6314786	0					
ANR	6319233	ElseStatement	else		6314786	0					
ANR	6319234	IfStatement	"if ( ! strcasecmp ( cmd , ""MulticastAddress"" ) )"		6314786	0					
ANR	6319235	Condition	"! strcasecmp ( cmd , ""MulticastAddress"" )"	1205:19:24581:24616	6314786	0	True				
ANR	6319236	UnaryOperationExpression	"! strcasecmp ( cmd , ""MulticastAddress"" )"		6314786	0					
ANR	6319237	UnaryOperator	!		6314786	0					
ANR	6319238	CallExpression	"strcasecmp ( cmd , ""MulticastAddress"" )"		6314786	1					
ANR	6319239	Callee	strcasecmp		6314786	0					
ANR	6319240	Identifier	strcasecmp		6314786	0					
ANR	6319241	ArgumentList	cmd		6314786	1					
ANR	6319242	Argument	cmd		6314786	0					
ANR	6319243	Identifier	cmd		6314786	0					
ANR	6319244	Argument	"""MulticastAddress"""		6314786	1					
ANR	6319245	PrimaryExpression	"""MulticastAddress"""		6314786	0					
ANR	6319246	CompoundStatement		1203:57:24569:24569	6314786	1					
ANR	6319247	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1207:12:24634:24663	6314786	0	True				
ANR	6319248	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319249	Callee	get_arg		6314786	0					
ANR	6319250	Identifier	get_arg		6314786	0					
ANR	6319251	ArgumentList	arg		6314786	1					
ANR	6319252	Argument	arg		6314786	0					
ANR	6319253	Identifier	arg		6314786	0					
ANR	6319254	Argument	sizeof ( arg )		6314786	1					
ANR	6319255	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319256	Sizeof	sizeof		6314786	0					
ANR	6319257	SizeofOperand	arg		6314786	1					
ANR	6319258	Argument	& p		6314786	2					
ANR	6319259	UnaryOperationExpression	& p		6314786	0					
ANR	6319260	UnaryOperator	&		6314786	0					
ANR	6319261	Identifier	p		6314786	1					
ANR	6319262	IfStatement	if ( stream )		6314786	1					
ANR	6319263	Condition	stream	1209:16:24682:24687	6314786	0	True				
ANR	6319264	Identifier	stream		6314786	0					
ANR	6319265	CompoundStatement		1207:24:24640:24640	6314786	1					
ANR	6319266	IfStatement	"if ( resolve_host ( & stream -> multicast_ip , arg ) != 0 )"		6314786	0					
ANR	6319267	Condition	"resolve_host ( & stream -> multicast_ip , arg ) != 0"	1211:20:24713:24757	6314786	0	True				
ANR	6319268	EqualityExpression	"resolve_host ( & stream -> multicast_ip , arg ) != 0"		6314786	0		!=			
ANR	6319269	CallExpression	"resolve_host ( & stream -> multicast_ip , arg )"		6314786	0					
ANR	6319270	Callee	resolve_host		6314786	0					
ANR	6319271	Identifier	resolve_host		6314786	0					
ANR	6319272	ArgumentList	& stream -> multicast_ip		6314786	1					
ANR	6319273	Argument	& stream -> multicast_ip		6314786	0					
ANR	6319274	UnaryOperationExpression	& stream -> multicast_ip		6314786	0					
ANR	6319275	UnaryOperator	&		6314786	0					
ANR	6319276	PtrMemberAccess	stream -> multicast_ip		6314786	1					
ANR	6319277	Identifier	stream		6314786	0					
ANR	6319278	Identifier	multicast_ip		6314786	1					
ANR	6319279	Argument	arg		6314786	1					
ANR	6319280	Identifier	arg		6314786	0					
ANR	6319281	PrimaryExpression	0		6314786	1					
ANR	6319282	CompoundStatement		1209:67:24710:24710	6314786	1					
ANR	6319283	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"	1213:20:24783:24892	6314786	0	True				
ANR	6319284	CallExpression	"fprintf ( stderr , ""%s:%d: Invalid host/IP address: %s\\n"" , filename , line_num , arg )"		6314786	0					
ANR	6319285	Callee	fprintf		6314786	0					
ANR	6319286	Identifier	fprintf		6314786	0					
ANR	6319287	ArgumentList	stderr		6314786	1					
ANR	6319288	Argument	stderr		6314786	0					
ANR	6319289	Identifier	stderr		6314786	0					
ANR	6319290	Argument	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	1					
ANR	6319291	PrimaryExpression	"""%s:%d: Invalid host/IP address: %s\\n"""		6314786	0					
ANR	6319292	Argument	filename		6314786	2					
ANR	6319293	Identifier	filename		6314786	0					
ANR	6319294	Argument	line_num		6314786	3					
ANR	6319295	Identifier	line_num		6314786	0					
ANR	6319296	Argument	arg		6314786	4					
ANR	6319297	Identifier	arg		6314786	0					
ANR	6319298	ExpressionStatement	errors ++	1217:20:24915:24923	6314786	1	True				
ANR	6319299	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319300	Identifier	errors		6314786	0					
ANR	6319301	IncDec	++		6314786	1					
ANR	6319302	ExpressionStatement	stream -> is_multicast = 1	1221:16:24961:24985	6314786	1	True				
ANR	6319303	AssignmentExpression	stream -> is_multicast = 1		6314786	0		=			
ANR	6319304	PtrMemberAccess	stream -> is_multicast		6314786	0					
ANR	6319305	Identifier	stream		6314786	0					
ANR	6319306	Identifier	is_multicast		6314786	1					
ANR	6319307	PrimaryExpression	1		6314786	1					
ANR	6319308	ExpressionStatement	stream -> loop = 1	1223:16:25004:25020	6314786	2	True				
ANR	6319309	AssignmentExpression	stream -> loop = 1		6314786	0		=			
ANR	6319310	PtrMemberAccess	stream -> loop		6314786	0					
ANR	6319311	Identifier	stream		6314786	0					
ANR	6319312	Identifier	loop		6314786	1					
ANR	6319313	PrimaryExpression	1		6314786	1					
ANR	6319314	ElseStatement	else		6314786	0					
ANR	6319315	IfStatement	"if ( ! strcasecmp ( cmd , ""MulticastPort"" ) )"		6314786	0					
ANR	6319316	Condition	"! strcasecmp ( cmd , ""MulticastPort"" )"	1227:19:25082:25114	6314786	0	True				
ANR	6319317	UnaryOperationExpression	"! strcasecmp ( cmd , ""MulticastPort"" )"		6314786	0					
ANR	6319318	UnaryOperator	!		6314786	0					
ANR	6319319	CallExpression	"strcasecmp ( cmd , ""MulticastPort"" )"		6314786	1					
ANR	6319320	Callee	strcasecmp		6314786	0					
ANR	6319321	Identifier	strcasecmp		6314786	0					
ANR	6319322	ArgumentList	cmd		6314786	1					
ANR	6319323	Argument	cmd		6314786	0					
ANR	6319324	Identifier	cmd		6314786	0					
ANR	6319325	Argument	"""MulticastPort"""		6314786	1					
ANR	6319326	PrimaryExpression	"""MulticastPort"""		6314786	0					
ANR	6319327	CompoundStatement		1225:54:25067:25067	6314786	1					
ANR	6319328	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1229:12:25132:25161	6314786	0	True				
ANR	6319329	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319330	Callee	get_arg		6314786	0					
ANR	6319331	Identifier	get_arg		6314786	0					
ANR	6319332	ArgumentList	arg		6314786	1					
ANR	6319333	Argument	arg		6314786	0					
ANR	6319334	Identifier	arg		6314786	0					
ANR	6319335	Argument	sizeof ( arg )		6314786	1					
ANR	6319336	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319337	Sizeof	sizeof		6314786	0					
ANR	6319338	SizeofOperand	arg		6314786	1					
ANR	6319339	Argument	& p		6314786	2					
ANR	6319340	UnaryOperationExpression	& p		6314786	0					
ANR	6319341	UnaryOperator	&		6314786	0					
ANR	6319342	Identifier	p		6314786	1					
ANR	6319343	IfStatement	if ( stream )		6314786	1					
ANR	6319344	Condition	stream	1231:16:25180:25185	6314786	0	True				
ANR	6319345	Identifier	stream		6314786	0					
ANR	6319346	ExpressionStatement	stream -> multicast_port = atoi ( arg )	1233:16:25205:25239	6314786	1	True				
ANR	6319347	AssignmentExpression	stream -> multicast_port = atoi ( arg )		6314786	0		=			
ANR	6319348	PtrMemberAccess	stream -> multicast_port		6314786	0					
ANR	6319349	Identifier	stream		6314786	0					
ANR	6319350	Identifier	multicast_port		6314786	1					
ANR	6319351	CallExpression	atoi ( arg )		6314786	1					
ANR	6319352	Callee	atoi		6314786	0					
ANR	6319353	Identifier	atoi		6314786	0					
ANR	6319354	ArgumentList	arg		6314786	1					
ANR	6319355	Argument	arg		6314786	0					
ANR	6319356	Identifier	arg		6314786	0					
ANR	6319357	ElseStatement	else		6314786	0					
ANR	6319358	IfStatement	"if ( ! strcasecmp ( cmd , ""MulticastTTL"" ) )"		6314786	0					
ANR	6319359	Condition	"! strcasecmp ( cmd , ""MulticastTTL"" )"	1235:19:25261:25292	6314786	0	True				
ANR	6319360	UnaryOperationExpression	"! strcasecmp ( cmd , ""MulticastTTL"" )"		6314786	0					
ANR	6319361	UnaryOperator	!		6314786	0					
ANR	6319362	CallExpression	"strcasecmp ( cmd , ""MulticastTTL"" )"		6314786	1					
ANR	6319363	Callee	strcasecmp		6314786	0					
ANR	6319364	Identifier	strcasecmp		6314786	0					
ANR	6319365	ArgumentList	cmd		6314786	1					
ANR	6319366	Argument	cmd		6314786	0					
ANR	6319367	Identifier	cmd		6314786	0					
ANR	6319368	Argument	"""MulticastTTL"""		6314786	1					
ANR	6319369	PrimaryExpression	"""MulticastTTL"""		6314786	0					
ANR	6319370	CompoundStatement		1233:53:25245:25245	6314786	1					
ANR	6319371	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1237:12:25310:25339	6314786	0	True				
ANR	6319372	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319373	Callee	get_arg		6314786	0					
ANR	6319374	Identifier	get_arg		6314786	0					
ANR	6319375	ArgumentList	arg		6314786	1					
ANR	6319376	Argument	arg		6314786	0					
ANR	6319377	Identifier	arg		6314786	0					
ANR	6319378	Argument	sizeof ( arg )		6314786	1					
ANR	6319379	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319380	Sizeof	sizeof		6314786	0					
ANR	6319381	SizeofOperand	arg		6314786	1					
ANR	6319382	Argument	& p		6314786	2					
ANR	6319383	UnaryOperationExpression	& p		6314786	0					
ANR	6319384	UnaryOperator	&		6314786	0					
ANR	6319385	Identifier	p		6314786	1					
ANR	6319386	IfStatement	if ( stream )		6314786	1					
ANR	6319387	Condition	stream	1239:16:25358:25363	6314786	0	True				
ANR	6319388	Identifier	stream		6314786	0					
ANR	6319389	ExpressionStatement	stream -> multicast_ttl = atoi ( arg )	1241:16:25383:25416	6314786	1	True				
ANR	6319390	AssignmentExpression	stream -> multicast_ttl = atoi ( arg )		6314786	0		=			
ANR	6319391	PtrMemberAccess	stream -> multicast_ttl		6314786	0					
ANR	6319392	Identifier	stream		6314786	0					
ANR	6319393	Identifier	multicast_ttl		6314786	1					
ANR	6319394	CallExpression	atoi ( arg )		6314786	1					
ANR	6319395	Callee	atoi		6314786	0					
ANR	6319396	Identifier	atoi		6314786	0					
ANR	6319397	ArgumentList	arg		6314786	1					
ANR	6319398	Argument	arg		6314786	0					
ANR	6319399	Identifier	arg		6314786	0					
ANR	6319400	ElseStatement	else		6314786	0					
ANR	6319401	IfStatement	"if ( ! strcasecmp ( cmd , ""NoLoop"" ) )"		6314786	0					
ANR	6319402	Condition	"! strcasecmp ( cmd , ""NoLoop"" )"	1243:19:25438:25463	6314786	0	True				
ANR	6319403	UnaryOperationExpression	"! strcasecmp ( cmd , ""NoLoop"" )"		6314786	0					
ANR	6319404	UnaryOperator	!		6314786	0					
ANR	6319405	CallExpression	"strcasecmp ( cmd , ""NoLoop"" )"		6314786	1					
ANR	6319406	Callee	strcasecmp		6314786	0					
ANR	6319407	Identifier	strcasecmp		6314786	0					
ANR	6319408	ArgumentList	cmd		6314786	1					
ANR	6319409	Argument	cmd		6314786	0					
ANR	6319410	Identifier	cmd		6314786	0					
ANR	6319411	Argument	"""NoLoop"""		6314786	1					
ANR	6319412	PrimaryExpression	"""NoLoop"""		6314786	0					
ANR	6319413	CompoundStatement		1241:47:25416:25416	6314786	1					
ANR	6319414	IfStatement	if ( stream )		6314786	0					
ANR	6319415	Condition	stream	1245:16:25485:25490	6314786	0	True				
ANR	6319416	Identifier	stream		6314786	0					
ANR	6319417	ExpressionStatement	stream -> loop = 0	1247:16:25510:25526	6314786	1	True				
ANR	6319418	AssignmentExpression	stream -> loop = 0		6314786	0		=			
ANR	6319419	PtrMemberAccess	stream -> loop		6314786	0					
ANR	6319420	Identifier	stream		6314786	0					
ANR	6319421	Identifier	loop		6314786	1					
ANR	6319422	PrimaryExpression	0		6314786	1					
ANR	6319423	ElseStatement	else		6314786	0					
ANR	6319424	IfStatement	"if ( ! strcasecmp ( cmd , ""</Stream>"" ) )"		6314786	0					
ANR	6319425	Condition	"! strcasecmp ( cmd , ""</Stream>"" )"	1249:19:25548:25576	6314786	0	True				
ANR	6319426	UnaryOperationExpression	"! strcasecmp ( cmd , ""</Stream>"" )"		6314786	0					
ANR	6319427	UnaryOperator	!		6314786	0					
ANR	6319428	CallExpression	"strcasecmp ( cmd , ""</Stream>"" )"		6314786	1					
ANR	6319429	Callee	strcasecmp		6314786	0					
ANR	6319430	Identifier	strcasecmp		6314786	0					
ANR	6319431	ArgumentList	cmd		6314786	1					
ANR	6319432	Argument	cmd		6314786	0					
ANR	6319433	Identifier	cmd		6314786	0					
ANR	6319434	Argument	"""</Stream>"""		6314786	1					
ANR	6319435	PrimaryExpression	"""</Stream>"""		6314786	0					
ANR	6319436	CompoundStatement		1247:50:25529:25529	6314786	1					
ANR	6319437	IfStatement	if ( ! stream )		6314786	0					
ANR	6319438	Condition	! stream	1251:16:25598:25604	6314786	0	True				
ANR	6319439	UnaryOperationExpression	! stream		6314786	0					
ANR	6319440	UnaryOperator	!		6314786	0					
ANR	6319441	Identifier	stream		6314786	1					
ANR	6319442	CompoundStatement		1249:25:25557:25557	6314786	1					
ANR	6319443	ExpressionStatement	"fprintf ( stderr , ""%s:%d: No corresponding <Stream> for </Stream>\\n"" , filename , line_num )"	1253:16:25626:25738	6314786	0	True				
ANR	6319444	CallExpression	"fprintf ( stderr , ""%s:%d: No corresponding <Stream> for </Stream>\\n"" , filename , line_num )"		6314786	0					
ANR	6319445	Callee	fprintf		6314786	0					
ANR	6319446	Identifier	fprintf		6314786	0					
ANR	6319447	ArgumentList	stderr		6314786	1					
ANR	6319448	Argument	stderr		6314786	0					
ANR	6319449	Identifier	stderr		6314786	0					
ANR	6319450	Argument	"""%s:%d: No corresponding <Stream> for </Stream>\\n"""		6314786	1					
ANR	6319451	PrimaryExpression	"""%s:%d: No corresponding <Stream> for </Stream>\\n"""		6314786	0					
ANR	6319452	Argument	filename		6314786	2					
ANR	6319453	Identifier	filename		6314786	0					
ANR	6319454	Argument	line_num		6314786	3					
ANR	6319455	Identifier	line_num		6314786	0					
ANR	6319456	ExpressionStatement	errors ++	1257:16:25757:25765	6314786	1	True				
ANR	6319457	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319458	Identifier	errors		6314786	0					
ANR	6319459	IncDec	++		6314786	1					
ANR	6319460	ElseStatement	else		6314786	0					
ANR	6319461	CompoundStatement		1257:19:25737:25737	6314786	0					
ANR	6319462	IfStatement	"if ( stream -> feed && stream -> fmt && strcmp ( stream -> fmt -> name , ""ffm"" ) != 0 )"		6314786	0					
ANR	6319463	Condition	"stream -> feed && stream -> fmt && strcmp ( stream -> fmt -> name , ""ffm"" ) != 0"	1261:20:25810:25877	6314786	0	True				
ANR	6319464	AndExpression	"stream -> feed && stream -> fmt && strcmp ( stream -> fmt -> name , ""ffm"" ) != 0"		6314786	0		&&			
ANR	6319465	PtrMemberAccess	stream -> feed		6314786	0					
ANR	6319466	Identifier	stream		6314786	0					
ANR	6319467	Identifier	feed		6314786	1					
ANR	6319468	AndExpression	"stream -> fmt && strcmp ( stream -> fmt -> name , ""ffm"" ) != 0"		6314786	1		&&			
ANR	6319469	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6319470	Identifier	stream		6314786	0					
ANR	6319471	Identifier	fmt		6314786	1					
ANR	6319472	EqualityExpression	"strcmp ( stream -> fmt -> name , ""ffm"" ) != 0"		6314786	1		!=			
ANR	6319473	CallExpression	"strcmp ( stream -> fmt -> name , ""ffm"" )"		6314786	0					
ANR	6319474	Callee	strcmp		6314786	0					
ANR	6319475	Identifier	strcmp		6314786	0					
ANR	6319476	ArgumentList	stream -> fmt -> name		6314786	1					
ANR	6319477	Argument	stream -> fmt -> name		6314786	0					
ANR	6319478	PtrMemberAccess	stream -> fmt -> name		6314786	0					
ANR	6319479	PtrMemberAccess	stream -> fmt		6314786	0					
ANR	6319480	Identifier	stream		6314786	0					
ANR	6319481	Identifier	fmt		6314786	1					
ANR	6319482	Identifier	name		6314786	1					
ANR	6319483	Argument	"""ffm"""		6314786	1					
ANR	6319484	PrimaryExpression	"""ffm"""		6314786	0					
ANR	6319485	PrimaryExpression	0		6314786	1					
ANR	6319486	CompoundStatement		1259:90:25830:25830	6314786	1					
ANR	6319487	IfStatement	if ( audio_id != CODEC_ID_NONE )		6314786	0					
ANR	6319488	Condition	audio_id != CODEC_ID_NONE	1263:24:25907:25931	6314786	0	True				
ANR	6319489	EqualityExpression	audio_id != CODEC_ID_NONE		6314786	0		!=			
ANR	6319490	Identifier	audio_id		6314786	0					
ANR	6319491	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6319492	CompoundStatement		1261:51:25884:25884	6314786	1					
ANR	6319493	ExpressionStatement	audio_enc . codec_type = CODEC_TYPE_AUDIO	1265:24:25961:26000	6314786	0	True				
ANR	6319494	AssignmentExpression	audio_enc . codec_type = CODEC_TYPE_AUDIO		6314786	0		=			
ANR	6319495	MemberAccess	audio_enc . codec_type		6314786	0					
ANR	6319496	Identifier	audio_enc		6314786	0					
ANR	6319497	Identifier	codec_type		6314786	1					
ANR	6319498	Identifier	CODEC_TYPE_AUDIO		6314786	1					
ANR	6319499	ExpressionStatement	audio_enc . codec_id = audio_id	1267:24:26027:26056	6314786	1	True				
ANR	6319500	AssignmentExpression	audio_enc . codec_id = audio_id		6314786	0		=			
ANR	6319501	MemberAccess	audio_enc . codec_id		6314786	0					
ANR	6319502	Identifier	audio_enc		6314786	0					
ANR	6319503	Identifier	codec_id		6314786	1					
ANR	6319504	Identifier	audio_id		6314786	1					
ANR	6319505	ExpressionStatement	"add_codec ( stream , & audio_enc )"	1269:24:26083:26112	6314786	2	True				
ANR	6319506	CallExpression	"add_codec ( stream , & audio_enc )"		6314786	0					
ANR	6319507	Callee	add_codec		6314786	0					
ANR	6319508	Identifier	add_codec		6314786	0					
ANR	6319509	ArgumentList	stream		6314786	1					
ANR	6319510	Argument	stream		6314786	0					
ANR	6319511	Identifier	stream		6314786	0					
ANR	6319512	Argument	& audio_enc		6314786	1					
ANR	6319513	UnaryOperationExpression	& audio_enc		6314786	0					
ANR	6319514	UnaryOperator	&		6314786	0					
ANR	6319515	Identifier	audio_enc		6314786	1					
ANR	6319516	IfStatement	if ( video_id != CODEC_ID_NONE )		6314786	1					
ANR	6319517	Condition	video_id != CODEC_ID_NONE	1273:24:26162:26186	6314786	0	True				
ANR	6319518	EqualityExpression	video_id != CODEC_ID_NONE		6314786	0		!=			
ANR	6319519	Identifier	video_id		6314786	0					
ANR	6319520	Identifier	CODEC_ID_NONE		6314786	1					
ANR	6319521	CompoundStatement		1271:51:26139:26139	6314786	1					
ANR	6319522	ExpressionStatement	video_enc . codec_type = CODEC_TYPE_VIDEO	1275:24:26216:26255	6314786	0	True				
ANR	6319523	AssignmentExpression	video_enc . codec_type = CODEC_TYPE_VIDEO		6314786	0		=			
ANR	6319524	MemberAccess	video_enc . codec_type		6314786	0					
ANR	6319525	Identifier	video_enc		6314786	0					
ANR	6319526	Identifier	codec_type		6314786	1					
ANR	6319527	Identifier	CODEC_TYPE_VIDEO		6314786	1					
ANR	6319528	ExpressionStatement	video_enc . codec_id = video_id	1277:24:26282:26311	6314786	1	True				
ANR	6319529	AssignmentExpression	video_enc . codec_id = video_id		6314786	0		=			
ANR	6319530	MemberAccess	video_enc . codec_id		6314786	0					
ANR	6319531	Identifier	video_enc		6314786	0					
ANR	6319532	Identifier	codec_id		6314786	1					
ANR	6319533	Identifier	video_id		6314786	1					
ANR	6319534	ExpressionStatement	"add_codec ( stream , & video_enc )"	1279:24:26338:26367	6314786	2	True				
ANR	6319535	CallExpression	"add_codec ( stream , & video_enc )"		6314786	0					
ANR	6319536	Callee	add_codec		6314786	0					
ANR	6319537	Identifier	add_codec		6314786	0					
ANR	6319538	ArgumentList	stream		6314786	1					
ANR	6319539	Argument	stream		6314786	0					
ANR	6319540	Identifier	stream		6314786	0					
ANR	6319541	Argument	& video_enc		6314786	1					
ANR	6319542	UnaryOperationExpression	& video_enc		6314786	0					
ANR	6319543	UnaryOperator	&		6314786	0					
ANR	6319544	Identifier	video_enc		6314786	1					
ANR	6319545	ExpressionStatement	stream = NULL	1285:16:26428:26441	6314786	1	True				
ANR	6319546	AssignmentExpression	stream = NULL		6314786	0		=			
ANR	6319547	Identifier	stream		6314786	0					
ANR	6319548	Identifier	NULL		6314786	1					
ANR	6319549	ElseStatement	else		6314786	0					
ANR	6319550	IfStatement	"if ( ! strcasecmp ( cmd , ""<Redirect"" ) )"		6314786	0					
ANR	6319551	Condition	"! strcasecmp ( cmd , ""<Redirect"" )"	1289:19:26478:26506	6314786	0	True				
ANR	6319552	UnaryOperationExpression	"! strcasecmp ( cmd , ""<Redirect"" )"		6314786	0					
ANR	6319553	UnaryOperator	!		6314786	0					
ANR	6319554	CallExpression	"strcasecmp ( cmd , ""<Redirect"" )"		6314786	1					
ANR	6319555	Callee	strcasecmp		6314786	0					
ANR	6319556	Identifier	strcasecmp		6314786	0					
ANR	6319557	ArgumentList	cmd		6314786	1					
ANR	6319558	Argument	cmd		6314786	0					
ANR	6319559	Identifier	cmd		6314786	0					
ANR	6319560	Argument	"""<Redirect"""		6314786	1					
ANR	6319561	PrimaryExpression	"""<Redirect"""		6314786	0					
ANR	6319562	CompoundStatement		1291:12:26535:26542	6314786	1					
ANR	6319563	IdentifierDeclStatement	char * q ;	1293:12:26585:26592	6314786	0	True				
ANR	6319564	IdentifierDecl	* q		6314786	0					
ANR	6319565	IdentifierDeclType	char *		6314786	0					
ANR	6319566	Identifier	q		6314786	1					
ANR	6319567	IfStatement	if ( stream || feed || redirect )		6314786	1					
ANR	6319568	Condition	stream || feed || redirect	1295:16:26611:26636	6314786	0	True				
ANR	6319569	OrExpression	stream || feed || redirect		6314786	0		||			
ANR	6319570	Identifier	stream		6314786	0					
ANR	6319571	OrExpression	feed || redirect		6314786	1		||			
ANR	6319572	Identifier	feed		6314786	0					
ANR	6319573	Identifier	redirect		6314786	1					
ANR	6319574	CompoundStatement		1293:44:26589:26589	6314786	1					
ANR	6319575	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"	1297:16:26658:26747	6314786	0	True				
ANR	6319576	CallExpression	"fprintf ( stderr , ""%s:%d: Already in a tag\\n"" , filename , line_num )"		6314786	0					
ANR	6319577	Callee	fprintf		6314786	0					
ANR	6319578	Identifier	fprintf		6314786	0					
ANR	6319579	ArgumentList	stderr		6314786	1					
ANR	6319580	Argument	stderr		6314786	0					
ANR	6319581	Identifier	stderr		6314786	0					
ANR	6319582	Argument	"""%s:%d: Already in a tag\\n"""		6314786	1					
ANR	6319583	PrimaryExpression	"""%s:%d: Already in a tag\\n"""		6314786	0					
ANR	6319584	Argument	filename		6314786	2					
ANR	6319585	Identifier	filename		6314786	0					
ANR	6319586	Argument	line_num		6314786	3					
ANR	6319587	Identifier	line_num		6314786	0					
ANR	6319588	ExpressionStatement	errors ++	1301:16:26766:26774	6314786	1	True				
ANR	6319589	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319590	Identifier	errors		6314786	0					
ANR	6319591	IncDec	++		6314786	1					
ANR	6319592	ElseStatement	else		6314786	0					
ANR	6319593	CompoundStatement		1301:19:26746:26746	6314786	0					
ANR	6319594	ExpressionStatement	redirect = av_mallocz ( sizeof ( FFStream ) )	1305:16:26815:26854	6314786	0	True				
ANR	6319595	AssignmentExpression	redirect = av_mallocz ( sizeof ( FFStream ) )		6314786	0		=			
ANR	6319596	Identifier	redirect		6314786	0					
ANR	6319597	CallExpression	av_mallocz ( sizeof ( FFStream ) )		6314786	1					
ANR	6319598	Callee	av_mallocz		6314786	0					
ANR	6319599	Identifier	av_mallocz		6314786	0					
ANR	6319600	ArgumentList	sizeof ( FFStream )		6314786	1					
ANR	6319601	Argument	sizeof ( FFStream )		6314786	0					
ANR	6319602	SizeofExpression	sizeof ( FFStream )		6314786	0					
ANR	6319603	Sizeof	sizeof		6314786	0					
ANR	6319604	SizeofOperand	FFStream		6314786	1					
ANR	6319605	ExpressionStatement	* last_stream = redirect	1307:16:26873:26896	6314786	1	True				
ANR	6319606	AssignmentExpression	* last_stream = redirect		6314786	0		=			
ANR	6319607	UnaryOperationExpression	* last_stream		6314786	0					
ANR	6319608	UnaryOperator	*		6314786	0					
ANR	6319609	Identifier	last_stream		6314786	1					
ANR	6319610	Identifier	redirect		6314786	1					
ANR	6319611	ExpressionStatement	last_stream = & redirect -> next	1309:16:26915:26944	6314786	2	True				
ANR	6319612	AssignmentExpression	last_stream = & redirect -> next		6314786	0		=			
ANR	6319613	Identifier	last_stream		6314786	0					
ANR	6319614	UnaryOperationExpression	& redirect -> next		6314786	1					
ANR	6319615	UnaryOperator	&		6314786	0					
ANR	6319616	PtrMemberAccess	redirect -> next		6314786	1					
ANR	6319617	Identifier	redirect		6314786	0					
ANR	6319618	Identifier	next		6314786	1					
ANR	6319619	ExpressionStatement	"get_arg ( redirect -> filename , sizeof ( redirect -> filename ) , & p )"	1313:16:26965:27024	6314786	3	True				
ANR	6319620	CallExpression	"get_arg ( redirect -> filename , sizeof ( redirect -> filename ) , & p )"		6314786	0					
ANR	6319621	Callee	get_arg		6314786	0					
ANR	6319622	Identifier	get_arg		6314786	0					
ANR	6319623	ArgumentList	redirect -> filename		6314786	1					
ANR	6319624	Argument	redirect -> filename		6314786	0					
ANR	6319625	PtrMemberAccess	redirect -> filename		6314786	0					
ANR	6319626	Identifier	redirect		6314786	0					
ANR	6319627	Identifier	filename		6314786	1					
ANR	6319628	Argument	sizeof ( redirect -> filename )		6314786	1					
ANR	6319629	SizeofExpression	sizeof ( redirect -> filename )		6314786	0					
ANR	6319630	Sizeof	sizeof		6314786	0					
ANR	6319631	PtrMemberAccess	redirect -> filename		6314786	1					
ANR	6319632	Identifier	redirect		6314786	0					
ANR	6319633	Identifier	filename		6314786	1					
ANR	6319634	Argument	& p		6314786	2					
ANR	6319635	UnaryOperationExpression	& p		6314786	0					
ANR	6319636	UnaryOperator	&		6314786	0					
ANR	6319637	Identifier	p		6314786	1					
ANR	6319638	ExpressionStatement	"q = strrchr ( redirect -> filename , '>' )"	1315:16:27043:27079	6314786	4	True				
ANR	6319639	AssignmentExpression	"q = strrchr ( redirect -> filename , '>' )"		6314786	0		=			
ANR	6319640	Identifier	q		6314786	0					
ANR	6319641	CallExpression	"strrchr ( redirect -> filename , '>' )"		6314786	1					
ANR	6319642	Callee	strrchr		6314786	0					
ANR	6319643	Identifier	strrchr		6314786	0					
ANR	6319644	ArgumentList	redirect -> filename		6314786	1					
ANR	6319645	Argument	redirect -> filename		6314786	0					
ANR	6319646	PtrMemberAccess	redirect -> filename		6314786	0					
ANR	6319647	Identifier	redirect		6314786	0					
ANR	6319648	Identifier	filename		6314786	1					
ANR	6319649	Argument	'>'		6314786	1					
ANR	6319650	PrimaryExpression	'>'		6314786	0					
ANR	6319651	IfStatement	if ( * q )		6314786	5					
ANR	6319652	Condition	* q	1317:20:27102:27103	6314786	0	True				
ANR	6319653	UnaryOperationExpression	* q		6314786	0					
ANR	6319654	UnaryOperator	*		6314786	0					
ANR	6319655	Identifier	q		6314786	1					
ANR	6319656	ExpressionStatement	* q = '\\0'	1319:20:27127:27136	6314786	1	True				
ANR	6319657	AssignmentExpression	* q = '\\0'		6314786	0		=			
ANR	6319658	UnaryOperationExpression	* q		6314786	0					
ANR	6319659	UnaryOperator	*		6314786	0					
ANR	6319660	Identifier	q		6314786	1					
ANR	6319661	PrimaryExpression	'\\0'		6314786	1					
ANR	6319662	ExpressionStatement	redirect -> stream_type = STREAM_TYPE_REDIRECT	1321:16:27155:27199	6314786	6	True				
ANR	6319663	AssignmentExpression	redirect -> stream_type = STREAM_TYPE_REDIRECT		6314786	0		=			
ANR	6319664	PtrMemberAccess	redirect -> stream_type		6314786	0					
ANR	6319665	Identifier	redirect		6314786	0					
ANR	6319666	Identifier	stream_type		6314786	1					
ANR	6319667	Identifier	STREAM_TYPE_REDIRECT		6314786	1					
ANR	6319668	ElseStatement	else		6314786	0					
ANR	6319669	IfStatement	"if ( ! strcasecmp ( cmd , ""URL"" ) )"		6314786	0					
ANR	6319670	Condition	"! strcasecmp ( cmd , ""URL"" )"	1325:19:27236:27258	6314786	0	True				
ANR	6319671	UnaryOperationExpression	"! strcasecmp ( cmd , ""URL"" )"		6314786	0					
ANR	6319672	UnaryOperator	!		6314786	0					
ANR	6319673	CallExpression	"strcasecmp ( cmd , ""URL"" )"		6314786	1					
ANR	6319674	Callee	strcasecmp		6314786	0					
ANR	6319675	Identifier	strcasecmp		6314786	0					
ANR	6319676	ArgumentList	cmd		6314786	1					
ANR	6319677	Argument	cmd		6314786	0					
ANR	6319678	Identifier	cmd		6314786	0					
ANR	6319679	Argument	"""URL"""		6314786	1					
ANR	6319680	PrimaryExpression	"""URL"""		6314786	0					
ANR	6319681	CompoundStatement		1323:44:27211:27211	6314786	1					
ANR	6319682	IfStatement	if ( redirect )		6314786	0					
ANR	6319683	Condition	redirect	1327:16:27280:27287	6314786	0	True				
ANR	6319684	Identifier	redirect		6314786	0					
ANR	6319685	ExpressionStatement	"get_arg ( redirect -> feed_filename , sizeof ( redirect -> feed_filename ) , & p )"	1329:16:27307:27376	6314786	1	True				
ANR	6319686	CallExpression	"get_arg ( redirect -> feed_filename , sizeof ( redirect -> feed_filename ) , & p )"		6314786	0					
ANR	6319687	Callee	get_arg		6314786	0					
ANR	6319688	Identifier	get_arg		6314786	0					
ANR	6319689	ArgumentList	redirect -> feed_filename		6314786	1					
ANR	6319690	Argument	redirect -> feed_filename		6314786	0					
ANR	6319691	PtrMemberAccess	redirect -> feed_filename		6314786	0					
ANR	6319692	Identifier	redirect		6314786	0					
ANR	6319693	Identifier	feed_filename		6314786	1					
ANR	6319694	Argument	sizeof ( redirect -> feed_filename )		6314786	1					
ANR	6319695	SizeofExpression	sizeof ( redirect -> feed_filename )		6314786	0					
ANR	6319696	Sizeof	sizeof		6314786	0					
ANR	6319697	PtrMemberAccess	redirect -> feed_filename		6314786	1					
ANR	6319698	Identifier	redirect		6314786	0					
ANR	6319699	Identifier	feed_filename		6314786	1					
ANR	6319700	Argument	& p		6314786	2					
ANR	6319701	UnaryOperationExpression	& p		6314786	0					
ANR	6319702	UnaryOperator	&		6314786	0					
ANR	6319703	Identifier	p		6314786	1					
ANR	6319704	ElseStatement	else		6314786	0					
ANR	6319705	IfStatement	"if ( ! strcasecmp ( cmd , ""</Redirect>"" ) )"		6314786	0					
ANR	6319706	Condition	"! strcasecmp ( cmd , ""</Redirect>"" )"	1331:19:27398:27428	6314786	0	True				
ANR	6319707	UnaryOperationExpression	"! strcasecmp ( cmd , ""</Redirect>"" )"		6314786	0					
ANR	6319708	UnaryOperator	!		6314786	0					
ANR	6319709	CallExpression	"strcasecmp ( cmd , ""</Redirect>"" )"		6314786	1					
ANR	6319710	Callee	strcasecmp		6314786	0					
ANR	6319711	Identifier	strcasecmp		6314786	0					
ANR	6319712	ArgumentList	cmd		6314786	1					
ANR	6319713	Argument	cmd		6314786	0					
ANR	6319714	Identifier	cmd		6314786	0					
ANR	6319715	Argument	"""</Redirect>"""		6314786	1					
ANR	6319716	PrimaryExpression	"""</Redirect>"""		6314786	0					
ANR	6319717	CompoundStatement		1329:52:27381:27381	6314786	1					
ANR	6319718	IfStatement	if ( ! redirect )		6314786	0					
ANR	6319719	Condition	! redirect	1333:16:27450:27458	6314786	0	True				
ANR	6319720	UnaryOperationExpression	! redirect		6314786	0					
ANR	6319721	UnaryOperator	!		6314786	0					
ANR	6319722	Identifier	redirect		6314786	1					
ANR	6319723	CompoundStatement		1331:27:27411:27411	6314786	1					
ANR	6319724	ExpressionStatement	"fprintf ( stderr , ""%s:%d: No corresponding <Redirect> for </Redirect>\\n"" , filename , line_num )"	1335:16:27480:27596	6314786	0	True				
ANR	6319725	CallExpression	"fprintf ( stderr , ""%s:%d: No corresponding <Redirect> for </Redirect>\\n"" , filename , line_num )"		6314786	0					
ANR	6319726	Callee	fprintf		6314786	0					
ANR	6319727	Identifier	fprintf		6314786	0					
ANR	6319728	ArgumentList	stderr		6314786	1					
ANR	6319729	Argument	stderr		6314786	0					
ANR	6319730	Identifier	stderr		6314786	0					
ANR	6319731	Argument	"""%s:%d: No corresponding <Redirect> for </Redirect>\\n"""		6314786	1					
ANR	6319732	PrimaryExpression	"""%s:%d: No corresponding <Redirect> for </Redirect>\\n"""		6314786	0					
ANR	6319733	Argument	filename		6314786	2					
ANR	6319734	Identifier	filename		6314786	0					
ANR	6319735	Argument	line_num		6314786	3					
ANR	6319736	Identifier	line_num		6314786	0					
ANR	6319737	ExpressionStatement	errors ++	1339:16:27615:27623	6314786	1	True				
ANR	6319738	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319739	Identifier	errors		6314786	0					
ANR	6319740	IncDec	++		6314786	1					
ANR	6319741	ElseStatement	else		6314786	0					
ANR	6319742	CompoundStatement		1339:19:27595:27595	6314786	0					
ANR	6319743	IfStatement	if ( ! redirect -> feed_filename [ 0 ] )		6314786	0					
ANR	6319744	Condition	! redirect -> feed_filename [ 0 ]	1343:20:27668:27694	6314786	0	True				
ANR	6319745	UnaryOperationExpression	! redirect -> feed_filename [ 0 ]		6314786	0					
ANR	6319746	UnaryOperator	!		6314786	0					
ANR	6319747	ArrayIndexing	redirect -> feed_filename [ 0 ]		6314786	1					
ANR	6319748	PtrMemberAccess	redirect -> feed_filename		6314786	0					
ANR	6319749	Identifier	redirect		6314786	0					
ANR	6319750	Identifier	feed_filename		6314786	1					
ANR	6319751	PrimaryExpression	0		6314786	1					
ANR	6319752	CompoundStatement		1341:49:27647:27647	6314786	1					
ANR	6319753	ExpressionStatement	"fprintf ( stderr , ""%s:%d: No URL found for <Redirect>\\n"" , filename , line_num )"	1345:20:27720:27824	6314786	0	True				
ANR	6319754	CallExpression	"fprintf ( stderr , ""%s:%d: No URL found for <Redirect>\\n"" , filename , line_num )"		6314786	0					
ANR	6319755	Callee	fprintf		6314786	0					
ANR	6319756	Identifier	fprintf		6314786	0					
ANR	6319757	ArgumentList	stderr		6314786	1					
ANR	6319758	Argument	stderr		6314786	0					
ANR	6319759	Identifier	stderr		6314786	0					
ANR	6319760	Argument	"""%s:%d: No URL found for <Redirect>\\n"""		6314786	1					
ANR	6319761	PrimaryExpression	"""%s:%d: No URL found for <Redirect>\\n"""		6314786	0					
ANR	6319762	Argument	filename		6314786	2					
ANR	6319763	Identifier	filename		6314786	0					
ANR	6319764	Argument	line_num		6314786	3					
ANR	6319765	Identifier	line_num		6314786	0					
ANR	6319766	ExpressionStatement	errors ++	1349:20:27847:27855	6314786	1	True				
ANR	6319767	PostIncDecOperationExpression	errors ++		6314786	0					
ANR	6319768	Identifier	errors		6314786	0					
ANR	6319769	IncDec	++		6314786	1					
ANR	6319770	ExpressionStatement	redirect = NULL	1353:16:27893:27908	6314786	1	True				
ANR	6319771	AssignmentExpression	redirect = NULL		6314786	0		=			
ANR	6319772	Identifier	redirect		6314786	0					
ANR	6319773	Identifier	NULL		6314786	1					
ANR	6319774	ElseStatement	else		6314786	0					
ANR	6319775	IfStatement	"if ( ! strcasecmp ( cmd , ""LoadModule"" ) )"		6314786	0					
ANR	6319776	Condition	"! strcasecmp ( cmd , ""LoadModule"" )"	1357:19:27945:27974	6314786	0	True				
ANR	6319777	UnaryOperationExpression	"! strcasecmp ( cmd , ""LoadModule"" )"		6314786	0					
ANR	6319778	UnaryOperator	!		6314786	0					
ANR	6319779	CallExpression	"strcasecmp ( cmd , ""LoadModule"" )"		6314786	1					
ANR	6319780	Callee	strcasecmp		6314786	0					
ANR	6319781	Identifier	strcasecmp		6314786	0					
ANR	6319782	ArgumentList	cmd		6314786	1					
ANR	6319783	Argument	cmd		6314786	0					
ANR	6319784	Identifier	cmd		6314786	0					
ANR	6319785	Argument	"""LoadModule"""		6314786	1					
ANR	6319786	PrimaryExpression	"""LoadModule"""		6314786	0					
ANR	6319787	CompoundStatement		1355:51:27927:27927	6314786	1					
ANR	6319788	ExpressionStatement	"get_arg ( arg , sizeof ( arg ) , & p )"	1359:12:27992:28021	6314786	0	True				
ANR	6319789	CallExpression	"get_arg ( arg , sizeof ( arg ) , & p )"		6314786	0					
ANR	6319790	Callee	get_arg		6314786	0					
ANR	6319791	Identifier	get_arg		6314786	0					
ANR	6319792	ArgumentList	arg		6314786	1					
ANR	6319793	Argument	arg		6314786	0					
ANR	6319794	Identifier	arg		6314786	0					
ANR	6319795	Argument	sizeof ( arg )		6314786	1					
ANR	6319796	SizeofExpression	sizeof ( arg )		6314786	0					
ANR	6319797	Sizeof	sizeof		6314786	0					
ANR	6319798	SizeofOperand	arg		6314786	1					
ANR	6319799	Argument	& p		6314786	2					
ANR	6319800	UnaryOperationExpression	& p		6314786	0					
ANR	6319801	UnaryOperator	&		6314786	0					
ANR	6319802	Identifier	p		6314786	1					
ANR	6319803	ExpressionStatement	load_module ( arg )	1363:12:28053:28069	6314786	1	True				
ANR	6319804	CallExpression	load_module ( arg )		6314786	0					
ANR	6319805	Callee	load_module		6314786	0					
ANR	6319806	Identifier	load_module		6314786	0					
ANR	6319807	ArgumentList	arg		6314786	1					
ANR	6319808	Argument	arg		6314786	0					
ANR	6319809	Identifier	arg		6314786	0					
ANR	6319810	ElseStatement	else		6314786	0					
ANR	6319811	CompoundStatement		1373:15:28215:28215	6314786	0					
ANR	6319812	ExpressionStatement	"fprintf ( stderr , ""%s:%d: Incorrect keyword: '%s'\\n"" , filename , line_num , cmd )"	1377:12:28280:28377	6314786	0	True				
ANR	6319813	CallExpression	"fprintf ( stderr , ""%s:%d: Incorrect keyword: '%s'\\n"" , filename , line_num , cmd )"		6314786	0					
ANR	6319814	Callee	fprintf		6314786	0					
ANR	6319815	Identifier	fprintf		6314786	0					
ANR	6319816	ArgumentList	stderr		6314786	1					
ANR	6319817	Argument	stderr		6314786	0					
ANR	6319818	Identifier	stderr		6314786	0					
ANR	6319819	Argument	"""%s:%d: Incorrect keyword: '%s'\\n"""		6314786	1					
ANR	6319820	PrimaryExpression	"""%s:%d: Incorrect keyword: '%s'\\n"""		6314786	0					
ANR	6319821	Argument	filename		6314786	2					
ANR	6319822	Identifier	filename		6314786	0					
ANR	6319823	Argument	line_num		6314786	3					
ANR	6319824	Identifier	line_num		6314786	0					
ANR	6319825	Argument	cmd		6314786	4					
ANR	6319826	Identifier	cmd		6314786	0					
ANR	6319827	ExpressionStatement	fclose ( f )	1387:4:28404:28413	6314786	24	True				
ANR	6319828	CallExpression	fclose ( f )		6314786	0					
ANR	6319829	Callee	fclose		6314786	0					
ANR	6319830	Identifier	fclose		6314786	0					
ANR	6319831	ArgumentList	f		6314786	1					
ANR	6319832	Argument	f		6314786	0					
ANR	6319833	Identifier	f		6314786	0					
ANR	6319834	IfStatement	if ( errors )		6314786	25					
ANR	6319835	Condition	errors	1389:8:28424:28429	6314786	0	True				
ANR	6319836	Identifier	errors		6314786	0					
ANR	6319837	ReturnStatement	return - 1 ;	1391:8:28441:28450	6314786	1	True				
ANR	6319838	UnaryOperationExpression	- 1		6314786	0					
ANR	6319839	UnaryOperator	-		6314786	0					
ANR	6319840	PrimaryExpression	1		6314786	1					
ANR	6319841	ElseStatement	else		6314786	0					
ANR	6319842	ReturnStatement	return 0 ;	1395:8:28471:28479	6314786	0	True				
ANR	6319843	PrimaryExpression	0		6314786	0					
ANR	6319844	ReturnType	static int		6314786	1					
ANR	6319845	Identifier	parse_ffconfig		6314786	2					
ANR	6319846	ParameterList	const char * filename		6314786	3					
ANR	6319847	Parameter	const char * filename	1:26:26:45	6314786	0	True				
ANR	6319848	ParameterType	const char *		6314786	0					
ANR	6319849	Identifier	filename		6314786	1					
ANR	6319850	CFGEntryNode	ENTRY		6314786		True				
ANR	6319851	CFGExitNode	EXIT		6314786		True				
ANR	6319852	InfiniteForNode	true		6314786		True				
ANR	6319853	Symbol	video_enc . time_base . den		6314786						
ANR	6319854	Symbol	htons		6314786						
ANR	6319855	Symbol	stream -> stream_type		6314786						
ANR	6319856	Symbol	& first_stream		6314786						
ANR	6319857	Symbol	video_enc . rc_buffer_size		6314786						
ANR	6319858	Symbol	& video_enc . height		6314786						
ANR	6319859	Symbol	video_enc . dark_masking		6314786						
ANR	6319860	Symbol	audio_id		6314786						
ANR	6319861	Symbol	ffserver_daemon		6314786						
ANR	6319862	Symbol	video_enc . rc_min_rate		6314786						
ANR	6319863	Symbol	last_stream		6314786						
ANR	6319864	Symbol	sfeed		6314786						
ANR	6319865	Symbol	video_enc . qmin		6314786						
ANR	6319866	Symbol	feed -> feed_filename		6314786						
ANR	6319867	Symbol	maxrate		6314786						
ANR	6319868	Symbol	sfeed -> filename		6314786						
ANR	6319869	Symbol	frame_rate . num		6314786						
ANR	6319870	Symbol	& feed -> next_feed		6314786						
ANR	6319871	Symbol	& acl . first		6314786						
ANR	6319872	Symbol	video_enc . dct_algo		6314786						
ANR	6319873	Symbol	filename		6314786						
ANR	6319874	Symbol	* nacl		6314786						
ANR	6319875	Symbol	sscanf		6314786						
ANR	6319876	Symbol	video_enc . mb_decision		6314786						
ANR	6319877	Symbol	AV_OPT_FLAG_AUDIO_PARAM		6314786						
ANR	6319878	Symbol	feed -> feed_max_size		6314786						
ANR	6319879	Symbol	feed -> readonly		6314786						
ANR	6319880	Symbol	stream -> filename		6314786						
ANR	6319881	Symbol	stream -> fmt		6314786						
ANR	6319882	Symbol	audio_enc . sample_rate		6314786						
ANR	6319883	Symbol	& stream -> multicast_ip		6314786						
ANR	6319884	Symbol	guess_stream_format		6314786						
ANR	6319885	Symbol	* * stream		6314786						
ANR	6319886	Symbol	feed -> filename		6314786						
ANR	6319887	Symbol	stream -> title		6314786						
ANR	6319888	Symbol	* feed		6314786						
ANR	6319889	Symbol	video_enc . flags		6314786						
ANR	6319890	Symbol	s -> next		6314786						
ANR	6319891	Symbol	audio_enc . bit_rate		6314786						
ANR	6319892	Symbol	stream -> comment		6314786						
ANR	6319893	Symbol	arg		6314786						
ANR	6319894	Symbol	FF_MB_DECISION_BITS		6314786						
ANR	6319895	Symbol	stream -> fmt -> video_codec		6314786						
ANR	6319896	Symbol	avctx		6314786						
ANR	6319897	Symbol	last_feed		6314786						
ANR	6319898	Symbol	redirect		6314786						
ANR	6319899	Symbol	fopen		6314786						
ANR	6319900	Symbol	line_num		6314786						
ANR	6319901	Symbol	f		6314786						
ANR	6319902	Symbol	i		6314786						
ANR	6319903	Symbol	video_enc . codec_type		6314786						
ANR	6319904	Symbol	CODEC_FLAG_4MV		6314786						
ANR	6319905	Symbol	video_enc		6314786						
ANR	6319906	Symbol	p		6314786						
ANR	6319907	Symbol	ntohs		6314786						
ANR	6319908	Symbol	q		6314786						
ANR	6319909	Symbol	feed -> child_argv		6314786						
ANR	6319910	Symbol	s		6314786						
ANR	6319911	Symbol	& frame_rate		6314786						
ANR	6319912	Symbol	feed -> fmt		6314786						
ANR	6319913	Symbol	FF_QP2LAMBDA		6314786						
ANR	6319914	Symbol	video_enc . width		6314786						
ANR	6319915	Symbol	av_malloc		6314786						
ANR	6319916	Symbol	av_strdup		6314786						
ANR	6319917	Symbol	acl		6314786						
ANR	6319918	Symbol	fgets		6314786						
ANR	6319919	Symbol	atoll		6314786						
ANR	6319920	Symbol	strlen		6314786						
ANR	6319921	Symbol	& redirect -> next		6314786						
ANR	6319922	Symbol	FF_DCT_FASTINT		6314786						
ANR	6319923	Symbol	video_enc . bit_rate_tolerance		6314786						
ANR	6319924	Symbol	stream -> rtsp_option		6314786						
ANR	6319925	Symbol	CODEC_FLAG_QSCALE		6314786						
ANR	6319926	Symbol	& acl . last		6314786						
ANR	6319927	Symbol	& feed -> acl		6314786						
ANR	6319928	Symbol	CODEC_ID_NONE		6314786						
ANR	6319929	Symbol	frame_rate . den		6314786						
ANR	6319930	Symbol	FF_IDCT_SIMPLE		6314786						
ANR	6319931	Symbol	s -> filename		6314786						
ANR	6319932	Symbol	stream -> feed		6314786						
ANR	6319933	Symbol	stderr		6314786						
ANR	6319934	Symbol	audio_enc . channels		6314786						
ANR	6319935	Symbol	video_enc . gop_size		6314786						
ANR	6319936	Symbol	naclp		6314786						
ANR	6319937	Symbol	stream -> fmt -> audio_codec		6314786						
ANR	6319938	Symbol	arg2		6314786						
ANR	6319939	Symbol	fsize		6314786						
ANR	6319940	Symbol	feed -> is_feed		6314786						
ANR	6319941	Symbol	* stream		6314786						
ANR	6319942	Symbol	my_http_addr . sin_addr . s_addr		6314786						
ANR	6319943	Symbol	video_enc . bit_rate		6314786						
ANR	6319944	Symbol	my_http_addr		6314786						
ANR	6319945	Symbol	* * redirect		6314786						
ANR	6319946	Symbol	video_enc . rc_max_rate		6314786						
ANR	6319947	Symbol	AV_OPT_FLAG_ENCODING_PARAM		6314786						
ANR	6319948	Symbol	& maxrate		6314786						
ANR	6319949	Symbol	redirect -> stream_type		6314786						
ANR	6319950	Symbol	IP_ALLOW		6314786						
ANR	6319951	Symbol	stream -> prebuffer		6314786						
ANR	6319952	Symbol	opt_video_codec		6314786						
ANR	6319953	Symbol	stream -> author		6314786						
ANR	6319954	Symbol	& ( * naclp ) -> next		6314786						
ANR	6319955	Symbol	max_bandwidth		6314786						
ANR	6319956	Symbol	video_enc . strict_std_compliance		6314786						
ANR	6319957	Symbol	& p		6314786						
ANR	6319958	Symbol	resolve_host		6314786						
ANR	6319959	Symbol	video_enc . luma_elim_threshold		6314786						
ANR	6319960	Symbol	CODEC_TYPE_AUDIO		6314786						
ANR	6319961	Symbol	* feed -> child_argv		6314786						
ANR	6319962	Symbol	nb_max_connections		6314786						
ANR	6319963	Symbol	video_enc . lumi_masking		6314786						
ANR	6319964	Symbol	& video_enc		6314786						
ANR	6319965	Symbol	type		6314786						
ANR	6319966	Symbol	ffserver_debug		6314786						
ANR	6319967	Symbol	FFM_PACKET_SIZE		6314786						
ANR	6319968	Symbol	nb_max_http_connections		6314786						
ANR	6319969	Symbol	acl . last		6314786						
ANR	6319970	Symbol	& my_rtsp_addr . sin_addr		6314786						
ANR	6319971	Symbol	val		6314786						
ANR	6319972	Symbol	av_find_input_format		6314786						
ANR	6319973	Symbol	video_enc . height		6314786						
ANR	6319974	Symbol	isspace		6314786						
ANR	6319975	Symbol	av_mallocz		6314786						
ANR	6319976	Symbol	& audio_enc		6314786						
ANR	6319977	Symbol	my_rtsp_addr . sin_port		6314786						
ANR	6319978	Symbol	video_enc . chroma_elim_threshold		6314786						
ANR	6319979	Symbol	stream -> send_on_key		6314786						
ANR	6319980	Symbol	video_enc . global_quality		6314786						
ANR	6319981	Symbol	& my_http_addr . sin_addr		6314786						
ANR	6319982	Symbol	& stream -> rtsp_option		6314786						
ANR	6319983	Symbol	cmd		6314786						
ANR	6319984	Symbol	CODEC_TYPE_VIDEO		6314786						
ANR	6319985	Symbol	feed -> feed		6314786						
ANR	6319986	Symbol	* arg		6314786						
ANR	6319987	Symbol	sfeed -> next_feed		6314786						
ANR	6319988	Symbol	STREAM_TYPE_LIVE		6314786						
ANR	6319989	Symbol	minrate		6314786						
ANR	6319990	Symbol	* redirect		6314786						
ANR	6319991	Symbol	& my_rtsp_addr		6314786						
ANR	6319992	Symbol	my_rtsp_addr		6314786						
ANR	6319993	Symbol	stream		6314786						
ANR	6319994	Symbol	strtol		6314786						
ANR	6319995	Symbol	STREAM_TYPE_STATUS		6314786						
ANR	6319996	Symbol	logfilename		6314786						
ANR	6319997	Symbol	stream -> max_time		6314786						
ANR	6319998	Symbol	* last_stream		6314786						
ANR	6319999	Symbol	& stream -> next		6314786						
ANR	6320000	Symbol	& first_feed		6314786						
ANR	6320001	Symbol	& feed -> next		6314786						
ANR	6320002	Symbol	stream -> ifmt		6314786						
ANR	6320003	Symbol	video_enc . idct_algo		6314786						
ANR	6320004	Symbol	atoi		6314786						
ANR	6320005	Symbol	* p1		6314786						
ANR	6320006	Symbol	toupper		6314786						
ANR	6320007	Symbol	av_parse_video_frame_rate		6314786						
ANR	6320008	Symbol	& video_enc . width		6314786						
ANR	6320009	Symbol	atof		6314786						
ANR	6320010	Symbol	AV_OPT_FLAG_VIDEO_PARAM		6314786						
ANR	6320011	Symbol	video_enc . qmax		6314786						
ANR	6320012	Symbol	nacl		6314786						
ANR	6320013	Symbol	video_enc . max_qdiff		6314786						
ANR	6320014	Symbol	my_http_addr . sin_port		6314786						
ANR	6320015	Symbol	acl . first		6314786						
ANR	6320016	Symbol	stream -> multicast_port		6314786						
ANR	6320017	Symbol	video_enc . time_base		6314786						
ANR	6320018	Symbol	AV_RL32		6314786						
ANR	6320019	Symbol	strrchr		6314786						
ANR	6320020	Symbol	* stream -> fmt		6314786						
ANR	6320021	Symbol	audio_enc . codec_type		6314786						
ANR	6320022	Symbol	INADDR_ANY		6314786						
ANR	6320023	Symbol	acl . next		6314786						
ANR	6320024	Symbol	* naclp		6314786						
ANR	6320025	Symbol	audio_enc . codec_id		6314786						
ANR	6320026	Symbol	llval		6314786						
ANR	6320027	Symbol	my_http_addr . sin_addr		6314786						
ANR	6320028	Symbol	acl . action		6314786						
ANR	6320029	Symbol	stream -> is_multicast		6314786						
ANR	6320030	Symbol	& stream -> acl		6314786						
ANR	6320031	Symbol	strcasecmp		6314786						
ANR	6320032	Symbol	* last_feed		6314786						
ANR	6320033	Symbol	strcmp		6314786						
ANR	6320034	Symbol	IP_DENY		6314786						
ANR	6320035	Symbol	NULL		6314786						
ANR	6320036	Symbol	video_enc . codec_id		6314786						
ANR	6320037	Symbol	stream -> fmt -> name		6314786						
ANR	6320038	Symbol	strtod		6314786						
ANR	6320039	Symbol	frame_rate		6314786						
ANR	6320040	Symbol	first_feed		6314786						
ANR	6320041	Symbol	feed		6314786						
ANR	6320042	Symbol	& acl		6314786						
ANR	6320043	Symbol	video_enc . codec_tag		6314786						
ANR	6320044	Symbol	first_stream		6314786						
ANR	6320045	Symbol	stream -> multicast_ttl		6314786						
ANR	6320046	Symbol	opt_audio_codec		6314786						
ANR	6320047	Symbol	stream -> loop		6314786						
ANR	6320048	Symbol	errors		6314786						
ANR	6320049	Symbol	ffserver_opt_default		6314786						
ANR	6320050	Symbol	p1		6314786						
ANR	6320051	Symbol	STREAM_TYPE_REDIRECT		6314786						
ANR	6320052	Symbol	redirect -> feed_filename		6314786						
ANR	6320053	Symbol	line		6314786						
ANR	6320054	Symbol	audio_enc		6314786						
ANR	6320055	Symbol	CODEC_FLAG_BITEXACT		6314786						
ANR	6320056	Symbol	& my_http_addr		6314786						
ANR	6320057	Symbol	* * feed		6314786						
ANR	6320058	Symbol	redirect -> filename		6314786						
ANR	6320059	Symbol	stream -> copyright		6314786						
ANR	6320060	Symbol	feed -> truncate		6314786						
ANR	6320061	Symbol	& p1		6314786						
ANR	6320062	Symbol	inet_ntoa		6314786						
ANR	6320063	Symbol	guess_format		6314786						
ANR	6320064	Symbol	* i		6314786						
ANR	6320065	Symbol	video_enc . debug		6314786						
ANR	6320066	Symbol	stream -> feed_filename		6314786						
ANR	6320067	Symbol	* redirect -> feed_filename		6314786						
ANR	6320068	Symbol	* p		6314786						
ANR	6320069	Symbol	* q		6314786						
ANR	6320070	Symbol	video_enc . time_base . num		6314786						
ANR	6320071	Symbol	* s		6314786						
ANR	6320072	Symbol	& minrate		6314786						
ANR	6320073	Symbol	* sfeed		6314786						
ANR	6320074	Symbol	video_id		6314786						
