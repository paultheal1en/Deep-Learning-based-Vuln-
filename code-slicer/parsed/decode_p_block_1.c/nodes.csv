command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1985100	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_p_block_1.c								
ANR	1985101	Function	decode_p_block	1:0:0:1927							
ANR	1985102	FunctionDef	"decode_p_block (FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride)"		1985101	0					
ANR	1985103	CompoundStatement		1:107:107:1927	1985101	0					
ANR	1985104	IdentifierDeclStatement	const int index = size2index [ log2h ] [ log2w ] ;	3:4:114:155	1985101	0	True				
ANR	1985105	IdentifierDecl	index = size2index [ log2h ] [ log2w ]		1985101	0					
ANR	1985106	IdentifierDeclType	const int		1985101	0					
ANR	1985107	Identifier	index		1985101	1					
ANR	1985108	AssignmentExpression	index = size2index [ log2h ] [ log2w ]		1985101	2		=			
ANR	1985109	Identifier	index		1985101	0					
ANR	1985110	ArrayIndexing	size2index [ log2h ] [ log2w ]		1985101	1					
ANR	1985111	ArrayIndexing	size2index [ log2h ]		1985101	0					
ANR	1985112	Identifier	size2index		1985101	0					
ANR	1985113	Identifier	log2h		1985101	1					
ANR	1985114	Identifier	log2w		1985101	1					
ANR	1985115	IdentifierDeclStatement	const int h = 1 << log2h ;	5:4:162:183	1985101	1	True				
ANR	1985116	IdentifierDecl	h = 1 << log2h		1985101	0					
ANR	1985117	IdentifierDeclType	const int		1985101	0					
ANR	1985118	Identifier	h		1985101	1					
ANR	1985119	AssignmentExpression	h = 1 << log2h		1985101	2		=			
ANR	1985120	Identifier	h		1985101	0					
ANR	1985121	ShiftExpression	1 << log2h		1985101	1		<<			
ANR	1985122	PrimaryExpression	1		1985101	0					
ANR	1985123	Identifier	log2h		1985101	1					
ANR	1985124	IdentifierDeclStatement	"int code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 ) ;"	7:4:190:287	1985101	2	True				
ANR	1985125	IdentifierDecl	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1985101	0					
ANR	1985126	IdentifierDeclType	int		1985101	0					
ANR	1985127	Identifier	code		1985101	1					
ANR	1985128	AssignmentExpression	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1985101	2		=			
ANR	1985129	Identifier	code		1985101	0					
ANR	1985130	CallExpression	"get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1985101	1					
ANR	1985131	Callee	get_vlc2		1985101	0					
ANR	1985132	Identifier	get_vlc2		1985101	0					
ANR	1985133	ArgumentList	& f -> gb		1985101	1					
ANR	1985134	Argument	& f -> gb		1985101	0					
ANR	1985135	UnaryOperationExpression	& f -> gb		1985101	0					
ANR	1985136	UnaryOperator	&		1985101	0					
ANR	1985137	PtrMemberAccess	f -> gb		1985101	1					
ANR	1985138	Identifier	f		1985101	0					
ANR	1985139	Identifier	gb		1985101	1					
ANR	1985140	Argument	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1985101	1					
ANR	1985141	MemberAccess	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1985101	0					
ANR	1985142	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ]		1985101	0					
ANR	1985143	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ]		1985101	0					
ANR	1985144	Identifier	block_type_vlc		1985101	0					
ANR	1985145	AdditiveExpression	1 - ( f -> version > 1 )		1985101	1		-			
ANR	1985146	PrimaryExpression	1		1985101	0					
ANR	1985147	RelationalExpression	f -> version > 1		1985101	1		>			
ANR	1985148	PtrMemberAccess	f -> version		1985101	0					
ANR	1985149	Identifier	f		1985101	0					
ANR	1985150	Identifier	version		1985101	1					
ANR	1985151	PrimaryExpression	1		1985101	1					
ANR	1985152	Identifier	index		1985101	1					
ANR	1985153	Identifier	table		1985101	1					
ANR	1985154	Argument	BLOCK_TYPE_VLC_BITS		1985101	2					
ANR	1985155	Identifier	BLOCK_TYPE_VLC_BITS		1985101	0					
ANR	1985156	Argument	1		1985101	3					
ANR	1985157	PrimaryExpression	1		1985101	0					
ANR	1985158	IdentifierDeclStatement	uint16_t * start = ( uint16_t * ) f -> last_picture . data [ 0 ] ;	9:4:294:345	1985101	3	True				
ANR	1985159	IdentifierDecl	* start = ( uint16_t * ) f -> last_picture . data [ 0 ]		1985101	0					
ANR	1985160	IdentifierDeclType	uint16_t *		1985101	0					
ANR	1985161	Identifier	start		1985101	1					
ANR	1985162	AssignmentExpression	* start = ( uint16_t * ) f -> last_picture . data [ 0 ]		1985101	2		=			
ANR	1985163	Identifier	start		1985101	0					
ANR	1985164	CastExpression	( uint16_t * ) f -> last_picture . data [ 0 ]		1985101	1					
ANR	1985165	CastTarget	uint16_t *		1985101	0					
ANR	1985166	ArrayIndexing	f -> last_picture . data [ 0 ]		1985101	1					
ANR	1985167	MemberAccess	f -> last_picture . data		1985101	0					
ANR	1985168	PtrMemberAccess	f -> last_picture		1985101	0					
ANR	1985169	Identifier	f		1985101	0					
ANR	1985170	Identifier	last_picture		1985101	1					
ANR	1985171	Identifier	data		1985101	1					
ANR	1985172	PrimaryExpression	0		1985101	1					
ANR	1985173	IdentifierDeclStatement	uint16_t * end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w ) ;	11:4:352:417	1985101	4	True				
ANR	1985174	IdentifierDecl	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1985101	0					
ANR	1985175	IdentifierDeclType	uint16_t *		1985101	0					
ANR	1985176	Identifier	end		1985101	1					
ANR	1985177	AssignmentExpression	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1985101	2		=			
ANR	1985178	Identifier	end		1985101	0					
ANR	1985179	AdditiveExpression	start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1985101	1		+			
ANR	1985180	Identifier	start		1985101	0					
ANR	1985181	AdditiveExpression	stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1985101	1		-			
ANR	1985182	MultiplicativeExpression	stride * ( f -> avctx -> height - h + 1 )		1985101	0		*			
ANR	1985183	Identifier	stride		1985101	0					
ANR	1985184	AdditiveExpression	f -> avctx -> height - h + 1		1985101	1		-			
ANR	1985185	PtrMemberAccess	f -> avctx -> height		1985101	0					
ANR	1985186	PtrMemberAccess	f -> avctx		1985101	0					
ANR	1985187	Identifier	f		1985101	0					
ANR	1985188	Identifier	avctx		1985101	1					
ANR	1985189	Identifier	height		1985101	1					
ANR	1985190	AdditiveExpression	h + 1		1985101	1		+			
ANR	1985191	Identifier	h		1985101	0					
ANR	1985192	PrimaryExpression	1		1985101	1					
ANR	1985193	ShiftExpression	1 << log2w		1985101	1		<<			
ANR	1985194	PrimaryExpression	1		1985101	0					
ANR	1985195	Identifier	log2w		1985101	1					
ANR	1985196	ExpressionStatement	assert ( code >= 0 && code <= 6 )	15:4:426:452	1985101	5	True				
ANR	1985197	CallExpression	assert ( code >= 0 && code <= 6 )		1985101	0					
ANR	1985198	Callee	assert		1985101	0					
ANR	1985199	Identifier	assert		1985101	0					
ANR	1985200	ArgumentList	code >= 0 && code <= 6		1985101	1					
ANR	1985201	Argument	code >= 0 && code <= 6		1985101	0					
ANR	1985202	AndExpression	code >= 0 && code <= 6		1985101	0		&&			
ANR	1985203	RelationalExpression	code >= 0		1985101	0		>=			
ANR	1985204	Identifier	code		1985101	0					
ANR	1985205	PrimaryExpression	0		1985101	1					
ANR	1985206	RelationalExpression	code <= 6		1985101	1		<=			
ANR	1985207	Identifier	code		1985101	0					
ANR	1985208	PrimaryExpression	6		1985101	1					
ANR	1985209	IfStatement	if ( code == 0 )		1985101	6					
ANR	1985210	Condition	code == 0	19:7:464:472	1985101	0	True				
ANR	1985211	EqualityExpression	code == 0		1985101	0		==			
ANR	1985212	Identifier	code		1985101	0					
ANR	1985213	PrimaryExpression	0		1985101	1					
ANR	1985214	CompoundStatement		19:17:366:366	1985101	1					
ANR	1985215	ExpressionStatement	src += f -> mv [ * f -> bytestream ++ ]	21:8:485:517	1985101	0	True				
ANR	1985216	AssignmentExpression	src += f -> mv [ * f -> bytestream ++ ]		1985101	0		+=			
ANR	1985217	Identifier	src		1985101	0					
ANR	1985218	ArrayIndexing	f -> mv [ * f -> bytestream ++ ]		1985101	1					
ANR	1985219	PtrMemberAccess	f -> mv		1985101	0					
ANR	1985220	Identifier	f		1985101	0					
ANR	1985221	Identifier	mv		1985101	1					
ANR	1985222	UnaryOperationExpression	* f -> bytestream ++		1985101	1					
ANR	1985223	UnaryOperator	*		1985101	0					
ANR	1985224	PostIncDecOperationExpression	f -> bytestream ++		1985101	1					
ANR	1985225	PtrMemberAccess	f -> bytestream		1985101	0					
ANR	1985226	Identifier	f		1985101	0					
ANR	1985227	Identifier	bytestream		1985101	1					
ANR	1985228	IncDec	++		1985101	1					
ANR	1985229	IfStatement	if ( start > src || src > end )		1985101	1					
ANR	1985230	Condition	start > src || src > end	23:11:531:554	1985101	0	True				
ANR	1985231	OrExpression	start > src || src > end		1985101	0		||			
ANR	1985232	RelationalExpression	start > src		1985101	0		>			
ANR	1985233	Identifier	start		1985101	0					
ANR	1985234	Identifier	src		1985101	1					
ANR	1985235	RelationalExpression	src > end		1985101	1		>			
ANR	1985236	Identifier	src		1985101	0					
ANR	1985237	Identifier	end		1985101	1					
ANR	1985238	CompoundStatement		23:36:448:448	1985101	1					
ANR	1985239	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	25:12:571:620	1985101	0	True				
ANR	1985240	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1985101	0					
ANR	1985241	Callee	av_log		1985101	0					
ANR	1985242	Identifier	av_log		1985101	0					
ANR	1985243	ArgumentList	f -> avctx		1985101	1					
ANR	1985244	Argument	f -> avctx		1985101	0					
ANR	1985245	PtrMemberAccess	f -> avctx		1985101	0					
ANR	1985246	Identifier	f		1985101	0					
ANR	1985247	Identifier	avctx		1985101	1					
ANR	1985248	Argument	AV_LOG_ERROR		1985101	1					
ANR	1985249	Identifier	AV_LOG_ERROR		1985101	0					
ANR	1985250	Argument	"""mv out of pic\\n"""		1985101	2					
ANR	1985251	PrimaryExpression	"""mv out of pic\\n"""		1985101	0					
ANR	1985252	ReturnStatement	return ;	27:12:635:641	1985101	1	True				
ANR	1985253	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"	31:8:663:701	1985101	2	True				
ANR	1985254	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"		1985101	0					
ANR	1985255	Callee	mcdc		1985101	0					
ANR	1985256	Identifier	mcdc		1985101	0					
ANR	1985257	ArgumentList	dst		1985101	1					
ANR	1985258	Argument	dst		1985101	0					
ANR	1985259	Identifier	dst		1985101	0					
ANR	1985260	Argument	src		1985101	1					
ANR	1985261	Identifier	src		1985101	0					
ANR	1985262	Argument	log2w		1985101	2					
ANR	1985263	Identifier	log2w		1985101	0					
ANR	1985264	Argument	h		1985101	3					
ANR	1985265	Identifier	h		1985101	0					
ANR	1985266	Argument	stride		1985101	4					
ANR	1985267	Identifier	stride		1985101	0					
ANR	1985268	Argument	1		1985101	5					
ANR	1985269	PrimaryExpression	1		1985101	0					
ANR	1985270	Argument	0		1985101	6					
ANR	1985271	PrimaryExpression	0		1985101	0					
ANR	1985272	ElseStatement	else		1985101	0					
ANR	1985273	IfStatement	if ( code == 1 )		1985101	0					
ANR	1985274	Condition	code == 1	33:13:717:725	1985101	0	True				
ANR	1985275	EqualityExpression	code == 1		1985101	0		==			
ANR	1985276	Identifier	code		1985101	0					
ANR	1985277	PrimaryExpression	1		1985101	1					
ANR	1985278	CompoundStatement		33:23:619:619	1985101	1					
ANR	1985279	ExpressionStatement	log2h --	35:8:738:745	1985101	0	True				
ANR	1985280	PostIncDecOperationExpression	log2h --		1985101	0					
ANR	1985281	Identifier	log2h		1985101	0					
ANR	1985282	IncDec	--		1985101	1					
ANR	1985283	ExpressionStatement	"decode_p_block ( f , dst , src , log2w , log2h , stride )"	37:8:756:841	1985101	1	True				
ANR	1985284	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1985101	0					
ANR	1985285	Callee	decode_p_block		1985101	0					
ANR	1985286	Identifier	decode_p_block		1985101	0					
ANR	1985287	ArgumentList	f		1985101	1					
ANR	1985288	Argument	f		1985101	0					
ANR	1985289	Identifier	f		1985101	0					
ANR	1985290	Argument	dst		1985101	1					
ANR	1985291	Identifier	dst		1985101	0					
ANR	1985292	Argument	src		1985101	2					
ANR	1985293	Identifier	src		1985101	0					
ANR	1985294	Argument	log2w		1985101	3					
ANR	1985295	Identifier	log2w		1985101	0					
ANR	1985296	Argument	log2h		1985101	4					
ANR	1985297	Identifier	log2h		1985101	0					
ANR	1985298	Argument	stride		1985101	5					
ANR	1985299	Identifier	stride		1985101	0					
ANR	1985300	ExpressionStatement	"decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride )"	39:8:852:937	1985101	2	True				
ANR	1985301	CallExpression	"decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride )"		1985101	0					
ANR	1985302	Callee	decode_p_block		1985101	0					
ANR	1985303	Identifier	decode_p_block		1985101	0					
ANR	1985304	ArgumentList	f		1985101	1					
ANR	1985305	Argument	f		1985101	0					
ANR	1985306	Identifier	f		1985101	0					
ANR	1985307	Argument	dst + ( stride << log2h )		1985101	1					
ANR	1985308	AdditiveExpression	dst + ( stride << log2h )		1985101	0		+			
ANR	1985309	Identifier	dst		1985101	0					
ANR	1985310	ShiftExpression	stride << log2h		1985101	1		<<			
ANR	1985311	Identifier	stride		1985101	0					
ANR	1985312	Identifier	log2h		1985101	1					
ANR	1985313	Argument	src + ( stride << log2h )		1985101	2					
ANR	1985314	AdditiveExpression	src + ( stride << log2h )		1985101	0		+			
ANR	1985315	Identifier	src		1985101	0					
ANR	1985316	ShiftExpression	stride << log2h		1985101	1		<<			
ANR	1985317	Identifier	stride		1985101	0					
ANR	1985318	Identifier	log2h		1985101	1					
ANR	1985319	Argument	log2w		1985101	3					
ANR	1985320	Identifier	log2w		1985101	0					
ANR	1985321	Argument	log2h		1985101	4					
ANR	1985322	Identifier	log2h		1985101	0					
ANR	1985323	Argument	stride		1985101	5					
ANR	1985324	Identifier	stride		1985101	0					
ANR	1985325	ElseStatement	else		1985101	0					
ANR	1985326	IfStatement	if ( code == 2 )		1985101	0					
ANR	1985327	Condition	code == 2	41:13:953:961	1985101	0	True				
ANR	1985328	EqualityExpression	code == 2		1985101	0		==			
ANR	1985329	Identifier	code		1985101	0					
ANR	1985330	PrimaryExpression	2		1985101	1					
ANR	1985331	CompoundStatement		41:23:855:855	1985101	1					
ANR	1985332	ExpressionStatement	log2w --	43:8:974:981	1985101	0	True				
ANR	1985333	PostIncDecOperationExpression	log2w --		1985101	0					
ANR	1985334	Identifier	log2w		1985101	0					
ANR	1985335	IncDec	--		1985101	1					
ANR	1985336	ExpressionStatement	"decode_p_block ( f , dst , src , log2w , log2h , stride )"	45:8:992:1067	1985101	1	True				
ANR	1985337	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1985101	0					
ANR	1985338	Callee	decode_p_block		1985101	0					
ANR	1985339	Identifier	decode_p_block		1985101	0					
ANR	1985340	ArgumentList	f		1985101	1					
ANR	1985341	Argument	f		1985101	0					
ANR	1985342	Identifier	f		1985101	0					
ANR	1985343	Argument	dst		1985101	1					
ANR	1985344	Identifier	dst		1985101	0					
ANR	1985345	Argument	src		1985101	2					
ANR	1985346	Identifier	src		1985101	0					
ANR	1985347	Argument	log2w		1985101	3					
ANR	1985348	Identifier	log2w		1985101	0					
ANR	1985349	Argument	log2h		1985101	4					
ANR	1985350	Identifier	log2h		1985101	0					
ANR	1985351	Argument	stride		1985101	5					
ANR	1985352	Identifier	stride		1985101	0					
ANR	1985353	ExpressionStatement	"decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride )"	47:8:1078:1153	1985101	2	True				
ANR	1985354	CallExpression	"decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride )"		1985101	0					
ANR	1985355	Callee	decode_p_block		1985101	0					
ANR	1985356	Identifier	decode_p_block		1985101	0					
ANR	1985357	ArgumentList	f		1985101	1					
ANR	1985358	Argument	f		1985101	0					
ANR	1985359	Identifier	f		1985101	0					
ANR	1985360	Argument	dst + ( 1 << log2w )		1985101	1					
ANR	1985361	AdditiveExpression	dst + ( 1 << log2w )		1985101	0		+			
ANR	1985362	Identifier	dst		1985101	0					
ANR	1985363	ShiftExpression	1 << log2w		1985101	1		<<			
ANR	1985364	PrimaryExpression	1		1985101	0					
ANR	1985365	Identifier	log2w		1985101	1					
ANR	1985366	Argument	src + ( 1 << log2w )		1985101	2					
ANR	1985367	AdditiveExpression	src + ( 1 << log2w )		1985101	0		+			
ANR	1985368	Identifier	src		1985101	0					
ANR	1985369	ShiftExpression	1 << log2w		1985101	1		<<			
ANR	1985370	PrimaryExpression	1		1985101	0					
ANR	1985371	Identifier	log2w		1985101	1					
ANR	1985372	Argument	log2w		1985101	3					
ANR	1985373	Identifier	log2w		1985101	0					
ANR	1985374	Argument	log2h		1985101	4					
ANR	1985375	Identifier	log2h		1985101	0					
ANR	1985376	Argument	stride		1985101	5					
ANR	1985377	Identifier	stride		1985101	0					
ANR	1985378	ElseStatement	else		1985101	0					
ANR	1985379	IfStatement	if ( code == 3 && f -> version < 2 )		1985101	0					
ANR	1985380	Condition	code == 3 && f -> version < 2	49:13:1169:1193	1985101	0	True				
ANR	1985381	AndExpression	code == 3 && f -> version < 2		1985101	0		&&			
ANR	1985382	EqualityExpression	code == 3		1985101	0		==			
ANR	1985383	Identifier	code		1985101	0					
ANR	1985384	PrimaryExpression	3		1985101	1					
ANR	1985385	RelationalExpression	f -> version < 2		1985101	1		<			
ANR	1985386	PtrMemberAccess	f -> version		1985101	0					
ANR	1985387	Identifier	f		1985101	0					
ANR	1985388	Identifier	version		1985101	1					
ANR	1985389	PrimaryExpression	2		1985101	1					
ANR	1985390	CompoundStatement		49:39:1087:1087	1985101	1					
ANR	1985391	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"	51:8:1206:1244	1985101	0	True				
ANR	1985392	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"		1985101	0					
ANR	1985393	Callee	mcdc		1985101	0					
ANR	1985394	Identifier	mcdc		1985101	0					
ANR	1985395	ArgumentList	dst		1985101	1					
ANR	1985396	Argument	dst		1985101	0					
ANR	1985397	Identifier	dst		1985101	0					
ANR	1985398	Argument	src		1985101	1					
ANR	1985399	Identifier	src		1985101	0					
ANR	1985400	Argument	log2w		1985101	2					
ANR	1985401	Identifier	log2w		1985101	0					
ANR	1985402	Argument	h		1985101	3					
ANR	1985403	Identifier	h		1985101	0					
ANR	1985404	Argument	stride		1985101	4					
ANR	1985405	Identifier	stride		1985101	0					
ANR	1985406	Argument	1		1985101	5					
ANR	1985407	PrimaryExpression	1		1985101	0					
ANR	1985408	Argument	0		1985101	6					
ANR	1985409	PrimaryExpression	0		1985101	0					
ANR	1985410	ElseStatement	else		1985101	0					
ANR	1985411	IfStatement	if ( code == 4 )		1985101	0					
ANR	1985412	Condition	code == 4	53:13:1260:1268	1985101	0	True				
ANR	1985413	EqualityExpression	code == 4		1985101	0		==			
ANR	1985414	Identifier	code		1985101	0					
ANR	1985415	PrimaryExpression	4		1985101	1					
ANR	1985416	CompoundStatement		53:23:1162:1162	1985101	1					
ANR	1985417	ExpressionStatement	src += f -> mv [ * f -> bytestream ++ ]	55:8:1281:1313	1985101	0	True				
ANR	1985418	AssignmentExpression	src += f -> mv [ * f -> bytestream ++ ]		1985101	0		+=			
ANR	1985419	Identifier	src		1985101	0					
ANR	1985420	ArrayIndexing	f -> mv [ * f -> bytestream ++ ]		1985101	1					
ANR	1985421	PtrMemberAccess	f -> mv		1985101	0					
ANR	1985422	Identifier	f		1985101	0					
ANR	1985423	Identifier	mv		1985101	1					
ANR	1985424	UnaryOperationExpression	* f -> bytestream ++		1985101	1					
ANR	1985425	UnaryOperator	*		1985101	0					
ANR	1985426	PostIncDecOperationExpression	f -> bytestream ++		1985101	1					
ANR	1985427	PtrMemberAccess	f -> bytestream		1985101	0					
ANR	1985428	Identifier	f		1985101	0					
ANR	1985429	Identifier	bytestream		1985101	1					
ANR	1985430	IncDec	++		1985101	1					
ANR	1985431	IfStatement	if ( start > src || src > end )		1985101	1					
ANR	1985432	Condition	start > src || src > end	57:11:1327:1350	1985101	0	True				
ANR	1985433	OrExpression	start > src || src > end		1985101	0		||			
ANR	1985434	RelationalExpression	start > src		1985101	0		>			
ANR	1985435	Identifier	start		1985101	0					
ANR	1985436	Identifier	src		1985101	1					
ANR	1985437	RelationalExpression	src > end		1985101	1		>			
ANR	1985438	Identifier	src		1985101	0					
ANR	1985439	Identifier	end		1985101	1					
ANR	1985440	CompoundStatement		57:36:1244:1244	1985101	1					
ANR	1985441	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	59:12:1367:1416	1985101	0	True				
ANR	1985442	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1985101	0					
ANR	1985443	Callee	av_log		1985101	0					
ANR	1985444	Identifier	av_log		1985101	0					
ANR	1985445	ArgumentList	f -> avctx		1985101	1					
ANR	1985446	Argument	f -> avctx		1985101	0					
ANR	1985447	PtrMemberAccess	f -> avctx		1985101	0					
ANR	1985448	Identifier	f		1985101	0					
ANR	1985449	Identifier	avctx		1985101	1					
ANR	1985450	Argument	AV_LOG_ERROR		1985101	1					
ANR	1985451	Identifier	AV_LOG_ERROR		1985101	0					
ANR	1985452	Argument	"""mv out of pic\\n"""		1985101	2					
ANR	1985453	PrimaryExpression	"""mv out of pic\\n"""		1985101	0					
ANR	1985454	ReturnStatement	return ;	61:12:1431:1437	1985101	1	True				
ANR	1985455	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , av_le2ne16 ( * f -> wordstream ++ ) )"	65:8:1459:1524	1985101	2	True				
ANR	1985456	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , av_le2ne16 ( * f -> wordstream ++ ) )"		1985101	0					
ANR	1985457	Callee	mcdc		1985101	0					
ANR	1985458	Identifier	mcdc		1985101	0					
ANR	1985459	ArgumentList	dst		1985101	1					
ANR	1985460	Argument	dst		1985101	0					
ANR	1985461	Identifier	dst		1985101	0					
ANR	1985462	Argument	src		1985101	1					
ANR	1985463	Identifier	src		1985101	0					
ANR	1985464	Argument	log2w		1985101	2					
ANR	1985465	Identifier	log2w		1985101	0					
ANR	1985466	Argument	h		1985101	3					
ANR	1985467	Identifier	h		1985101	0					
ANR	1985468	Argument	stride		1985101	4					
ANR	1985469	Identifier	stride		1985101	0					
ANR	1985470	Argument	1		1985101	5					
ANR	1985471	PrimaryExpression	1		1985101	0					
ANR	1985472	Argument	av_le2ne16 ( * f -> wordstream ++ )		1985101	6					
ANR	1985473	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	0					
ANR	1985474	Callee	av_le2ne16		1985101	0					
ANR	1985475	Identifier	av_le2ne16		1985101	0					
ANR	1985476	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985477	Argument	* f -> wordstream ++		1985101	0					
ANR	1985478	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985479	UnaryOperator	*		1985101	0					
ANR	1985480	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985481	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985482	Identifier	f		1985101	0					
ANR	1985483	Identifier	wordstream		1985101	1					
ANR	1985484	IncDec	++		1985101	1					
ANR	1985485	ElseStatement	else		1985101	0					
ANR	1985486	IfStatement	if ( code == 5 )		1985101	0					
ANR	1985487	Condition	code == 5	67:13:1540:1548	1985101	0	True				
ANR	1985488	EqualityExpression	code == 5		1985101	0		==			
ANR	1985489	Identifier	code		1985101	0					
ANR	1985490	PrimaryExpression	5		1985101	1					
ANR	1985491	CompoundStatement		67:23:1442:1442	1985101	1					
ANR	1985492	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 0 , av_le2ne16 ( * f -> wordstream ++ ) )"	69:8:1561:1626	1985101	0	True				
ANR	1985493	CallExpression	"mcdc ( dst , src , log2w , h , stride , 0 , av_le2ne16 ( * f -> wordstream ++ ) )"		1985101	0					
ANR	1985494	Callee	mcdc		1985101	0					
ANR	1985495	Identifier	mcdc		1985101	0					
ANR	1985496	ArgumentList	dst		1985101	1					
ANR	1985497	Argument	dst		1985101	0					
ANR	1985498	Identifier	dst		1985101	0					
ANR	1985499	Argument	src		1985101	1					
ANR	1985500	Identifier	src		1985101	0					
ANR	1985501	Argument	log2w		1985101	2					
ANR	1985502	Identifier	log2w		1985101	0					
ANR	1985503	Argument	h		1985101	3					
ANR	1985504	Identifier	h		1985101	0					
ANR	1985505	Argument	stride		1985101	4					
ANR	1985506	Identifier	stride		1985101	0					
ANR	1985507	Argument	0		1985101	5					
ANR	1985508	PrimaryExpression	0		1985101	0					
ANR	1985509	Argument	av_le2ne16 ( * f -> wordstream ++ )		1985101	6					
ANR	1985510	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	0					
ANR	1985511	Callee	av_le2ne16		1985101	0					
ANR	1985512	Identifier	av_le2ne16		1985101	0					
ANR	1985513	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985514	Argument	* f -> wordstream ++		1985101	0					
ANR	1985515	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985516	UnaryOperator	*		1985101	0					
ANR	1985517	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985518	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985519	Identifier	f		1985101	0					
ANR	1985520	Identifier	wordstream		1985101	1					
ANR	1985521	IncDec	++		1985101	1					
ANR	1985522	ElseStatement	else		1985101	0					
ANR	1985523	IfStatement	if ( code == 6 )		1985101	0					
ANR	1985524	Condition	code == 6	71:13:1642:1650	1985101	0	True				
ANR	1985525	EqualityExpression	code == 6		1985101	0		==			
ANR	1985526	Identifier	code		1985101	0					
ANR	1985527	PrimaryExpression	6		1985101	1					
ANR	1985528	CompoundStatement		71:23:1544:1544	1985101	1					
ANR	1985529	IfStatement	if ( log2w )		1985101	0					
ANR	1985530	Condition	log2w	73:11:1666:1670	1985101	0	True				
ANR	1985531	Identifier	log2w		1985101	0					
ANR	1985532	CompoundStatement		73:17:1564:1564	1985101	1					
ANR	1985533	ExpressionStatement	dst [ 0 ] = av_le2ne16 ( * f -> wordstream ++ )	75:12:1687:1724	1985101	0	True				
ANR	1985534	AssignmentExpression	dst [ 0 ] = av_le2ne16 ( * f -> wordstream ++ )		1985101	0		=			
ANR	1985535	ArrayIndexing	dst [ 0 ]		1985101	0					
ANR	1985536	Identifier	dst		1985101	0					
ANR	1985537	PrimaryExpression	0		1985101	1					
ANR	1985538	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	1					
ANR	1985539	Callee	av_le2ne16		1985101	0					
ANR	1985540	Identifier	av_le2ne16		1985101	0					
ANR	1985541	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985542	Argument	* f -> wordstream ++		1985101	0					
ANR	1985543	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985544	UnaryOperator	*		1985101	0					
ANR	1985545	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985546	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985547	Identifier	f		1985101	0					
ANR	1985548	Identifier	wordstream		1985101	1					
ANR	1985549	IncDec	++		1985101	1					
ANR	1985550	ExpressionStatement	dst [ 1 ] = av_le2ne16 ( * f -> wordstream ++ )	77:12:1739:1776	1985101	1	True				
ANR	1985551	AssignmentExpression	dst [ 1 ] = av_le2ne16 ( * f -> wordstream ++ )		1985101	0		=			
ANR	1985552	ArrayIndexing	dst [ 1 ]		1985101	0					
ANR	1985553	Identifier	dst		1985101	0					
ANR	1985554	PrimaryExpression	1		1985101	1					
ANR	1985555	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	1					
ANR	1985556	Callee	av_le2ne16		1985101	0					
ANR	1985557	Identifier	av_le2ne16		1985101	0					
ANR	1985558	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985559	Argument	* f -> wordstream ++		1985101	0					
ANR	1985560	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985561	UnaryOperator	*		1985101	0					
ANR	1985562	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985563	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985564	Identifier	f		1985101	0					
ANR	1985565	Identifier	wordstream		1985101	1					
ANR	1985566	IncDec	++		1985101	1					
ANR	1985567	ElseStatement	else		1985101	0					
ANR	1985568	CompoundStatement		79:13:1684:1684	1985101	0					
ANR	1985569	ExpressionStatement	dst [ 0 ] = av_le2ne16 ( * f -> wordstream ++ )	81:12:1807:1849	1985101	0	True				
ANR	1985570	AssignmentExpression	dst [ 0 ] = av_le2ne16 ( * f -> wordstream ++ )		1985101	0		=			
ANR	1985571	ArrayIndexing	dst [ 0 ]		1985101	0					
ANR	1985572	Identifier	dst		1985101	0					
ANR	1985573	PrimaryExpression	0		1985101	1					
ANR	1985574	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	1					
ANR	1985575	Callee	av_le2ne16		1985101	0					
ANR	1985576	Identifier	av_le2ne16		1985101	0					
ANR	1985577	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985578	Argument	* f -> wordstream ++		1985101	0					
ANR	1985579	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985580	UnaryOperator	*		1985101	0					
ANR	1985581	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985582	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985583	Identifier	f		1985101	0					
ANR	1985584	Identifier	wordstream		1985101	1					
ANR	1985585	IncDec	++		1985101	1					
ANR	1985586	ExpressionStatement	dst [ stride ] = av_le2ne16 ( * f -> wordstream ++ )	83:12:1864:1906	1985101	1	True				
ANR	1985587	AssignmentExpression	dst [ stride ] = av_le2ne16 ( * f -> wordstream ++ )		1985101	0		=			
ANR	1985588	ArrayIndexing	dst [ stride ]		1985101	0					
ANR	1985589	Identifier	dst		1985101	0					
ANR	1985590	Identifier	stride		1985101	1					
ANR	1985591	CallExpression	av_le2ne16 ( * f -> wordstream ++ )		1985101	1					
ANR	1985592	Callee	av_le2ne16		1985101	0					
ANR	1985593	Identifier	av_le2ne16		1985101	0					
ANR	1985594	ArgumentList	* f -> wordstream ++		1985101	1					
ANR	1985595	Argument	* f -> wordstream ++		1985101	0					
ANR	1985596	UnaryOperationExpression	* f -> wordstream ++		1985101	0					
ANR	1985597	UnaryOperator	*		1985101	0					
ANR	1985598	PostIncDecOperationExpression	f -> wordstream ++		1985101	1					
ANR	1985599	PtrMemberAccess	f -> wordstream		1985101	0					
ANR	1985600	Identifier	f		1985101	0					
ANR	1985601	Identifier	wordstream		1985101	1					
ANR	1985602	IncDec	++		1985101	1					
ANR	1985603	ReturnType	static void		1985101	1					
ANR	1985604	Identifier	decode_p_block		1985101	2					
ANR	1985605	ParameterList	"FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride"		1985101	3					
ANR	1985606	Parameter	FourXContext * f	1:27:27:41	1985101	0	True				
ANR	1985607	ParameterType	FourXContext *		1985101	0					
ANR	1985608	Identifier	f		1985101	1					
ANR	1985609	Parameter	uint16_t * dst	1:44:44:56	1985101	1	True				
ANR	1985610	ParameterType	uint16_t *		1985101	0					
ANR	1985611	Identifier	dst		1985101	1					
ANR	1985612	Parameter	uint16_t * src	1:59:59:71	1985101	2	True				
ANR	1985613	ParameterType	uint16_t *		1985101	0					
ANR	1985614	Identifier	src		1985101	1					
ANR	1985615	Parameter	int log2w	1:74:74:82	1985101	3	True				
ANR	1985616	ParameterType	int		1985101	0					
ANR	1985617	Identifier	log2w		1985101	1					
ANR	1985618	Parameter	int log2h	1:85:85:93	1985101	4	True				
ANR	1985619	ParameterType	int		1985101	0					
ANR	1985620	Identifier	log2h		1985101	1					
ANR	1985621	Parameter	int stride	1:96:96:105	1985101	5	True				
ANR	1985622	ParameterType	int		1985101	0					
ANR	1985623	Identifier	stride		1985101	1					
ANR	1985624	CFGEntryNode	ENTRY		1985101		True				
ANR	1985625	CFGExitNode	EXIT		1985101		True				
ANR	1985626	Symbol	* * f -> bytestream ++		1985101						
ANR	1985627	Symbol	* stride		1985101						
ANR	1985628	Symbol	* f -> mv		1985101						
ANR	1985629	Symbol	* index		1985101						
ANR	1985630	Symbol	stride		1985101						
ANR	1985631	Symbol	* * size2index		1985101						
ANR	1985632	Symbol	* dst		1985101						
ANR	1985633	Symbol	f -> version		1985101						
ANR	1985634	Symbol	log2h		1985101						
ANR	1985635	Symbol	size2index		1985101						
ANR	1985636	Symbol	* f -> version		1985101						
ANR	1985637	Symbol	* * f		1985101						
ANR	1985638	Symbol	* * log2h		1985101						
ANR	1985639	Symbol	block_type_vlc		1985101						
ANR	1985640	Symbol	index		1985101						
ANR	1985641	Symbol	* f -> last_picture . data		1985101						
ANR	1985642	Symbol	av_le2ne16		1985101						
ANR	1985643	Symbol	* * * f		1985101						
ANR	1985644	Symbol	f -> wordstream		1985101						
ANR	1985645	Symbol	* * block_type_vlc		1985101						
ANR	1985646	Symbol	* log2h		1985101						
ANR	1985647	Symbol	code		1985101						
ANR	1985648	Symbol	dst		1985101						
ANR	1985649	Symbol	* f -> last_picture		1985101						
ANR	1985650	Symbol	BLOCK_TYPE_VLC_BITS		1985101						
ANR	1985651	Symbol	f -> avctx		1985101						
ANR	1985652	Symbol	& f -> gb		1985101						
ANR	1985653	Symbol	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1985101						
ANR	1985654	Symbol	f -> mv		1985101						
ANR	1985655	Symbol	* log2w		1985101						
ANR	1985656	Symbol	f -> last_picture . data		1985101						
ANR	1985657	Symbol	end		1985101						
ANR	1985658	Symbol	* * f -> version		1985101						
ANR	1985659	Symbol	* block_type_vlc		1985101						
ANR	1985660	Symbol	* f -> avctx		1985101						
ANR	1985661	Symbol	AV_LOG_ERROR		1985101						
ANR	1985662	Symbol	src		1985101						
ANR	1985663	Symbol	f		1985101						
ANR	1985664	Symbol	* f -> bytestream ++		1985101						
ANR	1985665	Symbol	f -> last_picture		1985101						
ANR	1985666	Symbol	h		1985101						
ANR	1985667	Symbol	start		1985101						
ANR	1985668	Symbol	* size2index		1985101						
ANR	1985669	Symbol	log2w		1985101						
ANR	1985670	Symbol	* f -> wordstream ++		1985101						
ANR	1985671	Symbol	f -> bytestream		1985101						
ANR	1985672	Symbol	* f		1985101						
ANR	1985673	Symbol	f -> avctx -> height		1985101						
ANR	1985674	Symbol	get_vlc2		1985101						
