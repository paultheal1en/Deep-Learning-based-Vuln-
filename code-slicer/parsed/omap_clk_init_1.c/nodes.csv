command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6154847	File	/home/p4ultr4n/workplace/ReVeal/raw_code/omap_clk_init_1.c								
ANR	6154848	Function	omap_clk_init	1:0:0:1515							
ANR	6154849	FunctionDef	omap_clk_init (struct omap_mpu_state_s * mpu)		6154848	0					
ANR	6154850	CompoundStatement		3:0:50:1515	6154848	0					
ANR	6154851	IdentifierDeclStatement	"struct clk * * i , * j , * k ;"	5:4:57:79	6154848	0	True				
ANR	6154852	IdentifierDecl	* * i		6154848	0					
ANR	6154853	IdentifierDeclType	struct clk * *		6154848	0					
ANR	6154854	Identifier	i		6154848	1					
ANR	6154855	IdentifierDecl	* j		6154848	1					
ANR	6154856	IdentifierDeclType	struct clk *		6154848	0					
ANR	6154857	Identifier	j		6154848	1					
ANR	6154858	IdentifierDecl	* k		6154848	2					
ANR	6154859	IdentifierDeclType	struct clk *		6154848	0					
ANR	6154860	Identifier	k		6154848	1					
ANR	6154861	IdentifierDeclStatement	int count ;	7:4:86:95	6154848	1	True				
ANR	6154862	IdentifierDecl	count		6154848	0					
ANR	6154863	IdentifierDeclType	int		6154848	0					
ANR	6154864	Identifier	count		6154848	1					
ANR	6154865	IdentifierDeclStatement	int flag ;	9:4:102:110	6154848	2	True				
ANR	6154866	IdentifierDecl	flag		6154848	0					
ANR	6154867	IdentifierDeclType	int		6154848	0					
ANR	6154868	Identifier	flag		6154848	1					
ANR	6154869	IfStatement	if ( cpu_is_omap310 ( mpu ) )		6154848	3					
ANR	6154870	Condition	cpu_is_omap310 ( mpu )	13:8:123:141	6154848	0	True				
ANR	6154871	CallExpression	cpu_is_omap310 ( mpu )		6154848	0					
ANR	6154872	Callee	cpu_is_omap310		6154848	0					
ANR	6154873	Identifier	cpu_is_omap310		6154848	0					
ANR	6154874	ArgumentList	mpu		6154848	1					
ANR	6154875	Argument	mpu		6154848	0					
ANR	6154876	Identifier	mpu		6154848	0					
ANR	6154877	ExpressionStatement	flag = CLOCK_IN_OMAP310	15:8:153:176	6154848	1	True				
ANR	6154878	AssignmentExpression	flag = CLOCK_IN_OMAP310		6154848	0		=			
ANR	6154879	Identifier	flag		6154848	0					
ANR	6154880	Identifier	CLOCK_IN_OMAP310		6154848	1					
ANR	6154881	ElseStatement	else		6154848	0					
ANR	6154882	IfStatement	if ( cpu_is_omap1510 ( mpu ) )		6154848	0					
ANR	6154883	Condition	cpu_is_omap1510 ( mpu )	17:13:192:211	6154848	0	True				
ANR	6154884	CallExpression	cpu_is_omap1510 ( mpu )		6154848	0					
ANR	6154885	Callee	cpu_is_omap1510		6154848	0					
ANR	6154886	Identifier	cpu_is_omap1510		6154848	0					
ANR	6154887	ArgumentList	mpu		6154848	1					
ANR	6154888	Argument	mpu		6154848	0					
ANR	6154889	Identifier	mpu		6154848	0					
ANR	6154890	ExpressionStatement	flag = CLOCK_IN_OMAP1510	19:8:223:247	6154848	1	True				
ANR	6154891	AssignmentExpression	flag = CLOCK_IN_OMAP1510		6154848	0		=			
ANR	6154892	Identifier	flag		6154848	0					
ANR	6154893	Identifier	CLOCK_IN_OMAP1510		6154848	1					
ANR	6154894	ElseStatement	else		6154848	0					
ANR	6154895	IfStatement	if ( cpu_is_omap2410 ( mpu ) || cpu_is_omap2420 ( mpu ) )		6154848	0					
ANR	6154896	Condition	cpu_is_omap2410 ( mpu ) || cpu_is_omap2420 ( mpu )	21:13:263:306	6154848	0	True				
ANR	6154897	OrExpression	cpu_is_omap2410 ( mpu ) || cpu_is_omap2420 ( mpu )		6154848	0		||			
ANR	6154898	CallExpression	cpu_is_omap2410 ( mpu )		6154848	0					
ANR	6154899	Callee	cpu_is_omap2410		6154848	0					
ANR	6154900	Identifier	cpu_is_omap2410		6154848	0					
ANR	6154901	ArgumentList	mpu		6154848	1					
ANR	6154902	Argument	mpu		6154848	0					
ANR	6154903	Identifier	mpu		6154848	0					
ANR	6154904	CallExpression	cpu_is_omap2420 ( mpu )		6154848	1					
ANR	6154905	Callee	cpu_is_omap2420		6154848	0					
ANR	6154906	Identifier	cpu_is_omap2420		6154848	0					
ANR	6154907	ArgumentList	mpu		6154848	1					
ANR	6154908	Argument	mpu		6154848	0					
ANR	6154909	Identifier	mpu		6154848	0					
ANR	6154910	ExpressionStatement	flag = CLOCK_IN_OMAP242X	23:8:318:342	6154848	1	True				
ANR	6154911	AssignmentExpression	flag = CLOCK_IN_OMAP242X		6154848	0		=			
ANR	6154912	Identifier	flag		6154848	0					
ANR	6154913	Identifier	CLOCK_IN_OMAP242X		6154848	1					
ANR	6154914	ElseStatement	else		6154848	0					
ANR	6154915	IfStatement	if ( cpu_is_omap2430 ( mpu ) )		6154848	0					
ANR	6154916	Condition	cpu_is_omap2430 ( mpu )	25:13:358:377	6154848	0	True				
ANR	6154917	CallExpression	cpu_is_omap2430 ( mpu )		6154848	0					
ANR	6154918	Callee	cpu_is_omap2430		6154848	0					
ANR	6154919	Identifier	cpu_is_omap2430		6154848	0					
ANR	6154920	ArgumentList	mpu		6154848	1					
ANR	6154921	Argument	mpu		6154848	0					
ANR	6154922	Identifier	mpu		6154848	0					
ANR	6154923	ExpressionStatement	flag = CLOCK_IN_OMAP243X	27:8:389:413	6154848	1	True				
ANR	6154924	AssignmentExpression	flag = CLOCK_IN_OMAP243X		6154848	0		=			
ANR	6154925	Identifier	flag		6154848	0					
ANR	6154926	Identifier	CLOCK_IN_OMAP243X		6154848	1					
ANR	6154927	ElseStatement	else		6154848	0					
ANR	6154928	IfStatement	if ( cpu_is_omap3430 ( mpu ) )		6154848	0					
ANR	6154929	Condition	cpu_is_omap3430 ( mpu )	29:13:429:448	6154848	0	True				
ANR	6154930	CallExpression	cpu_is_omap3430 ( mpu )		6154848	0					
ANR	6154931	Callee	cpu_is_omap3430		6154848	0					
ANR	6154932	Identifier	cpu_is_omap3430		6154848	0					
ANR	6154933	ArgumentList	mpu		6154848	1					
ANR	6154934	Argument	mpu		6154848	0					
ANR	6154935	Identifier	mpu		6154848	0					
ANR	6154936	ExpressionStatement	flag = CLOCK_IN_OMAP243X	31:8:460:484	6154848	1	True				
ANR	6154937	AssignmentExpression	flag = CLOCK_IN_OMAP243X		6154848	0		=			
ANR	6154938	Identifier	flag		6154848	0					
ANR	6154939	Identifier	CLOCK_IN_OMAP243X		6154848	1					
ANR	6154940	ElseStatement	else		6154848	0					
ANR	6154941	ReturnStatement	return ;	35:8:505:511	6154848	0	True				
ANR	6154942	ForStatement	"for ( i = onchip_clks , count = 0 ; * i ; i ++ )"		6154848	4					
ANR	6154943	ForInit	"i = onchip_clks , count = 0 ;"	39:9:525:551	6154848	0	True				
ANR	6154944	Expression	"i = onchip_clks , count = 0"		6154848	0					
ANR	6154945	AssignmentExpression	i = onchip_clks		6154848	0		=			
ANR	6154946	Identifier	i		6154848	0					
ANR	6154947	Identifier	onchip_clks		6154848	1					
ANR	6154948	AssignmentExpression	count = 0		6154848	1		=			
ANR	6154949	Identifier	count		6154848	0					
ANR	6154950	PrimaryExpression	0		6154848	1					
ANR	6154951	Condition	* i	39:37:553:554	6154848	1	True				
ANR	6154952	UnaryOperationExpression	* i		6154848	0					
ANR	6154953	UnaryOperator	*		6154848	0					
ANR	6154954	Identifier	i		6154848	1					
ANR	6154955	PostIncDecOperationExpression	i ++	39:41:557:560	6154848	2	True				
ANR	6154956	Identifier	i		6154848	0					
ANR	6154957	IncDec	++		6154848	1					
ANR	6154958	IfStatement	if ( ( * i ) -> flags & flag )		6154848	3					
ANR	6154959	Condition	( * i ) -> flags & flag	41:12:576:593	6154848	0	True				
ANR	6154960	BitAndExpression	( * i ) -> flags & flag		6154848	0		&			
ANR	6154961	PtrMemberAccess	( * i ) -> flags		6154848	0					
ANR	6154962	UnaryOperationExpression	* i		6154848	0					
ANR	6154963	UnaryOperator	*		6154848	0					
ANR	6154964	Identifier	i		6154848	1					
ANR	6154965	Identifier	flags		6154848	1					
ANR	6154966	Identifier	flag		6154848	1					
ANR	6154967	ExpressionStatement	count ++	43:12:609:617	6154848	1	True				
ANR	6154968	PostIncDecOperationExpression	count ++		6154848	0					
ANR	6154969	Identifier	count		6154848	0					
ANR	6154970	IncDec	++		6154848	1					
ANR	6154971	ExpressionStatement	mpu -> clks = ( struct clk * ) g_malloc0 ( sizeof ( struct clk ) * ( count + 1 ) )	45:4:624:694	6154848	5	True				
ANR	6154972	AssignmentExpression	mpu -> clks = ( struct clk * ) g_malloc0 ( sizeof ( struct clk ) * ( count + 1 ) )		6154848	0		=			
ANR	6154973	PtrMemberAccess	mpu -> clks		6154848	0					
ANR	6154974	Identifier	mpu		6154848	0					
ANR	6154975	Identifier	clks		6154848	1					
ANR	6154976	CastExpression	( struct clk * ) g_malloc0 ( sizeof ( struct clk ) * ( count + 1 ) )		6154848	1					
ANR	6154977	CastTarget	struct clk *		6154848	0					
ANR	6154978	CallExpression	g_malloc0 ( sizeof ( struct clk ) * ( count + 1 ) )		6154848	1					
ANR	6154979	Callee	g_malloc0		6154848	0					
ANR	6154980	Identifier	g_malloc0		6154848	0					
ANR	6154981	ArgumentList	sizeof ( struct clk ) * ( count + 1 )		6154848	1					
ANR	6154982	Argument	sizeof ( struct clk ) * ( count + 1 )		6154848	0					
ANR	6154983	MultiplicativeExpression	sizeof ( struct clk ) * ( count + 1 )		6154848	0		*			
ANR	6154984	SizeofExpression	sizeof ( struct clk )		6154848	0					
ANR	6154985	Sizeof	sizeof		6154848	0					
ANR	6154986	SizeofOperand	struct clk		6154848	1					
ANR	6154987	AdditiveExpression	count + 1		6154848	1		+			
ANR	6154988	Identifier	count		6154848	0					
ANR	6154989	PrimaryExpression	1		6154848	1					
ANR	6154990	ForStatement	"for ( i = onchip_clks , j = mpu -> clks ; * i ; i ++ )"		6154848	6					
ANR	6154991	ForInit	"i = onchip_clks , j = mpu -> clks ;"	47:9:706:736	6154848	0	True				
ANR	6154992	Expression	"i = onchip_clks , j = mpu -> clks"		6154848	0					
ANR	6154993	AssignmentExpression	i = onchip_clks		6154848	0		=			
ANR	6154994	Identifier	i		6154848	0					
ANR	6154995	Identifier	onchip_clks		6154848	1					
ANR	6154996	AssignmentExpression	j = mpu -> clks		6154848	1		=			
ANR	6154997	Identifier	j		6154848	0					
ANR	6154998	PtrMemberAccess	mpu -> clks		6154848	1					
ANR	6154999	Identifier	mpu		6154848	0					
ANR	6155000	Identifier	clks		6154848	1					
ANR	6155001	Condition	* i	47:41:738:739	6154848	1	True				
ANR	6155002	UnaryOperationExpression	* i		6154848	0					
ANR	6155003	UnaryOperator	*		6154848	0					
ANR	6155004	Identifier	i		6154848	1					
ANR	6155005	PostIncDecOperationExpression	i ++	47:45:742:745	6154848	2	True				
ANR	6155006	Identifier	i		6154848	0					
ANR	6155007	IncDec	++		6154848	1					
ANR	6155008	IfStatement	if ( ( * i ) -> flags & flag )		6154848	3					
ANR	6155009	Condition	( * i ) -> flags & flag	49:12:761:778	6154848	0	True				
ANR	6155010	BitAndExpression	( * i ) -> flags & flag		6154848	0		&			
ANR	6155011	PtrMemberAccess	( * i ) -> flags		6154848	0					
ANR	6155012	UnaryOperationExpression	* i		6154848	0					
ANR	6155013	UnaryOperator	*		6154848	0					
ANR	6155014	Identifier	i		6154848	1					
ANR	6155015	Identifier	flags		6154848	1					
ANR	6155016	Identifier	flag		6154848	1					
ANR	6155017	CompoundStatement		47:32:730:730	6154848	1					
ANR	6155018	ExpressionStatement	"memcpy ( j , * i , sizeof ( struct clk ) )"	51:12:796:829	6154848	0	True				
ANR	6155019	CallExpression	"memcpy ( j , * i , sizeof ( struct clk ) )"		6154848	0					
ANR	6155020	Callee	memcpy		6154848	0					
ANR	6155021	Identifier	memcpy		6154848	0					
ANR	6155022	ArgumentList	j		6154848	1					
ANR	6155023	Argument	j		6154848	0					
ANR	6155024	Identifier	j		6154848	0					
ANR	6155025	Argument	* i		6154848	1					
ANR	6155026	UnaryOperationExpression	* i		6154848	0					
ANR	6155027	UnaryOperator	*		6154848	0					
ANR	6155028	Identifier	i		6154848	1					
ANR	6155029	Argument	sizeof ( struct clk )		6154848	2					
ANR	6155030	SizeofExpression	sizeof ( struct clk )		6154848	0					
ANR	6155031	Sizeof	sizeof		6154848	0					
ANR	6155032	SizeofOperand	struct clk		6154848	1					
ANR	6155033	ForStatement	for ( k = mpu -> clks ; k < j ; k ++ )		6154848	1					
ANR	6155034	ForInit	k = mpu -> clks ;	53:17:849:862	6154848	0	True				
ANR	6155035	AssignmentExpression	k = mpu -> clks		6154848	0		=			
ANR	6155036	Identifier	k		6154848	0					
ANR	6155037	PtrMemberAccess	mpu -> clks		6154848	1					
ANR	6155038	Identifier	mpu		6154848	0					
ANR	6155039	Identifier	clks		6154848	1					
ANR	6155040	Condition	k < j	53:32:864:868	6154848	1	True				
ANR	6155041	RelationalExpression	k < j		6154848	0		<			
ANR	6155042	Identifier	k		6154848	0					
ANR	6155043	Identifier	j		6154848	1					
ANR	6155044	PostIncDecOperationExpression	k ++	53:39:871:874	6154848	2	True				
ANR	6155045	Identifier	k		6154848	0					
ANR	6155046	IncDec	++		6154848	1					
ANR	6155047	IfStatement	"if ( j -> parent && ! strcmp ( j -> parent -> name , k -> name ) )"		6154848	3					
ANR	6155048	Condition	"j -> parent && ! strcmp ( j -> parent -> name , k -> name )"	55:20:898:943	6154848	0	True				
ANR	6155049	AndExpression	"j -> parent && ! strcmp ( j -> parent -> name , k -> name )"		6154848	0		&&			
ANR	6155050	PtrMemberAccess	j -> parent		6154848	0					
ANR	6155051	Identifier	j		6154848	0					
ANR	6155052	Identifier	parent		6154848	1					
ANR	6155053	UnaryOperationExpression	"! strcmp ( j -> parent -> name , k -> name )"		6154848	1					
ANR	6155054	UnaryOperator	!		6154848	0					
ANR	6155055	CallExpression	"strcmp ( j -> parent -> name , k -> name )"		6154848	1					
ANR	6155056	Callee	strcmp		6154848	0					
ANR	6155057	Identifier	strcmp		6154848	0					
ANR	6155058	ArgumentList	j -> parent -> name		6154848	1					
ANR	6155059	Argument	j -> parent -> name		6154848	0					
ANR	6155060	PtrMemberAccess	j -> parent -> name		6154848	0					
ANR	6155061	PtrMemberAccess	j -> parent		6154848	0					
ANR	6155062	Identifier	j		6154848	0					
ANR	6155063	Identifier	parent		6154848	1					
ANR	6155064	Identifier	name		6154848	1					
ANR	6155065	Argument	k -> name		6154848	1					
ANR	6155066	PtrMemberAccess	k -> name		6154848	0					
ANR	6155067	Identifier	k		6154848	0					
ANR	6155068	Identifier	name		6154848	1					
ANR	6155069	CompoundStatement		53:68:895:895	6154848	1					
ANR	6155070	ExpressionStatement	j -> parent = k	57:20:969:982	6154848	0	True				
ANR	6155071	AssignmentExpression	j -> parent = k		6154848	0		=			
ANR	6155072	PtrMemberAccess	j -> parent		6154848	0					
ANR	6155073	Identifier	j		6154848	0					
ANR	6155074	Identifier	parent		6154848	1					
ANR	6155075	Identifier	k		6154848	1					
ANR	6155076	ExpressionStatement	j -> sibling = k -> child1	59:20:1005:1027	6154848	1	True				
ANR	6155077	AssignmentExpression	j -> sibling = k -> child1		6154848	0		=			
ANR	6155078	PtrMemberAccess	j -> sibling		6154848	0					
ANR	6155079	Identifier	j		6154848	0					
ANR	6155080	Identifier	sibling		6154848	1					
ANR	6155081	PtrMemberAccess	k -> child1		6154848	1					
ANR	6155082	Identifier	k		6154848	0					
ANR	6155083	Identifier	child1		6154848	1					
ANR	6155084	ExpressionStatement	k -> child1 = j	61:20:1050:1063	6154848	2	True				
ANR	6155085	AssignmentExpression	k -> child1 = j		6154848	0		=			
ANR	6155086	PtrMemberAccess	k -> child1		6154848	0					
ANR	6155087	Identifier	k		6154848	0					
ANR	6155088	Identifier	child1		6154848	1					
ANR	6155089	Identifier	j		6154848	1					
ANR	6155090	ElseStatement	else		6154848	0					
ANR	6155091	IfStatement	"if ( k -> parent && ! strcmp ( k -> parent -> name , j -> name ) )"		6154848	0					
ANR	6155092	Condition	"k -> parent && ! strcmp ( k -> parent -> name , j -> name )"	63:27:1093:1138	6154848	0	True				
ANR	6155093	AndExpression	"k -> parent && ! strcmp ( k -> parent -> name , j -> name )"		6154848	0		&&			
ANR	6155094	PtrMemberAccess	k -> parent		6154848	0					
ANR	6155095	Identifier	k		6154848	0					
ANR	6155096	Identifier	parent		6154848	1					
ANR	6155097	UnaryOperationExpression	"! strcmp ( k -> parent -> name , j -> name )"		6154848	1					
ANR	6155098	UnaryOperator	!		6154848	0					
ANR	6155099	CallExpression	"strcmp ( k -> parent -> name , j -> name )"		6154848	1					
ANR	6155100	Callee	strcmp		6154848	0					
ANR	6155101	Identifier	strcmp		6154848	0					
ANR	6155102	ArgumentList	k -> parent -> name		6154848	1					
ANR	6155103	Argument	k -> parent -> name		6154848	0					
ANR	6155104	PtrMemberAccess	k -> parent -> name		6154848	0					
ANR	6155105	PtrMemberAccess	k -> parent		6154848	0					
ANR	6155106	Identifier	k		6154848	0					
ANR	6155107	Identifier	parent		6154848	1					
ANR	6155108	Identifier	name		6154848	1					
ANR	6155109	Argument	j -> name		6154848	1					
ANR	6155110	PtrMemberAccess	j -> name		6154848	0					
ANR	6155111	Identifier	j		6154848	0					
ANR	6155112	Identifier	name		6154848	1					
ANR	6155113	CompoundStatement		61:75:1090:1090	6154848	1					
ANR	6155114	ExpressionStatement	k -> parent = j	65:20:1164:1177	6154848	0	True				
ANR	6155115	AssignmentExpression	k -> parent = j		6154848	0		=			
ANR	6155116	PtrMemberAccess	k -> parent		6154848	0					
ANR	6155117	Identifier	k		6154848	0					
ANR	6155118	Identifier	parent		6154848	1					
ANR	6155119	Identifier	j		6154848	1					
ANR	6155120	ExpressionStatement	k -> sibling = j -> child1	67:20:1200:1222	6154848	1	True				
ANR	6155121	AssignmentExpression	k -> sibling = j -> child1		6154848	0		=			
ANR	6155122	PtrMemberAccess	k -> sibling		6154848	0					
ANR	6155123	Identifier	k		6154848	0					
ANR	6155124	Identifier	sibling		6154848	1					
ANR	6155125	PtrMemberAccess	j -> child1		6154848	1					
ANR	6155126	Identifier	j		6154848	0					
ANR	6155127	Identifier	child1		6154848	1					
ANR	6155128	ExpressionStatement	j -> child1 = k	69:20:1245:1258	6154848	2	True				
ANR	6155129	AssignmentExpression	j -> child1 = k		6154848	0		=			
ANR	6155130	PtrMemberAccess	j -> child1		6154848	0					
ANR	6155131	Identifier	j		6154848	0					
ANR	6155132	Identifier	child1		6154848	1					
ANR	6155133	Identifier	k		6154848	1					
ANR	6155134	Statement	j	73:12:1292:1292	6154848	2	True				
ANR	6155135	Statement	->	73:13:1293:1294	6154848	3	True				
ANR	6155136	Statement	divisor	73:15:1295:1301	6154848	4	True				
ANR	6155137	Statement	=	73:23:1303:1303	6154848	5	True				
ANR	6155138	Statement	j	73:25:1305:1305	6154848	6	True				
ANR	6155139	Statement	->	73:26:1306:1307	6154848	7	True				
ANR	6155140	Statement	divisor	73:28:1308:1314	6154848	8	True				
ANR	6155141	Statement	?	73:36:1316:1316	6154848	9	True				
ANR	6155142	Statement	:	73:37:1317:1317	6154848	10	True				
ANR	6155143	ExpressionStatement	1	73:39:1319:1320	6154848	11	True				
ANR	6155144	PrimaryExpression	1		6154848	0					
ANR	6155145	Statement	j	75:12:1335:1335	6154848	12	True				
ANR	6155146	Statement	->	75:13:1336:1337	6154848	13	True				
ANR	6155147	Statement	multiplier	75:15:1338:1347	6154848	14	True				
ANR	6155148	Statement	=	75:26:1349:1349	6154848	15	True				
ANR	6155149	Statement	j	75:28:1351:1351	6154848	16	True				
ANR	6155150	Statement	->	75:29:1352:1353	6154848	17	True				
ANR	6155151	Statement	multiplier	75:31:1354:1363	6154848	18	True				
ANR	6155152	Statement	?	75:42:1365:1365	6154848	19	True				
ANR	6155153	Statement	:	75:43:1366:1366	6154848	20	True				
ANR	6155154	ExpressionStatement	1	75:45:1368:1369	6154848	21	True				
ANR	6155155	PrimaryExpression	1		6154848	0					
ANR	6155156	ExpressionStatement	j ++	77:12:1384:1388	6154848	22	True				
ANR	6155157	PostIncDecOperationExpression	j ++		6154848	0					
ANR	6155158	Identifier	j		6154848	0					
ANR	6155159	IncDec	++		6154848	1					
ANR	6155160	ForStatement	for ( j = mpu -> clks ; count -- ; j ++ )		6154848	7					
ANR	6155161	ForInit	j = mpu -> clks ;	81:9:1411:1424	6154848	0	True				
ANR	6155162	AssignmentExpression	j = mpu -> clks		6154848	0		=			
ANR	6155163	Identifier	j		6154848	0					
ANR	6155164	PtrMemberAccess	mpu -> clks		6154848	1					
ANR	6155165	Identifier	mpu		6154848	0					
ANR	6155166	Identifier	clks		6154848	1					
ANR	6155167	Condition	count --	81:24:1426:1433	6154848	1	True				
ANR	6155168	PostIncDecOperationExpression	count --		6154848	0					
ANR	6155169	Identifier	count		6154848	0					
ANR	6155170	IncDec	--		6154848	1					
ANR	6155171	PostIncDecOperationExpression	j ++	81:34:1436:1439	6154848	2	True				
ANR	6155172	Identifier	j		6154848	0					
ANR	6155173	IncDec	++		6154848	1					
ANR	6155174	CompoundStatement		79:40:1391:1391	6154848	3					
ANR	6155175	ExpressionStatement	omap_clk_update ( j )	83:8:1453:1471	6154848	0	True				
ANR	6155176	CallExpression	omap_clk_update ( j )		6154848	0					
ANR	6155177	Callee	omap_clk_update		6154848	0					
ANR	6155178	Identifier	omap_clk_update		6154848	0					
ANR	6155179	ArgumentList	j		6154848	1					
ANR	6155180	Argument	j		6154848	0					
ANR	6155181	Identifier	j		6154848	0					
ANR	6155182	ExpressionStatement	omap_clk_rate_update ( j )	85:8:1482:1505	6154848	1	True				
ANR	6155183	CallExpression	omap_clk_rate_update ( j )		6154848	0					
ANR	6155184	Callee	omap_clk_rate_update		6154848	0					
ANR	6155185	Identifier	omap_clk_rate_update		6154848	0					
ANR	6155186	ArgumentList	j		6154848	1					
ANR	6155187	Argument	j		6154848	0					
ANR	6155188	Identifier	j		6154848	0					
ANR	6155189	ReturnType	void		6154848	1					
ANR	6155190	Identifier	omap_clk_init		6154848	2					
ANR	6155191	ParameterList	struct omap_mpu_state_s * mpu		6154848	3					
ANR	6155192	Parameter	struct omap_mpu_state_s * mpu	1:19:19:46	6154848	0	True				
ANR	6155193	ParameterType	struct omap_mpu_state_s *		6154848	0					
ANR	6155194	Identifier	mpu		6154848	1					
ANR	6155195	CFGEntryNode	ENTRY		6154848		True				
ANR	6155196	CFGExitNode	EXIT		6154848		True				
ANR	6155197	Symbol	k -> sibling		6154848						
ANR	6155198	Symbol	flag		6154848						
ANR	6155199	Symbol	k -> parent		6154848						
ANR	6155200	Symbol	CLOCK_IN_OMAP310		6154848						
ANR	6155201	Symbol	CLOCK_IN_OMAP242X		6154848						
ANR	6155202	Symbol	j -> name		6154848						
ANR	6155203	Symbol	mpu -> clks		6154848						
ANR	6155204	Symbol	cpu_is_omap2430		6154848						
ANR	6155205	Symbol	k -> child1		6154848						
ANR	6155206	Symbol	* j -> parent		6154848						
ANR	6155207	Symbol	* mpu		6154848						
ANR	6155208	Symbol	cpu_is_omap2410		6154848						
ANR	6155209	Symbol	k -> name		6154848						
ANR	6155210	Symbol	strcmp		6154848						
ANR	6155211	Symbol	* * k		6154848						
ANR	6155212	Symbol	* * j		6154848						
ANR	6155213	Symbol	j -> parent		6154848						
ANR	6155214	Symbol	* * i		6154848						
ANR	6155215	Symbol	j -> parent -> name		6154848						
ANR	6155216	Symbol	count		6154848						
ANR	6155217	Symbol	i		6154848						
ANR	6155218	Symbol	j		6154848						
ANR	6155219	Symbol	k		6154848						
ANR	6155220	Symbol	CLOCK_IN_OMAP243X		6154848						
ANR	6155221	Symbol	CLOCK_IN_OMAP1510		6154848						
ANR	6155222	Symbol	mpu		6154848						
ANR	6155223	Symbol	* i		6154848						
ANR	6155224	Symbol	* j		6154848						
ANR	6155225	Symbol	cpu_is_omap310		6154848						
ANR	6155226	Symbol	* k		6154848						
ANR	6155227	Symbol	* k -> parent		6154848						
ANR	6155228	Symbol	( * i ) -> flags		6154848						
ANR	6155229	Symbol	cpu_is_omap2420		6154848						
ANR	6155230	Symbol	onchip_clks		6154848						
ANR	6155231	Symbol	g_malloc0		6154848						
ANR	6155232	Symbol	cpu_is_omap3430		6154848						
ANR	6155233	Symbol	k -> parent -> name		6154848						
ANR	6155234	Symbol	cpu_is_omap1510		6154848						
ANR	6155235	Symbol	j -> child1		6154848						
ANR	6155236	Symbol	j -> sibling		6154848						
