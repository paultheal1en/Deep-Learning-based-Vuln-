command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6976796	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_del_polling_cb_0.c								
ANR	6976797	Function	qemu_del_polling_cb	1:0:0:336							
ANR	6976798	FunctionDef	"qemu_del_polling_cb (PollingFunc * func , void * opaque)"		6976797	0					
ANR	6976799	CompoundStatement		3:0:59:336	6976797	0					
ANR	6976800	IdentifierDeclStatement	"PollingEntry * * ppe , * pe ;"	5:4:66:89	6976797	0	True				
ANR	6976801	IdentifierDecl	* * ppe		6976797	0					
ANR	6976802	IdentifierDeclType	PollingEntry * *		6976797	0					
ANR	6976803	Identifier	ppe		6976797	1					
ANR	6976804	IdentifierDecl	* pe		6976797	1					
ANR	6976805	IdentifierDeclType	PollingEntry *		6976797	0					
ANR	6976806	Identifier	pe		6976797	1					
ANR	6976807	ForStatement	for ( ppe = & first_polling_entry ; * ppe != NULL ; ppe = & ( * ppe ) -> next )		6976797	1					
ANR	6976808	ForInit	ppe = & first_polling_entry ;	7:8:100:126	6976797	0	True				
ANR	6976809	AssignmentExpression	ppe = & first_polling_entry		6976797	0		=			
ANR	6976810	Identifier	ppe		6976797	0					
ANR	6976811	UnaryOperationExpression	& first_polling_entry		6976797	1					
ANR	6976812	UnaryOperator	&		6976797	0					
ANR	6976813	Identifier	first_polling_entry		6976797	1					
ANR	6976814	Condition	* ppe != NULL	7:36:128:139	6976797	1	True				
ANR	6976815	EqualityExpression	* ppe != NULL		6976797	0		!=			
ANR	6976816	UnaryOperationExpression	* ppe		6976797	0					
ANR	6976817	UnaryOperator	*		6976797	0					
ANR	6976818	Identifier	ppe		6976797	1					
ANR	6976819	Identifier	NULL		6976797	1					
ANR	6976820	AssignmentExpression	ppe = & ( * ppe ) -> next	7:50:142:160	6976797	2	True	=			
ANR	6976821	Identifier	ppe		6976797	0					
ANR	6976822	UnaryOperationExpression	& ( * ppe ) -> next		6976797	1					
ANR	6976823	UnaryOperator	&		6976797	0					
ANR	6976824	PtrMemberAccess	( * ppe ) -> next		6976797	1					
ANR	6976825	UnaryOperationExpression	* ppe		6976797	0					
ANR	6976826	UnaryOperator	*		6976797	0					
ANR	6976827	Identifier	ppe		6976797	1					
ANR	6976828	Identifier	next		6976797	1					
ANR	6976829	CompoundStatement		5:71:103:103	6976797	3					
ANR	6976830	ExpressionStatement	pe = * ppe	9:8:174:183	6976797	0	True				
ANR	6976831	AssignmentExpression	pe = * ppe		6976797	0		=			
ANR	6976832	Identifier	pe		6976797	0					
ANR	6976833	UnaryOperationExpression	* ppe		6976797	1					
ANR	6976834	UnaryOperator	*		6976797	0					
ANR	6976835	Identifier	ppe		6976797	1					
ANR	6976836	IfStatement	if ( pe -> func == func && pe -> opaque == opaque )		6976797	1					
ANR	6976837	Condition	pe -> func == func && pe -> opaque == opaque	11:12:198:237	6976797	0	True				
ANR	6976838	AndExpression	pe -> func == func && pe -> opaque == opaque		6976797	0		&&			
ANR	6976839	EqualityExpression	pe -> func == func		6976797	0		==			
ANR	6976840	PtrMemberAccess	pe -> func		6976797	0					
ANR	6976841	Identifier	pe		6976797	0					
ANR	6976842	Identifier	func		6976797	1					
ANR	6976843	Identifier	func		6976797	1					
ANR	6976844	EqualityExpression	pe -> opaque == opaque		6976797	1		==			
ANR	6976845	PtrMemberAccess	pe -> opaque		6976797	0					
ANR	6976846	Identifier	pe		6976797	0					
ANR	6976847	Identifier	opaque		6976797	1					
ANR	6976848	Identifier	opaque		6976797	1					
ANR	6976849	CompoundStatement		9:54:180:180	6976797	1					
ANR	6976850	ExpressionStatement	* ppe = pe -> next	13:12:255:270	6976797	0	True				
ANR	6976851	AssignmentExpression	* ppe = pe -> next		6976797	0		=			
ANR	6976852	UnaryOperationExpression	* ppe		6976797	0					
ANR	6976853	UnaryOperator	*		6976797	0					
ANR	6976854	Identifier	ppe		6976797	1					
ANR	6976855	PtrMemberAccess	pe -> next		6976797	1					
ANR	6976856	Identifier	pe		6976797	0					
ANR	6976857	Identifier	next		6976797	1					
ANR	6976858	ExpressionStatement	g_free ( pe )	15:12:285:295	6976797	1	True				
ANR	6976859	CallExpression	g_free ( pe )		6976797	0					
ANR	6976860	Callee	g_free		6976797	0					
ANR	6976861	Identifier	g_free		6976797	0					
ANR	6976862	ArgumentList	pe		6976797	1					
ANR	6976863	Argument	pe		6976797	0					
ANR	6976864	Identifier	pe		6976797	0					
ANR	6976865	BreakStatement	break ;	17:12:310:315	6976797	2	True				
ANR	6976866	ReturnType	void		6976797	1					
ANR	6976867	Identifier	qemu_del_polling_cb		6976797	2					
ANR	6976868	ParameterList	"PollingFunc * func , void * opaque"		6976797	3					
ANR	6976869	Parameter	PollingFunc * func	1:25:25:41	6976797	0	True				
ANR	6976870	ParameterType	PollingFunc *		6976797	0					
ANR	6976871	Identifier	func		6976797	1					
ANR	6976872	Parameter	void * opaque	1:44:44:55	6976797	1	True				
ANR	6976873	ParameterType	void *		6976797	0					
ANR	6976874	Identifier	opaque		6976797	1					
ANR	6976875	CFGEntryNode	ENTRY		6976797		True				
ANR	6976876	CFGExitNode	EXIT		6976797		True				
ANR	6976877	Symbol	opaque		6976797						
ANR	6976878	Symbol	NULL		6976797						
ANR	6976879	Symbol	func		6976797						
ANR	6976880	Symbol	ppe		6976797						
ANR	6976881	Symbol	pe		6976797						
ANR	6976882	Symbol	pe -> next		6976797						
ANR	6976883	Symbol	pe -> func		6976797						
ANR	6976884	Symbol	& ( * ppe ) -> next		6976797						
ANR	6976885	Symbol	* pe		6976797						
ANR	6976886	Symbol	* ppe		6976797						
ANR	6976887	Symbol	& first_polling_entry		6976797						
ANR	6976888	Symbol	pe -> opaque		6976797						
