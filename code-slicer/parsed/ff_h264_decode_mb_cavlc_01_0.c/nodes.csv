command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3353660	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_decode_mb_cavlc_01_0.c								
ANR	3353661	Function	ff_h264_decode_mb_cavlc	1:0:0:20894							
ANR	3353662	FunctionDef	ff_h264_decode_mb_cavlc (H264Context * h)		3353661	0					
ANR	3353663	CompoundStatement		1:43:43:20894	3353661	0					
ANR	3353664	Statement	MpegEncContext	3:4:50:63	3353661	0	True				
ANR	3353665	Statement	*	3:19:65:65	3353661	1	True				
ANR	3353666	Statement	const	3:21:67:71	3353661	2	True				
ANR	3353667	ExpressionStatement	s = & h -> s	3:27:73:82	3353661	3	True				
ANR	3353668	AssignmentExpression	s = & h -> s		3353661	0		=			
ANR	3353669	Identifier	s		3353661	0					
ANR	3353670	UnaryOperationExpression	& h -> s		3353661	1					
ANR	3353671	UnaryOperator	&		3353661	0					
ANR	3353672	PtrMemberAccess	h -> s		3353661	1					
ANR	3353673	Identifier	h		3353661	0					
ANR	3353674	Identifier	s		3353661	1					
ANR	3353675	IdentifierDeclStatement	int mb_xy ;	5:4:89:98	3353661	4	True				
ANR	3353676	IdentifierDecl	mb_xy		3353661	0					
ANR	3353677	IdentifierDeclType	int		3353661	0					
ANR	3353678	Identifier	mb_xy		3353661	1					
ANR	3353679	IdentifierDeclStatement	int partition_count ;	7:4:105:124	3353661	5	True				
ANR	3353680	IdentifierDecl	partition_count		3353661	0					
ANR	3353681	IdentifierDeclType	int		3353661	0					
ANR	3353682	Identifier	partition_count		3353661	1					
ANR	3353683	IdentifierDeclStatement	"unsigned int mb_type , cbp ;"	9:4:131:156	3353661	6	True				
ANR	3353684	IdentifierDecl	mb_type		3353661	0					
ANR	3353685	IdentifierDeclType	unsigned int		3353661	0					
ANR	3353686	Identifier	mb_type		3353661	1					
ANR	3353687	IdentifierDecl	cbp		3353661	1					
ANR	3353688	IdentifierDeclType	unsigned int		3353661	0					
ANR	3353689	Identifier	cbp		3353661	1					
ANR	3353690	IdentifierDeclStatement	int dct8x8_allowed = h -> pps . transform_8x8_mode ;	11:4:163:208	3353661	7	True				
ANR	3353691	IdentifierDecl	dct8x8_allowed = h -> pps . transform_8x8_mode		3353661	0					
ANR	3353692	IdentifierDeclType	int		3353661	0					
ANR	3353693	Identifier	dct8x8_allowed		3353661	1					
ANR	3353694	AssignmentExpression	dct8x8_allowed = h -> pps . transform_8x8_mode		3353661	2		=			
ANR	3353695	Identifier	dct8x8_allowed		3353661	0					
ANR	3353696	MemberAccess	h -> pps . transform_8x8_mode		3353661	1					
ANR	3353697	PtrMemberAccess	h -> pps		3353661	0					
ANR	3353698	Identifier	h		3353661	0					
ANR	3353699	Identifier	pps		3353661	1					
ANR	3353700	Identifier	transform_8x8_mode		3353661	1					
ANR	3353701	ExpressionStatement	mb_xy = h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride	15:4:217:266	3353661	8	True				
ANR	3353702	AssignmentExpression	mb_xy = h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride		3353661	0		=			
ANR	3353703	Identifier	mb_xy		3353661	0					
ANR	3353704	AssignmentExpression	h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride		3353661	1		=			
ANR	3353705	PtrMemberAccess	h -> mb_xy		3353661	0					
ANR	3353706	Identifier	h		3353661	0					
ANR	3353707	Identifier	mb_xy		3353661	1					
ANR	3353708	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		3353661	1		+			
ANR	3353709	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3353710	Identifier	s		3353661	0					
ANR	3353711	Identifier	mb_x		3353661	1					
ANR	3353712	MultiplicativeExpression	s -> mb_y * s -> mb_stride		3353661	1		*			
ANR	3353713	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3353714	Identifier	s		3353661	0					
ANR	3353715	Identifier	mb_y		3353661	1					
ANR	3353716	PtrMemberAccess	s -> mb_stride		3353661	1					
ANR	3353717	Identifier	s		3353661	0					
ANR	3353718	Identifier	mb_stride		3353661	1					
ANR	3353719	ExpressionStatement	"tprintf ( s -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> frame_num , s -> mb_x , s -> mb_y )"	19:4:275:345	3353661	9	True				
ANR	3353720	CallExpression	"tprintf ( s -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> frame_num , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3353721	Callee	tprintf		3353661	0					
ANR	3353722	Identifier	tprintf		3353661	0					
ANR	3353723	ArgumentList	s -> avctx		3353661	1					
ANR	3353724	Argument	s -> avctx		3353661	0					
ANR	3353725	PtrMemberAccess	s -> avctx		3353661	0					
ANR	3353726	Identifier	s		3353661	0					
ANR	3353727	Identifier	avctx		3353661	1					
ANR	3353728	Argument	"""pic:%d mb:%d/%d\\n"""		3353661	1					
ANR	3353729	PrimaryExpression	"""pic:%d mb:%d/%d\\n"""		3353661	0					
ANR	3353730	Argument	h -> frame_num		3353661	2					
ANR	3353731	PtrMemberAccess	h -> frame_num		3353661	0					
ANR	3353732	Identifier	h		3353661	0					
ANR	3353733	Identifier	frame_num		3353661	1					
ANR	3353734	Argument	s -> mb_x		3353661	3					
ANR	3353735	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3353736	Identifier	s		3353661	0					
ANR	3353737	Identifier	mb_x		3353661	1					
ANR	3353738	Argument	s -> mb_y		3353661	4					
ANR	3353739	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3353740	Identifier	s		3353661	0					
ANR	3353741	Identifier	mb_y		3353661	1					
ANR	3353742	ExpressionStatement	cbp = 0	21:4:352:359	3353661	10	True				
ANR	3353743	AssignmentExpression	cbp = 0		3353661	0		=			
ANR	3353744	Identifier	cbp		3353661	0					
ANR	3353745	PrimaryExpression	0		3353661	1					
ANR	3353746	IfStatement	if ( h -> slice_type_nos != FF_I_TYPE )		3353661	11					
ANR	3353747	Condition	h -> slice_type_nos != FF_I_TYPE	25:7:460:489	3353661	0	True				
ANR	3353748	EqualityExpression	h -> slice_type_nos != FF_I_TYPE		3353661	0		!=			
ANR	3353749	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3353750	Identifier	h		3353661	0					
ANR	3353751	Identifier	slice_type_nos		3353661	1					
ANR	3353752	Identifier	FF_I_TYPE		3353661	1					
ANR	3353753	CompoundStatement		25:38:447:447	3353661	1					
ANR	3353754	IfStatement	if ( s -> mb_skip_run == - 1 )		3353661	0					
ANR	3353755	Condition	s -> mb_skip_run == - 1	27:11:505:522	3353661	0	True				
ANR	3353756	EqualityExpression	s -> mb_skip_run == - 1		3353661	0		==			
ANR	3353757	PtrMemberAccess	s -> mb_skip_run		3353661	0					
ANR	3353758	Identifier	s		3353661	0					
ANR	3353759	Identifier	mb_skip_run		3353661	1					
ANR	3353760	UnaryOperationExpression	- 1		3353661	1					
ANR	3353761	UnaryOperator	-		3353661	0					
ANR	3353762	PrimaryExpression	1		3353661	1					
ANR	3353763	ExpressionStatement	s -> mb_skip_run = get_ue_golomb ( & s -> gb )	29:12:538:575	3353661	1	True				
ANR	3353764	AssignmentExpression	s -> mb_skip_run = get_ue_golomb ( & s -> gb )		3353661	0		=			
ANR	3353765	PtrMemberAccess	s -> mb_skip_run		3353661	0					
ANR	3353766	Identifier	s		3353661	0					
ANR	3353767	Identifier	mb_skip_run		3353661	1					
ANR	3353768	CallExpression	get_ue_golomb ( & s -> gb )		3353661	1					
ANR	3353769	Callee	get_ue_golomb		3353661	0					
ANR	3353770	Identifier	get_ue_golomb		3353661	0					
ANR	3353771	ArgumentList	& s -> gb		3353661	1					
ANR	3353772	Argument	& s -> gb		3353661	0					
ANR	3353773	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3353774	UnaryOperator	&		3353661	0					
ANR	3353775	PtrMemberAccess	s -> gb		3353661	1					
ANR	3353776	Identifier	s		3353661	0					
ANR	3353777	Identifier	gb		3353661	1					
ANR	3353778	IfStatement	if ( s -> mb_skip_run -- )		3353661	1					
ANR	3353779	Condition	s -> mb_skip_run --	33:12:592:607	3353661	0	True				
ANR	3353780	PostIncDecOperationExpression	s -> mb_skip_run --		3353661	0					
ANR	3353781	PtrMemberAccess	s -> mb_skip_run		3353661	0					
ANR	3353782	Identifier	s		3353661	0					
ANR	3353783	Identifier	mb_skip_run		3353661	1					
ANR	3353784	IncDec	--		3353661	1					
ANR	3353785	CompoundStatement		33:30:566:566	3353661	1					
ANR	3353786	IfStatement	if ( FRAME_MBAFF && ( s -> mb_y & 1 ) == 0 )		3353661	0					
ANR	3353787	Condition	FRAME_MBAFF && ( s -> mb_y & 1 ) == 0	35:15:628:658	3353661	0	True				
ANR	3353788	AndExpression	FRAME_MBAFF && ( s -> mb_y & 1 ) == 0		3353661	0		&&			
ANR	3353789	Identifier	FRAME_MBAFF		3353661	0					
ANR	3353790	EqualityExpression	( s -> mb_y & 1 ) == 0		3353661	1		==			
ANR	3353791	BitAndExpression	s -> mb_y & 1		3353661	0		&			
ANR	3353792	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3353793	Identifier	s		3353661	0					
ANR	3353794	Identifier	mb_y		3353661	1					
ANR	3353795	PrimaryExpression	1		3353661	1					
ANR	3353796	PrimaryExpression	0		3353661	1					
ANR	3353797	CompoundStatement		35:47:616:616	3353661	1					
ANR	3353798	IfStatement	if ( s -> mb_skip_run == 0 )		3353661	0					
ANR	3353799	Condition	s -> mb_skip_run == 0	37:19:682:698	3353661	0	True				
ANR	3353800	EqualityExpression	s -> mb_skip_run == 0		3353661	0		==			
ANR	3353801	PtrMemberAccess	s -> mb_skip_run		3353661	0					
ANR	3353802	Identifier	s		3353661	0					
ANR	3353803	Identifier	mb_skip_run		3353661	1					
ANR	3353804	PrimaryExpression	0		3353661	1					
ANR	3353805	ExpressionStatement	h -> mb_mbaff = h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )	39:20:722:781	3353661	1	True				
ANR	3353806	AssignmentExpression	h -> mb_mbaff = h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )		3353661	0		=			
ANR	3353807	PtrMemberAccess	h -> mb_mbaff		3353661	0					
ANR	3353808	Identifier	h		3353661	0					
ANR	3353809	Identifier	mb_mbaff		3353661	1					
ANR	3353810	AssignmentExpression	h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )		3353661	1		=			
ANR	3353811	PtrMemberAccess	h -> mb_field_decoding_flag		3353661	0					
ANR	3353812	Identifier	h		3353661	0					
ANR	3353813	Identifier	mb_field_decoding_flag		3353661	1					
ANR	3353814	CallExpression	get_bits1 ( & s -> gb )		3353661	1					
ANR	3353815	Callee	get_bits1		3353661	0					
ANR	3353816	Identifier	get_bits1		3353661	0					
ANR	3353817	ArgumentList	& s -> gb		3353661	1					
ANR	3353818	Argument	& s -> gb		3353661	0					
ANR	3353819	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3353820	UnaryOperator	&		3353661	0					
ANR	3353821	PtrMemberAccess	s -> gb		3353661	1					
ANR	3353822	Identifier	s		3353661	0					
ANR	3353823	Identifier	gb		3353661	1					
ANR	3353824	ElseStatement	else		3353661	0					
ANR	3353825	ExpressionStatement	predict_field_decoding_flag ( h )	43:20:826:856	3353661	0	True				
ANR	3353826	CallExpression	predict_field_decoding_flag ( h )		3353661	0					
ANR	3353827	Callee	predict_field_decoding_flag		3353661	0					
ANR	3353828	Identifier	predict_field_decoding_flag		3353661	0					
ANR	3353829	ArgumentList	h		3353661	1					
ANR	3353830	Argument	h		3353661	0					
ANR	3353831	Identifier	h		3353661	0					
ANR	3353832	ExpressionStatement	decode_mb_skip ( h )	47:12:886:903	3353661	1	True				
ANR	3353833	CallExpression	decode_mb_skip ( h )		3353661	0					
ANR	3353834	Callee	decode_mb_skip		3353661	0					
ANR	3353835	Identifier	decode_mb_skip		3353661	0					
ANR	3353836	ArgumentList	h		3353661	1					
ANR	3353837	Argument	h		3353661	0					
ANR	3353838	Identifier	h		3353661	0					
ANR	3353839	ReturnStatement	return 0 ;	49:12:918:926	3353661	2	True				
ANR	3353840	PrimaryExpression	0		3353661	0					
ANR	3353841	IfStatement	if ( FRAME_MBAFF )		3353661	12					
ANR	3353842	Condition	FRAME_MBAFF	55:7:954:964	3353661	0	True				
ANR	3353843	Identifier	FRAME_MBAFF		3353661	0					
ANR	3353844	CompoundStatement		55:19:922:922	3353661	1					
ANR	3353845	IfStatement	if ( ( s -> mb_y & 1 ) == 0 )		3353661	0					
ANR	3353846	Condition	( s -> mb_y & 1 ) == 0	57:12:981:996	3353661	0	True				
ANR	3353847	EqualityExpression	( s -> mb_y & 1 ) == 0		3353661	0		==			
ANR	3353848	BitAndExpression	s -> mb_y & 1		3353661	0		&			
ANR	3353849	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3353850	Identifier	s		3353661	0					
ANR	3353851	Identifier	mb_y		3353661	1					
ANR	3353852	PrimaryExpression	1		3353661	1					
ANR	3353853	PrimaryExpression	0		3353661	1					
ANR	3353854	ExpressionStatement	h -> mb_mbaff = h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )	59:12:1013:1072	3353661	1	True				
ANR	3353855	AssignmentExpression	h -> mb_mbaff = h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )		3353661	0		=			
ANR	3353856	PtrMemberAccess	h -> mb_mbaff		3353661	0					
ANR	3353857	Identifier	h		3353661	0					
ANR	3353858	Identifier	mb_mbaff		3353661	1					
ANR	3353859	AssignmentExpression	h -> mb_field_decoding_flag = get_bits1 ( & s -> gb )		3353661	1		=			
ANR	3353860	PtrMemberAccess	h -> mb_field_decoding_flag		3353661	0					
ANR	3353861	Identifier	h		3353661	0					
ANR	3353862	Identifier	mb_field_decoding_flag		3353661	1					
ANR	3353863	CallExpression	get_bits1 ( & s -> gb )		3353661	1					
ANR	3353864	Callee	get_bits1		3353661	0					
ANR	3353865	Identifier	get_bits1		3353661	0					
ANR	3353866	ArgumentList	& s -> gb		3353661	1					
ANR	3353867	Argument	& s -> gb		3353661	0					
ANR	3353868	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3353869	UnaryOperator	&		3353661	0					
ANR	3353870	PtrMemberAccess	s -> gb		3353661	1					
ANR	3353871	Identifier	s		3353661	0					
ANR	3353872	Identifier	gb		3353661	1					
ANR	3353873	ExpressionStatement	h -> prev_mb_skipped = 0	65:4:1088:1109	3353661	13	True				
ANR	3353874	AssignmentExpression	h -> prev_mb_skipped = 0		3353661	0		=			
ANR	3353875	PtrMemberAccess	h -> prev_mb_skipped		3353661	0					
ANR	3353876	Identifier	h		3353661	0					
ANR	3353877	Identifier	prev_mb_skipped		3353661	1					
ANR	3353878	PrimaryExpression	0		3353661	1					
ANR	3353879	ExpressionStatement	mb_type = get_ue_golomb ( & s -> gb )	69:4:1118:1148	3353661	14	True				
ANR	3353880	AssignmentExpression	mb_type = get_ue_golomb ( & s -> gb )		3353661	0		=			
ANR	3353881	Identifier	mb_type		3353661	0					
ANR	3353882	CallExpression	get_ue_golomb ( & s -> gb )		3353661	1					
ANR	3353883	Callee	get_ue_golomb		3353661	0					
ANR	3353884	Identifier	get_ue_golomb		3353661	0					
ANR	3353885	ArgumentList	& s -> gb		3353661	1					
ANR	3353886	Argument	& s -> gb		3353661	0					
ANR	3353887	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3353888	UnaryOperator	&		3353661	0					
ANR	3353889	PtrMemberAccess	s -> gb		3353661	1					
ANR	3353890	Identifier	s		3353661	0					
ANR	3353891	Identifier	gb		3353661	1					
ANR	3353892	IfStatement	if ( h -> slice_type_nos == FF_B_TYPE )		3353661	15					
ANR	3353893	Condition	h -> slice_type_nos == FF_B_TYPE	71:7:1158:1187	3353661	0	True				
ANR	3353894	EqualityExpression	h -> slice_type_nos == FF_B_TYPE		3353661	0		==			
ANR	3353895	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3353896	Identifier	h		3353661	0					
ANR	3353897	Identifier	slice_type_nos		3353661	1					
ANR	3353898	Identifier	FF_B_TYPE		3353661	1					
ANR	3353899	CompoundStatement		71:38:1145:1145	3353661	1					
ANR	3353900	IfStatement	if ( mb_type < 23 )		3353661	0					
ANR	3353901	Condition	mb_type < 23	73:11:1203:1214	3353661	0	True				
ANR	3353902	RelationalExpression	mb_type < 23		3353661	0		<			
ANR	3353903	Identifier	mb_type		3353661	0					
ANR	3353904	PrimaryExpression	23		3353661	1					
ANR	3353905	CompoundStatement		73:24:1172:1172	3353661	1					
ANR	3353906	ExpressionStatement	partition_count = b_mb_type_info [ mb_type ] . partition_count	75:12:1231:1287	3353661	0	True				
ANR	3353907	AssignmentExpression	partition_count = b_mb_type_info [ mb_type ] . partition_count		3353661	0		=			
ANR	3353908	Identifier	partition_count		3353661	0					
ANR	3353909	MemberAccess	b_mb_type_info [ mb_type ] . partition_count		3353661	1					
ANR	3353910	ArrayIndexing	b_mb_type_info [ mb_type ]		3353661	0					
ANR	3353911	Identifier	b_mb_type_info		3353661	0					
ANR	3353912	Identifier	mb_type		3353661	1					
ANR	3353913	Identifier	partition_count		3353661	1					
ANR	3353914	ExpressionStatement	mb_type = b_mb_type_info [ mb_type ] . type	77:12:1302:1347	3353661	1	True				
ANR	3353915	AssignmentExpression	mb_type = b_mb_type_info [ mb_type ] . type		3353661	0		=			
ANR	3353916	Identifier	mb_type		3353661	0					
ANR	3353917	MemberAccess	b_mb_type_info [ mb_type ] . type		3353661	1					
ANR	3353918	ArrayIndexing	b_mb_type_info [ mb_type ]		3353661	0					
ANR	3353919	Identifier	b_mb_type_info		3353661	0					
ANR	3353920	Identifier	mb_type		3353661	1					
ANR	3353921	Identifier	type		3353661	1					
ANR	3353922	ElseStatement	else		3353661	0					
ANR	3353923	CompoundStatement		79:13:1319:1319	3353661	0					
ANR	3353924	ExpressionStatement	mb_type -= 23	81:12:1378:1391	3353661	0	True				
ANR	3353925	AssignmentExpression	mb_type -= 23		3353661	0		-=			
ANR	3353926	Identifier	mb_type		3353661	0					
ANR	3353927	PrimaryExpression	23		3353661	1					
ANR	3353928	GotoStatement	goto decode_intra_mb ;	83:12:1406:1426	3353661	1	True				
ANR	3353929	Identifier	decode_intra_mb		3353661	0					
ANR	3353930	ElseStatement	else		3353661	0					
ANR	3353931	IfStatement	if ( h -> slice_type_nos == FF_P_TYPE )		3353661	0					
ANR	3353932	Condition	h -> slice_type_nos == FF_P_TYPE	87:13:1453:1482	3353661	0	True				
ANR	3353933	EqualityExpression	h -> slice_type_nos == FF_P_TYPE		3353661	0		==			
ANR	3353934	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3353935	Identifier	h		3353661	0					
ANR	3353936	Identifier	slice_type_nos		3353661	1					
ANR	3353937	Identifier	FF_P_TYPE		3353661	1					
ANR	3353938	CompoundStatement		87:44:1440:1440	3353661	1					
ANR	3353939	IfStatement	if ( mb_type < 5 )		3353661	0					
ANR	3353940	Condition	mb_type < 5	89:11:1498:1508	3353661	0	True				
ANR	3353941	RelationalExpression	mb_type < 5		3353661	0		<			
ANR	3353942	Identifier	mb_type		3353661	0					
ANR	3353943	PrimaryExpression	5		3353661	1					
ANR	3353944	CompoundStatement		89:23:1466:1466	3353661	1					
ANR	3353945	ExpressionStatement	partition_count = p_mb_type_info [ mb_type ] . partition_count	91:12:1525:1581	3353661	0	True				
ANR	3353946	AssignmentExpression	partition_count = p_mb_type_info [ mb_type ] . partition_count		3353661	0		=			
ANR	3353947	Identifier	partition_count		3353661	0					
ANR	3353948	MemberAccess	p_mb_type_info [ mb_type ] . partition_count		3353661	1					
ANR	3353949	ArrayIndexing	p_mb_type_info [ mb_type ]		3353661	0					
ANR	3353950	Identifier	p_mb_type_info		3353661	0					
ANR	3353951	Identifier	mb_type		3353661	1					
ANR	3353952	Identifier	partition_count		3353661	1					
ANR	3353953	ExpressionStatement	mb_type = p_mb_type_info [ mb_type ] . type	93:12:1596:1641	3353661	1	True				
ANR	3353954	AssignmentExpression	mb_type = p_mb_type_info [ mb_type ] . type		3353661	0		=			
ANR	3353955	Identifier	mb_type		3353661	0					
ANR	3353956	MemberAccess	p_mb_type_info [ mb_type ] . type		3353661	1					
ANR	3353957	ArrayIndexing	p_mb_type_info [ mb_type ]		3353661	0					
ANR	3353958	Identifier	p_mb_type_info		3353661	0					
ANR	3353959	Identifier	mb_type		3353661	1					
ANR	3353960	Identifier	type		3353661	1					
ANR	3353961	ElseStatement	else		3353661	0					
ANR	3353962	CompoundStatement		95:13:1613:1613	3353661	0					
ANR	3353963	ExpressionStatement	mb_type -= 5	97:12:1672:1684	3353661	0	True				
ANR	3353964	AssignmentExpression	mb_type -= 5		3353661	0		-=			
ANR	3353965	Identifier	mb_type		3353661	0					
ANR	3353966	PrimaryExpression	5		3353661	1					
ANR	3353967	GotoStatement	goto decode_intra_mb ;	99:12:1699:1719	3353661	1	True				
ANR	3353968	Identifier	decode_intra_mb		3353661	0					
ANR	3353969	ElseStatement	else		3353661	0					
ANR	3353970	CompoundStatement		103:9:1698:1698	3353661	0					
ANR	3353971	ExpressionStatement	assert ( h -> slice_type_nos == FF_I_TYPE )	105:7:1752:1790	3353661	0	True				
ANR	3353972	CallExpression	assert ( h -> slice_type_nos == FF_I_TYPE )		3353661	0					
ANR	3353973	Callee	assert		3353661	0					
ANR	3353974	Identifier	assert		3353661	0					
ANR	3353975	ArgumentList	h -> slice_type_nos == FF_I_TYPE		3353661	1					
ANR	3353976	Argument	h -> slice_type_nos == FF_I_TYPE		3353661	0					
ANR	3353977	EqualityExpression	h -> slice_type_nos == FF_I_TYPE		3353661	0		==			
ANR	3353978	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3353979	Identifier	h		3353661	0					
ANR	3353980	Identifier	slice_type_nos		3353661	1					
ANR	3353981	Identifier	FF_I_TYPE		3353661	1					
ANR	3353982	IfStatement	if ( h -> slice_type == FF_SI_TYPE && mb_type )		3353661	1					
ANR	3353983	Condition	h -> slice_type == FF_SI_TYPE && mb_type	107:11:1804:1841	3353661	0	True				
ANR	3353984	AndExpression	h -> slice_type == FF_SI_TYPE && mb_type		3353661	0		&&			
ANR	3353985	EqualityExpression	h -> slice_type == FF_SI_TYPE		3353661	0		==			
ANR	3353986	PtrMemberAccess	h -> slice_type		3353661	0					
ANR	3353987	Identifier	h		3353661	0					
ANR	3353988	Identifier	slice_type		3353661	1					
ANR	3353989	Identifier	FF_SI_TYPE		3353661	1					
ANR	3353990	Identifier	mb_type		3353661	1					
ANR	3353991	ExpressionStatement	mb_type --	109:12:1857:1866	3353661	1	True				
ANR	3353992	PostIncDecOperationExpression	mb_type --		3353661	0					
ANR	3353993	Identifier	mb_type		3353661	0					
ANR	3353994	IncDec	--		3353661	1					
ANR	3353995	Label	decode_intra_mb :	111:0:1869:1884	3353661	2	True				
ANR	3353996	Identifier	decode_intra_mb		3353661	0					
ANR	3353997	IfStatement	if ( mb_type > 25 )		3353661	3					
ANR	3353998	Condition	mb_type > 25	113:11:1898:1909	3353661	0	True				
ANR	3353999	RelationalExpression	mb_type > 25		3353661	0		>			
ANR	3354000	Identifier	mb_type		3353661	0					
ANR	3354001	PrimaryExpression	25		3353661	1					
ANR	3354002	CompoundStatement		113:24:1867:1867	3353661	1					
ANR	3354003	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""mb_type %d in %c slice too large at %d %d\\n"" , mb_type , av_get_pict_type_char ( h -> slice_type ) , s -> mb_x , s -> mb_y )"	115:12:1926:2070	3353661	0	True				
ANR	3354004	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""mb_type %d in %c slice too large at %d %d\\n"" , mb_type , av_get_pict_type_char ( h -> slice_type ) , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3354005	Callee	av_log		3353661	0					
ANR	3354006	Identifier	av_log		3353661	0					
ANR	3354007	ArgumentList	h -> s . avctx		3353661	1					
ANR	3354008	Argument	h -> s . avctx		3353661	0					
ANR	3354009	MemberAccess	h -> s . avctx		3353661	0					
ANR	3354010	PtrMemberAccess	h -> s		3353661	0					
ANR	3354011	Identifier	h		3353661	0					
ANR	3354012	Identifier	s		3353661	1					
ANR	3354013	Identifier	avctx		3353661	1					
ANR	3354014	Argument	AV_LOG_ERROR		3353661	1					
ANR	3354015	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3354016	Argument	"""mb_type %d in %c slice too large at %d %d\\n"""		3353661	2					
ANR	3354017	PrimaryExpression	"""mb_type %d in %c slice too large at %d %d\\n"""		3353661	0					
ANR	3354018	Argument	mb_type		3353661	3					
ANR	3354019	Identifier	mb_type		3353661	0					
ANR	3354020	Argument	av_get_pict_type_char ( h -> slice_type )		3353661	4					
ANR	3354021	CallExpression	av_get_pict_type_char ( h -> slice_type )		3353661	0					
ANR	3354022	Callee	av_get_pict_type_char		3353661	0					
ANR	3354023	Identifier	av_get_pict_type_char		3353661	0					
ANR	3354024	ArgumentList	h -> slice_type		3353661	1					
ANR	3354025	Argument	h -> slice_type		3353661	0					
ANR	3354026	PtrMemberAccess	h -> slice_type		3353661	0					
ANR	3354027	Identifier	h		3353661	0					
ANR	3354028	Identifier	slice_type		3353661	1					
ANR	3354029	Argument	s -> mb_x		3353661	5					
ANR	3354030	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3354031	Identifier	s		3353661	0					
ANR	3354032	Identifier	mb_x		3353661	1					
ANR	3354033	Argument	s -> mb_y		3353661	6					
ANR	3354034	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3354035	Identifier	s		3353661	0					
ANR	3354036	Identifier	mb_y		3353661	1					
ANR	3354037	ReturnStatement	return - 1 ;	117:12:2085:2094	3353661	1	True				
ANR	3354038	UnaryOperationExpression	- 1		3353661	0					
ANR	3354039	UnaryOperator	-		3353661	0					
ANR	3354040	PrimaryExpression	1		3353661	1					
ANR	3354041	ExpressionStatement	partition_count = 0	121:8:2116:2133	3353661	4	True				
ANR	3354042	AssignmentExpression	partition_count = 0		3353661	0		=			
ANR	3354043	Identifier	partition_count		3353661	0					
ANR	3354044	PrimaryExpression	0		3353661	1					
ANR	3354045	ExpressionStatement	cbp = i_mb_type_info [ mb_type ] . cbp	123:8:2144:2176	3353661	5	True				
ANR	3354046	AssignmentExpression	cbp = i_mb_type_info [ mb_type ] . cbp		3353661	0		=			
ANR	3354047	Identifier	cbp		3353661	0					
ANR	3354048	MemberAccess	i_mb_type_info [ mb_type ] . cbp		3353661	1					
ANR	3354049	ArrayIndexing	i_mb_type_info [ mb_type ]		3353661	0					
ANR	3354050	Identifier	i_mb_type_info		3353661	0					
ANR	3354051	Identifier	mb_type		3353661	1					
ANR	3354052	Identifier	cbp		3353661	1					
ANR	3354053	ExpressionStatement	h -> intra16x16_pred_mode = i_mb_type_info [ mb_type ] . pred_mode	125:8:2187:2245	3353661	6	True				
ANR	3354054	AssignmentExpression	h -> intra16x16_pred_mode = i_mb_type_info [ mb_type ] . pred_mode		3353661	0		=			
ANR	3354055	PtrMemberAccess	h -> intra16x16_pred_mode		3353661	0					
ANR	3354056	Identifier	h		3353661	0					
ANR	3354057	Identifier	intra16x16_pred_mode		3353661	1					
ANR	3354058	MemberAccess	i_mb_type_info [ mb_type ] . pred_mode		3353661	1					
ANR	3354059	ArrayIndexing	i_mb_type_info [ mb_type ]		3353661	0					
ANR	3354060	Identifier	i_mb_type_info		3353661	0					
ANR	3354061	Identifier	mb_type		3353661	1					
ANR	3354062	Identifier	pred_mode		3353661	1					
ANR	3354063	ExpressionStatement	mb_type = i_mb_type_info [ mb_type ] . type	127:8:2256:2293	3353661	7	True				
ANR	3354064	AssignmentExpression	mb_type = i_mb_type_info [ mb_type ] . type		3353661	0		=			
ANR	3354065	Identifier	mb_type		3353661	0					
ANR	3354066	MemberAccess	i_mb_type_info [ mb_type ] . type		3353661	1					
ANR	3354067	ArrayIndexing	i_mb_type_info [ mb_type ]		3353661	0					
ANR	3354068	Identifier	i_mb_type_info		3353661	0					
ANR	3354069	Identifier	mb_type		3353661	1					
ANR	3354070	Identifier	type		3353661	1					
ANR	3354071	IfStatement	if ( MB_FIELD )		3353661	16					
ANR	3354072	Condition	MB_FIELD	133:7:2312:2319	3353661	0	True				
ANR	3354073	Identifier	MB_FIELD		3353661	0					
ANR	3354074	ExpressionStatement	mb_type |= MB_TYPE_INTERLACED	135:8:2331:2360	3353661	1	True				
ANR	3354075	AssignmentExpression	mb_type |= MB_TYPE_INTERLACED		3353661	0		|=			
ANR	3354076	Identifier	mb_type		3353661	0					
ANR	3354077	Identifier	MB_TYPE_INTERLACED		3353661	1					
ANR	3354078	ExpressionStatement	h -> slice_table [ mb_xy ] = h -> slice_num	139:4:2369:2406	3353661	17	True				
ANR	3354079	AssignmentExpression	h -> slice_table [ mb_xy ] = h -> slice_num		3353661	0		=			
ANR	3354080	ArrayIndexing	h -> slice_table [ mb_xy ]		3353661	0					
ANR	3354081	PtrMemberAccess	h -> slice_table		3353661	0					
ANR	3354082	Identifier	h		3353661	0					
ANR	3354083	Identifier	slice_table		3353661	1					
ANR	3354084	Identifier	mb_xy		3353661	1					
ANR	3354085	PtrMemberAccess	h -> slice_num		3353661	1					
ANR	3354086	Identifier	h		3353661	0					
ANR	3354087	Identifier	slice_num		3353661	1					
ANR	3354088	IfStatement	if ( IS_INTRA_PCM ( mb_type ) )		3353661	18					
ANR	3354089	Condition	IS_INTRA_PCM ( mb_type )	143:7:2418:2438	3353661	0	True				
ANR	3354090	CallExpression	IS_INTRA_PCM ( mb_type )		3353661	0					
ANR	3354091	Callee	IS_INTRA_PCM		3353661	0					
ANR	3354092	Identifier	IS_INTRA_PCM		3353661	0					
ANR	3354093	ArgumentList	mb_type		3353661	1					
ANR	3354094	Argument	mb_type		3353661	0					
ANR	3354095	Identifier	mb_type		3353661	0					
ANR	3354096	CompoundStatement		145:8:2407:2421	3353661	1					
ANR	3354097	IdentifierDeclStatement	unsigned int x ;	145:8:2451:2465	3353661	0	True				
ANR	3354098	IdentifierDecl	x		3353661	0					
ANR	3354099	IdentifierDeclType	unsigned int		3353661	0					
ANR	3354100	Identifier	x		3353661	1					
ANR	3354101	ExpressionStatement	align_get_bits ( & s -> gb )	151:8:2553:2575	3353661	1	True				
ANR	3354102	CallExpression	align_get_bits ( & s -> gb )		3353661	0					
ANR	3354103	Callee	align_get_bits		3353661	0					
ANR	3354104	Identifier	align_get_bits		3353661	0					
ANR	3354105	ArgumentList	& s -> gb		3353661	1					
ANR	3354106	Argument	& s -> gb		3353661	0					
ANR	3354107	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354108	UnaryOperator	&		3353661	0					
ANR	3354109	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354110	Identifier	s		3353661	0					
ANR	3354111	Identifier	gb		3353661	1					
ANR	3354112	ForStatement	for ( x = 0 ; x < ( CHROMA ? 384 : 256 ) ; x ++ )		3353661	2					
ANR	3354113	ForInit	x = 0 ;	157:12:2670:2673	3353661	0	True				
ANR	3354114	AssignmentExpression	x = 0		3353661	0		=			
ANR	3354115	Identifier	x		3353661	0					
ANR	3354116	PrimaryExpression	0		3353661	1					
ANR	3354117	Condition	x < ( CHROMA ? 384 : 256 )	157:17:2675:2698	3353661	1	True				
ANR	3354118	RelationalExpression	x < ( CHROMA ? 384 : 256 )		3353661	0		<			
ANR	3354119	Identifier	x		3353661	0					
ANR	3354120	ConditionalExpression	CHROMA ? 384 : 256		3353661	1					
ANR	3354121	Condition	CHROMA		3353661	0					
ANR	3354122	Identifier	CHROMA		3353661	0					
ANR	3354123	PrimaryExpression	384		3353661	1					
ANR	3354124	PrimaryExpression	256		3353661	2					
ANR	3354125	PostIncDecOperationExpression	x ++	157:43:2701:2703	3353661	2	True				
ANR	3354126	Identifier	x		3353661	0					
ANR	3354127	IncDec	++		3353661	1					
ANR	3354128	CompoundStatement		157:47:2661:2661	3353661	3					
ANR	3354129	ExpressionStatement	"( ( uint8_t * ) h -> mb ) [ x ] = get_bits ( & s -> gb , 8 )"	159:12:2720:2761	3353661	0	True				
ANR	3354130	AssignmentExpression	"( ( uint8_t * ) h -> mb ) [ x ] = get_bits ( & s -> gb , 8 )"		3353661	0		=			
ANR	3354131	ArrayIndexing	( ( uint8_t * ) h -> mb ) [ x ]		3353661	0					
ANR	3354132	CastExpression	( uint8_t * ) h -> mb		3353661	0					
ANR	3354133	CastTarget	uint8_t *		3353661	0					
ANR	3354134	PtrMemberAccess	h -> mb		3353661	1					
ANR	3354135	Identifier	h		3353661	0					
ANR	3354136	Identifier	mb		3353661	1					
ANR	3354137	Identifier	x		3353661	1					
ANR	3354138	CallExpression	"get_bits ( & s -> gb , 8 )"		3353661	1					
ANR	3354139	Callee	get_bits		3353661	0					
ANR	3354140	Identifier	get_bits		3353661	0					
ANR	3354141	ArgumentList	& s -> gb		3353661	1					
ANR	3354142	Argument	& s -> gb		3353661	0					
ANR	3354143	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354144	UnaryOperator	&		3353661	0					
ANR	3354145	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354146	Identifier	s		3353661	0					
ANR	3354147	Identifier	gb		3353661	1					
ANR	3354148	Argument	8		3353661	1					
ANR	3354149	PrimaryExpression	8		3353661	0					
ANR	3354150	ExpressionStatement	s -> current_picture . qscale_table [ mb_xy ] = 0	167:8:2831:2872	3353661	3	True				
ANR	3354151	AssignmentExpression	s -> current_picture . qscale_table [ mb_xy ] = 0		3353661	0		=			
ANR	3354152	ArrayIndexing	s -> current_picture . qscale_table [ mb_xy ]		3353661	0					
ANR	3354153	MemberAccess	s -> current_picture . qscale_table		3353661	0					
ANR	3354154	PtrMemberAccess	s -> current_picture		3353661	0					
ANR	3354155	Identifier	s		3353661	0					
ANR	3354156	Identifier	current_picture		3353661	1					
ANR	3354157	Identifier	qscale_table		3353661	1					
ANR	3354158	Identifier	mb_xy		3353661	1					
ANR	3354159	PrimaryExpression	0		3353661	1					
ANR	3354160	ExpressionStatement	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 16 )"	171:8:2918:2958	3353661	4	True				
ANR	3354161	CallExpression	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 16 )"		3353661	0					
ANR	3354162	Callee	memset		3353661	0					
ANR	3354163	Identifier	memset		3353661	0					
ANR	3354164	ArgumentList	h -> non_zero_count [ mb_xy ]		3353661	1					
ANR	3354165	Argument	h -> non_zero_count [ mb_xy ]		3353661	0					
ANR	3354166	ArrayIndexing	h -> non_zero_count [ mb_xy ]		3353661	0					
ANR	3354167	PtrMemberAccess	h -> non_zero_count		3353661	0					
ANR	3354168	Identifier	h		3353661	0					
ANR	3354169	Identifier	non_zero_count		3353661	1					
ANR	3354170	Identifier	mb_xy		3353661	1					
ANR	3354171	Argument	16		3353661	1					
ANR	3354172	PrimaryExpression	16		3353661	0					
ANR	3354173	Argument	16		3353661	2					
ANR	3354174	PrimaryExpression	16		3353661	0					
ANR	3354175	ExpressionStatement	s -> current_picture . mb_type [ mb_xy ] = mb_type	175:8:2971:3013	3353661	5	True				
ANR	3354176	AssignmentExpression	s -> current_picture . mb_type [ mb_xy ] = mb_type		3353661	0		=			
ANR	3354177	ArrayIndexing	s -> current_picture . mb_type [ mb_xy ]		3353661	0					
ANR	3354178	MemberAccess	s -> current_picture . mb_type		3353661	0					
ANR	3354179	PtrMemberAccess	s -> current_picture		3353661	0					
ANR	3354180	Identifier	s		3353661	0					
ANR	3354181	Identifier	current_picture		3353661	1					
ANR	3354182	Identifier	mb_type		3353661	1					
ANR	3354183	Identifier	mb_xy		3353661	1					
ANR	3354184	Identifier	mb_type		3353661	1					
ANR	3354185	ReturnStatement	return 0 ;	177:8:3024:3032	3353661	6	True				
ANR	3354186	PrimaryExpression	0		3353661	0					
ANR	3354187	IfStatement	if ( MB_MBAFF )		3353661	19					
ANR	3354188	Condition	MB_MBAFF	183:7:3051:3058	3353661	0	True				
ANR	3354189	Identifier	MB_MBAFF		3353661	0					
ANR	3354190	CompoundStatement		183:16:3016:3016	3353661	1					
ANR	3354191	ExpressionStatement	h -> ref_count [ 0 ] <<= 1	185:8:3071:3092	3353661	0	True				
ANR	3354192	AssignmentExpression	h -> ref_count [ 0 ] <<= 1		3353661	0		<<=			
ANR	3354193	ArrayIndexing	h -> ref_count [ 0 ]		3353661	0					
ANR	3354194	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3354195	Identifier	h		3353661	0					
ANR	3354196	Identifier	ref_count		3353661	1					
ANR	3354197	PrimaryExpression	0		3353661	1					
ANR	3354198	PrimaryExpression	1		3353661	1					
ANR	3354199	ExpressionStatement	h -> ref_count [ 1 ] <<= 1	187:8:3103:3124	3353661	1	True				
ANR	3354200	AssignmentExpression	h -> ref_count [ 1 ] <<= 1		3353661	0		<<=			
ANR	3354201	ArrayIndexing	h -> ref_count [ 1 ]		3353661	0					
ANR	3354202	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3354203	Identifier	h		3353661	0					
ANR	3354204	Identifier	ref_count		3353661	1					
ANR	3354205	PrimaryExpression	1		3353661	1					
ANR	3354206	PrimaryExpression	1		3353661	1					
ANR	3354207	ExpressionStatement	"fill_caches ( h , mb_type , 0 )"	193:4:3140:3166	3353661	20	True				
ANR	3354208	CallExpression	"fill_caches ( h , mb_type , 0 )"		3353661	0					
ANR	3354209	Callee	fill_caches		3353661	0					
ANR	3354210	Identifier	fill_caches		3353661	0					
ANR	3354211	ArgumentList	h		3353661	1					
ANR	3354212	Argument	h		3353661	0					
ANR	3354213	Identifier	h		3353661	0					
ANR	3354214	Argument	mb_type		3353661	1					
ANR	3354215	Identifier	mb_type		3353661	0					
ANR	3354216	Argument	0		3353661	2					
ANR	3354217	PrimaryExpression	0		3353661	0					
ANR	3354218	IfStatement	if ( IS_INTRA ( mb_type ) )		3353661	21					
ANR	3354219	Condition	IS_INTRA ( mb_type )	199:7:3193:3209	3353661	0	True				
ANR	3354220	CallExpression	IS_INTRA ( mb_type )		3353661	0					
ANR	3354221	Callee	IS_INTRA		3353661	0					
ANR	3354222	Identifier	IS_INTRA		3353661	0					
ANR	3354223	ArgumentList	mb_type		3353661	1					
ANR	3354224	Argument	mb_type		3353661	0					
ANR	3354225	Identifier	mb_type		3353661	0					
ANR	3354226	CompoundStatement		201:8:3178:3191	3353661	1					
ANR	3354227	IdentifierDeclStatement	int pred_mode ;	201:8:3222:3235	3353661	0	True				
ANR	3354228	IdentifierDecl	pred_mode		3353661	0					
ANR	3354229	IdentifierDeclType	int		3353661	0					
ANR	3354230	Identifier	pred_mode		3353661	1					
ANR	3354231	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3353661	1					
ANR	3354232	Condition	IS_INTRA4x4 ( mb_type )	205:11:3295:3314	3353661	0	True				
ANR	3354233	CallExpression	IS_INTRA4x4 ( mb_type )		3353661	0					
ANR	3354234	Callee	IS_INTRA4x4		3353661	0					
ANR	3354235	Identifier	IS_INTRA4x4		3353661	0					
ANR	3354236	ArgumentList	mb_type		3353661	1					
ANR	3354237	Argument	mb_type		3353661	0					
ANR	3354238	Identifier	mb_type		3353661	0					
ANR	3354239	CompoundStatement		209:12:3307:3317	3353661	1					
ANR	3354240	IdentifierDeclStatement	int i ;	207:12:3331:3336	3353661	0	True				
ANR	3354241	IdentifierDecl	i		3353661	0					
ANR	3354242	IdentifierDeclType	int		3353661	0					
ANR	3354243	Identifier	i		3353661	1					
ANR	3354244	IdentifierDeclStatement	int di = 1 ;	209:12:3351:3361	3353661	1	True				
ANR	3354245	IdentifierDecl	di = 1		3353661	0					
ANR	3354246	IdentifierDeclType	int		3353661	0					
ANR	3354247	Identifier	di		3353661	1					
ANR	3354248	AssignmentExpression	di = 1		3353661	2		=			
ANR	3354249	Identifier	di		3353661	0					
ANR	3354250	PrimaryExpression	1		3353661	1					
ANR	3354251	IfStatement	if ( dct8x8_allowed && get_bits1 ( & s -> gb ) )		3353661	2					
ANR	3354252	Condition	dct8x8_allowed && get_bits1 ( & s -> gb )	211:15:3379:3413	3353661	0	True				
ANR	3354253	AndExpression	dct8x8_allowed && get_bits1 ( & s -> gb )		3353661	0		&&			
ANR	3354254	Identifier	dct8x8_allowed		3353661	0					
ANR	3354255	CallExpression	get_bits1 ( & s -> gb )		3353661	1					
ANR	3354256	Callee	get_bits1		3353661	0					
ANR	3354257	Identifier	get_bits1		3353661	0					
ANR	3354258	ArgumentList	& s -> gb		3353661	1					
ANR	3354259	Argument	& s -> gb		3353661	0					
ANR	3354260	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354261	UnaryOperator	&		3353661	0					
ANR	3354262	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354263	Identifier	s		3353661	0					
ANR	3354264	Identifier	gb		3353661	1					
ANR	3354265	CompoundStatement		211:51:3371:3371	3353661	1					
ANR	3354266	ExpressionStatement	mb_type |= MB_TYPE_8x8DCT	213:16:3434:3459	3353661	0	True				
ANR	3354267	AssignmentExpression	mb_type |= MB_TYPE_8x8DCT		3353661	0		|=			
ANR	3354268	Identifier	mb_type		3353661	0					
ANR	3354269	Identifier	MB_TYPE_8x8DCT		3353661	1					
ANR	3354270	ExpressionStatement	di = 4	215:16:3478:3484	3353661	1	True				
ANR	3354271	AssignmentExpression	di = 4		3353661	0		=			
ANR	3354272	Identifier	di		3353661	0					
ANR	3354273	PrimaryExpression	4		3353661	1					
ANR	3354274	ForStatement	for ( i = 0 ; i < 16 ; i += di )		3353661	3					
ANR	3354275	ForInit	i = 0 ;	223:16:3568:3571	3353661	0	True				
ANR	3354276	AssignmentExpression	i = 0		3353661	0		=			
ANR	3354277	Identifier	i		3353661	0					
ANR	3354278	PrimaryExpression	0		3353661	1					
ANR	3354279	Condition	i < 16	223:21:3573:3576	3353661	1	True				
ANR	3354280	RelationalExpression	i < 16		3353661	0		<			
ANR	3354281	Identifier	i		3353661	0					
ANR	3354282	PrimaryExpression	16		3353661	1					
ANR	3354283	AssignmentExpression	i += di	223:27:3579:3583	3353661	2	True	+=			
ANR	3354284	Identifier	i		3353661	0					
ANR	3354285	Identifier	di		3353661	1					
ANR	3354286	CompoundStatement		225:16:3560:3591	3353661	3					
ANR	3354287	IdentifierDeclStatement	"int mode = pred_intra_mode ( h , i ) ;"	225:16:3604:3635	3353661	0	True				
ANR	3354288	IdentifierDecl	"mode = pred_intra_mode ( h , i )"		3353661	0					
ANR	3354289	IdentifierDeclType	int		3353661	0					
ANR	3354290	Identifier	mode		3353661	1					
ANR	3354291	AssignmentExpression	"mode = pred_intra_mode ( h , i )"		3353661	2		=			
ANR	3354292	Identifier	mode		3353661	0					
ANR	3354293	CallExpression	"pred_intra_mode ( h , i )"		3353661	1					
ANR	3354294	Callee	pred_intra_mode		3353661	0					
ANR	3354295	Identifier	pred_intra_mode		3353661	0					
ANR	3354296	ArgumentList	h		3353661	1					
ANR	3354297	Argument	h		3353661	0					
ANR	3354298	Identifier	h		3353661	0					
ANR	3354299	Argument	i		3353661	1					
ANR	3354300	Identifier	i		3353661	0					
ANR	3354301	IfStatement	if ( ! get_bits1 ( & s -> gb ) )		3353661	1					
ANR	3354302	Condition	! get_bits1 ( & s -> gb )	229:19:3659:3676	3353661	0	True				
ANR	3354303	UnaryOperationExpression	! get_bits1 ( & s -> gb )		3353661	0					
ANR	3354304	UnaryOperator	!		3353661	0					
ANR	3354305	CallExpression	get_bits1 ( & s -> gb )		3353661	1					
ANR	3354306	Callee	get_bits1		3353661	0					
ANR	3354307	Identifier	get_bits1		3353661	0					
ANR	3354308	ArgumentList	& s -> gb		3353661	1					
ANR	3354309	Argument	& s -> gb		3353661	0					
ANR	3354310	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354311	UnaryOperator	&		3353661	0					
ANR	3354312	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354313	Identifier	s		3353661	0					
ANR	3354314	Identifier	gb		3353661	1					
ANR	3354315	CompoundStatement		231:20:3657:3696	3353661	1					
ANR	3354316	IdentifierDeclStatement	"const int rem_mode = get_bits ( & s -> gb , 3 ) ;"	231:20:3701:3740	3353661	0	True				
ANR	3354317	IdentifierDecl	"rem_mode = get_bits ( & s -> gb , 3 )"		3353661	0					
ANR	3354318	IdentifierDeclType	const int		3353661	0					
ANR	3354319	Identifier	rem_mode		3353661	1					
ANR	3354320	AssignmentExpression	"rem_mode = get_bits ( & s -> gb , 3 )"		3353661	2		=			
ANR	3354321	Identifier	rem_mode		3353661	0					
ANR	3354322	CallExpression	"get_bits ( & s -> gb , 3 )"		3353661	1					
ANR	3354323	Callee	get_bits		3353661	0					
ANR	3354324	Identifier	get_bits		3353661	0					
ANR	3354325	ArgumentList	& s -> gb		3353661	1					
ANR	3354326	Argument	& s -> gb		3353661	0					
ANR	3354327	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354328	UnaryOperator	&		3353661	0					
ANR	3354329	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354330	Identifier	s		3353661	0					
ANR	3354331	Identifier	gb		3353661	1					
ANR	3354332	Argument	3		3353661	1					
ANR	3354333	PrimaryExpression	3		3353661	0					
ANR	3354334	ExpressionStatement	mode = rem_mode + ( rem_mode >= mode )	233:20:3763:3799	3353661	1	True				
ANR	3354335	AssignmentExpression	mode = rem_mode + ( rem_mode >= mode )		3353661	0		=			
ANR	3354336	Identifier	mode		3353661	0					
ANR	3354337	AdditiveExpression	rem_mode + ( rem_mode >= mode )		3353661	1		+			
ANR	3354338	Identifier	rem_mode		3353661	0					
ANR	3354339	RelationalExpression	rem_mode >= mode		3353661	1		>=			
ANR	3354340	Identifier	rem_mode		3353661	0					
ANR	3354341	Identifier	mode		3353661	1					
ANR	3354342	IfStatement	if ( di == 4 )		3353661	2					
ANR	3354343	Condition	di == 4	239:19:3842:3846	3353661	0	True				
ANR	3354344	EqualityExpression	di == 4		3353661	0		==			
ANR	3354345	Identifier	di		3353661	0					
ANR	3354346	PrimaryExpression	4		3353661	1					
ANR	3354347	ExpressionStatement	"fill_rectangle ( & h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"	241:20:3870:3946	3353661	1	True				
ANR	3354348	CallExpression	"fill_rectangle ( & h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"		3353661	0					
ANR	3354349	Callee	fill_rectangle		3353661	0					
ANR	3354350	Identifier	fill_rectangle		3353661	0					
ANR	3354351	ArgumentList	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3353661	1					
ANR	3354352	Argument	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3353661	0					
ANR	3354353	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3353661	0					
ANR	3354354	UnaryOperator	&		3353661	0					
ANR	3354355	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3353661	1					
ANR	3354356	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3353661	0					
ANR	3354357	Identifier	h		3353661	0					
ANR	3354358	Identifier	intra4x4_pred_mode_cache		3353661	1					
ANR	3354359	ArrayIndexing	scan8 [ i ]		3353661	1					
ANR	3354360	Identifier	scan8		3353661	0					
ANR	3354361	Identifier	i		3353661	1					
ANR	3354362	Argument	2		3353661	1					
ANR	3354363	PrimaryExpression	2		3353661	0					
ANR	3354364	Argument	2		3353661	2					
ANR	3354365	PrimaryExpression	2		3353661	0					
ANR	3354366	Argument	8		3353661	3					
ANR	3354367	PrimaryExpression	8		3353661	0					
ANR	3354368	Argument	mode		3353661	4					
ANR	3354369	Identifier	mode		3353661	0					
ANR	3354370	Argument	1		3353661	5					
ANR	3354371	PrimaryExpression	1		3353661	0					
ANR	3354372	ElseStatement	else		3353661	0					
ANR	3354373	ExpressionStatement	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = mode	245:20:3991:4037	3353661	0	True				
ANR	3354374	AssignmentExpression	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = mode		3353661	0		=			
ANR	3354375	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3353661	0					
ANR	3354376	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3353661	0					
ANR	3354377	Identifier	h		3353661	0					
ANR	3354378	Identifier	intra4x4_pred_mode_cache		3353661	1					
ANR	3354379	ArrayIndexing	scan8 [ i ]		3353661	1					
ANR	3354380	Identifier	scan8		3353661	0					
ANR	3354381	Identifier	i		3353661	1					
ANR	3354382	Identifier	mode		3353661	1					
ANR	3354383	ExpressionStatement	ff_h264_write_back_intra_pred_mode ( h )	249:12:4067:4104	3353661	4	True				
ANR	3354384	CallExpression	ff_h264_write_back_intra_pred_mode ( h )		3353661	0					
ANR	3354385	Callee	ff_h264_write_back_intra_pred_mode		3353661	0					
ANR	3354386	Identifier	ff_h264_write_back_intra_pred_mode		3353661	0					
ANR	3354387	ArgumentList	h		3353661	1					
ANR	3354388	Argument	h		3353661	0					
ANR	3354389	Identifier	h		3353661	0					
ANR	3354390	IfStatement	if ( ff_h264_check_intra4x4_pred_mode ( h ) < 0 )		3353661	5					
ANR	3354391	Condition	ff_h264_check_intra4x4_pred_mode ( h ) < 0	251:16:4123:4161	3353661	0	True				
ANR	3354392	RelationalExpression	ff_h264_check_intra4x4_pred_mode ( h ) < 0		3353661	0		<			
ANR	3354393	CallExpression	ff_h264_check_intra4x4_pred_mode ( h )		3353661	0					
ANR	3354394	Callee	ff_h264_check_intra4x4_pred_mode		3353661	0					
ANR	3354395	Identifier	ff_h264_check_intra4x4_pred_mode		3353661	0					
ANR	3354396	ArgumentList	h		3353661	1					
ANR	3354397	Argument	h		3353661	0					
ANR	3354398	Identifier	h		3353661	0					
ANR	3354399	PrimaryExpression	0		3353661	1					
ANR	3354400	ReturnStatement	return - 1 ;	253:16:4181:4190	3353661	1	True				
ANR	3354401	UnaryOperationExpression	- 1		3353661	0					
ANR	3354402	UnaryOperator	-		3353661	0					
ANR	3354403	PrimaryExpression	1		3353661	1					
ANR	3354404	ElseStatement	else		3353661	0					
ANR	3354405	CompoundStatement		255:13:4162:4162	3353661	0					
ANR	3354406	ExpressionStatement	"h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode )"	257:12:4221:4303	3353661	0	True				
ANR	3354407	AssignmentExpression	"h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode )"		3353661	0		=			
ANR	3354408	PtrMemberAccess	h -> intra16x16_pred_mode		3353661	0					
ANR	3354409	Identifier	h		3353661	0					
ANR	3354410	Identifier	intra16x16_pred_mode		3353661	1					
ANR	3354411	CallExpression	"ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode )"		3353661	1					
ANR	3354412	Callee	ff_h264_check_intra_pred_mode		3353661	0					
ANR	3354413	Identifier	ff_h264_check_intra_pred_mode		3353661	0					
ANR	3354414	ArgumentList	h		3353661	1					
ANR	3354415	Argument	h		3353661	0					
ANR	3354416	Identifier	h		3353661	0					
ANR	3354417	Argument	h -> intra16x16_pred_mode		3353661	1					
ANR	3354418	PtrMemberAccess	h -> intra16x16_pred_mode		3353661	0					
ANR	3354419	Identifier	h		3353661	0					
ANR	3354420	Identifier	intra16x16_pred_mode		3353661	1					
ANR	3354421	IfStatement	if ( h -> intra16x16_pred_mode < 0 )		3353661	1					
ANR	3354422	Condition	h -> intra16x16_pred_mode < 0	259:15:4321:4347	3353661	0	True				
ANR	3354423	RelationalExpression	h -> intra16x16_pred_mode < 0		3353661	0		<			
ANR	3354424	PtrMemberAccess	h -> intra16x16_pred_mode		3353661	0					
ANR	3354425	Identifier	h		3353661	0					
ANR	3354426	Identifier	intra16x16_pred_mode		3353661	1					
ANR	3354427	PrimaryExpression	0		3353661	1					
ANR	3354428	ReturnStatement	return - 1 ;	261:16:4367:4376	3353661	1	True				
ANR	3354429	UnaryOperationExpression	- 1		3353661	0					
ANR	3354430	UnaryOperator	-		3353661	0					
ANR	3354431	PrimaryExpression	1		3353661	1					
ANR	3354432	IfStatement	if ( CHROMA )		3353661	2					
ANR	3354433	Condition	CHROMA	265:11:4401:4406	3353661	0	True				
ANR	3354434	Identifier	CHROMA		3353661	0					
ANR	3354435	CompoundStatement		265:18:4364:4364	3353661	1					
ANR	3354436	ExpressionStatement	"pred_mode = ff_h264_check_intra_pred_mode ( h , get_ue_golomb_31 ( & s -> gb ) )"	267:12:4423:4492	3353661	0	True				
ANR	3354437	AssignmentExpression	"pred_mode = ff_h264_check_intra_pred_mode ( h , get_ue_golomb_31 ( & s -> gb ) )"		3353661	0		=			
ANR	3354438	Identifier	pred_mode		3353661	0					
ANR	3354439	CallExpression	"ff_h264_check_intra_pred_mode ( h , get_ue_golomb_31 ( & s -> gb ) )"		3353661	1					
ANR	3354440	Callee	ff_h264_check_intra_pred_mode		3353661	0					
ANR	3354441	Identifier	ff_h264_check_intra_pred_mode		3353661	0					
ANR	3354442	ArgumentList	h		3353661	1					
ANR	3354443	Argument	h		3353661	0					
ANR	3354444	Identifier	h		3353661	0					
ANR	3354445	Argument	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3354446	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	0					
ANR	3354447	Callee	get_ue_golomb_31		3353661	0					
ANR	3354448	Identifier	get_ue_golomb_31		3353661	0					
ANR	3354449	ArgumentList	& s -> gb		3353661	1					
ANR	3354450	Argument	& s -> gb		3353661	0					
ANR	3354451	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354452	UnaryOperator	&		3353661	0					
ANR	3354453	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354454	Identifier	s		3353661	0					
ANR	3354455	Identifier	gb		3353661	1					
ANR	3354456	IfStatement	if ( pred_mode < 0 )		3353661	1					
ANR	3354457	Condition	pred_mode < 0	269:15:4510:4522	3353661	0	True				
ANR	3354458	RelationalExpression	pred_mode < 0		3353661	0		<			
ANR	3354459	Identifier	pred_mode		3353661	0					
ANR	3354460	PrimaryExpression	0		3353661	1					
ANR	3354461	ReturnStatement	return - 1 ;	271:16:4542:4551	3353661	1	True				
ANR	3354462	UnaryOperationExpression	- 1		3353661	0					
ANR	3354463	UnaryOperator	-		3353661	0					
ANR	3354464	PrimaryExpression	1		3353661	1					
ANR	3354465	ExpressionStatement	h -> chroma_pred_mode = pred_mode	273:12:4566:4596	3353661	2	True				
ANR	3354466	AssignmentExpression	h -> chroma_pred_mode = pred_mode		3353661	0		=			
ANR	3354467	PtrMemberAccess	h -> chroma_pred_mode		3353661	0					
ANR	3354468	Identifier	h		3353661	0					
ANR	3354469	Identifier	chroma_pred_mode		3353661	1					
ANR	3354470	Identifier	pred_mode		3353661	1					
ANR	3354471	ElseStatement	else		3353661	0					
ANR	3354472	IfStatement	if ( partition_count == 4 )		3353661	0					
ANR	3354473	Condition	partition_count == 4	277:13:4623:4640	3353661	0	True				
ANR	3354474	EqualityExpression	partition_count == 4		3353661	0		==			
ANR	3354475	Identifier	partition_count		3353661	0					
ANR	3354476	PrimaryExpression	4		3353661	1					
ANR	3354477	CompoundStatement		277:32:4598:4598	3353661	1					
ANR	3354478	Statement	int	279:8:4653:4655	3353661	0	True				
ANR	3354479	ExpressionStatement	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"	279:12:4657:4702	3353661	1	True				
ANR	3354480	Expression	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3353661	0					
ANR	3354481	Identifier	i		3353661	0					
ANR	3354482	Expression	"j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3353661	1					
ANR	3354483	Identifier	j		3353661	0					
ANR	3354484	Expression	"sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3353661	1					
ANR	3354485	ArrayIndexing	sub_partition_count [ 4 ]		3353661	0					
ANR	3354486	Identifier	sub_partition_count		3353661	0					
ANR	3354487	PrimaryExpression	4		3353661	1					
ANR	3354488	Expression	"list , ref [ 2 ] [ 4 ]"		3353661	1					
ANR	3354489	Identifier	list		3353661	0					
ANR	3354490	ArrayIndexing	ref [ 2 ] [ 4 ]		3353661	1					
ANR	3354491	ArrayIndexing	ref [ 2 ]		3353661	0					
ANR	3354492	Identifier	ref		3353661	0					
ANR	3354493	PrimaryExpression	2		3353661	1					
ANR	3354494	PrimaryExpression	4		3353661	1					
ANR	3354495	IfStatement	if ( h -> slice_type_nos == FF_B_TYPE )		3353661	2					
ANR	3354496	Condition	h -> slice_type_nos == FF_B_TYPE	283:11:4718:4747	3353661	0	True				
ANR	3354497	EqualityExpression	h -> slice_type_nos == FF_B_TYPE		3353661	0		==			
ANR	3354498	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3354499	Identifier	h		3353661	0					
ANR	3354500	Identifier	slice_type_nos		3353661	1					
ANR	3354501	Identifier	FF_B_TYPE		3353661	1					
ANR	3354502	CompoundStatement		283:42:4705:4705	3353661	1					
ANR	3354503	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3353661	0					
ANR	3354504	ForInit	i = 0 ;	285:16:4768:4771	3353661	0	True				
ANR	3354505	AssignmentExpression	i = 0		3353661	0		=			
ANR	3354506	Identifier	i		3353661	0					
ANR	3354507	PrimaryExpression	0		3353661	1					
ANR	3354508	Condition	i < 4	285:21:4773:4775	3353661	1	True				
ANR	3354509	RelationalExpression	i < 4		3353661	0		<			
ANR	3354510	Identifier	i		3353661	0					
ANR	3354511	PrimaryExpression	4		3353661	1					
ANR	3354512	PostIncDecOperationExpression	i ++	285:26:4778:4780	3353661	2	True				
ANR	3354513	Identifier	i		3353661	0					
ANR	3354514	IncDec	++		3353661	1					
ANR	3354515	CompoundStatement		285:30:4738:4738	3353661	3					
ANR	3354516	ExpressionStatement	h -> sub_mb_type [ i ] = get_ue_golomb_31 ( & s -> gb )	287:16:4801:4844	3353661	0	True				
ANR	3354517	AssignmentExpression	h -> sub_mb_type [ i ] = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3354518	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354519	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354520	Identifier	h		3353661	0					
ANR	3354521	Identifier	sub_mb_type		3353661	1					
ANR	3354522	Identifier	i		3353661	1					
ANR	3354523	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3354524	Callee	get_ue_golomb_31		3353661	0					
ANR	3354525	Identifier	get_ue_golomb_31		3353661	0					
ANR	3354526	ArgumentList	& s -> gb		3353661	1					
ANR	3354527	Argument	& s -> gb		3353661	0					
ANR	3354528	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354529	UnaryOperator	&		3353661	0					
ANR	3354530	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354531	Identifier	s		3353661	0					
ANR	3354532	Identifier	gb		3353661	1					
ANR	3354533	IfStatement	if ( h -> sub_mb_type [ i ] >= 13 )		3353661	1					
ANR	3354534	Condition	h -> sub_mb_type [ i ] >= 13	289:19:4866:4887	3353661	0	True				
ANR	3354535	RelationalExpression	h -> sub_mb_type [ i ] >= 13		3353661	0		>=			
ANR	3354536	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354537	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354538	Identifier	h		3353661	0					
ANR	3354539	Identifier	sub_mb_type		3353661	1					
ANR	3354540	Identifier	i		3353661	1					
ANR	3354541	PrimaryExpression	13		3353661	1					
ANR	3354542	CompoundStatement		289:42:4845:4845	3353661	1					
ANR	3354543	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""B sub_mb_type %u out of range at %d %d\\n"" , h -> sub_mb_type [ i ] , s -> mb_x , s -> mb_y )"	291:20:4912:5025	3353661	0	True				
ANR	3354544	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""B sub_mb_type %u out of range at %d %d\\n"" , h -> sub_mb_type [ i ] , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3354545	Callee	av_log		3353661	0					
ANR	3354546	Identifier	av_log		3353661	0					
ANR	3354547	ArgumentList	h -> s . avctx		3353661	1					
ANR	3354548	Argument	h -> s . avctx		3353661	0					
ANR	3354549	MemberAccess	h -> s . avctx		3353661	0					
ANR	3354550	PtrMemberAccess	h -> s		3353661	0					
ANR	3354551	Identifier	h		3353661	0					
ANR	3354552	Identifier	s		3353661	1					
ANR	3354553	Identifier	avctx		3353661	1					
ANR	3354554	Argument	AV_LOG_ERROR		3353661	1					
ANR	3354555	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3354556	Argument	"""B sub_mb_type %u out of range at %d %d\\n"""		3353661	2					
ANR	3354557	PrimaryExpression	"""B sub_mb_type %u out of range at %d %d\\n"""		3353661	0					
ANR	3354558	Argument	h -> sub_mb_type [ i ]		3353661	3					
ANR	3354559	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354560	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354561	Identifier	h		3353661	0					
ANR	3354562	Identifier	sub_mb_type		3353661	1					
ANR	3354563	Identifier	i		3353661	1					
ANR	3354564	Argument	s -> mb_x		3353661	4					
ANR	3354565	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3354566	Identifier	s		3353661	0					
ANR	3354567	Identifier	mb_x		3353661	1					
ANR	3354568	Argument	s -> mb_y		3353661	5					
ANR	3354569	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3354570	Identifier	s		3353661	0					
ANR	3354571	Identifier	mb_y		3353661	1					
ANR	3354572	ReturnStatement	return - 1 ;	293:20:5048:5057	3353661	1	True				
ANR	3354573	UnaryOperationExpression	- 1		3353661	0					
ANR	3354574	UnaryOperator	-		3353661	0					
ANR	3354575	PrimaryExpression	1		3353661	1					
ANR	3354576	ExpressionStatement	sub_partition_count [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count	297:16:5095:5174	3353661	2	True				
ANR	3354577	AssignmentExpression	sub_partition_count [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661	0		=			
ANR	3354578	ArrayIndexing	sub_partition_count [ i ]		3353661	0					
ANR	3354579	Identifier	sub_partition_count		3353661	0					
ANR	3354580	Identifier	i		3353661	1					
ANR	3354581	MemberAccess	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661	1					
ANR	3354582	ArrayIndexing	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3353661	0					
ANR	3354583	Identifier	b_sub_mb_type_info		3353661	0					
ANR	3354584	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354585	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354586	Identifier	h		3353661	0					
ANR	3354587	Identifier	sub_mb_type		3353661	1					
ANR	3354588	Identifier	i		3353661	1					
ANR	3354589	Identifier	partition_count		3353661	1					
ANR	3354590	ExpressionStatement	h -> sub_mb_type [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type	299:16:5193:5261	3353661	3	True				
ANR	3354591	AssignmentExpression	h -> sub_mb_type [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661	0		=			
ANR	3354592	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354593	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354594	Identifier	h		3353661	0					
ANR	3354595	Identifier	sub_mb_type		3353661	1					
ANR	3354596	Identifier	i		3353661	1					
ANR	3354597	MemberAccess	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661	1					
ANR	3354598	ArrayIndexing	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3353661	0					
ANR	3354599	Identifier	b_sub_mb_type_info		3353661	0					
ANR	3354600	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354601	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354602	Identifier	h		3353661	0					
ANR	3354603	Identifier	sub_mb_type		3353661	1					
ANR	3354604	Identifier	i		3353661	1					
ANR	3354605	Identifier	type		3353661	1					
ANR	3354606	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ 0 ] ) || IS_DIRECT ( h -> sub_mb_type [ 1 ] ) || IS_DIRECT ( h -> sub_mb_type [ 2 ] ) || IS_DIRECT ( h -> sub_mb_type [ 3 ] ) )		3353661	1					
ANR	3354607	Condition	IS_DIRECT ( h -> sub_mb_type [ 0 ] ) || IS_DIRECT ( h -> sub_mb_type [ 1 ] ) || IS_DIRECT ( h -> sub_mb_type [ 2 ] ) || IS_DIRECT ( h -> sub_mb_type [ 3 ] )	303:18:5297:5436	3353661	0	True				
ANR	3354608	OrExpression	IS_DIRECT ( h -> sub_mb_type [ 0 ] ) || IS_DIRECT ( h -> sub_mb_type [ 1 ] ) || IS_DIRECT ( h -> sub_mb_type [ 2 ] ) || IS_DIRECT ( h -> sub_mb_type [ 3 ] )		3353661	0		||			
ANR	3354609	CallExpression	IS_DIRECT ( h -> sub_mb_type [ 0 ] )		3353661	0					
ANR	3354610	Callee	IS_DIRECT		3353661	0					
ANR	3354611	Identifier	IS_DIRECT		3353661	0					
ANR	3354612	ArgumentList	h -> sub_mb_type [ 0 ]		3353661	1					
ANR	3354613	Argument	h -> sub_mb_type [ 0 ]		3353661	0					
ANR	3354614	ArrayIndexing	h -> sub_mb_type [ 0 ]		3353661	0					
ANR	3354615	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354616	Identifier	h		3353661	0					
ANR	3354617	Identifier	sub_mb_type		3353661	1					
ANR	3354618	PrimaryExpression	0		3353661	1					
ANR	3354619	OrExpression	IS_DIRECT ( h -> sub_mb_type [ 1 ] ) || IS_DIRECT ( h -> sub_mb_type [ 2 ] ) || IS_DIRECT ( h -> sub_mb_type [ 3 ] )		3353661	1		||			
ANR	3354620	CallExpression	IS_DIRECT ( h -> sub_mb_type [ 1 ] )		3353661	0					
ANR	3354621	Callee	IS_DIRECT		3353661	0					
ANR	3354622	Identifier	IS_DIRECT		3353661	0					
ANR	3354623	ArgumentList	h -> sub_mb_type [ 1 ]		3353661	1					
ANR	3354624	Argument	h -> sub_mb_type [ 1 ]		3353661	0					
ANR	3354625	ArrayIndexing	h -> sub_mb_type [ 1 ]		3353661	0					
ANR	3354626	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354627	Identifier	h		3353661	0					
ANR	3354628	Identifier	sub_mb_type		3353661	1					
ANR	3354629	PrimaryExpression	1		3353661	1					
ANR	3354630	OrExpression	IS_DIRECT ( h -> sub_mb_type [ 2 ] ) || IS_DIRECT ( h -> sub_mb_type [ 3 ] )		3353661	1		||			
ANR	3354631	CallExpression	IS_DIRECT ( h -> sub_mb_type [ 2 ] )		3353661	0					
ANR	3354632	Callee	IS_DIRECT		3353661	0					
ANR	3354633	Identifier	IS_DIRECT		3353661	0					
ANR	3354634	ArgumentList	h -> sub_mb_type [ 2 ]		3353661	1					
ANR	3354635	Argument	h -> sub_mb_type [ 2 ]		3353661	0					
ANR	3354636	ArrayIndexing	h -> sub_mb_type [ 2 ]		3353661	0					
ANR	3354637	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354638	Identifier	h		3353661	0					
ANR	3354639	Identifier	sub_mb_type		3353661	1					
ANR	3354640	PrimaryExpression	2		3353661	1					
ANR	3354641	CallExpression	IS_DIRECT ( h -> sub_mb_type [ 3 ] )		3353661	1					
ANR	3354642	Callee	IS_DIRECT		3353661	0					
ANR	3354643	Identifier	IS_DIRECT		3353661	0					
ANR	3354644	ArgumentList	h -> sub_mb_type [ 3 ]		3353661	1					
ANR	3354645	Argument	h -> sub_mb_type [ 3 ]		3353661	0					
ANR	3354646	ArrayIndexing	h -> sub_mb_type [ 3 ]		3353661	0					
ANR	3354647	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354648	Identifier	h		3353661	0					
ANR	3354649	Identifier	sub_mb_type		3353661	1					
ANR	3354650	PrimaryExpression	3		3353661	1					
ANR	3354651	CompoundStatement		305:80:5395:5395	3353661	1					
ANR	3354652	ExpressionStatement	"ff_h264_pred_direct_motion ( h , & mb_type )"	307:16:5458:5497	3353661	0	True				
ANR	3354653	CallExpression	"ff_h264_pred_direct_motion ( h , & mb_type )"		3353661	0					
ANR	3354654	Callee	ff_h264_pred_direct_motion		3353661	0					
ANR	3354655	Identifier	ff_h264_pred_direct_motion		3353661	0					
ANR	3354656	ArgumentList	h		3353661	1					
ANR	3354657	Argument	h		3353661	0					
ANR	3354658	Identifier	h		3353661	0					
ANR	3354659	Argument	& mb_type		3353661	1					
ANR	3354660	UnaryOperationExpression	& mb_type		3353661	0					
ANR	3354661	UnaryOperator	&		3353661	0					
ANR	3354662	Identifier	mb_type		3353661	1					
ANR	3354663	ExpressionStatement	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE	309:16:5516:5699	3353661	1	True				
ANR	3354664	AssignmentExpression	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3353661	0		=			
ANR	3354665	ArrayIndexing	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ]		3353661	0					
ANR	3354666	ArrayIndexing	h -> ref_cache [ 0 ]		3353661	0					
ANR	3354667	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3354668	Identifier	h		3353661	0					
ANR	3354669	Identifier	ref_cache		3353661	1					
ANR	3354670	PrimaryExpression	0		3353661	1					
ANR	3354671	ArrayIndexing	scan8 [ 4 ]		3353661	1					
ANR	3354672	Identifier	scan8		3353661	0					
ANR	3354673	PrimaryExpression	4		3353661	1					
ANR	3354674	AssignmentExpression	h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3353661	1		=			
ANR	3354675	ArrayIndexing	h -> ref_cache [ 1 ] [ scan8 [ 4 ] ]		3353661	0					
ANR	3354676	ArrayIndexing	h -> ref_cache [ 1 ]		3353661	0					
ANR	3354677	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3354678	Identifier	h		3353661	0					
ANR	3354679	Identifier	ref_cache		3353661	1					
ANR	3354680	PrimaryExpression	1		3353661	1					
ANR	3354681	ArrayIndexing	scan8 [ 4 ]		3353661	1					
ANR	3354682	Identifier	scan8		3353661	0					
ANR	3354683	PrimaryExpression	4		3353661	1					
ANR	3354684	AssignmentExpression	h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3353661	1		=			
ANR	3354685	ArrayIndexing	h -> ref_cache [ 0 ] [ scan8 [ 12 ] ]		3353661	0					
ANR	3354686	ArrayIndexing	h -> ref_cache [ 0 ]		3353661	0					
ANR	3354687	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3354688	Identifier	h		3353661	0					
ANR	3354689	Identifier	ref_cache		3353661	1					
ANR	3354690	PrimaryExpression	0		3353661	1					
ANR	3354691	ArrayIndexing	scan8 [ 12 ]		3353661	1					
ANR	3354692	Identifier	scan8		3353661	0					
ANR	3354693	PrimaryExpression	12		3353661	1					
ANR	3354694	AssignmentExpression	h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3353661	1		=			
ANR	3354695	ArrayIndexing	h -> ref_cache [ 1 ] [ scan8 [ 12 ] ]		3353661	0					
ANR	3354696	ArrayIndexing	h -> ref_cache [ 1 ]		3353661	0					
ANR	3354697	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3354698	Identifier	h		3353661	0					
ANR	3354699	Identifier	ref_cache		3353661	1					
ANR	3354700	PrimaryExpression	1		3353661	1					
ANR	3354701	ArrayIndexing	scan8 [ 12 ]		3353661	1					
ANR	3354702	Identifier	scan8		3353661	0					
ANR	3354703	PrimaryExpression	12		3353661	1					
ANR	3354704	Identifier	PART_NOT_AVAILABLE		3353661	1					
ANR	3354705	ElseStatement	else		3353661	0					
ANR	3354706	CompoundStatement		319:13:5686:5686	3353661	0					
ANR	3354707	ExpressionStatement	assert ( h -> slice_type_nos == FF_P_TYPE )	321:12:5745:5783	3353661	0	True				
ANR	3354708	CallExpression	assert ( h -> slice_type_nos == FF_P_TYPE )		3353661	0					
ANR	3354709	Callee	assert		3353661	0					
ANR	3354710	Identifier	assert		3353661	0					
ANR	3354711	ArgumentList	h -> slice_type_nos == FF_P_TYPE		3353661	1					
ANR	3354712	Argument	h -> slice_type_nos == FF_P_TYPE		3353661	0					
ANR	3354713	EqualityExpression	h -> slice_type_nos == FF_P_TYPE		3353661	0		==			
ANR	3354714	PtrMemberAccess	h -> slice_type_nos		3353661	0					
ANR	3354715	Identifier	h		3353661	0					
ANR	3354716	Identifier	slice_type_nos		3353661	1					
ANR	3354717	Identifier	FF_P_TYPE		3353661	1					
ANR	3354718	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3353661	1					
ANR	3354719	ForInit	i = 0 ;	323:16:5823:5826	3353661	0	True				
ANR	3354720	AssignmentExpression	i = 0		3353661	0		=			
ANR	3354721	Identifier	i		3353661	0					
ANR	3354722	PrimaryExpression	0		3353661	1					
ANR	3354723	Condition	i < 4	323:21:5828:5830	3353661	1	True				
ANR	3354724	RelationalExpression	i < 4		3353661	0		<			
ANR	3354725	Identifier	i		3353661	0					
ANR	3354726	PrimaryExpression	4		3353661	1					
ANR	3354727	PostIncDecOperationExpression	i ++	323:26:5833:5835	3353661	2	True				
ANR	3354728	Identifier	i		3353661	0					
ANR	3354729	IncDec	++		3353661	1					
ANR	3354730	CompoundStatement		323:30:5793:5793	3353661	3					
ANR	3354731	ExpressionStatement	h -> sub_mb_type [ i ] = get_ue_golomb_31 ( & s -> gb )	325:16:5856:5899	3353661	0	True				
ANR	3354732	AssignmentExpression	h -> sub_mb_type [ i ] = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3354733	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354734	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354735	Identifier	h		3353661	0					
ANR	3354736	Identifier	sub_mb_type		3353661	1					
ANR	3354737	Identifier	i		3353661	1					
ANR	3354738	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3354739	Callee	get_ue_golomb_31		3353661	0					
ANR	3354740	Identifier	get_ue_golomb_31		3353661	0					
ANR	3354741	ArgumentList	& s -> gb		3353661	1					
ANR	3354742	Argument	& s -> gb		3353661	0					
ANR	3354743	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354744	UnaryOperator	&		3353661	0					
ANR	3354745	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354746	Identifier	s		3353661	0					
ANR	3354747	Identifier	gb		3353661	1					
ANR	3354748	IfStatement	if ( h -> sub_mb_type [ i ] >= 4 )		3353661	1					
ANR	3354749	Condition	h -> sub_mb_type [ i ] >= 4	327:19:5921:5941	3353661	0	True				
ANR	3354750	RelationalExpression	h -> sub_mb_type [ i ] >= 4		3353661	0		>=			
ANR	3354751	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354752	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354753	Identifier	h		3353661	0					
ANR	3354754	Identifier	sub_mb_type		3353661	1					
ANR	3354755	Identifier	i		3353661	1					
ANR	3354756	PrimaryExpression	4		3353661	1					
ANR	3354757	CompoundStatement		327:41:5899:5899	3353661	1					
ANR	3354758	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""P sub_mb_type %u out of range at %d %d\\n"" , h -> sub_mb_type [ i ] , s -> mb_x , s -> mb_y )"	329:20:5966:6079	3353661	0	True				
ANR	3354759	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""P sub_mb_type %u out of range at %d %d\\n"" , h -> sub_mb_type [ i ] , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3354760	Callee	av_log		3353661	0					
ANR	3354761	Identifier	av_log		3353661	0					
ANR	3354762	ArgumentList	h -> s . avctx		3353661	1					
ANR	3354763	Argument	h -> s . avctx		3353661	0					
ANR	3354764	MemberAccess	h -> s . avctx		3353661	0					
ANR	3354765	PtrMemberAccess	h -> s		3353661	0					
ANR	3354766	Identifier	h		3353661	0					
ANR	3354767	Identifier	s		3353661	1					
ANR	3354768	Identifier	avctx		3353661	1					
ANR	3354769	Argument	AV_LOG_ERROR		3353661	1					
ANR	3354770	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3354771	Argument	"""P sub_mb_type %u out of range at %d %d\\n"""		3353661	2					
ANR	3354772	PrimaryExpression	"""P sub_mb_type %u out of range at %d %d\\n"""		3353661	0					
ANR	3354773	Argument	h -> sub_mb_type [ i ]		3353661	3					
ANR	3354774	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354775	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354776	Identifier	h		3353661	0					
ANR	3354777	Identifier	sub_mb_type		3353661	1					
ANR	3354778	Identifier	i		3353661	1					
ANR	3354779	Argument	s -> mb_x		3353661	4					
ANR	3354780	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3354781	Identifier	s		3353661	0					
ANR	3354782	Identifier	mb_x		3353661	1					
ANR	3354783	Argument	s -> mb_y		3353661	5					
ANR	3354784	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3354785	Identifier	s		3353661	0					
ANR	3354786	Identifier	mb_y		3353661	1					
ANR	3354787	ReturnStatement	return - 1 ;	331:20:6102:6111	3353661	1	True				
ANR	3354788	UnaryOperationExpression	- 1		3353661	0					
ANR	3354789	UnaryOperator	-		3353661	0					
ANR	3354790	PrimaryExpression	1		3353661	1					
ANR	3354791	ExpressionStatement	sub_partition_count [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count	335:16:6149:6228	3353661	2	True				
ANR	3354792	AssignmentExpression	sub_partition_count [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661	0		=			
ANR	3354793	ArrayIndexing	sub_partition_count [ i ]		3353661	0					
ANR	3354794	Identifier	sub_partition_count		3353661	0					
ANR	3354795	Identifier	i		3353661	1					
ANR	3354796	MemberAccess	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661	1					
ANR	3354797	ArrayIndexing	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3353661	0					
ANR	3354798	Identifier	p_sub_mb_type_info		3353661	0					
ANR	3354799	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354800	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354801	Identifier	h		3353661	0					
ANR	3354802	Identifier	sub_mb_type		3353661	1					
ANR	3354803	Identifier	i		3353661	1					
ANR	3354804	Identifier	partition_count		3353661	1					
ANR	3354805	ExpressionStatement	h -> sub_mb_type [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type	337:16:6247:6315	3353661	3	True				
ANR	3354806	AssignmentExpression	h -> sub_mb_type [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661	0		=			
ANR	3354807	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354808	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354809	Identifier	h		3353661	0					
ANR	3354810	Identifier	sub_mb_type		3353661	1					
ANR	3354811	Identifier	i		3353661	1					
ANR	3354812	MemberAccess	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661	1					
ANR	3354813	ArrayIndexing	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3353661	0					
ANR	3354814	Identifier	p_sub_mb_type_info		3353661	0					
ANR	3354815	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354816	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354817	Identifier	h		3353661	0					
ANR	3354818	Identifier	sub_mb_type		3353661	1					
ANR	3354819	Identifier	i		3353661	1					
ANR	3354820	Identifier	type		3353661	1					
ANR	3354821	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	3					
ANR	3354822	ForInit	list = 0 ;	345:12:6358:6364	3353661	0	True				
ANR	3354823	AssignmentExpression	list = 0		3353661	0		=			
ANR	3354824	Identifier	list		3353661	0					
ANR	3354825	PrimaryExpression	0		3353661	1					
ANR	3354826	Condition	list < h -> list_count	345:20:6366:6383	3353661	1	True				
ANR	3354827	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3354828	Identifier	list		3353661	0					
ANR	3354829	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3354830	Identifier	h		3353661	0					
ANR	3354831	Identifier	list_count		3353661	1					
ANR	3354832	PostIncDecOperationExpression	list ++	345:40:6386:6391	3353661	2	True				
ANR	3354833	Identifier	list		3353661	0					
ANR	3354834	IncDec	++		3353661	1					
ANR	3354835	CompoundStatement		347:12:6364:6420	3353661	3					
ANR	3354836	IdentifierDeclStatement	int ref_count = IS_REF0 ( mb_type ) ? 1 : h -> ref_count [ list ] ;	347:12:6408:6464	3353661	0	True				
ANR	3354837	IdentifierDecl	ref_count = IS_REF0 ( mb_type ) ? 1 : h -> ref_count [ list ]		3353661	0					
ANR	3354838	IdentifierDeclType	int		3353661	0					
ANR	3354839	Identifier	ref_count		3353661	1					
ANR	3354840	AssignmentExpression	ref_count = IS_REF0 ( mb_type ) ? 1 : h -> ref_count [ list ]		3353661	2		=			
ANR	3354841	Identifier	ref_count		3353661	0					
ANR	3354842	ConditionalExpression	IS_REF0 ( mb_type ) ? 1 : h -> ref_count [ list ]		3353661	1					
ANR	3354843	Condition	IS_REF0 ( mb_type )		3353661	0					
ANR	3354844	CallExpression	IS_REF0 ( mb_type )		3353661	0					
ANR	3354845	Callee	IS_REF0		3353661	0					
ANR	3354846	Identifier	IS_REF0		3353661	0					
ANR	3354847	ArgumentList	mb_type		3353661	1					
ANR	3354848	Argument	mb_type		3353661	0					
ANR	3354849	Identifier	mb_type		3353661	0					
ANR	3354850	PrimaryExpression	1		3353661	1					
ANR	3354851	ArrayIndexing	h -> ref_count [ list ]		3353661	2					
ANR	3354852	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3354853	Identifier	h		3353661	0					
ANR	3354854	Identifier	ref_count		3353661	1					
ANR	3354855	Identifier	list		3353661	1					
ANR	3354856	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3353661	1					
ANR	3354857	ForInit	i = 0 ;	349:16:6483:6486	3353661	0	True				
ANR	3354858	AssignmentExpression	i = 0		3353661	0		=			
ANR	3354859	Identifier	i		3353661	0					
ANR	3354860	PrimaryExpression	0		3353661	1					
ANR	3354861	Condition	i < 4	349:21:6488:6490	3353661	1	True				
ANR	3354862	RelationalExpression	i < 4		3353661	0		<			
ANR	3354863	Identifier	i		3353661	0					
ANR	3354864	PrimaryExpression	4		3353661	1					
ANR	3354865	PostIncDecOperationExpression	i ++	349:26:6493:6495	3353661	2	True				
ANR	3354866	Identifier	i		3353661	0					
ANR	3354867	IncDec	++		3353661	1					
ANR	3354868	CompoundStatement		349:30:6453:6453	3353661	3					
ANR	3354869	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ i ] ) )		3353661	0					
ANR	3354870	Condition	IS_DIRECT ( h -> sub_mb_type [ i ] )	351:19:6519:6546	3353661	0	True				
ANR	3354871	CallExpression	IS_DIRECT ( h -> sub_mb_type [ i ] )		3353661	0					
ANR	3354872	Callee	IS_DIRECT		3353661	0					
ANR	3354873	Identifier	IS_DIRECT		3353661	0					
ANR	3354874	ArgumentList	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354875	Argument	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354876	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354877	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354878	Identifier	h		3353661	0					
ANR	3354879	Identifier	sub_mb_type		3353661	1					
ANR	3354880	Identifier	i		3353661	1					
ANR	3354881	ContinueStatement	continue ;	351:49:6549:6557	3353661	1	True				
ANR	3354882	IfStatement	"if ( IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) )"		3353661	1					
ANR	3354883	Condition	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"	353:19:6579:6612	3353661	0	True				
ANR	3354884	CallExpression	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"		3353661	0					
ANR	3354885	Callee	IS_DIR		3353661	0					
ANR	3354886	Identifier	IS_DIR		3353661	0					
ANR	3354887	ArgumentList	h -> sub_mb_type [ i ]		3353661	1					
ANR	3354888	Argument	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354889	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3354890	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3354891	Identifier	h		3353661	0					
ANR	3354892	Identifier	sub_mb_type		3353661	1					
ANR	3354893	Identifier	i		3353661	1					
ANR	3354894	Argument	0		3353661	1					
ANR	3354895	PrimaryExpression	0		3353661	0					
ANR	3354896	Argument	list		3353661	2					
ANR	3354897	Identifier	list		3353661	0					
ANR	3354898	CompoundStatement		355:20:6593:6609	3353661	1					
ANR	3354899	IdentifierDeclStatement	unsigned int tmp ;	355:20:6637:6653	3353661	0	True				
ANR	3354900	IdentifierDecl	tmp		3353661	0					
ANR	3354901	IdentifierDeclType	unsigned int		3353661	0					
ANR	3354902	Identifier	tmp		3353661	1					
ANR	3354903	IfStatement	if ( ref_count == 1 )		3353661	1					
ANR	3354904	Condition	ref_count == 1	357:23:6679:6692	3353661	0	True				
ANR	3354905	EqualityExpression	ref_count == 1		3353661	0		==			
ANR	3354906	Identifier	ref_count		3353661	0					
ANR	3354907	PrimaryExpression	1		3353661	1					
ANR	3354908	CompoundStatement		357:38:6650:6650	3353661	1					
ANR	3354909	ExpressionStatement	tmp = 0	359:24:6721:6727	3353661	0	True				
ANR	3354910	AssignmentExpression	tmp = 0		3353661	0		=			
ANR	3354911	Identifier	tmp		3353661	0					
ANR	3354912	PrimaryExpression	0		3353661	1					
ANR	3354913	ElseStatement	else		3353661	0					
ANR	3354914	IfStatement	if ( ref_count == 2 )		3353661	0					
ANR	3354915	Condition	ref_count == 2	361:29:6759:6772	3353661	0	True				
ANR	3354916	EqualityExpression	ref_count == 2		3353661	0		==			
ANR	3354917	Identifier	ref_count		3353661	0					
ANR	3354918	PrimaryExpression	2		3353661	1					
ANR	3354919	CompoundStatement		361:44:6730:6730	3353661	1					
ANR	3354920	ExpressionStatement	tmp = get_bits1 ( & s -> gb ) ^ 1	363:24:6801:6825	3353661	0	True				
ANR	3354921	AssignmentExpression	tmp = get_bits1 ( & s -> gb ) ^ 1		3353661	0		=			
ANR	3354922	Identifier	tmp		3353661	0					
ANR	3354923	ExclusiveOrExpression	get_bits1 ( & s -> gb ) ^ 1		3353661	1		^			
ANR	3354924	CallExpression	get_bits1 ( & s -> gb )		3353661	0					
ANR	3354925	Callee	get_bits1		3353661	0					
ANR	3354926	Identifier	get_bits1		3353661	0					
ANR	3354927	ArgumentList	& s -> gb		3353661	1					
ANR	3354928	Argument	& s -> gb		3353661	0					
ANR	3354929	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354930	UnaryOperator	&		3353661	0					
ANR	3354931	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354932	Identifier	s		3353661	0					
ANR	3354933	Identifier	gb		3353661	1					
ANR	3354934	PrimaryExpression	1		3353661	1					
ANR	3354935	ElseStatement	else		3353661	0					
ANR	3354936	CompoundStatement		365:25:6809:6809	3353661	0					
ANR	3354937	ExpressionStatement	tmp = get_ue_golomb_31 ( & s -> gb )	367:24:6880:6909	3353661	0	True				
ANR	3354938	AssignmentExpression	tmp = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3354939	Identifier	tmp		3353661	0					
ANR	3354940	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3354941	Callee	get_ue_golomb_31		3353661	0					
ANR	3354942	Identifier	get_ue_golomb_31		3353661	0					
ANR	3354943	ArgumentList	& s -> gb		3353661	1					
ANR	3354944	Argument	& s -> gb		3353661	0					
ANR	3354945	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3354946	UnaryOperator	&		3353661	0					
ANR	3354947	PtrMemberAccess	s -> gb		3353661	1					
ANR	3354948	Identifier	s		3353661	0					
ANR	3354949	Identifier	gb		3353661	1					
ANR	3354950	IfStatement	if ( tmp >= ref_count )		3353661	1					
ANR	3354951	Condition	tmp >= ref_count	369:27:6939:6952	3353661	0	True				
ANR	3354952	RelationalExpression	tmp >= ref_count		3353661	0		>=			
ANR	3354953	Identifier	tmp		3353661	0					
ANR	3354954	Identifier	ref_count		3353661	1					
ANR	3354955	CompoundStatement		369:42:6910:6910	3353661	1					
ANR	3354956	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , tmp )"	371:28:6985:7043	3353661	0	True				
ANR	3354957	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , tmp )"		3353661	0					
ANR	3354958	Callee	av_log		3353661	0					
ANR	3354959	Identifier	av_log		3353661	0					
ANR	3354960	ArgumentList	h -> s . avctx		3353661	1					
ANR	3354961	Argument	h -> s . avctx		3353661	0					
ANR	3354962	MemberAccess	h -> s . avctx		3353661	0					
ANR	3354963	PtrMemberAccess	h -> s		3353661	0					
ANR	3354964	Identifier	h		3353661	0					
ANR	3354965	Identifier	s		3353661	1					
ANR	3354966	Identifier	avctx		3353661	1					
ANR	3354967	Argument	AV_LOG_ERROR		3353661	1					
ANR	3354968	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3354969	Argument	"""ref %u overflow\\n"""		3353661	2					
ANR	3354970	PrimaryExpression	"""ref %u overflow\\n"""		3353661	0					
ANR	3354971	Argument	tmp		3353661	3					
ANR	3354972	Identifier	tmp		3353661	0					
ANR	3354973	ReturnStatement	return - 1 ;	373:28:7074:7083	3353661	1	True				
ANR	3354974	UnaryOperationExpression	- 1		3353661	0					
ANR	3354975	UnaryOperator	-		3353661	0					
ANR	3354976	PrimaryExpression	1		3353661	1					
ANR	3354977	ExpressionStatement	ref [ list ] [ i ] = tmp	379:20:7156:7173	3353661	2	True				
ANR	3354978	AssignmentExpression	ref [ list ] [ i ] = tmp		3353661	0		=			
ANR	3354979	ArrayIndexing	ref [ list ] [ i ]		3353661	0					
ANR	3354980	ArrayIndexing	ref [ list ]		3353661	0					
ANR	3354981	Identifier	ref		3353661	0					
ANR	3354982	Identifier	list		3353661	1					
ANR	3354983	Identifier	i		3353661	1					
ANR	3354984	Identifier	tmp		3353661	1					
ANR	3354985	ElseStatement	else		3353661	0					
ANR	3354986	CompoundStatement		381:21:7153:7153	3353661	0					
ANR	3354987	ExpressionStatement	ref [ list ] [ i ] = - 1	385:20:7246:7263	3353661	0	True				
ANR	3354988	AssignmentExpression	ref [ list ] [ i ] = - 1		3353661	0		=			
ANR	3354989	ArrayIndexing	ref [ list ] [ i ]		3353661	0					
ANR	3354990	ArrayIndexing	ref [ list ]		3353661	0					
ANR	3354991	Identifier	ref		3353661	0					
ANR	3354992	Identifier	list		3353661	1					
ANR	3354993	Identifier	i		3353661	1					
ANR	3354994	UnaryOperationExpression	- 1		3353661	1					
ANR	3354995	UnaryOperator	-		3353661	0					
ANR	3354996	PrimaryExpression	1		3353661	1					
ANR	3354997	IfStatement	if ( dct8x8_allowed )		3353661	4					
ANR	3354998	Condition	dct8x8_allowed	395:11:7324:7337	3353661	0	True				
ANR	3354999	Identifier	dct8x8_allowed		3353661	0					
ANR	3355000	ExpressionStatement	dct8x8_allowed = get_dct8x8_allowed ( h )	397:12:7353:7391	3353661	1	True				
ANR	3355001	AssignmentExpression	dct8x8_allowed = get_dct8x8_allowed ( h )		3353661	0		=			
ANR	3355002	Identifier	dct8x8_allowed		3353661	0					
ANR	3355003	CallExpression	get_dct8x8_allowed ( h )		3353661	1					
ANR	3355004	Callee	get_dct8x8_allowed		3353661	0					
ANR	3355005	Identifier	get_dct8x8_allowed		3353661	0					
ANR	3355006	ArgumentList	h		3353661	1					
ANR	3355007	Argument	h		3353661	0					
ANR	3355008	Identifier	h		3353661	0					
ANR	3355009	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	5					
ANR	3355010	ForInit	list = 0 ;	401:12:7408:7414	3353661	0	True				
ANR	3355011	AssignmentExpression	list = 0		3353661	0		=			
ANR	3355012	Identifier	list		3353661	0					
ANR	3355013	PrimaryExpression	0		3353661	1					
ANR	3355014	Condition	list < h -> list_count	401:20:7416:7433	3353661	1	True				
ANR	3355015	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3355016	Identifier	list		3353661	0					
ANR	3355017	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3355018	Identifier	h		3353661	0					
ANR	3355019	Identifier	list_count		3353661	1					
ANR	3355020	PostIncDecOperationExpression	list ++	401:40:7436:7441	3353661	2	True				
ANR	3355021	Identifier	list		3353661	0					
ANR	3355022	IncDec	++		3353661	1					
ANR	3355023	CompoundStatement		401:47:7399:7399	3353661	3					
ANR	3355024	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3353661	0					
ANR	3355025	ForInit	i = 0 ;	403:16:7462:7465	3353661	0	True				
ANR	3355026	AssignmentExpression	i = 0		3353661	0		=			
ANR	3355027	Identifier	i		3353661	0					
ANR	3355028	PrimaryExpression	0		3353661	1					
ANR	3355029	Condition	i < 4	403:21:7467:7469	3353661	1	True				
ANR	3355030	RelationalExpression	i < 4		3353661	0		<			
ANR	3355031	Identifier	i		3353661	0					
ANR	3355032	PrimaryExpression	4		3353661	1					
ANR	3355033	PostIncDecOperationExpression	i ++	403:26:7472:7474	3353661	2	True				
ANR	3355034	Identifier	i		3353661	0					
ANR	3355035	IncDec	++		3353661	1					
ANR	3355036	CompoundStatement		403:30:7432:7432	3353661	3					
ANR	3355037	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ i ] ) )		3353661	0					
ANR	3355038	Condition	IS_DIRECT ( h -> sub_mb_type [ i ] )	405:19:7498:7525	3353661	0	True				
ANR	3355039	CallExpression	IS_DIRECT ( h -> sub_mb_type [ i ] )		3353661	0					
ANR	3355040	Callee	IS_DIRECT		3353661	0					
ANR	3355041	Identifier	IS_DIRECT		3353661	0					
ANR	3355042	ArgumentList	h -> sub_mb_type [ i ]		3353661	1					
ANR	3355043	Argument	h -> sub_mb_type [ i ]		3353661	0					
ANR	3355044	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3355045	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3355046	Identifier	h		3353661	0					
ANR	3355047	Identifier	sub_mb_type		3353661	1					
ANR	3355048	Identifier	i		3353661	1					
ANR	3355049	CompoundStatement		405:49:7484:7484	3353661	1					
ANR	3355050	ExpressionStatement	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]	407:20:7551:7620	3353661	0	True				
ANR	3355051	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3353661	0		=			
ANR	3355052	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ]		3353661	0					
ANR	3355053	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355054	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355055	Identifier	h		3353661	0					
ANR	3355056	Identifier	ref_cache		3353661	1					
ANR	3355057	Identifier	list		3353661	1					
ANR	3355058	ArrayIndexing	scan8 [ 4 * i ]		3353661	1					
ANR	3355059	Identifier	scan8		3353661	0					
ANR	3355060	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355061	PrimaryExpression	4		3353661	0					
ANR	3355062	Identifier	i		3353661	1					
ANR	3355063	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3353661	1					
ANR	3355064	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355065	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355066	Identifier	h		3353661	0					
ANR	3355067	Identifier	ref_cache		3353661	1					
ANR	3355068	Identifier	list		3353661	1					
ANR	3355069	AdditiveExpression	scan8 [ 4 * i ] + 1		3353661	1		+			
ANR	3355070	ArrayIndexing	scan8 [ 4 * i ]		3353661	0					
ANR	3355071	Identifier	scan8		3353661	0					
ANR	3355072	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355073	PrimaryExpression	4		3353661	0					
ANR	3355074	Identifier	i		3353661	1					
ANR	3355075	PrimaryExpression	1		3353661	1					
ANR	3355076	ContinueStatement	continue ;	409:20:7643:7651	3353661	1	True				
ANR	3355077	ExpressionStatement	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]	413:16:7689:7860	3353661	1	True				
ANR	3355078	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3353661	0		=			
ANR	3355079	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ]		3353661	0					
ANR	3355080	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355081	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355082	Identifier	h		3353661	0					
ANR	3355083	Identifier	ref_cache		3353661	1					
ANR	3355084	Identifier	list		3353661	1					
ANR	3355085	ArrayIndexing	scan8 [ 4 * i ]		3353661	1					
ANR	3355086	Identifier	scan8		3353661	0					
ANR	3355087	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355088	PrimaryExpression	4		3353661	0					
ANR	3355089	Identifier	i		3353661	1					
ANR	3355090	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3353661	1		=			
ANR	3355091	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3353661	0					
ANR	3355092	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355093	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355094	Identifier	h		3353661	0					
ANR	3355095	Identifier	ref_cache		3353661	1					
ANR	3355096	Identifier	list		3353661	1					
ANR	3355097	AdditiveExpression	scan8 [ 4 * i ] + 1		3353661	1		+			
ANR	3355098	ArrayIndexing	scan8 [ 4 * i ]		3353661	0					
ANR	3355099	Identifier	scan8		3353661	0					
ANR	3355100	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355101	PrimaryExpression	4		3353661	0					
ANR	3355102	Identifier	i		3353661	1					
ANR	3355103	PrimaryExpression	1		3353661	1					
ANR	3355104	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3353661	1		=			
ANR	3355105	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ]		3353661	0					
ANR	3355106	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355107	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355108	Identifier	h		3353661	0					
ANR	3355109	Identifier	ref_cache		3353661	1					
ANR	3355110	Identifier	list		3353661	1					
ANR	3355111	AdditiveExpression	scan8 [ 4 * i ] + 8		3353661	1		+			
ANR	3355112	ArrayIndexing	scan8 [ 4 * i ]		3353661	0					
ANR	3355113	Identifier	scan8		3353661	0					
ANR	3355114	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355115	PrimaryExpression	4		3353661	0					
ANR	3355116	Identifier	i		3353661	1					
ANR	3355117	PrimaryExpression	8		3353661	1					
ANR	3355118	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3353661	1		=			
ANR	3355119	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ]		3353661	0					
ANR	3355120	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355121	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355122	Identifier	h		3353661	0					
ANR	3355123	Identifier	ref_cache		3353661	1					
ANR	3355124	Identifier	list		3353661	1					
ANR	3355125	AdditiveExpression	scan8 [ 4 * i ] + 9		3353661	1		+			
ANR	3355126	ArrayIndexing	scan8 [ 4 * i ]		3353661	0					
ANR	3355127	Identifier	scan8		3353661	0					
ANR	3355128	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355129	PrimaryExpression	4		3353661	0					
ANR	3355130	Identifier	i		3353661	1					
ANR	3355131	PrimaryExpression	9		3353661	1					
ANR	3355132	ArrayIndexing	ref [ list ] [ i ]		3353661	1					
ANR	3355133	ArrayIndexing	ref [ list ]		3353661	0					
ANR	3355134	Identifier	ref		3353661	0					
ANR	3355135	Identifier	list		3353661	1					
ANR	3355136	Identifier	i		3353661	1					
ANR	3355137	IfStatement	"if ( IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) )"		3353661	2					
ANR	3355138	Condition	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"	419:19:7884:7917	3353661	0	True				
ANR	3355139	CallExpression	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"		3353661	0					
ANR	3355140	Callee	IS_DIR		3353661	0					
ANR	3355141	Identifier	IS_DIR		3353661	0					
ANR	3355142	ArgumentList	h -> sub_mb_type [ i ]		3353661	1					
ANR	3355143	Argument	h -> sub_mb_type [ i ]		3353661	0					
ANR	3355144	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	0					
ANR	3355145	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3355146	Identifier	h		3353661	0					
ANR	3355147	Identifier	sub_mb_type		3353661	1					
ANR	3355148	Identifier	i		3353661	1					
ANR	3355149	Argument	0		3353661	1					
ANR	3355150	PrimaryExpression	0		3353661	0					
ANR	3355151	Argument	list		3353661	2					
ANR	3355152	Identifier	list		3353661	0					
ANR	3355153	CompoundStatement		423:20:7961:8036	3353661	1					
ANR	3355154	IdentifierDeclStatement	const int sub_mb_type = h -> sub_mb_type [ i ] ;	421:20:7942:7982	3353661	0	True				
ANR	3355155	IdentifierDecl	sub_mb_type = h -> sub_mb_type [ i ]		3353661	0					
ANR	3355156	IdentifierDeclType	const int		3353661	0					
ANR	3355157	Identifier	sub_mb_type		3353661	1					
ANR	3355158	AssignmentExpression	sub_mb_type = h -> sub_mb_type [ i ]		3353661	2		=			
ANR	3355159	Identifier	sub_mb_type		3353661	0					
ANR	3355160	ArrayIndexing	h -> sub_mb_type [ i ]		3353661	1					
ANR	3355161	PtrMemberAccess	h -> sub_mb_type		3353661	0					
ANR	3355162	Identifier	h		3353661	0					
ANR	3355163	Identifier	sub_mb_type		3353661	1					
ANR	3355164	Identifier	i		3353661	1					
ANR	3355165	IdentifierDeclStatement	const int block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1 ;	423:20:8005:8080	3353661	1	True				
ANR	3355166	IdentifierDecl	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3353661	0					
ANR	3355167	IdentifierDeclType	const int		3353661	0					
ANR	3355168	Identifier	block_width		3353661	1					
ANR	3355169	AssignmentExpression	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3353661	2		=			
ANR	3355170	Identifier	block_width		3353661	0					
ANR	3355171	ConditionalExpression	( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3353661	1					
ANR	3355172	Condition	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3353661	0					
ANR	3355173	BitAndExpression	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3353661	0		&			
ANR	3355174	Identifier	sub_mb_type		3353661	0					
ANR	3355175	InclusiveOrExpression	MB_TYPE_16x16 | MB_TYPE_16x8		3353661	1		|			
ANR	3355176	Identifier	MB_TYPE_16x16		3353661	0					
ANR	3355177	Identifier	MB_TYPE_16x8		3353661	1					
ANR	3355178	PrimaryExpression	2		3353661	1					
ANR	3355179	PrimaryExpression	1		3353661	2					
ANR	3355180	ForStatement	for ( j = 0 ; j < sub_partition_count [ i ] ; j ++ )		3353661	2					
ANR	3355181	ForInit	j = 0 ;	425:24:8107:8110	3353661	0	True				
ANR	3355182	AssignmentExpression	j = 0		3353661	0		=			
ANR	3355183	Identifier	j		3353661	0					
ANR	3355184	PrimaryExpression	0		3353661	1					
ANR	3355185	Condition	j < sub_partition_count [ i ]	425:29:8112:8135	3353661	1	True				
ANR	3355186	RelationalExpression	j < sub_partition_count [ i ]		3353661	0		<			
ANR	3355187	Identifier	j		3353661	0					
ANR	3355188	ArrayIndexing	sub_partition_count [ i ]		3353661	1					
ANR	3355189	Identifier	sub_partition_count		3353661	0					
ANR	3355190	Identifier	i		3353661	1					
ANR	3355191	PostIncDecOperationExpression	j ++	425:55:8138:8140	3353661	2	True				
ANR	3355192	Identifier	j		3353661	0					
ANR	3355193	IncDec	++		3353661	1					
ANR	3355194	CompoundStatement		431:24:8225:8284	3353661	3					
ANR	3355195	IdentifierDeclStatement	"int mx , my ;"	427:24:8169:8179	3353661	0	True				
ANR	3355196	IdentifierDecl	mx		3353661	0					
ANR	3355197	IdentifierDeclType	int		3353661	0					
ANR	3355198	Identifier	mx		3353661	1					
ANR	3355199	IdentifierDecl	my		3353661	1					
ANR	3355200	IdentifierDeclType	int		3353661	0					
ANR	3355201	Identifier	my		3353661	1					
ANR	3355202	IdentifierDeclStatement	const int index = 4 * i + block_width * j ;	429:24:8206:8242	3353661	1	True				
ANR	3355203	IdentifierDecl	index = 4 * i + block_width * j		3353661	0					
ANR	3355204	IdentifierDeclType	const int		3353661	0					
ANR	3355205	Identifier	index		3353661	1					
ANR	3355206	AssignmentExpression	index = 4 * i + block_width * j		3353661	2		=			
ANR	3355207	Identifier	index		3353661	0					
ANR	3355208	AdditiveExpression	4 * i + block_width * j		3353661	1		+			
ANR	3355209	MultiplicativeExpression	4 * i		3353661	0		*			
ANR	3355210	PrimaryExpression	4		3353661	0					
ANR	3355211	Identifier	i		3353661	1					
ANR	3355212	MultiplicativeExpression	block_width * j		3353661	1		*			
ANR	3355213	Identifier	block_width		3353661	0					
ANR	3355214	Identifier	j		3353661	1					
ANR	3355215	IdentifierDeclStatement	int16_t ( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ] ;	431:24:8269:8328	3353661	2	True				
ANR	3355216	IdentifierDecl	( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ]		3353661	0					
ANR	3355217	IdentifierDeclType	int16_t ( * ) [ 2 ]		3353661	0					
ANR	3355218	Identifier	mv_cache		3353661	1					
ANR	3355219	PrimaryExpression	2		3353661	2					
ANR	3355220	AssignmentExpression	( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ]		3353661	3		=			
ANR	3355221	Identifier	mv_cache		3353661	0					
ANR	3355222	UnaryOperationExpression	& h -> mv_cache [ list ] [ scan8 [ index ] ]		3353661	1					
ANR	3355223	UnaryOperator	&		3353661	0					
ANR	3355224	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ index ] ]		3353661	1					
ANR	3355225	ArrayIndexing	h -> mv_cache [ list ]		3353661	0					
ANR	3355226	PtrMemberAccess	h -> mv_cache		3353661	0					
ANR	3355227	Identifier	h		3353661	0					
ANR	3355228	Identifier	mv_cache		3353661	1					
ANR	3355229	Identifier	list		3353661	1					
ANR	3355230	ArrayIndexing	scan8 [ index ]		3353661	1					
ANR	3355231	Identifier	scan8		3353661	0					
ANR	3355232	Identifier	index		3353661	1					
ANR	3355233	ExpressionStatement	"pred_motion ( h , index , block_width , list , h -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"	433:24:8355:8441	3353661	3	True				
ANR	3355234	CallExpression	"pred_motion ( h , index , block_width , list , h -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"		3353661	0					
ANR	3355235	Callee	pred_motion		3353661	0					
ANR	3355236	Identifier	pred_motion		3353661	0					
ANR	3355237	ArgumentList	h		3353661	1					
ANR	3355238	Argument	h		3353661	0					
ANR	3355239	Identifier	h		3353661	0					
ANR	3355240	Argument	index		3353661	1					
ANR	3355241	Identifier	index		3353661	0					
ANR	3355242	Argument	block_width		3353661	2					
ANR	3355243	Identifier	block_width		3353661	0					
ANR	3355244	Argument	list		3353661	3					
ANR	3355245	Identifier	list		3353661	0					
ANR	3355246	Argument	h -> ref_cache [ list ] [ scan8 [ index ] ]		3353661	4					
ANR	3355247	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ index ] ]		3353661	0					
ANR	3355248	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355249	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355250	Identifier	h		3353661	0					
ANR	3355251	Identifier	ref_cache		3353661	1					
ANR	3355252	Identifier	list		3353661	1					
ANR	3355253	ArrayIndexing	scan8 [ index ]		3353661	1					
ANR	3355254	Identifier	scan8		3353661	0					
ANR	3355255	Identifier	index		3353661	1					
ANR	3355256	Argument	& mx		3353661	5					
ANR	3355257	UnaryOperationExpression	& mx		3353661	0					
ANR	3355258	UnaryOperator	&		3353661	0					
ANR	3355259	Identifier	mx		3353661	1					
ANR	3355260	Argument	& my		3353661	6					
ANR	3355261	UnaryOperationExpression	& my		3353661	0					
ANR	3355262	UnaryOperator	&		3353661	0					
ANR	3355263	Identifier	my		3353661	1					
ANR	3355264	ExpressionStatement	mx += get_se_golomb ( & s -> gb )	435:24:8468:8495	3353661	4	True				
ANR	3355265	AssignmentExpression	mx += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3355266	Identifier	mx		3353661	0					
ANR	3355267	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3355268	Callee	get_se_golomb		3353661	0					
ANR	3355269	Identifier	get_se_golomb		3353661	0					
ANR	3355270	ArgumentList	& s -> gb		3353661	1					
ANR	3355271	Argument	& s -> gb		3353661	0					
ANR	3355272	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355273	UnaryOperator	&		3353661	0					
ANR	3355274	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355275	Identifier	s		3353661	0					
ANR	3355276	Identifier	gb		3353661	1					
ANR	3355277	ExpressionStatement	my += get_se_golomb ( & s -> gb )	437:24:8522:8549	3353661	5	True				
ANR	3355278	AssignmentExpression	my += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3355279	Identifier	my		3353661	0					
ANR	3355280	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3355281	Callee	get_se_golomb		3353661	0					
ANR	3355282	Identifier	get_se_golomb		3353661	0					
ANR	3355283	ArgumentList	& s -> gb		3353661	1					
ANR	3355284	Argument	& s -> gb		3353661	0					
ANR	3355285	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355286	UnaryOperator	&		3353661	0					
ANR	3355287	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355288	Identifier	s		3353661	0					
ANR	3355289	Identifier	gb		3353661	1					
ANR	3355290	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	439:24:8576:8621	3353661	6	True				
ANR	3355291	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3353661	0					
ANR	3355292	Callee	tprintf		3353661	0					
ANR	3355293	Identifier	tprintf		3353661	0					
ANR	3355294	ArgumentList	s -> avctx		3353661	1					
ANR	3355295	Argument	s -> avctx		3353661	0					
ANR	3355296	PtrMemberAccess	s -> avctx		3353661	0					
ANR	3355297	Identifier	s		3353661	0					
ANR	3355298	Identifier	avctx		3353661	1					
ANR	3355299	Argument	"""final mv:%d %d\\n"""		3353661	1					
ANR	3355300	PrimaryExpression	"""final mv:%d %d\\n"""		3353661	0					
ANR	3355301	Argument	mx		3353661	2					
ANR	3355302	Identifier	mx		3353661	0					
ANR	3355303	Argument	my		3353661	3					
ANR	3355304	Identifier	my		3353661	0					
ANR	3355305	IfStatement	if ( IS_SUB_8X8 ( sub_mb_type ) )		3353661	7					
ANR	3355306	Condition	IS_SUB_8X8 ( sub_mb_type )	443:27:8653:8675	3353661	0	True				
ANR	3355307	CallExpression	IS_SUB_8X8 ( sub_mb_type )		3353661	0					
ANR	3355308	Callee	IS_SUB_8X8		3353661	0					
ANR	3355309	Identifier	IS_SUB_8X8		3353661	0					
ANR	3355310	ArgumentList	sub_mb_type		3353661	1					
ANR	3355311	Argument	sub_mb_type		3353661	0					
ANR	3355312	Identifier	sub_mb_type		3353661	0					
ANR	3355313	CompoundStatement		443:51:8633:8633	3353661	1					
ANR	3355314	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx	445:28:8708:8793	3353661	0	True				
ANR	3355315	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3353661	0		=			
ANR	3355316	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3353661	0					
ANR	3355317	ArrayIndexing	mv_cache [ 1 ]		3353661	0					
ANR	3355318	Identifier	mv_cache		3353661	0					
ANR	3355319	PrimaryExpression	1		3353661	1					
ANR	3355320	PrimaryExpression	0		3353661	1					
ANR	3355321	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3353661	1		=			
ANR	3355322	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3353661	0					
ANR	3355323	ArrayIndexing	mv_cache [ 8 ]		3353661	0					
ANR	3355324	Identifier	mv_cache		3353661	0					
ANR	3355325	PrimaryExpression	8		3353661	1					
ANR	3355326	PrimaryExpression	0		3353661	1					
ANR	3355327	AssignmentExpression	mv_cache [ 9 ] [ 0 ] = mx		3353661	1		=			
ANR	3355328	ArrayIndexing	mv_cache [ 9 ] [ 0 ]		3353661	0					
ANR	3355329	ArrayIndexing	mv_cache [ 9 ]		3353661	0					
ANR	3355330	Identifier	mv_cache		3353661	0					
ANR	3355331	PrimaryExpression	9		3353661	1					
ANR	3355332	PrimaryExpression	0		3353661	1					
ANR	3355333	Identifier	mx		3353661	1					
ANR	3355334	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my	449:28:8824:8909	3353661	1	True				
ANR	3355335	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3353661	0		=			
ANR	3355336	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3353661	0					
ANR	3355337	ArrayIndexing	mv_cache [ 1 ]		3353661	0					
ANR	3355338	Identifier	mv_cache		3353661	0					
ANR	3355339	PrimaryExpression	1		3353661	1					
ANR	3355340	PrimaryExpression	1		3353661	1					
ANR	3355341	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3353661	1		=			
ANR	3355342	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3353661	0					
ANR	3355343	ArrayIndexing	mv_cache [ 8 ]		3353661	0					
ANR	3355344	Identifier	mv_cache		3353661	0					
ANR	3355345	PrimaryExpression	8		3353661	1					
ANR	3355346	PrimaryExpression	1		3353661	1					
ANR	3355347	AssignmentExpression	mv_cache [ 9 ] [ 1 ] = my		3353661	1		=			
ANR	3355348	ArrayIndexing	mv_cache [ 9 ] [ 1 ]		3353661	0					
ANR	3355349	ArrayIndexing	mv_cache [ 9 ]		3353661	0					
ANR	3355350	Identifier	mv_cache		3353661	0					
ANR	3355351	PrimaryExpression	9		3353661	1					
ANR	3355352	PrimaryExpression	1		3353661	1					
ANR	3355353	Identifier	my		3353661	1					
ANR	3355354	ElseStatement	else		3353661	0					
ANR	3355355	IfStatement	if ( IS_SUB_8X4 ( sub_mb_type ) )		3353661	0					
ANR	3355356	Condition	IS_SUB_8X4 ( sub_mb_type )	453:33:8945:8967	3353661	0	True				
ANR	3355357	CallExpression	IS_SUB_8X4 ( sub_mb_type )		3353661	0					
ANR	3355358	Callee	IS_SUB_8X4		3353661	0					
ANR	3355359	Identifier	IS_SUB_8X4		3353661	0					
ANR	3355360	ArgumentList	sub_mb_type		3353661	1					
ANR	3355361	Argument	sub_mb_type		3353661	0					
ANR	3355362	Identifier	sub_mb_type		3353661	0					
ANR	3355363	CompoundStatement		453:57:8925:8925	3353661	1					
ANR	3355364	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mx	455:28:9000:9020	3353661	0	True				
ANR	3355365	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mx		3353661	0		=			
ANR	3355366	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3353661	0					
ANR	3355367	ArrayIndexing	mv_cache [ 1 ]		3353661	0					
ANR	3355368	Identifier	mv_cache		3353661	0					
ANR	3355369	PrimaryExpression	1		3353661	1					
ANR	3355370	PrimaryExpression	0		3353661	1					
ANR	3355371	Identifier	mx		3353661	1					
ANR	3355372	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = my	457:28:9051:9071	3353661	1	True				
ANR	3355373	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = my		3353661	0		=			
ANR	3355374	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3353661	0					
ANR	3355375	ArrayIndexing	mv_cache [ 1 ]		3353661	0					
ANR	3355376	Identifier	mv_cache		3353661	0					
ANR	3355377	PrimaryExpression	1		3353661	1					
ANR	3355378	PrimaryExpression	1		3353661	1					
ANR	3355379	Identifier	my		3353661	1					
ANR	3355380	ElseStatement	else		3353661	0					
ANR	3355381	IfStatement	if ( IS_SUB_4X8 ( sub_mb_type ) )		3353661	0					
ANR	3355382	Condition	IS_SUB_4X8 ( sub_mb_type )	459:33:9107:9129	3353661	0	True				
ANR	3355383	CallExpression	IS_SUB_4X8 ( sub_mb_type )		3353661	0					
ANR	3355384	Callee	IS_SUB_4X8		3353661	0					
ANR	3355385	Identifier	IS_SUB_4X8		3353661	0					
ANR	3355386	ArgumentList	sub_mb_type		3353661	1					
ANR	3355387	Argument	sub_mb_type		3353661	0					
ANR	3355388	Identifier	sub_mb_type		3353661	0					
ANR	3355389	CompoundStatement		459:57:9087:9087	3353661	1					
ANR	3355390	ExpressionStatement	mv_cache [ 8 ] [ 0 ] = mx	461:28:9162:9182	3353661	0	True				
ANR	3355391	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mx		3353661	0		=			
ANR	3355392	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3353661	0					
ANR	3355393	ArrayIndexing	mv_cache [ 8 ]		3353661	0					
ANR	3355394	Identifier	mv_cache		3353661	0					
ANR	3355395	PrimaryExpression	8		3353661	1					
ANR	3355396	PrimaryExpression	0		3353661	1					
ANR	3355397	Identifier	mx		3353661	1					
ANR	3355398	ExpressionStatement	mv_cache [ 8 ] [ 1 ] = my	463:28:9213:9233	3353661	1	True				
ANR	3355399	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = my		3353661	0		=			
ANR	3355400	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3353661	0					
ANR	3355401	ArrayIndexing	mv_cache [ 8 ]		3353661	0					
ANR	3355402	Identifier	mv_cache		3353661	0					
ANR	3355403	PrimaryExpression	8		3353661	1					
ANR	3355404	PrimaryExpression	1		3353661	1					
ANR	3355405	Identifier	my		3353661	1					
ANR	3355406	ExpressionStatement	mv_cache [ 0 ] [ 0 ] = mx	467:24:9287:9307	3353661	8	True				
ANR	3355407	AssignmentExpression	mv_cache [ 0 ] [ 0 ] = mx		3353661	0		=			
ANR	3355408	ArrayIndexing	mv_cache [ 0 ] [ 0 ]		3353661	0					
ANR	3355409	ArrayIndexing	mv_cache [ 0 ]		3353661	0					
ANR	3355410	Identifier	mv_cache		3353661	0					
ANR	3355411	PrimaryExpression	0		3353661	1					
ANR	3355412	PrimaryExpression	0		3353661	1					
ANR	3355413	Identifier	mx		3353661	1					
ANR	3355414	ExpressionStatement	mv_cache [ 0 ] [ 1 ] = my	469:24:9334:9354	3353661	9	True				
ANR	3355415	AssignmentExpression	mv_cache [ 0 ] [ 1 ] = my		3353661	0		=			
ANR	3355416	ArrayIndexing	mv_cache [ 0 ] [ 1 ]		3353661	0					
ANR	3355417	ArrayIndexing	mv_cache [ 0 ]		3353661	0					
ANR	3355418	Identifier	mv_cache		3353661	0					
ANR	3355419	PrimaryExpression	0		3353661	1					
ANR	3355420	PrimaryExpression	1		3353661	1					
ANR	3355421	Identifier	my		3353661	1					
ANR	3355422	ElseStatement	else		3353661	0					
ANR	3355423	CompoundStatement		475:20:9380:9440	3353661	0					
ANR	3355424	IdentifierDeclStatement	uint32_t * p = ( uint32_t * ) & h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ] ;	475:20:9424:9484	3353661	0	True				
ANR	3355425	IdentifierDecl	* p = ( uint32_t * ) & h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3353661	0					
ANR	3355426	IdentifierDeclType	uint32_t *		3353661	0					
ANR	3355427	Identifier	p		3353661	1					
ANR	3355428	AssignmentExpression	* p = ( uint32_t * ) & h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3353661	2		=			
ANR	3355429	Identifier	p		3353661	0					
ANR	3355430	CastExpression	( uint32_t * ) & h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3353661	1					
ANR	3355431	CastTarget	uint32_t *		3353661	0					
ANR	3355432	UnaryOperationExpression	& h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3353661	1					
ANR	3355433	UnaryOperator	&		3353661	0					
ANR	3355434	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3353661	1					
ANR	3355435	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 4 * i ] ]		3353661	0					
ANR	3355436	ArrayIndexing	h -> mv_cache [ list ]		3353661	0					
ANR	3355437	PtrMemberAccess	h -> mv_cache		3353661	0					
ANR	3355438	Identifier	h		3353661	0					
ANR	3355439	Identifier	mv_cache		3353661	1					
ANR	3355440	Identifier	list		3353661	1					
ANR	3355441	ArrayIndexing	scan8 [ 4 * i ]		3353661	1					
ANR	3355442	Identifier	scan8		3353661	0					
ANR	3355443	MultiplicativeExpression	4 * i		3353661	1		*			
ANR	3355444	PrimaryExpression	4		3353661	0					
ANR	3355445	Identifier	i		3353661	1					
ANR	3355446	PrimaryExpression	0		3353661	1					
ANR	3355447	ExpressionStatement	p [ 0 ] = p [ 1 ] = p [ 8 ] = p [ 9 ] = 0	477:20:9507:9555	3353661	1	True				
ANR	3355448	AssignmentExpression	p [ 0 ] = p [ 1 ] = p [ 8 ] = p [ 9 ] = 0		3353661	0		=			
ANR	3355449	ArrayIndexing	p [ 0 ]		3353661	0					
ANR	3355450	Identifier	p		3353661	0					
ANR	3355451	PrimaryExpression	0		3353661	1					
ANR	3355452	AssignmentExpression	p [ 1 ] = p [ 8 ] = p [ 9 ] = 0		3353661	1		=			
ANR	3355453	ArrayIndexing	p [ 1 ]		3353661	0					
ANR	3355454	Identifier	p		3353661	0					
ANR	3355455	PrimaryExpression	1		3353661	1					
ANR	3355456	AssignmentExpression	p [ 8 ] = p [ 9 ] = 0		3353661	1		=			
ANR	3355457	ArrayIndexing	p [ 8 ]		3353661	0					
ANR	3355458	Identifier	p		3353661	0					
ANR	3355459	PrimaryExpression	8		3353661	1					
ANR	3355460	AssignmentExpression	p [ 9 ] = 0		3353661	1		=			
ANR	3355461	ArrayIndexing	p [ 9 ]		3353661	0					
ANR	3355462	Identifier	p		3353661	0					
ANR	3355463	PrimaryExpression	9		3353661	1					
ANR	3355464	PrimaryExpression	0		3353661	1					
ANR	3355465	ElseStatement	else		3353661	0					
ANR	3355466	IfStatement	if ( IS_DIRECT ( mb_type ) )		3353661	0					
ANR	3355467	Condition	IS_DIRECT ( mb_type )	487:13:9616:9633	3353661	0	True				
ANR	3355468	CallExpression	IS_DIRECT ( mb_type )		3353661	0					
ANR	3355469	Callee	IS_DIRECT		3353661	0					
ANR	3355470	Identifier	IS_DIRECT		3353661	0					
ANR	3355471	ArgumentList	mb_type		3353661	1					
ANR	3355472	Argument	mb_type		3353661	0					
ANR	3355473	Identifier	mb_type		3353661	0					
ANR	3355474	CompoundStatement		487:32:9591:9591	3353661	1					
ANR	3355475	ExpressionStatement	"ff_h264_pred_direct_motion ( h , & mb_type )"	489:8:9646:9685	3353661	0	True				
ANR	3355476	CallExpression	"ff_h264_pred_direct_motion ( h , & mb_type )"		3353661	0					
ANR	3355477	Callee	ff_h264_pred_direct_motion		3353661	0					
ANR	3355478	Identifier	ff_h264_pred_direct_motion		3353661	0					
ANR	3355479	ArgumentList	h		3353661	1					
ANR	3355480	Argument	h		3353661	0					
ANR	3355481	Identifier	h		3353661	0					
ANR	3355482	Argument	& mb_type		3353661	1					
ANR	3355483	UnaryOperationExpression	& mb_type		3353661	0					
ANR	3355484	UnaryOperator	&		3353661	0					
ANR	3355485	Identifier	mb_type		3353661	1					
ANR	3355486	ExpressionStatement	dct8x8_allowed &= h -> sps . direct_8x8_inference_flag	491:8:9696:9746	3353661	1	True				
ANR	3355487	AssignmentExpression	dct8x8_allowed &= h -> sps . direct_8x8_inference_flag		3353661	0		&=			
ANR	3355488	Identifier	dct8x8_allowed		3353661	0					
ANR	3355489	MemberAccess	h -> sps . direct_8x8_inference_flag		3353661	1					
ANR	3355490	PtrMemberAccess	h -> sps		3353661	0					
ANR	3355491	Identifier	h		3353661	0					
ANR	3355492	Identifier	sps		3353661	1					
ANR	3355493	Identifier	direct_8x8_inference_flag		3353661	1					
ANR	3355494	ElseStatement	else		3353661	0					
ANR	3355495	CompoundStatement		495:8:9725:9744	3353661	0					
ANR	3355496	IdentifierDeclStatement	"int list , mx , my , i ;"	495:8:9769:9788	3353661	0	True				
ANR	3355497	IdentifierDecl	list		3353661	0					
ANR	3355498	IdentifierDeclType	int		3353661	0					
ANR	3355499	Identifier	list		3353661	1					
ANR	3355500	IdentifierDecl	mx		3353661	1					
ANR	3355501	IdentifierDeclType	int		3353661	0					
ANR	3355502	Identifier	mx		3353661	1					
ANR	3355503	IdentifierDecl	my		3353661	2					
ANR	3355504	IdentifierDeclType	int		3353661	0					
ANR	3355505	Identifier	my		3353661	1					
ANR	3355506	IdentifierDecl	i		3353661	3					
ANR	3355507	IdentifierDeclType	int		3353661	0					
ANR	3355508	Identifier	i		3353661	1					
ANR	3355509	IfStatement	if ( IS_16X16 ( mb_type ) )		3353661	1					
ANR	3355510	Condition	IS_16X16 ( mb_type )	499:11:9875:9891	3353661	0	True				
ANR	3355511	CallExpression	IS_16X16 ( mb_type )		3353661	0					
ANR	3355512	Callee	IS_16X16		3353661	0					
ANR	3355513	Identifier	IS_16X16		3353661	0					
ANR	3355514	ArgumentList	mb_type		3353661	1					
ANR	3355515	Argument	mb_type		3353661	0					
ANR	3355516	Identifier	mb_type		3353661	0					
ANR	3355517	CompoundStatement		499:29:9849:9849	3353661	1					
ANR	3355518	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	0					
ANR	3355519	ForInit	list = 0 ;	501:16:9912:9918	3353661	0	True				
ANR	3355520	AssignmentExpression	list = 0		3353661	0		=			
ANR	3355521	Identifier	list		3353661	0					
ANR	3355522	PrimaryExpression	0		3353661	1					
ANR	3355523	Condition	list < h -> list_count	501:24:9920:9937	3353661	1	True				
ANR	3355524	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3355525	Identifier	list		3353661	0					
ANR	3355526	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3355527	Identifier	h		3353661	0					
ANR	3355528	Identifier	list_count		3353661	1					
ANR	3355529	PostIncDecOperationExpression	list ++	501:44:9940:9945	3353661	2	True				
ANR	3355530	Identifier	list		3353661	0					
ANR	3355531	IncDec	++		3353661	1					
ANR	3355532	CompoundStatement		503:20:9926:9942	3353661	3					
ANR	3355533	IdentifierDeclStatement	unsigned int val ;	503:20:9970:9986	3353661	0	True				
ANR	3355534	IdentifierDecl	val		3353661	0					
ANR	3355535	IdentifierDeclType	unsigned int		3353661	0					
ANR	3355536	Identifier	val		3353661	1					
ANR	3355537	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3353661	1					
ANR	3355538	Condition	"IS_DIR ( mb_type , 0 , list )"	505:23:10012:10035	3353661	0	True				
ANR	3355539	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3353661	0					
ANR	3355540	Callee	IS_DIR		3353661	0					
ANR	3355541	Identifier	IS_DIR		3353661	0					
ANR	3355542	ArgumentList	mb_type		3353661	1					
ANR	3355543	Argument	mb_type		3353661	0					
ANR	3355544	Identifier	mb_type		3353661	0					
ANR	3355545	Argument	0		3353661	1					
ANR	3355546	PrimaryExpression	0		3353661	0					
ANR	3355547	Argument	list		3353661	2					
ANR	3355548	Identifier	list		3353661	0					
ANR	3355549	CompoundStatement		505:48:9993:9993	3353661	1					
ANR	3355550	IfStatement	if ( h -> ref_count [ list ] == 1 )		3353661	0					
ANR	3355551	Condition	h -> ref_count [ list ] == 1	507:27:10067:10087	3353661	0	True				
ANR	3355552	EqualityExpression	h -> ref_count [ list ] == 1		3353661	0		==			
ANR	3355553	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3355554	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355555	Identifier	h		3353661	0					
ANR	3355556	Identifier	ref_count		3353661	1					
ANR	3355557	Identifier	list		3353661	1					
ANR	3355558	PrimaryExpression	1		3353661	1					
ANR	3355559	CompoundStatement		507:49:10045:10045	3353661	1					
ANR	3355560	ExpressionStatement	val = 0	509:28:10120:10126	3353661	0	True				
ANR	3355561	AssignmentExpression	val = 0		3353661	0		=			
ANR	3355562	Identifier	val		3353661	0					
ANR	3355563	PrimaryExpression	0		3353661	1					
ANR	3355564	ElseStatement	else		3353661	0					
ANR	3355565	IfStatement	if ( h -> ref_count [ list ] == 2 )		3353661	0					
ANR	3355566	Condition	h -> ref_count [ list ] == 2	511:33:10162:10182	3353661	0	True				
ANR	3355567	EqualityExpression	h -> ref_count [ list ] == 2		3353661	0		==			
ANR	3355568	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3355569	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355570	Identifier	h		3353661	0					
ANR	3355571	Identifier	ref_count		3353661	1					
ANR	3355572	Identifier	list		3353661	1					
ANR	3355573	PrimaryExpression	2		3353661	1					
ANR	3355574	CompoundStatement		511:55:10140:10140	3353661	1					
ANR	3355575	ExpressionStatement	val = get_bits1 ( & s -> gb ) ^ 1	513:28:10215:10239	3353661	0	True				
ANR	3355576	AssignmentExpression	val = get_bits1 ( & s -> gb ) ^ 1		3353661	0		=			
ANR	3355577	Identifier	val		3353661	0					
ANR	3355578	ExclusiveOrExpression	get_bits1 ( & s -> gb ) ^ 1		3353661	1		^			
ANR	3355579	CallExpression	get_bits1 ( & s -> gb )		3353661	0					
ANR	3355580	Callee	get_bits1		3353661	0					
ANR	3355581	Identifier	get_bits1		3353661	0					
ANR	3355582	ArgumentList	& s -> gb		3353661	1					
ANR	3355583	Argument	& s -> gb		3353661	0					
ANR	3355584	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355585	UnaryOperator	&		3353661	0					
ANR	3355586	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355587	Identifier	s		3353661	0					
ANR	3355588	Identifier	gb		3353661	1					
ANR	3355589	PrimaryExpression	1		3353661	1					
ANR	3355590	ElseStatement	else		3353661	0					
ANR	3355591	CompoundStatement		515:29:10227:10227	3353661	0					
ANR	3355592	ExpressionStatement	val = get_ue_golomb_31 ( & s -> gb )	517:28:10302:10331	3353661	0	True				
ANR	3355593	AssignmentExpression	val = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3355594	Identifier	val		3353661	0					
ANR	3355595	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3355596	Callee	get_ue_golomb_31		3353661	0					
ANR	3355597	Identifier	get_ue_golomb_31		3353661	0					
ANR	3355598	ArgumentList	& s -> gb		3353661	1					
ANR	3355599	Argument	& s -> gb		3353661	0					
ANR	3355600	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355601	UnaryOperator	&		3353661	0					
ANR	3355602	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355603	Identifier	s		3353661	0					
ANR	3355604	Identifier	gb		3353661	1					
ANR	3355605	IfStatement	if ( val >= h -> ref_count [ list ] )		3353661	1					
ANR	3355606	Condition	val >= h -> ref_count [ list ]	519:31:10365:10389	3353661	0	True				
ANR	3355607	RelationalExpression	val >= h -> ref_count [ list ]		3353661	0		>=			
ANR	3355608	Identifier	val		3353661	0					
ANR	3355609	ArrayIndexing	h -> ref_count [ list ]		3353661	1					
ANR	3355610	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355611	Identifier	h		3353661	0					
ANR	3355612	Identifier	ref_count		3353661	1					
ANR	3355613	Identifier	list		3353661	1					
ANR	3355614	CompoundStatement		519:57:10347:10347	3353661	1					
ANR	3355615	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	521:32:10426:10484	3353661	0	True				
ANR	3355616	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3353661	0					
ANR	3355617	Callee	av_log		3353661	0					
ANR	3355618	Identifier	av_log		3353661	0					
ANR	3355619	ArgumentList	h -> s . avctx		3353661	1					
ANR	3355620	Argument	h -> s . avctx		3353661	0					
ANR	3355621	MemberAccess	h -> s . avctx		3353661	0					
ANR	3355622	PtrMemberAccess	h -> s		3353661	0					
ANR	3355623	Identifier	h		3353661	0					
ANR	3355624	Identifier	s		3353661	1					
ANR	3355625	Identifier	avctx		3353661	1					
ANR	3355626	Argument	AV_LOG_ERROR		3353661	1					
ANR	3355627	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3355628	Argument	"""ref %u overflow\\n"""		3353661	2					
ANR	3355629	PrimaryExpression	"""ref %u overflow\\n"""		3353661	0					
ANR	3355630	Argument	val		3353661	3					
ANR	3355631	Identifier	val		3353661	0					
ANR	3355632	ReturnStatement	return - 1 ;	523:32:10519:10528	3353661	1	True				
ANR	3355633	UnaryOperationExpression	- 1		3353661	0					
ANR	3355634	UnaryOperator	-		3353661	0					
ANR	3355635	PrimaryExpression	1		3353661	1					
ANR	3355636	ElseStatement	else		3353661	0					
ANR	3355637	ExpressionStatement	val = LIST_NOT_USED & 0xFF	531:24:10640:10663	3353661	0	True				
ANR	3355638	AssignmentExpression	val = LIST_NOT_USED & 0xFF		3353661	0		=			
ANR	3355639	Identifier	val		3353661	0					
ANR	3355640	BitAndExpression	LIST_NOT_USED & 0xFF		3353661	1		&			
ANR	3355641	Identifier	LIST_NOT_USED		3353661	0					
ANR	3355642	PrimaryExpression	0xFF		3353661	1					
ANR	3355643	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 1 )"	533:20:10686:10750	3353661	2	True				
ANR	3355644	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 1 )"		3353661	0					
ANR	3355645	Callee	fill_rectangle		3353661	0					
ANR	3355646	Identifier	fill_rectangle		3353661	0					
ANR	3355647	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	1					
ANR	3355648	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	0					
ANR	3355649	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	0					
ANR	3355650	UnaryOperator	&		3353661	0					
ANR	3355651	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	1					
ANR	3355652	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355653	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355654	Identifier	h		3353661	0					
ANR	3355655	Identifier	ref_cache		3353661	1					
ANR	3355656	Identifier	list		3353661	1					
ANR	3355657	ArrayIndexing	scan8 [ 0 ]		3353661	1					
ANR	3355658	Identifier	scan8		3353661	0					
ANR	3355659	PrimaryExpression	0		3353661	1					
ANR	3355660	Argument	4		3353661	1					
ANR	3355661	PrimaryExpression	4		3353661	0					
ANR	3355662	Argument	4		3353661	2					
ANR	3355663	PrimaryExpression	4		3353661	0					
ANR	3355664	Argument	8		3353661	3					
ANR	3355665	PrimaryExpression	8		3353661	0					
ANR	3355666	Argument	val		3353661	4					
ANR	3355667	Identifier	val		3353661	0					
ANR	3355668	Argument	1		3353661	5					
ANR	3355669	PrimaryExpression	1		3353661	0					
ANR	3355670	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	1					
ANR	3355671	ForInit	list = 0 ;	537:16:10784:10790	3353661	0	True				
ANR	3355672	AssignmentExpression	list = 0		3353661	0		=			
ANR	3355673	Identifier	list		3353661	0					
ANR	3355674	PrimaryExpression	0		3353661	1					
ANR	3355675	Condition	list < h -> list_count	537:24:10792:10809	3353661	1	True				
ANR	3355676	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3355677	Identifier	list		3353661	0					
ANR	3355678	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3355679	Identifier	h		3353661	0					
ANR	3355680	Identifier	list_count		3353661	1					
ANR	3355681	PostIncDecOperationExpression	list ++	537:44:10812:10817	3353661	2	True				
ANR	3355682	Identifier	list		3353661	0					
ANR	3355683	IncDec	++		3353661	1					
ANR	3355684	CompoundStatement		539:16:10794:10810	3353661	3					
ANR	3355685	IdentifierDeclStatement	unsigned int val ;	539:16:10838:10854	3353661	0	True				
ANR	3355686	IdentifierDecl	val		3353661	0					
ANR	3355687	IdentifierDeclType	unsigned int		3353661	0					
ANR	3355688	Identifier	val		3353661	1					
ANR	3355689	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3353661	1					
ANR	3355690	Condition	"IS_DIR ( mb_type , 0 , list )"	541:19:10876:10899	3353661	0	True				
ANR	3355691	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3353661	0					
ANR	3355692	Callee	IS_DIR		3353661	0					
ANR	3355693	Identifier	IS_DIR		3353661	0					
ANR	3355694	ArgumentList	mb_type		3353661	1					
ANR	3355695	Argument	mb_type		3353661	0					
ANR	3355696	Identifier	mb_type		3353661	0					
ANR	3355697	Argument	0		3353661	1					
ANR	3355698	PrimaryExpression	0		3353661	0					
ANR	3355699	Argument	list		3353661	2					
ANR	3355700	Identifier	list		3353661	0					
ANR	3355701	CompoundStatement		541:44:10857:10857	3353661	1					
ANR	3355702	ExpressionStatement	"pred_motion ( h , 0 , 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"	543:20:10924:10992	3353661	0	True				
ANR	3355703	CallExpression	"pred_motion ( h , 0 , 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"		3353661	0					
ANR	3355704	Callee	pred_motion		3353661	0					
ANR	3355705	Identifier	pred_motion		3353661	0					
ANR	3355706	ArgumentList	h		3353661	1					
ANR	3355707	Argument	h		3353661	0					
ANR	3355708	Identifier	h		3353661	0					
ANR	3355709	Argument	0		3353661	1					
ANR	3355710	PrimaryExpression	0		3353661	0					
ANR	3355711	Argument	4		3353661	2					
ANR	3355712	PrimaryExpression	4		3353661	0					
ANR	3355713	Argument	list		3353661	3					
ANR	3355714	Identifier	list		3353661	0					
ANR	3355715	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	4					
ANR	3355716	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3353661	0					
ANR	3355717	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355718	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355719	Identifier	h		3353661	0					
ANR	3355720	Identifier	ref_cache		3353661	1					
ANR	3355721	Identifier	list		3353661	1					
ANR	3355722	ArrayIndexing	scan8 [ 0 ]		3353661	1					
ANR	3355723	Identifier	scan8		3353661	0					
ANR	3355724	PrimaryExpression	0		3353661	1					
ANR	3355725	Argument	& mx		3353661	5					
ANR	3355726	UnaryOperationExpression	& mx		3353661	0					
ANR	3355727	UnaryOperator	&		3353661	0					
ANR	3355728	Identifier	mx		3353661	1					
ANR	3355729	Argument	& my		3353661	6					
ANR	3355730	UnaryOperationExpression	& my		3353661	0					
ANR	3355731	UnaryOperator	&		3353661	0					
ANR	3355732	Identifier	my		3353661	1					
ANR	3355733	ExpressionStatement	mx += get_se_golomb ( & s -> gb )	545:20:11015:11042	3353661	1	True				
ANR	3355734	AssignmentExpression	mx += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3355735	Identifier	mx		3353661	0					
ANR	3355736	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3355737	Callee	get_se_golomb		3353661	0					
ANR	3355738	Identifier	get_se_golomb		3353661	0					
ANR	3355739	ArgumentList	& s -> gb		3353661	1					
ANR	3355740	Argument	& s -> gb		3353661	0					
ANR	3355741	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355742	UnaryOperator	&		3353661	0					
ANR	3355743	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355744	Identifier	s		3353661	0					
ANR	3355745	Identifier	gb		3353661	1					
ANR	3355746	ExpressionStatement	my += get_se_golomb ( & s -> gb )	547:20:11065:11092	3353661	2	True				
ANR	3355747	AssignmentExpression	my += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3355748	Identifier	my		3353661	0					
ANR	3355749	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3355750	Callee	get_se_golomb		3353661	0					
ANR	3355751	Identifier	get_se_golomb		3353661	0					
ANR	3355752	ArgumentList	& s -> gb		3353661	1					
ANR	3355753	Argument	& s -> gb		3353661	0					
ANR	3355754	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355755	UnaryOperator	&		3353661	0					
ANR	3355756	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355757	Identifier	s		3353661	0					
ANR	3355758	Identifier	gb		3353661	1					
ANR	3355759	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	549:20:11115:11160	3353661	3	True				
ANR	3355760	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3353661	0					
ANR	3355761	Callee	tprintf		3353661	0					
ANR	3355762	Identifier	tprintf		3353661	0					
ANR	3355763	ArgumentList	s -> avctx		3353661	1					
ANR	3355764	Argument	s -> avctx		3353661	0					
ANR	3355765	PtrMemberAccess	s -> avctx		3353661	0					
ANR	3355766	Identifier	s		3353661	0					
ANR	3355767	Identifier	avctx		3353661	1					
ANR	3355768	Argument	"""final mv:%d %d\\n"""		3353661	1					
ANR	3355769	PrimaryExpression	"""final mv:%d %d\\n"""		3353661	0					
ANR	3355770	Argument	mx		3353661	2					
ANR	3355771	Identifier	mx		3353661	0					
ANR	3355772	Argument	my		3353661	3					
ANR	3355773	Identifier	my		3353661	0					
ANR	3355774	ExpressionStatement	"val = pack16to32 ( mx , my )"	553:20:11185:11207	3353661	4	True				
ANR	3355775	AssignmentExpression	"val = pack16to32 ( mx , my )"		3353661	0		=			
ANR	3355776	Identifier	val		3353661	0					
ANR	3355777	CallExpression	"pack16to32 ( mx , my )"		3353661	1					
ANR	3355778	Callee	pack16to32		3353661	0					
ANR	3355779	Identifier	pack16to32		3353661	0					
ANR	3355780	ArgumentList	mx		3353661	1					
ANR	3355781	Argument	mx		3353661	0					
ANR	3355782	Identifier	mx		3353661	0					
ANR	3355783	Argument	my		3353661	1					
ANR	3355784	Identifier	my		3353661	0					
ANR	3355785	ElseStatement	else		3353661	0					
ANR	3355786	ExpressionStatement	val = 0	557:20:11253:11258	3353661	0	True				
ANR	3355787	AssignmentExpression	val = 0		3353661	0		=			
ANR	3355788	Identifier	val		3353661	0					
ANR	3355789	PrimaryExpression	0		3353661	1					
ANR	3355790	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 4 )"	559:16:11277:11339	3353661	2	True				
ANR	3355791	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 4 )"		3353661	0					
ANR	3355792	Callee	fill_rectangle		3353661	0					
ANR	3355793	Identifier	fill_rectangle		3353661	0					
ANR	3355794	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3353661	1					
ANR	3355795	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3353661	0					
ANR	3355796	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3353661	0					
ANR	3355797	ArrayIndexing	h -> mv_cache [ list ]		3353661	0					
ANR	3355798	PtrMemberAccess	h -> mv_cache		3353661	0					
ANR	3355799	Identifier	h		3353661	0					
ANR	3355800	Identifier	mv_cache		3353661	1					
ANR	3355801	Identifier	list		3353661	1					
ANR	3355802	ArrayIndexing	scan8 [ 0 ]		3353661	1					
ANR	3355803	Identifier	scan8		3353661	0					
ANR	3355804	PrimaryExpression	0		3353661	1					
ANR	3355805	Argument	4		3353661	1					
ANR	3355806	PrimaryExpression	4		3353661	0					
ANR	3355807	Argument	4		3353661	2					
ANR	3355808	PrimaryExpression	4		3353661	0					
ANR	3355809	Argument	8		3353661	3					
ANR	3355810	PrimaryExpression	8		3353661	0					
ANR	3355811	Argument	val		3353661	4					
ANR	3355812	Identifier	val		3353661	0					
ANR	3355813	Argument	4		3353661	5					
ANR	3355814	PrimaryExpression	4		3353661	0					
ANR	3355815	ElseStatement	else		3353661	0					
ANR	3355816	IfStatement	if ( IS_16X8 ( mb_type ) )		3353661	0					
ANR	3355817	Condition	IS_16X8 ( mb_type )	565:16:11384:11399	3353661	0	True				
ANR	3355818	CallExpression	IS_16X8 ( mb_type )		3353661	0					
ANR	3355819	Callee	IS_16X8		3353661	0					
ANR	3355820	Identifier	IS_16X8		3353661	0					
ANR	3355821	ArgumentList	mb_type		3353661	1					
ANR	3355822	Argument	mb_type		3353661	0					
ANR	3355823	Identifier	mb_type		3353661	0					
ANR	3355824	CompoundStatement		565:33:11357:11357	3353661	1					
ANR	3355825	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	0					
ANR	3355826	ForInit	list = 0 ;	567:16:11420:11426	3353661	0	True				
ANR	3355827	AssignmentExpression	list = 0		3353661	0		=			
ANR	3355828	Identifier	list		3353661	0					
ANR	3355829	PrimaryExpression	0		3353661	1					
ANR	3355830	Condition	list < h -> list_count	567:24:11428:11445	3353661	1	True				
ANR	3355831	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3355832	Identifier	list		3353661	0					
ANR	3355833	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3355834	Identifier	h		3353661	0					
ANR	3355835	Identifier	list_count		3353661	1					
ANR	3355836	PostIncDecOperationExpression	list ++	567:44:11448:11453	3353661	2	True				
ANR	3355837	Identifier	list		3353661	0					
ANR	3355838	IncDec	++		3353661	1					
ANR	3355839	CompoundStatement		567:51:11411:11411	3353661	3					
ANR	3355840	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3353661	0					
ANR	3355841	ForInit	i = 0 ;	569:24:11482:11485	3353661	0	True				
ANR	3355842	AssignmentExpression	i = 0		3353661	0		=			
ANR	3355843	Identifier	i		3353661	0					
ANR	3355844	PrimaryExpression	0		3353661	1					
ANR	3355845	Condition	i < 2	569:29:11487:11489	3353661	1	True				
ANR	3355846	RelationalExpression	i < 2		3353661	0		<			
ANR	3355847	Identifier	i		3353661	0					
ANR	3355848	PrimaryExpression	2		3353661	1					
ANR	3355849	PostIncDecOperationExpression	i ++	569:34:11492:11494	3353661	2	True				
ANR	3355850	Identifier	i		3353661	0					
ANR	3355851	IncDec	++		3353661	1					
ANR	3355852	CompoundStatement		571:24:11479:11495	3353661	3					
ANR	3355853	IdentifierDeclStatement	unsigned int val ;	571:24:11523:11539	3353661	0	True				
ANR	3355854	IdentifierDecl	val		3353661	0					
ANR	3355855	IdentifierDeclType	unsigned int		3353661	0					
ANR	3355856	Identifier	val		3353661	1					
ANR	3355857	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3353661	1					
ANR	3355858	Condition	"IS_DIR ( mb_type , i , list )"	573:27:11569:11592	3353661	0	True				
ANR	3355859	CallExpression	"IS_DIR ( mb_type , i , list )"		3353661	0					
ANR	3355860	Callee	IS_DIR		3353661	0					
ANR	3355861	Identifier	IS_DIR		3353661	0					
ANR	3355862	ArgumentList	mb_type		3353661	1					
ANR	3355863	Argument	mb_type		3353661	0					
ANR	3355864	Identifier	mb_type		3353661	0					
ANR	3355865	Argument	i		3353661	1					
ANR	3355866	Identifier	i		3353661	0					
ANR	3355867	Argument	list		3353661	2					
ANR	3355868	Identifier	list		3353661	0					
ANR	3355869	CompoundStatement		573:52:11550:11550	3353661	1					
ANR	3355870	IfStatement	if ( h -> ref_count [ list ] == 1 )		3353661	0					
ANR	3355871	Condition	h -> ref_count [ list ] == 1	575:31:11628:11650	3353661	0	True				
ANR	3355872	EqualityExpression	h -> ref_count [ list ] == 1		3353661	0		==			
ANR	3355873	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3355874	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355875	Identifier	h		3353661	0					
ANR	3355876	Identifier	ref_count		3353661	1					
ANR	3355877	Identifier	list		3353661	1					
ANR	3355878	PrimaryExpression	1		3353661	1					
ANR	3355879	CompoundStatement		575:55:11608:11608	3353661	1					
ANR	3355880	ExpressionStatement	val = 0	577:32:11687:11693	3353661	0	True				
ANR	3355881	AssignmentExpression	val = 0		3353661	0		=			
ANR	3355882	Identifier	val		3353661	0					
ANR	3355883	PrimaryExpression	0		3353661	1					
ANR	3355884	ElseStatement	else		3353661	0					
ANR	3355885	IfStatement	if ( h -> ref_count [ list ] == 2 )		3353661	0					
ANR	3355886	Condition	h -> ref_count [ list ] == 2	579:37:11733:11755	3353661	0	True				
ANR	3355887	EqualityExpression	h -> ref_count [ list ] == 2		3353661	0		==			
ANR	3355888	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3355889	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355890	Identifier	h		3353661	0					
ANR	3355891	Identifier	ref_count		3353661	1					
ANR	3355892	Identifier	list		3353661	1					
ANR	3355893	PrimaryExpression	2		3353661	1					
ANR	3355894	CompoundStatement		579:61:11713:11713	3353661	1					
ANR	3355895	ExpressionStatement	val = get_bits1 ( & s -> gb ) ^ 1	581:32:11792:11816	3353661	0	True				
ANR	3355896	AssignmentExpression	val = get_bits1 ( & s -> gb ) ^ 1		3353661	0		=			
ANR	3355897	Identifier	val		3353661	0					
ANR	3355898	ExclusiveOrExpression	get_bits1 ( & s -> gb ) ^ 1		3353661	1		^			
ANR	3355899	CallExpression	get_bits1 ( & s -> gb )		3353661	0					
ANR	3355900	Callee	get_bits1		3353661	0					
ANR	3355901	Identifier	get_bits1		3353661	0					
ANR	3355902	ArgumentList	& s -> gb		3353661	1					
ANR	3355903	Argument	& s -> gb		3353661	0					
ANR	3355904	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355905	UnaryOperator	&		3353661	0					
ANR	3355906	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355907	Identifier	s		3353661	0					
ANR	3355908	Identifier	gb		3353661	1					
ANR	3355909	PrimaryExpression	1		3353661	1					
ANR	3355910	ElseStatement	else		3353661	0					
ANR	3355911	CompoundStatement		583:33:11808:11808	3353661	0					
ANR	3355912	ExpressionStatement	val = get_ue_golomb_31 ( & s -> gb )	585:32:11887:11916	3353661	0	True				
ANR	3355913	AssignmentExpression	val = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3355914	Identifier	val		3353661	0					
ANR	3355915	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3355916	Callee	get_ue_golomb_31		3353661	0					
ANR	3355917	Identifier	get_ue_golomb_31		3353661	0					
ANR	3355918	ArgumentList	& s -> gb		3353661	1					
ANR	3355919	Argument	& s -> gb		3353661	0					
ANR	3355920	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3355921	UnaryOperator	&		3353661	0					
ANR	3355922	PtrMemberAccess	s -> gb		3353661	1					
ANR	3355923	Identifier	s		3353661	0					
ANR	3355924	Identifier	gb		3353661	1					
ANR	3355925	IfStatement	if ( val >= h -> ref_count [ list ] )		3353661	1					
ANR	3355926	Condition	val >= h -> ref_count [ list ]	587:35:11954:11978	3353661	0	True				
ANR	3355927	RelationalExpression	val >= h -> ref_count [ list ]		3353661	0		>=			
ANR	3355928	Identifier	val		3353661	0					
ANR	3355929	ArrayIndexing	h -> ref_count [ list ]		3353661	1					
ANR	3355930	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3355931	Identifier	h		3353661	0					
ANR	3355932	Identifier	ref_count		3353661	1					
ANR	3355933	Identifier	list		3353661	1					
ANR	3355934	CompoundStatement		587:61:11936:11936	3353661	1					
ANR	3355935	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	589:36:12019:12077	3353661	0	True				
ANR	3355936	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3353661	0					
ANR	3355937	Callee	av_log		3353661	0					
ANR	3355938	Identifier	av_log		3353661	0					
ANR	3355939	ArgumentList	h -> s . avctx		3353661	1					
ANR	3355940	Argument	h -> s . avctx		3353661	0					
ANR	3355941	MemberAccess	h -> s . avctx		3353661	0					
ANR	3355942	PtrMemberAccess	h -> s		3353661	0					
ANR	3355943	Identifier	h		3353661	0					
ANR	3355944	Identifier	s		3353661	1					
ANR	3355945	Identifier	avctx		3353661	1					
ANR	3355946	Argument	AV_LOG_ERROR		3353661	1					
ANR	3355947	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3355948	Argument	"""ref %u overflow\\n"""		3353661	2					
ANR	3355949	PrimaryExpression	"""ref %u overflow\\n"""		3353661	0					
ANR	3355950	Argument	val		3353661	3					
ANR	3355951	Identifier	val		3353661	0					
ANR	3355952	ReturnStatement	return - 1 ;	591:36:12116:12125	3353661	1	True				
ANR	3355953	UnaryOperationExpression	- 1		3353661	0					
ANR	3355954	UnaryOperator	-		3353661	0					
ANR	3355955	PrimaryExpression	1		3353661	1					
ANR	3355956	ElseStatement	else		3353661	0					
ANR	3355957	ExpressionStatement	val = LIST_NOT_USED & 0xFF	599:28:12253:12276	3353661	0	True				
ANR	3355958	AssignmentExpression	val = LIST_NOT_USED & 0xFF		3353661	0		=			
ANR	3355959	Identifier	val		3353661	0					
ANR	3355960	BitAndExpression	LIST_NOT_USED & 0xFF		3353661	1		&			
ANR	3355961	Identifier	LIST_NOT_USED		3353661	0					
ANR	3355962	PrimaryExpression	0xFF		3353661	1					
ANR	3355963	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 1 )"	601:24:12303:12374	3353661	2	True				
ANR	3355964	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 1 )"		3353661	0					
ANR	3355965	Callee	fill_rectangle		3353661	0					
ANR	3355966	Identifier	fill_rectangle		3353661	0					
ANR	3355967	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	1					
ANR	3355968	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	0					
ANR	3355969	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	0					
ANR	3355970	UnaryOperator	&		3353661	0					
ANR	3355971	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	1					
ANR	3355972	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3355973	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3355974	Identifier	h		3353661	0					
ANR	3355975	Identifier	ref_cache		3353661	1					
ANR	3355976	Identifier	list		3353661	1					
ANR	3355977	AdditiveExpression	scan8 [ 0 ] + 16 * i		3353661	1		+			
ANR	3355978	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3355979	Identifier	scan8		3353661	0					
ANR	3355980	PrimaryExpression	0		3353661	1					
ANR	3355981	MultiplicativeExpression	16 * i		3353661	1		*			
ANR	3355982	PrimaryExpression	16		3353661	0					
ANR	3355983	Identifier	i		3353661	1					
ANR	3355984	Argument	4		3353661	1					
ANR	3355985	PrimaryExpression	4		3353661	0					
ANR	3355986	Argument	2		3353661	2					
ANR	3355987	PrimaryExpression	2		3353661	0					
ANR	3355988	Argument	8		3353661	3					
ANR	3355989	PrimaryExpression	8		3353661	0					
ANR	3355990	Argument	val		3353661	4					
ANR	3355991	Identifier	val		3353661	0					
ANR	3355992	Argument	1		3353661	5					
ANR	3355993	PrimaryExpression	1		3353661	0					
ANR	3355994	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	1					
ANR	3355995	ForInit	list = 0 ;	607:16:12431:12437	3353661	0	True				
ANR	3355996	AssignmentExpression	list = 0		3353661	0		=			
ANR	3355997	Identifier	list		3353661	0					
ANR	3355998	PrimaryExpression	0		3353661	1					
ANR	3355999	Condition	list < h -> list_count	607:24:12439:12456	3353661	1	True				
ANR	3356000	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3356001	Identifier	list		3353661	0					
ANR	3356002	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3356003	Identifier	h		3353661	0					
ANR	3356004	Identifier	list_count		3353661	1					
ANR	3356005	PostIncDecOperationExpression	list ++	607:44:12459:12464	3353661	2	True				
ANR	3356006	Identifier	list		3353661	0					
ANR	3356007	IncDec	++		3353661	1					
ANR	3356008	CompoundStatement		607:51:12422:12422	3353661	3					
ANR	3356009	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3353661	0					
ANR	3356010	ForInit	i = 0 ;	609:20:12489:12492	3353661	0	True				
ANR	3356011	AssignmentExpression	i = 0		3353661	0		=			
ANR	3356012	Identifier	i		3353661	0					
ANR	3356013	PrimaryExpression	0		3353661	1					
ANR	3356014	Condition	i < 2	609:25:12494:12496	3353661	1	True				
ANR	3356015	RelationalExpression	i < 2		3353661	0		<			
ANR	3356016	Identifier	i		3353661	0					
ANR	3356017	PrimaryExpression	2		3353661	1					
ANR	3356018	PostIncDecOperationExpression	i ++	609:30:12499:12501	3353661	2	True				
ANR	3356019	Identifier	i		3353661	0					
ANR	3356020	IncDec	++		3353661	1					
ANR	3356021	CompoundStatement		611:20:12482:12498	3353661	3					
ANR	3356022	IdentifierDeclStatement	unsigned int val ;	611:20:12526:12542	3353661	0	True				
ANR	3356023	IdentifierDecl	val		3353661	0					
ANR	3356024	IdentifierDeclType	unsigned int		3353661	0					
ANR	3356025	Identifier	val		3353661	1					
ANR	3356026	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3353661	1					
ANR	3356027	Condition	"IS_DIR ( mb_type , i , list )"	613:23:12568:12591	3353661	0	True				
ANR	3356028	CallExpression	"IS_DIR ( mb_type , i , list )"		3353661	0					
ANR	3356029	Callee	IS_DIR		3353661	0					
ANR	3356030	Identifier	IS_DIR		3353661	0					
ANR	3356031	ArgumentList	mb_type		3353661	1					
ANR	3356032	Argument	mb_type		3353661	0					
ANR	3356033	Identifier	mb_type		3353661	0					
ANR	3356034	Argument	i		3353661	1					
ANR	3356035	Identifier	i		3353661	0					
ANR	3356036	Argument	list		3353661	2					
ANR	3356037	Identifier	list		3353661	0					
ANR	3356038	CompoundStatement		613:48:12549:12549	3353661	1					
ANR	3356039	ExpressionStatement	"pred_16x8_motion ( h , 8 * i , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"	615:24:12620:12697	3353661	0	True				
ANR	3356040	CallExpression	"pred_16x8_motion ( h , 8 * i , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"		3353661	0					
ANR	3356041	Callee	pred_16x8_motion		3353661	0					
ANR	3356042	Identifier	pred_16x8_motion		3353661	0					
ANR	3356043	ArgumentList	h		3353661	1					
ANR	3356044	Argument	h		3353661	0					
ANR	3356045	Identifier	h		3353661	0					
ANR	3356046	Argument	8 * i		3353661	1					
ANR	3356047	MultiplicativeExpression	8 * i		3353661	0		*			
ANR	3356048	PrimaryExpression	8		3353661	0					
ANR	3356049	Identifier	i		3353661	1					
ANR	3356050	Argument	list		3353661	2					
ANR	3356051	Identifier	list		3353661	0					
ANR	3356052	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	3					
ANR	3356053	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	0					
ANR	3356054	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3356055	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3356056	Identifier	h		3353661	0					
ANR	3356057	Identifier	ref_cache		3353661	1					
ANR	3356058	Identifier	list		3353661	1					
ANR	3356059	AdditiveExpression	scan8 [ 0 ] + 16 * i		3353661	1		+			
ANR	3356060	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3356061	Identifier	scan8		3353661	0					
ANR	3356062	PrimaryExpression	0		3353661	1					
ANR	3356063	MultiplicativeExpression	16 * i		3353661	1		*			
ANR	3356064	PrimaryExpression	16		3353661	0					
ANR	3356065	Identifier	i		3353661	1					
ANR	3356066	Argument	& mx		3353661	4					
ANR	3356067	UnaryOperationExpression	& mx		3353661	0					
ANR	3356068	UnaryOperator	&		3353661	0					
ANR	3356069	Identifier	mx		3353661	1					
ANR	3356070	Argument	& my		3353661	5					
ANR	3356071	UnaryOperationExpression	& my		3353661	0					
ANR	3356072	UnaryOperator	&		3353661	0					
ANR	3356073	Identifier	my		3353661	1					
ANR	3356074	ExpressionStatement	mx += get_se_golomb ( & s -> gb )	617:24:12724:12751	3353661	1	True				
ANR	3356075	AssignmentExpression	mx += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3356076	Identifier	mx		3353661	0					
ANR	3356077	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3356078	Callee	get_se_golomb		3353661	0					
ANR	3356079	Identifier	get_se_golomb		3353661	0					
ANR	3356080	ArgumentList	& s -> gb		3353661	1					
ANR	3356081	Argument	& s -> gb		3353661	0					
ANR	3356082	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356083	UnaryOperator	&		3353661	0					
ANR	3356084	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356085	Identifier	s		3353661	0					
ANR	3356086	Identifier	gb		3353661	1					
ANR	3356087	ExpressionStatement	my += get_se_golomb ( & s -> gb )	619:24:12778:12805	3353661	2	True				
ANR	3356088	AssignmentExpression	my += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3356089	Identifier	my		3353661	0					
ANR	3356090	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3356091	Callee	get_se_golomb		3353661	0					
ANR	3356092	Identifier	get_se_golomb		3353661	0					
ANR	3356093	ArgumentList	& s -> gb		3353661	1					
ANR	3356094	Argument	& s -> gb		3353661	0					
ANR	3356095	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356096	UnaryOperator	&		3353661	0					
ANR	3356097	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356098	Identifier	s		3353661	0					
ANR	3356099	Identifier	gb		3353661	1					
ANR	3356100	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	621:24:12832:12877	3353661	3	True				
ANR	3356101	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3353661	0					
ANR	3356102	Callee	tprintf		3353661	0					
ANR	3356103	Identifier	tprintf		3353661	0					
ANR	3356104	ArgumentList	s -> avctx		3353661	1					
ANR	3356105	Argument	s -> avctx		3353661	0					
ANR	3356106	PtrMemberAccess	s -> avctx		3353661	0					
ANR	3356107	Identifier	s		3353661	0					
ANR	3356108	Identifier	avctx		3353661	1					
ANR	3356109	Argument	"""final mv:%d %d\\n"""		3353661	1					
ANR	3356110	PrimaryExpression	"""final mv:%d %d\\n"""		3353661	0					
ANR	3356111	Argument	mx		3353661	2					
ANR	3356112	Identifier	mx		3353661	0					
ANR	3356113	Argument	my		3353661	3					
ANR	3356114	Identifier	my		3353661	0					
ANR	3356115	ExpressionStatement	"val = pack16to32 ( mx , my )"	625:24:12906:12928	3353661	4	True				
ANR	3356116	AssignmentExpression	"val = pack16to32 ( mx , my )"		3353661	0		=			
ANR	3356117	Identifier	val		3353661	0					
ANR	3356118	CallExpression	"pack16to32 ( mx , my )"		3353661	1					
ANR	3356119	Callee	pack16to32		3353661	0					
ANR	3356120	Identifier	pack16to32		3353661	0					
ANR	3356121	ArgumentList	mx		3353661	1					
ANR	3356122	Argument	mx		3353661	0					
ANR	3356123	Identifier	mx		3353661	0					
ANR	3356124	Argument	my		3353661	1					
ANR	3356125	Identifier	my		3353661	0					
ANR	3356126	ElseStatement	else		3353661	0					
ANR	3356127	ExpressionStatement	val = 0	629:24:12982:12987	3353661	0	True				
ANR	3356128	AssignmentExpression	val = 0		3353661	0		=			
ANR	3356129	Identifier	val		3353661	0					
ANR	3356130	PrimaryExpression	0		3353661	1					
ANR	3356131	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 4 )"	631:20:13010:13079	3353661	2	True				
ANR	3356132	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 4 )"		3353661	0					
ANR	3356133	Callee	fill_rectangle		3353661	0					
ANR	3356134	Identifier	fill_rectangle		3353661	0					
ANR	3356135	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	1					
ANR	3356136	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	0					
ANR	3356137	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3353661	0					
ANR	3356138	ArrayIndexing	h -> mv_cache [ list ]		3353661	0					
ANR	3356139	PtrMemberAccess	h -> mv_cache		3353661	0					
ANR	3356140	Identifier	h		3353661	0					
ANR	3356141	Identifier	mv_cache		3353661	1					
ANR	3356142	Identifier	list		3353661	1					
ANR	3356143	AdditiveExpression	scan8 [ 0 ] + 16 * i		3353661	1		+			
ANR	3356144	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3356145	Identifier	scan8		3353661	0					
ANR	3356146	PrimaryExpression	0		3353661	1					
ANR	3356147	MultiplicativeExpression	16 * i		3353661	1		*			
ANR	3356148	PrimaryExpression	16		3353661	0					
ANR	3356149	Identifier	i		3353661	1					
ANR	3356150	Argument	4		3353661	1					
ANR	3356151	PrimaryExpression	4		3353661	0					
ANR	3356152	Argument	2		3353661	2					
ANR	3356153	PrimaryExpression	2		3353661	0					
ANR	3356154	Argument	8		3353661	3					
ANR	3356155	PrimaryExpression	8		3353661	0					
ANR	3356156	Argument	val		3353661	4					
ANR	3356157	Identifier	val		3353661	0					
ANR	3356158	Argument	4		3353661	5					
ANR	3356159	PrimaryExpression	4		3353661	0					
ANR	3356160	ElseStatement	else		3353661	0					
ANR	3356161	CompoundStatement		637:13:13085:13085	3353661	0					
ANR	3356162	ExpressionStatement	assert ( IS_8X16 ( mb_type ) )	639:12:13144:13168	3353661	0	True				
ANR	3356163	CallExpression	assert ( IS_8X16 ( mb_type ) )		3353661	0					
ANR	3356164	Callee	assert		3353661	0					
ANR	3356165	Identifier	assert		3353661	0					
ANR	3356166	ArgumentList	IS_8X16 ( mb_type )		3353661	1					
ANR	3356167	Argument	IS_8X16 ( mb_type )		3353661	0					
ANR	3356168	CallExpression	IS_8X16 ( mb_type )		3353661	0					
ANR	3356169	Callee	IS_8X16		3353661	0					
ANR	3356170	Identifier	IS_8X16		3353661	0					
ANR	3356171	ArgumentList	mb_type		3353661	1					
ANR	3356172	Argument	mb_type		3353661	0					
ANR	3356173	Identifier	mb_type		3353661	0					
ANR	3356174	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	1					
ANR	3356175	ForInit	list = 0 ;	641:16:13187:13193	3353661	0	True				
ANR	3356176	AssignmentExpression	list = 0		3353661	0		=			
ANR	3356177	Identifier	list		3353661	0					
ANR	3356178	PrimaryExpression	0		3353661	1					
ANR	3356179	Condition	list < h -> list_count	641:24:13195:13212	3353661	1	True				
ANR	3356180	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3356181	Identifier	list		3353661	0					
ANR	3356182	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3356183	Identifier	h		3353661	0					
ANR	3356184	Identifier	list_count		3353661	1					
ANR	3356185	PostIncDecOperationExpression	list ++	641:44:13215:13220	3353661	2	True				
ANR	3356186	Identifier	list		3353661	0					
ANR	3356187	IncDec	++		3353661	1					
ANR	3356188	CompoundStatement		641:51:13178:13178	3353661	3					
ANR	3356189	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3353661	0					
ANR	3356190	ForInit	i = 0 ;	643:24:13249:13252	3353661	0	True				
ANR	3356191	AssignmentExpression	i = 0		3353661	0		=			
ANR	3356192	Identifier	i		3353661	0					
ANR	3356193	PrimaryExpression	0		3353661	1					
ANR	3356194	Condition	i < 2	643:29:13254:13256	3353661	1	True				
ANR	3356195	RelationalExpression	i < 2		3353661	0		<			
ANR	3356196	Identifier	i		3353661	0					
ANR	3356197	PrimaryExpression	2		3353661	1					
ANR	3356198	PostIncDecOperationExpression	i ++	643:34:13259:13261	3353661	2	True				
ANR	3356199	Identifier	i		3353661	0					
ANR	3356200	IncDec	++		3353661	1					
ANR	3356201	CompoundStatement		645:24:13246:13262	3353661	3					
ANR	3356202	IdentifierDeclStatement	unsigned int val ;	645:24:13290:13306	3353661	0	True				
ANR	3356203	IdentifierDecl	val		3353661	0					
ANR	3356204	IdentifierDeclType	unsigned int		3353661	0					
ANR	3356205	Identifier	val		3353661	1					
ANR	3356206	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3353661	1					
ANR	3356207	Condition	"IS_DIR ( mb_type , i , list )"	647:27:13336:13359	3353661	0	True				
ANR	3356208	CallExpression	"IS_DIR ( mb_type , i , list )"		3353661	0					
ANR	3356209	Callee	IS_DIR		3353661	0					
ANR	3356210	Identifier	IS_DIR		3353661	0					
ANR	3356211	ArgumentList	mb_type		3353661	1					
ANR	3356212	Argument	mb_type		3353661	0					
ANR	3356213	Identifier	mb_type		3353661	0					
ANR	3356214	Argument	i		3353661	1					
ANR	3356215	Identifier	i		3353661	0					
ANR	3356216	Argument	list		3353661	2					
ANR	3356217	Identifier	list		3353661	0					
ANR	3356218	CompoundStatement		647:52:13317:13317	3353661	1					
ANR	3356219	IfStatement	if ( h -> ref_count [ list ] == 1 )		3353661	0					
ANR	3356220	Condition	h -> ref_count [ list ] == 1	649:31:13412:13432	3353661	0	True				
ANR	3356221	EqualityExpression	h -> ref_count [ list ] == 1		3353661	0		==			
ANR	3356222	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3356223	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3356224	Identifier	h		3353661	0					
ANR	3356225	Identifier	ref_count		3353661	1					
ANR	3356226	Identifier	list		3353661	1					
ANR	3356227	PrimaryExpression	1		3353661	1					
ANR	3356228	CompoundStatement		649:53:13390:13390	3353661	1					
ANR	3356229	ExpressionStatement	val = 0	651:32:13469:13475	3353661	0	True				
ANR	3356230	AssignmentExpression	val = 0		3353661	0		=			
ANR	3356231	Identifier	val		3353661	0					
ANR	3356232	PrimaryExpression	0		3353661	1					
ANR	3356233	ElseStatement	else		3353661	0					
ANR	3356234	IfStatement	if ( h -> ref_count [ list ] == 2 )		3353661	0					
ANR	3356235	Condition	h -> ref_count [ list ] == 2	653:37:13515:13535	3353661	0	True				
ANR	3356236	EqualityExpression	h -> ref_count [ list ] == 2		3353661	0		==			
ANR	3356237	ArrayIndexing	h -> ref_count [ list ]		3353661	0					
ANR	3356238	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3356239	Identifier	h		3353661	0					
ANR	3356240	Identifier	ref_count		3353661	1					
ANR	3356241	Identifier	list		3353661	1					
ANR	3356242	PrimaryExpression	2		3353661	1					
ANR	3356243	CompoundStatement		653:59:13493:13493	3353661	1					
ANR	3356244	ExpressionStatement	val = get_bits1 ( & s -> gb ) ^ 1	655:32:13572:13596	3353661	0	True				
ANR	3356245	AssignmentExpression	val = get_bits1 ( & s -> gb ) ^ 1		3353661	0		=			
ANR	3356246	Identifier	val		3353661	0					
ANR	3356247	ExclusiveOrExpression	get_bits1 ( & s -> gb ) ^ 1		3353661	1		^			
ANR	3356248	CallExpression	get_bits1 ( & s -> gb )		3353661	0					
ANR	3356249	Callee	get_bits1		3353661	0					
ANR	3356250	Identifier	get_bits1		3353661	0					
ANR	3356251	ArgumentList	& s -> gb		3353661	1					
ANR	3356252	Argument	& s -> gb		3353661	0					
ANR	3356253	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356254	UnaryOperator	&		3353661	0					
ANR	3356255	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356256	Identifier	s		3353661	0					
ANR	3356257	Identifier	gb		3353661	1					
ANR	3356258	PrimaryExpression	1		3353661	1					
ANR	3356259	ElseStatement	else		3353661	0					
ANR	3356260	CompoundStatement		657:33:13588:13588	3353661	0					
ANR	3356261	ExpressionStatement	val = get_ue_golomb_31 ( & s -> gb )	659:32:13667:13696	3353661	0	True				
ANR	3356262	AssignmentExpression	val = get_ue_golomb_31 ( & s -> gb )		3353661	0		=			
ANR	3356263	Identifier	val		3353661	0					
ANR	3356264	CallExpression	get_ue_golomb_31 ( & s -> gb )		3353661	1					
ANR	3356265	Callee	get_ue_golomb_31		3353661	0					
ANR	3356266	Identifier	get_ue_golomb_31		3353661	0					
ANR	3356267	ArgumentList	& s -> gb		3353661	1					
ANR	3356268	Argument	& s -> gb		3353661	0					
ANR	3356269	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356270	UnaryOperator	&		3353661	0					
ANR	3356271	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356272	Identifier	s		3353661	0					
ANR	3356273	Identifier	gb		3353661	1					
ANR	3356274	IfStatement	if ( val >= h -> ref_count [ list ] )		3353661	1					
ANR	3356275	Condition	val >= h -> ref_count [ list ]	661:35:13734:13758	3353661	0	True				
ANR	3356276	RelationalExpression	val >= h -> ref_count [ list ]		3353661	0		>=			
ANR	3356277	Identifier	val		3353661	0					
ANR	3356278	ArrayIndexing	h -> ref_count [ list ]		3353661	1					
ANR	3356279	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3356280	Identifier	h		3353661	0					
ANR	3356281	Identifier	ref_count		3353661	1					
ANR	3356282	Identifier	list		3353661	1					
ANR	3356283	CompoundStatement		661:61:13716:13716	3353661	1					
ANR	3356284	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	663:36:13799:13857	3353661	0	True				
ANR	3356285	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3353661	0					
ANR	3356286	Callee	av_log		3353661	0					
ANR	3356287	Identifier	av_log		3353661	0					
ANR	3356288	ArgumentList	h -> s . avctx		3353661	1					
ANR	3356289	Argument	h -> s . avctx		3353661	0					
ANR	3356290	MemberAccess	h -> s . avctx		3353661	0					
ANR	3356291	PtrMemberAccess	h -> s		3353661	0					
ANR	3356292	Identifier	h		3353661	0					
ANR	3356293	Identifier	s		3353661	1					
ANR	3356294	Identifier	avctx		3353661	1					
ANR	3356295	Argument	AV_LOG_ERROR		3353661	1					
ANR	3356296	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3356297	Argument	"""ref %u overflow\\n"""		3353661	2					
ANR	3356298	PrimaryExpression	"""ref %u overflow\\n"""		3353661	0					
ANR	3356299	Argument	val		3353661	3					
ANR	3356300	Identifier	val		3353661	0					
ANR	3356301	ReturnStatement	return - 1 ;	665:36:13896:13905	3353661	1	True				
ANR	3356302	UnaryOperationExpression	- 1		3353661	0					
ANR	3356303	UnaryOperator	-		3353661	0					
ANR	3356304	PrimaryExpression	1		3353661	1					
ANR	3356305	ElseStatement	else		3353661	0					
ANR	3356306	ExpressionStatement	val = LIST_NOT_USED & 0xFF	673:28:14033:14056	3353661	0	True				
ANR	3356307	AssignmentExpression	val = LIST_NOT_USED & 0xFF		3353661	0		=			
ANR	3356308	Identifier	val		3353661	0					
ANR	3356309	BitAndExpression	LIST_NOT_USED & 0xFF		3353661	1		&			
ANR	3356310	Identifier	LIST_NOT_USED		3353661	0					
ANR	3356311	PrimaryExpression	0xFF		3353661	1					
ANR	3356312	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 1 )"	675:24:14083:14153	3353661	2	True				
ANR	3356313	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 1 )"		3353661	0					
ANR	3356314	Callee	fill_rectangle		3353661	0					
ANR	3356315	Identifier	fill_rectangle		3353661	0					
ANR	3356316	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	1					
ANR	3356317	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	0					
ANR	3356318	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	0					
ANR	3356319	UnaryOperator	&		3353661	0					
ANR	3356320	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	1					
ANR	3356321	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3356322	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3356323	Identifier	h		3353661	0					
ANR	3356324	Identifier	ref_cache		3353661	1					
ANR	3356325	Identifier	list		3353661	1					
ANR	3356326	AdditiveExpression	scan8 [ 0 ] + 2 * i		3353661	1		+			
ANR	3356327	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3356328	Identifier	scan8		3353661	0					
ANR	3356329	PrimaryExpression	0		3353661	1					
ANR	3356330	MultiplicativeExpression	2 * i		3353661	1		*			
ANR	3356331	PrimaryExpression	2		3353661	0					
ANR	3356332	Identifier	i		3353661	1					
ANR	3356333	Argument	2		3353661	1					
ANR	3356334	PrimaryExpression	2		3353661	0					
ANR	3356335	Argument	4		3353661	2					
ANR	3356336	PrimaryExpression	4		3353661	0					
ANR	3356337	Argument	8		3353661	3					
ANR	3356338	PrimaryExpression	8		3353661	0					
ANR	3356339	Argument	val		3353661	4					
ANR	3356340	Identifier	val		3353661	0					
ANR	3356341	Argument	1		3353661	5					
ANR	3356342	PrimaryExpression	1		3353661	0					
ANR	3356343	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3353661	2					
ANR	3356344	ForInit	list = 0 ;	681:16:14210:14216	3353661	0	True				
ANR	3356345	AssignmentExpression	list = 0		3353661	0		=			
ANR	3356346	Identifier	list		3353661	0					
ANR	3356347	PrimaryExpression	0		3353661	1					
ANR	3356348	Condition	list < h -> list_count	681:24:14218:14235	3353661	1	True				
ANR	3356349	RelationalExpression	list < h -> list_count		3353661	0		<			
ANR	3356350	Identifier	list		3353661	0					
ANR	3356351	PtrMemberAccess	h -> list_count		3353661	1					
ANR	3356352	Identifier	h		3353661	0					
ANR	3356353	Identifier	list_count		3353661	1					
ANR	3356354	PostIncDecOperationExpression	list ++	681:44:14238:14243	3353661	2	True				
ANR	3356355	Identifier	list		3353661	0					
ANR	3356356	IncDec	++		3353661	1					
ANR	3356357	CompoundStatement		681:51:14201:14201	3353661	3					
ANR	3356358	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3353661	0					
ANR	3356359	ForInit	i = 0 ;	683:20:14268:14271	3353661	0	True				
ANR	3356360	AssignmentExpression	i = 0		3353661	0		=			
ANR	3356361	Identifier	i		3353661	0					
ANR	3356362	PrimaryExpression	0		3353661	1					
ANR	3356363	Condition	i < 2	683:25:14273:14275	3353661	1	True				
ANR	3356364	RelationalExpression	i < 2		3353661	0		<			
ANR	3356365	Identifier	i		3353661	0					
ANR	3356366	PrimaryExpression	2		3353661	1					
ANR	3356367	PostIncDecOperationExpression	i ++	683:30:14278:14280	3353661	2	True				
ANR	3356368	Identifier	i		3353661	0					
ANR	3356369	IncDec	++		3353661	1					
ANR	3356370	CompoundStatement		685:20:14261:14277	3353661	3					
ANR	3356371	IdentifierDeclStatement	unsigned int val ;	685:20:14305:14321	3353661	0	True				
ANR	3356372	IdentifierDecl	val		3353661	0					
ANR	3356373	IdentifierDeclType	unsigned int		3353661	0					
ANR	3356374	Identifier	val		3353661	1					
ANR	3356375	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3353661	1					
ANR	3356376	Condition	"IS_DIR ( mb_type , i , list )"	687:23:14347:14370	3353661	0	True				
ANR	3356377	CallExpression	"IS_DIR ( mb_type , i , list )"		3353661	0					
ANR	3356378	Callee	IS_DIR		3353661	0					
ANR	3356379	Identifier	IS_DIR		3353661	0					
ANR	3356380	ArgumentList	mb_type		3353661	1					
ANR	3356381	Argument	mb_type		3353661	0					
ANR	3356382	Identifier	mb_type		3353661	0					
ANR	3356383	Argument	i		3353661	1					
ANR	3356384	Identifier	i		3353661	0					
ANR	3356385	Argument	list		3353661	2					
ANR	3356386	Identifier	list		3353661	0					
ANR	3356387	CompoundStatement		687:48:14328:14328	3353661	1					
ANR	3356388	ExpressionStatement	"pred_8x16_motion ( h , i * 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"	689:24:14399:14477	3353661	0	True				
ANR	3356389	CallExpression	"pred_8x16_motion ( h , i * 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"		3353661	0					
ANR	3356390	Callee	pred_8x16_motion		3353661	0					
ANR	3356391	Identifier	pred_8x16_motion		3353661	0					
ANR	3356392	ArgumentList	h		3353661	1					
ANR	3356393	Argument	h		3353661	0					
ANR	3356394	Identifier	h		3353661	0					
ANR	3356395	Argument	i * 4		3353661	1					
ANR	3356396	MultiplicativeExpression	i * 4		3353661	0		*			
ANR	3356397	Identifier	i		3353661	0					
ANR	3356398	PrimaryExpression	4		3353661	1					
ANR	3356399	Argument	list		3353661	2					
ANR	3356400	Identifier	list		3353661	0					
ANR	3356401	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	3					
ANR	3356402	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	0					
ANR	3356403	ArrayIndexing	h -> ref_cache [ list ]		3353661	0					
ANR	3356404	PtrMemberAccess	h -> ref_cache		3353661	0					
ANR	3356405	Identifier	h		3353661	0					
ANR	3356406	Identifier	ref_cache		3353661	1					
ANR	3356407	Identifier	list		3353661	1					
ANR	3356408	AdditiveExpression	scan8 [ 0 ] + 2 * i		3353661	1		+			
ANR	3356409	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3356410	Identifier	scan8		3353661	0					
ANR	3356411	PrimaryExpression	0		3353661	1					
ANR	3356412	MultiplicativeExpression	2 * i		3353661	1		*			
ANR	3356413	PrimaryExpression	2		3353661	0					
ANR	3356414	Identifier	i		3353661	1					
ANR	3356415	Argument	& mx		3353661	4					
ANR	3356416	UnaryOperationExpression	& mx		3353661	0					
ANR	3356417	UnaryOperator	&		3353661	0					
ANR	3356418	Identifier	mx		3353661	1					
ANR	3356419	Argument	& my		3353661	5					
ANR	3356420	UnaryOperationExpression	& my		3353661	0					
ANR	3356421	UnaryOperator	&		3353661	0					
ANR	3356422	Identifier	my		3353661	1					
ANR	3356423	ExpressionStatement	mx += get_se_golomb ( & s -> gb )	691:24:14504:14531	3353661	1	True				
ANR	3356424	AssignmentExpression	mx += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3356425	Identifier	mx		3353661	0					
ANR	3356426	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3356427	Callee	get_se_golomb		3353661	0					
ANR	3356428	Identifier	get_se_golomb		3353661	0					
ANR	3356429	ArgumentList	& s -> gb		3353661	1					
ANR	3356430	Argument	& s -> gb		3353661	0					
ANR	3356431	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356432	UnaryOperator	&		3353661	0					
ANR	3356433	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356434	Identifier	s		3353661	0					
ANR	3356435	Identifier	gb		3353661	1					
ANR	3356436	ExpressionStatement	my += get_se_golomb ( & s -> gb )	693:24:14558:14585	3353661	2	True				
ANR	3356437	AssignmentExpression	my += get_se_golomb ( & s -> gb )		3353661	0		+=			
ANR	3356438	Identifier	my		3353661	0					
ANR	3356439	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3356440	Callee	get_se_golomb		3353661	0					
ANR	3356441	Identifier	get_se_golomb		3353661	0					
ANR	3356442	ArgumentList	& s -> gb		3353661	1					
ANR	3356443	Argument	& s -> gb		3353661	0					
ANR	3356444	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356445	UnaryOperator	&		3353661	0					
ANR	3356446	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356447	Identifier	s		3353661	0					
ANR	3356448	Identifier	gb		3353661	1					
ANR	3356449	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	695:24:14612:14657	3353661	3	True				
ANR	3356450	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3353661	0					
ANR	3356451	Callee	tprintf		3353661	0					
ANR	3356452	Identifier	tprintf		3353661	0					
ANR	3356453	ArgumentList	s -> avctx		3353661	1					
ANR	3356454	Argument	s -> avctx		3353661	0					
ANR	3356455	PtrMemberAccess	s -> avctx		3353661	0					
ANR	3356456	Identifier	s		3353661	0					
ANR	3356457	Identifier	avctx		3353661	1					
ANR	3356458	Argument	"""final mv:%d %d\\n"""		3353661	1					
ANR	3356459	PrimaryExpression	"""final mv:%d %d\\n"""		3353661	0					
ANR	3356460	Argument	mx		3353661	2					
ANR	3356461	Identifier	mx		3353661	0					
ANR	3356462	Argument	my		3353661	3					
ANR	3356463	Identifier	my		3353661	0					
ANR	3356464	ExpressionStatement	"val = pack16to32 ( mx , my )"	699:24:14686:14708	3353661	4	True				
ANR	3356465	AssignmentExpression	"val = pack16to32 ( mx , my )"		3353661	0		=			
ANR	3356466	Identifier	val		3353661	0					
ANR	3356467	CallExpression	"pack16to32 ( mx , my )"		3353661	1					
ANR	3356468	Callee	pack16to32		3353661	0					
ANR	3356469	Identifier	pack16to32		3353661	0					
ANR	3356470	ArgumentList	mx		3353661	1					
ANR	3356471	Argument	mx		3353661	0					
ANR	3356472	Identifier	mx		3353661	0					
ANR	3356473	Argument	my		3353661	1					
ANR	3356474	Identifier	my		3353661	0					
ANR	3356475	ElseStatement	else		3353661	0					
ANR	3356476	ExpressionStatement	val = 0	703:24:14762:14767	3353661	0	True				
ANR	3356477	AssignmentExpression	val = 0		3353661	0		=			
ANR	3356478	Identifier	val		3353661	0					
ANR	3356479	PrimaryExpression	0		3353661	1					
ANR	3356480	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 4 )"	705:20:14790:14858	3353661	2	True				
ANR	3356481	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 4 )"		3353661	0					
ANR	3356482	Callee	fill_rectangle		3353661	0					
ANR	3356483	Identifier	fill_rectangle		3353661	0					
ANR	3356484	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	1					
ANR	3356485	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	0					
ANR	3356486	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3353661	0					
ANR	3356487	ArrayIndexing	h -> mv_cache [ list ]		3353661	0					
ANR	3356488	PtrMemberAccess	h -> mv_cache		3353661	0					
ANR	3356489	Identifier	h		3353661	0					
ANR	3356490	Identifier	mv_cache		3353661	1					
ANR	3356491	Identifier	list		3353661	1					
ANR	3356492	AdditiveExpression	scan8 [ 0 ] + 2 * i		3353661	1		+			
ANR	3356493	ArrayIndexing	scan8 [ 0 ]		3353661	0					
ANR	3356494	Identifier	scan8		3353661	0					
ANR	3356495	PrimaryExpression	0		3353661	1					
ANR	3356496	MultiplicativeExpression	2 * i		3353661	1		*			
ANR	3356497	PrimaryExpression	2		3353661	0					
ANR	3356498	Identifier	i		3353661	1					
ANR	3356499	Argument	2		3353661	1					
ANR	3356500	PrimaryExpression	2		3353661	0					
ANR	3356501	Argument	4		3353661	2					
ANR	3356502	PrimaryExpression	4		3353661	0					
ANR	3356503	Argument	8		3353661	3					
ANR	3356504	PrimaryExpression	8		3353661	0					
ANR	3356505	Argument	val		3353661	4					
ANR	3356506	Identifier	val		3353661	0					
ANR	3356507	Argument	4		3353661	5					
ANR	3356508	PrimaryExpression	4		3353661	0					
ANR	3356509	IfStatement	if ( IS_INTER ( mb_type ) )		3353661	22					
ANR	3356510	Condition	IS_INTER ( mb_type )	717:7:14922:14938	3353661	0	True				
ANR	3356511	CallExpression	IS_INTER ( mb_type )		3353661	0					
ANR	3356512	Callee	IS_INTER		3353661	0					
ANR	3356513	Identifier	IS_INTER		3353661	0					
ANR	3356514	ArgumentList	mb_type		3353661	1					
ANR	3356515	Argument	mb_type		3353661	0					
ANR	3356516	Identifier	mb_type		3353661	0					
ANR	3356517	ExpressionStatement	"write_back_motion ( h , mb_type )"	719:8:14950:14979	3353661	1	True				
ANR	3356518	CallExpression	"write_back_motion ( h , mb_type )"		3353661	0					
ANR	3356519	Callee	write_back_motion		3353661	0					
ANR	3356520	Identifier	write_back_motion		3353661	0					
ANR	3356521	ArgumentList	h		3353661	1					
ANR	3356522	Argument	h		3353661	0					
ANR	3356523	Identifier	h		3353661	0					
ANR	3356524	Argument	mb_type		3353661	1					
ANR	3356525	Identifier	mb_type		3353661	0					
ANR	3356526	IfStatement	if ( ! IS_INTRA16x16 ( mb_type ) )		3353661	23					
ANR	3356527	Condition	! IS_INTRA16x16 ( mb_type )	723:7:14991:15013	3353661	0	True				
ANR	3356528	UnaryOperationExpression	! IS_INTRA16x16 ( mb_type )		3353661	0					
ANR	3356529	UnaryOperator	!		3353661	0					
ANR	3356530	CallExpression	IS_INTRA16x16 ( mb_type )		3353661	1					
ANR	3356531	Callee	IS_INTRA16x16		3353661	0					
ANR	3356532	Identifier	IS_INTRA16x16		3353661	0					
ANR	3356533	ArgumentList	mb_type		3353661	1					
ANR	3356534	Argument	mb_type		3353661	0					
ANR	3356535	Identifier	mb_type		3353661	0					
ANR	3356536	CompoundStatement		723:31:14971:14971	3353661	1					
ANR	3356537	ExpressionStatement	cbp = get_ue_golomb ( & s -> gb )	725:8:15026:15052	3353661	0	True				
ANR	3356538	AssignmentExpression	cbp = get_ue_golomb ( & s -> gb )		3353661	0		=			
ANR	3356539	Identifier	cbp		3353661	0					
ANR	3356540	CallExpression	get_ue_golomb ( & s -> gb )		3353661	1					
ANR	3356541	Callee	get_ue_golomb		3353661	0					
ANR	3356542	Identifier	get_ue_golomb		3353661	0					
ANR	3356543	ArgumentList	& s -> gb		3353661	1					
ANR	3356544	Argument	& s -> gb		3353661	0					
ANR	3356545	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356546	UnaryOperator	&		3353661	0					
ANR	3356547	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356548	Identifier	s		3353661	0					
ANR	3356549	Identifier	gb		3353661	1					
ANR	3356550	IfStatement	if ( cbp > 47 )		3353661	1					
ANR	3356551	Condition	cbp > 47	727:11:15066:15073	3353661	0	True				
ANR	3356552	RelationalExpression	cbp > 47		3353661	0		>			
ANR	3356553	Identifier	cbp		3353661	0					
ANR	3356554	PrimaryExpression	47		3353661	1					
ANR	3356555	CompoundStatement		727:20:15031:15031	3353661	1					
ANR	3356556	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , s -> mb_x , s -> mb_y )"	729:12:15090:15178	3353661	0	True				
ANR	3356557	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3356558	Callee	av_log		3353661	0					
ANR	3356559	Identifier	av_log		3353661	0					
ANR	3356560	ArgumentList	h -> s . avctx		3353661	1					
ANR	3356561	Argument	h -> s . avctx		3353661	0					
ANR	3356562	MemberAccess	h -> s . avctx		3353661	0					
ANR	3356563	PtrMemberAccess	h -> s		3353661	0					
ANR	3356564	Identifier	h		3353661	0					
ANR	3356565	Identifier	s		3353661	1					
ANR	3356566	Identifier	avctx		3353661	1					
ANR	3356567	Argument	AV_LOG_ERROR		3353661	1					
ANR	3356568	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3356569	Argument	"""cbp too large (%u) at %d %d\\n"""		3353661	2					
ANR	3356570	PrimaryExpression	"""cbp too large (%u) at %d %d\\n"""		3353661	0					
ANR	3356571	Argument	cbp		3353661	3					
ANR	3356572	Identifier	cbp		3353661	0					
ANR	3356573	Argument	s -> mb_x		3353661	4					
ANR	3356574	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3356575	Identifier	s		3353661	0					
ANR	3356576	Identifier	mb_x		3353661	1					
ANR	3356577	Argument	s -> mb_y		3353661	5					
ANR	3356578	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3356579	Identifier	s		3353661	0					
ANR	3356580	Identifier	mb_y		3353661	1					
ANR	3356581	ReturnStatement	return - 1 ;	731:12:15193:15202	3353661	1	True				
ANR	3356582	UnaryOperationExpression	- 1		3353661	0					
ANR	3356583	UnaryOperator	-		3353661	0					
ANR	3356584	PrimaryExpression	1		3353661	1					
ANR	3356585	IfStatement	if ( CHROMA )		3353661	2					
ANR	3356586	Condition	CHROMA	737:11:15229:15234	3353661	0	True				
ANR	3356587	Identifier	CHROMA		3353661	0					
ANR	3356588	CompoundStatement		737:18:15192:15192	3353661	1					
ANR	3356589	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3353661	0					
ANR	3356590	Condition	IS_INTRA4x4 ( mb_type )	739:15:15254:15273	3353661	0	True				
ANR	3356591	CallExpression	IS_INTRA4x4 ( mb_type )		3353661	0					
ANR	3356592	Callee	IS_INTRA4x4		3353661	0					
ANR	3356593	Identifier	IS_INTRA4x4		3353661	0					
ANR	3356594	ArgumentList	mb_type		3353661	1					
ANR	3356595	Argument	mb_type		3353661	0					
ANR	3356596	Identifier	mb_type		3353661	0					
ANR	3356597	ExpressionStatement	cbp = golomb_to_intra4x4_cbp [ cbp ]	739:37:15276:15308	3353661	1	True				
ANR	3356598	AssignmentExpression	cbp = golomb_to_intra4x4_cbp [ cbp ]		3353661	0		=			
ANR	3356599	Identifier	cbp		3353661	0					
ANR	3356600	ArrayIndexing	golomb_to_intra4x4_cbp [ cbp ]		3353661	1					
ANR	3356601	Identifier	golomb_to_intra4x4_cbp		3353661	0					
ANR	3356602	Identifier	cbp		3353661	1					
ANR	3356603	ElseStatement	else		3353661	0					
ANR	3356604	ExpressionStatement	cbp = golomb_to_inter_cbp [ cbp ]	741:37:15348:15380	3353661	0	True				
ANR	3356605	AssignmentExpression	cbp = golomb_to_inter_cbp [ cbp ]		3353661	0		=			
ANR	3356606	Identifier	cbp		3353661	0					
ANR	3356607	ArrayIndexing	golomb_to_inter_cbp [ cbp ]		3353661	1					
ANR	3356608	Identifier	golomb_to_inter_cbp		3353661	0					
ANR	3356609	Identifier	cbp		3353661	1					
ANR	3356610	ElseStatement	else		3353661	0					
ANR	3356611	CompoundStatement		743:13:15352:15352	3353661	0					
ANR	3356612	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3353661	0					
ANR	3356613	Condition	IS_INTRA4x4 ( mb_type )	745:15:15414:15433	3353661	0	True				
ANR	3356614	CallExpression	IS_INTRA4x4 ( mb_type )		3353661	0					
ANR	3356615	Callee	IS_INTRA4x4		3353661	0					
ANR	3356616	Identifier	IS_INTRA4x4		3353661	0					
ANR	3356617	ArgumentList	mb_type		3353661	1					
ANR	3356618	Argument	mb_type		3353661	0					
ANR	3356619	Identifier	mb_type		3353661	0					
ANR	3356620	ExpressionStatement	cbp = golomb_to_intra4x4_cbp_gray [ cbp ]	745:37:15436:15473	3353661	1	True				
ANR	3356621	AssignmentExpression	cbp = golomb_to_intra4x4_cbp_gray [ cbp ]		3353661	0		=			
ANR	3356622	Identifier	cbp		3353661	0					
ANR	3356623	ArrayIndexing	golomb_to_intra4x4_cbp_gray [ cbp ]		3353661	1					
ANR	3356624	Identifier	golomb_to_intra4x4_cbp_gray		3353661	0					
ANR	3356625	Identifier	cbp		3353661	1					
ANR	3356626	ElseStatement	else		3353661	0					
ANR	3356627	ExpressionStatement	cbp = golomb_to_inter_cbp_gray [ cbp ]	747:37:15513:15547	3353661	0	True				
ANR	3356628	AssignmentExpression	cbp = golomb_to_inter_cbp_gray [ cbp ]		3353661	0		=			
ANR	3356629	Identifier	cbp		3353661	0					
ANR	3356630	ArrayIndexing	golomb_to_inter_cbp_gray [ cbp ]		3353661	1					
ANR	3356631	Identifier	golomb_to_inter_cbp_gray		3353661	0					
ANR	3356632	Identifier	cbp		3353661	1					
ANR	3356633	ExpressionStatement	h -> cbp = cbp	753:4:15572:15584	3353661	24	True				
ANR	3356634	AssignmentExpression	h -> cbp = cbp		3353661	0		=			
ANR	3356635	PtrMemberAccess	h -> cbp		3353661	0					
ANR	3356636	Identifier	h		3353661	0					
ANR	3356637	Identifier	cbp		3353661	1					
ANR	3356638	Identifier	cbp		3353661	1					
ANR	3356639	IfStatement	if ( dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type ) )		3353661	25					
ANR	3356640	Condition	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )	757:7:15596:15643	3353661	0	True				
ANR	3356641	AndExpression	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )		3353661	0		&&			
ANR	3356642	Identifier	dct8x8_allowed		3353661	0					
ANR	3356643	AndExpression	( cbp & 15 ) && ! IS_INTRA ( mb_type )		3353661	1		&&			
ANR	3356644	BitAndExpression	cbp & 15		3353661	0		&			
ANR	3356645	Identifier	cbp		3353661	0					
ANR	3356646	PrimaryExpression	15		3353661	1					
ANR	3356647	UnaryOperationExpression	! IS_INTRA ( mb_type )		3353661	1					
ANR	3356648	UnaryOperator	!		3353661	0					
ANR	3356649	CallExpression	IS_INTRA ( mb_type )		3353661	1					
ANR	3356650	Callee	IS_INTRA		3353661	0					
ANR	3356651	Identifier	IS_INTRA		3353661	0					
ANR	3356652	ArgumentList	mb_type		3353661	1					
ANR	3356653	Argument	mb_type		3353661	0					
ANR	3356654	Identifier	mb_type		3353661	0					
ANR	3356655	CompoundStatement		757:56:15601:15601	3353661	1					
ANR	3356656	IfStatement	if ( get_bits1 ( & s -> gb ) )		3353661	0					
ANR	3356657	Condition	get_bits1 ( & s -> gb )	759:11:15659:15675	3353661	0	True				
ANR	3356658	CallExpression	get_bits1 ( & s -> gb )		3353661	0					
ANR	3356659	Callee	get_bits1		3353661	0					
ANR	3356660	Identifier	get_bits1		3353661	0					
ANR	3356661	ArgumentList	& s -> gb		3353661	1					
ANR	3356662	Argument	& s -> gb		3353661	0					
ANR	3356663	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356664	UnaryOperator	&		3353661	0					
ANR	3356665	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356666	Identifier	s		3353661	0					
ANR	3356667	Identifier	gb		3353661	1					
ANR	3356668	CompoundStatement		759:29:15633:15633	3353661	1					
ANR	3356669	ExpressionStatement	mb_type |= MB_TYPE_8x8DCT	761:12:15692:15717	3353661	0	True				
ANR	3356670	AssignmentExpression	mb_type |= MB_TYPE_8x8DCT		3353661	0		|=			
ANR	3356671	Identifier	mb_type		3353661	0					
ANR	3356672	Identifier	MB_TYPE_8x8DCT		3353661	1					
ANR	3356673	ExpressionStatement	h -> cbp_table [ mb_xy ] = cbp	763:12:15732:15756	3353661	1	True				
ANR	3356674	AssignmentExpression	h -> cbp_table [ mb_xy ] = cbp		3353661	0		=			
ANR	3356675	ArrayIndexing	h -> cbp_table [ mb_xy ]		3353661	0					
ANR	3356676	PtrMemberAccess	h -> cbp_table		3353661	0					
ANR	3356677	Identifier	h		3353661	0					
ANR	3356678	Identifier	cbp_table		3353661	1					
ANR	3356679	Identifier	mb_xy		3353661	1					
ANR	3356680	Identifier	cbp		3353661	1					
ANR	3356681	ExpressionStatement	s -> current_picture . mb_type [ mb_xy ] = mb_type	769:4:15781:15823	3353661	26	True				
ANR	3356682	AssignmentExpression	s -> current_picture . mb_type [ mb_xy ] = mb_type		3353661	0		=			
ANR	3356683	ArrayIndexing	s -> current_picture . mb_type [ mb_xy ]		3353661	0					
ANR	3356684	MemberAccess	s -> current_picture . mb_type		3353661	0					
ANR	3356685	PtrMemberAccess	s -> current_picture		3353661	0					
ANR	3356686	Identifier	s		3353661	0					
ANR	3356687	Identifier	current_picture		3353661	1					
ANR	3356688	Identifier	mb_type		3353661	1					
ANR	3356689	Identifier	mb_xy		3353661	1					
ANR	3356690	Identifier	mb_type		3353661	1					
ANR	3356691	IfStatement	if ( cbp || IS_INTRA16x16 ( mb_type ) )		3353661	27					
ANR	3356692	Condition	cbp || IS_INTRA16x16 ( mb_type )	773:7:15835:15863	3353661	0	True				
ANR	3356693	OrExpression	cbp || IS_INTRA16x16 ( mb_type )		3353661	0		||			
ANR	3356694	Identifier	cbp		3353661	0					
ANR	3356695	CallExpression	IS_INTRA16x16 ( mb_type )		3353661	1					
ANR	3356696	Callee	IS_INTRA16x16		3353661	0					
ANR	3356697	Identifier	IS_INTRA16x16		3353661	0					
ANR	3356698	ArgumentList	mb_type		3353661	1					
ANR	3356699	Argument	mb_type		3353661	0					
ANR	3356700	Identifier	mb_type		3353661	0					
ANR	3356701	CompoundStatement		781:8:15973:16012	3353661	1					
ANR	3356702	IdentifierDeclStatement	"int i8x8 , i4x4 , chroma_idx ;"	775:8:15876:15902	3353661	0	True				
ANR	3356703	IdentifierDecl	i8x8		3353661	0					
ANR	3356704	IdentifierDeclType	int		3353661	0					
ANR	3356705	Identifier	i8x8		3353661	1					
ANR	3356706	IdentifierDecl	i4x4		3353661	1					
ANR	3356707	IdentifierDeclType	int		3353661	0					
ANR	3356708	Identifier	i4x4		3353661	1					
ANR	3356709	IdentifierDecl	chroma_idx		3353661	2					
ANR	3356710	IdentifierDeclType	int		3353661	0					
ANR	3356711	Identifier	chroma_idx		3353661	1					
ANR	3356712	IdentifierDeclStatement	int dquant ;	777:8:15913:15923	3353661	1	True				
ANR	3356713	IdentifierDecl	dquant		3353661	0					
ANR	3356714	IdentifierDeclType	int		3353661	0					
ANR	3356715	Identifier	dquant		3353661	1					
ANR	3356716	IdentifierDeclStatement	GetBitContext * gb = IS_INTRA ( mb_type ) ? h -> intra_gb_ptr : h -> inter_gb_ptr ;	779:8:15934:16006	3353661	2	True				
ANR	3356717	IdentifierDecl	* gb = IS_INTRA ( mb_type ) ? h -> intra_gb_ptr : h -> inter_gb_ptr		3353661	0					
ANR	3356718	IdentifierDeclType	GetBitContext *		3353661	0					
ANR	3356719	Identifier	gb		3353661	1					
ANR	3356720	AssignmentExpression	* gb = IS_INTRA ( mb_type ) ? h -> intra_gb_ptr : h -> inter_gb_ptr		3353661	2		=			
ANR	3356721	Identifier	gb		3353661	0					
ANR	3356722	ConditionalExpression	IS_INTRA ( mb_type ) ? h -> intra_gb_ptr : h -> inter_gb_ptr		3353661	1					
ANR	3356723	Condition	IS_INTRA ( mb_type )		3353661	0					
ANR	3356724	CallExpression	IS_INTRA ( mb_type )		3353661	0					
ANR	3356725	Callee	IS_INTRA		3353661	0					
ANR	3356726	Identifier	IS_INTRA		3353661	0					
ANR	3356727	ArgumentList	mb_type		3353661	1					
ANR	3356728	Argument	mb_type		3353661	0					
ANR	3356729	Identifier	mb_type		3353661	0					
ANR	3356730	PtrMemberAccess	h -> intra_gb_ptr		3353661	1					
ANR	3356731	Identifier	h		3353661	0					
ANR	3356732	Identifier	intra_gb_ptr		3353661	1					
ANR	3356733	PtrMemberAccess	h -> inter_gb_ptr		3353661	2					
ANR	3356734	Identifier	h		3353661	0					
ANR	3356735	Identifier	inter_gb_ptr		3353661	1					
ANR	3356736	IdentifierDeclStatement	"const uint8_t * scan , * scan8x8 , * dc_scan ;"	781:8:16017:16056	3353661	3	True				
ANR	3356737	IdentifierDecl	* scan		3353661	0					
ANR	3356738	IdentifierDeclType	const uint8_t *		3353661	0					
ANR	3356739	Identifier	scan		3353661	1					
ANR	3356740	IdentifierDecl	* scan8x8		3353661	1					
ANR	3356741	IdentifierDeclType	const uint8_t *		3353661	0					
ANR	3356742	Identifier	scan8x8		3353661	1					
ANR	3356743	IdentifierDecl	* dc_scan		3353661	2					
ANR	3356744	IdentifierDeclType	const uint8_t *		3353661	0					
ANR	3356745	Identifier	dc_scan		3353661	1					
ANR	3356746	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3353661	4					
ANR	3356747	Condition	IS_INTERLACED ( mb_type )	789:11:16115:16136	3353661	0	True				
ANR	3356748	CallExpression	IS_INTERLACED ( mb_type )		3353661	0					
ANR	3356749	Callee	IS_INTERLACED		3353661	0					
ANR	3356750	Identifier	IS_INTERLACED		3353661	0					
ANR	3356751	ArgumentList	mb_type		3353661	1					
ANR	3356752	Argument	mb_type		3353661	0					
ANR	3356753	Identifier	mb_type		3353661	0					
ANR	3356754	CompoundStatement		789:34:16094:16094	3353661	1					
ANR	3356755	ExpressionStatement	scan8x8 = s -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0	791:12:16153:16224	3353661	0	True				
ANR	3356756	AssignmentExpression	scan8x8 = s -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0		3353661	0		=			
ANR	3356757	Identifier	scan8x8		3353661	0					
ANR	3356758	ConditionalExpression	s -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0		3353661	1					
ANR	3356759	Condition	s -> qscale		3353661	0					
ANR	3356760	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356761	Identifier	s		3353661	0					
ANR	3356762	Identifier	qscale		3353661	1					
ANR	3356763	PtrMemberAccess	h -> field_scan8x8_cavlc		3353661	1					
ANR	3356764	Identifier	h		3353661	0					
ANR	3356765	Identifier	field_scan8x8_cavlc		3353661	1					
ANR	3356766	PtrMemberAccess	h -> field_scan8x8_cavlc_q0		3353661	2					
ANR	3356767	Identifier	h		3353661	0					
ANR	3356768	Identifier	field_scan8x8_cavlc_q0		3353661	1					
ANR	3356769	ExpressionStatement	scan = s -> qscale ? h -> field_scan : h -> field_scan_q0	793:12:16239:16289	3353661	1	True				
ANR	3356770	AssignmentExpression	scan = s -> qscale ? h -> field_scan : h -> field_scan_q0		3353661	0		=			
ANR	3356771	Identifier	scan		3353661	0					
ANR	3356772	ConditionalExpression	s -> qscale ? h -> field_scan : h -> field_scan_q0		3353661	1					
ANR	3356773	Condition	s -> qscale		3353661	0					
ANR	3356774	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356775	Identifier	s		3353661	0					
ANR	3356776	Identifier	qscale		3353661	1					
ANR	3356777	PtrMemberAccess	h -> field_scan		3353661	1					
ANR	3356778	Identifier	h		3353661	0					
ANR	3356779	Identifier	field_scan		3353661	1					
ANR	3356780	PtrMemberAccess	h -> field_scan_q0		3353661	2					
ANR	3356781	Identifier	h		3353661	0					
ANR	3356782	Identifier	field_scan_q0		3353661	1					
ANR	3356783	ExpressionStatement	dc_scan = luma_dc_field_scan	795:12:16304:16331	3353661	2	True				
ANR	3356784	AssignmentExpression	dc_scan = luma_dc_field_scan		3353661	0		=			
ANR	3356785	Identifier	dc_scan		3353661	0					
ANR	3356786	Identifier	luma_dc_field_scan		3353661	1					
ANR	3356787	ElseStatement	else		3353661	0					
ANR	3356788	CompoundStatement		797:13:16303:16303	3353661	0					
ANR	3356789	ExpressionStatement	scan8x8 = s -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0	799:12:16362:16435	3353661	0	True				
ANR	3356790	AssignmentExpression	scan8x8 = s -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0		3353661	0		=			
ANR	3356791	Identifier	scan8x8		3353661	0					
ANR	3356792	ConditionalExpression	s -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0		3353661	1					
ANR	3356793	Condition	s -> qscale		3353661	0					
ANR	3356794	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356795	Identifier	s		3353661	0					
ANR	3356796	Identifier	qscale		3353661	1					
ANR	3356797	PtrMemberAccess	h -> zigzag_scan8x8_cavlc		3353661	1					
ANR	3356798	Identifier	h		3353661	0					
ANR	3356799	Identifier	zigzag_scan8x8_cavlc		3353661	1					
ANR	3356800	PtrMemberAccess	h -> zigzag_scan8x8_cavlc_q0		3353661	2					
ANR	3356801	Identifier	h		3353661	0					
ANR	3356802	Identifier	zigzag_scan8x8_cavlc_q0		3353661	1					
ANR	3356803	ExpressionStatement	scan = s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0	801:12:16450:16502	3353661	1	True				
ANR	3356804	AssignmentExpression	scan = s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3353661	0		=			
ANR	3356805	Identifier	scan		3353661	0					
ANR	3356806	ConditionalExpression	s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3353661	1					
ANR	3356807	Condition	s -> qscale		3353661	0					
ANR	3356808	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356809	Identifier	s		3353661	0					
ANR	3356810	Identifier	qscale		3353661	1					
ANR	3356811	PtrMemberAccess	h -> zigzag_scan		3353661	1					
ANR	3356812	Identifier	h		3353661	0					
ANR	3356813	Identifier	zigzag_scan		3353661	1					
ANR	3356814	PtrMemberAccess	h -> zigzag_scan_q0		3353661	2					
ANR	3356815	Identifier	h		3353661	0					
ANR	3356816	Identifier	zigzag_scan_q0		3353661	1					
ANR	3356817	ExpressionStatement	dc_scan = luma_dc_zigzag_scan	803:12:16517:16545	3353661	2	True				
ANR	3356818	AssignmentExpression	dc_scan = luma_dc_zigzag_scan		3353661	0		=			
ANR	3356819	Identifier	dc_scan		3353661	0					
ANR	3356820	Identifier	luma_dc_zigzag_scan		3353661	1					
ANR	3356821	ExpressionStatement	dquant = get_se_golomb ( & s -> gb )	809:8:16569:16598	3353661	5	True				
ANR	3356822	AssignmentExpression	dquant = get_se_golomb ( & s -> gb )		3353661	0		=			
ANR	3356823	Identifier	dquant		3353661	0					
ANR	3356824	CallExpression	get_se_golomb ( & s -> gb )		3353661	1					
ANR	3356825	Callee	get_se_golomb		3353661	0					
ANR	3356826	Identifier	get_se_golomb		3353661	0					
ANR	3356827	ArgumentList	& s -> gb		3353661	1					
ANR	3356828	Argument	& s -> gb		3353661	0					
ANR	3356829	UnaryOperationExpression	& s -> gb		3353661	0					
ANR	3356830	UnaryOperator	&		3353661	0					
ANR	3356831	PtrMemberAccess	s -> gb		3353661	1					
ANR	3356832	Identifier	s		3353661	0					
ANR	3356833	Identifier	gb		3353661	1					
ANR	3356834	IfStatement	if ( dquant > 25 || dquant < - 26 )		3353661	6					
ANR	3356835	Condition	dquant > 25 || dquant < - 26	813:12:16615:16641	3353661	0	True				
ANR	3356836	OrExpression	dquant > 25 || dquant < - 26		3353661	0		||			
ANR	3356837	RelationalExpression	dquant > 25		3353661	0		>			
ANR	3356838	Identifier	dquant		3353661	0					
ANR	3356839	PrimaryExpression	25		3353661	1					
ANR	3356840	RelationalExpression	dquant < - 26		3353661	1		<			
ANR	3356841	Identifier	dquant		3353661	0					
ANR	3356842	UnaryOperationExpression	- 26		3353661	1					
ANR	3356843	UnaryOperator	-		3353661	0					
ANR	3356844	PrimaryExpression	26		3353661	1					
ANR	3356845	CompoundStatement		813:41:16600:16600	3353661	1					
ANR	3356846	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""dquant out of range (%d) at %d %d\\n"" , dquant , s -> mb_x , s -> mb_y )"	815:12:16659:16756	3353661	0	True				
ANR	3356847	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""dquant out of range (%d) at %d %d\\n"" , dquant , s -> mb_x , s -> mb_y )"		3353661	0					
ANR	3356848	Callee	av_log		3353661	0					
ANR	3356849	Identifier	av_log		3353661	0					
ANR	3356850	ArgumentList	h -> s . avctx		3353661	1					
ANR	3356851	Argument	h -> s . avctx		3353661	0					
ANR	3356852	MemberAccess	h -> s . avctx		3353661	0					
ANR	3356853	PtrMemberAccess	h -> s		3353661	0					
ANR	3356854	Identifier	h		3353661	0					
ANR	3356855	Identifier	s		3353661	1					
ANR	3356856	Identifier	avctx		3353661	1					
ANR	3356857	Argument	AV_LOG_ERROR		3353661	1					
ANR	3356858	Identifier	AV_LOG_ERROR		3353661	0					
ANR	3356859	Argument	"""dquant out of range (%d) at %d %d\\n"""		3353661	2					
ANR	3356860	PrimaryExpression	"""dquant out of range (%d) at %d %d\\n"""		3353661	0					
ANR	3356861	Argument	dquant		3353661	3					
ANR	3356862	Identifier	dquant		3353661	0					
ANR	3356863	Argument	s -> mb_x		3353661	4					
ANR	3356864	PtrMemberAccess	s -> mb_x		3353661	0					
ANR	3356865	Identifier	s		3353661	0					
ANR	3356866	Identifier	mb_x		3353661	1					
ANR	3356867	Argument	s -> mb_y		3353661	5					
ANR	3356868	PtrMemberAccess	s -> mb_y		3353661	0					
ANR	3356869	Identifier	s		3353661	0					
ANR	3356870	Identifier	mb_y		3353661	1					
ANR	3356871	ReturnStatement	return - 1 ;	817:12:16771:16780	3353661	1	True				
ANR	3356872	UnaryOperationExpression	- 1		3353661	0					
ANR	3356873	UnaryOperator	-		3353661	0					
ANR	3356874	PrimaryExpression	1		3353661	1					
ANR	3356875	ExpressionStatement	s -> qscale += dquant	823:8:16804:16823	3353661	7	True				
ANR	3356876	AssignmentExpression	s -> qscale += dquant		3353661	0		+=			
ANR	3356877	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356878	Identifier	s		3353661	0					
ANR	3356879	Identifier	qscale		3353661	1					
ANR	3356880	Identifier	dquant		3353661	1					
ANR	3356881	IfStatement	if ( ( ( unsigned ) s -> qscale ) > 51 )		3353661	8					
ANR	3356882	Condition	( ( unsigned ) s -> qscale ) > 51	825:11:16837:16862	3353661	0	True				
ANR	3356883	RelationalExpression	( ( unsigned ) s -> qscale ) > 51		3353661	0		>			
ANR	3356884	CastExpression	( unsigned ) s -> qscale		3353661	0					
ANR	3356885	CastTarget	unsigned		3353661	0					
ANR	3356886	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3356887	Identifier	s		3353661	0					
ANR	3356888	Identifier	qscale		3353661	1					
ANR	3356889	PrimaryExpression	51		3353661	1					
ANR	3356890	CompoundStatement		825:38:16820:16820	3353661	1					
ANR	3356891	IfStatement	if ( s -> qscale < 0 )		3353661	0					
ANR	3356892	Condition	s -> qscale < 0	827:15:16882:16892	3353661	0	True				
ANR	3356893	RelationalExpression	s -> qscale < 0		3353661	0		<			
ANR	3356894	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356895	Identifier	s		3353661	0					
ANR	3356896	Identifier	qscale		3353661	1					
ANR	3356897	PrimaryExpression	0		3353661	1					
ANR	3356898	ExpressionStatement	s -> qscale += 52	827:28:16895:16909	3353661	1	True				
ANR	3356899	AssignmentExpression	s -> qscale += 52		3353661	0		+=			
ANR	3356900	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356901	Identifier	s		3353661	0					
ANR	3356902	Identifier	qscale		3353661	1					
ANR	3356903	PrimaryExpression	52		3353661	1					
ANR	3356904	ElseStatement	else		3353661	0					
ANR	3356905	ExpressionStatement	s -> qscale -= 52	829:28:16940:16954	3353661	0	True				
ANR	3356906	AssignmentExpression	s -> qscale -= 52		3353661	0		-=			
ANR	3356907	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356908	Identifier	s		3353661	0					
ANR	3356909	Identifier	qscale		3353661	1					
ANR	3356910	PrimaryExpression	52		3353661	1					
ANR	3356911	ExpressionStatement	"h -> chroma_qp [ 0 ] = get_chroma_qp ( h , 0 , s -> qscale )"	835:8:16978:17025	3353661	9	True				
ANR	3356912	AssignmentExpression	"h -> chroma_qp [ 0 ] = get_chroma_qp ( h , 0 , s -> qscale )"		3353661	0		=			
ANR	3356913	ArrayIndexing	h -> chroma_qp [ 0 ]		3353661	0					
ANR	3356914	PtrMemberAccess	h -> chroma_qp		3353661	0					
ANR	3356915	Identifier	h		3353661	0					
ANR	3356916	Identifier	chroma_qp		3353661	1					
ANR	3356917	PrimaryExpression	0		3353661	1					
ANR	3356918	CallExpression	"get_chroma_qp ( h , 0 , s -> qscale )"		3353661	1					
ANR	3356919	Callee	get_chroma_qp		3353661	0					
ANR	3356920	Identifier	get_chroma_qp		3353661	0					
ANR	3356921	ArgumentList	h		3353661	1					
ANR	3356922	Argument	h		3353661	0					
ANR	3356923	Identifier	h		3353661	0					
ANR	3356924	Argument	0		3353661	1					
ANR	3356925	PrimaryExpression	0		3353661	0					
ANR	3356926	Argument	s -> qscale		3353661	2					
ANR	3356927	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356928	Identifier	s		3353661	0					
ANR	3356929	Identifier	qscale		3353661	1					
ANR	3356930	ExpressionStatement	"h -> chroma_qp [ 1 ] = get_chroma_qp ( h , 1 , s -> qscale )"	837:8:17036:17083	3353661	10	True				
ANR	3356931	AssignmentExpression	"h -> chroma_qp [ 1 ] = get_chroma_qp ( h , 1 , s -> qscale )"		3353661	0		=			
ANR	3356932	ArrayIndexing	h -> chroma_qp [ 1 ]		3353661	0					
ANR	3356933	PtrMemberAccess	h -> chroma_qp		3353661	0					
ANR	3356934	Identifier	h		3353661	0					
ANR	3356935	Identifier	chroma_qp		3353661	1					
ANR	3356936	PrimaryExpression	1		3353661	1					
ANR	3356937	CallExpression	"get_chroma_qp ( h , 1 , s -> qscale )"		3353661	1					
ANR	3356938	Callee	get_chroma_qp		3353661	0					
ANR	3356939	Identifier	get_chroma_qp		3353661	0					
ANR	3356940	ArgumentList	h		3353661	1					
ANR	3356941	Argument	h		3353661	0					
ANR	3356942	Identifier	h		3353661	0					
ANR	3356943	Argument	1		3353661	1					
ANR	3356944	PrimaryExpression	1		3353661	0					
ANR	3356945	Argument	s -> qscale		3353661	2					
ANR	3356946	PtrMemberAccess	s -> qscale		3353661	0					
ANR	3356947	Identifier	s		3353661	0					
ANR	3356948	Identifier	qscale		3353661	1					
ANR	3356949	IfStatement	if ( IS_INTRA16x16 ( mb_type ) )		3353661	11					
ANR	3356950	Condition	IS_INTRA16x16 ( mb_type )	839:11:17097:17118	3353661	0	True				
ANR	3356951	CallExpression	IS_INTRA16x16 ( mb_type )		3353661	0					
ANR	3356952	Callee	IS_INTRA16x16		3353661	0					
ANR	3356953	Identifier	IS_INTRA16x16		3353661	0					
ANR	3356954	ArgumentList	mb_type		3353661	1					
ANR	3356955	Argument	mb_type		3353661	0					
ANR	3356956	Identifier	mb_type		3353661	0					
ANR	3356957	CompoundStatement		839:34:17076:17076	3353661	1					
ANR	3356958	IfStatement	"if ( decode_residual ( h , h -> intra_gb_ptr , h -> mb , LUMA_DC_BLOCK_INDEX , dc_scan , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 16 ) < 0 )"		3353661	0					
ANR	3356959	Condition	"decode_residual ( h , h -> intra_gb_ptr , h -> mb , LUMA_DC_BLOCK_INDEX , dc_scan , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 16 ) < 0"	841:16:17139:17251	3353661	0	True				
ANR	3356960	RelationalExpression	"decode_residual ( h , h -> intra_gb_ptr , h -> mb , LUMA_DC_BLOCK_INDEX , dc_scan , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 16 ) < 0"		3353661	0		<			
ANR	3356961	CallExpression	"decode_residual ( h , h -> intra_gb_ptr , h -> mb , LUMA_DC_BLOCK_INDEX , dc_scan , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 16 )"		3353661	0					
ANR	3356962	Callee	decode_residual		3353661	0					
ANR	3356963	Identifier	decode_residual		3353661	0					
ANR	3356964	ArgumentList	h		3353661	1					
ANR	3356965	Argument	h		3353661	0					
ANR	3356966	Identifier	h		3353661	0					
ANR	3356967	Argument	h -> intra_gb_ptr		3353661	1					
ANR	3356968	PtrMemberAccess	h -> intra_gb_ptr		3353661	0					
ANR	3356969	Identifier	h		3353661	0					
ANR	3356970	Identifier	intra_gb_ptr		3353661	1					
ANR	3356971	Argument	h -> mb		3353661	2					
ANR	3356972	PtrMemberAccess	h -> mb		3353661	0					
ANR	3356973	Identifier	h		3353661	0					
ANR	3356974	Identifier	mb		3353661	1					
ANR	3356975	Argument	LUMA_DC_BLOCK_INDEX		3353661	3					
ANR	3356976	Identifier	LUMA_DC_BLOCK_INDEX		3353661	0					
ANR	3356977	Argument	dc_scan		3353661	4					
ANR	3356978	Identifier	dc_scan		3353661	0					
ANR	3356979	Argument	h -> dequant4_coeff [ 0 ] [ s -> qscale ]		3353661	5					
ANR	3356980	ArrayIndexing	h -> dequant4_coeff [ 0 ] [ s -> qscale ]		3353661	0					
ANR	3356981	ArrayIndexing	h -> dequant4_coeff [ 0 ]		3353661	0					
ANR	3356982	PtrMemberAccess	h -> dequant4_coeff		3353661	0					
ANR	3356983	Identifier	h		3353661	0					
ANR	3356984	Identifier	dequant4_coeff		3353661	1					
ANR	3356985	PrimaryExpression	0		3353661	1					
ANR	3356986	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3356987	Identifier	s		3353661	0					
ANR	3356988	Identifier	qscale		3353661	1					
ANR	3356989	Argument	16		3353661	6					
ANR	3356990	PrimaryExpression	16		3353661	0					
ANR	3356991	PrimaryExpression	0		3353661	1					
ANR	3356992	CompoundStatement		841:130:17209:17209	3353661	1					
ANR	3356993	ReturnStatement	return - 1 ;	843:16:17272:17281	3353661	0	True				
ANR	3356994	UnaryOperationExpression	- 1		3353661	0					
ANR	3356995	UnaryOperator	-		3353661	0					
ANR	3356996	PrimaryExpression	1		3353661	1					
ANR	3356997	ExpressionStatement	assert ( ( cbp & 15 ) == 0 || ( cbp & 15 ) == 15 )	849:12:17369:17408	3353661	1	True				
ANR	3356998	CallExpression	assert ( ( cbp & 15 ) == 0 || ( cbp & 15 ) == 15 )		3353661	0					
ANR	3356999	Callee	assert		3353661	0					
ANR	3357000	Identifier	assert		3353661	0					
ANR	3357001	ArgumentList	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		3353661	1					
ANR	3357002	Argument	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		3353661	0					
ANR	3357003	OrExpression	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		3353661	0		||			
ANR	3357004	EqualityExpression	( cbp & 15 ) == 0		3353661	0		==			
ANR	3357005	BitAndExpression	cbp & 15		3353661	0		&			
ANR	3357006	Identifier	cbp		3353661	0					
ANR	3357007	PrimaryExpression	15		3353661	1					
ANR	3357008	PrimaryExpression	0		3353661	1					
ANR	3357009	EqualityExpression	( cbp & 15 ) == 15		3353661	1		==			
ANR	3357010	BitAndExpression	cbp & 15		3353661	0		&			
ANR	3357011	Identifier	cbp		3353661	0					
ANR	3357012	PrimaryExpression	15		3353661	1					
ANR	3357013	PrimaryExpression	15		3353661	1					
ANR	3357014	IfStatement	if ( cbp & 15 )		3353661	2					
ANR	3357015	Condition	cbp & 15	853:15:17428:17433	3353661	0	True				
ANR	3357016	BitAndExpression	cbp & 15		3353661	0		&			
ANR	3357017	Identifier	cbp		3353661	0					
ANR	3357018	PrimaryExpression	15		3353661	1					
ANR	3357019	CompoundStatement		853:22:17391:17391	3353661	1					
ANR	3357020	ForStatement	for ( i8x8 = 0 ; i8x8 < 4 ; i8x8 ++ )		3353661	0					
ANR	3357021	ForInit	i8x8 = 0 ;	855:20:17458:17464	3353661	0	True				
ANR	3357022	AssignmentExpression	i8x8 = 0		3353661	0		=			
ANR	3357023	Identifier	i8x8		3353661	0					
ANR	3357024	PrimaryExpression	0		3353661	1					
ANR	3357025	Condition	i8x8 < 4	855:28:17466:17471	3353661	1	True				
ANR	3357026	RelationalExpression	i8x8 < 4		3353661	0		<			
ANR	3357027	Identifier	i8x8		3353661	0					
ANR	3357028	PrimaryExpression	4		3353661	1					
ANR	3357029	PostIncDecOperationExpression	i8x8 ++	855:36:17474:17479	3353661	2	True				
ANR	3357030	Identifier	i8x8		3353661	0					
ANR	3357031	IncDec	++		3353661	1					
ANR	3357032	CompoundStatement		855:43:17437:17437	3353661	3					
ANR	3357033	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		3353661	0					
ANR	3357034	ForInit	i4x4 = 0 ;	857:24:17508:17514	3353661	0	True				
ANR	3357035	AssignmentExpression	i4x4 = 0		3353661	0		=			
ANR	3357036	Identifier	i4x4		3353661	0					
ANR	3357037	PrimaryExpression	0		3353661	1					
ANR	3357038	Condition	i4x4 < 4	857:32:17516:17521	3353661	1	True				
ANR	3357039	RelationalExpression	i4x4 < 4		3353661	0		<			
ANR	3357040	Identifier	i4x4		3353661	0					
ANR	3357041	PrimaryExpression	4		3353661	1					
ANR	3357042	PostIncDecOperationExpression	i4x4 ++	857:40:17524:17529	3353661	2	True				
ANR	3357043	Identifier	i4x4		3353661	0					
ANR	3357044	IncDec	++		3353661	1					
ANR	3357045	CompoundStatement		859:24:17514:17544	3353661	3					
ANR	3357046	IdentifierDeclStatement	const int index = i4x4 + 4 * i8x8 ;	859:24:17558:17588	3353661	0	True				
ANR	3357047	IdentifierDecl	index = i4x4 + 4 * i8x8		3353661	0					
ANR	3357048	IdentifierDeclType	const int		3353661	0					
ANR	3357049	Identifier	index		3353661	1					
ANR	3357050	AssignmentExpression	index = i4x4 + 4 * i8x8		3353661	2		=			
ANR	3357051	Identifier	index		3353661	0					
ANR	3357052	AdditiveExpression	i4x4 + 4 * i8x8		3353661	1		+			
ANR	3357053	Identifier	i4x4		3353661	0					
ANR	3357054	MultiplicativeExpression	4 * i8x8		3353661	1		*			
ANR	3357055	PrimaryExpression	4		3353661	0					
ANR	3357056	Identifier	i8x8		3353661	1					
ANR	3357057	IfStatement	"if ( decode_residual ( h , h -> intra_gb_ptr , h -> mb + 16 * index , index , scan + 1 , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 15 ) < 0 )"		3353661	1					
ANR	3357058	Condition	"decode_residual ( h , h -> intra_gb_ptr , h -> mb + 16 * index , index , scan + 1 , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 15 ) < 0"	861:28:17619:17729	3353661	0	True				
ANR	3357059	RelationalExpression	"decode_residual ( h , h -> intra_gb_ptr , h -> mb + 16 * index , index , scan + 1 , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 15 ) < 0"		3353661	0		<			
ANR	3357060	CallExpression	"decode_residual ( h , h -> intra_gb_ptr , h -> mb + 16 * index , index , scan + 1 , h -> dequant4_coeff [ 0 ] [ s -> qscale ] , 15 )"		3353661	0					
ANR	3357061	Callee	decode_residual		3353661	0					
ANR	3357062	Identifier	decode_residual		3353661	0					
ANR	3357063	ArgumentList	h		3353661	1					
ANR	3357064	Argument	h		3353661	0					
ANR	3357065	Identifier	h		3353661	0					
ANR	3357066	Argument	h -> intra_gb_ptr		3353661	1					
ANR	3357067	PtrMemberAccess	h -> intra_gb_ptr		3353661	0					
ANR	3357068	Identifier	h		3353661	0					
ANR	3357069	Identifier	intra_gb_ptr		3353661	1					
ANR	3357070	Argument	h -> mb + 16 * index		3353661	2					
ANR	3357071	AdditiveExpression	h -> mb + 16 * index		3353661	0		+			
ANR	3357072	PtrMemberAccess	h -> mb		3353661	0					
ANR	3357073	Identifier	h		3353661	0					
ANR	3357074	Identifier	mb		3353661	1					
ANR	3357075	MultiplicativeExpression	16 * index		3353661	1		*			
ANR	3357076	PrimaryExpression	16		3353661	0					
ANR	3357077	Identifier	index		3353661	1					
ANR	3357078	Argument	index		3353661	3					
ANR	3357079	Identifier	index		3353661	0					
ANR	3357080	Argument	scan + 1		3353661	4					
ANR	3357081	AdditiveExpression	scan + 1		3353661	0		+			
ANR	3357082	Identifier	scan		3353661	0					
ANR	3357083	PrimaryExpression	1		3353661	1					
ANR	3357084	Argument	h -> dequant4_coeff [ 0 ] [ s -> qscale ]		3353661	5					
ANR	3357085	ArrayIndexing	h -> dequant4_coeff [ 0 ] [ s -> qscale ]		3353661	0					
ANR	3357086	ArrayIndexing	h -> dequant4_coeff [ 0 ]		3353661	0					
ANR	3357087	PtrMemberAccess	h -> dequant4_coeff		3353661	0					
ANR	3357088	Identifier	h		3353661	0					
ANR	3357089	Identifier	dequant4_coeff		3353661	1					
ANR	3357090	PrimaryExpression	0		3353661	1					
ANR	3357091	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3357092	Identifier	s		3353661	0					
ANR	3357093	Identifier	qscale		3353661	1					
ANR	3357094	Argument	15		3353661	6					
ANR	3357095	PrimaryExpression	15		3353661	0					
ANR	3357096	PrimaryExpression	0		3353661	1					
ANR	3357097	CompoundStatement		861:141:17688:17688	3353661	1					
ANR	3357098	ReturnStatement	return - 1 ;	863:28:17763:17772	3353661	0	True				
ANR	3357099	UnaryOperationExpression	- 1		3353661	0					
ANR	3357100	UnaryOperator	-		3353661	0					
ANR	3357101	PrimaryExpression	1		3353661	1					
ANR	3357102	ElseStatement	else		3353661	0					
ANR	3357103	CompoundStatement		871:17:17817:17817	3353661	0					
ANR	3357104	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"	873:16:17880:17945	3353661	0	True				
ANR	3357105	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"		3353661	0					
ANR	3357106	Callee	fill_rectangle		3353661	0					
ANR	3357107	Identifier	fill_rectangle		3353661	0					
ANR	3357108	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3353661	1					
ANR	3357109	Argument	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3353661	0					
ANR	3357110	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3353661	0					
ANR	3357111	UnaryOperator	&		3353661	0					
ANR	3357112	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 0 ] ]		3353661	1					
ANR	3357113	PtrMemberAccess	h -> non_zero_count_cache		3353661	0					
ANR	3357114	Identifier	h		3353661	0					
ANR	3357115	Identifier	non_zero_count_cache		3353661	1					
ANR	3357116	ArrayIndexing	scan8 [ 0 ]		3353661	1					
ANR	3357117	Identifier	scan8		3353661	0					
ANR	3357118	PrimaryExpression	0		3353661	1					
ANR	3357119	Argument	4		3353661	1					
ANR	3357120	PrimaryExpression	4		3353661	0					
ANR	3357121	Argument	4		3353661	2					
ANR	3357122	PrimaryExpression	4		3353661	0					
ANR	3357123	Argument	8		3353661	3					
ANR	3357124	PrimaryExpression	8		3353661	0					
ANR	3357125	Argument	0		3353661	4					
ANR	3357126	PrimaryExpression	0		3353661	0					
ANR	3357127	Argument	1		3353661	5					
ANR	3357128	PrimaryExpression	1		3353661	0					
ANR	3357129	ElseStatement	else		3353661	0					
ANR	3357130	CompoundStatement		877:13:17932:17932	3353661	0					
ANR	3357131	ForStatement	for ( i8x8 = 0 ; i8x8 < 4 ; i8x8 ++ )		3353661	0					
ANR	3357132	ForInit	i8x8 = 0 ;	879:16:17995:18001	3353661	0	True				
ANR	3357133	AssignmentExpression	i8x8 = 0		3353661	0		=			
ANR	3357134	Identifier	i8x8		3353661	0					
ANR	3357135	PrimaryExpression	0		3353661	1					
ANR	3357136	Condition	i8x8 < 4	879:24:18003:18008	3353661	1	True				
ANR	3357137	RelationalExpression	i8x8 < 4		3353661	0		<			
ANR	3357138	Identifier	i8x8		3353661	0					
ANR	3357139	PrimaryExpression	4		3353661	1					
ANR	3357140	PostIncDecOperationExpression	i8x8 ++	879:32:18011:18016	3353661	2	True				
ANR	3357141	Identifier	i8x8		3353661	0					
ANR	3357142	IncDec	++		3353661	1					
ANR	3357143	CompoundStatement		879:39:17974:17974	3353661	3					
ANR	3357144	IfStatement	if ( cbp & ( 1 << i8x8 ) )		3353661	0					
ANR	3357145	Condition	cbp & ( 1 << i8x8 )	881:19:18040:18054	3353661	0	True				
ANR	3357146	BitAndExpression	cbp & ( 1 << i8x8 )		3353661	0		&			
ANR	3357147	Identifier	cbp		3353661	0					
ANR	3357148	ShiftExpression	1 << i8x8		3353661	1		<<			
ANR	3357149	PrimaryExpression	1		3353661	0					
ANR	3357150	Identifier	i8x8		3353661	1					
ANR	3357151	CompoundStatement		881:35:18012:18012	3353661	1					
ANR	3357152	IfStatement	if ( IS_8x8DCT ( mb_type ) )		3353661	0					
ANR	3357153	Condition	IS_8x8DCT ( mb_type )	883:23:18082:18099	3353661	0	True				
ANR	3357154	CallExpression	IS_8x8DCT ( mb_type )		3353661	0					
ANR	3357155	Callee	IS_8x8DCT		3353661	0					
ANR	3357156	Identifier	IS_8x8DCT		3353661	0					
ANR	3357157	ArgumentList	mb_type		3353661	1					
ANR	3357158	Argument	mb_type		3353661	0					
ANR	3357159	Identifier	mb_type		3353661	0					
ANR	3357160	CompoundStatement		887:24:18141:18153	3353661	1					
ANR	3357161	IdentifierDeclStatement	DCTELEM * buf = & h -> mb [ 64 * i8x8 ] ;	885:24:18128:18158	3353661	0	True				
ANR	3357162	IdentifierDecl	* buf = & h -> mb [ 64 * i8x8 ]		3353661	0					
ANR	3357163	IdentifierDeclType	DCTELEM *		3353661	0					
ANR	3357164	Identifier	buf		3353661	1					
ANR	3357165	AssignmentExpression	* buf = & h -> mb [ 64 * i8x8 ]		3353661	2		=			
ANR	3357166	Identifier	buf		3353661	0					
ANR	3357167	UnaryOperationExpression	& h -> mb [ 64 * i8x8 ]		3353661	1					
ANR	3357168	UnaryOperator	&		3353661	0					
ANR	3357169	ArrayIndexing	h -> mb [ 64 * i8x8 ]		3353661	1					
ANR	3357170	PtrMemberAccess	h -> mb		3353661	0					
ANR	3357171	Identifier	h		3353661	0					
ANR	3357172	Identifier	mb		3353661	1					
ANR	3357173	MultiplicativeExpression	64 * i8x8		3353661	1		*			
ANR	3357174	PrimaryExpression	64		3353661	0					
ANR	3357175	Identifier	i8x8		3353661	1					
ANR	3357176	IdentifierDeclStatement	uint8_t * nnz ;	887:24:18185:18197	3353661	1	True				
ANR	3357177	IdentifierDecl	* nnz		3353661	0					
ANR	3357178	IdentifierDeclType	uint8_t *		3353661	0					
ANR	3357179	Identifier	nnz		3353661	1					
ANR	3357180	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		3353661	2					
ANR	3357181	ForInit	i4x4 = 0 ;	889:28:18228:18234	3353661	0	True				
ANR	3357182	AssignmentExpression	i4x4 = 0		3353661	0		=			
ANR	3357183	Identifier	i4x4		3353661	0					
ANR	3357184	PrimaryExpression	0		3353661	1					
ANR	3357185	Condition	i4x4 < 4	889:36:18236:18241	3353661	1	True				
ANR	3357186	RelationalExpression	i4x4 < 4		3353661	0		<			
ANR	3357187	Identifier	i4x4		3353661	0					
ANR	3357188	PrimaryExpression	4		3353661	1					
ANR	3357189	PostIncDecOperationExpression	i4x4 ++	889:44:18244:18249	3353661	2	True				
ANR	3357190	Identifier	i4x4		3353661	0					
ANR	3357191	IncDec	++		3353661	1					
ANR	3357192	CompoundStatement		889:51:18207:18207	3353661	3					
ANR	3357193	IfStatement	"if ( decode_residual ( h , gb , buf , i4x4 + 4 * i8x8 , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ] , 16 ) < 0 )"		3353661	0					
ANR	3357194	Condition	"decode_residual ( h , gb , buf , i4x4 + 4 * i8x8 , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ] , 16 ) < 0"	891:32:18286:18455	3353661	0	True				
ANR	3357195	RelationalExpression	"decode_residual ( h , gb , buf , i4x4 + 4 * i8x8 , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ] , 16 ) < 0"		3353661	0		<			
ANR	3357196	CallExpression	"decode_residual ( h , gb , buf , i4x4 + 4 * i8x8 , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ] , 16 )"		3353661	0					
ANR	3357197	Callee	decode_residual		3353661	0					
ANR	3357198	Identifier	decode_residual		3353661	0					
ANR	3357199	ArgumentList	h		3353661	1					
ANR	3357200	Argument	h		3353661	0					
ANR	3357201	Identifier	h		3353661	0					
ANR	3357202	Argument	gb		3353661	1					
ANR	3357203	Identifier	gb		3353661	0					
ANR	3357204	Argument	buf		3353661	2					
ANR	3357205	Identifier	buf		3353661	0					
ANR	3357206	Argument	i4x4 + 4 * i8x8		3353661	3					
ANR	3357207	AdditiveExpression	i4x4 + 4 * i8x8		3353661	0		+			
ANR	3357208	Identifier	i4x4		3353661	0					
ANR	3357209	MultiplicativeExpression	4 * i8x8		3353661	1		*			
ANR	3357210	PrimaryExpression	4		3353661	0					
ANR	3357211	Identifier	i8x8		3353661	1					
ANR	3357212	Argument	scan8x8 + 16 * i4x4		3353661	4					
ANR	3357213	AdditiveExpression	scan8x8 + 16 * i4x4		3353661	0		+			
ANR	3357214	Identifier	scan8x8		3353661	0					
ANR	3357215	MultiplicativeExpression	16 * i4x4		3353661	1		*			
ANR	3357216	PrimaryExpression	16		3353661	0					
ANR	3357217	Identifier	i4x4		3353661	1					
ANR	3357218	Argument	h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ]		3353661	5					
ANR	3357219	ArrayIndexing	h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ] [ s -> qscale ]		3353661	0					
ANR	3357220	ArrayIndexing	h -> dequant8_coeff [ IS_INTRA ( mb_type ) ? 0 : 1 ]		3353661	0					
ANR	3357221	PtrMemberAccess	h -> dequant8_coeff		3353661	0					
ANR	3357222	Identifier	h		3353661	0					
ANR	3357223	Identifier	dequant8_coeff		3353661	1					
ANR	3357224	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 1		3353661	1					
ANR	3357225	Condition	IS_INTRA ( mb_type )		3353661	0					
ANR	3357226	CallExpression	IS_INTRA ( mb_type )		3353661	0					
ANR	3357227	Callee	IS_INTRA		3353661	0					
ANR	3357228	Identifier	IS_INTRA		3353661	0					
ANR	3357229	ArgumentList	mb_type		3353661	1					
ANR	3357230	Argument	mb_type		3353661	0					
ANR	3357231	Identifier	mb_type		3353661	0					
ANR	3357232	PrimaryExpression	0		3353661	1					
ANR	3357233	PrimaryExpression	1		3353661	2					
ANR	3357234	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3357235	Identifier	s		3353661	0					
ANR	3357236	Identifier	qscale		3353661	1					
ANR	3357237	Argument	16		3353661	6					
ANR	3357238	PrimaryExpression	16		3353661	0					
ANR	3357239	PrimaryExpression	0		3353661	1					
ANR	3357240	ReturnStatement	return - 1 ;	895:32:18492:18501	3353661	1	True				
ANR	3357241	UnaryOperationExpression	- 1		3353661	0					
ANR	3357242	UnaryOperator	-		3353661	0					
ANR	3357243	PrimaryExpression	1		3353661	1					
ANR	3357244	ExpressionStatement	nnz = & h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]	899:24:18555:18601	3353661	3	True				
ANR	3357245	AssignmentExpression	nnz = & h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	0		=			
ANR	3357246	Identifier	nnz		3353661	0					
ANR	3357247	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	1					
ANR	3357248	UnaryOperator	&		3353661	0					
ANR	3357249	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	1					
ANR	3357250	PtrMemberAccess	h -> non_zero_count_cache		3353661	0					
ANR	3357251	Identifier	h		3353661	0					
ANR	3357252	Identifier	non_zero_count_cache		3353661	1					
ANR	3357253	ArrayIndexing	scan8 [ 4 * i8x8 ]		3353661	1					
ANR	3357254	Identifier	scan8		3353661	0					
ANR	3357255	MultiplicativeExpression	4 * i8x8		3353661	1		*			
ANR	3357256	PrimaryExpression	4		3353661	0					
ANR	3357257	Identifier	i8x8		3353661	1					
ANR	3357258	ExpressionStatement	nnz [ 0 ] += nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]	901:24:18628:18662	3353661	4	True				
ANR	3357259	AssignmentExpression	nnz [ 0 ] += nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]		3353661	0		+=			
ANR	3357260	ArrayIndexing	nnz [ 0 ]		3353661	0					
ANR	3357261	Identifier	nnz		3353661	0					
ANR	3357262	PrimaryExpression	0		3353661	1					
ANR	3357263	AdditiveExpression	nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]		3353661	1		+			
ANR	3357264	ArrayIndexing	nnz [ 1 ]		3353661	0					
ANR	3357265	Identifier	nnz		3353661	0					
ANR	3357266	PrimaryExpression	1		3353661	1					
ANR	3357267	AdditiveExpression	nnz [ 8 ] + nnz [ 9 ]		3353661	1		+			
ANR	3357268	ArrayIndexing	nnz [ 8 ]		3353661	0					
ANR	3357269	Identifier	nnz		3353661	0					
ANR	3357270	PrimaryExpression	8		3353661	1					
ANR	3357271	ArrayIndexing	nnz [ 9 ]		3353661	1					
ANR	3357272	Identifier	nnz		3353661	0					
ANR	3357273	PrimaryExpression	9		3353661	1					
ANR	3357274	ElseStatement	else		3353661	0					
ANR	3357275	CompoundStatement		903:25:18646:18646	3353661	0					
ANR	3357276	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		3353661	0					
ANR	3357277	ForInit	i4x4 = 0 ;	905:28:18721:18727	3353661	0	True				
ANR	3357278	AssignmentExpression	i4x4 = 0		3353661	0		=			
ANR	3357279	Identifier	i4x4		3353661	0					
ANR	3357280	PrimaryExpression	0		3353661	1					
ANR	3357281	Condition	i4x4 < 4	905:36:18729:18734	3353661	1	True				
ANR	3357282	RelationalExpression	i4x4 < 4		3353661	0		<			
ANR	3357283	Identifier	i4x4		3353661	0					
ANR	3357284	PrimaryExpression	4		3353661	1					
ANR	3357285	PostIncDecOperationExpression	i4x4 ++	905:44:18737:18742	3353661	2	True				
ANR	3357286	Identifier	i4x4		3353661	0					
ANR	3357287	IncDec	++		3353661	1					
ANR	3357288	CompoundStatement		907:28:18731:18761	3353661	3					
ANR	3357289	IdentifierDeclStatement	const int index = i4x4 + 4 * i8x8 ;	907:28:18775:18805	3353661	0	True				
ANR	3357290	IdentifierDecl	index = i4x4 + 4 * i8x8		3353661	0					
ANR	3357291	IdentifierDeclType	const int		3353661	0					
ANR	3357292	Identifier	index		3353661	1					
ANR	3357293	AssignmentExpression	index = i4x4 + 4 * i8x8		3353661	2		=			
ANR	3357294	Identifier	index		3353661	0					
ANR	3357295	AdditiveExpression	i4x4 + 4 * i8x8		3353661	1		+			
ANR	3357296	Identifier	i4x4		3353661	0					
ANR	3357297	MultiplicativeExpression	4 * i8x8		3353661	1		*			
ANR	3357298	PrimaryExpression	4		3353661	0					
ANR	3357299	Identifier	i8x8		3353661	1					
ANR	3357300	IfStatement	"if ( decode_residual ( h , gb , h -> mb + 16 * index , index , scan , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ] , 16 ) < 0 )"		3353661	1					
ANR	3357301	Condition	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ] , 16 ) < 0"	911:32:18842:18958	3353661	0	True				
ANR	3357302	RelationalExpression	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ] , 16 ) < 0"		3353661	0		<			
ANR	3357303	CallExpression	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ] , 16 )"		3353661	0					
ANR	3357304	Callee	decode_residual		3353661	0					
ANR	3357305	Identifier	decode_residual		3353661	0					
ANR	3357306	ArgumentList	h		3353661	1					
ANR	3357307	Argument	h		3353661	0					
ANR	3357308	Identifier	h		3353661	0					
ANR	3357309	Argument	gb		3353661	1					
ANR	3357310	Identifier	gb		3353661	0					
ANR	3357311	Argument	h -> mb + 16 * index		3353661	2					
ANR	3357312	AdditiveExpression	h -> mb + 16 * index		3353661	0		+			
ANR	3357313	PtrMemberAccess	h -> mb		3353661	0					
ANR	3357314	Identifier	h		3353661	0					
ANR	3357315	Identifier	mb		3353661	1					
ANR	3357316	MultiplicativeExpression	16 * index		3353661	1		*			
ANR	3357317	PrimaryExpression	16		3353661	0					
ANR	3357318	Identifier	index		3353661	1					
ANR	3357319	Argument	index		3353661	3					
ANR	3357320	Identifier	index		3353661	0					
ANR	3357321	Argument	scan		3353661	4					
ANR	3357322	Identifier	scan		3353661	0					
ANR	3357323	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ]		3353661	5					
ANR	3357324	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ] [ s -> qscale ]		3353661	0					
ANR	3357325	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 0 : 3 ]		3353661	0					
ANR	3357326	PtrMemberAccess	h -> dequant4_coeff		3353661	0					
ANR	3357327	Identifier	h		3353661	0					
ANR	3357328	Identifier	dequant4_coeff		3353661	1					
ANR	3357329	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		3353661	1					
ANR	3357330	Condition	IS_INTRA ( mb_type )		3353661	0					
ANR	3357331	CallExpression	IS_INTRA ( mb_type )		3353661	0					
ANR	3357332	Callee	IS_INTRA		3353661	0					
ANR	3357333	Identifier	IS_INTRA		3353661	0					
ANR	3357334	ArgumentList	mb_type		3353661	1					
ANR	3357335	Argument	mb_type		3353661	0					
ANR	3357336	Identifier	mb_type		3353661	0					
ANR	3357337	PrimaryExpression	0		3353661	1					
ANR	3357338	PrimaryExpression	3		3353661	2					
ANR	3357339	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3357340	Identifier	s		3353661	0					
ANR	3357341	Identifier	qscale		3353661	1					
ANR	3357342	Argument	16		3353661	6					
ANR	3357343	PrimaryExpression	16		3353661	0					
ANR	3357344	PrimaryExpression	0		3353661	1					
ANR	3357345	CompoundStatement		911:151:18917:18917	3353661	1					
ANR	3357346	ReturnStatement	return - 1 ;	913:32:18996:19005	3353661	0	True				
ANR	3357347	UnaryOperationExpression	- 1		3353661	0					
ANR	3357348	UnaryOperator	-		3353661	0					
ANR	3357349	PrimaryExpression	1		3353661	1					
ANR	3357350	ElseStatement	else		3353661	0					
ANR	3357351	CompoundStatement		921:21:19066:19066	3353661	0					
ANR	3357352	Statement	uint8_t	923:20:19133:19139	3353661	0	True				
ANR	3357353	Statement	*	923:28:19141:19141	3353661	1	True				
ANR	3357354	Statement	const	923:30:19143:19147	3353661	2	True				
ANR	3357355	ExpressionStatement	nnz = & h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]	923:36:19149:19195	3353661	3	True				
ANR	3357356	AssignmentExpression	nnz = & h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	0		=			
ANR	3357357	Identifier	nnz		3353661	0					
ANR	3357358	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	1					
ANR	3357359	UnaryOperator	&		3353661	0					
ANR	3357360	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 4 * i8x8 ] ]		3353661	1					
ANR	3357361	PtrMemberAccess	h -> non_zero_count_cache		3353661	0					
ANR	3357362	Identifier	h		3353661	0					
ANR	3357363	Identifier	non_zero_count_cache		3353661	1					
ANR	3357364	ArrayIndexing	scan8 [ 4 * i8x8 ]		3353661	1					
ANR	3357365	Identifier	scan8		3353661	0					
ANR	3357366	MultiplicativeExpression	4 * i8x8		3353661	1		*			
ANR	3357367	PrimaryExpression	4		3353661	0					
ANR	3357368	Identifier	i8x8		3353661	1					
ANR	3357369	ExpressionStatement	nnz [ 0 ] = nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0	925:20:19218:19255	3353661	4	True				
ANR	3357370	AssignmentExpression	nnz [ 0 ] = nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0		3353661	0		=			
ANR	3357371	ArrayIndexing	nnz [ 0 ]		3353661	0					
ANR	3357372	Identifier	nnz		3353661	0					
ANR	3357373	PrimaryExpression	0		3353661	1					
ANR	3357374	AssignmentExpression	nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0		3353661	1		=			
ANR	3357375	ArrayIndexing	nnz [ 1 ]		3353661	0					
ANR	3357376	Identifier	nnz		3353661	0					
ANR	3357377	PrimaryExpression	1		3353661	1					
ANR	3357378	AssignmentExpression	nnz [ 8 ] = nnz [ 9 ] = 0		3353661	1		=			
ANR	3357379	ArrayIndexing	nnz [ 8 ]		3353661	0					
ANR	3357380	Identifier	nnz		3353661	0					
ANR	3357381	PrimaryExpression	8		3353661	1					
ANR	3357382	AssignmentExpression	nnz [ 9 ] = 0		3353661	1		=			
ANR	3357383	ArrayIndexing	nnz [ 9 ]		3353661	0					
ANR	3357384	Identifier	nnz		3353661	0					
ANR	3357385	PrimaryExpression	9		3353661	1					
ANR	3357386	PrimaryExpression	0		3353661	1					
ANR	3357387	IfStatement	if ( cbp & 0x30 )		3353661	12					
ANR	3357388	Condition	cbp & 0x30	935:11:19316:19323	3353661	0	True				
ANR	3357389	BitAndExpression	cbp & 0x30		3353661	0		&			
ANR	3357390	Identifier	cbp		3353661	0					
ANR	3357391	PrimaryExpression	0x30		3353661	1					
ANR	3357392	CompoundStatement		935:20:19281:19281	3353661	1					
ANR	3357393	ForStatement	for ( chroma_idx = 0 ; chroma_idx < 2 ; chroma_idx ++ )		3353661	0					
ANR	3357394	ForInit	chroma_idx = 0 ;	937:16:19344:19356	3353661	0	True				
ANR	3357395	AssignmentExpression	chroma_idx = 0		3353661	0		=			
ANR	3357396	Identifier	chroma_idx		3353661	0					
ANR	3357397	PrimaryExpression	0		3353661	1					
ANR	3357398	Condition	chroma_idx < 2	937:30:19358:19369	3353661	1	True				
ANR	3357399	RelationalExpression	chroma_idx < 2		3353661	0		<			
ANR	3357400	Identifier	chroma_idx		3353661	0					
ANR	3357401	PrimaryExpression	2		3353661	1					
ANR	3357402	PostIncDecOperationExpression	chroma_idx ++	937:44:19372:19383	3353661	2	True				
ANR	3357403	Identifier	chroma_idx		3353661	0					
ANR	3357404	IncDec	++		3353661	1					
ANR	3357405	IfStatement	"if ( decode_residual ( h , gb , h -> mb + 256 + 16 * 4 * chroma_idx , CHROMA_DC_BLOCK_INDEX , chroma_dc_scan , NULL , 4 ) < 0 )"		3353661	3					
ANR	3357406	Condition	"decode_residual ( h , gb , h -> mb + 256 + 16 * 4 * chroma_idx , CHROMA_DC_BLOCK_INDEX , chroma_dc_scan , NULL , 4 ) < 0"	939:20:19407:19511	3353661	0	True				
ANR	3357407	RelationalExpression	"decode_residual ( h , gb , h -> mb + 256 + 16 * 4 * chroma_idx , CHROMA_DC_BLOCK_INDEX , chroma_dc_scan , NULL , 4 ) < 0"		3353661	0		<			
ANR	3357408	CallExpression	"decode_residual ( h , gb , h -> mb + 256 + 16 * 4 * chroma_idx , CHROMA_DC_BLOCK_INDEX , chroma_dc_scan , NULL , 4 )"		3353661	0					
ANR	3357409	Callee	decode_residual		3353661	0					
ANR	3357410	Identifier	decode_residual		3353661	0					
ANR	3357411	ArgumentList	h		3353661	1					
ANR	3357412	Argument	h		3353661	0					
ANR	3357413	Identifier	h		3353661	0					
ANR	3357414	Argument	gb		3353661	1					
ANR	3357415	Identifier	gb		3353661	0					
ANR	3357416	Argument	h -> mb + 256 + 16 * 4 * chroma_idx		3353661	2					
ANR	3357417	AdditiveExpression	h -> mb + 256 + 16 * 4 * chroma_idx		3353661	0		+			
ANR	3357418	PtrMemberAccess	h -> mb		3353661	0					
ANR	3357419	Identifier	h		3353661	0					
ANR	3357420	Identifier	mb		3353661	1					
ANR	3357421	AdditiveExpression	256 + 16 * 4 * chroma_idx		3353661	1		+			
ANR	3357422	PrimaryExpression	256		3353661	0					
ANR	3357423	MultiplicativeExpression	16 * 4 * chroma_idx		3353661	1		*			
ANR	3357424	PrimaryExpression	16		3353661	0					
ANR	3357425	MultiplicativeExpression	4 * chroma_idx		3353661	1		*			
ANR	3357426	PrimaryExpression	4		3353661	0					
ANR	3357427	Identifier	chroma_idx		3353661	1					
ANR	3357428	Argument	CHROMA_DC_BLOCK_INDEX		3353661	3					
ANR	3357429	Identifier	CHROMA_DC_BLOCK_INDEX		3353661	0					
ANR	3357430	Argument	chroma_dc_scan		3353661	4					
ANR	3357431	Identifier	chroma_dc_scan		3353661	0					
ANR	3357432	Argument	NULL		3353661	5					
ANR	3357433	Identifier	NULL		3353661	0					
ANR	3357434	Argument	4		3353661	6					
ANR	3357435	PrimaryExpression	4		3353661	0					
ANR	3357436	PrimaryExpression	0		3353661	1					
ANR	3357437	CompoundStatement		939:126:19469:19469	3353661	1					
ANR	3357438	ReturnStatement	return - 1 ;	941:20:19536:19545	3353661	0	True				
ANR	3357439	UnaryOperationExpression	- 1		3353661	0					
ANR	3357440	UnaryOperator	-		3353661	0					
ANR	3357441	PrimaryExpression	1		3353661	1					
ANR	3357442	IfStatement	if ( cbp & 0x20 )		3353661	13					
ANR	3357443	Condition	cbp & 0x20	949:11:19591:19598	3353661	0	True				
ANR	3357444	BitAndExpression	cbp & 0x20		3353661	0		&			
ANR	3357445	Identifier	cbp		3353661	0					
ANR	3357446	PrimaryExpression	0x20		3353661	1					
ANR	3357447	CompoundStatement		949:20:19556:19556	3353661	1					
ANR	3357448	ForStatement	for ( chroma_idx = 0 ; chroma_idx < 2 ; chroma_idx ++ )		3353661	0					
ANR	3357449	ForInit	chroma_idx = 0 ;	951:16:19619:19631	3353661	0	True				
ANR	3357450	AssignmentExpression	chroma_idx = 0		3353661	0		=			
ANR	3357451	Identifier	chroma_idx		3353661	0					
ANR	3357452	PrimaryExpression	0		3353661	1					
ANR	3357453	Condition	chroma_idx < 2	951:30:19633:19644	3353661	1	True				
ANR	3357454	RelationalExpression	chroma_idx < 2		3353661	0		<			
ANR	3357455	Identifier	chroma_idx		3353661	0					
ANR	3357456	PrimaryExpression	2		3353661	1					
ANR	3357457	PostIncDecOperationExpression	chroma_idx ++	951:44:19647:19658	3353661	2	True				
ANR	3357458	Identifier	chroma_idx		3353661	0					
ANR	3357459	IncDec	++		3353661	1					
ANR	3357460	CompoundStatement		953:16:19635:19743	3353661	3					
ANR	3357461	IdentifierDeclStatement	const uint32_t * qmul = h -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ chroma_idx ] ] ;	953:16:19679:19787	3353661	0	True				
ANR	3357462	IdentifierDecl	* qmul = h -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ chroma_idx ] ]		3353661	0					
ANR	3357463	IdentifierDeclType	const uint32_t *		3353661	0					
ANR	3357464	Identifier	qmul		3353661	1					
ANR	3357465	AssignmentExpression	* qmul = h -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ chroma_idx ] ]		3353661	2		=			
ANR	3357466	Identifier	qmul		3353661	0					
ANR	3357467	ArrayIndexing	h -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ chroma_idx ] ]		3353661	1					
ANR	3357468	ArrayIndexing	h -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ]		3353661	0					
ANR	3357469	PtrMemberAccess	h -> dequant4_coeff		3353661	0					
ANR	3357470	Identifier	h		3353661	0					
ANR	3357471	Identifier	dequant4_coeff		3353661	1					
ANR	3357472	AdditiveExpression	chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3353661	1		+			
ANR	3357473	Identifier	chroma_idx		3353661	0					
ANR	3357474	AdditiveExpression	1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3353661	1		+			
ANR	3357475	PrimaryExpression	1		3353661	0					
ANR	3357476	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		3353661	1					
ANR	3357477	Condition	IS_INTRA ( mb_type )		3353661	0					
ANR	3357478	CallExpression	IS_INTRA ( mb_type )		3353661	0					
ANR	3357479	Callee	IS_INTRA		3353661	0					
ANR	3357480	Identifier	IS_INTRA		3353661	0					
ANR	3357481	ArgumentList	mb_type		3353661	1					
ANR	3357482	Argument	mb_type		3353661	0					
ANR	3357483	Identifier	mb_type		3353661	0					
ANR	3357484	PrimaryExpression	0		3353661	1					
ANR	3357485	PrimaryExpression	3		3353661	2					
ANR	3357486	ArrayIndexing	h -> chroma_qp [ chroma_idx ]		3353661	1					
ANR	3357487	PtrMemberAccess	h -> chroma_qp		3353661	0					
ANR	3357488	Identifier	h		3353661	0					
ANR	3357489	Identifier	chroma_qp		3353661	1					
ANR	3357490	Identifier	chroma_idx		3353661	1					
ANR	3357491	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		3353661	1					
ANR	3357492	ForInit	i4x4 = 0 ;	955:20:19810:19816	3353661	0	True				
ANR	3357493	AssignmentExpression	i4x4 = 0		3353661	0		=			
ANR	3357494	Identifier	i4x4		3353661	0					
ANR	3357495	PrimaryExpression	0		3353661	1					
ANR	3357496	Condition	i4x4 < 4	955:28:19818:19823	3353661	1	True				
ANR	3357497	RelationalExpression	i4x4 < 4		3353661	0		<			
ANR	3357498	Identifier	i4x4		3353661	0					
ANR	3357499	PrimaryExpression	4		3353661	1					
ANR	3357500	PostIncDecOperationExpression	i4x4 ++	955:36:19826:19831	3353661	2	True				
ANR	3357501	Identifier	i4x4		3353661	0					
ANR	3357502	IncDec	++		3353661	1					
ANR	3357503	CompoundStatement		957:20:19812:19853	3353661	3					
ANR	3357504	IdentifierDeclStatement	const int index = 16 + 4 * chroma_idx + i4x4 ;	957:20:19856:19897	3353661	0	True				
ANR	3357505	IdentifierDecl	index = 16 + 4 * chroma_idx + i4x4		3353661	0					
ANR	3357506	IdentifierDeclType	const int		3353661	0					
ANR	3357507	Identifier	index		3353661	1					
ANR	3357508	AssignmentExpression	index = 16 + 4 * chroma_idx + i4x4		3353661	2		=			
ANR	3357509	Identifier	index		3353661	0					
ANR	3357510	AdditiveExpression	16 + 4 * chroma_idx + i4x4		3353661	1		+			
ANR	3357511	PrimaryExpression	16		3353661	0					
ANR	3357512	AdditiveExpression	4 * chroma_idx + i4x4		3353661	1		+			
ANR	3357513	MultiplicativeExpression	4 * chroma_idx		3353661	0		*			
ANR	3357514	PrimaryExpression	4		3353661	0					
ANR	3357515	Identifier	chroma_idx		3353661	1					
ANR	3357516	Identifier	i4x4		3353661	1					
ANR	3357517	IfStatement	"if ( decode_residual ( h , gb , h -> mb + 16 * index , index , scan + 1 , qmul , 15 ) < 0 )"		3353661	1					
ANR	3357518	Condition	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan + 1 , qmul , 15 ) < 0"	959:24:19924:19994	3353661	0	True				
ANR	3357519	RelationalExpression	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan + 1 , qmul , 15 ) < 0"		3353661	0		<			
ANR	3357520	CallExpression	"decode_residual ( h , gb , h -> mb + 16 * index , index , scan + 1 , qmul , 15 )"		3353661	0					
ANR	3357521	Callee	decode_residual		3353661	0					
ANR	3357522	Identifier	decode_residual		3353661	0					
ANR	3357523	ArgumentList	h		3353661	1					
ANR	3357524	Argument	h		3353661	0					
ANR	3357525	Identifier	h		3353661	0					
ANR	3357526	Argument	gb		3353661	1					
ANR	3357527	Identifier	gb		3353661	0					
ANR	3357528	Argument	h -> mb + 16 * index		3353661	2					
ANR	3357529	AdditiveExpression	h -> mb + 16 * index		3353661	0		+			
ANR	3357530	PtrMemberAccess	h -> mb		3353661	0					
ANR	3357531	Identifier	h		3353661	0					
ANR	3357532	Identifier	mb		3353661	1					
ANR	3357533	MultiplicativeExpression	16 * index		3353661	1		*			
ANR	3357534	PrimaryExpression	16		3353661	0					
ANR	3357535	Identifier	index		3353661	1					
ANR	3357536	Argument	index		3353661	3					
ANR	3357537	Identifier	index		3353661	0					
ANR	3357538	Argument	scan + 1		3353661	4					
ANR	3357539	AdditiveExpression	scan + 1		3353661	0		+			
ANR	3357540	Identifier	scan		3353661	0					
ANR	3357541	PrimaryExpression	1		3353661	1					
ANR	3357542	Argument	qmul		3353661	5					
ANR	3357543	Identifier	qmul		3353661	0					
ANR	3357544	Argument	15		3353661	6					
ANR	3357545	PrimaryExpression	15		3353661	0					
ANR	3357546	PrimaryExpression	0		3353661	1					
ANR	3357547	CompoundStatement		959:96:19952:19952	3353661	1					
ANR	3357548	ReturnStatement	return - 1 ;	961:24:20023:20032	3353661	0	True				
ANR	3357549	UnaryOperationExpression	- 1		3353661	0					
ANR	3357550	UnaryOperator	-		3353661	0					
ANR	3357551	PrimaryExpression	1		3353661	1					
ANR	3357552	ElseStatement	else		3353661	0					
ANR	3357553	CompoundStatement		969:13:20061:20061	3353661	0					
ANR	3357554	Statement	uint8_t	971:12:20120:20126	3353661	0	True				
ANR	3357555	Statement	*	971:20:20128:20128	3353661	1	True				
ANR	3357556	Statement	const	971:22:20130:20134	3353661	2	True				
ANR	3357557	ExpressionStatement	nnz = & h -> non_zero_count_cache [ 0 ]	971:28:20136:20168	3353661	3	True				
ANR	3357558	AssignmentExpression	nnz = & h -> non_zero_count_cache [ 0 ]		3353661	0		=			
ANR	3357559	Identifier	nnz		3353661	0					
ANR	3357560	UnaryOperationExpression	& h -> non_zero_count_cache [ 0 ]		3353661	1					
ANR	3357561	UnaryOperator	&		3353661	0					
ANR	3357562	ArrayIndexing	h -> non_zero_count_cache [ 0 ]		3353661	1					
ANR	3357563	PtrMemberAccess	h -> non_zero_count_cache		3353661	0					
ANR	3357564	Identifier	h		3353661	0					
ANR	3357565	Identifier	non_zero_count_cache		3353661	1					
ANR	3357566	PrimaryExpression	0		3353661	1					
ANR	3357567	ExpressionStatement	nnz [ scan8 [ 16 ] + 0 ] = nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0	973:12:20183:20361	3353661	4	True				
ANR	3357568	AssignmentExpression	nnz [ scan8 [ 16 ] + 0 ] = nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	0		=			
ANR	3357569	ArrayIndexing	nnz [ scan8 [ 16 ] + 0 ]		3353661	0					
ANR	3357570	Identifier	nnz		3353661	0					
ANR	3357571	AdditiveExpression	scan8 [ 16 ] + 0		3353661	1		+			
ANR	3357572	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357573	Identifier	scan8		3353661	0					
ANR	3357574	PrimaryExpression	16		3353661	1					
ANR	3357575	PrimaryExpression	0		3353661	1					
ANR	3357576	AssignmentExpression	nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357577	ArrayIndexing	nnz [ scan8 [ 16 ] + 1 ]		3353661	0					
ANR	3357578	Identifier	nnz		3353661	0					
ANR	3357579	AdditiveExpression	scan8 [ 16 ] + 1		3353661	1		+			
ANR	3357580	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357581	Identifier	scan8		3353661	0					
ANR	3357582	PrimaryExpression	16		3353661	1					
ANR	3357583	PrimaryExpression	1		3353661	1					
ANR	3357584	AssignmentExpression	nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357585	ArrayIndexing	nnz [ scan8 [ 16 ] + 8 ]		3353661	0					
ANR	3357586	Identifier	nnz		3353661	0					
ANR	3357587	AdditiveExpression	scan8 [ 16 ] + 8		3353661	1		+			
ANR	3357588	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357589	Identifier	scan8		3353661	0					
ANR	3357590	PrimaryExpression	16		3353661	1					
ANR	3357591	PrimaryExpression	8		3353661	1					
ANR	3357592	AssignmentExpression	nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357593	ArrayIndexing	nnz [ scan8 [ 16 ] + 9 ]		3353661	0					
ANR	3357594	Identifier	nnz		3353661	0					
ANR	3357595	AdditiveExpression	scan8 [ 16 ] + 9		3353661	1		+			
ANR	3357596	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357597	Identifier	scan8		3353661	0					
ANR	3357598	PrimaryExpression	16		3353661	1					
ANR	3357599	PrimaryExpression	9		3353661	1					
ANR	3357600	AssignmentExpression	nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357601	ArrayIndexing	nnz [ scan8 [ 20 ] + 0 ]		3353661	0					
ANR	3357602	Identifier	nnz		3353661	0					
ANR	3357603	AdditiveExpression	scan8 [ 20 ] + 0		3353661	1		+			
ANR	3357604	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357605	Identifier	scan8		3353661	0					
ANR	3357606	PrimaryExpression	20		3353661	1					
ANR	3357607	PrimaryExpression	0		3353661	1					
ANR	3357608	AssignmentExpression	nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357609	ArrayIndexing	nnz [ scan8 [ 20 ] + 1 ]		3353661	0					
ANR	3357610	Identifier	nnz		3353661	0					
ANR	3357611	AdditiveExpression	scan8 [ 20 ] + 1		3353661	1		+			
ANR	3357612	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357613	Identifier	scan8		3353661	0					
ANR	3357614	PrimaryExpression	20		3353661	1					
ANR	3357615	PrimaryExpression	1		3353661	1					
ANR	3357616	AssignmentExpression	nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357617	ArrayIndexing	nnz [ scan8 [ 20 ] + 8 ]		3353661	0					
ANR	3357618	Identifier	nnz		3353661	0					
ANR	3357619	AdditiveExpression	scan8 [ 20 ] + 8		3353661	1		+			
ANR	3357620	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357621	Identifier	scan8		3353661	0					
ANR	3357622	PrimaryExpression	20		3353661	1					
ANR	3357623	PrimaryExpression	8		3353661	1					
ANR	3357624	AssignmentExpression	nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357625	ArrayIndexing	nnz [ scan8 [ 20 ] + 9 ]		3353661	0					
ANR	3357626	Identifier	nnz		3353661	0					
ANR	3357627	AdditiveExpression	scan8 [ 20 ] + 9		3353661	1		+			
ANR	3357628	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357629	Identifier	scan8		3353661	0					
ANR	3357630	PrimaryExpression	20		3353661	1					
ANR	3357631	PrimaryExpression	9		3353661	1					
ANR	3357632	PrimaryExpression	0		3353661	1					
ANR	3357633	ElseStatement	else		3353661	0					
ANR	3357634	CompoundStatement		979:9:20340:20340	3353661	0					
ANR	3357635	Statement	uint8_t	981:8:20395:20401	3353661	0	True				
ANR	3357636	Statement	*	981:16:20403:20403	3353661	1	True				
ANR	3357637	Statement	const	981:18:20405:20409	3353661	2	True				
ANR	3357638	ExpressionStatement	nnz = & h -> non_zero_count_cache [ 0 ]	981:24:20411:20443	3353661	3	True				
ANR	3357639	AssignmentExpression	nnz = & h -> non_zero_count_cache [ 0 ]		3353661	0		=			
ANR	3357640	Identifier	nnz		3353661	0					
ANR	3357641	UnaryOperationExpression	& h -> non_zero_count_cache [ 0 ]		3353661	1					
ANR	3357642	UnaryOperator	&		3353661	0					
ANR	3357643	ArrayIndexing	h -> non_zero_count_cache [ 0 ]		3353661	1					
ANR	3357644	PtrMemberAccess	h -> non_zero_count_cache		3353661	0					
ANR	3357645	Identifier	h		3353661	0					
ANR	3357646	Identifier	non_zero_count_cache		3353661	1					
ANR	3357647	PrimaryExpression	0		3353661	1					
ANR	3357648	ExpressionStatement	"fill_rectangle ( & nnz [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"	983:8:20454:20499	3353661	4	True				
ANR	3357649	CallExpression	"fill_rectangle ( & nnz [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"		3353661	0					
ANR	3357650	Callee	fill_rectangle		3353661	0					
ANR	3357651	Identifier	fill_rectangle		3353661	0					
ANR	3357652	ArgumentList	& nnz [ scan8 [ 0 ] ]		3353661	1					
ANR	3357653	Argument	& nnz [ scan8 [ 0 ] ]		3353661	0					
ANR	3357654	UnaryOperationExpression	& nnz [ scan8 [ 0 ] ]		3353661	0					
ANR	3357655	UnaryOperator	&		3353661	0					
ANR	3357656	ArrayIndexing	nnz [ scan8 [ 0 ] ]		3353661	1					
ANR	3357657	Identifier	nnz		3353661	0					
ANR	3357658	ArrayIndexing	scan8 [ 0 ]		3353661	1					
ANR	3357659	Identifier	scan8		3353661	0					
ANR	3357660	PrimaryExpression	0		3353661	1					
ANR	3357661	Argument	4		3353661	1					
ANR	3357662	PrimaryExpression	4		3353661	0					
ANR	3357663	Argument	4		3353661	2					
ANR	3357664	PrimaryExpression	4		3353661	0					
ANR	3357665	Argument	8		3353661	3					
ANR	3357666	PrimaryExpression	8		3353661	0					
ANR	3357667	Argument	0		3353661	4					
ANR	3357668	PrimaryExpression	0		3353661	0					
ANR	3357669	Argument	1		3353661	5					
ANR	3357670	PrimaryExpression	1		3353661	0					
ANR	3357671	ExpressionStatement	nnz [ scan8 [ 16 ] + 0 ] = nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0	985:8:20510:20684	3353661	5	True				
ANR	3357672	AssignmentExpression	nnz [ scan8 [ 16 ] + 0 ] = nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	0		=			
ANR	3357673	ArrayIndexing	nnz [ scan8 [ 16 ] + 0 ]		3353661	0					
ANR	3357674	Identifier	nnz		3353661	0					
ANR	3357675	AdditiveExpression	scan8 [ 16 ] + 0		3353661	1		+			
ANR	3357676	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357677	Identifier	scan8		3353661	0					
ANR	3357678	PrimaryExpression	16		3353661	1					
ANR	3357679	PrimaryExpression	0		3353661	1					
ANR	3357680	AssignmentExpression	nnz [ scan8 [ 16 ] + 1 ] = nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357681	ArrayIndexing	nnz [ scan8 [ 16 ] + 1 ]		3353661	0					
ANR	3357682	Identifier	nnz		3353661	0					
ANR	3357683	AdditiveExpression	scan8 [ 16 ] + 1		3353661	1		+			
ANR	3357684	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357685	Identifier	scan8		3353661	0					
ANR	3357686	PrimaryExpression	16		3353661	1					
ANR	3357687	PrimaryExpression	1		3353661	1					
ANR	3357688	AssignmentExpression	nnz [ scan8 [ 16 ] + 8 ] = nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357689	ArrayIndexing	nnz [ scan8 [ 16 ] + 8 ]		3353661	0					
ANR	3357690	Identifier	nnz		3353661	0					
ANR	3357691	AdditiveExpression	scan8 [ 16 ] + 8		3353661	1		+			
ANR	3357692	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357693	Identifier	scan8		3353661	0					
ANR	3357694	PrimaryExpression	16		3353661	1					
ANR	3357695	PrimaryExpression	8		3353661	1					
ANR	3357696	AssignmentExpression	nnz [ scan8 [ 16 ] + 9 ] = nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357697	ArrayIndexing	nnz [ scan8 [ 16 ] + 9 ]		3353661	0					
ANR	3357698	Identifier	nnz		3353661	0					
ANR	3357699	AdditiveExpression	scan8 [ 16 ] + 9		3353661	1		+			
ANR	3357700	ArrayIndexing	scan8 [ 16 ]		3353661	0					
ANR	3357701	Identifier	scan8		3353661	0					
ANR	3357702	PrimaryExpression	16		3353661	1					
ANR	3357703	PrimaryExpression	9		3353661	1					
ANR	3357704	AssignmentExpression	nnz [ scan8 [ 20 ] + 0 ] = nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357705	ArrayIndexing	nnz [ scan8 [ 20 ] + 0 ]		3353661	0					
ANR	3357706	Identifier	nnz		3353661	0					
ANR	3357707	AdditiveExpression	scan8 [ 20 ] + 0		3353661	1		+			
ANR	3357708	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357709	Identifier	scan8		3353661	0					
ANR	3357710	PrimaryExpression	20		3353661	1					
ANR	3357711	PrimaryExpression	0		3353661	1					
ANR	3357712	AssignmentExpression	nnz [ scan8 [ 20 ] + 1 ] = nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357713	ArrayIndexing	nnz [ scan8 [ 20 ] + 1 ]		3353661	0					
ANR	3357714	Identifier	nnz		3353661	0					
ANR	3357715	AdditiveExpression	scan8 [ 20 ] + 1		3353661	1		+			
ANR	3357716	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357717	Identifier	scan8		3353661	0					
ANR	3357718	PrimaryExpression	20		3353661	1					
ANR	3357719	PrimaryExpression	1		3353661	1					
ANR	3357720	AssignmentExpression	nnz [ scan8 [ 20 ] + 8 ] = nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357721	ArrayIndexing	nnz [ scan8 [ 20 ] + 8 ]		3353661	0					
ANR	3357722	Identifier	nnz		3353661	0					
ANR	3357723	AdditiveExpression	scan8 [ 20 ] + 8		3353661	1		+			
ANR	3357724	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357725	Identifier	scan8		3353661	0					
ANR	3357726	PrimaryExpression	20		3353661	1					
ANR	3357727	PrimaryExpression	8		3353661	1					
ANR	3357728	AssignmentExpression	nnz [ scan8 [ 20 ] + 9 ] = 0		3353661	1		=			
ANR	3357729	ArrayIndexing	nnz [ scan8 [ 20 ] + 9 ]		3353661	0					
ANR	3357730	Identifier	nnz		3353661	0					
ANR	3357731	AdditiveExpression	scan8 [ 20 ] + 9		3353661	1		+			
ANR	3357732	ArrayIndexing	scan8 [ 20 ]		3353661	0					
ANR	3357733	Identifier	scan8		3353661	0					
ANR	3357734	PrimaryExpression	20		3353661	1					
ANR	3357735	PrimaryExpression	9		3353661	1					
ANR	3357736	PrimaryExpression	0		3353661	1					
ANR	3357737	ExpressionStatement	s -> current_picture . qscale_table [ mb_xy ] = s -> qscale	991:4:20698:20747	3353661	28	True				
ANR	3357738	AssignmentExpression	s -> current_picture . qscale_table [ mb_xy ] = s -> qscale		3353661	0		=			
ANR	3357739	ArrayIndexing	s -> current_picture . qscale_table [ mb_xy ]		3353661	0					
ANR	3357740	MemberAccess	s -> current_picture . qscale_table		3353661	0					
ANR	3357741	PtrMemberAccess	s -> current_picture		3353661	0					
ANR	3357742	Identifier	s		3353661	0					
ANR	3357743	Identifier	current_picture		3353661	1					
ANR	3357744	Identifier	qscale_table		3353661	1					
ANR	3357745	Identifier	mb_xy		3353661	1					
ANR	3357746	PtrMemberAccess	s -> qscale		3353661	1					
ANR	3357747	Identifier	s		3353661	0					
ANR	3357748	Identifier	qscale		3353661	1					
ANR	3357749	ExpressionStatement	write_back_non_zero_count ( h )	993:4:20754:20782	3353661	29	True				
ANR	3357750	CallExpression	write_back_non_zero_count ( h )		3353661	0					
ANR	3357751	Callee	write_back_non_zero_count		3353661	0					
ANR	3357752	Identifier	write_back_non_zero_count		3353661	0					
ANR	3357753	ArgumentList	h		3353661	1					
ANR	3357754	Argument	h		3353661	0					
ANR	3357755	Identifier	h		3353661	0					
ANR	3357756	IfStatement	if ( MB_MBAFF )		3353661	30					
ANR	3357757	Condition	MB_MBAFF	997:7:20794:20801	3353661	0	True				
ANR	3357758	Identifier	MB_MBAFF		3353661	0					
ANR	3357759	CompoundStatement		997:16:20759:20759	3353661	1					
ANR	3357760	ExpressionStatement	h -> ref_count [ 0 ] >>= 1	999:8:20814:20835	3353661	0	True				
ANR	3357761	AssignmentExpression	h -> ref_count [ 0 ] >>= 1		3353661	0		>>=			
ANR	3357762	ArrayIndexing	h -> ref_count [ 0 ]		3353661	0					
ANR	3357763	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3357764	Identifier	h		3353661	0					
ANR	3357765	Identifier	ref_count		3353661	1					
ANR	3357766	PrimaryExpression	0		3353661	1					
ANR	3357767	PrimaryExpression	1		3353661	1					
ANR	3357768	ExpressionStatement	h -> ref_count [ 1 ] >>= 1	1001:8:20846:20867	3353661	1	True				
ANR	3357769	AssignmentExpression	h -> ref_count [ 1 ] >>= 1		3353661	0		>>=			
ANR	3357770	ArrayIndexing	h -> ref_count [ 1 ]		3353661	0					
ANR	3357771	PtrMemberAccess	h -> ref_count		3353661	0					
ANR	3357772	Identifier	h		3353661	0					
ANR	3357773	Identifier	ref_count		3353661	1					
ANR	3357774	PrimaryExpression	1		3353661	1					
ANR	3357775	PrimaryExpression	1		3353661	1					
ANR	3357776	ReturnStatement	return 0 ;	1007:4:20883:20891	3353661	31	True				
ANR	3357777	PrimaryExpression	0		3353661	0					
ANR	3357778	ReturnType	int		3353661	1					
ANR	3357779	Identifier	ff_h264_decode_mb_cavlc		3353661	2					
ANR	3357780	ParameterList	H264Context * h		3353661	3					
ANR	3357781	Parameter	H264Context * h	1:28:28:41	3353661	0	True				
ANR	3357782	ParameterType	H264Context *		3353661	0					
ANR	3357783	Identifier	h		3353661	1					
ANR	3357784	CFGEntryNode	ENTRY		3353661		True				
ANR	3357785	CFGExitNode	EXIT		3353661		True				
ANR	3357786	Symbol	* golomb_to_intra4x4_cbp		3353661						
ANR	3357787	Symbol	* x		3353661						
ANR	3357788	Symbol	pred_intra_mode		3353661						
ANR	3357789	Symbol	IS_INTRA_PCM		3353661						
ANR	3357790	Symbol	MB_TYPE_16x8		3353661						
ANR	3357791	Symbol	CHROMA		3353661						
ANR	3357792	Symbol	luma_dc_zigzag_scan		3353661						
ANR	3357793	Symbol	s -> current_picture		3353661						
ANR	3357794	Symbol	h -> s . avctx		3353661						
ANR	3357795	Symbol	h -> mb		3353661						
ANR	3357796	Symbol	* s -> current_picture . qscale_table		3353661						
ANR	3357797	Symbol	h -> zigzag_scan		3353661						
ANR	3357798	Symbol	pred_mode		3353661						
ANR	3357799	Symbol	IS_16X16		3353661						
ANR	3357800	Symbol	* s -> qscale		3353661						
ANR	3357801	Symbol	* golomb_to_inter_cbp		3353661						
ANR	3357802	Symbol	& h -> s		3353661						
ANR	3357803	Symbol	pack16to32		3353661						
ANR	3357804	Symbol	* s -> current_picture . mb_type		3353661						
ANR	3357805	Symbol	s -> mb_skip_run		3353661						
ANR	3357806	Symbol	* h -> dequant8_coeff		3353661						
ANR	3357807	Symbol	i_mb_type_info [ mb_type ] . cbp		3353661						
ANR	3357808	Symbol	golomb_to_intra4x4_cbp_gray		3353661						
ANR	3357809	Symbol	scan		3353661						
ANR	3357810	Symbol	dquant		3353661						
ANR	3357811	Symbol	IS_SUB_4X8		3353661						
ANR	3357812	Symbol	h -> slice_type		3353661						
ANR	3357813	Symbol	* h -> ref_count		3353661						
ANR	3357814	Symbol	h -> slice_table		3353661						
ANR	3357815	Symbol	* * h -> dequant8_coeff		3353661						
ANR	3357816	Symbol	* * h -> ref_cache		3353661						
ANR	3357817	Symbol	h -> cbp_table		3353661						
ANR	3357818	Symbol	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661						
ANR	3357819	Symbol	get_chroma_qp		3353661						
ANR	3357820	Symbol	FF_I_TYPE		3353661						
ANR	3357821	Symbol	h -> intra16x16_pred_mode		3353661						
ANR	3357822	Symbol	h		3353661						
ANR	3357823	Symbol	i		3353661						
ANR	3357824	Symbol	j		3353661						
ANR	3357825	Symbol	golomb_to_inter_cbp		3353661						
ANR	3357826	Symbol	p		3353661						
ANR	3357827	Symbol	dc_scan		3353661						
ANR	3357828	Symbol	buf		3353661						
ANR	3357829	Symbol	s		3353661						
ANR	3357830	Symbol	x		3353661						
ANR	3357831	Symbol	h -> ref_count		3353661						
ANR	3357832	Symbol	LUMA_DC_BLOCK_INDEX		3353661						
ANR	3357833	Symbol	h -> slice_num		3353661						
ANR	3357834	Symbol	i_mb_type_info [ mb_type ] . pred_mode		3353661						
ANR	3357835	Symbol	di		3353661						
ANR	3357836	Symbol	h -> sps . direct_8x8_inference_flag		3353661						
ANR	3357837	Symbol	i_mb_type_info		3353661						
ANR	3357838	Symbol	h -> zigzag_scan_q0		3353661						
ANR	3357839	Symbol	* sub_partition_count		3353661						
ANR	3357840	Symbol	h -> list_count		3353661						
ANR	3357841	Symbol	ref		3353661						
ANR	3357842	Symbol	h -> field_scan8x8_cavlc_q0		3353661						
ANR	3357843	Symbol	IS_DIR		3353661						
ANR	3357844	Symbol	h -> mb_mbaff		3353661						
ANR	3357845	Symbol	* b_mb_type_info		3353661						
ANR	3357846	Symbol	rem_mode		3353661						
ANR	3357847	Symbol	* * i		3353661						
ANR	3357848	Symbol	* * h		3353661						
ANR	3357849	Symbol	* cbp		3353661						
ANR	3357850	Symbol	* IS_INTRA		3353661						
ANR	3357851	Symbol	chroma_idx		3353661						
ANR	3357852	Symbol	* * h -> chroma_qp		3353661						
ANR	3357853	Symbol	* chroma_idx		3353661						
ANR	3357854	Symbol	get_bits1		3353661						
ANR	3357855	Symbol	h -> mb_field_decoding_flag		3353661						
ANR	3357856	Symbol	h -> slice_type_nos		3353661						
ANR	3357857	Symbol	& mb_type		3353661						
ANR	3357858	Symbol	list		3353661						
ANR	3357859	Symbol	* h -> mb		3353661						
ANR	3357860	Symbol	MB_TYPE_16x16		3353661						
ANR	3357861	Symbol	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661						
ANR	3357862	Symbol	IS_REF0		3353661						
ANR	3357863	Symbol	h -> pps		3353661						
ANR	3357864	Symbol	nnz		3353661						
ANR	3357865	Symbol	scan8x8		3353661						
ANR	3357866	Symbol	b_mb_type_info		3353661						
ANR	3357867	Symbol	golomb_to_intra4x4_cbp		3353661						
ANR	3357868	Symbol	h -> chroma_qp		3353661						
ANR	3357869	Symbol	s -> mb_stride		3353661						
ANR	3357870	Symbol	IS_INTRA		3353661						
ANR	3357871	Symbol	block_width		3353661						
ANR	3357872	Symbol	s -> current_picture . mb_type		3353661						
ANR	3357873	Symbol	FF_B_TYPE		3353661						
ANR	3357874	Symbol	h -> ref_cache		3353661						
ANR	3357875	Symbol	b_sub_mb_type_info		3353661						
ANR	3357876	Symbol	* * list		3353661						
ANR	3357877	Symbol	i4x4		3353661						
ANR	3357878	Symbol	h -> pps . transform_8x8_mode		3353661						
ANR	3357879	Symbol	gb		3353661						
ANR	3357880	Symbol	* * index		3353661						
ANR	3357881	Symbol	i_mb_type_info [ mb_type ] . type		3353661						
ANR	3357882	Symbol	LIST_NOT_USED		3353661						
ANR	3357883	Symbol	p_mb_type_info [ mb_type ] . partition_count		3353661						
ANR	3357884	Symbol	get_se_golomb		3353661						
ANR	3357885	Symbol	h -> chroma_pred_mode		3353661						
ANR	3357886	Symbol	h -> field_scan8x8_cavlc		3353661						
ANR	3357887	Symbol	b_mb_type_info [ mb_type ] . partition_count		3353661						
ANR	3357888	Symbol	* * ref		3353661						
ANR	3357889	Symbol	ff_h264_check_intra4x4_pred_mode		3353661						
ANR	3357890	Symbol	h -> mb_xy		3353661						
ANR	3357891	Symbol	FF_SI_TYPE		3353661						
ANR	3357892	Symbol	av_get_pict_type_char		3353661						
ANR	3357893	Symbol	IS_INTRA16x16		3353661						
ANR	3357894	Symbol	* h -> chroma_qp		3353661						
ANR	3357895	Symbol	* * h -> dequant4_coeff		3353661						
ANR	3357896	Symbol	* mb_xy		3353661						
ANR	3357897	Symbol	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3353661						
ANR	3357898	Symbol	h -> inter_gb_ptr		3353661						
ANR	3357899	Symbol	* h -> ref_cache		3353661						
ANR	3357900	Symbol	h -> intra_gb_ptr		3353661						
ANR	3357901	Symbol	h -> dequant4_coeff		3353661						
ANR	3357902	Symbol	* scan8		3353661						
ANR	3357903	Symbol	* index		3353661						
ANR	3357904	Symbol	* h -> cbp_table		3353661						
ANR	3357905	Symbol	h -> prev_mb_skipped		3353661						
ANR	3357906	Symbol	tmp		3353661						
ANR	3357907	Symbol	mb_type		3353661						
ANR	3357908	Symbol	decode_residual		3353661						
ANR	3357909	Symbol	dct8x8_allowed		3353661						
ANR	3357910	Symbol	val		3353661						
ANR	3357911	Symbol	IS_16X8		3353661						
ANR	3357912	Symbol	partition_count		3353661						
ANR	3357913	Symbol	chroma_dc_scan		3353661						
ANR	3357914	Symbol	index		3353661						
ANR	3357915	Symbol	FRAME_MBAFF		3353661						
ANR	3357916	Symbol	h -> s		3353661						
ANR	3357917	Symbol	* h -> sub_mb_type		3353661						
ANR	3357918	Symbol	& s -> gb		3353661						
ANR	3357919	Symbol	h -> sub_mb_type		3353661						
ANR	3357920	Symbol	* * chroma_idx		3353661						
ANR	3357921	Symbol	* * h -> sub_mb_type		3353661						
ANR	3357922	Symbol	* * * h		3353661						
ANR	3357923	Symbol	h -> zigzag_scan8x8_cavlc		3353661						
ANR	3357924	Symbol	h -> non_zero_count		3353661						
ANR	3357925	Symbol	h -> cbp		3353661						
ANR	3357926	Symbol	IS_INTER		3353661						
ANR	3357927	Symbol	IS_8x8DCT		3353661						
ANR	3357928	Symbol	* * mv_cache		3353661						
ANR	3357929	Symbol	IS_INTERLACED		3353661						
ANR	3357930	Symbol	IS_SUB_8X4		3353661						
ANR	3357931	Symbol	IS_SUB_8X8		3353661						
ANR	3357932	Symbol	* * s		3353661						
ANR	3357933	Symbol	golomb_to_inter_cbp_gray		3353661						
ANR	3357934	Symbol	h -> field_scan		3353661						
ANR	3357935	Symbol	luma_dc_field_scan		3353661						
ANR	3357936	Symbol	MB_TYPE_INTERLACED		3353661						
ANR	3357937	Symbol	h -> field_scan_q0		3353661						
ANR	3357938	Symbol	* * h -> mv_cache		3353661						
ANR	3357939	Symbol	* h -> dequant4_coeff		3353661						
ANR	3357940	Symbol	h -> intra4x4_pred_mode_cache		3353661						
ANR	3357941	Symbol	AV_LOG_ERROR		3353661						
ANR	3357942	Symbol	* i_mb_type_info		3353661						
ANR	3357943	Symbol	* s -> current_picture		3353661						
ANR	3357944	Symbol	p_sub_mb_type_info		3353661						
ANR	3357945	Symbol	sub_mb_type		3353661						
ANR	3357946	Symbol	get_ue_golomb		3353661						
ANR	3357947	Symbol	MB_MBAFF		3353661						
ANR	3357948	Symbol	h -> zigzag_scan8x8_cavlc_q0		3353661						
ANR	3357949	Symbol	h -> frame_num		3353661						
ANR	3357950	Symbol	* list		3353661						
ANR	3357951	Symbol	ff_h264_check_intra_pred_mode		3353661						
ANR	3357952	Symbol	MB_TYPE_8x8DCT		3353661						
ANR	3357953	Symbol	* golomb_to_inter_cbp_gray		3353661						
ANR	3357954	Symbol	get_bits		3353661						
ANR	3357955	Symbol	qmul		3353661						
ANR	3357956	Symbol	* b_sub_mb_type_info		3353661						
ANR	3357957	Symbol	mode		3353661						
ANR	3357958	Symbol	* h -> non_zero_count		3353661						
ANR	3357959	Symbol	MB_FIELD		3353661						
ANR	3357960	Symbol	h -> dequant8_coeff		3353661						
ANR	3357961	Symbol	* h -> mv_cache		3353661						
ANR	3357962	Symbol	b_mb_type_info [ mb_type ] . type		3353661						
ANR	3357963	Symbol	* * IS_INTRA		3353661						
ANR	3357964	Symbol	NULL		3353661						
ANR	3357965	Symbol	IS_8X16		3353661						
ANR	3357966	Symbol	* nnz		3353661						
ANR	3357967	Symbol	IS_INTRA4x4		3353661						
ANR	3357968	Symbol	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3353661						
ANR	3357969	Symbol	* h -> intra4x4_pred_mode_cache		3353661						
ANR	3357970	Symbol	mx		3353661						
ANR	3357971	Symbol	* * scan8		3353661						
ANR	3357972	Symbol	ref_count		3353661						
ANR	3357973	Symbol	my		3353661						
ANR	3357974	Symbol	s -> current_picture . qscale_table		3353661						
ANR	3357975	Symbol	s -> mb_x		3353661						
ANR	3357976	Symbol	s -> mb_y		3353661						
ANR	3357977	Symbol	* golomb_to_intra4x4_cbp_gray		3353661						
ANR	3357978	Symbol	FF_P_TYPE		3353661						
ANR	3357979	Symbol	IS_DIRECT		3353661						
ANR	3357980	Symbol	* i8x8		3353661						
ANR	3357981	Symbol	s -> avctx		3353661						
ANR	3357982	Symbol	* mb_type		3353661						
ANR	3357983	Symbol	sub_partition_count		3353661						
ANR	3357984	Symbol	s -> qscale		3353661						
ANR	3357985	Symbol	mb_xy		3353661						
ANR	3357986	Symbol	* h -> slice_table		3353661						
ANR	3357987	Symbol	* p_sub_mb_type_info		3353661						
ANR	3357988	Symbol	get_dct8x8_allowed		3353661						
ANR	3357989	Symbol	p_mb_type_info		3353661						
ANR	3357990	Symbol	mv_cache		3353661						
ANR	3357991	Symbol	CHROMA_DC_BLOCK_INDEX		3353661						
ANR	3357992	Symbol	scan8		3353661						
ANR	3357993	Symbol	i8x8		3353661						
ANR	3357994	Symbol	get_ue_golomb_31		3353661						
ANR	3357995	Symbol	h -> non_zero_count_cache		3353661						
ANR	3357996	Symbol	* p_mb_type_info		3353661						
ANR	3357997	Symbol	p_mb_type_info [ mb_type ] . type		3353661						
ANR	3357998	Symbol	cbp		3353661						
ANR	3357999	Symbol	PART_NOT_AVAILABLE		3353661						
ANR	3358000	Symbol	* h		3353661						
ANR	3358001	Symbol	* i		3353661						
ANR	3358002	Symbol	& mx		3353661						
ANR	3358003	Symbol	* mv_cache		3353661						
ANR	3358004	Symbol	h -> mv_cache		3353661						
ANR	3358005	Symbol	& my		3353661						
ANR	3358006	Symbol	* p		3353661						
ANR	3358007	Symbol	h -> sps		3353661						
ANR	3358008	Symbol	* s		3353661						
ANR	3358009	Symbol	* ref		3353661						
