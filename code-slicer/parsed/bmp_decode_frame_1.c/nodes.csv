command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1103058	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmp_decode_frame_1.c								
ANR	1103059	Function	bmp_decode_frame	1:0:0:11370							
ANR	1103060	FunctionDef	"bmp_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		1103059	0					
ANR	1103061	CompoundStatement		7:0:155:11370	1103059	0					
ANR	1103062	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	1103059	0	True				
ANR	1103063	IdentifierDecl	* buf = avpkt -> data		1103059	0					
ANR	1103064	IdentifierDeclType	const uint8_t *		1103059	0					
ANR	1103065	Identifier	buf		1103059	1					
ANR	1103066	AssignmentExpression	* buf = avpkt -> data		1103059	2		=			
ANR	1103067	Identifier	buf		1103059	0					
ANR	1103068	PtrMemberAccess	avpkt -> data		1103059	1					
ANR	1103069	Identifier	avpkt		1103059	0					
ANR	1103070	Identifier	data		1103059	1					
ANR	1103071	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:233	1103059	1	True				
ANR	1103072	IdentifierDecl	buf_size = avpkt -> size		1103059	0					
ANR	1103073	IdentifierDeclType	int		1103059	0					
ANR	1103074	Identifier	buf_size		1103059	1					
ANR	1103075	AssignmentExpression	buf_size = avpkt -> size		1103059	2		=			
ANR	1103076	Identifier	buf_size		1103059	0					
ANR	1103077	PtrMemberAccess	avpkt -> size		1103059	1					
ANR	1103078	Identifier	avpkt		1103059	0					
ANR	1103079	Identifier	size		1103059	1					
ANR	1103080	IdentifierDeclStatement	AVFrame * p = data ;	13:4:240:265	1103059	2	True				
ANR	1103081	IdentifierDecl	* p = data		1103059	0					
ANR	1103082	IdentifierDeclType	AVFrame *		1103059	0					
ANR	1103083	Identifier	p		1103059	1					
ANR	1103084	AssignmentExpression	* p = data		1103059	2		=			
ANR	1103085	Identifier	data		1103059	0					
ANR	1103086	Identifier	data		1103059	1					
ANR	1103087	IdentifierDeclStatement	"unsigned int fsize , hsize ;"	15:4:272:297	1103059	3	True				
ANR	1103088	IdentifierDecl	fsize		1103059	0					
ANR	1103089	IdentifierDeclType	unsigned int		1103059	0					
ANR	1103090	Identifier	fsize		1103059	1					
ANR	1103091	IdentifierDecl	hsize		1103059	1					
ANR	1103092	IdentifierDeclType	unsigned int		1103059	0					
ANR	1103093	Identifier	hsize		1103059	1					
ANR	1103094	IdentifierDeclStatement	"int width , height ;"	17:4:304:321	1103059	4	True				
ANR	1103095	IdentifierDecl	width		1103059	0					
ANR	1103096	IdentifierDeclType	int		1103059	0					
ANR	1103097	Identifier	width		1103059	1					
ANR	1103098	IdentifierDecl	height		1103059	1					
ANR	1103099	IdentifierDeclType	int		1103059	0					
ANR	1103100	Identifier	height		1103059	1					
ANR	1103101	IdentifierDeclStatement	unsigned int depth ;	19:4:328:346	1103059	5	True				
ANR	1103102	IdentifierDecl	depth		1103059	0					
ANR	1103103	IdentifierDeclType	unsigned int		1103059	0					
ANR	1103104	Identifier	depth		1103059	1					
ANR	1103105	IdentifierDeclStatement	BiCompression comp ;	21:4:353:371	1103059	6	True				
ANR	1103106	IdentifierDecl	comp		1103059	0					
ANR	1103107	IdentifierDeclType	BiCompression		1103059	0					
ANR	1103108	Identifier	comp		1103059	1					
ANR	1103109	IdentifierDeclStatement	unsigned int ihsize ;	23:4:378:397	1103059	7	True				
ANR	1103110	IdentifierDecl	ihsize		1103059	0					
ANR	1103111	IdentifierDeclType	unsigned int		1103059	0					
ANR	1103112	Identifier	ihsize		1103059	1					
ANR	1103113	IdentifierDeclStatement	"int i , j , n , linesize , ret ;"	25:4:404:430	1103059	8	True				
ANR	1103114	IdentifierDecl	i		1103059	0					
ANR	1103115	IdentifierDeclType	int		1103059	0					
ANR	1103116	Identifier	i		1103059	1					
ANR	1103117	IdentifierDecl	j		1103059	1					
ANR	1103118	IdentifierDeclType	int		1103059	0					
ANR	1103119	Identifier	j		1103059	1					
ANR	1103120	IdentifierDecl	n		1103059	2					
ANR	1103121	IdentifierDeclType	int		1103059	0					
ANR	1103122	Identifier	n		1103059	1					
ANR	1103123	IdentifierDecl	linesize		1103059	3					
ANR	1103124	IdentifierDeclType	int		1103059	0					
ANR	1103125	Identifier	linesize		1103059	1					
ANR	1103126	IdentifierDecl	ret		1103059	4					
ANR	1103127	IdentifierDeclType	int		1103059	0					
ANR	1103128	Identifier	ret		1103059	1					
ANR	1103129	IdentifierDeclStatement	uint32_t rgb [ 3 ] = { 0 } ;	27:4:437:458	1103059	9	True				
ANR	1103130	IdentifierDecl	rgb [ 3 ] = { 0 }		1103059	0					
ANR	1103131	IdentifierDeclType	uint32_t [ 3 ]		1103059	0					
ANR	1103132	Identifier	rgb		1103059	1					
ANR	1103133	PrimaryExpression	3		1103059	2					
ANR	1103134	AssignmentExpression	rgb [ 3 ] = { 0 }		1103059	3		=			
ANR	1103135	Identifier	rgb		1103059	0					
ANR	1103136	InitializerList	0		1103059	1					
ANR	1103137	PrimaryExpression	0		1103059	0					
ANR	1103138	IdentifierDeclStatement	uint32_t alpha = 0 ;	29:4:465:483	1103059	10	True				
ANR	1103139	IdentifierDecl	alpha = 0		1103059	0					
ANR	1103140	IdentifierDeclType	uint32_t		1103059	0					
ANR	1103141	Identifier	alpha		1103059	1					
ANR	1103142	AssignmentExpression	alpha = 0		1103059	2		=			
ANR	1103143	Identifier	alpha		1103059	0					
ANR	1103144	PrimaryExpression	0		1103059	1					
ANR	1103145	IdentifierDeclStatement	uint8_t * ptr ;	31:4:490:502	1103059	11	True				
ANR	1103146	IdentifierDecl	* ptr		1103059	0					
ANR	1103147	IdentifierDeclType	uint8_t *		1103059	0					
ANR	1103148	Identifier	ptr		1103059	1					
ANR	1103149	IdentifierDeclStatement	int dsize ;	33:4:509:518	1103059	12	True				
ANR	1103150	IdentifierDecl	dsize		1103059	0					
ANR	1103151	IdentifierDeclType	int		1103059	0					
ANR	1103152	Identifier	dsize		1103059	1					
ANR	1103153	IdentifierDeclStatement	const uint8_t * buf0 = buf ;	35:4:525:550	1103059	13	True				
ANR	1103154	IdentifierDecl	* buf0 = buf		1103059	0					
ANR	1103155	IdentifierDeclType	const uint8_t *		1103059	0					
ANR	1103156	Identifier	buf0		1103059	1					
ANR	1103157	AssignmentExpression	* buf0 = buf		1103059	2		=			
ANR	1103158	Identifier	buf		1103059	0					
ANR	1103159	Identifier	buf		1103059	1					
ANR	1103160	IdentifierDeclStatement	GetByteContext gb ;	37:4:557:574	1103059	14	True				
ANR	1103161	IdentifierDecl	gb		1103059	0					
ANR	1103162	IdentifierDeclType	GetByteContext		1103059	0					
ANR	1103163	Identifier	gb		1103059	1					
ANR	1103164	IfStatement	if ( buf_size < 14 )		1103059	15					
ANR	1103165	Condition	buf_size < 14	41:8:587:599	1103059	0	True				
ANR	1103166	RelationalExpression	buf_size < 14		1103059	0		<			
ANR	1103167	Identifier	buf_size		1103059	0					
ANR	1103168	PrimaryExpression	14		1103059	1					
ANR	1103169	CompoundStatement		35:23:446:446	1103059	1					
ANR	1103170	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"	43:8:613:679	1103059	0	True				
ANR	1103171	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"		1103059	0					
ANR	1103172	Callee	av_log		1103059	0					
ANR	1103173	Identifier	av_log		1103059	0					
ANR	1103174	ArgumentList	avctx		1103059	1					
ANR	1103175	Argument	avctx		1103059	0					
ANR	1103176	Identifier	avctx		1103059	0					
ANR	1103177	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103178	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103179	Argument	"""buf size too small (%d)\\n"""		1103059	2					
ANR	1103180	PrimaryExpression	"""buf size too small (%d)\\n"""		1103059	0					
ANR	1103181	Argument	buf_size		1103059	3					
ANR	1103182	Identifier	buf_size		1103059	0					
ANR	1103183	ReturnStatement	return AVERROR_INVALIDDATA ;	45:8:690:716	1103059	1	True				
ANR	1103184	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103185	IfStatement	if ( bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M' )		1103059	16					
ANR	1103186	Condition	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'	51:8:736:812	1103059	0	True				
ANR	1103187	OrExpression	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'		1103059	0		||			
ANR	1103188	EqualityExpression	bytestream_get_byte ( & buf ) != 'B'		1103059	0		!=			
ANR	1103189	CallExpression	bytestream_get_byte ( & buf )		1103059	0					
ANR	1103190	Callee	bytestream_get_byte		1103059	0					
ANR	1103191	Identifier	bytestream_get_byte		1103059	0					
ANR	1103192	ArgumentList	& buf		1103059	1					
ANR	1103193	Argument	& buf		1103059	0					
ANR	1103194	UnaryOperationExpression	& buf		1103059	0					
ANR	1103195	UnaryOperator	&		1103059	0					
ANR	1103196	Identifier	buf		1103059	1					
ANR	1103197	PrimaryExpression	'B'		1103059	1					
ANR	1103198	EqualityExpression	bytestream_get_byte ( & buf ) != 'M'		1103059	1		!=			
ANR	1103199	CallExpression	bytestream_get_byte ( & buf )		1103059	0					
ANR	1103200	Callee	bytestream_get_byte		1103059	0					
ANR	1103201	Identifier	bytestream_get_byte		1103059	0					
ANR	1103202	ArgumentList	& buf		1103059	1					
ANR	1103203	Argument	& buf		1103059	0					
ANR	1103204	UnaryOperationExpression	& buf		1103059	0					
ANR	1103205	UnaryOperator	&		1103059	0					
ANR	1103206	Identifier	buf		1103059	1					
ANR	1103207	PrimaryExpression	'M'		1103059	1					
ANR	1103208	CompoundStatement		47:42:659:659	1103059	1					
ANR	1103209	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"	55:8:826:875	1103059	0	True				
ANR	1103210	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"		1103059	0					
ANR	1103211	Callee	av_log		1103059	0					
ANR	1103212	Identifier	av_log		1103059	0					
ANR	1103213	ArgumentList	avctx		1103059	1					
ANR	1103214	Argument	avctx		1103059	0					
ANR	1103215	Identifier	avctx		1103059	0					
ANR	1103216	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103217	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103218	Argument	"""bad magic number\\n"""		1103059	2					
ANR	1103219	PrimaryExpression	"""bad magic number\\n"""		1103059	0					
ANR	1103220	ReturnStatement	return AVERROR_INVALIDDATA ;	57:8:886:912	1103059	1	True				
ANR	1103221	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103222	ExpressionStatement	fsize = bytestream_get_le32 ( & buf )	63:4:928:961	1103059	17	True				
ANR	1103223	AssignmentExpression	fsize = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103224	Identifier	fsize		1103059	0					
ANR	1103225	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103226	Callee	bytestream_get_le32		1103059	0					
ANR	1103227	Identifier	bytestream_get_le32		1103059	0					
ANR	1103228	ArgumentList	& buf		1103059	1					
ANR	1103229	Argument	& buf		1103059	0					
ANR	1103230	UnaryOperationExpression	& buf		1103059	0					
ANR	1103231	UnaryOperator	&		1103059	0					
ANR	1103232	Identifier	buf		1103059	1					
ANR	1103233	IfStatement	if ( buf_size < fsize )		1103059	18					
ANR	1103234	Condition	buf_size < fsize	65:8:972:987	1103059	0	True				
ANR	1103235	RelationalExpression	buf_size < fsize		1103059	0		<			
ANR	1103236	Identifier	buf_size		1103059	0					
ANR	1103237	Identifier	fsize		1103059	1					
ANR	1103238	CompoundStatement		59:26:834:834	1103059	1					
ANR	1103239	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %u), trying to decode anyway\\n"" , buf_size , fsize )"	67:8:1001:1117	1103059	0	True				
ANR	1103240	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %u), trying to decode anyway\\n"" , buf_size , fsize )"		1103059	0					
ANR	1103241	Callee	av_log		1103059	0					
ANR	1103242	Identifier	av_log		1103059	0					
ANR	1103243	ArgumentList	avctx		1103059	1					
ANR	1103244	Argument	avctx		1103059	0					
ANR	1103245	Identifier	avctx		1103059	0					
ANR	1103246	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103247	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103248	Argument	"""not enough data (%d < %u), trying to decode anyway\\n"""		1103059	2					
ANR	1103249	PrimaryExpression	"""not enough data (%d < %u), trying to decode anyway\\n"""		1103059	0					
ANR	1103250	Argument	buf_size		1103059	3					
ANR	1103251	Identifier	buf_size		1103059	0					
ANR	1103252	Argument	fsize		1103059	4					
ANR	1103253	Identifier	fsize		1103059	0					
ANR	1103254	ExpressionStatement	fsize = buf_size	71:8:1128:1144	1103059	1	True				
ANR	1103255	AssignmentExpression	fsize = buf_size		1103059	0		=			
ANR	1103256	Identifier	fsize		1103059	0					
ANR	1103257	Identifier	buf_size		1103059	1					
ANR	1103258	ExpressionStatement	buf += 2	77:4:1160:1168	1103059	19	True				
ANR	1103259	AssignmentExpression	buf += 2		1103059	0		+=			
ANR	1103260	Identifier	buf		1103059	0					
ANR	1103261	PrimaryExpression	2		1103059	1					
ANR	1103262	ExpressionStatement	buf += 2	79:4:1191:1199	1103059	20	True				
ANR	1103263	AssignmentExpression	buf += 2		1103059	0		+=			
ANR	1103264	Identifier	buf		1103059	0					
ANR	1103265	PrimaryExpression	2		1103059	1					
ANR	1103266	ExpressionStatement	hsize = bytestream_get_le32 ( & buf )	83:4:1224:1258	1103059	21	True				
ANR	1103267	AssignmentExpression	hsize = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103268	Identifier	hsize		1103059	0					
ANR	1103269	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103270	Callee	bytestream_get_le32		1103059	0					
ANR	1103271	Identifier	bytestream_get_le32		1103059	0					
ANR	1103272	ArgumentList	& buf		1103059	1					
ANR	1103273	Argument	& buf		1103059	0					
ANR	1103274	UnaryOperationExpression	& buf		1103059	0					
ANR	1103275	UnaryOperator	&		1103059	0					
ANR	1103276	Identifier	buf		1103059	1					
ANR	1103277	ExpressionStatement	ihsize = bytestream_get_le32 ( & buf )	85:4:1283:1317	1103059	22	True				
ANR	1103278	AssignmentExpression	ihsize = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103279	Identifier	ihsize		1103059	0					
ANR	1103280	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103281	Callee	bytestream_get_le32		1103059	0					
ANR	1103282	Identifier	bytestream_get_le32		1103059	0					
ANR	1103283	ArgumentList	& buf		1103059	1					
ANR	1103284	Argument	& buf		1103059	0					
ANR	1103285	UnaryOperationExpression	& buf		1103059	0					
ANR	1103286	UnaryOperator	&		1103059	0					
ANR	1103287	Identifier	buf		1103059	1					
ANR	1103288	Statement	if	87:4:1347:1348	1103059	23	True				
ANR	1103289	Statement	(	87:7:1350:1350	1103059	24	True				
ANR	1103290	Statement	ihsize	87:8:1351:1356	1103059	25	True				
ANR	1103291	Statement	+	87:15:1358:1358	1103059	26	True				
ANR	1103292	Statement	14L	87:17:1360:1362	1103059	27	True				
ANR	1103293	Statement	L	87:20:1363:1363	1103059	28	True				
ANR	1103294	Statement	>	87:22:1365:1365	1103059	29	True				
ANR	1103295	Statement	hsize	87:24:1367:1371	1103059	30	True				
ANR	1103296	Statement	)	87:29:1372:1372	1103059	31	True				
ANR	1103297	CompoundStatement		81:31:1218:1218	1103059	32					
ANR	1103298	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %u\\n"" , hsize )"	89:8:1385:1447	1103059	0	True				
ANR	1103299	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %u\\n"" , hsize )"		1103059	0					
ANR	1103300	Callee	av_log		1103059	0					
ANR	1103301	Identifier	av_log		1103059	0					
ANR	1103302	ArgumentList	avctx		1103059	1					
ANR	1103303	Argument	avctx		1103059	0					
ANR	1103304	Identifier	avctx		1103059	0					
ANR	1103305	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103306	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103307	Argument	"""invalid header size %u\\n"""		1103059	2					
ANR	1103308	PrimaryExpression	"""invalid header size %u\\n"""		1103059	0					
ANR	1103309	Argument	hsize		1103059	3					
ANR	1103310	Identifier	hsize		1103059	0					
ANR	1103311	ReturnStatement	return AVERROR_INVALIDDATA ;	91:8:1458:1484	1103059	1	True				
ANR	1103312	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103313	IfStatement	if ( fsize == 14 || fsize == ihsize + 14 )		1103059	33					
ANR	1103314	Condition	fsize == 14 || fsize == ihsize + 14	99:8:1593:1627	1103059	0	True				
ANR	1103315	OrExpression	fsize == 14 || fsize == ihsize + 14		1103059	0		||			
ANR	1103316	EqualityExpression	fsize == 14		1103059	0		==			
ANR	1103317	Identifier	fsize		1103059	0					
ANR	1103318	PrimaryExpression	14		1103059	1					
ANR	1103319	EqualityExpression	fsize == ihsize + 14		1103059	1		==			
ANR	1103320	Identifier	fsize		1103059	0					
ANR	1103321	AdditiveExpression	ihsize + 14		1103059	1		+			
ANR	1103322	Identifier	ihsize		1103059	0					
ANR	1103323	PrimaryExpression	14		1103059	1					
ANR	1103324	ExpressionStatement	fsize = buf_size - 2	101:8:1639:1659	1103059	1	True				
ANR	1103325	AssignmentExpression	fsize = buf_size - 2		1103059	0		=			
ANR	1103326	Identifier	fsize		1103059	0					
ANR	1103327	AdditiveExpression	buf_size - 2		1103059	1		-			
ANR	1103328	Identifier	buf_size		1103059	0					
ANR	1103329	PrimaryExpression	2		1103059	1					
ANR	1103330	IfStatement	if ( fsize <= hsize )		1103059	34					
ANR	1103331	Condition	fsize <= hsize	105:8:1672:1685	1103059	0	True				
ANR	1103332	RelationalExpression	fsize <= hsize		1103059	0		<=			
ANR	1103333	Identifier	fsize		1103059	0					
ANR	1103334	Identifier	hsize		1103059	1					
ANR	1103335	CompoundStatement		99:24:1532:1532	1103059	1					
ANR	1103336	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Declared file size is less than header size (%u < %u)\\n"" , fsize , hsize )"	107:8:1699:1831	1103059	0	True				
ANR	1103337	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Declared file size is less than header size (%u < %u)\\n"" , fsize , hsize )"		1103059	0					
ANR	1103338	Callee	av_log		1103059	0					
ANR	1103339	Identifier	av_log		1103059	0					
ANR	1103340	ArgumentList	avctx		1103059	1					
ANR	1103341	Argument	avctx		1103059	0					
ANR	1103342	Identifier	avctx		1103059	0					
ANR	1103343	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103344	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103345	Argument	"""Declared file size is less than header size (%u < %u)\\n"""		1103059	2					
ANR	1103346	PrimaryExpression	"""Declared file size is less than header size (%u < %u)\\n"""		1103059	0					
ANR	1103347	Argument	fsize		1103059	3					
ANR	1103348	Identifier	fsize		1103059	0					
ANR	1103349	Argument	hsize		1103059	4					
ANR	1103350	Identifier	hsize		1103059	0					
ANR	1103351	ReturnStatement	return AVERROR_INVALIDDATA ;	113:8:1842:1868	1103059	1	True				
ANR	1103352	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103353	SwitchStatement	switch ( ihsize )		1103059	35					
ANR	1103354	Condition	ihsize	119:12:1892:1897	1103059	0	True				
ANR	1103355	Identifier	ihsize		1103059	0					
ANR	1103356	CompoundStatement		113:20:1744:1744	1103059	1					
ANR	1103357	Label	case 40 :	121:4:1907:1915	1103059	0	True				
ANR	1103358	Label	case 56 :	123:4:1932:1940	1103059	1	True				
ANR	1103359	Label	case 64 :	125:4:1960:1968	1103059	2	True				
ANR	1103360	Label	case 108 :	127:4:1986:1994	1103059	3	True				
ANR	1103361	Label	case 124 :	129:4:2014:2022	1103059	4	True				
ANR	1103362	ExpressionStatement	width = bytestream_get_le32 ( & buf )	131:8:2046:2080	1103059	5	True				
ANR	1103363	AssignmentExpression	width = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103364	Identifier	width		1103059	0					
ANR	1103365	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103366	Callee	bytestream_get_le32		1103059	0					
ANR	1103367	Identifier	bytestream_get_le32		1103059	0					
ANR	1103368	ArgumentList	& buf		1103059	1					
ANR	1103369	Argument	& buf		1103059	0					
ANR	1103370	UnaryOperationExpression	& buf		1103059	0					
ANR	1103371	UnaryOperator	&		1103059	0					
ANR	1103372	Identifier	buf		1103059	1					
ANR	1103373	ExpressionStatement	height = bytestream_get_le32 ( & buf )	133:8:2091:2125	1103059	6	True				
ANR	1103374	AssignmentExpression	height = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103375	Identifier	height		1103059	0					
ANR	1103376	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103377	Callee	bytestream_get_le32		1103059	0					
ANR	1103378	Identifier	bytestream_get_le32		1103059	0					
ANR	1103379	ArgumentList	& buf		1103059	1					
ANR	1103380	Argument	& buf		1103059	0					
ANR	1103381	UnaryOperationExpression	& buf		1103059	0					
ANR	1103382	UnaryOperator	&		1103059	0					
ANR	1103383	Identifier	buf		1103059	1					
ANR	1103384	BreakStatement	break ;	135:8:2136:2141	1103059	7	True				
ANR	1103385	Label	case 12 :	137:4:2148:2156	1103059	8	True				
ANR	1103386	ExpressionStatement	width = bytestream_get_le16 ( & buf )	139:8:2178:2212	1103059	9	True				
ANR	1103387	AssignmentExpression	width = bytestream_get_le16 ( & buf )		1103059	0		=			
ANR	1103388	Identifier	width		1103059	0					
ANR	1103389	CallExpression	bytestream_get_le16 ( & buf )		1103059	1					
ANR	1103390	Callee	bytestream_get_le16		1103059	0					
ANR	1103391	Identifier	bytestream_get_le16		1103059	0					
ANR	1103392	ArgumentList	& buf		1103059	1					
ANR	1103393	Argument	& buf		1103059	0					
ANR	1103394	UnaryOperationExpression	& buf		1103059	0					
ANR	1103395	UnaryOperator	&		1103059	0					
ANR	1103396	Identifier	buf		1103059	1					
ANR	1103397	ExpressionStatement	height = bytestream_get_le16 ( & buf )	141:8:2223:2257	1103059	10	True				
ANR	1103398	AssignmentExpression	height = bytestream_get_le16 ( & buf )		1103059	0		=			
ANR	1103399	Identifier	height		1103059	0					
ANR	1103400	CallExpression	bytestream_get_le16 ( & buf )		1103059	1					
ANR	1103401	Callee	bytestream_get_le16		1103059	0					
ANR	1103402	Identifier	bytestream_get_le16		1103059	0					
ANR	1103403	ArgumentList	& buf		1103059	1					
ANR	1103404	Argument	& buf		1103059	0					
ANR	1103405	UnaryOperationExpression	& buf		1103059	0					
ANR	1103406	UnaryOperator	&		1103059	0					
ANR	1103407	Identifier	buf		1103059	1					
ANR	1103408	BreakStatement	break ;	143:8:2268:2273	1103059	11	True				
ANR	1103409	Label	default :	145:4:2280:2287	1103059	12	True				
ANR	1103410	Identifier	default		1103059	0					
ANR	1103411	ExpressionStatement	"avpriv_report_missing_feature ( avctx , ""Information header size %u"" , ihsize )"	147:8:2298:2411	1103059	13	True				
ANR	1103412	CallExpression	"avpriv_report_missing_feature ( avctx , ""Information header size %u"" , ihsize )"		1103059	0					
ANR	1103413	Callee	avpriv_report_missing_feature		1103059	0					
ANR	1103414	Identifier	avpriv_report_missing_feature		1103059	0					
ANR	1103415	ArgumentList	avctx		1103059	1					
ANR	1103416	Argument	avctx		1103059	0					
ANR	1103417	Identifier	avctx		1103059	0					
ANR	1103418	Argument	"""Information header size %u"""		1103059	1					
ANR	1103419	PrimaryExpression	"""Information header size %u"""		1103059	0					
ANR	1103420	Argument	ihsize		1103059	2					
ANR	1103421	Identifier	ihsize		1103059	0					
ANR	1103422	ReturnStatement	return AVERROR_PATCHWELCOME ;	151:8:2422:2449	1103059	14	True				
ANR	1103423	Identifier	AVERROR_PATCHWELCOME		1103059	0					
ANR	1103424	IfStatement	if ( bytestream_get_le16 ( & buf ) != 1 )		1103059	36					
ANR	1103425	Condition	bytestream_get_le16 ( & buf ) != 1	159:8:2487:2516	1103059	0	True				
ANR	1103426	EqualityExpression	bytestream_get_le16 ( & buf ) != 1		1103059	0		!=			
ANR	1103427	CallExpression	bytestream_get_le16 ( & buf )		1103059	0					
ANR	1103428	Callee	bytestream_get_le16		1103059	0					
ANR	1103429	Identifier	bytestream_get_le16		1103059	0					
ANR	1103430	ArgumentList	& buf		1103059	1					
ANR	1103431	Argument	& buf		1103059	0					
ANR	1103432	UnaryOperationExpression	& buf		1103059	0					
ANR	1103433	UnaryOperator	&		1103059	0					
ANR	1103434	Identifier	buf		1103059	1					
ANR	1103435	PrimaryExpression	1		1103059	1					
ANR	1103436	CompoundStatement		153:40:2363:2363	1103059	1					
ANR	1103437	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"	161:8:2530:2581	1103059	0	True				
ANR	1103438	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"		1103059	0					
ANR	1103439	Callee	av_log		1103059	0					
ANR	1103440	Identifier	av_log		1103059	0					
ANR	1103441	ArgumentList	avctx		1103059	1					
ANR	1103442	Argument	avctx		1103059	0					
ANR	1103443	Identifier	avctx		1103059	0					
ANR	1103444	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103445	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103446	Argument	"""invalid BMP header\\n"""		1103059	2					
ANR	1103447	PrimaryExpression	"""invalid BMP header\\n"""		1103059	0					
ANR	1103448	ReturnStatement	return AVERROR_INVALIDDATA ;	163:8:2592:2618	1103059	1	True				
ANR	1103449	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103450	ExpressionStatement	depth = bytestream_get_le16 ( & buf )	169:4:2634:2667	1103059	37	True				
ANR	1103451	AssignmentExpression	depth = bytestream_get_le16 ( & buf )		1103059	0		=			
ANR	1103452	Identifier	depth		1103059	0					
ANR	1103453	CallExpression	bytestream_get_le16 ( & buf )		1103059	1					
ANR	1103454	Callee	bytestream_get_le16		1103059	0					
ANR	1103455	Identifier	bytestream_get_le16		1103059	0					
ANR	1103456	ArgumentList	& buf		1103059	1					
ANR	1103457	Argument	& buf		1103059	0					
ANR	1103458	UnaryOperationExpression	& buf		1103059	0					
ANR	1103459	UnaryOperator	&		1103059	0					
ANR	1103460	Identifier	buf		1103059	1					
ANR	1103461	IfStatement	if ( ihsize >= 40 )		1103059	38					
ANR	1103462	Condition	ihsize >= 40	173:8:2680:2691	1103059	0	True				
ANR	1103463	RelationalExpression	ihsize >= 40		1103059	0		>=			
ANR	1103464	Identifier	ihsize		1103059	0					
ANR	1103465	PrimaryExpression	40		1103059	1					
ANR	1103466	ExpressionStatement	comp = bytestream_get_le32 ( & buf )	175:8:2703:2735	1103059	1	True				
ANR	1103467	AssignmentExpression	comp = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103468	Identifier	comp		1103059	0					
ANR	1103469	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103470	Callee	bytestream_get_le32		1103059	0					
ANR	1103471	Identifier	bytestream_get_le32		1103059	0					
ANR	1103472	ArgumentList	& buf		1103059	1					
ANR	1103473	Argument	& buf		1103059	0					
ANR	1103474	UnaryOperationExpression	& buf		1103059	0					
ANR	1103475	UnaryOperator	&		1103059	0					
ANR	1103476	Identifier	buf		1103059	1					
ANR	1103477	ElseStatement	else		1103059	0					
ANR	1103478	ExpressionStatement	comp = BMP_RGB	179:8:2756:2770	1103059	0	True				
ANR	1103479	AssignmentExpression	comp = BMP_RGB		1103059	0		=			
ANR	1103480	Identifier	comp		1103059	0					
ANR	1103481	Identifier	BMP_RGB		1103059	1					
ANR	1103482	IfStatement	if ( comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8 )		1103059	39					
ANR	1103483	Condition	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8	183:8:2783:2871	1103059	0	True				
ANR	1103484	AndExpression	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1103059	0		&&			
ANR	1103485	EqualityExpression	comp != BMP_RGB		1103059	0		!=			
ANR	1103486	Identifier	comp		1103059	0					
ANR	1103487	Identifier	BMP_RGB		1103059	1					
ANR	1103488	AndExpression	comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1103059	1		&&			
ANR	1103489	EqualityExpression	comp != BMP_BITFIELDS		1103059	0		!=			
ANR	1103490	Identifier	comp		1103059	0					
ANR	1103491	Identifier	BMP_BITFIELDS		1103059	1					
ANR	1103492	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1103059	1		&&			
ANR	1103493	EqualityExpression	comp != BMP_RLE4		1103059	0		!=			
ANR	1103494	Identifier	comp		1103059	0					
ANR	1103495	Identifier	BMP_RLE4		1103059	1					
ANR	1103496	EqualityExpression	comp != BMP_RLE8		1103059	1		!=			
ANR	1103497	Identifier	comp		1103059	0					
ANR	1103498	Identifier	BMP_RLE8		1103059	1					
ANR	1103499	CompoundStatement		179:26:2718:2718	1103059	1					
ANR	1103500	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"	187:8:2885:2951	1103059	0	True				
ANR	1103501	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"		1103059	0					
ANR	1103502	Callee	av_log		1103059	0					
ANR	1103503	Identifier	av_log		1103059	0					
ANR	1103504	ArgumentList	avctx		1103059	1					
ANR	1103505	Argument	avctx		1103059	0					
ANR	1103506	Identifier	avctx		1103059	0					
ANR	1103507	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103508	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103509	Argument	"""BMP coding %d not supported\\n"""		1103059	2					
ANR	1103510	PrimaryExpression	"""BMP coding %d not supported\\n"""		1103059	0					
ANR	1103511	Argument	comp		1103059	3					
ANR	1103512	Identifier	comp		1103059	0					
ANR	1103513	ReturnStatement	return AVERROR_INVALIDDATA ;	189:8:2962:2988	1103059	1	True				
ANR	1103514	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103515	IfStatement	if ( comp == BMP_BITFIELDS )		1103059	40					
ANR	1103516	Condition	comp == BMP_BITFIELDS	195:8:3008:3028	1103059	0	True				
ANR	1103517	EqualityExpression	comp == BMP_BITFIELDS		1103059	0		==			
ANR	1103518	Identifier	comp		1103059	0					
ANR	1103519	Identifier	BMP_BITFIELDS		1103059	1					
ANR	1103520	CompoundStatement		189:31:2875:2875	1103059	1					
ANR	1103521	ExpressionStatement	buf += 20	197:8:3042:3051	1103059	0	True				
ANR	1103522	AssignmentExpression	buf += 20		1103059	0		+=			
ANR	1103523	Identifier	buf		1103059	0					
ANR	1103524	PrimaryExpression	20		1103059	1					
ANR	1103525	ExpressionStatement	rgb [ 0 ] = bytestream_get_le32 ( & buf )	199:8:3062:3096	1103059	1	True				
ANR	1103526	AssignmentExpression	rgb [ 0 ] = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103527	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103528	Identifier	rgb		1103059	0					
ANR	1103529	PrimaryExpression	0		1103059	1					
ANR	1103530	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103531	Callee	bytestream_get_le32		1103059	0					
ANR	1103532	Identifier	bytestream_get_le32		1103059	0					
ANR	1103533	ArgumentList	& buf		1103059	1					
ANR	1103534	Argument	& buf		1103059	0					
ANR	1103535	UnaryOperationExpression	& buf		1103059	0					
ANR	1103536	UnaryOperator	&		1103059	0					
ANR	1103537	Identifier	buf		1103059	1					
ANR	1103538	ExpressionStatement	rgb [ 1 ] = bytestream_get_le32 ( & buf )	201:8:3107:3141	1103059	2	True				
ANR	1103539	AssignmentExpression	rgb [ 1 ] = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103540	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103541	Identifier	rgb		1103059	0					
ANR	1103542	PrimaryExpression	1		1103059	1					
ANR	1103543	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103544	Callee	bytestream_get_le32		1103059	0					
ANR	1103545	Identifier	bytestream_get_le32		1103059	0					
ANR	1103546	ArgumentList	& buf		1103059	1					
ANR	1103547	Argument	& buf		1103059	0					
ANR	1103548	UnaryOperationExpression	& buf		1103059	0					
ANR	1103549	UnaryOperator	&		1103059	0					
ANR	1103550	Identifier	buf		1103059	1					
ANR	1103551	ExpressionStatement	rgb [ 2 ] = bytestream_get_le32 ( & buf )	203:8:3152:3186	1103059	3	True				
ANR	1103552	AssignmentExpression	rgb [ 2 ] = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103553	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103554	Identifier	rgb		1103059	0					
ANR	1103555	PrimaryExpression	2		1103059	1					
ANR	1103556	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103557	Callee	bytestream_get_le32		1103059	0					
ANR	1103558	Identifier	bytestream_get_le32		1103059	0					
ANR	1103559	ArgumentList	& buf		1103059	1					
ANR	1103560	Argument	& buf		1103059	0					
ANR	1103561	UnaryOperationExpression	& buf		1103059	0					
ANR	1103562	UnaryOperator	&		1103059	0					
ANR	1103563	Identifier	buf		1103059	1					
ANR	1103564	IfStatement	if ( ihsize > 40 )		1103059	4					
ANR	1103565	Condition	ihsize > 40	205:12:3201:3211	1103059	0	True				
ANR	1103566	RelationalExpression	ihsize > 40		1103059	0		>			
ANR	1103567	Identifier	ihsize		1103059	0					
ANR	1103568	PrimaryExpression	40		1103059	1					
ANR	1103569	ExpressionStatement	alpha = bytestream_get_le32 ( & buf )	207:8:3223:3256	1103059	1	True				
ANR	1103570	AssignmentExpression	alpha = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1103571	Identifier	alpha		1103059	0					
ANR	1103572	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1103573	Callee	bytestream_get_le32		1103059	0					
ANR	1103574	Identifier	bytestream_get_le32		1103059	0					
ANR	1103575	ArgumentList	& buf		1103059	1					
ANR	1103576	Argument	& buf		1103059	0					
ANR	1103577	UnaryOperationExpression	& buf		1103059	0					
ANR	1103578	UnaryOperator	&		1103059	0					
ANR	1103579	Identifier	buf		1103059	1					
ANR	1103580	ExpressionStatement	avctx -> width = width	213:4:3272:3293	1103059	41	True				
ANR	1103581	AssignmentExpression	avctx -> width = width		1103059	0		=			
ANR	1103582	PtrMemberAccess	avctx -> width		1103059	0					
ANR	1103583	Identifier	avctx		1103059	0					
ANR	1103584	Identifier	width		1103059	1					
ANR	1103585	Identifier	width		1103059	1					
ANR	1103586	ExpressionStatement	avctx -> height = height > 0 ? height : - ( unsigned ) height	215:4:3300:3355	1103059	42	True				
ANR	1103587	AssignmentExpression	avctx -> height = height > 0 ? height : - ( unsigned ) height		1103059	0		=			
ANR	1103588	PtrMemberAccess	avctx -> height		1103059	0					
ANR	1103589	Identifier	avctx		1103059	0					
ANR	1103590	Identifier	height		1103059	1					
ANR	1103591	ConditionalExpression	height > 0 ? height : - ( unsigned ) height		1103059	1					
ANR	1103592	Condition	height > 0		1103059	0					
ANR	1103593	RelationalExpression	height > 0		1103059	0		>			
ANR	1103594	Identifier	height		1103059	0					
ANR	1103595	PrimaryExpression	0		1103059	1					
ANR	1103596	Identifier	height		1103059	1					
ANR	1103597	UnaryOperationExpression	- ( unsigned ) height		1103059	2					
ANR	1103598	UnaryOperator	-		1103059	0					
ANR	1103599	CastExpression	( unsigned ) height		1103059	1					
ANR	1103600	CastTarget	unsigned		1103059	0					
ANR	1103601	Identifier	height		1103059	1					
ANR	1103602	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_NONE	219:4:3364:3396	1103059	43	True				
ANR	1103603	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_NONE		1103059	0		=			
ANR	1103604	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103605	Identifier	avctx		1103059	0					
ANR	1103606	Identifier	pix_fmt		1103059	1					
ANR	1103607	Identifier	AV_PIX_FMT_NONE		1103059	1					
ANR	1103608	SwitchStatement	switch ( depth )		1103059	44					
ANR	1103609	Condition	depth	223:12:3413:3417	1103059	0	True				
ANR	1103610	Identifier	depth		1103059	0					
ANR	1103611	CompoundStatement		217:19:3264:3264	1103059	1					
ANR	1103612	Label	case 32 :	225:4:3427:3434	1103059	0	True				
ANR	1103613	IfStatement	if ( comp == BMP_BITFIELDS )		1103059	1					
ANR	1103614	Condition	comp == BMP_BITFIELDS	227:12:3449:3469	1103059	0	True				
ANR	1103615	EqualityExpression	comp == BMP_BITFIELDS		1103059	0		==			
ANR	1103616	Identifier	comp		1103059	0					
ANR	1103617	Identifier	BMP_BITFIELDS		1103059	1					
ANR	1103618	CompoundStatement		221:35:3316:3316	1103059	1					
ANR	1103619	IfStatement	if ( rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00 )		1103059	0					
ANR	1103620	Condition	rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00	229:16:3491:3558	1103059	0	True				
ANR	1103621	AndExpression	rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00		1103059	0		&&			
ANR	1103622	EqualityExpression	rgb [ 0 ] == 0xFF000000		1103059	0		==			
ANR	1103623	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103624	Identifier	rgb		1103059	0					
ANR	1103625	PrimaryExpression	0		1103059	1					
ANR	1103626	PrimaryExpression	0xFF000000		1103059	1					
ANR	1103627	AndExpression	rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00		1103059	1		&&			
ANR	1103628	EqualityExpression	rgb [ 1 ] == 0x00FF0000		1103059	0		==			
ANR	1103629	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103630	Identifier	rgb		1103059	0					
ANR	1103631	PrimaryExpression	1		1103059	1					
ANR	1103632	PrimaryExpression	0x00FF0000		1103059	1					
ANR	1103633	EqualityExpression	rgb [ 2 ] == 0x0000FF00		1103059	1		==			
ANR	1103634	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103635	Identifier	rgb		1103059	0					
ANR	1103636	PrimaryExpression	2		1103059	1					
ANR	1103637	PrimaryExpression	0x0000FF00		1103059	1					
ANR	1103638	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR	231:16:3578:3636	1103059	1	True				
ANR	1103639	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR		1103059	0		=			
ANR	1103640	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103641	Identifier	avctx		1103059	0					
ANR	1103642	Identifier	pix_fmt		1103059	1					
ANR	1103643	ConditionalExpression	alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR		1103059	1					
ANR	1103644	Condition	alpha		1103059	0					
ANR	1103645	Identifier	alpha		1103059	0					
ANR	1103646	Identifier	AV_PIX_FMT_ABGR		1103059	1					
ANR	1103647	Identifier	AV_PIX_FMT_0BGR		1103059	2					
ANR	1103648	ElseStatement	else		1103059	0					
ANR	1103649	IfStatement	if ( rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF )		1103059	0					
ANR	1103650	Condition	rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF	233:21:3660:3727	1103059	0	True				
ANR	1103651	AndExpression	rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF		1103059	0		&&			
ANR	1103652	EqualityExpression	rgb [ 0 ] == 0x00FF0000		1103059	0		==			
ANR	1103653	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103654	Identifier	rgb		1103059	0					
ANR	1103655	PrimaryExpression	0		1103059	1					
ANR	1103656	PrimaryExpression	0x00FF0000		1103059	1					
ANR	1103657	AndExpression	rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF		1103059	1		&&			
ANR	1103658	EqualityExpression	rgb [ 1 ] == 0x0000FF00		1103059	0		==			
ANR	1103659	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103660	Identifier	rgb		1103059	0					
ANR	1103661	PrimaryExpression	1		1103059	1					
ANR	1103662	PrimaryExpression	0x0000FF00		1103059	1					
ANR	1103663	EqualityExpression	rgb [ 2 ] == 0x000000FF		1103059	1		==			
ANR	1103664	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103665	Identifier	rgb		1103059	0					
ANR	1103666	PrimaryExpression	2		1103059	1					
ANR	1103667	PrimaryExpression	0x000000FF		1103059	1					
ANR	1103668	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0	235:16:3747:3805	1103059	1	True				
ANR	1103669	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0		1103059	0		=			
ANR	1103670	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103671	Identifier	avctx		1103059	0					
ANR	1103672	Identifier	pix_fmt		1103059	1					
ANR	1103673	ConditionalExpression	alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0		1103059	1					
ANR	1103674	Condition	alpha		1103059	0					
ANR	1103675	Identifier	alpha		1103059	0					
ANR	1103676	Identifier	AV_PIX_FMT_BGRA		1103059	1					
ANR	1103677	Identifier	AV_PIX_FMT_BGR0		1103059	2					
ANR	1103678	ElseStatement	else		1103059	0					
ANR	1103679	IfStatement	if ( rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000 )		1103059	0					
ANR	1103680	Condition	rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000	237:21:3829:3896	1103059	0	True				
ANR	1103681	AndExpression	rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000		1103059	0		&&			
ANR	1103682	EqualityExpression	rgb [ 0 ] == 0x0000FF00		1103059	0		==			
ANR	1103683	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103684	Identifier	rgb		1103059	0					
ANR	1103685	PrimaryExpression	0		1103059	1					
ANR	1103686	PrimaryExpression	0x0000FF00		1103059	1					
ANR	1103687	AndExpression	rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000		1103059	1		&&			
ANR	1103688	EqualityExpression	rgb [ 1 ] == 0x00FF0000		1103059	0		==			
ANR	1103689	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103690	Identifier	rgb		1103059	0					
ANR	1103691	PrimaryExpression	1		1103059	1					
ANR	1103692	PrimaryExpression	0x00FF0000		1103059	1					
ANR	1103693	EqualityExpression	rgb [ 2 ] == 0xFF000000		1103059	1		==			
ANR	1103694	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103695	Identifier	rgb		1103059	0					
ANR	1103696	PrimaryExpression	2		1103059	1					
ANR	1103697	PrimaryExpression	0xFF000000		1103059	1					
ANR	1103698	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB	239:16:3916:3974	1103059	1	True				
ANR	1103699	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB		1103059	0		=			
ANR	1103700	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103701	Identifier	avctx		1103059	0					
ANR	1103702	Identifier	pix_fmt		1103059	1					
ANR	1103703	ConditionalExpression	alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB		1103059	1					
ANR	1103704	Condition	alpha		1103059	0					
ANR	1103705	Identifier	alpha		1103059	0					
ANR	1103706	Identifier	AV_PIX_FMT_ARGB		1103059	1					
ANR	1103707	Identifier	AV_PIX_FMT_0RGB		1103059	2					
ANR	1103708	ElseStatement	else		1103059	0					
ANR	1103709	IfStatement	if ( rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000 )		1103059	0					
ANR	1103710	Condition	rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000	241:21:3998:4065	1103059	0	True				
ANR	1103711	AndExpression	rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000		1103059	0		&&			
ANR	1103712	EqualityExpression	rgb [ 0 ] == 0x000000FF		1103059	0		==			
ANR	1103713	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103714	Identifier	rgb		1103059	0					
ANR	1103715	PrimaryExpression	0		1103059	1					
ANR	1103716	PrimaryExpression	0x000000FF		1103059	1					
ANR	1103717	AndExpression	rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000		1103059	1		&&			
ANR	1103718	EqualityExpression	rgb [ 1 ] == 0x0000FF00		1103059	0		==			
ANR	1103719	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103720	Identifier	rgb		1103059	0					
ANR	1103721	PrimaryExpression	1		1103059	1					
ANR	1103722	PrimaryExpression	0x0000FF00		1103059	1					
ANR	1103723	EqualityExpression	rgb [ 2 ] == 0x00FF0000		1103059	1		==			
ANR	1103724	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103725	Identifier	rgb		1103059	0					
ANR	1103726	PrimaryExpression	2		1103059	1					
ANR	1103727	PrimaryExpression	0x00FF0000		1103059	1					
ANR	1103728	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0	243:16:4085:4143	1103059	1	True				
ANR	1103729	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0		1103059	0		=			
ANR	1103730	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103731	Identifier	avctx		1103059	0					
ANR	1103732	Identifier	pix_fmt		1103059	1					
ANR	1103733	ConditionalExpression	alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0		1103059	1					
ANR	1103734	Condition	alpha		1103059	0					
ANR	1103735	Identifier	alpha		1103059	0					
ANR	1103736	Identifier	AV_PIX_FMT_RGBA		1103059	1					
ANR	1103737	Identifier	AV_PIX_FMT_RGB0		1103059	2					
ANR	1103738	ElseStatement	else		1103059	0					
ANR	1103739	CompoundStatement		239:17:4007:4007	1103059	0					
ANR	1103740	Statement	av_log	247:16:4182:4187	1103059	0	True				
ANR	1103741	Statement	(	247:22:4188:4188	1103059	1	True				
ANR	1103742	Statement	avctx	247:23:4189:4193	1103059	2	True				
ANR	1103743	Statement	","	247:28:4194:4194	1103059	3	True				
ANR	1103744	Statement	AV_LOG_ERROR	247:30:4196:4207	1103059	4	True				
ANR	1103745	Statement	","	247:42:4208:4208	1103059	5	True				
ANR	1103746	Statement	"""Unknown bitfields """	247:44:4210:4229	1103059	6	True				
ANR	1103747	Statement	"""%0"""	249:23:4255:4258	1103059	7	True				
ANR	1103748	Statement	PRIX32	249:27:4259:4264	1103059	8	True				
ANR	1103749	Statement	""" %0"""	249:33:4265:4269	1103059	9	True				
ANR	1103750	Statement	PRIX32	249:38:4270:4275	1103059	10	True				
ANR	1103751	Statement	""" %0"""	249:44:4276:4280	1103059	11	True				
ANR	1103752	Statement	PRIX32	249:49:4281:4286	1103059	12	True				
ANR	1103753	Statement	"""\\n"""	249:55:4287:4290	1103059	13	True				
ANR	1103754	Statement	","	249:59:4291:4291	1103059	14	True				
ANR	1103755	Statement	rgb	249:61:4293:4295	1103059	15	True				
ANR	1103756	Statement	[	249:64:4296:4296	1103059	16	True				
ANR	1103757	Statement	0	249:65:4297:4297	1103059	17	True				
ANR	1103758	Statement	]	249:66:4298:4298	1103059	18	True				
ANR	1103759	Statement	","	249:67:4299:4299	1103059	19	True				
ANR	1103760	Statement	rgb	249:69:4301:4303	1103059	20	True				
ANR	1103761	Statement	[	249:72:4304:4304	1103059	21	True				
ANR	1103762	Statement	1	249:73:4305:4305	1103059	22	True				
ANR	1103763	Statement	]	249:74:4306:4306	1103059	23	True				
ANR	1103764	Statement	","	249:75:4307:4307	1103059	24	True				
ANR	1103765	Statement	rgb	249:77:4309:4311	1103059	25	True				
ANR	1103766	Statement	[	249:80:4312:4312	1103059	26	True				
ANR	1103767	Statement	2	249:81:4313:4313	1103059	27	True				
ANR	1103768	Statement	]	249:82:4314:4314	1103059	28	True				
ANR	1103769	Statement	)	249:83:4315:4315	1103059	29	True				
ANR	1103770	ExpressionStatement		249:84:4316:4316	1103059	30	True				
ANR	1103771	ReturnStatement	return AVERROR ( EINVAL ) ;	251:16:4335:4357	1103059	31	True				
ANR	1103772	CallExpression	AVERROR ( EINVAL )		1103059	0					
ANR	1103773	Callee	AVERROR		1103059	0					
ANR	1103774	Identifier	AVERROR		1103059	0					
ANR	1103775	ArgumentList	EINVAL		1103059	1					
ANR	1103776	Argument	EINVAL		1103059	0					
ANR	1103777	Identifier	EINVAL		1103059	0					
ANR	1103778	ElseStatement	else		1103059	0					
ANR	1103779	CompoundStatement		249:15:4234:4234	1103059	0					
ANR	1103780	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_BGRA	257:12:4405:4437	1103059	0	True				
ANR	1103781	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_BGRA		1103059	0		=			
ANR	1103782	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103783	Identifier	avctx		1103059	0					
ANR	1103784	Identifier	pix_fmt		1103059	1					
ANR	1103785	Identifier	AV_PIX_FMT_BGRA		1103059	1					
ANR	1103786	BreakStatement	break ;	261:8:4459:4464	1103059	2	True				
ANR	1103787	Label	case 24 :	263:4:4471:4478	1103059	3	True				
ANR	1103788	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_BGR24	265:8:4489:4522	1103059	4	True				
ANR	1103789	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_BGR24		1103059	0		=			
ANR	1103790	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103791	Identifier	avctx		1103059	0					
ANR	1103792	Identifier	pix_fmt		1103059	1					
ANR	1103793	Identifier	AV_PIX_FMT_BGR24		1103059	1					
ANR	1103794	BreakStatement	break ;	267:8:4533:4538	1103059	5	True				
ANR	1103795	Label	case 16 :	269:4:4545:4552	1103059	6	True				
ANR	1103796	IfStatement	if ( comp == BMP_RGB )		1103059	7					
ANR	1103797	Condition	comp == BMP_RGB	271:12:4567:4581	1103059	0	True				
ANR	1103798	EqualityExpression	comp == BMP_RGB		1103059	0		==			
ANR	1103799	Identifier	comp		1103059	0					
ANR	1103800	Identifier	BMP_RGB		1103059	1					
ANR	1103801	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB555	273:12:4597:4631	1103059	1	True				
ANR	1103802	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB555		1103059	0		=			
ANR	1103803	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103804	Identifier	avctx		1103059	0					
ANR	1103805	Identifier	pix_fmt		1103059	1					
ANR	1103806	Identifier	AV_PIX_FMT_RGB555		1103059	1					
ANR	1103807	ElseStatement	else		1103059	0					
ANR	1103808	IfStatement	if ( comp == BMP_BITFIELDS )		1103059	0					
ANR	1103809	Condition	comp == BMP_BITFIELDS	275:17:4651:4671	1103059	0	True				
ANR	1103810	EqualityExpression	comp == BMP_BITFIELDS		1103059	0		==			
ANR	1103811	Identifier	comp		1103059	0					
ANR	1103812	Identifier	BMP_BITFIELDS		1103059	1					
ANR	1103813	CompoundStatement		269:40:4518:4518	1103059	1					
ANR	1103814	IfStatement	if ( rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F )		1103059	0					
ANR	1103815	Condition	rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F	277:16:4693:4748	1103059	0	True				
ANR	1103816	AndExpression	rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F		1103059	0		&&			
ANR	1103817	EqualityExpression	rgb [ 0 ] == 0xF800		1103059	0		==			
ANR	1103818	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103819	Identifier	rgb		1103059	0					
ANR	1103820	PrimaryExpression	0		1103059	1					
ANR	1103821	PrimaryExpression	0xF800		1103059	1					
ANR	1103822	AndExpression	rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F		1103059	1		&&			
ANR	1103823	EqualityExpression	rgb [ 1 ] == 0x07E0		1103059	0		==			
ANR	1103824	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103825	Identifier	rgb		1103059	0					
ANR	1103826	PrimaryExpression	1		1103059	1					
ANR	1103827	PrimaryExpression	0x07E0		1103059	1					
ANR	1103828	EqualityExpression	rgb [ 2 ] == 0x001F		1103059	1		==			
ANR	1103829	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103830	Identifier	rgb		1103059	0					
ANR	1103831	PrimaryExpression	2		1103059	1					
ANR	1103832	PrimaryExpression	0x001F		1103059	1					
ANR	1103833	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB565	279:15:4767:4801	1103059	1	True				
ANR	1103834	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB565		1103059	0		=			
ANR	1103835	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103836	Identifier	avctx		1103059	0					
ANR	1103837	Identifier	pix_fmt		1103059	1					
ANR	1103838	Identifier	AV_PIX_FMT_RGB565		1103059	1					
ANR	1103839	ElseStatement	else		1103059	0					
ANR	1103840	IfStatement	if ( rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F )		1103059	0					
ANR	1103841	Condition	rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F	281:21:4825:4880	1103059	0	True				
ANR	1103842	AndExpression	rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F		1103059	0		&&			
ANR	1103843	EqualityExpression	rgb [ 0 ] == 0x7C00		1103059	0		==			
ANR	1103844	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103845	Identifier	rgb		1103059	0					
ANR	1103846	PrimaryExpression	0		1103059	1					
ANR	1103847	PrimaryExpression	0x7C00		1103059	1					
ANR	1103848	AndExpression	rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F		1103059	1		&&			
ANR	1103849	EqualityExpression	rgb [ 1 ] == 0x03E0		1103059	0		==			
ANR	1103850	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103851	Identifier	rgb		1103059	0					
ANR	1103852	PrimaryExpression	1		1103059	1					
ANR	1103853	PrimaryExpression	0x03E0		1103059	1					
ANR	1103854	EqualityExpression	rgb [ 2 ] == 0x001F		1103059	1		==			
ANR	1103855	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103856	Identifier	rgb		1103059	0					
ANR	1103857	PrimaryExpression	2		1103059	1					
ANR	1103858	PrimaryExpression	0x001F		1103059	1					
ANR	1103859	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB555	283:15:4899:4933	1103059	1	True				
ANR	1103860	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB555		1103059	0		=			
ANR	1103861	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103862	Identifier	avctx		1103059	0					
ANR	1103863	Identifier	pix_fmt		1103059	1					
ANR	1103864	Identifier	AV_PIX_FMT_RGB555		1103059	1					
ANR	1103865	ElseStatement	else		1103059	0					
ANR	1103866	IfStatement	if ( rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F )		1103059	0					
ANR	1103867	Condition	rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F	285:21:4957:5012	1103059	0	True				
ANR	1103868	AndExpression	rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F		1103059	0		&&			
ANR	1103869	EqualityExpression	rgb [ 0 ] == 0x0F00		1103059	0		==			
ANR	1103870	ArrayIndexing	rgb [ 0 ]		1103059	0					
ANR	1103871	Identifier	rgb		1103059	0					
ANR	1103872	PrimaryExpression	0		1103059	1					
ANR	1103873	PrimaryExpression	0x0F00		1103059	1					
ANR	1103874	AndExpression	rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F		1103059	1		&&			
ANR	1103875	EqualityExpression	rgb [ 1 ] == 0x00F0		1103059	0		==			
ANR	1103876	ArrayIndexing	rgb [ 1 ]		1103059	0					
ANR	1103877	Identifier	rgb		1103059	0					
ANR	1103878	PrimaryExpression	1		1103059	1					
ANR	1103879	PrimaryExpression	0x00F0		1103059	1					
ANR	1103880	EqualityExpression	rgb [ 2 ] == 0x000F		1103059	1		==			
ANR	1103881	ArrayIndexing	rgb [ 2 ]		1103059	0					
ANR	1103882	Identifier	rgb		1103059	0					
ANR	1103883	PrimaryExpression	2		1103059	1					
ANR	1103884	PrimaryExpression	0x000F		1103059	1					
ANR	1103885	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB444	287:15:5031:5065	1103059	1	True				
ANR	1103886	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB444		1103059	0		=			
ANR	1103887	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103888	Identifier	avctx		1103059	0					
ANR	1103889	Identifier	pix_fmt		1103059	1					
ANR	1103890	Identifier	AV_PIX_FMT_RGB444		1103059	1					
ANR	1103891	ElseStatement	else		1103059	0					
ANR	1103892	CompoundStatement		283:17:4929:4929	1103059	0					
ANR	1103893	Statement	av_log	291:15:5103:5108	1103059	0	True				
ANR	1103894	Statement	(	291:21:5109:5109	1103059	1	True				
ANR	1103895	Statement	avctx	291:22:5110:5114	1103059	2	True				
ANR	1103896	Statement	","	291:27:5115:5115	1103059	3	True				
ANR	1103897	Statement	AV_LOG_ERROR	291:29:5117:5128	1103059	4	True				
ANR	1103898	Statement	","	291:41:5129:5129	1103059	5	True				
ANR	1103899	Statement	"""Unknown bitfields %0"""	293:22:5154:5175	1103059	6	True				
ANR	1103900	Statement	PRIX32	293:44:5176:5181	1103059	7	True				
ANR	1103901	Statement	""" %0"""	293:50:5182:5186	1103059	8	True				
ANR	1103902	Statement	PRIX32	293:55:5187:5192	1103059	9	True				
ANR	1103903	Statement	""" %0"""	293:61:5193:5197	1103059	10	True				
ANR	1103904	Statement	PRIX32	293:66:5198:5203	1103059	11	True				
ANR	1103905	Statement	"""\\n"""	293:72:5204:5207	1103059	12	True				
ANR	1103906	Statement	","	293:76:5208:5208	1103059	13	True				
ANR	1103907	Statement	rgb	295:22:5233:5235	1103059	14	True				
ANR	1103908	Statement	[	295:25:5236:5236	1103059	15	True				
ANR	1103909	Statement	0	295:26:5237:5237	1103059	16	True				
ANR	1103910	Statement	]	295:27:5238:5238	1103059	17	True				
ANR	1103911	Statement	","	295:28:5239:5239	1103059	18	True				
ANR	1103912	Statement	rgb	295:30:5241:5243	1103059	19	True				
ANR	1103913	Statement	[	295:33:5244:5244	1103059	20	True				
ANR	1103914	Statement	1	295:34:5245:5245	1103059	21	True				
ANR	1103915	Statement	]	295:35:5246:5246	1103059	22	True				
ANR	1103916	Statement	","	295:36:5247:5247	1103059	23	True				
ANR	1103917	Statement	rgb	295:38:5249:5251	1103059	24	True				
ANR	1103918	Statement	[	295:41:5252:5252	1103059	25	True				
ANR	1103919	Statement	2	295:42:5253:5253	1103059	26	True				
ANR	1103920	Statement	]	295:43:5254:5254	1103059	27	True				
ANR	1103921	Statement	)	295:44:5255:5255	1103059	28	True				
ANR	1103922	ExpressionStatement		295:45:5256:5256	1103059	29	True				
ANR	1103923	ReturnStatement	return AVERROR ( EINVAL ) ;	297:15:5274:5296	1103059	30	True				
ANR	1103924	CallExpression	AVERROR ( EINVAL )		1103059	0					
ANR	1103925	Callee	AVERROR		1103059	0					
ANR	1103926	Identifier	AVERROR		1103059	0					
ANR	1103927	ArgumentList	EINVAL		1103059	1					
ANR	1103928	Argument	EINVAL		1103059	0					
ANR	1103929	Identifier	EINVAL		1103059	0					
ANR	1103930	BreakStatement	break ;	303:8:5333:5338	1103059	8	True				
ANR	1103931	Label	case 8 :	305:4:5345:5351	1103059	9	True				
ANR	1103932	IfStatement	if ( hsize - ihsize - 14 > 0 )		1103059	10					
ANR	1103933	Condition	hsize - ihsize - 14 > 0	307:12:5366:5388	1103059	0	True				
ANR	1103934	RelationalExpression	hsize - ihsize - 14 > 0		1103059	0		>			
ANR	1103935	AdditiveExpression	hsize - ihsize - 14		1103059	0		-			
ANR	1103936	Identifier	hsize		1103059	0					
ANR	1103937	AdditiveExpression	ihsize - 14		1103059	1		-			
ANR	1103938	Identifier	ihsize		1103059	0					
ANR	1103939	PrimaryExpression	14		1103059	1					
ANR	1103940	PrimaryExpression	0		1103059	1					
ANR	1103941	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_PAL8	309:12:5404:5436	1103059	1	True				
ANR	1103942	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_PAL8		1103059	0		=			
ANR	1103943	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103944	Identifier	avctx		1103059	0					
ANR	1103945	Identifier	pix_fmt		1103059	1					
ANR	1103946	Identifier	AV_PIX_FMT_PAL8		1103059	1					
ANR	1103947	ElseStatement	else		1103059	0					
ANR	1103948	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_GRAY8	313:12:5465:5498	1103059	0	True				
ANR	1103949	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_GRAY8		1103059	0		=			
ANR	1103950	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103951	Identifier	avctx		1103059	0					
ANR	1103952	Identifier	pix_fmt		1103059	1					
ANR	1103953	Identifier	AV_PIX_FMT_GRAY8		1103059	1					
ANR	1103954	BreakStatement	break ;	315:8:5509:5514	1103059	11	True				
ANR	1103955	Label	case 1 :	317:4:5521:5527	1103059	12	True				
ANR	1103956	Label	case 4 :	319:4:5534:5540	1103059	13	True				
ANR	1103957	IfStatement	if ( hsize - ihsize - 14 > 0 )		1103059	14					
ANR	1103958	Condition	hsize - ihsize - 14 > 0	321:12:5555:5577	1103059	0	True				
ANR	1103959	RelationalExpression	hsize - ihsize - 14 > 0		1103059	0		>			
ANR	1103960	AdditiveExpression	hsize - ihsize - 14		1103059	0		-			
ANR	1103961	Identifier	hsize		1103059	0					
ANR	1103962	AdditiveExpression	ihsize - 14		1103059	1		-			
ANR	1103963	Identifier	ihsize		1103059	0					
ANR	1103964	PrimaryExpression	14		1103059	1					
ANR	1103965	PrimaryExpression	0		1103059	1					
ANR	1103966	CompoundStatement		315:37:5424:5424	1103059	1					
ANR	1103967	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_PAL8	323:12:5595:5627	1103059	0	True				
ANR	1103968	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_PAL8		1103059	0		=			
ANR	1103969	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1103970	Identifier	avctx		1103059	0					
ANR	1103971	Identifier	pix_fmt		1103059	1					
ANR	1103972	Identifier	AV_PIX_FMT_PAL8		1103059	1					
ANR	1103973	ElseStatement	else		1103059	0					
ANR	1103974	CompoundStatement		319:15:5489:5489	1103059	0					
ANR	1103975	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %u-colour BMP\\n"" , 1 << depth )"	327:12:5660:5758	1103059	0	True				
ANR	1103976	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %u-colour BMP\\n"" , 1 << depth )"		1103059	0					
ANR	1103977	Callee	av_log		1103059	0					
ANR	1103978	Identifier	av_log		1103059	0					
ANR	1103979	ArgumentList	avctx		1103059	1					
ANR	1103980	Argument	avctx		1103059	0					
ANR	1103981	Identifier	avctx		1103059	0					
ANR	1103982	Argument	AV_LOG_ERROR		1103059	1					
ANR	1103983	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1103984	Argument	"""Unknown palette for %u-colour BMP\\n"""		1103059	2					
ANR	1103985	PrimaryExpression	"""Unknown palette for %u-colour BMP\\n"""		1103059	0					
ANR	1103986	Argument	1 << depth		1103059	3					
ANR	1103987	ShiftExpression	1 << depth		1103059	0		<<			
ANR	1103988	PrimaryExpression	1		1103059	0					
ANR	1103989	Identifier	depth		1103059	1					
ANR	1103990	ReturnStatement	return AVERROR_INVALIDDATA ;	331:12:5773:5799	1103059	1	True				
ANR	1103991	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1103992	BreakStatement	break ;	335:8:5821:5826	1103059	15	True				
ANR	1103993	Label	default :	337:4:5833:5840	1103059	16	True				
ANR	1103994	Identifier	default		1103059	0					
ANR	1103995	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""depth %u not supported\\n"" , depth )"	339:8:5851:5913	1103059	17	True				
ANR	1103996	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""depth %u not supported\\n"" , depth )"		1103059	0					
ANR	1103997	Callee	av_log		1103059	0					
ANR	1103998	Identifier	av_log		1103059	0					
ANR	1103999	ArgumentList	avctx		1103059	1					
ANR	1104000	Argument	avctx		1103059	0					
ANR	1104001	Identifier	avctx		1103059	0					
ANR	1104002	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104003	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104004	Argument	"""depth %u not supported\\n"""		1103059	2					
ANR	1104005	PrimaryExpression	"""depth %u not supported\\n"""		1103059	0					
ANR	1104006	Argument	depth		1103059	3					
ANR	1104007	Identifier	depth		1103059	0					
ANR	1104008	ReturnStatement	return AVERROR_INVALIDDATA ;	341:8:5924:5950	1103059	18	True				
ANR	1104009	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1104010	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_NONE )		1103059	45					
ANR	1104011	Condition	avctx -> pix_fmt == AV_PIX_FMT_NONE	347:8:5970:6002	1103059	0	True				
ANR	1104012	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_NONE		1103059	0		==			
ANR	1104013	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1104014	Identifier	avctx		1103059	0					
ANR	1104015	Identifier	pix_fmt		1103059	1					
ANR	1104016	Identifier	AV_PIX_FMT_NONE		1103059	1					
ANR	1104017	CompoundStatement		341:43:5849:5849	1103059	1					
ANR	1104018	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"	349:8:6016:6073	1103059	0	True				
ANR	1104019	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"		1103059	0					
ANR	1104020	Callee	av_log		1103059	0					
ANR	1104021	Identifier	av_log		1103059	0					
ANR	1104022	ArgumentList	avctx		1103059	1					
ANR	1104023	Argument	avctx		1103059	0					
ANR	1104024	Identifier	avctx		1103059	0					
ANR	1104025	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104026	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104027	Argument	"""unsupported pixel format\\n"""		1103059	2					
ANR	1104028	PrimaryExpression	"""unsupported pixel format\\n"""		1103059	0					
ANR	1104029	ReturnStatement	return AVERROR_INVALIDDATA ;	351:8:6084:6110	1103059	1	True				
ANR	1104030	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1104031	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0 )"		1103059	46					
ANR	1104032	Condition	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"	357:8:6130:6167	1103059	0	True				
ANR	1104033	RelationalExpression	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"		1103059	0		<			
ANR	1104034	AssignmentExpression	"ret = ff_get_buffer ( avctx , p , 0 )"		1103059	0		=			
ANR	1104035	Identifier	ret		1103059	0					
ANR	1104036	CallExpression	"ff_get_buffer ( avctx , p , 0 )"		1103059	1					
ANR	1104037	Callee	ff_get_buffer		1103059	0					
ANR	1104038	Identifier	ff_get_buffer		1103059	0					
ANR	1104039	ArgumentList	avctx		1103059	1					
ANR	1104040	Argument	avctx		1103059	0					
ANR	1104041	Identifier	avctx		1103059	0					
ANR	1104042	Argument	p		1103059	1					
ANR	1104043	Identifier	p		1103059	0					
ANR	1104044	Argument	0		1103059	2					
ANR	1104045	PrimaryExpression	0		1103059	0					
ANR	1104046	PrimaryExpression	0		1103059	1					
ANR	1104047	ReturnStatement	return ret ;	359:8:6179:6189	1103059	1	True				
ANR	1104048	Identifier	ret		1103059	0					
ANR	1104049	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	361:4:6196:6228	1103059	47	True				
ANR	1104050	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		1103059	0		=			
ANR	1104051	PtrMemberAccess	p -> pict_type		1103059	0					
ANR	1104052	Identifier	p		1103059	0					
ANR	1104053	Identifier	pict_type		1103059	1					
ANR	1104054	Identifier	AV_PICTURE_TYPE_I		1103059	1					
ANR	1104055	ExpressionStatement	p -> key_frame = 1	363:4:6235:6251	1103059	48	True				
ANR	1104056	AssignmentExpression	p -> key_frame = 1		1103059	0		=			
ANR	1104057	PtrMemberAccess	p -> key_frame		1103059	0					
ANR	1104058	Identifier	p		1103059	0					
ANR	1104059	Identifier	key_frame		1103059	1					
ANR	1104060	PrimaryExpression	1		1103059	1					
ANR	1104061	ExpressionStatement	buf = buf0 + hsize	367:4:6260:6280	1103059	49	True				
ANR	1104062	AssignmentExpression	buf = buf0 + hsize		1103059	0		=			
ANR	1104063	Identifier	buf		1103059	0					
ANR	1104064	AdditiveExpression	buf0 + hsize		1103059	1		+			
ANR	1104065	Identifier	buf0		1103059	0					
ANR	1104066	Identifier	hsize		1103059	1					
ANR	1104067	ExpressionStatement	dsize = buf_size - hsize	369:4:6287:6311	1103059	50	True				
ANR	1104068	AssignmentExpression	dsize = buf_size - hsize		1103059	0		=			
ANR	1104069	Identifier	dsize		1103059	0					
ANR	1104070	AdditiveExpression	buf_size - hsize		1103059	1		-			
ANR	1104071	Identifier	buf_size		1103059	0					
ANR	1104072	Identifier	hsize		1103059	1					
ANR	1104073	ExpressionStatement	n = ( ( avctx -> width * depth + 31 ) / 8 ) & ~3	375:4:6363:6405	1103059	51	True				
ANR	1104074	AssignmentExpression	n = ( ( avctx -> width * depth + 31 ) / 8 ) & ~3		1103059	0		=			
ANR	1104075	Identifier	n		1103059	0					
ANR	1104076	BitAndExpression	( ( avctx -> width * depth + 31 ) / 8 ) & ~3		1103059	1		&			
ANR	1104077	MultiplicativeExpression	( avctx -> width * depth + 31 ) / 8		1103059	0		/			
ANR	1104078	AdditiveExpression	avctx -> width * depth + 31		1103059	0		+			
ANR	1104079	MultiplicativeExpression	avctx -> width * depth		1103059	0		*			
ANR	1104080	PtrMemberAccess	avctx -> width		1103059	0					
ANR	1104081	Identifier	avctx		1103059	0					
ANR	1104082	Identifier	width		1103059	1					
ANR	1104083	Identifier	depth		1103059	1					
ANR	1104084	PrimaryExpression	31		1103059	1					
ANR	1104085	PrimaryExpression	8		1103059	1					
ANR	1104086	Identifier	~3		1103059	1					
ANR	1104087	IfStatement	if ( n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8 )		1103059	52					
ANR	1104088	Condition	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8	379:8:6418:6482	1103059	0	True				
ANR	1104089	AndExpression	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8		1103059	0		&&			
ANR	1104090	RelationalExpression	n * avctx -> height > dsize		1103059	0		>			
ANR	1104091	MultiplicativeExpression	n * avctx -> height		1103059	0		*			
ANR	1104092	Identifier	n		1103059	0					
ANR	1104093	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104094	Identifier	avctx		1103059	0					
ANR	1104095	Identifier	height		1103059	1					
ANR	1104096	Identifier	dsize		1103059	1					
ANR	1104097	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1103059	1		&&			
ANR	1104098	EqualityExpression	comp != BMP_RLE4		1103059	0		!=			
ANR	1104099	Identifier	comp		1103059	0					
ANR	1104100	Identifier	BMP_RLE4		1103059	1					
ANR	1104101	EqualityExpression	comp != BMP_RLE8		1103059	1		!=			
ANR	1104102	Identifier	comp		1103059	0					
ANR	1104103	Identifier	BMP_RLE8		1103059	1					
ANR	1104104	CompoundStatement		373:75:6329:6329	1103059	1					
ANR	1104105	ExpressionStatement	n = ( avctx -> width * depth + 7 ) / 8	381:8:6496:6530	1103059	0	True				
ANR	1104106	AssignmentExpression	n = ( avctx -> width * depth + 7 ) / 8		1103059	0		=			
ANR	1104107	Identifier	n		1103059	0					
ANR	1104108	MultiplicativeExpression	( avctx -> width * depth + 7 ) / 8		1103059	1		/			
ANR	1104109	AdditiveExpression	avctx -> width * depth + 7		1103059	0		+			
ANR	1104110	MultiplicativeExpression	avctx -> width * depth		1103059	0		*			
ANR	1104111	PtrMemberAccess	avctx -> width		1103059	0					
ANR	1104112	Identifier	avctx		1103059	0					
ANR	1104113	Identifier	width		1103059	1					
ANR	1104114	Identifier	depth		1103059	1					
ANR	1104115	PrimaryExpression	7		1103059	1					
ANR	1104116	PrimaryExpression	8		1103059	1					
ANR	1104117	IfStatement	if ( n * avctx -> height > dsize )		1103059	1					
ANR	1104118	Condition	n * avctx -> height > dsize	383:12:6545:6569	1103059	0	True				
ANR	1104119	RelationalExpression	n * avctx -> height > dsize		1103059	0		>			
ANR	1104120	MultiplicativeExpression	n * avctx -> height		1103059	0		*			
ANR	1104121	Identifier	n		1103059	0					
ANR	1104122	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104123	Identifier	avctx		1103059	0					
ANR	1104124	Identifier	height		1103059	1					
ANR	1104125	Identifier	dsize		1103059	1					
ANR	1104126	CompoundStatement		377:39:6416:6416	1103059	1					
ANR	1104127	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"	385:12:6587:6691	1103059	0	True				
ANR	1104128	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"		1103059	0					
ANR	1104129	Callee	av_log		1103059	0					
ANR	1104130	Identifier	av_log		1103059	0					
ANR	1104131	ArgumentList	avctx		1103059	1					
ANR	1104132	Argument	avctx		1103059	0					
ANR	1104133	Identifier	avctx		1103059	0					
ANR	1104134	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104135	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104136	Argument	"""not enough data (%d < %d)\\n"""		1103059	2					
ANR	1104137	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1103059	0					
ANR	1104138	Argument	dsize		1103059	3					
ANR	1104139	Identifier	dsize		1103059	0					
ANR	1104140	Argument	n * avctx -> height		1103059	4					
ANR	1104141	MultiplicativeExpression	n * avctx -> height		1103059	0		*			
ANR	1104142	Identifier	n		1103059	0					
ANR	1104143	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104144	Identifier	avctx		1103059	0					
ANR	1104145	Identifier	height		1103059	1					
ANR	1104146	ReturnStatement	return AVERROR_INVALIDDATA ;	389:12:6706:6732	1103059	1	True				
ANR	1104147	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1104148	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""data size too small, assuming missing line alignment\\n"" )"	393:8:6754:6839	1103059	2	True				
ANR	1104149	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""data size too small, assuming missing line alignment\\n"" )"		1103059	0					
ANR	1104150	Callee	av_log		1103059	0					
ANR	1104151	Identifier	av_log		1103059	0					
ANR	1104152	ArgumentList	avctx		1103059	1					
ANR	1104153	Argument	avctx		1103059	0					
ANR	1104154	Identifier	avctx		1103059	0					
ANR	1104155	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104156	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104157	Argument	"""data size too small, assuming missing line alignment\\n"""		1103059	2					
ANR	1104158	PrimaryExpression	"""data size too small, assuming missing line alignment\\n"""		1103059	0					
ANR	1104159	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1103059	53					
ANR	1104160	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	401:8:6942:6977	1103059	0	True				
ANR	1104161	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1103059	0		||			
ANR	1104162	EqualityExpression	comp == BMP_RLE4		1103059	0		==			
ANR	1104163	Identifier	comp		1103059	0					
ANR	1104164	Identifier	BMP_RLE4		1103059	1					
ANR	1104165	EqualityExpression	comp == BMP_RLE8		1103059	1		==			
ANR	1104166	Identifier	comp		1103059	0					
ANR	1104167	Identifier	BMP_RLE8		1103059	1					
ANR	1104168	ExpressionStatement	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"	403:8:6989:7042	1103059	1	True				
ANR	1104169	CallExpression	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"		1103059	0					
ANR	1104170	Callee	memset		1103059	0					
ANR	1104171	Identifier	memset		1103059	0					
ANR	1104172	ArgumentList	p -> data [ 0 ]		1103059	1					
ANR	1104173	Argument	p -> data [ 0 ]		1103059	0					
ANR	1104174	ArrayIndexing	p -> data [ 0 ]		1103059	0					
ANR	1104175	PtrMemberAccess	p -> data		1103059	0					
ANR	1104176	Identifier	p		1103059	0					
ANR	1104177	Identifier	data		1103059	1					
ANR	1104178	PrimaryExpression	0		1103059	1					
ANR	1104179	Argument	0		1103059	1					
ANR	1104180	PrimaryExpression	0		1103059	0					
ANR	1104181	Argument	avctx -> height * p -> linesize [ 0 ]		1103059	2					
ANR	1104182	MultiplicativeExpression	avctx -> height * p -> linesize [ 0 ]		1103059	0		*			
ANR	1104183	PtrMemberAccess	avctx -> height		1103059	0					
ANR	1104184	Identifier	avctx		1103059	0					
ANR	1104185	Identifier	height		1103059	1					
ANR	1104186	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104187	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104188	Identifier	p		1103059	0					
ANR	1104189	Identifier	linesize		1103059	1					
ANR	1104190	PrimaryExpression	0		1103059	1					
ANR	1104191	IfStatement	if ( height > 0 )		1103059	54					
ANR	1104192	Condition	height > 0	407:8:7055:7064	1103059	0	True				
ANR	1104193	RelationalExpression	height > 0		1103059	0		>			
ANR	1104194	Identifier	height		1103059	0					
ANR	1104195	PrimaryExpression	0		1103059	1					
ANR	1104196	CompoundStatement		401:20:6911:6911	1103059	1					
ANR	1104197	ExpressionStatement	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]	409:8:7078:7138	1103059	0	True				
ANR	1104198	AssignmentExpression	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1103059	0		=			
ANR	1104199	Identifier	ptr		1103059	0					
ANR	1104200	AdditiveExpression	p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1103059	1		+			
ANR	1104201	ArrayIndexing	p -> data [ 0 ]		1103059	0					
ANR	1104202	PtrMemberAccess	p -> data		1103059	0					
ANR	1104203	Identifier	p		1103059	0					
ANR	1104204	Identifier	data		1103059	1					
ANR	1104205	PrimaryExpression	0		1103059	1					
ANR	1104206	MultiplicativeExpression	( avctx -> height - 1 ) * p -> linesize [ 0 ]		1103059	1		*			
ANR	1104207	AdditiveExpression	avctx -> height - 1		1103059	0		-			
ANR	1104208	PtrMemberAccess	avctx -> height		1103059	0					
ANR	1104209	Identifier	avctx		1103059	0					
ANR	1104210	Identifier	height		1103059	1					
ANR	1104211	PrimaryExpression	1		1103059	1					
ANR	1104212	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104213	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104214	Identifier	p		1103059	0					
ANR	1104215	Identifier	linesize		1103059	1					
ANR	1104216	PrimaryExpression	0		1103059	1					
ANR	1104217	ExpressionStatement	linesize = - p -> linesize [ 0 ]	411:8:7149:7175	1103059	1	True				
ANR	1104218	AssignmentExpression	linesize = - p -> linesize [ 0 ]		1103059	0		=			
ANR	1104219	Identifier	linesize		1103059	0					
ANR	1104220	UnaryOperationExpression	- p -> linesize [ 0 ]		1103059	1					
ANR	1104221	UnaryOperator	-		1103059	0					
ANR	1104222	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104223	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104224	Identifier	p		1103059	0					
ANR	1104225	Identifier	linesize		1103059	1					
ANR	1104226	PrimaryExpression	0		1103059	1					
ANR	1104227	ElseStatement	else		1103059	0					
ANR	1104228	CompoundStatement		407:11:7033:7033	1103059	0					
ANR	1104229	ExpressionStatement	ptr = p -> data [ 0 ]	415:8:7200:7221	1103059	0	True				
ANR	1104230	AssignmentExpression	ptr = p -> data [ 0 ]		1103059	0		=			
ANR	1104231	Identifier	ptr		1103059	0					
ANR	1104232	ArrayIndexing	p -> data [ 0 ]		1103059	1					
ANR	1104233	PtrMemberAccess	p -> data		1103059	0					
ANR	1104234	Identifier	p		1103059	0					
ANR	1104235	Identifier	data		1103059	1					
ANR	1104236	PrimaryExpression	0		1103059	1					
ANR	1104237	ExpressionStatement	linesize = p -> linesize [ 0 ]	417:8:7232:7257	1103059	1	True				
ANR	1104238	AssignmentExpression	linesize = p -> linesize [ 0 ]		1103059	0		=			
ANR	1104239	Identifier	linesize		1103059	0					
ANR	1104240	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104241	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104242	Identifier	p		1103059	0					
ANR	1104243	Identifier	linesize		1103059	1					
ANR	1104244	PrimaryExpression	0		1103059	1					
ANR	1104245	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_PAL8 )		1103059	55					
ANR	1104246	Condition	avctx -> pix_fmt == AV_PIX_FMT_PAL8	423:8:7277:7309	1103059	0	True				
ANR	1104247	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_PAL8		1103059	0		==			
ANR	1104248	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1104249	Identifier	avctx		1103059	0					
ANR	1104250	Identifier	pix_fmt		1103059	1					
ANR	1104251	Identifier	AV_PIX_FMT_PAL8		1103059	1					
ANR	1104252	CompoundStatement		419:8:7167:7190	1103059	1					
ANR	1104253	IdentifierDeclStatement	int colors = 1 << depth ;	425:8:7323:7346	1103059	0	True				
ANR	1104254	IdentifierDecl	colors = 1 << depth		1103059	0					
ANR	1104255	IdentifierDeclType	int		1103059	0					
ANR	1104256	Identifier	colors		1103059	1					
ANR	1104257	AssignmentExpression	colors = 1 << depth		1103059	2		=			
ANR	1104258	Identifier	colors		1103059	0					
ANR	1104259	ShiftExpression	1 << depth		1103059	1		<<			
ANR	1104260	PrimaryExpression	1		1103059	0					
ANR	1104261	Identifier	depth		1103059	1					
ANR	1104262	ExpressionStatement	"memset ( p -> data [ 1 ] , 0 , 1024 )"	429:8:7359:7386	1103059	1	True				
ANR	1104263	CallExpression	"memset ( p -> data [ 1 ] , 0 , 1024 )"		1103059	0					
ANR	1104264	Callee	memset		1103059	0					
ANR	1104265	Identifier	memset		1103059	0					
ANR	1104266	ArgumentList	p -> data [ 1 ]		1103059	1					
ANR	1104267	Argument	p -> data [ 1 ]		1103059	0					
ANR	1104268	ArrayIndexing	p -> data [ 1 ]		1103059	0					
ANR	1104269	PtrMemberAccess	p -> data		1103059	0					
ANR	1104270	Identifier	p		1103059	0					
ANR	1104271	Identifier	data		1103059	1					
ANR	1104272	PrimaryExpression	1		1103059	1					
ANR	1104273	Argument	0		1103059	1					
ANR	1104274	PrimaryExpression	0		1103059	0					
ANR	1104275	Argument	1024		1103059	2					
ANR	1104276	PrimaryExpression	1024		1103059	0					
ANR	1104277	IfStatement	if ( ihsize >= 36 )		1103059	2					
ANR	1104278	Condition	ihsize >= 36	433:12:7403:7414	1103059	0	True				
ANR	1104279	RelationalExpression	ihsize >= 36		1103059	0		>=			
ANR	1104280	Identifier	ihsize		1103059	0					
ANR	1104281	PrimaryExpression	36		1103059	1					
ANR	1104282	CompoundStatement		429:12:7276:7281	1103059	1					
ANR	1104283	IdentifierDeclStatement	int t ;	435:12:7432:7437	1103059	0	True				
ANR	1104284	IdentifierDecl	t		1103059	0					
ANR	1104285	IdentifierDeclType	int		1103059	0					
ANR	1104286	Identifier	t		1103059	1					
ANR	1104287	ExpressionStatement	buf = buf0 + 46	437:12:7452:7467	1103059	1	True				
ANR	1104288	AssignmentExpression	buf = buf0 + 46		1103059	0		=			
ANR	1104289	Identifier	buf		1103059	0					
ANR	1104290	AdditiveExpression	buf0 + 46		1103059	1		+			
ANR	1104291	Identifier	buf0		1103059	0					
ANR	1104292	PrimaryExpression	46		1103059	1					
ANR	1104293	ExpressionStatement	t = bytestream_get_le32 ( & buf )	439:12:7482:7513	1103059	2	True				
ANR	1104294	AssignmentExpression	t = bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1104295	Identifier	t		1103059	0					
ANR	1104296	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1104297	Callee	bytestream_get_le32		1103059	0					
ANR	1104298	Identifier	bytestream_get_le32		1103059	0					
ANR	1104299	ArgumentList	& buf		1103059	1					
ANR	1104300	Argument	& buf		1103059	0					
ANR	1104301	UnaryOperationExpression	& buf		1103059	0					
ANR	1104302	UnaryOperator	&		1103059	0					
ANR	1104303	Identifier	buf		1103059	1					
ANR	1104304	IfStatement	if ( t < 0 || t > ( 1 << depth ) )		1103059	3					
ANR	1104305	Condition	t < 0 || t > ( 1 << depth )	441:16:7532:7556	1103059	0	True				
ANR	1104306	OrExpression	t < 0 || t > ( 1 << depth )		1103059	0		||			
ANR	1104307	RelationalExpression	t < 0		1103059	0		<			
ANR	1104308	Identifier	t		1103059	0					
ANR	1104309	PrimaryExpression	0		1103059	1					
ANR	1104310	RelationalExpression	t > ( 1 << depth )		1103059	1		>			
ANR	1104311	Identifier	t		1103059	0					
ANR	1104312	ShiftExpression	1 << depth		1103059	1		<<			
ANR	1104313	PrimaryExpression	1		1103059	0					
ANR	1104314	Identifier	depth		1103059	1					
ANR	1104315	CompoundStatement		435:43:7403:7403	1103059	1					
ANR	1104316	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %u\\n"" , t , depth )"	443:16:7578:7716	1103059	0	True				
ANR	1104317	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %u\\n"" , t , depth )"		1103059	0					
ANR	1104318	Callee	av_log		1103059	0					
ANR	1104319	Identifier	av_log		1103059	0					
ANR	1104320	ArgumentList	avctx		1103059	1					
ANR	1104321	Argument	avctx		1103059	0					
ANR	1104322	Identifier	avctx		1103059	0					
ANR	1104323	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104324	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104325	Argument	"""Incorrect number of colors - %X for bitdepth %u\\n"""		1103059	2					
ANR	1104326	PrimaryExpression	"""Incorrect number of colors - %X for bitdepth %u\\n"""		1103059	0					
ANR	1104327	Argument	t		1103059	3					
ANR	1104328	Identifier	t		1103059	0					
ANR	1104329	Argument	depth		1103059	4					
ANR	1104330	Identifier	depth		1103059	0					
ANR	1104331	ElseStatement	else		1103059	0					
ANR	1104332	IfStatement	if ( t )		1103059	0					
ANR	1104333	Condition	t	449:23:7742:7742	1103059	0	True				
ANR	1104334	Identifier	t		1103059	0					
ANR	1104335	CompoundStatement		443:26:7589:7589	1103059	1					
ANR	1104336	ExpressionStatement	colors = t	451:16:7764:7774	1103059	0	True				
ANR	1104337	AssignmentExpression	colors = t		1103059	0		=			
ANR	1104338	Identifier	colors		1103059	0					
ANR	1104339	Identifier	t		1103059	1					
ANR	1104340	ElseStatement	else		1103059	0					
ANR	1104341	CompoundStatement		449:15:7651:7651	1103059	0					
ANR	1104342	ExpressionStatement	"colors = FFMIN ( 256 , ( hsize - ihsize - 14 ) / 3 )"	457:12:7822:7864	1103059	0	True				
ANR	1104343	AssignmentExpression	"colors = FFMIN ( 256 , ( hsize - ihsize - 14 ) / 3 )"		1103059	0		=			
ANR	1104344	Identifier	colors		1103059	0					
ANR	1104345	CallExpression	"FFMIN ( 256 , ( hsize - ihsize - 14 ) / 3 )"		1103059	1					
ANR	1104346	Callee	FFMIN		1103059	0					
ANR	1104347	Identifier	FFMIN		1103059	0					
ANR	1104348	ArgumentList	256		1103059	1					
ANR	1104349	Argument	256		1103059	0					
ANR	1104350	PrimaryExpression	256		1103059	0					
ANR	1104351	Argument	( hsize - ihsize - 14 ) / 3		1103059	1					
ANR	1104352	MultiplicativeExpression	( hsize - ihsize - 14 ) / 3		1103059	0		/			
ANR	1104353	AdditiveExpression	hsize - ihsize - 14		1103059	0		-			
ANR	1104354	Identifier	hsize		1103059	0					
ANR	1104355	AdditiveExpression	ihsize - 14		1103059	1		-			
ANR	1104356	Identifier	ihsize		1103059	0					
ANR	1104357	PrimaryExpression	14		1103059	1					
ANR	1104358	PrimaryExpression	3		1103059	1					
ANR	1104359	ExpressionStatement	buf = buf0 + 14 + ihsize	461:8:7886:7910	1103059	3	True				
ANR	1104360	AssignmentExpression	buf = buf0 + 14 + ihsize		1103059	0		=			
ANR	1104361	Identifier	buf		1103059	0					
ANR	1104362	AdditiveExpression	buf0 + 14 + ihsize		1103059	1		+			
ANR	1104363	Identifier	buf0		1103059	0					
ANR	1104364	AdditiveExpression	14 + ihsize		1103059	1		+			
ANR	1104365	PrimaryExpression	14		1103059	0					
ANR	1104366	Identifier	ihsize		1103059	1					
ANR	1104367	IfStatement	if ( ( hsize - ihsize - 14 ) < ( colors << 2 ) )		1103059	4					
ANR	1104368	Condition	( hsize - ihsize - 14 ) < ( colors << 2 )	465:12:7995:8027	1103059	0	True				
ANR	1104369	RelationalExpression	( hsize - ihsize - 14 ) < ( colors << 2 )		1103059	0		<			
ANR	1104370	AdditiveExpression	hsize - ihsize - 14		1103059	0		-			
ANR	1104371	Identifier	hsize		1103059	0					
ANR	1104372	AdditiveExpression	ihsize - 14		1103059	1		-			
ANR	1104373	Identifier	ihsize		1103059	0					
ANR	1104374	PrimaryExpression	14		1103059	1					
ANR	1104375	ShiftExpression	colors << 2		1103059	1		<<			
ANR	1104376	Identifier	colors		1103059	0					
ANR	1104377	PrimaryExpression	2		1103059	1					
ANR	1104378	CompoundStatement		459:47:7874:7874	1103059	1					
ANR	1104379	IfStatement	if ( ( hsize - ihsize - 14 ) < colors * 3 )		1103059	0					
ANR	1104380	Condition	( hsize - ihsize - 14 ) < colors * 3	467:16:8049:8078	1103059	0	True				
ANR	1104381	RelationalExpression	( hsize - ihsize - 14 ) < colors * 3		1103059	0		<			
ANR	1104382	AdditiveExpression	hsize - ihsize - 14		1103059	0		-			
ANR	1104383	Identifier	hsize		1103059	0					
ANR	1104384	AdditiveExpression	ihsize - 14		1103059	1		-			
ANR	1104385	Identifier	ihsize		1103059	0					
ANR	1104386	PrimaryExpression	14		1103059	1					
ANR	1104387	MultiplicativeExpression	colors * 3		1103059	1		*			
ANR	1104388	Identifier	colors		1103059	0					
ANR	1104389	PrimaryExpression	3		1103059	1					
ANR	1104390	CompoundStatement		461:48:7925:7925	1103059	1					
ANR	1104391	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""palette doesn't fit in packet\\n"" )"	469:16:8100:8162	1103059	0	True				
ANR	1104392	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""palette doesn't fit in packet\\n"" )"		1103059	0					
ANR	1104393	Callee	av_log		1103059	0					
ANR	1104394	Identifier	av_log		1103059	0					
ANR	1104395	ArgumentList	avctx		1103059	1					
ANR	1104396	Argument	avctx		1103059	0					
ANR	1104397	Identifier	avctx		1103059	0					
ANR	1104398	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104399	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104400	Argument	"""palette doesn't fit in packet\\n"""		1103059	2					
ANR	1104401	PrimaryExpression	"""palette doesn't fit in packet\\n"""		1103059	0					
ANR	1104402	ReturnStatement	return AVERROR_INVALIDDATA ;	471:16:8181:8207	1103059	1	True				
ANR	1104403	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1104404	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1103059	1					
ANR	1104405	ForInit	i = 0 ;	475:17:8242:8247	1103059	0	True				
ANR	1104406	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104407	Identifier	i		1103059	0					
ANR	1104408	PrimaryExpression	0		1103059	1					
ANR	1104409	Condition	i < colors	475:24:8249:8258	1103059	1	True				
ANR	1104410	RelationalExpression	i < colors		1103059	0		<			
ANR	1104411	Identifier	i		1103059	0					
ANR	1104412	Identifier	colors		1103059	1					
ANR	1104413	PostIncDecOperationExpression	i ++	475:36:8261:8263	1103059	2	True				
ANR	1104414	Identifier	i		1103059	0					
ANR	1104415	IncDec	++		1103059	1					
ANR	1104416	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = ( 0xFFU << 24 ) | bytestream_get_le24 ( & buf )	477:16:8283:8351	1103059	3	True				
ANR	1104417	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = ( 0xFFU << 24 ) | bytestream_get_le24 ( & buf )		1103059	0		=			
ANR	1104418	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1103059	0					
ANR	1104419	CastExpression	( uint32_t * ) p -> data [ 1 ]		1103059	0					
ANR	1104420	CastTarget	uint32_t *		1103059	0					
ANR	1104421	ArrayIndexing	p -> data [ 1 ]		1103059	1					
ANR	1104422	PtrMemberAccess	p -> data		1103059	0					
ANR	1104423	Identifier	p		1103059	0					
ANR	1104424	Identifier	data		1103059	1					
ANR	1104425	PrimaryExpression	1		1103059	1					
ANR	1104426	Identifier	i		1103059	1					
ANR	1104427	InclusiveOrExpression	( 0xFFU << 24 ) | bytestream_get_le24 ( & buf )		1103059	1		|			
ANR	1104428	ShiftExpression	0xFFU << 24		1103059	0		<<			
ANR	1104429	PrimaryExpression	0xFFU		1103059	0					
ANR	1104430	PrimaryExpression	24		1103059	1					
ANR	1104431	CallExpression	bytestream_get_le24 ( & buf )		1103059	1					
ANR	1104432	Callee	bytestream_get_le24		1103059	0					
ANR	1104433	Identifier	bytestream_get_le24		1103059	0					
ANR	1104434	ArgumentList	& buf		1103059	1					
ANR	1104435	Argument	& buf		1103059	0					
ANR	1104436	UnaryOperationExpression	& buf		1103059	0					
ANR	1104437	UnaryOperator	&		1103059	0					
ANR	1104438	Identifier	buf		1103059	1					
ANR	1104439	ElseStatement	else		1103059	0					
ANR	1104440	CompoundStatement		473:15:8213:8213	1103059	0					
ANR	1104441	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1103059	0					
ANR	1104442	ForInit	i = 0 ;	481:17:8389:8394	1103059	0	True				
ANR	1104443	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104444	Identifier	i		1103059	0					
ANR	1104445	PrimaryExpression	0		1103059	1					
ANR	1104446	Condition	i < colors	481:24:8396:8405	1103059	1	True				
ANR	1104447	RelationalExpression	i < colors		1103059	0		<			
ANR	1104448	Identifier	i		1103059	0					
ANR	1104449	Identifier	colors		1103059	1					
ANR	1104450	PostIncDecOperationExpression	i ++	481:36:8408:8410	1103059	2	True				
ANR	1104451	Identifier	i		1103059	0					
ANR	1104452	IncDec	++		1103059	1					
ANR	1104453	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = 0xFFU << 24 | bytestream_get_le32 ( & buf )	483:16:8430:8498	1103059	3	True				
ANR	1104454	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = 0xFFU << 24 | bytestream_get_le32 ( & buf )		1103059	0		=			
ANR	1104455	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1103059	0					
ANR	1104456	CastExpression	( uint32_t * ) p -> data [ 1 ]		1103059	0					
ANR	1104457	CastTarget	uint32_t *		1103059	0					
ANR	1104458	ArrayIndexing	p -> data [ 1 ]		1103059	1					
ANR	1104459	PtrMemberAccess	p -> data		1103059	0					
ANR	1104460	Identifier	p		1103059	0					
ANR	1104461	Identifier	data		1103059	1					
ANR	1104462	PrimaryExpression	1		1103059	1					
ANR	1104463	Identifier	i		1103059	1					
ANR	1104464	InclusiveOrExpression	0xFFU << 24 | bytestream_get_le32 ( & buf )		1103059	1		|			
ANR	1104465	ShiftExpression	0xFFU << 24		1103059	0		<<			
ANR	1104466	PrimaryExpression	0xFFU		1103059	0					
ANR	1104467	PrimaryExpression	24		1103059	1					
ANR	1104468	CallExpression	bytestream_get_le32 ( & buf )		1103059	1					
ANR	1104469	Callee	bytestream_get_le32		1103059	0					
ANR	1104470	Identifier	bytestream_get_le32		1103059	0					
ANR	1104471	ArgumentList	& buf		1103059	1					
ANR	1104472	Argument	& buf		1103059	0					
ANR	1104473	UnaryOperationExpression	& buf		1103059	0					
ANR	1104474	UnaryOperator	&		1103059	0					
ANR	1104475	Identifier	buf		1103059	1					
ANR	1104476	ExpressionStatement	buf = buf0 + hsize	487:8:8520:8538	1103059	5	True				
ANR	1104477	AssignmentExpression	buf = buf0 + hsize		1103059	0		=			
ANR	1104478	Identifier	buf		1103059	0					
ANR	1104479	AdditiveExpression	buf0 + hsize		1103059	1		+			
ANR	1104480	Identifier	buf0		1103059	0					
ANR	1104481	Identifier	hsize		1103059	1					
ANR	1104482	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1103059	56					
ANR	1104483	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	491:8:8556:8591	1103059	0	True				
ANR	1104484	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1103059	0		||			
ANR	1104485	EqualityExpression	comp == BMP_RLE4		1103059	0		==			
ANR	1104486	Identifier	comp		1103059	0					
ANR	1104487	Identifier	BMP_RLE4		1103059	1					
ANR	1104488	EqualityExpression	comp == BMP_RLE8		1103059	1		==			
ANR	1104489	Identifier	comp		1103059	0					
ANR	1104490	Identifier	BMP_RLE8		1103059	1					
ANR	1104491	CompoundStatement		485:46:8438:8438	1103059	1					
ANR	1104492	IfStatement	if ( comp == BMP_RLE8 && height < 0 )		1103059	0					
ANR	1104493	Condition	comp == BMP_RLE8 && height < 0	493:12:8609:8638	1103059	0	True				
ANR	1104494	AndExpression	comp == BMP_RLE8 && height < 0		1103059	0		&&			
ANR	1104495	EqualityExpression	comp == BMP_RLE8		1103059	0		==			
ANR	1104496	Identifier	comp		1103059	0					
ANR	1104497	Identifier	BMP_RLE8		1103059	1					
ANR	1104498	RelationalExpression	height < 0		1103059	1		<			
ANR	1104499	Identifier	height		1103059	0					
ANR	1104500	PrimaryExpression	0		1103059	1					
ANR	1104501	CompoundStatement		487:44:8485:8485	1103059	1					
ANR	1104502	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	495:12:8656:8710	1103059	0	True				
ANR	1104503	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1103059	0		+=			
ANR	1104504	ArrayIndexing	p -> data [ 0 ]		1103059	0					
ANR	1104505	PtrMemberAccess	p -> data		1103059	0					
ANR	1104506	Identifier	p		1103059	0					
ANR	1104507	Identifier	data		1103059	1					
ANR	1104508	PrimaryExpression	0		1103059	1					
ANR	1104509	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1103059	1		*			
ANR	1104510	ArrayIndexing	p -> linesize [ 0 ]		1103059	0					
ANR	1104511	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104512	Identifier	p		1103059	0					
ANR	1104513	Identifier	linesize		1103059	1					
ANR	1104514	PrimaryExpression	0		1103059	1					
ANR	1104515	AdditiveExpression	avctx -> height - 1		1103059	1		-			
ANR	1104516	PtrMemberAccess	avctx -> height		1103059	0					
ANR	1104517	Identifier	avctx		1103059	0					
ANR	1104518	Identifier	height		1103059	1					
ANR	1104519	PrimaryExpression	1		1103059	1					
ANR	1104520	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	497:12:8725:8757	1103059	1	True				
ANR	1104521	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1103059	0		=			
ANR	1104522	ArrayIndexing	p -> linesize [ 0 ]		1103059	0					
ANR	1104523	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104524	Identifier	p		1103059	0					
ANR	1104525	Identifier	linesize		1103059	1					
ANR	1104526	PrimaryExpression	0		1103059	1					
ANR	1104527	UnaryOperationExpression	- p -> linesize [ 0 ]		1103059	1					
ANR	1104528	UnaryOperator	-		1103059	0					
ANR	1104529	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104530	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104531	Identifier	p		1103059	0					
ANR	1104532	Identifier	linesize		1103059	1					
ANR	1104533	PrimaryExpression	0		1103059	1					
ANR	1104534	ExpressionStatement	"bytestream2_init ( & gb , buf , dsize )"	501:8:8779:8812	1103059	1	True				
ANR	1104535	CallExpression	"bytestream2_init ( & gb , buf , dsize )"		1103059	0					
ANR	1104536	Callee	bytestream2_init		1103059	0					
ANR	1104537	Identifier	bytestream2_init		1103059	0					
ANR	1104538	ArgumentList	& gb		1103059	1					
ANR	1104539	Argument	& gb		1103059	0					
ANR	1104540	UnaryOperationExpression	& gb		1103059	0					
ANR	1104541	UnaryOperator	&		1103059	0					
ANR	1104542	Identifier	gb		1103059	1					
ANR	1104543	Argument	buf		1103059	1					
ANR	1104544	Identifier	buf		1103059	0					
ANR	1104545	Argument	dsize		1103059	2					
ANR	1104546	Identifier	dsize		1103059	0					
ANR	1104547	ExpressionStatement	"ff_msrle_decode ( avctx , p , depth , & gb )"	503:8:8823:8860	1103059	2	True				
ANR	1104548	CallExpression	"ff_msrle_decode ( avctx , p , depth , & gb )"		1103059	0					
ANR	1104549	Callee	ff_msrle_decode		1103059	0					
ANR	1104550	Identifier	ff_msrle_decode		1103059	0					
ANR	1104551	ArgumentList	avctx		1103059	1					
ANR	1104552	Argument	avctx		1103059	0					
ANR	1104553	Identifier	avctx		1103059	0					
ANR	1104554	Argument	p		1103059	1					
ANR	1104555	Identifier	p		1103059	0					
ANR	1104556	Argument	depth		1103059	2					
ANR	1104557	Identifier	depth		1103059	0					
ANR	1104558	Argument	& gb		1103059	3					
ANR	1104559	UnaryOperationExpression	& gb		1103059	0					
ANR	1104560	UnaryOperator	&		1103059	0					
ANR	1104561	Identifier	gb		1103059	1					
ANR	1104562	IfStatement	if ( height < 0 )		1103059	3					
ANR	1104563	Condition	height < 0	505:12:8875:8884	1103059	0	True				
ANR	1104564	RelationalExpression	height < 0		1103059	0		<			
ANR	1104565	Identifier	height		1103059	0					
ANR	1104566	PrimaryExpression	0		1103059	1					
ANR	1104567	CompoundStatement		499:24:8731:8731	1103059	1					
ANR	1104568	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	507:12:8902:8956	1103059	0	True				
ANR	1104569	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1103059	0		+=			
ANR	1104570	ArrayIndexing	p -> data [ 0 ]		1103059	0					
ANR	1104571	PtrMemberAccess	p -> data		1103059	0					
ANR	1104572	Identifier	p		1103059	0					
ANR	1104573	Identifier	data		1103059	1					
ANR	1104574	PrimaryExpression	0		1103059	1					
ANR	1104575	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1103059	1		*			
ANR	1104576	ArrayIndexing	p -> linesize [ 0 ]		1103059	0					
ANR	1104577	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104578	Identifier	p		1103059	0					
ANR	1104579	Identifier	linesize		1103059	1					
ANR	1104580	PrimaryExpression	0		1103059	1					
ANR	1104581	AdditiveExpression	avctx -> height - 1		1103059	1		-			
ANR	1104582	PtrMemberAccess	avctx -> height		1103059	0					
ANR	1104583	Identifier	avctx		1103059	0					
ANR	1104584	Identifier	height		1103059	1					
ANR	1104585	PrimaryExpression	1		1103059	1					
ANR	1104586	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	509:12:8971:9003	1103059	1	True				
ANR	1104587	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1103059	0		=			
ANR	1104588	ArrayIndexing	p -> linesize [ 0 ]		1103059	0					
ANR	1104589	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104590	Identifier	p		1103059	0					
ANR	1104591	Identifier	linesize		1103059	1					
ANR	1104592	PrimaryExpression	0		1103059	1					
ANR	1104593	UnaryOperationExpression	- p -> linesize [ 0 ]		1103059	1					
ANR	1104594	UnaryOperator	-		1103059	0					
ANR	1104595	ArrayIndexing	p -> linesize [ 0 ]		1103059	1					
ANR	1104596	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1104597	Identifier	p		1103059	0					
ANR	1104598	Identifier	linesize		1103059	1					
ANR	1104599	PrimaryExpression	0		1103059	1					
ANR	1104600	ElseStatement	else		1103059	0					
ANR	1104601	CompoundStatement		507:11:8872:8872	1103059	0					
ANR	1104602	SwitchStatement	switch ( depth )		1103059	0					
ANR	1104603	Condition	depth	515:16:9047:9051	1103059	0	True				
ANR	1104604	Identifier	depth		1103059	0					
ANR	1104605	CompoundStatement		509:23:8898:8898	1103059	1					
ANR	1104606	Label	case 1 :	517:8:9065:9071	1103059	0	True				
ANR	1104607	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1103059	1					
ANR	1104608	ForInit	i = 0 ;	519:17:9091:9096	1103059	0	True				
ANR	1104609	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104610	Identifier	i		1103059	0					
ANR	1104611	PrimaryExpression	0		1103059	1					
ANR	1104612	Condition	i < avctx -> height	519:24:9098:9114	1103059	1	True				
ANR	1104613	RelationalExpression	i < avctx -> height		1103059	0		<			
ANR	1104614	Identifier	i		1103059	0					
ANR	1104615	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104616	Identifier	avctx		1103059	0					
ANR	1104617	Identifier	height		1103059	1					
ANR	1104618	PostIncDecOperationExpression	i ++	519:43:9117:9119	1103059	2	True				
ANR	1104619	Identifier	i		1103059	0					
ANR	1104620	IncDec	++		1103059	1					
ANR	1104621	CompoundStatement		515:16:8985:8990	1103059	3					
ANR	1104622	IdentifierDeclStatement	int j ;	521:16:9141:9146	1103059	0	True				
ANR	1104623	IdentifierDecl	j		1103059	0					
ANR	1104624	IdentifierDeclType	int		1103059	0					
ANR	1104625	Identifier	j		1103059	1					
ANR	1104626	ForStatement	for ( j = 0 ; j < n ; j ++ )		1103059	1					
ANR	1104627	ForInit	j = 0 ;	523:21:9170:9175	1103059	0	True				
ANR	1104628	AssignmentExpression	j = 0		1103059	0		=			
ANR	1104629	Identifier	j		1103059	0					
ANR	1104630	PrimaryExpression	0		1103059	1					
ANR	1104631	Condition	j < n	523:28:9177:9181	1103059	1	True				
ANR	1104632	RelationalExpression	j < n		1103059	0		<			
ANR	1104633	Identifier	j		1103059	0					
ANR	1104634	Identifier	n		1103059	1					
ANR	1104635	PostIncDecOperationExpression	j ++	523:35:9184:9186	1103059	2	True				
ANR	1104636	Identifier	j		1103059	0					
ANR	1104637	IncDec	++		1103059	1					
ANR	1104638	CompoundStatement		517:40:9033:9033	1103059	3					
ANR	1104639	ExpressionStatement	ptr [ j * 8 + 0 ] = buf [ j ] >> 7	525:20:9212:9237	1103059	0	True				
ANR	1104640	AssignmentExpression	ptr [ j * 8 + 0 ] = buf [ j ] >> 7		1103059	0		=			
ANR	1104641	ArrayIndexing	ptr [ j * 8 + 0 ]		1103059	0					
ANR	1104642	Identifier	ptr		1103059	0					
ANR	1104643	AdditiveExpression	j * 8 + 0		1103059	1		+			
ANR	1104644	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104645	Identifier	j		1103059	0					
ANR	1104646	PrimaryExpression	8		1103059	1					
ANR	1104647	PrimaryExpression	0		1103059	1					
ANR	1104648	ShiftExpression	buf [ j ] >> 7		1103059	1		>>			
ANR	1104649	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104650	Identifier	buf		1103059	0					
ANR	1104651	Identifier	j		1103059	1					
ANR	1104652	PrimaryExpression	7		1103059	1					
ANR	1104653	ExpressionStatement	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1	527:20:9260:9290	1103059	1	True				
ANR	1104654	AssignmentExpression	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1		1103059	0		=			
ANR	1104655	ArrayIndexing	ptr [ j * 8 + 1 ]		1103059	0					
ANR	1104656	Identifier	ptr		1103059	0					
ANR	1104657	AdditiveExpression	j * 8 + 1		1103059	1		+			
ANR	1104658	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104659	Identifier	j		1103059	0					
ANR	1104660	PrimaryExpression	8		1103059	1					
ANR	1104661	PrimaryExpression	1		1103059	1					
ANR	1104662	BitAndExpression	( buf [ j ] >> 6 ) & 1		1103059	1		&			
ANR	1104663	ShiftExpression	buf [ j ] >> 6		1103059	0		>>			
ANR	1104664	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104665	Identifier	buf		1103059	0					
ANR	1104666	Identifier	j		1103059	1					
ANR	1104667	PrimaryExpression	6		1103059	1					
ANR	1104668	PrimaryExpression	1		1103059	1					
ANR	1104669	ExpressionStatement	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1	529:20:9313:9343	1103059	2	True				
ANR	1104670	AssignmentExpression	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1		1103059	0		=			
ANR	1104671	ArrayIndexing	ptr [ j * 8 + 2 ]		1103059	0					
ANR	1104672	Identifier	ptr		1103059	0					
ANR	1104673	AdditiveExpression	j * 8 + 2		1103059	1		+			
ANR	1104674	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104675	Identifier	j		1103059	0					
ANR	1104676	PrimaryExpression	8		1103059	1					
ANR	1104677	PrimaryExpression	2		1103059	1					
ANR	1104678	BitAndExpression	( buf [ j ] >> 5 ) & 1		1103059	1		&			
ANR	1104679	ShiftExpression	buf [ j ] >> 5		1103059	0		>>			
ANR	1104680	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104681	Identifier	buf		1103059	0					
ANR	1104682	Identifier	j		1103059	1					
ANR	1104683	PrimaryExpression	5		1103059	1					
ANR	1104684	PrimaryExpression	1		1103059	1					
ANR	1104685	ExpressionStatement	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1	531:20:9366:9396	1103059	3	True				
ANR	1104686	AssignmentExpression	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1		1103059	0		=			
ANR	1104687	ArrayIndexing	ptr [ j * 8 + 3 ]		1103059	0					
ANR	1104688	Identifier	ptr		1103059	0					
ANR	1104689	AdditiveExpression	j * 8 + 3		1103059	1		+			
ANR	1104690	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104691	Identifier	j		1103059	0					
ANR	1104692	PrimaryExpression	8		1103059	1					
ANR	1104693	PrimaryExpression	3		1103059	1					
ANR	1104694	BitAndExpression	( buf [ j ] >> 4 ) & 1		1103059	1		&			
ANR	1104695	ShiftExpression	buf [ j ] >> 4		1103059	0		>>			
ANR	1104696	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104697	Identifier	buf		1103059	0					
ANR	1104698	Identifier	j		1103059	1					
ANR	1104699	PrimaryExpression	4		1103059	1					
ANR	1104700	PrimaryExpression	1		1103059	1					
ANR	1104701	ExpressionStatement	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1	533:20:9419:9449	1103059	4	True				
ANR	1104702	AssignmentExpression	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1		1103059	0		=			
ANR	1104703	ArrayIndexing	ptr [ j * 8 + 4 ]		1103059	0					
ANR	1104704	Identifier	ptr		1103059	0					
ANR	1104705	AdditiveExpression	j * 8 + 4		1103059	1		+			
ANR	1104706	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104707	Identifier	j		1103059	0					
ANR	1104708	PrimaryExpression	8		1103059	1					
ANR	1104709	PrimaryExpression	4		1103059	1					
ANR	1104710	BitAndExpression	( buf [ j ] >> 3 ) & 1		1103059	1		&			
ANR	1104711	ShiftExpression	buf [ j ] >> 3		1103059	0		>>			
ANR	1104712	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104713	Identifier	buf		1103059	0					
ANR	1104714	Identifier	j		1103059	1					
ANR	1104715	PrimaryExpression	3		1103059	1					
ANR	1104716	PrimaryExpression	1		1103059	1					
ANR	1104717	ExpressionStatement	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1	535:20:9472:9502	1103059	5	True				
ANR	1104718	AssignmentExpression	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1		1103059	0		=			
ANR	1104719	ArrayIndexing	ptr [ j * 8 + 5 ]		1103059	0					
ANR	1104720	Identifier	ptr		1103059	0					
ANR	1104721	AdditiveExpression	j * 8 + 5		1103059	1		+			
ANR	1104722	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104723	Identifier	j		1103059	0					
ANR	1104724	PrimaryExpression	8		1103059	1					
ANR	1104725	PrimaryExpression	5		1103059	1					
ANR	1104726	BitAndExpression	( buf [ j ] >> 2 ) & 1		1103059	1		&			
ANR	1104727	ShiftExpression	buf [ j ] >> 2		1103059	0		>>			
ANR	1104728	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104729	Identifier	buf		1103059	0					
ANR	1104730	Identifier	j		1103059	1					
ANR	1104731	PrimaryExpression	2		1103059	1					
ANR	1104732	PrimaryExpression	1		1103059	1					
ANR	1104733	ExpressionStatement	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1	537:20:9525:9555	1103059	6	True				
ANR	1104734	AssignmentExpression	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1		1103059	0		=			
ANR	1104735	ArrayIndexing	ptr [ j * 8 + 6 ]		1103059	0					
ANR	1104736	Identifier	ptr		1103059	0					
ANR	1104737	AdditiveExpression	j * 8 + 6		1103059	1		+			
ANR	1104738	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104739	Identifier	j		1103059	0					
ANR	1104740	PrimaryExpression	8		1103059	1					
ANR	1104741	PrimaryExpression	6		1103059	1					
ANR	1104742	BitAndExpression	( buf [ j ] >> 1 ) & 1		1103059	1		&			
ANR	1104743	ShiftExpression	buf [ j ] >> 1		1103059	0		>>			
ANR	1104744	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104745	Identifier	buf		1103059	0					
ANR	1104746	Identifier	j		1103059	1					
ANR	1104747	PrimaryExpression	1		1103059	1					
ANR	1104748	PrimaryExpression	1		1103059	1					
ANR	1104749	ExpressionStatement	ptr [ j * 8 + 7 ] = buf [ j ] & 1	539:20:9578:9608	1103059	7	True				
ANR	1104750	AssignmentExpression	ptr [ j * 8 + 7 ] = buf [ j ] & 1		1103059	0		=			
ANR	1104751	ArrayIndexing	ptr [ j * 8 + 7 ]		1103059	0					
ANR	1104752	Identifier	ptr		1103059	0					
ANR	1104753	AdditiveExpression	j * 8 + 7		1103059	1		+			
ANR	1104754	MultiplicativeExpression	j * 8		1103059	0		*			
ANR	1104755	Identifier	j		1103059	0					
ANR	1104756	PrimaryExpression	8		1103059	1					
ANR	1104757	PrimaryExpression	7		1103059	1					
ANR	1104758	BitAndExpression	buf [ j ] & 1		1103059	1		&			
ANR	1104759	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104760	Identifier	buf		1103059	0					
ANR	1104761	Identifier	j		1103059	1					
ANR	1104762	PrimaryExpression	1		1103059	1					
ANR	1104763	ExpressionStatement	buf += n	543:16:9646:9654	1103059	2	True				
ANR	1104764	AssignmentExpression	buf += n		1103059	0		+=			
ANR	1104765	Identifier	buf		1103059	0					
ANR	1104766	Identifier	n		1103059	1					
ANR	1104767	ExpressionStatement	ptr += linesize	545:16:9673:9688	1103059	3	True				
ANR	1104768	AssignmentExpression	ptr += linesize		1103059	0		+=			
ANR	1104769	Identifier	ptr		1103059	0					
ANR	1104770	Identifier	linesize		1103059	1					
ANR	1104771	BreakStatement	break ;	549:12:9718:9723	1103059	2	True				
ANR	1104772	Label	case 8 :	551:8:9734:9740	1103059	3	True				
ANR	1104773	Label	case 24 :	553:8:9751:9758	1103059	4	True				
ANR	1104774	Label	case 32 :	555:8:9769:9776	1103059	5	True				
ANR	1104775	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1103059	6					
ANR	1104776	ForInit	i = 0 ;	557:17:9796:9801	1103059	0	True				
ANR	1104777	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104778	Identifier	i		1103059	0					
ANR	1104779	PrimaryExpression	0		1103059	1					
ANR	1104780	Condition	i < avctx -> height	557:24:9803:9819	1103059	1	True				
ANR	1104781	RelationalExpression	i < avctx -> height		1103059	0		<			
ANR	1104782	Identifier	i		1103059	0					
ANR	1104783	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104784	Identifier	avctx		1103059	0					
ANR	1104785	Identifier	height		1103059	1					
ANR	1104786	PostIncDecOperationExpression	i ++	557:43:9822:9824	1103059	2	True				
ANR	1104787	Identifier	i		1103059	0					
ANR	1104788	IncDec	++		1103059	1					
ANR	1104789	CompoundStatement		551:48:9671:9671	1103059	3					
ANR	1104790	ExpressionStatement	"memcpy ( ptr , buf , n )"	559:16:9846:9865	1103059	0	True				
ANR	1104791	CallExpression	"memcpy ( ptr , buf , n )"		1103059	0					
ANR	1104792	Callee	memcpy		1103059	0					
ANR	1104793	Identifier	memcpy		1103059	0					
ANR	1104794	ArgumentList	ptr		1103059	1					
ANR	1104795	Argument	ptr		1103059	0					
ANR	1104796	Identifier	ptr		1103059	0					
ANR	1104797	Argument	buf		1103059	1					
ANR	1104798	Identifier	buf		1103059	0					
ANR	1104799	Argument	n		1103059	2					
ANR	1104800	Identifier	n		1103059	0					
ANR	1104801	ExpressionStatement	buf += n	561:16:9884:9892	1103059	1	True				
ANR	1104802	AssignmentExpression	buf += n		1103059	0		+=			
ANR	1104803	Identifier	buf		1103059	0					
ANR	1104804	Identifier	n		1103059	1					
ANR	1104805	ExpressionStatement	ptr += linesize	563:16:9911:9926	1103059	2	True				
ANR	1104806	AssignmentExpression	ptr += linesize		1103059	0		+=			
ANR	1104807	Identifier	ptr		1103059	0					
ANR	1104808	Identifier	linesize		1103059	1					
ANR	1104809	BreakStatement	break ;	567:12:9956:9961	1103059	7	True				
ANR	1104810	Label	case 4 :	569:8:9972:9978	1103059	8	True				
ANR	1104811	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1103059	9					
ANR	1104812	ForInit	i = 0 ;	571:17:9998:10003	1103059	0	True				
ANR	1104813	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104814	Identifier	i		1103059	0					
ANR	1104815	PrimaryExpression	0		1103059	1					
ANR	1104816	Condition	i < avctx -> height	571:24:10005:10021	1103059	1	True				
ANR	1104817	RelationalExpression	i < avctx -> height		1103059	0		<			
ANR	1104818	Identifier	i		1103059	0					
ANR	1104819	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104820	Identifier	avctx		1103059	0					
ANR	1104821	Identifier	height		1103059	1					
ANR	1104822	PostIncDecOperationExpression	i ++	571:43:10024:10026	1103059	2	True				
ANR	1104823	Identifier	i		1103059	0					
ANR	1104824	IncDec	++		1103059	1					
ANR	1104825	CompoundStatement		567:16:9892:9897	1103059	3					
ANR	1104826	IdentifierDeclStatement	int j ;	573:16:10048:10053	1103059	0	True				
ANR	1104827	IdentifierDecl	j		1103059	0					
ANR	1104828	IdentifierDeclType	int		1103059	0					
ANR	1104829	Identifier	j		1103059	1					
ANR	1104830	ForStatement	for ( j = 0 ; j < n ; j ++ )		1103059	1					
ANR	1104831	ForInit	j = 0 ;	575:21:10077:10082	1103059	0	True				
ANR	1104832	AssignmentExpression	j = 0		1103059	0		=			
ANR	1104833	Identifier	j		1103059	0					
ANR	1104834	PrimaryExpression	0		1103059	1					
ANR	1104835	Condition	j < n	575:28:10084:10088	1103059	1	True				
ANR	1104836	RelationalExpression	j < n		1103059	0		<			
ANR	1104837	Identifier	j		1103059	0					
ANR	1104838	Identifier	n		1103059	1					
ANR	1104839	PostIncDecOperationExpression	j ++	575:35:10091:10093	1103059	2	True				
ANR	1104840	Identifier	j		1103059	0					
ANR	1104841	IncDec	++		1103059	1					
ANR	1104842	CompoundStatement		569:40:9940:9940	1103059	3					
ANR	1104843	ExpressionStatement	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF	577:20:10119:10151	1103059	0	True				
ANR	1104844	AssignmentExpression	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF		1103059	0		=			
ANR	1104845	ArrayIndexing	ptr [ j * 2 + 0 ]		1103059	0					
ANR	1104846	Identifier	ptr		1103059	0					
ANR	1104847	AdditiveExpression	j * 2 + 0		1103059	1		+			
ANR	1104848	MultiplicativeExpression	j * 2		1103059	0		*			
ANR	1104849	Identifier	j		1103059	0					
ANR	1104850	PrimaryExpression	2		1103059	1					
ANR	1104851	PrimaryExpression	0		1103059	1					
ANR	1104852	BitAndExpression	( buf [ j ] >> 4 ) & 0xF		1103059	1		&			
ANR	1104853	ShiftExpression	buf [ j ] >> 4		1103059	0		>>			
ANR	1104854	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104855	Identifier	buf		1103059	0					
ANR	1104856	Identifier	j		1103059	1					
ANR	1104857	PrimaryExpression	4		1103059	1					
ANR	1104858	PrimaryExpression	0xF		1103059	1					
ANR	1104859	ExpressionStatement	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF	579:20:10174:10199	1103059	1	True				
ANR	1104860	AssignmentExpression	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF		1103059	0		=			
ANR	1104861	ArrayIndexing	ptr [ j * 2 + 1 ]		1103059	0					
ANR	1104862	Identifier	ptr		1103059	0					
ANR	1104863	AdditiveExpression	j * 2 + 1		1103059	1		+			
ANR	1104864	MultiplicativeExpression	j * 2		1103059	0		*			
ANR	1104865	Identifier	j		1103059	0					
ANR	1104866	PrimaryExpression	2		1103059	1					
ANR	1104867	PrimaryExpression	1		1103059	1					
ANR	1104868	BitAndExpression	buf [ j ] & 0xF		1103059	1		&			
ANR	1104869	ArrayIndexing	buf [ j ]		1103059	0					
ANR	1104870	Identifier	buf		1103059	0					
ANR	1104871	Identifier	j		1103059	1					
ANR	1104872	PrimaryExpression	0xF		1103059	1					
ANR	1104873	ExpressionStatement	buf += n	583:16:10237:10245	1103059	2	True				
ANR	1104874	AssignmentExpression	buf += n		1103059	0		+=			
ANR	1104875	Identifier	buf		1103059	0					
ANR	1104876	Identifier	n		1103059	1					
ANR	1104877	ExpressionStatement	ptr += linesize	585:16:10264:10279	1103059	3	True				
ANR	1104878	AssignmentExpression	ptr += linesize		1103059	0		+=			
ANR	1104879	Identifier	ptr		1103059	0					
ANR	1104880	Identifier	linesize		1103059	1					
ANR	1104881	BreakStatement	break ;	589:12:10309:10314	1103059	10	True				
ANR	1104882	Label	case 16 :	591:8:10325:10332	1103059	11	True				
ANR	1104883	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1103059	12					
ANR	1104884	ForInit	i = 0 ;	593:17:10352:10357	1103059	0	True				
ANR	1104885	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104886	Identifier	i		1103059	0					
ANR	1104887	PrimaryExpression	0		1103059	1					
ANR	1104888	Condition	i < avctx -> height	593:24:10359:10375	1103059	1	True				
ANR	1104889	RelationalExpression	i < avctx -> height		1103059	0		<			
ANR	1104890	Identifier	i		1103059	0					
ANR	1104891	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104892	Identifier	avctx		1103059	0					
ANR	1104893	Identifier	height		1103059	1					
ANR	1104894	PostIncDecOperationExpression	i ++	593:43:10378:10380	1103059	2	True				
ANR	1104895	Identifier	i		1103059	0					
ANR	1104896	IncDec	++		1103059	1					
ANR	1104897	CompoundStatement		591:16:10309:10347	1103059	3					
ANR	1104898	IdentifierDeclStatement	const uint16_t * src = ( const uint16_t * ) buf ;	595:16:10402:10446	1103059	0	True				
ANR	1104899	IdentifierDecl	* src = ( const uint16_t * ) buf		1103059	0					
ANR	1104900	IdentifierDeclType	const uint16_t *		1103059	0					
ANR	1104901	Identifier	src		1103059	1					
ANR	1104902	AssignmentExpression	* src = ( const uint16_t * ) buf		1103059	2		=			
ANR	1104903	Identifier	src		1103059	0					
ANR	1104904	CastExpression	( const uint16_t * ) buf		1103059	1					
ANR	1104905	CastTarget	const uint16_t *		1103059	0					
ANR	1104906	Identifier	buf		1103059	1					
ANR	1104907	IdentifierDeclStatement	uint16_t * dst = ( uint16_t * ) ptr ;	597:16:10465:10503	1103059	1	True				
ANR	1104908	IdentifierDecl	* dst = ( uint16_t * ) ptr		1103059	0					
ANR	1104909	IdentifierDeclType	uint16_t *		1103059	0					
ANR	1104910	Identifier	dst		1103059	1					
ANR	1104911	AssignmentExpression	* dst = ( uint16_t * ) ptr		1103059	2		=			
ANR	1104912	Identifier	dst		1103059	0					
ANR	1104913	CastExpression	( uint16_t * ) ptr		1103059	1					
ANR	1104914	CastTarget	uint16_t *		1103059	0					
ANR	1104915	Identifier	ptr		1103059	1					
ANR	1104916	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1103059	2					
ANR	1104917	ForInit	j = 0 ;	601:21:10529:10534	1103059	0	True				
ANR	1104918	AssignmentExpression	j = 0		1103059	0		=			
ANR	1104919	Identifier	j		1103059	0					
ANR	1104920	PrimaryExpression	0		1103059	1					
ANR	1104921	Condition	j < avctx -> width	601:28:10536:10551	1103059	1	True				
ANR	1104922	RelationalExpression	j < avctx -> width		1103059	0		<			
ANR	1104923	Identifier	j		1103059	0					
ANR	1104924	PtrMemberAccess	avctx -> width		1103059	1					
ANR	1104925	Identifier	avctx		1103059	0					
ANR	1104926	Identifier	width		1103059	1					
ANR	1104927	PostIncDecOperationExpression	j ++	601:46:10554:10556	1103059	2	True				
ANR	1104928	Identifier	j		1103059	0					
ANR	1104929	IncDec	++		1103059	1					
ANR	1104930	ExpressionStatement	* dst ++ = av_le2ne16 ( * src ++ )	603:20:10580:10607	1103059	3	True				
ANR	1104931	AssignmentExpression	* dst ++ = av_le2ne16 ( * src ++ )		1103059	0		=			
ANR	1104932	UnaryOperationExpression	* dst ++		1103059	0					
ANR	1104933	UnaryOperator	*		1103059	0					
ANR	1104934	PostIncDecOperationExpression	dst ++		1103059	1					
ANR	1104935	Identifier	dst		1103059	0					
ANR	1104936	IncDec	++		1103059	1					
ANR	1104937	CallExpression	av_le2ne16 ( * src ++ )		1103059	1					
ANR	1104938	Callee	av_le2ne16		1103059	0					
ANR	1104939	Identifier	av_le2ne16		1103059	0					
ANR	1104940	ArgumentList	* src ++		1103059	1					
ANR	1104941	Argument	* src ++		1103059	0					
ANR	1104942	UnaryOperationExpression	* src ++		1103059	0					
ANR	1104943	UnaryOperator	*		1103059	0					
ANR	1104944	PostIncDecOperationExpression	src ++		1103059	1					
ANR	1104945	Identifier	src		1103059	0					
ANR	1104946	IncDec	++		1103059	1					
ANR	1104947	ExpressionStatement	buf += n	607:16:10628:10636	1103059	3	True				
ANR	1104948	AssignmentExpression	buf += n		1103059	0		+=			
ANR	1104949	Identifier	buf		1103059	0					
ANR	1104950	Identifier	n		1103059	1					
ANR	1104951	ExpressionStatement	ptr += linesize	609:16:10655:10670	1103059	4	True				
ANR	1104952	AssignmentExpression	ptr += linesize		1103059	0		+=			
ANR	1104953	Identifier	ptr		1103059	0					
ANR	1104954	Identifier	linesize		1103059	1					
ANR	1104955	BreakStatement	break ;	613:12:10700:10705	1103059	13	True				
ANR	1104956	Label	default :	615:8:10716:10723	1103059	14	True				
ANR	1104957	Identifier	default		1103059	0					
ANR	1104958	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"	617:12:10738:10792	1103059	15	True				
ANR	1104959	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"		1103059	0					
ANR	1104960	Callee	av_log		1103059	0					
ANR	1104961	Identifier	av_log		1103059	0					
ANR	1104962	ArgumentList	avctx		1103059	1					
ANR	1104963	Argument	avctx		1103059	0					
ANR	1104964	Identifier	avctx		1103059	0					
ANR	1104965	Argument	AV_LOG_ERROR		1103059	1					
ANR	1104966	Identifier	AV_LOG_ERROR		1103059	0					
ANR	1104967	Argument	"""BMP decoder is broken\\n"""		1103059	2					
ANR	1104968	PrimaryExpression	"""BMP decoder is broken\\n"""		1103059	0					
ANR	1104969	ReturnStatement	return AVERROR_INVALIDDATA ;	619:12:10807:10833	1103059	16	True				
ANR	1104970	Identifier	AVERROR_INVALIDDATA		1103059	0					
ANR	1104971	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_BGRA )		1103059	57					
ANR	1104972	Condition	avctx -> pix_fmt == AV_PIX_FMT_BGRA	625:8:10862:10894	1103059	0	True				
ANR	1104973	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_BGRA		1103059	0		==			
ANR	1104974	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1104975	Identifier	avctx		1103059	0					
ANR	1104976	Identifier	pix_fmt		1103059	1					
ANR	1104977	Identifier	AV_PIX_FMT_BGRA		1103059	1					
ANR	1104978	CompoundStatement		619:43:10741:10741	1103059	1					
ANR	1104979	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1103059	0					
ANR	1104980	ForInit	i = 0 ;	627:13:10913:10918	1103059	0	True				
ANR	1104981	AssignmentExpression	i = 0		1103059	0		=			
ANR	1104982	Identifier	i		1103059	0					
ANR	1104983	PrimaryExpression	0		1103059	1					
ANR	1104984	Condition	i < avctx -> height	627:20:10920:10936	1103059	1	True				
ANR	1104985	RelationalExpression	i < avctx -> height		1103059	0		<			
ANR	1104986	Identifier	i		1103059	0					
ANR	1104987	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1104988	Identifier	avctx		1103059	0					
ANR	1104989	Identifier	height		1103059	1					
ANR	1104990	PostIncDecOperationExpression	i ++	627:39:10939:10941	1103059	2	True				
ANR	1104991	Identifier	i		1103059	0					
ANR	1104992	IncDec	++		1103059	1					
ANR	1104993	CompoundStatement		625:12:10823:10871	1103059	3					
ANR	1104994	IdentifierDeclStatement	int j ;	629:12:10959:10964	1103059	0	True				
ANR	1104995	IdentifierDecl	j		1103059	0					
ANR	1104996	IdentifierDeclType	int		1103059	0					
ANR	1104997	Identifier	j		1103059	1					
ANR	1104998	IdentifierDeclStatement	uint8_t * ptr = p -> data [ 0 ] + p -> linesize [ 0 ] * i + 3 ;	631:12:10979:11027	1103059	1	True				
ANR	1104999	IdentifierDecl	* ptr = p -> data [ 0 ] + p -> linesize [ 0 ] * i + 3		1103059	0					
ANR	1105000	IdentifierDeclType	uint8_t *		1103059	0					
ANR	1105001	Identifier	ptr		1103059	1					
ANR	1105002	AssignmentExpression	* ptr = p -> data [ 0 ] + p -> linesize [ 0 ] * i + 3		1103059	2		=			
ANR	1105003	Identifier	ptr		1103059	0					
ANR	1105004	AdditiveExpression	p -> data [ 0 ] + p -> linesize [ 0 ] * i + 3		1103059	1		+			
ANR	1105005	ArrayIndexing	p -> data [ 0 ]		1103059	0					
ANR	1105006	PtrMemberAccess	p -> data		1103059	0					
ANR	1105007	Identifier	p		1103059	0					
ANR	1105008	Identifier	data		1103059	1					
ANR	1105009	PrimaryExpression	0		1103059	1					
ANR	1105010	AdditiveExpression	p -> linesize [ 0 ] * i + 3		1103059	1		+			
ANR	1105011	MultiplicativeExpression	p -> linesize [ 0 ] * i		1103059	0		*			
ANR	1105012	ArrayIndexing	p -> linesize [ 0 ]		1103059	0					
ANR	1105013	PtrMemberAccess	p -> linesize		1103059	0					
ANR	1105014	Identifier	p		1103059	0					
ANR	1105015	Identifier	linesize		1103059	1					
ANR	1105016	PrimaryExpression	0		1103059	1					
ANR	1105017	Identifier	i		1103059	1					
ANR	1105018	PrimaryExpression	3		1103059	1					
ANR	1105019	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1103059	2					
ANR	1105020	ForInit	j = 0 ;	633:17:11047:11052	1103059	0	True				
ANR	1105021	AssignmentExpression	j = 0		1103059	0		=			
ANR	1105022	Identifier	j		1103059	0					
ANR	1105023	PrimaryExpression	0		1103059	1					
ANR	1105024	Condition	j < avctx -> width	633:24:11054:11069	1103059	1	True				
ANR	1105025	RelationalExpression	j < avctx -> width		1103059	0		<			
ANR	1105026	Identifier	j		1103059	0					
ANR	1105027	PtrMemberAccess	avctx -> width		1103059	1					
ANR	1105028	Identifier	avctx		1103059	0					
ANR	1105029	Identifier	width		1103059	1					
ANR	1105030	PostIncDecOperationExpression	j ++	633:42:11072:11074	1103059	2	True				
ANR	1105031	Identifier	j		1103059	0					
ANR	1105032	IncDec	++		1103059	1					
ANR	1105033	CompoundStatement		627:47:10921:10921	1103059	3					
ANR	1105034	IfStatement	if ( ptr [ 4 * j ] )		1103059	0					
ANR	1105035	Condition	ptr [ 4 * j ]	635:20:11100:11107	1103059	0	True				
ANR	1105036	ArrayIndexing	ptr [ 4 * j ]		1103059	0					
ANR	1105037	Identifier	ptr		1103059	0					
ANR	1105038	MultiplicativeExpression	4 * j		1103059	1		*			
ANR	1105039	PrimaryExpression	4		1103059	0					
ANR	1105040	Identifier	j		1103059	1					
ANR	1105041	BreakStatement	break ;	637:20:11131:11136	1103059	1	True				
ANR	1105042	IfStatement	if ( j < avctx -> width )		1103059	3					
ANR	1105043	Condition	j < avctx -> width	641:16:11170:11185	1103059	0	True				
ANR	1105044	RelationalExpression	j < avctx -> width		1103059	0		<			
ANR	1105045	Identifier	j		1103059	0					
ANR	1105046	PtrMemberAccess	avctx -> width		1103059	1					
ANR	1105047	Identifier	avctx		1103059	0					
ANR	1105048	Identifier	width		1103059	1					
ANR	1105049	BreakStatement	break ;	643:16:11205:11210	1103059	1	True				
ANR	1105050	IfStatement	if ( i == avctx -> height )		1103059	1					
ANR	1105051	Condition	i == avctx -> height	647:12:11236:11253	1103059	0	True				
ANR	1105052	EqualityExpression	i == avctx -> height		1103059	0		==			
ANR	1105053	Identifier	i		1103059	0					
ANR	1105054	PtrMemberAccess	avctx -> height		1103059	1					
ANR	1105055	Identifier	avctx		1103059	0					
ANR	1105056	Identifier	height		1103059	1					
ANR	1105057	ExpressionStatement	avctx -> pix_fmt = p -> format = AV_PIX_FMT_BGR0	649:12:11269:11313	1103059	1	True				
ANR	1105058	AssignmentExpression	avctx -> pix_fmt = p -> format = AV_PIX_FMT_BGR0		1103059	0		=			
ANR	1105059	PtrMemberAccess	avctx -> pix_fmt		1103059	0					
ANR	1105060	Identifier	avctx		1103059	0					
ANR	1105061	Identifier	pix_fmt		1103059	1					
ANR	1105062	AssignmentExpression	p -> format = AV_PIX_FMT_BGR0		1103059	1		=			
ANR	1105063	PtrMemberAccess	p -> format		1103059	0					
ANR	1105064	Identifier	p		1103059	0					
ANR	1105065	Identifier	format		1103059	1					
ANR	1105066	Identifier	AV_PIX_FMT_BGR0		1103059	1					
ANR	1105067	ExpressionStatement	* got_frame = 1	655:4:11329:11343	1103059	58	True				
ANR	1105068	AssignmentExpression	* got_frame = 1		1103059	0		=			
ANR	1105069	UnaryOperationExpression	* got_frame		1103059	0					
ANR	1105070	UnaryOperator	*		1103059	0					
ANR	1105071	Identifier	got_frame		1103059	1					
ANR	1105072	PrimaryExpression	1		1103059	1					
ANR	1105073	ReturnStatement	return buf_size ;	659:4:11352:11367	1103059	59	True				
ANR	1105074	Identifier	buf_size		1103059	0					
ANR	1105075	ReturnType	static int		1103059	1					
ANR	1105076	Identifier	bmp_decode_frame		1103059	2					
ANR	1105077	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		1103059	3					
ANR	1105078	Parameter	AVCodecContext * avctx	1:28:28:48	1103059	0	True				
ANR	1105079	ParameterType	AVCodecContext *		1103059	0					
ANR	1105080	Identifier	avctx		1103059	1					
ANR	1105081	Parameter	void * data	3:28:80:89	1103059	1	True				
ANR	1105082	ParameterType	void *		1103059	0					
ANR	1105083	Identifier	data		1103059	1					
ANR	1105084	Parameter	int * got_frame	3:40:92:105	1103059	2	True				
ANR	1105085	ParameterType	int *		1103059	0					
ANR	1105086	Identifier	got_frame		1103059	1					
ANR	1105087	Parameter	AVPacket * avpkt	5:28:137:151	1103059	3	True				
ANR	1105088	ParameterType	AVPacket *		1103059	0					
ANR	1105089	Identifier	avpkt		1103059	1					
ANR	1105090	CFGEntryNode	ENTRY		1103059		True				
ANR	1105091	CFGExitNode	EXIT		1103059		True				
ANR	1105092	Symbol	data		1103059						
ANR	1105093	Symbol	& gb		1103059						
ANR	1105094	Symbol	hsize		1103059						
ANR	1105095	Symbol	AV_PIX_FMT_PAL8		1103059						
ANR	1105096	Symbol	BMP_RGB		1103059						
ANR	1105097	Symbol	AV_PIX_FMT_BGR0		1103059						
ANR	1105098	Symbol	FFMIN		1103059						
ANR	1105099	Symbol	avpkt		1103059						
ANR	1105100	Symbol	AV_PIX_FMT_RGBA		1103059						
ANR	1105101	Symbol	linesize		1103059						
ANR	1105102	Symbol	ff_get_buffer		1103059						
ANR	1105103	Symbol	* p -> data		1103059						
ANR	1105104	Symbol	got_frame		1103059						
ANR	1105105	Symbol	AV_PIX_FMT_RGB565		1103059						
ANR	1105106	Symbol	AV_PIX_FMT_RGB444		1103059						
ANR	1105107	Symbol	* ptr		1103059						
ANR	1105108	Symbol	height		1103059						
ANR	1105109	Symbol	ret		1103059						
ANR	1105110	Symbol	comp		1103059						
ANR	1105111	Symbol	* buf		1103059						
ANR	1105112	Symbol	* got_frame		1103059						
ANR	1105113	Symbol	buf_size		1103059						
ANR	1105114	Symbol	AV_PIX_FMT_0BGR		1103059						
ANR	1105115	Symbol	AV_PIX_FMT_0RGB		1103059						
ANR	1105116	Symbol	* * p -> data		1103059						
ANR	1105117	Symbol	p -> linesize		1103059						
ANR	1105118	Symbol	bytestream_get_le16		1103059						
ANR	1105119	Symbol	* * * p		1103059						
ANR	1105120	Symbol	* avctx		1103059						
ANR	1105121	Symbol	buf0		1103059						
ANR	1105122	Symbol	fsize		1103059						
ANR	1105123	Symbol	AV_PIX_FMT_GRAY8		1103059						
ANR	1105124	Symbol	av_le2ne16		1103059						
ANR	1105125	Symbol	* dst ++		1103059						
ANR	1105126	Symbol	* rgb		1103059						
ANR	1105127	Symbol	* src ++		1103059						
ANR	1105128	Symbol	avpkt -> data		1103059						
ANR	1105129	Symbol	avctx -> pix_fmt		1103059						
ANR	1105130	Symbol	ihsize		1103059						
ANR	1105131	Symbol	dst		1103059						
ANR	1105132	Symbol	p -> data		1103059						
ANR	1105133	Symbol	avctx -> width		1103059						
ANR	1105134	Symbol	bytestream_get_le24		1103059						
ANR	1105135	Symbol	rgb		1103059						
ANR	1105136	Symbol	colors		1103059						
ANR	1105137	Symbol	AV_PIX_FMT_ABGR		1103059						
ANR	1105138	Symbol	AV_PIX_FMT_ARGB		1103059						
ANR	1105139	Symbol	BMP_RLE4		1103059						
ANR	1105140	Symbol	dsize		1103059						
ANR	1105141	Symbol	avctx -> height		1103059						
ANR	1105142	Symbol	BMP_RLE8		1103059						
ANR	1105143	Symbol	alpha		1103059						
ANR	1105144	Symbol	avpkt -> size		1103059						
ANR	1105145	Symbol	AVERROR_PATCHWELCOME		1103059						
ANR	1105146	Symbol	AV_PICTURE_TYPE_I		1103059						
ANR	1105147	Symbol	gb		1103059						
ANR	1105148	Symbol	* * p		1103059						
ANR	1105149	Symbol	avctx		1103059						
ANR	1105150	Symbol	p -> pict_type		1103059						
ANR	1105151	Symbol	& buf		1103059						
ANR	1105152	Symbol	* avpkt		1103059						
ANR	1105153	Symbol	BMP_BITFIELDS		1103059						
ANR	1105154	Symbol	p -> format		1103059						
ANR	1105155	Symbol	AV_LOG_ERROR		1103059						
ANR	1105156	Symbol	bytestream_get_byte		1103059						
ANR	1105157	Symbol	src		1103059						
ANR	1105158	Symbol	AV_PIX_FMT_BGRA		1103059						
ANR	1105159	Symbol	p -> key_frame		1103059						
ANR	1105160	Symbol	i		1103059						
ANR	1105161	Symbol	bytestream_get_le32		1103059						
ANR	1105162	Symbol	j		1103059						
ANR	1105163	Symbol	AV_PIX_FMT_NONE		1103059						
ANR	1105164	Symbol	* p -> linesize		1103059						
ANR	1105165	Symbol	n		1103059						
ANR	1105166	Symbol	ptr		1103059						
ANR	1105167	Symbol	p		1103059						
ANR	1105168	Symbol	EINVAL		1103059						
ANR	1105169	Symbol	buf		1103059						
ANR	1105170	Symbol	AV_PIX_FMT_BGR24		1103059						
ANR	1105171	Symbol	depth		1103059						
ANR	1105172	Symbol	* i		1103059						
ANR	1105173	Symbol	t		1103059						
ANR	1105174	Symbol	* j		1103059						
ANR	1105175	Symbol	~3		1103059						
ANR	1105176	Symbol	width		1103059						
ANR	1105177	Symbol	AVERROR_INVALIDDATA		1103059						
ANR	1105178	Symbol	* p		1103059						
ANR	1105179	Symbol	AVERROR		1103059						
ANR	1105180	Symbol	AV_PIX_FMT_RGB0		1103059						
ANR	1105181	Symbol	AV_PIX_FMT_RGB555		1103059						
