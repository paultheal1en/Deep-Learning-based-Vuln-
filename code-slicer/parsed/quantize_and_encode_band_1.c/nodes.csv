command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7170904	File	/home/p4ultr4n/workplace/ReVeal/raw_code/quantize_and_encode_band_1.c								
ANR	7170905	Function	quantize_and_encode_band	1:0:0:4835							
ANR	7170906	FunctionDef	"quantize_and_encode_band (struct AACEncContext * s , PutBitContext * pb , const float * in , int size , int scale_idx , int cb , const float lambda)"		7170905	0					
ANR	7170907	CompoundStatement		7:0:228:4835	7170905	0					
ANR	7170908	IdentifierDeclStatement	const float IQ = ff_aac_pow2sf_tab [ 200 + scale_idx - SCALE_ONE_POS + SCALE_DIV_512 ] ;	9:4:235:318	7170905	0	True				
ANR	7170909	IdentifierDecl	IQ = ff_aac_pow2sf_tab [ 200 + scale_idx - SCALE_ONE_POS + SCALE_DIV_512 ]		7170905	0					
ANR	7170910	IdentifierDeclType	const float		7170905	0					
ANR	7170911	Identifier	IQ		7170905	1					
ANR	7170912	AssignmentExpression	IQ = ff_aac_pow2sf_tab [ 200 + scale_idx - SCALE_ONE_POS + SCALE_DIV_512 ]		7170905	2		=			
ANR	7170913	Identifier	IQ		7170905	0					
ANR	7170914	ArrayIndexing	ff_aac_pow2sf_tab [ 200 + scale_idx - SCALE_ONE_POS + SCALE_DIV_512 ]		7170905	1					
ANR	7170915	Identifier	ff_aac_pow2sf_tab		7170905	0					
ANR	7170916	AdditiveExpression	200 + scale_idx - SCALE_ONE_POS + SCALE_DIV_512		7170905	1		+			
ANR	7170917	PrimaryExpression	200		7170905	0					
ANR	7170918	AdditiveExpression	scale_idx - SCALE_ONE_POS + SCALE_DIV_512		7170905	1		-			
ANR	7170919	Identifier	scale_idx		7170905	0					
ANR	7170920	AdditiveExpression	SCALE_ONE_POS + SCALE_DIV_512		7170905	1		+			
ANR	7170921	Identifier	SCALE_ONE_POS		7170905	0					
ANR	7170922	Identifier	SCALE_DIV_512		7170905	1					
ANR	7170923	IdentifierDeclStatement	const float Q = ff_aac_pow2sf_tab [ 200 - scale_idx + SCALE_ONE_POS - SCALE_DIV_512 ] ;	11:4:325:408	7170905	1	True				
ANR	7170924	IdentifierDecl	Q = ff_aac_pow2sf_tab [ 200 - scale_idx + SCALE_ONE_POS - SCALE_DIV_512 ]		7170905	0					
ANR	7170925	IdentifierDeclType	const float		7170905	0					
ANR	7170926	Identifier	Q		7170905	1					
ANR	7170927	AssignmentExpression	Q = ff_aac_pow2sf_tab [ 200 - scale_idx + SCALE_ONE_POS - SCALE_DIV_512 ]		7170905	2		=			
ANR	7170928	Identifier	Q		7170905	0					
ANR	7170929	ArrayIndexing	ff_aac_pow2sf_tab [ 200 - scale_idx + SCALE_ONE_POS - SCALE_DIV_512 ]		7170905	1					
ANR	7170930	Identifier	ff_aac_pow2sf_tab		7170905	0					
ANR	7170931	AdditiveExpression	200 - scale_idx + SCALE_ONE_POS - SCALE_DIV_512		7170905	1		-			
ANR	7170932	PrimaryExpression	200		7170905	0					
ANR	7170933	AdditiveExpression	scale_idx + SCALE_ONE_POS - SCALE_DIV_512		7170905	1		+			
ANR	7170934	Identifier	scale_idx		7170905	0					
ANR	7170935	AdditiveExpression	SCALE_ONE_POS - SCALE_DIV_512		7170905	1		-			
ANR	7170936	Identifier	SCALE_ONE_POS		7170905	0					
ANR	7170937	Identifier	SCALE_DIV_512		7170905	1					
ANR	7170938	IdentifierDeclStatement	const float CLIPPED_ESCAPE = 165140.0f * IQ ;	13:4:415:456	7170905	2	True				
ANR	7170939	IdentifierDecl	CLIPPED_ESCAPE = 165140.0f * IQ		7170905	0					
ANR	7170940	IdentifierDeclType	const float		7170905	0					
ANR	7170941	Identifier	CLIPPED_ESCAPE		7170905	1					
ANR	7170942	AssignmentExpression	CLIPPED_ESCAPE = 165140.0f * IQ		7170905	2		=			
ANR	7170943	Identifier	CLIPPED_ESCAPE		7170905	0					
ANR	7170944	MultiplicativeExpression	165140.0f * IQ		7170905	1		*			
ANR	7170945	PrimaryExpression	165140.0f		7170905	0					
ANR	7170946	Identifier	IQ		7170905	1					
ANR	7170947	IdentifierDeclStatement	const int dim = ( cb < FIRST_PAIR_BT ) ? 4 : 2 ;	15:4:463:507	7170905	3	True				
ANR	7170948	IdentifierDecl	dim = ( cb < FIRST_PAIR_BT ) ? 4 : 2		7170905	0					
ANR	7170949	IdentifierDeclType	const int		7170905	0					
ANR	7170950	Identifier	dim		7170905	1					
ANR	7170951	AssignmentExpression	dim = ( cb < FIRST_PAIR_BT ) ? 4 : 2		7170905	2		=			
ANR	7170952	Identifier	dim		7170905	0					
ANR	7170953	ConditionalExpression	( cb < FIRST_PAIR_BT ) ? 4 : 2		7170905	1					
ANR	7170954	Condition	cb < FIRST_PAIR_BT		7170905	0					
ANR	7170955	RelationalExpression	cb < FIRST_PAIR_BT		7170905	0		<			
ANR	7170956	Identifier	cb		7170905	0					
ANR	7170957	Identifier	FIRST_PAIR_BT		7170905	1					
ANR	7170958	PrimaryExpression	4		7170905	1					
ANR	7170959	PrimaryExpression	2		7170905	2					
ANR	7170960	IdentifierDeclStatement	"int i , j , k ;"	17:4:514:525	7170905	4	True				
ANR	7170961	IdentifierDecl	i		7170905	0					
ANR	7170962	IdentifierDeclType	int		7170905	0					
ANR	7170963	Identifier	i		7170905	1					
ANR	7170964	IdentifierDecl	j		7170905	1					
ANR	7170965	IdentifierDeclType	int		7170905	0					
ANR	7170966	Identifier	j		7170905	1					
ANR	7170967	IdentifierDecl	k		7170905	2					
ANR	7170968	IdentifierDeclType	int		7170905	0					
ANR	7170969	Identifier	k		7170905	1					
ANR	7170970	IdentifierDeclStatement	const float Q34 = sqrtf ( Q * sqrtf ( Q ) ) ;	21:4:564:602	7170905	5	True				
ANR	7170971	IdentifierDecl	Q34 = sqrtf ( Q * sqrtf ( Q ) )		7170905	0					
ANR	7170972	IdentifierDeclType	const float		7170905	0					
ANR	7170973	Identifier	Q34		7170905	1					
ANR	7170974	AssignmentExpression	Q34 = sqrtf ( Q * sqrtf ( Q ) )		7170905	2		=			
ANR	7170975	Identifier	Q34		7170905	0					
ANR	7170976	CallExpression	sqrtf ( Q * sqrtf ( Q ) )		7170905	1					
ANR	7170977	Callee	sqrtf		7170905	0					
ANR	7170978	Identifier	sqrtf		7170905	0					
ANR	7170979	ArgumentList	Q * sqrtf ( Q )		7170905	1					
ANR	7170980	Argument	Q * sqrtf ( Q )		7170905	0					
ANR	7170981	MultiplicativeExpression	Q * sqrtf ( Q )		7170905	0		*			
ANR	7170982	Identifier	Q		7170905	0					
ANR	7170983	CallExpression	sqrtf ( Q )		7170905	1					
ANR	7170984	Callee	sqrtf		7170905	0					
ANR	7170985	Identifier	sqrtf		7170905	0					
ANR	7170986	ArgumentList	Q		7170905	1					
ANR	7170987	Argument	Q		7170905	0					
ANR	7170988	Identifier	Q		7170905	0					
ANR	7170989	IdentifierDeclStatement	const int range = aac_cb_range [ cb ] ;	23:4:609:644	7170905	6	True				
ANR	7170990	IdentifierDecl	range = aac_cb_range [ cb ]		7170905	0					
ANR	7170991	IdentifierDeclType	const int		7170905	0					
ANR	7170992	Identifier	range		7170905	1					
ANR	7170993	AssignmentExpression	range = aac_cb_range [ cb ]		7170905	2		=			
ANR	7170994	Identifier	range		7170905	0					
ANR	7170995	ArrayIndexing	aac_cb_range [ cb ]		7170905	1					
ANR	7170996	Identifier	aac_cb_range		7170905	0					
ANR	7170997	Identifier	cb		7170905	1					
ANR	7170998	IdentifierDeclStatement	const int maxval = aac_cb_maxval [ cb ] ;	25:4:651:687	7170905	7	True				
ANR	7170999	IdentifierDecl	maxval = aac_cb_maxval [ cb ]		7170905	0					
ANR	7171000	IdentifierDeclType	const int		7170905	0					
ANR	7171001	Identifier	maxval		7170905	1					
ANR	7171002	AssignmentExpression	maxval = aac_cb_maxval [ cb ]		7170905	2		=			
ANR	7171003	Identifier	maxval		7170905	0					
ANR	7171004	ArrayIndexing	aac_cb_maxval [ cb ]		7170905	1					
ANR	7171005	Identifier	aac_cb_maxval		7170905	0					
ANR	7171006	Identifier	cb		7170905	1					
ANR	7171007	IdentifierDeclStatement	int offs [ 4 ] ;	27:4:694:705	7170905	8	True				
ANR	7171008	IdentifierDecl	offs [ 4 ]		7170905	0					
ANR	7171009	IdentifierDeclType	int [ 4 ]		7170905	0					
ANR	7171010	Identifier	offs		7170905	1					
ANR	7171011	PrimaryExpression	4		7170905	2					
ANR	7171012	IdentifierDeclStatement	float * scaled = s -> scoefs ;	29:4:712:737	7170905	9	True				
ANR	7171013	IdentifierDecl	* scaled = s -> scoefs		7170905	0					
ANR	7171014	IdentifierDeclType	float *		7170905	0					
ANR	7171015	Identifier	scaled		7170905	1					
ANR	7171016	AssignmentExpression	* scaled = s -> scoefs		7170905	2		=			
ANR	7171017	Identifier	scaled		7170905	0					
ANR	7171018	PtrMemberAccess	s -> scoefs		7170905	1					
ANR	7171019	Identifier	s		7170905	0					
ANR	7171020	Identifier	scoefs		7170905	1					
ANR	7171021	IfStatement	if ( ! cb )		7170905	10					
ANR	7171022	Condition	! cb	37:8:802:804	7170905	0	True				
ANR	7171023	UnaryOperationExpression	! cb		7170905	0					
ANR	7171024	UnaryOperator	!		7170905	0					
ANR	7171025	Identifier	cb		7170905	1					
ANR	7171026	ReturnStatement	return ;	39:8:816:822	7170905	1	True				
ANR	7171027	ExpressionStatement	offs [ 0 ] = 1	45:4:863:874	7170905	11	True				
ANR	7171028	AssignmentExpression	offs [ 0 ] = 1		7170905	0		=			
ANR	7171029	ArrayIndexing	offs [ 0 ]		7170905	0					
ANR	7171030	Identifier	offs		7170905	0					
ANR	7171031	PrimaryExpression	0		7170905	1					
ANR	7171032	PrimaryExpression	1		7170905	1					
ANR	7171033	ForStatement	for ( i = 1 ; i < dim ; i ++ )		7170905	12					
ANR	7171034	ForInit	i = 1 ;	47:9:886:891	7170905	0	True				
ANR	7171035	AssignmentExpression	i = 1		7170905	0		=			
ANR	7171036	Identifier	i		7170905	0					
ANR	7171037	PrimaryExpression	1		7170905	1					
ANR	7171038	Condition	i < dim	47:16:893:899	7170905	1	True				
ANR	7171039	RelationalExpression	i < dim		7170905	0		<			
ANR	7171040	Identifier	i		7170905	0					
ANR	7171041	Identifier	dim		7170905	1					
ANR	7171042	PostIncDecOperationExpression	i ++	47:25:902:904	7170905	2	True				
ANR	7171043	Identifier	i		7170905	0					
ANR	7171044	IncDec	++		7170905	1					
ANR	7171045	ExpressionStatement	offs [ i ] = offs [ i - 1 ] * range	49:8:916:941	7170905	3	True				
ANR	7171046	AssignmentExpression	offs [ i ] = offs [ i - 1 ] * range		7170905	0		=			
ANR	7171047	ArrayIndexing	offs [ i ]		7170905	0					
ANR	7171048	Identifier	offs		7170905	0					
ANR	7171049	Identifier	i		7170905	1					
ANR	7171050	MultiplicativeExpression	offs [ i - 1 ] * range		7170905	1		*			
ANR	7171051	ArrayIndexing	offs [ i - 1 ]		7170905	0					
ANR	7171052	Identifier	offs		7170905	0					
ANR	7171053	AdditiveExpression	i - 1		7170905	1		-			
ANR	7171054	Identifier	i		7170905	0					
ANR	7171055	PrimaryExpression	1		7170905	1					
ANR	7171056	Identifier	range		7170905	1					
ANR	7171057	ExpressionStatement	"abs_pow34_v ( scaled , in , size )"	51:4:948:977	7170905	13	True				
ANR	7171058	CallExpression	"abs_pow34_v ( scaled , in , size )"		7170905	0					
ANR	7171059	Callee	abs_pow34_v		7170905	0					
ANR	7171060	Identifier	abs_pow34_v		7170905	0					
ANR	7171061	ArgumentList	scaled		7170905	1					
ANR	7171062	Argument	scaled		7170905	0					
ANR	7171063	Identifier	scaled		7170905	0					
ANR	7171064	Argument	in		7170905	1					
ANR	7171065	Identifier	in		7170905	0					
ANR	7171066	Argument	size		7170905	2					
ANR	7171067	Identifier	size		7170905	0					
ANR	7171068	ExpressionStatement	"quantize_bands ( s -> qcoefs , in , scaled , size , Q34 , ! IS_CODEBOOK_UNSIGNED ( cb ) , maxval )"	53:4:984:1067	7170905	14	True				
ANR	7171069	CallExpression	"quantize_bands ( s -> qcoefs , in , scaled , size , Q34 , ! IS_CODEBOOK_UNSIGNED ( cb ) , maxval )"		7170905	0					
ANR	7171070	Callee	quantize_bands		7170905	0					
ANR	7171071	Identifier	quantize_bands		7170905	0					
ANR	7171072	ArgumentList	s -> qcoefs		7170905	1					
ANR	7171073	Argument	s -> qcoefs		7170905	0					
ANR	7171074	PtrMemberAccess	s -> qcoefs		7170905	0					
ANR	7171075	Identifier	s		7170905	0					
ANR	7171076	Identifier	qcoefs		7170905	1					
ANR	7171077	Argument	in		7170905	1					
ANR	7171078	Identifier	in		7170905	0					
ANR	7171079	Argument	scaled		7170905	2					
ANR	7171080	Identifier	scaled		7170905	0					
ANR	7171081	Argument	size		7170905	3					
ANR	7171082	Identifier	size		7170905	0					
ANR	7171083	Argument	Q34		7170905	4					
ANR	7171084	Identifier	Q34		7170905	0					
ANR	7171085	Argument	! IS_CODEBOOK_UNSIGNED ( cb )		7170905	5					
ANR	7171086	UnaryOperationExpression	! IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171087	UnaryOperator	!		7170905	0					
ANR	7171088	CallExpression	IS_CODEBOOK_UNSIGNED ( cb )		7170905	1					
ANR	7171089	Callee	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171090	Identifier	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171091	ArgumentList	cb		7170905	1					
ANR	7171092	Argument	cb		7170905	0					
ANR	7171093	Identifier	cb		7170905	0					
ANR	7171094	Argument	maxval		7170905	6					
ANR	7171095	Identifier	maxval		7170905	0					
ANR	7171096	ForStatement	for ( i = 0 ; i < size ; i += dim )		7170905	15					
ANR	7171097	ForInit	i = 0 ;	57:9:1116:1121	7170905	0	True				
ANR	7171098	AssignmentExpression	i = 0		7170905	0		=			
ANR	7171099	Identifier	i		7170905	0					
ANR	7171100	PrimaryExpression	0		7170905	1					
ANR	7171101	Condition	i < size	57:16:1123:1130	7170905	1	True				
ANR	7171102	RelationalExpression	i < size		7170905	0		<			
ANR	7171103	Identifier	i		7170905	0					
ANR	7171104	Identifier	size		7170905	1					
ANR	7171105	AssignmentExpression	i += dim	57:26:1133:1140	7170905	2	True	+=			
ANR	7171106	Identifier	i		7170905	0					
ANR	7171107	Identifier	dim		7170905	1					
ANR	7171108	CompoundStatement		63:8:1060:1092	7170905	3					
ANR	7171109	IdentifierDeclStatement	float mincost ;	59:8:1154:1167	7170905	0	True				
ANR	7171110	IdentifierDecl	mincost		7170905	0					
ANR	7171111	IdentifierDeclType	float		7170905	0					
ANR	7171112	Identifier	mincost		7170905	1					
ANR	7171113	IdentifierDeclStatement	int minidx = 0 ;	61:8:1178:1193	7170905	1	True				
ANR	7171114	IdentifierDecl	minidx = 0		7170905	0					
ANR	7171115	IdentifierDeclType	int		7170905	0					
ANR	7171116	Identifier	minidx		7170905	1					
ANR	7171117	AssignmentExpression	minidx = 0		7170905	2		=			
ANR	7171118	Identifier	minidx		7170905	0					
ANR	7171119	PrimaryExpression	0		7170905	1					
ANR	7171120	IdentifierDeclStatement	int minbits = 0 ;	63:8:1204:1219	7170905	2	True				
ANR	7171121	IdentifierDecl	minbits = 0		7170905	0					
ANR	7171122	IdentifierDeclType	int		7170905	0					
ANR	7171123	Identifier	minbits		7170905	1					
ANR	7171124	AssignmentExpression	minbits = 0		7170905	2		=			
ANR	7171125	Identifier	minbits		7170905	0					
ANR	7171126	PrimaryExpression	0		7170905	1					
ANR	7171127	IdentifierDeclStatement	const float * vec ;	65:8:1230:1246	7170905	3	True				
ANR	7171128	IdentifierDecl	* vec		7170905	0					
ANR	7171129	IdentifierDeclType	const float *		7170905	0					
ANR	7171130	Identifier	vec		7170905	1					
ANR	7171131	IdentifierDeclStatement	int ( * quants ) [ 2 ] = & s -> qcoefs [ i ] ;	69:8:1289:1321	7170905	4	True				
ANR	7171132	IdentifierDecl	( * quants ) [ 2 ] = & s -> qcoefs [ i ]		7170905	0					
ANR	7171133	IdentifierDeclType	int ( * ) [ 2 ]		7170905	0					
ANR	7171134	Identifier	quants		7170905	1					
ANR	7171135	PrimaryExpression	2		7170905	2					
ANR	7171136	AssignmentExpression	( * quants ) [ 2 ] = & s -> qcoefs [ i ]		7170905	3		=			
ANR	7171137	Identifier	quants		7170905	0					
ANR	7171138	UnaryOperationExpression	& s -> qcoefs [ i ]		7170905	1					
ANR	7171139	UnaryOperator	&		7170905	0					
ANR	7171140	ArrayIndexing	s -> qcoefs [ i ]		7170905	1					
ANR	7171141	PtrMemberAccess	s -> qcoefs		7170905	0					
ANR	7171142	Identifier	s		7170905	0					
ANR	7171143	Identifier	qcoefs		7170905	1					
ANR	7171144	Identifier	i		7170905	1					
ANR	7171145	ExpressionStatement	mincost = 0.0f	71:8:1332:1346	7170905	5	True				
ANR	7171146	AssignmentExpression	mincost = 0.0f		7170905	0		=			
ANR	7171147	Identifier	mincost		7170905	0					
ANR	7171148	PrimaryExpression	0.0f		7170905	1					
ANR	7171149	ForStatement	for ( j = 0 ; j < dim ; j ++ )		7170905	6					
ANR	7171150	ForInit	j = 0 ;	73:13:1362:1367	7170905	0	True				
ANR	7171151	AssignmentExpression	j = 0		7170905	0		=			
ANR	7171152	Identifier	j		7170905	0					
ANR	7171153	PrimaryExpression	0		7170905	1					
ANR	7171154	Condition	j < dim	73:20:1369:1375	7170905	1	True				
ANR	7171155	RelationalExpression	j < dim		7170905	0		<			
ANR	7171156	Identifier	j		7170905	0					
ANR	7171157	Identifier	dim		7170905	1					
ANR	7171158	PostIncDecOperationExpression	j ++	73:29:1378:1380	7170905	2	True				
ANR	7171159	Identifier	j		7170905	0					
ANR	7171160	IncDec	++		7170905	1					
ANR	7171161	ExpressionStatement	mincost += in [ i + j ] * in [ i + j ]	75:12:1396:1422	7170905	3	True				
ANR	7171162	AssignmentExpression	mincost += in [ i + j ] * in [ i + j ]		7170905	0		+=			
ANR	7171163	Identifier	mincost		7170905	0					
ANR	7171164	MultiplicativeExpression	in [ i + j ] * in [ i + j ]		7170905	1		*			
ANR	7171165	ArrayIndexing	in [ i + j ]		7170905	0					
ANR	7171166	Identifier	in		7170905	0					
ANR	7171167	AdditiveExpression	i + j		7170905	1		+			
ANR	7171168	Identifier	i		7170905	0					
ANR	7171169	Identifier	j		7170905	1					
ANR	7171170	ArrayIndexing	in [ i + j ]		7170905	1					
ANR	7171171	Identifier	in		7170905	0					
ANR	7171172	AdditiveExpression	i + j		7170905	1		+			
ANR	7171173	Identifier	i		7170905	0					
ANR	7171174	Identifier	j		7170905	1					
ANR	7171175	ExpressionStatement	minidx = IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40	77:8:1433:1475	7170905	7	True				
ANR	7171176	AssignmentExpression	minidx = IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40		7170905	0		=			
ANR	7171177	Identifier	minidx		7170905	0					
ANR	7171178	ConditionalExpression	IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40		7170905	1					
ANR	7171179	Condition	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171180	CallExpression	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171181	Callee	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171182	Identifier	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171183	ArgumentList	cb		7170905	1					
ANR	7171184	Argument	cb		7170905	0					
ANR	7171185	Identifier	cb		7170905	0					
ANR	7171186	PrimaryExpression	0		7170905	1					
ANR	7171187	PrimaryExpression	40		7170905	2					
ANR	7171188	ExpressionStatement	minbits = ff_aac_spectral_bits [ cb - 1 ] [ minidx ]	79:8:1486:1530	7170905	8	True				
ANR	7171189	AssignmentExpression	minbits = ff_aac_spectral_bits [ cb - 1 ] [ minidx ]		7170905	0		=			
ANR	7171190	Identifier	minbits		7170905	0					
ANR	7171191	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ] [ minidx ]		7170905	1					
ANR	7171192	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ]		7170905	0					
ANR	7171193	Identifier	ff_aac_spectral_bits		7170905	0					
ANR	7171194	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171195	Identifier	cb		7170905	0					
ANR	7171196	PrimaryExpression	1		7170905	1					
ANR	7171197	Identifier	minidx		7170905	1					
ANR	7171198	ExpressionStatement	mincost = mincost * lambda + minbits	81:8:1541:1577	7170905	9	True				
ANR	7171199	AssignmentExpression	mincost = mincost * lambda + minbits		7170905	0		=			
ANR	7171200	Identifier	mincost		7170905	0					
ANR	7171201	AdditiveExpression	mincost * lambda + minbits		7170905	1		+			
ANR	7171202	MultiplicativeExpression	mincost * lambda		7170905	0		*			
ANR	7171203	Identifier	mincost		7170905	0					
ANR	7171204	Identifier	lambda		7170905	1					
ANR	7171205	Identifier	minbits		7170905	1					
ANR	7171206	ForStatement	for ( j = 0 ; j < ( 1 << dim ) ; j ++ )		7170905	10					
ANR	7171207	ForInit	j = 0 ;	83:13:1593:1598	7170905	0	True				
ANR	7171208	AssignmentExpression	j = 0		7170905	0		=			
ANR	7171209	Identifier	j		7170905	0					
ANR	7171210	PrimaryExpression	0		7170905	1					
ANR	7171211	Condition	j < ( 1 << dim )	83:20:1600:1611	7170905	1	True				
ANR	7171212	RelationalExpression	j < ( 1 << dim )		7170905	0		<			
ANR	7171213	Identifier	j		7170905	0					
ANR	7171214	ShiftExpression	1 << dim		7170905	1		<<			
ANR	7171215	PrimaryExpression	1		7170905	0					
ANR	7171216	Identifier	dim		7170905	1					
ANR	7171217	PostIncDecOperationExpression	j ++	83:34:1614:1616	7170905	2	True				
ANR	7171218	Identifier	j		7170905	0					
ANR	7171219	IncDec	++		7170905	1					
ANR	7171220	CompoundStatement		85:12:1522:1536	7170905	3					
ANR	7171221	IdentifierDeclStatement	float rd = 0.0f ;	85:12:1634:1649	7170905	0	True				
ANR	7171222	IdentifierDecl	rd = 0.0f		7170905	0					
ANR	7171223	IdentifierDeclType	float		7170905	0					
ANR	7171224	Identifier	rd		7170905	1					
ANR	7171225	AssignmentExpression	rd = 0.0f		7170905	2		=			
ANR	7171226	Identifier	rd		7170905	0					
ANR	7171227	PrimaryExpression	0.0f		7170905	1					
ANR	7171228	IdentifierDeclStatement	int curbits ;	87:12:1664:1675	7170905	1	True				
ANR	7171229	IdentifierDecl	curbits		7170905	0					
ANR	7171230	IdentifierDeclType	int		7170905	0					
ANR	7171231	Identifier	curbits		7170905	1					
ANR	7171232	IdentifierDeclStatement	int curidx = IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40 ;	89:12:1690:1736	7170905	2	True				
ANR	7171233	IdentifierDecl	curidx = IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40		7170905	0					
ANR	7171234	IdentifierDeclType	int		7170905	0					
ANR	7171235	Identifier	curidx		7170905	1					
ANR	7171236	AssignmentExpression	curidx = IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40		7170905	2		=			
ANR	7171237	Identifier	curidx		7170905	0					
ANR	7171238	ConditionalExpression	IS_CODEBOOK_UNSIGNED ( cb ) ? 0 : 40		7170905	1					
ANR	7171239	Condition	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171240	CallExpression	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171241	Callee	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171242	Identifier	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171243	ArgumentList	cb		7170905	1					
ANR	7171244	Argument	cb		7170905	0					
ANR	7171245	Identifier	cb		7170905	0					
ANR	7171246	PrimaryExpression	0		7170905	1					
ANR	7171247	PrimaryExpression	40		7170905	2					
ANR	7171248	IdentifierDeclStatement	int same = 0 ;	91:12:1751:1765	7170905	3	True				
ANR	7171249	IdentifierDecl	same = 0		7170905	0					
ANR	7171250	IdentifierDeclType	int		7170905	0					
ANR	7171251	Identifier	same		7170905	1					
ANR	7171252	AssignmentExpression	same = 0		7170905	2		=			
ANR	7171253	Identifier	same		7170905	0					
ANR	7171254	PrimaryExpression	0		7170905	1					
ANR	7171255	ForStatement	for ( k = 0 ; k < dim ; k ++ )		7170905	4					
ANR	7171256	ForInit	k = 0 ;	93:17:1785:1790	7170905	0	True				
ANR	7171257	AssignmentExpression	k = 0		7170905	0		=			
ANR	7171258	Identifier	k		7170905	0					
ANR	7171259	PrimaryExpression	0		7170905	1					
ANR	7171260	Condition	k < dim	93:24:1792:1798	7170905	1	True				
ANR	7171261	RelationalExpression	k < dim		7170905	0		<			
ANR	7171262	Identifier	k		7170905	0					
ANR	7171263	Identifier	dim		7170905	1					
ANR	7171264	PostIncDecOperationExpression	k ++	93:33:1801:1803	7170905	2	True				
ANR	7171265	Identifier	k		7170905	0					
ANR	7171266	IncDec	++		7170905	1					
ANR	7171267	CompoundStatement		87:38:1577:1577	7170905	3					
ANR	7171268	IfStatement	if ( ( j & ( 1 << k ) ) && quants [ k ] [ 0 ] == quants [ k ] [ 1 ] )		7170905	0					
ANR	7171269	Condition	( j & ( 1 << k ) ) && quants [ k ] [ 0 ] == quants [ k ] [ 1 ]	95:20:1829:1874	7170905	0	True				
ANR	7171270	AndExpression	( j & ( 1 << k ) ) && quants [ k ] [ 0 ] == quants [ k ] [ 1 ]		7170905	0		&&			
ANR	7171271	BitAndExpression	j & ( 1 << k )		7170905	0		&			
ANR	7171272	Identifier	j		7170905	0					
ANR	7171273	ShiftExpression	1 << k		7170905	1		<<			
ANR	7171274	PrimaryExpression	1		7170905	0					
ANR	7171275	Identifier	k		7170905	1					
ANR	7171276	EqualityExpression	quants [ k ] [ 0 ] == quants [ k ] [ 1 ]		7170905	1		==			
ANR	7171277	ArrayIndexing	quants [ k ] [ 0 ]		7170905	0					
ANR	7171278	ArrayIndexing	quants [ k ]		7170905	0					
ANR	7171279	Identifier	quants		7170905	0					
ANR	7171280	Identifier	k		7170905	1					
ANR	7171281	PrimaryExpression	0		7170905	1					
ANR	7171282	ArrayIndexing	quants [ k ] [ 1 ]		7170905	1					
ANR	7171283	ArrayIndexing	quants [ k ]		7170905	0					
ANR	7171284	Identifier	quants		7170905	0					
ANR	7171285	Identifier	k		7170905	1					
ANR	7171286	PrimaryExpression	1		7170905	1					
ANR	7171287	CompoundStatement		89:68:1648:1648	7170905	1					
ANR	7171288	ExpressionStatement	same = 1	97:20:1900:1908	7170905	0	True				
ANR	7171289	AssignmentExpression	same = 1		7170905	0		=			
ANR	7171290	Identifier	same		7170905	0					
ANR	7171291	PrimaryExpression	1		7170905	1					
ANR	7171292	BreakStatement	break ;	99:20:1931:1936	7170905	1	True				
ANR	7171293	IfStatement	if ( same )		7170905	5					
ANR	7171294	Condition	same	105:16:1989:1992	7170905	0	True				
ANR	7171295	Identifier	same		7170905	0					
ANR	7171296	ContinueStatement	continue ;	107:16:2012:2020	7170905	1	True				
ANR	7171297	ForStatement	for ( k = 0 ; k < dim ; k ++ )		7170905	6					
ANR	7171298	ForInit	k = 0 ;	109:17:2040:2045	7170905	0	True				
ANR	7171299	AssignmentExpression	k = 0		7170905	0		=			
ANR	7171300	Identifier	k		7170905	0					
ANR	7171301	PrimaryExpression	0		7170905	1					
ANR	7171302	Condition	k < dim	109:24:2047:2053	7170905	1	True				
ANR	7171303	RelationalExpression	k < dim		7170905	0		<			
ANR	7171304	Identifier	k		7170905	0					
ANR	7171305	Identifier	dim		7170905	1					
ANR	7171306	PostIncDecOperationExpression	k ++	109:33:2056:2058	7170905	2	True				
ANR	7171307	Identifier	k		7170905	0					
ANR	7171308	IncDec	++		7170905	1					
ANR	7171309	ExpressionStatement	curidx += quants [ k ] [ ! ! ( j & ( 1 << k ) ) ] * offs [ dim - 1 - k ]	111:16:2078:2135	7170905	3	True				
ANR	7171310	AssignmentExpression	curidx += quants [ k ] [ ! ! ( j & ( 1 << k ) ) ] * offs [ dim - 1 - k ]		7170905	0		+=			
ANR	7171311	Identifier	curidx		7170905	0					
ANR	7171312	MultiplicativeExpression	quants [ k ] [ ! ! ( j & ( 1 << k ) ) ] * offs [ dim - 1 - k ]		7170905	1		*			
ANR	7171313	ArrayIndexing	quants [ k ] [ ! ! ( j & ( 1 << k ) ) ]		7170905	0					
ANR	7171314	ArrayIndexing	quants [ k ]		7170905	0					
ANR	7171315	Identifier	quants		7170905	0					
ANR	7171316	Identifier	k		7170905	1					
ANR	7171317	UnaryOperationExpression	! ! ( j & ( 1 << k ) )		7170905	1					
ANR	7171318	UnaryOperator	!		7170905	0					
ANR	7171319	UnaryOperationExpression	! ( j & ( 1 << k ) )		7170905	1					
ANR	7171320	UnaryOperator	!		7170905	0					
ANR	7171321	BitAndExpression	j & ( 1 << k )		7170905	1		&			
ANR	7171322	Identifier	j		7170905	0					
ANR	7171323	ShiftExpression	1 << k		7170905	1		<<			
ANR	7171324	PrimaryExpression	1		7170905	0					
ANR	7171325	Identifier	k		7170905	1					
ANR	7171326	ArrayIndexing	offs [ dim - 1 - k ]		7170905	1					
ANR	7171327	Identifier	offs		7170905	0					
ANR	7171328	AdditiveExpression	dim - 1 - k		7170905	1		-			
ANR	7171329	Identifier	dim		7170905	0					
ANR	7171330	AdditiveExpression	1 - k		7170905	1		-			
ANR	7171331	PrimaryExpression	1		7170905	0					
ANR	7171332	Identifier	k		7170905	1					
ANR	7171333	ExpressionStatement	curbits = ff_aac_spectral_bits [ cb - 1 ] [ curidx ]	113:12:2150:2195	7170905	7	True				
ANR	7171334	AssignmentExpression	curbits = ff_aac_spectral_bits [ cb - 1 ] [ curidx ]		7170905	0		=			
ANR	7171335	Identifier	curbits		7170905	0					
ANR	7171336	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ] [ curidx ]		7170905	1					
ANR	7171337	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ]		7170905	0					
ANR	7171338	Identifier	ff_aac_spectral_bits		7170905	0					
ANR	7171339	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171340	Identifier	cb		7170905	0					
ANR	7171341	PrimaryExpression	1		7170905	1					
ANR	7171342	Identifier	curidx		7170905	1					
ANR	7171343	ExpressionStatement	vec = & ff_aac_codebook_vectors [ cb - 1 ] [ curidx * dim ]	115:12:2210:2262	7170905	8	True				
ANR	7171344	AssignmentExpression	vec = & ff_aac_codebook_vectors [ cb - 1 ] [ curidx * dim ]		7170905	0		=			
ANR	7171345	Identifier	vec		7170905	0					
ANR	7171346	UnaryOperationExpression	& ff_aac_codebook_vectors [ cb - 1 ] [ curidx * dim ]		7170905	1					
ANR	7171347	UnaryOperator	&		7170905	0					
ANR	7171348	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ] [ curidx * dim ]		7170905	1					
ANR	7171349	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ]		7170905	0					
ANR	7171350	Identifier	ff_aac_codebook_vectors		7170905	0					
ANR	7171351	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171352	Identifier	cb		7170905	0					
ANR	7171353	PrimaryExpression	1		7170905	1					
ANR	7171354	MultiplicativeExpression	curidx * dim		7170905	1		*			
ANR	7171355	Identifier	curidx		7170905	0					
ANR	7171356	Identifier	dim		7170905	1					
ANR	7171357	IfStatement	if ( IS_CODEBOOK_UNSIGNED ( cb ) )		7170905	9					
ANR	7171358	Condition	IS_CODEBOOK_UNSIGNED ( cb )	133:16:2591:2614	7170905	0	True				
ANR	7171359	CallExpression	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171360	Callee	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171361	Identifier	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171362	ArgumentList	cb		7170905	1					
ANR	7171363	Argument	cb		7170905	0					
ANR	7171364	Identifier	cb		7170905	0					
ANR	7171365	CompoundStatement		127:42:2388:2388	7170905	1					
ANR	7171366	ForStatement	for ( k = 0 ; k < dim ; k ++ )		7170905	0					
ANR	7171367	ForInit	k = 0 ;	135:21:2641:2646	7170905	0	True				
ANR	7171368	AssignmentExpression	k = 0		7170905	0		=			
ANR	7171369	Identifier	k		7170905	0					
ANR	7171370	PrimaryExpression	0		7170905	1					
ANR	7171371	Condition	k < dim	135:28:2648:2654	7170905	1	True				
ANR	7171372	RelationalExpression	k < dim		7170905	0		<			
ANR	7171373	Identifier	k		7170905	0					
ANR	7171374	Identifier	dim		7170905	1					
ANR	7171375	PostIncDecOperationExpression	k ++	135:37:2657:2659	7170905	2	True				
ANR	7171376	Identifier	k		7170905	0					
ANR	7171377	IncDec	++		7170905	1					
ANR	7171378	CompoundStatement		133:20:2503:2511	7170905	3					
ANR	7171379	IdentifierDeclStatement	float t = fabsf ( in [ i + k ] ) ;	137:20:2685:2709	7170905	0	True				
ANR	7171380	IdentifierDecl	t = fabsf ( in [ i + k ] )		7170905	0					
ANR	7171381	IdentifierDeclType	float		7170905	0					
ANR	7171382	Identifier	t		7170905	1					
ANR	7171383	AssignmentExpression	t = fabsf ( in [ i + k ] )		7170905	2		=			
ANR	7171384	Identifier	t		7170905	0					
ANR	7171385	CallExpression	fabsf ( in [ i + k ] )		7170905	1					
ANR	7171386	Callee	fabsf		7170905	0					
ANR	7171387	Identifier	fabsf		7170905	0					
ANR	7171388	ArgumentList	in [ i + k ]		7170905	1					
ANR	7171389	Argument	in [ i + k ]		7170905	0					
ANR	7171390	ArrayIndexing	in [ i + k ]		7170905	0					
ANR	7171391	Identifier	in		7170905	0					
ANR	7171392	AdditiveExpression	i + k		7170905	1		+			
ANR	7171393	Identifier	i		7170905	0					
ANR	7171394	Identifier	k		7170905	1					
ANR	7171395	IdentifierDeclStatement	float di ;	139:20:2732:2740	7170905	1	True				
ANR	7171396	IdentifierDecl	di		7170905	0					
ANR	7171397	IdentifierDeclType	float		7170905	0					
ANR	7171398	Identifier	di		7170905	1					
ANR	7171399	IfStatement	if ( vec [ k ] == 64.0f )		7170905	2					
ANR	7171400	Condition	vec [ k ] == 64.0f	141:24:2767:2781	7170905	0	True				
ANR	7171401	EqualityExpression	vec [ k ] == 64.0f		7170905	0		==			
ANR	7171402	ArrayIndexing	vec [ k ]		7170905	0					
ANR	7171403	Identifier	vec		7170905	0					
ANR	7171404	Identifier	k		7170905	1					
ANR	7171405	PrimaryExpression	64.0f		7170905	1					
ANR	7171406	CompoundStatement		135:41:2555:2555	7170905	1					
ANR	7171407	IfStatement	if ( t < 39.0f * IQ )		7170905	0					
ANR	7171408	Condition	t < 39.0f * IQ	145:28:2902:2913	7170905	0	True				
ANR	7171409	RelationalExpression	t < 39.0f * IQ		7170905	0		<			
ANR	7171410	Identifier	t		7170905	0					
ANR	7171411	MultiplicativeExpression	39.0f * IQ		7170905	1		*			
ANR	7171412	PrimaryExpression	39.0f		7170905	0					
ANR	7171413	Identifier	IQ		7170905	1					
ANR	7171414	CompoundStatement		139:42:2687:2687	7170905	1					
ANR	7171415	ExpressionStatement	rd = INFINITY	147:28:2947:2960	7170905	0	True				
ANR	7171416	AssignmentExpression	rd = INFINITY		7170905	0		=			
ANR	7171417	Identifier	rd		7170905	0					
ANR	7171418	Identifier	INFINITY		7170905	1					
ANR	7171419	BreakStatement	break ;	149:28:2991:2996	7170905	1	True				
ANR	7171420	IfStatement	if ( t >= CLIPPED_ESCAPE )		7170905	1					
ANR	7171421	Condition	t >= CLIPPED_ESCAPE	153:28:3054:3072	7170905	0	True				
ANR	7171422	RelationalExpression	t >= CLIPPED_ESCAPE		7170905	0		>=			
ANR	7171423	Identifier	t		7170905	0					
ANR	7171424	Identifier	CLIPPED_ESCAPE		7170905	1					
ANR	7171425	CompoundStatement		147:49:2846:2846	7170905	1					
ANR	7171426	ExpressionStatement	di = t - CLIPPED_ESCAPE	155:28:3106:3129	7170905	0	True				
ANR	7171427	AssignmentExpression	di = t - CLIPPED_ESCAPE		7170905	0		=			
ANR	7171428	Identifier	di		7170905	0					
ANR	7171429	AdditiveExpression	t - CLIPPED_ESCAPE		7170905	1		-			
ANR	7171430	Identifier	t		7170905	0					
ANR	7171431	Identifier	CLIPPED_ESCAPE		7170905	1					
ANR	7171432	ExpressionStatement	curbits += 21	157:28:3160:3173	7170905	1	True				
ANR	7171433	AssignmentExpression	curbits += 21		7170905	0		+=			
ANR	7171434	Identifier	curbits		7170905	0					
ANR	7171435	PrimaryExpression	21		7170905	1					
ANR	7171436	ElseStatement	else		7170905	0					
ANR	7171437	CompoundStatement		155:28:3009:3046	7170905	0					
ANR	7171438	IdentifierDeclStatement	"int c = av_clip ( quant ( t , Q ) , 0 , 8191 ) ;"	161:28:3238:3275	7170905	0	True				
ANR	7171439	IdentifierDecl	"c = av_clip ( quant ( t , Q ) , 0 , 8191 )"		7170905	0					
ANR	7171440	IdentifierDeclType	int		7170905	0					
ANR	7171441	Identifier	c		7170905	1					
ANR	7171442	AssignmentExpression	"c = av_clip ( quant ( t , Q ) , 0 , 8191 )"		7170905	2		=			
ANR	7171443	Identifier	c		7170905	0					
ANR	7171444	CallExpression	"av_clip ( quant ( t , Q ) , 0 , 8191 )"		7170905	1					
ANR	7171445	Callee	av_clip		7170905	0					
ANR	7171446	Identifier	av_clip		7170905	0					
ANR	7171447	ArgumentList	"quant ( t , Q )"		7170905	1					
ANR	7171448	Argument	"quant ( t , Q )"		7170905	0					
ANR	7171449	CallExpression	"quant ( t , Q )"		7170905	0					
ANR	7171450	Callee	quant		7170905	0					
ANR	7171451	Identifier	quant		7170905	0					
ANR	7171452	ArgumentList	t		7170905	1					
ANR	7171453	Argument	t		7170905	0					
ANR	7171454	Identifier	t		7170905	0					
ANR	7171455	Argument	Q		7170905	1					
ANR	7171456	Identifier	Q		7170905	0					
ANR	7171457	Argument	0		7170905	1					
ANR	7171458	PrimaryExpression	0		7170905	0					
ANR	7171459	Argument	8191		7170905	2					
ANR	7171460	PrimaryExpression	8191		7170905	0					
ANR	7171461	ExpressionStatement	di = t - c * cbrtf ( c ) * IQ	163:28:3306:3328	7170905	1	True				
ANR	7171462	AssignmentExpression	di = t - c * cbrtf ( c ) * IQ		7170905	0		=			
ANR	7171463	Identifier	di		7170905	0					
ANR	7171464	AdditiveExpression	t - c * cbrtf ( c ) * IQ		7170905	1		-			
ANR	7171465	Identifier	t		7170905	0					
ANR	7171466	MultiplicativeExpression	c * cbrtf ( c ) * IQ		7170905	1		*			
ANR	7171467	Identifier	c		7170905	0					
ANR	7171468	MultiplicativeExpression	cbrtf ( c ) * IQ		7170905	1		*			
ANR	7171469	CallExpression	cbrtf ( c )		7170905	0					
ANR	7171470	Callee	cbrtf		7170905	0					
ANR	7171471	Identifier	cbrtf		7170905	0					
ANR	7171472	ArgumentList	c		7170905	1					
ANR	7171473	Argument	c		7170905	0					
ANR	7171474	Identifier	c		7170905	0					
ANR	7171475	Identifier	IQ		7170905	1					
ANR	7171476	ExpressionStatement	curbits += av_log2 ( c ) * 2 - 4 + 1	165:28:3359:3390	7170905	2	True				
ANR	7171477	AssignmentExpression	curbits += av_log2 ( c ) * 2 - 4 + 1		7170905	0		+=			
ANR	7171478	Identifier	curbits		7170905	0					
ANR	7171479	AdditiveExpression	av_log2 ( c ) * 2 - 4 + 1		7170905	1		-			
ANR	7171480	MultiplicativeExpression	av_log2 ( c ) * 2		7170905	0		*			
ANR	7171481	CallExpression	av_log2 ( c )		7170905	0					
ANR	7171482	Callee	av_log2		7170905	0					
ANR	7171483	Identifier	av_log2		7170905	0					
ANR	7171484	ArgumentList	c		7170905	1					
ANR	7171485	Argument	c		7170905	0					
ANR	7171486	Identifier	c		7170905	0					
ANR	7171487	PrimaryExpression	2		7170905	1					
ANR	7171488	AdditiveExpression	4 + 1		7170905	1		+			
ANR	7171489	PrimaryExpression	4		7170905	0					
ANR	7171490	PrimaryExpression	1		7170905	1					
ANR	7171491	ElseStatement	else		7170905	0					
ANR	7171492	CompoundStatement		163:27:3218:3218	7170905	0					
ANR	7171493	ExpressionStatement	di = t - vec [ k ] * IQ	171:24:3474:3492	7170905	0	True				
ANR	7171494	AssignmentExpression	di = t - vec [ k ] * IQ		7170905	0		=			
ANR	7171495	Identifier	di		7170905	0					
ANR	7171496	AdditiveExpression	t - vec [ k ] * IQ		7170905	1		-			
ANR	7171497	Identifier	t		7170905	0					
ANR	7171498	MultiplicativeExpression	vec [ k ] * IQ		7170905	1		*			
ANR	7171499	ArrayIndexing	vec [ k ]		7170905	0					
ANR	7171500	Identifier	vec		7170905	0					
ANR	7171501	Identifier	k		7170905	1					
ANR	7171502	Identifier	IQ		7170905	1					
ANR	7171503	IfStatement	if ( vec [ k ] != 0.0f )		7170905	3					
ANR	7171504	Condition	vec [ k ] != 0.0f	175:24:3542:3555	7170905	0	True				
ANR	7171505	EqualityExpression	vec [ k ] != 0.0f		7170905	0		!=			
ANR	7171506	ArrayIndexing	vec [ k ]		7170905	0					
ANR	7171507	Identifier	vec		7170905	0					
ANR	7171508	Identifier	k		7170905	1					
ANR	7171509	PrimaryExpression	0.0f		7170905	1					
ANR	7171510	ExpressionStatement	curbits ++	177:24:3583:3592	7170905	1	True				
ANR	7171511	PostIncDecOperationExpression	curbits ++		7170905	0					
ANR	7171512	Identifier	curbits		7170905	0					
ANR	7171513	IncDec	++		7170905	1					
ANR	7171514	ExpressionStatement	rd += di * di	179:20:3615:3626	7170905	4	True				
ANR	7171515	AssignmentExpression	rd += di * di		7170905	0		+=			
ANR	7171516	Identifier	rd		7170905	0					
ANR	7171517	MultiplicativeExpression	di * di		7170905	1		*			
ANR	7171518	Identifier	di		7170905	0					
ANR	7171519	Identifier	di		7170905	1					
ANR	7171520	ElseStatement	else		7170905	0					
ANR	7171521	CompoundStatement		177:19:3438:3438	7170905	0					
ANR	7171522	ForStatement	for ( k = 0 ; k < dim ; k ++ )		7170905	0					
ANR	7171523	ForInit	k = 0 ;	185:21:3691:3696	7170905	0	True				
ANR	7171524	AssignmentExpression	k = 0		7170905	0		=			
ANR	7171525	Identifier	k		7170905	0					
ANR	7171526	PrimaryExpression	0		7170905	1					
ANR	7171527	Condition	k < dim	185:28:3698:3704	7170905	1	True				
ANR	7171528	RelationalExpression	k < dim		7170905	0		<			
ANR	7171529	Identifier	k		7170905	0					
ANR	7171530	Identifier	dim		7170905	1					
ANR	7171531	PostIncDecOperationExpression	k ++	185:37:3707:3709	7170905	2	True				
ANR	7171532	Identifier	k		7170905	0					
ANR	7171533	IncDec	++		7170905	1					
ANR	7171534	CompoundStatement		181:20:3506:3536	7170905	3					
ANR	7171535	IdentifierDeclStatement	float di = in [ i + k ] - vec [ k ] * IQ ;	187:20:3735:3765	7170905	0	True				
ANR	7171536	IdentifierDecl	di = in [ i + k ] - vec [ k ] * IQ		7170905	0					
ANR	7171537	IdentifierDeclType	float		7170905	0					
ANR	7171538	Identifier	di		7170905	1					
ANR	7171539	AssignmentExpression	di = in [ i + k ] - vec [ k ] * IQ		7170905	2		=			
ANR	7171540	Identifier	di		7170905	0					
ANR	7171541	AdditiveExpression	in [ i + k ] - vec [ k ] * IQ		7170905	1		-			
ANR	7171542	ArrayIndexing	in [ i + k ]		7170905	0					
ANR	7171543	Identifier	in		7170905	0					
ANR	7171544	AdditiveExpression	i + k		7170905	1		+			
ANR	7171545	Identifier	i		7170905	0					
ANR	7171546	Identifier	k		7170905	1					
ANR	7171547	MultiplicativeExpression	vec [ k ] * IQ		7170905	1		*			
ANR	7171548	ArrayIndexing	vec [ k ]		7170905	0					
ANR	7171549	Identifier	vec		7170905	0					
ANR	7171550	Identifier	k		7170905	1					
ANR	7171551	Identifier	IQ		7170905	1					
ANR	7171552	ExpressionStatement	rd += di * di	189:20:3788:3799	7170905	1	True				
ANR	7171553	AssignmentExpression	rd += di * di		7170905	0		+=			
ANR	7171554	Identifier	rd		7170905	0					
ANR	7171555	MultiplicativeExpression	di * di		7170905	1		*			
ANR	7171556	Identifier	di		7170905	0					
ANR	7171557	Identifier	di		7170905	1					
ANR	7171558	ExpressionStatement	rd = rd * lambda + curbits	195:12:3848:3874	7170905	10	True				
ANR	7171559	AssignmentExpression	rd = rd * lambda + curbits		7170905	0		=			
ANR	7171560	Identifier	rd		7170905	0					
ANR	7171561	AdditiveExpression	rd * lambda + curbits		7170905	1		+			
ANR	7171562	MultiplicativeExpression	rd * lambda		7170905	0		*			
ANR	7171563	Identifier	rd		7170905	0					
ANR	7171564	Identifier	lambda		7170905	1					
ANR	7171565	Identifier	curbits		7170905	1					
ANR	7171566	IfStatement	if ( rd < mincost )		7170905	11					
ANR	7171567	Condition	rd < mincost	197:16:3893:3904	7170905	0	True				
ANR	7171568	RelationalExpression	rd < mincost		7170905	0		<			
ANR	7171569	Identifier	rd		7170905	0					
ANR	7171570	Identifier	mincost		7170905	1					
ANR	7171571	CompoundStatement		191:30:3678:3678	7170905	1					
ANR	7171572	ExpressionStatement	mincost = rd	199:16:3926:3938	7170905	0	True				
ANR	7171573	AssignmentExpression	mincost = rd		7170905	0		=			
ANR	7171574	Identifier	mincost		7170905	0					
ANR	7171575	Identifier	rd		7170905	1					
ANR	7171576	ExpressionStatement	minidx = curidx	201:16:3957:3973	7170905	1	True				
ANR	7171577	AssignmentExpression	minidx = curidx		7170905	0		=			
ANR	7171578	Identifier	minidx		7170905	0					
ANR	7171579	Identifier	curidx		7170905	1					
ANR	7171580	ExpressionStatement	minbits = curbits	203:16:3992:4009	7170905	2	True				
ANR	7171581	AssignmentExpression	minbits = curbits		7170905	0		=			
ANR	7171582	Identifier	minbits		7170905	0					
ANR	7171583	Identifier	curbits		7170905	1					
ANR	7171584	ExpressionStatement	"put_bits ( pb , ff_aac_spectral_bits [ cb - 1 ] [ minidx ] , ff_aac_spectral_codes [ cb - 1 ] [ minidx ] )"	209:8:4046:4131	7170905	11	True				
ANR	7171585	CallExpression	"put_bits ( pb , ff_aac_spectral_bits [ cb - 1 ] [ minidx ] , ff_aac_spectral_codes [ cb - 1 ] [ minidx ] )"		7170905	0					
ANR	7171586	Callee	put_bits		7170905	0					
ANR	7171587	Identifier	put_bits		7170905	0					
ANR	7171588	ArgumentList	pb		7170905	1					
ANR	7171589	Argument	pb		7170905	0					
ANR	7171590	Identifier	pb		7170905	0					
ANR	7171591	Argument	ff_aac_spectral_bits [ cb - 1 ] [ minidx ]		7170905	1					
ANR	7171592	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ] [ minidx ]		7170905	0					
ANR	7171593	ArrayIndexing	ff_aac_spectral_bits [ cb - 1 ]		7170905	0					
ANR	7171594	Identifier	ff_aac_spectral_bits		7170905	0					
ANR	7171595	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171596	Identifier	cb		7170905	0					
ANR	7171597	PrimaryExpression	1		7170905	1					
ANR	7171598	Identifier	minidx		7170905	1					
ANR	7171599	Argument	ff_aac_spectral_codes [ cb - 1 ] [ minidx ]		7170905	2					
ANR	7171600	ArrayIndexing	ff_aac_spectral_codes [ cb - 1 ] [ minidx ]		7170905	0					
ANR	7171601	ArrayIndexing	ff_aac_spectral_codes [ cb - 1 ]		7170905	0					
ANR	7171602	Identifier	ff_aac_spectral_codes		7170905	0					
ANR	7171603	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171604	Identifier	cb		7170905	0					
ANR	7171605	PrimaryExpression	1		7170905	1					
ANR	7171606	Identifier	minidx		7170905	1					
ANR	7171607	IfStatement	if ( IS_CODEBOOK_UNSIGNED ( cb ) )		7170905	12					
ANR	7171608	Condition	IS_CODEBOOK_UNSIGNED ( cb )	211:12:4146:4169	7170905	0	True				
ANR	7171609	CallExpression	IS_CODEBOOK_UNSIGNED ( cb )		7170905	0					
ANR	7171610	Callee	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171611	Identifier	IS_CODEBOOK_UNSIGNED		7170905	0					
ANR	7171612	ArgumentList	cb		7170905	1					
ANR	7171613	Argument	cb		7170905	0					
ANR	7171614	Identifier	cb		7170905	0					
ANR	7171615	ForStatement	for ( j = 0 ; j < dim ; j ++ )		7170905	1					
ANR	7171616	ForInit	j = 0 ;	213:17:4190:4195	7170905	0	True				
ANR	7171617	AssignmentExpression	j = 0		7170905	0		=			
ANR	7171618	Identifier	j		7170905	0					
ANR	7171619	PrimaryExpression	0		7170905	1					
ANR	7171620	Condition	j < dim	213:24:4197:4203	7170905	1	True				
ANR	7171621	RelationalExpression	j < dim		7170905	0		<			
ANR	7171622	Identifier	j		7170905	0					
ANR	7171623	Identifier	dim		7170905	1					
ANR	7171624	PostIncDecOperationExpression	j ++	213:33:4206:4208	7170905	2	True				
ANR	7171625	Identifier	j		7170905	0					
ANR	7171626	IncDec	++		7170905	1					
ANR	7171627	IfStatement	if ( ff_aac_codebook_vectors [ cb - 1 ] [ minidx * dim + j ] != 0.0f )		7170905	3					
ANR	7171628	Condition	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * dim + j ] != 0.0f	215:20:4232:4282	7170905	0	True				
ANR	7171629	EqualityExpression	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * dim + j ] != 0.0f		7170905	0		!=			
ANR	7171630	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * dim + j ]		7170905	0					
ANR	7171631	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ]		7170905	0					
ANR	7171632	Identifier	ff_aac_codebook_vectors		7170905	0					
ANR	7171633	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171634	Identifier	cb		7170905	0					
ANR	7171635	PrimaryExpression	1		7170905	1					
ANR	7171636	AdditiveExpression	minidx * dim + j		7170905	1		+			
ANR	7171637	MultiplicativeExpression	minidx * dim		7170905	0		*			
ANR	7171638	Identifier	minidx		7170905	0					
ANR	7171639	Identifier	dim		7170905	1					
ANR	7171640	Identifier	j		7170905	1					
ANR	7171641	PrimaryExpression	0.0f		7170905	1					
ANR	7171642	ExpressionStatement	"put_bits ( pb , 1 , in [ i + j ] < 0.0f )"	217:20:4306:4337	7170905	1	True				
ANR	7171643	CallExpression	"put_bits ( pb , 1 , in [ i + j ] < 0.0f )"		7170905	0					
ANR	7171644	Callee	put_bits		7170905	0					
ANR	7171645	Identifier	put_bits		7170905	0					
ANR	7171646	ArgumentList	pb		7170905	1					
ANR	7171647	Argument	pb		7170905	0					
ANR	7171648	Identifier	pb		7170905	0					
ANR	7171649	Argument	1		7170905	1					
ANR	7171650	PrimaryExpression	1		7170905	0					
ANR	7171651	Argument	in [ i + j ] < 0.0f		7170905	2					
ANR	7171652	RelationalExpression	in [ i + j ] < 0.0f		7170905	0		<			
ANR	7171653	ArrayIndexing	in [ i + j ]		7170905	0					
ANR	7171654	Identifier	in		7170905	0					
ANR	7171655	AdditiveExpression	i + j		7170905	1		+			
ANR	7171656	Identifier	i		7170905	0					
ANR	7171657	Identifier	j		7170905	1					
ANR	7171658	PrimaryExpression	0.0f		7170905	1					
ANR	7171659	IfStatement	if ( cb == ESC_BT )		7170905	13					
ANR	7171660	Condition	cb == ESC_BT	219:12:4352:4363	7170905	0	True				
ANR	7171661	EqualityExpression	cb == ESC_BT		7170905	0		==			
ANR	7171662	Identifier	cb		7170905	0					
ANR	7171663	Identifier	ESC_BT		7170905	1					
ANR	7171664	CompoundStatement		213:26:4137:4137	7170905	1					
ANR	7171665	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		7170905	0					
ANR	7171666	ForInit	j = 0 ;	221:17:4386:4391	7170905	0	True				
ANR	7171667	AssignmentExpression	j = 0		7170905	0		=			
ANR	7171668	Identifier	j		7170905	0					
ANR	7171669	PrimaryExpression	0		7170905	1					
ANR	7171670	Condition	j < 2	221:24:4393:4397	7170905	1	True				
ANR	7171671	RelationalExpression	j < 2		7170905	0		<			
ANR	7171672	Identifier	j		7170905	0					
ANR	7171673	PrimaryExpression	2		7170905	1					
ANR	7171674	PostIncDecOperationExpression	j ++	221:31:4400:4402	7170905	2	True				
ANR	7171675	Identifier	j		7170905	0					
ANR	7171676	IncDec	++		7170905	1					
ANR	7171677	CompoundStatement		215:36:4176:4176	7170905	3					
ANR	7171678	IfStatement	if ( ff_aac_codebook_vectors [ cb - 1 ] [ minidx * 2 + j ] == 64.0f )		7170905	0					
ANR	7171679	Condition	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * 2 + j ] == 64.0f	223:20:4428:4477	7170905	0	True				
ANR	7171680	EqualityExpression	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * 2 + j ] == 64.0f		7170905	0		==			
ANR	7171681	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ] [ minidx * 2 + j ]		7170905	0					
ANR	7171682	ArrayIndexing	ff_aac_codebook_vectors [ cb - 1 ]		7170905	0					
ANR	7171683	Identifier	ff_aac_codebook_vectors		7170905	0					
ANR	7171684	AdditiveExpression	cb - 1		7170905	1		-			
ANR	7171685	Identifier	cb		7170905	0					
ANR	7171686	PrimaryExpression	1		7170905	1					
ANR	7171687	AdditiveExpression	minidx * 2 + j		7170905	1		+			
ANR	7171688	MultiplicativeExpression	minidx * 2		7170905	0		*			
ANR	7171689	Identifier	minidx		7170905	0					
ANR	7171690	PrimaryExpression	2		7170905	1					
ANR	7171691	Identifier	j		7170905	1					
ANR	7171692	PrimaryExpression	64.0f		7170905	1					
ANR	7171693	CompoundStatement		221:20:4350:4373	7170905	1					
ANR	7171694	IdentifierDeclStatement	"int coef = av_clip ( quant ( fabsf ( in [ i + j ] ) , Q ) , 0 , 8191 ) ;"	225:20:4503:4556	7170905	0	True				
ANR	7171695	IdentifierDecl	"coef = av_clip ( quant ( fabsf ( in [ i + j ] ) , Q ) , 0 , 8191 )"		7170905	0					
ANR	7171696	IdentifierDeclType	int		7170905	0					
ANR	7171697	Identifier	coef		7170905	1					
ANR	7171698	AssignmentExpression	"coef = av_clip ( quant ( fabsf ( in [ i + j ] ) , Q ) , 0 , 8191 )"		7170905	2		=			
ANR	7171699	Identifier	coef		7170905	0					
ANR	7171700	CallExpression	"av_clip ( quant ( fabsf ( in [ i + j ] ) , Q ) , 0 , 8191 )"		7170905	1					
ANR	7171701	Callee	av_clip		7170905	0					
ANR	7171702	Identifier	av_clip		7170905	0					
ANR	7171703	ArgumentList	"quant ( fabsf ( in [ i + j ] ) , Q )"		7170905	1					
ANR	7171704	Argument	"quant ( fabsf ( in [ i + j ] ) , Q )"		7170905	0					
ANR	7171705	CallExpression	"quant ( fabsf ( in [ i + j ] ) , Q )"		7170905	0					
ANR	7171706	Callee	quant		7170905	0					
ANR	7171707	Identifier	quant		7170905	0					
ANR	7171708	ArgumentList	fabsf ( in [ i + j ] )		7170905	1					
ANR	7171709	Argument	fabsf ( in [ i + j ] )		7170905	0					
ANR	7171710	CallExpression	fabsf ( in [ i + j ] )		7170905	0					
ANR	7171711	Callee	fabsf		7170905	0					
ANR	7171712	Identifier	fabsf		7170905	0					
ANR	7171713	ArgumentList	in [ i + j ]		7170905	1					
ANR	7171714	Argument	in [ i + j ]		7170905	0					
ANR	7171715	ArrayIndexing	in [ i + j ]		7170905	0					
ANR	7171716	Identifier	in		7170905	0					
ANR	7171717	AdditiveExpression	i + j		7170905	1		+			
ANR	7171718	Identifier	i		7170905	0					
ANR	7171719	Identifier	j		7170905	1					
ANR	7171720	Argument	Q		7170905	1					
ANR	7171721	Identifier	Q		7170905	0					
ANR	7171722	Argument	0		7170905	1					
ANR	7171723	PrimaryExpression	0		7170905	0					
ANR	7171724	Argument	8191		7170905	2					
ANR	7171725	PrimaryExpression	8191		7170905	0					
ANR	7171726	IdentifierDeclStatement	int len = av_log2 ( coef ) ;	227:20:4579:4602	7170905	1	True				
ANR	7171727	IdentifierDecl	len = av_log2 ( coef )		7170905	0					
ANR	7171728	IdentifierDeclType	int		7170905	0					
ANR	7171729	Identifier	len		7170905	1					
ANR	7171730	AssignmentExpression	len = av_log2 ( coef )		7170905	2		=			
ANR	7171731	Identifier	len		7170905	0					
ANR	7171732	CallExpression	av_log2 ( coef )		7170905	1					
ANR	7171733	Callee	av_log2		7170905	0					
ANR	7171734	Identifier	av_log2		7170905	0					
ANR	7171735	ArgumentList	coef		7170905	1					
ANR	7171736	Argument	coef		7170905	0					
ANR	7171737	Identifier	coef		7170905	0					
ANR	7171738	ExpressionStatement	"put_bits ( pb , len - 4 + 1 , ( 1 << ( len - 4 + 1 ) ) - 2 )"	231:20:4627:4678	7170905	2	True				
ANR	7171739	CallExpression	"put_bits ( pb , len - 4 + 1 , ( 1 << ( len - 4 + 1 ) ) - 2 )"		7170905	0					
ANR	7171740	Callee	put_bits		7170905	0					
ANR	7171741	Identifier	put_bits		7170905	0					
ANR	7171742	ArgumentList	pb		7170905	1					
ANR	7171743	Argument	pb		7170905	0					
ANR	7171744	Identifier	pb		7170905	0					
ANR	7171745	Argument	len - 4 + 1		7170905	1					
ANR	7171746	AdditiveExpression	len - 4 + 1		7170905	0		-			
ANR	7171747	Identifier	len		7170905	0					
ANR	7171748	AdditiveExpression	4 + 1		7170905	1		+			
ANR	7171749	PrimaryExpression	4		7170905	0					
ANR	7171750	PrimaryExpression	1		7170905	1					
ANR	7171751	Argument	( 1 << ( len - 4 + 1 ) ) - 2		7170905	2					
ANR	7171752	AdditiveExpression	( 1 << ( len - 4 + 1 ) ) - 2		7170905	0		-			
ANR	7171753	ShiftExpression	1 << ( len - 4 + 1 )		7170905	0		<<			
ANR	7171754	PrimaryExpression	1		7170905	0					
ANR	7171755	AdditiveExpression	len - 4 + 1		7170905	1		-			
ANR	7171756	Identifier	len		7170905	0					
ANR	7171757	AdditiveExpression	4 + 1		7170905	1		+			
ANR	7171758	PrimaryExpression	4		7170905	0					
ANR	7171759	PrimaryExpression	1		7170905	1					
ANR	7171760	PrimaryExpression	2		7170905	1					
ANR	7171761	ExpressionStatement	"put_bits ( pb , len , coef & ( ( 1 << len ) - 1 ) )"	233:20:4701:4743	7170905	3	True				
ANR	7171762	CallExpression	"put_bits ( pb , len , coef & ( ( 1 << len ) - 1 ) )"		7170905	0					
ANR	7171763	Callee	put_bits		7170905	0					
ANR	7171764	Identifier	put_bits		7170905	0					
ANR	7171765	ArgumentList	pb		7170905	1					
ANR	7171766	Argument	pb		7170905	0					
ANR	7171767	Identifier	pb		7170905	0					
ANR	7171768	Argument	len		7170905	1					
ANR	7171769	Identifier	len		7170905	0					
ANR	7171770	Argument	coef & ( ( 1 << len ) - 1 )		7170905	2					
ANR	7171771	BitAndExpression	coef & ( ( 1 << len ) - 1 )		7170905	0		&			
ANR	7171772	Identifier	coef		7170905	0					
ANR	7171773	AdditiveExpression	( 1 << len ) - 1		7170905	1		-			
ANR	7171774	ShiftExpression	1 << len		7170905	0		<<			
ANR	7171775	PrimaryExpression	1		7170905	0					
ANR	7171776	Identifier	len		7170905	1					
ANR	7171777	PrimaryExpression	1		7170905	1					
ANR	7171778	ReturnType	static void		7170905	1					
ANR	7171779	Identifier	quantize_and_encode_band		7170905	2					
ANR	7171780	ParameterList	"struct AACEncContext * s , PutBitContext * pb , const float * in , int size , int scale_idx , int cb , const float lambda"		7170905	3					
ANR	7171781	Parameter	struct AACEncContext * s	1:37:37:59	7170905	0	True				
ANR	7171782	ParameterType	struct AACEncContext *		7170905	0					
ANR	7171783	Identifier	s		7170905	1					
ANR	7171784	Parameter	PutBitContext * pb	1:62:62:78	7170905	1	True				
ANR	7171785	ParameterType	PutBitContext *		7170905	0					
ANR	7171786	Identifier	pb		7170905	1					
ANR	7171787	Parameter	const float * in	3:37:119:133	7170905	2	True				
ANR	7171788	ParameterType	const float *		7170905	0					
ANR	7171789	Identifier	in		7170905	1					
ANR	7171790	Parameter	int size	3:54:136:143	7170905	3	True				
ANR	7171791	ParameterType	int		7170905	0					
ANR	7171792	Identifier	size		7170905	1					
ANR	7171793	Parameter	int scale_idx	3:64:146:158	7170905	4	True				
ANR	7171794	ParameterType	int		7170905	0					
ANR	7171795	Identifier	scale_idx		7170905	1					
ANR	7171796	Parameter	int cb	5:37:199:204	7170905	5	True				
ANR	7171797	ParameterType	int		7170905	0					
ANR	7171798	Identifier	cb		7170905	1					
ANR	7171799	Parameter	const float lambda	5:45:207:224	7170905	6	True				
ANR	7171800	ParameterType	const float		7170905	0					
ANR	7171801	Identifier	lambda		7170905	1					
ANR	7171802	CFGEntryNode	ENTRY		7170905		True				
ANR	7171803	CFGExitNode	EXIT		7170905		True				
ANR	7171804	Symbol	* SCALE_ONE_POS		7170905						
ANR	7171805	Symbol	scaled		7170905						
ANR	7171806	Symbol	cbrtf		7170905						
ANR	7171807	Symbol	di		7170905						
ANR	7171808	Symbol	* cb		7170905						
ANR	7171809	Symbol	CLIPPED_ESCAPE		7170905						
ANR	7171810	Symbol	dim		7170905						
ANR	7171811	Symbol	* SCALE_DIV_512		7170905						
ANR	7171812	Symbol	* * ff_aac_spectral_bits		7170905						
ANR	7171813	Symbol	ff_aac_codebook_vectors		7170905						
ANR	7171814	Symbol	lambda		7170905						
ANR	7171815	Symbol	ESC_BT		7170905						
ANR	7171816	Symbol	len		7170905						
ANR	7171817	Symbol	vec		7170905						
ANR	7171818	Symbol	* scale_idx		7170905						
ANR	7171819	Symbol	av_clip		7170905						
ANR	7171820	Symbol	* ff_aac_spectral_codes		7170905						
ANR	7171821	Symbol	* * k		7170905						
ANR	7171822	Symbol	* aac_cb_maxval		7170905						
ANR	7171823	Symbol	coef		7170905						
ANR	7171824	Symbol	in		7170905						
ANR	7171825	Symbol	IQ		7170905						
ANR	7171826	Symbol	minbits		7170905						
ANR	7171827	Symbol	s -> qcoefs		7170905						
ANR	7171828	Symbol	ff_aac_pow2sf_tab		7170905						
ANR	7171829	Symbol	quant		7170905						
ANR	7171830	Symbol	FIRST_PAIR_BT		7170905						
ANR	7171831	Symbol	maxval		7170905						
ANR	7171832	Symbol	rd		7170905						
ANR	7171833	Symbol	size		7170905						
ANR	7171834	Symbol	* ff_aac_spectral_bits		7170905						
ANR	7171835	Symbol	* offs		7170905						
ANR	7171836	Symbol	* * quants		7170905						
ANR	7171837	Symbol	* ff_aac_codebook_vectors		7170905						
ANR	7171838	Symbol	av_log2		7170905						
ANR	7171839	Symbol	IS_CODEBOOK_UNSIGNED		7170905						
ANR	7171840	Symbol	* * ff_aac_codebook_vectors		7170905						
ANR	7171841	Symbol	* aac_cb_range		7170905						
ANR	7171842	Symbol	SCALE_DIV_512		7170905						
ANR	7171843	Symbol	* in		7170905						
ANR	7171844	Symbol	range		7170905						
ANR	7171845	Symbol	* * cb		7170905						
ANR	7171846	Symbol	* ff_aac_pow2sf_tab		7170905						
ANR	7171847	Symbol	* dim		7170905						
ANR	7171848	Symbol	sqrtf		7170905						
ANR	7171849	Symbol	offs		7170905						
ANR	7171850	Symbol	minidx		7170905						
ANR	7171851	Symbol	fabsf		7170905						
ANR	7171852	Symbol	INFINITY		7170905						
ANR	7171853	Symbol	Q		7170905						
ANR	7171854	Symbol	aac_cb_range		7170905						
ANR	7171855	Symbol	same		7170905						
ANR	7171856	Symbol	* minidx		7170905						
ANR	7171857	Symbol	scale_idx		7170905						
ANR	7171858	Symbol	SCALE_ONE_POS		7170905						
ANR	7171859	Symbol	cb		7170905						
ANR	7171860	Symbol	quants		7170905						
ANR	7171861	Symbol	curbits		7170905						
ANR	7171862	Symbol	c		7170905						
ANR	7171863	Symbol	curidx		7170905						
ANR	7171864	Symbol	i		7170905						
ANR	7171865	Symbol	j		7170905						
ANR	7171866	Symbol	k		7170905						
ANR	7171867	Symbol	* quants		7170905						
ANR	7171868	Symbol	mincost		7170905						
ANR	7171869	Symbol	aac_cb_maxval		7170905						
ANR	7171870	Symbol	pb		7170905						
ANR	7171871	Symbol	s		7170905						
ANR	7171872	Symbol	Q34		7170905						
ANR	7171873	Symbol	s -> scoefs		7170905						
ANR	7171874	Symbol	* i		7170905						
ANR	7171875	Symbol	* j		7170905						
ANR	7171876	Symbol	t		7170905						
ANR	7171877	Symbol	* k		7170905						
ANR	7171878	Symbol	ff_aac_spectral_codes		7170905						
ANR	7171879	Symbol	* * ff_aac_spectral_codes		7170905						
ANR	7171880	Symbol	* s		7170905						
ANR	7171881	Symbol	* curidx		7170905						
ANR	7171882	Symbol	* vec		7170905						
ANR	7171883	Symbol	ff_aac_spectral_bits		7170905						
