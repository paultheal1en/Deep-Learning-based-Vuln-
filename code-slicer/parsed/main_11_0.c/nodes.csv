command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5337415	File	/home/p4ultr4n/workplace/ReVeal/raw_code/main_11_0.c								
ANR	5337416	Function	main	1:0:0:1770							
ANR	5337417	FunctionDef	"main (int argc , char * argv [ ])"		5337416	0					
ANR	5337418	CompoundStatement		1:31:31:1770	5337416	0					
ANR	5337419	IdentifierDeclStatement	"int i , j ;"	3:4:38:46	5337416	0	True				
ANR	5337420	IdentifierDecl	i		5337416	0					
ANR	5337421	IdentifierDeclType	int		5337416	0					
ANR	5337422	Identifier	i		5337416	1					
ANR	5337423	IdentifierDecl	j		5337416	1					
ANR	5337424	IdentifierDeclType	int		5337416	0					
ANR	5337425	Identifier	j		5337416	1					
ANR	5337426	IdentifierDeclStatement	uint64_t sse = 0 ;	5:4:53:67	5337416	1	True				
ANR	5337427	IdentifierDecl	sse = 0		5337416	0					
ANR	5337428	IdentifierDeclType	uint64_t		5337416	0					
ANR	5337429	Identifier	sse		5337416	1					
ANR	5337430	AssignmentExpression	sse = 0		5337416	2		=			
ANR	5337431	Identifier	sse		5337416	0					
ANR	5337432	PrimaryExpression	0		5337416	1					
ANR	5337433	IdentifierDeclStatement	uint64_t dev ;	7:4:74:86	5337416	2	True				
ANR	5337434	IdentifierDecl	dev		5337416	0					
ANR	5337435	IdentifierDeclType	uint64_t		5337416	0					
ANR	5337436	Identifier	dev		5337416	1					
ANR	5337437	IdentifierDeclStatement	FILE * f [ 2 ] ;	9:4:93:103	5337416	3	True				
ANR	5337438	IdentifierDecl	* f [ 2 ]		5337416	0					
ANR	5337439	IdentifierDeclType	FILE * [ 2 ]		5337416	0					
ANR	5337440	Identifier	f		5337416	1					
ANR	5337441	PrimaryExpression	2		5337416	2					
ANR	5337442	Statement	uint8_t	11:4:110:116	5337416	4	True				
ANR	5337443	ExpressionStatement	buf [ 2 ] [ SIZE ]	11:12:118:130	5337416	5	True				
ANR	5337444	ArrayIndexing	buf [ 2 ] [ SIZE ]		5337416	0					
ANR	5337445	ArrayIndexing	buf [ 2 ]		5337416	0					
ANR	5337446	Identifier	buf		5337416	0					
ANR	5337447	PrimaryExpression	2		5337416	1					
ANR	5337448	Identifier	SIZE		5337416	1					
ANR	5337449	IdentifierDeclStatement	uint64_t psnr ;	13:4:137:150	5337416	6	True				
ANR	5337450	IdentifierDecl	psnr		5337416	0					
ANR	5337451	IdentifierDeclType	uint64_t		5337416	0					
ANR	5337452	Identifier	psnr		5337416	1					
ANR	5337453	IdentifierDeclStatement	int len = argc < 4 ? 1 : atoi ( argv [ 3 ] ) ;	15:4:157:192	5337416	7	True				
ANR	5337454	IdentifierDecl	len = argc < 4 ? 1 : atoi ( argv [ 3 ] )		5337416	0					
ANR	5337455	IdentifierDeclType	int		5337416	0					
ANR	5337456	Identifier	len		5337416	1					
ANR	5337457	AssignmentExpression	len = argc < 4 ? 1 : atoi ( argv [ 3 ] )		5337416	2		=			
ANR	5337458	Identifier	len		5337416	0					
ANR	5337459	ConditionalExpression	argc < 4 ? 1 : atoi ( argv [ 3 ] )		5337416	1					
ANR	5337460	Condition	argc < 4		5337416	0					
ANR	5337461	RelationalExpression	argc < 4		5337416	0		<			
ANR	5337462	Identifier	argc		5337416	0					
ANR	5337463	PrimaryExpression	4		5337416	1					
ANR	5337464	PrimaryExpression	1		5337416	1					
ANR	5337465	CallExpression	atoi ( argv [ 3 ] )		5337416	2					
ANR	5337466	Callee	atoi		5337416	0					
ANR	5337467	Identifier	atoi		5337416	0					
ANR	5337468	ArgumentList	argv [ 3 ]		5337416	1					
ANR	5337469	Argument	argv [ 3 ]		5337416	0					
ANR	5337470	ArrayIndexing	argv [ 3 ]		5337416	0					
ANR	5337471	Identifier	argv		5337416	0					
ANR	5337472	PrimaryExpression	3		5337416	1					
ANR	5337473	IdentifierDeclStatement	int64_t max = ( 1 << ( 8 * len ) ) - 1 ;	17:4:199:226	5337416	8	True				
ANR	5337474	IdentifierDecl	max = ( 1 << ( 8 * len ) ) - 1		5337416	0					
ANR	5337475	IdentifierDeclType	int64_t		5337416	0					
ANR	5337476	Identifier	max		5337416	1					
ANR	5337477	AssignmentExpression	max = ( 1 << ( 8 * len ) ) - 1		5337416	2		=			
ANR	5337478	Identifier	max		5337416	0					
ANR	5337479	AdditiveExpression	( 1 << ( 8 * len ) ) - 1		5337416	1		-			
ANR	5337480	ShiftExpression	1 << ( 8 * len )		5337416	0		<<			
ANR	5337481	PrimaryExpression	1		5337416	0					
ANR	5337482	MultiplicativeExpression	8 * len		5337416	1		*			
ANR	5337483	PrimaryExpression	8		5337416	0					
ANR	5337484	Identifier	len		5337416	1					
ANR	5337485	PrimaryExpression	1		5337416	1					
ANR	5337486	IdentifierDeclStatement	int shift = argc < 5 ? 0 : atoi ( argv [ 4 ] ) ;	19:4:233:270	5337416	9	True				
ANR	5337487	IdentifierDecl	shift = argc < 5 ? 0 : atoi ( argv [ 4 ] )		5337416	0					
ANR	5337488	IdentifierDeclType	int		5337416	0					
ANR	5337489	Identifier	shift		5337416	1					
ANR	5337490	AssignmentExpression	shift = argc < 5 ? 0 : atoi ( argv [ 4 ] )		5337416	2		=			
ANR	5337491	Identifier	shift		5337416	0					
ANR	5337492	ConditionalExpression	argc < 5 ? 0 : atoi ( argv [ 4 ] )		5337416	1					
ANR	5337493	Condition	argc < 5		5337416	0					
ANR	5337494	RelationalExpression	argc < 5		5337416	0		<			
ANR	5337495	Identifier	argc		5337416	0					
ANR	5337496	PrimaryExpression	5		5337416	1					
ANR	5337497	PrimaryExpression	0		5337416	1					
ANR	5337498	CallExpression	atoi ( argv [ 4 ] )		5337416	2					
ANR	5337499	Callee	atoi		5337416	0					
ANR	5337500	Identifier	atoi		5337416	0					
ANR	5337501	ArgumentList	argv [ 4 ]		5337416	1					
ANR	5337502	Argument	argv [ 4 ]		5337416	0					
ANR	5337503	ArrayIndexing	argv [ 4 ]		5337416	0					
ANR	5337504	Identifier	argv		5337416	0					
ANR	5337505	PrimaryExpression	4		5337416	1					
ANR	5337506	IdentifierDeclStatement	int skip_bytes = argc < 6 ? 0 : atoi ( argv [ 5 ] ) ;	21:4:277:320	5337416	10	True				
ANR	5337507	IdentifierDecl	skip_bytes = argc < 6 ? 0 : atoi ( argv [ 5 ] )		5337416	0					
ANR	5337508	IdentifierDeclType	int		5337416	0					
ANR	5337509	Identifier	skip_bytes		5337416	1					
ANR	5337510	AssignmentExpression	skip_bytes = argc < 6 ? 0 : atoi ( argv [ 5 ] )		5337416	2		=			
ANR	5337511	Identifier	skip_bytes		5337416	0					
ANR	5337512	ConditionalExpression	argc < 6 ? 0 : atoi ( argv [ 5 ] )		5337416	1					
ANR	5337513	Condition	argc < 6		5337416	0					
ANR	5337514	RelationalExpression	argc < 6		5337416	0		<			
ANR	5337515	Identifier	argc		5337416	0					
ANR	5337516	PrimaryExpression	6		5337416	1					
ANR	5337517	PrimaryExpression	0		5337416	1					
ANR	5337518	CallExpression	atoi ( argv [ 5 ] )		5337416	2					
ANR	5337519	Callee	atoi		5337416	0					
ANR	5337520	Identifier	atoi		5337416	0					
ANR	5337521	ArgumentList	argv [ 5 ]		5337416	1					
ANR	5337522	Argument	argv [ 5 ]		5337416	0					
ANR	5337523	ArrayIndexing	argv [ 5 ]		5337416	0					
ANR	5337524	Identifier	argv		5337416	0					
ANR	5337525	PrimaryExpression	5		5337416	1					
ANR	5337526	IfStatement	if ( argc < 3 )		5337416	11					
ANR	5337527	Condition	argc < 3	25:7:332:337	5337416	0	True				
ANR	5337528	RelationalExpression	argc < 3		5337416	0		<			
ANR	5337529	Identifier	argc		5337416	0					
ANR	5337530	PrimaryExpression	3		5337416	1					
ANR	5337531	CompoundStatement		25:14:307:307	5337416	1					
ANR	5337532	ExpressionStatement	"printf ( ""tiny_psnr <file1> <file2> [<elem size> [<shift> [<skip bytes>]]]\\n"" )"	27:8:350:426	5337416	0	True				
ANR	5337533	CallExpression	"printf ( ""tiny_psnr <file1> <file2> [<elem size> [<shift> [<skip bytes>]]]\\n"" )"		5337416	0					
ANR	5337534	Callee	printf		5337416	0					
ANR	5337535	Identifier	printf		5337416	0					
ANR	5337536	ArgumentList	"""tiny_psnr <file1> <file2> [<elem size> [<shift> [<skip bytes>]]]\\n"""		5337416	1					
ANR	5337537	Argument	"""tiny_psnr <file1> <file2> [<elem size> [<shift> [<skip bytes>]]]\\n"""		5337416	0					
ANR	5337538	PrimaryExpression	"""tiny_psnr <file1> <file2> [<elem size> [<shift> [<skip bytes>]]]\\n"""		5337416	0					
ANR	5337539	ExpressionStatement	"printf ( ""For WAV files use the following:\\n"" )"	29:8:437:481	5337416	1	True				
ANR	5337540	CallExpression	"printf ( ""For WAV files use the following:\\n"" )"		5337416	0					
ANR	5337541	Callee	printf		5337416	0					
ANR	5337542	Identifier	printf		5337416	0					
ANR	5337543	ArgumentList	"""For WAV files use the following:\\n"""		5337416	1					
ANR	5337544	Argument	"""For WAV files use the following:\\n"""		5337416	0					
ANR	5337545	PrimaryExpression	"""For WAV files use the following:\\n"""		5337416	0					
ANR	5337546	ExpressionStatement	"printf ( ""./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\\n"" )"	31:8:492:562	5337416	2	True				
ANR	5337547	CallExpression	"printf ( ""./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\\n"" )"		5337416	0					
ANR	5337548	Callee	printf		5337416	0					
ANR	5337549	Identifier	printf		5337416	0					
ANR	5337550	ArgumentList	"""./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\\n"""		5337416	1					
ANR	5337551	Argument	"""./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\\n"""		5337416	0					
ANR	5337552	PrimaryExpression	"""./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\\n"""		5337416	0					
ANR	5337553	ReturnStatement	return - 1 ;	33:8:573:582	5337416	3	True				
ANR	5337554	UnaryOperationExpression	- 1		5337416	0					
ANR	5337555	UnaryOperator	-		5337416	0					
ANR	5337556	PrimaryExpression	1		5337416	1					
ANR	5337557	ExpressionStatement	"f [ 0 ] = fopen ( argv [ 1 ] , ""rb"" )"	39:4:598:624	5337416	12	True				
ANR	5337558	AssignmentExpression	"f [ 0 ] = fopen ( argv [ 1 ] , ""rb"" )"		5337416	0		=			
ANR	5337559	ArrayIndexing	f [ 0 ]		5337416	0					
ANR	5337560	Identifier	f		5337416	0					
ANR	5337561	PrimaryExpression	0		5337416	1					
ANR	5337562	CallExpression	"fopen ( argv [ 1 ] , ""rb"" )"		5337416	1					
ANR	5337563	Callee	fopen		5337416	0					
ANR	5337564	Identifier	fopen		5337416	0					
ANR	5337565	ArgumentList	argv [ 1 ]		5337416	1					
ANR	5337566	Argument	argv [ 1 ]		5337416	0					
ANR	5337567	ArrayIndexing	argv [ 1 ]		5337416	0					
ANR	5337568	Identifier	argv		5337416	0					
ANR	5337569	PrimaryExpression	1		5337416	1					
ANR	5337570	Argument	"""rb"""		5337416	1					
ANR	5337571	PrimaryExpression	"""rb"""		5337416	0					
ANR	5337572	ExpressionStatement	"f [ 1 ] = fopen ( argv [ 2 ] , ""rb"" )"	41:4:631:657	5337416	13	True				
ANR	5337573	AssignmentExpression	"f [ 1 ] = fopen ( argv [ 2 ] , ""rb"" )"		5337416	0		=			
ANR	5337574	ArrayIndexing	f [ 1 ]		5337416	0					
ANR	5337575	Identifier	f		5337416	0					
ANR	5337576	PrimaryExpression	1		5337416	1					
ANR	5337577	CallExpression	"fopen ( argv [ 2 ] , ""rb"" )"		5337416	1					
ANR	5337578	Callee	fopen		5337416	0					
ANR	5337579	Identifier	fopen		5337416	0					
ANR	5337580	ArgumentList	argv [ 2 ]		5337416	1					
ANR	5337581	Argument	argv [ 2 ]		5337416	0					
ANR	5337582	ArrayIndexing	argv [ 2 ]		5337416	0					
ANR	5337583	Identifier	argv		5337416	0					
ANR	5337584	PrimaryExpression	2		5337416	1					
ANR	5337585	Argument	"""rb"""		5337416	1					
ANR	5337586	PrimaryExpression	"""rb"""		5337416	0					
ANR	5337587	IfStatement	if ( ! f [ 0 ] || ! f [ 1 ] )		5337416	14					
ANR	5337588	Condition	! f [ 0 ] || ! f [ 1 ]	43:7:667:680	5337416	0	True				
ANR	5337589	OrExpression	! f [ 0 ] || ! f [ 1 ]		5337416	0		||			
ANR	5337590	UnaryOperationExpression	! f [ 0 ]		5337416	0					
ANR	5337591	UnaryOperator	!		5337416	0					
ANR	5337592	ArrayIndexing	f [ 0 ]		5337416	1					
ANR	5337593	Identifier	f		5337416	0					
ANR	5337594	PrimaryExpression	0		5337416	1					
ANR	5337595	UnaryOperationExpression	! f [ 1 ]		5337416	1					
ANR	5337596	UnaryOperator	!		5337416	0					
ANR	5337597	ArrayIndexing	f [ 1 ]		5337416	1					
ANR	5337598	Identifier	f		5337416	0					
ANR	5337599	PrimaryExpression	1		5337416	1					
ANR	5337600	CompoundStatement		43:22:650:650	5337416	1					
ANR	5337601	ExpressionStatement	"fprintf ( stderr , ""Could not open input files.\\n"" )"	45:8:693:741	5337416	0	True				
ANR	5337602	CallExpression	"fprintf ( stderr , ""Could not open input files.\\n"" )"		5337416	0					
ANR	5337603	Callee	fprintf		5337416	0					
ANR	5337604	Identifier	fprintf		5337416	0					
ANR	5337605	ArgumentList	stderr		5337416	1					
ANR	5337606	Argument	stderr		5337416	0					
ANR	5337607	Identifier	stderr		5337416	0					
ANR	5337608	Argument	"""Could not open input files.\\n"""		5337416	1					
ANR	5337609	PrimaryExpression	"""Could not open input files.\\n"""		5337416	0					
ANR	5337610	ReturnStatement	return - 1 ;	47:8:752:761	5337416	1	True				
ANR	5337611	UnaryOperationExpression	- 1		5337416	0					
ANR	5337612	UnaryOperator	-		5337416	0					
ANR	5337613	PrimaryExpression	1		5337416	1					
ANR	5337614	ExpressionStatement	"fseek ( f [ shift < 0 ] , shift < 0 ? - shift : shift , SEEK_SET )"	51:4:775:830	5337416	15	True				
ANR	5337615	CallExpression	"fseek ( f [ shift < 0 ] , shift < 0 ? - shift : shift , SEEK_SET )"		5337416	0					
ANR	5337616	Callee	fseek		5337416	0					
ANR	5337617	Identifier	fseek		5337416	0					
ANR	5337618	ArgumentList	f [ shift < 0 ]		5337416	1					
ANR	5337619	Argument	f [ shift < 0 ]		5337416	0					
ANR	5337620	ArrayIndexing	f [ shift < 0 ]		5337416	0					
ANR	5337621	Identifier	f		5337416	0					
ANR	5337622	RelationalExpression	shift < 0		5337416	1		<			
ANR	5337623	Identifier	shift		5337416	0					
ANR	5337624	PrimaryExpression	0		5337416	1					
ANR	5337625	Argument	shift < 0 ? - shift : shift		5337416	1					
ANR	5337626	ConditionalExpression	shift < 0 ? - shift : shift		5337416	0					
ANR	5337627	Condition	shift < 0		5337416	0					
ANR	5337628	RelationalExpression	shift < 0		5337416	0		<			
ANR	5337629	Identifier	shift		5337416	0					
ANR	5337630	PrimaryExpression	0		5337416	1					
ANR	5337631	UnaryOperationExpression	- shift		5337416	1					
ANR	5337632	UnaryOperator	-		5337416	0					
ANR	5337633	Identifier	shift		5337416	1					
ANR	5337634	Identifier	shift		5337416	2					
ANR	5337635	Argument	SEEK_SET		5337416	2					
ANR	5337636	Identifier	SEEK_SET		5337416	0					
ANR	5337637	ExpressionStatement	"fseek ( f [ 0 ] , skip_bytes , SEEK_CUR )"	55:4:839:870	5337416	16	True				
ANR	5337638	CallExpression	"fseek ( f [ 0 ] , skip_bytes , SEEK_CUR )"		5337416	0					
ANR	5337639	Callee	fseek		5337416	0					
ANR	5337640	Identifier	fseek		5337416	0					
ANR	5337641	ArgumentList	f [ 0 ]		5337416	1					
ANR	5337642	Argument	f [ 0 ]		5337416	0					
ANR	5337643	ArrayIndexing	f [ 0 ]		5337416	0					
ANR	5337644	Identifier	f		5337416	0					
ANR	5337645	PrimaryExpression	0		5337416	1					
ANR	5337646	Argument	skip_bytes		5337416	1					
ANR	5337647	Identifier	skip_bytes		5337416	0					
ANR	5337648	Argument	SEEK_CUR		5337416	2					
ANR	5337649	Identifier	SEEK_CUR		5337416	0					
ANR	5337650	ExpressionStatement	"fseek ( f [ 1 ] , skip_bytes , SEEK_CUR )"	57:4:877:908	5337416	17	True				
ANR	5337651	CallExpression	"fseek ( f [ 1 ] , skip_bytes , SEEK_CUR )"		5337416	0					
ANR	5337652	Callee	fseek		5337416	0					
ANR	5337653	Identifier	fseek		5337416	0					
ANR	5337654	ArgumentList	f [ 1 ]		5337416	1					
ANR	5337655	Argument	f [ 1 ]		5337416	0					
ANR	5337656	ArrayIndexing	f [ 1 ]		5337416	0					
ANR	5337657	Identifier	f		5337416	0					
ANR	5337658	PrimaryExpression	1		5337416	1					
ANR	5337659	Argument	skip_bytes		5337416	1					
ANR	5337660	Identifier	skip_bytes		5337416	0					
ANR	5337661	Argument	SEEK_CUR		5337416	2					
ANR	5337662	Identifier	SEEK_CUR		5337416	0					
ANR	5337663	ForStatement	for ( i = 0 ; ; )		5337416	18					
ANR	5337664	ForInit	i = 0 ;	61:8:921:924	5337416	0	True				
ANR	5337665	AssignmentExpression	i = 0		5337416	0		=			
ANR	5337666	Identifier	i		5337416	0					
ANR	5337667	PrimaryExpression	0		5337416	1					
ANR	5337668	CompoundStatement		61:14:895:895	5337416	1					
ANR	5337669	IfStatement	"if ( fread ( buf [ 0 ] , SIZE , 1 , f [ 0 ] ) != 1 )"		5337416	0					
ANR	5337670	Condition	"fread ( buf [ 0 ] , SIZE , 1 , f [ 0 ] ) != 1"	63:12:942:974	5337416	0	True				
ANR	5337671	EqualityExpression	"fread ( buf [ 0 ] , SIZE , 1 , f [ 0 ] ) != 1"		5337416	0		!=			
ANR	5337672	CallExpression	"fread ( buf [ 0 ] , SIZE , 1 , f [ 0 ] )"		5337416	0					
ANR	5337673	Callee	fread		5337416	0					
ANR	5337674	Identifier	fread		5337416	0					
ANR	5337675	ArgumentList	buf [ 0 ]		5337416	1					
ANR	5337676	Argument	buf [ 0 ]		5337416	0					
ANR	5337677	ArrayIndexing	buf [ 0 ]		5337416	0					
ANR	5337678	Identifier	buf		5337416	0					
ANR	5337679	PrimaryExpression	0		5337416	1					
ANR	5337680	Argument	SIZE		5337416	1					
ANR	5337681	Identifier	SIZE		5337416	0					
ANR	5337682	Argument	1		5337416	2					
ANR	5337683	PrimaryExpression	1		5337416	0					
ANR	5337684	Argument	f [ 0 ]		5337416	3					
ANR	5337685	ArrayIndexing	f [ 0 ]		5337416	0					
ANR	5337686	Identifier	f		5337416	0					
ANR	5337687	PrimaryExpression	0		5337416	1					
ANR	5337688	PrimaryExpression	1		5337416	1					
ANR	5337689	BreakStatement	break ;	63:47:977:982	5337416	1	True				
ANR	5337690	IfStatement	"if ( fread ( buf [ 1 ] , SIZE , 1 , f [ 1 ] ) != 1 )"		5337416	1					
ANR	5337691	Condition	"fread ( buf [ 1 ] , SIZE , 1 , f [ 1 ] ) != 1"	65:12:997:1029	5337416	0	True				
ANR	5337692	EqualityExpression	"fread ( buf [ 1 ] , SIZE , 1 , f [ 1 ] ) != 1"		5337416	0		!=			
ANR	5337693	CallExpression	"fread ( buf [ 1 ] , SIZE , 1 , f [ 1 ] )"		5337416	0					
ANR	5337694	Callee	fread		5337416	0					
ANR	5337695	Identifier	fread		5337416	0					
ANR	5337696	ArgumentList	buf [ 1 ]		5337416	1					
ANR	5337697	Argument	buf [ 1 ]		5337416	0					
ANR	5337698	ArrayIndexing	buf [ 1 ]		5337416	0					
ANR	5337699	Identifier	buf		5337416	0					
ANR	5337700	PrimaryExpression	1		5337416	1					
ANR	5337701	Argument	SIZE		5337416	1					
ANR	5337702	Identifier	SIZE		5337416	0					
ANR	5337703	Argument	1		5337416	2					
ANR	5337704	PrimaryExpression	1		5337416	0					
ANR	5337705	Argument	f [ 1 ]		5337416	3					
ANR	5337706	ArrayIndexing	f [ 1 ]		5337416	0					
ANR	5337707	Identifier	f		5337416	0					
ANR	5337708	PrimaryExpression	1		5337416	1					
ANR	5337709	PrimaryExpression	1		5337416	1					
ANR	5337710	BreakStatement	break ;	65:47:1032:1037	5337416	1	True				
ANR	5337711	ForStatement	"for ( j = 0 ; j < SIZE ; i ++ , j ++ )"		5337416	2					
ANR	5337712	ForInit	j = 0 ;	69:12:1054:1057	5337416	0	True				
ANR	5337713	AssignmentExpression	j = 0		5337416	0		=			
ANR	5337714	Identifier	j		5337416	0					
ANR	5337715	PrimaryExpression	0		5337416	1					
ANR	5337716	Condition	j < SIZE	69:17:1059:1064	5337416	1	True				
ANR	5337717	RelationalExpression	j < SIZE		5337416	0		<			
ANR	5337718	Identifier	j		5337416	0					
ANR	5337719	Identifier	SIZE		5337416	1					
ANR	5337720	Expression	"i ++ , j ++"	69:25:1067:1073	5337416	2	True				
ANR	5337721	PostIncDecOperationExpression	i ++		5337416	0					
ANR	5337722	Identifier	i		5337416	0					
ANR	5337723	IncDec	++		5337416	1					
ANR	5337724	PostIncDecOperationExpression	j ++		5337416	1					
ANR	5337725	Identifier	j		5337416	0					
ANR	5337726	IncDec	++		5337416	1					
ANR	5337727	CompoundStatement		73:12:1093:1113	5337416	3					
ANR	5337728	IdentifierDeclStatement	int64_t a = buf [ 0 ] [ j ] ;	71:12:1090:1110	5337416	0	True				
ANR	5337729	IdentifierDecl	a = buf [ 0 ] [ j ]		5337416	0					
ANR	5337730	IdentifierDeclType	int64_t		5337416	0					
ANR	5337731	Identifier	a		5337416	1					
ANR	5337732	AssignmentExpression	a = buf [ 0 ] [ j ]		5337416	2		=			
ANR	5337733	Identifier	a		5337416	0					
ANR	5337734	ArrayIndexing	buf [ 0 ] [ j ]		5337416	1					
ANR	5337735	ArrayIndexing	buf [ 0 ]		5337416	0					
ANR	5337736	Identifier	buf		5337416	0					
ANR	5337737	PrimaryExpression	0		5337416	1					
ANR	5337738	Identifier	j		5337416	1					
ANR	5337739	IdentifierDeclStatement	int64_t b = buf [ 1 ] [ j ] ;	73:12:1125:1145	5337416	1	True				
ANR	5337740	IdentifierDecl	b = buf [ 1 ] [ j ]		5337416	0					
ANR	5337741	IdentifierDeclType	int64_t		5337416	0					
ANR	5337742	Identifier	b		5337416	1					
ANR	5337743	AssignmentExpression	b = buf [ 1 ] [ j ]		5337416	2		=			
ANR	5337744	Identifier	b		5337416	0					
ANR	5337745	ArrayIndexing	buf [ 1 ] [ j ]		5337416	1					
ANR	5337746	ArrayIndexing	buf [ 1 ]		5337416	0					
ANR	5337747	Identifier	buf		5337416	0					
ANR	5337748	PrimaryExpression	1		5337416	1					
ANR	5337749	Identifier	j		5337416	1					
ANR	5337750	IfStatement	if ( len == 2 )		5337416	2					
ANR	5337751	Condition	len == 2	75:15:1163:1168	5337416	0	True				
ANR	5337752	EqualityExpression	len == 2		5337416	0		==			
ANR	5337753	Identifier	len		5337416	0					
ANR	5337754	PrimaryExpression	2		5337416	1					
ANR	5337755	CompoundStatement		75:22:1138:1138	5337416	1					
ANR	5337756	ExpressionStatement	a = ( int16_t ) ( a | ( buf [ 0 ] [ ++ j ] << 8 ) )	77:16:1189:1223	5337416	0	True				
ANR	5337757	AssignmentExpression	a = ( int16_t ) ( a | ( buf [ 0 ] [ ++ j ] << 8 ) )		5337416	0		=			
ANR	5337758	Identifier	a		5337416	0					
ANR	5337759	CastExpression	( int16_t ) ( a | ( buf [ 0 ] [ ++ j ] << 8 ) )		5337416	1					
ANR	5337760	CastTarget	int16_t		5337416	0					
ANR	5337761	InclusiveOrExpression	a | ( buf [ 0 ] [ ++ j ] << 8 )		5337416	1		|			
ANR	5337762	Identifier	a		5337416	0					
ANR	5337763	ShiftExpression	buf [ 0 ] [ ++ j ] << 8		5337416	1		<<			
ANR	5337764	ArrayIndexing	buf [ 0 ] [ ++ j ]		5337416	0					
ANR	5337765	ArrayIndexing	buf [ 0 ]		5337416	0					
ANR	5337766	Identifier	buf		5337416	0					
ANR	5337767	PrimaryExpression	0		5337416	1					
ANR	5337768	UnaryExpression	++ j		5337416	1					
ANR	5337769	IncDec	++		5337416	0					
ANR	5337770	Identifier	j		5337416	1					
ANR	5337771	PrimaryExpression	8		5337416	1					
ANR	5337772	ExpressionStatement	b = ( int16_t ) ( b | ( buf [ 1 ] [ j ] << 8 ) )	79:16:1242:1276	5337416	1	True				
ANR	5337773	AssignmentExpression	b = ( int16_t ) ( b | ( buf [ 1 ] [ j ] << 8 ) )		5337416	0		=			
ANR	5337774	Identifier	b		5337416	0					
ANR	5337775	CastExpression	( int16_t ) ( b | ( buf [ 1 ] [ j ] << 8 ) )		5337416	1					
ANR	5337776	CastTarget	int16_t		5337416	0					
ANR	5337777	InclusiveOrExpression	b | ( buf [ 1 ] [ j ] << 8 )		5337416	1		|			
ANR	5337778	Identifier	b		5337416	0					
ANR	5337779	ShiftExpression	buf [ 1 ] [ j ] << 8		5337416	1		<<			
ANR	5337780	ArrayIndexing	buf [ 1 ] [ j ]		5337416	0					
ANR	5337781	ArrayIndexing	buf [ 1 ]		5337416	0					
ANR	5337782	Identifier	buf		5337416	0					
ANR	5337783	PrimaryExpression	1		5337416	1					
ANR	5337784	Identifier	j		5337416	1					
ANR	5337785	PrimaryExpression	8		5337416	1					
ANR	5337786	ExpressionStatement	sse += ( a - b ) * ( a - b )	83:12:1306:1326	5337416	3	True				
ANR	5337787	AssignmentExpression	sse += ( a - b ) * ( a - b )		5337416	0		+=			
ANR	5337788	Identifier	sse		5337416	0					
ANR	5337789	MultiplicativeExpression	( a - b ) * ( a - b )		5337416	1		*			
ANR	5337790	AdditiveExpression	a - b		5337416	0		-			
ANR	5337791	Identifier	a		5337416	0					
ANR	5337792	Identifier	b		5337416	1					
ANR	5337793	AdditiveExpression	a - b		5337416	1		-			
ANR	5337794	Identifier	a		5337416	0					
ANR	5337795	Identifier	b		5337416	1					
ANR	5337796	IfStatement	if ( ! i )		5337416	19					
ANR	5337797	Condition	! i	91:7:1356:1357	5337416	0	True				
ANR	5337798	UnaryOperationExpression	! i		5337416	0					
ANR	5337799	UnaryOperator	!		5337416	0					
ANR	5337800	Identifier	i		5337416	1					
ANR	5337801	ExpressionStatement	i = 1	91:11:1360:1363	5337416	1	True				
ANR	5337802	AssignmentExpression	i = 1		5337416	0		=			
ANR	5337803	Identifier	i		5337416	0					
ANR	5337804	PrimaryExpression	1		5337416	1					
ANR	5337805	ExpressionStatement	dev = int_sqrt ( ( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i )	93:4:1370:1426	5337416	20	True				
ANR	5337806	AssignmentExpression	dev = int_sqrt ( ( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i )		5337416	0		=			
ANR	5337807	Identifier	dev		5337416	0					
ANR	5337808	CallExpression	int_sqrt ( ( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i )		5337416	1					
ANR	5337809	Callee	int_sqrt		5337416	0					
ANR	5337810	Identifier	int_sqrt		5337416	0					
ANR	5337811	ArgumentList	( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i		5337416	1					
ANR	5337812	Argument	( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i		5337416	0					
ANR	5337813	AdditiveExpression	( ( sse / i ) * F * F ) + ( ( ( sse % i ) * F * F ) + i / 2 ) / i		5337416	0		+			
ANR	5337814	MultiplicativeExpression	( sse / i ) * F * F		5337416	0		*			
ANR	5337815	MultiplicativeExpression	sse / i		5337416	0		/			
ANR	5337816	Identifier	sse		5337416	0					
ANR	5337817	Identifier	i		5337416	1					
ANR	5337818	MultiplicativeExpression	F * F		5337416	1		*			
ANR	5337819	Identifier	F		5337416	0					
ANR	5337820	Identifier	F		5337416	1					
ANR	5337821	MultiplicativeExpression	( ( ( sse % i ) * F * F ) + i / 2 ) / i		5337416	1		/			
ANR	5337822	AdditiveExpression	( ( sse % i ) * F * F ) + i / 2		5337416	0		+			
ANR	5337823	MultiplicativeExpression	( sse % i ) * F * F		5337416	0		*			
ANR	5337824	MultiplicativeExpression	sse % i		5337416	0		%			
ANR	5337825	Identifier	sse		5337416	0					
ANR	5337826	Identifier	i		5337416	1					
ANR	5337827	MultiplicativeExpression	F * F		5337416	1		*			
ANR	5337828	Identifier	F		5337416	0					
ANR	5337829	Identifier	F		5337416	1					
ANR	5337830	MultiplicativeExpression	i / 2		5337416	1		/			
ANR	5337831	Identifier	i		5337416	0					
ANR	5337832	PrimaryExpression	2		5337416	1					
ANR	5337833	Identifier	i		5337416	1					
ANR	5337834	IfStatement	if ( sse )		5337416	21					
ANR	5337835	Condition	sse	95:7:1436:1438	5337416	0	True				
ANR	5337836	Identifier	sse		5337416	0					
ANR	5337837	Statement	psnr	97:8:1450:1453	5337416	1	True				
ANR	5337838	ElseStatement	else		5337416	0					
ANR	5337839	ExpressionStatement	psnr = 100 * F - 1	101:8:1554:1567	5337416	0	True				
ANR	5337840	AssignmentExpression	psnr = 100 * F - 1		5337416	0		=			
ANR	5337841	Identifier	psnr		5337416	0					
ANR	5337842	AdditiveExpression	100 * F - 1		5337416	1		-			
ANR	5337843	MultiplicativeExpression	100 * F		5337416	0		*			
ANR	5337844	PrimaryExpression	100		5337416	0					
ANR	5337845	Identifier	F		5337416	1					
ANR	5337846	PrimaryExpression	1		5337416	1					
ANR	5337847	Statement	=	97:12:1454:1454	5337416	22	True				
ANR	5337848	Statement	(	97:14:1456:1456	5337416	23	True				
ANR	5337849	Statement	(	97:15:1457:1457	5337416	24	True				
ANR	5337850	Statement	2	97:16:1458:1458	5337416	25	True				
ANR	5337851	Statement	*	97:17:1459:1459	5337416	26	True				
ANR	5337852	Statement	log16	97:18:1460:1464	5337416	27	True				
ANR	5337853	Statement	(	97:23:1465:1465	5337416	28	True				
ANR	5337854	Statement	max	97:24:1466:1468	5337416	29	True				
ANR	5337855	Statement	<<	97:27:1469:1470	5337416	30	True				
ANR	5337856	Statement	16	97:29:1471:1472	5337416	31	True				
ANR	5337857	Statement	)	97:31:1473:1473	5337416	32	True				
ANR	5337858	Statement	+	97:33:1475:1475	5337416	33	True				
ANR	5337859	Statement	log16	97:35:1477:1481	5337416	34	True				
ANR	5337860	Statement	(	97:40:1482:1482	5337416	35	True				
ANR	5337861	Statement	i	97:41:1483:1483	5337416	36	True				
ANR	5337862	Statement	)	97:42:1484:1484	5337416	37	True				
ANR	5337863	Statement	-	97:44:1486:1486	5337416	38	True				
ANR	5337864	Statement	log16	97:46:1488:1492	5337416	39	True				
ANR	5337865	Statement	(	97:51:1493:1493	5337416	40	True				
ANR	5337866	Statement	sse	97:52:1494:1496	5337416	41	True				
ANR	5337867	Statement	)	97:55:1497:1497	5337416	42	True				
ANR	5337868	Statement	)	97:56:1498:1498	5337416	43	True				
ANR	5337869	Statement	*	97:57:1499:1499	5337416	44	True				
ANR	5337870	Statement	284619L	97:58:1500:1506	5337416	45	True				
ANR	5337871	Statement	L	97:65:1507:1507	5337416	46	True				
ANR	5337872	Statement	*	97:66:1508:1508	5337416	47	True				
ANR	5337873	Statement	F	97:67:1509:1509	5337416	48	True				
ANR	5337874	Statement	+	97:69:1511:1511	5337416	49	True				
ANR	5337875	Statement	(	97:71:1513:1513	5337416	50	True				
ANR	5337876	Statement	1	97:72:1514:1514	5337416	51	True				
ANR	5337877	Statement	<<	97:73:1515:1516	5337416	52	True				
ANR	5337878	Statement	31	97:75:1517:1518	5337416	53	True				
ANR	5337879	Statement	)	97:77:1519:1519	5337416	54	True				
ANR	5337880	Statement	)	97:78:1520:1520	5337416	55	True				
ANR	5337881	Statement	/	97:80:1522:1522	5337416	56	True				
ANR	5337882	Statement	(	97:82:1524:1524	5337416	57	True				
ANR	5337883	Statement	1L	97:83:1525:1526	5337416	58	True				
ANR	5337884	Statement	L	97:85:1527:1527	5337416	59	True				
ANR	5337885	Statement	<<	97:86:1528:1529	5337416	60	True				
ANR	5337886	Statement	32	97:88:1530:1531	5337416	61	True				
ANR	5337887	Statement	)	97:90:1532:1532	5337416	62	True				
ANR	5337888	ExpressionStatement		97:91:1533:1533	5337416	63	True				
ANR	5337889	ExpressionStatement	"printf ( ""stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\\n"" , ( int ) ( dev / F ) , ( int ) ( dev % F ) , ( int ) ( psnr / F ) , ( int ) ( psnr % F ) , i * len )"	105:4:1610:1752	5337416	64	True				
ANR	5337890	CallExpression	"printf ( ""stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\\n"" , ( int ) ( dev / F ) , ( int ) ( dev % F ) , ( int ) ( psnr / F ) , ( int ) ( psnr % F ) , i * len )"		5337416	0					
ANR	5337891	Callee	printf		5337416	0					
ANR	5337892	Identifier	printf		5337416	0					
ANR	5337893	ArgumentList	"""stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\\n"""		5337416	1					
ANR	5337894	Argument	"""stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\\n"""		5337416	0					
ANR	5337895	PrimaryExpression	"""stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\\n"""		5337416	0					
ANR	5337896	Argument	( int ) ( dev / F )		5337416	1					
ANR	5337897	CastExpression	( int ) ( dev / F )		5337416	0					
ANR	5337898	CastTarget	int		5337416	0					
ANR	5337899	MultiplicativeExpression	dev / F		5337416	1		/			
ANR	5337900	Identifier	dev		5337416	0					
ANR	5337901	Identifier	F		5337416	1					
ANR	5337902	Argument	( int ) ( dev % F )		5337416	2					
ANR	5337903	CastExpression	( int ) ( dev % F )		5337416	0					
ANR	5337904	CastTarget	int		5337416	0					
ANR	5337905	MultiplicativeExpression	dev % F		5337416	1		%			
ANR	5337906	Identifier	dev		5337416	0					
ANR	5337907	Identifier	F		5337416	1					
ANR	5337908	Argument	( int ) ( psnr / F )		5337416	3					
ANR	5337909	CastExpression	( int ) ( psnr / F )		5337416	0					
ANR	5337910	CastTarget	int		5337416	0					
ANR	5337911	MultiplicativeExpression	psnr / F		5337416	1		/			
ANR	5337912	Identifier	psnr		5337416	0					
ANR	5337913	Identifier	F		5337416	1					
ANR	5337914	Argument	( int ) ( psnr % F )		5337416	4					
ANR	5337915	CastExpression	( int ) ( psnr % F )		5337416	0					
ANR	5337916	CastTarget	int		5337416	0					
ANR	5337917	MultiplicativeExpression	psnr % F		5337416	1		%			
ANR	5337918	Identifier	psnr		5337416	0					
ANR	5337919	Identifier	F		5337416	1					
ANR	5337920	Argument	i * len		5337416	5					
ANR	5337921	MultiplicativeExpression	i * len		5337416	0		*			
ANR	5337922	Identifier	i		5337416	0					
ANR	5337923	Identifier	len		5337416	1					
ANR	5337924	ReturnStatement	return 0 ;	113:4:1759:1767	5337416	65	True				
ANR	5337925	PrimaryExpression	0		5337416	0					
ANR	5337926	ReturnType	int		5337416	1					
ANR	5337927	Identifier	main		5337416	2					
ANR	5337928	ParameterList	"int argc , char * argv [ ]"		5337416	3					
ANR	5337929	Parameter	int argc	1:9:9:16	5337416	0	True				
ANR	5337930	ParameterType	int		5337416	0					
ANR	5337931	Identifier	argc		5337416	1					
ANR	5337932	Parameter	char * argv [ ]	1:18:18:29	5337416	1	True				
ANR	5337933	ParameterType	char * [ ]		5337416	0					
ANR	5337934	Identifier	argv		5337416	1					
ANR	5337935	CFGEntryNode	ENTRY		5337416		True				
ANR	5337936	CFGExitNode	EXIT		5337416		True				
ANR	5337937	InfiniteForNode	true		5337416		True				
ANR	5337938	Symbol	SEEK_CUR		5337416						
ANR	5337939	Symbol	sse		5337416						
ANR	5337940	Symbol	F		5337416						
ANR	5337941	Symbol	shift		5337416						
ANR	5337942	Symbol	* * buf		5337416						
ANR	5337943	Symbol	* argv		5337416						
ANR	5337944	Symbol	skip_bytes		5337416						
ANR	5337945	Symbol	argv		5337416						
ANR	5337946	Symbol	dev		5337416						
ANR	5337947	Symbol	len		5337416						
ANR	5337948	Symbol	int_sqrt		5337416						
ANR	5337949	Symbol	argc		5337416						
ANR	5337950	Symbol	atoi		5337416						
ANR	5337951	Symbol	SEEK_SET		5337416						
ANR	5337952	Symbol	fopen		5337416						
ANR	5337953	Symbol	a		5337416						
ANR	5337954	Symbol	* buf		5337416						
ANR	5337955	Symbol	b		5337416						
ANR	5337956	Symbol	max		5337416						
ANR	5337957	Symbol	f		5337416						
ANR	5337958	Symbol	SIZE		5337416						
ANR	5337959	Symbol	i		5337416						
ANR	5337960	Symbol	j		5337416						
ANR	5337961	Symbol	* shift		5337416						
ANR	5337962	Symbol	stderr		5337416						
ANR	5337963	Symbol	fread		5337416						
ANR	5337964	Symbol	* f		5337416						
ANR	5337965	Symbol	buf		5337416						
ANR	5337966	Symbol	psnr		5337416						
ANR	5337967	Symbol	* j		5337416						
