command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5167883	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lag_decode_zero_run_line_0.c								
ANR	5167884	Function	lag_decode_zero_run_line	1:0:0:1177							
ANR	5167885	FunctionDef	"lag_decode_zero_run_line (LagarithContext * l , uint8_t * dst , const uint8_t * src , int width , int esc_count)"		5167884	0					
ANR	5167886	CompoundStatement		7:0:191:1177	5167884	0					
ANR	5167887	IdentifierDeclStatement	int i = 0 ;	9:4:198:207	5167884	0	True				
ANR	5167888	IdentifierDecl	i = 0		5167884	0					
ANR	5167889	IdentifierDeclType	int		5167884	0					
ANR	5167890	Identifier	i		5167884	1					
ANR	5167891	AssignmentExpression	i = 0		5167884	2		=			
ANR	5167892	Identifier	i		5167884	0					
ANR	5167893	PrimaryExpression	0		5167884	1					
ANR	5167894	IdentifierDeclStatement	int count ;	11:4:214:223	5167884	1	True				
ANR	5167895	IdentifierDecl	count		5167884	0					
ANR	5167896	IdentifierDeclType	int		5167884	0					
ANR	5167897	Identifier	count		5167884	1					
ANR	5167898	IdentifierDeclStatement	uint8_t zero_run = 0 ;	13:4:230:250	5167884	2	True				
ANR	5167899	IdentifierDecl	zero_run = 0		5167884	0					
ANR	5167900	IdentifierDeclType	uint8_t		5167884	0					
ANR	5167901	Identifier	zero_run		5167884	1					
ANR	5167902	AssignmentExpression	zero_run = 0		5167884	2		=			
ANR	5167903	Identifier	zero_run		5167884	0					
ANR	5167904	PrimaryExpression	0		5167884	1					
ANR	5167905	IdentifierDeclStatement	const uint8_t * start = src ;	15:4:257:283	5167884	3	True				
ANR	5167906	IdentifierDecl	* start = src		5167884	0					
ANR	5167907	IdentifierDeclType	const uint8_t *		5167884	0					
ANR	5167908	Identifier	start		5167884	1					
ANR	5167909	AssignmentExpression	* start = src		5167884	2		=			
ANR	5167910	Identifier	src		5167884	0					
ANR	5167911	Identifier	src		5167884	1					
ANR	5167912	IdentifierDeclStatement	uint8_t mask1 = - ( esc_count < 2 ) ;	17:4:290:322	5167884	4	True				
ANR	5167913	IdentifierDecl	mask1 = - ( esc_count < 2 )		5167884	0					
ANR	5167914	IdentifierDeclType	uint8_t		5167884	0					
ANR	5167915	Identifier	mask1		5167884	1					
ANR	5167916	AssignmentExpression	mask1 = - ( esc_count < 2 )		5167884	2		=			
ANR	5167917	Identifier	mask1		5167884	0					
ANR	5167918	UnaryOperationExpression	- ( esc_count < 2 )		5167884	1					
ANR	5167919	UnaryOperator	-		5167884	0					
ANR	5167920	RelationalExpression	esc_count < 2		5167884	1		<			
ANR	5167921	Identifier	esc_count		5167884	0					
ANR	5167922	PrimaryExpression	2		5167884	1					
ANR	5167923	IdentifierDeclStatement	uint8_t mask2 = - ( esc_count < 3 ) ;	19:4:329:361	5167884	5	True				
ANR	5167924	IdentifierDecl	mask2 = - ( esc_count < 3 )		5167884	0					
ANR	5167925	IdentifierDeclType	uint8_t		5167884	0					
ANR	5167926	Identifier	mask2		5167884	1					
ANR	5167927	AssignmentExpression	mask2 = - ( esc_count < 3 )		5167884	2		=			
ANR	5167928	Identifier	mask2		5167884	0					
ANR	5167929	UnaryOperationExpression	- ( esc_count < 3 )		5167884	1					
ANR	5167930	UnaryOperator	-		5167884	0					
ANR	5167931	RelationalExpression	esc_count < 3		5167884	1		<			
ANR	5167932	Identifier	esc_count		5167884	0					
ANR	5167933	PrimaryExpression	3		5167884	1					
ANR	5167934	IdentifierDeclStatement	uint8_t * end = dst + ( width - 2 ) ;	21:4:368:400	5167884	6	True				
ANR	5167935	IdentifierDecl	* end = dst + ( width - 2 )		5167884	0					
ANR	5167936	IdentifierDeclType	uint8_t *		5167884	0					
ANR	5167937	Identifier	end		5167884	1					
ANR	5167938	AssignmentExpression	* end = dst + ( width - 2 )		5167884	2		=			
ANR	5167939	Identifier	end		5167884	0					
ANR	5167940	AdditiveExpression	dst + ( width - 2 )		5167884	1		+			
ANR	5167941	Identifier	dst		5167884	0					
ANR	5167942	AdditiveExpression	width - 2		5167884	1		-			
ANR	5167943	Identifier	width		5167884	0					
ANR	5167944	PrimaryExpression	2		5167884	1					
ANR	5167945	Label	output_zeros :	25:0:405:417	5167884	7	True				
ANR	5167946	Identifier	output_zeros		5167884	0					
ANR	5167947	IfStatement	if ( l -> zeros_rem )		5167884	8					
ANR	5167948	Condition	l -> zeros_rem	27:8:428:439	5167884	0	True				
ANR	5167949	PtrMemberAccess	l -> zeros_rem		5167884	0					
ANR	5167950	Identifier	l		5167884	0					
ANR	5167951	Identifier	zeros_rem		5167884	1					
ANR	5167952	CompoundStatement		21:22:250:250	5167884	1					
ANR	5167953	ExpressionStatement	"count = FFMIN ( l -> zeros_rem , width - i )"	29:8:453:491	5167884	0	True				
ANR	5167954	AssignmentExpression	"count = FFMIN ( l -> zeros_rem , width - i )"		5167884	0		=			
ANR	5167955	Identifier	count		5167884	0					
ANR	5167956	CallExpression	"FFMIN ( l -> zeros_rem , width - i )"		5167884	1					
ANR	5167957	Callee	FFMIN		5167884	0					
ANR	5167958	Identifier	FFMIN		5167884	0					
ANR	5167959	ArgumentList	l -> zeros_rem		5167884	1					
ANR	5167960	Argument	l -> zeros_rem		5167884	0					
ANR	5167961	PtrMemberAccess	l -> zeros_rem		5167884	0					
ANR	5167962	Identifier	l		5167884	0					
ANR	5167963	Identifier	zeros_rem		5167884	1					
ANR	5167964	Argument	width - i		5167884	1					
ANR	5167965	AdditiveExpression	width - i		5167884	0		-			
ANR	5167966	Identifier	width		5167884	0					
ANR	5167967	Identifier	i		5167884	1					
ANR	5167968	ExpressionStatement	"memset ( dst , 0 , count )"	31:8:502:523	5167884	1	True				
ANR	5167969	CallExpression	"memset ( dst , 0 , count )"		5167884	0					
ANR	5167970	Callee	memset		5167884	0					
ANR	5167971	Identifier	memset		5167884	0					
ANR	5167972	ArgumentList	dst		5167884	1					
ANR	5167973	Argument	dst		5167884	0					
ANR	5167974	Identifier	dst		5167884	0					
ANR	5167975	Argument	0		5167884	1					
ANR	5167976	PrimaryExpression	0		5167884	0					
ANR	5167977	Argument	count		5167884	2					
ANR	5167978	Identifier	count		5167884	0					
ANR	5167979	ExpressionStatement	l -> zeros_rem -= count	33:8:534:555	5167884	2	True				
ANR	5167980	AssignmentExpression	l -> zeros_rem -= count		5167884	0		-=			
ANR	5167981	PtrMemberAccess	l -> zeros_rem		5167884	0					
ANR	5167982	Identifier	l		5167884	0					
ANR	5167983	Identifier	zeros_rem		5167884	1					
ANR	5167984	Identifier	count		5167884	1					
ANR	5167985	ExpressionStatement	dst += count	35:8:566:578	5167884	3	True				
ANR	5167986	AssignmentExpression	dst += count		5167884	0		+=			
ANR	5167987	Identifier	dst		5167884	0					
ANR	5167988	Identifier	count		5167884	1					
ANR	5167989	WhileStatement	while ( dst < end )		5167884	9					
ANR	5167990	Condition	dst < end	41:11:601:609	5167884	0	True				
ANR	5167991	RelationalExpression	dst < end		5167884	0		<			
ANR	5167992	Identifier	dst		5167884	0					
ANR	5167993	Identifier	end		5167884	1					
ANR	5167994	CompoundStatement		35:22:420:420	5167884	1					
ANR	5167995	ExpressionStatement	i = 0	43:8:623:628	5167884	0	True				
ANR	5167996	AssignmentExpression	i = 0		5167884	0		=			
ANR	5167997	Identifier	i		5167884	0					
ANR	5167998	PrimaryExpression	0		5167884	1					
ANR	5167999	WhileStatement	while ( ! zero_run && dst + i < end )		5167884	1					
ANR	5168000	Condition	! zero_run && dst + i < end	45:15:646:671	5167884	0	True				
ANR	5168001	AndExpression	! zero_run && dst + i < end		5167884	0		&&			
ANR	5168002	UnaryOperationExpression	! zero_run		5167884	0					
ANR	5168003	UnaryOperator	!		5167884	0					
ANR	5168004	Identifier	zero_run		5167884	1					
ANR	5168005	RelationalExpression	dst + i < end		5167884	1		<			
ANR	5168006	AdditiveExpression	dst + i		5167884	0		+			
ANR	5168007	Identifier	dst		5167884	0					
ANR	5168008	Identifier	i		5167884	1					
ANR	5168009	Identifier	end		5167884	1					
ANR	5168010	CompoundStatement		39:43:482:482	5167884	1					
ANR	5168011	ExpressionStatement	i ++	47:12:689:692	5167884	0	True				
ANR	5168012	PostIncDecOperationExpression	i ++		5167884	0					
ANR	5168013	Identifier	i		5167884	0					
ANR	5168014	IncDec	++		5167884	1					
ANR	5168015	ExpressionStatement	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )	49:12:707:790	5167884	1	True				
ANR	5168016	AssignmentExpression	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5167884	0		=			
ANR	5168017	Identifier	zero_run		5167884	0					
ANR	5168018	UnaryOperationExpression	! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5167884	1					
ANR	5168019	UnaryOperator	!		5167884	0					
ANR	5168020	InclusiveOrExpression	src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5167884	1		|			
ANR	5168021	ArrayIndexing	src [ i ]		5167884	0					
ANR	5168022	Identifier	src		5167884	0					
ANR	5168023	Identifier	i		5167884	1					
ANR	5168024	InclusiveOrExpression	( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5167884	1		|			
ANR	5168025	BitAndExpression	src [ i + 1 ] & mask1		5167884	0		&			
ANR	5168026	ArrayIndexing	src [ i + 1 ]		5167884	0					
ANR	5168027	Identifier	src		5167884	0					
ANR	5168028	AdditiveExpression	i + 1		5167884	1		+			
ANR	5168029	Identifier	i		5167884	0					
ANR	5168030	PrimaryExpression	1		5167884	1					
ANR	5168031	Identifier	mask1		5167884	1					
ANR	5168032	BitAndExpression	src [ i + 2 ] & mask2		5167884	1		&			
ANR	5168033	ArrayIndexing	src [ i + 2 ]		5167884	0					
ANR	5168034	Identifier	src		5167884	0					
ANR	5168035	AdditiveExpression	i + 2		5167884	1		+			
ANR	5168036	Identifier	i		5167884	0					
ANR	5168037	PrimaryExpression	2		5167884	1					
ANR	5168038	Identifier	mask2		5167884	1					
ANR	5168039	IfStatement	if ( zero_run )		5167884	2					
ANR	5168040	Condition	zero_run	55:12:816:823	5167884	0	True				
ANR	5168041	Identifier	zero_run		5167884	0					
ANR	5168042	CompoundStatement		49:22:634:634	5167884	1					
ANR	5168043	ExpressionStatement	zero_run = 0	57:12:841:853	5167884	0	True				
ANR	5168044	AssignmentExpression	zero_run = 0		5167884	0		=			
ANR	5168045	Identifier	zero_run		5167884	0					
ANR	5168046	PrimaryExpression	0		5167884	1					
ANR	5168047	ExpressionStatement	i += esc_count	59:12:868:882	5167884	1	True				
ANR	5168048	AssignmentExpression	i += esc_count		5167884	0		+=			
ANR	5168049	Identifier	i		5167884	0					
ANR	5168050	Identifier	esc_count		5167884	1					
ANR	5168051	ExpressionStatement	"memcpy ( dst , src , i )"	61:12:897:916	5167884	2	True				
ANR	5168052	CallExpression	"memcpy ( dst , src , i )"		5167884	0					
ANR	5168053	Callee	memcpy		5167884	0					
ANR	5168054	Identifier	memcpy		5167884	0					
ANR	5168055	ArgumentList	dst		5167884	1					
ANR	5168056	Argument	dst		5167884	0					
ANR	5168057	Identifier	dst		5167884	0					
ANR	5168058	Argument	src		5167884	1					
ANR	5168059	Identifier	src		5167884	0					
ANR	5168060	Argument	i		5167884	2					
ANR	5168061	Identifier	i		5167884	0					
ANR	5168062	ExpressionStatement	dst += i	63:12:931:939	5167884	3	True				
ANR	5168063	AssignmentExpression	dst += i		5167884	0		+=			
ANR	5168064	Identifier	dst		5167884	0					
ANR	5168065	Identifier	i		5167884	1					
ANR	5168066	ExpressionStatement	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )	65:12:954:994	5167884	4	True				
ANR	5168067	AssignmentExpression	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )		5167884	0		=			
ANR	5168068	PtrMemberAccess	l -> zeros_rem		5167884	0					
ANR	5168069	Identifier	l		5167884	0					
ANR	5168070	Identifier	zeros_rem		5167884	1					
ANR	5168071	CallExpression	lag_calc_zero_run ( src [ i ] )		5167884	1					
ANR	5168072	Callee	lag_calc_zero_run		5167884	0					
ANR	5168073	Identifier	lag_calc_zero_run		5167884	0					
ANR	5168074	ArgumentList	src [ i ]		5167884	1					
ANR	5168075	Argument	src [ i ]		5167884	0					
ANR	5168076	ArrayIndexing	src [ i ]		5167884	0					
ANR	5168077	Identifier	src		5167884	0					
ANR	5168078	Identifier	i		5167884	1					
ANR	5168079	ExpressionStatement	src += i + 1	69:12:1011:1023	5167884	5	True				
ANR	5168080	AssignmentExpression	src += i + 1		5167884	0		+=			
ANR	5168081	Identifier	src		5167884	0					
ANR	5168082	AdditiveExpression	i + 1		5167884	1		+			
ANR	5168083	Identifier	i		5167884	0					
ANR	5168084	PrimaryExpression	1		5167884	1					
ANR	5168085	GotoStatement	goto output_zeros ;	71:12:1038:1055	5167884	6	True				
ANR	5168086	Identifier	output_zeros		5167884	0					
ANR	5168087	ElseStatement	else		5167884	0					
ANR	5168088	CompoundStatement		67:15:881:881	5167884	0					
ANR	5168089	ExpressionStatement	"memcpy ( dst , src , i )"	75:12:1088:1107	5167884	0	True				
ANR	5168090	CallExpression	"memcpy ( dst , src , i )"		5167884	0					
ANR	5168091	Callee	memcpy		5167884	0					
ANR	5168092	Identifier	memcpy		5167884	0					
ANR	5168093	ArgumentList	dst		5167884	1					
ANR	5168094	Argument	dst		5167884	0					
ANR	5168095	Identifier	dst		5167884	0					
ANR	5168096	Argument	src		5167884	1					
ANR	5168097	Identifier	src		5167884	0					
ANR	5168098	Argument	i		5167884	2					
ANR	5168099	Identifier	i		5167884	0					
ANR	5168100	ExpressionStatement	src += i	77:12:1122:1130	5167884	1	True				
ANR	5168101	AssignmentExpression	src += i		5167884	0		+=			
ANR	5168102	Identifier	src		5167884	0					
ANR	5168103	Identifier	i		5167884	1					
ANR	5168104	ReturnStatement	return src - start ;	83:4:1155:1174	5167884	10	True				
ANR	5168105	AdditiveExpression	src - start		5167884	0		-			
ANR	5168106	Identifier	src		5167884	0					
ANR	5168107	Identifier	start		5167884	1					
ANR	5168108	ReturnType	static int		5167884	1					
ANR	5168109	Identifier	lag_decode_zero_run_line		5167884	2					
ANR	5168110	ParameterList	"LagarithContext * l , uint8_t * dst , const uint8_t * src , int width , int esc_count"		5167884	3					
ANR	5168111	Parameter	LagarithContext * l	1:36:36:53	5167884	0	True				
ANR	5168112	ParameterType	LagarithContext *		5167884	0					
ANR	5168113	Identifier	l		5167884	1					
ANR	5168114	Parameter	uint8_t * dst	1:56:56:67	5167884	1	True				
ANR	5168115	ParameterType	uint8_t *		5167884	0					
ANR	5168116	Identifier	dst		5167884	1					
ANR	5168117	Parameter	const uint8_t * src	3:36:107:124	5167884	2	True				
ANR	5168118	ParameterType	const uint8_t *		5167884	0					
ANR	5168119	Identifier	src		5167884	1					
ANR	5168120	Parameter	int width	3:56:127:135	5167884	3	True				
ANR	5168121	ParameterType	int		5167884	0					
ANR	5168122	Identifier	width		5167884	1					
ANR	5168123	Parameter	int esc_count	5:36:175:187	5167884	4	True				
ANR	5168124	ParameterType	int		5167884	0					
ANR	5168125	Identifier	esc_count		5167884	1					
ANR	5168126	CFGEntryNode	ENTRY		5167884		True				
ANR	5168127	CFGExitNode	EXIT		5167884		True				
ANR	5168128	Symbol	zero_run		5167884						
ANR	5168129	Symbol	dst		5167884						
ANR	5168130	Symbol	src		5167884						
ANR	5168131	Symbol	count		5167884						
ANR	5168132	Symbol	start		5167884						
ANR	5168133	Symbol	mask1		5167884						
ANR	5168134	Symbol	i		5167884						
ANR	5168135	Symbol	l -> zeros_rem		5167884						
ANR	5168136	Symbol	FFMIN		5167884						
ANR	5168137	Symbol	mask2		5167884						
ANR	5168138	Symbol	l		5167884						
ANR	5168139	Symbol	lag_calc_zero_run		5167884						
ANR	5168140	Symbol	* src		5167884						
ANR	5168141	Symbol	* i		5167884						
ANR	5168142	Symbol	esc_count		5167884						
ANR	5168143	Symbol	* l		5167884						
ANR	5168144	Symbol	width		5167884						
ANR	5168145	Symbol	end		5167884						
