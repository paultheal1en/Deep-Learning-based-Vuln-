command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1642505	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dct_quantize_refine_1.c								
ANR	1642506	Function	dct_quantize_refine	1:0:0:12494							
ANR	1642507	FunctionDef	"dct_quantize_refine (MpegEncContext * s , DCTELEM * block , int16_t * weight , DCTELEM * orig , int n , int qscale)"		1642506	0					
ANR	1642508	CompoundStatement		5:42:190:12494	1642506	0					
ANR	1642509	IdentifierDeclStatement	int16_t rem [ 64 ] ;	7:4:197:212	1642506	0	True				
ANR	1642510	IdentifierDecl	rem [ 64 ]		1642506	0					
ANR	1642511	IdentifierDeclType	int16_t [ 64 ]		1642506	0					
ANR	1642512	Identifier	rem		1642506	1					
ANR	1642513	PrimaryExpression	64		1642506	2					
ANR	1642514	IdentifierDeclStatement	DCTELEM d1 [ 64 ] ;	9:4:219:233	1642506	1	True				
ANR	1642515	IdentifierDecl	d1 [ 64 ]		1642506	0					
ANR	1642516	IdentifierDeclType	DCTELEM [ 64 ]		1642506	0					
ANR	1642517	Identifier	d1		1642506	1					
ANR	1642518	PrimaryExpression	64		1642506	2					
ANR	1642519	IdentifierDeclStatement	const int * qmat ;	11:4:240:255	1642506	2	True				
ANR	1642520	IdentifierDecl	* qmat		1642506	0					
ANR	1642521	IdentifierDeclType	const int *		1642506	0					
ANR	1642522	Identifier	qmat		1642506	1					
ANR	1642523	IdentifierDeclStatement	const uint8_t * scantable = s -> intra_scantable . scantable ;	13:4:262:316	1642506	3	True				
ANR	1642524	IdentifierDecl	* scantable = s -> intra_scantable . scantable		1642506	0					
ANR	1642525	IdentifierDeclType	const uint8_t *		1642506	0					
ANR	1642526	Identifier	scantable		1642506	1					
ANR	1642527	AssignmentExpression	* scantable = s -> intra_scantable . scantable		1642506	2		=			
ANR	1642528	Identifier	scantable		1642506	0					
ANR	1642529	MemberAccess	s -> intra_scantable . scantable		1642506	1					
ANR	1642530	PtrMemberAccess	s -> intra_scantable		1642506	0					
ANR	1642531	Identifier	s		1642506	0					
ANR	1642532	Identifier	intra_scantable		1642506	1					
ANR	1642533	Identifier	scantable		1642506	1					
ANR	1642534	IdentifierDeclStatement	const uint8_t * perm_scantable = s -> intra_scantable . permutated ;	15:4:323:383	1642506	4	True				
ANR	1642535	IdentifierDecl	* perm_scantable = s -> intra_scantable . permutated		1642506	0					
ANR	1642536	IdentifierDeclType	const uint8_t *		1642506	0					
ANR	1642537	Identifier	perm_scantable		1642506	1					
ANR	1642538	AssignmentExpression	* perm_scantable = s -> intra_scantable . permutated		1642506	2		=			
ANR	1642539	Identifier	perm_scantable		1642506	0					
ANR	1642540	MemberAccess	s -> intra_scantable . permutated		1642506	1					
ANR	1642541	PtrMemberAccess	s -> intra_scantable		1642506	0					
ANR	1642542	Identifier	s		1642506	0					
ANR	1642543	Identifier	intra_scantable		1642506	1					
ANR	1642544	Identifier	permutated		1642506	1					
ANR	1642545	IdentifierDeclStatement	int run_tab [ 65 ] ;	21:4:453:468	1642506	5	True				
ANR	1642546	IdentifierDecl	run_tab [ 65 ]		1642506	0					
ANR	1642547	IdentifierDeclType	int [ 65 ]		1642506	0					
ANR	1642548	Identifier	run_tab		1642506	1					
ANR	1642549	PrimaryExpression	65		1642506	2					
ANR	1642550	IdentifierDeclStatement	int prev_run = 0 ;	23:4:475:489	1642506	6	True				
ANR	1642551	IdentifierDecl	prev_run = 0		1642506	0					
ANR	1642552	IdentifierDeclType	int		1642506	0					
ANR	1642553	Identifier	prev_run		1642506	1					
ANR	1642554	AssignmentExpression	prev_run = 0		1642506	2		=			
ANR	1642555	Identifier	prev_run		1642506	0					
ANR	1642556	PrimaryExpression	0		1642506	1					
ANR	1642557	IdentifierDeclStatement	int prev_level = 0 ;	25:4:496:512	1642506	7	True				
ANR	1642558	IdentifierDecl	prev_level = 0		1642506	0					
ANR	1642559	IdentifierDeclType	int		1642506	0					
ANR	1642560	Identifier	prev_level		1642506	1					
ANR	1642561	AssignmentExpression	prev_level = 0		1642506	2		=			
ANR	1642562	Identifier	prev_level		1642506	0					
ANR	1642563	PrimaryExpression	0		1642506	1					
ANR	1642564	IdentifierDeclStatement	"int qmul , qadd , start_i , last_non_zero , i , dc ;"	27:4:519:564	1642506	8	True				
ANR	1642565	IdentifierDecl	qmul		1642506	0					
ANR	1642566	IdentifierDeclType	int		1642506	0					
ANR	1642567	Identifier	qmul		1642506	1					
ANR	1642568	IdentifierDecl	qadd		1642506	1					
ANR	1642569	IdentifierDeclType	int		1642506	0					
ANR	1642570	Identifier	qadd		1642506	1					
ANR	1642571	IdentifierDecl	start_i		1642506	2					
ANR	1642572	IdentifierDeclType	int		1642506	0					
ANR	1642573	Identifier	start_i		1642506	1					
ANR	1642574	IdentifierDecl	last_non_zero		1642506	3					
ANR	1642575	IdentifierDeclType	int		1642506	0					
ANR	1642576	Identifier	last_non_zero		1642506	1					
ANR	1642577	IdentifierDecl	i		1642506	4					
ANR	1642578	IdentifierDeclType	int		1642506	0					
ANR	1642579	Identifier	i		1642506	1					
ANR	1642580	IdentifierDecl	dc		1642506	5					
ANR	1642581	IdentifierDeclType	int		1642506	0					
ANR	1642582	Identifier	dc		1642506	1					
ANR	1642583	IdentifierDeclStatement	uint8_t * length ;	29:4:571:587	1642506	9	True				
ANR	1642584	IdentifierDecl	* length		1642506	0					
ANR	1642585	IdentifierDeclType	uint8_t *		1642506	0					
ANR	1642586	Identifier	length		1642506	1					
ANR	1642587	IdentifierDeclStatement	uint8_t * last_length ;	31:4:594:615	1642506	10	True				
ANR	1642588	IdentifierDecl	* last_length		1642506	0					
ANR	1642589	IdentifierDeclType	uint8_t *		1642506	0					
ANR	1642590	Identifier	last_length		1642506	1					
ANR	1642591	IdentifierDeclStatement	int lambda ;	33:4:622:632	1642506	11	True				
ANR	1642592	IdentifierDecl	lambda		1642506	0					
ANR	1642593	IdentifierDeclType	int		1642506	0					
ANR	1642594	Identifier	lambda		1642506	1					
ANR	1642595	IdentifierDeclStatement	"int rle_index , run , q , sum ;"	35:4:639:665	1642506	12	True				
ANR	1642596	IdentifierDecl	rle_index		1642506	0					
ANR	1642597	IdentifierDeclType	int		1642506	0					
ANR	1642598	Identifier	rle_index		1642506	1					
ANR	1642599	IdentifierDecl	run		1642506	1					
ANR	1642600	IdentifierDeclType	int		1642506	0					
ANR	1642601	Identifier	run		1642506	1					
ANR	1642602	IdentifierDecl	q		1642506	2					
ANR	1642603	IdentifierDeclType	int		1642506	0					
ANR	1642604	Identifier	q		1642506	1					
ANR	1642605	IdentifierDecl	sum		1642506	3					
ANR	1642606	IdentifierDeclType	int		1642506	0					
ANR	1642607	Identifier	sum		1642506	1					
ANR	1642608	Statement	static	39:0:689:694	1642506	13	True				
ANR	1642609	IdentifierDeclStatement	int count = 0 ;	39:7:696:707	1642506	14	True				
ANR	1642610	IdentifierDecl	count = 0		1642506	0					
ANR	1642611	IdentifierDeclType	int		1642506	0					
ANR	1642612	Identifier	count		1642506	1					
ANR	1642613	AssignmentExpression	count = 0		1642506	2		=			
ANR	1642614	Identifier	count		1642506	0					
ANR	1642615	PrimaryExpression	0		1642506	1					
ANR	1642616	Statement	static	41:0:710:715	1642506	15	True				
ANR	1642617	IdentifierDeclStatement	int after_last = 0 ;	41:7:717:733	1642506	16	True				
ANR	1642618	IdentifierDecl	after_last = 0		1642506	0					
ANR	1642619	IdentifierDeclType	int		1642506	0					
ANR	1642620	Identifier	after_last		1642506	1					
ANR	1642621	AssignmentExpression	after_last = 0		1642506	2		=			
ANR	1642622	Identifier	after_last		1642506	0					
ANR	1642623	PrimaryExpression	0		1642506	1					
ANR	1642624	Statement	static	43:0:736:741	1642506	17	True				
ANR	1642625	IdentifierDeclStatement	int to_zero = 0 ;	43:7:743:756	1642506	18	True				
ANR	1642626	IdentifierDecl	to_zero = 0		1642506	0					
ANR	1642627	IdentifierDeclType	int		1642506	0					
ANR	1642628	Identifier	to_zero		1642506	1					
ANR	1642629	AssignmentExpression	to_zero = 0		1642506	2		=			
ANR	1642630	Identifier	to_zero		1642506	0					
ANR	1642631	PrimaryExpression	0		1642506	1					
ANR	1642632	Statement	static	45:0:759:764	1642506	19	True				
ANR	1642633	IdentifierDeclStatement	int from_zero = 0 ;	45:7:766:781	1642506	20	True				
ANR	1642634	IdentifierDecl	from_zero = 0		1642506	0					
ANR	1642635	IdentifierDeclType	int		1642506	0					
ANR	1642636	Identifier	from_zero		1642506	1					
ANR	1642637	AssignmentExpression	from_zero = 0		1642506	2		=			
ANR	1642638	Identifier	from_zero		1642506	0					
ANR	1642639	PrimaryExpression	0		1642506	1					
ANR	1642640	Statement	static	47:0:784:789	1642506	21	True				
ANR	1642641	IdentifierDeclStatement	int raise = 0 ;	47:7:791:802	1642506	22	True				
ANR	1642642	IdentifierDecl	raise = 0		1642506	0					
ANR	1642643	IdentifierDeclType	int		1642506	0					
ANR	1642644	Identifier	raise		1642506	1					
ANR	1642645	AssignmentExpression	raise = 0		1642506	2		=			
ANR	1642646	Identifier	raise		1642506	0					
ANR	1642647	PrimaryExpression	0		1642506	1					
ANR	1642648	Statement	static	49:0:805:810	1642506	23	True				
ANR	1642649	IdentifierDeclStatement	int lower = 0 ;	49:7:812:823	1642506	24	True				
ANR	1642650	IdentifierDecl	lower = 0		1642506	0					
ANR	1642651	IdentifierDeclType	int		1642506	0					
ANR	1642652	Identifier	lower		1642506	1					
ANR	1642653	AssignmentExpression	lower = 0		1642506	2		=			
ANR	1642654	Identifier	lower		1642506	0					
ANR	1642655	PrimaryExpression	0		1642506	1					
ANR	1642656	Statement	static	51:0:826:831	1642506	25	True				
ANR	1642657	IdentifierDeclStatement	int messed_sign = 0 ;	51:7:833:850	1642506	26	True				
ANR	1642658	IdentifierDecl	messed_sign = 0		1642506	0					
ANR	1642659	IdentifierDeclType	int		1642506	0					
ANR	1642660	Identifier	messed_sign		1642506	1					
ANR	1642661	AssignmentExpression	messed_sign = 0		1642506	2		=			
ANR	1642662	Identifier	messed_sign		1642506	0					
ANR	1642663	PrimaryExpression	0		1642506	1					
ANR	1642664	IfStatement	if ( basis [ 0 ] [ 0 ] == 0 )		1642506	27					
ANR	1642665	Condition	basis [ 0 ] [ 0 ] == 0	57:7:870:885	1642506	0	True				
ANR	1642666	EqualityExpression	basis [ 0 ] [ 0 ] == 0		1642506	0		==			
ANR	1642667	ArrayIndexing	basis [ 0 ] [ 0 ]		1642506	0					
ANR	1642668	ArrayIndexing	basis [ 0 ]		1642506	0					
ANR	1642669	Identifier	basis		1642506	0					
ANR	1642670	PrimaryExpression	0		1642506	1					
ANR	1642671	PrimaryExpression	0		1642506	1					
ANR	1642672	PrimaryExpression	0		1642506	1					
ANR	1642673	ExpressionStatement	build_basis ( s -> dsp . idct_permutation )	59:8:897:933	1642506	1	True				
ANR	1642674	CallExpression	build_basis ( s -> dsp . idct_permutation )		1642506	0					
ANR	1642675	Callee	build_basis		1642506	0					
ANR	1642676	Identifier	build_basis		1642506	0					
ANR	1642677	ArgumentList	s -> dsp . idct_permutation		1642506	1					
ANR	1642678	Argument	s -> dsp . idct_permutation		1642506	0					
ANR	1642679	MemberAccess	s -> dsp . idct_permutation		1642506	0					
ANR	1642680	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1642681	Identifier	s		1642506	0					
ANR	1642682	Identifier	dsp		1642506	1					
ANR	1642683	Identifier	idct_permutation		1642506	1					
ANR	1642684	ExpressionStatement	qmul = qscale * 2	63:4:946:960	1642506	28	True				
ANR	1642685	AssignmentExpression	qmul = qscale * 2		1642506	0		=			
ANR	1642686	Identifier	qmul		1642506	0					
ANR	1642687	MultiplicativeExpression	qscale * 2		1642506	1		*			
ANR	1642688	Identifier	qscale		1642506	0					
ANR	1642689	PrimaryExpression	2		1642506	1					
ANR	1642690	ExpressionStatement	qadd = ( qscale - 1 ) | 1	65:4:967:985	1642506	29	True				
ANR	1642691	AssignmentExpression	qadd = ( qscale - 1 ) | 1		1642506	0		=			
ANR	1642692	Identifier	qadd		1642506	0					
ANR	1642693	InclusiveOrExpression	( qscale - 1 ) | 1		1642506	1		|			
ANR	1642694	AdditiveExpression	qscale - 1		1642506	0		-			
ANR	1642695	Identifier	qscale		1642506	0					
ANR	1642696	PrimaryExpression	1		1642506	1					
ANR	1642697	PrimaryExpression	1		1642506	1					
ANR	1642698	IfStatement	if ( s -> mb_intra )		1642506	30					
ANR	1642699	Condition	s -> mb_intra	67:8:996:1006	1642506	0	True				
ANR	1642700	PtrMemberAccess	s -> mb_intra		1642506	0					
ANR	1642701	Identifier	s		1642506	0					
ANR	1642702	Identifier	mb_intra		1642506	1					
ANR	1642703	CompoundStatement		63:21:818:818	1642506	1					
ANR	1642704	IfStatement	if ( ! s -> h263_aic )		1642506	0					
ANR	1642705	Condition	! s -> h263_aic	69:12:1024:1035	1642506	0	True				
ANR	1642706	UnaryOperationExpression	! s -> h263_aic		1642506	0					
ANR	1642707	UnaryOperator	!		1642506	0					
ANR	1642708	PtrMemberAccess	s -> h263_aic		1642506	1					
ANR	1642709	Identifier	s		1642506	0					
ANR	1642710	Identifier	h263_aic		1642506	1					
ANR	1642711	CompoundStatement		65:26:847:847	1642506	1					
ANR	1642712	IfStatement	if ( n < 4 )		1642506	0					
ANR	1642713	Condition	n < 4	71:16:1057:1061	1642506	0	True				
ANR	1642714	RelationalExpression	n < 4		1642506	0		<			
ANR	1642715	Identifier	n		1642506	0					
ANR	1642716	PrimaryExpression	4		1642506	1					
ANR	1642717	ExpressionStatement	q = s -> y_dc_scale	73:16:1081:1098	1642506	1	True				
ANR	1642718	AssignmentExpression	q = s -> y_dc_scale		1642506	0		=			
ANR	1642719	Identifier	q		1642506	0					
ANR	1642720	PtrMemberAccess	s -> y_dc_scale		1642506	1					
ANR	1642721	Identifier	s		1642506	0					
ANR	1642722	Identifier	y_dc_scale		1642506	1					
ANR	1642723	ElseStatement	else		1642506	0					
ANR	1642724	ExpressionStatement	q = s -> c_dc_scale	77:16:1135:1152	1642506	0	True				
ANR	1642725	AssignmentExpression	q = s -> c_dc_scale		1642506	0		=			
ANR	1642726	Identifier	q		1642506	0					
ANR	1642727	PtrMemberAccess	s -> c_dc_scale		1642506	1					
ANR	1642728	Identifier	s		1642506	0					
ANR	1642729	Identifier	c_dc_scale		1642506	1					
ANR	1642730	ElseStatement	else		1642506	0					
ANR	1642731	CompoundStatement		75:14:978:978	1642506	0					
ANR	1642732	ExpressionStatement	q = 1	83:12:1244:1249	1642506	0	True				
ANR	1642733	AssignmentExpression	q = 1		1642506	0		=			
ANR	1642734	Identifier	q		1642506	0					
ANR	1642735	PrimaryExpression	1		1642506	1					
ANR	1642736	ExpressionStatement	qadd = 0	85:12:1264:1270	1642506	1	True				
ANR	1642737	AssignmentExpression	qadd = 0		1642506	0		=			
ANR	1642738	Identifier	qadd		1642506	0					
ANR	1642739	PrimaryExpression	0		1642506	1					
ANR	1642740	ExpressionStatement	q <<= RECON_SHIFT - 3	89:8:1292:1311	1642506	1	True				
ANR	1642741	AssignmentExpression	q <<= RECON_SHIFT - 3		1642506	0		<<=			
ANR	1642742	Identifier	q		1642506	0					
ANR	1642743	AdditiveExpression	RECON_SHIFT - 3		1642506	1		-			
ANR	1642744	Identifier	RECON_SHIFT		1642506	0					
ANR	1642745	PrimaryExpression	3		1642506	1					
ANR	1642746	ExpressionStatement	dc = block [ 0 ] * q	93:8:1378:1392	1642506	2	True				
ANR	1642747	AssignmentExpression	dc = block [ 0 ] * q		1642506	0		=			
ANR	1642748	Identifier	dc		1642506	0					
ANR	1642749	MultiplicativeExpression	block [ 0 ] * q		1642506	1		*			
ANR	1642750	ArrayIndexing	block [ 0 ]		1642506	0					
ANR	1642751	Identifier	block		1642506	0					
ANR	1642752	PrimaryExpression	0		1642506	1					
ANR	1642753	Identifier	q		1642506	1					
ANR	1642754	ExpressionStatement	start_i = 1	97:8:1452:1463	1642506	3	True				
ANR	1642755	AssignmentExpression	start_i = 1		1642506	0		=			
ANR	1642756	Identifier	start_i		1642506	0					
ANR	1642757	PrimaryExpression	1		1642506	1					
ANR	1642758	ExpressionStatement	qmat = s -> q_intra_matrix [ qscale ]	99:8:1474:1506	1642506	4	True				
ANR	1642759	AssignmentExpression	qmat = s -> q_intra_matrix [ qscale ]		1642506	0		=			
ANR	1642760	Identifier	qmat		1642506	0					
ANR	1642761	ArrayIndexing	s -> q_intra_matrix [ qscale ]		1642506	1					
ANR	1642762	PtrMemberAccess	s -> q_intra_matrix		1642506	0					
ANR	1642763	Identifier	s		1642506	0					
ANR	1642764	Identifier	q_intra_matrix		1642506	1					
ANR	1642765	Identifier	qscale		1642506	1					
ANR	1642766	ExpressionStatement	length = s -> intra_ac_vlc_length	105:8:1616:1651	1642506	5	True				
ANR	1642767	AssignmentExpression	length = s -> intra_ac_vlc_length		1642506	0		=			
ANR	1642768	Identifier	length		1642506	0					
ANR	1642769	PtrMemberAccess	s -> intra_ac_vlc_length		1642506	1					
ANR	1642770	Identifier	s		1642506	0					
ANR	1642771	Identifier	intra_ac_vlc_length		1642506	1					
ANR	1642772	ExpressionStatement	last_length = s -> intra_ac_vlc_last_length	107:8:1662:1702	1642506	6	True				
ANR	1642773	AssignmentExpression	last_length = s -> intra_ac_vlc_last_length		1642506	0		=			
ANR	1642774	Identifier	last_length		1642506	0					
ANR	1642775	PtrMemberAccess	s -> intra_ac_vlc_last_length		1642506	1					
ANR	1642776	Identifier	s		1642506	0					
ANR	1642777	Identifier	intra_ac_vlc_last_length		1642506	1					
ANR	1642778	ElseStatement	else		1642506	0					
ANR	1642779	CompoundStatement		105:11:1525:1525	1642506	0					
ANR	1642780	ExpressionStatement	dc = 0	111:8:1727:1732	1642506	0	True				
ANR	1642781	AssignmentExpression	dc = 0		1642506	0		=			
ANR	1642782	Identifier	dc		1642506	0					
ANR	1642783	PrimaryExpression	0		1642506	1					
ANR	1642784	ExpressionStatement	start_i = 0	113:8:1743:1754	1642506	1	True				
ANR	1642785	AssignmentExpression	start_i = 0		1642506	0		=			
ANR	1642786	Identifier	start_i		1642506	0					
ANR	1642787	PrimaryExpression	0		1642506	1					
ANR	1642788	ExpressionStatement	qmat = s -> q_inter_matrix [ qscale ]	115:8:1765:1797	1642506	2	True				
ANR	1642789	AssignmentExpression	qmat = s -> q_inter_matrix [ qscale ]		1642506	0		=			
ANR	1642790	Identifier	qmat		1642506	0					
ANR	1642791	ArrayIndexing	s -> q_inter_matrix [ qscale ]		1642506	1					
ANR	1642792	PtrMemberAccess	s -> q_inter_matrix		1642506	0					
ANR	1642793	Identifier	s		1642506	0					
ANR	1642794	Identifier	q_inter_matrix		1642506	1					
ANR	1642795	Identifier	qscale		1642506	1					
ANR	1642796	ExpressionStatement	length = s -> inter_ac_vlc_length	117:8:1808:1843	1642506	3	True				
ANR	1642797	AssignmentExpression	length = s -> inter_ac_vlc_length		1642506	0		=			
ANR	1642798	Identifier	length		1642506	0					
ANR	1642799	PtrMemberAccess	s -> inter_ac_vlc_length		1642506	1					
ANR	1642800	Identifier	s		1642506	0					
ANR	1642801	Identifier	inter_ac_vlc_length		1642506	1					
ANR	1642802	ExpressionStatement	last_length = s -> inter_ac_vlc_last_length	119:8:1854:1894	1642506	4	True				
ANR	1642803	AssignmentExpression	last_length = s -> inter_ac_vlc_last_length		1642506	0		=			
ANR	1642804	Identifier	last_length		1642506	0					
ANR	1642805	PtrMemberAccess	s -> inter_ac_vlc_last_length		1642506	1					
ANR	1642806	Identifier	s		1642506	0					
ANR	1642807	Identifier	inter_ac_vlc_last_length		1642506	1					
ANR	1642808	ExpressionStatement	last_non_zero = s -> block_last_index [ n ]	123:4:1908:1946	1642506	31	True				
ANR	1642809	AssignmentExpression	last_non_zero = s -> block_last_index [ n ]		1642506	0		=			
ANR	1642810	Identifier	last_non_zero		1642506	0					
ANR	1642811	ArrayIndexing	s -> block_last_index [ n ]		1642506	1					
ANR	1642812	PtrMemberAccess	s -> block_last_index		1642506	0					
ANR	1642813	Identifier	s		1642506	0					
ANR	1642814	Identifier	block_last_index		1642506	1					
ANR	1642815	Identifier	n		1642506	1					
ANR	1642816	CompoundStatement		125:0:1781:1781	1642506	32					
ANR	1642817	Statement	START_TIMER	129:1:1973:1983	1642506	0	True				
ANR	1642818	ExpressionStatement	dc += ( 1 << ( RECON_SHIFT - 1 ) )	133:4:1998:2024	1642506	1	True				
ANR	1642819	AssignmentExpression	dc += ( 1 << ( RECON_SHIFT - 1 ) )		1642506	0		+=			
ANR	1642820	Identifier	dc		1642506	0					
ANR	1642821	ShiftExpression	1 << ( RECON_SHIFT - 1 )		1642506	1		<<			
ANR	1642822	PrimaryExpression	1		1642506	0					
ANR	1642823	AdditiveExpression	RECON_SHIFT - 1		1642506	1		-			
ANR	1642824	Identifier	RECON_SHIFT		1642506	0					
ANR	1642825	PrimaryExpression	1		1642506	1					
ANR	1642826	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1642506	2					
ANR	1642827	ForInit	i = 0 ;	135:8:2035:2038	1642506	0	True				
ANR	1642828	AssignmentExpression	i = 0		1642506	0		=			
ANR	1642829	Identifier	i		1642506	0					
ANR	1642830	PrimaryExpression	0		1642506	1					
ANR	1642831	Condition	i < 64	135:13:2040:2043	1642506	1	True				
ANR	1642832	RelationalExpression	i < 64		1642506	0		<			
ANR	1642833	Identifier	i		1642506	0					
ANR	1642834	PrimaryExpression	64		1642506	1					
ANR	1642835	PostIncDecOperationExpression	i ++	135:19:2046:2048	1642506	2	True				
ANR	1642836	Identifier	i		1642506	0					
ANR	1642837	IncDec	++		1642506	1					
ANR	1642838	CompoundStatement		131:23:1859:1859	1642506	3					
ANR	1642839	ExpressionStatement	rem [ i ] = dc - ( orig [ i ] << RECON_SHIFT )	137:8:2061:2096	1642506	0	True				
ANR	1642840	AssignmentExpression	rem [ i ] = dc - ( orig [ i ] << RECON_SHIFT )		1642506	0		=			
ANR	1642841	ArrayIndexing	rem [ i ]		1642506	0					
ANR	1642842	Identifier	rem		1642506	0					
ANR	1642843	Identifier	i		1642506	1					
ANR	1642844	AdditiveExpression	dc - ( orig [ i ] << RECON_SHIFT )		1642506	1		-			
ANR	1642845	Identifier	dc		1642506	0					
ANR	1642846	ShiftExpression	orig [ i ] << RECON_SHIFT		1642506	1		<<			
ANR	1642847	ArrayIndexing	orig [ i ]		1642506	0					
ANR	1642848	Identifier	orig		1642506	0					
ANR	1642849	Identifier	i		1642506	1					
ANR	1642850	Identifier	RECON_SHIFT		1642506	1					
ANR	1642851	Statement	STOP_TIMER	143:0:2182:2191	1642506	3	True				
ANR	1642852	Statement	(	143:10:2192:2192	1642506	4	True				
ANR	1642853	Statement	"""memset rem[]"""	143:11:2193:2206	1642506	5	True				
ANR	1642854	Statement	)	143:25:2207:2207	1642506	6	True				
ANR	1642855	ExpressionStatement	sum = 0	147:4:2223:2228	1642506	33	True				
ANR	1642856	AssignmentExpression	sum = 0		1642506	0		=			
ANR	1642857	Identifier	sum		1642506	0					
ANR	1642858	PrimaryExpression	0		1642506	1					
ANR	1642859	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1642506	34					
ANR	1642860	ForInit	i = 0 ;	149:8:2239:2242	1642506	0	True				
ANR	1642861	AssignmentExpression	i = 0		1642506	0		=			
ANR	1642862	Identifier	i		1642506	0					
ANR	1642863	PrimaryExpression	0		1642506	1					
ANR	1642864	Condition	i < 64	149:13:2244:2247	1642506	1	True				
ANR	1642865	RelationalExpression	i < 64		1642506	0		<			
ANR	1642866	Identifier	i		1642506	0					
ANR	1642867	PrimaryExpression	64		1642506	1					
ANR	1642868	PostIncDecOperationExpression	i ++	149:19:2250:2252	1642506	2	True				
ANR	1642869	Identifier	i		1642506	0					
ANR	1642870	IncDec	++		1642506	1					
ANR	1642871	CompoundStatement		151:8:2116:2121	1642506	3					
ANR	1642872	IdentifierDeclStatement	int one = 36 ;	151:8:2265:2276	1642506	0	True				
ANR	1642873	IdentifierDecl	one = 36		1642506	0					
ANR	1642874	IdentifierDeclType	int		1642506	0					
ANR	1642875	Identifier	one		1642506	1					
ANR	1642876	AssignmentExpression	one = 36		1642506	2		=			
ANR	1642877	Identifier	one		1642506	0					
ANR	1642878	PrimaryExpression	36		1642506	1					
ANR	1642879	IdentifierDeclStatement	int qns = 4 ;	153:8:2287:2296	1642506	1	True				
ANR	1642880	IdentifierDecl	qns = 4		1642506	0					
ANR	1642881	IdentifierDeclType	int		1642506	0					
ANR	1642882	Identifier	qns		1642506	1					
ANR	1642883	AssignmentExpression	qns = 4		1642506	2		=			
ANR	1642884	Identifier	qns		1642506	0					
ANR	1642885	PrimaryExpression	4		1642506	1					
ANR	1642886	IdentifierDeclStatement	int w ;	155:8:2307:2312	1642506	2	True				
ANR	1642887	IdentifierDecl	w		1642506	0					
ANR	1642888	IdentifierDeclType	int		1642506	0					
ANR	1642889	Identifier	w		1642506	1					
ANR	1642890	ExpressionStatement	w = ABS ( weight [ i ] ) + qns * one	159:8:2325:2352	1642506	3	True				
ANR	1642891	AssignmentExpression	w = ABS ( weight [ i ] ) + qns * one		1642506	0		=			
ANR	1642892	Identifier	w		1642506	0					
ANR	1642893	AdditiveExpression	ABS ( weight [ i ] ) + qns * one		1642506	1		+			
ANR	1642894	CallExpression	ABS ( weight [ i ] )		1642506	0					
ANR	1642895	Callee	ABS		1642506	0					
ANR	1642896	Identifier	ABS		1642506	0					
ANR	1642897	ArgumentList	weight [ i ]		1642506	1					
ANR	1642898	Argument	weight [ i ]		1642506	0					
ANR	1642899	ArrayIndexing	weight [ i ]		1642506	0					
ANR	1642900	Identifier	weight		1642506	0					
ANR	1642901	Identifier	i		1642506	1					
ANR	1642902	MultiplicativeExpression	qns * one		1642506	1		*			
ANR	1642903	Identifier	qns		1642506	0					
ANR	1642904	Identifier	one		1642506	1					
ANR	1642905	ExpressionStatement	w = 15 + ( 48 * qns * one + w / 2 ) / w	161:8:2363:2391	1642506	4	True				
ANR	1642906	AssignmentExpression	w = 15 + ( 48 * qns * one + w / 2 ) / w		1642506	0		=			
ANR	1642907	Identifier	w		1642506	0					
ANR	1642908	AdditiveExpression	15 + ( 48 * qns * one + w / 2 ) / w		1642506	1		+			
ANR	1642909	PrimaryExpression	15		1642506	0					
ANR	1642910	MultiplicativeExpression	( 48 * qns * one + w / 2 ) / w		1642506	1		/			
ANR	1642911	AdditiveExpression	48 * qns * one + w / 2		1642506	0		+			
ANR	1642912	MultiplicativeExpression	48 * qns * one		1642506	0		*			
ANR	1642913	PrimaryExpression	48		1642506	0					
ANR	1642914	MultiplicativeExpression	qns * one		1642506	1		*			
ANR	1642915	Identifier	qns		1642506	0					
ANR	1642916	Identifier	one		1642506	1					
ANR	1642917	MultiplicativeExpression	w / 2		1642506	1		/			
ANR	1642918	Identifier	w		1642506	0					
ANR	1642919	PrimaryExpression	2		1642506	1					
ANR	1642920	Identifier	w		1642506	1					
ANR	1642921	ExpressionStatement	weight [ i ] = w	165:8:2416:2429	1642506	5	True				
ANR	1642922	AssignmentExpression	weight [ i ] = w		1642506	0		=			
ANR	1642923	ArrayIndexing	weight [ i ]		1642506	0					
ANR	1642924	Identifier	weight		1642506	0					
ANR	1642925	Identifier	i		1642506	1					
ANR	1642926	Identifier	w		1642506	1					
ANR	1642927	ExpressionStatement	assert ( w > 0 )	171:8:2498:2509	1642506	6	True				
ANR	1642928	CallExpression	assert ( w > 0 )		1642506	0					
ANR	1642929	Callee	assert		1642506	0					
ANR	1642930	Identifier	assert		1642506	0					
ANR	1642931	ArgumentList	w > 0		1642506	1					
ANR	1642932	Argument	w > 0		1642506	0					
ANR	1642933	RelationalExpression	w > 0		1642506	0		>			
ANR	1642934	Identifier	w		1642506	0					
ANR	1642935	PrimaryExpression	0		1642506	1					
ANR	1642936	ExpressionStatement	assert ( w < ( 1 << 6 ) )	173:8:2520:2536	1642506	7	True				
ANR	1642937	CallExpression	assert ( w < ( 1 << 6 ) )		1642506	0					
ANR	1642938	Callee	assert		1642506	0					
ANR	1642939	Identifier	assert		1642506	0					
ANR	1642940	ArgumentList	w < ( 1 << 6 )		1642506	1					
ANR	1642941	Argument	w < ( 1 << 6 )		1642506	0					
ANR	1642942	RelationalExpression	w < ( 1 << 6 )		1642506	0		<			
ANR	1642943	Identifier	w		1642506	0					
ANR	1642944	ShiftExpression	1 << 6		1642506	1		<<			
ANR	1642945	PrimaryExpression	1		1642506	0					
ANR	1642946	PrimaryExpression	6		1642506	1					
ANR	1642947	ExpressionStatement	sum += w * w	175:8:2547:2557	1642506	8	True				
ANR	1642948	AssignmentExpression	sum += w * w		1642506	0		+=			
ANR	1642949	Identifier	sum		1642506	0					
ANR	1642950	MultiplicativeExpression	w * w		1642506	1		*			
ANR	1642951	Identifier	w		1642506	0					
ANR	1642952	Identifier	w		1642506	1					
ANR	1642953	ExpressionStatement	lambda = sum * ( uint64_t ) s -> lambda2 >> ( FF_LAMBDA_SHIFT - 6 + 6 + 6 + 6 )	179:4:2571:2640	1642506	35	True				
ANR	1642954	AssignmentExpression	lambda = sum * ( uint64_t ) s -> lambda2 >> ( FF_LAMBDA_SHIFT - 6 + 6 + 6 + 6 )		1642506	0		=			
ANR	1642955	Identifier	lambda		1642506	0					
ANR	1642956	ShiftExpression	sum * ( uint64_t ) s -> lambda2 >> ( FF_LAMBDA_SHIFT - 6 + 6 + 6 + 6 )		1642506	1		>>			
ANR	1642957	MultiplicativeExpression	sum * ( uint64_t ) s -> lambda2		1642506	0		*			
ANR	1642958	Identifier	sum		1642506	0					
ANR	1642959	CastExpression	( uint64_t ) s -> lambda2		1642506	1					
ANR	1642960	CastTarget	uint64_t		1642506	0					
ANR	1642961	PtrMemberAccess	s -> lambda2		1642506	1					
ANR	1642962	Identifier	s		1642506	0					
ANR	1642963	Identifier	lambda2		1642506	1					
ANR	1642964	AdditiveExpression	FF_LAMBDA_SHIFT - 6 + 6 + 6 + 6		1642506	1		-			
ANR	1642965	Identifier	FF_LAMBDA_SHIFT		1642506	0					
ANR	1642966	AdditiveExpression	6 + 6 + 6 + 6		1642506	1		+			
ANR	1642967	PrimaryExpression	6		1642506	0					
ANR	1642968	AdditiveExpression	6 + 6 + 6		1642506	1		+			
ANR	1642969	PrimaryExpression	6		1642506	0					
ANR	1642970	AdditiveExpression	6 + 6		1642506	1		+			
ANR	1642971	PrimaryExpression	6		1642506	0					
ANR	1642972	PrimaryExpression	6		1642506	1					
ANR	1642973	CompoundStatement		179:0:2473:2473	1642506	36					
ANR	1642974	Statement	START_TIMER	183:1:2665:2675	1642506	0	True				
ANR	1642975	ExpressionStatement	run = 0	187:4:2690:2695	1642506	1	True				
ANR	1642976	AssignmentExpression	run = 0		1642506	0		=			
ANR	1642977	Identifier	run		1642506	0					
ANR	1642978	PrimaryExpression	0		1642506	1					
ANR	1642979	ExpressionStatement	rle_index = 0	189:4:2702:2713	1642506	2	True				
ANR	1642980	AssignmentExpression	rle_index = 0		1642506	0		=			
ANR	1642981	Identifier	rle_index		1642506	0					
ANR	1642982	PrimaryExpression	0		1642506	1					
ANR	1642983	ForStatement	for ( i = start_i ; i <= last_non_zero ; i ++ )		1642506	3					
ANR	1642984	ForInit	i = start_i ;	191:8:2724:2733	1642506	0	True				
ANR	1642985	AssignmentExpression	i = start_i		1642506	0		=			
ANR	1642986	Identifier	i		1642506	0					
ANR	1642987	Identifier	start_i		1642506	1					
ANR	1642988	Condition	i <= last_non_zero	191:19:2735:2750	1642506	1	True				
ANR	1642989	RelationalExpression	i <= last_non_zero		1642506	0		<=			
ANR	1642990	Identifier	i		1642506	0					
ANR	1642991	Identifier	last_non_zero		1642506	1					
ANR	1642992	PostIncDecOperationExpression	i ++	191:37:2753:2755	1642506	2	True				
ANR	1642993	Identifier	i		1642506	0					
ANR	1642994	IncDec	++		1642506	1					
ANR	1642995	CompoundStatement		193:8:2648:2657	1642506	3					
ANR	1642996	IdentifierDeclStatement	int j = perm_scantable [ i ] ;	193:8:2768:2792	1642506	0	True				
ANR	1642997	IdentifierDecl	j = perm_scantable [ i ]		1642506	0					
ANR	1642998	IdentifierDeclType	int		1642506	0					
ANR	1642999	Identifier	j		1642506	1					
ANR	1643000	AssignmentExpression	j = perm_scantable [ i ]		1642506	2		=			
ANR	1643001	Identifier	j		1642506	0					
ANR	1643002	ArrayIndexing	perm_scantable [ i ]		1642506	1					
ANR	1643003	Identifier	perm_scantable		1642506	0					
ANR	1643004	Identifier	i		1642506	1					
ANR	1643005	IdentifierDeclStatement	const int level = block [ j ] ;	195:8:2803:2828	1642506	1	True				
ANR	1643006	IdentifierDecl	level = block [ j ]		1642506	0					
ANR	1643007	IdentifierDeclType	const int		1642506	0					
ANR	1643008	Identifier	level		1642506	1					
ANR	1643009	AssignmentExpression	level = block [ j ]		1642506	2		=			
ANR	1643010	Identifier	level		1642506	0					
ANR	1643011	ArrayIndexing	block [ j ]		1642506	1					
ANR	1643012	Identifier	block		1642506	0					
ANR	1643013	Identifier	j		1642506	1					
ANR	1643014	IdentifierDeclStatement	int coeff ;	197:8:2839:2848	1642506	2	True				
ANR	1643015	IdentifierDecl	coeff		1642506	0					
ANR	1643016	IdentifierDeclType	int		1642506	0					
ANR	1643017	Identifier	coeff		1642506	1					
ANR	1643018	IfStatement	if ( level )		1642506	3					
ANR	1643019	Condition	level	201:11:2872:2876	1642506	0	True				
ANR	1643020	Identifier	level		1642506	0					
ANR	1643021	CompoundStatement		197:17:2687:2687	1642506	1					
ANR	1643022	IfStatement	if ( level < 0 )		1642506	0					
ANR	1643023	Condition	level < 0	203:15:2896:2902	1642506	0	True				
ANR	1643024	RelationalExpression	level < 0		1642506	0		<			
ANR	1643025	Identifier	level		1642506	0					
ANR	1643026	PrimaryExpression	0		1642506	1					
ANR	1643027	ExpressionStatement	coeff = qmul * level - qadd	203:24:2905:2929	1642506	1	True				
ANR	1643028	AssignmentExpression	coeff = qmul * level - qadd		1642506	0		=			
ANR	1643029	Identifier	coeff		1642506	0					
ANR	1643030	AdditiveExpression	qmul * level - qadd		1642506	1		-			
ANR	1643031	MultiplicativeExpression	qmul * level		1642506	0		*			
ANR	1643032	Identifier	qmul		1642506	0					
ANR	1643033	Identifier	level		1642506	1					
ANR	1643034	Identifier	qadd		1642506	1					
ANR	1643035	ElseStatement	else		1642506	0					
ANR	1643036	ExpressionStatement	coeff = qmul * level + qadd	205:24:2956:2980	1642506	0	True				
ANR	1643037	AssignmentExpression	coeff = qmul * level + qadd		1642506	0		=			
ANR	1643038	Identifier	coeff		1642506	0					
ANR	1643039	AdditiveExpression	qmul * level + qadd		1642506	1		+			
ANR	1643040	MultiplicativeExpression	qmul * level		1642506	0		*			
ANR	1643041	Identifier	qmul		1642506	0					
ANR	1643042	Identifier	level		1642506	1					
ANR	1643043	Identifier	qadd		1642506	1					
ANR	1643044	ExpressionStatement	run_tab [ rle_index ++ ] = run	207:12:2995:3019	1642506	1	True				
ANR	1643045	AssignmentExpression	run_tab [ rle_index ++ ] = run		1642506	0		=			
ANR	1643046	ArrayIndexing	run_tab [ rle_index ++ ]		1642506	0					
ANR	1643047	Identifier	run_tab		1642506	0					
ANR	1643048	PostIncDecOperationExpression	rle_index ++		1642506	1					
ANR	1643049	Identifier	rle_index		1642506	0					
ANR	1643050	IncDec	++		1642506	1					
ANR	1643051	Identifier	run		1642506	1					
ANR	1643052	ExpressionStatement	run = 0	209:12:3034:3039	1642506	2	True				
ANR	1643053	AssignmentExpression	run = 0		1642506	0		=			
ANR	1643054	Identifier	run		1642506	0					
ANR	1643055	PrimaryExpression	0		1642506	1					
ANR	1643056	ExpressionStatement	"s -> dsp . add_8x8basis ( rem , basis [ j ] , coeff )"	213:12:3056:3097	1642506	3	True				
ANR	1643057	CallExpression	"s -> dsp . add_8x8basis ( rem , basis [ j ] , coeff )"		1642506	0					
ANR	1643058	Callee	s -> dsp . add_8x8basis		1642506	0					
ANR	1643059	MemberAccess	s -> dsp . add_8x8basis		1642506	0					
ANR	1643060	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1643061	Identifier	s		1642506	0					
ANR	1643062	Identifier	dsp		1642506	1					
ANR	1643063	Identifier	add_8x8basis		1642506	1					
ANR	1643064	ArgumentList	rem		1642506	1					
ANR	1643065	Argument	rem		1642506	0					
ANR	1643066	Identifier	rem		1642506	0					
ANR	1643067	Argument	basis [ j ]		1642506	1					
ANR	1643068	ArrayIndexing	basis [ j ]		1642506	0					
ANR	1643069	Identifier	basis		1642506	0					
ANR	1643070	Identifier	j		1642506	1					
ANR	1643071	Argument	coeff		1642506	2					
ANR	1643072	Identifier	coeff		1642506	0					
ANR	1643073	ElseStatement	else		1642506	0					
ANR	1643074	CompoundStatement		211:13:2922:2922	1642506	0					
ANR	1643075	ExpressionStatement	run ++	217:12:3128:3133	1642506	0	True				
ANR	1643076	PostIncDecOperationExpression	run ++		1642506	0					
ANR	1643077	Identifier	run		1642506	0					
ANR	1643078	IncDec	++		1642506	1					
ANR	1643079	IfStatement	if ( last_non_zero > 0 )		1642506	4					
ANR	1643080	Condition	last_non_zero > 0	225:3:3178:3192	1642506	0	True				
ANR	1643081	RelationalExpression	last_non_zero > 0		1642506	0		>			
ANR	1643082	Identifier	last_non_zero		1642506	0					
ANR	1643083	PrimaryExpression	0		1642506	1					
ANR	1643084	CompoundStatement		221:19:3003:3003	1642506	1					
ANR	1643085	Statement	STOP_TIMER	227:0:3197:3206	1642506	0	True				
ANR	1643086	Statement	(	227:10:3207:3207	1642506	1	True				
ANR	1643087	Statement	"""init rem[]"""	227:11:3208:3219	1642506	2	True				
ANR	1643088	Statement	)	227:23:3220:3220	1642506	3	True				
ANR	1643089	CompoundStatement		231:0:3040:3040	1642506	37					
ANR	1643090	Statement	START_TIMER	235:1:3232:3242	1642506	0	True				
ANR	1643091	ForStatement	for ( ; ; )		1642506	1					
ANR	1643092	CompoundStatement		243:8:3210:3259	1642506	0					
ANR	1643093	IdentifierDeclStatement	"int best_score = s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , 0 ) ;"	241:8:3275:3335	1642506	0	True				
ANR	1643094	IdentifierDecl	"best_score = s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , 0 )"		1642506	0					
ANR	1643095	IdentifierDeclType	int		1642506	0					
ANR	1643096	Identifier	best_score		1642506	1					
ANR	1643097	AssignmentExpression	"best_score = s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , 0 )"		1642506	2		=			
ANR	1643098	Identifier	best_score		1642506	0					
ANR	1643099	CallExpression	"s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , 0 )"		1642506	1					
ANR	1643100	Callee	s -> dsp . try_8x8basis		1642506	0					
ANR	1643101	MemberAccess	s -> dsp . try_8x8basis		1642506	0					
ANR	1643102	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1643103	Identifier	s		1642506	0					
ANR	1643104	Identifier	dsp		1642506	1					
ANR	1643105	Identifier	try_8x8basis		1642506	1					
ANR	1643106	ArgumentList	rem		1642506	1					
ANR	1643107	Argument	rem		1642506	0					
ANR	1643108	Identifier	rem		1642506	0					
ANR	1643109	Argument	weight		1642506	1					
ANR	1643110	Identifier	weight		1642506	0					
ANR	1643111	Argument	basis [ 0 ]		1642506	2					
ANR	1643112	ArrayIndexing	basis [ 0 ]		1642506	0					
ANR	1643113	Identifier	basis		1642506	0					
ANR	1643114	PrimaryExpression	0		1642506	1					
ANR	1643115	Argument	0		1642506	3					
ANR	1643116	PrimaryExpression	0		1642506	0					
ANR	1643117	IdentifierDeclStatement	int best_coeff = 0 ;	243:8:3346:3362	1642506	1	True				
ANR	1643118	IdentifierDecl	best_coeff = 0		1642506	0					
ANR	1643119	IdentifierDeclType	int		1642506	0					
ANR	1643120	Identifier	best_coeff		1642506	1					
ANR	1643121	AssignmentExpression	best_coeff = 0		1642506	2		=			
ANR	1643122	Identifier	best_coeff		1642506	0					
ANR	1643123	PrimaryExpression	0		1642506	1					
ANR	1643124	IdentifierDeclStatement	int best_change = 0 ;	245:8:3373:3390	1642506	2	True				
ANR	1643125	IdentifierDecl	best_change = 0		1642506	0					
ANR	1643126	IdentifierDeclType	int		1642506	0					
ANR	1643127	Identifier	best_change		1642506	1					
ANR	1643128	AssignmentExpression	best_change = 0		1642506	2		=			
ANR	1643129	Identifier	best_change		1642506	0					
ANR	1643130	PrimaryExpression	0		1642506	1					
ANR	1643131	IdentifierDeclStatement	"int run2 , best_unquant_change = 0 , analyze_gradient ;"	247:8:3401:3450	1642506	3	True				
ANR	1643132	IdentifierDecl	run2		1642506	0					
ANR	1643133	IdentifierDeclType	int		1642506	0					
ANR	1643134	Identifier	run2		1642506	1					
ANR	1643135	IdentifierDecl	best_unquant_change = 0		1642506	1					
ANR	1643136	IdentifierDeclType	int		1642506	0					
ANR	1643137	Identifier	best_unquant_change		1642506	1					
ANR	1643138	AssignmentExpression	best_unquant_change = 0		1642506	2		=			
ANR	1643139	Identifier	best_unquant_change		1642506	0					
ANR	1643140	PrimaryExpression	0		1642506	1					
ANR	1643141	IdentifierDecl	analyze_gradient		1642506	2					
ANR	1643142	IdentifierDeclType	int		1642506	0					
ANR	1643143	Identifier	analyze_gradient		1642506	1					
ANR	1643144	CompoundStatement		247:0:3283:3283	1642506	4					
ANR	1643145	Statement	START_TIMER	251:1:3475:3485	1642506	0	True				
ANR	1643146	ExpressionStatement	analyze_gradient = last_non_zero > 2 || s -> avctx -> quantizer_noise_shaping >= 3	255:8:3504:3582	1642506	1	True				
ANR	1643147	AssignmentExpression	analyze_gradient = last_non_zero > 2 || s -> avctx -> quantizer_noise_shaping >= 3		1642506	0		=			
ANR	1643148	Identifier	analyze_gradient		1642506	0					
ANR	1643149	OrExpression	last_non_zero > 2 || s -> avctx -> quantizer_noise_shaping >= 3		1642506	1		||			
ANR	1643150	RelationalExpression	last_non_zero > 2		1642506	0		>			
ANR	1643151	Identifier	last_non_zero		1642506	0					
ANR	1643152	PrimaryExpression	2		1642506	1					
ANR	1643153	RelationalExpression	s -> avctx -> quantizer_noise_shaping >= 3		1642506	1		>=			
ANR	1643154	PtrMemberAccess	s -> avctx -> quantizer_noise_shaping		1642506	0					
ANR	1643155	PtrMemberAccess	s -> avctx		1642506	0					
ANR	1643156	Identifier	s		1642506	0					
ANR	1643157	Identifier	avctx		1642506	1					
ANR	1643158	Identifier	quantizer_noise_shaping		1642506	1					
ANR	1643159	PrimaryExpression	3		1642506	1					
ANR	1643160	IfStatement	if ( analyze_gradient )		1642506	2					
ANR	1643161	Condition	analyze_gradient	259:11:3598:3613	1642506	0	True				
ANR	1643162	Identifier	analyze_gradient		1642506	0					
ANR	1643163	CompoundStatement		255:28:3424:3424	1642506	1					
ANR	1643164	CompoundStatement		259:0:3448:3448	1642506	0					
ANR	1643165	Statement	START_TIMER	263:1:3640:3650	1642506	0	True				
ANR	1643166	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1642506	1					
ANR	1643167	ForInit	i = 0 ;	267:16:3677:3680	1642506	0	True				
ANR	1643168	AssignmentExpression	i = 0		1642506	0		=			
ANR	1643169	Identifier	i		1642506	0					
ANR	1643170	PrimaryExpression	0		1642506	1					
ANR	1643171	Condition	i < 64	267:21:3682:3685	1642506	1	True				
ANR	1643172	RelationalExpression	i < 64		1642506	0		<			
ANR	1643173	Identifier	i		1642506	0					
ANR	1643174	PrimaryExpression	64		1642506	1					
ANR	1643175	PostIncDecOperationExpression	i ++	267:27:3688:3690	1642506	2	True				
ANR	1643176	Identifier	i		1642506	0					
ANR	1643177	IncDec	++		1642506	1					
ANR	1643178	CompoundStatement		265:16:3520:3536	1642506	3					
ANR	1643179	IdentifierDeclStatement	int w = weight [ i ] ;	269:16:3711:3727	1642506	0	True				
ANR	1643180	IdentifierDecl	w = weight [ i ]		1642506	0					
ANR	1643181	IdentifierDeclType	int		1642506	0					
ANR	1643182	Identifier	w		1642506	1					
ANR	1643183	AssignmentExpression	w = weight [ i ]		1642506	2		=			
ANR	1643184	Identifier	w		1642506	0					
ANR	1643185	ArrayIndexing	weight [ i ]		1642506	1					
ANR	1643186	Identifier	weight		1642506	0					
ANR	1643187	Identifier	i		1642506	1					
ANR	1643188	ExpressionStatement	d1 [ i ] = ( rem [ i ] * w * w + ( 1 << ( RECON_SHIFT + 12 - 1 ) ) ) >> ( RECON_SHIFT + 12 )	273:16:3760:3824	1642506	1	True				
ANR	1643189	AssignmentExpression	d1 [ i ] = ( rem [ i ] * w * w + ( 1 << ( RECON_SHIFT + 12 - 1 ) ) ) >> ( RECON_SHIFT + 12 )		1642506	0		=			
ANR	1643190	ArrayIndexing	d1 [ i ]		1642506	0					
ANR	1643191	Identifier	d1		1642506	0					
ANR	1643192	Identifier	i		1642506	1					
ANR	1643193	ShiftExpression	( rem [ i ] * w * w + ( 1 << ( RECON_SHIFT + 12 - 1 ) ) ) >> ( RECON_SHIFT + 12 )		1642506	1		>>			
ANR	1643194	AdditiveExpression	rem [ i ] * w * w + ( 1 << ( RECON_SHIFT + 12 - 1 ) )		1642506	0		+			
ANR	1643195	MultiplicativeExpression	rem [ i ] * w * w		1642506	0		*			
ANR	1643196	ArrayIndexing	rem [ i ]		1642506	0					
ANR	1643197	Identifier	rem		1642506	0					
ANR	1643198	Identifier	i		1642506	1					
ANR	1643199	MultiplicativeExpression	w * w		1642506	1		*			
ANR	1643200	Identifier	w		1642506	0					
ANR	1643201	Identifier	w		1642506	1					
ANR	1643202	ShiftExpression	1 << ( RECON_SHIFT + 12 - 1 )		1642506	1		<<			
ANR	1643203	PrimaryExpression	1		1642506	0					
ANR	1643204	AdditiveExpression	RECON_SHIFT + 12 - 1		1642506	1		+			
ANR	1643205	Identifier	RECON_SHIFT		1642506	0					
ANR	1643206	AdditiveExpression	12 - 1		1642506	1		-			
ANR	1643207	PrimaryExpression	12		1642506	0					
ANR	1643208	PrimaryExpression	1		1642506	1					
ANR	1643209	AdditiveExpression	RECON_SHIFT + 12		1642506	1		+			
ANR	1643210	Identifier	RECON_SHIFT		1642506	0					
ANR	1643211	PrimaryExpression	12		1642506	1					
ANR	1643212	Statement	STOP_TIMER	279:0:3863:3872	1642506	2	True				
ANR	1643213	Statement	(	279:10:3873:3873	1642506	3	True				
ANR	1643214	Statement	"""rem*w*w"""	279:11:3874:3882	1642506	4	True				
ANR	1643215	Statement	)	279:20:3883:3883	1642506	5	True				
ANR	1643216	CompoundStatement		277:0:3696:3696	1642506	1					
ANR	1643217	Statement	START_TIMER	281:1:3888:3898	1642506	0	True				
ANR	1643218	ExpressionStatement	s -> dsp . fdct ( d1 )	285:12:3921:3936	1642506	1	True				
ANR	1643219	CallExpression	s -> dsp . fdct ( d1 )		1642506	0					
ANR	1643220	Callee	s -> dsp . fdct		1642506	0					
ANR	1643221	MemberAccess	s -> dsp . fdct		1642506	0					
ANR	1643222	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1643223	Identifier	s		1642506	0					
ANR	1643224	Identifier	dsp		1642506	1					
ANR	1643225	Identifier	fdct		1642506	1					
ANR	1643226	ArgumentList	d1		1642506	1					
ANR	1643227	Argument	d1		1642506	0					
ANR	1643228	Identifier	d1		1642506	0					
ANR	1643229	Statement	STOP_TIMER	289:0:3960:3969	1642506	2	True				
ANR	1643230	Statement	(	289:10:3970:3970	1642506	3	True				
ANR	1643231	Statement	"""dct"""	289:11:3971:3975	1642506	4	True				
ANR	1643232	Statement	)	289:16:3976:3976	1642506	5	True				
ANR	1643233	IfStatement	if ( start_i )		1642506	3					
ANR	1643234	Condition	start_i	297:11:4012:4018	1642506	0	True				
ANR	1643235	Identifier	start_i		1642506	0					
ANR	1643236	CompoundStatement		297:12:3884:3905	1642506	1					
ANR	1643237	IdentifierDeclStatement	const int level = block [ 0 ] ;	299:12:4035:4060	1642506	0	True				
ANR	1643238	IdentifierDecl	level = block [ 0 ]		1642506	0					
ANR	1643239	IdentifierDeclType	const int		1642506	0					
ANR	1643240	Identifier	level		1642506	1					
ANR	1643241	AssignmentExpression	level = block [ 0 ]		1642506	2		=			
ANR	1643242	Identifier	level		1642506	0					
ANR	1643243	ArrayIndexing	block [ 0 ]		1642506	1					
ANR	1643244	Identifier	block		1642506	0					
ANR	1643245	PrimaryExpression	0		1642506	1					
ANR	1643246	IdentifierDeclStatement	"int change , old_coeff ;"	301:12:4075:4096	1642506	1	True				
ANR	1643247	IdentifierDecl	change		1642506	0					
ANR	1643248	IdentifierDeclType	int		1642506	0					
ANR	1643249	Identifier	change		1642506	1					
ANR	1643250	IdentifierDecl	old_coeff		1642506	1					
ANR	1643251	IdentifierDeclType	int		1642506	0					
ANR	1643252	Identifier	old_coeff		1642506	1					
ANR	1643253	ExpressionStatement	assert ( s -> mb_intra )	305:12:4113:4132	1642506	2	True				
ANR	1643254	CallExpression	assert ( s -> mb_intra )		1642506	0					
ANR	1643255	Callee	assert		1642506	0					
ANR	1643256	Identifier	assert		1642506	0					
ANR	1643257	ArgumentList	s -> mb_intra		1642506	1					
ANR	1643258	Argument	s -> mb_intra		1642506	0					
ANR	1643259	PtrMemberAccess	s -> mb_intra		1642506	0					
ANR	1643260	Identifier	s		1642506	0					
ANR	1643261	Identifier	mb_intra		1642506	1					
ANR	1643262	ExpressionStatement	old_coeff = q * level	309:12:4161:4179	1642506	3	True				
ANR	1643263	AssignmentExpression	old_coeff = q * level		1642506	0		=			
ANR	1643264	Identifier	old_coeff		1642506	0					
ANR	1643265	MultiplicativeExpression	q * level		1642506	1		*			
ANR	1643266	Identifier	q		1642506	0					
ANR	1643267	Identifier	level		1642506	1					
ANR	1643268	ForStatement	for ( change = - 1 ; change <= 1 ; change += 2 )		1642506	4					
ANR	1643269	ForInit	change = - 1 ;	313:16:4212:4221	1642506	0	True				
ANR	1643270	AssignmentExpression	change = - 1		1642506	0		=			
ANR	1643271	Identifier	change		1642506	0					
ANR	1643272	UnaryOperationExpression	- 1		1642506	1					
ANR	1643273	UnaryOperator	-		1642506	0					
ANR	1643274	PrimaryExpression	1		1642506	1					
ANR	1643275	Condition	change <= 1	313:27:4223:4231	1642506	1	True				
ANR	1643276	RelationalExpression	change <= 1		1642506	0		<=			
ANR	1643277	Identifier	change		1642506	0					
ANR	1643278	PrimaryExpression	1		1642506	1					
ANR	1643279	AssignmentExpression	change += 2	313:38:4234:4242	1642506	2	True	+=			
ANR	1643280	Identifier	change		1642506	0					
ANR	1643281	PrimaryExpression	2		1642506	1					
ANR	1643282	CompoundStatement		313:16:4120:4140	1642506	3					
ANR	1643283	IdentifierDeclStatement	int new_level = level + change ;	315:16:4263:4292	1642506	0	True				
ANR	1643284	IdentifierDecl	new_level = level + change		1642506	0					
ANR	1643285	IdentifierDeclType	int		1642506	0					
ANR	1643286	Identifier	new_level		1642506	1					
ANR	1643287	AssignmentExpression	new_level = level + change		1642506	2		=			
ANR	1643288	Identifier	new_level		1642506	0					
ANR	1643289	AdditiveExpression	level + change		1642506	1		+			
ANR	1643290	Identifier	level		1642506	0					
ANR	1643291	Identifier	change		1642506	1					
ANR	1643292	IdentifierDeclStatement	"int score , new_coeff ;"	317:16:4311:4331	1642506	1	True				
ANR	1643293	IdentifierDecl	score		1642506	0					
ANR	1643294	IdentifierDeclType	int		1642506	0					
ANR	1643295	Identifier	score		1642506	1					
ANR	1643296	IdentifierDecl	new_coeff		1642506	1					
ANR	1643297	IdentifierDeclType	int		1642506	0					
ANR	1643298	Identifier	new_coeff		1642506	1					
ANR	1643299	ExpressionStatement	new_coeff = q * new_level	321:16:4368:4390	1642506	2	True				
ANR	1643300	AssignmentExpression	new_coeff = q * new_level		1642506	0		=			
ANR	1643301	Identifier	new_coeff		1642506	0					
ANR	1643302	MultiplicativeExpression	q * new_level		1642506	1		*			
ANR	1643303	Identifier	q		1642506	0					
ANR	1643304	Identifier	new_level		1642506	1					
ANR	1643305	IfStatement	if ( new_coeff >= 2048 || new_coeff < 0 )		1642506	3					
ANR	1643306	Condition	new_coeff >= 2048 || new_coeff < 0	323:19:4412:4445	1642506	0	True				
ANR	1643307	OrExpression	new_coeff >= 2048 || new_coeff < 0		1642506	0		||			
ANR	1643308	RelationalExpression	new_coeff >= 2048		1642506	0		>=			
ANR	1643309	Identifier	new_coeff		1642506	0					
ANR	1643310	PrimaryExpression	2048		1642506	1					
ANR	1643311	RelationalExpression	new_coeff < 0		1642506	1		<			
ANR	1643312	Identifier	new_coeff		1642506	0					
ANR	1643313	PrimaryExpression	0		1642506	1					
ANR	1643314	ContinueStatement	continue ;	325:20:4469:4477	1642506	1	True				
ANR	1643315	ExpressionStatement	"score = s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , new_coeff - old_coeff )"	329:16:4498:4570	1642506	4	True				
ANR	1643316	AssignmentExpression	"score = s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , new_coeff - old_coeff )"		1642506	0		=			
ANR	1643317	Identifier	score		1642506	0					
ANR	1643318	CallExpression	"s -> dsp . try_8x8basis ( rem , weight , basis [ 0 ] , new_coeff - old_coeff )"		1642506	1					
ANR	1643319	Callee	s -> dsp . try_8x8basis		1642506	0					
ANR	1643320	MemberAccess	s -> dsp . try_8x8basis		1642506	0					
ANR	1643321	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1643322	Identifier	s		1642506	0					
ANR	1643323	Identifier	dsp		1642506	1					
ANR	1643324	Identifier	try_8x8basis		1642506	1					
ANR	1643325	ArgumentList	rem		1642506	1					
ANR	1643326	Argument	rem		1642506	0					
ANR	1643327	Identifier	rem		1642506	0					
ANR	1643328	Argument	weight		1642506	1					
ANR	1643329	Identifier	weight		1642506	0					
ANR	1643330	Argument	basis [ 0 ]		1642506	2					
ANR	1643331	ArrayIndexing	basis [ 0 ]		1642506	0					
ANR	1643332	Identifier	basis		1642506	0					
ANR	1643333	PrimaryExpression	0		1642506	1					
ANR	1643334	Argument	new_coeff - old_coeff		1642506	3					
ANR	1643335	AdditiveExpression	new_coeff - old_coeff		1642506	0		-			
ANR	1643336	Identifier	new_coeff		1642506	0					
ANR	1643337	Identifier	old_coeff		1642506	1					
ANR	1643338	IfStatement	if ( score < best_score )		1642506	5					
ANR	1643339	Condition	score < best_score	331:19:4592:4607	1642506	0	True				
ANR	1643340	RelationalExpression	score < best_score		1642506	0		<			
ANR	1643341	Identifier	score		1642506	0					
ANR	1643342	Identifier	best_score		1642506	1					
ANR	1643343	CompoundStatement		327:36:4418:4418	1642506	1					
ANR	1643344	ExpressionStatement	best_score = score	333:20:4632:4649	1642506	0	True				
ANR	1643345	AssignmentExpression	best_score = score		1642506	0		=			
ANR	1643346	Identifier	best_score		1642506	0					
ANR	1643347	Identifier	score		1642506	1					
ANR	1643348	ExpressionStatement	best_coeff = 0	335:20:4672:4685	1642506	1	True				
ANR	1643349	AssignmentExpression	best_coeff = 0		1642506	0		=			
ANR	1643350	Identifier	best_coeff		1642506	0					
ANR	1643351	PrimaryExpression	0		1642506	1					
ANR	1643352	ExpressionStatement	best_change = change	337:20:4708:4727	1642506	2	True				
ANR	1643353	AssignmentExpression	best_change = change		1642506	0		=			
ANR	1643354	Identifier	best_change		1642506	0					
ANR	1643355	Identifier	change		1642506	1					
ANR	1643356	ExpressionStatement	best_unquant_change = new_coeff - old_coeff	339:20:4750:4792	1642506	3	True				
ANR	1643357	AssignmentExpression	best_unquant_change = new_coeff - old_coeff		1642506	0		=			
ANR	1643358	Identifier	best_unquant_change		1642506	0					
ANR	1643359	AdditiveExpression	new_coeff - old_coeff		1642506	1		-			
ANR	1643360	Identifier	new_coeff		1642506	0					
ANR	1643361	Identifier	old_coeff		1642506	1					
ANR	1643362	ExpressionStatement	run = 0	349:8:4858:4863	1642506	4	True				
ANR	1643363	AssignmentExpression	run = 0		1642506	0		=			
ANR	1643364	Identifier	run		1642506	0					
ANR	1643365	PrimaryExpression	0		1642506	1					
ANR	1643366	ExpressionStatement	rle_index = 0	351:8:4874:4885	1642506	5	True				
ANR	1643367	AssignmentExpression	rle_index = 0		1642506	0		=			
ANR	1643368	Identifier	rle_index		1642506	0					
ANR	1643369	PrimaryExpression	0		1642506	1					
ANR	1643370	ExpressionStatement	run2 = run_tab [ rle_index ++ ]	353:8:4896:4922	1642506	6	True				
ANR	1643371	AssignmentExpression	run2 = run_tab [ rle_index ++ ]		1642506	0		=			
ANR	1643372	Identifier	run2		1642506	0					
ANR	1643373	ArrayIndexing	run_tab [ rle_index ++ ]		1642506	1					
ANR	1643374	Identifier	run_tab		1642506	0					
ANR	1643375	PostIncDecOperationExpression	rle_index ++		1642506	1					
ANR	1643376	Identifier	rle_index		1642506	0					
ANR	1643377	IncDec	++		1642506	1					
ANR	1643378	ExpressionStatement	prev_level = 0	355:8:4933:4945	1642506	7	True				
ANR	1643379	AssignmentExpression	prev_level = 0		1642506	0		=			
ANR	1643380	Identifier	prev_level		1642506	0					
ANR	1643381	PrimaryExpression	0		1642506	1					
ANR	1643382	ExpressionStatement	prev_run = 0	357:8:4956:4966	1642506	8	True				
ANR	1643383	AssignmentExpression	prev_run = 0		1642506	0		=			
ANR	1643384	Identifier	prev_run		1642506	0					
ANR	1643385	PrimaryExpression	0		1642506	1					
ANR	1643386	ForStatement	for ( i = start_i ; i < 64 ; i ++ )		1642506	9					
ANR	1643387	ForInit	i = start_i ;	361:12:4983:4992	1642506	0	True				
ANR	1643388	AssignmentExpression	i = start_i		1642506	0		=			
ANR	1643389	Identifier	i		1642506	0					
ANR	1643390	Identifier	start_i		1642506	1					
ANR	1643391	Condition	i < 64	361:23:4994:4997	1642506	1	True				
ANR	1643392	RelationalExpression	i < 64		1642506	0		<			
ANR	1643393	Identifier	i		1642506	0					
ANR	1643394	PrimaryExpression	64		1642506	1					
ANR	1643395	PostIncDecOperationExpression	i ++	361:29:5000:5002	1642506	2	True				
ANR	1643396	Identifier	i		1642506	0					
ANR	1643397	IncDec	++		1642506	1					
ANR	1643398	CompoundStatement		363:12:4907:4928	1642506	3					
ANR	1643399	IdentifierDeclStatement	int j = perm_scantable [ i ] ;	363:12:5019:5043	1642506	0	True				
ANR	1643400	IdentifierDecl	j = perm_scantable [ i ]		1642506	0					
ANR	1643401	IdentifierDeclType	int		1642506	0					
ANR	1643402	Identifier	j		1642506	1					
ANR	1643403	AssignmentExpression	j = perm_scantable [ i ]		1642506	2		=			
ANR	1643404	Identifier	j		1642506	0					
ANR	1643405	ArrayIndexing	perm_scantable [ i ]		1642506	1					
ANR	1643406	Identifier	perm_scantable		1642506	0					
ANR	1643407	Identifier	i		1642506	1					
ANR	1643408	IdentifierDeclStatement	const int level = block [ j ] ;	365:12:5058:5083	1642506	1	True				
ANR	1643409	IdentifierDecl	level = block [ j ]		1642506	0					
ANR	1643410	IdentifierDeclType	const int		1642506	0					
ANR	1643411	Identifier	level		1642506	1					
ANR	1643412	AssignmentExpression	level = block [ j ]		1642506	2		=			
ANR	1643413	Identifier	level		1642506	0					
ANR	1643414	ArrayIndexing	block [ j ]		1642506	1					
ANR	1643415	Identifier	block		1642506	0					
ANR	1643416	Identifier	j		1642506	1					
ANR	1643417	IdentifierDeclStatement	"int change , old_coeff ;"	367:12:5098:5119	1642506	2	True				
ANR	1643418	IdentifierDecl	change		1642506	0					
ANR	1643419	IdentifierDeclType	int		1642506	0					
ANR	1643420	Identifier	change		1642506	1					
ANR	1643421	IdentifierDecl	old_coeff		1642506	1					
ANR	1643422	IdentifierDeclType	int		1642506	0					
ANR	1643423	Identifier	old_coeff		1642506	1					
ANR	1643424	IfStatement	if ( s -> avctx -> quantizer_noise_shaping < 3 && i > last_non_zero + 1 )		1642506	3					
ANR	1643425	Condition	s -> avctx -> quantizer_noise_shaping < 3 && i > last_non_zero + 1	371:15:5139:5200	1642506	0	True				
ANR	1643426	AndExpression	s -> avctx -> quantizer_noise_shaping < 3 && i > last_non_zero + 1		1642506	0		&&			
ANR	1643427	RelationalExpression	s -> avctx -> quantizer_noise_shaping < 3		1642506	0		<			
ANR	1643428	PtrMemberAccess	s -> avctx -> quantizer_noise_shaping		1642506	0					
ANR	1643429	PtrMemberAccess	s -> avctx		1642506	0					
ANR	1643430	Identifier	s		1642506	0					
ANR	1643431	Identifier	avctx		1642506	1					
ANR	1643432	Identifier	quantizer_noise_shaping		1642506	1					
ANR	1643433	PrimaryExpression	3		1642506	1					
ANR	1643434	RelationalExpression	i > last_non_zero + 1		1642506	1		>			
ANR	1643435	Identifier	i		1642506	0					
ANR	1643436	AdditiveExpression	last_non_zero + 1		1642506	1		+			
ANR	1643437	Identifier	last_non_zero		1642506	0					
ANR	1643438	PrimaryExpression	1		1642506	1					
ANR	1643439	BreakStatement	break ;	373:16:5220:5225	1642506	1	True				
ANR	1643440	IfStatement	if ( level )		1642506	4					
ANR	1643441	Condition	level	377:15:5245:5249	1642506	0	True				
ANR	1643442	Identifier	level		1642506	0					
ANR	1643443	CompoundStatement		373:21:5060:5060	1642506	1					
ANR	1643444	IfStatement	if ( level < 0 )		1642506	0					
ANR	1643445	Condition	level < 0	379:19:5273:5279	1642506	0	True				
ANR	1643446	RelationalExpression	level < 0		1642506	0		<			
ANR	1643447	Identifier	level		1642506	0					
ANR	1643448	PrimaryExpression	0		1642506	1					
ANR	1643449	ExpressionStatement	old_coeff = qmul * level - qadd	379:28:5282:5310	1642506	1	True				
ANR	1643450	AssignmentExpression	old_coeff = qmul * level - qadd		1642506	0		=			
ANR	1643451	Identifier	old_coeff		1642506	0					
ANR	1643452	AdditiveExpression	qmul * level - qadd		1642506	1		-			
ANR	1643453	MultiplicativeExpression	qmul * level		1642506	0		*			
ANR	1643454	Identifier	qmul		1642506	0					
ANR	1643455	Identifier	level		1642506	1					
ANR	1643456	Identifier	qadd		1642506	1					
ANR	1643457	ElseStatement	else		1642506	0					
ANR	1643458	ExpressionStatement	old_coeff = qmul * level + qadd	381:28:5341:5369	1642506	0	True				
ANR	1643459	AssignmentExpression	old_coeff = qmul * level + qadd		1642506	0		=			
ANR	1643460	Identifier	old_coeff		1642506	0					
ANR	1643461	AdditiveExpression	qmul * level + qadd		1642506	1		+			
ANR	1643462	MultiplicativeExpression	qmul * level		1642506	0		*			
ANR	1643463	Identifier	qmul		1642506	0					
ANR	1643464	Identifier	level		1642506	1					
ANR	1643465	Identifier	qadd		1642506	1					
ANR	1643466	ExpressionStatement	run2 = run_tab [ rle_index ++ ]	383:16:5388:5414	1642506	1	True				
ANR	1643467	AssignmentExpression	run2 = run_tab [ rle_index ++ ]		1642506	0		=			
ANR	1643468	Identifier	run2		1642506	0					
ANR	1643469	ArrayIndexing	run_tab [ rle_index ++ ]		1642506	1					
ANR	1643470	Identifier	run_tab		1642506	0					
ANR	1643471	PostIncDecOperationExpression	rle_index ++		1642506	1					
ANR	1643472	Identifier	rle_index		1642506	0					
ANR	1643473	IncDec	++		1642506	1					
ANR	1643474	ElseStatement	else		1642506	0					
ANR	1643475	CompoundStatement		381:17:5270:5270	1642506	0					
ANR	1643476	ExpressionStatement	old_coeff = 0	387:16:5480:5491	1642506	0	True				
ANR	1643477	AssignmentExpression	old_coeff = 0		1642506	0		=			
ANR	1643478	Identifier	old_coeff		1642506	0					
ANR	1643479	PrimaryExpression	0		1642506	1					
ANR	1643480	ExpressionStatement	run2 --	389:16:5510:5516	1642506	1	True				
ANR	1643481	PostIncDecOperationExpression	run2 --		1642506	0					
ANR	1643482	Identifier	run2		1642506	0					
ANR	1643483	IncDec	--		1642506	1					
ANR	1643484	ExpressionStatement	assert ( run2 >= 0 || i >= last_non_zero )	391:16:5535:5573	1642506	2	True				
ANR	1643485	CallExpression	assert ( run2 >= 0 || i >= last_non_zero )		1642506	0					
ANR	1643486	Callee	assert		1642506	0					
ANR	1643487	Identifier	assert		1642506	0					
ANR	1643488	ArgumentList	run2 >= 0 || i >= last_non_zero		1642506	1					
ANR	1643489	Argument	run2 >= 0 || i >= last_non_zero		1642506	0					
ANR	1643490	OrExpression	run2 >= 0 || i >= last_non_zero		1642506	0		||			
ANR	1643491	RelationalExpression	run2 >= 0		1642506	0		>=			
ANR	1643492	Identifier	run2		1642506	0					
ANR	1643493	PrimaryExpression	0		1642506	1					
ANR	1643494	RelationalExpression	i >= last_non_zero		1642506	1		>=			
ANR	1643495	Identifier	i		1642506	0					
ANR	1643496	Identifier	last_non_zero		1642506	1					
ANR	1643497	ForStatement	for ( change = - 1 ; change <= 1 ; change += 2 )		1642506	5					
ANR	1643498	ForInit	change = - 1 ;	397:16:5621:5630	1642506	0	True				
ANR	1643499	AssignmentExpression	change = - 1		1642506	0		=			
ANR	1643500	Identifier	change		1642506	0					
ANR	1643501	UnaryOperationExpression	- 1		1642506	1					
ANR	1643502	UnaryOperator	-		1642506	0					
ANR	1643503	PrimaryExpression	1		1642506	1					
ANR	1643504	Condition	change <= 1	397:27:5632:5640	1642506	1	True				
ANR	1643505	RelationalExpression	change <= 1		1642506	0		<=			
ANR	1643506	Identifier	change		1642506	0					
ANR	1643507	PrimaryExpression	1		1642506	1					
ANR	1643508	AssignmentExpression	change += 2	397:38:5643:5651	1642506	2	True	+=			
ANR	1643509	Identifier	change		1642506	0					
ANR	1643510	PrimaryExpression	2		1642506	1					
ANR	1643511	CompoundStatement		397:16:5529:5565	1642506	3					
ANR	1643512	IdentifierDeclStatement	int new_level = level + change ;	399:16:5672:5701	1642506	0	True				
ANR	1643513	IdentifierDecl	new_level = level + change		1642506	0					
ANR	1643514	IdentifierDeclType	int		1642506	0					
ANR	1643515	Identifier	new_level		1642506	1					
ANR	1643516	AssignmentExpression	new_level = level + change		1642506	2		=			
ANR	1643517	Identifier	new_level		1642506	0					
ANR	1643518	AdditiveExpression	level + change		1642506	1		+			
ANR	1643519	Identifier	level		1642506	0					
ANR	1643520	Identifier	change		1642506	1					
ANR	1643521	IdentifierDeclStatement	"int score , new_coeff , unquant_change ;"	401:16:5720:5756	1642506	1	True				
ANR	1643522	IdentifierDecl	score		1642506	0					
ANR	1643523	IdentifierDeclType	int		1642506	0					
ANR	1643524	Identifier	score		1642506	1					
ANR	1643525	IdentifierDecl	new_coeff		1642506	1					
ANR	1643526	IdentifierDeclType	int		1642506	0					
ANR	1643527	Identifier	new_coeff		1642506	1					
ANR	1643528	IdentifierDecl	unquant_change		1642506	2					
ANR	1643529	IdentifierDeclType	int		1642506	0					
ANR	1643530	Identifier	unquant_change		1642506	1					
ANR	1643531	ExpressionStatement	score = 0	405:16:5793:5800	1642506	2	True				
ANR	1643532	AssignmentExpression	score = 0		1642506	0		=			
ANR	1643533	Identifier	score		1642506	0					
ANR	1643534	PrimaryExpression	0		1642506	1					
ANR	1643535	IfStatement	if ( s -> avctx -> quantizer_noise_shaping < 2 && ABS ( new_level ) > ABS ( level ) )		1642506	3					
ANR	1643536	Condition	s -> avctx -> quantizer_noise_shaping < 2 && ABS ( new_level ) > ABS ( level )	407:19:5822:5889	1642506	0	True				
ANR	1643537	AndExpression	s -> avctx -> quantizer_noise_shaping < 2 && ABS ( new_level ) > ABS ( level )		1642506	0		&&			
ANR	1643538	RelationalExpression	s -> avctx -> quantizer_noise_shaping < 2		1642506	0		<			
ANR	1643539	PtrMemberAccess	s -> avctx -> quantizer_noise_shaping		1642506	0					
ANR	1643540	PtrMemberAccess	s -> avctx		1642506	0					
ANR	1643541	Identifier	s		1642506	0					
ANR	1643542	Identifier	avctx		1642506	1					
ANR	1643543	Identifier	quantizer_noise_shaping		1642506	1					
ANR	1643544	PrimaryExpression	2		1642506	1					
ANR	1643545	RelationalExpression	ABS ( new_level ) > ABS ( level )		1642506	1		>			
ANR	1643546	CallExpression	ABS ( new_level )		1642506	0					
ANR	1643547	Callee	ABS		1642506	0					
ANR	1643548	Identifier	ABS		1642506	0					
ANR	1643549	ArgumentList	new_level		1642506	1					
ANR	1643550	Argument	new_level		1642506	0					
ANR	1643551	Identifier	new_level		1642506	0					
ANR	1643552	CallExpression	ABS ( level )		1642506	1					
ANR	1643553	Callee	ABS		1642506	0					
ANR	1643554	Identifier	ABS		1642506	0					
ANR	1643555	ArgumentList	level		1642506	1					
ANR	1643556	Argument	level		1642506	0					
ANR	1643557	Identifier	level		1642506	0					
ANR	1643558	ContinueStatement	continue ;	409:19:5912:5920	1642506	1	True				
ANR	1643559	IfStatement	if ( new_level )		1642506	4					
ANR	1643560	Condition	new_level	413:19:5944:5952	1642506	0	True				
ANR	1643561	Identifier	new_level		1642506	0					
ANR	1643562	CompoundStatement		409:29:5763:5763	1642506	1					
ANR	1643563	IfStatement	if ( new_level < 0 )		1642506	0					
ANR	1643564	Condition	new_level < 0	415:23:5980:5990	1642506	0	True				
ANR	1643565	RelationalExpression	new_level < 0		1642506	0		<			
ANR	1643566	Identifier	new_level		1642506	0					
ANR	1643567	PrimaryExpression	0		1642506	1					
ANR	1643568	ExpressionStatement	new_coeff = qmul * new_level - qadd	415:36:5993:6025	1642506	1	True				
ANR	1643569	AssignmentExpression	new_coeff = qmul * new_level - qadd		1642506	0		=			
ANR	1643570	Identifier	new_coeff		1642506	0					
ANR	1643571	AdditiveExpression	qmul * new_level - qadd		1642506	1		-			
ANR	1643572	MultiplicativeExpression	qmul * new_level		1642506	0		*			
ANR	1643573	Identifier	qmul		1642506	0					
ANR	1643574	Identifier	new_level		1642506	1					
ANR	1643575	Identifier	qadd		1642506	1					
ANR	1643576	ElseStatement	else		1642506	0					
ANR	1643577	ExpressionStatement	new_coeff = qmul * new_level + qadd	417:36:6064:6096	1642506	0	True				
ANR	1643578	AssignmentExpression	new_coeff = qmul * new_level + qadd		1642506	0		=			
ANR	1643579	Identifier	new_coeff		1642506	0					
ANR	1643580	AdditiveExpression	qmul * new_level + qadd		1642506	1		+			
ANR	1643581	MultiplicativeExpression	qmul * new_level		1642506	0		*			
ANR	1643582	Identifier	qmul		1642506	0					
ANR	1643583	Identifier	new_level		1642506	1					
ANR	1643584	Identifier	qadd		1642506	1					
ANR	1643585	IfStatement	if ( new_coeff >= 2048 || new_coeff <= - 2048 )		1642506	1					
ANR	1643586	Condition	new_coeff >= 2048 || new_coeff <= - 2048	419:23:6122:6160	1642506	0	True				
ANR	1643587	OrExpression	new_coeff >= 2048 || new_coeff <= - 2048		1642506	0		||			
ANR	1643588	RelationalExpression	new_coeff >= 2048		1642506	0		>=			
ANR	1643589	Identifier	new_coeff		1642506	0					
ANR	1643590	PrimaryExpression	2048		1642506	1					
ANR	1643591	RelationalExpression	new_coeff <= - 2048		1642506	1		<=			
ANR	1643592	Identifier	new_coeff		1642506	0					
ANR	1643593	UnaryOperationExpression	- 2048		1642506	1					
ANR	1643594	UnaryOperator	-		1642506	0					
ANR	1643595	PrimaryExpression	2048		1642506	1					
ANR	1643596	ContinueStatement	continue ;	421:24:6188:6196	1642506	1	True				
ANR	1643597	IfStatement	if ( level )		1642506	2					
ANR	1643598	Condition	level	427:23:6292:6296	1642506	0	True				
ANR	1643599	Identifier	level		1642506	0					
ANR	1643600	CompoundStatement		423:29:6107:6107	1642506	1					
ANR	1643601	IfStatement	if ( level < 63 && level > - 63 )		1642506	0					
ANR	1643602	Condition	level < 63 && level > - 63	429:27:6328:6352	1642506	0	True				
ANR	1643603	AndExpression	level < 63 && level > - 63		1642506	0		&&			
ANR	1643604	RelationalExpression	level < 63		1642506	0		<			
ANR	1643605	Identifier	level		1642506	0					
ANR	1643606	PrimaryExpression	63		1642506	1					
ANR	1643607	RelationalExpression	level > - 63		1642506	1		>			
ANR	1643608	Identifier	level		1642506	0					
ANR	1643609	UnaryOperationExpression	- 63		1642506	1					
ANR	1643610	UnaryOperator	-		1642506	0					
ANR	1643611	PrimaryExpression	63		1642506	1					
ANR	1643612	CompoundStatement		425:53:6163:6163	1642506	1					
ANR	1643613	IfStatement	if ( i < last_non_zero )		1642506	0					
ANR	1643614	Condition	i < last_non_zero	431:31:6388:6404	1642506	0	True				
ANR	1643615	RelationalExpression	i < last_non_zero		1642506	0		<			
ANR	1643616	Identifier	i		1642506	0					
ANR	1643617	Identifier	last_non_zero		1642506	1					
ANR	1643618	ExpressionStatement	"score += length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"	433:32:6440:6578	1642506	1	True				
ANR	1643619	AssignmentExpression	"score += length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	0		+=			
ANR	1643620	Identifier	score		1642506	0					
ANR	1643621	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	1		-			
ANR	1643622	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ]"		1642506	0					
ANR	1643623	Identifier	length		1642506	0					
ANR	1643624	CallExpression	"UNI_AC_ENC_INDEX ( run , new_level + 64 )"		1642506	1					
ANR	1643625	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643626	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643627	ArgumentList	run		1642506	1					
ANR	1643628	Argument	run		1642506	0					
ANR	1643629	Identifier	run		1642506	0					
ANR	1643630	Argument	new_level + 64		1642506	1					
ANR	1643631	AdditiveExpression	new_level + 64		1642506	0		+			
ANR	1643632	Identifier	new_level		1642506	0					
ANR	1643633	PrimaryExpression	64		1642506	1					
ANR	1643634	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	1					
ANR	1643635	Identifier	length		1642506	0					
ANR	1643636	CallExpression	"UNI_AC_ENC_INDEX ( run , level + 64 )"		1642506	1					
ANR	1643637	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643638	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643639	ArgumentList	run		1642506	1					
ANR	1643640	Argument	run		1642506	0					
ANR	1643641	Identifier	run		1642506	0					
ANR	1643642	Argument	level + 64		1642506	1					
ANR	1643643	AdditiveExpression	level + 64		1642506	0		+			
ANR	1643644	Identifier	level		1642506	0					
ANR	1643645	PrimaryExpression	64		1642506	1					
ANR	1643646	ElseStatement	else		1642506	0					
ANR	1643647	ExpressionStatement	"score += last_length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - last_length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"	439:32:6647:6795	1642506	0	True				
ANR	1643648	AssignmentExpression	"score += last_length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - last_length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	0		+=			
ANR	1643649	Identifier	score		1642506	0					
ANR	1643650	AdditiveExpression	"last_length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ] - last_length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	1		-			
ANR	1643651	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run , new_level + 64 ) ]"		1642506	0					
ANR	1643652	Identifier	last_length		1642506	0					
ANR	1643653	CallExpression	"UNI_AC_ENC_INDEX ( run , new_level + 64 )"		1642506	1					
ANR	1643654	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643655	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643656	ArgumentList	run		1642506	1					
ANR	1643657	Argument	run		1642506	0					
ANR	1643658	Identifier	run		1642506	0					
ANR	1643659	Argument	new_level + 64		1642506	1					
ANR	1643660	AdditiveExpression	new_level + 64		1642506	0		+			
ANR	1643661	Identifier	new_level		1642506	0					
ANR	1643662	PrimaryExpression	64		1642506	1					
ANR	1643663	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run , level + 64 ) ]"		1642506	1					
ANR	1643664	Identifier	last_length		1642506	0					
ANR	1643665	CallExpression	"UNI_AC_ENC_INDEX ( run , level + 64 )"		1642506	1					
ANR	1643666	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643667	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643668	ArgumentList	run		1642506	1					
ANR	1643669	Argument	run		1642506	0					
ANR	1643670	Identifier	run		1642506	0					
ANR	1643671	Argument	level + 64		1642506	1					
ANR	1643672	AdditiveExpression	level + 64		1642506	0		+			
ANR	1643673	Identifier	level		1642506	0					
ANR	1643674	PrimaryExpression	64		1642506	1					
ANR	1643675	ElseStatement	else		1642506	0					
ANR	1643676	CompoundStatement		441:25:6659:6659	1642506	0					
ANR	1643677	ExpressionStatement	assert ( ABS ( new_level ) == 1 )	447:24:6877:6902	1642506	0	True				
ANR	1643678	CallExpression	assert ( ABS ( new_level ) == 1 )		1642506	0					
ANR	1643679	Callee	assert		1642506	0					
ANR	1643680	Identifier	assert		1642506	0					
ANR	1643681	ArgumentList	ABS ( new_level ) == 1		1642506	1					
ANR	1643682	Argument	ABS ( new_level ) == 1		1642506	0					
ANR	1643683	EqualityExpression	ABS ( new_level ) == 1		1642506	0		==			
ANR	1643684	CallExpression	ABS ( new_level )		1642506	0					
ANR	1643685	Callee	ABS		1642506	0					
ANR	1643686	Identifier	ABS		1642506	0					
ANR	1643687	ArgumentList	new_level		1642506	1					
ANR	1643688	Argument	new_level		1642506	0					
ANR	1643689	Identifier	new_level		1642506	0					
ANR	1643690	PrimaryExpression	1		1642506	1					
ANR	1643691	IfStatement	if ( analyze_gradient )		1642506	1					
ANR	1643692	Condition	analyze_gradient	451:27:6958:6973	1642506	0	True				
ANR	1643693	Identifier	analyze_gradient		1642506	0					
ANR	1643694	CompoundStatement		449:28:6815:6840	1642506	1					
ANR	1643695	IdentifierDeclStatement	int g = d1 [ scantable [ i ] ] ;	453:28:7006:7031	1642506	0	True				
ANR	1643696	IdentifierDecl	g = d1 [ scantable [ i ] ]		1642506	0					
ANR	1643697	IdentifierDeclType	int		1642506	0					
ANR	1643698	Identifier	g		1642506	1					
ANR	1643699	AssignmentExpression	g = d1 [ scantable [ i ] ]		1642506	2		=			
ANR	1643700	Identifier	g		1642506	0					
ANR	1643701	ArrayIndexing	d1 [ scantable [ i ] ]		1642506	1					
ANR	1643702	Identifier	d1		1642506	0					
ANR	1643703	ArrayIndexing	scantable [ i ]		1642506	1					
ANR	1643704	Identifier	scantable		1642506	0					
ANR	1643705	Identifier	i		1642506	1					
ANR	1643706	IfStatement	if ( g && ( g ^ new_level ) >= 0 )		1642506	1					
ANR	1643707	Condition	g && ( g ^ new_level ) >= 0	455:31:7065:7087	1642506	0	True				
ANR	1643708	AndExpression	g && ( g ^ new_level ) >= 0		1642506	0		&&			
ANR	1643709	Identifier	g		1642506	0					
ANR	1643710	RelationalExpression	( g ^ new_level ) >= 0		1642506	1		>=			
ANR	1643711	ExclusiveOrExpression	g ^ new_level		1642506	0		^			
ANR	1643712	Identifier	g		1642506	0					
ANR	1643713	Identifier	new_level		1642506	1					
ANR	1643714	PrimaryExpression	0		1642506	1					
ANR	1643715	ContinueStatement	continue ;	457:32:7123:7131	1642506	1	True				
ANR	1643716	IfStatement	if ( i < last_non_zero )		1642506	2					
ANR	1643717	Condition	i < last_non_zero	463:27:7190:7206	1642506	0	True				
ANR	1643718	RelationalExpression	i < last_non_zero		1642506	0		<			
ANR	1643719	Identifier	i		1642506	0					
ANR	1643720	Identifier	last_non_zero		1642506	1					
ANR	1643721	CompoundStatement		463:28:7103:7155	1642506	1					
ANR	1643722	IdentifierDeclStatement	int next_i = i + run2 + 1 ;	465:28:7239:7263	1642506	0	True				
ANR	1643723	IdentifierDecl	next_i = i + run2 + 1		1642506	0					
ANR	1643724	IdentifierDeclType	int		1642506	0					
ANR	1643725	Identifier	next_i		1642506	1					
ANR	1643726	AssignmentExpression	next_i = i + run2 + 1		1642506	2		=			
ANR	1643727	Identifier	next_i		1642506	0					
ANR	1643728	AdditiveExpression	i + run2 + 1		1642506	1		+			
ANR	1643729	Identifier	i		1642506	0					
ANR	1643730	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1643731	Identifier	run2		1642506	0					
ANR	1643732	PrimaryExpression	1		1642506	1					
ANR	1643733	IdentifierDeclStatement	int next_level = block [ perm_scantable [ next_i ] ] + 64 ;	467:28:7294:7346	1642506	1	True				
ANR	1643734	IdentifierDecl	next_level = block [ perm_scantable [ next_i ] ] + 64		1642506	0					
ANR	1643735	IdentifierDeclType	int		1642506	0					
ANR	1643736	Identifier	next_level		1642506	1					
ANR	1643737	AssignmentExpression	next_level = block [ perm_scantable [ next_i ] ] + 64		1642506	2		=			
ANR	1643738	Identifier	next_level		1642506	0					
ANR	1643739	AdditiveExpression	block [ perm_scantable [ next_i ] ] + 64		1642506	1		+			
ANR	1643740	ArrayIndexing	block [ perm_scantable [ next_i ] ]		1642506	0					
ANR	1643741	Identifier	block		1642506	0					
ANR	1643742	ArrayIndexing	perm_scantable [ next_i ]		1642506	1					
ANR	1643743	Identifier	perm_scantable		1642506	0					
ANR	1643744	Identifier	next_i		1642506	1					
ANR	1643745	PrimaryExpression	64		1642506	1					
ANR	1643746	IfStatement	if ( next_level & ( ~127 ) )		1642506	2					
ANR	1643747	Condition	next_level & ( ~127 )	471:31:7410:7426	1642506	0	True				
ANR	1643748	BitAndExpression	next_level & ( ~127 )		1642506	0		&			
ANR	1643749	Identifier	next_level		1642506	0					
ANR	1643750	Identifier	~127		1642506	1					
ANR	1643751	ExpressionStatement	next_level = 0	473:32:7462:7475	1642506	1	True				
ANR	1643752	AssignmentExpression	next_level = 0		1642506	0		=			
ANR	1643753	Identifier	next_level		1642506	0					
ANR	1643754	PrimaryExpression	0		1642506	1					
ANR	1643755	IfStatement	if ( next_i < last_non_zero )		1642506	3					
ANR	1643756	Condition	next_i < last_non_zero	477:31:7511:7532	1642506	0	True				
ANR	1643757	RelationalExpression	next_i < last_non_zero		1642506	0		<			
ANR	1643758	Identifier	next_i		1642506	0					
ANR	1643759	Identifier	last_non_zero		1642506	1					
ANR	1643760	ExpressionStatement	"score += length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"	479:32:7568:7796	1642506	1	True				
ANR	1643761	AssignmentExpression	"score += length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	0		+=			
ANR	1643762	Identifier	score		1642506	0					
ANR	1643763	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1		+			
ANR	1643764	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0					
ANR	1643765	Identifier	length		1642506	0					
ANR	1643766	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1643767	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643768	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643769	ArgumentList	run		1642506	1					
ANR	1643770	Argument	run		1642506	0					
ANR	1643771	Identifier	run		1642506	0					
ANR	1643772	Argument	65		1642506	1					
ANR	1643773	PrimaryExpression	65		1642506	0					
ANR	1643774	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1		-			
ANR	1643775	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ]"		1642506	0					
ANR	1643776	Identifier	length		1642506	0					
ANR	1643777	CallExpression	"UNI_AC_ENC_INDEX ( run2 , next_level )"		1642506	1					
ANR	1643778	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643779	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643780	ArgumentList	run2		1642506	1					
ANR	1643781	Argument	run2		1642506	0					
ANR	1643782	Identifier	run2		1642506	0					
ANR	1643783	Argument	next_level		1642506	1					
ANR	1643784	Identifier	next_level		1642506	0					
ANR	1643785	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1					
ANR	1643786	Identifier	length		1642506	0					
ANR	1643787	CallExpression	"UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level )"		1642506	1					
ANR	1643788	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643789	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643790	ArgumentList	run + run2 + 1		1642506	1					
ANR	1643791	Argument	run + run2 + 1		1642506	0					
ANR	1643792	AdditiveExpression	run + run2 + 1		1642506	0		+			
ANR	1643793	Identifier	run		1642506	0					
ANR	1643794	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1643795	Identifier	run2		1642506	0					
ANR	1643796	PrimaryExpression	1		1642506	1					
ANR	1643797	Argument	next_level		1642506	1					
ANR	1643798	Identifier	next_level		1642506	0					
ANR	1643799	ElseStatement	else		1642506	0					
ANR	1643800	ExpressionStatement	"score += length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"	487:32:7865:8100	1642506	0	True				
ANR	1643801	AssignmentExpression	"score += length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	0		+=			
ANR	1643802	Identifier	score		1642506	0					
ANR	1643803	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ] + last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1		+			
ANR	1643804	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0					
ANR	1643805	Identifier	length		1642506	0					
ANR	1643806	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1643807	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643808	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643809	ArgumentList	run		1642506	1					
ANR	1643810	Argument	run		1642506	0					
ANR	1643811	Identifier	run		1642506	0					
ANR	1643812	Argument	65		1642506	1					
ANR	1643813	PrimaryExpression	65		1642506	0					
ANR	1643814	AdditiveExpression	"last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1		-			
ANR	1643815	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ]"		1642506	0					
ANR	1643816	Identifier	last_length		1642506	0					
ANR	1643817	CallExpression	"UNI_AC_ENC_INDEX ( run2 , next_level )"		1642506	1					
ANR	1643818	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643819	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643820	ArgumentList	run2		1642506	1					
ANR	1643821	Argument	run2		1642506	0					
ANR	1643822	Identifier	run2		1642506	0					
ANR	1643823	Argument	next_level		1642506	1					
ANR	1643824	Identifier	next_level		1642506	0					
ANR	1643825	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	1					
ANR	1643826	Identifier	last_length		1642506	0					
ANR	1643827	CallExpression	"UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level )"		1642506	1					
ANR	1643828	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643829	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643830	ArgumentList	run + run2 + 1		1642506	1					
ANR	1643831	Argument	run + run2 + 1		1642506	0					
ANR	1643832	AdditiveExpression	run + run2 + 1		1642506	0		+			
ANR	1643833	Identifier	run		1642506	0					
ANR	1643834	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1643835	Identifier	run2		1642506	0					
ANR	1643836	PrimaryExpression	1		1642506	1					
ANR	1643837	Argument	next_level		1642506	1					
ANR	1643838	Identifier	next_level		1642506	0					
ANR	1643839	ElseStatement	else		1642506	0					
ANR	1643840	CompoundStatement		489:29:7941:7941	1642506	0					
ANR	1643841	ExpressionStatement	"score += last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"	495:28:8163:8210	1642506	0	True				
ANR	1643842	AssignmentExpression	"score += last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0		+=			
ANR	1643843	Identifier	score		1642506	0					
ANR	1643844	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1					
ANR	1643845	Identifier	last_length		1642506	0					
ANR	1643846	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1643847	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643848	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643849	ArgumentList	run		1642506	1					
ANR	1643850	Argument	run		1642506	0					
ANR	1643851	Identifier	run		1642506	0					
ANR	1643852	Argument	65		1642506	1					
ANR	1643853	PrimaryExpression	65		1642506	0					
ANR	1643854	IfStatement	if ( prev_level )		1642506	1					
ANR	1643855	Condition	prev_level	497:31:8244:8253	1642506	0	True				
ANR	1643856	Identifier	prev_level		1642506	0					
ANR	1643857	CompoundStatement		493:42:8064:8064	1642506	1					
ANR	1643858	ExpressionStatement	"score += length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"	499:32:8290:8441	1642506	0	True				
ANR	1643859	AssignmentExpression	"score += length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	0		+=			
ANR	1643860	Identifier	score		1642506	0					
ANR	1643861	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	1		-			
ANR	1643862	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	0					
ANR	1643863	Identifier	length		1642506	0					
ANR	1643864	CallExpression	"UNI_AC_ENC_INDEX ( prev_run , prev_level )"		1642506	1					
ANR	1643865	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643866	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643867	ArgumentList	prev_run		1642506	1					
ANR	1643868	Argument	prev_run		1642506	0					
ANR	1643869	Identifier	prev_run		1642506	0					
ANR	1643870	Argument	prev_level		1642506	1					
ANR	1643871	Identifier	prev_level		1642506	0					
ANR	1643872	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	1					
ANR	1643873	Identifier	last_length		1642506	0					
ANR	1643874	CallExpression	"UNI_AC_ENC_INDEX ( prev_run , prev_level )"		1642506	1					
ANR	1643875	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643876	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643877	ArgumentList	prev_run		1642506	1					
ANR	1643878	Argument	prev_run		1642506	0					
ANR	1643879	Identifier	prev_run		1642506	0					
ANR	1643880	Argument	prev_level		1642506	1					
ANR	1643881	Identifier	prev_level		1642506	0					
ANR	1643882	ElseStatement	else		1642506	0					
ANR	1643883	CompoundStatement		505:21:8355:8355	1642506	0					
ANR	1643884	ExpressionStatement	new_coeff = 0	511:20:8569:8580	1642506	0	True				
ANR	1643885	AssignmentExpression	new_coeff = 0		1642506	0		=			
ANR	1643886	Identifier	new_coeff		1642506	0					
ANR	1643887	PrimaryExpression	0		1642506	1					
ANR	1643888	ExpressionStatement	assert ( ABS ( level ) == 1 )	513:20:8603:8624	1642506	1	True				
ANR	1643889	CallExpression	assert ( ABS ( level ) == 1 )		1642506	0					
ANR	1643890	Callee	assert		1642506	0					
ANR	1643891	Identifier	assert		1642506	0					
ANR	1643892	ArgumentList	ABS ( level ) == 1		1642506	1					
ANR	1643893	Argument	ABS ( level ) == 1		1642506	0					
ANR	1643894	EqualityExpression	ABS ( level ) == 1		1642506	0		==			
ANR	1643895	CallExpression	ABS ( level )		1642506	0					
ANR	1643896	Callee	ABS		1642506	0					
ANR	1643897	Identifier	ABS		1642506	0					
ANR	1643898	ArgumentList	level		1642506	1					
ANR	1643899	Argument	level		1642506	0					
ANR	1643900	Identifier	level		1642506	0					
ANR	1643901	PrimaryExpression	1		1642506	1					
ANR	1643902	IfStatement	if ( i < last_non_zero )		1642506	2					
ANR	1643903	Condition	i < last_non_zero	517:23:8652:8668	1642506	0	True				
ANR	1643904	RelationalExpression	i < last_non_zero		1642506	0		<			
ANR	1643905	Identifier	i		1642506	0					
ANR	1643906	Identifier	last_non_zero		1642506	1					
ANR	1643907	CompoundStatement		517:24:8557:8609	1642506	1					
ANR	1643908	IdentifierDeclStatement	int next_i = i + run2 + 1 ;	519:24:8697:8721	1642506	0	True				
ANR	1643909	IdentifierDecl	next_i = i + run2 + 1		1642506	0					
ANR	1643910	IdentifierDeclType	int		1642506	0					
ANR	1643911	Identifier	next_i		1642506	1					
ANR	1643912	AssignmentExpression	next_i = i + run2 + 1		1642506	2		=			
ANR	1643913	Identifier	next_i		1642506	0					
ANR	1643914	AdditiveExpression	i + run2 + 1		1642506	1		+			
ANR	1643915	Identifier	i		1642506	0					
ANR	1643916	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1643917	Identifier	run2		1642506	0					
ANR	1643918	PrimaryExpression	1		1642506	1					
ANR	1643919	IdentifierDeclStatement	int next_level = block [ perm_scantable [ next_i ] ] + 64 ;	521:24:8748:8800	1642506	1	True				
ANR	1643920	IdentifierDecl	next_level = block [ perm_scantable [ next_i ] ] + 64		1642506	0					
ANR	1643921	IdentifierDeclType	int		1642506	0					
ANR	1643922	Identifier	next_level		1642506	1					
ANR	1643923	AssignmentExpression	next_level = block [ perm_scantable [ next_i ] ] + 64		1642506	2		=			
ANR	1643924	Identifier	next_level		1642506	0					
ANR	1643925	AdditiveExpression	block [ perm_scantable [ next_i ] ] + 64		1642506	1		+			
ANR	1643926	ArrayIndexing	block [ perm_scantable [ next_i ] ]		1642506	0					
ANR	1643927	Identifier	block		1642506	0					
ANR	1643928	ArrayIndexing	perm_scantable [ next_i ]		1642506	1					
ANR	1643929	Identifier	perm_scantable		1642506	0					
ANR	1643930	Identifier	next_i		1642506	1					
ANR	1643931	PrimaryExpression	64		1642506	1					
ANR	1643932	IfStatement	if ( next_level & ( ~127 ) )		1642506	2					
ANR	1643933	Condition	next_level & ( ~127 )	525:27:8860:8876	1642506	0	True				
ANR	1643934	BitAndExpression	next_level & ( ~127 )		1642506	0		&			
ANR	1643935	Identifier	next_level		1642506	0					
ANR	1643936	Identifier	~127		1642506	1					
ANR	1643937	ExpressionStatement	next_level = 0	527:28:8908:8921	1642506	1	True				
ANR	1643938	AssignmentExpression	next_level = 0		1642506	0		=			
ANR	1643939	Identifier	next_level		1642506	0					
ANR	1643940	PrimaryExpression	0		1642506	1					
ANR	1643941	IfStatement	if ( next_i < last_non_zero )		1642506	3					
ANR	1643942	Condition	next_i < last_non_zero	531:27:8953:8974	1642506	0	True				
ANR	1643943	RelationalExpression	next_i < last_non_zero		1642506	0		<			
ANR	1643944	Identifier	next_i		1642506	0					
ANR	1643945	Identifier	last_non_zero		1642506	1					
ANR	1643946	ExpressionStatement	"score += length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"	533:28:9006:9226	1642506	1	True				
ANR	1643947	AssignmentExpression	"score += length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0		+=			
ANR	1643948	Identifier	score		1642506	0					
ANR	1643949	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1		-			
ANR	1643950	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	0					
ANR	1643951	Identifier	length		1642506	0					
ANR	1643952	CallExpression	"UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level )"		1642506	1					
ANR	1643953	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643954	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643955	ArgumentList	run + run2 + 1		1642506	1					
ANR	1643956	Argument	run + run2 + 1		1642506	0					
ANR	1643957	AdditiveExpression	run + run2 + 1		1642506	0		+			
ANR	1643958	Identifier	run		1642506	0					
ANR	1643959	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1643960	Identifier	run2		1642506	0					
ANR	1643961	PrimaryExpression	1		1642506	1					
ANR	1643962	Argument	next_level		1642506	1					
ANR	1643963	Identifier	next_level		1642506	0					
ANR	1643964	AdditiveExpression	"length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1		-			
ANR	1643965	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ]"		1642506	0					
ANR	1643966	Identifier	length		1642506	0					
ANR	1643967	CallExpression	"UNI_AC_ENC_INDEX ( run2 , next_level )"		1642506	1					
ANR	1643968	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643969	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643970	ArgumentList	run2		1642506	1					
ANR	1643971	Argument	run2		1642506	0					
ANR	1643972	Identifier	run2		1642506	0					
ANR	1643973	Argument	next_level		1642506	1					
ANR	1643974	Identifier	next_level		1642506	0					
ANR	1643975	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1					
ANR	1643976	Identifier	length		1642506	0					
ANR	1643977	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1643978	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643979	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643980	ArgumentList	run		1642506	1					
ANR	1643981	Argument	run		1642506	0					
ANR	1643982	Identifier	run		1642506	0					
ANR	1643983	Argument	65		1642506	1					
ANR	1643984	PrimaryExpression	65		1642506	0					
ANR	1643985	ElseStatement	else		1642506	0					
ANR	1643986	ExpressionStatement	"score += last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"	541:28:9287:9517	1642506	0	True				
ANR	1643987	AssignmentExpression	"score += last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0		+=			
ANR	1643988	Identifier	score		1642506	0					
ANR	1643989	AdditiveExpression	"last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ] - last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1		-			
ANR	1643990	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level ) ]"		1642506	0					
ANR	1643991	Identifier	last_length		1642506	0					
ANR	1643992	CallExpression	"UNI_AC_ENC_INDEX ( run + run2 + 1 , next_level )"		1642506	1					
ANR	1643993	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643994	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1643995	ArgumentList	run + run2 + 1		1642506	1					
ANR	1643996	Argument	run + run2 + 1		1642506	0					
ANR	1643997	AdditiveExpression	run + run2 + 1		1642506	0		+			
ANR	1643998	Identifier	run		1642506	0					
ANR	1643999	AdditiveExpression	run2 + 1		1642506	1		+			
ANR	1644000	Identifier	run2		1642506	0					
ANR	1644001	PrimaryExpression	1		1642506	1					
ANR	1644002	Argument	next_level		1642506	1					
ANR	1644003	Identifier	next_level		1642506	0					
ANR	1644004	AdditiveExpression	"last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ] - length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1		-			
ANR	1644005	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run2 , next_level ) ]"		1642506	0					
ANR	1644006	Identifier	last_length		1642506	0					
ANR	1644007	CallExpression	"UNI_AC_ENC_INDEX ( run2 , next_level )"		1642506	1					
ANR	1644008	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644009	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644010	ArgumentList	run2		1642506	1					
ANR	1644011	Argument	run2		1642506	0					
ANR	1644012	Identifier	run2		1642506	0					
ANR	1644013	Argument	next_level		1642506	1					
ANR	1644014	Identifier	next_level		1642506	0					
ANR	1644015	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1					
ANR	1644016	Identifier	length		1642506	0					
ANR	1644017	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1644018	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644019	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644020	ArgumentList	run		1642506	1					
ANR	1644021	Argument	run		1642506	0					
ANR	1644022	Identifier	run		1642506	0					
ANR	1644023	Argument	65		1642506	1					
ANR	1644024	PrimaryExpression	65		1642506	0					
ANR	1644025	ElseStatement	else		1642506	0					
ANR	1644026	CompoundStatement		543:25:9354:9354	1642506	0					
ANR	1644027	ExpressionStatement	"score += - last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"	549:24:9572:9620	1642506	0	True				
ANR	1644028	AssignmentExpression	"score += - last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	0		+=			
ANR	1644029	Identifier	score		1642506	0					
ANR	1644030	UnaryOperationExpression	"- last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1					
ANR	1644031	UnaryOperator	-		1642506	0					
ANR	1644032	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( run , 65 ) ]"		1642506	1					
ANR	1644033	Identifier	last_length		1642506	0					
ANR	1644034	CallExpression	"UNI_AC_ENC_INDEX ( run , 65 )"		1642506	1					
ANR	1644035	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644036	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644037	ArgumentList	run		1642506	1					
ANR	1644038	Argument	run		1642506	0					
ANR	1644039	Identifier	run		1642506	0					
ANR	1644040	Argument	65		1642506	1					
ANR	1644041	PrimaryExpression	65		1642506	0					
ANR	1644042	IfStatement	if ( prev_level )		1642506	1					
ANR	1644043	Condition	prev_level	551:27:9650:9659	1642506	0	True				
ANR	1644044	Identifier	prev_level		1642506	0					
ANR	1644045	CompoundStatement		547:38:9470:9470	1642506	1					
ANR	1644046	ExpressionStatement	"score += last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"	553:28:9692:9839	1642506	0	True				
ANR	1644047	AssignmentExpression	"score += last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	0		+=			
ANR	1644048	Identifier	score		1642506	0					
ANR	1644049	AdditiveExpression	"last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ] - length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	1		-			
ANR	1644050	ArrayIndexing	"last_length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	0					
ANR	1644051	Identifier	last_length		1642506	0					
ANR	1644052	CallExpression	"UNI_AC_ENC_INDEX ( prev_run , prev_level )"		1642506	1					
ANR	1644053	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644054	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644055	ArgumentList	prev_run		1642506	1					
ANR	1644056	Argument	prev_run		1642506	0					
ANR	1644057	Identifier	prev_run		1642506	0					
ANR	1644058	Argument	prev_level		1642506	1					
ANR	1644059	Identifier	prev_level		1642506	0					
ANR	1644060	ArrayIndexing	"length [ UNI_AC_ENC_INDEX ( prev_run , prev_level ) ]"		1642506	1					
ANR	1644061	Identifier	length		1642506	0					
ANR	1644062	CallExpression	"UNI_AC_ENC_INDEX ( prev_run , prev_level )"		1642506	1					
ANR	1644063	Callee	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644064	Identifier	UNI_AC_ENC_INDEX		1642506	0					
ANR	1644065	ArgumentList	prev_run		1642506	1					
ANR	1644066	Argument	prev_run		1642506	0					
ANR	1644067	Identifier	prev_run		1642506	0					
ANR	1644068	Argument	prev_level		1642506	1					
ANR	1644069	Identifier	prev_level		1642506	0					
ANR	1644070	ExpressionStatement	score *= lambda	565:16:9945:9960	1642506	5	True				
ANR	1644071	AssignmentExpression	score *= lambda		1642506	0		*=			
ANR	1644072	Identifier	score		1642506	0					
ANR	1644073	Identifier	lambda		1642506	1					
ANR	1644074	ExpressionStatement	unquant_change = new_coeff - old_coeff	569:16:9981:10018	1642506	6	True				
ANR	1644075	AssignmentExpression	unquant_change = new_coeff - old_coeff		1642506	0		=			
ANR	1644076	Identifier	unquant_change		1642506	0					
ANR	1644077	AdditiveExpression	new_coeff - old_coeff		1642506	1		-			
ANR	1644078	Identifier	new_coeff		1642506	0					
ANR	1644079	Identifier	old_coeff		1642506	1					
ANR	1644080	ExpressionStatement	assert ( ( score < 100 * lambda && score > - 100 * lambda ) || lambda == 0 )	571:16:10037:10101	1642506	7	True				
ANR	1644081	CallExpression	assert ( ( score < 100 * lambda && score > - 100 * lambda ) || lambda == 0 )		1642506	0					
ANR	1644082	Callee	assert		1642506	0					
ANR	1644083	Identifier	assert		1642506	0					
ANR	1644084	ArgumentList	( score < 100 * lambda && score > - 100 * lambda ) || lambda == 0		1642506	1					
ANR	1644085	Argument	( score < 100 * lambda && score > - 100 * lambda ) || lambda == 0		1642506	0					
ANR	1644086	OrExpression	( score < 100 * lambda && score > - 100 * lambda ) || lambda == 0		1642506	0		||			
ANR	1644087	AndExpression	score < 100 * lambda && score > - 100 * lambda		1642506	0		&&			
ANR	1644088	RelationalExpression	score < 100 * lambda		1642506	0		<			
ANR	1644089	Identifier	score		1642506	0					
ANR	1644090	MultiplicativeExpression	100 * lambda		1642506	1		*			
ANR	1644091	PrimaryExpression	100		1642506	0					
ANR	1644092	Identifier	lambda		1642506	1					
ANR	1644093	RelationalExpression	score > - 100 * lambda		1642506	1		>			
ANR	1644094	Identifier	score		1642506	0					
ANR	1644095	MultiplicativeExpression	- 100 * lambda		1642506	1		*			
ANR	1644096	UnaryOperationExpression	- 100		1642506	0					
ANR	1644097	UnaryOperator	-		1642506	0					
ANR	1644098	PrimaryExpression	100		1642506	1					
ANR	1644099	Identifier	lambda		1642506	1					
ANR	1644100	EqualityExpression	lambda == 0		1642506	1		==			
ANR	1644101	Identifier	lambda		1642506	0					
ANR	1644102	PrimaryExpression	0		1642506	1					
ANR	1644103	ExpressionStatement	"score += s -> dsp . try_8x8basis ( rem , weight , basis [ j ] , unquant_change )"	575:16:10138:10204	1642506	8	True				
ANR	1644104	AssignmentExpression	"score += s -> dsp . try_8x8basis ( rem , weight , basis [ j ] , unquant_change )"		1642506	0		+=			
ANR	1644105	Identifier	score		1642506	0					
ANR	1644106	CallExpression	"s -> dsp . try_8x8basis ( rem , weight , basis [ j ] , unquant_change )"		1642506	1					
ANR	1644107	Callee	s -> dsp . try_8x8basis		1642506	0					
ANR	1644108	MemberAccess	s -> dsp . try_8x8basis		1642506	0					
ANR	1644109	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1644110	Identifier	s		1642506	0					
ANR	1644111	Identifier	dsp		1642506	1					
ANR	1644112	Identifier	try_8x8basis		1642506	1					
ANR	1644113	ArgumentList	rem		1642506	1					
ANR	1644114	Argument	rem		1642506	0					
ANR	1644115	Identifier	rem		1642506	0					
ANR	1644116	Argument	weight		1642506	1					
ANR	1644117	Identifier	weight		1642506	0					
ANR	1644118	Argument	basis [ j ]		1642506	2					
ANR	1644119	ArrayIndexing	basis [ j ]		1642506	0					
ANR	1644120	Identifier	basis		1642506	0					
ANR	1644121	Identifier	j		1642506	1					
ANR	1644122	Argument	unquant_change		1642506	3					
ANR	1644123	Identifier	unquant_change		1642506	0					
ANR	1644124	IfStatement	if ( score < best_score )		1642506	9					
ANR	1644125	Condition	score < best_score	577:19:10226:10241	1642506	0	True				
ANR	1644126	RelationalExpression	score < best_score		1642506	0		<			
ANR	1644127	Identifier	score		1642506	0					
ANR	1644128	Identifier	best_score		1642506	1					
ANR	1644129	CompoundStatement		573:36:10052:10052	1642506	1					
ANR	1644130	ExpressionStatement	best_score = score	579:20:10266:10283	1642506	0	True				
ANR	1644131	AssignmentExpression	best_score = score		1642506	0		=			
ANR	1644132	Identifier	best_score		1642506	0					
ANR	1644133	Identifier	score		1642506	1					
ANR	1644134	ExpressionStatement	best_coeff = i	581:20:10306:10319	1642506	1	True				
ANR	1644135	AssignmentExpression	best_coeff = i		1642506	0		=			
ANR	1644136	Identifier	best_coeff		1642506	0					
ANR	1644137	Identifier	i		1642506	1					
ANR	1644138	ExpressionStatement	best_change = change	583:20:10342:10361	1642506	2	True				
ANR	1644139	AssignmentExpression	best_change = change		1642506	0		=			
ANR	1644140	Identifier	best_change		1642506	0					
ANR	1644141	Identifier	change		1642506	1					
ANR	1644142	ExpressionStatement	best_unquant_change = unquant_change	585:20:10384:10419	1642506	3	True				
ANR	1644143	AssignmentExpression	best_unquant_change = unquant_change		1642506	0		=			
ANR	1644144	Identifier	best_unquant_change		1642506	0					
ANR	1644145	Identifier	unquant_change		1642506	1					
ANR	1644146	IfStatement	if ( level )		1642506	6					
ANR	1644147	Condition	level	591:15:10471:10475	1642506	0	True				
ANR	1644148	Identifier	level		1642506	0					
ANR	1644149	CompoundStatement		587:21:10286:10286	1642506	1					
ANR	1644150	ExpressionStatement	prev_level = level + 64	593:16:10496:10518	1642506	0	True				
ANR	1644151	AssignmentExpression	prev_level = level + 64		1642506	0		=			
ANR	1644152	Identifier	prev_level		1642506	0					
ANR	1644153	AdditiveExpression	level + 64		1642506	1		+			
ANR	1644154	Identifier	level		1642506	0					
ANR	1644155	PrimaryExpression	64		1642506	1					
ANR	1644156	IfStatement	if ( prev_level & ( ~127 ) )		1642506	1					
ANR	1644157	Condition	prev_level & ( ~127 )	595:19:10540:10556	1642506	0	True				
ANR	1644158	BitAndExpression	prev_level & ( ~127 )		1642506	0		&			
ANR	1644159	Identifier	prev_level		1642506	0					
ANR	1644160	Identifier	~127		1642506	1					
ANR	1644161	ExpressionStatement	prev_level = 0	597:20:10580:10593	1642506	1	True				
ANR	1644162	AssignmentExpression	prev_level = 0		1642506	0		=			
ANR	1644163	Identifier	prev_level		1642506	0					
ANR	1644164	PrimaryExpression	0		1642506	1					
ANR	1644165	ExpressionStatement	prev_run = run	599:16:10612:10625	1642506	2	True				
ANR	1644166	AssignmentExpression	prev_run = run		1642506	0		=			
ANR	1644167	Identifier	prev_run		1642506	0					
ANR	1644168	Identifier	run		1642506	1					
ANR	1644169	ExpressionStatement	run = 0	601:16:10644:10649	1642506	3	True				
ANR	1644170	AssignmentExpression	run = 0		1642506	0		=			
ANR	1644171	Identifier	run		1642506	0					
ANR	1644172	PrimaryExpression	0		1642506	1					
ANR	1644173	ElseStatement	else		1642506	0					
ANR	1644174	CompoundStatement		599:17:10478:10478	1642506	0					
ANR	1644175	ExpressionStatement	run ++	605:16:10688:10693	1642506	0	True				
ANR	1644176	PostIncDecOperationExpression	run ++		1642506	0					
ANR	1644177	Identifier	run		1642506	0					
ANR	1644178	IncDec	++		1642506	1					
ANR	1644179	Statement	STOP_TIMER	613:0:10743:10752	1642506	10	True				
ANR	1644180	Statement	(	613:10:10753:10753	1642506	11	True				
ANR	1644181	Statement	"""iterative step"""	613:11:10754:10769	1642506	12	True				
ANR	1644182	Statement	)	613:27:10770:10770	1642506	13	True				
ANR	1644183	IfStatement	if ( best_change )		1642506	5					
ANR	1644184	Condition	best_change	619:11:10795:10805	1642506	0	True				
ANR	1644185	Identifier	best_change		1642506	0					
ANR	1644186	CompoundStatement		617:12:10631:10666	1642506	1					
ANR	1644187	IdentifierDeclStatement	int j = perm_scantable [ best_coeff ] ;	621:12:10822:10857	1642506	0	True				
ANR	1644188	IdentifierDecl	j = perm_scantable [ best_coeff ]		1642506	0					
ANR	1644189	IdentifierDeclType	int		1642506	0					
ANR	1644190	Identifier	j		1642506	1					
ANR	1644191	AssignmentExpression	j = perm_scantable [ best_coeff ]		1642506	2		=			
ANR	1644192	Identifier	j		1642506	0					
ANR	1644193	ArrayIndexing	perm_scantable [ best_coeff ]		1642506	1					
ANR	1644194	Identifier	perm_scantable		1642506	0					
ANR	1644195	Identifier	best_coeff		1642506	1					
ANR	1644196	ExpressionStatement	block [ j ] += best_change	625:12:10886:10909	1642506	1	True				
ANR	1644197	AssignmentExpression	block [ j ] += best_change		1642506	0		+=			
ANR	1644198	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644199	Identifier	block		1642506	0					
ANR	1644200	Identifier	j		1642506	1					
ANR	1644201	Identifier	best_change		1642506	1					
ANR	1644202	IfStatement	if ( best_coeff > last_non_zero )		1642506	2					
ANR	1644203	Condition	best_coeff > last_non_zero	629:15:10941:10966	1642506	0	True				
ANR	1644204	RelationalExpression	best_coeff > last_non_zero		1642506	0		>			
ANR	1644205	Identifier	best_coeff		1642506	0					
ANR	1644206	Identifier	last_non_zero		1642506	1					
ANR	1644207	CompoundStatement		625:42:10777:10777	1642506	1					
ANR	1644208	ExpressionStatement	last_non_zero = best_coeff	631:16:10987:11012	1642506	0	True				
ANR	1644209	AssignmentExpression	last_non_zero = best_coeff		1642506	0		=			
ANR	1644210	Identifier	last_non_zero		1642506	0					
ANR	1644211	Identifier	best_coeff		1642506	1					
ANR	1644212	ExpressionStatement	assert ( block [ j ] )	633:16:11031:11047	1642506	1	True				
ANR	1644213	CallExpression	assert ( block [ j ] )		1642506	0					
ANR	1644214	Callee	assert		1642506	0					
ANR	1644215	Identifier	assert		1642506	0					
ANR	1644216	ArgumentList	block [ j ]		1642506	1					
ANR	1644217	Argument	block [ j ]		1642506	0					
ANR	1644218	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644219	Identifier	block		1642506	0					
ANR	1644220	Identifier	j		1642506	1					
ANR	1644221	ExpressionStatement	after_last ++	637:0:11071:11083	1642506	2	True				
ANR	1644222	PostIncDecOperationExpression	after_last ++		1642506	0					
ANR	1644223	Identifier	after_last		1642506	0					
ANR	1644224	IncDec	++		1642506	1					
ANR	1644225	ElseStatement	else		1642506	0					
ANR	1644226	CompoundStatement		637:17:10920:10920	1642506	0					
ANR	1644227	IfStatement	if ( block [ j ] )		1642506	0					
ANR	1644228	Condition	block [ j ]	645:3:11138:11145	1642506	0	True				
ANR	1644229	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644230	Identifier	block		1642506	0					
ANR	1644231	Identifier	j		1642506	1					
ANR	1644232	CompoundStatement		641:12:10956:10956	1642506	1					
ANR	1644233	IfStatement	if ( block [ j ] - best_change )		1642506	0					
ANR	1644234	Condition	block [ j ] - best_change	647:7:11157:11178	1642506	0	True				
ANR	1644235	AdditiveExpression	block [ j ] - best_change		1642506	0		-			
ANR	1644236	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644237	Identifier	block		1642506	0					
ANR	1644238	Identifier	j		1642506	1					
ANR	1644239	Identifier	best_change		1642506	1					
ANR	1644240	CompoundStatement		643:30:10989:10989	1642506	1					
ANR	1644241	IfStatement	if ( ABS ( block [ j ] ) > ABS ( block [ j ] - best_change ) )		1642506	0					
ANR	1644242	Condition	ABS ( block [ j ] ) > ABS ( block [ j ] - best_change )	649:11:11194:11236	1642506	0	True				
ANR	1644243	RelationalExpression	ABS ( block [ j ] ) > ABS ( block [ j ] - best_change )		1642506	0		>			
ANR	1644244	CallExpression	ABS ( block [ j ] )		1642506	0					
ANR	1644245	Callee	ABS		1642506	0					
ANR	1644246	Identifier	ABS		1642506	0					
ANR	1644247	ArgumentList	block [ j ]		1642506	1					
ANR	1644248	Argument	block [ j ]		1642506	0					
ANR	1644249	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644250	Identifier	block		1642506	0					
ANR	1644251	Identifier	j		1642506	1					
ANR	1644252	CallExpression	ABS ( block [ j ] - best_change )		1642506	1					
ANR	1644253	Callee	ABS		1642506	0					
ANR	1644254	Identifier	ABS		1642506	0					
ANR	1644255	ArgumentList	block [ j ] - best_change		1642506	1					
ANR	1644256	Argument	block [ j ] - best_change		1642506	0					
ANR	1644257	AdditiveExpression	block [ j ] - best_change		1642506	0		-			
ANR	1644258	ArrayIndexing	block [ j ]		1642506	0					
ANR	1644259	Identifier	block		1642506	0					
ANR	1644260	Identifier	j		1642506	1					
ANR	1644261	Identifier	best_change		1642506	1					
ANR	1644262	CompoundStatement		645:55:11047:11047	1642506	1					
ANR	1644263	ExpressionStatement	raise ++	651:12:11253:11260	1642506	0	True				
ANR	1644264	PostIncDecOperationExpression	raise ++		1642506	0					
ANR	1644265	Identifier	raise		1642506	0					
ANR	1644266	IncDec	++		1642506	1					
ANR	1644267	ElseStatement	else		1642506	0					
ANR	1644268	CompoundStatement		649:13:11085:11085	1642506	0					
ANR	1644269	ExpressionStatement	lower ++	655:12:11291:11298	1642506	0	True				
ANR	1644270	PostIncDecOperationExpression	lower ++		1642506	0					
ANR	1644271	Identifier	lower		1642506	0					
ANR	1644272	IncDec	++		1642506	1					
ANR	1644273	ElseStatement	else		1642506	0					
ANR	1644274	CompoundStatement		655:9:11130:11130	1642506	0					
ANR	1644275	ExpressionStatement	from_zero ++	661:8:11332:11343	1642506	0	True				
ANR	1644276	PostIncDecOperationExpression	from_zero ++		1642506	0					
ANR	1644277	Identifier	from_zero		1642506	0					
ANR	1644278	IncDec	++		1642506	1					
ANR	1644279	ElseStatement	else		1642506	0					
ANR	1644280	CompoundStatement		661:5:11167:11167	1642506	0					
ANR	1644281	ExpressionStatement	to_zero ++	667:4:11365:11374	1642506	0	True				
ANR	1644282	PostIncDecOperationExpression	to_zero ++		1642506	0					
ANR	1644283	Identifier	to_zero		1642506	0					
ANR	1644284	IncDec	++		1642506	1					
ANR	1644285	ForStatement	for ( ; last_non_zero >= start_i ; last_non_zero -- )		1642506	1					
ANR	1644286	Condition	last_non_zero >= start_i	673:22:11410:11431	1642506	0	True				
ANR	1644287	RelationalExpression	last_non_zero >= start_i		1642506	0		>=			
ANR	1644288	Identifier	last_non_zero		1642506	0					
ANR	1644289	Identifier	start_i		1642506	1					
ANR	1644290	PostIncDecOperationExpression	last_non_zero --	673:46:11434:11448	1642506	1	True				
ANR	1644291	Identifier	last_non_zero		1642506	0					
ANR	1644292	IncDec	--		1642506	1					
ANR	1644293	CompoundStatement		669:62:11259:11259	1642506	2					
ANR	1644294	IfStatement	if ( block [ perm_scantable [ last_non_zero ] ] )		1642506	0					
ANR	1644295	Condition	block [ perm_scantable [ last_non_zero ] ]	675:23:11476:11511	1642506	0	True				
ANR	1644296	ArrayIndexing	block [ perm_scantable [ last_non_zero ] ]		1642506	0					
ANR	1644297	Identifier	block		1642506	0					
ANR	1644298	ArrayIndexing	perm_scantable [ last_non_zero ]		1642506	1					
ANR	1644299	Identifier	perm_scantable		1642506	0					
ANR	1644300	Identifier	last_non_zero		1642506	1					
ANR	1644301	BreakStatement	break ;	677:24:11539:11544	1642506	1	True				
ANR	1644302	ExpressionStatement	count ++	685:0:11602:11609	1642506	3	True				
ANR	1644303	PostIncDecOperationExpression	count ++		1642506	0					
ANR	1644304	Identifier	count		1642506	0					
ANR	1644305	IncDec	++		1642506	1					
ANR	1644306	IfStatement	if ( 256 * 256 * 256 * 64 % count == 0 )		1642506	4					
ANR	1644307	Condition	256 * 256 * 256 * 64 % count == 0	687:3:11615:11641	1642506	0	True				
ANR	1644308	EqualityExpression	256 * 256 * 256 * 64 % count == 0		1642506	0		==			
ANR	1644309	MultiplicativeExpression	256 * 256 * 256 * 64 % count		1642506	0		*			
ANR	1644310	PrimaryExpression	256		1642506	0					
ANR	1644311	MultiplicativeExpression	256 * 256 * 64 % count		1642506	1		*			
ANR	1644312	PrimaryExpression	256		1642506	0					
ANR	1644313	MultiplicativeExpression	256 * 64 % count		1642506	1		*			
ANR	1644314	PrimaryExpression	256		1642506	0					
ANR	1644315	MultiplicativeExpression	64 % count		1642506	1		%			
ANR	1644316	PrimaryExpression	64		1642506	0					
ANR	1644317	Identifier	count		1642506	1					
ANR	1644318	PrimaryExpression	0		1642506	1					
ANR	1644319	CompoundStatement		683:31:11452:11452	1642506	1					
ANR	1644320	ExpressionStatement	"printf ( ""after_last:%d to_zero:%d from_zero:%d raise:%d lower:%d sign:%d xyp:%d/%d/%d\\n"" , after_last , to_zero , from_zero , raise , lower , messed_sign , s -> mb_x , s -> mb_y , s -> picture_number )"	689:4:11650:11834	1642506	0	True				
ANR	1644321	CallExpression	"printf ( ""after_last:%d to_zero:%d from_zero:%d raise:%d lower:%d sign:%d xyp:%d/%d/%d\\n"" , after_last , to_zero , from_zero , raise , lower , messed_sign , s -> mb_x , s -> mb_y , s -> picture_number )"		1642506	0					
ANR	1644322	Callee	printf		1642506	0					
ANR	1644323	Identifier	printf		1642506	0					
ANR	1644324	ArgumentList	"""after_last:%d to_zero:%d from_zero:%d raise:%d lower:%d sign:%d xyp:%d/%d/%d\\n"""		1642506	1					
ANR	1644325	Argument	"""after_last:%d to_zero:%d from_zero:%d raise:%d lower:%d sign:%d xyp:%d/%d/%d\\n"""		1642506	0					
ANR	1644326	PrimaryExpression	"""after_last:%d to_zero:%d from_zero:%d raise:%d lower:%d sign:%d xyp:%d/%d/%d\\n"""		1642506	0					
ANR	1644327	Argument	after_last		1642506	1					
ANR	1644328	Identifier	after_last		1642506	0					
ANR	1644329	Argument	to_zero		1642506	2					
ANR	1644330	Identifier	to_zero		1642506	0					
ANR	1644331	Argument	from_zero		1642506	3					
ANR	1644332	Identifier	from_zero		1642506	0					
ANR	1644333	Argument	raise		1642506	4					
ANR	1644334	Identifier	raise		1642506	0					
ANR	1644335	Argument	lower		1642506	5					
ANR	1644336	Identifier	lower		1642506	0					
ANR	1644337	Argument	messed_sign		1642506	6					
ANR	1644338	Identifier	messed_sign		1642506	0					
ANR	1644339	Argument	s -> mb_x		1642506	7					
ANR	1644340	PtrMemberAccess	s -> mb_x		1642506	0					
ANR	1644341	Identifier	s		1642506	0					
ANR	1644342	Identifier	mb_x		1642506	1					
ANR	1644343	Argument	s -> mb_y		1642506	8					
ANR	1644344	PtrMemberAccess	s -> mb_y		1642506	0					
ANR	1644345	Identifier	s		1642506	0					
ANR	1644346	Identifier	mb_y		1642506	1					
ANR	1644347	Argument	s -> picture_number		1642506	9					
ANR	1644348	PtrMemberAccess	s -> picture_number		1642506	0					
ANR	1644349	Identifier	s		1642506	0					
ANR	1644350	Identifier	picture_number		1642506	1					
ANR	1644351	ExpressionStatement	run = 0	695:12:11860:11865	1642506	5	True				
ANR	1644352	AssignmentExpression	run = 0		1642506	0		=			
ANR	1644353	Identifier	run		1642506	0					
ANR	1644354	PrimaryExpression	0		1642506	1					
ANR	1644355	ExpressionStatement	rle_index = 0	697:12:11880:11891	1642506	6	True				
ANR	1644356	AssignmentExpression	rle_index = 0		1642506	0		=			
ANR	1644357	Identifier	rle_index		1642506	0					
ANR	1644358	PrimaryExpression	0		1642506	1					
ANR	1644359	ForStatement	for ( i = start_i ; i <= last_non_zero ; i ++ )		1642506	7					
ANR	1644360	ForInit	i = start_i ;	699:16:11910:11919	1642506	0	True				
ANR	1644361	AssignmentExpression	i = start_i		1642506	0		=			
ANR	1644362	Identifier	i		1642506	0					
ANR	1644363	Identifier	start_i		1642506	1					
ANR	1644364	Condition	i <= last_non_zero	699:27:11921:11936	1642506	1	True				
ANR	1644365	RelationalExpression	i <= last_non_zero		1642506	0		<=			
ANR	1644366	Identifier	i		1642506	0					
ANR	1644367	Identifier	last_non_zero		1642506	1					
ANR	1644368	PostIncDecOperationExpression	i ++	699:45:11939:11941	1642506	2	True				
ANR	1644369	Identifier	i		1642506	0					
ANR	1644370	IncDec	++		1642506	1					
ANR	1644371	CompoundStatement		699:16:11814:11839	1642506	3					
ANR	1644372	IdentifierDeclStatement	int j = perm_scantable [ i ] ;	701:16:11962:11986	1642506	0	True				
ANR	1644373	IdentifierDecl	j = perm_scantable [ i ]		1642506	0					
ANR	1644374	IdentifierDeclType	int		1642506	0					
ANR	1644375	Identifier	j		1642506	1					
ANR	1644376	AssignmentExpression	j = perm_scantable [ i ]		1642506	2		=			
ANR	1644377	Identifier	j		1642506	0					
ANR	1644378	ArrayIndexing	perm_scantable [ i ]		1642506	1					
ANR	1644379	Identifier	perm_scantable		1642506	0					
ANR	1644380	Identifier	i		1642506	1					
ANR	1644381	IdentifierDeclStatement	const int level = block [ j ] ;	703:16:12005:12030	1642506	1	True				
ANR	1644382	IdentifierDecl	level = block [ j ]		1642506	0					
ANR	1644383	IdentifierDeclType	const int		1642506	0					
ANR	1644384	Identifier	level		1642506	1					
ANR	1644385	AssignmentExpression	level = block [ j ]		1642506	2		=			
ANR	1644386	Identifier	level		1642506	0					
ANR	1644387	ArrayIndexing	block [ j ]		1642506	1					
ANR	1644388	Identifier	block		1642506	0					
ANR	1644389	Identifier	j		1642506	1					
ANR	1644390	IfStatement	if ( level )		1642506	2					
ANR	1644391	Condition	level	707:20:12063:12067	1642506	0	True				
ANR	1644392	Identifier	level		1642506	0					
ANR	1644393	CompoundStatement		703:26:11878:11878	1642506	1					
ANR	1644394	ExpressionStatement	run_tab [ rle_index ++ ] = run	709:21:12093:12117	1642506	0	True				
ANR	1644395	AssignmentExpression	run_tab [ rle_index ++ ] = run		1642506	0		=			
ANR	1644396	ArrayIndexing	run_tab [ rle_index ++ ]		1642506	0					
ANR	1644397	Identifier	run_tab		1642506	0					
ANR	1644398	PostIncDecOperationExpression	rle_index ++		1642506	1					
ANR	1644399	Identifier	rle_index		1642506	0					
ANR	1644400	IncDec	++		1642506	1					
ANR	1644401	Identifier	run		1642506	1					
ANR	1644402	ExpressionStatement	run = 0	711:21:12141:12146	1642506	1	True				
ANR	1644403	AssignmentExpression	run = 0		1642506	0		=			
ANR	1644404	Identifier	run		1642506	0					
ANR	1644405	PrimaryExpression	0		1642506	1					
ANR	1644406	ElseStatement	else		1642506	0					
ANR	1644407	CompoundStatement		709:22:11980:11980	1642506	0					
ANR	1644408	ExpressionStatement	run ++	715:21:12195:12200	1642506	0	True				
ANR	1644409	PostIncDecOperationExpression	run ++		1642506	0					
ANR	1644410	Identifier	run		1642506	0					
ANR	1644411	IncDec	++		1642506	1					
ANR	1644412	ExpressionStatement	"s -> dsp . add_8x8basis ( rem , basis [ j ] , best_unquant_change )"	723:12:12264:12319	1642506	8	True				
ANR	1644413	CallExpression	"s -> dsp . add_8x8basis ( rem , basis [ j ] , best_unquant_change )"		1642506	0					
ANR	1644414	Callee	s -> dsp . add_8x8basis		1642506	0					
ANR	1644415	MemberAccess	s -> dsp . add_8x8basis		1642506	0					
ANR	1644416	PtrMemberAccess	s -> dsp		1642506	0					
ANR	1644417	Identifier	s		1642506	0					
ANR	1644418	Identifier	dsp		1642506	1					
ANR	1644419	Identifier	add_8x8basis		1642506	1					
ANR	1644420	ArgumentList	rem		1642506	1					
ANR	1644421	Argument	rem		1642506	0					
ANR	1644422	Identifier	rem		1642506	0					
ANR	1644423	Argument	basis [ j ]		1642506	1					
ANR	1644424	ArrayIndexing	basis [ j ]		1642506	0					
ANR	1644425	Identifier	basis		1642506	0					
ANR	1644426	Identifier	j		1642506	1					
ANR	1644427	Argument	best_unquant_change		1642506	2					
ANR	1644428	Identifier	best_unquant_change		1642506	0					
ANR	1644429	ElseStatement	else		1642506	0					
ANR	1644430	CompoundStatement		721:13:12144:12144	1642506	0					
ANR	1644431	BreakStatement	break ;	727:12:12350:12355	1642506	0	True				
ANR	1644432	IfStatement	if ( last_non_zero > 0 )		1642506	2					
ANR	1644433	Condition	last_non_zero > 0	735:3:12400:12414	1642506	0	True				
ANR	1644434	RelationalExpression	last_non_zero > 0		1642506	0		>			
ANR	1644435	Identifier	last_non_zero		1642506	0					
ANR	1644436	PrimaryExpression	0		1642506	1					
ANR	1644437	CompoundStatement		731:19:12225:12225	1642506	1					
ANR	1644438	Statement	STOP_TIMER	737:0:12419:12428	1642506	0	True				
ANR	1644439	Statement	(	737:10:12429:12429	1642506	1	True				
ANR	1644440	Statement	"""iterative search"""	737:11:12430:12447	1642506	2	True				
ANR	1644441	Statement	)	737:29:12448:12448	1642506	3	True				
ANR	1644442	ReturnStatement	return last_non_zero ;	747:4:12471:12491	1642506	38	True				
ANR	1644443	Identifier	last_non_zero		1642506	0					
ANR	1644444	ReturnType	static int		1642506	1					
ANR	1644445	Identifier	dct_quantize_refine		1642506	2					
ANR	1644446	ParameterList	"MpegEncContext * s , DCTELEM * block , int16_t * weight , DCTELEM * orig , int n , int qscale"		1642506	3					
ANR	1644447	Parameter	MpegEncContext * s	1:31:31:47	1642506	0	True				
ANR	1644448	ParameterType	MpegEncContext *		1642506	0					
ANR	1644449	Identifier	s		1642506	1					
ANR	1644450	Parameter	DCTELEM * block	3:24:99:112	1642506	1	True				
ANR	1644451	ParameterType	DCTELEM *		1642506	0					
ANR	1644452	Identifier	block		1642506	1					
ANR	1644453	Parameter	int16_t * weight	3:40:115:129	1642506	2	True				
ANR	1644454	ParameterType	int16_t *		1642506	0					
ANR	1644455	Identifier	weight		1642506	1					
ANR	1644456	Parameter	DCTELEM * orig	3:57:132:144	1642506	3	True				
ANR	1644457	ParameterType	DCTELEM *		1642506	0					
ANR	1644458	Identifier	orig		1642506	1					
ANR	1644459	Parameter	int n	5:24:172:176	1642506	4	True				
ANR	1644460	ParameterType	int		1642506	0					
ANR	1644461	Identifier	n		1642506	1					
ANR	1644462	Parameter	int qscale	5:31:179:188	1642506	5	True				
ANR	1644463	ParameterType	int		1642506	0					
ANR	1644464	Identifier	qscale		1642506	1					
ANR	1644465	CFGEntryNode	ENTRY		1642506		True				
ANR	1644466	CFGExitNode	EXIT		1642506		True				
ANR	1644467	InfiniteForNode	true		1642506		True				
ANR	1644468	Symbol	* d1		1642506						
ANR	1644469	Symbol	score		1642506						
ANR	1644470	Symbol	lambda		1642506						
ANR	1644471	Symbol	block		1642506						
ANR	1644472	Symbol	RECON_SHIFT		1642506						
ANR	1644473	Symbol	s -> intra_scantable . scantable		1642506						
ANR	1644474	Symbol	* qscale		1642506						
ANR	1644475	Symbol	scantable		1642506						
ANR	1644476	Symbol	s -> mb_intra		1642506						
ANR	1644477	Symbol	* run_tab		1642506						
ANR	1644478	Symbol	start_i		1642506						
ANR	1644479	Symbol	lower		1642506						
ANR	1644480	Symbol	s -> intra_scantable		1642506						
ANR	1644481	Symbol	perm_scantable		1642506						
ANR	1644482	Symbol	s -> dsp		1642506						
ANR	1644483	Symbol	qscale		1642506						
ANR	1644484	Symbol	run2		1642506						
ANR	1644485	Symbol	s -> inter_ac_vlc_length		1642506						
ANR	1644486	Symbol	* basis		1642506						
ANR	1644487	Symbol	last_length		1642506						
ANR	1644488	Symbol	best_score		1642506						
ANR	1644489	Symbol	* UNI_AC_ENC_INDEX		1642506						
ANR	1644490	Symbol	sum		1642506						
ANR	1644491	Symbol	s -> h263_aic		1642506						
ANR	1644492	Symbol	analyze_gradient		1642506						
ANR	1644493	Symbol	messed_sign		1642506						
ANR	1644494	Symbol	d1		1642506						
ANR	1644495	Symbol	s -> intra_ac_vlc_length		1642506						
ANR	1644496	Symbol	ABS		1642506						
ANR	1644497	Symbol	* * s		1642506						
ANR	1644498	Symbol	* length		1642506						
ANR	1644499	Symbol	coeff		1642506						
ANR	1644500	Symbol	unquant_change		1642506						
ANR	1644501	Symbol	next_i		1642506						
ANR	1644502	Symbol	s -> avctx -> quantizer_noise_shaping		1642506						
ANR	1644503	Symbol	one		1642506						
ANR	1644504	Symbol	change		1642506						
ANR	1644505	Symbol	g		1642506						
ANR	1644506	Symbol	i		1642506						
ANR	1644507	Symbol	j		1642506						
ANR	1644508	Symbol	n		1642506						
ANR	1644509	Symbol	prev_run		1642506						
ANR	1644510	Symbol	q		1642506						
ANR	1644511	Symbol	s -> block_last_index		1642506						
ANR	1644512	Symbol	s		1642506						
ANR	1644513	Symbol	s -> lambda2		1642506						
ANR	1644514	Symbol	orig		1642506						
ANR	1644515	Symbol	w		1642506						
ANR	1644516	Symbol	* * last_non_zero		1642506						
ANR	1644517	Symbol	qmat		1642506						
ANR	1644518	Symbol	s -> inter_ac_vlc_last_length		1642506						
ANR	1644519	Symbol	dc		1642506						
ANR	1644520	Symbol	* * basis		1642506						
ANR	1644521	Symbol	* best_coeff		1642506						
ANR	1644522	Symbol	best_coeff		1642506						
ANR	1644523	Symbol	qmul		1642506						
ANR	1644524	Symbol	run_tab		1642506						
ANR	1644525	Symbol	run		1642506						
ANR	1644526	Symbol	s -> c_dc_scale		1642506						
ANR	1644527	Symbol	next_level		1642506						
ANR	1644528	Symbol	raise		1642506						
ANR	1644529	Symbol	* last_non_zero		1642506						
ANR	1644530	Symbol	* s -> q_inter_matrix		1642506						
ANR	1644531	Symbol	rem		1642506						
ANR	1644532	Symbol	rle_index		1642506						
ANR	1644533	Symbol	new_coeff		1642506						
ANR	1644534	Symbol	* * perm_scantable		1642506						
ANR	1644535	Symbol	* s -> avctx		1642506						
ANR	1644536	Symbol	* * i		1642506						
ANR	1644537	Symbol	qadd		1642506						
ANR	1644538	Symbol	* weight		1642506						
ANR	1644539	Symbol	new_level		1642506						
ANR	1644540	Symbol	level		1642506						
ANR	1644541	Symbol	count		1642506						
ANR	1644542	Symbol	s -> q_intra_matrix		1642506						
ANR	1644543	Symbol	weight		1642506						
ANR	1644544	Symbol	s -> picture_number		1642506						
ANR	1644545	Symbol	basis		1642506						
ANR	1644546	Symbol	s -> mb_x		1642506						
ANR	1644547	Symbol	s -> mb_y		1642506						
ANR	1644548	Symbol	prev_level		1642506						
ANR	1644549	Symbol	s -> avctx		1642506						
ANR	1644550	Symbol	old_coeff		1642506						
ANR	1644551	Symbol	s -> intra_ac_vlc_last_length		1642506						
ANR	1644552	Symbol	* perm_scantable		1642506						
ANR	1644553	Symbol	* * scantable		1642506						
ANR	1644554	Symbol	best_unquant_change		1642506						
ANR	1644555	Symbol	~127		1642506						
ANR	1644556	Symbol	* rem		1642506						
ANR	1644557	Symbol	* * next_i		1642506						
ANR	1644558	Symbol	from_zero		1642506						
ANR	1644559	Symbol	* s -> q_intra_matrix		1642506						
ANR	1644560	Symbol	s -> y_dc_scale		1642506						
ANR	1644561	Symbol	* orig		1642506						
ANR	1644562	Symbol	to_zero		1642506						
ANR	1644563	Symbol	last_non_zero		1642506						
ANR	1644564	Symbol	s -> q_inter_matrix		1642506						
ANR	1644565	Symbol	* s -> block_last_index		1642506						
ANR	1644566	Symbol	s -> intra_scantable . permutated		1642506						
ANR	1644567	Symbol	* next_i		1642506						
ANR	1644568	Symbol	length		1642506						
ANR	1644569	Symbol	FF_LAMBDA_SHIFT		1642506						
ANR	1644570	Symbol	UNI_AC_ENC_INDEX		1642506						
ANR	1644571	Symbol	* block		1642506						
ANR	1644572	Symbol	after_last		1642506						
ANR	1644573	Symbol	* i		1642506						
ANR	1644574	Symbol	* j		1642506						
ANR	1644575	Symbol	qns		1642506						
ANR	1644576	Symbol	* n		1642506						
ANR	1644577	Symbol	best_change		1642506						
ANR	1644578	Symbol	s -> dsp . try_8x8basis		1642506						
ANR	1644579	Symbol	* scantable		1642506						
ANR	1644580	Symbol	* s		1642506						
ANR	1644581	Symbol	* last_length		1642506						
ANR	1644582	Symbol	s -> dsp . idct_permutation		1642506						
