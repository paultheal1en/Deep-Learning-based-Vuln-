command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7274581	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_decoding_params_0.c								
ANR	7274582	Function	read_decoding_params	1:0:0:1740							
ANR	7274583	FunctionDef	"read_decoding_params (MLPDecodeContext * m , GetBitContext * gbp , unsigned int substr)"		7274582	0					
ANR	7274584	CompoundStatement		5:0:128:1740	7274582	0					
ANR	7274585	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	7:4:135:171	7274582	0	True				
ANR	7274586	IdentifierDecl	* s = & m -> substream [ substr ]		7274582	0					
ANR	7274587	IdentifierDeclType	SubStream *		7274582	0					
ANR	7274588	Identifier	s		7274582	1					
ANR	7274589	AssignmentExpression	* s = & m -> substream [ substr ]		7274582	2		=			
ANR	7274590	Identifier	s		7274582	0					
ANR	7274591	UnaryOperationExpression	& m -> substream [ substr ]		7274582	1					
ANR	7274592	UnaryOperator	&		7274582	0					
ANR	7274593	ArrayIndexing	m -> substream [ substr ]		7274582	1					
ANR	7274594	PtrMemberAccess	m -> substream		7274582	0					
ANR	7274595	Identifier	m		7274582	0					
ANR	7274596	Identifier	substream		7274582	1					
ANR	7274597	Identifier	substr		7274582	1					
ANR	7274598	IdentifierDeclStatement	unsigned int ch ;	9:4:178:193	7274582	1	True				
ANR	7274599	IdentifierDecl	ch		7274582	0					
ANR	7274600	IdentifierDeclType	unsigned int		7274582	0					
ANR	7274601	Identifier	ch		7274582	1					
ANR	7274602	IfStatement	if ( s -> param_presence_flags & PARAM_PRESENCE )		7274582	2					
ANR	7274603	Condition	s -> param_presence_flags & PARAM_PRESENCE	13:8:206:245	7274582	0	True				
ANR	7274604	BitAndExpression	s -> param_presence_flags & PARAM_PRESENCE		7274582	0		&			
ANR	7274605	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274606	Identifier	s		7274582	0					
ANR	7274607	Identifier	param_presence_flags		7274582	1					
ANR	7274608	Identifier	PARAM_PRESENCE		7274582	1					
ANR	7274609	IfStatement	if ( get_bits1 ( gbp ) )		7274582	1					
ANR	7274610	Condition	get_bits1 ( gbp )	15:8:257:270	7274582	0	True				
ANR	7274611	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274612	Callee	get_bits1		7274582	0					
ANR	7274613	Identifier	get_bits1		7274582	0					
ANR	7274614	ArgumentList	gbp		7274582	1					
ANR	7274615	Argument	gbp		7274582	0					
ANR	7274616	Identifier	gbp		7274582	0					
ANR	7274617	ExpressionStatement	"s -> param_presence_flags = get_bits ( gbp , 8 )"	17:8:282:324	7274582	1	True				
ANR	7274618	AssignmentExpression	"s -> param_presence_flags = get_bits ( gbp , 8 )"		7274582	0		=			
ANR	7274619	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274620	Identifier	s		7274582	0					
ANR	7274621	Identifier	param_presence_flags		7274582	1					
ANR	7274622	CallExpression	"get_bits ( gbp , 8 )"		7274582	1					
ANR	7274623	Callee	get_bits		7274582	0					
ANR	7274624	Identifier	get_bits		7274582	0					
ANR	7274625	ArgumentList	gbp		7274582	1					
ANR	7274626	Argument	gbp		7274582	0					
ANR	7274627	Identifier	gbp		7274582	0					
ANR	7274628	Argument	8		7274582	1					
ANR	7274629	PrimaryExpression	8		7274582	0					
ANR	7274630	IfStatement	if ( s -> param_presence_flags & PARAM_BLOCKSIZE )		7274582	3					
ANR	7274631	Condition	s -> param_presence_flags & PARAM_BLOCKSIZE	21:8:337:377	7274582	0	True				
ANR	7274632	BitAndExpression	s -> param_presence_flags & PARAM_BLOCKSIZE		7274582	0		&			
ANR	7274633	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274634	Identifier	s		7274582	0					
ANR	7274635	Identifier	param_presence_flags		7274582	1					
ANR	7274636	Identifier	PARAM_BLOCKSIZE		7274582	1					
ANR	7274637	IfStatement	if ( get_bits1 ( gbp ) )		7274582	1					
ANR	7274638	Condition	get_bits1 ( gbp )	23:12:393:406	7274582	0	True				
ANR	7274639	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274640	Callee	get_bits1		7274582	0					
ANR	7274641	Identifier	get_bits1		7274582	0					
ANR	7274642	ArgumentList	gbp		7274582	1					
ANR	7274643	Argument	gbp		7274582	0					
ANR	7274644	Identifier	gbp		7274582	0					
ANR	7274645	CompoundStatement		19:28:280:280	7274582	1					
ANR	7274646	ExpressionStatement	"s -> blocksize = get_bits ( gbp , 9 )"	25:12:424:455	7274582	0	True				
ANR	7274647	AssignmentExpression	"s -> blocksize = get_bits ( gbp , 9 )"		7274582	0		=			
ANR	7274648	PtrMemberAccess	s -> blocksize		7274582	0					
ANR	7274649	Identifier	s		7274582	0					
ANR	7274650	Identifier	blocksize		7274582	1					
ANR	7274651	CallExpression	"get_bits ( gbp , 9 )"		7274582	1					
ANR	7274652	Callee	get_bits		7274582	0					
ANR	7274653	Identifier	get_bits		7274582	0					
ANR	7274654	ArgumentList	gbp		7274582	1					
ANR	7274655	Argument	gbp		7274582	0					
ANR	7274656	Identifier	gbp		7274582	0					
ANR	7274657	Argument	9		7274582	1					
ANR	7274658	PrimaryExpression	9		7274582	0					
ANR	7274659	IfStatement	if ( s -> blocksize > MAX_BLOCKSIZE )		7274582	1					
ANR	7274660	Condition	s -> blocksize > MAX_BLOCKSIZE	27:16:474:501	7274582	0	True				
ANR	7274661	RelationalExpression	s -> blocksize > MAX_BLOCKSIZE		7274582	0		>			
ANR	7274662	PtrMemberAccess	s -> blocksize		7274582	0					
ANR	7274663	Identifier	s		7274582	0					
ANR	7274664	Identifier	blocksize		7274582	1					
ANR	7274665	Identifier	MAX_BLOCKSIZE		7274582	1					
ANR	7274666	CompoundStatement		23:46:375:375	7274582	1					
ANR	7274667	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""block size too large\\n"" )"	29:16:523:579	7274582	0	True				
ANR	7274668	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""block size too large\\n"" )"		7274582	0					
ANR	7274669	Callee	av_log		7274582	0					
ANR	7274670	Identifier	av_log		7274582	0					
ANR	7274671	ArgumentList	m -> avctx		7274582	1					
ANR	7274672	Argument	m -> avctx		7274582	0					
ANR	7274673	PtrMemberAccess	m -> avctx		7274582	0					
ANR	7274674	Identifier	m		7274582	0					
ANR	7274675	Identifier	avctx		7274582	1					
ANR	7274676	Argument	AV_LOG_ERROR		7274582	1					
ANR	7274677	Identifier	AV_LOG_ERROR		7274582	0					
ANR	7274678	Argument	"""block size too large\\n"""		7274582	2					
ANR	7274679	PrimaryExpression	"""block size too large\\n"""		7274582	0					
ANR	7274680	ExpressionStatement	s -> blocksize = 0	31:16:598:614	7274582	1	True				
ANR	7274681	AssignmentExpression	s -> blocksize = 0		7274582	0		=			
ANR	7274682	PtrMemberAccess	s -> blocksize		7274582	0					
ANR	7274683	Identifier	s		7274582	0					
ANR	7274684	Identifier	blocksize		7274582	1					
ANR	7274685	PrimaryExpression	0		7274582	1					
ANR	7274686	ReturnStatement	return - 1 ;	33:16:633:642	7274582	2	True				
ANR	7274687	UnaryOperationExpression	- 1		7274582	0					
ANR	7274688	UnaryOperator	-		7274582	0					
ANR	7274689	PrimaryExpression	1		7274582	1					
ANR	7274690	IfStatement	if ( s -> param_presence_flags & PARAM_MATRIX )		7274582	4					
ANR	7274691	Condition	s -> param_presence_flags & PARAM_MATRIX	41:8:681:718	7274582	0	True				
ANR	7274692	BitAndExpression	s -> param_presence_flags & PARAM_MATRIX		7274582	0		&			
ANR	7274693	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274694	Identifier	s		7274582	0					
ANR	7274695	Identifier	param_presence_flags		7274582	1					
ANR	7274696	Identifier	PARAM_MATRIX		7274582	1					
ANR	7274697	IfStatement	if ( get_bits1 ( gbp ) )		7274582	1					
ANR	7274698	Condition	get_bits1 ( gbp )	43:12:734:747	7274582	0	True				
ANR	7274699	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274700	Callee	get_bits1		7274582	0					
ANR	7274701	Identifier	get_bits1		7274582	0					
ANR	7274702	ArgumentList	gbp		7274582	1					
ANR	7274703	Argument	gbp		7274582	0					
ANR	7274704	Identifier	gbp		7274582	0					
ANR	7274705	CompoundStatement		39:28:621:621	7274582	1					
ANR	7274706	IfStatement	"if ( read_matrix_params ( m , s , gbp ) < 0 )"		7274582	0					
ANR	7274707	Condition	"read_matrix_params ( m , s , gbp ) < 0"	45:16:769:801	7274582	0	True				
ANR	7274708	RelationalExpression	"read_matrix_params ( m , s , gbp ) < 0"		7274582	0		<			
ANR	7274709	CallExpression	"read_matrix_params ( m , s , gbp )"		7274582	0					
ANR	7274710	Callee	read_matrix_params		7274582	0					
ANR	7274711	Identifier	read_matrix_params		7274582	0					
ANR	7274712	ArgumentList	m		7274582	1					
ANR	7274713	Argument	m		7274582	0					
ANR	7274714	Identifier	m		7274582	0					
ANR	7274715	Argument	s		7274582	1					
ANR	7274716	Identifier	s		7274582	0					
ANR	7274717	Argument	gbp		7274582	2					
ANR	7274718	Identifier	gbp		7274582	0					
ANR	7274719	PrimaryExpression	0		7274582	1					
ANR	7274720	ReturnStatement	return - 1 ;	47:16:821:830	7274582	1	True				
ANR	7274721	UnaryOperationExpression	- 1		7274582	0					
ANR	7274722	UnaryOperator	-		7274582	0					
ANR	7274723	PrimaryExpression	1		7274582	1					
ANR	7274724	IfStatement	if ( s -> param_presence_flags & PARAM_OUTSHIFT )		7274582	5					
ANR	7274725	Condition	s -> param_presence_flags & PARAM_OUTSHIFT	53:8:854:893	7274582	0	True				
ANR	7274726	BitAndExpression	s -> param_presence_flags & PARAM_OUTSHIFT		7274582	0		&			
ANR	7274727	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274728	Identifier	s		7274582	0					
ANR	7274729	Identifier	param_presence_flags		7274582	1					
ANR	7274730	Identifier	PARAM_OUTSHIFT		7274582	1					
ANR	7274731	IfStatement	if ( get_bits1 ( gbp ) )		7274582	1					
ANR	7274732	Condition	get_bits1 ( gbp )	55:12:909:922	7274582	0	True				
ANR	7274733	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274734	Callee	get_bits1		7274582	0					
ANR	7274735	Identifier	get_bits1		7274582	0					
ANR	7274736	ArgumentList	gbp		7274582	1					
ANR	7274737	Argument	gbp		7274582	0					
ANR	7274738	Identifier	gbp		7274582	0					
ANR	7274739	ForStatement	for ( ch = 0 ; ch <= s -> max_matrix_channel ; ch ++ )		7274582	1					
ANR	7274740	ForInit	ch = 0 ;	57:17:943:949	7274582	0	True				
ANR	7274741	AssignmentExpression	ch = 0		7274582	0		=			
ANR	7274742	Identifier	ch		7274582	0					
ANR	7274743	PrimaryExpression	0		7274582	1					
ANR	7274744	Condition	ch <= s -> max_matrix_channel	57:25:951:977	7274582	1	True				
ANR	7274745	RelationalExpression	ch <= s -> max_matrix_channel		7274582	0		<=			
ANR	7274746	Identifier	ch		7274582	0					
ANR	7274747	PtrMemberAccess	s -> max_matrix_channel		7274582	1					
ANR	7274748	Identifier	s		7274582	0					
ANR	7274749	Identifier	max_matrix_channel		7274582	1					
ANR	7274750	PostIncDecOperationExpression	ch ++	57:54:980:983	7274582	2	True				
ANR	7274751	Identifier	ch		7274582	0					
ANR	7274752	IncDec	++		7274582	1					
ANR	7274753	CompoundStatement		53:60:857:857	7274582	3					
ANR	7274754	ExpressionStatement	"s -> output_shift [ ch ] = get_sbits ( gbp , 4 )"	59:16:1005:1044	7274582	0	True				
ANR	7274755	AssignmentExpression	"s -> output_shift [ ch ] = get_sbits ( gbp , 4 )"		7274582	0		=			
ANR	7274756	ArrayIndexing	s -> output_shift [ ch ]		7274582	0					
ANR	7274757	PtrMemberAccess	s -> output_shift		7274582	0					
ANR	7274758	Identifier	s		7274582	0					
ANR	7274759	Identifier	output_shift		7274582	1					
ANR	7274760	Identifier	ch		7274582	1					
ANR	7274761	CallExpression	"get_sbits ( gbp , 4 )"		7274582	1					
ANR	7274762	Callee	get_sbits		7274582	0					
ANR	7274763	Identifier	get_sbits		7274582	0					
ANR	7274764	ArgumentList	gbp		7274582	1					
ANR	7274765	Argument	gbp		7274582	0					
ANR	7274766	Identifier	gbp		7274582	0					
ANR	7274767	Argument	4		7274582	1					
ANR	7274768	PrimaryExpression	4		7274582	0					
ANR	7274769	ExpressionStatement	"dprintf ( m -> avctx , ""output shift[%d] = %d\\n"" , ch , s -> output_shift [ ch ] )"	61:16:1063:1157	7274582	1	True				
ANR	7274770	CallExpression	"dprintf ( m -> avctx , ""output shift[%d] = %d\\n"" , ch , s -> output_shift [ ch ] )"		7274582	0					
ANR	7274771	Callee	dprintf		7274582	0					
ANR	7274772	Identifier	dprintf		7274582	0					
ANR	7274773	ArgumentList	m -> avctx		7274582	1					
ANR	7274774	Argument	m -> avctx		7274582	0					
ANR	7274775	PtrMemberAccess	m -> avctx		7274582	0					
ANR	7274776	Identifier	m		7274582	0					
ANR	7274777	Identifier	avctx		7274582	1					
ANR	7274778	Argument	"""output shift[%d] = %d\\n"""		7274582	1					
ANR	7274779	PrimaryExpression	"""output shift[%d] = %d\\n"""		7274582	0					
ANR	7274780	Argument	ch		7274582	2					
ANR	7274781	Identifier	ch		7274582	0					
ANR	7274782	Argument	s -> output_shift [ ch ]		7274582	3					
ANR	7274783	ArrayIndexing	s -> output_shift [ ch ]		7274582	0					
ANR	7274784	PtrMemberAccess	s -> output_shift		7274582	0					
ANR	7274785	Identifier	s		7274582	0					
ANR	7274786	Identifier	output_shift		7274582	1					
ANR	7274787	Identifier	ch		7274582	1					
ANR	7274788	IfStatement	if ( s -> param_presence_flags & PARAM_QUANTSTEP )		7274582	6					
ANR	7274789	Condition	s -> param_presence_flags & PARAM_QUANTSTEP	69:8:1185:1225	7274582	0	True				
ANR	7274790	BitAndExpression	s -> param_presence_flags & PARAM_QUANTSTEP		7274582	0		&			
ANR	7274791	PtrMemberAccess	s -> param_presence_flags		7274582	0					
ANR	7274792	Identifier	s		7274582	0					
ANR	7274793	Identifier	param_presence_flags		7274582	1					
ANR	7274794	Identifier	PARAM_QUANTSTEP		7274582	1					
ANR	7274795	IfStatement	if ( get_bits1 ( gbp ) )		7274582	1					
ANR	7274796	Condition	get_bits1 ( gbp )	71:12:1241:1254	7274582	0	True				
ANR	7274797	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274798	Callee	get_bits1		7274582	0					
ANR	7274799	Identifier	get_bits1		7274582	0					
ANR	7274800	ArgumentList	gbp		7274582	1					
ANR	7274801	Argument	gbp		7274582	0					
ANR	7274802	Identifier	gbp		7274582	0					
ANR	7274803	ForStatement	for ( ch = 0 ; ch <= s -> max_channel ; ch ++ )		7274582	1					
ANR	7274804	ForInit	ch = 0 ;	73:17:1275:1281	7274582	0	True				
ANR	7274805	AssignmentExpression	ch = 0		7274582	0		=			
ANR	7274806	Identifier	ch		7274582	0					
ANR	7274807	PrimaryExpression	0		7274582	1					
ANR	7274808	Condition	ch <= s -> max_channel	73:25:1283:1302	7274582	1	True				
ANR	7274809	RelationalExpression	ch <= s -> max_channel		7274582	0		<=			
ANR	7274810	Identifier	ch		7274582	0					
ANR	7274811	PtrMemberAccess	s -> max_channel		7274582	1					
ANR	7274812	Identifier	s		7274582	0					
ANR	7274813	Identifier	max_channel		7274582	1					
ANR	7274814	PostIncDecOperationExpression	ch ++	73:47:1305:1308	7274582	2	True				
ANR	7274815	Identifier	ch		7274582	0					
ANR	7274816	IncDec	++		7274582	1					
ANR	7274817	CompoundStatement		71:16:1201:1243	7274582	3					
ANR	7274818	IdentifierDeclStatement	ChannelParams * cp = & m -> channel_params [ ch ] ;	75:16:1330:1372	7274582	0	True				
ANR	7274819	IdentifierDecl	* cp = & m -> channel_params [ ch ]		7274582	0					
ANR	7274820	IdentifierDeclType	ChannelParams *		7274582	0					
ANR	7274821	Identifier	cp		7274582	1					
ANR	7274822	AssignmentExpression	* cp = & m -> channel_params [ ch ]		7274582	2		=			
ANR	7274823	Identifier	cp		7274582	0					
ANR	7274824	UnaryOperationExpression	& m -> channel_params [ ch ]		7274582	1					
ANR	7274825	UnaryOperator	&		7274582	0					
ANR	7274826	ArrayIndexing	m -> channel_params [ ch ]		7274582	1					
ANR	7274827	PtrMemberAccess	m -> channel_params		7274582	0					
ANR	7274828	Identifier	m		7274582	0					
ANR	7274829	Identifier	channel_params		7274582	1					
ANR	7274830	Identifier	ch		7274582	1					
ANR	7274831	ExpressionStatement	"s -> quant_step_size [ ch ] = get_bits ( gbp , 4 )"	79:16:1393:1434	7274582	1	True				
ANR	7274832	AssignmentExpression	"s -> quant_step_size [ ch ] = get_bits ( gbp , 4 )"		7274582	0		=			
ANR	7274833	ArrayIndexing	s -> quant_step_size [ ch ]		7274582	0					
ANR	7274834	PtrMemberAccess	s -> quant_step_size		7274582	0					
ANR	7274835	Identifier	s		7274582	0					
ANR	7274836	Identifier	quant_step_size		7274582	1					
ANR	7274837	Identifier	ch		7274582	1					
ANR	7274838	CallExpression	"get_bits ( gbp , 4 )"		7274582	1					
ANR	7274839	Callee	get_bits		7274582	0					
ANR	7274840	Identifier	get_bits		7274582	0					
ANR	7274841	ArgumentList	gbp		7274582	1					
ANR	7274842	Argument	gbp		7274582	0					
ANR	7274843	Identifier	gbp		7274582	0					
ANR	7274844	Argument	4		7274582	1					
ANR	7274845	PrimaryExpression	4		7274582	0					
ANR	7274846	ExpressionStatement	"cp -> sign_huff_offset = calculate_sign_huff ( m , substr , ch )"	83:16:1455:1512	7274582	2	True				
ANR	7274847	AssignmentExpression	"cp -> sign_huff_offset = calculate_sign_huff ( m , substr , ch )"		7274582	0		=			
ANR	7274848	PtrMemberAccess	cp -> sign_huff_offset		7274582	0					
ANR	7274849	Identifier	cp		7274582	0					
ANR	7274850	Identifier	sign_huff_offset		7274582	1					
ANR	7274851	CallExpression	"calculate_sign_huff ( m , substr , ch )"		7274582	1					
ANR	7274852	Callee	calculate_sign_huff		7274582	0					
ANR	7274853	Identifier	calculate_sign_huff		7274582	0					
ANR	7274854	ArgumentList	m		7274582	1					
ANR	7274855	Argument	m		7274582	0					
ANR	7274856	Identifier	m		7274582	0					
ANR	7274857	Argument	substr		7274582	1					
ANR	7274858	Identifier	substr		7274582	0					
ANR	7274859	Argument	ch		7274582	2					
ANR	7274860	Identifier	ch		7274582	0					
ANR	7274861	ForStatement	for ( ch = s -> min_channel ; ch <= s -> max_channel ; ch ++ )		7274582	7					
ANR	7274862	ForInit	ch = s -> min_channel ;	89:9:1541:1560	7274582	0	True				
ANR	7274863	AssignmentExpression	ch = s -> min_channel		7274582	0		=			
ANR	7274864	Identifier	ch		7274582	0					
ANR	7274865	PtrMemberAccess	s -> min_channel		7274582	1					
ANR	7274866	Identifier	s		7274582	0					
ANR	7274867	Identifier	min_channel		7274582	1					
ANR	7274868	Condition	ch <= s -> max_channel	89:30:1562:1581	7274582	1	True				
ANR	7274869	RelationalExpression	ch <= s -> max_channel		7274582	0		<=			
ANR	7274870	Identifier	ch		7274582	0					
ANR	7274871	PtrMemberAccess	s -> max_channel		7274582	1					
ANR	7274872	Identifier	s		7274582	0					
ANR	7274873	Identifier	max_channel		7274582	1					
ANR	7274874	PostIncDecOperationExpression	ch ++	89:52:1584:1587	7274582	2	True				
ANR	7274875	Identifier	ch		7274582	0					
ANR	7274876	IncDec	++		7274582	1					
ANR	7274877	IfStatement	if ( get_bits1 ( gbp ) )		7274582	3					
ANR	7274878	Condition	get_bits1 ( gbp )	91:12:1603:1616	7274582	0	True				
ANR	7274879	CallExpression	get_bits1 ( gbp )		7274582	0					
ANR	7274880	Callee	get_bits1		7274582	0					
ANR	7274881	Identifier	get_bits1		7274582	0					
ANR	7274882	ArgumentList	gbp		7274582	1					
ANR	7274883	Argument	gbp		7274582	0					
ANR	7274884	Identifier	gbp		7274582	0					
ANR	7274885	CompoundStatement		87:28:1490:1490	7274582	1					
ANR	7274886	IfStatement	"if ( read_channel_params ( m , substr , gbp , ch ) < 0 )"		7274582	0					
ANR	7274887	Condition	"read_channel_params ( m , substr , gbp , ch ) < 0"	93:16:1638:1680	7274582	0	True				
ANR	7274888	RelationalExpression	"read_channel_params ( m , substr , gbp , ch ) < 0"		7274582	0		<			
ANR	7274889	CallExpression	"read_channel_params ( m , substr , gbp , ch )"		7274582	0					
ANR	7274890	Callee	read_channel_params		7274582	0					
ANR	7274891	Identifier	read_channel_params		7274582	0					
ANR	7274892	ArgumentList	m		7274582	1					
ANR	7274893	Argument	m		7274582	0					
ANR	7274894	Identifier	m		7274582	0					
ANR	7274895	Argument	substr		7274582	1					
ANR	7274896	Identifier	substr		7274582	0					
ANR	7274897	Argument	gbp		7274582	2					
ANR	7274898	Identifier	gbp		7274582	0					
ANR	7274899	Argument	ch		7274582	3					
ANR	7274900	Identifier	ch		7274582	0					
ANR	7274901	PrimaryExpression	0		7274582	1					
ANR	7274902	ReturnStatement	return - 1 ;	95:16:1700:1709	7274582	1	True				
ANR	7274903	UnaryOperationExpression	- 1		7274582	0					
ANR	7274904	UnaryOperator	-		7274582	0					
ANR	7274905	PrimaryExpression	1		7274582	1					
ANR	7274906	ReturnStatement	return 0 ;	101:4:1729:1737	7274582	8	True				
ANR	7274907	PrimaryExpression	0		7274582	0					
ANR	7274908	ReturnType	static int		7274582	1					
ANR	7274909	Identifier	read_decoding_params		7274582	2					
ANR	7274910	ParameterList	"MLPDecodeContext * m , GetBitContext * gbp , unsigned int substr"		7274582	3					
ANR	7274911	Parameter	MLPDecodeContext * m	1:32:32:50	7274582	0	True				
ANR	7274912	ParameterType	MLPDecodeContext *		7274582	0					
ANR	7274913	Identifier	m		7274582	1					
ANR	7274914	Parameter	GetBitContext * gbp	1:53:53:70	7274582	1	True				
ANR	7274915	ParameterType	GetBitContext *		7274582	0					
ANR	7274916	Identifier	gbp		7274582	1					
ANR	7274917	Parameter	unsigned int substr	3:32:106:124	7274582	2	True				
ANR	7274918	ParameterType	unsigned int		7274582	0					
ANR	7274919	Identifier	substr		7274582	1					
ANR	7274920	CFGEntryNode	ENTRY		7274582		True				
ANR	7274921	CFGExitNode	EXIT		7274582		True				
ANR	7274922	Symbol	get_sbits		7274582						
ANR	7274923	Symbol	s -> max_matrix_channel		7274582						
ANR	7274924	Symbol	s -> max_channel		7274582						
ANR	7274925	Symbol	get_bits		7274582						
ANR	7274926	Symbol	PARAM_OUTSHIFT		7274582						
ANR	7274927	Symbol	* ch		7274582						
ANR	7274928	Symbol	PARAM_MATRIX		7274582						
ANR	7274929	Symbol	s -> param_presence_flags		7274582						
ANR	7274930	Symbol	s -> min_channel		7274582						
ANR	7274931	Symbol	PARAM_PRESENCE		7274582						
ANR	7274932	Symbol	* * s		7274582						
ANR	7274933	Symbol	m -> substream		7274582						
ANR	7274934	Symbol	PARAM_QUANTSTEP		7274582						
ANR	7274935	Symbol	AV_LOG_ERROR		7274582						
ANR	7274936	Symbol	ch		7274582						
ANR	7274937	Symbol	m -> avctx		7274582						
ANR	7274938	Symbol	read_channel_params		7274582						
ANR	7274939	Symbol	get_bits1		7274582						
ANR	7274940	Symbol	cp -> sign_huff_offset		7274582						
ANR	7274941	Symbol	calculate_sign_huff		7274582						
ANR	7274942	Symbol	m		7274582						
ANR	7274943	Symbol	substr		7274582						
ANR	7274944	Symbol	cp		7274582						
ANR	7274945	Symbol	s -> blocksize		7274582						
ANR	7274946	Symbol	s -> output_shift		7274582						
ANR	7274947	Symbol	* cp		7274582						
ANR	7274948	Symbol	s		7274582						
ANR	7274949	Symbol	gbp		7274582						
ANR	7274950	Symbol	s -> quant_step_size		7274582						
ANR	7274951	Symbol	* s -> output_shift		7274582						
ANR	7274952	Symbol	* m		7274582						
ANR	7274953	Symbol	read_matrix_params		7274582						
ANR	7274954	Symbol	PARAM_BLOCKSIZE		7274582						
ANR	7274955	Symbol	MAX_BLOCKSIZE		7274582						
ANR	7274956	Symbol	* s		7274582						
ANR	7274957	Symbol	* s -> quant_step_size		7274582						
ANR	7274958	Symbol	m -> channel_params		7274582						
