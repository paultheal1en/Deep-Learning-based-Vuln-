command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3912222	File	/home/p4ultr4n/workplace/ReVeal/raw_code/find_completion_0.c								
ANR	3912223	Function	find_completion	1:0:0:1948							
ANR	3912224	FunctionDef	find_completion (const char * cmdline)		3912223	0					
ANR	3912225	CompoundStatement		3:0:50:1948	3912223	0					
ANR	3912226	IdentifierDeclStatement	const char * cmdname ;	5:4:57:76	3912223	0	True				
ANR	3912227	IdentifierDecl	* cmdname		3912223	0					
ANR	3912228	IdentifierDeclType	const char *		3912223	0					
ANR	3912229	Identifier	cmdname		3912223	1					
ANR	3912230	IdentifierDeclStatement	char * args [ MAX_ARGS ] ;	7:4:83:103	3912223	1	True				
ANR	3912231	IdentifierDecl	* args [ MAX_ARGS ]		3912223	0					
ANR	3912232	IdentifierDeclType	char * [ MAX_ARGS ]		3912223	0					
ANR	3912233	Identifier	args		3912223	1					
ANR	3912234	Identifier	MAX_ARGS		3912223	2					
ANR	3912235	IdentifierDeclStatement	"int nb_args , i , len ;"	9:4:110:129	3912223	2	True				
ANR	3912236	IdentifierDecl	nb_args		3912223	0					
ANR	3912237	IdentifierDeclType	int		3912223	0					
ANR	3912238	Identifier	nb_args		3912223	1					
ANR	3912239	IdentifierDecl	i		3912223	1					
ANR	3912240	IdentifierDeclType	int		3912223	0					
ANR	3912241	Identifier	i		3912223	1					
ANR	3912242	IdentifierDecl	len		3912223	2					
ANR	3912243	IdentifierDeclType	int		3912223	0					
ANR	3912244	Identifier	len		3912223	1					
ANR	3912245	IdentifierDeclStatement	"const char * ptype , * str ;"	11:4:136:159	3912223	3	True				
ANR	3912246	IdentifierDecl	* ptype		3912223	0					
ANR	3912247	IdentifierDeclType	const char *		3912223	0					
ANR	3912248	Identifier	ptype		3912223	1					
ANR	3912249	IdentifierDecl	* str		3912223	1					
ANR	3912250	IdentifierDeclType	const char *		3912223	0					
ANR	3912251	Identifier	str		3912223	1					
ANR	3912252	IdentifierDeclStatement	term_cmd_t * cmd ;	13:4:166:181	3912223	4	True				
ANR	3912253	IdentifierDecl	* cmd		3912223	0					
ANR	3912254	IdentifierDeclType	term_cmd_t *		3912223	0					
ANR	3912255	Identifier	cmd		3912223	1					
ANR	3912256	ExpressionStatement	"parse_cmdline ( cmdline , & nb_args , args )"	17:4:190:228	3912223	5	True				
ANR	3912257	CallExpression	"parse_cmdline ( cmdline , & nb_args , args )"		3912223	0					
ANR	3912258	Callee	parse_cmdline		3912223	0					
ANR	3912259	Identifier	parse_cmdline		3912223	0					
ANR	3912260	ArgumentList	cmdline		3912223	1					
ANR	3912261	Argument	cmdline		3912223	0					
ANR	3912262	Identifier	cmdline		3912223	0					
ANR	3912263	Argument	& nb_args		3912223	1					
ANR	3912264	UnaryOperationExpression	& nb_args		3912223	0					
ANR	3912265	UnaryOperator	&		3912223	0					
ANR	3912266	Identifier	nb_args		3912223	1					
ANR	3912267	Argument	args		3912223	2					
ANR	3912268	Identifier	args		3912223	0					
ANR	3912269	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		3912223	6					
ANR	3912270	ForInit	i = 0 ;	21:8:264:269	3912223	0	True				
ANR	3912271	AssignmentExpression	i = 0		3912223	0		=			
ANR	3912272	Identifier	i		3912223	0					
ANR	3912273	PrimaryExpression	0		3912223	1					
ANR	3912274	Condition	i < nb_args	21:15:271:281	3912223	1	True				
ANR	3912275	RelationalExpression	i < nb_args		3912223	0		<			
ANR	3912276	Identifier	i		3912223	0					
ANR	3912277	Identifier	nb_args		3912223	1					
ANR	3912278	PostIncDecOperationExpression	i ++	21:28:284:286	3912223	2	True				
ANR	3912279	Identifier	i		3912223	0					
ANR	3912280	IncDec	++		3912223	1					
ANR	3912281	CompoundStatement		19:33:238:238	3912223	3					
ANR	3912282	ExpressionStatement	"term_printf ( ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"	23:8:300:349	3912223	0	True				
ANR	3912283	CallExpression	"term_printf ( ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"		3912223	0					
ANR	3912284	Callee	term_printf		3912223	0					
ANR	3912285	Identifier	term_printf		3912223	0					
ANR	3912286	ArgumentList	"""arg%d = '%s'\\n"""		3912223	1					
ANR	3912287	Argument	"""arg%d = '%s'\\n"""		3912223	0					
ANR	3912288	PrimaryExpression	"""arg%d = '%s'\\n"""		3912223	0					
ANR	3912289	Argument	i		3912223	1					
ANR	3912290	Identifier	i		3912223	0					
ANR	3912291	Argument	( char * ) args [ i ]		3912223	2					
ANR	3912292	CastExpression	( char * ) args [ i ]		3912223	0					
ANR	3912293	CastTarget	char *		3912223	0					
ANR	3912294	ArrayIndexing	args [ i ]		3912223	1					
ANR	3912295	Identifier	args		3912223	0					
ANR	3912296	Identifier	i		3912223	1					
ANR	3912297	ExpressionStatement	len = strlen ( cmdline )	35:4:465:486	3912223	7	True				
ANR	3912298	AssignmentExpression	len = strlen ( cmdline )		3912223	0		=			
ANR	3912299	Identifier	len		3912223	0					
ANR	3912300	CallExpression	strlen ( cmdline )		3912223	1					
ANR	3912301	Callee	strlen		3912223	0					
ANR	3912302	Identifier	strlen		3912223	0					
ANR	3912303	ArgumentList	cmdline		3912223	1					
ANR	3912304	Argument	cmdline		3912223	0					
ANR	3912305	Identifier	cmdline		3912223	0					
ANR	3912306	IfStatement	if ( len > 0 && isspace ( cmdline [ len - 1 ] ) )		3912223	8					
ANR	3912307	Condition	len > 0 && isspace ( cmdline [ len - 1 ] )	37:8:497:532	3912223	0	True				
ANR	3912308	AndExpression	len > 0 && isspace ( cmdline [ len - 1 ] )		3912223	0		&&			
ANR	3912309	RelationalExpression	len > 0		3912223	0		>			
ANR	3912310	Identifier	len		3912223	0					
ANR	3912311	PrimaryExpression	0		3912223	1					
ANR	3912312	CallExpression	isspace ( cmdline [ len - 1 ] )		3912223	1					
ANR	3912313	Callee	isspace		3912223	0					
ANR	3912314	Identifier	isspace		3912223	0					
ANR	3912315	ArgumentList	cmdline [ len - 1 ]		3912223	1					
ANR	3912316	Argument	cmdline [ len - 1 ]		3912223	0					
ANR	3912317	ArrayIndexing	cmdline [ len - 1 ]		3912223	0					
ANR	3912318	Identifier	cmdline		3912223	0					
ANR	3912319	AdditiveExpression	len - 1		3912223	1		-			
ANR	3912320	Identifier	len		3912223	0					
ANR	3912321	PrimaryExpression	1		3912223	1					
ANR	3912322	CompoundStatement		35:46:484:484	3912223	1					
ANR	3912323	IfStatement	if ( nb_args >= MAX_ARGS )		3912223	0					
ANR	3912324	Condition	nb_args >= MAX_ARGS	39:12:550:568	3912223	0	True				
ANR	3912325	RelationalExpression	nb_args >= MAX_ARGS		3912223	0		>=			
ANR	3912326	Identifier	nb_args		3912223	0					
ANR	3912327	Identifier	MAX_ARGS		3912223	1					
ANR	3912328	ReturnStatement	return ;	41:12:584:590	3912223	1	True				
ANR	3912329	ExpressionStatement	"args [ nb_args ++ ] = qemu_strdup ( """" )"	43:8:601:634	3912223	1	True				
ANR	3912330	AssignmentExpression	"args [ nb_args ++ ] = qemu_strdup ( """" )"		3912223	0		=			
ANR	3912331	ArrayIndexing	args [ nb_args ++ ]		3912223	0					
ANR	3912332	Identifier	args		3912223	0					
ANR	3912333	PostIncDecOperationExpression	nb_args ++		3912223	1					
ANR	3912334	Identifier	nb_args		3912223	0					
ANR	3912335	IncDec	++		3912223	1					
ANR	3912336	CallExpression	"qemu_strdup ( """" )"		3912223	1					
ANR	3912337	Callee	qemu_strdup		3912223	0					
ANR	3912338	Identifier	qemu_strdup		3912223	0					
ANR	3912339	ArgumentList	""""""		3912223	1					
ANR	3912340	Argument	""""""		3912223	0					
ANR	3912341	PrimaryExpression	""""""		3912223	0					
ANR	3912342	IfStatement	if ( nb_args <= 1 )		3912223	9					
ANR	3912343	Condition	nb_args <= 1	47:8:652:663	3912223	0	True				
ANR	3912344	RelationalExpression	nb_args <= 1		3912223	0		<=			
ANR	3912345	Identifier	nb_args		3912223	0					
ANR	3912346	PrimaryExpression	1		3912223	1					
ANR	3912347	CompoundStatement		45:22:615:615	3912223	1					
ANR	3912348	IfStatement	if ( nb_args == 0 )		3912223	0					
ANR	3912349	Condition	nb_args == 0	51:12:715:726	3912223	0	True				
ANR	3912350	EqualityExpression	nb_args == 0		3912223	0		==			
ANR	3912351	Identifier	nb_args		3912223	0					
ANR	3912352	PrimaryExpression	0		3912223	1					
ANR	3912353	ExpressionStatement	"cmdname = """""	53:12:742:754	3912223	1	True				
ANR	3912354	AssignmentExpression	"cmdname = """""		3912223	0		=			
ANR	3912355	Identifier	cmdname		3912223	0					
ANR	3912356	PrimaryExpression	""""""		3912223	1					
ANR	3912357	ElseStatement	else		3912223	0					
ANR	3912358	ExpressionStatement	cmdname = args [ 0 ]	57:12:783:800	3912223	0	True				
ANR	3912359	AssignmentExpression	cmdname = args [ 0 ]		3912223	0		=			
ANR	3912360	Identifier	cmdname		3912223	0					
ANR	3912361	ArrayIndexing	args [ 0 ]		3912223	1					
ANR	3912362	Identifier	args		3912223	0					
ANR	3912363	PrimaryExpression	0		3912223	1					
ANR	3912364	ExpressionStatement	completion_index = strlen ( cmdname )	59:8:811:845	3912223	1	True				
ANR	3912365	AssignmentExpression	completion_index = strlen ( cmdname )		3912223	0		=			
ANR	3912366	Identifier	completion_index		3912223	0					
ANR	3912367	CallExpression	strlen ( cmdname )		3912223	1					
ANR	3912368	Callee	strlen		3912223	0					
ANR	3912369	Identifier	strlen		3912223	0					
ANR	3912370	ArgumentList	cmdname		3912223	1					
ANR	3912371	Argument	cmdname		3912223	0					
ANR	3912372	Identifier	cmdname		3912223	0					
ANR	3912373	ForStatement	for ( cmd = term_cmds ; cmd -> name != NULL ; cmd ++ )		3912223	2					
ANR	3912374	ForInit	cmd = term_cmds ;	61:12:860:875	3912223	0	True				
ANR	3912375	AssignmentExpression	cmd = term_cmds		3912223	0		=			
ANR	3912376	Identifier	cmd		3912223	0					
ANR	3912377	Identifier	term_cmds		3912223	1					
ANR	3912378	Condition	cmd -> name != NULL	61:29:877:893	3912223	1	True				
ANR	3912379	EqualityExpression	cmd -> name != NULL		3912223	0		!=			
ANR	3912380	PtrMemberAccess	cmd -> name		3912223	0					
ANR	3912381	Identifier	cmd		3912223	0					
ANR	3912382	Identifier	name		3912223	1					
ANR	3912383	Identifier	NULL		3912223	1					
ANR	3912384	PostIncDecOperationExpression	cmd ++	61:48:896:900	3912223	2	True				
ANR	3912385	Identifier	cmd		3912223	0					
ANR	3912386	IncDec	++		3912223	1					
ANR	3912387	CompoundStatement		59:55:852:852	3912223	3					
ANR	3912388	ExpressionStatement	"cmd_completion ( cmdname , cmd -> name )"	63:12:918:952	3912223	0	True				
ANR	3912389	CallExpression	"cmd_completion ( cmdname , cmd -> name )"		3912223	0					
ANR	3912390	Callee	cmd_completion		3912223	0					
ANR	3912391	Identifier	cmd_completion		3912223	0					
ANR	3912392	ArgumentList	cmdname		3912223	1					
ANR	3912393	Argument	cmdname		3912223	0					
ANR	3912394	Identifier	cmdname		3912223	0					
ANR	3912395	Argument	cmd -> name		3912223	1					
ANR	3912396	PtrMemberAccess	cmd -> name		3912223	0					
ANR	3912397	Identifier	cmd		3912223	0					
ANR	3912398	Identifier	name		3912223	1					
ANR	3912399	ElseStatement	else		3912223	0					
ANR	3912400	CompoundStatement		65:11:926:926	3912223	0					
ANR	3912401	ForStatement	for ( cmd = term_cmds ; cmd -> name != NULL ; cmd ++ )		3912223	0					
ANR	3912402	ForInit	cmd = term_cmds ;	71:12:1024:1039	3912223	0	True				
ANR	3912403	AssignmentExpression	cmd = term_cmds		3912223	0		=			
ANR	3912404	Identifier	cmd		3912223	0					
ANR	3912405	Identifier	term_cmds		3912223	1					
ANR	3912406	Condition	cmd -> name != NULL	71:29:1041:1057	3912223	1	True				
ANR	3912407	EqualityExpression	cmd -> name != NULL		3912223	0		!=			
ANR	3912408	PtrMemberAccess	cmd -> name		3912223	0					
ANR	3912409	Identifier	cmd		3912223	0					
ANR	3912410	Identifier	name		3912223	1					
ANR	3912411	Identifier	NULL		3912223	1					
ANR	3912412	PostIncDecOperationExpression	cmd ++	71:48:1060:1064	3912223	2	True				
ANR	3912413	Identifier	cmd		3912223	0					
ANR	3912414	IncDec	++		3912223	1					
ANR	3912415	CompoundStatement		69:55:1016:1016	3912223	3					
ANR	3912416	IfStatement	"if ( compare_cmd ( args [ 0 ] , cmd -> name ) )"		3912223	0					
ANR	3912417	Condition	"compare_cmd ( args [ 0 ] , cmd -> name )"	73:16:1086:1116	3912223	0	True				
ANR	3912418	CallExpression	"compare_cmd ( args [ 0 ] , cmd -> name )"		3912223	0					
ANR	3912419	Callee	compare_cmd		3912223	0					
ANR	3912420	Identifier	compare_cmd		3912223	0					
ANR	3912421	ArgumentList	args [ 0 ]		3912223	1					
ANR	3912422	Argument	args [ 0 ]		3912223	0					
ANR	3912423	ArrayIndexing	args [ 0 ]		3912223	0					
ANR	3912424	Identifier	args		3912223	0					
ANR	3912425	PrimaryExpression	0		3912223	1					
ANR	3912426	Argument	cmd -> name		3912223	1					
ANR	3912427	PtrMemberAccess	cmd -> name		3912223	0					
ANR	3912428	Identifier	cmd		3912223	0					
ANR	3912429	Identifier	name		3912223	1					
ANR	3912430	GotoStatement	goto found ;	75:16:1136:1146	3912223	1	True				
ANR	3912431	Identifier	found		3912223	0					
ANR	3912432	ReturnStatement	return ;	79:8:1168:1174	3912223	1	True				
ANR	3912433	Label	found :	81:4:1181:1186	3912223	2	True				
ANR	3912434	Identifier	found		3912223	0					
ANR	3912435	ExpressionStatement	ptype = cmd -> args_type	83:8:1197:1219	3912223	3	True				
ANR	3912436	AssignmentExpression	ptype = cmd -> args_type		3912223	0		=			
ANR	3912437	Identifier	ptype		3912223	0					
ANR	3912438	PtrMemberAccess	cmd -> args_type		3912223	1					
ANR	3912439	Identifier	cmd		3912223	0					
ANR	3912440	Identifier	args_type		3912223	1					
ANR	3912441	ForStatement	for ( i = 0 ; i < nb_args - 2 ; i ++ )		3912223	4					
ANR	3912442	ForInit	i = 0 ;	85:12:1234:1239	3912223	0	True				
ANR	3912443	AssignmentExpression	i = 0		3912223	0		=			
ANR	3912444	Identifier	i		3912223	0					
ANR	3912445	PrimaryExpression	0		3912223	1					
ANR	3912446	Condition	i < nb_args - 2	85:19:1241:1255	3912223	1	True				
ANR	3912447	RelationalExpression	i < nb_args - 2		3912223	0		<			
ANR	3912448	Identifier	i		3912223	0					
ANR	3912449	AdditiveExpression	nb_args - 2		3912223	1		-			
ANR	3912450	Identifier	nb_args		3912223	0					
ANR	3912451	PrimaryExpression	2		3912223	1					
ANR	3912452	PostIncDecOperationExpression	i ++	85:36:1258:1260	3912223	2	True				
ANR	3912453	Identifier	i		3912223	0					
ANR	3912454	IncDec	++		3912223	1					
ANR	3912455	CompoundStatement		83:41:1212:1212	3912223	3					
ANR	3912456	IfStatement	if ( * ptype != '\\0' )		3912223	0					
ANR	3912457	Condition	* ptype != '\\0'	87:16:1282:1295	3912223	0	True				
ANR	3912458	EqualityExpression	* ptype != '\\0'		3912223	0		!=			
ANR	3912459	UnaryOperationExpression	* ptype		3912223	0					
ANR	3912460	UnaryOperator	*		3912223	0					
ANR	3912461	Identifier	ptype		3912223	1					
ANR	3912462	PrimaryExpression	'\\0'		3912223	1					
ANR	3912463	CompoundStatement		85:32:1247:1247	3912223	1					
ANR	3912464	ExpressionStatement	ptype ++	89:16:1317:1324	3912223	0	True				
ANR	3912465	PostIncDecOperationExpression	ptype ++		3912223	0					
ANR	3912466	Identifier	ptype		3912223	0					
ANR	3912467	IncDec	++		3912223	1					
ANR	3912468	WhileStatement	while ( * ptype == '?' )		3912223	1					
ANR	3912469	Condition	* ptype == '?'	91:23:1350:1362	3912223	0	True				
ANR	3912470	EqualityExpression	* ptype == '?'		3912223	0		==			
ANR	3912471	UnaryOperationExpression	* ptype		3912223	0					
ANR	3912472	UnaryOperator	*		3912223	0					
ANR	3912473	Identifier	ptype		3912223	1					
ANR	3912474	PrimaryExpression	'?'		3912223	1					
ANR	3912475	ExpressionStatement	ptype ++	93:20:1386:1393	3912223	1	True				
ANR	3912476	PostIncDecOperationExpression	ptype ++		3912223	0					
ANR	3912477	Identifier	ptype		3912223	0					
ANR	3912478	IncDec	++		3912223	1					
ANR	3912479	ExpressionStatement	str = args [ nb_args - 1 ]	99:8:1430:1453	3912223	5	True				
ANR	3912480	AssignmentExpression	str = args [ nb_args - 1 ]		3912223	0		=			
ANR	3912481	Identifier	str		3912223	0					
ANR	3912482	ArrayIndexing	args [ nb_args - 1 ]		3912223	1					
ANR	3912483	Identifier	args		3912223	0					
ANR	3912484	AdditiveExpression	nb_args - 1		3912223	1		-			
ANR	3912485	Identifier	nb_args		3912223	0					
ANR	3912486	PrimaryExpression	1		3912223	1					
ANR	3912487	SwitchStatement	switch ( * ptype )		3912223	6					
ANR	3912488	Condition	* ptype	101:15:1471:1476	3912223	0	True				
ANR	3912489	UnaryOperationExpression	* ptype		3912223	0					
ANR	3912490	UnaryOperator	*		3912223	0					
ANR	3912491	Identifier	ptype		3912223	1					
ANR	3912492	CompoundStatement		99:23:1428:1428	3912223	1					
ANR	3912493	Label	case 'F' :	103:8:1490:1498	3912223	0	True				
ANR	3912494	ExpressionStatement	completion_index = strlen ( str )	107:12:1548:1578	3912223	1	True				
ANR	3912495	AssignmentExpression	completion_index = strlen ( str )		3912223	0		=			
ANR	3912496	Identifier	completion_index		3912223	0					
ANR	3912497	CallExpression	strlen ( str )		3912223	1					
ANR	3912498	Callee	strlen		3912223	0					
ANR	3912499	Identifier	strlen		3912223	0					
ANR	3912500	ArgumentList	str		3912223	1					
ANR	3912501	Argument	str		3912223	0					
ANR	3912502	Identifier	str		3912223	0					
ANR	3912503	ExpressionStatement	file_completion ( str )	109:12:1593:1613	3912223	2	True				
ANR	3912504	CallExpression	file_completion ( str )		3912223	0					
ANR	3912505	Callee	file_completion		3912223	0					
ANR	3912506	Identifier	file_completion		3912223	0					
ANR	3912507	ArgumentList	str		3912223	1					
ANR	3912508	Argument	str		3912223	0					
ANR	3912509	Identifier	str		3912223	0					
ANR	3912510	BreakStatement	break ;	111:12:1628:1633	3912223	3	True				
ANR	3912511	Label	case 'B' :	113:8:1644:1652	3912223	4	True				
ANR	3912512	ExpressionStatement	completion_index = strlen ( str )	117:12:1715:1745	3912223	5	True				
ANR	3912513	AssignmentExpression	completion_index = strlen ( str )		3912223	0		=			
ANR	3912514	Identifier	completion_index		3912223	0					
ANR	3912515	CallExpression	strlen ( str )		3912223	1					
ANR	3912516	Callee	strlen		3912223	0					
ANR	3912517	Identifier	strlen		3912223	0					
ANR	3912518	ArgumentList	str		3912223	1					
ANR	3912519	Argument	str		3912223	0					
ANR	3912520	Identifier	str		3912223	0					
ANR	3912521	ExpressionStatement	"bdrv_iterate ( block_completion_it , ( void * ) str )"	119:12:1760:1806	3912223	6	True				
ANR	3912522	CallExpression	"bdrv_iterate ( block_completion_it , ( void * ) str )"		3912223	0					
ANR	3912523	Callee	bdrv_iterate		3912223	0					
ANR	3912524	Identifier	bdrv_iterate		3912223	0					
ANR	3912525	ArgumentList	block_completion_it		3912223	1					
ANR	3912526	Argument	block_completion_it		3912223	0					
ANR	3912527	Identifier	block_completion_it		3912223	0					
ANR	3912528	Argument	( void * ) str		3912223	1					
ANR	3912529	CastExpression	( void * ) str		3912223	0					
ANR	3912530	CastTarget	void *		3912223	0					
ANR	3912531	Identifier	str		3912223	1					
ANR	3912532	BreakStatement	break ;	121:12:1821:1826	3912223	7	True				
ANR	3912533	Label	default :	123:8:1837:1844	3912223	8	True				
ANR	3912534	Identifier	default		3912223	0					
ANR	3912535	BreakStatement	break ;	125:12:1859:1864	3912223	9	True				
ANR	3912536	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		3912223	10					
ANR	3912537	ForInit	i = 0 ;	131:8:1893:1898	3912223	0	True				
ANR	3912538	AssignmentExpression	i = 0		3912223	0		=			
ANR	3912539	Identifier	i		3912223	0					
ANR	3912540	PrimaryExpression	0		3912223	1					
ANR	3912541	Condition	i < nb_args	131:15:1900:1910	3912223	1	True				
ANR	3912542	RelationalExpression	i < nb_args		3912223	0		<			
ANR	3912543	Identifier	i		3912223	0					
ANR	3912544	Identifier	nb_args		3912223	1					
ANR	3912545	PostIncDecOperationExpression	i ++	131:28:1913:1915	3912223	2	True				
ANR	3912546	Identifier	i		3912223	0					
ANR	3912547	IncDec	++		3912223	1					
ANR	3912548	ExpressionStatement	qemu_free ( args [ i ] )	133:8:1927:1945	3912223	3	True				
ANR	3912549	CallExpression	qemu_free ( args [ i ] )		3912223	0					
ANR	3912550	Callee	qemu_free		3912223	0					
ANR	3912551	Identifier	qemu_free		3912223	0					
ANR	3912552	ArgumentList	args [ i ]		3912223	1					
ANR	3912553	Argument	args [ i ]		3912223	0					
ANR	3912554	ArrayIndexing	args [ i ]		3912223	0					
ANR	3912555	Identifier	args		3912223	0					
ANR	3912556	Identifier	i		3912223	1					
ANR	3912557	ReturnType	static void		3912223	1					
ANR	3912558	Identifier	find_completion		3912223	2					
ANR	3912559	ParameterList	const char * cmdline		3912223	3					
ANR	3912560	Parameter	const char * cmdline	1:28:28:46	3912223	0	True				
ANR	3912561	ParameterType	const char *		3912223	0					
ANR	3912562	Identifier	cmdline		3912223	1					
ANR	3912563	CFGEntryNode	ENTRY		3912223		True				
ANR	3912564	CFGExitNode	EXIT		3912223		True				
ANR	3912565	Symbol	ptype		3912223						
ANR	3912566	Symbol	MAX_ARGS		3912223						
ANR	3912567	Symbol	* args		3912223						
ANR	3912568	Symbol	compare_cmd		3912223						
ANR	3912569	Symbol	& nb_args		3912223						
ANR	3912570	Symbol	strlen		3912223						
ANR	3912571	Symbol	cmdline		3912223						
ANR	3912572	Symbol	len		3912223						
ANR	3912573	Symbol	completion_index		3912223						
ANR	3912574	Symbol	nb_args		3912223						
ANR	3912575	Symbol	* cmd		3912223						
ANR	3912576	Symbol	* nb_args		3912223						
ANR	3912577	Symbol	NULL		3912223						
ANR	3912578	Symbol	* cmdline		3912223						
ANR	3912579	Symbol	term_cmds		3912223						
ANR	3912580	Symbol	cmd -> name		3912223						
ANR	3912581	Symbol	isspace		3912223						
ANR	3912582	Symbol	i		3912223						
ANR	3912583	Symbol	block_completion_it		3912223						
ANR	3912584	Symbol	qemu_strdup		3912223						
ANR	3912585	Symbol	args		3912223						
ANR	3912586	Symbol	str		3912223						
ANR	3912587	Symbol	* i		3912223						
ANR	3912588	Symbol	* ptype		3912223						
ANR	3912589	Symbol	cmdname		3912223						
ANR	3912590	Symbol	cmd		3912223						
ANR	3912591	Symbol	cmd -> args_type		3912223						
ANR	3912592	Symbol	* len		3912223						
