command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1762015	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_fixed_sparse_0.c								
ANR	1762016	Function	decode_fixed_sparse	1:0:0:2315							
ANR	1762017	FunctionDef	"decode_fixed_sparse (AMRFixed * fixed_sparse , const uint16_t * pulses , const enum Mode mode , const int subframe)"		1762016	0					
ANR	1762018	CompoundStatement		5:0:156:2315	1762016	0					
ANR	1762019	ExpressionStatement	av_assert1 ( MODE_4k75 <= mode && mode <= MODE_12k2 )	7:4:163:213	1762016	0	True				
ANR	1762020	CallExpression	av_assert1 ( MODE_4k75 <= mode && mode <= MODE_12k2 )		1762016	0					
ANR	1762021	Callee	av_assert1		1762016	0					
ANR	1762022	Identifier	av_assert1		1762016	0					
ANR	1762023	ArgumentList	MODE_4k75 <= mode && mode <= MODE_12k2		1762016	1					
ANR	1762024	Argument	MODE_4k75 <= mode && mode <= MODE_12k2		1762016	0					
ANR	1762025	AndExpression	MODE_4k75 <= mode && mode <= MODE_12k2		1762016	0		&&			
ANR	1762026	RelationalExpression	MODE_4k75 <= mode		1762016	0		<=			
ANR	1762027	Identifier	MODE_4k75		1762016	0					
ANR	1762028	Identifier	mode		1762016	1					
ANR	1762029	RelationalExpression	mode <= MODE_12k2		1762016	1		<=			
ANR	1762030	Identifier	mode		1762016	0					
ANR	1762031	Identifier	MODE_12k2		1762016	1					
ANR	1762032	IfStatement	if ( mode == MODE_12k2 )		1762016	1					
ANR	1762033	Condition	mode == MODE_12k2	11:8:226:242	1762016	0	True				
ANR	1762034	EqualityExpression	mode == MODE_12k2		1762016	0		==			
ANR	1762035	Identifier	mode		1762016	0					
ANR	1762036	Identifier	MODE_12k2		1762016	1					
ANR	1762037	CompoundStatement		7:27:88:88	1762016	1					
ANR	1762038	ExpressionStatement	"ff_decode_10_pulses_35bits ( pulses , fixed_sparse , gray_decode , 5 , 3 )"	13:8:256:323	1762016	0	True				
ANR	1762039	CallExpression	"ff_decode_10_pulses_35bits ( pulses , fixed_sparse , gray_decode , 5 , 3 )"		1762016	0					
ANR	1762040	Callee	ff_decode_10_pulses_35bits		1762016	0					
ANR	1762041	Identifier	ff_decode_10_pulses_35bits		1762016	0					
ANR	1762042	ArgumentList	pulses		1762016	1					
ANR	1762043	Argument	pulses		1762016	0					
ANR	1762044	Identifier	pulses		1762016	0					
ANR	1762045	Argument	fixed_sparse		1762016	1					
ANR	1762046	Identifier	fixed_sparse		1762016	0					
ANR	1762047	Argument	gray_decode		1762016	2					
ANR	1762048	Identifier	gray_decode		1762016	0					
ANR	1762049	Argument	5		1762016	3					
ANR	1762050	PrimaryExpression	5		1762016	0					
ANR	1762051	Argument	3		1762016	4					
ANR	1762052	PrimaryExpression	3		1762016	0					
ANR	1762053	ElseStatement	else		1762016	0					
ANR	1762054	IfStatement	if ( mode == MODE_10k2 )		1762016	0					
ANR	1762055	Condition	mode == MODE_10k2	15:15:341:357	1762016	0	True				
ANR	1762056	EqualityExpression	mode == MODE_10k2		1762016	0		==			
ANR	1762057	Identifier	mode		1762016	0					
ANR	1762058	Identifier	MODE_10k2		1762016	1					
ANR	1762059	CompoundStatement		11:34:203:203	1762016	1					
ANR	1762060	ExpressionStatement	"decode_8_pulses_31bits ( pulses , fixed_sparse )"	17:8:371:415	1762016	0	True				
ANR	1762061	CallExpression	"decode_8_pulses_31bits ( pulses , fixed_sparse )"		1762016	0					
ANR	1762062	Callee	decode_8_pulses_31bits		1762016	0					
ANR	1762063	Identifier	decode_8_pulses_31bits		1762016	0					
ANR	1762064	ArgumentList	pulses		1762016	1					
ANR	1762065	Argument	pulses		1762016	0					
ANR	1762066	Identifier	pulses		1762016	0					
ANR	1762067	Argument	fixed_sparse		1762016	1					
ANR	1762068	Identifier	fixed_sparse		1762016	0					
ANR	1762069	ElseStatement	else		1762016	0					
ANR	1762070	CompoundStatement		21:8:361:394	1762016	0					
ANR	1762071	IdentifierDeclStatement	int * pulse_position = fixed_sparse -> x ;	21:8:440:477	1762016	0	True				
ANR	1762072	IdentifierDecl	* pulse_position = fixed_sparse -> x		1762016	0					
ANR	1762073	IdentifierDeclType	int *		1762016	0					
ANR	1762074	Identifier	pulse_position		1762016	1					
ANR	1762075	AssignmentExpression	* pulse_position = fixed_sparse -> x		1762016	2		=			
ANR	1762076	Identifier	pulse_position		1762016	0					
ANR	1762077	PtrMemberAccess	fixed_sparse -> x		1762016	1					
ANR	1762078	Identifier	fixed_sparse		1762016	0					
ANR	1762079	Identifier	x		1762016	1					
ANR	1762080	IdentifierDeclStatement	"int i , pulse_subset ;"	23:8:488:507	1762016	1	True				
ANR	1762081	IdentifierDecl	i		1762016	0					
ANR	1762082	IdentifierDeclType	int		1762016	0					
ANR	1762083	Identifier	i		1762016	1					
ANR	1762084	IdentifierDecl	pulse_subset		1762016	1					
ANR	1762085	IdentifierDeclType	int		1762016	0					
ANR	1762086	Identifier	pulse_subset		1762016	1					
ANR	1762087	IdentifierDeclStatement	const int fixed_index = pulses [ 0 ] ;	25:8:518:551	1762016	2	True				
ANR	1762088	IdentifierDecl	fixed_index = pulses [ 0 ]		1762016	0					
ANR	1762089	IdentifierDeclType	const int		1762016	0					
ANR	1762090	Identifier	fixed_index		1762016	1					
ANR	1762091	AssignmentExpression	fixed_index = pulses [ 0 ]		1762016	2		=			
ANR	1762092	Identifier	fixed_index		1762016	0					
ANR	1762093	ArrayIndexing	pulses [ 0 ]		1762016	1					
ANR	1762094	Identifier	pulses		1762016	0					
ANR	1762095	PrimaryExpression	0		1762016	1					
ANR	1762096	IfStatement	if ( mode <= MODE_5k15 )		1762016	3					
ANR	1762097	Condition	mode <= MODE_5k15	29:12:568:584	1762016	0	True				
ANR	1762098	RelationalExpression	mode <= MODE_5k15		1762016	0		<=			
ANR	1762099	Identifier	mode		1762016	0					
ANR	1762100	Identifier	MODE_5k15		1762016	1					
ANR	1762101	CompoundStatement		25:31:430:430	1762016	1					
ANR	1762102	ExpressionStatement	pulse_subset = ( ( fixed_index >> 3 ) & 8 ) + ( subframe << 1 )	31:12:602:668	1762016	0	True				
ANR	1762103	AssignmentExpression	pulse_subset = ( ( fixed_index >> 3 ) & 8 ) + ( subframe << 1 )		1762016	0		=			
ANR	1762104	Identifier	pulse_subset		1762016	0					
ANR	1762105	AdditiveExpression	( ( fixed_index >> 3 ) & 8 ) + ( subframe << 1 )		1762016	1		+			
ANR	1762106	BitAndExpression	( fixed_index >> 3 ) & 8		1762016	0		&			
ANR	1762107	ShiftExpression	fixed_index >> 3		1762016	0		>>			
ANR	1762108	Identifier	fixed_index		1762016	0					
ANR	1762109	PrimaryExpression	3		1762016	1					
ANR	1762110	PrimaryExpression	8		1762016	1					
ANR	1762111	ShiftExpression	subframe << 1		1762016	1		<<			
ANR	1762112	Identifier	subframe		1762016	0					
ANR	1762113	PrimaryExpression	1		1762016	1					
ANR	1762114	ExpressionStatement	pulse_position [ 0 ] = ( fixed_index & 7 ) * 5 + track_position [ pulse_subset ]	33:12:683:762	1762016	1	True				
ANR	1762115	AssignmentExpression	pulse_position [ 0 ] = ( fixed_index & 7 ) * 5 + track_position [ pulse_subset ]		1762016	0		=			
ANR	1762116	ArrayIndexing	pulse_position [ 0 ]		1762016	0					
ANR	1762117	Identifier	pulse_position		1762016	0					
ANR	1762118	PrimaryExpression	0		1762016	1					
ANR	1762119	AdditiveExpression	( fixed_index & 7 ) * 5 + track_position [ pulse_subset ]		1762016	1		+			
ANR	1762120	MultiplicativeExpression	( fixed_index & 7 ) * 5		1762016	0		*			
ANR	1762121	BitAndExpression	fixed_index & 7		1762016	0		&			
ANR	1762122	Identifier	fixed_index		1762016	0					
ANR	1762123	PrimaryExpression	7		1762016	1					
ANR	1762124	PrimaryExpression	5		1762016	1					
ANR	1762125	ArrayIndexing	track_position [ pulse_subset ]		1762016	1					
ANR	1762126	Identifier	track_position		1762016	0					
ANR	1762127	Identifier	pulse_subset		1762016	1					
ANR	1762128	ExpressionStatement	pulse_position [ 1 ] = ( ( fixed_index >> 3 ) & 7 ) * 5 + track_position [ pulse_subset + 1 ]	35:12:777:860	1762016	2	True				
ANR	1762129	AssignmentExpression	pulse_position [ 1 ] = ( ( fixed_index >> 3 ) & 7 ) * 5 + track_position [ pulse_subset + 1 ]		1762016	0		=			
ANR	1762130	ArrayIndexing	pulse_position [ 1 ]		1762016	0					
ANR	1762131	Identifier	pulse_position		1762016	0					
ANR	1762132	PrimaryExpression	1		1762016	1					
ANR	1762133	AdditiveExpression	( ( fixed_index >> 3 ) & 7 ) * 5 + track_position [ pulse_subset + 1 ]		1762016	1		+			
ANR	1762134	MultiplicativeExpression	( ( fixed_index >> 3 ) & 7 ) * 5		1762016	0		*			
ANR	1762135	BitAndExpression	( fixed_index >> 3 ) & 7		1762016	0		&			
ANR	1762136	ShiftExpression	fixed_index >> 3		1762016	0		>>			
ANR	1762137	Identifier	fixed_index		1762016	0					
ANR	1762138	PrimaryExpression	3		1762016	1					
ANR	1762139	PrimaryExpression	7		1762016	1					
ANR	1762140	PrimaryExpression	5		1762016	1					
ANR	1762141	ArrayIndexing	track_position [ pulse_subset + 1 ]		1762016	1					
ANR	1762142	Identifier	track_position		1762016	0					
ANR	1762143	AdditiveExpression	pulse_subset + 1		1762016	1		+			
ANR	1762144	Identifier	pulse_subset		1762016	0					
ANR	1762145	PrimaryExpression	1		1762016	1					
ANR	1762146	ExpressionStatement	fixed_sparse -> n = 2	37:12:875:894	1762016	3	True				
ANR	1762147	AssignmentExpression	fixed_sparse -> n = 2		1762016	0		=			
ANR	1762148	PtrMemberAccess	fixed_sparse -> n		1762016	0					
ANR	1762149	Identifier	fixed_sparse		1762016	0					
ANR	1762150	Identifier	n		1762016	1					
ANR	1762151	PrimaryExpression	2		1762016	1					
ANR	1762152	ElseStatement	else		1762016	0					
ANR	1762153	IfStatement	if ( mode == MODE_5k9 )		1762016	0					
ANR	1762154	Condition	mode == MODE_5k9	39:19:916:931	1762016	0	True				
ANR	1762155	EqualityExpression	mode == MODE_5k9		1762016	0		==			
ANR	1762156	Identifier	mode		1762016	0					
ANR	1762157	Identifier	MODE_5k9		1762016	1					
ANR	1762158	CompoundStatement		35:37:777:777	1762016	1					
ANR	1762159	ExpressionStatement	pulse_subset = ( ( fixed_index & 1 ) << 1 ) + 1	41:12:949:997	1762016	0	True				
ANR	1762160	AssignmentExpression	pulse_subset = ( ( fixed_index & 1 ) << 1 ) + 1		1762016	0		=			
ANR	1762161	Identifier	pulse_subset		1762016	0					
ANR	1762162	AdditiveExpression	( ( fixed_index & 1 ) << 1 ) + 1		1762016	1		+			
ANR	1762163	ShiftExpression	( fixed_index & 1 ) << 1		1762016	0		<<			
ANR	1762164	BitAndExpression	fixed_index & 1		1762016	0		&			
ANR	1762165	Identifier	fixed_index		1762016	0					
ANR	1762166	PrimaryExpression	1		1762016	1					
ANR	1762167	PrimaryExpression	1		1762016	1					
ANR	1762168	PrimaryExpression	1		1762016	1					
ANR	1762169	ExpressionStatement	pulse_position [ 0 ] = ( ( fixed_index >> 1 ) & 7 ) * 5 + pulse_subset	43:12:1012:1075	1762016	1	True				
ANR	1762170	AssignmentExpression	pulse_position [ 0 ] = ( ( fixed_index >> 1 ) & 7 ) * 5 + pulse_subset		1762016	0		=			
ANR	1762171	ArrayIndexing	pulse_position [ 0 ]		1762016	0					
ANR	1762172	Identifier	pulse_position		1762016	0					
ANR	1762173	PrimaryExpression	0		1762016	1					
ANR	1762174	AdditiveExpression	( ( fixed_index >> 1 ) & 7 ) * 5 + pulse_subset		1762016	1		+			
ANR	1762175	MultiplicativeExpression	( ( fixed_index >> 1 ) & 7 ) * 5		1762016	0		*			
ANR	1762176	BitAndExpression	( fixed_index >> 1 ) & 7		1762016	0		&			
ANR	1762177	ShiftExpression	fixed_index >> 1		1762016	0		>>			
ANR	1762178	Identifier	fixed_index		1762016	0					
ANR	1762179	PrimaryExpression	1		1762016	1					
ANR	1762180	PrimaryExpression	7		1762016	1					
ANR	1762181	PrimaryExpression	5		1762016	1					
ANR	1762182	Identifier	pulse_subset		1762016	1					
ANR	1762183	ExpressionStatement	pulse_subset = ( fixed_index >> 4 ) & 3	45:12:1090:1133	1762016	2	True				
ANR	1762184	AssignmentExpression	pulse_subset = ( fixed_index >> 4 ) & 3		1762016	0		=			
ANR	1762185	Identifier	pulse_subset		1762016	0					
ANR	1762186	BitAndExpression	( fixed_index >> 4 ) & 3		1762016	1		&			
ANR	1762187	ShiftExpression	fixed_index >> 4		1762016	0		>>			
ANR	1762188	Identifier	fixed_index		1762016	0					
ANR	1762189	PrimaryExpression	4		1762016	1					
ANR	1762190	PrimaryExpression	3		1762016	1					
ANR	1762191	ExpressionStatement	pulse_position [ 1 ] = ( ( fixed_index >> 6 ) & 7 ) * 5 + pulse_subset + ( pulse_subset == 3 ? 1 : 0 )	47:12:1148:1241	1762016	3	True				
ANR	1762192	AssignmentExpression	pulse_position [ 1 ] = ( ( fixed_index >> 6 ) & 7 ) * 5 + pulse_subset + ( pulse_subset == 3 ? 1 : 0 )		1762016	0		=			
ANR	1762193	ArrayIndexing	pulse_position [ 1 ]		1762016	0					
ANR	1762194	Identifier	pulse_position		1762016	0					
ANR	1762195	PrimaryExpression	1		1762016	1					
ANR	1762196	AdditiveExpression	( ( fixed_index >> 6 ) & 7 ) * 5 + pulse_subset + ( pulse_subset == 3 ? 1 : 0 )		1762016	1		+			
ANR	1762197	MultiplicativeExpression	( ( fixed_index >> 6 ) & 7 ) * 5		1762016	0		*			
ANR	1762198	BitAndExpression	( fixed_index >> 6 ) & 7		1762016	0		&			
ANR	1762199	ShiftExpression	fixed_index >> 6		1762016	0		>>			
ANR	1762200	Identifier	fixed_index		1762016	0					
ANR	1762201	PrimaryExpression	6		1762016	1					
ANR	1762202	PrimaryExpression	7		1762016	1					
ANR	1762203	PrimaryExpression	5		1762016	1					
ANR	1762204	AdditiveExpression	pulse_subset + ( pulse_subset == 3 ? 1 : 0 )		1762016	1		+			
ANR	1762205	Identifier	pulse_subset		1762016	0					
ANR	1762206	ConditionalExpression	pulse_subset == 3 ? 1 : 0		1762016	1					
ANR	1762207	Condition	pulse_subset == 3		1762016	0					
ANR	1762208	EqualityExpression	pulse_subset == 3		1762016	0		==			
ANR	1762209	Identifier	pulse_subset		1762016	0					
ANR	1762210	PrimaryExpression	3		1762016	1					
ANR	1762211	PrimaryExpression	1		1762016	1					
ANR	1762212	PrimaryExpression	0		1762016	2					
ANR	1762213	ExpressionStatement	fixed_sparse -> n = pulse_position [ 0 ] == pulse_position [ 1 ] ? 1 : 2	49:12:1256:1320	1762016	4	True				
ANR	1762214	AssignmentExpression	fixed_sparse -> n = pulse_position [ 0 ] == pulse_position [ 1 ] ? 1 : 2		1762016	0		=			
ANR	1762215	PtrMemberAccess	fixed_sparse -> n		1762016	0					
ANR	1762216	Identifier	fixed_sparse		1762016	0					
ANR	1762217	Identifier	n		1762016	1					
ANR	1762218	ConditionalExpression	pulse_position [ 0 ] == pulse_position [ 1 ] ? 1 : 2		1762016	1					
ANR	1762219	Condition	pulse_position [ 0 ] == pulse_position [ 1 ]		1762016	0					
ANR	1762220	EqualityExpression	pulse_position [ 0 ] == pulse_position [ 1 ]		1762016	0		==			
ANR	1762221	ArrayIndexing	pulse_position [ 0 ]		1762016	0					
ANR	1762222	Identifier	pulse_position		1762016	0					
ANR	1762223	PrimaryExpression	0		1762016	1					
ANR	1762224	ArrayIndexing	pulse_position [ 1 ]		1762016	1					
ANR	1762225	Identifier	pulse_position		1762016	0					
ANR	1762226	PrimaryExpression	1		1762016	1					
ANR	1762227	PrimaryExpression	1		1762016	1					
ANR	1762228	PrimaryExpression	2		1762016	2					
ANR	1762229	ElseStatement	else		1762016	0					
ANR	1762230	IfStatement	if ( mode == MODE_6k7 )		1762016	0					
ANR	1762231	Condition	mode == MODE_6k7	51:19:1342:1357	1762016	0	True				
ANR	1762232	EqualityExpression	mode == MODE_6k7		1762016	0		==			
ANR	1762233	Identifier	mode		1762016	0					
ANR	1762234	Identifier	MODE_6k7		1762016	1					
ANR	1762235	CompoundStatement		47:37:1203:1203	1762016	1					
ANR	1762236	ExpressionStatement	pulse_position [ 0 ] = ( fixed_index & 7 ) * 5	53:12:1375:1423	1762016	0	True				
ANR	1762237	AssignmentExpression	pulse_position [ 0 ] = ( fixed_index & 7 ) * 5		1762016	0		=			
ANR	1762238	ArrayIndexing	pulse_position [ 0 ]		1762016	0					
ANR	1762239	Identifier	pulse_position		1762016	0					
ANR	1762240	PrimaryExpression	0		1762016	1					
ANR	1762241	MultiplicativeExpression	( fixed_index & 7 ) * 5		1762016	1		*			
ANR	1762242	BitAndExpression	fixed_index & 7		1762016	0		&			
ANR	1762243	Identifier	fixed_index		1762016	0					
ANR	1762244	PrimaryExpression	7		1762016	1					
ANR	1762245	PrimaryExpression	5		1762016	1					
ANR	1762246	ExpressionStatement	pulse_subset = ( fixed_index >> 2 ) & 2	55:12:1438:1481	1762016	1	True				
ANR	1762247	AssignmentExpression	pulse_subset = ( fixed_index >> 2 ) & 2		1762016	0		=			
ANR	1762248	Identifier	pulse_subset		1762016	0					
ANR	1762249	BitAndExpression	( fixed_index >> 2 ) & 2		1762016	1		&			
ANR	1762250	ShiftExpression	fixed_index >> 2		1762016	0		>>			
ANR	1762251	Identifier	fixed_index		1762016	0					
ANR	1762252	PrimaryExpression	2		1762016	1					
ANR	1762253	PrimaryExpression	2		1762016	1					
ANR	1762254	ExpressionStatement	pulse_position [ 1 ] = ( ( fixed_index >> 4 ) & 7 ) * 5 + pulse_subset + 1	57:12:1496:1563	1762016	2	True				
ANR	1762255	AssignmentExpression	pulse_position [ 1 ] = ( ( fixed_index >> 4 ) & 7 ) * 5 + pulse_subset + 1		1762016	0		=			
ANR	1762256	ArrayIndexing	pulse_position [ 1 ]		1762016	0					
ANR	1762257	Identifier	pulse_position		1762016	0					
ANR	1762258	PrimaryExpression	1		1762016	1					
ANR	1762259	AdditiveExpression	( ( fixed_index >> 4 ) & 7 ) * 5 + pulse_subset + 1		1762016	1		+			
ANR	1762260	MultiplicativeExpression	( ( fixed_index >> 4 ) & 7 ) * 5		1762016	0		*			
ANR	1762261	BitAndExpression	( fixed_index >> 4 ) & 7		1762016	0		&			
ANR	1762262	ShiftExpression	fixed_index >> 4		1762016	0		>>			
ANR	1762263	Identifier	fixed_index		1762016	0					
ANR	1762264	PrimaryExpression	4		1762016	1					
ANR	1762265	PrimaryExpression	7		1762016	1					
ANR	1762266	PrimaryExpression	5		1762016	1					
ANR	1762267	AdditiveExpression	pulse_subset + 1		1762016	1		+			
ANR	1762268	Identifier	pulse_subset		1762016	0					
ANR	1762269	PrimaryExpression	1		1762016	1					
ANR	1762270	ExpressionStatement	pulse_subset = ( fixed_index >> 6 ) & 2	59:12:1578:1621	1762016	3	True				
ANR	1762271	AssignmentExpression	pulse_subset = ( fixed_index >> 6 ) & 2		1762016	0		=			
ANR	1762272	Identifier	pulse_subset		1762016	0					
ANR	1762273	BitAndExpression	( fixed_index >> 6 ) & 2		1762016	1		&			
ANR	1762274	ShiftExpression	fixed_index >> 6		1762016	0		>>			
ANR	1762275	Identifier	fixed_index		1762016	0					
ANR	1762276	PrimaryExpression	6		1762016	1					
ANR	1762277	PrimaryExpression	2		1762016	1					
ANR	1762278	ExpressionStatement	pulse_position [ 2 ] = ( ( fixed_index >> 8 ) & 7 ) * 5 + pulse_subset + 2	61:12:1636:1703	1762016	4	True				
ANR	1762279	AssignmentExpression	pulse_position [ 2 ] = ( ( fixed_index >> 8 ) & 7 ) * 5 + pulse_subset + 2		1762016	0		=			
ANR	1762280	ArrayIndexing	pulse_position [ 2 ]		1762016	0					
ANR	1762281	Identifier	pulse_position		1762016	0					
ANR	1762282	PrimaryExpression	2		1762016	1					
ANR	1762283	AdditiveExpression	( ( fixed_index >> 8 ) & 7 ) * 5 + pulse_subset + 2		1762016	1		+			
ANR	1762284	MultiplicativeExpression	( ( fixed_index >> 8 ) & 7 ) * 5		1762016	0		*			
ANR	1762285	BitAndExpression	( fixed_index >> 8 ) & 7		1762016	0		&			
ANR	1762286	ShiftExpression	fixed_index >> 8		1762016	0		>>			
ANR	1762287	Identifier	fixed_index		1762016	0					
ANR	1762288	PrimaryExpression	8		1762016	1					
ANR	1762289	PrimaryExpression	7		1762016	1					
ANR	1762290	PrimaryExpression	5		1762016	1					
ANR	1762291	AdditiveExpression	pulse_subset + 2		1762016	1		+			
ANR	1762292	Identifier	pulse_subset		1762016	0					
ANR	1762293	PrimaryExpression	2		1762016	1					
ANR	1762294	ExpressionStatement	fixed_sparse -> n = 3	63:12:1718:1737	1762016	5	True				
ANR	1762295	AssignmentExpression	fixed_sparse -> n = 3		1762016	0		=			
ANR	1762296	PtrMemberAccess	fixed_sparse -> n		1762016	0					
ANR	1762297	Identifier	fixed_sparse		1762016	0					
ANR	1762298	Identifier	n		1762016	1					
ANR	1762299	PrimaryExpression	3		1762016	1					
ANR	1762300	ElseStatement	else		1762016	0					
ANR	1762301	CompoundStatement		61:15:1598:1598	1762016	0					
ANR	1762302	ExpressionStatement	pulse_position [ 0 ] = gray_decode [ fixed_index & 7 ]	67:12:1791:1847	1762016	0	True				
ANR	1762303	AssignmentExpression	pulse_position [ 0 ] = gray_decode [ fixed_index & 7 ]		1762016	0		=			
ANR	1762304	ArrayIndexing	pulse_position [ 0 ]		1762016	0					
ANR	1762305	Identifier	pulse_position		1762016	0					
ANR	1762306	PrimaryExpression	0		1762016	1					
ANR	1762307	ArrayIndexing	gray_decode [ fixed_index & 7 ]		1762016	1					
ANR	1762308	Identifier	gray_decode		1762016	0					
ANR	1762309	BitAndExpression	fixed_index & 7		1762016	1		&			
ANR	1762310	Identifier	fixed_index		1762016	0					
ANR	1762311	PrimaryExpression	7		1762016	1					
ANR	1762312	ExpressionStatement	pulse_position [ 1 ] = gray_decode [ ( fixed_index >> 3 ) & 7 ] + 1	69:12:1862:1922	1762016	1	True				
ANR	1762313	AssignmentExpression	pulse_position [ 1 ] = gray_decode [ ( fixed_index >> 3 ) & 7 ] + 1		1762016	0		=			
ANR	1762314	ArrayIndexing	pulse_position [ 1 ]		1762016	0					
ANR	1762315	Identifier	pulse_position		1762016	0					
ANR	1762316	PrimaryExpression	1		1762016	1					
ANR	1762317	AdditiveExpression	gray_decode [ ( fixed_index >> 3 ) & 7 ] + 1		1762016	1		+			
ANR	1762318	ArrayIndexing	gray_decode [ ( fixed_index >> 3 ) & 7 ]		1762016	0					
ANR	1762319	Identifier	gray_decode		1762016	0					
ANR	1762320	BitAndExpression	( fixed_index >> 3 ) & 7		1762016	1		&			
ANR	1762321	ShiftExpression	fixed_index >> 3		1762016	0		>>			
ANR	1762322	Identifier	fixed_index		1762016	0					
ANR	1762323	PrimaryExpression	3		1762016	1					
ANR	1762324	PrimaryExpression	7		1762016	1					
ANR	1762325	PrimaryExpression	1		1762016	1					
ANR	1762326	ExpressionStatement	pulse_position [ 2 ] = gray_decode [ ( fixed_index >> 6 ) & 7 ] + 2	71:12:1937:1997	1762016	2	True				
ANR	1762327	AssignmentExpression	pulse_position [ 2 ] = gray_decode [ ( fixed_index >> 6 ) & 7 ] + 2		1762016	0		=			
ANR	1762328	ArrayIndexing	pulse_position [ 2 ]		1762016	0					
ANR	1762329	Identifier	pulse_position		1762016	0					
ANR	1762330	PrimaryExpression	2		1762016	1					
ANR	1762331	AdditiveExpression	gray_decode [ ( fixed_index >> 6 ) & 7 ] + 2		1762016	1		+			
ANR	1762332	ArrayIndexing	gray_decode [ ( fixed_index >> 6 ) & 7 ]		1762016	0					
ANR	1762333	Identifier	gray_decode		1762016	0					
ANR	1762334	BitAndExpression	( fixed_index >> 6 ) & 7		1762016	1		&			
ANR	1762335	ShiftExpression	fixed_index >> 6		1762016	0		>>			
ANR	1762336	Identifier	fixed_index		1762016	0					
ANR	1762337	PrimaryExpression	6		1762016	1					
ANR	1762338	PrimaryExpression	7		1762016	1					
ANR	1762339	PrimaryExpression	2		1762016	1					
ANR	1762340	ExpressionStatement	pulse_subset = ( fixed_index >> 9 ) & 1	73:12:2012:2054	1762016	3	True				
ANR	1762341	AssignmentExpression	pulse_subset = ( fixed_index >> 9 ) & 1		1762016	0		=			
ANR	1762342	Identifier	pulse_subset		1762016	0					
ANR	1762343	BitAndExpression	( fixed_index >> 9 ) & 1		1762016	1		&			
ANR	1762344	ShiftExpression	fixed_index >> 9		1762016	0		>>			
ANR	1762345	Identifier	fixed_index		1762016	0					
ANR	1762346	PrimaryExpression	9		1762016	1					
ANR	1762347	PrimaryExpression	1		1762016	1					
ANR	1762348	ExpressionStatement	pulse_position [ 3 ] = gray_decode [ ( fixed_index >> 10 ) & 7 ] + pulse_subset + 3	75:12:2069:2144	1762016	4	True				
ANR	1762349	AssignmentExpression	pulse_position [ 3 ] = gray_decode [ ( fixed_index >> 10 ) & 7 ] + pulse_subset + 3		1762016	0		=			
ANR	1762350	ArrayIndexing	pulse_position [ 3 ]		1762016	0					
ANR	1762351	Identifier	pulse_position		1762016	0					
ANR	1762352	PrimaryExpression	3		1762016	1					
ANR	1762353	AdditiveExpression	gray_decode [ ( fixed_index >> 10 ) & 7 ] + pulse_subset + 3		1762016	1		+			
ANR	1762354	ArrayIndexing	gray_decode [ ( fixed_index >> 10 ) & 7 ]		1762016	0					
ANR	1762355	Identifier	gray_decode		1762016	0					
ANR	1762356	BitAndExpression	( fixed_index >> 10 ) & 7		1762016	1		&			
ANR	1762357	ShiftExpression	fixed_index >> 10		1762016	0		>>			
ANR	1762358	Identifier	fixed_index		1762016	0					
ANR	1762359	PrimaryExpression	10		1762016	1					
ANR	1762360	PrimaryExpression	7		1762016	1					
ANR	1762361	AdditiveExpression	pulse_subset + 3		1762016	1		+			
ANR	1762362	Identifier	pulse_subset		1762016	0					
ANR	1762363	PrimaryExpression	3		1762016	1					
ANR	1762364	ExpressionStatement	fixed_sparse -> n = 4	77:12:2159:2178	1762016	5	True				
ANR	1762365	AssignmentExpression	fixed_sparse -> n = 4		1762016	0		=			
ANR	1762366	PtrMemberAccess	fixed_sparse -> n		1762016	0					
ANR	1762367	Identifier	fixed_sparse		1762016	0					
ANR	1762368	Identifier	n		1762016	1					
ANR	1762369	PrimaryExpression	4		1762016	1					
ANR	1762370	ForStatement	for ( i = 0 ; i < fixed_sparse -> n ; i ++ )		1762016	4					
ANR	1762371	ForInit	i = 0 ;	81:13:2205:2210	1762016	0	True				
ANR	1762372	AssignmentExpression	i = 0		1762016	0		=			
ANR	1762373	Identifier	i		1762016	0					
ANR	1762374	PrimaryExpression	0		1762016	1					
ANR	1762375	Condition	i < fixed_sparse -> n	81:20:2212:2230	1762016	1	True				
ANR	1762376	RelationalExpression	i < fixed_sparse -> n		1762016	0		<			
ANR	1762377	Identifier	i		1762016	0					
ANR	1762378	PtrMemberAccess	fixed_sparse -> n		1762016	1					
ANR	1762379	Identifier	fixed_sparse		1762016	0					
ANR	1762380	Identifier	n		1762016	1					
ANR	1762381	PostIncDecOperationExpression	i ++	81:41:2233:2235	1762016	2	True				
ANR	1762382	Identifier	i		1762016	0					
ANR	1762383	IncDec	++		1762016	1					
ANR	1762384	ExpressionStatement	fixed_sparse -> y [ i ] = ( pulses [ 1 ] >> i ) & 1 ? 1.0 : - 1.0	83:12:2251:2305	1762016	3	True				
ANR	1762385	AssignmentExpression	fixed_sparse -> y [ i ] = ( pulses [ 1 ] >> i ) & 1 ? 1.0 : - 1.0		1762016	0		=			
ANR	1762386	ArrayIndexing	fixed_sparse -> y [ i ]		1762016	0					
ANR	1762387	PtrMemberAccess	fixed_sparse -> y		1762016	0					
ANR	1762388	Identifier	fixed_sparse		1762016	0					
ANR	1762389	Identifier	y		1762016	1					
ANR	1762390	Identifier	i		1762016	1					
ANR	1762391	ConditionalExpression	( pulses [ 1 ] >> i ) & 1 ? 1.0 : - 1.0		1762016	1					
ANR	1762392	Condition	( pulses [ 1 ] >> i ) & 1		1762016	0					
ANR	1762393	BitAndExpression	( pulses [ 1 ] >> i ) & 1		1762016	0		&			
ANR	1762394	ShiftExpression	pulses [ 1 ] >> i		1762016	0		>>			
ANR	1762395	ArrayIndexing	pulses [ 1 ]		1762016	0					
ANR	1762396	Identifier	pulses		1762016	0					
ANR	1762397	PrimaryExpression	1		1762016	1					
ANR	1762398	Identifier	i		1762016	1					
ANR	1762399	PrimaryExpression	1		1762016	1					
ANR	1762400	PrimaryExpression	1.0		1762016	1					
ANR	1762401	UnaryOperationExpression	- 1.0		1762016	2					
ANR	1762402	UnaryOperator	-		1762016	0					
ANR	1762403	PrimaryExpression	1.0		1762016	1					
ANR	1762404	ReturnType	static void		1762016	1					
ANR	1762405	Identifier	decode_fixed_sparse		1762016	2					
ANR	1762406	ParameterList	"AMRFixed * fixed_sparse , const uint16_t * pulses , const enum Mode mode , const int subframe"		1762016	3					
ANR	1762407	Parameter	AMRFixed * fixed_sparse	1:32:32:53	1762016	0	True				
ANR	1762408	ParameterType	AMRFixed *		1762016	0					
ANR	1762409	Identifier	fixed_sparse		1762016	1					
ANR	1762410	Parameter	const uint16_t * pulses	1:56:56:77	1762016	1	True				
ANR	1762411	ParameterType	const uint16_t *		1762016	0					
ANR	1762412	Identifier	pulses		1762016	1					
ANR	1762413	Parameter	const enum Mode mode	3:32:113:132	1762016	2	True				
ANR	1762414	ParameterType	const enum Mode		1762016	0					
ANR	1762415	Identifier	mode		1762016	1					
ANR	1762416	Parameter	const int subframe	3:54:135:152	1762016	3	True				
ANR	1762417	ParameterType	const int		1762016	0					
ANR	1762418	Identifier	subframe		1762016	1					
ANR	1762419	CFGEntryNode	ENTRY		1762016		True				
ANR	1762420	CFGExitNode	EXIT		1762016		True				
ANR	1762421	Symbol	subframe		1762016						
ANR	1762422	Symbol	* fixed_sparse		1762016						
ANR	1762423	Symbol	pulse_position		1762016						
ANR	1762424	Symbol	* pulses		1762016						
ANR	1762425	Symbol	* track_position		1762016						
ANR	1762426	Symbol	MODE_6k7		1762016						
ANR	1762427	Symbol	* gray_decode		1762016						
ANR	1762428	Symbol	MODE_5k9		1762016						
ANR	1762429	Symbol	mode		1762016						
ANR	1762430	Symbol	* fixed_sparse -> y		1762016						
ANR	1762431	Symbol	pulse_subset		1762016						
ANR	1762432	Symbol	fixed_sparse -> n		1762016						
ANR	1762433	Symbol	fixed_sparse -> y		1762016						
ANR	1762434	Symbol	fixed_sparse -> x		1762016						
ANR	1762435	Symbol	MODE_5k15		1762016						
ANR	1762436	Symbol	track_position		1762016						
ANR	1762437	Symbol	* pulse_position		1762016						
ANR	1762438	Symbol	* pulse_subset		1762016						
ANR	1762439	Symbol	MODE_10k2		1762016						
ANR	1762440	Symbol	i		1762016						
ANR	1762441	Symbol	* * fixed_sparse		1762016						
ANR	1762442	Symbol	gray_decode		1762016						
ANR	1762443	Symbol	MODE_12k2		1762016						
ANR	1762444	Symbol	* fixed_index		1762016						
ANR	1762445	Symbol	* i		1762016						
ANR	1762446	Symbol	fixed_sparse		1762016						
ANR	1762447	Symbol	fixed_index		1762016						
ANR	1762448	Symbol	pulses		1762016						
ANR	1762449	Symbol	MODE_4k75		1762016						
