command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	550323	File	/home/p4ultr4n/workplace/ReVeal/raw_code/amr_wb_decode_frame_0.c								
ANR	550324	Function	amr_wb_decode_frame	1:0:0:790							
ANR	550325	FunctionDef	"amr_wb_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		550324	0					
ANR	550326	CompoundStatement		5:0:132:790	550324	0					
ANR	550327	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:139:171	550324	0	True				
ANR	550328	IdentifierDecl	* buf = avpkt -> data		550324	0					
ANR	550329	IdentifierDeclType	const uint8_t *		550324	0					
ANR	550330	Identifier	buf		550324	1					
ANR	550331	AssignmentExpression	* buf = avpkt -> data		550324	2		=			
ANR	550332	Identifier	buf		550324	0					
ANR	550333	PtrMemberAccess	avpkt -> data		550324	1					
ANR	550334	Identifier	avpkt		550324	0					
ANR	550335	Identifier	data		550324	1					
ANR	550336	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:178:210	550324	1	True				
ANR	550337	IdentifierDecl	buf_size = avpkt -> size		550324	0					
ANR	550338	IdentifierDeclType	int		550324	0					
ANR	550339	Identifier	buf_size		550324	1					
ANR	550340	AssignmentExpression	buf_size = avpkt -> size		550324	2		=			
ANR	550341	Identifier	buf_size		550324	0					
ANR	550342	PtrMemberAccess	avpkt -> size		550324	1					
ANR	550343	Identifier	avpkt		550324	0					
ANR	550344	Identifier	size		550324	1					
ANR	550345	IdentifierDeclStatement	AMRWBContext * s = avctx -> priv_data ;	11:4:217:254	550324	2	True				
ANR	550346	IdentifierDecl	* s = avctx -> priv_data		550324	0					
ANR	550347	IdentifierDeclType	AMRWBContext *		550324	0					
ANR	550348	Identifier	s		550324	1					
ANR	550349	AssignmentExpression	* s = avctx -> priv_data		550324	2		=			
ANR	550350	Identifier	s		550324	0					
ANR	550351	PtrMemberAccess	avctx -> priv_data		550324	1					
ANR	550352	Identifier	avctx		550324	0					
ANR	550353	Identifier	priv_data		550324	1					
ANR	550354	IdentifierDeclStatement	int mode ;	13:4:261:269	550324	3	True				
ANR	550355	IdentifierDecl	mode		550324	0					
ANR	550356	IdentifierDeclType	int		550324	0					
ANR	550357	Identifier	mode		550324	1					
ANR	550358	IdentifierDeclStatement	int packet_size ;	15:4:276:291	550324	4	True				
ANR	550359	IdentifierDecl	packet_size		550324	0					
ANR	550360	IdentifierDeclType	int		550324	0					
ANR	550361	Identifier	packet_size		550324	1					
ANR	550362	Statement	static	17:4:298:303	550324	5	True				
ANR	550363	IdentifierDeclStatement	"const uint8_t block_size [ 16 ] = { 18 , 24 , 33 , 37 , 41 , 47 , 51 , 59 , 61 , 6 , 6 , 0 , 0 , 0 , 1 , 1 } ;"	17:11:305:393	550324	6	True				
ANR	550364	IdentifierDecl	"block_size [ 16 ] = { 18 , 24 , 33 , 37 , 41 , 47 , 51 , 59 , 61 , 6 , 6 , 0 , 0 , 0 , 1 , 1 }"		550324	0					
ANR	550365	IdentifierDeclType	const uint8_t [ 16 ]		550324	0					
ANR	550366	Identifier	block_size		550324	1					
ANR	550367	PrimaryExpression	16		550324	2					
ANR	550368	AssignmentExpression	"block_size [ 16 ] = { 18 , 24 , 33 , 37 , 41 , 47 , 51 , 59 , 61 , 6 , 6 , 0 , 0 , 0 , 1 , 1 }"		550324	3		=			
ANR	550369	Identifier	block_size		550324	0					
ANR	550370	InitializerList	18		550324	1					
ANR	550371	PrimaryExpression	18		550324	0					
ANR	550372	PrimaryExpression	24		550324	1					
ANR	550373	PrimaryExpression	33		550324	2					
ANR	550374	PrimaryExpression	37		550324	3					
ANR	550375	PrimaryExpression	41		550324	4					
ANR	550376	PrimaryExpression	47		550324	5					
ANR	550377	PrimaryExpression	51		550324	6					
ANR	550378	PrimaryExpression	59		550324	7					
ANR	550379	PrimaryExpression	61		550324	8					
ANR	550380	PrimaryExpression	6		550324	9					
ANR	550381	PrimaryExpression	6		550324	10					
ANR	550382	PrimaryExpression	0		550324	11					
ANR	550383	PrimaryExpression	0		550324	12					
ANR	550384	PrimaryExpression	0		550324	13					
ANR	550385	PrimaryExpression	1		550324	14					
ANR	550386	PrimaryExpression	1		550324	15					
ANR	550387	ExpressionStatement	mode = ( buf [ 0 ] >> 3 ) & 0x000F	21:4:402:438	550324	7	True				
ANR	550388	AssignmentExpression	mode = ( buf [ 0 ] >> 3 ) & 0x000F		550324	0		=			
ANR	550389	Identifier	mode		550324	0					
ANR	550390	BitAndExpression	( buf [ 0 ] >> 3 ) & 0x000F		550324	1		&			
ANR	550391	ShiftExpression	buf [ 0 ] >> 3		550324	0		>>			
ANR	550392	ArrayIndexing	buf [ 0 ]		550324	0					
ANR	550393	Identifier	buf		550324	0					
ANR	550394	PrimaryExpression	0		550324	1					
ANR	550395	PrimaryExpression	3		550324	1					
ANR	550396	PrimaryExpression	0x000F		550324	1					
ANR	550397	ExpressionStatement	packet_size = block_size [ mode ]	23:4:445:475	550324	8	True				
ANR	550398	AssignmentExpression	packet_size = block_size [ mode ]		550324	0		=			
ANR	550399	Identifier	packet_size		550324	0					
ANR	550400	ArrayIndexing	block_size [ mode ]		550324	1					
ANR	550401	Identifier	block_size		550324	0					
ANR	550402	Identifier	mode		550324	1					
ANR	550403	IfStatement	if ( packet_size > buf_size )		550324	9					
ANR	550404	Condition	packet_size > buf_size	27:8:488:509	550324	0	True				
ANR	550405	RelationalExpression	packet_size > buf_size		550324	0		>			
ANR	550406	Identifier	packet_size		550324	0					
ANR	550407	Identifier	buf_size		550324	1					
ANR	550408	CompoundStatement		23:32:379:379	550324	1					
ANR	550409	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""amr frame too short (%u, should be %u)\\n"" , buf_size , packet_size + 1 )"	29:8:523:637	550324	0	True				
ANR	550410	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""amr frame too short (%u, should be %u)\\n"" , buf_size , packet_size + 1 )"		550324	0					
ANR	550411	Callee	av_log		550324	0					
ANR	550412	Identifier	av_log		550324	0					
ANR	550413	ArgumentList	avctx		550324	1					
ANR	550414	Argument	avctx		550324	0					
ANR	550415	Identifier	avctx		550324	0					
ANR	550416	Argument	AV_LOG_ERROR		550324	1					
ANR	550417	Identifier	AV_LOG_ERROR		550324	0					
ANR	550418	Argument	"""amr frame too short (%u, should be %u)\\n"""		550324	2					
ANR	550419	PrimaryExpression	"""amr frame too short (%u, should be %u)\\n"""		550324	0					
ANR	550420	Argument	buf_size		550324	3					
ANR	550421	Identifier	buf_size		550324	0					
ANR	550422	Argument	packet_size + 1		550324	4					
ANR	550423	AdditiveExpression	packet_size + 1		550324	0		+			
ANR	550424	Identifier	packet_size		550324	0					
ANR	550425	PrimaryExpression	1		550324	1					
ANR	550426	ReturnStatement	return AVERROR_INVALIDDATA ;	33:8:648:674	550324	1	True				
ANR	550427	Identifier	AVERROR_INVALIDDATA		550324	0					
ANR	550428	ExpressionStatement	"D_IF_decode ( s -> state , buf , data , _good_frame )"	39:4:690:735	550324	10	True				
ANR	550429	CallExpression	"D_IF_decode ( s -> state , buf , data , _good_frame )"		550324	0					
ANR	550430	Callee	D_IF_decode		550324	0					
ANR	550431	Identifier	D_IF_decode		550324	0					
ANR	550432	ArgumentList	s -> state		550324	1					
ANR	550433	Argument	s -> state		550324	0					
ANR	550434	PtrMemberAccess	s -> state		550324	0					
ANR	550435	Identifier	s		550324	0					
ANR	550436	Identifier	state		550324	1					
ANR	550437	Argument	buf		550324	1					
ANR	550438	Identifier	buf		550324	0					
ANR	550439	Argument	data		550324	2					
ANR	550440	Identifier	data		550324	0					
ANR	550441	Argument	_good_frame		550324	3					
ANR	550442	Identifier	_good_frame		550324	0					
ANR	550443	ExpressionStatement	* data_size = 320 * 2	41:4:742:762	550324	11	True				
ANR	550444	AssignmentExpression	* data_size = 320 * 2		550324	0		=			
ANR	550445	UnaryOperationExpression	* data_size		550324	0					
ANR	550446	UnaryOperator	*		550324	0					
ANR	550447	Identifier	data_size		550324	1					
ANR	550448	MultiplicativeExpression	320 * 2		550324	1		*			
ANR	550449	PrimaryExpression	320		550324	0					
ANR	550450	PrimaryExpression	2		550324	1					
ANR	550451	ReturnStatement	return packet_size ;	43:4:769:787	550324	12	True				
ANR	550452	Identifier	packet_size		550324	0					
ANR	550453	ReturnType	static int		550324	1					
ANR	550454	Identifier	amr_wb_decode_frame		550324	2					
ANR	550455	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		550324	3					
ANR	550456	Parameter	AVCodecContext * avctx	1:31:31:51	550324	0	True				
ANR	550457	ParameterType	AVCodecContext *		550324	0					
ANR	550458	Identifier	avctx		550324	1					
ANR	550459	Parameter	void * data	1:54:54:63	550324	1	True				
ANR	550460	ParameterType	void *		550324	0					
ANR	550461	Identifier	data		550324	1					
ANR	550462	Parameter	int * data_size	3:31:98:111	550324	2	True				
ANR	550463	ParameterType	int *		550324	0					
ANR	550464	Identifier	data_size		550324	1					
ANR	550465	Parameter	AVPacket * avpkt	3:47:114:128	550324	3	True				
ANR	550466	ParameterType	AVPacket *		550324	0					
ANR	550467	Identifier	avpkt		550324	1					
ANR	550468	CFGEntryNode	ENTRY		550324		True				
ANR	550469	CFGExitNode	EXIT		550324		True				
ANR	550470	Symbol	data_size		550324						
ANR	550471	Symbol	* avpkt		550324						
ANR	550472	Symbol	* buf		550324						
ANR	550473	Symbol	* block_size		550324						
ANR	550474	Symbol	data		550324						
ANR	550475	Symbol	AV_LOG_ERROR		550324						
ANR	550476	Symbol	buf_size		550324						
ANR	550477	Symbol	s -> state		550324						
ANR	550478	Symbol	avpkt		550324						
ANR	550479	Symbol	* data_size		550324						
ANR	550480	Symbol	avctx -> priv_data		550324						
ANR	550481	Symbol	mode		550324						
ANR	550482	Symbol	buf		550324						
ANR	550483	Symbol	* avctx		550324						
ANR	550484	Symbol	s		550324						
ANR	550485	Symbol	packet_size		550324						
ANR	550486	Symbol	* mode		550324						
ANR	550487	Symbol	avpkt -> size		550324						
ANR	550488	Symbol	AVERROR_INVALIDDATA		550324						
ANR	550489	Symbol	avpkt -> data		550324						
ANR	550490	Symbol	avctx		550324						
ANR	550491	Symbol	block_size		550324						
ANR	550492	Symbol	* s		550324						
ANR	550493	Symbol	_good_frame		550324						
