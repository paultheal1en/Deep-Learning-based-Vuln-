command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2510069	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dma_buf_prepare_0.c								
ANR	2510070	Function	dma_buf_prepare	1:0:0:1240							
ANR	2510071	FunctionDef	"dma_buf_prepare (BMDMAState * bm , int is_write)"		2510070	0					
ANR	2510072	CompoundStatement		3:0:58:1240	2510070	0					
ANR	2510073	IdentifierDeclStatement	IDEState * s = bmdma_active_if ( bm ) ;	5:4:65:98	2510070	0	True				
ANR	2510074	IdentifierDecl	* s = bmdma_active_if ( bm )		2510070	0					
ANR	2510075	IdentifierDeclType	IDEState *		2510070	0					
ANR	2510076	Identifier	s		2510070	1					
ANR	2510077	AssignmentExpression	* s = bmdma_active_if ( bm )		2510070	2		=			
ANR	2510078	Identifier	s		2510070	0					
ANR	2510079	CallExpression	bmdma_active_if ( bm )		2510070	1					
ANR	2510080	Callee	bmdma_active_if		2510070	0					
ANR	2510081	Identifier	bmdma_active_if		2510070	0					
ANR	2510082	ArgumentList	bm		2510070	1					
ANR	2510083	Argument	bm		2510070	0					
ANR	2510084	Identifier	bm		2510070	0					
ANR	2510085	ClassDefStatement	struct { uint32_t addr ; uint32_t size ; } prd ;	7:4:105:172	2510070	1	True				
ANR	2510086	IdentifierDecl	prd		2510070	0					
ANR	2510087	IdentifierDeclType			2510070	0					
ANR	2510088	Identifier	prd		2510070	1					
ANR	2510089	IdentifierDeclStatement	"int l , len ;"	15:4:179:189	2510070	2	True				
ANR	2510090	IdentifierDecl	l		2510070	0					
ANR	2510091	IdentifierDeclType	int		2510070	0					
ANR	2510092	Identifier	l		2510070	1					
ANR	2510093	IdentifierDecl	len		2510070	1					
ANR	2510094	IdentifierDeclType	int		2510070	0					
ANR	2510095	Identifier	len		2510070	1					
ANR	2510096	ExpressionStatement	"qemu_sglist_init ( & s -> sg , s -> nsector / ( TARGET_PAGE_SIZE / 512 ) + 1 )"	19:4:198:263	2510070	3	True				
ANR	2510097	CallExpression	"qemu_sglist_init ( & s -> sg , s -> nsector / ( TARGET_PAGE_SIZE / 512 ) + 1 )"		2510070	0					
ANR	2510098	Callee	qemu_sglist_init		2510070	0					
ANR	2510099	Identifier	qemu_sglist_init		2510070	0					
ANR	2510100	ArgumentList	& s -> sg		2510070	1					
ANR	2510101	Argument	& s -> sg		2510070	0					
ANR	2510102	UnaryOperationExpression	& s -> sg		2510070	0					
ANR	2510103	UnaryOperator	&		2510070	0					
ANR	2510104	PtrMemberAccess	s -> sg		2510070	1					
ANR	2510105	Identifier	s		2510070	0					
ANR	2510106	Identifier	sg		2510070	1					
ANR	2510107	Argument	s -> nsector / ( TARGET_PAGE_SIZE / 512 ) + 1		2510070	1					
ANR	2510108	AdditiveExpression	s -> nsector / ( TARGET_PAGE_SIZE / 512 ) + 1		2510070	0		+			
ANR	2510109	MultiplicativeExpression	s -> nsector / ( TARGET_PAGE_SIZE / 512 )		2510070	0		/			
ANR	2510110	PtrMemberAccess	s -> nsector		2510070	0					
ANR	2510111	Identifier	s		2510070	0					
ANR	2510112	Identifier	nsector		2510070	1					
ANR	2510113	MultiplicativeExpression	TARGET_PAGE_SIZE / 512		2510070	1		/			
ANR	2510114	Identifier	TARGET_PAGE_SIZE		2510070	0					
ANR	2510115	PrimaryExpression	512		2510070	1					
ANR	2510116	PrimaryExpression	1		2510070	1					
ANR	2510117	ExpressionStatement	s -> io_buffer_size = 0	21:4:270:291	2510070	4	True				
ANR	2510118	AssignmentExpression	s -> io_buffer_size = 0		2510070	0		=			
ANR	2510119	PtrMemberAccess	s -> io_buffer_size		2510070	0					
ANR	2510120	Identifier	s		2510070	0					
ANR	2510121	Identifier	io_buffer_size		2510070	1					
ANR	2510122	PrimaryExpression	0		2510070	1					
ANR	2510123	ForStatement	for ( ; ; )		2510070	5					
ANR	2510124	CompoundStatement		21:12:247:247	2510070	0					
ANR	2510125	IfStatement	if ( bm -> cur_prd_len == 0 )		2510070	0					
ANR	2510126	Condition	bm -> cur_prd_len == 0	25:12:321:340	2510070	0	True				
ANR	2510127	EqualityExpression	bm -> cur_prd_len == 0		2510070	0		==			
ANR	2510128	PtrMemberAccess	bm -> cur_prd_len		2510070	0					
ANR	2510129	Identifier	bm		2510070	0					
ANR	2510130	Identifier	cur_prd_len		2510070	1					
ANR	2510131	PrimaryExpression	0		2510070	1					
ANR	2510132	CompoundStatement		23:34:284:284	2510070	1					
ANR	2510133	IfStatement	if ( bm -> cur_prd_last || ( bm -> cur_addr - bm -> addr ) >= 4096 )		2510070	0					
ANR	2510134	Condition	bm -> cur_prd_last || ( bm -> cur_addr - bm -> addr ) >= 4096	29:16:425:494	2510070	0	True				
ANR	2510135	OrExpression	bm -> cur_prd_last || ( bm -> cur_addr - bm -> addr ) >= 4096		2510070	0		||			
ANR	2510136	PtrMemberAccess	bm -> cur_prd_last		2510070	0					
ANR	2510137	Identifier	bm		2510070	0					
ANR	2510138	Identifier	cur_prd_last		2510070	1					
ANR	2510139	RelationalExpression	( bm -> cur_addr - bm -> addr ) >= 4096		2510070	1		>=			
ANR	2510140	AdditiveExpression	bm -> cur_addr - bm -> addr		2510070	0		-			
ANR	2510141	PtrMemberAccess	bm -> cur_addr		2510070	0					
ANR	2510142	Identifier	bm		2510070	0					
ANR	2510143	Identifier	cur_addr		2510070	1					
ANR	2510144	PtrMemberAccess	bm -> addr		2510070	1					
ANR	2510145	Identifier	bm		2510070	0					
ANR	2510146	Identifier	addr		2510070	1					
ANR	2510147	PrimaryExpression	4096		2510070	1					
ANR	2510148	ReturnStatement	return s -> io_buffer_size != 0 ;	33:16:514:543	2510070	1	True				
ANR	2510149	EqualityExpression	s -> io_buffer_size != 0		2510070	0		!=			
ANR	2510150	PtrMemberAccess	s -> io_buffer_size		2510070	0					
ANR	2510151	Identifier	s		2510070	0					
ANR	2510152	Identifier	io_buffer_size		2510070	1					
ANR	2510153	PrimaryExpression	0		2510070	1					
ANR	2510154	ExpressionStatement	"cpu_physical_memory_read ( bm -> cur_addr , ( uint8_t * ) & prd , 8 )"	35:12:558:616	2510070	1	True				
ANR	2510155	CallExpression	"cpu_physical_memory_read ( bm -> cur_addr , ( uint8_t * ) & prd , 8 )"		2510070	0					
ANR	2510156	Callee	cpu_physical_memory_read		2510070	0					
ANR	2510157	Identifier	cpu_physical_memory_read		2510070	0					
ANR	2510158	ArgumentList	bm -> cur_addr		2510070	1					
ANR	2510159	Argument	bm -> cur_addr		2510070	0					
ANR	2510160	PtrMemberAccess	bm -> cur_addr		2510070	0					
ANR	2510161	Identifier	bm		2510070	0					
ANR	2510162	Identifier	cur_addr		2510070	1					
ANR	2510163	Argument	( uint8_t * ) & prd		2510070	1					
ANR	2510164	CastExpression	( uint8_t * ) & prd		2510070	0					
ANR	2510165	CastTarget	uint8_t *		2510070	0					
ANR	2510166	UnaryOperationExpression	& prd		2510070	1					
ANR	2510167	UnaryOperator	&		2510070	0					
ANR	2510168	Identifier	prd		2510070	1					
ANR	2510169	Argument	8		2510070	2					
ANR	2510170	PrimaryExpression	8		2510070	0					
ANR	2510171	ExpressionStatement	bm -> cur_addr += 8	37:12:631:648	2510070	2	True				
ANR	2510172	AssignmentExpression	bm -> cur_addr += 8		2510070	0		+=			
ANR	2510173	PtrMemberAccess	bm -> cur_addr		2510070	0					
ANR	2510174	Identifier	bm		2510070	0					
ANR	2510175	Identifier	cur_addr		2510070	1					
ANR	2510176	PrimaryExpression	8		2510070	1					
ANR	2510177	ExpressionStatement	prd . addr = le32_to_cpu ( prd . addr )	39:12:663:695	2510070	3	True				
ANR	2510178	AssignmentExpression	prd . addr = le32_to_cpu ( prd . addr )		2510070	0		=			
ANR	2510179	MemberAccess	prd . addr		2510070	0					
ANR	2510180	Identifier	prd		2510070	0					
ANR	2510181	Identifier	addr		2510070	1					
ANR	2510182	CallExpression	le32_to_cpu ( prd . addr )		2510070	1					
ANR	2510183	Callee	le32_to_cpu		2510070	0					
ANR	2510184	Identifier	le32_to_cpu		2510070	0					
ANR	2510185	ArgumentList	prd . addr		2510070	1					
ANR	2510186	Argument	prd . addr		2510070	0					
ANR	2510187	MemberAccess	prd . addr		2510070	0					
ANR	2510188	Identifier	prd		2510070	0					
ANR	2510189	Identifier	addr		2510070	1					
ANR	2510190	ExpressionStatement	prd . size = le32_to_cpu ( prd . size )	41:12:710:742	2510070	4	True				
ANR	2510191	AssignmentExpression	prd . size = le32_to_cpu ( prd . size )		2510070	0		=			
ANR	2510192	MemberAccess	prd . size		2510070	0					
ANR	2510193	Identifier	prd		2510070	0					
ANR	2510194	Identifier	size		2510070	1					
ANR	2510195	CallExpression	le32_to_cpu ( prd . size )		2510070	1					
ANR	2510196	Callee	le32_to_cpu		2510070	0					
ANR	2510197	Identifier	le32_to_cpu		2510070	0					
ANR	2510198	ArgumentList	prd . size		2510070	1					
ANR	2510199	Argument	prd . size		2510070	0					
ANR	2510200	MemberAccess	prd . size		2510070	0					
ANR	2510201	Identifier	prd		2510070	0					
ANR	2510202	Identifier	size		2510070	1					
ANR	2510203	ExpressionStatement	len = prd . size & 0xfffe	43:12:757:780	2510070	5	True				
ANR	2510204	AssignmentExpression	len = prd . size & 0xfffe		2510070	0		=			
ANR	2510205	Identifier	len		2510070	0					
ANR	2510206	BitAndExpression	prd . size & 0xfffe		2510070	1		&			
ANR	2510207	MemberAccess	prd . size		2510070	0					
ANR	2510208	Identifier	prd		2510070	0					
ANR	2510209	Identifier	size		2510070	1					
ANR	2510210	PrimaryExpression	0xfffe		2510070	1					
ANR	2510211	IfStatement	if ( len == 0 )		2510070	6					
ANR	2510212	Condition	len == 0	45:16:799:806	2510070	0	True				
ANR	2510213	EqualityExpression	len == 0		2510070	0		==			
ANR	2510214	Identifier	len		2510070	0					
ANR	2510215	PrimaryExpression	0		2510070	1					
ANR	2510216	ExpressionStatement	len = 0x10000	47:16:826:839	2510070	1	True				
ANR	2510217	AssignmentExpression	len = 0x10000		2510070	0		=			
ANR	2510218	Identifier	len		2510070	0					
ANR	2510219	PrimaryExpression	0x10000		2510070	1					
ANR	2510220	ExpressionStatement	bm -> cur_prd_len = len	49:12:854:875	2510070	7	True				
ANR	2510221	AssignmentExpression	bm -> cur_prd_len = len		2510070	0		=			
ANR	2510222	PtrMemberAccess	bm -> cur_prd_len		2510070	0					
ANR	2510223	Identifier	bm		2510070	0					
ANR	2510224	Identifier	cur_prd_len		2510070	1					
ANR	2510225	Identifier	len		2510070	1					
ANR	2510226	ExpressionStatement	bm -> cur_prd_addr = prd . addr	51:12:890:917	2510070	8	True				
ANR	2510227	AssignmentExpression	bm -> cur_prd_addr = prd . addr		2510070	0		=			
ANR	2510228	PtrMemberAccess	bm -> cur_prd_addr		2510070	0					
ANR	2510229	Identifier	bm		2510070	0					
ANR	2510230	Identifier	cur_prd_addr		2510070	1					
ANR	2510231	MemberAccess	prd . addr		2510070	1					
ANR	2510232	Identifier	prd		2510070	0					
ANR	2510233	Identifier	addr		2510070	1					
ANR	2510234	ExpressionStatement	bm -> cur_prd_last = ( prd . size & 0x80000000 )	53:12:932:974	2510070	9	True				
ANR	2510235	AssignmentExpression	bm -> cur_prd_last = ( prd . size & 0x80000000 )		2510070	0		=			
ANR	2510236	PtrMemberAccess	bm -> cur_prd_last		2510070	0					
ANR	2510237	Identifier	bm		2510070	0					
ANR	2510238	Identifier	cur_prd_last		2510070	1					
ANR	2510239	BitAndExpression	prd . size & 0x80000000		2510070	1		&			
ANR	2510240	MemberAccess	prd . size		2510070	0					
ANR	2510241	Identifier	prd		2510070	0					
ANR	2510242	Identifier	size		2510070	1					
ANR	2510243	PrimaryExpression	0x80000000		2510070	1					
ANR	2510244	ExpressionStatement	l = bm -> cur_prd_len	57:8:996:1015	2510070	1	True				
ANR	2510245	AssignmentExpression	l = bm -> cur_prd_len		2510070	0		=			
ANR	2510246	Identifier	l		2510070	0					
ANR	2510247	PtrMemberAccess	bm -> cur_prd_len		2510070	1					
ANR	2510248	Identifier	bm		2510070	0					
ANR	2510249	Identifier	cur_prd_len		2510070	1					
ANR	2510250	IfStatement	if ( l > 0 )		2510070	2					
ANR	2510251	Condition	l > 0	59:12:1030:1034	2510070	0	True				
ANR	2510252	RelationalExpression	l > 0		2510070	0		>			
ANR	2510253	Identifier	l		2510070	0					
ANR	2510254	PrimaryExpression	0		2510070	1					
ANR	2510255	CompoundStatement		57:19:978:978	2510070	1					
ANR	2510256	ExpressionStatement	"qemu_sglist_add ( & s -> sg , bm -> cur_prd_addr , l )"	61:12:1052:1096	2510070	0	True				
ANR	2510257	CallExpression	"qemu_sglist_add ( & s -> sg , bm -> cur_prd_addr , l )"		2510070	0					
ANR	2510258	Callee	qemu_sglist_add		2510070	0					
ANR	2510259	Identifier	qemu_sglist_add		2510070	0					
ANR	2510260	ArgumentList	& s -> sg		2510070	1					
ANR	2510261	Argument	& s -> sg		2510070	0					
ANR	2510262	UnaryOperationExpression	& s -> sg		2510070	0					
ANR	2510263	UnaryOperator	&		2510070	0					
ANR	2510264	PtrMemberAccess	s -> sg		2510070	1					
ANR	2510265	Identifier	s		2510070	0					
ANR	2510266	Identifier	sg		2510070	1					
ANR	2510267	Argument	bm -> cur_prd_addr		2510070	1					
ANR	2510268	PtrMemberAccess	bm -> cur_prd_addr		2510070	0					
ANR	2510269	Identifier	bm		2510070	0					
ANR	2510270	Identifier	cur_prd_addr		2510070	1					
ANR	2510271	Argument	l		2510070	2					
ANR	2510272	Identifier	l		2510070	0					
ANR	2510273	ExpressionStatement	bm -> cur_prd_addr += l	63:12:1111:1132	2510070	1	True				
ANR	2510274	AssignmentExpression	bm -> cur_prd_addr += l		2510070	0		+=			
ANR	2510275	PtrMemberAccess	bm -> cur_prd_addr		2510070	0					
ANR	2510276	Identifier	bm		2510070	0					
ANR	2510277	Identifier	cur_prd_addr		2510070	1					
ANR	2510278	Identifier	l		2510070	1					
ANR	2510279	ExpressionStatement	bm -> cur_prd_len -= l	65:12:1147:1167	2510070	2	True				
ANR	2510280	AssignmentExpression	bm -> cur_prd_len -= l		2510070	0		-=			
ANR	2510281	PtrMemberAccess	bm -> cur_prd_len		2510070	0					
ANR	2510282	Identifier	bm		2510070	0					
ANR	2510283	Identifier	cur_prd_len		2510070	1					
ANR	2510284	Identifier	l		2510070	1					
ANR	2510285	ExpressionStatement	s -> io_buffer_size += l	67:12:1182:1204	2510070	3	True				
ANR	2510286	AssignmentExpression	s -> io_buffer_size += l		2510070	0		+=			
ANR	2510287	PtrMemberAccess	s -> io_buffer_size		2510070	0					
ANR	2510288	Identifier	s		2510070	0					
ANR	2510289	Identifier	io_buffer_size		2510070	1					
ANR	2510290	Identifier	l		2510070	1					
ANR	2510291	ReturnStatement	return 1 ;	73:4:1229:1237	2510070	6	True				
ANR	2510292	PrimaryExpression	1		2510070	0					
ANR	2510293	ReturnType	static int		2510070	1					
ANR	2510294	Identifier	dma_buf_prepare		2510070	2					
ANR	2510295	ParameterList	"BMDMAState * bm , int is_write"		2510070	3					
ANR	2510296	Parameter	BMDMAState * bm	1:27:27:40	2510070	0	True				
ANR	2510297	ParameterType	BMDMAState *		2510070	0					
ANR	2510298	Identifier	bm		2510070	1					
ANR	2510299	Parameter	int is_write	1:43:43:54	2510070	1	True				
ANR	2510300	ParameterType	int		2510070	0					
ANR	2510301	Identifier	is_write		2510070	1					
ANR	2510302	CFGEntryNode	ENTRY		2510070		True				
ANR	2510303	CFGExitNode	EXIT		2510070		True				
ANR	2510304	InfiniteForNode	true		2510070		True				
ANR	2510305	Symbol	prd		2510070						
ANR	2510306	Symbol	bm -> cur_addr		2510070						
ANR	2510307	Symbol	prd . addr		2510070						
ANR	2510308	Symbol	bm -> cur_prd_len		2510070						
ANR	2510309	Symbol	TARGET_PAGE_SIZE		2510070						
ANR	2510310	Symbol	bm		2510070						
ANR	2510311	Symbol	is_write		2510070						
ANR	2510312	Symbol	l		2510070						
ANR	2510313	Symbol	& prd		2510070						
ANR	2510314	Symbol	& s -> sg		2510070						
ANR	2510315	Symbol	bm -> addr		2510070						
ANR	2510316	Symbol	* bm		2510070						
ANR	2510317	Symbol	s		2510070						
ANR	2510318	Symbol	bm -> cur_prd_last		2510070						
ANR	2510319	Symbol	len		2510070						
ANR	2510320	Symbol	s -> io_buffer_size		2510070						
ANR	2510321	Symbol	le32_to_cpu		2510070						
ANR	2510322	Symbol	bmdma_active_if		2510070						
ANR	2510323	Symbol	* s		2510070						
ANR	2510324	Symbol	bm -> cur_prd_addr		2510070						
ANR	2510325	Symbol	prd . size		2510070						
ANR	2510326	Symbol	s -> nsector		2510070						
