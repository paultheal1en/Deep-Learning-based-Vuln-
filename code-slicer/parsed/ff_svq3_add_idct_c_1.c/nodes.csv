command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3671410	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_svq3_add_idct_c_1.c								
ANR	3671411	Function	ff_svq3_add_idct_c	1:0:0:1470							
ANR	3671412	FunctionDef	"ff_svq3_add_idct_c (uint8_t * dst , DCTELEM * block , int stride , int qp , int dc)"		3671411	0					
ANR	3671413	CompoundStatement		5:0:112:1470	3671411	0					
ANR	3671414	IdentifierDeclStatement	const int qmul = svq3_dequant_coeff [ qp ] ;	7:4:119:158	3671411	0	True				
ANR	3671415	IdentifierDecl	qmul = svq3_dequant_coeff [ qp ]		3671411	0					
ANR	3671416	IdentifierDeclType	const int		3671411	0					
ANR	3671417	Identifier	qmul		3671411	1					
ANR	3671418	AssignmentExpression	qmul = svq3_dequant_coeff [ qp ]		3671411	2		=			
ANR	3671419	Identifier	qmul		3671411	0					
ANR	3671420	ArrayIndexing	svq3_dequant_coeff [ qp ]		3671411	1					
ANR	3671421	Identifier	svq3_dequant_coeff		3671411	0					
ANR	3671422	Identifier	qp		3671411	1					
ANR	3671423	IdentifierDeclStatement	int i ;	9:4:165:170	3671411	1	True				
ANR	3671424	IdentifierDecl	i		3671411	0					
ANR	3671425	IdentifierDeclType	int		3671411	0					
ANR	3671426	Identifier	i		3671411	1					
ANR	3671427	IdentifierDeclStatement	uint8_t * cm = ff_cropTbl + MAX_NEG_CROP ;	11:4:177:216	3671411	2	True				
ANR	3671428	IdentifierDecl	* cm = ff_cropTbl + MAX_NEG_CROP		3671411	0					
ANR	3671429	IdentifierDeclType	uint8_t *		3671411	0					
ANR	3671430	Identifier	cm		3671411	1					
ANR	3671431	AssignmentExpression	* cm = ff_cropTbl + MAX_NEG_CROP		3671411	2		=			
ANR	3671432	Identifier	cm		3671411	0					
ANR	3671433	AdditiveExpression	ff_cropTbl + MAX_NEG_CROP		3671411	1		+			
ANR	3671434	Identifier	ff_cropTbl		3671411	0					
ANR	3671435	Identifier	MAX_NEG_CROP		3671411	1					
ANR	3671436	IfStatement	if ( dc )		3671411	3					
ANR	3671437	Condition	dc	15:8:229:230	3671411	0	True				
ANR	3671438	Identifier	dc		3671411	0					
ANR	3671439	CompoundStatement		11:12:120:120	3671411	1					
ANR	3671440	ExpressionStatement	dc = 13 * 13 * ( ( dc == 1 ) ? 1538 * block [ 0 ] : ( ( qmul * ( block [ 0 ] >> 3 ) ) / 2 ) )	17:8:244:313	3671411	0	True				
ANR	3671441	AssignmentExpression	dc = 13 * 13 * ( ( dc == 1 ) ? 1538 * block [ 0 ] : ( ( qmul * ( block [ 0 ] >> 3 ) ) / 2 ) )		3671411	0		=			
ANR	3671442	Identifier	dc		3671411	0					
ANR	3671443	MultiplicativeExpression	13 * 13 * ( ( dc == 1 ) ? 1538 * block [ 0 ] : ( ( qmul * ( block [ 0 ] >> 3 ) ) / 2 ) )		3671411	1		*			
ANR	3671444	PrimaryExpression	13		3671411	0					
ANR	3671445	MultiplicativeExpression	13 * ( ( dc == 1 ) ? 1538 * block [ 0 ] : ( ( qmul * ( block [ 0 ] >> 3 ) ) / 2 ) )		3671411	1		*			
ANR	3671446	PrimaryExpression	13		3671411	0					
ANR	3671447	ConditionalExpression	( dc == 1 ) ? 1538 * block [ 0 ] : ( ( qmul * ( block [ 0 ] >> 3 ) ) / 2 )		3671411	1					
ANR	3671448	Condition	dc == 1		3671411	0					
ANR	3671449	EqualityExpression	dc == 1		3671411	0		==			
ANR	3671450	Identifier	dc		3671411	0					
ANR	3671451	PrimaryExpression	1		3671411	1					
ANR	3671452	MultiplicativeExpression	1538 * block [ 0 ]		3671411	1		*			
ANR	3671453	PrimaryExpression	1538		3671411	0					
ANR	3671454	ArrayIndexing	block [ 0 ]		3671411	1					
ANR	3671455	Identifier	block		3671411	0					
ANR	3671456	PrimaryExpression	0		3671411	1					
ANR	3671457	MultiplicativeExpression	( qmul * ( block [ 0 ] >> 3 ) ) / 2		3671411	2		/			
ANR	3671458	MultiplicativeExpression	qmul * ( block [ 0 ] >> 3 )		3671411	0		*			
ANR	3671459	Identifier	qmul		3671411	0					
ANR	3671460	ShiftExpression	block [ 0 ] >> 3		3671411	1		>>			
ANR	3671461	ArrayIndexing	block [ 0 ]		3671411	0					
ANR	3671462	Identifier	block		3671411	0					
ANR	3671463	PrimaryExpression	0		3671411	1					
ANR	3671464	PrimaryExpression	3		3671411	1					
ANR	3671465	PrimaryExpression	2		3671411	1					
ANR	3671466	ExpressionStatement	block [ 0 ] = 0	19:8:324:336	3671411	1	True				
ANR	3671467	AssignmentExpression	block [ 0 ] = 0		3671411	0		=			
ANR	3671468	ArrayIndexing	block [ 0 ]		3671411	0					
ANR	3671469	Identifier	block		3671411	0					
ANR	3671470	PrimaryExpression	0		3671411	1					
ANR	3671471	PrimaryExpression	0		3671411	1					
ANR	3671472	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3671411	4					
ANR	3671473	ForInit	i = 0 ;	25:9:357:362	3671411	0	True				
ANR	3671474	AssignmentExpression	i = 0		3671411	0		=			
ANR	3671475	Identifier	i		3671411	0					
ANR	3671476	PrimaryExpression	0		3671411	1					
ANR	3671477	Condition	i < 4	25:16:364:368	3671411	1	True				
ANR	3671478	RelationalExpression	i < 4		3671411	0		<			
ANR	3671479	Identifier	i		3671411	0					
ANR	3671480	PrimaryExpression	4		3671411	1					
ANR	3671481	PostIncDecOperationExpression	i ++	25:23:371:373	3671411	2	True				
ANR	3671482	Identifier	i		3671411	0					
ANR	3671483	IncDec	++		3671411	1					
ANR	3671484	CompoundStatement		29:8:468:521	3671411	3					
ANR	3671485	IdentifierDeclStatement	const int z0 = 13 * ( block [ 0 + 4 * i ] + block [ 2 + 4 * i ] ) ;	27:8:387:441	3671411	0	True				
ANR	3671486	IdentifierDecl	z0 = 13 * ( block [ 0 + 4 * i ] + block [ 2 + 4 * i ] )		3671411	0					
ANR	3671487	IdentifierDeclType	const int		3671411	0					
ANR	3671488	Identifier	z0		3671411	1					
ANR	3671489	AssignmentExpression	z0 = 13 * ( block [ 0 + 4 * i ] + block [ 2 + 4 * i ] )		3671411	2		=			
ANR	3671490	Identifier	z0		3671411	0					
ANR	3671491	MultiplicativeExpression	13 * ( block [ 0 + 4 * i ] + block [ 2 + 4 * i ] )		3671411	1		*			
ANR	3671492	PrimaryExpression	13		3671411	0					
ANR	3671493	AdditiveExpression	block [ 0 + 4 * i ] + block [ 2 + 4 * i ]		3671411	1		+			
ANR	3671494	ArrayIndexing	block [ 0 + 4 * i ]		3671411	0					
ANR	3671495	Identifier	block		3671411	0					
ANR	3671496	AdditiveExpression	0 + 4 * i		3671411	1		+			
ANR	3671497	PrimaryExpression	0		3671411	0					
ANR	3671498	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671499	PrimaryExpression	4		3671411	0					
ANR	3671500	Identifier	i		3671411	1					
ANR	3671501	ArrayIndexing	block [ 2 + 4 * i ]		3671411	1					
ANR	3671502	Identifier	block		3671411	0					
ANR	3671503	AdditiveExpression	2 + 4 * i		3671411	1		+			
ANR	3671504	PrimaryExpression	2		3671411	0					
ANR	3671505	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671506	PrimaryExpression	4		3671411	0					
ANR	3671507	Identifier	i		3671411	1					
ANR	3671508	IdentifierDeclStatement	const int z1 = 13 * ( block [ 0 + 4 * i ] - block [ 2 + 4 * i ] ) ;	29:8:452:506	3671411	1	True				
ANR	3671509	IdentifierDecl	z1 = 13 * ( block [ 0 + 4 * i ] - block [ 2 + 4 * i ] )		3671411	0					
ANR	3671510	IdentifierDeclType	const int		3671411	0					
ANR	3671511	Identifier	z1		3671411	1					
ANR	3671512	AssignmentExpression	z1 = 13 * ( block [ 0 + 4 * i ] - block [ 2 + 4 * i ] )		3671411	2		=			
ANR	3671513	Identifier	z1		3671411	0					
ANR	3671514	MultiplicativeExpression	13 * ( block [ 0 + 4 * i ] - block [ 2 + 4 * i ] )		3671411	1		*			
ANR	3671515	PrimaryExpression	13		3671411	0					
ANR	3671516	AdditiveExpression	block [ 0 + 4 * i ] - block [ 2 + 4 * i ]		3671411	1		-			
ANR	3671517	ArrayIndexing	block [ 0 + 4 * i ]		3671411	0					
ANR	3671518	Identifier	block		3671411	0					
ANR	3671519	AdditiveExpression	0 + 4 * i		3671411	1		+			
ANR	3671520	PrimaryExpression	0		3671411	0					
ANR	3671521	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671522	PrimaryExpression	4		3671411	0					
ANR	3671523	Identifier	i		3671411	1					
ANR	3671524	ArrayIndexing	block [ 2 + 4 * i ]		3671411	1					
ANR	3671525	Identifier	block		3671411	0					
ANR	3671526	AdditiveExpression	2 + 4 * i		3671411	1		+			
ANR	3671527	PrimaryExpression	2		3671411	0					
ANR	3671528	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671529	PrimaryExpression	4		3671411	0					
ANR	3671530	Identifier	i		3671411	1					
ANR	3671531	IdentifierDeclStatement	const int z2 = 7 * block [ 1 + 4 * i ] - 17 * block [ 3 + 4 * i ] ;	31:8:517:570	3671411	2	True				
ANR	3671532	IdentifierDecl	z2 = 7 * block [ 1 + 4 * i ] - 17 * block [ 3 + 4 * i ]		3671411	0					
ANR	3671533	IdentifierDeclType	const int		3671411	0					
ANR	3671534	Identifier	z2		3671411	1					
ANR	3671535	AssignmentExpression	z2 = 7 * block [ 1 + 4 * i ] - 17 * block [ 3 + 4 * i ]		3671411	2		=			
ANR	3671536	Identifier	z2		3671411	0					
ANR	3671537	AdditiveExpression	7 * block [ 1 + 4 * i ] - 17 * block [ 3 + 4 * i ]		3671411	1		-			
ANR	3671538	MultiplicativeExpression	7 * block [ 1 + 4 * i ]		3671411	0		*			
ANR	3671539	PrimaryExpression	7		3671411	0					
ANR	3671540	ArrayIndexing	block [ 1 + 4 * i ]		3671411	1					
ANR	3671541	Identifier	block		3671411	0					
ANR	3671542	AdditiveExpression	1 + 4 * i		3671411	1		+			
ANR	3671543	PrimaryExpression	1		3671411	0					
ANR	3671544	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671545	PrimaryExpression	4		3671411	0					
ANR	3671546	Identifier	i		3671411	1					
ANR	3671547	MultiplicativeExpression	17 * block [ 3 + 4 * i ]		3671411	1		*			
ANR	3671548	PrimaryExpression	17		3671411	0					
ANR	3671549	ArrayIndexing	block [ 3 + 4 * i ]		3671411	1					
ANR	3671550	Identifier	block		3671411	0					
ANR	3671551	AdditiveExpression	3 + 4 * i		3671411	1		+			
ANR	3671552	PrimaryExpression	3		3671411	0					
ANR	3671553	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671554	PrimaryExpression	4		3671411	0					
ANR	3671555	Identifier	i		3671411	1					
ANR	3671556	IdentifierDeclStatement	const int z3 = 17 * block [ 1 + 4 * i ] + 7 * block [ 3 + 4 * i ] ;	33:8:581:634	3671411	3	True				
ANR	3671557	IdentifierDecl	z3 = 17 * block [ 1 + 4 * i ] + 7 * block [ 3 + 4 * i ]		3671411	0					
ANR	3671558	IdentifierDeclType	const int		3671411	0					
ANR	3671559	Identifier	z3		3671411	1					
ANR	3671560	AssignmentExpression	z3 = 17 * block [ 1 + 4 * i ] + 7 * block [ 3 + 4 * i ]		3671411	2		=			
ANR	3671561	Identifier	z3		3671411	0					
ANR	3671562	AdditiveExpression	17 * block [ 1 + 4 * i ] + 7 * block [ 3 + 4 * i ]		3671411	1		+			
ANR	3671563	MultiplicativeExpression	17 * block [ 1 + 4 * i ]		3671411	0		*			
ANR	3671564	PrimaryExpression	17		3671411	0					
ANR	3671565	ArrayIndexing	block [ 1 + 4 * i ]		3671411	1					
ANR	3671566	Identifier	block		3671411	0					
ANR	3671567	AdditiveExpression	1 + 4 * i		3671411	1		+			
ANR	3671568	PrimaryExpression	1		3671411	0					
ANR	3671569	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671570	PrimaryExpression	4		3671411	0					
ANR	3671571	Identifier	i		3671411	1					
ANR	3671572	MultiplicativeExpression	7 * block [ 3 + 4 * i ]		3671411	1		*			
ANR	3671573	PrimaryExpression	7		3671411	0					
ANR	3671574	ArrayIndexing	block [ 3 + 4 * i ]		3671411	1					
ANR	3671575	Identifier	block		3671411	0					
ANR	3671576	AdditiveExpression	3 + 4 * i		3671411	1		+			
ANR	3671577	PrimaryExpression	3		3671411	0					
ANR	3671578	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671579	PrimaryExpression	4		3671411	0					
ANR	3671580	Identifier	i		3671411	1					
ANR	3671581	ExpressionStatement	block [ 0 + 4 * i ] = z0 + z3	37:8:647:671	3671411	4	True				
ANR	3671582	AssignmentExpression	block [ 0 + 4 * i ] = z0 + z3		3671411	0		=			
ANR	3671583	ArrayIndexing	block [ 0 + 4 * i ]		3671411	0					
ANR	3671584	Identifier	block		3671411	0					
ANR	3671585	AdditiveExpression	0 + 4 * i		3671411	1		+			
ANR	3671586	PrimaryExpression	0		3671411	0					
ANR	3671587	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671588	PrimaryExpression	4		3671411	0					
ANR	3671589	Identifier	i		3671411	1					
ANR	3671590	AdditiveExpression	z0 + z3		3671411	1		+			
ANR	3671591	Identifier	z0		3671411	0					
ANR	3671592	Identifier	z3		3671411	1					
ANR	3671593	ExpressionStatement	block [ 1 + 4 * i ] = z1 + z2	39:8:682:706	3671411	5	True				
ANR	3671594	AssignmentExpression	block [ 1 + 4 * i ] = z1 + z2		3671411	0		=			
ANR	3671595	ArrayIndexing	block [ 1 + 4 * i ]		3671411	0					
ANR	3671596	Identifier	block		3671411	0					
ANR	3671597	AdditiveExpression	1 + 4 * i		3671411	1		+			
ANR	3671598	PrimaryExpression	1		3671411	0					
ANR	3671599	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671600	PrimaryExpression	4		3671411	0					
ANR	3671601	Identifier	i		3671411	1					
ANR	3671602	AdditiveExpression	z1 + z2		3671411	1		+			
ANR	3671603	Identifier	z1		3671411	0					
ANR	3671604	Identifier	z2		3671411	1					
ANR	3671605	ExpressionStatement	block [ 2 + 4 * i ] = z1 - z2	41:8:717:741	3671411	6	True				
ANR	3671606	AssignmentExpression	block [ 2 + 4 * i ] = z1 - z2		3671411	0		=			
ANR	3671607	ArrayIndexing	block [ 2 + 4 * i ]		3671411	0					
ANR	3671608	Identifier	block		3671411	0					
ANR	3671609	AdditiveExpression	2 + 4 * i		3671411	1		+			
ANR	3671610	PrimaryExpression	2		3671411	0					
ANR	3671611	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671612	PrimaryExpression	4		3671411	0					
ANR	3671613	Identifier	i		3671411	1					
ANR	3671614	AdditiveExpression	z1 - z2		3671411	1		-			
ANR	3671615	Identifier	z1		3671411	0					
ANR	3671616	Identifier	z2		3671411	1					
ANR	3671617	ExpressionStatement	block [ 3 + 4 * i ] = z0 - z3	43:8:752:776	3671411	7	True				
ANR	3671618	AssignmentExpression	block [ 3 + 4 * i ] = z0 - z3		3671411	0		=			
ANR	3671619	ArrayIndexing	block [ 3 + 4 * i ]		3671411	0					
ANR	3671620	Identifier	block		3671411	0					
ANR	3671621	AdditiveExpression	3 + 4 * i		3671411	1		+			
ANR	3671622	PrimaryExpression	3		3671411	0					
ANR	3671623	MultiplicativeExpression	4 * i		3671411	1		*			
ANR	3671624	PrimaryExpression	4		3671411	0					
ANR	3671625	Identifier	i		3671411	1					
ANR	3671626	AdditiveExpression	z0 - z3		3671411	1		-			
ANR	3671627	Identifier	z0		3671411	0					
ANR	3671628	Identifier	z3		3671411	1					
ANR	3671629	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3671411	5					
ANR	3671630	ForInit	i = 0 ;	49:9:797:802	3671411	0	True				
ANR	3671631	AssignmentExpression	i = 0		3671411	0		=			
ANR	3671632	Identifier	i		3671411	0					
ANR	3671633	PrimaryExpression	0		3671411	1					
ANR	3671634	Condition	i < 4	49:16:804:808	3671411	1	True				
ANR	3671635	RelationalExpression	i < 4		3671411	0		<			
ANR	3671636	Identifier	i		3671411	0					
ANR	3671637	PrimaryExpression	4		3671411	1					
ANR	3671638	PostIncDecOperationExpression	i ++	49:23:811:813	3671411	2	True				
ANR	3671639	Identifier	i		3671411	0					
ANR	3671640	IncDec	++		3671411	1					
ANR	3671641	CompoundStatement		55:8:972:1001	3671411	3					
ANR	3671642	IdentifierDeclStatement	const int z0 = 13 * ( block [ i + 4 * 0 ] + block [ i + 4 * 2 ] ) ;	51:8:827:881	3671411	0	True				
ANR	3671643	IdentifierDecl	z0 = 13 * ( block [ i + 4 * 0 ] + block [ i + 4 * 2 ] )		3671411	0					
ANR	3671644	IdentifierDeclType	const int		3671411	0					
ANR	3671645	Identifier	z0		3671411	1					
ANR	3671646	AssignmentExpression	z0 = 13 * ( block [ i + 4 * 0 ] + block [ i + 4 * 2 ] )		3671411	2		=			
ANR	3671647	Identifier	z0		3671411	0					
ANR	3671648	MultiplicativeExpression	13 * ( block [ i + 4 * 0 ] + block [ i + 4 * 2 ] )		3671411	1		*			
ANR	3671649	PrimaryExpression	13		3671411	0					
ANR	3671650	AdditiveExpression	block [ i + 4 * 0 ] + block [ i + 4 * 2 ]		3671411	1		+			
ANR	3671651	ArrayIndexing	block [ i + 4 * 0 ]		3671411	0					
ANR	3671652	Identifier	block		3671411	0					
ANR	3671653	AdditiveExpression	i + 4 * 0		3671411	1		+			
ANR	3671654	Identifier	i		3671411	0					
ANR	3671655	MultiplicativeExpression	4 * 0		3671411	1		*			
ANR	3671656	PrimaryExpression	4		3671411	0					
ANR	3671657	PrimaryExpression	0		3671411	1					
ANR	3671658	ArrayIndexing	block [ i + 4 * 2 ]		3671411	1					
ANR	3671659	Identifier	block		3671411	0					
ANR	3671660	AdditiveExpression	i + 4 * 2		3671411	1		+			
ANR	3671661	Identifier	i		3671411	0					
ANR	3671662	MultiplicativeExpression	4 * 2		3671411	1		*			
ANR	3671663	PrimaryExpression	4		3671411	0					
ANR	3671664	PrimaryExpression	2		3671411	1					
ANR	3671665	IdentifierDeclStatement	const int z1 = 13 * ( block [ i + 4 * 0 ] - block [ i + 4 * 2 ] ) ;	53:8:892:946	3671411	1	True				
ANR	3671666	IdentifierDecl	z1 = 13 * ( block [ i + 4 * 0 ] - block [ i + 4 * 2 ] )		3671411	0					
ANR	3671667	IdentifierDeclType	const int		3671411	0					
ANR	3671668	Identifier	z1		3671411	1					
ANR	3671669	AssignmentExpression	z1 = 13 * ( block [ i + 4 * 0 ] - block [ i + 4 * 2 ] )		3671411	2		=			
ANR	3671670	Identifier	z1		3671411	0					
ANR	3671671	MultiplicativeExpression	13 * ( block [ i + 4 * 0 ] - block [ i + 4 * 2 ] )		3671411	1		*			
ANR	3671672	PrimaryExpression	13		3671411	0					
ANR	3671673	AdditiveExpression	block [ i + 4 * 0 ] - block [ i + 4 * 2 ]		3671411	1		-			
ANR	3671674	ArrayIndexing	block [ i + 4 * 0 ]		3671411	0					
ANR	3671675	Identifier	block		3671411	0					
ANR	3671676	AdditiveExpression	i + 4 * 0		3671411	1		+			
ANR	3671677	Identifier	i		3671411	0					
ANR	3671678	MultiplicativeExpression	4 * 0		3671411	1		*			
ANR	3671679	PrimaryExpression	4		3671411	0					
ANR	3671680	PrimaryExpression	0		3671411	1					
ANR	3671681	ArrayIndexing	block [ i + 4 * 2 ]		3671411	1					
ANR	3671682	Identifier	block		3671411	0					
ANR	3671683	AdditiveExpression	i + 4 * 2		3671411	1		+			
ANR	3671684	Identifier	i		3671411	0					
ANR	3671685	MultiplicativeExpression	4 * 2		3671411	1		*			
ANR	3671686	PrimaryExpression	4		3671411	0					
ANR	3671687	PrimaryExpression	2		3671411	1					
ANR	3671688	IdentifierDeclStatement	const int z2 = 7 * block [ i + 4 * 1 ] - 17 * block [ i + 4 * 3 ] ;	55:8:957:1010	3671411	2	True				
ANR	3671689	IdentifierDecl	z2 = 7 * block [ i + 4 * 1 ] - 17 * block [ i + 4 * 3 ]		3671411	0					
ANR	3671690	IdentifierDeclType	const int		3671411	0					
ANR	3671691	Identifier	z2		3671411	1					
ANR	3671692	AssignmentExpression	z2 = 7 * block [ i + 4 * 1 ] - 17 * block [ i + 4 * 3 ]		3671411	2		=			
ANR	3671693	Identifier	z2		3671411	0					
ANR	3671694	AdditiveExpression	7 * block [ i + 4 * 1 ] - 17 * block [ i + 4 * 3 ]		3671411	1		-			
ANR	3671695	MultiplicativeExpression	7 * block [ i + 4 * 1 ]		3671411	0		*			
ANR	3671696	PrimaryExpression	7		3671411	0					
ANR	3671697	ArrayIndexing	block [ i + 4 * 1 ]		3671411	1					
ANR	3671698	Identifier	block		3671411	0					
ANR	3671699	AdditiveExpression	i + 4 * 1		3671411	1		+			
ANR	3671700	Identifier	i		3671411	0					
ANR	3671701	MultiplicativeExpression	4 * 1		3671411	1		*			
ANR	3671702	PrimaryExpression	4		3671411	0					
ANR	3671703	PrimaryExpression	1		3671411	1					
ANR	3671704	MultiplicativeExpression	17 * block [ i + 4 * 3 ]		3671411	1		*			
ANR	3671705	PrimaryExpression	17		3671411	0					
ANR	3671706	ArrayIndexing	block [ i + 4 * 3 ]		3671411	1					
ANR	3671707	Identifier	block		3671411	0					
ANR	3671708	AdditiveExpression	i + 4 * 3		3671411	1		+			
ANR	3671709	Identifier	i		3671411	0					
ANR	3671710	MultiplicativeExpression	4 * 3		3671411	1		*			
ANR	3671711	PrimaryExpression	4		3671411	0					
ANR	3671712	PrimaryExpression	3		3671411	1					
ANR	3671713	IdentifierDeclStatement	const int z3 = 17 * block [ i + 4 * 1 ] + 7 * block [ i + 4 * 3 ] ;	57:8:1021:1074	3671411	3	True				
ANR	3671714	IdentifierDecl	z3 = 17 * block [ i + 4 * 1 ] + 7 * block [ i + 4 * 3 ]		3671411	0					
ANR	3671715	IdentifierDeclType	const int		3671411	0					
ANR	3671716	Identifier	z3		3671411	1					
ANR	3671717	AssignmentExpression	z3 = 17 * block [ i + 4 * 1 ] + 7 * block [ i + 4 * 3 ]		3671411	2		=			
ANR	3671718	Identifier	z3		3671411	0					
ANR	3671719	AdditiveExpression	17 * block [ i + 4 * 1 ] + 7 * block [ i + 4 * 3 ]		3671411	1		+			
ANR	3671720	MultiplicativeExpression	17 * block [ i + 4 * 1 ]		3671411	0		*			
ANR	3671721	PrimaryExpression	17		3671411	0					
ANR	3671722	ArrayIndexing	block [ i + 4 * 1 ]		3671411	1					
ANR	3671723	Identifier	block		3671411	0					
ANR	3671724	AdditiveExpression	i + 4 * 1		3671411	1		+			
ANR	3671725	Identifier	i		3671411	0					
ANR	3671726	MultiplicativeExpression	4 * 1		3671411	1		*			
ANR	3671727	PrimaryExpression	4		3671411	0					
ANR	3671728	PrimaryExpression	1		3671411	1					
ANR	3671729	MultiplicativeExpression	7 * block [ i + 4 * 3 ]		3671411	1		*			
ANR	3671730	PrimaryExpression	7		3671411	0					
ANR	3671731	ArrayIndexing	block [ i + 4 * 3 ]		3671411	1					
ANR	3671732	Identifier	block		3671411	0					
ANR	3671733	AdditiveExpression	i + 4 * 3		3671411	1		+			
ANR	3671734	Identifier	i		3671411	0					
ANR	3671735	MultiplicativeExpression	4 * 3		3671411	1		*			
ANR	3671736	PrimaryExpression	4		3671411	0					
ANR	3671737	PrimaryExpression	3		3671411	1					
ANR	3671738	IdentifierDeclStatement	const int rr = ( dc + 0x80000 ) ;	59:8:1085:1114	3671411	4	True				
ANR	3671739	IdentifierDecl	rr = ( dc + 0x80000 )		3671411	0					
ANR	3671740	IdentifierDeclType	const int		3671411	0					
ANR	3671741	Identifier	rr		3671411	1					
ANR	3671742	AssignmentExpression	rr = ( dc + 0x80000 )		3671411	2		=			
ANR	3671743	Identifier	rr		3671411	0					
ANR	3671744	AdditiveExpression	dc + 0x80000		3671411	1		+			
ANR	3671745	Identifier	dc		3671411	0					
ANR	3671746	PrimaryExpression	0x80000		3671411	1					
ANR	3671747	ExpressionStatement	dst [ i + stride * 0 ] = cm [ dst [ i + stride * 0 ] + ( ( ( z0 + z3 ) * qmul + rr ) >> 20 ) ]	63:8:1127:1202	3671411	5	True				
ANR	3671748	AssignmentExpression	dst [ i + stride * 0 ] = cm [ dst [ i + stride * 0 ] + ( ( ( z0 + z3 ) * qmul + rr ) >> 20 ) ]		3671411	0		=			
ANR	3671749	ArrayIndexing	dst [ i + stride * 0 ]		3671411	0					
ANR	3671750	Identifier	dst		3671411	0					
ANR	3671751	AdditiveExpression	i + stride * 0		3671411	1		+			
ANR	3671752	Identifier	i		3671411	0					
ANR	3671753	MultiplicativeExpression	stride * 0		3671411	1		*			
ANR	3671754	Identifier	stride		3671411	0					
ANR	3671755	PrimaryExpression	0		3671411	1					
ANR	3671756	ArrayIndexing	cm [ dst [ i + stride * 0 ] + ( ( ( z0 + z3 ) * qmul + rr ) >> 20 ) ]		3671411	1					
ANR	3671757	Identifier	cm		3671411	0					
ANR	3671758	AdditiveExpression	dst [ i + stride * 0 ] + ( ( ( z0 + z3 ) * qmul + rr ) >> 20 )		3671411	1		+			
ANR	3671759	ArrayIndexing	dst [ i + stride * 0 ]		3671411	0					
ANR	3671760	Identifier	dst		3671411	0					
ANR	3671761	AdditiveExpression	i + stride * 0		3671411	1		+			
ANR	3671762	Identifier	i		3671411	0					
ANR	3671763	MultiplicativeExpression	stride * 0		3671411	1		*			
ANR	3671764	Identifier	stride		3671411	0					
ANR	3671765	PrimaryExpression	0		3671411	1					
ANR	3671766	ShiftExpression	( ( z0 + z3 ) * qmul + rr ) >> 20		3671411	1		>>			
ANR	3671767	AdditiveExpression	( z0 + z3 ) * qmul + rr		3671411	0		+			
ANR	3671768	MultiplicativeExpression	( z0 + z3 ) * qmul		3671411	0		*			
ANR	3671769	AdditiveExpression	z0 + z3		3671411	0		+			
ANR	3671770	Identifier	z0		3671411	0					
ANR	3671771	Identifier	z3		3671411	1					
ANR	3671772	Identifier	qmul		3671411	1					
ANR	3671773	Identifier	rr		3671411	1					
ANR	3671774	PrimaryExpression	20		3671411	1					
ANR	3671775	ExpressionStatement	dst [ i + stride * 1 ] = cm [ dst [ i + stride * 1 ] + ( ( ( z1 + z2 ) * qmul + rr ) >> 20 ) ]	65:8:1213:1288	3671411	6	True				
ANR	3671776	AssignmentExpression	dst [ i + stride * 1 ] = cm [ dst [ i + stride * 1 ] + ( ( ( z1 + z2 ) * qmul + rr ) >> 20 ) ]		3671411	0		=			
ANR	3671777	ArrayIndexing	dst [ i + stride * 1 ]		3671411	0					
ANR	3671778	Identifier	dst		3671411	0					
ANR	3671779	AdditiveExpression	i + stride * 1		3671411	1		+			
ANR	3671780	Identifier	i		3671411	0					
ANR	3671781	MultiplicativeExpression	stride * 1		3671411	1		*			
ANR	3671782	Identifier	stride		3671411	0					
ANR	3671783	PrimaryExpression	1		3671411	1					
ANR	3671784	ArrayIndexing	cm [ dst [ i + stride * 1 ] + ( ( ( z1 + z2 ) * qmul + rr ) >> 20 ) ]		3671411	1					
ANR	3671785	Identifier	cm		3671411	0					
ANR	3671786	AdditiveExpression	dst [ i + stride * 1 ] + ( ( ( z1 + z2 ) * qmul + rr ) >> 20 )		3671411	1		+			
ANR	3671787	ArrayIndexing	dst [ i + stride * 1 ]		3671411	0					
ANR	3671788	Identifier	dst		3671411	0					
ANR	3671789	AdditiveExpression	i + stride * 1		3671411	1		+			
ANR	3671790	Identifier	i		3671411	0					
ANR	3671791	MultiplicativeExpression	stride * 1		3671411	1		*			
ANR	3671792	Identifier	stride		3671411	0					
ANR	3671793	PrimaryExpression	1		3671411	1					
ANR	3671794	ShiftExpression	( ( z1 + z2 ) * qmul + rr ) >> 20		3671411	1		>>			
ANR	3671795	AdditiveExpression	( z1 + z2 ) * qmul + rr		3671411	0		+			
ANR	3671796	MultiplicativeExpression	( z1 + z2 ) * qmul		3671411	0		*			
ANR	3671797	AdditiveExpression	z1 + z2		3671411	0		+			
ANR	3671798	Identifier	z1		3671411	0					
ANR	3671799	Identifier	z2		3671411	1					
ANR	3671800	Identifier	qmul		3671411	1					
ANR	3671801	Identifier	rr		3671411	1					
ANR	3671802	PrimaryExpression	20		3671411	1					
ANR	3671803	ExpressionStatement	dst [ i + stride * 2 ] = cm [ dst [ i + stride * 2 ] + ( ( ( z1 - z2 ) * qmul + rr ) >> 20 ) ]	67:8:1299:1374	3671411	7	True				
ANR	3671804	AssignmentExpression	dst [ i + stride * 2 ] = cm [ dst [ i + stride * 2 ] + ( ( ( z1 - z2 ) * qmul + rr ) >> 20 ) ]		3671411	0		=			
ANR	3671805	ArrayIndexing	dst [ i + stride * 2 ]		3671411	0					
ANR	3671806	Identifier	dst		3671411	0					
ANR	3671807	AdditiveExpression	i + stride * 2		3671411	1		+			
ANR	3671808	Identifier	i		3671411	0					
ANR	3671809	MultiplicativeExpression	stride * 2		3671411	1		*			
ANR	3671810	Identifier	stride		3671411	0					
ANR	3671811	PrimaryExpression	2		3671411	1					
ANR	3671812	ArrayIndexing	cm [ dst [ i + stride * 2 ] + ( ( ( z1 - z2 ) * qmul + rr ) >> 20 ) ]		3671411	1					
ANR	3671813	Identifier	cm		3671411	0					
ANR	3671814	AdditiveExpression	dst [ i + stride * 2 ] + ( ( ( z1 - z2 ) * qmul + rr ) >> 20 )		3671411	1		+			
ANR	3671815	ArrayIndexing	dst [ i + stride * 2 ]		3671411	0					
ANR	3671816	Identifier	dst		3671411	0					
ANR	3671817	AdditiveExpression	i + stride * 2		3671411	1		+			
ANR	3671818	Identifier	i		3671411	0					
ANR	3671819	MultiplicativeExpression	stride * 2		3671411	1		*			
ANR	3671820	Identifier	stride		3671411	0					
ANR	3671821	PrimaryExpression	2		3671411	1					
ANR	3671822	ShiftExpression	( ( z1 - z2 ) * qmul + rr ) >> 20		3671411	1		>>			
ANR	3671823	AdditiveExpression	( z1 - z2 ) * qmul + rr		3671411	0		+			
ANR	3671824	MultiplicativeExpression	( z1 - z2 ) * qmul		3671411	0		*			
ANR	3671825	AdditiveExpression	z1 - z2		3671411	0		-			
ANR	3671826	Identifier	z1		3671411	0					
ANR	3671827	Identifier	z2		3671411	1					
ANR	3671828	Identifier	qmul		3671411	1					
ANR	3671829	Identifier	rr		3671411	1					
ANR	3671830	PrimaryExpression	20		3671411	1					
ANR	3671831	ExpressionStatement	dst [ i + stride * 3 ] = cm [ dst [ i + stride * 3 ] + ( ( ( z0 - z3 ) * qmul + rr ) >> 20 ) ]	69:8:1385:1460	3671411	8	True				
ANR	3671832	AssignmentExpression	dst [ i + stride * 3 ] = cm [ dst [ i + stride * 3 ] + ( ( ( z0 - z3 ) * qmul + rr ) >> 20 ) ]		3671411	0		=			
ANR	3671833	ArrayIndexing	dst [ i + stride * 3 ]		3671411	0					
ANR	3671834	Identifier	dst		3671411	0					
ANR	3671835	AdditiveExpression	i + stride * 3		3671411	1		+			
ANR	3671836	Identifier	i		3671411	0					
ANR	3671837	MultiplicativeExpression	stride * 3		3671411	1		*			
ANR	3671838	Identifier	stride		3671411	0					
ANR	3671839	PrimaryExpression	3		3671411	1					
ANR	3671840	ArrayIndexing	cm [ dst [ i + stride * 3 ] + ( ( ( z0 - z3 ) * qmul + rr ) >> 20 ) ]		3671411	1					
ANR	3671841	Identifier	cm		3671411	0					
ANR	3671842	AdditiveExpression	dst [ i + stride * 3 ] + ( ( ( z0 - z3 ) * qmul + rr ) >> 20 )		3671411	1		+			
ANR	3671843	ArrayIndexing	dst [ i + stride * 3 ]		3671411	0					
ANR	3671844	Identifier	dst		3671411	0					
ANR	3671845	AdditiveExpression	i + stride * 3		3671411	1		+			
ANR	3671846	Identifier	i		3671411	0					
ANR	3671847	MultiplicativeExpression	stride * 3		3671411	1		*			
ANR	3671848	Identifier	stride		3671411	0					
ANR	3671849	PrimaryExpression	3		3671411	1					
ANR	3671850	ShiftExpression	( ( z0 - z3 ) * qmul + rr ) >> 20		3671411	1		>>			
ANR	3671851	AdditiveExpression	( z0 - z3 ) * qmul + rr		3671411	0		+			
ANR	3671852	MultiplicativeExpression	( z0 - z3 ) * qmul		3671411	0		*			
ANR	3671853	AdditiveExpression	z0 - z3		3671411	0		-			
ANR	3671854	Identifier	z0		3671411	0					
ANR	3671855	Identifier	z3		3671411	1					
ANR	3671856	Identifier	qmul		3671411	1					
ANR	3671857	Identifier	rr		3671411	1					
ANR	3671858	PrimaryExpression	20		3671411	1					
ANR	3671859	ReturnType	void		3671411	1					
ANR	3671860	Identifier	ff_svq3_add_idct_c		3671411	2					
ANR	3671861	ParameterList	"uint8_t * dst , DCTELEM * block , int stride , int qp , int dc"		3671411	3					
ANR	3671862	Parameter	uint8_t * dst	1:24:24:35	3671411	0	True				
ANR	3671863	ParameterType	uint8_t *		3671411	0					
ANR	3671864	Identifier	dst		3671411	1					
ANR	3671865	Parameter	DCTELEM * block	1:38:38:51	3671411	1	True				
ANR	3671866	ParameterType	DCTELEM *		3671411	0					
ANR	3671867	Identifier	block		3671411	1					
ANR	3671868	Parameter	int stride	1:54:54:63	3671411	2	True				
ANR	3671869	ParameterType	int		3671411	0					
ANR	3671870	Identifier	stride		3671411	1					
ANR	3671871	Parameter	int qp	1:66:66:71	3671411	3	True				
ANR	3671872	ParameterType	int		3671411	0					
ANR	3671873	Identifier	qp		3671411	1					
ANR	3671874	Parameter	int dc	3:28:103:108	3671411	4	True				
ANR	3671875	ParameterType	int		3671411	0					
ANR	3671876	Identifier	dc		3671411	1					
ANR	3671877	CFGEntryNode	ENTRY		3671411		True				
ANR	3671878	CFGExitNode	EXIT		3671411		True				
ANR	3671879	Symbol	rr		3671411						
ANR	3671880	Symbol	* stride		3671411						
ANR	3671881	Symbol	dst		3671411						
ANR	3671882	Symbol	* qp		3671411						
ANR	3671883	Symbol	qmul		3671411						
ANR	3671884	Symbol	MAX_NEG_CROP		3671411						
ANR	3671885	Symbol	* qmul		3671411						
ANR	3671886	Symbol	stride		3671411						
ANR	3671887	Symbol	* dst		3671411						
ANR	3671888	Symbol	* * dst		3671411						
ANR	3671889	Symbol	block		3671411						
ANR	3671890	Symbol	qp		3671411						
ANR	3671891	Symbol	* * i		3671411						
ANR	3671892	Symbol	* rr		3671411						
ANR	3671893	Symbol	i		3671411						
ANR	3671894	Symbol	cm		3671411						
ANR	3671895	Symbol	svq3_dequant_coeff		3671411						
ANR	3671896	Symbol	* * stride		3671411						
ANR	3671897	Symbol	* block		3671411						
ANR	3671898	Symbol	* i		3671411						
ANR	3671899	Symbol	* cm		3671411						
ANR	3671900	Symbol	z0		3671411						
ANR	3671901	Symbol	ff_cropTbl		3671411						
ANR	3671902	Symbol	z1		3671411						
ANR	3671903	Symbol	z2		3671411						
ANR	3671904	Symbol	z3		3671411						
ANR	3671905	Symbol	* svq3_dequant_coeff		3671411						
ANR	3671906	Symbol	* z3		3671411						
ANR	3671907	Symbol	* z2		3671411						
ANR	3671908	Symbol	* z1		3671411						
ANR	3671909	Symbol	dc		3671411						
ANR	3671910	Symbol	* z0		3671411						
