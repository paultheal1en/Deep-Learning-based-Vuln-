command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	828488	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_open2_0.c								
ANR	828489	Function	avcodec_open2	1:0:0:14835							
ANR	828490	FunctionDef	"avcodec_open2 (AVCodecContext * avctx , const AVCodec * codec , AVDictionary * * options)"		828489	0					
ANR	828491	CompoundStatement		3:0:108:14835	828489	0					
ANR	828492	IdentifierDeclStatement	int ret = 0 ;	5:4:115:126	828489	0	True				
ANR	828493	IdentifierDecl	ret = 0		828489	0					
ANR	828494	IdentifierDeclType	int		828489	0					
ANR	828495	Identifier	ret		828489	1					
ANR	828496	AssignmentExpression	ret = 0		828489	2		=			
ANR	828497	Identifier	ret		828489	0					
ANR	828498	PrimaryExpression	0		828489	1					
ANR	828499	IdentifierDeclStatement	AVDictionary * tmp = NULL ;	7:4:133:157	828489	1	True				
ANR	828500	IdentifierDecl	* tmp = NULL		828489	0					
ANR	828501	IdentifierDeclType	AVDictionary *		828489	0					
ANR	828502	Identifier	tmp		828489	1					
ANR	828503	AssignmentExpression	* tmp = NULL		828489	2		=			
ANR	828504	Identifier	NULL		828489	0					
ANR	828505	Identifier	NULL		828489	1					
ANR	828506	IfStatement	if ( avcodec_is_open ( avctx ) )		828489	2					
ANR	828507	Condition	avcodec_is_open ( avctx )	11:8:170:191	828489	0	True				
ANR	828508	CallExpression	avcodec_is_open ( avctx )		828489	0					
ANR	828509	Callee	avcodec_is_open		828489	0					
ANR	828510	Identifier	avcodec_is_open		828489	0					
ANR	828511	ArgumentList	avctx		828489	1					
ANR	828512	Argument	avctx		828489	0					
ANR	828513	Identifier	avctx		828489	0					
ANR	828514	ReturnStatement	return 0 ;	13:8:203:211	828489	1	True				
ANR	828515	PrimaryExpression	0		828489	0					
ANR	828516	IfStatement	if ( ( ! codec && ! avctx -> codec ) )		828489	3					
ANR	828517	Condition	! codec && ! avctx -> codec	17:8:224:248	828489	0	True				
ANR	828518	AndExpression	! codec && ! avctx -> codec		828489	0		&&			
ANR	828519	UnaryOperationExpression	! codec		828489	0					
ANR	828520	UnaryOperator	!		828489	0					
ANR	828521	Identifier	codec		828489	1					
ANR	828522	UnaryOperationExpression	! avctx -> codec		828489	1					
ANR	828523	UnaryOperator	!		828489	0					
ANR	828524	PtrMemberAccess	avctx -> codec		828489	1					
ANR	828525	Identifier	avctx		828489	0					
ANR	828526	Identifier	codec		828489	1					
ANR	828527	CompoundStatement		15:35:142:142	828489	1					
ANR	828528	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""No codec provided to avcodec_open2()\\n"" )"	19:8:262:331	828489	0	True				
ANR	828529	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""No codec provided to avcodec_open2()\\n"" )"		828489	0					
ANR	828530	Callee	av_log		828489	0					
ANR	828531	Identifier	av_log		828489	0					
ANR	828532	ArgumentList	avctx		828489	1					
ANR	828533	Argument	avctx		828489	0					
ANR	828534	Identifier	avctx		828489	0					
ANR	828535	Argument	AV_LOG_ERROR		828489	1					
ANR	828536	Identifier	AV_LOG_ERROR		828489	0					
ANR	828537	Argument	"""No codec provided to avcodec_open2()\\n"""		828489	2					
ANR	828538	PrimaryExpression	"""No codec provided to avcodec_open2()\\n"""		828489	0					
ANR	828539	ReturnStatement	return AVERROR ( EINVAL ) ;	21:8:342:364	828489	1	True				
ANR	828540	CallExpression	AVERROR ( EINVAL )		828489	0					
ANR	828541	Callee	AVERROR		828489	0					
ANR	828542	Identifier	AVERROR		828489	0					
ANR	828543	ArgumentList	EINVAL		828489	1					
ANR	828544	Argument	EINVAL		828489	0					
ANR	828545	Identifier	EINVAL		828489	0					
ANR	828546	IfStatement	if ( ( codec && avctx -> codec && codec != avctx -> codec ) )		828489	4					
ANR	828547	Condition	codec && avctx -> codec && codec != avctx -> codec	25:8:382:429	828489	0	True				
ANR	828548	AndExpression	codec && avctx -> codec && codec != avctx -> codec		828489	0		&&			
ANR	828549	Identifier	codec		828489	0					
ANR	828550	AndExpression	avctx -> codec && codec != avctx -> codec		828489	1		&&			
ANR	828551	PtrMemberAccess	avctx -> codec		828489	0					
ANR	828552	Identifier	avctx		828489	0					
ANR	828553	Identifier	codec		828489	1					
ANR	828554	EqualityExpression	codec != avctx -> codec		828489	1		!=			
ANR	828555	Identifier	codec		828489	0					
ANR	828556	PtrMemberAccess	avctx -> codec		828489	1					
ANR	828557	Identifier	avctx		828489	0					
ANR	828558	Identifier	codec		828489	1					
ANR	828559	CompoundStatement		23:58:323:323	828489	1					
ANR	828560	Statement	av_log	27:8:443:448	828489	0	True				
ANR	828561	Statement	(	27:14:449:449	828489	1	True				
ANR	828562	Statement	avctx	27:15:450:454	828489	2	True				
ANR	828563	Statement	","	27:20:455:455	828489	3	True				
ANR	828564	Statement	AV_LOG_ERROR	27:22:457:468	828489	4	True				
ANR	828565	Statement	","	27:34:469:469	828489	5	True				
ANR	828566	Statement	"""This AVCodecContext was allocated for %s, """	27:36:471:514	828489	6	True				
ANR	828567	Statement	"""but %s passed to avcodec_open2()\\n"""	29:36:553:588	828489	7	True				
ANR	828568	Statement	","	29:72:589:589	828489	8	True				
ANR	828569	Statement	avctx	29:74:591:595	828489	9	True				
ANR	828570	Statement	->	29:79:596:597	828489	10	True				
ANR	828571	Statement	codec	29:81:598:602	828489	11	True				
ANR	828572	Statement	->	29:86:603:604	828489	12	True				
ANR	828573	Statement	name	29:88:605:608	828489	13	True				
ANR	828574	Statement	","	29:92:609:609	828489	14	True				
ANR	828575	Statement	codec	29:94:611:615	828489	15	True				
ANR	828576	Statement	->	29:99:616:617	828489	16	True				
ANR	828577	Statement	name	29:101:618:621	828489	17	True				
ANR	828578	Statement	)	29:105:622:622	828489	18	True				
ANR	828579	ExpressionStatement		29:106:623:623	828489	19	True				
ANR	828580	ReturnStatement	return AVERROR ( EINVAL ) ;	31:8:634:656	828489	20	True				
ANR	828581	CallExpression	AVERROR ( EINVAL )		828489	0					
ANR	828582	Callee	AVERROR		828489	0					
ANR	828583	Identifier	AVERROR		828489	0					
ANR	828584	ArgumentList	EINVAL		828489	1					
ANR	828585	Argument	EINVAL		828489	0					
ANR	828586	Identifier	EINVAL		828489	0					
ANR	828587	IfStatement	if ( ! codec )		828489	5					
ANR	828588	Condition	! codec	35:8:674:679	828489	0	True				
ANR	828589	UnaryOperationExpression	! codec		828489	0					
ANR	828590	UnaryOperator	!		828489	0					
ANR	828591	Identifier	codec		828489	1					
ANR	828592	ExpressionStatement	codec = avctx -> codec	37:8:691:711	828489	1	True				
ANR	828593	AssignmentExpression	codec = avctx -> codec		828489	0		=			
ANR	828594	Identifier	codec		828489	0					
ANR	828595	PtrMemberAccess	avctx -> codec		828489	1					
ANR	828596	Identifier	avctx		828489	0					
ANR	828597	Identifier	codec		828489	1					
ANR	828598	IfStatement	if ( avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE )		828489	6					
ANR	828599	Condition	avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE	41:8:724:798	828489	0	True				
ANR	828600	OrExpression	avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE		828489	0		||			
ANR	828601	RelationalExpression	avctx -> extradata_size < 0		828489	0		<			
ANR	828602	PtrMemberAccess	avctx -> extradata_size		828489	0					
ANR	828603	Identifier	avctx		828489	0					
ANR	828604	Identifier	extradata_size		828489	1					
ANR	828605	PrimaryExpression	0		828489	1					
ANR	828606	RelationalExpression	avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE		828489	1		>=			
ANR	828607	PtrMemberAccess	avctx -> extradata_size		828489	0					
ANR	828608	Identifier	avctx		828489	0					
ANR	828609	Identifier	extradata_size		828489	1					
ANR	828610	Identifier	FF_MAX_EXTRADATA_SIZE		828489	1					
ANR	828611	ReturnStatement	return AVERROR ( EINVAL ) ;	43:8:810:832	828489	1	True				
ANR	828612	CallExpression	AVERROR ( EINVAL )		828489	0					
ANR	828613	Callee	AVERROR		828489	0					
ANR	828614	Identifier	AVERROR		828489	0					
ANR	828615	ArgumentList	EINVAL		828489	1					
ANR	828616	Argument	EINVAL		828489	0					
ANR	828617	Identifier	EINVAL		828489	0					
ANR	828618	IfStatement	if ( options )		828489	7					
ANR	828619	Condition	options	47:8:845:851	828489	0	True				
ANR	828620	Identifier	options		828489	0					
ANR	828621	ExpressionStatement	"av_dict_copy ( & tmp , * options , 0 )"	49:8:863:894	828489	1	True				
ANR	828622	CallExpression	"av_dict_copy ( & tmp , * options , 0 )"		828489	0					
ANR	828623	Callee	av_dict_copy		828489	0					
ANR	828624	Identifier	av_dict_copy		828489	0					
ANR	828625	ArgumentList	& tmp		828489	1					
ANR	828626	Argument	& tmp		828489	0					
ANR	828627	UnaryOperationExpression	& tmp		828489	0					
ANR	828628	UnaryOperator	&		828489	0					
ANR	828629	Identifier	tmp		828489	1					
ANR	828630	Argument	* options		828489	1					
ANR	828631	UnaryOperationExpression	* options		828489	0					
ANR	828632	UnaryOperator	*		828489	0					
ANR	828633	Identifier	options		828489	1					
ANR	828634	Argument	0		828489	2					
ANR	828635	PrimaryExpression	0		828489	0					
ANR	828636	ExpressionStatement	ret = ff_lock_avcodec ( avctx )	53:4:903:931	828489	8	True				
ANR	828637	AssignmentExpression	ret = ff_lock_avcodec ( avctx )		828489	0		=			
ANR	828638	Identifier	ret		828489	0					
ANR	828639	CallExpression	ff_lock_avcodec ( avctx )		828489	1					
ANR	828640	Callee	ff_lock_avcodec		828489	0					
ANR	828641	Identifier	ff_lock_avcodec		828489	0					
ANR	828642	ArgumentList	avctx		828489	1					
ANR	828643	Argument	avctx		828489	0					
ANR	828644	Identifier	avctx		828489	0					
ANR	828645	IfStatement	if ( ret < 0 )		828489	9					
ANR	828646	Condition	ret < 0	55:8:942:948	828489	0	True				
ANR	828647	RelationalExpression	ret < 0		828489	0		<			
ANR	828648	Identifier	ret		828489	0					
ANR	828649	PrimaryExpression	0		828489	1					
ANR	828650	ReturnStatement	return ret ;	57:8:960:970	828489	1	True				
ANR	828651	Identifier	ret		828489	0					
ANR	828652	ExpressionStatement	avctx -> internal = av_mallocz ( sizeof ( AVCodecInternal ) )	61:4:979:1032	828489	10	True				
ANR	828653	AssignmentExpression	avctx -> internal = av_mallocz ( sizeof ( AVCodecInternal ) )		828489	0		=			
ANR	828654	PtrMemberAccess	avctx -> internal		828489	0					
ANR	828655	Identifier	avctx		828489	0					
ANR	828656	Identifier	internal		828489	1					
ANR	828657	CallExpression	av_mallocz ( sizeof ( AVCodecInternal ) )		828489	1					
ANR	828658	Callee	av_mallocz		828489	0					
ANR	828659	Identifier	av_mallocz		828489	0					
ANR	828660	ArgumentList	sizeof ( AVCodecInternal )		828489	1					
ANR	828661	Argument	sizeof ( AVCodecInternal )		828489	0					
ANR	828662	SizeofExpression	sizeof ( AVCodecInternal )		828489	0					
ANR	828663	Sizeof	sizeof		828489	0					
ANR	828664	SizeofOperand	AVCodecInternal		828489	1					
ANR	828665	IfStatement	if ( ! avctx -> internal )		828489	11					
ANR	828666	Condition	! avctx -> internal	63:8:1043:1058	828489	0	True				
ANR	828667	UnaryOperationExpression	! avctx -> internal		828489	0					
ANR	828668	UnaryOperator	!		828489	0					
ANR	828669	PtrMemberAccess	avctx -> internal		828489	1					
ANR	828670	Identifier	avctx		828489	0					
ANR	828671	Identifier	internal		828489	1					
ANR	828672	CompoundStatement		61:26:952:952	828489	1					
ANR	828673	ExpressionStatement	ret = AVERROR ( ENOMEM )	65:8:1072:1093	828489	0	True				
ANR	828674	AssignmentExpression	ret = AVERROR ( ENOMEM )		828489	0		=			
ANR	828675	Identifier	ret		828489	0					
ANR	828676	CallExpression	AVERROR ( ENOMEM )		828489	1					
ANR	828677	Callee	AVERROR		828489	0					
ANR	828678	Identifier	AVERROR		828489	0					
ANR	828679	ArgumentList	ENOMEM		828489	1					
ANR	828680	Argument	ENOMEM		828489	0					
ANR	828681	Identifier	ENOMEM		828489	0					
ANR	828682	GotoStatement	goto end ;	67:8:1104:1112	828489	1	True				
ANR	828683	Identifier	end		828489	0					
ANR	828684	ExpressionStatement	avctx -> internal -> pool = av_mallocz ( sizeof ( * avctx -> internal -> pool ) )	73:4:1128:1194	828489	12	True				
ANR	828685	AssignmentExpression	avctx -> internal -> pool = av_mallocz ( sizeof ( * avctx -> internal -> pool ) )		828489	0		=			
ANR	828686	PtrMemberAccess	avctx -> internal -> pool		828489	0					
ANR	828687	PtrMemberAccess	avctx -> internal		828489	0					
ANR	828688	Identifier	avctx		828489	0					
ANR	828689	Identifier	internal		828489	1					
ANR	828690	Identifier	pool		828489	1					
ANR	828691	CallExpression	av_mallocz ( sizeof ( * avctx -> internal -> pool ) )		828489	1					
ANR	828692	Callee	av_mallocz		828489	0					
ANR	828693	Identifier	av_mallocz		828489	0					
ANR	828694	ArgumentList	sizeof ( * avctx -> internal -> pool )		828489	1					
ANR	828695	Argument	sizeof ( * avctx -> internal -> pool )		828489	0					
ANR	828696	SizeofExpression	sizeof ( * avctx -> internal -> pool )		828489	0					
ANR	828697	Sizeof	sizeof		828489	0					
ANR	828698	UnaryOperationExpression	* avctx -> internal -> pool		828489	1					
ANR	828699	UnaryOperator	*		828489	0					
ANR	828700	PtrMemberAccess	avctx -> internal -> pool		828489	1					
ANR	828701	PtrMemberAccess	avctx -> internal		828489	0					
ANR	828702	Identifier	avctx		828489	0					
ANR	828703	Identifier	internal		828489	1					
ANR	828704	Identifier	pool		828489	1					
ANR	828705	IfStatement	if ( ! avctx -> internal -> pool )		828489	13					
ANR	828706	Condition	! avctx -> internal -> pool	75:8:1205:1226	828489	0	True				
ANR	828707	UnaryOperationExpression	! avctx -> internal -> pool		828489	0					
ANR	828708	UnaryOperator	!		828489	0					
ANR	828709	PtrMemberAccess	avctx -> internal -> pool		828489	1					
ANR	828710	PtrMemberAccess	avctx -> internal		828489	0					
ANR	828711	Identifier	avctx		828489	0					
ANR	828712	Identifier	internal		828489	1					
ANR	828713	Identifier	pool		828489	1					
ANR	828714	CompoundStatement		73:32:1120:1120	828489	1					
ANR	828715	ExpressionStatement	ret = AVERROR ( ENOMEM )	77:8:1240:1261	828489	0	True				
ANR	828716	AssignmentExpression	ret = AVERROR ( ENOMEM )		828489	0		=			
ANR	828717	Identifier	ret		828489	0					
ANR	828718	CallExpression	AVERROR ( ENOMEM )		828489	1					
ANR	828719	Callee	AVERROR		828489	0					
ANR	828720	Identifier	AVERROR		828489	0					
ANR	828721	ArgumentList	ENOMEM		828489	1					
ANR	828722	Argument	ENOMEM		828489	0					
ANR	828723	Identifier	ENOMEM		828489	0					
ANR	828724	GotoStatement	goto free_and_end ;	79:8:1272:1289	828489	1	True				
ANR	828725	Identifier	free_and_end		828489	0					
ANR	828726	IfStatement	if ( codec -> priv_data_size > 0 )		828489	14					
ANR	828727	Condition	codec -> priv_data_size > 0	85:8:1309:1333	828489	0	True				
ANR	828728	RelationalExpression	codec -> priv_data_size > 0		828489	0		>			
ANR	828729	PtrMemberAccess	codec -> priv_data_size		828489	0					
ANR	828730	Identifier	codec		828489	0					
ANR	828731	Identifier	priv_data_size		828489	1					
ANR	828732	PrimaryExpression	0		828489	1					
ANR	828733	CompoundStatement		83:35:1227:1227	828489	1					
ANR	828734	IfStatement	if ( ! avctx -> priv_data )		828489	0					
ANR	828735	Condition	! avctx -> priv_data	87:12:1351:1367	828489	0	True				
ANR	828736	UnaryOperationExpression	! avctx -> priv_data		828489	0					
ANR	828737	UnaryOperator	!		828489	0					
ANR	828738	PtrMemberAccess	avctx -> priv_data		828489	1					
ANR	828739	Identifier	avctx		828489	0					
ANR	828740	Identifier	priv_data		828489	1					
ANR	828741	CompoundStatement		85:31:1261:1261	828489	1					
ANR	828742	ExpressionStatement	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )	89:12:1385:1437	828489	0	True				
ANR	828743	AssignmentExpression	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )		828489	0		=			
ANR	828744	PtrMemberAccess	avctx -> priv_data		828489	0					
ANR	828745	Identifier	avctx		828489	0					
ANR	828746	Identifier	priv_data		828489	1					
ANR	828747	CallExpression	av_mallocz ( codec -> priv_data_size )		828489	1					
ANR	828748	Callee	av_mallocz		828489	0					
ANR	828749	Identifier	av_mallocz		828489	0					
ANR	828750	ArgumentList	codec -> priv_data_size		828489	1					
ANR	828751	Argument	codec -> priv_data_size		828489	0					
ANR	828752	PtrMemberAccess	codec -> priv_data_size		828489	0					
ANR	828753	Identifier	codec		828489	0					
ANR	828754	Identifier	priv_data_size		828489	1					
ANR	828755	IfStatement	if ( ! avctx -> priv_data )		828489	1					
ANR	828756	Condition	! avctx -> priv_data	91:16:1456:1472	828489	0	True				
ANR	828757	UnaryOperationExpression	! avctx -> priv_data		828489	0					
ANR	828758	UnaryOperator	!		828489	0					
ANR	828759	PtrMemberAccess	avctx -> priv_data		828489	1					
ANR	828760	Identifier	avctx		828489	0					
ANR	828761	Identifier	priv_data		828489	1					
ANR	828762	CompoundStatement		89:35:1366:1366	828489	1					
ANR	828763	ExpressionStatement	ret = AVERROR ( ENOMEM )	93:16:1494:1515	828489	0	True				
ANR	828764	AssignmentExpression	ret = AVERROR ( ENOMEM )		828489	0		=			
ANR	828765	Identifier	ret		828489	0					
ANR	828766	CallExpression	AVERROR ( ENOMEM )		828489	1					
ANR	828767	Callee	AVERROR		828489	0					
ANR	828768	Identifier	AVERROR		828489	0					
ANR	828769	ArgumentList	ENOMEM		828489	1					
ANR	828770	Argument	ENOMEM		828489	0					
ANR	828771	Identifier	ENOMEM		828489	0					
ANR	828772	GotoStatement	goto end ;	95:16:1534:1542	828489	1	True				
ANR	828773	Identifier	end		828489	0					
ANR	828774	IfStatement	if ( codec -> priv_class )		828489	2					
ANR	828775	Condition	codec -> priv_class	99:16:1576:1592	828489	0	True				
ANR	828776	PtrMemberAccess	codec -> priv_class		828489	0					
ANR	828777	Identifier	codec		828489	0					
ANR	828778	Identifier	priv_class		828489	1					
ANR	828779	CompoundStatement		97:35:1486:1486	828489	1					
ANR	828780	ExpressionStatement	* ( const AVClass * * ) avctx -> priv_data = codec -> priv_class	101:16:1614:1669	828489	0	True				
ANR	828781	AssignmentExpression	* ( const AVClass * * ) avctx -> priv_data = codec -> priv_class		828489	0		=			
ANR	828782	UnaryOperationExpression	* ( const AVClass * * ) avctx -> priv_data		828489	0					
ANR	828783	UnaryOperator	*		828489	0					
ANR	828784	CastExpression	( const AVClass * * ) avctx -> priv_data		828489	1					
ANR	828785	CastTarget	const AVClass * *		828489	0					
ANR	828786	PtrMemberAccess	avctx -> priv_data		828489	1					
ANR	828787	Identifier	avctx		828489	0					
ANR	828788	Identifier	priv_data		828489	1					
ANR	828789	PtrMemberAccess	codec -> priv_class		828489	1					
ANR	828790	Identifier	codec		828489	0					
ANR	828791	Identifier	priv_class		828489	1					
ANR	828792	ExpressionStatement	av_opt_set_defaults ( avctx -> priv_data )	103:16:1688:1725	828489	1	True				
ANR	828793	CallExpression	av_opt_set_defaults ( avctx -> priv_data )		828489	0					
ANR	828794	Callee	av_opt_set_defaults		828489	0					
ANR	828795	Identifier	av_opt_set_defaults		828489	0					
ANR	828796	ArgumentList	avctx -> priv_data		828489	1					
ANR	828797	Argument	avctx -> priv_data		828489	0					
ANR	828798	PtrMemberAccess	avctx -> priv_data		828489	0					
ANR	828799	Identifier	avctx		828489	0					
ANR	828800	Identifier	priv_data		828489	1					
ANR	828801	IfStatement	"if ( codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0 )"		828489	1					
ANR	828802	Condition	"codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"	109:12:1766:1837	828489	0	True				
ANR	828803	AndExpression	"codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"		828489	0		&&			
ANR	828804	PtrMemberAccess	codec -> priv_class		828489	0					
ANR	828805	Identifier	codec		828489	0					
ANR	828806	Identifier	priv_class		828489	1					
ANR	828807	RelationalExpression	"( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"		828489	1		<			
ANR	828808	AssignmentExpression	"ret = av_opt_set_dict ( avctx -> priv_data , & tmp )"		828489	0		=			
ANR	828809	Identifier	ret		828489	0					
ANR	828810	CallExpression	"av_opt_set_dict ( avctx -> priv_data , & tmp )"		828489	1					
ANR	828811	Callee	av_opt_set_dict		828489	0					
ANR	828812	Identifier	av_opt_set_dict		828489	0					
ANR	828813	ArgumentList	avctx -> priv_data		828489	1					
ANR	828814	Argument	avctx -> priv_data		828489	0					
ANR	828815	PtrMemberAccess	avctx -> priv_data		828489	0					
ANR	828816	Identifier	avctx		828489	0					
ANR	828817	Identifier	priv_data		828489	1					
ANR	828818	Argument	& tmp		828489	1					
ANR	828819	UnaryOperationExpression	& tmp		828489	0					
ANR	828820	UnaryOperator	&		828489	0					
ANR	828821	Identifier	tmp		828489	1					
ANR	828822	PrimaryExpression	0		828489	1					
ANR	828823	GotoStatement	goto free_and_end ;	111:12:1853:1870	828489	1	True				
ANR	828824	Identifier	free_and_end		828489	0					
ANR	828825	ElseStatement	else		828489	0					
ANR	828826	CompoundStatement		111:11:1775:1775	828489	0					
ANR	828827	ExpressionStatement	avctx -> priv_data = NULL	115:8:1895:1918	828489	0	True				
ANR	828828	AssignmentExpression	avctx -> priv_data = NULL		828489	0		=			
ANR	828829	PtrMemberAccess	avctx -> priv_data		828489	0					
ANR	828830	Identifier	avctx		828489	0					
ANR	828831	Identifier	priv_data		828489	1					
ANR	828832	Identifier	NULL		828489	1					
ANR	828833	IfStatement	"if ( ( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0 )"		828489	15					
ANR	828834	Condition	"( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0"	119:8:1936:1975	828489	0	True				
ANR	828835	RelationalExpression	"( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0"		828489	0		<			
ANR	828836	AssignmentExpression	"ret = av_opt_set_dict ( avctx , & tmp )"		828489	0		=			
ANR	828837	Identifier	ret		828489	0					
ANR	828838	CallExpression	"av_opt_set_dict ( avctx , & tmp )"		828489	1					
ANR	828839	Callee	av_opt_set_dict		828489	0					
ANR	828840	Identifier	av_opt_set_dict		828489	0					
ANR	828841	ArgumentList	avctx		828489	1					
ANR	828842	Argument	avctx		828489	0					
ANR	828843	Identifier	avctx		828489	0					
ANR	828844	Argument	& tmp		828489	1					
ANR	828845	UnaryOperationExpression	& tmp		828489	0					
ANR	828846	UnaryOperator	&		828489	0					
ANR	828847	Identifier	tmp		828489	1					
ANR	828848	PrimaryExpression	0		828489	1					
ANR	828849	GotoStatement	goto free_and_end ;	121:8:1987:2004	828489	1	True				
ANR	828850	Identifier	free_and_end		828489	0					
ANR	828851	IfStatement	if ( ! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264 ) )		828489	16					
ANR	828852	Condition	! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264 )	127:8:2133:2249	828489	0	True				
ANR	828853	UnaryOperationExpression	! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264 )		828489	0					
ANR	828854	UnaryOperator	!		828489	0					
ANR	828855	AndExpression	avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264		828489	1		&&			
ANR	828856	PtrMemberAccess	avctx -> coded_width		828489	0					
ANR	828857	Identifier	avctx		828489	0					
ANR	828858	Identifier	coded_width		828489	1					
ANR	828859	AndExpression	avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264		828489	1		&&			
ANR	828860	PtrMemberAccess	avctx -> coded_height		828489	0					
ANR	828861	Identifier	avctx		828489	0					
ANR	828862	Identifier	coded_height		828489	1					
ANR	828863	AndExpression	avctx -> width && avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264		828489	1		&&			
ANR	828864	PtrMemberAccess	avctx -> width		828489	0					
ANR	828865	Identifier	avctx		828489	0					
ANR	828866	Identifier	width		828489	1					
ANR	828867	AndExpression	avctx -> height && avctx -> codec_id == AV_CODEC_ID_H264		828489	1		&&			
ANR	828868	PtrMemberAccess	avctx -> height		828489	0					
ANR	828869	Identifier	avctx		828489	0					
ANR	828870	Identifier	height		828489	1					
ANR	828871	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_H264		828489	1		==			
ANR	828872	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	828873	Identifier	avctx		828489	0					
ANR	828874	Identifier	codec_id		828489	1					
ANR	828875	Identifier	AV_CODEC_ID_H264		828489	1					
ANR	828876	CompoundStatement		125:126:2142:2142	828489	1					
ANR	828877	IfStatement	if ( avctx -> coded_width && avctx -> coded_height )		828489	0					
ANR	828878	Condition	avctx -> coded_width && avctx -> coded_height	131:8:2264:2304	828489	0	True				
ANR	828879	AndExpression	avctx -> coded_width && avctx -> coded_height		828489	0		&&			
ANR	828880	PtrMemberAccess	avctx -> coded_width		828489	0					
ANR	828881	Identifier	avctx		828489	0					
ANR	828882	Identifier	coded_width		828489	1					
ANR	828883	PtrMemberAccess	avctx -> coded_height		828489	1					
ANR	828884	Identifier	avctx		828489	0					
ANR	828885	Identifier	coded_height		828489	1					
ANR	828886	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"	133:8:2316:2386	828489	1	True				
ANR	828887	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		828489	0					
ANR	828888	Callee	avcodec_set_dimensions		828489	0					
ANR	828889	Identifier	avcodec_set_dimensions		828489	0					
ANR	828890	ArgumentList	avctx		828489	1					
ANR	828891	Argument	avctx		828489	0					
ANR	828892	Identifier	avctx		828489	0					
ANR	828893	Argument	avctx -> coded_width		828489	1					
ANR	828894	PtrMemberAccess	avctx -> coded_width		828489	0					
ANR	828895	Identifier	avctx		828489	0					
ANR	828896	Identifier	coded_width		828489	1					
ANR	828897	Argument	avctx -> coded_height		828489	2					
ANR	828898	PtrMemberAccess	avctx -> coded_height		828489	0					
ANR	828899	Identifier	avctx		828489	0					
ANR	828900	Identifier	coded_height		828489	1					
ANR	828901	ElseStatement	else		828489	0					
ANR	828902	IfStatement	if ( avctx -> width && avctx -> height )		828489	0					
ANR	828903	Condition	avctx -> width && avctx -> height	135:13:2402:2430	828489	0	True				
ANR	828904	AndExpression	avctx -> width && avctx -> height		828489	0		&&			
ANR	828905	PtrMemberAccess	avctx -> width		828489	0					
ANR	828906	Identifier	avctx		828489	0					
ANR	828907	Identifier	width		828489	1					
ANR	828908	PtrMemberAccess	avctx -> height		828489	1					
ANR	828909	Identifier	avctx		828489	0					
ANR	828910	Identifier	height		828489	1					
ANR	828911	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"	137:8:2442:2500	828489	1	True				
ANR	828912	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"		828489	0					
ANR	828913	Callee	avcodec_set_dimensions		828489	0					
ANR	828914	Identifier	avcodec_set_dimensions		828489	0					
ANR	828915	ArgumentList	avctx		828489	1					
ANR	828916	Argument	avctx		828489	0					
ANR	828917	Identifier	avctx		828489	0					
ANR	828918	Argument	avctx -> width		828489	1					
ANR	828919	PtrMemberAccess	avctx -> width		828489	0					
ANR	828920	Identifier	avctx		828489	0					
ANR	828921	Identifier	width		828489	1					
ANR	828922	Argument	avctx -> height		828489	2					
ANR	828923	PtrMemberAccess	avctx -> height		828489	0					
ANR	828924	Identifier	avctx		828489	0					
ANR	828925	Identifier	height		828489	1					
ANR	828926	IfStatement	"if ( ( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 ) )"		828489	17					
ANR	828927	Condition	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"	143:8:2520:2776	828489	0	True				
ANR	828928	AndExpression	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"		828489	0		&&			
ANR	828929	OrExpression	avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height		828489	0		||			
ANR	828930	PtrMemberAccess	avctx -> coded_width		828489	0					
ANR	828931	Identifier	avctx		828489	0					
ANR	828932	Identifier	coded_width		828489	1					
ANR	828933	OrExpression	avctx -> coded_height || avctx -> width || avctx -> height		828489	1		||			
ANR	828934	PtrMemberAccess	avctx -> coded_height		828489	0					
ANR	828935	Identifier	avctx		828489	0					
ANR	828936	Identifier	coded_height		828489	1					
ANR	828937	OrExpression	avctx -> width || avctx -> height		828489	1		||			
ANR	828938	PtrMemberAccess	avctx -> width		828489	0					
ANR	828939	Identifier	avctx		828489	0					
ANR	828940	Identifier	width		828489	1					
ANR	828941	PtrMemberAccess	avctx -> height		828489	1					
ANR	828942	Identifier	avctx		828489	0					
ANR	828943	Identifier	height		828489	1					
ANR	828944	OrExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		828489	1		||			
ANR	828945	RelationalExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0"		828489	0		<			
ANR	828946	CallExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx )"		828489	0					
ANR	828947	Callee	av_image_check_size		828489	0					
ANR	828948	Identifier	av_image_check_size		828489	0					
ANR	828949	ArgumentList	avctx -> coded_width		828489	1					
ANR	828950	Argument	avctx -> coded_width		828489	0					
ANR	828951	PtrMemberAccess	avctx -> coded_width		828489	0					
ANR	828952	Identifier	avctx		828489	0					
ANR	828953	Identifier	coded_width		828489	1					
ANR	828954	Argument	avctx -> coded_height		828489	1					
ANR	828955	PtrMemberAccess	avctx -> coded_height		828489	0					
ANR	828956	Identifier	avctx		828489	0					
ANR	828957	Identifier	coded_height		828489	1					
ANR	828958	Argument	0		828489	2					
ANR	828959	PrimaryExpression	0		828489	0					
ANR	828960	Argument	avctx		828489	3					
ANR	828961	Identifier	avctx		828489	0					
ANR	828962	PrimaryExpression	0		828489	1					
ANR	828963	RelationalExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		828489	1		<			
ANR	828964	CallExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"		828489	0					
ANR	828965	Callee	av_image_check_size		828489	0					
ANR	828966	Identifier	av_image_check_size		828489	0					
ANR	828967	ArgumentList	avctx -> width		828489	1					
ANR	828968	Argument	avctx -> width		828489	0					
ANR	828969	PtrMemberAccess	avctx -> width		828489	0					
ANR	828970	Identifier	avctx		828489	0					
ANR	828971	Identifier	width		828489	1					
ANR	828972	Argument	avctx -> height		828489	1					
ANR	828973	PtrMemberAccess	avctx -> height		828489	0					
ANR	828974	Identifier	avctx		828489	0					
ANR	828975	Identifier	height		828489	1					
ANR	828976	Argument	0		828489	2					
ANR	828977	PrimaryExpression	0		828489	0					
ANR	828978	Argument	avctx		828489	3					
ANR	828979	Identifier	avctx		828489	0					
ANR	828980	PrimaryExpression	0		828489	1					
ANR	828981	CompoundStatement		145:91:2670:2670	828489	1					
ANR	828982	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring invalid width/height values\\n"" )"	149:8:2790:2861	828489	0	True				
ANR	828983	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring invalid width/height values\\n"" )"		828489	0					
ANR	828984	Callee	av_log		828489	0					
ANR	828985	Identifier	av_log		828489	0					
ANR	828986	ArgumentList	avctx		828489	1					
ANR	828987	Argument	avctx		828489	0					
ANR	828988	Identifier	avctx		828489	0					
ANR	828989	Argument	AV_LOG_WARNING		828489	1					
ANR	828990	Identifier	AV_LOG_WARNING		828489	0					
ANR	828991	Argument	"""Ignoring invalid width/height values\\n"""		828489	2					
ANR	828992	PrimaryExpression	"""Ignoring invalid width/height values\\n"""		828489	0					
ANR	828993	ExpressionStatement	"avcodec_set_dimensions ( avctx , 0 , 0 )"	151:8:2872:2907	828489	1	True				
ANR	828994	CallExpression	"avcodec_set_dimensions ( avctx , 0 , 0 )"		828489	0					
ANR	828995	Callee	avcodec_set_dimensions		828489	0					
ANR	828996	Identifier	avcodec_set_dimensions		828489	0					
ANR	828997	ArgumentList	avctx		828489	1					
ANR	828998	Argument	avctx		828489	0					
ANR	828999	Identifier	avctx		828489	0					
ANR	829000	Argument	0		828489	1					
ANR	829001	PrimaryExpression	0		828489	0					
ANR	829002	Argument	0		828489	2					
ANR	829003	PrimaryExpression	0		828489	0					
ANR	829004	IfStatement	if ( av_codec_is_decoder ( codec ) )		828489	18					
ANR	829005	Condition	av_codec_is_decoder ( codec )	161:8:3071:3096	828489	0	True				
ANR	829006	CallExpression	av_codec_is_decoder ( codec )		828489	0					
ANR	829007	Callee	av_codec_is_decoder		828489	0					
ANR	829008	Identifier	av_codec_is_decoder		828489	0					
ANR	829009	ArgumentList	codec		828489	1					
ANR	829010	Argument	codec		828489	0					
ANR	829011	Identifier	codec		828489	0					
ANR	829012	ExpressionStatement	av_freep ( & avctx -> subtitle_header )	163:8:3108:3141	828489	1	True				
ANR	829013	CallExpression	av_freep ( & avctx -> subtitle_header )		828489	0					
ANR	829014	Callee	av_freep		828489	0					
ANR	829015	Identifier	av_freep		828489	0					
ANR	829016	ArgumentList	& avctx -> subtitle_header		828489	1					
ANR	829017	Argument	& avctx -> subtitle_header		828489	0					
ANR	829018	UnaryOperationExpression	& avctx -> subtitle_header		828489	0					
ANR	829019	UnaryOperator	&		828489	0					
ANR	829020	PtrMemberAccess	avctx -> subtitle_header		828489	1					
ANR	829021	Identifier	avctx		828489	0					
ANR	829022	Identifier	subtitle_header		828489	1					
ANR	829023	IfStatement	if ( avctx -> channels > FF_SANE_NB_CHANNELS )		828489	19					
ANR	829024	Condition	avctx -> channels > FF_SANE_NB_CHANNELS	167:8:3154:3190	828489	0	True				
ANR	829025	RelationalExpression	avctx -> channels > FF_SANE_NB_CHANNELS		828489	0		>			
ANR	829026	PtrMemberAccess	avctx -> channels		828489	0					
ANR	829027	Identifier	avctx		828489	0					
ANR	829028	Identifier	channels		828489	1					
ANR	829029	Identifier	FF_SANE_NB_CHANNELS		828489	1					
ANR	829030	CompoundStatement		165:47:3084:3084	828489	1					
ANR	829031	ExpressionStatement	ret = AVERROR ( EINVAL )	169:8:3204:3225	828489	0	True				
ANR	829032	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829033	Identifier	ret		828489	0					
ANR	829034	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829035	Callee	AVERROR		828489	0					
ANR	829036	Identifier	AVERROR		828489	0					
ANR	829037	ArgumentList	EINVAL		828489	1					
ANR	829038	Argument	EINVAL		828489	0					
ANR	829039	Identifier	EINVAL		828489	0					
ANR	829040	GotoStatement	goto free_and_end ;	171:8:3236:3253	828489	1	True				
ANR	829041	Identifier	free_and_end		828489	0					
ANR	829042	ExpressionStatement	avctx -> codec = codec	177:4:3269:3289	828489	20	True				
ANR	829043	AssignmentExpression	avctx -> codec = codec		828489	0		=			
ANR	829044	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829045	Identifier	avctx		828489	0					
ANR	829046	Identifier	codec		828489	1					
ANR	829047	Identifier	codec		828489	1					
ANR	829048	IfStatement	if ( ( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == AV_CODEC_ID_NONE )		828489	21					
ANR	829049	Condition	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == AV_CODEC_ID_NONE	179:8:3300:3426	828489	0	True				
ANR	829050	AndExpression	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == AV_CODEC_ID_NONE		828489	0		&&			
ANR	829051	OrExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type		828489	0		||			
ANR	829052	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN		828489	0		==			
ANR	829053	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829054	Identifier	avctx		828489	0					
ANR	829055	Identifier	codec_type		828489	1					
ANR	829056	Identifier	AVMEDIA_TYPE_UNKNOWN		828489	1					
ANR	829057	EqualityExpression	avctx -> codec_type == codec -> type		828489	1		==			
ANR	829058	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829059	Identifier	avctx		828489	0					
ANR	829060	Identifier	codec_type		828489	1					
ANR	829061	PtrMemberAccess	codec -> type		828489	1					
ANR	829062	Identifier	codec		828489	0					
ANR	829063	Identifier	type		828489	1					
ANR	829064	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_NONE		828489	1		==			
ANR	829065	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829066	Identifier	avctx		828489	0					
ANR	829067	Identifier	codec_id		828489	1					
ANR	829068	Identifier	AV_CODEC_ID_NONE		828489	1					
ANR	829069	CompoundStatement		179:45:3320:3320	828489	1					
ANR	829070	ExpressionStatement	avctx -> codec_type = codec -> type	183:8:3440:3471	828489	0	True				
ANR	829071	AssignmentExpression	avctx -> codec_type = codec -> type		828489	0		=			
ANR	829072	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829073	Identifier	avctx		828489	0					
ANR	829074	Identifier	codec_type		828489	1					
ANR	829075	PtrMemberAccess	codec -> type		828489	1					
ANR	829076	Identifier	codec		828489	0					
ANR	829077	Identifier	type		828489	1					
ANR	829078	ExpressionStatement	avctx -> codec_id = codec -> id	185:8:3482:3511	828489	1	True				
ANR	829079	AssignmentExpression	avctx -> codec_id = codec -> id		828489	0		=			
ANR	829080	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829081	Identifier	avctx		828489	0					
ANR	829082	Identifier	codec_id		828489	1					
ANR	829083	PtrMemberAccess	codec -> id		828489	1					
ANR	829084	Identifier	codec		828489	0					
ANR	829085	Identifier	id		828489	1					
ANR	829086	IfStatement	if ( avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT ) )		828489	22					
ANR	829087	Condition	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )	189:8:3529:3684	828489	0	True				
ANR	829088	OrExpression	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )		828489	0		||			
ANR	829089	EqualityExpression	avctx -> codec_id != codec -> id		828489	0		!=			
ANR	829090	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829091	Identifier	avctx		828489	0					
ANR	829092	Identifier	codec_id		828489	1					
ANR	829093	PtrMemberAccess	codec -> id		828489	1					
ANR	829094	Identifier	codec		828489	0					
ANR	829095	Identifier	id		828489	1					
ANR	829096	AndExpression	avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		828489	1		&&			
ANR	829097	EqualityExpression	avctx -> codec_type != codec -> type		828489	0		!=			
ANR	829098	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829099	Identifier	avctx		828489	0					
ANR	829100	Identifier	codec_type		828489	1					
ANR	829101	PtrMemberAccess	codec -> type		828489	1					
ANR	829102	Identifier	codec		828489	0					
ANR	829103	Identifier	type		828489	1					
ANR	829104	EqualityExpression	avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		828489	1		!=			
ANR	829105	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829106	Identifier	avctx		828489	0					
ANR	829107	Identifier	codec_type		828489	1					
ANR	829108	Identifier	AVMEDIA_TYPE_ATTACHMENT		828489	1					
ANR	829109	CompoundStatement		189:91:3578:3578	828489	1					
ANR	829110	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Codec type or id mismatches\\n"" )"	193:8:3698:3758	828489	0	True				
ANR	829111	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Codec type or id mismatches\\n"" )"		828489	0					
ANR	829112	Callee	av_log		828489	0					
ANR	829113	Identifier	av_log		828489	0					
ANR	829114	ArgumentList	avctx		828489	1					
ANR	829115	Argument	avctx		828489	0					
ANR	829116	Identifier	avctx		828489	0					
ANR	829117	Argument	AV_LOG_ERROR		828489	1					
ANR	829118	Identifier	AV_LOG_ERROR		828489	0					
ANR	829119	Argument	"""Codec type or id mismatches\\n"""		828489	2					
ANR	829120	PrimaryExpression	"""Codec type or id mismatches\\n"""		828489	0					
ANR	829121	ExpressionStatement	ret = AVERROR ( EINVAL )	195:8:3769:3790	828489	1	True				
ANR	829122	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829123	Identifier	ret		828489	0					
ANR	829124	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829125	Callee	AVERROR		828489	0					
ANR	829126	Identifier	AVERROR		828489	0					
ANR	829127	ArgumentList	EINVAL		828489	1					
ANR	829128	Argument	EINVAL		828489	0					
ANR	829129	Identifier	EINVAL		828489	0					
ANR	829130	GotoStatement	goto free_and_end ;	197:8:3801:3818	828489	2	True				
ANR	829131	Identifier	free_and_end		828489	0					
ANR	829132	ExpressionStatement	avctx -> frame_number = 0	201:4:3832:3855	828489	23	True				
ANR	829133	AssignmentExpression	avctx -> frame_number = 0		828489	0		=			
ANR	829134	PtrMemberAccess	avctx -> frame_number		828489	0					
ANR	829135	Identifier	avctx		828489	0					
ANR	829136	Identifier	frame_number		828489	1					
ANR	829137	PrimaryExpression	0		828489	1					
ANR	829138	ExpressionStatement	avctx -> codec_descriptor = avcodec_descriptor_get ( avctx -> codec_id )	203:4:3862:3927	828489	24	True				
ANR	829139	AssignmentExpression	avctx -> codec_descriptor = avcodec_descriptor_get ( avctx -> codec_id )		828489	0		=			
ANR	829140	PtrMemberAccess	avctx -> codec_descriptor		828489	0					
ANR	829141	Identifier	avctx		828489	0					
ANR	829142	Identifier	codec_descriptor		828489	1					
ANR	829143	CallExpression	avcodec_descriptor_get ( avctx -> codec_id )		828489	1					
ANR	829144	Callee	avcodec_descriptor_get		828489	0					
ANR	829145	Identifier	avcodec_descriptor_get		828489	0					
ANR	829146	ArgumentList	avctx -> codec_id		828489	1					
ANR	829147	Argument	avctx -> codec_id		828489	0					
ANR	829148	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829149	Identifier	avctx		828489	0					
ANR	829150	Identifier	codec_id		828489	1					
ANR	829151	IfStatement	if ( avctx -> codec -> capabilities & CODEC_CAP_EXPERIMENTAL && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL )		828489	25					
ANR	829152	Condition	avctx -> codec -> capabilities & CODEC_CAP_EXPERIMENTAL && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL	207:8:3940:4060	828489	0	True				
ANR	829153	AndExpression	avctx -> codec -> capabilities & CODEC_CAP_EXPERIMENTAL && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		828489	0		&&			
ANR	829154	BitAndExpression	avctx -> codec -> capabilities & CODEC_CAP_EXPERIMENTAL		828489	0		&			
ANR	829155	PtrMemberAccess	avctx -> codec -> capabilities		828489	0					
ANR	829156	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829157	Identifier	avctx		828489	0					
ANR	829158	Identifier	codec		828489	1					
ANR	829159	Identifier	capabilities		828489	1					
ANR	829160	Identifier	CODEC_CAP_EXPERIMENTAL		828489	1					
ANR	829161	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		828489	1		>			
ANR	829162	PtrMemberAccess	avctx -> strict_std_compliance		828489	0					
ANR	829163	Identifier	avctx		828489	0					
ANR	829164	Identifier	strict_std_compliance		828489	1					
ANR	829165	Identifier	FF_COMPLIANCE_EXPERIMENTAL		828489	1					
ANR	829166	CompoundStatement		211:8:4053:4068	828489	1					
ANR	829167	IdentifierDeclStatement	"const char * codec_string = av_codec_is_encoder ( codec ) ? ""encoder"" : ""decoder"" ;"	211:8:4074:4151	828489	0	True				
ANR	829168	IdentifierDecl	"* codec_string = av_codec_is_encoder ( codec ) ? ""encoder"" : ""decoder"""		828489	0					
ANR	829169	IdentifierDeclType	const char *		828489	0					
ANR	829170	Identifier	codec_string		828489	1					
ANR	829171	AssignmentExpression	"* codec_string = av_codec_is_encoder ( codec ) ? ""encoder"" : ""decoder"""		828489	2		=			
ANR	829172	Identifier	codec_string		828489	0					
ANR	829173	ConditionalExpression	"av_codec_is_encoder ( codec ) ? ""encoder"" : ""decoder"""		828489	1					
ANR	829174	Condition	av_codec_is_encoder ( codec )		828489	0					
ANR	829175	CallExpression	av_codec_is_encoder ( codec )		828489	0					
ANR	829176	Callee	av_codec_is_encoder		828489	0					
ANR	829177	Identifier	av_codec_is_encoder		828489	0					
ANR	829178	ArgumentList	codec		828489	1					
ANR	829179	Argument	codec		828489	0					
ANR	829180	Identifier	codec		828489	0					
ANR	829181	PrimaryExpression	"""encoder"""		828489	1					
ANR	829182	PrimaryExpression	"""decoder"""		828489	2					
ANR	829183	IdentifierDeclStatement	AVCodec * codec2 ;	213:8:4162:4177	828489	1	True				
ANR	829184	IdentifierDecl	* codec2		828489	0					
ANR	829185	IdentifierDeclType	AVCodec *		828489	0					
ANR	829186	Identifier	codec2		828489	1					
ANR	829187	Statement	av_log	215:8:4188:4193	828489	2	True				
ANR	829188	Statement	(	215:14:4194:4194	828489	3	True				
ANR	829189	Statement	NULL	215:15:4195:4198	828489	4	True				
ANR	829190	Statement	","	215:19:4199:4199	828489	5	True				
ANR	829191	Statement	AV_LOG_ERROR	215:21:4201:4212	828489	6	True				
ANR	829192	Statement	","	215:33:4213:4213	828489	7	True				
ANR	829193	Statement	"""The %s '%s' is experimental but experimental codecs are not enabled, """	217:15:4231:4301	828489	8	True				
ANR	829194	Statement	"""add '-strict %d' if you want to use it.\\n"""	219:15:4319:4361	828489	9	True				
ANR	829195	Statement	","	219:58:4362:4362	828489	10	True				
ANR	829196	Statement	codec_string	221:15:4380:4391	828489	11	True				
ANR	829197	Statement	","	221:27:4392:4392	828489	12	True				
ANR	829198	Statement	codec	221:29:4394:4398	828489	13	True				
ANR	829199	Statement	->	221:34:4399:4400	828489	14	True				
ANR	829200	Statement	name	221:36:4401:4404	828489	15	True				
ANR	829201	Statement	","	221:40:4405:4405	828489	16	True				
ANR	829202	Statement	FF_COMPLIANCE_EXPERIMENTAL	221:42:4407:4432	828489	17	True				
ANR	829203	Statement	)	221:68:4433:4433	828489	18	True				
ANR	829204	ExpressionStatement		221:69:4434:4434	828489	19	True				
ANR	829205	ExpressionStatement	codec2 = av_codec_is_encoder ( codec ) ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )	223:8:4445:4548	828489	20	True				
ANR	829206	AssignmentExpression	codec2 = av_codec_is_encoder ( codec ) ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )		828489	0		=			
ANR	829207	Identifier	codec2		828489	0					
ANR	829208	ConditionalExpression	av_codec_is_encoder ( codec ) ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )		828489	1					
ANR	829209	Condition	av_codec_is_encoder ( codec )		828489	0					
ANR	829210	CallExpression	av_codec_is_encoder ( codec )		828489	0					
ANR	829211	Callee	av_codec_is_encoder		828489	0					
ANR	829212	Identifier	av_codec_is_encoder		828489	0					
ANR	829213	ArgumentList	codec		828489	1					
ANR	829214	Argument	codec		828489	0					
ANR	829215	Identifier	codec		828489	0					
ANR	829216	CallExpression	avcodec_find_encoder ( codec -> id )		828489	1					
ANR	829217	Callee	avcodec_find_encoder		828489	0					
ANR	829218	Identifier	avcodec_find_encoder		828489	0					
ANR	829219	ArgumentList	codec -> id		828489	1					
ANR	829220	Argument	codec -> id		828489	0					
ANR	829221	PtrMemberAccess	codec -> id		828489	0					
ANR	829222	Identifier	codec		828489	0					
ANR	829223	Identifier	id		828489	1					
ANR	829224	CallExpression	avcodec_find_decoder ( codec -> id )		828489	2					
ANR	829225	Callee	avcodec_find_decoder		828489	0					
ANR	829226	Identifier	avcodec_find_decoder		828489	0					
ANR	829227	ArgumentList	codec -> id		828489	1					
ANR	829228	Argument	codec -> id		828489	0					
ANR	829229	PtrMemberAccess	codec -> id		828489	0					
ANR	829230	Identifier	codec		828489	0					
ANR	829231	Identifier	id		828489	1					
ANR	829232	IfStatement	if ( ! ( codec2 -> capabilities & CODEC_CAP_EXPERIMENTAL ) )		828489	21					
ANR	829233	Condition	! ( codec2 -> capabilities & CODEC_CAP_EXPERIMENTAL )	225:12:4563:4610	828489	0	True				
ANR	829234	UnaryOperationExpression	! ( codec2 -> capabilities & CODEC_CAP_EXPERIMENTAL )		828489	0					
ANR	829235	UnaryOperator	!		828489	0					
ANR	829236	BitAndExpression	codec2 -> capabilities & CODEC_CAP_EXPERIMENTAL		828489	1		&			
ANR	829237	PtrMemberAccess	codec2 -> capabilities		828489	0					
ANR	829238	Identifier	codec2		828489	0					
ANR	829239	Identifier	capabilities		828489	1					
ANR	829240	Identifier	CODEC_CAP_EXPERIMENTAL		828489	1					
ANR	829241	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Alternatively use the non experimental %s '%s'.\\n"" , codec_string , codec2 -> name )"	227:12:4626:4750	828489	1	True				
ANR	829242	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Alternatively use the non experimental %s '%s'.\\n"" , codec_string , codec2 -> name )"		828489	0					
ANR	829243	Callee	av_log		828489	0					
ANR	829244	Identifier	av_log		828489	0					
ANR	829245	ArgumentList	NULL		828489	1					
ANR	829246	Argument	NULL		828489	0					
ANR	829247	Identifier	NULL		828489	0					
ANR	829248	Argument	AV_LOG_ERROR		828489	1					
ANR	829249	Identifier	AV_LOG_ERROR		828489	0					
ANR	829250	Argument	"""Alternatively use the non experimental %s '%s'.\\n"""		828489	2					
ANR	829251	PrimaryExpression	"""Alternatively use the non experimental %s '%s'.\\n"""		828489	0					
ANR	829252	Argument	codec_string		828489	3					
ANR	829253	Identifier	codec_string		828489	0					
ANR	829254	Argument	codec2 -> name		828489	4					
ANR	829255	PtrMemberAccess	codec2 -> name		828489	0					
ANR	829256	Identifier	codec2		828489	0					
ANR	829257	Identifier	name		828489	1					
ANR	829258	ExpressionStatement	ret = AVERROR_EXPERIMENTAL	231:8:4761:4787	828489	22	True				
ANR	829259	AssignmentExpression	ret = AVERROR_EXPERIMENTAL		828489	0		=			
ANR	829260	Identifier	ret		828489	0					
ANR	829261	Identifier	AVERROR_EXPERIMENTAL		828489	1					
ANR	829262	GotoStatement	goto free_and_end ;	233:8:4798:4815	828489	23	True				
ANR	829263	Identifier	free_and_end		828489	0					
ANR	829264	IfStatement	if ( avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den ) )		828489	26					
ANR	829265	Condition	avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den )	239:8:4835:4934	828489	0	True				
ANR	829266	AndExpression	avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den )		828489	0		&&			
ANR	829267	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_AUDIO		828489	0		==			
ANR	829268	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	829269	Identifier	avctx		828489	0					
ANR	829270	Identifier	codec_type		828489	1					
ANR	829271	Identifier	AVMEDIA_TYPE_AUDIO		828489	1					
ANR	829272	OrExpression	! avctx -> time_base . num || ! avctx -> time_base . den		828489	1		||			
ANR	829273	UnaryOperationExpression	! avctx -> time_base . num		828489	0					
ANR	829274	UnaryOperator	!		828489	0					
ANR	829275	MemberAccess	avctx -> time_base . num		828489	1					
ANR	829276	PtrMemberAccess	avctx -> time_base		828489	0					
ANR	829277	Identifier	avctx		828489	0					
ANR	829278	Identifier	time_base		828489	1					
ANR	829279	Identifier	num		828489	1					
ANR	829280	UnaryOperationExpression	! avctx -> time_base . den		828489	1					
ANR	829281	UnaryOperator	!		828489	0					
ANR	829282	MemberAccess	avctx -> time_base . den		828489	1					
ANR	829283	PtrMemberAccess	avctx -> time_base		828489	0					
ANR	829284	Identifier	avctx		828489	0					
ANR	829285	Identifier	time_base		828489	1					
ANR	829286	Identifier	den		828489	1					
ANR	829287	CompoundStatement		239:58:4828:4828	828489	1					
ANR	829288	ExpressionStatement	avctx -> time_base . num = 1	243:8:4948:4972	828489	0	True				
ANR	829289	AssignmentExpression	avctx -> time_base . num = 1		828489	0		=			
ANR	829290	MemberAccess	avctx -> time_base . num		828489	0					
ANR	829291	PtrMemberAccess	avctx -> time_base		828489	0					
ANR	829292	Identifier	avctx		828489	0					
ANR	829293	Identifier	time_base		828489	1					
ANR	829294	Identifier	num		828489	1					
ANR	829295	PrimaryExpression	1		828489	1					
ANR	829296	ExpressionStatement	avctx -> time_base . den = avctx -> sample_rate	245:8:4983:5024	828489	1	True				
ANR	829297	AssignmentExpression	avctx -> time_base . den = avctx -> sample_rate		828489	0		=			
ANR	829298	MemberAccess	avctx -> time_base . den		828489	0					
ANR	829299	PtrMemberAccess	avctx -> time_base		828489	0					
ANR	829300	Identifier	avctx		828489	0					
ANR	829301	Identifier	time_base		828489	1					
ANR	829302	Identifier	den		828489	1					
ANR	829303	PtrMemberAccess	avctx -> sample_rate		828489	1					
ANR	829304	Identifier	avctx		828489	0					
ANR	829305	Identifier	sample_rate		828489	1					
ANR	829306	IfStatement	if ( ! HAVE_THREADS )		828489	27					
ANR	829307	Condition	! HAVE_THREADS	251:8:5044:5056	828489	0	True				
ANR	829308	UnaryOperationExpression	! HAVE_THREADS		828489	0					
ANR	829309	UnaryOperator	!		828489	0					
ANR	829310	Identifier	HAVE_THREADS		828489	1					
ANR	829311	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Warning: not compiled with thread support, using thread emulation\\n"" )"	253:8:5068:5168	828489	1	True				
ANR	829312	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Warning: not compiled with thread support, using thread emulation\\n"" )"		828489	0					
ANR	829313	Callee	av_log		828489	0					
ANR	829314	Identifier	av_log		828489	0					
ANR	829315	ArgumentList	avctx		828489	1					
ANR	829316	Argument	avctx		828489	0					
ANR	829317	Identifier	avctx		828489	0					
ANR	829318	Argument	AV_LOG_WARNING		828489	1					
ANR	829319	Identifier	AV_LOG_WARNING		828489	0					
ANR	829320	Argument	"""Warning: not compiled with thread support, using thread emulation\\n"""		828489	2					
ANR	829321	PrimaryExpression	"""Warning: not compiled with thread support, using thread emulation\\n"""		828489	0					
ANR	829322	IfStatement	if ( HAVE_THREADS )		828489	28					
ANR	829323	Condition	HAVE_THREADS	257:8:5181:5192	828489	0	True				
ANR	829324	Identifier	HAVE_THREADS		828489	0					
ANR	829325	CompoundStatement		255:22:5086:5086	828489	1					
ANR	829326	ExpressionStatement	ff_unlock_avcodec ( )	259:8:5206:5225	828489	0	True				
ANR	829327	CallExpression	ff_unlock_avcodec ( )		828489	0					
ANR	829328	Callee	ff_unlock_avcodec		828489	0					
ANR	829329	Identifier	ff_unlock_avcodec		828489	0					
ANR	829330	ArgumentList			828489	1					
ANR	829331	ExpressionStatement	"ret = ff_frame_thread_encoder_init ( avctx , options ? * options : NULL )"	261:8:5335:5403	828489	1	True				
ANR	829332	AssignmentExpression	"ret = ff_frame_thread_encoder_init ( avctx , options ? * options : NULL )"		828489	0		=			
ANR	829333	Identifier	ret		828489	0					
ANR	829334	CallExpression	"ff_frame_thread_encoder_init ( avctx , options ? * options : NULL )"		828489	1					
ANR	829335	Callee	ff_frame_thread_encoder_init		828489	0					
ANR	829336	Identifier	ff_frame_thread_encoder_init		828489	0					
ANR	829337	ArgumentList	avctx		828489	1					
ANR	829338	Argument	avctx		828489	0					
ANR	829339	Identifier	avctx		828489	0					
ANR	829340	Argument	options ? * options : NULL		828489	1					
ANR	829341	ConditionalExpression	options ? * options : NULL		828489	0					
ANR	829342	Condition	options		828489	0					
ANR	829343	Identifier	options		828489	0					
ANR	829344	UnaryOperationExpression	* options		828489	1					
ANR	829345	UnaryOperator	*		828489	0					
ANR	829346	Identifier	options		828489	1					
ANR	829347	Identifier	NULL		828489	2					
ANR	829348	ExpressionStatement	ff_lock_avcodec ( avctx )	263:8:5414:5436	828489	2	True				
ANR	829349	CallExpression	ff_lock_avcodec ( avctx )		828489	0					
ANR	829350	Callee	ff_lock_avcodec		828489	0					
ANR	829351	Identifier	ff_lock_avcodec		828489	0					
ANR	829352	ArgumentList	avctx		828489	1					
ANR	829353	Argument	avctx		828489	0					
ANR	829354	Identifier	avctx		828489	0					
ANR	829355	IfStatement	if ( ret < 0 )		828489	3					
ANR	829356	Condition	ret < 0	265:12:5451:5457	828489	0	True				
ANR	829357	RelationalExpression	ret < 0		828489	0		<			
ANR	829358	Identifier	ret		828489	0					
ANR	829359	PrimaryExpression	0		828489	1					
ANR	829360	GotoStatement	goto free_and_end ;	267:12:5473:5490	828489	1	True				
ANR	829361	Identifier	free_and_end		828489	0					
ANR	829362	IfStatement	if ( HAVE_THREADS && ! avctx -> thread_opaque && ! ( avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME ) ) )		828489	29					
ANR	829363	Condition	HAVE_THREADS && ! avctx -> thread_opaque && ! ( avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME ) )	273:8:5510:5646	828489	0	True				
ANR	829364	AndExpression	HAVE_THREADS && ! avctx -> thread_opaque && ! ( avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		828489	0		&&			
ANR	829365	Identifier	HAVE_THREADS		828489	0					
ANR	829366	AndExpression	! avctx -> thread_opaque && ! ( avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		828489	1		&&			
ANR	829367	UnaryOperationExpression	! avctx -> thread_opaque		828489	0					
ANR	829368	UnaryOperator	!		828489	0					
ANR	829369	PtrMemberAccess	avctx -> thread_opaque		828489	1					
ANR	829370	Identifier	avctx		828489	0					
ANR	829371	Identifier	thread_opaque		828489	1					
ANR	829372	UnaryOperationExpression	! ( avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		828489	1					
ANR	829373	UnaryOperator	!		828489	0					
ANR	829374	AndExpression	avctx -> internal -> frame_thread_encoder && ( avctx -> active_thread_type & FF_THREAD_FRAME )		828489	1		&&			
ANR	829375	PtrMemberAccess	avctx -> internal -> frame_thread_encoder		828489	0					
ANR	829376	PtrMemberAccess	avctx -> internal		828489	0					
ANR	829377	Identifier	avctx		828489	0					
ANR	829378	Identifier	internal		828489	1					
ANR	829379	Identifier	frame_thread_encoder		828489	1					
ANR	829380	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		828489	1		&			
ANR	829381	PtrMemberAccess	avctx -> active_thread_type		828489	0					
ANR	829382	Identifier	avctx		828489	0					
ANR	829383	Identifier	active_thread_type		828489	1					
ANR	829384	Identifier	FF_THREAD_FRAME		828489	1					
ANR	829385	CompoundStatement		273:100:5540:5540	828489	1					
ANR	829386	ExpressionStatement	ret = ff_thread_init ( avctx )	277:8:5660:5687	828489	0	True				
ANR	829387	AssignmentExpression	ret = ff_thread_init ( avctx )		828489	0		=			
ANR	829388	Identifier	ret		828489	0					
ANR	829389	CallExpression	ff_thread_init ( avctx )		828489	1					
ANR	829390	Callee	ff_thread_init		828489	0					
ANR	829391	Identifier	ff_thread_init		828489	0					
ANR	829392	ArgumentList	avctx		828489	1					
ANR	829393	Argument	avctx		828489	0					
ANR	829394	Identifier	avctx		828489	0					
ANR	829395	IfStatement	if ( ret < 0 )		828489	1					
ANR	829396	Condition	ret < 0	279:12:5702:5708	828489	0	True				
ANR	829397	RelationalExpression	ret < 0		828489	0		<			
ANR	829398	Identifier	ret		828489	0					
ANR	829399	PrimaryExpression	0		828489	1					
ANR	829400	CompoundStatement		277:21:5602:5602	828489	1					
ANR	829401	GotoStatement	goto free_and_end ;	281:12:5726:5743	828489	0	True				
ANR	829402	Identifier	free_and_end		828489	0					
ANR	829403	IfStatement	if ( ! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS ) )		828489	30					
ANR	829404	Condition	! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )	287:8:5772:5835	828489	0	True				
ANR	829405	AndExpression	! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )		828489	0		&&			
ANR	829406	UnaryOperationExpression	! HAVE_THREADS		828489	0					
ANR	829407	UnaryOperator	!		828489	0					
ANR	829408	Identifier	HAVE_THREADS		828489	1					
ANR	829409	UnaryOperationExpression	! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )		828489	1					
ANR	829410	UnaryOperator	!		828489	0					
ANR	829411	BitAndExpression	codec -> capabilities & CODEC_CAP_AUTO_THREADS		828489	1		&			
ANR	829412	PtrMemberAccess	codec -> capabilities		828489	0					
ANR	829413	Identifier	codec		828489	0					
ANR	829414	Identifier	capabilities		828489	1					
ANR	829415	Identifier	CODEC_CAP_AUTO_THREADS		828489	1					
ANR	829416	ExpressionStatement	avctx -> thread_count = 1	289:8:5847:5870	828489	1	True				
ANR	829417	AssignmentExpression	avctx -> thread_count = 1		828489	0		=			
ANR	829418	PtrMemberAccess	avctx -> thread_count		828489	0					
ANR	829419	Identifier	avctx		828489	0					
ANR	829420	Identifier	thread_count		828489	1					
ANR	829421	PrimaryExpression	1		828489	1					
ANR	829422	IfStatement	if ( avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0 )		828489	31					
ANR	829423	Condition	avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0	293:8:5883:5943	828489	0	True				
ANR	829424	OrExpression	avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0		828489	0		||			
ANR	829425	RelationalExpression	avctx -> codec -> max_lowres < avctx -> lowres		828489	0		<			
ANR	829426	PtrMemberAccess	avctx -> codec -> max_lowres		828489	0					
ANR	829427	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829428	Identifier	avctx		828489	0					
ANR	829429	Identifier	codec		828489	1					
ANR	829430	Identifier	max_lowres		828489	1					
ANR	829431	PtrMemberAccess	avctx -> lowres		828489	1					
ANR	829432	Identifier	avctx		828489	0					
ANR	829433	Identifier	lowres		828489	1					
ANR	829434	RelationalExpression	avctx -> lowres < 0		828489	1		<			
ANR	829435	PtrMemberAccess	avctx -> lowres		828489	0					
ANR	829436	Identifier	avctx		828489	0					
ANR	829437	Identifier	lowres		828489	1					
ANR	829438	PrimaryExpression	0		828489	1					
ANR	829439	CompoundStatement		291:71:5837:5837	828489	1					
ANR	829440	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"	295:8:5957:6091	828489	0	True				
ANR	829441	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"		828489	0					
ANR	829442	Callee	av_log		828489	0					
ANR	829443	Identifier	av_log		828489	0					
ANR	829444	ArgumentList	avctx		828489	1					
ANR	829445	Argument	avctx		828489	0					
ANR	829446	Identifier	avctx		828489	0					
ANR	829447	Argument	AV_LOG_ERROR		828489	1					
ANR	829448	Identifier	AV_LOG_ERROR		828489	0					
ANR	829449	Argument	"""The maximum value for lowres supported by the decoder is %d\\n"""		828489	2					
ANR	829450	PrimaryExpression	"""The maximum value for lowres supported by the decoder is %d\\n"""		828489	0					
ANR	829451	Argument	avctx -> codec -> max_lowres		828489	3					
ANR	829452	PtrMemberAccess	avctx -> codec -> max_lowres		828489	0					
ANR	829453	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829454	Identifier	avctx		828489	0					
ANR	829455	Identifier	codec		828489	1					
ANR	829456	Identifier	max_lowres		828489	1					
ANR	829457	ExpressionStatement	ret = AVERROR ( EINVAL )	299:8:6102:6123	828489	1	True				
ANR	829458	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829459	Identifier	ret		828489	0					
ANR	829460	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829461	Callee	AVERROR		828489	0					
ANR	829462	Identifier	AVERROR		828489	0					
ANR	829463	ArgumentList	EINVAL		828489	1					
ANR	829464	Argument	EINVAL		828489	0					
ANR	829465	Identifier	EINVAL		828489	0					
ANR	829466	GotoStatement	goto free_and_end ;	301:8:6134:6151	828489	2	True				
ANR	829467	Identifier	free_and_end		828489	0					
ANR	829468	IfStatement	if ( av_codec_is_encoder ( avctx -> codec ) )		828489	32					
ANR	829469	Condition	av_codec_is_encoder ( avctx -> codec )	307:8:6171:6203	828489	0	True				
ANR	829470	CallExpression	av_codec_is_encoder ( avctx -> codec )		828489	0					
ANR	829471	Callee	av_codec_is_encoder		828489	0					
ANR	829472	Identifier	av_codec_is_encoder		828489	0					
ANR	829473	ArgumentList	avctx -> codec		828489	1					
ANR	829474	Argument	avctx -> codec		828489	0					
ANR	829475	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829476	Identifier	avctx		828489	0					
ANR	829477	Identifier	codec		828489	1					
ANR	829478	CompoundStatement		307:8:6108:6113	828489	1					
ANR	829479	IdentifierDeclStatement	int i ;	309:8:6217:6222	828489	0	True				
ANR	829480	IdentifierDecl	i		828489	0					
ANR	829481	IdentifierDeclType	int		828489	0					
ANR	829482	Identifier	i		828489	1					
ANR	829483	IfStatement	if ( avctx -> codec -> sample_fmts )		828489	1					
ANR	829484	Condition	avctx -> codec -> sample_fmts	311:12:6237:6261	828489	0	True				
ANR	829485	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829486	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829487	Identifier	avctx		828489	0					
ANR	829488	Identifier	codec		828489	1					
ANR	829489	Identifier	sample_fmts		828489	1					
ANR	829490	CompoundStatement		309:39:6155:6155	828489	1					
ANR	829491	ForStatement	for ( i = 0 ; avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE ; i ++ )		828489	0					
ANR	829492	ForInit	i = 0 ;	313:17:6284:6289	828489	0	True				
ANR	829493	AssignmentExpression	i = 0		828489	0		=			
ANR	829494	Identifier	i		828489	0					
ANR	829495	PrimaryExpression	0		828489	1					
ANR	829496	Condition	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE	313:24:6291:6340	828489	1	True				
ANR	829497	EqualityExpression	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE		828489	0		!=			
ANR	829498	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		828489	0					
ANR	829499	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829500	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829501	Identifier	avctx		828489	0					
ANR	829502	Identifier	codec		828489	1					
ANR	829503	Identifier	sample_fmts		828489	1					
ANR	829504	Identifier	i		828489	1					
ANR	829505	Identifier	AV_SAMPLE_FMT_NONE		828489	1					
ANR	829506	PostIncDecOperationExpression	i ++	313:76:6343:6345	828489	2	True				
ANR	829507	Identifier	i		828489	0					
ANR	829508	IncDec	++		828489	1					
ANR	829509	CompoundStatement		311:81:6239:6239	828489	3					
ANR	829510	IfStatement	if ( avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ] )		828489	0					
ANR	829511	Condition	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]	315:20:6371:6419	828489	0	True				
ANR	829512	EqualityExpression	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]		828489	0		==			
ANR	829513	PtrMemberAccess	avctx -> sample_fmt		828489	0					
ANR	829514	Identifier	avctx		828489	0					
ANR	829515	Identifier	sample_fmt		828489	1					
ANR	829516	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		828489	1					
ANR	829517	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829518	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829519	Identifier	avctx		828489	0					
ANR	829520	Identifier	codec		828489	1					
ANR	829521	Identifier	sample_fmts		828489	1					
ANR	829522	Identifier	i		828489	1					
ANR	829523	BreakStatement	break ;	317:20:6443:6448	828489	1	True				
ANR	829524	IfStatement	if ( avctx -> channels == 1 && av_get_planar_sample_fmt ( avctx -> sample_fmt ) == av_get_planar_sample_fmt ( avctx -> codec -> sample_fmts [ i ] ) )		828489	1					
ANR	829525	Condition	avctx -> channels == 1 && av_get_planar_sample_fmt ( avctx -> sample_fmt ) == av_get_planar_sample_fmt ( avctx -> codec -> sample_fmts [ i ] )	319:20:6471:6637	828489	0	True				
ANR	829526	AndExpression	avctx -> channels == 1 && av_get_planar_sample_fmt ( avctx -> sample_fmt ) == av_get_planar_sample_fmt ( avctx -> codec -> sample_fmts [ i ] )		828489	0		&&			
ANR	829527	EqualityExpression	avctx -> channels == 1		828489	0		==			
ANR	829528	PtrMemberAccess	avctx -> channels		828489	0					
ANR	829529	Identifier	avctx		828489	0					
ANR	829530	Identifier	channels		828489	1					
ANR	829531	PrimaryExpression	1		828489	1					
ANR	829532	EqualityExpression	av_get_planar_sample_fmt ( avctx -> sample_fmt ) == av_get_planar_sample_fmt ( avctx -> codec -> sample_fmts [ i ] )		828489	1		==			
ANR	829533	CallExpression	av_get_planar_sample_fmt ( avctx -> sample_fmt )		828489	0					
ANR	829534	Callee	av_get_planar_sample_fmt		828489	0					
ANR	829535	Identifier	av_get_planar_sample_fmt		828489	0					
ANR	829536	ArgumentList	avctx -> sample_fmt		828489	1					
ANR	829537	Argument	avctx -> sample_fmt		828489	0					
ANR	829538	PtrMemberAccess	avctx -> sample_fmt		828489	0					
ANR	829539	Identifier	avctx		828489	0					
ANR	829540	Identifier	sample_fmt		828489	1					
ANR	829541	CallExpression	av_get_planar_sample_fmt ( avctx -> codec -> sample_fmts [ i ] )		828489	1					
ANR	829542	Callee	av_get_planar_sample_fmt		828489	0					
ANR	829543	Identifier	av_get_planar_sample_fmt		828489	0					
ANR	829544	ArgumentList	avctx -> codec -> sample_fmts [ i ]		828489	1					
ANR	829545	Argument	avctx -> codec -> sample_fmts [ i ]		828489	0					
ANR	829546	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		828489	0					
ANR	829547	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829548	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829549	Identifier	avctx		828489	0					
ANR	829550	Identifier	codec		828489	1					
ANR	829551	Identifier	sample_fmts		828489	1					
ANR	829552	Identifier	i		828489	1					
ANR	829553	CompoundStatement		321:76:6531:6531	828489	1					
ANR	829554	ExpressionStatement	avctx -> sample_fmt = avctx -> codec -> sample_fmts [ i ]	325:20:6663:6711	828489	0	True				
ANR	829555	AssignmentExpression	avctx -> sample_fmt = avctx -> codec -> sample_fmts [ i ]		828489	0		=			
ANR	829556	PtrMemberAccess	avctx -> sample_fmt		828489	0					
ANR	829557	Identifier	avctx		828489	0					
ANR	829558	Identifier	sample_fmt		828489	1					
ANR	829559	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		828489	1					
ANR	829560	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829561	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829562	Identifier	avctx		828489	0					
ANR	829563	Identifier	codec		828489	1					
ANR	829564	Identifier	sample_fmts		828489	1					
ANR	829565	Identifier	i		828489	1					
ANR	829566	BreakStatement	break ;	327:20:6734:6739	828489	1	True				
ANR	829567	IfStatement	if ( avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE )		828489	1					
ANR	829568	Condition	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE	333:16:6792:6841	828489	0	True				
ANR	829569	EqualityExpression	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE		828489	0		==			
ANR	829570	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		828489	0					
ANR	829571	PtrMemberAccess	avctx -> codec -> sample_fmts		828489	0					
ANR	829572	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829573	Identifier	avctx		828489	0					
ANR	829574	Identifier	codec		828489	1					
ANR	829575	Identifier	sample_fmts		828489	1					
ANR	829576	Identifier	i		828489	1					
ANR	829577	Identifier	AV_SAMPLE_FMT_NONE		828489	1					
ANR	829578	CompoundStatement		333:16:6754:6767	828489	1					
ANR	829579	IdentifierDeclStatement	char buf [ 128 ] ;	335:16:6863:6876	828489	0	True				
ANR	829580	IdentifierDecl	buf [ 128 ]		828489	0					
ANR	829581	IdentifierDeclType	char [ 128 ]		828489	0					
ANR	829582	Identifier	buf		828489	1					
ANR	829583	PrimaryExpression	128		828489	2					
ANR	829584	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%d"" , avctx -> sample_fmt )"	337:16:6895:6946	828489	1	True				
ANR	829585	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%d"" , avctx -> sample_fmt )"		828489	0					
ANR	829586	Callee	snprintf		828489	0					
ANR	829587	Identifier	snprintf		828489	0					
ANR	829588	ArgumentList	buf		828489	1					
ANR	829589	Argument	buf		828489	0					
ANR	829590	Identifier	buf		828489	0					
ANR	829591	Argument	sizeof ( buf )		828489	1					
ANR	829592	SizeofExpression	sizeof ( buf )		828489	0					
ANR	829593	Sizeof	sizeof		828489	0					
ANR	829594	SizeofOperand	buf		828489	1					
ANR	829595	Argument	"""%d"""		828489	2					
ANR	829596	PrimaryExpression	"""%d"""		828489	0					
ANR	829597	Argument	avctx -> sample_fmt		828489	3					
ANR	829598	PtrMemberAccess	avctx -> sample_fmt		828489	0					
ANR	829599	Identifier	avctx		828489	0					
ANR	829600	Identifier	sample_fmt		828489	1					
ANR	829601	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample format %s is invalid or not supported\\n"" , ( char * ) av_x_if_null ( av_get_sample_fmt_name ( avctx -> sample_fmt ) , buf ) )"	339:16:6965:7146	828489	2	True				
ANR	829602	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample format %s is invalid or not supported\\n"" , ( char * ) av_x_if_null ( av_get_sample_fmt_name ( avctx -> sample_fmt ) , buf ) )"		828489	0					
ANR	829603	Callee	av_log		828489	0					
ANR	829604	Identifier	av_log		828489	0					
ANR	829605	ArgumentList	avctx		828489	1					
ANR	829606	Argument	avctx		828489	0					
ANR	829607	Identifier	avctx		828489	0					
ANR	829608	Argument	AV_LOG_ERROR		828489	1					
ANR	829609	Identifier	AV_LOG_ERROR		828489	0					
ANR	829610	Argument	"""Specified sample format %s is invalid or not supported\\n"""		828489	2					
ANR	829611	PrimaryExpression	"""Specified sample format %s is invalid or not supported\\n"""		828489	0					
ANR	829612	Argument	"( char * ) av_x_if_null ( av_get_sample_fmt_name ( avctx -> sample_fmt ) , buf )"		828489	3					
ANR	829613	CastExpression	"( char * ) av_x_if_null ( av_get_sample_fmt_name ( avctx -> sample_fmt ) , buf )"		828489	0					
ANR	829614	CastTarget	char *		828489	0					
ANR	829615	CallExpression	"av_x_if_null ( av_get_sample_fmt_name ( avctx -> sample_fmt ) , buf )"		828489	1					
ANR	829616	Callee	av_x_if_null		828489	0					
ANR	829617	Identifier	av_x_if_null		828489	0					
ANR	829618	ArgumentList	av_get_sample_fmt_name ( avctx -> sample_fmt )		828489	1					
ANR	829619	Argument	av_get_sample_fmt_name ( avctx -> sample_fmt )		828489	0					
ANR	829620	CallExpression	av_get_sample_fmt_name ( avctx -> sample_fmt )		828489	0					
ANR	829621	Callee	av_get_sample_fmt_name		828489	0					
ANR	829622	Identifier	av_get_sample_fmt_name		828489	0					
ANR	829623	ArgumentList	avctx -> sample_fmt		828489	1					
ANR	829624	Argument	avctx -> sample_fmt		828489	0					
ANR	829625	PtrMemberAccess	avctx -> sample_fmt		828489	0					
ANR	829626	Identifier	avctx		828489	0					
ANR	829627	Identifier	sample_fmt		828489	1					
ANR	829628	Argument	buf		828489	1					
ANR	829629	Identifier	buf		828489	0					
ANR	829630	ExpressionStatement	ret = AVERROR ( EINVAL )	343:16:7165:7186	828489	3	True				
ANR	829631	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829632	Identifier	ret		828489	0					
ANR	829633	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829634	Callee	AVERROR		828489	0					
ANR	829635	Identifier	AVERROR		828489	0					
ANR	829636	ArgumentList	EINVAL		828489	1					
ANR	829637	Argument	EINVAL		828489	0					
ANR	829638	Identifier	EINVAL		828489	0					
ANR	829639	GotoStatement	goto free_and_end ;	345:16:7205:7222	828489	4	True				
ANR	829640	Identifier	free_and_end		828489	0					
ANR	829641	IfStatement	if ( avctx -> codec -> pix_fmts )		828489	2					
ANR	829642	Condition	avctx -> codec -> pix_fmts	351:12:7263:7284	828489	0	True				
ANR	829643	PtrMemberAccess	avctx -> codec -> pix_fmts		828489	0					
ANR	829644	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829645	Identifier	avctx		828489	0					
ANR	829646	Identifier	codec		828489	1					
ANR	829647	Identifier	pix_fmts		828489	1					
ANR	829648	CompoundStatement		349:36:7178:7178	828489	1					
ANR	829649	ForStatement	for ( i = 0 ; avctx -> codec -> pix_fmts [ i ] != AV_PIX_FMT_NONE ; i ++ )		828489	0					
ANR	829650	ForInit	i = 0 ;	353:17:7307:7312	828489	0	True				
ANR	829651	AssignmentExpression	i = 0		828489	0		=			
ANR	829652	Identifier	i		828489	0					
ANR	829653	PrimaryExpression	0		828489	1					
ANR	829654	Condition	avctx -> codec -> pix_fmts [ i ] != AV_PIX_FMT_NONE	353:24:7314:7357	828489	1	True				
ANR	829655	EqualityExpression	avctx -> codec -> pix_fmts [ i ] != AV_PIX_FMT_NONE		828489	0		!=			
ANR	829656	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		828489	0					
ANR	829657	PtrMemberAccess	avctx -> codec -> pix_fmts		828489	0					
ANR	829658	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829659	Identifier	avctx		828489	0					
ANR	829660	Identifier	codec		828489	1					
ANR	829661	Identifier	pix_fmts		828489	1					
ANR	829662	Identifier	i		828489	1					
ANR	829663	Identifier	AV_PIX_FMT_NONE		828489	1					
ANR	829664	PostIncDecOperationExpression	i ++	353:70:7360:7362	828489	2	True				
ANR	829665	Identifier	i		828489	0					
ANR	829666	IncDec	++		828489	1					
ANR	829667	IfStatement	if ( avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ] )		828489	3					
ANR	829668	Condition	avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ]	355:20:7386:7428	828489	0	True				
ANR	829669	EqualityExpression	avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ]		828489	0		==			
ANR	829670	PtrMemberAccess	avctx -> pix_fmt		828489	0					
ANR	829671	Identifier	avctx		828489	0					
ANR	829672	Identifier	pix_fmt		828489	1					
ANR	829673	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		828489	1					
ANR	829674	PtrMemberAccess	avctx -> codec -> pix_fmts		828489	0					
ANR	829675	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829676	Identifier	avctx		828489	0					
ANR	829677	Identifier	codec		828489	1					
ANR	829678	Identifier	pix_fmts		828489	1					
ANR	829679	Identifier	i		828489	1					
ANR	829680	BreakStatement	break ;	357:20:7452:7457	828489	1	True				
ANR	829681	IfStatement	if ( avctx -> codec -> pix_fmts [ i ] == AV_PIX_FMT_NONE && ! ( ( avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL ) )		828489	1					
ANR	829682	Condition	avctx -> codec -> pix_fmts [ i ] == AV_PIX_FMT_NONE && ! ( ( avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )	359:16:7476:7703	828489	0	True				
ANR	829683	AndExpression	avctx -> codec -> pix_fmts [ i ] == AV_PIX_FMT_NONE && ! ( ( avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )		828489	0		&&			
ANR	829684	EqualityExpression	avctx -> codec -> pix_fmts [ i ] == AV_PIX_FMT_NONE		828489	0		==			
ANR	829685	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		828489	0					
ANR	829686	PtrMemberAccess	avctx -> codec -> pix_fmts		828489	0					
ANR	829687	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829688	Identifier	avctx		828489	0					
ANR	829689	Identifier	codec		828489	1					
ANR	829690	Identifier	pix_fmts		828489	1					
ANR	829691	Identifier	i		828489	1					
ANR	829692	Identifier	AV_PIX_FMT_NONE		828489	1					
ANR	829693	UnaryOperationExpression	! ( ( avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )		828489	1					
ANR	829694	UnaryOperator	!		828489	0					
ANR	829695	AndExpression	( avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL		828489	1		&&			
ANR	829696	OrExpression	avctx -> codec_id == AV_CODEC_ID_MJPEG || avctx -> codec_id == AV_CODEC_ID_LJPEG		828489	0		||			
ANR	829697	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_MJPEG		828489	0		==			
ANR	829698	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829699	Identifier	avctx		828489	0					
ANR	829700	Identifier	codec_id		828489	1					
ANR	829701	Identifier	AV_CODEC_ID_MJPEG		828489	1					
ANR	829702	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_LJPEG		828489	1		==			
ANR	829703	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	829704	Identifier	avctx		828489	0					
ANR	829705	Identifier	codec_id		828489	1					
ANR	829706	Identifier	AV_CODEC_ID_LJPEG		828489	1					
ANR	829707	RelationalExpression	avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL		828489	1		<=			
ANR	829708	PtrMemberAccess	avctx -> strict_std_compliance		828489	0					
ANR	829709	Identifier	avctx		828489	0					
ANR	829710	Identifier	strict_std_compliance		828489	1					
ANR	829711	Identifier	FF_COMPLIANCE_UNOFFICIAL		828489	1					
ANR	829712	CompoundStatement		363:16:7616:7629	828489	1					
ANR	829713	IdentifierDeclStatement	char buf [ 128 ] ;	365:16:7725:7738	828489	0	True				
ANR	829714	IdentifierDecl	buf [ 128 ]		828489	0					
ANR	829715	IdentifierDeclType	char [ 128 ]		828489	0					
ANR	829716	Identifier	buf		828489	1					
ANR	829717	PrimaryExpression	128		828489	2					
ANR	829718	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%d"" , avctx -> pix_fmt )"	367:16:7757:7805	828489	1	True				
ANR	829719	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%d"" , avctx -> pix_fmt )"		828489	0					
ANR	829720	Callee	snprintf		828489	0					
ANR	829721	Identifier	snprintf		828489	0					
ANR	829722	ArgumentList	buf		828489	1					
ANR	829723	Argument	buf		828489	0					
ANR	829724	Identifier	buf		828489	0					
ANR	829725	Argument	sizeof ( buf )		828489	1					
ANR	829726	SizeofExpression	sizeof ( buf )		828489	0					
ANR	829727	Sizeof	sizeof		828489	0					
ANR	829728	SizeofOperand	buf		828489	1					
ANR	829729	Argument	"""%d"""		828489	2					
ANR	829730	PrimaryExpression	"""%d"""		828489	0					
ANR	829731	Argument	avctx -> pix_fmt		828489	3					
ANR	829732	PtrMemberAccess	avctx -> pix_fmt		828489	0					
ANR	829733	Identifier	avctx		828489	0					
ANR	829734	Identifier	pix_fmt		828489	1					
ANR	829735	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified pixel format %s is invalid or not supported\\n"" , ( char * ) av_x_if_null ( av_get_pix_fmt_name ( avctx -> pix_fmt ) , buf ) )"	369:16:7824:7998	828489	2	True				
ANR	829736	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified pixel format %s is invalid or not supported\\n"" , ( char * ) av_x_if_null ( av_get_pix_fmt_name ( avctx -> pix_fmt ) , buf ) )"		828489	0					
ANR	829737	Callee	av_log		828489	0					
ANR	829738	Identifier	av_log		828489	0					
ANR	829739	ArgumentList	avctx		828489	1					
ANR	829740	Argument	avctx		828489	0					
ANR	829741	Identifier	avctx		828489	0					
ANR	829742	Argument	AV_LOG_ERROR		828489	1					
ANR	829743	Identifier	AV_LOG_ERROR		828489	0					
ANR	829744	Argument	"""Specified pixel format %s is invalid or not supported\\n"""		828489	2					
ANR	829745	PrimaryExpression	"""Specified pixel format %s is invalid or not supported\\n"""		828489	0					
ANR	829746	Argument	"( char * ) av_x_if_null ( av_get_pix_fmt_name ( avctx -> pix_fmt ) , buf )"		828489	3					
ANR	829747	CastExpression	"( char * ) av_x_if_null ( av_get_pix_fmt_name ( avctx -> pix_fmt ) , buf )"		828489	0					
ANR	829748	CastTarget	char *		828489	0					
ANR	829749	CallExpression	"av_x_if_null ( av_get_pix_fmt_name ( avctx -> pix_fmt ) , buf )"		828489	1					
ANR	829750	Callee	av_x_if_null		828489	0					
ANR	829751	Identifier	av_x_if_null		828489	0					
ANR	829752	ArgumentList	av_get_pix_fmt_name ( avctx -> pix_fmt )		828489	1					
ANR	829753	Argument	av_get_pix_fmt_name ( avctx -> pix_fmt )		828489	0					
ANR	829754	CallExpression	av_get_pix_fmt_name ( avctx -> pix_fmt )		828489	0					
ANR	829755	Callee	av_get_pix_fmt_name		828489	0					
ANR	829756	Identifier	av_get_pix_fmt_name		828489	0					
ANR	829757	ArgumentList	avctx -> pix_fmt		828489	1					
ANR	829758	Argument	avctx -> pix_fmt		828489	0					
ANR	829759	PtrMemberAccess	avctx -> pix_fmt		828489	0					
ANR	829760	Identifier	avctx		828489	0					
ANR	829761	Identifier	pix_fmt		828489	1					
ANR	829762	Argument	buf		828489	1					
ANR	829763	Identifier	buf		828489	0					
ANR	829764	ExpressionStatement	ret = AVERROR ( EINVAL )	373:16:8017:8038	828489	3	True				
ANR	829765	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829766	Identifier	ret		828489	0					
ANR	829767	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829768	Callee	AVERROR		828489	0					
ANR	829769	Identifier	AVERROR		828489	0					
ANR	829770	ArgumentList	EINVAL		828489	1					
ANR	829771	Argument	EINVAL		828489	0					
ANR	829772	Identifier	EINVAL		828489	0					
ANR	829773	GotoStatement	goto free_and_end ;	375:16:8057:8074	828489	4	True				
ANR	829774	Identifier	free_and_end		828489	0					
ANR	829775	IfStatement	if ( avctx -> codec -> supported_samplerates )		828489	3					
ANR	829776	Condition	avctx -> codec -> supported_samplerates	381:12:8115:8149	828489	0	True				
ANR	829777	PtrMemberAccess	avctx -> codec -> supported_samplerates		828489	0					
ANR	829778	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829779	Identifier	avctx		828489	0					
ANR	829780	Identifier	codec		828489	1					
ANR	829781	Identifier	supported_samplerates		828489	1					
ANR	829782	CompoundStatement		379:49:8043:8043	828489	1					
ANR	829783	ForStatement	for ( i = 0 ; avctx -> codec -> supported_samplerates [ i ] != 0 ; i ++ )		828489	0					
ANR	829784	ForInit	i = 0 ;	383:17:8172:8177	828489	0	True				
ANR	829785	AssignmentExpression	i = 0		828489	0		=			
ANR	829786	Identifier	i		828489	0					
ANR	829787	PrimaryExpression	0		828489	1					
ANR	829788	Condition	avctx -> codec -> supported_samplerates [ i ] != 0	383:24:8179:8221	828489	1	True				
ANR	829789	EqualityExpression	avctx -> codec -> supported_samplerates [ i ] != 0		828489	0		!=			
ANR	829790	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		828489	0					
ANR	829791	PtrMemberAccess	avctx -> codec -> supported_samplerates		828489	0					
ANR	829792	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829793	Identifier	avctx		828489	0					
ANR	829794	Identifier	codec		828489	1					
ANR	829795	Identifier	supported_samplerates		828489	1					
ANR	829796	Identifier	i		828489	1					
ANR	829797	PrimaryExpression	0		828489	1					
ANR	829798	PostIncDecOperationExpression	i ++	383:69:8224:8226	828489	2	True				
ANR	829799	Identifier	i		828489	0					
ANR	829800	IncDec	++		828489	1					
ANR	829801	IfStatement	if ( avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ] )		828489	3					
ANR	829802	Condition	avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ]	385:20:8250:8309	828489	0	True				
ANR	829803	EqualityExpression	avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ]		828489	0		==			
ANR	829804	PtrMemberAccess	avctx -> sample_rate		828489	0					
ANR	829805	Identifier	avctx		828489	0					
ANR	829806	Identifier	sample_rate		828489	1					
ANR	829807	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		828489	1					
ANR	829808	PtrMemberAccess	avctx -> codec -> supported_samplerates		828489	0					
ANR	829809	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829810	Identifier	avctx		828489	0					
ANR	829811	Identifier	codec		828489	1					
ANR	829812	Identifier	supported_samplerates		828489	1					
ANR	829813	Identifier	i		828489	1					
ANR	829814	BreakStatement	break ;	387:20:8333:8338	828489	1	True				
ANR	829815	IfStatement	if ( avctx -> codec -> supported_samplerates [ i ] == 0 )		828489	1					
ANR	829816	Condition	avctx -> codec -> supported_samplerates [ i ] == 0	389:16:8357:8399	828489	0	True				
ANR	829817	EqualityExpression	avctx -> codec -> supported_samplerates [ i ] == 0		828489	0		==			
ANR	829818	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		828489	0					
ANR	829819	PtrMemberAccess	avctx -> codec -> supported_samplerates		828489	0					
ANR	829820	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829821	Identifier	avctx		828489	0					
ANR	829822	Identifier	codec		828489	1					
ANR	829823	Identifier	supported_samplerates		828489	1					
ANR	829824	Identifier	i		828489	1					
ANR	829825	PrimaryExpression	0		828489	1					
ANR	829826	CompoundStatement		387:61:8293:8293	828489	1					
ANR	829827	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample rate %d is not supported\\n"" , avctx -> sample_rate )"	391:16:8421:8539	828489	0	True				
ANR	829828	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample rate %d is not supported\\n"" , avctx -> sample_rate )"		828489	0					
ANR	829829	Callee	av_log		828489	0					
ANR	829830	Identifier	av_log		828489	0					
ANR	829831	ArgumentList	avctx		828489	1					
ANR	829832	Argument	avctx		828489	0					
ANR	829833	Identifier	avctx		828489	0					
ANR	829834	Argument	AV_LOG_ERROR		828489	1					
ANR	829835	Identifier	AV_LOG_ERROR		828489	0					
ANR	829836	Argument	"""Specified sample rate %d is not supported\\n"""		828489	2					
ANR	829837	PrimaryExpression	"""Specified sample rate %d is not supported\\n"""		828489	0					
ANR	829838	Argument	avctx -> sample_rate		828489	3					
ANR	829839	PtrMemberAccess	avctx -> sample_rate		828489	0					
ANR	829840	Identifier	avctx		828489	0					
ANR	829841	Identifier	sample_rate		828489	1					
ANR	829842	ExpressionStatement	ret = AVERROR ( EINVAL )	395:16:8558:8579	828489	1	True				
ANR	829843	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829844	Identifier	ret		828489	0					
ANR	829845	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829846	Callee	AVERROR		828489	0					
ANR	829847	Identifier	AVERROR		828489	0					
ANR	829848	ArgumentList	EINVAL		828489	1					
ANR	829849	Argument	EINVAL		828489	0					
ANR	829850	Identifier	EINVAL		828489	0					
ANR	829851	GotoStatement	goto free_and_end ;	397:16:8598:8615	828489	2	True				
ANR	829852	Identifier	free_and_end		828489	0					
ANR	829853	IfStatement	if ( avctx -> codec -> channel_layouts )		828489	4					
ANR	829854	Condition	avctx -> codec -> channel_layouts	403:12:8656:8684	828489	0	True				
ANR	829855	PtrMemberAccess	avctx -> codec -> channel_layouts		828489	0					
ANR	829856	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829857	Identifier	avctx		828489	0					
ANR	829858	Identifier	codec		828489	1					
ANR	829859	Identifier	channel_layouts		828489	1					
ANR	829860	CompoundStatement		401:43:8578:8578	828489	1					
ANR	829861	IfStatement	if ( ! avctx -> channel_layout )		828489	0					
ANR	829862	Condition	! avctx -> channel_layout	405:16:8706:8727	828489	0	True				
ANR	829863	UnaryOperationExpression	! avctx -> channel_layout		828489	0					
ANR	829864	UnaryOperator	!		828489	0					
ANR	829865	PtrMemberAccess	avctx -> channel_layout		828489	1					
ANR	829866	Identifier	avctx		828489	0					
ANR	829867	Identifier	channel_layout		828489	1					
ANR	829868	CompoundStatement		403:40:8621:8621	828489	1					
ANR	829869	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Channel layout not specified\\n"" )"	407:16:8749:8812	828489	0	True				
ANR	829870	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Channel layout not specified\\n"" )"		828489	0					
ANR	829871	Callee	av_log		828489	0					
ANR	829872	Identifier	av_log		828489	0					
ANR	829873	ArgumentList	avctx		828489	1					
ANR	829874	Argument	avctx		828489	0					
ANR	829875	Identifier	avctx		828489	0					
ANR	829876	Argument	AV_LOG_WARNING		828489	1					
ANR	829877	Identifier	AV_LOG_WARNING		828489	0					
ANR	829878	Argument	"""Channel layout not specified\\n"""		828489	2					
ANR	829879	PrimaryExpression	"""Channel layout not specified\\n"""		828489	0					
ANR	829880	ElseStatement	else		828489	0					
ANR	829881	CompoundStatement		407:19:8725:8725	828489	0					
ANR	829882	ForStatement	for ( i = 0 ; avctx -> codec -> channel_layouts [ i ] != 0 ; i ++ )		828489	0					
ANR	829883	ForInit	i = 0 ;	411:21:8858:8863	828489	0	True				
ANR	829884	AssignmentExpression	i = 0		828489	0		=			
ANR	829885	Identifier	i		828489	0					
ANR	829886	PrimaryExpression	0		828489	1					
ANR	829887	Condition	avctx -> codec -> channel_layouts [ i ] != 0	411:28:8865:8901	828489	1	True				
ANR	829888	EqualityExpression	avctx -> codec -> channel_layouts [ i ] != 0		828489	0		!=			
ANR	829889	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		828489	0					
ANR	829890	PtrMemberAccess	avctx -> codec -> channel_layouts		828489	0					
ANR	829891	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829892	Identifier	avctx		828489	0					
ANR	829893	Identifier	codec		828489	1					
ANR	829894	Identifier	channel_layouts		828489	1					
ANR	829895	Identifier	i		828489	1					
ANR	829896	PrimaryExpression	0		828489	1					
ANR	829897	PostIncDecOperationExpression	i ++	411:67:8904:8906	828489	2	True				
ANR	829898	Identifier	i		828489	0					
ANR	829899	IncDec	++		828489	1					
ANR	829900	IfStatement	if ( avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ] )		828489	3					
ANR	829901	Condition	avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ]	413:24:8934:8990	828489	0	True				
ANR	829902	EqualityExpression	avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ]		828489	0		==			
ANR	829903	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	829904	Identifier	avctx		828489	0					
ANR	829905	Identifier	channel_layout		828489	1					
ANR	829906	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		828489	1					
ANR	829907	PtrMemberAccess	avctx -> codec -> channel_layouts		828489	0					
ANR	829908	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829909	Identifier	avctx		828489	0					
ANR	829910	Identifier	codec		828489	1					
ANR	829911	Identifier	channel_layouts		828489	1					
ANR	829912	Identifier	i		828489	1					
ANR	829913	BreakStatement	break ;	415:24:9018:9023	828489	1	True				
ANR	829914	IfStatement	if ( avctx -> codec -> channel_layouts [ i ] == 0 )		828489	1					
ANR	829915	Condition	avctx -> codec -> channel_layouts [ i ] == 0	417:20:9046:9082	828489	0	True				
ANR	829916	EqualityExpression	avctx -> codec -> channel_layouts [ i ] == 0		828489	0		==			
ANR	829917	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		828489	0					
ANR	829918	PtrMemberAccess	avctx -> codec -> channel_layouts		828489	0					
ANR	829919	PtrMemberAccess	avctx -> codec		828489	0					
ANR	829920	Identifier	avctx		828489	0					
ANR	829921	Identifier	codec		828489	1					
ANR	829922	Identifier	channel_layouts		828489	1					
ANR	829923	Identifier	i		828489	1					
ANR	829924	PrimaryExpression	0		828489	1					
ANR	829925	CompoundStatement		417:20:8999:9012	828489	1					
ANR	829926	IdentifierDeclStatement	char buf [ 512 ] ;	419:20:9108:9121	828489	0	True				
ANR	829927	IdentifierDecl	buf [ 512 ]		828489	0					
ANR	829928	IdentifierDeclType	char [ 512 ]		828489	0					
ANR	829929	Identifier	buf		828489	1					
ANR	829930	PrimaryExpression	512		828489	2					
ANR	829931	ExpressionStatement	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"	421:20:9144:9217	828489	1	True				
ANR	829932	CallExpression	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"		828489	0					
ANR	829933	Callee	av_get_channel_layout_string		828489	0					
ANR	829934	Identifier	av_get_channel_layout_string		828489	0					
ANR	829935	ArgumentList	buf		828489	1					
ANR	829936	Argument	buf		828489	0					
ANR	829937	Identifier	buf		828489	0					
ANR	829938	Argument	sizeof ( buf )		828489	1					
ANR	829939	SizeofExpression	sizeof ( buf )		828489	0					
ANR	829940	Sizeof	sizeof		828489	0					
ANR	829941	SizeofOperand	buf		828489	1					
ANR	829942	Argument	- 1		828489	2					
ANR	829943	UnaryOperationExpression	- 1		828489	0					
ANR	829944	UnaryOperator	-		828489	0					
ANR	829945	PrimaryExpression	1		828489	1					
ANR	829946	Argument	avctx -> channel_layout		828489	3					
ANR	829947	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	829948	Identifier	avctx		828489	0					
ANR	829949	Identifier	channel_layout		828489	1					
ANR	829950	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified channel layout '%s' is not supported\\n"" , buf )"	423:20:9240:9324	828489	2	True				
ANR	829951	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified channel layout '%s' is not supported\\n"" , buf )"		828489	0					
ANR	829952	Callee	av_log		828489	0					
ANR	829953	Identifier	av_log		828489	0					
ANR	829954	ArgumentList	avctx		828489	1					
ANR	829955	Argument	avctx		828489	0					
ANR	829956	Identifier	avctx		828489	0					
ANR	829957	Argument	AV_LOG_ERROR		828489	1					
ANR	829958	Identifier	AV_LOG_ERROR		828489	0					
ANR	829959	Argument	"""Specified channel layout '%s' is not supported\\n"""		828489	2					
ANR	829960	PrimaryExpression	"""Specified channel layout '%s' is not supported\\n"""		828489	0					
ANR	829961	Argument	buf		828489	3					
ANR	829962	Identifier	buf		828489	0					
ANR	829963	ExpressionStatement	ret = AVERROR ( EINVAL )	425:20:9347:9368	828489	3	True				
ANR	829964	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	829965	Identifier	ret		828489	0					
ANR	829966	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	829967	Callee	AVERROR		828489	0					
ANR	829968	Identifier	AVERROR		828489	0					
ANR	829969	ArgumentList	EINVAL		828489	1					
ANR	829970	Argument	EINVAL		828489	0					
ANR	829971	Identifier	EINVAL		828489	0					
ANR	829972	GotoStatement	goto free_and_end ;	427:20:9391:9408	828489	4	True				
ANR	829973	Identifier	free_and_end		828489	0					
ANR	829974	IfStatement	if ( avctx -> channel_layout && avctx -> channels )		828489	5					
ANR	829975	Condition	avctx -> channel_layout && avctx -> channels	435:12:9468:9507	828489	0	True				
ANR	829976	AndExpression	avctx -> channel_layout && avctx -> channels		828489	0		&&			
ANR	829977	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	829978	Identifier	avctx		828489	0					
ANR	829979	Identifier	channel_layout		828489	1					
ANR	829980	PtrMemberAccess	avctx -> channels		828489	1					
ANR	829981	Identifier	avctx		828489	0					
ANR	829982	Identifier	channels		828489	1					
ANR	829983	CompoundStatement		435:12:9416:9487	828489	1					
ANR	829984	IdentifierDeclStatement	int channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout ) ;	437:12:9525:9596	828489	0	True				
ANR	829985	IdentifierDecl	channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	0					
ANR	829986	IdentifierDeclType	int		828489	0					
ANR	829987	Identifier	channels		828489	1					
ANR	829988	AssignmentExpression	channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	2		=			
ANR	829989	Identifier	channels		828489	0					
ANR	829990	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	1					
ANR	829991	Callee	av_get_channel_layout_nb_channels		828489	0					
ANR	829992	Identifier	av_get_channel_layout_nb_channels		828489	0					
ANR	829993	ArgumentList	avctx -> channel_layout		828489	1					
ANR	829994	Argument	avctx -> channel_layout		828489	0					
ANR	829995	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	829996	Identifier	avctx		828489	0					
ANR	829997	Identifier	channel_layout		828489	1					
ANR	829998	IfStatement	if ( channels != avctx -> channels )		828489	1					
ANR	829999	Condition	channels != avctx -> channels	439:16:9615:9641	828489	0	True				
ANR	830000	EqualityExpression	channels != avctx -> channels		828489	0		!=			
ANR	830001	Identifier	channels		828489	0					
ANR	830002	PtrMemberAccess	avctx -> channels		828489	1					
ANR	830003	Identifier	avctx		828489	0					
ANR	830004	Identifier	channels		828489	1					
ANR	830005	CompoundStatement		439:16:9554:9567	828489	1					
ANR	830006	IdentifierDeclStatement	char buf [ 512 ] ;	441:16:9663:9676	828489	0	True				
ANR	830007	IdentifierDecl	buf [ 512 ]		828489	0					
ANR	830008	IdentifierDeclType	char [ 512 ]		828489	0					
ANR	830009	Identifier	buf		828489	1					
ANR	830010	PrimaryExpression	512		828489	2					
ANR	830011	ExpressionStatement	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"	443:16:9695:9768	828489	1	True				
ANR	830012	CallExpression	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"		828489	0					
ANR	830013	Callee	av_get_channel_layout_string		828489	0					
ANR	830014	Identifier	av_get_channel_layout_string		828489	0					
ANR	830015	ArgumentList	buf		828489	1					
ANR	830016	Argument	buf		828489	0					
ANR	830017	Identifier	buf		828489	0					
ANR	830018	Argument	sizeof ( buf )		828489	1					
ANR	830019	SizeofExpression	sizeof ( buf )		828489	0					
ANR	830020	Sizeof	sizeof		828489	0					
ANR	830021	SizeofOperand	buf		828489	1					
ANR	830022	Argument	- 1		828489	2					
ANR	830023	UnaryOperationExpression	- 1		828489	0					
ANR	830024	UnaryOperator	-		828489	0					
ANR	830025	PrimaryExpression	1		828489	1					
ANR	830026	Argument	avctx -> channel_layout		828489	3					
ANR	830027	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830028	Identifier	avctx		828489	0					
ANR	830029	Identifier	channel_layout		828489	1					
ANR	830030	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Channel layout '%s' with %d channels does not match number of specified channels %d\\n"" , buf , channels , avctx -> channels )"	445:16:9787:9983	828489	2	True				
ANR	830031	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Channel layout '%s' with %d channels does not match number of specified channels %d\\n"" , buf , channels , avctx -> channels )"		828489	0					
ANR	830032	Callee	av_log		828489	0					
ANR	830033	Identifier	av_log		828489	0					
ANR	830034	ArgumentList	avctx		828489	1					
ANR	830035	Argument	avctx		828489	0					
ANR	830036	Identifier	avctx		828489	0					
ANR	830037	Argument	AV_LOG_ERROR		828489	1					
ANR	830038	Identifier	AV_LOG_ERROR		828489	0					
ANR	830039	Argument	"""Channel layout '%s' with %d channels does not match number of specified channels %d\\n"""		828489	2					
ANR	830040	PrimaryExpression	"""Channel layout '%s' with %d channels does not match number of specified channels %d\\n"""		828489	0					
ANR	830041	Argument	buf		828489	3					
ANR	830042	Identifier	buf		828489	0					
ANR	830043	Argument	channels		828489	4					
ANR	830044	Identifier	channels		828489	0					
ANR	830045	Argument	avctx -> channels		828489	5					
ANR	830046	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830047	Identifier	avctx		828489	0					
ANR	830048	Identifier	channels		828489	1					
ANR	830049	ExpressionStatement	ret = AVERROR ( EINVAL )	451:16:10002:10023	828489	3	True				
ANR	830050	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	830051	Identifier	ret		828489	0					
ANR	830052	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	830053	Callee	AVERROR		828489	0					
ANR	830054	Identifier	AVERROR		828489	0					
ANR	830055	ArgumentList	EINVAL		828489	1					
ANR	830056	Argument	EINVAL		828489	0					
ANR	830057	Identifier	EINVAL		828489	0					
ANR	830058	GotoStatement	goto free_and_end ;	453:16:10042:10059	828489	4	True				
ANR	830059	Identifier	free_and_end		828489	0					
ANR	830060	ElseStatement	else		828489	0					
ANR	830061	IfStatement	if ( avctx -> channel_layout )		828489	0					
ANR	830062	Condition	avctx -> channel_layout	457:19:10096:10116	828489	0	True				
ANR	830063	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830064	Identifier	avctx		828489	0					
ANR	830065	Identifier	channel_layout		828489	1					
ANR	830066	CompoundStatement		455:42:10010:10010	828489	1					
ANR	830067	ExpressionStatement	avctx -> channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )	459:12:10134:10208	828489	0	True				
ANR	830068	AssignmentExpression	avctx -> channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	0		=			
ANR	830069	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830070	Identifier	avctx		828489	0					
ANR	830071	Identifier	channels		828489	1					
ANR	830072	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	1					
ANR	830073	Callee	av_get_channel_layout_nb_channels		828489	0					
ANR	830074	Identifier	av_get_channel_layout_nb_channels		828489	0					
ANR	830075	ArgumentList	avctx -> channel_layout		828489	1					
ANR	830076	Argument	avctx -> channel_layout		828489	0					
ANR	830077	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830078	Identifier	avctx		828489	0					
ANR	830079	Identifier	channel_layout		828489	1					
ANR	830080	IfStatement	if ( avctx -> codec_type == AVMEDIA_TYPE_VIDEO && avctx -> codec_id != AV_CODEC_ID_PNG )		828489	6					
ANR	830081	Condition	avctx -> codec_type == AVMEDIA_TYPE_VIDEO && avctx -> codec_id != AV_CODEC_ID_PNG	463:11:10233:10321	828489	0	True				
ANR	830082	AndExpression	avctx -> codec_type == AVMEDIA_TYPE_VIDEO && avctx -> codec_id != AV_CODEC_ID_PNG		828489	0		&&			
ANR	830083	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_VIDEO		828489	0		==			
ANR	830084	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	830085	Identifier	avctx		828489	0					
ANR	830086	Identifier	codec_type		828489	1					
ANR	830087	Identifier	AVMEDIA_TYPE_VIDEO		828489	1					
ANR	830088	EqualityExpression	avctx -> codec_id != AV_CODEC_ID_PNG		828489	1		!=			
ANR	830089	PtrMemberAccess	avctx -> codec_id		828489	0					
ANR	830090	Identifier	avctx		828489	0					
ANR	830091	Identifier	codec_id		828489	1					
ANR	830092	Identifier	AV_CODEC_ID_PNG		828489	1					
ANR	830093	CompoundStatement		465:10:10240:10240	828489	1					
ANR	830094	IfStatement	if ( avctx -> width <= 0 || avctx -> height <= 0 )		828489	0					
ANR	830095	Condition	avctx -> width <= 0 || avctx -> height <= 0	469:16:10368:10406	828489	0	True				
ANR	830096	OrExpression	avctx -> width <= 0 || avctx -> height <= 0		828489	0		||			
ANR	830097	RelationalExpression	avctx -> width <= 0		828489	0		<=			
ANR	830098	PtrMemberAccess	avctx -> width		828489	0					
ANR	830099	Identifier	avctx		828489	0					
ANR	830100	Identifier	width		828489	1					
ANR	830101	PrimaryExpression	0		828489	1					
ANR	830102	RelationalExpression	avctx -> height <= 0		828489	1		<=			
ANR	830103	PtrMemberAccess	avctx -> height		828489	0					
ANR	830104	Identifier	avctx		828489	0					
ANR	830105	Identifier	height		828489	1					
ANR	830106	PrimaryExpression	0		828489	1					
ANR	830107	CompoundStatement		467:57:10300:10300	828489	1					
ANR	830108	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""dimensions not set\\n"" )"	471:16:10428:10479	828489	0	True				
ANR	830109	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""dimensions not set\\n"" )"		828489	0					
ANR	830110	Callee	av_log		828489	0					
ANR	830111	Identifier	av_log		828489	0					
ANR	830112	ArgumentList	avctx		828489	1					
ANR	830113	Argument	avctx		828489	0					
ANR	830114	Identifier	avctx		828489	0					
ANR	830115	Argument	AV_LOG_ERROR		828489	1					
ANR	830116	Identifier	AV_LOG_ERROR		828489	0					
ANR	830117	Argument	"""dimensions not set\\n"""		828489	2					
ANR	830118	PrimaryExpression	"""dimensions not set\\n"""		828489	0					
ANR	830119	ExpressionStatement	ret = AVERROR ( EINVAL )	473:16:10498:10519	828489	1	True				
ANR	830120	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	830121	Identifier	ret		828489	0					
ANR	830122	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	830123	Callee	AVERROR		828489	0					
ANR	830124	Identifier	AVERROR		828489	0					
ANR	830125	ArgumentList	EINVAL		828489	1					
ANR	830126	Argument	EINVAL		828489	0					
ANR	830127	Identifier	EINVAL		828489	0					
ANR	830128	GotoStatement	goto free_and_end ;	475:16:10538:10555	828489	2	True				
ANR	830129	Identifier	free_and_end		828489	0					
ANR	830130	IfStatement	if ( ( avctx -> codec_type == AVMEDIA_TYPE_VIDEO || avctx -> codec_type == AVMEDIA_TYPE_AUDIO ) && avctx -> bit_rate > 0 && avctx -> bit_rate < 1000 )		828489	7					
ANR	830131	Condition	( avctx -> codec_type == AVMEDIA_TYPE_VIDEO || avctx -> codec_type == AVMEDIA_TYPE_AUDIO ) && avctx -> bit_rate > 0 && avctx -> bit_rate < 1000	481:15:10599:10740	828489	0	True				
ANR	830132	AndExpression	( avctx -> codec_type == AVMEDIA_TYPE_VIDEO || avctx -> codec_type == AVMEDIA_TYPE_AUDIO ) && avctx -> bit_rate > 0 && avctx -> bit_rate < 1000		828489	0		&&			
ANR	830133	OrExpression	avctx -> codec_type == AVMEDIA_TYPE_VIDEO || avctx -> codec_type == AVMEDIA_TYPE_AUDIO		828489	0		||			
ANR	830134	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_VIDEO		828489	0		==			
ANR	830135	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	830136	Identifier	avctx		828489	0					
ANR	830137	Identifier	codec_type		828489	1					
ANR	830138	Identifier	AVMEDIA_TYPE_VIDEO		828489	1					
ANR	830139	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_AUDIO		828489	1		==			
ANR	830140	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	830141	Identifier	avctx		828489	0					
ANR	830142	Identifier	codec_type		828489	1					
ANR	830143	Identifier	AVMEDIA_TYPE_AUDIO		828489	1					
ANR	830144	AndExpression	avctx -> bit_rate > 0 && avctx -> bit_rate < 1000		828489	1		&&			
ANR	830145	RelationalExpression	avctx -> bit_rate > 0		828489	0		>			
ANR	830146	PtrMemberAccess	avctx -> bit_rate		828489	0					
ANR	830147	Identifier	avctx		828489	0					
ANR	830148	Identifier	bit_rate		828489	1					
ANR	830149	PrimaryExpression	0		828489	1					
ANR	830150	RelationalExpression	avctx -> bit_rate < 1000		828489	1		<			
ANR	830151	PtrMemberAccess	avctx -> bit_rate		828489	0					
ANR	830152	Identifier	avctx		828489	0					
ANR	830153	Identifier	bit_rate		828489	1					
ANR	830154	PrimaryExpression	1000		828489	1					
ANR	830155	CompoundStatement		481:58:10634:10634	828489	1					
ANR	830156	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Bitrate %d is extremely low, maybe you mean %dk\\n"" , avctx -> bit_rate , avctx -> bit_rate )"	485:12:10758:10874	828489	0	True				
ANR	830157	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Bitrate %d is extremely low, maybe you mean %dk\\n"" , avctx -> bit_rate , avctx -> bit_rate )"		828489	0					
ANR	830158	Callee	av_log		828489	0					
ANR	830159	Identifier	av_log		828489	0					
ANR	830160	ArgumentList	avctx		828489	1					
ANR	830161	Argument	avctx		828489	0					
ANR	830162	Identifier	avctx		828489	0					
ANR	830163	Argument	AV_LOG_WARNING		828489	1					
ANR	830164	Identifier	AV_LOG_WARNING		828489	0					
ANR	830165	Argument	"""Bitrate %d is extremely low, maybe you mean %dk\\n"""		828489	2					
ANR	830166	PrimaryExpression	"""Bitrate %d is extremely low, maybe you mean %dk\\n"""		828489	0					
ANR	830167	Argument	avctx -> bit_rate		828489	3					
ANR	830168	PtrMemberAccess	avctx -> bit_rate		828489	0					
ANR	830169	Identifier	avctx		828489	0					
ANR	830170	Identifier	bit_rate		828489	1					
ANR	830171	Argument	avctx -> bit_rate		828489	4					
ANR	830172	PtrMemberAccess	avctx -> bit_rate		828489	0					
ANR	830173	Identifier	avctx		828489	0					
ANR	830174	Identifier	bit_rate		828489	1					
ANR	830175	IfStatement	if ( ! avctx -> rc_initial_buffer_occupancy )		828489	8					
ANR	830176	Condition	! avctx -> rc_initial_buffer_occupancy	491:12:10902:10936	828489	0	True				
ANR	830177	UnaryOperationExpression	! avctx -> rc_initial_buffer_occupancy		828489	0					
ANR	830178	UnaryOperator	!		828489	0					
ANR	830179	PtrMemberAccess	avctx -> rc_initial_buffer_occupancy		828489	1					
ANR	830180	Identifier	avctx		828489	0					
ANR	830181	Identifier	rc_initial_buffer_occupancy		828489	1					
ANR	830182	ExpressionStatement	avctx -> rc_initial_buffer_occupancy = avctx -> rc_buffer_size * 3 / 4	493:12:10952:11018	828489	1	True				
ANR	830183	AssignmentExpression	avctx -> rc_initial_buffer_occupancy = avctx -> rc_buffer_size * 3 / 4		828489	0		=			
ANR	830184	PtrMemberAccess	avctx -> rc_initial_buffer_occupancy		828489	0					
ANR	830185	Identifier	avctx		828489	0					
ANR	830186	Identifier	rc_initial_buffer_occupancy		828489	1					
ANR	830187	MultiplicativeExpression	avctx -> rc_buffer_size * 3 / 4		828489	1		*			
ANR	830188	PtrMemberAccess	avctx -> rc_buffer_size		828489	0					
ANR	830189	Identifier	avctx		828489	0					
ANR	830190	Identifier	rc_buffer_size		828489	1					
ANR	830191	MultiplicativeExpression	3 / 4		828489	1		/			
ANR	830192	PrimaryExpression	3		828489	0					
ANR	830193	PrimaryExpression	4		828489	1					
ANR	830194	ExpressionStatement	avctx -> pts_correction_num_faulty_pts = avctx -> pts_correction_num_faulty_dts = 0	499:4:11034:11118	828489	33	True				
ANR	830195	AssignmentExpression	avctx -> pts_correction_num_faulty_pts = avctx -> pts_correction_num_faulty_dts = 0		828489	0		=			
ANR	830196	PtrMemberAccess	avctx -> pts_correction_num_faulty_pts		828489	0					
ANR	830197	Identifier	avctx		828489	0					
ANR	830198	Identifier	pts_correction_num_faulty_pts		828489	1					
ANR	830199	AssignmentExpression	avctx -> pts_correction_num_faulty_dts = 0		828489	1		=			
ANR	830200	PtrMemberAccess	avctx -> pts_correction_num_faulty_dts		828489	0					
ANR	830201	Identifier	avctx		828489	0					
ANR	830202	Identifier	pts_correction_num_faulty_dts		828489	1					
ANR	830203	PrimaryExpression	0		828489	1					
ANR	830204	ExpressionStatement	avctx -> pts_correction_last_pts = avctx -> pts_correction_last_dts = INT64_MIN	503:4:11125:11205	828489	34	True				
ANR	830205	AssignmentExpression	avctx -> pts_correction_last_pts = avctx -> pts_correction_last_dts = INT64_MIN		828489	0		=			
ANR	830206	PtrMemberAccess	avctx -> pts_correction_last_pts		828489	0					
ANR	830207	Identifier	avctx		828489	0					
ANR	830208	Identifier	pts_correction_last_pts		828489	1					
ANR	830209	AssignmentExpression	avctx -> pts_correction_last_dts = INT64_MIN		828489	1		=			
ANR	830210	PtrMemberAccess	avctx -> pts_correction_last_dts		828489	0					
ANR	830211	Identifier	avctx		828489	0					
ANR	830212	Identifier	pts_correction_last_dts		828489	1					
ANR	830213	Identifier	INT64_MIN		828489	1					
ANR	830214	IfStatement	if ( avctx -> codec -> init && ( ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) || avctx -> internal -> frame_thread_encoder ) )		828489	35					
ANR	830215	Condition	avctx -> codec -> init && ( ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) || avctx -> internal -> frame_thread_encoder )	509:11:11221:11338	828489	0	True				
ANR	830216	AndExpression	avctx -> codec -> init && ( ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) || avctx -> internal -> frame_thread_encoder )		828489	0		&&			
ANR	830217	PtrMemberAccess	avctx -> codec -> init		828489	0					
ANR	830218	PtrMemberAccess	avctx -> codec		828489	0					
ANR	830219	Identifier	avctx		828489	0					
ANR	830220	Identifier	codec		828489	1					
ANR	830221	Identifier	init		828489	1					
ANR	830222	OrExpression	! ( avctx -> active_thread_type & FF_THREAD_FRAME ) || avctx -> internal -> frame_thread_encoder		828489	1		||			
ANR	830223	UnaryOperationExpression	! ( avctx -> active_thread_type & FF_THREAD_FRAME )		828489	0					
ANR	830224	UnaryOperator	!		828489	0					
ANR	830225	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		828489	1		&			
ANR	830226	PtrMemberAccess	avctx -> active_thread_type		828489	0					
ANR	830227	Identifier	avctx		828489	0					
ANR	830228	Identifier	active_thread_type		828489	1					
ANR	830229	Identifier	FF_THREAD_FRAME		828489	1					
ANR	830230	PtrMemberAccess	avctx -> internal -> frame_thread_encoder		828489	1					
ANR	830231	PtrMemberAccess	avctx -> internal		828489	0					
ANR	830232	Identifier	avctx		828489	0					
ANR	830233	Identifier	internal		828489	1					
ANR	830234	Identifier	frame_thread_encoder		828489	1					
ANR	830235	CompoundStatement		509:51:11232:11232	828489	1					
ANR	830236	ExpressionStatement	ret = avctx -> codec -> init ( avctx )	513:8:11352:11383	828489	0	True				
ANR	830237	AssignmentExpression	ret = avctx -> codec -> init ( avctx )		828489	0		=			
ANR	830238	Identifier	ret		828489	0					
ANR	830239	CallExpression	avctx -> codec -> init ( avctx )		828489	1					
ANR	830240	Callee	avctx -> codec -> init		828489	0					
ANR	830241	PtrMemberAccess	avctx -> codec -> init		828489	0					
ANR	830242	PtrMemberAccess	avctx -> codec		828489	0					
ANR	830243	Identifier	avctx		828489	0					
ANR	830244	Identifier	codec		828489	1					
ANR	830245	Identifier	init		828489	1					
ANR	830246	ArgumentList	avctx		828489	1					
ANR	830247	Argument	avctx		828489	0					
ANR	830248	Identifier	avctx		828489	0					
ANR	830249	IfStatement	if ( ret < 0 )		828489	1					
ANR	830250	Condition	ret < 0	515:12:11398:11404	828489	0	True				
ANR	830251	RelationalExpression	ret < 0		828489	0		<			
ANR	830252	Identifier	ret		828489	0					
ANR	830253	PrimaryExpression	0		828489	1					
ANR	830254	CompoundStatement		513:21:11298:11298	828489	1					
ANR	830255	GotoStatement	goto free_and_end ;	517:12:11422:11439	828489	0	True				
ANR	830256	Identifier	free_and_end		828489	0					
ANR	830257	ExpressionStatement	ret = 0	525:4:11466:11471	828489	36	True				
ANR	830258	AssignmentExpression	ret = 0		828489	0		=			
ANR	830259	Identifier	ret		828489	0					
ANR	830260	PrimaryExpression	0		828489	1					
ANR	830261	IfStatement	if ( av_codec_is_decoder ( avctx -> codec ) )		828489	37					
ANR	830262	Condition	av_codec_is_decoder ( avctx -> codec )	529:8:11484:11516	828489	0	True				
ANR	830263	CallExpression	av_codec_is_decoder ( avctx -> codec )		828489	0					
ANR	830264	Callee	av_codec_is_decoder		828489	0					
ANR	830265	Identifier	av_codec_is_decoder		828489	0					
ANR	830266	ArgumentList	avctx -> codec		828489	1					
ANR	830267	Argument	avctx -> codec		828489	0					
ANR	830268	PtrMemberAccess	avctx -> codec		828489	0					
ANR	830269	Identifier	avctx		828489	0					
ANR	830270	Identifier	codec		828489	1					
ANR	830271	CompoundStatement		527:43:11410:11410	828489	1					
ANR	830272	IfStatement	if ( ! avctx -> bit_rate )		828489	0					
ANR	830273	Condition	! avctx -> bit_rate	531:12:11534:11549	828489	0	True				
ANR	830274	UnaryOperationExpression	! avctx -> bit_rate		828489	0					
ANR	830275	UnaryOperator	!		828489	0					
ANR	830276	PtrMemberAccess	avctx -> bit_rate		828489	1					
ANR	830277	Identifier	avctx		828489	0					
ANR	830278	Identifier	bit_rate		828489	1					
ANR	830279	ExpressionStatement	avctx -> bit_rate = get_bit_rate ( avctx )	533:12:11565:11602	828489	1	True				
ANR	830280	AssignmentExpression	avctx -> bit_rate = get_bit_rate ( avctx )		828489	0		=			
ANR	830281	PtrMemberAccess	avctx -> bit_rate		828489	0					
ANR	830282	Identifier	avctx		828489	0					
ANR	830283	Identifier	bit_rate		828489	1					
ANR	830284	CallExpression	get_bit_rate ( avctx )		828489	1					
ANR	830285	Callee	get_bit_rate		828489	0					
ANR	830286	Identifier	get_bit_rate		828489	0					
ANR	830287	ArgumentList	avctx		828489	1					
ANR	830288	Argument	avctx		828489	0					
ANR	830289	Identifier	avctx		828489	0					
ANR	830290	IfStatement	if ( avctx -> channel_layout )		828489	1					
ANR	830291	Condition	avctx -> channel_layout	537:12:11673:11693	828489	0	True				
ANR	830292	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830293	Identifier	avctx		828489	0					
ANR	830294	Identifier	channel_layout		828489	1					
ANR	830295	CompoundStatement		537:12:11602:11673	828489	1					
ANR	830296	IdentifierDeclStatement	int channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout ) ;	539:12:11711:11782	828489	0	True				
ANR	830297	IdentifierDecl	channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	0					
ANR	830298	IdentifierDeclType	int		828489	0					
ANR	830299	Identifier	channels		828489	1					
ANR	830300	AssignmentExpression	channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	2		=			
ANR	830301	Identifier	channels		828489	0					
ANR	830302	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		828489	1					
ANR	830303	Callee	av_get_channel_layout_nb_channels		828489	0					
ANR	830304	Identifier	av_get_channel_layout_nb_channels		828489	0					
ANR	830305	ArgumentList	avctx -> channel_layout		828489	1					
ANR	830306	Argument	avctx -> channel_layout		828489	0					
ANR	830307	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830308	Identifier	avctx		828489	0					
ANR	830309	Identifier	channel_layout		828489	1					
ANR	830310	IfStatement	if ( ! avctx -> channels )		828489	1					
ANR	830311	Condition	! avctx -> channels	541:16:11801:11816	828489	0	True				
ANR	830312	UnaryOperationExpression	! avctx -> channels		828489	0					
ANR	830313	UnaryOperator	!		828489	0					
ANR	830314	PtrMemberAccess	avctx -> channels		828489	1					
ANR	830315	Identifier	avctx		828489	0					
ANR	830316	Identifier	channels		828489	1					
ANR	830317	ExpressionStatement	avctx -> channels = channels	543:16:11836:11862	828489	1	True				
ANR	830318	AssignmentExpression	avctx -> channels = channels		828489	0		=			
ANR	830319	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830320	Identifier	avctx		828489	0					
ANR	830321	Identifier	channels		828489	1					
ANR	830322	Identifier	channels		828489	1					
ANR	830323	ElseStatement	else		828489	0					
ANR	830324	IfStatement	if ( channels != avctx -> channels )		828489	0					
ANR	830325	Condition	channels != avctx -> channels	545:21:11886:11912	828489	0	True				
ANR	830326	EqualityExpression	channels != avctx -> channels		828489	0		!=			
ANR	830327	Identifier	channels		828489	0					
ANR	830328	PtrMemberAccess	avctx -> channels		828489	1					
ANR	830329	Identifier	avctx		828489	0					
ANR	830330	Identifier	channels		828489	1					
ANR	830331	CompoundStatement		545:16:11825:11838	828489	1					
ANR	830332	IdentifierDeclStatement	char buf [ 512 ] ;	547:16:11934:11947	828489	0	True				
ANR	830333	IdentifierDecl	buf [ 512 ]		828489	0					
ANR	830334	IdentifierDeclType	char [ 512 ]		828489	0					
ANR	830335	Identifier	buf		828489	1					
ANR	830336	PrimaryExpression	512		828489	2					
ANR	830337	ExpressionStatement	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"	549:16:11966:12039	828489	1	True				
ANR	830338	CallExpression	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , avctx -> channel_layout )"		828489	0					
ANR	830339	Callee	av_get_channel_layout_string		828489	0					
ANR	830340	Identifier	av_get_channel_layout_string		828489	0					
ANR	830341	ArgumentList	buf		828489	1					
ANR	830342	Argument	buf		828489	0					
ANR	830343	Identifier	buf		828489	0					
ANR	830344	Argument	sizeof ( buf )		828489	1					
ANR	830345	SizeofExpression	sizeof ( buf )		828489	0					
ANR	830346	Sizeof	sizeof		828489	0					
ANR	830347	SizeofOperand	buf		828489	1					
ANR	830348	Argument	- 1		828489	2					
ANR	830349	UnaryOperationExpression	- 1		828489	0					
ANR	830350	UnaryOperator	-		828489	0					
ANR	830351	PrimaryExpression	1		828489	1					
ANR	830352	Argument	avctx -> channel_layout		828489	3					
ANR	830353	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830354	Identifier	avctx		828489	0					
ANR	830355	Identifier	channel_layout		828489	1					
ANR	830356	Statement	av_log	551:16:12058:12063	828489	2	True				
ANR	830357	Statement	(	551:22:12064:12064	828489	3	True				
ANR	830358	Statement	avctx	551:23:12065:12069	828489	4	True				
ANR	830359	Statement	","	551:28:12070:12070	828489	5	True				
ANR	830360	Statement	AV_LOG_WARNING	551:30:12072:12085	828489	6	True				
ANR	830361	Statement	","	551:44:12086:12086	828489	7	True				
ANR	830362	Statement	"""Channel layout '%s' with %d channels does not match specified number of channels %d: """	553:23:12112:12198	828489	8	True				
ANR	830363	Statement	"""ignoring specified channel layout\\n"""	555:23:12224:12260	828489	9	True				
ANR	830364	Statement	","	555:60:12261:12261	828489	10	True				
ANR	830365	Statement	buf	557:23:12287:12289	828489	11	True				
ANR	830366	Statement	","	557:26:12290:12290	828489	12	True				
ANR	830367	Statement	channels	557:28:12292:12299	828489	13	True				
ANR	830368	Statement	","	557:36:12300:12300	828489	14	True				
ANR	830369	Statement	avctx	557:38:12302:12306	828489	15	True				
ANR	830370	Statement	->	557:43:12307:12308	828489	16	True				
ANR	830371	Statement	channels	557:45:12309:12316	828489	17	True				
ANR	830372	Statement	)	557:53:12317:12317	828489	18	True				
ANR	830373	ExpressionStatement		557:54:12318:12318	828489	19	True				
ANR	830374	ExpressionStatement	avctx -> channel_layout = 0	559:16:12337:12362	828489	20	True				
ANR	830375	AssignmentExpression	avctx -> channel_layout = 0		828489	0		=			
ANR	830376	PtrMemberAccess	avctx -> channel_layout		828489	0					
ANR	830377	Identifier	avctx		828489	0					
ANR	830378	Identifier	channel_layout		828489	1					
ANR	830379	PrimaryExpression	0		828489	1					
ANR	830380	IfStatement	if ( avctx -> channels && avctx -> channels < 0 || avctx -> channels > FF_SANE_NB_CHANNELS )		828489	2					
ANR	830381	Condition	avctx -> channels && avctx -> channels < 0 || avctx -> channels > FF_SANE_NB_CHANNELS	565:12:12403:12494	828489	0	True				
ANR	830382	OrExpression	avctx -> channels && avctx -> channels < 0 || avctx -> channels > FF_SANE_NB_CHANNELS		828489	0		||			
ANR	830383	AndExpression	avctx -> channels && avctx -> channels < 0		828489	0		&&			
ANR	830384	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830385	Identifier	avctx		828489	0					
ANR	830386	Identifier	channels		828489	1					
ANR	830387	RelationalExpression	avctx -> channels < 0		828489	1		<			
ANR	830388	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830389	Identifier	avctx		828489	0					
ANR	830390	Identifier	channels		828489	1					
ANR	830391	PrimaryExpression	0		828489	1					
ANR	830392	RelationalExpression	avctx -> channels > FF_SANE_NB_CHANNELS		828489	1		>			
ANR	830393	PtrMemberAccess	avctx -> channels		828489	0					
ANR	830394	Identifier	avctx		828489	0					
ANR	830395	Identifier	channels		828489	1					
ANR	830396	Identifier	FF_SANE_NB_CHANNELS		828489	1					
ANR	830397	CompoundStatement		565:51:12388:12388	828489	1					
ANR	830398	ExpressionStatement	ret = AVERROR ( EINVAL )	569:12:12512:12533	828489	0	True				
ANR	830399	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	830400	Identifier	ret		828489	0					
ANR	830401	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	830402	Callee	AVERROR		828489	0					
ANR	830403	Identifier	AVERROR		828489	0					
ANR	830404	ArgumentList	EINVAL		828489	1					
ANR	830405	Argument	EINVAL		828489	0					
ANR	830406	Identifier	EINVAL		828489	0					
ANR	830407	GotoStatement	goto free_and_end ;	571:12:12548:12565	828489	1	True				
ANR	830408	Identifier	free_and_end		828489	0					
ANR	830409	IfStatement	if ( avctx -> sub_charenc )		828489	3					
ANR	830410	Condition	avctx -> sub_charenc	575:12:12591:12608	828489	0	True				
ANR	830411	PtrMemberAccess	avctx -> sub_charenc		828489	0					
ANR	830412	Identifier	avctx		828489	0					
ANR	830413	Identifier	sub_charenc		828489	1					
ANR	830414	CompoundStatement		573:32:12502:12502	828489	1					
ANR	830415	IfStatement	if ( avctx -> codec_type != AVMEDIA_TYPE_SUBTITLE )		828489	0					
ANR	830416	Condition	avctx -> codec_type != AVMEDIA_TYPE_SUBTITLE	577:16:12630:12671	828489	0	True				
ANR	830417	EqualityExpression	avctx -> codec_type != AVMEDIA_TYPE_SUBTITLE		828489	0		!=			
ANR	830418	PtrMemberAccess	avctx -> codec_type		828489	0					
ANR	830419	Identifier	avctx		828489	0					
ANR	830420	Identifier	codec_type		828489	1					
ANR	830421	Identifier	AVMEDIA_TYPE_SUBTITLE		828489	1					
ANR	830422	CompoundStatement		575:60:12565:12565	828489	1					
ANR	830423	Statement	av_log	579:16:12693:12698	828489	0	True				
ANR	830424	Statement	(	579:22:12699:12699	828489	1	True				
ANR	830425	Statement	avctx	579:23:12700:12704	828489	2	True				
ANR	830426	Statement	","	579:28:12705:12705	828489	3	True				
ANR	830427	Statement	AV_LOG_ERROR	579:30:12707:12718	828489	4	True				
ANR	830428	Statement	","	579:42:12719:12719	828489	5	True				
ANR	830429	Statement	"""Character encoding is only """	579:44:12721:12749	828489	6	True				
ANR	830430	Statement	"""supported with subtitles codecs\\n"""	581:23:12775:12809	828489	7	True				
ANR	830431	Statement	)	581:58:12810:12810	828489	8	True				
ANR	830432	ExpressionStatement		581:59:12811:12811	828489	9	True				
ANR	830433	ExpressionStatement	ret = AVERROR ( EINVAL )	583:16:12830:12851	828489	10	True				
ANR	830434	AssignmentExpression	ret = AVERROR ( EINVAL )		828489	0		=			
ANR	830435	Identifier	ret		828489	0					
ANR	830436	CallExpression	AVERROR ( EINVAL )		828489	1					
ANR	830437	Callee	AVERROR		828489	0					
ANR	830438	Identifier	AVERROR		828489	0					
ANR	830439	ArgumentList	EINVAL		828489	1					
ANR	830440	Argument	EINVAL		828489	0					
ANR	830441	Identifier	EINVAL		828489	0					
ANR	830442	GotoStatement	goto free_and_end ;	585:16:12870:12887	828489	11	True				
ANR	830443	Identifier	free_and_end		828489	0					
ANR	830444	ElseStatement	else		828489	0					
ANR	830445	IfStatement	if ( avctx -> codec_descriptor -> props & AV_CODEC_PROP_BITMAP_SUB )		828489	0					
ANR	830446	Condition	avctx -> codec_descriptor -> props & AV_CODEC_PROP_BITMAP_SUB	587:23:12913:12969	828489	0	True				
ANR	830447	BitAndExpression	avctx -> codec_descriptor -> props & AV_CODEC_PROP_BITMAP_SUB		828489	0		&			
ANR	830448	PtrMemberAccess	avctx -> codec_descriptor -> props		828489	0					
ANR	830449	PtrMemberAccess	avctx -> codec_descriptor		828489	0					
ANR	830450	Identifier	avctx		828489	0					
ANR	830451	Identifier	codec_descriptor		828489	1					
ANR	830452	Identifier	props		828489	1					
ANR	830453	Identifier	AV_CODEC_PROP_BITMAP_SUB		828489	1					
ANR	830454	CompoundStatement		585:82:12863:12863	828489	1					
ANR	830455	Statement	av_log	589:16:12991:12996	828489	0	True				
ANR	830456	Statement	(	589:22:12997:12997	828489	1	True				
ANR	830457	Statement	avctx	589:23:12998:13002	828489	2	True				
ANR	830458	Statement	","	589:28:13003:13003	828489	3	True				
ANR	830459	Statement	AV_LOG_WARNING	589:30:13005:13018	828489	4	True				
ANR	830460	Statement	","	589:44:13019:13019	828489	5	True				
ANR	830461	Statement	"""Codec '%s' is bitmap-based, """	589:46:13021:13050	828489	6	True				
ANR	830462	Statement	"""subtitles character encoding will be ignored\\n"""	591:23:13076:13123	828489	7	True				
ANR	830463	Statement	","	591:71:13124:13124	828489	8	True				
ANR	830464	Statement	avctx	593:23:13150:13154	828489	9	True				
ANR	830465	Statement	->	593:28:13155:13156	828489	10	True				
ANR	830466	Statement	codec_descriptor	593:30:13157:13172	828489	11	True				
ANR	830467	Statement	->	593:46:13173:13174	828489	12	True				
ANR	830468	Statement	name	593:48:13175:13178	828489	13	True				
ANR	830469	Statement	)	593:52:13179:13179	828489	14	True				
ANR	830470	ExpressionStatement		593:53:13180:13180	828489	15	True				
ANR	830471	ExpressionStatement	avctx -> sub_charenc_mode = FF_SUB_CHARENC_MODE_DO_NOTHING	595:16:13199:13255	828489	16	True				
ANR	830472	AssignmentExpression	avctx -> sub_charenc_mode = FF_SUB_CHARENC_MODE_DO_NOTHING		828489	0		=			
ANR	830473	PtrMemberAccess	avctx -> sub_charenc_mode		828489	0					
ANR	830474	Identifier	avctx		828489	0					
ANR	830475	Identifier	sub_charenc_mode		828489	1					
ANR	830476	Identifier	FF_SUB_CHARENC_MODE_DO_NOTHING		828489	1					
ANR	830477	ElseStatement	else		828489	0					
ANR	830478	CompoundStatement		595:19:13168:13168	828489	0					
ANR	830479	IfStatement	if ( avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_AUTOMATIC )		828489	0					
ANR	830480	Condition	avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_AUTOMATIC	603:20:13421:13476	828489	0	True				
ANR	830481	EqualityExpression	avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_AUTOMATIC		828489	0		==			
ANR	830482	PtrMemberAccess	avctx -> sub_charenc_mode		828489	0					
ANR	830483	Identifier	avctx		828489	0					
ANR	830484	Identifier	sub_charenc_mode		828489	1					
ANR	830485	Identifier	FF_SUB_CHARENC_MODE_AUTOMATIC		828489	1					
ANR	830486	ExpressionStatement	avctx -> sub_charenc_mode = FF_SUB_CHARENC_MODE_PRE_DECODER	605:20:13500:13557	828489	1	True				
ANR	830487	AssignmentExpression	avctx -> sub_charenc_mode = FF_SUB_CHARENC_MODE_PRE_DECODER		828489	0		=			
ANR	830488	PtrMemberAccess	avctx -> sub_charenc_mode		828489	0					
ANR	830489	Identifier	avctx		828489	0					
ANR	830490	Identifier	sub_charenc_mode		828489	1					
ANR	830491	Identifier	FF_SUB_CHARENC_MODE_PRE_DECODER		828489	1					
ANR	830492	IfStatement	if ( avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_PRE_DECODER )		828489	1					
ANR	830493	Condition	avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_PRE_DECODER	609:20:13582:13639	828489	0	True				
ANR	830494	EqualityExpression	avctx -> sub_charenc_mode == FF_SUB_CHARENC_MODE_PRE_DECODER		828489	0		==			
ANR	830495	PtrMemberAccess	avctx -> sub_charenc_mode		828489	0					
ANR	830496	Identifier	avctx		828489	0					
ANR	830497	Identifier	sub_charenc_mode		828489	1					
ANR	830498	Identifier	FF_SUB_CHARENC_MODE_PRE_DECODER		828489	1					
ANR	830499	CompoundStatement		611:20:13574:13626	828489	1					
ANR	830500	IdentifierDeclStatement	"iconv_t cd = iconv_open ( ""UTF-8"" , avctx -> sub_charenc ) ;"	613:20:13683:13735	828489	0	True				
ANR	830501	IdentifierDecl	"cd = iconv_open ( ""UTF-8"" , avctx -> sub_charenc )"		828489	0					
ANR	830502	IdentifierDeclType	iconv_t		828489	0					
ANR	830503	Identifier	cd		828489	1					
ANR	830504	AssignmentExpression	"cd = iconv_open ( ""UTF-8"" , avctx -> sub_charenc )"		828489	2		=			
ANR	830505	Identifier	cd		828489	0					
ANR	830506	CallExpression	"iconv_open ( ""UTF-8"" , avctx -> sub_charenc )"		828489	1					
ANR	830507	Callee	iconv_open		828489	0					
ANR	830508	Identifier	iconv_open		828489	0					
ANR	830509	ArgumentList	"""UTF-8"""		828489	1					
ANR	830510	Argument	"""UTF-8"""		828489	0					
ANR	830511	PrimaryExpression	"""UTF-8"""		828489	0					
ANR	830512	Argument	avctx -> sub_charenc		828489	1					
ANR	830513	PtrMemberAccess	avctx -> sub_charenc		828489	0					
ANR	830514	Identifier	avctx		828489	0					
ANR	830515	Identifier	sub_charenc		828489	1					
ANR	830516	IfStatement	if ( cd == ( iconv_t ) - 1 )		828489	1					
ANR	830517	Condition	cd == ( iconv_t ) - 1	615:24:13762:13778	828489	0	True				
ANR	830518	EqualityExpression	cd == ( iconv_t ) - 1		828489	0		==			
ANR	830519	Identifier	cd		828489	0					
ANR	830520	CastExpression	( iconv_t ) - 1		828489	1					
ANR	830521	CastTarget	iconv_t		828489	0					
ANR	830522	UnaryOperationExpression	- 1		828489	1					
ANR	830523	UnaryOperator	-		828489	0					
ANR	830524	PrimaryExpression	1		828489	1					
ANR	830525	CompoundStatement		613:43:13672:13672	828489	1					
ANR	830526	Statement	av_log	617:24:13808:13813	828489	0	True				
ANR	830527	Statement	(	617:30:13814:13814	828489	1	True				
ANR	830528	Statement	avctx	617:31:13815:13819	828489	2	True				
ANR	830529	Statement	","	617:36:13820:13820	828489	3	True				
ANR	830530	Statement	AV_LOG_ERROR	617:38:13822:13833	828489	4	True				
ANR	830531	Statement	","	617:50:13834:13834	828489	5	True				
ANR	830532	Statement	"""Unable to open iconv context """	617:52:13836:13866	828489	6	True				
ANR	830533	Statement	"""with input character encoding \\""%s\\""\\n"""	619:31:13900:13939	828489	7	True				
ANR	830534	Statement	","	619:71:13940:13940	828489	8	True				
ANR	830535	Statement	avctx	619:73:13942:13946	828489	9	True				
ANR	830536	Statement	->	619:78:13947:13948	828489	10	True				
ANR	830537	Statement	sub_charenc	619:80:13949:13959	828489	11	True				
ANR	830538	Statement	)	619:91:13960:13960	828489	12	True				
ANR	830539	ExpressionStatement		619:92:13961:13961	828489	13	True				
ANR	830540	ExpressionStatement	ret = AVERROR ( errno )	621:24:13988:14008	828489	14	True				
ANR	830541	AssignmentExpression	ret = AVERROR ( errno )		828489	0		=			
ANR	830542	Identifier	ret		828489	0					
ANR	830543	CallExpression	AVERROR ( errno )		828489	1					
ANR	830544	Callee	AVERROR		828489	0					
ANR	830545	Identifier	AVERROR		828489	0					
ANR	830546	ArgumentList	errno		828489	1					
ANR	830547	Argument	errno		828489	0					
ANR	830548	Identifier	errno		828489	0					
ANR	830549	GotoStatement	goto free_and_end ;	623:24:14035:14052	828489	15	True				
ANR	830550	Identifier	free_and_end		828489	0					
ANR	830551	ExpressionStatement	iconv_close ( cd )	627:20:14098:14113	828489	2	True				
ANR	830552	CallExpression	iconv_close ( cd )		828489	0					
ANR	830553	Callee	iconv_close		828489	0					
ANR	830554	Identifier	iconv_close		828489	0					
ANR	830555	ArgumentList	cd		828489	1					
ANR	830556	Argument	cd		828489	0					
ANR	830557	Identifier	cd		828489	0					
ANR	830558	Label	end :	651:0:14483:14486	828489	38	True				
ANR	830559	Identifier	end		828489	0					
ANR	830560	ExpressionStatement	ff_unlock_avcodec ( )	653:4:14493:14512	828489	39	True				
ANR	830561	CallExpression	ff_unlock_avcodec ( )		828489	0					
ANR	830562	Callee	ff_unlock_avcodec		828489	0					
ANR	830563	Identifier	ff_unlock_avcodec		828489	0					
ANR	830564	ArgumentList			828489	1					
ANR	830565	IfStatement	if ( options )		828489	40					
ANR	830566	Condition	options	655:8:14523:14529	828489	0	True				
ANR	830567	Identifier	options		828489	0					
ANR	830568	CompoundStatement		653:17:14423:14423	828489	1					
ANR	830569	ExpressionStatement	av_dict_free ( options )	657:8:14543:14564	828489	0	True				
ANR	830570	CallExpression	av_dict_free ( options )		828489	0					
ANR	830571	Callee	av_dict_free		828489	0					
ANR	830572	Identifier	av_dict_free		828489	0					
ANR	830573	ArgumentList	options		828489	1					
ANR	830574	Argument	options		828489	0					
ANR	830575	Identifier	options		828489	0					
ANR	830576	ExpressionStatement	* options = tmp	659:8:14575:14589	828489	1	True				
ANR	830577	AssignmentExpression	* options = tmp		828489	0		=			
ANR	830578	UnaryOperationExpression	* options		828489	0					
ANR	830579	UnaryOperator	*		828489	0					
ANR	830580	Identifier	options		828489	1					
ANR	830581	Identifier	tmp		828489	1					
ANR	830582	ReturnStatement	return ret ;	665:4:14605:14615	828489	41	True				
ANR	830583	Identifier	ret		828489	0					
ANR	830584	Label	free_and_end :	667:0:14618:14630	828489	42	True				
ANR	830585	Identifier	free_and_end		828489	0					
ANR	830586	ExpressionStatement	av_dict_free ( & tmp )	669:4:14637:14655	828489	43	True				
ANR	830587	CallExpression	av_dict_free ( & tmp )		828489	0					
ANR	830588	Callee	av_dict_free		828489	0					
ANR	830589	Identifier	av_dict_free		828489	0					
ANR	830590	ArgumentList	& tmp		828489	1					
ANR	830591	Argument	& tmp		828489	0					
ANR	830592	UnaryOperationExpression	& tmp		828489	0					
ANR	830593	UnaryOperator	&		828489	0					
ANR	830594	Identifier	tmp		828489	1					
ANR	830595	ExpressionStatement	av_freep ( & avctx -> priv_data )	671:4:14662:14689	828489	44	True				
ANR	830596	CallExpression	av_freep ( & avctx -> priv_data )		828489	0					
ANR	830597	Callee	av_freep		828489	0					
ANR	830598	Identifier	av_freep		828489	0					
ANR	830599	ArgumentList	& avctx -> priv_data		828489	1					
ANR	830600	Argument	& avctx -> priv_data		828489	0					
ANR	830601	UnaryOperationExpression	& avctx -> priv_data		828489	0					
ANR	830602	UnaryOperator	&		828489	0					
ANR	830603	PtrMemberAccess	avctx -> priv_data		828489	1					
ANR	830604	Identifier	avctx		828489	0					
ANR	830605	Identifier	priv_data		828489	1					
ANR	830606	IfStatement	if ( avctx -> internal )		828489	45					
ANR	830607	Condition	avctx -> internal	673:8:14700:14714	828489	0	True				
ANR	830608	PtrMemberAccess	avctx -> internal		828489	0					
ANR	830609	Identifier	avctx		828489	0					
ANR	830610	Identifier	internal		828489	1					
ANR	830611	ExpressionStatement	av_freep ( & avctx -> internal -> pool )	675:8:14726:14758	828489	1	True				
ANR	830612	CallExpression	av_freep ( & avctx -> internal -> pool )		828489	0					
ANR	830613	Callee	av_freep		828489	0					
ANR	830614	Identifier	av_freep		828489	0					
ANR	830615	ArgumentList	& avctx -> internal -> pool		828489	1					
ANR	830616	Argument	& avctx -> internal -> pool		828489	0					
ANR	830617	UnaryOperationExpression	& avctx -> internal -> pool		828489	0					
ANR	830618	UnaryOperator	&		828489	0					
ANR	830619	PtrMemberAccess	avctx -> internal -> pool		828489	1					
ANR	830620	PtrMemberAccess	avctx -> internal		828489	0					
ANR	830621	Identifier	avctx		828489	0					
ANR	830622	Identifier	internal		828489	1					
ANR	830623	Identifier	pool		828489	1					
ANR	830624	ExpressionStatement	av_freep ( & avctx -> internal )	677:4:14765:14791	828489	46	True				
ANR	830625	CallExpression	av_freep ( & avctx -> internal )		828489	0					
ANR	830626	Callee	av_freep		828489	0					
ANR	830627	Identifier	av_freep		828489	0					
ANR	830628	ArgumentList	& avctx -> internal		828489	1					
ANR	830629	Argument	& avctx -> internal		828489	0					
ANR	830630	UnaryOperationExpression	& avctx -> internal		828489	0					
ANR	830631	UnaryOperator	&		828489	0					
ANR	830632	PtrMemberAccess	avctx -> internal		828489	1					
ANR	830633	Identifier	avctx		828489	0					
ANR	830634	Identifier	internal		828489	1					
ANR	830635	ExpressionStatement	avctx -> codec = NULL	679:4:14798:14817	828489	47	True				
ANR	830636	AssignmentExpression	avctx -> codec = NULL		828489	0		=			
ANR	830637	PtrMemberAccess	avctx -> codec		828489	0					
ANR	830638	Identifier	avctx		828489	0					
ANR	830639	Identifier	codec		828489	1					
ANR	830640	Identifier	NULL		828489	1					
ANR	830641	GotoStatement	goto end ;	681:4:14824:14832	828489	48	True				
ANR	830642	Identifier	end		828489	0					
ANR	830643	ReturnType	int attribute_align_arg		828489	1					
ANR	830644	Identifier	avcodec_open2		828489	2					
ANR	830645	ParameterList	"AVCodecContext * avctx , const AVCodec * codec , AVDictionary * * options"		828489	3					
ANR	830646	Parameter	AVCodecContext * avctx	1:38:38:58	828489	0	True				
ANR	830647	ParameterType	AVCodecContext *		828489	0					
ANR	830648	Identifier	avctx		828489	1					
ANR	830649	Parameter	const AVCodec * codec	1:61:61:80	828489	1	True				
ANR	830650	ParameterType	const AVCodec *		828489	0					
ANR	830651	Identifier	codec		828489	1					
ANR	830652	Parameter	AVDictionary * * options	1:83:83:104	828489	2	True				
ANR	830653	ParameterType	AVDictionary * *		828489	0					
ANR	830654	Identifier	options		828489	1					
ANR	830655	CFGEntryNode	ENTRY		828489		True				
ANR	830656	CFGExitNode	EXIT		828489		True				
ANR	830657	Symbol	ENOMEM		828489						
ANR	830658	Symbol	* avctx -> priv_data		828489						
ANR	830659	Symbol	avcodec_descriptor_get		828489						
ANR	830660	Symbol	avcodec_find_decoder		828489						
ANR	830661	Symbol	avctx -> active_thread_type		828489						
ANR	830662	Symbol	* avctx -> codec -> channel_layouts		828489						
ANR	830663	Symbol	AVMEDIA_TYPE_VIDEO		828489						
ANR	830664	Symbol	avctx -> codec -> capabilities		828489						
ANR	830665	Symbol	codec2 -> name		828489						
ANR	830666	Symbol	avctx -> codec -> supported_samplerates		828489						
ANR	830667	Symbol	& avctx -> priv_data		828489						
ANR	830668	Symbol	tmp		828489						
ANR	830669	Symbol	options		828489						
ANR	830670	Symbol	INT64_MIN		828489						
ANR	830671	Symbol	& avctx -> subtitle_header		828489						
ANR	830672	Symbol	av_get_pix_fmt_name		828489						
ANR	830673	Symbol	avctx -> codec -> channel_layouts		828489						
ANR	830674	Symbol	avctx -> coded_width		828489						
ANR	830675	Symbol	avctx -> codec -> max_lowres		828489						
ANR	830676	Symbol	avctx -> sample_fmt		828489						
ANR	830677	Symbol	errno		828489						
ANR	830678	Symbol	avctx -> codec		828489						
ANR	830679	Symbol	& avctx -> internal		828489						
ANR	830680	Symbol	av_mallocz		828489						
ANR	830681	Symbol	* * avctx		828489						
ANR	830682	Symbol	avctx -> coded_height		828489						
ANR	830683	Symbol	av_get_channel_layout_nb_channels		828489						
ANR	830684	Symbol	* * avctx -> internal		828489						
ANR	830685	Symbol	avctx -> bit_rate		828489						
ANR	830686	Symbol	AV_CODEC_ID_NONE		828489						
ANR	830687	Symbol	codec -> priv_class		828489						
ANR	830688	Symbol	& tmp		828489						
ANR	830689	Symbol	avctx -> pix_fmt		828489						
ANR	830690	Symbol	* avctx -> codec -> sample_fmts		828489						
ANR	830691	Symbol	avctx -> codec_id		828489						
ANR	830692	Symbol	AV_CODEC_ID_LJPEG		828489						
ANR	830693	Symbol	avctx -> width		828489						
ANR	830694	Symbol	AVMEDIA_TYPE_ATTACHMENT		828489						
ANR	830695	Symbol	* options		828489						
ANR	830696	Symbol	AVMEDIA_TYPE_SUBTITLE		828489						
ANR	830697	Symbol	avctx -> time_base		828489						
ANR	830698	Symbol	ff_lock_avcodec		828489						
ANR	830699	Symbol	CODEC_CAP_EXPERIMENTAL		828489						
ANR	830700	Symbol	avctx -> time_base . den		828489						
ANR	830701	Symbol	avctx -> frame_number		828489						
ANR	830702	Symbol	avctx		828489						
ANR	830703	Symbol	ff_frame_thread_encoder_init		828489						
ANR	830704	Symbol	av_opt_set_dict		828489						
ANR	830705	Symbol	* codec2		828489						
ANR	830706	Symbol	cd		828489						
ANR	830707	Symbol	avctx -> pts_correction_num_faulty_dts		828489						
ANR	830708	Symbol	AV_LOG_ERROR		828489						
ANR	830709	Symbol	FF_SUB_CHARENC_MODE_DO_NOTHING		828489						
ANR	830710	Symbol	AVMEDIA_TYPE_UNKNOWN		828489						
ANR	830711	Symbol	av_codec_is_decoder		828489						
ANR	830712	Symbol	avcodec_find_encoder		828489						
ANR	830713	Symbol	i		828489						
ANR	830714	Symbol	avctx -> channel_layout		828489						
ANR	830715	Symbol	avctx -> codec_descriptor		828489						
ANR	830716	Symbol	avctx -> thread_count		828489						
ANR	830717	Symbol	codec -> priv_data_size		828489						
ANR	830718	Symbol	avctx -> sample_rate		828489						
ANR	830719	Symbol	EINVAL		828489						
ANR	830720	Symbol	buf		828489						
ANR	830721	Symbol	HAVE_THREADS		828489						
ANR	830722	Symbol	codec -> id		828489						
ANR	830723	Symbol	avctx -> pts_correction_num_faulty_pts		828489						
ANR	830724	Symbol	avctx -> internal -> frame_thread_encoder		828489						
ANR	830725	Symbol	av_get_sample_fmt_name		828489						
ANR	830726	Symbol	AV_LOG_WARNING		828489						
ANR	830727	Symbol	av_codec_is_encoder		828489						
ANR	830728	Symbol	* avctx -> codec -> supported_samplerates		828489						
ANR	830729	Symbol	avctx -> pts_correction_last_dts		828489						
ANR	830730	Symbol	avcodec_is_open		828489						
ANR	830731	Symbol	FF_SANE_NB_CHANNELS		828489						
ANR	830732	Symbol	avctx -> sub_charenc_mode		828489						
ANR	830733	Symbol	AVMEDIA_TYPE_AUDIO		828489						
ANR	830734	Symbol	* avctx -> codec_descriptor		828489						
ANR	830735	Symbol	CODEC_CAP_AUTO_THREADS		828489						
ANR	830736	Symbol	AV_SAMPLE_FMT_NONE		828489						
ANR	830737	Symbol	avctx -> channels		828489						
ANR	830738	Symbol	av_x_if_null		828489						
ANR	830739	Symbol	* avctx -> codec		828489						
ANR	830740	Symbol	avctx -> codec -> init		828489						
ANR	830741	Symbol	avctx -> pts_correction_last_pts		828489						
ANR	830742	Symbol	FF_SUB_CHARENC_MODE_AUTOMATIC		828489						
ANR	830743	Symbol	ret		828489						
ANR	830744	Symbol	NULL		828489						
ANR	830745	Symbol	* codec		828489						
ANR	830746	Symbol	avctx -> codec -> pix_fmts		828489						
ANR	830747	Symbol	FF_COMPLIANCE_EXPERIMENTAL		828489						
ANR	830748	Symbol	avctx -> lowres		828489						
ANR	830749	Symbol	avctx -> strict_std_compliance		828489						
ANR	830750	Symbol	AV_CODEC_ID_PNG		828489						
ANR	830751	Symbol	codec		828489						
ANR	830752	Symbol	* avctx		828489						
ANR	830753	Symbol	channels		828489						
ANR	830754	Symbol	ff_thread_init		828489						
ANR	830755	Symbol	codec_string		828489						
ANR	830756	Symbol	* * avctx -> codec		828489						
ANR	830757	Symbol	& avctx -> internal -> pool		828489						
ANR	830758	Symbol	* ( const AVClass * * ) avctx -> priv_data		828489						
ANR	830759	Symbol	FF_THREAD_FRAME		828489						
ANR	830760	Symbol	AV_CODEC_ID_H264		828489						
ANR	830761	Symbol	* avctx -> internal		828489						
ANR	830762	Symbol	FF_SUB_CHARENC_MODE_PRE_DECODER		828489						
ANR	830763	Symbol	avctx -> codec_type		828489						
ANR	830764	Symbol	codec2 -> capabilities		828489						
ANR	830765	Symbol	AV_CODEC_PROP_BITMAP_SUB		828489						
ANR	830766	Symbol	av_get_planar_sample_fmt		828489						
ANR	830767	Symbol	avctx -> codec -> sample_fmts		828489						
ANR	830768	Symbol	* avctx -> codec -> pix_fmts		828489						
ANR	830769	Symbol	AV_CODEC_ID_MJPEG		828489						
ANR	830770	Symbol	avctx -> codec_descriptor -> props		828489						
ANR	830771	Symbol	avctx -> height		828489						
ANR	830772	Symbol	avctx -> time_base . num		828489						
ANR	830773	Symbol	avctx -> thread_opaque		828489						
ANR	830774	Symbol	FF_MAX_EXTRADATA_SIZE		828489						
ANR	830775	Symbol	avctx -> rc_initial_buffer_occupancy		828489						
ANR	830776	Symbol	iconv_open		828489						
ANR	830777	Symbol	av_image_check_size		828489						
ANR	830778	Symbol	codec -> capabilities		828489						
ANR	830779	Symbol	FF_COMPLIANCE_UNOFFICIAL		828489						
ANR	830780	Symbol	avctx -> internal		828489						
ANR	830781	Symbol	codec -> type		828489						
ANR	830782	Symbol	* avctx -> internal -> pool		828489						
ANR	830783	Symbol	codec2		828489						
ANR	830784	Symbol	avctx -> extradata_size		828489						
ANR	830785	Symbol	AV_PIX_FMT_NONE		828489						
ANR	830786	Symbol	avctx -> priv_data		828489						
ANR	830787	Symbol	avctx -> sub_charenc		828489						
ANR	830788	Symbol	* * * avctx		828489						
ANR	830789	Symbol	* i		828489						
ANR	830790	Symbol	avctx -> internal -> pool		828489						
ANR	830791	Symbol	avctx -> rc_buffer_size		828489						
ANR	830792	Symbol	AVERROR		828489						
ANR	830793	Symbol	AVERROR_EXPERIMENTAL		828489						
ANR	830794	Symbol	get_bit_rate		828489						
