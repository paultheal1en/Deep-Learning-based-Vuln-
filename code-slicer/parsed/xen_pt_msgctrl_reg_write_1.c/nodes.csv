command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9538865	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xen_pt_msgctrl_reg_write_1.c								
ANR	9538866	Function	xen_pt_msgctrl_reg_write	1:0:0:2234							
ANR	9538867	FunctionDef	"xen_pt_msgctrl_reg_write (XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint16_t * val , uint16_t dev_value , uint16_t valid_mask)"		9538866	0					
ANR	9538868	CompoundStatement		7:0:215:2234	9538866	0					
ANR	9538869	IdentifierDeclStatement	XenPTRegInfo * reg = cfg_entry -> reg ;	9:4:222:256	9538866	0	True				
ANR	9538870	IdentifierDecl	* reg = cfg_entry -> reg		9538866	0					
ANR	9538871	IdentifierDeclType	XenPTRegInfo *		9538866	0					
ANR	9538872	Identifier	reg		9538866	1					
ANR	9538873	AssignmentExpression	* reg = cfg_entry -> reg		9538866	2		=			
ANR	9538874	Identifier	reg		9538866	0					
ANR	9538875	PtrMemberAccess	cfg_entry -> reg		9538866	1					
ANR	9538876	Identifier	cfg_entry		9538866	0					
ANR	9538877	Identifier	reg		9538866	1					
ANR	9538878	IdentifierDeclStatement	XenPTMSI * msi = s -> msi ;	11:4:263:285	9538866	1	True				
ANR	9538879	IdentifierDecl	* msi = s -> msi		9538866	0					
ANR	9538880	IdentifierDeclType	XenPTMSI *		9538866	0					
ANR	9538881	Identifier	msi		9538866	1					
ANR	9538882	AssignmentExpression	* msi = s -> msi		9538866	2		=			
ANR	9538883	Identifier	msi		9538866	0					
ANR	9538884	PtrMemberAccess	s -> msi		9538866	1					
ANR	9538885	Identifier	s		9538866	0					
ANR	9538886	Identifier	msi		9538866	1					
ANR	9538887	IdentifierDeclStatement	uint16_t writable_mask = 0 ;	13:4:292:318	9538866	2	True				
ANR	9538888	IdentifierDecl	writable_mask = 0		9538866	0					
ANR	9538889	IdentifierDeclType	uint16_t		9538866	0					
ANR	9538890	Identifier	writable_mask		9538866	1					
ANR	9538891	AssignmentExpression	writable_mask = 0		9538866	2		=			
ANR	9538892	Identifier	writable_mask		9538866	0					
ANR	9538893	PrimaryExpression	0		9538866	1					
ANR	9538894	IdentifierDeclStatement	uint16_t throughable_mask = 0 ;	15:4:325:354	9538866	3	True				
ANR	9538895	IdentifierDecl	throughable_mask = 0		9538866	0					
ANR	9538896	IdentifierDeclType	uint16_t		9538866	0					
ANR	9538897	Identifier	throughable_mask		9538866	1					
ANR	9538898	AssignmentExpression	throughable_mask = 0		9538866	2		=			
ANR	9538899	Identifier	throughable_mask		9538866	0					
ANR	9538900	PrimaryExpression	0		9538866	1					
ANR	9538901	IdentifierDeclStatement	uint16_t raw_val ;	17:4:361:377	9538866	4	True				
ANR	9538902	IdentifierDecl	raw_val		9538866	0					
ANR	9538903	IdentifierDeclType	uint16_t		9538866	0					
ANR	9538904	Identifier	raw_val		9538866	1					
ANR	9538905	IfStatement	if ( * val & PCI_MSI_FLAGS_QSIZE )		9538866	5					
ANR	9538906	Condition	* val & PCI_MSI_FLAGS_QSIZE	23:8:439:464	9538866	0	True				
ANR	9538907	BitAndExpression	* val & PCI_MSI_FLAGS_QSIZE		9538866	0		&			
ANR	9538908	UnaryOperationExpression	* val		9538866	0					
ANR	9538909	UnaryOperator	*		9538866	0					
ANR	9538910	Identifier	val		9538866	1					
ANR	9538911	Identifier	PCI_MSI_FLAGS_QSIZE		9538866	1					
ANR	9538912	CompoundStatement		17:36:251:251	9538866	1					
ANR	9538913	ExpressionStatement	"XEN_PT_WARN ( & s -> dev , ""Tries to set more than 1 vector ctrl %x\\n"" , * val )"	25:8:478:549	9538866	0	True				
ANR	9538914	CallExpression	"XEN_PT_WARN ( & s -> dev , ""Tries to set more than 1 vector ctrl %x\\n"" , * val )"		9538866	0					
ANR	9538915	Callee	XEN_PT_WARN		9538866	0					
ANR	9538916	Identifier	XEN_PT_WARN		9538866	0					
ANR	9538917	ArgumentList	& s -> dev		9538866	1					
ANR	9538918	Argument	& s -> dev		9538866	0					
ANR	9538919	UnaryOperationExpression	& s -> dev		9538866	0					
ANR	9538920	UnaryOperator	&		9538866	0					
ANR	9538921	PtrMemberAccess	s -> dev		9538866	1					
ANR	9538922	Identifier	s		9538866	0					
ANR	9538923	Identifier	dev		9538866	1					
ANR	9538924	Argument	"""Tries to set more than 1 vector ctrl %x\\n"""		9538866	1					
ANR	9538925	PrimaryExpression	"""Tries to set more than 1 vector ctrl %x\\n"""		9538866	0					
ANR	9538926	Argument	* val		9538866	2					
ANR	9538927	UnaryOperationExpression	* val		9538866	0					
ANR	9538928	UnaryOperator	*		9538866	0					
ANR	9538929	Identifier	val		9538866	1					
ANR	9538930	ExpressionStatement	writable_mask = reg -> emu_mask & ~reg -> ro_mask & valid_mask	33:4:600:658	9538866	6	True				
ANR	9538931	AssignmentExpression	writable_mask = reg -> emu_mask & ~reg -> ro_mask & valid_mask		9538866	0		=			
ANR	9538932	Identifier	writable_mask		9538866	0					
ANR	9538933	BitAndExpression	reg -> emu_mask & ~reg -> ro_mask & valid_mask		9538866	1		&			
ANR	9538934	PtrMemberAccess	reg -> emu_mask		9538866	0					
ANR	9538935	Identifier	reg		9538866	0					
ANR	9538936	Identifier	emu_mask		9538866	1					
ANR	9538937	BitAndExpression	~reg -> ro_mask & valid_mask		9538866	1		&			
ANR	9538938	PtrMemberAccess	~reg -> ro_mask		9538866	0					
ANR	9538939	Identifier	~reg		9538866	0					
ANR	9538940	Identifier	ro_mask		9538866	1					
ANR	9538941	Identifier	valid_mask		9538866	1					
ANR	9538942	ExpressionStatement	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"	35:4:665:739	9538866	7	True				
ANR	9538943	AssignmentExpression	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9538866	0		=			
ANR	9538944	PtrMemberAccess	cfg_entry -> data		9538866	0					
ANR	9538945	Identifier	cfg_entry		9538866	0					
ANR	9538946	Identifier	data		9538866	1					
ANR	9538947	CallExpression	"XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9538866	1					
ANR	9538948	Callee	XEN_PT_MERGE_VALUE		9538866	0					
ANR	9538949	Identifier	XEN_PT_MERGE_VALUE		9538866	0					
ANR	9538950	ArgumentList	* val		9538866	1					
ANR	9538951	Argument	* val		9538866	0					
ANR	9538952	UnaryOperationExpression	* val		9538866	0					
ANR	9538953	UnaryOperator	*		9538866	0					
ANR	9538954	Identifier	val		9538866	1					
ANR	9538955	Argument	cfg_entry -> data		9538866	1					
ANR	9538956	PtrMemberAccess	cfg_entry -> data		9538866	0					
ANR	9538957	Identifier	cfg_entry		9538866	0					
ANR	9538958	Identifier	data		9538866	1					
ANR	9538959	Argument	writable_mask		9538866	2					
ANR	9538960	Identifier	writable_mask		9538866	0					
ANR	9538961	ExpressionStatement	msi -> flags |= cfg_entry -> data & ~PCI_MSI_FLAGS_ENABLE	37:4:746:799	9538866	8	True				
ANR	9538962	AssignmentExpression	msi -> flags |= cfg_entry -> data & ~PCI_MSI_FLAGS_ENABLE		9538866	0		|=			
ANR	9538963	PtrMemberAccess	msi -> flags		9538866	0					
ANR	9538964	Identifier	msi		9538866	0					
ANR	9538965	Identifier	flags		9538866	1					
ANR	9538966	BitAndExpression	cfg_entry -> data & ~PCI_MSI_FLAGS_ENABLE		9538866	1		&			
ANR	9538967	PtrMemberAccess	cfg_entry -> data		9538866	0					
ANR	9538968	Identifier	cfg_entry		9538866	0					
ANR	9538969	Identifier	data		9538866	1					
ANR	9538970	Identifier	~PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9538971	ExpressionStatement	raw_val = * val	43:4:867:881	9538866	9	True				
ANR	9538972	AssignmentExpression	raw_val = * val		9538866	0		=			
ANR	9538973	Identifier	raw_val		9538866	0					
ANR	9538974	UnaryOperationExpression	* val		9538866	1					
ANR	9538975	UnaryOperator	*		9538866	0					
ANR	9538976	Identifier	val		9538866	1					
ANR	9538977	ExpressionStatement	throughable_mask = ~reg -> emu_mask & valid_mask	45:4:888:934	9538866	10	True				
ANR	9538978	AssignmentExpression	throughable_mask = ~reg -> emu_mask & valid_mask		9538866	0		=			
ANR	9538979	Identifier	throughable_mask		9538866	0					
ANR	9538980	BitAndExpression	~reg -> emu_mask & valid_mask		9538866	1		&			
ANR	9538981	PtrMemberAccess	~reg -> emu_mask		9538866	0					
ANR	9538982	Identifier	~reg		9538866	0					
ANR	9538983	Identifier	emu_mask		9538866	1					
ANR	9538984	Identifier	valid_mask		9538866	1					
ANR	9538985	ExpressionStatement	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"	47:4:941:1001	9538866	11	True				
ANR	9538986	AssignmentExpression	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9538866	0		=			
ANR	9538987	UnaryOperationExpression	* val		9538866	0					
ANR	9538988	UnaryOperator	*		9538866	0					
ANR	9538989	Identifier	val		9538866	1					
ANR	9538990	CallExpression	"XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9538866	1					
ANR	9538991	Callee	XEN_PT_MERGE_VALUE		9538866	0					
ANR	9538992	Identifier	XEN_PT_MERGE_VALUE		9538866	0					
ANR	9538993	ArgumentList	* val		9538866	1					
ANR	9538994	Argument	* val		9538866	0					
ANR	9538995	UnaryOperationExpression	* val		9538866	0					
ANR	9538996	UnaryOperator	*		9538866	0					
ANR	9538997	Identifier	val		9538866	1					
ANR	9538998	Argument	dev_value		9538866	1					
ANR	9538999	Identifier	dev_value		9538866	0					
ANR	9539000	Argument	throughable_mask		9538866	2					
ANR	9539001	Identifier	throughable_mask		9538866	0					
ANR	9539002	IfStatement	if ( raw_val & PCI_MSI_FLAGS_ENABLE )		9538866	12					
ANR	9539003	Condition	raw_val & PCI_MSI_FLAGS_ENABLE	53:8:1036:1065	9538866	0	True				
ANR	9539004	BitAndExpression	raw_val & PCI_MSI_FLAGS_ENABLE		9538866	0		&			
ANR	9539005	Identifier	raw_val		9538866	0					
ANR	9539006	Identifier	PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539007	CompoundStatement		47:40:852:852	9538866	1					
ANR	9539008	IfStatement	if ( ! msi -> initialized )		9538866	0					
ANR	9539009	Condition	! msi -> initialized	57:12:1132:1148	9538866	0	True				
ANR	9539010	UnaryOperationExpression	! msi -> initialized		9538866	0					
ANR	9539011	UnaryOperator	!		9538866	0					
ANR	9539012	PtrMemberAccess	msi -> initialized		9538866	1					
ANR	9539013	Identifier	msi		9538866	0					
ANR	9539014	Identifier	initialized		9538866	1					
ANR	9539015	CompoundStatement		51:31:935:935	9538866	1					
ANR	9539016	ExpressionStatement	"XEN_PT_LOG ( & s -> dev , ""setup MSI\\n"" )"	61:12:1203:1237	9538866	0	True				
ANR	9539017	CallExpression	"XEN_PT_LOG ( & s -> dev , ""setup MSI\\n"" )"		9538866	0					
ANR	9539018	Callee	XEN_PT_LOG		9538866	0					
ANR	9539019	Identifier	XEN_PT_LOG		9538866	0					
ANR	9539020	ArgumentList	& s -> dev		9538866	1					
ANR	9539021	Argument	& s -> dev		9538866	0					
ANR	9539022	UnaryOperationExpression	& s -> dev		9538866	0					
ANR	9539023	UnaryOperator	&		9538866	0					
ANR	9539024	PtrMemberAccess	s -> dev		9538866	1					
ANR	9539025	Identifier	s		9538866	0					
ANR	9539026	Identifier	dev		9538866	1					
ANR	9539027	Argument	"""setup MSI\\n"""		9538866	1					
ANR	9539028	PrimaryExpression	"""setup MSI\\n"""		9538866	0					
ANR	9539029	IfStatement	if ( xen_pt_msi_setup ( s ) )		9538866	1					
ANR	9539030	Condition	xen_pt_msi_setup ( s )	63:16:1256:1274	9538866	0	True				
ANR	9539031	CallExpression	xen_pt_msi_setup ( s )		9538866	0					
ANR	9539032	Callee	xen_pt_msi_setup		9538866	0					
ANR	9539033	Identifier	xen_pt_msi_setup		9538866	0					
ANR	9539034	ArgumentList	s		9538866	1					
ANR	9539035	Argument	s		9538866	0					
ANR	9539036	Identifier	s		9538866	0					
ANR	9539037	CompoundStatement		57:37:1061:1061	9538866	1					
ANR	9539038	ExpressionStatement	* val &= ~PCI_MSI_FLAGS_ENABLE	75:16:1574:1603	9538866	0	True				
ANR	9539039	AssignmentExpression	* val &= ~PCI_MSI_FLAGS_ENABLE		9538866	0		&=			
ANR	9539040	UnaryOperationExpression	* val		9538866	0					
ANR	9539041	UnaryOperator	*		9538866	0					
ANR	9539042	Identifier	val		9538866	1					
ANR	9539043	Identifier	~PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539044	ExpressionStatement	"XEN_PT_WARN ( & s -> dev , ""Can not map MSI.\\n"" )"	77:16:1622:1664	9538866	1	True				
ANR	9539045	CallExpression	"XEN_PT_WARN ( & s -> dev , ""Can not map MSI.\\n"" )"		9538866	0					
ANR	9539046	Callee	XEN_PT_WARN		9538866	0					
ANR	9539047	Identifier	XEN_PT_WARN		9538866	0					
ANR	9539048	ArgumentList	& s -> dev		9538866	1					
ANR	9539049	Argument	& s -> dev		9538866	0					
ANR	9539050	UnaryOperationExpression	& s -> dev		9538866	0					
ANR	9539051	UnaryOperator	&		9538866	0					
ANR	9539052	PtrMemberAccess	s -> dev		9538866	1					
ANR	9539053	Identifier	s		9538866	0					
ANR	9539054	Identifier	dev		9538866	1					
ANR	9539055	Argument	"""Can not map MSI.\\n"""		9538866	1					
ANR	9539056	PrimaryExpression	"""Can not map MSI.\\n"""		9538866	0					
ANR	9539057	ReturnStatement	return 0 ;	79:16:1683:1691	9538866	2	True				
ANR	9539058	PrimaryExpression	0		9538866	0					
ANR	9539059	IfStatement	if ( xen_pt_msi_update ( s ) )		9538866	2					
ANR	9539060	Condition	xen_pt_msi_update ( s )	83:16:1725:1744	9538866	0	True				
ANR	9539061	CallExpression	xen_pt_msi_update ( s )		9538866	0					
ANR	9539062	Callee	xen_pt_msi_update		9538866	0					
ANR	9539063	Identifier	xen_pt_msi_update		9538866	0					
ANR	9539064	ArgumentList	s		9538866	1					
ANR	9539065	Argument	s		9538866	0					
ANR	9539066	Identifier	s		9538866	0					
ANR	9539067	CompoundStatement		77:38:1531:1531	9538866	1					
ANR	9539068	ExpressionStatement	* val &= ~PCI_MSI_FLAGS_ENABLE	85:16:1766:1795	9538866	0	True				
ANR	9539069	AssignmentExpression	* val &= ~PCI_MSI_FLAGS_ENABLE		9538866	0		&=			
ANR	9539070	UnaryOperationExpression	* val		9538866	0					
ANR	9539071	UnaryOperator	*		9538866	0					
ANR	9539072	Identifier	val		9538866	1					
ANR	9539073	Identifier	~PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539074	ExpressionStatement	"XEN_PT_WARN ( & s -> dev , ""Can not bind MSI\\n"" )"	87:16:1814:1856	9538866	1	True				
ANR	9539075	CallExpression	"XEN_PT_WARN ( & s -> dev , ""Can not bind MSI\\n"" )"		9538866	0					
ANR	9539076	Callee	XEN_PT_WARN		9538866	0					
ANR	9539077	Identifier	XEN_PT_WARN		9538866	0					
ANR	9539078	ArgumentList	& s -> dev		9538866	1					
ANR	9539079	Argument	& s -> dev		9538866	0					
ANR	9539080	UnaryOperationExpression	& s -> dev		9538866	0					
ANR	9539081	UnaryOperator	&		9538866	0					
ANR	9539082	PtrMemberAccess	s -> dev		9538866	1					
ANR	9539083	Identifier	s		9538866	0					
ANR	9539084	Identifier	dev		9538866	1					
ANR	9539085	Argument	"""Can not bind MSI\\n"""		9538866	1					
ANR	9539086	PrimaryExpression	"""Can not bind MSI\\n"""		9538866	0					
ANR	9539087	ReturnStatement	return 0 ;	89:16:1875:1883	9538866	2	True				
ANR	9539088	PrimaryExpression	0		9538866	0					
ANR	9539089	ExpressionStatement	msi -> initialized = true	93:12:1913:1936	9538866	3	True				
ANR	9539090	AssignmentExpression	msi -> initialized = true		9538866	0		=			
ANR	9539091	PtrMemberAccess	msi -> initialized		9538866	0					
ANR	9539092	Identifier	msi		9538866	0					
ANR	9539093	Identifier	initialized		9538866	1					
ANR	9539094	Identifier	true		9538866	1					
ANR	9539095	ExpressionStatement	msi -> mapped = true	95:12:1951:1969	9538866	4	True				
ANR	9539096	AssignmentExpression	msi -> mapped = true		9538866	0		=			
ANR	9539097	PtrMemberAccess	msi -> mapped		9538866	0					
ANR	9539098	Identifier	msi		9538866	0					
ANR	9539099	Identifier	mapped		9538866	1					
ANR	9539100	Identifier	true		9538866	1					
ANR	9539101	ExpressionStatement	msi -> flags |= PCI_MSI_FLAGS_ENABLE	99:8:1991:2025	9538866	1	True				
ANR	9539102	AssignmentExpression	msi -> flags |= PCI_MSI_FLAGS_ENABLE		9538866	0		|=			
ANR	9539103	PtrMemberAccess	msi -> flags		9538866	0					
ANR	9539104	Identifier	msi		9538866	0					
ANR	9539105	Identifier	flags		9538866	1					
ANR	9539106	Identifier	PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539107	ElseStatement	else		9538866	0					
ANR	9539108	CompoundStatement		95:11:1823:1823	9538866	0					
ANR	9539109	ExpressionStatement	msi -> flags &= ~PCI_MSI_FLAGS_ENABLE	103:8:2050:2085	9538866	0	True				
ANR	9539110	AssignmentExpression	msi -> flags &= ~PCI_MSI_FLAGS_ENABLE		9538866	0		&=			
ANR	9539111	PtrMemberAccess	msi -> flags		9538866	0					
ANR	9539112	Identifier	msi		9538866	0					
ANR	9539113	Identifier	flags		9538866	1					
ANR	9539114	Identifier	~PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539115	ExpressionStatement	* val &= ~PCI_MSI_FLAGS_ENABLE	111:4:2140:2169	9538866	13	True				
ANR	9539116	AssignmentExpression	* val &= ~PCI_MSI_FLAGS_ENABLE		9538866	0		&=			
ANR	9539117	UnaryOperationExpression	* val		9538866	0					
ANR	9539118	UnaryOperator	*		9538866	0					
ANR	9539119	Identifier	val		9538866	1					
ANR	9539120	Identifier	~PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539121	ExpressionStatement	* val |= raw_val & PCI_MSI_FLAGS_ENABLE	113:4:2176:2214	9538866	14	True				
ANR	9539122	AssignmentExpression	* val |= raw_val & PCI_MSI_FLAGS_ENABLE		9538866	0		|=			
ANR	9539123	UnaryOperationExpression	* val		9538866	0					
ANR	9539124	UnaryOperator	*		9538866	0					
ANR	9539125	Identifier	val		9538866	1					
ANR	9539126	BitAndExpression	raw_val & PCI_MSI_FLAGS_ENABLE		9538866	1		&			
ANR	9539127	Identifier	raw_val		9538866	0					
ANR	9539128	Identifier	PCI_MSI_FLAGS_ENABLE		9538866	1					
ANR	9539129	ReturnStatement	return 0 ;	117:4:2223:2231	9538866	15	True				
ANR	9539130	PrimaryExpression	0		9538866	0					
ANR	9539131	ReturnType	static int		9538866	1					
ANR	9539132	Identifier	xen_pt_msgctrl_reg_write		9538866	2					
ANR	9539133	ParameterList	"XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint16_t * val , uint16_t dev_value , uint16_t valid_mask"		9538866	3					
ANR	9539134	Parameter	XenPCIPassthroughState * s	1:36:36:60	9538866	0	True				
ANR	9539135	ParameterType	XenPCIPassthroughState *		9538866	0					
ANR	9539136	Identifier	s		9538866	1					
ANR	9539137	Parameter	XenPTReg * cfg_entry	3:36:100:118	9538866	1	True				
ANR	9539138	ParameterType	XenPTReg *		9538866	0					
ANR	9539139	Identifier	cfg_entry		9538866	1					
ANR	9539140	Parameter	uint16_t * val	3:57:121:133	9538866	2	True				
ANR	9539141	ParameterType	uint16_t *		9538866	0					
ANR	9539142	Identifier	val		9538866	1					
ANR	9539143	Parameter	uint16_t dev_value	5:36:173:190	9538866	3	True				
ANR	9539144	ParameterType	uint16_t		9538866	0					
ANR	9539145	Identifier	dev_value		9538866	1					
ANR	9539146	Parameter	uint16_t valid_mask	5:56:193:211	9538866	4	True				
ANR	9539147	ParameterType	uint16_t		9538866	0					
ANR	9539148	Identifier	valid_mask		9538866	1					
ANR	9539149	CFGEntryNode	ENTRY		9538866		True				
ANR	9539150	CFGExitNode	EXIT		9538866		True				
ANR	9539151	Symbol	PCI_MSI_FLAGS_ENABLE		9538866						
ANR	9539152	Symbol	* cfg_entry		9538866						
ANR	9539153	Symbol	msi		9538866						
ANR	9539154	Symbol	xen_pt_msi_update		9538866						
ANR	9539155	Symbol	cfg_entry -> data		9538866						
ANR	9539156	Symbol	msi -> initialized		9538866						
ANR	9539157	Symbol	valid_mask		9538866						
ANR	9539158	Symbol	cfg_entry -> reg		9538866						
ANR	9539159	Symbol	~reg -> emu_mask		9538866						
ANR	9539160	Symbol	writable_mask		9538866						
ANR	9539161	Symbol	& s -> dev		9538866						
ANR	9539162	Symbol	* val		9538866						
ANR	9539163	Symbol	~reg -> ro_mask		9538866						
ANR	9539164	Symbol	raw_val		9538866						
ANR	9539165	Symbol	XEN_PT_MERGE_VALUE		9538866						
ANR	9539166	Symbol	s -> msi		9538866						
ANR	9539167	Symbol	msi -> mapped		9538866						
ANR	9539168	Symbol	reg		9538866						
ANR	9539169	Symbol	msi -> flags		9538866						
ANR	9539170	Symbol	val		9538866						
ANR	9539171	Symbol	PCI_MSI_FLAGS_QSIZE		9538866						
ANR	9539172	Symbol	* ~reg		9538866						
ANR	9539173	Symbol	cfg_entry		9538866						
ANR	9539174	Symbol	~reg		9538866						
ANR	9539175	Symbol	* msi		9538866						
ANR	9539176	Symbol	throughable_mask		9538866						
ANR	9539177	Symbol	s		9538866						
ANR	9539178	Symbol	xen_pt_msi_setup		9538866						
ANR	9539179	Symbol	~PCI_MSI_FLAGS_ENABLE		9538866						
ANR	9539180	Symbol	true		9538866						
ANR	9539181	Symbol	dev_value		9538866						
ANR	9539182	Symbol	* s		9538866						
ANR	9539183	Symbol	reg -> emu_mask		9538866						
ANR	9539184	Symbol	* reg		9538866						
