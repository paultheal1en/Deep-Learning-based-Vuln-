command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5090776	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kvm_arch_get_supported_cpuid_01_0.c								
ANR	5090777	Function	kvm_arch_get_supported_cpuid	1:0:0:1925							
ANR	5090778	FunctionDef	"kvm_arch_get_supported_cpuid (CPUState * env , uint32_t function , uint32_t index , int reg)"		5090777	0					
ANR	5090779	CompoundStatement		5:0:137:1925	5090777	0					
ANR	5090780	IdentifierDeclStatement	struct kvm_cpuid2 * cpuid ;	7:4:144:168	5090777	0	True				
ANR	5090781	IdentifierDecl	* cpuid		5090777	0					
ANR	5090782	IdentifierDeclType	struct kvm_cpuid2 *		5090777	0					
ANR	5090783	Identifier	cpuid		5090777	1					
ANR	5090784	IdentifierDeclStatement	"int i , max ;"	9:4:175:185	5090777	1	True				
ANR	5090785	IdentifierDecl	i		5090777	0					
ANR	5090786	IdentifierDeclType	int		5090777	0					
ANR	5090787	Identifier	i		5090777	1					
ANR	5090788	IdentifierDecl	max		5090777	1					
ANR	5090789	IdentifierDeclType	int		5090777	0					
ANR	5090790	Identifier	max		5090777	1					
ANR	5090791	IdentifierDeclStatement	uint32_t ret = 0 ;	11:4:192:208	5090777	2	True				
ANR	5090792	IdentifierDecl	ret = 0		5090777	0					
ANR	5090793	IdentifierDeclType	uint32_t		5090777	0					
ANR	5090794	Identifier	ret		5090777	1					
ANR	5090795	AssignmentExpression	ret = 0		5090777	2		=			
ANR	5090796	Identifier	ret		5090777	0					
ANR	5090797	PrimaryExpression	0		5090777	1					
ANR	5090798	IdentifierDeclStatement	uint32_t cpuid_1_edx ;	13:4:215:235	5090777	3	True				
ANR	5090799	IdentifierDecl	cpuid_1_edx		5090777	0					
ANR	5090800	IdentifierDeclType	uint32_t		5090777	0					
ANR	5090801	Identifier	cpuid_1_edx		5090777	1					
ANR	5090802	IdentifierDeclStatement	int has_kvm_features = 0 ;	15:4:242:266	5090777	4	True				
ANR	5090803	IdentifierDecl	has_kvm_features = 0		5090777	0					
ANR	5090804	IdentifierDeclType	int		5090777	0					
ANR	5090805	Identifier	has_kvm_features		5090777	1					
ANR	5090806	AssignmentExpression	has_kvm_features = 0		5090777	2		=			
ANR	5090807	Identifier	has_kvm_features		5090777	0					
ANR	5090808	PrimaryExpression	0		5090777	1					
ANR	5090809	ExpressionStatement	max = 1	19:4:275:282	5090777	5	True				
ANR	5090810	AssignmentExpression	max = 1		5090777	0		=			
ANR	5090811	Identifier	max		5090777	0					
ANR	5090812	PrimaryExpression	1		5090777	1					
ANR	5090813	WhileStatement	"while ( ( cpuid = try_get_cpuid ( env -> kvm_state , max ) ) == NULL )"		5090777	6					
ANR	5090814	Condition	"( cpuid = try_get_cpuid ( env -> kvm_state , max ) ) == NULL"	21:11:296:347	5090777	0	True				
ANR	5090815	EqualityExpression	"( cpuid = try_get_cpuid ( env -> kvm_state , max ) ) == NULL"		5090777	0		==			
ANR	5090816	AssignmentExpression	"cpuid = try_get_cpuid ( env -> kvm_state , max )"		5090777	0		=			
ANR	5090817	Identifier	cpuid		5090777	0					
ANR	5090818	CallExpression	"try_get_cpuid ( env -> kvm_state , max )"		5090777	1					
ANR	5090819	Callee	try_get_cpuid		5090777	0					
ANR	5090820	Identifier	try_get_cpuid		5090777	0					
ANR	5090821	ArgumentList	env -> kvm_state		5090777	1					
ANR	5090822	Argument	env -> kvm_state		5090777	0					
ANR	5090823	PtrMemberAccess	env -> kvm_state		5090777	0					
ANR	5090824	Identifier	env		5090777	0					
ANR	5090825	Identifier	kvm_state		5090777	1					
ANR	5090826	Argument	max		5090777	1					
ANR	5090827	Identifier	max		5090777	0					
ANR	5090828	Identifier	NULL		5090777	1					
ANR	5090829	CompoundStatement		17:65:212:212	5090777	1					
ANR	5090830	ExpressionStatement	max *= 2	23:8:361:369	5090777	0	True				
ANR	5090831	AssignmentExpression	max *= 2		5090777	0		*=			
ANR	5090832	Identifier	max		5090777	0					
ANR	5090833	PrimaryExpression	2		5090777	1					
ANR	5090834	ForStatement	for ( i = 0 ; i < cpuid -> nent ; ++ i )		5090777	7					
ANR	5090835	ForInit	i = 0 ;	29:9:390:395	5090777	0	True				
ANR	5090836	AssignmentExpression	i = 0		5090777	0		=			
ANR	5090837	Identifier	i		5090777	0					
ANR	5090838	PrimaryExpression	0		5090777	1					
ANR	5090839	Condition	i < cpuid -> nent	29:16:397:411	5090777	1	True				
ANR	5090840	RelationalExpression	i < cpuid -> nent		5090777	0		<			
ANR	5090841	Identifier	i		5090777	0					
ANR	5090842	PtrMemberAccess	cpuid -> nent		5090777	1					
ANR	5090843	Identifier	cpuid		5090777	0					
ANR	5090844	Identifier	nent		5090777	1					
ANR	5090845	UnaryExpression	++ i	29:33:414:416	5090777	2	True				
ANR	5090846	IncDec	++		5090777	0					
ANR	5090847	Identifier	i		5090777	1					
ANR	5090848	CompoundStatement		25:38:281:281	5090777	3					
ANR	5090849	IfStatement	if ( cpuid -> entries [ i ] . function == function && cpuid -> entries [ i ] . index == index )		5090777	0					
ANR	5090850	Condition	cpuid -> entries [ i ] . function == function && cpuid -> entries [ i ] . index == index	31:12:434:520	5090777	0	True				
ANR	5090851	AndExpression	cpuid -> entries [ i ] . function == function && cpuid -> entries [ i ] . index == index		5090777	0		&&			
ANR	5090852	EqualityExpression	cpuid -> entries [ i ] . function == function		5090777	0		==			
ANR	5090853	MemberAccess	cpuid -> entries [ i ] . function		5090777	0					
ANR	5090854	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090855	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090856	Identifier	cpuid		5090777	0					
ANR	5090857	Identifier	entries		5090777	1					
ANR	5090858	Identifier	i		5090777	1					
ANR	5090859	Identifier	function		5090777	1					
ANR	5090860	Identifier	function		5090777	1					
ANR	5090861	EqualityExpression	cpuid -> entries [ i ] . index == index		5090777	1		==			
ANR	5090862	MemberAccess	cpuid -> entries [ i ] . index		5090777	0					
ANR	5090863	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090864	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090865	Identifier	cpuid		5090777	0					
ANR	5090866	Identifier	entries		5090777	1					
ANR	5090867	Identifier	i		5090777	1					
ANR	5090868	Identifier	index		5090777	1					
ANR	5090869	Identifier	index		5090777	1					
ANR	5090870	CompoundStatement		29:46:385:385	5090777	1					
ANR	5090871	IfStatement	if ( cpuid -> entries [ i ] . function == KVM_CPUID_FEATURES )		5090777	0					
ANR	5090872	Condition	cpuid -> entries [ i ] . function == KVM_CPUID_FEATURES	35:16:542:589	5090777	0	True				
ANR	5090873	EqualityExpression	cpuid -> entries [ i ] . function == KVM_CPUID_FEATURES		5090777	0		==			
ANR	5090874	MemberAccess	cpuid -> entries [ i ] . function		5090777	0					
ANR	5090875	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090876	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090877	Identifier	cpuid		5090777	0					
ANR	5090878	Identifier	entries		5090777	1					
ANR	5090879	Identifier	i		5090777	1					
ANR	5090880	Identifier	function		5090777	1					
ANR	5090881	Identifier	KVM_CPUID_FEATURES		5090777	1					
ANR	5090882	CompoundStatement		31:66:454:454	5090777	1					
ANR	5090883	ExpressionStatement	has_kvm_features = 1	37:16:611:631	5090777	0	True				
ANR	5090884	AssignmentExpression	has_kvm_features = 1		5090777	0		=			
ANR	5090885	Identifier	has_kvm_features		5090777	0					
ANR	5090886	PrimaryExpression	1		5090777	1					
ANR	5090887	SwitchStatement	switch ( reg )		5090777	1					
ANR	5090888	Condition	reg	41:20:669:671	5090777	0	True				
ANR	5090889	Identifier	reg		5090777	0					
ANR	5090890	CompoundStatement		37:25:536:536	5090777	1					
ANR	5090891	Label	case R_EAX :	43:12:689:699	5090777	0	True				
ANR	5090892	Identifier	R_EAX		5090777	0					
ANR	5090893	ExpressionStatement	ret = cpuid -> entries [ i ] . eax	45:16:718:745	5090777	1	True				
ANR	5090894	AssignmentExpression	ret = cpuid -> entries [ i ] . eax		5090777	0		=			
ANR	5090895	Identifier	ret		5090777	0					
ANR	5090896	MemberAccess	cpuid -> entries [ i ] . eax		5090777	1					
ANR	5090897	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090898	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090899	Identifier	cpuid		5090777	0					
ANR	5090900	Identifier	entries		5090777	1					
ANR	5090901	Identifier	i		5090777	1					
ANR	5090902	Identifier	eax		5090777	1					
ANR	5090903	BreakStatement	break ;	47:16:764:769	5090777	2	True				
ANR	5090904	Label	case R_EBX :	49:12:784:794	5090777	3	True				
ANR	5090905	Identifier	R_EBX		5090777	0					
ANR	5090906	ExpressionStatement	ret = cpuid -> entries [ i ] . ebx	51:16:813:840	5090777	4	True				
ANR	5090907	AssignmentExpression	ret = cpuid -> entries [ i ] . ebx		5090777	0		=			
ANR	5090908	Identifier	ret		5090777	0					
ANR	5090909	MemberAccess	cpuid -> entries [ i ] . ebx		5090777	1					
ANR	5090910	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090911	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090912	Identifier	cpuid		5090777	0					
ANR	5090913	Identifier	entries		5090777	1					
ANR	5090914	Identifier	i		5090777	1					
ANR	5090915	Identifier	ebx		5090777	1					
ANR	5090916	BreakStatement	break ;	53:16:859:864	5090777	5	True				
ANR	5090917	Label	case R_ECX :	55:12:879:889	5090777	6	True				
ANR	5090918	Identifier	R_ECX		5090777	0					
ANR	5090919	ExpressionStatement	ret = cpuid -> entries [ i ] . ecx	57:16:908:935	5090777	7	True				
ANR	5090920	AssignmentExpression	ret = cpuid -> entries [ i ] . ecx		5090777	0		=			
ANR	5090921	Identifier	ret		5090777	0					
ANR	5090922	MemberAccess	cpuid -> entries [ i ] . ecx		5090777	1					
ANR	5090923	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090924	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090925	Identifier	cpuid		5090777	0					
ANR	5090926	Identifier	entries		5090777	1					
ANR	5090927	Identifier	i		5090777	1					
ANR	5090928	Identifier	ecx		5090777	1					
ANR	5090929	BreakStatement	break ;	59:16:954:959	5090777	8	True				
ANR	5090930	Label	case R_EDX :	61:12:974:984	5090777	9	True				
ANR	5090931	Identifier	R_EDX		5090777	0					
ANR	5090932	ExpressionStatement	ret = cpuid -> entries [ i ] . edx	63:16:1003:1030	5090777	10	True				
ANR	5090933	AssignmentExpression	ret = cpuid -> entries [ i ] . edx		5090777	0		=			
ANR	5090934	Identifier	ret		5090777	0					
ANR	5090935	MemberAccess	cpuid -> entries [ i ] . edx		5090777	1					
ANR	5090936	ArrayIndexing	cpuid -> entries [ i ]		5090777	0					
ANR	5090937	PtrMemberAccess	cpuid -> entries		5090777	0					
ANR	5090938	Identifier	cpuid		5090777	0					
ANR	5090939	Identifier	entries		5090777	1					
ANR	5090940	Identifier	i		5090777	1					
ANR	5090941	Identifier	edx		5090777	1					
ANR	5090942	SwitchStatement	switch ( function )		5090777	11					
ANR	5090943	Condition	function	65:24:1057:1064	5090777	0	True				
ANR	5090944	Identifier	function		5090777	0					
ANR	5090945	CompoundStatement		61:34:929:929	5090777	1					
ANR	5090946	Label	case 1 :	67:16:1086:1092	5090777	0	True				
ANR	5090947	ExpressionStatement	ret |= CPUID_MTRR | CPUID_PAT | CPUID_MCE | CPUID_MCA	71:20:1194:1247	5090777	1	True				
ANR	5090948	AssignmentExpression	ret |= CPUID_MTRR | CPUID_PAT | CPUID_MCE | CPUID_MCA		5090777	0		|=			
ANR	5090949	Identifier	ret		5090777	0					
ANR	5090950	InclusiveOrExpression	CPUID_MTRR | CPUID_PAT | CPUID_MCE | CPUID_MCA		5090777	1		|			
ANR	5090951	Identifier	CPUID_MTRR		5090777	0					
ANR	5090952	InclusiveOrExpression	CPUID_PAT | CPUID_MCE | CPUID_MCA		5090777	1		|			
ANR	5090953	Identifier	CPUID_PAT		5090777	0					
ANR	5090954	InclusiveOrExpression	CPUID_MCE | CPUID_MCA		5090777	1		|			
ANR	5090955	Identifier	CPUID_MCE		5090777	0					
ANR	5090956	Identifier	CPUID_MCA		5090777	1					
ANR	5090957	BreakStatement	break ;	73:20:1270:1275	5090777	2	True				
ANR	5090958	Label	case 0x80000001 :	75:16:1294:1309	5090777	3	True				
ANR	5090959	ExpressionStatement	"cpuid_1_edx = kvm_arch_get_supported_cpuid ( env , 1 , 0 , R_EDX )"	83:20:1509:1569	5090777	4	True				
ANR	5090960	AssignmentExpression	"cpuid_1_edx = kvm_arch_get_supported_cpuid ( env , 1 , 0 , R_EDX )"		5090777	0		=			
ANR	5090961	Identifier	cpuid_1_edx		5090777	0					
ANR	5090962	CallExpression	"kvm_arch_get_supported_cpuid ( env , 1 , 0 , R_EDX )"		5090777	1					
ANR	5090963	Callee	kvm_arch_get_supported_cpuid		5090777	0					
ANR	5090964	Identifier	kvm_arch_get_supported_cpuid		5090777	0					
ANR	5090965	ArgumentList	env		5090777	1					
ANR	5090966	Argument	env		5090777	0					
ANR	5090967	Identifier	env		5090777	0					
ANR	5090968	Argument	1		5090777	1					
ANR	5090969	PrimaryExpression	1		5090777	0					
ANR	5090970	Argument	0		5090777	2					
ANR	5090971	PrimaryExpression	0		5090777	0					
ANR	5090972	Argument	R_EDX		5090777	3					
ANR	5090973	Identifier	R_EDX		5090777	0					
ANR	5090974	ExpressionStatement	ret |= cpuid_1_edx & 0x183f7ff	85:20:1592:1622	5090777	5	True				
ANR	5090975	AssignmentExpression	ret |= cpuid_1_edx & 0x183f7ff		5090777	0		|=			
ANR	5090976	Identifier	ret		5090777	0					
ANR	5090977	BitAndExpression	cpuid_1_edx & 0x183f7ff		5090777	1		&			
ANR	5090978	Identifier	cpuid_1_edx		5090777	0					
ANR	5090979	PrimaryExpression	0x183f7ff		5090777	1					
ANR	5090980	BreakStatement	break ;	87:20:1645:1650	5090777	6	True				
ANR	5090981	BreakStatement	break ;	91:16:1688:1693	5090777	12	True				
ANR	5090982	ExpressionStatement	qemu_free ( cpuid )	101:4:1735:1751	5090777	8	True				
ANR	5090983	CallExpression	qemu_free ( cpuid )		5090777	0					
ANR	5090984	Callee	qemu_free		5090777	0					
ANR	5090985	Identifier	qemu_free		5090777	0					
ANR	5090986	ArgumentList	cpuid		5090777	1					
ANR	5090987	Argument	cpuid		5090777	0					
ANR	5090988	Identifier	cpuid		5090777	0					
ANR	5090989	IfStatement	if ( ! has_kvm_features && ( function == KVM_CPUID_FEATURES ) )		5090777	9					
ANR	5090990	Condition	! has_kvm_features && ( function == KVM_CPUID_FEATURES )	107:8:1802:1854	5090777	0	True				
ANR	5090991	AndExpression	! has_kvm_features && ( function == KVM_CPUID_FEATURES )		5090777	0		&&			
ANR	5090992	UnaryOperationExpression	! has_kvm_features		5090777	0					
ANR	5090993	UnaryOperator	!		5090777	0					
ANR	5090994	Identifier	has_kvm_features		5090777	1					
ANR	5090995	EqualityExpression	function == KVM_CPUID_FEATURES		5090777	1		==			
ANR	5090996	Identifier	function		5090777	0					
ANR	5090997	Identifier	KVM_CPUID_FEATURES		5090777	1					
ANR	5090998	CompoundStatement		103:63:1719:1719	5090777	1					
ANR	5090999	ExpressionStatement	ret = get_para_features ( env )	109:8:1868:1896	5090777	0	True				
ANR	5091000	AssignmentExpression	ret = get_para_features ( env )		5090777	0		=			
ANR	5091001	Identifier	ret		5090777	0					
ANR	5091002	CallExpression	get_para_features ( env )		5090777	1					
ANR	5091003	Callee	get_para_features		5090777	0					
ANR	5091004	Identifier	get_para_features		5090777	0					
ANR	5091005	ArgumentList	env		5090777	1					
ANR	5091006	Argument	env		5090777	0					
ANR	5091007	Identifier	env		5090777	0					
ANR	5091008	ReturnStatement	return ret ;	115:4:1912:1922	5090777	10	True				
ANR	5091009	Identifier	ret		5090777	0					
ANR	5091010	ReturnType	uint32_t		5090777	1					
ANR	5091011	Identifier	kvm_arch_get_supported_cpuid		5090777	2					
ANR	5091012	ParameterList	"CPUState * env , uint32_t function , uint32_t index , int reg"		5090777	3					
ANR	5091013	Parameter	CPUState * env	1:38:38:50	5090777	0	True				
ANR	5091014	ParameterType	CPUState *		5090777	0					
ANR	5091015	Identifier	env		5090777	1					
ANR	5091016	Parameter	uint32_t function	1:53:53:69	5090777	1	True				
ANR	5091017	ParameterType	uint32_t		5090777	0					
ANR	5091018	Identifier	function		5090777	1					
ANR	5091019	Parameter	uint32_t index	3:38:111:124	5090777	2	True				
ANR	5091020	ParameterType	uint32_t		5090777	0					
ANR	5091021	Identifier	index		5090777	1					
ANR	5091022	Parameter	int reg	3:54:127:133	5090777	3	True				
ANR	5091023	ParameterType	int		5090777	0					
ANR	5091024	Identifier	reg		5090777	1					
ANR	5091025	CFGEntryNode	ENTRY		5090777		True				
ANR	5091026	CFGExitNode	EXIT		5090777		True				
ANR	5091027	Symbol	R_EDX		5090777						
ANR	5091028	Symbol	* cpuid		5090777						
ANR	5091029	Symbol	cpuid -> nent		5090777						
ANR	5091030	Symbol	CPUID_PAT		5090777						
ANR	5091031	Symbol	cpuid -> entries [ i ] . ecx		5090777						
ANR	5091032	Symbol	reg		5090777						
ANR	5091033	Symbol	env -> kvm_state		5090777						
ANR	5091034	Symbol	function		5090777						
ANR	5091035	Symbol	has_kvm_features		5090777						
ANR	5091036	Symbol	cpuid -> entries [ i ] . eax		5090777						
ANR	5091037	Symbol	try_get_cpuid		5090777						
ANR	5091038	Symbol	cpuid -> entries		5090777						
ANR	5091039	Symbol	ret		5090777						
ANR	5091040	Symbol	NULL		5090777						
ANR	5091041	Symbol	cpuid		5090777						
ANR	5091042	Symbol	cpuid -> entries [ i ] . index		5090777						
ANR	5091043	Symbol	max		5090777						
ANR	5091044	Symbol	CPUID_MCE		5090777						
ANR	5091045	Symbol	* env		5090777						
ANR	5091046	Symbol	index		5090777						
ANR	5091047	Symbol	i		5090777						
ANR	5091048	Symbol	env		5090777						
ANR	5091049	Symbol	CPUID_MTRR		5090777						
ANR	5091050	Symbol	get_para_features		5090777						
ANR	5091051	Symbol	cpuid_1_edx		5090777						
ANR	5091052	Symbol	KVM_CPUID_FEATURES		5090777						
ANR	5091053	Symbol	* i		5090777						
ANR	5091054	Symbol	cpuid -> entries [ i ] . edx		5090777						
ANR	5091055	Symbol	cpuid -> entries [ i ] . function		5090777						
ANR	5091056	Symbol	CPUID_MCA		5090777						
ANR	5091057	Symbol	cpuid -> entries [ i ] . ebx		5090777						
ANR	5091058	Symbol	kvm_arch_get_supported_cpuid		5090777						
ANR	5091059	Symbol	* cpuid -> entries		5090777						
ANR	5091060	Symbol	* * cpuid		5090777						
