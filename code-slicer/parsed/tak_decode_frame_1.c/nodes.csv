command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8172152	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tak_decode_frame_1.c								
ANR	8172153	Function	tak_decode_frame	1:0:0:9211							
ANR	8172154	FunctionDef	"tak_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * pkt)"		8172153	0					
ANR	8172155	CompoundStatement		5:0:128:9211	8172153	0					
ANR	8172156	IdentifierDeclStatement	TAKDecContext * s = avctx -> priv_data ;	7:4:135:171	8172153	0	True				
ANR	8172157	IdentifierDecl	* s = avctx -> priv_data		8172153	0					
ANR	8172158	IdentifierDeclType	TAKDecContext *		8172153	0					
ANR	8172159	Identifier	s		8172153	1					
ANR	8172160	AssignmentExpression	* s = avctx -> priv_data		8172153	2		=			
ANR	8172161	Identifier	s		8172153	0					
ANR	8172162	PtrMemberAccess	avctx -> priv_data		8172153	1					
ANR	8172163	Identifier	avctx		8172153	0					
ANR	8172164	Identifier	priv_data		8172153	1					
ANR	8172165	IdentifierDeclStatement	AVFrame * frame = data ;	9:4:178:202	8172153	1	True				
ANR	8172166	IdentifierDecl	* frame = data		8172153	0					
ANR	8172167	IdentifierDeclType	AVFrame *		8172153	0					
ANR	8172168	Identifier	frame		8172153	1					
ANR	8172169	AssignmentExpression	* frame = data		8172153	2		=			
ANR	8172170	Identifier	data		8172153	0					
ANR	8172171	Identifier	data		8172153	1					
ANR	8172172	Statement	ThreadFrame	11:4:209:219	8172153	2	True				
ANR	8172173	Statement	tframe	11:16:221:226	8172153	3	True				
ANR	8172174	Statement	=	11:23:228:228	8172153	4	True				
ANR	8172175	CompoundStatement		7:25:101:101	8172153	5					
ANR	8172176	Statement	.	11:27:232:232	8172153	0	True				
ANR	8172177	Statement	f	11:28:233:233	8172153	1	True				
ANR	8172178	Statement	=	11:30:235:235	8172153	2	True				
ANR	8172179	Statement	data	11:32:237:240	8172153	3	True				
ANR	8172180	ExpressionStatement		11:38:243:243	8172153	6	True				
ANR	8172181	IdentifierDeclStatement	GetBitContext * gb = & s -> gb ;	13:4:250:276	8172153	7	True				
ANR	8172182	IdentifierDecl	* gb = & s -> gb		8172153	0					
ANR	8172183	IdentifierDeclType	GetBitContext *		8172153	0					
ANR	8172184	Identifier	gb		8172153	1					
ANR	8172185	AssignmentExpression	* gb = & s -> gb		8172153	2		=			
ANR	8172186	Identifier	gb		8172153	0					
ANR	8172187	UnaryOperationExpression	& s -> gb		8172153	1					
ANR	8172188	UnaryOperator	&		8172153	0					
ANR	8172189	PtrMemberAccess	s -> gb		8172153	1					
ANR	8172190	Identifier	s		8172153	0					
ANR	8172191	Identifier	gb		8172153	1					
ANR	8172192	IdentifierDeclStatement	"int chan , i , ret , hsize ;"	15:4:283:306	8172153	8	True				
ANR	8172193	IdentifierDecl	chan		8172153	0					
ANR	8172194	IdentifierDeclType	int		8172153	0					
ANR	8172195	Identifier	chan		8172153	1					
ANR	8172196	IdentifierDecl	i		8172153	1					
ANR	8172197	IdentifierDeclType	int		8172153	0					
ANR	8172198	Identifier	i		8172153	1					
ANR	8172199	IdentifierDecl	ret		8172153	2					
ANR	8172200	IdentifierDeclType	int		8172153	0					
ANR	8172201	Identifier	ret		8172153	1					
ANR	8172202	IdentifierDecl	hsize		8172153	3					
ANR	8172203	IdentifierDeclType	int		8172153	0					
ANR	8172204	Identifier	hsize		8172153	1					
ANR	8172205	IfStatement	if ( pkt -> size < TAK_MIN_FRAME_HEADER_BYTES )		8172153	9					
ANR	8172206	Condition	pkt -> size < TAK_MIN_FRAME_HEADER_BYTES	19:8:319:356	8172153	0	True				
ANR	8172207	RelationalExpression	pkt -> size < TAK_MIN_FRAME_HEADER_BYTES		8172153	0		<			
ANR	8172208	PtrMemberAccess	pkt -> size		8172153	0					
ANR	8172209	Identifier	pkt		8172153	0					
ANR	8172210	Identifier	size		8172153	1					
ANR	8172211	Identifier	TAK_MIN_FRAME_HEADER_BYTES		8172153	1					
ANR	8172212	ReturnStatement	return AVERROR_INVALIDDATA ;	21:8:368:394	8172153	1	True				
ANR	8172213	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172214	IfStatement	"if ( ( ret = init_get_bits8 ( gb , pkt -> data , pkt -> size ) ) < 0 )"		8172153	10					
ANR	8172215	Condition	"( ret = init_get_bits8 ( gb , pkt -> data , pkt -> size ) ) < 0"	25:8:407:458	8172153	0	True				
ANR	8172216	RelationalExpression	"( ret = init_get_bits8 ( gb , pkt -> data , pkt -> size ) ) < 0"		8172153	0		<			
ANR	8172217	AssignmentExpression	"ret = init_get_bits8 ( gb , pkt -> data , pkt -> size )"		8172153	0		=			
ANR	8172218	Identifier	ret		8172153	0					
ANR	8172219	CallExpression	"init_get_bits8 ( gb , pkt -> data , pkt -> size )"		8172153	1					
ANR	8172220	Callee	init_get_bits8		8172153	0					
ANR	8172221	Identifier	init_get_bits8		8172153	0					
ANR	8172222	ArgumentList	gb		8172153	1					
ANR	8172223	Argument	gb		8172153	0					
ANR	8172224	Identifier	gb		8172153	0					
ANR	8172225	Argument	pkt -> data		8172153	1					
ANR	8172226	PtrMemberAccess	pkt -> data		8172153	0					
ANR	8172227	Identifier	pkt		8172153	0					
ANR	8172228	Identifier	data		8172153	1					
ANR	8172229	Argument	pkt -> size		8172153	2					
ANR	8172230	PtrMemberAccess	pkt -> size		8172153	0					
ANR	8172231	Identifier	pkt		8172153	0					
ANR	8172232	Identifier	size		8172153	1					
ANR	8172233	PrimaryExpression	0		8172153	1					
ANR	8172234	ReturnStatement	return ret ;	27:8:470:480	8172153	1	True				
ANR	8172235	Identifier	ret		8172153	0					
ANR	8172236	IfStatement	"if ( ( ret = ff_tak_decode_frame_header ( avctx , gb , & s -> ti , 0 ) ) < 0 )"		8172153	11					
ANR	8172237	Condition	"( ret = ff_tak_decode_frame_header ( avctx , gb , & s -> ti , 0 ) ) < 0"	31:8:493:552	8172153	0	True				
ANR	8172238	RelationalExpression	"( ret = ff_tak_decode_frame_header ( avctx , gb , & s -> ti , 0 ) ) < 0"		8172153	0		<			
ANR	8172239	AssignmentExpression	"ret = ff_tak_decode_frame_header ( avctx , gb , & s -> ti , 0 )"		8172153	0		=			
ANR	8172240	Identifier	ret		8172153	0					
ANR	8172241	CallExpression	"ff_tak_decode_frame_header ( avctx , gb , & s -> ti , 0 )"		8172153	1					
ANR	8172242	Callee	ff_tak_decode_frame_header		8172153	0					
ANR	8172243	Identifier	ff_tak_decode_frame_header		8172153	0					
ANR	8172244	ArgumentList	avctx		8172153	1					
ANR	8172245	Argument	avctx		8172153	0					
ANR	8172246	Identifier	avctx		8172153	0					
ANR	8172247	Argument	gb		8172153	1					
ANR	8172248	Identifier	gb		8172153	0					
ANR	8172249	Argument	& s -> ti		8172153	2					
ANR	8172250	UnaryOperationExpression	& s -> ti		8172153	0					
ANR	8172251	UnaryOperator	&		8172153	0					
ANR	8172252	PtrMemberAccess	s -> ti		8172153	1					
ANR	8172253	Identifier	s		8172153	0					
ANR	8172254	Identifier	ti		8172153	1					
ANR	8172255	Argument	0		8172153	3					
ANR	8172256	PrimaryExpression	0		8172153	0					
ANR	8172257	PrimaryExpression	0		8172153	1					
ANR	8172258	ReturnStatement	return ret ;	33:8:564:574	8172153	1	True				
ANR	8172259	Identifier	ret		8172153	0					
ANR	8172260	ExpressionStatement	hsize = get_bits_count ( gb ) / 8	37:4:583:613	8172153	12	True				
ANR	8172261	AssignmentExpression	hsize = get_bits_count ( gb ) / 8		8172153	0		=			
ANR	8172262	Identifier	hsize		8172153	0					
ANR	8172263	MultiplicativeExpression	get_bits_count ( gb ) / 8		8172153	1		/			
ANR	8172264	CallExpression	get_bits_count ( gb )		8172153	0					
ANR	8172265	Callee	get_bits_count		8172153	0					
ANR	8172266	Identifier	get_bits_count		8172153	0					
ANR	8172267	ArgumentList	gb		8172153	1					
ANR	8172268	Argument	gb		8172153	0					
ANR	8172269	Identifier	gb		8172153	0					
ANR	8172270	PrimaryExpression	8		8172153	1					
ANR	8172271	IfStatement	if ( avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT ) )		8172153	13					
ANR	8172272	Condition	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT )	39:8:624:680	8172153	0	True				
ANR	8172273	BitAndExpression	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT )		8172153	0		&			
ANR	8172274	PtrMemberAccess	avctx -> err_recognition		8172153	0					
ANR	8172275	Identifier	avctx		8172153	0					
ANR	8172276	Identifier	err_recognition		8172153	1					
ANR	8172277	InclusiveOrExpression	AV_EF_CRCCHECK | AV_EF_COMPLIANT		8172153	1		|			
ANR	8172278	Identifier	AV_EF_CRCCHECK		8172153	0					
ANR	8172279	Identifier	AV_EF_COMPLIANT		8172153	1					
ANR	8172280	CompoundStatement		35:67:554:554	8172153	1					
ANR	8172281	IfStatement	"if ( ff_tak_check_crc ( pkt -> data , hsize ) )"		8172153	0					
ANR	8172282	Condition	"ff_tak_check_crc ( pkt -> data , hsize )"	41:12:698:731	8172153	0	True				
ANR	8172283	CallExpression	"ff_tak_check_crc ( pkt -> data , hsize )"		8172153	0					
ANR	8172284	Callee	ff_tak_check_crc		8172153	0					
ANR	8172285	Identifier	ff_tak_check_crc		8172153	0					
ANR	8172286	ArgumentList	pkt -> data		8172153	1					
ANR	8172287	Argument	pkt -> data		8172153	0					
ANR	8172288	PtrMemberAccess	pkt -> data		8172153	0					
ANR	8172289	Identifier	pkt		8172153	0					
ANR	8172290	Identifier	data		8172153	1					
ANR	8172291	Argument	hsize		8172153	1					
ANR	8172292	Identifier	hsize		8172153	0					
ANR	8172293	CompoundStatement		37:48:605:605	8172153	1					
ANR	8172294	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""CRC error\\n"" )"	43:12:749:791	8172153	0	True				
ANR	8172295	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""CRC error\\n"" )"		8172153	0					
ANR	8172296	Callee	av_log		8172153	0					
ANR	8172297	Identifier	av_log		8172153	0					
ANR	8172298	ArgumentList	avctx		8172153	1					
ANR	8172299	Argument	avctx		8172153	0					
ANR	8172300	Identifier	avctx		8172153	0					
ANR	8172301	Argument	AV_LOG_ERROR		8172153	1					
ANR	8172302	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8172303	Argument	"""CRC error\\n"""		8172153	2					
ANR	8172304	PrimaryExpression	"""CRC error\\n"""		8172153	0					
ANR	8172305	IfStatement	if ( avctx -> err_recognition & AV_EF_EXPLODE )		8172153	1					
ANR	8172306	Condition	avctx -> err_recognition & AV_EF_EXPLODE	45:16:810:847	8172153	0	True				
ANR	8172307	BitAndExpression	avctx -> err_recognition & AV_EF_EXPLODE		8172153	0		&			
ANR	8172308	PtrMemberAccess	avctx -> err_recognition		8172153	0					
ANR	8172309	Identifier	avctx		8172153	0					
ANR	8172310	Identifier	err_recognition		8172153	1					
ANR	8172311	Identifier	AV_EF_EXPLODE		8172153	1					
ANR	8172312	ReturnStatement	return AVERROR_INVALIDDATA ;	47:16:867:893	8172153	1	True				
ANR	8172313	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172314	IfStatement	if ( s -> ti . codec != TAK_CODEC_MONO_STEREO && s -> ti . codec != TAK_CODEC_MULTICHANNEL )		8172153	14					
ANR	8172315	Condition	s -> ti . codec != TAK_CODEC_MONO_STEREO && s -> ti . codec != TAK_CODEC_MULTICHANNEL	55:8:924:1009	8172153	0	True				
ANR	8172316	AndExpression	s -> ti . codec != TAK_CODEC_MONO_STEREO && s -> ti . codec != TAK_CODEC_MULTICHANNEL		8172153	0		&&			
ANR	8172317	EqualityExpression	s -> ti . codec != TAK_CODEC_MONO_STEREO		8172153	0		!=			
ANR	8172318	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172319	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172320	Identifier	s		8172153	0					
ANR	8172321	Identifier	ti		8172153	1					
ANR	8172322	Identifier	codec		8172153	1					
ANR	8172323	Identifier	TAK_CODEC_MONO_STEREO		8172153	1					
ANR	8172324	EqualityExpression	s -> ti . codec != TAK_CODEC_MULTICHANNEL		8172153	1		!=			
ANR	8172325	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172326	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172327	Identifier	s		8172153	0					
ANR	8172328	Identifier	ti		8172153	1					
ANR	8172329	Identifier	codec		8172153	1					
ANR	8172330	Identifier	TAK_CODEC_MULTICHANNEL		8172153	1					
ANR	8172331	CompoundStatement		53:47:883:883	8172153	1					
ANR	8172332	ExpressionStatement	"avpriv_report_missing_feature ( avctx , ""TAK codec type %d"" , s -> ti . codec )"	59:8:1023:1093	8172153	0	True				
ANR	8172333	CallExpression	"avpriv_report_missing_feature ( avctx , ""TAK codec type %d"" , s -> ti . codec )"		8172153	0					
ANR	8172334	Callee	avpriv_report_missing_feature		8172153	0					
ANR	8172335	Identifier	avpriv_report_missing_feature		8172153	0					
ANR	8172336	ArgumentList	avctx		8172153	1					
ANR	8172337	Argument	avctx		8172153	0					
ANR	8172338	Identifier	avctx		8172153	0					
ANR	8172339	Argument	"""TAK codec type %d"""		8172153	1					
ANR	8172340	PrimaryExpression	"""TAK codec type %d"""		8172153	0					
ANR	8172341	Argument	s -> ti . codec		8172153	2					
ANR	8172342	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172343	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172344	Identifier	s		8172153	0					
ANR	8172345	Identifier	ti		8172153	1					
ANR	8172346	Identifier	codec		8172153	1					
ANR	8172347	ReturnStatement	return AVERROR_PATCHWELCOME ;	61:8:1104:1131	8172153	1	True				
ANR	8172348	Identifier	AVERROR_PATCHWELCOME		8172153	0					
ANR	8172349	IfStatement	if ( s -> ti . data_type )		8172153	15					
ANR	8172350	Condition	s -> ti . data_type	65:8:1149:1163	8172153	0	True				
ANR	8172351	MemberAccess	s -> ti . data_type		8172153	0					
ANR	8172352	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172353	Identifier	s		8172153	0					
ANR	8172354	Identifier	ti		8172153	1					
ANR	8172355	Identifier	data_type		8172153	1					
ANR	8172356	CompoundStatement		61:25:1037:1037	8172153	1					
ANR	8172357	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported data type: %d\\n"" , s -> ti . data_type )"	67:8:1177:1268	8172153	0	True				
ANR	8172358	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported data type: %d\\n"" , s -> ti . data_type )"		8172153	0					
ANR	8172359	Callee	av_log		8172153	0					
ANR	8172360	Identifier	av_log		8172153	0					
ANR	8172361	ArgumentList	avctx		8172153	1					
ANR	8172362	Argument	avctx		8172153	0					
ANR	8172363	Identifier	avctx		8172153	0					
ANR	8172364	Argument	AV_LOG_ERROR		8172153	1					
ANR	8172365	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8172366	Argument	"""unsupported data type: %d\\n"""		8172153	2					
ANR	8172367	PrimaryExpression	"""unsupported data type: %d\\n"""		8172153	0					
ANR	8172368	Argument	s -> ti . data_type		8172153	3					
ANR	8172369	MemberAccess	s -> ti . data_type		8172153	0					
ANR	8172370	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172371	Identifier	s		8172153	0					
ANR	8172372	Identifier	ti		8172153	1					
ANR	8172373	Identifier	data_type		8172153	1					
ANR	8172374	ReturnStatement	return AVERROR_INVALIDDATA ;	71:8:1279:1305	8172153	1	True				
ANR	8172375	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172376	IfStatement	if ( s -> ti . codec == TAK_CODEC_MONO_STEREO && s -> ti . channels > 2 )		8172153	16					
ANR	8172377	Condition	s -> ti . codec == TAK_CODEC_MONO_STEREO && s -> ti . channels > 2	75:8:1323:1380	8172153	0	True				
ANR	8172378	AndExpression	s -> ti . codec == TAK_CODEC_MONO_STEREO && s -> ti . channels > 2		8172153	0		&&			
ANR	8172379	EqualityExpression	s -> ti . codec == TAK_CODEC_MONO_STEREO		8172153	0		==			
ANR	8172380	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172381	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172382	Identifier	s		8172153	0					
ANR	8172383	Identifier	ti		8172153	1					
ANR	8172384	Identifier	codec		8172153	1					
ANR	8172385	Identifier	TAK_CODEC_MONO_STEREO		8172153	1					
ANR	8172386	RelationalExpression	s -> ti . channels > 2		8172153	1		>			
ANR	8172387	MemberAccess	s -> ti . channels		8172153	0					
ANR	8172388	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172389	Identifier	s		8172153	0					
ANR	8172390	Identifier	ti		8172153	1					
ANR	8172391	Identifier	channels		8172153	1					
ANR	8172392	PrimaryExpression	2		8172153	1					
ANR	8172393	CompoundStatement		71:68:1254:1254	8172153	1					
ANR	8172394	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid number of channels: %d\\n"" , s -> ti . channels )"	77:8:1394:1489	8172153	0	True				
ANR	8172395	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid number of channels: %d\\n"" , s -> ti . channels )"		8172153	0					
ANR	8172396	Callee	av_log		8172153	0					
ANR	8172397	Identifier	av_log		8172153	0					
ANR	8172398	ArgumentList	avctx		8172153	1					
ANR	8172399	Argument	avctx		8172153	0					
ANR	8172400	Identifier	avctx		8172153	0					
ANR	8172401	Argument	AV_LOG_ERROR		8172153	1					
ANR	8172402	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8172403	Argument	"""invalid number of channels: %d\\n"""		8172153	2					
ANR	8172404	PrimaryExpression	"""invalid number of channels: %d\\n"""		8172153	0					
ANR	8172405	Argument	s -> ti . channels		8172153	3					
ANR	8172406	MemberAccess	s -> ti . channels		8172153	0					
ANR	8172407	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172408	Identifier	s		8172153	0					
ANR	8172409	Identifier	ti		8172153	1					
ANR	8172410	Identifier	channels		8172153	1					
ANR	8172411	ReturnStatement	return AVERROR_INVALIDDATA ;	81:8:1500:1526	8172153	1	True				
ANR	8172412	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172413	IfStatement	if ( s -> ti . channels > 6 )		8172153	17					
ANR	8172414	Condition	s -> ti . channels > 6	85:8:1544:1561	8172153	0	True				
ANR	8172415	RelationalExpression	s -> ti . channels > 6		8172153	0		>			
ANR	8172416	MemberAccess	s -> ti . channels		8172153	0					
ANR	8172417	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172418	Identifier	s		8172153	0					
ANR	8172419	Identifier	ti		8172153	1					
ANR	8172420	Identifier	channels		8172153	1					
ANR	8172421	PrimaryExpression	6		8172153	1					
ANR	8172422	CompoundStatement		81:28:1435:1435	8172153	1					
ANR	8172423	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported number of channels: %d\\n"" , s -> ti . channels )"	87:8:1575:1674	8172153	0	True				
ANR	8172424	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported number of channels: %d\\n"" , s -> ti . channels )"		8172153	0					
ANR	8172425	Callee	av_log		8172153	0					
ANR	8172426	Identifier	av_log		8172153	0					
ANR	8172427	ArgumentList	avctx		8172153	1					
ANR	8172428	Argument	avctx		8172153	0					
ANR	8172429	Identifier	avctx		8172153	0					
ANR	8172430	Argument	AV_LOG_ERROR		8172153	1					
ANR	8172431	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8172432	Argument	"""unsupported number of channels: %d\\n"""		8172153	2					
ANR	8172433	PrimaryExpression	"""unsupported number of channels: %d\\n"""		8172153	0					
ANR	8172434	Argument	s -> ti . channels		8172153	3					
ANR	8172435	MemberAccess	s -> ti . channels		8172153	0					
ANR	8172436	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172437	Identifier	s		8172153	0					
ANR	8172438	Identifier	ti		8172153	1					
ANR	8172439	Identifier	channels		8172153	1					
ANR	8172440	ReturnStatement	return AVERROR_INVALIDDATA ;	91:8:1685:1711	8172153	1	True				
ANR	8172441	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172442	IfStatement	if ( s -> ti . frame_samples <= 0 )		8172153	18					
ANR	8172443	Condition	s -> ti . frame_samples <= 0	97:8:1731:1754	8172153	0	True				
ANR	8172444	RelationalExpression	s -> ti . frame_samples <= 0		8172153	0		<=			
ANR	8172445	MemberAccess	s -> ti . frame_samples		8172153	0					
ANR	8172446	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172447	Identifier	s		8172153	0					
ANR	8172448	Identifier	ti		8172153	1					
ANR	8172449	Identifier	frame_samples		8172153	1					
ANR	8172450	PrimaryExpression	0		8172153	1					
ANR	8172451	CompoundStatement		93:34:1628:1628	8172153	1					
ANR	8172452	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported/invalid number of samples\\n"" )"	99:8:1768:1838	8172153	0	True				
ANR	8172453	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported/invalid number of samples\\n"" )"		8172153	0					
ANR	8172454	Callee	av_log		8172153	0					
ANR	8172455	Identifier	av_log		8172153	0					
ANR	8172456	ArgumentList	avctx		8172153	1					
ANR	8172457	Argument	avctx		8172153	0					
ANR	8172458	Identifier	avctx		8172153	0					
ANR	8172459	Argument	AV_LOG_ERROR		8172153	1					
ANR	8172460	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8172461	Argument	"""unsupported/invalid number of samples\\n"""		8172153	2					
ANR	8172462	PrimaryExpression	"""unsupported/invalid number of samples\\n"""		8172153	0					
ANR	8172463	ReturnStatement	return AVERROR_INVALIDDATA ;	101:8:1849:1875	8172153	1	True				
ANR	8172464	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172465	ExpressionStatement	avctx -> bits_per_raw_sample = s -> ti . bps	107:4:1891:1929	8172153	19	True				
ANR	8172466	AssignmentExpression	avctx -> bits_per_raw_sample = s -> ti . bps		8172153	0		=			
ANR	8172467	PtrMemberAccess	avctx -> bits_per_raw_sample		8172153	0					
ANR	8172468	Identifier	avctx		8172153	0					
ANR	8172469	Identifier	bits_per_raw_sample		8172153	1					
ANR	8172470	MemberAccess	s -> ti . bps		8172153	1					
ANR	8172471	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172472	Identifier	s		8172153	0					
ANR	8172473	Identifier	ti		8172153	1					
ANR	8172474	Identifier	bps		8172153	1					
ANR	8172475	IfStatement	if ( ( ret = set_bps_params ( avctx ) ) < 0 )		8172153	20					
ANR	8172476	Condition	( ret = set_bps_params ( avctx ) ) < 0	109:8:1940:1972	8172153	0	True				
ANR	8172477	RelationalExpression	( ret = set_bps_params ( avctx ) ) < 0		8172153	0		<			
ANR	8172478	AssignmentExpression	ret = set_bps_params ( avctx )		8172153	0		=			
ANR	8172479	Identifier	ret		8172153	0					
ANR	8172480	CallExpression	set_bps_params ( avctx )		8172153	1					
ANR	8172481	Callee	set_bps_params		8172153	0					
ANR	8172482	Identifier	set_bps_params		8172153	0					
ANR	8172483	ArgumentList	avctx		8172153	1					
ANR	8172484	Argument	avctx		8172153	0					
ANR	8172485	Identifier	avctx		8172153	0					
ANR	8172486	PrimaryExpression	0		8172153	1					
ANR	8172487	ReturnStatement	return ret ;	111:8:1984:1994	8172153	1	True				
ANR	8172488	Identifier	ret		8172153	0					
ANR	8172489	IfStatement	if ( s -> ti . sample_rate != avctx -> sample_rate )		8172153	21					
ANR	8172490	Condition	s -> ti . sample_rate != avctx -> sample_rate	113:8:2005:2043	8172153	0	True				
ANR	8172491	EqualityExpression	s -> ti . sample_rate != avctx -> sample_rate		8172153	0		!=			
ANR	8172492	MemberAccess	s -> ti . sample_rate		8172153	0					
ANR	8172493	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172494	Identifier	s		8172153	0					
ANR	8172495	Identifier	ti		8172153	1					
ANR	8172496	Identifier	sample_rate		8172153	1					
ANR	8172497	PtrMemberAccess	avctx -> sample_rate		8172153	1					
ANR	8172498	Identifier	avctx		8172153	0					
ANR	8172499	Identifier	sample_rate		8172153	1					
ANR	8172500	CompoundStatement		109:49:1917:1917	8172153	1					
ANR	8172501	ExpressionStatement	avctx -> sample_rate = s -> ti . sample_rate	115:8:2057:2095	8172153	0	True				
ANR	8172502	AssignmentExpression	avctx -> sample_rate = s -> ti . sample_rate		8172153	0		=			
ANR	8172503	PtrMemberAccess	avctx -> sample_rate		8172153	0					
ANR	8172504	Identifier	avctx		8172153	0					
ANR	8172505	Identifier	sample_rate		8172153	1					
ANR	8172506	MemberAccess	s -> ti . sample_rate		8172153	1					
ANR	8172507	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172508	Identifier	s		8172153	0					
ANR	8172509	Identifier	ti		8172153	1					
ANR	8172510	Identifier	sample_rate		8172153	1					
ANR	8172511	ExpressionStatement	set_sample_rate_params ( avctx )	117:8:2106:2135	8172153	1	True				
ANR	8172512	CallExpression	set_sample_rate_params ( avctx )		8172153	0					
ANR	8172513	Callee	set_sample_rate_params		8172153	0					
ANR	8172514	Identifier	set_sample_rate_params		8172153	0					
ANR	8172515	ArgumentList	avctx		8172153	1					
ANR	8172516	Argument	avctx		8172153	0					
ANR	8172517	Identifier	avctx		8172153	0					
ANR	8172518	IfStatement	if ( s -> ti . ch_layout )		8172153	22					
ANR	8172519	Condition	s -> ti . ch_layout	121:8:2153:2167	8172153	0	True				
ANR	8172520	MemberAccess	s -> ti . ch_layout		8172153	0					
ANR	8172521	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172522	Identifier	s		8172153	0					
ANR	8172523	Identifier	ti		8172153	1					
ANR	8172524	Identifier	ch_layout		8172153	1					
ANR	8172525	ExpressionStatement	avctx -> channel_layout = s -> ti . ch_layout	123:8:2179:2218	8172153	1	True				
ANR	8172526	AssignmentExpression	avctx -> channel_layout = s -> ti . ch_layout		8172153	0		=			
ANR	8172527	PtrMemberAccess	avctx -> channel_layout		8172153	0					
ANR	8172528	Identifier	avctx		8172153	0					
ANR	8172529	Identifier	channel_layout		8172153	1					
ANR	8172530	MemberAccess	s -> ti . ch_layout		8172153	1					
ANR	8172531	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172532	Identifier	s		8172153	0					
ANR	8172533	Identifier	ti		8172153	1					
ANR	8172534	Identifier	ch_layout		8172153	1					
ANR	8172535	ExpressionStatement	avctx -> channels = s -> ti . channels	125:4:2225:2257	8172153	23	True				
ANR	8172536	AssignmentExpression	avctx -> channels = s -> ti . channels		8172153	0		=			
ANR	8172537	PtrMemberAccess	avctx -> channels		8172153	0					
ANR	8172538	Identifier	avctx		8172153	0					
ANR	8172539	Identifier	channels		8172153	1					
ANR	8172540	MemberAccess	s -> ti . channels		8172153	1					
ANR	8172541	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172542	Identifier	s		8172153	0					
ANR	8172543	Identifier	ti		8172153	1					
ANR	8172544	Identifier	channels		8172153	1					
ANR	8172545	ExpressionStatement	s -> nb_samples = s -> ti . last_frame_samples ? s -> ti . last_frame_samples : s -> ti . frame_samples	129:4:2266:2401	8172153	24	True				
ANR	8172546	AssignmentExpression	s -> nb_samples = s -> ti . last_frame_samples ? s -> ti . last_frame_samples : s -> ti . frame_samples		8172153	0		=			
ANR	8172547	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8172548	Identifier	s		8172153	0					
ANR	8172549	Identifier	nb_samples		8172153	1					
ANR	8172550	ConditionalExpression	s -> ti . last_frame_samples ? s -> ti . last_frame_samples : s -> ti . frame_samples		8172153	1					
ANR	8172551	Condition	s -> ti . last_frame_samples		8172153	0					
ANR	8172552	MemberAccess	s -> ti . last_frame_samples		8172153	0					
ANR	8172553	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172554	Identifier	s		8172153	0					
ANR	8172555	Identifier	ti		8172153	1					
ANR	8172556	Identifier	last_frame_samples		8172153	1					
ANR	8172557	MemberAccess	s -> ti . last_frame_samples		8172153	1					
ANR	8172558	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172559	Identifier	s		8172153	0					
ANR	8172560	Identifier	ti		8172153	1					
ANR	8172561	Identifier	last_frame_samples		8172153	1					
ANR	8172562	MemberAccess	s -> ti . frame_samples		8172153	2					
ANR	8172563	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172564	Identifier	s		8172153	0					
ANR	8172565	Identifier	ti		8172153	1					
ANR	8172566	Identifier	frame_samples		8172153	1					
ANR	8172567	ExpressionStatement	frame -> nb_samples = s -> nb_samples	135:4:2410:2443	8172153	25	True				
ANR	8172568	AssignmentExpression	frame -> nb_samples = s -> nb_samples		8172153	0		=			
ANR	8172569	PtrMemberAccess	frame -> nb_samples		8172153	0					
ANR	8172570	Identifier	frame		8172153	0					
ANR	8172571	Identifier	nb_samples		8172153	1					
ANR	8172572	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8172573	Identifier	s		8172153	0					
ANR	8172574	Identifier	nb_samples		8172153	1					
ANR	8172575	IfStatement	"if ( ( ret = ff_thread_get_buffer ( avctx , & tframe , 0 ) ) < 0 )"		8172153	26					
ANR	8172576	Condition	"( ret = ff_thread_get_buffer ( avctx , & tframe , 0 ) ) < 0"	137:8:2454:2504	8172153	0	True				
ANR	8172577	RelationalExpression	"( ret = ff_thread_get_buffer ( avctx , & tframe , 0 ) ) < 0"		8172153	0		<			
ANR	8172578	AssignmentExpression	"ret = ff_thread_get_buffer ( avctx , & tframe , 0 )"		8172153	0		=			
ANR	8172579	Identifier	ret		8172153	0					
ANR	8172580	CallExpression	"ff_thread_get_buffer ( avctx , & tframe , 0 )"		8172153	1					
ANR	8172581	Callee	ff_thread_get_buffer		8172153	0					
ANR	8172582	Identifier	ff_thread_get_buffer		8172153	0					
ANR	8172583	ArgumentList	avctx		8172153	1					
ANR	8172584	Argument	avctx		8172153	0					
ANR	8172585	Identifier	avctx		8172153	0					
ANR	8172586	Argument	& tframe		8172153	1					
ANR	8172587	UnaryOperationExpression	& tframe		8172153	0					
ANR	8172588	UnaryOperator	&		8172153	0					
ANR	8172589	Identifier	tframe		8172153	1					
ANR	8172590	Argument	0		8172153	2					
ANR	8172591	PrimaryExpression	0		8172153	0					
ANR	8172592	PrimaryExpression	0		8172153	1					
ANR	8172593	ReturnStatement	return ret ;	139:8:2516:2526	8172153	1	True				
ANR	8172594	Identifier	ret		8172153	0					
ANR	8172595	ExpressionStatement	ff_thread_finish_setup ( avctx )	141:4:2533:2562	8172153	27	True				
ANR	8172596	CallExpression	ff_thread_finish_setup ( avctx )		8172153	0					
ANR	8172597	Callee	ff_thread_finish_setup		8172153	0					
ANR	8172598	Identifier	ff_thread_finish_setup		8172153	0					
ANR	8172599	ArgumentList	avctx		8172153	1					
ANR	8172600	Argument	avctx		8172153	0					
ANR	8172601	Identifier	avctx		8172153	0					
ANR	8172602	IfStatement	if ( avctx -> bits_per_raw_sample <= 16 )		8172153	28					
ANR	8172603	Condition	avctx -> bits_per_raw_sample <= 16	145:8:2575:2606	8172153	0	True				
ANR	8172604	RelationalExpression	avctx -> bits_per_raw_sample <= 16		8172153	0		<=			
ANR	8172605	PtrMemberAccess	avctx -> bits_per_raw_sample		8172153	0					
ANR	8172606	Identifier	avctx		8172153	0					
ANR	8172607	Identifier	bits_per_raw_sample		8172153	1					
ANR	8172608	PrimaryExpression	16		8172153	1					
ANR	8172609	CompoundStatement		143:8:2491:2695	8172153	1					
ANR	8172610	IdentifierDeclStatement	"int buf_size = av_samples_get_buffer_size ( NULL , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 ) ;"	147:8:2620:2824	8172153	0	True				
ANR	8172611	IdentifierDecl	"buf_size = av_samples_get_buffer_size ( NULL , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"		8172153	0					
ANR	8172612	IdentifierDeclType	int		8172153	0					
ANR	8172613	Identifier	buf_size		8172153	1					
ANR	8172614	AssignmentExpression	"buf_size = av_samples_get_buffer_size ( NULL , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"		8172153	2		=			
ANR	8172615	Identifier	buf_size		8172153	0					
ANR	8172616	CallExpression	"av_samples_get_buffer_size ( NULL , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"		8172153	1					
ANR	8172617	Callee	av_samples_get_buffer_size		8172153	0					
ANR	8172618	Identifier	av_samples_get_buffer_size		8172153	0					
ANR	8172619	ArgumentList	NULL		8172153	1					
ANR	8172620	Argument	NULL		8172153	0					
ANR	8172621	Identifier	NULL		8172153	0					
ANR	8172622	Argument	avctx -> channels		8172153	1					
ANR	8172623	PtrMemberAccess	avctx -> channels		8172153	0					
ANR	8172624	Identifier	avctx		8172153	0					
ANR	8172625	Identifier	channels		8172153	1					
ANR	8172626	Argument	s -> nb_samples		8172153	2					
ANR	8172627	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8172628	Identifier	s		8172153	0					
ANR	8172629	Identifier	nb_samples		8172153	1					
ANR	8172630	Argument	AV_SAMPLE_FMT_S32P		8172153	3					
ANR	8172631	Identifier	AV_SAMPLE_FMT_S32P		8172153	0					
ANR	8172632	Argument	0		8172153	4					
ANR	8172633	PrimaryExpression	0		8172153	0					
ANR	8172634	IfStatement	if ( buf_size < 0 )		8172153	1					
ANR	8172635	Condition	buf_size < 0	153:12:2839:2850	8172153	0	True				
ANR	8172636	RelationalExpression	buf_size < 0		8172153	0		<			
ANR	8172637	Identifier	buf_size		8172153	0					
ANR	8172638	PrimaryExpression	0		8172153	1					
ANR	8172639	ReturnStatement	return buf_size ;	155:12:2866:2881	8172153	1	True				
ANR	8172640	Identifier	buf_size		8172153	0					
ANR	8172641	ExpressionStatement	"av_fast_malloc ( & s -> decode_buffer , & s -> decode_buffer_size , buf_size )"	157:8:2892:2959	8172153	2	True				
ANR	8172642	CallExpression	"av_fast_malloc ( & s -> decode_buffer , & s -> decode_buffer_size , buf_size )"		8172153	0					
ANR	8172643	Callee	av_fast_malloc		8172153	0					
ANR	8172644	Identifier	av_fast_malloc		8172153	0					
ANR	8172645	ArgumentList	& s -> decode_buffer		8172153	1					
ANR	8172646	Argument	& s -> decode_buffer		8172153	0					
ANR	8172647	UnaryOperationExpression	& s -> decode_buffer		8172153	0					
ANR	8172648	UnaryOperator	&		8172153	0					
ANR	8172649	PtrMemberAccess	s -> decode_buffer		8172153	1					
ANR	8172650	Identifier	s		8172153	0					
ANR	8172651	Identifier	decode_buffer		8172153	1					
ANR	8172652	Argument	& s -> decode_buffer_size		8172153	1					
ANR	8172653	UnaryOperationExpression	& s -> decode_buffer_size		8172153	0					
ANR	8172654	UnaryOperator	&		8172153	0					
ANR	8172655	PtrMemberAccess	s -> decode_buffer_size		8172153	1					
ANR	8172656	Identifier	s		8172153	0					
ANR	8172657	Identifier	decode_buffer_size		8172153	1					
ANR	8172658	Argument	buf_size		8172153	2					
ANR	8172659	Identifier	buf_size		8172153	0					
ANR	8172660	IfStatement	if ( ! s -> decode_buffer )		8172153	3					
ANR	8172661	Condition	! s -> decode_buffer	159:12:2974:2990	8172153	0	True				
ANR	8172662	UnaryOperationExpression	! s -> decode_buffer		8172153	0					
ANR	8172663	UnaryOperator	!		8172153	0					
ANR	8172664	PtrMemberAccess	s -> decode_buffer		8172153	1					
ANR	8172665	Identifier	s		8172153	0					
ANR	8172666	Identifier	decode_buffer		8172153	1					
ANR	8172667	ReturnStatement	return AVERROR ( ENOMEM ) ;	161:12:3006:3028	8172153	1	True				
ANR	8172668	CallExpression	AVERROR ( ENOMEM )		8172153	0					
ANR	8172669	Callee	AVERROR		8172153	0					
ANR	8172670	Identifier	AVERROR		8172153	0					
ANR	8172671	ArgumentList	ENOMEM		8172153	1					
ANR	8172672	Argument	ENOMEM		8172153	0					
ANR	8172673	Identifier	ENOMEM		8172153	0					
ANR	8172674	ExpressionStatement	"ret = av_samples_fill_arrays ( ( uint8_t * * ) s -> decoded , NULL , s -> decode_buffer , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"	163:8:3039:3246	8172153	4	True				
ANR	8172675	AssignmentExpression	"ret = av_samples_fill_arrays ( ( uint8_t * * ) s -> decoded , NULL , s -> decode_buffer , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"		8172153	0		=			
ANR	8172676	Identifier	ret		8172153	0					
ANR	8172677	CallExpression	"av_samples_fill_arrays ( ( uint8_t * * ) s -> decoded , NULL , s -> decode_buffer , avctx -> channels , s -> nb_samples , AV_SAMPLE_FMT_S32P , 0 )"		8172153	1					
ANR	8172678	Callee	av_samples_fill_arrays		8172153	0					
ANR	8172679	Identifier	av_samples_fill_arrays		8172153	0					
ANR	8172680	ArgumentList	( uint8_t * * ) s -> decoded		8172153	1					
ANR	8172681	Argument	( uint8_t * * ) s -> decoded		8172153	0					
ANR	8172682	CastExpression	( uint8_t * * ) s -> decoded		8172153	0					
ANR	8172683	CastTarget	uint8_t * *		8172153	0					
ANR	8172684	PtrMemberAccess	s -> decoded		8172153	1					
ANR	8172685	Identifier	s		8172153	0					
ANR	8172686	Identifier	decoded		8172153	1					
ANR	8172687	Argument	NULL		8172153	1					
ANR	8172688	Identifier	NULL		8172153	0					
ANR	8172689	Argument	s -> decode_buffer		8172153	2					
ANR	8172690	PtrMemberAccess	s -> decode_buffer		8172153	0					
ANR	8172691	Identifier	s		8172153	0					
ANR	8172692	Identifier	decode_buffer		8172153	1					
ANR	8172693	Argument	avctx -> channels		8172153	3					
ANR	8172694	PtrMemberAccess	avctx -> channels		8172153	0					
ANR	8172695	Identifier	avctx		8172153	0					
ANR	8172696	Identifier	channels		8172153	1					
ANR	8172697	Argument	s -> nb_samples		8172153	4					
ANR	8172698	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8172699	Identifier	s		8172153	0					
ANR	8172700	Identifier	nb_samples		8172153	1					
ANR	8172701	Argument	AV_SAMPLE_FMT_S32P		8172153	5					
ANR	8172702	Identifier	AV_SAMPLE_FMT_S32P		8172153	0					
ANR	8172703	Argument	0		8172153	6					
ANR	8172704	PrimaryExpression	0		8172153	0					
ANR	8172705	IfStatement	if ( ret < 0 )		8172153	5					
ANR	8172706	Condition	ret < 0	169:12:3261:3267	8172153	0	True				
ANR	8172707	RelationalExpression	ret < 0		8172153	0		<			
ANR	8172708	Identifier	ret		8172153	0					
ANR	8172709	PrimaryExpression	0		8172153	1					
ANR	8172710	ReturnStatement	return ret ;	171:12:3283:3293	8172153	1	True				
ANR	8172711	Identifier	ret		8172153	0					
ANR	8172712	ElseStatement	else		8172153	0					
ANR	8172713	CompoundStatement		169:11:3178:3178	8172153	0					
ANR	8172714	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	0					
ANR	8172715	ForInit	chan = 0 ;	175:13:3323:3331	8172153	0	True				
ANR	8172716	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8172717	Identifier	chan		8172153	0					
ANR	8172718	PrimaryExpression	0		8172153	1					
ANR	8172719	Condition	chan < avctx -> channels	175:23:3333:3354	8172153	1	True				
ANR	8172720	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8172721	Identifier	chan		8172153	0					
ANR	8172722	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8172723	Identifier	avctx		8172153	0					
ANR	8172724	Identifier	channels		8172153	1					
ANR	8172725	PostIncDecOperationExpression	chan ++	175:47:3357:3362	8172153	2	True				
ANR	8172726	Identifier	chan		8172153	0					
ANR	8172727	IncDec	++		8172153	1					
ANR	8172728	ExpressionStatement	s -> decoded [ chan ] = ( int32_t * ) frame -> extended_data [ chan ]	177:12:3378:3434	8172153	3	True				
ANR	8172729	AssignmentExpression	s -> decoded [ chan ] = ( int32_t * ) frame -> extended_data [ chan ]		8172153	0		=			
ANR	8172730	ArrayIndexing	s -> decoded [ chan ]		8172153	0					
ANR	8172731	PtrMemberAccess	s -> decoded		8172153	0					
ANR	8172732	Identifier	s		8172153	0					
ANR	8172733	Identifier	decoded		8172153	1					
ANR	8172734	Identifier	chan		8172153	1					
ANR	8172735	CastExpression	( int32_t * ) frame -> extended_data [ chan ]		8172153	1					
ANR	8172736	CastTarget	int32_t *		8172153	0					
ANR	8172737	ArrayIndexing	frame -> extended_data [ chan ]		8172153	1					
ANR	8172738	PtrMemberAccess	frame -> extended_data		8172153	0					
ANR	8172739	Identifier	frame		8172153	0					
ANR	8172740	Identifier	extended_data		8172153	1					
ANR	8172741	Identifier	chan		8172153	1					
ANR	8172742	IfStatement	if ( s -> nb_samples < 16 )		8172153	29					
ANR	8172743	Condition	s -> nb_samples < 16	183:8:3454:3471	8172153	0	True				
ANR	8172744	RelationalExpression	s -> nb_samples < 16		8172153	0		<			
ANR	8172745	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8172746	Identifier	s		8172153	0					
ANR	8172747	Identifier	nb_samples		8172153	1					
ANR	8172748	PrimaryExpression	16		8172153	1					
ANR	8172749	CompoundStatement		179:28:3345:3345	8172153	1					
ANR	8172750	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	0					
ANR	8172751	ForInit	chan = 0 ;	185:13:3490:3498	8172153	0	True				
ANR	8172752	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8172753	Identifier	chan		8172153	0					
ANR	8172754	PrimaryExpression	0		8172153	1					
ANR	8172755	Condition	chan < avctx -> channels	185:23:3500:3521	8172153	1	True				
ANR	8172756	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8172757	Identifier	chan		8172153	0					
ANR	8172758	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8172759	Identifier	avctx		8172153	0					
ANR	8172760	Identifier	channels		8172153	1					
ANR	8172761	PostIncDecOperationExpression	chan ++	185:47:3524:3529	8172153	2	True				
ANR	8172762	Identifier	chan		8172153	0					
ANR	8172763	IncDec	++		8172153	1					
ANR	8172764	CompoundStatement		183:12:3418:3453	8172153	3					
ANR	8172765	IdentifierDeclStatement	int32_t * decoded = s -> decoded [ chan ] ;	187:12:3547:3582	8172153	0	True				
ANR	8172766	IdentifierDecl	* decoded = s -> decoded [ chan ]		8172153	0					
ANR	8172767	IdentifierDeclType	int32_t *		8172153	0					
ANR	8172768	Identifier	decoded		8172153	1					
ANR	8172769	AssignmentExpression	* decoded = s -> decoded [ chan ]		8172153	2		=			
ANR	8172770	Identifier	decoded		8172153	0					
ANR	8172771	ArrayIndexing	s -> decoded [ chan ]		8172153	1					
ANR	8172772	PtrMemberAccess	s -> decoded		8172153	0					
ANR	8172773	Identifier	s		8172153	0					
ANR	8172774	Identifier	decoded		8172153	1					
ANR	8172775	Identifier	chan		8172153	1					
ANR	8172776	ForStatement	for ( i = 0 ; i < s -> nb_samples ; i ++ )		8172153	1					
ANR	8172777	ForInit	i = 0 ;	189:17:3602:3607	8172153	0	True				
ANR	8172778	AssignmentExpression	i = 0		8172153	0		=			
ANR	8172779	Identifier	i		8172153	0					
ANR	8172780	PrimaryExpression	0		8172153	1					
ANR	8172781	Condition	i < s -> nb_samples	189:24:3609:3625	8172153	1	True				
ANR	8172782	RelationalExpression	i < s -> nb_samples		8172153	0		<			
ANR	8172783	Identifier	i		8172153	0					
ANR	8172784	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8172785	Identifier	s		8172153	0					
ANR	8172786	Identifier	nb_samples		8172153	1					
ANR	8172787	PostIncDecOperationExpression	i ++	189:43:3628:3630	8172153	2	True				
ANR	8172788	Identifier	i		8172153	0					
ANR	8172789	IncDec	++		8172153	1					
ANR	8172790	ExpressionStatement	"decoded [ i ] = get_sbits ( gb , avctx -> bits_per_raw_sample )"	191:16:3650:3704	8172153	3	True				
ANR	8172791	AssignmentExpression	"decoded [ i ] = get_sbits ( gb , avctx -> bits_per_raw_sample )"		8172153	0		=			
ANR	8172792	ArrayIndexing	decoded [ i ]		8172153	0					
ANR	8172793	Identifier	decoded		8172153	0					
ANR	8172794	Identifier	i		8172153	1					
ANR	8172795	CallExpression	"get_sbits ( gb , avctx -> bits_per_raw_sample )"		8172153	1					
ANR	8172796	Callee	get_sbits		8172153	0					
ANR	8172797	Identifier	get_sbits		8172153	0					
ANR	8172798	ArgumentList	gb		8172153	1					
ANR	8172799	Argument	gb		8172153	0					
ANR	8172800	Identifier	gb		8172153	0					
ANR	8172801	Argument	avctx -> bits_per_raw_sample		8172153	1					
ANR	8172802	PtrMemberAccess	avctx -> bits_per_raw_sample		8172153	0					
ANR	8172803	Identifier	avctx		8172153	0					
ANR	8172804	Identifier	bits_per_raw_sample		8172153	1					
ANR	8172805	ElseStatement	else		8172153	0					
ANR	8172806	CompoundStatement		191:11:3600:3600	8172153	0					
ANR	8172807	IfStatement	if ( s -> ti . codec == TAK_CODEC_MONO_STEREO )		8172153	0					
ANR	8172808	Condition	s -> ti . codec == TAK_CODEC_MONO_STEREO	197:12:3744:3779	8172153	0	True				
ANR	8172809	EqualityExpression	s -> ti . codec == TAK_CODEC_MONO_STEREO		8172153	0		==			
ANR	8172810	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172811	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172812	Identifier	s		8172153	0					
ANR	8172813	Identifier	ti		8172153	1					
ANR	8172814	Identifier	codec		8172153	1					
ANR	8172815	Identifier	TAK_CODEC_MONO_STEREO		8172153	1					
ANR	8172816	CompoundStatement		193:50:3653:3653	8172153	1					
ANR	8172817	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	0					
ANR	8172818	ForInit	chan = 0 ;	199:17:3802:3810	8172153	0	True				
ANR	8172819	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8172820	Identifier	chan		8172153	0					
ANR	8172821	PrimaryExpression	0		8172153	1					
ANR	8172822	Condition	chan < avctx -> channels	199:27:3812:3833	8172153	1	True				
ANR	8172823	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8172824	Identifier	chan		8172153	0					
ANR	8172825	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8172826	Identifier	avctx		8172153	0					
ANR	8172827	Identifier	channels		8172153	1					
ANR	8172828	PostIncDecOperationExpression	chan ++	199:51:3836:3841	8172153	2	True				
ANR	8172829	Identifier	chan		8172153	0					
ANR	8172830	IncDec	++		8172153	1					
ANR	8172831	IfStatement	"if ( ret = decode_channel ( s , chan ) )"		8172153	3					
ANR	8172832	Condition	"ret = decode_channel ( s , chan )"	201:20:3865:3893	8172153	0	True				
ANR	8172833	AssignmentExpression	"ret = decode_channel ( s , chan )"		8172153	0		=			
ANR	8172834	Identifier	ret		8172153	0					
ANR	8172835	CallExpression	"decode_channel ( s , chan )"		8172153	1					
ANR	8172836	Callee	decode_channel		8172153	0					
ANR	8172837	Identifier	decode_channel		8172153	0					
ANR	8172838	ArgumentList	s		8172153	1					
ANR	8172839	Argument	s		8172153	0					
ANR	8172840	Identifier	s		8172153	0					
ANR	8172841	Argument	chan		8172153	1					
ANR	8172842	Identifier	chan		8172153	0					
ANR	8172843	ReturnStatement	return ret ;	203:20:3917:3927	8172153	1	True				
ANR	8172844	Identifier	ret		8172153	0					
ANR	8172845	IfStatement	if ( avctx -> channels == 2 )		8172153	1					
ANR	8172846	Condition	avctx -> channels == 2	207:16:3948:3967	8172153	0	True				
ANR	8172847	EqualityExpression	avctx -> channels == 2		8172153	0		==			
ANR	8172848	PtrMemberAccess	avctx -> channels		8172153	0					
ANR	8172849	Identifier	avctx		8172153	0					
ANR	8172850	Identifier	channels		8172153	1					
ANR	8172851	PrimaryExpression	2		8172153	1					
ANR	8172852	CompoundStatement		203:38:3841:3841	8172153	1					
ANR	8172853	ExpressionStatement	"s -> nb_subframes = get_bits ( gb , 1 ) + 1"	209:16:3989:4026	8172153	0	True				
ANR	8172854	AssignmentExpression	"s -> nb_subframes = get_bits ( gb , 1 ) + 1"		8172153	0		=			
ANR	8172855	PtrMemberAccess	s -> nb_subframes		8172153	0					
ANR	8172856	Identifier	s		8172153	0					
ANR	8172857	Identifier	nb_subframes		8172153	1					
ANR	8172858	AdditiveExpression	"get_bits ( gb , 1 ) + 1"		8172153	1		+			
ANR	8172859	CallExpression	"get_bits ( gb , 1 )"		8172153	0					
ANR	8172860	Callee	get_bits		8172153	0					
ANR	8172861	Identifier	get_bits		8172153	0					
ANR	8172862	ArgumentList	gb		8172153	1					
ANR	8172863	Argument	gb		8172153	0					
ANR	8172864	Identifier	gb		8172153	0					
ANR	8172865	Argument	1		8172153	1					
ANR	8172866	PrimaryExpression	1		8172153	0					
ANR	8172867	PrimaryExpression	1		8172153	1					
ANR	8172868	IfStatement	if ( s -> nb_subframes > 1 )		8172153	1					
ANR	8172869	Condition	s -> nb_subframes > 1	211:20:4049:4067	8172153	0	True				
ANR	8172870	RelationalExpression	s -> nb_subframes > 1		8172153	0		>			
ANR	8172871	PtrMemberAccess	s -> nb_subframes		8172153	0					
ANR	8172872	Identifier	s		8172153	0					
ANR	8172873	Identifier	nb_subframes		8172153	1					
ANR	8172874	PrimaryExpression	1		8172153	1					
ANR	8172875	CompoundStatement		207:41:3941:3941	8172153	1					
ANR	8172876	ExpressionStatement	"s -> subframe_len [ 1 ] = get_bits ( gb , 6 )"	213:20:4093:4129	8172153	0	True				
ANR	8172877	AssignmentExpression	"s -> subframe_len [ 1 ] = get_bits ( gb , 6 )"		8172153	0		=			
ANR	8172878	ArrayIndexing	s -> subframe_len [ 1 ]		8172153	0					
ANR	8172879	PtrMemberAccess	s -> subframe_len		8172153	0					
ANR	8172880	Identifier	s		8172153	0					
ANR	8172881	Identifier	subframe_len		8172153	1					
ANR	8172882	PrimaryExpression	1		8172153	1					
ANR	8172883	CallExpression	"get_bits ( gb , 6 )"		8172153	1					
ANR	8172884	Callee	get_bits		8172153	0					
ANR	8172885	Identifier	get_bits		8172153	0					
ANR	8172886	ArgumentList	gb		8172153	1					
ANR	8172887	Argument	gb		8172153	0					
ANR	8172888	Identifier	gb		8172153	0					
ANR	8172889	Argument	6		8172153	1					
ANR	8172890	PrimaryExpression	6		8172153	0					
ANR	8172891	ExpressionStatement	"s -> dmode = get_bits ( gb , 3 )"	219:16:4169:4195	8172153	2	True				
ANR	8172892	AssignmentExpression	"s -> dmode = get_bits ( gb , 3 )"		8172153	0		=			
ANR	8172893	PtrMemberAccess	s -> dmode		8172153	0					
ANR	8172894	Identifier	s		8172153	0					
ANR	8172895	Identifier	dmode		8172153	1					
ANR	8172896	CallExpression	"get_bits ( gb , 3 )"		8172153	1					
ANR	8172897	Callee	get_bits		8172153	0					
ANR	8172898	Identifier	get_bits		8172153	0					
ANR	8172899	ArgumentList	gb		8172153	1					
ANR	8172900	Argument	gb		8172153	0					
ANR	8172901	Identifier	gb		8172153	0					
ANR	8172902	Argument	3		8172153	1					
ANR	8172903	PrimaryExpression	3		8172153	0					
ANR	8172904	IfStatement	"if ( ret = decorrelate ( s , 0 , 1 , s -> nb_samples - 1 ) )"		8172153	3					
ANR	8172905	Condition	"ret = decorrelate ( s , 0 , 1 , s -> nb_samples - 1 )"	221:20:4218:4262	8172153	0	True				
ANR	8172906	AssignmentExpression	"ret = decorrelate ( s , 0 , 1 , s -> nb_samples - 1 )"		8172153	0		=			
ANR	8172907	Identifier	ret		8172153	0					
ANR	8172908	CallExpression	"decorrelate ( s , 0 , 1 , s -> nb_samples - 1 )"		8172153	1					
ANR	8172909	Callee	decorrelate		8172153	0					
ANR	8172910	Identifier	decorrelate		8172153	0					
ANR	8172911	ArgumentList	s		8172153	1					
ANR	8172912	Argument	s		8172153	0					
ANR	8172913	Identifier	s		8172153	0					
ANR	8172914	Argument	0		8172153	1					
ANR	8172915	PrimaryExpression	0		8172153	0					
ANR	8172916	Argument	1		8172153	2					
ANR	8172917	PrimaryExpression	1		8172153	0					
ANR	8172918	Argument	s -> nb_samples - 1		8172153	3					
ANR	8172919	AdditiveExpression	s -> nb_samples - 1		8172153	0		-			
ANR	8172920	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8172921	Identifier	s		8172153	0					
ANR	8172922	Identifier	nb_samples		8172153	1					
ANR	8172923	PrimaryExpression	1		8172153	1					
ANR	8172924	ReturnStatement	return ret ;	223:20:4286:4296	8172153	1	True				
ANR	8172925	Identifier	ret		8172153	0					
ANR	8172926	ElseStatement	else		8172153	0					
ANR	8172927	IfStatement	if ( s -> ti . codec == TAK_CODEC_MULTICHANNEL )		8172153	0					
ANR	8172928	Condition	s -> ti . codec == TAK_CODEC_MULTICHANNEL	227:19:4333:4369	8172153	0	True				
ANR	8172929	EqualityExpression	s -> ti . codec == TAK_CODEC_MULTICHANNEL		8172153	0		==			
ANR	8172930	MemberAccess	s -> ti . codec		8172153	0					
ANR	8172931	PtrMemberAccess	s -> ti		8172153	0					
ANR	8172932	Identifier	s		8172153	0					
ANR	8172933	Identifier	ti		8172153	1					
ANR	8172934	Identifier	codec		8172153	1					
ANR	8172935	Identifier	TAK_CODEC_MULTICHANNEL		8172153	1					
ANR	8172936	CompoundStatement		223:58:4243:4243	8172153	1					
ANR	8172937	IfStatement	if ( get_bits1 ( gb ) )		8172153	0					
ANR	8172938	Condition	get_bits1 ( gb )	229:16:4391:4403	8172153	0	True				
ANR	8172939	CallExpression	get_bits1 ( gb )		8172153	0					
ANR	8172940	Callee	get_bits1		8172153	0					
ANR	8172941	Identifier	get_bits1		8172153	0					
ANR	8172942	ArgumentList	gb		8172153	1					
ANR	8172943	Argument	gb		8172153	0					
ANR	8172944	Identifier	gb		8172153	0					
ANR	8172945	CompoundStatement		227:16:4296:4311	8172153	1					
ANR	8172946	IdentifierDeclStatement	int ch_mask = 0 ;	231:16:4425:4440	8172153	0	True				
ANR	8172947	IdentifierDecl	ch_mask = 0		8172153	0					
ANR	8172948	IdentifierDeclType	int		8172153	0					
ANR	8172949	Identifier	ch_mask		8172153	1					
ANR	8172950	AssignmentExpression	ch_mask = 0		8172153	2		=			
ANR	8172951	Identifier	ch_mask		8172153	0					
ANR	8172952	PrimaryExpression	0		8172153	1					
ANR	8172953	ExpressionStatement	"chan = get_bits ( gb , 4 ) + 1"	235:16:4461:4487	8172153	1	True				
ANR	8172954	AssignmentExpression	"chan = get_bits ( gb , 4 ) + 1"		8172153	0		=			
ANR	8172955	Identifier	chan		8172153	0					
ANR	8172956	AdditiveExpression	"get_bits ( gb , 4 ) + 1"		8172153	1		+			
ANR	8172957	CallExpression	"get_bits ( gb , 4 )"		8172153	0					
ANR	8172958	Callee	get_bits		8172153	0					
ANR	8172959	Identifier	get_bits		8172153	0					
ANR	8172960	ArgumentList	gb		8172153	1					
ANR	8172961	Argument	gb		8172153	0					
ANR	8172962	Identifier	gb		8172153	0					
ANR	8172963	Argument	4		8172153	1					
ANR	8172964	PrimaryExpression	4		8172153	0					
ANR	8172965	PrimaryExpression	1		8172153	1					
ANR	8172966	IfStatement	if ( chan > avctx -> channels )		8172153	2					
ANR	8172967	Condition	chan > avctx -> channels	237:20:4510:4531	8172153	0	True				
ANR	8172968	RelationalExpression	chan > avctx -> channels		8172153	0		>			
ANR	8172969	Identifier	chan		8172153	0					
ANR	8172970	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8172971	Identifier	avctx		8172153	0					
ANR	8172972	Identifier	channels		8172153	1					
ANR	8172973	ReturnStatement	return AVERROR_INVALIDDATA ;	239:20:4555:4581	8172153	1	True				
ANR	8172974	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8172975	ForStatement	for ( i = 0 ; i < chan ; i ++ )		8172153	3					
ANR	8172976	ForInit	i = 0 ;	243:21:4607:4612	8172153	0	True				
ANR	8172977	AssignmentExpression	i = 0		8172153	0		=			
ANR	8172978	Identifier	i		8172153	0					
ANR	8172979	PrimaryExpression	0		8172153	1					
ANR	8172980	Condition	i < chan	243:28:4614:4621	8172153	1	True				
ANR	8172981	RelationalExpression	i < chan		8172153	0		<			
ANR	8172982	Identifier	i		8172153	0					
ANR	8172983	Identifier	chan		8172153	1					
ANR	8172984	PostIncDecOperationExpression	i ++	243:38:4624:4626	8172153	2	True				
ANR	8172985	Identifier	i		8172153	0					
ANR	8172986	IncDec	++		8172153	1					
ANR	8172987	CompoundStatement		241:20:4523:4549	8172153	3					
ANR	8172988	IdentifierDeclStatement	"int nbit = get_bits ( gb , 4 ) ;"	245:20:4652:4678	8172153	0	True				
ANR	8172989	IdentifierDecl	"nbit = get_bits ( gb , 4 )"		8172153	0					
ANR	8172990	IdentifierDeclType	int		8172153	0					
ANR	8172991	Identifier	nbit		8172153	1					
ANR	8172992	AssignmentExpression	"nbit = get_bits ( gb , 4 )"		8172153	2		=			
ANR	8172993	Identifier	nbit		8172153	0					
ANR	8172994	CallExpression	"get_bits ( gb , 4 )"		8172153	1					
ANR	8172995	Callee	get_bits		8172153	0					
ANR	8172996	Identifier	get_bits		8172153	0					
ANR	8172997	ArgumentList	gb		8172153	1					
ANR	8172998	Argument	gb		8172153	0					
ANR	8172999	Identifier	gb		8172153	0					
ANR	8173000	Argument	4		8172153	1					
ANR	8173001	PrimaryExpression	4		8172153	0					
ANR	8173002	IfStatement	if ( nbit >= avctx -> channels )		8172153	1					
ANR	8173003	Condition	nbit >= avctx -> channels	249:24:4707:4729	8172153	0	True				
ANR	8173004	RelationalExpression	nbit >= avctx -> channels		8172153	0		>=			
ANR	8173005	Identifier	nbit		8172153	0					
ANR	8173006	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173007	Identifier	avctx		8172153	0					
ANR	8173008	Identifier	channels		8172153	1					
ANR	8173009	ReturnStatement	return AVERROR_INVALIDDATA ;	251:24:4757:4783	8172153	1	True				
ANR	8173010	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173011	IfStatement	if ( ch_mask & 1 << nbit )		8172153	2					
ANR	8173012	Condition	ch_mask & 1 << nbit	255:24:4812:4830	8172153	0	True				
ANR	8173013	BitAndExpression	ch_mask & 1 << nbit		8172153	0		&			
ANR	8173014	Identifier	ch_mask		8172153	0					
ANR	8173015	ShiftExpression	1 << nbit		8172153	1		<<			
ANR	8173016	PrimaryExpression	1		8172153	0					
ANR	8173017	Identifier	nbit		8172153	1					
ANR	8173018	ReturnStatement	return AVERROR_INVALIDDATA ;	257:24:4858:4884	8172153	1	True				
ANR	8173019	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173020	ExpressionStatement	s -> mcdparams [ i ] . present = get_bits1 ( gb )	261:20:4909:4948	8172153	3	True				
ANR	8173021	AssignmentExpression	s -> mcdparams [ i ] . present = get_bits1 ( gb )		8172153	0		=			
ANR	8173022	MemberAccess	s -> mcdparams [ i ] . present		8172153	0					
ANR	8173023	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173024	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173025	Identifier	s		8172153	0					
ANR	8173026	Identifier	mcdparams		8172153	1					
ANR	8173027	Identifier	i		8172153	1					
ANR	8173028	Identifier	present		8172153	1					
ANR	8173029	CallExpression	get_bits1 ( gb )		8172153	1					
ANR	8173030	Callee	get_bits1		8172153	0					
ANR	8173031	Identifier	get_bits1		8172153	0					
ANR	8173032	ArgumentList	gb		8172153	1					
ANR	8173033	Argument	gb		8172153	0					
ANR	8173034	Identifier	gb		8172153	0					
ANR	8173035	IfStatement	if ( s -> mcdparams [ i ] . present )		8172153	4					
ANR	8173036	Condition	s -> mcdparams [ i ] . present	263:24:4975:4997	8172153	0	True				
ANR	8173037	MemberAccess	s -> mcdparams [ i ] . present		8172153	0					
ANR	8173038	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173039	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173040	Identifier	s		8172153	0					
ANR	8173041	Identifier	mcdparams		8172153	1					
ANR	8173042	Identifier	i		8172153	1					
ANR	8173043	Identifier	present		8172153	1					
ANR	8173044	CompoundStatement		259:49:4871:4871	8172153	1					
ANR	8173045	ExpressionStatement	"s -> mcdparams [ i ] . index = get_bits ( gb , 2 )"	265:24:5027:5066	8172153	0	True				
ANR	8173046	AssignmentExpression	"s -> mcdparams [ i ] . index = get_bits ( gb , 2 )"		8172153	0		=			
ANR	8173047	MemberAccess	s -> mcdparams [ i ] . index		8172153	0					
ANR	8173048	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173049	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173050	Identifier	s		8172153	0					
ANR	8173051	Identifier	mcdparams		8172153	1					
ANR	8173052	Identifier	i		8172153	1					
ANR	8173053	Identifier	index		8172153	1					
ANR	8173054	CallExpression	"get_bits ( gb , 2 )"		8172153	1					
ANR	8173055	Callee	get_bits		8172153	0					
ANR	8173056	Identifier	get_bits		8172153	0					
ANR	8173057	ArgumentList	gb		8172153	1					
ANR	8173058	Argument	gb		8172153	0					
ANR	8173059	Identifier	gb		8172153	0					
ANR	8173060	Argument	2		8172153	1					
ANR	8173061	PrimaryExpression	2		8172153	0					
ANR	8173062	ExpressionStatement	"s -> mcdparams [ i ] . chan2 = get_bits ( gb , 4 )"	267:24:5093:5132	8172153	1	True				
ANR	8173063	AssignmentExpression	"s -> mcdparams [ i ] . chan2 = get_bits ( gb , 4 )"		8172153	0		=			
ANR	8173064	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	0					
ANR	8173065	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173066	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173067	Identifier	s		8172153	0					
ANR	8173068	Identifier	mcdparams		8172153	1					
ANR	8173069	Identifier	i		8172153	1					
ANR	8173070	Identifier	chan2		8172153	1					
ANR	8173071	CallExpression	"get_bits ( gb , 4 )"		8172153	1					
ANR	8173072	Callee	get_bits		8172153	0					
ANR	8173073	Identifier	get_bits		8172153	0					
ANR	8173074	ArgumentList	gb		8172153	1					
ANR	8173075	Argument	gb		8172153	0					
ANR	8173076	Identifier	gb		8172153	0					
ANR	8173077	Argument	4		8172153	1					
ANR	8173078	PrimaryExpression	4		8172153	0					
ANR	8173079	IfStatement	if ( s -> mcdparams [ i ] . chan2 >= avctx -> channels )		8172153	2					
ANR	8173080	Condition	s -> mcdparams [ i ] . chan2 >= avctx -> channels	269:28:5163:5202	8172153	0	True				
ANR	8173081	RelationalExpression	s -> mcdparams [ i ] . chan2 >= avctx -> channels		8172153	0		>=			
ANR	8173082	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	0					
ANR	8173083	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173084	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173085	Identifier	s		8172153	0					
ANR	8173086	Identifier	mcdparams		8172153	1					
ANR	8173087	Identifier	i		8172153	1					
ANR	8173088	Identifier	chan2		8172153	1					
ANR	8173089	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173090	Identifier	avctx		8172153	0					
ANR	8173091	Identifier	channels		8172153	1					
ANR	8173092	CompoundStatement		265:70:5076:5076	8172153	1					
ANR	8173093	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid channel 2 (%d) for %d channel(s)\\n"" , s -> mcdparams [ i ] . chan2 , avctx -> channels )"	271:28:5236:5421	8172153	0	True				
ANR	8173094	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid channel 2 (%d) for %d channel(s)\\n"" , s -> mcdparams [ i ] . chan2 , avctx -> channels )"		8172153	0					
ANR	8173095	Callee	av_log		8172153	0					
ANR	8173096	Identifier	av_log		8172153	0					
ANR	8173097	ArgumentList	avctx		8172153	1					
ANR	8173098	Argument	avctx		8172153	0					
ANR	8173099	Identifier	avctx		8172153	0					
ANR	8173100	Argument	AV_LOG_ERROR		8172153	1					
ANR	8173101	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8173102	Argument	"""invalid channel 2 (%d) for %d channel(s)\\n"""		8172153	2					
ANR	8173103	PrimaryExpression	"""invalid channel 2 (%d) for %d channel(s)\\n"""		8172153	0					
ANR	8173104	Argument	s -> mcdparams [ i ] . chan2		8172153	3					
ANR	8173105	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	0					
ANR	8173106	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173107	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173108	Identifier	s		8172153	0					
ANR	8173109	Identifier	mcdparams		8172153	1					
ANR	8173110	Identifier	i		8172153	1					
ANR	8173111	Identifier	chan2		8172153	1					
ANR	8173112	Argument	avctx -> channels		8172153	4					
ANR	8173113	PtrMemberAccess	avctx -> channels		8172153	0					
ANR	8173114	Identifier	avctx		8172153	0					
ANR	8173115	Identifier	channels		8172153	1					
ANR	8173116	ReturnStatement	return AVERROR_INVALIDDATA ;	277:28:5452:5478	8172153	1	True				
ANR	8173117	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173118	IfStatement	if ( s -> mcdparams [ i ] . index == 1 )		8172153	3					
ANR	8173119	Condition	s -> mcdparams [ i ] . index == 1	281:28:5536:5561	8172153	0	True				
ANR	8173120	EqualityExpression	s -> mcdparams [ i ] . index == 1		8172153	0		==			
ANR	8173121	MemberAccess	s -> mcdparams [ i ] . index		8172153	0					
ANR	8173122	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173123	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173124	Identifier	s		8172153	0					
ANR	8173125	Identifier	mcdparams		8172153	1					
ANR	8173126	Identifier	i		8172153	1					
ANR	8173127	Identifier	index		8172153	1					
ANR	8173128	PrimaryExpression	1		8172153	1					
ANR	8173129	CompoundStatement		277:56:5435:5435	8172153	1					
ANR	8173130	IfStatement	if ( ( nbit == s -> mcdparams [ i ] . chan2 ) || ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 ) )		8172153	0					
ANR	8173131	Condition	( nbit == s -> mcdparams [ i ] . chan2 ) || ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 )	283:32:5599:5704	8172153	0	True				
ANR	8173132	OrExpression	( nbit == s -> mcdparams [ i ] . chan2 ) || ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 )		8172153	0		||			
ANR	8173133	EqualityExpression	nbit == s -> mcdparams [ i ] . chan2		8172153	0		==			
ANR	8173134	Identifier	nbit		8172153	0					
ANR	8173135	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173136	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173137	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173138	Identifier	s		8172153	0					
ANR	8173139	Identifier	mcdparams		8172153	1					
ANR	8173140	Identifier	i		8172153	1					
ANR	8173141	Identifier	chan2		8172153	1					
ANR	8173142	BitAndExpression	ch_mask & 1 << s -> mcdparams [ i ] . chan2		8172153	1		&			
ANR	8173143	Identifier	ch_mask		8172153	0					
ANR	8173144	ShiftExpression	1 << s -> mcdparams [ i ] . chan2		8172153	1		<<			
ANR	8173145	PrimaryExpression	1		8172153	0					
ANR	8173146	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173147	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173148	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173149	Identifier	s		8172153	0					
ANR	8173150	Identifier	mcdparams		8172153	1					
ANR	8173151	Identifier	i		8172153	1					
ANR	8173152	Identifier	chan2		8172153	1					
ANR	8173153	ReturnStatement	return AVERROR_INVALIDDATA ;	287:32:5740:5766	8172153	1	True				
ANR	8173154	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173155	ExpressionStatement	ch_mask |= 1 << s -> mcdparams [ i ] . chan2	291:28:5799:5836	8172153	1	True				
ANR	8173156	AssignmentExpression	ch_mask |= 1 << s -> mcdparams [ i ] . chan2		8172153	0		|=			
ANR	8173157	Identifier	ch_mask		8172153	0					
ANR	8173158	ShiftExpression	1 << s -> mcdparams [ i ] . chan2		8172153	1		<<			
ANR	8173159	PrimaryExpression	1		8172153	0					
ANR	8173160	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173161	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173162	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173163	Identifier	s		8172153	0					
ANR	8173164	Identifier	mcdparams		8172153	1					
ANR	8173165	Identifier	i		8172153	1					
ANR	8173166	Identifier	chan2		8172153	1					
ANR	8173167	ElseStatement	else		8172153	0					
ANR	8173168	IfStatement	if ( ! ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 ) )		8172153	0					
ANR	8173169	Condition	! ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 )	293:35:5874:5912	8172153	0	True				
ANR	8173170	UnaryOperationExpression	! ( ch_mask & 1 << s -> mcdparams [ i ] . chan2 )		8172153	0					
ANR	8173171	UnaryOperator	!		8172153	0					
ANR	8173172	BitAndExpression	ch_mask & 1 << s -> mcdparams [ i ] . chan2		8172153	1		&			
ANR	8173173	Identifier	ch_mask		8172153	0					
ANR	8173174	ShiftExpression	1 << s -> mcdparams [ i ] . chan2		8172153	1		<<			
ANR	8173175	PrimaryExpression	1		8172153	0					
ANR	8173176	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173177	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173178	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173179	Identifier	s		8172153	0					
ANR	8173180	Identifier	mcdparams		8172153	1					
ANR	8173181	Identifier	i		8172153	1					
ANR	8173182	Identifier	chan2		8172153	1					
ANR	8173183	CompoundStatement		289:76:5786:5786	8172153	1					
ANR	8173184	ReturnStatement	return AVERROR_INVALIDDATA ;	295:28:5946:5972	8172153	0	True				
ANR	8173185	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173186	ExpressionStatement	s -> mcdparams [ i ] . chan1 = nbit	301:20:6045:6073	8172153	5	True				
ANR	8173187	AssignmentExpression	s -> mcdparams [ i ] . chan1 = nbit		8172153	0		=			
ANR	8173188	MemberAccess	s -> mcdparams [ i ] . chan1		8172153	0					
ANR	8173189	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173190	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173191	Identifier	s		8172153	0					
ANR	8173192	Identifier	mcdparams		8172153	1					
ANR	8173193	Identifier	i		8172153	1					
ANR	8173194	Identifier	chan1		8172153	1					
ANR	8173195	Identifier	nbit		8172153	1					
ANR	8173196	ExpressionStatement	ch_mask |= 1 << nbit	305:20:6098:6118	8172153	6	True				
ANR	8173197	AssignmentExpression	ch_mask |= 1 << nbit		8172153	0		|=			
ANR	8173198	Identifier	ch_mask		8172153	0					
ANR	8173199	ShiftExpression	1 << nbit		8172153	1		<<			
ANR	8173200	PrimaryExpression	1		8172153	0					
ANR	8173201	Identifier	nbit		8172153	1					
ANR	8173202	ElseStatement	else		8172153	0					
ANR	8173203	CompoundStatement		305:19:6030:6030	8172153	0					
ANR	8173204	ExpressionStatement	chan = avctx -> channels	311:16:6178:6200	8172153	0	True				
ANR	8173205	AssignmentExpression	chan = avctx -> channels		8172153	0		=			
ANR	8173206	Identifier	chan		8172153	0					
ANR	8173207	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173208	Identifier	avctx		8172153	0					
ANR	8173209	Identifier	channels		8172153	1					
ANR	8173210	ForStatement	for ( i = 0 ; i < chan ; i ++ )		8172153	1					
ANR	8173211	ForInit	i = 0 ;	313:21:6224:6229	8172153	0	True				
ANR	8173212	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173213	Identifier	i		8172153	0					
ANR	8173214	PrimaryExpression	0		8172153	1					
ANR	8173215	Condition	i < chan	313:28:6231:6238	8172153	1	True				
ANR	8173216	RelationalExpression	i < chan		8172153	0		<			
ANR	8173217	Identifier	i		8172153	0					
ANR	8173218	Identifier	chan		8172153	1					
ANR	8173219	PostIncDecOperationExpression	i ++	313:38:6241:6243	8172153	2	True				
ANR	8173220	Identifier	i		8172153	0					
ANR	8173221	IncDec	++		8172153	1					
ANR	8173222	CompoundStatement		309:43:6117:6117	8172153	3					
ANR	8173223	ExpressionStatement	s -> mcdparams [ i ] . present = 0	315:20:6269:6296	8172153	0	True				
ANR	8173224	AssignmentExpression	s -> mcdparams [ i ] . present = 0		8172153	0		=			
ANR	8173225	MemberAccess	s -> mcdparams [ i ] . present		8172153	0					
ANR	8173226	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173227	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173228	Identifier	s		8172153	0					
ANR	8173229	Identifier	mcdparams		8172153	1					
ANR	8173230	Identifier	i		8172153	1					
ANR	8173231	Identifier	present		8172153	1					
ANR	8173232	PrimaryExpression	0		8172153	1					
ANR	8173233	ExpressionStatement	s -> mcdparams [ i ] . chan1 = i	317:20:6319:6346	8172153	1	True				
ANR	8173234	AssignmentExpression	s -> mcdparams [ i ] . chan1 = i		8172153	0		=			
ANR	8173235	MemberAccess	s -> mcdparams [ i ] . chan1		8172153	0					
ANR	8173236	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173237	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173238	Identifier	s		8172153	0					
ANR	8173239	Identifier	mcdparams		8172153	1					
ANR	8173240	Identifier	i		8172153	1					
ANR	8173241	Identifier	chan1		8172153	1					
ANR	8173242	Identifier	i		8172153	1					
ANR	8173243	ForStatement	for ( i = 0 ; i < chan ; i ++ )		8172153	1					
ANR	8173244	ForInit	i = 0 ;	325:17:6402:6407	8172153	0	True				
ANR	8173245	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173246	Identifier	i		8172153	0					
ANR	8173247	PrimaryExpression	0		8172153	1					
ANR	8173248	Condition	i < chan	325:24:6409:6416	8172153	1	True				
ANR	8173249	RelationalExpression	i < chan		8172153	0		<			
ANR	8173250	Identifier	i		8172153	0					
ANR	8173251	Identifier	chan		8172153	1					
ANR	8173252	PostIncDecOperationExpression	i ++	325:34:6419:6421	8172153	2	True				
ANR	8173253	Identifier	i		8172153	0					
ANR	8173254	IncDec	++		8172153	1					
ANR	8173255	CompoundStatement		321:39:6295:6295	8172153	3					
ANR	8173256	IfStatement	if ( s -> mcdparams [ i ] . present && s -> mcdparams [ i ] . index == 1 )		8172153	0					
ANR	8173257	Condition	s -> mcdparams [ i ] . present && s -> mcdparams [ i ] . index == 1	327:20:6447:6499	8172153	0	True				
ANR	8173258	AndExpression	s -> mcdparams [ i ] . present && s -> mcdparams [ i ] . index == 1		8172153	0		&&			
ANR	8173259	MemberAccess	s -> mcdparams [ i ] . present		8172153	0					
ANR	8173260	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173261	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173262	Identifier	s		8172153	0					
ANR	8173263	Identifier	mcdparams		8172153	1					
ANR	8173264	Identifier	i		8172153	1					
ANR	8173265	Identifier	present		8172153	1					
ANR	8173266	EqualityExpression	s -> mcdparams [ i ] . index == 1		8172153	1		==			
ANR	8173267	MemberAccess	s -> mcdparams [ i ] . index		8172153	0					
ANR	8173268	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173269	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173270	Identifier	s		8172153	0					
ANR	8173271	Identifier	mcdparams		8172153	1					
ANR	8173272	Identifier	i		8172153	1					
ANR	8173273	Identifier	index		8172153	1					
ANR	8173274	PrimaryExpression	1		8172153	1					
ANR	8173275	IfStatement	"if ( ret = decode_channel ( s , s -> mcdparams [ i ] . chan2 ) )"		8172153	1					
ANR	8173276	Condition	"ret = decode_channel ( s , s -> mcdparams [ i ] . chan2 )"	329:24:6527:6572	8172153	0	True				
ANR	8173277	AssignmentExpression	"ret = decode_channel ( s , s -> mcdparams [ i ] . chan2 )"		8172153	0		=			
ANR	8173278	Identifier	ret		8172153	0					
ANR	8173279	CallExpression	"decode_channel ( s , s -> mcdparams [ i ] . chan2 )"		8172153	1					
ANR	8173280	Callee	decode_channel		8172153	0					
ANR	8173281	Identifier	decode_channel		8172153	0					
ANR	8173282	ArgumentList	s		8172153	1					
ANR	8173283	Argument	s		8172153	0					
ANR	8173284	Identifier	s		8172153	0					
ANR	8173285	Argument	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173286	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	0					
ANR	8173287	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173288	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173289	Identifier	s		8172153	0					
ANR	8173290	Identifier	mcdparams		8172153	1					
ANR	8173291	Identifier	i		8172153	1					
ANR	8173292	Identifier	chan2		8172153	1					
ANR	8173293	ReturnStatement	return ret ;	331:24:6600:6610	8172153	1	True				
ANR	8173294	Identifier	ret		8172153	0					
ANR	8173295	IfStatement	"if ( ret = decode_channel ( s , s -> mcdparams [ i ] . chan1 ) )"		8172153	1					
ANR	8173296	Condition	"ret = decode_channel ( s , s -> mcdparams [ i ] . chan1 )"	335:20:6635:6680	8172153	0	True				
ANR	8173297	AssignmentExpression	"ret = decode_channel ( s , s -> mcdparams [ i ] . chan1 )"		8172153	0		=			
ANR	8173298	Identifier	ret		8172153	0					
ANR	8173299	CallExpression	"decode_channel ( s , s -> mcdparams [ i ] . chan1 )"		8172153	1					
ANR	8173300	Callee	decode_channel		8172153	0					
ANR	8173301	Identifier	decode_channel		8172153	0					
ANR	8173302	ArgumentList	s		8172153	1					
ANR	8173303	Argument	s		8172153	0					
ANR	8173304	Identifier	s		8172153	0					
ANR	8173305	Argument	s -> mcdparams [ i ] . chan1		8172153	1					
ANR	8173306	MemberAccess	s -> mcdparams [ i ] . chan1		8172153	0					
ANR	8173307	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173308	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173309	Identifier	s		8172153	0					
ANR	8173310	Identifier	mcdparams		8172153	1					
ANR	8173311	Identifier	i		8172153	1					
ANR	8173312	Identifier	chan1		8172153	1					
ANR	8173313	ReturnStatement	return ret ;	337:20:6704:6714	8172153	1	True				
ANR	8173314	Identifier	ret		8172153	0					
ANR	8173315	IfStatement	if ( s -> mcdparams [ i ] . present )		8172153	2					
ANR	8173316	Condition	s -> mcdparams [ i ] . present	341:20:6739:6761	8172153	0	True				
ANR	8173317	MemberAccess	s -> mcdparams [ i ] . present		8172153	0					
ANR	8173318	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173319	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173320	Identifier	s		8172153	0					
ANR	8173321	Identifier	mcdparams		8172153	1					
ANR	8173322	Identifier	i		8172153	1					
ANR	8173323	Identifier	present		8172153	1					
ANR	8173324	CompoundStatement		337:45:6635:6635	8172153	1					
ANR	8173325	ExpressionStatement	s -> dmode = mc_dmodes [ s -> mcdparams [ i ] . index ]	343:20:6787:6830	8172153	0	True				
ANR	8173326	AssignmentExpression	s -> dmode = mc_dmodes [ s -> mcdparams [ i ] . index ]		8172153	0		=			
ANR	8173327	PtrMemberAccess	s -> dmode		8172153	0					
ANR	8173328	Identifier	s		8172153	0					
ANR	8173329	Identifier	dmode		8172153	1					
ANR	8173330	ArrayIndexing	mc_dmodes [ s -> mcdparams [ i ] . index ]		8172153	1					
ANR	8173331	Identifier	mc_dmodes		8172153	0					
ANR	8173332	MemberAccess	s -> mcdparams [ i ] . index		8172153	1					
ANR	8173333	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173334	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173335	Identifier	s		8172153	0					
ANR	8173336	Identifier	mcdparams		8172153	1					
ANR	8173337	Identifier	i		8172153	1					
ANR	8173338	Identifier	index		8172153	1					
ANR	8173339	IfStatement	"if ( ret = decorrelate ( s , s -> mcdparams [ i ] . chan2 , s -> mcdparams [ i ] . chan1 , s -> nb_samples - 1 ) )"		8172153	1					
ANR	8173340	Condition	"ret = decorrelate ( s , s -> mcdparams [ i ] . chan2 , s -> mcdparams [ i ] . chan1 , s -> nb_samples - 1 )"	345:24:6857:7070	8172153	0	True				
ANR	8173341	AssignmentExpression	"ret = decorrelate ( s , s -> mcdparams [ i ] . chan2 , s -> mcdparams [ i ] . chan1 , s -> nb_samples - 1 )"		8172153	0		=			
ANR	8173342	Identifier	ret		8172153	0					
ANR	8173343	CallExpression	"decorrelate ( s , s -> mcdparams [ i ] . chan2 , s -> mcdparams [ i ] . chan1 , s -> nb_samples - 1 )"		8172153	1					
ANR	8173344	Callee	decorrelate		8172153	0					
ANR	8173345	Identifier	decorrelate		8172153	0					
ANR	8173346	ArgumentList	s		8172153	1					
ANR	8173347	Argument	s		8172153	0					
ANR	8173348	Identifier	s		8172153	0					
ANR	8173349	Argument	s -> mcdparams [ i ] . chan2		8172153	1					
ANR	8173350	MemberAccess	s -> mcdparams [ i ] . chan2		8172153	0					
ANR	8173351	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173352	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173353	Identifier	s		8172153	0					
ANR	8173354	Identifier	mcdparams		8172153	1					
ANR	8173355	Identifier	i		8172153	1					
ANR	8173356	Identifier	chan2		8172153	1					
ANR	8173357	Argument	s -> mcdparams [ i ] . chan1		8172153	2					
ANR	8173358	MemberAccess	s -> mcdparams [ i ] . chan1		8172153	0					
ANR	8173359	ArrayIndexing	s -> mcdparams [ i ]		8172153	0					
ANR	8173360	PtrMemberAccess	s -> mcdparams		8172153	0					
ANR	8173361	Identifier	s		8172153	0					
ANR	8173362	Identifier	mcdparams		8172153	1					
ANR	8173363	Identifier	i		8172153	1					
ANR	8173364	Identifier	chan1		8172153	1					
ANR	8173365	Argument	s -> nb_samples - 1		8172153	3					
ANR	8173366	AdditiveExpression	s -> nb_samples - 1		8172153	0		-			
ANR	8173367	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8173368	Identifier	s		8172153	0					
ANR	8173369	Identifier	nb_samples		8172153	1					
ANR	8173370	PrimaryExpression	1		8172153	1					
ANR	8173371	ReturnStatement	return ret ;	353:24:7098:7108	8172153	1	True				
ANR	8173372	Identifier	ret		8172153	0					
ANR	8173373	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	1					
ANR	8173374	ForInit	chan = 0 ;	363:13:7171:7179	8172153	0	True				
ANR	8173375	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8173376	Identifier	chan		8172153	0					
ANR	8173377	PrimaryExpression	0		8172153	1					
ANR	8173378	Condition	chan < avctx -> channels	363:23:7181:7202	8172153	1	True				
ANR	8173379	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8173380	Identifier	chan		8172153	0					
ANR	8173381	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173382	Identifier	avctx		8172153	0					
ANR	8173383	Identifier	channels		8172153	1					
ANR	8173384	PostIncDecOperationExpression	chan ++	363:47:7205:7210	8172153	2	True				
ANR	8173385	Identifier	chan		8172153	0					
ANR	8173386	IncDec	++		8172153	1					
ANR	8173387	CompoundStatement		361:12:7099:7134	8172153	3					
ANR	8173388	IdentifierDeclStatement	int32_t * decoded = s -> decoded [ chan ] ;	365:12:7228:7263	8172153	0	True				
ANR	8173389	IdentifierDecl	* decoded = s -> decoded [ chan ]		8172153	0					
ANR	8173390	IdentifierDeclType	int32_t *		8172153	0					
ANR	8173391	Identifier	decoded		8172153	1					
ANR	8173392	AssignmentExpression	* decoded = s -> decoded [ chan ]		8172153	2		=			
ANR	8173393	Identifier	decoded		8172153	0					
ANR	8173394	ArrayIndexing	s -> decoded [ chan ]		8172153	1					
ANR	8173395	PtrMemberAccess	s -> decoded		8172153	0					
ANR	8173396	Identifier	s		8172153	0					
ANR	8173397	Identifier	decoded		8172153	1					
ANR	8173398	Identifier	chan		8172153	1					
ANR	8173399	IfStatement	if ( s -> lpc_mode [ chan ] )		8172153	1					
ANR	8173400	Condition	s -> lpc_mode [ chan ]	369:16:7284:7300	8172153	0	True				
ANR	8173401	ArrayIndexing	s -> lpc_mode [ chan ]		8172153	0					
ANR	8173402	PtrMemberAccess	s -> lpc_mode		8172153	0					
ANR	8173403	Identifier	s		8172153	0					
ANR	8173404	Identifier	lpc_mode		8172153	1					
ANR	8173405	Identifier	chan		8172153	1					
ANR	8173406	ExpressionStatement	"decode_lpc ( decoded , s -> lpc_mode [ chan ] , s -> nb_samples )"	371:16:7320:7373	8172153	1	True				
ANR	8173407	CallExpression	"decode_lpc ( decoded , s -> lpc_mode [ chan ] , s -> nb_samples )"		8172153	0					
ANR	8173408	Callee	decode_lpc		8172153	0					
ANR	8173409	Identifier	decode_lpc		8172153	0					
ANR	8173410	ArgumentList	decoded		8172153	1					
ANR	8173411	Argument	decoded		8172153	0					
ANR	8173412	Identifier	decoded		8172153	0					
ANR	8173413	Argument	s -> lpc_mode [ chan ]		8172153	1					
ANR	8173414	ArrayIndexing	s -> lpc_mode [ chan ]		8172153	0					
ANR	8173415	PtrMemberAccess	s -> lpc_mode		8172153	0					
ANR	8173416	Identifier	s		8172153	0					
ANR	8173417	Identifier	lpc_mode		8172153	1					
ANR	8173418	Identifier	chan		8172153	1					
ANR	8173419	Argument	s -> nb_samples		8172153	2					
ANR	8173420	PtrMemberAccess	s -> nb_samples		8172153	0					
ANR	8173421	Identifier	s		8172153	0					
ANR	8173422	Identifier	nb_samples		8172153	1					
ANR	8173423	IfStatement	if ( s -> sample_shift [ chan ] > 0 )		8172153	2					
ANR	8173424	Condition	s -> sample_shift [ chan ] > 0	375:16:7394:7418	8172153	0	True				
ANR	8173425	RelationalExpression	s -> sample_shift [ chan ] > 0		8172153	0		>			
ANR	8173426	ArrayIndexing	s -> sample_shift [ chan ]		8172153	0					
ANR	8173427	PtrMemberAccess	s -> sample_shift		8172153	0					
ANR	8173428	Identifier	s		8172153	0					
ANR	8173429	Identifier	sample_shift		8172153	1					
ANR	8173430	Identifier	chan		8172153	1					
ANR	8173431	PrimaryExpression	0		8172153	1					
ANR	8173432	ForStatement	for ( i = 0 ; i < s -> nb_samples ; i ++ )		8172153	1					
ANR	8173433	ForInit	i = 0 ;	377:21:7443:7448	8172153	0	True				
ANR	8173434	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173435	Identifier	i		8172153	0					
ANR	8173436	PrimaryExpression	0		8172153	1					
ANR	8173437	Condition	i < s -> nb_samples	377:28:7450:7466	8172153	1	True				
ANR	8173438	RelationalExpression	i < s -> nb_samples		8172153	0		<			
ANR	8173439	Identifier	i		8172153	0					
ANR	8173440	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8173441	Identifier	s		8172153	0					
ANR	8173442	Identifier	nb_samples		8172153	1					
ANR	8173443	PostIncDecOperationExpression	i ++	377:47:7469:7471	8172153	2	True				
ANR	8173444	Identifier	i		8172153	0					
ANR	8173445	IncDec	++		8172153	1					
ANR	8173446	ExpressionStatement	decoded [ i ] *= 1 << s -> sample_shift [ chan ]	379:20:7495:7535	8172153	3	True				
ANR	8173447	AssignmentExpression	decoded [ i ] *= 1 << s -> sample_shift [ chan ]		8172153	0		*=			
ANR	8173448	ArrayIndexing	decoded [ i ]		8172153	0					
ANR	8173449	Identifier	decoded		8172153	0					
ANR	8173450	Identifier	i		8172153	1					
ANR	8173451	ShiftExpression	1 << s -> sample_shift [ chan ]		8172153	1		<<			
ANR	8173452	PrimaryExpression	1		8172153	0					
ANR	8173453	ArrayIndexing	s -> sample_shift [ chan ]		8172153	1					
ANR	8173454	PtrMemberAccess	s -> sample_shift		8172153	0					
ANR	8173455	Identifier	s		8172153	0					
ANR	8173456	Identifier	sample_shift		8172153	1					
ANR	8173457	Identifier	chan		8172153	1					
ANR	8173458	ExpressionStatement	align_get_bits ( gb )	387:4:7562:7580	8172153	30	True				
ANR	8173459	CallExpression	align_get_bits ( gb )		8172153	0					
ANR	8173460	Callee	align_get_bits		8172153	0					
ANR	8173461	Identifier	align_get_bits		8172153	0					
ANR	8173462	ArgumentList	gb		8172153	1					
ANR	8173463	Argument	gb		8172153	0					
ANR	8173464	Identifier	gb		8172153	0					
ANR	8173465	ExpressionStatement	"skip_bits ( gb , 24 )"	389:4:7587:7604	8172153	31	True				
ANR	8173466	CallExpression	"skip_bits ( gb , 24 )"		8172153	0					
ANR	8173467	Callee	skip_bits		8172153	0					
ANR	8173468	Identifier	skip_bits		8172153	0					
ANR	8173469	ArgumentList	gb		8172153	1					
ANR	8173470	Argument	gb		8172153	0					
ANR	8173471	Identifier	gb		8172153	0					
ANR	8173472	Argument	24		8172153	1					
ANR	8173473	PrimaryExpression	24		8172153	0					
ANR	8173474	IfStatement	if ( get_bits_left ( gb ) < 0 )		8172153	32					
ANR	8173475	Condition	get_bits_left ( gb ) < 0	391:8:7615:7635	8172153	0	True				
ANR	8173476	RelationalExpression	get_bits_left ( gb ) < 0		8172153	0		<			
ANR	8173477	CallExpression	get_bits_left ( gb )		8172153	0					
ANR	8173478	Callee	get_bits_left		8172153	0					
ANR	8173479	Identifier	get_bits_left		8172153	0					
ANR	8173480	ArgumentList	gb		8172153	1					
ANR	8173481	Argument	gb		8172153	0					
ANR	8173482	Identifier	gb		8172153	0					
ANR	8173483	PrimaryExpression	0		8172153	1					
ANR	8173484	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""overread\\n"" )"	393:8:7647:7688	8172153	1	True				
ANR	8173485	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""overread\\n"" )"		8172153	0					
ANR	8173486	Callee	av_log		8172153	0					
ANR	8173487	Identifier	av_log		8172153	0					
ANR	8173488	ArgumentList	avctx		8172153	1					
ANR	8173489	Argument	avctx		8172153	0					
ANR	8173490	Identifier	avctx		8172153	0					
ANR	8173491	Argument	AV_LOG_DEBUG		8172153	1					
ANR	8173492	Identifier	AV_LOG_DEBUG		8172153	0					
ANR	8173493	Argument	"""overread\\n"""		8172153	2					
ANR	8173494	PrimaryExpression	"""overread\\n"""		8172153	0					
ANR	8173495	ElseStatement	else		8172153	0					
ANR	8173496	IfStatement	if ( get_bits_left ( gb ) > 0 )		8172153	0					
ANR	8173497	Condition	get_bits_left ( gb ) > 0	395:13:7704:7724	8172153	0	True				
ANR	8173498	RelationalExpression	get_bits_left ( gb ) > 0		8172153	0		>			
ANR	8173499	CallExpression	get_bits_left ( gb )		8172153	0					
ANR	8173500	Callee	get_bits_left		8172153	0					
ANR	8173501	Identifier	get_bits_left		8172153	0					
ANR	8173502	ArgumentList	gb		8172153	1					
ANR	8173503	Argument	gb		8172153	0					
ANR	8173504	Identifier	gb		8172153	0					
ANR	8173505	PrimaryExpression	0		8172153	1					
ANR	8173506	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""underread\\n"" )"	397:8:7736:7778	8172153	1	True				
ANR	8173507	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""underread\\n"" )"		8172153	0					
ANR	8173508	Callee	av_log		8172153	0					
ANR	8173509	Identifier	av_log		8172153	0					
ANR	8173510	ArgumentList	avctx		8172153	1					
ANR	8173511	Argument	avctx		8172153	0					
ANR	8173512	Identifier	avctx		8172153	0					
ANR	8173513	Argument	AV_LOG_DEBUG		8172153	1					
ANR	8173514	Identifier	AV_LOG_DEBUG		8172153	0					
ANR	8173515	Argument	"""underread\\n"""		8172153	2					
ANR	8173516	PrimaryExpression	"""underread\\n"""		8172153	0					
ANR	8173517	IfStatement	if ( avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT ) )		8172153	33					
ANR	8173518	Condition	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT )	401:8:7791:7849	8172153	0	True				
ANR	8173519	BitAndExpression	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_COMPLIANT )		8172153	0		&			
ANR	8173520	PtrMemberAccess	avctx -> err_recognition		8172153	0					
ANR	8173521	Identifier	avctx		8172153	0					
ANR	8173522	Identifier	err_recognition		8172153	1					
ANR	8173523	InclusiveOrExpression	AV_EF_CRCCHECK | AV_EF_COMPLIANT		8172153	1		|			
ANR	8173524	Identifier	AV_EF_CRCCHECK		8172153	0					
ANR	8173525	Identifier	AV_EF_COMPLIANT		8172153	1					
ANR	8173526	CompoundStatement		397:69:7723:7723	8172153	1					
ANR	8173527	IfStatement	"if ( ff_tak_check_crc ( pkt -> data + hsize , get_bits_count ( gb ) / 8 - hsize ) )"		8172153	0					
ANR	8173528	Condition	"ff_tak_check_crc ( pkt -> data + hsize , get_bits_count ( gb ) / 8 - hsize )"	403:12:7867:7963	8172153	0	True				
ANR	8173529	CallExpression	"ff_tak_check_crc ( pkt -> data + hsize , get_bits_count ( gb ) / 8 - hsize )"		8172153	0					
ANR	8173530	Callee	ff_tak_check_crc		8172153	0					
ANR	8173531	Identifier	ff_tak_check_crc		8172153	0					
ANR	8173532	ArgumentList	pkt -> data + hsize		8172153	1					
ANR	8173533	Argument	pkt -> data + hsize		8172153	0					
ANR	8173534	AdditiveExpression	pkt -> data + hsize		8172153	0		+			
ANR	8173535	PtrMemberAccess	pkt -> data		8172153	0					
ANR	8173536	Identifier	pkt		8172153	0					
ANR	8173537	Identifier	data		8172153	1					
ANR	8173538	Identifier	hsize		8172153	1					
ANR	8173539	Argument	get_bits_count ( gb ) / 8 - hsize		8172153	1					
ANR	8173540	AdditiveExpression	get_bits_count ( gb ) / 8 - hsize		8172153	0		-			
ANR	8173541	MultiplicativeExpression	get_bits_count ( gb ) / 8		8172153	0		/			
ANR	8173542	CallExpression	get_bits_count ( gb )		8172153	0					
ANR	8173543	Callee	get_bits_count		8172153	0					
ANR	8173544	Identifier	get_bits_count		8172153	0					
ANR	8173545	ArgumentList	gb		8172153	1					
ANR	8173546	Argument	gb		8172153	0					
ANR	8173547	Identifier	gb		8172153	0					
ANR	8173548	PrimaryExpression	8		8172153	1					
ANR	8173549	Identifier	hsize		8172153	1					
ANR	8173550	CompoundStatement		401:62:7837:7837	8172153	1					
ANR	8173551	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""CRC error\\n"" )"	407:12:7981:8023	8172153	0	True				
ANR	8173552	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""CRC error\\n"" )"		8172153	0					
ANR	8173553	Callee	av_log		8172153	0					
ANR	8173554	Identifier	av_log		8172153	0					
ANR	8173555	ArgumentList	avctx		8172153	1					
ANR	8173556	Argument	avctx		8172153	0					
ANR	8173557	Identifier	avctx		8172153	0					
ANR	8173558	Argument	AV_LOG_ERROR		8172153	1					
ANR	8173559	Identifier	AV_LOG_ERROR		8172153	0					
ANR	8173560	Argument	"""CRC error\\n"""		8172153	2					
ANR	8173561	PrimaryExpression	"""CRC error\\n"""		8172153	0					
ANR	8173562	IfStatement	if ( avctx -> err_recognition & AV_EF_EXPLODE )		8172153	1					
ANR	8173563	Condition	avctx -> err_recognition & AV_EF_EXPLODE	409:16:8042:8079	8172153	0	True				
ANR	8173564	BitAndExpression	avctx -> err_recognition & AV_EF_EXPLODE		8172153	0		&			
ANR	8173565	PtrMemberAccess	avctx -> err_recognition		8172153	0					
ANR	8173566	Identifier	avctx		8172153	0					
ANR	8173567	Identifier	err_recognition		8172153	1					
ANR	8173568	Identifier	AV_EF_EXPLODE		8172153	1					
ANR	8173569	ReturnStatement	return AVERROR_INVALIDDATA ;	411:16:8099:8125	8172153	1	True				
ANR	8173570	Identifier	AVERROR_INVALIDDATA		8172153	0					
ANR	8173571	SwitchStatement	switch ( avctx -> sample_fmt )		8172153	34					
ANR	8173572	Condition	avctx -> sample_fmt	421:12:8196:8212	8172153	0	True				
ANR	8173573	PtrMemberAccess	avctx -> sample_fmt		8172153	0					
ANR	8173574	Identifier	avctx		8172153	0					
ANR	8173575	Identifier	sample_fmt		8172153	1					
ANR	8173576	CompoundStatement		417:31:8086:8086	8172153	1					
ANR	8173577	Label	case AV_SAMPLE_FMT_U8P :	423:4:8222:8244	8172153	0	True				
ANR	8173578	Identifier	AV_SAMPLE_FMT_U8P		8172153	0					
ANR	8173579	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	1					
ANR	8173580	ForInit	chan = 0 ;	425:13:8260:8268	8172153	0	True				
ANR	8173581	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8173582	Identifier	chan		8172153	0					
ANR	8173583	PrimaryExpression	0		8172153	1					
ANR	8173584	Condition	chan < avctx -> channels	425:23:8270:8291	8172153	1	True				
ANR	8173585	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8173586	Identifier	chan		8172153	0					
ANR	8173587	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173588	Identifier	avctx		8172153	0					
ANR	8173589	Identifier	channels		8172153	1					
ANR	8173590	PostIncDecOperationExpression	chan ++	425:47:8294:8299	8172153	2	True				
ANR	8173591	Identifier	chan		8172153	0					
ANR	8173592	IncDec	++		8172153	1					
ANR	8173593	CompoundStatement		425:12:8259:8294	8172153	3					
ANR	8173594	IdentifierDeclStatement	uint8_t * samples = ( uint8_t * ) frame -> extended_data [ chan ] ;	427:12:8317:8373	8172153	0	True				
ANR	8173595	IdentifierDecl	* samples = ( uint8_t * ) frame -> extended_data [ chan ]		8172153	0					
ANR	8173596	IdentifierDeclType	uint8_t *		8172153	0					
ANR	8173597	Identifier	samples		8172153	1					
ANR	8173598	AssignmentExpression	* samples = ( uint8_t * ) frame -> extended_data [ chan ]		8172153	2		=			
ANR	8173599	Identifier	samples		8172153	0					
ANR	8173600	CastExpression	( uint8_t * ) frame -> extended_data [ chan ]		8172153	1					
ANR	8173601	CastTarget	uint8_t *		8172153	0					
ANR	8173602	ArrayIndexing	frame -> extended_data [ chan ]		8172153	1					
ANR	8173603	PtrMemberAccess	frame -> extended_data		8172153	0					
ANR	8173604	Identifier	frame		8172153	0					
ANR	8173605	Identifier	extended_data		8172153	1					
ANR	8173606	Identifier	chan		8172153	1					
ANR	8173607	IdentifierDeclStatement	int32_t * decoded = s -> decoded [ chan ] ;	429:12:8388:8423	8172153	1	True				
ANR	8173608	IdentifierDecl	* decoded = s -> decoded [ chan ]		8172153	0					
ANR	8173609	IdentifierDeclType	int32_t *		8172153	0					
ANR	8173610	Identifier	decoded		8172153	1					
ANR	8173611	AssignmentExpression	* decoded = s -> decoded [ chan ]		8172153	2		=			
ANR	8173612	Identifier	decoded		8172153	0					
ANR	8173613	ArrayIndexing	s -> decoded [ chan ]		8172153	1					
ANR	8173614	PtrMemberAccess	s -> decoded		8172153	0					
ANR	8173615	Identifier	s		8172153	0					
ANR	8173616	Identifier	decoded		8172153	1					
ANR	8173617	Identifier	chan		8172153	1					
ANR	8173618	ForStatement	for ( i = 0 ; i < s -> nb_samples ; i ++ )		8172153	2					
ANR	8173619	ForInit	i = 0 ;	431:17:8443:8448	8172153	0	True				
ANR	8173620	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173621	Identifier	i		8172153	0					
ANR	8173622	PrimaryExpression	0		8172153	1					
ANR	8173623	Condition	i < s -> nb_samples	431:24:8450:8466	8172153	1	True				
ANR	8173624	RelationalExpression	i < s -> nb_samples		8172153	0		<			
ANR	8173625	Identifier	i		8172153	0					
ANR	8173626	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8173627	Identifier	s		8172153	0					
ANR	8173628	Identifier	nb_samples		8172153	1					
ANR	8173629	PostIncDecOperationExpression	i ++	431:43:8469:8471	8172153	2	True				
ANR	8173630	Identifier	i		8172153	0					
ANR	8173631	IncDec	++		8172153	1					
ANR	8173632	ExpressionStatement	samples [ i ] = decoded [ i ] + 0x80	433:16:8491:8521	8172153	3	True				
ANR	8173633	AssignmentExpression	samples [ i ] = decoded [ i ] + 0x80		8172153	0		=			
ANR	8173634	ArrayIndexing	samples [ i ]		8172153	0					
ANR	8173635	Identifier	samples		8172153	0					
ANR	8173636	Identifier	i		8172153	1					
ANR	8173637	AdditiveExpression	decoded [ i ] + 0x80		8172153	1		+			
ANR	8173638	ArrayIndexing	decoded [ i ]		8172153	0					
ANR	8173639	Identifier	decoded		8172153	0					
ANR	8173640	Identifier	i		8172153	1					
ANR	8173641	PrimaryExpression	0x80		8172153	1					
ANR	8173642	BreakStatement	break ;	437:8:8543:8548	8172153	2	True				
ANR	8173643	Label	case AV_SAMPLE_FMT_S16P :	439:4:8555:8578	8172153	3	True				
ANR	8173644	Identifier	AV_SAMPLE_FMT_S16P		8172153	0					
ANR	8173645	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	4					
ANR	8173646	ForInit	chan = 0 ;	441:13:8594:8602	8172153	0	True				
ANR	8173647	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8173648	Identifier	chan		8172153	0					
ANR	8173649	PrimaryExpression	0		8172153	1					
ANR	8173650	Condition	chan < avctx -> channels	441:23:8604:8625	8172153	1	True				
ANR	8173651	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8173652	Identifier	chan		8172153	0					
ANR	8173653	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173654	Identifier	avctx		8172153	0					
ANR	8173655	Identifier	channels		8172153	1					
ANR	8173656	PostIncDecOperationExpression	chan ++	441:47:8628:8633	8172153	2	True				
ANR	8173657	Identifier	chan		8172153	0					
ANR	8173658	IncDec	++		8172153	1					
ANR	8173659	CompoundStatement		441:12:8593:8628	8172153	3					
ANR	8173660	IdentifierDeclStatement	int16_t * samples = ( int16_t * ) frame -> extended_data [ chan ] ;	443:12:8651:8707	8172153	0	True				
ANR	8173661	IdentifierDecl	* samples = ( int16_t * ) frame -> extended_data [ chan ]		8172153	0					
ANR	8173662	IdentifierDeclType	int16_t *		8172153	0					
ANR	8173663	Identifier	samples		8172153	1					
ANR	8173664	AssignmentExpression	* samples = ( int16_t * ) frame -> extended_data [ chan ]		8172153	2		=			
ANR	8173665	Identifier	samples		8172153	0					
ANR	8173666	CastExpression	( int16_t * ) frame -> extended_data [ chan ]		8172153	1					
ANR	8173667	CastTarget	int16_t *		8172153	0					
ANR	8173668	ArrayIndexing	frame -> extended_data [ chan ]		8172153	1					
ANR	8173669	PtrMemberAccess	frame -> extended_data		8172153	0					
ANR	8173670	Identifier	frame		8172153	0					
ANR	8173671	Identifier	extended_data		8172153	1					
ANR	8173672	Identifier	chan		8172153	1					
ANR	8173673	IdentifierDeclStatement	int32_t * decoded = s -> decoded [ chan ] ;	445:12:8722:8757	8172153	1	True				
ANR	8173674	IdentifierDecl	* decoded = s -> decoded [ chan ]		8172153	0					
ANR	8173675	IdentifierDeclType	int32_t *		8172153	0					
ANR	8173676	Identifier	decoded		8172153	1					
ANR	8173677	AssignmentExpression	* decoded = s -> decoded [ chan ]		8172153	2		=			
ANR	8173678	Identifier	decoded		8172153	0					
ANR	8173679	ArrayIndexing	s -> decoded [ chan ]		8172153	1					
ANR	8173680	PtrMemberAccess	s -> decoded		8172153	0					
ANR	8173681	Identifier	s		8172153	0					
ANR	8173682	Identifier	decoded		8172153	1					
ANR	8173683	Identifier	chan		8172153	1					
ANR	8173684	ForStatement	for ( i = 0 ; i < s -> nb_samples ; i ++ )		8172153	2					
ANR	8173685	ForInit	i = 0 ;	447:17:8777:8782	8172153	0	True				
ANR	8173686	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173687	Identifier	i		8172153	0					
ANR	8173688	PrimaryExpression	0		8172153	1					
ANR	8173689	Condition	i < s -> nb_samples	447:24:8784:8800	8172153	1	True				
ANR	8173690	RelationalExpression	i < s -> nb_samples		8172153	0		<			
ANR	8173691	Identifier	i		8172153	0					
ANR	8173692	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8173693	Identifier	s		8172153	0					
ANR	8173694	Identifier	nb_samples		8172153	1					
ANR	8173695	PostIncDecOperationExpression	i ++	447:43:8803:8805	8172153	2	True				
ANR	8173696	Identifier	i		8172153	0					
ANR	8173697	IncDec	++		8172153	1					
ANR	8173698	ExpressionStatement	samples [ i ] = decoded [ i ]	449:16:8825:8848	8172153	3	True				
ANR	8173699	AssignmentExpression	samples [ i ] = decoded [ i ]		8172153	0		=			
ANR	8173700	ArrayIndexing	samples [ i ]		8172153	0					
ANR	8173701	Identifier	samples		8172153	0					
ANR	8173702	Identifier	i		8172153	1					
ANR	8173703	ArrayIndexing	decoded [ i ]		8172153	1					
ANR	8173704	Identifier	decoded		8172153	0					
ANR	8173705	Identifier	i		8172153	1					
ANR	8173706	BreakStatement	break ;	453:8:8870:8875	8172153	5	True				
ANR	8173707	Label	case AV_SAMPLE_FMT_S32P :	455:4:8882:8905	8172153	6	True				
ANR	8173708	Identifier	AV_SAMPLE_FMT_S32P		8172153	0					
ANR	8173709	ForStatement	for ( chan = 0 ; chan < avctx -> channels ; chan ++ )		8172153	7					
ANR	8173710	ForInit	chan = 0 ;	457:13:8921:8929	8172153	0	True				
ANR	8173711	AssignmentExpression	chan = 0		8172153	0		=			
ANR	8173712	Identifier	chan		8172153	0					
ANR	8173713	PrimaryExpression	0		8172153	1					
ANR	8173714	Condition	chan < avctx -> channels	457:23:8931:8952	8172153	1	True				
ANR	8173715	RelationalExpression	chan < avctx -> channels		8172153	0		<			
ANR	8173716	Identifier	chan		8172153	0					
ANR	8173717	PtrMemberAccess	avctx -> channels		8172153	1					
ANR	8173718	Identifier	avctx		8172153	0					
ANR	8173719	Identifier	channels		8172153	1					
ANR	8173720	PostIncDecOperationExpression	chan ++	457:47:8955:8960	8172153	2	True				
ANR	8173721	Identifier	chan		8172153	0					
ANR	8173722	IncDec	++		8172153	1					
ANR	8173723	CompoundStatement		455:12:8849:8905	8172153	3					
ANR	8173724	IdentifierDeclStatement	int32_t * samples = ( int32_t * ) frame -> extended_data [ chan ] ;	459:12:8978:9034	8172153	0	True				
ANR	8173725	IdentifierDecl	* samples = ( int32_t * ) frame -> extended_data [ chan ]		8172153	0					
ANR	8173726	IdentifierDeclType	int32_t *		8172153	0					
ANR	8173727	Identifier	samples		8172153	1					
ANR	8173728	AssignmentExpression	* samples = ( int32_t * ) frame -> extended_data [ chan ]		8172153	2		=			
ANR	8173729	Identifier	samples		8172153	0					
ANR	8173730	CastExpression	( int32_t * ) frame -> extended_data [ chan ]		8172153	1					
ANR	8173731	CastTarget	int32_t *		8172153	0					
ANR	8173732	ArrayIndexing	frame -> extended_data [ chan ]		8172153	1					
ANR	8173733	PtrMemberAccess	frame -> extended_data		8172153	0					
ANR	8173734	Identifier	frame		8172153	0					
ANR	8173735	Identifier	extended_data		8172153	1					
ANR	8173736	Identifier	chan		8172153	1					
ANR	8173737	ForStatement	for ( i = 0 ; i < s -> nb_samples ; i ++ )		8172153	1					
ANR	8173738	ForInit	i = 0 ;	461:17:9054:9059	8172153	0	True				
ANR	8173739	AssignmentExpression	i = 0		8172153	0		=			
ANR	8173740	Identifier	i		8172153	0					
ANR	8173741	PrimaryExpression	0		8172153	1					
ANR	8173742	Condition	i < s -> nb_samples	461:24:9061:9077	8172153	1	True				
ANR	8173743	RelationalExpression	i < s -> nb_samples		8172153	0		<			
ANR	8173744	Identifier	i		8172153	0					
ANR	8173745	PtrMemberAccess	s -> nb_samples		8172153	1					
ANR	8173746	Identifier	s		8172153	0					
ANR	8173747	Identifier	nb_samples		8172153	1					
ANR	8173748	PostIncDecOperationExpression	i ++	461:43:9080:9082	8172153	2	True				
ANR	8173749	Identifier	i		8172153	0					
ANR	8173750	IncDec	++		8172153	1					
ANR	8173751	ExpressionStatement	samples [ i ] *= 1 << 8	463:16:9102:9122	8172153	3	True				
ANR	8173752	AssignmentExpression	samples [ i ] *= 1 << 8		8172153	0		*=			
ANR	8173753	ArrayIndexing	samples [ i ]		8172153	0					
ANR	8173754	Identifier	samples		8172153	0					
ANR	8173755	Identifier	i		8172153	1					
ANR	8173756	ShiftExpression	1 << 8		8172153	1		<<			
ANR	8173757	PrimaryExpression	1		8172153	0					
ANR	8173758	PrimaryExpression	8		8172153	1					
ANR	8173759	BreakStatement	break ;	467:8:9144:9149	8172153	8	True				
ANR	8173760	ExpressionStatement	* got_frame_ptr = 1	473:4:9165:9183	8172153	35	True				
ANR	8173761	AssignmentExpression	* got_frame_ptr = 1		8172153	0		=			
ANR	8173762	UnaryOperationExpression	* got_frame_ptr		8172153	0					
ANR	8173763	UnaryOperator	*		8172153	0					
ANR	8173764	Identifier	got_frame_ptr		8172153	1					
ANR	8173765	PrimaryExpression	1		8172153	1					
ANR	8173766	ReturnStatement	return pkt -> size ;	477:4:9192:9208	8172153	36	True				
ANR	8173767	PtrMemberAccess	pkt -> size		8172153	0					
ANR	8173768	Identifier	pkt		8172153	0					
ANR	8173769	Identifier	size		8172153	1					
ANR	8173770	ReturnType	static int		8172153	1					
ANR	8173771	Identifier	tak_decode_frame		8172153	2					
ANR	8173772	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * pkt"		8172153	3					
ANR	8173773	Parameter	AVCodecContext * avctx	1:28:28:48	8172153	0	True				
ANR	8173774	ParameterType	AVCodecContext *		8172153	0					
ANR	8173775	Identifier	avctx		8172153	1					
ANR	8173776	Parameter	void * data	1:51:51:60	8172153	1	True				
ANR	8173777	ParameterType	void *		8172153	0					
ANR	8173778	Identifier	data		8172153	1					
ANR	8173779	Parameter	int * got_frame_ptr	3:28:92:109	8172153	2	True				
ANR	8173780	ParameterType	int *		8172153	0					
ANR	8173781	Identifier	got_frame_ptr		8172153	1					
ANR	8173782	Parameter	AVPacket * pkt	3:48:112:124	8172153	3	True				
ANR	8173783	ParameterType	AVPacket *		8172153	0					
ANR	8173784	Identifier	pkt		8172153	1					
ANR	8173785	CFGEntryNode	ENTRY		8172153		True				
ANR	8173786	CFGExitNode	EXIT		8172153		True				
ANR	8173787	Symbol	ENOMEM		8172153						
ANR	8173788	Symbol	* s -> lpc_mode		8172153						
ANR	8173789	Symbol	s -> nb_samples		8172153						
ANR	8173790	Symbol	got_frame_ptr		8172153						
ANR	8173791	Symbol	* decoded		8172153						
ANR	8173792	Symbol	avctx -> bits_per_raw_sample		8172153						
ANR	8173793	Symbol	s -> mcdparams [ i ] . present		8172153						
ANR	8173794	Symbol	* chan		8172153						
ANR	8173795	Symbol	av_samples_get_buffer_size		8172153						
ANR	8173796	Symbol	set_bps_params		8172153						
ANR	8173797	Symbol	* s -> sample_shift		8172153						
ANR	8173798	Symbol	AV_LOG_DEBUG		8172153						
ANR	8173799	Symbol	* frame -> extended_data		8172153						
ANR	8173800	Symbol	avctx -> sample_fmt		8172153						
ANR	8173801	Symbol	AV_SAMPLE_FMT_S32P		8172153						
ANR	8173802	Symbol	* * * s		8172153						
ANR	8173803	Symbol	samples		8172153						
ANR	8173804	Symbol	& s -> gb		8172153						
ANR	8173805	Symbol	ff_tak_decode_frame_header		8172153						
ANR	8173806	Symbol	init_get_bits8		8172153						
ANR	8173807	Symbol	TAK_CODEC_MONO_STEREO		8172153						
ANR	8173808	Symbol	s -> decode_buffer		8172153						
ANR	8173809	Symbol	s -> subframe_len		8172153						
ANR	8173810	Symbol	& tframe		8172153						
ANR	8173811	Symbol	s -> lpc_mode		8172153						
ANR	8173812	Symbol	ff_tak_check_crc		8172153						
ANR	8173813	Symbol	* * s		8172153						
ANR	8173814	Symbol	AVERROR_PATCHWELCOME		8172153						
ANR	8173815	Symbol	s -> sample_shift		8172153						
ANR	8173816	Symbol	avctx		8172153						
ANR	8173817	Symbol	s -> decoded		8172153						
ANR	8173818	Symbol	frame -> nb_samples		8172153						
ANR	8173819	Symbol	AV_LOG_ERROR		8172153						
ANR	8173820	Symbol	ff_thread_get_buffer		8172153						
ANR	8173821	Symbol	ch_mask		8172153						
ANR	8173822	Symbol	* got_frame_ptr		8172153						
ANR	8173823	Symbol	i		8172153						
ANR	8173824	Symbol	avctx -> channel_layout		8172153						
ANR	8173825	Symbol	pkt -> data		8172153						
ANR	8173826	Symbol	avctx -> sample_rate		8172153						
ANR	8173827	Symbol	* s -> decoded		8172153						
ANR	8173828	Symbol	s		8172153						
ANR	8173829	Symbol	frame -> extended_data		8172153						
ANR	8173830	Symbol	* * s -> mcdparams		8172153						
ANR	8173831	Symbol	AVERROR_INVALIDDATA		8172153						
ANR	8173832	Symbol	chan		8172153						
ANR	8173833	Symbol	s -> ti . sample_rate		8172153						
ANR	8173834	Symbol	s -> ti . frame_samples		8172153						
ANR	8173835	Symbol	get_sbits		8172153						
ANR	8173836	Symbol	* pkt		8172153						
ANR	8173837	Symbol	data		8172153						
ANR	8173838	Symbol	TAK_CODEC_MULTICHANNEL		8172153						
ANR	8173839	Symbol	hsize		8172153						
ANR	8173840	Symbol	s -> ti . data_type		8172153						
ANR	8173841	Symbol	get_bits		8172153						
ANR	8173842	Symbol	TAK_MIN_FRAME_HEADER_BYTES		8172153						
ANR	8173843	Symbol	avctx -> channels		8172153						
ANR	8173844	Symbol	* * frame		8172153						
ANR	8173845	Symbol	* samples		8172153						
ANR	8173846	Symbol	mc_dmodes		8172153						
ANR	8173847	Symbol	ret		8172153						
ANR	8173848	Symbol	* * i		8172153						
ANR	8173849	Symbol	NULL		8172153						
ANR	8173850	Symbol	s -> ti . last_frame_samples		8172153						
ANR	8173851	Symbol	buf_size		8172153						
ANR	8173852	Symbol	get_bits1		8172153						
ANR	8173853	Symbol	* mc_dmodes		8172153						
ANR	8173854	Symbol	get_bits_count		8172153						
ANR	8173855	Symbol	av_samples_fill_arrays		8172153						
ANR	8173856	Symbol	s -> mcdparams [ i ] . chan1		8172153						
ANR	8173857	Symbol	s -> ti . bps		8172153						
ANR	8173858	Symbol	s -> mcdparams [ i ] . chan2		8172153						
ANR	8173859	Symbol	& s -> ti		8172153						
ANR	8173860	Symbol	* avctx		8172153						
ANR	8173861	Symbol	s -> mcdparams [ i ] . index		8172153						
ANR	8173862	Symbol	* s -> subframe_len		8172153						
ANR	8173863	Symbol	AV_EF_CRCCHECK		8172153						
ANR	8173864	Symbol	frame		8172153						
ANR	8173865	Symbol	* s -> mcdparams [ i ] . index		8172153						
ANR	8173866	Symbol	* frame		8172153						
ANR	8173867	Symbol	& s -> decode_buffer_size		8172153						
ANR	8173868	Symbol	decorrelate		8172153						
ANR	8173869	Symbol	AV_EF_EXPLODE		8172153						
ANR	8173870	Symbol	s -> ti		8172153						
ANR	8173871	Symbol	decode_channel		8172153						
ANR	8173872	Symbol	& s -> decode_buffer		8172153						
ANR	8173873	Symbol	get_bits_left		8172153						
ANR	8173874	Symbol	s -> ti . channels		8172153						
ANR	8173875	Symbol	* s -> mcdparams		8172153						
ANR	8173876	Symbol	s -> ti . codec		8172153						
ANR	8173877	Symbol	s -> dmode		8172153						
ANR	8173878	Symbol	pkt		8172153						
ANR	8173879	Symbol	decoded		8172153						
ANR	8173880	Symbol	AV_EF_COMPLIANT		8172153						
ANR	8173881	Symbol	gb		8172153						
ANR	8173882	Symbol	s -> ti . ch_layout		8172153						
ANR	8173883	Symbol	s -> nb_subframes		8172153						
ANR	8173884	Symbol	avctx -> priv_data		8172153						
ANR	8173885	Symbol	nbit		8172153						
ANR	8173886	Symbol	s -> mcdparams		8172153						
ANR	8173887	Symbol	pkt -> size		8172153						
ANR	8173888	Symbol	* i		8172153						
ANR	8173889	Symbol	AVERROR		8172153						
ANR	8173890	Symbol	avctx -> err_recognition		8172153						
ANR	8173891	Symbol	* s		8172153						
