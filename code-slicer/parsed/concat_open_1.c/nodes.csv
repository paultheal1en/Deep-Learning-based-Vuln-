command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1386262	File	/home/p4ultr4n/workplace/ReVeal/raw_code/concat_open_1.c								
ANR	1386263	Function	concat_open	1:0:0:1771							
ANR	1386264	FunctionDef	"concat_open (URLContext * h , const char * uri , int flags)"		1386263	0					
ANR	1386265	CompoundStatement		3:0:75:1771	1386263	0					
ANR	1386266	IdentifierDeclStatement	char * node_uri = NULL ;	5:4:82:103	1386263	0	True				
ANR	1386267	IdentifierDecl	* node_uri = NULL		1386263	0					
ANR	1386268	IdentifierDeclType	char *		1386263	0					
ANR	1386269	Identifier	node_uri		1386263	1					
ANR	1386270	AssignmentExpression	* node_uri = NULL		1386263	2		=			
ANR	1386271	Identifier	NULL		1386263	0					
ANR	1386272	Identifier	NULL		1386263	1					
ANR	1386273	IdentifierDeclStatement	int err = 0 ;	7:4:110:121	1386263	1	True				
ANR	1386274	IdentifierDecl	err = 0		1386263	0					
ANR	1386275	IdentifierDeclType	int		1386263	0					
ANR	1386276	Identifier	err		1386263	1					
ANR	1386277	AssignmentExpression	err = 0		1386263	2		=			
ANR	1386278	Identifier	err		1386263	0					
ANR	1386279	PrimaryExpression	0		1386263	1					
ANR	1386280	IdentifierDeclStatement	int64_t size ;	9:4:128:140	1386263	2	True				
ANR	1386281	IdentifierDecl	size		1386263	0					
ANR	1386282	IdentifierDeclType	int64_t		1386263	0					
ANR	1386283	Identifier	size		1386263	1					
ANR	1386284	IdentifierDeclStatement	"size_t len , i ;"	11:4:147:161	1386263	3	True				
ANR	1386285	IdentifierDecl	len		1386263	0					
ANR	1386286	IdentifierDeclType	size_t		1386263	0					
ANR	1386287	Identifier	len		1386263	1					
ANR	1386288	IdentifierDecl	i		1386263	1					
ANR	1386289	IdentifierDeclType	size_t		1386263	0					
ANR	1386290	Identifier	i		1386263	1					
ANR	1386291	IdentifierDeclStatement	URLContext * uc ;	13:4:168:182	1386263	4	True				
ANR	1386292	IdentifierDecl	* uc		1386263	0					
ANR	1386293	IdentifierDeclType	URLContext *		1386263	0					
ANR	1386294	Identifier	uc		1386263	1					
ANR	1386295	IdentifierDeclStatement	struct concat_data * data = h -> priv_data ;	15:4:189:229	1386263	5	True				
ANR	1386296	IdentifierDecl	* data = h -> priv_data		1386263	0					
ANR	1386297	IdentifierDeclType	struct concat_data *		1386263	0					
ANR	1386298	Identifier	data		1386263	1					
ANR	1386299	AssignmentExpression	* data = h -> priv_data		1386263	2		=			
ANR	1386300	Identifier	data		1386263	0					
ANR	1386301	PtrMemberAccess	h -> priv_data		1386263	1					
ANR	1386302	Identifier	h		1386263	0					
ANR	1386303	Identifier	priv_data		1386263	1					
ANR	1386304	IdentifierDeclStatement	struct concat_nodes * nodes ;	17:4:236:262	1386263	6	True				
ANR	1386305	IdentifierDecl	* nodes		1386263	0					
ANR	1386306	IdentifierDeclType	struct concat_nodes *		1386263	0					
ANR	1386307	Identifier	nodes		1386263	1					
ANR	1386308	ExpressionStatement	"av_strstart ( uri , ""concat:"" , & uri )"	21:4:271:304	1386263	7	True				
ANR	1386309	CallExpression	"av_strstart ( uri , ""concat:"" , & uri )"		1386263	0					
ANR	1386310	Callee	av_strstart		1386263	0					
ANR	1386311	Identifier	av_strstart		1386263	0					
ANR	1386312	ArgumentList	uri		1386263	1					
ANR	1386313	Argument	uri		1386263	0					
ANR	1386314	Identifier	uri		1386263	0					
ANR	1386315	Argument	"""concat:"""		1386263	1					
ANR	1386316	PrimaryExpression	"""concat:"""		1386263	0					
ANR	1386317	Argument	& uri		1386263	2					
ANR	1386318	UnaryOperationExpression	& uri		1386263	0					
ANR	1386319	UnaryOperator	&		1386263	0					
ANR	1386320	Identifier	uri		1386263	1					
ANR	1386321	ForStatement	"for ( i = 0 , len = 1 ; uri [ i ] ; i ++ )"		1386263	8					
ANR	1386322	ForInit	"i = 0 , len = 1 ;"	25:9:318:332	1386263	0	True				
ANR	1386323	Expression	"i = 0 , len = 1"		1386263	0					
ANR	1386324	AssignmentExpression	i = 0		1386263	0		=			
ANR	1386325	Identifier	i		1386263	0					
ANR	1386326	PrimaryExpression	0		1386263	1					
ANR	1386327	AssignmentExpression	len = 1		1386263	1		=			
ANR	1386328	Identifier	len		1386263	0					
ANR	1386329	PrimaryExpression	1		1386263	1					
ANR	1386330	Condition	uri [ i ]	25:25:334:339	1386263	1	True				
ANR	1386331	ArrayIndexing	uri [ i ]		1386263	0					
ANR	1386332	Identifier	uri		1386263	0					
ANR	1386333	Identifier	i		1386263	1					
ANR	1386334	PostIncDecOperationExpression	i ++	25:33:342:344	1386263	2	True				
ANR	1386335	Identifier	i		1386263	0					
ANR	1386336	IncDec	++		1386263	1					
ANR	1386337	IfStatement	if ( uri [ i ] == * AV_CAT_SEPARATOR )		1386263	3					
ANR	1386338	Condition	uri [ i ] == * AV_CAT_SEPARATOR	27:12:360:386	1386263	0	True				
ANR	1386339	EqualityExpression	uri [ i ] == * AV_CAT_SEPARATOR		1386263	0		==			
ANR	1386340	ArrayIndexing	uri [ i ]		1386263	0					
ANR	1386341	Identifier	uri		1386263	0					
ANR	1386342	Identifier	i		1386263	1					
ANR	1386343	UnaryOperationExpression	* AV_CAT_SEPARATOR		1386263	1					
ANR	1386344	UnaryOperator	*		1386263	0					
ANR	1386345	Identifier	AV_CAT_SEPARATOR		1386263	1					
ANR	1386346	IfStatement	if ( ++ len == UINT_MAX / sizeof ( * nodes ) )		1386263	1					
ANR	1386347	Condition	++ len == UINT_MAX / sizeof ( * nodes )	31:16:442:475	1386263	0	True				
ANR	1386348	EqualityExpression	++ len == UINT_MAX / sizeof ( * nodes )		1386263	0		==			
ANR	1386349	UnaryExpression	++ len		1386263	0					
ANR	1386350	IncDec	++		1386263	0					
ANR	1386351	Identifier	len		1386263	1					
ANR	1386352	MultiplicativeExpression	UINT_MAX / sizeof ( * nodes )		1386263	1		/			
ANR	1386353	Identifier	UINT_MAX		1386263	0					
ANR	1386354	SizeofExpression	sizeof ( * nodes )		1386263	1					
ANR	1386355	Sizeof	sizeof		1386263	0					
ANR	1386356	UnaryOperationExpression	* nodes		1386263	1					
ANR	1386357	UnaryOperator	*		1386263	0					
ANR	1386358	Identifier	nodes		1386263	1					
ANR	1386359	CompoundStatement		29:52:402:402	1386263	1					
ANR	1386360	ExpressionStatement	av_freep ( & h -> priv_data )	33:16:497:520	1386263	0	True				
ANR	1386361	CallExpression	av_freep ( & h -> priv_data )		1386263	0					
ANR	1386362	Callee	av_freep		1386263	0					
ANR	1386363	Identifier	av_freep		1386263	0					
ANR	1386364	ArgumentList	& h -> priv_data		1386263	1					
ANR	1386365	Argument	& h -> priv_data		1386263	0					
ANR	1386366	UnaryOperationExpression	& h -> priv_data		1386263	0					
ANR	1386367	UnaryOperator	&		1386263	0					
ANR	1386368	PtrMemberAccess	h -> priv_data		1386263	1					
ANR	1386369	Identifier	h		1386263	0					
ANR	1386370	Identifier	priv_data		1386263	1					
ANR	1386371	ReturnStatement	return AVERROR ( ENAMETOOLONG ) ;	35:16:539:567	1386263	1	True				
ANR	1386372	CallExpression	AVERROR ( ENAMETOOLONG )		1386263	0					
ANR	1386373	Callee	AVERROR		1386263	0					
ANR	1386374	Identifier	AVERROR		1386263	0					
ANR	1386375	ArgumentList	ENAMETOOLONG		1386263	1					
ANR	1386376	Argument	ENAMETOOLONG		1386263	0					
ANR	1386377	Identifier	ENAMETOOLONG		1386263	0					
ANR	1386378	IfStatement	if ( ! ( nodes = av_malloc ( sizeof ( * nodes ) * len ) ) )		1386263	9					
ANR	1386379	Condition	! ( nodes = av_malloc ( sizeof ( * nodes ) * len ) )	41:8:595:636	1386263	0	True				
ANR	1386380	UnaryOperationExpression	! ( nodes = av_malloc ( sizeof ( * nodes ) * len ) )		1386263	0					
ANR	1386381	UnaryOperator	!		1386263	0					
ANR	1386382	AssignmentExpression	nodes = av_malloc ( sizeof ( * nodes ) * len )		1386263	1		=			
ANR	1386383	Identifier	nodes		1386263	0					
ANR	1386384	CallExpression	av_malloc ( sizeof ( * nodes ) * len )		1386263	1					
ANR	1386385	Callee	av_malloc		1386263	0					
ANR	1386386	Identifier	av_malloc		1386263	0					
ANR	1386387	ArgumentList	sizeof ( * nodes ) * len		1386263	1					
ANR	1386388	Argument	sizeof ( * nodes ) * len		1386263	0					
ANR	1386389	MultiplicativeExpression	sizeof ( * nodes ) * len		1386263	0		*			
ANR	1386390	SizeofExpression	sizeof ( * nodes )		1386263	0					
ANR	1386391	Sizeof	sizeof		1386263	0					
ANR	1386392	UnaryOperationExpression	* nodes		1386263	1					
ANR	1386393	UnaryOperator	*		1386263	0					
ANR	1386394	Identifier	nodes		1386263	1					
ANR	1386395	Identifier	len		1386263	1					
ANR	1386396	CompoundStatement		39:52:563:563	1386263	1					
ANR	1386397	ReturnStatement	return AVERROR ( ENOMEM ) ;	43:8:650:672	1386263	0	True				
ANR	1386398	CallExpression	AVERROR ( ENOMEM )		1386263	0					
ANR	1386399	Callee	AVERROR		1386263	0					
ANR	1386400	Identifier	AVERROR		1386263	0					
ANR	1386401	ArgumentList	ENOMEM		1386263	1					
ANR	1386402	Argument	ENOMEM		1386263	0					
ANR	1386403	Identifier	ENOMEM		1386263	0					
ANR	1386404	ElseStatement	else		1386263	0					
ANR	1386405	ExpressionStatement	data -> nodes = nodes	47:8:695:714	1386263	0	True				
ANR	1386406	AssignmentExpression	data -> nodes = nodes		1386263	0		=			
ANR	1386407	PtrMemberAccess	data -> nodes		1386263	0					
ANR	1386408	Identifier	data		1386263	0					
ANR	1386409	Identifier	nodes		1386263	1					
ANR	1386410	Identifier	nodes		1386263	1					
ANR	1386411	IfStatement	if ( ! * uri )		1386263	10					
ANR	1386412	Condition	! * uri	53:8:751:755	1386263	0	True				
ANR	1386413	UnaryOperationExpression	! * uri		1386263	0					
ANR	1386414	UnaryOperator	!		1386263	0					
ANR	1386415	UnaryOperationExpression	* uri		1386263	1					
ANR	1386416	UnaryOperator	*		1386263	0					
ANR	1386417	Identifier	uri		1386263	1					
ANR	1386418	ExpressionStatement	err = AVERROR ( ENOENT )	55:8:767:788	1386263	1	True				
ANR	1386419	AssignmentExpression	err = AVERROR ( ENOENT )		1386263	0		=			
ANR	1386420	Identifier	err		1386263	0					
ANR	1386421	CallExpression	AVERROR ( ENOENT )		1386263	1					
ANR	1386422	Callee	AVERROR		1386263	0					
ANR	1386423	Identifier	AVERROR		1386263	0					
ANR	1386424	ArgumentList	ENOENT		1386263	1					
ANR	1386425	Argument	ENOENT		1386263	0					
ANR	1386426	Identifier	ENOENT		1386263	0					
ANR	1386427	ForStatement	for ( i = 0 ; * uri ; i ++ )		1386263	11					
ANR	1386428	ForInit	i = 0 ;	57:9:800:805	1386263	0	True				
ANR	1386429	AssignmentExpression	i = 0		1386263	0		=			
ANR	1386430	Identifier	i		1386263	0					
ANR	1386431	PrimaryExpression	0		1386263	1					
ANR	1386432	Condition	* uri	57:16:807:810	1386263	1	True				
ANR	1386433	UnaryOperationExpression	* uri		1386263	0					
ANR	1386434	UnaryOperator	*		1386263	0					
ANR	1386435	Identifier	uri		1386263	1					
ANR	1386436	PostIncDecOperationExpression	i ++	57:22:813:815	1386263	2	True				
ANR	1386437	Identifier	i		1386263	0					
ANR	1386438	IncDec	++		1386263	1					
ANR	1386439	CompoundStatement		55:27:742:742	1386263	3					
ANR	1386440	ExpressionStatement	"len = strcspn ( uri , AV_CAT_SEPARATOR )"	61:8:856:892	1386263	0	True				
ANR	1386441	AssignmentExpression	"len = strcspn ( uri , AV_CAT_SEPARATOR )"		1386263	0		=			
ANR	1386442	Identifier	len		1386263	0					
ANR	1386443	CallExpression	"strcspn ( uri , AV_CAT_SEPARATOR )"		1386263	1					
ANR	1386444	Callee	strcspn		1386263	0					
ANR	1386445	Identifier	strcspn		1386263	0					
ANR	1386446	ArgumentList	uri		1386263	1					
ANR	1386447	Argument	uri		1386263	0					
ANR	1386448	Identifier	uri		1386263	0					
ANR	1386449	Argument	AV_CAT_SEPARATOR		1386263	1					
ANR	1386450	Identifier	AV_CAT_SEPARATOR		1386263	0					
ANR	1386451	IfStatement	"if ( ( err = av_reallocp ( & node_uri , len + 1 ) ) < 0 )"		1386263	1					
ANR	1386452	Condition	"( err = av_reallocp ( & node_uri , len + 1 ) ) < 0"	63:12:907:949	1386263	0	True				
ANR	1386453	RelationalExpression	"( err = av_reallocp ( & node_uri , len + 1 ) ) < 0"		1386263	0		<			
ANR	1386454	AssignmentExpression	"err = av_reallocp ( & node_uri , len + 1 )"		1386263	0		=			
ANR	1386455	Identifier	err		1386263	0					
ANR	1386456	CallExpression	"av_reallocp ( & node_uri , len + 1 )"		1386263	1					
ANR	1386457	Callee	av_reallocp		1386263	0					
ANR	1386458	Identifier	av_reallocp		1386263	0					
ANR	1386459	ArgumentList	& node_uri		1386263	1					
ANR	1386460	Argument	& node_uri		1386263	0					
ANR	1386461	UnaryOperationExpression	& node_uri		1386263	0					
ANR	1386462	UnaryOperator	&		1386263	0					
ANR	1386463	Identifier	node_uri		1386263	1					
ANR	1386464	Argument	len + 1		1386263	1					
ANR	1386465	AdditiveExpression	len + 1		1386263	0		+			
ANR	1386466	Identifier	len		1386263	0					
ANR	1386467	PrimaryExpression	1		1386263	1					
ANR	1386468	PrimaryExpression	0		1386263	1					
ANR	1386469	BreakStatement	break ;	65:12:965:970	1386263	1	True				
ANR	1386470	ExpressionStatement	"av_strlcpy ( node_uri , uri , len + 1 )"	67:8:981:1013	1386263	2	True				
ANR	1386471	CallExpression	"av_strlcpy ( node_uri , uri , len + 1 )"		1386263	0					
ANR	1386472	Callee	av_strlcpy		1386263	0					
ANR	1386473	Identifier	av_strlcpy		1386263	0					
ANR	1386474	ArgumentList	node_uri		1386263	1					
ANR	1386475	Argument	node_uri		1386263	0					
ANR	1386476	Identifier	node_uri		1386263	0					
ANR	1386477	Argument	uri		1386263	1					
ANR	1386478	Identifier	uri		1386263	0					
ANR	1386479	Argument	len + 1		1386263	2					
ANR	1386480	AdditiveExpression	len + 1		1386263	0		+			
ANR	1386481	Identifier	len		1386263	0					
ANR	1386482	PrimaryExpression	1		1386263	1					
ANR	1386483	ExpressionStatement	"uri += len + strspn ( uri + len , AV_CAT_SEPARATOR )"	69:8:1024:1070	1386263	3	True				
ANR	1386484	AssignmentExpression	"uri += len + strspn ( uri + len , AV_CAT_SEPARATOR )"		1386263	0		+=			
ANR	1386485	Identifier	uri		1386263	0					
ANR	1386486	AdditiveExpression	"len + strspn ( uri + len , AV_CAT_SEPARATOR )"		1386263	1		+			
ANR	1386487	Identifier	len		1386263	0					
ANR	1386488	CallExpression	"strspn ( uri + len , AV_CAT_SEPARATOR )"		1386263	1					
ANR	1386489	Callee	strspn		1386263	0					
ANR	1386490	Identifier	strspn		1386263	0					
ANR	1386491	ArgumentList	uri + len		1386263	1					
ANR	1386492	Argument	uri + len		1386263	0					
ANR	1386493	AdditiveExpression	uri + len		1386263	0		+			
ANR	1386494	Identifier	uri		1386263	0					
ANR	1386495	Identifier	len		1386263	1					
ANR	1386496	Argument	AV_CAT_SEPARATOR		1386263	1					
ANR	1386497	Identifier	AV_CAT_SEPARATOR		1386263	0					
ANR	1386498	IfStatement	"if ( ( err = ffurl_open ( & uc , node_uri , flags , & h -> interrupt_callback , NULL ) ) < 0 )"		1386263	4					
ANR	1386499	Condition	"( err = ffurl_open ( & uc , node_uri , flags , & h -> interrupt_callback , NULL ) ) < 0"	75:12:1122:1226	1386263	0	True				
ANR	1386500	RelationalExpression	"( err = ffurl_open ( & uc , node_uri , flags , & h -> interrupt_callback , NULL ) ) < 0"		1386263	0		<			
ANR	1386501	AssignmentExpression	"err = ffurl_open ( & uc , node_uri , flags , & h -> interrupt_callback , NULL )"		1386263	0		=			
ANR	1386502	Identifier	err		1386263	0					
ANR	1386503	CallExpression	"ffurl_open ( & uc , node_uri , flags , & h -> interrupt_callback , NULL )"		1386263	1					
ANR	1386504	Callee	ffurl_open		1386263	0					
ANR	1386505	Identifier	ffurl_open		1386263	0					
ANR	1386506	ArgumentList	& uc		1386263	1					
ANR	1386507	Argument	& uc		1386263	0					
ANR	1386508	UnaryOperationExpression	& uc		1386263	0					
ANR	1386509	UnaryOperator	&		1386263	0					
ANR	1386510	Identifier	uc		1386263	1					
ANR	1386511	Argument	node_uri		1386263	1					
ANR	1386512	Identifier	node_uri		1386263	0					
ANR	1386513	Argument	flags		1386263	2					
ANR	1386514	Identifier	flags		1386263	0					
ANR	1386515	Argument	& h -> interrupt_callback		1386263	3					
ANR	1386516	UnaryOperationExpression	& h -> interrupt_callback		1386263	0					
ANR	1386517	UnaryOperator	&		1386263	0					
ANR	1386518	PtrMemberAccess	h -> interrupt_callback		1386263	1					
ANR	1386519	Identifier	h		1386263	0					
ANR	1386520	Identifier	interrupt_callback		1386263	1					
ANR	1386521	Argument	NULL		1386263	4					
ANR	1386522	Identifier	NULL		1386263	0					
ANR	1386523	PrimaryExpression	0		1386263	1					
ANR	1386524	BreakStatement	break ;	79:12:1242:1247	1386263	1	True				
ANR	1386525	IfStatement	if ( ( size = ffurl_size ( uc ) ) < 0 )		1386263	5					
ANR	1386526	Condition	( size = ffurl_size ( uc ) ) < 0	85:12:1293:1319	1386263	0	True				
ANR	1386527	RelationalExpression	( size = ffurl_size ( uc ) ) < 0		1386263	0		<			
ANR	1386528	AssignmentExpression	size = ffurl_size ( uc )		1386263	0		=			
ANR	1386529	Identifier	size		1386263	0					
ANR	1386530	CallExpression	ffurl_size ( uc )		1386263	1					
ANR	1386531	Callee	ffurl_size		1386263	0					
ANR	1386532	Identifier	ffurl_size		1386263	0					
ANR	1386533	ArgumentList	uc		1386263	1					
ANR	1386534	Argument	uc		1386263	0					
ANR	1386535	Identifier	uc		1386263	0					
ANR	1386536	PrimaryExpression	0		1386263	1					
ANR	1386537	CompoundStatement		83:41:1246:1246	1386263	1					
ANR	1386538	ExpressionStatement	ffurl_close ( uc )	87:12:1337:1352	1386263	0	True				
ANR	1386539	CallExpression	ffurl_close ( uc )		1386263	0					
ANR	1386540	Callee	ffurl_close		1386263	0					
ANR	1386541	Identifier	ffurl_close		1386263	0					
ANR	1386542	ArgumentList	uc		1386263	1					
ANR	1386543	Argument	uc		1386263	0					
ANR	1386544	Identifier	uc		1386263	0					
ANR	1386545	ExpressionStatement	err = AVERROR ( ENOSYS )	89:12:1367:1388	1386263	1	True				
ANR	1386546	AssignmentExpression	err = AVERROR ( ENOSYS )		1386263	0		=			
ANR	1386547	Identifier	err		1386263	0					
ANR	1386548	CallExpression	AVERROR ( ENOSYS )		1386263	1					
ANR	1386549	Callee	AVERROR		1386263	0					
ANR	1386550	Identifier	AVERROR		1386263	0					
ANR	1386551	ArgumentList	ENOSYS		1386263	1					
ANR	1386552	Argument	ENOSYS		1386263	0					
ANR	1386553	Identifier	ENOSYS		1386263	0					
ANR	1386554	BreakStatement	break ;	91:12:1403:1408	1386263	2	True				
ANR	1386555	ExpressionStatement	nodes [ i ] . uc = uc	99:8:1458:1476	1386263	6	True				
ANR	1386556	AssignmentExpression	nodes [ i ] . uc = uc		1386263	0		=			
ANR	1386557	MemberAccess	nodes [ i ] . uc		1386263	0					
ANR	1386558	ArrayIndexing	nodes [ i ]		1386263	0					
ANR	1386559	Identifier	nodes		1386263	0					
ANR	1386560	Identifier	i		1386263	1					
ANR	1386561	Identifier	uc		1386263	1					
ANR	1386562	Identifier	uc		1386263	1					
ANR	1386563	ExpressionStatement	nodes [ i ] . size = size	101:8:1487:1507	1386263	7	True				
ANR	1386564	AssignmentExpression	nodes [ i ] . size = size		1386263	0		=			
ANR	1386565	MemberAccess	nodes [ i ] . size		1386263	0					
ANR	1386566	ArrayIndexing	nodes [ i ]		1386263	0					
ANR	1386567	Identifier	nodes		1386263	0					
ANR	1386568	Identifier	i		1386263	1					
ANR	1386569	Identifier	size		1386263	1					
ANR	1386570	Identifier	size		1386263	1					
ANR	1386571	ExpressionStatement	av_free ( node_uri )	105:4:1521:1538	1386263	12	True				
ANR	1386572	CallExpression	av_free ( node_uri )		1386263	0					
ANR	1386573	Callee	av_free		1386263	0					
ANR	1386574	Identifier	av_free		1386263	0					
ANR	1386575	ArgumentList	node_uri		1386263	1					
ANR	1386576	Argument	node_uri		1386263	0					
ANR	1386577	Identifier	node_uri		1386263	0					
ANR	1386578	ExpressionStatement	data -> length = i	107:4:1545:1561	1386263	13	True				
ANR	1386579	AssignmentExpression	data -> length = i		1386263	0		=			
ANR	1386580	PtrMemberAccess	data -> length		1386263	0					
ANR	1386581	Identifier	data		1386263	0					
ANR	1386582	Identifier	length		1386263	1					
ANR	1386583	Identifier	i		1386263	1					
ANR	1386584	IfStatement	if ( err < 0 )		1386263	14					
ANR	1386585	Condition	err < 0	111:8:1574:1580	1386263	0	True				
ANR	1386586	RelationalExpression	err < 0		1386263	0		<			
ANR	1386587	Identifier	err		1386263	0					
ANR	1386588	PrimaryExpression	0		1386263	1					
ANR	1386589	ExpressionStatement	concat_close ( h )	113:8:1592:1607	1386263	1	True				
ANR	1386590	CallExpression	concat_close ( h )		1386263	0					
ANR	1386591	Callee	concat_close		1386263	0					
ANR	1386592	Identifier	concat_close		1386263	0					
ANR	1386593	ArgumentList	h		1386263	1					
ANR	1386594	Argument	h		1386263	0					
ANR	1386595	Identifier	h		1386263	0					
ANR	1386596	ElseStatement	else		1386263	0					
ANR	1386597	IfStatement	"if ( ( err = av_reallocp ( & nodes , data -> length * sizeof ( * nodes ) ) ) < 0 )"		1386263	0					
ANR	1386598	Condition	"( err = av_reallocp ( & nodes , data -> length * sizeof ( * nodes ) ) ) < 0"	115:13:1623:1684	1386263	0	True				
ANR	1386599	RelationalExpression	"( err = av_reallocp ( & nodes , data -> length * sizeof ( * nodes ) ) ) < 0"		1386263	0		<			
ANR	1386600	AssignmentExpression	"err = av_reallocp ( & nodes , data -> length * sizeof ( * nodes ) )"		1386263	0		=			
ANR	1386601	Identifier	err		1386263	0					
ANR	1386602	CallExpression	"av_reallocp ( & nodes , data -> length * sizeof ( * nodes ) )"		1386263	1					
ANR	1386603	Callee	av_reallocp		1386263	0					
ANR	1386604	Identifier	av_reallocp		1386263	0					
ANR	1386605	ArgumentList	& nodes		1386263	1					
ANR	1386606	Argument	& nodes		1386263	0					
ANR	1386607	UnaryOperationExpression	& nodes		1386263	0					
ANR	1386608	UnaryOperator	&		1386263	0					
ANR	1386609	Identifier	nodes		1386263	1					
ANR	1386610	Argument	data -> length * sizeof ( * nodes )		1386263	1					
ANR	1386611	MultiplicativeExpression	data -> length * sizeof ( * nodes )		1386263	0		*			
ANR	1386612	PtrMemberAccess	data -> length		1386263	0					
ANR	1386613	Identifier	data		1386263	0					
ANR	1386614	Identifier	length		1386263	1					
ANR	1386615	SizeofExpression	sizeof ( * nodes )		1386263	1					
ANR	1386616	Sizeof	sizeof		1386263	0					
ANR	1386617	UnaryOperationExpression	* nodes		1386263	1					
ANR	1386618	UnaryOperator	*		1386263	0					
ANR	1386619	Identifier	nodes		1386263	1					
ANR	1386620	PrimaryExpression	0		1386263	1					
ANR	1386621	ExpressionStatement	concat_close ( h )	117:8:1696:1711	1386263	1	True				
ANR	1386622	CallExpression	concat_close ( h )		1386263	0					
ANR	1386623	Callee	concat_close		1386263	0					
ANR	1386624	Identifier	concat_close		1386263	0					
ANR	1386625	ArgumentList	h		1386263	1					
ANR	1386626	Argument	h		1386263	0					
ANR	1386627	Identifier	h		1386263	0					
ANR	1386628	ElseStatement	else		1386263	0					
ANR	1386629	ExpressionStatement	data -> nodes = nodes	121:8:1732:1751	1386263	0	True				
ANR	1386630	AssignmentExpression	data -> nodes = nodes		1386263	0		=			
ANR	1386631	PtrMemberAccess	data -> nodes		1386263	0					
ANR	1386632	Identifier	data		1386263	0					
ANR	1386633	Identifier	nodes		1386263	1					
ANR	1386634	Identifier	nodes		1386263	1					
ANR	1386635	ReturnStatement	return err ;	123:4:1758:1768	1386263	15	True				
ANR	1386636	Identifier	err		1386263	0					
ANR	1386637	ReturnType	static av_cold int		1386263	1					
ANR	1386638	Identifier	concat_open		1386263	2					
ANR	1386639	ParameterList	"URLContext * h , const char * uri , int flags"		1386263	3					
ANR	1386640	Parameter	URLContext * h	1:31:31:43	1386263	0	True				
ANR	1386641	ParameterType	URLContext *		1386263	0					
ANR	1386642	Identifier	h		1386263	1					
ANR	1386643	Parameter	const char * uri	1:46:46:60	1386263	1	True				
ANR	1386644	ParameterType	const char *		1386263	0					
ANR	1386645	Identifier	uri		1386263	1					
ANR	1386646	Parameter	int flags	1:63:63:71	1386263	2	True				
ANR	1386647	ParameterType	int		1386263	0					
ANR	1386648	Identifier	flags		1386263	1					
ANR	1386649	CFGEntryNode	ENTRY		1386263		True				
ANR	1386650	CFGExitNode	EXIT		1386263		True				
ANR	1386651	Symbol	av_malloc		1386263						
ANR	1386652	Symbol	ENOMEM		1386263						
ANR	1386653	Symbol	& node_uri		1386263						
ANR	1386654	Symbol	data		1386263						
ANR	1386655	Symbol	flags		1386263						
ANR	1386656	Symbol	ENOSYS		1386263						
ANR	1386657	Symbol	strcspn		1386263						
ANR	1386658	Symbol	data -> nodes		1386263						
ANR	1386659	Symbol	uc		1386263						
ANR	1386660	Symbol	UINT_MAX		1386263						
ANR	1386661	Symbol	len		1386263						
ANR	1386662	Symbol	& uri		1386263						
ANR	1386663	Symbol	* uri		1386263						
ANR	1386664	Symbol	* nodes		1386263						
ANR	1386665	Symbol	& uc		1386263						
ANR	1386666	Symbol	node_uri		1386263						
ANR	1386667	Symbol	* AV_CAT_SEPARATOR		1386263						
ANR	1386668	Symbol	& h -> interrupt_callback		1386263						
ANR	1386669	Symbol	ffurl_size		1386263						
ANR	1386670	Symbol	NULL		1386263						
ANR	1386671	Symbol	err		1386263						
ANR	1386672	Symbol	h		1386263						
ANR	1386673	Symbol	i		1386263						
ANR	1386674	Symbol	ENOENT		1386263						
ANR	1386675	Symbol	ffurl_open		1386263						
ANR	1386676	Symbol	uri		1386263						
ANR	1386677	Symbol	AV_CAT_SEPARATOR		1386263						
ANR	1386678	Symbol	nodes [ i ] . uc		1386263						
ANR	1386679	Symbol	* h		1386263						
ANR	1386680	Symbol	h -> priv_data		1386263						
ANR	1386681	Symbol	nodes		1386263						
ANR	1386682	Symbol	* i		1386263						
ANR	1386683	Symbol	ENAMETOOLONG		1386263						
ANR	1386684	Symbol	size		1386263						
ANR	1386685	Symbol	av_reallocp		1386263						
ANR	1386686	Symbol	strspn		1386263						
ANR	1386687	Symbol	& h -> priv_data		1386263						
ANR	1386688	Symbol	AVERROR		1386263						
ANR	1386689	Symbol	nodes [ i ] . size		1386263						
ANR	1386690	Symbol	data -> length		1386263						
ANR	1386691	Symbol	* data		1386263						
ANR	1386692	Symbol	& nodes		1386263						
