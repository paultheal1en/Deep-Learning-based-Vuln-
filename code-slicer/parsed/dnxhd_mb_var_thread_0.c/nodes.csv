command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2536239	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dnxhd_mb_var_thread_0.c								
ANR	2536240	Function	dnxhd_mb_var_thread	1:0:0:1837							
ANR	2536241	FunctionDef	"dnxhd_mb_var_thread (AVCodecContext * avctx , void * arg , int jobnr , int threadnr)"		2536240	0					
ANR	2536242	CompoundStatement		3:0:91:1837	2536240	0					
ANR	2536243	IdentifierDeclStatement	DNXHDEncContext * ctx = avctx -> priv_data ;	5:4:98:137	2536240	0	True				
ANR	2536244	IdentifierDecl	* ctx = avctx -> priv_data		2536240	0					
ANR	2536245	IdentifierDeclType	DNXHDEncContext *		2536240	0					
ANR	2536246	Identifier	ctx		2536240	1					
ANR	2536247	AssignmentExpression	* ctx = avctx -> priv_data		2536240	2		=			
ANR	2536248	Identifier	ctx		2536240	0					
ANR	2536249	PtrMemberAccess	avctx -> priv_data		2536240	1					
ANR	2536250	Identifier	avctx		2536240	0					
ANR	2536251	Identifier	priv_data		2536240	1					
ANR	2536252	IdentifierDeclStatement	"int mb_y = jobnr , mb_x ;"	7:4:144:166	2536240	1	True				
ANR	2536253	IdentifierDecl	mb_y = jobnr		2536240	0					
ANR	2536254	IdentifierDeclType	int		2536240	0					
ANR	2536255	Identifier	mb_y		2536240	1					
ANR	2536256	AssignmentExpression	mb_y = jobnr		2536240	2		=			
ANR	2536257	Identifier	jobnr		2536240	0					
ANR	2536258	Identifier	jobnr		2536240	1					
ANR	2536259	IdentifierDecl	mb_x		2536240	1					
ANR	2536260	IdentifierDeclType	int		2536240	0					
ANR	2536261	Identifier	mb_x		2536240	1					
ANR	2536262	ExpressionStatement	ctx = ctx -> thread [ threadnr ]	9:4:173:200	2536240	2	True				
ANR	2536263	AssignmentExpression	ctx = ctx -> thread [ threadnr ]		2536240	0		=			
ANR	2536264	Identifier	ctx		2536240	0					
ANR	2536265	ArrayIndexing	ctx -> thread [ threadnr ]		2536240	1					
ANR	2536266	PtrMemberAccess	ctx -> thread		2536240	0					
ANR	2536267	Identifier	ctx		2536240	0					
ANR	2536268	Identifier	thread		2536240	1					
ANR	2536269	Identifier	threadnr		2536240	1					
ANR	2536270	IfStatement	if ( ctx -> cid_table -> bit_depth == 8 )		2536240	3					
ANR	2536271	Condition	ctx -> cid_table -> bit_depth == 8	11:8:211:240	2536240	0	True				
ANR	2536272	EqualityExpression	ctx -> cid_table -> bit_depth == 8		2536240	0		==			
ANR	2536273	PtrMemberAccess	ctx -> cid_table -> bit_depth		2536240	0					
ANR	2536274	PtrMemberAccess	ctx -> cid_table		2536240	0					
ANR	2536275	Identifier	ctx		2536240	0					
ANR	2536276	Identifier	cid_table		2536240	1					
ANR	2536277	Identifier	bit_depth		2536240	1					
ANR	2536278	PrimaryExpression	8		2536240	1					
ANR	2536279	CompoundStatement		11:8:162:231	2536240	1					
ANR	2536280	IdentifierDeclStatement	uint8_t * pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize ) ;	13:8:254:323	2536240	0	True				
ANR	2536281	IdentifierDecl	* pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536240	0					
ANR	2536282	IdentifierDeclType	uint8_t *		2536240	0					
ANR	2536283	Identifier	pix		2536240	1					
ANR	2536284	AssignmentExpression	* pix = ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536240	2		=			
ANR	2536285	Identifier	pix		2536240	0					
ANR	2536286	AdditiveExpression	ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * ctx -> m . linesize )		2536240	1		+			
ANR	2536287	ArrayIndexing	ctx -> thread [ 0 ] -> src [ 0 ]		2536240	0					
ANR	2536288	PtrMemberAccess	ctx -> thread [ 0 ] -> src		2536240	0					
ANR	2536289	ArrayIndexing	ctx -> thread [ 0 ]		2536240	0					
ANR	2536290	PtrMemberAccess	ctx -> thread		2536240	0					
ANR	2536291	Identifier	ctx		2536240	0					
ANR	2536292	Identifier	thread		2536240	1					
ANR	2536293	PrimaryExpression	0		2536240	1					
ANR	2536294	Identifier	src		2536240	1					
ANR	2536295	PrimaryExpression	0		2536240	1					
ANR	2536296	MultiplicativeExpression	( mb_y << 4 ) * ctx -> m . linesize		2536240	1		*			
ANR	2536297	ShiftExpression	mb_y << 4		2536240	0		<<			
ANR	2536298	Identifier	mb_y		2536240	0					
ANR	2536299	PrimaryExpression	4		2536240	1					
ANR	2536300	MemberAccess	ctx -> m . linesize		2536240	1					
ANR	2536301	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536302	Identifier	ctx		2536240	0					
ANR	2536303	Identifier	m		2536240	1					
ANR	2536304	Identifier	linesize		2536240	1					
ANR	2536305	ForStatement	"for ( mb_x = 0 ; mb_x < ctx -> m . mb_width ; ++ mb_x , pix += 16 )"		2536240	1					
ANR	2536306	ForInit	mb_x = 0 ;	15:13:339:347	2536240	0	True				
ANR	2536307	AssignmentExpression	mb_x = 0		2536240	0		=			
ANR	2536308	Identifier	mb_x		2536240	0					
ANR	2536309	PrimaryExpression	0		2536240	1					
ANR	2536310	Condition	mb_x < ctx -> m . mb_width	15:23:349:370	2536240	1	True				
ANR	2536311	RelationalExpression	mb_x < ctx -> m . mb_width		2536240	0		<			
ANR	2536312	Identifier	mb_x		2536240	0					
ANR	2536313	MemberAccess	ctx -> m . mb_width		2536240	1					
ANR	2536314	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536315	Identifier	ctx		2536240	0					
ANR	2536316	Identifier	m		2536240	1					
ANR	2536317	Identifier	mb_width		2536240	1					
ANR	2536318	Expression	"++ mb_x , pix += 16"	15:47:373:389	2536240	2	True				
ANR	2536319	UnaryExpression	++ mb_x		2536240	0					
ANR	2536320	IncDec	++		2536240	0					
ANR	2536321	Identifier	mb_x		2536240	1					
ANR	2536322	AssignmentExpression	pix += 16		2536240	1		+=			
ANR	2536323	Identifier	pix		2536240	0					
ANR	2536324	PrimaryExpression	16		2536240	1					
ANR	2536325	CompoundStatement		19:12:439:530	2536240	3					
ANR	2536326	IdentifierDeclStatement	unsigned mb = mb_y * ctx -> m . mb_width + mb_x ;	17:12:407:451	2536240	0	True				
ANR	2536327	IdentifierDecl	mb = mb_y * ctx -> m . mb_width + mb_x		2536240	0					
ANR	2536328	IdentifierDeclType	unsigned		2536240	0					
ANR	2536329	Identifier	mb		2536240	1					
ANR	2536330	AssignmentExpression	mb = mb_y * ctx -> m . mb_width + mb_x		2536240	2		=			
ANR	2536331	Identifier	mb		2536240	0					
ANR	2536332	AdditiveExpression	mb_y * ctx -> m . mb_width + mb_x		2536240	1		+			
ANR	2536333	MultiplicativeExpression	mb_y * ctx -> m . mb_width		2536240	0		*			
ANR	2536334	Identifier	mb_y		2536240	0					
ANR	2536335	MemberAccess	ctx -> m . mb_width		2536240	1					
ANR	2536336	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536337	Identifier	ctx		2536240	0					
ANR	2536338	Identifier	m		2536240	1					
ANR	2536339	Identifier	mb_width		2536240	1					
ANR	2536340	Identifier	mb_x		2536240	1					
ANR	2536341	IdentifierDeclStatement	"int sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize ) ;"	19:12:466:516	2536240	1	True				
ANR	2536342	IdentifierDecl	"sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536240	0					
ANR	2536343	IdentifierDeclType	int		2536240	0					
ANR	2536344	Identifier	sum		2536240	1					
ANR	2536345	AssignmentExpression	"sum = ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536240	2		=			
ANR	2536346	Identifier	sum		2536240	0					
ANR	2536347	CallExpression	"ctx -> m . dsp . pix_sum ( pix , ctx -> m . linesize )"		2536240	1					
ANR	2536348	Callee	ctx -> m . dsp . pix_sum		2536240	0					
ANR	2536349	MemberAccess	ctx -> m . dsp . pix_sum		2536240	0					
ANR	2536350	MemberAccess	ctx -> m . dsp		2536240	0					
ANR	2536351	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536352	Identifier	ctx		2536240	0					
ANR	2536353	Identifier	m		2536240	1					
ANR	2536354	Identifier	dsp		2536240	1					
ANR	2536355	Identifier	pix_sum		2536240	1					
ANR	2536356	ArgumentList	pix		2536240	1					
ANR	2536357	Argument	pix		2536240	0					
ANR	2536358	Identifier	pix		2536240	0					
ANR	2536359	Argument	ctx -> m . linesize		2536240	1					
ANR	2536360	MemberAccess	ctx -> m . linesize		2536240	0					
ANR	2536361	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536362	Identifier	ctx		2536240	0					
ANR	2536363	Identifier	m		2536240	1					
ANR	2536364	Identifier	linesize		2536240	1					
ANR	2536365	IdentifierDeclStatement	"int varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8 ;"	21:12:531:622	2536240	2	True				
ANR	2536366	IdentifierDecl	"varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536240	0					
ANR	2536367	IdentifierDeclType	int		2536240	0					
ANR	2536368	Identifier	varc		2536240	1					
ANR	2536369	AssignmentExpression	"varc = ( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536240	2		=			
ANR	2536370	Identifier	varc		2536240	0					
ANR	2536371	ShiftExpression	"( ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128 ) >> 8"		2536240	1		>>			
ANR	2536372	AdditiveExpression	"ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128"		2536240	0		-			
ANR	2536373	CallExpression	"ctx -> m . dsp . pix_norm1 ( pix , ctx -> m . linesize )"		2536240	0					
ANR	2536374	Callee	ctx -> m . dsp . pix_norm1		2536240	0					
ANR	2536375	MemberAccess	ctx -> m . dsp . pix_norm1		2536240	0					
ANR	2536376	MemberAccess	ctx -> m . dsp		2536240	0					
ANR	2536377	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536378	Identifier	ctx		2536240	0					
ANR	2536379	Identifier	m		2536240	1					
ANR	2536380	Identifier	dsp		2536240	1					
ANR	2536381	Identifier	pix_norm1		2536240	1					
ANR	2536382	ArgumentList	pix		2536240	1					
ANR	2536383	Argument	pix		2536240	0					
ANR	2536384	Identifier	pix		2536240	0					
ANR	2536385	Argument	ctx -> m . linesize		2536240	1					
ANR	2536386	MemberAccess	ctx -> m . linesize		2536240	0					
ANR	2536387	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536388	Identifier	ctx		2536240	0					
ANR	2536389	Identifier	m		2536240	1					
ANR	2536390	Identifier	linesize		2536240	1					
ANR	2536391	AdditiveExpression	( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 128		2536240	1		+			
ANR	2536392	ShiftExpression	( ( unsigned ) ( sum * sum ) ) >> 8		2536240	0		>>			
ANR	2536393	CastExpression	( unsigned ) ( sum * sum )		2536240	0					
ANR	2536394	CastTarget	unsigned		2536240	0					
ANR	2536395	MultiplicativeExpression	sum * sum		2536240	1		*			
ANR	2536396	Identifier	sum		2536240	0					
ANR	2536397	Identifier	sum		2536240	1					
ANR	2536398	PrimaryExpression	8		2536240	1					
ANR	2536399	PrimaryExpression	128		2536240	1					
ANR	2536400	PrimaryExpression	8		2536240	1					
ANR	2536401	ExpressionStatement	ctx -> mb_cmp [ mb ] . value = varc	23:12:637:665	2536240	3	True				
ANR	2536402	AssignmentExpression	ctx -> mb_cmp [ mb ] . value = varc		2536240	0		=			
ANR	2536403	MemberAccess	ctx -> mb_cmp [ mb ] . value		2536240	0					
ANR	2536404	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536240	0					
ANR	2536405	PtrMemberAccess	ctx -> mb_cmp		2536240	0					
ANR	2536406	Identifier	ctx		2536240	0					
ANR	2536407	Identifier	mb_cmp		2536240	1					
ANR	2536408	Identifier	mb		2536240	1					
ANR	2536409	Identifier	value		2536240	1					
ANR	2536410	Identifier	varc		2536240	1					
ANR	2536411	ExpressionStatement	ctx -> mb_cmp [ mb ] . mb = mb	25:12:680:703	2536240	4	True				
ANR	2536412	AssignmentExpression	ctx -> mb_cmp [ mb ] . mb = mb		2536240	0		=			
ANR	2536413	MemberAccess	ctx -> mb_cmp [ mb ] . mb		2536240	0					
ANR	2536414	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536240	0					
ANR	2536415	PtrMemberAccess	ctx -> mb_cmp		2536240	0					
ANR	2536416	Identifier	ctx		2536240	0					
ANR	2536417	Identifier	mb_cmp		2536240	1					
ANR	2536418	Identifier	mb		2536240	1					
ANR	2536419	Identifier	mb		2536240	1					
ANR	2536420	Identifier	mb		2536240	1					
ANR	2536421	ElseStatement	else		2536240	0					
ANR	2536422	CompoundStatement		29:8:657:698	2536240	0					
ANR	2536423	IdentifierDeclStatement	int const linesize = ctx -> m . linesize >> 1 ;	31:8:749:790	2536240	0	True				
ANR	2536424	IdentifierDecl	linesize = ctx -> m . linesize >> 1		2536240	0					
ANR	2536425	IdentifierDeclType	int const		2536240	0					
ANR	2536426	Identifier	linesize		2536240	1					
ANR	2536427	AssignmentExpression	linesize = ctx -> m . linesize >> 1		2536240	2		=			
ANR	2536428	Identifier	linesize		2536240	0					
ANR	2536429	ShiftExpression	ctx -> m . linesize >> 1		2536240	1		>>			
ANR	2536430	MemberAccess	ctx -> m . linesize		2536240	0					
ANR	2536431	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536432	Identifier	ctx		2536240	0					
ANR	2536433	Identifier	m		2536240	1					
ANR	2536434	Identifier	linesize		2536240	1					
ANR	2536435	PrimaryExpression	1		2536240	1					
ANR	2536436	ForStatement	for ( mb_x = 0 ; mb_x < ctx -> m . mb_width ; ++ mb_x )		2536240	1					
ANR	2536437	ForInit	mb_x = 0 ;	33:13:806:814	2536240	0	True				
ANR	2536438	AssignmentExpression	mb_x = 0		2536240	0		=			
ANR	2536439	Identifier	mb_x		2536240	0					
ANR	2536440	PrimaryExpression	0		2536240	1					
ANR	2536441	Condition	mb_x < ctx -> m . mb_width	33:23:816:837	2536240	1	True				
ANR	2536442	RelationalExpression	mb_x < ctx -> m . mb_width		2536240	0		<			
ANR	2536443	Identifier	mb_x		2536240	0					
ANR	2536444	MemberAccess	ctx -> m . mb_width		2536240	1					
ANR	2536445	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536446	Identifier	ctx		2536240	0					
ANR	2536447	Identifier	m		2536240	1					
ANR	2536448	Identifier	mb_width		2536240	1					
ANR	2536449	UnaryExpression	++ mb_x	33:47:840:845	2536240	2	True				
ANR	2536450	IncDec	++		2536240	0					
ANR	2536451	Identifier	mb_x		2536240	1					
ANR	2536452	CompoundStatement		41:12:989:1005	2536240	3					
ANR	2536453	IdentifierDeclStatement	uint16_t * pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 ) ;	35:12:863:953	2536240	0	True				
ANR	2536454	IdentifierDecl	* pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536240	0					
ANR	2536455	IdentifierDeclType	uint16_t *		2536240	0					
ANR	2536456	Identifier	pix		2536240	1					
ANR	2536457	AssignmentExpression	* pix = ( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536240	2		=			
ANR	2536458	Identifier	pix		2536240	0					
ANR	2536459	AdditiveExpression	( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ] + ( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536240	1		+			
ANR	2536460	CastExpression	( uint16_t * ) ctx -> thread [ 0 ] -> src [ 0 ]		2536240	0					
ANR	2536461	CastTarget	uint16_t *		2536240	0					
ANR	2536462	ArrayIndexing	ctx -> thread [ 0 ] -> src [ 0 ]		2536240	1					
ANR	2536463	PtrMemberAccess	ctx -> thread [ 0 ] -> src		2536240	0					
ANR	2536464	ArrayIndexing	ctx -> thread [ 0 ]		2536240	0					
ANR	2536465	PtrMemberAccess	ctx -> thread		2536240	0					
ANR	2536466	Identifier	ctx		2536240	0					
ANR	2536467	Identifier	thread		2536240	1					
ANR	2536468	PrimaryExpression	0		2536240	1					
ANR	2536469	Identifier	src		2536240	1					
ANR	2536470	PrimaryExpression	0		2536240	1					
ANR	2536471	AdditiveExpression	( ( mb_y << 4 ) * linesize ) + ( mb_x << 4 )		2536240	1		+			
ANR	2536472	MultiplicativeExpression	( mb_y << 4 ) * linesize		2536240	0		*			
ANR	2536473	ShiftExpression	mb_y << 4		2536240	0		<<			
ANR	2536474	Identifier	mb_y		2536240	0					
ANR	2536475	PrimaryExpression	4		2536240	1					
ANR	2536476	Identifier	linesize		2536240	1					
ANR	2536477	ShiftExpression	mb_x << 4		2536240	1		<<			
ANR	2536478	Identifier	mb_x		2536240	0					
ANR	2536479	PrimaryExpression	4		2536240	1					
ANR	2536480	IdentifierDeclStatement	unsigned mb = mb_y * ctx -> m . mb_width + mb_x ;	37:12:968:1012	2536240	1	True				
ANR	2536481	IdentifierDecl	mb = mb_y * ctx -> m . mb_width + mb_x		2536240	0					
ANR	2536482	IdentifierDeclType	unsigned		2536240	0					
ANR	2536483	Identifier	mb		2536240	1					
ANR	2536484	AssignmentExpression	mb = mb_y * ctx -> m . mb_width + mb_x		2536240	2		=			
ANR	2536485	Identifier	mb		2536240	0					
ANR	2536486	AdditiveExpression	mb_y * ctx -> m . mb_width + mb_x		2536240	1		+			
ANR	2536487	MultiplicativeExpression	mb_y * ctx -> m . mb_width		2536240	0		*			
ANR	2536488	Identifier	mb_y		2536240	0					
ANR	2536489	MemberAccess	ctx -> m . mb_width		2536240	1					
ANR	2536490	PtrMemberAccess	ctx -> m		2536240	0					
ANR	2536491	Identifier	ctx		2536240	0					
ANR	2536492	Identifier	m		2536240	1					
ANR	2536493	Identifier	mb_width		2536240	1					
ANR	2536494	Identifier	mb_x		2536240	1					
ANR	2536495	IdentifierDeclStatement	int sum = 0 ;	39:12:1027:1038	2536240	2	True				
ANR	2536496	IdentifierDecl	sum = 0		2536240	0					
ANR	2536497	IdentifierDeclType	int		2536240	0					
ANR	2536498	Identifier	sum		2536240	1					
ANR	2536499	AssignmentExpression	sum = 0		2536240	2		=			
ANR	2536500	Identifier	sum		2536240	0					
ANR	2536501	PrimaryExpression	0		2536240	1					
ANR	2536502	IdentifierDeclStatement	int sqsum = 0 ;	41:12:1053:1066	2536240	3	True				
ANR	2536503	IdentifierDecl	sqsum = 0		2536240	0					
ANR	2536504	IdentifierDeclType	int		2536240	0					
ANR	2536505	Identifier	sqsum		2536240	1					
ANR	2536506	AssignmentExpression	sqsum = 0		2536240	2		=			
ANR	2536507	Identifier	sqsum		2536240	0					
ANR	2536508	PrimaryExpression	0		2536240	1					
ANR	2536509	IdentifierDeclStatement	"int mean , sqmean ;"	43:12:1081:1097	2536240	4	True				
ANR	2536510	IdentifierDecl	mean		2536240	0					
ANR	2536511	IdentifierDeclType	int		2536240	0					
ANR	2536512	Identifier	mean		2536240	1					
ANR	2536513	IdentifierDecl	sqmean		2536240	1					
ANR	2536514	IdentifierDeclType	int		2536240	0					
ANR	2536515	Identifier	sqmean		2536240	1					
ANR	2536516	ForStatement	for ( int i = 0 ; i < 16 ; ++ i )		2536240	5					
ANR	2536517	ForInit	int i = 0 ;	47:17:1196:1205	2536240	0	True				
ANR	2536518	IdentifierDeclStatement	int i = 0 ;		2536240	0					
ANR	2536519	IdentifierDecl	i = 0		2536240	0					
ANR	2536520	IdentifierDeclType	int		2536240	0					
ANR	2536521	Identifier	i		2536240	1					
ANR	2536522	AssignmentExpression	i = 0		2536240	2		=			
ANR	2536523	Identifier	i		2536240	0					
ANR	2536524	PrimaryExpression	0		2536240	1					
ANR	2536525	Condition	i < 16	47:28:1207:1212	2536240	1	True				
ANR	2536526	RelationalExpression	i < 16		2536240	0		<			
ANR	2536527	Identifier	i		2536240	0					
ANR	2536528	PrimaryExpression	16		2536240	1					
ANR	2536529	UnaryExpression	++ i	47:36:1215:1217	2536240	2	True				
ANR	2536530	IncDec	++		2536240	0					
ANR	2536531	Identifier	i		2536240	1					
ANR	2536532	CompoundStatement		45:41:1128:1128	2536240	3					
ANR	2536533	ForStatement	for ( int j = 0 ; j < 16 ; ++ j )		2536240	0					
ANR	2536534	ForInit	int j = 0 ;	49:21:1244:1253	2536240	0	True				
ANR	2536535	IdentifierDeclStatement	int j = 0 ;		2536240	0					
ANR	2536536	IdentifierDecl	j = 0		2536240	0					
ANR	2536537	IdentifierDeclType	int		2536240	0					
ANR	2536538	Identifier	j		2536240	1					
ANR	2536539	AssignmentExpression	j = 0		2536240	2		=			
ANR	2536540	Identifier	j		2536240	0					
ANR	2536541	PrimaryExpression	0		2536240	1					
ANR	2536542	Condition	j < 16	49:32:1255:1260	2536240	1	True				
ANR	2536543	RelationalExpression	j < 16		2536240	0		<			
ANR	2536544	Identifier	j		2536240	0					
ANR	2536545	PrimaryExpression	16		2536240	1					
ANR	2536546	UnaryExpression	++ j	49:40:1263:1265	2536240	2	True				
ANR	2536547	IncDec	++		2536240	0					
ANR	2536548	Identifier	j		2536240	1					
ANR	2536549	CompoundStatement		51:20:1260:1300	2536240	3					
ANR	2536550	IdentifierDeclStatement	int const sample = ( unsigned ) pix [ j ] >> 6 ;	53:20:1352:1392	2536240	0	True				
ANR	2536551	IdentifierDecl	sample = ( unsigned ) pix [ j ] >> 6		2536240	0					
ANR	2536552	IdentifierDeclType	int const		2536240	0					
ANR	2536553	Identifier	sample		2536240	1					
ANR	2536554	AssignmentExpression	sample = ( unsigned ) pix [ j ] >> 6		2536240	2		=			
ANR	2536555	Identifier	sample		2536240	0					
ANR	2536556	ShiftExpression	( unsigned ) pix [ j ] >> 6		2536240	1		>>			
ANR	2536557	CastExpression	( unsigned ) pix [ j ]		2536240	0					
ANR	2536558	CastTarget	unsigned		2536240	0					
ANR	2536559	ArrayIndexing	pix [ j ]		2536240	1					
ANR	2536560	Identifier	pix		2536240	0					
ANR	2536561	Identifier	j		2536240	1					
ANR	2536562	PrimaryExpression	6		2536240	1					
ANR	2536563	ExpressionStatement	sum += sample	55:20:1415:1428	2536240	1	True				
ANR	2536564	AssignmentExpression	sum += sample		2536240	0		+=			
ANR	2536565	Identifier	sum		2536240	0					
ANR	2536566	Identifier	sample		2536240	1					
ANR	2536567	ExpressionStatement	sqsum += sample * sample	57:20:1451:1475	2536240	2	True				
ANR	2536568	AssignmentExpression	sqsum += sample * sample		2536240	0		+=			
ANR	2536569	Identifier	sqsum		2536240	0					
ANR	2536570	MultiplicativeExpression	sample * sample		2536240	1		*			
ANR	2536571	Identifier	sample		2536240	0					
ANR	2536572	Identifier	sample		2536240	1					
ANR	2536573	ExpressionStatement	pix += linesize	63:16:1594:1609	2536240	1	True				
ANR	2536574	AssignmentExpression	pix += linesize		2536240	0		+=			
ANR	2536575	Identifier	pix		2536240	0					
ANR	2536576	Identifier	linesize		2536240	1					
ANR	2536577	ExpressionStatement	mean = sum >> 8	67:12:1639:1654	2536240	6	True				
ANR	2536578	AssignmentExpression	mean = sum >> 8		2536240	0		=			
ANR	2536579	Identifier	mean		2536240	0					
ANR	2536580	ShiftExpression	sum >> 8		2536240	1		>>			
ANR	2536581	Identifier	sum		2536240	0					
ANR	2536582	PrimaryExpression	8		2536240	1					
ANR	2536583	ExpressionStatement	sqmean = sqsum >> 8	69:12:1685:1704	2536240	7	True				
ANR	2536584	AssignmentExpression	sqmean = sqsum >> 8		2536240	0		=			
ANR	2536585	Identifier	sqmean		2536240	0					
ANR	2536586	ShiftExpression	sqsum >> 8		2536240	1		>>			
ANR	2536587	Identifier	sqsum		2536240	0					
ANR	2536588	PrimaryExpression	8		2536240	1					
ANR	2536589	ExpressionStatement	ctx -> mb_cmp [ mb ] . value = sqmean - mean * mean	71:12:1719:1763	2536240	8	True				
ANR	2536590	AssignmentExpression	ctx -> mb_cmp [ mb ] . value = sqmean - mean * mean		2536240	0		=			
ANR	2536591	MemberAccess	ctx -> mb_cmp [ mb ] . value		2536240	0					
ANR	2536592	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536240	0					
ANR	2536593	PtrMemberAccess	ctx -> mb_cmp		2536240	0					
ANR	2536594	Identifier	ctx		2536240	0					
ANR	2536595	Identifier	mb_cmp		2536240	1					
ANR	2536596	Identifier	mb		2536240	1					
ANR	2536597	Identifier	value		2536240	1					
ANR	2536598	AdditiveExpression	sqmean - mean * mean		2536240	1		-			
ANR	2536599	Identifier	sqmean		2536240	0					
ANR	2536600	MultiplicativeExpression	mean * mean		2536240	1		*			
ANR	2536601	Identifier	mean		2536240	0					
ANR	2536602	Identifier	mean		2536240	1					
ANR	2536603	ExpressionStatement	ctx -> mb_cmp [ mb ] . mb = mb	73:12:1778:1801	2536240	9	True				
ANR	2536604	AssignmentExpression	ctx -> mb_cmp [ mb ] . mb = mb		2536240	0		=			
ANR	2536605	MemberAccess	ctx -> mb_cmp [ mb ] . mb		2536240	0					
ANR	2536606	ArrayIndexing	ctx -> mb_cmp [ mb ]		2536240	0					
ANR	2536607	PtrMemberAccess	ctx -> mb_cmp		2536240	0					
ANR	2536608	Identifier	ctx		2536240	0					
ANR	2536609	Identifier	mb_cmp		2536240	1					
ANR	2536610	Identifier	mb		2536240	1					
ANR	2536611	Identifier	mb		2536240	1					
ANR	2536612	Identifier	mb		2536240	1					
ANR	2536613	ReturnStatement	return 0 ;	79:4:1826:1834	2536240	4	True				
ANR	2536614	PrimaryExpression	0		2536240	0					
ANR	2536615	ReturnType	static int		2536240	1					
ANR	2536616	Identifier	dnxhd_mb_var_thread		2536240	2					
ANR	2536617	ParameterList	"AVCodecContext * avctx , void * arg , int jobnr , int threadnr"		2536240	3					
ANR	2536618	Parameter	AVCodecContext * avctx	1:31:31:51	2536240	0	True				
ANR	2536619	ParameterType	AVCodecContext *		2536240	0					
ANR	2536620	Identifier	avctx		2536240	1					
ANR	2536621	Parameter	void * arg	1:54:54:62	2536240	1	True				
ANR	2536622	ParameterType	void *		2536240	0					
ANR	2536623	Identifier	arg		2536240	1					
ANR	2536624	Parameter	int jobnr	1:65:65:73	2536240	2	True				
ANR	2536625	ParameterType	int		2536240	0					
ANR	2536626	Identifier	jobnr		2536240	1					
ANR	2536627	Parameter	int threadnr	1:76:76:87	2536240	3	True				
ANR	2536628	ParameterType	int		2536240	0					
ANR	2536629	Identifier	threadnr		2536240	1					
ANR	2536630	CFGEntryNode	ENTRY		2536240		True				
ANR	2536631	CFGExitNode	EXIT		2536240		True				
ANR	2536632	Symbol	ctx -> mb_cmp		2536240						
ANR	2536633	Symbol	ctx -> mb_cmp [ mb ] . value		2536240						
ANR	2536634	Symbol	jobnr		2536240						
ANR	2536635	Symbol	* pix		2536240						
ANR	2536636	Symbol	sum		2536240						
ANR	2536637	Symbol	sqmean		2536240						
ANR	2536638	Symbol	ctx -> mb_cmp [ mb ] . mb		2536240						
ANR	2536639	Symbol	ctx -> cid_table		2536240						
ANR	2536640	Symbol	ctx -> m		2536240						
ANR	2536641	Symbol	* ctx -> mb_cmp		2536240						
ANR	2536642	Symbol	linesize		2536240						
ANR	2536643	Symbol	ctx -> cid_table -> bit_depth		2536240						
ANR	2536644	Symbol	mb		2536240						
ANR	2536645	Symbol	arg		2536240						
ANR	2536646	Symbol	* ctx -> thread		2536240						
ANR	2536647	Symbol	* mb		2536240						
ANR	2536648	Symbol	threadnr		2536240						
ANR	2536649	Symbol	avctx		2536240						
ANR	2536650	Symbol	* * * * ctx		2536240						
ANR	2536651	Symbol	ctx -> m . dsp		2536240						
ANR	2536652	Symbol	pix		2536240						
ANR	2536653	Symbol	ctx -> m . dsp . pix_norm1		2536240						
ANR	2536654	Symbol	sqsum		2536240						
ANR	2536655	Symbol	ctx -> thread		2536240						
ANR	2536656	Symbol	* * * ctx		2536240						
ANR	2536657	Symbol	ctx		2536240						
ANR	2536658	Symbol	i		2536240						
ANR	2536659	Symbol	* ctx -> thread [ 0 ] -> src		2536240						
ANR	2536660	Symbol	j		2536240						
ANR	2536661	Symbol	varc		2536240						
ANR	2536662	Symbol	avctx -> priv_data		2536240						
ANR	2536663	Symbol	* * ctx -> thread		2536240						
ANR	2536664	Symbol	ctx -> m . mb_width		2536240						
ANR	2536665	Symbol	sample		2536240						
ANR	2536666	Symbol	* ctx		2536240						
ANR	2536667	Symbol	ctx -> thread [ 0 ] -> src		2536240						
ANR	2536668	Symbol	* avctx		2536240						
ANR	2536669	Symbol	* threadnr		2536240						
ANR	2536670	Symbol	ctx -> m . linesize		2536240						
ANR	2536671	Symbol	* j		2536240						
ANR	2536672	Symbol	* * * ctx -> thread		2536240						
ANR	2536673	Symbol	mean		2536240						
ANR	2536674	Symbol	* * ctx		2536240						
ANR	2536675	Symbol	mb_y		2536240						
ANR	2536676	Symbol	mb_x		2536240						
ANR	2536677	Symbol	* ctx -> cid_table		2536240						
ANR	2536678	Symbol	ctx -> m . dsp . pix_sum		2536240						
