command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9166595	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdk_create_01_1.c								
ANR	9166596	Function	vmdk_create	1:0:0:8710							
ANR	9166597	FunctionDef	"vmdk_create (const char * filename , QemuOpts * opts , Error * * errp)"		9166596	0					
ANR	9166598	CompoundStatement		3:0:76:8710	9166596	0					
ANR	9166599	IdentifierDeclStatement	int idx = 0 ;	5:4:83:94	9166596	0	True				
ANR	9166600	IdentifierDecl	idx = 0		9166596	0					
ANR	9166601	IdentifierDeclType	int		9166596	0					
ANR	9166602	Identifier	idx		9166596	1					
ANR	9166603	AssignmentExpression	idx = 0		9166596	2		=			
ANR	9166604	Identifier	idx		9166596	0					
ANR	9166605	PrimaryExpression	0		9166596	1					
ANR	9166606	IdentifierDeclStatement	BlockBackend * new_blk = NULL ;	7:4:101:129	9166596	1	True				
ANR	9166607	IdentifierDecl	* new_blk = NULL		9166596	0					
ANR	9166608	IdentifierDeclType	BlockBackend *		9166596	0					
ANR	9166609	Identifier	new_blk		9166596	1					
ANR	9166610	AssignmentExpression	* new_blk = NULL		9166596	2		=			
ANR	9166611	Identifier	NULL		9166596	0					
ANR	9166612	Identifier	NULL		9166596	1					
ANR	9166613	IdentifierDeclStatement	Error * local_err = NULL ;	9:4:136:159	9166596	2	True				
ANR	9166614	IdentifierDecl	* local_err = NULL		9166596	0					
ANR	9166615	IdentifierDeclType	Error *		9166596	0					
ANR	9166616	Identifier	local_err		9166596	1					
ANR	9166617	AssignmentExpression	* local_err = NULL		9166596	2		=			
ANR	9166618	Identifier	NULL		9166596	0					
ANR	9166619	Identifier	NULL		9166596	1					
ANR	9166620	IdentifierDeclStatement	char * desc = NULL ;	11:4:166:183	9166596	3	True				
ANR	9166621	IdentifierDecl	* desc = NULL		9166596	0					
ANR	9166622	IdentifierDeclType	char *		9166596	0					
ANR	9166623	Identifier	desc		9166596	1					
ANR	9166624	AssignmentExpression	* desc = NULL		9166596	2		=			
ANR	9166625	Identifier	NULL		9166596	0					
ANR	9166626	Identifier	NULL		9166596	1					
ANR	9166627	IdentifierDeclStatement	"int64_t total_size = 0 , filesize ;"	13:4:190:222	9166596	4	True				
ANR	9166628	IdentifierDecl	total_size = 0		9166596	0					
ANR	9166629	IdentifierDeclType	int64_t		9166596	0					
ANR	9166630	Identifier	total_size		9166596	1					
ANR	9166631	AssignmentExpression	total_size = 0		9166596	2		=			
ANR	9166632	Identifier	total_size		9166596	0					
ANR	9166633	PrimaryExpression	0		9166596	1					
ANR	9166634	IdentifierDecl	filesize		9166596	1					
ANR	9166635	IdentifierDeclType	int64_t		9166596	0					
ANR	9166636	Identifier	filesize		9166596	1					
ANR	9166637	IdentifierDeclStatement	char * adapter_type = NULL ;	15:4:229:254	9166596	5	True				
ANR	9166638	IdentifierDecl	* adapter_type = NULL		9166596	0					
ANR	9166639	IdentifierDeclType	char *		9166596	0					
ANR	9166640	Identifier	adapter_type		9166596	1					
ANR	9166641	AssignmentExpression	* adapter_type = NULL		9166596	2		=			
ANR	9166642	Identifier	NULL		9166596	0					
ANR	9166643	Identifier	NULL		9166596	1					
ANR	9166644	IdentifierDeclStatement	char * backing_file = NULL ;	17:4:261:286	9166596	6	True				
ANR	9166645	IdentifierDecl	* backing_file = NULL		9166596	0					
ANR	9166646	IdentifierDeclType	char *		9166596	0					
ANR	9166647	Identifier	backing_file		9166596	1					
ANR	9166648	AssignmentExpression	* backing_file = NULL		9166596	2		=			
ANR	9166649	Identifier	NULL		9166596	0					
ANR	9166650	Identifier	NULL		9166596	1					
ANR	9166651	IdentifierDeclStatement	char * hw_version = NULL ;	19:4:293:316	9166596	7	True				
ANR	9166652	IdentifierDecl	* hw_version = NULL		9166596	0					
ANR	9166653	IdentifierDeclType	char *		9166596	0					
ANR	9166654	Identifier	hw_version		9166596	1					
ANR	9166655	AssignmentExpression	* hw_version = NULL		9166596	2		=			
ANR	9166656	Identifier	NULL		9166596	0					
ANR	9166657	Identifier	NULL		9166596	1					
ANR	9166658	IdentifierDeclStatement	char * fmt = NULL ;	21:4:323:339	9166596	8	True				
ANR	9166659	IdentifierDecl	* fmt = NULL		9166596	0					
ANR	9166660	IdentifierDeclType	char *		9166596	0					
ANR	9166661	Identifier	fmt		9166596	1					
ANR	9166662	AssignmentExpression	* fmt = NULL		9166596	2		=			
ANR	9166663	Identifier	NULL		9166596	0					
ANR	9166664	Identifier	NULL		9166596	1					
ANR	9166665	IdentifierDeclStatement	int ret = 0 ;	23:4:346:357	9166596	9	True				
ANR	9166666	IdentifierDecl	ret = 0		9166596	0					
ANR	9166667	IdentifierDeclType	int		9166596	0					
ANR	9166668	Identifier	ret		9166596	1					
ANR	9166669	AssignmentExpression	ret = 0		9166596	2		=			
ANR	9166670	Identifier	ret		9166596	0					
ANR	9166671	PrimaryExpression	0		9166596	1					
ANR	9166672	IdentifierDeclStatement	"bool flat , split , compress ;"	25:4:364:390	9166596	10	True				
ANR	9166673	IdentifierDecl	flat		9166596	0					
ANR	9166674	IdentifierDeclType	bool		9166596	0					
ANR	9166675	Identifier	flat		9166596	1					
ANR	9166676	IdentifierDecl	split		9166596	1					
ANR	9166677	IdentifierDeclType	bool		9166596	0					
ANR	9166678	Identifier	split		9166596	1					
ANR	9166679	IdentifierDecl	compress		9166596	2					
ANR	9166680	IdentifierDeclType	bool		9166596	0					
ANR	9166681	Identifier	compress		9166596	1					
ANR	9166682	IdentifierDeclStatement	GString * ext_desc_lines ;	27:4:397:420	9166596	11	True				
ANR	9166683	IdentifierDecl	* ext_desc_lines		9166596	0					
ANR	9166684	IdentifierDeclType	GString *		9166596	0					
ANR	9166685	Identifier	ext_desc_lines		9166596	1					
ANR	9166686	IdentifierDeclStatement	char * path = g_malloc0 ( PATH_MAX ) ;	29:4:427:459	9166596	12	True				
ANR	9166687	IdentifierDecl	* path = g_malloc0 ( PATH_MAX )		9166596	0					
ANR	9166688	IdentifierDeclType	char *		9166596	0					
ANR	9166689	Identifier	path		9166596	1					
ANR	9166690	AssignmentExpression	* path = g_malloc0 ( PATH_MAX )		9166596	2		=			
ANR	9166691	Identifier	path		9166596	0					
ANR	9166692	CallExpression	g_malloc0 ( PATH_MAX )		9166596	1					
ANR	9166693	Callee	g_malloc0		9166596	0					
ANR	9166694	Identifier	g_malloc0		9166596	0					
ANR	9166695	ArgumentList	PATH_MAX		9166596	1					
ANR	9166696	Argument	PATH_MAX		9166596	0					
ANR	9166697	Identifier	PATH_MAX		9166596	0					
ANR	9166698	IdentifierDeclStatement	char * prefix = g_malloc0 ( PATH_MAX ) ;	31:4:466:500	9166596	13	True				
ANR	9166699	IdentifierDecl	* prefix = g_malloc0 ( PATH_MAX )		9166596	0					
ANR	9166700	IdentifierDeclType	char *		9166596	0					
ANR	9166701	Identifier	prefix		9166596	1					
ANR	9166702	AssignmentExpression	* prefix = g_malloc0 ( PATH_MAX )		9166596	2		=			
ANR	9166703	Identifier	prefix		9166596	0					
ANR	9166704	CallExpression	g_malloc0 ( PATH_MAX )		9166596	1					
ANR	9166705	Callee	g_malloc0		9166596	0					
ANR	9166706	Identifier	g_malloc0		9166596	0					
ANR	9166707	ArgumentList	PATH_MAX		9166596	1					
ANR	9166708	Argument	PATH_MAX		9166596	0					
ANR	9166709	Identifier	PATH_MAX		9166596	0					
ANR	9166710	IdentifierDeclStatement	char * postfix = g_malloc0 ( PATH_MAX ) ;	33:4:507:542	9166596	14	True				
ANR	9166711	IdentifierDecl	* postfix = g_malloc0 ( PATH_MAX )		9166596	0					
ANR	9166712	IdentifierDeclType	char *		9166596	0					
ANR	9166713	Identifier	postfix		9166596	1					
ANR	9166714	AssignmentExpression	* postfix = g_malloc0 ( PATH_MAX )		9166596	2		=			
ANR	9166715	Identifier	postfix		9166596	0					
ANR	9166716	CallExpression	g_malloc0 ( PATH_MAX )		9166596	1					
ANR	9166717	Callee	g_malloc0		9166596	0					
ANR	9166718	Identifier	g_malloc0		9166596	0					
ANR	9166719	ArgumentList	PATH_MAX		9166596	1					
ANR	9166720	Argument	PATH_MAX		9166596	0					
ANR	9166721	Identifier	PATH_MAX		9166596	0					
ANR	9166722	IdentifierDeclStatement	char * desc_line = g_malloc0 ( BUF_SIZE ) ;	35:4:549:586	9166596	15	True				
ANR	9166723	IdentifierDecl	* desc_line = g_malloc0 ( BUF_SIZE )		9166596	0					
ANR	9166724	IdentifierDeclType	char *		9166596	0					
ANR	9166725	Identifier	desc_line		9166596	1					
ANR	9166726	AssignmentExpression	* desc_line = g_malloc0 ( BUF_SIZE )		9166596	2		=			
ANR	9166727	Identifier	desc_line		9166596	0					
ANR	9166728	CallExpression	g_malloc0 ( BUF_SIZE )		9166596	1					
ANR	9166729	Callee	g_malloc0		9166596	0					
ANR	9166730	Identifier	g_malloc0		9166596	0					
ANR	9166731	ArgumentList	BUF_SIZE		9166596	1					
ANR	9166732	Argument	BUF_SIZE		9166596	0					
ANR	9166733	Identifier	BUF_SIZE		9166596	0					
ANR	9166734	IdentifierDeclStatement	char * ext_filename = g_malloc0 ( PATH_MAX ) ;	37:4:593:633	9166596	16	True				
ANR	9166735	IdentifierDecl	* ext_filename = g_malloc0 ( PATH_MAX )		9166596	0					
ANR	9166736	IdentifierDeclType	char *		9166596	0					
ANR	9166737	Identifier	ext_filename		9166596	1					
ANR	9166738	AssignmentExpression	* ext_filename = g_malloc0 ( PATH_MAX )		9166596	2		=			
ANR	9166739	Identifier	ext_filename		9166596	0					
ANR	9166740	CallExpression	g_malloc0 ( PATH_MAX )		9166596	1					
ANR	9166741	Callee	g_malloc0		9166596	0					
ANR	9166742	Identifier	g_malloc0		9166596	0					
ANR	9166743	ArgumentList	PATH_MAX		9166596	1					
ANR	9166744	Argument	PATH_MAX		9166596	0					
ANR	9166745	Identifier	PATH_MAX		9166596	0					
ANR	9166746	IdentifierDeclStatement	char * desc_filename = g_malloc0 ( PATH_MAX ) ;	39:4:640:681	9166596	17	True				
ANR	9166747	IdentifierDecl	* desc_filename = g_malloc0 ( PATH_MAX )		9166596	0					
ANR	9166748	IdentifierDeclType	char *		9166596	0					
ANR	9166749	Identifier	desc_filename		9166596	1					
ANR	9166750	AssignmentExpression	* desc_filename = g_malloc0 ( PATH_MAX )		9166596	2		=			
ANR	9166751	Identifier	desc_filename		9166596	0					
ANR	9166752	CallExpression	g_malloc0 ( PATH_MAX )		9166596	1					
ANR	9166753	Callee	g_malloc0		9166596	0					
ANR	9166754	Identifier	g_malloc0		9166596	0					
ANR	9166755	ArgumentList	PATH_MAX		9166596	1					
ANR	9166756	Argument	PATH_MAX		9166596	0					
ANR	9166757	Identifier	PATH_MAX		9166596	0					
ANR	9166758	IdentifierDeclStatement	const int64_t split_size = 0x80000000 ;	41:4:688:725	9166596	18	True				
ANR	9166759	IdentifierDecl	split_size = 0x80000000		9166596	0					
ANR	9166760	IdentifierDeclType	const int64_t		9166596	0					
ANR	9166761	Identifier	split_size		9166596	1					
ANR	9166762	AssignmentExpression	split_size = 0x80000000		9166596	2		=			
ANR	9166763	Identifier	split_size		9166596	0					
ANR	9166764	PrimaryExpression	0x80000000		9166596	1					
ANR	9166765	IdentifierDeclStatement	const char * desc_extent_line ;	43:4:768:796	9166596	19	True				
ANR	9166766	IdentifierDecl	* desc_extent_line		9166596	0					
ANR	9166767	IdentifierDeclType	const char *		9166596	0					
ANR	9166768	Identifier	desc_extent_line		9166596	1					
ANR	9166769	IdentifierDeclStatement	char * parent_desc_line = g_malloc0 ( BUF_SIZE ) ;	45:4:803:847	9166596	20	True				
ANR	9166770	IdentifierDecl	* parent_desc_line = g_malloc0 ( BUF_SIZE )		9166596	0					
ANR	9166771	IdentifierDeclType	char *		9166596	0					
ANR	9166772	Identifier	parent_desc_line		9166596	1					
ANR	9166773	AssignmentExpression	* parent_desc_line = g_malloc0 ( BUF_SIZE )		9166596	2		=			
ANR	9166774	Identifier	parent_desc_line		9166596	0					
ANR	9166775	CallExpression	g_malloc0 ( BUF_SIZE )		9166596	1					
ANR	9166776	Callee	g_malloc0		9166596	0					
ANR	9166777	Identifier	g_malloc0		9166596	0					
ANR	9166778	ArgumentList	BUF_SIZE		9166596	1					
ANR	9166779	Argument	BUF_SIZE		9166596	0					
ANR	9166780	Identifier	BUF_SIZE		9166596	0					
ANR	9166781	IdentifierDeclStatement	uint32_t parent_cid = 0xffffffff ;	47:4:854:886	9166596	21	True				
ANR	9166782	IdentifierDecl	parent_cid = 0xffffffff		9166596	0					
ANR	9166783	IdentifierDeclType	uint32_t		9166596	0					
ANR	9166784	Identifier	parent_cid		9166596	1					
ANR	9166785	AssignmentExpression	parent_cid = 0xffffffff		9166596	2		=			
ANR	9166786	Identifier	parent_cid		9166596	0					
ANR	9166787	PrimaryExpression	0xffffffff		9166596	1					
ANR	9166788	IdentifierDeclStatement	uint32_t number_heads = 16 ;	49:4:893:919	9166596	22	True				
ANR	9166789	IdentifierDecl	number_heads = 16		9166596	0					
ANR	9166790	IdentifierDeclType	uint32_t		9166596	0					
ANR	9166791	Identifier	number_heads		9166596	1					
ANR	9166792	AssignmentExpression	number_heads = 16		9166596	2		=			
ANR	9166793	Identifier	number_heads		9166596	0					
ANR	9166794	PrimaryExpression	16		9166596	1					
ANR	9166795	IdentifierDeclStatement	bool zeroed_grain = false ;	51:4:926:951	9166596	23	True				
ANR	9166796	IdentifierDecl	zeroed_grain = false		9166596	0					
ANR	9166797	IdentifierDeclType	bool		9166596	0					
ANR	9166798	Identifier	zeroed_grain		9166596	1					
ANR	9166799	AssignmentExpression	zeroed_grain = false		9166596	2		=			
ANR	9166800	Identifier	false		9166596	0					
ANR	9166801	Identifier	false		9166596	1					
ANR	9166802	IdentifierDeclStatement	"uint32_t desc_offset = 0 , desc_len ;"	53:4:958:992	9166596	24	True				
ANR	9166803	IdentifierDecl	desc_offset = 0		9166596	0					
ANR	9166804	IdentifierDeclType	uint32_t		9166596	0					
ANR	9166805	Identifier	desc_offset		9166596	1					
ANR	9166806	AssignmentExpression	desc_offset = 0		9166596	2		=			
ANR	9166807	Identifier	desc_offset		9166596	0					
ANR	9166808	PrimaryExpression	0		9166596	1					
ANR	9166809	IdentifierDecl	desc_len		9166596	1					
ANR	9166810	IdentifierDeclType	uint32_t		9166596	0					
ANR	9166811	Identifier	desc_len		9166596	1					
ANR	9166812	Statement	const	55:4:999:1003	9166596	25	True				
ANR	9166813	Statement	char	55:10:1005:1008	9166596	26	True				
ANR	9166814	Statement	desc_template	55:15:1010:1022	9166596	27	True				
ANR	9166815	Statement	[	55:28:1023:1023	9166596	28	True				
ANR	9166816	Statement	]	55:29:1024:1024	9166596	29	True				
ANR	9166817	Statement	=	55:31:1026:1026	9166596	30	True				
ANR	9166818	Statement	"""# Disk DescriptorFile\\n"""	57:8:1037:1061	9166596	31	True				
ANR	9166819	Statement	"""version=1\\n"""	59:8:1072:1084	9166596	32	True				
ANR	9166820	Statement	"""CID=%"""	61:8:1095:1101	9166596	33	True				
ANR	9166821	Statement	PRIx32	61:16:1103:1108	9166596	34	True				
ANR	9166822	Statement	"""\\n"""	61:23:1110:1113	9166596	35	True				
ANR	9166823	Statement	"""parentCID=%"""	63:8:1124:1136	9166596	36	True				
ANR	9166824	Statement	PRIx32	63:22:1138:1143	9166596	37	True				
ANR	9166825	Statement	"""\\n"""	63:29:1145:1148	9166596	38	True				
ANR	9166826	Statement	"""createType=\\""%s\\""\\n"""	65:8:1159:1179	9166596	39	True				
ANR	9166827	Statement	"""%s"""	67:8:1190:1193	9166596	40	True				
ANR	9166828	Statement	"""\\n"""	69:8:1204:1207	9166596	41	True				
ANR	9166829	Statement	"""# Extent description\\n"""	71:8:1218:1241	9166596	42	True				
ANR	9166830	Statement	"""%s"""	73:8:1252:1255	9166596	43	True				
ANR	9166831	Statement	"""\\n"""	75:8:1266:1269	9166596	44	True				
ANR	9166832	Statement	"""# The Disk Data Base\\n"""	77:8:1280:1303	9166596	45	True				
ANR	9166833	Statement	"""#DDB\\n"""	79:8:1314:1321	9166596	46	True				
ANR	9166834	Statement	"""\\n"""	81:8:1332:1335	9166596	47	True				
ANR	9166835	Statement	"""ddb.virtualHWVersion = \\""%s\\""\\n"""	83:8:1346:1378	9166596	48	True				
ANR	9166836	Statement	"""ddb.geometry.cylinders = \\""%"""	85:8:1389:1418	9166596	49	True				
ANR	9166837	Statement	PRId64	85:39:1420:1425	9166596	50	True				
ANR	9166838	Statement	"""\\""\\n"""	85:46:1427:1432	9166596	51	True				
ANR	9166839	Statement	"""ddb.geometry.heads = \\""%"""	87:8:1443:1468	9166596	52	True				
ANR	9166840	Statement	PRIu32	87:35:1470:1475	9166596	53	True				
ANR	9166841	Statement	"""\\""\\n"""	87:42:1477:1482	9166596	54	True				
ANR	9166842	Statement	"""ddb.geometry.sectors = \\""63\\""\\n"""	89:8:1493:1525	9166596	55	True				
ANR	9166843	ExpressionStatement	"""ddb.adapterType = \\""%s\\""\\n"""	91:8:1536:1564	9166596	56	True				
ANR	9166844	PrimaryExpression	"""ddb.adapterType = \\""%s\\""\\n"""		9166596	0					
ANR	9166845	ExpressionStatement	ext_desc_lines = g_string_new ( NULL )	95:4:1573:1608	9166596	57	True				
ANR	9166846	AssignmentExpression	ext_desc_lines = g_string_new ( NULL )		9166596	0		=			
ANR	9166847	Identifier	ext_desc_lines		9166596	0					
ANR	9166848	CallExpression	g_string_new ( NULL )		9166596	1					
ANR	9166849	Callee	g_string_new		9166596	0					
ANR	9166850	Identifier	g_string_new		9166596	0					
ANR	9166851	ArgumentList	NULL		9166596	1					
ANR	9166852	Argument	NULL		9166596	0					
ANR	9166853	Identifier	NULL		9166596	0					
ANR	9166854	IfStatement	"if ( filename_decompose ( filename , path , prefix , postfix , PATH_MAX , errp ) )"		9166596	58					
ANR	9166855	Condition	"filename_decompose ( filename , path , prefix , postfix , PATH_MAX , errp )"	99:8:1621:1687	9166596	0	True				
ANR	9166856	CallExpression	"filename_decompose ( filename , path , prefix , postfix , PATH_MAX , errp )"		9166596	0					
ANR	9166857	Callee	filename_decompose		9166596	0					
ANR	9166858	Identifier	filename_decompose		9166596	0					
ANR	9166859	ArgumentList	filename		9166596	1					
ANR	9166860	Argument	filename		9166596	0					
ANR	9166861	Identifier	filename		9166596	0					
ANR	9166862	Argument	path		9166596	1					
ANR	9166863	Identifier	path		9166596	0					
ANR	9166864	Argument	prefix		9166596	2					
ANR	9166865	Identifier	prefix		9166596	0					
ANR	9166866	Argument	postfix		9166596	3					
ANR	9166867	Identifier	postfix		9166596	0					
ANR	9166868	Argument	PATH_MAX		9166596	4					
ANR	9166869	Identifier	PATH_MAX		9166596	0					
ANR	9166870	Argument	errp		9166596	5					
ANR	9166871	Identifier	errp		9166596	0					
ANR	9166872	CompoundStatement		97:77:1613:1613	9166596	1					
ANR	9166873	ExpressionStatement	ret = - EINVAL	101:8:1701:1714	9166596	0	True				
ANR	9166874	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9166875	Identifier	ret		9166596	0					
ANR	9166876	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9166877	UnaryOperator	-		9166596	0					
ANR	9166878	Identifier	EINVAL		9166596	1					
ANR	9166879	GotoStatement	goto exit ;	103:8:1725:1734	9166596	1	True				
ANR	9166880	Identifier	exit		9166596	0					
ANR	9166881	ExpressionStatement	"total_size = ROUND_UP ( qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 ) , BDRV_SECTOR_SIZE )"	109:4:1776:1890	9166596	59	True				
ANR	9166882	AssignmentExpression	"total_size = ROUND_UP ( qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 ) , BDRV_SECTOR_SIZE )"		9166596	0		=			
ANR	9166883	Identifier	total_size		9166596	0					
ANR	9166884	CallExpression	"ROUND_UP ( qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 ) , BDRV_SECTOR_SIZE )"		9166596	1					
ANR	9166885	Callee	ROUND_UP		9166596	0					
ANR	9166886	Identifier	ROUND_UP		9166596	0					
ANR	9166887	ArgumentList	"qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"		9166596	1					
ANR	9166888	Argument	"qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"		9166596	0					
ANR	9166889	CallExpression	"qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"		9166596	0					
ANR	9166890	Callee	qemu_opt_get_size_del		9166596	0					
ANR	9166891	Identifier	qemu_opt_get_size_del		9166596	0					
ANR	9166892	ArgumentList	opts		9166596	1					
ANR	9166893	Argument	opts		9166596	0					
ANR	9166894	Identifier	opts		9166596	0					
ANR	9166895	Argument	BLOCK_OPT_SIZE		9166596	1					
ANR	9166896	Identifier	BLOCK_OPT_SIZE		9166596	0					
ANR	9166897	Argument	0		9166596	2					
ANR	9166898	PrimaryExpression	0		9166596	0					
ANR	9166899	Argument	BDRV_SECTOR_SIZE		9166596	1					
ANR	9166900	Identifier	BDRV_SECTOR_SIZE		9166596	0					
ANR	9166901	ExpressionStatement	"adapter_type = qemu_opt_get_del ( opts , BLOCK_OPT_ADAPTER_TYPE )"	113:4:1897:1958	9166596	60	True				
ANR	9166902	AssignmentExpression	"adapter_type = qemu_opt_get_del ( opts , BLOCK_OPT_ADAPTER_TYPE )"		9166596	0		=			
ANR	9166903	Identifier	adapter_type		9166596	0					
ANR	9166904	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_ADAPTER_TYPE )"		9166596	1					
ANR	9166905	Callee	qemu_opt_get_del		9166596	0					
ANR	9166906	Identifier	qemu_opt_get_del		9166596	0					
ANR	9166907	ArgumentList	opts		9166596	1					
ANR	9166908	Argument	opts		9166596	0					
ANR	9166909	Identifier	opts		9166596	0					
ANR	9166910	Argument	BLOCK_OPT_ADAPTER_TYPE		9166596	1					
ANR	9166911	Identifier	BLOCK_OPT_ADAPTER_TYPE		9166596	0					
ANR	9166912	ExpressionStatement	"backing_file = qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"	115:4:1965:2026	9166596	61	True				
ANR	9166913	AssignmentExpression	"backing_file = qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"		9166596	0		=			
ANR	9166914	Identifier	backing_file		9166596	0					
ANR	9166915	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"		9166596	1					
ANR	9166916	Callee	qemu_opt_get_del		9166596	0					
ANR	9166917	Identifier	qemu_opt_get_del		9166596	0					
ANR	9166918	ArgumentList	opts		9166596	1					
ANR	9166919	Argument	opts		9166596	0					
ANR	9166920	Identifier	opts		9166596	0					
ANR	9166921	Argument	BLOCK_OPT_BACKING_FILE		9166596	1					
ANR	9166922	Identifier	BLOCK_OPT_BACKING_FILE		9166596	0					
ANR	9166923	ExpressionStatement	"hw_version = qemu_opt_get_del ( opts , BLOCK_OPT_HWVERSION )"	117:4:2033:2089	9166596	62	True				
ANR	9166924	AssignmentExpression	"hw_version = qemu_opt_get_del ( opts , BLOCK_OPT_HWVERSION )"		9166596	0		=			
ANR	9166925	Identifier	hw_version		9166596	0					
ANR	9166926	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_HWVERSION )"		9166596	1					
ANR	9166927	Callee	qemu_opt_get_del		9166596	0					
ANR	9166928	Identifier	qemu_opt_get_del		9166596	0					
ANR	9166929	ArgumentList	opts		9166596	1					
ANR	9166930	Argument	opts		9166596	0					
ANR	9166931	Identifier	opts		9166596	0					
ANR	9166932	Argument	BLOCK_OPT_HWVERSION		9166596	1					
ANR	9166933	Identifier	BLOCK_OPT_HWVERSION		9166596	0					
ANR	9166934	IfStatement	"if ( qemu_opt_get_bool_del ( opts , BLOCK_OPT_COMPAT6 , false ) )"		9166596	63					
ANR	9166935	Condition	"qemu_opt_get_bool_del ( opts , BLOCK_OPT_COMPAT6 , false )"	119:8:2100:2152	9166596	0	True				
ANR	9166936	CallExpression	"qemu_opt_get_bool_del ( opts , BLOCK_OPT_COMPAT6 , false )"		9166596	0					
ANR	9166937	Callee	qemu_opt_get_bool_del		9166596	0					
ANR	9166938	Identifier	qemu_opt_get_bool_del		9166596	0					
ANR	9166939	ArgumentList	opts		9166596	1					
ANR	9166940	Argument	opts		9166596	0					
ANR	9166941	Identifier	opts		9166596	0					
ANR	9166942	Argument	BLOCK_OPT_COMPAT6		9166596	1					
ANR	9166943	Identifier	BLOCK_OPT_COMPAT6		9166596	0					
ANR	9166944	Argument	false		9166596	2					
ANR	9166945	Identifier	false		9166596	0					
ANR	9166946	CompoundStatement		117:63:2078:2078	9166596	1					
ANR	9166947	IfStatement	"if ( strcmp ( hw_version , ""undefined"" ) )"		9166596	0					
ANR	9166948	Condition	"strcmp ( hw_version , ""undefined"" )"	121:12:2170:2200	9166596	0	True				
ANR	9166949	CallExpression	"strcmp ( hw_version , ""undefined"" )"		9166596	0					
ANR	9166950	Callee	strcmp		9166596	0					
ANR	9166951	Identifier	strcmp		9166596	0					
ANR	9166952	ArgumentList	hw_version		9166596	1					
ANR	9166953	Argument	hw_version		9166596	0					
ANR	9166954	Identifier	hw_version		9166596	0					
ANR	9166955	Argument	"""undefined"""		9166596	1					
ANR	9166956	PrimaryExpression	"""undefined"""		9166596	0					
ANR	9166957	CompoundStatement		119:45:2126:2126	9166596	1					
ANR	9166958	ExpressionStatement	"error_setg ( errp , ""compat6 cannot be enabled with hwversion set"" )"	123:12:2218:2306	9166596	0	True				
ANR	9166959	CallExpression	"error_setg ( errp , ""compat6 cannot be enabled with hwversion set"" )"		9166596	0					
ANR	9166960	Callee	error_setg		9166596	0					
ANR	9166961	Identifier	error_setg		9166596	0					
ANR	9166962	ArgumentList	errp		9166596	1					
ANR	9166963	Argument	errp		9166596	0					
ANR	9166964	Identifier	errp		9166596	0					
ANR	9166965	Argument	"""compat6 cannot be enabled with hwversion set"""		9166596	1					
ANR	9166966	PrimaryExpression	"""compat6 cannot be enabled with hwversion set"""		9166596	0					
ANR	9166967	ExpressionStatement	ret = - EINVAL	127:12:2321:2334	9166596	1	True				
ANR	9166968	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9166969	Identifier	ret		9166596	0					
ANR	9166970	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9166971	UnaryOperator	-		9166596	0					
ANR	9166972	Identifier	EINVAL		9166596	1					
ANR	9166973	GotoStatement	goto exit ;	129:12:2349:2358	9166596	2	True				
ANR	9166974	Identifier	exit		9166596	0					
ANR	9166975	ExpressionStatement	g_free ( hw_version )	133:8:2380:2398	9166596	1	True				
ANR	9166976	CallExpression	g_free ( hw_version )		9166596	0					
ANR	9166977	Callee	g_free		9166596	0					
ANR	9166978	Identifier	g_free		9166596	0					
ANR	9166979	ArgumentList	hw_version		9166596	1					
ANR	9166980	Argument	hw_version		9166596	0					
ANR	9166981	Identifier	hw_version		9166596	0					
ANR	9166982	ExpressionStatement	"hw_version = g_strdup ( ""6"" )"	135:8:2409:2435	9166596	2	True				
ANR	9166983	AssignmentExpression	"hw_version = g_strdup ( ""6"" )"		9166596	0		=			
ANR	9166984	Identifier	hw_version		9166596	0					
ANR	9166985	CallExpression	"g_strdup ( ""6"" )"		9166596	1					
ANR	9166986	Callee	g_strdup		9166596	0					
ANR	9166987	Identifier	g_strdup		9166596	0					
ANR	9166988	ArgumentList	"""6"""		9166596	1					
ANR	9166989	Argument	"""6"""		9166596	0					
ANR	9166990	PrimaryExpression	"""6"""		9166596	0					
ANR	9166991	IfStatement	"if ( strcmp ( hw_version , ""undefined"" ) == 0 )"		9166596	64					
ANR	9166992	Condition	"strcmp ( hw_version , ""undefined"" ) == 0"	139:8:2453:2488	9166596	0	True				
ANR	9166993	EqualityExpression	"strcmp ( hw_version , ""undefined"" ) == 0"		9166596	0		==			
ANR	9166994	CallExpression	"strcmp ( hw_version , ""undefined"" )"		9166596	0					
ANR	9166995	Callee	strcmp		9166596	0					
ANR	9166996	Identifier	strcmp		9166596	0					
ANR	9166997	ArgumentList	hw_version		9166596	1					
ANR	9166998	Argument	hw_version		9166596	0					
ANR	9166999	Identifier	hw_version		9166596	0					
ANR	9167000	Argument	"""undefined"""		9166596	1					
ANR	9167001	PrimaryExpression	"""undefined"""		9166596	0					
ANR	9167002	PrimaryExpression	0		9166596	1					
ANR	9167003	CompoundStatement		137:46:2414:2414	9166596	1					
ANR	9167004	ExpressionStatement	g_free ( hw_version )	141:8:2502:2520	9166596	0	True				
ANR	9167005	CallExpression	g_free ( hw_version )		9166596	0					
ANR	9167006	Callee	g_free		9166596	0					
ANR	9167007	Identifier	g_free		9166596	0					
ANR	9167008	ArgumentList	hw_version		9166596	1					
ANR	9167009	Argument	hw_version		9166596	0					
ANR	9167010	Identifier	hw_version		9166596	0					
ANR	9167011	ExpressionStatement	"hw_version = g_strdup ( ""4"" )"	143:8:2531:2557	9166596	1	True				
ANR	9167012	AssignmentExpression	"hw_version = g_strdup ( ""4"" )"		9166596	0		=			
ANR	9167013	Identifier	hw_version		9166596	0					
ANR	9167014	CallExpression	"g_strdup ( ""4"" )"		9166596	1					
ANR	9167015	Callee	g_strdup		9166596	0					
ANR	9167016	Identifier	g_strdup		9166596	0					
ANR	9167017	ArgumentList	"""4"""		9166596	1					
ANR	9167018	Argument	"""4"""		9166596	0					
ANR	9167019	PrimaryExpression	"""4"""		9166596	0					
ANR	9167020	ExpressionStatement	"fmt = qemu_opt_get_del ( opts , BLOCK_OPT_SUBFMT )"	147:4:2571:2617	9166596	65	True				
ANR	9167021	AssignmentExpression	"fmt = qemu_opt_get_del ( opts , BLOCK_OPT_SUBFMT )"		9166596	0		=			
ANR	9167022	Identifier	fmt		9166596	0					
ANR	9167023	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_SUBFMT )"		9166596	1					
ANR	9167024	Callee	qemu_opt_get_del		9166596	0					
ANR	9167025	Identifier	qemu_opt_get_del		9166596	0					
ANR	9167026	ArgumentList	opts		9166596	1					
ANR	9167027	Argument	opts		9166596	0					
ANR	9167028	Identifier	opts		9166596	0					
ANR	9167029	Argument	BLOCK_OPT_SUBFMT		9166596	1					
ANR	9167030	Identifier	BLOCK_OPT_SUBFMT		9166596	0					
ANR	9167031	IfStatement	"if ( qemu_opt_get_bool_del ( opts , BLOCK_OPT_ZEROED_GRAIN , false ) )"		9166596	66					
ANR	9167032	Condition	"qemu_opt_get_bool_del ( opts , BLOCK_OPT_ZEROED_GRAIN , false )"	149:8:2628:2685	9166596	0	True				
ANR	9167033	CallExpression	"qemu_opt_get_bool_del ( opts , BLOCK_OPT_ZEROED_GRAIN , false )"		9166596	0					
ANR	9167034	Callee	qemu_opt_get_bool_del		9166596	0					
ANR	9167035	Identifier	qemu_opt_get_bool_del		9166596	0					
ANR	9167036	ArgumentList	opts		9166596	1					
ANR	9167037	Argument	opts		9166596	0					
ANR	9167038	Identifier	opts		9166596	0					
ANR	9167039	Argument	BLOCK_OPT_ZEROED_GRAIN		9166596	1					
ANR	9167040	Identifier	BLOCK_OPT_ZEROED_GRAIN		9166596	0					
ANR	9167041	Argument	false		9166596	2					
ANR	9167042	Identifier	false		9166596	0					
ANR	9167043	CompoundStatement		147:68:2611:2611	9166596	1					
ANR	9167044	ExpressionStatement	zeroed_grain = true	151:8:2699:2718	9166596	0	True				
ANR	9167045	AssignmentExpression	zeroed_grain = true		9166596	0		=			
ANR	9167046	Identifier	zeroed_grain		9166596	0					
ANR	9167047	Identifier	true		9166596	1					
ANR	9167048	IfStatement	if ( ! adapter_type )		9166596	67					
ANR	9167049	Condition	! adapter_type	157:8:2738:2750	9166596	0	True				
ANR	9167050	UnaryOperationExpression	! adapter_type		9166596	0					
ANR	9167051	UnaryOperator	!		9166596	0					
ANR	9167052	Identifier	adapter_type		9166596	1					
ANR	9167053	CompoundStatement		155:23:2676:2676	9166596	1					
ANR	9167054	ExpressionStatement	"adapter_type = g_strdup ( ""ide"" )"	159:8:2764:2794	9166596	0	True				
ANR	9167055	AssignmentExpression	"adapter_type = g_strdup ( ""ide"" )"		9166596	0		=			
ANR	9167056	Identifier	adapter_type		9166596	0					
ANR	9167057	CallExpression	"g_strdup ( ""ide"" )"		9166596	1					
ANR	9167058	Callee	g_strdup		9166596	0					
ANR	9167059	Identifier	g_strdup		9166596	0					
ANR	9167060	ArgumentList	"""ide"""		9166596	1					
ANR	9167061	Argument	"""ide"""		9166596	0					
ANR	9167062	PrimaryExpression	"""ide"""		9166596	0					
ANR	9167063	ElseStatement	else		9166596	0					
ANR	9167064	IfStatement	"if ( strcmp ( adapter_type , ""ide"" ) && strcmp ( adapter_type , ""buslogic"" ) && strcmp ( adapter_type , ""lsilogic"" ) && strcmp ( adapter_type , ""legacyESX"" ) )"		9166596	0					
ANR	9167065	Condition	"strcmp ( adapter_type , ""ide"" ) && strcmp ( adapter_type , ""buslogic"" ) && strcmp ( adapter_type , ""lsilogic"" ) && strcmp ( adapter_type , ""legacyESX"" )"	161:15:2812:2995	9166596	0	True				
ANR	9167066	AndExpression	"strcmp ( adapter_type , ""ide"" ) && strcmp ( adapter_type , ""buslogic"" ) && strcmp ( adapter_type , ""lsilogic"" ) && strcmp ( adapter_type , ""legacyESX"" )"		9166596	0		&&			
ANR	9167067	CallExpression	"strcmp ( adapter_type , ""ide"" )"		9166596	0					
ANR	9167068	Callee	strcmp		9166596	0					
ANR	9167069	Identifier	strcmp		9166596	0					
ANR	9167070	ArgumentList	adapter_type		9166596	1					
ANR	9167071	Argument	adapter_type		9166596	0					
ANR	9167072	Identifier	adapter_type		9166596	0					
ANR	9167073	Argument	"""ide"""		9166596	1					
ANR	9167074	PrimaryExpression	"""ide"""		9166596	0					
ANR	9167075	AndExpression	"strcmp ( adapter_type , ""buslogic"" ) && strcmp ( adapter_type , ""lsilogic"" ) && strcmp ( adapter_type , ""legacyESX"" )"		9166596	1		&&			
ANR	9167076	CallExpression	"strcmp ( adapter_type , ""buslogic"" )"		9166596	0					
ANR	9167077	Callee	strcmp		9166596	0					
ANR	9167078	Identifier	strcmp		9166596	0					
ANR	9167079	ArgumentList	adapter_type		9166596	1					
ANR	9167080	Argument	adapter_type		9166596	0					
ANR	9167081	Identifier	adapter_type		9166596	0					
ANR	9167082	Argument	"""buslogic"""		9166596	1					
ANR	9167083	PrimaryExpression	"""buslogic"""		9166596	0					
ANR	9167084	AndExpression	"strcmp ( adapter_type , ""lsilogic"" ) && strcmp ( adapter_type , ""legacyESX"" )"		9166596	1		&&			
ANR	9167085	CallExpression	"strcmp ( adapter_type , ""lsilogic"" )"		9166596	0					
ANR	9167086	Callee	strcmp		9166596	0					
ANR	9167087	Identifier	strcmp		9166596	0					
ANR	9167088	ArgumentList	adapter_type		9166596	1					
ANR	9167089	Argument	adapter_type		9166596	0					
ANR	9167090	Identifier	adapter_type		9166596	0					
ANR	9167091	Argument	"""lsilogic"""		9166596	1					
ANR	9167092	PrimaryExpression	"""lsilogic"""		9166596	0					
ANR	9167093	CallExpression	"strcmp ( adapter_type , ""legacyESX"" )"		9166596	1					
ANR	9167094	Callee	strcmp		9166596	0					
ANR	9167095	Identifier	strcmp		9166596	0					
ANR	9167096	ArgumentList	adapter_type		9166596	1					
ANR	9167097	Argument	adapter_type		9166596	0					
ANR	9167098	Identifier	adapter_type		9166596	0					
ANR	9167099	Argument	"""legacyESX"""		9166596	1					
ANR	9167100	PrimaryExpression	"""legacyESX"""		9166596	0					
ANR	9167101	CompoundStatement		165:50:2921:2921	9166596	1					
ANR	9167102	ExpressionStatement	"error_setg ( errp , ""Unknown adapter type: '%s'"" , adapter_type )"	169:8:3009:3069	9166596	0	True				
ANR	9167103	CallExpression	"error_setg ( errp , ""Unknown adapter type: '%s'"" , adapter_type )"		9166596	0					
ANR	9167104	Callee	error_setg		9166596	0					
ANR	9167105	Identifier	error_setg		9166596	0					
ANR	9167106	ArgumentList	errp		9166596	1					
ANR	9167107	Argument	errp		9166596	0					
ANR	9167108	Identifier	errp		9166596	0					
ANR	9167109	Argument	"""Unknown adapter type: '%s'"""		9166596	1					
ANR	9167110	PrimaryExpression	"""Unknown adapter type: '%s'"""		9166596	0					
ANR	9167111	Argument	adapter_type		9166596	2					
ANR	9167112	Identifier	adapter_type		9166596	0					
ANR	9167113	ExpressionStatement	ret = - EINVAL	171:8:3080:3093	9166596	1	True				
ANR	9167114	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9167115	Identifier	ret		9166596	0					
ANR	9167116	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9167117	UnaryOperator	-		9166596	0					
ANR	9167118	Identifier	EINVAL		9166596	1					
ANR	9167119	GotoStatement	goto exit ;	173:8:3104:3113	9166596	2	True				
ANR	9167120	Identifier	exit		9166596	0					
ANR	9167121	IfStatement	"if ( strcmp ( adapter_type , ""ide"" ) != 0 )"		9166596	68					
ANR	9167122	Condition	"strcmp ( adapter_type , ""ide"" ) != 0"	177:8:3131:3162	9166596	0	True				
ANR	9167123	EqualityExpression	"strcmp ( adapter_type , ""ide"" ) != 0"		9166596	0		!=			
ANR	9167124	CallExpression	"strcmp ( adapter_type , ""ide"" )"		9166596	0					
ANR	9167125	Callee	strcmp		9166596	0					
ANR	9167126	Identifier	strcmp		9166596	0					
ANR	9167127	ArgumentList	adapter_type		9166596	1					
ANR	9167128	Argument	adapter_type		9166596	0					
ANR	9167129	Identifier	adapter_type		9166596	0					
ANR	9167130	Argument	"""ide"""		9166596	1					
ANR	9167131	PrimaryExpression	"""ide"""		9166596	0					
ANR	9167132	PrimaryExpression	0		9166596	1					
ANR	9167133	CompoundStatement		175:42:3088:3088	9166596	1					
ANR	9167134	ExpressionStatement	number_heads = 255	183:8:3327:3345	9166596	0	True				
ANR	9167135	AssignmentExpression	number_heads = 255		9166596	0		=			
ANR	9167136	Identifier	number_heads		9166596	0					
ANR	9167137	PrimaryExpression	255		9166596	1					
ANR	9167138	IfStatement	if ( ! fmt )		9166596	69					
ANR	9167139	Condition	! fmt	187:8:3363:3366	9166596	0	True				
ANR	9167140	UnaryOperationExpression	! fmt		9166596	0					
ANR	9167141	UnaryOperator	!		9166596	0					
ANR	9167142	Identifier	fmt		9166596	1					
ANR	9167143	CompoundStatement		185:14:3292:3292	9166596	1					
ANR	9167144	ExpressionStatement	"fmt = g_strdup ( ""monolithicSparse"" )"	191:8:3430:3464	9166596	0	True				
ANR	9167145	AssignmentExpression	"fmt = g_strdup ( ""monolithicSparse"" )"		9166596	0		=			
ANR	9167146	Identifier	fmt		9166596	0					
ANR	9167147	CallExpression	"g_strdup ( ""monolithicSparse"" )"		9166596	1					
ANR	9167148	Callee	g_strdup		9166596	0					
ANR	9167149	Identifier	g_strdup		9166596	0					
ANR	9167150	ArgumentList	"""monolithicSparse"""		9166596	1					
ANR	9167151	Argument	"""monolithicSparse"""		9166596	0					
ANR	9167152	PrimaryExpression	"""monolithicSparse"""		9166596	0					
ANR	9167153	ElseStatement	else		9166596	0					
ANR	9167154	IfStatement	"if ( strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""monolithicSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" ) )"		9166596	0					
ANR	9167155	Condition	"strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""monolithicSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" )"	193:15:3482:3719	9166596	0	True				
ANR	9167156	AndExpression	"strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""monolithicSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" )"		9166596	0		&&			
ANR	9167157	CallExpression	"strcmp ( fmt , ""monolithicFlat"" )"		9166596	0					
ANR	9167158	Callee	strcmp		9166596	0					
ANR	9167159	Identifier	strcmp		9166596	0					
ANR	9167160	ArgumentList	fmt		9166596	1					
ANR	9167161	Argument	fmt		9166596	0					
ANR	9167162	Identifier	fmt		9166596	0					
ANR	9167163	Argument	"""monolithicFlat"""		9166596	1					
ANR	9167164	PrimaryExpression	"""monolithicFlat"""		9166596	0					
ANR	9167165	AndExpression	"strcmp ( fmt , ""monolithicSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" )"		9166596	1		&&			
ANR	9167166	CallExpression	"strcmp ( fmt , ""monolithicSparse"" )"		9166596	0					
ANR	9167167	Callee	strcmp		9166596	0					
ANR	9167168	Identifier	strcmp		9166596	0					
ANR	9167169	ArgumentList	fmt		9166596	1					
ANR	9167170	Argument	fmt		9166596	0					
ANR	9167171	Identifier	fmt		9166596	0					
ANR	9167172	Argument	"""monolithicSparse"""		9166596	1					
ANR	9167173	PrimaryExpression	"""monolithicSparse"""		9166596	0					
ANR	9167174	AndExpression	"strcmp ( fmt , ""twoGbMaxExtentSparse"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" )"		9166596	1		&&			
ANR	9167175	CallExpression	"strcmp ( fmt , ""twoGbMaxExtentSparse"" )"		9166596	0					
ANR	9167176	Callee	strcmp		9166596	0					
ANR	9167177	Identifier	strcmp		9166596	0					
ANR	9167178	ArgumentList	fmt		9166596	1					
ANR	9167179	Argument	fmt		9166596	0					
ANR	9167180	Identifier	fmt		9166596	0					
ANR	9167181	Argument	"""twoGbMaxExtentSparse"""		9166596	1					
ANR	9167182	PrimaryExpression	"""twoGbMaxExtentSparse"""		9166596	0					
ANR	9167183	AndExpression	"strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""streamOptimized"" )"		9166596	1		&&			
ANR	9167184	CallExpression	"strcmp ( fmt , ""twoGbMaxExtentFlat"" )"		9166596	0					
ANR	9167185	Callee	strcmp		9166596	0					
ANR	9167186	Identifier	strcmp		9166596	0					
ANR	9167187	ArgumentList	fmt		9166596	1					
ANR	9167188	Argument	fmt		9166596	0					
ANR	9167189	Identifier	fmt		9166596	0					
ANR	9167190	Argument	"""twoGbMaxExtentFlat"""		9166596	1					
ANR	9167191	PrimaryExpression	"""twoGbMaxExtentFlat"""		9166596	0					
ANR	9167192	CallExpression	"strcmp ( fmt , ""streamOptimized"" )"		9166596	1					
ANR	9167193	Callee	strcmp		9166596	0					
ANR	9167194	Identifier	strcmp		9166596	0					
ANR	9167195	ArgumentList	fmt		9166596	1					
ANR	9167196	Argument	fmt		9166596	0					
ANR	9167197	Identifier	fmt		9166596	0					
ANR	9167198	Argument	"""streamOptimized"""		9166596	1					
ANR	9167199	PrimaryExpression	"""streamOptimized"""		9166596	0					
ANR	9167200	CompoundStatement		199:47:3645:3645	9166596	1					
ANR	9167201	ExpressionStatement	"error_setg ( errp , ""Unknown subformat: '%s'"" , fmt )"	203:8:3733:3781	9166596	0	True				
ANR	9167202	CallExpression	"error_setg ( errp , ""Unknown subformat: '%s'"" , fmt )"		9166596	0					
ANR	9167203	Callee	error_setg		9166596	0					
ANR	9167204	Identifier	error_setg		9166596	0					
ANR	9167205	ArgumentList	errp		9166596	1					
ANR	9167206	Argument	errp		9166596	0					
ANR	9167207	Identifier	errp		9166596	0					
ANR	9167208	Argument	"""Unknown subformat: '%s'"""		9166596	1					
ANR	9167209	PrimaryExpression	"""Unknown subformat: '%s'"""		9166596	0					
ANR	9167210	Argument	fmt		9166596	2					
ANR	9167211	Identifier	fmt		9166596	0					
ANR	9167212	ExpressionStatement	ret = - EINVAL	205:8:3792:3805	9166596	1	True				
ANR	9167213	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9167214	Identifier	ret		9166596	0					
ANR	9167215	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9167216	UnaryOperator	-		9166596	0					
ANR	9167217	Identifier	EINVAL		9166596	1					
ANR	9167218	GotoStatement	goto exit ;	207:8:3816:3825	9166596	2	True				
ANR	9167219	Identifier	exit		9166596	0					
ANR	9167220	ExpressionStatement	"split = ! ( strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) )"	211:4:3839:3937	9166596	70	True				
ANR	9167221	AssignmentExpression	"split = ! ( strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) )"		9166596	0		=			
ANR	9167222	Identifier	split		9166596	0					
ANR	9167223	UnaryOperationExpression	"! ( strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" ) )"		9166596	1					
ANR	9167224	UnaryOperator	!		9166596	0					
ANR	9167225	AndExpression	"strcmp ( fmt , ""twoGbMaxExtentFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentSparse"" )"		9166596	1		&&			
ANR	9167226	CallExpression	"strcmp ( fmt , ""twoGbMaxExtentFlat"" )"		9166596	0					
ANR	9167227	Callee	strcmp		9166596	0					
ANR	9167228	Identifier	strcmp		9166596	0					
ANR	9167229	ArgumentList	fmt		9166596	1					
ANR	9167230	Argument	fmt		9166596	0					
ANR	9167231	Identifier	fmt		9166596	0					
ANR	9167232	Argument	"""twoGbMaxExtentFlat"""		9166596	1					
ANR	9167233	PrimaryExpression	"""twoGbMaxExtentFlat"""		9166596	0					
ANR	9167234	CallExpression	"strcmp ( fmt , ""twoGbMaxExtentSparse"" )"		9166596	1					
ANR	9167235	Callee	strcmp		9166596	0					
ANR	9167236	Identifier	strcmp		9166596	0					
ANR	9167237	ArgumentList	fmt		9166596	1					
ANR	9167238	Argument	fmt		9166596	0					
ANR	9167239	Identifier	fmt		9166596	0					
ANR	9167240	Argument	"""twoGbMaxExtentSparse"""		9166596	1					
ANR	9167241	PrimaryExpression	"""twoGbMaxExtentSparse"""		9166596	0					
ANR	9167242	ExpressionStatement	"flat = ! ( strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) )"	215:4:3944:4034	9166596	71	True				
ANR	9167243	AssignmentExpression	"flat = ! ( strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) )"		9166596	0		=			
ANR	9167244	Identifier	flat		9166596	0					
ANR	9167245	UnaryOperationExpression	"! ( strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" ) )"		9166596	1					
ANR	9167246	UnaryOperator	!		9166596	0					
ANR	9167247	AndExpression	"strcmp ( fmt , ""monolithicFlat"" ) && strcmp ( fmt , ""twoGbMaxExtentFlat"" )"		9166596	1		&&			
ANR	9167248	CallExpression	"strcmp ( fmt , ""monolithicFlat"" )"		9166596	0					
ANR	9167249	Callee	strcmp		9166596	0					
ANR	9167250	Identifier	strcmp		9166596	0					
ANR	9167251	ArgumentList	fmt		9166596	1					
ANR	9167252	Argument	fmt		9166596	0					
ANR	9167253	Identifier	fmt		9166596	0					
ANR	9167254	Argument	"""monolithicFlat"""		9166596	1					
ANR	9167255	PrimaryExpression	"""monolithicFlat"""		9166596	0					
ANR	9167256	CallExpression	"strcmp ( fmt , ""twoGbMaxExtentFlat"" )"		9166596	1					
ANR	9167257	Callee	strcmp		9166596	0					
ANR	9167258	Identifier	strcmp		9166596	0					
ANR	9167259	ArgumentList	fmt		9166596	1					
ANR	9167260	Argument	fmt		9166596	0					
ANR	9167261	Identifier	fmt		9166596	0					
ANR	9167262	Argument	"""twoGbMaxExtentFlat"""		9166596	1					
ANR	9167263	PrimaryExpression	"""twoGbMaxExtentFlat"""		9166596	0					
ANR	9167264	ExpressionStatement	"compress = ! strcmp ( fmt , ""streamOptimized"" )"	219:4:4041:4083	9166596	72	True				
ANR	9167265	AssignmentExpression	"compress = ! strcmp ( fmt , ""streamOptimized"" )"		9166596	0		=			
ANR	9167266	Identifier	compress		9166596	0					
ANR	9167267	UnaryOperationExpression	"! strcmp ( fmt , ""streamOptimized"" )"		9166596	1					
ANR	9167268	UnaryOperator	!		9166596	0					
ANR	9167269	CallExpression	"strcmp ( fmt , ""streamOptimized"" )"		9166596	1					
ANR	9167270	Callee	strcmp		9166596	0					
ANR	9167271	Identifier	strcmp		9166596	0					
ANR	9167272	ArgumentList	fmt		9166596	1					
ANR	9167273	Argument	fmt		9166596	0					
ANR	9167274	Identifier	fmt		9166596	0					
ANR	9167275	Argument	"""streamOptimized"""		9166596	1					
ANR	9167276	PrimaryExpression	"""streamOptimized"""		9166596	0					
ANR	9167277	IfStatement	if ( flat )		9166596	73					
ANR	9167278	Condition	flat	221:8:4094:4097	9166596	0	True				
ANR	9167279	Identifier	flat		9166596	0					
ANR	9167280	CompoundStatement		219:14:4023:4023	9166596	1					
ANR	9167281	Statement	desc_extent_line	223:8:4111:4126	9166596	0	True				
ANR	9167282	Statement	=	223:25:4128:4128	9166596	1	True				
ANR	9167283	Statement	"""RW %"""	223:27:4130:4135	9166596	2	True				
ANR	9167284	Statement	PRId64	223:34:4137:4142	9166596	3	True				
ANR	9167285	ExpressionStatement	""" FLAT \\""%s\\"" 0\\n"""	223:41:4144:4162	9166596	4	True				
ANR	9167286	PrimaryExpression	""" FLAT \\""%s\\"" 0\\n"""		9166596	0					
ANR	9167287	ElseStatement	else		9166596	0					
ANR	9167288	CompoundStatement		223:11:4099:4099	9166596	0					
ANR	9167289	Statement	desc_extent_line	227:8:4187:4202	9166596	0	True				
ANR	9167290	Statement	=	227:25:4204:4204	9166596	1	True				
ANR	9167291	Statement	"""RW %"""	227:27:4206:4211	9166596	2	True				
ANR	9167292	Statement	PRId64	227:34:4213:4218	9166596	3	True				
ANR	9167293	ExpressionStatement	""" SPARSE \\""%s\\""\\n"""	227:41:4220:4238	9166596	4	True				
ANR	9167294	PrimaryExpression	""" SPARSE \\""%s\\""\\n"""		9166596	0					
ANR	9167295	IfStatement	if ( flat && backing_file )		9166596	74					
ANR	9167296	Condition	flat && backing_file	231:8:4256:4275	9166596	0	True				
ANR	9167297	AndExpression	flat && backing_file		9166596	0		&&			
ANR	9167298	Identifier	flat		9166596	0					
ANR	9167299	Identifier	backing_file		9166596	1					
ANR	9167300	CompoundStatement		229:30:4201:4201	9166596	1					
ANR	9167301	ExpressionStatement	"error_setg ( errp , ""Flat image can't have backing file"" )"	233:8:4289:4343	9166596	0	True				
ANR	9167302	CallExpression	"error_setg ( errp , ""Flat image can't have backing file"" )"		9166596	0					
ANR	9167303	Callee	error_setg		9166596	0					
ANR	9167304	Identifier	error_setg		9166596	0					
ANR	9167305	ArgumentList	errp		9166596	1					
ANR	9167306	Argument	errp		9166596	0					
ANR	9167307	Identifier	errp		9166596	0					
ANR	9167308	Argument	"""Flat image can't have backing file"""		9166596	1					
ANR	9167309	PrimaryExpression	"""Flat image can't have backing file"""		9166596	0					
ANR	9167310	ExpressionStatement	ret = - ENOTSUP	235:8:4354:4368	9166596	1	True				
ANR	9167311	AssignmentExpression	ret = - ENOTSUP		9166596	0		=			
ANR	9167312	Identifier	ret		9166596	0					
ANR	9167313	UnaryOperationExpression	- ENOTSUP		9166596	1					
ANR	9167314	UnaryOperator	-		9166596	0					
ANR	9167315	Identifier	ENOTSUP		9166596	1					
ANR	9167316	GotoStatement	goto exit ;	237:8:4379:4388	9166596	2	True				
ANR	9167317	Identifier	exit		9166596	0					
ANR	9167318	IfStatement	if ( flat && zeroed_grain )		9166596	75					
ANR	9167319	Condition	flat && zeroed_grain	241:8:4406:4425	9166596	0	True				
ANR	9167320	AndExpression	flat && zeroed_grain		9166596	0		&&			
ANR	9167321	Identifier	flat		9166596	0					
ANR	9167322	Identifier	zeroed_grain		9166596	1					
ANR	9167323	CompoundStatement		239:30:4351:4351	9166596	1					
ANR	9167324	ExpressionStatement	"error_setg ( errp , ""Flat image can't enable zeroed grain"" )"	243:8:4439:4495	9166596	0	True				
ANR	9167325	CallExpression	"error_setg ( errp , ""Flat image can't enable zeroed grain"" )"		9166596	0					
ANR	9167326	Callee	error_setg		9166596	0					
ANR	9167327	Identifier	error_setg		9166596	0					
ANR	9167328	ArgumentList	errp		9166596	1					
ANR	9167329	Argument	errp		9166596	0					
ANR	9167330	Identifier	errp		9166596	0					
ANR	9167331	Argument	"""Flat image can't enable zeroed grain"""		9166596	1					
ANR	9167332	PrimaryExpression	"""Flat image can't enable zeroed grain"""		9166596	0					
ANR	9167333	ExpressionStatement	ret = - ENOTSUP	245:8:4506:4520	9166596	1	True				
ANR	9167334	AssignmentExpression	ret = - ENOTSUP		9166596	0		=			
ANR	9167335	Identifier	ret		9166596	0					
ANR	9167336	UnaryOperationExpression	- ENOTSUP		9166596	1					
ANR	9167337	UnaryOperator	-		9166596	0					
ANR	9167338	Identifier	ENOTSUP		9166596	1					
ANR	9167339	GotoStatement	goto exit ;	247:8:4531:4540	9166596	2	True				
ANR	9167340	Identifier	exit		9166596	0					
ANR	9167341	IfStatement	if ( backing_file )		9166596	76					
ANR	9167342	Condition	backing_file	251:8:4558:4569	9166596	0	True				
ANR	9167343	Identifier	backing_file		9166596	0					
ANR	9167344	CompoundStatement		253:8:4534:4577	9166596	1					
ANR	9167345	IdentifierDeclStatement	BlockBackend * blk ;	253:8:4583:4600	9166596	0	True				
ANR	9167346	IdentifierDecl	* blk		9166596	0					
ANR	9167347	IdentifierDeclType	BlockBackend *		9166596	0					
ANR	9167348	Identifier	blk		9166596	1					
ANR	9167349	IdentifierDeclStatement	"char * full_backing = g_new0 ( char , PATH_MAX ) ;"	255:8:4611:4654	9166596	1	True				
ANR	9167350	IdentifierDecl	"* full_backing = g_new0 ( char , PATH_MAX )"		9166596	0					
ANR	9167351	IdentifierDeclType	char *		9166596	0					
ANR	9167352	Identifier	full_backing		9166596	1					
ANR	9167353	AssignmentExpression	"* full_backing = g_new0 ( char , PATH_MAX )"		9166596	2		=			
ANR	9167354	Identifier	full_backing		9166596	0					
ANR	9167355	CallExpression	"g_new0 ( char , PATH_MAX )"		9166596	1					
ANR	9167356	Callee	g_new0		9166596	0					
ANR	9167357	Identifier	g_new0		9166596	0					
ANR	9167358	ArgumentList	char		9166596	1					
ANR	9167359	Argument	char		9166596	0					
ANR	9167360	Identifier	char		9166596	0					
ANR	9167361	Argument	PATH_MAX		9166596	1					
ANR	9167362	Identifier	PATH_MAX		9166596	0					
ANR	9167363	ExpressionStatement	"bdrv_get_full_backing_filename_from_filename ( filename , backing_file , full_backing , PATH_MAX , & local_err )"	257:8:4665:4877	9166596	2	True				
ANR	9167364	CallExpression	"bdrv_get_full_backing_filename_from_filename ( filename , backing_file , full_backing , PATH_MAX , & local_err )"		9166596	0					
ANR	9167365	Callee	bdrv_get_full_backing_filename_from_filename		9166596	0					
ANR	9167366	Identifier	bdrv_get_full_backing_filename_from_filename		9166596	0					
ANR	9167367	ArgumentList	filename		9166596	1					
ANR	9167368	Argument	filename		9166596	0					
ANR	9167369	Identifier	filename		9166596	0					
ANR	9167370	Argument	backing_file		9166596	1					
ANR	9167371	Identifier	backing_file		9166596	0					
ANR	9167372	Argument	full_backing		9166596	2					
ANR	9167373	Identifier	full_backing		9166596	0					
ANR	9167374	Argument	PATH_MAX		9166596	3					
ANR	9167375	Identifier	PATH_MAX		9166596	0					
ANR	9167376	Argument	& local_err		9166596	4					
ANR	9167377	UnaryOperationExpression	& local_err		9166596	0					
ANR	9167378	UnaryOperator	&		9166596	0					
ANR	9167379	Identifier	local_err		9166596	1					
ANR	9167380	IfStatement	if ( local_err )		9166596	3					
ANR	9167381	Condition	local_err	263:12:4892:4900	9166596	0	True				
ANR	9167382	Identifier	local_err		9166596	0					
ANR	9167383	CompoundStatement		261:23:4826:4826	9166596	1					
ANR	9167384	ExpressionStatement	g_free ( full_backing )	265:12:4918:4938	9166596	0	True				
ANR	9167385	CallExpression	g_free ( full_backing )		9166596	0					
ANR	9167386	Callee	g_free		9166596	0					
ANR	9167387	Identifier	g_free		9166596	0					
ANR	9167388	ArgumentList	full_backing		9166596	1					
ANR	9167389	Argument	full_backing		9166596	0					
ANR	9167390	Identifier	full_backing		9166596	0					
ANR	9167391	ExpressionStatement	"error_propagate ( errp , local_err )"	267:12:4953:4985	9166596	1	True				
ANR	9167392	CallExpression	"error_propagate ( errp , local_err )"		9166596	0					
ANR	9167393	Callee	error_propagate		9166596	0					
ANR	9167394	Identifier	error_propagate		9166596	0					
ANR	9167395	ArgumentList	errp		9166596	1					
ANR	9167396	Argument	errp		9166596	0					
ANR	9167397	Identifier	errp		9166596	0					
ANR	9167398	Argument	local_err		9166596	1					
ANR	9167399	Identifier	local_err		9166596	0					
ANR	9167400	ExpressionStatement	ret = - ENOENT	269:12:5000:5013	9166596	2	True				
ANR	9167401	AssignmentExpression	ret = - ENOENT		9166596	0		=			
ANR	9167402	Identifier	ret		9166596	0					
ANR	9167403	UnaryOperationExpression	- ENOENT		9166596	1					
ANR	9167404	UnaryOperator	-		9166596	0					
ANR	9167405	Identifier	ENOENT		9166596	1					
ANR	9167406	GotoStatement	goto exit ;	271:12:5028:5037	9166596	3	True				
ANR	9167407	Identifier	exit		9166596	0					
ANR	9167408	ExpressionStatement	"blk = blk_new_open ( full_backing , NULL , NULL , BDRV_O_NO_BACKING , errp )"	277:8:5061:5158	9166596	4	True				
ANR	9167409	AssignmentExpression	"blk = blk_new_open ( full_backing , NULL , NULL , BDRV_O_NO_BACKING , errp )"		9166596	0		=			
ANR	9167410	Identifier	blk		9166596	0					
ANR	9167411	CallExpression	"blk_new_open ( full_backing , NULL , NULL , BDRV_O_NO_BACKING , errp )"		9166596	1					
ANR	9167412	Callee	blk_new_open		9166596	0					
ANR	9167413	Identifier	blk_new_open		9166596	0					
ANR	9167414	ArgumentList	full_backing		9166596	1					
ANR	9167415	Argument	full_backing		9166596	0					
ANR	9167416	Identifier	full_backing		9166596	0					
ANR	9167417	Argument	NULL		9166596	1					
ANR	9167418	Identifier	NULL		9166596	0					
ANR	9167419	Argument	NULL		9166596	2					
ANR	9167420	Identifier	NULL		9166596	0					
ANR	9167421	Argument	BDRV_O_NO_BACKING		9166596	3					
ANR	9167422	Identifier	BDRV_O_NO_BACKING		9166596	0					
ANR	9167423	Argument	errp		9166596	4					
ANR	9167424	Identifier	errp		9166596	0					
ANR	9167425	ExpressionStatement	g_free ( full_backing )	281:8:5169:5189	9166596	5	True				
ANR	9167426	CallExpression	g_free ( full_backing )		9166596	0					
ANR	9167427	Callee	g_free		9166596	0					
ANR	9167428	Identifier	g_free		9166596	0					
ANR	9167429	ArgumentList	full_backing		9166596	1					
ANR	9167430	Argument	full_backing		9166596	0					
ANR	9167431	Identifier	full_backing		9166596	0					
ANR	9167432	IfStatement	if ( blk == NULL )		9166596	6					
ANR	9167433	Condition	blk == NULL	283:12:5204:5214	9166596	0	True				
ANR	9167434	EqualityExpression	blk == NULL		9166596	0		==			
ANR	9167435	Identifier	blk		9166596	0					
ANR	9167436	Identifier	NULL		9166596	1					
ANR	9167437	CompoundStatement		281:25:5140:5140	9166596	1					
ANR	9167438	ExpressionStatement	ret = - EIO	285:12:5232:5242	9166596	0	True				
ANR	9167439	AssignmentExpression	ret = - EIO		9166596	0		=			
ANR	9167440	Identifier	ret		9166596	0					
ANR	9167441	UnaryOperationExpression	- EIO		9166596	1					
ANR	9167442	UnaryOperator	-		9166596	0					
ANR	9167443	Identifier	EIO		9166596	1					
ANR	9167444	GotoStatement	goto exit ;	287:12:5257:5266	9166596	1	True				
ANR	9167445	Identifier	exit		9166596	0					
ANR	9167446	IfStatement	"if ( strcmp ( blk_bs ( blk ) -> drv -> format_name , ""vmdk"" ) )"		9166596	7					
ANR	9167447	Condition	"strcmp ( blk_bs ( blk ) -> drv -> format_name , ""vmdk"" )"	291:12:5292:5336	9166596	0	True				
ANR	9167448	CallExpression	"strcmp ( blk_bs ( blk ) -> drv -> format_name , ""vmdk"" )"		9166596	0					
ANR	9167449	Callee	strcmp		9166596	0					
ANR	9167450	Identifier	strcmp		9166596	0					
ANR	9167451	ArgumentList	blk_bs ( blk ) -> drv -> format_name		9166596	1					
ANR	9167452	Argument	blk_bs ( blk ) -> drv -> format_name		9166596	0					
ANR	9167453	PtrMemberAccess	blk_bs ( blk ) -> drv -> format_name		9166596	0					
ANR	9167454	PtrMemberAccess	blk_bs ( blk ) -> drv		9166596	0					
ANR	9167455	CallExpression	blk_bs ( blk )		9166596	0					
ANR	9167456	Callee	blk_bs		9166596	0					
ANR	9167457	Identifier	blk_bs		9166596	0					
ANR	9167458	ArgumentList	blk		9166596	1					
ANR	9167459	Argument	blk		9166596	0					
ANR	9167460	Identifier	blk		9166596	0					
ANR	9167461	Identifier	drv		9166596	1					
ANR	9167462	Identifier	format_name		9166596	1					
ANR	9167463	Argument	"""vmdk"""		9166596	1					
ANR	9167464	PrimaryExpression	"""vmdk"""		9166596	0					
ANR	9167465	CompoundStatement		289:59:5262:5262	9166596	1					
ANR	9167466	ExpressionStatement	blk_unref ( blk )	293:12:5354:5368	9166596	0	True				
ANR	9167467	CallExpression	blk_unref ( blk )		9166596	0					
ANR	9167468	Callee	blk_unref		9166596	0					
ANR	9167469	Identifier	blk_unref		9166596	0					
ANR	9167470	ArgumentList	blk		9166596	1					
ANR	9167471	Argument	blk		9166596	0					
ANR	9167472	Identifier	blk		9166596	0					
ANR	9167473	ExpressionStatement	ret = - EINVAL	295:12:5383:5396	9166596	1	True				
ANR	9167474	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9167475	Identifier	ret		9166596	0					
ANR	9167476	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9167477	UnaryOperator	-		9166596	0					
ANR	9167478	Identifier	EINVAL		9166596	1					
ANR	9167479	GotoStatement	goto exit ;	297:12:5411:5420	9166596	2	True				
ANR	9167480	Identifier	exit		9166596	0					
ANR	9167481	ExpressionStatement	"parent_cid = vmdk_read_cid ( blk_bs ( blk ) , 0 )"	301:8:5442:5484	9166596	8	True				
ANR	9167482	AssignmentExpression	"parent_cid = vmdk_read_cid ( blk_bs ( blk ) , 0 )"		9166596	0		=			
ANR	9167483	Identifier	parent_cid		9166596	0					
ANR	9167484	CallExpression	"vmdk_read_cid ( blk_bs ( blk ) , 0 )"		9166596	1					
ANR	9167485	Callee	vmdk_read_cid		9166596	0					
ANR	9167486	Identifier	vmdk_read_cid		9166596	0					
ANR	9167487	ArgumentList	blk_bs ( blk )		9166596	1					
ANR	9167488	Argument	blk_bs ( blk )		9166596	0					
ANR	9167489	CallExpression	blk_bs ( blk )		9166596	0					
ANR	9167490	Callee	blk_bs		9166596	0					
ANR	9167491	Identifier	blk_bs		9166596	0					
ANR	9167492	ArgumentList	blk		9166596	1					
ANR	9167493	Argument	blk		9166596	0					
ANR	9167494	Identifier	blk		9166596	0					
ANR	9167495	Argument	0		9166596	1					
ANR	9167496	PrimaryExpression	0		9166596	0					
ANR	9167497	ExpressionStatement	blk_unref ( blk )	303:8:5495:5509	9166596	9	True				
ANR	9167498	CallExpression	blk_unref ( blk )		9166596	0					
ANR	9167499	Callee	blk_unref		9166596	0					
ANR	9167500	Identifier	blk_unref		9166596	0					
ANR	9167501	ArgumentList	blk		9166596	1					
ANR	9167502	Argument	blk		9166596	0					
ANR	9167503	Identifier	blk		9166596	0					
ANR	9167504	ExpressionStatement	"snprintf ( parent_desc_line , BUF_SIZE , ""parentFileNameHint=\\""%s\\"""" , backing_file )"	305:8:5520:5616	9166596	10	True				
ANR	9167505	CallExpression	"snprintf ( parent_desc_line , BUF_SIZE , ""parentFileNameHint=\\""%s\\"""" , backing_file )"		9166596	0					
ANR	9167506	Callee	snprintf		9166596	0					
ANR	9167507	Identifier	snprintf		9166596	0					
ANR	9167508	ArgumentList	parent_desc_line		9166596	1					
ANR	9167509	Argument	parent_desc_line		9166596	0					
ANR	9167510	Identifier	parent_desc_line		9166596	0					
ANR	9167511	Argument	BUF_SIZE		9166596	1					
ANR	9167512	Identifier	BUF_SIZE		9166596	0					
ANR	9167513	Argument	"""parentFileNameHint=\\""%s\\"""""		9166596	2					
ANR	9167514	PrimaryExpression	"""parentFileNameHint=\\""%s\\"""""		9166596	0					
ANR	9167515	Argument	backing_file		9166596	3					
ANR	9167516	Identifier	backing_file		9166596	0					
ANR	9167517	ExpressionStatement	filesize = total_size	315:4:5658:5679	9166596	77	True				
ANR	9167518	AssignmentExpression	filesize = total_size		9166596	0		=			
ANR	9167519	Identifier	filesize		9166596	0					
ANR	9167520	Identifier	total_size		9166596	1					
ANR	9167521	WhileStatement	while ( filesize > 0 )		9166596	78					
ANR	9167522	Condition	filesize > 0	317:11:5693:5704	9166596	0	True				
ANR	9167523	RelationalExpression	filesize > 0		9166596	0		>			
ANR	9167524	Identifier	filesize		9166596	0					
ANR	9167525	PrimaryExpression	0		9166596	1					
ANR	9167526	CompoundStatement		317:8:5641:5664	9166596	1					
ANR	9167527	IdentifierDeclStatement	int64_t size = filesize ;	319:8:5718:5741	9166596	0	True				
ANR	9167528	IdentifierDecl	size = filesize		9166596	0					
ANR	9167529	IdentifierDeclType	int64_t		9166596	0					
ANR	9167530	Identifier	size		9166596	1					
ANR	9167531	AssignmentExpression	size = filesize		9166596	2		=			
ANR	9167532	Identifier	filesize		9166596	0					
ANR	9167533	Identifier	filesize		9166596	1					
ANR	9167534	IfStatement	if ( split && size > split_size )		9166596	1					
ANR	9167535	Condition	split && size > split_size	323:12:5758:5783	9166596	0	True				
ANR	9167536	AndExpression	split && size > split_size		9166596	0		&&			
ANR	9167537	Identifier	split		9166596	0					
ANR	9167538	RelationalExpression	size > split_size		9166596	1		>			
ANR	9167539	Identifier	size		9166596	0					
ANR	9167540	Identifier	split_size		9166596	1					
ANR	9167541	CompoundStatement		321:40:5709:5709	9166596	1					
ANR	9167542	ExpressionStatement	size = split_size	325:12:5801:5818	9166596	0	True				
ANR	9167543	AssignmentExpression	size = split_size		9166596	0		=			
ANR	9167544	Identifier	size		9166596	0					
ANR	9167545	Identifier	split_size		9166596	1					
ANR	9167546	IfStatement	if ( split )		9166596	2					
ANR	9167547	Condition	split	329:12:5844:5848	9166596	0	True				
ANR	9167548	Identifier	split		9166596	0					
ANR	9167549	CompoundStatement		327:19:5774:5774	9166596	1					
ANR	9167550	ExpressionStatement	"snprintf ( desc_filename , PATH_MAX , ""%s-%c%03d%s"" , prefix , flat ? 'f' : 's' , ++ idx , postfix )"	331:12:5866:5977	9166596	0	True				
ANR	9167551	CallExpression	"snprintf ( desc_filename , PATH_MAX , ""%s-%c%03d%s"" , prefix , flat ? 'f' : 's' , ++ idx , postfix )"		9166596	0					
ANR	9167552	Callee	snprintf		9166596	0					
ANR	9167553	Identifier	snprintf		9166596	0					
ANR	9167554	ArgumentList	desc_filename		9166596	1					
ANR	9167555	Argument	desc_filename		9166596	0					
ANR	9167556	Identifier	desc_filename		9166596	0					
ANR	9167557	Argument	PATH_MAX		9166596	1					
ANR	9167558	Identifier	PATH_MAX		9166596	0					
ANR	9167559	Argument	"""%s-%c%03d%s"""		9166596	2					
ANR	9167560	PrimaryExpression	"""%s-%c%03d%s"""		9166596	0					
ANR	9167561	Argument	prefix		9166596	3					
ANR	9167562	Identifier	prefix		9166596	0					
ANR	9167563	Argument	flat ? 'f' : 's'		9166596	4					
ANR	9167564	ConditionalExpression	flat ? 'f' : 's'		9166596	0					
ANR	9167565	Condition	flat		9166596	0					
ANR	9167566	Identifier	flat		9166596	0					
ANR	9167567	PrimaryExpression	'f'		9166596	1					
ANR	9167568	PrimaryExpression	's'		9166596	2					
ANR	9167569	Argument	++ idx		9166596	5					
ANR	9167570	UnaryExpression	++ idx		9166596	0					
ANR	9167571	IncDec	++		9166596	0					
ANR	9167572	Identifier	idx		9166596	1					
ANR	9167573	Argument	postfix		9166596	6					
ANR	9167574	Identifier	postfix		9166596	0					
ANR	9167575	ElseStatement	else		9166596	0					
ANR	9167576	IfStatement	if ( flat )		9166596	0					
ANR	9167577	Condition	flat	335:19:5999:6002	9166596	0	True				
ANR	9167578	Identifier	flat		9166596	0					
ANR	9167579	CompoundStatement		333:25:5928:5928	9166596	1					
ANR	9167580	ExpressionStatement	"snprintf ( desc_filename , PATH_MAX , ""%s-flat%s"" , prefix , postfix )"	337:12:6020:6083	9166596	0	True				
ANR	9167581	CallExpression	"snprintf ( desc_filename , PATH_MAX , ""%s-flat%s"" , prefix , postfix )"		9166596	0					
ANR	9167582	Callee	snprintf		9166596	0					
ANR	9167583	Identifier	snprintf		9166596	0					
ANR	9167584	ArgumentList	desc_filename		9166596	1					
ANR	9167585	Argument	desc_filename		9166596	0					
ANR	9167586	Identifier	desc_filename		9166596	0					
ANR	9167587	Argument	PATH_MAX		9166596	1					
ANR	9167588	Identifier	PATH_MAX		9166596	0					
ANR	9167589	Argument	"""%s-flat%s"""		9166596	2					
ANR	9167590	PrimaryExpression	"""%s-flat%s"""		9166596	0					
ANR	9167591	Argument	prefix		9166596	3					
ANR	9167592	Identifier	prefix		9166596	0					
ANR	9167593	Argument	postfix		9166596	4					
ANR	9167594	Identifier	postfix		9166596	0					
ANR	9167595	ElseStatement	else		9166596	0					
ANR	9167596	CompoundStatement		337:15:6024:6024	9166596	0					
ANR	9167597	ExpressionStatement	"snprintf ( desc_filename , PATH_MAX , ""%s%s"" , prefix , postfix )"	341:12:6116:6174	9166596	0	True				
ANR	9167598	CallExpression	"snprintf ( desc_filename , PATH_MAX , ""%s%s"" , prefix , postfix )"		9166596	0					
ANR	9167599	Callee	snprintf		9166596	0					
ANR	9167600	Identifier	snprintf		9166596	0					
ANR	9167601	ArgumentList	desc_filename		9166596	1					
ANR	9167602	Argument	desc_filename		9166596	0					
ANR	9167603	Identifier	desc_filename		9166596	0					
ANR	9167604	Argument	PATH_MAX		9166596	1					
ANR	9167605	Identifier	PATH_MAX		9166596	0					
ANR	9167606	Argument	"""%s%s"""		9166596	2					
ANR	9167607	PrimaryExpression	"""%s%s"""		9166596	0					
ANR	9167608	Argument	prefix		9166596	3					
ANR	9167609	Identifier	prefix		9166596	0					
ANR	9167610	Argument	postfix		9166596	4					
ANR	9167611	Identifier	postfix		9166596	0					
ANR	9167612	ExpressionStatement	"snprintf ( ext_filename , PATH_MAX , ""%s%s"" , path , desc_filename )"	345:8:6196:6257	9166596	3	True				
ANR	9167613	CallExpression	"snprintf ( ext_filename , PATH_MAX , ""%s%s"" , path , desc_filename )"		9166596	0					
ANR	9167614	Callee	snprintf		9166596	0					
ANR	9167615	Identifier	snprintf		9166596	0					
ANR	9167616	ArgumentList	ext_filename		9166596	1					
ANR	9167617	Argument	ext_filename		9166596	0					
ANR	9167618	Identifier	ext_filename		9166596	0					
ANR	9167619	Argument	PATH_MAX		9166596	1					
ANR	9167620	Identifier	PATH_MAX		9166596	0					
ANR	9167621	Argument	"""%s%s"""		9166596	2					
ANR	9167622	PrimaryExpression	"""%s%s"""		9166596	0					
ANR	9167623	Argument	path		9166596	3					
ANR	9167624	Identifier	path		9166596	0					
ANR	9167625	Argument	desc_filename		9166596	4					
ANR	9167626	Identifier	desc_filename		9166596	0					
ANR	9167627	IfStatement	"if ( vmdk_create_extent ( ext_filename , size , flat , compress , zeroed_grain , opts , errp ) )"		9166596	4					
ANR	9167628	Condition	"vmdk_create_extent ( ext_filename , size , flat , compress , zeroed_grain , opts , errp )"	349:12:6274:6385	9166596	0	True				
ANR	9167629	CallExpression	"vmdk_create_extent ( ext_filename , size , flat , compress , zeroed_grain , opts , errp )"		9166596	0					
ANR	9167630	Callee	vmdk_create_extent		9166596	0					
ANR	9167631	Identifier	vmdk_create_extent		9166596	0					
ANR	9167632	ArgumentList	ext_filename		9166596	1					
ANR	9167633	Argument	ext_filename		9166596	0					
ANR	9167634	Identifier	ext_filename		9166596	0					
ANR	9167635	Argument	size		9166596	1					
ANR	9167636	Identifier	size		9166596	0					
ANR	9167637	Argument	flat		9166596	2					
ANR	9167638	Identifier	flat		9166596	0					
ANR	9167639	Argument	compress		9166596	3					
ANR	9167640	Identifier	compress		9166596	0					
ANR	9167641	Argument	zeroed_grain		9166596	4					
ANR	9167642	Identifier	zeroed_grain		9166596	0					
ANR	9167643	Argument	opts		9166596	5					
ANR	9167644	Identifier	opts		9166596	0					
ANR	9167645	Argument	errp		9166596	6					
ANR	9167646	Identifier	errp		9166596	0					
ANR	9167647	CompoundStatement		349:74:6311:6311	9166596	1					
ANR	9167648	ExpressionStatement	ret = - EINVAL	353:12:6403:6416	9166596	0	True				
ANR	9167649	AssignmentExpression	ret = - EINVAL		9166596	0		=			
ANR	9167650	Identifier	ret		9166596	0					
ANR	9167651	UnaryOperationExpression	- EINVAL		9166596	1					
ANR	9167652	UnaryOperator	-		9166596	0					
ANR	9167653	Identifier	EINVAL		9166596	1					
ANR	9167654	GotoStatement	goto exit ;	355:12:6431:6440	9166596	1	True				
ANR	9167655	Identifier	exit		9166596	0					
ANR	9167656	ExpressionStatement	filesize -= size	359:8:6462:6478	9166596	5	True				
ANR	9167657	AssignmentExpression	filesize -= size		9166596	0		-=			
ANR	9167658	Identifier	filesize		9166596	0					
ANR	9167659	Identifier	size		9166596	1					
ANR	9167660	ExpressionStatement	"snprintf ( desc_line , BUF_SIZE , desc_extent_line , size / BDRV_SECTOR_SIZE , desc_filename )"	365:8:6530:6638	9166596	6	True				
ANR	9167661	CallExpression	"snprintf ( desc_line , BUF_SIZE , desc_extent_line , size / BDRV_SECTOR_SIZE , desc_filename )"		9166596	0					
ANR	9167662	Callee	snprintf		9166596	0					
ANR	9167663	Identifier	snprintf		9166596	0					
ANR	9167664	ArgumentList	desc_line		9166596	1					
ANR	9167665	Argument	desc_line		9166596	0					
ANR	9167666	Identifier	desc_line		9166596	0					
ANR	9167667	Argument	BUF_SIZE		9166596	1					
ANR	9167668	Identifier	BUF_SIZE		9166596	0					
ANR	9167669	Argument	desc_extent_line		9166596	2					
ANR	9167670	Identifier	desc_extent_line		9166596	0					
ANR	9167671	Argument	size / BDRV_SECTOR_SIZE		9166596	3					
ANR	9167672	MultiplicativeExpression	size / BDRV_SECTOR_SIZE		9166596	0		/			
ANR	9167673	Identifier	size		9166596	0					
ANR	9167674	Identifier	BDRV_SECTOR_SIZE		9166596	1					
ANR	9167675	Argument	desc_filename		9166596	4					
ANR	9167676	Identifier	desc_filename		9166596	0					
ANR	9167677	ExpressionStatement	"g_string_append ( ext_desc_lines , desc_line )"	369:8:6649:6691	9166596	7	True				
ANR	9167678	CallExpression	"g_string_append ( ext_desc_lines , desc_line )"		9166596	0					
ANR	9167679	Callee	g_string_append		9166596	0					
ANR	9167680	Identifier	g_string_append		9166596	0					
ANR	9167681	ArgumentList	ext_desc_lines		9166596	1					
ANR	9167682	Argument	ext_desc_lines		9166596	0					
ANR	9167683	Identifier	ext_desc_lines		9166596	0					
ANR	9167684	Argument	desc_line		9166596	1					
ANR	9167685	Identifier	desc_line		9166596	0					
ANR	9167686	ExpressionStatement	"desc = g_strdup_printf ( desc_template , g_random_int ( ) , parent_cid , fmt , parent_desc_line , ext_desc_lines -> str , hw_version , total_size / ( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE ) , number_heads , adapter_type )"	375:4:6741:7236	9166596	79	True				
ANR	9167687	AssignmentExpression	"desc = g_strdup_printf ( desc_template , g_random_int ( ) , parent_cid , fmt , parent_desc_line , ext_desc_lines -> str , hw_version , total_size / ( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE ) , number_heads , adapter_type )"		9166596	0		=			
ANR	9167688	Identifier	desc		9166596	0					
ANR	9167689	CallExpression	"g_strdup_printf ( desc_template , g_random_int ( ) , parent_cid , fmt , parent_desc_line , ext_desc_lines -> str , hw_version , total_size / ( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE ) , number_heads , adapter_type )"		9166596	1					
ANR	9167690	Callee	g_strdup_printf		9166596	0					
ANR	9167691	Identifier	g_strdup_printf		9166596	0					
ANR	9167692	ArgumentList	desc_template		9166596	1					
ANR	9167693	Argument	desc_template		9166596	0					
ANR	9167694	Identifier	desc_template		9166596	0					
ANR	9167695	Argument	g_random_int ( )		9166596	1					
ANR	9167696	CallExpression	g_random_int ( )		9166596	0					
ANR	9167697	Callee	g_random_int		9166596	0					
ANR	9167698	Identifier	g_random_int		9166596	0					
ANR	9167699	ArgumentList			9166596	1					
ANR	9167700	Argument	parent_cid		9166596	2					
ANR	9167701	Identifier	parent_cid		9166596	0					
ANR	9167702	Argument	fmt		9166596	3					
ANR	9167703	Identifier	fmt		9166596	0					
ANR	9167704	Argument	parent_desc_line		9166596	4					
ANR	9167705	Identifier	parent_desc_line		9166596	0					
ANR	9167706	Argument	ext_desc_lines -> str		9166596	5					
ANR	9167707	PtrMemberAccess	ext_desc_lines -> str		9166596	0					
ANR	9167708	Identifier	ext_desc_lines		9166596	0					
ANR	9167709	Identifier	str		9166596	1					
ANR	9167710	Argument	hw_version		9166596	6					
ANR	9167711	Identifier	hw_version		9166596	0					
ANR	9167712	Argument	total_size / ( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE )		9166596	7					
ANR	9167713	MultiplicativeExpression	total_size / ( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE )		9166596	0		/			
ANR	9167714	Identifier	total_size		9166596	0					
ANR	9167715	CastExpression	( int64_t ) ( 63 * number_heads * BDRV_SECTOR_SIZE )		9166596	1					
ANR	9167716	CastTarget	int64_t		9166596	0					
ANR	9167717	MultiplicativeExpression	63 * number_heads * BDRV_SECTOR_SIZE		9166596	1		*			
ANR	9167718	PrimaryExpression	63		9166596	0					
ANR	9167719	MultiplicativeExpression	number_heads * BDRV_SECTOR_SIZE		9166596	1		*			
ANR	9167720	Identifier	number_heads		9166596	0					
ANR	9167721	Identifier	BDRV_SECTOR_SIZE		9166596	1					
ANR	9167722	Argument	number_heads		9166596	8					
ANR	9167723	Identifier	number_heads		9166596	0					
ANR	9167724	Argument	adapter_type		9166596	9					
ANR	9167725	Identifier	adapter_type		9166596	0					
ANR	9167726	ExpressionStatement	desc_len = strlen ( desc )	397:4:7243:7266	9166596	80	True				
ANR	9167727	AssignmentExpression	desc_len = strlen ( desc )		9166596	0		=			
ANR	9167728	Identifier	desc_len		9166596	0					
ANR	9167729	CallExpression	strlen ( desc )		9166596	1					
ANR	9167730	Callee	strlen		9166596	0					
ANR	9167731	Identifier	strlen		9166596	0					
ANR	9167732	ArgumentList	desc		9166596	1					
ANR	9167733	Argument	desc		9166596	0					
ANR	9167734	Identifier	desc		9166596	0					
ANR	9167735	IfStatement	if ( ! split && ! flat )		9166596	81					
ANR	9167736	Condition	! split && ! flat	401:8:7318:7332	9166596	0	True				
ANR	9167737	AndExpression	! split && ! flat		9166596	0		&&			
ANR	9167738	UnaryOperationExpression	! split		9166596	0					
ANR	9167739	UnaryOperator	!		9166596	0					
ANR	9167740	Identifier	split		9166596	1					
ANR	9167741	UnaryOperationExpression	! flat		9166596	1					
ANR	9167742	UnaryOperator	!		9166596	0					
ANR	9167743	Identifier	flat		9166596	1					
ANR	9167744	CompoundStatement		399:25:7258:7258	9166596	1					
ANR	9167745	ExpressionStatement	desc_offset = 0x200	403:8:7346:7365	9166596	0	True				
ANR	9167746	AssignmentExpression	desc_offset = 0x200		9166596	0		=			
ANR	9167747	Identifier	desc_offset		9166596	0					
ANR	9167748	PrimaryExpression	0x200		9166596	1					
ANR	9167749	ElseStatement	else		9166596	0					
ANR	9167750	CompoundStatement		403:11:7302:7302	9166596	0					
ANR	9167751	ExpressionStatement	"ret = bdrv_create_file ( filename , opts , & local_err )"	407:8:7390:7440	9166596	0	True				
ANR	9167752	AssignmentExpression	"ret = bdrv_create_file ( filename , opts , & local_err )"		9166596	0		=			
ANR	9167753	Identifier	ret		9166596	0					
ANR	9167754	CallExpression	"bdrv_create_file ( filename , opts , & local_err )"		9166596	1					
ANR	9167755	Callee	bdrv_create_file		9166596	0					
ANR	9167756	Identifier	bdrv_create_file		9166596	0					
ANR	9167757	ArgumentList	filename		9166596	1					
ANR	9167758	Argument	filename		9166596	0					
ANR	9167759	Identifier	filename		9166596	0					
ANR	9167760	Argument	opts		9166596	1					
ANR	9167761	Identifier	opts		9166596	0					
ANR	9167762	Argument	& local_err		9166596	2					
ANR	9167763	UnaryOperationExpression	& local_err		9166596	0					
ANR	9167764	UnaryOperator	&		9166596	0					
ANR	9167765	Identifier	local_err		9166596	1					
ANR	9167766	IfStatement	if ( ret < 0 )		9166596	1					
ANR	9167767	Condition	ret < 0	409:12:7455:7461	9166596	0	True				
ANR	9167768	RelationalExpression	ret < 0		9166596	0		<			
ANR	9167769	Identifier	ret		9166596	0					
ANR	9167770	PrimaryExpression	0		9166596	1					
ANR	9167771	CompoundStatement		407:21:7387:7387	9166596	1					
ANR	9167772	ExpressionStatement	"error_propagate ( errp , local_err )"	411:12:7479:7511	9166596	0	True				
ANR	9167773	CallExpression	"error_propagate ( errp , local_err )"		9166596	0					
ANR	9167774	Callee	error_propagate		9166596	0					
ANR	9167775	Identifier	error_propagate		9166596	0					
ANR	9167776	ArgumentList	errp		9166596	1					
ANR	9167777	Argument	errp		9166596	0					
ANR	9167778	Identifier	errp		9166596	0					
ANR	9167779	Argument	local_err		9166596	1					
ANR	9167780	Identifier	local_err		9166596	0					
ANR	9167781	GotoStatement	goto exit ;	413:12:7526:7535	9166596	1	True				
ANR	9167782	Identifier	exit		9166596	0					
ANR	9167783	ExpressionStatement	"new_blk = blk_new_open ( filename , NULL , NULL , BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL , & local_err )"	421:4:7562:7721	9166596	82	True				
ANR	9167784	AssignmentExpression	"new_blk = blk_new_open ( filename , NULL , NULL , BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL , & local_err )"		9166596	0		=			
ANR	9167785	Identifier	new_blk		9166596	0					
ANR	9167786	CallExpression	"blk_new_open ( filename , NULL , NULL , BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL , & local_err )"		9166596	1					
ANR	9167787	Callee	blk_new_open		9166596	0					
ANR	9167788	Identifier	blk_new_open		9166596	0					
ANR	9167789	ArgumentList	filename		9166596	1					
ANR	9167790	Argument	filename		9166596	0					
ANR	9167791	Identifier	filename		9166596	0					
ANR	9167792	Argument	NULL		9166596	1					
ANR	9167793	Identifier	NULL		9166596	0					
ANR	9167794	Argument	NULL		9166596	2					
ANR	9167795	Identifier	NULL		9166596	0					
ANR	9167796	Argument	BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL		9166596	3					
ANR	9167797	InclusiveOrExpression	BDRV_O_RDWR | BDRV_O_RESIZE | BDRV_O_PROTOCOL		9166596	0		|			
ANR	9167798	Identifier	BDRV_O_RDWR		9166596	0					
ANR	9167799	InclusiveOrExpression	BDRV_O_RESIZE | BDRV_O_PROTOCOL		9166596	1		|			
ANR	9167800	Identifier	BDRV_O_RESIZE		9166596	0					
ANR	9167801	Identifier	BDRV_O_PROTOCOL		9166596	1					
ANR	9167802	Argument	& local_err		9166596	4					
ANR	9167803	UnaryOperationExpression	& local_err		9166596	0					
ANR	9167804	UnaryOperator	&		9166596	0					
ANR	9167805	Identifier	local_err		9166596	1					
ANR	9167806	IfStatement	if ( new_blk == NULL )		9166596	83					
ANR	9167807	Condition	new_blk == NULL	427:8:7732:7746	9166596	0	True				
ANR	9167808	EqualityExpression	new_blk == NULL		9166596	0		==			
ANR	9167809	Identifier	new_blk		9166596	0					
ANR	9167810	Identifier	NULL		9166596	1					
ANR	9167811	CompoundStatement		425:25:7672:7672	9166596	1					
ANR	9167812	ExpressionStatement	"error_propagate ( errp , local_err )"	429:8:7760:7792	9166596	0	True				
ANR	9167813	CallExpression	"error_propagate ( errp , local_err )"		9166596	0					
ANR	9167814	Callee	error_propagate		9166596	0					
ANR	9167815	Identifier	error_propagate		9166596	0					
ANR	9167816	ArgumentList	errp		9166596	1					
ANR	9167817	Argument	errp		9166596	0					
ANR	9167818	Identifier	errp		9166596	0					
ANR	9167819	Argument	local_err		9166596	1					
ANR	9167820	Identifier	local_err		9166596	0					
ANR	9167821	ExpressionStatement	ret = - EIO	431:8:7803:7813	9166596	1	True				
ANR	9167822	AssignmentExpression	ret = - EIO		9166596	0		=			
ANR	9167823	Identifier	ret		9166596	0					
ANR	9167824	UnaryOperationExpression	- EIO		9166596	1					
ANR	9167825	UnaryOperator	-		9166596	0					
ANR	9167826	Identifier	EIO		9166596	1					
ANR	9167827	GotoStatement	goto exit ;	433:8:7824:7833	9166596	2	True				
ANR	9167828	Identifier	exit		9166596	0					
ANR	9167829	ExpressionStatement	"blk_set_allow_write_beyond_eof ( new_blk , true )"	439:4:7849:7894	9166596	84	True				
ANR	9167830	CallExpression	"blk_set_allow_write_beyond_eof ( new_blk , true )"		9166596	0					
ANR	9167831	Callee	blk_set_allow_write_beyond_eof		9166596	0					
ANR	9167832	Identifier	blk_set_allow_write_beyond_eof		9166596	0					
ANR	9167833	ArgumentList	new_blk		9166596	1					
ANR	9167834	Argument	new_blk		9166596	0					
ANR	9167835	Identifier	new_blk		9166596	0					
ANR	9167836	Argument	true		9166596	1					
ANR	9167837	Identifier	true		9166596	0					
ANR	9167838	ExpressionStatement	"ret = blk_pwrite ( new_blk , desc_offset , desc , desc_len , 0 )"	443:4:7903:7960	9166596	85	True				
ANR	9167839	AssignmentExpression	"ret = blk_pwrite ( new_blk , desc_offset , desc , desc_len , 0 )"		9166596	0		=			
ANR	9167840	Identifier	ret		9166596	0					
ANR	9167841	CallExpression	"blk_pwrite ( new_blk , desc_offset , desc , desc_len , 0 )"		9166596	1					
ANR	9167842	Callee	blk_pwrite		9166596	0					
ANR	9167843	Identifier	blk_pwrite		9166596	0					
ANR	9167844	ArgumentList	new_blk		9166596	1					
ANR	9167845	Argument	new_blk		9166596	0					
ANR	9167846	Identifier	new_blk		9166596	0					
ANR	9167847	Argument	desc_offset		9166596	1					
ANR	9167848	Identifier	desc_offset		9166596	0					
ANR	9167849	Argument	desc		9166596	2					
ANR	9167850	Identifier	desc		9166596	0					
ANR	9167851	Argument	desc_len		9166596	3					
ANR	9167852	Identifier	desc_len		9166596	0					
ANR	9167853	Argument	0		9166596	4					
ANR	9167854	PrimaryExpression	0		9166596	0					
ANR	9167855	IfStatement	if ( ret < 0 )		9166596	86					
ANR	9167856	Condition	ret < 0	445:8:7971:7977	9166596	0	True				
ANR	9167857	RelationalExpression	ret < 0		9166596	0		<			
ANR	9167858	Identifier	ret		9166596	0					
ANR	9167859	PrimaryExpression	0		9166596	1					
ANR	9167860	CompoundStatement		443:17:7903:7903	9166596	1					
ANR	9167861	ExpressionStatement	"error_setg_errno ( errp , - ret , ""Could not write description"" )"	447:8:7991:8050	9166596	0	True				
ANR	9167862	CallExpression	"error_setg_errno ( errp , - ret , ""Could not write description"" )"		9166596	0					
ANR	9167863	Callee	error_setg_errno		9166596	0					
ANR	9167864	Identifier	error_setg_errno		9166596	0					
ANR	9167865	ArgumentList	errp		9166596	1					
ANR	9167866	Argument	errp		9166596	0					
ANR	9167867	Identifier	errp		9166596	0					
ANR	9167868	Argument	- ret		9166596	1					
ANR	9167869	UnaryOperationExpression	- ret		9166596	0					
ANR	9167870	UnaryOperator	-		9166596	0					
ANR	9167871	Identifier	ret		9166596	1					
ANR	9167872	Argument	"""Could not write description"""		9166596	2					
ANR	9167873	PrimaryExpression	"""Could not write description"""		9166596	0					
ANR	9167874	GotoStatement	goto exit ;	449:8:8061:8070	9166596	1	True				
ANR	9167875	Identifier	exit		9166596	0					
ANR	9167876	IfStatement	if ( desc_offset == 0 )		9166596	87					
ANR	9167877	Condition	desc_offset == 0	457:8:8199:8214	9166596	0	True				
ANR	9167878	EqualityExpression	desc_offset == 0		9166596	0		==			
ANR	9167879	Identifier	desc_offset		9166596	0					
ANR	9167880	PrimaryExpression	0		9166596	1					
ANR	9167881	CompoundStatement		455:26:8140:8140	9166596	1					
ANR	9167882	ExpressionStatement	"ret = blk_truncate ( new_blk , desc_len , PREALLOC_MODE_OFF , errp )"	459:8:8228:8290	9166596	0	True				
ANR	9167883	AssignmentExpression	"ret = blk_truncate ( new_blk , desc_len , PREALLOC_MODE_OFF , errp )"		9166596	0		=			
ANR	9167884	Identifier	ret		9166596	0					
ANR	9167885	CallExpression	"blk_truncate ( new_blk , desc_len , PREALLOC_MODE_OFF , errp )"		9166596	1					
ANR	9167886	Callee	blk_truncate		9166596	0					
ANR	9167887	Identifier	blk_truncate		9166596	0					
ANR	9167888	ArgumentList	new_blk		9166596	1					
ANR	9167889	Argument	new_blk		9166596	0					
ANR	9167890	Identifier	new_blk		9166596	0					
ANR	9167891	Argument	desc_len		9166596	1					
ANR	9167892	Identifier	desc_len		9166596	0					
ANR	9167893	Argument	PREALLOC_MODE_OFF		9166596	2					
ANR	9167894	Identifier	PREALLOC_MODE_OFF		9166596	0					
ANR	9167895	Argument	errp		9166596	3					
ANR	9167896	Identifier	errp		9166596	0					
ANR	9167897	Label	exit :	463:0:8300:8304	9166596	88	True				
ANR	9167898	Identifier	exit		9166596	0					
ANR	9167899	IfStatement	if ( new_blk )		9166596	89					
ANR	9167900	Condition	new_blk	465:8:8315:8321	9166596	0	True				
ANR	9167901	Identifier	new_blk		9166596	0					
ANR	9167902	CompoundStatement		463:17:8247:8247	9166596	1					
ANR	9167903	ExpressionStatement	blk_unref ( new_blk )	467:8:8335:8353	9166596	0	True				
ANR	9167904	CallExpression	blk_unref ( new_blk )		9166596	0					
ANR	9167905	Callee	blk_unref		9166596	0					
ANR	9167906	Identifier	blk_unref		9166596	0					
ANR	9167907	ArgumentList	new_blk		9166596	1					
ANR	9167908	Argument	new_blk		9166596	0					
ANR	9167909	Identifier	new_blk		9166596	0					
ANR	9167910	ExpressionStatement	g_free ( adapter_type )	471:4:8367:8387	9166596	90	True				
ANR	9167911	CallExpression	g_free ( adapter_type )		9166596	0					
ANR	9167912	Callee	g_free		9166596	0					
ANR	9167913	Identifier	g_free		9166596	0					
ANR	9167914	ArgumentList	adapter_type		9166596	1					
ANR	9167915	Argument	adapter_type		9166596	0					
ANR	9167916	Identifier	adapter_type		9166596	0					
ANR	9167917	ExpressionStatement	g_free ( backing_file )	473:4:8394:8414	9166596	91	True				
ANR	9167918	CallExpression	g_free ( backing_file )		9166596	0					
ANR	9167919	Callee	g_free		9166596	0					
ANR	9167920	Identifier	g_free		9166596	0					
ANR	9167921	ArgumentList	backing_file		9166596	1					
ANR	9167922	Argument	backing_file		9166596	0					
ANR	9167923	Identifier	backing_file		9166596	0					
ANR	9167924	ExpressionStatement	g_free ( hw_version )	475:4:8421:8439	9166596	92	True				
ANR	9167925	CallExpression	g_free ( hw_version )		9166596	0					
ANR	9167926	Callee	g_free		9166596	0					
ANR	9167927	Identifier	g_free		9166596	0					
ANR	9167928	ArgumentList	hw_version		9166596	1					
ANR	9167929	Argument	hw_version		9166596	0					
ANR	9167930	Identifier	hw_version		9166596	0					
ANR	9167931	ExpressionStatement	g_free ( fmt )	477:4:8446:8457	9166596	93	True				
ANR	9167932	CallExpression	g_free ( fmt )		9166596	0					
ANR	9167933	Callee	g_free		9166596	0					
ANR	9167934	Identifier	g_free		9166596	0					
ANR	9167935	ArgumentList	fmt		9166596	1					
ANR	9167936	Argument	fmt		9166596	0					
ANR	9167937	Identifier	fmt		9166596	0					
ANR	9167938	ExpressionStatement	g_free ( desc )	479:4:8464:8476	9166596	94	True				
ANR	9167939	CallExpression	g_free ( desc )		9166596	0					
ANR	9167940	Callee	g_free		9166596	0					
ANR	9167941	Identifier	g_free		9166596	0					
ANR	9167942	ArgumentList	desc		9166596	1					
ANR	9167943	Argument	desc		9166596	0					
ANR	9167944	Identifier	desc		9166596	0					
ANR	9167945	ExpressionStatement	g_free ( path )	481:4:8483:8495	9166596	95	True				
ANR	9167946	CallExpression	g_free ( path )		9166596	0					
ANR	9167947	Callee	g_free		9166596	0					
ANR	9167948	Identifier	g_free		9166596	0					
ANR	9167949	ArgumentList	path		9166596	1					
ANR	9167950	Argument	path		9166596	0					
ANR	9167951	Identifier	path		9166596	0					
ANR	9167952	ExpressionStatement	g_free ( prefix )	483:4:8502:8516	9166596	96	True				
ANR	9167953	CallExpression	g_free ( prefix )		9166596	0					
ANR	9167954	Callee	g_free		9166596	0					
ANR	9167955	Identifier	g_free		9166596	0					
ANR	9167956	ArgumentList	prefix		9166596	1					
ANR	9167957	Argument	prefix		9166596	0					
ANR	9167958	Identifier	prefix		9166596	0					
ANR	9167959	ExpressionStatement	g_free ( postfix )	485:4:8523:8538	9166596	97	True				
ANR	9167960	CallExpression	g_free ( postfix )		9166596	0					
ANR	9167961	Callee	g_free		9166596	0					
ANR	9167962	Identifier	g_free		9166596	0					
ANR	9167963	ArgumentList	postfix		9166596	1					
ANR	9167964	Argument	postfix		9166596	0					
ANR	9167965	Identifier	postfix		9166596	0					
ANR	9167966	ExpressionStatement	g_free ( desc_line )	487:4:8545:8562	9166596	98	True				
ANR	9167967	CallExpression	g_free ( desc_line )		9166596	0					
ANR	9167968	Callee	g_free		9166596	0					
ANR	9167969	Identifier	g_free		9166596	0					
ANR	9167970	ArgumentList	desc_line		9166596	1					
ANR	9167971	Argument	desc_line		9166596	0					
ANR	9167972	Identifier	desc_line		9166596	0					
ANR	9167973	ExpressionStatement	g_free ( ext_filename )	489:4:8569:8589	9166596	99	True				
ANR	9167974	CallExpression	g_free ( ext_filename )		9166596	0					
ANR	9167975	Callee	g_free		9166596	0					
ANR	9167976	Identifier	g_free		9166596	0					
ANR	9167977	ArgumentList	ext_filename		9166596	1					
ANR	9167978	Argument	ext_filename		9166596	0					
ANR	9167979	Identifier	ext_filename		9166596	0					
ANR	9167980	ExpressionStatement	g_free ( desc_filename )	491:4:8596:8617	9166596	100	True				
ANR	9167981	CallExpression	g_free ( desc_filename )		9166596	0					
ANR	9167982	Callee	g_free		9166596	0					
ANR	9167983	Identifier	g_free		9166596	0					
ANR	9167984	ArgumentList	desc_filename		9166596	1					
ANR	9167985	Argument	desc_filename		9166596	0					
ANR	9167986	Identifier	desc_filename		9166596	0					
ANR	9167987	ExpressionStatement	g_free ( parent_desc_line )	493:4:8624:8648	9166596	101	True				
ANR	9167988	CallExpression	g_free ( parent_desc_line )		9166596	0					
ANR	9167989	Callee	g_free		9166596	0					
ANR	9167990	Identifier	g_free		9166596	0					
ANR	9167991	ArgumentList	parent_desc_line		9166596	1					
ANR	9167992	Argument	parent_desc_line		9166596	0					
ANR	9167993	Identifier	parent_desc_line		9166596	0					
ANR	9167994	ExpressionStatement	"g_string_free ( ext_desc_lines , true )"	495:4:8655:8690	9166596	102	True				
ANR	9167995	CallExpression	"g_string_free ( ext_desc_lines , true )"		9166596	0					
ANR	9167996	Callee	g_string_free		9166596	0					
ANR	9167997	Identifier	g_string_free		9166596	0					
ANR	9167998	ArgumentList	ext_desc_lines		9166596	1					
ANR	9167999	Argument	ext_desc_lines		9166596	0					
ANR	9168000	Identifier	ext_desc_lines		9166596	0					
ANR	9168001	Argument	true		9166596	1					
ANR	9168002	Identifier	true		9166596	0					
ANR	9168003	ReturnStatement	return ret ;	497:4:8697:8707	9166596	103	True				
ANR	9168004	Identifier	ret		9166596	0					
ANR	9168005	ReturnType	static int		9166596	1					
ANR	9168006	Identifier	vmdk_create		9166596	2					
ANR	9168007	ParameterList	"const char * filename , QemuOpts * opts , Error * * errp"		9166596	3					
ANR	9168008	Parameter	const char * filename	1:23:23:42	9166596	0	True				
ANR	9168009	ParameterType	const char *		9166596	0					
ANR	9168010	Identifier	filename		9166596	1					
ANR	9168011	Parameter	QemuOpts * opts	1:45:45:58	9166596	1	True				
ANR	9168012	ParameterType	QemuOpts *		9166596	0					
ANR	9168013	Identifier	opts		9166596	1					
ANR	9168014	Parameter	Error * * errp	1:61:61:72	9166596	2	True				
ANR	9168015	ParameterType	Error * *		9166596	0					
ANR	9168016	Identifier	errp		9166596	1					
ANR	9168017	CFGEntryNode	ENTRY		9166596		True				
ANR	9168018	CFGExitNode	EXIT		9166596		True				
ANR	9168019	Symbol	backing_file		9166596						
ANR	9168020	Symbol	hw_version		9166596						
ANR	9168021	Symbol	blk_truncate		9166596						
ANR	9168022	Symbol	errp		9166596						
ANR	9168023	Symbol	zeroed_grain		9166596						
ANR	9168024	Symbol	prefix		9166596						
ANR	9168025	Symbol	filename_decompose		9166596						
ANR	9168026	Symbol	ENOTSUP		9166596						
ANR	9168027	Symbol	bdrv_create_file		9166596						
ANR	9168028	Symbol	g_random_int		9166596						
ANR	9168029	Symbol	qemu_opt_get_del		9166596						
ANR	9168030	Symbol	fmt		9166596						
ANR	9168031	Symbol	blk_new_open		9166596						
ANR	9168032	Symbol	path		9166596						
ANR	9168033	Symbol	strlen		9166596						
ANR	9168034	Symbol	split		9166596						
ANR	9168035	Symbol	opts		9166596						
ANR	9168036	Symbol	vmdk_create_extent		9166596						
ANR	9168037	Symbol	qemu_opt_get_size_del		9166596						
ANR	9168038	Symbol	ret		9166596						
ANR	9168039	Symbol	strcmp		9166596						
ANR	9168040	Symbol	* ext_desc_lines		9166596						
ANR	9168041	Symbol	NULL		9166596						
ANR	9168042	Symbol	compress		9166596						
ANR	9168043	Symbol	* blk_bs ( blk ) -> drv		9166596						
ANR	9168044	Symbol	ROUND_UP		9166596						
ANR	9168045	Symbol	desc_extent_line		9166596						
ANR	9168046	Symbol	number_heads		9166596						
ANR	9168047	Symbol	EIO		9166596						
ANR	9168048	Symbol	BDRV_O_RESIZE		9166596						
ANR	9168049	Symbol	blk_bs		9166596						
ANR	9168050	Symbol	blk_bs ( blk ) -> drv		9166596						
ANR	9168051	Symbol	* blk_bs		9166596						
ANR	9168052	Symbol	filename		9166596						
ANR	9168053	Symbol	blk_bs ( blk ) -> drv -> format_name		9166596						
ANR	9168054	Symbol	size		9166596						
ANR	9168055	Symbol	split_size		9166596						
ANR	9168056	Symbol	true		9166596						
ANR	9168057	Symbol	desc_line		9166596						
ANR	9168058	Symbol	BUF_SIZE		9166596						
ANR	9168059	Symbol	BLOCK_OPT_SUBFMT		9166596						
ANR	9168060	Symbol	g_malloc0		9166596						
ANR	9168061	Symbol	ext_desc_lines -> str		9166596						
ANR	9168062	Symbol	idx		9166596						
ANR	9168063	Symbol	local_err		9166596						
ANR	9168064	Symbol	desc		9166596						
ANR	9168065	Symbol	PREALLOC_MODE_OFF		9166596						
ANR	9168066	Symbol	new_blk		9166596						
ANR	9168067	Symbol	qemu_opt_get_bool_del		9166596						
ANR	9168068	Symbol	parent_cid		9166596						
ANR	9168069	Symbol	ext_desc_lines		9166596						
ANR	9168070	Symbol	BLOCK_OPT_ADAPTER_TYPE		9166596						
ANR	9168071	Symbol	desc_offset		9166596						
ANR	9168072	Symbol	filesize		9166596						
ANR	9168073	Symbol	BLOCK_OPT_ZEROED_GRAIN		9166596						
ANR	9168074	Symbol	BDRV_O_NO_BACKING		9166596						
ANR	9168075	Symbol	ext_filename		9166596						
ANR	9168076	Symbol	desc_len		9166596						
ANR	9168077	Symbol	BLOCK_OPT_BACKING_FILE		9166596						
ANR	9168078	Symbol	BLOCK_OPT_COMPAT6		9166596						
ANR	9168079	Symbol	g_string_new		9166596						
ANR	9168080	Symbol	flat		9166596						
ANR	9168081	Symbol	g_strdup		9166596						
ANR	9168082	Symbol	& local_err		9166596						
ANR	9168083	Symbol	g_new0		9166596						
ANR	9168084	Symbol	postfix		9166596						
ANR	9168085	Symbol	BDRV_O_PROTOCOL		9166596						
ANR	9168086	Symbol	blk		9166596						
ANR	9168087	Symbol	BLOCK_OPT_HWVERSION		9166596						
ANR	9168088	Symbol	PATH_MAX		9166596						
ANR	9168089	Symbol	blk_pwrite		9166596						
ANR	9168090	Symbol	total_size		9166596						
ANR	9168091	Symbol	false		9166596						
ANR	9168092	Symbol	* * blk_bs		9166596						
ANR	9168093	Symbol	adapter_type		9166596						
ANR	9168094	Symbol	ENOENT		9166596						
ANR	9168095	Symbol	BLOCK_OPT_SIZE		9166596						
ANR	9168096	Symbol	full_backing		9166596						
ANR	9168097	Symbol	desc_template		9166596						
ANR	9168098	Symbol	EINVAL		9166596						
ANR	9168099	Symbol	parent_desc_line		9166596						
ANR	9168100	Symbol	vmdk_read_cid		9166596						
ANR	9168101	Symbol	desc_filename		9166596						
ANR	9168102	Symbol	BDRV_SECTOR_SIZE		9166596						
ANR	9168103	Symbol	char		9166596						
ANR	9168104	Symbol	g_strdup_printf		9166596						
ANR	9168105	Symbol	BDRV_O_RDWR		9166596						
