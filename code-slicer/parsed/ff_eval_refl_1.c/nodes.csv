command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3268672	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_eval_refl_1.c								
ANR	3268673	Function	ff_eval_refl	1:0:0:1090							
ANR	3268674	FunctionDef	"ff_eval_refl (int * refl , const int16_t * coefs , AVCodecContext * avctx)"		3268673	0					
ANR	3268675	CompoundStatement		3:0:74:1090	3268673	0					
ANR	3268676	IdentifierDeclStatement	"int b , i , j ;"	5:4:81:92	3268673	0	True				
ANR	3268677	IdentifierDecl	b		3268673	0					
ANR	3268678	IdentifierDeclType	int		3268673	0					
ANR	3268679	Identifier	b		3268673	1					
ANR	3268680	IdentifierDecl	i		3268673	1					
ANR	3268681	IdentifierDeclType	int		3268673	0					
ANR	3268682	Identifier	i		3268673	1					
ANR	3268683	IdentifierDecl	j		3268673	2					
ANR	3268684	IdentifierDeclType	int		3268673	0					
ANR	3268685	Identifier	j		3268673	1					
ANR	3268686	IdentifierDeclStatement	int buffer1 [ LPC_ORDER ] ;	7:4:99:121	3268673	1	True				
ANR	3268687	IdentifierDecl	buffer1 [ LPC_ORDER ]		3268673	0					
ANR	3268688	IdentifierDeclType	int [ LPC_ORDER ]		3268673	0					
ANR	3268689	Identifier	buffer1		3268673	1					
ANR	3268690	Identifier	LPC_ORDER		3268673	2					
ANR	3268691	IdentifierDeclStatement	int buffer2 [ LPC_ORDER ] ;	9:4:128:150	3268673	2	True				
ANR	3268692	IdentifierDecl	buffer2 [ LPC_ORDER ]		3268673	0					
ANR	3268693	IdentifierDeclType	int [ LPC_ORDER ]		3268673	0					
ANR	3268694	Identifier	buffer2		3268673	1					
ANR	3268695	Identifier	LPC_ORDER		3268673	2					
ANR	3268696	IdentifierDeclStatement	int * bp1 = buffer1 ;	11:4:157:175	3268673	3	True				
ANR	3268697	IdentifierDecl	* bp1 = buffer1		3268673	0					
ANR	3268698	IdentifierDeclType	int *		3268673	0					
ANR	3268699	Identifier	bp1		3268673	1					
ANR	3268700	AssignmentExpression	* bp1 = buffer1		3268673	2		=			
ANR	3268701	Identifier	buffer1		3268673	0					
ANR	3268702	Identifier	buffer1		3268673	1					
ANR	3268703	IdentifierDeclStatement	int * bp2 = buffer2 ;	13:4:182:200	3268673	4	True				
ANR	3268704	IdentifierDecl	* bp2 = buffer2		3268673	0					
ANR	3268705	IdentifierDeclType	int *		3268673	0					
ANR	3268706	Identifier	bp2		3268673	1					
ANR	3268707	AssignmentExpression	* bp2 = buffer2		3268673	2		=			
ANR	3268708	Identifier	buffer2		3268673	0					
ANR	3268709	Identifier	buffer2		3268673	1					
ANR	3268710	ForStatement	for ( i = 0 ; i < LPC_ORDER ; i ++ )		3268673	5					
ANR	3268711	ForInit	i = 0 ;	17:9:214:217	3268673	0	True				
ANR	3268712	AssignmentExpression	i = 0		3268673	0		=			
ANR	3268713	Identifier	i		3268673	0					
ANR	3268714	PrimaryExpression	0		3268673	1					
ANR	3268715	Condition	i < LPC_ORDER	17:14:219:231	3268673	1	True				
ANR	3268716	RelationalExpression	i < LPC_ORDER		3268673	0		<			
ANR	3268717	Identifier	i		3268673	0					
ANR	3268718	Identifier	LPC_ORDER		3268673	1					
ANR	3268719	PostIncDecOperationExpression	i ++	17:29:234:236	3268673	2	True				
ANR	3268720	Identifier	i		3268673	0					
ANR	3268721	IncDec	++		3268673	1					
ANR	3268722	ExpressionStatement	buffer2 [ i ] = coefs [ i ]	19:8:248:269	3268673	3	True				
ANR	3268723	AssignmentExpression	buffer2 [ i ] = coefs [ i ]		3268673	0		=			
ANR	3268724	ArrayIndexing	buffer2 [ i ]		3268673	0					
ANR	3268725	Identifier	buffer2		3268673	0					
ANR	3268726	Identifier	i		3268673	1					
ANR	3268727	ArrayIndexing	coefs [ i ]		3268673	1					
ANR	3268728	Identifier	coefs		3268673	0					
ANR	3268729	Identifier	i		3268673	1					
ANR	3268730	ExpressionStatement	refl [ LPC_ORDER - 1 ] = bp2 [ LPC_ORDER - 1 ]	23:4:278:314	3268673	6	True				
ANR	3268731	AssignmentExpression	refl [ LPC_ORDER - 1 ] = bp2 [ LPC_ORDER - 1 ]		3268673	0		=			
ANR	3268732	ArrayIndexing	refl [ LPC_ORDER - 1 ]		3268673	0					
ANR	3268733	Identifier	refl		3268673	0					
ANR	3268734	AdditiveExpression	LPC_ORDER - 1		3268673	1		-			
ANR	3268735	Identifier	LPC_ORDER		3268673	0					
ANR	3268736	PrimaryExpression	1		3268673	1					
ANR	3268737	ArrayIndexing	bp2 [ LPC_ORDER - 1 ]		3268673	1					
ANR	3268738	Identifier	bp2		3268673	0					
ANR	3268739	AdditiveExpression	LPC_ORDER - 1		3268673	1		-			
ANR	3268740	Identifier	LPC_ORDER		3268673	0					
ANR	3268741	PrimaryExpression	1		3268673	1					
ANR	3268742	IfStatement	if ( ( unsigned ) bp2 [ LPC_ORDER - 1 ] + 0x1000 > 0x1fff )		3268673	7					
ANR	3268743	Condition	( unsigned ) bp2 [ LPC_ORDER - 1 ] + 0x1000 > 0x1fff	27:8:327:371	3268673	0	True				
ANR	3268744	RelationalExpression	( unsigned ) bp2 [ LPC_ORDER - 1 ] + 0x1000 > 0x1fff		3268673	0		>			
ANR	3268745	AdditiveExpression	( unsigned ) bp2 [ LPC_ORDER - 1 ] + 0x1000		3268673	0		+			
ANR	3268746	CastExpression	( unsigned ) bp2 [ LPC_ORDER - 1 ]		3268673	0					
ANR	3268747	CastTarget	unsigned		3268673	0					
ANR	3268748	ArrayIndexing	bp2 [ LPC_ORDER - 1 ]		3268673	1					
ANR	3268749	Identifier	bp2		3268673	0					
ANR	3268750	AdditiveExpression	LPC_ORDER - 1		3268673	1		-			
ANR	3268751	Identifier	LPC_ORDER		3268673	0					
ANR	3268752	PrimaryExpression	1		3268673	1					
ANR	3268753	PrimaryExpression	0x1000		3268673	1					
ANR	3268754	PrimaryExpression	0x1fff		3268673	1					
ANR	3268755	CompoundStatement		25:55:299:299	3268673	1					
ANR	3268756	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Overflow. Broken sample?\\n"" )"	29:8:385:442	3268673	0	True				
ANR	3268757	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Overflow. Broken sample?\\n"" )"		3268673	0					
ANR	3268758	Callee	av_log		3268673	0					
ANR	3268759	Identifier	av_log		3268673	0					
ANR	3268760	ArgumentList	avctx		3268673	1					
ANR	3268761	Argument	avctx		3268673	0					
ANR	3268762	Identifier	avctx		3268673	0					
ANR	3268763	Argument	AV_LOG_ERROR		3268673	1					
ANR	3268764	Identifier	AV_LOG_ERROR		3268673	0					
ANR	3268765	Argument	"""Overflow. Broken sample?\\n"""		3268673	2					
ANR	3268766	PrimaryExpression	"""Overflow. Broken sample?\\n"""		3268673	0					
ANR	3268767	ReturnStatement	return 1 ;	31:8:453:461	3268673	1	True				
ANR	3268768	PrimaryExpression	1		3268673	0					
ANR	3268769	ForStatement	for ( i = LPC_ORDER - 2 ; i >= 0 ; i -- )		3268673	8					
ANR	3268770	ForInit	i = LPC_ORDER - 2 ;	37:9:482:497	3268673	0	True				
ANR	3268771	AssignmentExpression	i = LPC_ORDER - 2		3268673	0		=			
ANR	3268772	Identifier	i		3268673	0					
ANR	3268773	AdditiveExpression	LPC_ORDER - 2		3268673	1		-			
ANR	3268774	Identifier	LPC_ORDER		3268673	0					
ANR	3268775	PrimaryExpression	2		3268673	1					
ANR	3268776	Condition	i >= 0	37:26:499:504	3268673	1	True				
ANR	3268777	RelationalExpression	i >= 0		3268673	0		>=			
ANR	3268778	Identifier	i		3268673	0					
ANR	3268779	PrimaryExpression	0		3268673	1					
ANR	3268780	PostIncDecOperationExpression	i --	37:34:507:509	3268673	2	True				
ANR	3268781	Identifier	i		3268673	0					
ANR	3268782	IncDec	--		3268673	1					
ANR	3268783	CompoundStatement		35:39:437:437	3268673	3					
ANR	3268784	ExpressionStatement	b = 0x1000 - ( ( bp2 [ i + 1 ] * bp2 [ i + 1 ] ) >> 12 )	39:8:523:563	3268673	0	True				
ANR	3268785	AssignmentExpression	b = 0x1000 - ( ( bp2 [ i + 1 ] * bp2 [ i + 1 ] ) >> 12 )		3268673	0		=			
ANR	3268786	Identifier	b		3268673	0					
ANR	3268787	AdditiveExpression	0x1000 - ( ( bp2 [ i + 1 ] * bp2 [ i + 1 ] ) >> 12 )		3268673	1		-			
ANR	3268788	PrimaryExpression	0x1000		3268673	0					
ANR	3268789	ShiftExpression	( bp2 [ i + 1 ] * bp2 [ i + 1 ] ) >> 12		3268673	1		>>			
ANR	3268790	MultiplicativeExpression	bp2 [ i + 1 ] * bp2 [ i + 1 ]		3268673	0		*			
ANR	3268791	ArrayIndexing	bp2 [ i + 1 ]		3268673	0					
ANR	3268792	Identifier	bp2		3268673	0					
ANR	3268793	AdditiveExpression	i + 1		3268673	1		+			
ANR	3268794	Identifier	i		3268673	0					
ANR	3268795	PrimaryExpression	1		3268673	1					
ANR	3268796	ArrayIndexing	bp2 [ i + 1 ]		3268673	1					
ANR	3268797	Identifier	bp2		3268673	0					
ANR	3268798	AdditiveExpression	i + 1		3268673	1		+			
ANR	3268799	Identifier	i		3268673	0					
ANR	3268800	PrimaryExpression	1		3268673	1					
ANR	3268801	PrimaryExpression	12		3268673	1					
ANR	3268802	IfStatement	if ( ! b )		3268673	1					
ANR	3268803	Condition	! b	43:12:580:581	3268673	0	True				
ANR	3268804	UnaryOperationExpression	! b		3268673	0					
ANR	3268805	UnaryOperator	!		3268673	0					
ANR	3268806	Identifier	b		3268673	1					
ANR	3268807	ExpressionStatement	b = - 2	45:12:597:603	3268673	1	True				
ANR	3268808	AssignmentExpression	b = - 2		3268673	0		=			
ANR	3268809	Identifier	b		3268673	0					
ANR	3268810	UnaryOperationExpression	- 2		3268673	1					
ANR	3268811	UnaryOperator	-		3268673	0					
ANR	3268812	PrimaryExpression	2		3268673	1					
ANR	3268813	ExpressionStatement	b = 0x1000000 / b	49:8:616:633	3268673	2	True				
ANR	3268814	AssignmentExpression	b = 0x1000000 / b		3268673	0		=			
ANR	3268815	Identifier	b		3268673	0					
ANR	3268816	MultiplicativeExpression	0x1000000 / b		3268673	1		/			
ANR	3268817	PrimaryExpression	0x1000000		3268673	0					
ANR	3268818	Identifier	b		3268673	1					
ANR	3268819	ForStatement	for ( j = 0 ; j <= i ; j ++ )		3268673	3					
ANR	3268820	ForInit	j = 0 ;	51:13:649:652	3268673	0	True				
ANR	3268821	AssignmentExpression	j = 0		3268673	0		=			
ANR	3268822	Identifier	j		3268673	0					
ANR	3268823	PrimaryExpression	0		3268673	1					
ANR	3268824	Condition	j <= i	51:18:654:659	3268673	1	True				
ANR	3268825	RelationalExpression	j <= i		3268673	0		<=			
ANR	3268826	Identifier	j		3268673	0					
ANR	3268827	Identifier	i		3268673	1					
ANR	3268828	PostIncDecOperationExpression	j ++	51:26:662:664	3268673	2	True				
ANR	3268829	Identifier	j		3268673	0					
ANR	3268830	IncDec	++		3268673	1					
ANR	3268831	CompoundStatement		53:12:626:673	3268673	3					
ANR	3268832	IdentifierDeclStatement	int a = bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 ) ;	55:12:701:748	3268673	0	True				
ANR	3268833	IdentifierDecl	a = bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 )		3268673	0					
ANR	3268834	IdentifierDeclType	int		3268673	0					
ANR	3268835	Identifier	a		3268673	1					
ANR	3268836	AssignmentExpression	a = bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 )		3268673	2		=			
ANR	3268837	Identifier	a		3268673	0					
ANR	3268838	AdditiveExpression	bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 )		3268673	1		-			
ANR	3268839	ArrayIndexing	bp2 [ j ]		3268673	0					
ANR	3268840	Identifier	bp2		3268673	0					
ANR	3268841	Identifier	j		3268673	1					
ANR	3268842	ShiftExpression	( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12		3268673	1		>>			
ANR	3268843	MultiplicativeExpression	refl [ i + 1 ] * bp2 [ i - j ]		3268673	0		*			
ANR	3268844	ArrayIndexing	refl [ i + 1 ]		3268673	0					
ANR	3268845	Identifier	refl		3268673	0					
ANR	3268846	AdditiveExpression	i + 1		3268673	1		+			
ANR	3268847	Identifier	i		3268673	0					
ANR	3268848	PrimaryExpression	1		3268673	1					
ANR	3268849	ArrayIndexing	bp2 [ i - j ]		3268673	1					
ANR	3268850	Identifier	bp2		3268673	0					
ANR	3268851	AdditiveExpression	i - j		3268673	1		-			
ANR	3268852	Identifier	i		3268673	0					
ANR	3268853	Identifier	j		3268673	1					
ANR	3268854	PrimaryExpression	12		3268673	1					
ANR	3268855	IfStatement	if ( ( int ) ( a * ( unsigned ) b ) != a * ( int64_t ) b )		3268673	1					
ANR	3268856	Condition	( int ) ( a * ( unsigned ) b ) != a * ( int64_t ) b	57:15:766:801	3268673	0	True				
ANR	3268857	EqualityExpression	( int ) ( a * ( unsigned ) b ) != a * ( int64_t ) b		3268673	0		!=			
ANR	3268858	CastExpression	( int ) ( a * ( unsigned ) b )		3268673	0					
ANR	3268859	CastTarget	int		3268673	0					
ANR	3268860	MultiplicativeExpression	a * ( unsigned ) b		3268673	1		*			
ANR	3268861	Identifier	a		3268673	0					
ANR	3268862	CastExpression	( unsigned ) b		3268673	1					
ANR	3268863	CastTarget	unsigned		3268673	0					
ANR	3268864	Identifier	b		3268673	1					
ANR	3268865	MultiplicativeExpression	a * ( int64_t ) b		3268673	1		*			
ANR	3268866	Identifier	a		3268673	0					
ANR	3268867	CastExpression	( int64_t ) b		3268673	1					
ANR	3268868	CastTarget	int64_t		3268673	0					
ANR	3268869	Identifier	b		3268673	1					
ANR	3268870	ReturnStatement	return 1 ;	59:16:821:829	3268673	1	True				
ANR	3268871	PrimaryExpression	1		3268673	0					
ANR	3268872	ExpressionStatement	bp1 [ j ] = ( ( bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 ) ) * b ) >> 12	63:12:852:914	3268673	2	True				
ANR	3268873	AssignmentExpression	bp1 [ j ] = ( ( bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 ) ) * b ) >> 12		3268673	0		=			
ANR	3268874	ArrayIndexing	bp1 [ j ]		3268673	0					
ANR	3268875	Identifier	bp1		3268673	0					
ANR	3268876	Identifier	j		3268673	1					
ANR	3268877	ShiftExpression	( ( bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 ) ) * b ) >> 12		3268673	1		>>			
ANR	3268878	MultiplicativeExpression	( bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 ) ) * b		3268673	0		*			
ANR	3268879	AdditiveExpression	bp2 [ j ] - ( ( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12 )		3268673	0		-			
ANR	3268880	ArrayIndexing	bp2 [ j ]		3268673	0					
ANR	3268881	Identifier	bp2		3268673	0					
ANR	3268882	Identifier	j		3268673	1					
ANR	3268883	ShiftExpression	( refl [ i + 1 ] * bp2 [ i - j ] ) >> 12		3268673	1		>>			
ANR	3268884	MultiplicativeExpression	refl [ i + 1 ] * bp2 [ i - j ]		3268673	0		*			
ANR	3268885	ArrayIndexing	refl [ i + 1 ]		3268673	0					
ANR	3268886	Identifier	refl		3268673	0					
ANR	3268887	AdditiveExpression	i + 1		3268673	1		+			
ANR	3268888	Identifier	i		3268673	0					
ANR	3268889	PrimaryExpression	1		3268673	1					
ANR	3268890	ArrayIndexing	bp2 [ i - j ]		3268673	1					
ANR	3268891	Identifier	bp2		3268673	0					
ANR	3268892	AdditiveExpression	i - j		3268673	1		-			
ANR	3268893	Identifier	i		3268673	0					
ANR	3268894	Identifier	j		3268673	1					
ANR	3268895	PrimaryExpression	12		3268673	1					
ANR	3268896	Identifier	b		3268673	1					
ANR	3268897	PrimaryExpression	12		3268673	1					
ANR	3268898	IfStatement	if ( ( unsigned ) bp1 [ i ] + 0x1000 > 0x1fff )		3268673	4					
ANR	3268899	Condition	( unsigned ) bp1 [ i ] + 0x1000 > 0x1fff	69:12:942:976	3268673	0	True				
ANR	3268900	RelationalExpression	( unsigned ) bp1 [ i ] + 0x1000 > 0x1fff		3268673	0		>			
ANR	3268901	AdditiveExpression	( unsigned ) bp1 [ i ] + 0x1000		3268673	0		+			
ANR	3268902	CastExpression	( unsigned ) bp1 [ i ]		3268673	0					
ANR	3268903	CastTarget	unsigned		3268673	0					
ANR	3268904	ArrayIndexing	bp1 [ i ]		3268673	1					
ANR	3268905	Identifier	bp1		3268673	0					
ANR	3268906	Identifier	i		3268673	1					
ANR	3268907	PrimaryExpression	0x1000		3268673	1					
ANR	3268908	PrimaryExpression	0x1fff		3268673	1					
ANR	3268909	ReturnStatement	return 1 ;	71:12:992:1000	3268673	1	True				
ANR	3268910	PrimaryExpression	1		3268673	0					
ANR	3268911	ExpressionStatement	refl [ i ] = bp1 [ i ]	75:8:1013:1029	3268673	5	True				
ANR	3268912	AssignmentExpression	refl [ i ] = bp1 [ i ]		3268673	0		=			
ANR	3268913	ArrayIndexing	refl [ i ]		3268673	0					
ANR	3268914	Identifier	refl		3268673	0					
ANR	3268915	Identifier	i		3268673	1					
ANR	3268916	ArrayIndexing	bp1 [ i ]		3268673	1					
ANR	3268917	Identifier	bp1		3268673	0					
ANR	3268918	Identifier	i		3268673	1					
ANR	3268919	Statement	FFSWAP	79:8:1042:1047	3268673	6	True				
ANR	3268920	Statement	(	79:14:1048:1048	3268673	7	True				
ANR	3268921	Statement	int	79:15:1049:1051	3268673	8	True				
ANR	3268922	Statement	*	79:19:1053:1053	3268673	9	True				
ANR	3268923	Statement	","	79:20:1054:1054	3268673	10	True				
ANR	3268924	Statement	bp1	79:22:1056:1058	3268673	11	True				
ANR	3268925	Statement	","	79:25:1059:1059	3268673	12	True				
ANR	3268926	Statement	bp2	79:27:1061:1063	3268673	13	True				
ANR	3268927	Statement	)	79:30:1064:1064	3268673	14	True				
ANR	3268928	ExpressionStatement		79:31:1065:1065	3268673	15	True				
ANR	3268929	ReturnStatement	return 0 ;	83:4:1079:1087	3268673	9	True				
ANR	3268930	PrimaryExpression	0		3268673	0					
ANR	3268931	ReturnType	int		3268673	1					
ANR	3268932	Identifier	ff_eval_refl		3268673	2					
ANR	3268933	ParameterList	"int * refl , const int16_t * coefs , AVCodecContext * avctx"		3268673	3					
ANR	3268934	Parameter	int * refl	1:17:17:25	3268673	0	True				
ANR	3268935	ParameterType	int *		3268673	0					
ANR	3268936	Identifier	refl		3268673	1					
ANR	3268937	Parameter	const int16_t * coefs	1:28:28:47	3268673	1	True				
ANR	3268938	ParameterType	const int16_t *		3268673	0					
ANR	3268939	Identifier	coefs		3268673	1					
ANR	3268940	Parameter	AVCodecContext * avctx	1:50:50:70	3268673	2	True				
ANR	3268941	ParameterType	AVCodecContext *		3268673	0					
ANR	3268942	Identifier	avctx		3268673	1					
ANR	3268943	CFGEntryNode	ENTRY		3268673		True				
ANR	3268944	CFGExitNode	EXIT		3268673		True				
ANR	3268945	Symbol	coefs		3268673						
ANR	3268946	Symbol	a		3268673						
ANR	3268947	Symbol	b		3268673						
ANR	3268948	Symbol	bp1		3268673						
ANR	3268949	Symbol	LPC_ORDER		3268673						
ANR	3268950	Symbol	buffer2		3268673						
ANR	3268951	Symbol	AV_LOG_ERROR		3268673						
ANR	3268952	Symbol	bp2		3268673						
ANR	3268953	Symbol	buffer1		3268673						
ANR	3268954	Symbol	* LPC_ORDER		3268673						
ANR	3268955	Symbol	i		3268673						
ANR	3268956	Symbol	j		3268673						
ANR	3268957	Symbol	* buffer2		3268673						
ANR	3268958	Symbol	refl		3268673						
ANR	3268959	Symbol	* refl		3268673						
ANR	3268960	Symbol	* bp2		3268673						
ANR	3268961	Symbol	* bp1		3268673						
ANR	3268962	Symbol	* i		3268673						
ANR	3268963	Symbol	* j		3268673						
ANR	3268964	Symbol	* coefs		3268673						
ANR	3268965	Symbol	avctx		3268673						
