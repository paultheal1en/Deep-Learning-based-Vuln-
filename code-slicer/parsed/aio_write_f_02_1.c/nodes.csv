command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	502014	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aio_write_f_02_1.c								
ANR	502015	Function	aio_write_f	1:0:0:1073							
ANR	502016	FunctionDef	"aio_write_f (int argc , char * * argv)"		502015	0					
ANR	502017	CompoundStatement		3:0:36:1073	502015	0					
ANR	502018	IdentifierDeclStatement	"int nr_iov , c ;"	5:1:40:53	502015	0	True				
ANR	502019	IdentifierDecl	nr_iov		502015	0					
ANR	502020	IdentifierDeclType	int		502015	0					
ANR	502021	Identifier	nr_iov		502015	1					
ANR	502022	IdentifierDecl	c		502015	1					
ANR	502023	IdentifierDeclType	int		502015	0					
ANR	502024	Identifier	c		502015	1					
ANR	502025	IdentifierDeclStatement	int pattern = 0xcd ;	7:1:57:75	502015	1	True				
ANR	502026	IdentifierDecl	pattern = 0xcd		502015	0					
ANR	502027	IdentifierDeclType	int		502015	0					
ANR	502028	Identifier	pattern		502015	1					
ANR	502029	AssignmentExpression	pattern = 0xcd		502015	2		=			
ANR	502030	Identifier	pattern		502015	0					
ANR	502031	PrimaryExpression	0xcd		502015	1					
ANR	502032	IdentifierDeclStatement	"struct aio_ctx * ctx = calloc ( 1 , sizeof ( struct aio_ctx ) ) ;"	9:1:79:134	502015	2	True				
ANR	502033	IdentifierDecl	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		502015	0					
ANR	502034	IdentifierDeclType	struct aio_ctx *		502015	0					
ANR	502035	Identifier	ctx		502015	1					
ANR	502036	AssignmentExpression	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		502015	2		=			
ANR	502037	Identifier	ctx		502015	0					
ANR	502038	CallExpression	"calloc ( 1 , sizeof ( struct aio_ctx ) )"		502015	1					
ANR	502039	Callee	calloc		502015	0					
ANR	502040	Identifier	calloc		502015	0					
ANR	502041	ArgumentList	1		502015	1					
ANR	502042	Argument	1		502015	0					
ANR	502043	PrimaryExpression	1		502015	0					
ANR	502044	Argument	sizeof ( struct aio_ctx )		502015	1					
ANR	502045	SizeofExpression	sizeof ( struct aio_ctx )		502015	0					
ANR	502046	Sizeof	sizeof		502015	0					
ANR	502047	SizeofOperand	struct aio_ctx		502015	1					
ANR	502048	IdentifierDeclStatement	BlockDriverAIOCB * acb ;	11:1:138:159	502015	3	True				
ANR	502049	IdentifierDecl	* acb		502015	0					
ANR	502050	IdentifierDeclType	BlockDriverAIOCB *		502015	0					
ANR	502051	Identifier	acb		502015	1					
ANR	502052	WhileStatement	"while ( ( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF )"		502015	4					
ANR	502053	Condition	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"	15:8:172:210	502015	0	True				
ANR	502054	EqualityExpression	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"		502015	0		!=			
ANR	502055	AssignmentExpression	"c = getopt ( argc , argv , ""CqP:"" )"		502015	0		=			
ANR	502056	Identifier	c		502015	0					
ANR	502057	CallExpression	"getopt ( argc , argv , ""CqP:"" )"		502015	1					
ANR	502058	Callee	getopt		502015	0					
ANR	502059	Identifier	getopt		502015	0					
ANR	502060	ArgumentList	argc		502015	1					
ANR	502061	Argument	argc		502015	0					
ANR	502062	Identifier	argc		502015	0					
ANR	502063	Argument	argv		502015	1					
ANR	502064	Identifier	argv		502015	0					
ANR	502065	Argument	"""CqP:"""		502015	2					
ANR	502066	PrimaryExpression	"""CqP:"""		502015	0					
ANR	502067	Identifier	EOF		502015	1					
ANR	502068	CompoundStatement		13:49:176:176	502015	1					
ANR	502069	SwitchStatement	switch ( c )		502015	0					
ANR	502070	Condition	c	17:10:226:226	502015	0	True				
ANR	502071	Identifier	c		502015	0					
ANR	502072	CompoundStatement		15:13:192:192	502015	1					
ANR	502073	Label	case 'C' :	19:2:234:242	502015	0	True				
ANR	502074	ExpressionStatement	ctx -> Cflag = 1	21:3:248:262	502015	1	True				
ANR	502075	AssignmentExpression	ctx -> Cflag = 1		502015	0		=			
ANR	502076	PtrMemberAccess	ctx -> Cflag		502015	0					
ANR	502077	Identifier	ctx		502015	0					
ANR	502078	Identifier	Cflag		502015	1					
ANR	502079	PrimaryExpression	1		502015	1					
ANR	502080	BreakStatement	break ;	23:3:268:273	502015	2	True				
ANR	502081	Label	case 'q' :	25:2:278:286	502015	3	True				
ANR	502082	ExpressionStatement	ctx -> qflag = 1	27:3:292:306	502015	4	True				
ANR	502083	AssignmentExpression	ctx -> qflag = 1		502015	0		=			
ANR	502084	PtrMemberAccess	ctx -> qflag		502015	0					
ANR	502085	Identifier	ctx		502015	0					
ANR	502086	Identifier	qflag		502015	1					
ANR	502087	PrimaryExpression	1		502015	1					
ANR	502088	BreakStatement	break ;	29:3:312:317	502015	5	True				
ANR	502089	Label	case 'P' :	31:2:322:330	502015	6	True				
ANR	502090	ExpressionStatement	pattern = atoi ( optarg )	33:3:336:358	502015	7	True				
ANR	502091	AssignmentExpression	pattern = atoi ( optarg )		502015	0		=			
ANR	502092	Identifier	pattern		502015	0					
ANR	502093	CallExpression	atoi ( optarg )		502015	1					
ANR	502094	Callee	atoi		502015	0					
ANR	502095	Identifier	atoi		502015	0					
ANR	502096	ArgumentList	optarg		502015	1					
ANR	502097	Argument	optarg		502015	0					
ANR	502098	Identifier	optarg		502015	0					
ANR	502099	BreakStatement	break ;	35:3:364:369	502015	8	True				
ANR	502100	Label	default :	37:2:374:381	502015	9	True				
ANR	502101	Identifier	default		502015	0					
ANR	502102	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	39:3:387:423	502015	10	True				
ANR	502103	CallExpression	command_usage ( & aio_write_cmd )		502015	0					
ANR	502104	Callee	command_usage		502015	0					
ANR	502105	Identifier	command_usage		502015	0					
ANR	502106	ArgumentList	& aio_write_cmd		502015	1					
ANR	502107	Argument	& aio_write_cmd		502015	0					
ANR	502108	UnaryOperationExpression	& aio_write_cmd		502015	0					
ANR	502109	UnaryOperator	&		502015	0					
ANR	502110	Identifier	aio_write_cmd		502015	1					
ANR	502111	IfStatement	if ( optind > argc - 2 )		502015	5					
ANR	502112	Condition	optind > argc - 2	47:5:442:458	502015	0	True				
ANR	502113	RelationalExpression	optind > argc - 2		502015	0		>			
ANR	502114	Identifier	optind		502015	0					
ANR	502115	AdditiveExpression	argc - 2		502015	1		-			
ANR	502116	Identifier	argc		502015	0					
ANR	502117	PrimaryExpression	2		502015	1					
ANR	502118	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	49:2:464:500	502015	1	True				
ANR	502119	CallExpression	command_usage ( & aio_write_cmd )		502015	0					
ANR	502120	Callee	command_usage		502015	0					
ANR	502121	Identifier	command_usage		502015	0					
ANR	502122	ArgumentList	& aio_write_cmd		502015	1					
ANR	502123	Argument	& aio_write_cmd		502015	0					
ANR	502124	UnaryOperationExpression	& aio_write_cmd		502015	0					
ANR	502125	UnaryOperator	&		502015	0					
ANR	502126	Identifier	aio_write_cmd		502015	1					
ANR	502127	ExpressionStatement	ctx -> offset = cvtnum ( argv [ optind ] )	53:1:506:540	502015	6	True				
ANR	502128	AssignmentExpression	ctx -> offset = cvtnum ( argv [ optind ] )		502015	0		=			
ANR	502129	PtrMemberAccess	ctx -> offset		502015	0					
ANR	502130	Identifier	ctx		502015	0					
ANR	502131	Identifier	offset		502015	1					
ANR	502132	CallExpression	cvtnum ( argv [ optind ] )		502015	1					
ANR	502133	Callee	cvtnum		502015	0					
ANR	502134	Identifier	cvtnum		502015	0					
ANR	502135	ArgumentList	argv [ optind ]		502015	1					
ANR	502136	Argument	argv [ optind ]		502015	0					
ANR	502137	ArrayIndexing	argv [ optind ]		502015	0					
ANR	502138	Identifier	argv		502015	0					
ANR	502139	Identifier	optind		502015	1					
ANR	502140	IfStatement	if ( ctx -> offset < 0 )		502015	7					
ANR	502141	Condition	ctx -> offset < 0	55:5:548:562	502015	0	True				
ANR	502142	RelationalExpression	ctx -> offset < 0		502015	0		<			
ANR	502143	PtrMemberAccess	ctx -> offset		502015	0					
ANR	502144	Identifier	ctx		502015	0					
ANR	502145	Identifier	offset		502015	1					
ANR	502146	PrimaryExpression	0		502015	1					
ANR	502147	CompoundStatement		53:22:528:528	502015	1					
ANR	502148	ExpressionStatement	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"	57:2:570:629	502015	0	True				
ANR	502149	CallExpression	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"		502015	0					
ANR	502150	Callee	printf		502015	0					
ANR	502151	Identifier	printf		502015	0					
ANR	502152	ArgumentList	"""non-numeric length argument -- %s\\n"""		502015	1					
ANR	502153	Argument	"""non-numeric length argument -- %s\\n"""		502015	0					
ANR	502154	PrimaryExpression	"""non-numeric length argument -- %s\\n"""		502015	0					
ANR	502155	Argument	argv [ optind ]		502015	1					
ANR	502156	ArrayIndexing	argv [ optind ]		502015	0					
ANR	502157	Identifier	argv		502015	0					
ANR	502158	Identifier	optind		502015	1					
ANR	502159	ReturnStatement	return 0 ;	59:2:634:642	502015	1	True				
ANR	502160	PrimaryExpression	0		502015	0					
ANR	502161	ExpressionStatement	optind ++	63:1:650:658	502015	8	True				
ANR	502162	PostIncDecOperationExpression	optind ++		502015	0					
ANR	502163	Identifier	optind		502015	0					
ANR	502164	IncDec	++		502015	1					
ANR	502165	IfStatement	if ( ctx -> offset & 0x1ff )		502015	9					
ANR	502166	Condition	ctx -> offset & 0x1ff	67:5:668:686	502015	0	True				
ANR	502167	BitAndExpression	ctx -> offset & 0x1ff		502015	0		&			
ANR	502168	PtrMemberAccess	ctx -> offset		502015	0					
ANR	502169	Identifier	ctx		502015	0					
ANR	502170	Identifier	offset		502015	1					
ANR	502171	PrimaryExpression	0x1ff		502015	1					
ANR	502172	CompoundStatement		65:26:652:652	502015	1					
ANR	502173	ExpressionStatement	"printf ( ""offset %lld is not sector aligned\\n"" , ( long long ) ctx -> offset )"	69:2:694:767	502015	0	True				
ANR	502174	CallExpression	"printf ( ""offset %lld is not sector aligned\\n"" , ( long long ) ctx -> offset )"		502015	0					
ANR	502175	Callee	printf		502015	0					
ANR	502176	Identifier	printf		502015	0					
ANR	502177	ArgumentList	"""offset %lld is not sector aligned\\n"""		502015	1					
ANR	502178	Argument	"""offset %lld is not sector aligned\\n"""		502015	0					
ANR	502179	PrimaryExpression	"""offset %lld is not sector aligned\\n"""		502015	0					
ANR	502180	Argument	( long long ) ctx -> offset		502015	1					
ANR	502181	CastExpression	( long long ) ctx -> offset		502015	0					
ANR	502182	CastTarget	long long		502015	0					
ANR	502183	PtrMemberAccess	ctx -> offset		502015	1					
ANR	502184	Identifier	ctx		502015	0					
ANR	502185	Identifier	offset		502015	1					
ANR	502186	ReturnStatement	return 0 ;	73:2:772:780	502015	1	True				
ANR	502187	PrimaryExpression	0		502015	0					
ANR	502188	ExpressionStatement	nr_iov = argc - optind	79:1:790:812	502015	10	True				
ANR	502189	AssignmentExpression	nr_iov = argc - optind		502015	0		=			
ANR	502190	Identifier	nr_iov		502015	0					
ANR	502191	AdditiveExpression	argc - optind		502015	1		-			
ANR	502192	Identifier	argc		502015	0					
ANR	502193	Identifier	optind		502015	1					
ANR	502194	ExpressionStatement	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"	81:1:816:883	502015	11	True				
ANR	502195	AssignmentExpression	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		502015	0		=			
ANR	502196	PtrMemberAccess	ctx -> buf		502015	0					
ANR	502197	Identifier	ctx		502015	0					
ANR	502198	Identifier	buf		502015	1					
ANR	502199	CallExpression	"create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		502015	1					
ANR	502200	Callee	create_iovec		502015	0					
ANR	502201	Identifier	create_iovec		502015	0					
ANR	502202	ArgumentList	& ctx -> qiov		502015	1					
ANR	502203	Argument	& ctx -> qiov		502015	0					
ANR	502204	UnaryOperationExpression	& ctx -> qiov		502015	0					
ANR	502205	UnaryOperator	&		502015	0					
ANR	502206	PtrMemberAccess	ctx -> qiov		502015	1					
ANR	502207	Identifier	ctx		502015	0					
ANR	502208	Identifier	qiov		502015	1					
ANR	502209	Argument	& argv [ optind ]		502015	1					
ANR	502210	UnaryOperationExpression	& argv [ optind ]		502015	0					
ANR	502211	UnaryOperator	&		502015	0					
ANR	502212	ArrayIndexing	argv [ optind ]		502015	1					
ANR	502213	Identifier	argv		502015	0					
ANR	502214	Identifier	optind		502015	1					
ANR	502215	Argument	nr_iov		502015	2					
ANR	502216	Identifier	nr_iov		502015	0					
ANR	502217	Argument	pattern		502015	3					
ANR	502218	Identifier	pattern		502015	0					
ANR	502219	ExpressionStatement	"gettimeofday ( & ctx -> t1 , NULL )"	85:1:889:917	502015	12	True				
ANR	502220	CallExpression	"gettimeofday ( & ctx -> t1 , NULL )"		502015	0					
ANR	502221	Callee	gettimeofday		502015	0					
ANR	502222	Identifier	gettimeofday		502015	0					
ANR	502223	ArgumentList	& ctx -> t1		502015	1					
ANR	502224	Argument	& ctx -> t1		502015	0					
ANR	502225	UnaryOperationExpression	& ctx -> t1		502015	0					
ANR	502226	UnaryOperator	&		502015	0					
ANR	502227	PtrMemberAccess	ctx -> t1		502015	1					
ANR	502228	Identifier	ctx		502015	0					
ANR	502229	Identifier	t1		502015	1					
ANR	502230	Argument	NULL		502015	1					
ANR	502231	Identifier	NULL		502015	0					
ANR	502232	ExpressionStatement	"acb = bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"	87:1:921:1028	502015	13	True				
ANR	502233	AssignmentExpression	"acb = bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"		502015	0		=			
ANR	502234	Identifier	acb		502015	0					
ANR	502235	CallExpression	"bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"		502015	1					
ANR	502236	Callee	bdrv_aio_writev		502015	0					
ANR	502237	Identifier	bdrv_aio_writev		502015	0					
ANR	502238	ArgumentList	bs		502015	1					
ANR	502239	Argument	bs		502015	0					
ANR	502240	Identifier	bs		502015	0					
ANR	502241	Argument	ctx -> offset >> 9		502015	1					
ANR	502242	ShiftExpression	ctx -> offset >> 9		502015	0		>>			
ANR	502243	PtrMemberAccess	ctx -> offset		502015	0					
ANR	502244	Identifier	ctx		502015	0					
ANR	502245	Identifier	offset		502015	1					
ANR	502246	PrimaryExpression	9		502015	1					
ANR	502247	Argument	& ctx -> qiov		502015	2					
ANR	502248	UnaryOperationExpression	& ctx -> qiov		502015	0					
ANR	502249	UnaryOperator	&		502015	0					
ANR	502250	PtrMemberAccess	ctx -> qiov		502015	1					
ANR	502251	Identifier	ctx		502015	0					
ANR	502252	Identifier	qiov		502015	1					
ANR	502253	Argument	ctx -> qiov . size >> 9		502015	3					
ANR	502254	ShiftExpression	ctx -> qiov . size >> 9		502015	0		>>			
ANR	502255	MemberAccess	ctx -> qiov . size		502015	0					
ANR	502256	PtrMemberAccess	ctx -> qiov		502015	0					
ANR	502257	Identifier	ctx		502015	0					
ANR	502258	Identifier	qiov		502015	1					
ANR	502259	Identifier	size		502015	1					
ANR	502260	PrimaryExpression	9		502015	1					
ANR	502261	Argument	aio_write_done		502015	4					
ANR	502262	Identifier	aio_write_done		502015	0					
ANR	502263	Argument	ctx		502015	5					
ANR	502264	Identifier	ctx		502015	0					
ANR	502265	IfStatement	if ( ! acb )		502015	14					
ANR	502266	Condition	! acb	91:5:1036:1039	502015	0	True				
ANR	502267	UnaryOperationExpression	! acb		502015	0					
ANR	502268	UnaryOperator	!		502015	0					
ANR	502269	Identifier	acb		502015	1					
ANR	502270	ReturnStatement	return - EIO ;	93:2:1045:1056	502015	1	True				
ANR	502271	UnaryOperationExpression	- EIO		502015	0					
ANR	502272	UnaryOperator	-		502015	0					
ANR	502273	Identifier	EIO		502015	1					
ANR	502274	ReturnStatement	return 0 ;	97:1:1062:1070	502015	15	True				
ANR	502275	PrimaryExpression	0		502015	0					
ANR	502276	Identifier	aio_write_f		502015	1					
ANR	502277	ParameterList	"int argc , char * * argv"		502015	2					
ANR	502278	Parameter	int argc	1:12:12:19	502015	0	True				
ANR	502279	ParameterType	int		502015	0					
ANR	502280	Identifier	argc		502015	1					
ANR	502281	Parameter	char * * argv	1:22:22:32	502015	1	True				
ANR	502282	ParameterType	char * *		502015	0					
ANR	502283	Identifier	argv		502015	1					
ANR	502284	CFGEntryNode	ENTRY		502015		True				
ANR	502285	CFGExitNode	EXIT		502015		True				
ANR	502286	Symbol	acb		502015						
ANR	502287	Symbol	& aio_write_cmd		502015						
ANR	502288	Symbol	* optind		502015						
ANR	502289	Symbol	create_iovec		502015						
ANR	502290	Symbol	optind		502015						
ANR	502291	Symbol	pattern		502015						
ANR	502292	Symbol	optarg		502015						
ANR	502293	Symbol	* argv		502015						
ANR	502294	Symbol	calloc		502015						
ANR	502295	Symbol	argv		502015						
ANR	502296	Symbol	& ctx -> qiov		502015						
ANR	502297	Symbol	bs		502015						
ANR	502298	Symbol	getopt		502015						
ANR	502299	Symbol	command_usage		502015						
ANR	502300	Symbol	ctx -> buf		502015						
ANR	502301	Symbol	EOF		502015						
ANR	502302	Symbol	argc		502015						
ANR	502303	Symbol	atoi		502015						
ANR	502304	Symbol	cvtnum		502015						
ANR	502305	Symbol	aio_write_done		502015						
ANR	502306	Symbol	c		502015						
ANR	502307	Symbol	NULL		502015						
ANR	502308	Symbol	& ctx -> t1		502015						
ANR	502309	Symbol	ctx		502015						
ANR	502310	Symbol	EIO		502015						
ANR	502311	Symbol	* ctx		502015						
ANR	502312	Symbol	ctx -> qflag		502015						
ANR	502313	Symbol	ctx -> offset		502015						
ANR	502314	Symbol	bdrv_aio_writev		502015						
ANR	502315	Symbol	ctx -> Cflag		502015						
ANR	502316	Symbol	ctx -> qiov . size		502015						
ANR	502317	Symbol	ctx -> qiov		502015						
ANR	502318	Symbol	nr_iov		502015						
