command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8577681	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tta_decode_init_0.c								
ANR	8577682	Function	tta_decode_init	1:0:0:4040							
ANR	8577683	FunctionDef	tta_decode_init (AVCodecContext * avctx)		8577682	0					
ANR	8577684	CompoundStatement		3:0:60:4040	8577682	0					
ANR	8577685	IdentifierDeclStatement	TTAContext * s = avctx -> priv_data ;	5:4:67:99	8577682	0	True				
ANR	8577686	IdentifierDecl	* s = avctx -> priv_data		8577682	0					
ANR	8577687	IdentifierDeclType	TTAContext *		8577682	0					
ANR	8577688	Identifier	s		8577682	1					
ANR	8577689	AssignmentExpression	* s = avctx -> priv_data		8577682	2		=			
ANR	8577690	Identifier	s		8577682	0					
ANR	8577691	PtrMemberAccess	avctx -> priv_data		8577682	1					
ANR	8577692	Identifier	avctx		8577682	0					
ANR	8577693	Identifier	priv_data		8577682	1					
ANR	8577694	IdentifierDeclStatement	int total_frames ;	7:4:106:122	8577682	1	True				
ANR	8577695	IdentifierDecl	total_frames		8577682	0					
ANR	8577696	IdentifierDeclType	int		8577682	0					
ANR	8577697	Identifier	total_frames		8577682	1					
ANR	8577698	ExpressionStatement	s -> avctx = avctx	11:4:131:147	8577682	2	True				
ANR	8577699	AssignmentExpression	s -> avctx = avctx		8577682	0		=			
ANR	8577700	PtrMemberAccess	s -> avctx		8577682	0					
ANR	8577701	Identifier	s		8577682	0					
ANR	8577702	Identifier	avctx		8577682	1					
ANR	8577703	Identifier	avctx		8577682	1					
ANR	8577704	IfStatement	if ( avctx -> extradata_size < 22 )		8577682	3					
ANR	8577705	Condition	avctx -> extradata_size < 22	17:8:197:222	8577682	0	True				
ANR	8577706	RelationalExpression	avctx -> extradata_size < 22		8577682	0		<			
ANR	8577707	PtrMemberAccess	avctx -> extradata_size		8577682	0					
ANR	8577708	Identifier	avctx		8577682	0					
ANR	8577709	Identifier	extradata_size		8577682	1					
ANR	8577710	PrimaryExpression	22		8577682	1					
ANR	8577711	ReturnStatement	return AVERROR_INVALIDDATA ;	19:8:234:260	8577682	1	True				
ANR	8577712	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8577713	ExpressionStatement	"init_get_bits ( & s -> gb , avctx -> extradata , avctx -> extradata_size * 8 )"	23:4:269:335	8577682	4	True				
ANR	8577714	CallExpression	"init_get_bits ( & s -> gb , avctx -> extradata , avctx -> extradata_size * 8 )"		8577682	0					
ANR	8577715	Callee	init_get_bits		8577682	0					
ANR	8577716	Identifier	init_get_bits		8577682	0					
ANR	8577717	ArgumentList	& s -> gb		8577682	1					
ANR	8577718	Argument	& s -> gb		8577682	0					
ANR	8577719	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577720	UnaryOperator	&		8577682	0					
ANR	8577721	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577722	Identifier	s		8577682	0					
ANR	8577723	Identifier	gb		8577682	1					
ANR	8577724	Argument	avctx -> extradata		8577682	1					
ANR	8577725	PtrMemberAccess	avctx -> extradata		8577682	0					
ANR	8577726	Identifier	avctx		8577682	0					
ANR	8577727	Identifier	extradata		8577682	1					
ANR	8577728	Argument	avctx -> extradata_size * 8		8577682	2					
ANR	8577729	MultiplicativeExpression	avctx -> extradata_size * 8		8577682	0		*			
ANR	8577730	PtrMemberAccess	avctx -> extradata_size		8577682	0					
ANR	8577731	Identifier	avctx		8577682	0					
ANR	8577732	Identifier	extradata_size		8577682	1					
ANR	8577733	PrimaryExpression	8		8577682	1					
ANR	8577734	IfStatement	"if ( show_bits_long ( & s -> gb , 32 ) == AV_RL32 ( ""TTA1"" ) )"		8577682	5					
ANR	8577735	Condition	"show_bits_long ( & s -> gb , 32 ) == AV_RL32 ( ""TTA1"" )"	25:8:346:390	8577682	0	True				
ANR	8577736	EqualityExpression	"show_bits_long ( & s -> gb , 32 ) == AV_RL32 ( ""TTA1"" )"		8577682	0		==			
ANR	8577737	CallExpression	"show_bits_long ( & s -> gb , 32 )"		8577682	0					
ANR	8577738	Callee	show_bits_long		8577682	0					
ANR	8577739	Identifier	show_bits_long		8577682	0					
ANR	8577740	ArgumentList	& s -> gb		8577682	1					
ANR	8577741	Argument	& s -> gb		8577682	0					
ANR	8577742	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577743	UnaryOperator	&		8577682	0					
ANR	8577744	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577745	Identifier	s		8577682	0					
ANR	8577746	Identifier	gb		8577682	1					
ANR	8577747	Argument	32		8577682	1					
ANR	8577748	PrimaryExpression	32		8577682	0					
ANR	8577749	CallExpression	"AV_RL32 ( ""TTA1"" )"		8577682	1					
ANR	8577750	Callee	AV_RL32		8577682	0					
ANR	8577751	Identifier	AV_RL32		8577682	0					
ANR	8577752	ArgumentList	"""TTA1"""		8577682	1					
ANR	8577753	Argument	"""TTA1"""		8577682	0					
ANR	8577754	PrimaryExpression	"""TTA1"""		8577682	0					
ANR	8577755	CompoundStatement		25:4:337:337	8577682	1					
ANR	8577756	IfStatement	if ( avctx -> err_recognition & AV_EF_CRCCHECK )		8577682	0					
ANR	8577757	Condition	avctx -> err_recognition & AV_EF_CRCCHECK	29:12:413:451	8577682	0	True				
ANR	8577758	BitAndExpression	avctx -> err_recognition & AV_EF_CRCCHECK		8577682	0		&			
ANR	8577759	PtrMemberAccess	avctx -> err_recognition		8577682	0					
ANR	8577760	Identifier	avctx		8577682	0					
ANR	8577761	Identifier	err_recognition		8577682	1					
ANR	8577762	Identifier	AV_EF_CRCCHECK		8577682	1					
ANR	8577763	CompoundStatement		27:53:393:393	8577682	1					
ANR	8577764	ExpressionStatement	s -> crc_table = av_crc_get_table ( AV_CRC_32_IEEE_LE )	31:12:469:519	8577682	0	True				
ANR	8577765	AssignmentExpression	s -> crc_table = av_crc_get_table ( AV_CRC_32_IEEE_LE )		8577682	0		=			
ANR	8577766	PtrMemberAccess	s -> crc_table		8577682	0					
ANR	8577767	Identifier	s		8577682	0					
ANR	8577768	Identifier	crc_table		8577682	1					
ANR	8577769	CallExpression	av_crc_get_table ( AV_CRC_32_IEEE_LE )		8577682	1					
ANR	8577770	Callee	av_crc_get_table		8577682	0					
ANR	8577771	Identifier	av_crc_get_table		8577682	0					
ANR	8577772	ArgumentList	AV_CRC_32_IEEE_LE		8577682	1					
ANR	8577773	Argument	AV_CRC_32_IEEE_LE		8577682	0					
ANR	8577774	Identifier	AV_CRC_32_IEEE_LE		8577682	0					
ANR	8577775	ExpressionStatement	"tta_check_crc ( s , avctx -> extradata , 18 )"	33:12:534:572	8577682	1	True				
ANR	8577776	CallExpression	"tta_check_crc ( s , avctx -> extradata , 18 )"		8577682	0					
ANR	8577777	Callee	tta_check_crc		8577682	0					
ANR	8577778	Identifier	tta_check_crc		8577682	0					
ANR	8577779	ArgumentList	s		8577682	1					
ANR	8577780	Argument	s		8577682	0					
ANR	8577781	Identifier	s		8577682	0					
ANR	8577782	Argument	avctx -> extradata		8577682	1					
ANR	8577783	PtrMemberAccess	avctx -> extradata		8577682	0					
ANR	8577784	Identifier	avctx		8577682	0					
ANR	8577785	Identifier	extradata		8577682	1					
ANR	8577786	Argument	18		8577682	2					
ANR	8577787	PrimaryExpression	18		8577682	0					
ANR	8577788	ExpressionStatement	"skip_bits_long ( & s -> gb , 32 )"	41:8:621:647	8577682	1	True				
ANR	8577789	CallExpression	"skip_bits_long ( & s -> gb , 32 )"		8577682	0					
ANR	8577790	Callee	skip_bits_long		8577682	0					
ANR	8577791	Identifier	skip_bits_long		8577682	0					
ANR	8577792	ArgumentList	& s -> gb		8577682	1					
ANR	8577793	Argument	& s -> gb		8577682	0					
ANR	8577794	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577795	UnaryOperator	&		8577682	0					
ANR	8577796	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577797	Identifier	s		8577682	0					
ANR	8577798	Identifier	gb		8577682	1					
ANR	8577799	Argument	32		8577682	1					
ANR	8577800	PrimaryExpression	32		8577682	0					
ANR	8577801	ExpressionStatement	"s -> format = get_bits ( & s -> gb , 16 )"	45:8:660:692	8577682	2	True				
ANR	8577802	AssignmentExpression	"s -> format = get_bits ( & s -> gb , 16 )"		8577682	0		=			
ANR	8577803	PtrMemberAccess	s -> format		8577682	0					
ANR	8577804	Identifier	s		8577682	0					
ANR	8577805	Identifier	format		8577682	1					
ANR	8577806	CallExpression	"get_bits ( & s -> gb , 16 )"		8577682	1					
ANR	8577807	Callee	get_bits		8577682	0					
ANR	8577808	Identifier	get_bits		8577682	0					
ANR	8577809	ArgumentList	& s -> gb		8577682	1					
ANR	8577810	Argument	& s -> gb		8577682	0					
ANR	8577811	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577812	UnaryOperator	&		8577682	0					
ANR	8577813	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577814	Identifier	s		8577682	0					
ANR	8577815	Identifier	gb		8577682	1					
ANR	8577816	Argument	16		8577682	1					
ANR	8577817	PrimaryExpression	16		8577682	0					
ANR	8577818	IfStatement	if ( s -> format > 2 )		8577682	3					
ANR	8577819	Condition	s -> format > 2	47:12:707:719	8577682	0	True				
ANR	8577820	RelationalExpression	s -> format > 2		8577682	0		>			
ANR	8577821	PtrMemberAccess	s -> format		8577682	0					
ANR	8577822	Identifier	s		8577682	0					
ANR	8577823	Identifier	format		8577682	1					
ANR	8577824	PrimaryExpression	2		8577682	1					
ANR	8577825	CompoundStatement		45:27:661:661	8577682	1					
ANR	8577826	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid format\\n"" )"	49:12:737:784	8577682	0	True				
ANR	8577827	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid format\\n"" )"		8577682	0					
ANR	8577828	Callee	av_log		8577682	0					
ANR	8577829	Identifier	av_log		8577682	0					
ANR	8577830	ArgumentList	avctx		8577682	1					
ANR	8577831	Argument	avctx		8577682	0					
ANR	8577832	Identifier	avctx		8577682	0					
ANR	8577833	Argument	AV_LOG_ERROR		8577682	1					
ANR	8577834	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8577835	Argument	"""Invalid format\\n"""		8577682	2					
ANR	8577836	PrimaryExpression	"""Invalid format\\n"""		8577682	0					
ANR	8577837	ReturnStatement	return AVERROR_INVALIDDATA ;	51:12:799:825	8577682	1	True				
ANR	8577838	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8577839	IfStatement	if ( s -> format == FORMAT_ENCRYPTED )		8577682	4					
ANR	8577840	Condition	s -> format == FORMAT_ENCRYPTED	55:12:851:879	8577682	0	True				
ANR	8577841	EqualityExpression	s -> format == FORMAT_ENCRYPTED		8577682	0		==			
ANR	8577842	PtrMemberAccess	s -> format		8577682	0					
ANR	8577843	Identifier	s		8577682	0					
ANR	8577844	Identifier	format		8577682	1					
ANR	8577845	Identifier	FORMAT_ENCRYPTED		8577682	1					
ANR	8577846	CompoundStatement		53:43:821:821	8577682	1					
ANR	8577847	IfStatement	if ( ! s -> pass )		8577682	0					
ANR	8577848	Condition	! s -> pass	57:16:901:908	8577682	0	True				
ANR	8577849	UnaryOperationExpression	! s -> pass		8577682	0					
ANR	8577850	UnaryOperator	!		8577682	0					
ANR	8577851	PtrMemberAccess	s -> pass		8577682	1					
ANR	8577852	Identifier	s		8577682	0					
ANR	8577853	Identifier	pass		8577682	1					
ANR	8577854	CompoundStatement		55:26:850:850	8577682	1					
ANR	8577855	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Missing password for encrypted stream. Please use the -password option\\n"" )"	59:16:930:1033	8577682	0	True				
ANR	8577856	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Missing password for encrypted stream. Please use the -password option\\n"" )"		8577682	0					
ANR	8577857	Callee	av_log		8577682	0					
ANR	8577858	Identifier	av_log		8577682	0					
ANR	8577859	ArgumentList	avctx		8577682	1					
ANR	8577860	Argument	avctx		8577682	0					
ANR	8577861	Identifier	avctx		8577682	0					
ANR	8577862	Argument	AV_LOG_ERROR		8577682	1					
ANR	8577863	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8577864	Argument	"""Missing password for encrypted stream. Please use the -password option\\n"""		8577682	2					
ANR	8577865	PrimaryExpression	"""Missing password for encrypted stream. Please use the -password option\\n"""		8577682	0					
ANR	8577866	ReturnStatement	return AVERROR ( EINVAL ) ;	61:16:1052:1074	8577682	1	True				
ANR	8577867	CallExpression	AVERROR ( EINVAL )		8577682	0					
ANR	8577868	Callee	AVERROR		8577682	0					
ANR	8577869	Identifier	AVERROR		8577682	0					
ANR	8577870	ArgumentList	EINVAL		8577682	1					
ANR	8577871	Argument	EINVAL		8577682	0					
ANR	8577872	Identifier	EINVAL		8577682	0					
ANR	8577873	ExpressionStatement	"AV_WL64 ( s -> crc_pass , tta_check_crc64 ( s -> pass ) )"	65:12:1104:1150	8577682	1	True				
ANR	8577874	CallExpression	"AV_WL64 ( s -> crc_pass , tta_check_crc64 ( s -> pass ) )"		8577682	0					
ANR	8577875	Callee	AV_WL64		8577682	0					
ANR	8577876	Identifier	AV_WL64		8577682	0					
ANR	8577877	ArgumentList	s -> crc_pass		8577682	1					
ANR	8577878	Argument	s -> crc_pass		8577682	0					
ANR	8577879	PtrMemberAccess	s -> crc_pass		8577682	0					
ANR	8577880	Identifier	s		8577682	0					
ANR	8577881	Identifier	crc_pass		8577682	1					
ANR	8577882	Argument	tta_check_crc64 ( s -> pass )		8577682	1					
ANR	8577883	CallExpression	tta_check_crc64 ( s -> pass )		8577682	0					
ANR	8577884	Callee	tta_check_crc64		8577682	0					
ANR	8577885	Identifier	tta_check_crc64		8577682	0					
ANR	8577886	ArgumentList	s -> pass		8577682	1					
ANR	8577887	Argument	s -> pass		8577682	0					
ANR	8577888	PtrMemberAccess	s -> pass		8577682	0					
ANR	8577889	Identifier	s		8577682	0					
ANR	8577890	Identifier	pass		8577682	1					
ANR	8577891	ExpressionStatement	"avctx -> channels = s -> channels = get_bits ( & s -> gb , 16 )"	69:8:1172:1224	8577682	5	True				
ANR	8577892	AssignmentExpression	"avctx -> channels = s -> channels = get_bits ( & s -> gb , 16 )"		8577682	0		=			
ANR	8577893	PtrMemberAccess	avctx -> channels		8577682	0					
ANR	8577894	Identifier	avctx		8577682	0					
ANR	8577895	Identifier	channels		8577682	1					
ANR	8577896	AssignmentExpression	"s -> channels = get_bits ( & s -> gb , 16 )"		8577682	1		=			
ANR	8577897	PtrMemberAccess	s -> channels		8577682	0					
ANR	8577898	Identifier	s		8577682	0					
ANR	8577899	Identifier	channels		8577682	1					
ANR	8577900	CallExpression	"get_bits ( & s -> gb , 16 )"		8577682	1					
ANR	8577901	Callee	get_bits		8577682	0					
ANR	8577902	Identifier	get_bits		8577682	0					
ANR	8577903	ArgumentList	& s -> gb		8577682	1					
ANR	8577904	Argument	& s -> gb		8577682	0					
ANR	8577905	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577906	UnaryOperator	&		8577682	0					
ANR	8577907	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577908	Identifier	s		8577682	0					
ANR	8577909	Identifier	gb		8577682	1					
ANR	8577910	Argument	16		8577682	1					
ANR	8577911	PrimaryExpression	16		8577682	0					
ANR	8577912	IfStatement	if ( s -> channels > 1 && s -> channels < 9 )		8577682	6					
ANR	8577913	Condition	s -> channels > 1 && s -> channels < 9	71:12:1239:1272	8577682	0	True				
ANR	8577914	AndExpression	s -> channels > 1 && s -> channels < 9		8577682	0		&&			
ANR	8577915	RelationalExpression	s -> channels > 1		8577682	0		>			
ANR	8577916	PtrMemberAccess	s -> channels		8577682	0					
ANR	8577917	Identifier	s		8577682	0					
ANR	8577918	Identifier	channels		8577682	1					
ANR	8577919	PrimaryExpression	1		8577682	1					
ANR	8577920	RelationalExpression	s -> channels < 9		8577682	1		<			
ANR	8577921	PtrMemberAccess	s -> channels		8577682	0					
ANR	8577922	Identifier	s		8577682	0					
ANR	8577923	Identifier	channels		8577682	1					
ANR	8577924	PrimaryExpression	9		8577682	1					
ANR	8577925	ExpressionStatement	avctx -> channel_layout = tta_channel_layouts [ s -> channels - 2 ]	73:12:1288:1346	8577682	1	True				
ANR	8577926	AssignmentExpression	avctx -> channel_layout = tta_channel_layouts [ s -> channels - 2 ]		8577682	0		=			
ANR	8577927	PtrMemberAccess	avctx -> channel_layout		8577682	0					
ANR	8577928	Identifier	avctx		8577682	0					
ANR	8577929	Identifier	channel_layout		8577682	1					
ANR	8577930	ArrayIndexing	tta_channel_layouts [ s -> channels - 2 ]		8577682	1					
ANR	8577931	Identifier	tta_channel_layouts		8577682	0					
ANR	8577932	AdditiveExpression	s -> channels - 2		8577682	1		-			
ANR	8577933	PtrMemberAccess	s -> channels		8577682	0					
ANR	8577934	Identifier	s		8577682	0					
ANR	8577935	Identifier	channels		8577682	1					
ANR	8577936	PrimaryExpression	2		8577682	1					
ANR	8577937	ExpressionStatement	"avctx -> bits_per_raw_sample = get_bits ( & s -> gb , 16 )"	75:8:1357:1406	8577682	7	True				
ANR	8577938	AssignmentExpression	"avctx -> bits_per_raw_sample = get_bits ( & s -> gb , 16 )"		8577682	0		=			
ANR	8577939	PtrMemberAccess	avctx -> bits_per_raw_sample		8577682	0					
ANR	8577940	Identifier	avctx		8577682	0					
ANR	8577941	Identifier	bits_per_raw_sample		8577682	1					
ANR	8577942	CallExpression	"get_bits ( & s -> gb , 16 )"		8577682	1					
ANR	8577943	Callee	get_bits		8577682	0					
ANR	8577944	Identifier	get_bits		8577682	0					
ANR	8577945	ArgumentList	& s -> gb		8577682	1					
ANR	8577946	Argument	& s -> gb		8577682	0					
ANR	8577947	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577948	UnaryOperator	&		8577682	0					
ANR	8577949	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577950	Identifier	s		8577682	0					
ANR	8577951	Identifier	gb		8577682	1					
ANR	8577952	Argument	16		8577682	1					
ANR	8577953	PrimaryExpression	16		8577682	0					
ANR	8577954	ExpressionStatement	s -> bps = ( avctx -> bits_per_raw_sample + 7 ) / 8	77:8:1417:1462	8577682	8	True				
ANR	8577955	AssignmentExpression	s -> bps = ( avctx -> bits_per_raw_sample + 7 ) / 8		8577682	0		=			
ANR	8577956	PtrMemberAccess	s -> bps		8577682	0					
ANR	8577957	Identifier	s		8577682	0					
ANR	8577958	Identifier	bps		8577682	1					
ANR	8577959	MultiplicativeExpression	( avctx -> bits_per_raw_sample + 7 ) / 8		8577682	1		/			
ANR	8577960	AdditiveExpression	avctx -> bits_per_raw_sample + 7		8577682	0		+			
ANR	8577961	PtrMemberAccess	avctx -> bits_per_raw_sample		8577682	0					
ANR	8577962	Identifier	avctx		8577682	0					
ANR	8577963	Identifier	bits_per_raw_sample		8577682	1					
ANR	8577964	PrimaryExpression	7		8577682	1					
ANR	8577965	PrimaryExpression	8		8577682	1					
ANR	8577966	ExpressionStatement	"avctx -> sample_rate = get_bits_long ( & s -> gb , 32 )"	79:8:1473:1519	8577682	9	True				
ANR	8577967	AssignmentExpression	"avctx -> sample_rate = get_bits_long ( & s -> gb , 32 )"		8577682	0		=			
ANR	8577968	PtrMemberAccess	avctx -> sample_rate		8577682	0					
ANR	8577969	Identifier	avctx		8577682	0					
ANR	8577970	Identifier	sample_rate		8577682	1					
ANR	8577971	CallExpression	"get_bits_long ( & s -> gb , 32 )"		8577682	1					
ANR	8577972	Callee	get_bits_long		8577682	0					
ANR	8577973	Identifier	get_bits_long		8577682	0					
ANR	8577974	ArgumentList	& s -> gb		8577682	1					
ANR	8577975	Argument	& s -> gb		8577682	0					
ANR	8577976	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577977	UnaryOperator	&		8577682	0					
ANR	8577978	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577979	Identifier	s		8577682	0					
ANR	8577980	Identifier	gb		8577682	1					
ANR	8577981	Argument	32		8577682	1					
ANR	8577982	PrimaryExpression	32		8577682	0					
ANR	8577983	ExpressionStatement	"s -> data_length = get_bits_long ( & s -> gb , 32 )"	81:8:1530:1572	8577682	10	True				
ANR	8577984	AssignmentExpression	"s -> data_length = get_bits_long ( & s -> gb , 32 )"		8577682	0		=			
ANR	8577985	PtrMemberAccess	s -> data_length		8577682	0					
ANR	8577986	Identifier	s		8577682	0					
ANR	8577987	Identifier	data_length		8577682	1					
ANR	8577988	CallExpression	"get_bits_long ( & s -> gb , 32 )"		8577682	1					
ANR	8577989	Callee	get_bits_long		8577682	0					
ANR	8577990	Identifier	get_bits_long		8577682	0					
ANR	8577991	ArgumentList	& s -> gb		8577682	1					
ANR	8577992	Argument	& s -> gb		8577682	0					
ANR	8577993	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8577994	UnaryOperator	&		8577682	0					
ANR	8577995	PtrMemberAccess	s -> gb		8577682	1					
ANR	8577996	Identifier	s		8577682	0					
ANR	8577997	Identifier	gb		8577682	1					
ANR	8577998	Argument	32		8577682	1					
ANR	8577999	PrimaryExpression	32		8577682	0					
ANR	8578000	ExpressionStatement	"skip_bits_long ( & s -> gb , 32 )"	83:8:1583:1609	8577682	11	True				
ANR	8578001	CallExpression	"skip_bits_long ( & s -> gb , 32 )"		8577682	0					
ANR	8578002	Callee	skip_bits_long		8577682	0					
ANR	8578003	Identifier	skip_bits_long		8577682	0					
ANR	8578004	ArgumentList	& s -> gb		8577682	1					
ANR	8578005	Argument	& s -> gb		8577682	0					
ANR	8578006	UnaryOperationExpression	& s -> gb		8577682	0					
ANR	8578007	UnaryOperator	&		8577682	0					
ANR	8578008	PtrMemberAccess	s -> gb		8577682	1					
ANR	8578009	Identifier	s		8577682	0					
ANR	8578010	Identifier	gb		8577682	1					
ANR	8578011	Argument	32		8577682	1					
ANR	8578012	PrimaryExpression	32		8577682	0					
ANR	8578013	IfStatement	if ( s -> channels == 0 )		8577682	12					
ANR	8578014	Condition	s -> channels == 0	87:12:1645:1660	8577682	0	True				
ANR	8578015	EqualityExpression	s -> channels == 0		8577682	0		==			
ANR	8578016	PtrMemberAccess	s -> channels		8577682	0					
ANR	8578017	Identifier	s		8577682	0					
ANR	8578018	Identifier	channels		8577682	1					
ANR	8578019	PrimaryExpression	0		8577682	1					
ANR	8578020	CompoundStatement		85:30:1602:1602	8577682	1					
ANR	8578021	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid number of channels\\n"" )"	89:12:1678:1737	8577682	0	True				
ANR	8578022	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid number of channels\\n"" )"		8577682	0					
ANR	8578023	Callee	av_log		8577682	0					
ANR	8578024	Identifier	av_log		8577682	0					
ANR	8578025	ArgumentList	avctx		8577682	1					
ANR	8578026	Argument	avctx		8577682	0					
ANR	8578027	Identifier	avctx		8577682	0					
ANR	8578028	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578029	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578030	Argument	"""Invalid number of channels\\n"""		8577682	2					
ANR	8578031	PrimaryExpression	"""Invalid number of channels\\n"""		8577682	0					
ANR	8578032	ReturnStatement	return AVERROR_INVALIDDATA ;	91:12:1752:1778	8577682	1	True				
ANR	8578033	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8578034	ElseStatement	else		8577682	0					
ANR	8578035	IfStatement	if ( avctx -> sample_rate == 0 )		8577682	0					
ANR	8578036	Condition	avctx -> sample_rate == 0	93:19:1800:1822	8577682	0	True				
ANR	8578037	EqualityExpression	avctx -> sample_rate == 0		8577682	0		==			
ANR	8578038	PtrMemberAccess	avctx -> sample_rate		8577682	0					
ANR	8578039	Identifier	avctx		8577682	0					
ANR	8578040	Identifier	sample_rate		8577682	1					
ANR	8578041	PrimaryExpression	0		8577682	1					
ANR	8578042	CompoundStatement		91:44:1764:1764	8577682	1					
ANR	8578043	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid samplerate\\n"" )"	95:12:1840:1891	8577682	0	True				
ANR	8578044	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid samplerate\\n"" )"		8577682	0					
ANR	8578045	Callee	av_log		8577682	0					
ANR	8578046	Identifier	av_log		8577682	0					
ANR	8578047	ArgumentList	avctx		8577682	1					
ANR	8578048	Argument	avctx		8577682	0					
ANR	8578049	Identifier	avctx		8577682	0					
ANR	8578050	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578051	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578052	Argument	"""Invalid samplerate\\n"""		8577682	2					
ANR	8578053	PrimaryExpression	"""Invalid samplerate\\n"""		8577682	0					
ANR	8578054	ReturnStatement	return AVERROR_INVALIDDATA ;	97:12:1906:1932	8577682	1	True				
ANR	8578055	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8578056	SwitchStatement	switch ( s -> bps )		8577682	13					
ANR	8578057	Condition	s -> bps	103:15:1963:1968	8577682	0	True				
ANR	8578058	PtrMemberAccess	s -> bps		8577682	0					
ANR	8578059	Identifier	s		8577682	0					
ANR	8578060	Identifier	bps		8577682	1					
ANR	8578061	CompoundStatement		101:23:1910:1910	8577682	1					
ANR	8578062	Label	case 1 :	105:8:1982:1988	8577682	0	True				
ANR	8578063	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_U8	105:16:1990:2026	8577682	1	True				
ANR	8578064	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_U8		8577682	0		=			
ANR	8578065	PtrMemberAccess	avctx -> sample_fmt		8577682	0					
ANR	8578066	Identifier	avctx		8577682	0					
ANR	8578067	Identifier	sample_fmt		8577682	1					
ANR	8578068	Identifier	AV_SAMPLE_FMT_U8		8577682	1					
ANR	8578069	BreakStatement	break ;	105:54:2028:2033	8577682	2	True				
ANR	8578070	Label	case 2 :	107:8:2044:2050	8577682	3	True				
ANR	8578071	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16	109:12:2065:2102	8577682	4	True				
ANR	8578072	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16		8577682	0		=			
ANR	8578073	PtrMemberAccess	avctx -> sample_fmt		8577682	0					
ANR	8578074	Identifier	avctx		8577682	0					
ANR	8578075	Identifier	sample_fmt		8577682	1					
ANR	8578076	Identifier	AV_SAMPLE_FMT_S16		8577682	1					
ANR	8578077	BreakStatement	break ;	111:12:2117:2122	8577682	5	True				
ANR	8578078	Label	case 3 :	113:8:2133:2139	8577682	6	True				
ANR	8578079	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S32	115:12:2154:2191	8577682	7	True				
ANR	8578080	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S32		8577682	0		=			
ANR	8578081	PtrMemberAccess	avctx -> sample_fmt		8577682	0					
ANR	8578082	Identifier	avctx		8577682	0					
ANR	8578083	Identifier	sample_fmt		8577682	1					
ANR	8578084	Identifier	AV_SAMPLE_FMT_S32		8577682	1					
ANR	8578085	BreakStatement	break ;	117:12:2206:2211	8577682	8	True				
ANR	8578086	Label	default :	121:8:2287:2294	8577682	9	True				
ANR	8578087	Identifier	default		8577682	0					
ANR	8578088	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid/unsupported sample format.\\n"" )"	123:12:2309:2376	8577682	10	True				
ANR	8578089	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid/unsupported sample format.\\n"" )"		8577682	0					
ANR	8578090	Callee	av_log		8577682	0					
ANR	8578091	Identifier	av_log		8577682	0					
ANR	8578092	ArgumentList	avctx		8577682	1					
ANR	8578093	Argument	avctx		8577682	0					
ANR	8578094	Identifier	avctx		8577682	0					
ANR	8578095	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578096	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578097	Argument	"""Invalid/unsupported sample format.\\n"""		8577682	2					
ANR	8578098	PrimaryExpression	"""Invalid/unsupported sample format.\\n"""		8577682	0					
ANR	8578099	ReturnStatement	return AVERROR_INVALIDDATA ;	125:12:2391:2417	8577682	11	True				
ANR	8578100	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8578101	IfStatement	if ( avctx -> sample_rate > 0x7FFFFFu )		8577682	14					
ANR	8578102	Condition	avctx -> sample_rate > 0x7FFFFFu	133:12:2474:2503	8577682	0	True				
ANR	8578103	RelationalExpression	avctx -> sample_rate > 0x7FFFFFu		8577682	0		>			
ANR	8578104	PtrMemberAccess	avctx -> sample_rate		8577682	0					
ANR	8578105	Identifier	avctx		8577682	0					
ANR	8578106	Identifier	sample_rate		8577682	1					
ANR	8578107	PrimaryExpression	0x7FFFFFu		8577682	1					
ANR	8578108	CompoundStatement		131:44:2445:2445	8577682	1					
ANR	8578109	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""sample_rate too large\\n"" )"	135:12:2521:2575	8577682	0	True				
ANR	8578110	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""sample_rate too large\\n"" )"		8577682	0					
ANR	8578111	Callee	av_log		8577682	0					
ANR	8578112	Identifier	av_log		8577682	0					
ANR	8578113	ArgumentList	avctx		8577682	1					
ANR	8578114	Argument	avctx		8577682	0					
ANR	8578115	Identifier	avctx		8577682	0					
ANR	8578116	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578117	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578118	Argument	"""sample_rate too large\\n"""		8577682	2					
ANR	8578119	PrimaryExpression	"""sample_rate too large\\n"""		8577682	0					
ANR	8578120	ReturnStatement	return AVERROR ( EINVAL ) ;	137:12:2590:2612	8577682	1	True				
ANR	8578121	CallExpression	AVERROR ( EINVAL )		8577682	0					
ANR	8578122	Callee	AVERROR		8577682	0					
ANR	8578123	Identifier	AVERROR		8577682	0					
ANR	8578124	ArgumentList	EINVAL		8577682	1					
ANR	8578125	Argument	EINVAL		8577682	0					
ANR	8578126	Identifier	EINVAL		8577682	0					
ANR	8578127	ExpressionStatement	s -> frame_length = 256 * avctx -> sample_rate / 245	141:8:2634:2682	8577682	15	True				
ANR	8578128	AssignmentExpression	s -> frame_length = 256 * avctx -> sample_rate / 245		8577682	0		=			
ANR	8578129	PtrMemberAccess	s -> frame_length		8577682	0					
ANR	8578130	Identifier	s		8577682	0					
ANR	8578131	Identifier	frame_length		8577682	1					
ANR	8578132	MultiplicativeExpression	256 * avctx -> sample_rate / 245		8577682	1		*			
ANR	8578133	PrimaryExpression	256		8577682	0					
ANR	8578134	MultiplicativeExpression	avctx -> sample_rate / 245		8577682	1		/			
ANR	8578135	PtrMemberAccess	avctx -> sample_rate		8577682	0					
ANR	8578136	Identifier	avctx		8577682	0					
ANR	8578137	Identifier	sample_rate		8577682	1					
ANR	8578138	PrimaryExpression	245		8577682	1					
ANR	8578139	ExpressionStatement	s -> last_frame_length = s -> data_length % s -> frame_length	145:8:2695:2750	8577682	16	True				
ANR	8578140	AssignmentExpression	s -> last_frame_length = s -> data_length % s -> frame_length		8577682	0		=			
ANR	8578141	PtrMemberAccess	s -> last_frame_length		8577682	0					
ANR	8578142	Identifier	s		8577682	0					
ANR	8578143	Identifier	last_frame_length		8577682	1					
ANR	8578144	MultiplicativeExpression	s -> data_length % s -> frame_length		8577682	1		%			
ANR	8578145	PtrMemberAccess	s -> data_length		8577682	0					
ANR	8578146	Identifier	s		8577682	0					
ANR	8578147	Identifier	data_length		8577682	1					
ANR	8578148	PtrMemberAccess	s -> frame_length		8577682	1					
ANR	8578149	Identifier	s		8577682	0					
ANR	8578150	Identifier	frame_length		8577682	1					
ANR	8578151	ExpressionStatement	total_frames = s -> data_length / s -> frame_length + ( s -> last_frame_length ? 1 : 0 )	147:8:2761:2865	8577682	17	True				
ANR	8578152	AssignmentExpression	total_frames = s -> data_length / s -> frame_length + ( s -> last_frame_length ? 1 : 0 )		8577682	0		=			
ANR	8578153	Identifier	total_frames		8577682	0					
ANR	8578154	AdditiveExpression	s -> data_length / s -> frame_length + ( s -> last_frame_length ? 1 : 0 )		8577682	1		+			
ANR	8578155	MultiplicativeExpression	s -> data_length / s -> frame_length		8577682	0		/			
ANR	8578156	PtrMemberAccess	s -> data_length		8577682	0					
ANR	8578157	Identifier	s		8577682	0					
ANR	8578158	Identifier	data_length		8577682	1					
ANR	8578159	PtrMemberAccess	s -> frame_length		8577682	1					
ANR	8578160	Identifier	s		8577682	0					
ANR	8578161	Identifier	frame_length		8577682	1					
ANR	8578162	ConditionalExpression	s -> last_frame_length ? 1 : 0		8577682	1					
ANR	8578163	Condition	s -> last_frame_length		8577682	0					
ANR	8578164	PtrMemberAccess	s -> last_frame_length		8577682	0					
ANR	8578165	Identifier	s		8577682	0					
ANR	8578166	Identifier	last_frame_length		8577682	1					
ANR	8578167	PrimaryExpression	1		8577682	1					
ANR	8578168	PrimaryExpression	0		8577682	2					
ANR	8578169	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""format: %d chans: %d bps: %d rate: %d block: %d\\n"" , s -> format , avctx -> channels , avctx -> bits_per_coded_sample , avctx -> sample_rate , avctx -> block_align )"	153:8:2878:3082	8577682	18	True				
ANR	8578170	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""format: %d chans: %d bps: %d rate: %d block: %d\\n"" , s -> format , avctx -> channels , avctx -> bits_per_coded_sample , avctx -> sample_rate , avctx -> block_align )"		8577682	0					
ANR	8578171	Callee	av_log		8577682	0					
ANR	8578172	Identifier	av_log		8577682	0					
ANR	8578173	ArgumentList	avctx		8577682	1					
ANR	8578174	Argument	avctx		8577682	0					
ANR	8578175	Identifier	avctx		8577682	0					
ANR	8578176	Argument	AV_LOG_DEBUG		8577682	1					
ANR	8578177	Identifier	AV_LOG_DEBUG		8577682	0					
ANR	8578178	Argument	"""format: %d chans: %d bps: %d rate: %d block: %d\\n"""		8577682	2					
ANR	8578179	PrimaryExpression	"""format: %d chans: %d bps: %d rate: %d block: %d\\n"""		8577682	0					
ANR	8578180	Argument	s -> format		8577682	3					
ANR	8578181	PtrMemberAccess	s -> format		8577682	0					
ANR	8578182	Identifier	s		8577682	0					
ANR	8578183	Identifier	format		8577682	1					
ANR	8578184	Argument	avctx -> channels		8577682	4					
ANR	8578185	PtrMemberAccess	avctx -> channels		8577682	0					
ANR	8578186	Identifier	avctx		8577682	0					
ANR	8578187	Identifier	channels		8577682	1					
ANR	8578188	Argument	avctx -> bits_per_coded_sample		8577682	5					
ANR	8578189	PtrMemberAccess	avctx -> bits_per_coded_sample		8577682	0					
ANR	8578190	Identifier	avctx		8577682	0					
ANR	8578191	Identifier	bits_per_coded_sample		8577682	1					
ANR	8578192	Argument	avctx -> sample_rate		8577682	6					
ANR	8578193	PtrMemberAccess	avctx -> sample_rate		8577682	0					
ANR	8578194	Identifier	avctx		8577682	0					
ANR	8578195	Identifier	sample_rate		8577682	1					
ANR	8578196	Argument	avctx -> block_align		8577682	7					
ANR	8578197	PtrMemberAccess	avctx -> block_align		8577682	0					
ANR	8578198	Identifier	avctx		8577682	0					
ANR	8578199	Identifier	block_align		8577682	1					
ANR	8578200	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""data_length: %d frame_length: %d last: %d total: %d\\n"" , s -> data_length , s -> frame_length , s -> last_frame_length , total_frames )"	159:8:3093:3259	8577682	19	True				
ANR	8578201	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""data_length: %d frame_length: %d last: %d total: %d\\n"" , s -> data_length , s -> frame_length , s -> last_frame_length , total_frames )"		8577682	0					
ANR	8578202	Callee	av_log		8577682	0					
ANR	8578203	Identifier	av_log		8577682	0					
ANR	8578204	ArgumentList	avctx		8577682	1					
ANR	8578205	Argument	avctx		8577682	0					
ANR	8578206	Identifier	avctx		8577682	0					
ANR	8578207	Argument	AV_LOG_DEBUG		8577682	1					
ANR	8578208	Identifier	AV_LOG_DEBUG		8577682	0					
ANR	8578209	Argument	"""data_length: %d frame_length: %d last: %d total: %d\\n"""		8577682	2					
ANR	8578210	PrimaryExpression	"""data_length: %d frame_length: %d last: %d total: %d\\n"""		8577682	0					
ANR	8578211	Argument	s -> data_length		8577682	3					
ANR	8578212	PtrMemberAccess	s -> data_length		8577682	0					
ANR	8578213	Identifier	s		8577682	0					
ANR	8578214	Identifier	data_length		8577682	1					
ANR	8578215	Argument	s -> frame_length		8577682	4					
ANR	8578216	PtrMemberAccess	s -> frame_length		8577682	0					
ANR	8578217	Identifier	s		8577682	0					
ANR	8578218	Identifier	frame_length		8577682	1					
ANR	8578219	Argument	s -> last_frame_length		8577682	5					
ANR	8578220	PtrMemberAccess	s -> last_frame_length		8577682	0					
ANR	8578221	Identifier	s		8577682	0					
ANR	8578222	Identifier	last_frame_length		8577682	1					
ANR	8578223	Argument	total_frames		8577682	6					
ANR	8578224	Identifier	total_frames		8577682	0					
ANR	8578225	IfStatement	if ( s -> frame_length >= UINT_MAX / ( s -> channels * sizeof ( int32_t ) ) )		8577682	20					
ANR	8578226	Condition	s -> frame_length >= UINT_MAX / ( s -> channels * sizeof ( int32_t ) )	165:11:3275:3335	8577682	0	True				
ANR	8578227	RelationalExpression	s -> frame_length >= UINT_MAX / ( s -> channels * sizeof ( int32_t ) )		8577682	0		>=			
ANR	8578228	PtrMemberAccess	s -> frame_length		8577682	0					
ANR	8578229	Identifier	s		8577682	0					
ANR	8578230	Identifier	frame_length		8577682	1					
ANR	8578231	MultiplicativeExpression	UINT_MAX / ( s -> channels * sizeof ( int32_t ) )		8577682	1		/			
ANR	8578232	Identifier	UINT_MAX		8577682	0					
ANR	8578233	MultiplicativeExpression	s -> channels * sizeof ( int32_t )		8577682	1		*			
ANR	8578234	PtrMemberAccess	s -> channels		8577682	0					
ANR	8578235	Identifier	s		8577682	0					
ANR	8578236	Identifier	channels		8577682	1					
ANR	8578237	SizeofExpression	sizeof ( int32_t )		8577682	1					
ANR	8578238	Sizeof	sizeof		8577682	0					
ANR	8578239	SizeofOperand	int32_t		8577682	1					
ANR	8578240	CompoundStatement		163:73:3276:3276	8577682	1					
ANR	8578241	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame_length too large\\n"" )"	167:12:3352:3407	8577682	0	True				
ANR	8578242	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame_length too large\\n"" )"		8577682	0					
ANR	8578243	Callee	av_log		8577682	0					
ANR	8578244	Identifier	av_log		8577682	0					
ANR	8578245	ArgumentList	avctx		8577682	1					
ANR	8578246	Argument	avctx		8577682	0					
ANR	8578247	Identifier	avctx		8577682	0					
ANR	8578248	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578249	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578250	Argument	"""frame_length too large\\n"""		8577682	2					
ANR	8578251	PrimaryExpression	"""frame_length too large\\n"""		8577682	0					
ANR	8578252	ReturnStatement	return AVERROR_INVALIDDATA ;	169:12:3422:3448	8577682	1	True				
ANR	8578253	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8578254	IfStatement	if ( s -> bps < 3 )		8577682	21					
ANR	8578255	Condition	s -> bps < 3	175:12:3476:3485	8577682	0	True				
ANR	8578256	RelationalExpression	s -> bps < 3		8577682	0		<			
ANR	8578257	PtrMemberAccess	s -> bps		8577682	0					
ANR	8578258	Identifier	s		8577682	0					
ANR	8578259	Identifier	bps		8577682	1					
ANR	8578260	PrimaryExpression	3		8577682	1					
ANR	8578261	CompoundStatement		173:24:3427:3427	8577682	1					
ANR	8578262	ExpressionStatement	s -> decode_buffer = av_mallocz ( sizeof ( int32_t ) * s -> frame_length * s -> channels )	177:12:3503:3577	8577682	0	True				
ANR	8578263	AssignmentExpression	s -> decode_buffer = av_mallocz ( sizeof ( int32_t ) * s -> frame_length * s -> channels )		8577682	0		=			
ANR	8578264	PtrMemberAccess	s -> decode_buffer		8577682	0					
ANR	8578265	Identifier	s		8577682	0					
ANR	8578266	Identifier	decode_buffer		8577682	1					
ANR	8578267	CallExpression	av_mallocz ( sizeof ( int32_t ) * s -> frame_length * s -> channels )		8577682	1					
ANR	8578268	Callee	av_mallocz		8577682	0					
ANR	8578269	Identifier	av_mallocz		8577682	0					
ANR	8578270	ArgumentList	sizeof ( int32_t ) * s -> frame_length * s -> channels		8577682	1					
ANR	8578271	Argument	sizeof ( int32_t ) * s -> frame_length * s -> channels		8577682	0					
ANR	8578272	MultiplicativeExpression	sizeof ( int32_t ) * s -> frame_length * s -> channels		8577682	0		*			
ANR	8578273	SizeofExpression	sizeof ( int32_t )		8577682	0					
ANR	8578274	Sizeof	sizeof		8577682	0					
ANR	8578275	SizeofOperand	int32_t		8577682	1					
ANR	8578276	MultiplicativeExpression	s -> frame_length * s -> channels		8577682	1		*			
ANR	8578277	PtrMemberAccess	s -> frame_length		8577682	0					
ANR	8578278	Identifier	s		8577682	0					
ANR	8578279	Identifier	frame_length		8577682	1					
ANR	8578280	PtrMemberAccess	s -> channels		8577682	1					
ANR	8578281	Identifier	s		8577682	0					
ANR	8578282	Identifier	channels		8577682	1					
ANR	8578283	IfStatement	if ( ! s -> decode_buffer )		8577682	1					
ANR	8578284	Condition	! s -> decode_buffer	179:16:3596:3612	8577682	0	True				
ANR	8578285	UnaryOperationExpression	! s -> decode_buffer		8577682	0					
ANR	8578286	UnaryOperator	!		8577682	0					
ANR	8578287	PtrMemberAccess	s -> decode_buffer		8577682	1					
ANR	8578288	Identifier	s		8577682	0					
ANR	8578289	Identifier	decode_buffer		8577682	1					
ANR	8578290	ReturnStatement	return AVERROR ( ENOMEM ) ;	181:16:3632:3654	8577682	1	True				
ANR	8578291	CallExpression	AVERROR ( ENOMEM )		8577682	0					
ANR	8578292	Callee	AVERROR		8577682	0					
ANR	8578293	Identifier	AVERROR		8577682	0					
ANR	8578294	ArgumentList	ENOMEM		8577682	1					
ANR	8578295	Argument	ENOMEM		8577682	0					
ANR	8578296	Identifier	ENOMEM		8577682	0					
ANR	8578297	ElseStatement	else		8577682	0					
ANR	8578298	ExpressionStatement	s -> decode_buffer = NULL	185:12:3685:3708	8577682	0	True				
ANR	8578299	AssignmentExpression	s -> decode_buffer = NULL		8577682	0		=			
ANR	8578300	PtrMemberAccess	s -> decode_buffer		8577682	0					
ANR	8578301	Identifier	s		8577682	0					
ANR	8578302	Identifier	decode_buffer		8577682	1					
ANR	8578303	Identifier	NULL		8577682	1					
ANR	8578304	ExpressionStatement	s -> ch_ctx = av_malloc ( avctx -> channels * sizeof ( * s -> ch_ctx ) )	187:8:3719:3778	8577682	22	True				
ANR	8578305	AssignmentExpression	s -> ch_ctx = av_malloc ( avctx -> channels * sizeof ( * s -> ch_ctx ) )		8577682	0		=			
ANR	8578306	PtrMemberAccess	s -> ch_ctx		8577682	0					
ANR	8578307	Identifier	s		8577682	0					
ANR	8578308	Identifier	ch_ctx		8577682	1					
ANR	8578309	CallExpression	av_malloc ( avctx -> channels * sizeof ( * s -> ch_ctx ) )		8577682	1					
ANR	8578310	Callee	av_malloc		8577682	0					
ANR	8578311	Identifier	av_malloc		8577682	0					
ANR	8578312	ArgumentList	avctx -> channels * sizeof ( * s -> ch_ctx )		8577682	1					
ANR	8578313	Argument	avctx -> channels * sizeof ( * s -> ch_ctx )		8577682	0					
ANR	8578314	MultiplicativeExpression	avctx -> channels * sizeof ( * s -> ch_ctx )		8577682	0		*			
ANR	8578315	PtrMemberAccess	avctx -> channels		8577682	0					
ANR	8578316	Identifier	avctx		8577682	0					
ANR	8578317	Identifier	channels		8577682	1					
ANR	8578318	SizeofExpression	sizeof ( * s -> ch_ctx )		8577682	1					
ANR	8578319	Sizeof	sizeof		8577682	0					
ANR	8578320	UnaryOperationExpression	* s -> ch_ctx		8577682	1					
ANR	8578321	UnaryOperator	*		8577682	0					
ANR	8578322	PtrMemberAccess	s -> ch_ctx		8577682	1					
ANR	8578323	Identifier	s		8577682	0					
ANR	8578324	Identifier	ch_ctx		8577682	1					
ANR	8578325	IfStatement	if ( ! s -> ch_ctx )		8577682	23					
ANR	8578326	Condition	! s -> ch_ctx	189:12:3793:3802	8577682	0	True				
ANR	8578327	UnaryOperationExpression	! s -> ch_ctx		8577682	0					
ANR	8578328	UnaryOperator	!		8577682	0					
ANR	8578329	PtrMemberAccess	s -> ch_ctx		8577682	1					
ANR	8578330	Identifier	s		8577682	0					
ANR	8578331	Identifier	ch_ctx		8577682	1					
ANR	8578332	CompoundStatement		187:24:3744:3744	8577682	1					
ANR	8578333	ExpressionStatement	av_freep ( & s -> decode_buffer )	191:12:3820:3847	8577682	0	True				
ANR	8578334	CallExpression	av_freep ( & s -> decode_buffer )		8577682	0					
ANR	8578335	Callee	av_freep		8577682	0					
ANR	8578336	Identifier	av_freep		8577682	0					
ANR	8578337	ArgumentList	& s -> decode_buffer		8577682	1					
ANR	8578338	Argument	& s -> decode_buffer		8577682	0					
ANR	8578339	UnaryOperationExpression	& s -> decode_buffer		8577682	0					
ANR	8578340	UnaryOperator	&		8577682	0					
ANR	8578341	PtrMemberAccess	s -> decode_buffer		8577682	1					
ANR	8578342	Identifier	s		8577682	0					
ANR	8578343	Identifier	decode_buffer		8577682	1					
ANR	8578344	ReturnStatement	return AVERROR ( ENOMEM ) ;	193:12:3862:3884	8577682	1	True				
ANR	8578345	CallExpression	AVERROR ( ENOMEM )		8577682	0					
ANR	8578346	Callee	AVERROR		8577682	0					
ANR	8578347	Identifier	AVERROR		8577682	0					
ANR	8578348	ArgumentList	ENOMEM		8577682	1					
ANR	8578349	Argument	ENOMEM		8577682	0					
ANR	8578350	Identifier	ENOMEM		8577682	0					
ANR	8578351	ElseStatement	else		8577682	0					
ANR	8578352	CompoundStatement		195:11:3848:3848	8577682	0					
ANR	8578353	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Wrong extradata present\\n"" )"	199:8:3920:3976	8577682	0	True				
ANR	8578354	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Wrong extradata present\\n"" )"		8577682	0					
ANR	8578355	Callee	av_log		8577682	0					
ANR	8578356	Identifier	av_log		8577682	0					
ANR	8578357	ArgumentList	avctx		8577682	1					
ANR	8578358	Argument	avctx		8577682	0					
ANR	8578359	Identifier	avctx		8577682	0					
ANR	8578360	Argument	AV_LOG_ERROR		8577682	1					
ANR	8578361	Identifier	AV_LOG_ERROR		8577682	0					
ANR	8578362	Argument	"""Wrong extradata present\\n"""		8577682	2					
ANR	8578363	PrimaryExpression	"""Wrong extradata present\\n"""		8577682	0					
ANR	8578364	ReturnStatement	return AVERROR_INVALIDDATA ;	201:8:3987:4013	8577682	1	True				
ANR	8578365	Identifier	AVERROR_INVALIDDATA		8577682	0					
ANR	8578366	ReturnStatement	return 0 ;	207:4:4029:4037	8577682	6	True				
ANR	8578367	PrimaryExpression	0		8577682	0					
ANR	8578368	ReturnType	static av_cold int		8577682	1					
ANR	8578369	Identifier	tta_decode_init		8577682	2					
ANR	8578370	ParameterList	AVCodecContext * avctx		8577682	3					
ANR	8578371	Parameter	AVCodecContext * avctx	1:35:35:56	8577682	0	True				
ANR	8578372	ParameterType	AVCodecContext *		8577682	0					
ANR	8578373	Identifier	avctx		8577682	1					
ANR	8578374	CFGEntryNode	ENTRY		8577682		True				
ANR	8578375	CFGExitNode	EXIT		8577682		True				
ANR	8578376	Symbol	av_malloc		8577682						
ANR	8578377	Symbol	ENOMEM		8577682						
ANR	8578378	Symbol	tta_channel_layouts		8577682						
ANR	8578379	Symbol	* s -> channels		8577682						
ANR	8578380	Symbol	get_bits		8577682						
ANR	8578381	Symbol	AV_SAMPLE_FMT_S16		8577682						
ANR	8578382	Symbol	UINT_MAX		8577682						
ANR	8578383	Symbol	avctx -> channels		8577682						
ANR	8578384	Symbol	avctx -> bits_per_raw_sample		8577682						
ANR	8578385	Symbol	AV_LOG_DEBUG		8577682						
ANR	8578386	Symbol	avctx -> sample_fmt		8577682						
ANR	8578387	Symbol	NULL		8577682						
ANR	8578388	Symbol	s -> data_length		8577682						
ANR	8578389	Symbol	av_mallocz		8577682						
ANR	8578390	Symbol	show_bits_long		8577682						
ANR	8578391	Symbol	& s -> gb		8577682						
ANR	8578392	Symbol	* avctx		8577682						
ANR	8578393	Symbol	s -> ch_ctx		8577682						
ANR	8578394	Symbol	* tta_channel_layouts		8577682						
ANR	8578395	Symbol	AV_EF_CRCCHECK		8577682						
ANR	8578396	Symbol	s -> avctx		8577682						
ANR	8578397	Symbol	s -> decode_buffer		8577682						
ANR	8578398	Symbol	s -> crc_table		8577682						
ANR	8578399	Symbol	avctx -> bits_per_coded_sample		8577682						
ANR	8578400	Symbol	AV_SAMPLE_FMT_S32		8577682						
ANR	8578401	Symbol	s -> frame_length		8577682						
ANR	8578402	Symbol	& s -> decode_buffer		8577682						
ANR	8578403	Symbol	s -> channels		8577682						
ANR	8578404	Symbol	total_frames		8577682						
ANR	8578405	Symbol	avctx -> block_align		8577682						
ANR	8578406	Symbol	get_bits_long		8577682						
ANR	8578407	Symbol	* * s		8577682						
ANR	8578408	Symbol	avctx		8577682						
ANR	8578409	Symbol	avctx -> extradata		8577682						
ANR	8578410	Symbol	AV_CRC_32_IEEE_LE		8577682						
ANR	8578411	Symbol	AV_LOG_ERROR		8577682						
ANR	8578412	Symbol	tta_check_crc64		8577682						
ANR	8578413	Symbol	FORMAT_ENCRYPTED		8577682						
ANR	8578414	Symbol	avctx -> extradata_size		8577682						
ANR	8578415	Symbol	avctx -> channel_layout		8577682						
ANR	8578416	Symbol	s -> crc_pass		8577682						
ANR	8578417	Symbol	AV_SAMPLE_FMT_U8		8577682						
ANR	8578418	Symbol	avctx -> priv_data		8577682						
ANR	8578419	Symbol	s -> pass		8577682						
ANR	8578420	Symbol	avctx -> sample_rate		8577682						
ANR	8578421	Symbol	EINVAL		8577682						
ANR	8578422	Symbol	s -> bps		8577682						
ANR	8578423	Symbol	s -> last_frame_length		8577682						
ANR	8578424	Symbol	* s -> ch_ctx		8577682						
ANR	8578425	Symbol	s		8577682						
ANR	8578426	Symbol	AV_RL32		8577682						
ANR	8578427	Symbol	AVERROR_INVALIDDATA		8577682						
ANR	8578428	Symbol	s -> format		8577682						
ANR	8578429	Symbol	AVERROR		8577682						
ANR	8578430	Symbol	avctx -> err_recognition		8577682						
ANR	8578431	Symbol	* s		8577682						
ANR	8578432	Symbol	av_crc_get_table		8577682						
