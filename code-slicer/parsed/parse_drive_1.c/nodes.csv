command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6312502	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_drive_1.c								
ANR	6312503	Function	parse_drive	1:0:0:947							
ANR	6312504	FunctionDef	"parse_drive (DeviceState * dev , const char * str , void * * ptr , const char * propname , Error * * errp)"		6312503	0					
ANR	6312505	CompoundStatement		5:0:133:947	6312503	0					
ANR	6312506	IdentifierDeclStatement	BlockBackend * blk ;	7:4:140:157	6312503	0	True				
ANR	6312507	IdentifierDecl	* blk		6312503	0					
ANR	6312508	IdentifierDeclType	BlockBackend *		6312503	0					
ANR	6312509	Identifier	blk		6312503	1					
ANR	6312510	ExpressionStatement	blk = blk_by_name ( str )	11:4:166:188	6312503	1	True				
ANR	6312511	AssignmentExpression	blk = blk_by_name ( str )		6312503	0		=			
ANR	6312512	Identifier	blk		6312503	0					
ANR	6312513	CallExpression	blk_by_name ( str )		6312503	1					
ANR	6312514	Callee	blk_by_name		6312503	0					
ANR	6312515	Identifier	blk_by_name		6312503	0					
ANR	6312516	ArgumentList	str		6312503	1					
ANR	6312517	Argument	str		6312503	0					
ANR	6312518	Identifier	str		6312503	0					
ANR	6312519	IfStatement	if ( ! blk )		6312503	2					
ANR	6312520	Condition	! blk	13:8:199:202	6312503	0	True				
ANR	6312521	UnaryOperationExpression	! blk		6312503	0					
ANR	6312522	UnaryOperator	!		6312503	0					
ANR	6312523	Identifier	blk		6312503	1					
ANR	6312524	CompoundStatement		9:14:71:71	6312503	1					
ANR	6312525	ExpressionStatement	"error_setg ( errp , ""Property '%s.%s' can't find value '%s'"" , object_get_typename ( OBJECT ( dev ) ) , propname , str )"	15:8:216:343	6312503	0	True				
ANR	6312526	CallExpression	"error_setg ( errp , ""Property '%s.%s' can't find value '%s'"" , object_get_typename ( OBJECT ( dev ) ) , propname , str )"		6312503	0					
ANR	6312527	Callee	error_setg		6312503	0					
ANR	6312528	Identifier	error_setg		6312503	0					
ANR	6312529	ArgumentList	errp		6312503	1					
ANR	6312530	Argument	errp		6312503	0					
ANR	6312531	Identifier	errp		6312503	0					
ANR	6312532	Argument	"""Property '%s.%s' can't find value '%s'"""		6312503	1					
ANR	6312533	PrimaryExpression	"""Property '%s.%s' can't find value '%s'"""		6312503	0					
ANR	6312534	Argument	object_get_typename ( OBJECT ( dev ) )		6312503	2					
ANR	6312535	CallExpression	object_get_typename ( OBJECT ( dev ) )		6312503	0					
ANR	6312536	Callee	object_get_typename		6312503	0					
ANR	6312537	Identifier	object_get_typename		6312503	0					
ANR	6312538	ArgumentList	OBJECT ( dev )		6312503	1					
ANR	6312539	Argument	OBJECT ( dev )		6312503	0					
ANR	6312540	CallExpression	OBJECT ( dev )		6312503	0					
ANR	6312541	Callee	OBJECT		6312503	0					
ANR	6312542	Identifier	OBJECT		6312503	0					
ANR	6312543	ArgumentList	dev		6312503	1					
ANR	6312544	Argument	dev		6312503	0					
ANR	6312545	Identifier	dev		6312503	0					
ANR	6312546	Argument	propname		6312503	3					
ANR	6312547	Identifier	propname		6312503	0					
ANR	6312548	Argument	str		6312503	4					
ANR	6312549	Identifier	str		6312503	0					
ANR	6312550	ReturnStatement	return ;	19:8:354:360	6312503	1	True				
ANR	6312551	IfStatement	"if ( blk_attach_dev ( blk , dev ) < 0 )"		6312503	3					
ANR	6312552	Condition	"blk_attach_dev ( blk , dev ) < 0"	23:8:378:405	6312503	0	True				
ANR	6312553	RelationalExpression	"blk_attach_dev ( blk , dev ) < 0"		6312503	0		<			
ANR	6312554	CallExpression	"blk_attach_dev ( blk , dev )"		6312503	0					
ANR	6312555	Callee	blk_attach_dev		6312503	0					
ANR	6312556	Identifier	blk_attach_dev		6312503	0					
ANR	6312557	ArgumentList	blk		6312503	1					
ANR	6312558	Argument	blk		6312503	0					
ANR	6312559	Identifier	blk		6312503	0					
ANR	6312560	Argument	dev		6312503	1					
ANR	6312561	Identifier	dev		6312503	0					
ANR	6312562	PrimaryExpression	0		6312503	1					
ANR	6312563	CompoundStatement		21:8:285:325	6312503	1					
ANR	6312564	IdentifierDeclStatement	DriveInfo * dinfo = blk_legacy_dinfo ( blk ) ;	25:8:419:459	6312503	0	True				
ANR	6312565	IdentifierDecl	* dinfo = blk_legacy_dinfo ( blk )		6312503	0					
ANR	6312566	IdentifierDeclType	DriveInfo *		6312503	0					
ANR	6312567	Identifier	dinfo		6312503	1					
ANR	6312568	AssignmentExpression	* dinfo = blk_legacy_dinfo ( blk )		6312503	2		=			
ANR	6312569	Identifier	dinfo		6312503	0					
ANR	6312570	CallExpression	blk_legacy_dinfo ( blk )		6312503	1					
ANR	6312571	Callee	blk_legacy_dinfo		6312503	0					
ANR	6312572	Identifier	blk_legacy_dinfo		6312503	0					
ANR	6312573	ArgumentList	blk		6312503	1					
ANR	6312574	Argument	blk		6312503	0					
ANR	6312575	Identifier	blk		6312503	0					
ANR	6312576	IfStatement	if ( dinfo && dinfo -> type != IF_NONE )		6312503	1					
ANR	6312577	Condition	dinfo && dinfo -> type != IF_NONE	29:12:476:506	6312503	0	True				
ANR	6312578	AndExpression	dinfo && dinfo -> type != IF_NONE		6312503	0		&&			
ANR	6312579	Identifier	dinfo		6312503	0					
ANR	6312580	EqualityExpression	dinfo -> type != IF_NONE		6312503	1		!=			
ANR	6312581	PtrMemberAccess	dinfo -> type		6312503	0					
ANR	6312582	Identifier	dinfo		6312503	0					
ANR	6312583	Identifier	type		6312503	1					
ANR	6312584	Identifier	IF_NONE		6312503	1					
ANR	6312585	CompoundStatement		25:45:375:375	6312503	1					
ANR	6312586	Statement	error_setg	31:12:524:533	6312503	0	True				
ANR	6312587	Statement	(	31:22:534:534	6312503	1	True				
ANR	6312588	Statement	errp	31:23:535:538	6312503	2	True				
ANR	6312589	Statement	","	31:27:539:539	6312503	3	True				
ANR	6312590	Statement	"""Drive '%s' is already in use because """	31:29:541:579	6312503	4	True				
ANR	6312591	Statement	"""it has been automatically connected to another """	33:23:605:653	6312503	5	True				
ANR	6312592	Statement	"""device (did you need 'if=none' in the drive options?)"""	35:23:679:733	6312503	6	True				
ANR	6312593	Statement	","	35:78:734:734	6312503	7	True				
ANR	6312594	Statement	str	37:23:760:762	6312503	8	True				
ANR	6312595	Statement	)	37:26:763:763	6312503	9	True				
ANR	6312596	ExpressionStatement		37:27:764:764	6312503	10	True				
ANR	6312597	ElseStatement	else		6312503	0					
ANR	6312598	CompoundStatement		35:15:648:648	6312503	0					
ANR	6312599	ExpressionStatement	"error_setg ( errp , ""Drive '%s' is already in use by another device"" , str )"	41:12:797:892	6312503	0	True				
ANR	6312600	CallExpression	"error_setg ( errp , ""Drive '%s' is already in use by another device"" , str )"		6312503	0					
ANR	6312601	Callee	error_setg		6312503	0					
ANR	6312602	Identifier	error_setg		6312503	0					
ANR	6312603	ArgumentList	errp		6312503	1					
ANR	6312604	Argument	errp		6312503	0					
ANR	6312605	Identifier	errp		6312503	0					
ANR	6312606	Argument	"""Drive '%s' is already in use by another device"""		6312503	1					
ANR	6312607	PrimaryExpression	"""Drive '%s' is already in use by another device"""		6312503	0					
ANR	6312608	Argument	str		6312503	2					
ANR	6312609	Identifier	str		6312503	0					
ANR	6312610	ReturnStatement	return ;	47:8:914:920	6312503	2	True				
ANR	6312611	ExpressionStatement	* ptr = blk	51:4:934:944	6312503	4	True				
ANR	6312612	AssignmentExpression	* ptr = blk		6312503	0		=			
ANR	6312613	UnaryOperationExpression	* ptr		6312503	0					
ANR	6312614	UnaryOperator	*		6312503	0					
ANR	6312615	Identifier	ptr		6312503	1					
ANR	6312616	Identifier	blk		6312503	1					
ANR	6312617	ReturnType	static void		6312503	1					
ANR	6312618	Identifier	parse_drive		6312503	2					
ANR	6312619	ParameterList	"DeviceState * dev , const char * str , void * * ptr , const char * propname , Error * * errp"		6312503	3					
ANR	6312620	Parameter	DeviceState * dev	1:24:24:39	6312503	0	True				
ANR	6312621	ParameterType	DeviceState *		6312503	0					
ANR	6312622	Identifier	dev		6312503	1					
ANR	6312623	Parameter	const char * str	1:42:42:56	6312503	1	True				
ANR	6312624	ParameterType	const char *		6312503	0					
ANR	6312625	Identifier	str		6312503	1					
ANR	6312626	Parameter	void * * ptr	1:59:59:68	6312503	2	True				
ANR	6312627	ParameterType	void * *		6312503	0					
ANR	6312628	Identifier	ptr		6312503	1					
ANR	6312629	Parameter	const char * propname	3:24:96:115	6312503	3	True				
ANR	6312630	ParameterType	const char *		6312503	0					
ANR	6312631	Identifier	propname		6312503	1					
ANR	6312632	Parameter	Error * * errp	3:46:118:129	6312503	4	True				
ANR	6312633	ParameterType	Error * *		6312503	0					
ANR	6312634	Identifier	errp		6312503	1					
ANR	6312635	CFGEntryNode	ENTRY		6312503		True				
ANR	6312636	CFGExitNode	EXIT		6312503		True				
ANR	6312637	Symbol	blk		6312503						
ANR	6312638	Symbol	dinfo		6312503						
ANR	6312639	Symbol	IF_NONE		6312503						
ANR	6312640	Symbol	errp		6312503						
ANR	6312641	Symbol	blk_attach_dev		6312503						
ANR	6312642	Symbol	blk_by_name		6312503						
ANR	6312643	Symbol	OBJECT		6312503						
ANR	6312644	Symbol	blk_legacy_dinfo		6312503						
ANR	6312645	Symbol	ptr		6312503						
ANR	6312646	Symbol	* dinfo		6312503						
ANR	6312647	Symbol	str		6312503						
ANR	6312648	Symbol	dev		6312503						
ANR	6312649	Symbol	dinfo -> type		6312503						
ANR	6312650	Symbol	* ptr		6312503						
ANR	6312651	Symbol	object_get_typename		6312503						
ANR	6312652	Symbol	propname		6312503						
