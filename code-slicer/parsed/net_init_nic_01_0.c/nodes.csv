command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5979965	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_init_nic_01_0.c								
ANR	5979966	Function	net_init_nic	1:0:0:1770							
ANR	5979967	FunctionDef	"net_init_nic (const NetClientOptions * opts , const char * name , NetClientState * peer , Error * * errp)"		5979966	0					
ANR	5979968	CompoundStatement		5:0:134:1770	5979966	0					
ANR	5979969	IdentifierDeclStatement	int idx ;	7:4:141:148	5979966	0	True				
ANR	5979970	IdentifierDecl	idx		5979966	0					
ANR	5979971	IdentifierDeclType	int		5979966	0					
ANR	5979972	Identifier	idx		5979966	1					
ANR	5979973	IdentifierDeclStatement	NICInfo * nd ;	9:4:155:166	5979966	1	True				
ANR	5979974	IdentifierDecl	* nd		5979966	0					
ANR	5979975	IdentifierDeclType	NICInfo *		5979966	0					
ANR	5979976	Identifier	nd		5979966	1					
ANR	5979977	IdentifierDeclStatement	const NetLegacyNicOptions * nic ;	11:4:173:203	5979966	2	True				
ANR	5979978	IdentifierDecl	* nic		5979966	0					
ANR	5979979	IdentifierDeclType	const NetLegacyNicOptions *		5979966	0					
ANR	5979980	Identifier	nic		5979966	1					
ANR	5979981	ExpressionStatement	assert ( opts -> type == NET_CLIENT_OPTIONS_KIND_NIC )	15:4:212:261	5979966	3	True				
ANR	5979982	CallExpression	assert ( opts -> type == NET_CLIENT_OPTIONS_KIND_NIC )		5979966	0					
ANR	5979983	Callee	assert		5979966	0					
ANR	5979984	Identifier	assert		5979966	0					
ANR	5979985	ArgumentList	opts -> type == NET_CLIENT_OPTIONS_KIND_NIC		5979966	1					
ANR	5979986	Argument	opts -> type == NET_CLIENT_OPTIONS_KIND_NIC		5979966	0					
ANR	5979987	EqualityExpression	opts -> type == NET_CLIENT_OPTIONS_KIND_NIC		5979966	0		==			
ANR	5979988	PtrMemberAccess	opts -> type		5979966	0					
ANR	5979989	Identifier	opts		5979966	0					
ANR	5979990	Identifier	type		5979966	1					
ANR	5979991	Identifier	NET_CLIENT_OPTIONS_KIND_NIC		5979966	1					
ANR	5979992	ExpressionStatement	nic = opts -> u . nic	17:4:268:285	5979966	4	True				
ANR	5979993	AssignmentExpression	nic = opts -> u . nic		5979966	0		=			
ANR	5979994	Identifier	nic		5979966	0					
ANR	5979995	MemberAccess	opts -> u . nic		5979966	1					
ANR	5979996	PtrMemberAccess	opts -> u		5979966	0					
ANR	5979997	Identifier	opts		5979966	0					
ANR	5979998	Identifier	u		5979966	1					
ANR	5979999	Identifier	nic		5979966	1					
ANR	5980000	ExpressionStatement	idx = nic_get_free_idx ( )	21:4:294:318	5979966	5	True				
ANR	5980001	AssignmentExpression	idx = nic_get_free_idx ( )		5979966	0		=			
ANR	5980002	Identifier	idx		5979966	0					
ANR	5980003	CallExpression	nic_get_free_idx ( )		5979966	1					
ANR	5980004	Callee	nic_get_free_idx		5979966	0					
ANR	5980005	Identifier	nic_get_free_idx		5979966	0					
ANR	5980006	ArgumentList			5979966	1					
ANR	5980007	IfStatement	if ( idx == - 1 || nb_nics >= MAX_NICS )		5979966	6					
ANR	5980008	Condition	idx == - 1 || nb_nics >= MAX_NICS	23:8:329:360	5979966	0	True				
ANR	5980009	OrExpression	idx == - 1 || nb_nics >= MAX_NICS		5979966	0		||			
ANR	5980010	EqualityExpression	idx == - 1		5979966	0		==			
ANR	5980011	Identifier	idx		5979966	0					
ANR	5980012	UnaryOperationExpression	- 1		5979966	1					
ANR	5980013	UnaryOperator	-		5979966	0					
ANR	5980014	PrimaryExpression	1		5979966	1					
ANR	5980015	RelationalExpression	nb_nics >= MAX_NICS		5979966	1		>=			
ANR	5980016	Identifier	nb_nics		5979966	0					
ANR	5980017	Identifier	MAX_NICS		5979966	1					
ANR	5980018	CompoundStatement		19:42:228:228	5979966	1					
ANR	5980019	ExpressionStatement	"error_setg ( errp , ""too many NICs"" )"	25:8:374:407	5979966	0	True				
ANR	5980020	CallExpression	"error_setg ( errp , ""too many NICs"" )"		5979966	0					
ANR	5980021	Callee	error_setg		5979966	0					
ANR	5980022	Identifier	error_setg		5979966	0					
ANR	5980023	ArgumentList	errp		5979966	1					
ANR	5980024	Argument	errp		5979966	0					
ANR	5980025	Identifier	errp		5979966	0					
ANR	5980026	Argument	"""too many NICs"""		5979966	1					
ANR	5980027	PrimaryExpression	"""too many NICs"""		5979966	0					
ANR	5980028	ReturnStatement	return - 1 ;	27:8:418:427	5979966	1	True				
ANR	5980029	UnaryOperationExpression	- 1		5979966	0					
ANR	5980030	UnaryOperator	-		5979966	0					
ANR	5980031	PrimaryExpression	1		5979966	1					
ANR	5980032	ExpressionStatement	nd = & nd_table [ idx ]	33:4:443:462	5979966	7	True				
ANR	5980033	AssignmentExpression	nd = & nd_table [ idx ]		5979966	0		=			
ANR	5980034	Identifier	nd		5979966	0					
ANR	5980035	UnaryOperationExpression	& nd_table [ idx ]		5979966	1					
ANR	5980036	UnaryOperator	&		5979966	0					
ANR	5980037	ArrayIndexing	nd_table [ idx ]		5979966	1					
ANR	5980038	Identifier	nd_table		5979966	0					
ANR	5980039	Identifier	idx		5979966	1					
ANR	5980040	ExpressionStatement	"memset ( nd , 0 , sizeof ( * nd ) )"	37:4:471:497	5979966	8	True				
ANR	5980041	CallExpression	"memset ( nd , 0 , sizeof ( * nd ) )"		5979966	0					
ANR	5980042	Callee	memset		5979966	0					
ANR	5980043	Identifier	memset		5979966	0					
ANR	5980044	ArgumentList	nd		5979966	1					
ANR	5980045	Argument	nd		5979966	0					
ANR	5980046	Identifier	nd		5979966	0					
ANR	5980047	Argument	0		5979966	1					
ANR	5980048	PrimaryExpression	0		5979966	0					
ANR	5980049	Argument	sizeof ( * nd )		5979966	2					
ANR	5980050	SizeofExpression	sizeof ( * nd )		5979966	0					
ANR	5980051	Sizeof	sizeof		5979966	0					
ANR	5980052	UnaryOperationExpression	* nd		5979966	1					
ANR	5980053	UnaryOperator	*		5979966	0					
ANR	5980054	Identifier	nd		5979966	1					
ANR	5980055	IfStatement	if ( nic -> has_netdev )		5979966	9					
ANR	5980056	Condition	nic -> has_netdev	41:8:510:524	5979966	0	True				
ANR	5980057	PtrMemberAccess	nic -> has_netdev		5979966	0					
ANR	5980058	Identifier	nic		5979966	0					
ANR	5980059	Identifier	has_netdev		5979966	1					
ANR	5980060	CompoundStatement		37:25:392:392	5979966	1					
ANR	5980061	ExpressionStatement	nd -> netdev = qemu_find_netdev ( nic -> netdev )	43:8:538:580	5979966	0	True				
ANR	5980062	AssignmentExpression	nd -> netdev = qemu_find_netdev ( nic -> netdev )		5979966	0		=			
ANR	5980063	PtrMemberAccess	nd -> netdev		5979966	0					
ANR	5980064	Identifier	nd		5979966	0					
ANR	5980065	Identifier	netdev		5979966	1					
ANR	5980066	CallExpression	qemu_find_netdev ( nic -> netdev )		5979966	1					
ANR	5980067	Callee	qemu_find_netdev		5979966	0					
ANR	5980068	Identifier	qemu_find_netdev		5979966	0					
ANR	5980069	ArgumentList	nic -> netdev		5979966	1					
ANR	5980070	Argument	nic -> netdev		5979966	0					
ANR	5980071	PtrMemberAccess	nic -> netdev		5979966	0					
ANR	5980072	Identifier	nic		5979966	0					
ANR	5980073	Identifier	netdev		5979966	1					
ANR	5980074	IfStatement	if ( ! nd -> netdev )		5979966	1					
ANR	5980075	Condition	! nd -> netdev	45:12:595:605	5979966	0	True				
ANR	5980076	UnaryOperationExpression	! nd -> netdev		5979966	0					
ANR	5980077	UnaryOperator	!		5979966	0					
ANR	5980078	PtrMemberAccess	nd -> netdev		5979966	1					
ANR	5980079	Identifier	nd		5979966	0					
ANR	5980080	Identifier	netdev		5979966	1					
ANR	5980081	CompoundStatement		41:25:473:473	5979966	1					
ANR	5980082	ExpressionStatement	"error_setg ( errp , ""netdev '%s' not found"" , nic -> netdev )"	47:12:623:677	5979966	0	True				
ANR	5980083	CallExpression	"error_setg ( errp , ""netdev '%s' not found"" , nic -> netdev )"		5979966	0					
ANR	5980084	Callee	error_setg		5979966	0					
ANR	5980085	Identifier	error_setg		5979966	0					
ANR	5980086	ArgumentList	errp		5979966	1					
ANR	5980087	Argument	errp		5979966	0					
ANR	5980088	Identifier	errp		5979966	0					
ANR	5980089	Argument	"""netdev '%s' not found"""		5979966	1					
ANR	5980090	PrimaryExpression	"""netdev '%s' not found"""		5979966	0					
ANR	5980091	Argument	nic -> netdev		5979966	2					
ANR	5980092	PtrMemberAccess	nic -> netdev		5979966	0					
ANR	5980093	Identifier	nic		5979966	0					
ANR	5980094	Identifier	netdev		5979966	1					
ANR	5980095	ReturnStatement	return - 1 ;	49:12:692:701	5979966	1	True				
ANR	5980096	UnaryOperationExpression	- 1		5979966	0					
ANR	5980097	UnaryOperator	-		5979966	0					
ANR	5980098	PrimaryExpression	1		5979966	1					
ANR	5980099	ElseStatement	else		5979966	0					
ANR	5980100	CompoundStatement		49:11:591:591	5979966	0					
ANR	5980101	ExpressionStatement	assert ( peer )	55:8:737:749	5979966	0	True				
ANR	5980102	CallExpression	assert ( peer )		5979966	0					
ANR	5980103	Callee	assert		5979966	0					
ANR	5980104	Identifier	assert		5979966	0					
ANR	5980105	ArgumentList	peer		5979966	1					
ANR	5980106	Argument	peer		5979966	0					
ANR	5980107	Identifier	peer		5979966	0					
ANR	5980108	ExpressionStatement	nd -> netdev = peer	57:8:760:777	5979966	1	True				
ANR	5980109	AssignmentExpression	nd -> netdev = peer		5979966	0		=			
ANR	5980110	PtrMemberAccess	nd -> netdev		5979966	0					
ANR	5980111	Identifier	nd		5979966	0					
ANR	5980112	Identifier	netdev		5979966	1					
ANR	5980113	Identifier	peer		5979966	1					
ANR	5980114	ExpressionStatement	nd -> name = g_strdup ( name )	61:4:791:816	5979966	10	True				
ANR	5980115	AssignmentExpression	nd -> name = g_strdup ( name )		5979966	0		=			
ANR	5980116	PtrMemberAccess	nd -> name		5979966	0					
ANR	5980117	Identifier	nd		5979966	0					
ANR	5980118	Identifier	name		5979966	1					
ANR	5980119	CallExpression	g_strdup ( name )		5979966	1					
ANR	5980120	Callee	g_strdup		5979966	0					
ANR	5980121	Identifier	g_strdup		5979966	0					
ANR	5980122	ArgumentList	name		5979966	1					
ANR	5980123	Argument	name		5979966	0					
ANR	5980124	Identifier	name		5979966	0					
ANR	5980125	IfStatement	if ( nic -> has_model )		5979966	11					
ANR	5980126	Condition	nic -> has_model	63:8:827:840	5979966	0	True				
ANR	5980127	PtrMemberAccess	nic -> has_model		5979966	0					
ANR	5980128	Identifier	nic		5979966	0					
ANR	5980129	Identifier	has_model		5979966	1					
ANR	5980130	CompoundStatement		59:24:708:708	5979966	1					
ANR	5980131	ExpressionStatement	nd -> model = g_strdup ( nic -> model )	65:8:854:886	5979966	0	True				
ANR	5980132	AssignmentExpression	nd -> model = g_strdup ( nic -> model )		5979966	0		=			
ANR	5980133	PtrMemberAccess	nd -> model		5979966	0					
ANR	5980134	Identifier	nd		5979966	0					
ANR	5980135	Identifier	model		5979966	1					
ANR	5980136	CallExpression	g_strdup ( nic -> model )		5979966	1					
ANR	5980137	Callee	g_strdup		5979966	0					
ANR	5980138	Identifier	g_strdup		5979966	0					
ANR	5980139	ArgumentList	nic -> model		5979966	1					
ANR	5980140	Argument	nic -> model		5979966	0					
ANR	5980141	PtrMemberAccess	nic -> model		5979966	0					
ANR	5980142	Identifier	nic		5979966	0					
ANR	5980143	Identifier	model		5979966	1					
ANR	5980144	IfStatement	if ( nic -> has_addr )		5979966	12					
ANR	5980145	Condition	nic -> has_addr	69:8:904:916	5979966	0	True				
ANR	5980146	PtrMemberAccess	nic -> has_addr		5979966	0					
ANR	5980147	Identifier	nic		5979966	0					
ANR	5980148	Identifier	has_addr		5979966	1					
ANR	5980149	CompoundStatement		65:23:784:784	5979966	1					
ANR	5980150	ExpressionStatement	nd -> devaddr = g_strdup ( nic -> addr )	71:8:930:963	5979966	0	True				
ANR	5980151	AssignmentExpression	nd -> devaddr = g_strdup ( nic -> addr )		5979966	0		=			
ANR	5980152	PtrMemberAccess	nd -> devaddr		5979966	0					
ANR	5980153	Identifier	nd		5979966	0					
ANR	5980154	Identifier	devaddr		5979966	1					
ANR	5980155	CallExpression	g_strdup ( nic -> addr )		5979966	1					
ANR	5980156	Callee	g_strdup		5979966	0					
ANR	5980157	Identifier	g_strdup		5979966	0					
ANR	5980158	ArgumentList	nic -> addr		5979966	1					
ANR	5980159	Argument	nic -> addr		5979966	0					
ANR	5980160	PtrMemberAccess	nic -> addr		5979966	0					
ANR	5980161	Identifier	nic		5979966	0					
ANR	5980162	Identifier	addr		5979966	1					
ANR	5980163	IfStatement	"if ( nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0 )"		5979966	13					
ANR	5980164	Condition	"nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"	77:8:983:1061	5979966	0	True				
ANR	5980165	AndExpression	"nic -> has_macaddr && net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"		5979966	0		&&			
ANR	5980166	PtrMemberAccess	nic -> has_macaddr		5979966	0					
ANR	5980167	Identifier	nic		5979966	0					
ANR	5980168	Identifier	has_macaddr		5979966	1					
ANR	5980169	RelationalExpression	"net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr ) < 0"		5979966	1		<			
ANR	5980170	CallExpression	"net_parse_macaddr ( nd -> macaddr . a , nic -> macaddr )"		5979966	0					
ANR	5980171	Callee	net_parse_macaddr		5979966	0					
ANR	5980172	Identifier	net_parse_macaddr		5979966	0					
ANR	5980173	ArgumentList	nd -> macaddr . a		5979966	1					
ANR	5980174	Argument	nd -> macaddr . a		5979966	0					
ANR	5980175	MemberAccess	nd -> macaddr . a		5979966	0					
ANR	5980176	PtrMemberAccess	nd -> macaddr		5979966	0					
ANR	5980177	Identifier	nd		5979966	0					
ANR	5980178	Identifier	macaddr		5979966	1					
ANR	5980179	Identifier	a		5979966	1					
ANR	5980180	Argument	nic -> macaddr		5979966	1					
ANR	5980181	PtrMemberAccess	nic -> macaddr		5979966	0					
ANR	5980182	Identifier	nic		5979966	0					
ANR	5980183	Identifier	macaddr		5979966	1					
ANR	5980184	PrimaryExpression	0		5979966	1					
ANR	5980185	CompoundStatement		75:60:929:929	5979966	1					
ANR	5980186	ExpressionStatement	"error_setg ( errp , ""invalid syntax for ethernet address"" )"	81:8:1075:1130	5979966	0	True				
ANR	5980187	CallExpression	"error_setg ( errp , ""invalid syntax for ethernet address"" )"		5979966	0					
ANR	5980188	Callee	error_setg		5979966	0					
ANR	5980189	Identifier	error_setg		5979966	0					
ANR	5980190	ArgumentList	errp		5979966	1					
ANR	5980191	Argument	errp		5979966	0					
ANR	5980192	Identifier	errp		5979966	0					
ANR	5980193	Argument	"""invalid syntax for ethernet address"""		5979966	1					
ANR	5980194	PrimaryExpression	"""invalid syntax for ethernet address"""		5979966	0					
ANR	5980195	ReturnStatement	return - 1 ;	83:8:1141:1150	5979966	1	True				
ANR	5980196	UnaryOperationExpression	- 1		5979966	0					
ANR	5980197	UnaryOperator	-		5979966	0					
ANR	5980198	PrimaryExpression	1		5979966	1					
ANR	5980199	IfStatement	if ( nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a ) )		5979966	14					
ANR	5980200	Condition	nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a )	87:8:1168:1234	5979966	0	True				
ANR	5980201	AndExpression	nic -> has_macaddr && is_multicast_ether_addr ( nd -> macaddr . a )		5979966	0		&&			
ANR	5980202	PtrMemberAccess	nic -> has_macaddr		5979966	0					
ANR	5980203	Identifier	nic		5979966	0					
ANR	5980204	Identifier	has_macaddr		5979966	1					
ANR	5980205	CallExpression	is_multicast_ether_addr ( nd -> macaddr . a )		5979966	1					
ANR	5980206	Callee	is_multicast_ether_addr		5979966	0					
ANR	5980207	Identifier	is_multicast_ether_addr		5979966	0					
ANR	5980208	ArgumentList	nd -> macaddr . a		5979966	1					
ANR	5980209	Argument	nd -> macaddr . a		5979966	0					
ANR	5980210	MemberAccess	nd -> macaddr . a		5979966	0					
ANR	5980211	PtrMemberAccess	nd -> macaddr		5979966	0					
ANR	5980212	Identifier	nd		5979966	0					
ANR	5980213	Identifier	macaddr		5979966	1					
ANR	5980214	Identifier	a		5979966	1					
ANR	5980215	CompoundStatement		85:48:1102:1102	5979966	1					
ANR	5980216	ExpressionStatement	"error_setg ( errp , ""NIC cannot have multicast MAC address (odd 1st byte)"" )"	91:8:1248:1340	5979966	0	True				
ANR	5980217	CallExpression	"error_setg ( errp , ""NIC cannot have multicast MAC address (odd 1st byte)"" )"		5979966	0					
ANR	5980218	Callee	error_setg		5979966	0					
ANR	5980219	Identifier	error_setg		5979966	0					
ANR	5980220	ArgumentList	errp		5979966	1					
ANR	5980221	Argument	errp		5979966	0					
ANR	5980222	Identifier	errp		5979966	0					
ANR	5980223	Argument	"""NIC cannot have multicast MAC address (odd 1st byte)"""		5979966	1					
ANR	5980224	PrimaryExpression	"""NIC cannot have multicast MAC address (odd 1st byte)"""		5979966	0					
ANR	5980225	ReturnStatement	return - 1 ;	95:8:1351:1360	5979966	1	True				
ANR	5980226	UnaryOperationExpression	- 1		5979966	0					
ANR	5980227	UnaryOperator	-		5979966	0					
ANR	5980228	PrimaryExpression	1		5979966	1					
ANR	5980229	ExpressionStatement	qemu_macaddr_default_if_unset ( & nd -> macaddr )	99:4:1374:1417	5979966	15	True				
ANR	5980230	CallExpression	qemu_macaddr_default_if_unset ( & nd -> macaddr )		5979966	0					
ANR	5980231	Callee	qemu_macaddr_default_if_unset		5979966	0					
ANR	5980232	Identifier	qemu_macaddr_default_if_unset		5979966	0					
ANR	5980233	ArgumentList	& nd -> macaddr		5979966	1					
ANR	5980234	Argument	& nd -> macaddr		5979966	0					
ANR	5980235	UnaryOperationExpression	& nd -> macaddr		5979966	0					
ANR	5980236	UnaryOperator	&		5979966	0					
ANR	5980237	PtrMemberAccess	nd -> macaddr		5979966	1					
ANR	5980238	Identifier	nd		5979966	0					
ANR	5980239	Identifier	macaddr		5979966	1					
ANR	5980240	IfStatement	if ( nic -> has_vectors )		5979966	16					
ANR	5980241	Condition	nic -> has_vectors	103:8:1430:1445	5979966	0	True				
ANR	5980242	PtrMemberAccess	nic -> has_vectors		5979966	0					
ANR	5980243	Identifier	nic		5979966	0					
ANR	5980244	Identifier	has_vectors		5979966	1					
ANR	5980245	CompoundStatement		99:26:1313:1313	5979966	1					
ANR	5980246	IfStatement	if ( nic -> vectors > 0x7ffffff )		5979966	0					
ANR	5980247	Condition	nic -> vectors > 0x7ffffff	105:12:1463:1486	5979966	0	True				
ANR	5980248	RelationalExpression	nic -> vectors > 0x7ffffff		5979966	0		>			
ANR	5980249	PtrMemberAccess	nic -> vectors		5979966	0					
ANR	5980250	Identifier	nic		5979966	0					
ANR	5980251	Identifier	vectors		5979966	1					
ANR	5980252	PrimaryExpression	0x7ffffff		5979966	1					
ANR	5980253	CompoundStatement		101:38:1354:1354	5979966	1					
ANR	5980254	Statement	error_setg	107:12:1504:1513	5979966	0	True				
ANR	5980255	Statement	(	107:22:1514:1514	5979966	1	True				
ANR	5980256	Statement	errp	107:23:1515:1518	5979966	2	True				
ANR	5980257	Statement	","	107:27:1519:1519	5979966	3	True				
ANR	5980258	Statement	"""invalid # of vectors: %"""	107:29:1521:1545	5979966	4	True				
ANR	5980259	Statement	PRIu32	107:54:1546:1551	5979966	5	True				
ANR	5980260	Statement	","	107:60:1552:1552	5979966	6	True				
ANR	5980261	Statement	nic	107:62:1554:1556	5979966	7	True				
ANR	5980262	Statement	->	107:65:1557:1558	5979966	8	True				
ANR	5980263	Statement	vectors	107:67:1559:1565	5979966	9	True				
ANR	5980264	Statement	)	107:74:1566:1566	5979966	10	True				
ANR	5980265	ExpressionStatement		107:75:1567:1567	5979966	11	True				
ANR	5980266	ReturnStatement	return - 1 ;	109:12:1582:1591	5979966	12	True				
ANR	5980267	UnaryOperationExpression	- 1		5979966	0					
ANR	5980268	UnaryOperator	-		5979966	0					
ANR	5980269	PrimaryExpression	1		5979966	1					
ANR	5980270	ExpressionStatement	nd -> nvectors = nic -> vectors	113:8:1613:1640	5979966	1	True				
ANR	5980271	AssignmentExpression	nd -> nvectors = nic -> vectors		5979966	0		=			
ANR	5980272	PtrMemberAccess	nd -> nvectors		5979966	0					
ANR	5980273	Identifier	nd		5979966	0					
ANR	5980274	Identifier	nvectors		5979966	1					
ANR	5980275	PtrMemberAccess	nic -> vectors		5979966	1					
ANR	5980276	Identifier	nic		5979966	0					
ANR	5980277	Identifier	vectors		5979966	1					
ANR	5980278	ElseStatement	else		5979966	0					
ANR	5980279	CompoundStatement		111:11:1519:1519	5979966	0					
ANR	5980280	ExpressionStatement	nd -> nvectors = DEV_NVECTORS_UNSPECIFIED	117:8:1665:1704	5979966	0	True				
ANR	5980281	AssignmentExpression	nd -> nvectors = DEV_NVECTORS_UNSPECIFIED		5979966	0		=			
ANR	5980282	PtrMemberAccess	nd -> nvectors		5979966	0					
ANR	5980283	Identifier	nd		5979966	0					
ANR	5980284	Identifier	nvectors		5979966	1					
ANR	5980285	Identifier	DEV_NVECTORS_UNSPECIFIED		5979966	1					
ANR	5980286	ExpressionStatement	nd -> used = 1	123:4:1720:1732	5979966	17	True				
ANR	5980287	AssignmentExpression	nd -> used = 1		5979966	0		=			
ANR	5980288	PtrMemberAccess	nd -> used		5979966	0					
ANR	5980289	Identifier	nd		5979966	0					
ANR	5980290	Identifier	used		5979966	1					
ANR	5980291	PrimaryExpression	1		5979966	1					
ANR	5980292	ExpressionStatement	nb_nics ++	125:4:1739:1748	5979966	18	True				
ANR	5980293	PostIncDecOperationExpression	nb_nics ++		5979966	0					
ANR	5980294	Identifier	nb_nics		5979966	0					
ANR	5980295	IncDec	++		5979966	1					
ANR	5980296	ReturnStatement	return idx ;	129:4:1757:1767	5979966	19	True				
ANR	5980297	Identifier	idx		5979966	0					
ANR	5980298	ReturnType	static int		5979966	1					
ANR	5980299	Identifier	net_init_nic		5979966	2					
ANR	5980300	ParameterList	"const NetClientOptions * opts , const char * name , NetClientState * peer , Error * * errp"		5979966	3					
ANR	5980301	Parameter	const NetClientOptions * opts	1:24:24:51	5979966	0	True				
ANR	5980302	ParameterType	const NetClientOptions *		5979966	0					
ANR	5980303	Identifier	opts		5979966	1					
ANR	5980304	Parameter	const char * name	1:54:54:69	5979966	1	True				
ANR	5980305	ParameterType	const char *		5979966	0					
ANR	5980306	Identifier	name		5979966	1					
ANR	5980307	Parameter	NetClientState * peer	3:24:97:116	5979966	2	True				
ANR	5980308	ParameterType	NetClientState *		5979966	0					
ANR	5980309	Identifier	peer		5979966	1					
ANR	5980310	Parameter	Error * * errp	3:46:119:130	5979966	3	True				
ANR	5980311	ParameterType	Error * *		5979966	0					
ANR	5980312	Identifier	errp		5979966	1					
ANR	5980313	CFGEntryNode	ENTRY		5979966		True				
ANR	5980314	CFGExitNode	EXIT		5979966		True				
ANR	5980315	Symbol	nb_nics		5979966						
ANR	5980316	Symbol	is_multicast_ether_addr		5979966						
ANR	5980317	Symbol	errp		5979966						
ANR	5980318	Symbol	opts -> u . nic		5979966						
ANR	5980319	Symbol	nic		5979966						
ANR	5980320	Symbol	nic -> has_netdev		5979966						
ANR	5980321	Symbol	nic -> macaddr		5979966						
ANR	5980322	Symbol	nd -> used		5979966						
ANR	5980323	Symbol	nd -> model		5979966						
ANR	5980324	Symbol	nic_get_free_idx		5979966						
ANR	5980325	Symbol	NET_CLIENT_OPTIONS_KIND_NIC		5979966						
ANR	5980326	Symbol	nic -> has_macaddr		5979966						
ANR	5980327	Symbol	opts		5979966						
ANR	5980328	Symbol	nic -> netdev		5979966						
ANR	5980329	Symbol	nic -> has_model		5979966						
ANR	5980330	Symbol	peer		5979966						
ANR	5980331	Symbol	nd -> netdev		5979966						
ANR	5980332	Symbol	nd_table		5979966						
ANR	5980333	Symbol	g_strdup		5979966						
ANR	5980334	Symbol	nd -> nvectors		5979966						
ANR	5980335	Symbol	nd -> name		5979966						
ANR	5980336	Symbol	opts -> u		5979966						
ANR	5980337	Symbol	nic -> addr		5979966						
ANR	5980338	Symbol	nic -> has_vectors		5979966						
ANR	5980339	Symbol	nd -> devaddr		5979966						
ANR	5980340	Symbol	& nd -> macaddr		5979966						
ANR	5980341	Symbol	nic -> has_addr		5979966						
ANR	5980342	Symbol	net_parse_macaddr		5979966						
ANR	5980343	Symbol	qemu_find_netdev		5979966						
ANR	5980344	Symbol	nd -> macaddr		5979966						
ANR	5980345	Symbol	nic -> vectors		5979966						
ANR	5980346	Symbol	nic -> model		5979966						
ANR	5980347	Symbol	* nic		5979966						
ANR	5980348	Symbol	nd -> macaddr . a		5979966						
ANR	5980349	Symbol	DEV_NVECTORS_UNSPECIFIED		5979966						
ANR	5980350	Symbol	* opts		5979966						
ANR	5980351	Symbol	nd		5979966						
ANR	5980352	Symbol	opts -> type		5979966						
ANR	5980353	Symbol	name		5979966						
ANR	5980354	Symbol	idx		5979966						
ANR	5980355	Symbol	MAX_NICS		5979966						
ANR	5980356	Symbol	* nd		5979966						
