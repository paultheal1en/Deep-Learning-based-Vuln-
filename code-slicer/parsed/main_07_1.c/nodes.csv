command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5333602	File	/home/p4ultr4n/workplace/ReVeal/raw_code/main_07_1.c								
ANR	5333603	Function	main	1:0:0:19830							
ANR	5333604	FunctionDef	"main (int argc , char * * argv , char * * envp)"		5333603	0					
ANR	5333605	CompoundStatement		3:0:46:19830	5333603	0					
ANR	5333606	IdentifierDeclStatement	"struct target_pt_regs regs1 , * regs = & regs1 ;"	5:4:53:96	5333603	0	True				
ANR	5333607	IdentifierDecl	regs1		5333603	0					
ANR	5333608	IdentifierDeclType	struct target_pt_regs		5333603	0					
ANR	5333609	Identifier	regs1		5333603	1					
ANR	5333610	IdentifierDecl	* regs = & regs1		5333603	1					
ANR	5333611	IdentifierDeclType	struct target_pt_regs *		5333603	0					
ANR	5333612	Identifier	regs		5333603	1					
ANR	5333613	AssignmentExpression	* regs = & regs1		5333603	2		=			
ANR	5333614	Identifier	regs		5333603	0					
ANR	5333615	UnaryOperationExpression	& regs1		5333603	1					
ANR	5333616	UnaryOperator	&		5333603	0					
ANR	5333617	Identifier	regs1		5333603	1					
ANR	5333618	IdentifierDeclStatement	"struct image_info info1 , * info = & info1 ;"	7:4:103:142	5333603	1	True				
ANR	5333619	IdentifierDecl	info1		5333603	0					
ANR	5333620	IdentifierDeclType	struct image_info		5333603	0					
ANR	5333621	Identifier	info1		5333603	1					
ANR	5333622	IdentifierDecl	* info = & info1		5333603	1					
ANR	5333623	IdentifierDeclType	struct image_info *		5333603	0					
ANR	5333624	Identifier	info		5333603	1					
ANR	5333625	AssignmentExpression	* info = & info1		5333603	2		=			
ANR	5333626	Identifier	info		5333603	0					
ANR	5333627	UnaryOperationExpression	& info1		5333603	1					
ANR	5333628	UnaryOperator	&		5333603	0					
ANR	5333629	Identifier	info1		5333603	1					
ANR	5333630	IdentifierDeclStatement	struct linux_binprm bprm ;	9:4:149:173	5333603	2	True				
ANR	5333631	IdentifierDecl	bprm		5333603	0					
ANR	5333632	IdentifierDeclType	struct linux_binprm		5333603	0					
ANR	5333633	Identifier	bprm		5333603	1					
ANR	5333634	IdentifierDeclStatement	TaskState * ts ;	11:4:180:193	5333603	3	True				
ANR	5333635	IdentifierDecl	* ts		5333603	0					
ANR	5333636	IdentifierDeclType	TaskState *		5333603	0					
ANR	5333637	Identifier	ts		5333603	1					
ANR	5333638	IdentifierDeclStatement	CPUArchState * env ;	13:4:200:217	5333603	4	True				
ANR	5333639	IdentifierDecl	* env		5333603	0					
ANR	5333640	IdentifierDeclType	CPUArchState *		5333603	0					
ANR	5333641	Identifier	env		5333603	1					
ANR	5333642	IdentifierDeclStatement	CPUState * cpu ;	15:4:224:237	5333603	5	True				
ANR	5333643	IdentifierDecl	* cpu		5333603	0					
ANR	5333644	IdentifierDeclType	CPUState *		5333603	0					
ANR	5333645	Identifier	cpu		5333603	1					
ANR	5333646	IdentifierDeclStatement	int optind ;	17:4:244:254	5333603	6	True				
ANR	5333647	IdentifierDecl	optind		5333603	0					
ANR	5333648	IdentifierDeclType	int		5333603	0					
ANR	5333649	Identifier	optind		5333603	1					
ANR	5333650	IdentifierDeclStatement	"char * * target_environ , * * wrk ;"	19:4:261:289	5333603	7	True				
ANR	5333651	IdentifierDecl	* * target_environ		5333603	0					
ANR	5333652	IdentifierDeclType	char * *		5333603	0					
ANR	5333653	Identifier	target_environ		5333603	1					
ANR	5333654	IdentifierDecl	* * wrk		5333603	1					
ANR	5333655	IdentifierDeclType	char * *		5333603	0					
ANR	5333656	Identifier	wrk		5333603	1					
ANR	5333657	IdentifierDeclStatement	char * * target_argv ;	21:4:296:314	5333603	8	True				
ANR	5333658	IdentifierDecl	* * target_argv		5333603	0					
ANR	5333659	IdentifierDeclType	char * *		5333603	0					
ANR	5333660	Identifier	target_argv		5333603	1					
ANR	5333661	IdentifierDeclStatement	int target_argc ;	23:4:321:336	5333603	9	True				
ANR	5333662	IdentifierDecl	target_argc		5333603	0					
ANR	5333663	IdentifierDeclType	int		5333603	0					
ANR	5333664	Identifier	target_argc		5333603	1					
ANR	5333665	IdentifierDeclStatement	int i ;	25:4:343:348	5333603	10	True				
ANR	5333666	IdentifierDecl	i		5333603	0					
ANR	5333667	IdentifierDeclType	int		5333603	0					
ANR	5333668	Identifier	i		5333603	1					
ANR	5333669	IdentifierDeclStatement	int ret ;	27:4:355:362	5333603	11	True				
ANR	5333670	IdentifierDecl	ret		5333603	0					
ANR	5333671	IdentifierDeclType	int		5333603	0					
ANR	5333672	Identifier	ret		5333603	1					
ANR	5333673	IdentifierDeclStatement	int execfd ;	29:4:369:379	5333603	12	True				
ANR	5333674	IdentifierDecl	execfd		5333603	0					
ANR	5333675	IdentifierDeclType	int		5333603	0					
ANR	5333676	Identifier	execfd		5333603	1					
ANR	5333677	ExpressionStatement	module_call_init ( MODULE_INIT_TRACE )	33:4:388:423	5333603	13	True				
ANR	5333678	CallExpression	module_call_init ( MODULE_INIT_TRACE )		5333603	0					
ANR	5333679	Callee	module_call_init		5333603	0					
ANR	5333680	Identifier	module_call_init		5333603	0					
ANR	5333681	ArgumentList	MODULE_INIT_TRACE		5333603	1					
ANR	5333682	Argument	MODULE_INIT_TRACE		5333603	0					
ANR	5333683	Identifier	MODULE_INIT_TRACE		5333603	0					
ANR	5333684	ExpressionStatement	qemu_init_cpu_list ( )	35:4:430:450	5333603	14	True				
ANR	5333685	CallExpression	qemu_init_cpu_list ( )		5333603	0					
ANR	5333686	Callee	qemu_init_cpu_list		5333603	0					
ANR	5333687	Identifier	qemu_init_cpu_list		5333603	0					
ANR	5333688	ArgumentList			5333603	1					
ANR	5333689	ExpressionStatement	module_call_init ( MODULE_INIT_QOM )	37:4:457:490	5333603	15	True				
ANR	5333690	CallExpression	module_call_init ( MODULE_INIT_QOM )		5333603	0					
ANR	5333691	Callee	module_call_init		5333603	0					
ANR	5333692	Identifier	module_call_init		5333603	0					
ANR	5333693	ArgumentList	MODULE_INIT_QOM		5333603	1					
ANR	5333694	Argument	MODULE_INIT_QOM		5333603	0					
ANR	5333695	Identifier	MODULE_INIT_QOM		5333603	0					
ANR	5333696	IfStatement	if ( ( envlist = envlist_create ( ) ) == NULL )		5333603	16					
ANR	5333697	Condition	( envlist = envlist_create ( ) ) == NULL	41:8:503:538	5333603	0	True				
ANR	5333698	EqualityExpression	( envlist = envlist_create ( ) ) == NULL		5333603	0		==			
ANR	5333699	AssignmentExpression	envlist = envlist_create ( )		5333603	0		=			
ANR	5333700	Identifier	envlist		5333603	0					
ANR	5333701	CallExpression	envlist_create ( )		5333603	1					
ANR	5333702	Callee	envlist_create		5333603	0					
ANR	5333703	Identifier	envlist_create		5333603	0					
ANR	5333704	ArgumentList			5333603	1					
ANR	5333705	Identifier	NULL		5333603	1					
ANR	5333706	CompoundStatement		39:46:494:494	5333603	1					
ANR	5333707	ExpressionStatement	"( void ) fprintf ( stderr , ""Unable to allocate envlist\\n"" )"	43:8:552:606	5333603	0	True				
ANR	5333708	CastExpression	"( void ) fprintf ( stderr , ""Unable to allocate envlist\\n"" )"		5333603	0					
ANR	5333709	CastTarget	void		5333603	0					
ANR	5333710	CallExpression	"fprintf ( stderr , ""Unable to allocate envlist\\n"" )"		5333603	1					
ANR	5333711	Callee	fprintf		5333603	0					
ANR	5333712	Identifier	fprintf		5333603	0					
ANR	5333713	ArgumentList	stderr		5333603	1					
ANR	5333714	Argument	stderr		5333603	0					
ANR	5333715	Identifier	stderr		5333603	0					
ANR	5333716	Argument	"""Unable to allocate envlist\\n"""		5333603	1					
ANR	5333717	PrimaryExpression	"""Unable to allocate envlist\\n"""		5333603	0					
ANR	5333718	ExpressionStatement	exit ( EXIT_FAILURE )	45:8:617:635	5333603	1	True				
ANR	5333719	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5333720	Callee	exit		5333603	0					
ANR	5333721	Identifier	exit		5333603	0					
ANR	5333722	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5333723	Argument	EXIT_FAILURE		5333603	0					
ANR	5333724	Identifier	EXIT_FAILURE		5333603	0					
ANR	5333725	ForStatement	for ( wrk = environ ; * wrk != NULL ; wrk ++ )		5333603	17					
ANR	5333726	ForInit	wrk = environ ;	53:9:705:718	5333603	0	True				
ANR	5333727	AssignmentExpression	wrk = environ		5333603	0		=			
ANR	5333728	Identifier	wrk		5333603	0					
ANR	5333729	Identifier	environ		5333603	1					
ANR	5333730	Condition	* wrk != NULL	53:24:720:731	5333603	1	True				
ANR	5333731	EqualityExpression	* wrk != NULL		5333603	0		!=			
ANR	5333732	UnaryOperationExpression	* wrk		5333603	0					
ANR	5333733	UnaryOperator	*		5333603	0					
ANR	5333734	Identifier	wrk		5333603	1					
ANR	5333735	Identifier	NULL		5333603	1					
ANR	5333736	PostIncDecOperationExpression	wrk ++	53:38:734:738	5333603	2	True				
ANR	5333737	Identifier	wrk		5333603	0					
ANR	5333738	IncDec	++		5333603	1					
ANR	5333739	CompoundStatement		51:45:694:694	5333603	3					
ANR	5333740	ExpressionStatement	"( void ) envlist_setenv ( envlist , * wrk )"	55:8:752:788	5333603	0	True				
ANR	5333741	CastExpression	"( void ) envlist_setenv ( envlist , * wrk )"		5333603	0					
ANR	5333742	CastTarget	void		5333603	0					
ANR	5333743	CallExpression	"envlist_setenv ( envlist , * wrk )"		5333603	1					
ANR	5333744	Callee	envlist_setenv		5333603	0					
ANR	5333745	Identifier	envlist_setenv		5333603	0					
ANR	5333746	ArgumentList	envlist		5333603	1					
ANR	5333747	Argument	envlist		5333603	0					
ANR	5333748	Identifier	envlist		5333603	0					
ANR	5333749	Argument	* wrk		5333603	1					
ANR	5333750	UnaryOperationExpression	* wrk		5333603	0					
ANR	5333751	UnaryOperator	*		5333603	0					
ANR	5333752	Identifier	wrk		5333603	1					
ANR	5333753	CompoundStatement		65:8:900:917	5333603	18					
ANR	5333754	IdentifierDeclStatement	struct rlimit lim ;	67:8:947:964	5333603	0	True				
ANR	5333755	IdentifierDecl	lim		5333603	0					
ANR	5333756	IdentifierDeclType	struct rlimit		5333603	0					
ANR	5333757	Identifier	lim		5333603	1					
ANR	5333758	IfStatement	"if ( getrlimit ( RLIMIT_STACK , & lim ) == 0 && lim . rlim_cur != RLIM_INFINITY && lim . rlim_cur == ( target_long ) lim . rlim_cur )"		5333603	1					
ANR	5333759	Condition	"getrlimit ( RLIMIT_STACK , & lim ) == 0 && lim . rlim_cur != RLIM_INFINITY && lim . rlim_cur == ( target_long ) lim . rlim_cur"	69:12:979:1116	5333603	0	True				
ANR	5333760	AndExpression	"getrlimit ( RLIMIT_STACK , & lim ) == 0 && lim . rlim_cur != RLIM_INFINITY && lim . rlim_cur == ( target_long ) lim . rlim_cur"		5333603	0		&&			
ANR	5333761	EqualityExpression	"getrlimit ( RLIMIT_STACK , & lim ) == 0"		5333603	0		==			
ANR	5333762	CallExpression	"getrlimit ( RLIMIT_STACK , & lim )"		5333603	0					
ANR	5333763	Callee	getrlimit		5333603	0					
ANR	5333764	Identifier	getrlimit		5333603	0					
ANR	5333765	ArgumentList	RLIMIT_STACK		5333603	1					
ANR	5333766	Argument	RLIMIT_STACK		5333603	0					
ANR	5333767	Identifier	RLIMIT_STACK		5333603	0					
ANR	5333768	Argument	& lim		5333603	1					
ANR	5333769	UnaryOperationExpression	& lim		5333603	0					
ANR	5333770	UnaryOperator	&		5333603	0					
ANR	5333771	Identifier	lim		5333603	1					
ANR	5333772	PrimaryExpression	0		5333603	1					
ANR	5333773	AndExpression	lim . rlim_cur != RLIM_INFINITY && lim . rlim_cur == ( target_long ) lim . rlim_cur		5333603	1		&&			
ANR	5333774	EqualityExpression	lim . rlim_cur != RLIM_INFINITY		5333603	0		!=			
ANR	5333775	MemberAccess	lim . rlim_cur		5333603	0					
ANR	5333776	Identifier	lim		5333603	0					
ANR	5333777	Identifier	rlim_cur		5333603	1					
ANR	5333778	Identifier	RLIM_INFINITY		5333603	1					
ANR	5333779	EqualityExpression	lim . rlim_cur == ( target_long ) lim . rlim_cur		5333603	1		==			
ANR	5333780	MemberAccess	lim . rlim_cur		5333603	0					
ANR	5333781	Identifier	lim		5333603	0					
ANR	5333782	Identifier	rlim_cur		5333603	1					
ANR	5333783	CastExpression	( target_long ) lim . rlim_cur		5333603	1					
ANR	5333784	CastTarget	target_long		5333603	0					
ANR	5333785	MemberAccess	lim . rlim_cur		5333603	1					
ANR	5333786	Identifier	lim		5333603	0					
ANR	5333787	Identifier	rlim_cur		5333603	1					
ANR	5333788	CompoundStatement		71:58:1072:1072	5333603	1					
ANR	5333789	ExpressionStatement	guest_stack_size = lim . rlim_cur	75:12:1134:1165	5333603	0	True				
ANR	5333790	AssignmentExpression	guest_stack_size = lim . rlim_cur		5333603	0		=			
ANR	5333791	Identifier	guest_stack_size		5333603	0					
ANR	5333792	MemberAccess	lim . rlim_cur		5333603	1					
ANR	5333793	Identifier	lim		5333603	0					
ANR	5333794	Identifier	rlim_cur		5333603	1					
ANR	5333795	ExpressionStatement	cpu_model = NULL	83:4:1192:1208	5333603	19	True				
ANR	5333796	AssignmentExpression	cpu_model = NULL		5333603	0		=			
ANR	5333797	Identifier	cpu_model		5333603	0					
ANR	5333798	Identifier	NULL		5333603	1					
ANR	5333799	ExpressionStatement	srand ( time ( NULL ) )	87:4:1217:1234	5333603	20	True				
ANR	5333800	CallExpression	srand ( time ( NULL ) )		5333603	0					
ANR	5333801	Callee	srand		5333603	0					
ANR	5333802	Identifier	srand		5333603	0					
ANR	5333803	ArgumentList	time ( NULL )		5333603	1					
ANR	5333804	Argument	time ( NULL )		5333603	0					
ANR	5333805	CallExpression	time ( NULL )		5333603	0					
ANR	5333806	Callee	time		5333603	0					
ANR	5333807	Identifier	time		5333603	0					
ANR	5333808	ArgumentList	NULL		5333603	1					
ANR	5333809	Argument	NULL		5333603	0					
ANR	5333810	Identifier	NULL		5333603	0					
ANR	5333811	ExpressionStatement	qemu_add_opts ( & qemu_trace_opts )	91:4:1243:1274	5333603	21	True				
ANR	5333812	CallExpression	qemu_add_opts ( & qemu_trace_opts )		5333603	0					
ANR	5333813	Callee	qemu_add_opts		5333603	0					
ANR	5333814	Identifier	qemu_add_opts		5333603	0					
ANR	5333815	ArgumentList	& qemu_trace_opts		5333603	1					
ANR	5333816	Argument	& qemu_trace_opts		5333603	0					
ANR	5333817	UnaryOperationExpression	& qemu_trace_opts		5333603	0					
ANR	5333818	UnaryOperator	&		5333603	0					
ANR	5333819	Identifier	qemu_trace_opts		5333603	1					
ANR	5333820	ExpressionStatement	"optind = parse_args ( argc , argv )"	95:4:1283:1314	5333603	22	True				
ANR	5333821	AssignmentExpression	"optind = parse_args ( argc , argv )"		5333603	0		=			
ANR	5333822	Identifier	optind		5333603	0					
ANR	5333823	CallExpression	"parse_args ( argc , argv )"		5333603	1					
ANR	5333824	Callee	parse_args		5333603	0					
ANR	5333825	Identifier	parse_args		5333603	0					
ANR	5333826	ArgumentList	argc		5333603	1					
ANR	5333827	Argument	argc		5333603	0					
ANR	5333828	Identifier	argc		5333603	0					
ANR	5333829	Argument	argv		5333603	1					
ANR	5333830	Identifier	argv		5333603	0					
ANR	5333831	IfStatement	if ( ! trace_init_backends ( ) )		5333603	23					
ANR	5333832	Condition	! trace_init_backends ( )	99:8:1327:1348	5333603	0	True				
ANR	5333833	UnaryOperationExpression	! trace_init_backends ( )		5333603	0					
ANR	5333834	UnaryOperator	!		5333603	0					
ANR	5333835	CallExpression	trace_init_backends ( )		5333603	1					
ANR	5333836	Callee	trace_init_backends		5333603	0					
ANR	5333837	Identifier	trace_init_backends		5333603	0					
ANR	5333838	ArgumentList			5333603	1					
ANR	5333839	CompoundStatement		97:32:1304:1304	5333603	1					
ANR	5333840	ExpressionStatement	exit ( 1 )	101:8:1362:1369	5333603	0	True				
ANR	5333841	CallExpression	exit ( 1 )		5333603	0					
ANR	5333842	Callee	exit		5333603	0					
ANR	5333843	Identifier	exit		5333603	0					
ANR	5333844	ArgumentList	1		5333603	1					
ANR	5333845	Argument	1		5333603	0					
ANR	5333846	PrimaryExpression	1		5333603	0					
ANR	5333847	ExpressionStatement	trace_init_file ( trace_file )	105:4:1383:1410	5333603	24	True				
ANR	5333848	CallExpression	trace_init_file ( trace_file )		5333603	0					
ANR	5333849	Callee	trace_init_file		5333603	0					
ANR	5333850	Identifier	trace_init_file		5333603	0					
ANR	5333851	ArgumentList	trace_file		5333603	1					
ANR	5333852	Argument	trace_file		5333603	0					
ANR	5333853	Identifier	trace_file		5333603	0					
ANR	5333854	ExpressionStatement	"memset ( regs , 0 , sizeof ( struct target_pt_regs ) )"	111:4:1444:1490	5333603	25	True				
ANR	5333855	CallExpression	"memset ( regs , 0 , sizeof ( struct target_pt_regs ) )"		5333603	0					
ANR	5333856	Callee	memset		5333603	0					
ANR	5333857	Identifier	memset		5333603	0					
ANR	5333858	ArgumentList	regs		5333603	1					
ANR	5333859	Argument	regs		5333603	0					
ANR	5333860	Identifier	regs		5333603	0					
ANR	5333861	Argument	0		5333603	1					
ANR	5333862	PrimaryExpression	0		5333603	0					
ANR	5333863	Argument	sizeof ( struct target_pt_regs )		5333603	2					
ANR	5333864	SizeofExpression	sizeof ( struct target_pt_regs )		5333603	0					
ANR	5333865	Sizeof	sizeof		5333603	0					
ANR	5333866	SizeofOperand	struct target_pt_regs		5333603	1					
ANR	5333867	ExpressionStatement	"memset ( info , 0 , sizeof ( struct image_info ) )"	117:4:1530:1572	5333603	26	True				
ANR	5333868	CallExpression	"memset ( info , 0 , sizeof ( struct image_info ) )"		5333603	0					
ANR	5333869	Callee	memset		5333603	0					
ANR	5333870	Identifier	memset		5333603	0					
ANR	5333871	ArgumentList	info		5333603	1					
ANR	5333872	Argument	info		5333603	0					
ANR	5333873	Identifier	info		5333603	0					
ANR	5333874	Argument	0		5333603	1					
ANR	5333875	PrimaryExpression	0		5333603	0					
ANR	5333876	Argument	sizeof ( struct image_info )		5333603	2					
ANR	5333877	SizeofExpression	sizeof ( struct image_info )		5333603	0					
ANR	5333878	Sizeof	sizeof		5333603	0					
ANR	5333879	SizeofOperand	struct image_info		5333603	1					
ANR	5333880	ExpressionStatement	"memset ( & bprm , 0 , sizeof ( bprm ) )"	121:4:1581:1612	5333603	27	True				
ANR	5333881	CallExpression	"memset ( & bprm , 0 , sizeof ( bprm ) )"		5333603	0					
ANR	5333882	Callee	memset		5333603	0					
ANR	5333883	Identifier	memset		5333603	0					
ANR	5333884	ArgumentList	& bprm		5333603	1					
ANR	5333885	Argument	& bprm		5333603	0					
ANR	5333886	UnaryOperationExpression	& bprm		5333603	0					
ANR	5333887	UnaryOperator	&		5333603	0					
ANR	5333888	Identifier	bprm		5333603	1					
ANR	5333889	Argument	0		5333603	1					
ANR	5333890	PrimaryExpression	0		5333603	0					
ANR	5333891	Argument	sizeof ( bprm )		5333603	2					
ANR	5333892	SizeofExpression	sizeof ( bprm )		5333603	0					
ANR	5333893	Sizeof	sizeof		5333603	0					
ANR	5333894	SizeofOperand	bprm		5333603	1					
ANR	5333895	ExpressionStatement	init_paths ( interp_prefix )	127:4:1678:1703	5333603	28	True				
ANR	5333896	CallExpression	init_paths ( interp_prefix )		5333603	0					
ANR	5333897	Callee	init_paths		5333603	0					
ANR	5333898	Identifier	init_paths		5333603	0					
ANR	5333899	ArgumentList	interp_prefix		5333603	1					
ANR	5333900	Argument	interp_prefix		5333603	0					
ANR	5333901	Identifier	interp_prefix		5333603	0					
ANR	5333902	ExpressionStatement	init_qemu_uname_release ( )	131:4:1712:1737	5333603	29	True				
ANR	5333903	CallExpression	init_qemu_uname_release ( )		5333603	0					
ANR	5333904	Callee	init_qemu_uname_release		5333603	0					
ANR	5333905	Identifier	init_qemu_uname_release		5333603	0					
ANR	5333906	ArgumentList			5333603	1					
ANR	5333907	IfStatement	if ( cpu_model == NULL )		5333603	30					
ANR	5333908	Condition	cpu_model == NULL	135:8:1750:1766	5333603	0	True				
ANR	5333909	EqualityExpression	cpu_model == NULL		5333603	0		==			
ANR	5333910	Identifier	cpu_model		5333603	0					
ANR	5333911	Identifier	NULL		5333603	1					
ANR	5333912	CompoundStatement		133:27:1722:1722	5333603	1					
ANR	5333913	ExpressionStatement	"cpu_model = ""qemu64"""	141:8:1828:1848	5333603	0	True				
ANR	5333914	AssignmentExpression	"cpu_model = ""qemu64"""		5333603	0		=			
ANR	5333915	Identifier	cpu_model		5333603	0					
ANR	5333916	PrimaryExpression	"""qemu64"""		5333603	1					
ANR	5333917	ExpressionStatement	tcg_exec_init ( 0 )	217:4:2744:2760	5333603	31	True				
ANR	5333918	CallExpression	tcg_exec_init ( 0 )		5333603	0					
ANR	5333919	Callee	tcg_exec_init		5333603	0					
ANR	5333920	Identifier	tcg_exec_init		5333603	0					
ANR	5333921	ArgumentList	0		5333603	1					
ANR	5333922	Argument	0		5333603	0					
ANR	5333923	PrimaryExpression	0		5333603	0					
ANR	5333924	ExpressionStatement	cpu = cpu_init ( cpu_model )	223:4:2857:2882	5333603	32	True				
ANR	5333925	AssignmentExpression	cpu = cpu_init ( cpu_model )		5333603	0		=			
ANR	5333926	Identifier	cpu		5333603	0					
ANR	5333927	CallExpression	cpu_init ( cpu_model )		5333603	1					
ANR	5333928	Callee	cpu_init		5333603	0					
ANR	5333929	Identifier	cpu_init		5333603	0					
ANR	5333930	ArgumentList	cpu_model		5333603	1					
ANR	5333931	Argument	cpu_model		5333603	0					
ANR	5333932	Identifier	cpu_model		5333603	0					
ANR	5333933	IfStatement	if ( ! cpu )		5333603	33					
ANR	5333934	Condition	! cpu	225:8:2893:2896	5333603	0	True				
ANR	5333935	UnaryOperationExpression	! cpu		5333603	0					
ANR	5333936	UnaryOperator	!		5333603	0					
ANR	5333937	Identifier	cpu		5333603	1					
ANR	5333938	CompoundStatement		223:14:2852:2852	5333603	1					
ANR	5333939	ExpressionStatement	"fprintf ( stderr , ""Unable to find CPU definition\\n"" )"	227:8:2910:2960	5333603	0	True				
ANR	5333940	CallExpression	"fprintf ( stderr , ""Unable to find CPU definition\\n"" )"		5333603	0					
ANR	5333941	Callee	fprintf		5333603	0					
ANR	5333942	Identifier	fprintf		5333603	0					
ANR	5333943	ArgumentList	stderr		5333603	1					
ANR	5333944	Argument	stderr		5333603	0					
ANR	5333945	Identifier	stderr		5333603	0					
ANR	5333946	Argument	"""Unable to find CPU definition\\n"""		5333603	1					
ANR	5333947	PrimaryExpression	"""Unable to find CPU definition\\n"""		5333603	0					
ANR	5333948	ExpressionStatement	exit ( EXIT_FAILURE )	229:8:2971:2989	5333603	1	True				
ANR	5333949	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5333950	Callee	exit		5333603	0					
ANR	5333951	Identifier	exit		5333603	0					
ANR	5333952	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5333953	Argument	EXIT_FAILURE		5333603	0					
ANR	5333954	Identifier	EXIT_FAILURE		5333603	0					
ANR	5333955	ExpressionStatement	env = cpu -> env_ptr	233:4:3003:3021	5333603	34	True				
ANR	5333956	AssignmentExpression	env = cpu -> env_ptr		5333603	0		=			
ANR	5333957	Identifier	env		5333603	0					
ANR	5333958	PtrMemberAccess	cpu -> env_ptr		5333603	1					
ANR	5333959	Identifier	cpu		5333603	0					
ANR	5333960	Identifier	env_ptr		5333603	1					
ANR	5333961	ExpressionStatement	cpu_reset ( cpu )	235:4:3028:3042	5333603	35	True				
ANR	5333962	CallExpression	cpu_reset ( cpu )		5333603	0					
ANR	5333963	Callee	cpu_reset		5333603	0					
ANR	5333964	Identifier	cpu_reset		5333603	0					
ANR	5333965	ArgumentList	cpu		5333603	1					
ANR	5333966	Argument	cpu		5333603	0					
ANR	5333967	Identifier	cpu		5333603	0					
ANR	5333968	ExpressionStatement	thread_cpu = cpu	239:4:3051:3067	5333603	36	True				
ANR	5333969	AssignmentExpression	thread_cpu = cpu		5333603	0		=			
ANR	5333970	Identifier	thread_cpu		5333603	0					
ANR	5333971	Identifier	cpu		5333603	1					
ANR	5333972	IfStatement	"if ( getenv ( ""QEMU_STRACE"" ) )"		5333603	37					
ANR	5333973	Condition	"getenv ( ""QEMU_STRACE"" )"	243:8:3080:3100	5333603	0	True				
ANR	5333974	CallExpression	"getenv ( ""QEMU_STRACE"" )"		5333603	0					
ANR	5333975	Callee	getenv		5333603	0					
ANR	5333976	Identifier	getenv		5333603	0					
ANR	5333977	ArgumentList	"""QEMU_STRACE"""		5333603	1					
ANR	5333978	Argument	"""QEMU_STRACE"""		5333603	0					
ANR	5333979	PrimaryExpression	"""QEMU_STRACE"""		5333603	0					
ANR	5333980	CompoundStatement		241:31:3056:3056	5333603	1					
ANR	5333981	ExpressionStatement	do_strace = 1	245:8:3114:3127	5333603	0	True				
ANR	5333982	AssignmentExpression	do_strace = 1		5333603	0		=			
ANR	5333983	Identifier	do_strace		5333603	0					
ANR	5333984	PrimaryExpression	1		5333603	1					
ANR	5333985	IfStatement	"if ( getenv ( ""QEMU_RAND_SEED"" ) )"		5333603	38					
ANR	5333986	Condition	"getenv ( ""QEMU_RAND_SEED"" )"	251:8:3147:3170	5333603	0	True				
ANR	5333987	CallExpression	"getenv ( ""QEMU_RAND_SEED"" )"		5333603	0					
ANR	5333988	Callee	getenv		5333603	0					
ANR	5333989	Identifier	getenv		5333603	0					
ANR	5333990	ArgumentList	"""QEMU_RAND_SEED"""		5333603	1					
ANR	5333991	Argument	"""QEMU_RAND_SEED"""		5333603	0					
ANR	5333992	PrimaryExpression	"""QEMU_RAND_SEED"""		5333603	0					
ANR	5333993	CompoundStatement		249:34:3126:3126	5333603	1					
ANR	5333994	ExpressionStatement	"handle_arg_randseed ( getenv ( ""QEMU_RAND_SEED"" ) )"	253:8:3184:3229	5333603	0	True				
ANR	5333995	CallExpression	"handle_arg_randseed ( getenv ( ""QEMU_RAND_SEED"" ) )"		5333603	0					
ANR	5333996	Callee	handle_arg_randseed		5333603	0					
ANR	5333997	Identifier	handle_arg_randseed		5333603	0					
ANR	5333998	ArgumentList	"getenv ( ""QEMU_RAND_SEED"" )"		5333603	1					
ANR	5333999	Argument	"getenv ( ""QEMU_RAND_SEED"" )"		5333603	0					
ANR	5334000	CallExpression	"getenv ( ""QEMU_RAND_SEED"" )"		5333603	0					
ANR	5334001	Callee	getenv		5333603	0					
ANR	5334002	Identifier	getenv		5333603	0					
ANR	5334003	ArgumentList	"""QEMU_RAND_SEED"""		5333603	1					
ANR	5334004	Argument	"""QEMU_RAND_SEED"""		5333603	0					
ANR	5334005	PrimaryExpression	"""QEMU_RAND_SEED"""		5333603	0					
ANR	5334006	ExpressionStatement	"target_environ = envlist_to_environ ( envlist , NULL )"	259:4:3245:3295	5333603	39	True				
ANR	5334007	AssignmentExpression	"target_environ = envlist_to_environ ( envlist , NULL )"		5333603	0		=			
ANR	5334008	Identifier	target_environ		5333603	0					
ANR	5334009	CallExpression	"envlist_to_environ ( envlist , NULL )"		5333603	1					
ANR	5334010	Callee	envlist_to_environ		5333603	0					
ANR	5334011	Identifier	envlist_to_environ		5333603	0					
ANR	5334012	ArgumentList	envlist		5333603	1					
ANR	5334013	Argument	envlist		5333603	0					
ANR	5334014	Identifier	envlist		5333603	0					
ANR	5334015	Argument	NULL		5333603	1					
ANR	5334016	Identifier	NULL		5333603	0					
ANR	5334017	ExpressionStatement	envlist_free ( envlist )	261:4:3302:3323	5333603	40	True				
ANR	5334018	CallExpression	envlist_free ( envlist )		5333603	0					
ANR	5334019	Callee	envlist_free		5333603	0					
ANR	5334020	Identifier	envlist_free		5333603	0					
ANR	5334021	ArgumentList	envlist		5333603	1					
ANR	5334022	Argument	envlist		5333603	0					
ANR	5334023	Identifier	envlist		5333603	0					
ANR	5334024	ExpressionStatement	guest_base = HOST_PAGE_ALIGN ( guest_base )	273:4:3462:3502	5333603	41	True				
ANR	5334025	AssignmentExpression	guest_base = HOST_PAGE_ALIGN ( guest_base )		5333603	0		=			
ANR	5334026	Identifier	guest_base		5333603	0					
ANR	5334027	CallExpression	HOST_PAGE_ALIGN ( guest_base )		5333603	1					
ANR	5334028	Callee	HOST_PAGE_ALIGN		5333603	0					
ANR	5334029	Identifier	HOST_PAGE_ALIGN		5333603	0					
ANR	5334030	ArgumentList	guest_base		5333603	1					
ANR	5334031	Argument	guest_base		5333603	0					
ANR	5334032	Identifier	guest_base		5333603	0					
ANR	5334033	IfStatement	if ( reserved_va || have_guest_base )		5333603	42					
ANR	5334034	Condition	reserved_va || have_guest_base	277:8:3515:3544	5333603	0	True				
ANR	5334035	OrExpression	reserved_va || have_guest_base		5333603	0		||			
ANR	5334036	Identifier	reserved_va		5333603	0					
ANR	5334037	Identifier	have_guest_base		5333603	1					
ANR	5334038	CompoundStatement		275:40:3500:3500	5333603	1					
ANR	5334039	ExpressionStatement	"guest_base = init_guest_space ( guest_base , reserved_va , 0 , have_guest_base )"	279:8:3558:3671	5333603	0	True				
ANR	5334040	AssignmentExpression	"guest_base = init_guest_space ( guest_base , reserved_va , 0 , have_guest_base )"		5333603	0		=			
ANR	5334041	Identifier	guest_base		5333603	0					
ANR	5334042	CallExpression	"init_guest_space ( guest_base , reserved_va , 0 , have_guest_base )"		5333603	1					
ANR	5334043	Callee	init_guest_space		5333603	0					
ANR	5334044	Identifier	init_guest_space		5333603	0					
ANR	5334045	ArgumentList	guest_base		5333603	1					
ANR	5334046	Argument	guest_base		5333603	0					
ANR	5334047	Identifier	guest_base		5333603	0					
ANR	5334048	Argument	reserved_va		5333603	1					
ANR	5334049	Identifier	reserved_va		5333603	0					
ANR	5334050	Argument	0		5333603	2					
ANR	5334051	PrimaryExpression	0		5333603	0					
ANR	5334052	Argument	have_guest_base		5333603	3					
ANR	5334053	Identifier	have_guest_base		5333603	0					
ANR	5334054	IfStatement	if ( guest_base == ( unsigned long ) - 1 )		5333603	1					
ANR	5334055	Condition	guest_base == ( unsigned long ) - 1	283:12:3686:3716	5333603	0	True				
ANR	5334056	EqualityExpression	guest_base == ( unsigned long ) - 1		5333603	0		==			
ANR	5334057	Identifier	guest_base		5333603	0					
ANR	5334058	CastExpression	( unsigned long ) - 1		5333603	1					
ANR	5334059	CastTarget	unsigned long		5333603	0					
ANR	5334060	UnaryOperationExpression	- 1		5333603	1					
ANR	5334061	UnaryOperator	-		5333603	0					
ANR	5334062	PrimaryExpression	1		5333603	1					
ANR	5334063	CompoundStatement		281:45:3672:3672	5333603	1					
ANR	5334064	Statement	fprintf	285:12:3734:3740	5333603	0	True				
ANR	5334065	Statement	(	285:19:3741:3741	5333603	1	True				
ANR	5334066	Statement	stderr	285:20:3742:3747	5333603	2	True				
ANR	5334067	Statement	","	285:26:3748:3748	5333603	3	True				
ANR	5334068	Statement	"""Unable to reserve 0x%lx bytes of virtual address """	285:28:3750:3800	5333603	4	True				
ANR	5334069	Statement	"""space for use as guest address space (check your virtual """	287:20:3823:3881	5333603	5	True				
ANR	5334070	Statement	"""memory ulimit setting or reserve less using -R option)\\n"""	289:20:3904:3961	5333603	6	True				
ANR	5334071	Statement	","	289:78:3962:3962	5333603	7	True				
ANR	5334072	Statement	reserved_va	291:20:3985:3995	5333603	8	True				
ANR	5334073	Statement	)	291:31:3996:3996	5333603	9	True				
ANR	5334074	ExpressionStatement		291:32:3997:3997	5333603	10	True				
ANR	5334075	ExpressionStatement	exit ( EXIT_FAILURE )	293:12:4012:4030	5333603	11	True				
ANR	5334076	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5334077	Callee	exit		5333603	0					
ANR	5334078	Identifier	exit		5333603	0					
ANR	5334079	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5334080	Argument	EXIT_FAILURE		5333603	0					
ANR	5334081	Identifier	EXIT_FAILURE		5333603	0					
ANR	5334082	IfStatement	if ( reserved_va )		5333603	2					
ANR	5334083	Condition	reserved_va	299:12:4058:4068	5333603	0	True				
ANR	5334084	Identifier	reserved_va		5333603	0					
ANR	5334085	CompoundStatement		297:25:4024:4024	5333603	1					
ANR	5334086	ExpressionStatement	mmap_next_start = reserved_va	301:12:4086:4115	5333603	0	True				
ANR	5334087	AssignmentExpression	mmap_next_start = reserved_va		5333603	0		=			
ANR	5334088	Identifier	mmap_next_start		5333603	0					
ANR	5334089	Identifier	reserved_va		5333603	1					
ANR	5334090	CompoundStatement		319:8:4312:4320	5333603	43					
ANR	5334091	IdentifierDeclStatement	FILE * fp ;	321:8:4359:4367	5333603	0	True				
ANR	5334092	IdentifierDecl	* fp		5333603	0					
ANR	5334093	IdentifierDeclType	FILE *		5333603	0					
ANR	5334094	Identifier	fp		5333603	1					
ANR	5334095	IfStatement	"if ( ( fp = fopen ( ""/proc/sys/vm/mmap_min_addr"" , ""r"" ) ) != NULL )"		5333603	1					
ANR	5334096	Condition	"( fp = fopen ( ""/proc/sys/vm/mmap_min_addr"" , ""r"" ) ) != NULL"	325:12:4384:4438	5333603	0	True				
ANR	5334097	EqualityExpression	"( fp = fopen ( ""/proc/sys/vm/mmap_min_addr"" , ""r"" ) ) != NULL"		5333603	0		!=			
ANR	5334098	AssignmentExpression	"fp = fopen ( ""/proc/sys/vm/mmap_min_addr"" , ""r"" )"		5333603	0		=			
ANR	5334099	Identifier	fp		5333603	0					
ANR	5334100	CallExpression	"fopen ( ""/proc/sys/vm/mmap_min_addr"" , ""r"" )"		5333603	1					
ANR	5334101	Callee	fopen		5333603	0					
ANR	5334102	Identifier	fopen		5333603	0					
ANR	5334103	ArgumentList	"""/proc/sys/vm/mmap_min_addr"""		5333603	1					
ANR	5334104	Argument	"""/proc/sys/vm/mmap_min_addr"""		5333603	0					
ANR	5334105	PrimaryExpression	"""/proc/sys/vm/mmap_min_addr"""		5333603	0					
ANR	5334106	Argument	"""r"""		5333603	1					
ANR	5334107	PrimaryExpression	"""r"""		5333603	0					
ANR	5334108	Identifier	NULL		5333603	1					
ANR	5334109	CompoundStatement		325:12:4409:4426	5333603	1					
ANR	5334110	IdentifierDeclStatement	unsigned long tmp ;	327:12:4456:4473	5333603	0	True				
ANR	5334111	IdentifierDecl	tmp		5333603	0					
ANR	5334112	IdentifierDeclType	unsigned long		5333603	0					
ANR	5334113	Identifier	tmp		5333603	1					
ANR	5334114	IfStatement	"if ( fscanf ( fp , ""%lu"" , & tmp ) == 1 )"		5333603	1					
ANR	5334115	Condition	"fscanf ( fp , ""%lu"" , & tmp ) == 1"	329:16:4492:4519	5333603	0	True				
ANR	5334116	EqualityExpression	"fscanf ( fp , ""%lu"" , & tmp ) == 1"		5333603	0		==			
ANR	5334117	CallExpression	"fscanf ( fp , ""%lu"" , & tmp )"		5333603	0					
ANR	5334118	Callee	fscanf		5333603	0					
ANR	5334119	Identifier	fscanf		5333603	0					
ANR	5334120	ArgumentList	fp		5333603	1					
ANR	5334121	Argument	fp		5333603	0					
ANR	5334122	Identifier	fp		5333603	0					
ANR	5334123	Argument	"""%lu"""		5333603	1					
ANR	5334124	PrimaryExpression	"""%lu"""		5333603	0					
ANR	5334125	Argument	& tmp		5333603	2					
ANR	5334126	UnaryOperationExpression	& tmp		5333603	0					
ANR	5334127	UnaryOperator	&		5333603	0					
ANR	5334128	Identifier	tmp		5333603	1					
ANR	5334129	PrimaryExpression	1		5333603	1					
ANR	5334130	CompoundStatement		327:46:4475:4475	5333603	1					
ANR	5334131	ExpressionStatement	mmap_min_addr = tmp	331:16:4541:4560	5333603	0	True				
ANR	5334132	AssignmentExpression	mmap_min_addr = tmp		5333603	0		=			
ANR	5334133	Identifier	mmap_min_addr		5333603	0					
ANR	5334134	Identifier	tmp		5333603	1					
ANR	5334135	ExpressionStatement	"qemu_log_mask ( CPU_LOG_PAGE , ""host mmap_min_addr=0x%lx\\n"" , mmap_min_addr )"	333:16:4579:4651	5333603	1	True				
ANR	5334136	CallExpression	"qemu_log_mask ( CPU_LOG_PAGE , ""host mmap_min_addr=0x%lx\\n"" , mmap_min_addr )"		5333603	0					
ANR	5334137	Callee	qemu_log_mask		5333603	0					
ANR	5334138	Identifier	qemu_log_mask		5333603	0					
ANR	5334139	ArgumentList	CPU_LOG_PAGE		5333603	1					
ANR	5334140	Argument	CPU_LOG_PAGE		5333603	0					
ANR	5334141	Identifier	CPU_LOG_PAGE		5333603	0					
ANR	5334142	Argument	"""host mmap_min_addr=0x%lx\\n"""		5333603	1					
ANR	5334143	PrimaryExpression	"""host mmap_min_addr=0x%lx\\n"""		5333603	0					
ANR	5334144	Argument	mmap_min_addr		5333603	2					
ANR	5334145	Identifier	mmap_min_addr		5333603	0					
ANR	5334146	ExpressionStatement	fclose ( fp )	337:12:4681:4691	5333603	2	True				
ANR	5334147	CallExpression	fclose ( fp )		5333603	0					
ANR	5334148	Callee	fclose		5333603	0					
ANR	5334149	Identifier	fclose		5333603	0					
ANR	5334150	ArgumentList	fp		5333603	1					
ANR	5334151	Argument	fp		5333603	0					
ANR	5334152	Identifier	fp		5333603	0					
ANR	5334153	ExpressionStatement	target_argc = argc - optind	351:4:4783:4810	5333603	44	True				
ANR	5334154	AssignmentExpression	target_argc = argc - optind		5333603	0		=			
ANR	5334155	Identifier	target_argc		5333603	0					
ANR	5334156	AdditiveExpression	argc - optind		5333603	1		-			
ANR	5334157	Identifier	argc		5333603	0					
ANR	5334158	Identifier	optind		5333603	1					
ANR	5334159	ExpressionStatement	"target_argv = calloc ( target_argc + 1 , sizeof ( char * ) )"	353:4:4817:4871	5333603	45	True				
ANR	5334160	AssignmentExpression	"target_argv = calloc ( target_argc + 1 , sizeof ( char * ) )"		5333603	0		=			
ANR	5334161	Identifier	target_argv		5333603	0					
ANR	5334162	CallExpression	"calloc ( target_argc + 1 , sizeof ( char * ) )"		5333603	1					
ANR	5334163	Callee	calloc		5333603	0					
ANR	5334164	Identifier	calloc		5333603	0					
ANR	5334165	ArgumentList	target_argc + 1		5333603	1					
ANR	5334166	Argument	target_argc + 1		5333603	0					
ANR	5334167	AdditiveExpression	target_argc + 1		5333603	0		+			
ANR	5334168	Identifier	target_argc		5333603	0					
ANR	5334169	PrimaryExpression	1		5333603	1					
ANR	5334170	Argument	sizeof ( char * )		5333603	1					
ANR	5334171	SizeofExpression	sizeof ( char * )		5333603	0					
ANR	5334172	Sizeof	sizeof		5333603	0					
ANR	5334173	SizeofOperand	char *		5333603	1					
ANR	5334174	IfStatement	if ( target_argv == NULL )		5333603	46					
ANR	5334175	Condition	target_argv == NULL	355:8:4882:4900	5333603	0	True				
ANR	5334176	EqualityExpression	target_argv == NULL		5333603	0		==			
ANR	5334177	Identifier	target_argv		5333603	0					
ANR	5334178	Identifier	NULL		5333603	1					
ANR	5334179	CompoundStatement		353:29:4856:4856	5333603	1					
ANR	5334180	ExpressionStatement	"( void ) fprintf ( stderr , ""Unable to allocate memory for target_argv\\n"" )"	357:1:4907:4976	5333603	0	True				
ANR	5334181	CastExpression	"( void ) fprintf ( stderr , ""Unable to allocate memory for target_argv\\n"" )"		5333603	0					
ANR	5334182	CastTarget	void		5333603	0					
ANR	5334183	CallExpression	"fprintf ( stderr , ""Unable to allocate memory for target_argv\\n"" )"		5333603	1					
ANR	5334184	Callee	fprintf		5333603	0					
ANR	5334185	Identifier	fprintf		5333603	0					
ANR	5334186	ArgumentList	stderr		5333603	1					
ANR	5334187	Argument	stderr		5333603	0					
ANR	5334188	Identifier	stderr		5333603	0					
ANR	5334189	Argument	"""Unable to allocate memory for target_argv\\n"""		5333603	1					
ANR	5334190	PrimaryExpression	"""Unable to allocate memory for target_argv\\n"""		5333603	0					
ANR	5334191	ExpressionStatement	exit ( EXIT_FAILURE )	359:1:4980:4998	5333603	1	True				
ANR	5334192	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5334193	Callee	exit		5333603	0					
ANR	5334194	Identifier	exit		5333603	0					
ANR	5334195	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5334196	Argument	EXIT_FAILURE		5333603	0					
ANR	5334197	Identifier	EXIT_FAILURE		5333603	0					
ANR	5334198	ExpressionStatement	i = 0	373:4:5136:5141	5333603	47	True				
ANR	5334199	AssignmentExpression	i = 0		5333603	0		=			
ANR	5334200	Identifier	i		5333603	0					
ANR	5334201	PrimaryExpression	0		5333603	1					
ANR	5334202	IfStatement	if ( argv0 != NULL )		5333603	48					
ANR	5334203	Condition	argv0 != NULL	375:8:5152:5164	5333603	0	True				
ANR	5334204	EqualityExpression	argv0 != NULL		5333603	0		!=			
ANR	5334205	Identifier	argv0		5333603	0					
ANR	5334206	Identifier	NULL		5333603	1					
ANR	5334207	CompoundStatement		373:23:5120:5120	5333603	1					
ANR	5334208	ExpressionStatement	target_argv [ i ++ ] = strdup ( argv0 )	377:8:5178:5210	5333603	0	True				
ANR	5334209	AssignmentExpression	target_argv [ i ++ ] = strdup ( argv0 )		5333603	0		=			
ANR	5334210	ArrayIndexing	target_argv [ i ++ ]		5333603	0					
ANR	5334211	Identifier	target_argv		5333603	0					
ANR	5334212	PostIncDecOperationExpression	i ++		5333603	1					
ANR	5334213	Identifier	i		5333603	0					
ANR	5334214	IncDec	++		5333603	1					
ANR	5334215	CallExpression	strdup ( argv0 )		5333603	1					
ANR	5334216	Callee	strdup		5333603	0					
ANR	5334217	Identifier	strdup		5333603	0					
ANR	5334218	ArgumentList	argv0		5333603	1					
ANR	5334219	Argument	argv0		5333603	0					
ANR	5334220	Identifier	argv0		5333603	0					
ANR	5334221	ForStatement	for ( ; i < target_argc ; i ++ )		5333603	49					
ANR	5334222	Condition	i < target_argc	381:11:5231:5245	5333603	0	True				
ANR	5334223	RelationalExpression	i < target_argc		5333603	0		<			
ANR	5334224	Identifier	i		5333603	0					
ANR	5334225	Identifier	target_argc		5333603	1					
ANR	5334226	PostIncDecOperationExpression	i ++	381:28:5248:5250	5333603	1	True				
ANR	5334227	Identifier	i		5333603	0					
ANR	5334228	IncDec	++		5333603	1					
ANR	5334229	CompoundStatement		379:33:5206:5206	5333603	2					
ANR	5334230	ExpressionStatement	target_argv [ i ] = strdup ( argv [ optind + i ] )	383:8:5264:5305	5333603	0	True				
ANR	5334231	AssignmentExpression	target_argv [ i ] = strdup ( argv [ optind + i ] )		5333603	0		=			
ANR	5334232	ArrayIndexing	target_argv [ i ]		5333603	0					
ANR	5334233	Identifier	target_argv		5333603	0					
ANR	5334234	Identifier	i		5333603	1					
ANR	5334235	CallExpression	strdup ( argv [ optind + i ] )		5333603	1					
ANR	5334236	Callee	strdup		5333603	0					
ANR	5334237	Identifier	strdup		5333603	0					
ANR	5334238	ArgumentList	argv [ optind + i ]		5333603	1					
ANR	5334239	Argument	argv [ optind + i ]		5333603	0					
ANR	5334240	ArrayIndexing	argv [ optind + i ]		5333603	0					
ANR	5334241	Identifier	argv		5333603	0					
ANR	5334242	AdditiveExpression	optind + i		5333603	1		+			
ANR	5334243	Identifier	optind		5333603	0					
ANR	5334244	Identifier	i		5333603	1					
ANR	5334245	ExpressionStatement	target_argv [ target_argc ] = NULL	387:4:5319:5350	5333603	50	True				
ANR	5334246	AssignmentExpression	target_argv [ target_argc ] = NULL		5333603	0		=			
ANR	5334247	ArrayIndexing	target_argv [ target_argc ]		5333603	0					
ANR	5334248	Identifier	target_argv		5333603	0					
ANR	5334249	Identifier	target_argc		5333603	1					
ANR	5334250	Identifier	NULL		5333603	1					
ANR	5334251	ExpressionStatement	"ts = g_new0 ( TaskState , 1 )"	391:4:5359:5384	5333603	51	True				
ANR	5334252	AssignmentExpression	"ts = g_new0 ( TaskState , 1 )"		5333603	0		=			
ANR	5334253	Identifier	ts		5333603	0					
ANR	5334254	CallExpression	"g_new0 ( TaskState , 1 )"		5333603	1					
ANR	5334255	Callee	g_new0		5333603	0					
ANR	5334256	Identifier	g_new0		5333603	0					
ANR	5334257	ArgumentList	TaskState		5333603	1					
ANR	5334258	Argument	TaskState		5333603	0					
ANR	5334259	Identifier	TaskState		5333603	0					
ANR	5334260	Argument	1		5333603	1					
ANR	5334261	PrimaryExpression	1		5333603	0					
ANR	5334262	ExpressionStatement	init_task_state ( ts )	393:4:5391:5410	5333603	52	True				
ANR	5334263	CallExpression	init_task_state ( ts )		5333603	0					
ANR	5334264	Callee	init_task_state		5333603	0					
ANR	5334265	Identifier	init_task_state		5333603	0					
ANR	5334266	ArgumentList	ts		5333603	1					
ANR	5334267	Argument	ts		5333603	0					
ANR	5334268	Identifier	ts		5333603	0					
ANR	5334269	ExpressionStatement	ts -> info = info	397:4:5445:5460	5333603	53	True				
ANR	5334270	AssignmentExpression	ts -> info = info		5333603	0		=			
ANR	5334271	PtrMemberAccess	ts -> info		5333603	0					
ANR	5334272	Identifier	ts		5333603	0					
ANR	5334273	Identifier	info		5333603	1					
ANR	5334274	Identifier	info		5333603	1					
ANR	5334275	ExpressionStatement	ts -> bprm = & bprm	399:4:5467:5483	5333603	54	True				
ANR	5334276	AssignmentExpression	ts -> bprm = & bprm		5333603	0		=			
ANR	5334277	PtrMemberAccess	ts -> bprm		5333603	0					
ANR	5334278	Identifier	ts		5333603	0					
ANR	5334279	Identifier	bprm		5333603	1					
ANR	5334280	UnaryOperationExpression	& bprm		5333603	1					
ANR	5334281	UnaryOperator	&		5333603	0					
ANR	5334282	Identifier	bprm		5333603	1					
ANR	5334283	ExpressionStatement	cpu -> opaque = ts	401:4:5490:5506	5333603	55	True				
ANR	5334284	AssignmentExpression	cpu -> opaque = ts		5333603	0		=			
ANR	5334285	PtrMemberAccess	cpu -> opaque		5333603	0					
ANR	5334286	Identifier	cpu		5333603	0					
ANR	5334287	Identifier	opaque		5333603	1					
ANR	5334288	Identifier	ts		5333603	1					
ANR	5334289	ExpressionStatement	task_settid ( ts )	403:4:5513:5528	5333603	56	True				
ANR	5334290	CallExpression	task_settid ( ts )		5333603	0					
ANR	5334291	Callee	task_settid		5333603	0					
ANR	5334292	Identifier	task_settid		5333603	0					
ANR	5334293	ArgumentList	ts		5333603	1					
ANR	5334294	Argument	ts		5333603	0					
ANR	5334295	Identifier	ts		5333603	0					
ANR	5334296	ExpressionStatement	execfd = qemu_getauxval ( AT_EXECFD )	407:4:5537:5571	5333603	57	True				
ANR	5334297	AssignmentExpression	execfd = qemu_getauxval ( AT_EXECFD )		5333603	0		=			
ANR	5334298	Identifier	execfd		5333603	0					
ANR	5334299	CallExpression	qemu_getauxval ( AT_EXECFD )		5333603	1					
ANR	5334300	Callee	qemu_getauxval		5333603	0					
ANR	5334301	Identifier	qemu_getauxval		5333603	0					
ANR	5334302	ArgumentList	AT_EXECFD		5333603	1					
ANR	5334303	Argument	AT_EXECFD		5333603	0					
ANR	5334304	Identifier	AT_EXECFD		5333603	0					
ANR	5334305	IfStatement	if ( execfd == 0 )		5333603	58					
ANR	5334306	Condition	execfd == 0	409:8:5582:5592	5333603	0	True				
ANR	5334307	EqualityExpression	execfd == 0		5333603	0		==			
ANR	5334308	Identifier	execfd		5333603	0					
ANR	5334309	PrimaryExpression	0		5333603	1					
ANR	5334310	CompoundStatement		407:21:5548:5548	5333603	1					
ANR	5334311	ExpressionStatement	"execfd = open ( filename , O_RDONLY )"	411:8:5606:5639	5333603	0	True				
ANR	5334312	AssignmentExpression	"execfd = open ( filename , O_RDONLY )"		5333603	0		=			
ANR	5334313	Identifier	execfd		5333603	0					
ANR	5334314	CallExpression	"open ( filename , O_RDONLY )"		5333603	1					
ANR	5334315	Callee	open		5333603	0					
ANR	5334316	Identifier	open		5333603	0					
ANR	5334317	ArgumentList	filename		5333603	1					
ANR	5334318	Argument	filename		5333603	0					
ANR	5334319	Identifier	filename		5333603	0					
ANR	5334320	Argument	O_RDONLY		5333603	1					
ANR	5334321	Identifier	O_RDONLY		5333603	0					
ANR	5334322	IfStatement	if ( execfd < 0 )		5333603	1					
ANR	5334323	Condition	execfd < 0	413:12:5654:5663	5333603	0	True				
ANR	5334324	RelationalExpression	execfd < 0		5333603	0		<			
ANR	5334325	Identifier	execfd		5333603	0					
ANR	5334326	PrimaryExpression	0		5333603	1					
ANR	5334327	CompoundStatement		411:24:5619:5619	5333603	1					
ANR	5334328	ExpressionStatement	"printf ( ""Error while loading %s: %s\\n"" , filename , strerror ( errno ) )"	415:12:5681:5746	5333603	0	True				
ANR	5334329	CallExpression	"printf ( ""Error while loading %s: %s\\n"" , filename , strerror ( errno ) )"		5333603	0					
ANR	5334330	Callee	printf		5333603	0					
ANR	5334331	Identifier	printf		5333603	0					
ANR	5334332	ArgumentList	"""Error while loading %s: %s\\n"""		5333603	1					
ANR	5334333	Argument	"""Error while loading %s: %s\\n"""		5333603	0					
ANR	5334334	PrimaryExpression	"""Error while loading %s: %s\\n"""		5333603	0					
ANR	5334335	Argument	filename		5333603	1					
ANR	5334336	Identifier	filename		5333603	0					
ANR	5334337	Argument	strerror ( errno )		5333603	2					
ANR	5334338	CallExpression	strerror ( errno )		5333603	0					
ANR	5334339	Callee	strerror		5333603	0					
ANR	5334340	Identifier	strerror		5333603	0					
ANR	5334341	ArgumentList	errno		5333603	1					
ANR	5334342	Argument	errno		5333603	0					
ANR	5334343	Identifier	errno		5333603	0					
ANR	5334344	ExpressionStatement	_exit ( EXIT_FAILURE )	417:12:5761:5780	5333603	1	True				
ANR	5334345	CallExpression	_exit ( EXIT_FAILURE )		5333603	0					
ANR	5334346	Callee	_exit		5333603	0					
ANR	5334347	Identifier	_exit		5333603	0					
ANR	5334348	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5334349	Argument	EXIT_FAILURE		5333603	0					
ANR	5334350	Identifier	EXIT_FAILURE		5333603	0					
ANR	5334351	ExpressionStatement	"ret = loader_exec ( execfd , filename , target_argv , target_environ , regs , info , & bprm )"	425:4:5807:5899	5333603	59	True				
ANR	5334352	AssignmentExpression	"ret = loader_exec ( execfd , filename , target_argv , target_environ , regs , info , & bprm )"		5333603	0		=			
ANR	5334353	Identifier	ret		5333603	0					
ANR	5334354	CallExpression	"loader_exec ( execfd , filename , target_argv , target_environ , regs , info , & bprm )"		5333603	1					
ANR	5334355	Callee	loader_exec		5333603	0					
ANR	5334356	Identifier	loader_exec		5333603	0					
ANR	5334357	ArgumentList	execfd		5333603	1					
ANR	5334358	Argument	execfd		5333603	0					
ANR	5334359	Identifier	execfd		5333603	0					
ANR	5334360	Argument	filename		5333603	1					
ANR	5334361	Identifier	filename		5333603	0					
ANR	5334362	Argument	target_argv		5333603	2					
ANR	5334363	Identifier	target_argv		5333603	0					
ANR	5334364	Argument	target_environ		5333603	3					
ANR	5334365	Identifier	target_environ		5333603	0					
ANR	5334366	Argument	regs		5333603	4					
ANR	5334367	Identifier	regs		5333603	0					
ANR	5334368	Argument	info		5333603	5					
ANR	5334369	Identifier	info		5333603	0					
ANR	5334370	Argument	& bprm		5333603	6					
ANR	5334371	UnaryOperationExpression	& bprm		5333603	0					
ANR	5334372	UnaryOperator	&		5333603	0					
ANR	5334373	Identifier	bprm		5333603	1					
ANR	5334374	IfStatement	if ( ret != 0 )		5333603	60					
ANR	5334375	Condition	ret != 0	429:8:5910:5917	5333603	0	True				
ANR	5334376	EqualityExpression	ret != 0		5333603	0		!=			
ANR	5334377	Identifier	ret		5333603	0					
ANR	5334378	PrimaryExpression	0		5333603	1					
ANR	5334379	CompoundStatement		427:18:5873:5873	5333603	1					
ANR	5334380	ExpressionStatement	"printf ( ""Error while loading %s: %s\\n"" , filename , strerror ( - ret ) )"	431:8:5931:5995	5333603	0	True				
ANR	5334381	CallExpression	"printf ( ""Error while loading %s: %s\\n"" , filename , strerror ( - ret ) )"		5333603	0					
ANR	5334382	Callee	printf		5333603	0					
ANR	5334383	Identifier	printf		5333603	0					
ANR	5334384	ArgumentList	"""Error while loading %s: %s\\n"""		5333603	1					
ANR	5334385	Argument	"""Error while loading %s: %s\\n"""		5333603	0					
ANR	5334386	PrimaryExpression	"""Error while loading %s: %s\\n"""		5333603	0					
ANR	5334387	Argument	filename		5333603	1					
ANR	5334388	Identifier	filename		5333603	0					
ANR	5334389	Argument	strerror ( - ret )		5333603	2					
ANR	5334390	CallExpression	strerror ( - ret )		5333603	0					
ANR	5334391	Callee	strerror		5333603	0					
ANR	5334392	Identifier	strerror		5333603	0					
ANR	5334393	ArgumentList	- ret		5333603	1					
ANR	5334394	Argument	- ret		5333603	0					
ANR	5334395	UnaryOperationExpression	- ret		5333603	0					
ANR	5334396	UnaryOperator	-		5333603	0					
ANR	5334397	Identifier	ret		5333603	1					
ANR	5334398	ExpressionStatement	_exit ( EXIT_FAILURE )	433:8:6006:6025	5333603	1	True				
ANR	5334399	CallExpression	_exit ( EXIT_FAILURE )		5333603	0					
ANR	5334400	Callee	_exit		5333603	0					
ANR	5334401	Identifier	_exit		5333603	0					
ANR	5334402	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5334403	Argument	EXIT_FAILURE		5333603	0					
ANR	5334404	Identifier	EXIT_FAILURE		5333603	0					
ANR	5334405	ForStatement	for ( wrk = target_environ ; * wrk ; wrk ++ )		5333603	61					
ANR	5334406	ForInit	wrk = target_environ ;	439:9:6046:6066	5333603	0	True				
ANR	5334407	AssignmentExpression	wrk = target_environ		5333603	0		=			
ANR	5334408	Identifier	wrk		5333603	0					
ANR	5334409	Identifier	target_environ		5333603	1					
ANR	5334410	Condition	* wrk	439:31:6068:6071	5333603	1	True				
ANR	5334411	UnaryOperationExpression	* wrk		5333603	0					
ANR	5334412	UnaryOperator	*		5333603	0					
ANR	5334413	Identifier	wrk		5333603	1					
ANR	5334414	PostIncDecOperationExpression	wrk ++	439:37:6074:6078	5333603	2	True				
ANR	5334415	Identifier	wrk		5333603	0					
ANR	5334416	IncDec	++		5333603	1					
ANR	5334417	CompoundStatement		437:44:6034:6034	5333603	3					
ANR	5334418	ExpressionStatement	free ( * wrk )	441:8:6092:6102	5333603	0	True				
ANR	5334419	CallExpression	free ( * wrk )		5333603	0					
ANR	5334420	Callee	free		5333603	0					
ANR	5334421	Identifier	free		5333603	0					
ANR	5334422	ArgumentList	* wrk		5333603	1					
ANR	5334423	Argument	* wrk		5333603	0					
ANR	5334424	UnaryOperationExpression	* wrk		5333603	0					
ANR	5334425	UnaryOperator	*		5333603	0					
ANR	5334426	Identifier	wrk		5333603	1					
ANR	5334427	ExpressionStatement	free ( target_environ )	447:4:6118:6138	5333603	62	True				
ANR	5334428	CallExpression	free ( target_environ )		5333603	0					
ANR	5334429	Callee	free		5333603	0					
ANR	5334430	Identifier	free		5333603	0					
ANR	5334431	ArgumentList	target_environ		5333603	1					
ANR	5334432	Argument	target_environ		5333603	0					
ANR	5334433	Identifier	target_environ		5333603	0					
ANR	5334434	IfStatement	if ( qemu_loglevel_mask ( CPU_LOG_PAGE ) )		5333603	63					
ANR	5334435	Condition	qemu_loglevel_mask ( CPU_LOG_PAGE )	451:8:6151:6182	5333603	0	True				
ANR	5334436	CallExpression	qemu_loglevel_mask ( CPU_LOG_PAGE )		5333603	0					
ANR	5334437	Callee	qemu_loglevel_mask		5333603	0					
ANR	5334438	Identifier	qemu_loglevel_mask		5333603	0					
ANR	5334439	ArgumentList	CPU_LOG_PAGE		5333603	1					
ANR	5334440	Argument	CPU_LOG_PAGE		5333603	0					
ANR	5334441	Identifier	CPU_LOG_PAGE		5333603	0					
ANR	5334442	CompoundStatement		449:42:6138:6138	5333603	1					
ANR	5334443	ExpressionStatement	"qemu_log ( ""guest_base  0x%lx\\n"" , guest_base )"	453:8:6196:6239	5333603	0	True				
ANR	5334444	CallExpression	"qemu_log ( ""guest_base  0x%lx\\n"" , guest_base )"		5333603	0					
ANR	5334445	Callee	qemu_log		5333603	0					
ANR	5334446	Identifier	qemu_log		5333603	0					
ANR	5334447	ArgumentList	"""guest_base  0x%lx\\n"""		5333603	1					
ANR	5334448	Argument	"""guest_base  0x%lx\\n"""		5333603	0					
ANR	5334449	PrimaryExpression	"""guest_base  0x%lx\\n"""		5333603	0					
ANR	5334450	Argument	guest_base		5333603	1					
ANR	5334451	Identifier	guest_base		5333603	0					
ANR	5334452	ExpressionStatement	log_page_dump ( )	455:8:6250:6265	5333603	1	True				
ANR	5334453	CallExpression	log_page_dump ( )		5333603	0					
ANR	5334454	Callee	log_page_dump		5333603	0					
ANR	5334455	Identifier	log_page_dump		5333603	0					
ANR	5334456	ArgumentList			5333603	1					
ANR	5334457	Statement	qemu_log	459:8:6278:6285	5333603	2	True				
ANR	5334458	Statement	(	459:16:6286:6286	5333603	3	True				
ANR	5334459	Statement	"""start_brk   0x"""	459:17:6287:6302	5333603	4	True				
ANR	5334460	Statement	TARGET_ABI_FMT_lx	459:34:6304:6320	5333603	5	True				
ANR	5334461	Statement	"""\\n"""	459:52:6322:6325	5333603	6	True				
ANR	5334462	Statement	","	459:56:6326:6326	5333603	7	True				
ANR	5334463	Statement	info	459:58:6328:6331	5333603	8	True				
ANR	5334464	Statement	->	459:62:6332:6333	5333603	9	True				
ANR	5334465	Statement	start_brk	459:64:6334:6342	5333603	10	True				
ANR	5334466	Statement	)	459:73:6343:6343	5333603	11	True				
ANR	5334467	ExpressionStatement		459:74:6344:6344	5333603	12	True				
ANR	5334468	Statement	qemu_log	461:8:6355:6362	5333603	13	True				
ANR	5334469	Statement	(	461:16:6363:6363	5333603	14	True				
ANR	5334470	Statement	"""end_code    0x"""	461:17:6364:6379	5333603	15	True				
ANR	5334471	Statement	TARGET_ABI_FMT_lx	461:34:6381:6397	5333603	16	True				
ANR	5334472	Statement	"""\\n"""	461:52:6399:6402	5333603	17	True				
ANR	5334473	Statement	","	461:56:6403:6403	5333603	18	True				
ANR	5334474	Statement	info	461:58:6405:6408	5333603	19	True				
ANR	5334475	Statement	->	461:62:6409:6410	5333603	20	True				
ANR	5334476	Statement	end_code	461:64:6411:6418	5333603	21	True				
ANR	5334477	Statement	)	461:72:6419:6419	5333603	22	True				
ANR	5334478	ExpressionStatement		461:73:6420:6420	5333603	23	True				
ANR	5334479	Statement	qemu_log	463:8:6431:6438	5333603	24	True				
ANR	5334480	Statement	(	463:16:6439:6439	5333603	25	True				
ANR	5334481	Statement	"""start_code  0x"""	463:17:6440:6455	5333603	26	True				
ANR	5334482	Statement	TARGET_ABI_FMT_lx	463:34:6457:6473	5333603	27	True				
ANR	5334483	Statement	"""\\n"""	463:52:6475:6478	5333603	28	True				
ANR	5334484	Statement	","	463:56:6479:6479	5333603	29	True				
ANR	5334485	Statement	info	463:58:6481:6484	5333603	30	True				
ANR	5334486	Statement	->	463:62:6485:6486	5333603	31	True				
ANR	5334487	Statement	start_code	463:64:6487:6496	5333603	32	True				
ANR	5334488	Statement	)	463:74:6497:6497	5333603	33	True				
ANR	5334489	ExpressionStatement		463:75:6498:6498	5333603	34	True				
ANR	5334490	Statement	qemu_log	465:8:6509:6516	5333603	35	True				
ANR	5334491	Statement	(	465:16:6517:6517	5333603	36	True				
ANR	5334492	Statement	"""start_data  0x"""	465:17:6518:6533	5333603	37	True				
ANR	5334493	Statement	TARGET_ABI_FMT_lx	465:34:6535:6551	5333603	38	True				
ANR	5334494	Statement	"""\\n"""	465:52:6553:6556	5333603	39	True				
ANR	5334495	Statement	","	465:56:6557:6557	5333603	40	True				
ANR	5334496	Statement	info	465:58:6559:6562	5333603	41	True				
ANR	5334497	Statement	->	465:62:6563:6564	5333603	42	True				
ANR	5334498	Statement	start_data	465:64:6565:6574	5333603	43	True				
ANR	5334499	Statement	)	465:74:6575:6575	5333603	44	True				
ANR	5334500	ExpressionStatement		465:75:6576:6576	5333603	45	True				
ANR	5334501	Statement	qemu_log	467:8:6587:6594	5333603	46	True				
ANR	5334502	Statement	(	467:16:6595:6595	5333603	47	True				
ANR	5334503	Statement	"""end_data    0x"""	467:17:6596:6611	5333603	48	True				
ANR	5334504	Statement	TARGET_ABI_FMT_lx	467:34:6613:6629	5333603	49	True				
ANR	5334505	Statement	"""\\n"""	467:52:6631:6634	5333603	50	True				
ANR	5334506	Statement	","	467:56:6635:6635	5333603	51	True				
ANR	5334507	Statement	info	467:58:6637:6640	5333603	52	True				
ANR	5334508	Statement	->	467:62:6641:6642	5333603	53	True				
ANR	5334509	Statement	end_data	467:64:6643:6650	5333603	54	True				
ANR	5334510	Statement	)	467:72:6651:6651	5333603	55	True				
ANR	5334511	ExpressionStatement		467:73:6652:6652	5333603	56	True				
ANR	5334512	Statement	qemu_log	469:8:6663:6670	5333603	57	True				
ANR	5334513	Statement	(	469:16:6671:6671	5333603	58	True				
ANR	5334514	Statement	"""start_stack 0x"""	469:17:6672:6687	5333603	59	True				
ANR	5334515	Statement	TARGET_ABI_FMT_lx	469:34:6689:6705	5333603	60	True				
ANR	5334516	Statement	"""\\n"""	469:52:6707:6710	5333603	61	True				
ANR	5334517	Statement	","	469:56:6711:6711	5333603	62	True				
ANR	5334518	Statement	info	469:58:6713:6716	5333603	63	True				
ANR	5334519	Statement	->	469:62:6717:6718	5333603	64	True				
ANR	5334520	Statement	start_stack	469:64:6719:6729	5333603	65	True				
ANR	5334521	Statement	)	469:75:6730:6730	5333603	66	True				
ANR	5334522	ExpressionStatement		469:76:6731:6731	5333603	67	True				
ANR	5334523	Statement	qemu_log	471:8:6742:6749	5333603	68	True				
ANR	5334524	Statement	(	471:16:6750:6750	5333603	69	True				
ANR	5334525	Statement	"""brk         0x"""	471:17:6751:6766	5333603	70	True				
ANR	5334526	Statement	TARGET_ABI_FMT_lx	471:34:6768:6784	5333603	71	True				
ANR	5334527	Statement	"""\\n"""	471:52:6786:6789	5333603	72	True				
ANR	5334528	Statement	","	471:56:6790:6790	5333603	73	True				
ANR	5334529	Statement	info	471:58:6792:6795	5333603	74	True				
ANR	5334530	Statement	->	471:62:6796:6797	5333603	75	True				
ANR	5334531	Statement	brk	471:64:6798:6800	5333603	76	True				
ANR	5334532	Statement	)	471:67:6801:6801	5333603	77	True				
ANR	5334533	ExpressionStatement		471:68:6802:6802	5333603	78	True				
ANR	5334534	Statement	qemu_log	473:8:6813:6820	5333603	79	True				
ANR	5334535	Statement	(	473:16:6821:6821	5333603	80	True				
ANR	5334536	Statement	"""entry       0x"""	473:17:6822:6837	5333603	81	True				
ANR	5334537	Statement	TARGET_ABI_FMT_lx	473:34:6839:6855	5333603	82	True				
ANR	5334538	Statement	"""\\n"""	473:52:6857:6860	5333603	83	True				
ANR	5334539	Statement	","	473:56:6861:6861	5333603	84	True				
ANR	5334540	Statement	info	473:58:6863:6866	5333603	85	True				
ANR	5334541	Statement	->	473:62:6867:6868	5333603	86	True				
ANR	5334542	Statement	entry	473:64:6869:6873	5333603	87	True				
ANR	5334543	Statement	)	473:69:6874:6874	5333603	88	True				
ANR	5334544	ExpressionStatement		473:70:6875:6875	5333603	89	True				
ANR	5334545	Statement	qemu_log	475:8:6886:6893	5333603	90	True				
ANR	5334546	Statement	(	475:16:6894:6894	5333603	91	True				
ANR	5334547	Statement	"""argv_start  0x"""	475:17:6895:6910	5333603	92	True				
ANR	5334548	Statement	TARGET_ABI_FMT_lx	475:34:6912:6928	5333603	93	True				
ANR	5334549	Statement	"""\\n"""	475:52:6930:6933	5333603	94	True				
ANR	5334550	Statement	","	475:56:6934:6934	5333603	95	True				
ANR	5334551	Statement	info	475:58:6936:6939	5333603	96	True				
ANR	5334552	Statement	->	475:62:6940:6941	5333603	97	True				
ANR	5334553	Statement	arg_start	475:64:6942:6950	5333603	98	True				
ANR	5334554	Statement	)	475:73:6951:6951	5333603	99	True				
ANR	5334555	ExpressionStatement		475:74:6952:6952	5333603	100	True				
ANR	5334556	Statement	qemu_log	477:8:6963:6970	5333603	101	True				
ANR	5334557	Statement	(	477:16:6971:6971	5333603	102	True				
ANR	5334558	Statement	"""env_start   0x"""	477:17:6972:6987	5333603	103	True				
ANR	5334559	Statement	TARGET_ABI_FMT_lx	477:34:6989:7005	5333603	104	True				
ANR	5334560	Statement	"""\\n"""	477:52:7007:7010	5333603	105	True				
ANR	5334561	Statement	","	477:56:7011:7011	5333603	106	True				
ANR	5334562	Statement	info	479:17:7031:7034	5333603	107	True				
ANR	5334563	Statement	->	479:21:7035:7036	5333603	108	True				
ANR	5334564	Statement	arg_end	479:23:7037:7043	5333603	109	True				
ANR	5334565	Statement	+	479:31:7045:7045	5333603	110	True				
ANR	5334566	Statement	(	479:33:7047:7047	5333603	111	True				
ANR	5334567	Statement	abi_ulong	479:34:7048:7056	5333603	112	True				
ANR	5334568	Statement	)	479:43:7057:7057	5333603	113	True				
ANR	5334569	Statement	sizeof	479:44:7058:7063	5333603	114	True				
ANR	5334570	Statement	(	479:50:7064:7064	5333603	115	True				
ANR	5334571	Statement	abi_ulong	479:51:7065:7073	5333603	116	True				
ANR	5334572	Statement	)	479:60:7074:7074	5333603	117	True				
ANR	5334573	Statement	)	479:61:7075:7075	5333603	118	True				
ANR	5334574	ExpressionStatement		479:62:7076:7076	5333603	119	True				
ANR	5334575	Statement	qemu_log	481:8:7087:7094	5333603	120	True				
ANR	5334576	Statement	(	481:16:7095:7095	5333603	121	True				
ANR	5334577	Statement	"""auxv_start  0x"""	481:17:7096:7111	5333603	122	True				
ANR	5334578	Statement	TARGET_ABI_FMT_lx	481:34:7113:7129	5333603	123	True				
ANR	5334579	Statement	"""\\n"""	481:52:7131:7134	5333603	124	True				
ANR	5334580	Statement	","	481:56:7135:7135	5333603	125	True				
ANR	5334581	Statement	info	481:58:7137:7140	5333603	126	True				
ANR	5334582	Statement	->	481:62:7141:7142	5333603	127	True				
ANR	5334583	Statement	saved_auxv	481:64:7143:7152	5333603	128	True				
ANR	5334584	Statement	)	481:74:7153:7153	5333603	129	True				
ANR	5334585	ExpressionStatement		481:75:7154:7154	5333603	130	True				
ANR	5334586	ExpressionStatement	target_set_brk ( info -> brk )	487:4:7170:7195	5333603	64	True				
ANR	5334587	CallExpression	target_set_brk ( info -> brk )		5333603	0					
ANR	5334588	Callee	target_set_brk		5333603	0					
ANR	5334589	Identifier	target_set_brk		5333603	0					
ANR	5334590	ArgumentList	info -> brk		5333603	1					
ANR	5334591	Argument	info -> brk		5333603	0					
ANR	5334592	PtrMemberAccess	info -> brk		5333603	0					
ANR	5334593	Identifier	info		5333603	0					
ANR	5334594	Identifier	brk		5333603	1					
ANR	5334595	ExpressionStatement	syscall_init ( )	489:4:7202:7216	5333603	65	True				
ANR	5334596	CallExpression	syscall_init ( )		5333603	0					
ANR	5334597	Callee	syscall_init		5333603	0					
ANR	5334598	Identifier	syscall_init		5333603	0					
ANR	5334599	ArgumentList			5333603	1					
ANR	5334600	ExpressionStatement	signal_init ( )	491:4:7223:7236	5333603	66	True				
ANR	5334601	CallExpression	signal_init ( )		5333603	0					
ANR	5334602	Callee	signal_init		5333603	0					
ANR	5334603	Identifier	signal_init		5333603	0					
ANR	5334604	ArgumentList			5333603	1					
ANR	5334605	ExpressionStatement	tcg_prologue_init ( & tcg_ctx )	501:4:7442:7469	5333603	67	True				
ANR	5334606	CallExpression	tcg_prologue_init ( & tcg_ctx )		5333603	0					
ANR	5334607	Callee	tcg_prologue_init		5333603	0					
ANR	5334608	Identifier	tcg_prologue_init		5333603	0					
ANR	5334609	ArgumentList	& tcg_ctx		5333603	1					
ANR	5334610	Argument	& tcg_ctx		5333603	0					
ANR	5334611	UnaryOperationExpression	& tcg_ctx		5333603	0					
ANR	5334612	UnaryOperator	&		5333603	0					
ANR	5334613	Identifier	tcg_ctx		5333603	1					
ANR	5334614	ExpressionStatement	env -> cr [ 0 ] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK	507:4:7504:7556	5333603	68	True				
ANR	5334615	AssignmentExpression	env -> cr [ 0 ] = CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK		5333603	0		=			
ANR	5334616	ArrayIndexing	env -> cr [ 0 ]		5333603	0					
ANR	5334617	PtrMemberAccess	env -> cr		5333603	0					
ANR	5334618	Identifier	env		5333603	0					
ANR	5334619	Identifier	cr		5333603	1					
ANR	5334620	PrimaryExpression	0		5333603	1					
ANR	5334621	InclusiveOrExpression	CR0_PG_MASK | CR0_WP_MASK | CR0_PE_MASK		5333603	1		|			
ANR	5334622	Identifier	CR0_PG_MASK		5333603	0					
ANR	5334623	InclusiveOrExpression	CR0_WP_MASK | CR0_PE_MASK		5333603	1		|			
ANR	5334624	Identifier	CR0_WP_MASK		5333603	0					
ANR	5334625	Identifier	CR0_PE_MASK		5333603	1					
ANR	5334626	ExpressionStatement	env -> hflags |= HF_PE_MASK | HF_CPL_MASK	509:4:7563:7602	5333603	69	True				
ANR	5334627	AssignmentExpression	env -> hflags |= HF_PE_MASK | HF_CPL_MASK		5333603	0		|=			
ANR	5334628	PtrMemberAccess	env -> hflags		5333603	0					
ANR	5334629	Identifier	env		5333603	0					
ANR	5334630	Identifier	hflags		5333603	1					
ANR	5334631	InclusiveOrExpression	HF_PE_MASK | HF_CPL_MASK		5333603	1		|			
ANR	5334632	Identifier	HF_PE_MASK		5333603	0					
ANR	5334633	Identifier	HF_CPL_MASK		5333603	1					
ANR	5334634	IfStatement	if ( env -> features [ FEAT_1_EDX ] & CPUID_SSE )		5333603	70					
ANR	5334635	Condition	env -> features [ FEAT_1_EDX ] & CPUID_SSE	511:8:7613:7649	5333603	0	True				
ANR	5334636	BitAndExpression	env -> features [ FEAT_1_EDX ] & CPUID_SSE		5333603	0		&			
ANR	5334637	ArrayIndexing	env -> features [ FEAT_1_EDX ]		5333603	0					
ANR	5334638	PtrMemberAccess	env -> features		5333603	0					
ANR	5334639	Identifier	env		5333603	0					
ANR	5334640	Identifier	features		5333603	1					
ANR	5334641	Identifier	FEAT_1_EDX		5333603	1					
ANR	5334642	Identifier	CPUID_SSE		5333603	1					
ANR	5334643	CompoundStatement		509:47:7605:7605	5333603	1					
ANR	5334644	ExpressionStatement	env -> cr [ 4 ] |= CR4_OSFXSR_MASK	513:8:7663:7692	5333603	0	True				
ANR	5334645	AssignmentExpression	env -> cr [ 4 ] |= CR4_OSFXSR_MASK		5333603	0		|=			
ANR	5334646	ArrayIndexing	env -> cr [ 4 ]		5333603	0					
ANR	5334647	PtrMemberAccess	env -> cr		5333603	0					
ANR	5334648	Identifier	env		5333603	0					
ANR	5334649	Identifier	cr		5333603	1					
ANR	5334650	PrimaryExpression	4		5333603	1					
ANR	5334651	Identifier	CR4_OSFXSR_MASK		5333603	1					
ANR	5334652	ExpressionStatement	env -> hflags |= HF_OSFXSR_MASK	515:8:7703:7732	5333603	1	True				
ANR	5334653	AssignmentExpression	env -> hflags |= HF_OSFXSR_MASK		5333603	0		|=			
ANR	5334654	PtrMemberAccess	env -> hflags		5333603	0					
ANR	5334655	Identifier	env		5333603	0					
ANR	5334656	Identifier	hflags		5333603	1					
ANR	5334657	Identifier	HF_OSFXSR_MASK		5333603	1					
ANR	5334658	IfStatement	if ( ! ( env -> features [ FEAT_8000_0001_EDX ] & CPUID_EXT2_LM ) )		5333603	71					
ANR	5334659	Condition	! ( env -> features [ FEAT_8000_0001_EDX ] & CPUID_EXT2_LM )	523:8:7814:7865	5333603	0	True				
ANR	5334660	UnaryOperationExpression	! ( env -> features [ FEAT_8000_0001_EDX ] & CPUID_EXT2_LM )		5333603	0					
ANR	5334661	UnaryOperator	!		5333603	0					
ANR	5334662	BitAndExpression	env -> features [ FEAT_8000_0001_EDX ] & CPUID_EXT2_LM		5333603	1		&			
ANR	5334663	ArrayIndexing	env -> features [ FEAT_8000_0001_EDX ]		5333603	0					
ANR	5334664	PtrMemberAccess	env -> features		5333603	0					
ANR	5334665	Identifier	env		5333603	0					
ANR	5334666	Identifier	features		5333603	1					
ANR	5334667	Identifier	FEAT_8000_0001_EDX		5333603	1					
ANR	5334668	Identifier	CPUID_EXT2_LM		5333603	1					
ANR	5334669	CompoundStatement		521:62:7821:7821	5333603	1					
ANR	5334670	ExpressionStatement	"fprintf ( stderr , ""The selected x86 CPU does not support 64 bit mode\\n"" )"	525:8:7879:7949	5333603	0	True				
ANR	5334671	CallExpression	"fprintf ( stderr , ""The selected x86 CPU does not support 64 bit mode\\n"" )"		5333603	0					
ANR	5334672	Callee	fprintf		5333603	0					
ANR	5334673	Identifier	fprintf		5333603	0					
ANR	5334674	ArgumentList	stderr		5333603	1					
ANR	5334675	Argument	stderr		5333603	0					
ANR	5334676	Identifier	stderr		5333603	0					
ANR	5334677	Argument	"""The selected x86 CPU does not support 64 bit mode\\n"""		5333603	1					
ANR	5334678	PrimaryExpression	"""The selected x86 CPU does not support 64 bit mode\\n"""		5333603	0					
ANR	5334679	ExpressionStatement	exit ( EXIT_FAILURE )	527:8:7960:7978	5333603	1	True				
ANR	5334680	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5334681	Callee	exit		5333603	0					
ANR	5334682	Identifier	exit		5333603	0					
ANR	5334683	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5334684	Argument	EXIT_FAILURE		5333603	0					
ANR	5334685	Identifier	EXIT_FAILURE		5333603	0					
ANR	5334686	ExpressionStatement	env -> cr [ 4 ] |= CR4_PAE_MASK	531:4:7992:8018	5333603	72	True				
ANR	5334687	AssignmentExpression	env -> cr [ 4 ] |= CR4_PAE_MASK		5333603	0		|=			
ANR	5334688	ArrayIndexing	env -> cr [ 4 ]		5333603	0					
ANR	5334689	PtrMemberAccess	env -> cr		5333603	0					
ANR	5334690	Identifier	env		5333603	0					
ANR	5334691	Identifier	cr		5333603	1					
ANR	5334692	PrimaryExpression	4		5333603	1					
ANR	5334693	Identifier	CR4_PAE_MASK		5333603	1					
ANR	5334694	ExpressionStatement	env -> efer |= MSR_EFER_LMA | MSR_EFER_LME	533:4:8025:8065	5333603	73	True				
ANR	5334695	AssignmentExpression	env -> efer |= MSR_EFER_LMA | MSR_EFER_LME		5333603	0		|=			
ANR	5334696	PtrMemberAccess	env -> efer		5333603	0					
ANR	5334697	Identifier	env		5333603	0					
ANR	5334698	Identifier	efer		5333603	1					
ANR	5334699	InclusiveOrExpression	MSR_EFER_LMA | MSR_EFER_LME		5333603	1		|			
ANR	5334700	Identifier	MSR_EFER_LMA		5333603	0					
ANR	5334701	Identifier	MSR_EFER_LME		5333603	1					
ANR	5334702	ExpressionStatement	env -> hflags |= HF_LMA_MASK	535:4:8072:8098	5333603	74	True				
ANR	5334703	AssignmentExpression	env -> hflags |= HF_LMA_MASK		5333603	0		|=			
ANR	5334704	PtrMemberAccess	env -> hflags		5333603	0					
ANR	5334705	Identifier	env		5333603	0					
ANR	5334706	Identifier	hflags		5333603	1					
ANR	5334707	Identifier	HF_LMA_MASK		5333603	1					
ANR	5334708	ExpressionStatement	env -> eflags |= IF_MASK	543:4:8188:8210	5333603	75	True				
ANR	5334709	AssignmentExpression	env -> eflags |= IF_MASK		5333603	0		|=			
ANR	5334710	PtrMemberAccess	env -> eflags		5333603	0					
ANR	5334711	Identifier	env		5333603	0					
ANR	5334712	Identifier	eflags		5333603	1					
ANR	5334713	Identifier	IF_MASK		5333603	1					
ANR	5334714	ExpressionStatement	env -> regs [ R_EAX ] = regs -> rax	551:4:8273:8301	5333603	76	True				
ANR	5334715	AssignmentExpression	env -> regs [ R_EAX ] = regs -> rax		5333603	0		=			
ANR	5334716	ArrayIndexing	env -> regs [ R_EAX ]		5333603	0					
ANR	5334717	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334718	Identifier	env		5333603	0					
ANR	5334719	Identifier	regs		5333603	1					
ANR	5334720	Identifier	R_EAX		5333603	1					
ANR	5334721	PtrMemberAccess	regs -> rax		5333603	1					
ANR	5334722	Identifier	regs		5333603	0					
ANR	5334723	Identifier	rax		5333603	1					
ANR	5334724	ExpressionStatement	env -> regs [ R_EBX ] = regs -> rbx	553:4:8308:8336	5333603	77	True				
ANR	5334725	AssignmentExpression	env -> regs [ R_EBX ] = regs -> rbx		5333603	0		=			
ANR	5334726	ArrayIndexing	env -> regs [ R_EBX ]		5333603	0					
ANR	5334727	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334728	Identifier	env		5333603	0					
ANR	5334729	Identifier	regs		5333603	1					
ANR	5334730	Identifier	R_EBX		5333603	1					
ANR	5334731	PtrMemberAccess	regs -> rbx		5333603	1					
ANR	5334732	Identifier	regs		5333603	0					
ANR	5334733	Identifier	rbx		5333603	1					
ANR	5334734	ExpressionStatement	env -> regs [ R_ECX ] = regs -> rcx	555:4:8343:8371	5333603	78	True				
ANR	5334735	AssignmentExpression	env -> regs [ R_ECX ] = regs -> rcx		5333603	0		=			
ANR	5334736	ArrayIndexing	env -> regs [ R_ECX ]		5333603	0					
ANR	5334737	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334738	Identifier	env		5333603	0					
ANR	5334739	Identifier	regs		5333603	1					
ANR	5334740	Identifier	R_ECX		5333603	1					
ANR	5334741	PtrMemberAccess	regs -> rcx		5333603	1					
ANR	5334742	Identifier	regs		5333603	0					
ANR	5334743	Identifier	rcx		5333603	1					
ANR	5334744	ExpressionStatement	env -> regs [ R_EDX ] = regs -> rdx	557:4:8378:8406	5333603	79	True				
ANR	5334745	AssignmentExpression	env -> regs [ R_EDX ] = regs -> rdx		5333603	0		=			
ANR	5334746	ArrayIndexing	env -> regs [ R_EDX ]		5333603	0					
ANR	5334747	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334748	Identifier	env		5333603	0					
ANR	5334749	Identifier	regs		5333603	1					
ANR	5334750	Identifier	R_EDX		5333603	1					
ANR	5334751	PtrMemberAccess	regs -> rdx		5333603	1					
ANR	5334752	Identifier	regs		5333603	0					
ANR	5334753	Identifier	rdx		5333603	1					
ANR	5334754	ExpressionStatement	env -> regs [ R_ESI ] = regs -> rsi	559:4:8413:8441	5333603	80	True				
ANR	5334755	AssignmentExpression	env -> regs [ R_ESI ] = regs -> rsi		5333603	0		=			
ANR	5334756	ArrayIndexing	env -> regs [ R_ESI ]		5333603	0					
ANR	5334757	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334758	Identifier	env		5333603	0					
ANR	5334759	Identifier	regs		5333603	1					
ANR	5334760	Identifier	R_ESI		5333603	1					
ANR	5334761	PtrMemberAccess	regs -> rsi		5333603	1					
ANR	5334762	Identifier	regs		5333603	0					
ANR	5334763	Identifier	rsi		5333603	1					
ANR	5334764	ExpressionStatement	env -> regs [ R_EDI ] = regs -> rdi	561:4:8448:8476	5333603	81	True				
ANR	5334765	AssignmentExpression	env -> regs [ R_EDI ] = regs -> rdi		5333603	0		=			
ANR	5334766	ArrayIndexing	env -> regs [ R_EDI ]		5333603	0					
ANR	5334767	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334768	Identifier	env		5333603	0					
ANR	5334769	Identifier	regs		5333603	1					
ANR	5334770	Identifier	R_EDI		5333603	1					
ANR	5334771	PtrMemberAccess	regs -> rdi		5333603	1					
ANR	5334772	Identifier	regs		5333603	0					
ANR	5334773	Identifier	rdi		5333603	1					
ANR	5334774	ExpressionStatement	env -> regs [ R_EBP ] = regs -> rbp	563:4:8483:8511	5333603	82	True				
ANR	5334775	AssignmentExpression	env -> regs [ R_EBP ] = regs -> rbp		5333603	0		=			
ANR	5334776	ArrayIndexing	env -> regs [ R_EBP ]		5333603	0					
ANR	5334777	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334778	Identifier	env		5333603	0					
ANR	5334779	Identifier	regs		5333603	1					
ANR	5334780	Identifier	R_EBP		5333603	1					
ANR	5334781	PtrMemberAccess	regs -> rbp		5333603	1					
ANR	5334782	Identifier	regs		5333603	0					
ANR	5334783	Identifier	rbp		5333603	1					
ANR	5334784	ExpressionStatement	env -> regs [ R_ESP ] = regs -> rsp	565:4:8518:8546	5333603	83	True				
ANR	5334785	AssignmentExpression	env -> regs [ R_ESP ] = regs -> rsp		5333603	0		=			
ANR	5334786	ArrayIndexing	env -> regs [ R_ESP ]		5333603	0					
ANR	5334787	PtrMemberAccess	env -> regs		5333603	0					
ANR	5334788	Identifier	env		5333603	0					
ANR	5334789	Identifier	regs		5333603	1					
ANR	5334790	Identifier	R_ESP		5333603	1					
ANR	5334791	PtrMemberAccess	regs -> rsp		5333603	1					
ANR	5334792	Identifier	regs		5333603	0					
ANR	5334793	Identifier	rsp		5333603	1					
ANR	5334794	ExpressionStatement	env -> eip = regs -> rip	567:4:8553:8573	5333603	84	True				
ANR	5334795	AssignmentExpression	env -> eip = regs -> rip		5333603	0		=			
ANR	5334796	PtrMemberAccess	env -> eip		5333603	0					
ANR	5334797	Identifier	env		5333603	0					
ANR	5334798	Identifier	eip		5333603	1					
ANR	5334799	PtrMemberAccess	regs -> rip		5333603	1					
ANR	5334800	Identifier	regs		5333603	0					
ANR	5334801	Identifier	rip		5333603	1					
ANR	5334802	ExpressionStatement	env -> idt . limit = 511	597:4:8959:8979	5333603	85	True				
ANR	5334803	AssignmentExpression	env -> idt . limit = 511		5333603	0		=			
ANR	5334804	MemberAccess	env -> idt . limit		5333603	0					
ANR	5334805	PtrMemberAccess	env -> idt		5333603	0					
ANR	5334806	Identifier	env		5333603	0					
ANR	5334807	Identifier	idt		5333603	1					
ANR	5334808	Identifier	limit		5333603	1					
ANR	5334809	PrimaryExpression	511		5333603	1					
ANR	5334810	ExpressionStatement	"env -> idt . base = target_mmap ( 0 , sizeof ( uint64_t ) * ( env -> idt . limit + 1 ) , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"	605:4:9028:9221	5333603	86	True				
ANR	5334811	AssignmentExpression	"env -> idt . base = target_mmap ( 0 , sizeof ( uint64_t ) * ( env -> idt . limit + 1 ) , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"		5333603	0		=			
ANR	5334812	MemberAccess	env -> idt . base		5333603	0					
ANR	5334813	PtrMemberAccess	env -> idt		5333603	0					
ANR	5334814	Identifier	env		5333603	0					
ANR	5334815	Identifier	idt		5333603	1					
ANR	5334816	Identifier	base		5333603	1					
ANR	5334817	CallExpression	"target_mmap ( 0 , sizeof ( uint64_t ) * ( env -> idt . limit + 1 ) , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"		5333603	1					
ANR	5334818	Callee	target_mmap		5333603	0					
ANR	5334819	Identifier	target_mmap		5333603	0					
ANR	5334820	ArgumentList	0		5333603	1					
ANR	5334821	Argument	0		5333603	0					
ANR	5334822	PrimaryExpression	0		5333603	0					
ANR	5334823	Argument	sizeof ( uint64_t ) * ( env -> idt . limit + 1 )		5333603	1					
ANR	5334824	MultiplicativeExpression	sizeof ( uint64_t ) * ( env -> idt . limit + 1 )		5333603	0		*			
ANR	5334825	SizeofExpression	sizeof ( uint64_t )		5333603	0					
ANR	5334826	Sizeof	sizeof		5333603	0					
ANR	5334827	SizeofOperand	uint64_t		5333603	1					
ANR	5334828	AdditiveExpression	env -> idt . limit + 1		5333603	1		+			
ANR	5334829	MemberAccess	env -> idt . limit		5333603	0					
ANR	5334830	PtrMemberAccess	env -> idt		5333603	0					
ANR	5334831	Identifier	env		5333603	0					
ANR	5334832	Identifier	idt		5333603	1					
ANR	5334833	Identifier	limit		5333603	1					
ANR	5334834	PrimaryExpression	1		5333603	1					
ANR	5334835	Argument	PROT_READ | PROT_WRITE		5333603	2					
ANR	5334836	InclusiveOrExpression	PROT_READ | PROT_WRITE		5333603	0		|			
ANR	5334837	Identifier	PROT_READ		5333603	0					
ANR	5334838	Identifier	PROT_WRITE		5333603	1					
ANR	5334839	Argument	MAP_ANONYMOUS | MAP_PRIVATE		5333603	3					
ANR	5334840	InclusiveOrExpression	MAP_ANONYMOUS | MAP_PRIVATE		5333603	0		|			
ANR	5334841	Identifier	MAP_ANONYMOUS		5333603	0					
ANR	5334842	Identifier	MAP_PRIVATE		5333603	1					
ANR	5334843	Argument	- 1		5333603	4					
ANR	5334844	UnaryOperationExpression	- 1		5333603	0					
ANR	5334845	UnaryOperator	-		5333603	0					
ANR	5334846	PrimaryExpression	1		5333603	1					
ANR	5334847	Argument	0		5333603	5					
ANR	5334848	PrimaryExpression	0		5333603	0					
ANR	5334849	ExpressionStatement	idt_table = g2h ( env -> idt . base )	611:4:9228:9258	5333603	87	True				
ANR	5334850	AssignmentExpression	idt_table = g2h ( env -> idt . base )		5333603	0		=			
ANR	5334851	Identifier	idt_table		5333603	0					
ANR	5334852	CallExpression	g2h ( env -> idt . base )		5333603	1					
ANR	5334853	Callee	g2h		5333603	0					
ANR	5334854	Identifier	g2h		5333603	0					
ANR	5334855	ArgumentList	env -> idt . base		5333603	1					
ANR	5334856	Argument	env -> idt . base		5333603	0					
ANR	5334857	MemberAccess	env -> idt . base		5333603	0					
ANR	5334858	PtrMemberAccess	env -> idt		5333603	0					
ANR	5334859	Identifier	env		5333603	0					
ANR	5334860	Identifier	idt		5333603	1					
ANR	5334861	Identifier	base		5333603	1					
ANR	5334862	ExpressionStatement	"set_idt ( 0 , 0 )"	613:4:9265:9278	5333603	88	True				
ANR	5334863	CallExpression	"set_idt ( 0 , 0 )"		5333603	0					
ANR	5334864	Callee	set_idt		5333603	0					
ANR	5334865	Identifier	set_idt		5333603	0					
ANR	5334866	ArgumentList	0		5333603	1					
ANR	5334867	Argument	0		5333603	0					
ANR	5334868	PrimaryExpression	0		5333603	0					
ANR	5334869	Argument	0		5333603	1					
ANR	5334870	PrimaryExpression	0		5333603	0					
ANR	5334871	ExpressionStatement	"set_idt ( 1 , 0 )"	615:4:9285:9298	5333603	89	True				
ANR	5334872	CallExpression	"set_idt ( 1 , 0 )"		5333603	0					
ANR	5334873	Callee	set_idt		5333603	0					
ANR	5334874	Identifier	set_idt		5333603	0					
ANR	5334875	ArgumentList	1		5333603	1					
ANR	5334876	Argument	1		5333603	0					
ANR	5334877	PrimaryExpression	1		5333603	0					
ANR	5334878	Argument	0		5333603	1					
ANR	5334879	PrimaryExpression	0		5333603	0					
ANR	5334880	ExpressionStatement	"set_idt ( 2 , 0 )"	617:4:9305:9318	5333603	90	True				
ANR	5334881	CallExpression	"set_idt ( 2 , 0 )"		5333603	0					
ANR	5334882	Callee	set_idt		5333603	0					
ANR	5334883	Identifier	set_idt		5333603	0					
ANR	5334884	ArgumentList	2		5333603	1					
ANR	5334885	Argument	2		5333603	0					
ANR	5334886	PrimaryExpression	2		5333603	0					
ANR	5334887	Argument	0		5333603	1					
ANR	5334888	PrimaryExpression	0		5333603	0					
ANR	5334889	ExpressionStatement	"set_idt ( 3 , 3 )"	619:4:9325:9338	5333603	91	True				
ANR	5334890	CallExpression	"set_idt ( 3 , 3 )"		5333603	0					
ANR	5334891	Callee	set_idt		5333603	0					
ANR	5334892	Identifier	set_idt		5333603	0					
ANR	5334893	ArgumentList	3		5333603	1					
ANR	5334894	Argument	3		5333603	0					
ANR	5334895	PrimaryExpression	3		5333603	0					
ANR	5334896	Argument	3		5333603	1					
ANR	5334897	PrimaryExpression	3		5333603	0					
ANR	5334898	ExpressionStatement	"set_idt ( 4 , 3 )"	621:4:9345:9358	5333603	92	True				
ANR	5334899	CallExpression	"set_idt ( 4 , 3 )"		5333603	0					
ANR	5334900	Callee	set_idt		5333603	0					
ANR	5334901	Identifier	set_idt		5333603	0					
ANR	5334902	ArgumentList	4		5333603	1					
ANR	5334903	Argument	4		5333603	0					
ANR	5334904	PrimaryExpression	4		5333603	0					
ANR	5334905	Argument	3		5333603	1					
ANR	5334906	PrimaryExpression	3		5333603	0					
ANR	5334907	ExpressionStatement	"set_idt ( 5 , 0 )"	623:4:9365:9378	5333603	93	True				
ANR	5334908	CallExpression	"set_idt ( 5 , 0 )"		5333603	0					
ANR	5334909	Callee	set_idt		5333603	0					
ANR	5334910	Identifier	set_idt		5333603	0					
ANR	5334911	ArgumentList	5		5333603	1					
ANR	5334912	Argument	5		5333603	0					
ANR	5334913	PrimaryExpression	5		5333603	0					
ANR	5334914	Argument	0		5333603	1					
ANR	5334915	PrimaryExpression	0		5333603	0					
ANR	5334916	ExpressionStatement	"set_idt ( 6 , 0 )"	625:4:9385:9398	5333603	94	True				
ANR	5334917	CallExpression	"set_idt ( 6 , 0 )"		5333603	0					
ANR	5334918	Callee	set_idt		5333603	0					
ANR	5334919	Identifier	set_idt		5333603	0					
ANR	5334920	ArgumentList	6		5333603	1					
ANR	5334921	Argument	6		5333603	0					
ANR	5334922	PrimaryExpression	6		5333603	0					
ANR	5334923	Argument	0		5333603	1					
ANR	5334924	PrimaryExpression	0		5333603	0					
ANR	5334925	ExpressionStatement	"set_idt ( 7 , 0 )"	627:4:9405:9418	5333603	95	True				
ANR	5334926	CallExpression	"set_idt ( 7 , 0 )"		5333603	0					
ANR	5334927	Callee	set_idt		5333603	0					
ANR	5334928	Identifier	set_idt		5333603	0					
ANR	5334929	ArgumentList	7		5333603	1					
ANR	5334930	Argument	7		5333603	0					
ANR	5334931	PrimaryExpression	7		5333603	0					
ANR	5334932	Argument	0		5333603	1					
ANR	5334933	PrimaryExpression	0		5333603	0					
ANR	5334934	ExpressionStatement	"set_idt ( 8 , 0 )"	629:4:9425:9438	5333603	96	True				
ANR	5334935	CallExpression	"set_idt ( 8 , 0 )"		5333603	0					
ANR	5334936	Callee	set_idt		5333603	0					
ANR	5334937	Identifier	set_idt		5333603	0					
ANR	5334938	ArgumentList	8		5333603	1					
ANR	5334939	Argument	8		5333603	0					
ANR	5334940	PrimaryExpression	8		5333603	0					
ANR	5334941	Argument	0		5333603	1					
ANR	5334942	PrimaryExpression	0		5333603	0					
ANR	5334943	ExpressionStatement	"set_idt ( 9 , 0 )"	631:4:9445:9458	5333603	97	True				
ANR	5334944	CallExpression	"set_idt ( 9 , 0 )"		5333603	0					
ANR	5334945	Callee	set_idt		5333603	0					
ANR	5334946	Identifier	set_idt		5333603	0					
ANR	5334947	ArgumentList	9		5333603	1					
ANR	5334948	Argument	9		5333603	0					
ANR	5334949	PrimaryExpression	9		5333603	0					
ANR	5334950	Argument	0		5333603	1					
ANR	5334951	PrimaryExpression	0		5333603	0					
ANR	5334952	ExpressionStatement	"set_idt ( 10 , 0 )"	633:4:9465:9479	5333603	98	True				
ANR	5334953	CallExpression	"set_idt ( 10 , 0 )"		5333603	0					
ANR	5334954	Callee	set_idt		5333603	0					
ANR	5334955	Identifier	set_idt		5333603	0					
ANR	5334956	ArgumentList	10		5333603	1					
ANR	5334957	Argument	10		5333603	0					
ANR	5334958	PrimaryExpression	10		5333603	0					
ANR	5334959	Argument	0		5333603	1					
ANR	5334960	PrimaryExpression	0		5333603	0					
ANR	5334961	ExpressionStatement	"set_idt ( 11 , 0 )"	635:4:9486:9500	5333603	99	True				
ANR	5334962	CallExpression	"set_idt ( 11 , 0 )"		5333603	0					
ANR	5334963	Callee	set_idt		5333603	0					
ANR	5334964	Identifier	set_idt		5333603	0					
ANR	5334965	ArgumentList	11		5333603	1					
ANR	5334966	Argument	11		5333603	0					
ANR	5334967	PrimaryExpression	11		5333603	0					
ANR	5334968	Argument	0		5333603	1					
ANR	5334969	PrimaryExpression	0		5333603	0					
ANR	5334970	ExpressionStatement	"set_idt ( 12 , 0 )"	637:4:9507:9521	5333603	100	True				
ANR	5334971	CallExpression	"set_idt ( 12 , 0 )"		5333603	0					
ANR	5334972	Callee	set_idt		5333603	0					
ANR	5334973	Identifier	set_idt		5333603	0					
ANR	5334974	ArgumentList	12		5333603	1					
ANR	5334975	Argument	12		5333603	0					
ANR	5334976	PrimaryExpression	12		5333603	0					
ANR	5334977	Argument	0		5333603	1					
ANR	5334978	PrimaryExpression	0		5333603	0					
ANR	5334979	ExpressionStatement	"set_idt ( 13 , 0 )"	639:4:9528:9542	5333603	101	True				
ANR	5334980	CallExpression	"set_idt ( 13 , 0 )"		5333603	0					
ANR	5334981	Callee	set_idt		5333603	0					
ANR	5334982	Identifier	set_idt		5333603	0					
ANR	5334983	ArgumentList	13		5333603	1					
ANR	5334984	Argument	13		5333603	0					
ANR	5334985	PrimaryExpression	13		5333603	0					
ANR	5334986	Argument	0		5333603	1					
ANR	5334987	PrimaryExpression	0		5333603	0					
ANR	5334988	ExpressionStatement	"set_idt ( 14 , 0 )"	641:4:9549:9563	5333603	102	True				
ANR	5334989	CallExpression	"set_idt ( 14 , 0 )"		5333603	0					
ANR	5334990	Callee	set_idt		5333603	0					
ANR	5334991	Identifier	set_idt		5333603	0					
ANR	5334992	ArgumentList	14		5333603	1					
ANR	5334993	Argument	14		5333603	0					
ANR	5334994	PrimaryExpression	14		5333603	0					
ANR	5334995	Argument	0		5333603	1					
ANR	5334996	PrimaryExpression	0		5333603	0					
ANR	5334997	ExpressionStatement	"set_idt ( 15 , 0 )"	643:4:9570:9584	5333603	103	True				
ANR	5334998	CallExpression	"set_idt ( 15 , 0 )"		5333603	0					
ANR	5334999	Callee	set_idt		5333603	0					
ANR	5335000	Identifier	set_idt		5333603	0					
ANR	5335001	ArgumentList	15		5333603	1					
ANR	5335002	Argument	15		5333603	0					
ANR	5335003	PrimaryExpression	15		5333603	0					
ANR	5335004	Argument	0		5333603	1					
ANR	5335005	PrimaryExpression	0		5333603	0					
ANR	5335006	ExpressionStatement	"set_idt ( 16 , 0 )"	645:4:9591:9605	5333603	104	True				
ANR	5335007	CallExpression	"set_idt ( 16 , 0 )"		5333603	0					
ANR	5335008	Callee	set_idt		5333603	0					
ANR	5335009	Identifier	set_idt		5333603	0					
ANR	5335010	ArgumentList	16		5333603	1					
ANR	5335011	Argument	16		5333603	0					
ANR	5335012	PrimaryExpression	16		5333603	0					
ANR	5335013	Argument	0		5333603	1					
ANR	5335014	PrimaryExpression	0		5333603	0					
ANR	5335015	ExpressionStatement	"set_idt ( 17 , 0 )"	647:4:9612:9626	5333603	105	True				
ANR	5335016	CallExpression	"set_idt ( 17 , 0 )"		5333603	0					
ANR	5335017	Callee	set_idt		5333603	0					
ANR	5335018	Identifier	set_idt		5333603	0					
ANR	5335019	ArgumentList	17		5333603	1					
ANR	5335020	Argument	17		5333603	0					
ANR	5335021	PrimaryExpression	17		5333603	0					
ANR	5335022	Argument	0		5333603	1					
ANR	5335023	PrimaryExpression	0		5333603	0					
ANR	5335024	ExpressionStatement	"set_idt ( 18 , 0 )"	649:4:9633:9647	5333603	106	True				
ANR	5335025	CallExpression	"set_idt ( 18 , 0 )"		5333603	0					
ANR	5335026	Callee	set_idt		5333603	0					
ANR	5335027	Identifier	set_idt		5333603	0					
ANR	5335028	ArgumentList	18		5333603	1					
ANR	5335029	Argument	18		5333603	0					
ANR	5335030	PrimaryExpression	18		5333603	0					
ANR	5335031	Argument	0		5333603	1					
ANR	5335032	PrimaryExpression	0		5333603	0					
ANR	5335033	ExpressionStatement	"set_idt ( 19 , 0 )"	651:4:9654:9668	5333603	107	True				
ANR	5335034	CallExpression	"set_idt ( 19 , 0 )"		5333603	0					
ANR	5335035	Callee	set_idt		5333603	0					
ANR	5335036	Identifier	set_idt		5333603	0					
ANR	5335037	ArgumentList	19		5333603	1					
ANR	5335038	Argument	19		5333603	0					
ANR	5335039	PrimaryExpression	19		5333603	0					
ANR	5335040	Argument	0		5333603	1					
ANR	5335041	PrimaryExpression	0		5333603	0					
ANR	5335042	ExpressionStatement	"set_idt ( 0x80 , 3 )"	653:4:9675:9691	5333603	108	True				
ANR	5335043	CallExpression	"set_idt ( 0x80 , 3 )"		5333603	0					
ANR	5335044	Callee	set_idt		5333603	0					
ANR	5335045	Identifier	set_idt		5333603	0					
ANR	5335046	ArgumentList	0x80		5333603	1					
ANR	5335047	Argument	0x80		5333603	0					
ANR	5335048	PrimaryExpression	0x80		5333603	0					
ANR	5335049	Argument	3		5333603	1					
ANR	5335050	PrimaryExpression	3		5333603	0					
ANR	5335051	CompoundStatement		659:8:9695:9714	5333603	109					
ANR	5335052	IdentifierDeclStatement	uint64_t * gdt_table ;	661:8:9742:9761	5333603	0	True				
ANR	5335053	IdentifierDecl	* gdt_table		5333603	0					
ANR	5335054	IdentifierDeclType	uint64_t *		5333603	0					
ANR	5335055	Identifier	gdt_table		5333603	1					
ANR	5335056	ExpressionStatement	"env -> gdt . base = target_mmap ( 0 , sizeof ( uint64_t ) * TARGET_GDT_ENTRIES , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"	663:8:9772:9971	5333603	1	True				
ANR	5335057	AssignmentExpression	"env -> gdt . base = target_mmap ( 0 , sizeof ( uint64_t ) * TARGET_GDT_ENTRIES , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"		5333603	0		=			
ANR	5335058	MemberAccess	env -> gdt . base		5333603	0					
ANR	5335059	PtrMemberAccess	env -> gdt		5333603	0					
ANR	5335060	Identifier	env		5333603	0					
ANR	5335061	Identifier	gdt		5333603	1					
ANR	5335062	Identifier	base		5333603	1					
ANR	5335063	CallExpression	"target_mmap ( 0 , sizeof ( uint64_t ) * TARGET_GDT_ENTRIES , PROT_READ | PROT_WRITE , MAP_ANONYMOUS | MAP_PRIVATE , - 1 , 0 )"		5333603	1					
ANR	5335064	Callee	target_mmap		5333603	0					
ANR	5335065	Identifier	target_mmap		5333603	0					
ANR	5335066	ArgumentList	0		5333603	1					
ANR	5335067	Argument	0		5333603	0					
ANR	5335068	PrimaryExpression	0		5333603	0					
ANR	5335069	Argument	sizeof ( uint64_t ) * TARGET_GDT_ENTRIES		5333603	1					
ANR	5335070	MultiplicativeExpression	sizeof ( uint64_t ) * TARGET_GDT_ENTRIES		5333603	0		*			
ANR	5335071	SizeofExpression	sizeof ( uint64_t )		5333603	0					
ANR	5335072	Sizeof	sizeof		5333603	0					
ANR	5335073	SizeofOperand	uint64_t		5333603	1					
ANR	5335074	Identifier	TARGET_GDT_ENTRIES		5333603	1					
ANR	5335075	Argument	PROT_READ | PROT_WRITE		5333603	2					
ANR	5335076	InclusiveOrExpression	PROT_READ | PROT_WRITE		5333603	0		|			
ANR	5335077	Identifier	PROT_READ		5333603	0					
ANR	5335078	Identifier	PROT_WRITE		5333603	1					
ANR	5335079	Argument	MAP_ANONYMOUS | MAP_PRIVATE		5333603	3					
ANR	5335080	InclusiveOrExpression	MAP_ANONYMOUS | MAP_PRIVATE		5333603	0		|			
ANR	5335081	Identifier	MAP_ANONYMOUS		5333603	0					
ANR	5335082	Identifier	MAP_PRIVATE		5333603	1					
ANR	5335083	Argument	- 1		5333603	4					
ANR	5335084	UnaryOperationExpression	- 1		5333603	0					
ANR	5335085	UnaryOperator	-		5333603	0					
ANR	5335086	PrimaryExpression	1		5333603	1					
ANR	5335087	Argument	0		5333603	5					
ANR	5335088	PrimaryExpression	0		5333603	0					
ANR	5335089	ExpressionStatement	env -> gdt . limit = sizeof ( uint64_t ) * TARGET_GDT_ENTRIES - 1	669:8:9982:10040	5333603	2	True				
ANR	5335090	AssignmentExpression	env -> gdt . limit = sizeof ( uint64_t ) * TARGET_GDT_ENTRIES - 1		5333603	0		=			
ANR	5335091	MemberAccess	env -> gdt . limit		5333603	0					
ANR	5335092	PtrMemberAccess	env -> gdt		5333603	0					
ANR	5335093	Identifier	env		5333603	0					
ANR	5335094	Identifier	gdt		5333603	1					
ANR	5335095	Identifier	limit		5333603	1					
ANR	5335096	AdditiveExpression	sizeof ( uint64_t ) * TARGET_GDT_ENTRIES - 1		5333603	1		-			
ANR	5335097	MultiplicativeExpression	sizeof ( uint64_t ) * TARGET_GDT_ENTRIES		5333603	0		*			
ANR	5335098	SizeofExpression	sizeof ( uint64_t )		5333603	0					
ANR	5335099	Sizeof	sizeof		5333603	0					
ANR	5335100	SizeofOperand	uint64_t		5333603	1					
ANR	5335101	Identifier	TARGET_GDT_ENTRIES		5333603	1					
ANR	5335102	PrimaryExpression	1		5333603	1					
ANR	5335103	ExpressionStatement	gdt_table = g2h ( env -> gdt . base )	671:8:10051:10081	5333603	3	True				
ANR	5335104	AssignmentExpression	gdt_table = g2h ( env -> gdt . base )		5333603	0		=			
ANR	5335105	Identifier	gdt_table		5333603	0					
ANR	5335106	CallExpression	g2h ( env -> gdt . base )		5333603	1					
ANR	5335107	Callee	g2h		5333603	0					
ANR	5335108	Identifier	g2h		5333603	0					
ANR	5335109	ArgumentList	env -> gdt . base		5333603	1					
ANR	5335110	Argument	env -> gdt . base		5333603	0					
ANR	5335111	MemberAccess	env -> gdt . base		5333603	0					
ANR	5335112	PtrMemberAccess	env -> gdt		5333603	0					
ANR	5335113	Identifier	env		5333603	0					
ANR	5335114	Identifier	gdt		5333603	1					
ANR	5335115	Identifier	base		5333603	1					
ANR	5335116	ExpressionStatement	"write_dt ( & gdt_table [ __USER_CS >> 3 ] , 0 , 0xfffff , DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT ) )"	675:8:10113:10303	5333603	4	True				
ANR	5335117	CallExpression	"write_dt ( & gdt_table [ __USER_CS >> 3 ] , 0 , 0xfffff , DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT ) )"		5333603	0					
ANR	5335118	Callee	write_dt		5333603	0					
ANR	5335119	Identifier	write_dt		5333603	0					
ANR	5335120	ArgumentList	& gdt_table [ __USER_CS >> 3 ]		5333603	1					
ANR	5335121	Argument	& gdt_table [ __USER_CS >> 3 ]		5333603	0					
ANR	5335122	UnaryOperationExpression	& gdt_table [ __USER_CS >> 3 ]		5333603	0					
ANR	5335123	UnaryOperator	&		5333603	0					
ANR	5335124	ArrayIndexing	gdt_table [ __USER_CS >> 3 ]		5333603	1					
ANR	5335125	Identifier	gdt_table		5333603	0					
ANR	5335126	ShiftExpression	__USER_CS >> 3		5333603	1		>>			
ANR	5335127	Identifier	__USER_CS		5333603	0					
ANR	5335128	PrimaryExpression	3		5333603	1					
ANR	5335129	Argument	0		5333603	1					
ANR	5335130	PrimaryExpression	0		5333603	0					
ANR	5335131	Argument	0xfffff		5333603	2					
ANR	5335132	PrimaryExpression	0xfffff		5333603	0					
ANR	5335133	Argument	DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	3					
ANR	5335134	InclusiveOrExpression	DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	0		|			
ANR	5335135	Identifier	DESC_G_MASK		5333603	0					
ANR	5335136	InclusiveOrExpression	DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335137	Identifier	DESC_B_MASK		5333603	0					
ANR	5335138	InclusiveOrExpression	DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335139	Identifier	DESC_P_MASK		5333603	0					
ANR	5335140	InclusiveOrExpression	DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335141	Identifier	DESC_S_MASK		5333603	0					
ANR	5335142	InclusiveOrExpression	( 3 << DESC_DPL_SHIFT ) | ( 0xa << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335143	ShiftExpression	3 << DESC_DPL_SHIFT		5333603	0		<<			
ANR	5335144	PrimaryExpression	3		5333603	0					
ANR	5335145	Identifier	DESC_DPL_SHIFT		5333603	1					
ANR	5335146	ShiftExpression	0xa << DESC_TYPE_SHIFT		5333603	1		<<			
ANR	5335147	PrimaryExpression	0xa		5333603	0					
ANR	5335148	Identifier	DESC_TYPE_SHIFT		5333603	1					
ANR	5335149	ExpressionStatement	"write_dt ( & gdt_table [ __USER_DS >> 3 ] , 0 , 0xfffff , DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT ) )"	695:8:10597:10787	5333603	5	True				
ANR	5335150	CallExpression	"write_dt ( & gdt_table [ __USER_DS >> 3 ] , 0 , 0xfffff , DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT ) )"		5333603	0					
ANR	5335151	Callee	write_dt		5333603	0					
ANR	5335152	Identifier	write_dt		5333603	0					
ANR	5335153	ArgumentList	& gdt_table [ __USER_DS >> 3 ]		5333603	1					
ANR	5335154	Argument	& gdt_table [ __USER_DS >> 3 ]		5333603	0					
ANR	5335155	UnaryOperationExpression	& gdt_table [ __USER_DS >> 3 ]		5333603	0					
ANR	5335156	UnaryOperator	&		5333603	0					
ANR	5335157	ArrayIndexing	gdt_table [ __USER_DS >> 3 ]		5333603	1					
ANR	5335158	Identifier	gdt_table		5333603	0					
ANR	5335159	ShiftExpression	__USER_DS >> 3		5333603	1		>>			
ANR	5335160	Identifier	__USER_DS		5333603	0					
ANR	5335161	PrimaryExpression	3		5333603	1					
ANR	5335162	Argument	0		5333603	1					
ANR	5335163	PrimaryExpression	0		5333603	0					
ANR	5335164	Argument	0xfffff		5333603	2					
ANR	5335165	PrimaryExpression	0xfffff		5333603	0					
ANR	5335166	Argument	DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	3					
ANR	5335167	InclusiveOrExpression	DESC_G_MASK | DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	0		|			
ANR	5335168	Identifier	DESC_G_MASK		5333603	0					
ANR	5335169	InclusiveOrExpression	DESC_B_MASK | DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335170	Identifier	DESC_B_MASK		5333603	0					
ANR	5335171	InclusiveOrExpression	DESC_P_MASK | DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335172	Identifier	DESC_P_MASK		5333603	0					
ANR	5335173	InclusiveOrExpression	DESC_S_MASK | ( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335174	Identifier	DESC_S_MASK		5333603	0					
ANR	5335175	InclusiveOrExpression	( 3 << DESC_DPL_SHIFT ) | ( 0x2 << DESC_TYPE_SHIFT )		5333603	1		|			
ANR	5335176	ShiftExpression	3 << DESC_DPL_SHIFT		5333603	0		<<			
ANR	5335177	PrimaryExpression	3		5333603	0					
ANR	5335178	Identifier	DESC_DPL_SHIFT		5333603	1					
ANR	5335179	ShiftExpression	0x2 << DESC_TYPE_SHIFT		5333603	1		<<			
ANR	5335180	PrimaryExpression	0x2		5333603	0					
ANR	5335181	Identifier	DESC_TYPE_SHIFT		5333603	1					
ANR	5335182	ExpressionStatement	"cpu_x86_load_seg ( env , R_CS , __USER_CS )"	703:4:10801:10839	5333603	110	True				
ANR	5335183	CallExpression	"cpu_x86_load_seg ( env , R_CS , __USER_CS )"		5333603	0					
ANR	5335184	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335185	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335186	ArgumentList	env		5333603	1					
ANR	5335187	Argument	env		5333603	0					
ANR	5335188	Identifier	env		5333603	0					
ANR	5335189	Argument	R_CS		5333603	1					
ANR	5335190	Identifier	R_CS		5333603	0					
ANR	5335191	Argument	__USER_CS		5333603	2					
ANR	5335192	Identifier	__USER_CS		5333603	0					
ANR	5335193	ExpressionStatement	"cpu_x86_load_seg ( env , R_SS , __USER_DS )"	705:4:10846:10884	5333603	111	True				
ANR	5335194	CallExpression	"cpu_x86_load_seg ( env , R_SS , __USER_DS )"		5333603	0					
ANR	5335195	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335196	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335197	ArgumentList	env		5333603	1					
ANR	5335198	Argument	env		5333603	0					
ANR	5335199	Identifier	env		5333603	0					
ANR	5335200	Argument	R_SS		5333603	1					
ANR	5335201	Identifier	R_SS		5333603	0					
ANR	5335202	Argument	__USER_DS		5333603	2					
ANR	5335203	Identifier	__USER_DS		5333603	0					
ANR	5335204	ExpressionStatement	"cpu_x86_load_seg ( env , R_DS , __USER_DS )"	709:4:10912:10950	5333603	112	True				
ANR	5335205	CallExpression	"cpu_x86_load_seg ( env , R_DS , __USER_DS )"		5333603	0					
ANR	5335206	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335207	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335208	ArgumentList	env		5333603	1					
ANR	5335209	Argument	env		5333603	0					
ANR	5335210	Identifier	env		5333603	0					
ANR	5335211	Argument	R_DS		5333603	1					
ANR	5335212	Identifier	R_DS		5333603	0					
ANR	5335213	Argument	__USER_DS		5333603	2					
ANR	5335214	Identifier	__USER_DS		5333603	0					
ANR	5335215	ExpressionStatement	"cpu_x86_load_seg ( env , R_ES , __USER_DS )"	711:4:10957:10995	5333603	113	True				
ANR	5335216	CallExpression	"cpu_x86_load_seg ( env , R_ES , __USER_DS )"		5333603	0					
ANR	5335217	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335218	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335219	ArgumentList	env		5333603	1					
ANR	5335220	Argument	env		5333603	0					
ANR	5335221	Identifier	env		5333603	0					
ANR	5335222	Argument	R_ES		5333603	1					
ANR	5335223	Identifier	R_ES		5333603	0					
ANR	5335224	Argument	__USER_DS		5333603	2					
ANR	5335225	Identifier	__USER_DS		5333603	0					
ANR	5335226	ExpressionStatement	"cpu_x86_load_seg ( env , R_FS , __USER_DS )"	713:4:11002:11040	5333603	114	True				
ANR	5335227	CallExpression	"cpu_x86_load_seg ( env , R_FS , __USER_DS )"		5333603	0					
ANR	5335228	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335229	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335230	ArgumentList	env		5333603	1					
ANR	5335231	Argument	env		5333603	0					
ANR	5335232	Identifier	env		5333603	0					
ANR	5335233	Argument	R_FS		5333603	1					
ANR	5335234	Identifier	R_FS		5333603	0					
ANR	5335235	Argument	__USER_DS		5333603	2					
ANR	5335236	Identifier	__USER_DS		5333603	0					
ANR	5335237	ExpressionStatement	"cpu_x86_load_seg ( env , R_GS , __USER_DS )"	715:4:11047:11085	5333603	115	True				
ANR	5335238	CallExpression	"cpu_x86_load_seg ( env , R_GS , __USER_DS )"		5333603	0					
ANR	5335239	Callee	cpu_x86_load_seg		5333603	0					
ANR	5335240	Identifier	cpu_x86_load_seg		5333603	0					
ANR	5335241	ArgumentList	env		5333603	1					
ANR	5335242	Argument	env		5333603	0					
ANR	5335243	Identifier	env		5333603	0					
ANR	5335244	Argument	R_GS		5333603	1					
ANR	5335245	Identifier	R_GS		5333603	0					
ANR	5335246	Argument	__USER_DS		5333603	2					
ANR	5335247	Identifier	__USER_DS		5333603	0					
ANR	5335248	ExpressionStatement	env -> segs [ R_FS ] . selector = 0	719:4:11132:11160	5333603	116	True				
ANR	5335249	AssignmentExpression	env -> segs [ R_FS ] . selector = 0		5333603	0		=			
ANR	5335250	MemberAccess	env -> segs [ R_FS ] . selector		5333603	0					
ANR	5335251	ArrayIndexing	env -> segs [ R_FS ]		5333603	0					
ANR	5335252	PtrMemberAccess	env -> segs		5333603	0					
ANR	5335253	Identifier	env		5333603	0					
ANR	5335254	Identifier	segs		5333603	1					
ANR	5335255	Identifier	R_FS		5333603	1					
ANR	5335256	Identifier	selector		5333603	1					
ANR	5335257	PrimaryExpression	0		5333603	1					
ANR	5335258	ExpressionStatement	ts -> stack_base = info -> start_stack	1269:4:19331:19365	5333603	117	True				
ANR	5335259	AssignmentExpression	ts -> stack_base = info -> start_stack		5333603	0		=			
ANR	5335260	PtrMemberAccess	ts -> stack_base		5333603	0					
ANR	5335261	Identifier	ts		5333603	0					
ANR	5335262	Identifier	stack_base		5333603	1					
ANR	5335263	PtrMemberAccess	info -> start_stack		5333603	1					
ANR	5335264	Identifier	info		5333603	0					
ANR	5335265	Identifier	start_stack		5333603	1					
ANR	5335266	ExpressionStatement	ts -> heap_base = info -> brk	1271:4:19372:19397	5333603	118	True				
ANR	5335267	AssignmentExpression	ts -> heap_base = info -> brk		5333603	0		=			
ANR	5335268	PtrMemberAccess	ts -> heap_base		5333603	0					
ANR	5335269	Identifier	ts		5333603	0					
ANR	5335270	Identifier	heap_base		5333603	1					
ANR	5335271	PtrMemberAccess	info -> brk		5333603	1					
ANR	5335272	Identifier	info		5333603	0					
ANR	5335273	Identifier	brk		5333603	1					
ANR	5335274	ExpressionStatement	ts -> heap_limit = 0	1275:4:19471:19489	5333603	119	True				
ANR	5335275	AssignmentExpression	ts -> heap_limit = 0		5333603	0		=			
ANR	5335276	PtrMemberAccess	ts -> heap_limit		5333603	0					
ANR	5335277	Identifier	ts		5333603	0					
ANR	5335278	Identifier	heap_limit		5333603	1					
ANR	5335279	PrimaryExpression	0		5333603	1					
ANR	5335280	IfStatement	if ( gdbstub_port )		5333603	120					
ANR	5335281	Condition	gdbstub_port	1281:8:19510:19521	5333603	0	True				
ANR	5335282	Identifier	gdbstub_port		5333603	0					
ANR	5335283	CompoundStatement		1279:22:19477:19477	5333603	1					
ANR	5335284	IfStatement	if ( gdbserver_start ( gdbstub_port ) < 0 )		5333603	0					
ANR	5335285	Condition	gdbserver_start ( gdbstub_port ) < 0	1283:12:19539:19571	5333603	0	True				
ANR	5335286	RelationalExpression	gdbserver_start ( gdbstub_port ) < 0		5333603	0		<			
ANR	5335287	CallExpression	gdbserver_start ( gdbstub_port )		5333603	0					
ANR	5335288	Callee	gdbserver_start		5333603	0					
ANR	5335289	Identifier	gdbserver_start		5333603	0					
ANR	5335290	ArgumentList	gdbstub_port		5333603	1					
ANR	5335291	Argument	gdbstub_port		5333603	0					
ANR	5335292	Identifier	gdbstub_port		5333603	0					
ANR	5335293	PrimaryExpression	0		5333603	1					
ANR	5335294	CompoundStatement		1281:47:19527:19527	5333603	1					
ANR	5335295	ExpressionStatement	"fprintf ( stderr , ""qemu: could not open gdbserver on port %d\\n"" , gdbstub_port )"	1285:12:19589:19686	5333603	0	True				
ANR	5335296	CallExpression	"fprintf ( stderr , ""qemu: could not open gdbserver on port %d\\n"" , gdbstub_port )"		5333603	0					
ANR	5335297	Callee	fprintf		5333603	0					
ANR	5335298	Identifier	fprintf		5333603	0					
ANR	5335299	ArgumentList	stderr		5333603	1					
ANR	5335300	Argument	stderr		5333603	0					
ANR	5335301	Identifier	stderr		5333603	0					
ANR	5335302	Argument	"""qemu: could not open gdbserver on port %d\\n"""		5333603	1					
ANR	5335303	PrimaryExpression	"""qemu: could not open gdbserver on port %d\\n"""		5333603	0					
ANR	5335304	Argument	gdbstub_port		5333603	2					
ANR	5335305	Identifier	gdbstub_port		5333603	0					
ANR	5335306	ExpressionStatement	exit ( EXIT_FAILURE )	1289:12:19701:19719	5333603	1	True				
ANR	5335307	CallExpression	exit ( EXIT_FAILURE )		5333603	0					
ANR	5335308	Callee	exit		5333603	0					
ANR	5335309	Identifier	exit		5333603	0					
ANR	5335310	ArgumentList	EXIT_FAILURE		5333603	1					
ANR	5335311	Argument	EXIT_FAILURE		5333603	0					
ANR	5335312	Identifier	EXIT_FAILURE		5333603	0					
ANR	5335313	ExpressionStatement	"gdb_handlesig ( cpu , 0 )"	1293:8:19741:19762	5333603	1	True				
ANR	5335314	CallExpression	"gdb_handlesig ( cpu , 0 )"		5333603	0					
ANR	5335315	Callee	gdb_handlesig		5333603	0					
ANR	5335316	Identifier	gdb_handlesig		5333603	0					
ANR	5335317	ArgumentList	cpu		5333603	1					
ANR	5335318	Argument	cpu		5333603	0					
ANR	5335319	Identifier	cpu		5333603	0					
ANR	5335320	Argument	0		5333603	1					
ANR	5335321	PrimaryExpression	0		5333603	0					
ANR	5335322	ExpressionStatement	cpu_loop ( env )	1297:4:19776:19789	5333603	121	True				
ANR	5335323	CallExpression	cpu_loop ( env )		5333603	0					
ANR	5335324	Callee	cpu_loop		5333603	0					
ANR	5335325	Identifier	cpu_loop		5333603	0					
ANR	5335326	ArgumentList	env		5333603	1					
ANR	5335327	Argument	env		5333603	0					
ANR	5335328	Identifier	env		5333603	0					
ANR	5335329	ReturnStatement	return 0 ;	1301:4:19819:19827	5333603	122	True				
ANR	5335330	PrimaryExpression	0		5333603	0					
ANR	5335331	ReturnType	int		5333603	1					
ANR	5335332	Identifier	main		5333603	2					
ANR	5335333	ParameterList	"int argc , char * * argv , char * * envp"		5333603	3					
ANR	5335334	Parameter	int argc	1:9:9:16	5333603	0	True				
ANR	5335335	ParameterType	int		5333603	0					
ANR	5335336	Identifier	argc		5333603	1					
ANR	5335337	Parameter	char * * argv	1:19:19:29	5333603	1	True				
ANR	5335338	ParameterType	char * *		5333603	0					
ANR	5335339	Identifier	argv		5333603	1					
ANR	5335340	Parameter	char * * envp	1:32:32:42	5333603	2	True				
ANR	5335341	ParameterType	char * *		5333603	0					
ANR	5335342	Identifier	envp		5333603	1					
ANR	5335343	CFGEntryNode	ENTRY		5333603		True				
ANR	5335344	CFGExitNode	EXIT		5333603		True				
ANR	5335345	Symbol	* FEAT_1_EDX		5333603						
ANR	5335346	Symbol	target_mmap		5333603						
ANR	5335347	Symbol	getrlimit		5333603						
ANR	5335348	Symbol	& regs1		5333603						
ANR	5335349	Symbol	FEAT_1_EDX		5333603						
ANR	5335350	Symbol	HF_OSFXSR_MASK		5333603						
ANR	5335351	Symbol	qemu_loglevel_mask		5333603						
ANR	5335352	Symbol	RLIM_INFINITY		5333603						
ANR	5335353	Symbol	& info1		5333603						
ANR	5335354	Symbol	& bprm		5333603						
ANR	5335355	Symbol	envp		5333603						
ANR	5335356	Symbol	target_argc		5333603						
ANR	5335357	Symbol	guest_stack_size		5333603						
ANR	5335358	Symbol	MAP_PRIVATE		5333603						
ANR	5335359	Symbol	environ		5333603						
ANR	5335360	Symbol	* env -> cr		5333603						
ANR	5335361	Symbol	CR0_WP_MASK		5333603						
ANR	5335362	Symbol	cpu -> env_ptr		5333603						
ANR	5335363	Symbol	qemu_getauxval		5333603						
ANR	5335364	Symbol	PROT_WRITE		5333603						
ANR	5335365	Symbol	DESC_P_MASK		5333603						
ANR	5335366	Symbol	tmp		5333603						
ANR	5335367	Symbol	ts -> bprm		5333603						
ANR	5335368	Symbol	g2h		5333603						
ANR	5335369	Symbol	env -> gdt . limit		5333603						
ANR	5335370	Symbol	* FEAT_8000_0001_EDX		5333603						
ANR	5335371	Symbol	init_guest_space		5333603						
ANR	5335372	Symbol	errno		5333603						
ANR	5335373	Symbol	HF_LMA_MASK		5333603						
ANR	5335374	Symbol	reserved_va		5333603						
ANR	5335375	Symbol	info -> start_stack		5333603						
ANR	5335376	Symbol	* ts		5333603						
ANR	5335377	Symbol	bprm		5333603						
ANR	5335378	Symbol	mmap_min_addr		5333603						
ANR	5335379	Symbol	PROT_READ		5333603						
ANR	5335380	Symbol	execfd		5333603						
ANR	5335381	Symbol	env -> segs		5333603						
ANR	5335382	Symbol	& tcg_ctx		5333603						
ANR	5335383	Symbol	* env -> regs		5333603						
ANR	5335384	Symbol	DESC_B_MASK		5333603						
ANR	5335385	Symbol	envlist		5333603						
ANR	5335386	Symbol	MSR_EFER_LMA		5333603						
ANR	5335387	Symbol	filename		5333603						
ANR	5335388	Symbol	EXIT_FAILURE		5333603						
ANR	5335389	Symbol	MSR_EFER_LME		5333603						
ANR	5335390	Symbol	* regs		5333603						
ANR	5335391	Symbol	ts -> heap_base		5333603						
ANR	5335392	Symbol	& tmp		5333603						
ANR	5335393	Symbol	env -> eflags		5333603						
ANR	5335394	Symbol	* * env		5333603						
ANR	5335395	Symbol	R_EBX		5333603						
ANR	5335396	Symbol	R_ESI		5333603						
ANR	5335397	Symbol	FEAT_8000_0001_EDX		5333603						
ANR	5335398	Symbol	do_strace		5333603						
ANR	5335399	Symbol	HF_PE_MASK		5333603						
ANR	5335400	Symbol	* R_EAX		5333603						
ANR	5335401	Symbol	R_EBP		5333603						
ANR	5335402	Symbol	R_SS		5333603						
ANR	5335403	Symbol	gdbserver_start		5333603						
ANR	5335404	Symbol	envlist_create		5333603						
ANR	5335405	Symbol	cpu_model		5333603						
ANR	5335406	Symbol	__USER_DS		5333603						
ANR	5335407	Symbol	g_new0		5333603						
ANR	5335408	Symbol	env -> cr		5333603						
ANR	5335409	Symbol	R_ESP		5333603						
ANR	5335410	Symbol	env -> efer		5333603						
ANR	5335411	Symbol	R_CS		5333603						
ANR	5335412	Symbol	getenv		5333603						
ANR	5335413	Symbol	HOST_PAGE_ALIGN		5333603						
ANR	5335414	Symbol	R_EAX		5333603						
ANR	5335415	Symbol	* R_EBP		5333603						
ANR	5335416	Symbol	fopen		5333603						
ANR	5335417	Symbol	envlist_to_environ		5333603						
ANR	5335418	Symbol	env -> idt . limit		5333603						
ANR	5335419	Symbol	MAP_ANONYMOUS		5333603						
ANR	5335420	Symbol	* R_EBX		5333603						
ANR	5335421	Symbol	* R_ESI		5333603						
ANR	5335422	Symbol	i		5333603						
ANR	5335423	Symbol	regs		5333603						
ANR	5335424	Symbol	env -> idt		5333603						
ANR	5335425	Symbol	parse_args		5333603						
ANR	5335426	Symbol	* R_ESP		5333603						
ANR	5335427	Symbol	HF_CPL_MASK		5333603						
ANR	5335428	Symbol	fscanf		5333603						
ANR	5335429	Symbol	O_RDONLY		5333603						
ANR	5335430	Symbol	ts -> stack_base		5333603						
ANR	5335431	Symbol	target_argv		5333603						
ANR	5335432	Symbol	* info		5333603						
ANR	5335433	Symbol	gdbstub_port		5333603						
ANR	5335434	Symbol	CPUID_SSE		5333603						
ANR	5335435	Symbol	TaskState		5333603						
ANR	5335436	Symbol	open		5333603						
ANR	5335437	Symbol	ts		5333603						
ANR	5335438	Symbol	ts -> info		5333603						
ANR	5335439	Symbol	__USER_CS		5333603						
ANR	5335440	Symbol	* optind		5333603						
ANR	5335441	Symbol	R_EDX		5333603						
ANR	5335442	Symbol	* R_FS		5333603						
ANR	5335443	Symbol	optind		5333603						
ANR	5335444	Symbol	* R_ECX		5333603						
ANR	5335445	Symbol	regs -> rip		5333603						
ANR	5335446	Symbol	CPU_LOG_PAGE		5333603						
ANR	5335447	Symbol	* argv		5333603						
ANR	5335448	Symbol	env -> regs		5333603						
ANR	5335449	Symbol	target_environ		5333603						
ANR	5335450	Symbol	CR0_PE_MASK		5333603						
ANR	5335451	Symbol	DESC_TYPE_SHIFT		5333603						
ANR	5335452	Symbol	thread_cpu		5333603						
ANR	5335453	Symbol	lim		5333603						
ANR	5335454	Symbol	info -> brk		5333603						
ANR	5335455	Symbol	regs -> rax		5333603						
ANR	5335456	Symbol	* wrk		5333603						
ANR	5335457	Symbol	R_ES		5333603						
ANR	5335458	Symbol	info		5333603						
ANR	5335459	Symbol	ret		5333603						
ANR	5335460	Symbol	R_ECX		5333603						
ANR	5335461	Symbol	NULL		5333603						
ANR	5335462	Symbol	cpu_init		5333603						
ANR	5335463	Symbol	* R_EDX		5333603						
ANR	5335464	Symbol	lim . rlim_cur		5333603						
ANR	5335465	Symbol	* env		5333603						
ANR	5335466	Symbol	CR0_PG_MASK		5333603						
ANR	5335467	Symbol	cpu		5333603						
ANR	5335468	Symbol	guest_base		5333603						
ANR	5335469	Symbol	mmap_next_start		5333603						
ANR	5335470	Symbol	stderr		5333603						
ANR	5335471	Symbol	* target_argc		5333603						
ANR	5335472	Symbol	strerror		5333603						
ANR	5335473	Symbol	& lim		5333603						
ANR	5335474	Symbol	interp_prefix		5333603						
ANR	5335475	Symbol	R_EDI		5333603						
ANR	5335476	Symbol	* target_argv		5333603						
ANR	5335477	Symbol	IF_MASK		5333603						
ANR	5335478	Symbol	regs -> rbx		5333603						
ANR	5335479	Symbol	regs -> rsi		5333603						
ANR	5335480	Symbol	env -> features		5333603						
ANR	5335481	Symbol	* R_EDI		5333603						
ANR	5335482	Symbol	info1		5333603						
ANR	5335483	Symbol	MODULE_INIT_QOM		5333603						
ANR	5335484	Symbol	R_DS		5333603						
ANR	5335485	Symbol	gdt_table		5333603						
ANR	5335486	Symbol	TARGET_GDT_ENTRIES		5333603						
ANR	5335487	Symbol	regs -> rbp		5333603						
ANR	5335488	Symbol	ts -> heap_limit		5333603						
ANR	5335489	Symbol	loader_exec		5333603						
ANR	5335490	Symbol	env -> hflags		5333603						
ANR	5335491	Symbol	regs1		5333603						
ANR	5335492	Symbol	env -> eip		5333603						
ANR	5335493	Symbol	cpu -> opaque		5333603						
ANR	5335494	Symbol	& qemu_trace_opts		5333603						
ANR	5335495	Symbol	fp		5333603						
ANR	5335496	Symbol	calloc		5333603						
ANR	5335497	Symbol	argv		5333603						
ANR	5335498	Symbol	regs -> rsp		5333603						
ANR	5335499	Symbol	CR4_PAE_MASK		5333603						
ANR	5335500	Symbol	idt_table		5333603						
ANR	5335501	Symbol	CR4_OSFXSR_MASK		5333603						
ANR	5335502	Symbol	CPUID_EXT2_LM		5333603						
ANR	5335503	Symbol	* env -> segs		5333603						
ANR	5335504	Symbol	env -> gdt . base		5333603						
ANR	5335505	Symbol	regs -> rcx		5333603						
ANR	5335506	Symbol	DESC_DPL_SHIFT		5333603						
ANR	5335507	Symbol	RLIMIT_STACK		5333603						
ANR	5335508	Symbol	argv0		5333603						
ANR	5335509	Symbol	DESC_S_MASK		5333603						
ANR	5335510	Symbol	env -> segs [ R_FS ] . selector		5333603						
ANR	5335511	Symbol	R_GS		5333603						
ANR	5335512	Symbol	argc		5333603						
ANR	5335513	Symbol	regs -> rdi		5333603						
ANR	5335514	Symbol	trace_file		5333603						
ANR	5335515	Symbol	* env -> features		5333603						
ANR	5335516	Symbol	env -> idt . base		5333603						
ANR	5335517	Symbol	env		5333603						
ANR	5335518	Symbol	env -> gdt		5333603						
ANR	5335519	Symbol	* cpu		5333603						
ANR	5335520	Symbol	wrk		5333603						
ANR	5335521	Symbol	MODULE_INIT_TRACE		5333603						
ANR	5335522	Symbol	AT_EXECFD		5333603						
ANR	5335523	Symbol	DESC_G_MASK		5333603						
ANR	5335524	Symbol	* i		5333603						
ANR	5335525	Symbol	regs -> rdx		5333603						
ANR	5335526	Symbol	have_guest_base		5333603						
ANR	5335527	Symbol	trace_init_backends		5333603						
ANR	5335528	Symbol	time		5333603						
ANR	5335529	Symbol	strdup		5333603						
ANR	5335530	Symbol	R_FS		5333603						
