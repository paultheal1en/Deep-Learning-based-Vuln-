command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4802255	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ide_init_drive_03_0.c								
ANR	4802256	Function	ide_init_drive	1:0:0:2492							
ANR	4802257	FunctionDef	"ide_init_drive (IDEState * s , BlockDriverState * bs , IDEDriveKind kind , const char * version , const char * serial , const char * model , uint64_t wwn , uint32_t cylinders , uint32_t heads , uint32_t secs , int chs_trans)"		4802256	0					
ANR	4802258	CompoundStatement		11:0:294:2492	4802256	0					
ANR	4802259	IdentifierDeclStatement	uint64_t nb_sectors ;	13:4:301:320	4802256	0	True				
ANR	4802260	IdentifierDecl	nb_sectors		4802256	0					
ANR	4802261	IdentifierDeclType	uint64_t		4802256	0					
ANR	4802262	Identifier	nb_sectors		4802256	1					
ANR	4802263	ExpressionStatement	s -> bs = bs	17:4:329:339	4802256	1	True				
ANR	4802264	AssignmentExpression	s -> bs = bs		4802256	0		=			
ANR	4802265	PtrMemberAccess	s -> bs		4802256	0					
ANR	4802266	Identifier	s		4802256	0					
ANR	4802267	Identifier	bs		4802256	1					
ANR	4802268	Identifier	bs		4802256	1					
ANR	4802269	ExpressionStatement	s -> drive_kind = kind	19:4:346:366	4802256	2	True				
ANR	4802270	AssignmentExpression	s -> drive_kind = kind		4802256	0		=			
ANR	4802271	PtrMemberAccess	s -> drive_kind		4802256	0					
ANR	4802272	Identifier	s		4802256	0					
ANR	4802273	Identifier	drive_kind		4802256	1					
ANR	4802274	Identifier	kind		4802256	1					
ANR	4802275	ExpressionStatement	"bdrv_get_geometry ( bs , & nb_sectors )"	23:4:375:409	4802256	3	True				
ANR	4802276	CallExpression	"bdrv_get_geometry ( bs , & nb_sectors )"		4802256	0					
ANR	4802277	Callee	bdrv_get_geometry		4802256	0					
ANR	4802278	Identifier	bdrv_get_geometry		4802256	0					
ANR	4802279	ArgumentList	bs		4802256	1					
ANR	4802280	Argument	bs		4802256	0					
ANR	4802281	Identifier	bs		4802256	0					
ANR	4802282	Argument	& nb_sectors		4802256	1					
ANR	4802283	UnaryOperationExpression	& nb_sectors		4802256	0					
ANR	4802284	UnaryOperator	&		4802256	0					
ANR	4802285	Identifier	nb_sectors		4802256	1					
ANR	4802286	IfStatement	if ( cylinders < 1 || cylinders > 16383 )		4802256	4					
ANR	4802287	Condition	cylinders < 1 || cylinders > 16383	25:8:420:453	4802256	0	True				
ANR	4802288	OrExpression	cylinders < 1 || cylinders > 16383		4802256	0		||			
ANR	4802289	RelationalExpression	cylinders < 1		4802256	0		<			
ANR	4802290	Identifier	cylinders		4802256	0					
ANR	4802291	PrimaryExpression	1		4802256	1					
ANR	4802292	RelationalExpression	cylinders > 16383		4802256	1		>			
ANR	4802293	Identifier	cylinders		4802256	0					
ANR	4802294	PrimaryExpression	16383		4802256	1					
ANR	4802295	CompoundStatement		15:44:161:161	4802256	1					
ANR	4802296	ExpressionStatement	"error_report ( ""cyls must be between 1 and 16383"" )"	27:8:467:515	4802256	0	True				
ANR	4802297	CallExpression	"error_report ( ""cyls must be between 1 and 16383"" )"		4802256	0					
ANR	4802298	Callee	error_report		4802256	0					
ANR	4802299	Identifier	error_report		4802256	0					
ANR	4802300	ArgumentList	"""cyls must be between 1 and 16383"""		4802256	1					
ANR	4802301	Argument	"""cyls must be between 1 and 16383"""		4802256	0					
ANR	4802302	PrimaryExpression	"""cyls must be between 1 and 16383"""		4802256	0					
ANR	4802303	ReturnStatement	return - 1 ;	29:8:526:535	4802256	1	True				
ANR	4802304	UnaryOperationExpression	- 1		4802256	0					
ANR	4802305	UnaryOperator	-		4802256	0					
ANR	4802306	PrimaryExpression	1		4802256	1					
ANR	4802307	IfStatement	if ( heads < 1 || heads > 16 )		4802256	5					
ANR	4802308	Condition	heads < 1 || heads > 16	33:8:553:575	4802256	0	True				
ANR	4802309	OrExpression	heads < 1 || heads > 16		4802256	0		||			
ANR	4802310	RelationalExpression	heads < 1		4802256	0		<			
ANR	4802311	Identifier	heads		4802256	0					
ANR	4802312	PrimaryExpression	1		4802256	1					
ANR	4802313	RelationalExpression	heads > 16		4802256	1		>			
ANR	4802314	Identifier	heads		4802256	0					
ANR	4802315	PrimaryExpression	16		4802256	1					
ANR	4802316	CompoundStatement		23:33:283:283	4802256	1					
ANR	4802317	ExpressionStatement	"error_report ( ""heads must be between 1 and 16"" )"	35:8:589:635	4802256	0	True				
ANR	4802318	CallExpression	"error_report ( ""heads must be between 1 and 16"" )"		4802256	0					
ANR	4802319	Callee	error_report		4802256	0					
ANR	4802320	Identifier	error_report		4802256	0					
ANR	4802321	ArgumentList	"""heads must be between 1 and 16"""		4802256	1					
ANR	4802322	Argument	"""heads must be between 1 and 16"""		4802256	0					
ANR	4802323	PrimaryExpression	"""heads must be between 1 and 16"""		4802256	0					
ANR	4802324	ReturnStatement	return - 1 ;	37:8:646:655	4802256	1	True				
ANR	4802325	UnaryOperationExpression	- 1		4802256	0					
ANR	4802326	UnaryOperator	-		4802256	0					
ANR	4802327	PrimaryExpression	1		4802256	1					
ANR	4802328	IfStatement	if ( secs < 1 || secs > 63 )		4802256	6					
ANR	4802329	Condition	secs < 1 || secs > 63	41:8:673:693	4802256	0	True				
ANR	4802330	OrExpression	secs < 1 || secs > 63		4802256	0		||			
ANR	4802331	RelationalExpression	secs < 1		4802256	0		<			
ANR	4802332	Identifier	secs		4802256	0					
ANR	4802333	PrimaryExpression	1		4802256	1					
ANR	4802334	RelationalExpression	secs > 63		4802256	1		>			
ANR	4802335	Identifier	secs		4802256	0					
ANR	4802336	PrimaryExpression	63		4802256	1					
ANR	4802337	CompoundStatement		31:31:401:401	4802256	1					
ANR	4802338	ExpressionStatement	"error_report ( ""secs must be between 1 and 63"" )"	43:8:707:752	4802256	0	True				
ANR	4802339	CallExpression	"error_report ( ""secs must be between 1 and 63"" )"		4802256	0					
ANR	4802340	Callee	error_report		4802256	0					
ANR	4802341	Identifier	error_report		4802256	0					
ANR	4802342	ArgumentList	"""secs must be between 1 and 63"""		4802256	1					
ANR	4802343	Argument	"""secs must be between 1 and 63"""		4802256	0					
ANR	4802344	PrimaryExpression	"""secs must be between 1 and 63"""		4802256	0					
ANR	4802345	ReturnStatement	return - 1 ;	45:8:763:772	4802256	1	True				
ANR	4802346	UnaryOperationExpression	- 1		4802256	0					
ANR	4802347	UnaryOperator	-		4802256	0					
ANR	4802348	PrimaryExpression	1		4802256	1					
ANR	4802349	ExpressionStatement	s -> cylinders = cylinders	49:4:786:810	4802256	7	True				
ANR	4802350	AssignmentExpression	s -> cylinders = cylinders		4802256	0		=			
ANR	4802351	PtrMemberAccess	s -> cylinders		4802256	0					
ANR	4802352	Identifier	s		4802256	0					
ANR	4802353	Identifier	cylinders		4802256	1					
ANR	4802354	Identifier	cylinders		4802256	1					
ANR	4802355	ExpressionStatement	s -> heads = heads	51:4:817:833	4802256	8	True				
ANR	4802356	AssignmentExpression	s -> heads = heads		4802256	0		=			
ANR	4802357	PtrMemberAccess	s -> heads		4802256	0					
ANR	4802358	Identifier	s		4802256	0					
ANR	4802359	Identifier	heads		4802256	1					
ANR	4802360	Identifier	heads		4802256	1					
ANR	4802361	ExpressionStatement	s -> sectors = secs	53:4:840:857	4802256	9	True				
ANR	4802362	AssignmentExpression	s -> sectors = secs		4802256	0		=			
ANR	4802363	PtrMemberAccess	s -> sectors		4802256	0					
ANR	4802364	Identifier	s		4802256	0					
ANR	4802365	Identifier	sectors		4802256	1					
ANR	4802366	Identifier	secs		4802256	1					
ANR	4802367	ExpressionStatement	s -> chs_trans = chs_trans	55:4:864:888	4802256	10	True				
ANR	4802368	AssignmentExpression	s -> chs_trans = chs_trans		4802256	0		=			
ANR	4802369	PtrMemberAccess	s -> chs_trans		4802256	0					
ANR	4802370	Identifier	s		4802256	0					
ANR	4802371	Identifier	chs_trans		4802256	1					
ANR	4802372	Identifier	chs_trans		4802256	1					
ANR	4802373	ExpressionStatement	s -> nb_sectors = nb_sectors	57:4:895:921	4802256	11	True				
ANR	4802374	AssignmentExpression	s -> nb_sectors = nb_sectors		4802256	0		=			
ANR	4802375	PtrMemberAccess	s -> nb_sectors		4802256	0					
ANR	4802376	Identifier	s		4802256	0					
ANR	4802377	Identifier	nb_sectors		4802256	1					
ANR	4802378	Identifier	nb_sectors		4802256	1					
ANR	4802379	ExpressionStatement	s -> wwn = wwn	59:4:928:940	4802256	12	True				
ANR	4802380	AssignmentExpression	s -> wwn = wwn		4802256	0		=			
ANR	4802381	PtrMemberAccess	s -> wwn		4802256	0					
ANR	4802382	Identifier	s		4802256	0					
ANR	4802383	Identifier	wwn		4802256	1					
ANR	4802384	Identifier	wwn		4802256	1					
ANR	4802385	ExpressionStatement	s -> smart_enabled = 1	65:4:1041:1061	4802256	13	True				
ANR	4802386	AssignmentExpression	s -> smart_enabled = 1		4802256	0		=			
ANR	4802387	PtrMemberAccess	s -> smart_enabled		4802256	0					
ANR	4802388	Identifier	s		4802256	0					
ANR	4802389	Identifier	smart_enabled		4802256	1					
ANR	4802390	PrimaryExpression	1		4802256	1					
ANR	4802391	ExpressionStatement	s -> smart_autosave = 1	67:4:1068:1089	4802256	14	True				
ANR	4802392	AssignmentExpression	s -> smart_autosave = 1		4802256	0		=			
ANR	4802393	PtrMemberAccess	s -> smart_autosave		4802256	0					
ANR	4802394	Identifier	s		4802256	0					
ANR	4802395	Identifier	smart_autosave		4802256	1					
ANR	4802396	PrimaryExpression	1		4802256	1					
ANR	4802397	ExpressionStatement	s -> smart_errors = 0	69:4:1096:1115	4802256	15	True				
ANR	4802398	AssignmentExpression	s -> smart_errors = 0		4802256	0		=			
ANR	4802399	PtrMemberAccess	s -> smart_errors		4802256	0					
ANR	4802400	Identifier	s		4802256	0					
ANR	4802401	Identifier	smart_errors		4802256	1					
ANR	4802402	PrimaryExpression	0		4802256	1					
ANR	4802403	ExpressionStatement	s -> smart_selftest_count = 0	71:4:1122:1149	4802256	16	True				
ANR	4802404	AssignmentExpression	s -> smart_selftest_count = 0		4802256	0		=			
ANR	4802405	PtrMemberAccess	s -> smart_selftest_count		4802256	0					
ANR	4802406	Identifier	s		4802256	0					
ANR	4802407	Identifier	smart_selftest_count		4802256	1					
ANR	4802408	PrimaryExpression	0		4802256	1					
ANR	4802409	IfStatement	if ( kind == IDE_CD )		4802256	17					
ANR	4802410	Condition	kind == IDE_CD	73:8:1160:1173	4802256	0	True				
ANR	4802411	EqualityExpression	kind == IDE_CD		4802256	0		==			
ANR	4802412	Identifier	kind		4802256	0					
ANR	4802413	Identifier	IDE_CD		4802256	1					
ANR	4802414	CompoundStatement		63:24:881:881	4802256	1					
ANR	4802415	ExpressionStatement	"bdrv_set_dev_ops ( bs , & ide_cd_block_ops , s )"	75:8:1187:1229	4802256	0	True				
ANR	4802416	CallExpression	"bdrv_set_dev_ops ( bs , & ide_cd_block_ops , s )"		4802256	0					
ANR	4802417	Callee	bdrv_set_dev_ops		4802256	0					
ANR	4802418	Identifier	bdrv_set_dev_ops		4802256	0					
ANR	4802419	ArgumentList	bs		4802256	1					
ANR	4802420	Argument	bs		4802256	0					
ANR	4802421	Identifier	bs		4802256	0					
ANR	4802422	Argument	& ide_cd_block_ops		4802256	1					
ANR	4802423	UnaryOperationExpression	& ide_cd_block_ops		4802256	0					
ANR	4802424	UnaryOperator	&		4802256	0					
ANR	4802425	Identifier	ide_cd_block_ops		4802256	1					
ANR	4802426	Argument	s		4802256	2					
ANR	4802427	Identifier	s		4802256	0					
ANR	4802428	ExpressionStatement	"bdrv_set_buffer_alignment ( bs , 2048 )"	77:8:1240:1275	4802256	1	True				
ANR	4802429	CallExpression	"bdrv_set_buffer_alignment ( bs , 2048 )"		4802256	0					
ANR	4802430	Callee	bdrv_set_buffer_alignment		4802256	0					
ANR	4802431	Identifier	bdrv_set_buffer_alignment		4802256	0					
ANR	4802432	ArgumentList	bs		4802256	1					
ANR	4802433	Argument	bs		4802256	0					
ANR	4802434	Identifier	bs		4802256	0					
ANR	4802435	Argument	2048		4802256	1					
ANR	4802436	PrimaryExpression	2048		4802256	0					
ANR	4802437	ElseStatement	else		4802256	0					
ANR	4802438	CompoundStatement		69:11:994:994	4802256	0					
ANR	4802439	IfStatement	if ( ! bdrv_is_inserted ( s -> bs ) )		4802256	0					
ANR	4802440	Condition	! bdrv_is_inserted ( s -> bs )	81:12:1304:1327	4802256	0	True				
ANR	4802441	UnaryOperationExpression	! bdrv_is_inserted ( s -> bs )		4802256	0					
ANR	4802442	UnaryOperator	!		4802256	0					
ANR	4802443	CallExpression	bdrv_is_inserted ( s -> bs )		4802256	1					
ANR	4802444	Callee	bdrv_is_inserted		4802256	0					
ANR	4802445	Identifier	bdrv_is_inserted		4802256	0					
ANR	4802446	ArgumentList	s -> bs		4802256	1					
ANR	4802447	Argument	s -> bs		4802256	0					
ANR	4802448	PtrMemberAccess	s -> bs		4802256	0					
ANR	4802449	Identifier	s		4802256	0					
ANR	4802450	Identifier	bs		4802256	1					
ANR	4802451	CompoundStatement		71:38:1035:1035	4802256	1					
ANR	4802452	ExpressionStatement	"error_report ( ""Device needs media, but drive is empty"" )"	83:12:1345:1399	4802256	0	True				
ANR	4802453	CallExpression	"error_report ( ""Device needs media, but drive is empty"" )"		4802256	0					
ANR	4802454	Callee	error_report		4802256	0					
ANR	4802455	Identifier	error_report		4802256	0					
ANR	4802456	ArgumentList	"""Device needs media, but drive is empty"""		4802256	1					
ANR	4802457	Argument	"""Device needs media, but drive is empty"""		4802256	0					
ANR	4802458	PrimaryExpression	"""Device needs media, but drive is empty"""		4802256	0					
ANR	4802459	ReturnStatement	return - 1 ;	85:12:1414:1423	4802256	1	True				
ANR	4802460	UnaryOperationExpression	- 1		4802256	0					
ANR	4802461	UnaryOperator	-		4802256	0					
ANR	4802462	PrimaryExpression	1		4802256	1					
ANR	4802463	IfStatement	if ( bdrv_is_read_only ( bs ) )		4802256	1					
ANR	4802464	Condition	bdrv_is_read_only ( bs )	89:12:1449:1469	4802256	0	True				
ANR	4802465	CallExpression	bdrv_is_read_only ( bs )		4802256	0					
ANR	4802466	Callee	bdrv_is_read_only		4802256	0					
ANR	4802467	Identifier	bdrv_is_read_only		4802256	0					
ANR	4802468	ArgumentList	bs		4802256	1					
ANR	4802469	Argument	bs		4802256	0					
ANR	4802470	Identifier	bs		4802256	0					
ANR	4802471	CompoundStatement		79:35:1177:1177	4802256	1					
ANR	4802472	ExpressionStatement	"error_report ( ""Can't use a read-only drive"" )"	91:12:1487:1530	4802256	0	True				
ANR	4802473	CallExpression	"error_report ( ""Can't use a read-only drive"" )"		4802256	0					
ANR	4802474	Callee	error_report		4802256	0					
ANR	4802475	Identifier	error_report		4802256	0					
ANR	4802476	ArgumentList	"""Can't use a read-only drive"""		4802256	1					
ANR	4802477	Argument	"""Can't use a read-only drive"""		4802256	0					
ANR	4802478	PrimaryExpression	"""Can't use a read-only drive"""		4802256	0					
ANR	4802479	ReturnStatement	return - 1 ;	93:12:1545:1554	4802256	1	True				
ANR	4802480	UnaryOperationExpression	- 1		4802256	0					
ANR	4802481	UnaryOperator	-		4802256	0					
ANR	4802482	PrimaryExpression	1		4802256	1					
ANR	4802483	IfStatement	if ( serial )		4802256	18					
ANR	4802484	Condition	serial	99:8:1583:1588	4802256	0	True				
ANR	4802485	Identifier	serial		4802256	0					
ANR	4802486	CompoundStatement		89:16:1296:1296	4802256	1					
ANR	4802487	ExpressionStatement	"pstrcpy ( s -> drive_serial_str , sizeof ( s -> drive_serial_str ) , serial )"	101:8:1602:1667	4802256	0	True				
ANR	4802488	CallExpression	"pstrcpy ( s -> drive_serial_str , sizeof ( s -> drive_serial_str ) , serial )"		4802256	0					
ANR	4802489	Callee	pstrcpy		4802256	0					
ANR	4802490	Identifier	pstrcpy		4802256	0					
ANR	4802491	ArgumentList	s -> drive_serial_str		4802256	1					
ANR	4802492	Argument	s -> drive_serial_str		4802256	0					
ANR	4802493	PtrMemberAccess	s -> drive_serial_str		4802256	0					
ANR	4802494	Identifier	s		4802256	0					
ANR	4802495	Identifier	drive_serial_str		4802256	1					
ANR	4802496	Argument	sizeof ( s -> drive_serial_str )		4802256	1					
ANR	4802497	SizeofExpression	sizeof ( s -> drive_serial_str )		4802256	0					
ANR	4802498	Sizeof	sizeof		4802256	0					
ANR	4802499	PtrMemberAccess	s -> drive_serial_str		4802256	1					
ANR	4802500	Identifier	s		4802256	0					
ANR	4802501	Identifier	drive_serial_str		4802256	1					
ANR	4802502	Argument	serial		4802256	2					
ANR	4802503	Identifier	serial		4802256	0					
ANR	4802504	ElseStatement	else		4802256	0					
ANR	4802505	CompoundStatement		93:11:1386:1386	4802256	0					
ANR	4802506	ExpressionStatement	"snprintf ( s -> drive_serial_str , sizeof ( s -> drive_serial_str ) , ""QM%05d"" , s -> drive_serial )"	105:8:1692:1795	4802256	0	True				
ANR	4802507	CallExpression	"snprintf ( s -> drive_serial_str , sizeof ( s -> drive_serial_str ) , ""QM%05d"" , s -> drive_serial )"		4802256	0					
ANR	4802508	Callee	snprintf		4802256	0					
ANR	4802509	Identifier	snprintf		4802256	0					
ANR	4802510	ArgumentList	s -> drive_serial_str		4802256	1					
ANR	4802511	Argument	s -> drive_serial_str		4802256	0					
ANR	4802512	PtrMemberAccess	s -> drive_serial_str		4802256	0					
ANR	4802513	Identifier	s		4802256	0					
ANR	4802514	Identifier	drive_serial_str		4802256	1					
ANR	4802515	Argument	sizeof ( s -> drive_serial_str )		4802256	1					
ANR	4802516	SizeofExpression	sizeof ( s -> drive_serial_str )		4802256	0					
ANR	4802517	Sizeof	sizeof		4802256	0					
ANR	4802518	PtrMemberAccess	s -> drive_serial_str		4802256	1					
ANR	4802519	Identifier	s		4802256	0					
ANR	4802520	Identifier	drive_serial_str		4802256	1					
ANR	4802521	Argument	"""QM%05d"""		4802256	2					
ANR	4802522	PrimaryExpression	"""QM%05d"""		4802256	0					
ANR	4802523	Argument	s -> drive_serial		4802256	3					
ANR	4802524	PtrMemberAccess	s -> drive_serial		4802256	0					
ANR	4802525	Identifier	s		4802256	0					
ANR	4802526	Identifier	drive_serial		4802256	1					
ANR	4802527	IfStatement	if ( model )		4802256	19					
ANR	4802528	Condition	model	111:8:1813:1817	4802256	0	True				
ANR	4802529	Identifier	model		4802256	0					
ANR	4802530	CompoundStatement		101:15:1525:1525	4802256	1					
ANR	4802531	ExpressionStatement	"pstrcpy ( s -> drive_model_str , sizeof ( s -> drive_model_str ) , model )"	113:8:1831:1893	4802256	0	True				
ANR	4802532	CallExpression	"pstrcpy ( s -> drive_model_str , sizeof ( s -> drive_model_str ) , model )"		4802256	0					
ANR	4802533	Callee	pstrcpy		4802256	0					
ANR	4802534	Identifier	pstrcpy		4802256	0					
ANR	4802535	ArgumentList	s -> drive_model_str		4802256	1					
ANR	4802536	Argument	s -> drive_model_str		4802256	0					
ANR	4802537	PtrMemberAccess	s -> drive_model_str		4802256	0					
ANR	4802538	Identifier	s		4802256	0					
ANR	4802539	Identifier	drive_model_str		4802256	1					
ANR	4802540	Argument	sizeof ( s -> drive_model_str )		4802256	1					
ANR	4802541	SizeofExpression	sizeof ( s -> drive_model_str )		4802256	0					
ANR	4802542	Sizeof	sizeof		4802256	0					
ANR	4802543	PtrMemberAccess	s -> drive_model_str		4802256	1					
ANR	4802544	Identifier	s		4802256	0					
ANR	4802545	Identifier	drive_model_str		4802256	1					
ANR	4802546	Argument	model		4802256	2					
ANR	4802547	Identifier	model		4802256	0					
ANR	4802548	ElseStatement	else		4802256	0					
ANR	4802549	CompoundStatement		105:11:1612:1612	4802256	0					
ANR	4802550	SwitchStatement	switch ( kind )		4802256	0					
ANR	4802551	Condition	kind	117:16:1926:1929	4802256	0	True				
ANR	4802552	Identifier	kind		4802256	0					
ANR	4802553	CompoundStatement		107:22:1637:1637	4802256	1					
ANR	4802554	Label	case IDE_CD :	119:8:1943:1954	4802256	0	True				
ANR	4802555	Identifier	IDE_CD		4802256	0					
ANR	4802556	ExpressionStatement	"strcpy ( s -> drive_model_str , ""QEMU DVD-ROM"" )"	121:12:1969:2011	4802256	1	True				
ANR	4802557	CallExpression	"strcpy ( s -> drive_model_str , ""QEMU DVD-ROM"" )"		4802256	0					
ANR	4802558	Callee	strcpy		4802256	0					
ANR	4802559	Identifier	strcpy		4802256	0					
ANR	4802560	ArgumentList	s -> drive_model_str		4802256	1					
ANR	4802561	Argument	s -> drive_model_str		4802256	0					
ANR	4802562	PtrMemberAccess	s -> drive_model_str		4802256	0					
ANR	4802563	Identifier	s		4802256	0					
ANR	4802564	Identifier	drive_model_str		4802256	1					
ANR	4802565	Argument	"""QEMU DVD-ROM"""		4802256	1					
ANR	4802566	PrimaryExpression	"""QEMU DVD-ROM"""		4802256	0					
ANR	4802567	BreakStatement	break ;	123:12:2026:2031	4802256	2	True				
ANR	4802568	Label	case IDE_CFATA :	125:8:2042:2056	4802256	3	True				
ANR	4802569	Identifier	IDE_CFATA		4802256	0					
ANR	4802570	ExpressionStatement	"strcpy ( s -> drive_model_str , ""QEMU MICRODRIVE"" )"	127:12:2071:2116	4802256	4	True				
ANR	4802571	CallExpression	"strcpy ( s -> drive_model_str , ""QEMU MICRODRIVE"" )"		4802256	0					
ANR	4802572	Callee	strcpy		4802256	0					
ANR	4802573	Identifier	strcpy		4802256	0					
ANR	4802574	ArgumentList	s -> drive_model_str		4802256	1					
ANR	4802575	Argument	s -> drive_model_str		4802256	0					
ANR	4802576	PtrMemberAccess	s -> drive_model_str		4802256	0					
ANR	4802577	Identifier	s		4802256	0					
ANR	4802578	Identifier	drive_model_str		4802256	1					
ANR	4802579	Argument	"""QEMU MICRODRIVE"""		4802256	1					
ANR	4802580	PrimaryExpression	"""QEMU MICRODRIVE"""		4802256	0					
ANR	4802581	BreakStatement	break ;	129:12:2131:2136	4802256	5	True				
ANR	4802582	Label	default :	131:8:2147:2154	4802256	6	True				
ANR	4802583	Identifier	default		4802256	0					
ANR	4802584	ExpressionStatement	"strcpy ( s -> drive_model_str , ""QEMU HARDDISK"" )"	133:12:2169:2212	4802256	7	True				
ANR	4802585	CallExpression	"strcpy ( s -> drive_model_str , ""QEMU HARDDISK"" )"		4802256	0					
ANR	4802586	Callee	strcpy		4802256	0					
ANR	4802587	Identifier	strcpy		4802256	0					
ANR	4802588	ArgumentList	s -> drive_model_str		4802256	1					
ANR	4802589	Argument	s -> drive_model_str		4802256	0					
ANR	4802590	PtrMemberAccess	s -> drive_model_str		4802256	0					
ANR	4802591	Identifier	s		4802256	0					
ANR	4802592	Identifier	drive_model_str		4802256	1					
ANR	4802593	Argument	"""QEMU HARDDISK"""		4802256	1					
ANR	4802594	PrimaryExpression	"""QEMU HARDDISK"""		4802256	0					
ANR	4802595	BreakStatement	break ;	135:12:2227:2232	4802256	8	True				
ANR	4802596	IfStatement	if ( version )		4802256	20					
ANR	4802597	Condition	version	143:8:2263:2269	4802256	0	True				
ANR	4802598	Identifier	version		4802256	0					
ANR	4802599	CompoundStatement		133:17:1977:1977	4802256	1					
ANR	4802600	ExpressionStatement	"pstrcpy ( s -> version , sizeof ( s -> version ) , version )"	145:8:2283:2331	4802256	0	True				
ANR	4802601	CallExpression	"pstrcpy ( s -> version , sizeof ( s -> version ) , version )"		4802256	0					
ANR	4802602	Callee	pstrcpy		4802256	0					
ANR	4802603	Identifier	pstrcpy		4802256	0					
ANR	4802604	ArgumentList	s -> version		4802256	1					
ANR	4802605	Argument	s -> version		4802256	0					
ANR	4802606	PtrMemberAccess	s -> version		4802256	0					
ANR	4802607	Identifier	s		4802256	0					
ANR	4802608	Identifier	version		4802256	1					
ANR	4802609	Argument	sizeof ( s -> version )		4802256	1					
ANR	4802610	SizeofExpression	sizeof ( s -> version )		4802256	0					
ANR	4802611	Sizeof	sizeof		4802256	0					
ANR	4802612	PtrMemberAccess	s -> version		4802256	1					
ANR	4802613	Identifier	s		4802256	0					
ANR	4802614	Identifier	version		4802256	1					
ANR	4802615	Argument	version		4802256	2					
ANR	4802616	Identifier	version		4802256	0					
ANR	4802617	ElseStatement	else		4802256	0					
ANR	4802618	CompoundStatement		137:11:2050:2050	4802256	0					
ANR	4802619	ExpressionStatement	"pstrcpy ( s -> version , sizeof ( s -> version ) , qemu_get_version ( ) )"	149:8:2356:2415	4802256	0	True				
ANR	4802620	CallExpression	"pstrcpy ( s -> version , sizeof ( s -> version ) , qemu_get_version ( ) )"		4802256	0					
ANR	4802621	Callee	pstrcpy		4802256	0					
ANR	4802622	Identifier	pstrcpy		4802256	0					
ANR	4802623	ArgumentList	s -> version		4802256	1					
ANR	4802624	Argument	s -> version		4802256	0					
ANR	4802625	PtrMemberAccess	s -> version		4802256	0					
ANR	4802626	Identifier	s		4802256	0					
ANR	4802627	Identifier	version		4802256	1					
ANR	4802628	Argument	sizeof ( s -> version )		4802256	1					
ANR	4802629	SizeofExpression	sizeof ( s -> version )		4802256	0					
ANR	4802630	Sizeof	sizeof		4802256	0					
ANR	4802631	PtrMemberAccess	s -> version		4802256	1					
ANR	4802632	Identifier	s		4802256	0					
ANR	4802633	Identifier	version		4802256	1					
ANR	4802634	Argument	qemu_get_version ( )		4802256	2					
ANR	4802635	CallExpression	qemu_get_version ( )		4802256	0					
ANR	4802636	Callee	qemu_get_version		4802256	0					
ANR	4802637	Identifier	qemu_get_version		4802256	0					
ANR	4802638	ArgumentList			4802256	1					
ANR	4802639	ExpressionStatement	ide_reset ( s )	155:4:2431:2443	4802256	21	True				
ANR	4802640	CallExpression	ide_reset ( s )		4802256	0					
ANR	4802641	Callee	ide_reset		4802256	0					
ANR	4802642	Identifier	ide_reset		4802256	0					
ANR	4802643	ArgumentList	s		4802256	1					
ANR	4802644	Argument	s		4802256	0					
ANR	4802645	Identifier	s		4802256	0					
ANR	4802646	ExpressionStatement	bdrv_iostatus_enable ( bs )	157:4:2450:2474	4802256	22	True				
ANR	4802647	CallExpression	bdrv_iostatus_enable ( bs )		4802256	0					
ANR	4802648	Callee	bdrv_iostatus_enable		4802256	0					
ANR	4802649	Identifier	bdrv_iostatus_enable		4802256	0					
ANR	4802650	ArgumentList	bs		4802256	1					
ANR	4802651	Argument	bs		4802256	0					
ANR	4802652	Identifier	bs		4802256	0					
ANR	4802653	ReturnStatement	return 0 ;	159:4:2481:2489	4802256	23	True				
ANR	4802654	PrimaryExpression	0		4802256	0					
ANR	4802655	ReturnType	int		4802256	1					
ANR	4802656	Identifier	ide_init_drive		4802256	2					
ANR	4802657	ParameterList	"IDEState * s , BlockDriverState * bs , IDEDriveKind kind , const char * version , const char * serial , const char * model , uint64_t wwn , uint32_t cylinders , uint32_t heads , uint32_t secs , int chs_trans"		4802256	3					
ANR	4802658	Parameter	IDEState * s	1:19:19:29	4802256	0	True				
ANR	4802659	ParameterType	IDEState *		4802256	0					
ANR	4802660	Identifier	s		4802256	1					
ANR	4802661	Parameter	BlockDriverState * bs	1:32:32:51	4802256	1	True				
ANR	4802662	ParameterType	BlockDriverState *		4802256	0					
ANR	4802663	Identifier	bs		4802256	1					
ANR	4802664	Parameter	IDEDriveKind kind	1:54:54:70	4802256	2	True				
ANR	4802665	ParameterType	IDEDriveKind		4802256	0					
ANR	4802666	Identifier	kind		4802256	1					
ANR	4802667	Parameter	const char * version	3:19:93:111	4802256	3	True				
ANR	4802668	ParameterType	const char *		4802256	0					
ANR	4802669	Identifier	version		4802256	1					
ANR	4802670	Parameter	const char * serial	3:40:114:131	4802256	4	True				
ANR	4802671	ParameterType	const char *		4802256	0					
ANR	4802672	Identifier	serial		4802256	1					
ANR	4802673	Parameter	const char * model	3:60:134:150	4802256	5	True				
ANR	4802674	ParameterType	const char *		4802256	0					
ANR	4802675	Identifier	model		4802256	1					
ANR	4802676	Parameter	uint64_t wwn	5:19:173:184	4802256	6	True				
ANR	4802677	ParameterType	uint64_t		4802256	0					
ANR	4802678	Identifier	wwn		4802256	1					
ANR	4802679	Parameter	uint32_t cylinders	7:19:207:224	4802256	7	True				
ANR	4802680	ParameterType	uint32_t		4802256	0					
ANR	4802681	Identifier	cylinders		4802256	1					
ANR	4802682	Parameter	uint32_t heads	7:39:227:240	4802256	8	True				
ANR	4802683	ParameterType	uint32_t		4802256	0					
ANR	4802684	Identifier	heads		4802256	1					
ANR	4802685	Parameter	uint32_t secs	7:55:243:255	4802256	9	True				
ANR	4802686	ParameterType	uint32_t		4802256	0					
ANR	4802687	Identifier	secs		4802256	1					
ANR	4802688	Parameter	int chs_trans	9:19:278:290	4802256	10	True				
ANR	4802689	ParameterType	int		4802256	0					
ANR	4802690	Identifier	chs_trans		4802256	1					
ANR	4802691	CFGEntryNode	ENTRY		4802256		True				
ANR	4802692	CFGExitNode	EXIT		4802256		True				
ANR	4802693	Symbol	s -> drive_model_str		4802256						
ANR	4802694	Symbol	nb_sectors		4802256						
ANR	4802695	Symbol	chs_trans		4802256						
ANR	4802696	Symbol	s -> cylinders		4802256						
ANR	4802697	Symbol	IDE_CD		4802256						
ANR	4802698	Symbol	bdrv_is_inserted		4802256						
ANR	4802699	Symbol	s -> drive_serial		4802256						
ANR	4802700	Symbol	& nb_sectors		4802256						
ANR	4802701	Symbol	s -> nb_sectors		4802256						
ANR	4802702	Symbol	s -> version		4802256						
ANR	4802703	Symbol	& ide_cd_block_ops		4802256						
ANR	4802704	Symbol	wwn		4802256						
ANR	4802705	Symbol	bs		4802256						
ANR	4802706	Symbol	s -> drive_serial_str		4802256						
ANR	4802707	Symbol	s -> drive_kind		4802256						
ANR	4802708	Symbol	s -> heads		4802256						
ANR	4802709	Symbol	qemu_get_version		4802256						
ANR	4802710	Symbol	model		4802256						
ANR	4802711	Symbol	s -> wwn		4802256						
ANR	4802712	Symbol	s -> sectors		4802256						
ANR	4802713	Symbol	kind		4802256						
ANR	4802714	Symbol	s -> chs_trans		4802256						
ANR	4802715	Symbol	s -> smart_enabled		4802256						
ANR	4802716	Symbol	version		4802256						
ANR	4802717	Symbol	cylinders		4802256						
ANR	4802718	Symbol	s -> bs		4802256						
ANR	4802719	Symbol	s -> smart_selftest_count		4802256						
ANR	4802720	Symbol	bdrv_is_read_only		4802256						
ANR	4802721	Symbol	s		4802256						
ANR	4802722	Symbol	serial		4802256						
ANR	4802723	Symbol	s -> smart_autosave		4802256						
ANR	4802724	Symbol	secs		4802256						
ANR	4802725	Symbol	heads		4802256						
ANR	4802726	Symbol	* s		4802256						
ANR	4802727	Symbol	s -> smart_errors		4802256						
