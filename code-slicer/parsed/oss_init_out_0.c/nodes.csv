command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6264121	File	/home/p4ultr4n/workplace/ReVeal/raw_code/oss_init_out_0.c								
ANR	6264122	Function	oss_init_out	1:0:0:3080							
ANR	6264123	FunctionDef	"oss_init_out (HWVoiceOut * hw , audsettings_t * as)"		6264122	0					
ANR	6264124	CompoundStatement		3:0:61:3080	6264122	0					
ANR	6264125	IdentifierDeclStatement	OSSVoiceOut * oss = ( OSSVoiceOut * ) hw ;	5:4:68:105	6264122	0	True				
ANR	6264126	IdentifierDecl	* oss = ( OSSVoiceOut * ) hw		6264122	0					
ANR	6264127	IdentifierDeclType	OSSVoiceOut *		6264122	0					
ANR	6264128	Identifier	oss		6264122	1					
ANR	6264129	AssignmentExpression	* oss = ( OSSVoiceOut * ) hw		6264122	2		=			
ANR	6264130	Identifier	oss		6264122	0					
ANR	6264131	CastExpression	( OSSVoiceOut * ) hw		6264122	1					
ANR	6264132	CastTarget	OSSVoiceOut *		6264122	0					
ANR	6264133	Identifier	hw		6264122	1					
ANR	6264134	IdentifierDeclStatement	"struct oss_params req , obt ;"	7:4:112:138	6264122	1	True				
ANR	6264135	IdentifierDecl	req		6264122	0					
ANR	6264136	IdentifierDeclType	struct oss_params		6264122	0					
ANR	6264137	Identifier	req		6264122	1					
ANR	6264138	IdentifierDecl	obt		6264122	1					
ANR	6264139	IdentifierDeclType	struct oss_params		6264122	0					
ANR	6264140	Identifier	obt		6264122	1					
ANR	6264141	IdentifierDeclStatement	int endianness ;	9:4:145:159	6264122	2	True				
ANR	6264142	IdentifierDecl	endianness		6264122	0					
ANR	6264143	IdentifierDeclType	int		6264122	0					
ANR	6264144	Identifier	endianness		6264122	1					
ANR	6264145	IdentifierDeclStatement	int err ;	11:4:166:173	6264122	3	True				
ANR	6264146	IdentifierDecl	err		6264122	0					
ANR	6264147	IdentifierDeclType	int		6264122	0					
ANR	6264148	Identifier	err		6264122	1					
ANR	6264149	IdentifierDeclStatement	int fd ;	13:4:180:186	6264122	4	True				
ANR	6264150	IdentifierDecl	fd		6264122	0					
ANR	6264151	IdentifierDeclType	int		6264122	0					
ANR	6264152	Identifier	fd		6264122	1					
ANR	6264153	IdentifierDeclStatement	audfmt_e effective_fmt ;	15:4:193:215	6264122	5	True				
ANR	6264154	IdentifierDecl	effective_fmt		6264122	0					
ANR	6264155	IdentifierDeclType	audfmt_e		6264122	0					
ANR	6264156	Identifier	effective_fmt		6264122	1					
ANR	6264157	IdentifierDeclStatement	audsettings_t obt_as ;	17:4:222:242	6264122	6	True				
ANR	6264158	IdentifierDecl	obt_as		6264122	0					
ANR	6264159	IdentifierDeclType	audsettings_t		6264122	0					
ANR	6264160	Identifier	obt_as		6264122	1					
ANR	6264161	ExpressionStatement	oss -> fd = - 1	21:4:251:263	6264122	7	True				
ANR	6264162	AssignmentExpression	oss -> fd = - 1		6264122	0		=			
ANR	6264163	PtrMemberAccess	oss -> fd		6264122	0					
ANR	6264164	Identifier	oss		6264122	0					
ANR	6264165	Identifier	fd		6264122	1					
ANR	6264166	UnaryOperationExpression	- 1		6264122	1					
ANR	6264167	UnaryOperator	-		6264122	0					
ANR	6264168	PrimaryExpression	1		6264122	1					
ANR	6264169	ExpressionStatement	req . fmt = aud_to_ossfmt ( as -> fmt )	25:4:272:305	6264122	8	True				
ANR	6264170	AssignmentExpression	req . fmt = aud_to_ossfmt ( as -> fmt )		6264122	0		=			
ANR	6264171	MemberAccess	req . fmt		6264122	0					
ANR	6264172	Identifier	req		6264122	0					
ANR	6264173	Identifier	fmt		6264122	1					
ANR	6264174	CallExpression	aud_to_ossfmt ( as -> fmt )		6264122	1					
ANR	6264175	Callee	aud_to_ossfmt		6264122	0					
ANR	6264176	Identifier	aud_to_ossfmt		6264122	0					
ANR	6264177	ArgumentList	as -> fmt		6264122	1					
ANR	6264178	Argument	as -> fmt		6264122	0					
ANR	6264179	PtrMemberAccess	as -> fmt		6264122	0					
ANR	6264180	Identifier	as		6264122	0					
ANR	6264181	Identifier	fmt		6264122	1					
ANR	6264182	ExpressionStatement	req . freq = as -> freq	27:4:312:331	6264122	9	True				
ANR	6264183	AssignmentExpression	req . freq = as -> freq		6264122	0		=			
ANR	6264184	MemberAccess	req . freq		6264122	0					
ANR	6264185	Identifier	req		6264122	0					
ANR	6264186	Identifier	freq		6264122	1					
ANR	6264187	PtrMemberAccess	as -> freq		6264122	1					
ANR	6264188	Identifier	as		6264122	0					
ANR	6264189	Identifier	freq		6264122	1					
ANR	6264190	ExpressionStatement	req . nchannels = as -> nchannels	29:4:338:367	6264122	10	True				
ANR	6264191	AssignmentExpression	req . nchannels = as -> nchannels		6264122	0		=			
ANR	6264192	MemberAccess	req . nchannels		6264122	0					
ANR	6264193	Identifier	req		6264122	0					
ANR	6264194	Identifier	nchannels		6264122	1					
ANR	6264195	PtrMemberAccess	as -> nchannels		6264122	1					
ANR	6264196	Identifier	as		6264122	0					
ANR	6264197	Identifier	nchannels		6264122	1					
ANR	6264198	ExpressionStatement	req . fragsize = conf . fragsize	31:4:374:402	6264122	11	True				
ANR	6264199	AssignmentExpression	req . fragsize = conf . fragsize		6264122	0		=			
ANR	6264200	MemberAccess	req . fragsize		6264122	0					
ANR	6264201	Identifier	req		6264122	0					
ANR	6264202	Identifier	fragsize		6264122	1					
ANR	6264203	MemberAccess	conf . fragsize		6264122	1					
ANR	6264204	Identifier	conf		6264122	0					
ANR	6264205	Identifier	fragsize		6264122	1					
ANR	6264206	ExpressionStatement	req . nfrags = conf . nfrags	33:4:409:433	6264122	12	True				
ANR	6264207	AssignmentExpression	req . nfrags = conf . nfrags		6264122	0		=			
ANR	6264208	MemberAccess	req . nfrags		6264122	0					
ANR	6264209	Identifier	req		6264122	0					
ANR	6264210	Identifier	nfrags		6264122	1					
ANR	6264211	MemberAccess	conf . nfrags		6264122	1					
ANR	6264212	Identifier	conf		6264122	0					
ANR	6264213	Identifier	nfrags		6264122	1					
ANR	6264214	IfStatement	"if ( oss_open ( 0 , & req , & obt , & fd ) )"		6264122	13					
ANR	6264215	Condition	"oss_open ( 0 , & req , & obt , & fd )"	37:8:446:474	6264122	0	True				
ANR	6264216	CallExpression	"oss_open ( 0 , & req , & obt , & fd )"		6264122	0					
ANR	6264217	Callee	oss_open		6264122	0					
ANR	6264218	Identifier	oss_open		6264122	0					
ANR	6264219	ArgumentList	0		6264122	1					
ANR	6264220	Argument	0		6264122	0					
ANR	6264221	PrimaryExpression	0		6264122	0					
ANR	6264222	Argument	& req		6264122	1					
ANR	6264223	UnaryOperationExpression	& req		6264122	0					
ANR	6264224	UnaryOperator	&		6264122	0					
ANR	6264225	Identifier	req		6264122	1					
ANR	6264226	Argument	& obt		6264122	2					
ANR	6264227	UnaryOperationExpression	& obt		6264122	0					
ANR	6264228	UnaryOperator	&		6264122	0					
ANR	6264229	Identifier	obt		6264122	1					
ANR	6264230	Argument	& fd		6264122	3					
ANR	6264231	UnaryOperationExpression	& fd		6264122	0					
ANR	6264232	UnaryOperator	&		6264122	0					
ANR	6264233	Identifier	fd		6264122	1					
ANR	6264234	CompoundStatement		35:39:415:415	6264122	1					
ANR	6264235	ReturnStatement	return - 1 ;	39:8:488:497	6264122	0	True				
ANR	6264236	UnaryOperationExpression	- 1		6264122	0					
ANR	6264237	UnaryOperator	-		6264122	0					
ANR	6264238	PrimaryExpression	1		6264122	1					
ANR	6264239	ExpressionStatement	"err = oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"	45:4:513:571	6264122	14	True				
ANR	6264240	AssignmentExpression	"err = oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"		6264122	0		=			
ANR	6264241	Identifier	err		6264122	0					
ANR	6264242	CallExpression	"oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"		6264122	1					
ANR	6264243	Callee	oss_to_audfmt		6264122	0					
ANR	6264244	Identifier	oss_to_audfmt		6264122	0					
ANR	6264245	ArgumentList	obt . fmt		6264122	1					
ANR	6264246	Argument	obt . fmt		6264122	0					
ANR	6264247	MemberAccess	obt . fmt		6264122	0					
ANR	6264248	Identifier	obt		6264122	0					
ANR	6264249	Identifier	fmt		6264122	1					
ANR	6264250	Argument	& effective_fmt		6264122	1					
ANR	6264251	UnaryOperationExpression	& effective_fmt		6264122	0					
ANR	6264252	UnaryOperator	&		6264122	0					
ANR	6264253	Identifier	effective_fmt		6264122	1					
ANR	6264254	Argument	& endianness		6264122	2					
ANR	6264255	UnaryOperationExpression	& endianness		6264122	0					
ANR	6264256	UnaryOperator	&		6264122	0					
ANR	6264257	Identifier	endianness		6264122	1					
ANR	6264258	IfStatement	if ( err )		6264122	15					
ANR	6264259	Condition	err	47:8:582:584	6264122	0	True				
ANR	6264260	Identifier	err		6264122	0					
ANR	6264261	CompoundStatement		45:13:525:525	6264122	1					
ANR	6264262	ExpressionStatement	oss_anal_close ( & fd )	49:8:598:618	6264122	0	True				
ANR	6264263	CallExpression	oss_anal_close ( & fd )		6264122	0					
ANR	6264264	Callee	oss_anal_close		6264122	0					
ANR	6264265	Identifier	oss_anal_close		6264122	0					
ANR	6264266	ArgumentList	& fd		6264122	1					
ANR	6264267	Argument	& fd		6264122	0					
ANR	6264268	UnaryOperationExpression	& fd		6264122	0					
ANR	6264269	UnaryOperator	&		6264122	0					
ANR	6264270	Identifier	fd		6264122	1					
ANR	6264271	ReturnStatement	return - 1 ;	51:8:629:638	6264122	1	True				
ANR	6264272	UnaryOperationExpression	- 1		6264122	0					
ANR	6264273	UnaryOperator	-		6264122	0					
ANR	6264274	PrimaryExpression	1		6264122	1					
ANR	6264275	ExpressionStatement	obt_as . freq = obt . freq	57:4:654:676	6264122	16	True				
ANR	6264276	AssignmentExpression	obt_as . freq = obt . freq		6264122	0		=			
ANR	6264277	MemberAccess	obt_as . freq		6264122	0					
ANR	6264278	Identifier	obt_as		6264122	0					
ANR	6264279	Identifier	freq		6264122	1					
ANR	6264280	MemberAccess	obt . freq		6264122	1					
ANR	6264281	Identifier	obt		6264122	0					
ANR	6264282	Identifier	freq		6264122	1					
ANR	6264283	ExpressionStatement	obt_as . nchannels = obt . nchannels	59:4:683:715	6264122	17	True				
ANR	6264284	AssignmentExpression	obt_as . nchannels = obt . nchannels		6264122	0		=			
ANR	6264285	MemberAccess	obt_as . nchannels		6264122	0					
ANR	6264286	Identifier	obt_as		6264122	0					
ANR	6264287	Identifier	nchannels		6264122	1					
ANR	6264288	MemberAccess	obt . nchannels		6264122	1					
ANR	6264289	Identifier	obt		6264122	0					
ANR	6264290	Identifier	nchannels		6264122	1					
ANR	6264291	ExpressionStatement	obt_as . fmt = effective_fmt	61:4:722:748	6264122	18	True				
ANR	6264292	AssignmentExpression	obt_as . fmt = effective_fmt		6264122	0		=			
ANR	6264293	MemberAccess	obt_as . fmt		6264122	0					
ANR	6264294	Identifier	obt_as		6264122	0					
ANR	6264295	Identifier	fmt		6264122	1					
ANR	6264296	Identifier	effective_fmt		6264122	1					
ANR	6264297	ExpressionStatement	obt_as . endianness = endianness	63:4:755:785	6264122	19	True				
ANR	6264298	AssignmentExpression	obt_as . endianness = endianness		6264122	0		=			
ANR	6264299	MemberAccess	obt_as . endianness		6264122	0					
ANR	6264300	Identifier	obt_as		6264122	0					
ANR	6264301	Identifier	endianness		6264122	1					
ANR	6264302	Identifier	endianness		6264122	1					
ANR	6264303	ExpressionStatement	"audio_pcm_init_info ( & hw -> info , & obt_as )"	67:4:794:834	6264122	20	True				
ANR	6264304	CallExpression	"audio_pcm_init_info ( & hw -> info , & obt_as )"		6264122	0					
ANR	6264305	Callee	audio_pcm_init_info		6264122	0					
ANR	6264306	Identifier	audio_pcm_init_info		6264122	0					
ANR	6264307	ArgumentList	& hw -> info		6264122	1					
ANR	6264308	Argument	& hw -> info		6264122	0					
ANR	6264309	UnaryOperationExpression	& hw -> info		6264122	0					
ANR	6264310	UnaryOperator	&		6264122	0					
ANR	6264311	PtrMemberAccess	hw -> info		6264122	1					
ANR	6264312	Identifier	hw		6264122	0					
ANR	6264313	Identifier	info		6264122	1					
ANR	6264314	Argument	& obt_as		6264122	1					
ANR	6264315	UnaryOperationExpression	& obt_as		6264122	0					
ANR	6264316	UnaryOperator	&		6264122	0					
ANR	6264317	Identifier	obt_as		6264122	1					
ANR	6264318	ExpressionStatement	oss -> nfrags = obt . nfrags	69:4:841:865	6264122	21	True				
ANR	6264319	AssignmentExpression	oss -> nfrags = obt . nfrags		6264122	0		=			
ANR	6264320	PtrMemberAccess	oss -> nfrags		6264122	0					
ANR	6264321	Identifier	oss		6264122	0					
ANR	6264322	Identifier	nfrags		6264122	1					
ANR	6264323	MemberAccess	obt . nfrags		6264122	1					
ANR	6264324	Identifier	obt		6264122	0					
ANR	6264325	Identifier	nfrags		6264122	1					
ANR	6264326	ExpressionStatement	oss -> fragsize = obt . fragsize	71:4:872:900	6264122	22	True				
ANR	6264327	AssignmentExpression	oss -> fragsize = obt . fragsize		6264122	0		=			
ANR	6264328	PtrMemberAccess	oss -> fragsize		6264122	0					
ANR	6264329	Identifier	oss		6264122	0					
ANR	6264330	Identifier	fragsize		6264122	1					
ANR	6264331	MemberAccess	obt . fragsize		6264122	1					
ANR	6264332	Identifier	obt		6264122	0					
ANR	6264333	Identifier	fragsize		6264122	1					
ANR	6264334	IfStatement	if ( obt . nfrags * obt . fragsize & hw -> info . align )		6264122	23					
ANR	6264335	Condition	obt . nfrags * obt . fragsize & hw -> info . align	75:8:913:954	6264122	0	True				
ANR	6264336	BitAndExpression	obt . nfrags * obt . fragsize & hw -> info . align		6264122	0		&			
ANR	6264337	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264122	0		*			
ANR	6264338	MemberAccess	obt . nfrags		6264122	0					
ANR	6264339	Identifier	obt		6264122	0					
ANR	6264340	Identifier	nfrags		6264122	1					
ANR	6264341	MemberAccess	obt . fragsize		6264122	1					
ANR	6264342	Identifier	obt		6264122	0					
ANR	6264343	Identifier	fragsize		6264122	1					
ANR	6264344	MemberAccess	hw -> info . align		6264122	1					
ANR	6264345	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264346	Identifier	hw		6264122	0					
ANR	6264347	Identifier	info		6264122	1					
ANR	6264348	Identifier	align		6264122	1					
ANR	6264349	CompoundStatement		73:52:895:895	6264122	1					
ANR	6264350	ExpressionStatement	"dolog ( ""warning: Misaligned DAC buffer, size %d, alignment %d\\n"" , obt . nfrags * obt . fragsize , hw -> info . align + 1 )"	77:8:968:1096	6264122	0	True				
ANR	6264351	CallExpression	"dolog ( ""warning: Misaligned DAC buffer, size %d, alignment %d\\n"" , obt . nfrags * obt . fragsize , hw -> info . align + 1 )"		6264122	0					
ANR	6264352	Callee	dolog		6264122	0					
ANR	6264353	Identifier	dolog		6264122	0					
ANR	6264354	ArgumentList	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264122	1					
ANR	6264355	Argument	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264122	0					
ANR	6264356	PrimaryExpression	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264122	0					
ANR	6264357	Argument	obt . nfrags * obt . fragsize		6264122	1					
ANR	6264358	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264122	0		*			
ANR	6264359	MemberAccess	obt . nfrags		6264122	0					
ANR	6264360	Identifier	obt		6264122	0					
ANR	6264361	Identifier	nfrags		6264122	1					
ANR	6264362	MemberAccess	obt . fragsize		6264122	1					
ANR	6264363	Identifier	obt		6264122	0					
ANR	6264364	Identifier	fragsize		6264122	1					
ANR	6264365	Argument	hw -> info . align + 1		6264122	2					
ANR	6264366	AdditiveExpression	hw -> info . align + 1		6264122	0		+			
ANR	6264367	MemberAccess	hw -> info . align		6264122	0					
ANR	6264368	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264369	Identifier	hw		6264122	0					
ANR	6264370	Identifier	info		6264122	1					
ANR	6264371	Identifier	align		6264122	1					
ANR	6264372	PrimaryExpression	1		6264122	1					
ANR	6264373	ExpressionStatement	hw -> samples = ( obt . nfrags * obt . fragsize ) >> hw -> info . shift	85:4:1112:1171	6264122	24	True				
ANR	6264374	AssignmentExpression	hw -> samples = ( obt . nfrags * obt . fragsize ) >> hw -> info . shift		6264122	0		=			
ANR	6264375	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264376	Identifier	hw		6264122	0					
ANR	6264377	Identifier	samples		6264122	1					
ANR	6264378	ShiftExpression	( obt . nfrags * obt . fragsize ) >> hw -> info . shift		6264122	1		>>			
ANR	6264379	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264122	0		*			
ANR	6264380	MemberAccess	obt . nfrags		6264122	0					
ANR	6264381	Identifier	obt		6264122	0					
ANR	6264382	Identifier	nfrags		6264122	1					
ANR	6264383	MemberAccess	obt . fragsize		6264122	1					
ANR	6264384	Identifier	obt		6264122	0					
ANR	6264385	Identifier	fragsize		6264122	1					
ANR	6264386	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264387	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264388	Identifier	hw		6264122	0					
ANR	6264389	Identifier	info		6264122	1					
ANR	6264390	Identifier	shift		6264122	1					
ANR	6264391	ExpressionStatement	oss -> mmapped = 0	89:4:1180:1196	6264122	25	True				
ANR	6264392	AssignmentExpression	oss -> mmapped = 0		6264122	0		=			
ANR	6264393	PtrMemberAccess	oss -> mmapped		6264122	0					
ANR	6264394	Identifier	oss		6264122	0					
ANR	6264395	Identifier	mmapped		6264122	1					
ANR	6264396	PrimaryExpression	0		6264122	1					
ANR	6264397	IfStatement	if ( conf . try_mmap )		6264122	26					
ANR	6264398	Condition	conf . try_mmap	91:8:1207:1219	6264122	0	True				
ANR	6264399	MemberAccess	conf . try_mmap		6264122	0					
ANR	6264400	Identifier	conf		6264122	0					
ANR	6264401	Identifier	try_mmap		6264122	1					
ANR	6264402	CompoundStatement		89:23:1160:1160	6264122	1					
ANR	6264403	ExpressionStatement	"oss -> pcm_buf = mmap ( 0 , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"	93:8:1233:1423	6264122	0	True				
ANR	6264404	AssignmentExpression	"oss -> pcm_buf = mmap ( 0 , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"		6264122	0		=			
ANR	6264405	PtrMemberAccess	oss -> pcm_buf		6264122	0					
ANR	6264406	Identifier	oss		6264122	0					
ANR	6264407	Identifier	pcm_buf		6264122	1					
ANR	6264408	CallExpression	"mmap ( 0 , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"		6264122	1					
ANR	6264409	Callee	mmap		6264122	0					
ANR	6264410	Identifier	mmap		6264122	0					
ANR	6264411	ArgumentList	0		6264122	1					
ANR	6264412	Argument	0		6264122	0					
ANR	6264413	PrimaryExpression	0		6264122	0					
ANR	6264414	Argument	hw -> samples << hw -> info . shift		6264122	1					
ANR	6264415	ShiftExpression	hw -> samples << hw -> info . shift		6264122	0		<<			
ANR	6264416	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264417	Identifier	hw		6264122	0					
ANR	6264418	Identifier	samples		6264122	1					
ANR	6264419	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264420	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264421	Identifier	hw		6264122	0					
ANR	6264422	Identifier	info		6264122	1					
ANR	6264423	Identifier	shift		6264122	1					
ANR	6264424	Argument	PROT_READ | PROT_WRITE		6264122	2					
ANR	6264425	InclusiveOrExpression	PROT_READ | PROT_WRITE		6264122	0		|			
ANR	6264426	Identifier	PROT_READ		6264122	0					
ANR	6264427	Identifier	PROT_WRITE		6264122	1					
ANR	6264428	Argument	MAP_SHARED		6264122	3					
ANR	6264429	Identifier	MAP_SHARED		6264122	0					
ANR	6264430	Argument	fd		6264122	4					
ANR	6264431	Identifier	fd		6264122	0					
ANR	6264432	Argument	0		6264122	5					
ANR	6264433	PrimaryExpression	0		6264122	0					
ANR	6264434	IfStatement	if ( oss -> pcm_buf == MAP_FAILED )		6264122	1					
ANR	6264435	Condition	oss -> pcm_buf == MAP_FAILED	109:12:1438:1463	6264122	0	True				
ANR	6264436	EqualityExpression	oss -> pcm_buf == MAP_FAILED		6264122	0		==			
ANR	6264437	PtrMemberAccess	oss -> pcm_buf		6264122	0					
ANR	6264438	Identifier	oss		6264122	0					
ANR	6264439	Identifier	pcm_buf		6264122	1					
ANR	6264440	Identifier	MAP_FAILED		6264122	1					
ANR	6264441	CompoundStatement		107:40:1404:1404	6264122	1					
ANR	6264442	ExpressionStatement	"oss_logerr ( errno , ""Failed to map %d bytes of DAC\\n"" , hw -> samples << hw -> info . shift )"	111:12:1481:1590	6264122	0	True				
ANR	6264443	CallExpression	"oss_logerr ( errno , ""Failed to map %d bytes of DAC\\n"" , hw -> samples << hw -> info . shift )"		6264122	0					
ANR	6264444	Callee	oss_logerr		6264122	0					
ANR	6264445	Identifier	oss_logerr		6264122	0					
ANR	6264446	ArgumentList	errno		6264122	1					
ANR	6264447	Argument	errno		6264122	0					
ANR	6264448	Identifier	errno		6264122	0					
ANR	6264449	Argument	"""Failed to map %d bytes of DAC\\n"""		6264122	1					
ANR	6264450	PrimaryExpression	"""Failed to map %d bytes of DAC\\n"""		6264122	0					
ANR	6264451	Argument	hw -> samples << hw -> info . shift		6264122	2					
ANR	6264452	ShiftExpression	hw -> samples << hw -> info . shift		6264122	0		<<			
ANR	6264453	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264454	Identifier	hw		6264122	0					
ANR	6264455	Identifier	samples		6264122	1					
ANR	6264456	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264457	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264458	Identifier	hw		6264122	0					
ANR	6264459	Identifier	info		6264122	1					
ANR	6264460	Identifier	shift		6264122	1					
ANR	6264461	ElseStatement	else		6264122	0					
ANR	6264462	CompoundStatement		117:12:1583:1595	6264122	0					
ANR	6264463	IdentifierDeclStatement	int err ;	117:12:1623:1630	6264122	0	True				
ANR	6264464	IdentifierDecl	err		6264122	0					
ANR	6264465	IdentifierDeclType	int		6264122	0					
ANR	6264466	Identifier	err		6264122	1					
ANR	6264467	IdentifierDeclStatement	int trig = 0 ;	119:12:1645:1657	6264122	1	True				
ANR	6264468	IdentifierDecl	trig = 0		6264122	0					
ANR	6264469	IdentifierDeclType	int		6264122	0					
ANR	6264470	Identifier	trig		6264122	1					
ANR	6264471	AssignmentExpression	trig = 0		6264122	2		=			
ANR	6264472	Identifier	trig		6264122	0					
ANR	6264473	PrimaryExpression	0		6264122	1					
ANR	6264474	IfStatement	"if ( ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0 )"		6264122	2					
ANR	6264475	Condition	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"	121:16:1676:1719	6264122	0	True				
ANR	6264476	RelationalExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"		6264122	0		<			
ANR	6264477	CallExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig )"		6264122	0					
ANR	6264478	Callee	ioctl		6264122	0					
ANR	6264479	Identifier	ioctl		6264122	0					
ANR	6264480	ArgumentList	fd		6264122	1					
ANR	6264481	Argument	fd		6264122	0					
ANR	6264482	Identifier	fd		6264122	0					
ANR	6264483	Argument	SNDCTL_DSP_SETTRIGGER		6264122	1					
ANR	6264484	Identifier	SNDCTL_DSP_SETTRIGGER		6264122	0					
ANR	6264485	Argument	& trig		6264122	2					
ANR	6264486	UnaryOperationExpression	& trig		6264122	0					
ANR	6264487	UnaryOperator	&		6264122	0					
ANR	6264488	Identifier	trig		6264122	1					
ANR	6264489	PrimaryExpression	0		6264122	1					
ANR	6264490	CompoundStatement		119:62:1660:1660	6264122	1					
ANR	6264491	ExpressionStatement	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER 0 failed\\n"" )"	123:16:1741:1795	6264122	0	True				
ANR	6264492	CallExpression	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER 0 failed\\n"" )"		6264122	0					
ANR	6264493	Callee	oss_logerr		6264122	0					
ANR	6264494	Identifier	oss_logerr		6264122	0					
ANR	6264495	ArgumentList	errno		6264122	1					
ANR	6264496	Argument	errno		6264122	0					
ANR	6264497	Identifier	errno		6264122	0					
ANR	6264498	Argument	"""SNDCTL_DSP_SETTRIGGER 0 failed\\n"""		6264122	1					
ANR	6264499	PrimaryExpression	"""SNDCTL_DSP_SETTRIGGER 0 failed\\n"""		6264122	0					
ANR	6264500	ElseStatement	else		6264122	0					
ANR	6264501	CompoundStatement		125:17:1768:1768	6264122	0					
ANR	6264502	ExpressionStatement	trig = PCM_ENABLE_OUTPUT	129:16:1849:1873	6264122	0	True				
ANR	6264503	AssignmentExpression	trig = PCM_ENABLE_OUTPUT		6264122	0		=			
ANR	6264504	Identifier	trig		6264122	0					
ANR	6264505	Identifier	PCM_ENABLE_OUTPUT		6264122	1					
ANR	6264506	IfStatement	"if ( ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0 )"		6264122	1					
ANR	6264507	Condition	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"	131:20:1896:1939	6264122	0	True				
ANR	6264508	RelationalExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"		6264122	0		<			
ANR	6264509	CallExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig )"		6264122	0					
ANR	6264510	Callee	ioctl		6264122	0					
ANR	6264511	Identifier	ioctl		6264122	0					
ANR	6264512	ArgumentList	fd		6264122	1					
ANR	6264513	Argument	fd		6264122	0					
ANR	6264514	Identifier	fd		6264122	0					
ANR	6264515	Argument	SNDCTL_DSP_SETTRIGGER		6264122	1					
ANR	6264516	Identifier	SNDCTL_DSP_SETTRIGGER		6264122	0					
ANR	6264517	Argument	& trig		6264122	2					
ANR	6264518	UnaryOperationExpression	& trig		6264122	0					
ANR	6264519	UnaryOperator	&		6264122	0					
ANR	6264520	Identifier	trig		6264122	1					
ANR	6264521	PrimaryExpression	0		6264122	1					
ANR	6264522	CompoundStatement		129:66:1880:1880	6264122	1					
ANR	6264523	ExpressionStatement	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"" )"	133:20:1965:2112	6264122	0	True				
ANR	6264524	CallExpression	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"" )"		6264122	0					
ANR	6264525	Callee	oss_logerr		6264122	0					
ANR	6264526	Identifier	oss_logerr		6264122	0					
ANR	6264527	ArgumentList	errno		6264122	1					
ANR	6264528	Argument	errno		6264122	0					
ANR	6264529	Identifier	errno		6264122	0					
ANR	6264530	Argument	"""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"""		6264122	1					
ANR	6264531	PrimaryExpression	"""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"""		6264122	0					
ANR	6264532	ElseStatement	else		6264122	0					
ANR	6264533	CompoundStatement		141:21:2093:2093	6264122	0					
ANR	6264534	ExpressionStatement	oss -> mmapped = 1	145:20:2178:2194	6264122	0	True				
ANR	6264535	AssignmentExpression	oss -> mmapped = 1		6264122	0		=			
ANR	6264536	PtrMemberAccess	oss -> mmapped		6264122	0					
ANR	6264537	Identifier	oss		6264122	0					
ANR	6264538	Identifier	mmapped		6264122	1					
ANR	6264539	PrimaryExpression	1		6264122	1					
ANR	6264540	IfStatement	if ( ! oss -> mmapped )		6264122	3					
ANR	6264541	Condition	! oss -> mmapped	153:16:2249:2261	6264122	0	True				
ANR	6264542	UnaryOperationExpression	! oss -> mmapped		6264122	0					
ANR	6264543	UnaryOperator	!		6264122	0					
ANR	6264544	PtrMemberAccess	oss -> mmapped		6264122	1					
ANR	6264545	Identifier	oss		6264122	0					
ANR	6264546	Identifier	mmapped		6264122	1					
ANR	6264547	CompoundStatement		151:31:2202:2202	6264122	1					
ANR	6264548	ExpressionStatement	"err = munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"	155:16:2283:2341	6264122	0	True				
ANR	6264549	AssignmentExpression	"err = munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264122	0		=			
ANR	6264550	Identifier	err		6264122	0					
ANR	6264551	CallExpression	"munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264122	1					
ANR	6264552	Callee	munmap		6264122	0					
ANR	6264553	Identifier	munmap		6264122	0					
ANR	6264554	ArgumentList	oss -> pcm_buf		6264122	1					
ANR	6264555	Argument	oss -> pcm_buf		6264122	0					
ANR	6264556	PtrMemberAccess	oss -> pcm_buf		6264122	0					
ANR	6264557	Identifier	oss		6264122	0					
ANR	6264558	Identifier	pcm_buf		6264122	1					
ANR	6264559	Argument	hw -> samples << hw -> info . shift		6264122	1					
ANR	6264560	ShiftExpression	hw -> samples << hw -> info . shift		6264122	0		<<			
ANR	6264561	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264562	Identifier	hw		6264122	0					
ANR	6264563	Identifier	samples		6264122	1					
ANR	6264564	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264565	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264566	Identifier	hw		6264122	0					
ANR	6264567	Identifier	info		6264122	1					
ANR	6264568	Identifier	shift		6264122	1					
ANR	6264569	IfStatement	if ( err )		6264122	1					
ANR	6264570	Condition	err	157:20:2364:2366	6264122	0	True				
ANR	6264571	Identifier	err		6264122	0					
ANR	6264572	CompoundStatement		155:25:2307:2307	6264122	1					
ANR	6264573	ExpressionStatement	"oss_logerr ( errno , ""Failed to unmap buffer %p size %d\\n"" , oss -> pcm_buf , hw -> samples << hw -> info . shift )"	159:20:2392:2527	6264122	0	True				
ANR	6264574	CallExpression	"oss_logerr ( errno , ""Failed to unmap buffer %p size %d\\n"" , oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264122	0					
ANR	6264575	Callee	oss_logerr		6264122	0					
ANR	6264576	Identifier	oss_logerr		6264122	0					
ANR	6264577	ArgumentList	errno		6264122	1					
ANR	6264578	Argument	errno		6264122	0					
ANR	6264579	Identifier	errno		6264122	0					
ANR	6264580	Argument	"""Failed to unmap buffer %p size %d\\n"""		6264122	1					
ANR	6264581	PrimaryExpression	"""Failed to unmap buffer %p size %d\\n"""		6264122	0					
ANR	6264582	Argument	oss -> pcm_buf		6264122	2					
ANR	6264583	PtrMemberAccess	oss -> pcm_buf		6264122	0					
ANR	6264584	Identifier	oss		6264122	0					
ANR	6264585	Identifier	pcm_buf		6264122	1					
ANR	6264586	Argument	hw -> samples << hw -> info . shift		6264122	3					
ANR	6264587	ShiftExpression	hw -> samples << hw -> info . shift		6264122	0		<<			
ANR	6264588	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264589	Identifier	hw		6264122	0					
ANR	6264590	Identifier	samples		6264122	1					
ANR	6264591	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264592	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264593	Identifier	hw		6264122	0					
ANR	6264594	Identifier	info		6264122	1					
ANR	6264595	Identifier	shift		6264122	1					
ANR	6264596	IfStatement	if ( ! oss -> mmapped )		6264122	27					
ANR	6264597	Condition	! oss -> mmapped	173:8:2592:2604	6264122	0	True				
ANR	6264598	UnaryOperationExpression	! oss -> mmapped		6264122	0					
ANR	6264599	UnaryOperator	!		6264122	0					
ANR	6264600	PtrMemberAccess	oss -> mmapped		6264122	1					
ANR	6264601	Identifier	oss		6264122	0					
ANR	6264602	Identifier	mmapped		6264122	1					
ANR	6264603	CompoundStatement		171:23:2545:2545	6264122	1					
ANR	6264604	ExpressionStatement	"oss -> pcm_buf = audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"	175:8:2618:2746	6264122	0	True				
ANR	6264605	AssignmentExpression	"oss -> pcm_buf = audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"		6264122	0		=			
ANR	6264606	PtrMemberAccess	oss -> pcm_buf		6264122	0					
ANR	6264607	Identifier	oss		6264122	0					
ANR	6264608	Identifier	pcm_buf		6264122	1					
ANR	6264609	CallExpression	"audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"		6264122	1					
ANR	6264610	Callee	audio_calloc		6264122	0					
ANR	6264611	Identifier	audio_calloc		6264122	0					
ANR	6264612	ArgumentList	AUDIO_FUNC		6264122	1					
ANR	6264613	Argument	AUDIO_FUNC		6264122	0					
ANR	6264614	Identifier	AUDIO_FUNC		6264122	0					
ANR	6264615	Argument	hw -> samples		6264122	1					
ANR	6264616	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264617	Identifier	hw		6264122	0					
ANR	6264618	Identifier	samples		6264122	1					
ANR	6264619	Argument	1 << hw -> info . shift		6264122	2					
ANR	6264620	ShiftExpression	1 << hw -> info . shift		6264122	0		<<			
ANR	6264621	PrimaryExpression	1		6264122	0					
ANR	6264622	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264623	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264624	Identifier	hw		6264122	0					
ANR	6264625	Identifier	info		6264122	1					
ANR	6264626	Identifier	shift		6264122	1					
ANR	6264627	IfStatement	if ( ! oss -> pcm_buf )		6264122	1					
ANR	6264628	Condition	! oss -> pcm_buf	185:12:2761:2773	6264122	0	True				
ANR	6264629	UnaryOperationExpression	! oss -> pcm_buf		6264122	0					
ANR	6264630	UnaryOperator	!		6264122	0					
ANR	6264631	PtrMemberAccess	oss -> pcm_buf		6264122	1					
ANR	6264632	Identifier	oss		6264122	0					
ANR	6264633	Identifier	pcm_buf		6264122	1					
ANR	6264634	CompoundStatement		183:27:2714:2714	6264122	1					
ANR	6264635	ExpressionStatement	"dolog ( ""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"" , hw -> samples , 1 << hw -> info . shift )"	187:12:2791:2964	6264122	0	True				
ANR	6264636	CallExpression	"dolog ( ""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"" , hw -> samples , 1 << hw -> info . shift )"		6264122	0					
ANR	6264637	Callee	dolog		6264122	0					
ANR	6264638	Identifier	dolog		6264122	0					
ANR	6264639	ArgumentList	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264122	1					
ANR	6264640	Argument	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264122	0					
ANR	6264641	PrimaryExpression	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264122	0					
ANR	6264642	Argument	hw -> samples		6264122	1					
ANR	6264643	PtrMemberAccess	hw -> samples		6264122	0					
ANR	6264644	Identifier	hw		6264122	0					
ANR	6264645	Identifier	samples		6264122	1					
ANR	6264646	Argument	1 << hw -> info . shift		6264122	2					
ANR	6264647	ShiftExpression	1 << hw -> info . shift		6264122	0		<<			
ANR	6264648	PrimaryExpression	1		6264122	0					
ANR	6264649	MemberAccess	hw -> info . shift		6264122	1					
ANR	6264650	PtrMemberAccess	hw -> info		6264122	0					
ANR	6264651	Identifier	hw		6264122	0					
ANR	6264652	Identifier	info		6264122	1					
ANR	6264653	Identifier	shift		6264122	1					
ANR	6264654	ExpressionStatement	oss_anal_close ( & fd )	197:12:2979:2999	6264122	1	True				
ANR	6264655	CallExpression	oss_anal_close ( & fd )		6264122	0					
ANR	6264656	Callee	oss_anal_close		6264122	0					
ANR	6264657	Identifier	oss_anal_close		6264122	0					
ANR	6264658	ArgumentList	& fd		6264122	1					
ANR	6264659	Argument	& fd		6264122	0					
ANR	6264660	UnaryOperationExpression	& fd		6264122	0					
ANR	6264661	UnaryOperator	&		6264122	0					
ANR	6264662	Identifier	fd		6264122	1					
ANR	6264663	ReturnStatement	return - 1 ;	199:12:3014:3023	6264122	2	True				
ANR	6264664	UnaryOperationExpression	- 1		6264122	0					
ANR	6264665	UnaryOperator	-		6264122	0					
ANR	6264666	PrimaryExpression	1		6264122	1					
ANR	6264667	ExpressionStatement	oss -> fd = fd	207:4:3050:3062	6264122	28	True				
ANR	6264668	AssignmentExpression	oss -> fd = fd		6264122	0		=			
ANR	6264669	PtrMemberAccess	oss -> fd		6264122	0					
ANR	6264670	Identifier	oss		6264122	0					
ANR	6264671	Identifier	fd		6264122	1					
ANR	6264672	Identifier	fd		6264122	1					
ANR	6264673	ReturnStatement	return 0 ;	209:4:3069:3077	6264122	29	True				
ANR	6264674	PrimaryExpression	0		6264122	0					
ANR	6264675	ReturnType	static int		6264122	1					
ANR	6264676	Identifier	oss_init_out		6264122	2					
ANR	6264677	ParameterList	"HWVoiceOut * hw , audsettings_t * as"		6264122	3					
ANR	6264678	Parameter	HWVoiceOut * hw	1:25:25:38	6264122	0	True				
ANR	6264679	ParameterType	HWVoiceOut *		6264122	0					
ANR	6264680	Identifier	hw		6264122	1					
ANR	6264681	Parameter	audsettings_t * as	1:41:41:57	6264122	1	True				
ANR	6264682	ParameterType	audsettings_t *		6264122	0					
ANR	6264683	Identifier	as		6264122	1					
ANR	6264684	CFGEntryNode	ENTRY		6264122		True				
ANR	6264685	CFGExitNode	EXIT		6264122		True				
ANR	6264686	Symbol	obt		6264122						
ANR	6264687	Symbol	as -> nchannels		6264122						
ANR	6264688	Symbol	obt . nchannels		6264122						
ANR	6264689	Symbol	& req		6264122						
ANR	6264690	Symbol	& trig		6264122						
ANR	6264691	Symbol	conf		6264122						
ANR	6264692	Symbol	oss		6264122						
ANR	6264693	Symbol	hw		6264122						
ANR	6264694	Symbol	req . nfrags		6264122						
ANR	6264695	Symbol	obt_as . endianness		6264122						
ANR	6264696	Symbol	PROT_WRITE		6264122						
ANR	6264697	Symbol	req . nchannels		6264122						
ANR	6264698	Symbol	& effective_fmt		6264122						
ANR	6264699	Symbol	SNDCTL_DSP_SETTRIGGER		6264122						
ANR	6264700	Symbol	audio_calloc		6264122						
ANR	6264701	Symbol	obt_as . fmt		6264122						
ANR	6264702	Symbol	obt_as . freq		6264122						
ANR	6264703	Symbol	req		6264122						
ANR	6264704	Symbol	& hw -> info		6264122						
ANR	6264705	Symbol	& obt		6264122						
ANR	6264706	Symbol	errno		6264122						
ANR	6264707	Symbol	oss_to_audfmt		6264122						
ANR	6264708	Symbol	obt_as . nchannels		6264122						
ANR	6264709	Symbol	hw -> info		6264122						
ANR	6264710	Symbol	obt . nfrags		6264122						
ANR	6264711	Symbol	PROT_READ		6264122						
ANR	6264712	Symbol	trig		6264122						
ANR	6264713	Symbol	& endianness		6264122						
ANR	6264714	Symbol	AUDIO_FUNC		6264122						
ANR	6264715	Symbol	oss -> pcm_buf		6264122						
ANR	6264716	Symbol	as		6264122						
ANR	6264717	Symbol	conf . fragsize		6264122						
ANR	6264718	Symbol	MAP_SHARED		6264122						
ANR	6264719	Symbol	obt_as		6264122						
ANR	6264720	Symbol	req . fmt		6264122						
ANR	6264721	Symbol	req . fragsize		6264122						
ANR	6264722	Symbol	oss -> mmapped		6264122						
ANR	6264723	Symbol	fd		6264122						
ANR	6264724	Symbol	req . freq		6264122						
ANR	6264725	Symbol	oss_open		6264122						
ANR	6264726	Symbol	hw -> info . align		6264122						
ANR	6264727	Symbol	hw -> info . shift		6264122						
ANR	6264728	Symbol	conf . nfrags		6264122						
ANR	6264729	Symbol	oss -> fd		6264122						
ANR	6264730	Symbol	MAP_FAILED		6264122						
ANR	6264731	Symbol	ioctl		6264122						
ANR	6264732	Symbol	& obt_as		6264122						
ANR	6264733	Symbol	* hw		6264122						
ANR	6264734	Symbol	obt . fmt		6264122						
ANR	6264735	Symbol	effective_fmt		6264122						
ANR	6264736	Symbol	err		6264122						
ANR	6264737	Symbol	obt . freq		6264122						
ANR	6264738	Symbol	aud_to_ossfmt		6264122						
ANR	6264739	Symbol	hw -> samples		6264122						
ANR	6264740	Symbol	conf . try_mmap		6264122						
ANR	6264741	Symbol	& fd		6264122						
ANR	6264742	Symbol	obt . fragsize		6264122						
ANR	6264743	Symbol	as -> fmt		6264122						
ANR	6264744	Symbol	PCM_ENABLE_OUTPUT		6264122						
ANR	6264745	Symbol	munmap		6264122						
ANR	6264746	Symbol	oss -> fragsize		6264122						
ANR	6264747	Symbol	as -> freq		6264122						
ANR	6264748	Symbol	oss -> nfrags		6264122						
ANR	6264749	Symbol	* oss		6264122						
ANR	6264750	Symbol	* as		6264122						
ANR	6264751	Symbol	mmap		6264122						
ANR	6264752	Symbol	endianness		6264122						
