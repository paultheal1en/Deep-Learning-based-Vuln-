command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	64773	File	/home/p4ultr4n/workplace/ReVeal/raw_code/HELPER_45_0.c								
ANR	64774	Function	mvcos	1:0:0:2833							
ANR	64775	FunctionDef	"mvcos (CPUS390XState * env , uint64_t dest , uint64_t src , uint64_t len)"		64774	0					
ANR	64776	CompoundStatement		5:0:111:2833	64774	0					
ANR	64777	IdentifierDeclStatement	const uint8_t psw_key = ( env -> psw . mask & PSW_MASK_KEY ) >> PSW_SHIFT_KEY ;	7:4:118:189	64774	0	True				
ANR	64778	IdentifierDecl	psw_key = ( env -> psw . mask & PSW_MASK_KEY ) >> PSW_SHIFT_KEY		64774	0					
ANR	64779	IdentifierDeclType	const uint8_t		64774	0					
ANR	64780	Identifier	psw_key		64774	1					
ANR	64781	AssignmentExpression	psw_key = ( env -> psw . mask & PSW_MASK_KEY ) >> PSW_SHIFT_KEY		64774	2		=			
ANR	64782	Identifier	psw_key		64774	0					
ANR	64783	ShiftExpression	( env -> psw . mask & PSW_MASK_KEY ) >> PSW_SHIFT_KEY		64774	1		>>			
ANR	64784	BitAndExpression	env -> psw . mask & PSW_MASK_KEY		64774	0		&			
ANR	64785	MemberAccess	env -> psw . mask		64774	0					
ANR	64786	PtrMemberAccess	env -> psw		64774	0					
ANR	64787	Identifier	env		64774	0					
ANR	64788	Identifier	psw		64774	1					
ANR	64789	Identifier	mask		64774	1					
ANR	64790	Identifier	PSW_MASK_KEY		64774	1					
ANR	64791	Identifier	PSW_SHIFT_KEY		64774	1					
ANR	64792	IdentifierDeclStatement	const uint8_t psw_as = ( env -> psw . mask & PSW_MASK_ASC ) >> PSW_SHIFT_ASC ;	9:4:196:266	64774	1	True				
ANR	64793	IdentifierDecl	psw_as = ( env -> psw . mask & PSW_MASK_ASC ) >> PSW_SHIFT_ASC		64774	0					
ANR	64794	IdentifierDeclType	const uint8_t		64774	0					
ANR	64795	Identifier	psw_as		64774	1					
ANR	64796	AssignmentExpression	psw_as = ( env -> psw . mask & PSW_MASK_ASC ) >> PSW_SHIFT_ASC		64774	2		=			
ANR	64797	Identifier	psw_as		64774	0					
ANR	64798	ShiftExpression	( env -> psw . mask & PSW_MASK_ASC ) >> PSW_SHIFT_ASC		64774	1		>>			
ANR	64799	BitAndExpression	env -> psw . mask & PSW_MASK_ASC		64774	0		&			
ANR	64800	MemberAccess	env -> psw . mask		64774	0					
ANR	64801	PtrMemberAccess	env -> psw		64774	0					
ANR	64802	Identifier	env		64774	0					
ANR	64803	Identifier	psw		64774	1					
ANR	64804	Identifier	mask		64774	1					
ANR	64805	Identifier	PSW_MASK_ASC		64774	1					
ANR	64806	Identifier	PSW_SHIFT_ASC		64774	1					
ANR	64807	IdentifierDeclStatement	const uint64_t r0 = env -> regs [ 0 ] ;	11:4:273:305	64774	2	True				
ANR	64808	IdentifierDecl	r0 = env -> regs [ 0 ]		64774	0					
ANR	64809	IdentifierDeclType	const uint64_t		64774	0					
ANR	64810	Identifier	r0		64774	1					
ANR	64811	AssignmentExpression	r0 = env -> regs [ 0 ]		64774	2		=			
ANR	64812	Identifier	r0		64774	0					
ANR	64813	ArrayIndexing	env -> regs [ 0 ]		64774	1					
ANR	64814	PtrMemberAccess	env -> regs		64774	0					
ANR	64815	Identifier	env		64774	0					
ANR	64816	Identifier	regs		64774	1					
ANR	64817	PrimaryExpression	0		64774	1					
ANR	64818	IdentifierDeclStatement	const uintptr_t ra = GETPC ( ) ;	13:4:312:340	64774	3	True				
ANR	64819	IdentifierDecl	ra = GETPC ( )		64774	0					
ANR	64820	IdentifierDeclType	const uintptr_t		64774	0					
ANR	64821	Identifier	ra		64774	1					
ANR	64822	AssignmentExpression	ra = GETPC ( )		64774	2		=			
ANR	64823	Identifier	ra		64774	0					
ANR	64824	CallExpression	GETPC ( )		64774	1					
ANR	64825	Callee	GETPC		64774	0					
ANR	64826	Identifier	GETPC		64774	0					
ANR	64827	ArgumentList			64774	1					
ANR	64828	IdentifierDeclStatement	CPUState * cs = CPU ( s390_env_get_cpu ( env ) ) ;	15:4:347:388	64774	4	True				
ANR	64829	IdentifierDecl	* cs = CPU ( s390_env_get_cpu ( env ) )		64774	0					
ANR	64830	IdentifierDeclType	CPUState *		64774	0					
ANR	64831	Identifier	cs		64774	1					
ANR	64832	AssignmentExpression	* cs = CPU ( s390_env_get_cpu ( env ) )		64774	2		=			
ANR	64833	Identifier	cs		64774	0					
ANR	64834	CallExpression	CPU ( s390_env_get_cpu ( env ) )		64774	1					
ANR	64835	Callee	CPU		64774	0					
ANR	64836	Identifier	CPU		64774	0					
ANR	64837	ArgumentList	s390_env_get_cpu ( env )		64774	1					
ANR	64838	Argument	s390_env_get_cpu ( env )		64774	0					
ANR	64839	CallExpression	s390_env_get_cpu ( env )		64774	0					
ANR	64840	Callee	s390_env_get_cpu		64774	0					
ANR	64841	Identifier	s390_env_get_cpu		64774	0					
ANR	64842	ArgumentList	env		64774	1					
ANR	64843	Argument	env		64774	0					
ANR	64844	Identifier	env		64774	0					
ANR	64845	IdentifierDeclStatement	"uint8_t dest_key , dest_as , dest_k , dest_a ;"	17:4:395:436	64774	5	True				
ANR	64846	IdentifierDecl	dest_key		64774	0					
ANR	64847	IdentifierDeclType	uint8_t		64774	0					
ANR	64848	Identifier	dest_key		64774	1					
ANR	64849	IdentifierDecl	dest_as		64774	1					
ANR	64850	IdentifierDeclType	uint8_t		64774	0					
ANR	64851	Identifier	dest_as		64774	1					
ANR	64852	IdentifierDecl	dest_k		64774	2					
ANR	64853	IdentifierDeclType	uint8_t		64774	0					
ANR	64854	Identifier	dest_k		64774	1					
ANR	64855	IdentifierDecl	dest_a		64774	3					
ANR	64856	IdentifierDeclType	uint8_t		64774	0					
ANR	64857	Identifier	dest_a		64774	1					
ANR	64858	IdentifierDeclStatement	"uint8_t src_key , src_as , src_k , src_a ;"	19:4:443:480	64774	6	True				
ANR	64859	IdentifierDecl	src_key		64774	0					
ANR	64860	IdentifierDeclType	uint8_t		64774	0					
ANR	64861	Identifier	src_key		64774	1					
ANR	64862	IdentifierDecl	src_as		64774	1					
ANR	64863	IdentifierDeclType	uint8_t		64774	0					
ANR	64864	Identifier	src_as		64774	1					
ANR	64865	IdentifierDecl	src_k		64774	2					
ANR	64866	IdentifierDeclType	uint8_t		64774	0					
ANR	64867	Identifier	src_k		64774	1					
ANR	64868	IdentifierDecl	src_a		64774	3					
ANR	64869	IdentifierDeclType	uint8_t		64774	0					
ANR	64870	Identifier	src_a		64774	1					
ANR	64871	IdentifierDeclStatement	uint64_t val ;	21:4:487:499	64774	7	True				
ANR	64872	IdentifierDecl	val		64774	0					
ANR	64873	IdentifierDeclType	uint64_t		64774	0					
ANR	64874	Identifier	val		64774	1					
ANR	64875	IdentifierDeclStatement	int cc = 0 ;	23:4:506:516	64774	8	True				
ANR	64876	IdentifierDecl	cc = 0		64774	0					
ANR	64877	IdentifierDeclType	int		64774	0					
ANR	64878	Identifier	cc		64774	1					
ANR	64879	AssignmentExpression	cc = 0		64774	2		=			
ANR	64880	Identifier	cc		64774	0					
ANR	64881	PrimaryExpression	0		64774	1					
ANR	64882	Statement	HELPER_LOG	27:4:525:534	64774	9	True				
ANR	64883	Statement	(	27:14:535:535	64774	10	True				
ANR	64884	Statement	"""%s dest %"""	27:15:536:546	64774	11	True				
ANR	64885	Statement	PRIx64	27:27:548:553	64774	12	True				
ANR	64886	Statement	""", src %"""	27:34:555:563	64774	13	True				
ANR	64887	Statement	PRIx64	27:44:565:570	64774	14	True				
ANR	64888	Statement	""", len %"""	27:51:572:580	64774	15	True				
ANR	64889	Statement	PRIx64	27:61:582:587	64774	16	True				
ANR	64890	Statement	"""\\n"""	27:68:589:592	64774	17	True				
ANR	64891	Statement	","	27:72:593:593	64774	18	True				
ANR	64892	Statement	__func__	29:15:611:618	64774	19	True				
ANR	64893	Statement	","	29:23:619:619	64774	20	True				
ANR	64894	Statement	dest	29:25:621:624	64774	21	True				
ANR	64895	Statement	","	29:29:625:625	64774	22	True				
ANR	64896	Statement	src	29:31:627:629	64774	23	True				
ANR	64897	Statement	","	29:34:630:630	64774	24	True				
ANR	64898	Statement	len	29:36:632:634	64774	25	True				
ANR	64899	Statement	)	29:39:635:635	64774	26	True				
ANR	64900	ExpressionStatement		29:40:636:636	64774	27	True				
ANR	64901	IfStatement	if ( ! ( env -> psw . mask & PSW_MASK_DAT ) )		64774	28					
ANR	64902	Condition	! ( env -> psw . mask & PSW_MASK_DAT )	33:8:649:679	64774	0	True				
ANR	64903	UnaryOperationExpression	! ( env -> psw . mask & PSW_MASK_DAT )		64774	0					
ANR	64904	UnaryOperator	!		64774	0					
ANR	64905	BitAndExpression	env -> psw . mask & PSW_MASK_DAT		64774	1		&			
ANR	64906	MemberAccess	env -> psw . mask		64774	0					
ANR	64907	PtrMemberAccess	env -> psw		64774	0					
ANR	64908	Identifier	env		64774	0					
ANR	64909	Identifier	psw		64774	1					
ANR	64910	Identifier	mask		64774	1					
ANR	64911	Identifier	PSW_MASK_DAT		64774	1					
ANR	64912	CompoundStatement		29:41:570:570	64774	1					
ANR	64913	ExpressionStatement	"cpu_restore_state ( cs , ra )"	35:8:693:718	64774	0	True				
ANR	64914	CallExpression	"cpu_restore_state ( cs , ra )"		64774	0					
ANR	64915	Callee	cpu_restore_state		64774	0					
ANR	64916	Identifier	cpu_restore_state		64774	0					
ANR	64917	ArgumentList	cs		64774	1					
ANR	64918	Argument	cs		64774	0					
ANR	64919	Identifier	cs		64774	0					
ANR	64920	Argument	ra		64774	1					
ANR	64921	Identifier	ra		64774	0					
ANR	64922	ExpressionStatement	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"	37:8:729:770	64774	1	True				
ANR	64923	CallExpression	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"		64774	0					
ANR	64924	Callee	program_interrupt		64774	0					
ANR	64925	Identifier	program_interrupt		64774	0					
ANR	64926	ArgumentList	env		64774	1					
ANR	64927	Argument	env		64774	0					
ANR	64928	Identifier	env		64774	0					
ANR	64929	Argument	PGM_SPECIAL_OP		64774	1					
ANR	64930	Identifier	PGM_SPECIAL_OP		64774	0					
ANR	64931	Argument	6		64774	2					
ANR	64932	PrimaryExpression	6		64774	0					
ANR	64933	Statement	val	45:4:856:858	64774	29	True				
ANR	64934	Statement	=	45:8:860:860	64774	30	True				
ANR	64935	Statement	(	45:10:862:862	64774	31	True				
ANR	64936	Statement	r0	45:11:863:864	64774	32	True				
ANR	64937	Statement	&	45:14:866:866	64774	33	True				
ANR	64938	Statement	0xffff0000UL	45:16:868:879	64774	34	True				
ANR	64939	Statement	L	45:28:880:880	64774	35	True				
ANR	64940	Statement	)	45:29:881:881	64774	36	True				
ANR	64941	Statement	>>	45:31:883:884	64774	37	True				
ANR	64942	ExpressionStatement	16	45:34:886:888	64774	38	True				
ANR	64943	PrimaryExpression	16		64774	0					
ANR	64944	ExpressionStatement	dest_key = ( val >> 12 ) & 0xf	47:4:895:923	64774	39	True				
ANR	64945	AssignmentExpression	dest_key = ( val >> 12 ) & 0xf		64774	0		=			
ANR	64946	Identifier	dest_key		64774	0					
ANR	64947	BitAndExpression	( val >> 12 ) & 0xf		64774	1		&			
ANR	64948	ShiftExpression	val >> 12		64774	0		>>			
ANR	64949	Identifier	val		64774	0					
ANR	64950	PrimaryExpression	12		64774	1					
ANR	64951	PrimaryExpression	0xf		64774	1					
ANR	64952	ExpressionStatement	dest_as = ( val >> 6 ) & 0x3	49:4:930:956	64774	40	True				
ANR	64953	AssignmentExpression	dest_as = ( val >> 6 ) & 0x3		64774	0		=			
ANR	64954	Identifier	dest_as		64774	0					
ANR	64955	BitAndExpression	( val >> 6 ) & 0x3		64774	1		&			
ANR	64956	ShiftExpression	val >> 6		64774	0		>>			
ANR	64957	Identifier	val		64774	0					
ANR	64958	PrimaryExpression	6		64774	1					
ANR	64959	PrimaryExpression	0x3		64774	1					
ANR	64960	ExpressionStatement	dest_k = ( val >> 1 ) & 0x1	51:4:963:988	64774	41	True				
ANR	64961	AssignmentExpression	dest_k = ( val >> 1 ) & 0x1		64774	0		=			
ANR	64962	Identifier	dest_k		64774	0					
ANR	64963	BitAndExpression	( val >> 1 ) & 0x1		64774	1		&			
ANR	64964	ShiftExpression	val >> 1		64774	0		>>			
ANR	64965	Identifier	val		64774	0					
ANR	64966	PrimaryExpression	1		64774	1					
ANR	64967	PrimaryExpression	0x1		64774	1					
ANR	64968	ExpressionStatement	dest_a = val & 0x1	53:4:995:1013	64774	42	True				
ANR	64969	AssignmentExpression	dest_a = val & 0x1		64774	0		=			
ANR	64970	Identifier	dest_a		64774	0					
ANR	64971	BitAndExpression	val & 0x1		64774	1		&			
ANR	64972	Identifier	val		64774	0					
ANR	64973	PrimaryExpression	0x1		64774	1					
ANR	64974	Statement	val	59:4:1092:1094	64774	43	True				
ANR	64975	Statement	=	59:8:1096:1096	64774	44	True				
ANR	64976	Statement	(	59:10:1098:1098	64774	45	True				
ANR	64977	Statement	r0	59:11:1099:1100	64774	46	True				
ANR	64978	Statement	&	59:14:1102:1102	64774	47	True				
ANR	64979	Statement	0x0000ffffUL	59:16:1104:1115	64774	48	True				
ANR	64980	Statement	L	59:28:1116:1116	64774	49	True				
ANR	64981	Statement	)	59:29:1117:1117	64774	50	True				
ANR	64982	ExpressionStatement		59:30:1118:1118	64774	51	True				
ANR	64983	ExpressionStatement	src_key = ( val >> 12 ) & 0xf	61:4:1125:1152	64774	52	True				
ANR	64984	AssignmentExpression	src_key = ( val >> 12 ) & 0xf		64774	0		=			
ANR	64985	Identifier	src_key		64774	0					
ANR	64986	BitAndExpression	( val >> 12 ) & 0xf		64774	1		&			
ANR	64987	ShiftExpression	val >> 12		64774	0		>>			
ANR	64988	Identifier	val		64774	0					
ANR	64989	PrimaryExpression	12		64774	1					
ANR	64990	PrimaryExpression	0xf		64774	1					
ANR	64991	ExpressionStatement	src_as = ( val >> 6 ) & 0x3	63:4:1159:1184	64774	53	True				
ANR	64992	AssignmentExpression	src_as = ( val >> 6 ) & 0x3		64774	0		=			
ANR	64993	Identifier	src_as		64774	0					
ANR	64994	BitAndExpression	( val >> 6 ) & 0x3		64774	1		&			
ANR	64995	ShiftExpression	val >> 6		64774	0		>>			
ANR	64996	Identifier	val		64774	0					
ANR	64997	PrimaryExpression	6		64774	1					
ANR	64998	PrimaryExpression	0x3		64774	1					
ANR	64999	ExpressionStatement	src_k = ( val >> 1 ) & 0x1	65:4:1191:1215	64774	54	True				
ANR	65000	AssignmentExpression	src_k = ( val >> 1 ) & 0x1		64774	0		=			
ANR	65001	Identifier	src_k		64774	0					
ANR	65002	BitAndExpression	( val >> 1 ) & 0x1		64774	1		&			
ANR	65003	ShiftExpression	val >> 1		64774	0		>>			
ANR	65004	Identifier	val		64774	0					
ANR	65005	PrimaryExpression	1		64774	1					
ANR	65006	PrimaryExpression	0x1		64774	1					
ANR	65007	ExpressionStatement	src_a = val & 0x1	67:4:1222:1239	64774	55	True				
ANR	65008	AssignmentExpression	src_a = val & 0x1		64774	0		=			
ANR	65009	Identifier	src_a		64774	0					
ANR	65010	BitAndExpression	val & 0x1		64774	1		&			
ANR	65011	Identifier	val		64774	0					
ANR	65012	PrimaryExpression	0x1		64774	1					
ANR	65013	IfStatement	if ( ! dest_k )		64774	56					
ANR	65014	Condition	! dest_k	71:8:1252:1258	64774	0	True				
ANR	65015	UnaryOperationExpression	! dest_k		64774	0					
ANR	65016	UnaryOperator	!		64774	0					
ANR	65017	Identifier	dest_k		64774	1					
ANR	65018	CompoundStatement		67:17:1149:1149	64774	1					
ANR	65019	ExpressionStatement	dest_key = psw_key	73:8:1272:1290	64774	0	True				
ANR	65020	AssignmentExpression	dest_key = psw_key		64774	0		=			
ANR	65021	Identifier	dest_key		64774	0					
ANR	65022	Identifier	psw_key		64774	1					
ANR	65023	IfStatement	if ( ! src_k )		64774	57					
ANR	65024	Condition	! src_k	77:8:1308:1313	64774	0	True				
ANR	65025	UnaryOperationExpression	! src_k		64774	0					
ANR	65026	UnaryOperator	!		64774	0					
ANR	65027	Identifier	src_k		64774	1					
ANR	65028	CompoundStatement		73:16:1204:1204	64774	1					
ANR	65029	ExpressionStatement	src_key = psw_key	79:8:1327:1344	64774	0	True				
ANR	65030	AssignmentExpression	src_key = psw_key		64774	0		=			
ANR	65031	Identifier	src_key		64774	0					
ANR	65032	Identifier	psw_key		64774	1					
ANR	65033	IfStatement	if ( ! dest_a )		64774	58					
ANR	65034	Condition	! dest_a	83:8:1362:1368	64774	0	True				
ANR	65035	UnaryOperationExpression	! dest_a		64774	0					
ANR	65036	UnaryOperator	!		64774	0					
ANR	65037	Identifier	dest_a		64774	1					
ANR	65038	CompoundStatement		79:17:1259:1259	64774	1					
ANR	65039	ExpressionStatement	dest_as = psw_as	85:8:1382:1398	64774	0	True				
ANR	65040	AssignmentExpression	dest_as = psw_as		64774	0		=			
ANR	65041	Identifier	dest_as		64774	0					
ANR	65042	Identifier	psw_as		64774	1					
ANR	65043	IfStatement	if ( ! src_a )		64774	59					
ANR	65044	Condition	! src_a	89:8:1416:1421	64774	0	True				
ANR	65045	UnaryOperationExpression	! src_a		64774	0					
ANR	65046	UnaryOperator	!		64774	0					
ANR	65047	Identifier	src_a		64774	1					
ANR	65048	CompoundStatement		85:16:1312:1312	64774	1					
ANR	65049	ExpressionStatement	src_as = psw_as	91:8:1435:1450	64774	0	True				
ANR	65050	AssignmentExpression	src_as = psw_as		64774	0		=			
ANR	65051	Identifier	src_as		64774	0					
ANR	65052	Identifier	psw_as		64774	1					
ANR	65053	IfStatement	if ( dest_a && dest_as == AS_HOME && ( env -> psw . mask & PSW_MASK_PSTATE ) )		64774	60					
ANR	65054	Condition	dest_a && dest_as == AS_HOME && ( env -> psw . mask & PSW_MASK_PSTATE )	97:8:1470:1534	64774	0	True				
ANR	65055	AndExpression	dest_a && dest_as == AS_HOME && ( env -> psw . mask & PSW_MASK_PSTATE )		64774	0		&&			
ANR	65056	Identifier	dest_a		64774	0					
ANR	65057	AndExpression	dest_as == AS_HOME && ( env -> psw . mask & PSW_MASK_PSTATE )		64774	1		&&			
ANR	65058	EqualityExpression	dest_as == AS_HOME		64774	0		==			
ANR	65059	Identifier	dest_as		64774	0					
ANR	65060	Identifier	AS_HOME		64774	1					
ANR	65061	BitAndExpression	env -> psw . mask & PSW_MASK_PSTATE		64774	1		&			
ANR	65062	MemberAccess	env -> psw . mask		64774	0					
ANR	65063	PtrMemberAccess	env -> psw		64774	0					
ANR	65064	Identifier	env		64774	0					
ANR	65065	Identifier	psw		64774	1					
ANR	65066	Identifier	mask		64774	1					
ANR	65067	Identifier	PSW_MASK_PSTATE		64774	1					
ANR	65068	CompoundStatement		93:75:1425:1425	64774	1					
ANR	65069	ExpressionStatement	"cpu_restore_state ( cs , ra )"	99:8:1548:1573	64774	0	True				
ANR	65070	CallExpression	"cpu_restore_state ( cs , ra )"		64774	0					
ANR	65071	Callee	cpu_restore_state		64774	0					
ANR	65072	Identifier	cpu_restore_state		64774	0					
ANR	65073	ArgumentList	cs		64774	1					
ANR	65074	Argument	cs		64774	0					
ANR	65075	Identifier	cs		64774	0					
ANR	65076	Argument	ra		64774	1					
ANR	65077	Identifier	ra		64774	0					
ANR	65078	ExpressionStatement	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"	101:8:1584:1625	64774	1	True				
ANR	65079	CallExpression	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"		64774	0					
ANR	65080	Callee	program_interrupt		64774	0					
ANR	65081	Identifier	program_interrupt		64774	0					
ANR	65082	ArgumentList	env		64774	1					
ANR	65083	Argument	env		64774	0					
ANR	65084	Identifier	env		64774	0					
ANR	65085	Argument	PGM_SPECIAL_OP		64774	1					
ANR	65086	Identifier	PGM_SPECIAL_OP		64774	0					
ANR	65087	Argument	6		64774	2					
ANR	65088	PrimaryExpression	6		64774	0					
ANR	65089	IfStatement	if ( ! ( env -> cregs [ 0 ] & CR0_SECONDARY ) && ( dest_as == AS_SECONDARY || src_as == AS_SECONDARY ) )		64774	61					
ANR	65090	Condition	! ( env -> cregs [ 0 ] & CR0_SECONDARY ) && ( dest_as == AS_SECONDARY || src_as == AS_SECONDARY )	105:8:1643:1738	64774	0	True				
ANR	65091	AndExpression	! ( env -> cregs [ 0 ] & CR0_SECONDARY ) && ( dest_as == AS_SECONDARY || src_as == AS_SECONDARY )		64774	0		&&			
ANR	65092	UnaryOperationExpression	! ( env -> cregs [ 0 ] & CR0_SECONDARY )		64774	0					
ANR	65093	UnaryOperator	!		64774	0					
ANR	65094	BitAndExpression	env -> cregs [ 0 ] & CR0_SECONDARY		64774	1		&			
ANR	65095	ArrayIndexing	env -> cregs [ 0 ]		64774	0					
ANR	65096	PtrMemberAccess	env -> cregs		64774	0					
ANR	65097	Identifier	env		64774	0					
ANR	65098	Identifier	cregs		64774	1					
ANR	65099	PrimaryExpression	0		64774	1					
ANR	65100	Identifier	CR0_SECONDARY		64774	1					
ANR	65101	OrExpression	dest_as == AS_SECONDARY || src_as == AS_SECONDARY		64774	1		||			
ANR	65102	EqualityExpression	dest_as == AS_SECONDARY		64774	0		==			
ANR	65103	Identifier	dest_as		64774	0					
ANR	65104	Identifier	AS_SECONDARY		64774	1					
ANR	65105	EqualityExpression	src_as == AS_SECONDARY		64774	1		==			
ANR	65106	Identifier	src_as		64774	0					
ANR	65107	Identifier	AS_SECONDARY		64774	1					
ANR	65108	CompoundStatement		103:61:1629:1629	64774	1					
ANR	65109	ExpressionStatement	"cpu_restore_state ( cs , ra )"	109:8:1752:1777	64774	0	True				
ANR	65110	CallExpression	"cpu_restore_state ( cs , ra )"		64774	0					
ANR	65111	Callee	cpu_restore_state		64774	0					
ANR	65112	Identifier	cpu_restore_state		64774	0					
ANR	65113	ArgumentList	cs		64774	1					
ANR	65114	Argument	cs		64774	0					
ANR	65115	Identifier	cs		64774	0					
ANR	65116	Argument	ra		64774	1					
ANR	65117	Identifier	ra		64774	0					
ANR	65118	ExpressionStatement	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"	111:8:1788:1829	64774	1	True				
ANR	65119	CallExpression	"program_interrupt ( env , PGM_SPECIAL_OP , 6 )"		64774	0					
ANR	65120	Callee	program_interrupt		64774	0					
ANR	65121	Identifier	program_interrupt		64774	0					
ANR	65122	ArgumentList	env		64774	1					
ANR	65123	Argument	env		64774	0					
ANR	65124	Identifier	env		64774	0					
ANR	65125	Argument	PGM_SPECIAL_OP		64774	1					
ANR	65126	Identifier	PGM_SPECIAL_OP		64774	0					
ANR	65127	Argument	6		64774	2					
ANR	65128	PrimaryExpression	6		64774	0					
ANR	65129	IfStatement	"if ( ! psw_key_valid ( env , dest_key ) || ! psw_key_valid ( env , src_key ) )"		64774	62					
ANR	65130	Condition	"! psw_key_valid ( env , dest_key ) || ! psw_key_valid ( env , src_key )"	115:8:1847:1907	64774	0	True				
ANR	65131	OrExpression	"! psw_key_valid ( env , dest_key ) || ! psw_key_valid ( env , src_key )"		64774	0		||			
ANR	65132	UnaryOperationExpression	"! psw_key_valid ( env , dest_key )"		64774	0					
ANR	65133	UnaryOperator	!		64774	0					
ANR	65134	CallExpression	"psw_key_valid ( env , dest_key )"		64774	1					
ANR	65135	Callee	psw_key_valid		64774	0					
ANR	65136	Identifier	psw_key_valid		64774	0					
ANR	65137	ArgumentList	env		64774	1					
ANR	65138	Argument	env		64774	0					
ANR	65139	Identifier	env		64774	0					
ANR	65140	Argument	dest_key		64774	1					
ANR	65141	Identifier	dest_key		64774	0					
ANR	65142	UnaryOperationExpression	"! psw_key_valid ( env , src_key )"		64774	1					
ANR	65143	UnaryOperator	!		64774	0					
ANR	65144	CallExpression	"psw_key_valid ( env , src_key )"		64774	1					
ANR	65145	Callee	psw_key_valid		64774	0					
ANR	65146	Identifier	psw_key_valid		64774	0					
ANR	65147	ArgumentList	env		64774	1					
ANR	65148	Argument	env		64774	0					
ANR	65149	Identifier	env		64774	0					
ANR	65150	Argument	src_key		64774	1					
ANR	65151	Identifier	src_key		64774	0					
ANR	65152	CompoundStatement		111:71:1798:1798	64774	1					
ANR	65153	ExpressionStatement	"cpu_restore_state ( cs , ra )"	117:8:1921:1946	64774	0	True				
ANR	65154	CallExpression	"cpu_restore_state ( cs , ra )"		64774	0					
ANR	65155	Callee	cpu_restore_state		64774	0					
ANR	65156	Identifier	cpu_restore_state		64774	0					
ANR	65157	ArgumentList	cs		64774	1					
ANR	65158	Argument	cs		64774	0					
ANR	65159	Identifier	cs		64774	0					
ANR	65160	Argument	ra		64774	1					
ANR	65161	Identifier	ra		64774	0					
ANR	65162	ExpressionStatement	"program_interrupt ( env , PGM_PRIVILEGED , 6 )"	119:8:1957:1998	64774	1	True				
ANR	65163	CallExpression	"program_interrupt ( env , PGM_PRIVILEGED , 6 )"		64774	0					
ANR	65164	Callee	program_interrupt		64774	0					
ANR	65165	Identifier	program_interrupt		64774	0					
ANR	65166	ArgumentList	env		64774	1					
ANR	65167	Argument	env		64774	0					
ANR	65168	Identifier	env		64774	0					
ANR	65169	Argument	PGM_PRIVILEGED		64774	1					
ANR	65170	Identifier	PGM_PRIVILEGED		64774	0					
ANR	65171	Argument	6		64774	2					
ANR	65172	PrimaryExpression	6		64774	0					
ANR	65173	ExpressionStatement	"len = wrap_length ( env , len )"	125:4:2014:2041	64774	63	True				
ANR	65174	AssignmentExpression	"len = wrap_length ( env , len )"		64774	0		=			
ANR	65175	Identifier	len		64774	0					
ANR	65176	CallExpression	"wrap_length ( env , len )"		64774	1					
ANR	65177	Callee	wrap_length		64774	0					
ANR	65178	Identifier	wrap_length		64774	0					
ANR	65179	ArgumentList	env		64774	1					
ANR	65180	Argument	env		64774	0					
ANR	65181	Identifier	env		64774	0					
ANR	65182	Argument	len		64774	1					
ANR	65183	Identifier	len		64774	0					
ANR	65184	IfStatement	if ( len > 4096 )		64774	64					
ANR	65185	Condition	len > 4096	127:8:2052:2061	64774	0	True				
ANR	65186	RelationalExpression	len > 4096		64774	0		>			
ANR	65187	Identifier	len		64774	0					
ANR	65188	PrimaryExpression	4096		64774	1					
ANR	65189	CompoundStatement		123:20:1952:1952	64774	1					
ANR	65190	ExpressionStatement	cc = 3	129:8:2075:2081	64774	0	True				
ANR	65191	AssignmentExpression	cc = 3		64774	0		=			
ANR	65192	Identifier	cc		64774	0					
ANR	65193	PrimaryExpression	3		64774	1					
ANR	65194	ExpressionStatement	len = 4096	131:8:2092:2102	64774	1	True				
ANR	65195	AssignmentExpression	len = 4096		64774	0		=			
ANR	65196	Identifier	len		64774	0					
ANR	65197	PrimaryExpression	4096		64774	1					
ANR	65198	IfStatement	if ( src_as == AS_ACCREG || dest_as == AS_ACCREG || ( env -> psw . mask & PSW_MASK_PSTATE ) )		64774	65					
ANR	65199	Condition	src_as == AS_ACCREG || dest_as == AS_ACCREG || ( env -> psw . mask & PSW_MASK_PSTATE )	139:8:2203:2291	64774	0	True				
ANR	65200	OrExpression	src_as == AS_ACCREG || dest_as == AS_ACCREG || ( env -> psw . mask & PSW_MASK_PSTATE )		64774	0		||			
ANR	65201	EqualityExpression	src_as == AS_ACCREG		64774	0		==			
ANR	65202	Identifier	src_as		64774	0					
ANR	65203	Identifier	AS_ACCREG		64774	1					
ANR	65204	OrExpression	dest_as == AS_ACCREG || ( env -> psw . mask & PSW_MASK_PSTATE )		64774	1		||			
ANR	65205	EqualityExpression	dest_as == AS_ACCREG		64774	0		==			
ANR	65206	Identifier	dest_as		64774	0					
ANR	65207	Identifier	AS_ACCREG		64774	1					
ANR	65208	BitAndExpression	env -> psw . mask & PSW_MASK_PSTATE		64774	1		&			
ANR	65209	MemberAccess	env -> psw . mask		64774	0					
ANR	65210	PtrMemberAccess	env -> psw		64774	0					
ANR	65211	Identifier	env		64774	0					
ANR	65212	Identifier	psw		64774	1					
ANR	65213	Identifier	mask		64774	1					
ANR	65214	Identifier	PSW_MASK_PSTATE		64774	1					
ANR	65215	CompoundStatement		137:43:2182:2182	64774	1					
ANR	65216	ExpressionStatement	"qemu_log_mask ( LOG_UNIMP , ""%s: AR-mode and PSTATE support missing\\n"" , __func__ )"	143:8:2305:2406	64774	0	True				
ANR	65217	CallExpression	"qemu_log_mask ( LOG_UNIMP , ""%s: AR-mode and PSTATE support missing\\n"" , __func__ )"		64774	0					
ANR	65218	Callee	qemu_log_mask		64774	0					
ANR	65219	Identifier	qemu_log_mask		64774	0					
ANR	65220	ArgumentList	LOG_UNIMP		64774	1					
ANR	65221	Argument	LOG_UNIMP		64774	0					
ANR	65222	Identifier	LOG_UNIMP		64774	0					
ANR	65223	Argument	"""%s: AR-mode and PSTATE support missing\\n"""		64774	1					
ANR	65224	PrimaryExpression	"""%s: AR-mode and PSTATE support missing\\n"""		64774	0					
ANR	65225	Argument	__func__		64774	2					
ANR	65226	Identifier	__func__		64774	0					
ANR	65227	ExpressionStatement	"cpu_restore_state ( cs , ra )"	147:8:2417:2442	64774	1	True				
ANR	65228	CallExpression	"cpu_restore_state ( cs , ra )"		64774	0					
ANR	65229	Callee	cpu_restore_state		64774	0					
ANR	65230	Identifier	cpu_restore_state		64774	0					
ANR	65231	ArgumentList	cs		64774	1					
ANR	65232	Argument	cs		64774	0					
ANR	65233	Identifier	cs		64774	0					
ANR	65234	Argument	ra		64774	1					
ANR	65235	Identifier	ra		64774	0					
ANR	65236	ExpressionStatement	"program_interrupt ( env , PGM_ADDRESSING , 6 )"	149:8:2453:2494	64774	2	True				
ANR	65237	CallExpression	"program_interrupt ( env , PGM_ADDRESSING , 6 )"		64774	0					
ANR	65238	Callee	program_interrupt		64774	0					
ANR	65239	Identifier	program_interrupt		64774	0					
ANR	65240	ArgumentList	env		64774	1					
ANR	65241	Argument	env		64774	0					
ANR	65242	Identifier	env		64774	0					
ANR	65243	Argument	PGM_ADDRESSING		64774	1					
ANR	65244	Identifier	PGM_ADDRESSING		64774	0					
ANR	65245	Argument	6		64774	2					
ANR	65246	PrimaryExpression	6		64774	0					
ANR	65247	ExpressionStatement	g_assert_not_reached ( )	167:4:2711:2733	64774	66	True				
ANR	65248	CallExpression	g_assert_not_reached ( )		64774	0					
ANR	65249	Callee	g_assert_not_reached		64774	0					
ANR	65250	Identifier	g_assert_not_reached		64774	0					
ANR	65251	ArgumentList			64774	1					
ANR	65252	ReturnStatement	return cc ;	177:4:2821:2830	64774	67	True				
ANR	65253	Identifier	cc		64774	0					
ANR	65254	ReturnType	uint32_t HELPER		64774	1					
ANR	65255	Identifier	( mvcos )		64774	2					
ANR	65256	Identifier	mvcos		64774	3					
ANR	65257	ParameterList	"CPUS390XState * env , uint64_t dest , uint64_t src , uint64_t len"		64774	4					
ANR	65258	Parameter	CPUS390XState * env	1:23:23:40	64774	0	True				
ANR	65259	ParameterType	CPUS390XState *		64774	0					
ANR	65260	Identifier	env		64774	1					
ANR	65261	Parameter	uint64_t dest	1:43:43:55	64774	1	True				
ANR	65262	ParameterType	uint64_t		64774	0					
ANR	65263	Identifier	dest		64774	1					
ANR	65264	Parameter	uint64_t src	1:58:58:69	64774	2	True				
ANR	65265	ParameterType	uint64_t		64774	0					
ANR	65266	Identifier	src		64774	1					
ANR	65267	Parameter	uint64_t len	3:23:96:107	64774	3	True				
ANR	65268	ParameterType	uint64_t		64774	0					
ANR	65269	Identifier	len		64774	1					
ANR	65270	CFGEntryNode	ENTRY		64774		True				
ANR	65271	CFGExitNode	EXIT		64774		True				
ANR	65272	Symbol	* * env		64774						
ANR	65273	Symbol	psw_key		64774						
ANR	65274	Symbol	PSW_SHIFT_ASC		64774						
ANR	65275	Symbol	CR0_SECONDARY		64774						
ANR	65276	Symbol	wrap_length		64774						
ANR	65277	Symbol	CPU		64774						
ANR	65278	Symbol	PSW_MASK_ASC		64774						
ANR	65279	Symbol	dest		64774						
ANR	65280	Symbol	env -> regs		64774						
ANR	65281	Symbol	psw_key_valid		64774						
ANR	65282	Symbol	LOG_UNIMP		64774						
ANR	65283	Symbol	env -> psw		64774						
ANR	65284	Symbol	src_a		64774						
ANR	65285	Symbol	src_key		64774						
ANR	65286	Symbol	PGM_SPECIAL_OP		64774						
ANR	65287	Symbol	len		64774						
ANR	65288	Symbol	dest_key		64774						
ANR	65289	Symbol	psw_as		64774						
ANR	65290	Symbol	src_k		64774						
ANR	65291	Symbol	AS_SECONDARY		64774						
ANR	65292	Symbol	PGM_ADDRESSING		64774						
ANR	65293	Symbol	src_as		64774						
ANR	65294	Symbol	GETPC		64774						
ANR	65295	Symbol	val		64774						
ANR	65296	Symbol	cc		64774						
ANR	65297	Symbol	src		64774						
ANR	65298	Symbol	dest_k		64774						
ANR	65299	Symbol	* env		64774						
ANR	65300	Symbol	env		64774						
ANR	65301	Symbol	PSW_MASK_DAT		64774						
ANR	65302	Symbol	AS_ACCREG		64774						
ANR	65303	Symbol	dest_a		64774						
ANR	65304	Symbol	* env -> regs		64774						
ANR	65305	Symbol	ra		64774						
ANR	65306	Symbol	s390_env_get_cpu		64774						
ANR	65307	Symbol	cs		64774						
ANR	65308	Symbol	PSW_MASK_KEY		64774						
ANR	65309	Symbol	__func__		64774						
ANR	65310	Symbol	PSW_SHIFT_KEY		64774						
ANR	65311	Symbol	PSW_MASK_PSTATE		64774						
ANR	65312	Symbol	env -> cregs		64774						
ANR	65313	Symbol	env -> psw . mask		64774						
ANR	65314	Symbol	dest_as		64774						
ANR	65315	Symbol	PGM_PRIVILEGED		64774						
ANR	65316	Symbol	* env -> cregs		64774						
ANR	65317	Symbol	r0		64774						
ANR	65318	Symbol	AS_HOME		64774						
