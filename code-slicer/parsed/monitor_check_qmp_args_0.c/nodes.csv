command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5559270	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_check_qmp_args_0.c								
ANR	5559271	Function	monitor_check_qmp_args	1:0:0:1440							
ANR	5559272	FunctionDef	"monitor_check_qmp_args (const mon_cmd_t * cmd , QDict * args)"		5559271	0					
ANR	5559273	CompoundStatement		3:0:70:1440	5559271	0					
ANR	5559274	IdentifierDeclStatement	int err ;	5:4:77:84	5559271	0	True				
ANR	5559275	IdentifierDecl	err		5559271	0					
ANR	5559276	IdentifierDeclType	int		5559271	0					
ANR	5559277	Identifier	err		5559271	1					
ANR	5559278	IdentifierDeclStatement	const char * p ;	7:4:91:104	5559271	1	True				
ANR	5559279	IdentifierDecl	* p		5559271	0					
ANR	5559280	IdentifierDeclType	const char *		5559271	0					
ANR	5559281	Identifier	p		5559271	1					
ANR	5559282	IdentifierDeclStatement	CmdArgs cmd_args ;	9:4:111:127	5559271	2	True				
ANR	5559283	IdentifierDecl	cmd_args		5559271	0					
ANR	5559284	IdentifierDeclType	CmdArgs		5559271	0					
ANR	5559285	Identifier	cmd_args		5559271	1					
ANR	5559286	IdentifierDeclStatement	QemuOptsList * opts_list ;	11:4:134:157	5559271	3	True				
ANR	5559287	IdentifierDecl	* opts_list		5559271	0					
ANR	5559288	IdentifierDeclType	QemuOptsList *		5559271	0					
ANR	5559289	Identifier	opts_list		5559271	1					
ANR	5559290	IfStatement	if ( cmd -> args_type == NULL )		5559271	4					
ANR	5559291	Condition	cmd -> args_type == NULL	15:8:170:191	5559271	0	True				
ANR	5559292	EqualityExpression	cmd -> args_type == NULL		5559271	0		==			
ANR	5559293	PtrMemberAccess	cmd -> args_type		5559271	0					
ANR	5559294	Identifier	cmd		5559271	0					
ANR	5559295	Identifier	args_type		5559271	1					
ANR	5559296	Identifier	NULL		5559271	1					
ANR	5559297	CompoundStatement		13:32:123:123	5559271	1					
ANR	5559298	ReturnStatement	return ( qdict_size ( args ) == 0 ? 0 : - 1 ) ;	17:8:205:244	5559271	0	True				
ANR	5559299	ConditionalExpression	qdict_size ( args ) == 0 ? 0 : - 1		5559271	0					
ANR	5559300	Condition	qdict_size ( args ) == 0		5559271	0					
ANR	5559301	EqualityExpression	qdict_size ( args ) == 0		5559271	0		==			
ANR	5559302	CallExpression	qdict_size ( args )		5559271	0					
ANR	5559303	Callee	qdict_size		5559271	0					
ANR	5559304	Identifier	qdict_size		5559271	0					
ANR	5559305	ArgumentList	args		5559271	1					
ANR	5559306	Argument	args		5559271	0					
ANR	5559307	Identifier	args		5559271	0					
ANR	5559308	PrimaryExpression	0		5559271	1					
ANR	5559309	PrimaryExpression	0		5559271	1					
ANR	5559310	UnaryOperationExpression	- 1		5559271	2					
ANR	5559311	UnaryOperator	-		5559271	0					
ANR	5559312	PrimaryExpression	1		5559271	1					
ANR	5559313	ExpressionStatement	err = 0	23:4:260:267	5559271	5	True				
ANR	5559314	AssignmentExpression	err = 0		5559271	0		=			
ANR	5559315	Identifier	err		5559271	0					
ANR	5559316	PrimaryExpression	0		5559271	1					
ANR	5559317	ExpressionStatement	cmd_args_init ( & cmd_args )	25:4:274:298	5559271	6	True				
ANR	5559318	CallExpression	cmd_args_init ( & cmd_args )		5559271	0					
ANR	5559319	Callee	cmd_args_init		5559271	0					
ANR	5559320	Identifier	cmd_args_init		5559271	0					
ANR	5559321	ArgumentList	& cmd_args		5559271	1					
ANR	5559322	Argument	& cmd_args		5559271	0					
ANR	5559323	UnaryOperationExpression	& cmd_args		5559271	0					
ANR	5559324	UnaryOperator	&		5559271	0					
ANR	5559325	Identifier	cmd_args		5559271	1					
ANR	5559326	ExpressionStatement	opts_list = NULL	27:4:305:321	5559271	7	True				
ANR	5559327	AssignmentExpression	opts_list = NULL		5559271	0		=			
ANR	5559328	Identifier	opts_list		5559271	0					
ANR	5559329	Identifier	NULL		5559271	1					
ANR	5559330	ForStatement	for ( p = cmd -> args_type ; ; p ++ )		5559271	8					
ANR	5559331	ForInit	p = cmd -> args_type ;	31:9:335:353	5559271	0	True				
ANR	5559332	AssignmentExpression	p = cmd -> args_type		5559271	0		=			
ANR	5559333	Identifier	p		5559271	0					
ANR	5559334	PtrMemberAccess	cmd -> args_type		5559271	1					
ANR	5559335	Identifier	cmd		5559271	0					
ANR	5559336	Identifier	args_type		5559271	1					
ANR	5559337	PostIncDecOperationExpression	p ++	31:30:356:358	5559271	1	True				
ANR	5559338	Identifier	p		5559271	0					
ANR	5559339	IncDec	++		5559271	1					
ANR	5559340	CompoundStatement		29:35:290:290	5559271	2					
ANR	5559341	IfStatement	if ( * p == ':' )		5559271	0					
ANR	5559342	Condition	* p == ':'	33:12:376:384	5559271	0	True				
ANR	5559343	EqualityExpression	* p == ':'		5559271	0		==			
ANR	5559344	UnaryOperationExpression	* p		5559271	0					
ANR	5559345	UnaryOperator	*		5559271	0					
ANR	5559346	Identifier	p		5559271	1					
ANR	5559347	PrimaryExpression	':'		5559271	1					
ANR	5559348	CompoundStatement		31:23:316:316	5559271	1					
ANR	5559349	ExpressionStatement	cmd_args . type = * ++ p	35:12:402:422	5559271	0	True				
ANR	5559350	AssignmentExpression	cmd_args . type = * ++ p		5559271	0		=			
ANR	5559351	MemberAccess	cmd_args . type		5559271	0					
ANR	5559352	Identifier	cmd_args		5559271	0					
ANR	5559353	Identifier	type		5559271	1					
ANR	5559354	UnaryOperationExpression	* ++ p		5559271	1					
ANR	5559355	UnaryOperator	*		5559271	0					
ANR	5559356	UnaryExpression	++ p		5559271	1					
ANR	5559357	IncDec	++		5559271	0					
ANR	5559358	Identifier	p		5559271	1					
ANR	5559359	ExpressionStatement	p ++	37:12:437:440	5559271	1	True				
ANR	5559360	PostIncDecOperationExpression	p ++		5559271	0					
ANR	5559361	Identifier	p		5559271	0					
ANR	5559362	IncDec	++		5559271	1					
ANR	5559363	IfStatement	if ( cmd_args . type == '-' )		5559271	2					
ANR	5559364	Condition	cmd_args . type == '-'	39:16:459:478	5559271	0	True				
ANR	5559365	EqualityExpression	cmd_args . type == '-'		5559271	0		==			
ANR	5559366	MemberAccess	cmd_args . type		5559271	0					
ANR	5559367	Identifier	cmd_args		5559271	0					
ANR	5559368	Identifier	type		5559271	1					
ANR	5559369	PrimaryExpression	'-'		5559271	1					
ANR	5559370	CompoundStatement		37:38:410:410	5559271	1					
ANR	5559371	ExpressionStatement	cmd_args . flag = * p ++	41:16:500:520	5559271	0	True				
ANR	5559372	AssignmentExpression	cmd_args . flag = * p ++		5559271	0		=			
ANR	5559373	MemberAccess	cmd_args . flag		5559271	0					
ANR	5559374	Identifier	cmd_args		5559271	0					
ANR	5559375	Identifier	flag		5559271	1					
ANR	5559376	UnaryOperationExpression	* p ++		5559271	1					
ANR	5559377	UnaryOperator	*		5559271	0					
ANR	5559378	PostIncDecOperationExpression	p ++		5559271	1					
ANR	5559379	Identifier	p		5559271	0					
ANR	5559380	IncDec	++		5559271	1					
ANR	5559381	ExpressionStatement	cmd_args . optional = 1	43:16:539:560	5559271	1	True				
ANR	5559382	AssignmentExpression	cmd_args . optional = 1		5559271	0		=			
ANR	5559383	MemberAccess	cmd_args . optional		5559271	0					
ANR	5559384	Identifier	cmd_args		5559271	0					
ANR	5559385	Identifier	optional		5559271	1					
ANR	5559386	PrimaryExpression	1		5559271	1					
ANR	5559387	ElseStatement	else		5559271	0					
ANR	5559388	IfStatement	if ( cmd_args . type == 'O' )		5559271	0					
ANR	5559389	Condition	cmd_args . type == 'O'	45:23:586:605	5559271	0	True				
ANR	5559390	EqualityExpression	cmd_args . type == 'O'		5559271	0		==			
ANR	5559391	MemberAccess	cmd_args . type		5559271	0					
ANR	5559392	Identifier	cmd_args		5559271	0					
ANR	5559393	Identifier	type		5559271	1					
ANR	5559394	PrimaryExpression	'O'		5559271	1					
ANR	5559395	CompoundStatement		43:45:537:537	5559271	1					
ANR	5559396	ExpressionStatement	opts_list = qemu_find_opts ( qstring_get_str ( cmd_args . name ) )	47:16:627:685	5559271	0	True				
ANR	5559397	AssignmentExpression	opts_list = qemu_find_opts ( qstring_get_str ( cmd_args . name ) )		5559271	0		=			
ANR	5559398	Identifier	opts_list		5559271	0					
ANR	5559399	CallExpression	qemu_find_opts ( qstring_get_str ( cmd_args . name ) )		5559271	1					
ANR	5559400	Callee	qemu_find_opts		5559271	0					
ANR	5559401	Identifier	qemu_find_opts		5559271	0					
ANR	5559402	ArgumentList	qstring_get_str ( cmd_args . name )		5559271	1					
ANR	5559403	Argument	qstring_get_str ( cmd_args . name )		5559271	0					
ANR	5559404	CallExpression	qstring_get_str ( cmd_args . name )		5559271	0					
ANR	5559405	Callee	qstring_get_str		5559271	0					
ANR	5559406	Identifier	qstring_get_str		5559271	0					
ANR	5559407	ArgumentList	cmd_args . name		5559271	1					
ANR	5559408	Argument	cmd_args . name		5559271	0					
ANR	5559409	MemberAccess	cmd_args . name		5559271	0					
ANR	5559410	Identifier	cmd_args		5559271	0					
ANR	5559411	Identifier	name		5559271	1					
ANR	5559412	ExpressionStatement	assert ( opts_list )	49:16:704:721	5559271	1	True				
ANR	5559413	CallExpression	assert ( opts_list )		5559271	0					
ANR	5559414	Callee	assert		5559271	0					
ANR	5559415	Identifier	assert		5559271	0					
ANR	5559416	ArgumentList	opts_list		5559271	1					
ANR	5559417	Argument	opts_list		5559271	0					
ANR	5559418	Identifier	opts_list		5559271	0					
ANR	5559419	ElseStatement	else		5559271	0					
ANR	5559420	IfStatement	if ( * p == '?' )		5559271	0					
ANR	5559421	Condition	* p == '?'	51:23:747:755	5559271	0	True				
ANR	5559422	EqualityExpression	* p == '?'		5559271	0		==			
ANR	5559423	UnaryOperationExpression	* p		5559271	0					
ANR	5559424	UnaryOperator	*		5559271	0					
ANR	5559425	Identifier	p		5559271	1					
ANR	5559426	PrimaryExpression	'?'		5559271	1					
ANR	5559427	CompoundStatement		49:34:687:687	5559271	1					
ANR	5559428	ExpressionStatement	cmd_args . optional = 1	53:16:777:798	5559271	0	True				
ANR	5559429	AssignmentExpression	cmd_args . optional = 1		5559271	0		=			
ANR	5559430	MemberAccess	cmd_args . optional		5559271	0					
ANR	5559431	Identifier	cmd_args		5559271	0					
ANR	5559432	Identifier	optional		5559271	1					
ANR	5559433	PrimaryExpression	1		5559271	1					
ANR	5559434	ExpressionStatement	p ++	55:16:817:820	5559271	1	True				
ANR	5559435	PostIncDecOperationExpression	p ++		5559271	0					
ANR	5559436	Identifier	p		5559271	0					
ANR	5559437	IncDec	++		5559271	1					
ANR	5559438	ExpressionStatement	"assert ( * p == ',' || * p == '\\0' )"	61:12:852:883	5559271	3	True				
ANR	5559439	CallExpression	"assert ( * p == ',' || * p == '\\0' )"		5559271	0					
ANR	5559440	Callee	assert		5559271	0					
ANR	5559441	Identifier	assert		5559271	0					
ANR	5559442	ArgumentList	"* p == ',' || * p == '\\0'"		5559271	1					
ANR	5559443	Argument	"* p == ',' || * p == '\\0'"		5559271	0					
ANR	5559444	OrExpression	"* p == ',' || * p == '\\0'"		5559271	0		||			
ANR	5559445	EqualityExpression	"* p == ','"		5559271	0		==			
ANR	5559446	UnaryOperationExpression	* p		5559271	0					
ANR	5559447	UnaryOperator	*		5559271	0					
ANR	5559448	Identifier	p		5559271	1					
ANR	5559449	PrimaryExpression	"','"		5559271	1					
ANR	5559450	EqualityExpression	* p == '\\0'		5559271	1		==			
ANR	5559451	UnaryOperationExpression	* p		5559271	0					
ANR	5559452	UnaryOperator	*		5559271	0					
ANR	5559453	Identifier	p		5559271	1					
ANR	5559454	PrimaryExpression	'\\0'		5559271	1					
ANR	5559455	IfStatement	if ( opts_list )		5559271	4					
ANR	5559456	Condition	opts_list	63:16:902:910	5559271	0	True				
ANR	5559457	Identifier	opts_list		5559271	0					
ANR	5559458	CompoundStatement		61:27:842:842	5559271	1					
ANR	5559459	ExpressionStatement	"err = check_opts ( opts_list , args )"	65:16:932:965	5559271	0	True				
ANR	5559460	AssignmentExpression	"err = check_opts ( opts_list , args )"		5559271	0		=			
ANR	5559461	Identifier	err		5559271	0					
ANR	5559462	CallExpression	"check_opts ( opts_list , args )"		5559271	1					
ANR	5559463	Callee	check_opts		5559271	0					
ANR	5559464	Identifier	check_opts		5559271	0					
ANR	5559465	ArgumentList	opts_list		5559271	1					
ANR	5559466	Argument	opts_list		5559271	0					
ANR	5559467	Identifier	opts_list		5559271	0					
ANR	5559468	Argument	args		5559271	1					
ANR	5559469	Identifier	args		5559271	0					
ANR	5559470	ExpressionStatement	opts_list = NULL	67:16:984:1000	5559271	1	True				
ANR	5559471	AssignmentExpression	opts_list = NULL		5559271	0		=			
ANR	5559472	Identifier	opts_list		5559271	0					
ANR	5559473	Identifier	NULL		5559271	1					
ANR	5559474	ElseStatement	else		5559271	0					
ANR	5559475	CompoundStatement		67:19:951:951	5559271	0					
ANR	5559476	ExpressionStatement	"err = check_arg ( & cmd_args , args )"	71:16:1041:1073	5559271	0	True				
ANR	5559477	AssignmentExpression	"err = check_arg ( & cmd_args , args )"		5559271	0		=			
ANR	5559478	Identifier	err		5559271	0					
ANR	5559479	CallExpression	"check_arg ( & cmd_args , args )"		5559271	1					
ANR	5559480	Callee	check_arg		5559271	0					
ANR	5559481	Identifier	check_arg		5559271	0					
ANR	5559482	ArgumentList	& cmd_args		5559271	1					
ANR	5559483	Argument	& cmd_args		5559271	0					
ANR	5559484	UnaryOperationExpression	& cmd_args		5559271	0					
ANR	5559485	UnaryOperator	&		5559271	0					
ANR	5559486	Identifier	cmd_args		5559271	1					
ANR	5559487	Argument	args		5559271	1					
ANR	5559488	Identifier	args		5559271	0					
ANR	5559489	ExpressionStatement	QDECREF ( cmd_args . name )	73:16:1092:1114	5559271	1	True				
ANR	5559490	CallExpression	QDECREF ( cmd_args . name )		5559271	0					
ANR	5559491	Callee	QDECREF		5559271	0					
ANR	5559492	Identifier	QDECREF		5559271	0					
ANR	5559493	ArgumentList	cmd_args . name		5559271	1					
ANR	5559494	Argument	cmd_args . name		5559271	0					
ANR	5559495	MemberAccess	cmd_args . name		5559271	0					
ANR	5559496	Identifier	cmd_args		5559271	0					
ANR	5559497	Identifier	name		5559271	1					
ANR	5559498	ExpressionStatement	cmd_args_init ( & cmd_args )	75:16:1133:1157	5559271	2	True				
ANR	5559499	CallExpression	cmd_args_init ( & cmd_args )		5559271	0					
ANR	5559500	Callee	cmd_args_init		5559271	0					
ANR	5559501	Identifier	cmd_args_init		5559271	0					
ANR	5559502	ArgumentList	& cmd_args		5559271	1					
ANR	5559503	Argument	& cmd_args		5559271	0					
ANR	5559504	UnaryOperationExpression	& cmd_args		5559271	0					
ANR	5559505	UnaryOperator	&		5559271	0					
ANR	5559506	Identifier	cmd_args		5559271	1					
ANR	5559507	IfStatement	if ( err < 0 )		5559271	5					
ANR	5559508	Condition	err < 0	81:16:1193:1199	5559271	0	True				
ANR	5559509	RelationalExpression	err < 0		5559271	0		<			
ANR	5559510	Identifier	err		5559271	0					
ANR	5559511	PrimaryExpression	0		5559271	1					
ANR	5559512	CompoundStatement		79:25:1131:1131	5559271	1					
ANR	5559513	BreakStatement	break ;	83:16:1221:1226	5559271	0	True				
ANR	5559514	ElseStatement	else		5559271	0					
ANR	5559515	CompoundStatement		85:15:1188:1188	5559271	0					
ANR	5559516	ExpressionStatement	"qstring_append_chr ( cmd_args . name , * p )"	89:12:1274:1311	5559271	0	True				
ANR	5559517	CallExpression	"qstring_append_chr ( cmd_args . name , * p )"		5559271	0					
ANR	5559518	Callee	qstring_append_chr		5559271	0					
ANR	5559519	Identifier	qstring_append_chr		5559271	0					
ANR	5559520	ArgumentList	cmd_args . name		5559271	1					
ANR	5559521	Argument	cmd_args . name		5559271	0					
ANR	5559522	MemberAccess	cmd_args . name		5559271	0					
ANR	5559523	Identifier	cmd_args		5559271	0					
ANR	5559524	Identifier	name		5559271	1					
ANR	5559525	Argument	* p		5559271	1					
ANR	5559526	UnaryOperationExpression	* p		5559271	0					
ANR	5559527	UnaryOperator	*		5559271	0					
ANR	5559528	Identifier	p		5559271	1					
ANR	5559529	IfStatement	if ( * p == '\\0' )		5559271	1					
ANR	5559530	Condition	* p == '\\0'	95:12:1339:1348	5559271	0	True				
ANR	5559531	EqualityExpression	* p == '\\0'		5559271	0		==			
ANR	5559532	UnaryOperationExpression	* p		5559271	0					
ANR	5559533	UnaryOperator	*		5559271	0					
ANR	5559534	Identifier	p		5559271	1					
ANR	5559535	PrimaryExpression	'\\0'		5559271	1					
ANR	5559536	CompoundStatement		93:24:1280:1280	5559271	1					
ANR	5559537	BreakStatement	break ;	97:12:1366:1371	5559271	0	True				
ANR	5559538	ExpressionStatement	QDECREF ( cmd_args . name )	105:4:1398:1420	5559271	9	True				
ANR	5559539	CallExpression	QDECREF ( cmd_args . name )		5559271	0					
ANR	5559540	Callee	QDECREF		5559271	0					
ANR	5559541	Identifier	QDECREF		5559271	0					
ANR	5559542	ArgumentList	cmd_args . name		5559271	1					
ANR	5559543	Argument	cmd_args . name		5559271	0					
ANR	5559544	MemberAccess	cmd_args . name		5559271	0					
ANR	5559545	Identifier	cmd_args		5559271	0					
ANR	5559546	Identifier	name		5559271	1					
ANR	5559547	ReturnStatement	return err ;	107:4:1427:1437	5559271	10	True				
ANR	5559548	Identifier	err		5559271	0					
ANR	5559549	ReturnType	static int		5559271	1					
ANR	5559550	Identifier	monitor_check_qmp_args		5559271	2					
ANR	5559551	ParameterList	"const mon_cmd_t * cmd , QDict * args"		5559271	3					
ANR	5559552	Parameter	const mon_cmd_t * cmd	1:34:34:53	5559271	0	True				
ANR	5559553	ParameterType	const mon_cmd_t *		5559271	0					
ANR	5559554	Identifier	cmd		5559271	1					
ANR	5559555	Parameter	QDict * args	1:56:56:66	5559271	1	True				
ANR	5559556	ParameterType	QDict *		5559271	0					
ANR	5559557	Identifier	args		5559271	1					
ANR	5559558	CFGEntryNode	ENTRY		5559271		True				
ANR	5559559	CFGExitNode	EXIT		5559271		True				
ANR	5559560	InfiniteForNode	true		5559271		True				
ANR	5559561	Symbol	& cmd_args		5559271						
ANR	5559562	Symbol	qemu_find_opts		5559271						
ANR	5559563	Symbol	NULL		5559271						
ANR	5559564	Symbol	err		5559271						
ANR	5559565	Symbol	* ++ p		5559271						
ANR	5559566	Symbol	cmd_args . type		5559271						
ANR	5559567	Symbol	* p ++		5559271						
ANR	5559568	Symbol	cmd_args		5559271						
ANR	5559569	Symbol	check_opts		5559271						
ANR	5559570	Symbol	args		5559271						
ANR	5559571	Symbol	p		5559271						
ANR	5559572	Symbol	opts_list		5559271						
ANR	5559573	Symbol	qdict_size		5559271						
ANR	5559574	Symbol	cmd_args . flag		5559271						
ANR	5559575	Symbol	cmd_args . name		5559271						
ANR	5559576	Symbol	cmd_args . optional		5559271						
ANR	5559577	Symbol	check_arg		5559271						
ANR	5559578	Symbol	* p		5559271						
ANR	5559579	Symbol	cmd		5559271						
ANR	5559580	Symbol	* cmd		5559271						
ANR	5559581	Symbol	cmd -> args_type		5559271						
ANR	5559582	Symbol	qstring_get_str		5559271						
