command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6314286	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_escape_01_0.c								
ANR	6314287	Function	parse_escape	1:0:0:1311							
ANR	6314288	FunctionDef	"parse_escape (JSONParserContext * ctxt , QList * * tokens , va_list * ap)"		6314287	0					
ANR	6314289	CompoundStatement		3:0:84:1311	6314287	0					
ANR	6314290	IdentifierDeclStatement	"QObject * token = NULL , * obj ;"	5:4:91:118	6314287	0	True				
ANR	6314291	IdentifierDecl	* token = NULL		6314287	0					
ANR	6314292	IdentifierDeclType	QObject *		6314287	0					
ANR	6314293	Identifier	token		6314287	1					
ANR	6314294	AssignmentExpression	* token = NULL		6314287	2		=			
ANR	6314295	Identifier	NULL		6314287	0					
ANR	6314296	Identifier	NULL		6314287	1					
ANR	6314297	IdentifierDecl	* obj		6314287	1					
ANR	6314298	IdentifierDeclType	QObject *		6314287	0					
ANR	6314299	Identifier	obj		6314287	1					
ANR	6314300	IdentifierDeclStatement	QList * working = qlist_copy ( * tokens ) ;	7:4:125:161	6314287	1	True				
ANR	6314301	IdentifierDecl	* working = qlist_copy ( * tokens )		6314287	0					
ANR	6314302	IdentifierDeclType	QList *		6314287	0					
ANR	6314303	Identifier	working		6314287	1					
ANR	6314304	AssignmentExpression	* working = qlist_copy ( * tokens )		6314287	2		=			
ANR	6314305	Identifier	working		6314287	0					
ANR	6314306	CallExpression	qlist_copy ( * tokens )		6314287	1					
ANR	6314307	Callee	qlist_copy		6314287	0					
ANR	6314308	Identifier	qlist_copy		6314287	0					
ANR	6314309	ArgumentList	* tokens		6314287	1					
ANR	6314310	Argument	* tokens		6314287	0					
ANR	6314311	UnaryOperationExpression	* tokens		6314287	0					
ANR	6314312	UnaryOperator	*		6314287	0					
ANR	6314313	Identifier	tokens		6314287	1					
ANR	6314314	IfStatement	if ( ap == NULL )		6314287	2					
ANR	6314315	Condition	ap == NULL	11:8:174:183	6314287	0	True				
ANR	6314316	EqualityExpression	ap == NULL		6314287	0		==			
ANR	6314317	Identifier	ap		6314287	0					
ANR	6314318	Identifier	NULL		6314287	1					
ANR	6314319	CompoundStatement		9:20:101:101	6314287	1					
ANR	6314320	GotoStatement	goto out ;	13:8:197:205	6314287	0	True				
ANR	6314321	Identifier	out		6314287	0					
ANR	6314322	ExpressionStatement	token = qlist_pop ( working )	19:4:221:247	6314287	3	True				
ANR	6314323	AssignmentExpression	token = qlist_pop ( working )		6314287	0		=			
ANR	6314324	Identifier	token		6314287	0					
ANR	6314325	CallExpression	qlist_pop ( working )		6314287	1					
ANR	6314326	Callee	qlist_pop		6314287	0					
ANR	6314327	Identifier	qlist_pop		6314287	0					
ANR	6314328	ArgumentList	working		6314287	1					
ANR	6314329	Argument	working		6314287	0					
ANR	6314330	Identifier	working		6314287	0					
ANR	6314331	IfStatement	if ( token == NULL )		6314287	4					
ANR	6314332	Condition	token == NULL	21:8:258:270	6314287	0	True				
ANR	6314333	EqualityExpression	token == NULL		6314287	0		==			
ANR	6314334	Identifier	token		6314287	0					
ANR	6314335	Identifier	NULL		6314287	1					
ANR	6314336	CompoundStatement		19:23:188:188	6314287	1					
ANR	6314337	GotoStatement	goto out ;	23:8:284:292	6314287	0	True				
ANR	6314338	Identifier	out		6314287	0					
ANR	6314339	IfStatement	"if ( token_is_escape ( token , ""%p"" ) )"		6314287	5					
ANR	6314340	Condition	"token_is_escape ( token , ""%p"" )"	29:8:312:339	6314287	0	True				
ANR	6314341	CallExpression	"token_is_escape ( token , ""%p"" )"		6314287	0					
ANR	6314342	Callee	token_is_escape		6314287	0					
ANR	6314343	Identifier	token_is_escape		6314287	0					
ANR	6314344	ArgumentList	token		6314287	1					
ANR	6314345	Argument	token		6314287	0					
ANR	6314346	Identifier	token		6314287	0					
ANR	6314347	Argument	"""%p"""		6314287	1					
ANR	6314348	PrimaryExpression	"""%p"""		6314287	0					
ANR	6314349	CompoundStatement		27:38:257:257	6314287	1					
ANR	6314350	Statement	obj	31:8:353:355	6314287	0	True				
ANR	6314351	Statement	=	31:12:357:357	6314287	1	True				
ANR	6314352	Statement	va_arg	31:14:359:364	6314287	2	True				
ANR	6314353	Statement	(	31:20:365:365	6314287	3	True				
ANR	6314354	Statement	*	31:21:366:366	6314287	4	True				
ANR	6314355	Statement	ap	31:22:367:368	6314287	5	True				
ANR	6314356	Statement	","	31:24:369:369	6314287	6	True				
ANR	6314357	Statement	QObject	31:26:371:377	6314287	7	True				
ANR	6314358	Statement	*	31:34:379:379	6314287	8	True				
ANR	6314359	Statement	)	31:35:380:380	6314287	9	True				
ANR	6314360	ExpressionStatement		31:36:381:381	6314287	10	True				
ANR	6314361	ElseStatement	else		6314287	0					
ANR	6314362	IfStatement	"if ( token_is_escape ( token , ""%i"" ) )"		6314287	0					
ANR	6314363	Condition	"token_is_escape ( token , ""%i"" )"	33:15:399:426	6314287	0	True				
ANR	6314364	CallExpression	"token_is_escape ( token , ""%i"" )"		6314287	0					
ANR	6314365	Callee	token_is_escape		6314287	0					
ANR	6314366	Identifier	token_is_escape		6314287	0					
ANR	6314367	ArgumentList	token		6314287	1					
ANR	6314368	Argument	token		6314287	0					
ANR	6314369	Identifier	token		6314287	0					
ANR	6314370	Argument	"""%i"""		6314287	1					
ANR	6314371	PrimaryExpression	"""%i"""		6314287	0					
ANR	6314372	CompoundStatement		31:45:344:344	6314287	1					
ANR	6314373	ExpressionStatement	"obj = QOBJECT ( qbool_from_int ( va_arg ( * ap , int ) ) )"	35:8:440:487	6314287	0	True				
ANR	6314374	AssignmentExpression	"obj = QOBJECT ( qbool_from_int ( va_arg ( * ap , int ) ) )"		6314287	0		=			
ANR	6314375	Identifier	obj		6314287	0					
ANR	6314376	CallExpression	"QOBJECT ( qbool_from_int ( va_arg ( * ap , int ) ) )"		6314287	1					
ANR	6314377	Callee	QOBJECT		6314287	0					
ANR	6314378	Identifier	QOBJECT		6314287	0					
ANR	6314379	ArgumentList	"qbool_from_int ( va_arg ( * ap , int ) )"		6314287	1					
ANR	6314380	Argument	"qbool_from_int ( va_arg ( * ap , int ) )"		6314287	0					
ANR	6314381	CallExpression	"qbool_from_int ( va_arg ( * ap , int ) )"		6314287	0					
ANR	6314382	Callee	qbool_from_int		6314287	0					
ANR	6314383	Identifier	qbool_from_int		6314287	0					
ANR	6314384	ArgumentList	"va_arg ( * ap , int )"		6314287	1					
ANR	6314385	Argument	"va_arg ( * ap , int )"		6314287	0					
ANR	6314386	CallExpression	"va_arg ( * ap , int )"		6314287	0					
ANR	6314387	Callee	va_arg		6314287	0					
ANR	6314388	Identifier	va_arg		6314287	0					
ANR	6314389	ArgumentList	* ap		6314287	1					
ANR	6314390	Argument	* ap		6314287	0					
ANR	6314391	UnaryOperationExpression	* ap		6314287	0					
ANR	6314392	UnaryOperator	*		6314287	0					
ANR	6314393	Identifier	ap		6314287	1					
ANR	6314394	Argument	int		6314287	1					
ANR	6314395	Identifier	int		6314287	0					
ANR	6314396	ElseStatement	else		6314287	0					
ANR	6314397	IfStatement	"if ( token_is_escape ( token , ""%d"" ) )"		6314287	0					
ANR	6314398	Condition	"token_is_escape ( token , ""%d"" )"	37:15:505:532	6314287	0	True				
ANR	6314399	CallExpression	"token_is_escape ( token , ""%d"" )"		6314287	0					
ANR	6314400	Callee	token_is_escape		6314287	0					
ANR	6314401	Identifier	token_is_escape		6314287	0					
ANR	6314402	ArgumentList	token		6314287	1					
ANR	6314403	Argument	token		6314287	0					
ANR	6314404	Identifier	token		6314287	0					
ANR	6314405	Argument	"""%d"""		6314287	1					
ANR	6314406	PrimaryExpression	"""%d"""		6314287	0					
ANR	6314407	CompoundStatement		35:45:450:450	6314287	1					
ANR	6314408	ExpressionStatement	"obj = QOBJECT ( qint_from_int ( va_arg ( * ap , int ) ) )"	39:8:546:592	6314287	0	True				
ANR	6314409	AssignmentExpression	"obj = QOBJECT ( qint_from_int ( va_arg ( * ap , int ) ) )"		6314287	0		=			
ANR	6314410	Identifier	obj		6314287	0					
ANR	6314411	CallExpression	"QOBJECT ( qint_from_int ( va_arg ( * ap , int ) ) )"		6314287	1					
ANR	6314412	Callee	QOBJECT		6314287	0					
ANR	6314413	Identifier	QOBJECT		6314287	0					
ANR	6314414	ArgumentList	"qint_from_int ( va_arg ( * ap , int ) )"		6314287	1					
ANR	6314415	Argument	"qint_from_int ( va_arg ( * ap , int ) )"		6314287	0					
ANR	6314416	CallExpression	"qint_from_int ( va_arg ( * ap , int ) )"		6314287	0					
ANR	6314417	Callee	qint_from_int		6314287	0					
ANR	6314418	Identifier	qint_from_int		6314287	0					
ANR	6314419	ArgumentList	"va_arg ( * ap , int )"		6314287	1					
ANR	6314420	Argument	"va_arg ( * ap , int )"		6314287	0					
ANR	6314421	CallExpression	"va_arg ( * ap , int )"		6314287	0					
ANR	6314422	Callee	va_arg		6314287	0					
ANR	6314423	Identifier	va_arg		6314287	0					
ANR	6314424	ArgumentList	* ap		6314287	1					
ANR	6314425	Argument	* ap		6314287	0					
ANR	6314426	UnaryOperationExpression	* ap		6314287	0					
ANR	6314427	UnaryOperator	*		6314287	0					
ANR	6314428	Identifier	ap		6314287	1					
ANR	6314429	Argument	int		6314287	1					
ANR	6314430	Identifier	int		6314287	0					
ANR	6314431	ElseStatement	else		6314287	0					
ANR	6314432	IfStatement	"if ( token_is_escape ( token , ""%ld"" ) )"		6314287	0					
ANR	6314433	Condition	"token_is_escape ( token , ""%ld"" )"	41:15:610:638	6314287	0	True				
ANR	6314434	CallExpression	"token_is_escape ( token , ""%ld"" )"		6314287	0					
ANR	6314435	Callee	token_is_escape		6314287	0					
ANR	6314436	Identifier	token_is_escape		6314287	0					
ANR	6314437	ArgumentList	token		6314287	1					
ANR	6314438	Argument	token		6314287	0					
ANR	6314439	Identifier	token		6314287	0					
ANR	6314440	Argument	"""%ld"""		6314287	1					
ANR	6314441	PrimaryExpression	"""%ld"""		6314287	0					
ANR	6314442	CompoundStatement		39:46:556:556	6314287	1					
ANR	6314443	Statement	obj	43:8:652:654	6314287	0	True				
ANR	6314444	Statement	=	43:12:656:656	6314287	1	True				
ANR	6314445	Statement	QOBJECT	43:14:658:664	6314287	2	True				
ANR	6314446	Statement	(	43:21:665:665	6314287	3	True				
ANR	6314447	Statement	qint_from_int	43:22:666:678	6314287	4	True				
ANR	6314448	Statement	(	43:35:679:679	6314287	5	True				
ANR	6314449	Statement	va_arg	43:36:680:685	6314287	6	True				
ANR	6314450	Statement	(	43:42:686:686	6314287	7	True				
ANR	6314451	Statement	*	43:43:687:687	6314287	8	True				
ANR	6314452	Statement	ap	43:44:688:689	6314287	9	True				
ANR	6314453	Statement	","	43:46:690:690	6314287	10	True				
ANR	6314454	Statement	long	43:48:692:695	6314287	11	True				
ANR	6314455	Statement	)	43:52:696:696	6314287	12	True				
ANR	6314456	Statement	)	43:53:697:697	6314287	13	True				
ANR	6314457	Statement	)	43:54:698:698	6314287	14	True				
ANR	6314458	ExpressionStatement		43:55:699:699	6314287	15	True				
ANR	6314459	ElseStatement	else		6314287	0					
ANR	6314460	IfStatement	"if ( token_is_escape ( token , ""%lld"" ) || token_is_escape ( token , ""%I64d"" ) )"		6314287	0					
ANR	6314461	Condition	"token_is_escape ( token , ""%lld"" ) || token_is_escape ( token , ""%I64d"" )"	45:15:717:797	6314287	0	True				
ANR	6314462	OrExpression	"token_is_escape ( token , ""%lld"" ) || token_is_escape ( token , ""%I64d"" )"		6314287	0		||			
ANR	6314463	CallExpression	"token_is_escape ( token , ""%lld"" )"		6314287	0					
ANR	6314464	Callee	token_is_escape		6314287	0					
ANR	6314465	Identifier	token_is_escape		6314287	0					
ANR	6314466	ArgumentList	token		6314287	1					
ANR	6314467	Argument	token		6314287	0					
ANR	6314468	Identifier	token		6314287	0					
ANR	6314469	Argument	"""%lld"""		6314287	1					
ANR	6314470	PrimaryExpression	"""%lld"""		6314287	0					
ANR	6314471	CallExpression	"token_is_escape ( token , ""%I64d"" )"		6314287	1					
ANR	6314472	Callee	token_is_escape		6314287	0					
ANR	6314473	Identifier	token_is_escape		6314287	0					
ANR	6314474	ArgumentList	token		6314287	1					
ANR	6314475	Argument	token		6314287	0					
ANR	6314476	Identifier	token		6314287	0					
ANR	6314477	Argument	"""%I64d"""		6314287	1					
ANR	6314478	PrimaryExpression	"""%I64d"""		6314287	0					
ANR	6314479	CompoundStatement		45:48:715:715	6314287	1					
ANR	6314480	Statement	obj	49:8:811:813	6314287	0	True				
ANR	6314481	Statement	=	49:12:815:815	6314287	1	True				
ANR	6314482	Statement	QOBJECT	49:14:817:823	6314287	2	True				
ANR	6314483	Statement	(	49:21:824:824	6314287	3	True				
ANR	6314484	Statement	qint_from_int	49:22:825:837	6314287	4	True				
ANR	6314485	Statement	(	49:35:838:838	6314287	5	True				
ANR	6314486	Statement	va_arg	49:36:839:844	6314287	6	True				
ANR	6314487	Statement	(	49:42:845:845	6314287	7	True				
ANR	6314488	Statement	*	49:43:846:846	6314287	8	True				
ANR	6314489	Statement	ap	49:44:847:848	6314287	9	True				
ANR	6314490	Statement	","	49:46:849:849	6314287	10	True				
ANR	6314491	Statement	long	49:48:851:854	6314287	11	True				
ANR	6314492	Statement	long	49:53:856:859	6314287	12	True				
ANR	6314493	Statement	)	49:57:860:860	6314287	13	True				
ANR	6314494	Statement	)	49:58:861:861	6314287	14	True				
ANR	6314495	Statement	)	49:59:862:862	6314287	15	True				
ANR	6314496	ExpressionStatement		49:60:863:863	6314287	16	True				
ANR	6314497	ElseStatement	else		6314287	0					
ANR	6314498	IfStatement	"if ( token_is_escape ( token , ""%s"" ) )"		6314287	0					
ANR	6314499	Condition	"token_is_escape ( token , ""%s"" )"	51:15:881:908	6314287	0	True				
ANR	6314500	CallExpression	"token_is_escape ( token , ""%s"" )"		6314287	0					
ANR	6314501	Callee	token_is_escape		6314287	0					
ANR	6314502	Identifier	token_is_escape		6314287	0					
ANR	6314503	ArgumentList	token		6314287	1					
ANR	6314504	Argument	token		6314287	0					
ANR	6314505	Identifier	token		6314287	0					
ANR	6314506	Argument	"""%s"""		6314287	1					
ANR	6314507	PrimaryExpression	"""%s"""		6314287	0					
ANR	6314508	CompoundStatement		49:45:826:826	6314287	1					
ANR	6314509	Statement	obj	53:8:922:924	6314287	0	True				
ANR	6314510	Statement	=	53:12:926:926	6314287	1	True				
ANR	6314511	Statement	QOBJECT	53:14:928:934	6314287	2	True				
ANR	6314512	Statement	(	53:21:935:935	6314287	3	True				
ANR	6314513	Statement	qstring_from_str	53:22:936:951	6314287	4	True				
ANR	6314514	Statement	(	53:38:952:952	6314287	5	True				
ANR	6314515	Statement	va_arg	53:39:953:958	6314287	6	True				
ANR	6314516	Statement	(	53:45:959:959	6314287	7	True				
ANR	6314517	Statement	*	53:46:960:960	6314287	8	True				
ANR	6314518	Statement	ap	53:47:961:962	6314287	9	True				
ANR	6314519	Statement	","	53:49:963:963	6314287	10	True				
ANR	6314520	Statement	const	53:51:965:969	6314287	11	True				
ANR	6314521	Statement	char	53:57:971:974	6314287	12	True				
ANR	6314522	Statement	*	53:62:976:976	6314287	13	True				
ANR	6314523	Statement	)	53:63:977:977	6314287	14	True				
ANR	6314524	Statement	)	53:64:978:978	6314287	15	True				
ANR	6314525	Statement	)	53:65:979:979	6314287	16	True				
ANR	6314526	ExpressionStatement		53:66:980:980	6314287	17	True				
ANR	6314527	ElseStatement	else		6314287	0					
ANR	6314528	IfStatement	"if ( token_is_escape ( token , ""%f"" ) )"		6314287	0					
ANR	6314529	Condition	"token_is_escape ( token , ""%f"" )"	55:15:998:1025	6314287	0	True				
ANR	6314530	CallExpression	"token_is_escape ( token , ""%f"" )"		6314287	0					
ANR	6314531	Callee	token_is_escape		6314287	0					
ANR	6314532	Identifier	token_is_escape		6314287	0					
ANR	6314533	ArgumentList	token		6314287	1					
ANR	6314534	Argument	token		6314287	0					
ANR	6314535	Identifier	token		6314287	0					
ANR	6314536	Argument	"""%f"""		6314287	1					
ANR	6314537	PrimaryExpression	"""%f"""		6314287	0					
ANR	6314538	CompoundStatement		53:45:943:943	6314287	1					
ANR	6314539	ExpressionStatement	"obj = QOBJECT ( qfloat_from_double ( va_arg ( * ap , double ) ) )"	57:8:1039:1093	6314287	0	True				
ANR	6314540	AssignmentExpression	"obj = QOBJECT ( qfloat_from_double ( va_arg ( * ap , double ) ) )"		6314287	0		=			
ANR	6314541	Identifier	obj		6314287	0					
ANR	6314542	CallExpression	"QOBJECT ( qfloat_from_double ( va_arg ( * ap , double ) ) )"		6314287	1					
ANR	6314543	Callee	QOBJECT		6314287	0					
ANR	6314544	Identifier	QOBJECT		6314287	0					
ANR	6314545	ArgumentList	"qfloat_from_double ( va_arg ( * ap , double ) )"		6314287	1					
ANR	6314546	Argument	"qfloat_from_double ( va_arg ( * ap , double ) )"		6314287	0					
ANR	6314547	CallExpression	"qfloat_from_double ( va_arg ( * ap , double ) )"		6314287	0					
ANR	6314548	Callee	qfloat_from_double		6314287	0					
ANR	6314549	Identifier	qfloat_from_double		6314287	0					
ANR	6314550	ArgumentList	"va_arg ( * ap , double )"		6314287	1					
ANR	6314551	Argument	"va_arg ( * ap , double )"		6314287	0					
ANR	6314552	CallExpression	"va_arg ( * ap , double )"		6314287	0					
ANR	6314553	Callee	va_arg		6314287	0					
ANR	6314554	Identifier	va_arg		6314287	0					
ANR	6314555	ArgumentList	* ap		6314287	1					
ANR	6314556	Argument	* ap		6314287	0					
ANR	6314557	UnaryOperationExpression	* ap		6314287	0					
ANR	6314558	UnaryOperator	*		6314287	0					
ANR	6314559	Identifier	ap		6314287	1					
ANR	6314560	Argument	double		6314287	1					
ANR	6314561	Identifier	double		6314287	0					
ANR	6314562	ElseStatement	else		6314287	0					
ANR	6314563	CompoundStatement		57:11:1022:1022	6314287	0					
ANR	6314564	GotoStatement	goto out ;	61:8:1118:1126	6314287	0	True				
ANR	6314565	Identifier	out		6314287	0					
ANR	6314566	ExpressionStatement	qobject_decref ( token )	67:4:1142:1163	6314287	6	True				
ANR	6314567	CallExpression	qobject_decref ( token )		6314287	0					
ANR	6314568	Callee	qobject_decref		6314287	0					
ANR	6314569	Identifier	qobject_decref		6314287	0					
ANR	6314570	ArgumentList	token		6314287	1					
ANR	6314571	Argument	token		6314287	0					
ANR	6314572	Identifier	token		6314287	0					
ANR	6314573	ExpressionStatement	QDECREF ( * tokens )	69:4:1170:1186	6314287	7	True				
ANR	6314574	CallExpression	QDECREF ( * tokens )		6314287	0					
ANR	6314575	Callee	QDECREF		6314287	0					
ANR	6314576	Identifier	QDECREF		6314287	0					
ANR	6314577	ArgumentList	* tokens		6314287	1					
ANR	6314578	Argument	* tokens		6314287	0					
ANR	6314579	UnaryOperationExpression	* tokens		6314287	0					
ANR	6314580	UnaryOperator	*		6314287	0					
ANR	6314581	Identifier	tokens		6314287	1					
ANR	6314582	ExpressionStatement	* tokens = working	71:4:1193:1210	6314287	8	True				
ANR	6314583	AssignmentExpression	* tokens = working		6314287	0		=			
ANR	6314584	UnaryOperationExpression	* tokens		6314287	0					
ANR	6314585	UnaryOperator	*		6314287	0					
ANR	6314586	Identifier	tokens		6314287	1					
ANR	6314587	Identifier	working		6314287	1					
ANR	6314588	ReturnStatement	return obj ;	75:4:1219:1229	6314287	9	True				
ANR	6314589	Identifier	obj		6314287	0					
ANR	6314590	Label	out :	79:0:1234:1237	6314287	10	True				
ANR	6314591	Identifier	out		6314287	0					
ANR	6314592	ExpressionStatement	qobject_decref ( token )	81:4:1244:1265	6314287	11	True				
ANR	6314593	CallExpression	qobject_decref ( token )		6314287	0					
ANR	6314594	Callee	qobject_decref		6314287	0					
ANR	6314595	Identifier	qobject_decref		6314287	0					
ANR	6314596	ArgumentList	token		6314287	1					
ANR	6314597	Argument	token		6314287	0					
ANR	6314598	Identifier	token		6314287	0					
ANR	6314599	ExpressionStatement	QDECREF ( working )	83:4:1272:1288	6314287	12	True				
ANR	6314600	CallExpression	QDECREF ( working )		6314287	0					
ANR	6314601	Callee	QDECREF		6314287	0					
ANR	6314602	Identifier	QDECREF		6314287	0					
ANR	6314603	ArgumentList	working		6314287	1					
ANR	6314604	Argument	working		6314287	0					
ANR	6314605	Identifier	working		6314287	0					
ANR	6314606	ReturnStatement	return NULL ;	87:4:1297:1308	6314287	13	True				
ANR	6314607	Identifier	NULL		6314287	0					
ANR	6314608	ReturnType	static QObject *		6314287	1					
ANR	6314609	Identifier	parse_escape		6314287	2					
ANR	6314610	ParameterList	"JSONParserContext * ctxt , QList * * tokens , va_list * ap"		6314287	3					
ANR	6314611	Parameter	JSONParserContext * ctxt	1:29:29:51	6314287	0	True				
ANR	6314612	ParameterType	JSONParserContext *		6314287	0					
ANR	6314613	Identifier	ctxt		6314287	1					
ANR	6314614	Parameter	QList * * tokens	1:54:54:67	6314287	1	True				
ANR	6314615	ParameterType	QList * *		6314287	0					
ANR	6314616	Identifier	tokens		6314287	1					
ANR	6314617	Parameter	va_list * ap	1:70:70:80	6314287	2	True				
ANR	6314618	ParameterType	va_list *		6314287	0					
ANR	6314619	Identifier	ap		6314287	1					
ANR	6314620	CFGEntryNode	ENTRY		6314287		True				
ANR	6314621	CFGExitNode	EXIT		6314287		True				
ANR	6314622	Symbol	ctxt		6314287						
ANR	6314623	Symbol	NULL		6314287						
ANR	6314624	Symbol	qint_from_int		6314287						
ANR	6314625	Symbol	double		6314287						
ANR	6314626	Symbol	qlist_copy		6314287						
ANR	6314627	Symbol	* tokens		6314287						
ANR	6314628	Symbol	qfloat_from_double		6314287						
ANR	6314629	Symbol	qbool_from_int		6314287						
ANR	6314630	Symbol	token_is_escape		6314287						
ANR	6314631	Symbol	qlist_pop		6314287						
ANR	6314632	Symbol	int		6314287						
ANR	6314633	Symbol	ap		6314287						
ANR	6314634	Symbol	token		6314287						
ANR	6314635	Symbol	obj		6314287						
ANR	6314636	Symbol	* ap		6314287						
ANR	6314637	Symbol	working		6314287						
ANR	6314638	Symbol	tokens		6314287						
ANR	6314639	Symbol	QOBJECT		6314287						
ANR	6314640	Symbol	va_arg		6314287						
