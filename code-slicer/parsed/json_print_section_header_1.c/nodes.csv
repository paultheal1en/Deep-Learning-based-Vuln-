command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5069710	File	/home/p4ultr4n/workplace/ReVeal/raw_code/json_print_section_header_1.c								
ANR	5069711	Function	json_print_section_header	1:0:0:1361							
ANR	5069712	FunctionDef	json_print_section_header (WriterContext * wctx)		5069711	0					
ANR	5069713	CompoundStatement		3:0:60:1361	5069711	0					
ANR	5069714	IdentifierDeclStatement	JSONContext * json = wctx -> priv ;	5:4:67:97	5069711	0	True				
ANR	5069715	IdentifierDecl	* json = wctx -> priv		5069711	0					
ANR	5069716	IdentifierDeclType	JSONContext *		5069711	0					
ANR	5069717	Identifier	json		5069711	1					
ANR	5069718	AssignmentExpression	* json = wctx -> priv		5069711	2		=			
ANR	5069719	Identifier	json		5069711	0					
ANR	5069720	PtrMemberAccess	wctx -> priv		5069711	1					
ANR	5069721	Identifier	wctx		5069711	0					
ANR	5069722	Identifier	priv		5069711	1					
ANR	5069723	IdentifierDeclStatement	AVBPrint buf ;	7:4:104:116	5069711	1	True				
ANR	5069724	IdentifierDecl	buf		5069711	0					
ANR	5069725	IdentifierDeclType	AVBPrint		5069711	0					
ANR	5069726	Identifier	buf		5069711	1					
ANR	5069727	IdentifierDeclStatement	const struct section * section = wctx -> section [ wctx -> level ] ;	9:4:123:181	5069711	2	True				
ANR	5069728	IdentifierDecl	* section = wctx -> section [ wctx -> level ]		5069711	0					
ANR	5069729	IdentifierDeclType	const struct section *		5069711	0					
ANR	5069730	Identifier	section		5069711	1					
ANR	5069731	AssignmentExpression	* section = wctx -> section [ wctx -> level ]		5069711	2		=			
ANR	5069732	Identifier	section		5069711	0					
ANR	5069733	ArrayIndexing	wctx -> section [ wctx -> level ]		5069711	1					
ANR	5069734	PtrMemberAccess	wctx -> section		5069711	0					
ANR	5069735	Identifier	wctx		5069711	0					
ANR	5069736	Identifier	section		5069711	1					
ANR	5069737	PtrMemberAccess	wctx -> level		5069711	1					
ANR	5069738	Identifier	wctx		5069711	0					
ANR	5069739	Identifier	level		5069711	1					
ANR	5069740	IdentifierDeclStatement	const struct section * parent_section = wctx -> level ? wctx -> section [ wctx -> level - 1 ] : NULL ;	11:4:188:285	5069711	3	True				
ANR	5069741	IdentifierDecl	* parent_section = wctx -> level ? wctx -> section [ wctx -> level - 1 ] : NULL		5069711	0					
ANR	5069742	IdentifierDeclType	const struct section *		5069711	0					
ANR	5069743	Identifier	parent_section		5069711	1					
ANR	5069744	AssignmentExpression	* parent_section = wctx -> level ? wctx -> section [ wctx -> level - 1 ] : NULL		5069711	2		=			
ANR	5069745	Identifier	parent_section		5069711	0					
ANR	5069746	ConditionalExpression	wctx -> level ? wctx -> section [ wctx -> level - 1 ] : NULL		5069711	1					
ANR	5069747	Condition	wctx -> level		5069711	0					
ANR	5069748	PtrMemberAccess	wctx -> level		5069711	0					
ANR	5069749	Identifier	wctx		5069711	0					
ANR	5069750	Identifier	level		5069711	1					
ANR	5069751	ArrayIndexing	wctx -> section [ wctx -> level - 1 ]		5069711	1					
ANR	5069752	PtrMemberAccess	wctx -> section		5069711	0					
ANR	5069753	Identifier	wctx		5069711	0					
ANR	5069754	Identifier	section		5069711	1					
ANR	5069755	AdditiveExpression	wctx -> level - 1		5069711	1		-			
ANR	5069756	PtrMemberAccess	wctx -> level		5069711	0					
ANR	5069757	Identifier	wctx		5069711	0					
ANR	5069758	Identifier	level		5069711	1					
ANR	5069759	PrimaryExpression	1		5069711	1					
ANR	5069760	Identifier	NULL		5069711	2					
ANR	5069761	IfStatement	if ( wctx -> level && wctx -> nb_item [ wctx -> level - 1 ] )		5069711	4					
ANR	5069762	Condition	wctx -> level && wctx -> nb_item [ wctx -> level - 1 ]	17:8:298:340	5069711	0	True				
ANR	5069763	AndExpression	wctx -> level && wctx -> nb_item [ wctx -> level - 1 ]		5069711	0		&&			
ANR	5069764	PtrMemberAccess	wctx -> level		5069711	0					
ANR	5069765	Identifier	wctx		5069711	0					
ANR	5069766	Identifier	level		5069711	1					
ANR	5069767	ArrayIndexing	wctx -> nb_item [ wctx -> level - 1 ]		5069711	1					
ANR	5069768	PtrMemberAccess	wctx -> nb_item		5069711	0					
ANR	5069769	Identifier	wctx		5069711	0					
ANR	5069770	Identifier	nb_item		5069711	1					
ANR	5069771	AdditiveExpression	wctx -> level - 1		5069711	1		-			
ANR	5069772	PtrMemberAccess	wctx -> level		5069711	0					
ANR	5069773	Identifier	wctx		5069711	0					
ANR	5069774	Identifier	level		5069711	1					
ANR	5069775	PrimaryExpression	1		5069711	1					
ANR	5069776	ExpressionStatement	"printf ( "",\\n"" )"	19:8:352:365	5069711	1	True				
ANR	5069777	CallExpression	"printf ( "",\\n"" )"		5069711	0					
ANR	5069778	Callee	printf		5069711	0					
ANR	5069779	Identifier	printf		5069711	0					
ANR	5069780	ArgumentList	""",\\n"""		5069711	1					
ANR	5069781	Argument	""",\\n"""		5069711	0					
ANR	5069782	PrimaryExpression	""",\\n"""		5069711	0					
ANR	5069783	IfStatement	if ( section -> flags & SECTION_FLAG_IS_WRAPPER )		5069711	5					
ANR	5069784	Condition	section -> flags & SECTION_FLAG_IS_WRAPPER	23:8:378:417	5069711	0	True				
ANR	5069785	BitAndExpression	section -> flags & SECTION_FLAG_IS_WRAPPER		5069711	0		&			
ANR	5069786	PtrMemberAccess	section -> flags		5069711	0					
ANR	5069787	Identifier	section		5069711	0					
ANR	5069788	Identifier	flags		5069711	1					
ANR	5069789	Identifier	SECTION_FLAG_IS_WRAPPER		5069711	1					
ANR	5069790	CompoundStatement		21:50:359:359	5069711	1					
ANR	5069791	ExpressionStatement	"printf ( ""{\\n"" )"	25:8:431:444	5069711	0	True				
ANR	5069792	CallExpression	"printf ( ""{\\n"" )"		5069711	0					
ANR	5069793	Callee	printf		5069711	0					
ANR	5069794	Identifier	printf		5069711	0					
ANR	5069795	ArgumentList	"""{\\n"""		5069711	1					
ANR	5069796	Argument	"""{\\n"""		5069711	0					
ANR	5069797	PrimaryExpression	"""{\\n"""		5069711	0					
ANR	5069798	ExpressionStatement	json -> indent_level ++	27:8:455:475	5069711	1	True				
ANR	5069799	PostIncDecOperationExpression	json -> indent_level ++		5069711	0					
ANR	5069800	PtrMemberAccess	json -> indent_level		5069711	0					
ANR	5069801	Identifier	json		5069711	0					
ANR	5069802	Identifier	indent_level		5069711	1					
ANR	5069803	IncDec	++		5069711	1					
ANR	5069804	ElseStatement	else		5069711	0					
ANR	5069805	CompoundStatement		27:11:428:428	5069711	0					
ANR	5069806	ExpressionStatement	"av_bprint_init ( & buf , 1 , AV_BPRINT_SIZE_UNLIMITED )"	31:8:500:549	5069711	0	True				
ANR	5069807	CallExpression	"av_bprint_init ( & buf , 1 , AV_BPRINT_SIZE_UNLIMITED )"		5069711	0					
ANR	5069808	Callee	av_bprint_init		5069711	0					
ANR	5069809	Identifier	av_bprint_init		5069711	0					
ANR	5069810	ArgumentList	& buf		5069711	1					
ANR	5069811	Argument	& buf		5069711	0					
ANR	5069812	UnaryOperationExpression	& buf		5069711	0					
ANR	5069813	UnaryOperator	&		5069711	0					
ANR	5069814	Identifier	buf		5069711	1					
ANR	5069815	Argument	1		5069711	1					
ANR	5069816	PrimaryExpression	1		5069711	0					
ANR	5069817	Argument	AV_BPRINT_SIZE_UNLIMITED		5069711	2					
ANR	5069818	Identifier	AV_BPRINT_SIZE_UNLIMITED		5069711	0					
ANR	5069819	ExpressionStatement	"json_escape_str ( & buf , section -> name , wctx )"	33:8:560:602	5069711	1	True				
ANR	5069820	CallExpression	"json_escape_str ( & buf , section -> name , wctx )"		5069711	0					
ANR	5069821	Callee	json_escape_str		5069711	0					
ANR	5069822	Identifier	json_escape_str		5069711	0					
ANR	5069823	ArgumentList	& buf		5069711	1					
ANR	5069824	Argument	& buf		5069711	0					
ANR	5069825	UnaryOperationExpression	& buf		5069711	0					
ANR	5069826	UnaryOperator	&		5069711	0					
ANR	5069827	Identifier	buf		5069711	1					
ANR	5069828	Argument	section -> name		5069711	1					
ANR	5069829	PtrMemberAccess	section -> name		5069711	0					
ANR	5069830	Identifier	section		5069711	0					
ANR	5069831	Identifier	name		5069711	1					
ANR	5069832	Argument	wctx		5069711	2					
ANR	5069833	Identifier	wctx		5069711	0					
ANR	5069834	ExpressionStatement	JSON_INDENT ( )	35:8:613:626	5069711	2	True				
ANR	5069835	CallExpression	JSON_INDENT ( )		5069711	0					
ANR	5069836	Callee	JSON_INDENT		5069711	0					
ANR	5069837	Identifier	JSON_INDENT		5069711	0					
ANR	5069838	ArgumentList			5069711	1					
ANR	5069839	ExpressionStatement	json -> indent_level ++	39:8:639:659	5069711	3	True				
ANR	5069840	PostIncDecOperationExpression	json -> indent_level ++		5069711	0					
ANR	5069841	PtrMemberAccess	json -> indent_level		5069711	0					
ANR	5069842	Identifier	json		5069711	0					
ANR	5069843	Identifier	indent_level		5069711	1					
ANR	5069844	IncDec	++		5069711	1					
ANR	5069845	IfStatement	if ( section -> flags & SECTION_FLAG_IS_ARRAY )		5069711	4					
ANR	5069846	Condition	section -> flags & SECTION_FLAG_IS_ARRAY	41:12:674:711	5069711	0	True				
ANR	5069847	BitAndExpression	section -> flags & SECTION_FLAG_IS_ARRAY		5069711	0		&			
ANR	5069848	PtrMemberAccess	section -> flags		5069711	0					
ANR	5069849	Identifier	section		5069711	0					
ANR	5069850	Identifier	flags		5069711	1					
ANR	5069851	Identifier	SECTION_FLAG_IS_ARRAY		5069711	1					
ANR	5069852	CompoundStatement		39:52:653:653	5069711	1					
ANR	5069853	ExpressionStatement	"printf ( ""\\""%s\\"": [\\n"" , buf . str )"	43:12:729:759	5069711	0	True				
ANR	5069854	CallExpression	"printf ( ""\\""%s\\"": [\\n"" , buf . str )"		5069711	0					
ANR	5069855	Callee	printf		5069711	0					
ANR	5069856	Identifier	printf		5069711	0					
ANR	5069857	ArgumentList	"""\\""%s\\"": [\\n"""		5069711	1					
ANR	5069858	Argument	"""\\""%s\\"": [\\n"""		5069711	0					
ANR	5069859	PrimaryExpression	"""\\""%s\\"": [\\n"""		5069711	0					
ANR	5069860	Argument	buf . str		5069711	1					
ANR	5069861	MemberAccess	buf . str		5069711	0					
ANR	5069862	Identifier	buf		5069711	0					
ANR	5069863	Identifier	str		5069711	1					
ANR	5069864	ElseStatement	else		5069711	0					
ANR	5069865	IfStatement	if ( ! ( parent_section -> flags & SECTION_FLAG_IS_ARRAY ) )		5069711	0					
ANR	5069866	Condition	! ( parent_section -> flags & SECTION_FLAG_IS_ARRAY )	45:19:781:828	5069711	0	True				
ANR	5069867	UnaryOperationExpression	! ( parent_section -> flags & SECTION_FLAG_IS_ARRAY )		5069711	0					
ANR	5069868	UnaryOperator	!		5069711	0					
ANR	5069869	BitAndExpression	parent_section -> flags & SECTION_FLAG_IS_ARRAY		5069711	1		&			
ANR	5069870	PtrMemberAccess	parent_section -> flags		5069711	0					
ANR	5069871	Identifier	parent_section		5069711	0					
ANR	5069872	Identifier	flags		5069711	1					
ANR	5069873	Identifier	SECTION_FLAG_IS_ARRAY		5069711	1					
ANR	5069874	CompoundStatement		43:69:770:770	5069711	1					
ANR	5069875	ExpressionStatement	"printf ( ""\\""%s\\"": {%s"" , buf . str , json -> item_start_end )"	47:12:846:898	5069711	0	True				
ANR	5069876	CallExpression	"printf ( ""\\""%s\\"": {%s"" , buf . str , json -> item_start_end )"		5069711	0					
ANR	5069877	Callee	printf		5069711	0					
ANR	5069878	Identifier	printf		5069711	0					
ANR	5069879	ArgumentList	"""\\""%s\\"": {%s"""		5069711	1					
ANR	5069880	Argument	"""\\""%s\\"": {%s"""		5069711	0					
ANR	5069881	PrimaryExpression	"""\\""%s\\"": {%s"""		5069711	0					
ANR	5069882	Argument	buf . str		5069711	1					
ANR	5069883	MemberAccess	buf . str		5069711	0					
ANR	5069884	Identifier	buf		5069711	0					
ANR	5069885	Identifier	str		5069711	1					
ANR	5069886	Argument	json -> item_start_end		5069711	2					
ANR	5069887	PtrMemberAccess	json -> item_start_end		5069711	0					
ANR	5069888	Identifier	json		5069711	0					
ANR	5069889	Identifier	item_start_end		5069711	1					
ANR	5069890	ElseStatement	else		5069711	0					
ANR	5069891	CompoundStatement		47:15:855:855	5069711	0					
ANR	5069892	ExpressionStatement	"printf ( ""{%s"" , json -> item_start_end )"	51:12:931:966	5069711	0	True				
ANR	5069893	CallExpression	"printf ( ""{%s"" , json -> item_start_end )"		5069711	0					
ANR	5069894	Callee	printf		5069711	0					
ANR	5069895	Identifier	printf		5069711	0					
ANR	5069896	ArgumentList	"""{%s"""		5069711	1					
ANR	5069897	Argument	"""{%s"""		5069711	0					
ANR	5069898	PrimaryExpression	"""{%s"""		5069711	0					
ANR	5069899	Argument	json -> item_start_end		5069711	1					
ANR	5069900	PtrMemberAccess	json -> item_start_end		5069711	0					
ANR	5069901	Identifier	json		5069711	0					
ANR	5069902	Identifier	item_start_end		5069711	1					
ANR	5069903	IfStatement	if ( parent_section -> id == SECTION_ID_PACKETS_AND_FRAMES )		5069711	1					
ANR	5069904	Condition	parent_section -> id == SECTION_ID_PACKETS_AND_FRAMES	57:16:1080:1130	5069711	0	True				
ANR	5069905	EqualityExpression	parent_section -> id == SECTION_ID_PACKETS_AND_FRAMES		5069711	0		==			
ANR	5069906	PtrMemberAccess	parent_section -> id		5069711	0					
ANR	5069907	Identifier	parent_section		5069711	0					
ANR	5069908	Identifier	id		5069711	1					
ANR	5069909	Identifier	SECTION_ID_PACKETS_AND_FRAMES		5069711	1					
ANR	5069910	CompoundStatement		55:69:1072:1072	5069711	1					
ANR	5069911	IfStatement	if ( ! json -> compact )		5069711	0					
ANR	5069912	Condition	! json -> compact	59:20:1156:1169	5069711	0	True				
ANR	5069913	UnaryOperationExpression	! json -> compact		5069711	0					
ANR	5069914	UnaryOperator	!		5069711	0					
ANR	5069915	PtrMemberAccess	json -> compact		5069711	1					
ANR	5069916	Identifier	json		5069711	0					
ANR	5069917	Identifier	compact		5069711	1					
ANR	5069918	ExpressionStatement	JSON_INDENT ( )	61:20:1193:1206	5069711	1	True				
ANR	5069919	CallExpression	JSON_INDENT ( )		5069711	0					
ANR	5069920	Callee	JSON_INDENT		5069711	0					
ANR	5069921	Identifier	JSON_INDENT		5069711	0					
ANR	5069922	ArgumentList			5069711	1					
ANR	5069923	ExpressionStatement	"printf ( ""\\""type\\"": \\""%s\\""%s"" , section -> name , json -> item_sep )"	63:16:1225:1284	5069711	1	True				
ANR	5069924	CallExpression	"printf ( ""\\""type\\"": \\""%s\\""%s"" , section -> name , json -> item_sep )"		5069711	0					
ANR	5069925	Callee	printf		5069711	0					
ANR	5069926	Identifier	printf		5069711	0					
ANR	5069927	ArgumentList	"""\\""type\\"": \\""%s\\""%s"""		5069711	1					
ANR	5069928	Argument	"""\\""type\\"": \\""%s\\""%s"""		5069711	0					
ANR	5069929	PrimaryExpression	"""\\""type\\"": \\""%s\\""%s"""		5069711	0					
ANR	5069930	Argument	section -> name		5069711	1					
ANR	5069931	PtrMemberAccess	section -> name		5069711	0					
ANR	5069932	Identifier	section		5069711	0					
ANR	5069933	Identifier	name		5069711	1					
ANR	5069934	Argument	json -> item_sep		5069711	2					
ANR	5069935	PtrMemberAccess	json -> item_sep		5069711	0					
ANR	5069936	Identifier	json		5069711	0					
ANR	5069937	Identifier	item_sep		5069711	1					
ANR	5069938	ExpressionStatement	"av_bprint_finalize ( & buf , NULL )"	69:8:1321:1351	5069711	5	True				
ANR	5069939	CallExpression	"av_bprint_finalize ( & buf , NULL )"		5069711	0					
ANR	5069940	Callee	av_bprint_finalize		5069711	0					
ANR	5069941	Identifier	av_bprint_finalize		5069711	0					
ANR	5069942	ArgumentList	& buf		5069711	1					
ANR	5069943	Argument	& buf		5069711	0					
ANR	5069944	UnaryOperationExpression	& buf		5069711	0					
ANR	5069945	UnaryOperator	&		5069711	0					
ANR	5069946	Identifier	buf		5069711	1					
ANR	5069947	Argument	NULL		5069711	1					
ANR	5069948	Identifier	NULL		5069711	0					
ANR	5069949	ReturnType	static void		5069711	1					
ANR	5069950	Identifier	json_print_section_header		5069711	2					
ANR	5069951	ParameterList	WriterContext * wctx		5069711	3					
ANR	5069952	Parameter	WriterContext * wctx	1:38:38:56	5069711	0	True				
ANR	5069953	ParameterType	WriterContext *		5069711	0					
ANR	5069954	Identifier	wctx		5069711	1					
ANR	5069955	CFGEntryNode	ENTRY		5069711		True				
ANR	5069956	CFGExitNode	EXIT		5069711		True				
ANR	5069957	Symbol	SECTION_FLAG_IS_ARRAY		5069711						
ANR	5069958	Symbol	parent_section		5069711						
ANR	5069959	Symbol	SECTION_FLAG_IS_WRAPPER		5069711						
ANR	5069960	Symbol	wctx -> section		5069711						
ANR	5069961	Symbol	section		5069711						
ANR	5069962	Symbol	AV_BPRINT_SIZE_UNLIMITED		5069711						
ANR	5069963	Symbol	json -> item_start_end		5069711						
ANR	5069964	Symbol	section -> flags		5069711						
ANR	5069965	Symbol	json -> compact		5069711						
ANR	5069966	Symbol	json		5069711						
ANR	5069967	Symbol	buf . str		5069711						
ANR	5069968	Symbol	SECTION_ID_PACKETS_AND_FRAMES		5069711						
ANR	5069969	Symbol	json -> indent_level		5069711						
ANR	5069970	Symbol	& buf		5069711						
ANR	5069971	Symbol	* wctx		5069711						
ANR	5069972	Symbol	* section		5069711						
ANR	5069973	Symbol	* * wctx		5069711						
ANR	5069974	Symbol	NULL		5069711						
ANR	5069975	Symbol	wctx		5069711						
ANR	5069976	Symbol	* wctx -> nb_item		5069711						
ANR	5069977	Symbol	parent_section -> id		5069711						
ANR	5069978	Symbol	json -> item_sep		5069711						
ANR	5069979	Symbol	* parent_section		5069711						
ANR	5069980	Symbol	wctx -> nb_item		5069711						
ANR	5069981	Symbol	wctx -> priv		5069711						
ANR	5069982	Symbol	* wctx -> level		5069711						
ANR	5069983	Symbol	wctx -> level		5069711						
ANR	5069984	Symbol	buf		5069711						
ANR	5069985	Symbol	section -> name		5069711						
ANR	5069986	Symbol	parent_section -> flags		5069711						
ANR	5069987	Symbol	* wctx -> section		5069711						
ANR	5069988	Symbol	* json		5069711						
