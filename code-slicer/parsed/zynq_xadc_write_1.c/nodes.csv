command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9643431	File	/home/p4ultr4n/workplace/ReVeal/raw_code/zynq_xadc_write_1.c								
ANR	9643432	Function	zynq_xadc_write	1:0:0:1813							
ANR	9643433	FunctionDef	"zynq_xadc_write (void * opaque , hwaddr offset , uint64_t val , unsigned size)"		9643432	0					
ANR	9643434	CompoundStatement		5:0:116:1813	9643432	0					
ANR	9643435	IdentifierDeclStatement	ZynqXADCState * s = ( ZynqXADCState * ) opaque ;	7:4:123:165	9643432	0	True				
ANR	9643436	IdentifierDecl	* s = ( ZynqXADCState * ) opaque		9643432	0					
ANR	9643437	IdentifierDeclType	ZynqXADCState *		9643432	0					
ANR	9643438	Identifier	s		9643432	1					
ANR	9643439	AssignmentExpression	* s = ( ZynqXADCState * ) opaque		9643432	2		=			
ANR	9643440	Identifier	s		9643432	0					
ANR	9643441	CastExpression	( ZynqXADCState * ) opaque		9643432	1					
ANR	9643442	CastTarget	ZynqXADCState *		9643432	0					
ANR	9643443	Identifier	opaque		9643432	1					
ANR	9643444	IdentifierDeclStatement	int reg = offset / 4 ;	9:4:172:192	9643432	1	True				
ANR	9643445	IdentifierDecl	reg = offset / 4		9643432	0					
ANR	9643446	IdentifierDeclType	int		9643432	0					
ANR	9643447	Identifier	reg		9643432	1					
ANR	9643448	AssignmentExpression	reg = offset / 4		9643432	2		=			
ANR	9643449	Identifier	reg		9643432	0					
ANR	9643450	MultiplicativeExpression	offset / 4		9643432	1		/			
ANR	9643451	Identifier	offset		9643432	0					
ANR	9643452	PrimaryExpression	4		9643432	1					
ANR	9643453	IdentifierDeclStatement	int xadc_reg ;	11:4:199:211	9643432	2	True				
ANR	9643454	IdentifierDecl	xadc_reg		9643432	0					
ANR	9643455	IdentifierDeclType	int		9643432	0					
ANR	9643456	Identifier	xadc_reg		9643432	1					
ANR	9643457	IdentifierDeclStatement	int xadc_cmd ;	13:4:218:230	9643432	3	True				
ANR	9643458	IdentifierDecl	xadc_cmd		9643432	0					
ANR	9643459	IdentifierDeclType	int		9643432	0					
ANR	9643460	Identifier	xadc_cmd		9643432	1					
ANR	9643461	IdentifierDeclStatement	int xadc_data ;	15:4:237:250	9643432	4	True				
ANR	9643462	IdentifierDecl	xadc_data		9643432	0					
ANR	9643463	IdentifierDeclType	int		9643432	0					
ANR	9643464	Identifier	xadc_data		9643432	1					
ANR	9643465	IfStatement	"if ( ! zynq_xadc_check_offset ( reg , false ) )"		9643432	5					
ANR	9643466	Condition	"! zynq_xadc_check_offset ( reg , false )"	19:8:263:297	9643432	0	True				
ANR	9643467	UnaryOperationExpression	"! zynq_xadc_check_offset ( reg , false )"		9643432	0					
ANR	9643468	UnaryOperator	!		9643432	0					
ANR	9643469	CallExpression	"zynq_xadc_check_offset ( reg , false )"		9643432	1					
ANR	9643470	Callee	zynq_xadc_check_offset		9643432	0					
ANR	9643471	Identifier	zynq_xadc_check_offset		9643432	0					
ANR	9643472	ArgumentList	reg		9643432	1					
ANR	9643473	Argument	reg		9643432	0					
ANR	9643474	Identifier	reg		9643432	0					
ANR	9643475	Argument	false		9643432	1					
ANR	9643476	Identifier	false		9643432	0					
ANR	9643477	CompoundStatement		15:45:183:183	9643432	1					
ANR	9643478	Statement	qemu_log_mask	21:8:311:323	9643432	0	True				
ANR	9643479	Statement	(	21:21:324:324	9643432	1	True				
ANR	9643480	Statement	LOG_GUEST_ERROR	21:22:325:339	9643432	2	True				
ANR	9643481	Statement	","	21:37:340:340	9643432	3	True				
ANR	9643482	Statement	"""zynq_xadc: Invalid write access """	21:39:342:375	9643432	4	True				
ANR	9643483	Statement	"""to addr %"""	23:22:400:410	9643432	5	True				
ANR	9643484	Statement	HWADDR_PRIx	23:34:412:422	9643432	6	True				
ANR	9643485	Statement	"""\\n"""	23:46:424:427	9643432	7	True				
ANR	9643486	Statement	","	23:50:428:428	9643432	8	True				
ANR	9643487	Statement	offset	23:52:430:435	9643432	9	True				
ANR	9643488	Statement	)	23:58:436:436	9643432	10	True				
ANR	9643489	ExpressionStatement		23:59:437:437	9643432	11	True				
ANR	9643490	ReturnStatement	return ;	25:8:448:454	9643432	12	True				
ANR	9643491	SwitchStatement	switch ( reg )		9643432	6					
ANR	9643492	Condition	reg	31:12:478:480	9643432	0	True				
ANR	9643493	Identifier	reg		9643432	0					
ANR	9643494	CompoundStatement		27:17:366:366	9643432	1					
ANR	9643495	Label	case CFG :	33:4:490:498	9643432	0	True				
ANR	9643496	Identifier	CFG		9643432	0					
ANR	9643497	ExpressionStatement	s -> regs [ CFG ] = val	35:8:509:527	9643432	1	True				
ANR	9643498	AssignmentExpression	s -> regs [ CFG ] = val		9643432	0		=			
ANR	9643499	ArrayIndexing	s -> regs [ CFG ]		9643432	0					
ANR	9643500	PtrMemberAccess	s -> regs		9643432	0					
ANR	9643501	Identifier	s		9643432	0					
ANR	9643502	Identifier	regs		9643432	1					
ANR	9643503	Identifier	CFG		9643432	1					
ANR	9643504	Identifier	val		9643432	1					
ANR	9643505	BreakStatement	break ;	37:8:538:543	9643432	2	True				
ANR	9643506	Label	case INT_STS :	39:4:550:562	9643432	3	True				
ANR	9643507	Identifier	INT_STS		9643432	0					
ANR	9643508	ExpressionStatement	s -> regs [ INT_STS ] &= ~val	41:8:573:597	9643432	4	True				
ANR	9643509	AssignmentExpression	s -> regs [ INT_STS ] &= ~val		9643432	0		&=			
ANR	9643510	ArrayIndexing	s -> regs [ INT_STS ]		9643432	0					
ANR	9643511	PtrMemberAccess	s -> regs		9643432	0					
ANR	9643512	Identifier	s		9643432	0					
ANR	9643513	Identifier	regs		9643432	1					
ANR	9643514	Identifier	INT_STS		9643432	1					
ANR	9643515	Identifier	~val		9643432	1					
ANR	9643516	BreakStatement	break ;	43:8:608:613	9643432	5	True				
ANR	9643517	Label	case INT_MASK :	45:4:620:633	9643432	6	True				
ANR	9643518	Identifier	INT_MASK		9643432	0					
ANR	9643519	ExpressionStatement	s -> regs [ INT_MASK ] = val & INT_ALL	47:8:644:677	9643432	7	True				
ANR	9643520	AssignmentExpression	s -> regs [ INT_MASK ] = val & INT_ALL		9643432	0		=			
ANR	9643521	ArrayIndexing	s -> regs [ INT_MASK ]		9643432	0					
ANR	9643522	PtrMemberAccess	s -> regs		9643432	0					
ANR	9643523	Identifier	s		9643432	0					
ANR	9643524	Identifier	regs		9643432	1					
ANR	9643525	Identifier	INT_MASK		9643432	1					
ANR	9643526	BitAndExpression	val & INT_ALL		9643432	1		&			
ANR	9643527	Identifier	val		9643432	0					
ANR	9643528	Identifier	INT_ALL		9643432	1					
ANR	9643529	BreakStatement	break ;	49:8:688:693	9643432	8	True				
ANR	9643530	Label	case CMDFIFO :	51:4:700:712	9643432	9	True				
ANR	9643531	Identifier	CMDFIFO		9643432	0					
ANR	9643532	ExpressionStatement	"xadc_cmd = extract32 ( val , 26 , 4 )"	53:8:723:757	9643432	10	True				
ANR	9643533	AssignmentExpression	"xadc_cmd = extract32 ( val , 26 , 4 )"		9643432	0		=			
ANR	9643534	Identifier	xadc_cmd		9643432	0					
ANR	9643535	CallExpression	"extract32 ( val , 26 , 4 )"		9643432	1					
ANR	9643536	Callee	extract32		9643432	0					
ANR	9643537	Identifier	extract32		9643432	0					
ANR	9643538	ArgumentList	val		9643432	1					
ANR	9643539	Argument	val		9643432	0					
ANR	9643540	Identifier	val		9643432	0					
ANR	9643541	Argument	26		9643432	1					
ANR	9643542	PrimaryExpression	26		9643432	0					
ANR	9643543	Argument	4		9643432	2					
ANR	9643544	PrimaryExpression	4		9643432	0					
ANR	9643545	ExpressionStatement	"xadc_reg = extract32 ( val , 16 , 10 )"	55:8:768:802	9643432	11	True				
ANR	9643546	AssignmentExpression	"xadc_reg = extract32 ( val , 16 , 10 )"		9643432	0		=			
ANR	9643547	Identifier	xadc_reg		9643432	0					
ANR	9643548	CallExpression	"extract32 ( val , 16 , 10 )"		9643432	1					
ANR	9643549	Callee	extract32		9643432	0					
ANR	9643550	Identifier	extract32		9643432	0					
ANR	9643551	ArgumentList	val		9643432	1					
ANR	9643552	Argument	val		9643432	0					
ANR	9643553	Identifier	val		9643432	0					
ANR	9643554	Argument	16		9643432	1					
ANR	9643555	PrimaryExpression	16		9643432	0					
ANR	9643556	Argument	10		9643432	2					
ANR	9643557	PrimaryExpression	10		9643432	0					
ANR	9643558	ExpressionStatement	"xadc_data = extract32 ( val , 0 , 16 )"	57:8:813:847	9643432	12	True				
ANR	9643559	AssignmentExpression	"xadc_data = extract32 ( val , 0 , 16 )"		9643432	0		=			
ANR	9643560	Identifier	xadc_data		9643432	0					
ANR	9643561	CallExpression	"extract32 ( val , 0 , 16 )"		9643432	1					
ANR	9643562	Callee	extract32		9643432	0					
ANR	9643563	Identifier	extract32		9643432	0					
ANR	9643564	ArgumentList	val		9643432	1					
ANR	9643565	Argument	val		9643432	0					
ANR	9643566	Identifier	val		9643432	0					
ANR	9643567	Argument	0		9643432	1					
ANR	9643568	PrimaryExpression	0		9643432	0					
ANR	9643569	Argument	16		9643432	2					
ANR	9643570	PrimaryExpression	16		9643432	0					
ANR	9643571	IfStatement	if ( s -> regs [ MCTL ] & MCTL_RESET )		9643432	13					
ANR	9643572	Condition	s -> regs [ MCTL ] & MCTL_RESET	61:12:864:889	9643432	0	True				
ANR	9643573	BitAndExpression	s -> regs [ MCTL ] & MCTL_RESET		9643432	0		&			
ANR	9643574	ArrayIndexing	s -> regs [ MCTL ]		9643432	0					
ANR	9643575	PtrMemberAccess	s -> regs		9643432	0					
ANR	9643576	Identifier	s		9643432	0					
ANR	9643577	Identifier	regs		9643432	1					
ANR	9643578	Identifier	MCTL		9643432	1					
ANR	9643579	Identifier	MCTL_RESET		9643432	1					
ANR	9643580	CompoundStatement		57:40:775:775	9643432	1					
ANR	9643581	Statement	qemu_log_mask	63:12:907:919	9643432	0	True				
ANR	9643582	Statement	(	63:25:920:920	9643432	1	True				
ANR	9643583	Statement	LOG_GUEST_ERROR	63:26:921:935	9643432	2	True				
ANR	9643584	Statement	","	63:41:936:936	9643432	3	True				
ANR	9643585	Statement	"""zynq_xadc: Sending command """	63:43:938:966	9643432	4	True				
ANR	9643586	Statement	"""while comm channel held in reset: %"""	65:26:995:1031	9643432	5	True				
ANR	9643587	Statement	PRIx32	65:64:1033:1038	9643432	6	True				
ANR	9643588	Statement	"""\\n"""	65:71:1040:1043	9643432	7	True				
ANR	9643589	Statement	","	65:75:1044:1044	9643432	8	True				
ANR	9643590	Statement	(	67:26:1073:1073	9643432	9	True				
ANR	9643591	Statement	uint32_t	67:27:1074:1081	9643432	10	True				
ANR	9643592	Statement	)	67:35:1082:1082	9643432	11	True				
ANR	9643593	Statement	val	67:37:1084:1086	9643432	12	True				
ANR	9643594	Statement	)	67:40:1087:1087	9643432	13	True				
ANR	9643595	ExpressionStatement		67:41:1088:1088	9643432	14	True				
ANR	9643596	BreakStatement	break ;	69:12:1103:1108	9643432	15	True				
ANR	9643597	IfStatement	if ( xadc_reg > ZYNQ_XADC_NUM_ADC_REGS && xadc_cmd != CMD_NOP )		9643432	14					
ANR	9643598	Condition	xadc_reg > ZYNQ_XADC_NUM_ADC_REGS && xadc_cmd != CMD_NOP	75:12:1136:1191	9643432	0	True				
ANR	9643599	AndExpression	xadc_reg > ZYNQ_XADC_NUM_ADC_REGS && xadc_cmd != CMD_NOP		9643432	0		&&			
ANR	9643600	RelationalExpression	xadc_reg > ZYNQ_XADC_NUM_ADC_REGS		9643432	0		>			
ANR	9643601	Identifier	xadc_reg		9643432	0					
ANR	9643602	Identifier	ZYNQ_XADC_NUM_ADC_REGS		9643432	1					
ANR	9643603	EqualityExpression	xadc_cmd != CMD_NOP		9643432	1		!=			
ANR	9643604	Identifier	xadc_cmd		9643432	0					
ANR	9643605	Identifier	CMD_NOP		9643432	1					
ANR	9643606	CompoundStatement		71:70:1077:1077	9643432	1					
ANR	9643607	Statement	qemu_log_mask	77:12:1209:1221	9643432	0	True				
ANR	9643608	Statement	(	77:25:1222:1222	9643432	1	True				
ANR	9643609	Statement	LOG_GUEST_ERROR	77:26:1223:1237	9643432	2	True				
ANR	9643610	Statement	","	77:41:1238:1238	9643432	3	True				
ANR	9643611	Statement	"""read/write op to invalid xadc """	77:43:1240:1271	9643432	4	True				
ANR	9643612	Statement	"""reg 0x%x\\n"""	79:26:1300:1311	9643432	5	True				
ANR	9643613	Statement	","	79:38:1312:1312	9643432	6	True				
ANR	9643614	Statement	xadc_reg	79:40:1314:1321	9643432	7	True				
ANR	9643615	Statement	)	79:48:1322:1322	9643432	8	True				
ANR	9643616	ExpressionStatement		79:49:1323:1323	9643432	9	True				
ANR	9643617	BreakStatement	break ;	81:12:1338:1343	9643432	10	True				
ANR	9643618	SwitchStatement	switch ( xadc_cmd )		9643432	15					
ANR	9643619	Condition	xadc_cmd	87:16:1375:1382	9643432	0	True				
ANR	9643620	Identifier	xadc_cmd		9643432	0					
ANR	9643621	CompoundStatement		83:26:1268:1268	9643432	1					
ANR	9643622	Label	case CMD_READ :	89:8:1396:1409	9643432	0	True				
ANR	9643623	Identifier	CMD_READ		9643432	0					
ANR	9643624	ExpressionStatement	"xadc_push_dfifo ( s , s -> xadc_regs [ xadc_reg ] )"	91:12:1424:1466	9643432	1	True				
ANR	9643625	CallExpression	"xadc_push_dfifo ( s , s -> xadc_regs [ xadc_reg ] )"		9643432	0					
ANR	9643626	Callee	xadc_push_dfifo		9643432	0					
ANR	9643627	Identifier	xadc_push_dfifo		9643432	0					
ANR	9643628	ArgumentList	s		9643432	1					
ANR	9643629	Argument	s		9643432	0					
ANR	9643630	Identifier	s		9643432	0					
ANR	9643631	Argument	s -> xadc_regs [ xadc_reg ]		9643432	1					
ANR	9643632	ArrayIndexing	s -> xadc_regs [ xadc_reg ]		9643432	0					
ANR	9643633	PtrMemberAccess	s -> xadc_regs		9643432	0					
ANR	9643634	Identifier	s		9643432	0					
ANR	9643635	Identifier	xadc_regs		9643432	1					
ANR	9643636	Identifier	xadc_reg		9643432	1					
ANR	9643637	BreakStatement	break ;	93:12:1481:1486	9643432	2	True				
ANR	9643638	Label	case CMD_WRITE :	95:8:1497:1511	9643432	3	True				
ANR	9643639	Identifier	CMD_WRITE		9643432	0					
ANR	9643640	ExpressionStatement	s -> xadc_regs [ xadc_reg ] = xadc_data	97:12:1526:1560	9643432	4	True				
ANR	9643641	AssignmentExpression	s -> xadc_regs [ xadc_reg ] = xadc_data		9643432	0		=			
ANR	9643642	ArrayIndexing	s -> xadc_regs [ xadc_reg ]		9643432	0					
ANR	9643643	PtrMemberAccess	s -> xadc_regs		9643432	0					
ANR	9643644	Identifier	s		9643432	0					
ANR	9643645	Identifier	xadc_regs		9643432	1					
ANR	9643646	Identifier	xadc_reg		9643432	1					
ANR	9643647	Identifier	xadc_data		9643432	1					
ANR	9643648	Label	case CMD_NOP :	101:8:1602:1614	9643432	5	True				
ANR	9643649	Identifier	CMD_NOP		9643432	0					
ANR	9643650	ExpressionStatement	"xadc_push_dfifo ( s , 0 )"	103:12:1629:1650	9643432	6	True				
ANR	9643651	CallExpression	"xadc_push_dfifo ( s , 0 )"		9643432	0					
ANR	9643652	Callee	xadc_push_dfifo		9643432	0					
ANR	9643653	Identifier	xadc_push_dfifo		9643432	0					
ANR	9643654	ArgumentList	s		9643432	1					
ANR	9643655	Argument	s		9643432	0					
ANR	9643656	Identifier	s		9643432	0					
ANR	9643657	Argument	0		9643432	1					
ANR	9643658	PrimaryExpression	0		9643432	0					
ANR	9643659	BreakStatement	break ;	105:12:1665:1670	9643432	7	True				
ANR	9643660	BreakStatement	break ;	109:8:1692:1697	9643432	16	True				
ANR	9643661	Label	case MCTL :	111:4:1704:1713	9643432	17	True				
ANR	9643662	Identifier	MCTL		9643432	0					
ANR	9643663	ExpressionStatement	s -> regs [ MCTL ] = val & 0x00fffeff	113:8:1724:1756	9643432	18	True				
ANR	9643664	AssignmentExpression	s -> regs [ MCTL ] = val & 0x00fffeff		9643432	0		=			
ANR	9643665	ArrayIndexing	s -> regs [ MCTL ]		9643432	0					
ANR	9643666	PtrMemberAccess	s -> regs		9643432	0					
ANR	9643667	Identifier	s		9643432	0					
ANR	9643668	Identifier	regs		9643432	1					
ANR	9643669	Identifier	MCTL		9643432	1					
ANR	9643670	BitAndExpression	val & 0x00fffeff		9643432	1		&			
ANR	9643671	Identifier	val		9643432	0					
ANR	9643672	PrimaryExpression	0x00fffeff		9643432	1					
ANR	9643673	BreakStatement	break ;	115:8:1767:1772	9643432	19	True				
ANR	9643674	ExpressionStatement	zynq_xadc_update_ints ( s )	119:4:1786:1810	9643432	7	True				
ANR	9643675	CallExpression	zynq_xadc_update_ints ( s )		9643432	0					
ANR	9643676	Callee	zynq_xadc_update_ints		9643432	0					
ANR	9643677	Identifier	zynq_xadc_update_ints		9643432	0					
ANR	9643678	ArgumentList	s		9643432	1					
ANR	9643679	Argument	s		9643432	0					
ANR	9643680	Identifier	s		9643432	0					
ANR	9643681	ReturnType	static void		9643432	1					
ANR	9643682	Identifier	zynq_xadc_write		9643432	2					
ANR	9643683	ParameterList	"void * opaque , hwaddr offset , uint64_t val , unsigned size"		9643432	3					
ANR	9643684	Parameter	void * opaque	1:28:28:39	9643432	0	True				
ANR	9643685	ParameterType	void *		9643432	0					
ANR	9643686	Identifier	opaque		9643432	1					
ANR	9643687	Parameter	hwaddr offset	1:42:42:54	9643432	1	True				
ANR	9643688	ParameterType	hwaddr		9643432	0					
ANR	9643689	Identifier	offset		9643432	1					
ANR	9643690	Parameter	uint64_t val	1:57:57:68	9643432	2	True				
ANR	9643691	ParameterType	uint64_t		9643432	0					
ANR	9643692	Identifier	val		9643432	1					
ANR	9643693	Parameter	unsigned size	3:28:100:112	9643432	3	True				
ANR	9643694	ParameterType	unsigned		9643432	0					
ANR	9643695	Identifier	size		9643432	1					
ANR	9643696	CFGEntryNode	ENTRY		9643432		True				
ANR	9643697	CFGExitNode	EXIT		9643432		True				
ANR	9643698	Symbol	* INT_STS		9643432						
ANR	9643699	Symbol	MCTL_RESET		9643432						
ANR	9643700	Symbol	CFG		9643432						
ANR	9643701	Symbol	INT_MASK		9643432						
ANR	9643702	Symbol	extract32		9643432						
ANR	9643703	Symbol	xadc_data		9643432						
ANR	9643704	Symbol	* CFG		9643432						
ANR	9643705	Symbol	reg		9643432						
ANR	9643706	Symbol	* MCTL		9643432						
ANR	9643707	Symbol	* * s		9643432						
ANR	9643708	Symbol	~val		9643432						
ANR	9643709	Symbol	CMD_NOP		9643432						
ANR	9643710	Symbol	* xadc_reg		9643432						
ANR	9643711	Symbol	zynq_xadc_check_offset		9643432						
ANR	9643712	Symbol	INT_ALL		9643432						
ANR	9643713	Symbol	* s -> regs		9643432						
ANR	9643714	Symbol	val		9643432						
ANR	9643715	Symbol	s -> regs		9643432						
ANR	9643716	Symbol	opaque		9643432						
ANR	9643717	Symbol	offset		9643432						
ANR	9643718	Symbol	false		9643432						
ANR	9643719	Symbol	MCTL		9643432						
ANR	9643720	Symbol	xadc_cmd		9643432						
ANR	9643721	Symbol	INT_STS		9643432						
ANR	9643722	Symbol	s		9643432						
ANR	9643723	Symbol	xadc_reg		9643432						
ANR	9643724	Symbol	ZYNQ_XADC_NUM_ADC_REGS		9643432						
ANR	9643725	Symbol	size		9643432						
ANR	9643726	Symbol	* s -> xadc_regs		9643432						
ANR	9643727	Symbol	s -> xadc_regs		9643432						
ANR	9643728	Symbol	* s		9643432						
ANR	9643729	Symbol	* INT_MASK		9643432						
