command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6370510	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_times_1.c								
ANR	6370511	Function	parse_times	1:0:0:1469							
ANR	6370512	FunctionDef	"parse_times (void * log_ctx , int64_t * * times , int * nb_times , const char * times_str)"		6370511	0					
ANR	6370513	CompoundStatement		5:0:118:1469	6370511	0					
ANR	6370514	IdentifierDeclStatement	char * p ;	7:4:125:132	6370511	0	True				
ANR	6370515	IdentifierDecl	* p		6370511	0					
ANR	6370516	IdentifierDeclType	char *		6370511	0					
ANR	6370517	Identifier	p		6370511	1					
ANR	6370518	IdentifierDeclStatement	"int i , ret = 0 ;"	9:4:139:153	6370511	1	True				
ANR	6370519	IdentifierDecl	i		6370511	0					
ANR	6370520	IdentifierDeclType	int		6370511	0					
ANR	6370521	Identifier	i		6370511	1					
ANR	6370522	IdentifierDecl	ret = 0		6370511	1					
ANR	6370523	IdentifierDeclType	int		6370511	0					
ANR	6370524	Identifier	ret		6370511	1					
ANR	6370525	AssignmentExpression	ret = 0		6370511	2		=			
ANR	6370526	Identifier	ret		6370511	0					
ANR	6370527	PrimaryExpression	0		6370511	1					
ANR	6370528	IdentifierDeclStatement	char * times_str1 = av_strdup ( times_str ) ;	11:4:160:199	6370511	2	True				
ANR	6370529	IdentifierDecl	* times_str1 = av_strdup ( times_str )		6370511	0					
ANR	6370530	IdentifierDeclType	char *		6370511	0					
ANR	6370531	Identifier	times_str1		6370511	1					
ANR	6370532	AssignmentExpression	* times_str1 = av_strdup ( times_str )		6370511	2		=			
ANR	6370533	Identifier	times_str1		6370511	0					
ANR	6370534	CallExpression	av_strdup ( times_str )		6370511	1					
ANR	6370535	Callee	av_strdup		6370511	0					
ANR	6370536	Identifier	av_strdup		6370511	0					
ANR	6370537	ArgumentList	times_str		6370511	1					
ANR	6370538	Argument	times_str		6370511	0					
ANR	6370539	Identifier	times_str		6370511	0					
ANR	6370540	IdentifierDeclStatement	char * saveptr = NULL ;	13:4:206:226	6370511	3	True				
ANR	6370541	IdentifierDecl	* saveptr = NULL		6370511	0					
ANR	6370542	IdentifierDeclType	char *		6370511	0					
ANR	6370543	Identifier	saveptr		6370511	1					
ANR	6370544	AssignmentExpression	* saveptr = NULL		6370511	2		=			
ANR	6370545	Identifier	NULL		6370511	0					
ANR	6370546	Identifier	NULL		6370511	1					
ANR	6370547	IfStatement	if ( ! times_str1 )		6370511	4					
ANR	6370548	Condition	! times_str1	17:8:239:249	6370511	0	True				
ANR	6370549	UnaryOperationExpression	! times_str1		6370511	0					
ANR	6370550	UnaryOperator	!		6370511	0					
ANR	6370551	Identifier	times_str1		6370511	1					
ANR	6370552	ReturnStatement	return AVERROR ( ENOMEM ) ;	19:8:261:283	6370511	1	True				
ANR	6370553	CallExpression	AVERROR ( ENOMEM )		6370511	0					
ANR	6370554	Callee	AVERROR		6370511	0					
ANR	6370555	Identifier	AVERROR		6370511	0					
ANR	6370556	ArgumentList	ENOMEM		6370511	1					
ANR	6370557	Argument	ENOMEM		6370511	0					
ANR	6370558	Identifier	ENOMEM		6370511	0					
ANR	6370559	Statement	define	23:1:289:294	6370511	5	True				
ANR	6370560	Statement	FAIL	23:8:296:299	6370511	6	True				
ANR	6370561	ExpressionStatement	( err ) ret = err	23:12:300:315	6370511	7	True				
ANR	6370562	AssignmentExpression	( err ) ret = err		6370511	0		=			
ANR	6370563	CastExpression	( err ) ret		6370511	0					
ANR	6370564	CastTarget	err		6370511	0					
ANR	6370565	Identifier	ret		6370511	1					
ANR	6370566	Identifier	err		6370511	1					
ANR	6370567	Statement	goto	23:29:317:320	6370511	8	True				
ANR	6370568	IdentifierDeclStatement	end * nb_times = 1 ;	23:34:322:346	6370511	9	True				
ANR	6370569	IdentifierDecl	* nb_times = 1		6370511	0					
ANR	6370570	IdentifierDeclType	end *		6370511	0					
ANR	6370571	Identifier	nb_times		6370511	1					
ANR	6370572	AssignmentExpression	* nb_times = 1		6370511	2		=			
ANR	6370573	Identifier	nb_times		6370511	0					
ANR	6370574	PrimaryExpression	1		6370511	1					
ANR	6370575	ForStatement	for ( p = times_str1 ; * p ; p ++ )		6370511	10					
ANR	6370576	ForInit	p = times_str1 ;	29:9:358:372	6370511	0	True				
ANR	6370577	AssignmentExpression	p = times_str1		6370511	0		=			
ANR	6370578	Identifier	p		6370511	0					
ANR	6370579	Identifier	times_str1		6370511	1					
ANR	6370580	Condition	* p	29:25:374:375	6370511	1	True				
ANR	6370581	UnaryOperationExpression	* p		6370511	0					
ANR	6370582	UnaryOperator	*		6370511	0					
ANR	6370583	Identifier	p		6370511	1					
ANR	6370584	PostIncDecOperationExpression	p ++	29:29:378:380	6370511	2	True				
ANR	6370585	Identifier	p		6370511	0					
ANR	6370586	IncDec	++		6370511	1					
ANR	6370587	IfStatement	"if ( * p == ',' )"		6370511	3					
ANR	6370588	Condition	"* p == ','"	31:12:396:404	6370511	0	True				
ANR	6370589	EqualityExpression	"* p == ','"		6370511	0		==			
ANR	6370590	UnaryOperationExpression	* p		6370511	0					
ANR	6370591	UnaryOperator	*		6370511	0					
ANR	6370592	Identifier	p		6370511	1					
ANR	6370593	PrimaryExpression	"','"		6370511	1					
ANR	6370594	ExpressionStatement	( * nb_times ) ++	33:12:420:433	6370511	1	True				
ANR	6370595	PostIncDecOperationExpression	( * nb_times ) ++		6370511	0					
ANR	6370596	UnaryOperationExpression	* nb_times		6370511	0					
ANR	6370597	UnaryOperator	*		6370511	0					
ANR	6370598	Identifier	nb_times		6370511	1					
ANR	6370599	IncDec	++		6370511	1					
ANR	6370600	ExpressionStatement	* times = av_malloc ( sizeof ( * * times ) * * nb_times )	37:4:442:489	6370511	11	True				
ANR	6370601	AssignmentExpression	* times = av_malloc ( sizeof ( * * times ) * * nb_times )		6370511	0		=			
ANR	6370602	UnaryOperationExpression	* times		6370511	0					
ANR	6370603	UnaryOperator	*		6370511	0					
ANR	6370604	Identifier	times		6370511	1					
ANR	6370605	CallExpression	av_malloc ( sizeof ( * * times ) * * nb_times )		6370511	1					
ANR	6370606	Callee	av_malloc		6370511	0					
ANR	6370607	Identifier	av_malloc		6370511	0					
ANR	6370608	ArgumentList	sizeof ( * * times ) * * nb_times		6370511	1					
ANR	6370609	Argument	sizeof ( * * times ) * * nb_times		6370511	0					
ANR	6370610	MultiplicativeExpression	sizeof ( * * times ) * * nb_times		6370511	0		*			
ANR	6370611	SizeofExpression	sizeof ( * * times )		6370511	0					
ANR	6370612	Sizeof	sizeof		6370511	0					
ANR	6370613	UnaryOperationExpression	* * times		6370511	1					
ANR	6370614	UnaryOperator	*		6370511	0					
ANR	6370615	UnaryOperationExpression	* times		6370511	1					
ANR	6370616	UnaryOperator	*		6370511	0					
ANR	6370617	Identifier	times		6370511	1					
ANR	6370618	UnaryOperationExpression	* nb_times		6370511	1					
ANR	6370619	UnaryOperator	*		6370511	0					
ANR	6370620	Identifier	nb_times		6370511	1					
ANR	6370621	IfStatement	if ( ! * times )		6370511	12					
ANR	6370622	Condition	! * times	39:8:500:506	6370511	0	True				
ANR	6370623	UnaryOperationExpression	! * times		6370511	0					
ANR	6370624	UnaryOperator	!		6370511	0					
ANR	6370625	UnaryOperationExpression	* times		6370511	1					
ANR	6370626	UnaryOperator	*		6370511	0					
ANR	6370627	Identifier	times		6370511	1					
ANR	6370628	CompoundStatement		35:17:390:390	6370511	1					
ANR	6370629	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not allocate forced times array\\n"" )"	41:8:520:592	6370511	0	True				
ANR	6370630	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not allocate forced times array\\n"" )"		6370511	0					
ANR	6370631	Callee	av_log		6370511	0					
ANR	6370632	Identifier	av_log		6370511	0					
ANR	6370633	ArgumentList	log_ctx		6370511	1					
ANR	6370634	Argument	log_ctx		6370511	0					
ANR	6370635	Identifier	log_ctx		6370511	0					
ANR	6370636	Argument	AV_LOG_ERROR		6370511	1					
ANR	6370637	Identifier	AV_LOG_ERROR		6370511	0					
ANR	6370638	Argument	"""Could not allocate forced times array\\n"""		6370511	2					
ANR	6370639	PrimaryExpression	"""Could not allocate forced times array\\n"""		6370511	0					
ANR	6370640	ExpressionStatement	FAIL ( AVERROR ( ENOMEM ) )	43:8:603:624	6370511	1	True				
ANR	6370641	CallExpression	FAIL ( AVERROR ( ENOMEM ) )		6370511	0					
ANR	6370642	Callee	FAIL		6370511	0					
ANR	6370643	Identifier	FAIL		6370511	0					
ANR	6370644	ArgumentList	AVERROR ( ENOMEM )		6370511	1					
ANR	6370645	Argument	AVERROR ( ENOMEM )		6370511	0					
ANR	6370646	CallExpression	AVERROR ( ENOMEM )		6370511	0					
ANR	6370647	Callee	AVERROR		6370511	0					
ANR	6370648	Identifier	AVERROR		6370511	0					
ANR	6370649	ArgumentList	ENOMEM		6370511	1					
ANR	6370650	Argument	ENOMEM		6370511	0					
ANR	6370651	Identifier	ENOMEM		6370511	0					
ANR	6370652	ExpressionStatement	p = times_str1	49:4:640:654	6370511	13	True				
ANR	6370653	AssignmentExpression	p = times_str1		6370511	0		=			
ANR	6370654	Identifier	p		6370511	0					
ANR	6370655	Identifier	times_str1		6370511	1					
ANR	6370656	ForStatement	for ( i = 0 ; i < * nb_times ; i ++ )		6370511	14					
ANR	6370657	ForInit	i = 0 ;	51:9:666:671	6370511	0	True				
ANR	6370658	AssignmentExpression	i = 0		6370511	0		=			
ANR	6370659	Identifier	i		6370511	0					
ANR	6370660	PrimaryExpression	0		6370511	1					
ANR	6370661	Condition	i < * nb_times	51:16:673:685	6370511	1	True				
ANR	6370662	RelationalExpression	i < * nb_times		6370511	0		<			
ANR	6370663	Identifier	i		6370511	0					
ANR	6370664	UnaryOperationExpression	* nb_times		6370511	1					
ANR	6370665	UnaryOperator	*		6370511	0					
ANR	6370666	Identifier	nb_times		6370511	1					
ANR	6370667	PostIncDecOperationExpression	i ++	51:31:688:690	6370511	2	True				
ANR	6370668	Identifier	i		6370511	0					
ANR	6370669	IncDec	++		6370511	1					
ANR	6370670	CompoundStatement		51:8:605:645	6370511	3					
ANR	6370671	IdentifierDeclStatement	int64_t t ;	53:8:704:713	6370511	0	True				
ANR	6370672	IdentifierDecl	t		6370511	0					
ANR	6370673	IdentifierDeclType	int64_t		6370511	0					
ANR	6370674	Identifier	t		6370511	1					
ANR	6370675	IdentifierDeclStatement	"char * tstr = av_strtok ( p , "","" , & saveptr ) ;"	55:8:724:764	6370511	1	True				
ANR	6370676	IdentifierDecl	"* tstr = av_strtok ( p , "","" , & saveptr )"		6370511	0					
ANR	6370677	IdentifierDeclType	char *		6370511	0					
ANR	6370678	Identifier	tstr		6370511	1					
ANR	6370679	AssignmentExpression	"* tstr = av_strtok ( p , "","" , & saveptr )"		6370511	2		=			
ANR	6370680	Identifier	tstr		6370511	0					
ANR	6370681	CallExpression	"av_strtok ( p , "","" , & saveptr )"		6370511	1					
ANR	6370682	Callee	av_strtok		6370511	0					
ANR	6370683	Identifier	av_strtok		6370511	0					
ANR	6370684	ArgumentList	p		6370511	1					
ANR	6370685	Argument	p		6370511	0					
ANR	6370686	Identifier	p		6370511	0					
ANR	6370687	Argument	""","""		6370511	1					
ANR	6370688	PrimaryExpression	""","""		6370511	0					
ANR	6370689	Argument	& saveptr		6370511	2					
ANR	6370690	UnaryOperationExpression	& saveptr		6370511	0					
ANR	6370691	UnaryOperator	&		6370511	0					
ANR	6370692	Identifier	saveptr		6370511	1					
ANR	6370693	ExpressionStatement	av_assert0 ( tstr )	57:8:775:791	6370511	2	True				
ANR	6370694	CallExpression	av_assert0 ( tstr )		6370511	0					
ANR	6370695	Callee	av_assert0		6370511	0					
ANR	6370696	Identifier	av_assert0		6370511	0					
ANR	6370697	ArgumentList	tstr		6370511	1					
ANR	6370698	Argument	tstr		6370511	0					
ANR	6370699	Identifier	tstr		6370511	0					
ANR	6370700	ExpressionStatement	p = NULL	59:8:802:810	6370511	3	True				
ANR	6370701	AssignmentExpression	p = NULL		6370511	0		=			
ANR	6370702	Identifier	p		6370511	0					
ANR	6370703	Identifier	NULL		6370511	1					
ANR	6370704	ExpressionStatement	"ret = av_parse_time ( & t , tstr , 1 )"	63:8:823:855	6370511	4	True				
ANR	6370705	AssignmentExpression	"ret = av_parse_time ( & t , tstr , 1 )"		6370511	0		=			
ANR	6370706	Identifier	ret		6370511	0					
ANR	6370707	CallExpression	"av_parse_time ( & t , tstr , 1 )"		6370511	1					
ANR	6370708	Callee	av_parse_time		6370511	0					
ANR	6370709	Identifier	av_parse_time		6370511	0					
ANR	6370710	ArgumentList	& t		6370511	1					
ANR	6370711	Argument	& t		6370511	0					
ANR	6370712	UnaryOperationExpression	& t		6370511	0					
ANR	6370713	UnaryOperator	&		6370511	0					
ANR	6370714	Identifier	t		6370511	1					
ANR	6370715	Argument	tstr		6370511	1					
ANR	6370716	Identifier	tstr		6370511	0					
ANR	6370717	Argument	1		6370511	2					
ANR	6370718	PrimaryExpression	1		6370511	0					
ANR	6370719	IfStatement	if ( ret < 0 )		6370511	5					
ANR	6370720	Condition	ret < 0	65:12:870:876	6370511	0	True				
ANR	6370721	RelationalExpression	ret < 0		6370511	0		<			
ANR	6370722	Identifier	ret		6370511	0					
ANR	6370723	PrimaryExpression	0		6370511	1					
ANR	6370724	CompoundStatement		61:21:760:760	6370511	1					
ANR	6370725	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Invalid time duration specification in %s\\n"" , p )"	67:12:894:993	6370511	0	True				
ANR	6370726	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Invalid time duration specification in %s\\n"" , p )"		6370511	0					
ANR	6370727	Callee	av_log		6370511	0					
ANR	6370728	Identifier	av_log		6370511	0					
ANR	6370729	ArgumentList	log_ctx		6370511	1					
ANR	6370730	Argument	log_ctx		6370511	0					
ANR	6370731	Identifier	log_ctx		6370511	0					
ANR	6370732	Argument	AV_LOG_ERROR		6370511	1					
ANR	6370733	Identifier	AV_LOG_ERROR		6370511	0					
ANR	6370734	Argument	"""Invalid time duration specification in %s\\n"""		6370511	2					
ANR	6370735	PrimaryExpression	"""Invalid time duration specification in %s\\n"""		6370511	0					
ANR	6370736	Argument	p		6370511	3					
ANR	6370737	Identifier	p		6370511	0					
ANR	6370738	ExpressionStatement	FAIL ( AVERROR ( EINVAL ) )	71:12:1008:1029	6370511	1	True				
ANR	6370739	CallExpression	FAIL ( AVERROR ( EINVAL ) )		6370511	0					
ANR	6370740	Callee	FAIL		6370511	0					
ANR	6370741	Identifier	FAIL		6370511	0					
ANR	6370742	ArgumentList	AVERROR ( EINVAL )		6370511	1					
ANR	6370743	Argument	AVERROR ( EINVAL )		6370511	0					
ANR	6370744	CallExpression	AVERROR ( EINVAL )		6370511	0					
ANR	6370745	Callee	AVERROR		6370511	0					
ANR	6370746	Identifier	AVERROR		6370511	0					
ANR	6370747	ArgumentList	EINVAL		6370511	1					
ANR	6370748	Argument	EINVAL		6370511	0					
ANR	6370749	Identifier	EINVAL		6370511	0					
ANR	6370750	ExpressionStatement	( * times ) [ i ] = t	75:8:1051:1066	6370511	6	True				
ANR	6370751	AssignmentExpression	( * times ) [ i ] = t		6370511	0		=			
ANR	6370752	ArrayIndexing	( * times ) [ i ]		6370511	0					
ANR	6370753	UnaryOperationExpression	* times		6370511	0					
ANR	6370754	UnaryOperator	*		6370511	0					
ANR	6370755	Identifier	times		6370511	1					
ANR	6370756	Identifier	i		6370511	1					
ANR	6370757	Identifier	t		6370511	1					
ANR	6370758	IfStatement	if ( i && ( * times ) [ i - 1 ] > ( * times ) [ i ] )		6370511	7					
ANR	6370759	Condition	i && ( * times ) [ i - 1 ] > ( * times ) [ i ]	81:12:1120:1151	6370511	0	True				
ANR	6370760	AndExpression	i && ( * times ) [ i - 1 ] > ( * times ) [ i ]		6370511	0		&&			
ANR	6370761	Identifier	i		6370511	0					
ANR	6370762	RelationalExpression	( * times ) [ i - 1 ] > ( * times ) [ i ]		6370511	1		>			
ANR	6370763	ArrayIndexing	( * times ) [ i - 1 ]		6370511	0					
ANR	6370764	UnaryOperationExpression	* times		6370511	0					
ANR	6370765	UnaryOperator	*		6370511	0					
ANR	6370766	Identifier	times		6370511	1					
ANR	6370767	AdditiveExpression	i - 1		6370511	1		-			
ANR	6370768	Identifier	i		6370511	0					
ANR	6370769	PrimaryExpression	1		6370511	1					
ANR	6370770	ArrayIndexing	( * times ) [ i ]		6370511	1					
ANR	6370771	UnaryOperationExpression	* times		6370511	0					
ANR	6370772	UnaryOperator	*		6370511	0					
ANR	6370773	Identifier	times		6370511	1					
ANR	6370774	Identifier	i		6370511	1					
ANR	6370775	CompoundStatement		77:46:1035:1035	6370511	1					
ANR	6370776	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Specified time %f is greater than the following time %f\\n"" , ( float ) ( ( * times ) [ i ] ) / 1000000 , ( float ) ( ( * times ) [ i - 1 ] ) / 1000000 )"	83:12:1169:1361	6370511	0	True				
ANR	6370777	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Specified time %f is greater than the following time %f\\n"" , ( float ) ( ( * times ) [ i ] ) / 1000000 , ( float ) ( ( * times ) [ i - 1 ] ) / 1000000 )"		6370511	0					
ANR	6370778	Callee	av_log		6370511	0					
ANR	6370779	Identifier	av_log		6370511	0					
ANR	6370780	ArgumentList	log_ctx		6370511	1					
ANR	6370781	Argument	log_ctx		6370511	0					
ANR	6370782	Identifier	log_ctx		6370511	0					
ANR	6370783	Argument	AV_LOG_ERROR		6370511	1					
ANR	6370784	Identifier	AV_LOG_ERROR		6370511	0					
ANR	6370785	Argument	"""Specified time %f is greater than the following time %f\\n"""		6370511	2					
ANR	6370786	PrimaryExpression	"""Specified time %f is greater than the following time %f\\n"""		6370511	0					
ANR	6370787	Argument	( float ) ( ( * times ) [ i ] ) / 1000000		6370511	3					
ANR	6370788	MultiplicativeExpression	( float ) ( ( * times ) [ i ] ) / 1000000		6370511	0		/			
ANR	6370789	CastExpression	( float ) ( ( * times ) [ i ] )		6370511	0					
ANR	6370790	CastTarget	float		6370511	0					
ANR	6370791	ArrayIndexing	( * times ) [ i ]		6370511	1					
ANR	6370792	UnaryOperationExpression	* times		6370511	0					
ANR	6370793	UnaryOperator	*		6370511	0					
ANR	6370794	Identifier	times		6370511	1					
ANR	6370795	Identifier	i		6370511	1					
ANR	6370796	PrimaryExpression	1000000		6370511	1					
ANR	6370797	Argument	( float ) ( ( * times ) [ i - 1 ] ) / 1000000		6370511	4					
ANR	6370798	MultiplicativeExpression	( float ) ( ( * times ) [ i - 1 ] ) / 1000000		6370511	0		/			
ANR	6370799	CastExpression	( float ) ( ( * times ) [ i - 1 ] )		6370511	0					
ANR	6370800	CastTarget	float		6370511	0					
ANR	6370801	ArrayIndexing	( * times ) [ i - 1 ]		6370511	1					
ANR	6370802	UnaryOperationExpression	* times		6370511	0					
ANR	6370803	UnaryOperator	*		6370511	0					
ANR	6370804	Identifier	times		6370511	1					
ANR	6370805	AdditiveExpression	i - 1		6370511	1		-			
ANR	6370806	Identifier	i		6370511	0					
ANR	6370807	PrimaryExpression	1		6370511	1					
ANR	6370808	PrimaryExpression	1000000		6370511	1					
ANR	6370809	ExpressionStatement	FAIL ( AVERROR ( EINVAL ) )	89:12:1376:1397	6370511	1	True				
ANR	6370810	CallExpression	FAIL ( AVERROR ( EINVAL ) )		6370511	0					
ANR	6370811	Callee	FAIL		6370511	0					
ANR	6370812	Identifier	FAIL		6370511	0					
ANR	6370813	ArgumentList	AVERROR ( EINVAL )		6370511	1					
ANR	6370814	Argument	AVERROR ( EINVAL )		6370511	0					
ANR	6370815	CallExpression	AVERROR ( EINVAL )		6370511	0					
ANR	6370816	Callee	AVERROR		6370511	0					
ANR	6370817	Identifier	AVERROR		6370511	0					
ANR	6370818	ArgumentList	EINVAL		6370511	1					
ANR	6370819	Argument	EINVAL		6370511	0					
ANR	6370820	Identifier	EINVAL		6370511	0					
ANR	6370821	Label	end :	97:0:1420:1423	6370511	15	True				
ANR	6370822	Identifier	end		6370511	0					
ANR	6370823	ExpressionStatement	av_free ( times_str1 )	99:4:1430:1449	6370511	16	True				
ANR	6370824	CallExpression	av_free ( times_str1 )		6370511	0					
ANR	6370825	Callee	av_free		6370511	0					
ANR	6370826	Identifier	av_free		6370511	0					
ANR	6370827	ArgumentList	times_str1		6370511	1					
ANR	6370828	Argument	times_str1		6370511	0					
ANR	6370829	Identifier	times_str1		6370511	0					
ANR	6370830	ReturnStatement	return ret ;	101:4:1456:1466	6370511	17	True				
ANR	6370831	Identifier	ret		6370511	0					
ANR	6370832	ReturnType	static int		6370511	1					
ANR	6370833	Identifier	parse_times		6370511	2					
ANR	6370834	ParameterList	"void * log_ctx , int64_t * * times , int * nb_times , const char * times_str"		6370511	3					
ANR	6370835	Parameter	void * log_ctx	1:23:23:35	6370511	0	True				
ANR	6370836	ParameterType	void *		6370511	0					
ANR	6370837	Identifier	log_ctx		6370511	1					
ANR	6370838	Parameter	int64_t * * times	1:38:38:52	6370511	1	True				
ANR	6370839	ParameterType	int64_t * *		6370511	0					
ANR	6370840	Identifier	times		6370511	1					
ANR	6370841	Parameter	int * nb_times	1:55:55:67	6370511	2	True				
ANR	6370842	ParameterType	int *		6370511	0					
ANR	6370843	Identifier	nb_times		6370511	1					
ANR	6370844	Parameter	const char * times_str	3:23:94:114	6370511	3	True				
ANR	6370845	ParameterType	const char *		6370511	0					
ANR	6370846	Identifier	times_str		6370511	1					
ANR	6370847	CFGEntryNode	ENTRY		6370511		True				
ANR	6370848	CFGExitNode	EXIT		6370511		True				
ANR	6370849	Symbol	av_malloc		6370511						
ANR	6370850	Symbol	ENOMEM		6370511						
ANR	6370851	Symbol	times_str1		6370511						
ANR	6370852	Symbol	av_strdup		6370511						
ANR	6370853	Symbol	times_str		6370511						
ANR	6370854	Symbol	tstr		6370511						
ANR	6370855	Symbol	* * times		6370511						
ANR	6370856	Symbol	log_ctx		6370511						
ANR	6370857	Symbol	av_parse_time		6370511						
ANR	6370858	Symbol	times		6370511						
ANR	6370859	Symbol	* nb_times		6370511						
ANR	6370860	Symbol	ret		6370511						
ANR	6370861	Symbol	NULL		6370511						
ANR	6370862	Symbol	err		6370511						
ANR	6370863	Symbol	* times		6370511						
ANR	6370864	Symbol	AV_LOG_ERROR		6370511						
ANR	6370865	Symbol	i		6370511						
ANR	6370866	Symbol	nb_times		6370511						
ANR	6370867	Symbol	p		6370511						
ANR	6370868	Symbol	saveptr		6370511						
ANR	6370869	Symbol	EINVAL		6370511						
ANR	6370870	Symbol	* i		6370511						
ANR	6370871	Symbol	t		6370511						
ANR	6370872	Symbol	av_strtok		6370511						
ANR	6370873	Symbol	& saveptr		6370511						
ANR	6370874	Symbol	* p		6370511						
ANR	6370875	Symbol	& t		6370511						
ANR	6370876	Symbol	AVERROR		6370511						
