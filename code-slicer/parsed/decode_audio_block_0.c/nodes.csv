command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1689058	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_audio_block_0.c								
ANR	1689059	Function	decode_audio_block	1:0:0:18130							
ANR	1689060	FunctionDef	"decode_audio_block (AC3DecodeContext * s , int blk)"		1689059	0					
ANR	1689061	CompoundStatement		3:0:61:18130	1689059	0					
ANR	1689062	IdentifierDeclStatement	int fbw_channels = s -> fbw_channels ;	5:4:68:102	1689059	0	True				
ANR	1689063	IdentifierDecl	fbw_channels = s -> fbw_channels		1689059	0					
ANR	1689064	IdentifierDeclType	int		1689059	0					
ANR	1689065	Identifier	fbw_channels		1689059	1					
ANR	1689066	AssignmentExpression	fbw_channels = s -> fbw_channels		1689059	2		=			
ANR	1689067	Identifier	fbw_channels		1689059	0					
ANR	1689068	PtrMemberAccess	s -> fbw_channels		1689059	1					
ANR	1689069	Identifier	s		1689059	0					
ANR	1689070	Identifier	fbw_channels		1689059	1					
ANR	1689071	IdentifierDeclStatement	int channel_mode = s -> channel_mode ;	7:4:109:143	1689059	1	True				
ANR	1689072	IdentifierDecl	channel_mode = s -> channel_mode		1689059	0					
ANR	1689073	IdentifierDeclType	int		1689059	0					
ANR	1689074	Identifier	channel_mode		1689059	1					
ANR	1689075	AssignmentExpression	channel_mode = s -> channel_mode		1689059	2		=			
ANR	1689076	Identifier	channel_mode		1689059	0					
ANR	1689077	PtrMemberAccess	s -> channel_mode		1689059	1					
ANR	1689078	Identifier	s		1689059	0					
ANR	1689079	Identifier	channel_mode		1689059	1					
ANR	1689080	IdentifierDeclStatement	"int i , bnd , seg , ch ;"	9:4:150:169	1689059	2	True				
ANR	1689081	IdentifierDecl	i		1689059	0					
ANR	1689082	IdentifierDeclType	int		1689059	0					
ANR	1689083	Identifier	i		1689059	1					
ANR	1689084	IdentifierDecl	bnd		1689059	1					
ANR	1689085	IdentifierDeclType	int		1689059	0					
ANR	1689086	Identifier	bnd		1689059	1					
ANR	1689087	IdentifierDecl	seg		1689059	2					
ANR	1689088	IdentifierDeclType	int		1689059	0					
ANR	1689089	Identifier	seg		1689059	1					
ANR	1689090	IdentifierDecl	ch		1689059	3					
ANR	1689091	IdentifierDeclType	int		1689059	0					
ANR	1689092	Identifier	ch		1689059	1					
ANR	1689093	IdentifierDeclStatement	int different_transforms ;	11:4:176:200	1689059	3	True				
ANR	1689094	IdentifierDecl	different_transforms		1689059	0					
ANR	1689095	IdentifierDeclType	int		1689059	0					
ANR	1689096	Identifier	different_transforms		1689059	1					
ANR	1689097	IdentifierDeclStatement	int downmix_output ;	13:4:207:225	1689059	4	True				
ANR	1689098	IdentifierDecl	downmix_output		1689059	0					
ANR	1689099	IdentifierDeclType	int		1689059	0					
ANR	1689100	Identifier	downmix_output		1689059	1					
ANR	1689101	IdentifierDeclStatement	int cpl_in_use ;	15:4:232:246	1689059	5	True				
ANR	1689102	IdentifierDecl	cpl_in_use		1689059	0					
ANR	1689103	IdentifierDeclType	int		1689059	0					
ANR	1689104	Identifier	cpl_in_use		1689059	1					
ANR	1689105	IdentifierDeclStatement	GetBitContext * gbc = & s -> gbc ;	17:4:253:281	1689059	6	True				
ANR	1689106	IdentifierDecl	* gbc = & s -> gbc		1689059	0					
ANR	1689107	IdentifierDeclType	GetBitContext *		1689059	0					
ANR	1689108	Identifier	gbc		1689059	1					
ANR	1689109	AssignmentExpression	* gbc = & s -> gbc		1689059	2		=			
ANR	1689110	Identifier	gbc		1689059	0					
ANR	1689111	UnaryOperationExpression	& s -> gbc		1689059	1					
ANR	1689112	UnaryOperator	&		1689059	0					
ANR	1689113	PtrMemberAccess	s -> gbc		1689059	1					
ANR	1689114	Identifier	s		1689059	0					
ANR	1689115	Identifier	gbc		1689059	1					
ANR	1689116	IdentifierDeclStatement	uint8_t bit_alloc_stages [ AC3_MAX_CHANNELS ] ;	19:4:288:330	1689059	7	True				
ANR	1689117	IdentifierDecl	bit_alloc_stages [ AC3_MAX_CHANNELS ]		1689059	0					
ANR	1689118	IdentifierDeclType	uint8_t [ AC3_MAX_CHANNELS ]		1689059	0					
ANR	1689119	Identifier	bit_alloc_stages		1689059	1					
ANR	1689120	Identifier	AC3_MAX_CHANNELS		1689059	2					
ANR	1689121	ExpressionStatement	"memset ( bit_alloc_stages , 0 , AC3_MAX_CHANNELS )"	23:4:339:384	1689059	8	True				
ANR	1689122	CallExpression	"memset ( bit_alloc_stages , 0 , AC3_MAX_CHANNELS )"		1689059	0					
ANR	1689123	Callee	memset		1689059	0					
ANR	1689124	Identifier	memset		1689059	0					
ANR	1689125	ArgumentList	bit_alloc_stages		1689059	1					
ANR	1689126	Argument	bit_alloc_stages		1689059	0					
ANR	1689127	Identifier	bit_alloc_stages		1689059	0					
ANR	1689128	Argument	0		1689059	1					
ANR	1689129	PrimaryExpression	0		1689059	0					
ANR	1689130	Argument	AC3_MAX_CHANNELS		1689059	2					
ANR	1689131	Identifier	AC3_MAX_CHANNELS		1689059	0					
ANR	1689132	ExpressionStatement	different_transforms = 0	29:4:423:447	1689059	9	True				
ANR	1689133	AssignmentExpression	different_transforms = 0		1689059	0		=			
ANR	1689134	Identifier	different_transforms		1689059	0					
ANR	1689135	PrimaryExpression	0		1689059	1					
ANR	1689136	IfStatement	if ( s -> block_switch_syntax )		1689059	10					
ANR	1689137	Condition	s -> block_switch_syntax	31:8:458:479	1689059	0	True				
ANR	1689138	PtrMemberAccess	s -> block_switch_syntax		1689059	0					
ANR	1689139	Identifier	s		1689059	0					
ANR	1689140	Identifier	block_switch_syntax		1689059	1					
ANR	1689141	CompoundStatement		29:32:420:420	1689059	1					
ANR	1689142	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	0					
ANR	1689143	ForInit	ch = 1 ;	33:13:498:504	1689059	0	True				
ANR	1689144	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1689145	Identifier	ch		1689059	0					
ANR	1689146	PrimaryExpression	1		1689059	1					
ANR	1689147	Condition	ch <= fbw_channels	33:21:506:523	1689059	1	True				
ANR	1689148	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1689149	Identifier	ch		1689059	0					
ANR	1689150	Identifier	fbw_channels		1689059	1					
ANR	1689151	PostIncDecOperationExpression	ch ++	33:41:526:529	1689059	2	True				
ANR	1689152	Identifier	ch		1689059	0					
ANR	1689153	IncDec	++		1689059	1					
ANR	1689154	CompoundStatement		31:47:470:470	1689059	3					
ANR	1689155	ExpressionStatement	s -> block_switch [ ch ] = get_bits1 ( gbc )	35:12:547:583	1689059	0	True				
ANR	1689156	AssignmentExpression	s -> block_switch [ ch ] = get_bits1 ( gbc )		1689059	0		=			
ANR	1689157	ArrayIndexing	s -> block_switch [ ch ]		1689059	0					
ANR	1689158	PtrMemberAccess	s -> block_switch		1689059	0					
ANR	1689159	Identifier	s		1689059	0					
ANR	1689160	Identifier	block_switch		1689059	1					
ANR	1689161	Identifier	ch		1689059	1					
ANR	1689162	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689163	Callee	get_bits1		1689059	0					
ANR	1689164	Identifier	get_bits1		1689059	0					
ANR	1689165	ArgumentList	gbc		1689059	1					
ANR	1689166	Argument	gbc		1689059	0					
ANR	1689167	Identifier	gbc		1689059	0					
ANR	1689168	IfStatement	if ( ch > 1 && s -> block_switch [ ch ] != s -> block_switch [ 1 ] )		1689059	1					
ANR	1689169	Condition	ch > 1 && s -> block_switch [ ch ] != s -> block_switch [ 1 ]	37:15:601:651	1689059	0	True				
ANR	1689170	AndExpression	ch > 1 && s -> block_switch [ ch ] != s -> block_switch [ 1 ]		1689059	0		&&			
ANR	1689171	RelationalExpression	ch > 1		1689059	0		>			
ANR	1689172	Identifier	ch		1689059	0					
ANR	1689173	PrimaryExpression	1		1689059	1					
ANR	1689174	EqualityExpression	s -> block_switch [ ch ] != s -> block_switch [ 1 ]		1689059	1		!=			
ANR	1689175	ArrayIndexing	s -> block_switch [ ch ]		1689059	0					
ANR	1689176	PtrMemberAccess	s -> block_switch		1689059	0					
ANR	1689177	Identifier	s		1689059	0					
ANR	1689178	Identifier	block_switch		1689059	1					
ANR	1689179	Identifier	ch		1689059	1					
ANR	1689180	ArrayIndexing	s -> block_switch [ 1 ]		1689059	1					
ANR	1689181	PtrMemberAccess	s -> block_switch		1689059	0					
ANR	1689182	Identifier	s		1689059	0					
ANR	1689183	Identifier	block_switch		1689059	1					
ANR	1689184	PrimaryExpression	1		1689059	1					
ANR	1689185	ExpressionStatement	different_transforms = 1	39:16:671:695	1689059	1	True				
ANR	1689186	AssignmentExpression	different_transforms = 1		1689059	0		=			
ANR	1689187	Identifier	different_transforms		1689059	0					
ANR	1689188	PrimaryExpression	1		1689059	1					
ANR	1689189	IfStatement	if ( s -> dither_flag_syntax )		1689059	11					
ANR	1689190	Condition	s -> dither_flag_syntax	49:8:753:773	1689059	0	True				
ANR	1689191	PtrMemberAccess	s -> dither_flag_syntax		1689059	0					
ANR	1689192	Identifier	s		1689059	0					
ANR	1689193	Identifier	dither_flag_syntax		1689059	1					
ANR	1689194	CompoundStatement		47:31:714:714	1689059	1					
ANR	1689195	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	0					
ANR	1689196	ForInit	ch = 1 ;	51:13:792:798	1689059	0	True				
ANR	1689197	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1689198	Identifier	ch		1689059	0					
ANR	1689199	PrimaryExpression	1		1689059	1					
ANR	1689200	Condition	ch <= fbw_channels	51:21:800:817	1689059	1	True				
ANR	1689201	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1689202	Identifier	ch		1689059	0					
ANR	1689203	Identifier	fbw_channels		1689059	1					
ANR	1689204	PostIncDecOperationExpression	ch ++	51:41:820:823	1689059	2	True				
ANR	1689205	Identifier	ch		1689059	0					
ANR	1689206	IncDec	++		1689059	1					
ANR	1689207	CompoundStatement		49:47:764:764	1689059	3					
ANR	1689208	ExpressionStatement	s -> dither_flag [ ch ] = get_bits1 ( gbc )	53:12:841:876	1689059	0	True				
ANR	1689209	AssignmentExpression	s -> dither_flag [ ch ] = get_bits1 ( gbc )		1689059	0		=			
ANR	1689210	ArrayIndexing	s -> dither_flag [ ch ]		1689059	0					
ANR	1689211	PtrMemberAccess	s -> dither_flag		1689059	0					
ANR	1689212	Identifier	s		1689059	0					
ANR	1689213	Identifier	dither_flag		1689059	1					
ANR	1689214	Identifier	ch		1689059	1					
ANR	1689215	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689216	Callee	get_bits1		1689059	0					
ANR	1689217	Identifier	get_bits1		1689059	0					
ANR	1689218	ArgumentList	gbc		1689059	1					
ANR	1689219	Argument	gbc		1689059	0					
ANR	1689220	Identifier	gbc		1689059	0					
ANR	1689221	ExpressionStatement	i = ! ( s -> channel_mode )	63:4:928:950	1689059	12	True				
ANR	1689222	AssignmentExpression	i = ! ( s -> channel_mode )		1689059	0		=			
ANR	1689223	Identifier	i		1689059	0					
ANR	1689224	UnaryOperationExpression	! ( s -> channel_mode )		1689059	1					
ANR	1689225	UnaryOperator	!		1689059	0					
ANR	1689226	PtrMemberAccess	s -> channel_mode		1689059	1					
ANR	1689227	Identifier	s		1689059	0					
ANR	1689228	Identifier	channel_mode		1689059	1					
ANR	1689229	DoStatement	do		1689059	13					
ANR	1689230	CompoundStatement		63:7:898:898	1689059	0					
ANR	1689231	IfStatement	if ( get_bits1 ( gbc ) )		1689059	0					
ANR	1689232	Condition	get_bits1 ( gbc )	67:11:974:987	1689059	0	True				
ANR	1689233	CallExpression	get_bits1 ( gbc )		1689059	0					
ANR	1689234	Callee	get_bits1		1689059	0					
ANR	1689235	Identifier	get_bits1		1689059	0					
ANR	1689236	ArgumentList	gbc		1689059	1					
ANR	1689237	Argument	gbc		1689059	0					
ANR	1689238	Identifier	gbc		1689059	0					
ANR	1689239	CompoundStatement		65:27:928:928	1689059	1					
ANR	1689240	ExpressionStatement	"s -> dynamic_range [ i ] = ( ( dynamic_range_tab [ get_bits ( gbc , 8 ) ] - 1.0 ) * s -> avctx -> drc_scale ) + 1.0"	69:12:1005:1131	1689059	0	True				
ANR	1689241	AssignmentExpression	"s -> dynamic_range [ i ] = ( ( dynamic_range_tab [ get_bits ( gbc , 8 ) ] - 1.0 ) * s -> avctx -> drc_scale ) + 1.0"		1689059	0		=			
ANR	1689242	ArrayIndexing	s -> dynamic_range [ i ]		1689059	0					
ANR	1689243	PtrMemberAccess	s -> dynamic_range		1689059	0					
ANR	1689244	Identifier	s		1689059	0					
ANR	1689245	Identifier	dynamic_range		1689059	1					
ANR	1689246	Identifier	i		1689059	1					
ANR	1689247	AdditiveExpression	"( ( dynamic_range_tab [ get_bits ( gbc , 8 ) ] - 1.0 ) * s -> avctx -> drc_scale ) + 1.0"		1689059	1		+			
ANR	1689248	MultiplicativeExpression	"( dynamic_range_tab [ get_bits ( gbc , 8 ) ] - 1.0 ) * s -> avctx -> drc_scale"		1689059	0		*			
ANR	1689249	AdditiveExpression	"dynamic_range_tab [ get_bits ( gbc , 8 ) ] - 1.0"		1689059	0		-			
ANR	1689250	ArrayIndexing	"dynamic_range_tab [ get_bits ( gbc , 8 ) ]"		1689059	0					
ANR	1689251	Identifier	dynamic_range_tab		1689059	0					
ANR	1689252	CallExpression	"get_bits ( gbc , 8 )"		1689059	1					
ANR	1689253	Callee	get_bits		1689059	0					
ANR	1689254	Identifier	get_bits		1689059	0					
ANR	1689255	ArgumentList	gbc		1689059	1					
ANR	1689256	Argument	gbc		1689059	0					
ANR	1689257	Identifier	gbc		1689059	0					
ANR	1689258	Argument	8		1689059	1					
ANR	1689259	PrimaryExpression	8		1689059	0					
ANR	1689260	PrimaryExpression	1.0		1689059	1					
ANR	1689261	PtrMemberAccess	s -> avctx -> drc_scale		1689059	1					
ANR	1689262	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689263	Identifier	s		1689059	0					
ANR	1689264	Identifier	avctx		1689059	1					
ANR	1689265	Identifier	drc_scale		1689059	1					
ANR	1689266	PrimaryExpression	1.0		1689059	1					
ANR	1689267	ElseStatement	else		1689059	0					
ANR	1689268	IfStatement	if ( blk == 0 )		1689059	0					
ANR	1689269	Condition	blk == 0	73:18:1152:1159	1689059	0	True				
ANR	1689270	EqualityExpression	blk == 0		1689059	0		==			
ANR	1689271	Identifier	blk		1689059	0					
ANR	1689272	PrimaryExpression	0		1689059	1					
ANR	1689273	CompoundStatement		71:28:1100:1100	1689059	1					
ANR	1689274	ExpressionStatement	s -> dynamic_range [ i ] = 1.0f	75:12:1177:1203	1689059	0	True				
ANR	1689275	AssignmentExpression	s -> dynamic_range [ i ] = 1.0f		1689059	0		=			
ANR	1689276	ArrayIndexing	s -> dynamic_range [ i ]		1689059	0					
ANR	1689277	PtrMemberAccess	s -> dynamic_range		1689059	0					
ANR	1689278	Identifier	s		1689059	0					
ANR	1689279	Identifier	dynamic_range		1689059	1					
ANR	1689280	Identifier	i		1689059	1					
ANR	1689281	PrimaryExpression	1.0f		1689059	1					
ANR	1689282	Condition	i --	79:12:1229:1231	1689059	1	True				
ANR	1689283	PostIncDecOperationExpression	i --		1689059	0					
ANR	1689284	Identifier	i		1689059	0					
ANR	1689285	IncDec	--		1689059	1					
ANR	1689286	IfStatement	if ( s -> eac3 && ( ! blk || get_bits1 ( gbc ) ) )		1689059	14					
ANR	1689287	Condition	s -> eac3 && ( ! blk || get_bits1 ( gbc ) )	85:8:1285:1319	1689059	0	True				
ANR	1689288	AndExpression	s -> eac3 && ( ! blk || get_bits1 ( gbc ) )		1689059	0		&&			
ANR	1689289	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689290	Identifier	s		1689059	0					
ANR	1689291	Identifier	eac3		1689059	1					
ANR	1689292	OrExpression	! blk || get_bits1 ( gbc )		1689059	1		||			
ANR	1689293	UnaryOperationExpression	! blk		1689059	0					
ANR	1689294	UnaryOperator	!		1689059	0					
ANR	1689295	Identifier	blk		1689059	1					
ANR	1689296	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689297	Callee	get_bits1		1689059	0					
ANR	1689298	Identifier	get_bits1		1689059	0					
ANR	1689299	ArgumentList	gbc		1689059	1					
ANR	1689300	Argument	gbc		1689059	0					
ANR	1689301	Identifier	gbc		1689059	0					
ANR	1689302	CompoundStatement		83:45:1260:1260	1689059	1					
ANR	1689303	IfStatement	if ( get_bits1 ( gbc ) )		1689059	0					
ANR	1689304	Condition	get_bits1 ( gbc )	87:12:1337:1350	1689059	0	True				
ANR	1689305	CallExpression	get_bits1 ( gbc )		1689059	0					
ANR	1689306	Callee	get_bits1		1689059	0					
ANR	1689307	Identifier	get_bits1		1689059	0					
ANR	1689308	ArgumentList	gbc		1689059	1					
ANR	1689309	Argument	gbc		1689059	0					
ANR	1689310	Identifier	gbc		1689059	0					
ANR	1689311	CompoundStatement		85:28:1291:1291	1689059	1					
ANR	1689312	ExpressionStatement	"av_log_missing_feature ( s -> avctx , ""Spectral extension"" , 1 )"	89:12:1368:1425	1689059	0	True				
ANR	1689313	CallExpression	"av_log_missing_feature ( s -> avctx , ""Spectral extension"" , 1 )"		1689059	0					
ANR	1689314	Callee	av_log_missing_feature		1689059	0					
ANR	1689315	Identifier	av_log_missing_feature		1689059	0					
ANR	1689316	ArgumentList	s -> avctx		1689059	1					
ANR	1689317	Argument	s -> avctx		1689059	0					
ANR	1689318	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689319	Identifier	s		1689059	0					
ANR	1689320	Identifier	avctx		1689059	1					
ANR	1689321	Argument	"""Spectral extension"""		1689059	1					
ANR	1689322	PrimaryExpression	"""Spectral extension"""		1689059	0					
ANR	1689323	Argument	1		1689059	2					
ANR	1689324	PrimaryExpression	1		1689059	0					
ANR	1689325	ReturnStatement	return - 1 ;	91:12:1440:1449	1689059	1	True				
ANR	1689326	UnaryOperationExpression	- 1		1689059	0					
ANR	1689327	UnaryOperator	-		1689059	0					
ANR	1689328	PrimaryExpression	1		1689059	1					
ANR	1689329	IfStatement	if ( s -> eac3 ? s -> cpl_strategy_exists [ blk ] : get_bits1 ( gbc ) )		1689059	15					
ANR	1689330	Condition	s -> eac3 ? s -> cpl_strategy_exists [ blk ] : get_bits1 ( gbc )	107:8:1619:1672	1689059	0	True				
ANR	1689331	ConditionalExpression	s -> eac3 ? s -> cpl_strategy_exists [ blk ] : get_bits1 ( gbc )		1689059	0					
ANR	1689332	Condition	s -> eac3		1689059	0					
ANR	1689333	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689334	Identifier	s		1689059	0					
ANR	1689335	Identifier	eac3		1689059	1					
ANR	1689336	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		1689059	1					
ANR	1689337	PtrMemberAccess	s -> cpl_strategy_exists		1689059	0					
ANR	1689338	Identifier	s		1689059	0					
ANR	1689339	Identifier	cpl_strategy_exists		1689059	1					
ANR	1689340	Identifier	blk		1689059	1					
ANR	1689341	CallExpression	get_bits1 ( gbc )		1689059	2					
ANR	1689342	Callee	get_bits1		1689059	0					
ANR	1689343	Identifier	get_bits1		1689059	0					
ANR	1689344	ArgumentList	gbc		1689059	1					
ANR	1689345	Argument	gbc		1689059	0					
ANR	1689346	Identifier	gbc		1689059	0					
ANR	1689347	CompoundStatement		105:64:1613:1613	1689059	1					
ANR	1689348	ExpressionStatement	"memset ( bit_alloc_stages , 3 , AC3_MAX_CHANNELS )"	109:8:1686:1731	1689059	0	True				
ANR	1689349	CallExpression	"memset ( bit_alloc_stages , 3 , AC3_MAX_CHANNELS )"		1689059	0					
ANR	1689350	Callee	memset		1689059	0					
ANR	1689351	Identifier	memset		1689059	0					
ANR	1689352	ArgumentList	bit_alloc_stages		1689059	1					
ANR	1689353	Argument	bit_alloc_stages		1689059	0					
ANR	1689354	Identifier	bit_alloc_stages		1689059	0					
ANR	1689355	Argument	3		1689059	1					
ANR	1689356	PrimaryExpression	3		1689059	0					
ANR	1689357	Argument	AC3_MAX_CHANNELS		1689059	2					
ANR	1689358	Identifier	AC3_MAX_CHANNELS		1689059	0					
ANR	1689359	IfStatement	if ( ! s -> eac3 )		1689059	1					
ANR	1689360	Condition	! s -> eac3	111:12:1746:1753	1689059	0	True				
ANR	1689361	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1689362	UnaryOperator	!		1689059	0					
ANR	1689363	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1689364	Identifier	s		1689059	0					
ANR	1689365	Identifier	eac3		1689059	1					
ANR	1689366	ExpressionStatement	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )	113:12:1769:1804	1689059	1	True				
ANR	1689367	AssignmentExpression	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )		1689059	0		=			
ANR	1689368	ArrayIndexing	s -> cpl_in_use [ blk ]		1689059	0					
ANR	1689369	PtrMemberAccess	s -> cpl_in_use		1689059	0					
ANR	1689370	Identifier	s		1689059	0					
ANR	1689371	Identifier	cpl_in_use		1689059	1					
ANR	1689372	Identifier	blk		1689059	1					
ANR	1689373	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689374	Callee	get_bits1		1689059	0					
ANR	1689375	Identifier	get_bits1		1689059	0					
ANR	1689376	ArgumentList	gbc		1689059	1					
ANR	1689377	Argument	gbc		1689059	0					
ANR	1689378	Identifier	gbc		1689059	0					
ANR	1689379	IfStatement	if ( s -> cpl_in_use [ blk ] )		1689059	2					
ANR	1689380	Condition	s -> cpl_in_use [ blk ]	115:12:1819:1836	1689059	0	True				
ANR	1689381	ArrayIndexing	s -> cpl_in_use [ blk ]		1689059	0					
ANR	1689382	PtrMemberAccess	s -> cpl_in_use		1689059	0					
ANR	1689383	Identifier	s		1689059	0					
ANR	1689384	Identifier	cpl_in_use		1689059	1					
ANR	1689385	Identifier	blk		1689059	1					
ANR	1689386	CompoundStatement		117:12:1827:1865	1689059	1					
ANR	1689387	IdentifierDeclStatement	"int cpl_start_subband , cpl_end_subband ;"	119:12:1889:1927	1689059	0	True				
ANR	1689388	IdentifierDecl	cpl_start_subband		1689059	0					
ANR	1689389	IdentifierDeclType	int		1689059	0					
ANR	1689390	Identifier	cpl_start_subband		1689059	1					
ANR	1689391	IdentifierDecl	cpl_end_subband		1689059	1					
ANR	1689392	IdentifierDeclType	int		1689059	0					
ANR	1689393	Identifier	cpl_end_subband		1689059	1					
ANR	1689394	IfStatement	if ( channel_mode < AC3_CHMODE_STEREO )		1689059	1					
ANR	1689395	Condition	channel_mode < AC3_CHMODE_STEREO	123:16:1948:1979	1689059	0	True				
ANR	1689396	RelationalExpression	channel_mode < AC3_CHMODE_STEREO		1689059	0		<			
ANR	1689397	Identifier	channel_mode		1689059	0					
ANR	1689398	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1689399	CompoundStatement		121:50:1920:1920	1689059	1					
ANR	1689400	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""coupling not allowed in mono or dual-mono\\n"" )"	125:16:2001:2078	1689059	0	True				
ANR	1689401	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""coupling not allowed in mono or dual-mono\\n"" )"		1689059	0					
ANR	1689402	Callee	av_log		1689059	0					
ANR	1689403	Identifier	av_log		1689059	0					
ANR	1689404	ArgumentList	s -> avctx		1689059	1					
ANR	1689405	Argument	s -> avctx		1689059	0					
ANR	1689406	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689407	Identifier	s		1689059	0					
ANR	1689408	Identifier	avctx		1689059	1					
ANR	1689409	Argument	AV_LOG_ERROR		1689059	1					
ANR	1689410	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1689411	Argument	"""coupling not allowed in mono or dual-mono\\n"""		1689059	2					
ANR	1689412	PrimaryExpression	"""coupling not allowed in mono or dual-mono\\n"""		1689059	0					
ANR	1689413	ReturnStatement	return - 1 ;	127:16:2097:2106	1689059	1	True				
ANR	1689414	UnaryOperationExpression	- 1		1689059	0					
ANR	1689415	UnaryOperator	-		1689059	0					
ANR	1689416	PrimaryExpression	1		1689059	1					
ANR	1689417	IfStatement	if ( s -> eac3 && get_bits1 ( gbc ) )		1689059	2					
ANR	1689418	Condition	s -> eac3 && get_bits1 ( gbc )	135:16:2189:2213	1689059	0	True				
ANR	1689419	AndExpression	s -> eac3 && get_bits1 ( gbc )		1689059	0		&&			
ANR	1689420	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689421	Identifier	s		1689059	0					
ANR	1689422	Identifier	eac3		1689059	1					
ANR	1689423	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689424	Callee	get_bits1		1689059	0					
ANR	1689425	Identifier	get_bits1		1689059	0					
ANR	1689426	ArgumentList	gbc		1689059	1					
ANR	1689427	Argument	gbc		1689059	0					
ANR	1689428	Identifier	gbc		1689059	0					
ANR	1689429	CompoundStatement		133:43:2154:2154	1689059	1					
ANR	1689430	ExpressionStatement	"av_log_missing_feature ( s -> avctx , ""Enhanced coupling"" , 1 )"	139:16:2302:2358	1689059	0	True				
ANR	1689431	CallExpression	"av_log_missing_feature ( s -> avctx , ""Enhanced coupling"" , 1 )"		1689059	0					
ANR	1689432	Callee	av_log_missing_feature		1689059	0					
ANR	1689433	Identifier	av_log_missing_feature		1689059	0					
ANR	1689434	ArgumentList	s -> avctx		1689059	1					
ANR	1689435	Argument	s -> avctx		1689059	0					
ANR	1689436	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689437	Identifier	s		1689059	0					
ANR	1689438	Identifier	avctx		1689059	1					
ANR	1689439	Argument	"""Enhanced coupling"""		1689059	1					
ANR	1689440	PrimaryExpression	"""Enhanced coupling"""		1689059	0					
ANR	1689441	Argument	1		1689059	2					
ANR	1689442	PrimaryExpression	1		1689059	0					
ANR	1689443	ReturnStatement	return - 1 ;	141:16:2377:2386	1689059	1	True				
ANR	1689444	UnaryOperationExpression	- 1		1689059	0					
ANR	1689445	UnaryOperator	-		1689059	0					
ANR	1689446	PrimaryExpression	1		1689059	1					
ANR	1689447	IfStatement	if ( s -> eac3 && s -> channel_mode == AC3_CHMODE_STEREO )		1689059	3					
ANR	1689448	Condition	s -> eac3 && s -> channel_mode == AC3_CHMODE_STEREO	149:16:2478:2524	1689059	0	True				
ANR	1689449	AndExpression	s -> eac3 && s -> channel_mode == AC3_CHMODE_STEREO		1689059	0		&&			
ANR	1689450	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689451	Identifier	s		1689059	0					
ANR	1689452	Identifier	eac3		1689059	1					
ANR	1689453	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		1689059	1		==			
ANR	1689454	PtrMemberAccess	s -> channel_mode		1689059	0					
ANR	1689455	Identifier	s		1689059	0					
ANR	1689456	Identifier	channel_mode		1689059	1					
ANR	1689457	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1689458	CompoundStatement		147:65:2465:2465	1689059	1					
ANR	1689459	ExpressionStatement	s -> channel_in_cpl [ 1 ] = 1	151:16:2546:2570	1689059	0	True				
ANR	1689460	AssignmentExpression	s -> channel_in_cpl [ 1 ] = 1		1689059	0		=			
ANR	1689461	ArrayIndexing	s -> channel_in_cpl [ 1 ]		1689059	0					
ANR	1689462	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1689463	Identifier	s		1689059	0					
ANR	1689464	Identifier	channel_in_cpl		1689059	1					
ANR	1689465	PrimaryExpression	1		1689059	1					
ANR	1689466	PrimaryExpression	1		1689059	1					
ANR	1689467	ExpressionStatement	s -> channel_in_cpl [ 2 ] = 1	153:16:2589:2613	1689059	1	True				
ANR	1689468	AssignmentExpression	s -> channel_in_cpl [ 2 ] = 1		1689059	0		=			
ANR	1689469	ArrayIndexing	s -> channel_in_cpl [ 2 ]		1689059	0					
ANR	1689470	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1689471	Identifier	s		1689059	0					
ANR	1689472	Identifier	channel_in_cpl		1689059	1					
ANR	1689473	PrimaryExpression	2		1689059	1					
ANR	1689474	PrimaryExpression	1		1689059	1					
ANR	1689475	ElseStatement	else		1689059	0					
ANR	1689476	CompoundStatement		153:19:2573:2573	1689059	0					
ANR	1689477	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	0					
ANR	1689478	ForInit	ch = 1 ;	157:21:2659:2665	1689059	0	True				
ANR	1689479	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1689480	Identifier	ch		1689059	0					
ANR	1689481	PrimaryExpression	1		1689059	1					
ANR	1689482	Condition	ch <= fbw_channels	157:29:2667:2684	1689059	1	True				
ANR	1689483	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1689484	Identifier	ch		1689059	0					
ANR	1689485	Identifier	fbw_channels		1689059	1					
ANR	1689486	PostIncDecOperationExpression	ch ++	157:49:2687:2690	1689059	2	True				
ANR	1689487	Identifier	ch		1689059	0					
ANR	1689488	IncDec	++		1689059	1					
ANR	1689489	ExpressionStatement	s -> channel_in_cpl [ ch ] = get_bits1 ( gbc )	159:20:2714:2752	1689059	3	True				
ANR	1689490	AssignmentExpression	s -> channel_in_cpl [ ch ] = get_bits1 ( gbc )		1689059	0		=			
ANR	1689491	ArrayIndexing	s -> channel_in_cpl [ ch ]		1689059	0					
ANR	1689492	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1689493	Identifier	s		1689059	0					
ANR	1689494	Identifier	channel_in_cpl		1689059	1					
ANR	1689495	Identifier	ch		1689059	1					
ANR	1689496	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689497	Callee	get_bits1		1689059	0					
ANR	1689498	Identifier	get_bits1		1689059	0					
ANR	1689499	ArgumentList	gbc		1689059	1					
ANR	1689500	Argument	gbc		1689059	0					
ANR	1689501	Identifier	gbc		1689059	0					
ANR	1689502	IfStatement	if ( channel_mode == AC3_CHMODE_STEREO )		1689059	4					
ANR	1689503	Condition	channel_mode == AC3_CHMODE_STEREO	167:16:2826:2858	1689059	0	True				
ANR	1689504	EqualityExpression	channel_mode == AC3_CHMODE_STEREO		1689059	0		==			
ANR	1689505	Identifier	channel_mode		1689059	0					
ANR	1689506	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1689507	ExpressionStatement	s -> phase_flags_in_use = get_bits1 ( gbc )	169:16:2878:2916	1689059	1	True				
ANR	1689508	AssignmentExpression	s -> phase_flags_in_use = get_bits1 ( gbc )		1689059	0		=			
ANR	1689509	PtrMemberAccess	s -> phase_flags_in_use		1689059	0					
ANR	1689510	Identifier	s		1689059	0					
ANR	1689511	Identifier	phase_flags_in_use		1689059	1					
ANR	1689512	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689513	Callee	get_bits1		1689059	0					
ANR	1689514	Identifier	get_bits1		1689059	0					
ANR	1689515	ArgumentList	gbc		1689059	1					
ANR	1689516	Argument	gbc		1689059	0					
ANR	1689517	Identifier	gbc		1689059	0					
ANR	1689518	ExpressionStatement	"cpl_start_subband = get_bits ( gbc , 4 )"	177:12:3057:3093	1689059	5	True				
ANR	1689519	AssignmentExpression	"cpl_start_subband = get_bits ( gbc , 4 )"		1689059	0		=			
ANR	1689520	Identifier	cpl_start_subband		1689059	0					
ANR	1689521	CallExpression	"get_bits ( gbc , 4 )"		1689059	1					
ANR	1689522	Callee	get_bits		1689059	0					
ANR	1689523	Identifier	get_bits		1689059	0					
ANR	1689524	ArgumentList	gbc		1689059	1					
ANR	1689525	Argument	gbc		1689059	0					
ANR	1689526	Identifier	gbc		1689059	0					
ANR	1689527	Argument	4		1689059	1					
ANR	1689528	PrimaryExpression	4		1689059	0					
ANR	1689529	ExpressionStatement	"cpl_end_subband = get_bits ( gbc , 4 ) + 3"	179:12:3108:3148	1689059	6	True				
ANR	1689530	AssignmentExpression	"cpl_end_subband = get_bits ( gbc , 4 ) + 3"		1689059	0		=			
ANR	1689531	Identifier	cpl_end_subband		1689059	0					
ANR	1689532	AdditiveExpression	"get_bits ( gbc , 4 ) + 3"		1689059	1		+			
ANR	1689533	CallExpression	"get_bits ( gbc , 4 )"		1689059	0					
ANR	1689534	Callee	get_bits		1689059	0					
ANR	1689535	Identifier	get_bits		1689059	0					
ANR	1689536	ArgumentList	gbc		1689059	1					
ANR	1689537	Argument	gbc		1689059	0					
ANR	1689538	Identifier	gbc		1689059	0					
ANR	1689539	Argument	4		1689059	1					
ANR	1689540	PrimaryExpression	4		1689059	0					
ANR	1689541	PrimaryExpression	3		1689059	1					
ANR	1689542	ExpressionStatement	s -> num_cpl_subbands = cpl_end_subband - cpl_start_subband	181:12:3163:3220	1689059	7	True				
ANR	1689543	AssignmentExpression	s -> num_cpl_subbands = cpl_end_subband - cpl_start_subband		1689059	0		=			
ANR	1689544	PtrMemberAccess	s -> num_cpl_subbands		1689059	0					
ANR	1689545	Identifier	s		1689059	0					
ANR	1689546	Identifier	num_cpl_subbands		1689059	1					
ANR	1689547	AdditiveExpression	cpl_end_subband - cpl_start_subband		1689059	1		-			
ANR	1689548	Identifier	cpl_end_subband		1689059	0					
ANR	1689549	Identifier	cpl_start_subband		1689059	1					
ANR	1689550	IfStatement	if ( s -> num_cpl_subbands < 0 )		1689059	8					
ANR	1689551	Condition	s -> num_cpl_subbands < 0	183:16:3239:3261	1689059	0	True				
ANR	1689552	RelationalExpression	s -> num_cpl_subbands < 0		1689059	0		<			
ANR	1689553	PtrMemberAccess	s -> num_cpl_subbands		1689059	0					
ANR	1689554	Identifier	s		1689059	0					
ANR	1689555	Identifier	num_cpl_subbands		1689059	1					
ANR	1689556	PrimaryExpression	0		1689059	1					
ANR	1689557	CompoundStatement		181:41:3202:3202	1689059	1					
ANR	1689558	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid coupling range (%d > %d)\\n"" , cpl_start_subband , cpl_end_subband )"	185:16:3283:3411	1689059	0	True				
ANR	1689559	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid coupling range (%d > %d)\\n"" , cpl_start_subband , cpl_end_subband )"		1689059	0					
ANR	1689560	Callee	av_log		1689059	0					
ANR	1689561	Identifier	av_log		1689059	0					
ANR	1689562	ArgumentList	s -> avctx		1689059	1					
ANR	1689563	Argument	s -> avctx		1689059	0					
ANR	1689564	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689565	Identifier	s		1689059	0					
ANR	1689566	Identifier	avctx		1689059	1					
ANR	1689567	Argument	AV_LOG_ERROR		1689059	1					
ANR	1689568	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1689569	Argument	"""invalid coupling range (%d > %d)\\n"""		1689059	2					
ANR	1689570	PrimaryExpression	"""invalid coupling range (%d > %d)\\n"""		1689059	0					
ANR	1689571	Argument	cpl_start_subband		1689059	3					
ANR	1689572	Identifier	cpl_start_subband		1689059	0					
ANR	1689573	Argument	cpl_end_subband		1689059	4					
ANR	1689574	Identifier	cpl_end_subband		1689059	0					
ANR	1689575	ReturnStatement	return - 1 ;	189:16:3430:3439	1689059	1	True				
ANR	1689576	UnaryOperationExpression	- 1		1689059	0					
ANR	1689577	UnaryOperator	-		1689059	0					
ANR	1689578	PrimaryExpression	1		1689059	1					
ANR	1689579	ExpressionStatement	s -> start_freq [ CPL_CH ] = cpl_start_subband * 12 + 37	193:12:3469:3520	1689059	9	True				
ANR	1689580	AssignmentExpression	s -> start_freq [ CPL_CH ] = cpl_start_subband * 12 + 37		1689059	0		=			
ANR	1689581	ArrayIndexing	s -> start_freq [ CPL_CH ]		1689059	0					
ANR	1689582	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1689583	Identifier	s		1689059	0					
ANR	1689584	Identifier	start_freq		1689059	1					
ANR	1689585	Identifier	CPL_CH		1689059	1					
ANR	1689586	AdditiveExpression	cpl_start_subband * 12 + 37		1689059	1		+			
ANR	1689587	MultiplicativeExpression	cpl_start_subband * 12		1689059	0		*			
ANR	1689588	Identifier	cpl_start_subband		1689059	0					
ANR	1689589	PrimaryExpression	12		1689059	1					
ANR	1689590	PrimaryExpression	37		1689059	1					
ANR	1689591	ExpressionStatement	s -> end_freq [ CPL_CH ] = cpl_end_subband * 12 + 37	195:12:3535:3586	1689059	10	True				
ANR	1689592	AssignmentExpression	s -> end_freq [ CPL_CH ] = cpl_end_subband * 12 + 37		1689059	0		=			
ANR	1689593	ArrayIndexing	s -> end_freq [ CPL_CH ]		1689059	0					
ANR	1689594	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1689595	Identifier	s		1689059	0					
ANR	1689596	Identifier	end_freq		1689059	1					
ANR	1689597	Identifier	CPL_CH		1689059	1					
ANR	1689598	AdditiveExpression	cpl_end_subband * 12 + 37		1689059	1		+			
ANR	1689599	MultiplicativeExpression	cpl_end_subband * 12		1689059	0		*			
ANR	1689600	Identifier	cpl_end_subband		1689059	0					
ANR	1689601	PrimaryExpression	12		1689059	1					
ANR	1689602	PrimaryExpression	37		1689059	1					
ANR	1689603	ExpressionStatement	"decode_band_structure ( gbc , blk , s -> eac3 , 0 , cpl_start_subband , cpl_end_subband , ff_eac3_default_cpl_band_struct , s -> cpl_band_struct , & s -> num_cpl_subbands , & s -> num_cpl_bands , NULL )"	199:11:3602:3917	1689059	11	True				
ANR	1689604	CallExpression	"decode_band_structure ( gbc , blk , s -> eac3 , 0 , cpl_start_subband , cpl_end_subband , ff_eac3_default_cpl_band_struct , s -> cpl_band_struct , & s -> num_cpl_subbands , & s -> num_cpl_bands , NULL )"		1689059	0					
ANR	1689605	Callee	decode_band_structure		1689059	0					
ANR	1689606	Identifier	decode_band_structure		1689059	0					
ANR	1689607	ArgumentList	gbc		1689059	1					
ANR	1689608	Argument	gbc		1689059	0					
ANR	1689609	Identifier	gbc		1689059	0					
ANR	1689610	Argument	blk		1689059	1					
ANR	1689611	Identifier	blk		1689059	0					
ANR	1689612	Argument	s -> eac3		1689059	2					
ANR	1689613	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689614	Identifier	s		1689059	0					
ANR	1689615	Identifier	eac3		1689059	1					
ANR	1689616	Argument	0		1689059	3					
ANR	1689617	PrimaryExpression	0		1689059	0					
ANR	1689618	Argument	cpl_start_subband		1689059	4					
ANR	1689619	Identifier	cpl_start_subband		1689059	0					
ANR	1689620	Argument	cpl_end_subband		1689059	5					
ANR	1689621	Identifier	cpl_end_subband		1689059	0					
ANR	1689622	Argument	ff_eac3_default_cpl_band_struct		1689059	6					
ANR	1689623	Identifier	ff_eac3_default_cpl_band_struct		1689059	0					
ANR	1689624	Argument	s -> cpl_band_struct		1689059	7					
ANR	1689625	PtrMemberAccess	s -> cpl_band_struct		1689059	0					
ANR	1689626	Identifier	s		1689059	0					
ANR	1689627	Identifier	cpl_band_struct		1689059	1					
ANR	1689628	Argument	& s -> num_cpl_subbands		1689059	8					
ANR	1689629	UnaryOperationExpression	& s -> num_cpl_subbands		1689059	0					
ANR	1689630	UnaryOperator	&		1689059	0					
ANR	1689631	PtrMemberAccess	s -> num_cpl_subbands		1689059	1					
ANR	1689632	Identifier	s		1689059	0					
ANR	1689633	Identifier	num_cpl_subbands		1689059	1					
ANR	1689634	Argument	& s -> num_cpl_bands		1689059	9					
ANR	1689635	UnaryOperationExpression	& s -> num_cpl_bands		1689059	0					
ANR	1689636	UnaryOperator	&		1689059	0					
ANR	1689637	PtrMemberAccess	s -> num_cpl_bands		1689059	1					
ANR	1689638	Identifier	s		1689059	0					
ANR	1689639	Identifier	num_cpl_bands		1689059	1					
ANR	1689640	Argument	NULL		1689059	10					
ANR	1689641	Identifier	NULL		1689059	0					
ANR	1689642	ElseStatement	else		1689059	0					
ANR	1689643	CompoundStatement		207:15:3873:3873	1689059	0					
ANR	1689644	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	0					
ANR	1689645	ForInit	ch = 1 ;	213:17:3994:4000	1689059	0	True				
ANR	1689646	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1689647	Identifier	ch		1689059	0					
ANR	1689648	PrimaryExpression	1		1689059	1					
ANR	1689649	Condition	ch <= fbw_channels	213:25:4002:4019	1689059	1	True				
ANR	1689650	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1689651	Identifier	ch		1689059	0					
ANR	1689652	Identifier	fbw_channels		1689059	1					
ANR	1689653	PostIncDecOperationExpression	ch ++	213:45:4022:4025	1689059	2	True				
ANR	1689654	Identifier	ch		1689059	0					
ANR	1689655	IncDec	++		1689059	1					
ANR	1689656	CompoundStatement		211:51:3966:3966	1689059	3					
ANR	1689657	ExpressionStatement	s -> channel_in_cpl [ ch ] = 0	215:16:4047:4072	1689059	0	True				
ANR	1689658	AssignmentExpression	s -> channel_in_cpl [ ch ] = 0		1689059	0		=			
ANR	1689659	ArrayIndexing	s -> channel_in_cpl [ ch ]		1689059	0					
ANR	1689660	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1689661	Identifier	s		1689059	0					
ANR	1689662	Identifier	channel_in_cpl		1689059	1					
ANR	1689663	Identifier	ch		1689059	1					
ANR	1689664	PrimaryExpression	0		1689059	1					
ANR	1689665	ExpressionStatement	s -> first_cpl_coords [ ch ] = 1	217:16:4091:4118	1689059	1	True				
ANR	1689666	AssignmentExpression	s -> first_cpl_coords [ ch ] = 1		1689059	0		=			
ANR	1689667	ArrayIndexing	s -> first_cpl_coords [ ch ]		1689059	0					
ANR	1689668	PtrMemberAccess	s -> first_cpl_coords		1689059	0					
ANR	1689669	Identifier	s		1689059	0					
ANR	1689670	Identifier	first_cpl_coords		1689059	1					
ANR	1689671	Identifier	ch		1689059	1					
ANR	1689672	PrimaryExpression	1		1689059	1					
ANR	1689673	ExpressionStatement	s -> first_cpl_leak = s -> eac3	221:12:4148:4175	1689059	1	True				
ANR	1689674	AssignmentExpression	s -> first_cpl_leak = s -> eac3		1689059	0		=			
ANR	1689675	PtrMemberAccess	s -> first_cpl_leak		1689059	0					
ANR	1689676	Identifier	s		1689059	0					
ANR	1689677	Identifier	first_cpl_leak		1689059	1					
ANR	1689678	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1689679	Identifier	s		1689059	0					
ANR	1689680	Identifier	eac3		1689059	1					
ANR	1689681	ExpressionStatement	s -> phase_flags_in_use = 0	223:12:4190:4215	1689059	2	True				
ANR	1689682	AssignmentExpression	s -> phase_flags_in_use = 0		1689059	0		=			
ANR	1689683	PtrMemberAccess	s -> phase_flags_in_use		1689059	0					
ANR	1689684	Identifier	s		1689059	0					
ANR	1689685	Identifier	phase_flags_in_use		1689059	1					
ANR	1689686	PrimaryExpression	0		1689059	1					
ANR	1689687	ElseStatement	else		1689059	0					
ANR	1689688	IfStatement	if ( ! s -> eac3 )		1689059	0					
ANR	1689689	Condition	! s -> eac3	227:15:4244:4251	1689059	0	True				
ANR	1689690	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1689691	UnaryOperator	!		1689059	0					
ANR	1689692	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1689693	Identifier	s		1689059	0					
ANR	1689694	Identifier	eac3		1689059	1					
ANR	1689695	CompoundStatement		225:25:4192:4192	1689059	1					
ANR	1689696	IfStatement	if ( ! blk )		1689059	0					
ANR	1689697	Condition	! blk	229:11:4268:4271	1689059	0	True				
ANR	1689698	UnaryOperationExpression	! blk		1689059	0					
ANR	1689699	UnaryOperator	!		1689059	0					
ANR	1689700	Identifier	blk		1689059	1					
ANR	1689701	CompoundStatement		227:17:4212:4212	1689059	1					
ANR	1689702	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling strategy must be present in block 0\\n"" )"	231:12:4289:4373	1689059	0	True				
ANR	1689703	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling strategy must be present in block 0\\n"" )"		1689059	0					
ANR	1689704	Callee	av_log		1689059	0					
ANR	1689705	Identifier	av_log		1689059	0					
ANR	1689706	ArgumentList	s -> avctx		1689059	1					
ANR	1689707	Argument	s -> avctx		1689059	0					
ANR	1689708	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689709	Identifier	s		1689059	0					
ANR	1689710	Identifier	avctx		1689059	1					
ANR	1689711	Argument	AV_LOG_ERROR		1689059	1					
ANR	1689712	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1689713	Argument	"""new coupling strategy must be present in block 0\\n"""		1689059	2					
ANR	1689714	PrimaryExpression	"""new coupling strategy must be present in block 0\\n"""		1689059	0					
ANR	1689715	ReturnStatement	return - 1 ;	233:12:4388:4397	1689059	1	True				
ANR	1689716	UnaryOperationExpression	- 1		1689059	0					
ANR	1689717	UnaryOperator	-		1689059	0					
ANR	1689718	PrimaryExpression	1		1689059	1					
ANR	1689719	ElseStatement	else		1689059	0					
ANR	1689720	CompoundStatement		233:15:4353:4353	1689059	0					
ANR	1689721	ExpressionStatement	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]	237:12:4430:4471	1689059	0	True				
ANR	1689722	AssignmentExpression	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]		1689059	0		=			
ANR	1689723	ArrayIndexing	s -> cpl_in_use [ blk ]		1689059	0					
ANR	1689724	PtrMemberAccess	s -> cpl_in_use		1689059	0					
ANR	1689725	Identifier	s		1689059	0					
ANR	1689726	Identifier	cpl_in_use		1689059	1					
ANR	1689727	Identifier	blk		1689059	1					
ANR	1689728	ArrayIndexing	s -> cpl_in_use [ blk - 1 ]		1689059	1					
ANR	1689729	PtrMemberAccess	s -> cpl_in_use		1689059	0					
ANR	1689730	Identifier	s		1689059	0					
ANR	1689731	Identifier	cpl_in_use		1689059	1					
ANR	1689732	AdditiveExpression	blk - 1		1689059	1		-			
ANR	1689733	Identifier	blk		1689059	0					
ANR	1689734	PrimaryExpression	1		1689059	1					
ANR	1689735	ExpressionStatement	cpl_in_use = s -> cpl_in_use [ blk ]	243:4:4496:4527	1689059	16	True				
ANR	1689736	AssignmentExpression	cpl_in_use = s -> cpl_in_use [ blk ]		1689059	0		=			
ANR	1689737	Identifier	cpl_in_use		1689059	0					
ANR	1689738	ArrayIndexing	s -> cpl_in_use [ blk ]		1689059	1					
ANR	1689739	PtrMemberAccess	s -> cpl_in_use		1689059	0					
ANR	1689740	Identifier	s		1689059	0					
ANR	1689741	Identifier	cpl_in_use		1689059	1					
ANR	1689742	Identifier	blk		1689059	1					
ANR	1689743	IfStatement	if ( cpl_in_use )		1689059	17					
ANR	1689744	Condition	cpl_in_use	249:8:4572:4581	1689059	0	True				
ANR	1689745	Identifier	cpl_in_use		1689059	0					
ANR	1689746	CompoundStatement		249:8:4533:4557	1689059	1					
ANR	1689747	IdentifierDeclStatement	int cpl_coords_exist = 0 ;	251:8:4595:4619	1689059	0	True				
ANR	1689748	IdentifierDecl	cpl_coords_exist = 0		1689059	0					
ANR	1689749	IdentifierDeclType	int		1689059	0					
ANR	1689750	Identifier	cpl_coords_exist		1689059	1					
ANR	1689751	AssignmentExpression	cpl_coords_exist = 0		1689059	2		=			
ANR	1689752	Identifier	cpl_coords_exist		1689059	0					
ANR	1689753	PrimaryExpression	0		1689059	1					
ANR	1689754	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	1					
ANR	1689755	ForInit	ch = 1 ;	255:13:4637:4643	1689059	0	True				
ANR	1689756	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1689757	Identifier	ch		1689059	0					
ANR	1689758	PrimaryExpression	1		1689059	1					
ANR	1689759	Condition	ch <= fbw_channels	255:21:4645:4662	1689059	1	True				
ANR	1689760	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1689761	Identifier	ch		1689059	0					
ANR	1689762	Identifier	fbw_channels		1689059	1					
ANR	1689763	PostIncDecOperationExpression	ch ++	255:41:4665:4668	1689059	2	True				
ANR	1689764	Identifier	ch		1689059	0					
ANR	1689765	IncDec	++		1689059	1					
ANR	1689766	CompoundStatement		253:47:4609:4609	1689059	3					
ANR	1689767	IfStatement	if ( s -> channel_in_cpl [ ch ] )		1689059	0					
ANR	1689768	Condition	s -> channel_in_cpl [ ch ]	257:16:4690:4710	1689059	0	True				
ANR	1689769	ArrayIndexing	s -> channel_in_cpl [ ch ]		1689059	0					
ANR	1689770	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1689771	Identifier	s		1689059	0					
ANR	1689772	Identifier	channel_in_cpl		1689059	1					
ANR	1689773	Identifier	ch		1689059	1					
ANR	1689774	CompoundStatement		255:39:4651:4651	1689059	1					
ANR	1689775	IfStatement	if ( ( s -> eac3 && s -> first_cpl_coords [ ch ] ) || get_bits1 ( gbc ) )		1689059	0					
ANR	1689776	Condition	( s -> eac3 && s -> first_cpl_coords [ ch ] ) || get_bits1 ( gbc )	259:20:4736:4789	1689059	0	True				
ANR	1689777	OrExpression	( s -> eac3 && s -> first_cpl_coords [ ch ] ) || get_bits1 ( gbc )		1689059	0		||			
ANR	1689778	AndExpression	s -> eac3 && s -> first_cpl_coords [ ch ]		1689059	0		&&			
ANR	1689779	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689780	Identifier	s		1689059	0					
ANR	1689781	Identifier	eac3		1689059	1					
ANR	1689782	ArrayIndexing	s -> first_cpl_coords [ ch ]		1689059	1					
ANR	1689783	PtrMemberAccess	s -> first_cpl_coords		1689059	0					
ANR	1689784	Identifier	s		1689059	0					
ANR	1689785	Identifier	first_cpl_coords		1689059	1					
ANR	1689786	Identifier	ch		1689059	1					
ANR	1689787	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689788	Callee	get_bits1		1689059	0					
ANR	1689789	Identifier	get_bits1		1689059	0					
ANR	1689790	ArgumentList	gbc		1689059	1					
ANR	1689791	Argument	gbc		1689059	0					
ANR	1689792	Identifier	gbc		1689059	0					
ANR	1689793	CompoundStatement		259:20:4753:4804	1689059	1					
ANR	1689794	IdentifierDeclStatement	"int master_cpl_coord , cpl_coord_exp , cpl_coord_mant ;"	261:20:4815:4866	1689059	0	True				
ANR	1689795	IdentifierDecl	master_cpl_coord		1689059	0					
ANR	1689796	IdentifierDeclType	int		1689059	0					
ANR	1689797	Identifier	master_cpl_coord		1689059	1					
ANR	1689798	IdentifierDecl	cpl_coord_exp		1689059	1					
ANR	1689799	IdentifierDeclType	int		1689059	0					
ANR	1689800	Identifier	cpl_coord_exp		1689059	1					
ANR	1689801	IdentifierDecl	cpl_coord_mant		1689059	2					
ANR	1689802	IdentifierDeclType	int		1689059	0					
ANR	1689803	Identifier	cpl_coord_mant		1689059	1					
ANR	1689804	ExpressionStatement	s -> first_cpl_coords [ ch ] = 0	263:20:4889:4916	1689059	1	True				
ANR	1689805	AssignmentExpression	s -> first_cpl_coords [ ch ] = 0		1689059	0		=			
ANR	1689806	ArrayIndexing	s -> first_cpl_coords [ ch ]		1689059	0					
ANR	1689807	PtrMemberAccess	s -> first_cpl_coords		1689059	0					
ANR	1689808	Identifier	s		1689059	0					
ANR	1689809	Identifier	first_cpl_coords		1689059	1					
ANR	1689810	Identifier	ch		1689059	1					
ANR	1689811	PrimaryExpression	0		1689059	1					
ANR	1689812	ExpressionStatement	cpl_coords_exist = 1	265:20:4939:4959	1689059	2	True				
ANR	1689813	AssignmentExpression	cpl_coords_exist = 1		1689059	0		=			
ANR	1689814	Identifier	cpl_coords_exist		1689059	0					
ANR	1689815	PrimaryExpression	1		1689059	1					
ANR	1689816	ExpressionStatement	"master_cpl_coord = 3 * get_bits ( gbc , 2 )"	267:20:4982:5021	1689059	3	True				
ANR	1689817	AssignmentExpression	"master_cpl_coord = 3 * get_bits ( gbc , 2 )"		1689059	0		=			
ANR	1689818	Identifier	master_cpl_coord		1689059	0					
ANR	1689819	MultiplicativeExpression	"3 * get_bits ( gbc , 2 )"		1689059	1		*			
ANR	1689820	PrimaryExpression	3		1689059	0					
ANR	1689821	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1689822	Callee	get_bits		1689059	0					
ANR	1689823	Identifier	get_bits		1689059	0					
ANR	1689824	ArgumentList	gbc		1689059	1					
ANR	1689825	Argument	gbc		1689059	0					
ANR	1689826	Identifier	gbc		1689059	0					
ANR	1689827	Argument	2		1689059	1					
ANR	1689828	PrimaryExpression	2		1689059	0					
ANR	1689829	ForStatement	for ( bnd = 0 ; bnd < s -> num_cpl_bands ; bnd ++ )		1689059	4					
ANR	1689830	ForInit	bnd = 0 ;	269:25:5049:5056	1689059	0	True				
ANR	1689831	AssignmentExpression	bnd = 0		1689059	0		=			
ANR	1689832	Identifier	bnd		1689059	0					
ANR	1689833	PrimaryExpression	0		1689059	1					
ANR	1689834	Condition	bnd < s -> num_cpl_bands	269:34:5058:5079	1689059	1	True				
ANR	1689835	RelationalExpression	bnd < s -> num_cpl_bands		1689059	0		<			
ANR	1689836	Identifier	bnd		1689059	0					
ANR	1689837	PtrMemberAccess	s -> num_cpl_bands		1689059	1					
ANR	1689838	Identifier	s		1689059	0					
ANR	1689839	Identifier	num_cpl_bands		1689059	1					
ANR	1689840	PostIncDecOperationExpression	bnd ++	269:58:5082:5086	1689059	2	True				
ANR	1689841	Identifier	bnd		1689059	0					
ANR	1689842	IncDec	++		1689059	1					
ANR	1689843	CompoundStatement		267:65:5027:5027	1689059	3					
ANR	1689844	ExpressionStatement	"cpl_coord_exp = get_bits ( gbc , 4 )"	271:24:5116:5148	1689059	0	True				
ANR	1689845	AssignmentExpression	"cpl_coord_exp = get_bits ( gbc , 4 )"		1689059	0		=			
ANR	1689846	Identifier	cpl_coord_exp		1689059	0					
ANR	1689847	CallExpression	"get_bits ( gbc , 4 )"		1689059	1					
ANR	1689848	Callee	get_bits		1689059	0					
ANR	1689849	Identifier	get_bits		1689059	0					
ANR	1689850	ArgumentList	gbc		1689059	1					
ANR	1689851	Argument	gbc		1689059	0					
ANR	1689852	Identifier	gbc		1689059	0					
ANR	1689853	Argument	4		1689059	1					
ANR	1689854	PrimaryExpression	4		1689059	0					
ANR	1689855	ExpressionStatement	"cpl_coord_mant = get_bits ( gbc , 4 )"	273:24:5175:5208	1689059	1	True				
ANR	1689856	AssignmentExpression	"cpl_coord_mant = get_bits ( gbc , 4 )"		1689059	0		=			
ANR	1689857	Identifier	cpl_coord_mant		1689059	0					
ANR	1689858	CallExpression	"get_bits ( gbc , 4 )"		1689059	1					
ANR	1689859	Callee	get_bits		1689059	0					
ANR	1689860	Identifier	get_bits		1689059	0					
ANR	1689861	ArgumentList	gbc		1689059	1					
ANR	1689862	Argument	gbc		1689059	0					
ANR	1689863	Identifier	gbc		1689059	0					
ANR	1689864	Argument	4		1689059	1					
ANR	1689865	PrimaryExpression	4		1689059	0					
ANR	1689866	IfStatement	if ( cpl_coord_exp == 15 )		1689059	2					
ANR	1689867	Condition	cpl_coord_exp == 15	275:28:5239:5257	1689059	0	True				
ANR	1689868	EqualityExpression	cpl_coord_exp == 15		1689059	0		==			
ANR	1689869	Identifier	cpl_coord_exp		1689059	0					
ANR	1689870	PrimaryExpression	15		1689059	1					
ANR	1689871	ExpressionStatement	s -> cpl_coords [ ch ] [ bnd ] = cpl_coord_mant << 22	277:28:5289:5334	1689059	1	True				
ANR	1689872	AssignmentExpression	s -> cpl_coords [ ch ] [ bnd ] = cpl_coord_mant << 22		1689059	0		=			
ANR	1689873	ArrayIndexing	s -> cpl_coords [ ch ] [ bnd ]		1689059	0					
ANR	1689874	ArrayIndexing	s -> cpl_coords [ ch ]		1689059	0					
ANR	1689875	PtrMemberAccess	s -> cpl_coords		1689059	0					
ANR	1689876	Identifier	s		1689059	0					
ANR	1689877	Identifier	cpl_coords		1689059	1					
ANR	1689878	Identifier	ch		1689059	1					
ANR	1689879	Identifier	bnd		1689059	1					
ANR	1689880	ShiftExpression	cpl_coord_mant << 22		1689059	1		<<			
ANR	1689881	Identifier	cpl_coord_mant		1689059	0					
ANR	1689882	PrimaryExpression	22		1689059	1					
ANR	1689883	ElseStatement	else		1689059	0					
ANR	1689884	ExpressionStatement	s -> cpl_coords [ ch ] [ bnd ] = ( cpl_coord_mant + 16 ) << 21	281:28:5395:5447	1689059	0	True				
ANR	1689885	AssignmentExpression	s -> cpl_coords [ ch ] [ bnd ] = ( cpl_coord_mant + 16 ) << 21		1689059	0		=			
ANR	1689886	ArrayIndexing	s -> cpl_coords [ ch ] [ bnd ]		1689059	0					
ANR	1689887	ArrayIndexing	s -> cpl_coords [ ch ]		1689059	0					
ANR	1689888	PtrMemberAccess	s -> cpl_coords		1689059	0					
ANR	1689889	Identifier	s		1689059	0					
ANR	1689890	Identifier	cpl_coords		1689059	1					
ANR	1689891	Identifier	ch		1689059	1					
ANR	1689892	Identifier	bnd		1689059	1					
ANR	1689893	ShiftExpression	( cpl_coord_mant + 16 ) << 21		1689059	1		<<			
ANR	1689894	AdditiveExpression	cpl_coord_mant + 16		1689059	0		+			
ANR	1689895	Identifier	cpl_coord_mant		1689059	0					
ANR	1689896	PrimaryExpression	16		1689059	1					
ANR	1689897	PrimaryExpression	21		1689059	1					
ANR	1689898	ExpressionStatement	s -> cpl_coords [ ch ] [ bnd ] >>= ( cpl_coord_exp + master_cpl_coord )	283:24:5474:5535	1689059	3	True				
ANR	1689899	AssignmentExpression	s -> cpl_coords [ ch ] [ bnd ] >>= ( cpl_coord_exp + master_cpl_coord )		1689059	0		>>=			
ANR	1689900	ArrayIndexing	s -> cpl_coords [ ch ] [ bnd ]		1689059	0					
ANR	1689901	ArrayIndexing	s -> cpl_coords [ ch ]		1689059	0					
ANR	1689902	PtrMemberAccess	s -> cpl_coords		1689059	0					
ANR	1689903	Identifier	s		1689059	0					
ANR	1689904	Identifier	cpl_coords		1689059	1					
ANR	1689905	Identifier	ch		1689059	1					
ANR	1689906	Identifier	bnd		1689059	1					
ANR	1689907	AdditiveExpression	cpl_coord_exp + master_cpl_coord		1689059	1		+			
ANR	1689908	Identifier	cpl_coord_exp		1689059	0					
ANR	1689909	Identifier	master_cpl_coord		1689059	1					
ANR	1689910	ElseStatement	else		1689059	0					
ANR	1689911	IfStatement	if ( ! blk )		1689059	0					
ANR	1689912	Condition	! blk	287:27:5588:5591	1689059	0	True				
ANR	1689913	UnaryOperationExpression	! blk		1689059	0					
ANR	1689914	UnaryOperator	!		1689059	0					
ANR	1689915	Identifier	blk		1689059	1					
ANR	1689916	CompoundStatement		285:33:5532:5532	1689059	1					
ANR	1689917	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling coordinates must be present in block 0\\n"" )"	289:20:5617:5704	1689059	0	True				
ANR	1689918	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling coordinates must be present in block 0\\n"" )"		1689059	0					
ANR	1689919	Callee	av_log		1689059	0					
ANR	1689920	Identifier	av_log		1689059	0					
ANR	1689921	ArgumentList	s -> avctx		1689059	1					
ANR	1689922	Argument	s -> avctx		1689059	0					
ANR	1689923	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1689924	Identifier	s		1689059	0					
ANR	1689925	Identifier	avctx		1689059	1					
ANR	1689926	Argument	AV_LOG_ERROR		1689059	1					
ANR	1689927	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1689928	Argument	"""new coupling coordinates must be present in block 0\\n"""		1689059	2					
ANR	1689929	PrimaryExpression	"""new coupling coordinates must be present in block 0\\n"""		1689059	0					
ANR	1689930	ReturnStatement	return - 1 ;	291:20:5727:5736	1689059	1	True				
ANR	1689931	UnaryOperationExpression	- 1		1689059	0					
ANR	1689932	UnaryOperator	-		1689059	0					
ANR	1689933	PrimaryExpression	1		1689059	1					
ANR	1689934	ElseStatement	else		1689059	0					
ANR	1689935	CompoundStatement		293:19:5715:5715	1689059	0					
ANR	1689936	ExpressionStatement	s -> first_cpl_coords [ ch ] = 1	299:16:5843:5870	1689059	0	True				
ANR	1689937	AssignmentExpression	s -> first_cpl_coords [ ch ] = 1		1689059	0		=			
ANR	1689938	ArrayIndexing	s -> first_cpl_coords [ ch ]		1689059	0					
ANR	1689939	PtrMemberAccess	s -> first_cpl_coords		1689059	0					
ANR	1689940	Identifier	s		1689059	0					
ANR	1689941	Identifier	first_cpl_coords		1689059	1					
ANR	1689942	Identifier	ch		1689059	1					
ANR	1689943	PrimaryExpression	1		1689059	1					
ANR	1689944	IfStatement	if ( channel_mode == AC3_CHMODE_STEREO && cpl_coords_exist )		1689059	2					
ANR	1689945	Condition	channel_mode == AC3_CHMODE_STEREO && cpl_coords_exist	307:12:5938:5990	1689059	0	True				
ANR	1689946	AndExpression	channel_mode == AC3_CHMODE_STEREO && cpl_coords_exist		1689059	0		&&			
ANR	1689947	EqualityExpression	channel_mode == AC3_CHMODE_STEREO		1689059	0		==			
ANR	1689948	Identifier	channel_mode		1689059	0					
ANR	1689949	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1689950	Identifier	cpl_coords_exist		1689059	1					
ANR	1689951	CompoundStatement		305:67:5931:5931	1689059	1					
ANR	1689952	ForStatement	for ( bnd = 0 ; bnd < s -> num_cpl_bands ; bnd ++ )		1689059	0					
ANR	1689953	ForInit	bnd = 0 ;	309:17:6013:6020	1689059	0	True				
ANR	1689954	AssignmentExpression	bnd = 0		1689059	0		=			
ANR	1689955	Identifier	bnd		1689059	0					
ANR	1689956	PrimaryExpression	0		1689059	1					
ANR	1689957	Condition	bnd < s -> num_cpl_bands	309:26:6022:6043	1689059	1	True				
ANR	1689958	RelationalExpression	bnd < s -> num_cpl_bands		1689059	0		<			
ANR	1689959	Identifier	bnd		1689059	0					
ANR	1689960	PtrMemberAccess	s -> num_cpl_bands		1689059	1					
ANR	1689961	Identifier	s		1689059	0					
ANR	1689962	Identifier	num_cpl_bands		1689059	1					
ANR	1689963	PostIncDecOperationExpression	bnd ++	309:50:6046:6050	1689059	2	True				
ANR	1689964	Identifier	bnd		1689059	0					
ANR	1689965	IncDec	++		1689059	1					
ANR	1689966	CompoundStatement		307:57:5991:5991	1689059	3					
ANR	1689967	ExpressionStatement	s -> phase_flags [ bnd ] = s -> phase_flags_in_use ? get_bits1 ( gbc ) : 0	311:16:6072:6135	1689059	0	True				
ANR	1689968	AssignmentExpression	s -> phase_flags [ bnd ] = s -> phase_flags_in_use ? get_bits1 ( gbc ) : 0		1689059	0		=			
ANR	1689969	ArrayIndexing	s -> phase_flags [ bnd ]		1689059	0					
ANR	1689970	PtrMemberAccess	s -> phase_flags		1689059	0					
ANR	1689971	Identifier	s		1689059	0					
ANR	1689972	Identifier	phase_flags		1689059	1					
ANR	1689973	Identifier	bnd		1689059	1					
ANR	1689974	ConditionalExpression	s -> phase_flags_in_use ? get_bits1 ( gbc ) : 0		1689059	1					
ANR	1689975	Condition	s -> phase_flags_in_use		1689059	0					
ANR	1689976	PtrMemberAccess	s -> phase_flags_in_use		1689059	0					
ANR	1689977	Identifier	s		1689059	0					
ANR	1689978	Identifier	phase_flags_in_use		1689059	1					
ANR	1689979	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1689980	Callee	get_bits1		1689059	0					
ANR	1689981	Identifier	get_bits1		1689059	0					
ANR	1689982	ArgumentList	gbc		1689059	1					
ANR	1689983	Argument	gbc		1689059	0					
ANR	1689984	Identifier	gbc		1689059	0					
ANR	1689985	PrimaryExpression	0		1689059	2					
ANR	1689986	IfStatement	if ( channel_mode == AC3_CHMODE_STEREO )		1689059	18					
ANR	1689987	Condition	channel_mode == AC3_CHMODE_STEREO	323:8:6239:6271	1689059	0	True				
ANR	1689988	EqualityExpression	channel_mode == AC3_CHMODE_STEREO		1689059	0		==			
ANR	1689989	Identifier	channel_mode		1689059	0					
ANR	1689990	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1689991	CompoundStatement		321:43:6212:6212	1689059	1					
ANR	1689992	IfStatement	if ( ( s -> eac3 && ! blk ) || get_bits1 ( gbc ) )		1689059	0					
ANR	1689993	Condition	( s -> eac3 && ! blk ) || get_bits1 ( gbc )	325:12:6289:6323	1689059	0	True				
ANR	1689994	OrExpression	( s -> eac3 && ! blk ) || get_bits1 ( gbc )		1689059	0		||			
ANR	1689995	AndExpression	s -> eac3 && ! blk		1689059	0		&&			
ANR	1689996	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1689997	Identifier	s		1689059	0					
ANR	1689998	Identifier	eac3		1689059	1					
ANR	1689999	UnaryOperationExpression	! blk		1689059	1					
ANR	1690000	UnaryOperator	!		1689059	0					
ANR	1690001	Identifier	blk		1689059	1					
ANR	1690002	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1690003	Callee	get_bits1		1689059	0					
ANR	1690004	Identifier	get_bits1		1689059	0					
ANR	1690005	ArgumentList	gbc		1689059	1					
ANR	1690006	Argument	gbc		1689059	0					
ANR	1690007	Identifier	gbc		1689059	0					
ANR	1690008	CompoundStatement		323:49:6264:6264	1689059	1					
ANR	1690009	ExpressionStatement	s -> num_rematrixing_bands = 4	327:12:6341:6369	1689059	0	True				
ANR	1690010	AssignmentExpression	s -> num_rematrixing_bands = 4		1689059	0		=			
ANR	1690011	PtrMemberAccess	s -> num_rematrixing_bands		1689059	0					
ANR	1690012	Identifier	s		1689059	0					
ANR	1690013	Identifier	num_rematrixing_bands		1689059	1					
ANR	1690014	PrimaryExpression	4		1689059	1					
ANR	1690015	IfStatement	if ( cpl_in_use && s -> start_freq [ CPL_CH ] <= 61 )		1689059	1					
ANR	1690016	Condition	cpl_in_use && s -> start_freq [ CPL_CH ] <= 61	329:15:6387:6427	1689059	0	True				
ANR	1690017	AndExpression	cpl_in_use && s -> start_freq [ CPL_CH ] <= 61		1689059	0		&&			
ANR	1690018	Identifier	cpl_in_use		1689059	0					
ANR	1690019	RelationalExpression	s -> start_freq [ CPL_CH ] <= 61		1689059	1		<=			
ANR	1690020	ArrayIndexing	s -> start_freq [ CPL_CH ]		1689059	0					
ANR	1690021	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690022	Identifier	s		1689059	0					
ANR	1690023	Identifier	start_freq		1689059	1					
ANR	1690024	Identifier	CPL_CH		1689059	1					
ANR	1690025	PrimaryExpression	61		1689059	1					
ANR	1690026	ExpressionStatement	s -> num_rematrixing_bands -= 1 + ( s -> start_freq [ CPL_CH ] == 37 )	331:16:6447:6508	1689059	1	True				
ANR	1690027	AssignmentExpression	s -> num_rematrixing_bands -= 1 + ( s -> start_freq [ CPL_CH ] == 37 )		1689059	0		-=			
ANR	1690028	PtrMemberAccess	s -> num_rematrixing_bands		1689059	0					
ANR	1690029	Identifier	s		1689059	0					
ANR	1690030	Identifier	num_rematrixing_bands		1689059	1					
ANR	1690031	AdditiveExpression	1 + ( s -> start_freq [ CPL_CH ] == 37 )		1689059	1		+			
ANR	1690032	PrimaryExpression	1		1689059	0					
ANR	1690033	EqualityExpression	s -> start_freq [ CPL_CH ] == 37		1689059	1		==			
ANR	1690034	ArrayIndexing	s -> start_freq [ CPL_CH ]		1689059	0					
ANR	1690035	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690036	Identifier	s		1689059	0					
ANR	1690037	Identifier	start_freq		1689059	1					
ANR	1690038	Identifier	CPL_CH		1689059	1					
ANR	1690039	PrimaryExpression	37		1689059	1					
ANR	1690040	ForStatement	for ( bnd = 0 ; bnd < s -> num_rematrixing_bands ; bnd ++ )		1689059	2					
ANR	1690041	ForInit	bnd = 0 ;	333:16:6527:6532	1689059	0	True				
ANR	1690042	AssignmentExpression	bnd = 0		1689059	0		=			
ANR	1690043	Identifier	bnd		1689059	0					
ANR	1690044	PrimaryExpression	0		1689059	1					
ANR	1690045	Condition	bnd < s -> num_rematrixing_bands	333:23:6534:6561	1689059	1	True				
ANR	1690046	RelationalExpression	bnd < s -> num_rematrixing_bands		1689059	0		<			
ANR	1690047	Identifier	bnd		1689059	0					
ANR	1690048	PtrMemberAccess	s -> num_rematrixing_bands		1689059	1					
ANR	1690049	Identifier	s		1689059	0					
ANR	1690050	Identifier	num_rematrixing_bands		1689059	1					
ANR	1690051	PostIncDecOperationExpression	bnd ++	333:53:6564:6568	1689059	2	True				
ANR	1690052	Identifier	bnd		1689059	0					
ANR	1690053	IncDec	++		1689059	1					
ANR	1690054	ExpressionStatement	s -> rematrixing_flags [ bnd ] = get_bits1 ( gbc )	335:16:6588:6630	1689059	3	True				
ANR	1690055	AssignmentExpression	s -> rematrixing_flags [ bnd ] = get_bits1 ( gbc )		1689059	0		=			
ANR	1690056	ArrayIndexing	s -> rematrixing_flags [ bnd ]		1689059	0					
ANR	1690057	PtrMemberAccess	s -> rematrixing_flags		1689059	0					
ANR	1690058	Identifier	s		1689059	0					
ANR	1690059	Identifier	rematrixing_flags		1689059	1					
ANR	1690060	Identifier	bnd		1689059	1					
ANR	1690061	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1690062	Callee	get_bits1		1689059	0					
ANR	1690063	Identifier	get_bits1		1689059	0					
ANR	1690064	ArgumentList	gbc		1689059	1					
ANR	1690065	Argument	gbc		1689059	0					
ANR	1690066	Identifier	gbc		1689059	0					
ANR	1690067	ElseStatement	else		1689059	0					
ANR	1690068	IfStatement	if ( ! blk )		1689059	0					
ANR	1690069	Condition	! blk	337:19:6652:6655	1689059	0	True				
ANR	1690070	UnaryOperationExpression	! blk		1689059	0					
ANR	1690071	UnaryOperator	!		1689059	0					
ANR	1690072	Identifier	blk		1689059	1					
ANR	1690073	CompoundStatement		335:25:6596:6596	1689059	1					
ANR	1690074	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new rematrixing strategy must be present in block 0\\n"" )"	339:12:6673:6760	1689059	0	True				
ANR	1690075	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new rematrixing strategy must be present in block 0\\n"" )"		1689059	0					
ANR	1690076	Callee	av_log		1689059	0					
ANR	1690077	Identifier	av_log		1689059	0					
ANR	1690078	ArgumentList	s -> avctx		1689059	1					
ANR	1690079	Argument	s -> avctx		1689059	0					
ANR	1690080	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1690081	Identifier	s		1689059	0					
ANR	1690082	Identifier	avctx		1689059	1					
ANR	1690083	Argument	AV_LOG_ERROR		1689059	1					
ANR	1690084	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1690085	Argument	"""new rematrixing strategy must be present in block 0\\n"""		1689059	2					
ANR	1690086	PrimaryExpression	"""new rematrixing strategy must be present in block 0\\n"""		1689059	0					
ANR	1690087	ReturnStatement	return - 1 ;	341:12:6775:6784	1689059	1	True				
ANR	1690088	UnaryOperationExpression	- 1		1689059	0					
ANR	1690089	UnaryOperator	-		1689059	0					
ANR	1690090	PrimaryExpression	1		1689059	1					
ANR	1690091	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	19					
ANR	1690092	ForInit	ch = ! cpl_in_use ;	351:9:6864:6880	1689059	0	True				
ANR	1690093	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1690094	Identifier	ch		1689059	0					
ANR	1690095	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1690096	UnaryOperator	!		1689059	0					
ANR	1690097	Identifier	cpl_in_use		1689059	1					
ANR	1690098	Condition	ch <= s -> channels	351:27:6882:6898	1689059	1	True				
ANR	1690099	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1690100	Identifier	ch		1689059	0					
ANR	1690101	PtrMemberAccess	s -> channels		1689059	1					
ANR	1690102	Identifier	s		1689059	0					
ANR	1690103	Identifier	channels		1689059	1					
ANR	1690104	PostIncDecOperationExpression	ch ++	351:46:6901:6904	1689059	2	True				
ANR	1690105	Identifier	ch		1689059	0					
ANR	1690106	IncDec	++		1689059	1					
ANR	1690107	CompoundStatement		349:52:6845:6845	1689059	3					
ANR	1690108	IfStatement	if ( ! s -> eac3 )		1689059	0					
ANR	1690109	Condition	! s -> eac3	353:12:6922:6929	1689059	0	True				
ANR	1690110	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1690111	UnaryOperator	!		1689059	0					
ANR	1690112	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1690113	Identifier	s		1689059	0					
ANR	1690114	Identifier	eac3		1689059	1					
ANR	1690115	ExpressionStatement	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 - ( ch == s -> lfe_ch ) )"	355:12:6945:7008	1689059	1	True				
ANR	1690116	AssignmentExpression	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 - ( ch == s -> lfe_ch ) )"		1689059	0		=			
ANR	1690117	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690118	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690119	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690120	Identifier	s		1689059	0					
ANR	1690121	Identifier	exp_strategy		1689059	1					
ANR	1690122	Identifier	blk		1689059	1					
ANR	1690123	Identifier	ch		1689059	1					
ANR	1690124	CallExpression	"get_bits ( gbc , 2 - ( ch == s -> lfe_ch ) )"		1689059	1					
ANR	1690125	Callee	get_bits		1689059	0					
ANR	1690126	Identifier	get_bits		1689059	0					
ANR	1690127	ArgumentList	gbc		1689059	1					
ANR	1690128	Argument	gbc		1689059	0					
ANR	1690129	Identifier	gbc		1689059	0					
ANR	1690130	Argument	2 - ( ch == s -> lfe_ch )		1689059	1					
ANR	1690131	AdditiveExpression	2 - ( ch == s -> lfe_ch )		1689059	0		-			
ANR	1690132	PrimaryExpression	2		1689059	0					
ANR	1690133	EqualityExpression	ch == s -> lfe_ch		1689059	1		==			
ANR	1690134	Identifier	ch		1689059	0					
ANR	1690135	PtrMemberAccess	s -> lfe_ch		1689059	1					
ANR	1690136	Identifier	s		1689059	0					
ANR	1690137	Identifier	lfe_ch		1689059	1					
ANR	1690138	IfStatement	if ( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE )		1689059	1					
ANR	1690139	Condition	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE	357:11:7022:7058	1689059	0	True				
ANR	1690140	EqualityExpression	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE		1689059	0		!=			
ANR	1690141	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690142	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690143	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690144	Identifier	s		1689059	0					
ANR	1690145	Identifier	exp_strategy		1689059	1					
ANR	1690146	Identifier	blk		1689059	1					
ANR	1690147	Identifier	ch		1689059	1					
ANR	1690148	Identifier	EXP_REUSE		1689059	1					
ANR	1690149	ExpressionStatement	bit_alloc_stages [ ch ] = 3	359:12:7074:7098	1689059	1	True				
ANR	1690150	AssignmentExpression	bit_alloc_stages [ ch ] = 3		1689059	0		=			
ANR	1690151	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690152	Identifier	bit_alloc_stages		1689059	0					
ANR	1690153	Identifier	ch		1689059	1					
ANR	1690154	PrimaryExpression	3		1689059	1					
ANR	1690155	ForStatement	for ( ch = 1 ; ch <= fbw_channels ; ch ++ )		1689059	20					
ANR	1690156	ForInit	ch = 1 ;	367:9:7148:7154	1689059	0	True				
ANR	1690157	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1690158	Identifier	ch		1689059	0					
ANR	1690159	PrimaryExpression	1		1689059	1					
ANR	1690160	Condition	ch <= fbw_channels	367:17:7156:7173	1689059	1	True				
ANR	1690161	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1690162	Identifier	ch		1689059	0					
ANR	1690163	Identifier	fbw_channels		1689059	1					
ANR	1690164	PostIncDecOperationExpression	ch ++	367:37:7176:7179	1689059	2	True				
ANR	1690165	Identifier	ch		1689059	0					
ANR	1690166	IncDec	++		1689059	1					
ANR	1690167	CompoundStatement		365:43:7120:7120	1689059	3					
ANR	1690168	ExpressionStatement	s -> start_freq [ ch ] = 0	369:8:7193:7214	1689059	0	True				
ANR	1690169	AssignmentExpression	s -> start_freq [ ch ] = 0		1689059	0		=			
ANR	1690170	ArrayIndexing	s -> start_freq [ ch ]		1689059	0					
ANR	1690171	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690172	Identifier	s		1689059	0					
ANR	1690173	Identifier	start_freq		1689059	1					
ANR	1690174	Identifier	ch		1689059	1					
ANR	1690175	PrimaryExpression	0		1689059	1					
ANR	1690176	IfStatement	if ( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE )		1689059	1					
ANR	1690177	Condition	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE	371:12:7229:7265	1689059	0	True				
ANR	1690178	EqualityExpression	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE		1689059	0		!=			
ANR	1690179	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690180	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690181	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690182	Identifier	s		1689059	0					
ANR	1690183	Identifier	exp_strategy		1689059	1					
ANR	1690184	Identifier	blk		1689059	1					
ANR	1690185	Identifier	ch		1689059	1					
ANR	1690186	Identifier	EXP_REUSE		1689059	1					
ANR	1690187	CompoundStatement		373:12:7250:7276	1689059	1					
ANR	1690188	IdentifierDeclStatement	int group_size ;	373:12:7283:7297	1689059	0	True				
ANR	1690189	IdentifierDecl	group_size		1689059	0					
ANR	1690190	IdentifierDeclType	int		1689059	0					
ANR	1690191	Identifier	group_size		1689059	1					
ANR	1690192	IdentifierDeclStatement	int prev = s -> end_freq [ ch ] ;	375:12:7312:7338	1689059	1	True				
ANR	1690193	IdentifierDecl	prev = s -> end_freq [ ch ]		1689059	0					
ANR	1690194	IdentifierDeclType	int		1689059	0					
ANR	1690195	Identifier	prev		1689059	1					
ANR	1690196	AssignmentExpression	prev = s -> end_freq [ ch ]		1689059	2		=			
ANR	1690197	Identifier	prev		1689059	0					
ANR	1690198	ArrayIndexing	s -> end_freq [ ch ]		1689059	1					
ANR	1690199	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690200	Identifier	s		1689059	0					
ANR	1690201	Identifier	end_freq		1689059	1					
ANR	1690202	Identifier	ch		1689059	1					
ANR	1690203	IfStatement	if ( s -> channel_in_cpl [ ch ] )		1689059	2					
ANR	1690204	Condition	s -> channel_in_cpl [ ch ]	377:16:7357:7377	1689059	0	True				
ANR	1690205	ArrayIndexing	s -> channel_in_cpl [ ch ]		1689059	0					
ANR	1690206	PtrMemberAccess	s -> channel_in_cpl		1689059	0					
ANR	1690207	Identifier	s		1689059	0					
ANR	1690208	Identifier	channel_in_cpl		1689059	1					
ANR	1690209	Identifier	ch		1689059	1					
ANR	1690210	ExpressionStatement	s -> end_freq [ ch ] = s -> start_freq [ CPL_CH ]	379:16:7397:7436	1689059	1	True				
ANR	1690211	AssignmentExpression	s -> end_freq [ ch ] = s -> start_freq [ CPL_CH ]		1689059	0		=			
ANR	1690212	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1690213	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690214	Identifier	s		1689059	0					
ANR	1690215	Identifier	end_freq		1689059	1					
ANR	1690216	Identifier	ch		1689059	1					
ANR	1690217	ArrayIndexing	s -> start_freq [ CPL_CH ]		1689059	1					
ANR	1690218	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690219	Identifier	s		1689059	0					
ANR	1690220	Identifier	start_freq		1689059	1					
ANR	1690221	Identifier	CPL_CH		1689059	1					
ANR	1690222	ElseStatement	else		1689059	0					
ANR	1690223	CompoundStatement		381:16:7413:7450	1689059	0					
ANR	1690224	IdentifierDeclStatement	"int bandwidth_code = get_bits ( gbc , 6 ) ;"	383:16:7475:7512	1689059	0	True				
ANR	1690225	IdentifierDecl	"bandwidth_code = get_bits ( gbc , 6 )"		1689059	0					
ANR	1690226	IdentifierDeclType	int		1689059	0					
ANR	1690227	Identifier	bandwidth_code		1689059	1					
ANR	1690228	AssignmentExpression	"bandwidth_code = get_bits ( gbc , 6 )"		1689059	2		=			
ANR	1690229	Identifier	bandwidth_code		1689059	0					
ANR	1690230	CallExpression	"get_bits ( gbc , 6 )"		1689059	1					
ANR	1690231	Callee	get_bits		1689059	0					
ANR	1690232	Identifier	get_bits		1689059	0					
ANR	1690233	ArgumentList	gbc		1689059	1					
ANR	1690234	Argument	gbc		1689059	0					
ANR	1690235	Identifier	gbc		1689059	0					
ANR	1690236	Argument	6		1689059	1					
ANR	1690237	PrimaryExpression	6		1689059	0					
ANR	1690238	IfStatement	if ( bandwidth_code > 60 )		1689059	1					
ANR	1690239	Condition	bandwidth_code > 60	385:20:7535:7553	1689059	0	True				
ANR	1690240	RelationalExpression	bandwidth_code > 60		1689059	0		>			
ANR	1690241	Identifier	bandwidth_code		1689059	0					
ANR	1690242	PrimaryExpression	60		1689059	1					
ANR	1690243	CompoundStatement		383:41:7494:7494	1689059	1					
ANR	1690244	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""bandwidth code = %d > 60\\n"" , bandwidth_code )"	387:20:7579:7655	1689059	0	True				
ANR	1690245	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""bandwidth code = %d > 60\\n"" , bandwidth_code )"		1689059	0					
ANR	1690246	Callee	av_log		1689059	0					
ANR	1690247	Identifier	av_log		1689059	0					
ANR	1690248	ArgumentList	s -> avctx		1689059	1					
ANR	1690249	Argument	s -> avctx		1689059	0					
ANR	1690250	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1690251	Identifier	s		1689059	0					
ANR	1690252	Identifier	avctx		1689059	1					
ANR	1690253	Argument	AV_LOG_ERROR		1689059	1					
ANR	1690254	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1690255	Argument	"""bandwidth code = %d > 60\\n"""		1689059	2					
ANR	1690256	PrimaryExpression	"""bandwidth code = %d > 60\\n"""		1689059	0					
ANR	1690257	Argument	bandwidth_code		1689059	3					
ANR	1690258	Identifier	bandwidth_code		1689059	0					
ANR	1690259	ReturnStatement	return - 1 ;	389:20:7678:7687	1689059	1	True				
ANR	1690260	UnaryOperationExpression	- 1		1689059	0					
ANR	1690261	UnaryOperator	-		1689059	0					
ANR	1690262	PrimaryExpression	1		1689059	1					
ANR	1690263	ExpressionStatement	s -> end_freq [ ch ] = bandwidth_code * 3 + 73	393:16:7725:7766	1689059	2	True				
ANR	1690264	AssignmentExpression	s -> end_freq [ ch ] = bandwidth_code * 3 + 73		1689059	0		=			
ANR	1690265	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1690266	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690267	Identifier	s		1689059	0					
ANR	1690268	Identifier	end_freq		1689059	1					
ANR	1690269	Identifier	ch		1689059	1					
ANR	1690270	AdditiveExpression	bandwidth_code * 3 + 73		1689059	1		+			
ANR	1690271	MultiplicativeExpression	bandwidth_code * 3		1689059	0		*			
ANR	1690272	Identifier	bandwidth_code		1689059	0					
ANR	1690273	PrimaryExpression	3		1689059	1					
ANR	1690274	PrimaryExpression	73		1689059	1					
ANR	1690275	ExpressionStatement	group_size = 3 << ( s -> exp_strategy [ blk ] [ ch ] - 1 )	397:12:7796:7844	1689059	3	True				
ANR	1690276	AssignmentExpression	group_size = 3 << ( s -> exp_strategy [ blk ] [ ch ] - 1 )		1689059	0		=			
ANR	1690277	Identifier	group_size		1689059	0					
ANR	1690278	ShiftExpression	3 << ( s -> exp_strategy [ blk ] [ ch ] - 1 )		1689059	1		<<			
ANR	1690279	PrimaryExpression	3		1689059	0					
ANR	1690280	AdditiveExpression	s -> exp_strategy [ blk ] [ ch ] - 1		1689059	1		-			
ANR	1690281	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690282	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690283	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690284	Identifier	s		1689059	0					
ANR	1690285	Identifier	exp_strategy		1689059	1					
ANR	1690286	Identifier	blk		1689059	1					
ANR	1690287	Identifier	ch		1689059	1					
ANR	1690288	PrimaryExpression	1		1689059	1					
ANR	1690289	ExpressionStatement	s -> num_exp_groups [ ch ] = ( s -> end_freq [ ch ] + group_size - 4 ) / group_size	399:12:7859:7926	1689059	4	True				
ANR	1690290	AssignmentExpression	s -> num_exp_groups [ ch ] = ( s -> end_freq [ ch ] + group_size - 4 ) / group_size		1689059	0		=			
ANR	1690291	ArrayIndexing	s -> num_exp_groups [ ch ]		1689059	0					
ANR	1690292	PtrMemberAccess	s -> num_exp_groups		1689059	0					
ANR	1690293	Identifier	s		1689059	0					
ANR	1690294	Identifier	num_exp_groups		1689059	1					
ANR	1690295	Identifier	ch		1689059	1					
ANR	1690296	MultiplicativeExpression	( s -> end_freq [ ch ] + group_size - 4 ) / group_size		1689059	1		/			
ANR	1690297	AdditiveExpression	s -> end_freq [ ch ] + group_size - 4		1689059	0		+			
ANR	1690298	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1690299	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690300	Identifier	s		1689059	0					
ANR	1690301	Identifier	end_freq		1689059	1					
ANR	1690302	Identifier	ch		1689059	1					
ANR	1690303	AdditiveExpression	group_size - 4		1689059	1		-			
ANR	1690304	Identifier	group_size		1689059	0					
ANR	1690305	PrimaryExpression	4		1689059	1					
ANR	1690306	Identifier	group_size		1689059	1					
ANR	1690307	IfStatement	if ( blk > 0 && s -> end_freq [ ch ] != prev )		1689059	5					
ANR	1690308	Condition	blk > 0 && s -> end_freq [ ch ] != prev	401:15:7944:7977	1689059	0	True				
ANR	1690309	AndExpression	blk > 0 && s -> end_freq [ ch ] != prev		1689059	0		&&			
ANR	1690310	RelationalExpression	blk > 0		1689059	0		>			
ANR	1690311	Identifier	blk		1689059	0					
ANR	1690312	PrimaryExpression	0		1689059	1					
ANR	1690313	EqualityExpression	s -> end_freq [ ch ] != prev		1689059	1		!=			
ANR	1690314	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1690315	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690316	Identifier	s		1689059	0					
ANR	1690317	Identifier	end_freq		1689059	1					
ANR	1690318	Identifier	ch		1689059	1					
ANR	1690319	Identifier	prev		1689059	1					
ANR	1690320	ExpressionStatement	"memset ( bit_alloc_stages , 3 , AC3_MAX_CHANNELS )"	403:16:7997:8042	1689059	1	True				
ANR	1690321	CallExpression	"memset ( bit_alloc_stages , 3 , AC3_MAX_CHANNELS )"		1689059	0					
ANR	1690322	Callee	memset		1689059	0					
ANR	1690323	Identifier	memset		1689059	0					
ANR	1690324	ArgumentList	bit_alloc_stages		1689059	1					
ANR	1690325	Argument	bit_alloc_stages		1689059	0					
ANR	1690326	Identifier	bit_alloc_stages		1689059	0					
ANR	1690327	Argument	3		1689059	1					
ANR	1690328	PrimaryExpression	3		1689059	0					
ANR	1690329	Argument	AC3_MAX_CHANNELS		1689059	2					
ANR	1690330	Identifier	AC3_MAX_CHANNELS		1689059	0					
ANR	1690331	IfStatement	if ( cpl_in_use && s -> exp_strategy [ blk ] [ CPL_CH ] != EXP_REUSE )		1689059	21					
ANR	1690332	Condition	cpl_in_use && s -> exp_strategy [ blk ] [ CPL_CH ] != EXP_REUSE	409:8:8071:8125	1689059	0	True				
ANR	1690333	AndExpression	cpl_in_use && s -> exp_strategy [ blk ] [ CPL_CH ] != EXP_REUSE		1689059	0		&&			
ANR	1690334	Identifier	cpl_in_use		1689059	0					
ANR	1690335	EqualityExpression	s -> exp_strategy [ blk ] [ CPL_CH ] != EXP_REUSE		1689059	1		!=			
ANR	1690336	ArrayIndexing	s -> exp_strategy [ blk ] [ CPL_CH ]		1689059	0					
ANR	1690337	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690338	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690339	Identifier	s		1689059	0					
ANR	1690340	Identifier	exp_strategy		1689059	1					
ANR	1690341	Identifier	blk		1689059	1					
ANR	1690342	Identifier	CPL_CH		1689059	1					
ANR	1690343	Identifier	EXP_REUSE		1689059	1					
ANR	1690344	CompoundStatement		407:65:8066:8066	1689059	1					
ANR	1690345	ExpressionStatement	s -> num_exp_groups [ CPL_CH ] = ( s -> end_freq [ CPL_CH ] - s -> start_freq [ CPL_CH ] ) / ( 3 << ( s -> exp_strategy [ blk ] [ CPL_CH ] - 1 ) )	411:8:8139:8293	1689059	0	True				
ANR	1690346	AssignmentExpression	s -> num_exp_groups [ CPL_CH ] = ( s -> end_freq [ CPL_CH ] - s -> start_freq [ CPL_CH ] ) / ( 3 << ( s -> exp_strategy [ blk ] [ CPL_CH ] - 1 ) )		1689059	0		=			
ANR	1690347	ArrayIndexing	s -> num_exp_groups [ CPL_CH ]		1689059	0					
ANR	1690348	PtrMemberAccess	s -> num_exp_groups		1689059	0					
ANR	1690349	Identifier	s		1689059	0					
ANR	1690350	Identifier	num_exp_groups		1689059	1					
ANR	1690351	Identifier	CPL_CH		1689059	1					
ANR	1690352	MultiplicativeExpression	( s -> end_freq [ CPL_CH ] - s -> start_freq [ CPL_CH ] ) / ( 3 << ( s -> exp_strategy [ blk ] [ CPL_CH ] - 1 ) )		1689059	1		/			
ANR	1690353	AdditiveExpression	s -> end_freq [ CPL_CH ] - s -> start_freq [ CPL_CH ]		1689059	0		-			
ANR	1690354	ArrayIndexing	s -> end_freq [ CPL_CH ]		1689059	0					
ANR	1690355	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1690356	Identifier	s		1689059	0					
ANR	1690357	Identifier	end_freq		1689059	1					
ANR	1690358	Identifier	CPL_CH		1689059	1					
ANR	1690359	ArrayIndexing	s -> start_freq [ CPL_CH ]		1689059	1					
ANR	1690360	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690361	Identifier	s		1689059	0					
ANR	1690362	Identifier	start_freq		1689059	1					
ANR	1690363	Identifier	CPL_CH		1689059	1					
ANR	1690364	ShiftExpression	3 << ( s -> exp_strategy [ blk ] [ CPL_CH ] - 1 )		1689059	1		<<			
ANR	1690365	PrimaryExpression	3		1689059	0					
ANR	1690366	AdditiveExpression	s -> exp_strategy [ blk ] [ CPL_CH ] - 1		1689059	1		-			
ANR	1690367	ArrayIndexing	s -> exp_strategy [ blk ] [ CPL_CH ]		1689059	0					
ANR	1690368	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690369	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690370	Identifier	s		1689059	0					
ANR	1690371	Identifier	exp_strategy		1689059	1					
ANR	1690372	Identifier	blk		1689059	1					
ANR	1690373	Identifier	CPL_CH		1689059	1					
ANR	1690374	PrimaryExpression	1		1689059	1					
ANR	1690375	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	22					
ANR	1690376	ForInit	ch = ! cpl_in_use ;	421:9:8359:8375	1689059	0	True				
ANR	1690377	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1690378	Identifier	ch		1689059	0					
ANR	1690379	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1690380	UnaryOperator	!		1689059	0					
ANR	1690381	Identifier	cpl_in_use		1689059	1					
ANR	1690382	Condition	ch <= s -> channels	421:27:8377:8393	1689059	1	True				
ANR	1690383	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1690384	Identifier	ch		1689059	0					
ANR	1690385	PtrMemberAccess	s -> channels		1689059	1					
ANR	1690386	Identifier	s		1689059	0					
ANR	1690387	Identifier	channels		1689059	1					
ANR	1690388	PostIncDecOperationExpression	ch ++	421:46:8396:8399	1689059	2	True				
ANR	1690389	Identifier	ch		1689059	0					
ANR	1690390	IncDec	++		1689059	1					
ANR	1690391	CompoundStatement		419:52:8340:8340	1689059	3					
ANR	1690392	IfStatement	if ( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE )		1689059	0					
ANR	1690393	Condition	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE	423:12:8417:8453	1689059	0	True				
ANR	1690394	EqualityExpression	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE		1689059	0		!=			
ANR	1690395	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690396	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690397	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690398	Identifier	s		1689059	0					
ANR	1690399	Identifier	exp_strategy		1689059	1					
ANR	1690400	Identifier	blk		1689059	1					
ANR	1690401	Identifier	ch		1689059	1					
ANR	1690402	Identifier	EXP_REUSE		1689059	1					
ANR	1690403	CompoundStatement		421:51:8394:8394	1689059	1					
ANR	1690404	ExpressionStatement	"s -> dexps [ ch ] [ 0 ] = get_bits ( gbc , 4 ) << ! ch"	425:12:8471:8512	1689059	0	True				
ANR	1690405	AssignmentExpression	"s -> dexps [ ch ] [ 0 ] = get_bits ( gbc , 4 ) << ! ch"		1689059	0		=			
ANR	1690406	ArrayIndexing	s -> dexps [ ch ] [ 0 ]		1689059	0					
ANR	1690407	ArrayIndexing	s -> dexps [ ch ]		1689059	0					
ANR	1690408	PtrMemberAccess	s -> dexps		1689059	0					
ANR	1690409	Identifier	s		1689059	0					
ANR	1690410	Identifier	dexps		1689059	1					
ANR	1690411	Identifier	ch		1689059	1					
ANR	1690412	PrimaryExpression	0		1689059	1					
ANR	1690413	ShiftExpression	"get_bits ( gbc , 4 ) << ! ch"		1689059	1		<<			
ANR	1690414	CallExpression	"get_bits ( gbc , 4 )"		1689059	0					
ANR	1690415	Callee	get_bits		1689059	0					
ANR	1690416	Identifier	get_bits		1689059	0					
ANR	1690417	ArgumentList	gbc		1689059	1					
ANR	1690418	Argument	gbc		1689059	0					
ANR	1690419	Identifier	gbc		1689059	0					
ANR	1690420	Argument	4		1689059	1					
ANR	1690421	PrimaryExpression	4		1689059	0					
ANR	1690422	UnaryOperationExpression	! ch		1689059	1					
ANR	1690423	UnaryOperator	!		1689059	0					
ANR	1690424	Identifier	ch		1689059	1					
ANR	1690425	IfStatement	"if ( decode_exponents ( gbc , s -> exp_strategy [ blk ] [ ch ] , s -> num_exp_groups [ ch ] , s -> dexps [ ch ] [ 0 ] , & s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ] ) )"		1689059	1					
ANR	1690426	Condition	"decode_exponents ( gbc , s -> exp_strategy [ blk ] [ ch ] , s -> num_exp_groups [ ch ] , s -> dexps [ ch ] [ 0 ] , & s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ] )"	427:16:8531:8724	1689059	0	True				
ANR	1690427	CallExpression	"decode_exponents ( gbc , s -> exp_strategy [ blk ] [ ch ] , s -> num_exp_groups [ ch ] , s -> dexps [ ch ] [ 0 ] , & s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ] )"		1689059	0					
ANR	1690428	Callee	decode_exponents		1689059	0					
ANR	1690429	Identifier	decode_exponents		1689059	0					
ANR	1690430	ArgumentList	gbc		1689059	1					
ANR	1690431	Argument	gbc		1689059	0					
ANR	1690432	Identifier	gbc		1689059	0					
ANR	1690433	Argument	s -> exp_strategy [ blk ] [ ch ]		1689059	1					
ANR	1690434	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		1689059	0					
ANR	1690435	ArrayIndexing	s -> exp_strategy [ blk ]		1689059	0					
ANR	1690436	PtrMemberAccess	s -> exp_strategy		1689059	0					
ANR	1690437	Identifier	s		1689059	0					
ANR	1690438	Identifier	exp_strategy		1689059	1					
ANR	1690439	Identifier	blk		1689059	1					
ANR	1690440	Identifier	ch		1689059	1					
ANR	1690441	Argument	s -> num_exp_groups [ ch ]		1689059	2					
ANR	1690442	ArrayIndexing	s -> num_exp_groups [ ch ]		1689059	0					
ANR	1690443	PtrMemberAccess	s -> num_exp_groups		1689059	0					
ANR	1690444	Identifier	s		1689059	0					
ANR	1690445	Identifier	num_exp_groups		1689059	1					
ANR	1690446	Identifier	ch		1689059	1					
ANR	1690447	Argument	s -> dexps [ ch ] [ 0 ]		1689059	3					
ANR	1690448	ArrayIndexing	s -> dexps [ ch ] [ 0 ]		1689059	0					
ANR	1690449	ArrayIndexing	s -> dexps [ ch ]		1689059	0					
ANR	1690450	PtrMemberAccess	s -> dexps		1689059	0					
ANR	1690451	Identifier	s		1689059	0					
ANR	1690452	Identifier	dexps		1689059	1					
ANR	1690453	Identifier	ch		1689059	1					
ANR	1690454	PrimaryExpression	0		1689059	1					
ANR	1690455	Argument	& s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ]		1689059	4					
ANR	1690456	UnaryOperationExpression	& s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ]		1689059	0					
ANR	1690457	UnaryOperator	&		1689059	0					
ANR	1690458	ArrayIndexing	s -> dexps [ ch ] [ s -> start_freq [ ch ] + ! ! ch ]		1689059	1					
ANR	1690459	ArrayIndexing	s -> dexps [ ch ]		1689059	0					
ANR	1690460	PtrMemberAccess	s -> dexps		1689059	0					
ANR	1690461	Identifier	s		1689059	0					
ANR	1690462	Identifier	dexps		1689059	1					
ANR	1690463	Identifier	ch		1689059	1					
ANR	1690464	AdditiveExpression	s -> start_freq [ ch ] + ! ! ch		1689059	1		+			
ANR	1690465	ArrayIndexing	s -> start_freq [ ch ]		1689059	0					
ANR	1690466	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1690467	Identifier	s		1689059	0					
ANR	1690468	Identifier	start_freq		1689059	1					
ANR	1690469	Identifier	ch		1689059	1					
ANR	1690470	UnaryOperationExpression	! ! ch		1689059	1					
ANR	1690471	UnaryOperator	!		1689059	0					
ANR	1690472	UnaryOperationExpression	! ch		1689059	1					
ANR	1690473	UnaryOperator	!		1689059	0					
ANR	1690474	Identifier	ch		1689059	1					
ANR	1690475	CompoundStatement		429:73:8665:8665	1689059	1					
ANR	1690476	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""exponent out-of-range\\n"" )"	433:16:8746:8803	1689059	0	True				
ANR	1690477	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""exponent out-of-range\\n"" )"		1689059	0					
ANR	1690478	Callee	av_log		1689059	0					
ANR	1690479	Identifier	av_log		1689059	0					
ANR	1690480	ArgumentList	s -> avctx		1689059	1					
ANR	1690481	Argument	s -> avctx		1689059	0					
ANR	1690482	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1690483	Identifier	s		1689059	0					
ANR	1690484	Identifier	avctx		1689059	1					
ANR	1690485	Argument	AV_LOG_ERROR		1689059	1					
ANR	1690486	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1690487	Argument	"""exponent out-of-range\\n"""		1689059	2					
ANR	1690488	PrimaryExpression	"""exponent out-of-range\\n"""		1689059	0					
ANR	1690489	ReturnStatement	return - 1 ;	435:16:8822:8831	1689059	1	True				
ANR	1690490	UnaryOperationExpression	- 1		1689059	0					
ANR	1690491	UnaryOperator	-		1689059	0					
ANR	1690492	PrimaryExpression	1		1689059	1					
ANR	1690493	IfStatement	if ( ch != CPL_CH && ch != s -> lfe_ch )		1689059	2					
ANR	1690494	Condition	ch != CPL_CH && ch != s -> lfe_ch	439:15:8864:8894	1689059	0	True				
ANR	1690495	AndExpression	ch != CPL_CH && ch != s -> lfe_ch		1689059	0		&&			
ANR	1690496	EqualityExpression	ch != CPL_CH		1689059	0		!=			
ANR	1690497	Identifier	ch		1689059	0					
ANR	1690498	Identifier	CPL_CH		1689059	1					
ANR	1690499	EqualityExpression	ch != s -> lfe_ch		1689059	1		!=			
ANR	1690500	Identifier	ch		1689059	0					
ANR	1690501	PtrMemberAccess	s -> lfe_ch		1689059	1					
ANR	1690502	Identifier	s		1689059	0					
ANR	1690503	Identifier	lfe_ch		1689059	1					
ANR	1690504	ExpressionStatement	"skip_bits ( gbc , 2 )"	441:16:8914:8931	1689059	1	True				
ANR	1690505	CallExpression	"skip_bits ( gbc , 2 )"		1689059	0					
ANR	1690506	Callee	skip_bits		1689059	0					
ANR	1690507	Identifier	skip_bits		1689059	0					
ANR	1690508	ArgumentList	gbc		1689059	1					
ANR	1690509	Argument	gbc		1689059	0					
ANR	1690510	Identifier	gbc		1689059	0					
ANR	1690511	Argument	2		1689059	1					
ANR	1690512	PrimaryExpression	2		1689059	0					
ANR	1690513	IfStatement	if ( s -> bit_allocation_syntax )		1689059	23					
ANR	1690514	Condition	s -> bit_allocation_syntax	451:8:9019:9042	1689059	0	True				
ANR	1690515	PtrMemberAccess	s -> bit_allocation_syntax		1689059	0					
ANR	1690516	Identifier	s		1689059	0					
ANR	1690517	Identifier	bit_allocation_syntax		1689059	1					
ANR	1690518	CompoundStatement		449:34:8983:8983	1689059	1					
ANR	1690519	IfStatement	if ( get_bits1 ( gbc ) )		1689059	0					
ANR	1690520	Condition	get_bits1 ( gbc )	453:12:9060:9073	1689059	0	True				
ANR	1690521	CallExpression	get_bits1 ( gbc )		1689059	0					
ANR	1690522	Callee	get_bits1		1689059	0					
ANR	1690523	Identifier	get_bits1		1689059	0					
ANR	1690524	ArgumentList	gbc		1689059	1					
ANR	1690525	Argument	gbc		1689059	0					
ANR	1690526	Identifier	gbc		1689059	0					
ANR	1690527	CompoundStatement		451:28:9014:9014	1689059	1					
ANR	1690528	ExpressionStatement	"s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"	455:12:9091:9195	1689059	0	True				
ANR	1690529	AssignmentExpression	"s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"		1689059	0		=			
ANR	1690530	MemberAccess	s -> bit_alloc_params . slow_decay		1689059	0					
ANR	1690531	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690532	Identifier	s		1689059	0					
ANR	1690533	Identifier	bit_alloc_params		1689059	1					
ANR	1690534	Identifier	slow_decay		1689059	1					
ANR	1690535	ShiftExpression	"ff_ac3_slow_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"		1689059	1		>>			
ANR	1690536	ArrayIndexing	"ff_ac3_slow_decay_tab [ get_bits ( gbc , 2 ) ]"		1689059	0					
ANR	1690537	Identifier	ff_ac3_slow_decay_tab		1689059	0					
ANR	1690538	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1690539	Callee	get_bits		1689059	0					
ANR	1690540	Identifier	get_bits		1689059	0					
ANR	1690541	ArgumentList	gbc		1689059	1					
ANR	1690542	Argument	gbc		1689059	0					
ANR	1690543	Identifier	gbc		1689059	0					
ANR	1690544	Argument	2		1689059	1					
ANR	1690545	PrimaryExpression	2		1689059	0					
ANR	1690546	MemberAccess	s -> bit_alloc_params . sr_shift		1689059	1					
ANR	1690547	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690548	Identifier	s		1689059	0					
ANR	1690549	Identifier	bit_alloc_params		1689059	1					
ANR	1690550	Identifier	sr_shift		1689059	1					
ANR	1690551	ExpressionStatement	"s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"	457:12:9210:9314	1689059	1	True				
ANR	1690552	AssignmentExpression	"s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"		1689059	0		=			
ANR	1690553	MemberAccess	s -> bit_alloc_params . fast_decay		1689059	0					
ANR	1690554	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690555	Identifier	s		1689059	0					
ANR	1690556	Identifier	bit_alloc_params		1689059	1					
ANR	1690557	Identifier	fast_decay		1689059	1					
ANR	1690558	ShiftExpression	"ff_ac3_fast_decay_tab [ get_bits ( gbc , 2 ) ] >> s -> bit_alloc_params . sr_shift"		1689059	1		>>			
ANR	1690559	ArrayIndexing	"ff_ac3_fast_decay_tab [ get_bits ( gbc , 2 ) ]"		1689059	0					
ANR	1690560	Identifier	ff_ac3_fast_decay_tab		1689059	0					
ANR	1690561	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1690562	Callee	get_bits		1689059	0					
ANR	1690563	Identifier	get_bits		1689059	0					
ANR	1690564	ArgumentList	gbc		1689059	1					
ANR	1690565	Argument	gbc		1689059	0					
ANR	1690566	Identifier	gbc		1689059	0					
ANR	1690567	Argument	2		1689059	1					
ANR	1690568	PrimaryExpression	2		1689059	0					
ANR	1690569	MemberAccess	s -> bit_alloc_params . sr_shift		1689059	1					
ANR	1690570	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690571	Identifier	s		1689059	0					
ANR	1690572	Identifier	bit_alloc_params		1689059	1					
ANR	1690573	Identifier	sr_shift		1689059	1					
ANR	1690574	ExpressionStatement	"s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ get_bits ( gbc , 2 ) ]"	459:12:9329:9400	1689059	2	True				
ANR	1690575	AssignmentExpression	"s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ get_bits ( gbc , 2 ) ]"		1689059	0		=			
ANR	1690576	MemberAccess	s -> bit_alloc_params . slow_gain		1689059	0					
ANR	1690577	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690578	Identifier	s		1689059	0					
ANR	1690579	Identifier	bit_alloc_params		1689059	1					
ANR	1690580	Identifier	slow_gain		1689059	1					
ANR	1690581	ArrayIndexing	"ff_ac3_slow_gain_tab [ get_bits ( gbc , 2 ) ]"		1689059	1					
ANR	1690582	Identifier	ff_ac3_slow_gain_tab		1689059	0					
ANR	1690583	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1690584	Callee	get_bits		1689059	0					
ANR	1690585	Identifier	get_bits		1689059	0					
ANR	1690586	ArgumentList	gbc		1689059	1					
ANR	1690587	Argument	gbc		1689059	0					
ANR	1690588	Identifier	gbc		1689059	0					
ANR	1690589	Argument	2		1689059	1					
ANR	1690590	PrimaryExpression	2		1689059	0					
ANR	1690591	ExpressionStatement	"s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ get_bits ( gbc , 2 ) ]"	461:12:9415:9487	1689059	3	True				
ANR	1690592	AssignmentExpression	"s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ get_bits ( gbc , 2 ) ]"		1689059	0		=			
ANR	1690593	MemberAccess	s -> bit_alloc_params . db_per_bit		1689059	0					
ANR	1690594	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690595	Identifier	s		1689059	0					
ANR	1690596	Identifier	bit_alloc_params		1689059	1					
ANR	1690597	Identifier	db_per_bit		1689059	1					
ANR	1690598	ArrayIndexing	"ff_ac3_db_per_bit_tab [ get_bits ( gbc , 2 ) ]"		1689059	1					
ANR	1690599	Identifier	ff_ac3_db_per_bit_tab		1689059	0					
ANR	1690600	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1690601	Callee	get_bits		1689059	0					
ANR	1690602	Identifier	get_bits		1689059	0					
ANR	1690603	ArgumentList	gbc		1689059	1					
ANR	1690604	Argument	gbc		1689059	0					
ANR	1690605	Identifier	gbc		1689059	0					
ANR	1690606	Argument	2		1689059	1					
ANR	1690607	PrimaryExpression	2		1689059	0					
ANR	1690608	ExpressionStatement	"s -> bit_alloc_params . floor = ff_ac3_floor_tab [ get_bits ( gbc , 3 ) ]"	463:12:9502:9565	1689059	4	True				
ANR	1690609	AssignmentExpression	"s -> bit_alloc_params . floor = ff_ac3_floor_tab [ get_bits ( gbc , 3 ) ]"		1689059	0		=			
ANR	1690610	MemberAccess	s -> bit_alloc_params . floor		1689059	0					
ANR	1690611	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1690612	Identifier	s		1689059	0					
ANR	1690613	Identifier	bit_alloc_params		1689059	1					
ANR	1690614	Identifier	floor		1689059	1					
ANR	1690615	ArrayIndexing	"ff_ac3_floor_tab [ get_bits ( gbc , 3 ) ]"		1689059	1					
ANR	1690616	Identifier	ff_ac3_floor_tab		1689059	0					
ANR	1690617	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1690618	Callee	get_bits		1689059	0					
ANR	1690619	Identifier	get_bits		1689059	0					
ANR	1690620	ArgumentList	gbc		1689059	1					
ANR	1690621	Argument	gbc		1689059	0					
ANR	1690622	Identifier	gbc		1689059	0					
ANR	1690623	Argument	3		1689059	1					
ANR	1690624	PrimaryExpression	3		1689059	0					
ANR	1690625	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	5					
ANR	1690626	ForInit	ch = ! cpl_in_use ;	465:16:9584:9598	1689059	0	True				
ANR	1690627	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1690628	Identifier	ch		1689059	0					
ANR	1690629	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1690630	UnaryOperator	!		1689059	0					
ANR	1690631	Identifier	cpl_in_use		1689059	1					
ANR	1690632	Condition	ch <= s -> channels	465:32:9600:9614	1689059	1	True				
ANR	1690633	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1690634	Identifier	ch		1689059	0					
ANR	1690635	PtrMemberAccess	s -> channels		1689059	1					
ANR	1690636	Identifier	s		1689059	0					
ANR	1690637	Identifier	channels		1689059	1					
ANR	1690638	PostIncDecOperationExpression	ch ++	465:49:9617:9620	1689059	2	True				
ANR	1690639	Identifier	ch		1689059	0					
ANR	1690640	IncDec	++		1689059	1					
ANR	1690641	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"	467:16:9640:9693	1689059	3	True				
ANR	1690642	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	0		=			
ANR	1690643	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690644	Identifier	bit_alloc_stages		1689059	0					
ANR	1690645	Identifier	ch		1689059	1					
ANR	1690646	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	1					
ANR	1690647	Callee	FFMAX		1689059	0					
ANR	1690648	Identifier	FFMAX		1689059	0					
ANR	1690649	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1690650	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690651	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690652	Identifier	bit_alloc_stages		1689059	0					
ANR	1690653	Identifier	ch		1689059	1					
ANR	1690654	Argument	2		1689059	1					
ANR	1690655	PrimaryExpression	2		1689059	0					
ANR	1690656	ElseStatement	else		1689059	0					
ANR	1690657	IfStatement	if ( ! blk )		1689059	0					
ANR	1690658	Condition	! blk	469:19:9715:9718	1689059	0	True				
ANR	1690659	UnaryOperationExpression	! blk		1689059	0					
ANR	1690660	UnaryOperator	!		1689059	0					
ANR	1690661	Identifier	blk		1689059	1					
ANR	1690662	CompoundStatement		467:25:9659:9659	1689059	1					
ANR	1690663	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new bit allocation info must be present in block 0\\n"" )"	471:12:9736:9822	1689059	0	True				
ANR	1690664	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new bit allocation info must be present in block 0\\n"" )"		1689059	0					
ANR	1690665	Callee	av_log		1689059	0					
ANR	1690666	Identifier	av_log		1689059	0					
ANR	1690667	ArgumentList	s -> avctx		1689059	1					
ANR	1690668	Argument	s -> avctx		1689059	0					
ANR	1690669	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1690670	Identifier	s		1689059	0					
ANR	1690671	Identifier	avctx		1689059	1					
ANR	1690672	Argument	AV_LOG_ERROR		1689059	1					
ANR	1690673	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1690674	Argument	"""new bit allocation info must be present in block 0\\n"""		1689059	2					
ANR	1690675	PrimaryExpression	"""new bit allocation info must be present in block 0\\n"""		1689059	0					
ANR	1690676	ReturnStatement	return - 1 ;	473:12:9837:9846	1689059	1	True				
ANR	1690677	UnaryOperationExpression	- 1		1689059	0					
ANR	1690678	UnaryOperator	-		1689059	0					
ANR	1690679	PrimaryExpression	1		1689059	1					
ANR	1690680	IfStatement	if ( ! s -> eac3 || ! blk )		1689059	24					
ANR	1690681	Condition	! s -> eac3 || ! blk	483:7:9956:9971	1689059	0	True				
ANR	1690682	OrExpression	! s -> eac3 || ! blk		1689059	0		||			
ANR	1690683	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1690684	UnaryOperator	!		1689059	0					
ANR	1690685	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1690686	Identifier	s		1689059	0					
ANR	1690687	Identifier	eac3		1689059	1					
ANR	1690688	UnaryOperationExpression	! blk		1689059	1					
ANR	1690689	UnaryOperator	!		1689059	0					
ANR	1690690	Identifier	blk		1689059	1					
ANR	1690691	CompoundStatement		481:24:9911:9911	1689059	1					
ANR	1690692	IfStatement	if ( s -> snr_offset_strategy && get_bits1 ( gbc ) )		1689059	0					
ANR	1690693	Condition	s -> snr_offset_strategy && get_bits1 ( gbc )	485:11:9987:10026	1689059	0	True				
ANR	1690694	AndExpression	s -> snr_offset_strategy && get_bits1 ( gbc )		1689059	0		&&			
ANR	1690695	PtrMemberAccess	s -> snr_offset_strategy		1689059	0					
ANR	1690696	Identifier	s		1689059	0					
ANR	1690697	Identifier	snr_offset_strategy		1689059	1					
ANR	1690698	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1690699	Callee	get_bits1		1689059	0					
ANR	1690700	Identifier	get_bits1		1689059	0					
ANR	1690701	ArgumentList	gbc		1689059	1					
ANR	1690702	Argument	gbc		1689059	0					
ANR	1690703	Identifier	gbc		1689059	0					
ANR	1690704	CompoundStatement		487:12:10008:10016	1689059	1					
ANR	1690705	IdentifierDeclStatement	int snr = 0 ;	487:12:10044:10055	1689059	0	True				
ANR	1690706	IdentifierDecl	snr = 0		1689059	0					
ANR	1690707	IdentifierDeclType	int		1689059	0					
ANR	1690708	Identifier	snr		1689059	1					
ANR	1690709	AssignmentExpression	snr = 0		1689059	2		=			
ANR	1690710	Identifier	snr		1689059	0					
ANR	1690711	PrimaryExpression	0		1689059	1					
ANR	1690712	IdentifierDeclStatement	int csnr ;	489:12:10070:10078	1689059	1	True				
ANR	1690713	IdentifierDecl	csnr		1689059	0					
ANR	1690714	IdentifierDeclType	int		1689059	0					
ANR	1690715	Identifier	csnr		1689059	1					
ANR	1690716	ExpressionStatement	"csnr = ( get_bits ( gbc , 6 ) - 15 ) << 4"	491:12:10093:10128	1689059	2	True				
ANR	1690717	AssignmentExpression	"csnr = ( get_bits ( gbc , 6 ) - 15 ) << 4"		1689059	0		=			
ANR	1690718	Identifier	csnr		1689059	0					
ANR	1690719	ShiftExpression	"( get_bits ( gbc , 6 ) - 15 ) << 4"		1689059	1		<<			
ANR	1690720	AdditiveExpression	"get_bits ( gbc , 6 ) - 15"		1689059	0		-			
ANR	1690721	CallExpression	"get_bits ( gbc , 6 )"		1689059	0					
ANR	1690722	Callee	get_bits		1689059	0					
ANR	1690723	Identifier	get_bits		1689059	0					
ANR	1690724	ArgumentList	gbc		1689059	1					
ANR	1690725	Argument	gbc		1689059	0					
ANR	1690726	Identifier	gbc		1689059	0					
ANR	1690727	Argument	6		1689059	1					
ANR	1690728	PrimaryExpression	6		1689059	0					
ANR	1690729	PrimaryExpression	15		1689059	1					
ANR	1690730	PrimaryExpression	4		1689059	1					
ANR	1690731	ForStatement	for ( i = ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	3					
ANR	1690732	ForInit	i = ch = ! cpl_in_use ;	493:17:10148:10168	1689059	0	True				
ANR	1690733	AssignmentExpression	i = ch = ! cpl_in_use		1689059	0		=			
ANR	1690734	Identifier	i		1689059	0					
ANR	1690735	AssignmentExpression	ch = ! cpl_in_use		1689059	1		=			
ANR	1690736	Identifier	ch		1689059	0					
ANR	1690737	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1690738	UnaryOperator	!		1689059	0					
ANR	1690739	Identifier	cpl_in_use		1689059	1					
ANR	1690740	Condition	ch <= s -> channels	493:39:10170:10186	1689059	1	True				
ANR	1690741	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1690742	Identifier	ch		1689059	0					
ANR	1690743	PtrMemberAccess	s -> channels		1689059	1					
ANR	1690744	Identifier	s		1689059	0					
ANR	1690745	Identifier	channels		1689059	1					
ANR	1690746	PostIncDecOperationExpression	ch ++	493:58:10189:10192	1689059	2	True				
ANR	1690747	Identifier	ch		1689059	0					
ANR	1690748	IncDec	++		1689059	1					
ANR	1690749	CompoundStatement		491:64:10133:10133	1689059	3					
ANR	1690750	IfStatement	if ( ch == i || s -> snr_offset_strategy == 2 )		1689059	0					
ANR	1690751	Condition	ch == i || s -> snr_offset_strategy == 2	497:20:10252:10289	1689059	0	True				
ANR	1690752	OrExpression	ch == i || s -> snr_offset_strategy == 2		1689059	0		||			
ANR	1690753	EqualityExpression	ch == i		1689059	0		==			
ANR	1690754	Identifier	ch		1689059	0					
ANR	1690755	Identifier	i		1689059	1					
ANR	1690756	EqualityExpression	s -> snr_offset_strategy == 2		1689059	1		==			
ANR	1690757	PtrMemberAccess	s -> snr_offset_strategy		1689059	0					
ANR	1690758	Identifier	s		1689059	0					
ANR	1690759	Identifier	snr_offset_strategy		1689059	1					
ANR	1690760	PrimaryExpression	2		1689059	1					
ANR	1690761	ExpressionStatement	"snr = ( csnr + get_bits ( gbc , 4 ) ) << 2"	499:20:10313:10349	1689059	1	True				
ANR	1690762	AssignmentExpression	"snr = ( csnr + get_bits ( gbc , 4 ) ) << 2"		1689059	0		=			
ANR	1690763	Identifier	snr		1689059	0					
ANR	1690764	ShiftExpression	"( csnr + get_bits ( gbc , 4 ) ) << 2"		1689059	1		<<			
ANR	1690765	AdditiveExpression	"csnr + get_bits ( gbc , 4 )"		1689059	0		+			
ANR	1690766	Identifier	csnr		1689059	0					
ANR	1690767	CallExpression	"get_bits ( gbc , 4 )"		1689059	1					
ANR	1690768	Callee	get_bits		1689059	0					
ANR	1690769	Identifier	get_bits		1689059	0					
ANR	1690770	ArgumentList	gbc		1689059	1					
ANR	1690771	Argument	gbc		1689059	0					
ANR	1690772	Identifier	gbc		1689059	0					
ANR	1690773	Argument	4		1689059	1					
ANR	1690774	PrimaryExpression	4		1689059	0					
ANR	1690775	PrimaryExpression	2		1689059	1					
ANR	1690776	IfStatement	if ( blk && s -> snr_offset [ ch ] != snr )		1689059	1					
ANR	1690777	Condition	blk && s -> snr_offset [ ch ] != snr	503:19:10455:10485	1689059	0	True				
ANR	1690778	AndExpression	blk && s -> snr_offset [ ch ] != snr		1689059	0		&&			
ANR	1690779	Identifier	blk		1689059	0					
ANR	1690780	EqualityExpression	s -> snr_offset [ ch ] != snr		1689059	1		!=			
ANR	1690781	ArrayIndexing	s -> snr_offset [ ch ]		1689059	0					
ANR	1690782	PtrMemberAccess	s -> snr_offset		1689059	0					
ANR	1690783	Identifier	s		1689059	0					
ANR	1690784	Identifier	snr_offset		1689059	1					
ANR	1690785	Identifier	ch		1689059	1					
ANR	1690786	Identifier	snr		1689059	1					
ANR	1690787	CompoundStatement		501:52:10426:10426	1689059	1					
ANR	1690788	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 1 )"	505:20:10511:10564	1689059	0	True				
ANR	1690789	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 1 )"		1689059	0		=			
ANR	1690790	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690791	Identifier	bit_alloc_stages		1689059	0					
ANR	1690792	Identifier	ch		1689059	1					
ANR	1690793	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 1 )"		1689059	1					
ANR	1690794	Callee	FFMAX		1689059	0					
ANR	1690795	Identifier	FFMAX		1689059	0					
ANR	1690796	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1690797	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690798	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690799	Identifier	bit_alloc_stages		1689059	0					
ANR	1690800	Identifier	ch		1689059	1					
ANR	1690801	Argument	1		1689059	1					
ANR	1690802	PrimaryExpression	1		1689059	0					
ANR	1690803	ExpressionStatement	s -> snr_offset [ ch ] = snr	509:16:10602:10625	1689059	2	True				
ANR	1690804	AssignmentExpression	s -> snr_offset [ ch ] = snr		1689059	0		=			
ANR	1690805	ArrayIndexing	s -> snr_offset [ ch ]		1689059	0					
ANR	1690806	PtrMemberAccess	s -> snr_offset		1689059	0					
ANR	1690807	Identifier	s		1689059	0					
ANR	1690808	Identifier	snr_offset		1689059	1					
ANR	1690809	Identifier	ch		1689059	1					
ANR	1690810	Identifier	snr		1689059	1					
ANR	1690811	IfStatement	if ( ! s -> eac3 )		1689059	3					
ANR	1690812	Condition	! s -> eac3	515:20:10702:10709	1689059	0	True				
ANR	1690813	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1690814	UnaryOperator	!		1689059	0					
ANR	1690815	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1690816	Identifier	s		1689059	0					
ANR	1690817	Identifier	eac3		1689059	1					
ANR	1690818	CompoundStatement		515:20:10673:10700	1689059	1					
ANR	1690819	IdentifierDeclStatement	int prev = s -> fast_gain [ ch ] ;	517:20:10735:10762	1689059	0	True				
ANR	1690820	IdentifierDecl	prev = s -> fast_gain [ ch ]		1689059	0					
ANR	1690821	IdentifierDeclType	int		1689059	0					
ANR	1690822	Identifier	prev		1689059	1					
ANR	1690823	AssignmentExpression	prev = s -> fast_gain [ ch ]		1689059	2		=			
ANR	1690824	Identifier	prev		1689059	0					
ANR	1690825	ArrayIndexing	s -> fast_gain [ ch ]		1689059	1					
ANR	1690826	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690827	Identifier	s		1689059	0					
ANR	1690828	Identifier	fast_gain		1689059	1					
ANR	1690829	Identifier	ch		1689059	1					
ANR	1690830	ExpressionStatement	"s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"	519:20:10785:10842	1689059	1	True				
ANR	1690831	AssignmentExpression	"s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"		1689059	0		=			
ANR	1690832	ArrayIndexing	s -> fast_gain [ ch ]		1689059	0					
ANR	1690833	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690834	Identifier	s		1689059	0					
ANR	1690835	Identifier	fast_gain		1689059	1					
ANR	1690836	Identifier	ch		1689059	1					
ANR	1690837	ArrayIndexing	"ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"		1689059	1					
ANR	1690838	Identifier	ff_ac3_fast_gain_tab		1689059	0					
ANR	1690839	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1690840	Callee	get_bits		1689059	0					
ANR	1690841	Identifier	get_bits		1689059	0					
ANR	1690842	ArgumentList	gbc		1689059	1					
ANR	1690843	Argument	gbc		1689059	0					
ANR	1690844	Identifier	gbc		1689059	0					
ANR	1690845	Argument	3		1689059	1					
ANR	1690846	PrimaryExpression	3		1689059	0					
ANR	1690847	IfStatement	if ( blk && prev != s -> fast_gain [ ch ] )		1689059	2					
ANR	1690848	Condition	blk && prev != s -> fast_gain [ ch ]	523:23:10949:10979	1689059	0	True				
ANR	1690849	AndExpression	blk && prev != s -> fast_gain [ ch ]		1689059	0		&&			
ANR	1690850	Identifier	blk		1689059	0					
ANR	1690851	EqualityExpression	prev != s -> fast_gain [ ch ]		1689059	1		!=			
ANR	1690852	Identifier	prev		1689059	0					
ANR	1690853	ArrayIndexing	s -> fast_gain [ ch ]		1689059	1					
ANR	1690854	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690855	Identifier	s		1689059	0					
ANR	1690856	Identifier	fast_gain		1689059	1					
ANR	1690857	Identifier	ch		1689059	1					
ANR	1690858	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"	525:24:11007:11060	1689059	1	True				
ANR	1690859	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	0		=			
ANR	1690860	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690861	Identifier	bit_alloc_stages		1689059	0					
ANR	1690862	Identifier	ch		1689059	1					
ANR	1690863	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	1					
ANR	1690864	Callee	FFMAX		1689059	0					
ANR	1690865	Identifier	FFMAX		1689059	0					
ANR	1690866	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1690867	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690868	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690869	Identifier	bit_alloc_stages		1689059	0					
ANR	1690870	Identifier	ch		1689059	1					
ANR	1690871	Argument	2		1689059	1					
ANR	1690872	PrimaryExpression	2		1689059	0					
ANR	1690873	ElseStatement	else		1689059	0					
ANR	1690874	IfStatement	if ( ! s -> eac3 && ! blk )		1689059	0					
ANR	1690875	Condition	! s -> eac3 && ! blk	531:19:11116:11131	1689059	0	True				
ANR	1690876	AndExpression	! s -> eac3 && ! blk		1689059	0		&&			
ANR	1690877	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1690878	UnaryOperator	!		1689059	0					
ANR	1690879	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1690880	Identifier	s		1689059	0					
ANR	1690881	Identifier	eac3		1689059	1					
ANR	1690882	UnaryOperationExpression	! blk		1689059	1					
ANR	1690883	UnaryOperator	!		1689059	0					
ANR	1690884	Identifier	blk		1689059	1					
ANR	1690885	CompoundStatement		529:37:11072:11072	1689059	1					
ANR	1690886	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new snr offsets must be present in block 0\\n"" )"	533:12:11149:11227	1689059	0	True				
ANR	1690887	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new snr offsets must be present in block 0\\n"" )"		1689059	0					
ANR	1690888	Callee	av_log		1689059	0					
ANR	1690889	Identifier	av_log		1689059	0					
ANR	1690890	ArgumentList	s -> avctx		1689059	1					
ANR	1690891	Argument	s -> avctx		1689059	0					
ANR	1690892	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1690893	Identifier	s		1689059	0					
ANR	1690894	Identifier	avctx		1689059	1					
ANR	1690895	Argument	AV_LOG_ERROR		1689059	1					
ANR	1690896	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1690897	Argument	"""new snr offsets must be present in block 0\\n"""		1689059	2					
ANR	1690898	PrimaryExpression	"""new snr offsets must be present in block 0\\n"""		1689059	0					
ANR	1690899	ReturnStatement	return - 1 ;	535:12:11242:11251	1689059	1	True				
ANR	1690900	UnaryOperationExpression	- 1		1689059	0					
ANR	1690901	UnaryOperator	-		1689059	0					
ANR	1690902	PrimaryExpression	1		1689059	1					
ANR	1690903	IfStatement	if ( s -> fast_gain_syntax && get_bits1 ( gbc ) )		1689059	25					
ANR	1690904	Condition	s -> fast_gain_syntax && get_bits1 ( gbc )	545:8:11317:11353	1689059	0	True				
ANR	1690905	AndExpression	s -> fast_gain_syntax && get_bits1 ( gbc )		1689059	0		&&			
ANR	1690906	PtrMemberAccess	s -> fast_gain_syntax		1689059	0					
ANR	1690907	Identifier	s		1689059	0					
ANR	1690908	Identifier	fast_gain_syntax		1689059	1					
ANR	1690909	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1690910	Callee	get_bits1		1689059	0					
ANR	1690911	Identifier	get_bits1		1689059	0					
ANR	1690912	ArgumentList	gbc		1689059	1					
ANR	1690913	Argument	gbc		1689059	0					
ANR	1690914	Identifier	gbc		1689059	0					
ANR	1690915	CompoundStatement		543:47:11294:11294	1689059	1					
ANR	1690916	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	0					
ANR	1690917	ForInit	ch = ! cpl_in_use ;	547:13:11372:11388	1689059	0	True				
ANR	1690918	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1690919	Identifier	ch		1689059	0					
ANR	1690920	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1690921	UnaryOperator	!		1689059	0					
ANR	1690922	Identifier	cpl_in_use		1689059	1					
ANR	1690923	Condition	ch <= s -> channels	547:31:11390:11406	1689059	1	True				
ANR	1690924	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1690925	Identifier	ch		1689059	0					
ANR	1690926	PtrMemberAccess	s -> channels		1689059	1					
ANR	1690927	Identifier	s		1689059	0					
ANR	1690928	Identifier	channels		1689059	1					
ANR	1690929	PostIncDecOperationExpression	ch ++	547:50:11409:11412	1689059	2	True				
ANR	1690930	Identifier	ch		1689059	0					
ANR	1690931	IncDec	++		1689059	1					
ANR	1690932	CompoundStatement		547:12:11368:11395	1689059	3					
ANR	1690933	IdentifierDeclStatement	int prev = s -> fast_gain [ ch ] ;	549:12:11430:11457	1689059	0	True				
ANR	1690934	IdentifierDecl	prev = s -> fast_gain [ ch ]		1689059	0					
ANR	1690935	IdentifierDeclType	int		1689059	0					
ANR	1690936	Identifier	prev		1689059	1					
ANR	1690937	AssignmentExpression	prev = s -> fast_gain [ ch ]		1689059	2		=			
ANR	1690938	Identifier	prev		1689059	0					
ANR	1690939	ArrayIndexing	s -> fast_gain [ ch ]		1689059	1					
ANR	1690940	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690941	Identifier	s		1689059	0					
ANR	1690942	Identifier	fast_gain		1689059	1					
ANR	1690943	Identifier	ch		1689059	1					
ANR	1690944	ExpressionStatement	"s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"	551:12:11472:11529	1689059	1	True				
ANR	1690945	AssignmentExpression	"s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"		1689059	0		=			
ANR	1690946	ArrayIndexing	s -> fast_gain [ ch ]		1689059	0					
ANR	1690947	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690948	Identifier	s		1689059	0					
ANR	1690949	Identifier	fast_gain		1689059	1					
ANR	1690950	Identifier	ch		1689059	1					
ANR	1690951	ArrayIndexing	"ff_ac3_fast_gain_tab [ get_bits ( gbc , 3 ) ]"		1689059	1					
ANR	1690952	Identifier	ff_ac3_fast_gain_tab		1689059	0					
ANR	1690953	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1690954	Callee	get_bits		1689059	0					
ANR	1690955	Identifier	get_bits		1689059	0					
ANR	1690956	ArgumentList	gbc		1689059	1					
ANR	1690957	Argument	gbc		1689059	0					
ANR	1690958	Identifier	gbc		1689059	0					
ANR	1690959	Argument	3		1689059	1					
ANR	1690960	PrimaryExpression	3		1689059	0					
ANR	1690961	IfStatement	if ( blk && prev != s -> fast_gain [ ch ] )		1689059	2					
ANR	1690962	Condition	blk && prev != s -> fast_gain [ ch ]	555:15:11620:11650	1689059	0	True				
ANR	1690963	AndExpression	blk && prev != s -> fast_gain [ ch ]		1689059	0		&&			
ANR	1690964	Identifier	blk		1689059	0					
ANR	1690965	EqualityExpression	prev != s -> fast_gain [ ch ]		1689059	1		!=			
ANR	1690966	Identifier	prev		1689059	0					
ANR	1690967	ArrayIndexing	s -> fast_gain [ ch ]		1689059	1					
ANR	1690968	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1690969	Identifier	s		1689059	0					
ANR	1690970	Identifier	fast_gain		1689059	1					
ANR	1690971	Identifier	ch		1689059	1					
ANR	1690972	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"	557:16:11670:11723	1689059	1	True				
ANR	1690973	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	0		=			
ANR	1690974	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690975	Identifier	bit_alloc_stages		1689059	0					
ANR	1690976	Identifier	ch		1689059	1					
ANR	1690977	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	1					
ANR	1690978	Callee	FFMAX		1689059	0					
ANR	1690979	Identifier	FFMAX		1689059	0					
ANR	1690980	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1690981	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690982	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1690983	Identifier	bit_alloc_stages		1689059	0					
ANR	1690984	Identifier	ch		1689059	1					
ANR	1690985	Argument	2		1689059	1					
ANR	1690986	PrimaryExpression	2		1689059	0					
ANR	1690987	ElseStatement	else		1689059	0					
ANR	1690988	IfStatement	if ( s -> eac3 && ! blk )		1689059	0					
ANR	1690989	Condition	s -> eac3 && ! blk	561:15:11752:11766	1689059	0	True				
ANR	1690990	AndExpression	s -> eac3 && ! blk		1689059	0		&&			
ANR	1690991	PtrMemberAccess	s -> eac3		1689059	0					
ANR	1690992	Identifier	s		1689059	0					
ANR	1690993	Identifier	eac3		1689059	1					
ANR	1690994	UnaryOperationExpression	! blk		1689059	1					
ANR	1690995	UnaryOperator	!		1689059	0					
ANR	1690996	Identifier	blk		1689059	1					
ANR	1690997	CompoundStatement		559:32:11707:11707	1689059	1					
ANR	1690998	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	0					
ANR	1690999	ForInit	ch = ! cpl_in_use ;	563:13:11785:11801	1689059	0	True				
ANR	1691000	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1691001	Identifier	ch		1689059	0					
ANR	1691002	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1691003	UnaryOperator	!		1689059	0					
ANR	1691004	Identifier	cpl_in_use		1689059	1					
ANR	1691005	Condition	ch <= s -> channels	563:31:11803:11819	1689059	1	True				
ANR	1691006	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1691007	Identifier	ch		1689059	0					
ANR	1691008	PtrMemberAccess	s -> channels		1689059	1					
ANR	1691009	Identifier	s		1689059	0					
ANR	1691010	Identifier	channels		1689059	1					
ANR	1691011	PostIncDecOperationExpression	ch ++	563:50:11822:11825	1689059	2	True				
ANR	1691012	Identifier	ch		1689059	0					
ANR	1691013	IncDec	++		1689059	1					
ANR	1691014	ExpressionStatement	s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ 4 ]	565:12:11841:11883	1689059	3	True				
ANR	1691015	AssignmentExpression	s -> fast_gain [ ch ] = ff_ac3_fast_gain_tab [ 4 ]		1689059	0		=			
ANR	1691016	ArrayIndexing	s -> fast_gain [ ch ]		1689059	0					
ANR	1691017	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1691018	Identifier	s		1689059	0					
ANR	1691019	Identifier	fast_gain		1689059	1					
ANR	1691020	Identifier	ch		1689059	1					
ANR	1691021	ArrayIndexing	ff_ac3_fast_gain_tab [ 4 ]		1689059	1					
ANR	1691022	Identifier	ff_ac3_fast_gain_tab		1689059	0					
ANR	1691023	PrimaryExpression	4		1689059	1					
ANR	1691024	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && get_bits1 ( gbc ) )		1689059	26					
ANR	1691025	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && get_bits1 ( gbc )	573:8:11950:12011	1689059	0	True				
ANR	1691026	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && get_bits1 ( gbc )		1689059	0		&&			
ANR	1691027	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		1689059	0		==			
ANR	1691028	PtrMemberAccess	s -> frame_type		1689059	0					
ANR	1691029	Identifier	s		1689059	0					
ANR	1691030	Identifier	frame_type		1689059	1					
ANR	1691031	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		1689059	1					
ANR	1691032	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1691033	Callee	get_bits1		1689059	0					
ANR	1691034	Identifier	get_bits1		1689059	0					
ANR	1691035	ArgumentList	gbc		1689059	1					
ANR	1691036	Argument	gbc		1689059	0					
ANR	1691037	Identifier	gbc		1689059	0					
ANR	1691038	CompoundStatement		571:72:11952:11952	1689059	1					
ANR	1691039	ExpressionStatement	"skip_bits ( gbc , 10 )"	575:8:12025:12043	1689059	0	True				
ANR	1691040	CallExpression	"skip_bits ( gbc , 10 )"		1689059	0					
ANR	1691041	Callee	skip_bits		1689059	0					
ANR	1691042	Identifier	skip_bits		1689059	0					
ANR	1691043	ArgumentList	gbc		1689059	1					
ANR	1691044	Argument	gbc		1689059	0					
ANR	1691045	Identifier	gbc		1689059	0					
ANR	1691046	Argument	10		1689059	1					
ANR	1691047	PrimaryExpression	10		1689059	0					
ANR	1691048	IfStatement	if ( cpl_in_use )		1689059	27					
ANR	1691049	Condition	cpl_in_use	583:8:12129:12138	1689059	0	True				
ANR	1691050	Identifier	cpl_in_use		1689059	0					
ANR	1691051	CompoundStatement		581:20:12079:12079	1689059	1					
ANR	1691052	IfStatement	if ( s -> first_cpl_leak || get_bits1 ( gbc ) )		1689059	0					
ANR	1691053	Condition	s -> first_cpl_leak || get_bits1 ( gbc )	585:12:12156:12190	1689059	0	True				
ANR	1691054	OrExpression	s -> first_cpl_leak || get_bits1 ( gbc )		1689059	0		||			
ANR	1691055	PtrMemberAccess	s -> first_cpl_leak		1689059	0					
ANR	1691056	Identifier	s		1689059	0					
ANR	1691057	Identifier	first_cpl_leak		1689059	1					
ANR	1691058	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1691059	Callee	get_bits1		1689059	0					
ANR	1691060	Identifier	get_bits1		1689059	0					
ANR	1691061	ArgumentList	gbc		1689059	1					
ANR	1691062	Argument	gbc		1689059	0					
ANR	1691063	Identifier	gbc		1689059	0					
ANR	1691064	CompoundStatement		587:12:12186:12211	1689059	1					
ANR	1691065	IdentifierDeclStatement	"int fl = get_bits ( gbc , 3 ) ;"	587:12:12208:12233	1689059	0	True				
ANR	1691066	IdentifierDecl	"fl = get_bits ( gbc , 3 )"		1689059	0					
ANR	1691067	IdentifierDeclType	int		1689059	0					
ANR	1691068	Identifier	fl		1689059	1					
ANR	1691069	AssignmentExpression	"fl = get_bits ( gbc , 3 )"		1689059	2		=			
ANR	1691070	Identifier	fl		1689059	0					
ANR	1691071	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1691072	Callee	get_bits		1689059	0					
ANR	1691073	Identifier	get_bits		1689059	0					
ANR	1691074	ArgumentList	gbc		1689059	1					
ANR	1691075	Argument	gbc		1689059	0					
ANR	1691076	Identifier	gbc		1689059	0					
ANR	1691077	Argument	3		1689059	1					
ANR	1691078	PrimaryExpression	3		1689059	0					
ANR	1691079	IdentifierDeclStatement	"int sl = get_bits ( gbc , 3 ) ;"	589:12:12248:12273	1689059	1	True				
ANR	1691080	IdentifierDecl	"sl = get_bits ( gbc , 3 )"		1689059	0					
ANR	1691081	IdentifierDeclType	int		1689059	0					
ANR	1691082	Identifier	sl		1689059	1					
ANR	1691083	AssignmentExpression	"sl = get_bits ( gbc , 3 )"		1689059	2		=			
ANR	1691084	Identifier	sl		1689059	0					
ANR	1691085	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1691086	Callee	get_bits		1689059	0					
ANR	1691087	Identifier	get_bits		1689059	0					
ANR	1691088	ArgumentList	gbc		1689059	1					
ANR	1691089	Argument	gbc		1689059	0					
ANR	1691090	Identifier	gbc		1689059	0					
ANR	1691091	Argument	3		1689059	1					
ANR	1691092	PrimaryExpression	3		1689059	0					
ANR	1691093	IfStatement	if ( blk && ( fl != s -> bit_alloc_params . cpl_fast_leak || sl != s -> bit_alloc_params . cpl_slow_leak ) )		1689059	2					
ANR	1691094	Condition	blk && ( fl != s -> bit_alloc_params . cpl_fast_leak || sl != s -> bit_alloc_params . cpl_slow_leak )	595:15:12405:12519	1689059	0	True				
ANR	1691095	AndExpression	blk && ( fl != s -> bit_alloc_params . cpl_fast_leak || sl != s -> bit_alloc_params . cpl_slow_leak )		1689059	0		&&			
ANR	1691096	Identifier	blk		1689059	0					
ANR	1691097	OrExpression	fl != s -> bit_alloc_params . cpl_fast_leak || sl != s -> bit_alloc_params . cpl_slow_leak		1689059	1		||			
ANR	1691098	EqualityExpression	fl != s -> bit_alloc_params . cpl_fast_leak		1689059	0		!=			
ANR	1691099	Identifier	fl		1689059	0					
ANR	1691100	MemberAccess	s -> bit_alloc_params . cpl_fast_leak		1689059	1					
ANR	1691101	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1691102	Identifier	s		1689059	0					
ANR	1691103	Identifier	bit_alloc_params		1689059	1					
ANR	1691104	Identifier	cpl_fast_leak		1689059	1					
ANR	1691105	EqualityExpression	sl != s -> bit_alloc_params . cpl_slow_leak		1689059	1		!=			
ANR	1691106	Identifier	sl		1689059	0					
ANR	1691107	MemberAccess	s -> bit_alloc_params . cpl_slow_leak		1689059	1					
ANR	1691108	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1691109	Identifier	s		1689059	0					
ANR	1691110	Identifier	bit_alloc_params		1689059	1					
ANR	1691111	Identifier	cpl_slow_leak		1689059	1					
ANR	1691112	CompoundStatement		595:65:12460:12460	1689059	1					
ANR	1691113	ExpressionStatement	"bit_alloc_stages [ CPL_CH ] = FFMAX ( bit_alloc_stages [ CPL_CH ] , 2 )"	599:16:12541:12602	1689059	0	True				
ANR	1691114	AssignmentExpression	"bit_alloc_stages [ CPL_CH ] = FFMAX ( bit_alloc_stages [ CPL_CH ] , 2 )"		1689059	0		=			
ANR	1691115	ArrayIndexing	bit_alloc_stages [ CPL_CH ]		1689059	0					
ANR	1691116	Identifier	bit_alloc_stages		1689059	0					
ANR	1691117	Identifier	CPL_CH		1689059	1					
ANR	1691118	CallExpression	"FFMAX ( bit_alloc_stages [ CPL_CH ] , 2 )"		1689059	1					
ANR	1691119	Callee	FFMAX		1689059	0					
ANR	1691120	Identifier	FFMAX		1689059	0					
ANR	1691121	ArgumentList	bit_alloc_stages [ CPL_CH ]		1689059	1					
ANR	1691122	Argument	bit_alloc_stages [ CPL_CH ]		1689059	0					
ANR	1691123	ArrayIndexing	bit_alloc_stages [ CPL_CH ]		1689059	0					
ANR	1691124	Identifier	bit_alloc_stages		1689059	0					
ANR	1691125	Identifier	CPL_CH		1689059	1					
ANR	1691126	Argument	2		1689059	1					
ANR	1691127	PrimaryExpression	2		1689059	0					
ANR	1691128	ExpressionStatement	s -> bit_alloc_params . cpl_fast_leak = fl	603:12:12632:12670	1689059	3	True				
ANR	1691129	AssignmentExpression	s -> bit_alloc_params . cpl_fast_leak = fl		1689059	0		=			
ANR	1691130	MemberAccess	s -> bit_alloc_params . cpl_fast_leak		1689059	0					
ANR	1691131	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1691132	Identifier	s		1689059	0					
ANR	1691133	Identifier	bit_alloc_params		1689059	1					
ANR	1691134	Identifier	cpl_fast_leak		1689059	1					
ANR	1691135	Identifier	fl		1689059	1					
ANR	1691136	ExpressionStatement	s -> bit_alloc_params . cpl_slow_leak = sl	605:12:12685:12723	1689059	4	True				
ANR	1691137	AssignmentExpression	s -> bit_alloc_params . cpl_slow_leak = sl		1689059	0		=			
ANR	1691138	MemberAccess	s -> bit_alloc_params . cpl_slow_leak		1689059	0					
ANR	1691139	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1691140	Identifier	s		1689059	0					
ANR	1691141	Identifier	bit_alloc_params		1689059	1					
ANR	1691142	Identifier	cpl_slow_leak		1689059	1					
ANR	1691143	Identifier	sl		1689059	1					
ANR	1691144	ElseStatement	else		1689059	0					
ANR	1691145	IfStatement	if ( ! s -> eac3 && ! blk )		1689059	0					
ANR	1691146	Condition	! s -> eac3 && ! blk	607:19:12745:12760	1689059	0	True				
ANR	1691147	AndExpression	! s -> eac3 && ! blk		1689059	0		&&			
ANR	1691148	UnaryOperationExpression	! s -> eac3		1689059	0					
ANR	1691149	UnaryOperator	!		1689059	0					
ANR	1691150	PtrMemberAccess	s -> eac3		1689059	1					
ANR	1691151	Identifier	s		1689059	0					
ANR	1691152	Identifier	eac3		1689059	1					
ANR	1691153	UnaryOperationExpression	! blk		1689059	1					
ANR	1691154	UnaryOperator	!		1689059	0					
ANR	1691155	Identifier	blk		1689059	1					
ANR	1691156	CompoundStatement		605:37:12701:12701	1689059	1					
ANR	1691157	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling leak info must be present in block 0\\n"" )"	609:12:12778:12863	1689059	0	True				
ANR	1691158	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""new coupling leak info must be present in block 0\\n"" )"		1689059	0					
ANR	1691159	Callee	av_log		1689059	0					
ANR	1691160	Identifier	av_log		1689059	0					
ANR	1691161	ArgumentList	s -> avctx		1689059	1					
ANR	1691162	Argument	s -> avctx		1689059	0					
ANR	1691163	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1691164	Identifier	s		1689059	0					
ANR	1691165	Identifier	avctx		1689059	1					
ANR	1691166	Argument	AV_LOG_ERROR		1689059	1					
ANR	1691167	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1691168	Argument	"""new coupling leak info must be present in block 0\\n"""		1689059	2					
ANR	1691169	PrimaryExpression	"""new coupling leak info must be present in block 0\\n"""		1689059	0					
ANR	1691170	ReturnStatement	return - 1 ;	611:12:12878:12887	1689059	1	True				
ANR	1691171	UnaryOperationExpression	- 1		1689059	0					
ANR	1691172	UnaryOperator	-		1689059	0					
ANR	1691173	PrimaryExpression	1		1689059	1					
ANR	1691174	ExpressionStatement	s -> first_cpl_leak = 0	615:8:12909:12930	1689059	1	True				
ANR	1691175	AssignmentExpression	s -> first_cpl_leak = 0		1689059	0		=			
ANR	1691176	PtrMemberAccess	s -> first_cpl_leak		1689059	0					
ANR	1691177	Identifier	s		1689059	0					
ANR	1691178	Identifier	first_cpl_leak		1689059	1					
ANR	1691179	PrimaryExpression	0		1689059	1					
ANR	1691180	IfStatement	if ( s -> dba_syntax && get_bits1 ( gbc ) )		1689059	28					
ANR	1691181	Condition	s -> dba_syntax && get_bits1 ( gbc )	623:8:12994:13024	1689059	0	True				
ANR	1691182	AndExpression	s -> dba_syntax && get_bits1 ( gbc )		1689059	0		&&			
ANR	1691183	PtrMemberAccess	s -> dba_syntax		1689059	0					
ANR	1691184	Identifier	s		1689059	0					
ANR	1691185	Identifier	dba_syntax		1689059	1					
ANR	1691186	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1691187	Callee	get_bits1		1689059	0					
ANR	1691188	Identifier	get_bits1		1689059	0					
ANR	1691189	ArgumentList	gbc		1689059	1					
ANR	1691190	Argument	gbc		1689059	0					
ANR	1691191	Identifier	gbc		1689059	0					
ANR	1691192	CompoundStatement		621:41:12965:12965	1689059	1					
ANR	1691193	ForStatement	for ( ch = ! cpl_in_use ; ch <= fbw_channels ; ch ++ )		1689059	0					
ANR	1691194	ForInit	ch = ! cpl_in_use ;	627:13:13097:13113	1689059	0	True				
ANR	1691195	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1691196	Identifier	ch		1689059	0					
ANR	1691197	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1691198	UnaryOperator	!		1689059	0					
ANR	1691199	Identifier	cpl_in_use		1689059	1					
ANR	1691200	Condition	ch <= fbw_channels	627:31:13115:13132	1689059	1	True				
ANR	1691201	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1691202	Identifier	ch		1689059	0					
ANR	1691203	Identifier	fbw_channels		1689059	1					
ANR	1691204	PostIncDecOperationExpression	ch ++	627:51:13135:13138	1689059	2	True				
ANR	1691205	Identifier	ch		1689059	0					
ANR	1691206	IncDec	++		1689059	1					
ANR	1691207	CompoundStatement		625:57:13079:13079	1689059	3					
ANR	1691208	ExpressionStatement	"s -> dba_mode [ ch ] = get_bits ( gbc , 2 )"	629:12:13156:13190	1689059	0	True				
ANR	1691209	AssignmentExpression	"s -> dba_mode [ ch ] = get_bits ( gbc , 2 )"		1689059	0		=			
ANR	1691210	ArrayIndexing	s -> dba_mode [ ch ]		1689059	0					
ANR	1691211	PtrMemberAccess	s -> dba_mode		1689059	0					
ANR	1691212	Identifier	s		1689059	0					
ANR	1691213	Identifier	dba_mode		1689059	1					
ANR	1691214	Identifier	ch		1689059	1					
ANR	1691215	CallExpression	"get_bits ( gbc , 2 )"		1689059	1					
ANR	1691216	Callee	get_bits		1689059	0					
ANR	1691217	Identifier	get_bits		1689059	0					
ANR	1691218	ArgumentList	gbc		1689059	1					
ANR	1691219	Argument	gbc		1689059	0					
ANR	1691220	Identifier	gbc		1689059	0					
ANR	1691221	Argument	2		1689059	1					
ANR	1691222	PrimaryExpression	2		1689059	0					
ANR	1691223	IfStatement	if ( s -> dba_mode [ ch ] == DBA_RESERVED )		1689059	1					
ANR	1691224	Condition	s -> dba_mode [ ch ] == DBA_RESERVED	631:16:13209:13239	1689059	0	True				
ANR	1691225	EqualityExpression	s -> dba_mode [ ch ] == DBA_RESERVED		1689059	0		==			
ANR	1691226	ArrayIndexing	s -> dba_mode [ ch ]		1689059	0					
ANR	1691227	PtrMemberAccess	s -> dba_mode		1689059	0					
ANR	1691228	Identifier	s		1689059	0					
ANR	1691229	Identifier	dba_mode		1689059	1					
ANR	1691230	Identifier	ch		1689059	1					
ANR	1691231	Identifier	DBA_RESERVED		1689059	1					
ANR	1691232	CompoundStatement		629:49:13180:13180	1689059	1					
ANR	1691233	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""delta bit allocation strategy reserved\\n"" )"	633:16:13261:13335	1689059	0	True				
ANR	1691234	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""delta bit allocation strategy reserved\\n"" )"		1689059	0					
ANR	1691235	Callee	av_log		1689059	0					
ANR	1691236	Identifier	av_log		1689059	0					
ANR	1691237	ArgumentList	s -> avctx		1689059	1					
ANR	1691238	Argument	s -> avctx		1689059	0					
ANR	1691239	PtrMemberAccess	s -> avctx		1689059	0					
ANR	1691240	Identifier	s		1689059	0					
ANR	1691241	Identifier	avctx		1689059	1					
ANR	1691242	Argument	AV_LOG_ERROR		1689059	1					
ANR	1691243	Identifier	AV_LOG_ERROR		1689059	0					
ANR	1691244	Argument	"""delta bit allocation strategy reserved\\n"""		1689059	2					
ANR	1691245	PrimaryExpression	"""delta bit allocation strategy reserved\\n"""		1689059	0					
ANR	1691246	ReturnStatement	return - 1 ;	635:16:13354:13363	1689059	1	True				
ANR	1691247	UnaryOperationExpression	- 1		1689059	0					
ANR	1691248	UnaryOperator	-		1689059	0					
ANR	1691249	PrimaryExpression	1		1689059	1					
ANR	1691250	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"	639:12:13393:13446	1689059	2	True				
ANR	1691251	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	0		=			
ANR	1691252	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691253	Identifier	bit_alloc_stages		1689059	0					
ANR	1691254	Identifier	ch		1689059	1					
ANR	1691255	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	1					
ANR	1691256	Callee	FFMAX		1689059	0					
ANR	1691257	Identifier	FFMAX		1689059	0					
ANR	1691258	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1691259	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691260	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691261	Identifier	bit_alloc_stages		1689059	0					
ANR	1691262	Identifier	ch		1689059	1					
ANR	1691263	Argument	2		1689059	1					
ANR	1691264	PrimaryExpression	2		1689059	0					
ANR	1691265	ForStatement	for ( ch = ! cpl_in_use ; ch <= fbw_channels ; ch ++ )		1689059	1					
ANR	1691266	ForInit	ch = ! cpl_in_use ;	645:13:13533:13549	1689059	0	True				
ANR	1691267	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1691268	Identifier	ch		1689059	0					
ANR	1691269	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1691270	UnaryOperator	!		1689059	0					
ANR	1691271	Identifier	cpl_in_use		1689059	1					
ANR	1691272	Condition	ch <= fbw_channels	645:31:13551:13568	1689059	1	True				
ANR	1691273	RelationalExpression	ch <= fbw_channels		1689059	0		<=			
ANR	1691274	Identifier	ch		1689059	0					
ANR	1691275	Identifier	fbw_channels		1689059	1					
ANR	1691276	PostIncDecOperationExpression	ch ++	645:51:13571:13574	1689059	2	True				
ANR	1691277	Identifier	ch		1689059	0					
ANR	1691278	IncDec	++		1689059	1					
ANR	1691279	CompoundStatement		643:57:13515:13515	1689059	3					
ANR	1691280	IfStatement	if ( s -> dba_mode [ ch ] == DBA_NEW )		1689059	0					
ANR	1691281	Condition	s -> dba_mode [ ch ] == DBA_NEW	647:16:13596:13621	1689059	0	True				
ANR	1691282	EqualityExpression	s -> dba_mode [ ch ] == DBA_NEW		1689059	0		==			
ANR	1691283	ArrayIndexing	s -> dba_mode [ ch ]		1689059	0					
ANR	1691284	PtrMemberAccess	s -> dba_mode		1689059	0					
ANR	1691285	Identifier	s		1689059	0					
ANR	1691286	Identifier	dba_mode		1689059	1					
ANR	1691287	Identifier	ch		1689059	1					
ANR	1691288	Identifier	DBA_NEW		1689059	1					
ANR	1691289	CompoundStatement		645:44:13562:13562	1689059	1					
ANR	1691290	ExpressionStatement	"s -> dba_nsegs [ ch ] = get_bits ( gbc , 3 )"	649:16:13643:13678	1689059	0	True				
ANR	1691291	AssignmentExpression	"s -> dba_nsegs [ ch ] = get_bits ( gbc , 3 )"		1689059	0		=			
ANR	1691292	ArrayIndexing	s -> dba_nsegs [ ch ]		1689059	0					
ANR	1691293	PtrMemberAccess	s -> dba_nsegs		1689059	0					
ANR	1691294	Identifier	s		1689059	0					
ANR	1691295	Identifier	dba_nsegs		1689059	1					
ANR	1691296	Identifier	ch		1689059	1					
ANR	1691297	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1691298	Callee	get_bits		1689059	0					
ANR	1691299	Identifier	get_bits		1689059	0					
ANR	1691300	ArgumentList	gbc		1689059	1					
ANR	1691301	Argument	gbc		1689059	0					
ANR	1691302	Identifier	gbc		1689059	0					
ANR	1691303	Argument	3		1689059	1					
ANR	1691304	PrimaryExpression	3		1689059	0					
ANR	1691305	ForStatement	for ( seg = 0 ; seg <= s -> dba_nsegs [ ch ] ; seg ++ )		1689059	1					
ANR	1691306	ForInit	seg = 0 ;	651:21:13702:13709	1689059	0	True				
ANR	1691307	AssignmentExpression	seg = 0		1689059	0		=			
ANR	1691308	Identifier	seg		1689059	0					
ANR	1691309	PrimaryExpression	0		1689059	1					
ANR	1691310	Condition	seg <= s -> dba_nsegs [ ch ]	651:30:13711:13733	1689059	1	True				
ANR	1691311	RelationalExpression	seg <= s -> dba_nsegs [ ch ]		1689059	0		<=			
ANR	1691312	Identifier	seg		1689059	0					
ANR	1691313	ArrayIndexing	s -> dba_nsegs [ ch ]		1689059	1					
ANR	1691314	PtrMemberAccess	s -> dba_nsegs		1689059	0					
ANR	1691315	Identifier	s		1689059	0					
ANR	1691316	Identifier	dba_nsegs		1689059	1					
ANR	1691317	Identifier	ch		1689059	1					
ANR	1691318	PostIncDecOperationExpression	seg ++	651:55:13736:13740	1689059	2	True				
ANR	1691319	Identifier	seg		1689059	0					
ANR	1691320	IncDec	++		1689059	1					
ANR	1691321	CompoundStatement		649:62:13681:13681	1689059	3					
ANR	1691322	ExpressionStatement	"s -> dba_offsets [ ch ] [ seg ] = get_bits ( gbc , 5 )"	653:20:13766:13808	1689059	0	True				
ANR	1691323	AssignmentExpression	"s -> dba_offsets [ ch ] [ seg ] = get_bits ( gbc , 5 )"		1689059	0		=			
ANR	1691324	ArrayIndexing	s -> dba_offsets [ ch ] [ seg ]		1689059	0					
ANR	1691325	ArrayIndexing	s -> dba_offsets [ ch ]		1689059	0					
ANR	1691326	PtrMemberAccess	s -> dba_offsets		1689059	0					
ANR	1691327	Identifier	s		1689059	0					
ANR	1691328	Identifier	dba_offsets		1689059	1					
ANR	1691329	Identifier	ch		1689059	1					
ANR	1691330	Identifier	seg		1689059	1					
ANR	1691331	CallExpression	"get_bits ( gbc , 5 )"		1689059	1					
ANR	1691332	Callee	get_bits		1689059	0					
ANR	1691333	Identifier	get_bits		1689059	0					
ANR	1691334	ArgumentList	gbc		1689059	1					
ANR	1691335	Argument	gbc		1689059	0					
ANR	1691336	Identifier	gbc		1689059	0					
ANR	1691337	Argument	5		1689059	1					
ANR	1691338	PrimaryExpression	5		1689059	0					
ANR	1691339	ExpressionStatement	"s -> dba_lengths [ ch ] [ seg ] = get_bits ( gbc , 4 )"	655:20:13831:13873	1689059	1	True				
ANR	1691340	AssignmentExpression	"s -> dba_lengths [ ch ] [ seg ] = get_bits ( gbc , 4 )"		1689059	0		=			
ANR	1691341	ArrayIndexing	s -> dba_lengths [ ch ] [ seg ]		1689059	0					
ANR	1691342	ArrayIndexing	s -> dba_lengths [ ch ]		1689059	0					
ANR	1691343	PtrMemberAccess	s -> dba_lengths		1689059	0					
ANR	1691344	Identifier	s		1689059	0					
ANR	1691345	Identifier	dba_lengths		1689059	1					
ANR	1691346	Identifier	ch		1689059	1					
ANR	1691347	Identifier	seg		1689059	1					
ANR	1691348	CallExpression	"get_bits ( gbc , 4 )"		1689059	1					
ANR	1691349	Callee	get_bits		1689059	0					
ANR	1691350	Identifier	get_bits		1689059	0					
ANR	1691351	ArgumentList	gbc		1689059	1					
ANR	1691352	Argument	gbc		1689059	0					
ANR	1691353	Identifier	gbc		1689059	0					
ANR	1691354	Argument	4		1689059	1					
ANR	1691355	PrimaryExpression	4		1689059	0					
ANR	1691356	ExpressionStatement	"s -> dba_values [ ch ] [ seg ] = get_bits ( gbc , 3 )"	657:20:13896:13937	1689059	2	True				
ANR	1691357	AssignmentExpression	"s -> dba_values [ ch ] [ seg ] = get_bits ( gbc , 3 )"		1689059	0		=			
ANR	1691358	ArrayIndexing	s -> dba_values [ ch ] [ seg ]		1689059	0					
ANR	1691359	ArrayIndexing	s -> dba_values [ ch ]		1689059	0					
ANR	1691360	PtrMemberAccess	s -> dba_values		1689059	0					
ANR	1691361	Identifier	s		1689059	0					
ANR	1691362	Identifier	dba_values		1689059	1					
ANR	1691363	Identifier	ch		1689059	1					
ANR	1691364	Identifier	seg		1689059	1					
ANR	1691365	CallExpression	"get_bits ( gbc , 3 )"		1689059	1					
ANR	1691366	Callee	get_bits		1689059	0					
ANR	1691367	Identifier	get_bits		1689059	0					
ANR	1691368	ArgumentList	gbc		1689059	1					
ANR	1691369	Argument	gbc		1689059	0					
ANR	1691370	Identifier	gbc		1689059	0					
ANR	1691371	Argument	3		1689059	1					
ANR	1691372	PrimaryExpression	3		1689059	0					
ANR	1691373	ExpressionStatement	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"	663:16:14049:14102	1689059	2	True				
ANR	1691374	AssignmentExpression	"bit_alloc_stages [ ch ] = FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	0		=			
ANR	1691375	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691376	Identifier	bit_alloc_stages		1689059	0					
ANR	1691377	Identifier	ch		1689059	1					
ANR	1691378	CallExpression	"FFMAX ( bit_alloc_stages [ ch ] , 2 )"		1689059	1					
ANR	1691379	Callee	FFMAX		1689059	0					
ANR	1691380	Identifier	FFMAX		1689059	0					
ANR	1691381	ArgumentList	bit_alloc_stages [ ch ]		1689059	1					
ANR	1691382	Argument	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691383	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691384	Identifier	bit_alloc_stages		1689059	0					
ANR	1691385	Identifier	ch		1689059	1					
ANR	1691386	Argument	2		1689059	1					
ANR	1691387	PrimaryExpression	2		1689059	0					
ANR	1691388	ElseStatement	else		1689059	0					
ANR	1691389	IfStatement	if ( blk == 0 )		1689059	0					
ANR	1691390	Condition	blk == 0	669:14:14145:14152	1689059	0	True				
ANR	1691391	EqualityExpression	blk == 0		1689059	0		==			
ANR	1691392	Identifier	blk		1689059	0					
ANR	1691393	PrimaryExpression	0		1689059	1					
ANR	1691394	CompoundStatement		667:24:14093:14093	1689059	1					
ANR	1691395	ForStatement	for ( ch = 0 ; ch <= s -> channels ; ch ++ )		1689059	0					
ANR	1691396	ForInit	ch = 0 ;	671:12:14170:14174	1689059	0	True				
ANR	1691397	AssignmentExpression	ch = 0		1689059	0		=			
ANR	1691398	Identifier	ch		1689059	0					
ANR	1691399	PrimaryExpression	0		1689059	1					
ANR	1691400	Condition	ch <= s -> channels	671:18:14176:14190	1689059	1	True				
ANR	1691401	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1691402	Identifier	ch		1689059	0					
ANR	1691403	PtrMemberAccess	s -> channels		1689059	1					
ANR	1691404	Identifier	s		1689059	0					
ANR	1691405	Identifier	channels		1689059	1					
ANR	1691406	PostIncDecOperationExpression	ch ++	671:35:14193:14196	1689059	2	True				
ANR	1691407	Identifier	ch		1689059	0					
ANR	1691408	IncDec	++		1689059	1					
ANR	1691409	CompoundStatement		669:41:14137:14137	1689059	3					
ANR	1691410	ExpressionStatement	s -> dba_mode [ ch ] = DBA_NONE	673:12:14214:14240	1689059	0	True				
ANR	1691411	AssignmentExpression	s -> dba_mode [ ch ] = DBA_NONE		1689059	0		=			
ANR	1691412	ArrayIndexing	s -> dba_mode [ ch ]		1689059	0					
ANR	1691413	PtrMemberAccess	s -> dba_mode		1689059	0					
ANR	1691414	Identifier	s		1689059	0					
ANR	1691415	Identifier	dba_mode		1689059	1					
ANR	1691416	Identifier	ch		1689059	1					
ANR	1691417	Identifier	DBA_NONE		1689059	1					
ANR	1691418	ForStatement	for ( ch = ! cpl_in_use ; ch <= s -> channels ; ch ++ )		1689059	29					
ANR	1691419	ForInit	ch = ! cpl_in_use ;	683:8:14297:14311	1689059	0	True				
ANR	1691420	AssignmentExpression	ch = ! cpl_in_use		1689059	0		=			
ANR	1691421	Identifier	ch		1689059	0					
ANR	1691422	UnaryOperationExpression	! cpl_in_use		1689059	1					
ANR	1691423	UnaryOperator	!		1689059	0					
ANR	1691424	Identifier	cpl_in_use		1689059	1					
ANR	1691425	Condition	ch <= s -> channels	683:24:14313:14327	1689059	1	True				
ANR	1691426	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1691427	Identifier	ch		1689059	0					
ANR	1691428	PtrMemberAccess	s -> channels		1689059	1					
ANR	1691429	Identifier	s		1689059	0					
ANR	1691430	Identifier	channels		1689059	1					
ANR	1691431	PostIncDecOperationExpression	ch ++	683:41:14330:14333	1689059	2	True				
ANR	1691432	Identifier	ch		1689059	0					
ANR	1691433	IncDec	++		1689059	1					
ANR	1691434	CompoundStatement		681:47:14274:14274	1689059	3					
ANR	1691435	IfStatement	if ( bit_alloc_stages [ ch ] > 2 )		1689059	0					
ANR	1691436	Condition	bit_alloc_stages [ ch ] > 2	685:11:14350:14373	1689059	0	True				
ANR	1691437	RelationalExpression	bit_alloc_stages [ ch ] > 2		1689059	0		>			
ANR	1691438	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691439	Identifier	bit_alloc_stages		1689059	0					
ANR	1691440	Identifier	ch		1689059	1					
ANR	1691441	PrimaryExpression	2		1689059	1					
ANR	1691442	CompoundStatement		683:37:14314:14314	1689059	1					
ANR	1691443	ExpressionStatement	"ff_ac3_bit_alloc_calc_psd ( s -> dexps [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> psd [ ch ] , s -> band_psd [ ch ] )"	689:12:14456:14638	1689059	0	True				
ANR	1691444	CallExpression	"ff_ac3_bit_alloc_calc_psd ( s -> dexps [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> psd [ ch ] , s -> band_psd [ ch ] )"		1689059	0					
ANR	1691445	Callee	ff_ac3_bit_alloc_calc_psd		1689059	0					
ANR	1691446	Identifier	ff_ac3_bit_alloc_calc_psd		1689059	0					
ANR	1691447	ArgumentList	s -> dexps [ ch ]		1689059	1					
ANR	1691448	Argument	s -> dexps [ ch ]		1689059	0					
ANR	1691449	ArrayIndexing	s -> dexps [ ch ]		1689059	0					
ANR	1691450	PtrMemberAccess	s -> dexps		1689059	0					
ANR	1691451	Identifier	s		1689059	0					
ANR	1691452	Identifier	dexps		1689059	1					
ANR	1691453	Identifier	ch		1689059	1					
ANR	1691454	Argument	s -> start_freq [ ch ]		1689059	1					
ANR	1691455	ArrayIndexing	s -> start_freq [ ch ]		1689059	0					
ANR	1691456	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1691457	Identifier	s		1689059	0					
ANR	1691458	Identifier	start_freq		1689059	1					
ANR	1691459	Identifier	ch		1689059	1					
ANR	1691460	Argument	s -> end_freq [ ch ]		1689059	2					
ANR	1691461	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1691462	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1691463	Identifier	s		1689059	0					
ANR	1691464	Identifier	end_freq		1689059	1					
ANR	1691465	Identifier	ch		1689059	1					
ANR	1691466	Argument	s -> psd [ ch ]		1689059	3					
ANR	1691467	ArrayIndexing	s -> psd [ ch ]		1689059	0					
ANR	1691468	PtrMemberAccess	s -> psd		1689059	0					
ANR	1691469	Identifier	s		1689059	0					
ANR	1691470	Identifier	psd		1689059	1					
ANR	1691471	Identifier	ch		1689059	1					
ANR	1691472	Argument	s -> band_psd [ ch ]		1689059	4					
ANR	1691473	ArrayIndexing	s -> band_psd [ ch ]		1689059	0					
ANR	1691474	PtrMemberAccess	s -> band_psd		1689059	0					
ANR	1691475	Identifier	s		1689059	0					
ANR	1691476	Identifier	band_psd		1689059	1					
ANR	1691477	Identifier	ch		1689059	1					
ANR	1691478	IfStatement	if ( bit_alloc_stages [ ch ] > 1 )		1689059	1					
ANR	1691479	Condition	bit_alloc_stages [ ch ] > 1	697:11:14663:14686	1689059	0	True				
ANR	1691480	RelationalExpression	bit_alloc_stages [ ch ] > 1		1689059	0		>			
ANR	1691481	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691482	Identifier	bit_alloc_stages		1689059	0					
ANR	1691483	Identifier	ch		1689059	1					
ANR	1691484	PrimaryExpression	1		1689059	1					
ANR	1691485	CompoundStatement		695:37:14627:14627	1689059	1					
ANR	1691486	ExpressionStatement	"ff_ac3_bit_alloc_calc_mask ( & s -> bit_alloc_params , s -> band_psd [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> fast_gain [ ch ] , ( ch == s -> lfe_ch ) , s -> dba_mode [ ch ] , s -> dba_nsegs [ ch ] , s -> dba_offsets [ ch ] , s -> dba_lengths [ ch ] , s -> dba_values [ ch ] , s -> mask [ ch ] )"	703:12:14822:15267	1689059	0	True				
ANR	1691487	CallExpression	"ff_ac3_bit_alloc_calc_mask ( & s -> bit_alloc_params , s -> band_psd [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> fast_gain [ ch ] , ( ch == s -> lfe_ch ) , s -> dba_mode [ ch ] , s -> dba_nsegs [ ch ] , s -> dba_offsets [ ch ] , s -> dba_lengths [ ch ] , s -> dba_values [ ch ] , s -> mask [ ch ] )"		1689059	0					
ANR	1691488	Callee	ff_ac3_bit_alloc_calc_mask		1689059	0					
ANR	1691489	Identifier	ff_ac3_bit_alloc_calc_mask		1689059	0					
ANR	1691490	ArgumentList	& s -> bit_alloc_params		1689059	1					
ANR	1691491	Argument	& s -> bit_alloc_params		1689059	0					
ANR	1691492	UnaryOperationExpression	& s -> bit_alloc_params		1689059	0					
ANR	1691493	UnaryOperator	&		1689059	0					
ANR	1691494	PtrMemberAccess	s -> bit_alloc_params		1689059	1					
ANR	1691495	Identifier	s		1689059	0					
ANR	1691496	Identifier	bit_alloc_params		1689059	1					
ANR	1691497	Argument	s -> band_psd [ ch ]		1689059	1					
ANR	1691498	ArrayIndexing	s -> band_psd [ ch ]		1689059	0					
ANR	1691499	PtrMemberAccess	s -> band_psd		1689059	0					
ANR	1691500	Identifier	s		1689059	0					
ANR	1691501	Identifier	band_psd		1689059	1					
ANR	1691502	Identifier	ch		1689059	1					
ANR	1691503	Argument	s -> start_freq [ ch ]		1689059	2					
ANR	1691504	ArrayIndexing	s -> start_freq [ ch ]		1689059	0					
ANR	1691505	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1691506	Identifier	s		1689059	0					
ANR	1691507	Identifier	start_freq		1689059	1					
ANR	1691508	Identifier	ch		1689059	1					
ANR	1691509	Argument	s -> end_freq [ ch ]		1689059	3					
ANR	1691510	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1691511	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1691512	Identifier	s		1689059	0					
ANR	1691513	Identifier	end_freq		1689059	1					
ANR	1691514	Identifier	ch		1689059	1					
ANR	1691515	Argument	s -> fast_gain [ ch ]		1689059	4					
ANR	1691516	ArrayIndexing	s -> fast_gain [ ch ]		1689059	0					
ANR	1691517	PtrMemberAccess	s -> fast_gain		1689059	0					
ANR	1691518	Identifier	s		1689059	0					
ANR	1691519	Identifier	fast_gain		1689059	1					
ANR	1691520	Identifier	ch		1689059	1					
ANR	1691521	Argument	ch == s -> lfe_ch		1689059	5					
ANR	1691522	EqualityExpression	ch == s -> lfe_ch		1689059	0		==			
ANR	1691523	Identifier	ch		1689059	0					
ANR	1691524	PtrMemberAccess	s -> lfe_ch		1689059	1					
ANR	1691525	Identifier	s		1689059	0					
ANR	1691526	Identifier	lfe_ch		1689059	1					
ANR	1691527	Argument	s -> dba_mode [ ch ]		1689059	6					
ANR	1691528	ArrayIndexing	s -> dba_mode [ ch ]		1689059	0					
ANR	1691529	PtrMemberAccess	s -> dba_mode		1689059	0					
ANR	1691530	Identifier	s		1689059	0					
ANR	1691531	Identifier	dba_mode		1689059	1					
ANR	1691532	Identifier	ch		1689059	1					
ANR	1691533	Argument	s -> dba_nsegs [ ch ]		1689059	7					
ANR	1691534	ArrayIndexing	s -> dba_nsegs [ ch ]		1689059	0					
ANR	1691535	PtrMemberAccess	s -> dba_nsegs		1689059	0					
ANR	1691536	Identifier	s		1689059	0					
ANR	1691537	Identifier	dba_nsegs		1689059	1					
ANR	1691538	Identifier	ch		1689059	1					
ANR	1691539	Argument	s -> dba_offsets [ ch ]		1689059	8					
ANR	1691540	ArrayIndexing	s -> dba_offsets [ ch ]		1689059	0					
ANR	1691541	PtrMemberAccess	s -> dba_offsets		1689059	0					
ANR	1691542	Identifier	s		1689059	0					
ANR	1691543	Identifier	dba_offsets		1689059	1					
ANR	1691544	Identifier	ch		1689059	1					
ANR	1691545	Argument	s -> dba_lengths [ ch ]		1689059	9					
ANR	1691546	ArrayIndexing	s -> dba_lengths [ ch ]		1689059	0					
ANR	1691547	PtrMemberAccess	s -> dba_lengths		1689059	0					
ANR	1691548	Identifier	s		1689059	0					
ANR	1691549	Identifier	dba_lengths		1689059	1					
ANR	1691550	Identifier	ch		1689059	1					
ANR	1691551	Argument	s -> dba_values [ ch ]		1689059	10					
ANR	1691552	ArrayIndexing	s -> dba_values [ ch ]		1689059	0					
ANR	1691553	PtrMemberAccess	s -> dba_values		1689059	0					
ANR	1691554	Identifier	s		1689059	0					
ANR	1691555	Identifier	dba_values		1689059	1					
ANR	1691556	Identifier	ch		1689059	1					
ANR	1691557	Argument	s -> mask [ ch ]		1689059	11					
ANR	1691558	ArrayIndexing	s -> mask [ ch ]		1689059	0					
ANR	1691559	PtrMemberAccess	s -> mask		1689059	0					
ANR	1691560	Identifier	s		1689059	0					
ANR	1691561	Identifier	mask		1689059	1					
ANR	1691562	Identifier	ch		1689059	1					
ANR	1691563	IfStatement	if ( bit_alloc_stages [ ch ] > 0 )		1689059	2					
ANR	1691564	Condition	bit_alloc_stages [ ch ] > 0	717:11:15292:15315	1689059	0	True				
ANR	1691565	RelationalExpression	bit_alloc_stages [ ch ] > 0		1689059	0		>			
ANR	1691566	ArrayIndexing	bit_alloc_stages [ ch ]		1689059	0					
ANR	1691567	Identifier	bit_alloc_stages		1689059	0					
ANR	1691568	Identifier	ch		1689059	1					
ANR	1691569	PrimaryExpression	0		1689059	1					
ANR	1691570	CompoundStatement		719:12:15313:15436	1689059	1					
ANR	1691571	IdentifierDeclStatement	const uint8_t * bap_tab = s -> channel_uses_aht [ ch ] ? ff_eac3_hebap_tab : ff_ac3_bap_tab ;	721:12:15375:15498	1689059	0	True				
ANR	1691572	IdentifierDecl	* bap_tab = s -> channel_uses_aht [ ch ] ? ff_eac3_hebap_tab : ff_ac3_bap_tab		1689059	0					
ANR	1691573	IdentifierDeclType	const uint8_t *		1689059	0					
ANR	1691574	Identifier	bap_tab		1689059	1					
ANR	1691575	AssignmentExpression	* bap_tab = s -> channel_uses_aht [ ch ] ? ff_eac3_hebap_tab : ff_ac3_bap_tab		1689059	2		=			
ANR	1691576	Identifier	bap_tab		1689059	0					
ANR	1691577	ConditionalExpression	s -> channel_uses_aht [ ch ] ? ff_eac3_hebap_tab : ff_ac3_bap_tab		1689059	1					
ANR	1691578	Condition	s -> channel_uses_aht [ ch ]		1689059	0					
ANR	1691579	ArrayIndexing	s -> channel_uses_aht [ ch ]		1689059	0					
ANR	1691580	PtrMemberAccess	s -> channel_uses_aht		1689059	0					
ANR	1691581	Identifier	s		1689059	0					
ANR	1691582	Identifier	channel_uses_aht		1689059	1					
ANR	1691583	Identifier	ch		1689059	1					
ANR	1691584	Identifier	ff_eac3_hebap_tab		1689059	1					
ANR	1691585	Identifier	ff_ac3_bap_tab		1689059	2					
ANR	1691586	ExpressionStatement	"ff_ac3_bit_alloc_calc_bap ( s -> mask [ ch ] , s -> psd [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> snr_offset [ ch ] , s -> bit_alloc_params . floor , bap_tab , s -> bap [ ch ] )"	725:12:15513:15822	1689059	1	True				
ANR	1691587	CallExpression	"ff_ac3_bit_alloc_calc_bap ( s -> mask [ ch ] , s -> psd [ ch ] , s -> start_freq [ ch ] , s -> end_freq [ ch ] , s -> snr_offset [ ch ] , s -> bit_alloc_params . floor , bap_tab , s -> bap [ ch ] )"		1689059	0					
ANR	1691588	Callee	ff_ac3_bit_alloc_calc_bap		1689059	0					
ANR	1691589	Identifier	ff_ac3_bit_alloc_calc_bap		1689059	0					
ANR	1691590	ArgumentList	s -> mask [ ch ]		1689059	1					
ANR	1691591	Argument	s -> mask [ ch ]		1689059	0					
ANR	1691592	ArrayIndexing	s -> mask [ ch ]		1689059	0					
ANR	1691593	PtrMemberAccess	s -> mask		1689059	0					
ANR	1691594	Identifier	s		1689059	0					
ANR	1691595	Identifier	mask		1689059	1					
ANR	1691596	Identifier	ch		1689059	1					
ANR	1691597	Argument	s -> psd [ ch ]		1689059	1					
ANR	1691598	ArrayIndexing	s -> psd [ ch ]		1689059	0					
ANR	1691599	PtrMemberAccess	s -> psd		1689059	0					
ANR	1691600	Identifier	s		1689059	0					
ANR	1691601	Identifier	psd		1689059	1					
ANR	1691602	Identifier	ch		1689059	1					
ANR	1691603	Argument	s -> start_freq [ ch ]		1689059	2					
ANR	1691604	ArrayIndexing	s -> start_freq [ ch ]		1689059	0					
ANR	1691605	PtrMemberAccess	s -> start_freq		1689059	0					
ANR	1691606	Identifier	s		1689059	0					
ANR	1691607	Identifier	start_freq		1689059	1					
ANR	1691608	Identifier	ch		1689059	1					
ANR	1691609	Argument	s -> end_freq [ ch ]		1689059	3					
ANR	1691610	ArrayIndexing	s -> end_freq [ ch ]		1689059	0					
ANR	1691611	PtrMemberAccess	s -> end_freq		1689059	0					
ANR	1691612	Identifier	s		1689059	0					
ANR	1691613	Identifier	end_freq		1689059	1					
ANR	1691614	Identifier	ch		1689059	1					
ANR	1691615	Argument	s -> snr_offset [ ch ]		1689059	4					
ANR	1691616	ArrayIndexing	s -> snr_offset [ ch ]		1689059	0					
ANR	1691617	PtrMemberAccess	s -> snr_offset		1689059	0					
ANR	1691618	Identifier	s		1689059	0					
ANR	1691619	Identifier	snr_offset		1689059	1					
ANR	1691620	Identifier	ch		1689059	1					
ANR	1691621	Argument	s -> bit_alloc_params . floor		1689059	5					
ANR	1691622	MemberAccess	s -> bit_alloc_params . floor		1689059	0					
ANR	1691623	PtrMemberAccess	s -> bit_alloc_params		1689059	0					
ANR	1691624	Identifier	s		1689059	0					
ANR	1691625	Identifier	bit_alloc_params		1689059	1					
ANR	1691626	Identifier	floor		1689059	1					
ANR	1691627	Argument	bap_tab		1689059	6					
ANR	1691628	Identifier	bap_tab		1689059	0					
ANR	1691629	Argument	s -> bap [ ch ]		1689059	7					
ANR	1691630	ArrayIndexing	s -> bap [ ch ]		1689059	0					
ANR	1691631	PtrMemberAccess	s -> bap		1689059	0					
ANR	1691632	Identifier	s		1689059	0					
ANR	1691633	Identifier	bap		1689059	1					
ANR	1691634	Identifier	ch		1689059	1					
ANR	1691635	IfStatement	if ( s -> skip_syntax && get_bits1 ( gbc ) )		1689059	30					
ANR	1691636	Condition	s -> skip_syntax && get_bits1 ( gbc )	743:8:15882:15913	1689059	0	True				
ANR	1691637	AndExpression	s -> skip_syntax && get_bits1 ( gbc )		1689059	0		&&			
ANR	1691638	PtrMemberAccess	s -> skip_syntax		1689059	0					
ANR	1691639	Identifier	s		1689059	0					
ANR	1691640	Identifier	skip_syntax		1689059	1					
ANR	1691641	CallExpression	get_bits1 ( gbc )		1689059	1					
ANR	1691642	Callee	get_bits1		1689059	0					
ANR	1691643	Identifier	get_bits1		1689059	0					
ANR	1691644	ArgumentList	gbc		1689059	1					
ANR	1691645	Argument	gbc		1689059	0					
ANR	1691646	Identifier	gbc		1689059	0					
ANR	1691647	CompoundStatement		743:8:15865:15893	1689059	1					
ANR	1691648	IdentifierDeclStatement	"int skipl = get_bits ( gbc , 9 ) ;"	745:8:15927:15955	1689059	0	True				
ANR	1691649	IdentifierDecl	"skipl = get_bits ( gbc , 9 )"		1689059	0					
ANR	1691650	IdentifierDeclType	int		1689059	0					
ANR	1691651	Identifier	skipl		1689059	1					
ANR	1691652	AssignmentExpression	"skipl = get_bits ( gbc , 9 )"		1689059	2		=			
ANR	1691653	Identifier	skipl		1689059	0					
ANR	1691654	CallExpression	"get_bits ( gbc , 9 )"		1689059	1					
ANR	1691655	Callee	get_bits		1689059	0					
ANR	1691656	Identifier	get_bits		1689059	0					
ANR	1691657	ArgumentList	gbc		1689059	1					
ANR	1691658	Argument	gbc		1689059	0					
ANR	1691659	Identifier	gbc		1689059	0					
ANR	1691660	Argument	9		1689059	1					
ANR	1691661	PrimaryExpression	9		1689059	0					
ANR	1691662	WhileStatement	while ( skipl -- )		1689059	1					
ANR	1691663	Condition	skipl --	747:14:15972:15978	1689059	0	True				
ANR	1691664	PostIncDecOperationExpression	skipl --		1689059	0					
ANR	1691665	Identifier	skipl		1689059	0					
ANR	1691666	IncDec	--		1689059	1					
ANR	1691667	ExpressionStatement	"skip_bits ( gbc , 8 )"	749:12:15994:16011	1689059	1	True				
ANR	1691668	CallExpression	"skip_bits ( gbc , 8 )"		1689059	0					
ANR	1691669	Callee	skip_bits		1689059	0					
ANR	1691670	Identifier	skip_bits		1689059	0					
ANR	1691671	ArgumentList	gbc		1689059	1					
ANR	1691672	Argument	gbc		1689059	0					
ANR	1691673	Identifier	gbc		1689059	0					
ANR	1691674	Argument	8		1689059	1					
ANR	1691675	PrimaryExpression	8		1689059	0					
ANR	1691676	ExpressionStatement	"decode_transform_coeffs ( s , blk )"	759:4:16132:16163	1689059	31	True				
ANR	1691677	CallExpression	"decode_transform_coeffs ( s , blk )"		1689059	0					
ANR	1691678	Callee	decode_transform_coeffs		1689059	0					
ANR	1691679	Identifier	decode_transform_coeffs		1689059	0					
ANR	1691680	ArgumentList	s		1689059	1					
ANR	1691681	Argument	s		1689059	0					
ANR	1691682	Identifier	s		1689059	0					
ANR	1691683	Argument	blk		1689059	1					
ANR	1691684	Identifier	blk		1689059	0					
ANR	1691685	IfStatement	if ( s -> channel_mode == AC3_CHMODE_STEREO )		1689059	32					
ANR	1691686	Condition	s -> channel_mode == AC3_CHMODE_STEREO	773:7:16347:16382	1689059	0	True				
ANR	1691687	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		1689059	0		==			
ANR	1691688	PtrMemberAccess	s -> channel_mode		1689059	0					
ANR	1691689	Identifier	s		1689059	0					
ANR	1691690	Identifier	channel_mode		1689059	1					
ANR	1691691	Identifier	AC3_CHMODE_STEREO		1689059	1					
ANR	1691692	ExpressionStatement	do_rematrixing ( s )	775:8:16394:16411	1689059	1	True				
ANR	1691693	CallExpression	do_rematrixing ( s )		1689059	0					
ANR	1691694	Callee	do_rematrixing		1689059	0					
ANR	1691695	Identifier	do_rematrixing		1689059	0					
ANR	1691696	ArgumentList	s		1689059	1					
ANR	1691697	Argument	s		1689059	0					
ANR	1691698	Identifier	s		1689059	0					
ANR	1691699	ForStatement	for ( ch = 1 ; ch <= s -> channels ; ch ++ )		1689059	33					
ANR	1691700	ForInit	ch = 1 ;	781:8:16484:16488	1689059	0	True				
ANR	1691701	AssignmentExpression	ch = 1		1689059	0		=			
ANR	1691702	Identifier	ch		1689059	0					
ANR	1691703	PrimaryExpression	1		1689059	1					
ANR	1691704	Condition	ch <= s -> channels	781:14:16490:16504	1689059	1	True				
ANR	1691705	RelationalExpression	ch <= s -> channels		1689059	0		<=			
ANR	1691706	Identifier	ch		1689059	0					
ANR	1691707	PtrMemberAccess	s -> channels		1689059	1					
ANR	1691708	Identifier	s		1689059	0					
ANR	1691709	Identifier	channels		1689059	1					
ANR	1691710	PostIncDecOperationExpression	ch ++	781:31:16507:16510	1689059	2	True				
ANR	1691711	Identifier	ch		1689059	0					
ANR	1691712	IncDec	++		1689059	1					
ANR	1691713	CompoundStatement		781:8:16462:16499	1689059	3					
ANR	1691714	IdentifierDeclStatement	float gain = s -> mul_bias / 4194304.0f ;	783:8:16524:16561	1689059	0	True				
ANR	1691715	IdentifierDecl	gain = s -> mul_bias / 4194304.0f		1689059	0					
ANR	1691716	IdentifierDeclType	float		1689059	0					
ANR	1691717	Identifier	gain		1689059	1					
ANR	1691718	AssignmentExpression	gain = s -> mul_bias / 4194304.0f		1689059	2		=			
ANR	1691719	Identifier	gain		1689059	0					
ANR	1691720	MultiplicativeExpression	s -> mul_bias / 4194304.0f		1689059	1		/			
ANR	1691721	PtrMemberAccess	s -> mul_bias		1689059	0					
ANR	1691722	Identifier	s		1689059	0					
ANR	1691723	Identifier	mul_bias		1689059	1					
ANR	1691724	PrimaryExpression	4194304.0f		1689059	1					
ANR	1691725	IfStatement	if ( s -> channel_mode == AC3_CHMODE_DUALMONO )		1689059	1					
ANR	1691726	Condition	s -> channel_mode == AC3_CHMODE_DUALMONO	785:11:16575:16612	1689059	0	True				
ANR	1691727	EqualityExpression	s -> channel_mode == AC3_CHMODE_DUALMONO		1689059	0		==			
ANR	1691728	PtrMemberAccess	s -> channel_mode		1689059	0					
ANR	1691729	Identifier	s		1689059	0					
ANR	1691730	Identifier	channel_mode		1689059	1					
ANR	1691731	Identifier	AC3_CHMODE_DUALMONO		1689059	1					
ANR	1691732	CompoundStatement		783:51:16553:16553	1689059	1					
ANR	1691733	ExpressionStatement	gain *= s -> dynamic_range [ ch - 1 ]	787:12:16630:16660	1689059	0	True				
ANR	1691734	AssignmentExpression	gain *= s -> dynamic_range [ ch - 1 ]		1689059	0		*=			
ANR	1691735	Identifier	gain		1689059	0					
ANR	1691736	ArrayIndexing	s -> dynamic_range [ ch - 1 ]		1689059	1					
ANR	1691737	PtrMemberAccess	s -> dynamic_range		1689059	0					
ANR	1691738	Identifier	s		1689059	0					
ANR	1691739	Identifier	dynamic_range		1689059	1					
ANR	1691740	AdditiveExpression	ch - 1		1689059	1		-			
ANR	1691741	Identifier	ch		1689059	0					
ANR	1691742	PrimaryExpression	1		1689059	1					
ANR	1691743	ElseStatement	else		1689059	0					
ANR	1691744	CompoundStatement		787:15:16616:16616	1689059	0					
ANR	1691745	ExpressionStatement	gain *= s -> dynamic_range [ 0 ]	791:12:16693:16720	1689059	0	True				
ANR	1691746	AssignmentExpression	gain *= s -> dynamic_range [ 0 ]		1689059	0		*=			
ANR	1691747	Identifier	gain		1689059	0					
ANR	1691748	ArrayIndexing	s -> dynamic_range [ 0 ]		1689059	1					
ANR	1691749	PtrMemberAccess	s -> dynamic_range		1689059	0					
ANR	1691750	Identifier	s		1689059	0					
ANR	1691751	Identifier	dynamic_range		1689059	1					
ANR	1691752	PrimaryExpression	0		1689059	1					
ANR	1691753	ExpressionStatement	"s -> dsp . int32_to_float_fmul_scalar ( s -> transform_coeffs [ ch ] , s -> fixed_coeffs [ ch ] , gain , 256 )"	795:8:16742:16832	1689059	2	True				
ANR	1691754	CallExpression	"s -> dsp . int32_to_float_fmul_scalar ( s -> transform_coeffs [ ch ] , s -> fixed_coeffs [ ch ] , gain , 256 )"		1689059	0					
ANR	1691755	Callee	s -> dsp . int32_to_float_fmul_scalar		1689059	0					
ANR	1691756	MemberAccess	s -> dsp . int32_to_float_fmul_scalar		1689059	0					
ANR	1691757	PtrMemberAccess	s -> dsp		1689059	0					
ANR	1691758	Identifier	s		1689059	0					
ANR	1691759	Identifier	dsp		1689059	1					
ANR	1691760	Identifier	int32_to_float_fmul_scalar		1689059	1					
ANR	1691761	ArgumentList	s -> transform_coeffs [ ch ]		1689059	1					
ANR	1691762	Argument	s -> transform_coeffs [ ch ]		1689059	0					
ANR	1691763	ArrayIndexing	s -> transform_coeffs [ ch ]		1689059	0					
ANR	1691764	PtrMemberAccess	s -> transform_coeffs		1689059	0					
ANR	1691765	Identifier	s		1689059	0					
ANR	1691766	Identifier	transform_coeffs		1689059	1					
ANR	1691767	Identifier	ch		1689059	1					
ANR	1691768	Argument	s -> fixed_coeffs [ ch ]		1689059	1					
ANR	1691769	ArrayIndexing	s -> fixed_coeffs [ ch ]		1689059	0					
ANR	1691770	PtrMemberAccess	s -> fixed_coeffs		1689059	0					
ANR	1691771	Identifier	s		1689059	0					
ANR	1691772	Identifier	fixed_coeffs		1689059	1					
ANR	1691773	Identifier	ch		1689059	1					
ANR	1691774	Argument	gain		1689059	2					
ANR	1691775	Identifier	gain		1689059	0					
ANR	1691776	Argument	256		1689059	3					
ANR	1691777	PrimaryExpression	256		1689059	0					
ANR	1691778	ExpressionStatement	downmix_output = s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )	807:4:17053:17224	1689059	34	True				
ANR	1691779	AssignmentExpression	downmix_output = s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		1689059	0		=			
ANR	1691780	Identifier	downmix_output		1689059	0					
ANR	1691781	AndExpression	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		1689059	1		&&			
ANR	1691782	EqualityExpression	s -> channels != s -> out_channels		1689059	0		!=			
ANR	1691783	PtrMemberAccess	s -> channels		1689059	0					
ANR	1691784	Identifier	s		1689059	0					
ANR	1691785	Identifier	channels		1689059	1					
ANR	1691786	PtrMemberAccess	s -> out_channels		1689059	1					
ANR	1691787	Identifier	s		1689059	0					
ANR	1691788	Identifier	out_channels		1689059	1					
ANR	1691789	UnaryOperationExpression	! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		1689059	1					
ANR	1691790	UnaryOperator	!		1689059	0					
ANR	1691791	AndExpression	( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels		1689059	1		&&			
ANR	1691792	BitAndExpression	s -> output_mode & AC3_OUTPUT_LFEON		1689059	0		&			
ANR	1691793	PtrMemberAccess	s -> output_mode		1689059	0					
ANR	1691794	Identifier	s		1689059	0					
ANR	1691795	Identifier	output_mode		1689059	1					
ANR	1691796	Identifier	AC3_OUTPUT_LFEON		1689059	1					
ANR	1691797	EqualityExpression	s -> fbw_channels == s -> out_channels		1689059	1		==			
ANR	1691798	PtrMemberAccess	s -> fbw_channels		1689059	0					
ANR	1691799	Identifier	s		1689059	0					
ANR	1691800	Identifier	fbw_channels		1689059	1					
ANR	1691801	PtrMemberAccess	s -> out_channels		1689059	1					
ANR	1691802	Identifier	s		1689059	0					
ANR	1691803	Identifier	out_channels		1689059	1					
ANR	1691804	IfStatement	if ( different_transforms )		1689059	35					
ANR	1691805	Condition	different_transforms	813:7:17234:17253	1689059	0	True				
ANR	1691806	Identifier	different_transforms		1689059	0					
ANR	1691807	CompoundStatement		811:29:17194:17194	1689059	1					
ANR	1691808	IfStatement	if ( s -> downmixed )		1689059	0					
ANR	1691809	Condition	s -> downmixed	819:11:17430:17441	1689059	0	True				
ANR	1691810	PtrMemberAccess	s -> downmixed		1689059	0					
ANR	1691811	Identifier	s		1689059	0					
ANR	1691812	Identifier	downmixed		1689059	1					
ANR	1691813	CompoundStatement		817:25:17382:17382	1689059	1					
ANR	1691814	ExpressionStatement	s -> downmixed = 0	821:12:17459:17475	1689059	0	True				
ANR	1691815	AssignmentExpression	s -> downmixed = 0		1689059	0		=			
ANR	1691816	PtrMemberAccess	s -> downmixed		1689059	0					
ANR	1691817	Identifier	s		1689059	0					
ANR	1691818	Identifier	downmixed		1689059	1					
ANR	1691819	PrimaryExpression	0		1689059	1					
ANR	1691820	ExpressionStatement	ac3_upmix_delay ( s )	823:12:17490:17508	1689059	1	True				
ANR	1691821	CallExpression	ac3_upmix_delay ( s )		1689059	0					
ANR	1691822	Callee	ac3_upmix_delay		1689059	0					
ANR	1691823	Identifier	ac3_upmix_delay		1689059	0					
ANR	1691824	ArgumentList	s		1689059	1					
ANR	1691825	Argument	s		1689059	0					
ANR	1691826	Identifier	s		1689059	0					
ANR	1691827	ExpressionStatement	"do_imdct ( s , s -> channels )"	829:8:17532:17556	1689059	1	True				
ANR	1691828	CallExpression	"do_imdct ( s , s -> channels )"		1689059	0					
ANR	1691829	Callee	do_imdct		1689059	0					
ANR	1691830	Identifier	do_imdct		1689059	0					
ANR	1691831	ArgumentList	s		1689059	1					
ANR	1691832	Argument	s		1689059	0					
ANR	1691833	Identifier	s		1689059	0					
ANR	1691834	Argument	s -> channels		1689059	1					
ANR	1691835	PtrMemberAccess	s -> channels		1689059	0					
ANR	1691836	Identifier	s		1689059	0					
ANR	1691837	Identifier	channels		1689059	1					
ANR	1691838	IfStatement	if ( downmix_output )		1689059	2					
ANR	1691839	Condition	downmix_output	833:11:17572:17585	1689059	0	True				
ANR	1691840	Identifier	downmix_output		1689059	0					
ANR	1691841	CompoundStatement		831:27:17526:17526	1689059	1					
ANR	1691842	ExpressionStatement	"s -> dsp . ac3_downmix ( s -> output , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 256 )"	835:12:17603:17690	1689059	0	True				
ANR	1691843	CallExpression	"s -> dsp . ac3_downmix ( s -> output , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 256 )"		1689059	0					
ANR	1691844	Callee	s -> dsp . ac3_downmix		1689059	0					
ANR	1691845	MemberAccess	s -> dsp . ac3_downmix		1689059	0					
ANR	1691846	PtrMemberAccess	s -> dsp		1689059	0					
ANR	1691847	Identifier	s		1689059	0					
ANR	1691848	Identifier	dsp		1689059	1					
ANR	1691849	Identifier	ac3_downmix		1689059	1					
ANR	1691850	ArgumentList	s -> output		1689059	1					
ANR	1691851	Argument	s -> output		1689059	0					
ANR	1691852	PtrMemberAccess	s -> output		1689059	0					
ANR	1691853	Identifier	s		1689059	0					
ANR	1691854	Identifier	output		1689059	1					
ANR	1691855	Argument	s -> downmix_coeffs		1689059	1					
ANR	1691856	PtrMemberAccess	s -> downmix_coeffs		1689059	0					
ANR	1691857	Identifier	s		1689059	0					
ANR	1691858	Identifier	downmix_coeffs		1689059	1					
ANR	1691859	Argument	s -> out_channels		1689059	2					
ANR	1691860	PtrMemberAccess	s -> out_channels		1689059	0					
ANR	1691861	Identifier	s		1689059	0					
ANR	1691862	Identifier	out_channels		1689059	1					
ANR	1691863	Argument	s -> fbw_channels		1689059	3					
ANR	1691864	PtrMemberAccess	s -> fbw_channels		1689059	0					
ANR	1691865	Identifier	s		1689059	0					
ANR	1691866	Identifier	fbw_channels		1689059	1					
ANR	1691867	Argument	256		1689059	4					
ANR	1691868	PrimaryExpression	256		1689059	0					
ANR	1691869	ElseStatement	else		1689059	0					
ANR	1691870	CompoundStatement		837:11:17653:17653	1689059	0					
ANR	1691871	IfStatement	if ( downmix_output )		1689059	0					
ANR	1691872	Condition	downmix_output	841:11:17729:17742	1689059	0	True				
ANR	1691873	Identifier	downmix_output		1689059	0					
ANR	1691874	CompoundStatement		839:27:17683:17683	1689059	1					
ANR	1691875	ExpressionStatement	"s -> dsp . ac3_downmix ( s -> transform_coeffs + 1 , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 256 )"	843:12:17760:17859	1689059	0	True				
ANR	1691876	CallExpression	"s -> dsp . ac3_downmix ( s -> transform_coeffs + 1 , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 256 )"		1689059	0					
ANR	1691877	Callee	s -> dsp . ac3_downmix		1689059	0					
ANR	1691878	MemberAccess	s -> dsp . ac3_downmix		1689059	0					
ANR	1691879	PtrMemberAccess	s -> dsp		1689059	0					
ANR	1691880	Identifier	s		1689059	0					
ANR	1691881	Identifier	dsp		1689059	1					
ANR	1691882	Identifier	ac3_downmix		1689059	1					
ANR	1691883	ArgumentList	s -> transform_coeffs + 1		1689059	1					
ANR	1691884	Argument	s -> transform_coeffs + 1		1689059	0					
ANR	1691885	AdditiveExpression	s -> transform_coeffs + 1		1689059	0		+			
ANR	1691886	PtrMemberAccess	s -> transform_coeffs		1689059	0					
ANR	1691887	Identifier	s		1689059	0					
ANR	1691888	Identifier	transform_coeffs		1689059	1					
ANR	1691889	PrimaryExpression	1		1689059	1					
ANR	1691890	Argument	s -> downmix_coeffs		1689059	1					
ANR	1691891	PtrMemberAccess	s -> downmix_coeffs		1689059	0					
ANR	1691892	Identifier	s		1689059	0					
ANR	1691893	Identifier	downmix_coeffs		1689059	1					
ANR	1691894	Argument	s -> out_channels		1689059	2					
ANR	1691895	PtrMemberAccess	s -> out_channels		1689059	0					
ANR	1691896	Identifier	s		1689059	0					
ANR	1691897	Identifier	out_channels		1689059	1					
ANR	1691898	Argument	s -> fbw_channels		1689059	3					
ANR	1691899	PtrMemberAccess	s -> fbw_channels		1689059	0					
ANR	1691900	Identifier	s		1689059	0					
ANR	1691901	Identifier	fbw_channels		1689059	1					
ANR	1691902	Argument	256		1689059	4					
ANR	1691903	PrimaryExpression	256		1689059	0					
ANR	1691904	IfStatement	if ( downmix_output && ! s -> downmixed )		1689059	1					
ANR	1691905	Condition	downmix_output && ! s -> downmixed	849:11:17886:17916	1689059	0	True				
ANR	1691906	AndExpression	downmix_output && ! s -> downmixed		1689059	0		&&			
ANR	1691907	Identifier	downmix_output		1689059	0					
ANR	1691908	UnaryOperationExpression	! s -> downmixed		1689059	1					
ANR	1691909	UnaryOperator	!		1689059	0					
ANR	1691910	PtrMemberAccess	s -> downmixed		1689059	1					
ANR	1691911	Identifier	s		1689059	0					
ANR	1691912	Identifier	downmixed		1689059	1					
ANR	1691913	CompoundStatement		847:44:17857:17857	1689059	1					
ANR	1691914	ExpressionStatement	s -> downmixed = 1	851:12:17934:17950	1689059	0	True				
ANR	1691915	AssignmentExpression	s -> downmixed = 1		1689059	0		=			
ANR	1691916	PtrMemberAccess	s -> downmixed		1689059	0					
ANR	1691917	Identifier	s		1689059	0					
ANR	1691918	Identifier	downmixed		1689059	1					
ANR	1691919	PrimaryExpression	1		1689059	1					
ANR	1691920	ExpressionStatement	"s -> dsp . ac3_downmix ( s -> delay , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 128 )"	853:12:17965:18051	1689059	1	True				
ANR	1691921	CallExpression	"s -> dsp . ac3_downmix ( s -> delay , s -> downmix_coeffs , s -> out_channels , s -> fbw_channels , 128 )"		1689059	0					
ANR	1691922	Callee	s -> dsp . ac3_downmix		1689059	0					
ANR	1691923	MemberAccess	s -> dsp . ac3_downmix		1689059	0					
ANR	1691924	PtrMemberAccess	s -> dsp		1689059	0					
ANR	1691925	Identifier	s		1689059	0					
ANR	1691926	Identifier	dsp		1689059	1					
ANR	1691927	Identifier	ac3_downmix		1689059	1					
ANR	1691928	ArgumentList	s -> delay		1689059	1					
ANR	1691929	Argument	s -> delay		1689059	0					
ANR	1691930	PtrMemberAccess	s -> delay		1689059	0					
ANR	1691931	Identifier	s		1689059	0					
ANR	1691932	Identifier	delay		1689059	1					
ANR	1691933	Argument	s -> downmix_coeffs		1689059	1					
ANR	1691934	PtrMemberAccess	s -> downmix_coeffs		1689059	0					
ANR	1691935	Identifier	s		1689059	0					
ANR	1691936	Identifier	downmix_coeffs		1689059	1					
ANR	1691937	Argument	s -> out_channels		1689059	2					
ANR	1691938	PtrMemberAccess	s -> out_channels		1689059	0					
ANR	1691939	Identifier	s		1689059	0					
ANR	1691940	Identifier	out_channels		1689059	1					
ANR	1691941	Argument	s -> fbw_channels		1689059	3					
ANR	1691942	PtrMemberAccess	s -> fbw_channels		1689059	0					
ANR	1691943	Identifier	s		1689059	0					
ANR	1691944	Identifier	fbw_channels		1689059	1					
ANR	1691945	Argument	128		1689059	4					
ANR	1691946	PrimaryExpression	128		1689059	0					
ANR	1691947	ExpressionStatement	"do_imdct ( s , s -> out_channels )"	859:8:18075:18103	1689059	2	True				
ANR	1691948	CallExpression	"do_imdct ( s , s -> out_channels )"		1689059	0					
ANR	1691949	Callee	do_imdct		1689059	0					
ANR	1691950	Identifier	do_imdct		1689059	0					
ANR	1691951	ArgumentList	s		1689059	1					
ANR	1691952	Argument	s		1689059	0					
ANR	1691953	Identifier	s		1689059	0					
ANR	1691954	Argument	s -> out_channels		1689059	1					
ANR	1691955	PtrMemberAccess	s -> out_channels		1689059	0					
ANR	1691956	Identifier	s		1689059	0					
ANR	1691957	Identifier	out_channels		1689059	1					
ANR	1691958	ReturnStatement	return 0 ;	865:4:18119:18127	1689059	36	True				
ANR	1691959	PrimaryExpression	0		1689059	0					
ANR	1691960	ReturnType	static int		1689059	1					
ANR	1691961	Identifier	decode_audio_block		1689059	2					
ANR	1691962	ParameterList	"AC3DecodeContext * s , int blk"		1689059	3					
ANR	1691963	Parameter	AC3DecodeContext * s	1:30:30:48	1689059	0	True				
ANR	1691964	ParameterType	AC3DecodeContext *		1689059	0					
ANR	1691965	Identifier	s		1689059	1					
ANR	1691966	Parameter	int blk	1:51:51:57	1689059	1	True				
ANR	1691967	ParameterType	int		1689059	0					
ANR	1691968	Identifier	blk		1689059	1					
ANR	1691969	CFGEntryNode	ENTRY		1689059		True				
ANR	1691970	CFGExitNode	EXIT		1689059		True				
ANR	1691971	Symbol	s -> block_switch		1689059						
ANR	1691972	Symbol	DBA_NONE		1689059						
ANR	1691973	Symbol	* s -> dexps		1689059						
ANR	1691974	Symbol	prev		1689059						
ANR	1691975	Symbol	* ch		1689059						
ANR	1691976	Symbol	* s -> mask		1689059						
ANR	1691977	Symbol	* * s -> cpl_coords		1689059						
ANR	1691978	Symbol	s -> bit_allocation_syntax		1689059						
ANR	1691979	Symbol	s -> bit_alloc_params . cpl_fast_leak		1689059						
ANR	1691980	Symbol	s -> bit_alloc_params . slow_gain		1689059						
ANR	1691981	Symbol	fbw_channels		1689059						
ANR	1691982	Symbol	s -> dexps		1689059						
ANR	1691983	Symbol	csnr		1689059						
ANR	1691984	Symbol	* ff_ac3_fast_decay_tab		1689059						
ANR	1691985	Symbol	* s -> snr_offset		1689059						
ANR	1691986	Symbol	s -> first_cpl_leak		1689059						
ANR	1691987	Symbol	EXP_REUSE		1689059						
ANR	1691988	Symbol	* s -> start_freq		1689059						
ANR	1691989	Symbol	* s -> rematrixing_flags		1689059						
ANR	1691990	Symbol	s -> channel_uses_aht		1689059						
ANR	1691991	Symbol	cpl_in_use		1689059						
ANR	1691992	Symbol	s -> exp_strategy		1689059						
ANR	1691993	Symbol	s -> num_exp_groups		1689059						
ANR	1691994	Symbol	bandwidth_code		1689059						
ANR	1691995	Symbol	s -> psd		1689059						
ANR	1691996	Symbol	s -> dsp		1689059						
ANR	1691997	Symbol	different_transforms		1689059						
ANR	1691998	Symbol	* * * s		1689059						
ANR	1691999	Symbol	ff_ac3_slow_gain_tab		1689059						
ANR	1692000	Symbol	s -> bit_alloc_params		1689059						
ANR	1692001	Symbol	cpl_coord_mant		1689059						
ANR	1692002	Symbol	s -> eac3		1689059						
ANR	1692003	Symbol	* blk		1689059						
ANR	1692004	Symbol	s -> start_freq		1689059						
ANR	1692005	Symbol	* * blk		1689059						
ANR	1692006	Symbol	s -> dba_nsegs		1689059						
ANR	1692007	Symbol	cpl_coords_exist		1689059						
ANR	1692008	Symbol	ff_ac3_fast_decay_tab		1689059						
ANR	1692009	Symbol	* seg		1689059						
ANR	1692010	Symbol	* dynamic_range_tab		1689059						
ANR	1692011	Symbol	* CPL_CH		1689059						
ANR	1692012	Symbol	* bit_alloc_stages		1689059						
ANR	1692013	Symbol	DBA_NEW		1689059						
ANR	1692014	Symbol	s -> bit_alloc_params . floor		1689059						
ANR	1692015	Symbol	* ff_ac3_slow_gain_tab		1689059						
ANR	1692016	Symbol	* ff_ac3_floor_tab		1689059						
ANR	1692017	Symbol	skipl		1689059						
ANR	1692018	Symbol	s -> dba_syntax		1689059						
ANR	1692019	Symbol	s -> fast_gain		1689059						
ANR	1692020	Symbol	s -> transform_coeffs		1689059						
ANR	1692021	Symbol	ff_ac3_db_per_bit_tab		1689059						
ANR	1692022	Symbol	gain		1689059						
ANR	1692023	Symbol	s -> delay		1689059						
ANR	1692024	Symbol	s -> mask		1689059						
ANR	1692025	Symbol	seg		1689059						
ANR	1692026	Symbol	s -> cpl_coords		1689059						
ANR	1692027	Symbol	* * s		1689059						
ANR	1692028	Symbol	s -> dba_values		1689059						
ANR	1692029	Symbol	sl		1689059						
ANR	1692030	Symbol	* * s -> exp_strategy		1689059						
ANR	1692031	Symbol	* s -> cpl_strategy_exists		1689059						
ANR	1692032	Symbol	& s -> num_cpl_bands		1689059						
ANR	1692033	Symbol	s -> bit_alloc_params . fast_decay		1689059						
ANR	1692034	Symbol	s -> bap		1689059						
ANR	1692035	Symbol	ff_ac3_fast_gain_tab		1689059						
ANR	1692036	Symbol	blk		1689059						
ANR	1692037	Symbol	s -> frame_type		1689059						
ANR	1692038	Symbol	s -> downmixed		1689059						
ANR	1692039	Symbol	AV_LOG_ERROR		1689059						
ANR	1692040	Symbol	* * s -> dba_offsets		1689059						
ANR	1692041	Symbol	ch		1689059						
ANR	1692042	Symbol	i		1689059						
ANR	1692043	Symbol	s -> dither_flag_syntax		1689059						
ANR	1692044	Symbol	* s -> bap		1689059						
ANR	1692045	Symbol	s -> bit_alloc_params . sr_shift		1689059						
ANR	1692046	Symbol	* s -> end_freq		1689059						
ANR	1692047	Symbol	s -> skip_syntax		1689059						
ANR	1692048	Symbol	cpl_coord_exp		1689059						
ANR	1692049	Symbol	s		1689059						
ANR	1692050	Symbol	s -> avctx -> drc_scale		1689059						
ANR	1692051	Symbol	s -> rematrixing_flags		1689059						
ANR	1692052	Symbol	* * s -> dba_lengths		1689059						
ANR	1692053	Symbol	s -> cpl_strategy_exists		1689059						
ANR	1692054	Symbol	snr		1689059						
ANR	1692055	Symbol	* * s -> dba_values		1689059						
ANR	1692056	Symbol	s -> band_psd		1689059						
ANR	1692057	Symbol	channel_mode		1689059						
ANR	1692058	Symbol	s -> fast_gain_syntax		1689059						
ANR	1692059	Symbol	s -> snr_offset		1689059						
ANR	1692060	Symbol	decode_exponents		1689059						
ANR	1692061	Symbol	s -> num_cpl_subbands		1689059						
ANR	1692062	Symbol	s -> channel_in_cpl		1689059						
ANR	1692063	Symbol	FFMAX		1689059						
ANR	1692064	Symbol	s -> dynamic_range		1689059						
ANR	1692065	Symbol	s -> phase_flags_in_use		1689059						
ANR	1692066	Symbol	s -> lfe_ch		1689059						
ANR	1692067	Symbol	* s -> channel_in_cpl		1689059						
ANR	1692068	Symbol	* ff_ac3_slow_decay_tab		1689059						
ANR	1692069	Symbol	s -> dba_offsets		1689059						
ANR	1692070	Symbol	* s -> exp_strategy		1689059						
ANR	1692071	Symbol	s -> dba_lengths		1689059						
ANR	1692072	Symbol	* s -> band_psd		1689059						
ANR	1692073	Symbol	* s -> transform_coeffs		1689059						
ANR	1692074	Symbol	get_bits		1689059						
ANR	1692075	Symbol	s -> dba_mode		1689059						
ANR	1692076	Symbol	* s -> dba_offsets		1689059						
ANR	1692077	Symbol	* * s -> dexps		1689059						
ANR	1692078	Symbol	* ff_ac3_db_per_bit_tab		1689059						
ANR	1692079	Symbol	s -> num_cpl_bands		1689059						
ANR	1692080	Symbol	ff_eac3_default_cpl_band_struct		1689059						
ANR	1692081	Symbol	DBA_RESERVED		1689059						
ANR	1692082	Symbol	* s -> dba_nsegs		1689059						
ANR	1692083	Symbol	* s -> phase_flags		1689059						
ANR	1692084	Symbol	s -> snr_offset_strategy		1689059						
ANR	1692085	Symbol	* s -> psd		1689059						
ANR	1692086	Symbol	bap_tab		1689059						
ANR	1692087	Symbol	bnd		1689059						
ANR	1692088	Symbol	AC3_CHMODE_STEREO		1689059						
ANR	1692089	Symbol	s -> first_cpl_coords		1689059						
ANR	1692090	Symbol	s -> channel_mode		1689059						
ANR	1692091	Symbol	* s -> fast_gain		1689059						
ANR	1692092	Symbol	* s -> avctx		1689059						
ANR	1692093	Symbol	cpl_end_subband		1689059						
ANR	1692094	Symbol	NULL		1689059						
ANR	1692095	Symbol	* s -> dynamic_range		1689059						
ANR	1692096	Symbol	* s -> cpl_coords		1689059						
ANR	1692097	Symbol	& s -> gbc		1689059						
ANR	1692098	Symbol	get_bits1		1689059						
ANR	1692099	Symbol	AC3_OUTPUT_LFEON		1689059						
ANR	1692100	Symbol	cpl_start_subband		1689059						
ANR	1692101	Symbol	AC3_CHMODE_DUALMONO		1689059						
ANR	1692102	Symbol	* s -> block_switch		1689059						
ANR	1692103	Symbol	* s -> channel_uses_aht		1689059						
ANR	1692104	Symbol	s -> output		1689059						
ANR	1692105	Symbol	group_size		1689059						
ANR	1692106	Symbol	& s -> bit_alloc_params		1689059						
ANR	1692107	Symbol	* s -> fixed_coeffs		1689059						
ANR	1692108	Symbol	* s -> dba_values		1689059						
ANR	1692109	Symbol	s -> phase_flags		1689059						
ANR	1692110	Symbol	* s -> dither_flag		1689059						
ANR	1692111	Symbol	s -> avctx		1689059						
ANR	1692112	Symbol	dynamic_range_tab		1689059						
ANR	1692113	Symbol	ff_ac3_floor_tab		1689059						
ANR	1692114	Symbol	s -> cpl_band_struct		1689059						
ANR	1692115	Symbol	s -> bit_alloc_params . db_per_bit		1689059						
ANR	1692116	Symbol	s -> fbw_channels		1689059						
ANR	1692117	Symbol	CPL_CH		1689059						
ANR	1692118	Symbol	ff_ac3_bap_tab		1689059						
ANR	1692119	Symbol	fl		1689059						
ANR	1692120	Symbol	s -> output_mode		1689059						
ANR	1692121	Symbol	bit_alloc_stages		1689059						
ANR	1692122	Symbol	* s -> dba_mode		1689059						
ANR	1692123	Symbol	s -> channels		1689059						
ANR	1692124	Symbol	* s -> cpl_in_use		1689059						
ANR	1692125	Symbol	ff_ac3_slow_decay_tab		1689059						
ANR	1692126	Symbol	s -> end_freq		1689059						
ANR	1692127	Symbol	s -> bit_alloc_params . cpl_slow_leak		1689059						
ANR	1692128	Symbol	* * ch		1689059						
ANR	1692129	Symbol	s -> out_channels		1689059						
ANR	1692130	Symbol	downmix_output		1689059						
ANR	1692131	Symbol	s -> dither_flag		1689059						
ANR	1692132	Symbol	s -> bit_alloc_params . slow_decay		1689059						
ANR	1692133	Symbol	s -> downmix_coeffs		1689059						
ANR	1692134	Symbol	EAC3_FRAME_TYPE_INDEPENDENT		1689059						
ANR	1692135	Symbol	* s -> num_exp_groups		1689059						
ANR	1692136	Symbol	s -> mul_bias		1689059						
ANR	1692137	Symbol	& s -> num_cpl_subbands		1689059						
ANR	1692138	Symbol	* ff_ac3_fast_gain_tab		1689059						
ANR	1692139	Symbol	* get_bits		1689059						
ANR	1692140	Symbol	gbc		1689059						
ANR	1692141	Symbol	AC3_MAX_CHANNELS		1689059						
ANR	1692142	Symbol	* s -> dba_lengths		1689059						
ANR	1692143	Symbol	ff_eac3_hebap_tab		1689059						
ANR	1692144	Symbol	s -> fixed_coeffs		1689059						
ANR	1692145	Symbol	* i		1689059						
ANR	1692146	Symbol	s -> cpl_in_use		1689059						
ANR	1692147	Symbol	master_cpl_coord		1689059						
ANR	1692148	Symbol	* s -> first_cpl_coords		1689059						
ANR	1692149	Symbol	s -> num_rematrixing_bands		1689059						
ANR	1692150	Symbol	s -> block_switch_syntax		1689059						
ANR	1692151	Symbol	* s		1689059						
ANR	1692152	Symbol	* bnd		1689059						
