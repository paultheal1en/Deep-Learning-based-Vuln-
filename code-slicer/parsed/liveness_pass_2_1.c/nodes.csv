command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5210736	File	/home/p4ultr4n/workplace/ReVeal/raw_code/liveness_pass_2_1.c								
ANR	5210737	Function	liveness_pass_2	1:0:0:5689							
ANR	5210738	FunctionDef	liveness_pass_2 (TCGContext * s)		5210737	0					
ANR	5210739	CompoundStatement		3:0:44:5689	5210737	0					
ANR	5210740	IdentifierDeclStatement	int nb_globals = s -> nb_globals ;	5:4:51:81	5210737	0	True				
ANR	5210741	IdentifierDecl	nb_globals = s -> nb_globals		5210737	0					
ANR	5210742	IdentifierDeclType	int		5210737	0					
ANR	5210743	Identifier	nb_globals		5210737	1					
ANR	5210744	AssignmentExpression	nb_globals = s -> nb_globals		5210737	2		=			
ANR	5210745	Identifier	nb_globals		5210737	0					
ANR	5210746	PtrMemberAccess	s -> nb_globals		5210737	1					
ANR	5210747	Identifier	s		5210737	0					
ANR	5210748	Identifier	nb_globals		5210737	1					
ANR	5210749	IdentifierDeclStatement	"int nb_temps , i , oi , oi_next ;"	7:4:88:116	5210737	1	True				
ANR	5210750	IdentifierDecl	nb_temps		5210737	0					
ANR	5210751	IdentifierDeclType	int		5210737	0					
ANR	5210752	Identifier	nb_temps		5210737	1					
ANR	5210753	IdentifierDecl	i		5210737	1					
ANR	5210754	IdentifierDeclType	int		5210737	0					
ANR	5210755	Identifier	i		5210737	1					
ANR	5210756	IdentifierDecl	oi		5210737	2					
ANR	5210757	IdentifierDeclType	int		5210737	0					
ANR	5210758	Identifier	oi		5210737	1					
ANR	5210759	IdentifierDecl	oi_next		5210737	3					
ANR	5210760	IdentifierDeclType	int		5210737	0					
ANR	5210761	Identifier	oi_next		5210737	1					
ANR	5210762	IdentifierDeclStatement	bool changes = false ;	9:4:123:143	5210737	2	True				
ANR	5210763	IdentifierDecl	changes = false		5210737	0					
ANR	5210764	IdentifierDeclType	bool		5210737	0					
ANR	5210765	Identifier	changes		5210737	1					
ANR	5210766	AssignmentExpression	changes = false		5210737	2		=			
ANR	5210767	Identifier	false		5210737	0					
ANR	5210768	Identifier	false		5210737	1					
ANR	5210769	ForStatement	for ( i = 0 ; i < nb_globals ; ++ i )		5210737	3					
ANR	5210770	ForInit	i = 0 ;	15:9:214:219	5210737	0	True				
ANR	5210771	AssignmentExpression	i = 0		5210737	0		=			
ANR	5210772	Identifier	i		5210737	0					
ANR	5210773	PrimaryExpression	0		5210737	1					
ANR	5210774	Condition	i < nb_globals	15:16:221:234	5210737	1	True				
ANR	5210775	RelationalExpression	i < nb_globals		5210737	0		<			
ANR	5210776	Identifier	i		5210737	0					
ANR	5210777	Identifier	nb_globals		5210737	1					
ANR	5210778	UnaryExpression	++ i	15:32:237:239	5210737	2	True				
ANR	5210779	IncDec	++		5210737	0					
ANR	5210780	Identifier	i		5210737	1					
ANR	5210781	CompoundStatement		15:8:208:235	5210737	3					
ANR	5210782	IdentifierDeclStatement	TCGTemp * its = & s -> temps [ i ] ;	17:8:253:280	5210737	0	True				
ANR	5210783	IdentifierDecl	* its = & s -> temps [ i ]		5210737	0					
ANR	5210784	IdentifierDeclType	TCGTemp *		5210737	0					
ANR	5210785	Identifier	its		5210737	1					
ANR	5210786	AssignmentExpression	* its = & s -> temps [ i ]		5210737	2		=			
ANR	5210787	Identifier	its		5210737	0					
ANR	5210788	UnaryOperationExpression	& s -> temps [ i ]		5210737	1					
ANR	5210789	UnaryOperator	&		5210737	0					
ANR	5210790	ArrayIndexing	s -> temps [ i ]		5210737	1					
ANR	5210791	PtrMemberAccess	s -> temps		5210737	0					
ANR	5210792	Identifier	s		5210737	0					
ANR	5210793	Identifier	temps		5210737	1					
ANR	5210794	Identifier	i		5210737	1					
ANR	5210795	IfStatement	if ( its -> indirect_reg )		5210737	1					
ANR	5210796	Condition	its -> indirect_reg	19:12:295:311	5210737	0	True				
ANR	5210797	PtrMemberAccess	its -> indirect_reg		5210737	0					
ANR	5210798	Identifier	its		5210737	0					
ANR	5210799	Identifier	indirect_reg		5210737	1					
ANR	5210800	CompoundStatement		19:12:284:316	5210737	1					
ANR	5210801	IdentifierDeclStatement	TCGTemp * dts = tcg_temp_alloc ( s ) ;	21:12:329:361	5210737	0	True				
ANR	5210802	IdentifierDecl	* dts = tcg_temp_alloc ( s )		5210737	0					
ANR	5210803	IdentifierDeclType	TCGTemp *		5210737	0					
ANR	5210804	Identifier	dts		5210737	1					
ANR	5210805	AssignmentExpression	* dts = tcg_temp_alloc ( s )		5210737	2		=			
ANR	5210806	Identifier	dts		5210737	0					
ANR	5210807	CallExpression	tcg_temp_alloc ( s )		5210737	1					
ANR	5210808	Callee	tcg_temp_alloc		5210737	0					
ANR	5210809	Identifier	tcg_temp_alloc		5210737	0					
ANR	5210810	ArgumentList	s		5210737	1					
ANR	5210811	Argument	s		5210737	0					
ANR	5210812	Identifier	s		5210737	0					
ANR	5210813	ExpressionStatement	dts -> type = its -> type	23:12:376:397	5210737	1	True				
ANR	5210814	AssignmentExpression	dts -> type = its -> type		5210737	0		=			
ANR	5210815	PtrMemberAccess	dts -> type		5210737	0					
ANR	5210816	Identifier	dts		5210737	0					
ANR	5210817	Identifier	type		5210737	1					
ANR	5210818	PtrMemberAccess	its -> type		5210737	1					
ANR	5210819	Identifier	its		5210737	0					
ANR	5210820	Identifier	type		5210737	1					
ANR	5210821	ExpressionStatement	dts -> base_type = its -> base_type	25:12:412:443	5210737	2	True				
ANR	5210822	AssignmentExpression	dts -> base_type = its -> base_type		5210737	0		=			
ANR	5210823	PtrMemberAccess	dts -> base_type		5210737	0					
ANR	5210824	Identifier	dts		5210737	0					
ANR	5210825	Identifier	base_type		5210737	1					
ANR	5210826	PtrMemberAccess	its -> base_type		5210737	1					
ANR	5210827	Identifier	its		5210737	0					
ANR	5210828	Identifier	base_type		5210737	1					
ANR	5210829	ExpressionStatement	its -> state_ptr = dts	27:12:458:478	5210737	3	True				
ANR	5210830	AssignmentExpression	its -> state_ptr = dts		5210737	0		=			
ANR	5210831	PtrMemberAccess	its -> state_ptr		5210737	0					
ANR	5210832	Identifier	its		5210737	0					
ANR	5210833	Identifier	state_ptr		5210737	1					
ANR	5210834	Identifier	dts		5210737	1					
ANR	5210835	ElseStatement	else		5210737	0					
ANR	5210836	CompoundStatement		27:15:451:451	5210737	0					
ANR	5210837	ExpressionStatement	its -> state_ptr = NULL	31:12:511:532	5210737	0	True				
ANR	5210838	AssignmentExpression	its -> state_ptr = NULL		5210737	0		=			
ANR	5210839	PtrMemberAccess	its -> state_ptr		5210737	0					
ANR	5210840	Identifier	its		5210737	0					
ANR	5210841	Identifier	state_ptr		5210737	1					
ANR	5210842	Identifier	NULL		5210737	1					
ANR	5210843	ExpressionStatement	its -> state = TS_DEAD	37:8:594:614	5210737	2	True				
ANR	5210844	AssignmentExpression	its -> state = TS_DEAD		5210737	0		=			
ANR	5210845	PtrMemberAccess	its -> state		5210737	0					
ANR	5210846	Identifier	its		5210737	0					
ANR	5210847	Identifier	state		5210737	1					
ANR	5210848	Identifier	TS_DEAD		5210737	1					
ANR	5210849	ForStatement	for ( nb_temps = s -> nb_temps ; i < nb_temps ; ++ i )		5210737	4					
ANR	5210850	ForInit	nb_temps = s -> nb_temps ;	41:9:633:655	5210737	0	True				
ANR	5210851	AssignmentExpression	nb_temps = s -> nb_temps		5210737	0		=			
ANR	5210852	Identifier	nb_temps		5210737	0					
ANR	5210853	PtrMemberAccess	s -> nb_temps		5210737	1					
ANR	5210854	Identifier	s		5210737	0					
ANR	5210855	Identifier	nb_temps		5210737	1					
ANR	5210856	Condition	i < nb_temps	41:33:657:668	5210737	1	True				
ANR	5210857	RelationalExpression	i < nb_temps		5210737	0		<			
ANR	5210858	Identifier	i		5210737	0					
ANR	5210859	Identifier	nb_temps		5210737	1					
ANR	5210860	UnaryExpression	++ i	41:47:671:673	5210737	2	True				
ANR	5210861	IncDec	++		5210737	0					
ANR	5210862	Identifier	i		5210737	1					
ANR	5210863	CompoundStatement		41:8:642:669	5210737	3					
ANR	5210864	IdentifierDeclStatement	TCGTemp * its = & s -> temps [ i ] ;	43:8:687:714	5210737	0	True				
ANR	5210865	IdentifierDecl	* its = & s -> temps [ i ]		5210737	0					
ANR	5210866	IdentifierDeclType	TCGTemp *		5210737	0					
ANR	5210867	Identifier	its		5210737	1					
ANR	5210868	AssignmentExpression	* its = & s -> temps [ i ]		5210737	2		=			
ANR	5210869	Identifier	its		5210737	0					
ANR	5210870	UnaryOperationExpression	& s -> temps [ i ]		5210737	1					
ANR	5210871	UnaryOperator	&		5210737	0					
ANR	5210872	ArrayIndexing	s -> temps [ i ]		5210737	1					
ANR	5210873	PtrMemberAccess	s -> temps		5210737	0					
ANR	5210874	Identifier	s		5210737	0					
ANR	5210875	Identifier	temps		5210737	1					
ANR	5210876	Identifier	i		5210737	1					
ANR	5210877	ExpressionStatement	its -> state_ptr = NULL	45:8:725:746	5210737	1	True				
ANR	5210878	AssignmentExpression	its -> state_ptr = NULL		5210737	0		=			
ANR	5210879	PtrMemberAccess	its -> state_ptr		5210737	0					
ANR	5210880	Identifier	its		5210737	0					
ANR	5210881	Identifier	state_ptr		5210737	1					
ANR	5210882	Identifier	NULL		5210737	1					
ANR	5210883	ExpressionStatement	its -> state = TS_DEAD	47:8:757:777	5210737	2	True				
ANR	5210884	AssignmentExpression	its -> state = TS_DEAD		5210737	0		=			
ANR	5210885	PtrMemberAccess	its -> state		5210737	0					
ANR	5210886	Identifier	its		5210737	0					
ANR	5210887	Identifier	state		5210737	1					
ANR	5210888	Identifier	TS_DEAD		5210737	1					
ANR	5210889	ForStatement	for ( oi = s -> gen_op_buf [ 0 ] . next ; oi != 0 ; oi = oi_next )		5210737	5					
ANR	5210890	ForInit	oi = s -> gen_op_buf [ 0 ] . next ;	53:9:798:824	5210737	0	True				
ANR	5210891	AssignmentExpression	oi = s -> gen_op_buf [ 0 ] . next		5210737	0		=			
ANR	5210892	Identifier	oi		5210737	0					
ANR	5210893	MemberAccess	s -> gen_op_buf [ 0 ] . next		5210737	1					
ANR	5210894	ArrayIndexing	s -> gen_op_buf [ 0 ]		5210737	0					
ANR	5210895	PtrMemberAccess	s -> gen_op_buf		5210737	0					
ANR	5210896	Identifier	s		5210737	0					
ANR	5210897	Identifier	gen_op_buf		5210737	1					
ANR	5210898	PrimaryExpression	0		5210737	1					
ANR	5210899	Identifier	next		5210737	1					
ANR	5210900	Condition	oi != 0	53:37:826:832	5210737	1	True				
ANR	5210901	EqualityExpression	oi != 0		5210737	0		!=			
ANR	5210902	Identifier	oi		5210737	0					
ANR	5210903	PrimaryExpression	0		5210737	1					
ANR	5210904	AssignmentExpression	oi = oi_next	53:46:835:846	5210737	2	True	=			
ANR	5210905	Identifier	oi		5210737	0					
ANR	5210906	Identifier	oi_next		5210737	1					
ANR	5210907	CompoundStatement		63:8:1027:1051	5210737	3					
ANR	5210908	IdentifierDeclStatement	TCGOp * op = & s -> gen_op_buf [ oi ] ;	55:8:860:890	5210737	0	True				
ANR	5210909	IdentifierDecl	* op = & s -> gen_op_buf [ oi ]		5210737	0					
ANR	5210910	IdentifierDeclType	TCGOp *		5210737	0					
ANR	5210911	Identifier	op		5210737	1					
ANR	5210912	AssignmentExpression	* op = & s -> gen_op_buf [ oi ]		5210737	2		=			
ANR	5210913	Identifier	op		5210737	0					
ANR	5210914	UnaryOperationExpression	& s -> gen_op_buf [ oi ]		5210737	1					
ANR	5210915	UnaryOperator	&		5210737	0					
ANR	5210916	ArrayIndexing	s -> gen_op_buf [ oi ]		5210737	1					
ANR	5210917	PtrMemberAccess	s -> gen_op_buf		5210737	0					
ANR	5210918	Identifier	s		5210737	0					
ANR	5210919	Identifier	gen_op_buf		5210737	1					
ANR	5210920	Identifier	oi		5210737	1					
ANR	5210921	IdentifierDeclStatement	TCGOpcode opc = op -> opc ;	57:8:901:924	5210737	1	True				
ANR	5210922	IdentifierDecl	opc = op -> opc		5210737	0					
ANR	5210923	IdentifierDeclType	TCGOpcode		5210737	0					
ANR	5210924	Identifier	opc		5210737	1					
ANR	5210925	AssignmentExpression	opc = op -> opc		5210737	2		=			
ANR	5210926	Identifier	opc		5210737	0					
ANR	5210927	PtrMemberAccess	op -> opc		5210737	1					
ANR	5210928	Identifier	op		5210737	0					
ANR	5210929	Identifier	opc		5210737	1					
ANR	5210930	IdentifierDeclStatement	const TCGOpDef * def = & tcg_op_defs [ opc ] ;	59:8:935:974	5210737	2	True				
ANR	5210931	IdentifierDecl	* def = & tcg_op_defs [ opc ]		5210737	0					
ANR	5210932	IdentifierDeclType	const TCGOpDef *		5210737	0					
ANR	5210933	Identifier	def		5210737	1					
ANR	5210934	AssignmentExpression	* def = & tcg_op_defs [ opc ]		5210737	2		=			
ANR	5210935	Identifier	def		5210737	0					
ANR	5210936	UnaryOperationExpression	& tcg_op_defs [ opc ]		5210737	1					
ANR	5210937	UnaryOperator	&		5210737	0					
ANR	5210938	ArrayIndexing	tcg_op_defs [ opc ]		5210737	1					
ANR	5210939	Identifier	tcg_op_defs		5210737	0					
ANR	5210940	Identifier	opc		5210737	1					
ANR	5210941	IdentifierDeclStatement	TCGLifeData arg_life = op -> life ;	61:8:985:1016	5210737	3	True				
ANR	5210942	IdentifierDecl	arg_life = op -> life		5210737	0					
ANR	5210943	IdentifierDeclType	TCGLifeData		5210737	0					
ANR	5210944	Identifier	arg_life		5210737	1					
ANR	5210945	AssignmentExpression	arg_life = op -> life		5210737	2		=			
ANR	5210946	Identifier	arg_life		5210737	0					
ANR	5210947	PtrMemberAccess	op -> life		5210737	1					
ANR	5210948	Identifier	op		5210737	0					
ANR	5210949	Identifier	life		5210737	1					
ANR	5210950	IdentifierDeclStatement	"int nb_iargs , nb_oargs , call_flags ;"	63:8:1027:1061	5210737	4	True				
ANR	5210951	IdentifierDecl	nb_iargs		5210737	0					
ANR	5210952	IdentifierDeclType	int		5210737	0					
ANR	5210953	Identifier	nb_iargs		5210737	1					
ANR	5210954	IdentifierDecl	nb_oargs		5210737	1					
ANR	5210955	IdentifierDeclType	int		5210737	0					
ANR	5210956	Identifier	nb_oargs		5210737	1					
ANR	5210957	IdentifierDecl	call_flags		5210737	2					
ANR	5210958	IdentifierDeclType	int		5210737	0					
ANR	5210959	Identifier	call_flags		5210737	1					
ANR	5210960	IdentifierDeclStatement	"TCGTemp * arg_ts , * dir_ts ;"	65:8:1072:1096	5210737	5	True				
ANR	5210961	IdentifierDecl	* arg_ts		5210737	0					
ANR	5210962	IdentifierDeclType	TCGTemp *		5210737	0					
ANR	5210963	Identifier	arg_ts		5210737	1					
ANR	5210964	IdentifierDecl	* dir_ts		5210737	1					
ANR	5210965	IdentifierDeclType	TCGTemp *		5210737	0					
ANR	5210966	Identifier	dir_ts		5210737	1					
ANR	5210967	ExpressionStatement	oi_next = op -> next	69:8:1109:1127	5210737	6	True				
ANR	5210968	AssignmentExpression	oi_next = op -> next		5210737	0		=			
ANR	5210969	Identifier	oi_next		5210737	0					
ANR	5210970	PtrMemberAccess	op -> next		5210737	1					
ANR	5210971	Identifier	op		5210737	0					
ANR	5210972	Identifier	next		5210737	1					
ANR	5210973	IfStatement	if ( opc == INDEX_op_call )		5210737	7					
ANR	5210974	Condition	opc == INDEX_op_call	73:12:1144:1163	5210737	0	True				
ANR	5210975	EqualityExpression	opc == INDEX_op_call		5210737	0		==			
ANR	5210976	Identifier	opc		5210737	0					
ANR	5210977	Identifier	INDEX_op_call		5210737	1					
ANR	5210978	CompoundStatement		71:34:1121:1121	5210737	1					
ANR	5210979	ExpressionStatement	nb_oargs = op -> callo	75:12:1181:1201	5210737	0	True				
ANR	5210980	AssignmentExpression	nb_oargs = op -> callo		5210737	0		=			
ANR	5210981	Identifier	nb_oargs		5210737	0					
ANR	5210982	PtrMemberAccess	op -> callo		5210737	1					
ANR	5210983	Identifier	op		5210737	0					
ANR	5210984	Identifier	callo		5210737	1					
ANR	5210985	ExpressionStatement	nb_iargs = op -> calli	77:12:1216:1236	5210737	1	True				
ANR	5210986	AssignmentExpression	nb_iargs = op -> calli		5210737	0		=			
ANR	5210987	Identifier	nb_iargs		5210737	0					
ANR	5210988	PtrMemberAccess	op -> calli		5210737	1					
ANR	5210989	Identifier	op		5210737	0					
ANR	5210990	Identifier	calli		5210737	1					
ANR	5210991	ExpressionStatement	call_flags = op -> args [ nb_oargs + nb_iargs + 1 ]	79:12:1251:1297	5210737	2	True				
ANR	5210992	AssignmentExpression	call_flags = op -> args [ nb_oargs + nb_iargs + 1 ]		5210737	0		=			
ANR	5210993	Identifier	call_flags		5210737	0					
ANR	5210994	ArrayIndexing	op -> args [ nb_oargs + nb_iargs + 1 ]		5210737	1					
ANR	5210995	PtrMemberAccess	op -> args		5210737	0					
ANR	5210996	Identifier	op		5210737	0					
ANR	5210997	Identifier	args		5210737	1					
ANR	5210998	AdditiveExpression	nb_oargs + nb_iargs + 1		5210737	1		+			
ANR	5210999	Identifier	nb_oargs		5210737	0					
ANR	5211000	AdditiveExpression	nb_iargs + 1		5210737	1		+			
ANR	5211001	Identifier	nb_iargs		5210737	0					
ANR	5211002	PrimaryExpression	1		5210737	1					
ANR	5211003	ElseStatement	else		5210737	0					
ANR	5211004	CompoundStatement		79:15:1270:1270	5210737	0					
ANR	5211005	ExpressionStatement	nb_iargs = def -> nb_iargs	83:12:1330:1354	5210737	0	True				
ANR	5211006	AssignmentExpression	nb_iargs = def -> nb_iargs		5210737	0		=			
ANR	5211007	Identifier	nb_iargs		5210737	0					
ANR	5211008	PtrMemberAccess	def -> nb_iargs		5210737	1					
ANR	5211009	Identifier	def		5210737	0					
ANR	5211010	Identifier	nb_iargs		5210737	1					
ANR	5211011	ExpressionStatement	nb_oargs = def -> nb_oargs	85:12:1369:1393	5210737	1	True				
ANR	5211012	AssignmentExpression	nb_oargs = def -> nb_oargs		5210737	0		=			
ANR	5211013	Identifier	nb_oargs		5210737	0					
ANR	5211014	PtrMemberAccess	def -> nb_oargs		5210737	1					
ANR	5211015	Identifier	def		5210737	0					
ANR	5211016	Identifier	nb_oargs		5210737	1					
ANR	5211017	IfStatement	if ( def -> flags & TCG_OPF_BB_END )		5210737	2					
ANR	5211018	Condition	def -> flags & TCG_OPF_BB_END	91:16:1474:1500	5210737	0	True				
ANR	5211019	BitAndExpression	def -> flags & TCG_OPF_BB_END		5210737	0		&			
ANR	5211020	PtrMemberAccess	def -> flags		5210737	0					
ANR	5211021	Identifier	def		5210737	0					
ANR	5211022	Identifier	flags		5210737	1					
ANR	5211023	Identifier	TCG_OPF_BB_END		5210737	1					
ANR	5211024	CompoundStatement		89:45:1458:1458	5210737	1					
ANR	5211025	ExpressionStatement	call_flags = 0	95:16:1580:1594	5210737	0	True				
ANR	5211026	AssignmentExpression	call_flags = 0		5210737	0		=			
ANR	5211027	Identifier	call_flags		5210737	0					
ANR	5211028	PrimaryExpression	0		5210737	1					
ANR	5211029	ElseStatement	else		5210737	0					
ANR	5211030	IfStatement	if ( def -> flags & TCG_OPF_SIDE_EFFECTS )		5210737	0					
ANR	5211031	Condition	def -> flags & TCG_OPF_SIDE_EFFECTS	97:23:1620:1652	5210737	0	True				
ANR	5211032	BitAndExpression	def -> flags & TCG_OPF_SIDE_EFFECTS		5210737	0		&			
ANR	5211033	PtrMemberAccess	def -> flags		5210737	0					
ANR	5211034	Identifier	def		5210737	0					
ANR	5211035	Identifier	flags		5210737	1					
ANR	5211036	Identifier	TCG_OPF_SIDE_EFFECTS		5210737	1					
ANR	5211037	CompoundStatement		95:58:1610:1610	5210737	1					
ANR	5211038	ExpressionStatement	call_flags = TCG_CALL_NO_WRITE_GLOBALS	101:16:1732:1770	5210737	0	True				
ANR	5211039	AssignmentExpression	call_flags = TCG_CALL_NO_WRITE_GLOBALS		5210737	0		=			
ANR	5211040	Identifier	call_flags		5210737	0					
ANR	5211041	Identifier	TCG_CALL_NO_WRITE_GLOBALS		5210737	1					
ANR	5211042	ElseStatement	else		5210737	0					
ANR	5211043	CompoundStatement		101:19:1747:1747	5210737	0					
ANR	5211044	ExpressionStatement	call_flags = ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS )	107:16:1857:1955	5210737	0	True				
ANR	5211045	AssignmentExpression	call_flags = ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS )		5210737	0		=			
ANR	5211046	Identifier	call_flags		5210737	0					
ANR	5211047	InclusiveOrExpression	TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS		5210737	1		|			
ANR	5211048	Identifier	TCG_CALL_NO_READ_GLOBALS		5210737	0					
ANR	5211049	Identifier	TCG_CALL_NO_WRITE_GLOBALS		5210737	1					
ANR	5211050	ForStatement	for ( i = nb_oargs ; i < nb_iargs + nb_oargs ; i ++ )		5210737	8					
ANR	5211051	ForInit	i = nb_oargs ;	119:13:2061:2073	5210737	0	True				
ANR	5211052	AssignmentExpression	i = nb_oargs		5210737	0		=			
ANR	5211053	Identifier	i		5210737	0					
ANR	5211054	Identifier	nb_oargs		5210737	1					
ANR	5211055	Condition	i < nb_iargs + nb_oargs	119:27:2075:2097	5210737	1	True				
ANR	5211056	RelationalExpression	i < nb_iargs + nb_oargs		5210737	0		<			
ANR	5211057	Identifier	i		5210737	0					
ANR	5211058	AdditiveExpression	nb_iargs + nb_oargs		5210737	1		+			
ANR	5211059	Identifier	nb_iargs		5210737	0					
ANR	5211060	Identifier	nb_oargs		5210737	1					
ANR	5211061	PostIncDecOperationExpression	i ++	119:52:2100:2102	5210737	2	True				
ANR	5211062	Identifier	i		5210737	0					
ANR	5211063	IncDec	++		5210737	1					
ANR	5211064	CompoundStatement		117:57:2060:2060	5210737	3					
ANR	5211065	ExpressionStatement	arg_ts = arg_temp ( op -> args [ i ] )	121:12:2120:2150	5210737	0	True				
ANR	5211066	AssignmentExpression	arg_ts = arg_temp ( op -> args [ i ] )		5210737	0		=			
ANR	5211067	Identifier	arg_ts		5210737	0					
ANR	5211068	CallExpression	arg_temp ( op -> args [ i ] )		5210737	1					
ANR	5211069	Callee	arg_temp		5210737	0					
ANR	5211070	Identifier	arg_temp		5210737	0					
ANR	5211071	ArgumentList	op -> args [ i ]		5210737	1					
ANR	5211072	Argument	op -> args [ i ]		5210737	0					
ANR	5211073	ArrayIndexing	op -> args [ i ]		5210737	0					
ANR	5211074	PtrMemberAccess	op -> args		5210737	0					
ANR	5211075	Identifier	op		5210737	0					
ANR	5211076	Identifier	args		5210737	1					
ANR	5211077	Identifier	i		5210737	1					
ANR	5211078	IfStatement	if ( arg_ts )		5210737	1					
ANR	5211079	Condition	arg_ts	123:16:2169:2174	5210737	0	True				
ANR	5211080	Identifier	arg_ts		5210737	0					
ANR	5211081	CompoundStatement		121:24:2132:2132	5210737	1					
ANR	5211082	ExpressionStatement	dir_ts = arg_ts -> state_ptr	125:16:2196:2222	5210737	0	True				
ANR	5211083	AssignmentExpression	dir_ts = arg_ts -> state_ptr		5210737	0		=			
ANR	5211084	Identifier	dir_ts		5210737	0					
ANR	5211085	PtrMemberAccess	arg_ts -> state_ptr		5210737	1					
ANR	5211086	Identifier	arg_ts		5210737	0					
ANR	5211087	Identifier	state_ptr		5210737	1					
ANR	5211088	IfStatement	if ( dir_ts && arg_ts -> state == TS_DEAD )		5210737	1					
ANR	5211089	Condition	dir_ts && arg_ts -> state == TS_DEAD	127:20:2245:2278	5210737	0	True				
ANR	5211090	AndExpression	dir_ts && arg_ts -> state == TS_DEAD		5210737	0		&&			
ANR	5211091	Identifier	dir_ts		5210737	0					
ANR	5211092	EqualityExpression	arg_ts -> state == TS_DEAD		5210737	1		==			
ANR	5211093	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211094	Identifier	arg_ts		5210737	0					
ANR	5211095	Identifier	state		5210737	1					
ANR	5211096	Identifier	TS_DEAD		5210737	1					
ANR	5211097	CompoundStatement		133:20:2443:2492	5210737	1					
ANR	5211098	IdentifierDeclStatement	TCGOpcode lopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_ld_i32 : INDEX_op_ld_i64 ) ;	129:20:2304:2465	5210737	0	True				
ANR	5211099	IdentifierDecl	lopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_ld_i32 : INDEX_op_ld_i64 )		5210737	0					
ANR	5211100	IdentifierDeclType	TCGOpcode		5210737	0					
ANR	5211101	Identifier	lopc		5210737	1					
ANR	5211102	AssignmentExpression	lopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_ld_i32 : INDEX_op_ld_i64 )		5210737	2		=			
ANR	5211103	Identifier	lopc		5210737	0					
ANR	5211104	ConditionalExpression	arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_ld_i32 : INDEX_op_ld_i64		5210737	1					
ANR	5211105	Condition	arg_ts -> type == TCG_TYPE_I32		5210737	0					
ANR	5211106	EqualityExpression	arg_ts -> type == TCG_TYPE_I32		5210737	0		==			
ANR	5211107	PtrMemberAccess	arg_ts -> type		5210737	0					
ANR	5211108	Identifier	arg_ts		5210737	0					
ANR	5211109	Identifier	type		5210737	1					
ANR	5211110	Identifier	TCG_TYPE_I32		5210737	1					
ANR	5211111	Identifier	INDEX_op_ld_i32		5210737	1					
ANR	5211112	Identifier	INDEX_op_ld_i64		5210737	2					
ANR	5211113	IdentifierDeclStatement	"TCGOp * lop = tcg_op_insert_before ( s , op , lopc , 3 ) ;"	135:20:2488:2537	5210737	1	True				
ANR	5211114	IdentifierDecl	"* lop = tcg_op_insert_before ( s , op , lopc , 3 )"		5210737	0					
ANR	5211115	IdentifierDeclType	TCGOp *		5210737	0					
ANR	5211116	Identifier	lop		5210737	1					
ANR	5211117	AssignmentExpression	"* lop = tcg_op_insert_before ( s , op , lopc , 3 )"		5210737	2		=			
ANR	5211118	Identifier	lop		5210737	0					
ANR	5211119	CallExpression	"tcg_op_insert_before ( s , op , lopc , 3 )"		5210737	1					
ANR	5211120	Callee	tcg_op_insert_before		5210737	0					
ANR	5211121	Identifier	tcg_op_insert_before		5210737	0					
ANR	5211122	ArgumentList	s		5210737	1					
ANR	5211123	Argument	s		5210737	0					
ANR	5211124	Identifier	s		5210737	0					
ANR	5211125	Argument	op		5210737	1					
ANR	5211126	Identifier	op		5210737	0					
ANR	5211127	Argument	lopc		5210737	2					
ANR	5211128	Identifier	lopc		5210737	0					
ANR	5211129	Argument	3		5210737	3					
ANR	5211130	PrimaryExpression	3		5210737	0					
ANR	5211131	ExpressionStatement	lop -> args [ 0 ] = temp_arg ( dir_ts )	139:20:2562:2593	5210737	2	True				
ANR	5211132	AssignmentExpression	lop -> args [ 0 ] = temp_arg ( dir_ts )		5210737	0		=			
ANR	5211133	ArrayIndexing	lop -> args [ 0 ]		5210737	0					
ANR	5211134	PtrMemberAccess	lop -> args		5210737	0					
ANR	5211135	Identifier	lop		5210737	0					
ANR	5211136	Identifier	args		5210737	1					
ANR	5211137	PrimaryExpression	0		5210737	1					
ANR	5211138	CallExpression	temp_arg ( dir_ts )		5210737	1					
ANR	5211139	Callee	temp_arg		5210737	0					
ANR	5211140	Identifier	temp_arg		5210737	0					
ANR	5211141	ArgumentList	dir_ts		5210737	1					
ANR	5211142	Argument	dir_ts		5210737	0					
ANR	5211143	Identifier	dir_ts		5210737	0					
ANR	5211144	ExpressionStatement	lop -> args [ 1 ] = temp_arg ( arg_ts -> mem_base )	141:20:2616:2657	5210737	3	True				
ANR	5211145	AssignmentExpression	lop -> args [ 1 ] = temp_arg ( arg_ts -> mem_base )		5210737	0		=			
ANR	5211146	ArrayIndexing	lop -> args [ 1 ]		5210737	0					
ANR	5211147	PtrMemberAccess	lop -> args		5210737	0					
ANR	5211148	Identifier	lop		5210737	0					
ANR	5211149	Identifier	args		5210737	1					
ANR	5211150	PrimaryExpression	1		5210737	1					
ANR	5211151	CallExpression	temp_arg ( arg_ts -> mem_base )		5210737	1					
ANR	5211152	Callee	temp_arg		5210737	0					
ANR	5211153	Identifier	temp_arg		5210737	0					
ANR	5211154	ArgumentList	arg_ts -> mem_base		5210737	1					
ANR	5211155	Argument	arg_ts -> mem_base		5210737	0					
ANR	5211156	PtrMemberAccess	arg_ts -> mem_base		5210737	0					
ANR	5211157	Identifier	arg_ts		5210737	0					
ANR	5211158	Identifier	mem_base		5210737	1					
ANR	5211159	ExpressionStatement	lop -> args [ 2 ] = arg_ts -> mem_offset	143:20:2680:2713	5210737	4	True				
ANR	5211160	AssignmentExpression	lop -> args [ 2 ] = arg_ts -> mem_offset		5210737	0		=			
ANR	5211161	ArrayIndexing	lop -> args [ 2 ]		5210737	0					
ANR	5211162	PtrMemberAccess	lop -> args		5210737	0					
ANR	5211163	Identifier	lop		5210737	0					
ANR	5211164	Identifier	args		5210737	1					
ANR	5211165	PrimaryExpression	2		5210737	1					
ANR	5211166	PtrMemberAccess	arg_ts -> mem_offset		5210737	1					
ANR	5211167	Identifier	arg_ts		5210737	0					
ANR	5211168	Identifier	mem_offset		5210737	1					
ANR	5211169	ExpressionStatement	arg_ts -> state = TS_MEM	149:20:2798:2820	5210737	5	True				
ANR	5211170	AssignmentExpression	arg_ts -> state = TS_MEM		5210737	0		=			
ANR	5211171	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211172	Identifier	arg_ts		5210737	0					
ANR	5211173	Identifier	state		5210737	1					
ANR	5211174	Identifier	TS_MEM		5210737	1					
ANR	5211175	ForStatement	for ( i = nb_oargs ; i < nb_iargs + nb_oargs ; i ++ )		5210737	9					
ANR	5211176	ForInit	i = nb_oargs ;	165:13:3074:3086	5210737	0	True				
ANR	5211177	AssignmentExpression	i = nb_oargs		5210737	0		=			
ANR	5211178	Identifier	i		5210737	0					
ANR	5211179	Identifier	nb_oargs		5210737	1					
ANR	5211180	Condition	i < nb_iargs + nb_oargs	165:27:3088:3110	5210737	1	True				
ANR	5211181	RelationalExpression	i < nb_iargs + nb_oargs		5210737	0		<			
ANR	5211182	Identifier	i		5210737	0					
ANR	5211183	AdditiveExpression	nb_iargs + nb_oargs		5210737	1		+			
ANR	5211184	Identifier	nb_iargs		5210737	0					
ANR	5211185	Identifier	nb_oargs		5210737	1					
ANR	5211186	PostIncDecOperationExpression	i ++	165:52:3113:3115	5210737	2	True				
ANR	5211187	Identifier	i		5210737	0					
ANR	5211188	IncDec	++		5210737	1					
ANR	5211189	CompoundStatement		163:57:3073:3073	5210737	3					
ANR	5211190	ExpressionStatement	arg_ts = arg_temp ( op -> args [ i ] )	167:12:3133:3163	5210737	0	True				
ANR	5211191	AssignmentExpression	arg_ts = arg_temp ( op -> args [ i ] )		5210737	0		=			
ANR	5211192	Identifier	arg_ts		5210737	0					
ANR	5211193	CallExpression	arg_temp ( op -> args [ i ] )		5210737	1					
ANR	5211194	Callee	arg_temp		5210737	0					
ANR	5211195	Identifier	arg_temp		5210737	0					
ANR	5211196	ArgumentList	op -> args [ i ]		5210737	1					
ANR	5211197	Argument	op -> args [ i ]		5210737	0					
ANR	5211198	ArrayIndexing	op -> args [ i ]		5210737	0					
ANR	5211199	PtrMemberAccess	op -> args		5210737	0					
ANR	5211200	Identifier	op		5210737	0					
ANR	5211201	Identifier	args		5210737	1					
ANR	5211202	Identifier	i		5210737	1					
ANR	5211203	IfStatement	if ( arg_ts )		5210737	1					
ANR	5211204	Condition	arg_ts	169:16:3182:3187	5210737	0	True				
ANR	5211205	Identifier	arg_ts		5210737	0					
ANR	5211206	CompoundStatement		167:24:3145:3145	5210737	1					
ANR	5211207	ExpressionStatement	dir_ts = arg_ts -> state_ptr	171:16:3209:3235	5210737	0	True				
ANR	5211208	AssignmentExpression	dir_ts = arg_ts -> state_ptr		5210737	0		=			
ANR	5211209	Identifier	dir_ts		5210737	0					
ANR	5211210	PtrMemberAccess	arg_ts -> state_ptr		5210737	1					
ANR	5211211	Identifier	arg_ts		5210737	0					
ANR	5211212	Identifier	state_ptr		5210737	1					
ANR	5211213	IfStatement	if ( dir_ts )		5210737	1					
ANR	5211214	Condition	dir_ts	173:20:3258:3263	5210737	0	True				
ANR	5211215	Identifier	dir_ts		5210737	0					
ANR	5211216	CompoundStatement		171:28:3221:3221	5210737	1					
ANR	5211217	ExpressionStatement	op -> args [ i ] = temp_arg ( dir_ts )	175:20:3289:3319	5210737	0	True				
ANR	5211218	AssignmentExpression	op -> args [ i ] = temp_arg ( dir_ts )		5210737	0		=			
ANR	5211219	ArrayIndexing	op -> args [ i ]		5210737	0					
ANR	5211220	PtrMemberAccess	op -> args		5210737	0					
ANR	5211221	Identifier	op		5210737	0					
ANR	5211222	Identifier	args		5210737	1					
ANR	5211223	Identifier	i		5210737	1					
ANR	5211224	CallExpression	temp_arg ( dir_ts )		5210737	1					
ANR	5211225	Callee	temp_arg		5210737	0					
ANR	5211226	Identifier	temp_arg		5210737	0					
ANR	5211227	ArgumentList	dir_ts		5210737	1					
ANR	5211228	Argument	dir_ts		5210737	0					
ANR	5211229	Identifier	dir_ts		5210737	0					
ANR	5211230	ExpressionStatement	changes = true	177:20:3342:3356	5210737	1	True				
ANR	5211231	AssignmentExpression	changes = true		5210737	0		=			
ANR	5211232	Identifier	changes		5210737	0					
ANR	5211233	Identifier	true		5210737	1					
ANR	5211234	IfStatement	if ( IS_DEAD_ARG ( i ) )		5210737	2					
ANR	5211235	Condition	IS_DEAD_ARG ( i )	179:24:3383:3396	5210737	0	True				
ANR	5211236	CallExpression	IS_DEAD_ARG ( i )		5210737	0					
ANR	5211237	Callee	IS_DEAD_ARG		5210737	0					
ANR	5211238	Identifier	IS_DEAD_ARG		5210737	0					
ANR	5211239	ArgumentList	i		5210737	1					
ANR	5211240	Argument	i		5210737	0					
ANR	5211241	Identifier	i		5210737	0					
ANR	5211242	CompoundStatement		177:40:3354:3354	5210737	1					
ANR	5211243	ExpressionStatement	arg_ts -> state = TS_DEAD	181:24:3426:3449	5210737	0	True				
ANR	5211244	AssignmentExpression	arg_ts -> state = TS_DEAD		5210737	0		=			
ANR	5211245	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211246	Identifier	arg_ts		5210737	0					
ANR	5211247	Identifier	state		5210737	1					
ANR	5211248	Identifier	TS_DEAD		5210737	1					
ANR	5211249	IfStatement	if ( call_flags & TCG_CALL_NO_READ_GLOBALS )		5210737	10					
ANR	5211250	Condition	call_flags & TCG_CALL_NO_READ_GLOBALS	197:12:3673:3709	5210737	0	True				
ANR	5211251	BitAndExpression	call_flags & TCG_CALL_NO_READ_GLOBALS		5210737	0		&			
ANR	5211252	Identifier	call_flags		5210737	0					
ANR	5211253	Identifier	TCG_CALL_NO_READ_GLOBALS		5210737	1					
ANR	5211254	CompoundStatement		195:51:3667:3667	5210737	1					
ANR	5211255	ElseStatement	else		5210737	0					
ANR	5211256	IfStatement	if ( call_flags & TCG_CALL_NO_WRITE_GLOBALS )		5210737	0					
ANR	5211257	Condition	call_flags & TCG_CALL_NO_WRITE_GLOBALS	201:19:3767:3804	5210737	0	True				
ANR	5211258	BitAndExpression	call_flags & TCG_CALL_NO_WRITE_GLOBALS		5210737	0		&			
ANR	5211259	Identifier	call_flags		5210737	0					
ANR	5211260	Identifier	TCG_CALL_NO_WRITE_GLOBALS		5210737	1					
ANR	5211261	CompoundStatement		199:59:3762:3762	5210737	1					
ANR	5211262	ForStatement	for ( i = 0 ; i < nb_globals ; ++ i )		5210737	0					
ANR	5211263	ForInit	i = 0 ;	203:17:3827:3832	5210737	0	True				
ANR	5211264	AssignmentExpression	i = 0		5210737	0		=			
ANR	5211265	Identifier	i		5210737	0					
ANR	5211266	PrimaryExpression	0		5210737	1					
ANR	5211267	Condition	i < nb_globals	203:24:3834:3847	5210737	1	True				
ANR	5211268	RelationalExpression	i < nb_globals		5210737	0		<			
ANR	5211269	Identifier	i		5210737	0					
ANR	5211270	Identifier	nb_globals		5210737	1					
ANR	5211271	UnaryExpression	++ i	203:40:3850:3852	5210737	2	True				
ANR	5211272	IncDec	++		5210737	0					
ANR	5211273	Identifier	i		5210737	1					
ANR	5211274	CompoundStatement		201:45:3810:3810	5210737	3					
ANR	5211275	ExpressionStatement	arg_ts = & s -> temps [ i ]	209:16:4003:4024	5210737	0	True				
ANR	5211276	AssignmentExpression	arg_ts = & s -> temps [ i ]		5210737	0		=			
ANR	5211277	Identifier	arg_ts		5210737	0					
ANR	5211278	UnaryOperationExpression	& s -> temps [ i ]		5210737	1					
ANR	5211279	UnaryOperator	&		5210737	0					
ANR	5211280	ArrayIndexing	s -> temps [ i ]		5210737	1					
ANR	5211281	PtrMemberAccess	s -> temps		5210737	0					
ANR	5211282	Identifier	s		5210737	0					
ANR	5211283	Identifier	temps		5210737	1					
ANR	5211284	Identifier	i		5210737	1					
ANR	5211285	ExpressionStatement	tcg_debug_assert ( arg_ts -> state_ptr == 0 || arg_ts -> state != 0 )	211:16:4043:4139	5210737	1	True				
ANR	5211286	CallExpression	tcg_debug_assert ( arg_ts -> state_ptr == 0 || arg_ts -> state != 0 )		5210737	0					
ANR	5211287	Callee	tcg_debug_assert		5210737	0					
ANR	5211288	Identifier	tcg_debug_assert		5210737	0					
ANR	5211289	ArgumentList	arg_ts -> state_ptr == 0 || arg_ts -> state != 0		5210737	1					
ANR	5211290	Argument	arg_ts -> state_ptr == 0 || arg_ts -> state != 0		5210737	0					
ANR	5211291	OrExpression	arg_ts -> state_ptr == 0 || arg_ts -> state != 0		5210737	0		||			
ANR	5211292	EqualityExpression	arg_ts -> state_ptr == 0		5210737	0		==			
ANR	5211293	PtrMemberAccess	arg_ts -> state_ptr		5210737	0					
ANR	5211294	Identifier	arg_ts		5210737	0					
ANR	5211295	Identifier	state_ptr		5210737	1					
ANR	5211296	PrimaryExpression	0		5210737	1					
ANR	5211297	EqualityExpression	arg_ts -> state != 0		5210737	1		!=			
ANR	5211298	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211299	Identifier	arg_ts		5210737	0					
ANR	5211300	Identifier	state		5210737	1					
ANR	5211301	PrimaryExpression	0		5210737	1					
ANR	5211302	ElseStatement	else		5210737	0					
ANR	5211303	CompoundStatement		215:15:4127:4127	5210737	0					
ANR	5211304	ForStatement	for ( i = 0 ; i < nb_globals ; ++ i )		5210737	0					
ANR	5211305	ForInit	i = 0 ;	219:17:4192:4197	5210737	0	True				
ANR	5211306	AssignmentExpression	i = 0		5210737	0		=			
ANR	5211307	Identifier	i		5210737	0					
ANR	5211308	PrimaryExpression	0		5210737	1					
ANR	5211309	Condition	i < nb_globals	219:24:4199:4212	5210737	1	True				
ANR	5211310	RelationalExpression	i < nb_globals		5210737	0		<			
ANR	5211311	Identifier	i		5210737	0					
ANR	5211312	Identifier	nb_globals		5210737	1					
ANR	5211313	UnaryExpression	++ i	219:40:4215:4217	5210737	2	True				
ANR	5211314	IncDec	++		5210737	0					
ANR	5211315	Identifier	i		5210737	1					
ANR	5211316	CompoundStatement		217:45:4175:4175	5210737	3					
ANR	5211317	ExpressionStatement	arg_ts = & s -> temps [ i ]	225:16:4374:4395	5210737	0	True				
ANR	5211318	AssignmentExpression	arg_ts = & s -> temps [ i ]		5210737	0		=			
ANR	5211319	Identifier	arg_ts		5210737	0					
ANR	5211320	UnaryOperationExpression	& s -> temps [ i ]		5210737	1					
ANR	5211321	UnaryOperator	&		5210737	0					
ANR	5211322	ArrayIndexing	s -> temps [ i ]		5210737	1					
ANR	5211323	PtrMemberAccess	s -> temps		5210737	0					
ANR	5211324	Identifier	s		5210737	0					
ANR	5211325	Identifier	temps		5210737	1					
ANR	5211326	Identifier	i		5210737	1					
ANR	5211327	ExpressionStatement	tcg_debug_assert ( arg_ts -> state_ptr == 0 || arg_ts -> state == TS_DEAD )	227:16:4414:4516	5210737	1	True				
ANR	5211328	CallExpression	tcg_debug_assert ( arg_ts -> state_ptr == 0 || arg_ts -> state == TS_DEAD )		5210737	0					
ANR	5211329	Callee	tcg_debug_assert		5210737	0					
ANR	5211330	Identifier	tcg_debug_assert		5210737	0					
ANR	5211331	ArgumentList	arg_ts -> state_ptr == 0 || arg_ts -> state == TS_DEAD		5210737	1					
ANR	5211332	Argument	arg_ts -> state_ptr == 0 || arg_ts -> state == TS_DEAD		5210737	0					
ANR	5211333	OrExpression	arg_ts -> state_ptr == 0 || arg_ts -> state == TS_DEAD		5210737	0		||			
ANR	5211334	EqualityExpression	arg_ts -> state_ptr == 0		5210737	0		==			
ANR	5211335	PtrMemberAccess	arg_ts -> state_ptr		5210737	0					
ANR	5211336	Identifier	arg_ts		5210737	0					
ANR	5211337	Identifier	state_ptr		5210737	1					
ANR	5211338	PrimaryExpression	0		5210737	1					
ANR	5211339	EqualityExpression	arg_ts -> state == TS_DEAD		5210737	1		==			
ANR	5211340	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211341	Identifier	arg_ts		5210737	0					
ANR	5211342	Identifier	state		5210737	1					
ANR	5211343	Identifier	TS_DEAD		5210737	1					
ANR	5211344	ForStatement	for ( i = 0 ; i < nb_oargs ; i ++ )		5210737	11					
ANR	5211345	ForInit	i = 0 ;	239:13:4602:4607	5210737	0	True				
ANR	5211346	AssignmentExpression	i = 0		5210737	0		=			
ANR	5211347	Identifier	i		5210737	0					
ANR	5211348	PrimaryExpression	0		5210737	1					
ANR	5211349	Condition	i < nb_oargs	239:20:4609:4620	5210737	1	True				
ANR	5211350	RelationalExpression	i < nb_oargs		5210737	0		<			
ANR	5211351	Identifier	i		5210737	0					
ANR	5211352	Identifier	nb_oargs		5210737	1					
ANR	5211353	PostIncDecOperationExpression	i ++	239:34:4623:4625	5210737	2	True				
ANR	5211354	Identifier	i		5210737	0					
ANR	5211355	IncDec	++		5210737	1					
ANR	5211356	CompoundStatement		237:39:4583:4583	5210737	3					
ANR	5211357	ExpressionStatement	arg_ts = arg_temp ( op -> args [ i ] )	241:12:4643:4673	5210737	0	True				
ANR	5211358	AssignmentExpression	arg_ts = arg_temp ( op -> args [ i ] )		5210737	0		=			
ANR	5211359	Identifier	arg_ts		5210737	0					
ANR	5211360	CallExpression	arg_temp ( op -> args [ i ] )		5210737	1					
ANR	5211361	Callee	arg_temp		5210737	0					
ANR	5211362	Identifier	arg_temp		5210737	0					
ANR	5211363	ArgumentList	op -> args [ i ]		5210737	1					
ANR	5211364	Argument	op -> args [ i ]		5210737	0					
ANR	5211365	ArrayIndexing	op -> args [ i ]		5210737	0					
ANR	5211366	PtrMemberAccess	op -> args		5210737	0					
ANR	5211367	Identifier	op		5210737	0					
ANR	5211368	Identifier	args		5210737	1					
ANR	5211369	Identifier	i		5210737	1					
ANR	5211370	ExpressionStatement	dir_ts = arg_ts -> state_ptr	243:12:4688:4714	5210737	1	True				
ANR	5211371	AssignmentExpression	dir_ts = arg_ts -> state_ptr		5210737	0		=			
ANR	5211372	Identifier	dir_ts		5210737	0					
ANR	5211373	PtrMemberAccess	arg_ts -> state_ptr		5210737	1					
ANR	5211374	Identifier	arg_ts		5210737	0					
ANR	5211375	Identifier	state_ptr		5210737	1					
ANR	5211376	IfStatement	if ( ! dir_ts )		5210737	2					
ANR	5211377	Condition	! dir_ts	245:16:4733:4739	5210737	0	True				
ANR	5211378	UnaryOperationExpression	! dir_ts		5210737	0					
ANR	5211379	UnaryOperator	!		5210737	0					
ANR	5211380	Identifier	dir_ts		5210737	1					
ANR	5211381	CompoundStatement		243:25:4697:4697	5210737	1					
ANR	5211382	ContinueStatement	continue ;	247:16:4761:4769	5210737	0	True				
ANR	5211383	ExpressionStatement	op -> args [ i ] = temp_arg ( dir_ts )	251:12:4799:4829	5210737	3	True				
ANR	5211384	AssignmentExpression	op -> args [ i ] = temp_arg ( dir_ts )		5210737	0		=			
ANR	5211385	ArrayIndexing	op -> args [ i ]		5210737	0					
ANR	5211386	PtrMemberAccess	op -> args		5210737	0					
ANR	5211387	Identifier	op		5210737	0					
ANR	5211388	Identifier	args		5210737	1					
ANR	5211389	Identifier	i		5210737	1					
ANR	5211390	CallExpression	temp_arg ( dir_ts )		5210737	1					
ANR	5211391	Callee	temp_arg		5210737	0					
ANR	5211392	Identifier	temp_arg		5210737	0					
ANR	5211393	ArgumentList	dir_ts		5210737	1					
ANR	5211394	Argument	dir_ts		5210737	0					
ANR	5211395	Identifier	dir_ts		5210737	0					
ANR	5211396	ExpressionStatement	changes = true	253:12:4844:4858	5210737	4	True				
ANR	5211397	AssignmentExpression	changes = true		5210737	0		=			
ANR	5211398	Identifier	changes		5210737	0					
ANR	5211399	Identifier	true		5210737	1					
ANR	5211400	ExpressionStatement	arg_ts -> state = 0	259:12:4932:4949	5210737	5	True				
ANR	5211401	AssignmentExpression	arg_ts -> state = 0		5210737	0		=			
ANR	5211402	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211403	Identifier	arg_ts		5210737	0					
ANR	5211404	Identifier	state		5210737	1					
ANR	5211405	PrimaryExpression	0		5210737	1					
ANR	5211406	IfStatement	if ( NEED_SYNC_ARG ( i ) )		5210737	6					
ANR	5211407	Condition	NEED_SYNC_ARG ( i )	265:16:5026:5041	5210737	0	True				
ANR	5211408	CallExpression	NEED_SYNC_ARG ( i )		5210737	0					
ANR	5211409	Callee	NEED_SYNC_ARG		5210737	0					
ANR	5211410	Identifier	NEED_SYNC_ARG		5210737	0					
ANR	5211411	ArgumentList	i		5210737	1					
ANR	5211412	Argument	i		5210737	0					
ANR	5211413	Identifier	i		5210737	0					
ANR	5211414	CompoundStatement		271:16:5190:5238	5210737	1					
ANR	5211415	IdentifierDeclStatement	TCGOpcode sopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_st_i32 : INDEX_op_st_i64 ) ;	267:16:5063:5216	5210737	0	True				
ANR	5211416	IdentifierDecl	sopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_st_i32 : INDEX_op_st_i64 )		5210737	0					
ANR	5211417	IdentifierDeclType	TCGOpcode		5210737	0					
ANR	5211418	Identifier	sopc		5210737	1					
ANR	5211419	AssignmentExpression	sopc = ( arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_st_i32 : INDEX_op_st_i64 )		5210737	2		=			
ANR	5211420	Identifier	sopc		5210737	0					
ANR	5211421	ConditionalExpression	arg_ts -> type == TCG_TYPE_I32 ? INDEX_op_st_i32 : INDEX_op_st_i64		5210737	1					
ANR	5211422	Condition	arg_ts -> type == TCG_TYPE_I32		5210737	0					
ANR	5211423	EqualityExpression	arg_ts -> type == TCG_TYPE_I32		5210737	0		==			
ANR	5211424	PtrMemberAccess	arg_ts -> type		5210737	0					
ANR	5211425	Identifier	arg_ts		5210737	0					
ANR	5211426	Identifier	type		5210737	1					
ANR	5211427	Identifier	TCG_TYPE_I32		5210737	1					
ANR	5211428	Identifier	INDEX_op_st_i32		5210737	1					
ANR	5211429	Identifier	INDEX_op_st_i64		5210737	2					
ANR	5211430	IdentifierDeclStatement	"TCGOp * sop = tcg_op_insert_after ( s , op , sopc , 3 ) ;"	273:16:5235:5283	5210737	1	True				
ANR	5211431	IdentifierDecl	"* sop = tcg_op_insert_after ( s , op , sopc , 3 )"		5210737	0					
ANR	5211432	IdentifierDeclType	TCGOp *		5210737	0					
ANR	5211433	Identifier	sop		5210737	1					
ANR	5211434	AssignmentExpression	"* sop = tcg_op_insert_after ( s , op , sopc , 3 )"		5210737	2		=			
ANR	5211435	Identifier	sop		5210737	0					
ANR	5211436	CallExpression	"tcg_op_insert_after ( s , op , sopc , 3 )"		5210737	1					
ANR	5211437	Callee	tcg_op_insert_after		5210737	0					
ANR	5211438	Identifier	tcg_op_insert_after		5210737	0					
ANR	5211439	ArgumentList	s		5210737	1					
ANR	5211440	Argument	s		5210737	0					
ANR	5211441	Identifier	s		5210737	0					
ANR	5211442	Argument	op		5210737	1					
ANR	5211443	Identifier	op		5210737	0					
ANR	5211444	Argument	sopc		5210737	2					
ANR	5211445	Identifier	sopc		5210737	0					
ANR	5211446	Argument	3		5210737	3					
ANR	5211447	PrimaryExpression	3		5210737	0					
ANR	5211448	ExpressionStatement	sop -> args [ 0 ] = temp_arg ( dir_ts )	277:16:5304:5335	5210737	2	True				
ANR	5211449	AssignmentExpression	sop -> args [ 0 ] = temp_arg ( dir_ts )		5210737	0		=			
ANR	5211450	ArrayIndexing	sop -> args [ 0 ]		5210737	0					
ANR	5211451	PtrMemberAccess	sop -> args		5210737	0					
ANR	5211452	Identifier	sop		5210737	0					
ANR	5211453	Identifier	args		5210737	1					
ANR	5211454	PrimaryExpression	0		5210737	1					
ANR	5211455	CallExpression	temp_arg ( dir_ts )		5210737	1					
ANR	5211456	Callee	temp_arg		5210737	0					
ANR	5211457	Identifier	temp_arg		5210737	0					
ANR	5211458	ArgumentList	dir_ts		5210737	1					
ANR	5211459	Argument	dir_ts		5210737	0					
ANR	5211460	Identifier	dir_ts		5210737	0					
ANR	5211461	ExpressionStatement	sop -> args [ 1 ] = temp_arg ( arg_ts -> mem_base )	279:16:5354:5395	5210737	3	True				
ANR	5211462	AssignmentExpression	sop -> args [ 1 ] = temp_arg ( arg_ts -> mem_base )		5210737	0		=			
ANR	5211463	ArrayIndexing	sop -> args [ 1 ]		5210737	0					
ANR	5211464	PtrMemberAccess	sop -> args		5210737	0					
ANR	5211465	Identifier	sop		5210737	0					
ANR	5211466	Identifier	args		5210737	1					
ANR	5211467	PrimaryExpression	1		5210737	1					
ANR	5211468	CallExpression	temp_arg ( arg_ts -> mem_base )		5210737	1					
ANR	5211469	Callee	temp_arg		5210737	0					
ANR	5211470	Identifier	temp_arg		5210737	0					
ANR	5211471	ArgumentList	arg_ts -> mem_base		5210737	1					
ANR	5211472	Argument	arg_ts -> mem_base		5210737	0					
ANR	5211473	PtrMemberAccess	arg_ts -> mem_base		5210737	0					
ANR	5211474	Identifier	arg_ts		5210737	0					
ANR	5211475	Identifier	mem_base		5210737	1					
ANR	5211476	ExpressionStatement	sop -> args [ 2 ] = arg_ts -> mem_offset	281:16:5414:5447	5210737	4	True				
ANR	5211477	AssignmentExpression	sop -> args [ 2 ] = arg_ts -> mem_offset		5210737	0		=			
ANR	5211478	ArrayIndexing	sop -> args [ 2 ]		5210737	0					
ANR	5211479	PtrMemberAccess	sop -> args		5210737	0					
ANR	5211480	Identifier	sop		5210737	0					
ANR	5211481	Identifier	args		5210737	1					
ANR	5211482	PrimaryExpression	2		5210737	1					
ANR	5211483	PtrMemberAccess	arg_ts -> mem_offset		5210737	1					
ANR	5211484	Identifier	arg_ts		5210737	0					
ANR	5211485	Identifier	mem_offset		5210737	1					
ANR	5211486	ExpressionStatement	arg_ts -> state = TS_MEM	285:16:5468:5490	5210737	5	True				
ANR	5211487	AssignmentExpression	arg_ts -> state = TS_MEM		5210737	0		=			
ANR	5211488	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211489	Identifier	arg_ts		5210737	0					
ANR	5211490	Identifier	state		5210737	1					
ANR	5211491	Identifier	TS_MEM		5210737	1					
ANR	5211492	IfStatement	if ( IS_DEAD_ARG ( i ) )		5210737	7					
ANR	5211493	Condition	IS_DEAD_ARG ( i )	291:16:5572:5585	5210737	0	True				
ANR	5211494	CallExpression	IS_DEAD_ARG ( i )		5210737	0					
ANR	5211495	Callee	IS_DEAD_ARG		5210737	0					
ANR	5211496	Identifier	IS_DEAD_ARG		5210737	0					
ANR	5211497	ArgumentList	i		5210737	1					
ANR	5211498	Argument	i		5210737	0					
ANR	5211499	Identifier	i		5210737	0					
ANR	5211500	CompoundStatement		289:32:5543:5543	5210737	1					
ANR	5211501	ExpressionStatement	arg_ts -> state = TS_DEAD	293:16:5607:5630	5210737	0	True				
ANR	5211502	AssignmentExpression	arg_ts -> state = TS_DEAD		5210737	0		=			
ANR	5211503	PtrMemberAccess	arg_ts -> state		5210737	0					
ANR	5211504	Identifier	arg_ts		5210737	0					
ANR	5211505	Identifier	state		5210737	1					
ANR	5211506	Identifier	TS_DEAD		5210737	1					
ANR	5211507	ReturnStatement	return changes ;	303:4:5672:5686	5210737	6	True				
ANR	5211508	Identifier	changes		5210737	0					
ANR	5211509	ReturnType	static bool		5210737	1					
ANR	5211510	Identifier	liveness_pass_2		5210737	2					
ANR	5211511	ParameterList	TCGContext * s		5210737	3					
ANR	5211512	Parameter	TCGContext * s	1:28:28:40	5210737	0	True				
ANR	5211513	ParameterType	TCGContext *		5210737	0					
ANR	5211514	Identifier	s		5210737	1					
ANR	5211515	CFGEntryNode	ENTRY		5210737		True				
ANR	5211516	CFGExitNode	EXIT		5210737		True				
ANR	5211517	Symbol	sop -> args		5210737						
ANR	5211518	Symbol	def -> nb_oargs		5210737						
ANR	5211519	Symbol	* op		5210737						
ANR	5211520	Symbol	def		5210737						
ANR	5211521	Symbol	lopc		5210737						
ANR	5211522	Symbol	lop -> args		5210737						
ANR	5211523	Symbol	call_flags		5210737						
ANR	5211524	Symbol	* arg_ts		5210737						
ANR	5211525	Symbol	nb_iargs		5210737						
ANR	5211526	Symbol	op -> args		5210737						
ANR	5211527	Symbol	arg_temp		5210737						
ANR	5211528	Symbol	arg_ts -> type		5210737						
ANR	5211529	Symbol	its -> indirect_reg		5210737						
ANR	5211530	Symbol	sop		5210737						
ANR	5211531	Symbol	INDEX_op_call		5210737						
ANR	5211532	Symbol	op -> calli		5210737						
ANR	5211533	Symbol	s -> nb_temps		5210737						
ANR	5211534	Symbol	* nb_iargs		5210737						
ANR	5211535	Symbol	def -> flags		5210737						
ANR	5211536	Symbol	* * lop		5210737						
ANR	5211537	Symbol	NULL		5210737						
ANR	5211538	Symbol	opc		5210737						
ANR	5211539	Symbol	dts -> base_type		5210737						
ANR	5211540	Symbol	its		5210737						
ANR	5211541	Symbol	s -> gen_op_buf		5210737						
ANR	5211542	Symbol	TS_DEAD		5210737						
ANR	5211543	Symbol	TCG_OPF_BB_END		5210737						
ANR	5211544	Symbol	nb_globals		5210737						
ANR	5211545	Symbol	* dts		5210737						
ANR	5211546	Symbol	dts -> type		5210737						
ANR	5211547	Symbol	arg_ts -> mem_base		5210737						
ANR	5211548	Symbol	tcg_op_insert_after		5210737						
ANR	5211549	Symbol	arg_ts -> mem_offset		5210737						
ANR	5211550	Symbol	its -> state_ptr		5210737						
ANR	5211551	Symbol	* lop		5210737						
ANR	5211552	Symbol	true		5210737						
ANR	5211553	Symbol	tcg_op_defs		5210737						
ANR	5211554	Symbol	INDEX_op_ld_i64		5210737						
ANR	5211555	Symbol	* op -> args		5210737						
ANR	5211556	Symbol	NEED_SYNC_ARG		5210737						
ANR	5211557	Symbol	TCG_OPF_SIDE_EFFECTS		5210737						
ANR	5211558	Symbol	arg_ts -> state_ptr		5210737						
ANR	5211559	Symbol	INDEX_op_st_i64		5210737						
ANR	5211560	Symbol	nb_temps		5210737						
ANR	5211561	Symbol	changes		5210737						
ANR	5211562	Symbol	nb_oargs		5210737						
ANR	5211563	Symbol	lop		5210737						
ANR	5211564	Symbol	arg_life		5210737						
ANR	5211565	Symbol	arg_ts -> state		5210737						
ANR	5211566	Symbol	* * op		5210737						
ANR	5211567	Symbol	IS_DEAD_ARG		5210737						
ANR	5211568	Symbol	dir_ts		5210737						
ANR	5211569	Symbol	* def		5210737						
ANR	5211570	Symbol	* nb_oargs		5210737						
ANR	5211571	Symbol	oi_next		5210737						
ANR	5211572	Symbol	* s -> gen_op_buf		5210737						
ANR	5211573	Symbol	tcg_temp_alloc		5210737						
ANR	5211574	Symbol	* * s		5210737						
ANR	5211575	Symbol	TCG_TYPE_I32		5210737						
ANR	5211576	Symbol	INDEX_op_ld_i32		5210737						
ANR	5211577	Symbol	oi		5210737						
ANR	5211578	Symbol	tcg_op_insert_before		5210737						
ANR	5211579	Symbol	TCG_CALL_NO_READ_GLOBALS		5210737						
ANR	5211580	Symbol	its -> state		5210737						
ANR	5211581	Symbol	temp_arg		5210737						
ANR	5211582	Symbol	TS_MEM		5210737						
ANR	5211583	Symbol	op		5210737						
ANR	5211584	Symbol	dts		5210737						
ANR	5211585	Symbol	s -> gen_op_buf [ 0 ] . next		5210737						
ANR	5211586	Symbol	op -> life		5210737						
ANR	5211587	Symbol	TCG_CALL_NO_WRITE_GLOBALS		5210737						
ANR	5211588	Symbol	INDEX_op_st_i32		5210737						
ANR	5211589	Symbol	its -> type		5210737						
ANR	5211590	Symbol	false		5210737						
ANR	5211591	Symbol	* * sop		5210737						
ANR	5211592	Symbol	i		5210737						
ANR	5211593	Symbol	op -> opc		5210737						
ANR	5211594	Symbol	op -> next		5210737						
ANR	5211595	Symbol	s -> temps		5210737						
ANR	5211596	Symbol	* its		5210737						
ANR	5211597	Symbol	op -> callo		5210737						
ANR	5211598	Symbol	def -> nb_iargs		5210737						
ANR	5211599	Symbol	* lop -> args		5210737						
ANR	5211600	Symbol	s -> nb_globals		5210737						
ANR	5211601	Symbol	s		5210737						
ANR	5211602	Symbol	* i		5210737						
ANR	5211603	Symbol	arg_ts		5210737						
ANR	5211604	Symbol	its -> base_type		5210737						
ANR	5211605	Symbol	* sop -> args		5210737						
ANR	5211606	Symbol	sopc		5210737						
ANR	5211607	Symbol	* s		5210737						
ANR	5211608	Symbol	* sop		5210737						
