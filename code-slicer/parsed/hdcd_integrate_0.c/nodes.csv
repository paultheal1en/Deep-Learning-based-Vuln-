command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4590785	File	/home/p4ultr4n/workplace/ReVeal/raw_code/hdcd_integrate_0.c								
ANR	4590786	Function	hdcd_integrate	1:0:0:2793							
ANR	4590787	FunctionDef	"hdcd_integrate (HDCDContext * ctx , hdcd_state_t * state , int * flag , const int32_t * samples , int count , int stride)"		4590786	0					
ANR	4590788	CompoundStatement		3:0:124:2793	4590786	0					
ANR	4590789	IdentifierDeclStatement	uint32_t bits = 0 ;	5:4:131:148	4590786	0	True				
ANR	4590790	IdentifierDecl	bits = 0		4590786	0					
ANR	4590791	IdentifierDeclType	uint32_t		4590786	0					
ANR	4590792	Identifier	bits		4590786	1					
ANR	4590793	AssignmentExpression	bits = 0		4590786	2		=			
ANR	4590794	Identifier	bits		4590786	0					
ANR	4590795	PrimaryExpression	0		4590786	1					
ANR	4590796	IdentifierDeclStatement	"int result = FFMIN ( state -> readahead , count ) ;"	7:4:155:198	4590786	1	True				
ANR	4590797	IdentifierDecl	"result = FFMIN ( state -> readahead , count )"		4590786	0					
ANR	4590798	IdentifierDeclType	int		4590786	0					
ANR	4590799	Identifier	result		4590786	1					
ANR	4590800	AssignmentExpression	"result = FFMIN ( state -> readahead , count )"		4590786	2		=			
ANR	4590801	Identifier	result		4590786	0					
ANR	4590802	CallExpression	"FFMIN ( state -> readahead , count )"		4590786	1					
ANR	4590803	Callee	FFMIN		4590786	0					
ANR	4590804	Identifier	FFMIN		4590786	0					
ANR	4590805	ArgumentList	state -> readahead		4590786	1					
ANR	4590806	Argument	state -> readahead		4590786	0					
ANR	4590807	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4590808	Identifier	state		4590786	0					
ANR	4590809	Identifier	readahead		4590786	1					
ANR	4590810	Argument	count		4590786	1					
ANR	4590811	Identifier	count		4590786	0					
ANR	4590812	IdentifierDeclStatement	int i ;	9:4:205:210	4590786	2	True				
ANR	4590813	IdentifierDecl	i		4590786	0					
ANR	4590814	IdentifierDeclType	int		4590786	0					
ANR	4590815	Identifier	i		4590786	1					
ANR	4590816	ExpressionStatement	* flag = 0	11:4:217:226	4590786	3	True				
ANR	4590817	AssignmentExpression	* flag = 0		4590786	0		=			
ANR	4590818	UnaryOperationExpression	* flag		4590786	0					
ANR	4590819	UnaryOperator	*		4590786	0					
ANR	4590820	Identifier	flag		4590786	1					
ANR	4590821	PrimaryExpression	0		4590786	1					
ANR	4590822	ForStatement	for ( i = result - 1 ; i >= 0 ; i -- )		4590786	4					
ANR	4590823	ForInit	i = result - 1 ;	15:9:240:254	4590786	0	True				
ANR	4590824	AssignmentExpression	i = result - 1		4590786	0		=			
ANR	4590825	Identifier	i		4590786	0					
ANR	4590826	AdditiveExpression	result - 1		4590786	1		-			
ANR	4590827	Identifier	result		4590786	0					
ANR	4590828	PrimaryExpression	1		4590786	1					
ANR	4590829	Condition	i >= 0	15:25:256:261	4590786	1	True				
ANR	4590830	RelationalExpression	i >= 0		4590786	0		>=			
ANR	4590831	Identifier	i		4590786	0					
ANR	4590832	PrimaryExpression	0		4590786	1					
ANR	4590833	PostIncDecOperationExpression	i --	15:33:264:266	4590786	2	True				
ANR	4590834	Identifier	i		4590786	0					
ANR	4590835	IncDec	--		4590786	1					
ANR	4590836	CompoundStatement		13:38:144:144	4590786	3					
ANR	4590837	ExpressionStatement	bits |= ( * samples & 1 ) << i	17:8:280:307	4590786	0	True				
ANR	4590838	AssignmentExpression	bits |= ( * samples & 1 ) << i		4590786	0		|=			
ANR	4590839	Identifier	bits		4590786	0					
ANR	4590840	ShiftExpression	( * samples & 1 ) << i		4590786	1		<<			
ANR	4590841	BitAndExpression	* samples & 1		4590786	0		&			
ANR	4590842	UnaryOperationExpression	* samples		4590786	0					
ANR	4590843	UnaryOperator	*		4590786	0					
ANR	4590844	Identifier	samples		4590786	1					
ANR	4590845	PrimaryExpression	1		4590786	1					
ANR	4590846	Identifier	i		4590786	1					
ANR	4590847	ExpressionStatement	samples += stride	19:8:358:375	4590786	1	True				
ANR	4590848	AssignmentExpression	samples += stride		4590786	0		+=			
ANR	4590849	Identifier	samples		4590786	0					
ANR	4590850	Identifier	stride		4590786	1					
ANR	4590851	ExpressionStatement	state -> window = ( state -> window << result ) | bits	25:4:391:439	4590786	5	True				
ANR	4590852	AssignmentExpression	state -> window = ( state -> window << result ) | bits		4590786	0		=			
ANR	4590853	PtrMemberAccess	state -> window		4590786	0					
ANR	4590854	Identifier	state		4590786	0					
ANR	4590855	Identifier	window		4590786	1					
ANR	4590856	InclusiveOrExpression	( state -> window << result ) | bits		4590786	1		|			
ANR	4590857	ShiftExpression	state -> window << result		4590786	0		<<			
ANR	4590858	PtrMemberAccess	state -> window		4590786	0					
ANR	4590859	Identifier	state		4590786	0					
ANR	4590860	Identifier	window		4590786	1					
ANR	4590861	Identifier	result		4590786	1					
ANR	4590862	Identifier	bits		4590786	1					
ANR	4590863	ExpressionStatement	state -> readahead -= result	27:4:446:472	4590786	6	True				
ANR	4590864	AssignmentExpression	state -> readahead -= result		4590786	0		-=			
ANR	4590865	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4590866	Identifier	state		4590786	0					
ANR	4590867	Identifier	readahead		4590786	1					
ANR	4590868	Identifier	result		4590786	1					
ANR	4590869	IfStatement	if ( state -> readahead > 0 )		4590786	7					
ANR	4590870	Condition	state -> readahead > 0	29:8:483:502	4590786	0	True				
ANR	4590871	RelationalExpression	state -> readahead > 0		4590786	0		>			
ANR	4590872	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4590873	Identifier	state		4590786	0					
ANR	4590874	Identifier	readahead		4590786	1					
ANR	4590875	PrimaryExpression	0		4590786	1					
ANR	4590876	ReturnStatement	return result ;	31:8:514:527	4590786	1	True				
ANR	4590877	Identifier	result		4590786	0					
ANR	4590878	ExpressionStatement	bits = ( state -> window ^ state -> window >> 5 ^ state -> window >> 23 )	35:4:536:601	4590786	8	True				
ANR	4590879	AssignmentExpression	bits = ( state -> window ^ state -> window >> 5 ^ state -> window >> 23 )		4590786	0		=			
ANR	4590880	Identifier	bits		4590786	0					
ANR	4590881	ExclusiveOrExpression	state -> window ^ state -> window >> 5 ^ state -> window >> 23		4590786	1		^			
ANR	4590882	PtrMemberAccess	state -> window		4590786	0					
ANR	4590883	Identifier	state		4590786	0					
ANR	4590884	Identifier	window		4590786	1					
ANR	4590885	ExclusiveOrExpression	state -> window >> 5 ^ state -> window >> 23		4590786	1		^			
ANR	4590886	ShiftExpression	state -> window >> 5		4590786	0		>>			
ANR	4590887	PtrMemberAccess	state -> window		4590786	0					
ANR	4590888	Identifier	state		4590786	0					
ANR	4590889	Identifier	window		4590786	1					
ANR	4590890	PrimaryExpression	5		4590786	1					
ANR	4590891	ShiftExpression	state -> window >> 23		4590786	1		>>			
ANR	4590892	PtrMemberAccess	state -> window		4590786	0					
ANR	4590893	Identifier	state		4590786	0					
ANR	4590894	Identifier	window		4590786	1					
ANR	4590895	PrimaryExpression	23		4590786	1					
ANR	4590896	IfStatement	if ( state -> arg )		4590786	9					
ANR	4590897	Condition	state -> arg	39:8:614:623	4590786	0	True				
ANR	4590898	PtrMemberAccess	state -> arg		4590786	0					
ANR	4590899	Identifier	state		4590786	0					
ANR	4590900	Identifier	arg		4590786	1					
ANR	4590901	CompoundStatement		37:20:501:501	4590786	1					
ANR	4590902	IfStatement	if ( ( bits & 0x0fa00500 ) == 0x0fa00500 )		4590786	0					
ANR	4590903	Condition	( bits & 0x0fa00500 ) == 0x0fa00500	41:12:641:673	4590786	0	True				
ANR	4590904	EqualityExpression	( bits & 0x0fa00500 ) == 0x0fa00500		4590786	0		==			
ANR	4590905	BitAndExpression	bits & 0x0fa00500		4590786	0		&			
ANR	4590906	Identifier	bits		4590786	0					
ANR	4590907	PrimaryExpression	0x0fa00500		4590786	1					
ANR	4590908	PrimaryExpression	0x0fa00500		4590786	1					
ANR	4590909	CompoundStatement		39:47:551:551	4590786	1					
ANR	4590910	IfStatement	if ( ( bits & 0xc8 ) == 0 )		4590786	0					
ANR	4590911	Condition	( bits & 0xc8 ) == 0	45:16:728:745	4590786	0	True				
ANR	4590912	EqualityExpression	( bits & 0xc8 ) == 0		4590786	0		==			
ANR	4590913	BitAndExpression	bits & 0xc8		4590786	0		&			
ANR	4590914	Identifier	bits		4590786	0					
ANR	4590915	PrimaryExpression	0xc8		4590786	1					
ANR	4590916	PrimaryExpression	0		4590786	1					
ANR	4590917	CompoundStatement		43:36:623:623	4590786	1					
ANR	4590918	ExpressionStatement	state -> control = ( bits & 255 ) + ( bits & 7 )	51:16:889:931	4590786	0	True				
ANR	4590919	AssignmentExpression	state -> control = ( bits & 255 ) + ( bits & 7 )		4590786	0		=			
ANR	4590920	PtrMemberAccess	state -> control		4590786	0					
ANR	4590921	Identifier	state		4590786	0					
ANR	4590922	Identifier	control		4590786	1					
ANR	4590923	AdditiveExpression	( bits & 255 ) + ( bits & 7 )		4590786	1		+			
ANR	4590924	BitAndExpression	bits & 255		4590786	0		&			
ANR	4590925	Identifier	bits		4590786	0					
ANR	4590926	PrimaryExpression	255		4590786	1					
ANR	4590927	BitAndExpression	bits & 7		4590786	1		&			
ANR	4590928	Identifier	bits		4590786	0					
ANR	4590929	PrimaryExpression	7		4590786	1					
ANR	4590930	ExpressionStatement	* flag = 1	53:16:950:959	4590786	1	True				
ANR	4590931	AssignmentExpression	* flag = 1		4590786	0		=			
ANR	4590932	UnaryOperationExpression	* flag		4590786	0					
ANR	4590933	UnaryOperator	*		4590786	0					
ANR	4590934	Identifier	flag		4590786	1					
ANR	4590935	PrimaryExpression	1		4590786	1					
ANR	4590936	ExpressionStatement	state -> code_counterA ++	55:16:978:1000	4590786	2	True				
ANR	4590937	PostIncDecOperationExpression	state -> code_counterA ++		4590786	0					
ANR	4590938	PtrMemberAccess	state -> code_counterA		4590786	0					
ANR	4590939	Identifier	state		4590786	0					
ANR	4590940	Identifier	code_counterA		4590786	1					
ANR	4590941	IncDec	++		4590786	1					
ANR	4590942	ElseStatement	else		4590786	0					
ANR	4590943	CompoundStatement		55:19:897:897	4590786	0					
ANR	4590944	ExpressionStatement	state -> code_counterA_almost ++	61:16:1097:1126	4590786	0	True				
ANR	4590945	PostIncDecOperationExpression	state -> code_counterA_almost ++		4590786	0					
ANR	4590946	PtrMemberAccess	state -> code_counterA_almost		4590786	0					
ANR	4590947	Identifier	state		4590786	0					
ANR	4590948	Identifier	code_counterA_almost		4590786	1					
ANR	4590949	IncDec	++		4590786	1					
ANR	4590950	ExpressionStatement	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Control A almost: 0x%02x near %d\\n"" , bits & 0xff , ctx -> sample_count )"	63:16:1145:1281	4590786	1	True				
ANR	4590951	CallExpression	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Control A almost: 0x%02x near %d\\n"" , bits & 0xff , ctx -> sample_count )"		4590786	0					
ANR	4590952	Callee	av_log		4590786	0					
ANR	4590953	Identifier	av_log		4590786	0					
ANR	4590954	ArgumentList	ctx -> fctx		4590786	1					
ANR	4590955	Argument	ctx -> fctx		4590786	0					
ANR	4590956	PtrMemberAccess	ctx -> fctx		4590786	0					
ANR	4590957	Identifier	ctx		4590786	0					
ANR	4590958	Identifier	fctx		4590786	1					
ANR	4590959	Argument	AV_LOG_VERBOSE		4590786	1					
ANR	4590960	Identifier	AV_LOG_VERBOSE		4590786	0					
ANR	4590961	Argument	"""hdcd error: Control A almost: 0x%02x near %d\\n"""		4590786	2					
ANR	4590962	PrimaryExpression	"""hdcd error: Control A almost: 0x%02x near %d\\n"""		4590786	0					
ANR	4590963	Argument	bits & 0xff		4590786	3					
ANR	4590964	BitAndExpression	bits & 0xff		4590786	0		&			
ANR	4590965	Identifier	bits		4590786	0					
ANR	4590966	PrimaryExpression	0xff		4590786	1					
ANR	4590967	Argument	ctx -> sample_count		4590786	4					
ANR	4590968	PtrMemberAccess	ctx -> sample_count		4590786	0					
ANR	4590969	Identifier	ctx		4590786	0					
ANR	4590970	Identifier	sample_count		4590786	1					
ANR	4590971	ElseStatement	else		4590786	0					
ANR	4590972	IfStatement	if ( ( bits & 0xa0060000 ) == 0xa0060000 )		4590786	0					
ANR	4590973	Condition	( bits & 0xa0060000 ) == 0xa0060000	69:19:1318:1350	4590786	0	True				
ANR	4590974	EqualityExpression	( bits & 0xa0060000 ) == 0xa0060000		4590786	0		==			
ANR	4590975	BitAndExpression	bits & 0xa0060000		4590786	0		&			
ANR	4590976	Identifier	bits		4590786	0					
ANR	4590977	PrimaryExpression	0xa0060000		4590786	1					
ANR	4590978	PrimaryExpression	0xa0060000		4590786	1					
ANR	4590979	CompoundStatement		67:54:1228:1228	4590786	1					
ANR	4590980	IfStatement	if ( ( ( bits ^ ( ~bits >> 8 & 255 ) ) & 0xffff00ff ) == 0xa0060000 )		4590786	0					
ANR	4590981	Condition	( ( bits ^ ( ~bits >> 8 & 255 ) ) & 0xffff00ff ) == 0xa0060000	73:16:1422:1477	4590786	0	True				
ANR	4590982	EqualityExpression	( ( bits ^ ( ~bits >> 8 & 255 ) ) & 0xffff00ff ) == 0xa0060000		4590786	0		==			
ANR	4590983	BitAndExpression	( bits ^ ( ~bits >> 8 & 255 ) ) & 0xffff00ff		4590786	0		&			
ANR	4590984	ExclusiveOrExpression	bits ^ ( ~bits >> 8 & 255 )		4590786	0		^			
ANR	4590985	Identifier	bits		4590786	0					
ANR	4590986	BitAndExpression	~bits >> 8 & 255		4590786	1		&			
ANR	4590987	ShiftExpression	~bits >> 8		4590786	0		>>			
ANR	4590988	Identifier	~bits		4590786	0					
ANR	4590989	PrimaryExpression	8		4590786	1					
ANR	4590990	PrimaryExpression	255		4590786	1					
ANR	4590991	PrimaryExpression	0xffff00ff		4590786	1					
ANR	4590992	PrimaryExpression	0xa0060000		4590786	1					
ANR	4590993	CompoundStatement		71:74:1355:1355	4590786	1					
ANR	4590994	ExpressionStatement	state -> control = bits >> 8 & 255	79:16:1628:1660	4590786	0	True				
ANR	4590995	AssignmentExpression	state -> control = bits >> 8 & 255		4590786	0		=			
ANR	4590996	PtrMemberAccess	state -> control		4590786	0					
ANR	4590997	Identifier	state		4590786	0					
ANR	4590998	Identifier	control		4590786	1					
ANR	4590999	BitAndExpression	bits >> 8 & 255		4590786	1		&			
ANR	4591000	ShiftExpression	bits >> 8		4590786	0		>>			
ANR	4591001	Identifier	bits		4590786	0					
ANR	4591002	PrimaryExpression	8		4590786	1					
ANR	4591003	PrimaryExpression	255		4590786	1					
ANR	4591004	ExpressionStatement	* flag = 1	81:16:1679:1688	4590786	1	True				
ANR	4591005	AssignmentExpression	* flag = 1		4590786	0		=			
ANR	4591006	UnaryOperationExpression	* flag		4590786	0					
ANR	4591007	UnaryOperator	*		4590786	0					
ANR	4591008	Identifier	flag		4590786	1					
ANR	4591009	PrimaryExpression	1		4590786	1					
ANR	4591010	ExpressionStatement	state -> code_counterB ++	83:16:1707:1729	4590786	2	True				
ANR	4591011	PostIncDecOperationExpression	state -> code_counterB ++		4590786	0					
ANR	4591012	PtrMemberAccess	state -> code_counterB		4590786	0					
ANR	4591013	Identifier	state		4590786	0					
ANR	4591014	Identifier	code_counterB		4590786	1					
ANR	4591015	IncDec	++		4590786	1					
ANR	4591016	ElseStatement	else		4590786	0					
ANR	4591017	CompoundStatement		83:19:1626:1626	4590786	0					
ANR	4591018	ExpressionStatement	state -> code_counterB_checkfails ++	89:16:1810:1843	4590786	0	True				
ANR	4591019	PostIncDecOperationExpression	state -> code_counterB_checkfails ++		4590786	0					
ANR	4591020	PtrMemberAccess	state -> code_counterB_checkfails		4590786	0					
ANR	4591021	Identifier	state		4590786	0					
ANR	4591022	Identifier	code_counterB_checkfails		4590786	1					
ANR	4591023	IncDec	++		4590786	1					
ANR	4591024	ExpressionStatement	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Control B check failed: 0x%04x (0x%02x vs 0x%02x) near %d\\n"" , bits & 0xffff , ( bits & 0xff00 ) >> 8 , ~bits & 0xff , ctx -> sample_count )"	91:16:1862:2064	4590786	1	True				
ANR	4591025	CallExpression	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Control B check failed: 0x%04x (0x%02x vs 0x%02x) near %d\\n"" , bits & 0xffff , ( bits & 0xff00 ) >> 8 , ~bits & 0xff , ctx -> sample_count )"		4590786	0					
ANR	4591026	Callee	av_log		4590786	0					
ANR	4591027	Identifier	av_log		4590786	0					
ANR	4591028	ArgumentList	ctx -> fctx		4590786	1					
ANR	4591029	Argument	ctx -> fctx		4590786	0					
ANR	4591030	PtrMemberAccess	ctx -> fctx		4590786	0					
ANR	4591031	Identifier	ctx		4590786	0					
ANR	4591032	Identifier	fctx		4590786	1					
ANR	4591033	Argument	AV_LOG_VERBOSE		4590786	1					
ANR	4591034	Identifier	AV_LOG_VERBOSE		4590786	0					
ANR	4591035	Argument	"""hdcd error: Control B check failed: 0x%04x (0x%02x vs 0x%02x) near %d\\n"""		4590786	2					
ANR	4591036	PrimaryExpression	"""hdcd error: Control B check failed: 0x%04x (0x%02x vs 0x%02x) near %d\\n"""		4590786	0					
ANR	4591037	Argument	bits & 0xffff		4590786	3					
ANR	4591038	BitAndExpression	bits & 0xffff		4590786	0		&			
ANR	4591039	Identifier	bits		4590786	0					
ANR	4591040	PrimaryExpression	0xffff		4590786	1					
ANR	4591041	Argument	( bits & 0xff00 ) >> 8		4590786	4					
ANR	4591042	ShiftExpression	( bits & 0xff00 ) >> 8		4590786	0		>>			
ANR	4591043	BitAndExpression	bits & 0xff00		4590786	0		&			
ANR	4591044	Identifier	bits		4590786	0					
ANR	4591045	PrimaryExpression	0xff00		4590786	1					
ANR	4591046	PrimaryExpression	8		4590786	1					
ANR	4591047	Argument	~bits & 0xff		4590786	5					
ANR	4591048	BitAndExpression	~bits & 0xff		4590786	0		&			
ANR	4591049	Identifier	~bits		4590786	0					
ANR	4591050	PrimaryExpression	0xff		4590786	1					
ANR	4591051	Argument	ctx -> sample_count		4590786	6					
ANR	4591052	PtrMemberAccess	ctx -> sample_count		4590786	0					
ANR	4591053	Identifier	ctx		4590786	0					
ANR	4591054	Identifier	sample_count		4590786	1					
ANR	4591055	ElseStatement	else		4590786	0					
ANR	4591056	CompoundStatement		95:15:1972:1972	4590786	0					
ANR	4591057	ExpressionStatement	state -> code_counterC_unmatched ++	101:12:2177:2209	4590786	0	True				
ANR	4591058	PostIncDecOperationExpression	state -> code_counterC_unmatched ++		4590786	0					
ANR	4591059	PtrMemberAccess	state -> code_counterC_unmatched		4590786	0					
ANR	4591060	Identifier	state		4590786	0					
ANR	4591061	Identifier	code_counterC_unmatched		4590786	1					
ANR	4591062	IncDec	++		4590786	1					
ANR	4591063	ExpressionStatement	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Unmatched code: 0x%08x near %d\\n"" , bits , ctx -> sample_count )"	103:12:2224:2350	4590786	1	True				
ANR	4591064	CallExpression	"av_log ( ctx -> fctx , AV_LOG_VERBOSE , ""hdcd error: Unmatched code: 0x%08x near %d\\n"" , bits , ctx -> sample_count )"		4590786	0					
ANR	4591065	Callee	av_log		4590786	0					
ANR	4591066	Identifier	av_log		4590786	0					
ANR	4591067	ArgumentList	ctx -> fctx		4590786	1					
ANR	4591068	Argument	ctx -> fctx		4590786	0					
ANR	4591069	PtrMemberAccess	ctx -> fctx		4590786	0					
ANR	4591070	Identifier	ctx		4590786	0					
ANR	4591071	Identifier	fctx		4590786	1					
ANR	4591072	Argument	AV_LOG_VERBOSE		4590786	1					
ANR	4591073	Identifier	AV_LOG_VERBOSE		4590786	0					
ANR	4591074	Argument	"""hdcd error: Unmatched code: 0x%08x near %d\\n"""		4590786	2					
ANR	4591075	PrimaryExpression	"""hdcd error: Unmatched code: 0x%08x near %d\\n"""		4590786	0					
ANR	4591076	Argument	bits		4590786	3					
ANR	4591077	Identifier	bits		4590786	0					
ANR	4591078	Argument	ctx -> sample_count		4590786	4					
ANR	4591079	PtrMemberAccess	ctx -> sample_count		4590786	0					
ANR	4591080	Identifier	ctx		4590786	0					
ANR	4591081	Identifier	sample_count		4590786	1					
ANR	4591082	IfStatement	if ( * flag )		4590786	1					
ANR	4591083	Condition	* flag	109:12:2376:2380	4590786	0	True				
ANR	4591084	UnaryOperationExpression	* flag		4590786	0					
ANR	4591085	UnaryOperator	*		4590786	0					
ANR	4591086	Identifier	flag		4590786	1					
ANR	4591087	ExpressionStatement	hdcd_update_info ( state )	109:19:2383:2406	4590786	1	True				
ANR	4591088	CallExpression	hdcd_update_info ( state )		4590786	0					
ANR	4591089	Callee	hdcd_update_info		4590786	0					
ANR	4591090	Identifier	hdcd_update_info		4590786	0					
ANR	4591091	ArgumentList	state		4590786	1					
ANR	4591092	Argument	state		4590786	0					
ANR	4591093	Identifier	state		4590786	0					
ANR	4591094	ExpressionStatement	state -> arg = 0	111:8:2417:2431	4590786	2	True				
ANR	4591095	AssignmentExpression	state -> arg = 0		4590786	0		=			
ANR	4591096	PtrMemberAccess	state -> arg		4590786	0					
ANR	4591097	Identifier	state		4590786	0					
ANR	4591098	Identifier	arg		4590786	1					
ANR	4591099	PrimaryExpression	0		4590786	1					
ANR	4591100	IfStatement	if ( bits == 0x7e0fa005 || bits == 0x7e0fa006 )		4590786	10					
ANR	4591101	Condition	bits == 0x7e0fa005 || bits == 0x7e0fa006	115:8:2449:2488	4590786	0	True				
ANR	4591102	OrExpression	bits == 0x7e0fa005 || bits == 0x7e0fa006		4590786	0		||			
ANR	4591103	EqualityExpression	bits == 0x7e0fa005		4590786	0		==			
ANR	4591104	Identifier	bits		4590786	0					
ANR	4591105	PrimaryExpression	0x7e0fa005		4590786	1					
ANR	4591106	EqualityExpression	bits == 0x7e0fa006		4590786	1		==			
ANR	4591107	Identifier	bits		4590786	0					
ANR	4591108	PrimaryExpression	0x7e0fa006		4590786	1					
ANR	4591109	CompoundStatement		113:50:2366:2366	4590786	1					
ANR	4591110	ExpressionStatement	state -> readahead = ( bits & 3 ) * 8	117:8:2502:2535	4590786	0	True				
ANR	4591111	AssignmentExpression	state -> readahead = ( bits & 3 ) * 8		4590786	0		=			
ANR	4591112	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4591113	Identifier	state		4590786	0					
ANR	4591114	Identifier	readahead		4590786	1					
ANR	4591115	MultiplicativeExpression	( bits & 3 ) * 8		4590786	1		*			
ANR	4591116	BitAndExpression	bits & 3		4590786	0		&			
ANR	4591117	Identifier	bits		4590786	0					
ANR	4591118	PrimaryExpression	3		4590786	1					
ANR	4591119	PrimaryExpression	8		4590786	1					
ANR	4591120	ExpressionStatement	state -> arg = 1	119:8:2546:2560	4590786	1	True				
ANR	4591121	AssignmentExpression	state -> arg = 1		4590786	0		=			
ANR	4591122	PtrMemberAccess	state -> arg		4590786	0					
ANR	4591123	Identifier	state		4590786	0					
ANR	4591124	Identifier	arg		4590786	1					
ANR	4591125	PrimaryExpression	1		4590786	1					
ANR	4591126	ExpressionStatement	state -> code_counterC ++	121:8:2571:2593	4590786	2	True				
ANR	4591127	PostIncDecOperationExpression	state -> code_counterC ++		4590786	0					
ANR	4591128	PtrMemberAccess	state -> code_counterC		4590786	0					
ANR	4591129	Identifier	state		4590786	0					
ANR	4591130	Identifier	code_counterC		4590786	1					
ANR	4591131	IncDec	++		4590786	1					
ANR	4591132	ElseStatement	else		4590786	0					
ANR	4591133	CompoundStatement		121:11:2482:2482	4590786	0					
ANR	4591134	IfStatement	if ( bits )		4590786	0					
ANR	4591135	Condition	bits	125:12:2622:2625	4590786	0	True				
ANR	4591136	Identifier	bits		4590786	0					
ANR	4591137	ExpressionStatement	state -> readahead = readaheadtab [ bits & 0xff ]	127:12:2641:2685	4590786	1	True				
ANR	4591138	AssignmentExpression	state -> readahead = readaheadtab [ bits & 0xff ]		4590786	0		=			
ANR	4591139	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4591140	Identifier	state		4590786	0					
ANR	4591141	Identifier	readahead		4590786	1					
ANR	4591142	ArrayIndexing	readaheadtab [ bits & 0xff ]		4590786	1					
ANR	4591143	Identifier	readaheadtab		4590786	0					
ANR	4591144	BitAndExpression	bits & 0xff		4590786	1		&			
ANR	4591145	Identifier	bits		4590786	0					
ANR	4591146	PrimaryExpression	0xff		4590786	1					
ANR	4591147	ElseStatement	else		4590786	0					
ANR	4591148	ExpressionStatement	state -> readahead = 31	131:12:2714:2735	4590786	0	True				
ANR	4591149	AssignmentExpression	state -> readahead = 31		4590786	0		=			
ANR	4591150	PtrMemberAccess	state -> readahead		4590786	0					
ANR	4591151	Identifier	state		4590786	0					
ANR	4591152	Identifier	readahead		4590786	1					
ANR	4591153	PrimaryExpression	31		4590786	1					
ANR	4591154	ReturnStatement	return result ;	135:4:2777:2790	4590786	11	True				
ANR	4591155	Identifier	result		4590786	0					
ANR	4591156	ReturnType	static int		4590786	1					
ANR	4591157	Identifier	hdcd_integrate		4590786	2					
ANR	4591158	ParameterList	"HDCDContext * ctx , hdcd_state_t * state , int * flag , const int32_t * samples , int count , int stride"		4590786	3					
ANR	4591159	Parameter	HDCDContext * ctx	1:26:26:41	4590786	0	True				
ANR	4591160	ParameterType	HDCDContext *		4590786	0					
ANR	4591161	Identifier	ctx		4590786	1					
ANR	4591162	Parameter	hdcd_state_t * state	1:44:44:62	4590786	1	True				
ANR	4591163	ParameterType	hdcd_state_t *		4590786	0					
ANR	4591164	Identifier	state		4590786	1					
ANR	4591165	Parameter	int * flag	1:65:65:73	4590786	2	True				
ANR	4591166	ParameterType	int *		4590786	0					
ANR	4591167	Identifier	flag		4590786	1					
ANR	4591168	Parameter	const int32_t * samples	1:76:76:97	4590786	3	True				
ANR	4591169	ParameterType	const int32_t *		4590786	0					
ANR	4591170	Identifier	samples		4590786	1					
ANR	4591171	Parameter	int count	1:100:100:108	4590786	4	True				
ANR	4591172	ParameterType	int		4590786	0					
ANR	4591173	Identifier	count		4590786	1					
ANR	4591174	Parameter	int stride	1:111:111:120	4590786	5	True				
ANR	4591175	ParameterType	int		4590786	0					
ANR	4591176	Identifier	stride		4590786	1					
ANR	4591177	CFGEntryNode	ENTRY		4590786		True				
ANR	4591178	CFGExitNode	EXIT		4590786		True				
ANR	4591179	Symbol	flag		4590786						
ANR	4591180	Symbol	FFMIN		4590786						
ANR	4591181	Symbol	stride		4590786						
ANR	4591182	Symbol	state -> code_counterC_unmatched		4590786						
ANR	4591183	Symbol	result		4590786						
ANR	4591184	Symbol	* samples		4590786						
ANR	4591185	Symbol	readaheadtab		4590786						
ANR	4591186	Symbol	ctx -> sample_count		4590786						
ANR	4591187	Symbol	~bits		4590786						
ANR	4591188	Symbol	state		4590786						
ANR	4591189	Symbol	* bits		4590786						
ANR	4591190	Symbol	* readaheadtab		4590786						
ANR	4591191	Symbol	state -> code_counterA_almost		4590786						
ANR	4591192	Symbol	ctx		4590786						
ANR	4591193	Symbol	count		4590786						
ANR	4591194	Symbol	bits		4590786						
ANR	4591195	Symbol	i		4590786						
ANR	4591196	Symbol	samples		4590786						
ANR	4591197	Symbol	* ctx		4590786						
ANR	4591198	Symbol	AV_LOG_VERBOSE		4590786						
ANR	4591199	Symbol	* state		4590786						
ANR	4591200	Symbol	state -> window		4590786						
ANR	4591201	Symbol	state -> arg		4590786						
ANR	4591202	Symbol	state -> code_counterB_checkfails		4590786						
ANR	4591203	Symbol	state -> readahead		4590786						
ANR	4591204	Symbol	state -> code_counterC		4590786						
ANR	4591205	Symbol	state -> code_counterB		4590786						
ANR	4591206	Symbol	state -> code_counterA		4590786						
ANR	4591207	Symbol	* flag		4590786						
ANR	4591208	Symbol	state -> control		4590786						
ANR	4591209	Symbol	ctx -> fctx		4590786						
