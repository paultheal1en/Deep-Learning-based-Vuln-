command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3063066	File	/home/p4ultr4n/workplace/ReVeal/raw_code/envlist_setenv_0.c								
ANR	3063067	Function	envlist_setenv	1:0:0:1034							
ANR	3063068	FunctionDef	"envlist_setenv (envlist_t * envlist , const char * env)"		3063067	0					
ANR	3063069	CompoundStatement		3:0:53:1034	3063067	0					
ANR	3063070	IdentifierDeclStatement	struct envlist_entry * entry = NULL ;	5:1:57:91	3063067	0	True				
ANR	3063071	IdentifierDecl	* entry = NULL		3063067	0					
ANR	3063072	IdentifierDeclType	struct envlist_entry *		3063067	0					
ANR	3063073	Identifier	entry		3063067	1					
ANR	3063074	AssignmentExpression	* entry = NULL		3063067	2		=			
ANR	3063075	Identifier	NULL		3063067	0					
ANR	3063076	Identifier	NULL		3063067	1					
ANR	3063077	IdentifierDeclStatement	const char * eq_sign ;	7:1:95:114	3063067	1	True				
ANR	3063078	IdentifierDecl	* eq_sign		3063067	0					
ANR	3063079	IdentifierDeclType	const char *		3063067	0					
ANR	3063080	Identifier	eq_sign		3063067	1					
ANR	3063081	IdentifierDeclStatement	size_t envname_len ;	9:1:118:136	3063067	2	True				
ANR	3063082	IdentifierDecl	envname_len		3063067	0					
ANR	3063083	IdentifierDeclType	size_t		3063067	0					
ANR	3063084	Identifier	envname_len		3063067	1					
ANR	3063085	IfStatement	if ( ( envlist == NULL ) || ( env == NULL ) )		3063067	3					
ANR	3063086	Condition	( envlist == NULL ) || ( env == NULL )	13:5:146:179	3063067	0	True				
ANR	3063087	OrExpression	( envlist == NULL ) || ( env == NULL )		3063067	0		||			
ANR	3063088	EqualityExpression	envlist == NULL		3063067	0		==			
ANR	3063089	Identifier	envlist		3063067	0					
ANR	3063090	Identifier	NULL		3063067	1					
ANR	3063091	EqualityExpression	env == NULL		3063067	1		==			
ANR	3063092	Identifier	env		3063067	0					
ANR	3063093	Identifier	NULL		3063067	1					
ANR	3063094	ReturnStatement	return ( EINVAL ) ;	15:2:185:200	3063067	1	True				
ANR	3063095	Identifier	EINVAL		3063067	0					
ANR	3063096	IfStatement	"if ( ( eq_sign = strchr ( env , '=' ) ) == NULL )"		3063067	4					
ANR	3063097	Condition	"( eq_sign = strchr ( env , '=' ) ) == NULL"	21:5:258:293	3063067	0	True				
ANR	3063098	EqualityExpression	"( eq_sign = strchr ( env , '=' ) ) == NULL"		3063067	0		==			
ANR	3063099	AssignmentExpression	"eq_sign = strchr ( env , '=' )"		3063067	0		=			
ANR	3063100	Identifier	eq_sign		3063067	0					
ANR	3063101	CallExpression	"strchr ( env , '=' )"		3063067	1					
ANR	3063102	Callee	strchr		3063067	0					
ANR	3063103	Identifier	strchr		3063067	0					
ANR	3063104	ArgumentList	env		3063067	1					
ANR	3063105	Argument	env		3063067	0					
ANR	3063106	Identifier	env		3063067	0					
ANR	3063107	Argument	'='		3063067	1					
ANR	3063108	PrimaryExpression	'='		3063067	0					
ANR	3063109	Identifier	NULL		3063067	1					
ANR	3063110	ReturnStatement	return ( EINVAL ) ;	23:2:299:314	3063067	1	True				
ANR	3063111	Identifier	EINVAL		3063067	0					
ANR	3063112	ExpressionStatement	envname_len = eq_sign - env + 1	25:1:318:349	3063067	5	True				
ANR	3063113	AssignmentExpression	envname_len = eq_sign - env + 1		3063067	0		=			
ANR	3063114	Identifier	envname_len		3063067	0					
ANR	3063115	AdditiveExpression	eq_sign - env + 1		3063067	1		-			
ANR	3063116	Identifier	eq_sign		3063067	0					
ANR	3063117	AdditiveExpression	env + 1		3063067	1		+			
ANR	3063118	Identifier	env		3063067	0					
ANR	3063119	PrimaryExpression	1		3063067	1					
ANR	3063120	ForStatement	for ( entry = envlist -> el_entries . lh_first ; entry != NULL ; entry = entry -> ev_link . le_next )		3063067	6					
ANR	3063121	ForInit	entry = envlist -> el_entries . lh_first ;	39:6:497:533	3063067	0	True				
ANR	3063122	AssignmentExpression	entry = envlist -> el_entries . lh_first		3063067	0		=			
ANR	3063123	Identifier	entry		3063067	0					
ANR	3063124	MemberAccess	envlist -> el_entries . lh_first		3063067	1					
ANR	3063125	PtrMemberAccess	envlist -> el_entries		3063067	0					
ANR	3063126	Identifier	envlist		3063067	0					
ANR	3063127	Identifier	el_entries		3063067	1					
ANR	3063128	Identifier	lh_first		3063067	1					
ANR	3063129	Condition	entry != NULL	39:44:535:547	3063067	1	True				
ANR	3063130	EqualityExpression	entry != NULL		3063067	0		!=			
ANR	3063131	Identifier	entry		3063067	0					
ANR	3063132	Identifier	NULL		3063067	1					
ANR	3063133	AssignmentExpression	entry = entry -> ev_link . le_next	41:5:556:585	3063067	2	True	=			
ANR	3063134	Identifier	entry		3063067	0					
ANR	3063135	MemberAccess	entry -> ev_link . le_next		3063067	1					
ANR	3063136	PtrMemberAccess	entry -> ev_link		3063067	0					
ANR	3063137	Identifier	entry		3063067	0					
ANR	3063138	Identifier	ev_link		3063067	1					
ANR	3063139	Identifier	le_next		3063067	1					
ANR	3063140	CompoundStatement		39:37:534:534	3063067	3					
ANR	3063141	IfStatement	"if ( strncmp ( entry -> ev_var , env , envname_len ) == 0 )"		3063067	0					
ANR	3063142	Condition	"strncmp ( entry -> ev_var , env , envname_len ) == 0"	43:6:597:641	3063067	0	True				
ANR	3063143	EqualityExpression	"strncmp ( entry -> ev_var , env , envname_len ) == 0"		3063067	0		==			
ANR	3063144	CallExpression	"strncmp ( entry -> ev_var , env , envname_len )"		3063067	0					
ANR	3063145	Callee	strncmp		3063067	0					
ANR	3063146	Identifier	strncmp		3063067	0					
ANR	3063147	ArgumentList	entry -> ev_var		3063067	1					
ANR	3063148	Argument	entry -> ev_var		3063067	0					
ANR	3063149	PtrMemberAccess	entry -> ev_var		3063067	0					
ANR	3063150	Identifier	entry		3063067	0					
ANR	3063151	Identifier	ev_var		3063067	1					
ANR	3063152	Argument	env		3063067	1					
ANR	3063153	Identifier	env		3063067	0					
ANR	3063154	Argument	envname_len		3063067	2					
ANR	3063155	Identifier	envname_len		3063067	0					
ANR	3063156	PrimaryExpression	0		3063067	1					
ANR	3063157	BreakStatement	break ;	45:3:648:653	3063067	1	True				
ANR	3063158	IfStatement	if ( entry != NULL )		3063067	7					
ANR	3063159	Condition	entry != NULL	51:5:667:679	3063067	0	True				
ANR	3063160	EqualityExpression	entry != NULL		3063067	0		!=			
ANR	3063161	Identifier	entry		3063067	0					
ANR	3063162	Identifier	NULL		3063067	1					
ANR	3063163	CompoundStatement		49:20:628:628	3063067	1					
ANR	3063164	ExpressionStatement	"LIST_REMOVE ( entry , ev_link )"	53:2:687:714	3063067	0	True				
ANR	3063165	CallExpression	"LIST_REMOVE ( entry , ev_link )"		3063067	0					
ANR	3063166	Callee	LIST_REMOVE		3063067	0					
ANR	3063167	Identifier	LIST_REMOVE		3063067	0					
ANR	3063168	ArgumentList	entry		3063067	1					
ANR	3063169	Argument	entry		3063067	0					
ANR	3063170	Identifier	entry		3063067	0					
ANR	3063171	Argument	ev_link		3063067	1					
ANR	3063172	Identifier	ev_link		3063067	0					
ANR	3063173	ExpressionStatement	free ( ( char * ) entry -> ev_var )	55:2:719:746	3063067	1	True				
ANR	3063174	CallExpression	free ( ( char * ) entry -> ev_var )		3063067	0					
ANR	3063175	Callee	free		3063067	0					
ANR	3063176	Identifier	free		3063067	0					
ANR	3063177	ArgumentList	( char * ) entry -> ev_var		3063067	1					
ANR	3063178	Argument	( char * ) entry -> ev_var		3063067	0					
ANR	3063179	CastExpression	( char * ) entry -> ev_var		3063067	0					
ANR	3063180	CastTarget	char *		3063067	0					
ANR	3063181	PtrMemberAccess	entry -> ev_var		3063067	1					
ANR	3063182	Identifier	entry		3063067	0					
ANR	3063183	Identifier	ev_var		3063067	1					
ANR	3063184	ExpressionStatement	free ( entry )	57:2:751:762	3063067	2	True				
ANR	3063185	CallExpression	free ( entry )		3063067	0					
ANR	3063186	Callee	free		3063067	0					
ANR	3063187	Identifier	free		3063067	0					
ANR	3063188	ArgumentList	entry		3063067	1					
ANR	3063189	Argument	entry		3063067	0					
ANR	3063190	Identifier	entry		3063067	0					
ANR	3063191	ElseStatement	else		3063067	0					
ANR	3063192	CompoundStatement		57:8:719:719	3063067	0					
ANR	3063193	ExpressionStatement	envlist -> el_count ++	61:2:778:797	3063067	0	True				
ANR	3063194	PostIncDecOperationExpression	envlist -> el_count ++		3063067	0					
ANR	3063195	PtrMemberAccess	envlist -> el_count		3063067	0					
ANR	3063196	Identifier	envlist		3063067	0					
ANR	3063197	Identifier	el_count		3063067	1					
ANR	3063198	IncDec	++		3063067	1					
ANR	3063199	IfStatement	if ( ( entry = malloc ( sizeof ( * entry ) ) ) == NULL )		3063067	8					
ANR	3063200	Condition	( entry = malloc ( sizeof ( * entry ) ) ) == NULL	67:5:811:851	3063067	0	True				
ANR	3063201	EqualityExpression	( entry = malloc ( sizeof ( * entry ) ) ) == NULL		3063067	0		==			
ANR	3063202	AssignmentExpression	entry = malloc ( sizeof ( * entry ) )		3063067	0		=			
ANR	3063203	Identifier	entry		3063067	0					
ANR	3063204	CallExpression	malloc ( sizeof ( * entry ) )		3063067	1					
ANR	3063205	Callee	malloc		3063067	0					
ANR	3063206	Identifier	malloc		3063067	0					
ANR	3063207	ArgumentList	sizeof ( * entry )		3063067	1					
ANR	3063208	Argument	sizeof ( * entry )		3063067	0					
ANR	3063209	SizeofExpression	sizeof ( * entry )		3063067	0					
ANR	3063210	Sizeof	sizeof		3063067	0					
ANR	3063211	UnaryOperationExpression	* entry		3063067	1					
ANR	3063212	UnaryOperator	*		3063067	0					
ANR	3063213	Identifier	entry		3063067	1					
ANR	3063214	Identifier	NULL		3063067	1					
ANR	3063215	ReturnStatement	return ( errno ) ;	69:2:857:871	3063067	1	True				
ANR	3063216	Identifier	errno		3063067	0					
ANR	3063217	IfStatement	if ( ( entry -> ev_var = strdup ( env ) ) == NULL )		3063067	9					
ANR	3063218	Condition	( entry -> ev_var = strdup ( env ) ) == NULL	71:5:879:915	3063067	0	True				
ANR	3063219	EqualityExpression	( entry -> ev_var = strdup ( env ) ) == NULL		3063067	0		==			
ANR	3063220	AssignmentExpression	entry -> ev_var = strdup ( env )		3063067	0		=			
ANR	3063221	PtrMemberAccess	entry -> ev_var		3063067	0					
ANR	3063222	Identifier	entry		3063067	0					
ANR	3063223	Identifier	ev_var		3063067	1					
ANR	3063224	CallExpression	strdup ( env )		3063067	1					
ANR	3063225	Callee	strdup		3063067	0					
ANR	3063226	Identifier	strdup		3063067	0					
ANR	3063227	ArgumentList	env		3063067	1					
ANR	3063228	Argument	env		3063067	0					
ANR	3063229	Identifier	env		3063067	0					
ANR	3063230	Identifier	NULL		3063067	1					
ANR	3063231	CompoundStatement		69:44:864:864	3063067	1					
ANR	3063232	ExpressionStatement	free ( entry )	73:2:923:934	3063067	0	True				
ANR	3063233	CallExpression	free ( entry )		3063067	0					
ANR	3063234	Callee	free		3063067	0					
ANR	3063235	Identifier	free		3063067	0					
ANR	3063236	ArgumentList	entry		3063067	1					
ANR	3063237	Argument	entry		3063067	0					
ANR	3063238	Identifier	entry		3063067	0					
ANR	3063239	ReturnStatement	return ( errno ) ;	75:2:939:953	3063067	1	True				
ANR	3063240	Identifier	errno		3063067	0					
ANR	3063241	ExpressionStatement	"LIST_INSERT_HEAD ( & envlist -> el_entries , entry , ev_link )"	79:1:961:1015	3063067	10	True				
ANR	3063242	CallExpression	"LIST_INSERT_HEAD ( & envlist -> el_entries , entry , ev_link )"		3063067	0					
ANR	3063243	Callee	LIST_INSERT_HEAD		3063067	0					
ANR	3063244	Identifier	LIST_INSERT_HEAD		3063067	0					
ANR	3063245	ArgumentList	& envlist -> el_entries		3063067	1					
ANR	3063246	Argument	& envlist -> el_entries		3063067	0					
ANR	3063247	UnaryOperationExpression	& envlist -> el_entries		3063067	0					
ANR	3063248	UnaryOperator	&		3063067	0					
ANR	3063249	PtrMemberAccess	envlist -> el_entries		3063067	1					
ANR	3063250	Identifier	envlist		3063067	0					
ANR	3063251	Identifier	el_entries		3063067	1					
ANR	3063252	Argument	entry		3063067	1					
ANR	3063253	Identifier	entry		3063067	0					
ANR	3063254	Argument	ev_link		3063067	2					
ANR	3063255	Identifier	ev_link		3063067	0					
ANR	3063256	ReturnStatement	return ( 0 ) ;	83:1:1021:1031	3063067	11	True				
ANR	3063257	PrimaryExpression	0		3063067	0					
ANR	3063258	Identifier	envlist_setenv		3063067	1					
ANR	3063259	ParameterList	"envlist_t * envlist , const char * env"		3063067	2					
ANR	3063260	Parameter	envlist_t * envlist	1:15:15:32	3063067	0	True				
ANR	3063261	ParameterType	envlist_t *		3063067	0					
ANR	3063262	Identifier	envlist		3063067	1					
ANR	3063263	Parameter	const char * env	1:35:35:49	3063067	1	True				
ANR	3063264	ParameterType	const char *		3063067	0					
ANR	3063265	Identifier	env		3063067	1					
ANR	3063266	CFGEntryNode	ENTRY		3063067		True				
ANR	3063267	CFGExitNode	EXIT		3063067		True				
ANR	3063268	Symbol	envname_len		3063067						
ANR	3063269	Symbol	entry -> ev_var		3063067						
ANR	3063270	Symbol	malloc		3063067						
ANR	3063271	Symbol	errno		3063067						
ANR	3063272	Symbol	NULL		3063067						
ANR	3063273	Symbol	envlist -> el_count		3063067						
ANR	3063274	Symbol	eq_sign		3063067						
ANR	3063275	Symbol	strchr		3063067						
ANR	3063276	Symbol	& envlist -> el_entries		3063067						
ANR	3063277	Symbol	env		3063067						
ANR	3063278	Symbol	envlist -> el_entries		3063067						
ANR	3063279	Symbol	* envlist		3063067						
ANR	3063280	Symbol	entry -> ev_link . le_next		3063067						
ANR	3063281	Symbol	envlist		3063067						
ANR	3063282	Symbol	EINVAL		3063067						
ANR	3063283	Symbol	entry		3063067						
ANR	3063284	Symbol	strncmp		3063067						
ANR	3063285	Symbol	ev_link		3063067						
ANR	3063286	Symbol	envlist -> el_entries . lh_first		3063067						
ANR	3063287	Symbol	strdup		3063067						
ANR	3063288	Symbol	entry -> ev_link		3063067						
ANR	3063289	Symbol	* entry		3063067						
