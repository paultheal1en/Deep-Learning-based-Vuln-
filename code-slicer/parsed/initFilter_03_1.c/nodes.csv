command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4879702	File	/home/p4ultr4n/workplace/ReVeal/raw_code/initFilter_03_1.c								
ANR	4879703	Function	initFilter	1:0:0:13258							
ANR	4879704	FunctionDef	"initFilter (int16_t * * outFilter , int16_t * * filterPos , int * outFilterSize , int xInc , int srcW , int dstW , int filterAlign , int one , int flags , int cpu_flags , SwsVector * srcFilter , SwsVector * dstFilter , double param [ 2 ] , int is_horizontal)"		4879703	0					
ANR	4879705	CompoundStatement		7:0:293:13258	4879703	0					
ANR	4879706	IdentifierDeclStatement	int i ;	9:4:300:305	4879703	0	True				
ANR	4879707	IdentifierDecl	i		4879703	0					
ANR	4879708	IdentifierDeclType	int		4879703	0					
ANR	4879709	Identifier	i		4879703	1					
ANR	4879710	IdentifierDeclStatement	int filterSize ;	11:4:312:326	4879703	1	True				
ANR	4879711	IdentifierDecl	filterSize		4879703	0					
ANR	4879712	IdentifierDeclType	int		4879703	0					
ANR	4879713	Identifier	filterSize		4879703	1					
ANR	4879714	IdentifierDeclStatement	int filter2Size ;	13:4:333:348	4879703	2	True				
ANR	4879715	IdentifierDecl	filter2Size		4879703	0					
ANR	4879716	IdentifierDeclType	int		4879703	0					
ANR	4879717	Identifier	filter2Size		4879703	1					
ANR	4879718	IdentifierDeclStatement	int minFilterSize ;	15:4:355:372	4879703	3	True				
ANR	4879719	IdentifierDecl	minFilterSize		4879703	0					
ANR	4879720	IdentifierDeclType	int		4879703	0					
ANR	4879721	Identifier	minFilterSize		4879703	1					
ANR	4879722	IdentifierDeclStatement	int64_t * filter = NULL ;	17:4:379:399	4879703	4	True				
ANR	4879723	IdentifierDecl	* filter = NULL		4879703	0					
ANR	4879724	IdentifierDeclType	int64_t *		4879703	0					
ANR	4879725	Identifier	filter		4879703	1					
ANR	4879726	AssignmentExpression	* filter = NULL		4879703	2		=			
ANR	4879727	Identifier	NULL		4879703	0					
ANR	4879728	Identifier	NULL		4879703	1					
ANR	4879729	IdentifierDeclStatement	int64_t * filter2 = NULL ;	19:4:406:427	4879703	5	True				
ANR	4879730	IdentifierDecl	* filter2 = NULL		4879703	0					
ANR	4879731	IdentifierDeclType	int64_t *		4879703	0					
ANR	4879732	Identifier	filter2		4879703	1					
ANR	4879733	AssignmentExpression	* filter2 = NULL		4879703	2		=			
ANR	4879734	Identifier	NULL		4879703	0					
ANR	4879735	Identifier	NULL		4879703	1					
ANR	4879736	Statement	const	21:4:434:438	4879703	6	True				
ANR	4879737	Statement	int64_t	21:10:440:446	4879703	7	True				
ANR	4879738	Statement	fone	21:18:448:451	4879703	8	True				
ANR	4879739	Statement	=	21:22:452:452	4879703	9	True				
ANR	4879740	Statement	1L	21:24:454:455	4879703	10	True				
ANR	4879741	ExpressionStatement	L << 54	21:26:456:461	4879703	11	True				
ANR	4879742	ShiftExpression	L << 54		4879703	0		<<			
ANR	4879743	Identifier	L		4879703	0					
ANR	4879744	PrimaryExpression	54		4879703	1					
ANR	4879745	IdentifierDeclStatement	int ret = - 1 ;	23:4:468:479	4879703	12	True				
ANR	4879746	IdentifierDecl	ret = - 1		4879703	0					
ANR	4879747	IdentifierDeclType	int		4879703	0					
ANR	4879748	Identifier	ret		4879703	1					
ANR	4879749	AssignmentExpression	ret = - 1		4879703	2		=			
ANR	4879750	Identifier	ret		4879703	0					
ANR	4879751	UnaryOperationExpression	- 1		4879703	1					
ANR	4879752	UnaryOperator	-		4879703	0					
ANR	4879753	PrimaryExpression	1		4879703	1					
ANR	4879754	ExpressionStatement	emms_c ( )	27:4:488:496	4879703	13	True				
ANR	4879755	CallExpression	emms_c ( )		4879703	0					
ANR	4879756	Callee	emms_c		4879703	0					
ANR	4879757	Identifier	emms_c		4879703	0					
ANR	4879758	ArgumentList			4879703	1					
ANR	4879759	ExpressionStatement	"FF_ALLOC_OR_GOTO ( NULL , * filterPos , ( dstW + 3 ) * sizeof ( int16_t ) , fail )"	33:4:659:725	4879703	14	True				
ANR	4879760	CallExpression	"FF_ALLOC_OR_GOTO ( NULL , * filterPos , ( dstW + 3 ) * sizeof ( int16_t ) , fail )"		4879703	0					
ANR	4879761	Callee	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879762	Identifier	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879763	ArgumentList	NULL		4879703	1					
ANR	4879764	Argument	NULL		4879703	0					
ANR	4879765	Identifier	NULL		4879703	0					
ANR	4879766	Argument	* filterPos		4879703	1					
ANR	4879767	UnaryOperationExpression	* filterPos		4879703	0					
ANR	4879768	UnaryOperator	*		4879703	0					
ANR	4879769	Identifier	filterPos		4879703	1					
ANR	4879770	Argument	( dstW + 3 ) * sizeof ( int16_t )		4879703	2					
ANR	4879771	MultiplicativeExpression	( dstW + 3 ) * sizeof ( int16_t )		4879703	0		*			
ANR	4879772	AdditiveExpression	dstW + 3		4879703	0		+			
ANR	4879773	Identifier	dstW		4879703	0					
ANR	4879774	PrimaryExpression	3		4879703	1					
ANR	4879775	SizeofExpression	sizeof ( int16_t )		4879703	1					
ANR	4879776	Sizeof	sizeof		4879703	0					
ANR	4879777	SizeofOperand	int16_t		4879703	1					
ANR	4879778	Argument	fail		4879703	3					
ANR	4879779	Identifier	fail		4879703	0					
ANR	4879780	IfStatement	if ( FFABS ( xInc - 0x10000 ) < 10 )		4879703	15					
ANR	4879781	Condition	FFABS ( xInc - 0x10000 ) < 10	37:8:738:762	4879703	0	True				
ANR	4879782	RelationalExpression	FFABS ( xInc - 0x10000 ) < 10		4879703	0		<			
ANR	4879783	CallExpression	FFABS ( xInc - 0x10000 )		4879703	0					
ANR	4879784	Callee	FFABS		4879703	0					
ANR	4879785	Identifier	FFABS		4879703	0					
ANR	4879786	ArgumentList	xInc - 0x10000		4879703	1					
ANR	4879787	Argument	xInc - 0x10000		4879703	0					
ANR	4879788	AdditiveExpression	xInc - 0x10000		4879703	0		-			
ANR	4879789	Identifier	xInc		4879703	0					
ANR	4879790	PrimaryExpression	0x10000		4879703	1					
ANR	4879791	PrimaryExpression	10		4879703	1					
ANR	4879792	CompoundStatement		33:8:494:499	4879703	1					
ANR	4879793	IdentifierDeclStatement	int i ;	39:8:788:793	4879703	0	True				
ANR	4879794	IdentifierDecl	i		4879703	0					
ANR	4879795	IdentifierDeclType	int		4879703	0					
ANR	4879796	Identifier	i		4879703	1					
ANR	4879797	ExpressionStatement	filterSize = 1	41:8:804:817	4879703	1	True				
ANR	4879798	AssignmentExpression	filterSize = 1		4879703	0		=			
ANR	4879799	Identifier	filterSize		4879703	0					
ANR	4879800	PrimaryExpression	1		4879703	1					
ANR	4879801	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"	43:8:828:898	4879703	2	True				
ANR	4879802	CallExpression	"FF_ALLOCZ_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"		4879703	0					
ANR	4879803	Callee	FF_ALLOCZ_OR_GOTO		4879703	0					
ANR	4879804	Identifier	FF_ALLOCZ_OR_GOTO		4879703	0					
ANR	4879805	ArgumentList	NULL		4879703	1					
ANR	4879806	Argument	NULL		4879703	0					
ANR	4879807	Identifier	NULL		4879703	0					
ANR	4879808	Argument	filter		4879703	1					
ANR	4879809	Identifier	filter		4879703	0					
ANR	4879810	Argument	dstW * sizeof ( * filter ) * filterSize		4879703	2					
ANR	4879811	MultiplicativeExpression	dstW * sizeof ( * filter ) * filterSize		4879703	0		*			
ANR	4879812	Identifier	dstW		4879703	0					
ANR	4879813	MultiplicativeExpression	sizeof ( * filter ) * filterSize		4879703	1		*			
ANR	4879814	SizeofExpression	sizeof ( * filter )		4879703	0					
ANR	4879815	Sizeof	sizeof		4879703	0					
ANR	4879816	UnaryOperationExpression	* filter		4879703	1					
ANR	4879817	UnaryOperator	*		4879703	0					
ANR	4879818	Identifier	filter		4879703	1					
ANR	4879819	Identifier	filterSize		4879703	1					
ANR	4879820	Argument	fail		4879703	3					
ANR	4879821	Identifier	fail		4879703	0					
ANR	4879822	ForStatement	for ( i = 0 ; i < dstW ; i ++ )		4879703	3					
ANR	4879823	ForInit	i = 0 ;	47:13:916:919	4879703	0	True				
ANR	4879824	AssignmentExpression	i = 0		4879703	0		=			
ANR	4879825	Identifier	i		4879703	0					
ANR	4879826	PrimaryExpression	0		4879703	1					
ANR	4879827	Condition	i < dstW	47:18:921:926	4879703	1	True				
ANR	4879828	RelationalExpression	i < dstW		4879703	0		<			
ANR	4879829	Identifier	i		4879703	0					
ANR	4879830	Identifier	dstW		4879703	1					
ANR	4879831	PostIncDecOperationExpression	i ++	47:26:929:931	4879703	2	True				
ANR	4879832	Identifier	i		4879703	0					
ANR	4879833	IncDec	++		4879703	1					
ANR	4879834	CompoundStatement		41:31:640:640	4879703	3					
ANR	4879835	ExpressionStatement	filter [ i * filterSize ] = fone	49:12:949:975	4879703	0	True				
ANR	4879836	AssignmentExpression	filter [ i * filterSize ] = fone		4879703	0		=			
ANR	4879837	ArrayIndexing	filter [ i * filterSize ]		4879703	0					
ANR	4879838	Identifier	filter		4879703	0					
ANR	4879839	MultiplicativeExpression	i * filterSize		4879703	1		*			
ANR	4879840	Identifier	i		4879703	0					
ANR	4879841	Identifier	filterSize		4879703	1					
ANR	4879842	Identifier	fone		4879703	1					
ANR	4879843	ExpressionStatement	( * filterPos ) [ i ] = i	51:12:990:1007	4879703	1	True				
ANR	4879844	AssignmentExpression	( * filterPos ) [ i ] = i		4879703	0		=			
ANR	4879845	ArrayIndexing	( * filterPos ) [ i ]		4879703	0					
ANR	4879846	UnaryOperationExpression	* filterPos		4879703	0					
ANR	4879847	UnaryOperator	*		4879703	0					
ANR	4879848	Identifier	filterPos		4879703	1					
ANR	4879849	Identifier	i		4879703	1					
ANR	4879850	Identifier	i		4879703	1					
ANR	4879851	ElseStatement	else		4879703	0					
ANR	4879852	IfStatement	if ( flags & SWS_POINT )		4879703	0					
ANR	4879853	Condition	flags & SWS_POINT	57:15:1038:1052	4879703	0	True				
ANR	4879854	BitAndExpression	flags & SWS_POINT		4879703	0		&			
ANR	4879855	Identifier	flags		4879703	0					
ANR	4879856	Identifier	SWS_POINT		4879703	1					
ANR	4879857	CompoundStatement		55:8:824:837	4879703	1					
ANR	4879858	IdentifierDeclStatement	int i ;	59:8:1102:1107	4879703	0	True				
ANR	4879859	IdentifierDecl	i		4879703	0					
ANR	4879860	IdentifierDeclType	int		4879703	0					
ANR	4879861	Identifier	i		4879703	1					
ANR	4879862	IdentifierDeclStatement	int xDstInSrc ;	61:8:1118:1131	4879703	1	True				
ANR	4879863	IdentifierDecl	xDstInSrc		4879703	0					
ANR	4879864	IdentifierDeclType	int		4879703	0					
ANR	4879865	Identifier	xDstInSrc		4879703	1					
ANR	4879866	ExpressionStatement	filterSize = 1	63:8:1142:1155	4879703	2	True				
ANR	4879867	AssignmentExpression	filterSize = 1		4879703	0		=			
ANR	4879868	Identifier	filterSize		4879703	0					
ANR	4879869	PrimaryExpression	1		4879703	1					
ANR	4879870	ExpressionStatement	"FF_ALLOC_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"	65:8:1166:1235	4879703	3	True				
ANR	4879871	CallExpression	"FF_ALLOC_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"		4879703	0					
ANR	4879872	Callee	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879873	Identifier	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879874	ArgumentList	NULL		4879703	1					
ANR	4879875	Argument	NULL		4879703	0					
ANR	4879876	Identifier	NULL		4879703	0					
ANR	4879877	Argument	filter		4879703	1					
ANR	4879878	Identifier	filter		4879703	0					
ANR	4879879	Argument	dstW * sizeof ( * filter ) * filterSize		4879703	2					
ANR	4879880	MultiplicativeExpression	dstW * sizeof ( * filter ) * filterSize		4879703	0		*			
ANR	4879881	Identifier	dstW		4879703	0					
ANR	4879882	MultiplicativeExpression	sizeof ( * filter ) * filterSize		4879703	1		*			
ANR	4879883	SizeofExpression	sizeof ( * filter )		4879703	0					
ANR	4879884	Sizeof	sizeof		4879703	0					
ANR	4879885	UnaryOperationExpression	* filter		4879703	1					
ANR	4879886	UnaryOperator	*		4879703	0					
ANR	4879887	Identifier	filter		4879703	1					
ANR	4879888	Identifier	filterSize		4879703	1					
ANR	4879889	Argument	fail		4879703	3					
ANR	4879890	Identifier	fail		4879703	0					
ANR	4879891	ExpressionStatement	xDstInSrc = xInc / 2 - 0x8000	69:8:1248:1274	4879703	4	True				
ANR	4879892	AssignmentExpression	xDstInSrc = xInc / 2 - 0x8000		4879703	0		=			
ANR	4879893	Identifier	xDstInSrc		4879703	0					
ANR	4879894	AdditiveExpression	xInc / 2 - 0x8000		4879703	1		-			
ANR	4879895	MultiplicativeExpression	xInc / 2		4879703	0		/			
ANR	4879896	Identifier	xInc		4879703	0					
ANR	4879897	PrimaryExpression	2		4879703	1					
ANR	4879898	PrimaryExpression	0x8000		4879703	1					
ANR	4879899	ForStatement	for ( i = 0 ; i < dstW ; i ++ )		4879703	5					
ANR	4879900	ForInit	i = 0 ;	71:13:1290:1293	4879703	0	True				
ANR	4879901	AssignmentExpression	i = 0		4879703	0		=			
ANR	4879902	Identifier	i		4879703	0					
ANR	4879903	PrimaryExpression	0		4879703	1					
ANR	4879904	Condition	i < dstW	71:18:1295:1300	4879703	1	True				
ANR	4879905	RelationalExpression	i < dstW		4879703	0		<			
ANR	4879906	Identifier	i		4879703	0					
ANR	4879907	Identifier	dstW		4879703	1					
ANR	4879908	PostIncDecOperationExpression	i ++	71:26:1303:1305	4879703	2	True				
ANR	4879909	Identifier	i		4879703	0					
ANR	4879910	IncDec	++		4879703	1					
ANR	4879911	CompoundStatement		67:12:1029:1085	4879703	3					
ANR	4879912	IdentifierDeclStatement	int xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16 ;	73:12:1323:1379	4879703	0	True				
ANR	4879913	IdentifierDecl	xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	0					
ANR	4879914	IdentifierDeclType	int		4879703	0					
ANR	4879915	Identifier	xx		4879703	1					
ANR	4879916	AssignmentExpression	xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	2		=			
ANR	4879917	Identifier	xx		4879703	0					
ANR	4879918	ShiftExpression	( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	1		>>			
ANR	4879919	AdditiveExpression	xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 )		4879703	0		-			
ANR	4879920	Identifier	xDstInSrc		4879703	0					
ANR	4879921	AdditiveExpression	( ( filterSize - 1 ) << 15 ) + ( 1 << 15 )		4879703	1		+			
ANR	4879922	ShiftExpression	( filterSize - 1 ) << 15		4879703	0		<<			
ANR	4879923	AdditiveExpression	filterSize - 1		4879703	0		-			
ANR	4879924	Identifier	filterSize		4879703	0					
ANR	4879925	PrimaryExpression	1		4879703	1					
ANR	4879926	PrimaryExpression	15		4879703	1					
ANR	4879927	ShiftExpression	1 << 15		4879703	1		<<			
ANR	4879928	PrimaryExpression	1		4879703	0					
ANR	4879929	PrimaryExpression	15		4879703	1					
ANR	4879930	PrimaryExpression	16		4879703	1					
ANR	4879931	ExpressionStatement	( * filterPos ) [ i ] = xx	77:12:1396:1415	4879703	1	True				
ANR	4879932	AssignmentExpression	( * filterPos ) [ i ] = xx		4879703	0		=			
ANR	4879933	ArrayIndexing	( * filterPos ) [ i ]		4879703	0					
ANR	4879934	UnaryOperationExpression	* filterPos		4879703	0					
ANR	4879935	UnaryOperator	*		4879703	0					
ANR	4879936	Identifier	filterPos		4879703	1					
ANR	4879937	Identifier	i		4879703	1					
ANR	4879938	Identifier	xx		4879703	1					
ANR	4879939	ExpressionStatement	filter [ i ] = fone	79:12:1430:1445	4879703	2	True				
ANR	4879940	AssignmentExpression	filter [ i ] = fone		4879703	0		=			
ANR	4879941	ArrayIndexing	filter [ i ]		4879703	0					
ANR	4879942	Identifier	filter		4879703	0					
ANR	4879943	Identifier	i		4879703	1					
ANR	4879944	Identifier	fone		4879703	1					
ANR	4879945	ExpressionStatement	xDstInSrc += xInc	81:12:1460:1476	4879703	3	True				
ANR	4879946	AssignmentExpression	xDstInSrc += xInc		4879703	0		+=			
ANR	4879947	Identifier	xDstInSrc		4879703	0					
ANR	4879948	Identifier	xInc		4879703	1					
ANR	4879949	ElseStatement	else		4879703	0					
ANR	4879950	IfStatement	if ( ( xInc <= ( 1 << 16 ) && ( flags & SWS_AREA ) ) || ( flags & SWS_FAST_BILINEAR ) )		4879703	0					
ANR	4879951	Condition	( xInc <= ( 1 << 16 ) && ( flags & SWS_AREA ) ) || ( flags & SWS_FAST_BILINEAR )	85:15:1505:1570	4879703	0	True				
ANR	4879952	OrExpression	( xInc <= ( 1 << 16 ) && ( flags & SWS_AREA ) ) || ( flags & SWS_FAST_BILINEAR )		4879703	0		||			
ANR	4879953	AndExpression	xInc <= ( 1 << 16 ) && ( flags & SWS_AREA )		4879703	0		&&			
ANR	4879954	RelationalExpression	xInc <= ( 1 << 16 )		4879703	0		<=			
ANR	4879955	Identifier	xInc		4879703	0					
ANR	4879956	ShiftExpression	1 << 16		4879703	1		<<			
ANR	4879957	PrimaryExpression	1		4879703	0					
ANR	4879958	PrimaryExpression	16		4879703	1					
ANR	4879959	BitAndExpression	flags & SWS_AREA		4879703	1		&			
ANR	4879960	Identifier	flags		4879703	0					
ANR	4879961	Identifier	SWS_AREA		4879703	1					
ANR	4879962	BitAndExpression	flags & SWS_FAST_BILINEAR		4879703	1		&			
ANR	4879963	Identifier	flags		4879703	0					
ANR	4879964	Identifier	SWS_FAST_BILINEAR		4879703	1					
ANR	4879965	CompoundStatement		83:8:1326:1339	4879703	1					
ANR	4879966	IdentifierDeclStatement	int i ;	87:8:1604:1609	4879703	0	True				
ANR	4879967	IdentifierDecl	i		4879703	0					
ANR	4879968	IdentifierDeclType	int		4879703	0					
ANR	4879969	Identifier	i		4879703	1					
ANR	4879970	IdentifierDeclStatement	int xDstInSrc ;	89:8:1620:1633	4879703	1	True				
ANR	4879971	IdentifierDecl	xDstInSrc		4879703	0					
ANR	4879972	IdentifierDeclType	int		4879703	0					
ANR	4879973	Identifier	xDstInSrc		4879703	1					
ANR	4879974	ExpressionStatement	filterSize = 2	91:8:1644:1657	4879703	2	True				
ANR	4879975	AssignmentExpression	filterSize = 2		4879703	0		=			
ANR	4879976	Identifier	filterSize		4879703	0					
ANR	4879977	PrimaryExpression	2		4879703	1					
ANR	4879978	ExpressionStatement	"FF_ALLOC_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"	93:8:1668:1737	4879703	3	True				
ANR	4879979	CallExpression	"FF_ALLOC_OR_GOTO ( NULL , filter , dstW * sizeof ( * filter ) * filterSize , fail )"		4879703	0					
ANR	4879980	Callee	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879981	Identifier	FF_ALLOC_OR_GOTO		4879703	0					
ANR	4879982	ArgumentList	NULL		4879703	1					
ANR	4879983	Argument	NULL		4879703	0					
ANR	4879984	Identifier	NULL		4879703	0					
ANR	4879985	Argument	filter		4879703	1					
ANR	4879986	Identifier	filter		4879703	0					
ANR	4879987	Argument	dstW * sizeof ( * filter ) * filterSize		4879703	2					
ANR	4879988	MultiplicativeExpression	dstW * sizeof ( * filter ) * filterSize		4879703	0		*			
ANR	4879989	Identifier	dstW		4879703	0					
ANR	4879990	MultiplicativeExpression	sizeof ( * filter ) * filterSize		4879703	1		*			
ANR	4879991	SizeofExpression	sizeof ( * filter )		4879703	0					
ANR	4879992	Sizeof	sizeof		4879703	0					
ANR	4879993	UnaryOperationExpression	* filter		4879703	1					
ANR	4879994	UnaryOperator	*		4879703	0					
ANR	4879995	Identifier	filter		4879703	1					
ANR	4879996	Identifier	filterSize		4879703	1					
ANR	4879997	Argument	fail		4879703	3					
ANR	4879998	Identifier	fail		4879703	0					
ANR	4879999	ExpressionStatement	xDstInSrc = xInc / 2 - 0x8000	97:8:1750:1776	4879703	4	True				
ANR	4880000	AssignmentExpression	xDstInSrc = xInc / 2 - 0x8000		4879703	0		=			
ANR	4880001	Identifier	xDstInSrc		4879703	0					
ANR	4880002	AdditiveExpression	xInc / 2 - 0x8000		4879703	1		-			
ANR	4880003	MultiplicativeExpression	xInc / 2		4879703	0		/			
ANR	4880004	Identifier	xInc		4879703	0					
ANR	4880005	PrimaryExpression	2		4879703	1					
ANR	4880006	PrimaryExpression	0x8000		4879703	1					
ANR	4880007	ForStatement	for ( i = 0 ; i < dstW ; i ++ )		4879703	5					
ANR	4880008	ForInit	i = 0 ;	99:13:1792:1795	4879703	0	True				
ANR	4880009	AssignmentExpression	i = 0		4879703	0		=			
ANR	4880010	Identifier	i		4879703	0					
ANR	4880011	PrimaryExpression	0		4879703	1					
ANR	4880012	Condition	i < dstW	99:18:1797:1802	4879703	1	True				
ANR	4880013	RelationalExpression	i < dstW		4879703	0		<			
ANR	4880014	Identifier	i		4879703	0					
ANR	4880015	Identifier	dstW		4879703	1					
ANR	4880016	PostIncDecOperationExpression	i ++	99:26:1805:1807	4879703	2	True				
ANR	4880017	Identifier	i		4879703	0					
ANR	4880018	IncDec	++		4879703	1					
ANR	4880019	CompoundStatement		97:12:1602:1607	4879703	3					
ANR	4880020	IdentifierDeclStatement	int xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16 ;	101:12:1825:1881	4879703	0	True				
ANR	4880021	IdentifierDecl	xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	0					
ANR	4880022	IdentifierDeclType	int		4879703	0					
ANR	4880023	Identifier	xx		4879703	1					
ANR	4880024	AssignmentExpression	xx = ( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	2		=			
ANR	4880025	Identifier	xx		4879703	0					
ANR	4880026	ShiftExpression	( xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 ) ) >> 16		4879703	1		>>			
ANR	4880027	AdditiveExpression	xDstInSrc - ( ( filterSize - 1 ) << 15 ) + ( 1 << 15 )		4879703	0		-			
ANR	4880028	Identifier	xDstInSrc		4879703	0					
ANR	4880029	AdditiveExpression	( ( filterSize - 1 ) << 15 ) + ( 1 << 15 )		4879703	1		+			
ANR	4880030	ShiftExpression	( filterSize - 1 ) << 15		4879703	0		<<			
ANR	4880031	AdditiveExpression	filterSize - 1		4879703	0		-			
ANR	4880032	Identifier	filterSize		4879703	0					
ANR	4880033	PrimaryExpression	1		4879703	1					
ANR	4880034	PrimaryExpression	15		4879703	1					
ANR	4880035	ShiftExpression	1 << 15		4879703	1		<<			
ANR	4880036	PrimaryExpression	1		4879703	0					
ANR	4880037	PrimaryExpression	15		4879703	1					
ANR	4880038	PrimaryExpression	16		4879703	1					
ANR	4880039	IdentifierDeclStatement	int j ;	103:12:1896:1901	4879703	1	True				
ANR	4880040	IdentifierDecl	j		4879703	0					
ANR	4880041	IdentifierDeclType	int		4879703	0					
ANR	4880042	Identifier	j		4879703	1					
ANR	4880043	ExpressionStatement	( * filterPos ) [ i ] = xx	107:12:1918:1937	4879703	2	True				
ANR	4880044	AssignmentExpression	( * filterPos ) [ i ] = xx		4879703	0		=			
ANR	4880045	ArrayIndexing	( * filterPos ) [ i ]		4879703	0					
ANR	4880046	UnaryOperationExpression	* filterPos		4879703	0					
ANR	4880047	UnaryOperator	*		4879703	0					
ANR	4880048	Identifier	filterPos		4879703	1					
ANR	4880049	Identifier	i		4879703	1					
ANR	4880050	Identifier	xx		4879703	1					
ANR	4880051	ForStatement	for ( j = 0 ; j < filterSize ; j ++ )		4879703	3					
ANR	4880052	ForInit	j = 0 ;	111:17:2027:2030	4879703	0	True				
ANR	4880053	AssignmentExpression	j = 0		4879703	0		=			
ANR	4880054	Identifier	j		4879703	0					
ANR	4880055	PrimaryExpression	0		4879703	1					
ANR	4880056	Condition	j < filterSize	111:22:2032:2043	4879703	1	True				
ANR	4880057	RelationalExpression	j < filterSize		4879703	0		<			
ANR	4880058	Identifier	j		4879703	0					
ANR	4880059	Identifier	filterSize		4879703	1					
ANR	4880060	PostIncDecOperationExpression	j ++	111:36:2046:2048	4879703	2	True				
ANR	4880061	Identifier	j		4879703	0					
ANR	4880062	IncDec	++		4879703	1					
ANR	4880063	CompoundStatement		107:16:1776:1836	4879703	3					
ANR	4880064	IdentifierDeclStatement	int64_t coeff = fone - FFABS ( ( xx << 16 ) - xDstInSrc ) * ( fone >> 16 ) ;	113:16:2070:2130	4879703	0	True				
ANR	4880065	IdentifierDecl	coeff = fone - FFABS ( ( xx << 16 ) - xDstInSrc ) * ( fone >> 16 )		4879703	0					
ANR	4880066	IdentifierDeclType	int64_t		4879703	0					
ANR	4880067	Identifier	coeff		4879703	1					
ANR	4880068	AssignmentExpression	coeff = fone - FFABS ( ( xx << 16 ) - xDstInSrc ) * ( fone >> 16 )		4879703	2		=			
ANR	4880069	Identifier	coeff		4879703	0					
ANR	4880070	AdditiveExpression	fone - FFABS ( ( xx << 16 ) - xDstInSrc ) * ( fone >> 16 )		4879703	1		-			
ANR	4880071	Identifier	fone		4879703	0					
ANR	4880072	MultiplicativeExpression	FFABS ( ( xx << 16 ) - xDstInSrc ) * ( fone >> 16 )		4879703	1		*			
ANR	4880073	CallExpression	FFABS ( ( xx << 16 ) - xDstInSrc )		4879703	0					
ANR	4880074	Callee	FFABS		4879703	0					
ANR	4880075	Identifier	FFABS		4879703	0					
ANR	4880076	ArgumentList	( xx << 16 ) - xDstInSrc		4879703	1					
ANR	4880077	Argument	( xx << 16 ) - xDstInSrc		4879703	0					
ANR	4880078	AdditiveExpression	( xx << 16 ) - xDstInSrc		4879703	0		-			
ANR	4880079	ShiftExpression	xx << 16		4879703	0		<<			
ANR	4880080	Identifier	xx		4879703	0					
ANR	4880081	PrimaryExpression	16		4879703	1					
ANR	4880082	Identifier	xDstInSrc		4879703	1					
ANR	4880083	ShiftExpression	fone >> 16		4879703	1		>>			
ANR	4880084	Identifier	fone		4879703	0					
ANR	4880085	PrimaryExpression	16		4879703	1					
ANR	4880086	IfStatement	if ( coeff < 0 )		4879703	1					
ANR	4880087	Condition	coeff < 0	115:20:2153:2159	4879703	0	True				
ANR	4880088	RelationalExpression	coeff < 0		4879703	0		<			
ANR	4880089	Identifier	coeff		4879703	0					
ANR	4880090	PrimaryExpression	0		4879703	1					
ANR	4880091	ExpressionStatement	coeff = 0	115:29:2162:2169	4879703	1	True				
ANR	4880092	AssignmentExpression	coeff = 0		4879703	0		=			
ANR	4880093	Identifier	coeff		4879703	0					
ANR	4880094	PrimaryExpression	0		4879703	1					
ANR	4880095	ExpressionStatement	filter [ i * filterSize + j ] = coeff	117:16:2188:2219	4879703	2	True				
ANR	4880096	AssignmentExpression	filter [ i * filterSize + j ] = coeff		4879703	0		=			
ANR	4880097	ArrayIndexing	filter [ i * filterSize + j ]		4879703	0					
ANR	4880098	Identifier	filter		4879703	0					
ANR	4880099	AdditiveExpression	i * filterSize + j		4879703	1		+			
ANR	4880100	MultiplicativeExpression	i * filterSize		4879703	0		*			
ANR	4880101	Identifier	i		4879703	0					
ANR	4880102	Identifier	filterSize		4879703	1					
ANR	4880103	Identifier	j		4879703	1					
ANR	4880104	Identifier	coeff		4879703	1					
ANR	4880105	ExpressionStatement	xx ++	119:16:2238:2242	4879703	3	True				
ANR	4880106	PostIncDecOperationExpression	xx ++		4879703	0					
ANR	4880107	Identifier	xx		4879703	0					
ANR	4880108	IncDec	++		4879703	1					
ANR	4880109	ExpressionStatement	xDstInSrc += xInc	123:12:2272:2288	4879703	4	True				
ANR	4880110	AssignmentExpression	xDstInSrc += xInc		4879703	0		+=			
ANR	4880111	Identifier	xDstInSrc		4879703	0					
ANR	4880112	Identifier	xInc		4879703	1					
ANR	4880113	ElseStatement	else		4879703	0					
ANR	4880114	IfStatement	if ( flags & SWS_GAUSS )		4879703	0					
ANR	4880115	Condition	flags & SWS_GAUSS	281:27:5759:5775	4879703	0	True				
ANR	4880116	BitAndExpression	flags & SWS_GAUSS		4879703	0		&			
ANR	4880117	Identifier	flags		4879703	0					
ANR	4880118	Identifier	SWS_GAUSS		4879703	1					
ANR	4880119	CompoundStatement		277:20:5507:5563	4879703	1					
ANR	4880120	IdentifierDeclStatement	double p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0 ;	283:20:5801:5857	4879703	0	True				
ANR	4880121	IdentifierDecl	p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	0					
ANR	4880122	IdentifierDeclType	double		4879703	0					
ANR	4880123	Identifier	p		4879703	1					
ANR	4880124	AssignmentExpression	p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	2		=			
ANR	4880125	Identifier	p		4879703	0					
ANR	4880126	ConditionalExpression	param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	1					
ANR	4880127	Condition	param [ 0 ] != SWS_PARAM_DEFAULT		4879703	0					
ANR	4880128	EqualityExpression	param [ 0 ] != SWS_PARAM_DEFAULT		4879703	0		!=			
ANR	4880129	ArrayIndexing	param [ 0 ]		4879703	0					
ANR	4880130	Identifier	param		4879703	0					
ANR	4880131	PrimaryExpression	0		4879703	1					
ANR	4880132	Identifier	SWS_PARAM_DEFAULT		4879703	1					
ANR	4880133	ArrayIndexing	param [ 0 ]		4879703	1					
ANR	4880134	Identifier	param		4879703	0					
ANR	4880135	PrimaryExpression	0		4879703	1					
ANR	4880136	PrimaryExpression	3.0		4879703	2					
ANR	4880137	ExpressionStatement	"coeff = ( pow ( 2.0 , - p * floatd * floatd ) ) * fone"	285:20:5880:5922	4879703	1	True				
ANR	4880138	AssignmentExpression	"coeff = ( pow ( 2.0 , - p * floatd * floatd ) ) * fone"		4879703	0		=			
ANR	4880139	Identifier	coeff		4879703	0					
ANR	4880140	MultiplicativeExpression	"( pow ( 2.0 , - p * floatd * floatd ) ) * fone"		4879703	1		*			
ANR	4880141	CallExpression	"pow ( 2.0 , - p * floatd * floatd )"		4879703	0					
ANR	4880142	Callee	pow		4879703	0					
ANR	4880143	Identifier	pow		4879703	0					
ANR	4880144	ArgumentList	2.0		4879703	1					
ANR	4880145	Argument	2.0		4879703	0					
ANR	4880146	PrimaryExpression	2.0		4879703	0					
ANR	4880147	Argument	- p * floatd * floatd		4879703	1					
ANR	4880148	MultiplicativeExpression	- p * floatd * floatd		4879703	0		*			
ANR	4880149	UnaryOperationExpression	- p		4879703	0					
ANR	4880150	UnaryOperator	-		4879703	0					
ANR	4880151	Identifier	p		4879703	1					
ANR	4880152	MultiplicativeExpression	floatd * floatd		4879703	1		*			
ANR	4880153	Identifier	floatd		4879703	0					
ANR	4880154	Identifier	floatd		4879703	1					
ANR	4880155	Identifier	fone		4879703	1					
ANR	4880156	ElseStatement	else		4879703	0					
ANR	4880157	IfStatement	if ( flags & SWS_SINC )		4879703	0					
ANR	4880158	Condition	flags & SWS_SINC	287:27:5952:5967	4879703	0	True				
ANR	4880159	BitAndExpression	flags & SWS_SINC		4879703	0		&			
ANR	4880160	Identifier	flags		4879703	0					
ANR	4880161	Identifier	SWS_SINC		4879703	1					
ANR	4880162	CompoundStatement		281:45:5676:5676	4879703	1					
ANR	4880163	ExpressionStatement	coeff = ( d ? sin ( floatd * M_PI ) / ( floatd * M_PI ) : 1.0 ) * fone	289:20:5993:6048	4879703	0	True				
ANR	4880164	AssignmentExpression	coeff = ( d ? sin ( floatd * M_PI ) / ( floatd * M_PI ) : 1.0 ) * fone		4879703	0		=			
ANR	4880165	Identifier	coeff		4879703	0					
ANR	4880166	MultiplicativeExpression	( d ? sin ( floatd * M_PI ) / ( floatd * M_PI ) : 1.0 ) * fone		4879703	1		*			
ANR	4880167	ConditionalExpression	d ? sin ( floatd * M_PI ) / ( floatd * M_PI ) : 1.0		4879703	0					
ANR	4880168	Condition	d		4879703	0					
ANR	4880169	Identifier	d		4879703	0					
ANR	4880170	MultiplicativeExpression	sin ( floatd * M_PI ) / ( floatd * M_PI )		4879703	1		/			
ANR	4880171	CallExpression	sin ( floatd * M_PI )		4879703	0					
ANR	4880172	Callee	sin		4879703	0					
ANR	4880173	Identifier	sin		4879703	0					
ANR	4880174	ArgumentList	floatd * M_PI		4879703	1					
ANR	4880175	Argument	floatd * M_PI		4879703	0					
ANR	4880176	MultiplicativeExpression	floatd * M_PI		4879703	0		*			
ANR	4880177	Identifier	floatd		4879703	0					
ANR	4880178	Identifier	M_PI		4879703	1					
ANR	4880179	MultiplicativeExpression	floatd * M_PI		4879703	1		*			
ANR	4880180	Identifier	floatd		4879703	0					
ANR	4880181	Identifier	M_PI		4879703	1					
ANR	4880182	PrimaryExpression	1.0		4879703	2					
ANR	4880183	Identifier	fone		4879703	1					
ANR	4880184	ElseStatement	else		4879703	0					
ANR	4880185	IfStatement	if ( flags & SWS_LANCZOS )		4879703	0					
ANR	4880186	Condition	flags & SWS_LANCZOS	291:27:6078:6096	4879703	0	True				
ANR	4880187	BitAndExpression	flags & SWS_LANCZOS		4879703	0		&			
ANR	4880188	Identifier	flags		4879703	0					
ANR	4880189	Identifier	SWS_LANCZOS		4879703	1					
ANR	4880190	CompoundStatement		287:20:5828:5884	4879703	1					
ANR	4880191	IdentifierDeclStatement	double p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0 ;	293:20:6122:6178	4879703	0	True				
ANR	4880192	IdentifierDecl	p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	0					
ANR	4880193	IdentifierDeclType	double		4879703	0					
ANR	4880194	Identifier	p		4879703	1					
ANR	4880195	AssignmentExpression	p = param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	2		=			
ANR	4880196	Identifier	p		4879703	0					
ANR	4880197	ConditionalExpression	param [ 0 ] != SWS_PARAM_DEFAULT ? param [ 0 ] : 3.0		4879703	1					
ANR	4880198	Condition	param [ 0 ] != SWS_PARAM_DEFAULT		4879703	0					
ANR	4880199	EqualityExpression	param [ 0 ] != SWS_PARAM_DEFAULT		4879703	0		!=			
ANR	4880200	ArrayIndexing	param [ 0 ]		4879703	0					
ANR	4880201	Identifier	param		4879703	0					
ANR	4880202	PrimaryExpression	0		4879703	1					
ANR	4880203	Identifier	SWS_PARAM_DEFAULT		4879703	1					
ANR	4880204	ArrayIndexing	param [ 0 ]		4879703	1					
ANR	4880205	Identifier	param		4879703	0					
ANR	4880206	PrimaryExpression	0		4879703	1					
ANR	4880207	PrimaryExpression	3.0		4879703	2					
ANR	4880208	ExpressionStatement	coeff = ( d ? sin ( floatd * M_PI ) * sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p ) : 1.0 ) * fone	295:20:6201:6289	4879703	1	True				
ANR	4880209	AssignmentExpression	coeff = ( d ? sin ( floatd * M_PI ) * sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p ) : 1.0 ) * fone		4879703	0		=			
ANR	4880210	Identifier	coeff		4879703	0					
ANR	4880211	MultiplicativeExpression	( d ? sin ( floatd * M_PI ) * sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p ) : 1.0 ) * fone		4879703	1		*			
ANR	4880212	ConditionalExpression	d ? sin ( floatd * M_PI ) * sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p ) : 1.0		4879703	0					
ANR	4880213	Condition	d		4879703	0					
ANR	4880214	Identifier	d		4879703	0					
ANR	4880215	MultiplicativeExpression	sin ( floatd * M_PI ) * sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p )		4879703	1		*			
ANR	4880216	CallExpression	sin ( floatd * M_PI )		4879703	0					
ANR	4880217	Callee	sin		4879703	0					
ANR	4880218	Identifier	sin		4879703	0					
ANR	4880219	ArgumentList	floatd * M_PI		4879703	1					
ANR	4880220	Argument	floatd * M_PI		4879703	0					
ANR	4880221	MultiplicativeExpression	floatd * M_PI		4879703	0		*			
ANR	4880222	Identifier	floatd		4879703	0					
ANR	4880223	Identifier	M_PI		4879703	1					
ANR	4880224	MultiplicativeExpression	sin ( floatd * M_PI / p ) / ( floatd * floatd * M_PI * M_PI / p )		4879703	1		/			
ANR	4880225	CallExpression	sin ( floatd * M_PI / p )		4879703	0					
ANR	4880226	Callee	sin		4879703	0					
ANR	4880227	Identifier	sin		4879703	0					
ANR	4880228	ArgumentList	floatd * M_PI / p		4879703	1					
ANR	4880229	Argument	floatd * M_PI / p		4879703	0					
ANR	4880230	MultiplicativeExpression	floatd * M_PI / p		4879703	0		*			
ANR	4880231	Identifier	floatd		4879703	0					
ANR	4880232	MultiplicativeExpression	M_PI / p		4879703	1		/			
ANR	4880233	Identifier	M_PI		4879703	0					
ANR	4880234	Identifier	p		4879703	1					
ANR	4880235	MultiplicativeExpression	floatd * floatd * M_PI * M_PI / p		4879703	1		*			
ANR	4880236	Identifier	floatd		4879703	0					
ANR	4880237	MultiplicativeExpression	floatd * M_PI * M_PI / p		4879703	1		*			
ANR	4880238	Identifier	floatd		4879703	0					
ANR	4880239	MultiplicativeExpression	M_PI * M_PI / p		4879703	1		*			
ANR	4880240	Identifier	M_PI		4879703	0					
ANR	4880241	MultiplicativeExpression	M_PI / p		4879703	1		/			
ANR	4880242	Identifier	M_PI		4879703	0					
ANR	4880243	Identifier	p		4879703	1					
ANR	4880244	PrimaryExpression	1.0		4879703	2					
ANR	4880245	Identifier	fone		4879703	1					
ANR	4880246	IfStatement	if ( floatd > p )		4879703	2					
ANR	4880247	Condition	floatd > p	297:24:6316:6323	4879703	0	True				
ANR	4880248	RelationalExpression	floatd > p		4879703	0		>			
ANR	4880249	Identifier	floatd		4879703	0					
ANR	4880250	Identifier	p		4879703	1					
ANR	4880251	ExpressionStatement	coeff = 0	297:34:6326:6333	4879703	1	True				
ANR	4880252	AssignmentExpression	coeff = 0		4879703	0		=			
ANR	4880253	Identifier	coeff		4879703	0					
ANR	4880254	PrimaryExpression	0		4879703	1					
ANR	4880255	ElseStatement	else		4879703	0					
ANR	4880256	IfStatement	if ( flags & SWS_BILINEAR )		4879703	0					
ANR	4880257	Condition	flags & SWS_BILINEAR	299:27:6363:6382	4879703	0	True				
ANR	4880258	BitAndExpression	flags & SWS_BILINEAR		4879703	0		&			
ANR	4880259	Identifier	flags		4879703	0					
ANR	4880260	Identifier	SWS_BILINEAR		4879703	1					
ANR	4880261	CompoundStatement		293:49:6091:6091	4879703	1					
ANR	4880262	ExpressionStatement	coeff = ( 1 << 30 ) - d	301:20:6408:6426	4879703	0	True				
ANR	4880263	AssignmentExpression	coeff = ( 1 << 30 ) - d		4879703	0		=			
ANR	4880264	Identifier	coeff		4879703	0					
ANR	4880265	AdditiveExpression	( 1 << 30 ) - d		4879703	1		-			
ANR	4880266	ShiftExpression	1 << 30		4879703	0		<<			
ANR	4880267	PrimaryExpression	1		4879703	0					
ANR	4880268	PrimaryExpression	30		4879703	1					
ANR	4880269	Identifier	d		4879703	1					
ANR	4880270	IfStatement	if ( coeff < 0 )		4879703	1					
ANR	4880271	Condition	coeff < 0	303:24:6453:6459	4879703	0	True				
ANR	4880272	RelationalExpression	coeff < 0		4879703	0		<			
ANR	4880273	Identifier	coeff		4879703	0					
ANR	4880274	PrimaryExpression	0		4879703	1					
ANR	4880275	ExpressionStatement	coeff = 0	303:33:6462:6469	4879703	1	True				
ANR	4880276	AssignmentExpression	coeff = 0		4879703	0		=			
ANR	4880277	Identifier	coeff		4879703	0					
ANR	4880278	PrimaryExpression	0		4879703	1					
ANR	4880279	ExpressionStatement	coeff *= fone >> 30	305:20:6492:6511	4879703	2	True				
ANR	4880280	AssignmentExpression	coeff *= fone >> 30		4879703	0		*=			
ANR	4880281	Identifier	coeff		4879703	0					
ANR	4880282	ShiftExpression	fone >> 30		4879703	1		>>			
ANR	4880283	Identifier	fone		4879703	0					
ANR	4880284	PrimaryExpression	30		4879703	1					
ANR	4880285	ElseStatement	else		4879703	0					
ANR	4880286	IfStatement	if ( flags & SWS_SPLINE )		4879703	0					
ANR	4880287	Condition	flags & SWS_SPLINE	307:27:6541:6558	4879703	0	True				
ANR	4880288	BitAndExpression	flags & SWS_SPLINE		4879703	0		&			
ANR	4880289	Identifier	flags		4879703	0					
ANR	4880290	Identifier	SWS_SPLINE		4879703	1					
ANR	4880291	CompoundStatement		303:20:6290:6317	4879703	1					
ANR	4880292	IdentifierDeclStatement	double p = - 2.196152422706632 ;	309:20:6584:6611	4879703	0	True				
ANR	4880293	IdentifierDecl	p = - 2.196152422706632		4879703	0					
ANR	4880294	IdentifierDeclType	double		4879703	0					
ANR	4880295	Identifier	p		4879703	1					
ANR	4880296	AssignmentExpression	p = - 2.196152422706632		4879703	2		=			
ANR	4880297	Identifier	p		4879703	0					
ANR	4880298	UnaryOperationExpression	- 2.196152422706632		4879703	1					
ANR	4880299	UnaryOperator	-		4879703	0					
ANR	4880300	PrimaryExpression	2.196152422706632		4879703	1					
ANR	4880301	ExpressionStatement	"coeff = getSplineCoeff ( 1.0 , 0.0 , p , - p - 1.0 , floatd ) * fone"	311:20:6634:6692	4879703	1	True				
ANR	4880302	AssignmentExpression	"coeff = getSplineCoeff ( 1.0 , 0.0 , p , - p - 1.0 , floatd ) * fone"		4879703	0		=			
ANR	4880303	Identifier	coeff		4879703	0					
ANR	4880304	MultiplicativeExpression	"getSplineCoeff ( 1.0 , 0.0 , p , - p - 1.0 , floatd ) * fone"		4879703	1		*			
ANR	4880305	CallExpression	"getSplineCoeff ( 1.0 , 0.0 , p , - p - 1.0 , floatd )"		4879703	0					
ANR	4880306	Callee	getSplineCoeff		4879703	0					
ANR	4880307	Identifier	getSplineCoeff		4879703	0					
ANR	4880308	ArgumentList	1.0		4879703	1					
ANR	4880309	Argument	1.0		4879703	0					
ANR	4880310	PrimaryExpression	1.0		4879703	0					
ANR	4880311	Argument	0.0		4879703	1					
ANR	4880312	PrimaryExpression	0.0		4879703	0					
ANR	4880313	Argument	p		4879703	2					
ANR	4880314	Identifier	p		4879703	0					
ANR	4880315	Argument	- p - 1.0		4879703	3					
ANR	4880316	AdditiveExpression	- p - 1.0		4879703	0		-			
ANR	4880317	UnaryOperationExpression	- p		4879703	0					
ANR	4880318	UnaryOperator	-		4879703	0					
ANR	4880319	Identifier	p		4879703	1					
ANR	4880320	PrimaryExpression	1.0		4879703	1					
ANR	4880321	Argument	floatd		4879703	4					
ANR	4880322	Identifier	floatd		4879703	0					
ANR	4880323	Identifier	fone		4879703	1					
ANR	4880324	ElseStatement	else		4879703	0					
ANR	4880325	CompoundStatement		307:23:6424:6424	4879703	0					
ANR	4880326	ExpressionStatement	coeff = 0.0	315:20:6741:6751	4879703	0	True				
ANR	4880327	AssignmentExpression	coeff = 0.0		4879703	0		=			
ANR	4880328	Identifier	coeff		4879703	0					
ANR	4880329	PrimaryExpression	0.0		4879703	1					
ANR	4880330	ExpressionStatement	assert ( 0 )	317:20:6795:6804	4879703	1	True				
ANR	4880331	CallExpression	assert ( 0 )		4879703	0					
ANR	4880332	Callee	assert		4879703	0					
ANR	4880333	Identifier	assert		4879703	0					
ANR	4880334	ArgumentList	0		4879703	1					
ANR	4880335	Argument	0		4879703	0					
ANR	4880336	PrimaryExpression	0		4879703	0					
ANR	4880337	ReturnType	static int		4879703	1					
ANR	4880338	Identifier	initFilter		4879703	2					
ANR	4880339	ParameterList	"int16_t * * outFilter , int16_t * * filterPos , int * outFilterSize , int xInc , int srcW , int dstW , int filterAlign , int one , int flags , int cpu_flags , SwsVector * srcFilter , SwsVector * dstFilter , double param [ 2 ] , int is_horizontal"		4879703	3					
ANR	4880340	Parameter	int16_t * * outFilter	1:22:22:40	4879703	0	True				
ANR	4880341	ParameterType	int16_t * *		4879703	0					
ANR	4880342	Identifier	outFilter		4879703	1					
ANR	4880343	Parameter	int16_t * * filterPos	1:43:43:61	4879703	1	True				
ANR	4880344	ParameterType	int16_t * *		4879703	0					
ANR	4880345	Identifier	filterPos		4879703	1					
ANR	4880346	Parameter	int * outFilterSize	1:64:64:81	4879703	2	True				
ANR	4880347	ParameterType	int *		4879703	0					
ANR	4880348	Identifier	outFilterSize		4879703	1					
ANR	4880349	Parameter	int xInc	1:84:84:91	4879703	3	True				
ANR	4880350	ParameterType	int		4879703	0					
ANR	4880351	Identifier	xInc		4879703	1					
ANR	4880352	Parameter	int srcW	3:22:117:124	4879703	4	True				
ANR	4880353	ParameterType	int		4879703	0					
ANR	4880354	Identifier	srcW		4879703	1					
ANR	4880355	Parameter	int dstW	3:32:127:134	4879703	5	True				
ANR	4880356	ParameterType	int		4879703	0					
ANR	4880357	Identifier	dstW		4879703	1					
ANR	4880358	Parameter	int filterAlign	3:42:137:151	4879703	6	True				
ANR	4880359	ParameterType	int		4879703	0					
ANR	4880360	Identifier	filterAlign		4879703	1					
ANR	4880361	Parameter	int one	3:59:154:160	4879703	7	True				
ANR	4880362	ParameterType	int		4879703	0					
ANR	4880363	Identifier	one		4879703	1					
ANR	4880364	Parameter	int flags	3:68:163:171	4879703	8	True				
ANR	4880365	ParameterType	int		4879703	0					
ANR	4880366	Identifier	flags		4879703	1					
ANR	4880367	Parameter	int cpu_flags	3:79:174:186	4879703	9	True				
ANR	4880368	ParameterType	int		4879703	0					
ANR	4880369	Identifier	cpu_flags		4879703	1					
ANR	4880370	Parameter	SwsVector * srcFilter	5:22:212:231	4879703	10	True				
ANR	4880371	ParameterType	SwsVector *		4879703	0					
ANR	4880372	Identifier	srcFilter		4879703	1					
ANR	4880373	Parameter	SwsVector * dstFilter	5:44:234:253	4879703	11	True				
ANR	4880374	ParameterType	SwsVector *		4879703	0					
ANR	4880375	Identifier	dstFilter		4879703	1					
ANR	4880376	Parameter	double param [ 2 ]	5:66:256:270	4879703	12	True				
ANR	4880377	ParameterType	double [ 2 ]		4879703	0					
ANR	4880378	Identifier	param		4879703	1					
ANR	4880379	Parameter	int is_horizontal	5:83:273:289	4879703	13	True				
ANR	4880380	ParameterType	int		4879703	0					
ANR	4880381	Identifier	is_horizontal		4879703	1					
ANR	4880382	CFGEntryNode	ENTRY		4879703		True				
ANR	4880383	CFGExitNode	EXIT		4879703		True				
ANR	4880384	Symbol	xx		4879703						
ANR	4880385	Symbol	srcFilter		4879703						
ANR	4880386	Symbol	* * filterPos		4879703						
ANR	4880387	Symbol	M_PI		4879703						
ANR	4880388	Symbol	SWS_SPLINE		4879703						
ANR	4880389	Symbol	SWS_SINC		4879703						
ANR	4880390	Symbol	dstW		4879703						
ANR	4880391	Symbol	ret		4879703						
ANR	4880392	Symbol	minFilterSize		4879703						
ANR	4880393	Symbol	NULL		4879703						
ANR	4880394	Symbol	SWS_POINT		4879703						
ANR	4880395	Symbol	filterAlign		4879703						
ANR	4880396	Symbol	xDstInSrc		4879703						
ANR	4880397	Symbol	filter2		4879703						
ANR	4880398	Symbol	cpu_flags		4879703						
ANR	4880399	Symbol	* param		4879703						
ANR	4880400	Symbol	outFilter		4879703						
ANR	4880401	Symbol	filter2Size		4879703						
ANR	4880402	Symbol	fail		4879703						
ANR	4880403	Symbol	floatd		4879703						
ANR	4880404	Symbol	dstFilter		4879703						
ANR	4880405	Symbol	srcW		4879703						
ANR	4880406	Symbol	is_horizontal		4879703						
ANR	4880407	Symbol	flags		4879703						
ANR	4880408	Symbol	filterPos		4879703						
ANR	4880409	Symbol	SWS_LANCZOS		4879703						
ANR	4880410	Symbol	param		4879703						
ANR	4880411	Symbol	pow		4879703						
ANR	4880412	Symbol	sin		4879703						
ANR	4880413	Symbol	coeff		4879703						
ANR	4880414	Symbol	d		4879703						
ANR	4880415	Symbol	* filterSize		4879703						
ANR	4880416	Symbol	SWS_AREA		4879703						
ANR	4880417	Symbol	outFilterSize		4879703						
ANR	4880418	Symbol	one		4879703						
ANR	4880419	Symbol	SWS_FAST_BILINEAR		4879703						
ANR	4880420	Symbol	SWS_BILINEAR		4879703						
ANR	4880421	Symbol	i		4879703						
ANR	4880422	Symbol	FFABS		4879703						
ANR	4880423	Symbol	j		4879703						
ANR	4880424	Symbol	getSplineCoeff		4879703						
ANR	4880425	Symbol	* filterPos		4879703						
ANR	4880426	Symbol	* filter		4879703						
ANR	4880427	Symbol	filter		4879703						
ANR	4880428	Symbol	fone		4879703						
ANR	4880429	Symbol	SWS_PARAM_DEFAULT		4879703						
ANR	4880430	Symbol	p		4879703						
ANR	4880431	Symbol	xInc		4879703						
ANR	4880432	Symbol	* i		4879703						
ANR	4880433	Symbol	filterSize		4879703						
ANR	4880434	Symbol	* j		4879703						
ANR	4880435	Symbol	SWS_GAUSS		4879703						
