command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8201911	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tcg_constant_folding_01_0.c								
ANR	8201912	Function	tcg_constant_folding	1:0:0:14625							
ANR	8201913	FunctionDef	"tcg_constant_folding (TCGContext * s , uint16_t * tcg_opc_ptr , TCGArg * args , TCGOpDef * tcg_op_defs)"		8201912	0					
ANR	8201914	CompoundStatement		5:0:149:14625	8201912	0					
ANR	8201915	IdentifierDeclStatement	"int i , nb_ops , op_index , nb_temps , nb_globals , nb_call_args ;"	7:4:156:215	8201912	0	True				
ANR	8201916	IdentifierDecl	i		8201912	0					
ANR	8201917	IdentifierDeclType	int		8201912	0					
ANR	8201918	Identifier	i		8201912	1					
ANR	8201919	IdentifierDecl	nb_ops		8201912	1					
ANR	8201920	IdentifierDeclType	int		8201912	0					
ANR	8201921	Identifier	nb_ops		8201912	1					
ANR	8201922	IdentifierDecl	op_index		8201912	2					
ANR	8201923	IdentifierDeclType	int		8201912	0					
ANR	8201924	Identifier	op_index		8201912	1					
ANR	8201925	IdentifierDecl	nb_temps		8201912	3					
ANR	8201926	IdentifierDeclType	int		8201912	0					
ANR	8201927	Identifier	nb_temps		8201912	1					
ANR	8201928	IdentifierDecl	nb_globals		8201912	4					
ANR	8201929	IdentifierDeclType	int		8201912	0					
ANR	8201930	Identifier	nb_globals		8201912	1					
ANR	8201931	IdentifierDecl	nb_call_args		8201912	5					
ANR	8201932	IdentifierDeclType	int		8201912	0					
ANR	8201933	Identifier	nb_call_args		8201912	1					
ANR	8201934	IdentifierDeclStatement	TCGOpcode op ;	9:4:222:234	8201912	1	True				
ANR	8201935	IdentifierDecl	op		8201912	0					
ANR	8201936	IdentifierDeclType	TCGOpcode		8201912	0					
ANR	8201937	Identifier	op		8201912	1					
ANR	8201938	IdentifierDeclStatement	const TCGOpDef * def ;	11:4:241:260	8201912	2	True				
ANR	8201939	IdentifierDecl	* def		8201912	0					
ANR	8201940	IdentifierDeclType	const TCGOpDef *		8201912	0					
ANR	8201941	Identifier	def		8201912	1					
ANR	8201942	IdentifierDeclStatement	TCGArg * gen_args ;	13:4:267:283	8201912	3	True				
ANR	8201943	IdentifierDecl	* gen_args		8201912	0					
ANR	8201944	IdentifierDeclType	TCGArg *		8201912	0					
ANR	8201945	Identifier	gen_args		8201912	1					
ANR	8201946	IdentifierDeclStatement	TCGArg tmp ;	15:4:290:300	8201912	4	True				
ANR	8201947	IdentifierDecl	tmp		8201912	0					
ANR	8201948	IdentifierDeclType	TCGArg		8201912	0					
ANR	8201949	Identifier	tmp		8201912	1					
ANR	8201950	IdentifierDeclStatement	TCGCond cond ;	17:4:307:319	8201912	5	True				
ANR	8201951	IdentifierDecl	cond		8201912	0					
ANR	8201952	IdentifierDeclType	TCGCond		8201912	0					
ANR	8201953	Identifier	cond		8201912	1					
ANR	8201954	ExpressionStatement	nb_temps = s -> nb_temps	35:4:686:708	8201912	6	True				
ANR	8201955	AssignmentExpression	nb_temps = s -> nb_temps		8201912	0		=			
ANR	8201956	Identifier	nb_temps		8201912	0					
ANR	8201957	PtrMemberAccess	s -> nb_temps		8201912	1					
ANR	8201958	Identifier	s		8201912	0					
ANR	8201959	Identifier	nb_temps		8201912	1					
ANR	8201960	ExpressionStatement	nb_globals = s -> nb_globals	37:4:715:741	8201912	7	True				
ANR	8201961	AssignmentExpression	nb_globals = s -> nb_globals		8201912	0		=			
ANR	8201962	Identifier	nb_globals		8201912	0					
ANR	8201963	PtrMemberAccess	s -> nb_globals		8201912	1					
ANR	8201964	Identifier	s		8201912	0					
ANR	8201965	Identifier	nb_globals		8201912	1					
ANR	8201966	ExpressionStatement	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"	39:4:748:805	8201912	8	True				
ANR	8201967	CallExpression	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"		8201912	0					
ANR	8201968	Callee	memset		8201912	0					
ANR	8201969	Identifier	memset		8201912	0					
ANR	8201970	ArgumentList	temps		8201912	1					
ANR	8201971	Argument	temps		8201912	0					
ANR	8201972	Identifier	temps		8201912	0					
ANR	8201973	Argument	0		8201912	1					
ANR	8201974	PrimaryExpression	0		8201912	0					
ANR	8201975	Argument	nb_temps * sizeof ( struct tcg_temp_info )		8201912	2					
ANR	8201976	MultiplicativeExpression	nb_temps * sizeof ( struct tcg_temp_info )		8201912	0		*			
ANR	8201977	Identifier	nb_temps		8201912	0					
ANR	8201978	SizeofExpression	sizeof ( struct tcg_temp_info )		8201912	1					
ANR	8201979	Sizeof	sizeof		8201912	0					
ANR	8201980	SizeofOperand	struct tcg_temp_info		8201912	1					
ANR	8201981	ExpressionStatement	nb_ops = tcg_opc_ptr - gen_opc_buf	43:4:814:848	8201912	9	True				
ANR	8201982	AssignmentExpression	nb_ops = tcg_opc_ptr - gen_opc_buf		8201912	0		=			
ANR	8201983	Identifier	nb_ops		8201912	0					
ANR	8201984	AdditiveExpression	tcg_opc_ptr - gen_opc_buf		8201912	1		-			
ANR	8201985	Identifier	tcg_opc_ptr		8201912	0					
ANR	8201986	Identifier	gen_opc_buf		8201912	1					
ANR	8201987	ExpressionStatement	gen_args = args	45:4:855:870	8201912	10	True				
ANR	8201988	AssignmentExpression	gen_args = args		8201912	0		=			
ANR	8201989	Identifier	gen_args		8201912	0					
ANR	8201990	Identifier	args		8201912	1					
ANR	8201991	ForStatement	for ( op_index = 0 ; op_index < nb_ops ; op_index ++ )		8201912	11					
ANR	8201992	ForInit	op_index = 0 ;	47:9:882:894	8201912	0	True				
ANR	8201993	AssignmentExpression	op_index = 0		8201912	0		=			
ANR	8201994	Identifier	op_index		8201912	0					
ANR	8201995	PrimaryExpression	0		8201912	1					
ANR	8201996	Condition	op_index < nb_ops	47:23:896:912	8201912	1	True				
ANR	8201997	RelationalExpression	op_index < nb_ops		8201912	0		<			
ANR	8201998	Identifier	op_index		8201912	0					
ANR	8201999	Identifier	nb_ops		8201912	1					
ANR	8202000	PostIncDecOperationExpression	op_index ++	47:42:915:924	8201912	2	True				
ANR	8202001	Identifier	op_index		8201912	0					
ANR	8202002	IncDec	++		8201912	1					
ANR	8202003	CompoundStatement		43:54:777:777	8201912	3					
ANR	8202004	ExpressionStatement	op = gen_opc_buf [ op_index ]	49:8:938:964	8201912	0	True				
ANR	8202005	AssignmentExpression	op = gen_opc_buf [ op_index ]		8201912	0		=			
ANR	8202006	Identifier	op		8201912	0					
ANR	8202007	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	1					
ANR	8202008	Identifier	gen_opc_buf		8201912	0					
ANR	8202009	Identifier	op_index		8201912	1					
ANR	8202010	ExpressionStatement	def = & tcg_op_defs [ op ]	51:8:975:997	8201912	1	True				
ANR	8202011	AssignmentExpression	def = & tcg_op_defs [ op ]		8201912	0		=			
ANR	8202012	Identifier	def		8201912	0					
ANR	8202013	UnaryOperationExpression	& tcg_op_defs [ op ]		8201912	1					
ANR	8202014	UnaryOperator	&		8201912	0					
ANR	8202015	ArrayIndexing	tcg_op_defs [ op ]		8201912	1					
ANR	8202016	Identifier	tcg_op_defs		8201912	0					
ANR	8202017	Identifier	op		8201912	1					
ANR	8202018	IfStatement	if ( ! ( def -> flags & ( TCG_OPF_CALL_CLOBBER | TCG_OPF_SIDE_EFFECTS ) ) )		8201912	2					
ANR	8202019	Condition	! ( def -> flags & ( TCG_OPF_CALL_CLOBBER | TCG_OPF_SIDE_EFFECTS ) )	55:12:1047:1107	8201912	0	True				
ANR	8202020	UnaryOperationExpression	! ( def -> flags & ( TCG_OPF_CALL_CLOBBER | TCG_OPF_SIDE_EFFECTS ) )		8201912	0					
ANR	8202021	UnaryOperator	!		8201912	0					
ANR	8202022	BitAndExpression	def -> flags & ( TCG_OPF_CALL_CLOBBER | TCG_OPF_SIDE_EFFECTS )		8201912	1		&			
ANR	8202023	PtrMemberAccess	def -> flags		8201912	0					
ANR	8202024	Identifier	def		8201912	0					
ANR	8202025	Identifier	flags		8201912	1					
ANR	8202026	InclusiveOrExpression	TCG_OPF_CALL_CLOBBER | TCG_OPF_SIDE_EFFECTS		8201912	1		|			
ANR	8202027	Identifier	TCG_OPF_CALL_CLOBBER		8201912	0					
ANR	8202028	Identifier	TCG_OPF_SIDE_EFFECTS		8201912	1					
ANR	8202029	CompoundStatement		51:75:960:960	8201912	1					
ANR	8202030	ExpressionStatement	assert ( op != INDEX_op_call )	57:12:1125:1152	8201912	0	True				
ANR	8202031	CallExpression	assert ( op != INDEX_op_call )		8201912	0					
ANR	8202032	Callee	assert		8201912	0					
ANR	8202033	Identifier	assert		8201912	0					
ANR	8202034	ArgumentList	op != INDEX_op_call		8201912	1					
ANR	8202035	Argument	op != INDEX_op_call		8201912	0					
ANR	8202036	EqualityExpression	op != INDEX_op_call		8201912	0		!=			
ANR	8202037	Identifier	op		8201912	0					
ANR	8202038	Identifier	INDEX_op_call		8201912	1					
ANR	8202039	ForStatement	for ( i = def -> nb_oargs ; i < def -> nb_oargs + def -> nb_iargs ; i ++ )		8201912	1					
ANR	8202040	ForInit	i = def -> nb_oargs ;	59:17:1172:1189	8201912	0	True				
ANR	8202041	AssignmentExpression	i = def -> nb_oargs		8201912	0		=			
ANR	8202042	Identifier	i		8201912	0					
ANR	8202043	PtrMemberAccess	def -> nb_oargs		8201912	1					
ANR	8202044	Identifier	def		8201912	0					
ANR	8202045	Identifier	nb_oargs		8201912	1					
ANR	8202046	Condition	i < def -> nb_oargs + def -> nb_iargs	59:36:1191:1223	8201912	1	True				
ANR	8202047	RelationalExpression	i < def -> nb_oargs + def -> nb_iargs		8201912	0		<			
ANR	8202048	Identifier	i		8201912	0					
ANR	8202049	AdditiveExpression	def -> nb_oargs + def -> nb_iargs		8201912	1		+			
ANR	8202050	PtrMemberAccess	def -> nb_oargs		8201912	0					
ANR	8202051	Identifier	def		8201912	0					
ANR	8202052	Identifier	nb_oargs		8201912	1					
ANR	8202053	PtrMemberAccess	def -> nb_iargs		8201912	1					
ANR	8202054	Identifier	def		8201912	0					
ANR	8202055	Identifier	nb_iargs		8201912	1					
ANR	8202056	PostIncDecOperationExpression	i ++	59:71:1226:1228	8201912	2	True				
ANR	8202057	Identifier	i		8201912	0					
ANR	8202058	IncDec	++		8201912	1					
ANR	8202059	CompoundStatement		55:76:1081:1081	8201912	3					
ANR	8202060	IfStatement	if ( temps [ args [ i ] ] . state == TCG_TEMP_COPY )		8201912	0					
ANR	8202061	Condition	temps [ args [ i ] ] . state == TCG_TEMP_COPY	61:20:1254:1290	8201912	0	True				
ANR	8202062	EqualityExpression	temps [ args [ i ] ] . state == TCG_TEMP_COPY		8201912	0		==			
ANR	8202063	MemberAccess	temps [ args [ i ] ] . state		8201912	0					
ANR	8202064	ArrayIndexing	temps [ args [ i ] ]		8201912	0					
ANR	8202065	Identifier	temps		8201912	0					
ANR	8202066	ArrayIndexing	args [ i ]		8201912	1					
ANR	8202067	Identifier	args		8201912	0					
ANR	8202068	Identifier	i		8201912	1					
ANR	8202069	Identifier	state		8201912	1					
ANR	8202070	Identifier	TCG_TEMP_COPY		8201912	1					
ANR	8202071	CompoundStatement		57:59:1143:1143	8201912	1					
ANR	8202072	ExpressionStatement	args [ i ] = temps [ args [ i ] ] . val	63:20:1316:1344	8201912	0	True				
ANR	8202073	AssignmentExpression	args [ i ] = temps [ args [ i ] ] . val		8201912	0		=			
ANR	8202074	ArrayIndexing	args [ i ]		8201912	0					
ANR	8202075	Identifier	args		8201912	0					
ANR	8202076	Identifier	i		8201912	1					
ANR	8202077	MemberAccess	temps [ args [ i ] ] . val		8201912	1					
ANR	8202078	ArrayIndexing	temps [ args [ i ] ]		8201912	0					
ANR	8202079	Identifier	temps		8201912	0					
ANR	8202080	ArrayIndexing	args [ i ]		8201912	1					
ANR	8202081	Identifier	args		8201912	0					
ANR	8202082	Identifier	i		8201912	1					
ANR	8202083	Identifier	val		8201912	1					
ANR	8202084	SwitchStatement	switch ( op )		8201912	3					
ANR	8202085	Condition	op	75:16:1482:1483	8201912	0	True				
ANR	8202086	Identifier	op		8201912	0					
ANR	8202087	CompoundStatement		71:20:1336:1336	8201912	1					
ANR	8202088	Statement	CASE_OP_32_64	77:8:1497:1509	8201912	0	True				
ANR	8202089	Statement	(	77:21:1510:1510	8201912	1	True				
ANR	8202090	Statement	add	77:22:1511:1513	8201912	2	True				
ANR	8202091	Statement	)	77:25:1514:1514	8201912	3	True				
ANR	8202092	Statement	:	77:26:1515:1515	8201912	4	True				
ANR	8202093	Statement	CASE_OP_32_64	79:8:1526:1538	8201912	5	True				
ANR	8202094	Statement	(	79:21:1539:1539	8201912	6	True				
ANR	8202095	Statement	mul	79:22:1540:1542	8201912	7	True				
ANR	8202096	Statement	)	79:25:1543:1543	8201912	8	True				
ANR	8202097	Statement	:	79:26:1544:1544	8201912	9	True				
ANR	8202098	Statement	CASE_OP_32_64	81:8:1555:1567	8201912	10	True				
ANR	8202099	Statement	(	81:21:1568:1568	8201912	11	True				
ANR	8202100	Statement	and	81:22:1569:1571	8201912	12	True				
ANR	8202101	Statement	)	81:25:1572:1572	8201912	13	True				
ANR	8202102	Statement	:	81:26:1573:1573	8201912	14	True				
ANR	8202103	Statement	CASE_OP_32_64	83:8:1584:1596	8201912	15	True				
ANR	8202104	Statement	(	83:21:1597:1597	8201912	16	True				
ANR	8202105	Statement	or	83:22:1598:1599	8201912	17	True				
ANR	8202106	Statement	)	83:24:1600:1600	8201912	18	True				
ANR	8202107	Statement	:	83:25:1601:1601	8201912	19	True				
ANR	8202108	Statement	CASE_OP_32_64	85:8:1612:1624	8201912	20	True				
ANR	8202109	Statement	(	85:21:1625:1625	8201912	21	True				
ANR	8202110	Statement	xor	85:22:1626:1628	8201912	22	True				
ANR	8202111	Statement	)	85:25:1629:1629	8201912	23	True				
ANR	8202112	Statement	:	85:26:1630:1630	8201912	24	True				
ANR	8202113	Statement	CASE_OP_32_64	87:8:1641:1653	8201912	25	True				
ANR	8202114	Statement	(	87:21:1654:1654	8201912	26	True				
ANR	8202115	Statement	eqv	87:22:1655:1657	8201912	27	True				
ANR	8202116	Statement	)	87:25:1658:1658	8201912	28	True				
ANR	8202117	Statement	:	87:26:1659:1659	8201912	29	True				
ANR	8202118	Statement	CASE_OP_32_64	89:8:1670:1682	8201912	30	True				
ANR	8202119	Statement	(	89:21:1683:1683	8201912	31	True				
ANR	8202120	Statement	nand	89:22:1684:1687	8201912	32	True				
ANR	8202121	Statement	)	89:26:1688:1688	8201912	33	True				
ANR	8202122	Statement	:	89:27:1689:1689	8201912	34	True				
ANR	8202123	Statement	CASE_OP_32_64	91:8:1700:1712	8201912	35	True				
ANR	8202124	Statement	(	91:21:1713:1713	8201912	36	True				
ANR	8202125	Statement	nor	91:22:1714:1716	8201912	37	True				
ANR	8202126	Statement	)	91:25:1717:1717	8201912	38	True				
ANR	8202127	Statement	:	91:26:1718:1718	8201912	39	True				
ANR	8202128	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8201912	40					
ANR	8202129	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	93:16:1737:1774	8201912	0	True				
ANR	8202130	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202131	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202132	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202133	Identifier	temps		8201912	0					
ANR	8202134	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202135	Identifier	args		8201912	0					
ANR	8202136	PrimaryExpression	1		8201912	1					
ANR	8202137	Identifier	state		8201912	1					
ANR	8202138	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202139	CompoundStatement		89:56:1627:1627	8201912	1					
ANR	8202140	ExpressionStatement	tmp = args [ 1 ]	95:16:1796:1809	8201912	0	True				
ANR	8202141	AssignmentExpression	tmp = args [ 1 ]		8201912	0		=			
ANR	8202142	Identifier	tmp		8201912	0					
ANR	8202143	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202144	Identifier	args		8201912	0					
ANR	8202145	PrimaryExpression	1		8201912	1					
ANR	8202146	ExpressionStatement	args [ 1 ] = args [ 2 ]	97:16:1828:1845	8201912	1	True				
ANR	8202147	AssignmentExpression	args [ 1 ] = args [ 2 ]		8201912	0		=			
ANR	8202148	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202149	Identifier	args		8201912	0					
ANR	8202150	PrimaryExpression	1		8201912	1					
ANR	8202151	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202152	Identifier	args		8201912	0					
ANR	8202153	PrimaryExpression	2		8201912	1					
ANR	8202154	ExpressionStatement	args [ 2 ] = tmp	99:16:1864:1877	8201912	2	True				
ANR	8202155	AssignmentExpression	args [ 2 ] = tmp		8201912	0		=			
ANR	8202156	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8202157	Identifier	args		8201912	0					
ANR	8202158	PrimaryExpression	2		8201912	1					
ANR	8202159	Identifier	tmp		8201912	1					
ANR	8202160	BreakStatement	break ;	103:12:1907:1912	8201912	41	True				
ANR	8202161	Statement	CASE_OP_32_64	105:8:1923:1935	8201912	42	True				
ANR	8202162	Statement	(	105:21:1936:1936	8201912	43	True				
ANR	8202163	Statement	brcond	105:22:1937:1942	8201912	44	True				
ANR	8202164	Statement	)	105:28:1943:1943	8201912	45	True				
ANR	8202165	Statement	:	105:29:1944:1944	8201912	46	True				
ANR	8202166	IfStatement	if ( temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state != TCG_TEMP_CONST )		8201912	47					
ANR	8202167	Condition	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state != TCG_TEMP_CONST	107:16:1963:2059	8201912	0	True				
ANR	8202168	AndExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8201912	0		&&			
ANR	8202169	EqualityExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202170	MemberAccess	temps [ args [ 0 ] ] . state		8201912	0					
ANR	8202171	ArrayIndexing	temps [ args [ 0 ] ]		8201912	0					
ANR	8202172	Identifier	temps		8201912	0					
ANR	8202173	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202174	Identifier	args		8201912	0					
ANR	8202175	PrimaryExpression	0		8201912	1					
ANR	8202176	Identifier	state		8201912	1					
ANR	8202177	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202178	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8201912	1		!=			
ANR	8202179	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202180	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202181	Identifier	temps		8201912	0					
ANR	8202182	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202183	Identifier	args		8201912	0					
ANR	8202184	PrimaryExpression	1		8201912	1					
ANR	8202185	Identifier	state		8201912	1					
ANR	8202186	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202187	CompoundStatement		105:59:1912:1912	8201912	1					
ANR	8202188	ExpressionStatement	tmp = args [ 0 ]	111:16:2081:2094	8201912	0	True				
ANR	8202189	AssignmentExpression	tmp = args [ 0 ]		8201912	0		=			
ANR	8202190	Identifier	tmp		8201912	0					
ANR	8202191	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202192	Identifier	args		8201912	0					
ANR	8202193	PrimaryExpression	0		8201912	1					
ANR	8202194	ExpressionStatement	args [ 0 ] = args [ 1 ]	113:16:2113:2130	8201912	1	True				
ANR	8202195	AssignmentExpression	args [ 0 ] = args [ 1 ]		8201912	0		=			
ANR	8202196	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202197	Identifier	args		8201912	0					
ANR	8202198	PrimaryExpression	0		8201912	1					
ANR	8202199	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202200	Identifier	args		8201912	0					
ANR	8202201	PrimaryExpression	1		8201912	1					
ANR	8202202	ExpressionStatement	args [ 1 ] = tmp	115:16:2149:2162	8201912	2	True				
ANR	8202203	AssignmentExpression	args [ 1 ] = tmp		8201912	0		=			
ANR	8202204	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202205	Identifier	args		8201912	0					
ANR	8202206	PrimaryExpression	1		8201912	1					
ANR	8202207	Identifier	tmp		8201912	1					
ANR	8202208	ExpressionStatement	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )	117:16:2181:2213	8201912	3	True				
ANR	8202209	AssignmentExpression	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )		8201912	0		=			
ANR	8202210	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8202211	Identifier	args		8201912	0					
ANR	8202212	PrimaryExpression	2		8201912	1					
ANR	8202213	CallExpression	tcg_swap_cond ( args [ 2 ] )		8201912	1					
ANR	8202214	Callee	tcg_swap_cond		8201912	0					
ANR	8202215	Identifier	tcg_swap_cond		8201912	0					
ANR	8202216	ArgumentList	args [ 2 ]		8201912	1					
ANR	8202217	Argument	args [ 2 ]		8201912	0					
ANR	8202218	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8202219	Identifier	args		8201912	0					
ANR	8202220	PrimaryExpression	2		8201912	1					
ANR	8202221	BreakStatement	break ;	121:12:2243:2248	8201912	48	True				
ANR	8202222	Statement	CASE_OP_32_64	123:8:2259:2271	8201912	49	True				
ANR	8202223	Statement	(	123:21:2272:2272	8201912	50	True				
ANR	8202224	Statement	setcond	123:22:2273:2279	8201912	51	True				
ANR	8202225	Statement	)	123:29:2280:2280	8201912	52	True				
ANR	8202226	Statement	:	123:30:2281:2281	8201912	53	True				
ANR	8202227	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST )		8201912	54					
ANR	8202228	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST	125:16:2300:2396	8201912	0	True				
ANR	8202229	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8201912	0		&&			
ANR	8202230	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202231	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202232	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202233	Identifier	temps		8201912	0					
ANR	8202234	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202235	Identifier	args		8201912	0					
ANR	8202236	PrimaryExpression	1		8201912	1					
ANR	8202237	Identifier	state		8201912	1					
ANR	8202238	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202239	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8201912	1		!=			
ANR	8202240	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8202241	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202242	Identifier	temps		8201912	0					
ANR	8202243	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202244	Identifier	args		8201912	0					
ANR	8202245	PrimaryExpression	2		8201912	1					
ANR	8202246	Identifier	state		8201912	1					
ANR	8202247	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202248	CompoundStatement		123:59:2249:2249	8201912	1					
ANR	8202249	ExpressionStatement	tmp = args [ 1 ]	129:16:2418:2431	8201912	0	True				
ANR	8202250	AssignmentExpression	tmp = args [ 1 ]		8201912	0		=			
ANR	8202251	Identifier	tmp		8201912	0					
ANR	8202252	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202253	Identifier	args		8201912	0					
ANR	8202254	PrimaryExpression	1		8201912	1					
ANR	8202255	ExpressionStatement	args [ 1 ] = args [ 2 ]	131:16:2450:2467	8201912	1	True				
ANR	8202256	AssignmentExpression	args [ 1 ] = args [ 2 ]		8201912	0		=			
ANR	8202257	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202258	Identifier	args		8201912	0					
ANR	8202259	PrimaryExpression	1		8201912	1					
ANR	8202260	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202261	Identifier	args		8201912	0					
ANR	8202262	PrimaryExpression	2		8201912	1					
ANR	8202263	ExpressionStatement	args [ 2 ] = tmp	133:16:2486:2499	8201912	2	True				
ANR	8202264	AssignmentExpression	args [ 2 ] = tmp		8201912	0		=			
ANR	8202265	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8202266	Identifier	args		8201912	0					
ANR	8202267	PrimaryExpression	2		8201912	1					
ANR	8202268	Identifier	tmp		8201912	1					
ANR	8202269	ExpressionStatement	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )	135:16:2518:2550	8201912	3	True				
ANR	8202270	AssignmentExpression	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )		8201912	0		=			
ANR	8202271	ArrayIndexing	args [ 3 ]		8201912	0					
ANR	8202272	Identifier	args		8201912	0					
ANR	8202273	PrimaryExpression	3		8201912	1					
ANR	8202274	CallExpression	tcg_swap_cond ( args [ 3 ] )		8201912	1					
ANR	8202275	Callee	tcg_swap_cond		8201912	0					
ANR	8202276	Identifier	tcg_swap_cond		8201912	0					
ANR	8202277	ArgumentList	args [ 3 ]		8201912	1					
ANR	8202278	Argument	args [ 3 ]		8201912	0					
ANR	8202279	ArrayIndexing	args [ 3 ]		8201912	0					
ANR	8202280	Identifier	args		8201912	0					
ANR	8202281	PrimaryExpression	3		8201912	1					
ANR	8202282	BreakStatement	break ;	139:12:2580:2585	8201912	55	True				
ANR	8202283	Statement	CASE_OP_32_64	141:8:2596:2608	8201912	56	True				
ANR	8202284	Statement	(	141:21:2609:2609	8201912	57	True				
ANR	8202285	Statement	movcond	141:22:2610:2616	8201912	58	True				
ANR	8202286	Statement	)	141:29:2617:2617	8201912	59	True				
ANR	8202287	Statement	:	141:30:2618:2618	8201912	60	True				
ANR	8202288	ExpressionStatement	cond = args [ 5 ]	143:12:2633:2647	8201912	61	True				
ANR	8202289	AssignmentExpression	cond = args [ 5 ]		8201912	0		=			
ANR	8202290	Identifier	cond		8201912	0					
ANR	8202291	ArrayIndexing	args [ 5 ]		8201912	1					
ANR	8202292	Identifier	args		8201912	0					
ANR	8202293	PrimaryExpression	5		8201912	1					
ANR	8202294	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST )		8201912	62					
ANR	8202295	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST	145:16:2666:2762	8201912	0	True				
ANR	8202296	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8201912	0		&&			
ANR	8202297	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202298	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202299	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202300	Identifier	temps		8201912	0					
ANR	8202301	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202302	Identifier	args		8201912	0					
ANR	8202303	PrimaryExpression	1		8201912	1					
ANR	8202304	Identifier	state		8201912	1					
ANR	8202305	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202306	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8201912	1		!=			
ANR	8202307	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8202308	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202309	Identifier	temps		8201912	0					
ANR	8202310	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202311	Identifier	args		8201912	0					
ANR	8202312	PrimaryExpression	2		8201912	1					
ANR	8202313	Identifier	state		8201912	1					
ANR	8202314	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202315	CompoundStatement		143:59:2615:2615	8201912	1					
ANR	8202316	ExpressionStatement	tmp = args [ 1 ]	149:16:2784:2797	8201912	0	True				
ANR	8202317	AssignmentExpression	tmp = args [ 1 ]		8201912	0		=			
ANR	8202318	Identifier	tmp		8201912	0					
ANR	8202319	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202320	Identifier	args		8201912	0					
ANR	8202321	PrimaryExpression	1		8201912	1					
ANR	8202322	ExpressionStatement	args [ 1 ] = args [ 2 ]	151:16:2816:2833	8201912	1	True				
ANR	8202323	AssignmentExpression	args [ 1 ] = args [ 2 ]		8201912	0		=			
ANR	8202324	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202325	Identifier	args		8201912	0					
ANR	8202326	PrimaryExpression	1		8201912	1					
ANR	8202327	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202328	Identifier	args		8201912	0					
ANR	8202329	PrimaryExpression	2		8201912	1					
ANR	8202330	ExpressionStatement	args [ 2 ] = tmp	153:16:2852:2865	8201912	2	True				
ANR	8202331	AssignmentExpression	args [ 2 ] = tmp		8201912	0		=			
ANR	8202332	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8202333	Identifier	args		8201912	0					
ANR	8202334	PrimaryExpression	2		8201912	1					
ANR	8202335	Identifier	tmp		8201912	1					
ANR	8202336	ExpressionStatement	cond = tcg_swap_cond ( cond )	155:16:2884:2910	8201912	3	True				
ANR	8202337	AssignmentExpression	cond = tcg_swap_cond ( cond )		8201912	0		=			
ANR	8202338	Identifier	cond		8201912	0					
ANR	8202339	CallExpression	tcg_swap_cond ( cond )		8201912	1					
ANR	8202340	Callee	tcg_swap_cond		8201912	0					
ANR	8202341	Identifier	tcg_swap_cond		8201912	0					
ANR	8202342	ArgumentList	cond		8201912	1					
ANR	8202343	Argument	cond		8201912	0					
ANR	8202344	Identifier	cond		8201912	0					
ANR	8202345	IfStatement	if ( args [ 0 ] == args [ 3 ] )		8201912	63					
ANR	8202346	Condition	args [ 0 ] == args [ 3 ]	165:16:3142:3159	8201912	0	True				
ANR	8202347	EqualityExpression	args [ 0 ] == args [ 3 ]		8201912	0		==			
ANR	8202348	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202349	Identifier	args		8201912	0					
ANR	8202350	PrimaryExpression	0		8201912	1					
ANR	8202351	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8202352	Identifier	args		8201912	0					
ANR	8202353	PrimaryExpression	3		8201912	1					
ANR	8202354	CompoundStatement		161:36:3012:3012	8201912	1					
ANR	8202355	ExpressionStatement	tmp = args [ 3 ]	167:16:3181:3194	8201912	0	True				
ANR	8202356	AssignmentExpression	tmp = args [ 3 ]		8201912	0		=			
ANR	8202357	Identifier	tmp		8201912	0					
ANR	8202358	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8202359	Identifier	args		8201912	0					
ANR	8202360	PrimaryExpression	3		8201912	1					
ANR	8202361	ExpressionStatement	args [ 3 ] = args [ 4 ]	169:16:3213:3230	8201912	1	True				
ANR	8202362	AssignmentExpression	args [ 3 ] = args [ 4 ]		8201912	0		=			
ANR	8202363	ArrayIndexing	args [ 3 ]		8201912	0					
ANR	8202364	Identifier	args		8201912	0					
ANR	8202365	PrimaryExpression	3		8201912	1					
ANR	8202366	ArrayIndexing	args [ 4 ]		8201912	1					
ANR	8202367	Identifier	args		8201912	0					
ANR	8202368	PrimaryExpression	4		8201912	1					
ANR	8202369	ExpressionStatement	args [ 4 ] = tmp	171:16:3249:3262	8201912	2	True				
ANR	8202370	AssignmentExpression	args [ 4 ] = tmp		8201912	0		=			
ANR	8202371	ArrayIndexing	args [ 4 ]		8201912	0					
ANR	8202372	Identifier	args		8201912	0					
ANR	8202373	PrimaryExpression	4		8201912	1					
ANR	8202374	Identifier	tmp		8201912	1					
ANR	8202375	ExpressionStatement	cond = tcg_invert_cond ( cond )	173:16:3281:3309	8201912	3	True				
ANR	8202376	AssignmentExpression	cond = tcg_invert_cond ( cond )		8201912	0		=			
ANR	8202377	Identifier	cond		8201912	0					
ANR	8202378	CallExpression	tcg_invert_cond ( cond )		8201912	1					
ANR	8202379	Callee	tcg_invert_cond		8201912	0					
ANR	8202380	Identifier	tcg_invert_cond		8201912	0					
ANR	8202381	ArgumentList	cond		8201912	1					
ANR	8202382	Argument	cond		8201912	0					
ANR	8202383	Identifier	cond		8201912	0					
ANR	8202384	ExpressionStatement	args [ 5 ] = cond	177:12:3339:3353	8201912	64	True				
ANR	8202385	AssignmentExpression	args [ 5 ] = cond		8201912	0		=			
ANR	8202386	ArrayIndexing	args [ 5 ]		8201912	0					
ANR	8202387	Identifier	args		8201912	0					
ANR	8202388	PrimaryExpression	5		8201912	1					
ANR	8202389	Identifier	cond		8201912	1					
ANR	8202390	Label	default :	179:8:3364:3371	8201912	65	True				
ANR	8202391	Identifier	default		8201912	0					
ANR	8202392	BreakStatement	break ;	181:12:3386:3391	8201912	66	True				
ANR	8202393	SwitchStatement	switch ( op )		8201912	4					
ANR	8202394	Condition	op	189:16:3496:3497	8201912	0	True				
ANR	8202395	Identifier	op		8201912	0					
ANR	8202396	CompoundStatement		185:20:3350:3350	8201912	1					
ANR	8202397	Statement	CASE_OP_32_64	191:8:3511:3523	8201912	0	True				
ANR	8202398	Statement	(	191:21:3524:3524	8201912	1	True				
ANR	8202399	Statement	shl	191:22:3525:3527	8201912	2	True				
ANR	8202400	Statement	)	191:25:3528:3528	8201912	3	True				
ANR	8202401	Statement	:	191:26:3529:3529	8201912	4	True				
ANR	8202402	Statement	CASE_OP_32_64	193:8:3540:3552	8201912	5	True				
ANR	8202403	Statement	(	193:21:3553:3553	8201912	6	True				
ANR	8202404	Statement	shr	193:22:3554:3556	8201912	7	True				
ANR	8202405	Statement	)	193:25:3557:3557	8201912	8	True				
ANR	8202406	Statement	:	193:26:3558:3558	8201912	9	True				
ANR	8202407	Statement	CASE_OP_32_64	195:8:3569:3581	8201912	10	True				
ANR	8202408	Statement	(	195:21:3582:3582	8201912	11	True				
ANR	8202409	Statement	sar	195:22:3583:3585	8201912	12	True				
ANR	8202410	Statement	)	195:25:3586:3586	8201912	13	True				
ANR	8202411	Statement	:	195:26:3587:3587	8201912	14	True				
ANR	8202412	Statement	CASE_OP_32_64	197:8:3598:3610	8201912	15	True				
ANR	8202413	Statement	(	197:21:3611:3611	8201912	16	True				
ANR	8202414	Statement	rotl	197:22:3612:3615	8201912	17	True				
ANR	8202415	Statement	)	197:26:3616:3616	8201912	18	True				
ANR	8202416	Statement	:	197:27:3617:3617	8201912	19	True				
ANR	8202417	Statement	CASE_OP_32_64	199:8:3628:3640	8201912	20	True				
ANR	8202418	Statement	(	199:21:3641:3641	8201912	21	True				
ANR	8202419	Statement	rotr	199:22:3642:3645	8201912	22	True				
ANR	8202420	Statement	)	199:26:3646:3646	8201912	23	True				
ANR	8202421	Statement	:	199:27:3647:3647	8201912	24	True				
ANR	8202422	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8201912	25					
ANR	8202423	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	201:16:3666:3747	8201912	0	True				
ANR	8202424	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8201912	0		&&			
ANR	8202425	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202426	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202427	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202428	Identifier	temps		8201912	0					
ANR	8202429	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202430	Identifier	args		8201912	0					
ANR	8202431	PrimaryExpression	1		8201912	1					
ANR	8202432	Identifier	state		8201912	1					
ANR	8202433	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202434	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8201912	1		==			
ANR	8202435	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8202436	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202437	Identifier	temps		8201912	0					
ANR	8202438	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202439	Identifier	args		8201912	0					
ANR	8202440	PrimaryExpression	1		8201912	1					
ANR	8202441	Identifier	val		8201912	1					
ANR	8202442	PrimaryExpression	0		8201912	1					
ANR	8202443	CompoundStatement		199:44:3600:3600	8201912	1					
ANR	8202444	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	205:16:3769:3807	8201912	0	True				
ANR	8202445	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8202446	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202447	Identifier	gen_opc_buf		8201912	0					
ANR	8202448	Identifier	op_index		8201912	1					
ANR	8202449	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8202450	Callee	op_to_movi		8201912	0					
ANR	8202451	Identifier	op_to_movi		8201912	0					
ANR	8202452	ArgumentList	op		8201912	1					
ANR	8202453	Argument	op		8201912	0					
ANR	8202454	Identifier	op		8201912	0					
ANR	8202455	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , 0 , nb_temps , nb_globals )"	207:16:3826:3886	8201912	1	True				
ANR	8202456	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , 0 , nb_temps , nb_globals )"		8201912	0					
ANR	8202457	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8202458	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8202459	ArgumentList	gen_args		8201912	1					
ANR	8202460	Argument	gen_args		8201912	0					
ANR	8202461	Identifier	gen_args		8201912	0					
ANR	8202462	Argument	args [ 0 ]		8201912	1					
ANR	8202463	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202464	Identifier	args		8201912	0					
ANR	8202465	PrimaryExpression	0		8201912	1					
ANR	8202466	Argument	0		8201912	2					
ANR	8202467	PrimaryExpression	0		8201912	0					
ANR	8202468	Argument	nb_temps		8201912	3					
ANR	8202469	Identifier	nb_temps		8201912	0					
ANR	8202470	Argument	nb_globals		8201912	4					
ANR	8202471	Identifier	nb_globals		8201912	0					
ANR	8202472	ExpressionStatement	args += 3	209:16:3905:3914	8201912	2	True				
ANR	8202473	AssignmentExpression	args += 3		8201912	0		+=			
ANR	8202474	Identifier	args		8201912	0					
ANR	8202475	PrimaryExpression	3		8201912	1					
ANR	8202476	ExpressionStatement	gen_args += 2	211:16:3933:3946	8201912	3	True				
ANR	8202477	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202478	Identifier	gen_args		8201912	0					
ANR	8202479	PrimaryExpression	2		8201912	1					
ANR	8202480	ContinueStatement	continue ;	213:16:3965:3973	8201912	4	True				
ANR	8202481	BreakStatement	break ;	217:12:4003:4008	8201912	26	True				
ANR	8202482	Label	default :	219:8:4019:4026	8201912	27	True				
ANR	8202483	Identifier	default		8201912	0					
ANR	8202484	BreakStatement	break ;	221:12:4041:4046	8201912	28	True				
ANR	8202485	SwitchStatement	switch ( op )		8201912	5					
ANR	8202486	Condition	op	229:16:4148:4149	8201912	0	True				
ANR	8202487	Identifier	op		8201912	0					
ANR	8202488	CompoundStatement		225:20:4002:4002	8201912	1					
ANR	8202489	Statement	CASE_OP_32_64	231:8:4163:4175	8201912	0	True				
ANR	8202490	Statement	(	231:21:4176:4176	8201912	1	True				
ANR	8202491	Statement	add	231:22:4177:4179	8201912	2	True				
ANR	8202492	Statement	)	231:25:4180:4180	8201912	3	True				
ANR	8202493	Statement	:	231:26:4181:4181	8201912	4	True				
ANR	8202494	Statement	CASE_OP_32_64	233:8:4192:4204	8201912	5	True				
ANR	8202495	Statement	(	233:21:4205:4205	8201912	6	True				
ANR	8202496	Statement	sub	233:22:4206:4208	8201912	7	True				
ANR	8202497	Statement	)	233:25:4209:4209	8201912	8	True				
ANR	8202498	Statement	:	233:26:4210:4210	8201912	9	True				
ANR	8202499	Statement	CASE_OP_32_64	235:8:4221:4233	8201912	10	True				
ANR	8202500	Statement	(	235:21:4234:4234	8201912	11	True				
ANR	8202501	Statement	shl	235:22:4235:4237	8201912	12	True				
ANR	8202502	Statement	)	235:25:4238:4238	8201912	13	True				
ANR	8202503	Statement	:	235:26:4239:4239	8201912	14	True				
ANR	8202504	Statement	CASE_OP_32_64	237:8:4250:4262	8201912	15	True				
ANR	8202505	Statement	(	237:21:4263:4263	8201912	16	True				
ANR	8202506	Statement	shr	237:22:4264:4266	8201912	17	True				
ANR	8202507	Statement	)	237:25:4267:4267	8201912	18	True				
ANR	8202508	Statement	:	237:26:4268:4268	8201912	19	True				
ANR	8202509	Statement	CASE_OP_32_64	239:8:4279:4291	8201912	20	True				
ANR	8202510	Statement	(	239:21:4292:4292	8201912	21	True				
ANR	8202511	Statement	sar	239:22:4293:4295	8201912	22	True				
ANR	8202512	Statement	)	239:25:4296:4296	8201912	23	True				
ANR	8202513	Statement	:	239:26:4297:4297	8201912	24	True				
ANR	8202514	Statement	CASE_OP_32_64	241:8:4308:4320	8201912	25	True				
ANR	8202515	Statement	(	241:21:4321:4321	8201912	26	True				
ANR	8202516	Statement	rotl	241:22:4322:4325	8201912	27	True				
ANR	8202517	Statement	)	241:26:4326:4326	8201912	28	True				
ANR	8202518	Statement	:	241:27:4327:4327	8201912	29	True				
ANR	8202519	Statement	CASE_OP_32_64	243:8:4338:4350	8201912	30	True				
ANR	8202520	Statement	(	243:21:4351:4351	8201912	31	True				
ANR	8202521	Statement	rotr	243:22:4352:4355	8201912	32	True				
ANR	8202522	Statement	)	243:26:4356:4356	8201912	33	True				
ANR	8202523	Statement	:	243:27:4357:4357	8201912	34	True				
ANR	8202524	Statement	CASE_OP_32_64	245:8:4368:4380	8201912	35	True				
ANR	8202525	Statement	(	245:21:4381:4381	8201912	36	True				
ANR	8202526	Statement	or	245:22:4382:4383	8201912	37	True				
ANR	8202527	Statement	)	245:24:4384:4384	8201912	38	True				
ANR	8202528	Statement	:	245:25:4385:4385	8201912	39	True				
ANR	8202529	Statement	CASE_OP_32_64	247:8:4396:4408	8201912	40	True				
ANR	8202530	Statement	(	247:21:4409:4409	8201912	41	True				
ANR	8202531	Statement	xor	247:22:4410:4412	8201912	42	True				
ANR	8202532	Statement	)	247:25:4413:4413	8201912	43	True				
ANR	8202533	Statement	:	247:26:4414:4414	8201912	44	True				
ANR	8202534	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8201912	45					
ANR	8202535	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	249:16:4433:4470	8201912	0	True				
ANR	8202536	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202537	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202538	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202539	Identifier	temps		8201912	0					
ANR	8202540	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202541	Identifier	args		8201912	0					
ANR	8202542	PrimaryExpression	1		8201912	1					
ANR	8202543	Identifier	state		8201912	1					
ANR	8202544	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202545	CompoundStatement		245:56:4323:4323	8201912	1					
ANR	8202546	BreakStatement	break ;	253:16:4555:4560	8201912	0	True				
ANR	8202547	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 )		8201912	46					
ANR	8202548	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	257:16:4594:4675	8201912	0	True				
ANR	8202549	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8201912	0		&&			
ANR	8202550	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202551	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8202552	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202553	Identifier	temps		8201912	0					
ANR	8202554	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202555	Identifier	args		8201912	0					
ANR	8202556	PrimaryExpression	2		8201912	1					
ANR	8202557	Identifier	state		8201912	1					
ANR	8202558	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202559	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8201912	1		==			
ANR	8202560	MemberAccess	temps [ args [ 2 ] ] . val		8201912	0					
ANR	8202561	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202562	Identifier	temps		8201912	0					
ANR	8202563	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202564	Identifier	args		8201912	0					
ANR	8202565	PrimaryExpression	2		8201912	1					
ANR	8202566	Identifier	val		8201912	1					
ANR	8202567	PrimaryExpression	0		8201912	1					
ANR	8202568	CompoundStatement		255:44:4528:4528	8201912	1					
ANR	8202569	IfStatement	if ( ( temps [ args [ 0 ] ] . state == TCG_TEMP_COPY && temps [ args [ 0 ] ] . val == args [ 1 ] ) || args [ 0 ] == args [ 1 ] )		8201912	0					
ANR	8202570	Condition	( temps [ args [ 0 ] ] . state == TCG_TEMP_COPY && temps [ args [ 0 ] ] . val == args [ 1 ] ) || args [ 0 ] == args [ 1 ]	261:20:4701:4836	8201912	0	True				
ANR	8202571	OrExpression	( temps [ args [ 0 ] ] . state == TCG_TEMP_COPY && temps [ args [ 0 ] ] . val == args [ 1 ] ) || args [ 0 ] == args [ 1 ]		8201912	0		||			
ANR	8202572	AndExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_COPY && temps [ args [ 0 ] ] . val == args [ 1 ]		8201912	0		&&			
ANR	8202573	EqualityExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_COPY		8201912	0		==			
ANR	8202574	MemberAccess	temps [ args [ 0 ] ] . state		8201912	0					
ANR	8202575	ArrayIndexing	temps [ args [ 0 ] ]		8201912	0					
ANR	8202576	Identifier	temps		8201912	0					
ANR	8202577	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202578	Identifier	args		8201912	0					
ANR	8202579	PrimaryExpression	0		8201912	1					
ANR	8202580	Identifier	state		8201912	1					
ANR	8202581	Identifier	TCG_TEMP_COPY		8201912	1					
ANR	8202582	EqualityExpression	temps [ args [ 0 ] ] . val == args [ 1 ]		8201912	1		==			
ANR	8202583	MemberAccess	temps [ args [ 0 ] ] . val		8201912	0					
ANR	8202584	ArrayIndexing	temps [ args [ 0 ] ]		8201912	0					
ANR	8202585	Identifier	temps		8201912	0					
ANR	8202586	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202587	Identifier	args		8201912	0					
ANR	8202588	PrimaryExpression	0		8201912	1					
ANR	8202589	Identifier	val		8201912	1					
ANR	8202590	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202591	Identifier	args		8201912	0					
ANR	8202592	PrimaryExpression	1		8201912	1					
ANR	8202593	EqualityExpression	args [ 0 ] == args [ 1 ]		8201912	1		==			
ANR	8202594	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202595	Identifier	args		8201912	0					
ANR	8202596	PrimaryExpression	0		8201912	1					
ANR	8202597	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202598	Identifier	args		8201912	0					
ANR	8202599	PrimaryExpression	1		8201912	1					
ANR	8202600	CompoundStatement		261:43:4689:4689	8201912	1					
ANR	8202601	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_nop	267:20:4862:4898	8201912	0	True				
ANR	8202602	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_nop		8201912	0		=			
ANR	8202603	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202604	Identifier	gen_opc_buf		8201912	0					
ANR	8202605	Identifier	op_index		8201912	1					
ANR	8202606	Identifier	INDEX_op_nop		8201912	1					
ANR	8202607	ElseStatement	else		8201912	0					
ANR	8202608	CompoundStatement		265:23:4774:4774	8201912	0					
ANR	8202609	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_mov ( op )	271:20:4947:4984	8201912	0	True				
ANR	8202610	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_mov ( op )		8201912	0		=			
ANR	8202611	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202612	Identifier	gen_opc_buf		8201912	0					
ANR	8202613	Identifier	op_index		8201912	1					
ANR	8202614	CallExpression	op_to_mov ( op )		8201912	1					
ANR	8202615	Callee	op_to_mov		8201912	0					
ANR	8202616	Identifier	op_to_mov		8201912	0					
ANR	8202617	ArgumentList	op		8201912	1					
ANR	8202618	Argument	op		8201912	0					
ANR	8202619	Identifier	op		8201912	0					
ANR	8202620	ExpressionStatement	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"	273:20:5007:5109	8201912	1	True				
ANR	8202621	CallExpression	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8202622	Callee	tcg_opt_gen_mov		8201912	0					
ANR	8202623	Identifier	tcg_opt_gen_mov		8201912	0					
ANR	8202624	ArgumentList	gen_args		8201912	1					
ANR	8202625	Argument	gen_args		8201912	0					
ANR	8202626	Identifier	gen_args		8201912	0					
ANR	8202627	Argument	args [ 0 ]		8201912	1					
ANR	8202628	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202629	Identifier	args		8201912	0					
ANR	8202630	PrimaryExpression	0		8201912	1					
ANR	8202631	Argument	args [ 1 ]		8201912	2					
ANR	8202632	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202633	Identifier	args		8201912	0					
ANR	8202634	PrimaryExpression	1		8201912	1					
ANR	8202635	Argument	nb_temps		8201912	3					
ANR	8202636	Identifier	nb_temps		8201912	0					
ANR	8202637	Argument	nb_globals		8201912	4					
ANR	8202638	Identifier	nb_globals		8201912	0					
ANR	8202639	ExpressionStatement	gen_args += 2	277:20:5132:5145	8201912	2	True				
ANR	8202640	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202641	Identifier	gen_args		8201912	0					
ANR	8202642	PrimaryExpression	2		8201912	1					
ANR	8202643	ExpressionStatement	args += 3	281:16:5183:5192	8201912	1	True				
ANR	8202644	AssignmentExpression	args += 3		8201912	0		+=			
ANR	8202645	Identifier	args		8201912	0					
ANR	8202646	PrimaryExpression	3		8201912	1					
ANR	8202647	ContinueStatement	continue ;	283:16:5211:5219	8201912	2	True				
ANR	8202648	BreakStatement	break ;	287:12:5249:5254	8201912	47	True				
ANR	8202649	Label	default :	289:8:5265:5272	8201912	48	True				
ANR	8202650	Identifier	default		8201912	0					
ANR	8202651	BreakStatement	break ;	291:12:5287:5292	8201912	49	True				
ANR	8202652	SwitchStatement	switch ( op )		8201912	6					
ANR	8202653	Condition	op	299:16:5395:5396	8201912	0	True				
ANR	8202654	Identifier	op		8201912	0					
ANR	8202655	CompoundStatement		295:20:5249:5249	8201912	1					
ANR	8202656	Statement	CASE_OP_32_64	301:8:5410:5422	8201912	0	True				
ANR	8202657	Statement	(	301:21:5423:5423	8201912	1	True				
ANR	8202658	Statement	and	301:22:5424:5426	8201912	2	True				
ANR	8202659	Statement	)	301:25:5427:5427	8201912	3	True				
ANR	8202660	Statement	:	301:26:5428:5428	8201912	4	True				
ANR	8202661	Statement	CASE_OP_32_64	303:8:5439:5451	8201912	5	True				
ANR	8202662	Statement	(	303:21:5452:5452	8201912	6	True				
ANR	8202663	Statement	mul	303:22:5453:5455	8201912	7	True				
ANR	8202664	Statement	)	303:25:5456:5456	8201912	8	True				
ANR	8202665	Statement	:	303:26:5457:5457	8201912	9	True				
ANR	8202666	IfStatement	if ( ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 ) )		8201912	10					
ANR	8202667	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	305:16:5476:5559	8201912	0	True				
ANR	8202668	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8201912	0		&&			
ANR	8202669	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8202670	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8202671	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202672	Identifier	temps		8201912	0					
ANR	8202673	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202674	Identifier	args		8201912	0					
ANR	8202675	PrimaryExpression	2		8201912	1					
ANR	8202676	Identifier	state		8201912	1					
ANR	8202677	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202678	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8201912	1		==			
ANR	8202679	MemberAccess	temps [ args [ 2 ] ] . val		8201912	0					
ANR	8202680	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8202681	Identifier	temps		8201912	0					
ANR	8202682	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202683	Identifier	args		8201912	0					
ANR	8202684	PrimaryExpression	2		8201912	1					
ANR	8202685	Identifier	val		8201912	1					
ANR	8202686	PrimaryExpression	0		8201912	1					
ANR	8202687	CompoundStatement		303:45:5412:5412	8201912	1					
ANR	8202688	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	309:16:5581:5619	8201912	0	True				
ANR	8202689	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8202690	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202691	Identifier	gen_opc_buf		8201912	0					
ANR	8202692	Identifier	op_index		8201912	1					
ANR	8202693	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8202694	Callee	op_to_movi		8201912	0					
ANR	8202695	Identifier	op_to_movi		8201912	0					
ANR	8202696	ArgumentList	op		8201912	1					
ANR	8202697	Argument	op		8201912	0					
ANR	8202698	Identifier	op		8201912	0					
ANR	8202699	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , 0 , nb_temps , nb_globals )"	311:16:5638:5698	8201912	1	True				
ANR	8202700	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , 0 , nb_temps , nb_globals )"		8201912	0					
ANR	8202701	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8202702	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8202703	ArgumentList	gen_args		8201912	1					
ANR	8202704	Argument	gen_args		8201912	0					
ANR	8202705	Identifier	gen_args		8201912	0					
ANR	8202706	Argument	args [ 0 ]		8201912	1					
ANR	8202707	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202708	Identifier	args		8201912	0					
ANR	8202709	PrimaryExpression	0		8201912	1					
ANR	8202710	Argument	0		8201912	2					
ANR	8202711	PrimaryExpression	0		8201912	0					
ANR	8202712	Argument	nb_temps		8201912	3					
ANR	8202713	Identifier	nb_temps		8201912	0					
ANR	8202714	Argument	nb_globals		8201912	4					
ANR	8202715	Identifier	nb_globals		8201912	0					
ANR	8202716	ExpressionStatement	args += 3	313:16:5717:5726	8201912	2	True				
ANR	8202717	AssignmentExpression	args += 3		8201912	0		+=			
ANR	8202718	Identifier	args		8201912	0					
ANR	8202719	PrimaryExpression	3		8201912	1					
ANR	8202720	ExpressionStatement	gen_args += 2	315:16:5745:5758	8201912	3	True				
ANR	8202721	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202722	Identifier	gen_args		8201912	0					
ANR	8202723	PrimaryExpression	2		8201912	1					
ANR	8202724	ContinueStatement	continue ;	317:16:5777:5785	8201912	4	True				
ANR	8202725	BreakStatement	break ;	321:12:5815:5820	8201912	11	True				
ANR	8202726	Label	default :	323:8:5831:5838	8201912	12	True				
ANR	8202727	Identifier	default		8201912	0					
ANR	8202728	BreakStatement	break ;	325:12:5853:5858	8201912	13	True				
ANR	8202729	SwitchStatement	switch ( op )		8201912	7					
ANR	8202730	Condition	op	333:16:5960:5961	8201912	0	True				
ANR	8202731	Identifier	op		8201912	0					
ANR	8202732	CompoundStatement		329:20:5814:5814	8201912	1					
ANR	8202733	Statement	CASE_OP_32_64	335:8:5975:5987	8201912	0	True				
ANR	8202734	Statement	(	335:21:5988:5988	8201912	1	True				
ANR	8202735	Statement	or	335:22:5989:5990	8201912	2	True				
ANR	8202736	Statement	)	335:24:5991:5991	8201912	3	True				
ANR	8202737	Statement	:	335:25:5992:5992	8201912	4	True				
ANR	8202738	Statement	CASE_OP_32_64	337:8:6003:6015	8201912	5	True				
ANR	8202739	Statement	(	337:21:6016:6016	8201912	6	True				
ANR	8202740	Statement	and	337:22:6017:6019	8201912	7	True				
ANR	8202741	Statement	)	337:25:6020:6020	8201912	8	True				
ANR	8202742	Statement	:	337:26:6021:6021	8201912	9	True				
ANR	8202743	IfStatement	if ( args [ 1 ] == args [ 2 ] )		8201912	10					
ANR	8202744	Condition	args [ 1 ] == args [ 2 ]	339:16:6040:6057	8201912	0	True				
ANR	8202745	EqualityExpression	args [ 1 ] == args [ 2 ]		8201912	0		==			
ANR	8202746	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202747	Identifier	args		8201912	0					
ANR	8202748	PrimaryExpression	1		8201912	1					
ANR	8202749	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8202750	Identifier	args		8201912	0					
ANR	8202751	PrimaryExpression	2		8201912	1					
ANR	8202752	CompoundStatement		335:36:5910:5910	8201912	1					
ANR	8202753	IfStatement	if ( args [ 1 ] == args [ 0 ] )		8201912	0					
ANR	8202754	Condition	args [ 1 ] == args [ 0 ]	341:20:6083:6100	8201912	0	True				
ANR	8202755	EqualityExpression	args [ 1 ] == args [ 0 ]		8201912	0		==			
ANR	8202756	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202757	Identifier	args		8201912	0					
ANR	8202758	PrimaryExpression	1		8201912	1					
ANR	8202759	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202760	Identifier	args		8201912	0					
ANR	8202761	PrimaryExpression	0		8201912	1					
ANR	8202762	CompoundStatement		337:40:5953:5953	8201912	1					
ANR	8202763	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_nop	343:20:6126:6162	8201912	0	True				
ANR	8202764	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_nop		8201912	0		=			
ANR	8202765	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202766	Identifier	gen_opc_buf		8201912	0					
ANR	8202767	Identifier	op_index		8201912	1					
ANR	8202768	Identifier	INDEX_op_nop		8201912	1					
ANR	8202769	ElseStatement	else		8201912	0					
ANR	8202770	CompoundStatement		341:23:6038:6038	8201912	0					
ANR	8202771	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_mov ( op )	347:20:6211:6248	8201912	0	True				
ANR	8202772	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_mov ( op )		8201912	0		=			
ANR	8202773	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202774	Identifier	gen_opc_buf		8201912	0					
ANR	8202775	Identifier	op_index		8201912	1					
ANR	8202776	CallExpression	op_to_mov ( op )		8201912	1					
ANR	8202777	Callee	op_to_mov		8201912	0					
ANR	8202778	Identifier	op_to_mov		8201912	0					
ANR	8202779	ArgumentList	op		8201912	1					
ANR	8202780	Argument	op		8201912	0					
ANR	8202781	Identifier	op		8201912	0					
ANR	8202782	ExpressionStatement	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"	349:20:6271:6373	8201912	1	True				
ANR	8202783	CallExpression	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8202784	Callee	tcg_opt_gen_mov		8201912	0					
ANR	8202785	Identifier	tcg_opt_gen_mov		8201912	0					
ANR	8202786	ArgumentList	gen_args		8201912	1					
ANR	8202787	Argument	gen_args		8201912	0					
ANR	8202788	Identifier	gen_args		8201912	0					
ANR	8202789	Argument	args [ 0 ]		8201912	1					
ANR	8202790	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202791	Identifier	args		8201912	0					
ANR	8202792	PrimaryExpression	0		8201912	1					
ANR	8202793	Argument	args [ 1 ]		8201912	2					
ANR	8202794	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202795	Identifier	args		8201912	0					
ANR	8202796	PrimaryExpression	1		8201912	1					
ANR	8202797	Argument	nb_temps		8201912	3					
ANR	8202798	Identifier	nb_temps		8201912	0					
ANR	8202799	Argument	nb_globals		8201912	4					
ANR	8202800	Identifier	nb_globals		8201912	0					
ANR	8202801	ExpressionStatement	gen_args += 2	353:20:6396:6409	8201912	2	True				
ANR	8202802	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202803	Identifier	gen_args		8201912	0					
ANR	8202804	PrimaryExpression	2		8201912	1					
ANR	8202805	ExpressionStatement	args += 3	357:16:6447:6456	8201912	1	True				
ANR	8202806	AssignmentExpression	args += 3		8201912	0		+=			
ANR	8202807	Identifier	args		8201912	0					
ANR	8202808	PrimaryExpression	3		8201912	1					
ANR	8202809	ContinueStatement	continue ;	359:16:6475:6483	8201912	2	True				
ANR	8202810	BreakStatement	break ;	363:12:6513:6518	8201912	11	True				
ANR	8202811	Label	default :	365:8:6529:6536	8201912	12	True				
ANR	8202812	Identifier	default		8201912	0					
ANR	8202813	BreakStatement	break ;	367:12:6551:6556	8201912	13	True				
ANR	8202814	SwitchStatement	switch ( op )		8201912	8					
ANR	8202815	Condition	op	379:16:6810:6811	8201912	0	True				
ANR	8202816	Identifier	op		8201912	0					
ANR	8202817	CompoundStatement		375:20:6664:6664	8201912	1					
ANR	8202818	Statement	CASE_OP_32_64	381:8:6825:6837	8201912	0	True				
ANR	8202819	Statement	(	381:21:6838:6838	8201912	1	True				
ANR	8202820	Statement	mov	381:22:6839:6841	8201912	2	True				
ANR	8202821	Statement	)	381:25:6842:6842	8201912	3	True				
ANR	8202822	Statement	:	381:26:6843:6843	8201912	4	True				
ANR	8202823	IfStatement	if ( ( temps [ args [ 1 ] ] . state == TCG_TEMP_COPY && temps [ args [ 1 ] ] . val == args [ 0 ] ) || args [ 0 ] == args [ 1 ] )		8201912	5					
ANR	8202824	Condition	( temps [ args [ 1 ] ] . state == TCG_TEMP_COPY && temps [ args [ 1 ] ] . val == args [ 0 ] ) || args [ 0 ] == args [ 1 ]	383:16:6862:6989	8201912	0	True				
ANR	8202825	OrExpression	( temps [ args [ 1 ] ] . state == TCG_TEMP_COPY && temps [ args [ 1 ] ] . val == args [ 0 ] ) || args [ 0 ] == args [ 1 ]		8201912	0		||			
ANR	8202826	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_COPY && temps [ args [ 1 ] ] . val == args [ 0 ]		8201912	0		&&			
ANR	8202827	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_COPY		8201912	0		==			
ANR	8202828	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202829	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202830	Identifier	temps		8201912	0					
ANR	8202831	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202832	Identifier	args		8201912	0					
ANR	8202833	PrimaryExpression	1		8201912	1					
ANR	8202834	Identifier	state		8201912	1					
ANR	8202835	Identifier	TCG_TEMP_COPY		8201912	1					
ANR	8202836	EqualityExpression	temps [ args [ 1 ] ] . val == args [ 0 ]		8201912	1		==			
ANR	8202837	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8202838	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202839	Identifier	temps		8201912	0					
ANR	8202840	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202841	Identifier	args		8201912	0					
ANR	8202842	PrimaryExpression	1		8201912	1					
ANR	8202843	Identifier	val		8201912	1					
ANR	8202844	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8202845	Identifier	args		8201912	0					
ANR	8202846	PrimaryExpression	0		8201912	1					
ANR	8202847	EqualityExpression	args [ 0 ] == args [ 1 ]		8201912	1		==			
ANR	8202848	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202849	Identifier	args		8201912	0					
ANR	8202850	PrimaryExpression	0		8201912	1					
ANR	8202851	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202852	Identifier	args		8201912	0					
ANR	8202853	PrimaryExpression	1		8201912	1					
ANR	8202854	CompoundStatement		383:39:6842:6842	8201912	1					
ANR	8202855	ExpressionStatement	args += 2	389:16:7011:7020	8201912	0	True				
ANR	8202856	AssignmentExpression	args += 2		8201912	0		+=			
ANR	8202857	Identifier	args		8201912	0					
ANR	8202858	PrimaryExpression	2		8201912	1					
ANR	8202859	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_nop	391:16:7039:7075	8201912	1	True				
ANR	8202860	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_nop		8201912	0		=			
ANR	8202861	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202862	Identifier	gen_opc_buf		8201912	0					
ANR	8202863	Identifier	op_index		8201912	1					
ANR	8202864	Identifier	INDEX_op_nop		8201912	1					
ANR	8202865	BreakStatement	break ;	393:16:7094:7099	8201912	2	True				
ANR	8202866	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST )		8201912	6					
ANR	8202867	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST	397:16:7133:7170	8201912	0	True				
ANR	8202868	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8201912	0		!=			
ANR	8202869	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8202870	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202871	Identifier	temps		8201912	0					
ANR	8202872	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202873	Identifier	args		8201912	0					
ANR	8202874	PrimaryExpression	1		8201912	1					
ANR	8202875	Identifier	state		8201912	1					
ANR	8202876	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8202877	CompoundStatement		393:56:7023:7023	8201912	1					
ANR	8202878	ExpressionStatement	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"	399:16:7192:7290	8201912	0	True				
ANR	8202879	CallExpression	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8202880	Callee	tcg_opt_gen_mov		8201912	0					
ANR	8202881	Identifier	tcg_opt_gen_mov		8201912	0					
ANR	8202882	ArgumentList	gen_args		8201912	1					
ANR	8202883	Argument	gen_args		8201912	0					
ANR	8202884	Identifier	gen_args		8201912	0					
ANR	8202885	Argument	args [ 0 ]		8201912	1					
ANR	8202886	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202887	Identifier	args		8201912	0					
ANR	8202888	PrimaryExpression	0		8201912	1					
ANR	8202889	Argument	args [ 1 ]		8201912	2					
ANR	8202890	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202891	Identifier	args		8201912	0					
ANR	8202892	PrimaryExpression	1		8201912	1					
ANR	8202893	Argument	nb_temps		8201912	3					
ANR	8202894	Identifier	nb_temps		8201912	0					
ANR	8202895	Argument	nb_globals		8201912	4					
ANR	8202896	Identifier	nb_globals		8201912	0					
ANR	8202897	ExpressionStatement	gen_args += 2	403:16:7309:7322	8201912	1	True				
ANR	8202898	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202899	Identifier	gen_args		8201912	0					
ANR	8202900	PrimaryExpression	2		8201912	1					
ANR	8202901	ExpressionStatement	args += 2	405:16:7341:7350	8201912	2	True				
ANR	8202902	AssignmentExpression	args += 2		8201912	0		+=			
ANR	8202903	Identifier	args		8201912	0					
ANR	8202904	PrimaryExpression	2		8201912	1					
ANR	8202905	BreakStatement	break ;	407:16:7369:7374	8201912	3	True				
ANR	8202906	ExpressionStatement	op = op_to_movi ( op )	415:12:7520:7539	8201912	7	True				
ANR	8202907	AssignmentExpression	op = op_to_movi ( op )		8201912	0		=			
ANR	8202908	Identifier	op		8201912	0					
ANR	8202909	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8202910	Callee	op_to_movi		8201912	0					
ANR	8202911	Identifier	op_to_movi		8201912	0					
ANR	8202912	ArgumentList	op		8201912	1					
ANR	8202913	Argument	op		8201912	0					
ANR	8202914	Identifier	op		8201912	0					
ANR	8202915	ExpressionStatement	gen_opc_buf [ op_index ] = op	417:12:7554:7580	8201912	8	True				
ANR	8202916	AssignmentExpression	gen_opc_buf [ op_index ] = op		8201912	0		=			
ANR	8202917	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8202918	Identifier	gen_opc_buf		8201912	0					
ANR	8202919	Identifier	op_index		8201912	1					
ANR	8202920	Identifier	op		8201912	1					
ANR	8202921	ExpressionStatement	args [ 1 ] = temps [ args [ 1 ] ] . val	419:12:7595:7623	8201912	9	True				
ANR	8202922	AssignmentExpression	args [ 1 ] = temps [ args [ 1 ] ] . val		8201912	0		=			
ANR	8202923	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202924	Identifier	args		8201912	0					
ANR	8202925	PrimaryExpression	1		8201912	1					
ANR	8202926	MemberAccess	temps [ args [ 1 ] ] . val		8201912	1					
ANR	8202927	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8202928	Identifier	temps		8201912	0					
ANR	8202929	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8202930	Identifier	args		8201912	0					
ANR	8202931	PrimaryExpression	1		8201912	1					
ANR	8202932	Identifier	val		8201912	1					
ANR	8202933	Statement	CASE_OP_32_64	423:8:7665:7677	8201912	10	True				
ANR	8202934	Statement	(	423:21:7678:7678	8201912	11	True				
ANR	8202935	Statement	movi	423:22:7679:7682	8201912	12	True				
ANR	8202936	Statement	)	423:26:7683:7683	8201912	13	True				
ANR	8202937	Statement	:	423:27:7684:7684	8201912	14	True				
ANR	8202938	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"	425:12:7699:7765	8201912	15	True				
ANR	8202939	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , args [ 1 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8202940	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8202941	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8202942	ArgumentList	gen_args		8201912	1					
ANR	8202943	Argument	gen_args		8201912	0					
ANR	8202944	Identifier	gen_args		8201912	0					
ANR	8202945	Argument	args [ 0 ]		8201912	1					
ANR	8202946	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8202947	Identifier	args		8201912	0					
ANR	8202948	PrimaryExpression	0		8201912	1					
ANR	8202949	Argument	args [ 1 ]		8201912	2					
ANR	8202950	ArrayIndexing	args [ 1 ]		8201912	0					
ANR	8202951	Identifier	args		8201912	0					
ANR	8202952	PrimaryExpression	1		8201912	1					
ANR	8202953	Argument	nb_temps		8201912	3					
ANR	8202954	Identifier	nb_temps		8201912	0					
ANR	8202955	Argument	nb_globals		8201912	4					
ANR	8202956	Identifier	nb_globals		8201912	0					
ANR	8202957	ExpressionStatement	gen_args += 2	427:12:7780:7793	8201912	16	True				
ANR	8202958	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8202959	Identifier	gen_args		8201912	0					
ANR	8202960	PrimaryExpression	2		8201912	1					
ANR	8202961	ExpressionStatement	args += 2	429:12:7808:7817	8201912	17	True				
ANR	8202962	AssignmentExpression	args += 2		8201912	0		+=			
ANR	8202963	Identifier	args		8201912	0					
ANR	8202964	PrimaryExpression	2		8201912	1					
ANR	8202965	BreakStatement	break ;	431:12:7832:7837	8201912	18	True				
ANR	8202966	Statement	CASE_OP_32_64	433:8:7848:7860	8201912	19	True				
ANR	8202967	Statement	(	433:21:7861:7861	8201912	20	True				
ANR	8202968	Statement	not	433:22:7862:7864	8201912	21	True				
ANR	8202969	Statement	)	433:25:7865:7865	8201912	22	True				
ANR	8202970	Statement	:	433:26:7866:7866	8201912	23	True				
ANR	8202971	Statement	CASE_OP_32_64	435:8:7877:7889	8201912	24	True				
ANR	8202972	Statement	(	435:21:7890:7890	8201912	25	True				
ANR	8202973	Statement	neg	435:22:7891:7893	8201912	26	True				
ANR	8202974	Statement	)	435:25:7894:7894	8201912	27	True				
ANR	8202975	Statement	:	435:26:7895:7895	8201912	28	True				
ANR	8202976	Statement	CASE_OP_32_64	437:8:7906:7918	8201912	29	True				
ANR	8202977	Statement	(	437:21:7919:7919	8201912	30	True				
ANR	8202978	Statement	ext8s	437:22:7920:7924	8201912	31	True				
ANR	8202979	Statement	)	437:27:7925:7925	8201912	32	True				
ANR	8202980	Statement	:	437:28:7926:7926	8201912	33	True				
ANR	8202981	Statement	CASE_OP_32_64	439:8:7937:7949	8201912	34	True				
ANR	8202982	Statement	(	439:21:7950:7950	8201912	35	True				
ANR	8202983	Statement	ext8u	439:22:7951:7955	8201912	36	True				
ANR	8202984	Statement	)	439:27:7956:7956	8201912	37	True				
ANR	8202985	Statement	:	439:28:7957:7957	8201912	38	True				
ANR	8202986	Statement	CASE_OP_32_64	441:8:7968:7980	8201912	39	True				
ANR	8202987	Statement	(	441:21:7981:7981	8201912	40	True				
ANR	8202988	Statement	ext16s	441:22:7982:7987	8201912	41	True				
ANR	8202989	Statement	)	441:28:7988:7988	8201912	42	True				
ANR	8202990	Statement	:	441:29:7989:7989	8201912	43	True				
ANR	8202991	Statement	CASE_OP_32_64	443:8:8000:8012	8201912	44	True				
ANR	8202992	Statement	(	443:21:8013:8013	8201912	45	True				
ANR	8202993	Statement	ext16u	443:22:8014:8019	8201912	46	True				
ANR	8202994	Statement	)	443:28:8020:8020	8201912	47	True				
ANR	8202995	Statement	:	443:29:8021:8021	8201912	48	True				
ANR	8202996	Label	case INDEX_op_ext32s_i64 :	445:8:8032:8056	8201912	49	True				
ANR	8202997	Identifier	INDEX_op_ext32s_i64		8201912	0					
ANR	8202998	Label	case INDEX_op_ext32u_i64 :	447:8:8067:8091	8201912	50	True				
ANR	8202999	Identifier	INDEX_op_ext32u_i64		8201912	0					
ANR	8203000	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8201912	51					
ANR	8203001	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	449:16:8110:8147	8201912	0	True				
ANR	8203002	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203003	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8203004	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203005	Identifier	temps		8201912	0					
ANR	8203006	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203007	Identifier	args		8201912	0					
ANR	8203008	PrimaryExpression	1		8201912	1					
ANR	8203009	Identifier	state		8201912	1					
ANR	8203010	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203011	CompoundStatement		445:56:8000:8000	8201912	1					
ANR	8203012	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	451:16:8169:8207	8201912	0	True				
ANR	8203013	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8203014	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203015	Identifier	gen_opc_buf		8201912	0					
ANR	8203016	Identifier	op_index		8201912	1					
ANR	8203017	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8203018	Callee	op_to_movi		8201912	0					
ANR	8203019	Identifier	op_to_movi		8201912	0					
ANR	8203020	ArgumentList	op		8201912	1					
ANR	8203021	Argument	op		8201912	0					
ANR	8203022	Identifier	op		8201912	0					
ANR	8203023	ExpressionStatement	"tmp = do_constant_folding ( op , temps [ args [ 1 ] ] . val , 0 )"	453:16:8226:8278	8201912	1	True				
ANR	8203024	AssignmentExpression	"tmp = do_constant_folding ( op , temps [ args [ 1 ] ] . val , 0 )"		8201912	0		=			
ANR	8203025	Identifier	tmp		8201912	0					
ANR	8203026	CallExpression	"do_constant_folding ( op , temps [ args [ 1 ] ] . val , 0 )"		8201912	1					
ANR	8203027	Callee	do_constant_folding		8201912	0					
ANR	8203028	Identifier	do_constant_folding		8201912	0					
ANR	8203029	ArgumentList	op		8201912	1					
ANR	8203030	Argument	op		8201912	0					
ANR	8203031	Identifier	op		8201912	0					
ANR	8203032	Argument	temps [ args [ 1 ] ] . val		8201912	1					
ANR	8203033	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8203034	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203035	Identifier	temps		8201912	0					
ANR	8203036	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203037	Identifier	args		8201912	0					
ANR	8203038	PrimaryExpression	1		8201912	1					
ANR	8203039	Identifier	val		8201912	1					
ANR	8203040	Argument	0		8201912	2					
ANR	8203041	PrimaryExpression	0		8201912	0					
ANR	8203042	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"	455:16:8297:8359	8201912	2	True				
ANR	8203043	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"		8201912	0					
ANR	8203044	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8203045	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8203046	ArgumentList	gen_args		8201912	1					
ANR	8203047	Argument	gen_args		8201912	0					
ANR	8203048	Identifier	gen_args		8201912	0					
ANR	8203049	Argument	args [ 0 ]		8201912	1					
ANR	8203050	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203051	Identifier	args		8201912	0					
ANR	8203052	PrimaryExpression	0		8201912	1					
ANR	8203053	Argument	tmp		8201912	2					
ANR	8203054	Identifier	tmp		8201912	0					
ANR	8203055	Argument	nb_temps		8201912	3					
ANR	8203056	Identifier	nb_temps		8201912	0					
ANR	8203057	Argument	nb_globals		8201912	4					
ANR	8203058	Identifier	nb_globals		8201912	0					
ANR	8203059	ElseStatement	else		8201912	0					
ANR	8203060	CompoundStatement		453:19:8231:8231	8201912	0					
ANR	8203061	ExpressionStatement	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"	459:16:8400:8441	8201912	0	True				
ANR	8203062	CallExpression	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203063	Callee	reset_temp		8201912	0					
ANR	8203064	Identifier	reset_temp		8201912	0					
ANR	8203065	ArgumentList	args [ 0 ]		8201912	1					
ANR	8203066	Argument	args [ 0 ]		8201912	0					
ANR	8203067	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203068	Identifier	args		8201912	0					
ANR	8203069	PrimaryExpression	0		8201912	1					
ANR	8203070	Argument	nb_temps		8201912	1					
ANR	8203071	Identifier	nb_temps		8201912	0					
ANR	8203072	Argument	nb_globals		8201912	2					
ANR	8203073	Identifier	nb_globals		8201912	0					
ANR	8203074	ExpressionStatement	gen_args [ 0 ] = args [ 0 ]	461:16:8460:8481	8201912	1	True				
ANR	8203075	AssignmentExpression	gen_args [ 0 ] = args [ 0 ]		8201912	0		=			
ANR	8203076	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203077	Identifier	gen_args		8201912	0					
ANR	8203078	PrimaryExpression	0		8201912	1					
ANR	8203079	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203080	Identifier	args		8201912	0					
ANR	8203081	PrimaryExpression	0		8201912	1					
ANR	8203082	ExpressionStatement	gen_args [ 1 ] = args [ 1 ]	463:16:8500:8521	8201912	2	True				
ANR	8203083	AssignmentExpression	gen_args [ 1 ] = args [ 1 ]		8201912	0		=			
ANR	8203084	ArrayIndexing	gen_args [ 1 ]		8201912	0					
ANR	8203085	Identifier	gen_args		8201912	0					
ANR	8203086	PrimaryExpression	1		8201912	1					
ANR	8203087	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203088	Identifier	args		8201912	0					
ANR	8203089	PrimaryExpression	1		8201912	1					
ANR	8203090	ExpressionStatement	gen_args += 2	467:12:8551:8564	8201912	52	True				
ANR	8203091	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8203092	Identifier	gen_args		8201912	0					
ANR	8203093	PrimaryExpression	2		8201912	1					
ANR	8203094	ExpressionStatement	args += 2	469:12:8579:8588	8201912	53	True				
ANR	8203095	AssignmentExpression	args += 2		8201912	0		+=			
ANR	8203096	Identifier	args		8201912	0					
ANR	8203097	PrimaryExpression	2		8201912	1					
ANR	8203098	BreakStatement	break ;	471:12:8603:8608	8201912	54	True				
ANR	8203099	Statement	CASE_OP_32_64	473:8:8619:8631	8201912	55	True				
ANR	8203100	Statement	(	473:21:8632:8632	8201912	56	True				
ANR	8203101	Statement	add	473:22:8633:8635	8201912	57	True				
ANR	8203102	Statement	)	473:25:8636:8636	8201912	58	True				
ANR	8203103	Statement	:	473:26:8637:8637	8201912	59	True				
ANR	8203104	Statement	CASE_OP_32_64	475:8:8648:8660	8201912	60	True				
ANR	8203105	Statement	(	475:21:8661:8661	8201912	61	True				
ANR	8203106	Statement	sub	475:22:8662:8664	8201912	62	True				
ANR	8203107	Statement	)	475:25:8665:8665	8201912	63	True				
ANR	8203108	Statement	:	475:26:8666:8666	8201912	64	True				
ANR	8203109	Statement	CASE_OP_32_64	477:8:8677:8689	8201912	65	True				
ANR	8203110	Statement	(	477:21:8690:8690	8201912	66	True				
ANR	8203111	Statement	mul	477:22:8691:8693	8201912	67	True				
ANR	8203112	Statement	)	477:25:8694:8694	8201912	68	True				
ANR	8203113	Statement	:	477:26:8695:8695	8201912	69	True				
ANR	8203114	Statement	CASE_OP_32_64	479:8:8706:8718	8201912	70	True				
ANR	8203115	Statement	(	479:21:8719:8719	8201912	71	True				
ANR	8203116	Statement	or	479:22:8720:8721	8201912	72	True				
ANR	8203117	Statement	)	479:24:8722:8722	8201912	73	True				
ANR	8203118	Statement	:	479:25:8723:8723	8201912	74	True				
ANR	8203119	Statement	CASE_OP_32_64	481:8:8734:8746	8201912	75	True				
ANR	8203120	Statement	(	481:21:8747:8747	8201912	76	True				
ANR	8203121	Statement	and	481:22:8748:8750	8201912	77	True				
ANR	8203122	Statement	)	481:25:8751:8751	8201912	78	True				
ANR	8203123	Statement	:	481:26:8752:8752	8201912	79	True				
ANR	8203124	Statement	CASE_OP_32_64	483:8:8763:8775	8201912	80	True				
ANR	8203125	Statement	(	483:21:8776:8776	8201912	81	True				
ANR	8203126	Statement	xor	483:22:8777:8779	8201912	82	True				
ANR	8203127	Statement	)	483:25:8780:8780	8201912	83	True				
ANR	8203128	Statement	:	483:26:8781:8781	8201912	84	True				
ANR	8203129	Statement	CASE_OP_32_64	485:8:8792:8804	8201912	85	True				
ANR	8203130	Statement	(	485:21:8805:8805	8201912	86	True				
ANR	8203131	Statement	shl	485:22:8806:8808	8201912	87	True				
ANR	8203132	Statement	)	485:25:8809:8809	8201912	88	True				
ANR	8203133	Statement	:	485:26:8810:8810	8201912	89	True				
ANR	8203134	Statement	CASE_OP_32_64	487:8:8821:8833	8201912	90	True				
ANR	8203135	Statement	(	487:21:8834:8834	8201912	91	True				
ANR	8203136	Statement	shr	487:22:8835:8837	8201912	92	True				
ANR	8203137	Statement	)	487:25:8838:8838	8201912	93	True				
ANR	8203138	Statement	:	487:26:8839:8839	8201912	94	True				
ANR	8203139	Statement	CASE_OP_32_64	489:8:8850:8862	8201912	95	True				
ANR	8203140	Statement	(	489:21:8863:8863	8201912	96	True				
ANR	8203141	Statement	sar	489:22:8864:8866	8201912	97	True				
ANR	8203142	Statement	)	489:25:8867:8867	8201912	98	True				
ANR	8203143	Statement	:	489:26:8868:8868	8201912	99	True				
ANR	8203144	Statement	CASE_OP_32_64	491:8:8879:8891	8201912	100	True				
ANR	8203145	Statement	(	491:21:8892:8892	8201912	101	True				
ANR	8203146	Statement	rotl	491:22:8893:8896	8201912	102	True				
ANR	8203147	Statement	)	491:26:8897:8897	8201912	103	True				
ANR	8203148	Statement	:	491:27:8898:8898	8201912	104	True				
ANR	8203149	Statement	CASE_OP_32_64	493:8:8909:8921	8201912	105	True				
ANR	8203150	Statement	(	493:21:8922:8922	8201912	106	True				
ANR	8203151	Statement	rotr	493:22:8923:8926	8201912	107	True				
ANR	8203152	Statement	)	493:26:8927:8927	8201912	108	True				
ANR	8203153	Statement	:	493:27:8928:8928	8201912	109	True				
ANR	8203154	Statement	CASE_OP_32_64	495:8:8939:8951	8201912	110	True				
ANR	8203155	Statement	(	495:21:8952:8952	8201912	111	True				
ANR	8203156	Statement	andc	495:22:8953:8956	8201912	112	True				
ANR	8203157	Statement	)	495:26:8957:8957	8201912	113	True				
ANR	8203158	Statement	:	495:27:8958:8958	8201912	114	True				
ANR	8203159	Statement	CASE_OP_32_64	497:8:8969:8981	8201912	115	True				
ANR	8203160	Statement	(	497:21:8982:8982	8201912	116	True				
ANR	8203161	Statement	orc	497:22:8983:8985	8201912	117	True				
ANR	8203162	Statement	)	497:25:8986:8986	8201912	118	True				
ANR	8203163	Statement	:	497:26:8987:8987	8201912	119	True				
ANR	8203164	Statement	CASE_OP_32_64	499:8:8998:9010	8201912	120	True				
ANR	8203165	Statement	(	499:21:9011:9011	8201912	121	True				
ANR	8203166	Statement	eqv	499:22:9012:9014	8201912	122	True				
ANR	8203167	Statement	)	499:25:9015:9015	8201912	123	True				
ANR	8203168	Statement	:	499:26:9016:9016	8201912	124	True				
ANR	8203169	Statement	CASE_OP_32_64	501:8:9027:9039	8201912	125	True				
ANR	8203170	Statement	(	501:21:9040:9040	8201912	126	True				
ANR	8203171	Statement	nand	501:22:9041:9044	8201912	127	True				
ANR	8203172	Statement	)	501:26:9045:9045	8201912	128	True				
ANR	8203173	Statement	:	501:27:9046:9046	8201912	129	True				
ANR	8203174	Statement	CASE_OP_32_64	503:8:9057:9069	8201912	130	True				
ANR	8203175	Statement	(	503:21:9070:9070	8201912	131	True				
ANR	8203176	Statement	nor	503:22:9071:9073	8201912	132	True				
ANR	8203177	Statement	)	503:25:9074:9074	8201912	133	True				
ANR	8203178	Statement	:	503:26:9075:9075	8201912	134	True				
ANR	8203179	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8201912	135					
ANR	8203180	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	505:16:9094:9190	8201912	0	True				
ANR	8203181	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	0		&&			
ANR	8203182	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203183	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8203184	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203185	Identifier	temps		8201912	0					
ANR	8203186	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203187	Identifier	args		8201912	0					
ANR	8203188	PrimaryExpression	1		8201912	1					
ANR	8203189	Identifier	state		8201912	1					
ANR	8203190	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203191	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	1		==			
ANR	8203192	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8203193	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203194	Identifier	temps		8201912	0					
ANR	8203195	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203196	Identifier	args		8201912	0					
ANR	8203197	PrimaryExpression	2		8201912	1					
ANR	8203198	Identifier	state		8201912	1					
ANR	8203199	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203200	CompoundStatement		503:59:9043:9043	8201912	1					
ANR	8203201	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	509:16:9212:9250	8201912	0	True				
ANR	8203202	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8203203	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203204	Identifier	gen_opc_buf		8201912	0					
ANR	8203205	Identifier	op_index		8201912	1					
ANR	8203206	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8203207	Callee	op_to_movi		8201912	0					
ANR	8203208	Identifier	op_to_movi		8201912	0					
ANR	8203209	ArgumentList	op		8201912	1					
ANR	8203210	Argument	op		8201912	0					
ANR	8203211	Identifier	op		8201912	0					
ANR	8203212	ExpressionStatement	"tmp = do_constant_folding ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"	511:16:9269:9381	8201912	1	True				
ANR	8203213	AssignmentExpression	"tmp = do_constant_folding ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8201912	0		=			
ANR	8203214	Identifier	tmp		8201912	0					
ANR	8203215	CallExpression	"do_constant_folding ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8201912	1					
ANR	8203216	Callee	do_constant_folding		8201912	0					
ANR	8203217	Identifier	do_constant_folding		8201912	0					
ANR	8203218	ArgumentList	op		8201912	1					
ANR	8203219	Argument	op		8201912	0					
ANR	8203220	Identifier	op		8201912	0					
ANR	8203221	Argument	temps [ args [ 1 ] ] . val		8201912	1					
ANR	8203222	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8203223	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203224	Identifier	temps		8201912	0					
ANR	8203225	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203226	Identifier	args		8201912	0					
ANR	8203227	PrimaryExpression	1		8201912	1					
ANR	8203228	Identifier	val		8201912	1					
ANR	8203229	Argument	temps [ args [ 2 ] ] . val		8201912	2					
ANR	8203230	MemberAccess	temps [ args [ 2 ] ] . val		8201912	0					
ANR	8203231	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203232	Identifier	temps		8201912	0					
ANR	8203233	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203234	Identifier	args		8201912	0					
ANR	8203235	PrimaryExpression	2		8201912	1					
ANR	8203236	Identifier	val		8201912	1					
ANR	8203237	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"	515:16:9400:9462	8201912	2	True				
ANR	8203238	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"		8201912	0					
ANR	8203239	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8203240	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8203241	ArgumentList	gen_args		8201912	1					
ANR	8203242	Argument	gen_args		8201912	0					
ANR	8203243	Identifier	gen_args		8201912	0					
ANR	8203244	Argument	args [ 0 ]		8201912	1					
ANR	8203245	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203246	Identifier	args		8201912	0					
ANR	8203247	PrimaryExpression	0		8201912	1					
ANR	8203248	Argument	tmp		8201912	2					
ANR	8203249	Identifier	tmp		8201912	0					
ANR	8203250	Argument	nb_temps		8201912	3					
ANR	8203251	Identifier	nb_temps		8201912	0					
ANR	8203252	Argument	nb_globals		8201912	4					
ANR	8203253	Identifier	nb_globals		8201912	0					
ANR	8203254	ExpressionStatement	gen_args += 2	517:16:9481:9494	8201912	3	True				
ANR	8203255	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8203256	Identifier	gen_args		8201912	0					
ANR	8203257	PrimaryExpression	2		8201912	1					
ANR	8203258	ElseStatement	else		8201912	0					
ANR	8203259	CompoundStatement		515:19:9366:9366	8201912	0					
ANR	8203260	ExpressionStatement	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"	521:16:9535:9576	8201912	0	True				
ANR	8203261	CallExpression	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203262	Callee	reset_temp		8201912	0					
ANR	8203263	Identifier	reset_temp		8201912	0					
ANR	8203264	ArgumentList	args [ 0 ]		8201912	1					
ANR	8203265	Argument	args [ 0 ]		8201912	0					
ANR	8203266	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203267	Identifier	args		8201912	0					
ANR	8203268	PrimaryExpression	0		8201912	1					
ANR	8203269	Argument	nb_temps		8201912	1					
ANR	8203270	Identifier	nb_temps		8201912	0					
ANR	8203271	Argument	nb_globals		8201912	2					
ANR	8203272	Identifier	nb_globals		8201912	0					
ANR	8203273	ExpressionStatement	gen_args [ 0 ] = args [ 0 ]	523:16:9595:9616	8201912	1	True				
ANR	8203274	AssignmentExpression	gen_args [ 0 ] = args [ 0 ]		8201912	0		=			
ANR	8203275	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203276	Identifier	gen_args		8201912	0					
ANR	8203277	PrimaryExpression	0		8201912	1					
ANR	8203278	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203279	Identifier	args		8201912	0					
ANR	8203280	PrimaryExpression	0		8201912	1					
ANR	8203281	ExpressionStatement	gen_args [ 1 ] = args [ 1 ]	525:16:9635:9656	8201912	2	True				
ANR	8203282	AssignmentExpression	gen_args [ 1 ] = args [ 1 ]		8201912	0		=			
ANR	8203283	ArrayIndexing	gen_args [ 1 ]		8201912	0					
ANR	8203284	Identifier	gen_args		8201912	0					
ANR	8203285	PrimaryExpression	1		8201912	1					
ANR	8203286	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203287	Identifier	args		8201912	0					
ANR	8203288	PrimaryExpression	1		8201912	1					
ANR	8203289	ExpressionStatement	gen_args [ 2 ] = args [ 2 ]	527:16:9675:9696	8201912	3	True				
ANR	8203290	AssignmentExpression	gen_args [ 2 ] = args [ 2 ]		8201912	0		=			
ANR	8203291	ArrayIndexing	gen_args [ 2 ]		8201912	0					
ANR	8203292	Identifier	gen_args		8201912	0					
ANR	8203293	PrimaryExpression	2		8201912	1					
ANR	8203294	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203295	Identifier	args		8201912	0					
ANR	8203296	PrimaryExpression	2		8201912	1					
ANR	8203297	ExpressionStatement	gen_args += 3	529:16:9715:9728	8201912	4	True				
ANR	8203298	AssignmentExpression	gen_args += 3		8201912	0		+=			
ANR	8203299	Identifier	gen_args		8201912	0					
ANR	8203300	PrimaryExpression	3		8201912	1					
ANR	8203301	ExpressionStatement	args += 3	533:12:9758:9767	8201912	136	True				
ANR	8203302	AssignmentExpression	args += 3		8201912	0		+=			
ANR	8203303	Identifier	args		8201912	0					
ANR	8203304	PrimaryExpression	3		8201912	1					
ANR	8203305	BreakStatement	break ;	535:12:9782:9787	8201912	137	True				
ANR	8203306	Statement	CASE_OP_32_64	537:8:9798:9810	8201912	138	True				
ANR	8203307	Statement	(	537:21:9811:9811	8201912	139	True				
ANR	8203308	Statement	setcond	537:22:9812:9818	8201912	140	True				
ANR	8203309	Statement	)	537:29:9819:9819	8201912	141	True				
ANR	8203310	Statement	:	537:30:9820:9820	8201912	142	True				
ANR	8203311	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8201912	143					
ANR	8203312	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	539:16:9839:9935	8201912	0	True				
ANR	8203313	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	0		&&			
ANR	8203314	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203315	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8203316	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203317	Identifier	temps		8201912	0					
ANR	8203318	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203319	Identifier	args		8201912	0					
ANR	8203320	PrimaryExpression	1		8201912	1					
ANR	8203321	Identifier	state		8201912	1					
ANR	8203322	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203323	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	1		==			
ANR	8203324	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8203325	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203326	Identifier	temps		8201912	0					
ANR	8203327	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203328	Identifier	args		8201912	0					
ANR	8203329	PrimaryExpression	2		8201912	1					
ANR	8203330	Identifier	state		8201912	1					
ANR	8203331	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203332	CompoundStatement		537:59:9788:9788	8201912	1					
ANR	8203333	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	543:16:9957:9995	8201912	0	True				
ANR	8203334	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8203335	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203336	Identifier	gen_opc_buf		8201912	0					
ANR	8203337	Identifier	op_index		8201912	1					
ANR	8203338	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8203339	Callee	op_to_movi		8201912	0					
ANR	8203340	Identifier	op_to_movi		8201912	0					
ANR	8203341	ArgumentList	op		8201912	1					
ANR	8203342	Argument	op		8201912	0					
ANR	8203343	Identifier	op		8201912	0					
ANR	8203344	ExpressionStatement	"tmp = do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 3 ] )"	545:16:10014:10145	8201912	1	True				
ANR	8203345	AssignmentExpression	"tmp = do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 3 ] )"		8201912	0		=			
ANR	8203346	Identifier	tmp		8201912	0					
ANR	8203347	CallExpression	"do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 3 ] )"		8201912	1					
ANR	8203348	Callee	do_constant_folding_cond		8201912	0					
ANR	8203349	Identifier	do_constant_folding_cond		8201912	0					
ANR	8203350	ArgumentList	op		8201912	1					
ANR	8203351	Argument	op		8201912	0					
ANR	8203352	Identifier	op		8201912	0					
ANR	8203353	Argument	temps [ args [ 1 ] ] . val		8201912	1					
ANR	8203354	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8203355	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203356	Identifier	temps		8201912	0					
ANR	8203357	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203358	Identifier	args		8201912	0					
ANR	8203359	PrimaryExpression	1		8201912	1					
ANR	8203360	Identifier	val		8201912	1					
ANR	8203361	Argument	temps [ args [ 2 ] ] . val		8201912	2					
ANR	8203362	MemberAccess	temps [ args [ 2 ] ] . val		8201912	0					
ANR	8203363	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203364	Identifier	temps		8201912	0					
ANR	8203365	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203366	Identifier	args		8201912	0					
ANR	8203367	PrimaryExpression	2		8201912	1					
ANR	8203368	Identifier	val		8201912	1					
ANR	8203369	Argument	args [ 3 ]		8201912	3					
ANR	8203370	ArrayIndexing	args [ 3 ]		8201912	0					
ANR	8203371	Identifier	args		8201912	0					
ANR	8203372	PrimaryExpression	3		8201912	1					
ANR	8203373	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"	549:16:10164:10226	8201912	2	True				
ANR	8203374	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , tmp , nb_temps , nb_globals )"		8201912	0					
ANR	8203375	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8203376	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8203377	ArgumentList	gen_args		8201912	1					
ANR	8203378	Argument	gen_args		8201912	0					
ANR	8203379	Identifier	gen_args		8201912	0					
ANR	8203380	Argument	args [ 0 ]		8201912	1					
ANR	8203381	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203382	Identifier	args		8201912	0					
ANR	8203383	PrimaryExpression	0		8201912	1					
ANR	8203384	Argument	tmp		8201912	2					
ANR	8203385	Identifier	tmp		8201912	0					
ANR	8203386	Argument	nb_temps		8201912	3					
ANR	8203387	Identifier	nb_temps		8201912	0					
ANR	8203388	Argument	nb_globals		8201912	4					
ANR	8203389	Identifier	nb_globals		8201912	0					
ANR	8203390	ExpressionStatement	gen_args += 2	551:16:10245:10258	8201912	3	True				
ANR	8203391	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8203392	Identifier	gen_args		8201912	0					
ANR	8203393	PrimaryExpression	2		8201912	1					
ANR	8203394	ElseStatement	else		8201912	0					
ANR	8203395	CompoundStatement		549:19:10130:10130	8201912	0					
ANR	8203396	ExpressionStatement	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"	555:16:10299:10340	8201912	0	True				
ANR	8203397	CallExpression	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203398	Callee	reset_temp		8201912	0					
ANR	8203399	Identifier	reset_temp		8201912	0					
ANR	8203400	ArgumentList	args [ 0 ]		8201912	1					
ANR	8203401	Argument	args [ 0 ]		8201912	0					
ANR	8203402	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203403	Identifier	args		8201912	0					
ANR	8203404	PrimaryExpression	0		8201912	1					
ANR	8203405	Argument	nb_temps		8201912	1					
ANR	8203406	Identifier	nb_temps		8201912	0					
ANR	8203407	Argument	nb_globals		8201912	2					
ANR	8203408	Identifier	nb_globals		8201912	0					
ANR	8203409	ExpressionStatement	gen_args [ 0 ] = args [ 0 ]	557:16:10359:10380	8201912	1	True				
ANR	8203410	AssignmentExpression	gen_args [ 0 ] = args [ 0 ]		8201912	0		=			
ANR	8203411	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203412	Identifier	gen_args		8201912	0					
ANR	8203413	PrimaryExpression	0		8201912	1					
ANR	8203414	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203415	Identifier	args		8201912	0					
ANR	8203416	PrimaryExpression	0		8201912	1					
ANR	8203417	ExpressionStatement	gen_args [ 1 ] = args [ 1 ]	559:16:10399:10420	8201912	2	True				
ANR	8203418	AssignmentExpression	gen_args [ 1 ] = args [ 1 ]		8201912	0		=			
ANR	8203419	ArrayIndexing	gen_args [ 1 ]		8201912	0					
ANR	8203420	Identifier	gen_args		8201912	0					
ANR	8203421	PrimaryExpression	1		8201912	1					
ANR	8203422	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203423	Identifier	args		8201912	0					
ANR	8203424	PrimaryExpression	1		8201912	1					
ANR	8203425	ExpressionStatement	gen_args [ 2 ] = args [ 2 ]	561:16:10439:10460	8201912	3	True				
ANR	8203426	AssignmentExpression	gen_args [ 2 ] = args [ 2 ]		8201912	0		=			
ANR	8203427	ArrayIndexing	gen_args [ 2 ]		8201912	0					
ANR	8203428	Identifier	gen_args		8201912	0					
ANR	8203429	PrimaryExpression	2		8201912	1					
ANR	8203430	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203431	Identifier	args		8201912	0					
ANR	8203432	PrimaryExpression	2		8201912	1					
ANR	8203433	ExpressionStatement	gen_args [ 3 ] = args [ 3 ]	563:16:10479:10500	8201912	4	True				
ANR	8203434	AssignmentExpression	gen_args [ 3 ] = args [ 3 ]		8201912	0		=			
ANR	8203435	ArrayIndexing	gen_args [ 3 ]		8201912	0					
ANR	8203436	Identifier	gen_args		8201912	0					
ANR	8203437	PrimaryExpression	3		8201912	1					
ANR	8203438	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8203439	Identifier	args		8201912	0					
ANR	8203440	PrimaryExpression	3		8201912	1					
ANR	8203441	ExpressionStatement	gen_args += 4	565:16:10519:10532	8201912	5	True				
ANR	8203442	AssignmentExpression	gen_args += 4		8201912	0		+=			
ANR	8203443	Identifier	gen_args		8201912	0					
ANR	8203444	PrimaryExpression	4		8201912	1					
ANR	8203445	ExpressionStatement	args += 4	569:12:10562:10571	8201912	144	True				
ANR	8203446	AssignmentExpression	args += 4		8201912	0		+=			
ANR	8203447	Identifier	args		8201912	0					
ANR	8203448	PrimaryExpression	4		8201912	1					
ANR	8203449	BreakStatement	break ;	571:12:10586:10591	8201912	145	True				
ANR	8203450	Statement	CASE_OP_32_64	573:8:10602:10614	8201912	146	True				
ANR	8203451	Statement	(	573:21:10615:10615	8201912	147	True				
ANR	8203452	Statement	brcond	573:22:10616:10621	8201912	148	True				
ANR	8203453	Statement	)	573:28:10622:10622	8201912	149	True				
ANR	8203454	Statement	:	573:29:10623:10623	8201912	150	True				
ANR	8203455	IfStatement	if ( temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8201912	151					
ANR	8203456	Condition	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	575:16:10642:10738	8201912	0	True				
ANR	8203457	AndExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		&&			
ANR	8203458	EqualityExpression	temps [ args [ 0 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203459	MemberAccess	temps [ args [ 0 ] ] . state		8201912	0					
ANR	8203460	ArrayIndexing	temps [ args [ 0 ] ]		8201912	0					
ANR	8203461	Identifier	temps		8201912	0					
ANR	8203462	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203463	Identifier	args		8201912	0					
ANR	8203464	PrimaryExpression	0		8201912	1					
ANR	8203465	Identifier	state		8201912	1					
ANR	8203466	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203467	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	1		==			
ANR	8203468	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8203469	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203470	Identifier	temps		8201912	0					
ANR	8203471	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203472	Identifier	args		8201912	0					
ANR	8203473	PrimaryExpression	1		8201912	1					
ANR	8203474	Identifier	state		8201912	1					
ANR	8203475	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203476	CompoundStatement		573:59:10591:10591	8201912	1					
ANR	8203477	IfStatement	"if ( do_constant_folding_cond ( op , temps [ args [ 0 ] ] . val , temps [ args [ 1 ] ] . val , args [ 2 ] ) )"		8201912	0					
ANR	8203478	Condition	"do_constant_folding_cond ( op , temps [ args [ 0 ] ] . val , temps [ args [ 1 ] ] . val , args [ 2 ] )"	579:20:10764:10886	8201912	0	True				
ANR	8203479	CallExpression	"do_constant_folding_cond ( op , temps [ args [ 0 ] ] . val , temps [ args [ 1 ] ] . val , args [ 2 ] )"		8201912	0					
ANR	8203480	Callee	do_constant_folding_cond		8201912	0					
ANR	8203481	Identifier	do_constant_folding_cond		8201912	0					
ANR	8203482	ArgumentList	op		8201912	1					
ANR	8203483	Argument	op		8201912	0					
ANR	8203484	Identifier	op		8201912	0					
ANR	8203485	Argument	temps [ args [ 0 ] ] . val		8201912	1					
ANR	8203486	MemberAccess	temps [ args [ 0 ] ] . val		8201912	0					
ANR	8203487	ArrayIndexing	temps [ args [ 0 ] ]		8201912	0					
ANR	8203488	Identifier	temps		8201912	0					
ANR	8203489	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203490	Identifier	args		8201912	0					
ANR	8203491	PrimaryExpression	0		8201912	1					
ANR	8203492	Identifier	val		8201912	1					
ANR	8203493	Argument	temps [ args [ 1 ] ] . val		8201912	2					
ANR	8203494	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8203495	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203496	Identifier	temps		8201912	0					
ANR	8203497	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203498	Identifier	args		8201912	0					
ANR	8203499	PrimaryExpression	1		8201912	1					
ANR	8203500	Identifier	val		8201912	1					
ANR	8203501	Argument	args [ 2 ]		8201912	3					
ANR	8203502	ArrayIndexing	args [ 2 ]		8201912	0					
ANR	8203503	Identifier	args		8201912	0					
ANR	8203504	PrimaryExpression	2		8201912	1					
ANR	8203505	CompoundStatement		577:75:10739:10739	8201912	1					
ANR	8203506	ExpressionStatement	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"	583:20:10912:10969	8201912	0	True				
ANR	8203507	CallExpression	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"		8201912	0					
ANR	8203508	Callee	memset		8201912	0					
ANR	8203509	Identifier	memset		8201912	0					
ANR	8203510	ArgumentList	temps		8201912	1					
ANR	8203511	Argument	temps		8201912	0					
ANR	8203512	Identifier	temps		8201912	0					
ANR	8203513	Argument	0		8201912	1					
ANR	8203514	PrimaryExpression	0		8201912	0					
ANR	8203515	Argument	nb_temps * sizeof ( struct tcg_temp_info )		8201912	2					
ANR	8203516	MultiplicativeExpression	nb_temps * sizeof ( struct tcg_temp_info )		8201912	0		*			
ANR	8203517	Identifier	nb_temps		8201912	0					
ANR	8203518	SizeofExpression	sizeof ( struct tcg_temp_info )		8201912	1					
ANR	8203519	Sizeof	sizeof		8201912	0					
ANR	8203520	SizeofOperand	struct tcg_temp_info		8201912	1					
ANR	8203521	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_br	585:20:10992:11027	8201912	1	True				
ANR	8203522	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_br		8201912	0		=			
ANR	8203523	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203524	Identifier	gen_opc_buf		8201912	0					
ANR	8203525	Identifier	op_index		8201912	1					
ANR	8203526	Identifier	INDEX_op_br		8201912	1					
ANR	8203527	ExpressionStatement	gen_args [ 0 ] = args [ 3 ]	587:20:11050:11071	8201912	2	True				
ANR	8203528	AssignmentExpression	gen_args [ 0 ] = args [ 3 ]		8201912	0		=			
ANR	8203529	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203530	Identifier	gen_args		8201912	0					
ANR	8203531	PrimaryExpression	0		8201912	1					
ANR	8203532	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8203533	Identifier	args		8201912	0					
ANR	8203534	PrimaryExpression	3		8201912	1					
ANR	8203535	ExpressionStatement	gen_args += 1	589:20:11094:11107	8201912	3	True				
ANR	8203536	AssignmentExpression	gen_args += 1		8201912	0		+=			
ANR	8203537	Identifier	gen_args		8201912	0					
ANR	8203538	PrimaryExpression	1		8201912	1					
ANR	8203539	ElseStatement	else		8201912	0					
ANR	8203540	CompoundStatement		587:23:10983:10983	8201912	0					
ANR	8203541	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_nop	593:20:11156:11192	8201912	0	True				
ANR	8203542	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_nop		8201912	0		=			
ANR	8203543	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203544	Identifier	gen_opc_buf		8201912	0					
ANR	8203545	Identifier	op_index		8201912	1					
ANR	8203546	Identifier	INDEX_op_nop		8201912	1					
ANR	8203547	ElseStatement	else		8201912	0					
ANR	8203548	CompoundStatement		593:19:11083:11083	8201912	0					
ANR	8203549	ExpressionStatement	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"	599:16:11252:11309	8201912	0	True				
ANR	8203550	CallExpression	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"		8201912	0					
ANR	8203551	Callee	memset		8201912	0					
ANR	8203552	Identifier	memset		8201912	0					
ANR	8203553	ArgumentList	temps		8201912	1					
ANR	8203554	Argument	temps		8201912	0					
ANR	8203555	Identifier	temps		8201912	0					
ANR	8203556	Argument	0		8201912	1					
ANR	8203557	PrimaryExpression	0		8201912	0					
ANR	8203558	Argument	nb_temps * sizeof ( struct tcg_temp_info )		8201912	2					
ANR	8203559	MultiplicativeExpression	nb_temps * sizeof ( struct tcg_temp_info )		8201912	0		*			
ANR	8203560	Identifier	nb_temps		8201912	0					
ANR	8203561	SizeofExpression	sizeof ( struct tcg_temp_info )		8201912	1					
ANR	8203562	Sizeof	sizeof		8201912	0					
ANR	8203563	SizeofOperand	struct tcg_temp_info		8201912	1					
ANR	8203564	ExpressionStatement	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"	601:16:11328:11369	8201912	1	True				
ANR	8203565	CallExpression	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203566	Callee	reset_temp		8201912	0					
ANR	8203567	Identifier	reset_temp		8201912	0					
ANR	8203568	ArgumentList	args [ 0 ]		8201912	1					
ANR	8203569	Argument	args [ 0 ]		8201912	0					
ANR	8203570	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203571	Identifier	args		8201912	0					
ANR	8203572	PrimaryExpression	0		8201912	1					
ANR	8203573	Argument	nb_temps		8201912	1					
ANR	8203574	Identifier	nb_temps		8201912	0					
ANR	8203575	Argument	nb_globals		8201912	2					
ANR	8203576	Identifier	nb_globals		8201912	0					
ANR	8203577	ExpressionStatement	gen_args [ 0 ] = args [ 0 ]	603:16:11388:11409	8201912	2	True				
ANR	8203578	AssignmentExpression	gen_args [ 0 ] = args [ 0 ]		8201912	0		=			
ANR	8203579	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203580	Identifier	gen_args		8201912	0					
ANR	8203581	PrimaryExpression	0		8201912	1					
ANR	8203582	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203583	Identifier	args		8201912	0					
ANR	8203584	PrimaryExpression	0		8201912	1					
ANR	8203585	ExpressionStatement	gen_args [ 1 ] = args [ 1 ]	605:16:11428:11449	8201912	3	True				
ANR	8203586	AssignmentExpression	gen_args [ 1 ] = args [ 1 ]		8201912	0		=			
ANR	8203587	ArrayIndexing	gen_args [ 1 ]		8201912	0					
ANR	8203588	Identifier	gen_args		8201912	0					
ANR	8203589	PrimaryExpression	1		8201912	1					
ANR	8203590	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203591	Identifier	args		8201912	0					
ANR	8203592	PrimaryExpression	1		8201912	1					
ANR	8203593	ExpressionStatement	gen_args [ 2 ] = args [ 2 ]	607:16:11468:11489	8201912	4	True				
ANR	8203594	AssignmentExpression	gen_args [ 2 ] = args [ 2 ]		8201912	0		=			
ANR	8203595	ArrayIndexing	gen_args [ 2 ]		8201912	0					
ANR	8203596	Identifier	gen_args		8201912	0					
ANR	8203597	PrimaryExpression	2		8201912	1					
ANR	8203598	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203599	Identifier	args		8201912	0					
ANR	8203600	PrimaryExpression	2		8201912	1					
ANR	8203601	ExpressionStatement	gen_args [ 3 ] = args [ 3 ]	609:16:11508:11529	8201912	5	True				
ANR	8203602	AssignmentExpression	gen_args [ 3 ] = args [ 3 ]		8201912	0		=			
ANR	8203603	ArrayIndexing	gen_args [ 3 ]		8201912	0					
ANR	8203604	Identifier	gen_args		8201912	0					
ANR	8203605	PrimaryExpression	3		8201912	1					
ANR	8203606	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8203607	Identifier	args		8201912	0					
ANR	8203608	PrimaryExpression	3		8201912	1					
ANR	8203609	ExpressionStatement	gen_args += 4	611:16:11548:11561	8201912	6	True				
ANR	8203610	AssignmentExpression	gen_args += 4		8201912	0		+=			
ANR	8203611	Identifier	gen_args		8201912	0					
ANR	8203612	PrimaryExpression	4		8201912	1					
ANR	8203613	ExpressionStatement	args += 4	615:12:11591:11600	8201912	152	True				
ANR	8203614	AssignmentExpression	args += 4		8201912	0		+=			
ANR	8203615	Identifier	args		8201912	0					
ANR	8203616	PrimaryExpression	4		8201912	1					
ANR	8203617	BreakStatement	break ;	617:12:11615:11620	8201912	153	True				
ANR	8203618	Statement	CASE_OP_32_64	619:8:11631:11643	8201912	154	True				
ANR	8203619	Statement	(	619:21:11644:11644	8201912	155	True				
ANR	8203620	Statement	movcond	619:22:11645:11651	8201912	156	True				
ANR	8203621	Statement	)	619:29:11652:11652	8201912	157	True				
ANR	8203622	Statement	:	619:30:11653:11653	8201912	158	True				
ANR	8203623	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8201912	159					
ANR	8203624	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	621:16:11672:11768	8201912	0	True				
ANR	8203625	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	0		&&			
ANR	8203626	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203627	MemberAccess	temps [ args [ 1 ] ] . state		8201912	0					
ANR	8203628	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203629	Identifier	temps		8201912	0					
ANR	8203630	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203631	Identifier	args		8201912	0					
ANR	8203632	PrimaryExpression	1		8201912	1					
ANR	8203633	Identifier	state		8201912	1					
ANR	8203634	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203635	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8201912	1		==			
ANR	8203636	MemberAccess	temps [ args [ 2 ] ] . state		8201912	0					
ANR	8203637	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203638	Identifier	temps		8201912	0					
ANR	8203639	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203640	Identifier	args		8201912	0					
ANR	8203641	PrimaryExpression	2		8201912	1					
ANR	8203642	Identifier	state		8201912	1					
ANR	8203643	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203644	CompoundStatement		619:59:11621:11621	8201912	1					
ANR	8203645	ExpressionStatement	"tmp = do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 5 ] )"	625:16:11790:11921	8201912	0	True				
ANR	8203646	AssignmentExpression	"tmp = do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 5 ] )"		8201912	0		=			
ANR	8203647	Identifier	tmp		8201912	0					
ANR	8203648	CallExpression	"do_constant_folding_cond ( op , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val , args [ 5 ] )"		8201912	1					
ANR	8203649	Callee	do_constant_folding_cond		8201912	0					
ANR	8203650	Identifier	do_constant_folding_cond		8201912	0					
ANR	8203651	ArgumentList	op		8201912	1					
ANR	8203652	Argument	op		8201912	0					
ANR	8203653	Identifier	op		8201912	0					
ANR	8203654	Argument	temps [ args [ 1 ] ] . val		8201912	1					
ANR	8203655	MemberAccess	temps [ args [ 1 ] ] . val		8201912	0					
ANR	8203656	ArrayIndexing	temps [ args [ 1 ] ]		8201912	0					
ANR	8203657	Identifier	temps		8201912	0					
ANR	8203658	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203659	Identifier	args		8201912	0					
ANR	8203660	PrimaryExpression	1		8201912	1					
ANR	8203661	Identifier	val		8201912	1					
ANR	8203662	Argument	temps [ args [ 2 ] ] . val		8201912	2					
ANR	8203663	MemberAccess	temps [ args [ 2 ] ] . val		8201912	0					
ANR	8203664	ArrayIndexing	temps [ args [ 2 ] ]		8201912	0					
ANR	8203665	Identifier	temps		8201912	0					
ANR	8203666	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203667	Identifier	args		8201912	0					
ANR	8203668	PrimaryExpression	2		8201912	1					
ANR	8203669	Identifier	val		8201912	1					
ANR	8203670	Argument	args [ 5 ]		8201912	3					
ANR	8203671	ArrayIndexing	args [ 5 ]		8201912	0					
ANR	8203672	Identifier	args		8201912	0					
ANR	8203673	PrimaryExpression	5		8201912	1					
ANR	8203674	IfStatement	if ( args [ 0 ] == args [ 4 - tmp ] || ( temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_COPY && temps [ args [ 4 - tmp ] ] . val == args [ 0 ] ) )		8201912	1					
ANR	8203675	Condition	args [ 0 ] == args [ 4 - tmp ] || ( temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_COPY && temps [ args [ 4 - tmp ] ] . val == args [ 0 ] )	629:20:11944:12095	8201912	0	True				
ANR	8203676	OrExpression	args [ 0 ] == args [ 4 - tmp ] || ( temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_COPY && temps [ args [ 4 - tmp ] ] . val == args [ 0 ] )		8201912	0		||			
ANR	8203677	EqualityExpression	args [ 0 ] == args [ 4 - tmp ]		8201912	0		==			
ANR	8203678	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203679	Identifier	args		8201912	0					
ANR	8203680	PrimaryExpression	0		8201912	1					
ANR	8203681	ArrayIndexing	args [ 4 - tmp ]		8201912	1					
ANR	8203682	Identifier	args		8201912	0					
ANR	8203683	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203684	PrimaryExpression	4		8201912	0					
ANR	8203685	Identifier	tmp		8201912	1					
ANR	8203686	AndExpression	temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_COPY && temps [ args [ 4 - tmp ] ] . val == args [ 0 ]		8201912	1		&&			
ANR	8203687	EqualityExpression	temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_COPY		8201912	0		==			
ANR	8203688	MemberAccess	temps [ args [ 4 - tmp ] ] . state		8201912	0					
ANR	8203689	ArrayIndexing	temps [ args [ 4 - tmp ] ]		8201912	0					
ANR	8203690	Identifier	temps		8201912	0					
ANR	8203691	ArrayIndexing	args [ 4 - tmp ]		8201912	1					
ANR	8203692	Identifier	args		8201912	0					
ANR	8203693	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203694	PrimaryExpression	4		8201912	0					
ANR	8203695	Identifier	tmp		8201912	1					
ANR	8203696	Identifier	state		8201912	1					
ANR	8203697	Identifier	TCG_TEMP_COPY		8201912	1					
ANR	8203698	EqualityExpression	temps [ args [ 4 - tmp ] ] . val == args [ 0 ]		8201912	1		==			
ANR	8203699	MemberAccess	temps [ args [ 4 - tmp ] ] . val		8201912	0					
ANR	8203700	ArrayIndexing	temps [ args [ 4 - tmp ] ]		8201912	0					
ANR	8203701	Identifier	temps		8201912	0					
ANR	8203702	ArrayIndexing	args [ 4 - tmp ]		8201912	1					
ANR	8203703	Identifier	args		8201912	0					
ANR	8203704	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203705	PrimaryExpression	4		8201912	0					
ANR	8203706	Identifier	tmp		8201912	1					
ANR	8203707	Identifier	val		8201912	1					
ANR	8203708	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203709	Identifier	args		8201912	0					
ANR	8203710	PrimaryExpression	0		8201912	1					
ANR	8203711	CompoundStatement		629:63:11948:11948	8201912	1					
ANR	8203712	ExpressionStatement	gen_opc_buf [ op_index ] = INDEX_op_nop	635:20:12121:12157	8201912	0	True				
ANR	8203713	AssignmentExpression	gen_opc_buf [ op_index ] = INDEX_op_nop		8201912	0		=			
ANR	8203714	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203715	Identifier	gen_opc_buf		8201912	0					
ANR	8203716	Identifier	op_index		8201912	1					
ANR	8203717	Identifier	INDEX_op_nop		8201912	1					
ANR	8203718	ElseStatement	else		8201912	0					
ANR	8203719	IfStatement	if ( temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_CONST )		8201912	0					
ANR	8203720	Condition	temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_CONST	637:27:12187:12228	8201912	0	True				
ANR	8203721	EqualityExpression	temps [ args [ 4 - tmp ] ] . state == TCG_TEMP_CONST		8201912	0		==			
ANR	8203722	MemberAccess	temps [ args [ 4 - tmp ] ] . state		8201912	0					
ANR	8203723	ArrayIndexing	temps [ args [ 4 - tmp ] ]		8201912	0					
ANR	8203724	Identifier	temps		8201912	0					
ANR	8203725	ArrayIndexing	args [ 4 - tmp ]		8201912	1					
ANR	8203726	Identifier	args		8201912	0					
ANR	8203727	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203728	PrimaryExpression	4		8201912	0					
ANR	8203729	Identifier	tmp		8201912	1					
ANR	8203730	Identifier	state		8201912	1					
ANR	8203731	Identifier	TCG_TEMP_CONST		8201912	1					
ANR	8203732	CompoundStatement		633:71:12081:12081	8201912	1					
ANR	8203733	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_movi ( op )	639:20:12254:12292	8201912	0	True				
ANR	8203734	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_movi ( op )		8201912	0		=			
ANR	8203735	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203736	Identifier	gen_opc_buf		8201912	0					
ANR	8203737	Identifier	op_index		8201912	1					
ANR	8203738	CallExpression	op_to_movi ( op )		8201912	1					
ANR	8203739	Callee	op_to_movi		8201912	0					
ANR	8203740	Identifier	op_to_movi		8201912	0					
ANR	8203741	ArgumentList	op		8201912	1					
ANR	8203742	Argument	op		8201912	0					
ANR	8203743	Identifier	op		8201912	0					
ANR	8203744	ExpressionStatement	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , temps [ args [ 4 - tmp ] ] . val , nb_temps , nb_globals )"	641:20:12315:12434	8201912	1	True				
ANR	8203745	CallExpression	"tcg_opt_gen_movi ( gen_args , args [ 0 ] , temps [ args [ 4 - tmp ] ] . val , nb_temps , nb_globals )"		8201912	0					
ANR	8203746	Callee	tcg_opt_gen_movi		8201912	0					
ANR	8203747	Identifier	tcg_opt_gen_movi		8201912	0					
ANR	8203748	ArgumentList	gen_args		8201912	1					
ANR	8203749	Argument	gen_args		8201912	0					
ANR	8203750	Identifier	gen_args		8201912	0					
ANR	8203751	Argument	args [ 0 ]		8201912	1					
ANR	8203752	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203753	Identifier	args		8201912	0					
ANR	8203754	PrimaryExpression	0		8201912	1					
ANR	8203755	Argument	temps [ args [ 4 - tmp ] ] . val		8201912	2					
ANR	8203756	MemberAccess	temps [ args [ 4 - tmp ] ] . val		8201912	0					
ANR	8203757	ArrayIndexing	temps [ args [ 4 - tmp ] ]		8201912	0					
ANR	8203758	Identifier	temps		8201912	0					
ANR	8203759	ArrayIndexing	args [ 4 - tmp ]		8201912	1					
ANR	8203760	Identifier	args		8201912	0					
ANR	8203761	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203762	PrimaryExpression	4		8201912	0					
ANR	8203763	Identifier	tmp		8201912	1					
ANR	8203764	Identifier	val		8201912	1					
ANR	8203765	Argument	nb_temps		8201912	3					
ANR	8203766	Identifier	nb_temps		8201912	0					
ANR	8203767	Argument	nb_globals		8201912	4					
ANR	8203768	Identifier	nb_globals		8201912	0					
ANR	8203769	ExpressionStatement	gen_args += 2	645:20:12457:12470	8201912	2	True				
ANR	8203770	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8203771	Identifier	gen_args		8201912	0					
ANR	8203772	PrimaryExpression	2		8201912	1					
ANR	8203773	ElseStatement	else		8201912	0					
ANR	8203774	CompoundStatement		643:23:12346:12346	8201912	0					
ANR	8203775	ExpressionStatement	gen_opc_buf [ op_index ] = op_to_mov ( op )	649:20:12519:12556	8201912	0	True				
ANR	8203776	AssignmentExpression	gen_opc_buf [ op_index ] = op_to_mov ( op )		8201912	0		=			
ANR	8203777	ArrayIndexing	gen_opc_buf [ op_index ]		8201912	0					
ANR	8203778	Identifier	gen_opc_buf		8201912	0					
ANR	8203779	Identifier	op_index		8201912	1					
ANR	8203780	CallExpression	op_to_mov ( op )		8201912	1					
ANR	8203781	Callee	op_to_mov		8201912	0					
ANR	8203782	Identifier	op_to_mov		8201912	0					
ANR	8203783	ArgumentList	op		8201912	1					
ANR	8203784	Argument	op		8201912	0					
ANR	8203785	Identifier	op		8201912	0					
ANR	8203786	ExpressionStatement	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 4 - tmp ] , nb_temps , nb_globals )"	651:20:12579:12685	8201912	1	True				
ANR	8203787	CallExpression	"tcg_opt_gen_mov ( gen_args , args [ 0 ] , args [ 4 - tmp ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203788	Callee	tcg_opt_gen_mov		8201912	0					
ANR	8203789	Identifier	tcg_opt_gen_mov		8201912	0					
ANR	8203790	ArgumentList	gen_args		8201912	1					
ANR	8203791	Argument	gen_args		8201912	0					
ANR	8203792	Identifier	gen_args		8201912	0					
ANR	8203793	Argument	args [ 0 ]		8201912	1					
ANR	8203794	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203795	Identifier	args		8201912	0					
ANR	8203796	PrimaryExpression	0		8201912	1					
ANR	8203797	Argument	args [ 4 - tmp ]		8201912	2					
ANR	8203798	ArrayIndexing	args [ 4 - tmp ]		8201912	0					
ANR	8203799	Identifier	args		8201912	0					
ANR	8203800	AdditiveExpression	4 - tmp		8201912	1		-			
ANR	8203801	PrimaryExpression	4		8201912	0					
ANR	8203802	Identifier	tmp		8201912	1					
ANR	8203803	Argument	nb_temps		8201912	3					
ANR	8203804	Identifier	nb_temps		8201912	0					
ANR	8203805	Argument	nb_globals		8201912	4					
ANR	8203806	Identifier	nb_globals		8201912	0					
ANR	8203807	ExpressionStatement	gen_args += 2	655:20:12708:12721	8201912	2	True				
ANR	8203808	AssignmentExpression	gen_args += 2		8201912	0		+=			
ANR	8203809	Identifier	gen_args		8201912	0					
ANR	8203810	PrimaryExpression	2		8201912	1					
ANR	8203811	ElseStatement	else		8201912	0					
ANR	8203812	CompoundStatement		655:19:12612:12612	8201912	0					
ANR	8203813	ExpressionStatement	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"	661:16:12781:12822	8201912	0	True				
ANR	8203814	CallExpression	"reset_temp ( args [ 0 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203815	Callee	reset_temp		8201912	0					
ANR	8203816	Identifier	reset_temp		8201912	0					
ANR	8203817	ArgumentList	args [ 0 ]		8201912	1					
ANR	8203818	Argument	args [ 0 ]		8201912	0					
ANR	8203819	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203820	Identifier	args		8201912	0					
ANR	8203821	PrimaryExpression	0		8201912	1					
ANR	8203822	Argument	nb_temps		8201912	1					
ANR	8203823	Identifier	nb_temps		8201912	0					
ANR	8203824	Argument	nb_globals		8201912	2					
ANR	8203825	Identifier	nb_globals		8201912	0					
ANR	8203826	ExpressionStatement	gen_args [ 0 ] = args [ 0 ]	663:16:12841:12862	8201912	1	True				
ANR	8203827	AssignmentExpression	gen_args [ 0 ] = args [ 0 ]		8201912	0		=			
ANR	8203828	ArrayIndexing	gen_args [ 0 ]		8201912	0					
ANR	8203829	Identifier	gen_args		8201912	0					
ANR	8203830	PrimaryExpression	0		8201912	1					
ANR	8203831	ArrayIndexing	args [ 0 ]		8201912	1					
ANR	8203832	Identifier	args		8201912	0					
ANR	8203833	PrimaryExpression	0		8201912	1					
ANR	8203834	ExpressionStatement	gen_args [ 1 ] = args [ 1 ]	665:16:12881:12902	8201912	2	True				
ANR	8203835	AssignmentExpression	gen_args [ 1 ] = args [ 1 ]		8201912	0		=			
ANR	8203836	ArrayIndexing	gen_args [ 1 ]		8201912	0					
ANR	8203837	Identifier	gen_args		8201912	0					
ANR	8203838	PrimaryExpression	1		8201912	1					
ANR	8203839	ArrayIndexing	args [ 1 ]		8201912	1					
ANR	8203840	Identifier	args		8201912	0					
ANR	8203841	PrimaryExpression	1		8201912	1					
ANR	8203842	ExpressionStatement	gen_args [ 2 ] = args [ 2 ]	667:16:12921:12942	8201912	3	True				
ANR	8203843	AssignmentExpression	gen_args [ 2 ] = args [ 2 ]		8201912	0		=			
ANR	8203844	ArrayIndexing	gen_args [ 2 ]		8201912	0					
ANR	8203845	Identifier	gen_args		8201912	0					
ANR	8203846	PrimaryExpression	2		8201912	1					
ANR	8203847	ArrayIndexing	args [ 2 ]		8201912	1					
ANR	8203848	Identifier	args		8201912	0					
ANR	8203849	PrimaryExpression	2		8201912	1					
ANR	8203850	ExpressionStatement	gen_args [ 3 ] = args [ 3 ]	669:16:12961:12982	8201912	4	True				
ANR	8203851	AssignmentExpression	gen_args [ 3 ] = args [ 3 ]		8201912	0		=			
ANR	8203852	ArrayIndexing	gen_args [ 3 ]		8201912	0					
ANR	8203853	Identifier	gen_args		8201912	0					
ANR	8203854	PrimaryExpression	3		8201912	1					
ANR	8203855	ArrayIndexing	args [ 3 ]		8201912	1					
ANR	8203856	Identifier	args		8201912	0					
ANR	8203857	PrimaryExpression	3		8201912	1					
ANR	8203858	ExpressionStatement	gen_args [ 4 ] = args [ 4 ]	671:16:13001:13022	8201912	5	True				
ANR	8203859	AssignmentExpression	gen_args [ 4 ] = args [ 4 ]		8201912	0		=			
ANR	8203860	ArrayIndexing	gen_args [ 4 ]		8201912	0					
ANR	8203861	Identifier	gen_args		8201912	0					
ANR	8203862	PrimaryExpression	4		8201912	1					
ANR	8203863	ArrayIndexing	args [ 4 ]		8201912	1					
ANR	8203864	Identifier	args		8201912	0					
ANR	8203865	PrimaryExpression	4		8201912	1					
ANR	8203866	ExpressionStatement	gen_args [ 5 ] = args [ 5 ]	673:16:13041:13062	8201912	6	True				
ANR	8203867	AssignmentExpression	gen_args [ 5 ] = args [ 5 ]		8201912	0		=			
ANR	8203868	ArrayIndexing	gen_args [ 5 ]		8201912	0					
ANR	8203869	Identifier	gen_args		8201912	0					
ANR	8203870	PrimaryExpression	5		8201912	1					
ANR	8203871	ArrayIndexing	args [ 5 ]		8201912	1					
ANR	8203872	Identifier	args		8201912	0					
ANR	8203873	PrimaryExpression	5		8201912	1					
ANR	8203874	ExpressionStatement	gen_args += 6	675:16:13081:13094	8201912	7	True				
ANR	8203875	AssignmentExpression	gen_args += 6		8201912	0		+=			
ANR	8203876	Identifier	gen_args		8201912	0					
ANR	8203877	PrimaryExpression	6		8201912	1					
ANR	8203878	ExpressionStatement	args += 6	679:12:13124:13133	8201912	160	True				
ANR	8203879	AssignmentExpression	args += 6		8201912	0		+=			
ANR	8203880	Identifier	args		8201912	0					
ANR	8203881	PrimaryExpression	6		8201912	1					
ANR	8203882	BreakStatement	break ;	681:12:13148:13153	8201912	161	True				
ANR	8203883	Label	case INDEX_op_call :	683:8:13164:13182	8201912	162	True				
ANR	8203884	Identifier	INDEX_op_call		8201912	0					
ANR	8203885	ExpressionStatement	nb_call_args = ( args [ 0 ] >> 16 ) + ( args [ 0 ] & 0xffff )	685:12:13197:13248	8201912	163	True				
ANR	8203886	AssignmentExpression	nb_call_args = ( args [ 0 ] >> 16 ) + ( args [ 0 ] & 0xffff )		8201912	0		=			
ANR	8203887	Identifier	nb_call_args		8201912	0					
ANR	8203888	AdditiveExpression	( args [ 0 ] >> 16 ) + ( args [ 0 ] & 0xffff )		8201912	1		+			
ANR	8203889	ShiftExpression	args [ 0 ] >> 16		8201912	0		>>			
ANR	8203890	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203891	Identifier	args		8201912	0					
ANR	8203892	PrimaryExpression	0		8201912	1					
ANR	8203893	PrimaryExpression	16		8201912	1					
ANR	8203894	BitAndExpression	args [ 0 ] & 0xffff		8201912	1		&			
ANR	8203895	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203896	Identifier	args		8201912	0					
ANR	8203897	PrimaryExpression	0		8201912	1					
ANR	8203898	PrimaryExpression	0xffff		8201912	1					
ANR	8203899	IfStatement	if ( ! ( args [ nb_call_args + 1 ] & ( TCG_CALL_CONST | TCG_CALL_PURE ) ) )		8201912	164					
ANR	8203900	Condition	! ( args [ nb_call_args + 1 ] & ( TCG_CALL_CONST | TCG_CALL_PURE ) )	687:16:13267:13326	8201912	0	True				
ANR	8203901	UnaryOperationExpression	! ( args [ nb_call_args + 1 ] & ( TCG_CALL_CONST | TCG_CALL_PURE ) )		8201912	0					
ANR	8203902	UnaryOperator	!		8201912	0					
ANR	8203903	BitAndExpression	args [ nb_call_args + 1 ] & ( TCG_CALL_CONST | TCG_CALL_PURE )		8201912	1		&			
ANR	8203904	ArrayIndexing	args [ nb_call_args + 1 ]		8201912	0					
ANR	8203905	Identifier	args		8201912	0					
ANR	8203906	AdditiveExpression	nb_call_args + 1		8201912	1		+			
ANR	8203907	Identifier	nb_call_args		8201912	0					
ANR	8203908	PrimaryExpression	1		8201912	1					
ANR	8203909	InclusiveOrExpression	TCG_CALL_CONST | TCG_CALL_PURE		8201912	1		|			
ANR	8203910	Identifier	TCG_CALL_CONST		8201912	0					
ANR	8203911	Identifier	TCG_CALL_PURE		8201912	1					
ANR	8203912	CompoundStatement		683:78:13179:13179	8201912	1					
ANR	8203913	ForStatement	for ( i = 0 ; i < nb_globals ; i ++ )		8201912	0					
ANR	8203914	ForInit	i = 0 ;	689:21:13353:13358	8201912	0	True				
ANR	8203915	AssignmentExpression	i = 0		8201912	0		=			
ANR	8203916	Identifier	i		8201912	0					
ANR	8203917	PrimaryExpression	0		8201912	1					
ANR	8203918	Condition	i < nb_globals	689:28:13360:13373	8201912	1	True				
ANR	8203919	RelationalExpression	i < nb_globals		8201912	0		<			
ANR	8203920	Identifier	i		8201912	0					
ANR	8203921	Identifier	nb_globals		8201912	1					
ANR	8203922	PostIncDecOperationExpression	i ++	689:44:13376:13378	8201912	2	True				
ANR	8203923	Identifier	i		8201912	0					
ANR	8203924	IncDec	++		8201912	1					
ANR	8203925	CompoundStatement		685:49:13231:13231	8201912	3					
ANR	8203926	ExpressionStatement	"reset_temp ( i , nb_temps , nb_globals )"	691:20:13404:13439	8201912	0	True				
ANR	8203927	CallExpression	"reset_temp ( i , nb_temps , nb_globals )"		8201912	0					
ANR	8203928	Callee	reset_temp		8201912	0					
ANR	8203929	Identifier	reset_temp		8201912	0					
ANR	8203930	ArgumentList	i		8201912	1					
ANR	8203931	Argument	i		8201912	0					
ANR	8203932	Identifier	i		8201912	0					
ANR	8203933	Argument	nb_temps		8201912	1					
ANR	8203934	Identifier	nb_temps		8201912	0					
ANR	8203935	Argument	nb_globals		8201912	2					
ANR	8203936	Identifier	nb_globals		8201912	0					
ANR	8203937	ForStatement	for ( i = 0 ; i < ( args [ 0 ] >> 16 ) ; i ++ )		8201912	165					
ANR	8203938	ForInit	i = 0 ;	697:17:13493:13498	8201912	0	True				
ANR	8203939	AssignmentExpression	i = 0		8201912	0		=			
ANR	8203940	Identifier	i		8201912	0					
ANR	8203941	PrimaryExpression	0		8201912	1					
ANR	8203942	Condition	i < ( args [ 0 ] >> 16 )	697:24:13500:13518	8201912	1	True				
ANR	8203943	RelationalExpression	i < ( args [ 0 ] >> 16 )		8201912	0		<			
ANR	8203944	Identifier	i		8201912	0					
ANR	8203945	ShiftExpression	args [ 0 ] >> 16		8201912	1		>>			
ANR	8203946	ArrayIndexing	args [ 0 ]		8201912	0					
ANR	8203947	Identifier	args		8201912	0					
ANR	8203948	PrimaryExpression	0		8201912	1					
ANR	8203949	PrimaryExpression	16		8201912	1					
ANR	8203950	PostIncDecOperationExpression	i ++	697:45:13521:13523	8201912	2	True				
ANR	8203951	Identifier	i		8201912	0					
ANR	8203952	IncDec	++		8201912	1					
ANR	8203953	CompoundStatement		693:50:13376:13376	8201912	3					
ANR	8203954	ExpressionStatement	"reset_temp ( args [ i + 1 ] , nb_temps , nb_globals )"	699:16:13545:13590	8201912	0	True				
ANR	8203955	CallExpression	"reset_temp ( args [ i + 1 ] , nb_temps , nb_globals )"		8201912	0					
ANR	8203956	Callee	reset_temp		8201912	0					
ANR	8203957	Identifier	reset_temp		8201912	0					
ANR	8203958	ArgumentList	args [ i + 1 ]		8201912	1					
ANR	8203959	Argument	args [ i + 1 ]		8201912	0					
ANR	8203960	ArrayIndexing	args [ i + 1 ]		8201912	0					
ANR	8203961	Identifier	args		8201912	0					
ANR	8203962	AdditiveExpression	i + 1		8201912	1		+			
ANR	8203963	Identifier	i		8201912	0					
ANR	8203964	PrimaryExpression	1		8201912	1					
ANR	8203965	Argument	nb_temps		8201912	1					
ANR	8203966	Identifier	nb_temps		8201912	0					
ANR	8203967	Argument	nb_globals		8201912	2					
ANR	8203968	Identifier	nb_globals		8201912	0					
ANR	8203969	ExpressionStatement	i = nb_call_args + 3	703:12:13620:13640	8201912	166	True				
ANR	8203970	AssignmentExpression	i = nb_call_args + 3		8201912	0		=			
ANR	8203971	Identifier	i		8201912	0					
ANR	8203972	AdditiveExpression	nb_call_args + 3		8201912	1		+			
ANR	8203973	Identifier	nb_call_args		8201912	0					
ANR	8203974	PrimaryExpression	3		8201912	1					
ANR	8203975	WhileStatement	while ( i )		8201912	167					
ANR	8203976	Condition	i	705:19:13662:13662	8201912	0	True				
ANR	8203977	Identifier	i		8201912	0					
ANR	8203978	CompoundStatement		701:22:13515:13515	8201912	1					
ANR	8203979	ExpressionStatement	* gen_args = * args	707:16:13684:13701	8201912	0	True				
ANR	8203980	AssignmentExpression	* gen_args = * args		8201912	0		=			
ANR	8203981	UnaryOperationExpression	* gen_args		8201912	0					
ANR	8203982	UnaryOperator	*		8201912	0					
ANR	8203983	Identifier	gen_args		8201912	1					
ANR	8203984	UnaryOperationExpression	* args		8201912	1					
ANR	8203985	UnaryOperator	*		8201912	0					
ANR	8203986	Identifier	args		8201912	1					
ANR	8203987	ExpressionStatement	args ++	709:16:13720:13726	8201912	1	True				
ANR	8203988	PostIncDecOperationExpression	args ++		8201912	0					
ANR	8203989	Identifier	args		8201912	0					
ANR	8203990	IncDec	++		8201912	1					
ANR	8203991	ExpressionStatement	gen_args ++	711:16:13745:13755	8201912	2	True				
ANR	8203992	PostIncDecOperationExpression	gen_args ++		8201912	0					
ANR	8203993	Identifier	gen_args		8201912	0					
ANR	8203994	IncDec	++		8201912	1					
ANR	8203995	ExpressionStatement	i --	713:16:13774:13777	8201912	3	True				
ANR	8203996	PostIncDecOperationExpression	i --		8201912	0					
ANR	8203997	Identifier	i		8201912	0					
ANR	8203998	IncDec	--		8201912	1					
ANR	8203999	BreakStatement	break ;	717:12:13807:13812	8201912	168	True				
ANR	8204000	Label	default :	719:8:13823:13830	8201912	169	True				
ANR	8204001	Identifier	default		8201912	0					
ANR	8204002	IfStatement	if ( def -> flags & TCG_OPF_BB_END )		8201912	170					
ANR	8204003	Condition	def -> flags & TCG_OPF_BB_END	729:16:14101:14127	8201912	0	True				
ANR	8204004	BitAndExpression	def -> flags & TCG_OPF_BB_END		8201912	0		&			
ANR	8204005	PtrMemberAccess	def -> flags		8201912	0					
ANR	8204006	Identifier	def		8201912	0					
ANR	8204007	Identifier	flags		8201912	1					
ANR	8204008	Identifier	TCG_OPF_BB_END		8201912	1					
ANR	8204009	CompoundStatement		725:45:13980:13980	8201912	1					
ANR	8204010	ExpressionStatement	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"	731:16:14149:14206	8201912	0	True				
ANR	8204011	CallExpression	"memset ( temps , 0 , nb_temps * sizeof ( struct tcg_temp_info ) )"		8201912	0					
ANR	8204012	Callee	memset		8201912	0					
ANR	8204013	Identifier	memset		8201912	0					
ANR	8204014	ArgumentList	temps		8201912	1					
ANR	8204015	Argument	temps		8201912	0					
ANR	8204016	Identifier	temps		8201912	0					
ANR	8204017	Argument	0		8201912	1					
ANR	8204018	PrimaryExpression	0		8201912	0					
ANR	8204019	Argument	nb_temps * sizeof ( struct tcg_temp_info )		8201912	2					
ANR	8204020	MultiplicativeExpression	nb_temps * sizeof ( struct tcg_temp_info )		8201912	0		*			
ANR	8204021	Identifier	nb_temps		8201912	0					
ANR	8204022	SizeofExpression	sizeof ( struct tcg_temp_info )		8201912	1					
ANR	8204023	Sizeof	sizeof		8201912	0					
ANR	8204024	SizeofOperand	struct tcg_temp_info		8201912	1					
ANR	8204025	ElseStatement	else		8201912	0					
ANR	8204026	CompoundStatement		729:19:14078:14078	8201912	0					
ANR	8204027	ForStatement	for ( i = 0 ; i < def -> nb_oargs ; i ++ )		8201912	0					
ANR	8204028	ForInit	i = 0 ;	735:21:14252:14257	8201912	0	True				
ANR	8204029	AssignmentExpression	i = 0		8201912	0		=			
ANR	8204030	Identifier	i		8201912	0					
ANR	8204031	PrimaryExpression	0		8201912	1					
ANR	8204032	Condition	i < def -> nb_oargs	735:28:14259:14275	8201912	1	True				
ANR	8204033	RelationalExpression	i < def -> nb_oargs		8201912	0		<			
ANR	8204034	Identifier	i		8201912	0					
ANR	8204035	PtrMemberAccess	def -> nb_oargs		8201912	1					
ANR	8204036	Identifier	def		8201912	0					
ANR	8204037	Identifier	nb_oargs		8201912	1					
ANR	8204038	PostIncDecOperationExpression	i ++	735:47:14278:14280	8201912	2	True				
ANR	8204039	Identifier	i		8201912	0					
ANR	8204040	IncDec	++		8201912	1					
ANR	8204041	CompoundStatement		731:52:14133:14133	8201912	3					
ANR	8204042	ExpressionStatement	"reset_temp ( args [ i ] , nb_temps , nb_globals )"	737:20:14306:14347	8201912	0	True				
ANR	8204043	CallExpression	"reset_temp ( args [ i ] , nb_temps , nb_globals )"		8201912	0					
ANR	8204044	Callee	reset_temp		8201912	0					
ANR	8204045	Identifier	reset_temp		8201912	0					
ANR	8204046	ArgumentList	args [ i ]		8201912	1					
ANR	8204047	Argument	args [ i ]		8201912	0					
ANR	8204048	ArrayIndexing	args [ i ]		8201912	0					
ANR	8204049	Identifier	args		8201912	0					
ANR	8204050	Identifier	i		8201912	1					
ANR	8204051	Argument	nb_temps		8201912	1					
ANR	8204052	Identifier	nb_temps		8201912	0					
ANR	8204053	Argument	nb_globals		8201912	2					
ANR	8204054	Identifier	nb_globals		8201912	0					
ANR	8204055	ForStatement	for ( i = 0 ; i < def -> nb_args ; i ++ )		8201912	171					
ANR	8204056	ForInit	i = 0 ;	743:17:14401:14406	8201912	0	True				
ANR	8204057	AssignmentExpression	i = 0		8201912	0		=			
ANR	8204058	Identifier	i		8201912	0					
ANR	8204059	PrimaryExpression	0		8201912	1					
ANR	8204060	Condition	i < def -> nb_args	743:24:14408:14423	8201912	1	True				
ANR	8204061	RelationalExpression	i < def -> nb_args		8201912	0		<			
ANR	8204062	Identifier	i		8201912	0					
ANR	8204063	PtrMemberAccess	def -> nb_args		8201912	1					
ANR	8204064	Identifier	def		8201912	0					
ANR	8204065	Identifier	nb_args		8201912	1					
ANR	8204066	PostIncDecOperationExpression	i ++	743:42:14426:14428	8201912	2	True				
ANR	8204067	Identifier	i		8201912	0					
ANR	8204068	IncDec	++		8201912	1					
ANR	8204069	CompoundStatement		739:47:14281:14281	8201912	3					
ANR	8204070	ExpressionStatement	gen_args [ i ] = args [ i ]	745:16:14450:14471	8201912	0	True				
ANR	8204071	AssignmentExpression	gen_args [ i ] = args [ i ]		8201912	0		=			
ANR	8204072	ArrayIndexing	gen_args [ i ]		8201912	0					
ANR	8204073	Identifier	gen_args		8201912	0					
ANR	8204074	Identifier	i		8201912	1					
ANR	8204075	ArrayIndexing	args [ i ]		8201912	1					
ANR	8204076	Identifier	args		8201912	0					
ANR	8204077	Identifier	i		8201912	1					
ANR	8204078	ExpressionStatement	args += def -> nb_args	749:12:14501:14521	8201912	172	True				
ANR	8204079	AssignmentExpression	args += def -> nb_args		8201912	0		+=			
ANR	8204080	Identifier	args		8201912	0					
ANR	8204081	PtrMemberAccess	def -> nb_args		8201912	1					
ANR	8204082	Identifier	def		8201912	0					
ANR	8204083	Identifier	nb_args		8201912	1					
ANR	8204084	ExpressionStatement	gen_args += def -> nb_args	751:12:14536:14560	8201912	173	True				
ANR	8204085	AssignmentExpression	gen_args += def -> nb_args		8201912	0		+=			
ANR	8204086	Identifier	gen_args		8201912	0					
ANR	8204087	PtrMemberAccess	def -> nb_args		8201912	1					
ANR	8204088	Identifier	def		8201912	0					
ANR	8204089	Identifier	nb_args		8201912	1					
ANR	8204090	BreakStatement	break ;	753:12:14575:14580	8201912	174	True				
ANR	8204091	ReturnStatement	return gen_args ;	761:4:14607:14622	8201912	12	True				
ANR	8204092	Identifier	gen_args		8201912	0					
ANR	8204093	ReturnType	static TCGArg *		8201912	1					
ANR	8204094	Identifier	tcg_constant_folding		8201912	2					
ANR	8204095	ParameterList	"TCGContext * s , uint16_t * tcg_opc_ptr , TCGArg * args , TCGOpDef * tcg_op_defs"		8201912	3					
ANR	8204096	Parameter	TCGContext * s	1:36:36:48	8201912	0	True				
ANR	8204097	ParameterType	TCGContext *		8201912	0					
ANR	8204098	Identifier	s		8201912	1					
ANR	8204099	Parameter	uint16_t * tcg_opc_ptr	1:51:51:71	8201912	1	True				
ANR	8204100	ParameterType	uint16_t *		8201912	0					
ANR	8204101	Identifier	tcg_opc_ptr		8201912	1					
ANR	8204102	Parameter	TCGArg * args	3:36:111:122	8201912	2	True				
ANR	8204103	ParameterType	TCGArg *		8201912	0					
ANR	8204104	Identifier	args		8201912	1					
ANR	8204105	Parameter	TCGOpDef * tcg_op_defs	3:50:125:145	8201912	3	True				
ANR	8204106	ParameterType	TCGOpDef *		8201912	0					
ANR	8204107	Identifier	tcg_op_defs		8201912	1					
ANR	8204108	CFGEntryNode	ENTRY		8201912		True				
ANR	8204109	CFGExitNode	EXIT		8201912		True				
ANR	8204110	Symbol	TCG_OPF_CALL_CLOBBER		8201912						
ANR	8204111	Symbol	def -> nb_oargs		8201912						
ANR	8204112	Symbol	def		8201912						
ANR	8204113	Symbol	* gen_args		8201912						
ANR	8204114	Symbol	op_index		8201912						
ANR	8204115	Symbol	cond		8201912						
ANR	8204116	Symbol	temps		8201912						
ANR	8204117	Symbol	* nb_call_args		8201912						
ANR	8204118	Symbol	* args		8201912						
ANR	8204119	Symbol	nb_call_args		8201912						
ANR	8204120	Symbol	tmp		8201912						
ANR	8204121	Symbol	INDEX_op_call		8201912						
ANR	8204122	Symbol	s -> nb_temps		8201912						
ANR	8204123	Symbol	* * args		8201912						
ANR	8204124	Symbol	temps [ args [ i ] ] . val		8201912						
ANR	8204125	Symbol	def -> flags		8201912						
ANR	8204126	Symbol	* * i		8201912						
ANR	8204127	Symbol	TCG_TEMP_CONST		8201912						
ANR	8204128	Symbol	tcg_swap_cond		8201912						
ANR	8204129	Symbol	* op_index		8201912						
ANR	8204130	Symbol	INDEX_op_br		8201912						
ANR	8204131	Symbol	temps [ args [ 4 - tmp ] ] . val		8201912						
ANR	8204132	Symbol	TCG_OPF_BB_END		8201912						
ANR	8204133	Symbol	nb_globals		8201912						
ANR	8204134	Symbol	temps [ args [ 2 ] ] . val		8201912						
ANR	8204135	Symbol	op_to_mov		8201912						
ANR	8204136	Symbol	tcg_op_defs		8201912						
ANR	8204137	Symbol	op_to_movi		8201912						
ANR	8204138	Symbol	do_constant_folding		8201912						
ANR	8204139	Symbol	* tmp		8201912						
ANR	8204140	Symbol	TCG_OPF_SIDE_EFFECTS		8201912						
ANR	8204141	Symbol	nb_temps		8201912						
ANR	8204142	Symbol	temps [ args [ 0 ] ] . state		8201912						
ANR	8204143	Symbol	* gen_opc_buf		8201912						
ANR	8204144	Symbol	temps [ args [ 1 ] ] . state		8201912						
ANR	8204145	Symbol	temps [ args [ 2 ] ] . state		8201912						
ANR	8204146	Symbol	* def		8201912						
ANR	8204147	Symbol	TCG_TEMP_COPY		8201912						
ANR	8204148	Symbol	tcg_opc_ptr		8201912						
ANR	8204149	Symbol	TCG_CALL_PURE		8201912						
ANR	8204150	Symbol	* temps		8201912						
ANR	8204151	Symbol	temps [ args [ 1 ] ] . val		8201912						
ANR	8204152	Symbol	gen_args		8201912						
ANR	8204153	Symbol	gen_opc_buf		8201912						
ANR	8204154	Symbol	nb_ops		8201912						
ANR	8204155	Symbol	op		8201912						
ANR	8204156	Symbol	i		8201912						
ANR	8204157	Symbol	* * tmp		8201912						
ANR	8204158	Symbol	temps [ args [ i ] ] . state		8201912						
ANR	8204159	Symbol	args		8201912						
ANR	8204160	Symbol	def -> nb_iargs		8201912						
ANR	8204161	Symbol	tcg_invert_cond		8201912						
ANR	8204162	Symbol	def -> nb_args		8201912						
ANR	8204163	Symbol	s -> nb_globals		8201912						
ANR	8204164	Symbol	s		8201912						
ANR	8204165	Symbol	* i		8201912						
ANR	8204166	Symbol	temps [ args [ 0 ] ] . val		8201912						
ANR	8204167	Symbol	do_constant_folding_cond		8201912						
ANR	8204168	Symbol	TCG_CALL_CONST		8201912						
ANR	8204169	Symbol	* s		8201912						
ANR	8204170	Symbol	INDEX_op_nop		8201912						
ANR	8204171	Symbol	temps [ args [ 4 - tmp ] ] . state		8201912						
