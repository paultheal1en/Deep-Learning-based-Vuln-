command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	19091	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNCC_14_1.c								
ANR	19092	Function	ff_h264_idct8_add	1:0:0:3037							
ANR	19093	FunctionDef	"ff_h264_idct8_add (uint8_t * _dst , int16_t * _block , int stride)"		19092	0					
ANR	19094	CompoundStatement		1:73:73:3037	19092	0					
ANR	19095	IdentifierDeclStatement	int i ;	3:4:80:85	19092	0	True				
ANR	19096	IdentifierDecl	i		19092	0					
ANR	19097	IdentifierDeclType	int		19092	0					
ANR	19098	Identifier	i		19092	1					
ANR	19099	IdentifierDeclStatement	pixel * dst = ( pixel * ) _dst ;	5:4:92:117	19092	1	True				
ANR	19100	IdentifierDecl	* dst = ( pixel * ) _dst		19092	0					
ANR	19101	IdentifierDeclType	pixel *		19092	0					
ANR	19102	Identifier	dst		19092	1					
ANR	19103	AssignmentExpression	* dst = ( pixel * ) _dst		19092	2		=			
ANR	19104	Identifier	dst		19092	0					
ANR	19105	CastExpression	( pixel * ) _dst		19092	1					
ANR	19106	CastTarget	pixel *		19092	0					
ANR	19107	Identifier	_dst		19092	1					
ANR	19108	IdentifierDeclStatement	dctcoef * block = ( dctcoef * ) _block ;	7:4:124:157	19092	2	True				
ANR	19109	IdentifierDecl	* block = ( dctcoef * ) _block		19092	0					
ANR	19110	IdentifierDeclType	dctcoef *		19092	0					
ANR	19111	Identifier	block		19092	1					
ANR	19112	AssignmentExpression	* block = ( dctcoef * ) _block		19092	2		=			
ANR	19113	Identifier	block		19092	0					
ANR	19114	CastExpression	( dctcoef * ) _block		19092	1					
ANR	19115	CastTarget	dctcoef *		19092	0					
ANR	19116	Identifier	_block		19092	1					
ANR	19117	ExpressionStatement	stride >>= sizeof ( pixel ) - 1	9:4:164:190	19092	3	True				
ANR	19118	AssignmentExpression	stride >>= sizeof ( pixel ) - 1		19092	0		>>=			
ANR	19119	Identifier	stride		19092	0					
ANR	19120	AdditiveExpression	sizeof ( pixel ) - 1		19092	1		-			
ANR	19121	SizeofExpression	sizeof ( pixel )		19092	0					
ANR	19122	Sizeof	sizeof		19092	0					
ANR	19123	SizeofOperand	pixel		19092	1					
ANR	19124	PrimaryExpression	1		19092	1					
ANR	19125	ExpressionStatement	block [ 0 ] += 32	13:4:199:213	19092	4	True				
ANR	19126	AssignmentExpression	block [ 0 ] += 32		19092	0		+=			
ANR	19127	ArrayIndexing	block [ 0 ]		19092	0					
ANR	19128	Identifier	block		19092	0					
ANR	19129	PrimaryExpression	0		19092	1					
ANR	19130	PrimaryExpression	32		19092	1					
ANR	19131	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		19092	5					
ANR	19132	ForInit	i = 0 ;	17:9:227:232	19092	0	True				
ANR	19133	AssignmentExpression	i = 0		19092	0		=			
ANR	19134	Identifier	i		19092	0					
ANR	19135	PrimaryExpression	0		19092	1					
ANR	19136	Condition	i < 8	17:16:234:238	19092	1	True				
ANR	19137	RelationalExpression	i < 8		19092	0		<			
ANR	19138	Identifier	i		19092	0					
ANR	19139	PrimaryExpression	8		19092	1					
ANR	19140	PostIncDecOperationExpression	i ++	17:23:241:243	19092	2	True				
ANR	19141	Identifier	i		19092	0					
ANR	19142	IncDec	++		19092	1					
ANR	19143	CompoundStatement		57:8:1022:1050	19092	3					
ANR	19144	IdentifierDeclStatement	const int a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ] ;	21:8:263:306	19092	0	True				
ANR	19145	IdentifierDecl	a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		19092	0					
ANR	19146	IdentifierDeclType	const int		19092	0					
ANR	19147	Identifier	a0		19092	1					
ANR	19148	AssignmentExpression	a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		19092	2		=			
ANR	19149	Identifier	a0		19092	0					
ANR	19150	AdditiveExpression	block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		19092	1		+			
ANR	19151	ArrayIndexing	block [ i + 0 * 8 ]		19092	0					
ANR	19152	Identifier	block		19092	0					
ANR	19153	AdditiveExpression	i + 0 * 8		19092	1		+			
ANR	19154	Identifier	i		19092	0					
ANR	19155	MultiplicativeExpression	0 * 8		19092	1		*			
ANR	19156	PrimaryExpression	0		19092	0					
ANR	19157	PrimaryExpression	8		19092	1					
ANR	19158	ArrayIndexing	block [ i + 4 * 8 ]		19092	1					
ANR	19159	Identifier	block		19092	0					
ANR	19160	AdditiveExpression	i + 4 * 8		19092	1		+			
ANR	19161	Identifier	i		19092	0					
ANR	19162	MultiplicativeExpression	4 * 8		19092	1		*			
ANR	19163	PrimaryExpression	4		19092	0					
ANR	19164	PrimaryExpression	8		19092	1					
ANR	19165	IdentifierDeclStatement	const int a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ] ;	23:8:317:360	19092	1	True				
ANR	19166	IdentifierDecl	a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		19092	0					
ANR	19167	IdentifierDeclType	const int		19092	0					
ANR	19168	Identifier	a2		19092	1					
ANR	19169	AssignmentExpression	a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		19092	2		=			
ANR	19170	Identifier	a2		19092	0					
ANR	19171	AdditiveExpression	block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		19092	1		-			
ANR	19172	ArrayIndexing	block [ i + 0 * 8 ]		19092	0					
ANR	19173	Identifier	block		19092	0					
ANR	19174	AdditiveExpression	i + 0 * 8		19092	1		+			
ANR	19175	Identifier	i		19092	0					
ANR	19176	MultiplicativeExpression	0 * 8		19092	1		*			
ANR	19177	PrimaryExpression	0		19092	0					
ANR	19178	PrimaryExpression	8		19092	1					
ANR	19179	ArrayIndexing	block [ i + 4 * 8 ]		19092	1					
ANR	19180	Identifier	block		19092	0					
ANR	19181	AdditiveExpression	i + 4 * 8		19092	1		+			
ANR	19182	Identifier	i		19092	0					
ANR	19183	MultiplicativeExpression	4 * 8		19092	1		*			
ANR	19184	PrimaryExpression	4		19092	0					
ANR	19185	PrimaryExpression	8		19092	1					
ANR	19186	IdentifierDeclStatement	const int a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ] ;	25:8:371:418	19092	2	True				
ANR	19187	IdentifierDecl	a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		19092	0					
ANR	19188	IdentifierDeclType	const int		19092	0					
ANR	19189	Identifier	a4		19092	1					
ANR	19190	AssignmentExpression	a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		19092	2		=			
ANR	19191	Identifier	a4		19092	0					
ANR	19192	AdditiveExpression	( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		19092	1		-			
ANR	19193	ShiftExpression	block [ i + 2 * 8 ] >> 1		19092	0		>>			
ANR	19194	ArrayIndexing	block [ i + 2 * 8 ]		19092	0					
ANR	19195	Identifier	block		19092	0					
ANR	19196	AdditiveExpression	i + 2 * 8		19092	1		+			
ANR	19197	Identifier	i		19092	0					
ANR	19198	MultiplicativeExpression	2 * 8		19092	1		*			
ANR	19199	PrimaryExpression	2		19092	0					
ANR	19200	PrimaryExpression	8		19092	1					
ANR	19201	PrimaryExpression	1		19092	1					
ANR	19202	ArrayIndexing	block [ i + 6 * 8 ]		19092	1					
ANR	19203	Identifier	block		19092	0					
ANR	19204	AdditiveExpression	i + 6 * 8		19092	1		+			
ANR	19205	Identifier	i		19092	0					
ANR	19206	MultiplicativeExpression	6 * 8		19092	1		*			
ANR	19207	PrimaryExpression	6		19092	0					
ANR	19208	PrimaryExpression	8		19092	1					
ANR	19209	IdentifierDeclStatement	const int a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ] ;	27:8:429:476	19092	3	True				
ANR	19210	IdentifierDecl	a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		19092	0					
ANR	19211	IdentifierDeclType	const int		19092	0					
ANR	19212	Identifier	a6		19092	1					
ANR	19213	AssignmentExpression	a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		19092	2		=			
ANR	19214	Identifier	a6		19092	0					
ANR	19215	AdditiveExpression	( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		19092	1		+			
ANR	19216	ShiftExpression	block [ i + 6 * 8 ] >> 1		19092	0		>>			
ANR	19217	ArrayIndexing	block [ i + 6 * 8 ]		19092	0					
ANR	19218	Identifier	block		19092	0					
ANR	19219	AdditiveExpression	i + 6 * 8		19092	1		+			
ANR	19220	Identifier	i		19092	0					
ANR	19221	MultiplicativeExpression	6 * 8		19092	1		*			
ANR	19222	PrimaryExpression	6		19092	0					
ANR	19223	PrimaryExpression	8		19092	1					
ANR	19224	PrimaryExpression	1		19092	1					
ANR	19225	ArrayIndexing	block [ i + 2 * 8 ]		19092	1					
ANR	19226	Identifier	block		19092	0					
ANR	19227	AdditiveExpression	i + 2 * 8		19092	1		+			
ANR	19228	Identifier	i		19092	0					
ANR	19229	MultiplicativeExpression	2 * 8		19092	1		*			
ANR	19230	PrimaryExpression	2		19092	0					
ANR	19231	PrimaryExpression	8		19092	1					
ANR	19232	IdentifierDeclStatement	const int b0 = a0 + a6 ;	31:8:489:511	19092	4	True				
ANR	19233	IdentifierDecl	b0 = a0 + a6		19092	0					
ANR	19234	IdentifierDeclType	const int		19092	0					
ANR	19235	Identifier	b0		19092	1					
ANR	19236	AssignmentExpression	b0 = a0 + a6		19092	2		=			
ANR	19237	Identifier	b0		19092	0					
ANR	19238	AdditiveExpression	a0 + a6		19092	1		+			
ANR	19239	Identifier	a0		19092	0					
ANR	19240	Identifier	a6		19092	1					
ANR	19241	IdentifierDeclStatement	const int b2 = a2 + a4 ;	33:8:522:544	19092	5	True				
ANR	19242	IdentifierDecl	b2 = a2 + a4		19092	0					
ANR	19243	IdentifierDeclType	const int		19092	0					
ANR	19244	Identifier	b2		19092	1					
ANR	19245	AssignmentExpression	b2 = a2 + a4		19092	2		=			
ANR	19246	Identifier	b2		19092	0					
ANR	19247	AdditiveExpression	a2 + a4		19092	1		+			
ANR	19248	Identifier	a2		19092	0					
ANR	19249	Identifier	a4		19092	1					
ANR	19250	IdentifierDeclStatement	const int b4 = a2 - a4 ;	35:8:555:577	19092	6	True				
ANR	19251	IdentifierDecl	b4 = a2 - a4		19092	0					
ANR	19252	IdentifierDeclType	const int		19092	0					
ANR	19253	Identifier	b4		19092	1					
ANR	19254	AssignmentExpression	b4 = a2 - a4		19092	2		=			
ANR	19255	Identifier	b4		19092	0					
ANR	19256	AdditiveExpression	a2 - a4		19092	1		-			
ANR	19257	Identifier	a2		19092	0					
ANR	19258	Identifier	a4		19092	1					
ANR	19259	IdentifierDeclStatement	const int b6 = a0 - a6 ;	37:8:588:610	19092	7	True				
ANR	19260	IdentifierDecl	b6 = a0 - a6		19092	0					
ANR	19261	IdentifierDeclType	const int		19092	0					
ANR	19262	Identifier	b6		19092	1					
ANR	19263	AssignmentExpression	b6 = a0 - a6		19092	2		=			
ANR	19264	Identifier	b6		19092	0					
ANR	19265	AdditiveExpression	a0 - a6		19092	1		-			
ANR	19266	Identifier	a0		19092	0					
ANR	19267	Identifier	a6		19092	1					
ANR	19268	IdentifierDeclStatement	const int a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 ) ;	41:8:623:701	19092	8	True				
ANR	19269	IdentifierDecl	a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		19092	0					
ANR	19270	IdentifierDeclType	const int		19092	0					
ANR	19271	Identifier	a1		19092	1					
ANR	19272	AssignmentExpression	a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		19092	2		=			
ANR	19273	Identifier	a1		19092	0					
ANR	19274	AdditiveExpression	- block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		19092	1		+			
ANR	19275	UnaryOperationExpression	- block [ i + 3 * 8 ]		19092	0					
ANR	19276	UnaryOperator	-		19092	0					
ANR	19277	ArrayIndexing	block [ i + 3 * 8 ]		19092	1					
ANR	19278	Identifier	block		19092	0					
ANR	19279	AdditiveExpression	i + 3 * 8		19092	1		+			
ANR	19280	Identifier	i		19092	0					
ANR	19281	MultiplicativeExpression	3 * 8		19092	1		*			
ANR	19282	PrimaryExpression	3		19092	0					
ANR	19283	PrimaryExpression	8		19092	1					
ANR	19284	AdditiveExpression	block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		19092	1		-			
ANR	19285	ArrayIndexing	block [ i + 5 * 8 ]		19092	0					
ANR	19286	Identifier	block		19092	0					
ANR	19287	AdditiveExpression	i + 5 * 8		19092	1		+			
ANR	19288	Identifier	i		19092	0					
ANR	19289	MultiplicativeExpression	5 * 8		19092	1		*			
ANR	19290	PrimaryExpression	5		19092	0					
ANR	19291	PrimaryExpression	8		19092	1					
ANR	19292	AdditiveExpression	block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		19092	1		-			
ANR	19293	ArrayIndexing	block [ i + 7 * 8 ]		19092	0					
ANR	19294	Identifier	block		19092	0					
ANR	19295	AdditiveExpression	i + 7 * 8		19092	1		+			
ANR	19296	Identifier	i		19092	0					
ANR	19297	MultiplicativeExpression	7 * 8		19092	1		*			
ANR	19298	PrimaryExpression	7		19092	0					
ANR	19299	PrimaryExpression	8		19092	1					
ANR	19300	ShiftExpression	block [ i + 7 * 8 ] >> 1		19092	1		>>			
ANR	19301	ArrayIndexing	block [ i + 7 * 8 ]		19092	0					
ANR	19302	Identifier	block		19092	0					
ANR	19303	AdditiveExpression	i + 7 * 8		19092	1		+			
ANR	19304	Identifier	i		19092	0					
ANR	19305	MultiplicativeExpression	7 * 8		19092	1		*			
ANR	19306	PrimaryExpression	7		19092	0					
ANR	19307	PrimaryExpression	8		19092	1					
ANR	19308	PrimaryExpression	1		19092	1					
ANR	19309	IdentifierDeclStatement	const int a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 ) ;	43:8:712:790	19092	9	True				
ANR	19310	IdentifierDecl	a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		19092	0					
ANR	19311	IdentifierDeclType	const int		19092	0					
ANR	19312	Identifier	a3		19092	1					
ANR	19313	AssignmentExpression	a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		19092	2		=			
ANR	19314	Identifier	a3		19092	0					
ANR	19315	AdditiveExpression	block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		19092	1		+			
ANR	19316	ArrayIndexing	block [ i + 1 * 8 ]		19092	0					
ANR	19317	Identifier	block		19092	0					
ANR	19318	AdditiveExpression	i + 1 * 8		19092	1		+			
ANR	19319	Identifier	i		19092	0					
ANR	19320	MultiplicativeExpression	1 * 8		19092	1		*			
ANR	19321	PrimaryExpression	1		19092	0					
ANR	19322	PrimaryExpression	8		19092	1					
ANR	19323	AdditiveExpression	block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		19092	1		-			
ANR	19324	ArrayIndexing	block [ i + 7 * 8 ]		19092	0					
ANR	19325	Identifier	block		19092	0					
ANR	19326	AdditiveExpression	i + 7 * 8		19092	1		+			
ANR	19327	Identifier	i		19092	0					
ANR	19328	MultiplicativeExpression	7 * 8		19092	1		*			
ANR	19329	PrimaryExpression	7		19092	0					
ANR	19330	PrimaryExpression	8		19092	1					
ANR	19331	AdditiveExpression	block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		19092	1		-			
ANR	19332	ArrayIndexing	block [ i + 3 * 8 ]		19092	0					
ANR	19333	Identifier	block		19092	0					
ANR	19334	AdditiveExpression	i + 3 * 8		19092	1		+			
ANR	19335	Identifier	i		19092	0					
ANR	19336	MultiplicativeExpression	3 * 8		19092	1		*			
ANR	19337	PrimaryExpression	3		19092	0					
ANR	19338	PrimaryExpression	8		19092	1					
ANR	19339	ShiftExpression	block [ i + 3 * 8 ] >> 1		19092	1		>>			
ANR	19340	ArrayIndexing	block [ i + 3 * 8 ]		19092	0					
ANR	19341	Identifier	block		19092	0					
ANR	19342	AdditiveExpression	i + 3 * 8		19092	1		+			
ANR	19343	Identifier	i		19092	0					
ANR	19344	MultiplicativeExpression	3 * 8		19092	1		*			
ANR	19345	PrimaryExpression	3		19092	0					
ANR	19346	PrimaryExpression	8		19092	1					
ANR	19347	PrimaryExpression	1		19092	1					
ANR	19348	IdentifierDeclStatement	const int a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 ) ;	45:8:801:879	19092	10	True				
ANR	19349	IdentifierDecl	a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		19092	0					
ANR	19350	IdentifierDeclType	const int		19092	0					
ANR	19351	Identifier	a5		19092	1					
ANR	19352	AssignmentExpression	a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		19092	2		=			
ANR	19353	Identifier	a5		19092	0					
ANR	19354	AdditiveExpression	- block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		19092	1		+			
ANR	19355	UnaryOperationExpression	- block [ i + 1 * 8 ]		19092	0					
ANR	19356	UnaryOperator	-		19092	0					
ANR	19357	ArrayIndexing	block [ i + 1 * 8 ]		19092	1					
ANR	19358	Identifier	block		19092	0					
ANR	19359	AdditiveExpression	i + 1 * 8		19092	1		+			
ANR	19360	Identifier	i		19092	0					
ANR	19361	MultiplicativeExpression	1 * 8		19092	1		*			
ANR	19362	PrimaryExpression	1		19092	0					
ANR	19363	PrimaryExpression	8		19092	1					
ANR	19364	AdditiveExpression	block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		19092	1		+			
ANR	19365	ArrayIndexing	block [ i + 7 * 8 ]		19092	0					
ANR	19366	Identifier	block		19092	0					
ANR	19367	AdditiveExpression	i + 7 * 8		19092	1		+			
ANR	19368	Identifier	i		19092	0					
ANR	19369	MultiplicativeExpression	7 * 8		19092	1		*			
ANR	19370	PrimaryExpression	7		19092	0					
ANR	19371	PrimaryExpression	8		19092	1					
ANR	19372	AdditiveExpression	block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		19092	1		+			
ANR	19373	ArrayIndexing	block [ i + 5 * 8 ]		19092	0					
ANR	19374	Identifier	block		19092	0					
ANR	19375	AdditiveExpression	i + 5 * 8		19092	1		+			
ANR	19376	Identifier	i		19092	0					
ANR	19377	MultiplicativeExpression	5 * 8		19092	1		*			
ANR	19378	PrimaryExpression	5		19092	0					
ANR	19379	PrimaryExpression	8		19092	1					
ANR	19380	ShiftExpression	block [ i + 5 * 8 ] >> 1		19092	1		>>			
ANR	19381	ArrayIndexing	block [ i + 5 * 8 ]		19092	0					
ANR	19382	Identifier	block		19092	0					
ANR	19383	AdditiveExpression	i + 5 * 8		19092	1		+			
ANR	19384	Identifier	i		19092	0					
ANR	19385	MultiplicativeExpression	5 * 8		19092	1		*			
ANR	19386	PrimaryExpression	5		19092	0					
ANR	19387	PrimaryExpression	8		19092	1					
ANR	19388	PrimaryExpression	1		19092	1					
ANR	19389	IdentifierDeclStatement	const int a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 ) ;	47:8:890:968	19092	11	True				
ANR	19390	IdentifierDecl	a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		19092	0					
ANR	19391	IdentifierDeclType	const int		19092	0					
ANR	19392	Identifier	a7		19092	1					
ANR	19393	AssignmentExpression	a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		19092	2		=			
ANR	19394	Identifier	a7		19092	0					
ANR	19395	AdditiveExpression	block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		19092	1		+			
ANR	19396	ArrayIndexing	block [ i + 3 * 8 ]		19092	0					
ANR	19397	Identifier	block		19092	0					
ANR	19398	AdditiveExpression	i + 3 * 8		19092	1		+			
ANR	19399	Identifier	i		19092	0					
ANR	19400	MultiplicativeExpression	3 * 8		19092	1		*			
ANR	19401	PrimaryExpression	3		19092	0					
ANR	19402	PrimaryExpression	8		19092	1					
ANR	19403	AdditiveExpression	block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		19092	1		+			
ANR	19404	ArrayIndexing	block [ i + 5 * 8 ]		19092	0					
ANR	19405	Identifier	block		19092	0					
ANR	19406	AdditiveExpression	i + 5 * 8		19092	1		+			
ANR	19407	Identifier	i		19092	0					
ANR	19408	MultiplicativeExpression	5 * 8		19092	1		*			
ANR	19409	PrimaryExpression	5		19092	0					
ANR	19410	PrimaryExpression	8		19092	1					
ANR	19411	AdditiveExpression	block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		19092	1		+			
ANR	19412	ArrayIndexing	block [ i + 1 * 8 ]		19092	0					
ANR	19413	Identifier	block		19092	0					
ANR	19414	AdditiveExpression	i + 1 * 8		19092	1		+			
ANR	19415	Identifier	i		19092	0					
ANR	19416	MultiplicativeExpression	1 * 8		19092	1		*			
ANR	19417	PrimaryExpression	1		19092	0					
ANR	19418	PrimaryExpression	8		19092	1					
ANR	19419	ShiftExpression	block [ i + 1 * 8 ] >> 1		19092	1		>>			
ANR	19420	ArrayIndexing	block [ i + 1 * 8 ]		19092	0					
ANR	19421	Identifier	block		19092	0					
ANR	19422	AdditiveExpression	i + 1 * 8		19092	1		+			
ANR	19423	Identifier	i		19092	0					
ANR	19424	MultiplicativeExpression	1 * 8		19092	1		*			
ANR	19425	PrimaryExpression	1		19092	0					
ANR	19426	PrimaryExpression	8		19092	1					
ANR	19427	PrimaryExpression	1		19092	1					
ANR	19428	IdentifierDeclStatement	const int b1 = ( a7 >> 2 ) + a1 ;	51:8:981:1008	19092	12	True				
ANR	19429	IdentifierDecl	b1 = ( a7 >> 2 ) + a1		19092	0					
ANR	19430	IdentifierDeclType	const int		19092	0					
ANR	19431	Identifier	b1		19092	1					
ANR	19432	AssignmentExpression	b1 = ( a7 >> 2 ) + a1		19092	2		=			
ANR	19433	Identifier	b1		19092	0					
ANR	19434	AdditiveExpression	( a7 >> 2 ) + a1		19092	1		+			
ANR	19435	ShiftExpression	a7 >> 2		19092	0		>>			
ANR	19436	Identifier	a7		19092	0					
ANR	19437	PrimaryExpression	2		19092	1					
ANR	19438	Identifier	a1		19092	1					
ANR	19439	IdentifierDeclStatement	const int b3 = a3 + ( a5 >> 2 ) ;	53:8:1019:1047	19092	13	True				
ANR	19440	IdentifierDecl	b3 = a3 + ( a5 >> 2 )		19092	0					
ANR	19441	IdentifierDeclType	const int		19092	0					
ANR	19442	Identifier	b3		19092	1					
ANR	19443	AssignmentExpression	b3 = a3 + ( a5 >> 2 )		19092	2		=			
ANR	19444	Identifier	b3		19092	0					
ANR	19445	AdditiveExpression	a3 + ( a5 >> 2 )		19092	1		+			
ANR	19446	Identifier	a3		19092	0					
ANR	19447	ShiftExpression	a5 >> 2		19092	1		>>			
ANR	19448	Identifier	a5		19092	0					
ANR	19449	PrimaryExpression	2		19092	1					
ANR	19450	IdentifierDeclStatement	const int b5 = ( a3 >> 2 ) - a5 ;	55:8:1058:1085	19092	14	True				
ANR	19451	IdentifierDecl	b5 = ( a3 >> 2 ) - a5		19092	0					
ANR	19452	IdentifierDeclType	const int		19092	0					
ANR	19453	Identifier	b5		19092	1					
ANR	19454	AssignmentExpression	b5 = ( a3 >> 2 ) - a5		19092	2		=			
ANR	19455	Identifier	b5		19092	0					
ANR	19456	AdditiveExpression	( a3 >> 2 ) - a5		19092	1		-			
ANR	19457	ShiftExpression	a3 >> 2		19092	0		>>			
ANR	19458	Identifier	a3		19092	0					
ANR	19459	PrimaryExpression	2		19092	1					
ANR	19460	Identifier	a5		19092	1					
ANR	19461	IdentifierDeclStatement	const int b7 = a7 - ( a1 >> 2 ) ;	57:8:1096:1124	19092	15	True				
ANR	19462	IdentifierDecl	b7 = a7 - ( a1 >> 2 )		19092	0					
ANR	19463	IdentifierDeclType	const int		19092	0					
ANR	19464	Identifier	b7		19092	1					
ANR	19465	AssignmentExpression	b7 = a7 - ( a1 >> 2 )		19092	2		=			
ANR	19466	Identifier	b7		19092	0					
ANR	19467	AdditiveExpression	a7 - ( a1 >> 2 )		19092	1		-			
ANR	19468	Identifier	a7		19092	0					
ANR	19469	ShiftExpression	a1 >> 2		19092	1		>>			
ANR	19470	Identifier	a1		19092	0					
ANR	19471	PrimaryExpression	2		19092	1					
ANR	19472	ExpressionStatement	block [ i + 0 * 8 ] = b0 + b7	61:8:1137:1159	19092	16	True				
ANR	19473	AssignmentExpression	block [ i + 0 * 8 ] = b0 + b7		19092	0		=			
ANR	19474	ArrayIndexing	block [ i + 0 * 8 ]		19092	0					
ANR	19475	Identifier	block		19092	0					
ANR	19476	AdditiveExpression	i + 0 * 8		19092	1		+			
ANR	19477	Identifier	i		19092	0					
ANR	19478	MultiplicativeExpression	0 * 8		19092	1		*			
ANR	19479	PrimaryExpression	0		19092	0					
ANR	19480	PrimaryExpression	8		19092	1					
ANR	19481	AdditiveExpression	b0 + b7		19092	1		+			
ANR	19482	Identifier	b0		19092	0					
ANR	19483	Identifier	b7		19092	1					
ANR	19484	ExpressionStatement	block [ i + 7 * 8 ] = b0 - b7	63:8:1170:1192	19092	17	True				
ANR	19485	AssignmentExpression	block [ i + 7 * 8 ] = b0 - b7		19092	0		=			
ANR	19486	ArrayIndexing	block [ i + 7 * 8 ]		19092	0					
ANR	19487	Identifier	block		19092	0					
ANR	19488	AdditiveExpression	i + 7 * 8		19092	1		+			
ANR	19489	Identifier	i		19092	0					
ANR	19490	MultiplicativeExpression	7 * 8		19092	1		*			
ANR	19491	PrimaryExpression	7		19092	0					
ANR	19492	PrimaryExpression	8		19092	1					
ANR	19493	AdditiveExpression	b0 - b7		19092	1		-			
ANR	19494	Identifier	b0		19092	0					
ANR	19495	Identifier	b7		19092	1					
ANR	19496	ExpressionStatement	block [ i + 1 * 8 ] = b2 + b5	65:8:1203:1225	19092	18	True				
ANR	19497	AssignmentExpression	block [ i + 1 * 8 ] = b2 + b5		19092	0		=			
ANR	19498	ArrayIndexing	block [ i + 1 * 8 ]		19092	0					
ANR	19499	Identifier	block		19092	0					
ANR	19500	AdditiveExpression	i + 1 * 8		19092	1		+			
ANR	19501	Identifier	i		19092	0					
ANR	19502	MultiplicativeExpression	1 * 8		19092	1		*			
ANR	19503	PrimaryExpression	1		19092	0					
ANR	19504	PrimaryExpression	8		19092	1					
ANR	19505	AdditiveExpression	b2 + b5		19092	1		+			
ANR	19506	Identifier	b2		19092	0					
ANR	19507	Identifier	b5		19092	1					
ANR	19508	ExpressionStatement	block [ i + 6 * 8 ] = b2 - b5	67:8:1236:1258	19092	19	True				
ANR	19509	AssignmentExpression	block [ i + 6 * 8 ] = b2 - b5		19092	0		=			
ANR	19510	ArrayIndexing	block [ i + 6 * 8 ]		19092	0					
ANR	19511	Identifier	block		19092	0					
ANR	19512	AdditiveExpression	i + 6 * 8		19092	1		+			
ANR	19513	Identifier	i		19092	0					
ANR	19514	MultiplicativeExpression	6 * 8		19092	1		*			
ANR	19515	PrimaryExpression	6		19092	0					
ANR	19516	PrimaryExpression	8		19092	1					
ANR	19517	AdditiveExpression	b2 - b5		19092	1		-			
ANR	19518	Identifier	b2		19092	0					
ANR	19519	Identifier	b5		19092	1					
ANR	19520	ExpressionStatement	block [ i + 2 * 8 ] = b4 + b3	69:8:1269:1291	19092	20	True				
ANR	19521	AssignmentExpression	block [ i + 2 * 8 ] = b4 + b3		19092	0		=			
ANR	19522	ArrayIndexing	block [ i + 2 * 8 ]		19092	0					
ANR	19523	Identifier	block		19092	0					
ANR	19524	AdditiveExpression	i + 2 * 8		19092	1		+			
ANR	19525	Identifier	i		19092	0					
ANR	19526	MultiplicativeExpression	2 * 8		19092	1		*			
ANR	19527	PrimaryExpression	2		19092	0					
ANR	19528	PrimaryExpression	8		19092	1					
ANR	19529	AdditiveExpression	b4 + b3		19092	1		+			
ANR	19530	Identifier	b4		19092	0					
ANR	19531	Identifier	b3		19092	1					
ANR	19532	ExpressionStatement	block [ i + 5 * 8 ] = b4 - b3	71:8:1302:1324	19092	21	True				
ANR	19533	AssignmentExpression	block [ i + 5 * 8 ] = b4 - b3		19092	0		=			
ANR	19534	ArrayIndexing	block [ i + 5 * 8 ]		19092	0					
ANR	19535	Identifier	block		19092	0					
ANR	19536	AdditiveExpression	i + 5 * 8		19092	1		+			
ANR	19537	Identifier	i		19092	0					
ANR	19538	MultiplicativeExpression	5 * 8		19092	1		*			
ANR	19539	PrimaryExpression	5		19092	0					
ANR	19540	PrimaryExpression	8		19092	1					
ANR	19541	AdditiveExpression	b4 - b3		19092	1		-			
ANR	19542	Identifier	b4		19092	0					
ANR	19543	Identifier	b3		19092	1					
ANR	19544	ExpressionStatement	block [ i + 3 * 8 ] = b6 + b1	73:8:1335:1357	19092	22	True				
ANR	19545	AssignmentExpression	block [ i + 3 * 8 ] = b6 + b1		19092	0		=			
ANR	19546	ArrayIndexing	block [ i + 3 * 8 ]		19092	0					
ANR	19547	Identifier	block		19092	0					
ANR	19548	AdditiveExpression	i + 3 * 8		19092	1		+			
ANR	19549	Identifier	i		19092	0					
ANR	19550	MultiplicativeExpression	3 * 8		19092	1		*			
ANR	19551	PrimaryExpression	3		19092	0					
ANR	19552	PrimaryExpression	8		19092	1					
ANR	19553	AdditiveExpression	b6 + b1		19092	1		+			
ANR	19554	Identifier	b6		19092	0					
ANR	19555	Identifier	b1		19092	1					
ANR	19556	ExpressionStatement	block [ i + 4 * 8 ] = b6 - b1	75:8:1368:1390	19092	23	True				
ANR	19557	AssignmentExpression	block [ i + 4 * 8 ] = b6 - b1		19092	0		=			
ANR	19558	ArrayIndexing	block [ i + 4 * 8 ]		19092	0					
ANR	19559	Identifier	block		19092	0					
ANR	19560	AdditiveExpression	i + 4 * 8		19092	1		+			
ANR	19561	Identifier	i		19092	0					
ANR	19562	MultiplicativeExpression	4 * 8		19092	1		*			
ANR	19563	PrimaryExpression	4		19092	0					
ANR	19564	PrimaryExpression	8		19092	1					
ANR	19565	AdditiveExpression	b6 - b1		19092	1		-			
ANR	19566	Identifier	b6		19092	0					
ANR	19567	Identifier	b1		19092	1					
ANR	19568	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		19092	6					
ANR	19569	ForInit	i = 0 ;	79:9:1409:1414	19092	0	True				
ANR	19570	AssignmentExpression	i = 0		19092	0		=			
ANR	19571	Identifier	i		19092	0					
ANR	19572	PrimaryExpression	0		19092	1					
ANR	19573	Condition	i < 8	79:16:1416:1420	19092	1	True				
ANR	19574	RelationalExpression	i < 8		19092	0		<			
ANR	19575	Identifier	i		19092	0					
ANR	19576	PrimaryExpression	8		19092	1					
ANR	19577	PostIncDecOperationExpression	i ++	79:23:1423:1425	19092	2	True				
ANR	19578	Identifier	i		19092	0					
ANR	19579	IncDec	++		19092	1					
ANR	19580	CompoundStatement		119:8:2204:2232	19092	3					
ANR	19581	IdentifierDeclStatement	const int a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ] ;	83:8:1445:1488	19092	0	True				
ANR	19582	IdentifierDecl	a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		19092	0					
ANR	19583	IdentifierDeclType	const int		19092	0					
ANR	19584	Identifier	a0		19092	1					
ANR	19585	AssignmentExpression	a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		19092	2		=			
ANR	19586	Identifier	a0		19092	0					
ANR	19587	AdditiveExpression	block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		19092	1		+			
ANR	19588	ArrayIndexing	block [ 0 + i * 8 ]		19092	0					
ANR	19589	Identifier	block		19092	0					
ANR	19590	AdditiveExpression	0 + i * 8		19092	1		+			
ANR	19591	PrimaryExpression	0		19092	0					
ANR	19592	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19593	Identifier	i		19092	0					
ANR	19594	PrimaryExpression	8		19092	1					
ANR	19595	ArrayIndexing	block [ 4 + i * 8 ]		19092	1					
ANR	19596	Identifier	block		19092	0					
ANR	19597	AdditiveExpression	4 + i * 8		19092	1		+			
ANR	19598	PrimaryExpression	4		19092	0					
ANR	19599	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19600	Identifier	i		19092	0					
ANR	19601	PrimaryExpression	8		19092	1					
ANR	19602	IdentifierDeclStatement	const int a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ] ;	85:8:1499:1542	19092	1	True				
ANR	19603	IdentifierDecl	a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		19092	0					
ANR	19604	IdentifierDeclType	const int		19092	0					
ANR	19605	Identifier	a2		19092	1					
ANR	19606	AssignmentExpression	a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		19092	2		=			
ANR	19607	Identifier	a2		19092	0					
ANR	19608	AdditiveExpression	block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		19092	1		-			
ANR	19609	ArrayIndexing	block [ 0 + i * 8 ]		19092	0					
ANR	19610	Identifier	block		19092	0					
ANR	19611	AdditiveExpression	0 + i * 8		19092	1		+			
ANR	19612	PrimaryExpression	0		19092	0					
ANR	19613	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19614	Identifier	i		19092	0					
ANR	19615	PrimaryExpression	8		19092	1					
ANR	19616	ArrayIndexing	block [ 4 + i * 8 ]		19092	1					
ANR	19617	Identifier	block		19092	0					
ANR	19618	AdditiveExpression	4 + i * 8		19092	1		+			
ANR	19619	PrimaryExpression	4		19092	0					
ANR	19620	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19621	Identifier	i		19092	0					
ANR	19622	PrimaryExpression	8		19092	1					
ANR	19623	IdentifierDeclStatement	const int a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ] ;	87:8:1553:1600	19092	2	True				
ANR	19624	IdentifierDecl	a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		19092	0					
ANR	19625	IdentifierDeclType	const int		19092	0					
ANR	19626	Identifier	a4		19092	1					
ANR	19627	AssignmentExpression	a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		19092	2		=			
ANR	19628	Identifier	a4		19092	0					
ANR	19629	AdditiveExpression	( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		19092	1		-			
ANR	19630	ShiftExpression	block [ 2 + i * 8 ] >> 1		19092	0		>>			
ANR	19631	ArrayIndexing	block [ 2 + i * 8 ]		19092	0					
ANR	19632	Identifier	block		19092	0					
ANR	19633	AdditiveExpression	2 + i * 8		19092	1		+			
ANR	19634	PrimaryExpression	2		19092	0					
ANR	19635	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19636	Identifier	i		19092	0					
ANR	19637	PrimaryExpression	8		19092	1					
ANR	19638	PrimaryExpression	1		19092	1					
ANR	19639	ArrayIndexing	block [ 6 + i * 8 ]		19092	1					
ANR	19640	Identifier	block		19092	0					
ANR	19641	AdditiveExpression	6 + i * 8		19092	1		+			
ANR	19642	PrimaryExpression	6		19092	0					
ANR	19643	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19644	Identifier	i		19092	0					
ANR	19645	PrimaryExpression	8		19092	1					
ANR	19646	IdentifierDeclStatement	const int a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ] ;	89:8:1611:1658	19092	3	True				
ANR	19647	IdentifierDecl	a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		19092	0					
ANR	19648	IdentifierDeclType	const int		19092	0					
ANR	19649	Identifier	a6		19092	1					
ANR	19650	AssignmentExpression	a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		19092	2		=			
ANR	19651	Identifier	a6		19092	0					
ANR	19652	AdditiveExpression	( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		19092	1		+			
ANR	19653	ShiftExpression	block [ 6 + i * 8 ] >> 1		19092	0		>>			
ANR	19654	ArrayIndexing	block [ 6 + i * 8 ]		19092	0					
ANR	19655	Identifier	block		19092	0					
ANR	19656	AdditiveExpression	6 + i * 8		19092	1		+			
ANR	19657	PrimaryExpression	6		19092	0					
ANR	19658	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19659	Identifier	i		19092	0					
ANR	19660	PrimaryExpression	8		19092	1					
ANR	19661	PrimaryExpression	1		19092	1					
ANR	19662	ArrayIndexing	block [ 2 + i * 8 ]		19092	1					
ANR	19663	Identifier	block		19092	0					
ANR	19664	AdditiveExpression	2 + i * 8		19092	1		+			
ANR	19665	PrimaryExpression	2		19092	0					
ANR	19666	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19667	Identifier	i		19092	0					
ANR	19668	PrimaryExpression	8		19092	1					
ANR	19669	IdentifierDeclStatement	const int b0 = a0 + a6 ;	93:8:1671:1693	19092	4	True				
ANR	19670	IdentifierDecl	b0 = a0 + a6		19092	0					
ANR	19671	IdentifierDeclType	const int		19092	0					
ANR	19672	Identifier	b0		19092	1					
ANR	19673	AssignmentExpression	b0 = a0 + a6		19092	2		=			
ANR	19674	Identifier	b0		19092	0					
ANR	19675	AdditiveExpression	a0 + a6		19092	1		+			
ANR	19676	Identifier	a0		19092	0					
ANR	19677	Identifier	a6		19092	1					
ANR	19678	IdentifierDeclStatement	const int b2 = a2 + a4 ;	95:8:1704:1726	19092	5	True				
ANR	19679	IdentifierDecl	b2 = a2 + a4		19092	0					
ANR	19680	IdentifierDeclType	const int		19092	0					
ANR	19681	Identifier	b2		19092	1					
ANR	19682	AssignmentExpression	b2 = a2 + a4		19092	2		=			
ANR	19683	Identifier	b2		19092	0					
ANR	19684	AdditiveExpression	a2 + a4		19092	1		+			
ANR	19685	Identifier	a2		19092	0					
ANR	19686	Identifier	a4		19092	1					
ANR	19687	IdentifierDeclStatement	const int b4 = a2 - a4 ;	97:8:1737:1759	19092	6	True				
ANR	19688	IdentifierDecl	b4 = a2 - a4		19092	0					
ANR	19689	IdentifierDeclType	const int		19092	0					
ANR	19690	Identifier	b4		19092	1					
ANR	19691	AssignmentExpression	b4 = a2 - a4		19092	2		=			
ANR	19692	Identifier	b4		19092	0					
ANR	19693	AdditiveExpression	a2 - a4		19092	1		-			
ANR	19694	Identifier	a2		19092	0					
ANR	19695	Identifier	a4		19092	1					
ANR	19696	IdentifierDeclStatement	const int b6 = a0 - a6 ;	99:8:1770:1792	19092	7	True				
ANR	19697	IdentifierDecl	b6 = a0 - a6		19092	0					
ANR	19698	IdentifierDeclType	const int		19092	0					
ANR	19699	Identifier	b6		19092	1					
ANR	19700	AssignmentExpression	b6 = a0 - a6		19092	2		=			
ANR	19701	Identifier	b6		19092	0					
ANR	19702	AdditiveExpression	a0 - a6		19092	1		-			
ANR	19703	Identifier	a0		19092	0					
ANR	19704	Identifier	a6		19092	1					
ANR	19705	IdentifierDeclStatement	const int a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 ) ;	103:8:1805:1883	19092	8	True				
ANR	19706	IdentifierDecl	a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		19092	0					
ANR	19707	IdentifierDeclType	const int		19092	0					
ANR	19708	Identifier	a1		19092	1					
ANR	19709	AssignmentExpression	a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		19092	2		=			
ANR	19710	Identifier	a1		19092	0					
ANR	19711	AdditiveExpression	- block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		19092	1		+			
ANR	19712	UnaryOperationExpression	- block [ 3 + i * 8 ]		19092	0					
ANR	19713	UnaryOperator	-		19092	0					
ANR	19714	ArrayIndexing	block [ 3 + i * 8 ]		19092	1					
ANR	19715	Identifier	block		19092	0					
ANR	19716	AdditiveExpression	3 + i * 8		19092	1		+			
ANR	19717	PrimaryExpression	3		19092	0					
ANR	19718	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19719	Identifier	i		19092	0					
ANR	19720	PrimaryExpression	8		19092	1					
ANR	19721	AdditiveExpression	block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		19092	1		-			
ANR	19722	ArrayIndexing	block [ 5 + i * 8 ]		19092	0					
ANR	19723	Identifier	block		19092	0					
ANR	19724	AdditiveExpression	5 + i * 8		19092	1		+			
ANR	19725	PrimaryExpression	5		19092	0					
ANR	19726	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19727	Identifier	i		19092	0					
ANR	19728	PrimaryExpression	8		19092	1					
ANR	19729	AdditiveExpression	block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		19092	1		-			
ANR	19730	ArrayIndexing	block [ 7 + i * 8 ]		19092	0					
ANR	19731	Identifier	block		19092	0					
ANR	19732	AdditiveExpression	7 + i * 8		19092	1		+			
ANR	19733	PrimaryExpression	7		19092	0					
ANR	19734	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19735	Identifier	i		19092	0					
ANR	19736	PrimaryExpression	8		19092	1					
ANR	19737	ShiftExpression	block [ 7 + i * 8 ] >> 1		19092	1		>>			
ANR	19738	ArrayIndexing	block [ 7 + i * 8 ]		19092	0					
ANR	19739	Identifier	block		19092	0					
ANR	19740	AdditiveExpression	7 + i * 8		19092	1		+			
ANR	19741	PrimaryExpression	7		19092	0					
ANR	19742	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19743	Identifier	i		19092	0					
ANR	19744	PrimaryExpression	8		19092	1					
ANR	19745	PrimaryExpression	1		19092	1					
ANR	19746	IdentifierDeclStatement	const int a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 ) ;	105:8:1894:1972	19092	9	True				
ANR	19747	IdentifierDecl	a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		19092	0					
ANR	19748	IdentifierDeclType	const int		19092	0					
ANR	19749	Identifier	a3		19092	1					
ANR	19750	AssignmentExpression	a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		19092	2		=			
ANR	19751	Identifier	a3		19092	0					
ANR	19752	AdditiveExpression	block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		19092	1		+			
ANR	19753	ArrayIndexing	block [ 1 + i * 8 ]		19092	0					
ANR	19754	Identifier	block		19092	0					
ANR	19755	AdditiveExpression	1 + i * 8		19092	1		+			
ANR	19756	PrimaryExpression	1		19092	0					
ANR	19757	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19758	Identifier	i		19092	0					
ANR	19759	PrimaryExpression	8		19092	1					
ANR	19760	AdditiveExpression	block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		19092	1		-			
ANR	19761	ArrayIndexing	block [ 7 + i * 8 ]		19092	0					
ANR	19762	Identifier	block		19092	0					
ANR	19763	AdditiveExpression	7 + i * 8		19092	1		+			
ANR	19764	PrimaryExpression	7		19092	0					
ANR	19765	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19766	Identifier	i		19092	0					
ANR	19767	PrimaryExpression	8		19092	1					
ANR	19768	AdditiveExpression	block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		19092	1		-			
ANR	19769	ArrayIndexing	block [ 3 + i * 8 ]		19092	0					
ANR	19770	Identifier	block		19092	0					
ANR	19771	AdditiveExpression	3 + i * 8		19092	1		+			
ANR	19772	PrimaryExpression	3		19092	0					
ANR	19773	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19774	Identifier	i		19092	0					
ANR	19775	PrimaryExpression	8		19092	1					
ANR	19776	ShiftExpression	block [ 3 + i * 8 ] >> 1		19092	1		>>			
ANR	19777	ArrayIndexing	block [ 3 + i * 8 ]		19092	0					
ANR	19778	Identifier	block		19092	0					
ANR	19779	AdditiveExpression	3 + i * 8		19092	1		+			
ANR	19780	PrimaryExpression	3		19092	0					
ANR	19781	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19782	Identifier	i		19092	0					
ANR	19783	PrimaryExpression	8		19092	1					
ANR	19784	PrimaryExpression	1		19092	1					
ANR	19785	IdentifierDeclStatement	const int a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 ) ;	107:8:1983:2061	19092	10	True				
ANR	19786	IdentifierDecl	a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		19092	0					
ANR	19787	IdentifierDeclType	const int		19092	0					
ANR	19788	Identifier	a5		19092	1					
ANR	19789	AssignmentExpression	a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		19092	2		=			
ANR	19790	Identifier	a5		19092	0					
ANR	19791	AdditiveExpression	- block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		19092	1		+			
ANR	19792	UnaryOperationExpression	- block [ 1 + i * 8 ]		19092	0					
ANR	19793	UnaryOperator	-		19092	0					
ANR	19794	ArrayIndexing	block [ 1 + i * 8 ]		19092	1					
ANR	19795	Identifier	block		19092	0					
ANR	19796	AdditiveExpression	1 + i * 8		19092	1		+			
ANR	19797	PrimaryExpression	1		19092	0					
ANR	19798	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19799	Identifier	i		19092	0					
ANR	19800	PrimaryExpression	8		19092	1					
ANR	19801	AdditiveExpression	block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		19092	1		+			
ANR	19802	ArrayIndexing	block [ 7 + i * 8 ]		19092	0					
ANR	19803	Identifier	block		19092	0					
ANR	19804	AdditiveExpression	7 + i * 8		19092	1		+			
ANR	19805	PrimaryExpression	7		19092	0					
ANR	19806	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19807	Identifier	i		19092	0					
ANR	19808	PrimaryExpression	8		19092	1					
ANR	19809	AdditiveExpression	block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		19092	1		+			
ANR	19810	ArrayIndexing	block [ 5 + i * 8 ]		19092	0					
ANR	19811	Identifier	block		19092	0					
ANR	19812	AdditiveExpression	5 + i * 8		19092	1		+			
ANR	19813	PrimaryExpression	5		19092	0					
ANR	19814	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19815	Identifier	i		19092	0					
ANR	19816	PrimaryExpression	8		19092	1					
ANR	19817	ShiftExpression	block [ 5 + i * 8 ] >> 1		19092	1		>>			
ANR	19818	ArrayIndexing	block [ 5 + i * 8 ]		19092	0					
ANR	19819	Identifier	block		19092	0					
ANR	19820	AdditiveExpression	5 + i * 8		19092	1		+			
ANR	19821	PrimaryExpression	5		19092	0					
ANR	19822	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19823	Identifier	i		19092	0					
ANR	19824	PrimaryExpression	8		19092	1					
ANR	19825	PrimaryExpression	1		19092	1					
ANR	19826	IdentifierDeclStatement	const int a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 ) ;	109:8:2072:2150	19092	11	True				
ANR	19827	IdentifierDecl	a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		19092	0					
ANR	19828	IdentifierDeclType	const int		19092	0					
ANR	19829	Identifier	a7		19092	1					
ANR	19830	AssignmentExpression	a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		19092	2		=			
ANR	19831	Identifier	a7		19092	0					
ANR	19832	AdditiveExpression	block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		19092	1		+			
ANR	19833	ArrayIndexing	block [ 3 + i * 8 ]		19092	0					
ANR	19834	Identifier	block		19092	0					
ANR	19835	AdditiveExpression	3 + i * 8		19092	1		+			
ANR	19836	PrimaryExpression	3		19092	0					
ANR	19837	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19838	Identifier	i		19092	0					
ANR	19839	PrimaryExpression	8		19092	1					
ANR	19840	AdditiveExpression	block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		19092	1		+			
ANR	19841	ArrayIndexing	block [ 5 + i * 8 ]		19092	0					
ANR	19842	Identifier	block		19092	0					
ANR	19843	AdditiveExpression	5 + i * 8		19092	1		+			
ANR	19844	PrimaryExpression	5		19092	0					
ANR	19845	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19846	Identifier	i		19092	0					
ANR	19847	PrimaryExpression	8		19092	1					
ANR	19848	AdditiveExpression	block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		19092	1		+			
ANR	19849	ArrayIndexing	block [ 1 + i * 8 ]		19092	0					
ANR	19850	Identifier	block		19092	0					
ANR	19851	AdditiveExpression	1 + i * 8		19092	1		+			
ANR	19852	PrimaryExpression	1		19092	0					
ANR	19853	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19854	Identifier	i		19092	0					
ANR	19855	PrimaryExpression	8		19092	1					
ANR	19856	ShiftExpression	block [ 1 + i * 8 ] >> 1		19092	1		>>			
ANR	19857	ArrayIndexing	block [ 1 + i * 8 ]		19092	0					
ANR	19858	Identifier	block		19092	0					
ANR	19859	AdditiveExpression	1 + i * 8		19092	1		+			
ANR	19860	PrimaryExpression	1		19092	0					
ANR	19861	MultiplicativeExpression	i * 8		19092	1		*			
ANR	19862	Identifier	i		19092	0					
ANR	19863	PrimaryExpression	8		19092	1					
ANR	19864	PrimaryExpression	1		19092	1					
ANR	19865	IdentifierDeclStatement	const int b1 = ( a7 >> 2 ) + a1 ;	113:8:2163:2190	19092	12	True				
ANR	19866	IdentifierDecl	b1 = ( a7 >> 2 ) + a1		19092	0					
ANR	19867	IdentifierDeclType	const int		19092	0					
ANR	19868	Identifier	b1		19092	1					
ANR	19869	AssignmentExpression	b1 = ( a7 >> 2 ) + a1		19092	2		=			
ANR	19870	Identifier	b1		19092	0					
ANR	19871	AdditiveExpression	( a7 >> 2 ) + a1		19092	1		+			
ANR	19872	ShiftExpression	a7 >> 2		19092	0		>>			
ANR	19873	Identifier	a7		19092	0					
ANR	19874	PrimaryExpression	2		19092	1					
ANR	19875	Identifier	a1		19092	1					
ANR	19876	IdentifierDeclStatement	const int b3 = a3 + ( a5 >> 2 ) ;	115:8:2201:2229	19092	13	True				
ANR	19877	IdentifierDecl	b3 = a3 + ( a5 >> 2 )		19092	0					
ANR	19878	IdentifierDeclType	const int		19092	0					
ANR	19879	Identifier	b3		19092	1					
ANR	19880	AssignmentExpression	b3 = a3 + ( a5 >> 2 )		19092	2		=			
ANR	19881	Identifier	b3		19092	0					
ANR	19882	AdditiveExpression	a3 + ( a5 >> 2 )		19092	1		+			
ANR	19883	Identifier	a3		19092	0					
ANR	19884	ShiftExpression	a5 >> 2		19092	1		>>			
ANR	19885	Identifier	a5		19092	0					
ANR	19886	PrimaryExpression	2		19092	1					
ANR	19887	IdentifierDeclStatement	const int b5 = ( a3 >> 2 ) - a5 ;	117:8:2240:2267	19092	14	True				
ANR	19888	IdentifierDecl	b5 = ( a3 >> 2 ) - a5		19092	0					
ANR	19889	IdentifierDeclType	const int		19092	0					
ANR	19890	Identifier	b5		19092	1					
ANR	19891	AssignmentExpression	b5 = ( a3 >> 2 ) - a5		19092	2		=			
ANR	19892	Identifier	b5		19092	0					
ANR	19893	AdditiveExpression	( a3 >> 2 ) - a5		19092	1		-			
ANR	19894	ShiftExpression	a3 >> 2		19092	0		>>			
ANR	19895	Identifier	a3		19092	0					
ANR	19896	PrimaryExpression	2		19092	1					
ANR	19897	Identifier	a5		19092	1					
ANR	19898	IdentifierDeclStatement	const int b7 = a7 - ( a1 >> 2 ) ;	119:8:2278:2306	19092	15	True				
ANR	19899	IdentifierDecl	b7 = a7 - ( a1 >> 2 )		19092	0					
ANR	19900	IdentifierDeclType	const int		19092	0					
ANR	19901	Identifier	b7		19092	1					
ANR	19902	AssignmentExpression	b7 = a7 - ( a1 >> 2 )		19092	2		=			
ANR	19903	Identifier	b7		19092	0					
ANR	19904	AdditiveExpression	a7 - ( a1 >> 2 )		19092	1		-			
ANR	19905	Identifier	a7		19092	0					
ANR	19906	ShiftExpression	a1 >> 2		19092	1		>>			
ANR	19907	Identifier	a1		19092	0					
ANR	19908	PrimaryExpression	2		19092	1					
ANR	19909	ExpressionStatement	dst [ i + 0 * stride ] = av_clip_pixel ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )	123:8:2319:2392	19092	16	True				
ANR	19910	AssignmentExpression	dst [ i + 0 * stride ] = av_clip_pixel ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )		19092	0		=			
ANR	19911	ArrayIndexing	dst [ i + 0 * stride ]		19092	0					
ANR	19912	Identifier	dst		19092	0					
ANR	19913	AdditiveExpression	i + 0 * stride		19092	1		+			
ANR	19914	Identifier	i		19092	0					
ANR	19915	MultiplicativeExpression	0 * stride		19092	1		*			
ANR	19916	PrimaryExpression	0		19092	0					
ANR	19917	Identifier	stride		19092	1					
ANR	19918	CallExpression	av_clip_pixel ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )		19092	1					
ANR	19919	Callee	av_clip_pixel		19092	0					
ANR	19920	Identifier	av_clip_pixel		19092	0					
ANR	19921	ArgumentList	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		19092	1					
ANR	19922	Argument	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		19092	0					
ANR	19923	AdditiveExpression	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		19092	0		+			
ANR	19924	ArrayIndexing	dst [ i + 0 * stride ]		19092	0					
ANR	19925	Identifier	dst		19092	0					
ANR	19926	AdditiveExpression	i + 0 * stride		19092	1		+			
ANR	19927	Identifier	i		19092	0					
ANR	19928	MultiplicativeExpression	0 * stride		19092	1		*			
ANR	19929	PrimaryExpression	0		19092	0					
ANR	19930	Identifier	stride		19092	1					
ANR	19931	ShiftExpression	( b0 + b7 ) >> 6		19092	1		>>			
ANR	19932	AdditiveExpression	b0 + b7		19092	0		+			
ANR	19933	Identifier	b0		19092	0					
ANR	19934	Identifier	b7		19092	1					
ANR	19935	PrimaryExpression	6		19092	1					
ANR	19936	ExpressionStatement	dst [ i + 1 * stride ] = av_clip_pixel ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )	125:8:2403:2476	19092	17	True				
ANR	19937	AssignmentExpression	dst [ i + 1 * stride ] = av_clip_pixel ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )		19092	0		=			
ANR	19938	ArrayIndexing	dst [ i + 1 * stride ]		19092	0					
ANR	19939	Identifier	dst		19092	0					
ANR	19940	AdditiveExpression	i + 1 * stride		19092	1		+			
ANR	19941	Identifier	i		19092	0					
ANR	19942	MultiplicativeExpression	1 * stride		19092	1		*			
ANR	19943	PrimaryExpression	1		19092	0					
ANR	19944	Identifier	stride		19092	1					
ANR	19945	CallExpression	av_clip_pixel ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )		19092	1					
ANR	19946	Callee	av_clip_pixel		19092	0					
ANR	19947	Identifier	av_clip_pixel		19092	0					
ANR	19948	ArgumentList	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		19092	1					
ANR	19949	Argument	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		19092	0					
ANR	19950	AdditiveExpression	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		19092	0		+			
ANR	19951	ArrayIndexing	dst [ i + 1 * stride ]		19092	0					
ANR	19952	Identifier	dst		19092	0					
ANR	19953	AdditiveExpression	i + 1 * stride		19092	1		+			
ANR	19954	Identifier	i		19092	0					
ANR	19955	MultiplicativeExpression	1 * stride		19092	1		*			
ANR	19956	PrimaryExpression	1		19092	0					
ANR	19957	Identifier	stride		19092	1					
ANR	19958	ShiftExpression	( b2 + b5 ) >> 6		19092	1		>>			
ANR	19959	AdditiveExpression	b2 + b5		19092	0		+			
ANR	19960	Identifier	b2		19092	0					
ANR	19961	Identifier	b5		19092	1					
ANR	19962	PrimaryExpression	6		19092	1					
ANR	19963	ExpressionStatement	dst [ i + 2 * stride ] = av_clip_pixel ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )	127:8:2487:2560	19092	18	True				
ANR	19964	AssignmentExpression	dst [ i + 2 * stride ] = av_clip_pixel ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )		19092	0		=			
ANR	19965	ArrayIndexing	dst [ i + 2 * stride ]		19092	0					
ANR	19966	Identifier	dst		19092	0					
ANR	19967	AdditiveExpression	i + 2 * stride		19092	1		+			
ANR	19968	Identifier	i		19092	0					
ANR	19969	MultiplicativeExpression	2 * stride		19092	1		*			
ANR	19970	PrimaryExpression	2		19092	0					
ANR	19971	Identifier	stride		19092	1					
ANR	19972	CallExpression	av_clip_pixel ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )		19092	1					
ANR	19973	Callee	av_clip_pixel		19092	0					
ANR	19974	Identifier	av_clip_pixel		19092	0					
ANR	19975	ArgumentList	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		19092	1					
ANR	19976	Argument	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		19092	0					
ANR	19977	AdditiveExpression	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		19092	0		+			
ANR	19978	ArrayIndexing	dst [ i + 2 * stride ]		19092	0					
ANR	19979	Identifier	dst		19092	0					
ANR	19980	AdditiveExpression	i + 2 * stride		19092	1		+			
ANR	19981	Identifier	i		19092	0					
ANR	19982	MultiplicativeExpression	2 * stride		19092	1		*			
ANR	19983	PrimaryExpression	2		19092	0					
ANR	19984	Identifier	stride		19092	1					
ANR	19985	ShiftExpression	( b4 + b3 ) >> 6		19092	1		>>			
ANR	19986	AdditiveExpression	b4 + b3		19092	0		+			
ANR	19987	Identifier	b4		19092	0					
ANR	19988	Identifier	b3		19092	1					
ANR	19989	PrimaryExpression	6		19092	1					
ANR	19990	ExpressionStatement	dst [ i + 3 * stride ] = av_clip_pixel ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )	129:8:2571:2644	19092	19	True				
ANR	19991	AssignmentExpression	dst [ i + 3 * stride ] = av_clip_pixel ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )		19092	0		=			
ANR	19992	ArrayIndexing	dst [ i + 3 * stride ]		19092	0					
ANR	19993	Identifier	dst		19092	0					
ANR	19994	AdditiveExpression	i + 3 * stride		19092	1		+			
ANR	19995	Identifier	i		19092	0					
ANR	19996	MultiplicativeExpression	3 * stride		19092	1		*			
ANR	19997	PrimaryExpression	3		19092	0					
ANR	19998	Identifier	stride		19092	1					
ANR	19999	CallExpression	av_clip_pixel ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )		19092	1					
ANR	20000	Callee	av_clip_pixel		19092	0					
ANR	20001	Identifier	av_clip_pixel		19092	0					
ANR	20002	ArgumentList	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		19092	1					
ANR	20003	Argument	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		19092	0					
ANR	20004	AdditiveExpression	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		19092	0		+			
ANR	20005	ArrayIndexing	dst [ i + 3 * stride ]		19092	0					
ANR	20006	Identifier	dst		19092	0					
ANR	20007	AdditiveExpression	i + 3 * stride		19092	1		+			
ANR	20008	Identifier	i		19092	0					
ANR	20009	MultiplicativeExpression	3 * stride		19092	1		*			
ANR	20010	PrimaryExpression	3		19092	0					
ANR	20011	Identifier	stride		19092	1					
ANR	20012	ShiftExpression	( b6 + b1 ) >> 6		19092	1		>>			
ANR	20013	AdditiveExpression	b6 + b1		19092	0		+			
ANR	20014	Identifier	b6		19092	0					
ANR	20015	Identifier	b1		19092	1					
ANR	20016	PrimaryExpression	6		19092	1					
ANR	20017	ExpressionStatement	dst [ i + 4 * stride ] = av_clip_pixel ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )	131:8:2655:2728	19092	20	True				
ANR	20018	AssignmentExpression	dst [ i + 4 * stride ] = av_clip_pixel ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )		19092	0		=			
ANR	20019	ArrayIndexing	dst [ i + 4 * stride ]		19092	0					
ANR	20020	Identifier	dst		19092	0					
ANR	20021	AdditiveExpression	i + 4 * stride		19092	1		+			
ANR	20022	Identifier	i		19092	0					
ANR	20023	MultiplicativeExpression	4 * stride		19092	1		*			
ANR	20024	PrimaryExpression	4		19092	0					
ANR	20025	Identifier	stride		19092	1					
ANR	20026	CallExpression	av_clip_pixel ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )		19092	1					
ANR	20027	Callee	av_clip_pixel		19092	0					
ANR	20028	Identifier	av_clip_pixel		19092	0					
ANR	20029	ArgumentList	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		19092	1					
ANR	20030	Argument	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		19092	0					
ANR	20031	AdditiveExpression	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		19092	0		+			
ANR	20032	ArrayIndexing	dst [ i + 4 * stride ]		19092	0					
ANR	20033	Identifier	dst		19092	0					
ANR	20034	AdditiveExpression	i + 4 * stride		19092	1		+			
ANR	20035	Identifier	i		19092	0					
ANR	20036	MultiplicativeExpression	4 * stride		19092	1		*			
ANR	20037	PrimaryExpression	4		19092	0					
ANR	20038	Identifier	stride		19092	1					
ANR	20039	ShiftExpression	( b6 - b1 ) >> 6		19092	1		>>			
ANR	20040	AdditiveExpression	b6 - b1		19092	0		-			
ANR	20041	Identifier	b6		19092	0					
ANR	20042	Identifier	b1		19092	1					
ANR	20043	PrimaryExpression	6		19092	1					
ANR	20044	ExpressionStatement	dst [ i + 5 * stride ] = av_clip_pixel ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )	133:8:2739:2812	19092	21	True				
ANR	20045	AssignmentExpression	dst [ i + 5 * stride ] = av_clip_pixel ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )		19092	0		=			
ANR	20046	ArrayIndexing	dst [ i + 5 * stride ]		19092	0					
ANR	20047	Identifier	dst		19092	0					
ANR	20048	AdditiveExpression	i + 5 * stride		19092	1		+			
ANR	20049	Identifier	i		19092	0					
ANR	20050	MultiplicativeExpression	5 * stride		19092	1		*			
ANR	20051	PrimaryExpression	5		19092	0					
ANR	20052	Identifier	stride		19092	1					
ANR	20053	CallExpression	av_clip_pixel ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )		19092	1					
ANR	20054	Callee	av_clip_pixel		19092	0					
ANR	20055	Identifier	av_clip_pixel		19092	0					
ANR	20056	ArgumentList	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		19092	1					
ANR	20057	Argument	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		19092	0					
ANR	20058	AdditiveExpression	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		19092	0		+			
ANR	20059	ArrayIndexing	dst [ i + 5 * stride ]		19092	0					
ANR	20060	Identifier	dst		19092	0					
ANR	20061	AdditiveExpression	i + 5 * stride		19092	1		+			
ANR	20062	Identifier	i		19092	0					
ANR	20063	MultiplicativeExpression	5 * stride		19092	1		*			
ANR	20064	PrimaryExpression	5		19092	0					
ANR	20065	Identifier	stride		19092	1					
ANR	20066	ShiftExpression	( b4 - b3 ) >> 6		19092	1		>>			
ANR	20067	AdditiveExpression	b4 - b3		19092	0		-			
ANR	20068	Identifier	b4		19092	0					
ANR	20069	Identifier	b3		19092	1					
ANR	20070	PrimaryExpression	6		19092	1					
ANR	20071	ExpressionStatement	dst [ i + 6 * stride ] = av_clip_pixel ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )	135:8:2823:2896	19092	22	True				
ANR	20072	AssignmentExpression	dst [ i + 6 * stride ] = av_clip_pixel ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )		19092	0		=			
ANR	20073	ArrayIndexing	dst [ i + 6 * stride ]		19092	0					
ANR	20074	Identifier	dst		19092	0					
ANR	20075	AdditiveExpression	i + 6 * stride		19092	1		+			
ANR	20076	Identifier	i		19092	0					
ANR	20077	MultiplicativeExpression	6 * stride		19092	1		*			
ANR	20078	PrimaryExpression	6		19092	0					
ANR	20079	Identifier	stride		19092	1					
ANR	20080	CallExpression	av_clip_pixel ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )		19092	1					
ANR	20081	Callee	av_clip_pixel		19092	0					
ANR	20082	Identifier	av_clip_pixel		19092	0					
ANR	20083	ArgumentList	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		19092	1					
ANR	20084	Argument	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		19092	0					
ANR	20085	AdditiveExpression	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		19092	0		+			
ANR	20086	ArrayIndexing	dst [ i + 6 * stride ]		19092	0					
ANR	20087	Identifier	dst		19092	0					
ANR	20088	AdditiveExpression	i + 6 * stride		19092	1		+			
ANR	20089	Identifier	i		19092	0					
ANR	20090	MultiplicativeExpression	6 * stride		19092	1		*			
ANR	20091	PrimaryExpression	6		19092	0					
ANR	20092	Identifier	stride		19092	1					
ANR	20093	ShiftExpression	( b2 - b5 ) >> 6		19092	1		>>			
ANR	20094	AdditiveExpression	b2 - b5		19092	0		-			
ANR	20095	Identifier	b2		19092	0					
ANR	20096	Identifier	b5		19092	1					
ANR	20097	PrimaryExpression	6		19092	1					
ANR	20098	ExpressionStatement	dst [ i + 7 * stride ] = av_clip_pixel ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )	137:8:2907:2980	19092	23	True				
ANR	20099	AssignmentExpression	dst [ i + 7 * stride ] = av_clip_pixel ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )		19092	0		=			
ANR	20100	ArrayIndexing	dst [ i + 7 * stride ]		19092	0					
ANR	20101	Identifier	dst		19092	0					
ANR	20102	AdditiveExpression	i + 7 * stride		19092	1		+			
ANR	20103	Identifier	i		19092	0					
ANR	20104	MultiplicativeExpression	7 * stride		19092	1		*			
ANR	20105	PrimaryExpression	7		19092	0					
ANR	20106	Identifier	stride		19092	1					
ANR	20107	CallExpression	av_clip_pixel ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )		19092	1					
ANR	20108	Callee	av_clip_pixel		19092	0					
ANR	20109	Identifier	av_clip_pixel		19092	0					
ANR	20110	ArgumentList	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		19092	1					
ANR	20111	Argument	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		19092	0					
ANR	20112	AdditiveExpression	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		19092	0		+			
ANR	20113	ArrayIndexing	dst [ i + 7 * stride ]		19092	0					
ANR	20114	Identifier	dst		19092	0					
ANR	20115	AdditiveExpression	i + 7 * stride		19092	1		+			
ANR	20116	Identifier	i		19092	0					
ANR	20117	MultiplicativeExpression	7 * stride		19092	1		*			
ANR	20118	PrimaryExpression	7		19092	0					
ANR	20119	Identifier	stride		19092	1					
ANR	20120	ShiftExpression	( b0 - b7 ) >> 6		19092	1		>>			
ANR	20121	AdditiveExpression	b0 - b7		19092	0		-			
ANR	20122	Identifier	b0		19092	0					
ANR	20123	Identifier	b7		19092	1					
ANR	20124	PrimaryExpression	6		19092	1					
ANR	20125	ExpressionStatement	"memset ( block , 0 , 64 * sizeof ( dctcoef ) )"	143:4:2996:3034	19092	7	True				
ANR	20126	CallExpression	"memset ( block , 0 , 64 * sizeof ( dctcoef ) )"		19092	0					
ANR	20127	Callee	memset		19092	0					
ANR	20128	Identifier	memset		19092	0					
ANR	20129	ArgumentList	block		19092	1					
ANR	20130	Argument	block		19092	0					
ANR	20131	Identifier	block		19092	0					
ANR	20132	Argument	0		19092	1					
ANR	20133	PrimaryExpression	0		19092	0					
ANR	20134	Argument	64 * sizeof ( dctcoef )		19092	2					
ANR	20135	MultiplicativeExpression	64 * sizeof ( dctcoef )		19092	0		*			
ANR	20136	PrimaryExpression	64		19092	0					
ANR	20137	SizeofExpression	sizeof ( dctcoef )		19092	1					
ANR	20138	Sizeof	sizeof		19092	0					
ANR	20139	SizeofOperand	dctcoef		19092	1					
ANR	20140	ReturnType	void FUNCC		19092	1					
ANR	20141	Identifier	( ff_h264_idct8_add )		19092	2					
ANR	20142	Identifier	ff_h264_idct8_add		19092	3					
ANR	20143	ParameterList	"uint8_t * _dst , int16_t * _block , int stride"		19092	4					
ANR	20144	Parameter	uint8_t * _dst	1:30:30:42	19092	0	True				
ANR	20145	ParameterType	uint8_t *		19092	0					
ANR	20146	Identifier	_dst		19092	1					
ANR	20147	Parameter	int16_t * _block	1:45:45:59	19092	1	True				
ANR	20148	ParameterType	int16_t *		19092	0					
ANR	20149	Identifier	_block		19092	1					
ANR	20150	Parameter	int stride	1:62:62:71	19092	2	True				
ANR	20151	ParameterType	int		19092	0					
ANR	20152	Identifier	stride		19092	1					
ANR	20153	CFGEntryNode	ENTRY		19092		True				
ANR	20154	CFGExitNode	EXIT		19092		True				
ANR	20155	Symbol	* stride		19092						
ANR	20156	Symbol	dst		19092						
ANR	20157	Symbol	stride		19092						
ANR	20158	Symbol	b0		19092						
ANR	20159	Symbol	b1		19092						
ANR	20160	Symbol	b2		19092						
ANR	20161	Symbol	* dst		19092						
ANR	20162	Symbol	b3		19092						
ANR	20163	Symbol	b4		19092						
ANR	20164	Symbol	b5		19092						
ANR	20165	Symbol	b6		19092						
ANR	20166	Symbol	b7		19092						
ANR	20167	Symbol	av_clip_pixel		19092						
ANR	20168	Symbol	block		19092						
ANR	20169	Symbol	i		19092						
ANR	20170	Symbol	_dst		19092						
ANR	20171	Symbol	* block		19092						
ANR	20172	Symbol	a0		19092						
ANR	20173	Symbol	a1		19092						
ANR	20174	Symbol	a2		19092						
ANR	20175	Symbol	a3		19092						
ANR	20176	Symbol	* i		19092						
ANR	20177	Symbol	a4		19092						
ANR	20178	Symbol	a5		19092						
ANR	20179	Symbol	a6		19092						
ANR	20180	Symbol	a7		19092						
ANR	20181	Symbol	_block		19092						
