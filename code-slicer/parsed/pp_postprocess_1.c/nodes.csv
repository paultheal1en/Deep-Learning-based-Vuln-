command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6583732	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pp_postprocess_1.c								
ANR	6583733	Function	pp_postprocess	1:0:0:3689							
ANR	6583734	FunctionDef	"pp_postprocess (const uint8_t * src [ 3 ] , const int srcStride [ 3 ] , uint8_t * dst [ 3 ] , const int dstStride [ 3 ] , int width , int height , const QP_STORE_T * QP_store , int QPStride , pp_mode * vm , void * vc , int pict_type)"		6583733	0					
ANR	6583735	CompoundStatement		11:0:305:3689	6583733	0					
ANR	6583736	IdentifierDeclStatement	int mbWidth = ( width + 15 ) >> 4 ;	13:4:312:339	6583733	0	True				
ANR	6583737	IdentifierDecl	mbWidth = ( width + 15 ) >> 4		6583733	0					
ANR	6583738	IdentifierDeclType	int		6583733	0					
ANR	6583739	Identifier	mbWidth		6583733	1					
ANR	6583740	AssignmentExpression	mbWidth = ( width + 15 ) >> 4		6583733	2		=			
ANR	6583741	Identifier	mbWidth		6583733	0					
ANR	6583742	ShiftExpression	( width + 15 ) >> 4		6583733	1		>>			
ANR	6583743	AdditiveExpression	width + 15		6583733	0		+			
ANR	6583744	Identifier	width		6583733	0					
ANR	6583745	PrimaryExpression	15		6583733	1					
ANR	6583746	PrimaryExpression	4		6583733	1					
ANR	6583747	IdentifierDeclStatement	int mbHeight = ( height + 15 ) >> 4 ;	15:4:346:374	6583733	1	True				
ANR	6583748	IdentifierDecl	mbHeight = ( height + 15 ) >> 4		6583733	0					
ANR	6583749	IdentifierDeclType	int		6583733	0					
ANR	6583750	Identifier	mbHeight		6583733	1					
ANR	6583751	AssignmentExpression	mbHeight = ( height + 15 ) >> 4		6583733	2		=			
ANR	6583752	Identifier	mbHeight		6583733	0					
ANR	6583753	ShiftExpression	( height + 15 ) >> 4		6583733	1		>>			
ANR	6583754	AdditiveExpression	height + 15		6583733	0		+			
ANR	6583755	Identifier	height		6583733	0					
ANR	6583756	PrimaryExpression	15		6583733	1					
ANR	6583757	PrimaryExpression	4		6583733	1					
ANR	6583758	IdentifierDeclStatement	PPMode * mode = vm ;	17:4:381:398	6583733	2	True				
ANR	6583759	IdentifierDecl	* mode = vm		6583733	0					
ANR	6583760	IdentifierDeclType	PPMode *		6583733	0					
ANR	6583761	Identifier	mode		6583733	1					
ANR	6583762	AssignmentExpression	* mode = vm		6583733	2		=			
ANR	6583763	Identifier	vm		6583733	0					
ANR	6583764	Identifier	vm		6583733	1					
ANR	6583765	IdentifierDeclStatement	PPContext * c = vc ;	19:4:405:422	6583733	3	True				
ANR	6583766	IdentifierDecl	* c = vc		6583733	0					
ANR	6583767	IdentifierDeclType	PPContext *		6583733	0					
ANR	6583768	Identifier	c		6583733	1					
ANR	6583769	AssignmentExpression	* c = vc		6583733	2		=			
ANR	6583770	Identifier	vc		6583733	0					
ANR	6583771	Identifier	vc		6583733	1					
ANR	6583772	IdentifierDeclStatement	"int minStride = FFMAX ( FFABS ( srcStride [ 0 ] ) , FFABS ( dstStride [ 0 ] ) ) ;"	21:4:429:491	6583733	4	True				
ANR	6583773	IdentifierDecl	"minStride = FFMAX ( FFABS ( srcStride [ 0 ] ) , FFABS ( dstStride [ 0 ] ) )"		6583733	0					
ANR	6583774	IdentifierDeclType	int		6583733	0					
ANR	6583775	Identifier	minStride		6583733	1					
ANR	6583776	AssignmentExpression	"minStride = FFMAX ( FFABS ( srcStride [ 0 ] ) , FFABS ( dstStride [ 0 ] ) )"		6583733	2		=			
ANR	6583777	Identifier	minStride		6583733	0					
ANR	6583778	CallExpression	"FFMAX ( FFABS ( srcStride [ 0 ] ) , FFABS ( dstStride [ 0 ] ) )"		6583733	1					
ANR	6583779	Callee	FFMAX		6583733	0					
ANR	6583780	Identifier	FFMAX		6583733	0					
ANR	6583781	ArgumentList	FFABS ( srcStride [ 0 ] )		6583733	1					
ANR	6583782	Argument	FFABS ( srcStride [ 0 ] )		6583733	0					
ANR	6583783	CallExpression	FFABS ( srcStride [ 0 ] )		6583733	0					
ANR	6583784	Callee	FFABS		6583733	0					
ANR	6583785	Identifier	FFABS		6583733	0					
ANR	6583786	ArgumentList	srcStride [ 0 ]		6583733	1					
ANR	6583787	Argument	srcStride [ 0 ]		6583733	0					
ANR	6583788	ArrayIndexing	srcStride [ 0 ]		6583733	0					
ANR	6583789	Identifier	srcStride		6583733	0					
ANR	6583790	PrimaryExpression	0		6583733	1					
ANR	6583791	Argument	FFABS ( dstStride [ 0 ] )		6583733	1					
ANR	6583792	CallExpression	FFABS ( dstStride [ 0 ] )		6583733	0					
ANR	6583793	Callee	FFABS		6583733	0					
ANR	6583794	Identifier	FFABS		6583733	0					
ANR	6583795	ArgumentList	dstStride [ 0 ]		6583733	1					
ANR	6583796	Argument	dstStride [ 0 ]		6583733	0					
ANR	6583797	ArrayIndexing	dstStride [ 0 ]		6583733	0					
ANR	6583798	Identifier	dstStride		6583733	0					
ANR	6583799	PrimaryExpression	0		6583733	1					
ANR	6583800	IdentifierDeclStatement	int absQPStride = FFABS ( QPStride ) ;	23:4:498:531	6583733	5	True				
ANR	6583801	IdentifierDecl	absQPStride = FFABS ( QPStride )		6583733	0					
ANR	6583802	IdentifierDeclType	int		6583733	0					
ANR	6583803	Identifier	absQPStride		6583733	1					
ANR	6583804	AssignmentExpression	absQPStride = FFABS ( QPStride )		6583733	2		=			
ANR	6583805	Identifier	absQPStride		6583733	0					
ANR	6583806	CallExpression	FFABS ( QPStride )		6583733	1					
ANR	6583807	Callee	FFABS		6583733	0					
ANR	6583808	Identifier	FFABS		6583733	0					
ANR	6583809	ArgumentList	QPStride		6583733	1					
ANR	6583810	Argument	QPStride		6583733	0					
ANR	6583811	Identifier	QPStride		6583733	0					
ANR	6583812	IfStatement	if ( c -> stride < minStride || c -> qpStride < absQPStride )		6583733	6					
ANR	6583813	Condition	c -> stride < minStride || c -> qpStride < absQPStride	29:7:597:646	6583733	0	True				
ANR	6583814	OrExpression	c -> stride < minStride || c -> qpStride < absQPStride		6583733	0		||			
ANR	6583815	RelationalExpression	c -> stride < minStride		6583733	0		<			
ANR	6583816	PtrMemberAccess	c -> stride		6583733	0					
ANR	6583817	Identifier	c		6583733	0					
ANR	6583818	Identifier	stride		6583733	1					
ANR	6583819	Identifier	minStride		6583733	1					
ANR	6583820	RelationalExpression	c -> qpStride < absQPStride		6583733	1		<			
ANR	6583821	PtrMemberAccess	c -> qpStride		6583733	0					
ANR	6583822	Identifier	c		6583733	0					
ANR	6583823	Identifier	qpStride		6583733	1					
ANR	6583824	Identifier	absQPStride		6583733	1					
ANR	6583825	ExpressionStatement	"reallocBuffers ( c , width , height , FFMAX ( minStride , c -> stride ) , FFMAX ( c -> qpStride , absQPStride ) )"	31:8:658:800	6583733	1	True				
ANR	6583826	CallExpression	"reallocBuffers ( c , width , height , FFMAX ( minStride , c -> stride ) , FFMAX ( c -> qpStride , absQPStride ) )"		6583733	0					
ANR	6583827	Callee	reallocBuffers		6583733	0					
ANR	6583828	Identifier	reallocBuffers		6583733	0					
ANR	6583829	ArgumentList	c		6583733	1					
ANR	6583830	Argument	c		6583733	0					
ANR	6583831	Identifier	c		6583733	0					
ANR	6583832	Argument	width		6583733	1					
ANR	6583833	Identifier	width		6583733	0					
ANR	6583834	Argument	height		6583733	2					
ANR	6583835	Identifier	height		6583733	0					
ANR	6583836	Argument	"FFMAX ( minStride , c -> stride )"		6583733	3					
ANR	6583837	CallExpression	"FFMAX ( minStride , c -> stride )"		6583733	0					
ANR	6583838	Callee	FFMAX		6583733	0					
ANR	6583839	Identifier	FFMAX		6583733	0					
ANR	6583840	ArgumentList	minStride		6583733	1					
ANR	6583841	Argument	minStride		6583733	0					
ANR	6583842	Identifier	minStride		6583733	0					
ANR	6583843	Argument	c -> stride		6583733	1					
ANR	6583844	PtrMemberAccess	c -> stride		6583733	0					
ANR	6583845	Identifier	c		6583733	0					
ANR	6583846	Identifier	stride		6583733	1					
ANR	6583847	Argument	"FFMAX ( c -> qpStride , absQPStride )"		6583733	4					
ANR	6583848	CallExpression	"FFMAX ( c -> qpStride , absQPStride )"		6583733	0					
ANR	6583849	Callee	FFMAX		6583733	0					
ANR	6583850	Identifier	FFMAX		6583733	0					
ANR	6583851	ArgumentList	c -> qpStride		6583733	1					
ANR	6583852	Argument	c -> qpStride		6583733	0					
ANR	6583853	PtrMemberAccess	c -> qpStride		6583733	0					
ANR	6583854	Identifier	c		6583733	0					
ANR	6583855	Identifier	qpStride		6583733	1					
ANR	6583856	Argument	absQPStride		6583733	1					
ANR	6583857	Identifier	absQPStride		6583733	0					
ANR	6583858	IfStatement	if ( ! QP_store || ( mode -> lumMode & FORCE_QUANT ) )		6583733	7					
ANR	6583859	Condition	! QP_store || ( mode -> lumMode & FORCE_QUANT )	39:7:812:853	6583733	0	True				
ANR	6583860	OrExpression	! QP_store || ( mode -> lumMode & FORCE_QUANT )		6583733	0		||			
ANR	6583861	UnaryOperationExpression	! QP_store		6583733	0					
ANR	6583862	UnaryOperator	!		6583733	0					
ANR	6583863	Identifier	QP_store		6583733	1					
ANR	6583864	BitAndExpression	mode -> lumMode & FORCE_QUANT		6583733	1		&			
ANR	6583865	PtrMemberAccess	mode -> lumMode		6583733	0					
ANR	6583866	Identifier	mode		6583733	0					
ANR	6583867	Identifier	lumMode		6583733	1					
ANR	6583868	Identifier	FORCE_QUANT		6583733	1					
ANR	6583869	CompoundStatement		31:8:560:565	6583733	1					
ANR	6583870	IdentifierDeclStatement	int i ;	41:8:866:871	6583733	0	True				
ANR	6583871	IdentifierDecl	i		6583733	0					
ANR	6583872	IdentifierDeclType	int		6583733	0					
ANR	6583873	Identifier	i		6583733	1					
ANR	6583874	ExpressionStatement	QP_store = c -> forcedQPTable	43:8:882:908	6583733	1	True				
ANR	6583875	AssignmentExpression	QP_store = c -> forcedQPTable		6583733	0		=			
ANR	6583876	Identifier	QP_store		6583733	0					
ANR	6583877	PtrMemberAccess	c -> forcedQPTable		6583733	1					
ANR	6583878	Identifier	c		6583733	0					
ANR	6583879	Identifier	forcedQPTable		6583733	1					
ANR	6583880	ExpressionStatement	absQPStride = QPStride = 0	45:8:919:945	6583733	2	True				
ANR	6583881	AssignmentExpression	absQPStride = QPStride = 0		6583733	0		=			
ANR	6583882	Identifier	absQPStride		6583733	0					
ANR	6583883	AssignmentExpression	QPStride = 0		6583733	1		=			
ANR	6583884	Identifier	QPStride		6583733	0					
ANR	6583885	PrimaryExpression	0		6583733	1					
ANR	6583886	IfStatement	if ( mode -> lumMode & FORCE_QUANT )		6583733	3					
ANR	6583887	Condition	mode -> lumMode & FORCE_QUANT	47:11:959:985	6583733	0	True				
ANR	6583888	BitAndExpression	mode -> lumMode & FORCE_QUANT		6583733	0		&			
ANR	6583889	PtrMemberAccess	mode -> lumMode		6583733	0					
ANR	6583890	Identifier	mode		6583733	0					
ANR	6583891	Identifier	lumMode		6583733	1					
ANR	6583892	Identifier	FORCE_QUANT		6583733	1					
ANR	6583893	ForStatement	for ( i = 0 ; i < mbWidth ; i ++ )		6583733	1					
ANR	6583894	ForInit	i = 0 ;	49:16:1005:1008	6583733	0	True				
ANR	6583895	AssignmentExpression	i = 0		6583733	0		=			
ANR	6583896	Identifier	i		6583733	0					
ANR	6583897	PrimaryExpression	0		6583733	1					
ANR	6583898	Condition	i < mbWidth	49:21:1010:1018	6583733	1	True				
ANR	6583899	RelationalExpression	i < mbWidth		6583733	0		<			
ANR	6583900	Identifier	i		6583733	0					
ANR	6583901	Identifier	mbWidth		6583733	1					
ANR	6583902	PostIncDecOperationExpression	i ++	49:32:1021:1023	6583733	2	True				
ANR	6583903	Identifier	i		6583733	0					
ANR	6583904	IncDec	++		6583733	1					
ANR	6583905	ExpressionStatement	c -> forcedQPTable [ i ] = mode -> forcedQuant	49:37:1026:1064	6583733	3	True				
ANR	6583906	AssignmentExpression	c -> forcedQPTable [ i ] = mode -> forcedQuant		6583733	0		=			
ANR	6583907	ArrayIndexing	c -> forcedQPTable [ i ]		6583733	0					
ANR	6583908	PtrMemberAccess	c -> forcedQPTable		6583733	0					
ANR	6583909	Identifier	c		6583733	0					
ANR	6583910	Identifier	forcedQPTable		6583733	1					
ANR	6583911	Identifier	i		6583733	1					
ANR	6583912	PtrMemberAccess	mode -> forcedQuant		6583733	1					
ANR	6583913	Identifier	mode		6583733	0					
ANR	6583914	Identifier	forcedQuant		6583733	1					
ANR	6583915	ElseStatement	else		6583733	0					
ANR	6583916	ForStatement	for ( i = 0 ; i < mbWidth ; i ++ )		6583733	0					
ANR	6583917	ForInit	i = 0 ;	53:16:1097:1100	6583733	0	True				
ANR	6583918	AssignmentExpression	i = 0		6583733	0		=			
ANR	6583919	Identifier	i		6583733	0					
ANR	6583920	PrimaryExpression	0		6583733	1					
ANR	6583921	Condition	i < mbWidth	53:21:1102:1110	6583733	1	True				
ANR	6583922	RelationalExpression	i < mbWidth		6583733	0		<			
ANR	6583923	Identifier	i		6583733	0					
ANR	6583924	Identifier	mbWidth		6583733	1					
ANR	6583925	PostIncDecOperationExpression	i ++	53:32:1113:1115	6583733	2	True				
ANR	6583926	Identifier	i		6583733	0					
ANR	6583927	IncDec	++		6583733	1					
ANR	6583928	ExpressionStatement	c -> forcedQPTable [ i ] = 1	53:37:1118:1140	6583733	3	True				
ANR	6583929	AssignmentExpression	c -> forcedQPTable [ i ] = 1		6583733	0		=			
ANR	6583930	ArrayIndexing	c -> forcedQPTable [ i ]		6583733	0					
ANR	6583931	PtrMemberAccess	c -> forcedQPTable		6583733	0					
ANR	6583932	Identifier	c		6583733	0					
ANR	6583933	Identifier	forcedQPTable		6583733	1					
ANR	6583934	Identifier	i		6583733	1					
ANR	6583935	PrimaryExpression	1		6583733	1					
ANR	6583936	IfStatement	if ( pict_type & PP_PICT_TYPE_QP2 )		6583733	8					
ANR	6583937	Condition	pict_type & PP_PICT_TYPE_QP2	59:7:1159:1186	6583733	0	True				
ANR	6583938	BitAndExpression	pict_type & PP_PICT_TYPE_QP2		6583733	0		&			
ANR	6583939	Identifier	pict_type		6583733	0					
ANR	6583940	Identifier	PP_PICT_TYPE_QP2		6583733	1					
ANR	6583941	CompoundStatement		53:8:909:964	6583733	1					
ANR	6583942	IdentifierDeclStatement	int i ;	61:8:1199:1204	6583733	0	True				
ANR	6583943	IdentifierDecl	i		6583733	0					
ANR	6583944	IdentifierDeclType	int		6583733	0					
ANR	6583945	Identifier	i		6583733	1					
ANR	6583946	IdentifierDeclStatement	"const int count = FFMAX ( mbHeight * absQPStride , mbWidth ) ;"	63:8:1215:1270	6583733	1	True				
ANR	6583947	IdentifierDecl	"count = FFMAX ( mbHeight * absQPStride , mbWidth )"		6583733	0					
ANR	6583948	IdentifierDeclType	const int		6583733	0					
ANR	6583949	Identifier	count		6583733	1					
ANR	6583950	AssignmentExpression	"count = FFMAX ( mbHeight * absQPStride , mbWidth )"		6583733	2		=			
ANR	6583951	Identifier	count		6583733	0					
ANR	6583952	CallExpression	"FFMAX ( mbHeight * absQPStride , mbWidth )"		6583733	1					
ANR	6583953	Callee	FFMAX		6583733	0					
ANR	6583954	Identifier	FFMAX		6583733	0					
ANR	6583955	ArgumentList	mbHeight * absQPStride		6583733	1					
ANR	6583956	Argument	mbHeight * absQPStride		6583733	0					
ANR	6583957	MultiplicativeExpression	mbHeight * absQPStride		6583733	0		*			
ANR	6583958	Identifier	mbHeight		6583733	0					
ANR	6583959	Identifier	absQPStride		6583733	1					
ANR	6583960	Argument	mbWidth		6583733	1					
ANR	6583961	Identifier	mbWidth		6583733	0					
ANR	6583962	ForStatement	for ( i = 0 ; i < ( count >> 2 ) ; i ++ )		6583733	2					
ANR	6583963	ForInit	i = 0 ;	65:12:1285:1288	6583733	0	True				
ANR	6583964	AssignmentExpression	i = 0		6583733	0		=			
ANR	6583965	Identifier	i		6583733	0					
ANR	6583966	PrimaryExpression	0		6583733	1					
ANR	6583967	Condition	i < ( count >> 2 )	65:17:1290:1301	6583733	1	True				
ANR	6583968	RelationalExpression	i < ( count >> 2 )		6583733	0		<			
ANR	6583969	Identifier	i		6583733	0					
ANR	6583970	ShiftExpression	count >> 2		6583733	1		>>			
ANR	6583971	Identifier	count		6583733	0					
ANR	6583972	PrimaryExpression	2		6583733	1					
ANR	6583973	PostIncDecOperationExpression	i ++	65:31:1304:1306	6583733	2	True				
ANR	6583974	Identifier	i		6583733	0					
ANR	6583975	IncDec	++		6583733	1					
ANR	6583976	CompoundStatement		55:35:1002:1002	6583733	3					
ANR	6583977	ExpressionStatement	( ( uint32_t * ) c -> stdQPTable ) [ i ] = ( ( ( const uint32_t * ) QP_store ) [ i ] >> 1 ) & 0x7F7F7F7F	67:12:1323:1403	6583733	0	True				
ANR	6583978	AssignmentExpression	( ( uint32_t * ) c -> stdQPTable ) [ i ] = ( ( ( const uint32_t * ) QP_store ) [ i ] >> 1 ) & 0x7F7F7F7F		6583733	0		=			
ANR	6583979	ArrayIndexing	( ( uint32_t * ) c -> stdQPTable ) [ i ]		6583733	0					
ANR	6583980	CastExpression	( uint32_t * ) c -> stdQPTable		6583733	0					
ANR	6583981	CastTarget	uint32_t *		6583733	0					
ANR	6583982	PtrMemberAccess	c -> stdQPTable		6583733	1					
ANR	6583983	Identifier	c		6583733	0					
ANR	6583984	Identifier	stdQPTable		6583733	1					
ANR	6583985	Identifier	i		6583733	1					
ANR	6583986	BitAndExpression	( ( ( const uint32_t * ) QP_store ) [ i ] >> 1 ) & 0x7F7F7F7F		6583733	1		&			
ANR	6583987	ShiftExpression	( ( const uint32_t * ) QP_store ) [ i ] >> 1		6583733	0		>>			
ANR	6583988	ArrayIndexing	( ( const uint32_t * ) QP_store ) [ i ]		6583733	0					
ANR	6583989	CastExpression	( const uint32_t * ) QP_store		6583733	0					
ANR	6583990	CastTarget	const uint32_t *		6583733	0					
ANR	6583991	Identifier	QP_store		6583733	1					
ANR	6583992	Identifier	i		6583733	1					
ANR	6583993	PrimaryExpression	1		6583733	1					
ANR	6583994	PrimaryExpression	0x7F7F7F7F		6583733	1					
ANR	6583995	ForStatement	for ( i <<= 2 ; i < count ; i ++ )		6583733	3					
ANR	6583996	ForInit	i <<= 2 ;	71:12:1429:1434	6583733	0	True				
ANR	6583997	AssignmentExpression	i <<= 2		6583733	0		<<=			
ANR	6583998	Identifier	i		6583733	0					
ANR	6583999	PrimaryExpression	2		6583733	1					
ANR	6584000	Condition	i < count	71:19:1436:1442	6583733	1	True				
ANR	6584001	RelationalExpression	i < count		6583733	0		<			
ANR	6584002	Identifier	i		6583733	0					
ANR	6584003	Identifier	count		6583733	1					
ANR	6584004	PostIncDecOperationExpression	i ++	71:28:1445:1447	6583733	2	True				
ANR	6584005	Identifier	i		6583733	0					
ANR	6584006	IncDec	++		6583733	1					
ANR	6584007	CompoundStatement		61:32:1143:1143	6583733	3					
ANR	6584008	ExpressionStatement	c -> stdQPTable [ i ] = QP_store [ i ] >> 1	73:12:1464:1497	6583733	0	True				
ANR	6584009	AssignmentExpression	c -> stdQPTable [ i ] = QP_store [ i ] >> 1		6583733	0		=			
ANR	6584010	ArrayIndexing	c -> stdQPTable [ i ]		6583733	0					
ANR	6584011	PtrMemberAccess	c -> stdQPTable		6583733	0					
ANR	6584012	Identifier	c		6583733	0					
ANR	6584013	Identifier	stdQPTable		6583733	1					
ANR	6584014	Identifier	i		6583733	1					
ANR	6584015	ShiftExpression	QP_store [ i ] >> 1		6583733	1		>>			
ANR	6584016	ArrayIndexing	QP_store [ i ]		6583733	0					
ANR	6584017	Identifier	QP_store		6583733	0					
ANR	6584018	Identifier	i		6583733	1					
ANR	6584019	PrimaryExpression	1		6583733	1					
ANR	6584020	ExpressionStatement	QP_store = c -> stdQPTable	77:8:1519:1542	6583733	4	True				
ANR	6584021	AssignmentExpression	QP_store = c -> stdQPTable		6583733	0		=			
ANR	6584022	Identifier	QP_store		6583733	0					
ANR	6584023	PtrMemberAccess	c -> stdQPTable		6583733	1					
ANR	6584024	Identifier	c		6583733	0					
ANR	6584025	Identifier	stdQPTable		6583733	1					
ANR	6584026	ExpressionStatement	QPStride = absQPStride	79:8:1553:1574	6583733	5	True				
ANR	6584027	AssignmentExpression	QPStride = absQPStride		6583733	0		=			
ANR	6584028	Identifier	QPStride		6583733	0					
ANR	6584029	Identifier	absQPStride		6583733	1					
ANR	6584030	IfStatement	if ( 0 )		6583733	9					
ANR	6584031	Condition	0	85:7:1593:1593	6583733	0	True				
ANR	6584032	PrimaryExpression	0		6583733	0					
ANR	6584033	CompoundStatement		77:8:1300:1307	6583733	1					
ANR	6584034	IdentifierDeclStatement	"int x , y ;"	87:8:1606:1613	6583733	0	True				
ANR	6584035	IdentifierDecl	x		6583733	0					
ANR	6584036	IdentifierDeclType	int		6583733	0					
ANR	6584037	Identifier	x		6583733	1					
ANR	6584038	IdentifierDecl	y		6583733	1					
ANR	6584039	IdentifierDeclType	int		6583733	0					
ANR	6584040	Identifier	y		6583733	1					
ANR	6584041	ForStatement	for ( y = 0 ; y < mbHeight ; y ++ )		6583733	1					
ANR	6584042	ForInit	y = 0 ;	89:12:1628:1631	6583733	0	True				
ANR	6584043	AssignmentExpression	y = 0		6583733	0		=			
ANR	6584044	Identifier	y		6583733	0					
ANR	6584045	PrimaryExpression	0		6583733	1					
ANR	6584046	Condition	y < mbHeight	89:17:1633:1642	6583733	1	True				
ANR	6584047	RelationalExpression	y < mbHeight		6583733	0		<			
ANR	6584048	Identifier	y		6583733	0					
ANR	6584049	Identifier	mbHeight		6583733	1					
ANR	6584050	PostIncDecOperationExpression	y ++	89:29:1645:1647	6583733	2	True				
ANR	6584051	Identifier	y		6583733	0					
ANR	6584052	IncDec	++		6583733	1					
ANR	6584053	CompoundStatement		79:33:1343:1343	6583733	3					
ANR	6584054	ForStatement	for ( x = 0 ; x < mbWidth ; x ++ )		6583733	0					
ANR	6584055	ForInit	x = 0 ;	91:16:1668:1671	6583733	0	True				
ANR	6584056	AssignmentExpression	x = 0		6583733	0		=			
ANR	6584057	Identifier	x		6583733	0					
ANR	6584058	PrimaryExpression	0		6583733	1					
ANR	6584059	Condition	x < mbWidth	91:21:1673:1681	6583733	1	True				
ANR	6584060	RelationalExpression	x < mbWidth		6583733	0		<			
ANR	6584061	Identifier	x		6583733	0					
ANR	6584062	Identifier	mbWidth		6583733	1					
ANR	6584063	PostIncDecOperationExpression	x ++	91:32:1684:1686	6583733	2	True				
ANR	6584064	Identifier	x		6583733	0					
ANR	6584065	IncDec	++		6583733	1					
ANR	6584066	CompoundStatement		81:36:1382:1382	6583733	3					
ANR	6584067	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""%2d "" , QP_store [ x + y * QPStride ] )"	93:16:1707:1763	6583733	0	True				
ANR	6584068	CallExpression	"av_log ( c , AV_LOG_INFO , ""%2d "" , QP_store [ x + y * QPStride ] )"		6583733	0					
ANR	6584069	Callee	av_log		6583733	0					
ANR	6584070	Identifier	av_log		6583733	0					
ANR	6584071	ArgumentList	c		6583733	1					
ANR	6584072	Argument	c		6583733	0					
ANR	6584073	Identifier	c		6583733	0					
ANR	6584074	Argument	AV_LOG_INFO		6583733	1					
ANR	6584075	Identifier	AV_LOG_INFO		6583733	0					
ANR	6584076	Argument	"""%2d """		6583733	2					
ANR	6584077	PrimaryExpression	"""%2d """		6583733	0					
ANR	6584078	Argument	QP_store [ x + y * QPStride ]		6583733	3					
ANR	6584079	ArrayIndexing	QP_store [ x + y * QPStride ]		6583733	0					
ANR	6584080	Identifier	QP_store		6583733	0					
ANR	6584081	AdditiveExpression	x + y * QPStride		6583733	1		+			
ANR	6584082	Identifier	x		6583733	0					
ANR	6584083	MultiplicativeExpression	y * QPStride		6583733	1		*			
ANR	6584084	Identifier	y		6583733	0					
ANR	6584085	Identifier	QPStride		6583733	1					
ANR	6584086	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""\\n"" )"	97:12:1793:1821	6583733	1	True				
ANR	6584087	CallExpression	"av_log ( c , AV_LOG_INFO , ""\\n"" )"		6583733	0					
ANR	6584088	Callee	av_log		6583733	0					
ANR	6584089	Identifier	av_log		6583733	0					
ANR	6584090	ArgumentList	c		6583733	1					
ANR	6584091	Argument	c		6583733	0					
ANR	6584092	Identifier	c		6583733	0					
ANR	6584093	Argument	AV_LOG_INFO		6583733	1					
ANR	6584094	Identifier	AV_LOG_INFO		6583733	0					
ANR	6584095	Argument	"""\\n"""		6583733	2					
ANR	6584096	PrimaryExpression	"""\\n"""		6583733	0					
ANR	6584097	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""\\n"" )"	101:8:1843:1871	6583733	2	True				
ANR	6584098	CallExpression	"av_log ( c , AV_LOG_INFO , ""\\n"" )"		6583733	0					
ANR	6584099	Callee	av_log		6583733	0					
ANR	6584100	Identifier	av_log		6583733	0					
ANR	6584101	ArgumentList	c		6583733	1					
ANR	6584102	Argument	c		6583733	0					
ANR	6584103	Identifier	c		6583733	0					
ANR	6584104	Argument	AV_LOG_INFO		6583733	1					
ANR	6584105	Identifier	AV_LOG_INFO		6583733	0					
ANR	6584106	Argument	"""\\n"""		6583733	2					
ANR	6584107	PrimaryExpression	"""\\n"""		6583733	0					
ANR	6584108	IfStatement	if ( ( pict_type & 7 ) != 3 )		6583733	10					
ANR	6584109	Condition	( pict_type & 7 ) != 3	107:7:1890:1905	6583733	0	True				
ANR	6584110	EqualityExpression	( pict_type & 7 ) != 3		6583733	0		!=			
ANR	6584111	BitAndExpression	pict_type & 7		6583733	0		&			
ANR	6584112	Identifier	pict_type		6583733	0					
ANR	6584113	PrimaryExpression	7		6583733	1					
ANR	6584114	PrimaryExpression	3		6583733	1					
ANR	6584115	CompoundStatement		97:24:1601:1601	6583733	1					
ANR	6584116	IfStatement	if ( QPStride >= 0 )		6583733	0					
ANR	6584117	Condition	QPStride >= 0	109:12:1922:1934	6583733	0	True				
ANR	6584118	RelationalExpression	QPStride >= 0		6583733	0		>=			
ANR	6584119	Identifier	QPStride		6583733	0					
ANR	6584120	PrimaryExpression	0		6583733	1					
ANR	6584121	CompoundStatement		103:12:1665:1717	6583733	1					
ANR	6584122	IdentifierDeclStatement	int i ;	111:12:1951:1956	6583733	0	True				
ANR	6584123	IdentifierDecl	i		6583733	0					
ANR	6584124	IdentifierDeclType	int		6583733	0					
ANR	6584125	Identifier	i		6583733	1					
ANR	6584126	IdentifierDeclStatement	"const int count = FFMAX ( mbHeight * QPStride , mbWidth ) ;"	113:12:1971:2023	6583733	1	True				
ANR	6584127	IdentifierDecl	"count = FFMAX ( mbHeight * QPStride , mbWidth )"		6583733	0					
ANR	6584128	IdentifierDeclType	const int		6583733	0					
ANR	6584129	Identifier	count		6583733	1					
ANR	6584130	AssignmentExpression	"count = FFMAX ( mbHeight * QPStride , mbWidth )"		6583733	2		=			
ANR	6584131	Identifier	count		6583733	0					
ANR	6584132	CallExpression	"FFMAX ( mbHeight * QPStride , mbWidth )"		6583733	1					
ANR	6584133	Callee	FFMAX		6583733	0					
ANR	6584134	Identifier	FFMAX		6583733	0					
ANR	6584135	ArgumentList	mbHeight * QPStride		6583733	1					
ANR	6584136	Argument	mbHeight * QPStride		6583733	0					
ANR	6584137	MultiplicativeExpression	mbHeight * QPStride		6583733	0		*			
ANR	6584138	Identifier	mbHeight		6583733	0					
ANR	6584139	Identifier	QPStride		6583733	1					
ANR	6584140	Argument	mbWidth		6583733	1					
ANR	6584141	Identifier	mbWidth		6583733	0					
ANR	6584142	ForStatement	for ( i = 0 ; i < ( count >> 2 ) ; i ++ )		6583733	2					
ANR	6584143	ForInit	i = 0 ;	115:16:2042:2045	6583733	0	True				
ANR	6584144	AssignmentExpression	i = 0		6583733	0		=			
ANR	6584145	Identifier	i		6583733	0					
ANR	6584146	PrimaryExpression	0		6583733	1					
ANR	6584147	Condition	i < ( count >> 2 )	115:21:2047:2058	6583733	1	True				
ANR	6584148	RelationalExpression	i < ( count >> 2 )		6583733	0		<			
ANR	6584149	Identifier	i		6583733	0					
ANR	6584150	ShiftExpression	count >> 2		6583733	1		>>			
ANR	6584151	Identifier	count		6583733	0					
ANR	6584152	PrimaryExpression	2		6583733	1					
ANR	6584153	PostIncDecOperationExpression	i ++	115:35:2061:2063	6583733	2	True				
ANR	6584154	Identifier	i		6583733	0					
ANR	6584155	IncDec	++		6583733	1					
ANR	6584156	CompoundStatement		105:39:1759:1759	6583733	3					
ANR	6584157	ExpressionStatement	( ( uint32_t * ) c -> nonBQPTable ) [ i ] = ( ( const uint32_t * ) QP_store ) [ i ] & 0x3F3F3F3F	117:16:2084:2160	6583733	0	True				
ANR	6584158	AssignmentExpression	( ( uint32_t * ) c -> nonBQPTable ) [ i ] = ( ( const uint32_t * ) QP_store ) [ i ] & 0x3F3F3F3F		6583733	0		=			
ANR	6584159	ArrayIndexing	( ( uint32_t * ) c -> nonBQPTable ) [ i ]		6583733	0					
ANR	6584160	CastExpression	( uint32_t * ) c -> nonBQPTable		6583733	0					
ANR	6584161	CastTarget	uint32_t *		6583733	0					
ANR	6584162	PtrMemberAccess	c -> nonBQPTable		6583733	1					
ANR	6584163	Identifier	c		6583733	0					
ANR	6584164	Identifier	nonBQPTable		6583733	1					
ANR	6584165	Identifier	i		6583733	1					
ANR	6584166	BitAndExpression	( ( const uint32_t * ) QP_store ) [ i ] & 0x3F3F3F3F		6583733	1		&			
ANR	6584167	ArrayIndexing	( ( const uint32_t * ) QP_store ) [ i ]		6583733	0					
ANR	6584168	CastExpression	( const uint32_t * ) QP_store		6583733	0					
ANR	6584169	CastTarget	const uint32_t *		6583733	0					
ANR	6584170	Identifier	QP_store		6583733	1					
ANR	6584171	Identifier	i		6583733	1					
ANR	6584172	PrimaryExpression	0x3F3F3F3F		6583733	1					
ANR	6584173	ForStatement	for ( i <<= 2 ; i < count ; i ++ )		6583733	3					
ANR	6584174	ForInit	i <<= 2 ;	121:16:2194:2199	6583733	0	True				
ANR	6584175	AssignmentExpression	i <<= 2		6583733	0		<<=			
ANR	6584176	Identifier	i		6583733	0					
ANR	6584177	PrimaryExpression	2		6583733	1					
ANR	6584178	Condition	i < count	121:23:2201:2207	6583733	1	True				
ANR	6584179	RelationalExpression	i < count		6583733	0		<			
ANR	6584180	Identifier	i		6583733	0					
ANR	6584181	Identifier	count		6583733	1					
ANR	6584182	PostIncDecOperationExpression	i ++	121:32:2210:2212	6583733	2	True				
ANR	6584183	Identifier	i		6583733	0					
ANR	6584184	IncDec	++		6583733	1					
ANR	6584185	CompoundStatement		111:36:1908:1908	6583733	3					
ANR	6584186	ExpressionStatement	c -> nonBQPTable [ i ] = QP_store [ i ] & 0x3F	123:16:2233:2271	6583733	0	True				
ANR	6584187	AssignmentExpression	c -> nonBQPTable [ i ] = QP_store [ i ] & 0x3F		6583733	0		=			
ANR	6584188	ArrayIndexing	c -> nonBQPTable [ i ]		6583733	0					
ANR	6584189	PtrMemberAccess	c -> nonBQPTable		6583733	0					
ANR	6584190	Identifier	c		6583733	0					
ANR	6584191	Identifier	nonBQPTable		6583733	1					
ANR	6584192	Identifier	i		6583733	1					
ANR	6584193	BitAndExpression	QP_store [ i ] & 0x3F		6583733	1		&			
ANR	6584194	ArrayIndexing	QP_store [ i ]		6583733	0					
ANR	6584195	Identifier	QP_store		6583733	0					
ANR	6584196	Identifier	i		6583733	1					
ANR	6584197	PrimaryExpression	0x3F		6583733	1					
ANR	6584198	ElseStatement	else		6583733	0					
ANR	6584199	CompoundStatement		119:12:2013:2020	6583733	0					
ANR	6584200	IdentifierDeclStatement	"int i , j ;"	129:12:2319:2326	6583733	0	True				
ANR	6584201	IdentifierDecl	i		6583733	0					
ANR	6584202	IdentifierDeclType	int		6583733	0					
ANR	6584203	Identifier	i		6583733	1					
ANR	6584204	IdentifierDecl	j		6583733	1					
ANR	6584205	IdentifierDeclType	int		6583733	0					
ANR	6584206	Identifier	j		6583733	1					
ANR	6584207	ForStatement	for ( i = 0 ; i < mbHeight ; i ++ )		6583733	1					
ANR	6584208	ForInit	i = 0 ;	131:16:2345:2348	6583733	0	True				
ANR	6584209	AssignmentExpression	i = 0		6583733	0		=			
ANR	6584210	Identifier	i		6583733	0					
ANR	6584211	PrimaryExpression	0		6583733	1					
ANR	6584212	Condition	i < mbHeight	131:21:2350:2359	6583733	1	True				
ANR	6584213	RelationalExpression	i < mbHeight		6583733	0		<			
ANR	6584214	Identifier	i		6583733	0					
ANR	6584215	Identifier	mbHeight		6583733	1					
ANR	6584216	PostIncDecOperationExpression	i ++	131:33:2362:2364	6583733	2	True				
ANR	6584217	Identifier	i		6583733	0					
ANR	6584218	IncDec	++		6583733	1					
ANR	6584219	CompoundStatement		121:38:2061:2061	6583733	3					
ANR	6584220	ForStatement	for ( j = 0 ; j < absQPStride ; j ++ )		6583733	0					
ANR	6584221	ForInit	j = 0 ;	133:20:2390:2393	6583733	0	True				
ANR	6584222	AssignmentExpression	j = 0		6583733	0		=			
ANR	6584223	Identifier	j		6583733	0					
ANR	6584224	PrimaryExpression	0		6583733	1					
ANR	6584225	Condition	j < absQPStride	133:25:2395:2407	6583733	1	True				
ANR	6584226	RelationalExpression	j < absQPStride		6583733	0		<			
ANR	6584227	Identifier	j		6583733	0					
ANR	6584228	Identifier	absQPStride		6583733	1					
ANR	6584229	PostIncDecOperationExpression	j ++	133:40:2410:2412	6583733	2	True				
ANR	6584230	Identifier	j		6583733	0					
ANR	6584231	IncDec	++		6583733	1					
ANR	6584232	CompoundStatement		123:45:2109:2109	6583733	3					
ANR	6584233	ExpressionStatement	c -> nonBQPTable [ i * absQPStride + j ] = QP_store [ i * QPStride + j ] & 0x3F	135:20:2438:2501	6583733	0	True				
ANR	6584234	AssignmentExpression	c -> nonBQPTable [ i * absQPStride + j ] = QP_store [ i * QPStride + j ] & 0x3F		6583733	0		=			
ANR	6584235	ArrayIndexing	c -> nonBQPTable [ i * absQPStride + j ]		6583733	0					
ANR	6584236	PtrMemberAccess	c -> nonBQPTable		6583733	0					
ANR	6584237	Identifier	c		6583733	0					
ANR	6584238	Identifier	nonBQPTable		6583733	1					
ANR	6584239	AdditiveExpression	i * absQPStride + j		6583733	1		+			
ANR	6584240	MultiplicativeExpression	i * absQPStride		6583733	0		*			
ANR	6584241	Identifier	i		6583733	0					
ANR	6584242	Identifier	absQPStride		6583733	1					
ANR	6584243	Identifier	j		6583733	1					
ANR	6584244	BitAndExpression	QP_store [ i * QPStride + j ] & 0x3F		6583733	1		&			
ANR	6584245	ArrayIndexing	QP_store [ i * QPStride + j ]		6583733	0					
ANR	6584246	Identifier	QP_store		6583733	0					
ANR	6584247	AdditiveExpression	i * QPStride + j		6583733	1		+			
ANR	6584248	MultiplicativeExpression	i * QPStride		6583733	0		*			
ANR	6584249	Identifier	i		6583733	0					
ANR	6584250	Identifier	QPStride		6583733	1					
ANR	6584251	Identifier	j		6583733	1					
ANR	6584252	PrimaryExpression	0x3F		6583733	1					
ANR	6584253	ExpressionStatement	"av_log ( c , AV_LOG_DEBUG , ""using npp filters 0x%X/0x%X\\n"" , mode -> lumMode , mode -> chromMode )"	147:4:2562:2662	6583733	11	True				
ANR	6584254	CallExpression	"av_log ( c , AV_LOG_DEBUG , ""using npp filters 0x%X/0x%X\\n"" , mode -> lumMode , mode -> chromMode )"		6583733	0					
ANR	6584255	Callee	av_log		6583733	0					
ANR	6584256	Identifier	av_log		6583733	0					
ANR	6584257	ArgumentList	c		6583733	1					
ANR	6584258	Argument	c		6583733	0					
ANR	6584259	Identifier	c		6583733	0					
ANR	6584260	Argument	AV_LOG_DEBUG		6583733	1					
ANR	6584261	Identifier	AV_LOG_DEBUG		6583733	0					
ANR	6584262	Argument	"""using npp filters 0x%X/0x%X\\n"""		6583733	2					
ANR	6584263	PrimaryExpression	"""using npp filters 0x%X/0x%X\\n"""		6583733	0					
ANR	6584264	Argument	mode -> lumMode		6583733	3					
ANR	6584265	PtrMemberAccess	mode -> lumMode		6583733	0					
ANR	6584266	Identifier	mode		6583733	0					
ANR	6584267	Identifier	lumMode		6583733	1					
ANR	6584268	Argument	mode -> chromMode		6583733	4					
ANR	6584269	PtrMemberAccess	mode -> chromMode		6583733	0					
ANR	6584270	Identifier	mode		6583733	0					
ANR	6584271	Identifier	chromMode		6583733	1					
ANR	6584272	ExpressionStatement	"postProcess ( src [ 0 ] , srcStride [ 0 ] , dst [ 0 ] , dstStride [ 0 ] , width , height , QP_store , QPStride , 0 , mode , c )"	153:4:2671:2790	6583733	12	True				
ANR	6584273	CallExpression	"postProcess ( src [ 0 ] , srcStride [ 0 ] , dst [ 0 ] , dstStride [ 0 ] , width , height , QP_store , QPStride , 0 , mode , c )"		6583733	0					
ANR	6584274	Callee	postProcess		6583733	0					
ANR	6584275	Identifier	postProcess		6583733	0					
ANR	6584276	ArgumentList	src [ 0 ]		6583733	1					
ANR	6584277	Argument	src [ 0 ]		6583733	0					
ANR	6584278	ArrayIndexing	src [ 0 ]		6583733	0					
ANR	6584279	Identifier	src		6583733	0					
ANR	6584280	PrimaryExpression	0		6583733	1					
ANR	6584281	Argument	srcStride [ 0 ]		6583733	1					
ANR	6584282	ArrayIndexing	srcStride [ 0 ]		6583733	0					
ANR	6584283	Identifier	srcStride		6583733	0					
ANR	6584284	PrimaryExpression	0		6583733	1					
ANR	6584285	Argument	dst [ 0 ]		6583733	2					
ANR	6584286	ArrayIndexing	dst [ 0 ]		6583733	0					
ANR	6584287	Identifier	dst		6583733	0					
ANR	6584288	PrimaryExpression	0		6583733	1					
ANR	6584289	Argument	dstStride [ 0 ]		6583733	3					
ANR	6584290	ArrayIndexing	dstStride [ 0 ]		6583733	0					
ANR	6584291	Identifier	dstStride		6583733	0					
ANR	6584292	PrimaryExpression	0		6583733	1					
ANR	6584293	Argument	width		6583733	4					
ANR	6584294	Identifier	width		6583733	0					
ANR	6584295	Argument	height		6583733	5					
ANR	6584296	Identifier	height		6583733	0					
ANR	6584297	Argument	QP_store		6583733	6					
ANR	6584298	Identifier	QP_store		6583733	0					
ANR	6584299	Argument	QPStride		6583733	7					
ANR	6584300	Identifier	QPStride		6583733	0					
ANR	6584301	Argument	0		6583733	8					
ANR	6584302	PrimaryExpression	0		6583733	0					
ANR	6584303	Argument	mode		6583733	9					
ANR	6584304	Identifier	mode		6583733	0					
ANR	6584305	Argument	c		6583733	10					
ANR	6584306	Identifier	c		6583733	0					
ANR	6584307	IfStatement	if ( ! ( src [ 1 ] && src [ 2 ] && dst [ 1 ] && dst [ 2 ] ) )		6583733	13					
ANR	6584308	Condition	! ( src [ 1 ] && src [ 2 ] && dst [ 1 ] && dst [ 2 ] )	159:8:2803:2841	6583733	0	True				
ANR	6584309	UnaryOperationExpression	! ( src [ 1 ] && src [ 2 ] && dst [ 1 ] && dst [ 2 ] )		6583733	0					
ANR	6584310	UnaryOperator	!		6583733	0					
ANR	6584311	AndExpression	src [ 1 ] && src [ 2 ] && dst [ 1 ] && dst [ 2 ]		6583733	1		&&			
ANR	6584312	ArrayIndexing	src [ 1 ]		6583733	0					
ANR	6584313	Identifier	src		6583733	0					
ANR	6584314	PrimaryExpression	1		6583733	1					
ANR	6584315	AndExpression	src [ 2 ] && dst [ 1 ] && dst [ 2 ]		6583733	1		&&			
ANR	6584316	ArrayIndexing	src [ 2 ]		6583733	0					
ANR	6584317	Identifier	src		6583733	0					
ANR	6584318	PrimaryExpression	2		6583733	1					
ANR	6584319	AndExpression	dst [ 1 ] && dst [ 2 ]		6583733	1		&&			
ANR	6584320	ArrayIndexing	dst [ 1 ]		6583733	0					
ANR	6584321	Identifier	dst		6583733	0					
ANR	6584322	PrimaryExpression	1		6583733	1					
ANR	6584323	ArrayIndexing	dst [ 2 ]		6583733	1					
ANR	6584324	Identifier	dst		6583733	0					
ANR	6584325	PrimaryExpression	2		6583733	1					
ANR	6584326	ReturnStatement	return ;	161:8:2853:2859	6583733	1	True				
ANR	6584327	ExpressionStatement	width = ( width ) >> c -> hChromaSubSample	165:4:2868:2906	6583733	14	True				
ANR	6584328	AssignmentExpression	width = ( width ) >> c -> hChromaSubSample		6583733	0		=			
ANR	6584329	Identifier	width		6583733	0					
ANR	6584330	ShiftExpression	( width ) >> c -> hChromaSubSample		6583733	1		>>			
ANR	6584331	Identifier	width		6583733	0					
ANR	6584332	PtrMemberAccess	c -> hChromaSubSample		6583733	1					
ANR	6584333	Identifier	c		6583733	0					
ANR	6584334	Identifier	hChromaSubSample		6583733	1					
ANR	6584335	ExpressionStatement	height = ( height ) >> c -> vChromaSubSample	167:4:2913:2951	6583733	15	True				
ANR	6584336	AssignmentExpression	height = ( height ) >> c -> vChromaSubSample		6583733	0		=			
ANR	6584337	Identifier	height		6583733	0					
ANR	6584338	ShiftExpression	( height ) >> c -> vChromaSubSample		6583733	1		>>			
ANR	6584339	Identifier	height		6583733	0					
ANR	6584340	PtrMemberAccess	c -> vChromaSubSample		6583733	1					
ANR	6584341	Identifier	c		6583733	0					
ANR	6584342	Identifier	vChromaSubSample		6583733	1					
ANR	6584343	IfStatement	if ( mode -> chromMode )		6583733	16					
ANR	6584344	Condition	mode -> chromMode	171:7:2963:2977	6583733	0	True				
ANR	6584345	PtrMemberAccess	mode -> chromMode		6583733	0					
ANR	6584346	Identifier	mode		6583733	0					
ANR	6584347	Identifier	chromMode		6583733	1					
ANR	6584348	CompoundStatement		161:23:2673:2673	6583733	1					
ANR	6584349	ExpressionStatement	"postProcess ( src [ 1 ] , srcStride [ 1 ] , dst [ 1 ] , dstStride [ 1 ] , width , height , QP_store , QPStride , 1 , mode , c )"	173:8:2990:3113	6583733	0	True				
ANR	6584350	CallExpression	"postProcess ( src [ 1 ] , srcStride [ 1 ] , dst [ 1 ] , dstStride [ 1 ] , width , height , QP_store , QPStride , 1 , mode , c )"		6583733	0					
ANR	6584351	Callee	postProcess		6583733	0					
ANR	6584352	Identifier	postProcess		6583733	0					
ANR	6584353	ArgumentList	src [ 1 ]		6583733	1					
ANR	6584354	Argument	src [ 1 ]		6583733	0					
ANR	6584355	ArrayIndexing	src [ 1 ]		6583733	0					
ANR	6584356	Identifier	src		6583733	0					
ANR	6584357	PrimaryExpression	1		6583733	1					
ANR	6584358	Argument	srcStride [ 1 ]		6583733	1					
ANR	6584359	ArrayIndexing	srcStride [ 1 ]		6583733	0					
ANR	6584360	Identifier	srcStride		6583733	0					
ANR	6584361	PrimaryExpression	1		6583733	1					
ANR	6584362	Argument	dst [ 1 ]		6583733	2					
ANR	6584363	ArrayIndexing	dst [ 1 ]		6583733	0					
ANR	6584364	Identifier	dst		6583733	0					
ANR	6584365	PrimaryExpression	1		6583733	1					
ANR	6584366	Argument	dstStride [ 1 ]		6583733	3					
ANR	6584367	ArrayIndexing	dstStride [ 1 ]		6583733	0					
ANR	6584368	Identifier	dstStride		6583733	0					
ANR	6584369	PrimaryExpression	1		6583733	1					
ANR	6584370	Argument	width		6583733	4					
ANR	6584371	Identifier	width		6583733	0					
ANR	6584372	Argument	height		6583733	5					
ANR	6584373	Identifier	height		6583733	0					
ANR	6584374	Argument	QP_store		6583733	6					
ANR	6584375	Identifier	QP_store		6583733	0					
ANR	6584376	Argument	QPStride		6583733	7					
ANR	6584377	Identifier	QPStride		6583733	0					
ANR	6584378	Argument	1		6583733	8					
ANR	6584379	PrimaryExpression	1		6583733	0					
ANR	6584380	Argument	mode		6583733	9					
ANR	6584381	Identifier	mode		6583733	0					
ANR	6584382	Argument	c		6583733	10					
ANR	6584383	Identifier	c		6583733	0					
ANR	6584384	ExpressionStatement	"postProcess ( src [ 2 ] , srcStride [ 2 ] , dst [ 2 ] , dstStride [ 2 ] , width , height , QP_store , QPStride , 2 , mode , c )"	177:8:3124:3247	6583733	1	True				
ANR	6584385	CallExpression	"postProcess ( src [ 2 ] , srcStride [ 2 ] , dst [ 2 ] , dstStride [ 2 ] , width , height , QP_store , QPStride , 2 , mode , c )"		6583733	0					
ANR	6584386	Callee	postProcess		6583733	0					
ANR	6584387	Identifier	postProcess		6583733	0					
ANR	6584388	ArgumentList	src [ 2 ]		6583733	1					
ANR	6584389	Argument	src [ 2 ]		6583733	0					
ANR	6584390	ArrayIndexing	src [ 2 ]		6583733	0					
ANR	6584391	Identifier	src		6583733	0					
ANR	6584392	PrimaryExpression	2		6583733	1					
ANR	6584393	Argument	srcStride [ 2 ]		6583733	1					
ANR	6584394	ArrayIndexing	srcStride [ 2 ]		6583733	0					
ANR	6584395	Identifier	srcStride		6583733	0					
ANR	6584396	PrimaryExpression	2		6583733	1					
ANR	6584397	Argument	dst [ 2 ]		6583733	2					
ANR	6584398	ArrayIndexing	dst [ 2 ]		6583733	0					
ANR	6584399	Identifier	dst		6583733	0					
ANR	6584400	PrimaryExpression	2		6583733	1					
ANR	6584401	Argument	dstStride [ 2 ]		6583733	3					
ANR	6584402	ArrayIndexing	dstStride [ 2 ]		6583733	0					
ANR	6584403	Identifier	dstStride		6583733	0					
ANR	6584404	PrimaryExpression	2		6583733	1					
ANR	6584405	Argument	width		6583733	4					
ANR	6584406	Identifier	width		6583733	0					
ANR	6584407	Argument	height		6583733	5					
ANR	6584408	Identifier	height		6583733	0					
ANR	6584409	Argument	QP_store		6583733	6					
ANR	6584410	Identifier	QP_store		6583733	0					
ANR	6584411	Argument	QPStride		6583733	7					
ANR	6584412	Identifier	QPStride		6583733	0					
ANR	6584413	Argument	2		6583733	8					
ANR	6584414	PrimaryExpression	2		6583733	0					
ANR	6584415	Argument	mode		6583733	9					
ANR	6584416	Identifier	mode		6583733	0					
ANR	6584417	Argument	c		6583733	10					
ANR	6584418	Identifier	c		6583733	0					
ANR	6584419	ElseStatement	else		6583733	0					
ANR	6584420	IfStatement	if ( srcStride [ 1 ] == dstStride [ 1 ] && srcStride [ 2 ] == dstStride [ 2 ] )		6583733	0					
ANR	6584421	Condition	srcStride [ 1 ] == dstStride [ 1 ] && srcStride [ 2 ] == dstStride [ 2 ]	183:12:3269:3328	6583733	0	True				
ANR	6584422	AndExpression	srcStride [ 1 ] == dstStride [ 1 ] && srcStride [ 2 ] == dstStride [ 2 ]		6583733	0		&&			
ANR	6584423	EqualityExpression	srcStride [ 1 ] == dstStride [ 1 ]		6583733	0		==			
ANR	6584424	ArrayIndexing	srcStride [ 1 ]		6583733	0					
ANR	6584425	Identifier	srcStride		6583733	0					
ANR	6584426	PrimaryExpression	1		6583733	1					
ANR	6584427	ArrayIndexing	dstStride [ 1 ]		6583733	1					
ANR	6584428	Identifier	dstStride		6583733	0					
ANR	6584429	PrimaryExpression	1		6583733	1					
ANR	6584430	EqualityExpression	srcStride [ 2 ] == dstStride [ 2 ]		6583733	1		==			
ANR	6584431	ArrayIndexing	srcStride [ 2 ]		6583733	0					
ANR	6584432	Identifier	srcStride		6583733	0					
ANR	6584433	PrimaryExpression	2		6583733	1					
ANR	6584434	ArrayIndexing	dstStride [ 2 ]		6583733	1					
ANR	6584435	Identifier	dstStride		6583733	0					
ANR	6584436	PrimaryExpression	2		6583733	1					
ANR	6584437	CompoundStatement		173:73:3024:3024	6583733	1					
ANR	6584438	ExpressionStatement	"linecpy ( dst [ 1 ] , src [ 1 ] , height , srcStride [ 1 ] )"	185:8:3341:3386	6583733	0	True				
ANR	6584439	CallExpression	"linecpy ( dst [ 1 ] , src [ 1 ] , height , srcStride [ 1 ] )"		6583733	0					
ANR	6584440	Callee	linecpy		6583733	0					
ANR	6584441	Identifier	linecpy		6583733	0					
ANR	6584442	ArgumentList	dst [ 1 ]		6583733	1					
ANR	6584443	Argument	dst [ 1 ]		6583733	0					
ANR	6584444	ArrayIndexing	dst [ 1 ]		6583733	0					
ANR	6584445	Identifier	dst		6583733	0					
ANR	6584446	PrimaryExpression	1		6583733	1					
ANR	6584447	Argument	src [ 1 ]		6583733	1					
ANR	6584448	ArrayIndexing	src [ 1 ]		6583733	0					
ANR	6584449	Identifier	src		6583733	0					
ANR	6584450	PrimaryExpression	1		6583733	1					
ANR	6584451	Argument	height		6583733	2					
ANR	6584452	Identifier	height		6583733	0					
ANR	6584453	Argument	srcStride [ 1 ]		6583733	3					
ANR	6584454	ArrayIndexing	srcStride [ 1 ]		6583733	0					
ANR	6584455	Identifier	srcStride		6583733	0					
ANR	6584456	PrimaryExpression	1		6583733	1					
ANR	6584457	ExpressionStatement	"linecpy ( dst [ 2 ] , src [ 2 ] , height , srcStride [ 2 ] )"	187:8:3397:3442	6583733	1	True				
ANR	6584458	CallExpression	"linecpy ( dst [ 2 ] , src [ 2 ] , height , srcStride [ 2 ] )"		6583733	0					
ANR	6584459	Callee	linecpy		6583733	0					
ANR	6584460	Identifier	linecpy		6583733	0					
ANR	6584461	ArgumentList	dst [ 2 ]		6583733	1					
ANR	6584462	Argument	dst [ 2 ]		6583733	0					
ANR	6584463	ArrayIndexing	dst [ 2 ]		6583733	0					
ANR	6584464	Identifier	dst		6583733	0					
ANR	6584465	PrimaryExpression	2		6583733	1					
ANR	6584466	Argument	src [ 2 ]		6583733	1					
ANR	6584467	ArrayIndexing	src [ 2 ]		6583733	0					
ANR	6584468	Identifier	src		6583733	0					
ANR	6584469	PrimaryExpression	2		6583733	1					
ANR	6584470	Argument	height		6583733	2					
ANR	6584471	Identifier	height		6583733	0					
ANR	6584472	Argument	srcStride [ 2 ]		6583733	3					
ANR	6584473	ArrayIndexing	srcStride [ 2 ]		6583733	0					
ANR	6584474	Identifier	srcStride		6583733	0					
ANR	6584475	PrimaryExpression	2		6583733	1					
ANR	6584476	ElseStatement	else		6583733	0					
ANR	6584477	CompoundStatement		181:8:3159:3164	6583733	0					
ANR	6584478	IdentifierDeclStatement	int y ;	191:8:3465:3470	6583733	0	True				
ANR	6584479	IdentifierDecl	y		6583733	0					
ANR	6584480	IdentifierDeclType	int		6583733	0					
ANR	6584481	Identifier	y		6583733	1					
ANR	6584482	ForStatement	for ( y = 0 ; y < height ; y ++ )		6583733	1					
ANR	6584483	ForInit	y = 0 ;	193:12:3485:3488	6583733	0	True				
ANR	6584484	AssignmentExpression	y = 0		6583733	0		=			
ANR	6584485	Identifier	y		6583733	0					
ANR	6584486	PrimaryExpression	0		6583733	1					
ANR	6584487	Condition	y < height	193:17:3490:3497	6583733	1	True				
ANR	6584488	RelationalExpression	y < height		6583733	0		<			
ANR	6584489	Identifier	y		6583733	0					
ANR	6584490	Identifier	height		6583733	1					
ANR	6584491	PostIncDecOperationExpression	y ++	193:27:3500:3502	6583733	2	True				
ANR	6584492	Identifier	y		6583733	0					
ANR	6584493	IncDec	++		6583733	1					
ANR	6584494	CompoundStatement		183:31:3198:3198	6583733	3					
ANR	6584495	ExpressionStatement	"memcpy ( & ( dst [ 1 ] [ y * dstStride [ 1 ] ] ) , & ( src [ 1 ] [ y * srcStride [ 1 ] ] ) , width )"	195:12:3519:3586	6583733	0	True				
ANR	6584496	CallExpression	"memcpy ( & ( dst [ 1 ] [ y * dstStride [ 1 ] ] ) , & ( src [ 1 ] [ y * srcStride [ 1 ] ] ) , width )"		6583733	0					
ANR	6584497	Callee	memcpy		6583733	0					
ANR	6584498	Identifier	memcpy		6583733	0					
ANR	6584499	ArgumentList	& ( dst [ 1 ] [ y * dstStride [ 1 ] ] )		6583733	1					
ANR	6584500	Argument	& ( dst [ 1 ] [ y * dstStride [ 1 ] ] )		6583733	0					
ANR	6584501	UnaryOperationExpression	& ( dst [ 1 ] [ y * dstStride [ 1 ] ] )		6583733	0					
ANR	6584502	UnaryOperator	&		6583733	0					
ANR	6584503	ArrayIndexing	dst [ 1 ] [ y * dstStride [ 1 ] ]		6583733	1					
ANR	6584504	ArrayIndexing	dst [ 1 ]		6583733	0					
ANR	6584505	Identifier	dst		6583733	0					
ANR	6584506	PrimaryExpression	1		6583733	1					
ANR	6584507	MultiplicativeExpression	y * dstStride [ 1 ]		6583733	1		*			
ANR	6584508	Identifier	y		6583733	0					
ANR	6584509	ArrayIndexing	dstStride [ 1 ]		6583733	1					
ANR	6584510	Identifier	dstStride		6583733	0					
ANR	6584511	PrimaryExpression	1		6583733	1					
ANR	6584512	Argument	& ( src [ 1 ] [ y * srcStride [ 1 ] ] )		6583733	1					
ANR	6584513	UnaryOperationExpression	& ( src [ 1 ] [ y * srcStride [ 1 ] ] )		6583733	0					
ANR	6584514	UnaryOperator	&		6583733	0					
ANR	6584515	ArrayIndexing	src [ 1 ] [ y * srcStride [ 1 ] ]		6583733	1					
ANR	6584516	ArrayIndexing	src [ 1 ]		6583733	0					
ANR	6584517	Identifier	src		6583733	0					
ANR	6584518	PrimaryExpression	1		6583733	1					
ANR	6584519	MultiplicativeExpression	y * srcStride [ 1 ]		6583733	1		*			
ANR	6584520	Identifier	y		6583733	0					
ANR	6584521	ArrayIndexing	srcStride [ 1 ]		6583733	1					
ANR	6584522	Identifier	srcStride		6583733	0					
ANR	6584523	PrimaryExpression	1		6583733	1					
ANR	6584524	Argument	width		6583733	2					
ANR	6584525	Identifier	width		6583733	0					
ANR	6584526	ExpressionStatement	"memcpy ( & ( dst [ 2 ] [ y * dstStride [ 2 ] ] ) , & ( src [ 2 ] [ y * srcStride [ 2 ] ] ) , width )"	197:12:3601:3668	6583733	1	True				
ANR	6584527	CallExpression	"memcpy ( & ( dst [ 2 ] [ y * dstStride [ 2 ] ] ) , & ( src [ 2 ] [ y * srcStride [ 2 ] ] ) , width )"		6583733	0					
ANR	6584528	Callee	memcpy		6583733	0					
ANR	6584529	Identifier	memcpy		6583733	0					
ANR	6584530	ArgumentList	& ( dst [ 2 ] [ y * dstStride [ 2 ] ] )		6583733	1					
ANR	6584531	Argument	& ( dst [ 2 ] [ y * dstStride [ 2 ] ] )		6583733	0					
ANR	6584532	UnaryOperationExpression	& ( dst [ 2 ] [ y * dstStride [ 2 ] ] )		6583733	0					
ANR	6584533	UnaryOperator	&		6583733	0					
ANR	6584534	ArrayIndexing	dst [ 2 ] [ y * dstStride [ 2 ] ]		6583733	1					
ANR	6584535	ArrayIndexing	dst [ 2 ]		6583733	0					
ANR	6584536	Identifier	dst		6583733	0					
ANR	6584537	PrimaryExpression	2		6583733	1					
ANR	6584538	MultiplicativeExpression	y * dstStride [ 2 ]		6583733	1		*			
ANR	6584539	Identifier	y		6583733	0					
ANR	6584540	ArrayIndexing	dstStride [ 2 ]		6583733	1					
ANR	6584541	Identifier	dstStride		6583733	0					
ANR	6584542	PrimaryExpression	2		6583733	1					
ANR	6584543	Argument	& ( src [ 2 ] [ y * srcStride [ 2 ] ] )		6583733	1					
ANR	6584544	UnaryOperationExpression	& ( src [ 2 ] [ y * srcStride [ 2 ] ] )		6583733	0					
ANR	6584545	UnaryOperator	&		6583733	0					
ANR	6584546	ArrayIndexing	src [ 2 ] [ y * srcStride [ 2 ] ]		6583733	1					
ANR	6584547	ArrayIndexing	src [ 2 ]		6583733	0					
ANR	6584548	Identifier	src		6583733	0					
ANR	6584549	PrimaryExpression	2		6583733	1					
ANR	6584550	MultiplicativeExpression	y * srcStride [ 2 ]		6583733	1		*			
ANR	6584551	Identifier	y		6583733	0					
ANR	6584552	ArrayIndexing	srcStride [ 2 ]		6583733	1					
ANR	6584553	Identifier	srcStride		6583733	0					
ANR	6584554	PrimaryExpression	2		6583733	1					
ANR	6584555	Argument	width		6583733	2					
ANR	6584556	Identifier	width		6583733	0					
ANR	6584557	ReturnType	void		6583733	1					
ANR	6584558	Identifier	pp_postprocess		6583733	2					
ANR	6584559	ParameterList	"const uint8_t * src [ 3 ] , const int srcStride [ 3 ] , uint8_t * dst [ 3 ] , const int dstStride [ 3 ] , int width , int height , const QP_STORE_T * QP_store , int QPStride , pp_mode * vm , void * vc , int pict_type"		6583733	3					
ANR	6584560	Parameter	const uint8_t * src [ 3 ]	1:21:21:42	6583733	0	True				
ANR	6584561	ParameterType	const uint8_t * [ 3 ]		6583733	0					
ANR	6584562	Identifier	src		6583733	1					
ANR	6584563	Parameter	const int srcStride [ 3 ]	1:45:45:66	6583733	1	True				
ANR	6584564	ParameterType	const int [ 3 ]		6583733	0					
ANR	6584565	Identifier	srcStride		6583733	1					
ANR	6584566	Parameter	uint8_t * dst [ 3 ]	3:21:91:106	6583733	2	True				
ANR	6584567	ParameterType	uint8_t * [ 3 ]		6583733	0					
ANR	6584568	Identifier	dst		6583733	1					
ANR	6584569	Parameter	const int dstStride [ 3 ]	3:39:109:130	6583733	3	True				
ANR	6584570	ParameterType	const int [ 3 ]		6583733	0					
ANR	6584571	Identifier	dstStride		6583733	1					
ANR	6584572	Parameter	int width	5:21:155:163	6583733	4	True				
ANR	6584573	ParameterType	int		6583733	0					
ANR	6584574	Identifier	width		6583733	1					
ANR	6584575	Parameter	int height	5:32:166:175	6583733	5	True				
ANR	6584576	ParameterType	int		6583733	0					
ANR	6584577	Identifier	height		6583733	1					
ANR	6584578	Parameter	const QP_STORE_T * QP_store	7:21:200:225	6583733	6	True				
ANR	6584579	ParameterType	const QP_STORE_T *		6583733	0					
ANR	6584580	Identifier	QP_store		6583733	1					
ANR	6584581	Parameter	int QPStride	7:50:229:240	6583733	7	True				
ANR	6584582	ParameterType	int		6583733	0					
ANR	6584583	Identifier	QPStride		6583733	1					
ANR	6584584	Parameter	pp_mode * vm	9:21:265:275	6583733	8	True				
ANR	6584585	ParameterType	pp_mode *		6583733	0					
ANR	6584586	Identifier	vm		6583733	1					
ANR	6584587	Parameter	void * vc	9:35:279:286	6583733	9	True				
ANR	6584588	ParameterType	void *		6583733	0					
ANR	6584589	Identifier	vc		6583733	1					
ANR	6584590	Parameter	int pict_type	9:45:289:301	6583733	10	True				
ANR	6584591	ParameterType	int		6583733	0					
ANR	6584592	Identifier	pict_type		6583733	1					
ANR	6584593	CFGEntryNode	ENTRY		6583733		True				
ANR	6584594	CFGExitNode	EXIT		6583733		True				
ANR	6584595	Symbol	* x		6583733						
ANR	6584596	Symbol	* c -> forcedQPTable		6583733						
ANR	6584597	Symbol	* y		6583733						
ANR	6584598	Symbol	* QP_store		6583733						
ANR	6584599	Symbol	* QPStride		6583733						
ANR	6584600	Symbol	mode -> lumMode		6583733						
ANR	6584601	Symbol	mbWidth		6583733						
ANR	6584602	Symbol	* src		6583733						
ANR	6584603	Symbol	mode		6583733						
ANR	6584604	Symbol	* dst		6583733						
ANR	6584605	Symbol	dstStride		6583733						
ANR	6584606	Symbol	c -> vChromaSubSample		6583733						
ANR	6584607	Symbol	pict_type		6583733						
ANR	6584608	Symbol	QP_store		6583733						
ANR	6584609	Symbol	srcStride		6583733						
ANR	6584610	Symbol	* srcStride		6583733						
ANR	6584611	Symbol	AV_LOG_DEBUG		6583733						
ANR	6584612	Symbol	height		6583733						
ANR	6584613	Symbol	mode -> forcedQuant		6583733						
ANR	6584614	Symbol	absQPStride		6583733						
ANR	6584615	Symbol	* * c		6583733						
ANR	6584616	Symbol	count		6583733						
ANR	6584617	Symbol	* dstStride		6583733						
ANR	6584618	Symbol	vc		6583733						
ANR	6584619	Symbol	QPStride		6583733						
ANR	6584620	Symbol	PP_PICT_TYPE_QP2		6583733						
ANR	6584621	Symbol	vm		6583733						
ANR	6584622	Symbol	* c -> stdQPTable		6583733						
ANR	6584623	Symbol	mbHeight		6583733						
ANR	6584624	Symbol	AV_LOG_INFO		6583733						
ANR	6584625	Symbol	dst		6583733						
ANR	6584626	Symbol	mode -> chromMode		6583733						
ANR	6584627	Symbol	c -> hChromaSubSample		6583733						
ANR	6584628	Symbol	c -> nonBQPTable		6583733						
ANR	6584629	Symbol	c -> forcedQPTable		6583733						
ANR	6584630	Symbol	c		6583733						
ANR	6584631	Symbol	src		6583733						
ANR	6584632	Symbol	c -> stride		6583733						
ANR	6584633	Symbol	FFABS		6583733						
ANR	6584634	Symbol	c -> qpStride		6583733						
ANR	6584635	Symbol	i		6583733						
ANR	6584636	Symbol	c -> stdQPTable		6583733						
ANR	6584637	Symbol	j		6583733						
ANR	6584638	Symbol	minStride		6583733						
ANR	6584639	Symbol	* c		6583733						
ANR	6584640	Symbol	* i		6583733						
ANR	6584641	Symbol	* j		6583733						
ANR	6584642	Symbol	* absQPStride		6583733						
ANR	6584643	Symbol	* c -> nonBQPTable		6583733						
ANR	6584644	Symbol	width		6583733						
ANR	6584645	Symbol	* mode		6583733						
ANR	6584646	Symbol	x		6583733						
ANR	6584647	Symbol	y		6583733						
ANR	6584648	Symbol	FORCE_QUANT		6583733						
ANR	6584649	Symbol	FFMAX		6583733						
