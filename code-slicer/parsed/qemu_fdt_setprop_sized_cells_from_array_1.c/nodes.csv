command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6979678	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_fdt_setprop_sized_cells_from_array_1.c								
ANR	6979679	Function	qemu_fdt_setprop_sized_cells_from_array	1:0:0:1057							
ANR	6979680	FunctionDef	"qemu_fdt_setprop_sized_cells_from_array (void * fdt , const char * node_path , const char * property , int numvalues , uint64_t * values)"		6979679	0					
ANR	6979681	CompoundStatement		11:0:314:1057	6979679	0					
ANR	6979682	IdentifierDeclStatement	uint32_t * propcells ;	13:4:321:340	6979679	0	True				
ANR	6979683	IdentifierDecl	* propcells		6979679	0					
ANR	6979684	IdentifierDeclType	uint32_t *		6979679	0					
ANR	6979685	Identifier	propcells		6979679	1					
ANR	6979686	IdentifierDeclStatement	uint64_t value ;	15:4:347:361	6979679	1	True				
ANR	6979687	IdentifierDecl	value		6979679	0					
ANR	6979688	IdentifierDeclType	uint64_t		6979679	0					
ANR	6979689	Identifier	value		6979679	1					
ANR	6979690	IdentifierDeclStatement	"int cellnum , vnum , ncells ;"	17:4:368:393	6979679	2	True				
ANR	6979691	IdentifierDecl	cellnum		6979679	0					
ANR	6979692	IdentifierDeclType	int		6979679	0					
ANR	6979693	Identifier	cellnum		6979679	1					
ANR	6979694	IdentifierDecl	vnum		6979679	1					
ANR	6979695	IdentifierDeclType	int		6979679	0					
ANR	6979696	Identifier	vnum		6979679	1					
ANR	6979697	IdentifierDecl	ncells		6979679	2					
ANR	6979698	IdentifierDeclType	int		6979679	0					
ANR	6979699	Identifier	ncells		6979679	1					
ANR	6979700	IdentifierDeclStatement	uint32_t hival ;	19:4:400:414	6979679	3	True				
ANR	6979701	IdentifierDecl	hival		6979679	0					
ANR	6979702	IdentifierDeclType	uint32_t		6979679	0					
ANR	6979703	Identifier	hival		6979679	1					
ANR	6979704	ExpressionStatement	"propcells = g_new0 ( uint32_t , numvalues * 2 )"	23:4:423:466	6979679	4	True				
ANR	6979705	AssignmentExpression	"propcells = g_new0 ( uint32_t , numvalues * 2 )"		6979679	0		=			
ANR	6979706	Identifier	propcells		6979679	0					
ANR	6979707	CallExpression	"g_new0 ( uint32_t , numvalues * 2 )"		6979679	1					
ANR	6979708	Callee	g_new0		6979679	0					
ANR	6979709	Identifier	g_new0		6979679	0					
ANR	6979710	ArgumentList	uint32_t		6979679	1					
ANR	6979711	Argument	uint32_t		6979679	0					
ANR	6979712	Identifier	uint32_t		6979679	0					
ANR	6979713	Argument	numvalues * 2		6979679	1					
ANR	6979714	MultiplicativeExpression	numvalues * 2		6979679	0		*			
ANR	6979715	Identifier	numvalues		6979679	0					
ANR	6979716	PrimaryExpression	2		6979679	1					
ANR	6979717	ExpressionStatement	cellnum = 0	27:4:475:486	6979679	5	True				
ANR	6979718	AssignmentExpression	cellnum = 0		6979679	0		=			
ANR	6979719	Identifier	cellnum		6979679	0					
ANR	6979720	PrimaryExpression	0		6979679	1					
ANR	6979721	ForStatement	for ( vnum = 0 ; vnum < numvalues ; vnum ++ )		6979679	6					
ANR	6979722	ForInit	vnum = 0 ;	29:9:498:506	6979679	0	True				
ANR	6979723	AssignmentExpression	vnum = 0		6979679	0		=			
ANR	6979724	Identifier	vnum		6979679	0					
ANR	6979725	PrimaryExpression	0		6979679	1					
ANR	6979726	Condition	vnum < numvalues	29:19:508:523	6979679	1	True				
ANR	6979727	RelationalExpression	vnum < numvalues		6979679	0		<			
ANR	6979728	Identifier	vnum		6979679	0					
ANR	6979729	Identifier	numvalues		6979679	1					
ANR	6979730	PostIncDecOperationExpression	vnum ++	29:37:526:531	6979679	2	True				
ANR	6979731	Identifier	vnum		6979679	0					
ANR	6979732	IncDec	++		6979679	1					
ANR	6979733	CompoundStatement		19:45:219:219	6979679	3					
ANR	6979734	ExpressionStatement	ncells = values [ vnum * 2 ]	31:8:545:570	6979679	0	True				
ANR	6979735	AssignmentExpression	ncells = values [ vnum * 2 ]		6979679	0		=			
ANR	6979736	Identifier	ncells		6979679	0					
ANR	6979737	ArrayIndexing	values [ vnum * 2 ]		6979679	1					
ANR	6979738	Identifier	values		6979679	0					
ANR	6979739	MultiplicativeExpression	vnum * 2		6979679	1		*			
ANR	6979740	Identifier	vnum		6979679	0					
ANR	6979741	PrimaryExpression	2		6979679	1					
ANR	6979742	IfStatement	if ( ncells != 1 && ncells != 2 )		6979679	1					
ANR	6979743	Condition	ncells != 1 && ncells != 2	33:12:585:610	6979679	0	True				
ANR	6979744	AndExpression	ncells != 1 && ncells != 2		6979679	0		&&			
ANR	6979745	EqualityExpression	ncells != 1		6979679	0		!=			
ANR	6979746	Identifier	ncells		6979679	0					
ANR	6979747	PrimaryExpression	1		6979679	1					
ANR	6979748	EqualityExpression	ncells != 2		6979679	1		!=			
ANR	6979749	Identifier	ncells		6979679	0					
ANR	6979750	PrimaryExpression	2		6979679	1					
ANR	6979751	CompoundStatement		23:40:298:298	6979679	1					
ANR	6979752	ReturnStatement	return - 1 ;	35:12:628:637	6979679	0	True				
ANR	6979753	UnaryOperationExpression	- 1		6979679	0					
ANR	6979754	UnaryOperator	-		6979679	0					
ANR	6979755	PrimaryExpression	1		6979679	1					
ANR	6979756	ExpressionStatement	value = values [ vnum * 2 + 1 ]	39:8:659:687	6979679	2	True				
ANR	6979757	AssignmentExpression	value = values [ vnum * 2 + 1 ]		6979679	0		=			
ANR	6979758	Identifier	value		6979679	0					
ANR	6979759	ArrayIndexing	values [ vnum * 2 + 1 ]		6979679	1					
ANR	6979760	Identifier	values		6979679	0					
ANR	6979761	AdditiveExpression	vnum * 2 + 1		6979679	1		+			
ANR	6979762	MultiplicativeExpression	vnum * 2		6979679	0		*			
ANR	6979763	Identifier	vnum		6979679	0					
ANR	6979764	PrimaryExpression	2		6979679	1					
ANR	6979765	PrimaryExpression	1		6979679	1					
ANR	6979766	ExpressionStatement	hival = cpu_to_be32 ( value >> 32 )	41:8:698:730	6979679	3	True				
ANR	6979767	AssignmentExpression	hival = cpu_to_be32 ( value >> 32 )		6979679	0		=			
ANR	6979768	Identifier	hival		6979679	0					
ANR	6979769	CallExpression	cpu_to_be32 ( value >> 32 )		6979679	1					
ANR	6979770	Callee	cpu_to_be32		6979679	0					
ANR	6979771	Identifier	cpu_to_be32		6979679	0					
ANR	6979772	ArgumentList	value >> 32		6979679	1					
ANR	6979773	Argument	value >> 32		6979679	0					
ANR	6979774	ShiftExpression	value >> 32		6979679	0		>>			
ANR	6979775	Identifier	value		6979679	0					
ANR	6979776	PrimaryExpression	32		6979679	1					
ANR	6979777	IfStatement	if ( ncells > 1 )		6979679	4					
ANR	6979778	Condition	ncells > 1	43:12:745:754	6979679	0	True				
ANR	6979779	RelationalExpression	ncells > 1		6979679	0		>			
ANR	6979780	Identifier	ncells		6979679	0					
ANR	6979781	PrimaryExpression	1		6979679	1					
ANR	6979782	CompoundStatement		33:24:442:442	6979679	1					
ANR	6979783	ExpressionStatement	propcells [ cellnum ++ ] = hival	45:12:772:800	6979679	0	True				
ANR	6979784	AssignmentExpression	propcells [ cellnum ++ ] = hival		6979679	0		=			
ANR	6979785	ArrayIndexing	propcells [ cellnum ++ ]		6979679	0					
ANR	6979786	Identifier	propcells		6979679	0					
ANR	6979787	PostIncDecOperationExpression	cellnum ++		6979679	1					
ANR	6979788	Identifier	cellnum		6979679	0					
ANR	6979789	IncDec	++		6979679	1					
ANR	6979790	Identifier	hival		6979679	1					
ANR	6979791	ElseStatement	else		6979679	0					
ANR	6979792	IfStatement	if ( hival != 0 )		6979679	0					
ANR	6979793	Condition	hival != 0	47:19:822:831	6979679	0	True				
ANR	6979794	EqualityExpression	hival != 0		6979679	0		!=			
ANR	6979795	Identifier	hival		6979679	0					
ANR	6979796	PrimaryExpression	0		6979679	1					
ANR	6979797	CompoundStatement		37:31:519:519	6979679	1					
ANR	6979798	ReturnStatement	return - 1 ;	49:12:849:858	6979679	0	True				
ANR	6979799	UnaryOperationExpression	- 1		6979679	0					
ANR	6979800	UnaryOperator	-		6979679	0					
ANR	6979801	PrimaryExpression	1		6979679	1					
ANR	6979802	ExpressionStatement	propcells [ cellnum ++ ] = cpu_to_be32 ( value )	53:8:880:921	6979679	5	True				
ANR	6979803	AssignmentExpression	propcells [ cellnum ++ ] = cpu_to_be32 ( value )		6979679	0		=			
ANR	6979804	ArrayIndexing	propcells [ cellnum ++ ]		6979679	0					
ANR	6979805	Identifier	propcells		6979679	0					
ANR	6979806	PostIncDecOperationExpression	cellnum ++		6979679	1					
ANR	6979807	Identifier	cellnum		6979679	0					
ANR	6979808	IncDec	++		6979679	1					
ANR	6979809	CallExpression	cpu_to_be32 ( value )		6979679	1					
ANR	6979810	Callee	cpu_to_be32		6979679	0					
ANR	6979811	Identifier	cpu_to_be32		6979679	0					
ANR	6979812	ArgumentList	value		6979679	1					
ANR	6979813	Argument	value		6979679	0					
ANR	6979814	Identifier	value		6979679	0					
ANR	6979815	ReturnStatement	"return qemu_fdt_setprop ( fdt , node_path , property , propcells , cellnum * sizeof ( uint32_t ) ) ;"	59:4:937:1054	6979679	7	True				
ANR	6979816	CallExpression	"qemu_fdt_setprop ( fdt , node_path , property , propcells , cellnum * sizeof ( uint32_t ) )"		6979679	0					
ANR	6979817	Callee	qemu_fdt_setprop		6979679	0					
ANR	6979818	Identifier	qemu_fdt_setprop		6979679	0					
ANR	6979819	ArgumentList	fdt		6979679	1					
ANR	6979820	Argument	fdt		6979679	0					
ANR	6979821	Identifier	fdt		6979679	0					
ANR	6979822	Argument	node_path		6979679	1					
ANR	6979823	Identifier	node_path		6979679	0					
ANR	6979824	Argument	property		6979679	2					
ANR	6979825	Identifier	property		6979679	0					
ANR	6979826	Argument	propcells		6979679	3					
ANR	6979827	Identifier	propcells		6979679	0					
ANR	6979828	Argument	cellnum * sizeof ( uint32_t )		6979679	4					
ANR	6979829	MultiplicativeExpression	cellnum * sizeof ( uint32_t )		6979679	0		*			
ANR	6979830	Identifier	cellnum		6979679	0					
ANR	6979831	SizeofExpression	sizeof ( uint32_t )		6979679	1					
ANR	6979832	Sizeof	sizeof		6979679	0					
ANR	6979833	SizeofOperand	uint32_t		6979679	1					
ANR	6979834	ReturnType	int		6979679	1					
ANR	6979835	Identifier	qemu_fdt_setprop_sized_cells_from_array		6979679	2					
ANR	6979836	ParameterList	"void * fdt , const char * node_path , const char * property , int numvalues , uint64_t * values"		6979679	3					
ANR	6979837	Parameter	void * fdt	1:44:44:52	6979679	0	True				
ANR	6979838	ParameterType	void *		6979679	0					
ANR	6979839	Identifier	fdt		6979679	1					
ANR	6979840	Parameter	const char * node_path	3:44:100:120	6979679	1	True				
ANR	6979841	ParameterType	const char *		6979679	0					
ANR	6979842	Identifier	node_path		6979679	1					
ANR	6979843	Parameter	const char * property	5:44:168:187	6979679	2	True				
ANR	6979844	ParameterType	const char *		6979679	0					
ANR	6979845	Identifier	property		6979679	1					
ANR	6979846	Parameter	int numvalues	7:44:235:247	6979679	3	True				
ANR	6979847	ParameterType	int		6979679	0					
ANR	6979848	Identifier	numvalues		6979679	1					
ANR	6979849	Parameter	uint64_t * values	9:44:295:310	6979679	4	True				
ANR	6979850	ParameterType	uint64_t *		6979679	0					
ANR	6979851	Identifier	values		6979679	1					
ANR	6979852	CFGEntryNode	ENTRY		6979679		True				
ANR	6979853	CFGExitNode	EXIT		6979679		True				
ANR	6979854	Symbol	cpu_to_be32		6979679						
ANR	6979855	Symbol	node_path		6979679						
ANR	6979856	Symbol	cellnum		6979679						
ANR	6979857	Symbol	* vnum		6979679						
ANR	6979858	Symbol	propcells		6979679						
ANR	6979859	Symbol	* values		6979679						
ANR	6979860	Symbol	values		6979679						
ANR	6979861	Symbol	vnum		6979679						
ANR	6979862	Symbol	* propcells		6979679						
ANR	6979863	Symbol	uint32_t		6979679						
ANR	6979864	Symbol	hival		6979679						
ANR	6979865	Symbol	ncells		6979679						
ANR	6979866	Symbol	numvalues		6979679						
ANR	6979867	Symbol	qemu_fdt_setprop		6979679						
ANR	6979868	Symbol	fdt		6979679						
ANR	6979869	Symbol	property		6979679						
ANR	6979870	Symbol	g_new0		6979679						
ANR	6979871	Symbol	value		6979679						
