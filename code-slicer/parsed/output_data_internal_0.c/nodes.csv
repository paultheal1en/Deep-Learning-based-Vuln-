command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6269564	File	/home/p4ultr4n/workplace/ReVeal/raw_code/output_data_internal_0.c								
ANR	6269565	Function	output_data_internal	1:0:0:943							
ANR	6269566	FunctionDef	"output_data_internal (MLPDecodeContext * m , unsigned int substr , uint8_t * data , unsigned int * data_size , int is32)"		6269565	0					
ANR	6269567	CompoundStatement		5:0:158:943	6269565	0					
ANR	6269568	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	7:4:165:201	6269565	0	True				
ANR	6269569	IdentifierDecl	* s = & m -> substream [ substr ]		6269565	0					
ANR	6269570	IdentifierDeclType	SubStream *		6269565	0					
ANR	6269571	Identifier	s		6269565	1					
ANR	6269572	AssignmentExpression	* s = & m -> substream [ substr ]		6269565	2		=			
ANR	6269573	Identifier	s		6269565	0					
ANR	6269574	UnaryOperationExpression	& m -> substream [ substr ]		6269565	1					
ANR	6269575	UnaryOperator	&		6269565	0					
ANR	6269576	ArrayIndexing	m -> substream [ substr ]		6269565	1					
ANR	6269577	PtrMemberAccess	m -> substream		6269565	0					
ANR	6269578	Identifier	m		6269565	0					
ANR	6269579	Identifier	substream		6269565	1					
ANR	6269580	Identifier	substr		6269565	1					
ANR	6269581	IdentifierDeclStatement	"unsigned int i , out_ch = 0 ;"	9:4:208:234	6269565	1	True				
ANR	6269582	IdentifierDecl	i		6269565	0					
ANR	6269583	IdentifierDeclType	unsigned int		6269565	0					
ANR	6269584	Identifier	i		6269565	1					
ANR	6269585	IdentifierDecl	out_ch = 0		6269565	1					
ANR	6269586	IdentifierDeclType	unsigned int		6269565	0					
ANR	6269587	Identifier	out_ch		6269565	1					
ANR	6269588	AssignmentExpression	out_ch = 0		6269565	2		=			
ANR	6269589	Identifier	out_ch		6269565	0					
ANR	6269590	PrimaryExpression	0		6269565	1					
ANR	6269591	IdentifierDeclStatement	int32_t * data_32 = ( int32_t * ) data ;	11:4:241:275	6269565	2	True				
ANR	6269592	IdentifierDecl	* data_32 = ( int32_t * ) data		6269565	0					
ANR	6269593	IdentifierDeclType	int32_t *		6269565	0					
ANR	6269594	Identifier	data_32		6269565	1					
ANR	6269595	AssignmentExpression	* data_32 = ( int32_t * ) data		6269565	2		=			
ANR	6269596	Identifier	data_32		6269565	0					
ANR	6269597	CastExpression	( int32_t * ) data		6269565	1					
ANR	6269598	CastTarget	int32_t *		6269565	0					
ANR	6269599	Identifier	data		6269565	1					
ANR	6269600	IdentifierDeclStatement	int16_t * data_16 = ( int16_t * ) data ;	13:4:282:316	6269565	3	True				
ANR	6269601	IdentifierDecl	* data_16 = ( int16_t * ) data		6269565	0					
ANR	6269602	IdentifierDeclType	int16_t *		6269565	0					
ANR	6269603	Identifier	data_16		6269565	1					
ANR	6269604	AssignmentExpression	* data_16 = ( int16_t * ) data		6269565	2		=			
ANR	6269605	Identifier	data_16		6269565	0					
ANR	6269606	CastExpression	( int16_t * ) data		6269565	1					
ANR	6269607	CastTarget	int16_t *		6269565	0					
ANR	6269608	Identifier	data		6269565	1					
ANR	6269609	IfStatement	if ( * data_size < ( s -> max_channel + 1 ) * s -> blockpos * ( is32 ? 4 : 2 ) )		6269565	4					
ANR	6269610	Condition	* data_size < ( s -> max_channel + 1 ) * s -> blockpos * ( is32 ? 4 : 2 )	17:8:329:392	6269565	0	True				
ANR	6269611	RelationalExpression	* data_size < ( s -> max_channel + 1 ) * s -> blockpos * ( is32 ? 4 : 2 )		6269565	0		<			
ANR	6269612	UnaryOperationExpression	* data_size		6269565	0					
ANR	6269613	UnaryOperator	*		6269565	0					
ANR	6269614	Identifier	data_size		6269565	1					
ANR	6269615	MultiplicativeExpression	( s -> max_channel + 1 ) * s -> blockpos * ( is32 ? 4 : 2 )		6269565	1		*			
ANR	6269616	AdditiveExpression	s -> max_channel + 1		6269565	0		+			
ANR	6269617	PtrMemberAccess	s -> max_channel		6269565	0					
ANR	6269618	Identifier	s		6269565	0					
ANR	6269619	Identifier	max_channel		6269565	1					
ANR	6269620	PrimaryExpression	1		6269565	1					
ANR	6269621	MultiplicativeExpression	s -> blockpos * ( is32 ? 4 : 2 )		6269565	1		*			
ANR	6269622	PtrMemberAccess	s -> blockpos		6269565	0					
ANR	6269623	Identifier	s		6269565	0					
ANR	6269624	Identifier	blockpos		6269565	1					
ANR	6269625	ConditionalExpression	is32 ? 4 : 2		6269565	1					
ANR	6269626	Condition	is32		6269565	0					
ANR	6269627	Identifier	is32		6269565	0					
ANR	6269628	PrimaryExpression	4		6269565	1					
ANR	6269629	PrimaryExpression	2		6269565	2					
ANR	6269630	ReturnStatement	return - 1 ;	19:8:404:413	6269565	1	True				
ANR	6269631	UnaryOperationExpression	- 1		6269565	0					
ANR	6269632	UnaryOperator	-		6269565	0					
ANR	6269633	PrimaryExpression	1		6269565	1					
ANR	6269634	ForStatement	for ( i = 0 ; i < s -> blockpos ; i ++ )		6269565	5					
ANR	6269635	ForInit	i = 0 ;	23:9:427:432	6269565	0	True				
ANR	6269636	AssignmentExpression	i = 0		6269565	0		=			
ANR	6269637	Identifier	i		6269565	0					
ANR	6269638	PrimaryExpression	0		6269565	1					
ANR	6269639	Condition	i < s -> blockpos	23:16:434:448	6269565	1	True				
ANR	6269640	RelationalExpression	i < s -> blockpos		6269565	0		<			
ANR	6269641	Identifier	i		6269565	0					
ANR	6269642	PtrMemberAccess	s -> blockpos		6269565	1					
ANR	6269643	Identifier	s		6269565	0					
ANR	6269644	Identifier	blockpos		6269565	1					
ANR	6269645	PostIncDecOperationExpression	i ++	23:33:451:453	6269565	2	True				
ANR	6269646	Identifier	i		6269565	0					
ANR	6269647	IncDec	++		6269565	1					
ANR	6269648	CompoundStatement		19:38:297:297	6269565	3					
ANR	6269649	ForStatement	for ( out_ch = 0 ; out_ch <= s -> max_matrix_channel ; out_ch ++ )		6269565	0					
ANR	6269650	ForInit	out_ch = 0 ;	25:13:472:482	6269565	0	True				
ANR	6269651	AssignmentExpression	out_ch = 0		6269565	0		=			
ANR	6269652	Identifier	out_ch		6269565	0					
ANR	6269653	PrimaryExpression	0		6269565	1					
ANR	6269654	Condition	out_ch <= s -> max_matrix_channel	25:25:484:514	6269565	1	True				
ANR	6269655	RelationalExpression	out_ch <= s -> max_matrix_channel		6269565	0		<=			
ANR	6269656	Identifier	out_ch		6269565	0					
ANR	6269657	PtrMemberAccess	s -> max_matrix_channel		6269565	1					
ANR	6269658	Identifier	s		6269565	0					
ANR	6269659	Identifier	max_matrix_channel		6269565	1					
ANR	6269660	PostIncDecOperationExpression	out_ch ++	25:58:517:524	6269565	2	True				
ANR	6269661	Identifier	out_ch		6269565	0					
ANR	6269662	IncDec	++		6269565	1					
ANR	6269663	CompoundStatement		25:12:431:529	6269565	3					
ANR	6269664	IdentifierDeclStatement	int mat_ch = s -> ch_assign [ out_ch ] ;	27:12:542:575	6269565	0	True				
ANR	6269665	IdentifierDecl	mat_ch = s -> ch_assign [ out_ch ]		6269565	0					
ANR	6269666	IdentifierDeclType	int		6269565	0					
ANR	6269667	Identifier	mat_ch		6269565	1					
ANR	6269668	AssignmentExpression	mat_ch = s -> ch_assign [ out_ch ]		6269565	2		=			
ANR	6269669	Identifier	mat_ch		6269565	0					
ANR	6269670	ArrayIndexing	s -> ch_assign [ out_ch ]		6269565	1					
ANR	6269671	PtrMemberAccess	s -> ch_assign		6269565	0					
ANR	6269672	Identifier	s		6269565	0					
ANR	6269673	Identifier	ch_assign		6269565	1					
ANR	6269674	Identifier	out_ch		6269565	1					
ANR	6269675	IdentifierDeclStatement	int32_t sample = m -> sample_buffer [ i ] [ mat_ch ] << s -> output_shift [ mat_ch ] ;	29:12:590:688	6269565	1	True				
ANR	6269676	IdentifierDecl	sample = m -> sample_buffer [ i ] [ mat_ch ] << s -> output_shift [ mat_ch ]		6269565	0					
ANR	6269677	IdentifierDeclType	int32_t		6269565	0					
ANR	6269678	Identifier	sample		6269565	1					
ANR	6269679	AssignmentExpression	sample = m -> sample_buffer [ i ] [ mat_ch ] << s -> output_shift [ mat_ch ]		6269565	2		=			
ANR	6269680	Identifier	sample		6269565	0					
ANR	6269681	ShiftExpression	m -> sample_buffer [ i ] [ mat_ch ] << s -> output_shift [ mat_ch ]		6269565	1		<<			
ANR	6269682	ArrayIndexing	m -> sample_buffer [ i ] [ mat_ch ]		6269565	0					
ANR	6269683	ArrayIndexing	m -> sample_buffer [ i ]		6269565	0					
ANR	6269684	PtrMemberAccess	m -> sample_buffer		6269565	0					
ANR	6269685	Identifier	m		6269565	0					
ANR	6269686	Identifier	sample_buffer		6269565	1					
ANR	6269687	Identifier	i		6269565	1					
ANR	6269688	Identifier	mat_ch		6269565	1					
ANR	6269689	ArrayIndexing	s -> output_shift [ mat_ch ]		6269565	1					
ANR	6269690	PtrMemberAccess	s -> output_shift		6269565	0					
ANR	6269691	Identifier	s		6269565	0					
ANR	6269692	Identifier	output_shift		6269565	1					
ANR	6269693	Identifier	mat_ch		6269565	1					
ANR	6269694	ExpressionStatement	s -> lossless_check_data ^= ( sample & 0xffffff ) << mat_ch	33:12:703:758	6269565	2	True				
ANR	6269695	AssignmentExpression	s -> lossless_check_data ^= ( sample & 0xffffff ) << mat_ch		6269565	0		^=			
ANR	6269696	PtrMemberAccess	s -> lossless_check_data		6269565	0					
ANR	6269697	Identifier	s		6269565	0					
ANR	6269698	Identifier	lossless_check_data		6269565	1					
ANR	6269699	ShiftExpression	( sample & 0xffffff ) << mat_ch		6269565	1		<<			
ANR	6269700	BitAndExpression	sample & 0xffffff		6269565	0		&			
ANR	6269701	Identifier	sample		6269565	0					
ANR	6269702	PrimaryExpression	0xffffff		6269565	1					
ANR	6269703	Identifier	mat_ch		6269565	1					
ANR	6269704	IfStatement	if ( is32 )		6269565	3					
ANR	6269705	Condition	is32	35:16:777:780	6269565	0	True				
ANR	6269706	Identifier	is32		6269565	0					
ANR	6269707	ExpressionStatement	* data_32 ++ = sample << 8	35:22:783:807	6269565	1	True				
ANR	6269708	AssignmentExpression	* data_32 ++ = sample << 8		6269565	0		=			
ANR	6269709	UnaryOperationExpression	* data_32 ++		6269565	0					
ANR	6269710	UnaryOperator	*		6269565	0					
ANR	6269711	PostIncDecOperationExpression	data_32 ++		6269565	1					
ANR	6269712	Identifier	data_32		6269565	0					
ANR	6269713	IncDec	++		6269565	1					
ANR	6269714	ShiftExpression	sample << 8		6269565	1		<<			
ANR	6269715	Identifier	sample		6269565	0					
ANR	6269716	PrimaryExpression	8		6269565	1					
ANR	6269717	ElseStatement	else		6269565	0					
ANR	6269718	ExpressionStatement	* data_16 ++ = sample >> 8	37:22:832:856	6269565	0	True				
ANR	6269719	AssignmentExpression	* data_16 ++ = sample >> 8		6269565	0		=			
ANR	6269720	UnaryOperationExpression	* data_16 ++		6269565	0					
ANR	6269721	UnaryOperator	*		6269565	0					
ANR	6269722	PostIncDecOperationExpression	data_16 ++		6269565	1					
ANR	6269723	Identifier	data_16		6269565	0					
ANR	6269724	IncDec	++		6269565	1					
ANR	6269725	ShiftExpression	sample >> 8		6269565	1		>>			
ANR	6269726	Identifier	sample		6269565	0					
ANR	6269727	PrimaryExpression	8		6269565	1					
ANR	6269728	ExpressionStatement	* data_size = i * out_ch * ( is32 ? 4 : 2 )	45:4:883:923	6269565	6	True				
ANR	6269729	AssignmentExpression	* data_size = i * out_ch * ( is32 ? 4 : 2 )		6269565	0		=			
ANR	6269730	UnaryOperationExpression	* data_size		6269565	0					
ANR	6269731	UnaryOperator	*		6269565	0					
ANR	6269732	Identifier	data_size		6269565	1					
ANR	6269733	MultiplicativeExpression	i * out_ch * ( is32 ? 4 : 2 )		6269565	1		*			
ANR	6269734	Identifier	i		6269565	0					
ANR	6269735	MultiplicativeExpression	out_ch * ( is32 ? 4 : 2 )		6269565	1		*			
ANR	6269736	Identifier	out_ch		6269565	0					
ANR	6269737	ConditionalExpression	is32 ? 4 : 2		6269565	1					
ANR	6269738	Condition	is32		6269565	0					
ANR	6269739	Identifier	is32		6269565	0					
ANR	6269740	PrimaryExpression	4		6269565	1					
ANR	6269741	PrimaryExpression	2		6269565	2					
ANR	6269742	ReturnStatement	return 0 ;	49:4:932:940	6269565	7	True				
ANR	6269743	PrimaryExpression	0		6269565	0					
ANR	6269744	ReturnType	static int		6269565	1					
ANR	6269745	Identifier	output_data_internal		6269565	2					
ANR	6269746	ParameterList	"MLPDecodeContext * m , unsigned int substr , uint8_t * data , unsigned int * data_size , int is32"		6269565	3					
ANR	6269747	Parameter	MLPDecodeContext * m	1:32:32:50	6269565	0	True				
ANR	6269748	ParameterType	MLPDecodeContext *		6269565	0					
ANR	6269749	Identifier	m		6269565	1					
ANR	6269750	Parameter	unsigned int substr	1:53:53:71	6269565	1	True				
ANR	6269751	ParameterType	unsigned int		6269565	0					
ANR	6269752	Identifier	substr		6269565	1					
ANR	6269753	Parameter	uint8_t * data	3:32:107:119	6269565	2	True				
ANR	6269754	ParameterType	uint8_t *		6269565	0					
ANR	6269755	Identifier	data		6269565	1					
ANR	6269756	Parameter	unsigned int * data_size	3:47:122:144	6269565	3	True				
ANR	6269757	ParameterType	unsigned int *		6269565	0					
ANR	6269758	Identifier	data_size		6269565	1					
ANR	6269759	Parameter	int is32	3:72:147:154	6269565	4	True				
ANR	6269760	ParameterType	int		6269565	0					
ANR	6269761	Identifier	is32		6269565	1					
ANR	6269762	CFGEntryNode	ENTRY		6269565		True				
ANR	6269763	CFGExitNode	EXIT		6269565		True				
ANR	6269764	Symbol	s -> max_matrix_channel		6269565						
ANR	6269765	Symbol	* data_32 ++		6269565						
ANR	6269766	Symbol	data		6269565						
ANR	6269767	Symbol	s -> max_channel		6269565						
ANR	6269768	Symbol	* s -> ch_assign		6269565						
ANR	6269769	Symbol	* data_size		6269565						
ANR	6269770	Symbol	s -> lossless_check_data		6269565						
ANR	6269771	Symbol	data_32		6269565						
ANR	6269772	Symbol	m -> sample_buffer		6269565						
ANR	6269773	Symbol	* * s		6269565						
ANR	6269774	Symbol	s -> ch_assign		6269565						
ANR	6269775	Symbol	* data_16 ++		6269565						
ANR	6269776	Symbol	* mat_ch		6269565						
ANR	6269777	Symbol	m -> substream		6269565						
ANR	6269778	Symbol	* * m		6269565						
ANR	6269779	Symbol	data_16		6269565						
ANR	6269780	Symbol	data_size		6269565						
ANR	6269781	Symbol	* * i		6269565						
ANR	6269782	Symbol	* out_ch		6269565						
ANR	6269783	Symbol	out_ch		6269565						
ANR	6269784	Symbol	i		6269565						
ANR	6269785	Symbol	mat_ch		6269565						
ANR	6269786	Symbol	m		6269565						
ANR	6269787	Symbol	substr		6269565						
ANR	6269788	Symbol	sample		6269565						
ANR	6269789	Symbol	* m -> sample_buffer		6269565						
ANR	6269790	Symbol	s -> output_shift		6269565						
ANR	6269791	Symbol	s		6269565						
ANR	6269792	Symbol	* i		6269565						
ANR	6269793	Symbol	* * * m		6269565						
ANR	6269794	Symbol	* * m -> sample_buffer		6269565						
ANR	6269795	Symbol	* s -> output_shift		6269565						
ANR	6269796	Symbol	* m		6269565						
ANR	6269797	Symbol	s -> blockpos		6269565						
ANR	6269798	Symbol	is32		6269565						
ANR	6269799	Symbol	* s		6269565						
