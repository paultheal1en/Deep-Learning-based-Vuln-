command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6704299	File	/home/p4ultr4n/workplace/ReVeal/raw_code/print_with_operands_0.c								
ANR	6704300	Function	print_with_operands	1:0:0:16890							
ANR	6704301	FunctionDef	"print_with_operands (const struct cris_opcode * opcodep , unsigned int insn , unsigned char * buffer , bfd_vma addr , disassemble_info * info , const struct cris_opcode * prefix_opcodep , unsigned int prefix_insn , unsigned char * prefix_buffer , bfd_boolean with_reg_prefix)"		6704300	0					
ANR	6704302	CompoundStatement		25:0:464:16890	6704300	0					
ANR	6704303	IdentifierDeclStatement	"char temp [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ] ;"	31:2:573:629	6704300	0	True				
ANR	6704304	IdentifierDecl	"temp [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ]"		6704300	0					
ANR	6704305	IdentifierDeclType	"char [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ]"		6704300	0					
ANR	6704306	Identifier	temp		6704300	1					
ANR	6704307	MultiplicativeExpression	"sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2"		6704300	2		*			
ANR	6704308	SizeofExpression	"sizeof ( "".d [$r13=$r12-2147483648],$r10"" )"		6704300	0					
ANR	6704309	Sizeof	sizeof		6704300	0					
ANR	6704310	PrimaryExpression	""".d [$r13=$r12-2147483648],$r10"""		6704300	1					
ANR	6704311	PrimaryExpression	2		6704300	1					
ANR	6704312	IdentifierDeclStatement	char * tp = temp ;	33:2:634:649	6704300	1	True				
ANR	6704313	IdentifierDecl	* tp = temp		6704300	0					
ANR	6704314	IdentifierDeclType	char *		6704300	0					
ANR	6704315	Identifier	tp		6704300	1					
ANR	6704316	AssignmentExpression	* tp = temp		6704300	2		=			
ANR	6704317	Identifier	temp		6704300	0					
ANR	6704318	Identifier	temp		6704300	1					
ANR	6704319	Statement	static	35:2:654:659	6704300	2	True				
ANR	6704320	IdentifierDeclStatement	"const char mode_char [ ] = ""bwd?"" ;"	35:9:661:692	6704300	3	True				
ANR	6704321	IdentifierDecl	"mode_char [ ] = ""bwd?"""		6704300	0					
ANR	6704322	IdentifierDeclType	const char [ ]		6704300	0					
ANR	6704323	Identifier	mode_char		6704300	1					
ANR	6704324	AssignmentExpression	"mode_char [ ] = ""bwd?"""		6704300	2		=			
ANR	6704325	Identifier	mode_char		6704300	0					
ANR	6704326	PrimaryExpression	"""bwd?"""		6704300	1					
ANR	6704327	IdentifierDeclStatement	const char * s ;	37:2:697:710	6704300	4	True				
ANR	6704328	IdentifierDecl	* s		6704300	0					
ANR	6704329	IdentifierDeclType	const char *		6704300	0					
ANR	6704330	Identifier	s		6704300	1					
ANR	6704331	IdentifierDeclStatement	const char * cs ;	39:2:715:729	6704300	5	True				
ANR	6704332	IdentifierDecl	* cs		6704300	0					
ANR	6704333	IdentifierDeclType	const char *		6704300	0					
ANR	6704334	Identifier	cs		6704300	1					
ANR	6704335	IdentifierDeclStatement	struct cris_disasm_data * disdata = ( struct cris_disasm_data * ) info -> private_data ;	41:2:734:820	6704300	6	True				
ANR	6704336	IdentifierDecl	* disdata = ( struct cris_disasm_data * ) info -> private_data		6704300	0					
ANR	6704337	IdentifierDeclType	struct cris_disasm_data *		6704300	0					
ANR	6704338	Identifier	disdata		6704300	1					
ANR	6704339	AssignmentExpression	* disdata = ( struct cris_disasm_data * ) info -> private_data		6704300	2		=			
ANR	6704340	Identifier	disdata		6704300	0					
ANR	6704341	CastExpression	( struct cris_disasm_data * ) info -> private_data		6704300	1					
ANR	6704342	CastTarget	struct cris_disasm_data *		6704300	0					
ANR	6704343	PtrMemberAccess	info -> private_data		6704300	1					
ANR	6704344	Identifier	info		6704300	0					
ANR	6704345	Identifier	private_data		6704300	1					
ANR	6704346	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcodep -> name )"	49:2:875:932	6704300	7	True				
ANR	6704347	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcodep -> name )"		6704300	0					
ANR	6704348	Callee	* info -> fprintf_func		6704300	0					
ANR	6704349	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6704350	UnaryOperator	*		6704300	0					
ANR	6704351	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6704352	Identifier	info		6704300	0					
ANR	6704353	Identifier	fprintf_func		6704300	1					
ANR	6704354	ArgumentList	info -> stream		6704300	1					
ANR	6704355	Argument	info -> stream		6704300	0					
ANR	6704356	PtrMemberAccess	info -> stream		6704300	0					
ANR	6704357	Identifier	info		6704300	0					
ANR	6704358	Identifier	stream		6704300	1					
ANR	6704359	Argument	"""%s"""		6704300	1					
ANR	6704360	PrimaryExpression	"""%s"""		6704300	0					
ANR	6704361	Argument	opcodep -> name		6704300	2					
ANR	6704362	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6704363	Identifier	opcodep		6704300	0					
ANR	6704364	Identifier	name		6704300	1					
ANR	6704365	ExpressionStatement	cs = opcodep -> args	53:2:939:957	6704300	8	True				
ANR	6704366	AssignmentExpression	cs = opcodep -> args		6704300	0		=			
ANR	6704367	Identifier	cs		6704300	0					
ANR	6704368	PtrMemberAccess	opcodep -> args		6704300	1					
ANR	6704369	Identifier	opcodep		6704300	0					
ANR	6704370	Identifier	args		6704300	1					
ANR	6704371	ExpressionStatement	s = cs	55:2:962:968	6704300	9	True				
ANR	6704372	AssignmentExpression	s = cs		6704300	0		=			
ANR	6704373	Identifier	s		6704300	0					
ANR	6704374	Identifier	cs		6704300	1					
ANR	6704375	IfStatement	if ( * s == 'p' )		6704300	10					
ANR	6704376	Condition	* s == 'p'	61:6:1018:1026	6704300	0	True				
ANR	6704377	EqualityExpression	* s == 'p'		6704300	0		==			
ANR	6704378	UnaryOperationExpression	* s		6704300	0					
ANR	6704379	UnaryOperator	*		6704300	0					
ANR	6704380	Identifier	s		6704300	1					
ANR	6704381	PrimaryExpression	'p'		6704300	1					
ANR	6704382	ExpressionStatement	s ++	63:4:1034:1037	6704300	1	True				
ANR	6704383	PostIncDecOperationExpression	s ++		6704300	0					
ANR	6704384	Identifier	s		6704300	0					
ANR	6704385	IncDec	++		6704300	1					
ANR	6704386	IfStatement	if ( * s == 'm' || * s == 'M' || * s == 'z' )		6704300	11					
ANR	6704387	Condition	* s == 'm' || * s == 'M' || * s == 'z'	67:6:1048:1082	6704300	0	True				
ANR	6704388	OrExpression	* s == 'm' || * s == 'M' || * s == 'z'		6704300	0		||			
ANR	6704389	EqualityExpression	* s == 'm'		6704300	0		==			
ANR	6704390	UnaryOperationExpression	* s		6704300	0					
ANR	6704391	UnaryOperator	*		6704300	0					
ANR	6704392	Identifier	s		6704300	1					
ANR	6704393	PrimaryExpression	'm'		6704300	1					
ANR	6704394	OrExpression	* s == 'M' || * s == 'z'		6704300	1		||			
ANR	6704395	EqualityExpression	* s == 'M'		6704300	0		==			
ANR	6704396	UnaryOperationExpression	* s		6704300	0					
ANR	6704397	UnaryOperator	*		6704300	0					
ANR	6704398	Identifier	s		6704300	1					
ANR	6704399	PrimaryExpression	'M'		6704300	1					
ANR	6704400	EqualityExpression	* s == 'z'		6704300	1		==			
ANR	6704401	UnaryOperationExpression	* s		6704300	0					
ANR	6704402	UnaryOperator	*		6704300	0					
ANR	6704403	Identifier	s		6704300	1					
ANR	6704404	PrimaryExpression	'z'		6704300	1					
ANR	6704405	CompoundStatement		45:4:625:625	6704300	1					
ANR	6704406	ExpressionStatement	* tp ++ = '.'	71:6:1099:1110	6704300	0	True				
ANR	6704407	AssignmentExpression	* tp ++ = '.'		6704300	0		=			
ANR	6704408	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704409	UnaryOperator	*		6704300	0					
ANR	6704410	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704411	Identifier	tp		6704300	0					
ANR	6704412	IncDec	++		6704300	1					
ANR	6704413	PrimaryExpression	'.'		6704300	1					
ANR	6704414	ExpressionStatement	* tp ++ = * s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]	77:6:1156:1281	6704300	1	True				
ANR	6704415	AssignmentExpression	* tp ++ = * s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		6704300	0		=			
ANR	6704416	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704417	UnaryOperator	*		6704300	0					
ANR	6704418	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704419	Identifier	tp		6704300	0					
ANR	6704420	IncDec	++		6704300	1					
ANR	6704421	ConditionalExpression	* s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		6704300	1					
ANR	6704422	Condition	* s == 'M'		6704300	0					
ANR	6704423	EqualityExpression	* s == 'M'		6704300	0		==			
ANR	6704424	UnaryOperationExpression	* s		6704300	0					
ANR	6704425	UnaryOperator	*		6704300	0					
ANR	6704426	Identifier	s		6704300	1					
ANR	6704427	PrimaryExpression	'M'		6704300	1					
ANR	6704428	ConditionalExpression	insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b'		6704300	1					
ANR	6704429	Condition	insn & 0x8000		6704300	0					
ANR	6704430	BitAndExpression	insn & 0x8000		6704300	0		&			
ANR	6704431	Identifier	insn		6704300	0					
ANR	6704432	PrimaryExpression	0x8000		6704300	1					
ANR	6704433	PrimaryExpression	'd'		6704300	1					
ANR	6704434	ConditionalExpression	insn & 0x4000 ? 'w' : 'b'		6704300	2					
ANR	6704435	Condition	insn & 0x4000		6704300	0					
ANR	6704436	BitAndExpression	insn & 0x4000		6704300	0		&			
ANR	6704437	Identifier	insn		6704300	0					
ANR	6704438	PrimaryExpression	0x4000		6704300	1					
ANR	6704439	PrimaryExpression	'w'		6704300	1					
ANR	6704440	PrimaryExpression	'b'		6704300	2					
ANR	6704441	ArrayIndexing	mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		6704300	2					
ANR	6704442	Identifier	mode_char		6704300	0					
ANR	6704443	BitAndExpression	( insn >> 4 ) & ( * s == 'z' ? 1 : 3 )		6704300	1		&			
ANR	6704444	ShiftExpression	insn >> 4		6704300	0		>>			
ANR	6704445	Identifier	insn		6704300	0					
ANR	6704446	PrimaryExpression	4		6704300	1					
ANR	6704447	ConditionalExpression	* s == 'z' ? 1 : 3		6704300	1					
ANR	6704448	Condition	* s == 'z'		6704300	0					
ANR	6704449	EqualityExpression	* s == 'z'		6704300	0		==			
ANR	6704450	UnaryOperationExpression	* s		6704300	0					
ANR	6704451	UnaryOperator	*		6704300	0					
ANR	6704452	Identifier	s		6704300	1					
ANR	6704453	PrimaryExpression	'z'		6704300	1					
ANR	6704454	PrimaryExpression	1		6704300	1					
ANR	6704455	PrimaryExpression	3		6704300	2					
ANR	6704456	ExpressionStatement	s += 2	89:6:1360:1366	6704300	2	True				
ANR	6704457	AssignmentExpression	s += 2		6704300	0		+=			
ANR	6704458	Identifier	s		6704300	0					
ANR	6704459	PrimaryExpression	2		6704300	1					
ANR	6704460	IfStatement	if ( opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 ) )		6704300	12					
ANR	6704461	Condition	opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 )	99:6:1506:1563	6704300	0	True				
ANR	6704462	EqualityExpression	opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 )		6704300	0		!=			
ANR	6704463	PtrMemberAccess	opcodep -> match		6704300	0					
ANR	6704464	Identifier	opcodep		6704300	0					
ANR	6704465	Identifier	match		6704300	1					
ANR	6704466	AdditiveExpression	BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256		6704300	1		+			
ANR	6704467	Identifier	BRANCH_PC_LOW		6704300	0					
ANR	6704468	MultiplicativeExpression	BRANCH_INCR_HIGH * 256		6704300	1		*			
ANR	6704469	Identifier	BRANCH_INCR_HIGH		6704300	0					
ANR	6704470	PrimaryExpression	256		6704300	1					
ANR	6704471	ExpressionStatement	* tp ++ = ' '	101:4:1571:1582	6704300	1	True				
ANR	6704472	AssignmentExpression	* tp ++ = ' '		6704300	0		=			
ANR	6704473	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704474	UnaryOperator	*		6704300	0					
ANR	6704475	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704476	Identifier	tp		6704300	0					
ANR	6704477	IncDec	++		6704300	1					
ANR	6704478	PrimaryExpression	' '		6704300	1					
ANR	6704479	IfStatement	if ( opcodep -> name [ 0 ] == 'j' )		6704300	13					
ANR	6704480	Condition	opcodep -> name [ 0 ] == 'j'	109:6:1687:1709	6704300	0	True				
ANR	6704481	EqualityExpression	opcodep -> name [ 0 ] == 'j'		6704300	0		==			
ANR	6704482	ArrayIndexing	opcodep -> name [ 0 ]		6704300	0					
ANR	6704483	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6704484	Identifier	opcodep		6704300	0					
ANR	6704485	Identifier	name		6704300	1					
ANR	6704486	PrimaryExpression	0		6704300	1					
ANR	6704487	PrimaryExpression	'j'		6704300	1					
ANR	6704488	CompoundStatement		87:4:1252:1252	6704300	1					
ANR	6704489	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""jsr"" ) )"		6704300	0					
ANR	6704490	Condition	"CONST_STRNEQ ( opcodep -> name , ""jsr"" )"	113:10:1730:1764	6704300	0	True				
ANR	6704491	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""jsr"" )"		6704300	0					
ANR	6704492	Callee	CONST_STRNEQ		6704300	0					
ANR	6704493	Identifier	CONST_STRNEQ		6704300	0					
ANR	6704494	ArgumentList	opcodep -> name		6704300	1					
ANR	6704495	Argument	opcodep -> name		6704300	0					
ANR	6704496	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6704497	Identifier	opcodep		6704300	0					
ANR	6704498	Identifier	name		6704300	1					
ANR	6704499	Argument	"""jsr"""		6704300	1					
ANR	6704500	PrimaryExpression	"""jsr"""		6704300	0					
ANR	6704501	ExpressionStatement	info -> insn_type = dis_jsr	117:1:1800:1825	6704300	1	True				
ANR	6704502	AssignmentExpression	info -> insn_type = dis_jsr		6704300	0		=			
ANR	6704503	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6704504	Identifier	info		6704300	0					
ANR	6704505	Identifier	insn_type		6704300	1					
ANR	6704506	Identifier	dis_jsr		6704300	1					
ANR	6704507	ElseStatement	else		6704300	0					
ANR	6704508	ExpressionStatement	info -> insn_type = dis_branch	123:1:1899:1927	6704300	0	True				
ANR	6704509	AssignmentExpression	info -> insn_type = dis_branch		6704300	0		=			
ANR	6704510	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6704511	Identifier	info		6704300	0					
ANR	6704512	Identifier	insn_type		6704300	1					
ANR	6704513	Identifier	dis_branch		6704300	1					
ANR	6704514	ExpressionStatement	info -> branch_delay_insns = opcodep -> delayed	131:2:1993:2036	6704300	14	True				
ANR	6704515	AssignmentExpression	info -> branch_delay_insns = opcodep -> delayed		6704300	0		=			
ANR	6704516	PtrMemberAccess	info -> branch_delay_insns		6704300	0					
ANR	6704517	Identifier	info		6704300	0					
ANR	6704518	Identifier	branch_delay_insns		6704300	1					
ANR	6704519	PtrMemberAccess	opcodep -> delayed		6704300	1					
ANR	6704520	Identifier	opcodep		6704300	0					
ANR	6704521	Identifier	delayed		6704300	1					
ANR	6704522	ForStatement	for ( ; * s ; s ++ )		6704300	15					
ANR	6704523	Condition	* s	137:9:2077:2078	6704300	0	True				
ANR	6704524	UnaryOperationExpression	* s		6704300	0					
ANR	6704525	UnaryOperator	*		6704300	0					
ANR	6704526	Identifier	s		6704300	1					
ANR	6704527	PostIncDecOperationExpression	s ++	137:13:2081:2083	6704300	1	True				
ANR	6704528	Identifier	s		6704300	0					
ANR	6704529	IncDec	++		6704300	1					
ANR	6704530	CompoundStatement		115:4:1626:1626	6704300	2					
ANR	6704531	SwitchStatement	switch ( * s )		6704300	0					
ANR	6704532	Condition	* s	141:12:2106:2107	6704300	0	True				
ANR	6704533	UnaryOperationExpression	* s		6704300	0					
ANR	6704534	UnaryOperator	*		6704300	0					
ANR	6704535	Identifier	s		6704300	1					
ANR	6704536	CompoundStatement		119:6:1652:1652	6704300	1					
ANR	6704537	Label	case 'T' :	145:6:2126:2134	6704300	0	True				
ANR	6704538	ExpressionStatement	"tp = format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	147:1:2138:2198	6704300	1	True				
ANR	6704539	AssignmentExpression	"tp = format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6704540	Identifier	tp		6704300	0					
ANR	6704541	CallExpression	"format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6704542	Callee	format_sup_reg		6704300	0					
ANR	6704543	Identifier	format_sup_reg		6704300	0					
ANR	6704544	ArgumentList	( insn >> 12 ) & 15		6704300	1					
ANR	6704545	Argument	( insn >> 12 ) & 15		6704300	0					
ANR	6704546	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6704547	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6704548	Identifier	insn		6704300	0					
ANR	6704549	PrimaryExpression	12		6704300	1					
ANR	6704550	PrimaryExpression	15		6704300	1					
ANR	6704551	Argument	tp		6704300	1					
ANR	6704552	Identifier	tp		6704300	0					
ANR	6704553	Argument	with_reg_prefix		6704300	2					
ANR	6704554	Identifier	with_reg_prefix		6704300	0					
ANR	6704555	BreakStatement	break ;	149:1:2202:2207	6704300	2	True				
ANR	6704556	Label	case 'A' :	153:6:2218:2226	6704300	3	True				
ANR	6704557	IfStatement	if ( with_reg_prefix )		6704300	4					
ANR	6704558	Condition	with_reg_prefix	155:5:2234:2248	6704300	0	True				
ANR	6704559	Identifier	with_reg_prefix		6704300	0					
ANR	6704560	ExpressionStatement	* tp ++ = REGISTER_PREFIX_CHAR	157:3:2255:2283	6704300	1	True				
ANR	6704561	AssignmentExpression	* tp ++ = REGISTER_PREFIX_CHAR		6704300	0		=			
ANR	6704562	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704563	UnaryOperator	*		6704300	0					
ANR	6704564	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704565	Identifier	tp		6704300	0					
ANR	6704566	IncDec	++		6704300	1					
ANR	6704567	Identifier	REGISTER_PREFIX_CHAR		6704300	1					
ANR	6704568	ExpressionStatement	* tp ++ = 'a'	159:1:2287:2298	6704300	5	True				
ANR	6704569	AssignmentExpression	* tp ++ = 'a'		6704300	0		=			
ANR	6704570	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704571	UnaryOperator	*		6704300	0					
ANR	6704572	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704573	Identifier	tp		6704300	0					
ANR	6704574	IncDec	++		6704300	1					
ANR	6704575	PrimaryExpression	'a'		6704300	1					
ANR	6704576	ExpressionStatement	* tp ++ = 'c'	161:1:2302:2313	6704300	6	True				
ANR	6704577	AssignmentExpression	* tp ++ = 'c'		6704300	0		=			
ANR	6704578	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704579	UnaryOperator	*		6704300	0					
ANR	6704580	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704581	Identifier	tp		6704300	0					
ANR	6704582	IncDec	++		6704300	1					
ANR	6704583	PrimaryExpression	'c'		6704300	1					
ANR	6704584	ExpressionStatement	* tp ++ = 'r'	163:1:2317:2328	6704300	7	True				
ANR	6704585	AssignmentExpression	* tp ++ = 'r'		6704300	0		=			
ANR	6704586	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704587	UnaryOperator	*		6704300	0					
ANR	6704588	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704589	Identifier	tp		6704300	0					
ANR	6704590	IncDec	++		6704300	1					
ANR	6704591	PrimaryExpression	'r'		6704300	1					
ANR	6704592	BreakStatement	break ;	165:1:2332:2337	6704300	8	True				
ANR	6704593	Label	case '[' :	169:6:2348:2356	6704300	9	True				
ANR	6704594	Label	case ']' :	171:6:2365:2373	6704300	10	True				
ANR	6704595	Label	"case ',' :"	173:6:2382:2390	6704300	11	True				
ANR	6704596	ExpressionStatement	* tp ++ = * s	175:1:2394:2404	6704300	12	True				
ANR	6704597	AssignmentExpression	* tp ++ = * s		6704300	0		=			
ANR	6704598	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6704599	UnaryOperator	*		6704300	0					
ANR	6704600	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6704601	Identifier	tp		6704300	0					
ANR	6704602	IncDec	++		6704300	1					
ANR	6704603	UnaryOperationExpression	* s		6704300	1					
ANR	6704604	UnaryOperator	*		6704300	0					
ANR	6704605	Identifier	s		6704300	1					
ANR	6704606	BreakStatement	break ;	177:1:2408:2413	6704300	13	True				
ANR	6704607	Label	case '!' :	181:6:2424:2432	6704300	14	True				
ANR	6704608	BreakStatement	break ;	189:1:2593:2598	6704300	15	True				
ANR	6704609	Label	case 'd' :	193:6:2609:2617	6704300	16	True				
ANR	6704610	BreakStatement	break ;	199:1:2707:2712	6704300	17	True				
ANR	6704611	Label	case 'B' :	203:6:2723:2731	6704300	18	True				
ANR	6704612	ExpressionStatement	prefix_opcodep = NULL	211:1:2904:2925	6704300	19	True				
ANR	6704613	AssignmentExpression	prefix_opcodep = NULL		6704300	0		=			
ANR	6704614	Identifier	prefix_opcodep		6704300	0					
ANR	6704615	Identifier	NULL		6704300	1					
ANR	6704616	BreakStatement	break ;	213:1:2929:2934	6704300	20	True				
ANR	6704617	Label	case 'D' :	217:6:2945:2953	6704300	21	True				
ANR	6704618	Label	case 'r' :	219:6:2962:2970	6704300	22	True				
ANR	6704619	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	221:1:2974:3031	6704300	23	True				
ANR	6704620	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6704621	Identifier	tp		6704300	0					
ANR	6704622	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6704623	Callee	format_reg		6704300	0					
ANR	6704624	Identifier	format_reg		6704300	0					
ANR	6704625	ArgumentList	disdata		6704300	1					
ANR	6704626	Argument	disdata		6704300	0					
ANR	6704627	Identifier	disdata		6704300	0					
ANR	6704628	Argument	insn & 15		6704300	1					
ANR	6704629	BitAndExpression	insn & 15		6704300	0		&			
ANR	6704630	Identifier	insn		6704300	0					
ANR	6704631	PrimaryExpression	15		6704300	1					
ANR	6704632	Argument	tp		6704300	2					
ANR	6704633	Identifier	tp		6704300	0					
ANR	6704634	Argument	with_reg_prefix		6704300	3					
ANR	6704635	Identifier	with_reg_prefix		6704300	0					
ANR	6704636	BreakStatement	break ;	223:1:3035:3040	6704300	24	True				
ANR	6704637	Label	case 'R' :	227:6:3051:3059	6704300	25	True				
ANR	6704638	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	229:1:3063:3128	6704300	26	True				
ANR	6704639	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6704640	Identifier	tp		6704300	0					
ANR	6704641	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6704642	Callee	format_reg		6704300	0					
ANR	6704643	Identifier	format_reg		6704300	0					
ANR	6704644	ArgumentList	disdata		6704300	1					
ANR	6704645	Argument	disdata		6704300	0					
ANR	6704646	Identifier	disdata		6704300	0					
ANR	6704647	Argument	( insn >> 12 ) & 15		6704300	1					
ANR	6704648	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6704649	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6704650	Identifier	insn		6704300	0					
ANR	6704651	PrimaryExpression	12		6704300	1					
ANR	6704652	PrimaryExpression	15		6704300	1					
ANR	6704653	Argument	tp		6704300	2					
ANR	6704654	Identifier	tp		6704300	0					
ANR	6704655	Argument	with_reg_prefix		6704300	3					
ANR	6704656	Identifier	with_reg_prefix		6704300	0					
ANR	6704657	BreakStatement	break ;	231:1:3132:3137	6704300	27	True				
ANR	6704658	Label	case 'n' :	235:6:3148:3156	6704300	28	True				
ANR	6704659	CompoundStatement		217:3:2761:2879	6704300	29					
ANR	6704660	IdentifierDeclStatement	unsigned long number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr ) ;	241:3:3226:3344	6704300	0	True				
ANR	6704661	IdentifierDecl	number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr )		6704300	0					
ANR	6704662	IdentifierDeclType	unsigned long		6704300	0					
ANR	6704663	Identifier	number		6704300	1					
ANR	6704664	AssignmentExpression	number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr )		6704300	2		=			
ANR	6704665	Identifier	number		6704300	0					
ANR	6704666	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		6704300	1		+			
ANR	6704667	ArrayIndexing	buffer [ 2 ]		6704300	0					
ANR	6704668	Identifier	buffer		6704300	0					
ANR	6704669	PrimaryExpression	2		6704300	1					
ANR	6704670	AdditiveExpression	buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		6704300	1		+			
ANR	6704671	MultiplicativeExpression	buffer [ 3 ] * 256		6704300	0		*			
ANR	6704672	ArrayIndexing	buffer [ 3 ]		6704300	0					
ANR	6704673	Identifier	buffer		6704300	0					
ANR	6704674	PrimaryExpression	3		6704300	1					
ANR	6704675	PrimaryExpression	256		6704300	1					
ANR	6704676	AdditiveExpression	buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		6704300	1		+			
ANR	6704677	MultiplicativeExpression	buffer [ 4 ] * 65536		6704300	0		*			
ANR	6704678	ArrayIndexing	buffer [ 4 ]		6704300	0					
ANR	6704679	Identifier	buffer		6704300	0					
ANR	6704680	PrimaryExpression	4		6704300	1					
ANR	6704681	PrimaryExpression	65536		6704300	1					
ANR	6704682	AdditiveExpression	buffer [ 5 ] * 0x1000000 + addr		6704300	1		+			
ANR	6704683	MultiplicativeExpression	buffer [ 5 ] * 0x1000000		6704300	0		*			
ANR	6704684	ArrayIndexing	buffer [ 5 ]		6704300	0					
ANR	6704685	Identifier	buffer		6704300	0					
ANR	6704686	PrimaryExpression	5		6704300	1					
ANR	6704687	PrimaryExpression	0x1000000		6704300	1					
ANR	6704688	Identifier	addr		6704300	1					
ANR	6704689	ExpressionStatement	* tp = 0	251:3:3411:3418	6704300	1	True				
ANR	6704690	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6704691	UnaryOperationExpression	* tp		6704300	0					
ANR	6704692	UnaryOperator	*		6704300	0					
ANR	6704693	Identifier	tp		6704300	1					
ANR	6704694	PrimaryExpression	0		6704300	1					
ANR	6704695	IfStatement	if ( temp [ 0 ] )		6704300	2					
ANR	6704696	Condition	temp [ 0 ]	253:7:3428:3434	6704300	0	True				
ANR	6704697	ArrayIndexing	temp [ 0 ]		6704300	0					
ANR	6704698	Identifier	temp		6704300	0					
ANR	6704699	PrimaryExpression	0		6704300	1					
ANR	6704700	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	255:5:3443:3491	6704300	1	True				
ANR	6704701	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6704702	Callee	* info -> fprintf_func		6704300	0					
ANR	6704703	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6704704	UnaryOperator	*		6704300	0					
ANR	6704705	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6704706	Identifier	info		6704300	0					
ANR	6704707	Identifier	fprintf_func		6704300	1					
ANR	6704708	ArgumentList	info -> stream		6704300	1					
ANR	6704709	Argument	info -> stream		6704300	0					
ANR	6704710	PtrMemberAccess	info -> stream		6704300	0					
ANR	6704711	Identifier	info		6704300	0					
ANR	6704712	Identifier	stream		6704300	1					
ANR	6704713	Argument	"""%s"""		6704300	1					
ANR	6704714	PrimaryExpression	"""%s"""		6704300	0					
ANR	6704715	Argument	temp		6704300	2					
ANR	6704716	Identifier	temp		6704300	0					
ANR	6704717	ExpressionStatement	tp = temp	257:3:3497:3506	6704300	3	True				
ANR	6704718	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6704719	Identifier	tp		6704300	0					
ANR	6704720	Identifier	temp		6704300	1					
ANR	6704721	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	261:3:3514:3566	6704300	4	True				
ANR	6704722	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		6704300	0					
ANR	6704723	Callee	* info -> print_address_func		6704300	0					
ANR	6704724	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6704725	UnaryOperator	*		6704300	0					
ANR	6704726	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6704727	Identifier	info		6704300	0					
ANR	6704728	Identifier	print_address_func		6704300	1					
ANR	6704729	ArgumentList	( bfd_vma ) number		6704300	1					
ANR	6704730	Argument	( bfd_vma ) number		6704300	0					
ANR	6704731	CastExpression	( bfd_vma ) number		6704300	0					
ANR	6704732	CastTarget	bfd_vma		6704300	0					
ANR	6704733	Identifier	number		6704300	1					
ANR	6704734	Argument	info		6704300	1					
ANR	6704735	Identifier	info		6704300	0					
ANR	6704736	BreakStatement	break ;	265:1:3574:3579	6704300	30	True				
ANR	6704737	Label	case 'u' :	269:6:3590:3598	6704300	31	True				
ANR	6704738	CompoundStatement		251:3:3210:3261	6704300	32					
ANR	6704739	IdentifierDeclStatement	unsigned long number = ( buffer [ 0 ] & 0xf ) * 2 + addr ;	275:3:3675:3726	6704300	0	True				
ANR	6704740	IdentifierDecl	number = ( buffer [ 0 ] & 0xf ) * 2 + addr		6704300	0					
ANR	6704741	IdentifierDeclType	unsigned long		6704300	0					
ANR	6704742	Identifier	number		6704300	1					
ANR	6704743	AssignmentExpression	number = ( buffer [ 0 ] & 0xf ) * 2 + addr		6704300	2		=			
ANR	6704744	Identifier	number		6704300	0					
ANR	6704745	AdditiveExpression	( buffer [ 0 ] & 0xf ) * 2 + addr		6704300	1		+			
ANR	6704746	MultiplicativeExpression	( buffer [ 0 ] & 0xf ) * 2		6704300	0		*			
ANR	6704747	BitAndExpression	buffer [ 0 ] & 0xf		6704300	0		&			
ANR	6704748	ArrayIndexing	buffer [ 0 ]		6704300	0					
ANR	6704749	Identifier	buffer		6704300	0					
ANR	6704750	PrimaryExpression	0		6704300	1					
ANR	6704751	PrimaryExpression	0xf		6704300	1					
ANR	6704752	PrimaryExpression	2		6704300	1					
ANR	6704753	Identifier	addr		6704300	1					
ANR	6704754	ExpressionStatement	* tp = 0	281:3:3793:3800	6704300	1	True				
ANR	6704755	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6704756	UnaryOperationExpression	* tp		6704300	0					
ANR	6704757	UnaryOperator	*		6704300	0					
ANR	6704758	Identifier	tp		6704300	1					
ANR	6704759	PrimaryExpression	0		6704300	1					
ANR	6704760	IfStatement	if ( temp [ 0 ] )		6704300	2					
ANR	6704761	Condition	temp [ 0 ]	283:7:3810:3816	6704300	0	True				
ANR	6704762	ArrayIndexing	temp [ 0 ]		6704300	0					
ANR	6704763	Identifier	temp		6704300	0					
ANR	6704764	PrimaryExpression	0		6704300	1					
ANR	6704765	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	285:5:3825:3873	6704300	1	True				
ANR	6704766	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6704767	Callee	* info -> fprintf_func		6704300	0					
ANR	6704768	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6704769	UnaryOperator	*		6704300	0					
ANR	6704770	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6704771	Identifier	info		6704300	0					
ANR	6704772	Identifier	fprintf_func		6704300	1					
ANR	6704773	ArgumentList	info -> stream		6704300	1					
ANR	6704774	Argument	info -> stream		6704300	0					
ANR	6704775	PtrMemberAccess	info -> stream		6704300	0					
ANR	6704776	Identifier	info		6704300	0					
ANR	6704777	Identifier	stream		6704300	1					
ANR	6704778	Argument	"""%s"""		6704300	1					
ANR	6704779	PrimaryExpression	"""%s"""		6704300	0					
ANR	6704780	Argument	temp		6704300	2					
ANR	6704781	Identifier	temp		6704300	0					
ANR	6704782	ExpressionStatement	tp = temp	287:3:3879:3888	6704300	3	True				
ANR	6704783	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6704784	Identifier	tp		6704300	0					
ANR	6704785	Identifier	temp		6704300	1					
ANR	6704786	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	291:3:3896:3948	6704300	4	True				
ANR	6704787	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		6704300	0					
ANR	6704788	Callee	* info -> print_address_func		6704300	0					
ANR	6704789	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6704790	UnaryOperator	*		6704300	0					
ANR	6704791	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6704792	Identifier	info		6704300	0					
ANR	6704793	Identifier	print_address_func		6704300	1					
ANR	6704794	ArgumentList	( bfd_vma ) number		6704300	1					
ANR	6704795	Argument	( bfd_vma ) number		6704300	0					
ANR	6704796	CastExpression	( bfd_vma ) number		6704300	0					
ANR	6704797	CastTarget	bfd_vma		6704300	0					
ANR	6704798	Identifier	number		6704300	1					
ANR	6704799	Argument	info		6704300	1					
ANR	6704800	Identifier	info		6704300	0					
ANR	6704801	BreakStatement	break ;	295:1:3956:3961	6704300	33	True				
ANR	6704802	Label	case 'N' :	299:6:3972:3980	6704300	34	True				
ANR	6704803	Label	case 'y' :	301:6:3989:3997	6704300	35	True				
ANR	6704804	Label	case 'Y' :	303:6:4006:4014	6704300	36	True				
ANR	6704805	Label	case 'S' :	305:6:4023:4031	6704300	37	True				
ANR	6704806	Label	case 's' :	307:6:4040:4048	6704300	38	True				
ANR	6704807	IfStatement	if ( ( insn & 0x400 ) && ( insn & 15 ) == 15 && prefix_opcodep == NULL )		6704300	39					
ANR	6704808	Condition	( insn & 0x400 ) && ( insn & 15 ) == 15 && prefix_opcodep == NULL	311:5:4094:4154	6704300	0	True				
ANR	6704809	AndExpression	( insn & 0x400 ) && ( insn & 15 ) == 15 && prefix_opcodep == NULL		6704300	0		&&			
ANR	6704810	BitAndExpression	insn & 0x400		6704300	0		&			
ANR	6704811	Identifier	insn		6704300	0					
ANR	6704812	PrimaryExpression	0x400		6704300	1					
ANR	6704813	AndExpression	( insn & 15 ) == 15 && prefix_opcodep == NULL		6704300	1		&&			
ANR	6704814	EqualityExpression	( insn & 15 ) == 15		6704300	0		==			
ANR	6704815	BitAndExpression	insn & 15		6704300	0		&			
ANR	6704816	Identifier	insn		6704300	0					
ANR	6704817	PrimaryExpression	15		6704300	1					
ANR	6704818	PrimaryExpression	15		6704300	1					
ANR	6704819	EqualityExpression	prefix_opcodep == NULL		6704300	1		==			
ANR	6704820	Identifier	prefix_opcodep		6704300	0					
ANR	6704821	Identifier	NULL		6704300	1					
ANR	6704822	CompoundStatement		303:5:3964:3974	6704300	1					
ANR	6704823	IdentifierDeclStatement	long number ;	319:5:4306:4317	6704300	0	True				
ANR	6704824	IdentifierDecl	number		6704300	0					
ANR	6704825	IdentifierDeclType	long		6704300	0					
ANR	6704826	Identifier	number		6704300	1					
ANR	6704827	IdentifierDeclStatement	int signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE ) ;	321:5:4325:4421	6704300	1	True				
ANR	6704828	IdentifierDecl	signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE )		6704300	0					
ANR	6704829	IdentifierDeclType	int		6704300	0					
ANR	6704830	Identifier	signedp		6704300	1					
ANR	6704831	AssignmentExpression	signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE )		6704300	2		=			
ANR	6704832	Identifier	signedp		6704300	0					
ANR	6704833	OrExpression	( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE		6704300	1		||			
ANR	6704834	AndExpression	* cs == 'z' && ( insn & 0x20 )		6704300	0		&&			
ANR	6704835	EqualityExpression	* cs == 'z'		6704300	0		==			
ANR	6704836	UnaryOperationExpression	* cs		6704300	0					
ANR	6704837	UnaryOperator	*		6704300	0					
ANR	6704838	Identifier	cs		6704300	1					
ANR	6704839	PrimaryExpression	'z'		6704300	1					
ANR	6704840	BitAndExpression	insn & 0x20		6704300	1		&			
ANR	6704841	Identifier	insn		6704300	0					
ANR	6704842	PrimaryExpression	0x20		6704300	1					
ANR	6704843	EqualityExpression	opcodep -> match == BDAP_QUICK_OPCODE		6704300	1		==			
ANR	6704844	PtrMemberAccess	opcodep -> match		6704300	0					
ANR	6704845	Identifier	opcodep		6704300	0					
ANR	6704846	Identifier	match		6704300	1					
ANR	6704847	Identifier	BDAP_QUICK_OPCODE		6704300	1					
ANR	6704848	IdentifierDeclStatement	int nbytes ;	327:5:4429:4439	6704300	2	True				
ANR	6704849	IdentifierDecl	nbytes		6704300	0					
ANR	6704850	IdentifierDeclType	int		6704300	0					
ANR	6704851	Identifier	nbytes		6704300	1					
ANR	6704852	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_FIX_32 )		6704300	3					
ANR	6704853	Condition	opcodep -> imm_oprnd_size == SIZE_FIX_32	331:9:4453:4490	6704300	0	True				
ANR	6704854	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_FIX_32		6704300	0		==			
ANR	6704855	PtrMemberAccess	opcodep -> imm_oprnd_size		6704300	0					
ANR	6704856	Identifier	opcodep		6704300	0					
ANR	6704857	Identifier	imm_oprnd_size		6704300	1					
ANR	6704858	Identifier	SIZE_FIX_32		6704300	1					
ANR	6704859	ExpressionStatement	nbytes = 4	333:7:4501:4511	6704300	1	True				
ANR	6704860	AssignmentExpression	nbytes = 4		6704300	0		=			
ANR	6704861	Identifier	nbytes		6704300	0					
ANR	6704862	PrimaryExpression	4		6704300	1					
ANR	6704863	ElseStatement	else		6704300	0					
ANR	6704864	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_SPEC_REG )		6704300	0					
ANR	6704865	Condition	opcodep -> imm_oprnd_size == SIZE_SPEC_REG	335:14:4528:4567	6704300	0	True				
ANR	6704866	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_SPEC_REG		6704300	0		==			
ANR	6704867	PtrMemberAccess	opcodep -> imm_oprnd_size		6704300	0					
ANR	6704868	Identifier	opcodep		6704300	0					
ANR	6704869	Identifier	imm_oprnd_size		6704300	1					
ANR	6704870	Identifier	SIZE_SPEC_REG		6704300	1					
ANR	6704871	CompoundStatement		315:2:4118:4210	6704300	1					
ANR	6704872	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	339:2:4583:4675	6704300	0	True				
ANR	6704873	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	0					
ANR	6704874	IdentifierDeclType	const struct cris_spec_reg *		6704300	0					
ANR	6704875	Identifier	sregp		6704300	1					
ANR	6704876	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	2		=			
ANR	6704877	Identifier	sregp		6704300	0					
ANR	6704878	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	1					
ANR	6704879	Callee	spec_reg_info		6704300	0					
ANR	6704880	Identifier	spec_reg_info		6704300	0					
ANR	6704881	ArgumentList	( insn >> 12 ) & 15		6704300	1					
ANR	6704882	Argument	( insn >> 12 ) & 15		6704300	0					
ANR	6704883	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6704884	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6704885	Identifier	insn		6704300	0					
ANR	6704886	PrimaryExpression	12		6704300	1					
ANR	6704887	PrimaryExpression	15		6704300	1					
ANR	6704888	Argument	disdata -> distype		6704300	1					
ANR	6704889	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6704890	Identifier	disdata		6704300	0					
ANR	6704891	Identifier	distype		6704300	1					
ANR	6704892	IfStatement	if ( sregp == NULL )		6704300	1					
ANR	6704893	Condition	sregp == NULL	351:6:4821:4833	6704300	0	True				
ANR	6704894	EqualityExpression	sregp == NULL		6704300	0		==			
ANR	6704895	Identifier	sregp		6704300	0					
ANR	6704896	Identifier	NULL		6704300	1					
ANR	6704897	ExpressionStatement	nbytes = 42	355:4:4878:4889	6704300	1	True				
ANR	6704898	AssignmentExpression	nbytes = 42		6704300	0		=			
ANR	6704899	Identifier	nbytes		6704300	0					
ANR	6704900	PrimaryExpression	42		6704300	1					
ANR	6704901	ElseStatement	else		6704300	0					
ANR	6704902	ExpressionStatement	nbytes = disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1	365:4:5045:5126	6704300	0	True				
ANR	6704903	AssignmentExpression	nbytes = disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		6704300	0		=			
ANR	6704904	Identifier	nbytes		6704300	0					
ANR	6704905	ConditionalExpression	disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		6704300	1					
ANR	6704906	Condition	disdata -> distype == cris_dis_v32		6704300	0					
ANR	6704907	EqualityExpression	disdata -> distype == cris_dis_v32		6704300	0		==			
ANR	6704908	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6704909	Identifier	disdata		6704300	0					
ANR	6704910	Identifier	distype		6704300	1					
ANR	6704911	Identifier	cris_dis_v32		6704300	1					
ANR	6704912	PrimaryExpression	4		6704300	1					
ANR	6704913	BitAndExpression	( sregp -> reg_size + 1 ) & ~1		6704300	2		&			
ANR	6704914	AdditiveExpression	sregp -> reg_size + 1		6704300	0		+			
ANR	6704915	PtrMemberAccess	sregp -> reg_size		6704300	0					
ANR	6704916	Identifier	sregp		6704300	0					
ANR	6704917	Identifier	reg_size		6704300	1					
ANR	6704918	PrimaryExpression	1		6704300	1					
ANR	6704919	Identifier	~1		6704300	1					
ANR	6704920	ElseStatement	else		6704300	0					
ANR	6704921	CompoundStatement		351:2:4697:4754	6704300	0					
ANR	6704922	IdentifierDeclStatement	int mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) ) ;	375:2:5162:5219	6704300	0	True				
ANR	6704923	IdentifierDecl	mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		6704300	0					
ANR	6704924	IdentifierDeclType	int		6704300	0					
ANR	6704925	Identifier	mode_size		6704300	1					
ANR	6704926	AssignmentExpression	mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		6704300	2		=			
ANR	6704927	Identifier	mode_size		6704300	0					
ANR	6704928	ShiftExpression	1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		6704300	1		<<			
ANR	6704929	PrimaryExpression	1		6704300	0					
ANR	6704930	BitAndExpression	( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 )		6704300	1		&			
ANR	6704931	ShiftExpression	insn >> 4		6704300	0		>>			
ANR	6704932	Identifier	insn		6704300	0					
ANR	6704933	PrimaryExpression	4		6704300	1					
ANR	6704934	ConditionalExpression	* cs == 'z' ? 1 : 3		6704300	1					
ANR	6704935	Condition	* cs == 'z'		6704300	0					
ANR	6704936	EqualityExpression	* cs == 'z'		6704300	0		==			
ANR	6704937	UnaryOperationExpression	* cs		6704300	0					
ANR	6704938	UnaryOperator	*		6704300	0					
ANR	6704939	Identifier	cs		6704300	1					
ANR	6704940	PrimaryExpression	'z'		6704300	1					
ANR	6704941	PrimaryExpression	1		6704300	1					
ANR	6704942	PrimaryExpression	3		6704300	2					
ANR	6704943	IfStatement	if ( mode_size == 1 )		6704300	1					
ANR	6704944	Condition	mode_size == 1	379:6:5230:5243	6704300	0	True				
ANR	6704945	EqualityExpression	mode_size == 1		6704300	0		==			
ANR	6704946	Identifier	mode_size		6704300	0					
ANR	6704947	PrimaryExpression	1		6704300	1					
ANR	6704948	ExpressionStatement	nbytes = 2	381:4:5251:5261	6704300	1	True				
ANR	6704949	AssignmentExpression	nbytes = 2		6704300	0		=			
ANR	6704950	Identifier	nbytes		6704300	0					
ANR	6704951	PrimaryExpression	2		6704300	1					
ANR	6704952	ElseStatement	else		6704300	0					
ANR	6704953	ExpressionStatement	nbytes = mode_size	385:4:5276:5294	6704300	0	True				
ANR	6704954	AssignmentExpression	nbytes = mode_size		6704300	0		=			
ANR	6704955	Identifier	nbytes		6704300	0					
ANR	6704956	Identifier	mode_size		6704300	1					
ANR	6704957	SwitchStatement	switch ( nbytes )		6704300	4					
ANR	6704958	Condition	nbytes	391:13:5322:5327	6704300	0	True				
ANR	6704959	Identifier	nbytes		6704300	0					
ANR	6704960	CompoundStatement		369:7:4873:4873	6704300	1					
ANR	6704961	Label	case 1 :	395:7:5348:5354	6704300	0	True				
ANR	6704962	ExpressionStatement	number = buffer [ 2 ]	397:2:5359:5377	6704300	1	True				
ANR	6704963	AssignmentExpression	number = buffer [ 2 ]		6704300	0		=			
ANR	6704964	Identifier	number		6704300	0					
ANR	6704965	ArrayIndexing	buffer [ 2 ]		6704300	1					
ANR	6704966	Identifier	buffer		6704300	0					
ANR	6704967	PrimaryExpression	2		6704300	1					
ANR	6704968	IfStatement	if ( signedp && number > 127 )		6704300	2					
ANR	6704969	Condition	signedp && number > 127	399:6:5386:5408	6704300	0	True				
ANR	6704970	AndExpression	signedp && number > 127		6704300	0		&&			
ANR	6704971	Identifier	signedp		6704300	0					
ANR	6704972	RelationalExpression	number > 127		6704300	1		>			
ANR	6704973	Identifier	number		6704300	0					
ANR	6704974	PrimaryExpression	127		6704300	1					
ANR	6704975	ExpressionStatement	number -= 256	401:4:5416:5429	6704300	1	True				
ANR	6704976	AssignmentExpression	number -= 256		6704300	0		-=			
ANR	6704977	Identifier	number		6704300	0					
ANR	6704978	PrimaryExpression	256		6704300	1					
ANR	6704979	BreakStatement	break ;	403:2:5434:5439	6704300	3	True				
ANR	6704980	Label	case 2 :	407:7:5451:5457	6704300	4	True				
ANR	6704981	ExpressionStatement	number = buffer [ 2 ] + buffer [ 3 ] * 256	409:2:5462:5498	6704300	5	True				
ANR	6704982	AssignmentExpression	number = buffer [ 2 ] + buffer [ 3 ] * 256		6704300	0		=			
ANR	6704983	Identifier	number		6704300	0					
ANR	6704984	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256		6704300	1		+			
ANR	6704985	ArrayIndexing	buffer [ 2 ]		6704300	0					
ANR	6704986	Identifier	buffer		6704300	0					
ANR	6704987	PrimaryExpression	2		6704300	1					
ANR	6704988	MultiplicativeExpression	buffer [ 3 ] * 256		6704300	1		*			
ANR	6704989	ArrayIndexing	buffer [ 3 ]		6704300	0					
ANR	6704990	Identifier	buffer		6704300	0					
ANR	6704991	PrimaryExpression	3		6704300	1					
ANR	6704992	PrimaryExpression	256		6704300	1					
ANR	6704993	IfStatement	if ( signedp && number > 32767 )		6704300	6					
ANR	6704994	Condition	signedp && number > 32767	411:6:5507:5531	6704300	0	True				
ANR	6704995	AndExpression	signedp && number > 32767		6704300	0		&&			
ANR	6704996	Identifier	signedp		6704300	0					
ANR	6704997	RelationalExpression	number > 32767		6704300	1		>			
ANR	6704998	Identifier	number		6704300	0					
ANR	6704999	PrimaryExpression	32767		6704300	1					
ANR	6705000	ExpressionStatement	number -= 65536	413:4:5539:5554	6704300	1	True				
ANR	6705001	AssignmentExpression	number -= 65536		6704300	0		-=			
ANR	6705002	Identifier	number		6704300	0					
ANR	6705003	PrimaryExpression	65536		6704300	1					
ANR	6705004	BreakStatement	break ;	415:2:5559:5564	6704300	7	True				
ANR	6705005	Label	case 4 :	419:7:5576:5582	6704300	8	True				
ANR	6705006	ExpressionStatement	number = buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000	421:2:5587:5677	6704300	9	True				
ANR	6705007	AssignmentExpression	number = buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		6704300	0		=			
ANR	6705008	Identifier	number		6704300	0					
ANR	6705009	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705010	ArrayIndexing	buffer [ 2 ]		6704300	0					
ANR	6705011	Identifier	buffer		6704300	0					
ANR	6705012	PrimaryExpression	2		6704300	1					
ANR	6705013	AdditiveExpression	buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705014	MultiplicativeExpression	buffer [ 3 ] * 256		6704300	0		*			
ANR	6705015	ArrayIndexing	buffer [ 3 ]		6704300	0					
ANR	6705016	Identifier	buffer		6704300	0					
ANR	6705017	PrimaryExpression	3		6704300	1					
ANR	6705018	PrimaryExpression	256		6704300	1					
ANR	6705019	AdditiveExpression	buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705020	MultiplicativeExpression	buffer [ 4 ] * 65536		6704300	0		*			
ANR	6705021	ArrayIndexing	buffer [ 4 ]		6704300	0					
ANR	6705022	Identifier	buffer		6704300	0					
ANR	6705023	PrimaryExpression	4		6704300	1					
ANR	6705024	PrimaryExpression	65536		6704300	1					
ANR	6705025	MultiplicativeExpression	buffer [ 5 ] * 0x1000000		6704300	1		*			
ANR	6705026	ArrayIndexing	buffer [ 5 ]		6704300	0					
ANR	6705027	Identifier	buffer		6704300	0					
ANR	6705028	PrimaryExpression	5		6704300	1					
ANR	6705029	PrimaryExpression	0x1000000		6704300	1					
ANR	6705030	BreakStatement	break ;	427:2:5682:5687	6704300	10	True				
ANR	6705031	Label	default :	431:7:5699:5706	6704300	11	True				
ANR	6705032	Identifier	default		6704300	0					
ANR	6705033	ExpressionStatement	"strcpy ( tp , ""bug"" )"	433:2:5711:5729	6704300	12	True				
ANR	6705034	CallExpression	"strcpy ( tp , ""bug"" )"		6704300	0					
ANR	6705035	Callee	strcpy		6704300	0					
ANR	6705036	Identifier	strcpy		6704300	0					
ANR	6705037	ArgumentList	tp		6704300	1					
ANR	6705038	Argument	tp		6704300	0					
ANR	6705039	Identifier	tp		6704300	0					
ANR	6705040	Argument	"""bug"""		6704300	1					
ANR	6705041	PrimaryExpression	"""bug"""		6704300	0					
ANR	6705042	ExpressionStatement	tp += 3	435:2:5734:5741	6704300	13	True				
ANR	6705043	AssignmentExpression	tp += 3		6704300	0		+=			
ANR	6705044	Identifier	tp		6704300	0					
ANR	6705045	PrimaryExpression	3		6704300	1					
ANR	6705046	ExpressionStatement	number = 42	437:2:5746:5757	6704300	14	True				
ANR	6705047	AssignmentExpression	number = 42		6704300	0		=			
ANR	6705048	Identifier	number		6704300	0					
ANR	6705049	PrimaryExpression	42		6704300	1					
ANR	6705050	IfStatement	if ( ( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) ) )		6704300	5					
ANR	6705051	Condition	( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) )	443:9:5781:5904	6704300	0	True				
ANR	6705052	OrExpression	( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) )		6704300	0		||			
ANR	6705053	AndExpression	* cs == 'z' && ( insn & 0x20 )		6704300	0		&&			
ANR	6705054	EqualityExpression	* cs == 'z'		6704300	0		==			
ANR	6705055	UnaryOperationExpression	* cs		6704300	0					
ANR	6705056	UnaryOperator	*		6704300	0					
ANR	6705057	Identifier	cs		6704300	1					
ANR	6705058	PrimaryExpression	'z'		6704300	1					
ANR	6705059	BitAndExpression	insn & 0x20		6704300	1		&			
ANR	6705060	Identifier	insn		6704300	0					
ANR	6705061	PrimaryExpression	0x20		6704300	1					
ANR	6705062	AndExpression	opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 )		6704300	1		&&			
ANR	6705063	EqualityExpression	opcodep -> match == BDAP_QUICK_OPCODE		6704300	0		==			
ANR	6705064	PtrMemberAccess	opcodep -> match		6704300	0					
ANR	6705065	Identifier	opcodep		6704300	0					
ANR	6705066	Identifier	match		6704300	1					
ANR	6705067	Identifier	BDAP_QUICK_OPCODE		6704300	1					
ANR	6705068	OrExpression	nbytes <= 2 || buffer [ 1 + nbytes ] == 0		6704300	1		||			
ANR	6705069	RelationalExpression	nbytes <= 2		6704300	0		<=			
ANR	6705070	Identifier	nbytes		6704300	0					
ANR	6705071	PrimaryExpression	2		6704300	1					
ANR	6705072	EqualityExpression	buffer [ 1 + nbytes ] == 0		6704300	1		==			
ANR	6705073	ArrayIndexing	buffer [ 1 + nbytes ]		6704300	0					
ANR	6705074	Identifier	buffer		6704300	0					
ANR	6705075	AdditiveExpression	1 + nbytes		6704300	1		+			
ANR	6705076	PrimaryExpression	1		6704300	0					
ANR	6705077	Identifier	nbytes		6704300	1					
ANR	6705078	PrimaryExpression	0		6704300	1					
ANR	6705079	ExpressionStatement	"tp = format_dec ( number , tp , signedp )"	449:7:5915:5952	6704300	1	True				
ANR	6705080	AssignmentExpression	"tp = format_dec ( number , tp , signedp )"		6704300	0		=			
ANR	6705081	Identifier	tp		6704300	0					
ANR	6705082	CallExpression	"format_dec ( number , tp , signedp )"		6704300	1					
ANR	6705083	Callee	format_dec		6704300	0					
ANR	6705084	Identifier	format_dec		6704300	0					
ANR	6705085	ArgumentList	number		6704300	1					
ANR	6705086	Argument	number		6704300	0					
ANR	6705087	Identifier	number		6704300	0					
ANR	6705088	Argument	tp		6704300	1					
ANR	6705089	Identifier	tp		6704300	0					
ANR	6705090	Argument	signedp		6704300	2					
ANR	6705091	Identifier	signedp		6704300	0					
ANR	6705092	ElseStatement	else		6704300	0					
ANR	6705093	CompoundStatement		431:2:5513:5558	6704300	0					
ANR	6705094	IdentifierDeclStatement	unsigned int highbyte = ( number >> 24 ) & 0xff ;	455:2:5978:6023	6704300	0	True				
ANR	6705095	IdentifierDecl	highbyte = ( number >> 24 ) & 0xff		6704300	0					
ANR	6705096	IdentifierDeclType	unsigned int		6704300	0					
ANR	6705097	Identifier	highbyte		6704300	1					
ANR	6705098	AssignmentExpression	highbyte = ( number >> 24 ) & 0xff		6704300	2		=			
ANR	6705099	Identifier	highbyte		6704300	0					
ANR	6705100	BitAndExpression	( number >> 24 ) & 0xff		6704300	1		&			
ANR	6705101	ShiftExpression	number >> 24		6704300	0		>>			
ANR	6705102	Identifier	number		6704300	0					
ANR	6705103	PrimaryExpression	24		6704300	1					
ANR	6705104	PrimaryExpression	0xff		6704300	1					
ANR	6705105	IfStatement	if ( nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr ) )		6704300	1					
ANR	6705106	Condition	nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr )	469:6:6320:6490	6704300	0	True				
ANR	6705107	AndExpression	nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr )		6704300	0		&&			
ANR	6705108	EqualityExpression	nbytes == 4		6704300	0		==			
ANR	6705109	Identifier	nbytes		6704300	0					
ANR	6705110	PrimaryExpression	4		6704300	1					
ANR	6705111	OrExpression	highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr		6704300	1		||			
ANR	6705112	EqualityExpression	highbyte == ( ( addr >> 24 ) & 0xff )		6704300	0		==			
ANR	6705113	Identifier	highbyte		6704300	0					
ANR	6705114	BitAndExpression	( addr >> 24 ) & 0xff		6704300	1		&			
ANR	6705115	ShiftExpression	addr >> 24		6704300	0		>>			
ANR	6705116	Identifier	addr		6704300	0					
ANR	6705117	PrimaryExpression	24		6704300	1					
ANR	6705118	PrimaryExpression	0xff		6704300	1					
ANR	6705119	OrExpression	( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr		6704300	1		||			
ANR	6705120	AndExpression	highbyte != 0 && highbyte != 0xff		6704300	0		&&			
ANR	6705121	EqualityExpression	highbyte != 0		6704300	0		!=			
ANR	6705122	Identifier	highbyte		6704300	0					
ANR	6705123	PrimaryExpression	0		6704300	1					
ANR	6705124	EqualityExpression	highbyte != 0xff		6704300	1		!=			
ANR	6705125	Identifier	highbyte		6704300	0					
ANR	6705126	PrimaryExpression	0xff		6704300	1					
ANR	6705127	OrExpression	info -> insn_type == dis_branch || info -> insn_type == dis_jsr		6704300	1		||			
ANR	6705128	EqualityExpression	info -> insn_type == dis_branch		6704300	0		==			
ANR	6705129	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6705130	Identifier	info		6704300	0					
ANR	6705131	Identifier	insn_type		6704300	1					
ANR	6705132	Identifier	dis_branch		6704300	1					
ANR	6705133	EqualityExpression	info -> insn_type == dis_jsr		6704300	1		==			
ANR	6705134	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6705135	Identifier	info		6704300	0					
ANR	6705136	Identifier	insn_type		6704300	1					
ANR	6705137	Identifier	dis_jsr		6704300	1					
ANR	6705138	CompoundStatement		455:4:6033:6033	6704300	1					
ANR	6705139	ExpressionStatement	* tp = 0	483:6:6569:6576	6704300	0	True				
ANR	6705140	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6705141	UnaryOperationExpression	* tp		6704300	0					
ANR	6705142	UnaryOperator	*		6704300	0					
ANR	6705143	Identifier	tp		6704300	1					
ANR	6705144	PrimaryExpression	0		6704300	1					
ANR	6705145	ExpressionStatement	tp = temp	485:6:6585:6594	6704300	1	True				
ANR	6705146	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6705147	Identifier	tp		6704300	0					
ANR	6705148	Identifier	temp		6704300	1					
ANR	6705149	IfStatement	if ( temp [ 0 ] )		6704300	2					
ANR	6705150	Condition	temp [ 0 ]	487:10:6607:6613	6704300	0	True				
ANR	6705151	ArrayIndexing	temp [ 0 ]		6704300	0					
ANR	6705152	Identifier	temp		6704300	0					
ANR	6705153	PrimaryExpression	0		6704300	1					
ANR	6705154	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	489:8:6625:6673	6704300	1	True				
ANR	6705155	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6705156	Callee	* info -> fprintf_func		6704300	0					
ANR	6705157	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6705158	UnaryOperator	*		6704300	0					
ANR	6705159	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6705160	Identifier	info		6704300	0					
ANR	6705161	Identifier	fprintf_func		6704300	1					
ANR	6705162	ArgumentList	info -> stream		6704300	1					
ANR	6705163	Argument	info -> stream		6704300	0					
ANR	6705164	PtrMemberAccess	info -> stream		6704300	0					
ANR	6705165	Identifier	info		6704300	0					
ANR	6705166	Identifier	stream		6704300	1					
ANR	6705167	Argument	"""%s"""		6704300	1					
ANR	6705168	PrimaryExpression	"""%s"""		6704300	0					
ANR	6705169	Argument	temp		6704300	2					
ANR	6705170	Identifier	temp		6704300	0					
ANR	6705171	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	493:6:6684:6736	6704300	3	True				
ANR	6705172	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		6704300	0					
ANR	6705173	Callee	* info -> print_address_func		6704300	0					
ANR	6705174	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6705175	UnaryOperator	*		6704300	0					
ANR	6705176	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6705177	Identifier	info		6704300	0					
ANR	6705178	Identifier	print_address_func		6704300	1					
ANR	6705179	ArgumentList	( bfd_vma ) number		6704300	1					
ANR	6705180	Argument	( bfd_vma ) number		6704300	0					
ANR	6705181	CastExpression	( bfd_vma ) number		6704300	0					
ANR	6705182	CastTarget	bfd_vma		6704300	0					
ANR	6705183	Identifier	number		6704300	1					
ANR	6705184	Argument	info		6704300	1					
ANR	6705185	Identifier	info		6704300	0					
ANR	6705186	ExpressionStatement	info -> target = number	497:6:6747:6768	6704300	4	True				
ANR	6705187	AssignmentExpression	info -> target = number		6704300	0		=			
ANR	6705188	PtrMemberAccess	info -> target		6704300	0					
ANR	6705189	Identifier	info		6704300	0					
ANR	6705190	Identifier	target		6704300	1					
ANR	6705191	Identifier	number		6704300	1					
ANR	6705192	ElseStatement	else		6704300	0					
ANR	6705193	ExpressionStatement	"tp = format_hex ( number , tp , disdata )"	503:4:6790:6827	6704300	0	True				
ANR	6705194	AssignmentExpression	"tp = format_hex ( number , tp , disdata )"		6704300	0		=			
ANR	6705195	Identifier	tp		6704300	0					
ANR	6705196	CallExpression	"format_hex ( number , tp , disdata )"		6704300	1					
ANR	6705197	Callee	format_hex		6704300	0					
ANR	6705198	Identifier	format_hex		6704300	0					
ANR	6705199	ArgumentList	number		6704300	1					
ANR	6705200	Argument	number		6704300	0					
ANR	6705201	Identifier	number		6704300	0					
ANR	6705202	Argument	tp		6704300	1					
ANR	6705203	Identifier	tp		6704300	0					
ANR	6705204	Argument	disdata		6704300	2					
ANR	6705205	Identifier	disdata		6704300	0					
ANR	6705206	ElseStatement	else		6704300	0					
ANR	6705207	CompoundStatement		487:3:6391:6391	6704300	0					
ANR	6705208	IfStatement	if ( info -> insn_type != dis_nonbranch )		6704300	0					
ANR	6705209	Condition	info -> insn_type != dis_nonbranch	517:9:6967:6998	6704300	0	True				
ANR	6705210	EqualityExpression	info -> insn_type != dis_nonbranch		6704300	0		!=			
ANR	6705211	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6705212	Identifier	info		6704300	0					
ANR	6705213	Identifier	insn_type		6704300	1					
ANR	6705214	Identifier	dis_nonbranch		6704300	1					
ANR	6705215	CompoundStatement		503:2:6635:6643	6704300	1					
ANR	6705216	IdentifierDeclStatement	int mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) ) ;	521:2:7014:7095	6704300	0	True				
ANR	6705217	IdentifierDecl	mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		6704300	0					
ANR	6705218	IdentifierDeclType	int		6704300	0					
ANR	6705219	Identifier	mode_size		6704300	1					
ANR	6705220	AssignmentExpression	mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		6704300	2		=			
ANR	6705221	Identifier	mode_size		6704300	0					
ANR	6705222	ShiftExpression	1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		6704300	1		<<			
ANR	6705223	PrimaryExpression	1		6704300	0					
ANR	6705224	BitAndExpression	( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 )		6704300	1		&			
ANR	6705225	ShiftExpression	insn >> 4		6704300	0		>>			
ANR	6705226	Identifier	insn		6704300	0					
ANR	6705227	PrimaryExpression	4		6704300	1					
ANR	6705228	ConditionalExpression	opcodep -> args [ 0 ] == 'z' ? 1 : 3		6704300	1					
ANR	6705229	Condition	opcodep -> args [ 0 ] == 'z'		6704300	0					
ANR	6705230	EqualityExpression	opcodep -> args [ 0 ] == 'z'		6704300	0		==			
ANR	6705231	ArrayIndexing	opcodep -> args [ 0 ]		6704300	0					
ANR	6705232	PtrMemberAccess	opcodep -> args		6704300	0					
ANR	6705233	Identifier	opcodep		6704300	0					
ANR	6705234	Identifier	args		6704300	1					
ANR	6705235	PrimaryExpression	0		6704300	1					
ANR	6705236	PrimaryExpression	'z'		6704300	1					
ANR	6705237	PrimaryExpression	1		6704300	1					
ANR	6705238	PrimaryExpression	3		6704300	2					
ANR	6705239	IdentifierDeclStatement	int size ;	527:2:7100:7108	6704300	1	True				
ANR	6705240	IdentifierDecl	size		6704300	0					
ANR	6705241	IdentifierDeclType	int		6704300	0					
ANR	6705242	Identifier	size		6704300	1					
ANR	6705243	ExpressionStatement	info -> insn_type = dis_dref	529:2:7113:7139	6704300	2	True				
ANR	6705244	AssignmentExpression	info -> insn_type = dis_dref		6704300	0		=			
ANR	6705245	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6705246	Identifier	info		6704300	0					
ANR	6705247	Identifier	insn_type		6704300	1					
ANR	6705248	Identifier	dis_dref		6704300	1					
ANR	6705249	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEMREF	531:2:7144:7179	6704300	3	True				
ANR	6705250	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEMREF		6704300	0		|=			
ANR	6705251	PtrMemberAccess	info -> flags		6704300	0					
ANR	6705252	Identifier	info		6704300	0					
ANR	6705253	Identifier	flags		6704300	1					
ANR	6705254	Identifier	CRIS_DIS_FLAG_MEMREF		6704300	1					
ANR	6705255	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_FIX_32 )		6704300	4					
ANR	6705256	Condition	opcodep -> imm_oprnd_size == SIZE_FIX_32	535:6:7190:7227	6704300	0	True				
ANR	6705257	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_FIX_32		6704300	0		==			
ANR	6705258	PtrMemberAccess	opcodep -> imm_oprnd_size		6704300	0					
ANR	6705259	Identifier	opcodep		6704300	0					
ANR	6705260	Identifier	imm_oprnd_size		6704300	1					
ANR	6705261	Identifier	SIZE_FIX_32		6704300	1					
ANR	6705262	ExpressionStatement	size = 4	537:4:7235:7243	6704300	1	True				
ANR	6705263	AssignmentExpression	size = 4		6704300	0		=			
ANR	6705264	Identifier	size		6704300	0					
ANR	6705265	PrimaryExpression	4		6704300	1					
ANR	6705266	ElseStatement	else		6704300	0					
ANR	6705267	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_SPEC_REG )		6704300	0					
ANR	6705268	Condition	opcodep -> imm_oprnd_size == SIZE_SPEC_REG	539:11:7257:7296	6704300	0	True				
ANR	6705269	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_SPEC_REG		6704300	0		==			
ANR	6705270	PtrMemberAccess	opcodep -> imm_oprnd_size		6704300	0					
ANR	6705271	Identifier	opcodep		6704300	0					
ANR	6705272	Identifier	imm_oprnd_size		6704300	1					
ANR	6705273	Identifier	SIZE_SPEC_REG		6704300	1					
ANR	6705274	CompoundStatement		519:6:6848:6944	6704300	1					
ANR	6705275	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	543:6:7313:7409	6704300	0	True				
ANR	6705276	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	0					
ANR	6705277	IdentifierDeclType	const struct cris_spec_reg *		6704300	0					
ANR	6705278	Identifier	sregp		6704300	1					
ANR	6705279	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	2		=			
ANR	6705280	Identifier	sregp		6704300	0					
ANR	6705281	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	1					
ANR	6705282	Callee	spec_reg_info		6704300	0					
ANR	6705283	Identifier	spec_reg_info		6704300	0					
ANR	6705284	ArgumentList	( insn >> 12 ) & 15		6704300	1					
ANR	6705285	Argument	( insn >> 12 ) & 15		6704300	0					
ANR	6705286	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6705287	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6705288	Identifier	insn		6704300	0					
ANR	6705289	PrimaryExpression	12		6704300	1					
ANR	6705290	PrimaryExpression	15		6704300	1					
ANR	6705291	Argument	disdata -> distype		6704300	1					
ANR	6705292	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6705293	Identifier	disdata		6704300	0					
ANR	6705294	Identifier	distype		6704300	1					
ANR	6705295	IfStatement	if ( sregp == NULL )		6704300	1					
ANR	6705296	Condition	sregp == NULL	553:10:7512:7524	6704300	0	True				
ANR	6705297	EqualityExpression	sregp == NULL		6704300	0		==			
ANR	6705298	Identifier	sregp		6704300	0					
ANR	6705299	Identifier	NULL		6704300	1					
ANR	6705300	ExpressionStatement	size = 4	555:8:7536:7544	6704300	1	True				
ANR	6705301	AssignmentExpression	size = 4		6704300	0		=			
ANR	6705302	Identifier	size		6704300	0					
ANR	6705303	PrimaryExpression	4		6704300	1					
ANR	6705304	ElseStatement	else		6704300	0					
ANR	6705305	ExpressionStatement	size = sregp -> reg_size	559:8:7567:7589	6704300	0	True				
ANR	6705306	AssignmentExpression	size = sregp -> reg_size		6704300	0		=			
ANR	6705307	Identifier	size		6704300	0					
ANR	6705308	PtrMemberAccess	sregp -> reg_size		6704300	1					
ANR	6705309	Identifier	sregp		6704300	0					
ANR	6705310	Identifier	reg_size		6704300	1					
ANR	6705311	ElseStatement	else		6704300	0					
ANR	6705312	ExpressionStatement	size = mode_size	565:4:7611:7627	6704300	0	True				
ANR	6705313	AssignmentExpression	size = mode_size		6704300	0		=			
ANR	6705314	Identifier	size		6704300	0					
ANR	6705315	Identifier	mode_size		6704300	1					
ANR	6705316	ExpressionStatement	info -> data_size = size	569:2:7634:7656	6704300	5	True				
ANR	6705317	AssignmentExpression	info -> data_size = size		6704300	0		=			
ANR	6705318	PtrMemberAccess	info -> data_size		6704300	0					
ANR	6705319	Identifier	info		6704300	0					
ANR	6705320	Identifier	data_size		6704300	1					
ANR	6705321	Identifier	size		6704300	1					
ANR	6705322	ExpressionStatement	* tp ++ = '['	575:5:7676:7687	6704300	1	True				
ANR	6705323	AssignmentExpression	* tp ++ = '['		6704300	0		=			
ANR	6705324	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705325	UnaryOperator	*		6704300	0					
ANR	6705326	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705327	Identifier	tp		6704300	0					
ANR	6705328	IncDec	++		6704300	1					
ANR	6705329	PrimaryExpression	'['		6704300	1					
ANR	6705330	IfStatement	if ( prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE ) )		6704300	2					
ANR	6705331	Condition	prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE )	579:9:7701:7883	6704300	0	True				
ANR	6705332	AndExpression	prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE )		6704300	0		&&			
ANR	6705333	Identifier	prefix_opcodep		6704300	0					
ANR	6705334	OrExpression	( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE		6704300	1		||			
ANR	6705335	EqualityExpression	( insn & 0x400 ) == 0		6704300	0		==			
ANR	6705336	BitAndExpression	insn & 0x400		6704300	0		&			
ANR	6705337	Identifier	insn		6704300	0					
ANR	6705338	PrimaryExpression	0x400		6704300	1					
ANR	6705339	PrimaryExpression	0		6704300	1					
ANR	6705340	EqualityExpression	prefix_opcodep -> match != DIP_OPCODE		6704300	1		!=			
ANR	6705341	PtrMemberAccess	prefix_opcodep -> match		6704300	0					
ANR	6705342	Identifier	prefix_opcodep		6704300	0					
ANR	6705343	Identifier	match		6704300	1					
ANR	6705344	Identifier	DIP_OPCODE		6704300	1					
ANR	6705345	CompoundStatement		565:7:7429:7429	6704300	1					
ANR	6705346	IfStatement	if ( insn & 0x400 )		6704300	0					
ANR	6705347	Condition	insn & 0x400	591:6:7903:7914	6704300	0	True				
ANR	6705348	BitAndExpression	insn & 0x400		6704300	0		&			
ANR	6705349	Identifier	insn		6704300	0					
ANR	6705350	PrimaryExpression	0x400		6704300	1					
ANR	6705351	CompoundStatement		569:4:7457:7457	6704300	1					
ANR	6705352	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	595:6:7931:7988	6704300	0	True				
ANR	6705353	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705354	Identifier	tp		6704300	0					
ANR	6705355	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705356	Callee	format_reg		6704300	0					
ANR	6705357	Identifier	format_reg		6704300	0					
ANR	6705358	ArgumentList	disdata		6704300	1					
ANR	6705359	Argument	disdata		6704300	0					
ANR	6705360	Identifier	disdata		6704300	0					
ANR	6705361	Argument	insn & 15		6704300	1					
ANR	6705362	BitAndExpression	insn & 15		6704300	0		&			
ANR	6705363	Identifier	insn		6704300	0					
ANR	6705364	PrimaryExpression	15		6704300	1					
ANR	6705365	Argument	tp		6704300	2					
ANR	6705366	Identifier	tp		6704300	0					
ANR	6705367	Argument	with_reg_prefix		6704300	3					
ANR	6705368	Identifier	with_reg_prefix		6704300	0					
ANR	6705369	ExpressionStatement	* tp ++ = '='	597:6:7997:8008	6704300	1	True				
ANR	6705370	AssignmentExpression	* tp ++ = '='		6704300	0		=			
ANR	6705371	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705372	UnaryOperator	*		6704300	0					
ANR	6705373	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705374	Identifier	tp		6704300	0					
ANR	6705375	IncDec	++		6704300	1					
ANR	6705376	PrimaryExpression	'='		6704300	1					
ANR	6705377	SwitchStatement	switch ( prefix_opcodep -> match )		6704300	1					
ANR	6705378	Condition	prefix_opcodep -> match	609:10:8130:8150	6704300	0	True				
ANR	6705379	PtrMemberAccess	prefix_opcodep -> match		6704300	0					
ANR	6705380	Identifier	prefix_opcodep		6704300	0					
ANR	6705381	Identifier	match		6704300	1					
ANR	6705382	CompoundStatement		587:4:7693:7693	6704300	1					
ANR	6705383	Label	case DIP_OPCODE :	613:4:8165:8180	6704300	0	True				
ANR	6705384	Identifier	DIP_OPCODE		6704300	0					
ANR	6705385	IfStatement	if ( ( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15 )		6704300	1					
ANR	6705386	Condition	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15	617:10:8232:8280	6704300	0	True				
ANR	6705387	AndExpression	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15		6704300	0		&&			
ANR	6705388	BitAndExpression	prefix_insn & 0x400		6704300	0		&			
ANR	6705389	Identifier	prefix_insn		6704300	0					
ANR	6705390	PrimaryExpression	0x400		6704300	1					
ANR	6705391	EqualityExpression	( prefix_insn & 15 ) == 15		6704300	1		==			
ANR	6705392	BitAndExpression	prefix_insn & 15		6704300	0		&			
ANR	6705393	Identifier	prefix_insn		6704300	0					
ANR	6705394	PrimaryExpression	15		6704300	1					
ANR	6705395	PrimaryExpression	15		6704300	1					
ANR	6705396	CompoundStatement		601:3:7913:8053	6704300	1					
ANR	6705397	IdentifierDeclStatement	unsigned long number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000 ;	625:3:8378:8518	6704300	0	True				
ANR	6705398	IdentifierDecl	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	0					
ANR	6705399	IdentifierDeclType	unsigned long		6704300	0					
ANR	6705400	Identifier	number		6704300	1					
ANR	6705401	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	2		=			
ANR	6705402	Identifier	number		6704300	0					
ANR	6705403	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705404	ArrayIndexing	prefix_buffer [ 2 ]		6704300	0					
ANR	6705405	Identifier	prefix_buffer		6704300	0					
ANR	6705406	PrimaryExpression	2		6704300	1					
ANR	6705407	AdditiveExpression	prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705408	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		6704300	0		*			
ANR	6705409	ArrayIndexing	prefix_buffer [ 3 ]		6704300	0					
ANR	6705410	Identifier	prefix_buffer		6704300	0					
ANR	6705411	PrimaryExpression	3		6704300	1					
ANR	6705412	PrimaryExpression	256		6704300	1					
ANR	6705413	AdditiveExpression	prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705414	MultiplicativeExpression	prefix_buffer [ 4 ] * 65536		6704300	0		*			
ANR	6705415	ArrayIndexing	prefix_buffer [ 4 ]		6704300	0					
ANR	6705416	Identifier	prefix_buffer		6704300	0					
ANR	6705417	PrimaryExpression	4		6704300	1					
ANR	6705418	PrimaryExpression	65536		6704300	1					
ANR	6705419	MultiplicativeExpression	prefix_buffer [ 5 ] * 0x1000000		6704300	1		*			
ANR	6705420	ArrayIndexing	prefix_buffer [ 5 ]		6704300	0					
ANR	6705421	Identifier	prefix_buffer		6704300	0					
ANR	6705422	PrimaryExpression	5		6704300	1					
ANR	6705423	PrimaryExpression	0x1000000		6704300	1					
ANR	6705424	ExpressionStatement	info -> target = ( bfd_vma ) number	635:3:8526:8557	6704300	1	True				
ANR	6705425	AssignmentExpression	info -> target = ( bfd_vma ) number		6704300	0		=			
ANR	6705426	PtrMemberAccess	info -> target		6704300	0					
ANR	6705427	Identifier	info		6704300	0					
ANR	6705428	Identifier	target		6704300	1					
ANR	6705429	CastExpression	( bfd_vma ) number		6704300	1					
ANR	6705430	CastTarget	bfd_vma		6704300	0					
ANR	6705431	Identifier	number		6704300	1					
ANR	6705432	ExpressionStatement	* tp = 0	643:3:8630:8637	6704300	2	True				
ANR	6705433	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6705434	UnaryOperationExpression	* tp		6704300	0					
ANR	6705435	UnaryOperator	*		6704300	0					
ANR	6705436	Identifier	tp		6704300	1					
ANR	6705437	PrimaryExpression	0		6704300	1					
ANR	6705438	ExpressionStatement	tp = temp	645:3:8643:8652	6704300	3	True				
ANR	6705439	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6705440	Identifier	tp		6704300	0					
ANR	6705441	Identifier	temp		6704300	1					
ANR	6705442	IfStatement	if ( temp [ 0 ] )		6704300	4					
ANR	6705443	Condition	temp [ 0 ]	647:7:8662:8668	6704300	0	True				
ANR	6705444	ArrayIndexing	temp [ 0 ]		6704300	0					
ANR	6705445	Identifier	temp		6704300	0					
ANR	6705446	PrimaryExpression	0		6704300	1					
ANR	6705447	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	649:5:8677:8725	6704300	1	True				
ANR	6705448	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6705449	Callee	* info -> fprintf_func		6704300	0					
ANR	6705450	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6705451	UnaryOperator	*		6704300	0					
ANR	6705452	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6705453	Identifier	info		6704300	0					
ANR	6705454	Identifier	fprintf_func		6704300	1					
ANR	6705455	ArgumentList	info -> stream		6704300	1					
ANR	6705456	Argument	info -> stream		6704300	0					
ANR	6705457	PtrMemberAccess	info -> stream		6704300	0					
ANR	6705458	Identifier	info		6704300	0					
ANR	6705459	Identifier	stream		6704300	1					
ANR	6705460	Argument	"""%s"""		6704300	1					
ANR	6705461	PrimaryExpression	"""%s"""		6704300	0					
ANR	6705462	Argument	temp		6704300	2					
ANR	6705463	Identifier	temp		6704300	0					
ANR	6705464	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	653:3:8733:8785	6704300	5	True				
ANR	6705465	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		6704300	0					
ANR	6705466	Callee	* info -> print_address_func		6704300	0					
ANR	6705467	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6705468	UnaryOperator	*		6704300	0					
ANR	6705469	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6705470	Identifier	info		6704300	0					
ANR	6705471	Identifier	print_address_func		6704300	1					
ANR	6705472	ArgumentList	( bfd_vma ) number		6704300	1					
ANR	6705473	Argument	( bfd_vma ) number		6704300	0					
ANR	6705474	CastExpression	( bfd_vma ) number		6704300	0					
ANR	6705475	CastTarget	bfd_vma		6704300	0					
ANR	6705476	Identifier	number		6704300	1					
ANR	6705477	Argument	info		6704300	1					
ANR	6705478	Identifier	info		6704300	0					
ANR	6705479	ElseStatement	else		6704300	0					
ANR	6705480	CompoundStatement		635:8:8354:8354	6704300	0					
ANR	6705481	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM )	665:3:8917:9014	6704300	0	True				
ANR	6705482	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM )		6704300	0		|=			
ANR	6705483	PtrMemberAccess	info -> flags		6704300	0					
ANR	6705484	Identifier	info		6704300	0					
ANR	6705485	Identifier	flags		6704300	1					
ANR	6705486	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM		6704300	1		|			
ANR	6705487	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		6704300	0					
ANR	6705488	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM		6704300	1					
ANR	6705489	ExpressionStatement	info -> target2 = prefix_insn & 15	673:3:9022:9054	6704300	1	True				
ANR	6705490	AssignmentExpression	info -> target2 = prefix_insn & 15		6704300	0		=			
ANR	6705491	PtrMemberAccess	info -> target2		6704300	0					
ANR	6705492	Identifier	info		6704300	0					
ANR	6705493	Identifier	target2		6704300	1					
ANR	6705494	BitAndExpression	prefix_insn & 15		6704300	1		&			
ANR	6705495	Identifier	prefix_insn		6704300	0					
ANR	6705496	PrimaryExpression	15		6704300	1					
ANR	6705497	ExpressionStatement	* tp ++ = '['	677:3:9062:9073	6704300	2	True				
ANR	6705498	AssignmentExpression	* tp ++ = '['		6704300	0		=			
ANR	6705499	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705500	UnaryOperator	*		6704300	0					
ANR	6705501	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705502	Identifier	tp		6704300	0					
ANR	6705503	IncDec	++		6704300	1					
ANR	6705504	PrimaryExpression	'['		6704300	1					
ANR	6705505	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	679:3:9079:9150	6704300	3	True				
ANR	6705506	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705507	Identifier	tp		6704300	0					
ANR	6705508	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705509	Callee	format_reg		6704300	0					
ANR	6705510	Identifier	format_reg		6704300	0					
ANR	6705511	ArgumentList	disdata		6704300	1					
ANR	6705512	Argument	disdata		6704300	0					
ANR	6705513	Identifier	disdata		6704300	0					
ANR	6705514	Argument	prefix_insn & 15		6704300	1					
ANR	6705515	BitAndExpression	prefix_insn & 15		6704300	0		&			
ANR	6705516	Identifier	prefix_insn		6704300	0					
ANR	6705517	PrimaryExpression	15		6704300	1					
ANR	6705518	Argument	tp		6704300	2					
ANR	6705519	Identifier	tp		6704300	0					
ANR	6705520	Argument	with_reg_prefix		6704300	3					
ANR	6705521	Identifier	with_reg_prefix		6704300	0					
ANR	6705522	IfStatement	if ( prefix_insn & 0x400 )		6704300	4					
ANR	6705523	Condition	prefix_insn & 0x400	683:7:9160:9178	6704300	0	True				
ANR	6705524	BitAndExpression	prefix_insn & 0x400		6704300	0		&			
ANR	6705525	Identifier	prefix_insn		6704300	0					
ANR	6705526	PrimaryExpression	0x400		6704300	1					
ANR	6705527	ExpressionStatement	* tp ++ = '+'	685:5:9187:9198	6704300	1	True				
ANR	6705528	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6705529	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705530	UnaryOperator	*		6704300	0					
ANR	6705531	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705532	Identifier	tp		6704300	0					
ANR	6705533	IncDec	++		6704300	1					
ANR	6705534	PrimaryExpression	'+'		6704300	1					
ANR	6705535	ExpressionStatement	* tp ++ = ']'	687:3:9204:9215	6704300	5	True				
ANR	6705536	AssignmentExpression	* tp ++ = ']'		6704300	0		=			
ANR	6705537	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705538	UnaryOperator	*		6704300	0					
ANR	6705539	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705540	Identifier	tp		6704300	0					
ANR	6705541	IncDec	++		6704300	1					
ANR	6705542	PrimaryExpression	']'		6704300	1					
ANR	6705543	BreakStatement	break ;	691:6:9235:9240	6704300	2	True				
ANR	6705544	Label	case BDAP_QUICK_OPCODE :	695:4:9249:9271	6704300	3	True				
ANR	6705545	Identifier	BDAP_QUICK_OPCODE		6704300	0					
ANR	6705546	CompoundStatement		675:8:8826:8836	6704300	4					
ANR	6705547	IdentifierDeclStatement	int number ;	699:8:9291:9301	6704300	0	True				
ANR	6705548	IdentifierDecl	number		6704300	0					
ANR	6705549	IdentifierDeclType	int		6704300	0					
ANR	6705550	Identifier	number		6704300	1					
ANR	6705551	ExpressionStatement	number = prefix_buffer [ 0 ]	703:8:9314:9339	6704300	1	True				
ANR	6705552	AssignmentExpression	number = prefix_buffer [ 0 ]		6704300	0		=			
ANR	6705553	Identifier	number		6704300	0					
ANR	6705554	ArrayIndexing	prefix_buffer [ 0 ]		6704300	1					
ANR	6705555	Identifier	prefix_buffer		6704300	0					
ANR	6705556	PrimaryExpression	0		6704300	1					
ANR	6705557	IfStatement	if ( number > 127 )		6704300	2					
ANR	6705558	Condition	number > 127	705:12:9354:9365	6704300	0	True				
ANR	6705559	RelationalExpression	number > 127		6704300	0		>			
ANR	6705560	Identifier	number		6704300	0					
ANR	6705561	PrimaryExpression	127		6704300	1					
ANR	6705562	ExpressionStatement	number -= 256	707:3:9372:9385	6704300	1	True				
ANR	6705563	AssignmentExpression	number -= 256		6704300	0		-=			
ANR	6705564	Identifier	number		6704300	0					
ANR	6705565	PrimaryExpression	256		6704300	1					
ANR	6705566	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	713:8:9458:9542	6704300	3	True				
ANR	6705567	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705568	Identifier	tp		6704300	0					
ANR	6705569	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705570	Callee	format_reg		6704300	0					
ANR	6705571	Identifier	format_reg		6704300	0					
ANR	6705572	ArgumentList	disdata		6704300	1					
ANR	6705573	Argument	disdata		6704300	0					
ANR	6705574	Identifier	disdata		6704300	0					
ANR	6705575	Argument	( prefix_insn >> 12 ) & 15		6704300	1					
ANR	6705576	BitAndExpression	( prefix_insn >> 12 ) & 15		6704300	0		&			
ANR	6705577	ShiftExpression	prefix_insn >> 12		6704300	0		>>			
ANR	6705578	Identifier	prefix_insn		6704300	0					
ANR	6705579	PrimaryExpression	12		6704300	1					
ANR	6705580	PrimaryExpression	15		6704300	1					
ANR	6705581	Argument	tp		6704300	2					
ANR	6705582	Identifier	tp		6704300	0					
ANR	6705583	Argument	with_reg_prefix		6704300	3					
ANR	6705584	Identifier	with_reg_prefix		6704300	0					
ANR	6705585	IfStatement	if ( number >= 0 )		6704300	4					
ANR	6705586	Condition	number >= 0	717:12:9557:9567	6704300	0	True				
ANR	6705587	RelationalExpression	number >= 0		6704300	0		>=			
ANR	6705588	Identifier	number		6704300	0					
ANR	6705589	PrimaryExpression	0		6704300	1					
ANR	6705590	ExpressionStatement	* tp ++ = '+'	719:3:9574:9585	6704300	1	True				
ANR	6705591	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6705592	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705593	UnaryOperator	*		6704300	0					
ANR	6705594	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705595	Identifier	tp		6704300	0					
ANR	6705596	IncDec	++		6704300	1					
ANR	6705597	PrimaryExpression	'+'		6704300	1					
ANR	6705598	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	721:8:9596:9627	6704300	5	True				
ANR	6705599	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		6704300	0		=			
ANR	6705600	Identifier	tp		6704300	0					
ANR	6705601	CallExpression	"format_dec ( number , tp , 1 )"		6704300	1					
ANR	6705602	Callee	format_dec		6704300	0					
ANR	6705603	Identifier	format_dec		6704300	0					
ANR	6705604	ArgumentList	number		6704300	1					
ANR	6705605	Argument	number		6704300	0					
ANR	6705606	Identifier	number		6704300	0					
ANR	6705607	Argument	tp		6704300	1					
ANR	6705608	Identifier	tp		6704300	0					
ANR	6705609	Argument	1		6704300	2					
ANR	6705610	PrimaryExpression	1		6704300	0					
ANR	6705611	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	725:8:9640:9686	6704300	6	True				
ANR	6705612	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	0		|=			
ANR	6705613	PtrMemberAccess	info -> flags		6704300	0					
ANR	6705614	Identifier	info		6704300	0					
ANR	6705615	Identifier	flags		6704300	1					
ANR	6705616	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	1					
ANR	6705617	ExpressionStatement	info -> target = ( prefix_insn >> 12 ) & 15	727:8:9697:9736	6704300	7	True				
ANR	6705618	AssignmentExpression	info -> target = ( prefix_insn >> 12 ) & 15		6704300	0		=			
ANR	6705619	PtrMemberAccess	info -> target		6704300	0					
ANR	6705620	Identifier	info		6704300	0					
ANR	6705621	Identifier	target		6704300	1					
ANR	6705622	BitAndExpression	( prefix_insn >> 12 ) & 15		6704300	1		&			
ANR	6705623	ShiftExpression	prefix_insn >> 12		6704300	0		>>			
ANR	6705624	Identifier	prefix_insn		6704300	0					
ANR	6705625	PrimaryExpression	12		6704300	1					
ANR	6705626	PrimaryExpression	15		6704300	1					
ANR	6705627	ExpressionStatement	info -> target2 = ( bfd_vma ) number	729:8:9747:9779	6704300	8	True				
ANR	6705628	AssignmentExpression	info -> target2 = ( bfd_vma ) number		6704300	0		=			
ANR	6705629	PtrMemberAccess	info -> target2		6704300	0					
ANR	6705630	Identifier	info		6704300	0					
ANR	6705631	Identifier	target2		6704300	1					
ANR	6705632	CastExpression	( bfd_vma ) number		6704300	1					
ANR	6705633	CastTarget	bfd_vma		6704300	0					
ANR	6705634	Identifier	number		6704300	1					
ANR	6705635	BreakStatement	break ;	731:8:9790:9795	6704300	9	True				
ANR	6705636	Label	case BIAP_OPCODE :	737:4:9813:9829	6704300	5	True				
ANR	6705637	Identifier	BIAP_OPCODE		6704300	0					
ANR	6705638	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	741:6:9868:9942	6704300	6	True				
ANR	6705639	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705640	Identifier	tp		6704300	0					
ANR	6705641	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705642	Callee	format_reg		6704300	0					
ANR	6705643	Identifier	format_reg		6704300	0					
ANR	6705644	ArgumentList	disdata		6704300	1					
ANR	6705645	Argument	disdata		6704300	0					
ANR	6705646	Identifier	disdata		6704300	0					
ANR	6705647	Argument	prefix_insn & 15		6704300	1					
ANR	6705648	BitAndExpression	prefix_insn & 15		6704300	0		&			
ANR	6705649	Identifier	prefix_insn		6704300	0					
ANR	6705650	PrimaryExpression	15		6704300	1					
ANR	6705651	Argument	tp		6704300	2					
ANR	6705652	Identifier	tp		6704300	0					
ANR	6705653	Argument	with_reg_prefix		6704300	3					
ANR	6705654	Identifier	with_reg_prefix		6704300	0					
ANR	6705655	ExpressionStatement	* tp ++ = '+'	745:6:9951:9962	6704300	7	True				
ANR	6705656	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6705657	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705658	UnaryOperator	*		6704300	0					
ANR	6705659	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705660	Identifier	tp		6704300	0					
ANR	6705661	IncDec	++		6704300	1					
ANR	6705662	PrimaryExpression	'+'		6704300	1					
ANR	6705663	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	747:6:9971:10053	6704300	8	True				
ANR	6705664	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705665	Identifier	tp		6704300	0					
ANR	6705666	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705667	Callee	format_reg		6704300	0					
ANR	6705668	Identifier	format_reg		6704300	0					
ANR	6705669	ArgumentList	disdata		6704300	1					
ANR	6705670	Argument	disdata		6704300	0					
ANR	6705671	Identifier	disdata		6704300	0					
ANR	6705672	Argument	( prefix_insn >> 12 ) & 15		6704300	1					
ANR	6705673	BitAndExpression	( prefix_insn >> 12 ) & 15		6704300	0		&			
ANR	6705674	ShiftExpression	prefix_insn >> 12		6704300	0		>>			
ANR	6705675	Identifier	prefix_insn		6704300	0					
ANR	6705676	PrimaryExpression	12		6704300	1					
ANR	6705677	PrimaryExpression	15		6704300	1					
ANR	6705678	Argument	tp		6704300	2					
ANR	6705679	Identifier	tp		6704300	0					
ANR	6705680	Argument	with_reg_prefix		6704300	3					
ANR	6705681	Identifier	with_reg_prefix		6704300	0					
ANR	6705682	ExpressionStatement	* tp ++ = '.'	751:6:10062:10073	6704300	9	True				
ANR	6705683	AssignmentExpression	* tp ++ = '.'		6704300	0		=			
ANR	6705684	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705685	UnaryOperator	*		6704300	0					
ANR	6705686	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705687	Identifier	tp		6704300	0					
ANR	6705688	IncDec	++		6704300	1					
ANR	6705689	PrimaryExpression	'.'		6704300	1					
ANR	6705690	ExpressionStatement	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]	753:6:10082:10123	6704300	10	True				
ANR	6705691	AssignmentExpression	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]		6704300	0		=			
ANR	6705692	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705693	UnaryOperator	*		6704300	0					
ANR	6705694	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705695	Identifier	tp		6704300	0					
ANR	6705696	IncDec	++		6704300	1					
ANR	6705697	ArrayIndexing	mode_char [ ( prefix_insn >> 4 ) & 3 ]		6704300	1					
ANR	6705698	Identifier	mode_char		6704300	0					
ANR	6705699	BitAndExpression	( prefix_insn >> 4 ) & 3		6704300	1		&			
ANR	6705700	ShiftExpression	prefix_insn >> 4		6704300	0		>>			
ANR	6705701	Identifier	prefix_insn		6704300	0					
ANR	6705702	PrimaryExpression	4		6704300	1					
ANR	6705703	PrimaryExpression	3		6704300	1					
ANR	6705704	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) ) )	757:6:10134:10389	6704300	11	True				
ANR	6705705	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) ) )		6704300	0		|=			
ANR	6705706	PtrMemberAccess	info -> flags		6704300	0					
ANR	6705707	Identifier	info		6704300	0					
ANR	6705708	Identifier	flags		6704300	1					
ANR	6705709	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) )		6704300	1		|			
ANR	6705710	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		6704300	0					
ANR	6705711	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) )		6704300	1		|			
ANR	6705712	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	0					
ANR	6705713	ConditionalExpression	( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 )		6704300	1					
ANR	6705714	Condition	prefix_insn & 0x8000		6704300	0					
ANR	6705715	BitAndExpression	prefix_insn & 0x8000		6704300	0		&			
ANR	6705716	Identifier	prefix_insn		6704300	0					
ANR	6705717	PrimaryExpression	0x8000		6704300	1					
ANR	6705718	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MULT4		6704300	1					
ANR	6705719	ConditionalExpression	( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0		6704300	2					
ANR	6705720	Condition	prefix_insn & 0x8000		6704300	0					
ANR	6705721	BitAndExpression	prefix_insn & 0x8000		6704300	0		&			
ANR	6705722	Identifier	prefix_insn		6704300	0					
ANR	6705723	PrimaryExpression	0x8000		6704300	1					
ANR	6705724	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MULT2		6704300	1					
ANR	6705725	PrimaryExpression	0		6704300	2					
ANR	6705726	IfStatement	if ( insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f )		6704300	12					
ANR	6705727	Condition	insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f	777:10:10470:10519	6704300	0	True				
ANR	6705728	AndExpression	insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f		6704300	0		&&			
ANR	6705729	EqualityExpression	insn == 0xf83f		6704300	0		==			
ANR	6705730	Identifier	insn		6704300	0					
ANR	6705731	PrimaryExpression	0xf83f		6704300	1					
ANR	6705732	EqualityExpression	( prefix_insn & ~0xf000 ) == 0x55f		6704300	1		==			
ANR	6705733	BitAndExpression	prefix_insn & ~0xf000		6704300	0		&			
ANR	6705734	Identifier	prefix_insn		6704300	0					
ANR	6705735	Identifier	~0xf000		6704300	1					
ANR	6705736	PrimaryExpression	0x55f		6704300	1					
ANR	6705737	ExpressionStatement	case_offset_counter = no_of_case_offsets	781:8:10588:10628	6704300	1	True				
ANR	6705738	AssignmentExpression	case_offset_counter = no_of_case_offsets		6704300	0		=			
ANR	6705739	Identifier	case_offset_counter		6704300	0					
ANR	6705740	Identifier	no_of_case_offsets		6704300	1					
ANR	6705741	BreakStatement	break ;	783:6:10637:10642	6704300	13	True				
ANR	6705742	Label	case BDAP_INDIR_OPCODE :	787:4:10651:10673	6704300	14	True				
ANR	6705743	Identifier	BDAP_INDIR_OPCODE		6704300	0					
ANR	6705744	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	793:6:10759:10841	6704300	15	True				
ANR	6705745	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6705746	Identifier	tp		6704300	0					
ANR	6705747	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6705748	Callee	format_reg		6704300	0					
ANR	6705749	Identifier	format_reg		6704300	0					
ANR	6705750	ArgumentList	disdata		6704300	1					
ANR	6705751	Argument	disdata		6704300	0					
ANR	6705752	Identifier	disdata		6704300	0					
ANR	6705753	Argument	( prefix_insn >> 12 ) & 15		6704300	1					
ANR	6705754	BitAndExpression	( prefix_insn >> 12 ) & 15		6704300	0		&			
ANR	6705755	ShiftExpression	prefix_insn >> 12		6704300	0		>>			
ANR	6705756	Identifier	prefix_insn		6704300	0					
ANR	6705757	PrimaryExpression	12		6704300	1					
ANR	6705758	PrimaryExpression	15		6704300	1					
ANR	6705759	Argument	tp		6704300	2					
ANR	6705760	Identifier	tp		6704300	0					
ANR	6705761	Argument	with_reg_prefix		6704300	3					
ANR	6705762	Identifier	with_reg_prefix		6704300	0					
ANR	6705763	IfStatement	if ( ( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15 )		6704300	16					
ANR	6705764	Condition	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15	799:10:10856:10904	6704300	0	True				
ANR	6705765	AndExpression	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15		6704300	0		&&			
ANR	6705766	BitAndExpression	prefix_insn & 0x400		6704300	0		&			
ANR	6705767	Identifier	prefix_insn		6704300	0					
ANR	6705768	PrimaryExpression	0x400		6704300	1					
ANR	6705769	EqualityExpression	( prefix_insn & 15 ) == 15		6704300	1		==			
ANR	6705770	BitAndExpression	prefix_insn & 15		6704300	0		&			
ANR	6705771	Identifier	prefix_insn		6704300	0					
ANR	6705772	PrimaryExpression	15		6704300	1					
ANR	6705773	PrimaryExpression	15		6704300	1					
ANR	6705774	CompoundStatement		787:3:10541:10586	6704300	1					
ANR	6705775	IdentifierDeclStatement	long number ;	803:3:10922:10933	6704300	0	True				
ANR	6705776	IdentifierDecl	number		6704300	0					
ANR	6705777	IdentifierDeclType	long		6704300	0					
ANR	6705778	Identifier	number		6704300	1					
ANR	6705779	IdentifierDeclStatement	unsigned int nbytes ;	805:3:10939:10958	6704300	1	True				
ANR	6705780	IdentifierDecl	nbytes		6704300	0					
ANR	6705781	IdentifierDeclType	unsigned int		6704300	0					
ANR	6705782	Identifier	nbytes		6704300	1					
ANR	6705783	IdentifierDeclStatement	int mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 ) ;	811:3:11006:11051	6704300	2	True				
ANR	6705784	IdentifierDecl	mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 )		6704300	0					
ANR	6705785	IdentifierDeclType	int		6704300	0					
ANR	6705786	Identifier	mode_size		6704300	1					
ANR	6705787	AssignmentExpression	mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 )		6704300	2		=			
ANR	6705788	Identifier	mode_size		6704300	0					
ANR	6705789	ShiftExpression	1 << ( ( prefix_insn >> 4 ) & 3 )		6704300	1		<<			
ANR	6705790	PrimaryExpression	1		6704300	0					
ANR	6705791	BitAndExpression	( prefix_insn >> 4 ) & 3		6704300	1		&			
ANR	6705792	ShiftExpression	prefix_insn >> 4		6704300	0		>>			
ANR	6705793	Identifier	prefix_insn		6704300	0					
ANR	6705794	PrimaryExpression	4		6704300	1					
ANR	6705795	PrimaryExpression	3		6704300	1					
ANR	6705796	IfStatement	if ( mode_size == 1 )		6704300	3					
ANR	6705797	Condition	mode_size == 1	815:7:11063:11076	6704300	0	True				
ANR	6705798	EqualityExpression	mode_size == 1		6704300	0		==			
ANR	6705799	Identifier	mode_size		6704300	0					
ANR	6705800	PrimaryExpression	1		6704300	1					
ANR	6705801	ExpressionStatement	nbytes = 2	817:5:11085:11095	6704300	1	True				
ANR	6705802	AssignmentExpression	nbytes = 2		6704300	0		=			
ANR	6705803	Identifier	nbytes		6704300	0					
ANR	6705804	PrimaryExpression	2		6704300	1					
ANR	6705805	ElseStatement	else		6704300	0					
ANR	6705806	ExpressionStatement	nbytes = mode_size	821:5:11112:11130	6704300	0	True				
ANR	6705807	AssignmentExpression	nbytes = mode_size		6704300	0		=			
ANR	6705808	Identifier	nbytes		6704300	0					
ANR	6705809	Identifier	mode_size		6704300	1					
ANR	6705810	SwitchStatement	switch ( nbytes )		6704300	4					
ANR	6705811	Condition	nbytes	825:11:11146:11151	6704300	0	True				
ANR	6705812	Identifier	nbytes		6704300	0					
ANR	6705813	CompoundStatement		803:5:10695:10695	6704300	1					
ANR	6705814	Label	case 1 :	829:5:11168:11174	6704300	0	True				
ANR	6705815	ExpressionStatement	number = prefix_buffer [ 2 ]	831:7:11184:11209	6704300	1	True				
ANR	6705816	AssignmentExpression	number = prefix_buffer [ 2 ]		6704300	0		=			
ANR	6705817	Identifier	number		6704300	0					
ANR	6705818	ArrayIndexing	prefix_buffer [ 2 ]		6704300	1					
ANR	6705819	Identifier	prefix_buffer		6704300	0					
ANR	6705820	PrimaryExpression	2		6704300	1					
ANR	6705821	IfStatement	if ( number > 127 )		6704300	2					
ANR	6705822	Condition	number > 127	833:11:11223:11234	6704300	0	True				
ANR	6705823	RelationalExpression	number > 127		6704300	0		>			
ANR	6705824	Identifier	number		6704300	0					
ANR	6705825	PrimaryExpression	127		6704300	1					
ANR	6705826	ExpressionStatement	number -= 256	835:9:11247:11260	6704300	1	True				
ANR	6705827	AssignmentExpression	number -= 256		6704300	0		-=			
ANR	6705828	Identifier	number		6704300	0					
ANR	6705829	PrimaryExpression	256		6704300	1					
ANR	6705830	BreakStatement	break ;	837:7:11270:11275	6704300	3	True				
ANR	6705831	Label	case 2 :	841:5:11285:11291	6704300	4	True				
ANR	6705832	ExpressionStatement	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256	843:7:11301:11351	6704300	5	True				
ANR	6705833	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256		6704300	0		=			
ANR	6705834	Identifier	number		6704300	0					
ANR	6705835	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256		6704300	1		+			
ANR	6705836	ArrayIndexing	prefix_buffer [ 2 ]		6704300	0					
ANR	6705837	Identifier	prefix_buffer		6704300	0					
ANR	6705838	PrimaryExpression	2		6704300	1					
ANR	6705839	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		6704300	1		*			
ANR	6705840	ArrayIndexing	prefix_buffer [ 3 ]		6704300	0					
ANR	6705841	Identifier	prefix_buffer		6704300	0					
ANR	6705842	PrimaryExpression	3		6704300	1					
ANR	6705843	PrimaryExpression	256		6704300	1					
ANR	6705844	IfStatement	if ( number > 32767 )		6704300	6					
ANR	6705845	Condition	number > 32767	845:11:11365:11378	6704300	0	True				
ANR	6705846	RelationalExpression	number > 32767		6704300	0		>			
ANR	6705847	Identifier	number		6704300	0					
ANR	6705848	PrimaryExpression	32767		6704300	1					
ANR	6705849	ExpressionStatement	number -= 65536	847:9:11391:11406	6704300	1	True				
ANR	6705850	AssignmentExpression	number -= 65536		6704300	0		-=			
ANR	6705851	Identifier	number		6704300	0					
ANR	6705852	PrimaryExpression	65536		6704300	1					
ANR	6705853	BreakStatement	break ;	849:7:11416:11421	6704300	7	True				
ANR	6705854	Label	case 4 :	853:5:11431:11437	6704300	8	True				
ANR	6705855	ExpressionStatement	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000	855:7:11447:11585	6704300	9	True				
ANR	6705856	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	0		=			
ANR	6705857	Identifier	number		6704300	0					
ANR	6705858	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705859	ArrayIndexing	prefix_buffer [ 2 ]		6704300	0					
ANR	6705860	Identifier	prefix_buffer		6704300	0					
ANR	6705861	PrimaryExpression	2		6704300	1					
ANR	6705862	AdditiveExpression	prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705863	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		6704300	0		*			
ANR	6705864	ArrayIndexing	prefix_buffer [ 3 ]		6704300	0					
ANR	6705865	Identifier	prefix_buffer		6704300	0					
ANR	6705866	PrimaryExpression	3		6704300	1					
ANR	6705867	PrimaryExpression	256		6704300	1					
ANR	6705868	AdditiveExpression	prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		6704300	1		+			
ANR	6705869	MultiplicativeExpression	prefix_buffer [ 4 ] * 65536		6704300	0		*			
ANR	6705870	ArrayIndexing	prefix_buffer [ 4 ]		6704300	0					
ANR	6705871	Identifier	prefix_buffer		6704300	0					
ANR	6705872	PrimaryExpression	4		6704300	1					
ANR	6705873	PrimaryExpression	65536		6704300	1					
ANR	6705874	MultiplicativeExpression	prefix_buffer [ 5 ] * 0x1000000		6704300	1		*			
ANR	6705875	ArrayIndexing	prefix_buffer [ 5 ]		6704300	0					
ANR	6705876	Identifier	prefix_buffer		6704300	0					
ANR	6705877	PrimaryExpression	5		6704300	1					
ANR	6705878	PrimaryExpression	0x1000000		6704300	1					
ANR	6705879	BreakStatement	break ;	863:7:11595:11600	6704300	10	True				
ANR	6705880	Label	default :	867:5:11610:11617	6704300	11	True				
ANR	6705881	Identifier	default		6704300	0					
ANR	6705882	ExpressionStatement	"strcpy ( tp , ""bug"" )"	869:7:11627:11645	6704300	12	True				
ANR	6705883	CallExpression	"strcpy ( tp , ""bug"" )"		6704300	0					
ANR	6705884	Callee	strcpy		6704300	0					
ANR	6705885	Identifier	strcpy		6704300	0					
ANR	6705886	ArgumentList	tp		6704300	1					
ANR	6705887	Argument	tp		6704300	0					
ANR	6705888	Identifier	tp		6704300	0					
ANR	6705889	Argument	"""bug"""		6704300	1					
ANR	6705890	PrimaryExpression	"""bug"""		6704300	0					
ANR	6705891	ExpressionStatement	tp += 3	871:7:11655:11662	6704300	13	True				
ANR	6705892	AssignmentExpression	tp += 3		6704300	0		+=			
ANR	6705893	Identifier	tp		6704300	0					
ANR	6705894	PrimaryExpression	3		6704300	1					
ANR	6705895	ExpressionStatement	number = 42	873:7:11672:11683	6704300	14	True				
ANR	6705896	AssignmentExpression	number = 42		6704300	0		=			
ANR	6705897	Identifier	number		6704300	0					
ANR	6705898	PrimaryExpression	42		6704300	1					
ANR	6705899	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	879:3:11699:11745	6704300	5	True				
ANR	6705900	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	0		|=			
ANR	6705901	PtrMemberAccess	info -> flags		6704300	0					
ANR	6705902	Identifier	info		6704300	0					
ANR	6705903	Identifier	flags		6704300	1					
ANR	6705904	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	1					
ANR	6705905	ExpressionStatement	info -> target2 = ( bfd_vma ) number	881:3:11751:11783	6704300	6	True				
ANR	6705906	AssignmentExpression	info -> target2 = ( bfd_vma ) number		6704300	0		=			
ANR	6705907	PtrMemberAccess	info -> target2		6704300	0					
ANR	6705908	Identifier	info		6704300	0					
ANR	6705909	Identifier	target2		6704300	1					
ANR	6705910	CastExpression	( bfd_vma ) number		6704300	1					
ANR	6705911	CastTarget	bfd_vma		6704300	0					
ANR	6705912	Identifier	number		6704300	1					
ANR	6705913	IfStatement	if ( nbytes == 4 )		6704300	7					
ANR	6705914	Condition	nbytes == 4	889:7:11864:11874	6704300	0	True				
ANR	6705915	EqualityExpression	nbytes == 4		6704300	0		==			
ANR	6705916	Identifier	nbytes		6704300	0					
ANR	6705917	PrimaryExpression	4		6704300	1					
ANR	6705918	CompoundStatement		867:5:11418:11418	6704300	1					
ANR	6705919	ExpressionStatement	* tp ++ = '+'	897:7:11967:11978	6704300	0	True				
ANR	6705920	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6705921	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705922	UnaryOperator	*		6704300	0					
ANR	6705923	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705924	Identifier	tp		6704300	0					
ANR	6705925	IncDec	++		6704300	1					
ANR	6705926	PrimaryExpression	'+'		6704300	1					
ANR	6705927	ExpressionStatement	* tp = 0	899:7:11988:11995	6704300	1	True				
ANR	6705928	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6705929	UnaryOperationExpression	* tp		6704300	0					
ANR	6705930	UnaryOperator	*		6704300	0					
ANR	6705931	Identifier	tp		6704300	1					
ANR	6705932	PrimaryExpression	0		6704300	1					
ANR	6705933	ExpressionStatement	tp = temp	901:7:12005:12014	6704300	2	True				
ANR	6705934	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6705935	Identifier	tp		6704300	0					
ANR	6705936	Identifier	temp		6704300	1					
ANR	6705937	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	903:7:12024:12072	6704300	3	True				
ANR	6705938	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6705939	Callee	* info -> fprintf_func		6704300	0					
ANR	6705940	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6705941	UnaryOperator	*		6704300	0					
ANR	6705942	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6705943	Identifier	info		6704300	0					
ANR	6705944	Identifier	fprintf_func		6704300	1					
ANR	6705945	ArgumentList	info -> stream		6704300	1					
ANR	6705946	Argument	info -> stream		6704300	0					
ANR	6705947	PtrMemberAccess	info -> stream		6704300	0					
ANR	6705948	Identifier	info		6704300	0					
ANR	6705949	Identifier	stream		6704300	1					
ANR	6705950	Argument	"""%s"""		6704300	1					
ANR	6705951	PrimaryExpression	"""%s"""		6704300	0					
ANR	6705952	Argument	temp		6704300	2					
ANR	6705953	Identifier	temp		6704300	0					
ANR	6705954	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	907:7:12084:12136	6704300	4	True				
ANR	6705955	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		6704300	0					
ANR	6705956	Callee	* info -> print_address_func		6704300	0					
ANR	6705957	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6705958	UnaryOperator	*		6704300	0					
ANR	6705959	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6705960	Identifier	info		6704300	0					
ANR	6705961	Identifier	print_address_func		6704300	1					
ANR	6705962	ArgumentList	( bfd_vma ) number		6704300	1					
ANR	6705963	Argument	( bfd_vma ) number		6704300	0					
ANR	6705964	CastExpression	( bfd_vma ) number		6704300	0					
ANR	6705965	CastTarget	bfd_vma		6704300	0					
ANR	6705966	Identifier	number		6704300	1					
ANR	6705967	Argument	info		6704300	1					
ANR	6705968	Identifier	info		6704300	0					
ANR	6705969	ElseStatement	else		6704300	0					
ANR	6705970	CompoundStatement		889:5:11696:11696	6704300	0					
ANR	6705971	IfStatement	if ( number >= 0 )		6704300	0					
ANR	6705972	Condition	number >= 0	915:11:12175:12185	6704300	0	True				
ANR	6705973	RelationalExpression	number >= 0		6704300	0		>=			
ANR	6705974	Identifier	number		6704300	0					
ANR	6705975	PrimaryExpression	0		6704300	1					
ANR	6705976	ExpressionStatement	* tp ++ = '+'	917:9:12198:12209	6704300	1	True				
ANR	6705977	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6705978	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6705979	UnaryOperator	*		6704300	0					
ANR	6705980	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6705981	Identifier	tp		6704300	0					
ANR	6705982	IncDec	++		6704300	1					
ANR	6705983	PrimaryExpression	'+'		6704300	1					
ANR	6705984	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	919:7:12219:12250	6704300	1	True				
ANR	6705985	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		6704300	0		=			
ANR	6705986	Identifier	tp		6704300	0					
ANR	6705987	CallExpression	"format_dec ( number , tp , 1 )"		6704300	1					
ANR	6705988	Callee	format_dec		6704300	0					
ANR	6705989	Identifier	format_dec		6704300	0					
ANR	6705990	ArgumentList	number		6704300	1					
ANR	6705991	Argument	number		6704300	0					
ANR	6705992	Identifier	number		6704300	0					
ANR	6705993	Argument	tp		6704300	1					
ANR	6705994	Identifier	tp		6704300	0					
ANR	6705995	Argument	1		6704300	2					
ANR	6705996	PrimaryExpression	1		6704300	0					
ANR	6705997	ElseStatement	else		6704300	0					
ANR	6705998	CompoundStatement		903:8:11827:11827	6704300	0					
ANR	6705999	ExpressionStatement	* tp ++ = '+'	931:3:12341:12352	6704300	0	True				
ANR	6706000	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6706001	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706002	UnaryOperator	*		6704300	0					
ANR	6706003	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706004	Identifier	tp		6704300	0					
ANR	6706005	IncDec	++		6704300	1					
ANR	6706006	PrimaryExpression	'+'		6704300	1					
ANR	6706007	ExpressionStatement	* tp ++ = '['	933:3:12358:12369	6704300	1	True				
ANR	6706008	AssignmentExpression	* tp ++ = '['		6704300	0		=			
ANR	6706009	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706010	UnaryOperator	*		6704300	0					
ANR	6706011	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706012	Identifier	tp		6704300	0					
ANR	6706013	IncDec	++		6704300	1					
ANR	6706014	PrimaryExpression	'['		6704300	1					
ANR	6706015	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	935:3:12375:12446	6704300	2	True				
ANR	6706016	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6706017	Identifier	tp		6704300	0					
ANR	6706018	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6706019	Callee	format_reg		6704300	0					
ANR	6706020	Identifier	format_reg		6704300	0					
ANR	6706021	ArgumentList	disdata		6704300	1					
ANR	6706022	Argument	disdata		6704300	0					
ANR	6706023	Identifier	disdata		6704300	0					
ANR	6706024	Argument	prefix_insn & 15		6704300	1					
ANR	6706025	BitAndExpression	prefix_insn & 15		6704300	0		&			
ANR	6706026	Identifier	prefix_insn		6704300	0					
ANR	6706027	PrimaryExpression	15		6704300	1					
ANR	6706028	Argument	tp		6704300	2					
ANR	6706029	Identifier	tp		6704300	0					
ANR	6706030	Argument	with_reg_prefix		6704300	3					
ANR	6706031	Identifier	with_reg_prefix		6704300	0					
ANR	6706032	IfStatement	if ( prefix_insn & 0x400 )		6704300	3					
ANR	6706033	Condition	prefix_insn & 0x400	939:7:12456:12474	6704300	0	True				
ANR	6706034	BitAndExpression	prefix_insn & 0x400		6704300	0		&			
ANR	6706035	Identifier	prefix_insn		6704300	0					
ANR	6706036	PrimaryExpression	0x400		6704300	1					
ANR	6706037	ExpressionStatement	* tp ++ = '+'	941:5:12483:12494	6704300	1	True				
ANR	6706038	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6706039	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706040	UnaryOperator	*		6704300	0					
ANR	6706041	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706042	Identifier	tp		6704300	0					
ANR	6706043	IncDec	++		6704300	1					
ANR	6706044	PrimaryExpression	'+'		6704300	1					
ANR	6706045	ExpressionStatement	* tp ++ = ']'	943:3:12500:12511	6704300	4	True				
ANR	6706046	AssignmentExpression	* tp ++ = ']'		6704300	0		=			
ANR	6706047	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706048	UnaryOperator	*		6704300	0					
ANR	6706049	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706050	Identifier	tp		6704300	0					
ANR	6706051	IncDec	++		6704300	1					
ANR	6706052	PrimaryExpression	']'		6704300	1					
ANR	6706053	ExpressionStatement	* tp ++ = '.'	945:3:12517:12528	6704300	5	True				
ANR	6706054	AssignmentExpression	* tp ++ = '.'		6704300	0		=			
ANR	6706055	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706056	UnaryOperator	*		6704300	0					
ANR	6706057	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706058	Identifier	tp		6704300	0					
ANR	6706059	IncDec	++		6704300	1					
ANR	6706060	PrimaryExpression	'.'		6704300	1					
ANR	6706061	ExpressionStatement	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]	947:3:12534:12575	6704300	6	True				
ANR	6706062	AssignmentExpression	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]		6704300	0		=			
ANR	6706063	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706064	UnaryOperator	*		6704300	0					
ANR	6706065	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706066	Identifier	tp		6704300	0					
ANR	6706067	IncDec	++		6704300	1					
ANR	6706068	ArrayIndexing	mode_char [ ( prefix_insn >> 4 ) & 3 ]		6704300	1					
ANR	6706069	Identifier	mode_char		6704300	0					
ANR	6706070	BitAndExpression	( prefix_insn >> 4 ) & 3		6704300	1		&			
ANR	6706071	ShiftExpression	prefix_insn >> 4		6704300	0		>>			
ANR	6706072	Identifier	prefix_insn		6704300	0					
ANR	6706073	PrimaryExpression	4		6704300	1					
ANR	6706074	PrimaryExpression	3		6704300	1					
ANR	6706075	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) ) )	951:3:12583:12908	6704300	7	True				
ANR	6706076	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) ) )		6704300	0		|=			
ANR	6706077	PtrMemberAccess	info -> flags		6704300	0					
ANR	6706078	Identifier	info		6704300	0					
ANR	6706079	Identifier	flags		6704300	1					
ANR	6706080	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		6704300	1		|			
ANR	6706081	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		6704300	0					
ANR	6706082	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		6704300	1		|			
ANR	6706083	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM		6704300	0					
ANR	6706084	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		6704300	1		|			
ANR	6706085	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	0					
ANR	6706086	ConditionalExpression	( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE )		6704300	1					
ANR	6706087	Condition	( prefix_insn >> 4 ) == 2		6704300	0					
ANR	6706088	EqualityExpression	( prefix_insn >> 4 ) == 2		6704300	0		==			
ANR	6706089	ShiftExpression	prefix_insn >> 4		6704300	0		>>			
ANR	6706090	Identifier	prefix_insn		6704300	0					
ANR	6706091	PrimaryExpression	4		6704300	1					
ANR	6706092	PrimaryExpression	2		6704300	1					
ANR	6706093	PrimaryExpression	0		6704300	1					
ANR	6706094	ConditionalExpression	( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		6704300	2					
ANR	6706095	Condition	( ( prefix_insn >> 4 ) & 3 ) == 1		6704300	0					
ANR	6706096	EqualityExpression	( ( prefix_insn >> 4 ) & 3 ) == 1		6704300	0		==			
ANR	6706097	BitAndExpression	( prefix_insn >> 4 ) & 3		6704300	0		&			
ANR	6706098	ShiftExpression	prefix_insn >> 4		6704300	0		>>			
ANR	6706099	Identifier	prefix_insn		6704300	0					
ANR	6706100	PrimaryExpression	4		6704300	1					
ANR	6706101	PrimaryExpression	3		6704300	1					
ANR	6706102	PrimaryExpression	1		6704300	1					
ANR	6706103	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD		6704300	1					
ANR	6706104	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		6704300	2					
ANR	6706105	BreakStatement	break ;	973:6:12928:12933	6704300	17	True				
ANR	6706106	Label	default :	977:4:12942:12949	6704300	18	True				
ANR	6706107	Identifier	default		6704300	0					
ANR	6706108	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""?prefix-bug"" )"	979:6:12958:13009	6704300	19	True				
ANR	6706109	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""?prefix-bug"" )"		6704300	0					
ANR	6706110	Callee	* info -> fprintf_func		6704300	0					
ANR	6706111	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6706112	UnaryOperator	*		6704300	0					
ANR	6706113	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6706114	Identifier	info		6704300	0					
ANR	6706115	Identifier	fprintf_func		6704300	1					
ANR	6706116	ArgumentList	info -> stream		6704300	1					
ANR	6706117	Argument	info -> stream		6704300	0					
ANR	6706118	PtrMemberAccess	info -> stream		6704300	0					
ANR	6706119	Identifier	info		6704300	0					
ANR	6706120	Identifier	stream		6704300	1					
ANR	6706121	Argument	"""?prefix-bug"""		6704300	1					
ANR	6706122	PrimaryExpression	"""?prefix-bug"""		6704300	0					
ANR	6706123	ExpressionStatement	prefix_opcodep = NULL	987:2:13076:13097	6704300	2	True				
ANR	6706124	AssignmentExpression	prefix_opcodep = NULL		6704300	0		=			
ANR	6706125	Identifier	prefix_opcodep		6704300	0					
ANR	6706126	Identifier	NULL		6704300	1					
ANR	6706127	ElseStatement	else		6704300	0					
ANR	6706128	CompoundStatement		969:7:12663:12663	6704300	0					
ANR	6706129	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	995:2:13133:13190	6704300	0	True				
ANR	6706130	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6706131	Identifier	tp		6704300	0					
ANR	6706132	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6706133	Callee	format_reg		6704300	0					
ANR	6706134	Identifier	format_reg		6704300	0					
ANR	6706135	ArgumentList	disdata		6704300	1					
ANR	6706136	Argument	disdata		6704300	0					
ANR	6706137	Identifier	disdata		6704300	0					
ANR	6706138	Argument	insn & 15		6704300	1					
ANR	6706139	BitAndExpression	insn & 15		6704300	0		&			
ANR	6706140	Identifier	insn		6704300	0					
ANR	6706141	PrimaryExpression	15		6704300	1					
ANR	6706142	Argument	tp		6704300	2					
ANR	6706143	Identifier	tp		6704300	0					
ANR	6706144	Argument	with_reg_prefix		6704300	3					
ANR	6706145	Identifier	with_reg_prefix		6704300	0					
ANR	6706146	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	999:2:13197:13243	6704300	1	True				
ANR	6706147	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	0		|=			
ANR	6706148	PtrMemberAccess	info -> flags		6704300	0					
ANR	6706149	Identifier	info		6704300	0					
ANR	6706150	Identifier	flags		6704300	1					
ANR	6706151	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300	1					
ANR	6706152	ExpressionStatement	info -> target = insn & 15	1001:2:13248:13272	6704300	2	True				
ANR	6706153	AssignmentExpression	info -> target = insn & 15		6704300	0		=			
ANR	6706154	PtrMemberAccess	info -> target		6704300	0					
ANR	6706155	Identifier	info		6704300	0					
ANR	6706156	Identifier	target		6704300	1					
ANR	6706157	BitAndExpression	insn & 15		6704300	1		&			
ANR	6706158	Identifier	insn		6704300	0					
ANR	6706159	PrimaryExpression	15		6704300	1					
ANR	6706160	IfStatement	if ( insn & 0x400 )		6704300	3					
ANR	6706161	Condition	insn & 0x400	1005:6:13283:13294	6704300	0	True				
ANR	6706162	BitAndExpression	insn & 0x400		6704300	0		&			
ANR	6706163	Identifier	insn		6704300	0					
ANR	6706164	PrimaryExpression	0x400		6704300	1					
ANR	6706165	ExpressionStatement	* tp ++ = '+'	1007:4:13302:13313	6704300	1	True				
ANR	6706166	AssignmentExpression	* tp ++ = '+'		6704300	0		=			
ANR	6706167	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706168	UnaryOperator	*		6704300	0					
ANR	6706169	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706170	Identifier	tp		6704300	0					
ANR	6706171	IncDec	++		6704300	1					
ANR	6706172	PrimaryExpression	'+'		6704300	1					
ANR	6706173	ExpressionStatement	* tp ++ = ']'	1011:5:13331:13342	6704300	3	True				
ANR	6706174	AssignmentExpression	* tp ++ = ']'		6704300	0		=			
ANR	6706175	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706176	UnaryOperator	*		6704300	0					
ANR	6706177	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706178	Identifier	tp		6704300	0					
ANR	6706179	IncDec	++		6704300	1					
ANR	6706180	PrimaryExpression	']'		6704300	1					
ANR	6706181	BreakStatement	break ;	1015:1:13352:13357	6704300	40	True				
ANR	6706182	Label	case 'x' :	1019:6:13368:13376	6704300	41	True				
ANR	6706183	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	1021:1:13380:13445	6704300	42	True				
ANR	6706184	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6706185	Identifier	tp		6704300	0					
ANR	6706186	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6706187	Callee	format_reg		6704300	0					
ANR	6706188	Identifier	format_reg		6704300	0					
ANR	6706189	ArgumentList	disdata		6704300	1					
ANR	6706190	Argument	disdata		6704300	0					
ANR	6706191	Identifier	disdata		6704300	0					
ANR	6706192	Argument	( insn >> 12 ) & 15		6704300	1					
ANR	6706193	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6706194	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6706195	Identifier	insn		6704300	0					
ANR	6706196	PrimaryExpression	12		6704300	1					
ANR	6706197	PrimaryExpression	15		6704300	1					
ANR	6706198	Argument	tp		6704300	2					
ANR	6706199	Identifier	tp		6704300	0					
ANR	6706200	Argument	with_reg_prefix		6704300	3					
ANR	6706201	Identifier	with_reg_prefix		6704300	0					
ANR	6706202	ExpressionStatement	* tp ++ = '.'	1023:1:13449:13460	6704300	43	True				
ANR	6706203	AssignmentExpression	* tp ++ = '.'		6704300	0		=			
ANR	6706204	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706205	UnaryOperator	*		6704300	0					
ANR	6706206	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706207	Identifier	tp		6704300	0					
ANR	6706208	IncDec	++		6704300	1					
ANR	6706209	PrimaryExpression	'.'		6704300	1					
ANR	6706210	ExpressionStatement	* tp ++ = mode_char [ ( insn >> 4 ) & 3 ]	1025:1:13464:13498	6704300	44	True				
ANR	6706211	AssignmentExpression	* tp ++ = mode_char [ ( insn >> 4 ) & 3 ]		6704300	0		=			
ANR	6706212	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706213	UnaryOperator	*		6704300	0					
ANR	6706214	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706215	Identifier	tp		6704300	0					
ANR	6706216	IncDec	++		6704300	1					
ANR	6706217	ArrayIndexing	mode_char [ ( insn >> 4 ) & 3 ]		6704300	1					
ANR	6706218	Identifier	mode_char		6704300	0					
ANR	6706219	BitAndExpression	( insn >> 4 ) & 3		6704300	1		&			
ANR	6706220	ShiftExpression	insn >> 4		6704300	0		>>			
ANR	6706221	Identifier	insn		6704300	0					
ANR	6706222	PrimaryExpression	4		6704300	1					
ANR	6706223	PrimaryExpression	3		6704300	1					
ANR	6706224	BreakStatement	break ;	1027:1:13502:13507	6704300	45	True				
ANR	6706225	Label	case 'I' :	1031:6:13518:13526	6704300	46	True				
ANR	6706226	ExpressionStatement	"tp = format_dec ( insn & 63 , tp , 0 )"	1033:1:13530:13564	6704300	47	True				
ANR	6706227	AssignmentExpression	"tp = format_dec ( insn & 63 , tp , 0 )"		6704300	0		=			
ANR	6706228	Identifier	tp		6704300	0					
ANR	6706229	CallExpression	"format_dec ( insn & 63 , tp , 0 )"		6704300	1					
ANR	6706230	Callee	format_dec		6704300	0					
ANR	6706231	Identifier	format_dec		6704300	0					
ANR	6706232	ArgumentList	insn & 63		6704300	1					
ANR	6706233	Argument	insn & 63		6704300	0					
ANR	6706234	BitAndExpression	insn & 63		6704300	0		&			
ANR	6706235	Identifier	insn		6704300	0					
ANR	6706236	PrimaryExpression	63		6704300	1					
ANR	6706237	Argument	tp		6704300	1					
ANR	6706238	Identifier	tp		6704300	0					
ANR	6706239	Argument	0		6704300	2					
ANR	6706240	PrimaryExpression	0		6704300	0					
ANR	6706241	BreakStatement	break ;	1035:1:13568:13573	6704300	48	True				
ANR	6706242	Label	case 'b' :	1039:6:13584:13592	6704300	49	True				
ANR	6706243	CompoundStatement		1019:3:13137:13176	6704300	50					
ANR	6706244	IdentifierDeclStatement	int where = buffer [ 2 ] + buffer [ 3 ] * 256 ;	1043:3:13602:13641	6704300	0	True				
ANR	6706245	IdentifierDecl	where = buffer [ 2 ] + buffer [ 3 ] * 256		6704300	0					
ANR	6706246	IdentifierDeclType	int		6704300	0					
ANR	6706247	Identifier	where		6704300	1					
ANR	6706248	AssignmentExpression	where = buffer [ 2 ] + buffer [ 3 ] * 256		6704300	2		=			
ANR	6706249	Identifier	where		6704300	0					
ANR	6706250	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256		6704300	1		+			
ANR	6706251	ArrayIndexing	buffer [ 2 ]		6704300	0					
ANR	6706252	Identifier	buffer		6704300	0					
ANR	6706253	PrimaryExpression	2		6704300	1					
ANR	6706254	MultiplicativeExpression	buffer [ 3 ] * 256		6704300	1		*			
ANR	6706255	ArrayIndexing	buffer [ 3 ]		6704300	0					
ANR	6706256	Identifier	buffer		6704300	0					
ANR	6706257	PrimaryExpression	3		6704300	1					
ANR	6706258	PrimaryExpression	256		6704300	1					
ANR	6706259	IfStatement	if ( where > 32767 )		6704300	1					
ANR	6706260	Condition	where > 32767	1047:7:13653:13665	6704300	0	True				
ANR	6706261	RelationalExpression	where > 32767		6704300	0		>			
ANR	6706262	Identifier	where		6704300	0					
ANR	6706263	PrimaryExpression	32767		6704300	1					
ANR	6706264	ExpressionStatement	where -= 65536	1049:5:13674:13688	6704300	1	True				
ANR	6706265	AssignmentExpression	where -= 65536		6704300	0		-=			
ANR	6706266	Identifier	where		6704300	0					
ANR	6706267	PrimaryExpression	65536		6704300	1					
ANR	6706268	ExpressionStatement	where += addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )	1053:3:13696:13756	6704300	2	True				
ANR	6706269	AssignmentExpression	where += addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )		6704300	0		+=			
ANR	6706270	Identifier	where		6704300	0					
ANR	6706271	AdditiveExpression	addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )		6704300	1		+			
ANR	6706272	Identifier	addr		6704300	0					
ANR	6706273	ConditionalExpression	( disdata -> distype == cris_dis_v32 ) ? 0 : 4		6704300	1					
ANR	6706274	Condition	disdata -> distype == cris_dis_v32		6704300	0					
ANR	6706275	EqualityExpression	disdata -> distype == cris_dis_v32		6704300	0		==			
ANR	6706276	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6706277	Identifier	disdata		6704300	0					
ANR	6706278	Identifier	distype		6704300	1					
ANR	6706279	Identifier	cris_dis_v32		6704300	1					
ANR	6706280	PrimaryExpression	0		6704300	1					
ANR	6706281	PrimaryExpression	4		6704300	2					
ANR	6706282	IfStatement	if ( insn == BA_PC_INCR_OPCODE )		6704300	3					
ANR	6706283	Condition	insn == BA_PC_INCR_OPCODE	1057:7:13768:13792	6704300	0	True				
ANR	6706284	EqualityExpression	insn == BA_PC_INCR_OPCODE		6704300	0		==			
ANR	6706285	Identifier	insn		6704300	0					
ANR	6706286	Identifier	BA_PC_INCR_OPCODE		6704300	1					
ANR	6706287	ExpressionStatement	info -> insn_type = dis_branch	1059:5:13801:13829	6704300	1	True				
ANR	6706288	AssignmentExpression	info -> insn_type = dis_branch		6704300	0		=			
ANR	6706289	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706290	Identifier	info		6704300	0					
ANR	6706291	Identifier	insn_type		6704300	1					
ANR	6706292	Identifier	dis_branch		6704300	1					
ANR	6706293	ElseStatement	else		6704300	0					
ANR	6706294	ExpressionStatement	info -> insn_type = dis_condbranch	1063:5:13846:13878	6704300	0	True				
ANR	6706295	AssignmentExpression	info -> insn_type = dis_condbranch		6704300	0		=			
ANR	6706296	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706297	Identifier	info		6704300	0					
ANR	6706298	Identifier	insn_type		6704300	1					
ANR	6706299	Identifier	dis_condbranch		6704300	1					
ANR	6706300	ExpressionStatement	info -> target = ( bfd_vma ) where	1067:3:13886:13916	6704300	4	True				
ANR	6706301	AssignmentExpression	info -> target = ( bfd_vma ) where		6704300	0		=			
ANR	6706302	PtrMemberAccess	info -> target		6704300	0					
ANR	6706303	Identifier	info		6704300	0					
ANR	6706304	Identifier	target		6704300	1					
ANR	6706305	CastExpression	( bfd_vma ) where		6704300	1					
ANR	6706306	CastTarget	bfd_vma		6704300	0					
ANR	6706307	Identifier	where		6704300	1					
ANR	6706308	ExpressionStatement	* tp = 0	1071:3:13924:13931	6704300	5	True				
ANR	6706309	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6706310	UnaryOperationExpression	* tp		6704300	0					
ANR	6706311	UnaryOperator	*		6704300	0					
ANR	6706312	Identifier	tp		6704300	1					
ANR	6706313	PrimaryExpression	0		6704300	1					
ANR	6706314	ExpressionStatement	tp = temp	1073:3:13937:13946	6704300	6	True				
ANR	6706315	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6706316	Identifier	tp		6704300	0					
ANR	6706317	Identifier	temp		6704300	1					
ANR	6706318	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%s "" , temp , cris_cc_strings [ insn >> 12 ] )"	1075:3:13952:14038	6704300	7	True				
ANR	6706319	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%s "" , temp , cris_cc_strings [ insn >> 12 ] )"		6704300	0					
ANR	6706320	Callee	* info -> fprintf_func		6704300	0					
ANR	6706321	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6706322	UnaryOperator	*		6704300	0					
ANR	6706323	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6706324	Identifier	info		6704300	0					
ANR	6706325	Identifier	fprintf_func		6704300	1					
ANR	6706326	ArgumentList	info -> stream		6704300	1					
ANR	6706327	Argument	info -> stream		6704300	0					
ANR	6706328	PtrMemberAccess	info -> stream		6704300	0					
ANR	6706329	Identifier	info		6704300	0					
ANR	6706330	Identifier	stream		6704300	1					
ANR	6706331	Argument	"""%s%s """		6704300	1					
ANR	6706332	PrimaryExpression	"""%s%s """		6704300	0					
ANR	6706333	Argument	temp		6704300	2					
ANR	6706334	Identifier	temp		6704300	0					
ANR	6706335	Argument	cris_cc_strings [ insn >> 12 ]		6704300	3					
ANR	6706336	ArrayIndexing	cris_cc_strings [ insn >> 12 ]		6704300	0					
ANR	6706337	Identifier	cris_cc_strings		6704300	0					
ANR	6706338	ShiftExpression	insn >> 12		6704300	1		>>			
ANR	6706339	Identifier	insn		6704300	0					
ANR	6706340	PrimaryExpression	12		6704300	1					
ANR	6706341	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) where , info )"	1081:3:14046:14097	6704300	8	True				
ANR	6706342	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) where , info )"		6704300	0					
ANR	6706343	Callee	* info -> print_address_func		6704300	0					
ANR	6706344	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6706345	UnaryOperator	*		6704300	0					
ANR	6706346	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6706347	Identifier	info		6704300	0					
ANR	6706348	Identifier	print_address_func		6704300	1					
ANR	6706349	ArgumentList	( bfd_vma ) where		6704300	1					
ANR	6706350	Argument	( bfd_vma ) where		6704300	0					
ANR	6706351	CastExpression	( bfd_vma ) where		6704300	0					
ANR	6706352	CastTarget	bfd_vma		6704300	0					
ANR	6706353	Identifier	where		6704300	1					
ANR	6706354	Argument	info		6704300	1					
ANR	6706355	Identifier	info		6704300	0					
ANR	6706356	BreakStatement	break ;	1085:6:14110:14115	6704300	51	True				
ANR	6706357	Label	case 'c' :	1089:4:14124:14132	6704300	52	True				
ANR	6706358	ExpressionStatement	"tp = format_dec ( insn & 31 , tp , 0 )"	1091:6:14141:14175	6704300	53	True				
ANR	6706359	AssignmentExpression	"tp = format_dec ( insn & 31 , tp , 0 )"		6704300	0		=			
ANR	6706360	Identifier	tp		6704300	0					
ANR	6706361	CallExpression	"format_dec ( insn & 31 , tp , 0 )"		6704300	1					
ANR	6706362	Callee	format_dec		6704300	0					
ANR	6706363	Identifier	format_dec		6704300	0					
ANR	6706364	ArgumentList	insn & 31		6704300	1					
ANR	6706365	Argument	insn & 31		6704300	0					
ANR	6706366	BitAndExpression	insn & 31		6704300	0		&			
ANR	6706367	Identifier	insn		6704300	0					
ANR	6706368	PrimaryExpression	31		6704300	1					
ANR	6706369	Argument	tp		6704300	1					
ANR	6706370	Identifier	tp		6704300	0					
ANR	6706371	Argument	0		6704300	2					
ANR	6706372	PrimaryExpression	0		6704300	0					
ANR	6706373	BreakStatement	break ;	1093:6:14184:14189	6704300	54	True				
ANR	6706374	Label	case 'C' :	1097:4:14198:14206	6704300	55	True				
ANR	6706375	ExpressionStatement	"tp = format_dec ( insn & 15 , tp , 0 )"	1099:6:14215:14249	6704300	56	True				
ANR	6706376	AssignmentExpression	"tp = format_dec ( insn & 15 , tp , 0 )"		6704300	0		=			
ANR	6706377	Identifier	tp		6704300	0					
ANR	6706378	CallExpression	"format_dec ( insn & 15 , tp , 0 )"		6704300	1					
ANR	6706379	Callee	format_dec		6704300	0					
ANR	6706380	Identifier	format_dec		6704300	0					
ANR	6706381	ArgumentList	insn & 15		6704300	1					
ANR	6706382	Argument	insn & 15		6704300	0					
ANR	6706383	BitAndExpression	insn & 15		6704300	0		&			
ANR	6706384	Identifier	insn		6704300	0					
ANR	6706385	PrimaryExpression	15		6704300	1					
ANR	6706386	Argument	tp		6704300	1					
ANR	6706387	Identifier	tp		6704300	0					
ANR	6706388	Argument	0		6704300	2					
ANR	6706389	PrimaryExpression	0		6704300	0					
ANR	6706390	BreakStatement	break ;	1101:6:14258:14263	6704300	57	True				
ANR	6706391	Label	case 'o' :	1105:4:14272:14280	6704300	58	True				
ANR	6706392	CompoundStatement		1087:1:13857:13871	6704300	59					
ANR	6706393	IdentifierDeclStatement	long offset = insn & 0xfe ;	1109:1:14293:14318	6704300	0	True				
ANR	6706394	IdentifierDecl	offset = insn & 0xfe		6704300	0					
ANR	6706395	IdentifierDeclType	long		6704300	0					
ANR	6706396	Identifier	offset		6704300	1					
ANR	6706397	AssignmentExpression	offset = insn & 0xfe		6704300	2		=			
ANR	6706398	Identifier	offset		6704300	0					
ANR	6706399	BitAndExpression	insn & 0xfe		6704300	1		&			
ANR	6706400	Identifier	insn		6704300	0					
ANR	6706401	PrimaryExpression	0xfe		6704300	1					
ANR	6706402	IdentifierDeclStatement	bfd_vma target ;	1111:1:14322:14336	6704300	1	True				
ANR	6706403	IdentifierDecl	target		6704300	0					
ANR	6706404	IdentifierDeclType	bfd_vma		6704300	0					
ANR	6706405	Identifier	target		6704300	1					
ANR	6706406	IfStatement	if ( insn & 1 )		6704300	2					
ANR	6706407	Condition	insn & 1	1115:5:14346:14353	6704300	0	True				
ANR	6706408	BitAndExpression	insn & 1		6704300	0		&			
ANR	6706409	Identifier	insn		6704300	0					
ANR	6706410	PrimaryExpression	1		6704300	1					
ANR	6706411	ExpressionStatement	offset |= ~0xff	1117:3:14360:14375	6704300	1	True				
ANR	6706412	AssignmentExpression	offset |= ~0xff		6704300	0		|=			
ANR	6706413	Identifier	offset		6704300	0					
ANR	6706414	Identifier	~0xff		6704300	1					
ANR	6706415	IfStatement	if ( opcodep -> match == BA_QUICK_OPCODE )		6704300	3					
ANR	6706416	Condition	opcodep -> match == BA_QUICK_OPCODE	1121:5:14385:14417	6704300	0	True				
ANR	6706417	EqualityExpression	opcodep -> match == BA_QUICK_OPCODE		6704300	0		==			
ANR	6706418	PtrMemberAccess	opcodep -> match		6704300	0					
ANR	6706419	Identifier	opcodep		6704300	0					
ANR	6706420	Identifier	match		6704300	1					
ANR	6706421	Identifier	BA_QUICK_OPCODE		6704300	1					
ANR	6706422	ExpressionStatement	info -> insn_type = dis_branch	1123:3:14424:14452	6704300	1	True				
ANR	6706423	AssignmentExpression	info -> insn_type = dis_branch		6704300	0		=			
ANR	6706424	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706425	Identifier	info		6704300	0					
ANR	6706426	Identifier	insn_type		6704300	1					
ANR	6706427	Identifier	dis_branch		6704300	1					
ANR	6706428	ElseStatement	else		6704300	0					
ANR	6706429	ExpressionStatement	info -> insn_type = dis_condbranch	1127:3:14465:14497	6704300	0	True				
ANR	6706430	AssignmentExpression	info -> insn_type = dis_condbranch		6704300	0		=			
ANR	6706431	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706432	Identifier	info		6704300	0					
ANR	6706433	Identifier	insn_type		6704300	1					
ANR	6706434	Identifier	dis_condbranch		6704300	1					
ANR	6706435	ExpressionStatement	target = addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset	1131:1:14503:14572	6704300	4	True				
ANR	6706436	AssignmentExpression	target = addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		6704300	0		=			
ANR	6706437	Identifier	target		6704300	0					
ANR	6706438	AdditiveExpression	addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		6704300	1		+			
ANR	6706439	Identifier	addr		6704300	0					
ANR	6706440	AdditiveExpression	( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		6704300	1		+			
ANR	6706441	ConditionalExpression	( disdata -> distype == cris_dis_v32 ) ? 0 : 2		6704300	0					
ANR	6706442	Condition	disdata -> distype == cris_dis_v32		6704300	0					
ANR	6706443	EqualityExpression	disdata -> distype == cris_dis_v32		6704300	0		==			
ANR	6706444	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6706445	Identifier	disdata		6704300	0					
ANR	6706446	Identifier	distype		6704300	1					
ANR	6706447	Identifier	cris_dis_v32		6704300	1					
ANR	6706448	PrimaryExpression	0		6704300	1					
ANR	6706449	PrimaryExpression	2		6704300	2					
ANR	6706450	Identifier	offset		6704300	1					
ANR	6706451	ExpressionStatement	info -> target = target	1133:1:14576:14597	6704300	5	True				
ANR	6706452	AssignmentExpression	info -> target = target		6704300	0		=			
ANR	6706453	PtrMemberAccess	info -> target		6704300	0					
ANR	6706454	Identifier	info		6704300	0					
ANR	6706455	Identifier	target		6704300	1					
ANR	6706456	Identifier	target		6704300	1					
ANR	6706457	ExpressionStatement	* tp = 0	1135:1:14601:14608	6704300	6	True				
ANR	6706458	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6706459	UnaryOperationExpression	* tp		6704300	0					
ANR	6706460	UnaryOperator	*		6704300	0					
ANR	6706461	Identifier	tp		6704300	1					
ANR	6706462	PrimaryExpression	0		6704300	1					
ANR	6706463	ExpressionStatement	tp = temp	1137:1:14612:14621	6704300	7	True				
ANR	6706464	AssignmentExpression	tp = temp		6704300	0		=			
ANR	6706465	Identifier	tp		6704300	0					
ANR	6706466	Identifier	temp		6704300	1					
ANR	6706467	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1139:1:14625:14673	6704300	8	True				
ANR	6706468	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6706469	Callee	* info -> fprintf_func		6704300	0					
ANR	6706470	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6706471	UnaryOperator	*		6704300	0					
ANR	6706472	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6706473	Identifier	info		6704300	0					
ANR	6706474	Identifier	fprintf_func		6704300	1					
ANR	6706475	ArgumentList	info -> stream		6704300	1					
ANR	6706476	Argument	info -> stream		6704300	0					
ANR	6706477	PtrMemberAccess	info -> stream		6704300	0					
ANR	6706478	Identifier	info		6704300	0					
ANR	6706479	Identifier	stream		6704300	1					
ANR	6706480	Argument	"""%s"""		6704300	1					
ANR	6706481	PrimaryExpression	"""%s"""		6704300	0					
ANR	6706482	Argument	temp		6704300	2					
ANR	6706483	Identifier	temp		6704300	0					
ANR	6706484	ExpressionStatement	"( * info -> print_address_func ) ( target , info )"	1141:1:14677:14719	6704300	9	True				
ANR	6706485	CallExpression	"( * info -> print_address_func ) ( target , info )"		6704300	0					
ANR	6706486	Callee	* info -> print_address_func		6704300	0					
ANR	6706487	UnaryOperationExpression	* info -> print_address_func		6704300	0					
ANR	6706488	UnaryOperator	*		6704300	0					
ANR	6706489	PtrMemberAccess	info -> print_address_func		6704300	1					
ANR	6706490	Identifier	info		6704300	0					
ANR	6706491	Identifier	print_address_func		6704300	1					
ANR	6706492	ArgumentList	target		6704300	1					
ANR	6706493	Argument	target		6704300	0					
ANR	6706494	Identifier	target		6704300	0					
ANR	6706495	Argument	info		6704300	1					
ANR	6706496	Identifier	info		6704300	0					
ANR	6706497	BreakStatement	break ;	1145:6:14737:14742	6704300	60	True				
ANR	6706498	Label	case 'Q' :	1149:4:14751:14759	6704300	61	True				
ANR	6706499	Label	case 'O' :	1151:4:14766:14774	6704300	62	True				
ANR	6706500	CompoundStatement		1131:1:14322:14345	6704300	63					
ANR	6706501	IdentifierDeclStatement	long number = buffer [ 0 ] ;	1155:1:14787:14810	6704300	0	True				
ANR	6706502	IdentifierDecl	number = buffer [ 0 ]		6704300	0					
ANR	6706503	IdentifierDeclType	long		6704300	0					
ANR	6706504	Identifier	number		6704300	1					
ANR	6706505	AssignmentExpression	number = buffer [ 0 ]		6704300	2		=			
ANR	6706506	Identifier	number		6704300	0					
ANR	6706507	ArrayIndexing	buffer [ 0 ]		6704300	1					
ANR	6706508	Identifier	buffer		6704300	0					
ANR	6706509	PrimaryExpression	0		6704300	1					
ANR	6706510	IfStatement	if ( number > 127 )		6704300	1					
ANR	6706511	Condition	number > 127	1159:5:14820:14831	6704300	0	True				
ANR	6706512	RelationalExpression	number > 127		6704300	0		>			
ANR	6706513	Identifier	number		6704300	0					
ANR	6706514	PrimaryExpression	127		6704300	1					
ANR	6706515	ExpressionStatement	number = number - 256	1161:3:14838:14859	6704300	1	True				
ANR	6706516	AssignmentExpression	number = number - 256		6704300	0		=			
ANR	6706517	Identifier	number		6704300	0					
ANR	6706518	AdditiveExpression	number - 256		6704300	1		-			
ANR	6706519	Identifier	number		6704300	0					
ANR	6706520	PrimaryExpression	256		6704300	1					
ANR	6706521	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	1165:1:14865:14896	6704300	2	True				
ANR	6706522	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		6704300	0		=			
ANR	6706523	Identifier	tp		6704300	0					
ANR	6706524	CallExpression	"format_dec ( number , tp , 1 )"		6704300	1					
ANR	6706525	Callee	format_dec		6704300	0					
ANR	6706526	Identifier	format_dec		6704300	0					
ANR	6706527	ArgumentList	number		6704300	1					
ANR	6706528	Argument	number		6704300	0					
ANR	6706529	Identifier	number		6704300	0					
ANR	6706530	Argument	tp		6704300	1					
ANR	6706531	Identifier	tp		6704300	0					
ANR	6706532	Argument	1		6704300	2					
ANR	6706533	PrimaryExpression	1		6704300	0					
ANR	6706534	ExpressionStatement	"* tp ++ = ','"	1167:1:14900:14911	6704300	3	True				
ANR	6706535	AssignmentExpression	"* tp ++ = ','"		6704300	0		=			
ANR	6706536	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706537	UnaryOperator	*		6704300	0					
ANR	6706538	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706539	Identifier	tp		6704300	0					
ANR	6706540	IncDec	++		6704300	1					
ANR	6706541	PrimaryExpression	"','"		6704300	1					
ANR	6706542	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	1169:1:14915:14980	6704300	4	True				
ANR	6706543	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	0		=			
ANR	6706544	Identifier	tp		6704300	0					
ANR	6706545	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		6704300	1					
ANR	6706546	Callee	format_reg		6704300	0					
ANR	6706547	Identifier	format_reg		6704300	0					
ANR	6706548	ArgumentList	disdata		6704300	1					
ANR	6706549	Argument	disdata		6704300	0					
ANR	6706550	Identifier	disdata		6704300	0					
ANR	6706551	Argument	( insn >> 12 ) & 15		6704300	1					
ANR	6706552	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6706553	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6706554	Identifier	insn		6704300	0					
ANR	6706555	PrimaryExpression	12		6704300	1					
ANR	6706556	PrimaryExpression	15		6704300	1					
ANR	6706557	Argument	tp		6704300	2					
ANR	6706558	Identifier	tp		6704300	0					
ANR	6706559	Argument	with_reg_prefix		6704300	3					
ANR	6706560	Identifier	with_reg_prefix		6704300	0					
ANR	6706561	BreakStatement	break ;	1173:6:14998:15003	6704300	64	True				
ANR	6706562	Label	case 'f' :	1177:4:15012:15020	6704300	65	True				
ANR	6706563	ExpressionStatement	"tp = print_flags ( disdata , insn , tp )"	1179:6:15029:15065	6704300	66	True				
ANR	6706564	AssignmentExpression	"tp = print_flags ( disdata , insn , tp )"		6704300	0		=			
ANR	6706565	Identifier	tp		6704300	0					
ANR	6706566	CallExpression	"print_flags ( disdata , insn , tp )"		6704300	1					
ANR	6706567	Callee	print_flags		6704300	0					
ANR	6706568	Identifier	print_flags		6704300	0					
ANR	6706569	ArgumentList	disdata		6704300	1					
ANR	6706570	Argument	disdata		6704300	0					
ANR	6706571	Identifier	disdata		6704300	0					
ANR	6706572	Argument	insn		6704300	1					
ANR	6706573	Identifier	insn		6704300	0					
ANR	6706574	Argument	tp		6704300	2					
ANR	6706575	Identifier	tp		6704300	0					
ANR	6706576	BreakStatement	break ;	1181:6:15074:15079	6704300	67	True				
ANR	6706577	Label	case 'i' :	1185:4:15088:15096	6704300	68	True				
ANR	6706578	ExpressionStatement	"tp = format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"	1187:6:15105:15174	6704300	69	True				
ANR	6706579	AssignmentExpression	"tp = format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"		6704300	0		=			
ANR	6706580	Identifier	tp		6704300	0					
ANR	6706581	CallExpression	"format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"		6704300	1					
ANR	6706582	Callee	format_dec		6704300	0					
ANR	6706583	Identifier	format_dec		6704300	0					
ANR	6706584	ArgumentList	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		6704300	1					
ANR	6706585	Argument	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		6704300	0					
ANR	6706586	ConditionalExpression	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		6704300	0					
ANR	6706587	Condition	insn & 32		6704300	0					
ANR	6706588	BitAndExpression	insn & 32		6704300	0		&			
ANR	6706589	Identifier	insn		6704300	0					
ANR	6706590	PrimaryExpression	32		6704300	1					
ANR	6706591	InclusiveOrExpression	( insn & 31 ) | ~31L		6704300	1		|			
ANR	6706592	BitAndExpression	insn & 31		6704300	0		&			
ANR	6706593	Identifier	insn		6704300	0					
ANR	6706594	PrimaryExpression	31		6704300	1					
ANR	6706595	Identifier	~31L		6704300	1					
ANR	6706596	BitAndExpression	insn & 31		6704300	2		&			
ANR	6706597	Identifier	insn		6704300	0					
ANR	6706598	PrimaryExpression	31		6704300	1					
ANR	6706599	Argument	tp		6704300	1					
ANR	6706600	Identifier	tp		6704300	0					
ANR	6706601	Argument	1		6704300	2					
ANR	6706602	PrimaryExpression	1		6704300	0					
ANR	6706603	BreakStatement	break ;	1189:6:15183:15188	6704300	70	True				
ANR	6706604	Label	case 'P' :	1193:4:15197:15205	6704300	71	True				
ANR	6706605	CompoundStatement		1173:1:14753:14844	6704300	72					
ANR	6706606	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	1197:1:15218:15309	6704300	0	True				
ANR	6706607	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	0					
ANR	6706608	IdentifierDeclType	const struct cris_spec_reg *		6704300	0					
ANR	6706609	Identifier	sregp		6704300	1					
ANR	6706610	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	2		=			
ANR	6706611	Identifier	sregp		6704300	0					
ANR	6706612	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		6704300	1					
ANR	6706613	Callee	spec_reg_info		6704300	0					
ANR	6706614	Identifier	spec_reg_info		6704300	0					
ANR	6706615	ArgumentList	( insn >> 12 ) & 15		6704300	1					
ANR	6706616	Argument	( insn >> 12 ) & 15		6704300	0					
ANR	6706617	BitAndExpression	( insn >> 12 ) & 15		6704300	0		&			
ANR	6706618	ShiftExpression	insn >> 12		6704300	0		>>			
ANR	6706619	Identifier	insn		6704300	0					
ANR	6706620	PrimaryExpression	12		6704300	1					
ANR	6706621	PrimaryExpression	15		6704300	1					
ANR	6706622	Argument	disdata -> distype		6704300	1					
ANR	6706623	PtrMemberAccess	disdata -> distype		6704300	0					
ANR	6706624	Identifier	disdata		6704300	0					
ANR	6706625	Identifier	distype		6704300	1					
ANR	6706626	IfStatement	if ( sregp -> name == NULL )		6704300	1					
ANR	6706627	Condition	sregp -> name == NULL	1203:5:15319:15337	6704300	0	True				
ANR	6706628	EqualityExpression	sregp -> name == NULL		6704300	0		==			
ANR	6706629	PtrMemberAccess	sregp -> name		6704300	0					
ANR	6706630	Identifier	sregp		6704300	0					
ANR	6706631	Identifier	name		6704300	1					
ANR	6706632	Identifier	NULL		6704300	1					
ANR	6706633	ExpressionStatement	* tp ++ = '?'	1207:3:15403:15414	6704300	1	True				
ANR	6706634	AssignmentExpression	* tp ++ = '?'		6704300	0		=			
ANR	6706635	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706636	UnaryOperator	*		6704300	0					
ANR	6706637	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706638	Identifier	tp		6704300	0					
ANR	6706639	IncDec	++		6704300	1					
ANR	6706640	PrimaryExpression	'?'		6704300	1					
ANR	6706641	ElseStatement	else		6704300	0					
ANR	6706642	CompoundStatement		1187:3:14962:14962	6704300	0					
ANR	6706643	IfStatement	if ( with_reg_prefix )		6704300	0					
ANR	6706644	Condition	with_reg_prefix	1213:9:15439:15453	6704300	0	True				
ANR	6706645	Identifier	with_reg_prefix		6704300	0					
ANR	6706646	ExpressionStatement	* tp ++ = REGISTER_PREFIX_CHAR	1215:7:15464:15492	6704300	1	True				
ANR	6706647	AssignmentExpression	* tp ++ = REGISTER_PREFIX_CHAR		6704300	0		=			
ANR	6706648	UnaryOperationExpression	* tp ++		6704300	0					
ANR	6706649	UnaryOperator	*		6704300	0					
ANR	6706650	PostIncDecOperationExpression	tp ++		6704300	1					
ANR	6706651	Identifier	tp		6704300	0					
ANR	6706652	IncDec	++		6704300	1					
ANR	6706653	Identifier	REGISTER_PREFIX_CHAR		6704300	1					
ANR	6706654	ExpressionStatement	"strcpy ( tp , sregp -> name )"	1217:5:15500:15524	6704300	1	True				
ANR	6706655	CallExpression	"strcpy ( tp , sregp -> name )"		6704300	0					
ANR	6706656	Callee	strcpy		6704300	0					
ANR	6706657	Identifier	strcpy		6704300	0					
ANR	6706658	ArgumentList	tp		6704300	1					
ANR	6706659	Argument	tp		6704300	0					
ANR	6706660	Identifier	tp		6704300	0					
ANR	6706661	Argument	sregp -> name		6704300	1					
ANR	6706662	PtrMemberAccess	sregp -> name		6704300	0					
ANR	6706663	Identifier	sregp		6704300	0					
ANR	6706664	Identifier	name		6704300	1					
ANR	6706665	ExpressionStatement	tp += strlen ( tp )	1219:5:15532:15549	6704300	2	True				
ANR	6706666	AssignmentExpression	tp += strlen ( tp )		6704300	0		+=			
ANR	6706667	Identifier	tp		6704300	0					
ANR	6706668	CallExpression	strlen ( tp )		6704300	1					
ANR	6706669	Callee	strlen		6704300	0					
ANR	6706670	Identifier	strlen		6704300	0					
ANR	6706671	ArgumentList	tp		6704300	1					
ANR	6706672	Argument	tp		6704300	0					
ANR	6706673	Identifier	tp		6704300	0					
ANR	6706674	BreakStatement	break ;	1225:6:15573:15578	6704300	73	True				
ANR	6706675	Label	default :	1229:4:15587:15594	6704300	74	True				
ANR	6706676	Identifier	default		6704300	0					
ANR	6706677	ExpressionStatement	"strcpy ( tp , ""???"" )"	1231:6:15603:15621	6704300	75	True				
ANR	6706678	CallExpression	"strcpy ( tp , ""???"" )"		6704300	0					
ANR	6706679	Callee	strcpy		6704300	0					
ANR	6706680	Identifier	strcpy		6704300	0					
ANR	6706681	ArgumentList	tp		6704300	1					
ANR	6706682	Argument	tp		6704300	0					
ANR	6706683	Identifier	tp		6704300	0					
ANR	6706684	Argument	"""???"""		6704300	1					
ANR	6706685	PrimaryExpression	"""???"""		6704300	0					
ANR	6706686	ExpressionStatement	tp += 3	1233:6:15630:15637	6704300	76	True				
ANR	6706687	AssignmentExpression	tp += 3		6704300	0		+=			
ANR	6706688	Identifier	tp		6704300	0					
ANR	6706689	PrimaryExpression	3		6704300	1					
ANR	6706690	ExpressionStatement	* tp = 0	1241:2:15656:15663	6704300	16	True				
ANR	6706691	AssignmentExpression	* tp = 0		6704300	0		=			
ANR	6706692	UnaryOperationExpression	* tp		6704300	0					
ANR	6706693	UnaryOperator	*		6704300	0					
ANR	6706694	Identifier	tp		6704300	1					
ANR	6706695	PrimaryExpression	0		6704300	1					
ANR	6706696	IfStatement	if ( prefix_opcodep )		6704300	17					
ANR	6706697	Condition	prefix_opcodep	1245:6:15674:15687	6704300	0	True				
ANR	6706698	Identifier	prefix_opcodep		6704300	0					
ANR	6706699	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "" (OOPS unused prefix \\""%s: %s\\"")"" , prefix_opcodep -> name , prefix_opcodep -> args )"	1247:4:15695:15818	6704300	1	True				
ANR	6706700	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "" (OOPS unused prefix \\""%s: %s\\"")"" , prefix_opcodep -> name , prefix_opcodep -> args )"		6704300	0					
ANR	6706701	Callee	* info -> fprintf_func		6704300	0					
ANR	6706702	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6706703	UnaryOperator	*		6704300	0					
ANR	6706704	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6706705	Identifier	info		6704300	0					
ANR	6706706	Identifier	fprintf_func		6704300	1					
ANR	6706707	ArgumentList	info -> stream		6704300	1					
ANR	6706708	Argument	info -> stream		6704300	0					
ANR	6706709	PtrMemberAccess	info -> stream		6704300	0					
ANR	6706710	Identifier	info		6704300	0					
ANR	6706711	Identifier	stream		6704300	1					
ANR	6706712	Argument	""" (OOPS unused prefix \\""%s: %s\\"")"""		6704300	1					
ANR	6706713	PrimaryExpression	""" (OOPS unused prefix \\""%s: %s\\"")"""		6704300	0					
ANR	6706714	Argument	prefix_opcodep -> name		6704300	2					
ANR	6706715	PtrMemberAccess	prefix_opcodep -> name		6704300	0					
ANR	6706716	Identifier	prefix_opcodep		6704300	0					
ANR	6706717	Identifier	name		6704300	1					
ANR	6706718	Argument	prefix_opcodep -> args		6704300	3					
ANR	6706719	PtrMemberAccess	prefix_opcodep -> args		6704300	0					
ANR	6706720	Identifier	prefix_opcodep		6704300	0					
ANR	6706721	Identifier	args		6704300	1					
ANR	6706722	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1253:2:15825:15873	6704300	18	True				
ANR	6706723	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		6704300	0					
ANR	6706724	Callee	* info -> fprintf_func		6704300	0					
ANR	6706725	UnaryOperationExpression	* info -> fprintf_func		6704300	0					
ANR	6706726	UnaryOperator	*		6704300	0					
ANR	6706727	PtrMemberAccess	info -> fprintf_func		6704300	1					
ANR	6706728	Identifier	info		6704300	0					
ANR	6706729	Identifier	fprintf_func		6704300	1					
ANR	6706730	ArgumentList	info -> stream		6704300	1					
ANR	6706731	Argument	info -> stream		6704300	0					
ANR	6706732	PtrMemberAccess	info -> stream		6704300	0					
ANR	6706733	Identifier	info		6704300	0					
ANR	6706734	Identifier	stream		6704300	1					
ANR	6706735	Argument	"""%s"""		6704300	1					
ANR	6706736	PrimaryExpression	"""%s"""		6704300	0					
ANR	6706737	Argument	temp		6704300	2					
ANR	6706738	Identifier	temp		6704300	0					
ANR	6706739	IfStatement	if ( TRACE_CASE && case_offset_counter == 0 )		6704300	19					
ANR	6706740	Condition	TRACE_CASE && case_offset_counter == 0	1263:6:16097:16134	6704300	0	True				
ANR	6706741	AndExpression	TRACE_CASE && case_offset_counter == 0		6704300	0		&&			
ANR	6706742	Identifier	TRACE_CASE		6704300	0					
ANR	6706743	EqualityExpression	case_offset_counter == 0		6704300	1		==			
ANR	6706744	Identifier	case_offset_counter		6704300	0					
ANR	6706745	PrimaryExpression	0		6704300	1					
ANR	6706746	CompoundStatement		1241:4:15677:15677	6704300	1					
ANR	6706747	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""sub"" ) )"		6704300	0					
ANR	6706748	Condition	"CONST_STRNEQ ( opcodep -> name , ""sub"" )"	1267:10:16155:16189	6704300	0	True				
ANR	6706749	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""sub"" )"		6704300	0					
ANR	6706750	Callee	CONST_STRNEQ		6704300	0					
ANR	6706751	Identifier	CONST_STRNEQ		6704300	0					
ANR	6706752	ArgumentList	opcodep -> name		6704300	1					
ANR	6706753	Argument	opcodep -> name		6704300	0					
ANR	6706754	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6706755	Identifier	opcodep		6704300	0					
ANR	6706756	Identifier	name		6704300	1					
ANR	6706757	Argument	"""sub"""		6704300	1					
ANR	6706758	PrimaryExpression	"""sub"""		6704300	0					
ANR	6706759	ExpressionStatement	case_offset = last_immediate	1269:1:16194:16222	6704300	1	True				
ANR	6706760	AssignmentExpression	case_offset = last_immediate		6704300	0		=			
ANR	6706761	Identifier	case_offset		6704300	0					
ANR	6706762	Identifier	last_immediate		6704300	1					
ANR	6706763	ElseStatement	else		6704300	0					
ANR	6706764	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""add"" ) )"		6704300	0					
ANR	6706765	Condition	"CONST_STRNEQ ( opcodep -> name , ""add"" )"	1275:15:16318:16352	6704300	0	True				
ANR	6706766	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""add"" )"		6704300	0					
ANR	6706767	Callee	CONST_STRNEQ		6704300	0					
ANR	6706768	Identifier	CONST_STRNEQ		6704300	0					
ANR	6706769	ArgumentList	opcodep -> name		6704300	1					
ANR	6706770	Argument	opcodep -> name		6704300	0					
ANR	6706771	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6706772	Identifier	opcodep		6704300	0					
ANR	6706773	Identifier	name		6704300	1					
ANR	6706774	Argument	"""add"""		6704300	1					
ANR	6706775	PrimaryExpression	"""add"""		6704300	0					
ANR	6706776	ExpressionStatement	case_offset = - last_immediate	1279:1:16416:16445	6704300	1	True				
ANR	6706777	AssignmentExpression	case_offset = - last_immediate		6704300	0		=			
ANR	6706778	Identifier	case_offset		6704300	0					
ANR	6706779	UnaryOperationExpression	- last_immediate		6704300	1					
ANR	6706780	UnaryOperator	-		6704300	0					
ANR	6706781	Identifier	last_immediate		6704300	1					
ANR	6706782	ElseStatement	else		6704300	0					
ANR	6706783	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""bound"" ) )"		6704300	0					
ANR	6706784	Condition	"CONST_STRNEQ ( opcodep -> name , ""bound"" )"	1285:15:16526:16562	6704300	0	True				
ANR	6706785	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""bound"" )"		6704300	0					
ANR	6706786	Callee	CONST_STRNEQ		6704300	0					
ANR	6706787	Identifier	CONST_STRNEQ		6704300	0					
ANR	6706788	ArgumentList	opcodep -> name		6704300	1					
ANR	6706789	Argument	opcodep -> name		6704300	0					
ANR	6706790	PtrMemberAccess	opcodep -> name		6704300	0					
ANR	6706791	Identifier	opcodep		6704300	0					
ANR	6706792	Identifier	name		6704300	1					
ANR	6706793	Argument	"""bound"""		6704300	1					
ANR	6706794	PrimaryExpression	"""bound"""		6704300	0					
ANR	6706795	ExpressionStatement	no_of_case_offsets = last_immediate + 1	1287:1:16567:16606	6704300	1	True				
ANR	6706796	AssignmentExpression	no_of_case_offsets = last_immediate + 1		6704300	0		=			
ANR	6706797	Identifier	no_of_case_offsets		6704300	0					
ANR	6706798	AdditiveExpression	last_immediate + 1		6704300	1		+			
ANR	6706799	Identifier	last_immediate		6704300	0					
ANR	6706800	PrimaryExpression	1		6704300	1					
ANR	6706801	ElseStatement	else		6704300	0					
ANR	6706802	IfStatement	if ( info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch )		6704300	0					
ANR	6706803	Condition	info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch	1295:15:16747:16860	6704300	0	True				
ANR	6706804	OrExpression	info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch		6704300	0		||			
ANR	6706805	EqualityExpression	info -> insn_type == dis_jsr		6704300	0		==			
ANR	6706806	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706807	Identifier	info		6704300	0					
ANR	6706808	Identifier	insn_type		6704300	1					
ANR	6706809	Identifier	dis_jsr		6704300	1					
ANR	6706810	OrExpression	info -> insn_type == dis_branch || info -> insn_type == dis_condbranch		6704300	1		||			
ANR	6706811	EqualityExpression	info -> insn_type == dis_branch		6704300	0		==			
ANR	6706812	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706813	Identifier	info		6704300	0					
ANR	6706814	Identifier	insn_type		6704300	1					
ANR	6706815	Identifier	dis_branch		6704300	1					
ANR	6706816	EqualityExpression	info -> insn_type == dis_condbranch		6704300	1		==			
ANR	6706817	PtrMemberAccess	info -> insn_type		6704300	0					
ANR	6706818	Identifier	info		6704300	0					
ANR	6706819	Identifier	insn_type		6704300	1					
ANR	6706820	Identifier	dis_condbranch		6704300	1					
ANR	6706821	ExpressionStatement	case_offset = 0	1301:1:16865:16880	6704300	1	True				
ANR	6706822	AssignmentExpression	case_offset = 0		6704300	0		=			
ANR	6706823	Identifier	case_offset		6704300	0					
ANR	6706824	PrimaryExpression	0		6704300	1					
ANR	6706825	Identifier	print_with_operands		6704300	1					
ANR	6706826	ParameterList	"const struct cris_opcode * opcodep , unsigned int insn , unsigned char * buffer , bfd_vma addr , disassemble_info * info , const struct cris_opcode * prefix_opcodep , unsigned int prefix_insn , unsigned char * prefix_buffer , bfd_boolean with_reg_prefix"		6704300	2					
ANR	6706827	Parameter	const struct cris_opcode * opcodep	1:21:21:53	6704300	0	True				
ANR	6706828	ParameterType	const struct cris_opcode *		6704300	0					
ANR	6706829	Identifier	opcodep		6704300	1					
ANR	6706830	Parameter	unsigned int insn	3:7:64:80	6704300	1	True				
ANR	6706831	ParameterType	unsigned int		6704300	0					
ANR	6706832	Identifier	insn		6704300	1					
ANR	6706833	Parameter	unsigned char * buffer	5:7:91:111	6704300	2	True				
ANR	6706834	ParameterType	unsigned char *		6704300	0					
ANR	6706835	Identifier	buffer		6704300	1					
ANR	6706836	Parameter	bfd_vma addr	7:7:122:133	6704300	3	True				
ANR	6706837	ParameterType	bfd_vma		6704300	0					
ANR	6706838	Identifier	addr		6704300	1					
ANR	6706839	Parameter	disassemble_info * info	9:7:144:165	6704300	4	True				
ANR	6706840	ParameterType	disassemble_info *		6704300	0					
ANR	6706841	Identifier	info		6704300	1					
ANR	6706842	Parameter	const struct cris_opcode * prefix_opcodep	17:7:312:351	6704300	5	True				
ANR	6706843	ParameterType	const struct cris_opcode *		6704300	0					
ANR	6706844	Identifier	prefix_opcodep		6704300	1					
ANR	6706845	Parameter	unsigned int prefix_insn	19:7:362:385	6704300	6	True				
ANR	6706846	ParameterType	unsigned int		6704300	0					
ANR	6706847	Identifier	prefix_insn		6704300	1					
ANR	6706848	Parameter	unsigned char * prefix_buffer	21:7:396:423	6704300	7	True				
ANR	6706849	ParameterType	unsigned char *		6704300	0					
ANR	6706850	Identifier	prefix_buffer		6704300	1					
ANR	6706851	Parameter	bfd_boolean with_reg_prefix	23:7:434:460	6704300	8	True				
ANR	6706852	ParameterType	bfd_boolean		6704300	0					
ANR	6706853	Identifier	with_reg_prefix		6704300	1					
ANR	6706854	CFGEntryNode	ENTRY		6704300		True				
ANR	6706855	CFGExitNode	EXIT		6704300		True				
ANR	6706856	Symbol	case_offset		6704300						
ANR	6706857	Symbol	mode_char		6704300						
ANR	6706858	Symbol	with_reg_prefix		6704300						
ANR	6706859	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MULT2		6704300						
ANR	6706860	Symbol	info -> target2		6704300						
ANR	6706861	Symbol	BRANCH_PC_LOW		6704300						
ANR	6706862	Symbol	info -> fprintf_func		6704300						
ANR	6706863	Symbol	SIZE_FIX_32		6704300						
ANR	6706864	Symbol	number		6704300						
ANR	6706865	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM		6704300						
ANR	6706866	Symbol	* opcodep		6704300						
ANR	6706867	Symbol	CONST_STRNEQ		6704300						
ANR	6706868	Symbol	* prefix_insn		6704300						
ANR	6706869	Symbol	format_reg		6704300						
ANR	6706870	Symbol	* tp		6704300						
ANR	6706871	Symbol	opcodep -> name		6704300						
ANR	6706872	Symbol	SIZE_SPEC_REG		6704300						
ANR	6706873	Symbol	cris_dis_v32		6704300						
ANR	6706874	Symbol	* opcodep -> args		6704300						
ANR	6706875	Symbol	no_of_case_offsets		6704300						
ANR	6706876	Symbol	* sregp		6704300						
ANR	6706877	Symbol	size		6704300						
ANR	6706878	Symbol	* cs		6704300						
ANR	6706879	Symbol	highbyte		6704300						
ANR	6706880	Symbol	disdata -> distype		6704300						
ANR	6706881	Symbol	opcodep -> delayed		6704300						
ANR	6706882	Symbol	BA_QUICK_OPCODE		6704300						
ANR	6706883	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		6704300						
ANR	6706884	Symbol	info -> branch_delay_insns		6704300						
ANR	6706885	Symbol	~31L		6704300						
ANR	6706886	Symbol	info -> stream		6704300						
ANR	6706887	Symbol	~0xf000		6704300						
ANR	6706888	Symbol	opcodep -> match		6704300						
ANR	6706889	Symbol	* * s		6704300						
ANR	6706890	Symbol	where		6704300						
ANR	6706891	Symbol	prefix_buffer		6704300						
ANR	6706892	Symbol	BA_PC_INCR_OPCODE		6704300						
ANR	6706893	Symbol	* buffer		6704300						
ANR	6706894	Symbol	mode_size		6704300						
ANR	6706895	Symbol	BDAP_QUICK_OPCODE		6704300						
ANR	6706896	Symbol	info -> private_data		6704300						
ANR	6706897	Symbol	prefix_opcodep -> args		6704300						
ANR	6706898	Symbol	cs		6704300						
ANR	6706899	Symbol	insn		6704300						
ANR	6706900	Symbol	s		6704300						
ANR	6706901	Symbol	~1		6704300						
ANR	6706902	Symbol	* nbytes		6704300						
ANR	6706903	Symbol	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		6704300						
ANR	6706904	Symbol	opcodep		6704300						
ANR	6706905	Symbol	* info		6704300						
ANR	6706906	Symbol	dis_branch		6704300						
ANR	6706907	Symbol	sregp -> reg_size		6704300						
ANR	6706908	Symbol	tp		6704300						
ANR	6706909	Symbol	CRIS_DIS_FLAG_MEMREF		6704300						
ANR	6706910	Symbol	~0xff		6704300						
ANR	6706911	Symbol	TRACE_CASE		6704300						
ANR	6706912	Symbol	format_hex		6704300						
ANR	6706913	Symbol	prefix_opcodep -> match		6704300						
ANR	6706914	Symbol	cris_cc_strings		6704300						
ANR	6706915	Symbol	dis_jsr		6704300						
ANR	6706916	Symbol	info -> data_size		6704300						
ANR	6706917	Symbol	BRANCH_INCR_HIGH		6704300						
ANR	6706918	Symbol	REGISTER_PREFIX_CHAR		6704300						
ANR	6706919	Symbol	DIP_OPCODE		6704300						
ANR	6706920	Symbol	dis_nonbranch		6704300						
ANR	6706921	Symbol	strlen		6704300						
ANR	6706922	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD		6704300						
ANR	6706923	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		6704300						
ANR	6706924	Symbol	spec_reg_info		6704300						
ANR	6706925	Symbol	* prefix_buffer		6704300						
ANR	6706926	Symbol	buffer		6704300						
ANR	6706927	Symbol	info		6704300						
ANR	6706928	Symbol	format_sup_reg		6704300						
ANR	6706929	Symbol	print_flags		6704300						
ANR	6706930	Symbol	last_immediate		6704300						
ANR	6706931	Symbol	NULL		6704300						
ANR	6706932	Symbol	offset		6704300						
ANR	6706933	Symbol	* prefix_opcodep		6704300						
ANR	6706934	Symbol	disdata		6704300						
ANR	6706935	Symbol	signedp		6704300						
ANR	6706936	Symbol	* temp		6704300						
ANR	6706937	Symbol	* cris_cc_strings		6704300						
ANR	6706938	Symbol	* disdata		6704300						
ANR	6706939	Symbol	prefix_opcodep		6704300						
ANR	6706940	Symbol	sregp		6704300						
ANR	6706941	Symbol	case_offset_counter		6704300						
ANR	6706942	Symbol	dis_dref		6704300						
ANR	6706943	Symbol	info -> flags		6704300						
ANR	6706944	Symbol	info -> target		6704300						
ANR	6706945	Symbol	opcodep -> args		6704300						
ANR	6706946	Symbol	prefix_insn		6704300						
ANR	6706947	Symbol	* mode_char		6704300						
ANR	6706948	Symbol	info -> print_address_func		6704300						
ANR	6706949	Symbol	sregp -> name		6704300						
ANR	6706950	Symbol	* * opcodep		6704300						
ANR	6706951	Symbol	addr		6704300						
ANR	6706952	Symbol	info -> insn_type		6704300						
ANR	6706953	Symbol	prefix_opcodep -> name		6704300						
ANR	6706954	Symbol	temp		6704300						
ANR	6706955	Symbol	* insn		6704300						
ANR	6706956	Symbol	format_dec		6704300						
ANR	6706957	Symbol	dis_condbranch		6704300						
ANR	6706958	Symbol	nbytes		6704300						
ANR	6706959	Symbol	target		6704300						
ANR	6706960	Symbol	* tp ++		6704300						
ANR	6706961	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MULT4		6704300						
ANR	6706962	Symbol	opcodep -> imm_oprnd_size		6704300						
ANR	6706963	Symbol	* s		6704300						
ANR	6706964	Symbol	* opcodep -> name		6704300						
