command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2532049	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dnxhd_encode_rdo_1.c								
ANR	2532050	Function	dnxhd_encode_rdo	1:0:0:2686							
ANR	2532051	FunctionDef	"dnxhd_encode_rdo (AVCodecContext * avctx , DNXHDEncContext * ctx)"		2532050	0					
ANR	2532052	CompoundStatement		3:0:74:2686	2532050	0					
ANR	2532053	IdentifierDeclStatement	"int lambda , up_step , down_step ;"	5:4:81:111	2532050	0	True				
ANR	2532054	IdentifierDecl	lambda		2532050	0					
ANR	2532055	IdentifierDeclType	int		2532050	0					
ANR	2532056	Identifier	lambda		2532050	1					
ANR	2532057	IdentifierDecl	up_step		2532050	1					
ANR	2532058	IdentifierDeclType	int		2532050	0					
ANR	2532059	Identifier	up_step		2532050	1					
ANR	2532060	IdentifierDecl	down_step		2532050	2					
ANR	2532061	IdentifierDeclType	int		2532050	0					
ANR	2532062	Identifier	down_step		2532050	1					
ANR	2532063	IdentifierDeclStatement	"int last_lower = INT_MAX , last_higher = 0 ;"	7:4:118:159	2532050	1	True				
ANR	2532064	IdentifierDecl	last_lower = INT_MAX		2532050	0					
ANR	2532065	IdentifierDeclType	int		2532050	0					
ANR	2532066	Identifier	last_lower		2532050	1					
ANR	2532067	AssignmentExpression	last_lower = INT_MAX		2532050	2		=			
ANR	2532068	Identifier	INT_MAX		2532050	0					
ANR	2532069	Identifier	INT_MAX		2532050	1					
ANR	2532070	IdentifierDecl	last_higher = 0		2532050	1					
ANR	2532071	IdentifierDeclType	int		2532050	0					
ANR	2532072	Identifier	last_higher		2532050	1					
ANR	2532073	AssignmentExpression	last_higher = 0		2532050	2		=			
ANR	2532074	Identifier	last_higher		2532050	0					
ANR	2532075	PrimaryExpression	0		2532050	1					
ANR	2532076	IdentifierDeclStatement	"int x , y , q ;"	9:4:166:177	2532050	2	True				
ANR	2532077	IdentifierDecl	x		2532050	0					
ANR	2532078	IdentifierDeclType	int		2532050	0					
ANR	2532079	Identifier	x		2532050	1					
ANR	2532080	IdentifierDecl	y		2532050	1					
ANR	2532081	IdentifierDeclType	int		2532050	0					
ANR	2532082	Identifier	y		2532050	1					
ANR	2532083	IdentifierDecl	q		2532050	2					
ANR	2532084	IdentifierDeclType	int		2532050	0					
ANR	2532085	Identifier	q		2532050	1					
ANR	2532086	ForStatement	for ( q = 1 ; q < avctx -> qmax ; q ++ )		2532050	3					
ANR	2532087	ForInit	q = 1 ;	13:9:191:196	2532050	0	True				
ANR	2532088	AssignmentExpression	q = 1		2532050	0		=			
ANR	2532089	Identifier	q		2532050	0					
ANR	2532090	PrimaryExpression	1		2532050	1					
ANR	2532091	Condition	q < avctx -> qmax	13:16:198:212	2532050	1	True				
ANR	2532092	RelationalExpression	q < avctx -> qmax		2532050	0		<			
ANR	2532093	Identifier	q		2532050	0					
ANR	2532094	PtrMemberAccess	avctx -> qmax		2532050	1					
ANR	2532095	Identifier	avctx		2532050	0					
ANR	2532096	Identifier	qmax		2532050	1					
ANR	2532097	PostIncDecOperationExpression	q ++	13:33:215:217	2532050	2	True				
ANR	2532098	Identifier	q		2532050	0					
ANR	2532099	IncDec	++		2532050	1					
ANR	2532100	CompoundStatement		11:38:145:145	2532050	3					
ANR	2532101	ExpressionStatement	ctx -> qscale = q	15:8:231:246	2532050	0	True				
ANR	2532102	AssignmentExpression	ctx -> qscale = q		2532050	0		=			
ANR	2532103	PtrMemberAccess	ctx -> qscale		2532050	0					
ANR	2532104	Identifier	ctx		2532050	0					
ANR	2532105	Identifier	qscale		2532050	1					
ANR	2532106	Identifier	q		2532050	1					
ANR	2532107	ExpressionStatement	"avctx -> execute2 ( avctx , dnxhd_calc_bits_thread , NULL , NULL , ctx -> m . mb_height )"	17:8:257:333	2532050	1	True				
ANR	2532108	CallExpression	"avctx -> execute2 ( avctx , dnxhd_calc_bits_thread , NULL , NULL , ctx -> m . mb_height )"		2532050	0					
ANR	2532109	Callee	avctx -> execute2		2532050	0					
ANR	2532110	PtrMemberAccess	avctx -> execute2		2532050	0					
ANR	2532111	Identifier	avctx		2532050	0					
ANR	2532112	Identifier	execute2		2532050	1					
ANR	2532113	ArgumentList	avctx		2532050	1					
ANR	2532114	Argument	avctx		2532050	0					
ANR	2532115	Identifier	avctx		2532050	0					
ANR	2532116	Argument	dnxhd_calc_bits_thread		2532050	1					
ANR	2532117	Identifier	dnxhd_calc_bits_thread		2532050	0					
ANR	2532118	Argument	NULL		2532050	2					
ANR	2532119	Identifier	NULL		2532050	0					
ANR	2532120	Argument	NULL		2532050	3					
ANR	2532121	Identifier	NULL		2532050	0					
ANR	2532122	Argument	ctx -> m . mb_height		2532050	4					
ANR	2532123	MemberAccess	ctx -> m . mb_height		2532050	0					
ANR	2532124	PtrMemberAccess	ctx -> m		2532050	0					
ANR	2532125	Identifier	ctx		2532050	0					
ANR	2532126	Identifier	m		2532050	1					
ANR	2532127	Identifier	mb_height		2532050	1					
ANR	2532128	ExpressionStatement	up_step = down_step = 2 << LAMBDA_FRAC_BITS	21:4:347:388	2532050	4	True				
ANR	2532129	AssignmentExpression	up_step = down_step = 2 << LAMBDA_FRAC_BITS		2532050	0		=			
ANR	2532130	Identifier	up_step		2532050	0					
ANR	2532131	AssignmentExpression	down_step = 2 << LAMBDA_FRAC_BITS		2532050	1		=			
ANR	2532132	Identifier	down_step		2532050	0					
ANR	2532133	ShiftExpression	2 << LAMBDA_FRAC_BITS		2532050	1		<<			
ANR	2532134	PrimaryExpression	2		2532050	0					
ANR	2532135	Identifier	LAMBDA_FRAC_BITS		2532050	1					
ANR	2532136	ExpressionStatement	lambda = ctx -> lambda	23:4:395:415	2532050	5	True				
ANR	2532137	AssignmentExpression	lambda = ctx -> lambda		2532050	0		=			
ANR	2532138	Identifier	lambda		2532050	0					
ANR	2532139	PtrMemberAccess	ctx -> lambda		2532050	1					
ANR	2532140	Identifier	ctx		2532050	0					
ANR	2532141	Identifier	lambda		2532050	1					
ANR	2532142	ForStatement	for ( ; ; )		2532050	6					
ANR	2532143	CompoundStatement		29:8:392:403	2532050	0					
ANR	2532144	IdentifierDeclStatement	int bits = 0 ;	29:8:444:456	2532050	0	True				
ANR	2532145	IdentifierDecl	bits = 0		2532050	0					
ANR	2532146	IdentifierDeclType	int		2532050	0					
ANR	2532147	Identifier	bits		2532050	1					
ANR	2532148	AssignmentExpression	bits = 0		2532050	2		=			
ANR	2532149	Identifier	bits		2532050	0					
ANR	2532150	PrimaryExpression	0		2532050	1					
ANR	2532151	IdentifierDeclStatement	int end = 0 ;	31:8:467:478	2532050	1	True				
ANR	2532152	IdentifierDecl	end = 0		2532050	0					
ANR	2532153	IdentifierDeclType	int		2532050	0					
ANR	2532154	Identifier	end		2532050	1					
ANR	2532155	AssignmentExpression	end = 0		2532050	2		=			
ANR	2532156	Identifier	end		2532050	0					
ANR	2532157	PrimaryExpression	0		2532050	1					
ANR	2532158	IfStatement	if ( lambda == last_higher )		2532050	2					
ANR	2532159	Condition	lambda == last_higher	33:12:493:513	2532050	0	True				
ANR	2532160	EqualityExpression	lambda == last_higher		2532050	0		==			
ANR	2532161	Identifier	lambda		2532050	0					
ANR	2532162	Identifier	last_higher		2532050	1					
ANR	2532163	CompoundStatement		31:35:441:441	2532050	1					
ANR	2532164	ExpressionStatement	lambda ++	35:12:531:539	2532050	0	True				
ANR	2532165	PostIncDecOperationExpression	lambda ++		2532050	0					
ANR	2532166	Identifier	lambda		2532050	0					
ANR	2532167	IncDec	++		2532050	1					
ANR	2532168	ExpressionStatement	end = 1	37:12:554:561	2532050	1	True				
ANR	2532169	AssignmentExpression	end = 1		2532050	0		=			
ANR	2532170	Identifier	end		2532050	0					
ANR	2532171	PrimaryExpression	1		2532050	1					
ANR	2532172	ForStatement	for ( y = 0 ; y < ctx -> m . mb_height ; y ++ )		2532050	3					
ANR	2532173	ForInit	y = 0 ;	41:13:622:627	2532050	0	True				
ANR	2532174	AssignmentExpression	y = 0		2532050	0		=			
ANR	2532175	Identifier	y		2532050	0					
ANR	2532176	PrimaryExpression	0		2532050	1					
ANR	2532177	Condition	y < ctx -> m . mb_height	41:20:629:648	2532050	1	True				
ANR	2532178	RelationalExpression	y < ctx -> m . mb_height		2532050	0		<			
ANR	2532179	Identifier	y		2532050	0					
ANR	2532180	MemberAccess	ctx -> m . mb_height		2532050	1					
ANR	2532181	PtrMemberAccess	ctx -> m		2532050	0					
ANR	2532182	Identifier	ctx		2532050	0					
ANR	2532183	Identifier	m		2532050	1					
ANR	2532184	Identifier	mb_height		2532050	1					
ANR	2532185	PostIncDecOperationExpression	y ++	41:42:651:653	2532050	2	True				
ANR	2532186	Identifier	y		2532050	0					
ANR	2532187	IncDec	++		2532050	1					
ANR	2532188	CompoundStatement		39:47:581:581	2532050	3					
ANR	2532189	ForStatement	for ( x = 0 ; x < ctx -> m . mb_width ; x ++ )		2532050	0					
ANR	2532190	ForInit	x = 0 ;	43:17:676:681	2532050	0	True				
ANR	2532191	AssignmentExpression	x = 0		2532050	0		=			
ANR	2532192	Identifier	x		2532050	0					
ANR	2532193	PrimaryExpression	0		2532050	1					
ANR	2532194	Condition	x < ctx -> m . mb_width	43:24:683:701	2532050	1	True				
ANR	2532195	RelationalExpression	x < ctx -> m . mb_width		2532050	0		<			
ANR	2532196	Identifier	x		2532050	0					
ANR	2532197	MemberAccess	ctx -> m . mb_width		2532050	1					
ANR	2532198	PtrMemberAccess	ctx -> m		2532050	0					
ANR	2532199	Identifier	ctx		2532050	0					
ANR	2532200	Identifier	m		2532050	1					
ANR	2532201	Identifier	mb_width		2532050	1					
ANR	2532202	PostIncDecOperationExpression	x ++	43:45:704:706	2532050	2	True				
ANR	2532203	Identifier	x		2532050	0					
ANR	2532204	IncDec	++		2532050	1					
ANR	2532205	CompoundStatement		47:16:728:756	2532050	3					
ANR	2532206	IdentifierDeclStatement	unsigned min = UINT_MAX ;	45:16:728:751	2532050	0	True				
ANR	2532207	IdentifierDecl	min = UINT_MAX		2532050	0					
ANR	2532208	IdentifierDeclType	unsigned		2532050	0					
ANR	2532209	Identifier	min		2532050	1					
ANR	2532210	AssignmentExpression	min = UINT_MAX		2532050	2		=			
ANR	2532211	Identifier	UINT_MAX		2532050	0					
ANR	2532212	Identifier	UINT_MAX		2532050	1					
ANR	2532213	IdentifierDeclStatement	int qscale = 1 ;	47:16:770:784	2532050	1	True				
ANR	2532214	IdentifierDecl	qscale = 1		2532050	0					
ANR	2532215	IdentifierDeclType	int		2532050	0					
ANR	2532216	Identifier	qscale		2532050	1					
ANR	2532217	AssignmentExpression	qscale = 1		2532050	2		=			
ANR	2532218	Identifier	qscale		2532050	0					
ANR	2532219	PrimaryExpression	1		2532050	1					
ANR	2532220	IdentifierDeclStatement	int mb = y * ctx -> m . mb_width + x ;	49:16:803:831	2532050	2	True				
ANR	2532221	IdentifierDecl	mb = y * ctx -> m . mb_width + x		2532050	0					
ANR	2532222	IdentifierDeclType	int		2532050	0					
ANR	2532223	Identifier	mb		2532050	1					
ANR	2532224	AssignmentExpression	mb = y * ctx -> m . mb_width + x		2532050	2		=			
ANR	2532225	Identifier	mb		2532050	0					
ANR	2532226	AdditiveExpression	y * ctx -> m . mb_width + x		2532050	1		+			
ANR	2532227	MultiplicativeExpression	y * ctx -> m . mb_width		2532050	0		*			
ANR	2532228	Identifier	y		2532050	0					
ANR	2532229	MemberAccess	ctx -> m . mb_width		2532050	1					
ANR	2532230	PtrMemberAccess	ctx -> m		2532050	0					
ANR	2532231	Identifier	ctx		2532050	0					
ANR	2532232	Identifier	m		2532050	1					
ANR	2532233	Identifier	mb_width		2532050	1					
ANR	2532234	Identifier	x		2532050	1					
ANR	2532235	ForStatement	for ( q = 1 ; q < avctx -> qmax ; q ++ )		2532050	3					
ANR	2532236	ForInit	q = 1 ;	51:21:855:860	2532050	0	True				
ANR	2532237	AssignmentExpression	q = 1		2532050	0		=			
ANR	2532238	Identifier	q		2532050	0					
ANR	2532239	PrimaryExpression	1		2532050	1					
ANR	2532240	Condition	q < avctx -> qmax	51:28:862:876	2532050	1	True				
ANR	2532241	RelationalExpression	q < avctx -> qmax		2532050	0		<			
ANR	2532242	Identifier	q		2532050	0					
ANR	2532243	PtrMemberAccess	avctx -> qmax		2532050	1					
ANR	2532244	Identifier	avctx		2532050	0					
ANR	2532245	Identifier	qmax		2532050	1					
ANR	2532246	PostIncDecOperationExpression	q ++	51:45:879:881	2532050	2	True				
ANR	2532247	Identifier	q		2532050	0					
ANR	2532248	IncDec	++		2532050	1					
ANR	2532249	CompoundStatement		51:20:832:920	2532050	3					
ANR	2532250	IdentifierDeclStatement	unsigned score = ctx -> mb_rc [ q ] [ mb ] . bits * lambda + ( ctx -> mb_rc [ q ] [ mb ] . ssd << LAMBDA_FRAC_BITS ) ;	53:20:907:995	2532050	0	True				
ANR	2532251	IdentifierDecl	score = ctx -> mb_rc [ q ] [ mb ] . bits * lambda + ( ctx -> mb_rc [ q ] [ mb ] . ssd << LAMBDA_FRAC_BITS )		2532050	0					
ANR	2532252	IdentifierDeclType	unsigned		2532050	0					
ANR	2532253	Identifier	score		2532050	1					
ANR	2532254	AssignmentExpression	score = ctx -> mb_rc [ q ] [ mb ] . bits * lambda + ( ctx -> mb_rc [ q ] [ mb ] . ssd << LAMBDA_FRAC_BITS )		2532050	2		=			
ANR	2532255	Identifier	score		2532050	0					
ANR	2532256	AdditiveExpression	ctx -> mb_rc [ q ] [ mb ] . bits * lambda + ( ctx -> mb_rc [ q ] [ mb ] . ssd << LAMBDA_FRAC_BITS )		2532050	1		+			
ANR	2532257	MultiplicativeExpression	ctx -> mb_rc [ q ] [ mb ] . bits * lambda		2532050	0		*			
ANR	2532258	MemberAccess	ctx -> mb_rc [ q ] [ mb ] . bits		2532050	0					
ANR	2532259	ArrayIndexing	ctx -> mb_rc [ q ] [ mb ]		2532050	0					
ANR	2532260	ArrayIndexing	ctx -> mb_rc [ q ]		2532050	0					
ANR	2532261	PtrMemberAccess	ctx -> mb_rc		2532050	0					
ANR	2532262	Identifier	ctx		2532050	0					
ANR	2532263	Identifier	mb_rc		2532050	1					
ANR	2532264	Identifier	q		2532050	1					
ANR	2532265	Identifier	mb		2532050	1					
ANR	2532266	Identifier	bits		2532050	1					
ANR	2532267	Identifier	lambda		2532050	1					
ANR	2532268	ShiftExpression	ctx -> mb_rc [ q ] [ mb ] . ssd << LAMBDA_FRAC_BITS		2532050	1		<<			
ANR	2532269	MemberAccess	ctx -> mb_rc [ q ] [ mb ] . ssd		2532050	0					
ANR	2532270	ArrayIndexing	ctx -> mb_rc [ q ] [ mb ]		2532050	0					
ANR	2532271	ArrayIndexing	ctx -> mb_rc [ q ]		2532050	0					
ANR	2532272	PtrMemberAccess	ctx -> mb_rc		2532050	0					
ANR	2532273	Identifier	ctx		2532050	0					
ANR	2532274	Identifier	mb_rc		2532050	1					
ANR	2532275	Identifier	q		2532050	1					
ANR	2532276	Identifier	mb		2532050	1					
ANR	2532277	Identifier	ssd		2532050	1					
ANR	2532278	Identifier	LAMBDA_FRAC_BITS		2532050	1					
ANR	2532279	IfStatement	if ( score < min )		2532050	1					
ANR	2532280	Condition	score < min	55:24:1022:1032	2532050	0	True				
ANR	2532281	RelationalExpression	score < min		2532050	0		<			
ANR	2532282	Identifier	score		2532050	0					
ANR	2532283	Identifier	min		2532050	1					
ANR	2532284	CompoundStatement		53:37:960:960	2532050	1					
ANR	2532285	ExpressionStatement	min = score	57:24:1062:1073	2532050	0	True				
ANR	2532286	AssignmentExpression	min = score		2532050	0		=			
ANR	2532287	Identifier	min		2532050	0					
ANR	2532288	Identifier	score		2532050	1					
ANR	2532289	ExpressionStatement	qscale = q	59:24:1100:1110	2532050	1	True				
ANR	2532290	AssignmentExpression	qscale = q		2532050	0		=			
ANR	2532291	Identifier	qscale		2532050	0					
ANR	2532292	Identifier	q		2532050	1					
ANR	2532293	ExpressionStatement	bits += ctx -> mb_rc [ qscale ] [ mb ] . bits	65:16:1171:1206	2532050	4	True				
ANR	2532294	AssignmentExpression	bits += ctx -> mb_rc [ qscale ] [ mb ] . bits		2532050	0		+=			
ANR	2532295	Identifier	bits		2532050	0					
ANR	2532296	MemberAccess	ctx -> mb_rc [ qscale ] [ mb ] . bits		2532050	1					
ANR	2532297	ArrayIndexing	ctx -> mb_rc [ qscale ] [ mb ]		2532050	0					
ANR	2532298	ArrayIndexing	ctx -> mb_rc [ qscale ]		2532050	0					
ANR	2532299	PtrMemberAccess	ctx -> mb_rc		2532050	0					
ANR	2532300	Identifier	ctx		2532050	0					
ANR	2532301	Identifier	mb_rc		2532050	1					
ANR	2532302	Identifier	qscale		2532050	1					
ANR	2532303	Identifier	mb		2532050	1					
ANR	2532304	Identifier	bits		2532050	1					
ANR	2532305	ExpressionStatement	ctx -> mb_qscale [ mb ] = qscale	67:16:1225:1252	2532050	5	True				
ANR	2532306	AssignmentExpression	ctx -> mb_qscale [ mb ] = qscale		2532050	0		=			
ANR	2532307	ArrayIndexing	ctx -> mb_qscale [ mb ]		2532050	0					
ANR	2532308	PtrMemberAccess	ctx -> mb_qscale		2532050	0					
ANR	2532309	Identifier	ctx		2532050	0					
ANR	2532310	Identifier	mb_qscale		2532050	1					
ANR	2532311	Identifier	mb		2532050	1					
ANR	2532312	Identifier	qscale		2532050	1					
ANR	2532313	ExpressionStatement	ctx -> mb_bits [ mb ] = ctx -> mb_rc [ qscale ] [ mb ] . bits	69:16:1271:1317	2532050	6	True				
ANR	2532314	AssignmentExpression	ctx -> mb_bits [ mb ] = ctx -> mb_rc [ qscale ] [ mb ] . bits		2532050	0		=			
ANR	2532315	ArrayIndexing	ctx -> mb_bits [ mb ]		2532050	0					
ANR	2532316	PtrMemberAccess	ctx -> mb_bits		2532050	0					
ANR	2532317	Identifier	ctx		2532050	0					
ANR	2532318	Identifier	mb_bits		2532050	1					
ANR	2532319	Identifier	mb		2532050	1					
ANR	2532320	MemberAccess	ctx -> mb_rc [ qscale ] [ mb ] . bits		2532050	1					
ANR	2532321	ArrayIndexing	ctx -> mb_rc [ qscale ] [ mb ]		2532050	0					
ANR	2532322	ArrayIndexing	ctx -> mb_rc [ qscale ]		2532050	0					
ANR	2532323	PtrMemberAccess	ctx -> mb_rc		2532050	0					
ANR	2532324	Identifier	ctx		2532050	0					
ANR	2532325	Identifier	mb_rc		2532050	1					
ANR	2532326	Identifier	qscale		2532050	1					
ANR	2532327	Identifier	mb		2532050	1					
ANR	2532328	Identifier	bits		2532050	1					
ANR	2532329	ExpressionStatement	bits = ( bits + 31 ) & ~31	73:12:1347:1367	2532050	1	True				
ANR	2532330	AssignmentExpression	bits = ( bits + 31 ) & ~31		2532050	0		=			
ANR	2532331	Identifier	bits		2532050	0					
ANR	2532332	BitAndExpression	( bits + 31 ) & ~31		2532050	1		&			
ANR	2532333	AdditiveExpression	bits + 31		2532050	0		+			
ANR	2532334	Identifier	bits		2532050	0					
ANR	2532335	PrimaryExpression	31		2532050	1					
ANR	2532336	Identifier	~31		2532050	1					
ANR	2532337	IfStatement	if ( bits > ctx -> frame_bits )		2532050	2					
ANR	2532338	Condition	bits > ctx -> frame_bits	75:16:1397:1418	2532050	0	True				
ANR	2532339	RelationalExpression	bits > ctx -> frame_bits		2532050	0		>			
ANR	2532340	Identifier	bits		2532050	0					
ANR	2532341	PtrMemberAccess	ctx -> frame_bits		2532050	1					
ANR	2532342	Identifier	ctx		2532050	0					
ANR	2532343	Identifier	frame_bits		2532050	1					
ANR	2532344	BreakStatement	break ;	77:16:1438:1443	2532050	1	True				
ANR	2532345	IfStatement	if ( end )		2532050	4					
ANR	2532346	Condition	end	85:12:1628:1630	2532050	0	True				
ANR	2532347	Identifier	end		2532050	0					
ANR	2532348	CompoundStatement		83:17:1558:1558	2532050	1					
ANR	2532349	IfStatement	if ( bits > ctx -> frame_bits )		2532050	0					
ANR	2532350	Condition	bits > ctx -> frame_bits	87:16:1652:1673	2532050	0	True				
ANR	2532351	RelationalExpression	bits > ctx -> frame_bits		2532050	0		>			
ANR	2532352	Identifier	bits		2532050	0					
ANR	2532353	PtrMemberAccess	ctx -> frame_bits		2532050	1					
ANR	2532354	Identifier	ctx		2532050	0					
ANR	2532355	Identifier	frame_bits		2532050	1					
ANR	2532356	ReturnStatement	return - 1 ;	89:16:1693:1702	2532050	1	True				
ANR	2532357	UnaryOperationExpression	- 1		2532050	0					
ANR	2532358	UnaryOperator	-		2532050	0					
ANR	2532359	PrimaryExpression	1		2532050	1					
ANR	2532360	BreakStatement	break ;	91:12:1717:1722	2532050	1	True				
ANR	2532361	IfStatement	if ( bits < ctx -> frame_bits )		2532050	5					
ANR	2532362	Condition	bits < ctx -> frame_bits	95:12:1748:1769	2532050	0	True				
ANR	2532363	RelationalExpression	bits < ctx -> frame_bits		2532050	0		<			
ANR	2532364	Identifier	bits		2532050	0					
ANR	2532365	PtrMemberAccess	ctx -> frame_bits		2532050	1					
ANR	2532366	Identifier	ctx		2532050	0					
ANR	2532367	Identifier	frame_bits		2532050	1					
ANR	2532368	CompoundStatement		93:36:1697:1697	2532050	1					
ANR	2532369	ExpressionStatement	"last_lower = FFMIN ( lambda , last_lower )"	97:12:1787:1825	2532050	0	True				
ANR	2532370	AssignmentExpression	"last_lower = FFMIN ( lambda , last_lower )"		2532050	0		=			
ANR	2532371	Identifier	last_lower		2532050	0					
ANR	2532372	CallExpression	"FFMIN ( lambda , last_lower )"		2532050	1					
ANR	2532373	Callee	FFMIN		2532050	0					
ANR	2532374	Identifier	FFMIN		2532050	0					
ANR	2532375	ArgumentList	lambda		2532050	1					
ANR	2532376	Argument	lambda		2532050	0					
ANR	2532377	Identifier	lambda		2532050	0					
ANR	2532378	Argument	last_lower		2532050	1					
ANR	2532379	Identifier	last_lower		2532050	0					
ANR	2532380	IfStatement	if ( last_higher != 0 )		2532050	1					
ANR	2532381	Condition	last_higher != 0	99:16:1844:1859	2532050	0	True				
ANR	2532382	EqualityExpression	last_higher != 0		2532050	0		!=			
ANR	2532383	Identifier	last_higher		2532050	0					
ANR	2532384	PrimaryExpression	0		2532050	1					
ANR	2532385	ExpressionStatement	lambda = ( lambda + last_higher ) >> 1	101:16:1879:1911	2532050	1	True				
ANR	2532386	AssignmentExpression	lambda = ( lambda + last_higher ) >> 1		2532050	0		=			
ANR	2532387	Identifier	lambda		2532050	0					
ANR	2532388	ShiftExpression	( lambda + last_higher ) >> 1		2532050	1		>>			
ANR	2532389	AdditiveExpression	lambda + last_higher		2532050	0		+			
ANR	2532390	Identifier	lambda		2532050	0					
ANR	2532391	Identifier	last_higher		2532050	1					
ANR	2532392	PrimaryExpression	1		2532050	1					
ANR	2532393	ElseStatement	else		2532050	0					
ANR	2532394	ExpressionStatement	lambda -= down_step	105:16:1948:1967	2532050	0	True				
ANR	2532395	AssignmentExpression	lambda -= down_step		2532050	0		-=			
ANR	2532396	Identifier	lambda		2532050	0					
ANR	2532397	Identifier	down_step		2532050	1					
ANR	2532398	ExpressionStatement	down_step *= 5	107:12:1982:1996	2532050	2	True				
ANR	2532399	AssignmentExpression	down_step *= 5		2532050	0		*=			
ANR	2532400	Identifier	down_step		2532050	0					
ANR	2532401	PrimaryExpression	5		2532050	1					
ANR	2532402	ExpressionStatement	up_step = 1 << LAMBDA_FRAC_BITS	109:12:2025:2054	2532050	3	True				
ANR	2532403	AssignmentExpression	up_step = 1 << LAMBDA_FRAC_BITS		2532050	0		=			
ANR	2532404	Identifier	up_step		2532050	0					
ANR	2532405	ShiftExpression	1 << LAMBDA_FRAC_BITS		2532050	1		<<			
ANR	2532406	PrimaryExpression	1		2532050	0					
ANR	2532407	Identifier	LAMBDA_FRAC_BITS		2532050	1					
ANR	2532408	ExpressionStatement	"lambda = FFMAX ( 1 , lambda )"	111:12:2069:2094	2532050	4	True				
ANR	2532409	AssignmentExpression	"lambda = FFMAX ( 1 , lambda )"		2532050	0		=			
ANR	2532410	Identifier	lambda		2532050	0					
ANR	2532411	CallExpression	"FFMAX ( 1 , lambda )"		2532050	1					
ANR	2532412	Callee	FFMAX		2532050	0					
ANR	2532413	Identifier	FFMAX		2532050	0					
ANR	2532414	ArgumentList	1		2532050	1					
ANR	2532415	Argument	1		2532050	0					
ANR	2532416	PrimaryExpression	1		2532050	0					
ANR	2532417	Argument	lambda		2532050	1					
ANR	2532418	Identifier	lambda		2532050	0					
ANR	2532419	IfStatement	if ( lambda == last_lower )		2532050	5					
ANR	2532420	Condition	lambda == last_lower	113:16:2113:2132	2532050	0	True				
ANR	2532421	EqualityExpression	lambda == last_lower		2532050	0		==			
ANR	2532422	Identifier	lambda		2532050	0					
ANR	2532423	Identifier	last_lower		2532050	1					
ANR	2532424	BreakStatement	break ;	115:16:2152:2157	2532050	1	True				
ANR	2532425	ElseStatement	else		2532050	0					
ANR	2532426	CompoundStatement		115:15:2100:2100	2532050	0					
ANR	2532427	ExpressionStatement	"last_higher = FFMAX ( lambda , last_higher )"	119:12:2190:2230	2532050	0	True				
ANR	2532428	AssignmentExpression	"last_higher = FFMAX ( lambda , last_higher )"		2532050	0		=			
ANR	2532429	Identifier	last_higher		2532050	0					
ANR	2532430	CallExpression	"FFMAX ( lambda , last_higher )"		2532050	1					
ANR	2532431	Callee	FFMAX		2532050	0					
ANR	2532432	Identifier	FFMAX		2532050	0					
ANR	2532433	ArgumentList	lambda		2532050	1					
ANR	2532434	Argument	lambda		2532050	0					
ANR	2532435	Identifier	lambda		2532050	0					
ANR	2532436	Argument	last_higher		2532050	1					
ANR	2532437	Identifier	last_higher		2532050	0					
ANR	2532438	IfStatement	if ( last_lower != INT_MAX )		2532050	1					
ANR	2532439	Condition	last_lower != INT_MAX	121:16:2249:2269	2532050	0	True				
ANR	2532440	EqualityExpression	last_lower != INT_MAX		2532050	0		!=			
ANR	2532441	Identifier	last_lower		2532050	0					
ANR	2532442	Identifier	INT_MAX		2532050	1					
ANR	2532443	ExpressionStatement	lambda = ( lambda + last_lower ) >> 1	123:16:2289:2320	2532050	1	True				
ANR	2532444	AssignmentExpression	lambda = ( lambda + last_lower ) >> 1		2532050	0		=			
ANR	2532445	Identifier	lambda		2532050	0					
ANR	2532446	ShiftExpression	( lambda + last_lower ) >> 1		2532050	1		>>			
ANR	2532447	AdditiveExpression	lambda + last_lower		2532050	0		+			
ANR	2532448	Identifier	lambda		2532050	0					
ANR	2532449	Identifier	last_lower		2532050	1					
ANR	2532450	PrimaryExpression	1		2532050	1					
ANR	2532451	ElseStatement	else		2532050	0					
ANR	2532452	IfStatement	if ( ( int64_t ) lambda + up_step > INT_MAX )		2532050	0					
ANR	2532453	Condition	( int64_t ) lambda + up_step > INT_MAX	125:21:2344:2378	2532050	0	True				
ANR	2532454	RelationalExpression	( int64_t ) lambda + up_step > INT_MAX		2532050	0		>			
ANR	2532455	AdditiveExpression	( int64_t ) lambda + up_step		2532050	0		+			
ANR	2532456	CastExpression	( int64_t ) lambda		2532050	0					
ANR	2532457	CastTarget	int64_t		2532050	0					
ANR	2532458	Identifier	lambda		2532050	1					
ANR	2532459	Identifier	up_step		2532050	1					
ANR	2532460	Identifier	INT_MAX		2532050	1					
ANR	2532461	ReturnStatement	return - 1 ;	127:16:2398:2407	2532050	1	True				
ANR	2532462	UnaryOperationExpression	- 1		2532050	0					
ANR	2532463	UnaryOperator	-		2532050	0					
ANR	2532464	PrimaryExpression	1		2532050	1					
ANR	2532465	ElseStatement	else		2532050	0					
ANR	2532466	ExpressionStatement	lambda += up_step	131:16:2444:2461	2532050	0	True				
ANR	2532467	AssignmentExpression	lambda += up_step		2532050	0		+=			
ANR	2532468	Identifier	lambda		2532050	0					
ANR	2532469	Identifier	up_step		2532050	1					
ANR	2532470	ExpressionStatement	"up_step = FFMIN ( ( int64_t ) up_step * 5 , INT_MAX )"	133:12:2476:2520	2532050	2	True				
ANR	2532471	AssignmentExpression	"up_step = FFMIN ( ( int64_t ) up_step * 5 , INT_MAX )"		2532050	0		=			
ANR	2532472	Identifier	up_step		2532050	0					
ANR	2532473	CallExpression	"FFMIN ( ( int64_t ) up_step * 5 , INT_MAX )"		2532050	1					
ANR	2532474	Callee	FFMIN		2532050	0					
ANR	2532475	Identifier	FFMIN		2532050	0					
ANR	2532476	ArgumentList	( int64_t ) up_step * 5		2532050	1					
ANR	2532477	Argument	( int64_t ) up_step * 5		2532050	0					
ANR	2532478	MultiplicativeExpression	( int64_t ) up_step * 5		2532050	0		*			
ANR	2532479	CastExpression	( int64_t ) up_step		2532050	0					
ANR	2532480	CastTarget	int64_t		2532050	0					
ANR	2532481	Identifier	up_step		2532050	1					
ANR	2532482	PrimaryExpression	5		2532050	1					
ANR	2532483	Argument	INT_MAX		2532050	1					
ANR	2532484	Identifier	INT_MAX		2532050	0					
ANR	2532485	ExpressionStatement	down_step = 1 << LAMBDA_FRAC_BITS	135:12:2535:2566	2532050	3	True				
ANR	2532486	AssignmentExpression	down_step = 1 << LAMBDA_FRAC_BITS		2532050	0		=			
ANR	2532487	Identifier	down_step		2532050	0					
ANR	2532488	ShiftExpression	1 << LAMBDA_FRAC_BITS		2532050	1		<<			
ANR	2532489	PrimaryExpression	1		2532050	0					
ANR	2532490	Identifier	LAMBDA_FRAC_BITS		2532050	1					
ANR	2532491	ExpressionStatement	ctx -> lambda = lambda	143:4:2648:2668	2532050	7	True				
ANR	2532492	AssignmentExpression	ctx -> lambda = lambda		2532050	0		=			
ANR	2532493	PtrMemberAccess	ctx -> lambda		2532050	0					
ANR	2532494	Identifier	ctx		2532050	0					
ANR	2532495	Identifier	lambda		2532050	1					
ANR	2532496	Identifier	lambda		2532050	1					
ANR	2532497	ReturnStatement	return 0 ;	145:4:2675:2683	2532050	8	True				
ANR	2532498	PrimaryExpression	0		2532050	0					
ANR	2532499	ReturnType	static int		2532050	1					
ANR	2532500	Identifier	dnxhd_encode_rdo		2532050	2					
ANR	2532501	ParameterList	"AVCodecContext * avctx , DNXHDEncContext * ctx"		2532050	3					
ANR	2532502	Parameter	AVCodecContext * avctx	1:28:28:48	2532050	0	True				
ANR	2532503	ParameterType	AVCodecContext *		2532050	0					
ANR	2532504	Identifier	avctx		2532050	1					
ANR	2532505	Parameter	DNXHDEncContext * ctx	1:51:51:70	2532050	1	True				
ANR	2532506	ParameterType	DNXHDEncContext *		2532050	0					
ANR	2532507	Identifier	ctx		2532050	1					
ANR	2532508	CFGEntryNode	ENTRY		2532050		True				
ANR	2532509	CFGExitNode	EXIT		2532050		True				
ANR	2532510	InfiniteForNode	true		2532050		True				
ANR	2532511	Symbol	dnxhd_calc_bits_thread		2532050						
ANR	2532512	Symbol	FFMIN		2532050						
ANR	2532513	Symbol	UINT_MAX		2532050						
ANR	2532514	Symbol	score		2532050						
ANR	2532515	Symbol	lambda		2532050						
ANR	2532516	Symbol	ctx -> m		2532050						
ANR	2532517	Symbol	ctx -> mb_rc [ qscale ] [ mb ] . bits		2532050						
ANR	2532518	Symbol	mb		2532050						
ANR	2532519	Symbol	ctx -> mb_qscale		2532050						
ANR	2532520	Symbol	* qscale		2532050						
ANR	2532521	Symbol	avctx -> qmax		2532050						
ANR	2532522	Symbol	NULL		2532050						
ANR	2532523	Symbol	ctx		2532050						
ANR	2532524	Symbol	bits		2532050						
ANR	2532525	Symbol	ctx -> mb_rc		2532050						
ANR	2532526	Symbol	ctx -> m . mb_width		2532050						
ANR	2532527	Symbol	qscale		2532050						
ANR	2532528	Symbol	ctx -> mb_rc [ q ] [ mb ] . ssd		2532050						
ANR	2532529	Symbol	* avctx		2532050						
ANR	2532530	Symbol	ctx -> qscale		2532050						
ANR	2532531	Symbol	up_step		2532050						
ANR	2532532	Symbol	ctx -> m . mb_height		2532050						
ANR	2532533	Symbol	last_lower		2532050						
ANR	2532534	Symbol	* * ctx -> mb_rc		2532050						
ANR	2532535	Symbol	down_step		2532050						
ANR	2532536	Symbol	LAMBDA_FRAC_BITS		2532050						
ANR	2532537	Symbol	* ctx -> mb_rc		2532050						
ANR	2532538	Symbol	ctx -> mb_rc [ q ] [ mb ] . bits		2532050						
ANR	2532539	Symbol	* * qscale		2532050						
ANR	2532540	Symbol	min		2532050						
ANR	2532541	Symbol	ctx -> mb_bits		2532050						
ANR	2532542	Symbol	INT_MAX		2532050						
ANR	2532543	Symbol	* mb		2532050						
ANR	2532544	Symbol	end		2532050						
ANR	2532545	Symbol	* * q		2532050						
ANR	2532546	Symbol	avctx		2532050						
ANR	2532547	Symbol	~31		2532050						
ANR	2532548	Symbol	ctx -> lambda		2532050						
ANR	2532549	Symbol	* * * ctx		2532050						
ANR	2532550	Symbol	last_higher		2532050						
ANR	2532551	Symbol	* ctx		2532050						
ANR	2532552	Symbol	q		2532050						
ANR	2532553	Symbol	* ctx -> mb_bits		2532050						
ANR	2532554	Symbol	ctx -> frame_bits		2532050						
ANR	2532555	Symbol	x		2532050						
ANR	2532556	Symbol	y		2532050						
ANR	2532557	Symbol	* q		2532050						
ANR	2532558	Symbol	* * ctx		2532050						
ANR	2532559	Symbol	* ctx -> mb_qscale		2532050						
ANR	2532560	Symbol	FFMAX		2532050						
