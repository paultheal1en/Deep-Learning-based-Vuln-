command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3079831	File	/home/p4ultr4n/workplace/ReVeal/raw_code/estimate_sid_gain_1.c								
ANR	3079832	Function	estimate_sid_gain	1:0:0:1204							
ANR	3079833	FunctionDef	estimate_sid_gain (G723_1_Context * p)		3079832	0					
ANR	3079834	CompoundStatement		3:0:49:1204	3079832	0					
ANR	3079835	IdentifierDeclStatement	"int i , shift , seg , seg2 , t , val , val_add , x , y ;"	5:4:56:102	3079832	0	True				
ANR	3079836	IdentifierDecl	i		3079832	0					
ANR	3079837	IdentifierDeclType	int		3079832	0					
ANR	3079838	Identifier	i		3079832	1					
ANR	3079839	IdentifierDecl	shift		3079832	1					
ANR	3079840	IdentifierDeclType	int		3079832	0					
ANR	3079841	Identifier	shift		3079832	1					
ANR	3079842	IdentifierDecl	seg		3079832	2					
ANR	3079843	IdentifierDeclType	int		3079832	0					
ANR	3079844	Identifier	seg		3079832	1					
ANR	3079845	IdentifierDecl	seg2		3079832	3					
ANR	3079846	IdentifierDeclType	int		3079832	0					
ANR	3079847	Identifier	seg2		3079832	1					
ANR	3079848	IdentifierDecl	t		3079832	4					
ANR	3079849	IdentifierDeclType	int		3079832	0					
ANR	3079850	Identifier	t		3079832	1					
ANR	3079851	IdentifierDecl	val		3079832	5					
ANR	3079852	IdentifierDeclType	int		3079832	0					
ANR	3079853	Identifier	val		3079832	1					
ANR	3079854	IdentifierDecl	val_add		3079832	6					
ANR	3079855	IdentifierDeclType	int		3079832	0					
ANR	3079856	Identifier	val_add		3079832	1					
ANR	3079857	IdentifierDecl	x		3079832	7					
ANR	3079858	IdentifierDeclType	int		3079832	0					
ANR	3079859	Identifier	x		3079832	1					
ANR	3079860	IdentifierDecl	y		3079832	8					
ANR	3079861	IdentifierDeclType	int		3079832	0					
ANR	3079862	Identifier	y		3079832	1					
ANR	3079863	ExpressionStatement	shift = 16 - p -> cur_gain * 2	9:4:111:139	3079832	1	True				
ANR	3079864	AssignmentExpression	shift = 16 - p -> cur_gain * 2		3079832	0		=			
ANR	3079865	Identifier	shift		3079832	0					
ANR	3079866	AdditiveExpression	16 - p -> cur_gain * 2		3079832	1		-			
ANR	3079867	PrimaryExpression	16		3079832	0					
ANR	3079868	MultiplicativeExpression	p -> cur_gain * 2		3079832	1		*			
ANR	3079869	PtrMemberAccess	p -> cur_gain		3079832	0					
ANR	3079870	Identifier	p		3079832	0					
ANR	3079871	Identifier	cur_gain		3079832	1					
ANR	3079872	PrimaryExpression	2		3079832	1					
ANR	3079873	IfStatement	if ( shift > 0 )		3079832	2					
ANR	3079874	Condition	shift > 0	11:8:150:158	3079832	0	True				
ANR	3079875	RelationalExpression	shift > 0		3079832	0		>			
ANR	3079876	Identifier	shift		3079832	0					
ANR	3079877	PrimaryExpression	0		3079832	1					
ANR	3079878	ExpressionStatement	t = p -> sid_gain << shift	13:8:170:194	3079832	1	True				
ANR	3079879	AssignmentExpression	t = p -> sid_gain << shift		3079832	0		=			
ANR	3079880	Identifier	t		3079832	0					
ANR	3079881	ShiftExpression	p -> sid_gain << shift		3079832	1		<<			
ANR	3079882	PtrMemberAccess	p -> sid_gain		3079832	0					
ANR	3079883	Identifier	p		3079832	0					
ANR	3079884	Identifier	sid_gain		3079832	1					
ANR	3079885	Identifier	shift		3079832	1					
ANR	3079886	ElseStatement	else		3079832	0					
ANR	3079887	ExpressionStatement	t = p -> sid_gain >> - shift	17:8:215:240	3079832	0	True				
ANR	3079888	AssignmentExpression	t = p -> sid_gain >> - shift		3079832	0		=			
ANR	3079889	Identifier	t		3079832	0					
ANR	3079890	ShiftExpression	p -> sid_gain >> - shift		3079832	1		>>			
ANR	3079891	PtrMemberAccess	p -> sid_gain		3079832	0					
ANR	3079892	Identifier	p		3079832	0					
ANR	3079893	Identifier	sid_gain		3079832	1					
ANR	3079894	UnaryOperationExpression	- shift		3079832	1					
ANR	3079895	UnaryOperator	-		3079832	0					
ANR	3079896	Identifier	shift		3079832	1					
ANR	3079897	ExpressionStatement	x = av_clipl_int32 ( t * ( int64_t ) cng_filt [ 0 ] >> 16 )	19:4:247:297	3079832	3	True				
ANR	3079898	AssignmentExpression	x = av_clipl_int32 ( t * ( int64_t ) cng_filt [ 0 ] >> 16 )		3079832	0		=			
ANR	3079899	Identifier	x		3079832	0					
ANR	3079900	CallExpression	av_clipl_int32 ( t * ( int64_t ) cng_filt [ 0 ] >> 16 )		3079832	1					
ANR	3079901	Callee	av_clipl_int32		3079832	0					
ANR	3079902	Identifier	av_clipl_int32		3079832	0					
ANR	3079903	ArgumentList	t * ( int64_t ) cng_filt [ 0 ] >> 16		3079832	1					
ANR	3079904	Argument	t * ( int64_t ) cng_filt [ 0 ] >> 16		3079832	0					
ANR	3079905	ShiftExpression	t * ( int64_t ) cng_filt [ 0 ] >> 16		3079832	0		>>			
ANR	3079906	MultiplicativeExpression	t * ( int64_t ) cng_filt [ 0 ]		3079832	0		*			
ANR	3079907	Identifier	t		3079832	0					
ANR	3079908	CastExpression	( int64_t ) cng_filt [ 0 ]		3079832	1					
ANR	3079909	CastTarget	int64_t		3079832	0					
ANR	3079910	ArrayIndexing	cng_filt [ 0 ]		3079832	1					
ANR	3079911	Identifier	cng_filt		3079832	0					
ANR	3079912	PrimaryExpression	0		3079832	1					
ANR	3079913	PrimaryExpression	16		3079832	1					
ANR	3079914	IfStatement	if ( x >= cng_bseg [ 2 ] )		3079832	4					
ANR	3079915	Condition	x >= cng_bseg [ 2 ]	23:8:310:325	3079832	0	True				
ANR	3079916	RelationalExpression	x >= cng_bseg [ 2 ]		3079832	0		>=			
ANR	3079917	Identifier	x		3079832	0					
ANR	3079918	ArrayIndexing	cng_bseg [ 2 ]		3079832	1					
ANR	3079919	Identifier	cng_bseg		3079832	0					
ANR	3079920	PrimaryExpression	2		3079832	1					
ANR	3079921	ReturnStatement	return 0x3F ;	25:8:337:348	3079832	1	True				
ANR	3079922	PrimaryExpression	0x3F		3079832	0					
ANR	3079923	IfStatement	if ( x >= cng_bseg [ 1 ] )		3079832	5					
ANR	3079924	Condition	x >= cng_bseg [ 1 ]	29:8:361:376	3079832	0	True				
ANR	3079925	RelationalExpression	x >= cng_bseg [ 1 ]		3079832	0		>=			
ANR	3079926	Identifier	x		3079832	0					
ANR	3079927	ArrayIndexing	cng_bseg [ 1 ]		3079832	1					
ANR	3079928	Identifier	cng_bseg		3079832	0					
ANR	3079929	PrimaryExpression	1		3079832	1					
ANR	3079930	CompoundStatement		27:26:329:329	3079832	1					
ANR	3079931	ExpressionStatement	shift = 4	31:8:390:399	3079832	0	True				
ANR	3079932	AssignmentExpression	shift = 4		3079832	0		=			
ANR	3079933	Identifier	shift		3079832	0					
ANR	3079934	PrimaryExpression	4		3079832	1					
ANR	3079935	ExpressionStatement	seg = 3	33:8:410:419	3079832	1	True				
ANR	3079936	AssignmentExpression	seg = 3		3079832	0		=			
ANR	3079937	Identifier	seg		3079832	0					
ANR	3079938	PrimaryExpression	3		3079832	1					
ANR	3079939	ElseStatement	else		3079832	0					
ANR	3079940	CompoundStatement		33:11:383:383	3079832	0					
ANR	3079941	ExpressionStatement	shift = 3	37:8:444:453	3079832	0	True				
ANR	3079942	AssignmentExpression	shift = 3		3079832	0		=			
ANR	3079943	Identifier	shift		3079832	0					
ANR	3079944	PrimaryExpression	3		3079832	1					
ANR	3079945	ExpressionStatement	seg = ( x >= cng_bseg [ 0 ] )	39:8:464:490	3079832	1	True				
ANR	3079946	AssignmentExpression	seg = ( x >= cng_bseg [ 0 ] )		3079832	0		=			
ANR	3079947	Identifier	seg		3079832	0					
ANR	3079948	RelationalExpression	x >= cng_bseg [ 0 ]		3079832	1		>=			
ANR	3079949	Identifier	x		3079832	0					
ANR	3079950	ArrayIndexing	cng_bseg [ 0 ]		3079832	1					
ANR	3079951	Identifier	cng_bseg		3079832	0					
ANR	3079952	PrimaryExpression	0		3079832	1					
ANR	3079953	ExpressionStatement	"seg2 = FFMIN ( seg , 3 )"	43:4:504:524	3079832	6	True				
ANR	3079954	AssignmentExpression	"seg2 = FFMIN ( seg , 3 )"		3079832	0		=			
ANR	3079955	Identifier	seg2		3079832	0					
ANR	3079956	CallExpression	"FFMIN ( seg , 3 )"		3079832	1					
ANR	3079957	Callee	FFMIN		3079832	0					
ANR	3079958	Identifier	FFMIN		3079832	0					
ANR	3079959	ArgumentList	seg		3079832	1					
ANR	3079960	Argument	seg		3079832	0					
ANR	3079961	Identifier	seg		3079832	0					
ANR	3079962	Argument	3		3079832	1					
ANR	3079963	PrimaryExpression	3		3079832	0					
ANR	3079964	ExpressionStatement	val = 1 << shift	47:4:533:553	3079832	7	True				
ANR	3079965	AssignmentExpression	val = 1 << shift		3079832	0		=			
ANR	3079966	Identifier	val		3079832	0					
ANR	3079967	ShiftExpression	1 << shift		3079832	1		<<			
ANR	3079968	PrimaryExpression	1		3079832	0					
ANR	3079969	Identifier	shift		3079832	1					
ANR	3079970	ExpressionStatement	val_add = val >> 1	49:4:560:578	3079832	8	True				
ANR	3079971	AssignmentExpression	val_add = val >> 1		3079832	0		=			
ANR	3079972	Identifier	val_add		3079832	0					
ANR	3079973	ShiftExpression	val >> 1		3079832	1		>>			
ANR	3079974	Identifier	val		3079832	0					
ANR	3079975	PrimaryExpression	1		3079832	1					
ANR	3079976	ForStatement	for ( i = 0 ; i < shift ; i ++ )		3079832	9					
ANR	3079977	ForInit	i = 0 ;	51:9:590:595	3079832	0	True				
ANR	3079978	AssignmentExpression	i = 0		3079832	0		=			
ANR	3079979	Identifier	i		3079832	0					
ANR	3079980	PrimaryExpression	0		3079832	1					
ANR	3079981	Condition	i < shift	51:16:597:605	3079832	1	True				
ANR	3079982	RelationalExpression	i < shift		3079832	0		<			
ANR	3079983	Identifier	i		3079832	0					
ANR	3079984	Identifier	shift		3079832	1					
ANR	3079985	PostIncDecOperationExpression	i ++	51:27:608:610	3079832	2	True				
ANR	3079986	Identifier	i		3079832	0					
ANR	3079987	IncDec	++		3079832	1					
ANR	3079988	CompoundStatement		49:32:563:563	3079832	3					
ANR	3079989	ExpressionStatement	t = seg * 32 + ( val << seg2 )	53:8:624:652	3079832	0	True				
ANR	3079990	AssignmentExpression	t = seg * 32 + ( val << seg2 )		3079832	0		=			
ANR	3079991	Identifier	t		3079832	0					
ANR	3079992	AdditiveExpression	seg * 32 + ( val << seg2 )		3079832	1		+			
ANR	3079993	MultiplicativeExpression	seg * 32		3079832	0		*			
ANR	3079994	Identifier	seg		3079832	0					
ANR	3079995	PrimaryExpression	32		3079832	1					
ANR	3079996	ShiftExpression	val << seg2		3079832	1		<<			
ANR	3079997	Identifier	val		3079832	0					
ANR	3079998	Identifier	seg2		3079832	1					
ANR	3079999	ExpressionStatement	t *= t	55:8:663:669	3079832	1	True				
ANR	3080000	AssignmentExpression	t *= t		3079832	0		*=			
ANR	3080001	Identifier	t		3079832	0					
ANR	3080002	Identifier	t		3079832	1					
ANR	3080003	IfStatement	if ( x >= t )		3079832	2					
ANR	3080004	Condition	x >= t	57:12:684:689	3079832	0	True				
ANR	3080005	RelationalExpression	x >= t		3079832	0		>=			
ANR	3080006	Identifier	x		3079832	0					
ANR	3080007	Identifier	t		3079832	1					
ANR	3080008	ExpressionStatement	val += val_add	59:12:705:719	3079832	1	True				
ANR	3080009	AssignmentExpression	val += val_add		3079832	0		+=			
ANR	3080010	Identifier	val		3079832	0					
ANR	3080011	Identifier	val_add		3079832	1					
ANR	3080012	ElseStatement	else		3079832	0					
ANR	3080013	ExpressionStatement	val -= val_add	63:12:748:762	3079832	0	True				
ANR	3080014	AssignmentExpression	val -= val_add		3079832	0		-=			
ANR	3080015	Identifier	val		3079832	0					
ANR	3080016	Identifier	val_add		3079832	1					
ANR	3080017	ExpressionStatement	val_add >>= 1	65:8:773:786	3079832	3	True				
ANR	3080018	AssignmentExpression	val_add >>= 1		3079832	0		>>=			
ANR	3080019	Identifier	val_add		3079832	0					
ANR	3080020	PrimaryExpression	1		3079832	1					
ANR	3080021	ExpressionStatement	t = seg * 32 + ( val << seg2 )	71:4:802:830	3079832	10	True				
ANR	3080022	AssignmentExpression	t = seg * 32 + ( val << seg2 )		3079832	0		=			
ANR	3080023	Identifier	t		3079832	0					
ANR	3080024	AdditiveExpression	seg * 32 + ( val << seg2 )		3079832	1		+			
ANR	3080025	MultiplicativeExpression	seg * 32		3079832	0		*			
ANR	3080026	Identifier	seg		3079832	0					
ANR	3080027	PrimaryExpression	32		3079832	1					
ANR	3080028	ShiftExpression	val << seg2		3079832	1		<<			
ANR	3080029	Identifier	val		3079832	0					
ANR	3080030	Identifier	seg2		3079832	1					
ANR	3080031	ExpressionStatement	y = t * t - x	73:4:837:850	3079832	11	True				
ANR	3080032	AssignmentExpression	y = t * t - x		3079832	0		=			
ANR	3080033	Identifier	y		3079832	0					
ANR	3080034	AdditiveExpression	t * t - x		3079832	1		-			
ANR	3080035	MultiplicativeExpression	t * t		3079832	0		*			
ANR	3080036	Identifier	t		3079832	0					
ANR	3080037	Identifier	t		3079832	1					
ANR	3080038	Identifier	x		3079832	1					
ANR	3080039	IfStatement	if ( y <= 0 )		3079832	12					
ANR	3080040	Condition	y <= 0	75:8:861:866	3079832	0	True				
ANR	3080041	RelationalExpression	y <= 0		3079832	0		<=			
ANR	3080042	Identifier	y		3079832	0					
ANR	3080043	PrimaryExpression	0		3079832	1					
ANR	3080044	CompoundStatement		73:16:819:819	3079832	1					
ANR	3080045	ExpressionStatement	t = seg * 32 + ( val + 1 << seg2 )	77:8:880:912	3079832	0	True				
ANR	3080046	AssignmentExpression	t = seg * 32 + ( val + 1 << seg2 )		3079832	0		=			
ANR	3080047	Identifier	t		3079832	0					
ANR	3080048	AdditiveExpression	seg * 32 + ( val + 1 << seg2 )		3079832	1		+			
ANR	3080049	MultiplicativeExpression	seg * 32		3079832	0		*			
ANR	3080050	Identifier	seg		3079832	0					
ANR	3080051	PrimaryExpression	32		3079832	1					
ANR	3080052	ShiftExpression	val + 1 << seg2		3079832	1		<<			
ANR	3080053	AdditiveExpression	val + 1		3079832	0		+			
ANR	3080054	Identifier	val		3079832	0					
ANR	3080055	PrimaryExpression	1		3079832	1					
ANR	3080056	Identifier	seg2		3079832	1					
ANR	3080057	ExpressionStatement	t = t * t - x	79:8:923:936	3079832	1	True				
ANR	3080058	AssignmentExpression	t = t * t - x		3079832	0		=			
ANR	3080059	Identifier	t		3079832	0					
ANR	3080060	AdditiveExpression	t * t - x		3079832	1		-			
ANR	3080061	MultiplicativeExpression	t * t		3079832	0		*			
ANR	3080062	Identifier	t		3079832	0					
ANR	3080063	Identifier	t		3079832	1					
ANR	3080064	Identifier	x		3079832	1					
ANR	3080065	ExpressionStatement	val = ( seg2 - 1 << 4 ) + val	81:8:947:974	3079832	2	True				
ANR	3080066	AssignmentExpression	val = ( seg2 - 1 << 4 ) + val		3079832	0		=			
ANR	3080067	Identifier	val		3079832	0					
ANR	3080068	AdditiveExpression	( seg2 - 1 << 4 ) + val		3079832	1		+			
ANR	3080069	ShiftExpression	seg2 - 1 << 4		3079832	0		<<			
ANR	3080070	AdditiveExpression	seg2 - 1		3079832	0		-			
ANR	3080071	Identifier	seg2		3079832	0					
ANR	3080072	PrimaryExpression	1		3079832	1					
ANR	3080073	PrimaryExpression	4		3079832	1					
ANR	3080074	Identifier	val		3079832	1					
ANR	3080075	IfStatement	if ( t >= y )		3079832	3					
ANR	3080076	Condition	t >= y	83:12:989:994	3079832	0	True				
ANR	3080077	RelationalExpression	t >= y		3079832	0		>=			
ANR	3080078	Identifier	t		3079832	0					
ANR	3080079	Identifier	y		3079832	1					
ANR	3080080	ExpressionStatement	val ++	85:12:1010:1015	3079832	1	True				
ANR	3080081	PostIncDecOperationExpression	val ++		3079832	0					
ANR	3080082	Identifier	val		3079832	0					
ANR	3080083	IncDec	++		3079832	1					
ANR	3080084	ElseStatement	else		3079832	0					
ANR	3080085	CompoundStatement		85:11:979:979	3079832	0					
ANR	3080086	ExpressionStatement	t = seg * 32 + ( val - 1 << seg2 )	89:8:1040:1072	3079832	0	True				
ANR	3080087	AssignmentExpression	t = seg * 32 + ( val - 1 << seg2 )		3079832	0		=			
ANR	3080088	Identifier	t		3079832	0					
ANR	3080089	AdditiveExpression	seg * 32 + ( val - 1 << seg2 )		3079832	1		+			
ANR	3080090	MultiplicativeExpression	seg * 32		3079832	0		*			
ANR	3080091	Identifier	seg		3079832	0					
ANR	3080092	PrimaryExpression	32		3079832	1					
ANR	3080093	ShiftExpression	val - 1 << seg2		3079832	1		<<			
ANR	3080094	AdditiveExpression	val - 1		3079832	0		-			
ANR	3080095	Identifier	val		3079832	0					
ANR	3080096	PrimaryExpression	1		3079832	1					
ANR	3080097	Identifier	seg2		3079832	1					
ANR	3080098	ExpressionStatement	t = t * t - x	91:8:1083:1096	3079832	1	True				
ANR	3080099	AssignmentExpression	t = t * t - x		3079832	0		=			
ANR	3080100	Identifier	t		3079832	0					
ANR	3080101	AdditiveExpression	t * t - x		3079832	1		-			
ANR	3080102	MultiplicativeExpression	t * t		3079832	0		*			
ANR	3080103	Identifier	t		3079832	0					
ANR	3080104	Identifier	t		3079832	1					
ANR	3080105	Identifier	x		3079832	1					
ANR	3080106	ExpressionStatement	val = ( seg2 - 1 << 4 ) + val	93:8:1107:1134	3079832	2	True				
ANR	3080107	AssignmentExpression	val = ( seg2 - 1 << 4 ) + val		3079832	0		=			
ANR	3080108	Identifier	val		3079832	0					
ANR	3080109	AdditiveExpression	( seg2 - 1 << 4 ) + val		3079832	1		+			
ANR	3080110	ShiftExpression	seg2 - 1 << 4		3079832	0		<<			
ANR	3080111	AdditiveExpression	seg2 - 1		3079832	0		-			
ANR	3080112	Identifier	seg2		3079832	0					
ANR	3080113	PrimaryExpression	1		3079832	1					
ANR	3080114	PrimaryExpression	4		3079832	1					
ANR	3080115	Identifier	val		3079832	1					
ANR	3080116	IfStatement	if ( t >= y )		3079832	3					
ANR	3080117	Condition	t >= y	95:12:1149:1154	3079832	0	True				
ANR	3080118	RelationalExpression	t >= y		3079832	0		>=			
ANR	3080119	Identifier	t		3079832	0					
ANR	3080120	Identifier	y		3079832	1					
ANR	3080121	ExpressionStatement	val --	97:12:1170:1175	3079832	1	True				
ANR	3080122	PostIncDecOperationExpression	val --		3079832	0					
ANR	3080123	Identifier	val		3079832	0					
ANR	3080124	IncDec	--		3079832	1					
ANR	3080125	ReturnStatement	return val ;	103:4:1191:1201	3079832	13	True				
ANR	3080126	Identifier	val		3079832	0					
ANR	3080127	ReturnType	static int		3079832	1					
ANR	3080128	Identifier	estimate_sid_gain		3079832	2					
ANR	3080129	ParameterList	G723_1_Context * p		3079832	3					
ANR	3080130	Parameter	G723_1_Context * p	1:29:29:45	3079832	0	True				
ANR	3080131	ParameterType	G723_1_Context *		3079832	0					
ANR	3080132	Identifier	p		3079832	1					
ANR	3080133	CFGEntryNode	ENTRY		3079832		True				
ANR	3080134	CFGExitNode	EXIT		3079832		True				
ANR	3080135	Symbol	val_add		3079832						
ANR	3080136	Symbol	val		3079832						
ANR	3080137	Symbol	cng_filt		3079832						
ANR	3080138	Symbol	* cng_bseg		3079832						
ANR	3080139	Symbol	shift		3079832						
ANR	3080140	Symbol	seg2		3079832						
ANR	3080141	Symbol	i		3079832						
ANR	3080142	Symbol	FFMIN		3079832						
ANR	3080143	Symbol	p -> cur_gain		3079832						
ANR	3080144	Symbol	* cng_filt		3079832						
ANR	3080145	Symbol	p		3079832						
ANR	3080146	Symbol	seg		3079832						
ANR	3080147	Symbol	t		3079832						
ANR	3080148	Symbol	av_clipl_int32		3079832						
ANR	3080149	Symbol	x		3079832						
ANR	3080150	Symbol	p -> sid_gain		3079832						
ANR	3080151	Symbol	y		3079832						
ANR	3080152	Symbol	* p		3079832						
ANR	3080153	Symbol	cng_bseg		3079832						
