command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1120998	File	/home/p4ultr4n/workplace/ReVeal/raw_code/breakline_01_1.c								
ANR	1120999	Function	breakline	1:0:0:476							
ANR	1121000	FunctionDef	"breakline (char * input , int * count)"		1120999	0					
ANR	1121001	CompoundStatement		3:0:43:476	1120999	0					
ANR	1121002	IdentifierDeclStatement	int c = 0 ;	5:4:50:59	1120999	0	True				
ANR	1121003	IdentifierDecl	c = 0		1120999	0					
ANR	1121004	IdentifierDeclType	int		1120999	0					
ANR	1121005	Identifier	c		1120999	1					
ANR	1121006	AssignmentExpression	c = 0		1120999	2		=			
ANR	1121007	Identifier	c		1120999	0					
ANR	1121008	PrimaryExpression	0		1120999	1					
ANR	1121009	IdentifierDeclStatement	char * p ;	7:4:66:73	1120999	1	True				
ANR	1121010	IdentifierDecl	* p		1120999	0					
ANR	1121011	IdentifierDeclType	char *		1120999	0					
ANR	1121012	Identifier	p		1120999	1					
ANR	1121013	IdentifierDeclStatement	"char * * rval = calloc ( sizeof ( char * ) , 1 ) ;"	9:4:80:119	1120999	2	True				
ANR	1121014	IdentifierDecl	"* * rval = calloc ( sizeof ( char * ) , 1 )"		1120999	0					
ANR	1121015	IdentifierDeclType	char * *		1120999	0					
ANR	1121016	Identifier	rval		1120999	1					
ANR	1121017	AssignmentExpression	"* * rval = calloc ( sizeof ( char * ) , 1 )"		1120999	2		=			
ANR	1121018	Identifier	rval		1120999	0					
ANR	1121019	CallExpression	"calloc ( sizeof ( char * ) , 1 )"		1120999	1					
ANR	1121020	Callee	calloc		1120999	0					
ANR	1121021	Identifier	calloc		1120999	0					
ANR	1121022	ArgumentList	sizeof ( char * )		1120999	1					
ANR	1121023	Argument	sizeof ( char * )		1120999	0					
ANR	1121024	SizeofExpression	sizeof ( char * )		1120999	0					
ANR	1121025	Sizeof	sizeof		1120999	0					
ANR	1121026	SizeofOperand	char *		1120999	1					
ANR	1121027	Argument	1		1120999	1					
ANR	1121028	PrimaryExpression	1		1120999	0					
ANR	1121029	WhileStatement	"while ( rval && ( p = qemu_strsep ( & input , "" "" ) ) != NULL )"		1120999	3					
ANR	1121030	Condition	"rval && ( p = qemu_strsep ( & input , "" "" ) ) != NULL"	13:11:135:180	1120999	0	True				
ANR	1121031	AndExpression	"rval && ( p = qemu_strsep ( & input , "" "" ) ) != NULL"		1120999	0		&&			
ANR	1121032	Identifier	rval		1120999	0					
ANR	1121033	EqualityExpression	"( p = qemu_strsep ( & input , "" "" ) ) != NULL"		1120999	1		!=			
ANR	1121034	AssignmentExpression	"p = qemu_strsep ( & input , "" "" )"		1120999	0		=			
ANR	1121035	Identifier	p		1120999	0					
ANR	1121036	CallExpression	"qemu_strsep ( & input , "" "" )"		1120999	1					
ANR	1121037	Callee	qemu_strsep		1120999	0					
ANR	1121038	Identifier	qemu_strsep		1120999	0					
ANR	1121039	ArgumentList	& input		1120999	1					
ANR	1121040	Argument	& input		1120999	0					
ANR	1121041	UnaryOperationExpression	& input		1120999	0					
ANR	1121042	UnaryOperator	&		1120999	0					
ANR	1121043	Identifier	input		1120999	1					
ANR	1121044	Argument	""" """		1120999	1					
ANR	1121045	PrimaryExpression	""" """		1120999	0					
ANR	1121046	Identifier	NULL		1120999	1					
ANR	1121047	CompoundStatement		11:59:139:139	1120999	1					
ANR	1121048	IfStatement	if ( ! * p )		1120999	0					
ANR	1121049	Condition	! * p	15:12:198:200	1120999	0	True				
ANR	1121050	UnaryOperationExpression	! * p		1120999	0					
ANR	1121051	UnaryOperator	!		1120999	0					
ANR	1121052	UnaryOperationExpression	* p		1120999	1					
ANR	1121053	UnaryOperator	*		1120999	0					
ANR	1121054	Identifier	p		1120999	1					
ANR	1121055	CompoundStatement		13:17:159:159	1120999	1					
ANR	1121056	ContinueStatement	continue ;	17:12:218:226	1120999	0	True				
ANR	1121057	ExpressionStatement	c ++	21:8:248:251	1120999	1	True				
ANR	1121058	PostIncDecOperationExpression	c ++		1120999	0					
ANR	1121059	Identifier	c		1120999	0					
ANR	1121060	IncDec	++		1120999	1					
ANR	1121061	ExpressionStatement	"rval = realloc ( rval , sizeof ( * rval ) * ( c + 1 ) )"	23:8:262:307	1120999	2	True				
ANR	1121062	AssignmentExpression	"rval = realloc ( rval , sizeof ( * rval ) * ( c + 1 ) )"		1120999	0		=			
ANR	1121063	Identifier	rval		1120999	0					
ANR	1121064	CallExpression	"realloc ( rval , sizeof ( * rval ) * ( c + 1 ) )"		1120999	1					
ANR	1121065	Callee	realloc		1120999	0					
ANR	1121066	Identifier	realloc		1120999	0					
ANR	1121067	ArgumentList	rval		1120999	1					
ANR	1121068	Argument	rval		1120999	0					
ANR	1121069	Identifier	rval		1120999	0					
ANR	1121070	Argument	sizeof ( * rval ) * ( c + 1 )		1120999	1					
ANR	1121071	MultiplicativeExpression	sizeof ( * rval ) * ( c + 1 )		1120999	0		*			
ANR	1121072	SizeofExpression	sizeof ( * rval )		1120999	0					
ANR	1121073	Sizeof	sizeof		1120999	0					
ANR	1121074	UnaryOperationExpression	* rval		1120999	1					
ANR	1121075	UnaryOperator	*		1120999	0					
ANR	1121076	Identifier	rval		1120999	1					
ANR	1121077	AdditiveExpression	c + 1		1120999	1		+			
ANR	1121078	Identifier	c		1120999	0					
ANR	1121079	PrimaryExpression	1		1120999	1					
ANR	1121080	IfStatement	if ( ! rval )		1120999	3					
ANR	1121081	Condition	! rval	25:12:322:326	1120999	0	True				
ANR	1121082	UnaryOperationExpression	! rval		1120999	0					
ANR	1121083	UnaryOperator	!		1120999	0					
ANR	1121084	Identifier	rval		1120999	1					
ANR	1121085	CompoundStatement		23:19:285:285	1120999	1					
ANR	1121086	ExpressionStatement	c = 0	27:12:344:349	1120999	0	True				
ANR	1121087	AssignmentExpression	c = 0		1120999	0		=			
ANR	1121088	Identifier	c		1120999	0					
ANR	1121089	PrimaryExpression	0		1120999	1					
ANR	1121090	BreakStatement	break ;	29:12:364:369	1120999	1	True				
ANR	1121091	ExpressionStatement	rval [ c - 1 ] = p	33:8:391:406	1120999	4	True				
ANR	1121092	AssignmentExpression	rval [ c - 1 ] = p		1120999	0		=			
ANR	1121093	ArrayIndexing	rval [ c - 1 ]		1120999	0					
ANR	1121094	Identifier	rval		1120999	0					
ANR	1121095	AdditiveExpression	c - 1		1120999	1		-			
ANR	1121096	Identifier	c		1120999	0					
ANR	1121097	PrimaryExpression	1		1120999	1					
ANR	1121098	Identifier	p		1120999	1					
ANR	1121099	ExpressionStatement	rval [ c ] = NULL	35:8:417:431	1120999	5	True				
ANR	1121100	AssignmentExpression	rval [ c ] = NULL		1120999	0		=			
ANR	1121101	ArrayIndexing	rval [ c ]		1120999	0					
ANR	1121102	Identifier	rval		1120999	0					
ANR	1121103	Identifier	c		1120999	1					
ANR	1121104	Identifier	NULL		1120999	1					
ANR	1121105	ExpressionStatement	* count = c	39:4:445:455	1120999	4	True				
ANR	1121106	AssignmentExpression	* count = c		1120999	0		=			
ANR	1121107	UnaryOperationExpression	* count		1120999	0					
ANR	1121108	UnaryOperator	*		1120999	0					
ANR	1121109	Identifier	count		1120999	1					
ANR	1121110	Identifier	c		1120999	1					
ANR	1121111	ReturnStatement	return rval ;	41:4:462:473	1120999	5	True				
ANR	1121112	Identifier	rval		1120999	0					
ANR	1121113	ReturnType	char * *		1120999	1					
ANR	1121114	Identifier	breakline		1120999	2					
ANR	1121115	ParameterList	"char * input , int * count"		1120999	3					
ANR	1121116	Parameter	char * input	1:17:17:27	1120999	0	True				
ANR	1121117	ParameterType	char *		1120999	0					
ANR	1121118	Identifier	input		1120999	1					
ANR	1121119	Parameter	int * count	1:30:30:39	1120999	1	True				
ANR	1121120	ParameterType	int *		1120999	0					
ANR	1121121	Identifier	count		1120999	1					
ANR	1121122	CFGEntryNode	ENTRY		1120999		True				
ANR	1121123	CFGExitNode	EXIT		1120999		True				
ANR	1121124	Symbol	* rval		1120999						
ANR	1121125	Symbol	c		1120999						
ANR	1121126	Symbol	NULL		1120999						
ANR	1121127	Symbol	count		1120999						
ANR	1121128	Symbol	calloc		1120999						
ANR	1121129	Symbol	realloc		1120999						
ANR	1121130	Symbol	* c		1120999						
ANR	1121131	Symbol	qemu_strsep		1120999						
ANR	1121132	Symbol	p		1120999						
ANR	1121133	Symbol	input		1120999						
ANR	1121134	Symbol	* count		1120999						
ANR	1121135	Symbol	& input		1120999						
ANR	1121136	Symbol	rval		1120999						
ANR	1121137	Symbol	* p		1120999						
