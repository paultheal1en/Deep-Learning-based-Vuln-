command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8052047	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_decode_frame_header_0.c								
ANR	8052048	Function	svq1_decode_frame_header	1:0:0:2714							
ANR	8052049	FunctionDef	"svq1_decode_frame_header (AVCodecContext * avctx , AVFrame * frame)"		8052048	0					
ANR	8052050	CompoundStatement		3:0:76:2714	8052048	0					
ANR	8052051	IdentifierDeclStatement	SVQ1Context * s = avctx -> priv_data ;	5:4:83:116	8052048	0	True				
ANR	8052052	IdentifierDecl	* s = avctx -> priv_data		8052048	0					
ANR	8052053	IdentifierDeclType	SVQ1Context *		8052048	0					
ANR	8052054	Identifier	s		8052048	1					
ANR	8052055	AssignmentExpression	* s = avctx -> priv_data		8052048	2		=			
ANR	8052056	Identifier	s		8052048	0					
ANR	8052057	PtrMemberAccess	avctx -> priv_data		8052048	1					
ANR	8052058	Identifier	avctx		8052048	0					
ANR	8052059	Identifier	priv_data		8052048	1					
ANR	8052060	IdentifierDeclStatement	GetBitContext * bitbuf = & s -> gb ;	7:4:123:153	8052048	1	True				
ANR	8052061	IdentifierDecl	* bitbuf = & s -> gb		8052048	0					
ANR	8052062	IdentifierDeclType	GetBitContext *		8052048	0					
ANR	8052063	Identifier	bitbuf		8052048	1					
ANR	8052064	AssignmentExpression	* bitbuf = & s -> gb		8052048	2		=			
ANR	8052065	Identifier	bitbuf		8052048	0					
ANR	8052066	UnaryOperationExpression	& s -> gb		8052048	1					
ANR	8052067	UnaryOperator	&		8052048	0					
ANR	8052068	PtrMemberAccess	s -> gb		8052048	1					
ANR	8052069	Identifier	s		8052048	0					
ANR	8052070	Identifier	gb		8052048	1					
ANR	8052071	IdentifierDeclStatement	int frame_size_code ;	9:4:160:179	8052048	2	True				
ANR	8052072	IdentifierDecl	frame_size_code		8052048	0					
ANR	8052073	IdentifierDeclType	int		8052048	0					
ANR	8052074	Identifier	frame_size_code		8052048	1					
ANR	8052075	IdentifierDeclStatement	int width = s -> width ;	11:4:186:207	8052048	3	True				
ANR	8052076	IdentifierDecl	width = s -> width		8052048	0					
ANR	8052077	IdentifierDeclType	int		8052048	0					
ANR	8052078	Identifier	width		8052048	1					
ANR	8052079	AssignmentExpression	width = s -> width		8052048	2		=			
ANR	8052080	Identifier	width		8052048	0					
ANR	8052081	PtrMemberAccess	s -> width		8052048	1					
ANR	8052082	Identifier	s		8052048	0					
ANR	8052083	Identifier	width		8052048	1					
ANR	8052084	IdentifierDeclStatement	int height = s -> height ;	13:4:214:236	8052048	4	True				
ANR	8052085	IdentifierDecl	height = s -> height		8052048	0					
ANR	8052086	IdentifierDeclType	int		8052048	0					
ANR	8052087	Identifier	height		8052048	1					
ANR	8052088	AssignmentExpression	height = s -> height		8052048	2		=			
ANR	8052089	Identifier	height		8052048	0					
ANR	8052090	PtrMemberAccess	s -> height		8052048	1					
ANR	8052091	Identifier	s		8052048	0					
ANR	8052092	Identifier	height		8052048	1					
ANR	8052093	ExpressionStatement	"skip_bits ( bitbuf , 8 )"	17:4:245:265	8052048	5	True				
ANR	8052094	CallExpression	"skip_bits ( bitbuf , 8 )"		8052048	0					
ANR	8052095	Callee	skip_bits		8052048	0					
ANR	8052096	Identifier	skip_bits		8052048	0					
ANR	8052097	ArgumentList	bitbuf		8052048	1					
ANR	8052098	Argument	bitbuf		8052048	0					
ANR	8052099	Identifier	bitbuf		8052048	0					
ANR	8052100	Argument	8		8052048	1					
ANR	8052101	PrimaryExpression	8		8052048	0					
ANR	8052102	ExpressionStatement	s -> nonref = 0	23:4:321:334	8052048	6	True				
ANR	8052103	AssignmentExpression	s -> nonref = 0		8052048	0		=			
ANR	8052104	PtrMemberAccess	s -> nonref		8052048	0					
ANR	8052105	Identifier	s		8052048	0					
ANR	8052106	Identifier	nonref		8052048	1					
ANR	8052107	PrimaryExpression	0		8052048	1					
ANR	8052108	SwitchStatement	"switch ( get_bits ( bitbuf , 2 ) )"		8052048	7					
ANR	8052109	Condition	"get_bits ( bitbuf , 2 )"	25:12:349:367	8052048	0	True				
ANR	8052110	CallExpression	"get_bits ( bitbuf , 2 )"		8052048	0					
ANR	8052111	Callee	get_bits		8052048	0					
ANR	8052112	Identifier	get_bits		8052048	0					
ANR	8052113	ArgumentList	bitbuf		8052048	1					
ANR	8052114	Argument	bitbuf		8052048	0					
ANR	8052115	Identifier	bitbuf		8052048	0					
ANR	8052116	Argument	2		8052048	1					
ANR	8052117	PrimaryExpression	2		8052048	0					
ANR	8052118	CompoundStatement		23:33:293:293	8052048	1					
ANR	8052119	Label	case 0 :	27:4:377:383	8052048	0	True				
ANR	8052120	ExpressionStatement	frame -> pict_type = AV_PICTURE_TYPE_I	29:8:394:430	8052048	1	True				
ANR	8052121	AssignmentExpression	frame -> pict_type = AV_PICTURE_TYPE_I		8052048	0		=			
ANR	8052122	PtrMemberAccess	frame -> pict_type		8052048	0					
ANR	8052123	Identifier	frame		8052048	0					
ANR	8052124	Identifier	pict_type		8052048	1					
ANR	8052125	Identifier	AV_PICTURE_TYPE_I		8052048	1					
ANR	8052126	BreakStatement	break ;	31:8:441:446	8052048	2	True				
ANR	8052127	Label	case 2 :	33:4:453:459	8052048	3	True				
ANR	8052128	ExpressionStatement	s -> nonref = 1	35:8:470:483	8052048	4	True				
ANR	8052129	AssignmentExpression	s -> nonref = 1		8052048	0		=			
ANR	8052130	PtrMemberAccess	s -> nonref		8052048	0					
ANR	8052131	Identifier	s		8052048	0					
ANR	8052132	Identifier	nonref		8052048	1					
ANR	8052133	PrimaryExpression	1		8052048	1					
ANR	8052134	Label	case 1 :	37:4:490:496	8052048	5	True				
ANR	8052135	ExpressionStatement	frame -> pict_type = AV_PICTURE_TYPE_P	39:8:507:543	8052048	6	True				
ANR	8052136	AssignmentExpression	frame -> pict_type = AV_PICTURE_TYPE_P		8052048	0		=			
ANR	8052137	PtrMemberAccess	frame -> pict_type		8052048	0					
ANR	8052138	Identifier	frame		8052048	0					
ANR	8052139	Identifier	pict_type		8052048	1					
ANR	8052140	Identifier	AV_PICTURE_TYPE_P		8052048	1					
ANR	8052141	BreakStatement	break ;	41:8:554:559	8052048	7	True				
ANR	8052142	Label	default :	43:4:566:573	8052048	8	True				
ANR	8052143	Identifier	default		8052048	0					
ANR	8052144	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid frame type.\\n"" )"	45:8:584:636	8052048	9	True				
ANR	8052145	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid frame type.\\n"" )"		8052048	0					
ANR	8052146	Callee	av_log		8052048	0					
ANR	8052147	Identifier	av_log		8052048	0					
ANR	8052148	ArgumentList	avctx		8052048	1					
ANR	8052149	Argument	avctx		8052048	0					
ANR	8052150	Identifier	avctx		8052048	0					
ANR	8052151	Argument	AV_LOG_ERROR		8052048	1					
ANR	8052152	Identifier	AV_LOG_ERROR		8052048	0					
ANR	8052153	Argument	"""Invalid frame type.\\n"""		8052048	2					
ANR	8052154	PrimaryExpression	"""Invalid frame type.\\n"""		8052048	0					
ANR	8052155	ReturnStatement	return AVERROR_INVALIDDATA ;	47:8:647:673	8052048	10	True				
ANR	8052156	Identifier	AVERROR_INVALIDDATA		8052048	0					
ANR	8052157	IfStatement	if ( frame -> pict_type == AV_PICTURE_TYPE_I )		8052048	8					
ANR	8052158	Condition	frame -> pict_type == AV_PICTURE_TYPE_I	53:8:693:729	8052048	0	True				
ANR	8052159	EqualityExpression	frame -> pict_type == AV_PICTURE_TYPE_I		8052048	0		==			
ANR	8052160	PtrMemberAccess	frame -> pict_type		8052048	0					
ANR	8052161	Identifier	frame		8052048	0					
ANR	8052162	Identifier	pict_type		8052048	1					
ANR	8052163	Identifier	AV_PICTURE_TYPE_I		8052048	1					
ANR	8052164	CompoundStatement		51:47:655:655	8052048	1					
ANR	8052165	IfStatement	if ( s -> frame_code == 0x50 || s -> frame_code == 0x60 )		8052048	0					
ANR	8052166	Condition	s -> frame_code == 0x50 || s -> frame_code == 0x60	57:12:777:822	8052048	0	True				
ANR	8052167	OrExpression	s -> frame_code == 0x50 || s -> frame_code == 0x60		8052048	0		||			
ANR	8052168	EqualityExpression	s -> frame_code == 0x50		8052048	0		==			
ANR	8052169	PtrMemberAccess	s -> frame_code		8052048	0					
ANR	8052170	Identifier	s		8052048	0					
ANR	8052171	Identifier	frame_code		8052048	1					
ANR	8052172	PrimaryExpression	0x50		8052048	1					
ANR	8052173	EqualityExpression	s -> frame_code == 0x60		8052048	1		==			
ANR	8052174	PtrMemberAccess	s -> frame_code		8052048	0					
ANR	8052175	Identifier	s		8052048	0					
ANR	8052176	Identifier	frame_code		8052048	1					
ANR	8052177	PrimaryExpression	0x60		8052048	1					
ANR	8052178	CompoundStatement		57:12:763:794	8052048	1					
ANR	8052179	IdentifierDeclStatement	"int csum = get_bits ( bitbuf , 16 ) ;"	59:12:840:871	8052048	0	True				
ANR	8052180	IdentifierDecl	"csum = get_bits ( bitbuf , 16 )"		8052048	0					
ANR	8052181	IdentifierDeclType	int		8052048	0					
ANR	8052182	Identifier	csum		8052048	1					
ANR	8052183	AssignmentExpression	"csum = get_bits ( bitbuf , 16 )"		8052048	2		=			
ANR	8052184	Identifier	csum		8052048	0					
ANR	8052185	CallExpression	"get_bits ( bitbuf , 16 )"		8052048	1					
ANR	8052186	Callee	get_bits		8052048	0					
ANR	8052187	Identifier	get_bits		8052048	0					
ANR	8052188	ArgumentList	bitbuf		8052048	1					
ANR	8052189	Argument	bitbuf		8052048	0					
ANR	8052190	Identifier	bitbuf		8052048	0					
ANR	8052191	Argument	16		8052048	1					
ANR	8052192	PrimaryExpression	16		8052048	0					
ANR	8052193	ExpressionStatement	"csum = ff_svq1_packet_checksum ( bitbuf -> buffer , bitbuf -> size_in_bits >> 3 , csum )"	63:12:888:1055	8052048	1	True				
ANR	8052194	AssignmentExpression	"csum = ff_svq1_packet_checksum ( bitbuf -> buffer , bitbuf -> size_in_bits >> 3 , csum )"		8052048	0		=			
ANR	8052195	Identifier	csum		8052048	0					
ANR	8052196	CallExpression	"ff_svq1_packet_checksum ( bitbuf -> buffer , bitbuf -> size_in_bits >> 3 , csum )"		8052048	1					
ANR	8052197	Callee	ff_svq1_packet_checksum		8052048	0					
ANR	8052198	Identifier	ff_svq1_packet_checksum		8052048	0					
ANR	8052199	ArgumentList	bitbuf -> buffer		8052048	1					
ANR	8052200	Argument	bitbuf -> buffer		8052048	0					
ANR	8052201	PtrMemberAccess	bitbuf -> buffer		8052048	0					
ANR	8052202	Identifier	bitbuf		8052048	0					
ANR	8052203	Identifier	buffer		8052048	1					
ANR	8052204	Argument	bitbuf -> size_in_bits >> 3		8052048	1					
ANR	8052205	ShiftExpression	bitbuf -> size_in_bits >> 3		8052048	0		>>			
ANR	8052206	PtrMemberAccess	bitbuf -> size_in_bits		8052048	0					
ANR	8052207	Identifier	bitbuf		8052048	0					
ANR	8052208	Identifier	size_in_bits		8052048	1					
ANR	8052209	PrimaryExpression	3		8052048	1					
ANR	8052210	Argument	csum		8052048	2					
ANR	8052211	Identifier	csum		8052048	0					
ANR	8052212	ExpressionStatement	"av_dlog ( avctx , ""%s checksum (%02x) for packet data\\n"" , ( csum == 0 ) ? ""correct"" : ""incorrect"" , csum )"	71:12:1072:1192	8052048	2	True				
ANR	8052213	CallExpression	"av_dlog ( avctx , ""%s checksum (%02x) for packet data\\n"" , ( csum == 0 ) ? ""correct"" : ""incorrect"" , csum )"		8052048	0					
ANR	8052214	Callee	av_dlog		8052048	0					
ANR	8052215	Identifier	av_dlog		8052048	0					
ANR	8052216	ArgumentList	avctx		8052048	1					
ANR	8052217	Argument	avctx		8052048	0					
ANR	8052218	Identifier	avctx		8052048	0					
ANR	8052219	Argument	"""%s checksum (%02x) for packet data\\n"""		8052048	1					
ANR	8052220	PrimaryExpression	"""%s checksum (%02x) for packet data\\n"""		8052048	0					
ANR	8052221	Argument	"( csum == 0 ) ? ""correct"" : ""incorrect"""		8052048	2					
ANR	8052222	ConditionalExpression	"( csum == 0 ) ? ""correct"" : ""incorrect"""		8052048	0					
ANR	8052223	Condition	csum == 0		8052048	0					
ANR	8052224	EqualityExpression	csum == 0		8052048	0		==			
ANR	8052225	Identifier	csum		8052048	0					
ANR	8052226	PrimaryExpression	0		8052048	1					
ANR	8052227	PrimaryExpression	"""correct"""		8052048	1					
ANR	8052228	PrimaryExpression	"""incorrect"""		8052048	2					
ANR	8052229	Argument	csum		8052048	3					
ANR	8052230	Identifier	csum		8052048	0					
ANR	8052231	IfStatement	if ( ( s -> frame_code ^ 0x10 ) >= 0x50 )		8052048	1					
ANR	8052232	Condition	( s -> frame_code ^ 0x10 ) >= 0x50	79:12:1220:1249	8052048	0	True				
ANR	8052233	RelationalExpression	( s -> frame_code ^ 0x10 ) >= 0x50		8052048	0		>=			
ANR	8052234	ExclusiveOrExpression	s -> frame_code ^ 0x10		8052048	0		^			
ANR	8052235	PtrMemberAccess	s -> frame_code		8052048	0					
ANR	8052236	Identifier	s		8052048	0					
ANR	8052237	Identifier	frame_code		8052048	1					
ANR	8052238	PrimaryExpression	0x10		8052048	1					
ANR	8052239	PrimaryExpression	0x50		8052048	1					
ANR	8052240	CompoundStatement		79:12:1190:1206	8052048	1					
ANR	8052241	IdentifierDeclStatement	uint8_t msg [ 256 ] ;	81:12:1267:1283	8052048	0	True				
ANR	8052242	IdentifierDecl	msg [ 256 ]		8052048	0					
ANR	8052243	IdentifierDeclType	uint8_t [ 256 ]		8052048	0					
ANR	8052244	Identifier	msg		8052048	1					
ANR	8052245	PrimaryExpression	256		8052048	2					
ANR	8052246	ExpressionStatement	"svq1_parse_string ( bitbuf , msg )"	85:12:1300:1330	8052048	1	True				
ANR	8052247	CallExpression	"svq1_parse_string ( bitbuf , msg )"		8052048	0					
ANR	8052248	Callee	svq1_parse_string		8052048	0					
ANR	8052249	Identifier	svq1_parse_string		8052048	0					
ANR	8052250	ArgumentList	bitbuf		8052048	1					
ANR	8052251	Argument	bitbuf		8052048	0					
ANR	8052252	Identifier	bitbuf		8052048	0					
ANR	8052253	Argument	msg		8052048	1					
ANR	8052254	Identifier	msg		8052048	0					
ANR	8052255	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""embedded message:\\n%s\\n"" , ( char * ) msg )"	89:12:1347:1433	8052048	2	True				
ANR	8052256	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""embedded message:\\n%s\\n"" , ( char * ) msg )"		8052048	0					
ANR	8052257	Callee	av_log		8052048	0					
ANR	8052258	Identifier	av_log		8052048	0					
ANR	8052259	ArgumentList	avctx		8052048	1					
ANR	8052260	Argument	avctx		8052048	0					
ANR	8052261	Identifier	avctx		8052048	0					
ANR	8052262	Argument	AV_LOG_INFO		8052048	1					
ANR	8052263	Identifier	AV_LOG_INFO		8052048	0					
ANR	8052264	Argument	"""embedded message:\\n%s\\n"""		8052048	2					
ANR	8052265	PrimaryExpression	"""embedded message:\\n%s\\n"""		8052048	0					
ANR	8052266	Argument	( char * ) msg		8052048	3					
ANR	8052267	CastExpression	( char * ) msg		8052048	0					
ANR	8052268	CastTarget	char *		8052048	0					
ANR	8052269	Identifier	msg		8052048	1					
ANR	8052270	ExpressionStatement	"skip_bits ( bitbuf , 2 )"	97:8:1457:1477	8052048	2	True				
ANR	8052271	CallExpression	"skip_bits ( bitbuf , 2 )"		8052048	0					
ANR	8052272	Callee	skip_bits		8052048	0					
ANR	8052273	Identifier	skip_bits		8052048	0					
ANR	8052274	ArgumentList	bitbuf		8052048	1					
ANR	8052275	Argument	bitbuf		8052048	0					
ANR	8052276	Identifier	bitbuf		8052048	0					
ANR	8052277	Argument	2		8052048	1					
ANR	8052278	PrimaryExpression	2		8052048	0					
ANR	8052279	ExpressionStatement	"skip_bits ( bitbuf , 2 )"	99:8:1488:1508	8052048	3	True				
ANR	8052280	CallExpression	"skip_bits ( bitbuf , 2 )"		8052048	0					
ANR	8052281	Callee	skip_bits		8052048	0					
ANR	8052282	Identifier	skip_bits		8052048	0					
ANR	8052283	ArgumentList	bitbuf		8052048	1					
ANR	8052284	Argument	bitbuf		8052048	0					
ANR	8052285	Identifier	bitbuf		8052048	0					
ANR	8052286	Argument	2		8052048	1					
ANR	8052287	PrimaryExpression	2		8052048	0					
ANR	8052288	ExpressionStatement	skip_bits1 ( bitbuf )	101:8:1519:1537	8052048	4	True				
ANR	8052289	CallExpression	skip_bits1 ( bitbuf )		8052048	0					
ANR	8052290	Callee	skip_bits1		8052048	0					
ANR	8052291	Identifier	skip_bits1		8052048	0					
ANR	8052292	ArgumentList	bitbuf		8052048	1					
ANR	8052293	Argument	bitbuf		8052048	0					
ANR	8052294	Identifier	bitbuf		8052048	0					
ANR	8052295	ExpressionStatement	"frame_size_code = get_bits ( bitbuf , 3 )"	107:8:1581:1618	8052048	5	True				
ANR	8052296	AssignmentExpression	"frame_size_code = get_bits ( bitbuf , 3 )"		8052048	0		=			
ANR	8052297	Identifier	frame_size_code		8052048	0					
ANR	8052298	CallExpression	"get_bits ( bitbuf , 3 )"		8052048	1					
ANR	8052299	Callee	get_bits		8052048	0					
ANR	8052300	Identifier	get_bits		8052048	0					
ANR	8052301	ArgumentList	bitbuf		8052048	1					
ANR	8052302	Argument	bitbuf		8052048	0					
ANR	8052303	Identifier	bitbuf		8052048	0					
ANR	8052304	Argument	3		8052048	1					
ANR	8052305	PrimaryExpression	3		8052048	0					
ANR	8052306	IfStatement	if ( frame_size_code == 7 )		8052048	6					
ANR	8052307	Condition	frame_size_code == 7	111:12:1635:1654	8052048	0	True				
ANR	8052308	EqualityExpression	frame_size_code == 7		8052048	0		==			
ANR	8052309	Identifier	frame_size_code		8052048	0					
ANR	8052310	PrimaryExpression	7		8052048	1					
ANR	8052311	CompoundStatement		109:34:1580:1580	8052048	1					
ANR	8052312	ExpressionStatement	"width = get_bits ( bitbuf , 12 )"	115:12:1725:1754	8052048	0	True				
ANR	8052313	AssignmentExpression	"width = get_bits ( bitbuf , 12 )"		8052048	0		=			
ANR	8052314	Identifier	width		8052048	0					
ANR	8052315	CallExpression	"get_bits ( bitbuf , 12 )"		8052048	1					
ANR	8052316	Callee	get_bits		8052048	0					
ANR	8052317	Identifier	get_bits		8052048	0					
ANR	8052318	ArgumentList	bitbuf		8052048	1					
ANR	8052319	Argument	bitbuf		8052048	0					
ANR	8052320	Identifier	bitbuf		8052048	0					
ANR	8052321	Argument	12		8052048	1					
ANR	8052322	PrimaryExpression	12		8052048	0					
ANR	8052323	ExpressionStatement	"height = get_bits ( bitbuf , 12 )"	117:12:1769:1798	8052048	1	True				
ANR	8052324	AssignmentExpression	"height = get_bits ( bitbuf , 12 )"		8052048	0		=			
ANR	8052325	Identifier	height		8052048	0					
ANR	8052326	CallExpression	"get_bits ( bitbuf , 12 )"		8052048	1					
ANR	8052327	Callee	get_bits		8052048	0					
ANR	8052328	Identifier	get_bits		8052048	0					
ANR	8052329	ArgumentList	bitbuf		8052048	1					
ANR	8052330	Argument	bitbuf		8052048	0					
ANR	8052331	Identifier	bitbuf		8052048	0					
ANR	8052332	Argument	12		8052048	1					
ANR	8052333	PrimaryExpression	12		8052048	0					
ANR	8052334	IfStatement	if ( ! width || ! height )		8052048	2					
ANR	8052335	Condition	! width || ! height	121:16:1819:1835	8052048	0	True				
ANR	8052336	OrExpression	! width || ! height		8052048	0		||			
ANR	8052337	UnaryOperationExpression	! width		8052048	0					
ANR	8052338	UnaryOperator	!		8052048	0					
ANR	8052339	Identifier	width		8052048	1					
ANR	8052340	UnaryOperationExpression	! height		8052048	1					
ANR	8052341	UnaryOperator	!		8052048	0					
ANR	8052342	Identifier	height		8052048	1					
ANR	8052343	ReturnStatement	return AVERROR_INVALIDDATA ;	123:16:1855:1881	8052048	1	True				
ANR	8052344	Identifier	AVERROR_INVALIDDATA		8052048	0					
ANR	8052345	ElseStatement	else		8052048	0					
ANR	8052346	CompoundStatement		123:15:1822:1822	8052048	0					
ANR	8052347	ExpressionStatement	width = ff_svq1_frame_size_table [ frame_size_code ] [ 0 ]	129:12:1962:2015	8052048	0	True				
ANR	8052348	AssignmentExpression	width = ff_svq1_frame_size_table [ frame_size_code ] [ 0 ]		8052048	0		=			
ANR	8052349	Identifier	width		8052048	0					
ANR	8052350	ArrayIndexing	ff_svq1_frame_size_table [ frame_size_code ] [ 0 ]		8052048	1					
ANR	8052351	ArrayIndexing	ff_svq1_frame_size_table [ frame_size_code ]		8052048	0					
ANR	8052352	Identifier	ff_svq1_frame_size_table		8052048	0					
ANR	8052353	Identifier	frame_size_code		8052048	1					
ANR	8052354	PrimaryExpression	0		8052048	1					
ANR	8052355	ExpressionStatement	height = ff_svq1_frame_size_table [ frame_size_code ] [ 1 ]	131:12:2030:2083	8052048	1	True				
ANR	8052356	AssignmentExpression	height = ff_svq1_frame_size_table [ frame_size_code ] [ 1 ]		8052048	0		=			
ANR	8052357	Identifier	height		8052048	0					
ANR	8052358	ArrayIndexing	ff_svq1_frame_size_table [ frame_size_code ] [ 1 ]		8052048	1					
ANR	8052359	ArrayIndexing	ff_svq1_frame_size_table [ frame_size_code ]		8052048	0					
ANR	8052360	Identifier	ff_svq1_frame_size_table		8052048	0					
ANR	8052361	Identifier	frame_size_code		8052048	1					
ANR	8052362	PrimaryExpression	1		8052048	1					
ANR	8052363	IfStatement	if ( get_bits1 ( bitbuf ) )		8052048	9					
ANR	8052364	Condition	get_bits1 ( bitbuf )	141:8:2140:2156	8052048	0	True				
ANR	8052365	CallExpression	get_bits1 ( bitbuf )		8052048	0					
ANR	8052366	Callee	get_bits1		8052048	0					
ANR	8052367	Identifier	get_bits1		8052048	0					
ANR	8052368	ArgumentList	bitbuf		8052048	1					
ANR	8052369	Argument	bitbuf		8052048	0					
ANR	8052370	Identifier	bitbuf		8052048	0					
ANR	8052371	CompoundStatement		139:27:2082:2082	8052048	1					
ANR	8052372	ExpressionStatement	skip_bits1 ( bitbuf )	143:8:2170:2188	8052048	0	True				
ANR	8052373	CallExpression	skip_bits1 ( bitbuf )		8052048	0					
ANR	8052374	Callee	skip_bits1		8052048	0					
ANR	8052375	Identifier	skip_bits1		8052048	0					
ANR	8052376	ArgumentList	bitbuf		8052048	1					
ANR	8052377	Argument	bitbuf		8052048	0					
ANR	8052378	Identifier	bitbuf		8052048	0					
ANR	8052379	ExpressionStatement	skip_bits1 ( bitbuf )	145:8:2235:2253	8052048	1	True				
ANR	8052380	CallExpression	skip_bits1 ( bitbuf )		8052048	0					
ANR	8052381	Callee	skip_bits1		8052048	0					
ANR	8052382	Identifier	skip_bits1		8052048	0					
ANR	8052383	ArgumentList	bitbuf		8052048	1					
ANR	8052384	Argument	bitbuf		8052048	0					
ANR	8052385	Identifier	bitbuf		8052048	0					
ANR	8052386	IfStatement	"if ( get_bits ( bitbuf , 2 ) != 0 )"		8052048	2					
ANR	8052387	Condition	"get_bits ( bitbuf , 2 ) != 0"	149:12:2323:2346	8052048	0	True				
ANR	8052388	EqualityExpression	"get_bits ( bitbuf , 2 ) != 0"		8052048	0		!=			
ANR	8052389	CallExpression	"get_bits ( bitbuf , 2 )"		8052048	0					
ANR	8052390	Callee	get_bits		8052048	0					
ANR	8052391	Identifier	get_bits		8052048	0					
ANR	8052392	ArgumentList	bitbuf		8052048	1					
ANR	8052393	Argument	bitbuf		8052048	0					
ANR	8052394	Identifier	bitbuf		8052048	0					
ANR	8052395	Argument	2		8052048	1					
ANR	8052396	PrimaryExpression	2		8052048	0					
ANR	8052397	PrimaryExpression	0		8052048	1					
ANR	8052398	ReturnStatement	return AVERROR_INVALIDDATA ;	151:12:2362:2388	8052048	1	True				
ANR	8052399	Identifier	AVERROR_INVALIDDATA		8052048	0					
ANR	8052400	IfStatement	if ( get_bits1 ( bitbuf ) )		8052048	10					
ANR	8052401	Condition	get_bits1 ( bitbuf )	157:8:2408:2424	8052048	0	True				
ANR	8052402	CallExpression	get_bits1 ( bitbuf )		8052048	0					
ANR	8052403	Callee	get_bits1		8052048	0					
ANR	8052404	Identifier	get_bits1		8052048	0					
ANR	8052405	ArgumentList	bitbuf		8052048	1					
ANR	8052406	Argument	bitbuf		8052048	0					
ANR	8052407	Identifier	bitbuf		8052048	0					
ANR	8052408	CompoundStatement		155:27:2350:2350	8052048	1					
ANR	8052409	ExpressionStatement	skip_bits1 ( bitbuf )	159:8:2438:2456	8052048	0	True				
ANR	8052410	CallExpression	skip_bits1 ( bitbuf )		8052048	0					
ANR	8052411	Callee	skip_bits1		8052048	0					
ANR	8052412	Identifier	skip_bits1		8052048	0					
ANR	8052413	ArgumentList	bitbuf		8052048	1					
ANR	8052414	Argument	bitbuf		8052048	0					
ANR	8052415	Identifier	bitbuf		8052048	0					
ANR	8052416	ExpressionStatement	"skip_bits ( bitbuf , 4 )"	161:8:2467:2487	8052048	1	True				
ANR	8052417	CallExpression	"skip_bits ( bitbuf , 4 )"		8052048	0					
ANR	8052418	Callee	skip_bits		8052048	0					
ANR	8052419	Identifier	skip_bits		8052048	0					
ANR	8052420	ArgumentList	bitbuf		8052048	1					
ANR	8052421	Argument	bitbuf		8052048	0					
ANR	8052422	Identifier	bitbuf		8052048	0					
ANR	8052423	Argument	4		8052048	1					
ANR	8052424	PrimaryExpression	4		8052048	0					
ANR	8052425	ExpressionStatement	skip_bits1 ( bitbuf )	163:8:2498:2516	8052048	2	True				
ANR	8052426	CallExpression	skip_bits1 ( bitbuf )		8052048	0					
ANR	8052427	Callee	skip_bits1		8052048	0					
ANR	8052428	Identifier	skip_bits1		8052048	0					
ANR	8052429	ArgumentList	bitbuf		8052048	1					
ANR	8052430	Argument	bitbuf		8052048	0					
ANR	8052431	Identifier	bitbuf		8052048	0					
ANR	8052432	ExpressionStatement	"skip_bits ( bitbuf , 2 )"	165:8:2527:2547	8052048	3	True				
ANR	8052433	CallExpression	"skip_bits ( bitbuf , 2 )"		8052048	0					
ANR	8052434	Callee	skip_bits		8052048	0					
ANR	8052435	Identifier	skip_bits		8052048	0					
ANR	8052436	ArgumentList	bitbuf		8052048	1					
ANR	8052437	Argument	bitbuf		8052048	0					
ANR	8052438	Identifier	bitbuf		8052048	0					
ANR	8052439	Argument	2		8052048	1					
ANR	8052440	PrimaryExpression	2		8052048	0					
ANR	8052441	IfStatement	if ( skip_1stop_8data_bits ( bitbuf ) < 0 )		8052048	4					
ANR	8052442	Condition	skip_1stop_8data_bits ( bitbuf ) < 0	169:12:2564:2596	8052048	0	True				
ANR	8052443	RelationalExpression	skip_1stop_8data_bits ( bitbuf ) < 0		8052048	0		<			
ANR	8052444	CallExpression	skip_1stop_8data_bits ( bitbuf )		8052048	0					
ANR	8052445	Callee	skip_1stop_8data_bits		8052048	0					
ANR	8052446	Identifier	skip_1stop_8data_bits		8052048	0					
ANR	8052447	ArgumentList	bitbuf		8052048	1					
ANR	8052448	Argument	bitbuf		8052048	0					
ANR	8052449	Identifier	bitbuf		8052048	0					
ANR	8052450	PrimaryExpression	0		8052048	1					
ANR	8052451	ReturnStatement	return AVERROR_INVALIDDATA ;	171:12:2612:2638	8052048	1	True				
ANR	8052452	Identifier	AVERROR_INVALIDDATA		8052048	0					
ANR	8052453	ExpressionStatement	s -> width = width	177:4:2654:2671	8052048	11	True				
ANR	8052454	AssignmentExpression	s -> width = width		8052048	0		=			
ANR	8052455	PtrMemberAccess	s -> width		8052048	0					
ANR	8052456	Identifier	s		8052048	0					
ANR	8052457	Identifier	width		8052048	1					
ANR	8052458	Identifier	width		8052048	1					
ANR	8052459	ExpressionStatement	s -> height = height	179:4:2678:2696	8052048	12	True				
ANR	8052460	AssignmentExpression	s -> height = height		8052048	0		=			
ANR	8052461	PtrMemberAccess	s -> height		8052048	0					
ANR	8052462	Identifier	s		8052048	0					
ANR	8052463	Identifier	height		8052048	1					
ANR	8052464	Identifier	height		8052048	1					
ANR	8052465	ReturnStatement	return 0 ;	181:4:2703:2711	8052048	13	True				
ANR	8052466	PrimaryExpression	0		8052048	0					
ANR	8052467	ReturnType	static int		8052048	1					
ANR	8052468	Identifier	svq1_decode_frame_header		8052048	2					
ANR	8052469	ParameterList	"AVCodecContext * avctx , AVFrame * frame"		8052048	3					
ANR	8052470	Parameter	AVCodecContext * avctx	1:36:36:56	8052048	0	True				
ANR	8052471	ParameterType	AVCodecContext *		8052048	0					
ANR	8052472	Identifier	avctx		8052048	1					
ANR	8052473	Parameter	AVFrame * frame	1:59:59:72	8052048	1	True				
ANR	8052474	ParameterType	AVFrame *		8052048	0					
ANR	8052475	Identifier	frame		8052048	1					
ANR	8052476	CFGEntryNode	ENTRY		8052048		True				
ANR	8052477	CFGExitNode	EXIT		8052048		True				
ANR	8052478	Symbol	msg		8052048						
ANR	8052479	Symbol	* frame_size_code		8052048						
ANR	8052480	Symbol	AV_PICTURE_TYPE_P		8052048						
ANR	8052481	Symbol	* frame		8052048						
ANR	8052482	Symbol	get_bits		8052048						
ANR	8052483	Symbol	frame -> pict_type		8052048						
ANR	8052484	Symbol	* bitbuf		8052048						
ANR	8052485	Symbol	s -> nonref		8052048						
ANR	8052486	Symbol	frame_size_code		8052048						
ANR	8052487	Symbol	skip_1stop_8data_bits		8052048						
ANR	8052488	Symbol	s -> width		8052048						
ANR	8052489	Symbol	AV_PICTURE_TYPE_I		8052048						
ANR	8052490	Symbol	bitbuf -> buffer		8052048						
ANR	8052491	Symbol	avctx		8052048						
ANR	8052492	Symbol	* * ff_svq1_frame_size_table		8052048						
ANR	8052493	Symbol	height		8052048						
ANR	8052494	Symbol	AV_LOG_ERROR		8052048						
ANR	8052495	Symbol	bitbuf -> size_in_bits		8052048						
ANR	8052496	Symbol	s -> frame_code		8052048						
ANR	8052497	Symbol	csum		8052048						
ANR	8052498	Symbol	ff_svq1_frame_size_table		8052048						
ANR	8052499	Symbol	get_bits1		8052048						
ANR	8052500	Symbol	avctx -> priv_data		8052048						
ANR	8052501	Symbol	& s -> gb		8052048						
ANR	8052502	Symbol	* avctx		8052048						
ANR	8052503	Symbol	s		8052048						
ANR	8052504	Symbol	s -> height		8052048						
ANR	8052505	Symbol	ff_svq1_packet_checksum		8052048						
ANR	8052506	Symbol	width		8052048						
ANR	8052507	Symbol	AVERROR_INVALIDDATA		8052048						
ANR	8052508	Symbol	* ff_svq1_frame_size_table		8052048						
ANR	8052509	Symbol	* s		8052048						
ANR	8052510	Symbol	bitbuf		8052048						
ANR	8052511	Symbol	AV_LOG_INFO		8052048						
ANR	8052512	Symbol	* * frame_size_code		8052048						
ANR	8052513	Symbol	frame		8052048						
