command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4821085	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imc_get_coeffs_1.c								
ANR	4821086	Function	imc_get_coeffs	1:0:0:954							
ANR	4821087	FunctionDef	"imc_get_coeffs (AVCodecContext * avctx , IMCContext * q , IMCChannel * chctx)"		4821086	0					
ANR	4821088	CompoundStatement		5:0:113:954	4821086	0					
ANR	4821089	IdentifierDeclStatement	"int i , j , cw_len , cw ;"	7:4:120:140	4821086	0	True				
ANR	4821090	IdentifierDecl	i		4821086	0					
ANR	4821091	IdentifierDeclType	int		4821086	0					
ANR	4821092	Identifier	i		4821086	1					
ANR	4821093	IdentifierDecl	j		4821086	1					
ANR	4821094	IdentifierDeclType	int		4821086	0					
ANR	4821095	Identifier	j		4821086	1					
ANR	4821096	IdentifierDecl	cw_len		4821086	2					
ANR	4821097	IdentifierDeclType	int		4821086	0					
ANR	4821098	Identifier	cw_len		4821086	1					
ANR	4821099	IdentifierDecl	cw		4821086	3					
ANR	4821100	IdentifierDeclType	int		4821086	0					
ANR	4821101	Identifier	cw		4821086	1					
ANR	4821102	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4821086	1					
ANR	4821103	ForInit	i = 0 ;	11:9:154:159	4821086	0	True				
ANR	4821104	AssignmentExpression	i = 0		4821086	0		=			
ANR	4821105	Identifier	i		4821086	0					
ANR	4821106	PrimaryExpression	0		4821086	1					
ANR	4821107	Condition	i < BANDS	11:16:161:169	4821086	1	True				
ANR	4821108	RelationalExpression	i < BANDS		4821086	0		<			
ANR	4821109	Identifier	i		4821086	0					
ANR	4821110	Identifier	BANDS		4821086	1					
ANR	4821111	PostIncDecOperationExpression	i ++	11:27:172:174	4821086	2	True				
ANR	4821112	Identifier	i		4821086	0					
ANR	4821113	IncDec	++		4821086	1					
ANR	4821114	CompoundStatement		7:32:63:63	4821086	3					
ANR	4821115	IfStatement	if ( ! chctx -> sumLenArr [ i ] )		4821086	0					
ANR	4821116	Condition	! chctx -> sumLenArr [ i ]	13:12:192:211	4821086	0	True				
ANR	4821117	UnaryOperationExpression	! chctx -> sumLenArr [ i ]		4821086	0					
ANR	4821118	UnaryOperator	!		4821086	0					
ANR	4821119	ArrayIndexing	chctx -> sumLenArr [ i ]		4821086	1					
ANR	4821120	PtrMemberAccess	chctx -> sumLenArr		4821086	0					
ANR	4821121	Identifier	chctx		4821086	0					
ANR	4821122	Identifier	sumLenArr		4821086	1					
ANR	4821123	Identifier	i		4821086	1					
ANR	4821124	ContinueStatement	continue ;	15:12:227:235	4821086	1	True				
ANR	4821125	IfStatement	if ( chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ] )		4821086	1					
ANR	4821126	Condition	chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ]	17:12:250:295	4821086	0	True				
ANR	4821127	OrExpression	chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ]		4821086	0		||			
ANR	4821128	ArrayIndexing	chctx -> bandFlagsBuf [ i ]		4821086	0					
ANR	4821129	PtrMemberAccess	chctx -> bandFlagsBuf		4821086	0					
ANR	4821130	Identifier	chctx		4821086	0					
ANR	4821131	Identifier	bandFlagsBuf		4821086	1					
ANR	4821132	Identifier	i		4821086	1					
ANR	4821133	ArrayIndexing	chctx -> bandWidthT [ i ]		4821086	1					
ANR	4821134	PtrMemberAccess	chctx -> bandWidthT		4821086	0					
ANR	4821135	Identifier	chctx		4821086	0					
ANR	4821136	Identifier	bandWidthT		4821086	1					
ANR	4821137	Identifier	i		4821086	1					
ANR	4821138	CompoundStatement		13:60:184:184	4821086	1					
ANR	4821139	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4821086	0					
ANR	4821140	ForInit	j = band_tab [ i ] ;	19:17:318:333	4821086	0	True				
ANR	4821141	AssignmentExpression	j = band_tab [ i ]		4821086	0		=			
ANR	4821142	Identifier	j		4821086	0					
ANR	4821143	ArrayIndexing	band_tab [ i ]		4821086	1					
ANR	4821144	Identifier	band_tab		4821086	0					
ANR	4821145	Identifier	i		4821086	1					
ANR	4821146	Condition	j < band_tab [ i + 1 ]	19:34:335:353	4821086	1	True				
ANR	4821147	RelationalExpression	j < band_tab [ i + 1 ]		4821086	0		<			
ANR	4821148	Identifier	j		4821086	0					
ANR	4821149	ArrayIndexing	band_tab [ i + 1 ]		4821086	1					
ANR	4821150	Identifier	band_tab		4821086	0					
ANR	4821151	AdditiveExpression	i + 1		4821086	1		+			
ANR	4821152	Identifier	i		4821086	0					
ANR	4821153	PrimaryExpression	1		4821086	1					
ANR	4821154	PostIncDecOperationExpression	j ++	19:55:356:358	4821086	2	True				
ANR	4821155	Identifier	j		4821086	0					
ANR	4821156	IncDec	++		4821086	1					
ANR	4821157	CompoundStatement		15:60:247:247	4821086	3					
ANR	4821158	ExpressionStatement	cw_len = chctx -> CWlengthT [ j ]	21:16:380:408	4821086	0	True				
ANR	4821159	AssignmentExpression	cw_len = chctx -> CWlengthT [ j ]		4821086	0		=			
ANR	4821160	Identifier	cw_len		4821086	0					
ANR	4821161	ArrayIndexing	chctx -> CWlengthT [ j ]		4821086	1					
ANR	4821162	PtrMemberAccess	chctx -> CWlengthT		4821086	0					
ANR	4821163	Identifier	chctx		4821086	0					
ANR	4821164	Identifier	CWlengthT		4821086	1					
ANR	4821165	Identifier	j		4821086	1					
ANR	4821166	ExpressionStatement	cw = 0	23:16:427:433	4821086	1	True				
ANR	4821167	AssignmentExpression	cw = 0		4821086	0		=			
ANR	4821168	Identifier	cw		4821086	0					
ANR	4821169	PrimaryExpression	0		4821086	1					
ANR	4821170	IfStatement	if ( cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] ) )		4821086	2					
ANR	4821171	Condition	cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] )	27:20:458:516	4821086	0	True				
ANR	4821172	AndExpression	cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] )		4821086	0		&&			
ANR	4821173	Identifier	cw_len		4821086	0					
ANR	4821174	OrExpression	! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ]		4821086	1		||			
ANR	4821175	UnaryOperationExpression	! chctx -> bandFlagsBuf [ i ]		4821086	0					
ANR	4821176	UnaryOperator	!		4821086	0					
ANR	4821177	ArrayIndexing	chctx -> bandFlagsBuf [ i ]		4821086	1					
ANR	4821178	PtrMemberAccess	chctx -> bandFlagsBuf		4821086	0					
ANR	4821179	Identifier	chctx		4821086	0					
ANR	4821180	Identifier	bandFlagsBuf		4821086	1					
ANR	4821181	Identifier	i		4821086	1					
ANR	4821182	UnaryOperationExpression	! chctx -> skipFlags [ j ]		4821086	1					
ANR	4821183	UnaryOperator	!		4821086	0					
ANR	4821184	ArrayIndexing	chctx -> skipFlags [ j ]		4821086	1					
ANR	4821185	PtrMemberAccess	chctx -> skipFlags		4821086	0					
ANR	4821186	Identifier	chctx		4821086	0					
ANR	4821187	Identifier	skipFlags		4821086	1					
ANR	4821188	Identifier	j		4821086	1					
ANR	4821189	CompoundStatement		23:81:405:405	4821086	1					
ANR	4821190	IfStatement	if ( get_bits_count ( & q -> gb ) + cw_len > 512 )		4821086	0					
ANR	4821191	Condition	get_bits_count ( & q -> gb ) + cw_len > 512	29:24:546:582	4821086	0	True				
ANR	4821192	RelationalExpression	get_bits_count ( & q -> gb ) + cw_len > 512		4821086	0		>			
ANR	4821193	AdditiveExpression	get_bits_count ( & q -> gb ) + cw_len		4821086	0		+			
ANR	4821194	CallExpression	get_bits_count ( & q -> gb )		4821086	0					
ANR	4821195	Callee	get_bits_count		4821086	0					
ANR	4821196	Identifier	get_bits_count		4821086	0					
ANR	4821197	ArgumentList	& q -> gb		4821086	1					
ANR	4821198	Argument	& q -> gb		4821086	0					
ANR	4821199	UnaryOperationExpression	& q -> gb		4821086	0					
ANR	4821200	UnaryOperator	&		4821086	0					
ANR	4821201	PtrMemberAccess	q -> gb		4821086	1					
ANR	4821202	Identifier	q		4821086	0					
ANR	4821203	Identifier	gb		4821086	1					
ANR	4821204	Identifier	cw_len		4821086	1					
ANR	4821205	PrimaryExpression	512		4821086	1					
ANR	4821206	CompoundStatement		25:63:471:471	4821086	1					
ANR	4821207	Statement	av_log	31:24:612:617	4821086	0	True				
ANR	4821208	Statement	(	31:30:618:618	4821086	1	True				
ANR	4821209	Statement	avctx	31:31:619:623	4821086	2	True				
ANR	4821210	Statement	","	31:36:624:624	4821086	3	True				
ANR	4821211	Statement	AV_LOG_WARNING	31:38:626:639	4821086	4	True				
ANR	4821212	Statement	","	31:52:640:640	4821086	5	True				
ANR	4821213	Statement	"""Potential problem on band %i, coefficient %i"""	33:28:671:716	4821086	6	True				
ANR	4821214	Statement	""": cw_len=%i\\n"""	35:28:747:761	4821086	7	True				
ANR	4821215	Statement	","	35:43:762:762	4821086	8	True				
ANR	4821216	Statement	i	35:45:764:764	4821086	9	True				
ANR	4821217	Statement	","	35:46:765:765	4821086	10	True				
ANR	4821218	Statement	j	35:48:767:767	4821086	11	True				
ANR	4821219	Statement	","	35:49:768:768	4821086	12	True				
ANR	4821220	Statement	cw_len	35:51:770:775	4821086	13	True				
ANR	4821221	Statement	)	35:57:776:776	4821086	14	True				
ANR	4821222	ExpressionStatement		35:58:777:777	4821086	15	True				
ANR	4821223	ExpressionStatement	"cw = get_bits ( & q -> gb , cw_len )"	41:20:825:854	4821086	1	True				
ANR	4821224	AssignmentExpression	"cw = get_bits ( & q -> gb , cw_len )"		4821086	0		=			
ANR	4821225	Identifier	cw		4821086	0					
ANR	4821226	CallExpression	"get_bits ( & q -> gb , cw_len )"		4821086	1					
ANR	4821227	Callee	get_bits		4821086	0					
ANR	4821228	Identifier	get_bits		4821086	0					
ANR	4821229	ArgumentList	& q -> gb		4821086	1					
ANR	4821230	Argument	& q -> gb		4821086	0					
ANR	4821231	UnaryOperationExpression	& q -> gb		4821086	0					
ANR	4821232	UnaryOperator	&		4821086	0					
ANR	4821233	PtrMemberAccess	q -> gb		4821086	1					
ANR	4821234	Identifier	q		4821086	0					
ANR	4821235	Identifier	gb		4821086	1					
ANR	4821236	Argument	cw_len		4821086	1					
ANR	4821237	Identifier	cw_len		4821086	0					
ANR	4821238	ExpressionStatement	chctx -> codewords [ j ] = cw	47:16:894:918	4821086	3	True				
ANR	4821239	AssignmentExpression	chctx -> codewords [ j ] = cw		4821086	0		=			
ANR	4821240	ArrayIndexing	chctx -> codewords [ j ]		4821086	0					
ANR	4821241	PtrMemberAccess	chctx -> codewords		4821086	0					
ANR	4821242	Identifier	chctx		4821086	0					
ANR	4821243	Identifier	codewords		4821086	1					
ANR	4821244	Identifier	j		4821086	1					
ANR	4821245	Identifier	cw		4821086	1					
ANR	4821246	ReturnType	static void		4821086	1					
ANR	4821247	Identifier	imc_get_coeffs		4821086	2					
ANR	4821248	ParameterList	"AVCodecContext * avctx , IMCContext * q , IMCChannel * chctx"		4821086	3					
ANR	4821249	Parameter	AVCodecContext * avctx	1:27:27:47	4821086	0	True				
ANR	4821250	ParameterType	AVCodecContext *		4821086	0					
ANR	4821251	Identifier	avctx		4821086	1					
ANR	4821252	Parameter	IMCContext * q	3:27:78:90	4821086	1	True				
ANR	4821253	ParameterType	IMCContext *		4821086	0					
ANR	4821254	Identifier	q		4821086	1					
ANR	4821255	Parameter	IMCChannel * chctx	3:42:93:109	4821086	2	True				
ANR	4821256	ParameterType	IMCChannel *		4821086	0					
ANR	4821257	Identifier	chctx		4821086	1					
ANR	4821258	CFGEntryNode	ENTRY		4821086		True				
ANR	4821259	CFGExitNode	EXIT		4821086		True				
ANR	4821260	Symbol	chctx		4821086						
ANR	4821261	Symbol	* chctx -> codewords		4821086						
ANR	4821262	Symbol	chctx -> sumLenArr		4821086						
ANR	4821263	Symbol	chctx -> CWlengthT		4821086						
ANR	4821264	Symbol	get_bits		4821086						
ANR	4821265	Symbol	* chctx -> bandFlagsBuf		4821086						
ANR	4821266	Symbol	chctx -> skipFlags		4821086						
ANR	4821267	Symbol	* * chctx		4821086						
ANR	4821268	Symbol	band_tab		4821086						
ANR	4821269	Symbol	* chctx -> CWlengthT		4821086						
ANR	4821270	Symbol	avctx		4821086						
ANR	4821271	Symbol	* chctx -> bandWidthT		4821086						
ANR	4821272	Symbol	& q -> gb		4821086						
ANR	4821273	Symbol	* chctx -> sumLenArr		4821086						
ANR	4821274	Symbol	cw_len		4821086						
ANR	4821275	Symbol	chctx -> bandWidthT		4821086						
ANR	4821276	Symbol	chctx -> bandFlagsBuf		4821086						
ANR	4821277	Symbol	* chctx		4821086						
ANR	4821278	Symbol	i		4821086						
ANR	4821279	Symbol	j		4821086						
ANR	4821280	Symbol	* band_tab		4821086						
ANR	4821281	Symbol	chctx -> codewords		4821086						
ANR	4821282	Symbol	get_bits_count		4821086						
ANR	4821283	Symbol	q		4821086						
ANR	4821284	Symbol	* i		4821086						
ANR	4821285	Symbol	cw		4821086						
ANR	4821286	Symbol	* j		4821086						
ANR	4821287	Symbol	BANDS		4821086						
ANR	4821288	Symbol	* chctx -> skipFlags		4821086						
