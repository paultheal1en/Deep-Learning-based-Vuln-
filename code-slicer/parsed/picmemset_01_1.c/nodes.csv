command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6524071	File	/home/p4ultr4n/workplace/ReVeal/raw_code/picmemset_01_1.c								
ANR	6524072	Function	picmemset	1:0:0:948							
ANR	6524073	FunctionDef	"picmemset (PicContext * s , AVFrame * frame , int value , int run , int * x , int * y , int * plane , int bits_per_plane)"		6524072	0					
ANR	6524074	CompoundStatement		5:0:145:948	6524072	0					
ANR	6524075	IdentifierDeclStatement	uint8_t * d ;	7:4:152:162	6524072	0	True				
ANR	6524076	IdentifierDecl	* d		6524072	0					
ANR	6524077	IdentifierDeclType	uint8_t *		6524072	0					
ANR	6524078	Identifier	d		6524072	1					
ANR	6524079	IdentifierDeclStatement	int shift = * plane * bits_per_plane ;	9:4:169:204	6524072	1	True				
ANR	6524080	IdentifierDecl	shift = * plane * bits_per_plane		6524072	0					
ANR	6524081	IdentifierDeclType	int		6524072	0					
ANR	6524082	Identifier	shift		6524072	1					
ANR	6524083	AssignmentExpression	shift = * plane * bits_per_plane		6524072	2		=			
ANR	6524084	Identifier	shift		6524072	0					
ANR	6524085	MultiplicativeExpression	* plane * bits_per_plane		6524072	1		*			
ANR	6524086	UnaryOperationExpression	* plane		6524072	0					
ANR	6524087	UnaryOperator	*		6524072	0					
ANR	6524088	Identifier	plane		6524072	1					
ANR	6524089	Identifier	bits_per_plane		6524072	1					
ANR	6524090	IdentifierDeclStatement	int mask = ( ( 1 << bits_per_plane ) - 1 ) << shift ;	11:4:211:259	6524072	2	True				
ANR	6524091	IdentifierDecl	mask = ( ( 1 << bits_per_plane ) - 1 ) << shift		6524072	0					
ANR	6524092	IdentifierDeclType	int		6524072	0					
ANR	6524093	Identifier	mask		6524072	1					
ANR	6524094	AssignmentExpression	mask = ( ( 1 << bits_per_plane ) - 1 ) << shift		6524072	2		=			
ANR	6524095	Identifier	mask		6524072	0					
ANR	6524096	ShiftExpression	( ( 1 << bits_per_plane ) - 1 ) << shift		6524072	1		<<			
ANR	6524097	AdditiveExpression	( 1 << bits_per_plane ) - 1		6524072	0		-			
ANR	6524098	ShiftExpression	1 << bits_per_plane		6524072	0		<<			
ANR	6524099	PrimaryExpression	1		6524072	0					
ANR	6524100	Identifier	bits_per_plane		6524072	1					
ANR	6524101	PrimaryExpression	1		6524072	1					
ANR	6524102	Identifier	shift		6524072	1					
ANR	6524103	ExpressionStatement	value <<= shift	13:4:266:283	6524072	3	True				
ANR	6524104	AssignmentExpression	value <<= shift		6524072	0		<<=			
ANR	6524105	Identifier	value		6524072	0					
ANR	6524106	Identifier	shift		6524072	1					
ANR	6524107	WhileStatement	while ( run > 0 )		6524072	4					
ANR	6524108	Condition	run > 0	17:11:299:305	6524072	0	True				
ANR	6524109	RelationalExpression	run > 0		6524072	0		>			
ANR	6524110	Identifier	run		6524072	0					
ANR	6524111	PrimaryExpression	0		6524072	1					
ANR	6524112	CompoundStatement		15:8:173:178	6524072	1					
ANR	6524113	IdentifierDeclStatement	int j ;	19:8:319:324	6524072	0	True				
ANR	6524114	IdentifierDecl	j		6524072	0					
ANR	6524115	IdentifierDeclType	int		6524072	0					
ANR	6524116	Identifier	j		6524072	1					
ANR	6524117	ForStatement	for ( j = 8 - bits_per_plane ; j >= 0 ; j -= bits_per_plane )		6524072	1					
ANR	6524118	ForInit	j = 8 - bits_per_plane ;	21:13:340:360	6524072	0	True				
ANR	6524119	AssignmentExpression	j = 8 - bits_per_plane		6524072	0		=			
ANR	6524120	Identifier	j		6524072	0					
ANR	6524121	AdditiveExpression	8 - bits_per_plane		6524072	1		-			
ANR	6524122	PrimaryExpression	8		6524072	0					
ANR	6524123	Identifier	bits_per_plane		6524072	1					
ANR	6524124	Condition	j >= 0	21:35:362:367	6524072	1	True				
ANR	6524125	RelationalExpression	j >= 0		6524072	0		>=			
ANR	6524126	Identifier	j		6524072	0					
ANR	6524127	PrimaryExpression	0		6524072	1					
ANR	6524128	AssignmentExpression	j -= bits_per_plane	21:43:370:388	6524072	2	True	-=			
ANR	6524129	Identifier	j		6524072	0					
ANR	6524130	Identifier	bits_per_plane		6524072	1					
ANR	6524131	CompoundStatement		17:64:245:245	6524072	3					
ANR	6524132	ExpressionStatement	d = frame -> data [ 0 ] + * y * frame -> linesize [ 0 ]	23:12:406:450	6524072	0	True				
ANR	6524133	AssignmentExpression	d = frame -> data [ 0 ] + * y * frame -> linesize [ 0 ]		6524072	0		=			
ANR	6524134	Identifier	d		6524072	0					
ANR	6524135	AdditiveExpression	frame -> data [ 0 ] + * y * frame -> linesize [ 0 ]		6524072	1		+			
ANR	6524136	ArrayIndexing	frame -> data [ 0 ]		6524072	0					
ANR	6524137	PtrMemberAccess	frame -> data		6524072	0					
ANR	6524138	Identifier	frame		6524072	0					
ANR	6524139	Identifier	data		6524072	1					
ANR	6524140	PrimaryExpression	0		6524072	1					
ANR	6524141	MultiplicativeExpression	* y * frame -> linesize [ 0 ]		6524072	1		*			
ANR	6524142	UnaryOperationExpression	* y		6524072	0					
ANR	6524143	UnaryOperator	*		6524072	0					
ANR	6524144	Identifier	y		6524072	1					
ANR	6524145	ArrayIndexing	frame -> linesize [ 0 ]		6524072	1					
ANR	6524146	PtrMemberAccess	frame -> linesize		6524072	0					
ANR	6524147	Identifier	frame		6524072	0					
ANR	6524148	Identifier	linesize		6524072	1					
ANR	6524149	PrimaryExpression	0		6524072	1					
ANR	6524150	ExpressionStatement	d [ * x ] |= ( value >> j ) & mask	25:12:465:493	6524072	1	True				
ANR	6524151	AssignmentExpression	d [ * x ] |= ( value >> j ) & mask		6524072	0		|=			
ANR	6524152	ArrayIndexing	d [ * x ]		6524072	0					
ANR	6524153	Identifier	d		6524072	0					
ANR	6524154	UnaryOperationExpression	* x		6524072	1					
ANR	6524155	UnaryOperator	*		6524072	0					
ANR	6524156	Identifier	x		6524072	1					
ANR	6524157	BitAndExpression	( value >> j ) & mask		6524072	1		&			
ANR	6524158	ShiftExpression	value >> j		6524072	0		>>			
ANR	6524159	Identifier	value		6524072	0					
ANR	6524160	Identifier	j		6524072	1					
ANR	6524161	Identifier	mask		6524072	1					
ANR	6524162	ExpressionStatement	* x += 1	27:12:508:515	6524072	2	True				
ANR	6524163	AssignmentExpression	* x += 1		6524072	0		+=			
ANR	6524164	UnaryOperationExpression	* x		6524072	0					
ANR	6524165	UnaryOperator	*		6524072	0					
ANR	6524166	Identifier	x		6524072	1					
ANR	6524167	PrimaryExpression	1		6524072	1					
ANR	6524168	IfStatement	if ( * x == s -> width )		6524072	3					
ANR	6524169	Condition	* x == s -> width	29:16:534:547	6524072	0	True				
ANR	6524170	EqualityExpression	* x == s -> width		6524072	0		==			
ANR	6524171	UnaryOperationExpression	* x		6524072	0					
ANR	6524172	UnaryOperator	*		6524072	0					
ANR	6524173	Identifier	x		6524072	1					
ANR	6524174	PtrMemberAccess	s -> width		6524072	1					
ANR	6524175	Identifier	s		6524072	0					
ANR	6524176	Identifier	width		6524072	1					
ANR	6524177	CompoundStatement		25:32:404:404	6524072	1					
ANR	6524178	ExpressionStatement	* y -= 1	31:16:569:576	6524072	0	True				
ANR	6524179	AssignmentExpression	* y -= 1		6524072	0		-=			
ANR	6524180	UnaryOperationExpression	* y		6524072	0					
ANR	6524181	UnaryOperator	*		6524072	0					
ANR	6524182	Identifier	y		6524072	1					
ANR	6524183	PrimaryExpression	1		6524072	1					
ANR	6524184	ExpressionStatement	* x = 0	33:16:595:601	6524072	1	True				
ANR	6524185	AssignmentExpression	* x = 0		6524072	0		=			
ANR	6524186	UnaryOperationExpression	* x		6524072	0					
ANR	6524187	UnaryOperator	*		6524072	0					
ANR	6524188	Identifier	x		6524072	1					
ANR	6524189	PrimaryExpression	0		6524072	1					
ANR	6524190	IfStatement	if ( * y < 0 )		6524072	2					
ANR	6524191	Condition	* y < 0	35:20:624:629	6524072	0	True				
ANR	6524192	RelationalExpression	* y < 0		6524072	0		<			
ANR	6524193	UnaryOperationExpression	* y		6524072	0					
ANR	6524194	UnaryOperator	*		6524072	0					
ANR	6524195	Identifier	y		6524072	1					
ANR	6524196	PrimaryExpression	0		6524072	1					
ANR	6524197	CompoundStatement		31:28:486:486	6524072	1					
ANR	6524198	ExpressionStatement	* y = s -> height - 1	37:19:654:672	6524072	0	True				
ANR	6524199	AssignmentExpression	* y = s -> height - 1		6524072	0		=			
ANR	6524200	UnaryOperationExpression	* y		6524072	0					
ANR	6524201	UnaryOperator	*		6524072	0					
ANR	6524202	Identifier	y		6524072	1					
ANR	6524203	AdditiveExpression	s -> height - 1		6524072	1		-			
ANR	6524204	PtrMemberAccess	s -> height		6524072	0					
ANR	6524205	Identifier	s		6524072	0					
ANR	6524206	Identifier	height		6524072	1					
ANR	6524207	PrimaryExpression	1		6524072	1					
ANR	6524208	ExpressionStatement	* plane += 1	39:19:694:705	6524072	1	True				
ANR	6524209	AssignmentExpression	* plane += 1		6524072	0		+=			
ANR	6524210	UnaryOperationExpression	* plane		6524072	0					
ANR	6524211	UnaryOperator	*		6524072	0					
ANR	6524212	Identifier	plane		6524072	1					
ANR	6524213	PrimaryExpression	1		6524072	1					
ANR	6524214	IfStatement	if ( * plane >= s -> nb_planes )		6524072	2					
ANR	6524215	Condition	* plane >= s -> nb_planes	41:23:731:752	6524072	0	True				
ANR	6524216	RelationalExpression	* plane >= s -> nb_planes		6524072	0		>=			
ANR	6524217	UnaryOperationExpression	* plane		6524072	0					
ANR	6524218	UnaryOperator	*		6524072	0					
ANR	6524219	Identifier	plane		6524072	1					
ANR	6524220	PtrMemberAccess	s -> nb_planes		6524072	1					
ANR	6524221	Identifier	s		6524072	0					
ANR	6524222	Identifier	nb_planes		6524072	1					
ANR	6524223	ReturnStatement	return ;	43:23:779:785	6524072	1	True				
ANR	6524224	ExpressionStatement	value <<= bits_per_plane	45:19:807:831	6524072	3	True				
ANR	6524225	AssignmentExpression	value <<= bits_per_plane		6524072	0		<<=			
ANR	6524226	Identifier	value		6524072	0					
ANR	6524227	Identifier	bits_per_plane		6524072	1					
ANR	6524228	ExpressionStatement	mask <<= bits_per_plane	47:19:853:877	6524072	4	True				
ANR	6524229	AssignmentExpression	mask <<= bits_per_plane		6524072	0		<<=			
ANR	6524230	Identifier	mask		6524072	0					
ANR	6524231	Identifier	bits_per_plane		6524072	1					
ANR	6524232	ExpressionStatement	run --	55:8:933:938	6524072	2	True				
ANR	6524233	PostIncDecOperationExpression	run --		6524072	0					
ANR	6524234	Identifier	run		6524072	0					
ANR	6524235	IncDec	--		6524072	1					
ANR	6524236	ReturnType	static void		6524072	1					
ANR	6524237	Identifier	picmemset		6524072	2					
ANR	6524238	ParameterList	"PicContext * s , AVFrame * frame , int value , int run , int * x , int * y , int * plane , int bits_per_plane"		6524072	3					
ANR	6524239	Parameter	PicContext * s	1:22:22:34	6524072	0	True				
ANR	6524240	ParameterType	PicContext *		6524072	0					
ANR	6524241	Identifier	s		6524072	1					
ANR	6524242	Parameter	AVFrame * frame	1:37:37:50	6524072	1	True				
ANR	6524243	ParameterType	AVFrame *		6524072	0					
ANR	6524244	Identifier	frame		6524072	1					
ANR	6524245	Parameter	int value	1:53:53:61	6524072	2	True				
ANR	6524246	ParameterType	int		6524072	0					
ANR	6524247	Identifier	value		6524072	1					
ANR	6524248	Parameter	int run	1:64:64:70	6524072	3	True				
ANR	6524249	ParameterType	int		6524072	0					
ANR	6524250	Identifier	run		6524072	1					
ANR	6524251	Parameter	int * x	3:22:96:101	6524072	4	True				
ANR	6524252	ParameterType	int *		6524072	0					
ANR	6524253	Identifier	x		6524072	1					
ANR	6524254	Parameter	int * y	3:30:104:109	6524072	5	True				
ANR	6524255	ParameterType	int *		6524072	0					
ANR	6524256	Identifier	y		6524072	1					
ANR	6524257	Parameter	int * plane	3:38:112:121	6524072	6	True				
ANR	6524258	ParameterType	int *		6524072	0					
ANR	6524259	Identifier	plane		6524072	1					
ANR	6524260	Parameter	int bits_per_plane	3:50:124:141	6524072	7	True				
ANR	6524261	ParameterType	int		6524072	0					
ANR	6524262	Identifier	bits_per_plane		6524072	1					
ANR	6524263	CFGEntryNode	ENTRY		6524072		True				
ANR	6524264	CFGExitNode	EXIT		6524072		True				
ANR	6524265	Symbol	plane		6524072						
ANR	6524266	Symbol	* frame -> data		6524072						
ANR	6524267	Symbol	* x		6524072						
ANR	6524268	Symbol	* y		6524072						
ANR	6524269	Symbol	* frame		6524072						
ANR	6524270	Symbol	shift		6524072						
ANR	6524271	Symbol	run		6524072						
ANR	6524272	Symbol	* * frame		6524072						
ANR	6524273	Symbol	* * x		6524072						
ANR	6524274	Symbol	s -> width		6524072						
ANR	6524275	Symbol	* plane		6524072						
ANR	6524276	Symbol	frame -> linesize		6524072						
ANR	6524277	Symbol	value		6524072						
ANR	6524278	Symbol	mask		6524072						
ANR	6524279	Symbol	frame -> data		6524072						
ANR	6524280	Symbol	d		6524072						
ANR	6524281	Symbol	* frame -> linesize		6524072						
ANR	6524282	Symbol	bits_per_plane		6524072						
ANR	6524283	Symbol	j		6524072						
ANR	6524284	Symbol	* d		6524072						
ANR	6524285	Symbol	s		6524072						
ANR	6524286	Symbol	s -> height		6524072						
ANR	6524287	Symbol	s -> nb_planes		6524072						
ANR	6524288	Symbol	x		6524072						
ANR	6524289	Symbol	y		6524072						
ANR	6524290	Symbol	* s		6524072						
ANR	6524291	Symbol	frame		6524072						
