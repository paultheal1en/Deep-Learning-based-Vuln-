command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1098002	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmp_decode_frame_01_0.c								
ANR	1098003	Function	bmp_decode_frame	1:0:0:9372							
ANR	1098004	FunctionDef	"bmp_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		1098003	0					
ANR	1098005	CompoundStatement		7:0:155:9372	1098003	0					
ANR	1098006	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	1098003	0	True				
ANR	1098007	IdentifierDecl	* buf = avpkt -> data		1098003	0					
ANR	1098008	IdentifierDeclType	const uint8_t *		1098003	0					
ANR	1098009	Identifier	buf		1098003	1					
ANR	1098010	AssignmentExpression	* buf = avpkt -> data		1098003	2		=			
ANR	1098011	Identifier	buf		1098003	0					
ANR	1098012	PtrMemberAccess	avpkt -> data		1098003	1					
ANR	1098013	Identifier	avpkt		1098003	0					
ANR	1098014	Identifier	data		1098003	1					
ANR	1098015	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:227	1098003	1	True				
ANR	1098016	IdentifierDecl	buf_size = avpkt -> size		1098003	0					
ANR	1098017	IdentifierDeclType	int		1098003	0					
ANR	1098018	Identifier	buf_size		1098003	1					
ANR	1098019	AssignmentExpression	buf_size = avpkt -> size		1098003	2		=			
ANR	1098020	Identifier	buf_size		1098003	0					
ANR	1098021	PtrMemberAccess	avpkt -> size		1098003	1					
ANR	1098022	Identifier	avpkt		1098003	0					
ANR	1098023	Identifier	size		1098003	1					
ANR	1098024	IdentifierDeclStatement	BMPContext * s = avctx -> priv_data ;	13:4:234:266	1098003	2	True				
ANR	1098025	IdentifierDecl	* s = avctx -> priv_data		1098003	0					
ANR	1098026	IdentifierDeclType	BMPContext *		1098003	0					
ANR	1098027	Identifier	s		1098003	1					
ANR	1098028	AssignmentExpression	* s = avctx -> priv_data		1098003	2		=			
ANR	1098029	Identifier	s		1098003	0					
ANR	1098030	PtrMemberAccess	avctx -> priv_data		1098003	1					
ANR	1098031	Identifier	avctx		1098003	0					
ANR	1098032	Identifier	priv_data		1098003	1					
ANR	1098033	IdentifierDeclStatement	AVFrame * picture = data ;	15:4:273:296	1098003	3	True				
ANR	1098034	IdentifierDecl	* picture = data		1098003	0					
ANR	1098035	IdentifierDeclType	AVFrame *		1098003	0					
ANR	1098036	Identifier	picture		1098003	1					
ANR	1098037	AssignmentExpression	* picture = data		1098003	2		=			
ANR	1098038	Identifier	data		1098003	0					
ANR	1098039	Identifier	data		1098003	1					
ANR	1098040	IdentifierDeclStatement	AVFrame * p = & s -> picture ;	17:4:303:327	1098003	4	True				
ANR	1098041	IdentifierDecl	* p = & s -> picture		1098003	0					
ANR	1098042	IdentifierDeclType	AVFrame *		1098003	0					
ANR	1098043	Identifier	p		1098003	1					
ANR	1098044	AssignmentExpression	* p = & s -> picture		1098003	2		=			
ANR	1098045	Identifier	p		1098003	0					
ANR	1098046	UnaryOperationExpression	& s -> picture		1098003	1					
ANR	1098047	UnaryOperator	&		1098003	0					
ANR	1098048	PtrMemberAccess	s -> picture		1098003	1					
ANR	1098049	Identifier	s		1098003	0					
ANR	1098050	Identifier	picture		1098003	1					
ANR	1098051	IdentifierDeclStatement	"unsigned int fsize , hsize ;"	19:4:334:359	1098003	5	True				
ANR	1098052	IdentifierDecl	fsize		1098003	0					
ANR	1098053	IdentifierDeclType	unsigned int		1098003	0					
ANR	1098054	Identifier	fsize		1098003	1					
ANR	1098055	IdentifierDecl	hsize		1098003	1					
ANR	1098056	IdentifierDeclType	unsigned int		1098003	0					
ANR	1098057	Identifier	hsize		1098003	1					
ANR	1098058	IdentifierDeclStatement	"int width , height ;"	21:4:366:383	1098003	6	True				
ANR	1098059	IdentifierDecl	width		1098003	0					
ANR	1098060	IdentifierDeclType	int		1098003	0					
ANR	1098061	Identifier	width		1098003	1					
ANR	1098062	IdentifierDecl	height		1098003	1					
ANR	1098063	IdentifierDeclType	int		1098003	0					
ANR	1098064	Identifier	height		1098003	1					
ANR	1098065	IdentifierDeclStatement	unsigned int depth ;	23:4:390:408	1098003	7	True				
ANR	1098066	IdentifierDecl	depth		1098003	0					
ANR	1098067	IdentifierDeclType	unsigned int		1098003	0					
ANR	1098068	Identifier	depth		1098003	1					
ANR	1098069	IdentifierDeclStatement	BiCompression comp ;	25:4:415:433	1098003	8	True				
ANR	1098070	IdentifierDecl	comp		1098003	0					
ANR	1098071	IdentifierDeclType	BiCompression		1098003	0					
ANR	1098072	Identifier	comp		1098003	1					
ANR	1098073	IdentifierDeclStatement	unsigned int ihsize ;	27:4:440:459	1098003	9	True				
ANR	1098074	IdentifierDecl	ihsize		1098003	0					
ANR	1098075	IdentifierDeclType	unsigned int		1098003	0					
ANR	1098076	Identifier	ihsize		1098003	1					
ANR	1098077	IdentifierDeclStatement	"int i , j , n , linesize ;"	29:4:466:487	1098003	10	True				
ANR	1098078	IdentifierDecl	i		1098003	0					
ANR	1098079	IdentifierDeclType	int		1098003	0					
ANR	1098080	Identifier	i		1098003	1					
ANR	1098081	IdentifierDecl	j		1098003	1					
ANR	1098082	IdentifierDeclType	int		1098003	0					
ANR	1098083	Identifier	j		1098003	1					
ANR	1098084	IdentifierDecl	n		1098003	2					
ANR	1098085	IdentifierDeclType	int		1098003	0					
ANR	1098086	Identifier	n		1098003	1					
ANR	1098087	IdentifierDecl	linesize		1098003	3					
ANR	1098088	IdentifierDeclType	int		1098003	0					
ANR	1098089	Identifier	linesize		1098003	1					
ANR	1098090	IdentifierDeclStatement	uint32_t rgb [ 3 ] ;	31:4:494:509	1098003	11	True				
ANR	1098091	IdentifierDecl	rgb [ 3 ]		1098003	0					
ANR	1098092	IdentifierDeclType	uint32_t [ 3 ]		1098003	0					
ANR	1098093	Identifier	rgb		1098003	1					
ANR	1098094	PrimaryExpression	3		1098003	2					
ANR	1098095	IdentifierDeclStatement	uint8_t * ptr ;	33:4:516:528	1098003	12	True				
ANR	1098096	IdentifierDecl	* ptr		1098003	0					
ANR	1098097	IdentifierDeclType	uint8_t *		1098003	0					
ANR	1098098	Identifier	ptr		1098003	1					
ANR	1098099	IdentifierDeclStatement	int dsize ;	35:4:535:544	1098003	13	True				
ANR	1098100	IdentifierDecl	dsize		1098003	0					
ANR	1098101	IdentifierDeclType	int		1098003	0					
ANR	1098102	Identifier	dsize		1098003	1					
ANR	1098103	IdentifierDeclStatement	const uint8_t * buf0 = buf ;	37:4:551:576	1098003	14	True				
ANR	1098104	IdentifierDecl	* buf0 = buf		1098003	0					
ANR	1098105	IdentifierDeclType	const uint8_t *		1098003	0					
ANR	1098106	Identifier	buf0		1098003	1					
ANR	1098107	AssignmentExpression	* buf0 = buf		1098003	2		=			
ANR	1098108	Identifier	buf		1098003	0					
ANR	1098109	Identifier	buf		1098003	1					
ANR	1098110	IfStatement	if ( buf_size < 14 )		1098003	15					
ANR	1098111	Condition	buf_size < 14	41:7:588:600	1098003	0	True				
ANR	1098112	RelationalExpression	buf_size < 14		1098003	0		<			
ANR	1098113	Identifier	buf_size		1098003	0					
ANR	1098114	PrimaryExpression	14		1098003	1					
ANR	1098115	CompoundStatement		35:21:446:446	1098003	1					
ANR	1098116	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"	43:8:613:679	1098003	0	True				
ANR	1098117	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"		1098003	0					
ANR	1098118	Callee	av_log		1098003	0					
ANR	1098119	Identifier	av_log		1098003	0					
ANR	1098120	ArgumentList	avctx		1098003	1					
ANR	1098121	Argument	avctx		1098003	0					
ANR	1098122	Identifier	avctx		1098003	0					
ANR	1098123	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098124	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098125	Argument	"""buf size too small (%d)\\n"""		1098003	2					
ANR	1098126	PrimaryExpression	"""buf size too small (%d)\\n"""		1098003	0					
ANR	1098127	Argument	buf_size		1098003	3					
ANR	1098128	Identifier	buf_size		1098003	0					
ANR	1098129	ReturnStatement	return - 1 ;	45:8:690:699	1098003	1	True				
ANR	1098130	UnaryOperationExpression	- 1		1098003	0					
ANR	1098131	UnaryOperator	-		1098003	0					
ANR	1098132	PrimaryExpression	1		1098003	1					
ANR	1098133	IfStatement	if ( bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M' )		1098003	16					
ANR	1098134	Condition	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'	51:7:718:793	1098003	0	True				
ANR	1098135	OrExpression	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'		1098003	0		||			
ANR	1098136	EqualityExpression	bytestream_get_byte ( & buf ) != 'B'		1098003	0		!=			
ANR	1098137	CallExpression	bytestream_get_byte ( & buf )		1098003	0					
ANR	1098138	Callee	bytestream_get_byte		1098003	0					
ANR	1098139	Identifier	bytestream_get_byte		1098003	0					
ANR	1098140	ArgumentList	& buf		1098003	1					
ANR	1098141	Argument	& buf		1098003	0					
ANR	1098142	UnaryOperationExpression	& buf		1098003	0					
ANR	1098143	UnaryOperator	&		1098003	0					
ANR	1098144	Identifier	buf		1098003	1					
ANR	1098145	PrimaryExpression	'B'		1098003	1					
ANR	1098146	EqualityExpression	bytestream_get_byte ( & buf ) != 'M'		1098003	1		!=			
ANR	1098147	CallExpression	bytestream_get_byte ( & buf )		1098003	0					
ANR	1098148	Callee	bytestream_get_byte		1098003	0					
ANR	1098149	Identifier	bytestream_get_byte		1098003	0					
ANR	1098150	ArgumentList	& buf		1098003	1					
ANR	1098151	Argument	& buf		1098003	0					
ANR	1098152	UnaryOperationExpression	& buf		1098003	0					
ANR	1098153	UnaryOperator	&		1098003	0					
ANR	1098154	Identifier	buf		1098003	1					
ANR	1098155	PrimaryExpression	'M'		1098003	1					
ANR	1098156	CompoundStatement		47:41:640:640	1098003	1					
ANR	1098157	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"	55:8:807:856	1098003	0	True				
ANR	1098158	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"		1098003	0					
ANR	1098159	Callee	av_log		1098003	0					
ANR	1098160	Identifier	av_log		1098003	0					
ANR	1098161	ArgumentList	avctx		1098003	1					
ANR	1098162	Argument	avctx		1098003	0					
ANR	1098163	Identifier	avctx		1098003	0					
ANR	1098164	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098165	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098166	Argument	"""bad magic number\\n"""		1098003	2					
ANR	1098167	PrimaryExpression	"""bad magic number\\n"""		1098003	0					
ANR	1098168	ReturnStatement	return - 1 ;	57:8:867:876	1098003	1	True				
ANR	1098169	UnaryOperationExpression	- 1		1098003	0					
ANR	1098170	UnaryOperator	-		1098003	0					
ANR	1098171	PrimaryExpression	1		1098003	1					
ANR	1098172	ExpressionStatement	fsize = bytestream_get_le32 ( & buf )	63:4:892:925	1098003	17	True				
ANR	1098173	AssignmentExpression	fsize = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098174	Identifier	fsize		1098003	0					
ANR	1098175	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098176	Callee	bytestream_get_le32		1098003	0					
ANR	1098177	Identifier	bytestream_get_le32		1098003	0					
ANR	1098178	ArgumentList	& buf		1098003	1					
ANR	1098179	Argument	& buf		1098003	0					
ANR	1098180	UnaryOperationExpression	& buf		1098003	0					
ANR	1098181	UnaryOperator	&		1098003	0					
ANR	1098182	Identifier	buf		1098003	1					
ANR	1098183	IfStatement	if ( buf_size < fsize )		1098003	18					
ANR	1098184	Condition	buf_size < fsize	65:7:935:950	1098003	0	True				
ANR	1098185	RelationalExpression	buf_size < fsize		1098003	0		<			
ANR	1098186	Identifier	buf_size		1098003	0					
ANR	1098187	Identifier	fsize		1098003	1					
ANR	1098188	CompoundStatement		59:24:796:796	1098003	1					
ANR	1098189	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d), trying to decode anyway\\n"" , buf_size , fsize )"	67:8:963:1079	1098003	0	True				
ANR	1098190	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d), trying to decode anyway\\n"" , buf_size , fsize )"		1098003	0					
ANR	1098191	Callee	av_log		1098003	0					
ANR	1098192	Identifier	av_log		1098003	0					
ANR	1098193	ArgumentList	avctx		1098003	1					
ANR	1098194	Argument	avctx		1098003	0					
ANR	1098195	Identifier	avctx		1098003	0					
ANR	1098196	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098197	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098198	Argument	"""not enough data (%d < %d), trying to decode anyway\\n"""		1098003	2					
ANR	1098199	PrimaryExpression	"""not enough data (%d < %d), trying to decode anyway\\n"""		1098003	0					
ANR	1098200	Argument	buf_size		1098003	3					
ANR	1098201	Identifier	buf_size		1098003	0					
ANR	1098202	Argument	fsize		1098003	4					
ANR	1098203	Identifier	fsize		1098003	0					
ANR	1098204	ExpressionStatement	fsize = buf_size	71:8:1090:1106	1098003	1	True				
ANR	1098205	AssignmentExpression	fsize = buf_size		1098003	0		=			
ANR	1098206	Identifier	fsize		1098003	0					
ANR	1098207	Identifier	buf_size		1098003	1					
ANR	1098208	ExpressionStatement	buf += 2	77:4:1122:1130	1098003	19	True				
ANR	1098209	AssignmentExpression	buf += 2		1098003	0		+=			
ANR	1098210	Identifier	buf		1098003	0					
ANR	1098211	PrimaryExpression	2		1098003	1					
ANR	1098212	ExpressionStatement	buf += 2	79:4:1153:1161	1098003	20	True				
ANR	1098213	AssignmentExpression	buf += 2		1098003	0		+=			
ANR	1098214	Identifier	buf		1098003	0					
ANR	1098215	PrimaryExpression	2		1098003	1					
ANR	1098216	ExpressionStatement	hsize = bytestream_get_le32 ( & buf )	83:4:1186:1219	1098003	21	True				
ANR	1098217	AssignmentExpression	hsize = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098218	Identifier	hsize		1098003	0					
ANR	1098219	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098220	Callee	bytestream_get_le32		1098003	0					
ANR	1098221	Identifier	bytestream_get_le32		1098003	0					
ANR	1098222	ArgumentList	& buf		1098003	1					
ANR	1098223	Argument	& buf		1098003	0					
ANR	1098224	UnaryOperationExpression	& buf		1098003	0					
ANR	1098225	UnaryOperator	&		1098003	0					
ANR	1098226	Identifier	buf		1098003	1					
ANR	1098227	ExpressionStatement	ihsize = bytestream_get_le32 ( & buf )	85:4:1244:1278	1098003	22	True				
ANR	1098228	AssignmentExpression	ihsize = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098229	Identifier	ihsize		1098003	0					
ANR	1098230	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098231	Callee	bytestream_get_le32		1098003	0					
ANR	1098232	Identifier	bytestream_get_le32		1098003	0					
ANR	1098233	ArgumentList	& buf		1098003	1					
ANR	1098234	Argument	& buf		1098003	0					
ANR	1098235	UnaryOperationExpression	& buf		1098003	0					
ANR	1098236	UnaryOperator	&		1098003	0					
ANR	1098237	Identifier	buf		1098003	1					
ANR	1098238	IfStatement	if ( ihsize + 14 > hsize )		1098003	23					
ANR	1098239	Condition	ihsize + 14 > hsize	87:7:1317:1335	1098003	0	True				
ANR	1098240	RelationalExpression	ihsize + 14 > hsize		1098003	0		>			
ANR	1098241	AdditiveExpression	ihsize + 14		1098003	0		+			
ANR	1098242	Identifier	ihsize		1098003	0					
ANR	1098243	PrimaryExpression	14		1098003	1					
ANR	1098244	Identifier	hsize		1098003	1					
ANR	1098245	CompoundStatement		81:27:1181:1181	1098003	1					
ANR	1098246	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"	89:8:1348:1410	1098003	0	True				
ANR	1098247	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"		1098003	0					
ANR	1098248	Callee	av_log		1098003	0					
ANR	1098249	Identifier	av_log		1098003	0					
ANR	1098250	ArgumentList	avctx		1098003	1					
ANR	1098251	Argument	avctx		1098003	0					
ANR	1098252	Identifier	avctx		1098003	0					
ANR	1098253	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098254	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098255	Argument	"""invalid header size %d\\n"""		1098003	2					
ANR	1098256	PrimaryExpression	"""invalid header size %d\\n"""		1098003	0					
ANR	1098257	Argument	hsize		1098003	3					
ANR	1098258	Identifier	hsize		1098003	0					
ANR	1098259	ReturnStatement	return - 1 ;	91:8:1421:1430	1098003	1	True				
ANR	1098260	UnaryOperationExpression	- 1		1098003	0					
ANR	1098261	UnaryOperator	-		1098003	0					
ANR	1098262	PrimaryExpression	1		1098003	1					
ANR	1098263	IfStatement	if ( fsize == 14 || fsize == ihsize + 14 )		1098003	24					
ANR	1098264	Condition	fsize == 14 || fsize == ihsize + 14	99:7:1538:1572	1098003	0	True				
ANR	1098265	OrExpression	fsize == 14 || fsize == ihsize + 14		1098003	0		||			
ANR	1098266	EqualityExpression	fsize == 14		1098003	0		==			
ANR	1098267	Identifier	fsize		1098003	0					
ANR	1098268	PrimaryExpression	14		1098003	1					
ANR	1098269	EqualityExpression	fsize == ihsize + 14		1098003	1		==			
ANR	1098270	Identifier	fsize		1098003	0					
ANR	1098271	AdditiveExpression	ihsize + 14		1098003	1		+			
ANR	1098272	Identifier	ihsize		1098003	0					
ANR	1098273	PrimaryExpression	14		1098003	1					
ANR	1098274	ExpressionStatement	fsize = buf_size - 2	101:8:1584:1604	1098003	1	True				
ANR	1098275	AssignmentExpression	fsize = buf_size - 2		1098003	0		=			
ANR	1098276	Identifier	fsize		1098003	0					
ANR	1098277	AdditiveExpression	buf_size - 2		1098003	1		-			
ANR	1098278	Identifier	buf_size		1098003	0					
ANR	1098279	PrimaryExpression	2		1098003	1					
ANR	1098280	IfStatement	if ( fsize <= hsize )		1098003	25					
ANR	1098281	Condition	fsize <= hsize	105:7:1616:1629	1098003	0	True				
ANR	1098282	RelationalExpression	fsize <= hsize		1098003	0		<=			
ANR	1098283	Identifier	fsize		1098003	0					
ANR	1098284	Identifier	hsize		1098003	1					
ANR	1098285	CompoundStatement		99:22:1475:1475	1098003	1					
ANR	1098286	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"	107:8:1642:1758	1098003	0	True				
ANR	1098287	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"		1098003	0					
ANR	1098288	Callee	av_log		1098003	0					
ANR	1098289	Identifier	av_log		1098003	0					
ANR	1098290	ArgumentList	avctx		1098003	1					
ANR	1098291	Argument	avctx		1098003	0					
ANR	1098292	Identifier	avctx		1098003	0					
ANR	1098293	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098294	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098295	Argument	"""declared file size is less than header size (%d < %d)\\n"""		1098003	2					
ANR	1098296	PrimaryExpression	"""declared file size is less than header size (%d < %d)\\n"""		1098003	0					
ANR	1098297	Argument	fsize		1098003	3					
ANR	1098298	Identifier	fsize		1098003	0					
ANR	1098299	Argument	hsize		1098003	4					
ANR	1098300	Identifier	hsize		1098003	0					
ANR	1098301	ReturnStatement	return - 1 ;	111:8:1769:1778	1098003	1	True				
ANR	1098302	UnaryOperationExpression	- 1		1098003	0					
ANR	1098303	UnaryOperator	-		1098003	0					
ANR	1098304	PrimaryExpression	1		1098003	1					
ANR	1098305	SwitchStatement	switch ( ihsize )		1098003	26					
ANR	1098306	Condition	ihsize	117:11:1801:1806	1098003	0	True				
ANR	1098307	Identifier	ihsize		1098003	0					
ANR	1098308	CompoundStatement		111:18:1652:1652	1098003	1					
ANR	1098309	Label	case 40 :	119:4:1815:1823	1098003	0	True				
ANR	1098310	Label	case 64 :	121:4:1843:1851	1098003	1	True				
ANR	1098311	Label	case 108 :	123:4:1869:1877	1098003	2	True				
ANR	1098312	Label	case 124 :	125:4:1897:1905	1098003	3	True				
ANR	1098313	ExpressionStatement	width = bytestream_get_le32 ( & buf )	127:8:1929:1962	1098003	4	True				
ANR	1098314	AssignmentExpression	width = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098315	Identifier	width		1098003	0					
ANR	1098316	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098317	Callee	bytestream_get_le32		1098003	0					
ANR	1098318	Identifier	bytestream_get_le32		1098003	0					
ANR	1098319	ArgumentList	& buf		1098003	1					
ANR	1098320	Argument	& buf		1098003	0					
ANR	1098321	UnaryOperationExpression	& buf		1098003	0					
ANR	1098322	UnaryOperator	&		1098003	0					
ANR	1098323	Identifier	buf		1098003	1					
ANR	1098324	ExpressionStatement	height = bytestream_get_le32 ( & buf )	129:8:1973:2007	1098003	5	True				
ANR	1098325	AssignmentExpression	height = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098326	Identifier	height		1098003	0					
ANR	1098327	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098328	Callee	bytestream_get_le32		1098003	0					
ANR	1098329	Identifier	bytestream_get_le32		1098003	0					
ANR	1098330	ArgumentList	& buf		1098003	1					
ANR	1098331	Argument	& buf		1098003	0					
ANR	1098332	UnaryOperationExpression	& buf		1098003	0					
ANR	1098333	UnaryOperator	&		1098003	0					
ANR	1098334	Identifier	buf		1098003	1					
ANR	1098335	BreakStatement	break ;	131:8:2018:2023	1098003	6	True				
ANR	1098336	Label	case 12 :	133:4:2030:2038	1098003	7	True				
ANR	1098337	ExpressionStatement	width = bytestream_get_le16 ( & buf )	135:8:2060:2094	1098003	8	True				
ANR	1098338	AssignmentExpression	width = bytestream_get_le16 ( & buf )		1098003	0		=			
ANR	1098339	Identifier	width		1098003	0					
ANR	1098340	CallExpression	bytestream_get_le16 ( & buf )		1098003	1					
ANR	1098341	Callee	bytestream_get_le16		1098003	0					
ANR	1098342	Identifier	bytestream_get_le16		1098003	0					
ANR	1098343	ArgumentList	& buf		1098003	1					
ANR	1098344	Argument	& buf		1098003	0					
ANR	1098345	UnaryOperationExpression	& buf		1098003	0					
ANR	1098346	UnaryOperator	&		1098003	0					
ANR	1098347	Identifier	buf		1098003	1					
ANR	1098348	ExpressionStatement	height = bytestream_get_le16 ( & buf )	137:8:2105:2139	1098003	9	True				
ANR	1098349	AssignmentExpression	height = bytestream_get_le16 ( & buf )		1098003	0		=			
ANR	1098350	Identifier	height		1098003	0					
ANR	1098351	CallExpression	bytestream_get_le16 ( & buf )		1098003	1					
ANR	1098352	Callee	bytestream_get_le16		1098003	0					
ANR	1098353	Identifier	bytestream_get_le16		1098003	0					
ANR	1098354	ArgumentList	& buf		1098003	1					
ANR	1098355	Argument	& buf		1098003	0					
ANR	1098356	UnaryOperationExpression	& buf		1098003	0					
ANR	1098357	UnaryOperator	&		1098003	0					
ANR	1098358	Identifier	buf		1098003	1					
ANR	1098359	BreakStatement	break ;	139:8:2150:2155	1098003	10	True				
ANR	1098360	Label	default :	141:4:2162:2169	1098003	11	True				
ANR	1098361	Identifier	default		1098003	0					
ANR	1098362	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"	143:8:2180:2248	1098003	12	True				
ANR	1098363	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"		1098003	0					
ANR	1098364	Callee	av_log		1098003	0					
ANR	1098365	Identifier	av_log		1098003	0					
ANR	1098366	ArgumentList	avctx		1098003	1					
ANR	1098367	Argument	avctx		1098003	0					
ANR	1098368	Identifier	avctx		1098003	0					
ANR	1098369	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098370	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098371	Argument	"""unsupported BMP file, patch welcome\\n"""		1098003	2					
ANR	1098372	PrimaryExpression	"""unsupported BMP file, patch welcome\\n"""		1098003	0					
ANR	1098373	ReturnStatement	return - 1 ;	145:8:2259:2268	1098003	13	True				
ANR	1098374	UnaryOperationExpression	- 1		1098003	0					
ANR	1098375	UnaryOperator	-		1098003	0					
ANR	1098376	PrimaryExpression	1		1098003	1					
ANR	1098377	IfStatement	if ( bytestream_get_le16 ( & buf ) != 1 )		1098003	27					
ANR	1098378	Condition	bytestream_get_le16 ( & buf ) != 1	151:7:2287:2316	1098003	0	True				
ANR	1098379	EqualityExpression	bytestream_get_le16 ( & buf ) != 1		1098003	0		!=			
ANR	1098380	CallExpression	bytestream_get_le16 ( & buf )		1098003	0					
ANR	1098381	Callee	bytestream_get_le16		1098003	0					
ANR	1098382	Identifier	bytestream_get_le16		1098003	0					
ANR	1098383	ArgumentList	& buf		1098003	1					
ANR	1098384	Argument	& buf		1098003	0					
ANR	1098385	UnaryOperationExpression	& buf		1098003	0					
ANR	1098386	UnaryOperator	&		1098003	0					
ANR	1098387	Identifier	buf		1098003	1					
ANR	1098388	PrimaryExpression	1		1098003	1					
ANR	1098389	CompoundStatement		145:38:2162:2162	1098003	1					
ANR	1098390	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"	153:8:2342:2393	1098003	0	True				
ANR	1098391	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"		1098003	0					
ANR	1098392	Callee	av_log		1098003	0					
ANR	1098393	Identifier	av_log		1098003	0					
ANR	1098394	ArgumentList	avctx		1098003	1					
ANR	1098395	Argument	avctx		1098003	0					
ANR	1098396	Identifier	avctx		1098003	0					
ANR	1098397	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098398	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098399	Argument	"""invalid BMP header\\n"""		1098003	2					
ANR	1098400	PrimaryExpression	"""invalid BMP header\\n"""		1098003	0					
ANR	1098401	ReturnStatement	return - 1 ;	155:8:2404:2413	1098003	1	True				
ANR	1098402	UnaryOperationExpression	- 1		1098003	0					
ANR	1098403	UnaryOperator	-		1098003	0					
ANR	1098404	PrimaryExpression	1		1098003	1					
ANR	1098405	ExpressionStatement	depth = bytestream_get_le16 ( & buf )	161:4:2429:2462	1098003	28	True				
ANR	1098406	AssignmentExpression	depth = bytestream_get_le16 ( & buf )		1098003	0		=			
ANR	1098407	Identifier	depth		1098003	0					
ANR	1098408	CallExpression	bytestream_get_le16 ( & buf )		1098003	1					
ANR	1098409	Callee	bytestream_get_le16		1098003	0					
ANR	1098410	Identifier	bytestream_get_le16		1098003	0					
ANR	1098411	ArgumentList	& buf		1098003	1					
ANR	1098412	Argument	& buf		1098003	0					
ANR	1098413	UnaryOperationExpression	& buf		1098003	0					
ANR	1098414	UnaryOperator	&		1098003	0					
ANR	1098415	Identifier	buf		1098003	1					
ANR	1098416	IfStatement	if ( ihsize == 40 )		1098003	29					
ANR	1098417	Condition	ihsize == 40	165:7:2474:2485	1098003	0	True				
ANR	1098418	EqualityExpression	ihsize == 40		1098003	0		==			
ANR	1098419	Identifier	ihsize		1098003	0					
ANR	1098420	PrimaryExpression	40		1098003	1					
ANR	1098421	ExpressionStatement	comp = bytestream_get_le32 ( & buf )	167:8:2497:2529	1098003	1	True				
ANR	1098422	AssignmentExpression	comp = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098423	Identifier	comp		1098003	0					
ANR	1098424	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098425	Callee	bytestream_get_le32		1098003	0					
ANR	1098426	Identifier	bytestream_get_le32		1098003	0					
ANR	1098427	ArgumentList	& buf		1098003	1					
ANR	1098428	Argument	& buf		1098003	0					
ANR	1098429	UnaryOperationExpression	& buf		1098003	0					
ANR	1098430	UnaryOperator	&		1098003	0					
ANR	1098431	Identifier	buf		1098003	1					
ANR	1098432	ElseStatement	else		1098003	0					
ANR	1098433	ExpressionStatement	comp = BMP_RGB	171:8:2550:2564	1098003	0	True				
ANR	1098434	AssignmentExpression	comp = BMP_RGB		1098003	0		=			
ANR	1098435	Identifier	comp		1098003	0					
ANR	1098436	Identifier	BMP_RGB		1098003	1					
ANR	1098437	IfStatement	if ( comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8 )		1098003	30					
ANR	1098438	Condition	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8	175:7:2576:2655	1098003	0	True				
ANR	1098439	AndExpression	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1098003	0		&&			
ANR	1098440	EqualityExpression	comp != BMP_RGB		1098003	0		!=			
ANR	1098441	Identifier	comp		1098003	0					
ANR	1098442	Identifier	BMP_RGB		1098003	1					
ANR	1098443	AndExpression	comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1098003	1		&&			
ANR	1098444	EqualityExpression	comp != BMP_BITFIELDS		1098003	0		!=			
ANR	1098445	Identifier	comp		1098003	0					
ANR	1098446	Identifier	BMP_BITFIELDS		1098003	1					
ANR	1098447	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1098003	1		&&			
ANR	1098448	EqualityExpression	comp != BMP_RLE4		1098003	0		!=			
ANR	1098449	Identifier	comp		1098003	0					
ANR	1098450	Identifier	BMP_RLE4		1098003	1					
ANR	1098451	EqualityExpression	comp != BMP_RLE8		1098003	1		!=			
ANR	1098452	Identifier	comp		1098003	0					
ANR	1098453	Identifier	BMP_RLE8		1098003	1					
ANR	1098454	CompoundStatement		169:88:2501:2501	1098003	1					
ANR	1098455	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"	177:8:2668:2734	1098003	0	True				
ANR	1098456	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"		1098003	0					
ANR	1098457	Callee	av_log		1098003	0					
ANR	1098458	Identifier	av_log		1098003	0					
ANR	1098459	ArgumentList	avctx		1098003	1					
ANR	1098460	Argument	avctx		1098003	0					
ANR	1098461	Identifier	avctx		1098003	0					
ANR	1098462	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098463	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098464	Argument	"""BMP coding %d not supported\\n"""		1098003	2					
ANR	1098465	PrimaryExpression	"""BMP coding %d not supported\\n"""		1098003	0					
ANR	1098466	Argument	comp		1098003	3					
ANR	1098467	Identifier	comp		1098003	0					
ANR	1098468	ReturnStatement	return - 1 ;	179:8:2745:2754	1098003	1	True				
ANR	1098469	UnaryOperationExpression	- 1		1098003	0					
ANR	1098470	UnaryOperator	-		1098003	0					
ANR	1098471	PrimaryExpression	1		1098003	1					
ANR	1098472	IfStatement	if ( comp == BMP_BITFIELDS )		1098003	31					
ANR	1098473	Condition	comp == BMP_BITFIELDS	185:7:2773:2793	1098003	0	True				
ANR	1098474	EqualityExpression	comp == BMP_BITFIELDS		1098003	0		==			
ANR	1098475	Identifier	comp		1098003	0					
ANR	1098476	Identifier	BMP_BITFIELDS		1098003	1					
ANR	1098477	CompoundStatement		179:29:2639:2639	1098003	1					
ANR	1098478	ExpressionStatement	buf += 20	187:8:2806:2815	1098003	0	True				
ANR	1098479	AssignmentExpression	buf += 20		1098003	0		+=			
ANR	1098480	Identifier	buf		1098003	0					
ANR	1098481	PrimaryExpression	20		1098003	1					
ANR	1098482	ExpressionStatement	rgb [ 0 ] = bytestream_get_le32 ( & buf )	189:8:2826:2860	1098003	1	True				
ANR	1098483	AssignmentExpression	rgb [ 0 ] = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098484	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098485	Identifier	rgb		1098003	0					
ANR	1098486	PrimaryExpression	0		1098003	1					
ANR	1098487	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098488	Callee	bytestream_get_le32		1098003	0					
ANR	1098489	Identifier	bytestream_get_le32		1098003	0					
ANR	1098490	ArgumentList	& buf		1098003	1					
ANR	1098491	Argument	& buf		1098003	0					
ANR	1098492	UnaryOperationExpression	& buf		1098003	0					
ANR	1098493	UnaryOperator	&		1098003	0					
ANR	1098494	Identifier	buf		1098003	1					
ANR	1098495	ExpressionStatement	rgb [ 1 ] = bytestream_get_le32 ( & buf )	191:8:2871:2905	1098003	2	True				
ANR	1098496	AssignmentExpression	rgb [ 1 ] = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098497	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098498	Identifier	rgb		1098003	0					
ANR	1098499	PrimaryExpression	1		1098003	1					
ANR	1098500	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098501	Callee	bytestream_get_le32		1098003	0					
ANR	1098502	Identifier	bytestream_get_le32		1098003	0					
ANR	1098503	ArgumentList	& buf		1098003	1					
ANR	1098504	Argument	& buf		1098003	0					
ANR	1098505	UnaryOperationExpression	& buf		1098003	0					
ANR	1098506	UnaryOperator	&		1098003	0					
ANR	1098507	Identifier	buf		1098003	1					
ANR	1098508	ExpressionStatement	rgb [ 2 ] = bytestream_get_le32 ( & buf )	193:8:2916:2950	1098003	3	True				
ANR	1098509	AssignmentExpression	rgb [ 2 ] = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1098510	ArrayIndexing	rgb [ 2 ]		1098003	0					
ANR	1098511	Identifier	rgb		1098003	0					
ANR	1098512	PrimaryExpression	2		1098003	1					
ANR	1098513	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1098514	Callee	bytestream_get_le32		1098003	0					
ANR	1098515	Identifier	bytestream_get_le32		1098003	0					
ANR	1098516	ArgumentList	& buf		1098003	1					
ANR	1098517	Argument	& buf		1098003	0					
ANR	1098518	UnaryOperationExpression	& buf		1098003	0					
ANR	1098519	UnaryOperator	&		1098003	0					
ANR	1098520	Identifier	buf		1098003	1					
ANR	1098521	ExpressionStatement	avctx -> width = width	199:4:2966:2986	1098003	32	True				
ANR	1098522	AssignmentExpression	avctx -> width = width		1098003	0		=			
ANR	1098523	PtrMemberAccess	avctx -> width		1098003	0					
ANR	1098524	Identifier	avctx		1098003	0					
ANR	1098525	Identifier	width		1098003	1					
ANR	1098526	Identifier	width		1098003	1					
ANR	1098527	ExpressionStatement	avctx -> height = height > 0 ? height : - height	201:4:2993:3036	1098003	33	True				
ANR	1098528	AssignmentExpression	avctx -> height = height > 0 ? height : - height		1098003	0		=			
ANR	1098529	PtrMemberAccess	avctx -> height		1098003	0					
ANR	1098530	Identifier	avctx		1098003	0					
ANR	1098531	Identifier	height		1098003	1					
ANR	1098532	ConditionalExpression	height > 0 ? height : - height		1098003	1					
ANR	1098533	Condition	height > 0		1098003	0					
ANR	1098534	RelationalExpression	height > 0		1098003	0		>			
ANR	1098535	Identifier	height		1098003	0					
ANR	1098536	PrimaryExpression	0		1098003	1					
ANR	1098537	Identifier	height		1098003	1					
ANR	1098538	UnaryOperationExpression	- height		1098003	2					
ANR	1098539	UnaryOperator	-		1098003	0					
ANR	1098540	Identifier	height		1098003	1					
ANR	1098541	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_NONE	205:4:3045:3074	1098003	34	True				
ANR	1098542	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_NONE		1098003	0		=			
ANR	1098543	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098544	Identifier	avctx		1098003	0					
ANR	1098545	Identifier	pix_fmt		1098003	1					
ANR	1098546	Identifier	PIX_FMT_NONE		1098003	1					
ANR	1098547	SwitchStatement	switch ( depth )		1098003	35					
ANR	1098548	Condition	depth	209:11:3090:3094	1098003	0	True				
ANR	1098549	Identifier	depth		1098003	0					
ANR	1098550	CompoundStatement		203:17:2940:2940	1098003	1					
ANR	1098551	Label	case 32 :	211:4:3103:3110	1098003	0	True				
ANR	1098552	IfStatement	if ( comp == BMP_BITFIELDS )		1098003	1					
ANR	1098553	Condition	comp == BMP_BITFIELDS	213:11:3124:3144	1098003	0	True				
ANR	1098554	EqualityExpression	comp == BMP_BITFIELDS		1098003	0		==			
ANR	1098555	Identifier	comp		1098003	0					
ANR	1098556	Identifier	BMP_BITFIELDS		1098003	1					
ANR	1098557	CompoundStatement		207:33:2990:2990	1098003	1					
ANR	1098558	ExpressionStatement	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3	215:12:3161:3188	1098003	0	True				
ANR	1098559	AssignmentExpression	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3		1098003	0		=			
ANR	1098560	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098561	Identifier	rgb		1098003	0					
ANR	1098562	PrimaryExpression	0		1098003	1					
ANR	1098563	BitAndExpression	( rgb [ 0 ] >> 15 ) & 3		1098003	1		&			
ANR	1098564	ShiftExpression	rgb [ 0 ] >> 15		1098003	0		>>			
ANR	1098565	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098566	Identifier	rgb		1098003	0					
ANR	1098567	PrimaryExpression	0		1098003	1					
ANR	1098568	PrimaryExpression	15		1098003	1					
ANR	1098569	PrimaryExpression	3		1098003	1					
ANR	1098570	ExpressionStatement	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3	217:12:3203:3230	1098003	1	True				
ANR	1098571	AssignmentExpression	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3		1098003	0		=			
ANR	1098572	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098573	Identifier	rgb		1098003	0					
ANR	1098574	PrimaryExpression	1		1098003	1					
ANR	1098575	BitAndExpression	( rgb [ 1 ] >> 15 ) & 3		1098003	1		&			
ANR	1098576	ShiftExpression	rgb [ 1 ] >> 15		1098003	0		>>			
ANR	1098577	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098578	Identifier	rgb		1098003	0					
ANR	1098579	PrimaryExpression	1		1098003	1					
ANR	1098580	PrimaryExpression	15		1098003	1					
ANR	1098581	PrimaryExpression	3		1098003	1					
ANR	1098582	ExpressionStatement	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3	219:12:3245:3272	1098003	2	True				
ANR	1098583	AssignmentExpression	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3		1098003	0		=			
ANR	1098584	ArrayIndexing	rgb [ 2 ]		1098003	0					
ANR	1098585	Identifier	rgb		1098003	0					
ANR	1098586	PrimaryExpression	2		1098003	1					
ANR	1098587	BitAndExpression	( rgb [ 2 ] >> 15 ) & 3		1098003	1		&			
ANR	1098588	ShiftExpression	rgb [ 2 ] >> 15		1098003	0		>>			
ANR	1098589	ArrayIndexing	rgb [ 2 ]		1098003	0					
ANR	1098590	Identifier	rgb		1098003	0					
ANR	1098591	PrimaryExpression	2		1098003	1					
ANR	1098592	PrimaryExpression	15		1098003	1					
ANR	1098593	PrimaryExpression	3		1098003	1					
ANR	1098594	IfStatement	if ( rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ] )		1098003	3					
ANR	1098595	Condition	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]	223:15:3292:3396	1098003	0	True				
ANR	1098596	OrExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1098003	0		||			
ANR	1098597	EqualityExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3		1098003	0		!=			
ANR	1098598	AdditiveExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ]		1098003	0		+			
ANR	1098599	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098600	Identifier	rgb		1098003	0					
ANR	1098601	PrimaryExpression	0		1098003	1					
ANR	1098602	AdditiveExpression	rgb [ 1 ] + rgb [ 2 ]		1098003	1		+			
ANR	1098603	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098604	Identifier	rgb		1098003	0					
ANR	1098605	PrimaryExpression	1		1098003	1					
ANR	1098606	ArrayIndexing	rgb [ 2 ]		1098003	1					
ANR	1098607	Identifier	rgb		1098003	0					
ANR	1098608	PrimaryExpression	2		1098003	1					
ANR	1098609	PrimaryExpression	3		1098003	1					
ANR	1098610	OrExpression	rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1098003	1		||			
ANR	1098611	EqualityExpression	rgb [ 0 ] == rgb [ 1 ]		1098003	0		==			
ANR	1098612	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098613	Identifier	rgb		1098003	0					
ANR	1098614	PrimaryExpression	0		1098003	1					
ANR	1098615	ArrayIndexing	rgb [ 1 ]		1098003	1					
ANR	1098616	Identifier	rgb		1098003	0					
ANR	1098617	PrimaryExpression	1		1098003	1					
ANR	1098618	OrExpression	rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1098003	1		||			
ANR	1098619	EqualityExpression	rgb [ 0 ] == rgb [ 2 ]		1098003	0		==			
ANR	1098620	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098621	Identifier	rgb		1098003	0					
ANR	1098622	PrimaryExpression	0		1098003	1					
ANR	1098623	ArrayIndexing	rgb [ 2 ]		1098003	1					
ANR	1098624	Identifier	rgb		1098003	0					
ANR	1098625	PrimaryExpression	2		1098003	1					
ANR	1098626	EqualityExpression	rgb [ 1 ] == rgb [ 2 ]		1098003	1		==			
ANR	1098627	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098628	Identifier	rgb		1098003	0					
ANR	1098629	PrimaryExpression	1		1098003	1					
ANR	1098630	ArrayIndexing	rgb [ 2 ]		1098003	1					
ANR	1098631	Identifier	rgb		1098003	0					
ANR	1098632	PrimaryExpression	2		1098003	1					
ANR	1098633	CompoundStatement		219:72:3242:3242	1098003	1					
ANR	1098634	BreakStatement	break ;	227:16:3417:3422	1098003	0	True				
ANR	1098635	ElseStatement	else		1098003	0					
ANR	1098636	CompoundStatement		225:15:3299:3299	1098003	0					
ANR	1098637	ExpressionStatement	rgb [ 0 ] = 2	233:12:3470:3480	1098003	0	True				
ANR	1098638	AssignmentExpression	rgb [ 0 ] = 2		1098003	0		=			
ANR	1098639	ArrayIndexing	rgb [ 0 ]		1098003	0					
ANR	1098640	Identifier	rgb		1098003	0					
ANR	1098641	PrimaryExpression	0		1098003	1					
ANR	1098642	PrimaryExpression	2		1098003	1					
ANR	1098643	ExpressionStatement	rgb [ 1 ] = 1	235:12:3495:3505	1098003	1	True				
ANR	1098644	AssignmentExpression	rgb [ 1 ] = 1		1098003	0		=			
ANR	1098645	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098646	Identifier	rgb		1098003	0					
ANR	1098647	PrimaryExpression	1		1098003	1					
ANR	1098648	PrimaryExpression	1		1098003	1					
ANR	1098649	ExpressionStatement	rgb [ 2 ] = 0	237:12:3520:3530	1098003	2	True				
ANR	1098650	AssignmentExpression	rgb [ 2 ] = 0		1098003	0		=			
ANR	1098651	ArrayIndexing	rgb [ 2 ]		1098003	0					
ANR	1098652	Identifier	rgb		1098003	0					
ANR	1098653	PrimaryExpression	2		1098003	1					
ANR	1098654	PrimaryExpression	0		1098003	1					
ANR	1098655	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	243:8:3554:3584	1098003	2	True				
ANR	1098656	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1098003	0		=			
ANR	1098657	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098658	Identifier	avctx		1098003	0					
ANR	1098659	Identifier	pix_fmt		1098003	1					
ANR	1098660	Identifier	PIX_FMT_BGR24		1098003	1					
ANR	1098661	BreakStatement	break ;	245:8:3595:3600	1098003	3	True				
ANR	1098662	Label	case 24 :	247:4:3607:3614	1098003	4	True				
ANR	1098663	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	249:8:3625:3655	1098003	5	True				
ANR	1098664	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1098003	0		=			
ANR	1098665	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098666	Identifier	avctx		1098003	0					
ANR	1098667	Identifier	pix_fmt		1098003	1					
ANR	1098668	Identifier	PIX_FMT_BGR24		1098003	1					
ANR	1098669	BreakStatement	break ;	251:8:3666:3671	1098003	6	True				
ANR	1098670	Label	case 16 :	253:4:3678:3685	1098003	7	True				
ANR	1098671	IfStatement	if ( comp == BMP_RGB )		1098003	8					
ANR	1098672	Condition	comp == BMP_RGB	255:11:3699:3713	1098003	0	True				
ANR	1098673	EqualityExpression	comp == BMP_RGB		1098003	0		==			
ANR	1098674	Identifier	comp		1098003	0					
ANR	1098675	Identifier	BMP_RGB		1098003	1					
ANR	1098676	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_RGB555	257:12:3729:3760	1098003	1	True				
ANR	1098677	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_RGB555		1098003	0		=			
ANR	1098678	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098679	Identifier	avctx		1098003	0					
ANR	1098680	Identifier	pix_fmt		1098003	1					
ANR	1098681	Identifier	PIX_FMT_RGB555		1098003	1					
ANR	1098682	IfStatement	if ( comp == BMP_BITFIELDS )		1098003	9					
ANR	1098683	Condition	comp == BMP_BITFIELDS	259:11:3774:3794	1098003	0	True				
ANR	1098684	EqualityExpression	comp == BMP_BITFIELDS		1098003	0		==			
ANR	1098685	Identifier	comp		1098003	0					
ANR	1098686	Identifier	BMP_BITFIELDS		1098003	1					
ANR	1098687	ExpressionStatement	avctx -> pix_fmt = rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555	261:12:3810:3877	1098003	1	True				
ANR	1098688	AssignmentExpression	avctx -> pix_fmt = rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555		1098003	0		=			
ANR	1098689	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098690	Identifier	avctx		1098003	0					
ANR	1098691	Identifier	pix_fmt		1098003	1					
ANR	1098692	ConditionalExpression	rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555		1098003	1					
ANR	1098693	Condition	rgb [ 1 ] == 0x07E0		1098003	0					
ANR	1098694	EqualityExpression	rgb [ 1 ] == 0x07E0		1098003	0		==			
ANR	1098695	ArrayIndexing	rgb [ 1 ]		1098003	0					
ANR	1098696	Identifier	rgb		1098003	0					
ANR	1098697	PrimaryExpression	1		1098003	1					
ANR	1098698	PrimaryExpression	0x07E0		1098003	1					
ANR	1098699	Identifier	PIX_FMT_RGB565		1098003	1					
ANR	1098700	Identifier	PIX_FMT_RGB555		1098003	2					
ANR	1098701	BreakStatement	break ;	263:8:3888:3893	1098003	10	True				
ANR	1098702	Label	case 8 :	265:4:3900:3906	1098003	11	True				
ANR	1098703	IfStatement	if ( hsize - ihsize - 14 > 0 )		1098003	12					
ANR	1098704	Condition	hsize - ihsize - 14 > 0	267:11:3920:3942	1098003	0	True				
ANR	1098705	RelationalExpression	hsize - ihsize - 14 > 0		1098003	0		>			
ANR	1098706	AdditiveExpression	hsize - ihsize - 14		1098003	0		-			
ANR	1098707	Identifier	hsize		1098003	0					
ANR	1098708	AdditiveExpression	ihsize - 14		1098003	1		-			
ANR	1098709	Identifier	ihsize		1098003	0					
ANR	1098710	PrimaryExpression	14		1098003	1					
ANR	1098711	PrimaryExpression	0		1098003	1					
ANR	1098712	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_PAL8	269:12:3958:3987	1098003	1	True				
ANR	1098713	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_PAL8		1098003	0		=			
ANR	1098714	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098715	Identifier	avctx		1098003	0					
ANR	1098716	Identifier	pix_fmt		1098003	1					
ANR	1098717	Identifier	PIX_FMT_PAL8		1098003	1					
ANR	1098718	ElseStatement	else		1098003	0					
ANR	1098719	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_GRAY8	273:12:4016:4046	1098003	0	True				
ANR	1098720	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_GRAY8		1098003	0		=			
ANR	1098721	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098722	Identifier	avctx		1098003	0					
ANR	1098723	Identifier	pix_fmt		1098003	1					
ANR	1098724	Identifier	PIX_FMT_GRAY8		1098003	1					
ANR	1098725	BreakStatement	break ;	275:8:4057:4062	1098003	13	True				
ANR	1098726	Label	case 1 :	277:4:4069:4075	1098003	14	True				
ANR	1098727	Label	case 4 :	279:4:4082:4088	1098003	15	True				
ANR	1098728	IfStatement	if ( hsize - ihsize - 14 > 0 )		1098003	16					
ANR	1098729	Condition	hsize - ihsize - 14 > 0	281:11:4102:4124	1098003	0	True				
ANR	1098730	RelationalExpression	hsize - ihsize - 14 > 0		1098003	0		>			
ANR	1098731	AdditiveExpression	hsize - ihsize - 14		1098003	0		-			
ANR	1098732	Identifier	hsize		1098003	0					
ANR	1098733	AdditiveExpression	ihsize - 14		1098003	1		-			
ANR	1098734	Identifier	ihsize		1098003	0					
ANR	1098735	PrimaryExpression	14		1098003	1					
ANR	1098736	PrimaryExpression	0		1098003	1					
ANR	1098737	CompoundStatement		275:35:3970:3970	1098003	1					
ANR	1098738	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_PAL8	283:12:4141:4170	1098003	0	True				
ANR	1098739	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_PAL8		1098003	0		=			
ANR	1098740	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098741	Identifier	avctx		1098003	0					
ANR	1098742	Identifier	pix_fmt		1098003	1					
ANR	1098743	Identifier	PIX_FMT_PAL8		1098003	1					
ANR	1098744	ElseStatement	else		1098003	0					
ANR	1098745	CompoundStatement		279:13:4030:4030	1098003	0					
ANR	1098746	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %d-colour BMP\\n"" , 1 << depth )"	287:12:4201:4277	1098003	0	True				
ANR	1098747	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %d-colour BMP\\n"" , 1 << depth )"		1098003	0					
ANR	1098748	Callee	av_log		1098003	0					
ANR	1098749	Identifier	av_log		1098003	0					
ANR	1098750	ArgumentList	avctx		1098003	1					
ANR	1098751	Argument	avctx		1098003	0					
ANR	1098752	Identifier	avctx		1098003	0					
ANR	1098753	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098754	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098755	Argument	"""Unknown palette for %d-colour BMP\\n"""		1098003	2					
ANR	1098756	PrimaryExpression	"""Unknown palette for %d-colour BMP\\n"""		1098003	0					
ANR	1098757	Argument	1 << depth		1098003	3					
ANR	1098758	ShiftExpression	1 << depth		1098003	0		<<			
ANR	1098759	PrimaryExpression	1		1098003	0					
ANR	1098760	Identifier	depth		1098003	1					
ANR	1098761	ReturnStatement	return - 1 ;	289:12:4292:4301	1098003	1	True				
ANR	1098762	UnaryOperationExpression	- 1		1098003	0					
ANR	1098763	UnaryOperator	-		1098003	0					
ANR	1098764	PrimaryExpression	1		1098003	1					
ANR	1098765	BreakStatement	break ;	293:8:4323:4328	1098003	17	True				
ANR	1098766	Label	default :	295:4:4335:4342	1098003	18	True				
ANR	1098767	Identifier	default		1098003	0					
ANR	1098768	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"	297:8:4353:4415	1098003	19	True				
ANR	1098769	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"		1098003	0					
ANR	1098770	Callee	av_log		1098003	0					
ANR	1098771	Identifier	av_log		1098003	0					
ANR	1098772	ArgumentList	avctx		1098003	1					
ANR	1098773	Argument	avctx		1098003	0					
ANR	1098774	Identifier	avctx		1098003	0					
ANR	1098775	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098776	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098777	Argument	"""depth %d not supported\\n"""		1098003	2					
ANR	1098778	PrimaryExpression	"""depth %d not supported\\n"""		1098003	0					
ANR	1098779	Argument	depth		1098003	3					
ANR	1098780	Identifier	depth		1098003	0					
ANR	1098781	ReturnStatement	return - 1 ;	299:8:4426:4435	1098003	20	True				
ANR	1098782	UnaryOperationExpression	- 1		1098003	0					
ANR	1098783	UnaryOperator	-		1098003	0					
ANR	1098784	PrimaryExpression	1		1098003	1					
ANR	1098785	IfStatement	if ( avctx -> pix_fmt == PIX_FMT_NONE )		1098003	36					
ANR	1098786	Condition	avctx -> pix_fmt == PIX_FMT_NONE	305:7:4454:4483	1098003	0	True				
ANR	1098787	EqualityExpression	avctx -> pix_fmt == PIX_FMT_NONE		1098003	0		==			
ANR	1098788	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1098789	Identifier	avctx		1098003	0					
ANR	1098790	Identifier	pix_fmt		1098003	1					
ANR	1098791	Identifier	PIX_FMT_NONE		1098003	1					
ANR	1098792	CompoundStatement		299:38:4329:4329	1098003	1					
ANR	1098793	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"	307:8:4496:4553	1098003	0	True				
ANR	1098794	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"		1098003	0					
ANR	1098795	Callee	av_log		1098003	0					
ANR	1098796	Identifier	av_log		1098003	0					
ANR	1098797	ArgumentList	avctx		1098003	1					
ANR	1098798	Argument	avctx		1098003	0					
ANR	1098799	Identifier	avctx		1098003	0					
ANR	1098800	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098801	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098802	Argument	"""unsupported pixel format\\n"""		1098003	2					
ANR	1098803	PrimaryExpression	"""unsupported pixel format\\n"""		1098003	0					
ANR	1098804	ReturnStatement	return - 1 ;	309:8:4564:4573	1098003	1	True				
ANR	1098805	UnaryOperationExpression	- 1		1098003	0					
ANR	1098806	UnaryOperator	-		1098003	0					
ANR	1098807	PrimaryExpression	1		1098003	1					
ANR	1098808	IfStatement	if ( p -> data [ 0 ] )		1098003	37					
ANR	1098809	Condition	p -> data [ 0 ]	315:7:4592:4601	1098003	0	True				
ANR	1098810	ArrayIndexing	p -> data [ 0 ]		1098003	0					
ANR	1098811	PtrMemberAccess	p -> data		1098003	0					
ANR	1098812	Identifier	p		1098003	0					
ANR	1098813	Identifier	data		1098003	1					
ANR	1098814	PrimaryExpression	0		1098003	1					
ANR	1098815	ExpressionStatement	"avctx -> release_buffer ( avctx , p )"	317:8:4613:4644	1098003	1	True				
ANR	1098816	CallExpression	"avctx -> release_buffer ( avctx , p )"		1098003	0					
ANR	1098817	Callee	avctx -> release_buffer		1098003	0					
ANR	1098818	PtrMemberAccess	avctx -> release_buffer		1098003	0					
ANR	1098819	Identifier	avctx		1098003	0					
ANR	1098820	Identifier	release_buffer		1098003	1					
ANR	1098821	ArgumentList	avctx		1098003	1					
ANR	1098822	Argument	avctx		1098003	0					
ANR	1098823	Identifier	avctx		1098003	0					
ANR	1098824	Argument	p		1098003	1					
ANR	1098825	Identifier	p		1098003	0					
ANR	1098826	ExpressionStatement	p -> reference = 0	321:4:4653:4669	1098003	38	True				
ANR	1098827	AssignmentExpression	p -> reference = 0		1098003	0		=			
ANR	1098828	PtrMemberAccess	p -> reference		1098003	0					
ANR	1098829	Identifier	p		1098003	0					
ANR	1098830	Identifier	reference		1098003	1					
ANR	1098831	PrimaryExpression	0		1098003	1					
ANR	1098832	IfStatement	"if ( avctx -> get_buffer ( avctx , p ) < 0 )"		1098003	39					
ANR	1098833	Condition	"avctx -> get_buffer ( avctx , p ) < 0"	323:7:4679:4709	1098003	0	True				
ANR	1098834	RelationalExpression	"avctx -> get_buffer ( avctx , p ) < 0"		1098003	0		<			
ANR	1098835	CallExpression	"avctx -> get_buffer ( avctx , p )"		1098003	0					
ANR	1098836	Callee	avctx -> get_buffer		1098003	0					
ANR	1098837	PtrMemberAccess	avctx -> get_buffer		1098003	0					
ANR	1098838	Identifier	avctx		1098003	0					
ANR	1098839	Identifier	get_buffer		1098003	1					
ANR	1098840	ArgumentList	avctx		1098003	1					
ANR	1098841	Argument	avctx		1098003	0					
ANR	1098842	Identifier	avctx		1098003	0					
ANR	1098843	Argument	p		1098003	1					
ANR	1098844	Identifier	p		1098003	0					
ANR	1098845	PrimaryExpression	0		1098003	1					
ANR	1098846	CompoundStatement		317:39:4555:4555	1098003	1					
ANR	1098847	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	325:8:4722:4774	1098003	0	True				
ANR	1098848	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		1098003	0					
ANR	1098849	Callee	av_log		1098003	0					
ANR	1098850	Identifier	av_log		1098003	0					
ANR	1098851	ArgumentList	avctx		1098003	1					
ANR	1098852	Argument	avctx		1098003	0					
ANR	1098853	Identifier	avctx		1098003	0					
ANR	1098854	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098855	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098856	Argument	"""get_buffer() failed\\n"""		1098003	2					
ANR	1098857	PrimaryExpression	"""get_buffer() failed\\n"""		1098003	0					
ANR	1098858	ReturnStatement	return - 1 ;	327:8:4785:4794	1098003	1	True				
ANR	1098859	UnaryOperationExpression	- 1		1098003	0					
ANR	1098860	UnaryOperator	-		1098003	0					
ANR	1098861	PrimaryExpression	1		1098003	1					
ANR	1098862	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	331:4:4808:4840	1098003	40	True				
ANR	1098863	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		1098003	0		=			
ANR	1098864	PtrMemberAccess	p -> pict_type		1098003	0					
ANR	1098865	Identifier	p		1098003	0					
ANR	1098866	Identifier	pict_type		1098003	1					
ANR	1098867	Identifier	AV_PICTURE_TYPE_I		1098003	1					
ANR	1098868	ExpressionStatement	p -> key_frame = 1	333:4:4847:4863	1098003	41	True				
ANR	1098869	AssignmentExpression	p -> key_frame = 1		1098003	0		=			
ANR	1098870	PtrMemberAccess	p -> key_frame		1098003	0					
ANR	1098871	Identifier	p		1098003	0					
ANR	1098872	Identifier	key_frame		1098003	1					
ANR	1098873	PrimaryExpression	1		1098003	1					
ANR	1098874	ExpressionStatement	buf = buf0 + hsize	337:4:4872:4890	1098003	42	True				
ANR	1098875	AssignmentExpression	buf = buf0 + hsize		1098003	0		=			
ANR	1098876	Identifier	buf		1098003	0					
ANR	1098877	AdditiveExpression	buf0 + hsize		1098003	1		+			
ANR	1098878	Identifier	buf0		1098003	0					
ANR	1098879	Identifier	hsize		1098003	1					
ANR	1098880	ExpressionStatement	dsize = buf_size - hsize	339:4:4897:4921	1098003	43	True				
ANR	1098881	AssignmentExpression	dsize = buf_size - hsize		1098003	0		=			
ANR	1098882	Identifier	dsize		1098003	0					
ANR	1098883	AdditiveExpression	buf_size - hsize		1098003	1		-			
ANR	1098884	Identifier	buf_size		1098003	0					
ANR	1098885	Identifier	hsize		1098003	1					
ANR	1098886	ExpressionStatement	n = ( ( avctx -> width * depth ) / 8 + 3 ) & ~3	345:4:4973:5014	1098003	44	True				
ANR	1098887	AssignmentExpression	n = ( ( avctx -> width * depth ) / 8 + 3 ) & ~3		1098003	0		=			
ANR	1098888	Identifier	n		1098003	0					
ANR	1098889	BitAndExpression	( ( avctx -> width * depth ) / 8 + 3 ) & ~3		1098003	1		&			
ANR	1098890	AdditiveExpression	( avctx -> width * depth ) / 8 + 3		1098003	0		+			
ANR	1098891	MultiplicativeExpression	( avctx -> width * depth ) / 8		1098003	0		/			
ANR	1098892	MultiplicativeExpression	avctx -> width * depth		1098003	0		*			
ANR	1098893	PtrMemberAccess	avctx -> width		1098003	0					
ANR	1098894	Identifier	avctx		1098003	0					
ANR	1098895	Identifier	width		1098003	1					
ANR	1098896	Identifier	depth		1098003	1					
ANR	1098897	PrimaryExpression	8		1098003	1					
ANR	1098898	PrimaryExpression	3		1098003	1					
ANR	1098899	Identifier	~3		1098003	1					
ANR	1098900	IfStatement	if ( n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8 )		1098003	45					
ANR	1098901	Condition	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8	349:7:5026:5090	1098003	0	True				
ANR	1098902	AndExpression	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8		1098003	0		&&			
ANR	1098903	RelationalExpression	n * avctx -> height > dsize		1098003	0		>			
ANR	1098904	MultiplicativeExpression	n * avctx -> height		1098003	0		*			
ANR	1098905	Identifier	n		1098003	0					
ANR	1098906	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1098907	Identifier	avctx		1098003	0					
ANR	1098908	Identifier	height		1098003	1					
ANR	1098909	Identifier	dsize		1098003	1					
ANR	1098910	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1098003	1		&&			
ANR	1098911	EqualityExpression	comp != BMP_RLE4		1098003	0		!=			
ANR	1098912	Identifier	comp		1098003	0					
ANR	1098913	Identifier	BMP_RLE4		1098003	1					
ANR	1098914	EqualityExpression	comp != BMP_RLE8		1098003	1		!=			
ANR	1098915	Identifier	comp		1098003	0					
ANR	1098916	Identifier	BMP_RLE8		1098003	1					
ANR	1098917	CompoundStatement		343:73:4936:4936	1098003	1					
ANR	1098918	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"	351:8:5103:5203	1098003	0	True				
ANR	1098919	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"		1098003	0					
ANR	1098920	Callee	av_log		1098003	0					
ANR	1098921	Identifier	av_log		1098003	0					
ANR	1098922	ArgumentList	avctx		1098003	1					
ANR	1098923	Argument	avctx		1098003	0					
ANR	1098924	Identifier	avctx		1098003	0					
ANR	1098925	Argument	AV_LOG_ERROR		1098003	1					
ANR	1098926	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1098927	Argument	"""not enough data (%d < %d)\\n"""		1098003	2					
ANR	1098928	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1098003	0					
ANR	1098929	Argument	dsize		1098003	3					
ANR	1098930	Identifier	dsize		1098003	0					
ANR	1098931	Argument	n * avctx -> height		1098003	4					
ANR	1098932	MultiplicativeExpression	n * avctx -> height		1098003	0		*			
ANR	1098933	Identifier	n		1098003	0					
ANR	1098934	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1098935	Identifier	avctx		1098003	0					
ANR	1098936	Identifier	height		1098003	1					
ANR	1098937	ReturnStatement	return - 1 ;	355:8:5214:5223	1098003	1	True				
ANR	1098938	UnaryOperationExpression	- 1		1098003	0					
ANR	1098939	UnaryOperator	-		1098003	0					
ANR	1098940	PrimaryExpression	1		1098003	1					
ANR	1098941	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1098003	46					
ANR	1098942	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	363:7:5325:5360	1098003	0	True				
ANR	1098943	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1098003	0		||			
ANR	1098944	EqualityExpression	comp == BMP_RLE4		1098003	0		==			
ANR	1098945	Identifier	comp		1098003	0					
ANR	1098946	Identifier	BMP_RLE4		1098003	1					
ANR	1098947	EqualityExpression	comp == BMP_RLE8		1098003	1		==			
ANR	1098948	Identifier	comp		1098003	0					
ANR	1098949	Identifier	BMP_RLE8		1098003	1					
ANR	1098950	ExpressionStatement	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"	365:8:5372:5425	1098003	1	True				
ANR	1098951	CallExpression	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"		1098003	0					
ANR	1098952	Callee	memset		1098003	0					
ANR	1098953	Identifier	memset		1098003	0					
ANR	1098954	ArgumentList	p -> data [ 0 ]		1098003	1					
ANR	1098955	Argument	p -> data [ 0 ]		1098003	0					
ANR	1098956	ArrayIndexing	p -> data [ 0 ]		1098003	0					
ANR	1098957	PtrMemberAccess	p -> data		1098003	0					
ANR	1098958	Identifier	p		1098003	0					
ANR	1098959	Identifier	data		1098003	1					
ANR	1098960	PrimaryExpression	0		1098003	1					
ANR	1098961	Argument	0		1098003	1					
ANR	1098962	PrimaryExpression	0		1098003	0					
ANR	1098963	Argument	avctx -> height * p -> linesize [ 0 ]		1098003	2					
ANR	1098964	MultiplicativeExpression	avctx -> height * p -> linesize [ 0 ]		1098003	0		*			
ANR	1098965	PtrMemberAccess	avctx -> height		1098003	0					
ANR	1098966	Identifier	avctx		1098003	0					
ANR	1098967	Identifier	height		1098003	1					
ANR	1098968	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1098969	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1098970	Identifier	p		1098003	0					
ANR	1098971	Identifier	linesize		1098003	1					
ANR	1098972	PrimaryExpression	0		1098003	1					
ANR	1098973	IfStatement	if ( depth == 4 || depth == 8 )		1098003	47					
ANR	1098974	Condition	depth == 4 || depth == 8	369:7:5437:5460	1098003	0	True				
ANR	1098975	OrExpression	depth == 4 || depth == 8		1098003	0		||			
ANR	1098976	EqualityExpression	depth == 4		1098003	0		==			
ANR	1098977	Identifier	depth		1098003	0					
ANR	1098978	PrimaryExpression	4		1098003	1					
ANR	1098979	EqualityExpression	depth == 8		1098003	1		==			
ANR	1098980	Identifier	depth		1098003	0					
ANR	1098981	PrimaryExpression	8		1098003	1					
ANR	1098982	ExpressionStatement	"memset ( p -> data [ 1 ] , 0 , 1024 )"	371:8:5472:5499	1098003	1	True				
ANR	1098983	CallExpression	"memset ( p -> data [ 1 ] , 0 , 1024 )"		1098003	0					
ANR	1098984	Callee	memset		1098003	0					
ANR	1098985	Identifier	memset		1098003	0					
ANR	1098986	ArgumentList	p -> data [ 1 ]		1098003	1					
ANR	1098987	Argument	p -> data [ 1 ]		1098003	0					
ANR	1098988	ArrayIndexing	p -> data [ 1 ]		1098003	0					
ANR	1098989	PtrMemberAccess	p -> data		1098003	0					
ANR	1098990	Identifier	p		1098003	0					
ANR	1098991	Identifier	data		1098003	1					
ANR	1098992	PrimaryExpression	1		1098003	1					
ANR	1098993	Argument	0		1098003	1					
ANR	1098994	PrimaryExpression	0		1098003	0					
ANR	1098995	Argument	1024		1098003	2					
ANR	1098996	PrimaryExpression	1024		1098003	0					
ANR	1098997	IfStatement	if ( height > 0 )		1098003	48					
ANR	1098998	Condition	height > 0	375:7:5511:5520	1098003	0	True				
ANR	1098999	RelationalExpression	height > 0		1098003	0		>			
ANR	1099000	Identifier	height		1098003	0					
ANR	1099001	PrimaryExpression	0		1098003	1					
ANR	1099002	CompoundStatement		369:18:5366:5366	1098003	1					
ANR	1099003	ExpressionStatement	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]	377:8:5533:5588	1098003	0	True				
ANR	1099004	AssignmentExpression	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1098003	0		=			
ANR	1099005	Identifier	ptr		1098003	0					
ANR	1099006	AdditiveExpression	p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1098003	1		+			
ANR	1099007	ArrayIndexing	p -> data [ 0 ]		1098003	0					
ANR	1099008	PtrMemberAccess	p -> data		1098003	0					
ANR	1099009	Identifier	p		1098003	0					
ANR	1099010	Identifier	data		1098003	1					
ANR	1099011	PrimaryExpression	0		1098003	1					
ANR	1099012	MultiplicativeExpression	( avctx -> height - 1 ) * p -> linesize [ 0 ]		1098003	1		*			
ANR	1099013	AdditiveExpression	avctx -> height - 1		1098003	0		-			
ANR	1099014	PtrMemberAccess	avctx -> height		1098003	0					
ANR	1099015	Identifier	avctx		1098003	0					
ANR	1099016	Identifier	height		1098003	1					
ANR	1099017	PrimaryExpression	1		1098003	1					
ANR	1099018	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1099019	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099020	Identifier	p		1098003	0					
ANR	1099021	Identifier	linesize		1098003	1					
ANR	1099022	PrimaryExpression	0		1098003	1					
ANR	1099023	ExpressionStatement	linesize = - p -> linesize [ 0 ]	379:8:5599:5625	1098003	1	True				
ANR	1099024	AssignmentExpression	linesize = - p -> linesize [ 0 ]		1098003	0		=			
ANR	1099025	Identifier	linesize		1098003	0					
ANR	1099026	UnaryOperationExpression	- p -> linesize [ 0 ]		1098003	1					
ANR	1099027	UnaryOperator	-		1098003	0					
ANR	1099028	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1099029	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099030	Identifier	p		1098003	0					
ANR	1099031	Identifier	linesize		1098003	1					
ANR	1099032	PrimaryExpression	0		1098003	1					
ANR	1099033	ElseStatement	else		1098003	0					
ANR	1099034	CompoundStatement		375:11:5483:5483	1098003	0					
ANR	1099035	ExpressionStatement	ptr = p -> data [ 0 ]	383:8:5650:5666	1098003	0	True				
ANR	1099036	AssignmentExpression	ptr = p -> data [ 0 ]		1098003	0		=			
ANR	1099037	Identifier	ptr		1098003	0					
ANR	1099038	ArrayIndexing	p -> data [ 0 ]		1098003	1					
ANR	1099039	PtrMemberAccess	p -> data		1098003	0					
ANR	1099040	Identifier	p		1098003	0					
ANR	1099041	Identifier	data		1098003	1					
ANR	1099042	PrimaryExpression	0		1098003	1					
ANR	1099043	ExpressionStatement	linesize = p -> linesize [ 0 ]	385:8:5677:5702	1098003	1	True				
ANR	1099044	AssignmentExpression	linesize = p -> linesize [ 0 ]		1098003	0		=			
ANR	1099045	Identifier	linesize		1098003	0					
ANR	1099046	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1099047	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099048	Identifier	p		1098003	0					
ANR	1099049	Identifier	linesize		1098003	1					
ANR	1099050	PrimaryExpression	0		1098003	1					
ANR	1099051	IfStatement	if ( avctx -> pix_fmt == PIX_FMT_PAL8 )		1098003	49					
ANR	1099052	Condition	avctx -> pix_fmt == PIX_FMT_PAL8	391:7:5721:5750	1098003	0	True				
ANR	1099053	EqualityExpression	avctx -> pix_fmt == PIX_FMT_PAL8		1098003	0		==			
ANR	1099054	PtrMemberAccess	avctx -> pix_fmt		1098003	0					
ANR	1099055	Identifier	avctx		1098003	0					
ANR	1099056	Identifier	pix_fmt		1098003	1					
ANR	1099057	Identifier	PIX_FMT_PAL8		1098003	1					
ANR	1099058	CompoundStatement		387:8:5607:5630	1098003	1					
ANR	1099059	IdentifierDeclStatement	int colors = 1 << depth ;	393:8:5763:5786	1098003	0	True				
ANR	1099060	IdentifierDecl	colors = 1 << depth		1098003	0					
ANR	1099061	IdentifierDeclType	int		1098003	0					
ANR	1099062	Identifier	colors		1098003	1					
ANR	1099063	AssignmentExpression	colors = 1 << depth		1098003	2		=			
ANR	1099064	Identifier	colors		1098003	0					
ANR	1099065	ShiftExpression	1 << depth		1098003	1		<<			
ANR	1099066	PrimaryExpression	1		1098003	0					
ANR	1099067	Identifier	depth		1098003	1					
ANR	1099068	IfStatement	if ( ihsize >= 36 )		1098003	1					
ANR	1099069	Condition	ihsize >= 36	395:11:5800:5811	1098003	0	True				
ANR	1099070	RelationalExpression	ihsize >= 36		1098003	0		>=			
ANR	1099071	Identifier	ihsize		1098003	0					
ANR	1099072	PrimaryExpression	36		1098003	1					
ANR	1099073	CompoundStatement		391:12:5672:5677	1098003	1					
ANR	1099074	IdentifierDeclStatement	int t ;	397:12:5828:5833	1098003	0	True				
ANR	1099075	IdentifierDecl	t		1098003	0					
ANR	1099076	IdentifierDeclType	int		1098003	0					
ANR	1099077	Identifier	t		1098003	1					
ANR	1099078	ExpressionStatement	buf = buf0 + 46	399:12:5848:5863	1098003	1	True				
ANR	1099079	AssignmentExpression	buf = buf0 + 46		1098003	0		=			
ANR	1099080	Identifier	buf		1098003	0					
ANR	1099081	AdditiveExpression	buf0 + 46		1098003	1		+			
ANR	1099082	Identifier	buf0		1098003	0					
ANR	1099083	PrimaryExpression	46		1098003	1					
ANR	1099084	ExpressionStatement	t = bytestream_get_le32 ( & buf )	401:12:5878:5907	1098003	2	True				
ANR	1099085	AssignmentExpression	t = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1099086	Identifier	t		1098003	0					
ANR	1099087	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1099088	Callee	bytestream_get_le32		1098003	0					
ANR	1099089	Identifier	bytestream_get_le32		1098003	0					
ANR	1099090	ArgumentList	& buf		1098003	1					
ANR	1099091	Argument	& buf		1098003	0					
ANR	1099092	UnaryOperationExpression	& buf		1098003	0					
ANR	1099093	UnaryOperator	&		1098003	0					
ANR	1099094	Identifier	buf		1098003	1					
ANR	1099095	IfStatement	if ( t < 0 || t > ( 1 << depth ) )		1098003	3					
ANR	1099096	Condition	t < 0 || t > ( 1 << depth )	403:15:5925:5949	1098003	0	True				
ANR	1099097	OrExpression	t < 0 || t > ( 1 << depth )		1098003	0		||			
ANR	1099098	RelationalExpression	t < 0		1098003	0		<			
ANR	1099099	Identifier	t		1098003	0					
ANR	1099100	PrimaryExpression	0		1098003	1					
ANR	1099101	RelationalExpression	t > ( 1 << depth )		1098003	1		>			
ANR	1099102	Identifier	t		1098003	0					
ANR	1099103	ShiftExpression	1 << depth		1098003	1		<<			
ANR	1099104	PrimaryExpression	1		1098003	0					
ANR	1099105	Identifier	depth		1098003	1					
ANR	1099106	CompoundStatement		397:41:5795:5795	1098003	1					
ANR	1099107	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %d\\n"" , t , depth )"	405:16:5970:6060	1098003	0	True				
ANR	1099108	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %d\\n"" , t , depth )"		1098003	0					
ANR	1099109	Callee	av_log		1098003	0					
ANR	1099110	Identifier	av_log		1098003	0					
ANR	1099111	ArgumentList	avctx		1098003	1					
ANR	1099112	Argument	avctx		1098003	0					
ANR	1099113	Identifier	avctx		1098003	0					
ANR	1099114	Argument	AV_LOG_ERROR		1098003	1					
ANR	1099115	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1099116	Argument	"""Incorrect number of colors - %X for bitdepth %d\\n"""		1098003	2					
ANR	1099117	PrimaryExpression	"""Incorrect number of colors - %X for bitdepth %d\\n"""		1098003	0					
ANR	1099118	Argument	t		1098003	3					
ANR	1099119	Identifier	t		1098003	0					
ANR	1099120	Argument	depth		1098003	4					
ANR	1099121	Identifier	depth		1098003	0					
ANR	1099122	ElseStatement	else		1098003	0					
ANR	1099123	IfStatement	if ( t )		1098003	0					
ANR	1099124	Condition	t	407:21:6084:6084	1098003	0	True				
ANR	1099125	Identifier	t		1098003	0					
ANR	1099126	CompoundStatement		401:23:5930:5930	1098003	1					
ANR	1099127	ExpressionStatement	colors = t	409:16:6105:6115	1098003	0	True				
ANR	1099128	AssignmentExpression	colors = t		1098003	0		=			
ANR	1099129	Identifier	colors		1098003	0					
ANR	1099130	Identifier	t		1098003	1					
ANR	1099131	ExpressionStatement	buf = buf0 + 14 + ihsize	415:8:6152:6176	1098003	2	True				
ANR	1099132	AssignmentExpression	buf = buf0 + 14 + ihsize		1098003	0		=			
ANR	1099133	Identifier	buf		1098003	0					
ANR	1099134	AdditiveExpression	buf0 + 14 + ihsize		1098003	1		+			
ANR	1099135	Identifier	buf0		1098003	0					
ANR	1099136	AdditiveExpression	14 + ihsize		1098003	1		+			
ANR	1099137	PrimaryExpression	14		1098003	0					
ANR	1099138	Identifier	ihsize		1098003	1					
ANR	1099139	IfStatement	if ( ( hsize - ihsize - 14 ) < ( colors << 2 ) )		1098003	3					
ANR	1099140	Condition	( hsize - ihsize - 14 ) < ( colors << 2 )	417:11:6209:6241	1098003	0	True				
ANR	1099141	RelationalExpression	( hsize - ihsize - 14 ) < ( colors << 2 )		1098003	0		<			
ANR	1099142	AdditiveExpression	hsize - ihsize - 14		1098003	0		-			
ANR	1099143	Identifier	hsize		1098003	0					
ANR	1099144	AdditiveExpression	ihsize - 14		1098003	1		-			
ANR	1099145	Identifier	ihsize		1098003	0					
ANR	1099146	PrimaryExpression	14		1098003	1					
ANR	1099147	ShiftExpression	colors << 2		1098003	1		<<			
ANR	1099148	Identifier	colors		1098003	0					
ANR	1099149	PrimaryExpression	2		1098003	1					
ANR	1099150	CompoundStatement		411:45:6087:6087	1098003	1					
ANR	1099151	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1098003	0					
ANR	1099152	ForInit	i = 0 ;	419:16:6304:6309	1098003	0	True				
ANR	1099153	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099154	Identifier	i		1098003	0					
ANR	1099155	PrimaryExpression	0		1098003	1					
ANR	1099156	Condition	i < colors	419:23:6311:6320	1098003	1	True				
ANR	1099157	RelationalExpression	i < colors		1098003	0		<			
ANR	1099158	Identifier	i		1098003	0					
ANR	1099159	Identifier	colors		1098003	1					
ANR	1099160	PostIncDecOperationExpression	i ++	419:35:6323:6325	1098003	2	True				
ANR	1099161	Identifier	i		1098003	0					
ANR	1099162	IncDec	++		1098003	1					
ANR	1099163	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le24 ( & buf )	421:16:6345:6399	1098003	3	True				
ANR	1099164	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le24 ( & buf )		1098003	0		=			
ANR	1099165	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1098003	0					
ANR	1099166	CastExpression	( uint32_t * ) p -> data [ 1 ]		1098003	0					
ANR	1099167	CastTarget	uint32_t *		1098003	0					
ANR	1099168	ArrayIndexing	p -> data [ 1 ]		1098003	1					
ANR	1099169	PtrMemberAccess	p -> data		1098003	0					
ANR	1099170	Identifier	p		1098003	0					
ANR	1099171	Identifier	data		1098003	1					
ANR	1099172	PrimaryExpression	1		1098003	1					
ANR	1099173	Identifier	i		1098003	1					
ANR	1099174	CallExpression	bytestream_get_le24 ( & buf )		1098003	1					
ANR	1099175	Callee	bytestream_get_le24		1098003	0					
ANR	1099176	Identifier	bytestream_get_le24		1098003	0					
ANR	1099177	ArgumentList	& buf		1098003	1					
ANR	1099178	Argument	& buf		1098003	0					
ANR	1099179	UnaryOperationExpression	& buf		1098003	0					
ANR	1099180	UnaryOperator	&		1098003	0					
ANR	1099181	Identifier	buf		1098003	1					
ANR	1099182	ElseStatement	else		1098003	0					
ANR	1099183	CompoundStatement		417:13:6259:6259	1098003	0					
ANR	1099184	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1098003	0					
ANR	1099185	ForInit	i = 0 ;	425:16:6434:6439	1098003	0	True				
ANR	1099186	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099187	Identifier	i		1098003	0					
ANR	1099188	PrimaryExpression	0		1098003	1					
ANR	1099189	Condition	i < colors	425:23:6441:6450	1098003	1	True				
ANR	1099190	RelationalExpression	i < colors		1098003	0		<			
ANR	1099191	Identifier	i		1098003	0					
ANR	1099192	Identifier	colors		1098003	1					
ANR	1099193	PostIncDecOperationExpression	i ++	425:35:6453:6455	1098003	2	True				
ANR	1099194	Identifier	i		1098003	0					
ANR	1099195	IncDec	++		1098003	1					
ANR	1099196	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le32 ( & buf )	427:16:6475:6529	1098003	3	True				
ANR	1099197	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le32 ( & buf )		1098003	0		=			
ANR	1099198	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1098003	0					
ANR	1099199	CastExpression	( uint32_t * ) p -> data [ 1 ]		1098003	0					
ANR	1099200	CastTarget	uint32_t *		1098003	0					
ANR	1099201	ArrayIndexing	p -> data [ 1 ]		1098003	1					
ANR	1099202	PtrMemberAccess	p -> data		1098003	0					
ANR	1099203	Identifier	p		1098003	0					
ANR	1099204	Identifier	data		1098003	1					
ANR	1099205	PrimaryExpression	1		1098003	1					
ANR	1099206	Identifier	i		1098003	1					
ANR	1099207	CallExpression	bytestream_get_le32 ( & buf )		1098003	1					
ANR	1099208	Callee	bytestream_get_le32		1098003	0					
ANR	1099209	Identifier	bytestream_get_le32		1098003	0					
ANR	1099210	ArgumentList	& buf		1098003	1					
ANR	1099211	Argument	& buf		1098003	0					
ANR	1099212	UnaryOperationExpression	& buf		1098003	0					
ANR	1099213	UnaryOperator	&		1098003	0					
ANR	1099214	Identifier	buf		1098003	1					
ANR	1099215	ExpressionStatement	buf = buf0 + hsize	431:8:6551:6569	1098003	4	True				
ANR	1099216	AssignmentExpression	buf = buf0 + hsize		1098003	0		=			
ANR	1099217	Identifier	buf		1098003	0					
ANR	1099218	AdditiveExpression	buf0 + hsize		1098003	1		+			
ANR	1099219	Identifier	buf0		1098003	0					
ANR	1099220	Identifier	hsize		1098003	1					
ANR	1099221	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1098003	50					
ANR	1099222	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	435:7:6586:6621	1098003	0	True				
ANR	1099223	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1098003	0		||			
ANR	1099224	EqualityExpression	comp == BMP_RLE4		1098003	0		==			
ANR	1099225	Identifier	comp		1098003	0					
ANR	1099226	Identifier	BMP_RLE4		1098003	1					
ANR	1099227	EqualityExpression	comp == BMP_RLE8		1098003	1		==			
ANR	1099228	Identifier	comp		1098003	0					
ANR	1099229	Identifier	BMP_RLE8		1098003	1					
ANR	1099230	CompoundStatement		429:44:6467:6467	1098003	1					
ANR	1099231	IfStatement	if ( height < 0 )		1098003	0					
ANR	1099232	Condition	height < 0	437:11:6637:6646	1098003	0	True				
ANR	1099233	RelationalExpression	height < 0		1098003	0		<			
ANR	1099234	Identifier	height		1098003	0					
ANR	1099235	PrimaryExpression	0		1098003	1					
ANR	1099236	CompoundStatement		431:22:6492:6492	1098003	1					
ANR	1099237	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	439:12:6663:6713	1098003	0	True				
ANR	1099238	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1098003	0		+=			
ANR	1099239	ArrayIndexing	p -> data [ 0 ]		1098003	0					
ANR	1099240	PtrMemberAccess	p -> data		1098003	0					
ANR	1099241	Identifier	p		1098003	0					
ANR	1099242	Identifier	data		1098003	1					
ANR	1099243	PrimaryExpression	0		1098003	1					
ANR	1099244	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1098003	1		*			
ANR	1099245	ArrayIndexing	p -> linesize [ 0 ]		1098003	0					
ANR	1099246	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099247	Identifier	p		1098003	0					
ANR	1099248	Identifier	linesize		1098003	1					
ANR	1099249	PrimaryExpression	0		1098003	1					
ANR	1099250	AdditiveExpression	avctx -> height - 1		1098003	1		-			
ANR	1099251	PtrMemberAccess	avctx -> height		1098003	0					
ANR	1099252	Identifier	avctx		1098003	0					
ANR	1099253	Identifier	height		1098003	1					
ANR	1099254	PrimaryExpression	1		1098003	1					
ANR	1099255	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	441:12:6728:6760	1098003	1	True				
ANR	1099256	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1098003	0		=			
ANR	1099257	ArrayIndexing	p -> linesize [ 0 ]		1098003	0					
ANR	1099258	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099259	Identifier	p		1098003	0					
ANR	1099260	Identifier	linesize		1098003	1					
ANR	1099261	PrimaryExpression	0		1098003	1					
ANR	1099262	UnaryOperationExpression	- p -> linesize [ 0 ]		1098003	1					
ANR	1099263	UnaryOperator	-		1098003	0					
ANR	1099264	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1099265	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099266	Identifier	p		1098003	0					
ANR	1099267	Identifier	linesize		1098003	1					
ANR	1099268	PrimaryExpression	0		1098003	1					
ANR	1099269	ExpressionStatement	"ff_msrle_decode ( avctx , ( AVPicture * ) p , depth , buf , dsize )"	445:8:6782:6838	1098003	1	True				
ANR	1099270	CallExpression	"ff_msrle_decode ( avctx , ( AVPicture * ) p , depth , buf , dsize )"		1098003	0					
ANR	1099271	Callee	ff_msrle_decode		1098003	0					
ANR	1099272	Identifier	ff_msrle_decode		1098003	0					
ANR	1099273	ArgumentList	avctx		1098003	1					
ANR	1099274	Argument	avctx		1098003	0					
ANR	1099275	Identifier	avctx		1098003	0					
ANR	1099276	Argument	( AVPicture * ) p		1098003	1					
ANR	1099277	CastExpression	( AVPicture * ) p		1098003	0					
ANR	1099278	CastTarget	AVPicture *		1098003	0					
ANR	1099279	Identifier	p		1098003	1					
ANR	1099280	Argument	depth		1098003	2					
ANR	1099281	Identifier	depth		1098003	0					
ANR	1099282	Argument	buf		1098003	3					
ANR	1099283	Identifier	buf		1098003	0					
ANR	1099284	Argument	dsize		1098003	4					
ANR	1099285	Identifier	dsize		1098003	0					
ANR	1099286	IfStatement	if ( height < 0 )		1098003	2					
ANR	1099287	Condition	height < 0	447:11:6852:6861	1098003	0	True				
ANR	1099288	RelationalExpression	height < 0		1098003	0		<			
ANR	1099289	Identifier	height		1098003	0					
ANR	1099290	PrimaryExpression	0		1098003	1					
ANR	1099291	CompoundStatement		441:22:6707:6707	1098003	1					
ANR	1099292	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	449:12:6878:6928	1098003	0	True				
ANR	1099293	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1098003	0		+=			
ANR	1099294	ArrayIndexing	p -> data [ 0 ]		1098003	0					
ANR	1099295	PtrMemberAccess	p -> data		1098003	0					
ANR	1099296	Identifier	p		1098003	0					
ANR	1099297	Identifier	data		1098003	1					
ANR	1099298	PrimaryExpression	0		1098003	1					
ANR	1099299	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1098003	1		*			
ANR	1099300	ArrayIndexing	p -> linesize [ 0 ]		1098003	0					
ANR	1099301	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099302	Identifier	p		1098003	0					
ANR	1099303	Identifier	linesize		1098003	1					
ANR	1099304	PrimaryExpression	0		1098003	1					
ANR	1099305	AdditiveExpression	avctx -> height - 1		1098003	1		-			
ANR	1099306	PtrMemberAccess	avctx -> height		1098003	0					
ANR	1099307	Identifier	avctx		1098003	0					
ANR	1099308	Identifier	height		1098003	1					
ANR	1099309	PrimaryExpression	1		1098003	1					
ANR	1099310	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	451:12:6943:6975	1098003	1	True				
ANR	1099311	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1098003	0		=			
ANR	1099312	ArrayIndexing	p -> linesize [ 0 ]		1098003	0					
ANR	1099313	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099314	Identifier	p		1098003	0					
ANR	1099315	Identifier	linesize		1098003	1					
ANR	1099316	PrimaryExpression	0		1098003	1					
ANR	1099317	UnaryOperationExpression	- p -> linesize [ 0 ]		1098003	1					
ANR	1099318	UnaryOperator	-		1098003	0					
ANR	1099319	ArrayIndexing	p -> linesize [ 0 ]		1098003	1					
ANR	1099320	PtrMemberAccess	p -> linesize		1098003	0					
ANR	1099321	Identifier	p		1098003	0					
ANR	1099322	Identifier	linesize		1098003	1					
ANR	1099323	PrimaryExpression	0		1098003	1					
ANR	1099324	ElseStatement	else		1098003	0					
ANR	1099325	CompoundStatement		449:9:6842:6842	1098003	0					
ANR	1099326	SwitchStatement	switch ( depth )		1098003	0					
ANR	1099327	Condition	depth	457:15:7016:7020	1098003	0	True				
ANR	1099328	Identifier	depth		1098003	0					
ANR	1099329	CompoundStatement		451:21:6866:6866	1098003	1					
ANR	1099330	Label	case 1 :	459:8:7033:7039	1098003	0	True				
ANR	1099331	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1098003	1					
ANR	1099332	ForInit	i = 0 ;	461:17:7059:7064	1098003	0	True				
ANR	1099333	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099334	Identifier	i		1098003	0					
ANR	1099335	PrimaryExpression	0		1098003	1					
ANR	1099336	Condition	i < avctx -> height	461:24:7066:7082	1098003	1	True				
ANR	1099337	RelationalExpression	i < avctx -> height		1098003	0		<			
ANR	1099338	Identifier	i		1098003	0					
ANR	1099339	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1099340	Identifier	avctx		1098003	0					
ANR	1099341	Identifier	height		1098003	1					
ANR	1099342	PostIncDecOperationExpression	i ++	461:43:7085:7087	1098003	2	True				
ANR	1099343	Identifier	i		1098003	0					
ANR	1099344	IncDec	++		1098003	1					
ANR	1099345	CompoundStatement		457:16:6953:6958	1098003	3					
ANR	1099346	IdentifierDeclStatement	int j ;	463:16:7109:7114	1098003	0	True				
ANR	1099347	IdentifierDecl	j		1098003	0					
ANR	1099348	IdentifierDeclType	int		1098003	0					
ANR	1099349	Identifier	j		1098003	1					
ANR	1099350	ForStatement	for ( j = 0 ; j < n ; j ++ )		1098003	1					
ANR	1099351	ForInit	j = 0 ;	465:21:7138:7143	1098003	0	True				
ANR	1099352	AssignmentExpression	j = 0		1098003	0		=			
ANR	1099353	Identifier	j		1098003	0					
ANR	1099354	PrimaryExpression	0		1098003	1					
ANR	1099355	Condition	j < n	465:28:7145:7149	1098003	1	True				
ANR	1099356	RelationalExpression	j < n		1098003	0		<			
ANR	1099357	Identifier	j		1098003	0					
ANR	1099358	Identifier	n		1098003	1					
ANR	1099359	PostIncDecOperationExpression	j ++	465:35:7152:7154	1098003	2	True				
ANR	1099360	Identifier	j		1098003	0					
ANR	1099361	IncDec	++		1098003	1					
ANR	1099362	CompoundStatement		459:40:7001:7001	1098003	3					
ANR	1099363	ExpressionStatement	ptr [ j * 8 + 0 ] = buf [ j ] >> 7	467:20:7180:7205	1098003	0	True				
ANR	1099364	AssignmentExpression	ptr [ j * 8 + 0 ] = buf [ j ] >> 7		1098003	0		=			
ANR	1099365	ArrayIndexing	ptr [ j * 8 + 0 ]		1098003	0					
ANR	1099366	Identifier	ptr		1098003	0					
ANR	1099367	AdditiveExpression	j * 8 + 0		1098003	1		+			
ANR	1099368	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099369	Identifier	j		1098003	0					
ANR	1099370	PrimaryExpression	8		1098003	1					
ANR	1099371	PrimaryExpression	0		1098003	1					
ANR	1099372	ShiftExpression	buf [ j ] >> 7		1098003	1		>>			
ANR	1099373	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099374	Identifier	buf		1098003	0					
ANR	1099375	Identifier	j		1098003	1					
ANR	1099376	PrimaryExpression	7		1098003	1					
ANR	1099377	ExpressionStatement	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1	469:20:7228:7258	1098003	1	True				
ANR	1099378	AssignmentExpression	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1		1098003	0		=			
ANR	1099379	ArrayIndexing	ptr [ j * 8 + 1 ]		1098003	0					
ANR	1099380	Identifier	ptr		1098003	0					
ANR	1099381	AdditiveExpression	j * 8 + 1		1098003	1		+			
ANR	1099382	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099383	Identifier	j		1098003	0					
ANR	1099384	PrimaryExpression	8		1098003	1					
ANR	1099385	PrimaryExpression	1		1098003	1					
ANR	1099386	BitAndExpression	( buf [ j ] >> 6 ) & 1		1098003	1		&			
ANR	1099387	ShiftExpression	buf [ j ] >> 6		1098003	0		>>			
ANR	1099388	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099389	Identifier	buf		1098003	0					
ANR	1099390	Identifier	j		1098003	1					
ANR	1099391	PrimaryExpression	6		1098003	1					
ANR	1099392	PrimaryExpression	1		1098003	1					
ANR	1099393	ExpressionStatement	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1	471:20:7281:7311	1098003	2	True				
ANR	1099394	AssignmentExpression	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1		1098003	0		=			
ANR	1099395	ArrayIndexing	ptr [ j * 8 + 2 ]		1098003	0					
ANR	1099396	Identifier	ptr		1098003	0					
ANR	1099397	AdditiveExpression	j * 8 + 2		1098003	1		+			
ANR	1099398	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099399	Identifier	j		1098003	0					
ANR	1099400	PrimaryExpression	8		1098003	1					
ANR	1099401	PrimaryExpression	2		1098003	1					
ANR	1099402	BitAndExpression	( buf [ j ] >> 5 ) & 1		1098003	1		&			
ANR	1099403	ShiftExpression	buf [ j ] >> 5		1098003	0		>>			
ANR	1099404	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099405	Identifier	buf		1098003	0					
ANR	1099406	Identifier	j		1098003	1					
ANR	1099407	PrimaryExpression	5		1098003	1					
ANR	1099408	PrimaryExpression	1		1098003	1					
ANR	1099409	ExpressionStatement	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1	473:20:7334:7364	1098003	3	True				
ANR	1099410	AssignmentExpression	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1		1098003	0		=			
ANR	1099411	ArrayIndexing	ptr [ j * 8 + 3 ]		1098003	0					
ANR	1099412	Identifier	ptr		1098003	0					
ANR	1099413	AdditiveExpression	j * 8 + 3		1098003	1		+			
ANR	1099414	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099415	Identifier	j		1098003	0					
ANR	1099416	PrimaryExpression	8		1098003	1					
ANR	1099417	PrimaryExpression	3		1098003	1					
ANR	1099418	BitAndExpression	( buf [ j ] >> 4 ) & 1		1098003	1		&			
ANR	1099419	ShiftExpression	buf [ j ] >> 4		1098003	0		>>			
ANR	1099420	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099421	Identifier	buf		1098003	0					
ANR	1099422	Identifier	j		1098003	1					
ANR	1099423	PrimaryExpression	4		1098003	1					
ANR	1099424	PrimaryExpression	1		1098003	1					
ANR	1099425	ExpressionStatement	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1	475:20:7387:7417	1098003	4	True				
ANR	1099426	AssignmentExpression	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1		1098003	0		=			
ANR	1099427	ArrayIndexing	ptr [ j * 8 + 4 ]		1098003	0					
ANR	1099428	Identifier	ptr		1098003	0					
ANR	1099429	AdditiveExpression	j * 8 + 4		1098003	1		+			
ANR	1099430	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099431	Identifier	j		1098003	0					
ANR	1099432	PrimaryExpression	8		1098003	1					
ANR	1099433	PrimaryExpression	4		1098003	1					
ANR	1099434	BitAndExpression	( buf [ j ] >> 3 ) & 1		1098003	1		&			
ANR	1099435	ShiftExpression	buf [ j ] >> 3		1098003	0		>>			
ANR	1099436	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099437	Identifier	buf		1098003	0					
ANR	1099438	Identifier	j		1098003	1					
ANR	1099439	PrimaryExpression	3		1098003	1					
ANR	1099440	PrimaryExpression	1		1098003	1					
ANR	1099441	ExpressionStatement	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1	477:20:7440:7470	1098003	5	True				
ANR	1099442	AssignmentExpression	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1		1098003	0		=			
ANR	1099443	ArrayIndexing	ptr [ j * 8 + 5 ]		1098003	0					
ANR	1099444	Identifier	ptr		1098003	0					
ANR	1099445	AdditiveExpression	j * 8 + 5		1098003	1		+			
ANR	1099446	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099447	Identifier	j		1098003	0					
ANR	1099448	PrimaryExpression	8		1098003	1					
ANR	1099449	PrimaryExpression	5		1098003	1					
ANR	1099450	BitAndExpression	( buf [ j ] >> 2 ) & 1		1098003	1		&			
ANR	1099451	ShiftExpression	buf [ j ] >> 2		1098003	0		>>			
ANR	1099452	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099453	Identifier	buf		1098003	0					
ANR	1099454	Identifier	j		1098003	1					
ANR	1099455	PrimaryExpression	2		1098003	1					
ANR	1099456	PrimaryExpression	1		1098003	1					
ANR	1099457	ExpressionStatement	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1	479:20:7493:7523	1098003	6	True				
ANR	1099458	AssignmentExpression	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1		1098003	0		=			
ANR	1099459	ArrayIndexing	ptr [ j * 8 + 6 ]		1098003	0					
ANR	1099460	Identifier	ptr		1098003	0					
ANR	1099461	AdditiveExpression	j * 8 + 6		1098003	1		+			
ANR	1099462	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099463	Identifier	j		1098003	0					
ANR	1099464	PrimaryExpression	8		1098003	1					
ANR	1099465	PrimaryExpression	6		1098003	1					
ANR	1099466	BitAndExpression	( buf [ j ] >> 1 ) & 1		1098003	1		&			
ANR	1099467	ShiftExpression	buf [ j ] >> 1		1098003	0		>>			
ANR	1099468	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099469	Identifier	buf		1098003	0					
ANR	1099470	Identifier	j		1098003	1					
ANR	1099471	PrimaryExpression	1		1098003	1					
ANR	1099472	PrimaryExpression	1		1098003	1					
ANR	1099473	ExpressionStatement	ptr [ j * 8 + 7 ] = buf [ j ] & 1	481:20:7546:7576	1098003	7	True				
ANR	1099474	AssignmentExpression	ptr [ j * 8 + 7 ] = buf [ j ] & 1		1098003	0		=			
ANR	1099475	ArrayIndexing	ptr [ j * 8 + 7 ]		1098003	0					
ANR	1099476	Identifier	ptr		1098003	0					
ANR	1099477	AdditiveExpression	j * 8 + 7		1098003	1		+			
ANR	1099478	MultiplicativeExpression	j * 8		1098003	0		*			
ANR	1099479	Identifier	j		1098003	0					
ANR	1099480	PrimaryExpression	8		1098003	1					
ANR	1099481	PrimaryExpression	7		1098003	1					
ANR	1099482	BitAndExpression	buf [ j ] & 1		1098003	1		&			
ANR	1099483	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099484	Identifier	buf		1098003	0					
ANR	1099485	Identifier	j		1098003	1					
ANR	1099486	PrimaryExpression	1		1098003	1					
ANR	1099487	ExpressionStatement	buf += n	485:16:7614:7622	1098003	2	True				
ANR	1099488	AssignmentExpression	buf += n		1098003	0		+=			
ANR	1099489	Identifier	buf		1098003	0					
ANR	1099490	Identifier	n		1098003	1					
ANR	1099491	ExpressionStatement	ptr += linesize	487:16:7641:7656	1098003	3	True				
ANR	1099492	AssignmentExpression	ptr += linesize		1098003	0		+=			
ANR	1099493	Identifier	ptr		1098003	0					
ANR	1099494	Identifier	linesize		1098003	1					
ANR	1099495	BreakStatement	break ;	491:12:7686:7691	1098003	2	True				
ANR	1099496	Label	case 8 :	493:8:7702:7708	1098003	3	True				
ANR	1099497	Label	case 24 :	495:8:7719:7726	1098003	4	True				
ANR	1099498	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1098003	5					
ANR	1099499	ForInit	i = 0 ;	497:16:7745:7750	1098003	0	True				
ANR	1099500	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099501	Identifier	i		1098003	0					
ANR	1099502	PrimaryExpression	0		1098003	1					
ANR	1099503	Condition	i < avctx -> height	497:23:7752:7768	1098003	1	True				
ANR	1099504	RelationalExpression	i < avctx -> height		1098003	0		<			
ANR	1099505	Identifier	i		1098003	0					
ANR	1099506	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1099507	Identifier	avctx		1098003	0					
ANR	1099508	Identifier	height		1098003	1					
ANR	1099509	PostIncDecOperationExpression	i ++	497:42:7771:7773	1098003	2	True				
ANR	1099510	Identifier	i		1098003	0					
ANR	1099511	IncDec	++		1098003	1					
ANR	1099512	CompoundStatement		491:46:7619:7619	1098003	3					
ANR	1099513	ExpressionStatement	"memcpy ( ptr , buf , n )"	499:16:7794:7813	1098003	0	True				
ANR	1099514	CallExpression	"memcpy ( ptr , buf , n )"		1098003	0					
ANR	1099515	Callee	memcpy		1098003	0					
ANR	1099516	Identifier	memcpy		1098003	0					
ANR	1099517	ArgumentList	ptr		1098003	1					
ANR	1099518	Argument	ptr		1098003	0					
ANR	1099519	Identifier	ptr		1098003	0					
ANR	1099520	Argument	buf		1098003	1					
ANR	1099521	Identifier	buf		1098003	0					
ANR	1099522	Argument	n		1098003	2					
ANR	1099523	Identifier	n		1098003	0					
ANR	1099524	ExpressionStatement	buf += n	501:16:7832:7840	1098003	1	True				
ANR	1099525	AssignmentExpression	buf += n		1098003	0		+=			
ANR	1099526	Identifier	buf		1098003	0					
ANR	1099527	Identifier	n		1098003	1					
ANR	1099528	ExpressionStatement	ptr += linesize	503:16:7859:7874	1098003	2	True				
ANR	1099529	AssignmentExpression	ptr += linesize		1098003	0		+=			
ANR	1099530	Identifier	ptr		1098003	0					
ANR	1099531	Identifier	linesize		1098003	1					
ANR	1099532	BreakStatement	break ;	507:12:7904:7909	1098003	6	True				
ANR	1099533	Label	case 4 :	509:8:7920:7926	1098003	7	True				
ANR	1099534	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1098003	8					
ANR	1099535	ForInit	i = 0 ;	511:16:7945:7950	1098003	0	True				
ANR	1099536	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099537	Identifier	i		1098003	0					
ANR	1099538	PrimaryExpression	0		1098003	1					
ANR	1099539	Condition	i < avctx -> height	511:23:7952:7968	1098003	1	True				
ANR	1099540	RelationalExpression	i < avctx -> height		1098003	0		<			
ANR	1099541	Identifier	i		1098003	0					
ANR	1099542	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1099543	Identifier	avctx		1098003	0					
ANR	1099544	Identifier	height		1098003	1					
ANR	1099545	PostIncDecOperationExpression	i ++	511:42:7971:7973	1098003	2	True				
ANR	1099546	Identifier	i		1098003	0					
ANR	1099547	IncDec	++		1098003	1					
ANR	1099548	CompoundStatement		507:16:7838:7843	1098003	3					
ANR	1099549	IdentifierDeclStatement	int j ;	513:16:7994:7999	1098003	0	True				
ANR	1099550	IdentifierDecl	j		1098003	0					
ANR	1099551	IdentifierDeclType	int		1098003	0					
ANR	1099552	Identifier	j		1098003	1					
ANR	1099553	ForStatement	for ( j = 0 ; j < n ; j ++ )		1098003	1					
ANR	1099554	ForInit	j = 0 ;	515:20:8022:8027	1098003	0	True				
ANR	1099555	AssignmentExpression	j = 0		1098003	0		=			
ANR	1099556	Identifier	j		1098003	0					
ANR	1099557	PrimaryExpression	0		1098003	1					
ANR	1099558	Condition	j < n	515:27:8029:8033	1098003	1	True				
ANR	1099559	RelationalExpression	j < n		1098003	0		<			
ANR	1099560	Identifier	j		1098003	0					
ANR	1099561	Identifier	n		1098003	1					
ANR	1099562	PostIncDecOperationExpression	j ++	515:34:8036:8038	1098003	2	True				
ANR	1099563	Identifier	j		1098003	0					
ANR	1099564	IncDec	++		1098003	1					
ANR	1099565	CompoundStatement		509:38:7884:7884	1098003	3					
ANR	1099566	ExpressionStatement	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF	517:20:8063:8095	1098003	0	True				
ANR	1099567	AssignmentExpression	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF		1098003	0		=			
ANR	1099568	ArrayIndexing	ptr [ j * 2 + 0 ]		1098003	0					
ANR	1099569	Identifier	ptr		1098003	0					
ANR	1099570	AdditiveExpression	j * 2 + 0		1098003	1		+			
ANR	1099571	MultiplicativeExpression	j * 2		1098003	0		*			
ANR	1099572	Identifier	j		1098003	0					
ANR	1099573	PrimaryExpression	2		1098003	1					
ANR	1099574	PrimaryExpression	0		1098003	1					
ANR	1099575	BitAndExpression	( buf [ j ] >> 4 ) & 0xF		1098003	1		&			
ANR	1099576	ShiftExpression	buf [ j ] >> 4		1098003	0		>>			
ANR	1099577	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099578	Identifier	buf		1098003	0					
ANR	1099579	Identifier	j		1098003	1					
ANR	1099580	PrimaryExpression	4		1098003	1					
ANR	1099581	PrimaryExpression	0xF		1098003	1					
ANR	1099582	ExpressionStatement	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF	519:20:8118:8143	1098003	1	True				
ANR	1099583	AssignmentExpression	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF		1098003	0		=			
ANR	1099584	ArrayIndexing	ptr [ j * 2 + 1 ]		1098003	0					
ANR	1099585	Identifier	ptr		1098003	0					
ANR	1099586	AdditiveExpression	j * 2 + 1		1098003	1		+			
ANR	1099587	MultiplicativeExpression	j * 2		1098003	0		*			
ANR	1099588	Identifier	j		1098003	0					
ANR	1099589	PrimaryExpression	2		1098003	1					
ANR	1099590	PrimaryExpression	1		1098003	1					
ANR	1099591	BitAndExpression	buf [ j ] & 0xF		1098003	1		&			
ANR	1099592	ArrayIndexing	buf [ j ]		1098003	0					
ANR	1099593	Identifier	buf		1098003	0					
ANR	1099594	Identifier	j		1098003	1					
ANR	1099595	PrimaryExpression	0xF		1098003	1					
ANR	1099596	ExpressionStatement	buf += n	523:16:8181:8189	1098003	2	True				
ANR	1099597	AssignmentExpression	buf += n		1098003	0		+=			
ANR	1099598	Identifier	buf		1098003	0					
ANR	1099599	Identifier	n		1098003	1					
ANR	1099600	ExpressionStatement	ptr += linesize	525:16:8208:8223	1098003	3	True				
ANR	1099601	AssignmentExpression	ptr += linesize		1098003	0		+=			
ANR	1099602	Identifier	ptr		1098003	0					
ANR	1099603	Identifier	linesize		1098003	1					
ANR	1099604	BreakStatement	break ;	529:12:8253:8258	1098003	9	True				
ANR	1099605	Label	case 16 :	531:8:8269:8276	1098003	10	True				
ANR	1099606	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1098003	11					
ANR	1099607	ForInit	i = 0 ;	533:16:8295:8300	1098003	0	True				
ANR	1099608	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099609	Identifier	i		1098003	0					
ANR	1099610	PrimaryExpression	0		1098003	1					
ANR	1099611	Condition	i < avctx -> height	533:23:8302:8318	1098003	1	True				
ANR	1099612	RelationalExpression	i < avctx -> height		1098003	0		<			
ANR	1099613	Identifier	i		1098003	0					
ANR	1099614	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1099615	Identifier	avctx		1098003	0					
ANR	1099616	Identifier	height		1098003	1					
ANR	1099617	PostIncDecOperationExpression	i ++	533:42:8321:8323	1098003	2	True				
ANR	1099618	Identifier	i		1098003	0					
ANR	1099619	IncDec	++		1098003	1					
ANR	1099620	CompoundStatement		531:16:8251:8283	1098003	3					
ANR	1099621	IdentifierDeclStatement	const uint16_t * src = ( const uint16_t * ) buf ;	535:16:8344:8388	1098003	0	True				
ANR	1099622	IdentifierDecl	* src = ( const uint16_t * ) buf		1098003	0					
ANR	1099623	IdentifierDeclType	const uint16_t *		1098003	0					
ANR	1099624	Identifier	src		1098003	1					
ANR	1099625	AssignmentExpression	* src = ( const uint16_t * ) buf		1098003	2		=			
ANR	1099626	Identifier	src		1098003	0					
ANR	1099627	CastExpression	( const uint16_t * ) buf		1098003	1					
ANR	1099628	CastTarget	const uint16_t *		1098003	0					
ANR	1099629	Identifier	buf		1098003	1					
ANR	1099630	IdentifierDeclStatement	uint16_t * dst = ( uint16_t * ) ptr ;	537:16:8407:8439	1098003	1	True				
ANR	1099631	IdentifierDecl	* dst = ( uint16_t * ) ptr		1098003	0					
ANR	1099632	IdentifierDeclType	uint16_t *		1098003	0					
ANR	1099633	Identifier	dst		1098003	1					
ANR	1099634	AssignmentExpression	* dst = ( uint16_t * ) ptr		1098003	2		=			
ANR	1099635	Identifier	dst		1098003	0					
ANR	1099636	CastExpression	( uint16_t * ) ptr		1098003	1					
ANR	1099637	CastTarget	uint16_t *		1098003	0					
ANR	1099638	Identifier	ptr		1098003	1					
ANR	1099639	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1098003	2					
ANR	1099640	ForInit	j = 0 ;	541:20:8464:8469	1098003	0	True				
ANR	1099641	AssignmentExpression	j = 0		1098003	0		=			
ANR	1099642	Identifier	j		1098003	0					
ANR	1099643	PrimaryExpression	0		1098003	1					
ANR	1099644	Condition	j < avctx -> width	541:27:8471:8486	1098003	1	True				
ANR	1099645	RelationalExpression	j < avctx -> width		1098003	0		<			
ANR	1099646	Identifier	j		1098003	0					
ANR	1099647	PtrMemberAccess	avctx -> width		1098003	1					
ANR	1099648	Identifier	avctx		1098003	0					
ANR	1099649	Identifier	width		1098003	1					
ANR	1099650	PostIncDecOperationExpression	j ++	541:45:8489:8491	1098003	2	True				
ANR	1099651	Identifier	j		1098003	0					
ANR	1099652	IncDec	++		1098003	1					
ANR	1099653	ExpressionStatement	* dst ++ = av_le2ne16 ( * src ++ )	543:20:8515:8542	1098003	3	True				
ANR	1099654	AssignmentExpression	* dst ++ = av_le2ne16 ( * src ++ )		1098003	0		=			
ANR	1099655	UnaryOperationExpression	* dst ++		1098003	0					
ANR	1099656	UnaryOperator	*		1098003	0					
ANR	1099657	PostIncDecOperationExpression	dst ++		1098003	1					
ANR	1099658	Identifier	dst		1098003	0					
ANR	1099659	IncDec	++		1098003	1					
ANR	1099660	CallExpression	av_le2ne16 ( * src ++ )		1098003	1					
ANR	1099661	Callee	av_le2ne16		1098003	0					
ANR	1099662	Identifier	av_le2ne16		1098003	0					
ANR	1099663	ArgumentList	* src ++		1098003	1					
ANR	1099664	Argument	* src ++		1098003	0					
ANR	1099665	UnaryOperationExpression	* src ++		1098003	0					
ANR	1099666	UnaryOperator	*		1098003	0					
ANR	1099667	PostIncDecOperationExpression	src ++		1098003	1					
ANR	1099668	Identifier	src		1098003	0					
ANR	1099669	IncDec	++		1098003	1					
ANR	1099670	ExpressionStatement	buf += n	547:16:8563:8571	1098003	3	True				
ANR	1099671	AssignmentExpression	buf += n		1098003	0		+=			
ANR	1099672	Identifier	buf		1098003	0					
ANR	1099673	Identifier	n		1098003	1					
ANR	1099674	ExpressionStatement	ptr += linesize	549:16:8590:8605	1098003	4	True				
ANR	1099675	AssignmentExpression	ptr += linesize		1098003	0		+=			
ANR	1099676	Identifier	ptr		1098003	0					
ANR	1099677	Identifier	linesize		1098003	1					
ANR	1099678	BreakStatement	break ;	553:12:8635:8640	1098003	12	True				
ANR	1099679	Label	case 32 :	555:8:8651:8658	1098003	13	True				
ANR	1099680	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1098003	14					
ANR	1099681	ForInit	i = 0 ;	557:16:8677:8682	1098003	0	True				
ANR	1099682	AssignmentExpression	i = 0		1098003	0		=			
ANR	1099683	Identifier	i		1098003	0					
ANR	1099684	PrimaryExpression	0		1098003	1					
ANR	1099685	Condition	i < avctx -> height	557:23:8684:8700	1098003	1	True				
ANR	1099686	RelationalExpression	i < avctx -> height		1098003	0		<			
ANR	1099687	Identifier	i		1098003	0					
ANR	1099688	PtrMemberAccess	avctx -> height		1098003	1					
ANR	1099689	Identifier	avctx		1098003	0					
ANR	1099690	Identifier	height		1098003	1					
ANR	1099691	PostIncDecOperationExpression	i ++	557:42:8703:8705	1098003	2	True				
ANR	1099692	Identifier	i		1098003	0					
ANR	1099693	IncDec	++		1098003	1					
ANR	1099694	CompoundStatement		555:16:8613:8631	1098003	3					
ANR	1099695	IdentifierDeclStatement	const uint8_t * src = buf ;	559:16:8726:8750	1098003	0	True				
ANR	1099696	IdentifierDecl	* src = buf		1098003	0					
ANR	1099697	IdentifierDeclType	const uint8_t *		1098003	0					
ANR	1099698	Identifier	src		1098003	1					
ANR	1099699	AssignmentExpression	* src = buf		1098003	2		=			
ANR	1099700	Identifier	buf		1098003	0					
ANR	1099701	Identifier	buf		1098003	1					
ANR	1099702	IdentifierDeclStatement	uint8_t * dst = ptr ;	561:16:8769:8787	1098003	1	True				
ANR	1099703	IdentifierDecl	* dst = ptr		1098003	0					
ANR	1099704	IdentifierDeclType	uint8_t *		1098003	0					
ANR	1099705	Identifier	dst		1098003	1					
ANR	1099706	AssignmentExpression	* dst = ptr		1098003	2		=			
ANR	1099707	Identifier	ptr		1098003	0					
ANR	1099708	Identifier	ptr		1098003	1					
ANR	1099709	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1098003	2					
ANR	1099710	ForInit	j = 0 ;	565:20:8812:8817	1098003	0	True				
ANR	1099711	AssignmentExpression	j = 0		1098003	0		=			
ANR	1099712	Identifier	j		1098003	0					
ANR	1099713	PrimaryExpression	0		1098003	1					
ANR	1099714	Condition	j < avctx -> width	565:27:8819:8834	1098003	1	True				
ANR	1099715	RelationalExpression	j < avctx -> width		1098003	0		<			
ANR	1099716	Identifier	j		1098003	0					
ANR	1099717	PtrMemberAccess	avctx -> width		1098003	1					
ANR	1099718	Identifier	avctx		1098003	0					
ANR	1099719	Identifier	width		1098003	1					
ANR	1099720	PostIncDecOperationExpression	j ++	565:45:8837:8839	1098003	2	True				
ANR	1099721	Identifier	j		1098003	0					
ANR	1099722	IncDec	++		1098003	1					
ANR	1099723	CompoundStatement		559:49:8685:8685	1098003	3					
ANR	1099724	ExpressionStatement	dst [ 0 ] = src [ rgb [ 2 ] ]	567:20:8864:8884	1098003	0	True				
ANR	1099725	AssignmentExpression	dst [ 0 ] = src [ rgb [ 2 ] ]		1098003	0		=			
ANR	1099726	ArrayIndexing	dst [ 0 ]		1098003	0					
ANR	1099727	Identifier	dst		1098003	0					
ANR	1099728	PrimaryExpression	0		1098003	1					
ANR	1099729	ArrayIndexing	src [ rgb [ 2 ] ]		1098003	1					
ANR	1099730	Identifier	src		1098003	0					
ANR	1099731	ArrayIndexing	rgb [ 2 ]		1098003	1					
ANR	1099732	Identifier	rgb		1098003	0					
ANR	1099733	PrimaryExpression	2		1098003	1					
ANR	1099734	ExpressionStatement	dst [ 1 ] = src [ rgb [ 1 ] ]	569:20:8907:8927	1098003	1	True				
ANR	1099735	AssignmentExpression	dst [ 1 ] = src [ rgb [ 1 ] ]		1098003	0		=			
ANR	1099736	ArrayIndexing	dst [ 1 ]		1098003	0					
ANR	1099737	Identifier	dst		1098003	0					
ANR	1099738	PrimaryExpression	1		1098003	1					
ANR	1099739	ArrayIndexing	src [ rgb [ 1 ] ]		1098003	1					
ANR	1099740	Identifier	src		1098003	0					
ANR	1099741	ArrayIndexing	rgb [ 1 ]		1098003	1					
ANR	1099742	Identifier	rgb		1098003	0					
ANR	1099743	PrimaryExpression	1		1098003	1					
ANR	1099744	ExpressionStatement	dst [ 2 ] = src [ rgb [ 0 ] ]	571:20:8950:8970	1098003	2	True				
ANR	1099745	AssignmentExpression	dst [ 2 ] = src [ rgb [ 0 ] ]		1098003	0		=			
ANR	1099746	ArrayIndexing	dst [ 2 ]		1098003	0					
ANR	1099747	Identifier	dst		1098003	0					
ANR	1099748	PrimaryExpression	2		1098003	1					
ANR	1099749	ArrayIndexing	src [ rgb [ 0 ] ]		1098003	1					
ANR	1099750	Identifier	src		1098003	0					
ANR	1099751	ArrayIndexing	rgb [ 0 ]		1098003	1					
ANR	1099752	Identifier	rgb		1098003	0					
ANR	1099753	PrimaryExpression	0		1098003	1					
ANR	1099754	ExpressionStatement	dst += 3	573:20:8993:9001	1098003	3	True				
ANR	1099755	AssignmentExpression	dst += 3		1098003	0		+=			
ANR	1099756	Identifier	dst		1098003	0					
ANR	1099757	PrimaryExpression	3		1098003	1					
ANR	1099758	ExpressionStatement	src += 4	575:20:9024:9032	1098003	4	True				
ANR	1099759	AssignmentExpression	src += 4		1098003	0		+=			
ANR	1099760	Identifier	src		1098003	0					
ANR	1099761	PrimaryExpression	4		1098003	1					
ANR	1099762	ExpressionStatement	buf += n	581:16:9072:9080	1098003	3	True				
ANR	1099763	AssignmentExpression	buf += n		1098003	0		+=			
ANR	1099764	Identifier	buf		1098003	0					
ANR	1099765	Identifier	n		1098003	1					
ANR	1099766	ExpressionStatement	ptr += linesize	583:16:9099:9114	1098003	4	True				
ANR	1099767	AssignmentExpression	ptr += linesize		1098003	0		+=			
ANR	1099768	Identifier	ptr		1098003	0					
ANR	1099769	Identifier	linesize		1098003	1					
ANR	1099770	BreakStatement	break ;	587:12:9144:9149	1098003	15	True				
ANR	1099771	Label	default :	589:8:9160:9167	1098003	16	True				
ANR	1099772	Identifier	default		1098003	0					
ANR	1099773	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"	591:12:9182:9236	1098003	17	True				
ANR	1099774	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"		1098003	0					
ANR	1099775	Callee	av_log		1098003	0					
ANR	1099776	Identifier	av_log		1098003	0					
ANR	1099777	ArgumentList	avctx		1098003	1					
ANR	1099778	Argument	avctx		1098003	0					
ANR	1099779	Identifier	avctx		1098003	0					
ANR	1099780	Argument	AV_LOG_ERROR		1098003	1					
ANR	1099781	Identifier	AV_LOG_ERROR		1098003	0					
ANR	1099782	Argument	"""BMP decoder is broken\\n"""		1098003	2					
ANR	1099783	PrimaryExpression	"""BMP decoder is broken\\n"""		1098003	0					
ANR	1099784	ReturnStatement	return - 1 ;	593:12:9251:9260	1098003	18	True				
ANR	1099785	UnaryOperationExpression	- 1		1098003	0					
ANR	1099786	UnaryOperator	-		1098003	0					
ANR	1099787	PrimaryExpression	1		1098003	1					
ANR	1099788	ExpressionStatement	* picture = s -> picture	601:4:9287:9308	1098003	51	True				
ANR	1099789	AssignmentExpression	* picture = s -> picture		1098003	0		=			
ANR	1099790	UnaryOperationExpression	* picture		1098003	0					
ANR	1099791	UnaryOperator	*		1098003	0					
ANR	1099792	Identifier	picture		1098003	1					
ANR	1099793	PtrMemberAccess	s -> picture		1098003	1					
ANR	1099794	Identifier	s		1098003	0					
ANR	1099795	Identifier	picture		1098003	1					
ANR	1099796	ExpressionStatement	* data_size = sizeof ( AVPicture )	603:4:9315:9345	1098003	52	True				
ANR	1099797	AssignmentExpression	* data_size = sizeof ( AVPicture )		1098003	0		=			
ANR	1099798	UnaryOperationExpression	* data_size		1098003	0					
ANR	1099799	UnaryOperator	*		1098003	0					
ANR	1099800	Identifier	data_size		1098003	1					
ANR	1099801	SizeofExpression	sizeof ( AVPicture )		1098003	1					
ANR	1099802	Sizeof	sizeof		1098003	0					
ANR	1099803	SizeofOperand	AVPicture		1098003	1					
ANR	1099804	ReturnStatement	return buf_size ;	607:4:9354:9369	1098003	53	True				
ANR	1099805	Identifier	buf_size		1098003	0					
ANR	1099806	ReturnType	static int		1098003	1					
ANR	1099807	Identifier	bmp_decode_frame		1098003	2					
ANR	1099808	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		1098003	3					
ANR	1099809	Parameter	AVCodecContext * avctx	1:28:28:48	1098003	0	True				
ANR	1099810	ParameterType	AVCodecContext *		1098003	0					
ANR	1099811	Identifier	avctx		1098003	1					
ANR	1099812	Parameter	void * data	3:28:80:89	1098003	1	True				
ANR	1099813	ParameterType	void *		1098003	0					
ANR	1099814	Identifier	data		1098003	1					
ANR	1099815	Parameter	int * data_size	3:40:92:105	1098003	2	True				
ANR	1099816	ParameterType	int *		1098003	0					
ANR	1099817	Identifier	data_size		1098003	1					
ANR	1099818	Parameter	AVPacket * avpkt	5:28:137:151	1098003	3	True				
ANR	1099819	ParameterType	AVPacket *		1098003	0					
ANR	1099820	Identifier	avpkt		1098003	1					
ANR	1099821	CFGEntryNode	ENTRY		1098003		True				
ANR	1099822	CFGExitNode	EXIT		1098003		True				
ANR	1099823	Symbol	PIX_FMT_GRAY8		1098003						
ANR	1099824	Symbol	data		1098003						
ANR	1099825	Symbol	hsize		1098003						
ANR	1099826	Symbol	BMP_RGB		1098003						
ANR	1099827	Symbol	PIX_FMT_PAL8		1098003						
ANR	1099828	Symbol	avpkt		1098003						
ANR	1099829	Symbol	* data_size		1098003						
ANR	1099830	Symbol	* src		1098003						
ANR	1099831	Symbol	* dst		1098003						
ANR	1099832	Symbol	linesize		1098003						
ANR	1099833	Symbol	* p -> data		1098003						
ANR	1099834	Symbol	PIX_FMT_RGB555		1098003						
ANR	1099835	Symbol	* ptr		1098003						
ANR	1099836	Symbol	height		1098003						
ANR	1099837	Symbol	data_size		1098003						
ANR	1099838	Symbol	comp		1098003						
ANR	1099839	Symbol	* * rgb		1098003						
ANR	1099840	Symbol	* buf		1098003						
ANR	1099841	Symbol	buf_size		1098003						
ANR	1099842	Symbol	* * p -> data		1098003						
ANR	1099843	Symbol	p -> linesize		1098003						
ANR	1099844	Symbol	bytestream_get_le16		1098003						
ANR	1099845	Symbol	* * * p		1098003						
ANR	1099846	Symbol	* avctx		1098003						
ANR	1099847	Symbol	buf0		1098003						
ANR	1099848	Symbol	fsize		1098003						
ANR	1099849	Symbol	PIX_FMT_RGB565		1098003						
ANR	1099850	Symbol	* dst ++		1098003						
ANR	1099851	Symbol	av_le2ne16		1098003						
ANR	1099852	Symbol	* rgb		1098003						
ANR	1099853	Symbol	* src ++		1098003						
ANR	1099854	Symbol	avpkt -> data		1098003						
ANR	1099855	Symbol	avctx -> pix_fmt		1098003						
ANR	1099856	Symbol	ihsize		1098003						
ANR	1099857	Symbol	p -> reference		1098003						
ANR	1099858	Symbol	dst		1098003						
ANR	1099859	Symbol	p -> data		1098003						
ANR	1099860	Symbol	avctx -> width		1098003						
ANR	1099861	Symbol	PIX_FMT_BGR24		1098003						
ANR	1099862	Symbol	s -> picture		1098003						
ANR	1099863	Symbol	bytestream_get_le24		1098003						
ANR	1099864	Symbol	rgb		1098003						
ANR	1099865	Symbol	colors		1098003						
ANR	1099866	Symbol	BMP_RLE4		1098003						
ANR	1099867	Symbol	dsize		1098003						
ANR	1099868	Symbol	avctx -> height		1098003						
ANR	1099869	Symbol	BMP_RLE8		1098003						
ANR	1099870	Symbol	avpkt -> size		1098003						
ANR	1099871	Symbol	AV_PICTURE_TYPE_I		1098003						
ANR	1099872	Symbol	* * p		1098003						
ANR	1099873	Symbol	avctx		1098003						
ANR	1099874	Symbol	p -> pict_type		1098003						
ANR	1099875	Symbol	& buf		1098003						
ANR	1099876	Symbol	* avpkt		1098003						
ANR	1099877	Symbol	BMP_BITFIELDS		1098003						
ANR	1099878	Symbol	AV_LOG_ERROR		1098003						
ANR	1099879	Symbol	avctx -> get_buffer		1098003						
ANR	1099880	Symbol	bytestream_get_byte		1098003						
ANR	1099881	Symbol	src		1098003						
ANR	1099882	Symbol	p -> key_frame		1098003						
ANR	1099883	Symbol	i		1098003						
ANR	1099884	Symbol	bytestream_get_le32		1098003						
ANR	1099885	Symbol	j		1098003						
ANR	1099886	Symbol	avctx -> priv_data		1098003						
ANR	1099887	Symbol	* p -> linesize		1098003						
ANR	1099888	Symbol	PIX_FMT_NONE		1098003						
ANR	1099889	Symbol	picture		1098003						
ANR	1099890	Symbol	n		1098003						
ANR	1099891	Symbol	ptr		1098003						
ANR	1099892	Symbol	p		1098003						
ANR	1099893	Symbol	buf		1098003						
ANR	1099894	Symbol	s		1098003						
ANR	1099895	Symbol	depth		1098003						
ANR	1099896	Symbol	* i		1098003						
ANR	1099897	Symbol	& s -> picture		1098003						
ANR	1099898	Symbol	t		1098003						
ANR	1099899	Symbol	* j		1098003						
ANR	1099900	Symbol	~3		1098003						
ANR	1099901	Symbol	width		1098003						
ANR	1099902	Symbol	* picture		1098003						
ANR	1099903	Symbol	* p		1098003						
ANR	1099904	Symbol	* s		1098003						
