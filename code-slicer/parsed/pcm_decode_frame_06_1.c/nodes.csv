command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6480189	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pcm_decode_frame_06_1.c								
ANR	6480190	Function	pcm_decode_frame	1:0:0:7290							
ANR	6480191	FunctionDef	"pcm_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		6480190	0					
ANR	6480192	CompoundStatement		5:0:130:7290	6480190	0					
ANR	6480193	IdentifierDeclStatement	const uint8_t * src = avpkt -> data ;	7:4:137:169	6480190	0	True				
ANR	6480194	IdentifierDecl	* src = avpkt -> data		6480190	0					
ANR	6480195	IdentifierDeclType	const uint8_t *		6480190	0					
ANR	6480196	Identifier	src		6480190	1					
ANR	6480197	AssignmentExpression	* src = avpkt -> data		6480190	2		=			
ANR	6480198	Identifier	src		6480190	0					
ANR	6480199	PtrMemberAccess	avpkt -> data		6480190	1					
ANR	6480200	Identifier	avpkt		6480190	0					
ANR	6480201	Identifier	data		6480190	1					
ANR	6480202	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:176:208	6480190	1	True				
ANR	6480203	IdentifierDecl	buf_size = avpkt -> size		6480190	0					
ANR	6480204	IdentifierDeclType	int		6480190	0					
ANR	6480205	Identifier	buf_size		6480190	1					
ANR	6480206	AssignmentExpression	buf_size = avpkt -> size		6480190	2		=			
ANR	6480207	Identifier	buf_size		6480190	0					
ANR	6480208	PtrMemberAccess	avpkt -> size		6480190	1					
ANR	6480209	Identifier	avpkt		6480190	0					
ANR	6480210	Identifier	size		6480190	1					
ANR	6480211	IdentifierDeclStatement	PCMDecode * s = avctx -> priv_data ;	11:4:215:252	6480190	2	True				
ANR	6480212	IdentifierDecl	* s = avctx -> priv_data		6480190	0					
ANR	6480213	IdentifierDeclType	PCMDecode *		6480190	0					
ANR	6480214	Identifier	s		6480190	1					
ANR	6480215	AssignmentExpression	* s = avctx -> priv_data		6480190	2		=			
ANR	6480216	Identifier	s		6480190	0					
ANR	6480217	PtrMemberAccess	avctx -> priv_data		6480190	1					
ANR	6480218	Identifier	avctx		6480190	0					
ANR	6480219	Identifier	priv_data		6480190	1					
ANR	6480220	IdentifierDeclStatement	AVFrame * frame = data ;	13:4:259:284	6480190	3	True				
ANR	6480221	IdentifierDecl	* frame = data		6480190	0					
ANR	6480222	IdentifierDeclType	AVFrame *		6480190	0					
ANR	6480223	Identifier	frame		6480190	1					
ANR	6480224	AssignmentExpression	* frame = data		6480190	2		=			
ANR	6480225	Identifier	data		6480190	0					
ANR	6480226	Identifier	data		6480190	1					
ANR	6480227	IdentifierDeclStatement	"int sample_size , c , n , ret , samples_per_block ;"	15:4:291:336	6480190	4	True				
ANR	6480228	IdentifierDecl	sample_size		6480190	0					
ANR	6480229	IdentifierDeclType	int		6480190	0					
ANR	6480230	Identifier	sample_size		6480190	1					
ANR	6480231	IdentifierDecl	c		6480190	1					
ANR	6480232	IdentifierDeclType	int		6480190	0					
ANR	6480233	Identifier	c		6480190	1					
ANR	6480234	IdentifierDecl	n		6480190	2					
ANR	6480235	IdentifierDeclType	int		6480190	0					
ANR	6480236	Identifier	n		6480190	1					
ANR	6480237	IdentifierDecl	ret		6480190	3					
ANR	6480238	IdentifierDeclType	int		6480190	0					
ANR	6480239	Identifier	ret		6480190	1					
ANR	6480240	IdentifierDecl	samples_per_block		6480190	4					
ANR	6480241	IdentifierDeclType	int		6480190	0					
ANR	6480242	Identifier	samples_per_block		6480190	1					
ANR	6480243	IdentifierDeclStatement	uint8_t * samples ;	17:4:343:359	6480190	5	True				
ANR	6480244	IdentifierDecl	* samples		6480190	0					
ANR	6480245	IdentifierDeclType	uint8_t *		6480190	0					
ANR	6480246	Identifier	samples		6480190	1					
ANR	6480247	IdentifierDeclStatement	int32_t * dst_int32_t ;	19:4:366:386	6480190	6	True				
ANR	6480248	IdentifierDecl	* dst_int32_t		6480190	0					
ANR	6480249	IdentifierDeclType	int32_t *		6480190	0					
ANR	6480250	Identifier	dst_int32_t		6480190	1					
ANR	6480251	ExpressionStatement	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8	23:4:395:452	6480190	7	True				
ANR	6480252	AssignmentExpression	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8		6480190	0		=			
ANR	6480253	Identifier	sample_size		6480190	0					
ANR	6480254	MultiplicativeExpression	av_get_bits_per_sample ( avctx -> codec_id ) / 8		6480190	1		/			
ANR	6480255	CallExpression	av_get_bits_per_sample ( avctx -> codec_id )		6480190	0					
ANR	6480256	Callee	av_get_bits_per_sample		6480190	0					
ANR	6480257	Identifier	av_get_bits_per_sample		6480190	0					
ANR	6480258	ArgumentList	avctx -> codec_id		6480190	1					
ANR	6480259	Argument	avctx -> codec_id		6480190	0					
ANR	6480260	PtrMemberAccess	avctx -> codec_id		6480190	0					
ANR	6480261	Identifier	avctx		6480190	0					
ANR	6480262	Identifier	codec_id		6480190	1					
ANR	6480263	PrimaryExpression	8		6480190	1					
ANR	6480264	ExpressionStatement	samples_per_block = 1	29:4:529:550	6480190	8	True				
ANR	6480265	AssignmentExpression	samples_per_block = 1		6480190	0		=			
ANR	6480266	Identifier	samples_per_block		6480190	0					
ANR	6480267	PrimaryExpression	1		6480190	1					
ANR	6480268	IfStatement	if ( avctx -> codec -> id == AV_CODEC_ID_PCM_DVD )		6480190	9					
ANR	6480269	Condition	avctx -> codec -> id == AV_CODEC_ID_PCM_DVD	31:8:561:599	6480190	0	True				
ANR	6480270	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_PCM_DVD		6480190	0		==			
ANR	6480271	PtrMemberAccess	avctx -> codec -> id		6480190	0					
ANR	6480272	PtrMemberAccess	avctx -> codec		6480190	0					
ANR	6480273	Identifier	avctx		6480190	0					
ANR	6480274	Identifier	codec		6480190	1					
ANR	6480275	Identifier	id		6480190	1					
ANR	6480276	Identifier	AV_CODEC_ID_PCM_DVD		6480190	1					
ANR	6480277	CompoundStatement		27:49:471:471	6480190	1					
ANR	6480278	IfStatement	if ( avctx -> bits_per_coded_sample != 20 && avctx -> bits_per_coded_sample != 24 )		6480190	0					
ANR	6480279	Condition	avctx -> bits_per_coded_sample != 20 && avctx -> bits_per_coded_sample != 24	33:12:617:701	6480190	0	True				
ANR	6480280	AndExpression	avctx -> bits_per_coded_sample != 20 && avctx -> bits_per_coded_sample != 24		6480190	0		&&			
ANR	6480281	EqualityExpression	avctx -> bits_per_coded_sample != 20		6480190	0		!=			
ANR	6480282	PtrMemberAccess	avctx -> bits_per_coded_sample		6480190	0					
ANR	6480283	Identifier	avctx		6480190	0					
ANR	6480284	Identifier	bits_per_coded_sample		6480190	1					
ANR	6480285	PrimaryExpression	20		6480190	1					
ANR	6480286	EqualityExpression	avctx -> bits_per_coded_sample != 24		6480190	1		!=			
ANR	6480287	PtrMemberAccess	avctx -> bits_per_coded_sample		6480190	0					
ANR	6480288	Identifier	avctx		6480190	0					
ANR	6480289	Identifier	bits_per_coded_sample		6480190	1					
ANR	6480290	PrimaryExpression	24		6480190	1					
ANR	6480291	CompoundStatement		31:48:573:573	6480190	1					
ANR	6480292	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"	37:12:719:784	6480190	0	True				
ANR	6480293	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"		6480190	0					
ANR	6480294	Callee	av_log		6480190	0					
ANR	6480295	Identifier	av_log		6480190	0					
ANR	6480296	ArgumentList	avctx		6480190	1					
ANR	6480297	Argument	avctx		6480190	0					
ANR	6480298	Identifier	avctx		6480190	0					
ANR	6480299	Argument	AV_LOG_ERROR		6480190	1					
ANR	6480300	Identifier	AV_LOG_ERROR		6480190	0					
ANR	6480301	Argument	"""PCM DVD unsupported sample depth\\n"""		6480190	2					
ANR	6480302	PrimaryExpression	"""PCM DVD unsupported sample depth\\n"""		6480190	0					
ANR	6480303	ReturnStatement	return AVERROR ( EINVAL ) ;	39:12:799:821	6480190	1	True				
ANR	6480304	CallExpression	AVERROR ( EINVAL )		6480190	0					
ANR	6480305	Callee	AVERROR		6480190	0					
ANR	6480306	Identifier	AVERROR		6480190	0					
ANR	6480307	ArgumentList	EINVAL		6480190	1					
ANR	6480308	Argument	EINVAL		6480190	0					
ANR	6480309	Identifier	EINVAL		6480190	0					
ANR	6480310	ExpressionStatement	samples_per_block = 2	45:8:905:926	6480190	1	True				
ANR	6480311	AssignmentExpression	samples_per_block = 2		6480190	0		=			
ANR	6480312	Identifier	samples_per_block		6480190	0					
ANR	6480313	PrimaryExpression	2		6480190	1					
ANR	6480314	ExpressionStatement	sample_size = avctx -> bits_per_coded_sample * 2 / 8	47:8:937:993	6480190	2	True				
ANR	6480315	AssignmentExpression	sample_size = avctx -> bits_per_coded_sample * 2 / 8		6480190	0		=			
ANR	6480316	Identifier	sample_size		6480190	0					
ANR	6480317	MultiplicativeExpression	avctx -> bits_per_coded_sample * 2 / 8		6480190	1		*			
ANR	6480318	PtrMemberAccess	avctx -> bits_per_coded_sample		6480190	0					
ANR	6480319	Identifier	avctx		6480190	0					
ANR	6480320	Identifier	bits_per_coded_sample		6480190	1					
ANR	6480321	MultiplicativeExpression	2 / 8		6480190	1		/			
ANR	6480322	PrimaryExpression	2		6480190	0					
ANR	6480323	PrimaryExpression	8		6480190	1					
ANR	6480324	ElseStatement	else		6480190	0					
ANR	6480325	IfStatement	if ( avctx -> codec_id == AV_CODEC_ID_PCM_LXF )		6480190	0					
ANR	6480326	Condition	avctx -> codec_id == AV_CODEC_ID_PCM_LXF	49:15:1011:1048	6480190	0	True				
ANR	6480327	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_PCM_LXF		6480190	0		==			
ANR	6480328	PtrMemberAccess	avctx -> codec_id		6480190	0					
ANR	6480329	Identifier	avctx		6480190	0					
ANR	6480330	Identifier	codec_id		6480190	1					
ANR	6480331	Identifier	AV_CODEC_ID_PCM_LXF		6480190	1					
ANR	6480332	CompoundStatement		45:55:920:920	6480190	1					
ANR	6480333	ExpressionStatement	samples_per_block = 2	53:8:1122:1143	6480190	0	True				
ANR	6480334	AssignmentExpression	samples_per_block = 2		6480190	0		=			
ANR	6480335	Identifier	samples_per_block		6480190	0					
ANR	6480336	PrimaryExpression	2		6480190	1					
ANR	6480337	ExpressionStatement	sample_size = 5	55:8:1154:1175	6480190	1	True				
ANR	6480338	AssignmentExpression	sample_size = 5		6480190	0		=			
ANR	6480339	Identifier	sample_size		6480190	0					
ANR	6480340	PrimaryExpression	5		6480190	1					
ANR	6480341	IfStatement	if ( sample_size == 0 )		6480190	10					
ANR	6480342	Condition	sample_size == 0	61:8:1195:1210	6480190	0	True				
ANR	6480343	EqualityExpression	sample_size == 0		6480190	0		==			
ANR	6480344	Identifier	sample_size		6480190	0					
ANR	6480345	PrimaryExpression	0		6480190	1					
ANR	6480346	CompoundStatement		57:26:1082:1082	6480190	1					
ANR	6480347	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"	63:8:1224:1276	6480190	0	True				
ANR	6480348	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"		6480190	0					
ANR	6480349	Callee	av_log		6480190	0					
ANR	6480350	Identifier	av_log		6480190	0					
ANR	6480351	ArgumentList	avctx		6480190	1					
ANR	6480352	Argument	avctx		6480190	0					
ANR	6480353	Identifier	avctx		6480190	0					
ANR	6480354	Argument	AV_LOG_ERROR		6480190	1					
ANR	6480355	Identifier	AV_LOG_ERROR		6480190	0					
ANR	6480356	Argument	"""Invalid sample_size\\n"""		6480190	2					
ANR	6480357	PrimaryExpression	"""Invalid sample_size\\n"""		6480190	0					
ANR	6480358	ReturnStatement	return AVERROR ( EINVAL ) ;	65:8:1287:1309	6480190	1	True				
ANR	6480359	CallExpression	AVERROR ( EINVAL )		6480190	0					
ANR	6480360	Callee	AVERROR		6480190	0					
ANR	6480361	Identifier	AVERROR		6480190	0					
ANR	6480362	ArgumentList	EINVAL		6480190	1					
ANR	6480363	Argument	EINVAL		6480190	0					
ANR	6480364	Identifier	EINVAL		6480190	0					
ANR	6480365	ExpressionStatement	n = avctx -> channels * sample_size	71:4:1325:1358	6480190	11	True				
ANR	6480366	AssignmentExpression	n = avctx -> channels * sample_size		6480190	0		=			
ANR	6480367	Identifier	n		6480190	0					
ANR	6480368	MultiplicativeExpression	avctx -> channels * sample_size		6480190	1		*			
ANR	6480369	PtrMemberAccess	avctx -> channels		6480190	0					
ANR	6480370	Identifier	avctx		6480190	0					
ANR	6480371	Identifier	channels		6480190	1					
ANR	6480372	Identifier	sample_size		6480190	1					
ANR	6480373	IfStatement	if ( n && buf_size % n )		6480190	12					
ANR	6480374	Condition	n && buf_size % n	75:8:1371:1387	6480190	0	True				
ANR	6480375	AndExpression	n && buf_size % n		6480190	0		&&			
ANR	6480376	Identifier	n		6480190	0					
ANR	6480377	MultiplicativeExpression	buf_size % n		6480190	1		%			
ANR	6480378	Identifier	buf_size		6480190	0					
ANR	6480379	Identifier	n		6480190	1					
ANR	6480380	CompoundStatement		71:27:1259:1259	6480190	1					
ANR	6480381	IfStatement	if ( buf_size < n )		6480190	0					
ANR	6480382	Condition	buf_size < n	77:12:1405:1416	6480190	0	True				
ANR	6480383	RelationalExpression	buf_size < n		6480190	0		<			
ANR	6480384	Identifier	buf_size		6480190	0					
ANR	6480385	Identifier	n		6480190	1					
ANR	6480386	CompoundStatement		73:26:1288:1288	6480190	1					
ANR	6480387	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"	79:12:1434:1485	6480190	0	True				
ANR	6480388	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"		6480190	0					
ANR	6480389	Callee	av_log		6480190	0					
ANR	6480390	Identifier	av_log		6480190	0					
ANR	6480391	ArgumentList	avctx		6480190	1					
ANR	6480392	Argument	avctx		6480190	0					
ANR	6480393	Identifier	avctx		6480190	0					
ANR	6480394	Argument	AV_LOG_ERROR		6480190	1					
ANR	6480395	Identifier	AV_LOG_ERROR		6480190	0					
ANR	6480396	Argument	"""invalid PCM packet\\n"""		6480190	2					
ANR	6480397	PrimaryExpression	"""invalid PCM packet\\n"""		6480190	0					
ANR	6480398	ReturnStatement	return - 1 ;	81:12:1500:1509	6480190	1	True				
ANR	6480399	UnaryOperationExpression	- 1		6480190	0					
ANR	6480400	UnaryOperator	-		6480190	0					
ANR	6480401	PrimaryExpression	1		6480190	1					
ANR	6480402	ElseStatement	else		6480190	0					
ANR	6480403	ExpressionStatement	buf_size -= buf_size % n	85:12:1540:1564	6480190	0	True				
ANR	6480404	AssignmentExpression	buf_size -= buf_size % n		6480190	0		-=			
ANR	6480405	Identifier	buf_size		6480190	0					
ANR	6480406	MultiplicativeExpression	buf_size % n		6480190	1		%			
ANR	6480407	Identifier	buf_size		6480190	0					
ANR	6480408	Identifier	n		6480190	1					
ANR	6480409	ExpressionStatement	n = buf_size / sample_size	91:4:1580:1606	6480190	13	True				
ANR	6480410	AssignmentExpression	n = buf_size / sample_size		6480190	0		=			
ANR	6480411	Identifier	n		6480190	0					
ANR	6480412	MultiplicativeExpression	buf_size / sample_size		6480190	1		/			
ANR	6480413	Identifier	buf_size		6480190	0					
ANR	6480414	Identifier	sample_size		6480190	1					
ANR	6480415	ExpressionStatement	frame -> nb_samples = n * samples_per_block / avctx -> channels	97:4:1644:1703	6480190	14	True				
ANR	6480416	AssignmentExpression	frame -> nb_samples = n * samples_per_block / avctx -> channels		6480190	0		=			
ANR	6480417	PtrMemberAccess	frame -> nb_samples		6480190	0					
ANR	6480418	Identifier	frame		6480190	0					
ANR	6480419	Identifier	nb_samples		6480190	1					
ANR	6480420	MultiplicativeExpression	n * samples_per_block / avctx -> channels		6480190	1		*			
ANR	6480421	Identifier	n		6480190	0					
ANR	6480422	MultiplicativeExpression	samples_per_block / avctx -> channels		6480190	1		/			
ANR	6480423	Identifier	samples_per_block		6480190	0					
ANR	6480424	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6480425	Identifier	avctx		6480190	0					
ANR	6480426	Identifier	channels		6480190	1					
ANR	6480427	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		6480190	15					
ANR	6480428	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	99:8:1714:1755	6480190	0	True				
ANR	6480429	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		6480190	0		<			
ANR	6480430	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		6480190	0		=			
ANR	6480431	Identifier	ret		6480190	0					
ANR	6480432	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		6480190	1					
ANR	6480433	Callee	ff_get_buffer		6480190	0					
ANR	6480434	Identifier	ff_get_buffer		6480190	0					
ANR	6480435	ArgumentList	avctx		6480190	1					
ANR	6480436	Argument	avctx		6480190	0					
ANR	6480437	Identifier	avctx		6480190	0					
ANR	6480438	Argument	frame		6480190	1					
ANR	6480439	Identifier	frame		6480190	0					
ANR	6480440	Argument	0		6480190	2					
ANR	6480441	PrimaryExpression	0		6480190	0					
ANR	6480442	PrimaryExpression	0		6480190	1					
ANR	6480443	CompoundStatement		95:52:1627:1627	6480190	1					
ANR	6480444	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	101:8:1769:1821	6480190	0	True				
ANR	6480445	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		6480190	0					
ANR	6480446	Callee	av_log		6480190	0					
ANR	6480447	Identifier	av_log		6480190	0					
ANR	6480448	ArgumentList	avctx		6480190	1					
ANR	6480449	Argument	avctx		6480190	0					
ANR	6480450	Identifier	avctx		6480190	0					
ANR	6480451	Argument	AV_LOG_ERROR		6480190	1					
ANR	6480452	Identifier	AV_LOG_ERROR		6480190	0					
ANR	6480453	Argument	"""get_buffer() failed\\n"""		6480190	2					
ANR	6480454	PrimaryExpression	"""get_buffer() failed\\n"""		6480190	0					
ANR	6480455	ReturnStatement	return ret ;	103:8:1832:1842	6480190	1	True				
ANR	6480456	Identifier	ret		6480190	0					
ANR	6480457	ExpressionStatement	samples = frame -> data [ 0 ]	107:4:1856:1880	6480190	16	True				
ANR	6480458	AssignmentExpression	samples = frame -> data [ 0 ]		6480190	0		=			
ANR	6480459	Identifier	samples		6480190	0					
ANR	6480460	ArrayIndexing	frame -> data [ 0 ]		6480190	1					
ANR	6480461	PtrMemberAccess	frame -> data		6480190	0					
ANR	6480462	Identifier	frame		6480190	0					
ANR	6480463	Identifier	data		6480190	1					
ANR	6480464	PrimaryExpression	0		6480190	1					
ANR	6480465	SwitchStatement	switch ( avctx -> codec -> id )		6480190	17					
ANR	6480466	Condition	avctx -> codec -> id	111:12:1897:1912	6480190	0	True				
ANR	6480467	PtrMemberAccess	avctx -> codec -> id		6480190	0					
ANR	6480468	PtrMemberAccess	avctx -> codec		6480190	0					
ANR	6480469	Identifier	avctx		6480190	0					
ANR	6480470	Identifier	codec		6480190	1					
ANR	6480471	Identifier	id		6480190	1					
ANR	6480472	CompoundStatement		107:30:1784:1784	6480190	1					
ANR	6480473	Label	case AV_CODEC_ID_PCM_U32LE :	113:4:1922:1948	6480190	0	True				
ANR	6480474	Identifier	AV_CODEC_ID_PCM_U32LE		6480190	0					
ANR	6480475	Statement	DECODE	115:8:1959:1964	6480190	1	True				
ANR	6480476	Statement	(	115:14:1965:1965	6480190	2	True				
ANR	6480477	Statement	32	115:15:1966:1967	6480190	3	True				
ANR	6480478	Statement	","	115:17:1968:1968	6480190	4	True				
ANR	6480479	Statement	le32	115:19:1970:1973	6480190	5	True				
ANR	6480480	Statement	","	115:23:1974:1974	6480190	6	True				
ANR	6480481	Statement	src	115:25:1976:1978	6480190	7	True				
ANR	6480482	Statement	","	115:28:1979:1979	6480190	8	True				
ANR	6480483	Statement	samples	115:30:1981:1987	6480190	9	True				
ANR	6480484	Statement	","	115:37:1988:1988	6480190	10	True				
ANR	6480485	Statement	n	115:39:1990:1990	6480190	11	True				
ANR	6480486	Statement	","	115:40:1991:1991	6480190	12	True				
ANR	6480487	Statement	0	115:42:1993:1993	6480190	13	True				
ANR	6480488	Statement	","	115:43:1994:1994	6480190	14	True				
ANR	6480489	Statement	0x80000000	115:45:1996:2005	6480190	15	True				
ANR	6480490	Statement	)	115:55:2006:2006	6480190	16	True				
ANR	6480491	BreakStatement	break ;	117:8:2017:2022	6480190	17	True				
ANR	6480492	Label	case AV_CODEC_ID_PCM_U32BE :	119:4:2029:2055	6480190	18	True				
ANR	6480493	Identifier	AV_CODEC_ID_PCM_U32BE		6480190	0					
ANR	6480494	Statement	DECODE	121:8:2066:2071	6480190	19	True				
ANR	6480495	Statement	(	121:14:2072:2072	6480190	20	True				
ANR	6480496	Statement	32	121:15:2073:2074	6480190	21	True				
ANR	6480497	Statement	","	121:17:2075:2075	6480190	22	True				
ANR	6480498	Statement	be32	121:19:2077:2080	6480190	23	True				
ANR	6480499	Statement	","	121:23:2081:2081	6480190	24	True				
ANR	6480500	Statement	src	121:25:2083:2085	6480190	25	True				
ANR	6480501	Statement	","	121:28:2086:2086	6480190	26	True				
ANR	6480502	Statement	samples	121:30:2088:2094	6480190	27	True				
ANR	6480503	Statement	","	121:37:2095:2095	6480190	28	True				
ANR	6480504	Statement	n	121:39:2097:2097	6480190	29	True				
ANR	6480505	Statement	","	121:40:2098:2098	6480190	30	True				
ANR	6480506	Statement	0	121:42:2100:2100	6480190	31	True				
ANR	6480507	Statement	","	121:43:2101:2101	6480190	32	True				
ANR	6480508	Statement	0x80000000	121:45:2103:2112	6480190	33	True				
ANR	6480509	Statement	)	121:55:2113:2113	6480190	34	True				
ANR	6480510	BreakStatement	break ;	123:8:2124:2129	6480190	35	True				
ANR	6480511	Label	case AV_CODEC_ID_PCM_S24LE :	125:4:2136:2162	6480190	36	True				
ANR	6480512	Identifier	AV_CODEC_ID_PCM_S24LE		6480190	0					
ANR	6480513	Statement	DECODE	127:8:2173:2178	6480190	37	True				
ANR	6480514	Statement	(	127:14:2179:2179	6480190	38	True				
ANR	6480515	Statement	32	127:15:2180:2181	6480190	39	True				
ANR	6480516	Statement	","	127:17:2182:2182	6480190	40	True				
ANR	6480517	Statement	le24	127:19:2184:2187	6480190	41	True				
ANR	6480518	Statement	","	127:23:2188:2188	6480190	42	True				
ANR	6480519	Statement	src	127:25:2190:2192	6480190	43	True				
ANR	6480520	Statement	","	127:28:2193:2193	6480190	44	True				
ANR	6480521	Statement	samples	127:30:2195:2201	6480190	45	True				
ANR	6480522	Statement	","	127:37:2202:2202	6480190	46	True				
ANR	6480523	Statement	n	127:39:2204:2204	6480190	47	True				
ANR	6480524	Statement	","	127:40:2205:2205	6480190	48	True				
ANR	6480525	Statement	8	127:42:2207:2207	6480190	49	True				
ANR	6480526	Statement	","	127:43:2208:2208	6480190	50	True				
ANR	6480527	Statement	0	127:45:2210:2210	6480190	51	True				
ANR	6480528	Statement	)	127:46:2211:2211	6480190	52	True				
ANR	6480529	BreakStatement	break ;	129:8:2222:2227	6480190	53	True				
ANR	6480530	Label	case AV_CODEC_ID_PCM_S24BE :	131:4:2234:2260	6480190	54	True				
ANR	6480531	Identifier	AV_CODEC_ID_PCM_S24BE		6480190	0					
ANR	6480532	Statement	DECODE	133:8:2271:2276	6480190	55	True				
ANR	6480533	Statement	(	133:14:2277:2277	6480190	56	True				
ANR	6480534	Statement	32	133:15:2278:2279	6480190	57	True				
ANR	6480535	Statement	","	133:17:2280:2280	6480190	58	True				
ANR	6480536	Statement	be24	133:19:2282:2285	6480190	59	True				
ANR	6480537	Statement	","	133:23:2286:2286	6480190	60	True				
ANR	6480538	Statement	src	133:25:2288:2290	6480190	61	True				
ANR	6480539	Statement	","	133:28:2291:2291	6480190	62	True				
ANR	6480540	Statement	samples	133:30:2293:2299	6480190	63	True				
ANR	6480541	Statement	","	133:37:2300:2300	6480190	64	True				
ANR	6480542	Statement	n	133:39:2302:2302	6480190	65	True				
ANR	6480543	Statement	","	133:40:2303:2303	6480190	66	True				
ANR	6480544	Statement	8	133:42:2305:2305	6480190	67	True				
ANR	6480545	Statement	","	133:43:2306:2306	6480190	68	True				
ANR	6480546	Statement	0	133:45:2308:2308	6480190	69	True				
ANR	6480547	Statement	)	133:46:2309:2309	6480190	70	True				
ANR	6480548	BreakStatement	break ;	135:8:2320:2325	6480190	71	True				
ANR	6480549	Label	case AV_CODEC_ID_PCM_U24LE :	137:4:2332:2358	6480190	72	True				
ANR	6480550	Identifier	AV_CODEC_ID_PCM_U24LE		6480190	0					
ANR	6480551	Statement	DECODE	139:8:2369:2374	6480190	73	True				
ANR	6480552	Statement	(	139:14:2375:2375	6480190	74	True				
ANR	6480553	Statement	32	139:15:2376:2377	6480190	75	True				
ANR	6480554	Statement	","	139:17:2378:2378	6480190	76	True				
ANR	6480555	Statement	le24	139:19:2380:2383	6480190	77	True				
ANR	6480556	Statement	","	139:23:2384:2384	6480190	78	True				
ANR	6480557	Statement	src	139:25:2386:2388	6480190	79	True				
ANR	6480558	Statement	","	139:28:2389:2389	6480190	80	True				
ANR	6480559	Statement	samples	139:30:2391:2397	6480190	81	True				
ANR	6480560	Statement	","	139:37:2398:2398	6480190	82	True				
ANR	6480561	Statement	n	139:39:2400:2400	6480190	83	True				
ANR	6480562	Statement	","	139:40:2401:2401	6480190	84	True				
ANR	6480563	Statement	8	139:42:2403:2403	6480190	85	True				
ANR	6480564	Statement	","	139:43:2404:2404	6480190	86	True				
ANR	6480565	Statement	0x800000	139:45:2406:2413	6480190	87	True				
ANR	6480566	Statement	)	139:53:2414:2414	6480190	88	True				
ANR	6480567	BreakStatement	break ;	141:8:2425:2430	6480190	89	True				
ANR	6480568	Label	case AV_CODEC_ID_PCM_U24BE :	143:4:2437:2463	6480190	90	True				
ANR	6480569	Identifier	AV_CODEC_ID_PCM_U24BE		6480190	0					
ANR	6480570	Statement	DECODE	145:8:2474:2479	6480190	91	True				
ANR	6480571	Statement	(	145:14:2480:2480	6480190	92	True				
ANR	6480572	Statement	32	145:15:2481:2482	6480190	93	True				
ANR	6480573	Statement	","	145:17:2483:2483	6480190	94	True				
ANR	6480574	Statement	be24	145:19:2485:2488	6480190	95	True				
ANR	6480575	Statement	","	145:23:2489:2489	6480190	96	True				
ANR	6480576	Statement	src	145:25:2491:2493	6480190	97	True				
ANR	6480577	Statement	","	145:28:2494:2494	6480190	98	True				
ANR	6480578	Statement	samples	145:30:2496:2502	6480190	99	True				
ANR	6480579	Statement	","	145:37:2503:2503	6480190	100	True				
ANR	6480580	Statement	n	145:39:2505:2505	6480190	101	True				
ANR	6480581	Statement	","	145:40:2506:2506	6480190	102	True				
ANR	6480582	Statement	8	145:42:2508:2508	6480190	103	True				
ANR	6480583	Statement	","	145:43:2509:2509	6480190	104	True				
ANR	6480584	Statement	0x800000	145:45:2511:2518	6480190	105	True				
ANR	6480585	Statement	)	145:53:2519:2519	6480190	106	True				
ANR	6480586	BreakStatement	break ;	147:8:2530:2535	6480190	107	True				
ANR	6480587	Label	case AV_CODEC_ID_PCM_S24DAUD :	149:4:2542:2570	6480190	108	True				
ANR	6480588	Identifier	AV_CODEC_ID_PCM_S24DAUD		6480190	0					
ANR	6480589	ForStatement	for ( ; n > 0 ; n -- )		6480190	109					
ANR	6480590	Condition	n > 0	151:15:2588:2592	6480190	0	True				
ANR	6480591	RelationalExpression	n > 0		6480190	0		>			
ANR	6480592	Identifier	n		6480190	0					
ANR	6480593	PrimaryExpression	0		6480190	1					
ANR	6480594	PostIncDecOperationExpression	n --	151:22:2595:2597	6480190	1	True				
ANR	6480595	Identifier	n		6480190	0					
ANR	6480596	IncDec	--		6480190	1					
ANR	6480597	CompoundStatement		149:12:2484:2522	6480190	2					
ANR	6480598	IdentifierDeclStatement	uint32_t v = bytestream_get_be24 ( & src ) ;	153:12:2615:2653	6480190	0	True				
ANR	6480599	IdentifierDecl	v = bytestream_get_be24 ( & src )		6480190	0					
ANR	6480600	IdentifierDeclType	uint32_t		6480190	0					
ANR	6480601	Identifier	v		6480190	1					
ANR	6480602	AssignmentExpression	v = bytestream_get_be24 ( & src )		6480190	2		=			
ANR	6480603	Identifier	v		6480190	0					
ANR	6480604	CallExpression	bytestream_get_be24 ( & src )		6480190	1					
ANR	6480605	Callee	bytestream_get_be24		6480190	0					
ANR	6480606	Identifier	bytestream_get_be24		6480190	0					
ANR	6480607	ArgumentList	& src		6480190	1					
ANR	6480608	Argument	& src		6480190	0					
ANR	6480609	UnaryOperationExpression	& src		6480190	0					
ANR	6480610	UnaryOperator	&		6480190	0					
ANR	6480611	Identifier	src		6480190	1					
ANR	6480612	ExpressionStatement	v >>= 4	155:12:2668:2675	6480190	1	True				
ANR	6480613	AssignmentExpression	v >>= 4		6480190	0		>>=			
ANR	6480614	Identifier	v		6480190	0					
ANR	6480615	PrimaryExpression	4		6480190	1					
ANR	6480616	ExpressionStatement	"AV_WN16A ( samples , ff_reverse [ ( v >> 8 ) & 0xff ] + ( ff_reverse [ v & 0xff ] << 8 ) )"	157:12:2713:2826	6480190	2	True				
ANR	6480617	CallExpression	"AV_WN16A ( samples , ff_reverse [ ( v >> 8 ) & 0xff ] + ( ff_reverse [ v & 0xff ] << 8 ) )"		6480190	0					
ANR	6480618	Callee	AV_WN16A		6480190	0					
ANR	6480619	Identifier	AV_WN16A		6480190	0					
ANR	6480620	ArgumentList	samples		6480190	1					
ANR	6480621	Argument	samples		6480190	0					
ANR	6480622	Identifier	samples		6480190	0					
ANR	6480623	Argument	ff_reverse [ ( v >> 8 ) & 0xff ] + ( ff_reverse [ v & 0xff ] << 8 )		6480190	1					
ANR	6480624	AdditiveExpression	ff_reverse [ ( v >> 8 ) & 0xff ] + ( ff_reverse [ v & 0xff ] << 8 )		6480190	0		+			
ANR	6480625	ArrayIndexing	ff_reverse [ ( v >> 8 ) & 0xff ]		6480190	0					
ANR	6480626	Identifier	ff_reverse		6480190	0					
ANR	6480627	BitAndExpression	( v >> 8 ) & 0xff		6480190	1		&			
ANR	6480628	ShiftExpression	v >> 8		6480190	0		>>			
ANR	6480629	Identifier	v		6480190	0					
ANR	6480630	PrimaryExpression	8		6480190	1					
ANR	6480631	PrimaryExpression	0xff		6480190	1					
ANR	6480632	ShiftExpression	ff_reverse [ v & 0xff ] << 8		6480190	1		<<			
ANR	6480633	ArrayIndexing	ff_reverse [ v & 0xff ]		6480190	0					
ANR	6480634	Identifier	ff_reverse		6480190	0					
ANR	6480635	BitAndExpression	v & 0xff		6480190	1		&			
ANR	6480636	Identifier	v		6480190	0					
ANR	6480637	PrimaryExpression	0xff		6480190	1					
ANR	6480638	PrimaryExpression	8		6480190	1					
ANR	6480639	ExpressionStatement	samples += 2	161:12:2841:2853	6480190	3	True				
ANR	6480640	AssignmentExpression	samples += 2		6480190	0		+=			
ANR	6480641	Identifier	samples		6480190	0					
ANR	6480642	PrimaryExpression	2		6480190	1					
ANR	6480643	BreakStatement	break ;	165:8:2875:2880	6480190	110	True				
ANR	6480644	Label	case AV_CODEC_ID_PCM_S16LE_PLANAR :	167:4:2887:2920	6480190	111	True				
ANR	6480645	Identifier	AV_CODEC_ID_PCM_S16LE_PLANAR		6480190	0					
ANR	6480646	CompoundStatement		167:8:2807:2823	6480190	112					
ANR	6480647	IdentifierDeclStatement	int av_unused n2 ;	171:8:2938:2954	6480190	0	True				
ANR	6480648	IdentifierDecl	n2		6480190	0					
ANR	6480649	IdentifierDeclType	int av_unused		6480190	0					
ANR	6480650	Identifier	n2		6480190	1					
ANR	6480651	ExpressionStatement	n /= avctx -> channels	173:8:2965:2985	6480190	1	True				
ANR	6480652	AssignmentExpression	n /= avctx -> channels		6480190	0		/=			
ANR	6480653	Identifier	n		6480190	0					
ANR	6480654	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6480655	Identifier	avctx		6480190	0					
ANR	6480656	Identifier	channels		6480190	1					
ANR	6480657	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6480190	2					
ANR	6480658	ForInit	c = 0 ;	175:13:3001:3006	6480190	0	True				
ANR	6480659	AssignmentExpression	c = 0		6480190	0		=			
ANR	6480660	Identifier	c		6480190	0					
ANR	6480661	PrimaryExpression	0		6480190	1					
ANR	6480662	Condition	c < avctx -> channels	175:20:3008:3026	6480190	1	True				
ANR	6480663	RelationalExpression	c < avctx -> channels		6480190	0		<			
ANR	6480664	Identifier	c		6480190	0					
ANR	6480665	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6480666	Identifier	avctx		6480190	0					
ANR	6480667	Identifier	channels		6480190	1					
ANR	6480668	PostIncDecOperationExpression	c ++	175:41:3029:3031	6480190	2	True				
ANR	6480669	Identifier	c		6480190	0					
ANR	6480670	IncDec	++		6480190	1					
ANR	6480671	CompoundStatement		171:46:2903:2903	6480190	3					
ANR	6480672	ExpressionStatement	samples = frame -> extended_data [ c ]	177:12:3049:3082	6480190	0	True				
ANR	6480673	AssignmentExpression	samples = frame -> extended_data [ c ]		6480190	0		=			
ANR	6480674	Identifier	samples		6480190	0					
ANR	6480675	ArrayIndexing	frame -> extended_data [ c ]		6480190	1					
ANR	6480676	PtrMemberAccess	frame -> extended_data		6480190	0					
ANR	6480677	Identifier	frame		6480190	0					
ANR	6480678	Identifier	extended_data		6480190	1					
ANR	6480679	Identifier	c		6480190	1					
ANR	6480680	ExpressionStatement	n2 = n	181:12:3117:3123	6480190	1	True				
ANR	6480681	AssignmentExpression	n2 = n		6480190	0		=			
ANR	6480682	Identifier	n2		6480190	0					
ANR	6480683	Identifier	n		6480190	1					
ANR	6480684	Statement	DECODE	183:12:3138:3143	6480190	2	True				
ANR	6480685	Statement	(	183:18:3144:3144	6480190	3	True				
ANR	6480686	Statement	16	183:19:3145:3146	6480190	4	True				
ANR	6480687	Statement	","	183:21:3147:3147	6480190	5	True				
ANR	6480688	Statement	le16	183:23:3149:3152	6480190	6	True				
ANR	6480689	Statement	","	183:27:3153:3153	6480190	7	True				
ANR	6480690	Statement	src	183:29:3155:3157	6480190	8	True				
ANR	6480691	Statement	","	183:32:3158:3158	6480190	9	True				
ANR	6480692	Statement	samples	183:34:3160:3166	6480190	10	True				
ANR	6480693	Statement	","	183:41:3167:3167	6480190	11	True				
ANR	6480694	Statement	n2	183:43:3169:3170	6480190	12	True				
ANR	6480695	Statement	","	183:45:3171:3171	6480190	13	True				
ANR	6480696	Statement	0	183:47:3173:3173	6480190	14	True				
ANR	6480697	Statement	","	183:48:3174:3174	6480190	15	True				
ANR	6480698	Statement	0	183:50:3176:3176	6480190	16	True				
ANR	6480699	Statement	)	183:51:3177:3177	6480190	17	True				
ANR	6480700	BreakStatement	break ;	195:8:3283:3288	6480190	3	True				
ANR	6480701	Label	case AV_CODEC_ID_PCM_U16LE :	199:4:3302:3328	6480190	113	True				
ANR	6480702	Identifier	AV_CODEC_ID_PCM_U16LE		6480190	0					
ANR	6480703	Statement	DECODE	201:8:3339:3344	6480190	114	True				
ANR	6480704	Statement	(	201:14:3345:3345	6480190	115	True				
ANR	6480705	Statement	16	201:15:3346:3347	6480190	116	True				
ANR	6480706	Statement	","	201:17:3348:3348	6480190	117	True				
ANR	6480707	Statement	le16	201:19:3350:3353	6480190	118	True				
ANR	6480708	Statement	","	201:23:3354:3354	6480190	119	True				
ANR	6480709	Statement	src	201:25:3356:3358	6480190	120	True				
ANR	6480710	Statement	","	201:28:3359:3359	6480190	121	True				
ANR	6480711	Statement	samples	201:30:3361:3367	6480190	122	True				
ANR	6480712	Statement	","	201:37:3368:3368	6480190	123	True				
ANR	6480713	Statement	n	201:39:3370:3370	6480190	124	True				
ANR	6480714	Statement	","	201:40:3371:3371	6480190	125	True				
ANR	6480715	Statement	0	201:42:3373:3373	6480190	126	True				
ANR	6480716	Statement	","	201:43:3374:3374	6480190	127	True				
ANR	6480717	Statement	0x8000	201:45:3376:3381	6480190	128	True				
ANR	6480718	Statement	)	201:51:3382:3382	6480190	129	True				
ANR	6480719	BreakStatement	break ;	203:8:3393:3398	6480190	130	True				
ANR	6480720	Label	case AV_CODEC_ID_PCM_U16BE :	205:4:3405:3431	6480190	131	True				
ANR	6480721	Identifier	AV_CODEC_ID_PCM_U16BE		6480190	0					
ANR	6480722	Statement	DECODE	207:8:3442:3447	6480190	132	True				
ANR	6480723	Statement	(	207:14:3448:3448	6480190	133	True				
ANR	6480724	Statement	16	207:15:3449:3450	6480190	134	True				
ANR	6480725	Statement	","	207:17:3451:3451	6480190	135	True				
ANR	6480726	Statement	be16	207:19:3453:3456	6480190	136	True				
ANR	6480727	Statement	","	207:23:3457:3457	6480190	137	True				
ANR	6480728	Statement	src	207:25:3459:3461	6480190	138	True				
ANR	6480729	Statement	","	207:28:3462:3462	6480190	139	True				
ANR	6480730	Statement	samples	207:30:3464:3470	6480190	140	True				
ANR	6480731	Statement	","	207:37:3471:3471	6480190	141	True				
ANR	6480732	Statement	n	207:39:3473:3473	6480190	142	True				
ANR	6480733	Statement	","	207:40:3474:3474	6480190	143	True				
ANR	6480734	Statement	0	207:42:3476:3476	6480190	144	True				
ANR	6480735	Statement	","	207:43:3477:3477	6480190	145	True				
ANR	6480736	Statement	0x8000	207:45:3479:3484	6480190	146	True				
ANR	6480737	Statement	)	207:51:3485:3485	6480190	147	True				
ANR	6480738	BreakStatement	break ;	209:8:3496:3501	6480190	148	True				
ANR	6480739	Label	case AV_CODEC_ID_PCM_S8 :	211:4:3508:3531	6480190	149	True				
ANR	6480740	Identifier	AV_CODEC_ID_PCM_S8		6480190	0					
ANR	6480741	ForStatement	for ( ; n > 0 ; n -- )		6480190	150					
ANR	6480742	Condition	n > 0	213:15:3549:3553	6480190	0	True				
ANR	6480743	RelationalExpression	n > 0		6480190	0		>			
ANR	6480744	Identifier	n		6480190	0					
ANR	6480745	PrimaryExpression	0		6480190	1					
ANR	6480746	PostIncDecOperationExpression	n --	213:22:3556:3558	6480190	1	True				
ANR	6480747	Identifier	n		6480190	0					
ANR	6480748	IncDec	--		6480190	1					
ANR	6480749	ExpressionStatement	* samples ++ = * src ++ + 128	215:12:3574:3599	6480190	2	True				
ANR	6480750	AssignmentExpression	* samples ++ = * src ++ + 128		6480190	0		=			
ANR	6480751	UnaryOperationExpression	* samples ++		6480190	0					
ANR	6480752	UnaryOperator	*		6480190	0					
ANR	6480753	PostIncDecOperationExpression	samples ++		6480190	1					
ANR	6480754	Identifier	samples		6480190	0					
ANR	6480755	IncDec	++		6480190	1					
ANR	6480756	AdditiveExpression	* src ++ + 128		6480190	1		+			
ANR	6480757	UnaryOperationExpression	* src ++		6480190	0					
ANR	6480758	UnaryOperator	*		6480190	0					
ANR	6480759	PostIncDecOperationExpression	src ++		6480190	1					
ANR	6480760	Identifier	src		6480190	0					
ANR	6480761	IncDec	++		6480190	1					
ANR	6480762	PrimaryExpression	128		6480190	1					
ANR	6480763	BreakStatement	break ;	217:8:3610:3615	6480190	151	True				
ANR	6480764	Label	case AV_CODEC_ID_PCM_F64LE :	221:4:3642:3668	6480190	152	True				
ANR	6480765	Identifier	AV_CODEC_ID_PCM_F64LE		6480190	0					
ANR	6480766	Statement	DECODE	223:8:3679:3684	6480190	153	True				
ANR	6480767	Statement	(	223:14:3685:3685	6480190	154	True				
ANR	6480768	Statement	64	223:15:3686:3687	6480190	155	True				
ANR	6480769	Statement	","	223:17:3688:3688	6480190	156	True				
ANR	6480770	Statement	le64	223:19:3690:3693	6480190	157	True				
ANR	6480771	Statement	","	223:23:3694:3694	6480190	158	True				
ANR	6480772	Statement	src	223:25:3696:3698	6480190	159	True				
ANR	6480773	Statement	","	223:28:3699:3699	6480190	160	True				
ANR	6480774	Statement	samples	223:30:3701:3707	6480190	161	True				
ANR	6480775	Statement	","	223:37:3708:3708	6480190	162	True				
ANR	6480776	Statement	n	223:39:3710:3710	6480190	163	True				
ANR	6480777	Statement	","	223:40:3711:3711	6480190	164	True				
ANR	6480778	Statement	0	223:42:3713:3713	6480190	165	True				
ANR	6480779	Statement	","	223:43:3714:3714	6480190	166	True				
ANR	6480780	Statement	0	223:45:3716:3716	6480190	167	True				
ANR	6480781	Statement	)	223:46:3717:3717	6480190	168	True				
ANR	6480782	BreakStatement	break ;	225:8:3728:3733	6480190	169	True				
ANR	6480783	Label	case AV_CODEC_ID_PCM_S32LE :	227:4:3740:3766	6480190	170	True				
ANR	6480784	Identifier	AV_CODEC_ID_PCM_S32LE		6480190	0					
ANR	6480785	Label	case AV_CODEC_ID_PCM_F32LE :	229:4:3773:3799	6480190	171	True				
ANR	6480786	Identifier	AV_CODEC_ID_PCM_F32LE		6480190	0					
ANR	6480787	Statement	DECODE	231:8:3810:3815	6480190	172	True				
ANR	6480788	Statement	(	231:14:3816:3816	6480190	173	True				
ANR	6480789	Statement	32	231:15:3817:3818	6480190	174	True				
ANR	6480790	Statement	","	231:17:3819:3819	6480190	175	True				
ANR	6480791	Statement	le32	231:19:3821:3824	6480190	176	True				
ANR	6480792	Statement	","	231:23:3825:3825	6480190	177	True				
ANR	6480793	Statement	src	231:25:3827:3829	6480190	178	True				
ANR	6480794	Statement	","	231:28:3830:3830	6480190	179	True				
ANR	6480795	Statement	samples	231:30:3832:3838	6480190	180	True				
ANR	6480796	Statement	","	231:37:3839:3839	6480190	181	True				
ANR	6480797	Statement	n	231:39:3841:3841	6480190	182	True				
ANR	6480798	Statement	","	231:40:3842:3842	6480190	183	True				
ANR	6480799	Statement	0	231:42:3844:3844	6480190	184	True				
ANR	6480800	Statement	","	231:43:3845:3845	6480190	185	True				
ANR	6480801	Statement	0	231:45:3847:3847	6480190	186	True				
ANR	6480802	Statement	)	231:46:3848:3848	6480190	187	True				
ANR	6480803	BreakStatement	break ;	233:8:3859:3864	6480190	188	True				
ANR	6480804	Label	case AV_CODEC_ID_PCM_S16LE :	235:4:3871:3897	6480190	189	True				
ANR	6480805	Identifier	AV_CODEC_ID_PCM_S16LE		6480190	0					
ANR	6480806	Statement	DECODE	237:8:3908:3913	6480190	190	True				
ANR	6480807	Statement	(	237:14:3914:3914	6480190	191	True				
ANR	6480808	Statement	16	237:15:3915:3916	6480190	192	True				
ANR	6480809	Statement	","	237:17:3917:3917	6480190	193	True				
ANR	6480810	Statement	le16	237:19:3919:3922	6480190	194	True				
ANR	6480811	Statement	","	237:23:3923:3923	6480190	195	True				
ANR	6480812	Statement	src	237:25:3925:3927	6480190	196	True				
ANR	6480813	Statement	","	237:28:3928:3928	6480190	197	True				
ANR	6480814	Statement	samples	237:30:3930:3936	6480190	198	True				
ANR	6480815	Statement	","	237:37:3937:3937	6480190	199	True				
ANR	6480816	Statement	n	237:39:3939:3939	6480190	200	True				
ANR	6480817	Statement	","	237:40:3940:3940	6480190	201	True				
ANR	6480818	Statement	0	237:42:3942:3942	6480190	202	True				
ANR	6480819	Statement	","	237:43:3943:3943	6480190	203	True				
ANR	6480820	Statement	0	237:45:3945:3945	6480190	204	True				
ANR	6480821	Statement	)	237:46:3946:3946	6480190	205	True				
ANR	6480822	BreakStatement	break ;	239:8:3957:3962	6480190	206	True				
ANR	6480823	Label	case AV_CODEC_ID_PCM_F64BE :	241:4:3969:3995	6480190	207	True				
ANR	6480824	Identifier	AV_CODEC_ID_PCM_F64BE		6480190	0					
ANR	6480825	Label	case AV_CODEC_ID_PCM_F32BE :	243:4:4002:4028	6480190	208	True				
ANR	6480826	Identifier	AV_CODEC_ID_PCM_F32BE		6480190	0					
ANR	6480827	Label	case AV_CODEC_ID_PCM_S32BE :	245:4:4035:4061	6480190	209	True				
ANR	6480828	Identifier	AV_CODEC_ID_PCM_S32BE		6480190	0					
ANR	6480829	Label	case AV_CODEC_ID_PCM_S16BE :	247:4:4068:4094	6480190	210	True				
ANR	6480830	Identifier	AV_CODEC_ID_PCM_S16BE		6480190	0					
ANR	6480831	Label	case AV_CODEC_ID_PCM_U8 :	281:4:4596:4619	6480190	211	True				
ANR	6480832	Identifier	AV_CODEC_ID_PCM_U8		6480190	0					
ANR	6480833	ExpressionStatement	"memcpy ( samples , src , n * sample_size )"	283:8:4630:4667	6480190	212	True				
ANR	6480834	CallExpression	"memcpy ( samples , src , n * sample_size )"		6480190	0					
ANR	6480835	Callee	memcpy		6480190	0					
ANR	6480836	Identifier	memcpy		6480190	0					
ANR	6480837	ArgumentList	samples		6480190	1					
ANR	6480838	Argument	samples		6480190	0					
ANR	6480839	Identifier	samples		6480190	0					
ANR	6480840	Argument	src		6480190	1					
ANR	6480841	Identifier	src		6480190	0					
ANR	6480842	Argument	n * sample_size		6480190	2					
ANR	6480843	MultiplicativeExpression	n * sample_size		6480190	0		*			
ANR	6480844	Identifier	n		6480190	0					
ANR	6480845	Identifier	sample_size		6480190	1					
ANR	6480846	BreakStatement	break ;	285:8:4678:4683	6480190	213	True				
ANR	6480847	Label	case AV_CODEC_ID_PCM_ZORK :	287:4:4690:4715	6480190	214	True				
ANR	6480848	Identifier	AV_CODEC_ID_PCM_ZORK		6480190	0					
ANR	6480849	ForStatement	for ( ; n > 0 ; n -- )		6480190	215					
ANR	6480850	Condition	n > 0	289:15:4733:4737	6480190	0	True				
ANR	6480851	RelationalExpression	n > 0		6480190	0		>			
ANR	6480852	Identifier	n		6480190	0					
ANR	6480853	PrimaryExpression	0		6480190	1					
ANR	6480854	PostIncDecOperationExpression	n --	289:22:4740:4742	6480190	1	True				
ANR	6480855	Identifier	n		6480190	0					
ANR	6480856	IncDec	--		6480190	1					
ANR	6480857	CompoundStatement		287:12:4629:4643	6480190	2					
ANR	6480858	IdentifierDeclStatement	int v = * src ++ ;	291:12:4760:4774	6480190	0	True				
ANR	6480859	IdentifierDecl	v = * src ++		6480190	0					
ANR	6480860	IdentifierDeclType	int		6480190	0					
ANR	6480861	Identifier	v		6480190	1					
ANR	6480862	AssignmentExpression	v = * src ++		6480190	2		=			
ANR	6480863	Identifier	v		6480190	0					
ANR	6480864	UnaryOperationExpression	* src ++		6480190	1					
ANR	6480865	UnaryOperator	*		6480190	0					
ANR	6480866	PostIncDecOperationExpression	src ++		6480190	1					
ANR	6480867	Identifier	src		6480190	0					
ANR	6480868	IncDec	++		6480190	1					
ANR	6480869	IfStatement	if ( v < 128 )		6480190	1					
ANR	6480870	Condition	v < 128	293:16:4793:4799	6480190	0	True				
ANR	6480871	RelationalExpression	v < 128		6480190	0		<			
ANR	6480872	Identifier	v		6480190	0					
ANR	6480873	PrimaryExpression	128		6480190	1					
ANR	6480874	ExpressionStatement	v = 128 - v	295:16:4819:4830	6480190	1	True				
ANR	6480875	AssignmentExpression	v = 128 - v		6480190	0		=			
ANR	6480876	Identifier	v		6480190	0					
ANR	6480877	AdditiveExpression	128 - v		6480190	1		-			
ANR	6480878	PrimaryExpression	128		6480190	0					
ANR	6480879	Identifier	v		6480190	1					
ANR	6480880	ExpressionStatement	* samples ++ = v	297:12:4845:4859	6480190	2	True				
ANR	6480881	AssignmentExpression	* samples ++ = v		6480190	0		=			
ANR	6480882	UnaryOperationExpression	* samples ++		6480190	0					
ANR	6480883	UnaryOperator	*		6480190	0					
ANR	6480884	PostIncDecOperationExpression	samples ++		6480190	1					
ANR	6480885	Identifier	samples		6480190	0					
ANR	6480886	IncDec	++		6480190	1					
ANR	6480887	Identifier	v		6480190	1					
ANR	6480888	BreakStatement	break ;	301:8:4881:4886	6480190	216	True				
ANR	6480889	Label	case AV_CODEC_ID_PCM_ALAW :	303:4:4893:4918	6480190	217	True				
ANR	6480890	Identifier	AV_CODEC_ID_PCM_ALAW		6480190	0					
ANR	6480891	Label	case AV_CODEC_ID_PCM_MULAW :	305:4:4925:4951	6480190	218	True				
ANR	6480892	Identifier	AV_CODEC_ID_PCM_MULAW		6480190	0					
ANR	6480893	ForStatement	for ( ; n > 0 ; n -- )		6480190	219					
ANR	6480894	Condition	n > 0	307:15:4969:4973	6480190	0	True				
ANR	6480895	RelationalExpression	n > 0		6480190	0		>			
ANR	6480896	Identifier	n		6480190	0					
ANR	6480897	PrimaryExpression	0		6480190	1					
ANR	6480898	PostIncDecOperationExpression	n --	307:22:4976:4978	6480190	1	True				
ANR	6480899	Identifier	n		6480190	0					
ANR	6480900	IncDec	--		6480190	1					
ANR	6480901	CompoundStatement		303:27:4850:4850	6480190	2					
ANR	6480902	ExpressionStatement	"AV_WN16A ( samples , s -> table [ * src ++ ] )"	309:12:4996:5031	6480190	0	True				
ANR	6480903	CallExpression	"AV_WN16A ( samples , s -> table [ * src ++ ] )"		6480190	0					
ANR	6480904	Callee	AV_WN16A		6480190	0					
ANR	6480905	Identifier	AV_WN16A		6480190	0					
ANR	6480906	ArgumentList	samples		6480190	1					
ANR	6480907	Argument	samples		6480190	0					
ANR	6480908	Identifier	samples		6480190	0					
ANR	6480909	Argument	s -> table [ * src ++ ]		6480190	1					
ANR	6480910	ArrayIndexing	s -> table [ * src ++ ]		6480190	0					
ANR	6480911	PtrMemberAccess	s -> table		6480190	0					
ANR	6480912	Identifier	s		6480190	0					
ANR	6480913	Identifier	table		6480190	1					
ANR	6480914	UnaryOperationExpression	* src ++		6480190	1					
ANR	6480915	UnaryOperator	*		6480190	0					
ANR	6480916	PostIncDecOperationExpression	src ++		6480190	1					
ANR	6480917	Identifier	src		6480190	0					
ANR	6480918	IncDec	++		6480190	1					
ANR	6480919	ExpressionStatement	samples += 2	311:12:5046:5058	6480190	1	True				
ANR	6480920	AssignmentExpression	samples += 2		6480190	0		+=			
ANR	6480921	Identifier	samples		6480190	0					
ANR	6480922	PrimaryExpression	2		6480190	1					
ANR	6480923	BreakStatement	break ;	315:8:5080:5085	6480190	220	True				
ANR	6480924	Label	case AV_CODEC_ID_PCM_DVD :	317:4:5092:5116	6480190	221	True				
ANR	6480925	Identifier	AV_CODEC_ID_PCM_DVD		6480190	0					
ANR	6480926	CompoundStatement		317:8:5003:5022	6480190	222					
ANR	6480927	IdentifierDeclStatement	const uint8_t * src8 ;	321:8:5134:5153	6480190	0	True				
ANR	6480928	IdentifierDecl	* src8		6480190	0					
ANR	6480929	IdentifierDeclType	const uint8_t *		6480190	0					
ANR	6480930	Identifier	src8		6480190	1					
ANR	6480931	ExpressionStatement	dst_int32_t = ( int32_t * ) frame -> data [ 0 ]	323:8:5164:5203	6480190	1	True				
ANR	6480932	AssignmentExpression	dst_int32_t = ( int32_t * ) frame -> data [ 0 ]		6480190	0		=			
ANR	6480933	Identifier	dst_int32_t		6480190	0					
ANR	6480934	CastExpression	( int32_t * ) frame -> data [ 0 ]		6480190	1					
ANR	6480935	CastTarget	int32_t *		6480190	0					
ANR	6480936	ArrayIndexing	frame -> data [ 0 ]		6480190	1					
ANR	6480937	PtrMemberAccess	frame -> data		6480190	0					
ANR	6480938	Identifier	frame		6480190	0					
ANR	6480939	Identifier	data		6480190	1					
ANR	6480940	PrimaryExpression	0		6480190	1					
ANR	6480941	ExpressionStatement	n /= avctx -> channels	325:8:5214:5234	6480190	2	True				
ANR	6480942	AssignmentExpression	n /= avctx -> channels		6480190	0		/=			
ANR	6480943	Identifier	n		6480190	0					
ANR	6480944	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6480945	Identifier	avctx		6480190	0					
ANR	6480946	Identifier	channels		6480190	1					
ANR	6480947	SwitchStatement	switch ( avctx -> bits_per_coded_sample )		6480190	3					
ANR	6480948	Condition	avctx -> bits_per_coded_sample	327:16:5253:5280	6480190	0	True				
ANR	6480949	PtrMemberAccess	avctx -> bits_per_coded_sample		6480190	0					
ANR	6480950	Identifier	avctx		6480190	0					
ANR	6480951	Identifier	bits_per_coded_sample		6480190	1					
ANR	6480952	CompoundStatement		323:46:5152:5152	6480190	1					
ANR	6480953	Label	case 20 :	329:8:5294:5301	6480190	0	True				
ANR	6480954	WhileStatement	while ( n -- )		6480190	1					
ANR	6480955	Condition	n --	331:19:5323:5325	6480190	0	True				
ANR	6480956	PostIncDecOperationExpression	n --		6480190	0					
ANR	6480957	Identifier	n		6480190	0					
ANR	6480958	IncDec	--		6480190	1					
ANR	6480959	CompoundStatement		327:24:5197:5197	6480190	1					
ANR	6480960	ExpressionStatement	c = avctx -> channels	333:16:5347:5369	6480190	0	True				
ANR	6480961	AssignmentExpression	c = avctx -> channels		6480190	0		=			
ANR	6480962	Identifier	c		6480190	0					
ANR	6480963	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6480964	Identifier	avctx		6480190	0					
ANR	6480965	Identifier	channels		6480190	1					
ANR	6480966	ExpressionStatement	src8 = src + 4 * c	335:16:5388:5406	6480190	1	True				
ANR	6480967	AssignmentExpression	src8 = src + 4 * c		6480190	0		=			
ANR	6480968	Identifier	src8		6480190	0					
ANR	6480969	AdditiveExpression	src + 4 * c		6480190	1		+			
ANR	6480970	Identifier	src		6480190	0					
ANR	6480971	MultiplicativeExpression	4 * c		6480190	1		*			
ANR	6480972	PrimaryExpression	4		6480190	0					
ANR	6480973	Identifier	c		6480190	1					
ANR	6480974	WhileStatement	while ( c -- )		6480190	2					
ANR	6480975	Condition	c --	337:23:5432:5434	6480190	0	True				
ANR	6480976	PostIncDecOperationExpression	c --		6480190	0					
ANR	6480977	Identifier	c		6480190	0					
ANR	6480978	IncDec	--		6480190	1					
ANR	6480979	CompoundStatement		333:28:5306:5306	6480190	1					
ANR	6480980	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )	339:20:5460:5537	6480190	0	True				
ANR	6480981	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6480190	0		=			
ANR	6480982	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6480983	UnaryOperator	*		6480190	0					
ANR	6480984	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6480985	Identifier	dst_int32_t		6480190	0					
ANR	6480986	IncDec	++		6480190	1					
ANR	6480987	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6480190	1		+			
ANR	6480988	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6480190	0		<<			
ANR	6480989	CallExpression	bytestream_get_be16 ( & src )		6480190	0					
ANR	6480990	Callee	bytestream_get_be16		6480190	0					
ANR	6480991	Identifier	bytestream_get_be16		6480190	0					
ANR	6480992	ArgumentList	& src		6480190	1					
ANR	6480993	Argument	& src		6480190	0					
ANR	6480994	UnaryOperationExpression	& src		6480190	0					
ANR	6480995	UnaryOperator	&		6480190	0					
ANR	6480996	Identifier	src		6480190	1					
ANR	6480997	PrimaryExpression	16		6480190	1					
ANR	6480998	ShiftExpression	( * src8 & 0xf0 ) << 8		6480190	1		<<			
ANR	6480999	BitAndExpression	* src8 & 0xf0		6480190	0		&			
ANR	6481000	UnaryOperationExpression	* src8		6480190	0					
ANR	6481001	UnaryOperator	*		6480190	0					
ANR	6481002	Identifier	src8		6480190	1					
ANR	6481003	PrimaryExpression	0xf0		6480190	1					
ANR	6481004	PrimaryExpression	8		6480190	1					
ANR	6481005	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )	341:20:5560:5637	6480190	1	True				
ANR	6481006	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6480190	0		=			
ANR	6481007	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6481008	UnaryOperator	*		6480190	0					
ANR	6481009	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6481010	Identifier	dst_int32_t		6480190	0					
ANR	6481011	IncDec	++		6480190	1					
ANR	6481012	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6480190	1		+			
ANR	6481013	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6480190	0		<<			
ANR	6481014	CallExpression	bytestream_get_be16 ( & src )		6480190	0					
ANR	6481015	Callee	bytestream_get_be16		6480190	0					
ANR	6481016	Identifier	bytestream_get_be16		6480190	0					
ANR	6481017	ArgumentList	& src		6480190	1					
ANR	6481018	Argument	& src		6480190	0					
ANR	6481019	UnaryOperationExpression	& src		6480190	0					
ANR	6481020	UnaryOperator	&		6480190	0					
ANR	6481021	Identifier	src		6480190	1					
ANR	6481022	PrimaryExpression	16		6480190	1					
ANR	6481023	ShiftExpression	( * src8 ++ & 0x0f ) << 12		6480190	1		<<			
ANR	6481024	BitAndExpression	* src8 ++ & 0x0f		6480190	0		&			
ANR	6481025	UnaryOperationExpression	* src8 ++		6480190	0					
ANR	6481026	UnaryOperator	*		6480190	0					
ANR	6481027	PostIncDecOperationExpression	src8 ++		6480190	1					
ANR	6481028	Identifier	src8		6480190	0					
ANR	6481029	IncDec	++		6480190	1					
ANR	6481030	PrimaryExpression	0x0f		6480190	1					
ANR	6481031	PrimaryExpression	12		6480190	1					
ANR	6481032	ExpressionStatement	src = src8	345:16:5675:5685	6480190	3	True				
ANR	6481033	AssignmentExpression	src = src8		6480190	0		=			
ANR	6481034	Identifier	src		6480190	0					
ANR	6481035	Identifier	src8		6480190	1					
ANR	6481036	BreakStatement	break ;	349:12:5715:5720	6480190	2	True				
ANR	6481037	Label	case 24 :	351:8:5731:5738	6480190	3	True				
ANR	6481038	WhileStatement	while ( n -- )		6480190	4					
ANR	6481039	Condition	n --	353:19:5760:5762	6480190	0	True				
ANR	6481040	PostIncDecOperationExpression	n --		6480190	0					
ANR	6481041	Identifier	n		6480190	0					
ANR	6481042	IncDec	--		6480190	1					
ANR	6481043	CompoundStatement		349:24:5634:5634	6480190	1					
ANR	6481044	ExpressionStatement	c = avctx -> channels	355:16:5784:5806	6480190	0	True				
ANR	6481045	AssignmentExpression	c = avctx -> channels		6480190	0		=			
ANR	6481046	Identifier	c		6480190	0					
ANR	6481047	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6481048	Identifier	avctx		6480190	0					
ANR	6481049	Identifier	channels		6480190	1					
ANR	6481050	ExpressionStatement	src8 = src + 4 * c	357:16:5825:5843	6480190	1	True				
ANR	6481051	AssignmentExpression	src8 = src + 4 * c		6480190	0		=			
ANR	6481052	Identifier	src8		6480190	0					
ANR	6481053	AdditiveExpression	src + 4 * c		6480190	1		+			
ANR	6481054	Identifier	src		6480190	0					
ANR	6481055	MultiplicativeExpression	4 * c		6480190	1		*			
ANR	6481056	PrimaryExpression	4		6480190	0					
ANR	6481057	Identifier	c		6480190	1					
ANR	6481058	WhileStatement	while ( c -- )		6480190	2					
ANR	6481059	Condition	c --	359:23:5869:5871	6480190	0	True				
ANR	6481060	PostIncDecOperationExpression	c --		6480190	0					
ANR	6481061	Identifier	c		6480190	0					
ANR	6481062	IncDec	--		6480190	1					
ANR	6481063	CompoundStatement		355:28:5743:5743	6480190	1					
ANR	6481064	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	361:20:5897:5966	6480190	0	True				
ANR	6481065	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6480190	0		=			
ANR	6481066	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6481067	UnaryOperator	*		6480190	0					
ANR	6481068	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6481069	Identifier	dst_int32_t		6480190	0					
ANR	6481070	IncDec	++		6480190	1					
ANR	6481071	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6480190	1		+			
ANR	6481072	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6480190	0		<<			
ANR	6481073	CallExpression	bytestream_get_be16 ( & src )		6480190	0					
ANR	6481074	Callee	bytestream_get_be16		6480190	0					
ANR	6481075	Identifier	bytestream_get_be16		6480190	0					
ANR	6481076	ArgumentList	& src		6480190	1					
ANR	6481077	Argument	& src		6480190	0					
ANR	6481078	UnaryOperationExpression	& src		6480190	0					
ANR	6481079	UnaryOperator	&		6480190	0					
ANR	6481080	Identifier	src		6480190	1					
ANR	6481081	PrimaryExpression	16		6480190	1					
ANR	6481082	ShiftExpression	( * src8 ++ ) << 8		6480190	1		<<			
ANR	6481083	UnaryOperationExpression	* src8 ++		6480190	0					
ANR	6481084	UnaryOperator	*		6480190	0					
ANR	6481085	PostIncDecOperationExpression	src8 ++		6480190	1					
ANR	6481086	Identifier	src8		6480190	0					
ANR	6481087	IncDec	++		6480190	1					
ANR	6481088	PrimaryExpression	8		6480190	1					
ANR	6481089	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	363:20:5989:6058	6480190	1	True				
ANR	6481090	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6480190	0		=			
ANR	6481091	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6481092	UnaryOperator	*		6480190	0					
ANR	6481093	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6481094	Identifier	dst_int32_t		6480190	0					
ANR	6481095	IncDec	++		6480190	1					
ANR	6481096	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6480190	1		+			
ANR	6481097	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6480190	0		<<			
ANR	6481098	CallExpression	bytestream_get_be16 ( & src )		6480190	0					
ANR	6481099	Callee	bytestream_get_be16		6480190	0					
ANR	6481100	Identifier	bytestream_get_be16		6480190	0					
ANR	6481101	ArgumentList	& src		6480190	1					
ANR	6481102	Argument	& src		6480190	0					
ANR	6481103	UnaryOperationExpression	& src		6480190	0					
ANR	6481104	UnaryOperator	&		6480190	0					
ANR	6481105	Identifier	src		6480190	1					
ANR	6481106	PrimaryExpression	16		6480190	1					
ANR	6481107	ShiftExpression	( * src8 ++ ) << 8		6480190	1		<<			
ANR	6481108	UnaryOperationExpression	* src8 ++		6480190	0					
ANR	6481109	UnaryOperator	*		6480190	0					
ANR	6481110	PostIncDecOperationExpression	src8 ++		6480190	1					
ANR	6481111	Identifier	src8		6480190	0					
ANR	6481112	IncDec	++		6480190	1					
ANR	6481113	PrimaryExpression	8		6480190	1					
ANR	6481114	ExpressionStatement	src = src8	367:16:6096:6106	6480190	3	True				
ANR	6481115	AssignmentExpression	src = src8		6480190	0		=			
ANR	6481116	Identifier	src		6480190	0					
ANR	6481117	Identifier	src8		6480190	1					
ANR	6481118	BreakStatement	break ;	371:12:6136:6141	6480190	5	True				
ANR	6481119	BreakStatement	break ;	375:8:6163:6168	6480190	4	True				
ANR	6481120	Label	case AV_CODEC_ID_PCM_LXF :	379:4:6182:6206	6480190	223	True				
ANR	6481121	Identifier	AV_CODEC_ID_PCM_LXF		6480190	0					
ANR	6481122	CompoundStatement		379:8:6093:6098	6480190	224					
ANR	6481123	IdentifierDeclStatement	int i ;	383:8:6224:6229	6480190	0	True				
ANR	6481124	IdentifierDecl	i		6480190	0					
ANR	6481125	IdentifierDeclType	int		6480190	0					
ANR	6481126	Identifier	i		6480190	1					
ANR	6481127	ExpressionStatement	n /= avctx -> channels	385:8:6240:6260	6480190	1	True				
ANR	6481128	AssignmentExpression	n /= avctx -> channels		6480190	0		/=			
ANR	6481129	Identifier	n		6480190	0					
ANR	6481130	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6481131	Identifier	avctx		6480190	0					
ANR	6481132	Identifier	channels		6480190	1					
ANR	6481133	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6480190	2					
ANR	6481134	ForInit	c = 0 ;	387:13:6276:6281	6480190	0	True				
ANR	6481135	AssignmentExpression	c = 0		6480190	0		=			
ANR	6481136	Identifier	c		6480190	0					
ANR	6481137	PrimaryExpression	0		6480190	1					
ANR	6481138	Condition	c < avctx -> channels	387:20:6283:6301	6480190	1	True				
ANR	6481139	RelationalExpression	c < avctx -> channels		6480190	0		<			
ANR	6481140	Identifier	c		6480190	0					
ANR	6481141	PtrMemberAccess	avctx -> channels		6480190	1					
ANR	6481142	Identifier	avctx		6480190	0					
ANR	6481143	Identifier	channels		6480190	1					
ANR	6481144	PostIncDecOperationExpression	c ++	387:41:6304:6306	6480190	2	True				
ANR	6481145	Identifier	c		6480190	0					
ANR	6481146	IncDec	++		6480190	1					
ANR	6481147	CompoundStatement		383:46:6178:6178	6480190	3					
ANR	6481148	ExpressionStatement	dst_int32_t = ( int32_t * ) frame -> extended_data [ c ]	389:12:6324:6372	6480190	0	True				
ANR	6481149	AssignmentExpression	dst_int32_t = ( int32_t * ) frame -> extended_data [ c ]		6480190	0		=			
ANR	6481150	Identifier	dst_int32_t		6480190	0					
ANR	6481151	CastExpression	( int32_t * ) frame -> extended_data [ c ]		6480190	1					
ANR	6481152	CastTarget	int32_t *		6480190	0					
ANR	6481153	ArrayIndexing	frame -> extended_data [ c ]		6480190	1					
ANR	6481154	PtrMemberAccess	frame -> extended_data		6480190	0					
ANR	6481155	Identifier	frame		6480190	0					
ANR	6481156	Identifier	extended_data		6480190	1					
ANR	6481157	Identifier	c		6480190	1					
ANR	6481158	ForStatement	for ( i = 0 ; i < n ; i ++ )		6480190	1					
ANR	6481159	ForInit	i = 0 ;	391:17:6392:6397	6480190	0	True				
ANR	6481160	AssignmentExpression	i = 0		6480190	0		=			
ANR	6481161	Identifier	i		6480190	0					
ANR	6481162	PrimaryExpression	0		6480190	1					
ANR	6481163	Condition	i < n	391:24:6399:6403	6480190	1	True				
ANR	6481164	RelationalExpression	i < n		6480190	0		<			
ANR	6481165	Identifier	i		6480190	0					
ANR	6481166	Identifier	n		6480190	1					
ANR	6481167	PostIncDecOperationExpression	i ++	391:31:6406:6408	6480190	2	True				
ANR	6481168	Identifier	i		6480190	0					
ANR	6481169	IncDec	++		6480190	1					
ANR	6481170	CompoundStatement		387:36:6280:6280	6480190	3					
ANR	6481171	ExpressionStatement	* dst_int32_t ++ = ( src [ 2 ] << 28 ) | ( src [ 1 ] << 20 ) | ( src [ 0 ] << 12 ) | ( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]	395:16:6492:6757	6480190	0	True				
ANR	6481172	AssignmentExpression	* dst_int32_t ++ = ( src [ 2 ] << 28 ) | ( src [ 1 ] << 20 ) | ( src [ 0 ] << 12 ) | ( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]		6480190	0		=			
ANR	6481173	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6481174	UnaryOperator	*		6480190	0					
ANR	6481175	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6481176	Identifier	dst_int32_t		6480190	0					
ANR	6481177	IncDec	++		6480190	1					
ANR	6481178	InclusiveOrExpression	( src [ 2 ] << 28 ) | ( src [ 1 ] << 20 ) | ( src [ 0 ] << 12 ) | ( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]		6480190	1		|			
ANR	6481179	ShiftExpression	src [ 2 ] << 28		6480190	0		<<			
ANR	6481180	ArrayIndexing	src [ 2 ]		6480190	0					
ANR	6481181	Identifier	src		6480190	0					
ANR	6481182	PrimaryExpression	2		6480190	1					
ANR	6481183	PrimaryExpression	28		6480190	1					
ANR	6481184	InclusiveOrExpression	( src [ 1 ] << 20 ) | ( src [ 0 ] << 12 ) | ( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]		6480190	1		|			
ANR	6481185	ShiftExpression	src [ 1 ] << 20		6480190	0		<<			
ANR	6481186	ArrayIndexing	src [ 1 ]		6480190	0					
ANR	6481187	Identifier	src		6480190	0					
ANR	6481188	PrimaryExpression	1		6480190	1					
ANR	6481189	PrimaryExpression	20		6480190	1					
ANR	6481190	InclusiveOrExpression	( src [ 0 ] << 12 ) | ( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]		6480190	1		|			
ANR	6481191	ShiftExpression	src [ 0 ] << 12		6480190	0		<<			
ANR	6481192	ArrayIndexing	src [ 0 ]		6480190	0					
ANR	6481193	Identifier	src		6480190	0					
ANR	6481194	PrimaryExpression	0		6480190	1					
ANR	6481195	PrimaryExpression	12		6480190	1					
ANR	6481196	InclusiveOrExpression	( ( src [ 2 ] & 0x0F ) << 8 ) | src [ 1 ]		6480190	1		|			
ANR	6481197	ShiftExpression	( src [ 2 ] & 0x0F ) << 8		6480190	0		<<			
ANR	6481198	BitAndExpression	src [ 2 ] & 0x0F		6480190	0		&			
ANR	6481199	ArrayIndexing	src [ 2 ]		6480190	0					
ANR	6481200	Identifier	src		6480190	0					
ANR	6481201	PrimaryExpression	2		6480190	1					
ANR	6481202	PrimaryExpression	0x0F		6480190	1					
ANR	6481203	PrimaryExpression	8		6480190	1					
ANR	6481204	ArrayIndexing	src [ 1 ]		6480190	1					
ANR	6481205	Identifier	src		6480190	0					
ANR	6481206	PrimaryExpression	1		6480190	1					
ANR	6481207	ExpressionStatement	* dst_int32_t ++ = ( src [ 4 ] << 24 ) | ( src [ 3 ] << 16 ) | ( ( src [ 2 ] & 0xF0 ) << 8 ) | ( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )	407:16:6839:7119	6480190	1	True				
ANR	6481208	AssignmentExpression	* dst_int32_t ++ = ( src [ 4 ] << 24 ) | ( src [ 3 ] << 16 ) | ( ( src [ 2 ] & 0xF0 ) << 8 ) | ( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )		6480190	0		=			
ANR	6481209	UnaryOperationExpression	* dst_int32_t ++		6480190	0					
ANR	6481210	UnaryOperator	*		6480190	0					
ANR	6481211	PostIncDecOperationExpression	dst_int32_t ++		6480190	1					
ANR	6481212	Identifier	dst_int32_t		6480190	0					
ANR	6481213	IncDec	++		6480190	1					
ANR	6481214	InclusiveOrExpression	( src [ 4 ] << 24 ) | ( src [ 3 ] << 16 ) | ( ( src [ 2 ] & 0xF0 ) << 8 ) | ( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )		6480190	1		|			
ANR	6481215	ShiftExpression	src [ 4 ] << 24		6480190	0		<<			
ANR	6481216	ArrayIndexing	src [ 4 ]		6480190	0					
ANR	6481217	Identifier	src		6480190	0					
ANR	6481218	PrimaryExpression	4		6480190	1					
ANR	6481219	PrimaryExpression	24		6480190	1					
ANR	6481220	InclusiveOrExpression	( src [ 3 ] << 16 ) | ( ( src [ 2 ] & 0xF0 ) << 8 ) | ( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )		6480190	1		|			
ANR	6481221	ShiftExpression	src [ 3 ] << 16		6480190	0		<<			
ANR	6481222	ArrayIndexing	src [ 3 ]		6480190	0					
ANR	6481223	Identifier	src		6480190	0					
ANR	6481224	PrimaryExpression	3		6480190	1					
ANR	6481225	PrimaryExpression	16		6480190	1					
ANR	6481226	InclusiveOrExpression	( ( src [ 2 ] & 0xF0 ) << 8 ) | ( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )		6480190	1		|			
ANR	6481227	ShiftExpression	( src [ 2 ] & 0xF0 ) << 8		6480190	0		<<			
ANR	6481228	BitAndExpression	src [ 2 ] & 0xF0		6480190	0		&			
ANR	6481229	ArrayIndexing	src [ 2 ]		6480190	0					
ANR	6481230	Identifier	src		6480190	0					
ANR	6481231	PrimaryExpression	2		6480190	1					
ANR	6481232	PrimaryExpression	0xF0		6480190	1					
ANR	6481233	PrimaryExpression	8		6480190	1					
ANR	6481234	InclusiveOrExpression	( src [ 4 ] << 4 ) | ( src [ 3 ] >> 4 )		6480190	1		|			
ANR	6481235	ShiftExpression	src [ 4 ] << 4		6480190	0		<<			
ANR	6481236	ArrayIndexing	src [ 4 ]		6480190	0					
ANR	6481237	Identifier	src		6480190	0					
ANR	6481238	PrimaryExpression	4		6480190	1					
ANR	6481239	PrimaryExpression	4		6480190	1					
ANR	6481240	ShiftExpression	src [ 3 ] >> 4		6480190	1		>>			
ANR	6481241	ArrayIndexing	src [ 3 ]		6480190	0					
ANR	6481242	Identifier	src		6480190	0					
ANR	6481243	PrimaryExpression	3		6480190	1					
ANR	6481244	PrimaryExpression	4		6480190	1					
ANR	6481245	ExpressionStatement	src += 5	417:16:7138:7146	6480190	2	True				
ANR	6481246	AssignmentExpression	src += 5		6480190	0		+=			
ANR	6481247	Identifier	src		6480190	0					
ANR	6481248	PrimaryExpression	5		6480190	1					
ANR	6481249	BreakStatement	break ;	423:8:7183:7188	6480190	3	True				
ANR	6481250	Label	default :	427:4:7202:7209	6480190	225	True				
ANR	6481251	Identifier	default		6480190	0					
ANR	6481252	ReturnStatement	return - 1 ;	429:8:7220:7229	6480190	226	True				
ANR	6481253	UnaryOperationExpression	- 1		6480190	0					
ANR	6481254	UnaryOperator	-		6480190	0					
ANR	6481255	PrimaryExpression	1		6480190	1					
ANR	6481256	ExpressionStatement	* got_frame_ptr = 1	435:4:7245:7263	6480190	18	True				
ANR	6481257	AssignmentExpression	* got_frame_ptr = 1		6480190	0		=			
ANR	6481258	UnaryOperationExpression	* got_frame_ptr		6480190	0					
ANR	6481259	UnaryOperator	*		6480190	0					
ANR	6481260	Identifier	got_frame_ptr		6480190	1					
ANR	6481261	PrimaryExpression	1		6480190	1					
ANR	6481262	ReturnStatement	return buf_size ;	439:4:7272:7287	6480190	19	True				
ANR	6481263	Identifier	buf_size		6480190	0					
ANR	6481264	ReturnType	static int		6480190	1					
ANR	6481265	Identifier	pcm_decode_frame		6480190	2					
ANR	6481266	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		6480190	3					
ANR	6481267	Parameter	AVCodecContext * avctx	1:28:28:48	6480190	0	True				
ANR	6481268	ParameterType	AVCodecContext *		6480190	0					
ANR	6481269	Identifier	avctx		6480190	1					
ANR	6481270	Parameter	void * data	1:51:51:60	6480190	1	True				
ANR	6481271	ParameterType	void *		6480190	0					
ANR	6481272	Identifier	data		6480190	1					
ANR	6481273	Parameter	int * got_frame_ptr	3:28:92:109	6480190	2	True				
ANR	6481274	ParameterType	int *		6480190	0					
ANR	6481275	Identifier	got_frame_ptr		6480190	1					
ANR	6481276	Parameter	AVPacket * avpkt	3:48:112:126	6480190	3	True				
ANR	6481277	ParameterType	AVPacket *		6480190	0					
ANR	6481278	Identifier	avpkt		6480190	1					
ANR	6481279	CFGEntryNode	ENTRY		6480190		True				
ANR	6481280	CFGExitNode	EXIT		6480190		True				
ANR	6481281	Symbol	* v		6480190						
ANR	6481282	Symbol	data		6480190						
ANR	6481283	Symbol	n2		6480190						
ANR	6481284	Symbol	bytestream_get_be16		6480190						
ANR	6481285	Symbol	got_frame_ptr		6480190						
ANR	6481286	Symbol	avpkt		6480190						
ANR	6481287	Symbol	dst_int32_t		6480190						
ANR	6481288	Symbol	* * src ++		6480190						
ANR	6481289	Symbol	* src		6480190						
ANR	6481290	Symbol	avctx -> channels		6480190						
ANR	6481291	Symbol	* * frame		6480190						
ANR	6481292	Symbol	ff_get_buffer		6480190						
ANR	6481293	Symbol	* avctx -> codec		6480190						
ANR	6481294	Symbol	frame -> data		6480190						
ANR	6481295	Symbol	* frame -> extended_data		6480190						
ANR	6481296	Symbol	ret		6480190						
ANR	6481297	Symbol	s -> table		6480190						
ANR	6481298	Symbol	avctx -> codec		6480190						
ANR	6481299	Symbol	buf_size		6480190						
ANR	6481300	Symbol	* * avctx		6480190						
ANR	6481301	Symbol	bytestream_get_be24		6480190						
ANR	6481302	Symbol	* s -> table		6480190						
ANR	6481303	Symbol	samples		6480190						
ANR	6481304	Symbol	* src8		6480190						
ANR	6481305	Symbol	* avctx		6480190						
ANR	6481306	Symbol	* src ++		6480190						
ANR	6481307	Symbol	avpkt -> data		6480190						
ANR	6481308	Symbol	frame		6480190						
ANR	6481309	Symbol	* frame -> data		6480190						
ANR	6481310	Symbol	avctx -> codec_id		6480190						
ANR	6481311	Symbol	avctx -> bits_per_coded_sample		6480190						
ANR	6481312	Symbol	* frame		6480190						
ANR	6481313	Symbol	ff_reverse		6480190						
ANR	6481314	Symbol	& src		6480190						
ANR	6481315	Symbol	samples_per_block		6480190						
ANR	6481316	Symbol	sample_size		6480190						
ANR	6481317	Symbol	* src8 ++		6480190						
ANR	6481318	Symbol	* * s		6480190						
ANR	6481319	Symbol	avpkt -> size		6480190						
ANR	6481320	Symbol	AV_CODEC_ID_PCM_DVD		6480190						
ANR	6481321	Symbol	avctx		6480190						
ANR	6481322	Symbol	* samples ++		6480190						
ANR	6481323	Symbol	* avpkt		6480190						
ANR	6481324	Symbol	src8		6480190						
ANR	6481325	Symbol	av_get_bits_per_sample		6480190						
ANR	6481326	Symbol	AV_CODEC_ID_PCM_LXF		6480190						
ANR	6481327	Symbol	frame -> nb_samples		6480190						
ANR	6481328	Symbol	c		6480190						
ANR	6481329	Symbol	AV_LOG_ERROR		6480190						
ANR	6481330	Symbol	src		6480190						
ANR	6481331	Symbol	* got_frame_ptr		6480190						
ANR	6481332	Symbol	i		6480190						
ANR	6481333	Symbol	* dst_int32_t ++		6480190						
ANR	6481334	Symbol	avctx -> priv_data		6480190						
ANR	6481335	Symbol	* c		6480190						
ANR	6481336	Symbol	n		6480190						
ANR	6481337	Symbol	EINVAL		6480190						
ANR	6481338	Symbol	avctx -> codec -> id		6480190						
ANR	6481339	Symbol	s		6480190						
ANR	6481340	Symbol	frame -> extended_data		6480190						
ANR	6481341	Symbol	v		6480190						
ANR	6481342	Symbol	* ff_reverse		6480190						
ANR	6481343	Symbol	AVERROR		6480190						
ANR	6481344	Symbol	* s		6480190						
