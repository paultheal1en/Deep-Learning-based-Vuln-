command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3280166	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_frame_thread_init_1.c								
ANR	3280167	Function	ff_frame_thread_init	1:0:0:2896							
ANR	3280168	FunctionDef	ff_frame_thread_init (AVCodecContext * avctx)		3280167	0					
ANR	3280169	CompoundStatement		3:0:49:2896	3280167	0					
ANR	3280170	IdentifierDeclStatement	int thread_count = avctx -> thread_count ;	5:4:56:94	3280167	0	True				
ANR	3280171	IdentifierDecl	thread_count = avctx -> thread_count		3280167	0					
ANR	3280172	IdentifierDeclType	int		3280167	0					
ANR	3280173	Identifier	thread_count		3280167	1					
ANR	3280174	AssignmentExpression	thread_count = avctx -> thread_count		3280167	2		=			
ANR	3280175	Identifier	thread_count		3280167	0					
ANR	3280176	PtrMemberAccess	avctx -> thread_count		3280167	1					
ANR	3280177	Identifier	avctx		3280167	0					
ANR	3280178	Identifier	thread_count		3280167	1					
ANR	3280179	IdentifierDeclStatement	const AVCodec * codec = avctx -> codec ;	7:4:101:136	3280167	1	True				
ANR	3280180	IdentifierDecl	* codec = avctx -> codec		3280167	0					
ANR	3280181	IdentifierDeclType	const AVCodec *		3280167	0					
ANR	3280182	Identifier	codec		3280167	1					
ANR	3280183	AssignmentExpression	* codec = avctx -> codec		3280167	2		=			
ANR	3280184	Identifier	codec		3280167	0					
ANR	3280185	PtrMemberAccess	avctx -> codec		3280167	1					
ANR	3280186	Identifier	avctx		3280167	0					
ANR	3280187	Identifier	codec		3280167	1					
ANR	3280188	IdentifierDeclStatement	AVCodecContext * src = avctx ;	9:4:143:170	3280167	2	True				
ANR	3280189	IdentifierDecl	* src = avctx		3280167	0					
ANR	3280190	IdentifierDeclType	AVCodecContext *		3280167	0					
ANR	3280191	Identifier	src		3280167	1					
ANR	3280192	AssignmentExpression	* src = avctx		3280167	2		=			
ANR	3280193	Identifier	avctx		3280167	0					
ANR	3280194	Identifier	avctx		3280167	1					
ANR	3280195	IdentifierDeclStatement	FrameThreadContext * fctx ;	11:4:177:201	3280167	3	True				
ANR	3280196	IdentifierDecl	* fctx		3280167	0					
ANR	3280197	IdentifierDeclType	FrameThreadContext *		3280167	0					
ANR	3280198	Identifier	fctx		3280167	1					
ANR	3280199	IdentifierDeclStatement	"int i , err = 0 ;"	13:4:208:222	3280167	4	True				
ANR	3280200	IdentifierDecl	i		3280167	0					
ANR	3280201	IdentifierDeclType	int		3280167	0					
ANR	3280202	Identifier	i		3280167	1					
ANR	3280203	IdentifierDecl	err = 0		3280167	1					
ANR	3280204	IdentifierDeclType	int		3280167	0					
ANR	3280205	Identifier	err		3280167	1					
ANR	3280206	AssignmentExpression	err = 0		3280167	2		=			
ANR	3280207	Identifier	err		3280167	0					
ANR	3280208	PrimaryExpression	0		3280167	1					
ANR	3280209	ExpressionStatement	w32thread_init ( )	19:4:252:268	3280167	5	True				
ANR	3280210	CallExpression	w32thread_init ( )		3280167	0					
ANR	3280211	Callee	w32thread_init		3280167	0					
ANR	3280212	Identifier	w32thread_init		3280167	0					
ANR	3280213	ArgumentList			3280167	1					
ANR	3280214	IfStatement	if ( ! thread_count )		3280167	6					
ANR	3280215	Condition	! thread_count	25:8:289:301	3280167	0	True				
ANR	3280216	UnaryOperationExpression	! thread_count		3280167	0					
ANR	3280217	UnaryOperator	!		3280167	0					
ANR	3280218	Identifier	thread_count		3280167	1					
ANR	3280219	CompoundStatement		25:8:265:293	3280167	1					
ANR	3280220	IdentifierDeclStatement	int nb_cpus = av_cpu_count ( ) ;	27:8:315:343	3280167	0	True				
ANR	3280221	IdentifierDecl	nb_cpus = av_cpu_count ( )		3280167	0					
ANR	3280222	IdentifierDeclType	int		3280167	0					
ANR	3280223	Identifier	nb_cpus		3280167	1					
ANR	3280224	AssignmentExpression	nb_cpus = av_cpu_count ( )		3280167	2		=			
ANR	3280225	Identifier	nb_cpus		3280167	0					
ANR	3280226	CallExpression	av_cpu_count ( )		3280167	1					
ANR	3280227	Callee	av_cpu_count		3280167	0					
ANR	3280228	Identifier	av_cpu_count		3280167	0					
ANR	3280229	ArgumentList			3280167	1					
ANR	3280230	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""detected %d logical cores\\n"" , nb_cpus )"	29:8:354:421	3280167	1	True				
ANR	3280231	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""detected %d logical cores\\n"" , nb_cpus )"		3280167	0					
ANR	3280232	Callee	av_log		3280167	0					
ANR	3280233	Identifier	av_log		3280167	0					
ANR	3280234	ArgumentList	avctx		3280167	1					
ANR	3280235	Argument	avctx		3280167	0					
ANR	3280236	Identifier	avctx		3280167	0					
ANR	3280237	Argument	AV_LOG_DEBUG		3280167	1					
ANR	3280238	Identifier	AV_LOG_DEBUG		3280167	0					
ANR	3280239	Argument	"""detected %d logical cores\\n"""		3280167	2					
ANR	3280240	PrimaryExpression	"""detected %d logical cores\\n"""		3280167	0					
ANR	3280241	Argument	nb_cpus		3280167	3					
ANR	3280242	Identifier	nb_cpus		3280167	0					
ANR	3280243	IfStatement	if ( nb_cpus > 1 )		3280167	2					
ANR	3280244	Condition	nb_cpus > 1	33:12:514:524	3280167	0	True				
ANR	3280245	RelationalExpression	nb_cpus > 1		3280167	0		>			
ANR	3280246	Identifier	nb_cpus		3280167	0					
ANR	3280247	PrimaryExpression	1		3280167	1					
ANR	3280248	ExpressionStatement	"thread_count = avctx -> thread_count = FFMIN ( nb_cpus + 1 , MAX_AUTO_THREADS )"	35:12:540:613	3280167	1	True				
ANR	3280249	AssignmentExpression	"thread_count = avctx -> thread_count = FFMIN ( nb_cpus + 1 , MAX_AUTO_THREADS )"		3280167	0		=			
ANR	3280250	Identifier	thread_count		3280167	0					
ANR	3280251	AssignmentExpression	"avctx -> thread_count = FFMIN ( nb_cpus + 1 , MAX_AUTO_THREADS )"		3280167	1		=			
ANR	3280252	PtrMemberAccess	avctx -> thread_count		3280167	0					
ANR	3280253	Identifier	avctx		3280167	0					
ANR	3280254	Identifier	thread_count		3280167	1					
ANR	3280255	CallExpression	"FFMIN ( nb_cpus + 1 , MAX_AUTO_THREADS )"		3280167	1					
ANR	3280256	Callee	FFMIN		3280167	0					
ANR	3280257	Identifier	FFMIN		3280167	0					
ANR	3280258	ArgumentList	nb_cpus + 1		3280167	1					
ANR	3280259	Argument	nb_cpus + 1		3280167	0					
ANR	3280260	AdditiveExpression	nb_cpus + 1		3280167	0		+			
ANR	3280261	Identifier	nb_cpus		3280167	0					
ANR	3280262	PrimaryExpression	1		3280167	1					
ANR	3280263	Argument	MAX_AUTO_THREADS		3280167	1					
ANR	3280264	Identifier	MAX_AUTO_THREADS		3280167	0					
ANR	3280265	ElseStatement	else		3280167	0					
ANR	3280266	ExpressionStatement	thread_count = avctx -> thread_count = 1	39:12:642:680	3280167	0	True				
ANR	3280267	AssignmentExpression	thread_count = avctx -> thread_count = 1		3280167	0		=			
ANR	3280268	Identifier	thread_count		3280167	0					
ANR	3280269	AssignmentExpression	avctx -> thread_count = 1		3280167	1		=			
ANR	3280270	PtrMemberAccess	avctx -> thread_count		3280167	0					
ANR	3280271	Identifier	avctx		3280167	0					
ANR	3280272	Identifier	thread_count		3280167	1					
ANR	3280273	PrimaryExpression	1		3280167	1					
ANR	3280274	IfStatement	if ( thread_count <= 1 )		3280167	7					
ANR	3280275	Condition	thread_count <= 1	45:8:700:716	3280167	0	True				
ANR	3280276	RelationalExpression	thread_count <= 1		3280167	0		<=			
ANR	3280277	Identifier	thread_count		3280167	0					
ANR	3280278	PrimaryExpression	1		3280167	1					
ANR	3280279	CompoundStatement		43:27:669:669	3280167	1					
ANR	3280280	ExpressionStatement	avctx -> active_thread_type = 0	47:8:730:759	3280167	0	True				
ANR	3280281	AssignmentExpression	avctx -> active_thread_type = 0		3280167	0		=			
ANR	3280282	PtrMemberAccess	avctx -> active_thread_type		3280167	0					
ANR	3280283	Identifier	avctx		3280167	0					
ANR	3280284	Identifier	active_thread_type		3280167	1					
ANR	3280285	PrimaryExpression	0		3280167	1					
ANR	3280286	ReturnStatement	return 0 ;	49:8:770:778	3280167	1	True				
ANR	3280287	PrimaryExpression	0		3280167	0					
ANR	3280288	ExpressionStatement	avctx -> internal -> thread_ctx = fctx = av_mallocz ( sizeof ( FrameThreadContext ) )	55:4:794:869	3280167	8	True				
ANR	3280289	AssignmentExpression	avctx -> internal -> thread_ctx = fctx = av_mallocz ( sizeof ( FrameThreadContext ) )		3280167	0		=			
ANR	3280290	PtrMemberAccess	avctx -> internal -> thread_ctx		3280167	0					
ANR	3280291	PtrMemberAccess	avctx -> internal		3280167	0					
ANR	3280292	Identifier	avctx		3280167	0					
ANR	3280293	Identifier	internal		3280167	1					
ANR	3280294	Identifier	thread_ctx		3280167	1					
ANR	3280295	AssignmentExpression	fctx = av_mallocz ( sizeof ( FrameThreadContext ) )		3280167	1		=			
ANR	3280296	Identifier	fctx		3280167	0					
ANR	3280297	CallExpression	av_mallocz ( sizeof ( FrameThreadContext ) )		3280167	1					
ANR	3280298	Callee	av_mallocz		3280167	0					
ANR	3280299	Identifier	av_mallocz		3280167	0					
ANR	3280300	ArgumentList	sizeof ( FrameThreadContext )		3280167	1					
ANR	3280301	Argument	sizeof ( FrameThreadContext )		3280167	0					
ANR	3280302	SizeofExpression	sizeof ( FrameThreadContext )		3280167	0					
ANR	3280303	Sizeof	sizeof		3280167	0					
ANR	3280304	SizeofOperand	FrameThreadContext		3280167	1					
ANR	3280305	ExpressionStatement	fctx -> threads = av_mallocz ( sizeof ( PerThreadContext ) * thread_count )	59:4:878:945	3280167	9	True				
ANR	3280306	AssignmentExpression	fctx -> threads = av_mallocz ( sizeof ( PerThreadContext ) * thread_count )		3280167	0		=			
ANR	3280307	PtrMemberAccess	fctx -> threads		3280167	0					
ANR	3280308	Identifier	fctx		3280167	0					
ANR	3280309	Identifier	threads		3280167	1					
ANR	3280310	CallExpression	av_mallocz ( sizeof ( PerThreadContext ) * thread_count )		3280167	1					
ANR	3280311	Callee	av_mallocz		3280167	0					
ANR	3280312	Identifier	av_mallocz		3280167	0					
ANR	3280313	ArgumentList	sizeof ( PerThreadContext ) * thread_count		3280167	1					
ANR	3280314	Argument	sizeof ( PerThreadContext ) * thread_count		3280167	0					
ANR	3280315	MultiplicativeExpression	sizeof ( PerThreadContext ) * thread_count		3280167	0		*			
ANR	3280316	SizeofExpression	sizeof ( PerThreadContext )		3280167	0					
ANR	3280317	Sizeof	sizeof		3280167	0					
ANR	3280318	SizeofOperand	PerThreadContext		3280167	1					
ANR	3280319	Identifier	thread_count		3280167	1					
ANR	3280320	ExpressionStatement	"pthread_mutex_init ( & fctx -> buffer_mutex , NULL )"	61:4:952:997	3280167	10	True				
ANR	3280321	CallExpression	"pthread_mutex_init ( & fctx -> buffer_mutex , NULL )"		3280167	0					
ANR	3280322	Callee	pthread_mutex_init		3280167	0					
ANR	3280323	Identifier	pthread_mutex_init		3280167	0					
ANR	3280324	ArgumentList	& fctx -> buffer_mutex		3280167	1					
ANR	3280325	Argument	& fctx -> buffer_mutex		3280167	0					
ANR	3280326	UnaryOperationExpression	& fctx -> buffer_mutex		3280167	0					
ANR	3280327	UnaryOperator	&		3280167	0					
ANR	3280328	PtrMemberAccess	fctx -> buffer_mutex		3280167	1					
ANR	3280329	Identifier	fctx		3280167	0					
ANR	3280330	Identifier	buffer_mutex		3280167	1					
ANR	3280331	Argument	NULL		3280167	1					
ANR	3280332	Identifier	NULL		3280167	0					
ANR	3280333	ExpressionStatement	fctx -> delaying = 1	63:4:1004:1022	3280167	11	True				
ANR	3280334	AssignmentExpression	fctx -> delaying = 1		3280167	0		=			
ANR	3280335	PtrMemberAccess	fctx -> delaying		3280167	0					
ANR	3280336	Identifier	fctx		3280167	0					
ANR	3280337	Identifier	delaying		3280167	1					
ANR	3280338	PrimaryExpression	1		3280167	1					
ANR	3280339	ForStatement	for ( i = 0 ; i < thread_count ; i ++ )		3280167	12					
ANR	3280340	ForInit	i = 0 ;	67:9:1036:1041	3280167	0	True				
ANR	3280341	AssignmentExpression	i = 0		3280167	0		=			
ANR	3280342	Identifier	i		3280167	0					
ANR	3280343	PrimaryExpression	0		3280167	1					
ANR	3280344	Condition	i < thread_count	67:16:1043:1058	3280167	1	True				
ANR	3280345	RelationalExpression	i < thread_count		3280167	0		<			
ANR	3280346	Identifier	i		3280167	0					
ANR	3280347	Identifier	thread_count		3280167	1					
ANR	3280348	PostIncDecOperationExpression	i ++	67:34:1061:1063	3280167	2	True				
ANR	3280349	Identifier	i		3280167	0					
ANR	3280350	IncDec	++		3280167	1					
ANR	3280351	CompoundStatement		69:8:1094:1134	3280167	3					
ANR	3280352	IdentifierDeclStatement	AVCodecContext * copy = av_malloc ( sizeof ( AVCodecContext ) ) ;	69:8:1077:1133	3280167	0	True				
ANR	3280353	IdentifierDecl	* copy = av_malloc ( sizeof ( AVCodecContext ) )		3280167	0					
ANR	3280354	IdentifierDeclType	AVCodecContext *		3280167	0					
ANR	3280355	Identifier	copy		3280167	1					
ANR	3280356	AssignmentExpression	* copy = av_malloc ( sizeof ( AVCodecContext ) )		3280167	2		=			
ANR	3280357	Identifier	copy		3280167	0					
ANR	3280358	CallExpression	av_malloc ( sizeof ( AVCodecContext ) )		3280167	1					
ANR	3280359	Callee	av_malloc		3280167	0					
ANR	3280360	Identifier	av_malloc		3280167	0					
ANR	3280361	ArgumentList	sizeof ( AVCodecContext )		3280167	1					
ANR	3280362	Argument	sizeof ( AVCodecContext )		3280167	0					
ANR	3280363	SizeofExpression	sizeof ( AVCodecContext )		3280167	0					
ANR	3280364	Sizeof	sizeof		3280167	0					
ANR	3280365	SizeofOperand	AVCodecContext		3280167	1					
ANR	3280366	IdentifierDeclStatement	PerThreadContext * p = & fctx -> threads [ i ] ;	71:8:1144:1184	3280167	1	True				
ANR	3280367	IdentifierDecl	* p = & fctx -> threads [ i ]		3280167	0					
ANR	3280368	IdentifierDeclType	PerThreadContext *		3280167	0					
ANR	3280369	Identifier	p		3280167	1					
ANR	3280370	AssignmentExpression	* p = & fctx -> threads [ i ]		3280167	2		=			
ANR	3280371	Identifier	p		3280167	0					
ANR	3280372	UnaryOperationExpression	& fctx -> threads [ i ]		3280167	1					
ANR	3280373	UnaryOperator	&		3280167	0					
ANR	3280374	ArrayIndexing	fctx -> threads [ i ]		3280167	1					
ANR	3280375	PtrMemberAccess	fctx -> threads		3280167	0					
ANR	3280376	Identifier	fctx		3280167	0					
ANR	3280377	Identifier	threads		3280167	1					
ANR	3280378	Identifier	i		3280167	1					
ANR	3280379	ExpressionStatement	"pthread_mutex_init ( & p -> mutex , NULL )"	75:8:1197:1232	3280167	2	True				
ANR	3280380	CallExpression	"pthread_mutex_init ( & p -> mutex , NULL )"		3280167	0					
ANR	3280381	Callee	pthread_mutex_init		3280167	0					
ANR	3280382	Identifier	pthread_mutex_init		3280167	0					
ANR	3280383	ArgumentList	& p -> mutex		3280167	1					
ANR	3280384	Argument	& p -> mutex		3280167	0					
ANR	3280385	UnaryOperationExpression	& p -> mutex		3280167	0					
ANR	3280386	UnaryOperator	&		3280167	0					
ANR	3280387	PtrMemberAccess	p -> mutex		3280167	1					
ANR	3280388	Identifier	p		3280167	0					
ANR	3280389	Identifier	mutex		3280167	1					
ANR	3280390	Argument	NULL		3280167	1					
ANR	3280391	Identifier	NULL		3280167	0					
ANR	3280392	ExpressionStatement	"pthread_mutex_init ( & p -> progress_mutex , NULL )"	77:8:1243:1287	3280167	3	True				
ANR	3280393	CallExpression	"pthread_mutex_init ( & p -> progress_mutex , NULL )"		3280167	0					
ANR	3280394	Callee	pthread_mutex_init		3280167	0					
ANR	3280395	Identifier	pthread_mutex_init		3280167	0					
ANR	3280396	ArgumentList	& p -> progress_mutex		3280167	1					
ANR	3280397	Argument	& p -> progress_mutex		3280167	0					
ANR	3280398	UnaryOperationExpression	& p -> progress_mutex		3280167	0					
ANR	3280399	UnaryOperator	&		3280167	0					
ANR	3280400	PtrMemberAccess	p -> progress_mutex		3280167	1					
ANR	3280401	Identifier	p		3280167	0					
ANR	3280402	Identifier	progress_mutex		3280167	1					
ANR	3280403	Argument	NULL		3280167	1					
ANR	3280404	Identifier	NULL		3280167	0					
ANR	3280405	ExpressionStatement	"pthread_cond_init ( & p -> input_cond , NULL )"	79:8:1298:1337	3280167	4	True				
ANR	3280406	CallExpression	"pthread_cond_init ( & p -> input_cond , NULL )"		3280167	0					
ANR	3280407	Callee	pthread_cond_init		3280167	0					
ANR	3280408	Identifier	pthread_cond_init		3280167	0					
ANR	3280409	ArgumentList	& p -> input_cond		3280167	1					
ANR	3280410	Argument	& p -> input_cond		3280167	0					
ANR	3280411	UnaryOperationExpression	& p -> input_cond		3280167	0					
ANR	3280412	UnaryOperator	&		3280167	0					
ANR	3280413	PtrMemberAccess	p -> input_cond		3280167	1					
ANR	3280414	Identifier	p		3280167	0					
ANR	3280415	Identifier	input_cond		3280167	1					
ANR	3280416	Argument	NULL		3280167	1					
ANR	3280417	Identifier	NULL		3280167	0					
ANR	3280418	ExpressionStatement	"pthread_cond_init ( & p -> progress_cond , NULL )"	81:8:1348:1390	3280167	5	True				
ANR	3280419	CallExpression	"pthread_cond_init ( & p -> progress_cond , NULL )"		3280167	0					
ANR	3280420	Callee	pthread_cond_init		3280167	0					
ANR	3280421	Identifier	pthread_cond_init		3280167	0					
ANR	3280422	ArgumentList	& p -> progress_cond		3280167	1					
ANR	3280423	Argument	& p -> progress_cond		3280167	0					
ANR	3280424	UnaryOperationExpression	& p -> progress_cond		3280167	0					
ANR	3280425	UnaryOperator	&		3280167	0					
ANR	3280426	PtrMemberAccess	p -> progress_cond		3280167	1					
ANR	3280427	Identifier	p		3280167	0					
ANR	3280428	Identifier	progress_cond		3280167	1					
ANR	3280429	Argument	NULL		3280167	1					
ANR	3280430	Identifier	NULL		3280167	0					
ANR	3280431	ExpressionStatement	"pthread_cond_init ( & p -> output_cond , NULL )"	83:8:1401:1441	3280167	6	True				
ANR	3280432	CallExpression	"pthread_cond_init ( & p -> output_cond , NULL )"		3280167	0					
ANR	3280433	Callee	pthread_cond_init		3280167	0					
ANR	3280434	Identifier	pthread_cond_init		3280167	0					
ANR	3280435	ArgumentList	& p -> output_cond		3280167	1					
ANR	3280436	Argument	& p -> output_cond		3280167	0					
ANR	3280437	UnaryOperationExpression	& p -> output_cond		3280167	0					
ANR	3280438	UnaryOperator	&		3280167	0					
ANR	3280439	PtrMemberAccess	p -> output_cond		3280167	1					
ANR	3280440	Identifier	p		3280167	0					
ANR	3280441	Identifier	output_cond		3280167	1					
ANR	3280442	Argument	NULL		3280167	1					
ANR	3280443	Identifier	NULL		3280167	0					
ANR	3280444	ExpressionStatement	p -> frame = av_frame_alloc ( )	87:8:1454:1481	3280167	7	True				
ANR	3280445	AssignmentExpression	p -> frame = av_frame_alloc ( )		3280167	0		=			
ANR	3280446	PtrMemberAccess	p -> frame		3280167	0					
ANR	3280447	Identifier	p		3280167	0					
ANR	3280448	Identifier	frame		3280167	1					
ANR	3280449	CallExpression	av_frame_alloc ( )		3280167	1					
ANR	3280450	Callee	av_frame_alloc		3280167	0					
ANR	3280451	Identifier	av_frame_alloc		3280167	0					
ANR	3280452	ArgumentList			3280167	1					
ANR	3280453	IfStatement	if ( ! p -> frame )		3280167	8					
ANR	3280454	Condition	! p -> frame	89:12:1496:1504	3280167	0	True				
ANR	3280455	UnaryOperationExpression	! p -> frame		3280167	0					
ANR	3280456	UnaryOperator	!		3280167	0					
ANR	3280457	PtrMemberAccess	p -> frame		3280167	1					
ANR	3280458	Identifier	p		3280167	0					
ANR	3280459	Identifier	frame		3280167	1					
ANR	3280460	CompoundStatement		87:23:1457:1457	3280167	1					
ANR	3280461	ExpressionStatement	err = AVERROR ( ENOMEM )	92:12:1523:1544	3280167	0	True				
ANR	3280462	AssignmentExpression	err = AVERROR ( ENOMEM )		3280167	0		=			
ANR	3280463	Identifier	err		3280167	0					
ANR	3280464	CallExpression	AVERROR ( ENOMEM )		3280167	1					
ANR	3280465	Callee	AVERROR		3280167	0					
ANR	3280466	Identifier	AVERROR		3280167	0					
ANR	3280467	ArgumentList	ENOMEM		3280167	1					
ANR	3280468	Argument	ENOMEM		3280167	0					
ANR	3280469	Identifier	ENOMEM		3280167	0					
ANR	3280470	GotoStatement	goto error ;	94:12:1559:1569	3280167	1	True				
ANR	3280471	Identifier	error		3280167	0					
ANR	3280472	ExpressionStatement	p -> parent = fctx	100:8:1593:1609	3280167	9	True				
ANR	3280473	AssignmentExpression	p -> parent = fctx		3280167	0		=			
ANR	3280474	PtrMemberAccess	p -> parent		3280167	0					
ANR	3280475	Identifier	p		3280167	0					
ANR	3280476	Identifier	parent		3280167	1					
ANR	3280477	Identifier	fctx		3280167	1					
ANR	3280478	ExpressionStatement	p -> avctx = copy	102:8:1620:1636	3280167	10	True				
ANR	3280479	AssignmentExpression	p -> avctx = copy		3280167	0		=			
ANR	3280480	PtrMemberAccess	p -> avctx		3280167	0					
ANR	3280481	Identifier	p		3280167	0					
ANR	3280482	Identifier	avctx		3280167	1					
ANR	3280483	Identifier	copy		3280167	1					
ANR	3280484	IfStatement	if ( ! copy )		3280167	11					
ANR	3280485	Condition	! copy	106:12:1653:1657	3280167	0	True				
ANR	3280486	UnaryOperationExpression	! copy		3280167	0					
ANR	3280487	UnaryOperator	!		3280167	0					
ANR	3280488	Identifier	copy		3280167	1					
ANR	3280489	CompoundStatement		104:19:1610:1610	3280167	1					
ANR	3280490	ExpressionStatement	err = AVERROR ( ENOMEM )	108:12:1675:1696	3280167	0	True				
ANR	3280491	AssignmentExpression	err = AVERROR ( ENOMEM )		3280167	0		=			
ANR	3280492	Identifier	err		3280167	0					
ANR	3280493	CallExpression	AVERROR ( ENOMEM )		3280167	1					
ANR	3280494	Callee	AVERROR		3280167	0					
ANR	3280495	Identifier	AVERROR		3280167	0					
ANR	3280496	ArgumentList	ENOMEM		3280167	1					
ANR	3280497	Argument	ENOMEM		3280167	0					
ANR	3280498	Identifier	ENOMEM		3280167	0					
ANR	3280499	GotoStatement	goto error ;	110:12:1711:1721	3280167	1	True				
ANR	3280500	Identifier	error		3280167	0					
ANR	3280501	ExpressionStatement	* copy = * src	116:8:1745:1757	3280167	12	True				
ANR	3280502	AssignmentExpression	* copy = * src		3280167	0		=			
ANR	3280503	UnaryOperationExpression	* copy		3280167	0					
ANR	3280504	UnaryOperator	*		3280167	0					
ANR	3280505	Identifier	copy		3280167	1					
ANR	3280506	UnaryOperationExpression	* src		3280167	1					
ANR	3280507	UnaryOperator	*		3280167	0					
ANR	3280508	Identifier	src		3280167	1					
ANR	3280509	ExpressionStatement	copy -> internal = av_malloc ( sizeof ( AVCodecInternal ) )	120:8:1770:1821	3280167	13	True				
ANR	3280510	AssignmentExpression	copy -> internal = av_malloc ( sizeof ( AVCodecInternal ) )		3280167	0		=			
ANR	3280511	PtrMemberAccess	copy -> internal		3280167	0					
ANR	3280512	Identifier	copy		3280167	0					
ANR	3280513	Identifier	internal		3280167	1					
ANR	3280514	CallExpression	av_malloc ( sizeof ( AVCodecInternal ) )		3280167	1					
ANR	3280515	Callee	av_malloc		3280167	0					
ANR	3280516	Identifier	av_malloc		3280167	0					
ANR	3280517	ArgumentList	sizeof ( AVCodecInternal )		3280167	1					
ANR	3280518	Argument	sizeof ( AVCodecInternal )		3280167	0					
ANR	3280519	SizeofExpression	sizeof ( AVCodecInternal )		3280167	0					
ANR	3280520	Sizeof	sizeof		3280167	0					
ANR	3280521	SizeofOperand	AVCodecInternal		3280167	1					
ANR	3280522	IfStatement	if ( ! copy -> internal )		3280167	14					
ANR	3280523	Condition	! copy -> internal	122:12:1836:1850	3280167	0	True				
ANR	3280524	UnaryOperationExpression	! copy -> internal		3280167	0					
ANR	3280525	UnaryOperator	!		3280167	0					
ANR	3280526	PtrMemberAccess	copy -> internal		3280167	1					
ANR	3280527	Identifier	copy		3280167	0					
ANR	3280528	Identifier	internal		3280167	1					
ANR	3280529	CompoundStatement		120:29:1803:1803	3280167	1					
ANR	3280530	ExpressionStatement	err = AVERROR ( ENOMEM )	124:12:1868:1889	3280167	0	True				
ANR	3280531	AssignmentExpression	err = AVERROR ( ENOMEM )		3280167	0		=			
ANR	3280532	Identifier	err		3280167	0					
ANR	3280533	CallExpression	AVERROR ( ENOMEM )		3280167	1					
ANR	3280534	Callee	AVERROR		3280167	0					
ANR	3280535	Identifier	AVERROR		3280167	0					
ANR	3280536	ArgumentList	ENOMEM		3280167	1					
ANR	3280537	Argument	ENOMEM		3280167	0					
ANR	3280538	Identifier	ENOMEM		3280167	0					
ANR	3280539	GotoStatement	goto error ;	126:12:1904:1914	3280167	1	True				
ANR	3280540	Identifier	error		3280167	0					
ANR	3280541	ExpressionStatement	* copy -> internal = * src -> internal	130:8:1936:1968	3280167	15	True				
ANR	3280542	AssignmentExpression	* copy -> internal = * src -> internal		3280167	0		=			
ANR	3280543	UnaryOperationExpression	* copy -> internal		3280167	0					
ANR	3280544	UnaryOperator	*		3280167	0					
ANR	3280545	PtrMemberAccess	copy -> internal		3280167	1					
ANR	3280546	Identifier	copy		3280167	0					
ANR	3280547	Identifier	internal		3280167	1					
ANR	3280548	UnaryOperationExpression	* src -> internal		3280167	1					
ANR	3280549	UnaryOperator	*		3280167	0					
ANR	3280550	PtrMemberAccess	src -> internal		3280167	1					
ANR	3280551	Identifier	src		3280167	0					
ANR	3280552	Identifier	internal		3280167	1					
ANR	3280553	ExpressionStatement	copy -> internal -> thread_ctx = p	132:8:1979:2009	3280167	16	True				
ANR	3280554	AssignmentExpression	copy -> internal -> thread_ctx = p		3280167	0		=			
ANR	3280555	PtrMemberAccess	copy -> internal -> thread_ctx		3280167	0					
ANR	3280556	PtrMemberAccess	copy -> internal		3280167	0					
ANR	3280557	Identifier	copy		3280167	0					
ANR	3280558	Identifier	internal		3280167	1					
ANR	3280559	Identifier	thread_ctx		3280167	1					
ANR	3280560	Identifier	p		3280167	1					
ANR	3280561	ExpressionStatement	copy -> internal -> pkt = & p -> avpkt	134:8:2020:2051	3280167	17	True				
ANR	3280562	AssignmentExpression	copy -> internal -> pkt = & p -> avpkt		3280167	0		=			
ANR	3280563	PtrMemberAccess	copy -> internal -> pkt		3280167	0					
ANR	3280564	PtrMemberAccess	copy -> internal		3280167	0					
ANR	3280565	Identifier	copy		3280167	0					
ANR	3280566	Identifier	internal		3280167	1					
ANR	3280567	Identifier	pkt		3280167	1					
ANR	3280568	UnaryOperationExpression	& p -> avpkt		3280167	1					
ANR	3280569	UnaryOperator	&		3280167	0					
ANR	3280570	PtrMemberAccess	p -> avpkt		3280167	1					
ANR	3280571	Identifier	p		3280167	0					
ANR	3280572	Identifier	avpkt		3280167	1					
ANR	3280573	IfStatement	if ( ! i )		3280167	18					
ANR	3280574	Condition	! i	138:12:2068:2069	3280167	0	True				
ANR	3280575	UnaryOperationExpression	! i		3280167	0					
ANR	3280576	UnaryOperator	!		3280167	0					
ANR	3280577	Identifier	i		3280167	1					
ANR	3280578	CompoundStatement		136:16:2022:2022	3280167	1					
ANR	3280579	ExpressionStatement	src = copy	140:12:2087:2097	3280167	0	True				
ANR	3280580	AssignmentExpression	src = copy		3280167	0		=			
ANR	3280581	Identifier	src		3280167	0					
ANR	3280582	Identifier	copy		3280167	1					
ANR	3280583	IfStatement	if ( codec -> init )		3280167	1					
ANR	3280584	Condition	codec -> init	144:16:2118:2128	3280167	0	True				
ANR	3280585	PtrMemberAccess	codec -> init		3280167	0					
ANR	3280586	Identifier	codec		3280167	0					
ANR	3280587	Identifier	init		3280167	1					
ANR	3280588	ExpressionStatement	err = codec -> init ( copy )	146:16:2148:2171	3280167	1	True				
ANR	3280589	AssignmentExpression	err = codec -> init ( copy )		3280167	0		=			
ANR	3280590	Identifier	err		3280167	0					
ANR	3280591	CallExpression	codec -> init ( copy )		3280167	1					
ANR	3280592	Callee	codec -> init		3280167	0					
ANR	3280593	PtrMemberAccess	codec -> init		3280167	0					
ANR	3280594	Identifier	codec		3280167	0					
ANR	3280595	Identifier	init		3280167	1					
ANR	3280596	ArgumentList	copy		3280167	1					
ANR	3280597	Argument	copy		3280167	0					
ANR	3280598	Identifier	copy		3280167	0					
ANR	3280599	ExpressionStatement	"update_context_from_thread ( avctx , copy , 1 )"	150:12:2188:2230	3280167	2	True				
ANR	3280600	CallExpression	"update_context_from_thread ( avctx , copy , 1 )"		3280167	0					
ANR	3280601	Callee	update_context_from_thread		3280167	0					
ANR	3280602	Identifier	update_context_from_thread		3280167	0					
ANR	3280603	ArgumentList	avctx		3280167	1					
ANR	3280604	Argument	avctx		3280167	0					
ANR	3280605	Identifier	avctx		3280167	0					
ANR	3280606	Argument	copy		3280167	1					
ANR	3280607	Identifier	copy		3280167	0					
ANR	3280608	Argument	1		3280167	2					
ANR	3280609	PrimaryExpression	1		3280167	0					
ANR	3280610	ElseStatement	else		3280167	0					
ANR	3280611	CompoundStatement		150:15:2198:2198	3280167	0					
ANR	3280612	ExpressionStatement	copy -> priv_data = av_malloc ( codec -> priv_data_size )	154:12:2263:2313	3280167	0	True				
ANR	3280613	AssignmentExpression	copy -> priv_data = av_malloc ( codec -> priv_data_size )		3280167	0		=			
ANR	3280614	PtrMemberAccess	copy -> priv_data		3280167	0					
ANR	3280615	Identifier	copy		3280167	0					
ANR	3280616	Identifier	priv_data		3280167	1					
ANR	3280617	CallExpression	av_malloc ( codec -> priv_data_size )		3280167	1					
ANR	3280618	Callee	av_malloc		3280167	0					
ANR	3280619	Identifier	av_malloc		3280167	0					
ANR	3280620	ArgumentList	codec -> priv_data_size		3280167	1					
ANR	3280621	Argument	codec -> priv_data_size		3280167	0					
ANR	3280622	PtrMemberAccess	codec -> priv_data_size		3280167	0					
ANR	3280623	Identifier	codec		3280167	0					
ANR	3280624	Identifier	priv_data_size		3280167	1					
ANR	3280625	IfStatement	if ( ! copy -> priv_data )		3280167	1					
ANR	3280626	Condition	! copy -> priv_data	156:16:2332:2347	3280167	0	True				
ANR	3280627	UnaryOperationExpression	! copy -> priv_data		3280167	0					
ANR	3280628	UnaryOperator	!		3280167	0					
ANR	3280629	PtrMemberAccess	copy -> priv_data		3280167	1					
ANR	3280630	Identifier	copy		3280167	0					
ANR	3280631	Identifier	priv_data		3280167	1					
ANR	3280632	CompoundStatement		154:34:2300:2300	3280167	1					
ANR	3280633	ExpressionStatement	err = AVERROR ( ENOMEM )	158:16:2369:2390	3280167	0	True				
ANR	3280634	AssignmentExpression	err = AVERROR ( ENOMEM )		3280167	0		=			
ANR	3280635	Identifier	err		3280167	0					
ANR	3280636	CallExpression	AVERROR ( ENOMEM )		3280167	1					
ANR	3280637	Callee	AVERROR		3280167	0					
ANR	3280638	Identifier	AVERROR		3280167	0					
ANR	3280639	ArgumentList	ENOMEM		3280167	1					
ANR	3280640	Argument	ENOMEM		3280167	0					
ANR	3280641	Identifier	ENOMEM		3280167	0					
ANR	3280642	GotoStatement	goto error ;	160:16:2409:2419	3280167	1	True				
ANR	3280643	Identifier	error		3280167	0					
ANR	3280644	ExpressionStatement	"memcpy ( copy -> priv_data , src -> priv_data , codec -> priv_data_size )"	164:12:2449:2511	3280167	2	True				
ANR	3280645	CallExpression	"memcpy ( copy -> priv_data , src -> priv_data , codec -> priv_data_size )"		3280167	0					
ANR	3280646	Callee	memcpy		3280167	0					
ANR	3280647	Identifier	memcpy		3280167	0					
ANR	3280648	ArgumentList	copy -> priv_data		3280167	1					
ANR	3280649	Argument	copy -> priv_data		3280167	0					
ANR	3280650	PtrMemberAccess	copy -> priv_data		3280167	0					
ANR	3280651	Identifier	copy		3280167	0					
ANR	3280652	Identifier	priv_data		3280167	1					
ANR	3280653	Argument	src -> priv_data		3280167	1					
ANR	3280654	PtrMemberAccess	src -> priv_data		3280167	0					
ANR	3280655	Identifier	src		3280167	0					
ANR	3280656	Identifier	priv_data		3280167	1					
ANR	3280657	Argument	codec -> priv_data_size		3280167	2					
ANR	3280658	PtrMemberAccess	codec -> priv_data_size		3280167	0					
ANR	3280659	Identifier	codec		3280167	0					
ANR	3280660	Identifier	priv_data_size		3280167	1					
ANR	3280661	ExpressionStatement	copy -> internal -> is_copy = 1	166:12:2526:2553	3280167	3	True				
ANR	3280662	AssignmentExpression	copy -> internal -> is_copy = 1		3280167	0		=			
ANR	3280663	PtrMemberAccess	copy -> internal -> is_copy		3280167	0					
ANR	3280664	PtrMemberAccess	copy -> internal		3280167	0					
ANR	3280665	Identifier	copy		3280167	0					
ANR	3280666	Identifier	internal		3280167	1					
ANR	3280667	Identifier	is_copy		3280167	1					
ANR	3280668	PrimaryExpression	1		3280167	1					
ANR	3280669	IfStatement	if ( codec -> init_thread_copy )		3280167	4					
ANR	3280670	Condition	codec -> init_thread_copy	170:16:2574:2596	3280167	0	True				
ANR	3280671	PtrMemberAccess	codec -> init_thread_copy		3280167	0					
ANR	3280672	Identifier	codec		3280167	0					
ANR	3280673	Identifier	init_thread_copy		3280167	1					
ANR	3280674	ExpressionStatement	err = codec -> init_thread_copy ( copy )	172:16:2616:2651	3280167	1	True				
ANR	3280675	AssignmentExpression	err = codec -> init_thread_copy ( copy )		3280167	0		=			
ANR	3280676	Identifier	err		3280167	0					
ANR	3280677	CallExpression	codec -> init_thread_copy ( copy )		3280167	1					
ANR	3280678	Callee	codec -> init_thread_copy		3280167	0					
ANR	3280679	PtrMemberAccess	codec -> init_thread_copy		3280167	0					
ANR	3280680	Identifier	codec		3280167	0					
ANR	3280681	Identifier	init_thread_copy		3280167	1					
ANR	3280682	ArgumentList	copy		3280167	1					
ANR	3280683	Argument	copy		3280167	0					
ANR	3280684	Identifier	copy		3280167	0					
ANR	3280685	IfStatement	if ( err )		3280167	19					
ANR	3280686	Condition	err	178:12:2679:2681	3280167	0	True				
ANR	3280687	Identifier	err		3280167	0					
ANR	3280688	GotoStatement	goto error ;	178:17:2684:2694	3280167	1	True				
ANR	3280689	Identifier	error		3280167	0					
ANR	3280690	IfStatement	"if ( ! pthread_create ( & p -> thread , NULL , frame_worker_thread , p ) )"		3280167	20					
ANR	3280691	Condition	"! pthread_create ( & p -> thread , NULL , frame_worker_thread , p )"	182:12:2711:2767	3280167	0	True				
ANR	3280692	UnaryOperationExpression	"! pthread_create ( & p -> thread , NULL , frame_worker_thread , p )"		3280167	0					
ANR	3280693	UnaryOperator	!		3280167	0					
ANR	3280694	CallExpression	"pthread_create ( & p -> thread , NULL , frame_worker_thread , p )"		3280167	1					
ANR	3280695	Callee	pthread_create		3280167	0					
ANR	3280696	Identifier	pthread_create		3280167	0					
ANR	3280697	ArgumentList	& p -> thread		3280167	1					
ANR	3280698	Argument	& p -> thread		3280167	0					
ANR	3280699	UnaryOperationExpression	& p -> thread		3280167	0					
ANR	3280700	UnaryOperator	&		3280167	0					
ANR	3280701	PtrMemberAccess	p -> thread		3280167	1					
ANR	3280702	Identifier	p		3280167	0					
ANR	3280703	Identifier	thread		3280167	1					
ANR	3280704	Argument	NULL		3280167	1					
ANR	3280705	Identifier	NULL		3280167	0					
ANR	3280706	Argument	frame_worker_thread		3280167	2					
ANR	3280707	Identifier	frame_worker_thread		3280167	0					
ANR	3280708	Argument	p		3280167	3					
ANR	3280709	Identifier	p		3280167	0					
ANR	3280710	ExpressionStatement	p -> thread_init = 1	184:12:2783:2801	3280167	1	True				
ANR	3280711	AssignmentExpression	p -> thread_init = 1		3280167	0		=			
ANR	3280712	PtrMemberAccess	p -> thread_init		3280167	0					
ANR	3280713	Identifier	p		3280167	0					
ANR	3280714	Identifier	thread_init		3280167	1					
ANR	3280715	PrimaryExpression	1		3280167	1					
ANR	3280716	ReturnStatement	return 0 ;	190:4:2817:2825	3280167	13	True				
ANR	3280717	PrimaryExpression	0		3280167	0					
ANR	3280718	Label	error :	194:0:2830:2835	3280167	14	True				
ANR	3280719	Identifier	error		3280167	0					
ANR	3280720	ExpressionStatement	"ff_frame_thread_free ( avctx , i + 1 )"	196:4:2842:2874	3280167	15	True				
ANR	3280721	CallExpression	"ff_frame_thread_free ( avctx , i + 1 )"		3280167	0					
ANR	3280722	Callee	ff_frame_thread_free		3280167	0					
ANR	3280723	Identifier	ff_frame_thread_free		3280167	0					
ANR	3280724	ArgumentList	avctx		3280167	1					
ANR	3280725	Argument	avctx		3280167	0					
ANR	3280726	Identifier	avctx		3280167	0					
ANR	3280727	Argument	i + 1		3280167	1					
ANR	3280728	AdditiveExpression	i + 1		3280167	0		+			
ANR	3280729	Identifier	i		3280167	0					
ANR	3280730	PrimaryExpression	1		3280167	1					
ANR	3280731	ReturnStatement	return err ;	200:4:2883:2893	3280167	16	True				
ANR	3280732	Identifier	err		3280167	0					
ANR	3280733	ReturnType	int		3280167	1					
ANR	3280734	Identifier	ff_frame_thread_init		3280167	2					
ANR	3280735	ParameterList	AVCodecContext * avctx		3280167	3					
ANR	3280736	Parameter	AVCodecContext * avctx	1:25:25:45	3280167	0	True				
ANR	3280737	ParameterType	AVCodecContext *		3280167	0					
ANR	3280738	Identifier	avctx		3280167	1					
ANR	3280739	CFGEntryNode	ENTRY		3280167		True				
ANR	3280740	CFGExitNode	EXIT		3280167		True				
ANR	3280741	Symbol	av_malloc		3280167						
ANR	3280742	Symbol	ENOMEM		3280167						
ANR	3280743	Symbol	avctx -> active_thread_type		3280167						
ANR	3280744	Symbol	FFMIN		3280167						
ANR	3280745	Symbol	* src		3280167						
ANR	3280746	Symbol	copy -> priv_data		3280167						
ANR	3280747	Symbol	copy -> internal -> thread_ctx		3280167						
ANR	3280748	Symbol	p -> frame		3280167						
ANR	3280749	Symbol	& p -> avpkt		3280167						
ANR	3280750	Symbol	AV_LOG_DEBUG		3280167						
ANR	3280751	Symbol	avctx -> codec		3280167						
ANR	3280752	Symbol	NULL		3280167						
ANR	3280753	Symbol	fctx -> delaying		3280167						
ANR	3280754	Symbol	* codec		3280167						
ANR	3280755	Symbol	* * avctx		3280167						
ANR	3280756	Symbol	av_mallocz		3280167						
ANR	3280757	Symbol	* fctx		3280167						
ANR	3280758	Symbol	fctx		3280167						
ANR	3280759	Symbol	av_frame_alloc		3280167						
ANR	3280760	Symbol	src -> internal		3280167						
ANR	3280761	Symbol	copy -> internal -> is_copy		3280167						
ANR	3280762	Symbol	codec		3280167						
ANR	3280763	Symbol	* avctx		3280167						
ANR	3280764	Symbol	codec -> init_thread_copy		3280167						
ANR	3280765	Symbol	& p -> thread		3280167						
ANR	3280766	Symbol	* * copy		3280167						
ANR	3280767	Symbol	* copy		3280167						
ANR	3280768	Symbol	* * src		3280167						
ANR	3280769	Symbol	thread_count		3280167						
ANR	3280770	Symbol	* copy -> internal		3280167						
ANR	3280771	Symbol	codec -> init		3280167						
ANR	3280772	Symbol	* src -> internal		3280167						
ANR	3280773	Symbol	MAX_AUTO_THREADS		3280167						
ANR	3280774	Symbol	* avctx -> internal		3280167						
ANR	3280775	Symbol	& p -> progress_cond		3280167						
ANR	3280776	Symbol	& p -> progress_mutex		3280167						
ANR	3280777	Symbol	copy -> internal -> pkt		3280167						
ANR	3280778	Symbol	avctx -> internal -> thread_ctx		3280167						
ANR	3280779	Symbol	src -> priv_data		3280167						
ANR	3280780	Symbol	frame_worker_thread		3280167						
ANR	3280781	Symbol	p -> thread_init		3280167						
ANR	3280782	Symbol	copy		3280167						
ANR	3280783	Symbol	avctx		3280167						
ANR	3280784	Symbol	av_cpu_count		3280167						
ANR	3280785	Symbol	& fctx -> buffer_mutex		3280167						
ANR	3280786	Symbol	copy -> internal		3280167						
ANR	3280787	Symbol	avctx -> internal		3280167						
ANR	3280788	Symbol	err		3280167						
ANR	3280789	Symbol	src		3280167						
ANR	3280790	Symbol	nb_cpus		3280167						
ANR	3280791	Symbol	i		3280167						
ANR	3280792	Symbol	avctx -> thread_count		3280167						
ANR	3280793	Symbol	codec -> priv_data_size		3280167						
ANR	3280794	Symbol	p		3280167						
ANR	3280795	Symbol	& p -> input_cond		3280167						
ANR	3280796	Symbol	p -> parent		3280167						
ANR	3280797	Symbol	fctx -> threads		3280167						
ANR	3280798	Symbol	& p -> mutex		3280167						
ANR	3280799	Symbol	& p -> output_cond		3280167						
ANR	3280800	Symbol	* p		3280167						
ANR	3280801	Symbol	AVERROR		3280167						
ANR	3280802	Symbol	p -> avctx		3280167						
ANR	3280803	Symbol	pthread_create		3280167						
