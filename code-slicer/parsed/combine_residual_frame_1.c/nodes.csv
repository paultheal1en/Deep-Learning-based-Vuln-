command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1348000	File	/home/p4ultr4n/workplace/ReVeal/raw_code/combine_residual_frame_1.c								
ANR	1348001	Function	combine_residual_frame	1:0:0:2560							
ANR	1348002	FunctionDef	"combine_residual_frame (DCAXllDecoder * s , DCAXllChSet * c)"		1348001	0					
ANR	1348003	CompoundStatement		3:0:69:2560	1348001	0					
ANR	1348004	IdentifierDeclStatement	DCAContext * dca = s -> avctx -> priv_data ;	5:4:76:113	1348001	0	True				
ANR	1348005	IdentifierDecl	* dca = s -> avctx -> priv_data		1348001	0					
ANR	1348006	IdentifierDeclType	DCAContext *		1348001	0					
ANR	1348007	Identifier	dca		1348001	1					
ANR	1348008	AssignmentExpression	* dca = s -> avctx -> priv_data		1348001	2		=			
ANR	1348009	Identifier	dca		1348001	0					
ANR	1348010	PtrMemberAccess	s -> avctx -> priv_data		1348001	1					
ANR	1348011	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348012	Identifier	s		1348001	0					
ANR	1348013	Identifier	avctx		1348001	1					
ANR	1348014	Identifier	priv_data		1348001	1					
ANR	1348015	IdentifierDeclStatement	"int ch , nsamples = s -> nframesamples ;"	7:4:120:155	1348001	1	True				
ANR	1348016	IdentifierDecl	ch		1348001	0					
ANR	1348017	IdentifierDeclType	int		1348001	0					
ANR	1348018	Identifier	ch		1348001	1					
ANR	1348019	IdentifierDecl	nsamples = s -> nframesamples		1348001	1					
ANR	1348020	IdentifierDeclType	int		1348001	0					
ANR	1348021	Identifier	nsamples		1348001	1					
ANR	1348022	AssignmentExpression	nsamples = s -> nframesamples		1348001	2		=			
ANR	1348023	Identifier	nsamples		1348001	0					
ANR	1348024	PtrMemberAccess	s -> nframesamples		1348001	1					
ANR	1348025	Identifier	s		1348001	0					
ANR	1348026	Identifier	nframesamples		1348001	1					
ANR	1348027	IdentifierDeclStatement	DCAXllChSet * o ;	9:4:162:176	1348001	2	True				
ANR	1348028	IdentifierDecl	* o		1348001	0					
ANR	1348029	IdentifierDeclType	DCAXllChSet *		1348001	0					
ANR	1348030	Identifier	o		1348001	1					
ANR	1348031	IfStatement	if ( ! ( dca -> packet & DCA_PACKET_CORE ) )		1348001	3					
ANR	1348032	Condition	! ( dca -> packet & DCA_PACKET_CORE )	15:8:228:259	1348001	0	True				
ANR	1348033	UnaryOperationExpression	! ( dca -> packet & DCA_PACKET_CORE )		1348001	0					
ANR	1348034	UnaryOperator	!		1348001	0					
ANR	1348035	BitAndExpression	dca -> packet & DCA_PACKET_CORE		1348001	1		&			
ANR	1348036	PtrMemberAccess	dca -> packet		1348001	0					
ANR	1348037	Identifier	dca		1348001	0					
ANR	1348038	Identifier	packet		1348001	1					
ANR	1348039	Identifier	DCA_PACKET_CORE		1348001	1					
ANR	1348040	CompoundStatement		13:42:192:192	1348001	1					
ANR	1348041	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Residual encoded channels are present without core\\n"" )"	17:8:273:359	1348001	0	True				
ANR	1348042	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Residual encoded channels are present without core\\n"" )"		1348001	0					
ANR	1348043	Callee	av_log		1348001	0					
ANR	1348044	Identifier	av_log		1348001	0					
ANR	1348045	ArgumentList	s -> avctx		1348001	1					
ANR	1348046	Argument	s -> avctx		1348001	0					
ANR	1348047	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348048	Identifier	s		1348001	0					
ANR	1348049	Identifier	avctx		1348001	1					
ANR	1348050	Argument	AV_LOG_ERROR		1348001	1					
ANR	1348051	Identifier	AV_LOG_ERROR		1348001	0					
ANR	1348052	Argument	"""Residual encoded channels are present without core\\n"""		1348001	2					
ANR	1348053	PrimaryExpression	"""Residual encoded channels are present without core\\n"""		1348001	0					
ANR	1348054	ReturnStatement	return AVERROR ( EINVAL ) ;	19:8:370:392	1348001	1	True				
ANR	1348055	CallExpression	AVERROR ( EINVAL )		1348001	0					
ANR	1348056	Callee	AVERROR		1348001	0					
ANR	1348057	Identifier	AVERROR		1348001	0					
ANR	1348058	ArgumentList	EINVAL		1348001	1					
ANR	1348059	Argument	EINVAL		1348001	0					
ANR	1348060	Identifier	EINVAL		1348001	0					
ANR	1348061	IfStatement	if ( c -> freq != dca -> core . output_rate )		1348001	4					
ANR	1348062	Condition	c -> freq != dca -> core . output_rate	25:8:412:443	1348001	0	True				
ANR	1348063	EqualityExpression	c -> freq != dca -> core . output_rate		1348001	0		!=			
ANR	1348064	PtrMemberAccess	c -> freq		1348001	0					
ANR	1348065	Identifier	c		1348001	0					
ANR	1348066	Identifier	freq		1348001	1					
ANR	1348067	MemberAccess	dca -> core . output_rate		1348001	1					
ANR	1348068	PtrMemberAccess	dca -> core		1348001	0					
ANR	1348069	Identifier	dca		1348001	0					
ANR	1348070	Identifier	core		1348001	1					
ANR	1348071	Identifier	output_rate		1348001	1					
ANR	1348072	CompoundStatement		23:42:376:376	1348001	1					
ANR	1348073	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\\n"" , dca -> core . output_rate , c -> freq )"	27:8:457:584	1348001	0	True				
ANR	1348074	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\\n"" , dca -> core . output_rate , c -> freq )"		1348001	0					
ANR	1348075	Callee	av_log		1348001	0					
ANR	1348076	Identifier	av_log		1348001	0					
ANR	1348077	ArgumentList	s -> avctx		1348001	1					
ANR	1348078	Argument	s -> avctx		1348001	0					
ANR	1348079	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348080	Identifier	s		1348001	0					
ANR	1348081	Identifier	avctx		1348001	1					
ANR	1348082	Argument	AV_LOG_WARNING		1348001	1					
ANR	1348083	Identifier	AV_LOG_WARNING		1348001	0					
ANR	1348084	Argument	"""Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\\n"""		1348001	2					
ANR	1348085	PrimaryExpression	"""Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\\n"""		1348001	0					
ANR	1348086	Argument	dca -> core . output_rate		1348001	3					
ANR	1348087	MemberAccess	dca -> core . output_rate		1348001	0					
ANR	1348088	PtrMemberAccess	dca -> core		1348001	0					
ANR	1348089	Identifier	dca		1348001	0					
ANR	1348090	Identifier	core		1348001	1					
ANR	1348091	Identifier	output_rate		1348001	1					
ANR	1348092	Argument	c -> freq		1348001	4					
ANR	1348093	PtrMemberAccess	c -> freq		1348001	0					
ANR	1348094	Identifier	c		1348001	0					
ANR	1348095	Identifier	freq		1348001	1					
ANR	1348096	ReturnStatement	return AVERROR_INVALIDDATA ;	29:8:595:621	1348001	1	True				
ANR	1348097	Identifier	AVERROR_INVALIDDATA		1348001	0					
ANR	1348098	IfStatement	if ( nsamples != dca -> core . npcmsamples )		1348001	5					
ANR	1348099	Condition	nsamples != dca -> core . npcmsamples	35:8:641:673	1348001	0	True				
ANR	1348100	EqualityExpression	nsamples != dca -> core . npcmsamples		1348001	0		!=			
ANR	1348101	Identifier	nsamples		1348001	0					
ANR	1348102	MemberAccess	dca -> core . npcmsamples		1348001	1					
ANR	1348103	PtrMemberAccess	dca -> core		1348001	0					
ANR	1348104	Identifier	dca		1348001	0					
ANR	1348105	Identifier	core		1348001	1					
ANR	1348106	Identifier	npcmsamples		1348001	1					
ANR	1348107	CompoundStatement		33:43:606:606	1348001	1					
ANR	1348108	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""Number of samples per frame mismatch between core (%d) and XLL (%d)\\n"" , dca -> core . npcmsamples , nsamples )"	37:8:687:825	1348001	0	True				
ANR	1348109	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""Number of samples per frame mismatch between core (%d) and XLL (%d)\\n"" , dca -> core . npcmsamples , nsamples )"		1348001	0					
ANR	1348110	Callee	av_log		1348001	0					
ANR	1348111	Identifier	av_log		1348001	0					
ANR	1348112	ArgumentList	s -> avctx		1348001	1					
ANR	1348113	Argument	s -> avctx		1348001	0					
ANR	1348114	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348115	Identifier	s		1348001	0					
ANR	1348116	Identifier	avctx		1348001	1					
ANR	1348117	Argument	AV_LOG_WARNING		1348001	1					
ANR	1348118	Identifier	AV_LOG_WARNING		1348001	0					
ANR	1348119	Argument	"""Number of samples per frame mismatch between core (%d) and XLL (%d)\\n"""		1348001	2					
ANR	1348120	PrimaryExpression	"""Number of samples per frame mismatch between core (%d) and XLL (%d)\\n"""		1348001	0					
ANR	1348121	Argument	dca -> core . npcmsamples		1348001	3					
ANR	1348122	MemberAccess	dca -> core . npcmsamples		1348001	0					
ANR	1348123	PtrMemberAccess	dca -> core		1348001	0					
ANR	1348124	Identifier	dca		1348001	0					
ANR	1348125	Identifier	core		1348001	1					
ANR	1348126	Identifier	npcmsamples		1348001	1					
ANR	1348127	Argument	nsamples		1348001	4					
ANR	1348128	Identifier	nsamples		1348001	0					
ANR	1348129	ReturnStatement	return AVERROR_INVALIDDATA ;	39:8:836:862	1348001	1	True				
ANR	1348130	Identifier	AVERROR_INVALIDDATA		1348001	0					
ANR	1348131	ExpressionStatement	"o = find_next_hier_dmix_chset ( s , c )"	51:4:1076:1111	1348001	6	True				
ANR	1348132	AssignmentExpression	"o = find_next_hier_dmix_chset ( s , c )"		1348001	0		=			
ANR	1348133	Identifier	o		1348001	0					
ANR	1348134	CallExpression	"find_next_hier_dmix_chset ( s , c )"		1348001	1					
ANR	1348135	Callee	find_next_hier_dmix_chset		1348001	0					
ANR	1348136	Identifier	find_next_hier_dmix_chset		1348001	0					
ANR	1348137	ArgumentList	s		1348001	1					
ANR	1348138	Argument	s		1348001	0					
ANR	1348139	Identifier	s		1348001	0					
ANR	1348140	Argument	c		1348001	1					
ANR	1348141	Identifier	c		1348001	0					
ANR	1348142	ForStatement	for ( ch = 0 ; ch < c -> nchannels ; ch ++ )		1348001	7					
ANR	1348143	ForInit	ch = 0 ;	57:9:1181:1187	1348001	0	True				
ANR	1348144	AssignmentExpression	ch = 0		1348001	0		=			
ANR	1348145	Identifier	ch		1348001	0					
ANR	1348146	PrimaryExpression	0		1348001	1					
ANR	1348147	Condition	ch < c -> nchannels	57:17:1189:1205	1348001	1	True				
ANR	1348148	RelationalExpression	ch < c -> nchannels		1348001	0		<			
ANR	1348149	Identifier	ch		1348001	0					
ANR	1348150	PtrMemberAccess	c -> nchannels		1348001	1					
ANR	1348151	Identifier	c		1348001	0					
ANR	1348152	Identifier	nchannels		1348001	1					
ANR	1348153	PostIncDecOperationExpression	ch ++	57:36:1208:1211	1348001	2	True				
ANR	1348154	Identifier	ch		1348001	0					
ANR	1348155	IncDec	++		1348001	1					
ANR	1348156	CompoundStatement		59:8:1191:1209	1348001	3					
ANR	1348157	IdentifierDeclStatement	"int n , spkr , shift , round ;"	59:8:1225:1250	1348001	0	True				
ANR	1348158	IdentifierDecl	n		1348001	0					
ANR	1348159	IdentifierDeclType	int		1348001	0					
ANR	1348160	Identifier	n		1348001	1					
ANR	1348161	IdentifierDecl	spkr		1348001	1					
ANR	1348162	IdentifierDeclType	int		1348001	0					
ANR	1348163	Identifier	spkr		1348001	1					
ANR	1348164	IdentifierDecl	shift		1348001	2					
ANR	1348165	IdentifierDeclType	int		1348001	0					
ANR	1348166	Identifier	shift		1348001	1					
ANR	1348167	IdentifierDecl	round		1348001	3					
ANR	1348168	IdentifierDeclType	int		1348001	0					
ANR	1348169	Identifier	round		1348001	1					
ANR	1348170	IdentifierDeclStatement	"int32_t * src , * dst ;"	61:8:1261:1279	1348001	1	True				
ANR	1348171	IdentifierDecl	* src		1348001	0					
ANR	1348172	IdentifierDeclType	int32_t *		1348001	0					
ANR	1348173	Identifier	src		1348001	1					
ANR	1348174	IdentifierDecl	* dst		1348001	1					
ANR	1348175	IdentifierDeclType	int32_t *		1348001	0					
ANR	1348176	Identifier	dst		1348001	1					
ANR	1348177	IfStatement	if ( c -> residual_encode & ( 1 << ch ) )		1348001	2					
ANR	1348178	Condition	c -> residual_encode & ( 1 << ch )	65:12:1296:1325	1348001	0	True				
ANR	1348179	BitAndExpression	c -> residual_encode & ( 1 << ch )		1348001	0		&			
ANR	1348180	PtrMemberAccess	c -> residual_encode		1348001	0					
ANR	1348181	Identifier	c		1348001	0					
ANR	1348182	Identifier	residual_encode		1348001	1					
ANR	1348183	ShiftExpression	1 << ch		1348001	1		<<			
ANR	1348184	PrimaryExpression	1		1348001	0					
ANR	1348185	Identifier	ch		1348001	1					
ANR	1348186	ContinueStatement	continue ;	67:12:1341:1349	1348001	1	True				
ANR	1348187	ExpressionStatement	"spkr = ff_dca_core_map_spkr ( & dca -> core , c -> ch_remap [ ch ] )"	73:8:1407:1463	1348001	3	True				
ANR	1348188	AssignmentExpression	"spkr = ff_dca_core_map_spkr ( & dca -> core , c -> ch_remap [ ch ] )"		1348001	0		=			
ANR	1348189	Identifier	spkr		1348001	0					
ANR	1348190	CallExpression	"ff_dca_core_map_spkr ( & dca -> core , c -> ch_remap [ ch ] )"		1348001	1					
ANR	1348191	Callee	ff_dca_core_map_spkr		1348001	0					
ANR	1348192	Identifier	ff_dca_core_map_spkr		1348001	0					
ANR	1348193	ArgumentList	& dca -> core		1348001	1					
ANR	1348194	Argument	& dca -> core		1348001	0					
ANR	1348195	UnaryOperationExpression	& dca -> core		1348001	0					
ANR	1348196	UnaryOperator	&		1348001	0					
ANR	1348197	PtrMemberAccess	dca -> core		1348001	1					
ANR	1348198	Identifier	dca		1348001	0					
ANR	1348199	Identifier	core		1348001	1					
ANR	1348200	Argument	c -> ch_remap [ ch ]		1348001	1					
ANR	1348201	ArrayIndexing	c -> ch_remap [ ch ]		1348001	0					
ANR	1348202	PtrMemberAccess	c -> ch_remap		1348001	0					
ANR	1348203	Identifier	c		1348001	0					
ANR	1348204	Identifier	ch_remap		1348001	1					
ANR	1348205	Identifier	ch		1348001	1					
ANR	1348206	IfStatement	if ( spkr < 0 )		1348001	4					
ANR	1348207	Condition	spkr < 0	75:12:1478:1485	1348001	0	True				
ANR	1348208	RelationalExpression	spkr < 0		1348001	0		<			
ANR	1348209	Identifier	spkr		1348001	0					
ANR	1348210	PrimaryExpression	0		1348001	1					
ANR	1348211	CompoundStatement		73:22:1418:1418	1348001	1					
ANR	1348212	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""Residual encoded channel (%d) references unavailable core channel\\n"" , c -> ch_remap [ ch ] )"	77:12:1503:1623	1348001	0	True				
ANR	1348213	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""Residual encoded channel (%d) references unavailable core channel\\n"" , c -> ch_remap [ ch ] )"		1348001	0					
ANR	1348214	Callee	av_log		1348001	0					
ANR	1348215	Identifier	av_log		1348001	0					
ANR	1348216	ArgumentList	s -> avctx		1348001	1					
ANR	1348217	Argument	s -> avctx		1348001	0					
ANR	1348218	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348219	Identifier	s		1348001	0					
ANR	1348220	Identifier	avctx		1348001	1					
ANR	1348221	Argument	AV_LOG_WARNING		1348001	1					
ANR	1348222	Identifier	AV_LOG_WARNING		1348001	0					
ANR	1348223	Argument	"""Residual encoded channel (%d) references unavailable core channel\\n"""		1348001	2					
ANR	1348224	PrimaryExpression	"""Residual encoded channel (%d) references unavailable core channel\\n"""		1348001	0					
ANR	1348225	Argument	c -> ch_remap [ ch ]		1348001	3					
ANR	1348226	ArrayIndexing	c -> ch_remap [ ch ]		1348001	0					
ANR	1348227	PtrMemberAccess	c -> ch_remap		1348001	0					
ANR	1348228	Identifier	c		1348001	0					
ANR	1348229	Identifier	ch_remap		1348001	1					
ANR	1348230	Identifier	ch		1348001	1					
ANR	1348231	ReturnStatement	return AVERROR_INVALIDDATA ;	79:12:1638:1664	1348001	1	True				
ANR	1348232	Identifier	AVERROR_INVALIDDATA		1348001	0					
ANR	1348233	ExpressionStatement	"shift = 24 - c -> pcm_bit_res + chs_get_lsb_width ( s , c , 0 , ch )"	87:8:1722:1782	1348001	5	True				
ANR	1348234	AssignmentExpression	"shift = 24 - c -> pcm_bit_res + chs_get_lsb_width ( s , c , 0 , ch )"		1348001	0		=			
ANR	1348235	Identifier	shift		1348001	0					
ANR	1348236	AdditiveExpression	"24 - c -> pcm_bit_res + chs_get_lsb_width ( s , c , 0 , ch )"		1348001	1		-			
ANR	1348237	PrimaryExpression	24		1348001	0					
ANR	1348238	AdditiveExpression	"c -> pcm_bit_res + chs_get_lsb_width ( s , c , 0 , ch )"		1348001	1		+			
ANR	1348239	PtrMemberAccess	c -> pcm_bit_res		1348001	0					
ANR	1348240	Identifier	c		1348001	0					
ANR	1348241	Identifier	pcm_bit_res		1348001	1					
ANR	1348242	CallExpression	"chs_get_lsb_width ( s , c , 0 , ch )"		1348001	1					
ANR	1348243	Callee	chs_get_lsb_width		1348001	0					
ANR	1348244	Identifier	chs_get_lsb_width		1348001	0					
ANR	1348245	ArgumentList	s		1348001	1					
ANR	1348246	Argument	s		1348001	0					
ANR	1348247	Identifier	s		1348001	0					
ANR	1348248	Argument	c		1348001	1					
ANR	1348249	Identifier	c		1348001	0					
ANR	1348250	Argument	0		1348001	2					
ANR	1348251	PrimaryExpression	0		1348001	0					
ANR	1348252	Argument	ch		1348001	3					
ANR	1348253	Identifier	ch		1348001	0					
ANR	1348254	IfStatement	if ( shift > 24 )		1348001	6					
ANR	1348255	Condition	shift > 24	89:12:1797:1806	1348001	0	True				
ANR	1348256	RelationalExpression	shift > 24		1348001	0		>			
ANR	1348257	Identifier	shift		1348001	0					
ANR	1348258	PrimaryExpression	24		1348001	1					
ANR	1348259	CompoundStatement		87:24:1739:1739	1348001	1					
ANR	1348260	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""Invalid core shift (%d bits)\\n"" , shift )"	91:12:1824:1897	1348001	0	True				
ANR	1348261	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""Invalid core shift (%d bits)\\n"" , shift )"		1348001	0					
ANR	1348262	Callee	av_log		1348001	0					
ANR	1348263	Identifier	av_log		1348001	0					
ANR	1348264	ArgumentList	s -> avctx		1348001	1					
ANR	1348265	Argument	s -> avctx		1348001	0					
ANR	1348266	PtrMemberAccess	s -> avctx		1348001	0					
ANR	1348267	Identifier	s		1348001	0					
ANR	1348268	Identifier	avctx		1348001	1					
ANR	1348269	Argument	AV_LOG_WARNING		1348001	1					
ANR	1348270	Identifier	AV_LOG_WARNING		1348001	0					
ANR	1348271	Argument	"""Invalid core shift (%d bits)\\n"""		1348001	2					
ANR	1348272	PrimaryExpression	"""Invalid core shift (%d bits)\\n"""		1348001	0					
ANR	1348273	Argument	shift		1348001	3					
ANR	1348274	Identifier	shift		1348001	0					
ANR	1348275	ReturnStatement	return AVERROR_INVALIDDATA ;	93:12:1912:1938	1348001	1	True				
ANR	1348276	Identifier	AVERROR_INVALIDDATA		1348001	0					
ANR	1348277	ExpressionStatement	round = shift > 0 ? 1 << ( shift - 1 ) : 0	99:8:1962:2002	1348001	7	True				
ANR	1348278	AssignmentExpression	round = shift > 0 ? 1 << ( shift - 1 ) : 0		1348001	0		=			
ANR	1348279	Identifier	round		1348001	0					
ANR	1348280	ConditionalExpression	shift > 0 ? 1 << ( shift - 1 ) : 0		1348001	1					
ANR	1348281	Condition	shift > 0		1348001	0					
ANR	1348282	RelationalExpression	shift > 0		1348001	0		>			
ANR	1348283	Identifier	shift		1348001	0					
ANR	1348284	PrimaryExpression	0		1348001	1					
ANR	1348285	ShiftExpression	1 << ( shift - 1 )		1348001	1		<<			
ANR	1348286	PrimaryExpression	1		1348001	0					
ANR	1348287	AdditiveExpression	shift - 1		1348001	1		-			
ANR	1348288	Identifier	shift		1348001	0					
ANR	1348289	PrimaryExpression	1		1348001	1					
ANR	1348290	PrimaryExpression	0		1348001	2					
ANR	1348291	ExpressionStatement	src = dca -> core . output_samples [ spkr ]	103:8:2015:2051	1348001	8	True				
ANR	1348292	AssignmentExpression	src = dca -> core . output_samples [ spkr ]		1348001	0		=			
ANR	1348293	Identifier	src		1348001	0					
ANR	1348294	ArrayIndexing	dca -> core . output_samples [ spkr ]		1348001	1					
ANR	1348295	MemberAccess	dca -> core . output_samples		1348001	0					
ANR	1348296	PtrMemberAccess	dca -> core		1348001	0					
ANR	1348297	Identifier	dca		1348001	0					
ANR	1348298	Identifier	core		1348001	1					
ANR	1348299	Identifier	output_samples		1348001	1					
ANR	1348300	Identifier	spkr		1348001	1					
ANR	1348301	ExpressionStatement	dst = c -> bands [ 0 ] . msb_sample_buffer [ ch ]	105:8:2062:2101	1348001	9	True				
ANR	1348302	AssignmentExpression	dst = c -> bands [ 0 ] . msb_sample_buffer [ ch ]		1348001	0		=			
ANR	1348303	Identifier	dst		1348001	0					
ANR	1348304	ArrayIndexing	c -> bands [ 0 ] . msb_sample_buffer [ ch ]		1348001	1					
ANR	1348305	MemberAccess	c -> bands [ 0 ] . msb_sample_buffer		1348001	0					
ANR	1348306	ArrayIndexing	c -> bands [ 0 ]		1348001	0					
ANR	1348307	PtrMemberAccess	c -> bands		1348001	0					
ANR	1348308	Identifier	c		1348001	0					
ANR	1348309	Identifier	bands		1348001	1					
ANR	1348310	PrimaryExpression	0		1348001	1					
ANR	1348311	Identifier	msb_sample_buffer		1348001	1					
ANR	1348312	Identifier	ch		1348001	1					
ANR	1348313	IfStatement	if ( o )		1348001	10					
ANR	1348314	Condition	o	107:12:2116:2116	1348001	0	True				
ANR	1348315	Identifier	o		1348001	0					
ANR	1348316	CompoundStatement		109:12:2119:2170	1348001	1					
ANR	1348317	IdentifierDeclStatement	int scale_inv = o -> dmix_scale_inv [ c -> hier_ofs + ch ] ;	111:12:2189:2240	1348001	0	True				
ANR	1348318	IdentifierDecl	scale_inv = o -> dmix_scale_inv [ c -> hier_ofs + ch ]		1348001	0					
ANR	1348319	IdentifierDeclType	int		1348001	0					
ANR	1348320	Identifier	scale_inv		1348001	1					
ANR	1348321	AssignmentExpression	scale_inv = o -> dmix_scale_inv [ c -> hier_ofs + ch ]		1348001	2		=			
ANR	1348322	Identifier	scale_inv		1348001	0					
ANR	1348323	ArrayIndexing	o -> dmix_scale_inv [ c -> hier_ofs + ch ]		1348001	1					
ANR	1348324	PtrMemberAccess	o -> dmix_scale_inv		1348001	0					
ANR	1348325	Identifier	o		1348001	0					
ANR	1348326	Identifier	dmix_scale_inv		1348001	1					
ANR	1348327	AdditiveExpression	c -> hier_ofs + ch		1348001	1		+			
ANR	1348328	PtrMemberAccess	c -> hier_ofs		1348001	0					
ANR	1348329	Identifier	c		1348001	0					
ANR	1348330	Identifier	hier_ofs		1348001	1					
ANR	1348331	Identifier	ch		1348001	1					
ANR	1348332	ForStatement	for ( n = 0 ; n < nsamples ; n ++ )		1348001	1					
ANR	1348333	ForInit	n = 0 ;	113:17:2260:2265	1348001	0	True				
ANR	1348334	AssignmentExpression	n = 0		1348001	0		=			
ANR	1348335	Identifier	n		1348001	0					
ANR	1348336	PrimaryExpression	0		1348001	1					
ANR	1348337	Condition	n < nsamples	113:24:2267:2278	1348001	1	True				
ANR	1348338	RelationalExpression	n < nsamples		1348001	0		<			
ANR	1348339	Identifier	n		1348001	0					
ANR	1348340	Identifier	nsamples		1348001	1					
ANR	1348341	PostIncDecOperationExpression	n ++	113:38:2281:2283	1348001	2	True				
ANR	1348342	Identifier	n		1348001	0					
ANR	1348343	IncDec	++		1348001	1					
ANR	1348344	ExpressionStatement	"dst [ n ] += ( SUINT ) clip23 ( ( mul16 ( src [ n ] , scale_inv ) + round ) >> shift )"	115:16:2303:2371	1348001	3	True				
ANR	1348345	AssignmentExpression	"dst [ n ] += ( SUINT ) clip23 ( ( mul16 ( src [ n ] , scale_inv ) + round ) >> shift )"		1348001	0		+=			
ANR	1348346	ArrayIndexing	dst [ n ]		1348001	0					
ANR	1348347	Identifier	dst		1348001	0					
ANR	1348348	Identifier	n		1348001	1					
ANR	1348349	CastExpression	"( SUINT ) clip23 ( ( mul16 ( src [ n ] , scale_inv ) + round ) >> shift )"		1348001	1					
ANR	1348350	CastTarget	SUINT		1348001	0					
ANR	1348351	CallExpression	"clip23 ( ( mul16 ( src [ n ] , scale_inv ) + round ) >> shift )"		1348001	1					
ANR	1348352	Callee	clip23		1348001	0					
ANR	1348353	Identifier	clip23		1348001	0					
ANR	1348354	ArgumentList	"( mul16 ( src [ n ] , scale_inv ) + round ) >> shift"		1348001	1					
ANR	1348355	Argument	"( mul16 ( src [ n ] , scale_inv ) + round ) >> shift"		1348001	0					
ANR	1348356	ShiftExpression	"( mul16 ( src [ n ] , scale_inv ) + round ) >> shift"		1348001	0		>>			
ANR	1348357	AdditiveExpression	"mul16 ( src [ n ] , scale_inv ) + round"		1348001	0		+			
ANR	1348358	CallExpression	"mul16 ( src [ n ] , scale_inv )"		1348001	0					
ANR	1348359	Callee	mul16		1348001	0					
ANR	1348360	Identifier	mul16		1348001	0					
ANR	1348361	ArgumentList	src [ n ]		1348001	1					
ANR	1348362	Argument	src [ n ]		1348001	0					
ANR	1348363	ArrayIndexing	src [ n ]		1348001	0					
ANR	1348364	Identifier	src		1348001	0					
ANR	1348365	Identifier	n		1348001	1					
ANR	1348366	Argument	scale_inv		1348001	1					
ANR	1348367	Identifier	scale_inv		1348001	0					
ANR	1348368	Identifier	round		1348001	1					
ANR	1348369	Identifier	shift		1348001	1					
ANR	1348370	ElseStatement	else		1348001	0					
ANR	1348371	CompoundStatement		115:15:2319:2319	1348001	0					
ANR	1348372	ForStatement	for ( n = 0 ; n < nsamples ; n ++ )		1348001	0					
ANR	1348373	ForInit	n = 0 ;	121:17:2444:2449	1348001	0	True				
ANR	1348374	AssignmentExpression	n = 0		1348001	0		=			
ANR	1348375	Identifier	n		1348001	0					
ANR	1348376	PrimaryExpression	0		1348001	1					
ANR	1348377	Condition	n < nsamples	121:24:2451:2462	1348001	1	True				
ANR	1348378	RelationalExpression	n < nsamples		1348001	0		<			
ANR	1348379	Identifier	n		1348001	0					
ANR	1348380	Identifier	nsamples		1348001	1					
ANR	1348381	PostIncDecOperationExpression	n ++	121:38:2465:2467	1348001	2	True				
ANR	1348382	Identifier	n		1348001	0					
ANR	1348383	IncDec	++		1348001	1					
ANR	1348384	ExpressionStatement	dst [ n ] += ( src [ n ] + round ) >> shift	123:16:2487:2522	1348001	3	True				
ANR	1348385	AssignmentExpression	dst [ n ] += ( src [ n ] + round ) >> shift		1348001	0		+=			
ANR	1348386	ArrayIndexing	dst [ n ]		1348001	0					
ANR	1348387	Identifier	dst		1348001	0					
ANR	1348388	Identifier	n		1348001	1					
ANR	1348389	ShiftExpression	( src [ n ] + round ) >> shift		1348001	1		>>			
ANR	1348390	AdditiveExpression	src [ n ] + round		1348001	0		+			
ANR	1348391	ArrayIndexing	src [ n ]		1348001	0					
ANR	1348392	Identifier	src		1348001	0					
ANR	1348393	Identifier	n		1348001	1					
ANR	1348394	Identifier	round		1348001	1					
ANR	1348395	Identifier	shift		1348001	1					
ANR	1348396	ReturnStatement	return 0 ;	131:4:2549:2557	1348001	8	True				
ANR	1348397	PrimaryExpression	0		1348001	0					
ANR	1348398	ReturnType	static int		1348001	1					
ANR	1348399	Identifier	combine_residual_frame		1348001	2					
ANR	1348400	ParameterList	"DCAXllDecoder * s , DCAXllChSet * c"		1348001	3					
ANR	1348401	Parameter	DCAXllDecoder * s	1:34:34:49	1348001	0	True				
ANR	1348402	ParameterType	DCAXllDecoder *		1348001	0					
ANR	1348403	Identifier	s		1348001	1					
ANR	1348404	Parameter	DCAXllChSet * c	1:52:52:65	1348001	1	True				
ANR	1348405	ParameterType	DCAXllChSet *		1348001	0					
ANR	1348406	Identifier	c		1348001	1					
ANR	1348407	CFGEntryNode	ENTRY		1348001		True				
ANR	1348408	CFGExitNode	EXIT		1348001		True				
ANR	1348409	Symbol	clip23		1348001						
ANR	1348410	Symbol	shift		1348001						
ANR	1348411	Symbol	* ch		1348001						
ANR	1348412	Symbol	* src		1348001						
ANR	1348413	Symbol	* c -> bands [ 0 ] . msb_sample_buffer		1348001						
ANR	1348414	Symbol	c -> residual_encode		1348001						
ANR	1348415	Symbol	* dst		1348001						
ANR	1348416	Symbol	c -> nchannels		1348001						
ANR	1348417	Symbol	* dca		1348001						
ANR	1348418	Symbol	* * dca		1348001						
ANR	1348419	Symbol	* c -> ch_remap		1348001						
ANR	1348420	Symbol	DCA_PACKET_CORE		1348001						
ANR	1348421	Symbol	c -> freq		1348001						
ANR	1348422	Symbol	* spkr		1348001						
ANR	1348423	Symbol	* s -> avctx		1348001						
ANR	1348424	Symbol	* * c		1348001						
ANR	1348425	Symbol	dca -> core . output_samples		1348001						
ANR	1348426	Symbol	s -> avctx -> priv_data		1348001						
ANR	1348427	Symbol	spkr		1348001						
ANR	1348428	Symbol	nsamples		1348001						
ANR	1348429	Symbol	* dca -> core . output_samples		1348001						
ANR	1348430	Symbol	c -> bands		1348001						
ANR	1348431	Symbol	* c -> bands		1348001						
ANR	1348432	Symbol	s -> avctx		1348001						
ANR	1348433	Symbol	* o -> dmix_scale_inv		1348001						
ANR	1348434	Symbol	c -> pcm_bit_res		1348001						
ANR	1348435	Symbol	* * * c		1348001						
ANR	1348436	Symbol	* * c -> bands		1348001						
ANR	1348437	Symbol	dca		1348001						
ANR	1348438	Symbol	dst		1348001						
ANR	1348439	Symbol	dca -> packet		1348001						
ANR	1348440	Symbol	dca -> core . npcmsamples		1348001						
ANR	1348441	Symbol	chs_get_lsb_width		1348001						
ANR	1348442	Symbol	find_next_hier_dmix_chset		1348001						
ANR	1348443	Symbol	dca -> core		1348001						
ANR	1348444	Symbol	* * s		1348001						
ANR	1348445	Symbol	c -> ch_remap		1348001						
ANR	1348446	Symbol	dca -> core . output_rate		1348001						
ANR	1348447	Symbol	* * o		1348001						
ANR	1348448	Symbol	c -> hier_ofs		1348001						
ANR	1348449	Symbol	o -> dmix_scale_inv		1348001						
ANR	1348450	Symbol	* c -> hier_ofs		1348001						
ANR	1348451	Symbol	mul16		1348001						
ANR	1348452	Symbol	* dca -> core		1348001						
ANR	1348453	Symbol	ff_dca_core_map_spkr		1348001						
ANR	1348454	Symbol	c		1348001						
ANR	1348455	Symbol	AV_LOG_ERROR		1348001						
ANR	1348456	Symbol	ch		1348001						
ANR	1348457	Symbol	src		1348001						
ANR	1348458	Symbol	c -> bands [ 0 ] . msb_sample_buffer		1348001						
ANR	1348459	Symbol	scale_inv		1348001						
ANR	1348460	Symbol	* c		1348001						
ANR	1348461	Symbol	s -> nframesamples		1348001						
ANR	1348462	Symbol	n		1348001						
ANR	1348463	Symbol	o		1348001						
ANR	1348464	Symbol	EINVAL		1348001						
ANR	1348465	Symbol	s		1348001						
ANR	1348466	Symbol	round		1348001						
ANR	1348467	Symbol	& dca -> core		1348001						
ANR	1348468	Symbol	* n		1348001						
ANR	1348469	Symbol	* o		1348001						
ANR	1348470	Symbol	AVERROR_INVALIDDATA		1348001						
ANR	1348471	Symbol	AVERROR		1348001						
ANR	1348472	Symbol	AV_LOG_WARNING		1348001						
ANR	1348473	Symbol	* s		1348001						
