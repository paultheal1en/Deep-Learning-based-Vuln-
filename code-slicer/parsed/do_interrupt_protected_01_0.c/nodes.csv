command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2595770	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_interrupt_protected_01_0.c								
ANR	2595771	Function	do_interrupt_protected	1:0:0:6556							
ANR	2595772	FunctionDef	"do_interrupt_protected (int intno , int is_int , int error_code , unsigned int next_eip , int is_hw)"		2595771	0					
ANR	2595773	CompoundStatement		5:0:145:6556	2595771	0					
ANR	2595774	IdentifierDeclStatement	SegmentCache * dt ;	7:4:152:168	2595771	0	True				
ANR	2595775	IdentifierDecl	* dt		2595771	0					
ANR	2595776	IdentifierDeclType	SegmentCache *		2595771	0					
ANR	2595777	Identifier	dt		2595771	1					
ANR	2595778	IdentifierDeclStatement	"uint8_t * ptr , * ssp ;"	9:4:175:193	2595771	1	True				
ANR	2595779	IdentifierDecl	* ptr		2595771	0					
ANR	2595780	IdentifierDeclType	uint8_t *		2595771	0					
ANR	2595781	Identifier	ptr		2595771	1					
ANR	2595782	IdentifierDecl	* ssp		2595771	1					
ANR	2595783	IdentifierDeclType	uint8_t *		2595771	0					
ANR	2595784	Identifier	ssp		2595771	1					
ANR	2595785	IdentifierDeclStatement	"int type , dpl , selector , ss_dpl , cpl , sp_mask ;"	11:4:200:245	2595771	2	True				
ANR	2595786	IdentifierDecl	type		2595771	0					
ANR	2595787	IdentifierDeclType	int		2595771	0					
ANR	2595788	Identifier	type		2595771	1					
ANR	2595789	IdentifierDecl	dpl		2595771	1					
ANR	2595790	IdentifierDeclType	int		2595771	0					
ANR	2595791	Identifier	dpl		2595771	1					
ANR	2595792	IdentifierDecl	selector		2595771	2					
ANR	2595793	IdentifierDeclType	int		2595771	0					
ANR	2595794	Identifier	selector		2595771	1					
ANR	2595795	IdentifierDecl	ss_dpl		2595771	3					
ANR	2595796	IdentifierDeclType	int		2595771	0					
ANR	2595797	Identifier	ss_dpl		2595771	1					
ANR	2595798	IdentifierDecl	cpl		2595771	4					
ANR	2595799	IdentifierDeclType	int		2595771	0					
ANR	2595800	Identifier	cpl		2595771	1					
ANR	2595801	IdentifierDecl	sp_mask		2595771	5					
ANR	2595802	IdentifierDeclType	int		2595771	0					
ANR	2595803	Identifier	sp_mask		2595771	1					
ANR	2595804	IdentifierDeclStatement	"int has_error_code , new_stack , shift ;"	13:4:252:288	2595771	3	True				
ANR	2595805	IdentifierDecl	has_error_code		2595771	0					
ANR	2595806	IdentifierDeclType	int		2595771	0					
ANR	2595807	Identifier	has_error_code		2595771	1					
ANR	2595808	IdentifierDecl	new_stack		2595771	1					
ANR	2595809	IdentifierDeclType	int		2595771	0					
ANR	2595810	Identifier	new_stack		2595771	1					
ANR	2595811	IdentifierDecl	shift		2595771	2					
ANR	2595812	IdentifierDeclType	int		2595771	0					
ANR	2595813	Identifier	shift		2595771	1					
ANR	2595814	IdentifierDeclStatement	"uint32_t e1 , e2 , offset , ss , esp , ss_e1 , ss_e2 ;"	15:4:295:341	2595771	4	True				
ANR	2595815	IdentifierDecl	e1		2595771	0					
ANR	2595816	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595817	Identifier	e1		2595771	1					
ANR	2595818	IdentifierDecl	e2		2595771	1					
ANR	2595819	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595820	Identifier	e2		2595771	1					
ANR	2595821	IdentifierDecl	offset		2595771	2					
ANR	2595822	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595823	Identifier	offset		2595771	1					
ANR	2595824	IdentifierDecl	ss		2595771	3					
ANR	2595825	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595826	Identifier	ss		2595771	1					
ANR	2595827	IdentifierDecl	esp		2595771	4					
ANR	2595828	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595829	Identifier	esp		2595771	1					
ANR	2595830	IdentifierDecl	ss_e1		2595771	5					
ANR	2595831	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595832	Identifier	ss_e1		2595771	1					
ANR	2595833	IdentifierDecl	ss_e2		2595771	6					
ANR	2595834	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595835	Identifier	ss_e2		2595771	1					
ANR	2595836	IdentifierDeclStatement	uint32_t old_eip ;	17:4:348:364	2595771	5	True				
ANR	2595837	IdentifierDecl	old_eip		2595771	0					
ANR	2595838	IdentifierDeclType	uint32_t		2595771	0					
ANR	2595839	Identifier	old_eip		2595771	1					
ANR	2595840	ExpressionStatement	has_error_code = 0	21:4:373:391	2595771	6	True				
ANR	2595841	AssignmentExpression	has_error_code = 0		2595771	0		=			
ANR	2595842	Identifier	has_error_code		2595771	0					
ANR	2595843	PrimaryExpression	0		2595771	1					
ANR	2595844	IfStatement	if ( ! is_int && ! is_hw )		2595771	7					
ANR	2595845	Condition	! is_int && ! is_hw	23:8:402:418	2595771	0	True				
ANR	2595846	AndExpression	! is_int && ! is_hw		2595771	0		&&			
ANR	2595847	UnaryOperationExpression	! is_int		2595771	0					
ANR	2595848	UnaryOperator	!		2595771	0					
ANR	2595849	Identifier	is_int		2595771	1					
ANR	2595850	UnaryOperationExpression	! is_hw		2595771	1					
ANR	2595851	UnaryOperator	!		2595771	0					
ANR	2595852	Identifier	is_hw		2595771	1					
ANR	2595853	CompoundStatement		19:27:275:275	2595771	1					
ANR	2595854	SwitchStatement	switch ( intno )		2595771	0					
ANR	2595855	Condition	intno	25:15:439:443	2595771	0	True				
ANR	2595856	Identifier	intno		2595771	0					
ANR	2595857	CompoundStatement		21:22:300:300	2595771	1					
ANR	2595858	Label	case 8 :	27:8:457:463	2595771	0	True				
ANR	2595859	Label	case 10 :	29:8:474:481	2595771	1	True				
ANR	2595860	Label	case 11 :	31:8:492:499	2595771	2	True				
ANR	2595861	Label	case 12 :	33:8:510:517	2595771	3	True				
ANR	2595862	Label	case 13 :	35:8:528:535	2595771	4	True				
ANR	2595863	Label	case 14 :	37:8:546:553	2595771	5	True				
ANR	2595864	Label	case 17 :	39:8:564:571	2595771	6	True				
ANR	2595865	ExpressionStatement	has_error_code = 1	41:12:586:604	2595771	7	True				
ANR	2595866	AssignmentExpression	has_error_code = 1		2595771	0		=			
ANR	2595867	Identifier	has_error_code		2595771	0					
ANR	2595868	PrimaryExpression	1		2595771	1					
ANR	2595869	BreakStatement	break ;	43:12:619:624	2595771	8	True				
ANR	2595870	ExpressionStatement	dt = & env -> idt	51:4:651:665	2595771	8	True				
ANR	2595871	AssignmentExpression	dt = & env -> idt		2595771	0		=			
ANR	2595872	Identifier	dt		2595771	0					
ANR	2595873	UnaryOperationExpression	& env -> idt		2595771	1					
ANR	2595874	UnaryOperator	&		2595771	0					
ANR	2595875	PtrMemberAccess	env -> idt		2595771	1					
ANR	2595876	Identifier	env		2595771	0					
ANR	2595877	Identifier	idt		2595771	1					
ANR	2595878	IfStatement	if ( intno * 8 + 7 > dt -> limit )		2595771	9					
ANR	2595879	Condition	intno * 8 + 7 > dt -> limit	53:8:676:700	2595771	0	True				
ANR	2595880	RelationalExpression	intno * 8 + 7 > dt -> limit		2595771	0		>			
ANR	2595881	AdditiveExpression	intno * 8 + 7		2595771	0		+			
ANR	2595882	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2595883	Identifier	intno		2595771	0					
ANR	2595884	PrimaryExpression	8		2595771	1					
ANR	2595885	PrimaryExpression	7		2595771	1					
ANR	2595886	PtrMemberAccess	dt -> limit		2595771	1					
ANR	2595887	Identifier	dt		2595771	0					
ANR	2595888	Identifier	limit		2595771	1					
ANR	2595889	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"	55:8:712:758	2595771	1	True				
ANR	2595890	CallExpression	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"		2595771	0					
ANR	2595891	Callee	raise_exception_err		2595771	0					
ANR	2595892	Identifier	raise_exception_err		2595771	0					
ANR	2595893	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2595894	Argument	EXCP0D_GPF		2595771	0					
ANR	2595895	Identifier	EXCP0D_GPF		2595771	0					
ANR	2595896	Argument	intno * 8 + 2		2595771	1					
ANR	2595897	AdditiveExpression	intno * 8 + 2		2595771	0		+			
ANR	2595898	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2595899	Identifier	intno		2595771	0					
ANR	2595900	PrimaryExpression	8		2595771	1					
ANR	2595901	PrimaryExpression	2		2595771	1					
ANR	2595902	ExpressionStatement	ptr = dt -> base + intno * 8	57:4:765:791	2595771	10	True				
ANR	2595903	AssignmentExpression	ptr = dt -> base + intno * 8		2595771	0		=			
ANR	2595904	Identifier	ptr		2595771	0					
ANR	2595905	AdditiveExpression	dt -> base + intno * 8		2595771	1		+			
ANR	2595906	PtrMemberAccess	dt -> base		2595771	0					
ANR	2595907	Identifier	dt		2595771	0					
ANR	2595908	Identifier	base		2595771	1					
ANR	2595909	MultiplicativeExpression	intno * 8		2595771	1		*			
ANR	2595910	Identifier	intno		2595771	0					
ANR	2595911	PrimaryExpression	8		2595771	1					
ANR	2595912	ExpressionStatement	e1 = ldl_kernel ( ptr )	59:4:798:818	2595771	11	True				
ANR	2595913	AssignmentExpression	e1 = ldl_kernel ( ptr )		2595771	0		=			
ANR	2595914	Identifier	e1		2595771	0					
ANR	2595915	CallExpression	ldl_kernel ( ptr )		2595771	1					
ANR	2595916	Callee	ldl_kernel		2595771	0					
ANR	2595917	Identifier	ldl_kernel		2595771	0					
ANR	2595918	ArgumentList	ptr		2595771	1					
ANR	2595919	Argument	ptr		2595771	0					
ANR	2595920	Identifier	ptr		2595771	0					
ANR	2595921	ExpressionStatement	e2 = ldl_kernel ( ptr + 4 )	61:4:825:849	2595771	12	True				
ANR	2595922	AssignmentExpression	e2 = ldl_kernel ( ptr + 4 )		2595771	0		=			
ANR	2595923	Identifier	e2		2595771	0					
ANR	2595924	CallExpression	ldl_kernel ( ptr + 4 )		2595771	1					
ANR	2595925	Callee	ldl_kernel		2595771	0					
ANR	2595926	Identifier	ldl_kernel		2595771	0					
ANR	2595927	ArgumentList	ptr + 4		2595771	1					
ANR	2595928	Argument	ptr + 4		2595771	0					
ANR	2595929	AdditiveExpression	ptr + 4		2595771	0		+			
ANR	2595930	Identifier	ptr		2595771	0					
ANR	2595931	PrimaryExpression	4		2595771	1					
ANR	2595932	ExpressionStatement	type = ( e2 >> DESC_TYPE_SHIFT ) & 0x1f	65:4:883:920	2595771	13	True				
ANR	2595933	AssignmentExpression	type = ( e2 >> DESC_TYPE_SHIFT ) & 0x1f		2595771	0		=			
ANR	2595934	Identifier	type		2595771	0					
ANR	2595935	BitAndExpression	( e2 >> DESC_TYPE_SHIFT ) & 0x1f		2595771	1		&			
ANR	2595936	ShiftExpression	e2 >> DESC_TYPE_SHIFT		2595771	0		>>			
ANR	2595937	Identifier	e2		2595771	0					
ANR	2595938	Identifier	DESC_TYPE_SHIFT		2595771	1					
ANR	2595939	PrimaryExpression	0x1f		2595771	1					
ANR	2595940	SwitchStatement	switch ( type )		2595771	14					
ANR	2595941	Condition	type	67:11:934:937	2595771	0	True				
ANR	2595942	Identifier	type		2595771	0					
ANR	2595943	CompoundStatement		63:17:794:794	2595771	1					
ANR	2595944	Label	case 5 :	69:4:947:953	2595771	0	True				
ANR	2595945	IfStatement	if ( ! ( e2 & DESC_P_MASK ) )		2595771	1					
ANR	2595946	Condition	! ( e2 & DESC_P_MASK )	73:12:1056:1074	2595771	0	True				
ANR	2595947	UnaryOperationExpression	! ( e2 & DESC_P_MASK )		2595771	0					
ANR	2595948	UnaryOperator	!		2595771	0					
ANR	2595949	BitAndExpression	e2 & DESC_P_MASK		2595771	1		&			
ANR	2595950	Identifier	e2		2595771	0					
ANR	2595951	Identifier	DESC_P_MASK		2595771	1					
ANR	2595952	ExpressionStatement	"raise_exception_err ( EXCP0B_NOSEG , intno * 8 + 2 )"	75:12:1090:1138	2595771	1	True				
ANR	2595953	CallExpression	"raise_exception_err ( EXCP0B_NOSEG , intno * 8 + 2 )"		2595771	0					
ANR	2595954	Callee	raise_exception_err		2595771	0					
ANR	2595955	Identifier	raise_exception_err		2595771	0					
ANR	2595956	ArgumentList	EXCP0B_NOSEG		2595771	1					
ANR	2595957	Argument	EXCP0B_NOSEG		2595771	0					
ANR	2595958	Identifier	EXCP0B_NOSEG		2595771	0					
ANR	2595959	Argument	intno * 8 + 2		2595771	1					
ANR	2595960	AdditiveExpression	intno * 8 + 2		2595771	0		+			
ANR	2595961	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2595962	Identifier	intno		2595771	0					
ANR	2595963	PrimaryExpression	8		2595771	1					
ANR	2595964	PrimaryExpression	2		2595771	1					
ANR	2595965	ExpressionStatement	"switch_tss ( intno * 8 , e1 , e2 , SWITCH_TSS_CALL )"	77:8:1149:1195	2595771	2	True				
ANR	2595966	CallExpression	"switch_tss ( intno * 8 , e1 , e2 , SWITCH_TSS_CALL )"		2595771	0					
ANR	2595967	Callee	switch_tss		2595771	0					
ANR	2595968	Identifier	switch_tss		2595771	0					
ANR	2595969	ArgumentList	intno * 8		2595771	1					
ANR	2595970	Argument	intno * 8		2595771	0					
ANR	2595971	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2595972	Identifier	intno		2595771	0					
ANR	2595973	PrimaryExpression	8		2595771	1					
ANR	2595974	Argument	e1		2595771	1					
ANR	2595975	Identifier	e1		2595771	0					
ANR	2595976	Argument	e2		2595771	2					
ANR	2595977	Identifier	e2		2595771	0					
ANR	2595978	Argument	SWITCH_TSS_CALL		2595771	3					
ANR	2595979	Identifier	SWITCH_TSS_CALL		2595771	0					
ANR	2595980	IfStatement	if ( has_error_code )		2595771	3					
ANR	2595981	Condition	has_error_code	79:12:1210:1223	2595771	0	True				
ANR	2595982	Identifier	has_error_code		2595771	0					
ANR	2595983	CompoundStatement		77:12:1095:1103	2595771	1					
ANR	2595984	IdentifierDeclStatement	int mask ;	81:12:1241:1249	2595771	0	True				
ANR	2595985	IdentifierDecl	mask		2595771	0					
ANR	2595986	IdentifierDeclType	int		2595771	0					
ANR	2595987	Identifier	mask		2595771	1					
ANR	2595988	ExpressionStatement	shift = ( env -> segs [ R_CS ] . flags >> DESC_B_SHIFT ) & 1	85:12:1303:1354	2595771	1	True				
ANR	2595989	AssignmentExpression	shift = ( env -> segs [ R_CS ] . flags >> DESC_B_SHIFT ) & 1		2595771	0		=			
ANR	2595990	Identifier	shift		2595771	0					
ANR	2595991	BitAndExpression	( env -> segs [ R_CS ] . flags >> DESC_B_SHIFT ) & 1		2595771	1		&			
ANR	2595992	ShiftExpression	env -> segs [ R_CS ] . flags >> DESC_B_SHIFT		2595771	0		>>			
ANR	2595993	MemberAccess	env -> segs [ R_CS ] . flags		2595771	0					
ANR	2595994	ArrayIndexing	env -> segs [ R_CS ]		2595771	0					
ANR	2595995	PtrMemberAccess	env -> segs		2595771	0					
ANR	2595996	Identifier	env		2595771	0					
ANR	2595997	Identifier	segs		2595771	1					
ANR	2595998	Identifier	R_CS		2595771	1					
ANR	2595999	Identifier	flags		2595771	1					
ANR	2596000	Identifier	DESC_B_SHIFT		2595771	1					
ANR	2596001	PrimaryExpression	1		2595771	1					
ANR	2596002	IfStatement	if ( env -> segs [ R_SS ] . flags & DESC_B_MASK )		2595771	2					
ANR	2596003	Condition	env -> segs [ R_SS ] . flags & DESC_B_MASK	87:16:1373:1407	2595771	0	True				
ANR	2596004	BitAndExpression	env -> segs [ R_SS ] . flags & DESC_B_MASK		2595771	0		&			
ANR	2596005	MemberAccess	env -> segs [ R_SS ] . flags		2595771	0					
ANR	2596006	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596007	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596008	Identifier	env		2595771	0					
ANR	2596009	Identifier	segs		2595771	1					
ANR	2596010	Identifier	R_SS		2595771	1					
ANR	2596011	Identifier	flags		2595771	1					
ANR	2596012	Identifier	DESC_B_MASK		2595771	1					
ANR	2596013	ExpressionStatement	mask = 0xffffffff	89:16:1427:1444	2595771	1	True				
ANR	2596014	AssignmentExpression	mask = 0xffffffff		2595771	0		=			
ANR	2596015	Identifier	mask		2595771	0					
ANR	2596016	PrimaryExpression	0xffffffff		2595771	1					
ANR	2596017	ElseStatement	else		2595771	0					
ANR	2596018	ExpressionStatement	mask = 0xffff	93:16:1481:1494	2595771	0	True				
ANR	2596019	AssignmentExpression	mask = 0xffff		2595771	0		=			
ANR	2596020	Identifier	mask		2595771	0					
ANR	2596021	PrimaryExpression	0xffff		2595771	1					
ANR	2596022	ExpressionStatement	esp = ( env -> regs [ R_ESP ] - ( 2 << shift ) ) & mask	95:12:1509:1555	2595771	3	True				
ANR	2596023	AssignmentExpression	esp = ( env -> regs [ R_ESP ] - ( 2 << shift ) ) & mask		2595771	0		=			
ANR	2596024	Identifier	esp		2595771	0					
ANR	2596025	BitAndExpression	( env -> regs [ R_ESP ] - ( 2 << shift ) ) & mask		2595771	1		&			
ANR	2596026	AdditiveExpression	env -> regs [ R_ESP ] - ( 2 << shift )		2595771	0		-			
ANR	2596027	ArrayIndexing	env -> regs [ R_ESP ]		2595771	0					
ANR	2596028	PtrMemberAccess	env -> regs		2595771	0					
ANR	2596029	Identifier	env		2595771	0					
ANR	2596030	Identifier	regs		2595771	1					
ANR	2596031	Identifier	R_ESP		2595771	1					
ANR	2596032	ShiftExpression	2 << shift		2595771	1		<<			
ANR	2596033	PrimaryExpression	2		2595771	0					
ANR	2596034	Identifier	shift		2595771	1					
ANR	2596035	Identifier	mask		2595771	1					
ANR	2596036	ExpressionStatement	ssp = env -> segs [ R_SS ] . base + esp	97:12:1570:1602	2595771	4	True				
ANR	2596037	AssignmentExpression	ssp = env -> segs [ R_SS ] . base + esp		2595771	0		=			
ANR	2596038	Identifier	ssp		2595771	0					
ANR	2596039	AdditiveExpression	env -> segs [ R_SS ] . base + esp		2595771	1		+			
ANR	2596040	MemberAccess	env -> segs [ R_SS ] . base		2595771	0					
ANR	2596041	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596042	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596043	Identifier	env		2595771	0					
ANR	2596044	Identifier	segs		2595771	1					
ANR	2596045	Identifier	R_SS		2595771	1					
ANR	2596046	Identifier	base		2595771	1					
ANR	2596047	Identifier	esp		2595771	1					
ANR	2596048	IfStatement	if ( shift )		2595771	5					
ANR	2596049	Condition	shift	99:16:1621:1625	2595771	0	True				
ANR	2596050	Identifier	shift		2595771	0					
ANR	2596051	ExpressionStatement	"stl_kernel ( ssp , error_code )"	101:16:1645:1672	2595771	1	True				
ANR	2596052	CallExpression	"stl_kernel ( ssp , error_code )"		2595771	0					
ANR	2596053	Callee	stl_kernel		2595771	0					
ANR	2596054	Identifier	stl_kernel		2595771	0					
ANR	2596055	ArgumentList	ssp		2595771	1					
ANR	2596056	Argument	ssp		2595771	0					
ANR	2596057	Identifier	ssp		2595771	0					
ANR	2596058	Argument	error_code		2595771	1					
ANR	2596059	Identifier	error_code		2595771	0					
ANR	2596060	ElseStatement	else		2595771	0					
ANR	2596061	ExpressionStatement	"stw_kernel ( ssp , error_code )"	105:16:1709:1736	2595771	0	True				
ANR	2596062	CallExpression	"stw_kernel ( ssp , error_code )"		2595771	0					
ANR	2596063	Callee	stw_kernel		2595771	0					
ANR	2596064	Identifier	stw_kernel		2595771	0					
ANR	2596065	ArgumentList	ssp		2595771	1					
ANR	2596066	Argument	ssp		2595771	0					
ANR	2596067	Identifier	ssp		2595771	0					
ANR	2596068	Argument	error_code		2595771	1					
ANR	2596069	Identifier	error_code		2595771	0					
ANR	2596070	ExpressionStatement	env -> regs [ R_ESP ] = ( esp & mask ) | ( env -> regs [ R_ESP ] & ~mask )	107:12:1751:1811	2595771	6	True				
ANR	2596071	AssignmentExpression	env -> regs [ R_ESP ] = ( esp & mask ) | ( env -> regs [ R_ESP ] & ~mask )		2595771	0		=			
ANR	2596072	ArrayIndexing	env -> regs [ R_ESP ]		2595771	0					
ANR	2596073	PtrMemberAccess	env -> regs		2595771	0					
ANR	2596074	Identifier	env		2595771	0					
ANR	2596075	Identifier	regs		2595771	1					
ANR	2596076	Identifier	R_ESP		2595771	1					
ANR	2596077	InclusiveOrExpression	( esp & mask ) | ( env -> regs [ R_ESP ] & ~mask )		2595771	1		|			
ANR	2596078	BitAndExpression	esp & mask		2595771	0		&			
ANR	2596079	Identifier	esp		2595771	0					
ANR	2596080	Identifier	mask		2595771	1					
ANR	2596081	BitAndExpression	env -> regs [ R_ESP ] & ~mask		2595771	1		&			
ANR	2596082	ArrayIndexing	env -> regs [ R_ESP ]		2595771	0					
ANR	2596083	PtrMemberAccess	env -> regs		2595771	0					
ANR	2596084	Identifier	env		2595771	0					
ANR	2596085	Identifier	regs		2595771	1					
ANR	2596086	Identifier	R_ESP		2595771	1					
ANR	2596087	Identifier	~mask		2595771	1					
ANR	2596088	ReturnStatement	return ;	111:8:1833:1839	2595771	4	True				
ANR	2596089	Label	case 6 :	113:4:1846:1852	2595771	5	True				
ANR	2596090	Label	case 7 :	115:4:1884:1890	2595771	6	True				
ANR	2596091	Label	case 14 :	117:4:1917:1924	2595771	7	True				
ANR	2596092	Label	case 15 :	119:4:1956:1963	2595771	8	True				
ANR	2596093	BreakStatement	break ;	121:8:1994:1999	2595771	9	True				
ANR	2596094	Label	default :	123:4:2006:2013	2595771	10	True				
ANR	2596095	Identifier	default		2595771	0					
ANR	2596096	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"	125:8:2024:2070	2595771	11	True				
ANR	2596097	CallExpression	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"		2595771	0					
ANR	2596098	Callee	raise_exception_err		2595771	0					
ANR	2596099	Identifier	raise_exception_err		2595771	0					
ANR	2596100	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596101	Argument	EXCP0D_GPF		2595771	0					
ANR	2596102	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596103	Argument	intno * 8 + 2		2595771	1					
ANR	2596104	AdditiveExpression	intno * 8 + 2		2595771	0		+			
ANR	2596105	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2596106	Identifier	intno		2595771	0					
ANR	2596107	PrimaryExpression	8		2595771	1					
ANR	2596108	PrimaryExpression	2		2595771	1					
ANR	2596109	BreakStatement	break ;	127:8:2081:2086	2595771	12	True				
ANR	2596110	ExpressionStatement	dpl = ( e2 >> DESC_DPL_SHIFT ) & 3	131:4:2100:2132	2595771	15	True				
ANR	2596111	AssignmentExpression	dpl = ( e2 >> DESC_DPL_SHIFT ) & 3		2595771	0		=			
ANR	2596112	Identifier	dpl		2595771	0					
ANR	2596113	BitAndExpression	( e2 >> DESC_DPL_SHIFT ) & 3		2595771	1		&			
ANR	2596114	ShiftExpression	e2 >> DESC_DPL_SHIFT		2595771	0		>>			
ANR	2596115	Identifier	e2		2595771	0					
ANR	2596116	Identifier	DESC_DPL_SHIFT		2595771	1					
ANR	2596117	PrimaryExpression	3		2595771	1					
ANR	2596118	ExpressionStatement	cpl = env -> hflags & HF_CPL_MASK	133:4:2139:2170	2595771	16	True				
ANR	2596119	AssignmentExpression	cpl = env -> hflags & HF_CPL_MASK		2595771	0		=			
ANR	2596120	Identifier	cpl		2595771	0					
ANR	2596121	BitAndExpression	env -> hflags & HF_CPL_MASK		2595771	1		&			
ANR	2596122	PtrMemberAccess	env -> hflags		2595771	0					
ANR	2596123	Identifier	env		2595771	0					
ANR	2596124	Identifier	hflags		2595771	1					
ANR	2596125	Identifier	HF_CPL_MASK		2595771	1					
ANR	2596126	IfStatement	if ( is_int && dpl < cpl )		2595771	17					
ANR	2596127	Condition	is_int && dpl < cpl	137:8:2224:2242	2595771	0	True				
ANR	2596128	AndExpression	is_int && dpl < cpl		2595771	0		&&			
ANR	2596129	Identifier	is_int		2595771	0					
ANR	2596130	RelationalExpression	dpl < cpl		2595771	1		<			
ANR	2596131	Identifier	dpl		2595771	0					
ANR	2596132	Identifier	cpl		2595771	1					
ANR	2596133	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"	139:8:2254:2300	2595771	1	True				
ANR	2596134	CallExpression	"raise_exception_err ( EXCP0D_GPF , intno * 8 + 2 )"		2595771	0					
ANR	2596135	Callee	raise_exception_err		2595771	0					
ANR	2596136	Identifier	raise_exception_err		2595771	0					
ANR	2596137	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596138	Argument	EXCP0D_GPF		2595771	0					
ANR	2596139	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596140	Argument	intno * 8 + 2		2595771	1					
ANR	2596141	AdditiveExpression	intno * 8 + 2		2595771	0		+			
ANR	2596142	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2596143	Identifier	intno		2595771	0					
ANR	2596144	PrimaryExpression	8		2595771	1					
ANR	2596145	PrimaryExpression	2		2595771	1					
ANR	2596146	IfStatement	if ( ! ( e2 & DESC_P_MASK ) )		2595771	18					
ANR	2596147	Condition	! ( e2 & DESC_P_MASK )	143:8:2338:2356	2595771	0	True				
ANR	2596148	UnaryOperationExpression	! ( e2 & DESC_P_MASK )		2595771	0					
ANR	2596149	UnaryOperator	!		2595771	0					
ANR	2596150	BitAndExpression	e2 & DESC_P_MASK		2595771	1		&			
ANR	2596151	Identifier	e2		2595771	0					
ANR	2596152	Identifier	DESC_P_MASK		2595771	1					
ANR	2596153	ExpressionStatement	"raise_exception_err ( EXCP0B_NOSEG , intno * 8 + 2 )"	145:8:2368:2416	2595771	1	True				
ANR	2596154	CallExpression	"raise_exception_err ( EXCP0B_NOSEG , intno * 8 + 2 )"		2595771	0					
ANR	2596155	Callee	raise_exception_err		2595771	0					
ANR	2596156	Identifier	raise_exception_err		2595771	0					
ANR	2596157	ArgumentList	EXCP0B_NOSEG		2595771	1					
ANR	2596158	Argument	EXCP0B_NOSEG		2595771	0					
ANR	2596159	Identifier	EXCP0B_NOSEG		2595771	0					
ANR	2596160	Argument	intno * 8 + 2		2595771	1					
ANR	2596161	AdditiveExpression	intno * 8 + 2		2595771	0		+			
ANR	2596162	MultiplicativeExpression	intno * 8		2595771	0		*			
ANR	2596163	Identifier	intno		2595771	0					
ANR	2596164	PrimaryExpression	8		2595771	1					
ANR	2596165	PrimaryExpression	2		2595771	1					
ANR	2596166	ExpressionStatement	selector = e1 >> 16	147:4:2423:2442	2595771	19	True				
ANR	2596167	AssignmentExpression	selector = e1 >> 16		2595771	0		=			
ANR	2596168	Identifier	selector		2595771	0					
ANR	2596169	ShiftExpression	e1 >> 16		2595771	1		>>			
ANR	2596170	Identifier	e1		2595771	0					
ANR	2596171	PrimaryExpression	16		2595771	1					
ANR	2596172	ExpressionStatement	offset = ( e2 & 0xffff0000 ) | ( e1 & 0x0000ffff )	149:4:2449:2495	2595771	20	True				
ANR	2596173	AssignmentExpression	offset = ( e2 & 0xffff0000 ) | ( e1 & 0x0000ffff )		2595771	0		=			
ANR	2596174	Identifier	offset		2595771	0					
ANR	2596175	InclusiveOrExpression	( e2 & 0xffff0000 ) | ( e1 & 0x0000ffff )		2595771	1		|			
ANR	2596176	BitAndExpression	e2 & 0xffff0000		2595771	0		&			
ANR	2596177	Identifier	e2		2595771	0					
ANR	2596178	PrimaryExpression	0xffff0000		2595771	1					
ANR	2596179	BitAndExpression	e1 & 0x0000ffff		2595771	1		&			
ANR	2596180	Identifier	e1		2595771	0					
ANR	2596181	PrimaryExpression	0x0000ffff		2595771	1					
ANR	2596182	IfStatement	if ( ( selector & 0xfffc ) == 0 )		2595771	21					
ANR	2596183	Condition	( selector & 0xfffc ) == 0	151:8:2506:2529	2595771	0	True				
ANR	2596184	EqualityExpression	( selector & 0xfffc ) == 0		2595771	0		==			
ANR	2596185	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596186	Identifier	selector		2595771	0					
ANR	2596187	PrimaryExpression	0xfffc		2595771	1					
ANR	2596188	PrimaryExpression	0		2595771	1					
ANR	2596189	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , 0 )"	153:8:2541:2575	2595771	1	True				
ANR	2596190	CallExpression	"raise_exception_err ( EXCP0D_GPF , 0 )"		2595771	0					
ANR	2596191	Callee	raise_exception_err		2595771	0					
ANR	2596192	Identifier	raise_exception_err		2595771	0					
ANR	2596193	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596194	Argument	EXCP0D_GPF		2595771	0					
ANR	2596195	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596196	Argument	0		2595771	1					
ANR	2596197	PrimaryExpression	0		2595771	0					
ANR	2596198	IfStatement	"if ( load_segment ( & e1 , & e2 , selector ) != 0 )"		2595771	22					
ANR	2596199	Condition	"load_segment ( & e1 , & e2 , selector ) != 0"	157:8:2588:2624	2595771	0	True				
ANR	2596200	EqualityExpression	"load_segment ( & e1 , & e2 , selector ) != 0"		2595771	0		!=			
ANR	2596201	CallExpression	"load_segment ( & e1 , & e2 , selector )"		2595771	0					
ANR	2596202	Callee	load_segment		2595771	0					
ANR	2596203	Identifier	load_segment		2595771	0					
ANR	2596204	ArgumentList	& e1		2595771	1					
ANR	2596205	Argument	& e1		2595771	0					
ANR	2596206	UnaryOperationExpression	& e1		2595771	0					
ANR	2596207	UnaryOperator	&		2595771	0					
ANR	2596208	Identifier	e1		2595771	1					
ANR	2596209	Argument	& e2		2595771	1					
ANR	2596210	UnaryOperationExpression	& e2		2595771	0					
ANR	2596211	UnaryOperator	&		2595771	0					
ANR	2596212	Identifier	e2		2595771	1					
ANR	2596213	Argument	selector		2595771	2					
ANR	2596214	Identifier	selector		2595771	0					
ANR	2596215	PrimaryExpression	0		2595771	1					
ANR	2596216	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"	159:8:2636:2686	2595771	1	True				
ANR	2596217	CallExpression	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"		2595771	0					
ANR	2596218	Callee	raise_exception_err		2595771	0					
ANR	2596219	Identifier	raise_exception_err		2595771	0					
ANR	2596220	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596221	Argument	EXCP0D_GPF		2595771	0					
ANR	2596222	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596223	Argument	selector & 0xfffc		2595771	1					
ANR	2596224	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596225	Identifier	selector		2595771	0					
ANR	2596226	PrimaryExpression	0xfffc		2595771	1					
ANR	2596227	IfStatement	if ( ! ( e2 & DESC_S_MASK ) || ! ( e2 & ( DESC_CS_MASK ) ) )		2595771	23					
ANR	2596228	Condition	! ( e2 & DESC_S_MASK ) || ! ( e2 & ( DESC_CS_MASK ) )	161:8:2697:2741	2595771	0	True				
ANR	2596229	OrExpression	! ( e2 & DESC_S_MASK ) || ! ( e2 & ( DESC_CS_MASK ) )		2595771	0		||			
ANR	2596230	UnaryOperationExpression	! ( e2 & DESC_S_MASK )		2595771	0					
ANR	2596231	UnaryOperator	!		2595771	0					
ANR	2596232	BitAndExpression	e2 & DESC_S_MASK		2595771	1		&			
ANR	2596233	Identifier	e2		2595771	0					
ANR	2596234	Identifier	DESC_S_MASK		2595771	1					
ANR	2596235	UnaryOperationExpression	! ( e2 & ( DESC_CS_MASK ) )		2595771	1					
ANR	2596236	UnaryOperator	!		2595771	0					
ANR	2596237	BitAndExpression	e2 & ( DESC_CS_MASK )		2595771	1		&			
ANR	2596238	Identifier	e2		2595771	0					
ANR	2596239	Identifier	DESC_CS_MASK		2595771	1					
ANR	2596240	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"	163:8:2753:2803	2595771	1	True				
ANR	2596241	CallExpression	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"		2595771	0					
ANR	2596242	Callee	raise_exception_err		2595771	0					
ANR	2596243	Identifier	raise_exception_err		2595771	0					
ANR	2596244	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596245	Argument	EXCP0D_GPF		2595771	0					
ANR	2596246	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596247	Argument	selector & 0xfffc		2595771	1					
ANR	2596248	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596249	Identifier	selector		2595771	0					
ANR	2596250	PrimaryExpression	0xfffc		2595771	1					
ANR	2596251	ExpressionStatement	dpl = ( e2 >> DESC_DPL_SHIFT ) & 3	165:4:2810:2842	2595771	24	True				
ANR	2596252	AssignmentExpression	dpl = ( e2 >> DESC_DPL_SHIFT ) & 3		2595771	0		=			
ANR	2596253	Identifier	dpl		2595771	0					
ANR	2596254	BitAndExpression	( e2 >> DESC_DPL_SHIFT ) & 3		2595771	1		&			
ANR	2596255	ShiftExpression	e2 >> DESC_DPL_SHIFT		2595771	0		>>			
ANR	2596256	Identifier	e2		2595771	0					
ANR	2596257	Identifier	DESC_DPL_SHIFT		2595771	1					
ANR	2596258	PrimaryExpression	3		2595771	1					
ANR	2596259	IfStatement	if ( dpl > cpl )		2595771	25					
ANR	2596260	Condition	dpl > cpl	167:8:2853:2861	2595771	0	True				
ANR	2596261	RelationalExpression	dpl > cpl		2595771	0		>			
ANR	2596262	Identifier	dpl		2595771	0					
ANR	2596263	Identifier	cpl		2595771	1					
ANR	2596264	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"	169:8:2873:2923	2595771	1	True				
ANR	2596265	CallExpression	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"		2595771	0					
ANR	2596266	Callee	raise_exception_err		2595771	0					
ANR	2596267	Identifier	raise_exception_err		2595771	0					
ANR	2596268	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596269	Argument	EXCP0D_GPF		2595771	0					
ANR	2596270	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596271	Argument	selector & 0xfffc		2595771	1					
ANR	2596272	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596273	Identifier	selector		2595771	0					
ANR	2596274	PrimaryExpression	0xfffc		2595771	1					
ANR	2596275	IfStatement	if ( ! ( e2 & DESC_P_MASK ) )		2595771	26					
ANR	2596276	Condition	! ( e2 & DESC_P_MASK )	171:8:2934:2952	2595771	0	True				
ANR	2596277	UnaryOperationExpression	! ( e2 & DESC_P_MASK )		2595771	0					
ANR	2596278	UnaryOperator	!		2595771	0					
ANR	2596279	BitAndExpression	e2 & DESC_P_MASK		2595771	1		&			
ANR	2596280	Identifier	e2		2595771	0					
ANR	2596281	Identifier	DESC_P_MASK		2595771	1					
ANR	2596282	ExpressionStatement	"raise_exception_err ( EXCP0B_NOSEG , selector & 0xfffc )"	173:8:2964:3016	2595771	1	True				
ANR	2596283	CallExpression	"raise_exception_err ( EXCP0B_NOSEG , selector & 0xfffc )"		2595771	0					
ANR	2596284	Callee	raise_exception_err		2595771	0					
ANR	2596285	Identifier	raise_exception_err		2595771	0					
ANR	2596286	ArgumentList	EXCP0B_NOSEG		2595771	1					
ANR	2596287	Argument	EXCP0B_NOSEG		2595771	0					
ANR	2596288	Identifier	EXCP0B_NOSEG		2595771	0					
ANR	2596289	Argument	selector & 0xfffc		2595771	1					
ANR	2596290	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596291	Identifier	selector		2595771	0					
ANR	2596292	PrimaryExpression	0xfffc		2595771	1					
ANR	2596293	IfStatement	if ( ! ( e2 & DESC_C_MASK ) && dpl < cpl )		2595771	27					
ANR	2596294	Condition	! ( e2 & DESC_C_MASK ) && dpl < cpl	175:8:3027:3058	2595771	0	True				
ANR	2596295	AndExpression	! ( e2 & DESC_C_MASK ) && dpl < cpl		2595771	0		&&			
ANR	2596296	UnaryOperationExpression	! ( e2 & DESC_C_MASK )		2595771	0					
ANR	2596297	UnaryOperator	!		2595771	0					
ANR	2596298	BitAndExpression	e2 & DESC_C_MASK		2595771	1		&			
ANR	2596299	Identifier	e2		2595771	0					
ANR	2596300	Identifier	DESC_C_MASK		2595771	1					
ANR	2596301	RelationalExpression	dpl < cpl		2595771	1		<			
ANR	2596302	Identifier	dpl		2595771	0					
ANR	2596303	Identifier	cpl		2595771	1					
ANR	2596304	CompoundStatement		171:42:2915:2915	2595771	1					
ANR	2596305	ExpressionStatement	"get_ss_esp_from_tss ( & ss , & esp , dpl )"	179:8:3107:3142	2595771	0	True				
ANR	2596306	CallExpression	"get_ss_esp_from_tss ( & ss , & esp , dpl )"		2595771	0					
ANR	2596307	Callee	get_ss_esp_from_tss		2595771	0					
ANR	2596308	Identifier	get_ss_esp_from_tss		2595771	0					
ANR	2596309	ArgumentList	& ss		2595771	1					
ANR	2596310	Argument	& ss		2595771	0					
ANR	2596311	UnaryOperationExpression	& ss		2595771	0					
ANR	2596312	UnaryOperator	&		2595771	0					
ANR	2596313	Identifier	ss		2595771	1					
ANR	2596314	Argument	& esp		2595771	1					
ANR	2596315	UnaryOperationExpression	& esp		2595771	0					
ANR	2596316	UnaryOperator	&		2595771	0					
ANR	2596317	Identifier	esp		2595771	1					
ANR	2596318	Argument	dpl		2595771	2					
ANR	2596319	Identifier	dpl		2595771	0					
ANR	2596320	IfStatement	if ( ( ss & 0xfffc ) == 0 )		2595771	1					
ANR	2596321	Condition	( ss & 0xfffc ) == 0	181:12:3157:3174	2595771	0	True				
ANR	2596322	EqualityExpression	( ss & 0xfffc ) == 0		2595771	0		==			
ANR	2596323	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596324	Identifier	ss		2595771	0					
ANR	2596325	PrimaryExpression	0xfffc		2595771	1					
ANR	2596326	PrimaryExpression	0		2595771	1					
ANR	2596327	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	183:12:3190:3234	2595771	1	True				
ANR	2596328	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596329	Callee	raise_exception_err		2595771	0					
ANR	2596330	Identifier	raise_exception_err		2595771	0					
ANR	2596331	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596332	Argument	EXCP0A_TSS		2595771	0					
ANR	2596333	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596334	Argument	ss & 0xfffc		2595771	1					
ANR	2596335	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596336	Identifier	ss		2595771	0					
ANR	2596337	PrimaryExpression	0xfffc		2595771	1					
ANR	2596338	IfStatement	if ( ( ss & 3 ) != dpl )		2595771	2					
ANR	2596339	Condition	( ss & 3 ) != dpl	185:12:3249:3263	2595771	0	True				
ANR	2596340	EqualityExpression	( ss & 3 ) != dpl		2595771	0		!=			
ANR	2596341	BitAndExpression	ss & 3		2595771	0		&			
ANR	2596342	Identifier	ss		2595771	0					
ANR	2596343	PrimaryExpression	3		2595771	1					
ANR	2596344	Identifier	dpl		2595771	1					
ANR	2596345	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	187:12:3279:3323	2595771	1	True				
ANR	2596346	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596347	Callee	raise_exception_err		2595771	0					
ANR	2596348	Identifier	raise_exception_err		2595771	0					
ANR	2596349	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596350	Argument	EXCP0A_TSS		2595771	0					
ANR	2596351	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596352	Argument	ss & 0xfffc		2595771	1					
ANR	2596353	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596354	Identifier	ss		2595771	0					
ANR	2596355	PrimaryExpression	0xfffc		2595771	1					
ANR	2596356	IfStatement	"if ( load_segment ( & ss_e1 , & ss_e2 , ss ) != 0 )"		2595771	3					
ANR	2596357	Condition	"load_segment ( & ss_e1 , & ss_e2 , ss ) != 0"	189:12:3338:3374	2595771	0	True				
ANR	2596358	EqualityExpression	"load_segment ( & ss_e1 , & ss_e2 , ss ) != 0"		2595771	0		!=			
ANR	2596359	CallExpression	"load_segment ( & ss_e1 , & ss_e2 , ss )"		2595771	0					
ANR	2596360	Callee	load_segment		2595771	0					
ANR	2596361	Identifier	load_segment		2595771	0					
ANR	2596362	ArgumentList	& ss_e1		2595771	1					
ANR	2596363	Argument	& ss_e1		2595771	0					
ANR	2596364	UnaryOperationExpression	& ss_e1		2595771	0					
ANR	2596365	UnaryOperator	&		2595771	0					
ANR	2596366	Identifier	ss_e1		2595771	1					
ANR	2596367	Argument	& ss_e2		2595771	1					
ANR	2596368	UnaryOperationExpression	& ss_e2		2595771	0					
ANR	2596369	UnaryOperator	&		2595771	0					
ANR	2596370	Identifier	ss_e2		2595771	1					
ANR	2596371	Argument	ss		2595771	2					
ANR	2596372	Identifier	ss		2595771	0					
ANR	2596373	PrimaryExpression	0		2595771	1					
ANR	2596374	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	191:12:3390:3434	2595771	1	True				
ANR	2596375	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596376	Callee	raise_exception_err		2595771	0					
ANR	2596377	Identifier	raise_exception_err		2595771	0					
ANR	2596378	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596379	Argument	EXCP0A_TSS		2595771	0					
ANR	2596380	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596381	Argument	ss & 0xfffc		2595771	1					
ANR	2596382	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596383	Identifier	ss		2595771	0					
ANR	2596384	PrimaryExpression	0xfffc		2595771	1					
ANR	2596385	ExpressionStatement	ss_dpl = ( ss_e2 >> DESC_DPL_SHIFT ) & 3	193:8:3445:3483	2595771	4	True				
ANR	2596386	AssignmentExpression	ss_dpl = ( ss_e2 >> DESC_DPL_SHIFT ) & 3		2595771	0		=			
ANR	2596387	Identifier	ss_dpl		2595771	0					
ANR	2596388	BitAndExpression	( ss_e2 >> DESC_DPL_SHIFT ) & 3		2595771	1		&			
ANR	2596389	ShiftExpression	ss_e2 >> DESC_DPL_SHIFT		2595771	0		>>			
ANR	2596390	Identifier	ss_e2		2595771	0					
ANR	2596391	Identifier	DESC_DPL_SHIFT		2595771	1					
ANR	2596392	PrimaryExpression	3		2595771	1					
ANR	2596393	IfStatement	if ( ss_dpl != dpl )		2595771	5					
ANR	2596394	Condition	ss_dpl != dpl	195:12:3498:3510	2595771	0	True				
ANR	2596395	EqualityExpression	ss_dpl != dpl		2595771	0		!=			
ANR	2596396	Identifier	ss_dpl		2595771	0					
ANR	2596397	Identifier	dpl		2595771	1					
ANR	2596398	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	197:12:3526:3570	2595771	1	True				
ANR	2596399	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596400	Callee	raise_exception_err		2595771	0					
ANR	2596401	Identifier	raise_exception_err		2595771	0					
ANR	2596402	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596403	Argument	EXCP0A_TSS		2595771	0					
ANR	2596404	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596405	Argument	ss & 0xfffc		2595771	1					
ANR	2596406	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596407	Identifier	ss		2595771	0					
ANR	2596408	PrimaryExpression	0xfffc		2595771	1					
ANR	2596409	IfStatement	if ( ! ( ss_e2 & DESC_S_MASK ) || ( ss_e2 & DESC_CS_MASK ) || ! ( ss_e2 & DESC_W_MASK ) )		2595771	6					
ANR	2596410	Condition	! ( ss_e2 & DESC_S_MASK ) || ( ss_e2 & DESC_CS_MASK ) || ! ( ss_e2 & DESC_W_MASK )	199:12:3585:3684	2595771	0	True				
ANR	2596411	OrExpression	! ( ss_e2 & DESC_S_MASK ) || ( ss_e2 & DESC_CS_MASK ) || ! ( ss_e2 & DESC_W_MASK )		2595771	0		||			
ANR	2596412	UnaryOperationExpression	! ( ss_e2 & DESC_S_MASK )		2595771	0					
ANR	2596413	UnaryOperator	!		2595771	0					
ANR	2596414	BitAndExpression	ss_e2 & DESC_S_MASK		2595771	1		&			
ANR	2596415	Identifier	ss_e2		2595771	0					
ANR	2596416	Identifier	DESC_S_MASK		2595771	1					
ANR	2596417	OrExpression	( ss_e2 & DESC_CS_MASK ) || ! ( ss_e2 & DESC_W_MASK )		2595771	1		||			
ANR	2596418	BitAndExpression	ss_e2 & DESC_CS_MASK		2595771	0		&			
ANR	2596419	Identifier	ss_e2		2595771	0					
ANR	2596420	Identifier	DESC_CS_MASK		2595771	1					
ANR	2596421	UnaryOperationExpression	! ( ss_e2 & DESC_W_MASK )		2595771	1					
ANR	2596422	UnaryOperator	!		2595771	0					
ANR	2596423	BitAndExpression	ss_e2 & DESC_W_MASK		2595771	1		&			
ANR	2596424	Identifier	ss_e2		2595771	0					
ANR	2596425	Identifier	DESC_W_MASK		2595771	1					
ANR	2596426	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	205:12:3700:3744	2595771	1	True				
ANR	2596427	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596428	Callee	raise_exception_err		2595771	0					
ANR	2596429	Identifier	raise_exception_err		2595771	0					
ANR	2596430	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596431	Argument	EXCP0A_TSS		2595771	0					
ANR	2596432	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596433	Argument	ss & 0xfffc		2595771	1					
ANR	2596434	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596435	Identifier	ss		2595771	0					
ANR	2596436	PrimaryExpression	0xfffc		2595771	1					
ANR	2596437	IfStatement	if ( ! ( ss_e2 & DESC_P_MASK ) )		2595771	7					
ANR	2596438	Condition	! ( ss_e2 & DESC_P_MASK )	207:12:3759:3780	2595771	0	True				
ANR	2596439	UnaryOperationExpression	! ( ss_e2 & DESC_P_MASK )		2595771	0					
ANR	2596440	UnaryOperator	!		2595771	0					
ANR	2596441	BitAndExpression	ss_e2 & DESC_P_MASK		2595771	1		&			
ANR	2596442	Identifier	ss_e2		2595771	0					
ANR	2596443	Identifier	DESC_P_MASK		2595771	1					
ANR	2596444	ExpressionStatement	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"	209:12:3796:3840	2595771	1	True				
ANR	2596445	CallExpression	"raise_exception_err ( EXCP0A_TSS , ss & 0xfffc )"		2595771	0					
ANR	2596446	Callee	raise_exception_err		2595771	0					
ANR	2596447	Identifier	raise_exception_err		2595771	0					
ANR	2596448	ArgumentList	EXCP0A_TSS		2595771	1					
ANR	2596449	Argument	EXCP0A_TSS		2595771	0					
ANR	2596450	Identifier	EXCP0A_TSS		2595771	0					
ANR	2596451	Argument	ss & 0xfffc		2595771	1					
ANR	2596452	BitAndExpression	ss & 0xfffc		2595771	0		&			
ANR	2596453	Identifier	ss		2595771	0					
ANR	2596454	PrimaryExpression	0xfffc		2595771	1					
ANR	2596455	ExpressionStatement	new_stack = 1	211:8:3851:3864	2595771	8	True				
ANR	2596456	AssignmentExpression	new_stack = 1		2595771	0		=			
ANR	2596457	Identifier	new_stack		2595771	0					
ANR	2596458	PrimaryExpression	1		2595771	1					
ANR	2596459	ExpressionStatement	sp_mask = get_sp_mask ( ss_e2 )	213:8:3875:3903	2595771	9	True				
ANR	2596460	AssignmentExpression	sp_mask = get_sp_mask ( ss_e2 )		2595771	0		=			
ANR	2596461	Identifier	sp_mask		2595771	0					
ANR	2596462	CallExpression	get_sp_mask ( ss_e2 )		2595771	1					
ANR	2596463	Callee	get_sp_mask		2595771	0					
ANR	2596464	Identifier	get_sp_mask		2595771	0					
ANR	2596465	ArgumentList	ss_e2		2595771	1					
ANR	2596466	Argument	ss_e2		2595771	0					
ANR	2596467	Identifier	ss_e2		2595771	0					
ANR	2596468	ExpressionStatement	"ssp = get_seg_base ( ss_e1 , ss_e2 )"	215:8:3914:3946	2595771	10	True				
ANR	2596469	AssignmentExpression	"ssp = get_seg_base ( ss_e1 , ss_e2 )"		2595771	0		=			
ANR	2596470	Identifier	ssp		2595771	0					
ANR	2596471	CallExpression	"get_seg_base ( ss_e1 , ss_e2 )"		2595771	1					
ANR	2596472	Callee	get_seg_base		2595771	0					
ANR	2596473	Identifier	get_seg_base		2595771	0					
ANR	2596474	ArgumentList	ss_e1		2595771	1					
ANR	2596475	Argument	ss_e1		2595771	0					
ANR	2596476	Identifier	ss_e1		2595771	0					
ANR	2596477	Argument	ss_e2		2595771	1					
ANR	2596478	Identifier	ss_e2		2595771	0					
ANR	2596479	ElseStatement	else		2595771	0					
ANR	2596480	IfStatement	if ( ( e2 & DESC_C_MASK ) || dpl == cpl )		2595771	0					
ANR	2596481	Condition	( e2 & DESC_C_MASK ) || dpl == cpl	217:15:3964:3995	2595771	0	True				
ANR	2596482	OrExpression	( e2 & DESC_C_MASK ) || dpl == cpl		2595771	0		||			
ANR	2596483	BitAndExpression	e2 & DESC_C_MASK		2595771	0		&			
ANR	2596484	Identifier	e2		2595771	0					
ANR	2596485	Identifier	DESC_C_MASK		2595771	1					
ANR	2596486	EqualityExpression	dpl == cpl		2595771	1		==			
ANR	2596487	Identifier	dpl		2595771	0					
ANR	2596488	Identifier	cpl		2595771	1					
ANR	2596489	CompoundStatement		213:49:3852:3852	2595771	1					
ANR	2596490	ExpressionStatement	new_stack = 0	221:8:4043:4056	2595771	0	True				
ANR	2596491	AssignmentExpression	new_stack = 0		2595771	0		=			
ANR	2596492	Identifier	new_stack		2595771	0					
ANR	2596493	PrimaryExpression	0		2595771	1					
ANR	2596494	ExpressionStatement	sp_mask = get_sp_mask ( env -> segs [ R_SS ] . flags )	223:8:4067:4111	2595771	1	True				
ANR	2596495	AssignmentExpression	sp_mask = get_sp_mask ( env -> segs [ R_SS ] . flags )		2595771	0		=			
ANR	2596496	Identifier	sp_mask		2595771	0					
ANR	2596497	CallExpression	get_sp_mask ( env -> segs [ R_SS ] . flags )		2595771	1					
ANR	2596498	Callee	get_sp_mask		2595771	0					
ANR	2596499	Identifier	get_sp_mask		2595771	0					
ANR	2596500	ArgumentList	env -> segs [ R_SS ] . flags		2595771	1					
ANR	2596501	Argument	env -> segs [ R_SS ] . flags		2595771	0					
ANR	2596502	MemberAccess	env -> segs [ R_SS ] . flags		2595771	0					
ANR	2596503	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596504	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596505	Identifier	env		2595771	0					
ANR	2596506	Identifier	segs		2595771	1					
ANR	2596507	Identifier	R_SS		2595771	1					
ANR	2596508	Identifier	flags		2595771	1					
ANR	2596509	ExpressionStatement	ssp = env -> segs [ R_SS ] . base	225:8:4122:4148	2595771	2	True				
ANR	2596510	AssignmentExpression	ssp = env -> segs [ R_SS ] . base		2595771	0		=			
ANR	2596511	Identifier	ssp		2595771	0					
ANR	2596512	MemberAccess	env -> segs [ R_SS ] . base		2595771	1					
ANR	2596513	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596514	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596515	Identifier	env		2595771	0					
ANR	2596516	Identifier	segs		2595771	1					
ANR	2596517	Identifier	R_SS		2595771	1					
ANR	2596518	Identifier	base		2595771	1					
ANR	2596519	ExpressionStatement	esp = ESP	227:8:4159:4168	2595771	3	True				
ANR	2596520	AssignmentExpression	esp = ESP		2595771	0		=			
ANR	2596521	Identifier	esp		2595771	0					
ANR	2596522	Identifier	ESP		2595771	1					
ANR	2596523	ElseStatement	else		2595771	0					
ANR	2596524	CompoundStatement		225:11:4036:4036	2595771	0					
ANR	2596525	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"	231:8:4193:4243	2595771	0	True				
ANR	2596526	CallExpression	"raise_exception_err ( EXCP0D_GPF , selector & 0xfffc )"		2595771	0					
ANR	2596527	Callee	raise_exception_err		2595771	0					
ANR	2596528	Identifier	raise_exception_err		2595771	0					
ANR	2596529	ArgumentList	EXCP0D_GPF		2595771	1					
ANR	2596530	Argument	EXCP0D_GPF		2595771	0					
ANR	2596531	Identifier	EXCP0D_GPF		2595771	0					
ANR	2596532	Argument	selector & 0xfffc		2595771	1					
ANR	2596533	BitAndExpression	selector & 0xfffc		2595771	0		&			
ANR	2596534	Identifier	selector		2595771	0					
ANR	2596535	PrimaryExpression	0xfffc		2595771	1					
ANR	2596536	ExpressionStatement	new_stack = 0	233:8:4254:4267	2595771	1	True				
ANR	2596537	AssignmentExpression	new_stack = 0		2595771	0		=			
ANR	2596538	Identifier	new_stack		2595771	0					
ANR	2596539	PrimaryExpression	0		2595771	1					
ANR	2596540	ExpressionStatement	sp_mask = 0	235:8:4298:4309	2595771	2	True				
ANR	2596541	AssignmentExpression	sp_mask = 0		2595771	0		=			
ANR	2596542	Identifier	sp_mask		2595771	0					
ANR	2596543	PrimaryExpression	0		2595771	1					
ANR	2596544	ExpressionStatement	ssp = NULL	237:8:4340:4350	2595771	3	True				
ANR	2596545	AssignmentExpression	ssp = NULL		2595771	0		=			
ANR	2596546	Identifier	ssp		2595771	0					
ANR	2596547	Identifier	NULL		2595771	1					
ANR	2596548	ExpressionStatement	esp = 0	239:8:4381:4388	2595771	4	True				
ANR	2596549	AssignmentExpression	esp = 0		2595771	0		=			
ANR	2596550	Identifier	esp		2595771	0					
ANR	2596551	PrimaryExpression	0		2595771	1					
ANR	2596552	ExpressionStatement	shift = type >> 3	245:4:4424:4441	2595771	28	True				
ANR	2596553	AssignmentExpression	shift = type >> 3		2595771	0		=			
ANR	2596554	Identifier	shift		2595771	0					
ANR	2596555	ShiftExpression	type >> 3		2595771	1		>>			
ANR	2596556	Identifier	type		2595771	0					
ANR	2596557	PrimaryExpression	3		2595771	1					
ANR	2596558	ExpressionStatement	push_size = 6 + ( new_stack << 2 ) + ( has_error_code << 1 )	253:4:4509:4565	2595771	29	True				
ANR	2596559	AssignmentExpression	push_size = 6 + ( new_stack << 2 ) + ( has_error_code << 1 )		2595771	0		=			
ANR	2596560	Identifier	push_size		2595771	0					
ANR	2596561	AdditiveExpression	6 + ( new_stack << 2 ) + ( has_error_code << 1 )		2595771	1		+			
ANR	2596562	PrimaryExpression	6		2595771	0					
ANR	2596563	AdditiveExpression	( new_stack << 2 ) + ( has_error_code << 1 )		2595771	1		+			
ANR	2596564	ShiftExpression	new_stack << 2		2595771	0		<<			
ANR	2596565	Identifier	new_stack		2595771	0					
ANR	2596566	PrimaryExpression	2		2595771	1					
ANR	2596567	ShiftExpression	has_error_code << 1		2595771	1		<<			
ANR	2596568	Identifier	has_error_code		2595771	0					
ANR	2596569	PrimaryExpression	1		2595771	1					
ANR	2596570	IfStatement	if ( env -> eflags & VM_MASK )		2595771	30					
ANR	2596571	Condition	env -> eflags & VM_MASK	255:8:4576:4596	2595771	0	True				
ANR	2596572	BitAndExpression	env -> eflags & VM_MASK		2595771	0		&			
ANR	2596573	PtrMemberAccess	env -> eflags		2595771	0					
ANR	2596574	Identifier	env		2595771	0					
ANR	2596575	Identifier	eflags		2595771	1					
ANR	2596576	Identifier	VM_MASK		2595771	1					
ANR	2596577	ExpressionStatement	push_size += 8	257:8:4608:4622	2595771	1	True				
ANR	2596578	AssignmentExpression	push_size += 8		2595771	0		+=			
ANR	2596579	Identifier	push_size		2595771	0					
ANR	2596580	PrimaryExpression	8		2595771	1					
ANR	2596581	ExpressionStatement	push_size <<= shift	259:4:4629:4648	2595771	31	True				
ANR	2596582	AssignmentExpression	push_size <<= shift		2595771	0		<<=			
ANR	2596583	Identifier	push_size		2595771	0					
ANR	2596584	Identifier	shift		2595771	1					
ANR	2596585	IfStatement	if ( is_int )		2595771	32					
ANR	2596586	Condition	is_int	263:8:4667:4672	2595771	0	True				
ANR	2596587	Identifier	is_int		2595771	0					
ANR	2596588	ExpressionStatement	old_eip = next_eip	265:8:4684:4702	2595771	1	True				
ANR	2596589	AssignmentExpression	old_eip = next_eip		2595771	0		=			
ANR	2596590	Identifier	old_eip		2595771	0					
ANR	2596591	Identifier	next_eip		2595771	1					
ANR	2596592	ElseStatement	else		2595771	0					
ANR	2596593	ExpressionStatement	old_eip = env -> eip	269:8:4723:4741	2595771	0	True				
ANR	2596594	AssignmentExpression	old_eip = env -> eip		2595771	0		=			
ANR	2596595	Identifier	old_eip		2595771	0					
ANR	2596596	PtrMemberAccess	env -> eip		2595771	1					
ANR	2596597	Identifier	env		2595771	0					
ANR	2596598	Identifier	eip		2595771	1					
ANR	2596599	IfStatement	if ( shift == 1 )		2595771	33					
ANR	2596600	Condition	shift == 1	271:8:4752:4761	2595771	0	True				
ANR	2596601	EqualityExpression	shift == 1		2595771	0		==			
ANR	2596602	Identifier	shift		2595771	0					
ANR	2596603	PrimaryExpression	1		2595771	1					
ANR	2596604	CompoundStatement		267:20:4618:4618	2595771	1					
ANR	2596605	IfStatement	if ( env -> eflags & VM_MASK )		2595771	0					
ANR	2596606	Condition	env -> eflags & VM_MASK	273:12:4779:4799	2595771	0	True				
ANR	2596607	BitAndExpression	env -> eflags & VM_MASK		2595771	0		&			
ANR	2596608	PtrMemberAccess	env -> eflags		2595771	0					
ANR	2596609	Identifier	env		2595771	0					
ANR	2596610	Identifier	eflags		2595771	1					
ANR	2596611	Identifier	VM_MASK		2595771	1					
ANR	2596612	CompoundStatement		269:35:4656:4656	2595771	1					
ANR	2596613	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_GS ] . selector )"	275:12:4817:4867	2595771	0	True				
ANR	2596614	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_GS ] . selector )"		2595771	0					
ANR	2596615	Callee	PUSHL		2595771	0					
ANR	2596616	Identifier	PUSHL		2595771	0					
ANR	2596617	ArgumentList	ssp		2595771	1					
ANR	2596618	Argument	ssp		2595771	0					
ANR	2596619	Identifier	ssp		2595771	0					
ANR	2596620	Argument	esp		2595771	1					
ANR	2596621	Identifier	esp		2595771	0					
ANR	2596622	Argument	sp_mask		2595771	2					
ANR	2596623	Identifier	sp_mask		2595771	0					
ANR	2596624	Argument	env -> segs [ R_GS ] . selector		2595771	3					
ANR	2596625	MemberAccess	env -> segs [ R_GS ] . selector		2595771	0					
ANR	2596626	ArrayIndexing	env -> segs [ R_GS ]		2595771	0					
ANR	2596627	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596628	Identifier	env		2595771	0					
ANR	2596629	Identifier	segs		2595771	1					
ANR	2596630	Identifier	R_GS		2595771	1					
ANR	2596631	Identifier	selector		2595771	1					
ANR	2596632	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_FS ] . selector )"	277:12:4882:4932	2595771	1	True				
ANR	2596633	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_FS ] . selector )"		2595771	0					
ANR	2596634	Callee	PUSHL		2595771	0					
ANR	2596635	Identifier	PUSHL		2595771	0					
ANR	2596636	ArgumentList	ssp		2595771	1					
ANR	2596637	Argument	ssp		2595771	0					
ANR	2596638	Identifier	ssp		2595771	0					
ANR	2596639	Argument	esp		2595771	1					
ANR	2596640	Identifier	esp		2595771	0					
ANR	2596641	Argument	sp_mask		2595771	2					
ANR	2596642	Identifier	sp_mask		2595771	0					
ANR	2596643	Argument	env -> segs [ R_FS ] . selector		2595771	3					
ANR	2596644	MemberAccess	env -> segs [ R_FS ] . selector		2595771	0					
ANR	2596645	ArrayIndexing	env -> segs [ R_FS ]		2595771	0					
ANR	2596646	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596647	Identifier	env		2595771	0					
ANR	2596648	Identifier	segs		2595771	1					
ANR	2596649	Identifier	R_FS		2595771	1					
ANR	2596650	Identifier	selector		2595771	1					
ANR	2596651	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_DS ] . selector )"	279:12:4947:4997	2595771	2	True				
ANR	2596652	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_DS ] . selector )"		2595771	0					
ANR	2596653	Callee	PUSHL		2595771	0					
ANR	2596654	Identifier	PUSHL		2595771	0					
ANR	2596655	ArgumentList	ssp		2595771	1					
ANR	2596656	Argument	ssp		2595771	0					
ANR	2596657	Identifier	ssp		2595771	0					
ANR	2596658	Argument	esp		2595771	1					
ANR	2596659	Identifier	esp		2595771	0					
ANR	2596660	Argument	sp_mask		2595771	2					
ANR	2596661	Identifier	sp_mask		2595771	0					
ANR	2596662	Argument	env -> segs [ R_DS ] . selector		2595771	3					
ANR	2596663	MemberAccess	env -> segs [ R_DS ] . selector		2595771	0					
ANR	2596664	ArrayIndexing	env -> segs [ R_DS ]		2595771	0					
ANR	2596665	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596666	Identifier	env		2595771	0					
ANR	2596667	Identifier	segs		2595771	1					
ANR	2596668	Identifier	R_DS		2595771	1					
ANR	2596669	Identifier	selector		2595771	1					
ANR	2596670	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_ES ] . selector )"	281:12:5012:5062	2595771	3	True				
ANR	2596671	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_ES ] . selector )"		2595771	0					
ANR	2596672	Callee	PUSHL		2595771	0					
ANR	2596673	Identifier	PUSHL		2595771	0					
ANR	2596674	ArgumentList	ssp		2595771	1					
ANR	2596675	Argument	ssp		2595771	0					
ANR	2596676	Identifier	ssp		2595771	0					
ANR	2596677	Argument	esp		2595771	1					
ANR	2596678	Identifier	esp		2595771	0					
ANR	2596679	Argument	sp_mask		2595771	2					
ANR	2596680	Identifier	sp_mask		2595771	0					
ANR	2596681	Argument	env -> segs [ R_ES ] . selector		2595771	3					
ANR	2596682	MemberAccess	env -> segs [ R_ES ] . selector		2595771	0					
ANR	2596683	ArrayIndexing	env -> segs [ R_ES ]		2595771	0					
ANR	2596684	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596685	Identifier	env		2595771	0					
ANR	2596686	Identifier	segs		2595771	1					
ANR	2596687	Identifier	R_ES		2595771	1					
ANR	2596688	Identifier	selector		2595771	1					
ANR	2596689	IfStatement	if ( new_stack )		2595771	1					
ANR	2596690	Condition	new_stack	285:12:5088:5096	2595771	0	True				
ANR	2596691	Identifier	new_stack		2595771	0					
ANR	2596692	CompoundStatement		281:23:4953:4953	2595771	1					
ANR	2596693	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_SS ] . selector )"	287:12:5114:5164	2595771	0	True				
ANR	2596694	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_SS ] . selector )"		2595771	0					
ANR	2596695	Callee	PUSHL		2595771	0					
ANR	2596696	Identifier	PUSHL		2595771	0					
ANR	2596697	ArgumentList	ssp		2595771	1					
ANR	2596698	Argument	ssp		2595771	0					
ANR	2596699	Identifier	ssp		2595771	0					
ANR	2596700	Argument	esp		2595771	1					
ANR	2596701	Identifier	esp		2595771	0					
ANR	2596702	Argument	sp_mask		2595771	2					
ANR	2596703	Identifier	sp_mask		2595771	0					
ANR	2596704	Argument	env -> segs [ R_SS ] . selector		2595771	3					
ANR	2596705	MemberAccess	env -> segs [ R_SS ] . selector		2595771	0					
ANR	2596706	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596707	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596708	Identifier	env		2595771	0					
ANR	2596709	Identifier	segs		2595771	1					
ANR	2596710	Identifier	R_SS		2595771	1					
ANR	2596711	Identifier	selector		2595771	1					
ANR	2596712	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , ESP )"	289:12:5179:5208	2595771	1	True				
ANR	2596713	CallExpression	"PUSHL ( ssp , esp , sp_mask , ESP )"		2595771	0					
ANR	2596714	Callee	PUSHL		2595771	0					
ANR	2596715	Identifier	PUSHL		2595771	0					
ANR	2596716	ArgumentList	ssp		2595771	1					
ANR	2596717	Argument	ssp		2595771	0					
ANR	2596718	Identifier	ssp		2595771	0					
ANR	2596719	Argument	esp		2595771	1					
ANR	2596720	Identifier	esp		2595771	0					
ANR	2596721	Argument	sp_mask		2595771	2					
ANR	2596722	Identifier	sp_mask		2595771	0					
ANR	2596723	Argument	ESP		2595771	3					
ANR	2596724	Identifier	ESP		2595771	0					
ANR	2596725	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , compute_eflags ( ) )"	293:8:5230:5272	2595771	2	True				
ANR	2596726	CallExpression	"PUSHL ( ssp , esp , sp_mask , compute_eflags ( ) )"		2595771	0					
ANR	2596727	Callee	PUSHL		2595771	0					
ANR	2596728	Identifier	PUSHL		2595771	0					
ANR	2596729	ArgumentList	ssp		2595771	1					
ANR	2596730	Argument	ssp		2595771	0					
ANR	2596731	Identifier	ssp		2595771	0					
ANR	2596732	Argument	esp		2595771	1					
ANR	2596733	Identifier	esp		2595771	0					
ANR	2596734	Argument	sp_mask		2595771	2					
ANR	2596735	Identifier	sp_mask		2595771	0					
ANR	2596736	Argument	compute_eflags ( )		2595771	3					
ANR	2596737	CallExpression	compute_eflags ( )		2595771	0					
ANR	2596738	Callee	compute_eflags		2595771	0					
ANR	2596739	Identifier	compute_eflags		2595771	0					
ANR	2596740	ArgumentList			2595771	1					
ANR	2596741	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_CS ] . selector )"	295:8:5283:5333	2595771	3	True				
ANR	2596742	CallExpression	"PUSHL ( ssp , esp , sp_mask , env -> segs [ R_CS ] . selector )"		2595771	0					
ANR	2596743	Callee	PUSHL		2595771	0					
ANR	2596744	Identifier	PUSHL		2595771	0					
ANR	2596745	ArgumentList	ssp		2595771	1					
ANR	2596746	Argument	ssp		2595771	0					
ANR	2596747	Identifier	ssp		2595771	0					
ANR	2596748	Argument	esp		2595771	1					
ANR	2596749	Identifier	esp		2595771	0					
ANR	2596750	Argument	sp_mask		2595771	2					
ANR	2596751	Identifier	sp_mask		2595771	0					
ANR	2596752	Argument	env -> segs [ R_CS ] . selector		2595771	3					
ANR	2596753	MemberAccess	env -> segs [ R_CS ] . selector		2595771	0					
ANR	2596754	ArrayIndexing	env -> segs [ R_CS ]		2595771	0					
ANR	2596755	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596756	Identifier	env		2595771	0					
ANR	2596757	Identifier	segs		2595771	1					
ANR	2596758	Identifier	R_CS		2595771	1					
ANR	2596759	Identifier	selector		2595771	1					
ANR	2596760	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , old_eip )"	297:8:5344:5377	2595771	4	True				
ANR	2596761	CallExpression	"PUSHL ( ssp , esp , sp_mask , old_eip )"		2595771	0					
ANR	2596762	Callee	PUSHL		2595771	0					
ANR	2596763	Identifier	PUSHL		2595771	0					
ANR	2596764	ArgumentList	ssp		2595771	1					
ANR	2596765	Argument	ssp		2595771	0					
ANR	2596766	Identifier	ssp		2595771	0					
ANR	2596767	Argument	esp		2595771	1					
ANR	2596768	Identifier	esp		2595771	0					
ANR	2596769	Argument	sp_mask		2595771	2					
ANR	2596770	Identifier	sp_mask		2595771	0					
ANR	2596771	Argument	old_eip		2595771	3					
ANR	2596772	Identifier	old_eip		2595771	0					
ANR	2596773	IfStatement	if ( has_error_code )		2595771	5					
ANR	2596774	Condition	has_error_code	299:12:5392:5405	2595771	0	True				
ANR	2596775	Identifier	has_error_code		2595771	0					
ANR	2596776	CompoundStatement		295:28:5262:5262	2595771	1					
ANR	2596777	ExpressionStatement	"PUSHL ( ssp , esp , sp_mask , error_code )"	301:12:5423:5459	2595771	0	True				
ANR	2596778	CallExpression	"PUSHL ( ssp , esp , sp_mask , error_code )"		2595771	0					
ANR	2596779	Callee	PUSHL		2595771	0					
ANR	2596780	Identifier	PUSHL		2595771	0					
ANR	2596781	ArgumentList	ssp		2595771	1					
ANR	2596782	Argument	ssp		2595771	0					
ANR	2596783	Identifier	ssp		2595771	0					
ANR	2596784	Argument	esp		2595771	1					
ANR	2596785	Identifier	esp		2595771	0					
ANR	2596786	Argument	sp_mask		2595771	2					
ANR	2596787	Identifier	sp_mask		2595771	0					
ANR	2596788	Argument	error_code		2595771	3					
ANR	2596789	Identifier	error_code		2595771	0					
ANR	2596790	ElseStatement	else		2595771	0					
ANR	2596791	CompoundStatement		301:11:5338:5338	2595771	0					
ANR	2596792	IfStatement	if ( new_stack )		2595771	0					
ANR	2596793	Condition	new_stack	307:12:5499:5507	2595771	0	True				
ANR	2596794	Identifier	new_stack		2595771	0					
ANR	2596795	CompoundStatement		303:23:5364:5364	2595771	1					
ANR	2596796	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , env -> segs [ R_SS ] . selector )"	309:12:5525:5575	2595771	0	True				
ANR	2596797	CallExpression	"PUSHW ( ssp , esp , sp_mask , env -> segs [ R_SS ] . selector )"		2595771	0					
ANR	2596798	Callee	PUSHW		2595771	0					
ANR	2596799	Identifier	PUSHW		2595771	0					
ANR	2596800	ArgumentList	ssp		2595771	1					
ANR	2596801	Argument	ssp		2595771	0					
ANR	2596802	Identifier	ssp		2595771	0					
ANR	2596803	Argument	esp		2595771	1					
ANR	2596804	Identifier	esp		2595771	0					
ANR	2596805	Argument	sp_mask		2595771	2					
ANR	2596806	Identifier	sp_mask		2595771	0					
ANR	2596807	Argument	env -> segs [ R_SS ] . selector		2595771	3					
ANR	2596808	MemberAccess	env -> segs [ R_SS ] . selector		2595771	0					
ANR	2596809	ArrayIndexing	env -> segs [ R_SS ]		2595771	0					
ANR	2596810	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596811	Identifier	env		2595771	0					
ANR	2596812	Identifier	segs		2595771	1					
ANR	2596813	Identifier	R_SS		2595771	1					
ANR	2596814	Identifier	selector		2595771	1					
ANR	2596815	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , ESP )"	311:12:5590:5619	2595771	1	True				
ANR	2596816	CallExpression	"PUSHW ( ssp , esp , sp_mask , ESP )"		2595771	0					
ANR	2596817	Callee	PUSHW		2595771	0					
ANR	2596818	Identifier	PUSHW		2595771	0					
ANR	2596819	ArgumentList	ssp		2595771	1					
ANR	2596820	Argument	ssp		2595771	0					
ANR	2596821	Identifier	ssp		2595771	0					
ANR	2596822	Argument	esp		2595771	1					
ANR	2596823	Identifier	esp		2595771	0					
ANR	2596824	Argument	sp_mask		2595771	2					
ANR	2596825	Identifier	sp_mask		2595771	0					
ANR	2596826	Argument	ESP		2595771	3					
ANR	2596827	Identifier	ESP		2595771	0					
ANR	2596828	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , compute_eflags ( ) )"	315:8:5641:5683	2595771	1	True				
ANR	2596829	CallExpression	"PUSHW ( ssp , esp , sp_mask , compute_eflags ( ) )"		2595771	0					
ANR	2596830	Callee	PUSHW		2595771	0					
ANR	2596831	Identifier	PUSHW		2595771	0					
ANR	2596832	ArgumentList	ssp		2595771	1					
ANR	2596833	Argument	ssp		2595771	0					
ANR	2596834	Identifier	ssp		2595771	0					
ANR	2596835	Argument	esp		2595771	1					
ANR	2596836	Identifier	esp		2595771	0					
ANR	2596837	Argument	sp_mask		2595771	2					
ANR	2596838	Identifier	sp_mask		2595771	0					
ANR	2596839	Argument	compute_eflags ( )		2595771	3					
ANR	2596840	CallExpression	compute_eflags ( )		2595771	0					
ANR	2596841	Callee	compute_eflags		2595771	0					
ANR	2596842	Identifier	compute_eflags		2595771	0					
ANR	2596843	ArgumentList			2595771	1					
ANR	2596844	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , env -> segs [ R_CS ] . selector )"	317:8:5694:5744	2595771	2	True				
ANR	2596845	CallExpression	"PUSHW ( ssp , esp , sp_mask , env -> segs [ R_CS ] . selector )"		2595771	0					
ANR	2596846	Callee	PUSHW		2595771	0					
ANR	2596847	Identifier	PUSHW		2595771	0					
ANR	2596848	ArgumentList	ssp		2595771	1					
ANR	2596849	Argument	ssp		2595771	0					
ANR	2596850	Identifier	ssp		2595771	0					
ANR	2596851	Argument	esp		2595771	1					
ANR	2596852	Identifier	esp		2595771	0					
ANR	2596853	Argument	sp_mask		2595771	2					
ANR	2596854	Identifier	sp_mask		2595771	0					
ANR	2596855	Argument	env -> segs [ R_CS ] . selector		2595771	3					
ANR	2596856	MemberAccess	env -> segs [ R_CS ] . selector		2595771	0					
ANR	2596857	ArrayIndexing	env -> segs [ R_CS ]		2595771	0					
ANR	2596858	PtrMemberAccess	env -> segs		2595771	0					
ANR	2596859	Identifier	env		2595771	0					
ANR	2596860	Identifier	segs		2595771	1					
ANR	2596861	Identifier	R_CS		2595771	1					
ANR	2596862	Identifier	selector		2595771	1					
ANR	2596863	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , old_eip )"	319:8:5755:5788	2595771	3	True				
ANR	2596864	CallExpression	"PUSHW ( ssp , esp , sp_mask , old_eip )"		2595771	0					
ANR	2596865	Callee	PUSHW		2595771	0					
ANR	2596866	Identifier	PUSHW		2595771	0					
ANR	2596867	ArgumentList	ssp		2595771	1					
ANR	2596868	Argument	ssp		2595771	0					
ANR	2596869	Identifier	ssp		2595771	0					
ANR	2596870	Argument	esp		2595771	1					
ANR	2596871	Identifier	esp		2595771	0					
ANR	2596872	Argument	sp_mask		2595771	2					
ANR	2596873	Identifier	sp_mask		2595771	0					
ANR	2596874	Argument	old_eip		2595771	3					
ANR	2596875	Identifier	old_eip		2595771	0					
ANR	2596876	IfStatement	if ( has_error_code )		2595771	4					
ANR	2596877	Condition	has_error_code	321:12:5803:5816	2595771	0	True				
ANR	2596878	Identifier	has_error_code		2595771	0					
ANR	2596879	CompoundStatement		317:28:5673:5673	2595771	1					
ANR	2596880	ExpressionStatement	"PUSHW ( ssp , esp , sp_mask , error_code )"	323:12:5834:5870	2595771	0	True				
ANR	2596881	CallExpression	"PUSHW ( ssp , esp , sp_mask , error_code )"		2595771	0					
ANR	2596882	Callee	PUSHW		2595771	0					
ANR	2596883	Identifier	PUSHW		2595771	0					
ANR	2596884	ArgumentList	ssp		2595771	1					
ANR	2596885	Argument	ssp		2595771	0					
ANR	2596886	Identifier	ssp		2595771	0					
ANR	2596887	Argument	esp		2595771	1					
ANR	2596888	Identifier	esp		2595771	0					
ANR	2596889	Argument	sp_mask		2595771	2					
ANR	2596890	Identifier	sp_mask		2595771	0					
ANR	2596891	Argument	error_code		2595771	3					
ANR	2596892	Identifier	error_code		2595771	0					
ANR	2596893	IfStatement	if ( new_stack )		2595771	34					
ANR	2596894	Condition	new_stack	331:8:5905:5913	2595771	0	True				
ANR	2596895	Identifier	new_stack		2595771	0					
ANR	2596896	CompoundStatement		327:19:5770:5770	2595771	1					
ANR	2596897	ExpressionStatement	ss = ( ss & ~3 ) | dpl	333:8:5927:5947	2595771	0	True				
ANR	2596898	AssignmentExpression	ss = ( ss & ~3 ) | dpl		2595771	0		=			
ANR	2596899	Identifier	ss		2595771	0					
ANR	2596900	InclusiveOrExpression	( ss & ~3 ) | dpl		2595771	1		|			
ANR	2596901	BitAndExpression	ss & ~3		2595771	0		&			
ANR	2596902	Identifier	ss		2595771	0					
ANR	2596903	Identifier	~3		2595771	1					
ANR	2596904	Identifier	dpl		2595771	1					
ANR	2596905	ExpressionStatement	"cpu_x86_load_seg_cache ( env , R_SS , ss , ssp , get_seg_limit ( ss_e1 , ss_e2 ) , ss_e2 )"	335:8:5958:6069	2595771	1	True				
ANR	2596906	CallExpression	"cpu_x86_load_seg_cache ( env , R_SS , ss , ssp , get_seg_limit ( ss_e1 , ss_e2 ) , ss_e2 )"		2595771	0					
ANR	2596907	Callee	cpu_x86_load_seg_cache		2595771	0					
ANR	2596908	Identifier	cpu_x86_load_seg_cache		2595771	0					
ANR	2596909	ArgumentList	env		2595771	1					
ANR	2596910	Argument	env		2595771	0					
ANR	2596911	Identifier	env		2595771	0					
ANR	2596912	Argument	R_SS		2595771	1					
ANR	2596913	Identifier	R_SS		2595771	0					
ANR	2596914	Argument	ss		2595771	2					
ANR	2596915	Identifier	ss		2595771	0					
ANR	2596916	Argument	ssp		2595771	3					
ANR	2596917	Identifier	ssp		2595771	0					
ANR	2596918	Argument	"get_seg_limit ( ss_e1 , ss_e2 )"		2595771	4					
ANR	2596919	CallExpression	"get_seg_limit ( ss_e1 , ss_e2 )"		2595771	0					
ANR	2596920	Callee	get_seg_limit		2595771	0					
ANR	2596921	Identifier	get_seg_limit		2595771	0					
ANR	2596922	ArgumentList	ss_e1		2595771	1					
ANR	2596923	Argument	ss_e1		2595771	0					
ANR	2596924	Identifier	ss_e1		2595771	0					
ANR	2596925	Argument	ss_e2		2595771	1					
ANR	2596926	Identifier	ss_e2		2595771	0					
ANR	2596927	Argument	ss_e2		2595771	5					
ANR	2596928	Identifier	ss_e2		2595771	0					
ANR	2596929	ExpressionStatement	ESP = ( ESP & ~sp_mask ) | ( esp & sp_mask )	341:4:6083:6123	2595771	35	True				
ANR	2596930	AssignmentExpression	ESP = ( ESP & ~sp_mask ) | ( esp & sp_mask )		2595771	0		=			
ANR	2596931	Identifier	ESP		2595771	0					
ANR	2596932	InclusiveOrExpression	( ESP & ~sp_mask ) | ( esp & sp_mask )		2595771	1		|			
ANR	2596933	BitAndExpression	ESP & ~sp_mask		2595771	0		&			
ANR	2596934	Identifier	ESP		2595771	0					
ANR	2596935	Identifier	~sp_mask		2595771	1					
ANR	2596936	BitAndExpression	esp & sp_mask		2595771	1		&			
ANR	2596937	Identifier	esp		2595771	0					
ANR	2596938	Identifier	sp_mask		2595771	1					
ANR	2596939	ExpressionStatement	selector = ( selector & ~3 ) | dpl	345:4:6132:6164	2595771	36	True				
ANR	2596940	AssignmentExpression	selector = ( selector & ~3 ) | dpl		2595771	0		=			
ANR	2596941	Identifier	selector		2595771	0					
ANR	2596942	InclusiveOrExpression	( selector & ~3 ) | dpl		2595771	1		|			
ANR	2596943	BitAndExpression	selector & ~3		2595771	0		&			
ANR	2596944	Identifier	selector		2595771	0					
ANR	2596945	Identifier	~3		2595771	1					
ANR	2596946	Identifier	dpl		2595771	1					
ANR	2596947	ExpressionStatement	"cpu_x86_load_seg_cache ( env , R_CS , selector , get_seg_base ( e1 , e2 ) , get_seg_limit ( e1 , e2 ) , e2 )"	347:4:6171:6324	2595771	37	True				
ANR	2596948	CallExpression	"cpu_x86_load_seg_cache ( env , R_CS , selector , get_seg_base ( e1 , e2 ) , get_seg_limit ( e1 , e2 ) , e2 )"		2595771	0					
ANR	2596949	Callee	cpu_x86_load_seg_cache		2595771	0					
ANR	2596950	Identifier	cpu_x86_load_seg_cache		2595771	0					
ANR	2596951	ArgumentList	env		2595771	1					
ANR	2596952	Argument	env		2595771	0					
ANR	2596953	Identifier	env		2595771	0					
ANR	2596954	Argument	R_CS		2595771	1					
ANR	2596955	Identifier	R_CS		2595771	0					
ANR	2596956	Argument	selector		2595771	2					
ANR	2596957	Identifier	selector		2595771	0					
ANR	2596958	Argument	"get_seg_base ( e1 , e2 )"		2595771	3					
ANR	2596959	CallExpression	"get_seg_base ( e1 , e2 )"		2595771	0					
ANR	2596960	Callee	get_seg_base		2595771	0					
ANR	2596961	Identifier	get_seg_base		2595771	0					
ANR	2596962	ArgumentList	e1		2595771	1					
ANR	2596963	Argument	e1		2595771	0					
ANR	2596964	Identifier	e1		2595771	0					
ANR	2596965	Argument	e2		2595771	1					
ANR	2596966	Identifier	e2		2595771	0					
ANR	2596967	Argument	"get_seg_limit ( e1 , e2 )"		2595771	4					
ANR	2596968	CallExpression	"get_seg_limit ( e1 , e2 )"		2595771	0					
ANR	2596969	Callee	get_seg_limit		2595771	0					
ANR	2596970	Identifier	get_seg_limit		2595771	0					
ANR	2596971	ArgumentList	e1		2595771	1					
ANR	2596972	Argument	e1		2595771	0					
ANR	2596973	Identifier	e1		2595771	0					
ANR	2596974	Argument	e2		2595771	1					
ANR	2596975	Identifier	e2		2595771	0					
ANR	2596976	Argument	e2		2595771	5					
ANR	2596977	Identifier	e2		2595771	0					
ANR	2596978	ExpressionStatement	"cpu_x86_set_cpl ( env , dpl )"	355:4:6331:6356	2595771	38	True				
ANR	2596979	CallExpression	"cpu_x86_set_cpl ( env , dpl )"		2595771	0					
ANR	2596980	Callee	cpu_x86_set_cpl		2595771	0					
ANR	2596981	Identifier	cpu_x86_set_cpl		2595771	0					
ANR	2596982	ArgumentList	env		2595771	1					
ANR	2596983	Argument	env		2595771	0					
ANR	2596984	Identifier	env		2595771	0					
ANR	2596985	Argument	dpl		2595771	1					
ANR	2596986	Identifier	dpl		2595771	0					
ANR	2596987	ExpressionStatement	env -> eip = offset	357:4:6363:6380	2595771	39	True				
ANR	2596988	AssignmentExpression	env -> eip = offset		2595771	0		=			
ANR	2596989	PtrMemberAccess	env -> eip		2595771	0					
ANR	2596990	Identifier	env		2595771	0					
ANR	2596991	Identifier	eip		2595771	1					
ANR	2596992	Identifier	offset		2595771	1					
ANR	2596993	IfStatement	if ( ( type & 1 ) == 0 )		2595771	40					
ANR	2596994	Condition	( type & 1 ) == 0	363:8:6433:6447	2595771	0	True				
ANR	2596995	EqualityExpression	( type & 1 ) == 0		2595771	0		==			
ANR	2596996	BitAndExpression	type & 1		2595771	0		&			
ANR	2596997	Identifier	type		2595771	0					
ANR	2596998	PrimaryExpression	1		2595771	1					
ANR	2596999	PrimaryExpression	0		2595771	1					
ANR	2597000	CompoundStatement		359:25:6304:6304	2595771	1					
ANR	2597001	ExpressionStatement	env -> eflags &= ~IF_MASK	365:8:6461:6484	2595771	0	True				
ANR	2597002	AssignmentExpression	env -> eflags &= ~IF_MASK		2595771	0		&=			
ANR	2597003	PtrMemberAccess	env -> eflags		2595771	0					
ANR	2597004	Identifier	env		2595771	0					
ANR	2597005	Identifier	eflags		2595771	1					
ANR	2597006	Identifier	~IF_MASK		2595771	1					
ANR	2597007	ExpressionStatement	env -> eflags &= ~ ( TF_MASK | VM_MASK | RF_MASK | NT_MASK )	369:4:6498:6553	2595771	41	True				
ANR	2597008	AssignmentExpression	env -> eflags &= ~ ( TF_MASK | VM_MASK | RF_MASK | NT_MASK )		2595771	0		&=			
ANR	2597009	PtrMemberAccess	env -> eflags		2595771	0					
ANR	2597010	Identifier	env		2595771	0					
ANR	2597011	Identifier	eflags		2595771	1					
ANR	2597012	UnaryOperationExpression	~ ( TF_MASK | VM_MASK | RF_MASK | NT_MASK )		2595771	1					
ANR	2597013	UnaryOperator	~		2595771	0					
ANR	2597014	InclusiveOrExpression	TF_MASK | VM_MASK | RF_MASK | NT_MASK		2595771	1		|			
ANR	2597015	Identifier	TF_MASK		2595771	0					
ANR	2597016	InclusiveOrExpression	VM_MASK | RF_MASK | NT_MASK		2595771	1		|			
ANR	2597017	Identifier	VM_MASK		2595771	0					
ANR	2597018	InclusiveOrExpression	RF_MASK | NT_MASK		2595771	1		|			
ANR	2597019	Identifier	RF_MASK		2595771	0					
ANR	2597020	Identifier	NT_MASK		2595771	1					
ANR	2597021	ReturnType	static void		2595771	1					
ANR	2597022	Identifier	do_interrupt_protected		2595771	2					
ANR	2597023	ParameterList	"int intno , int is_int , int error_code , unsigned int next_eip , int is_hw"		2595771	3					
ANR	2597024	Parameter	int intno	1:35:35:43	2595771	0	True				
ANR	2597025	ParameterType	int		2595771	0					
ANR	2597026	Identifier	intno		2595771	1					
ANR	2597027	Parameter	int is_int	1:46:46:55	2595771	1	True				
ANR	2597028	ParameterType	int		2595771	0					
ANR	2597029	Identifier	is_int		2595771	1					
ANR	2597030	Parameter	int error_code	1:58:58:71	2595771	2	True				
ANR	2597031	ParameterType	int		2595771	0					
ANR	2597032	Identifier	error_code		2595771	1					
ANR	2597033	Parameter	unsigned int next_eip	3:35:110:130	2595771	3	True				
ANR	2597034	ParameterType	unsigned int		2595771	0					
ANR	2597035	Identifier	next_eip		2595771	1					
ANR	2597036	Parameter	int is_hw	3:58:133:141	2595771	4	True				
ANR	2597037	ParameterType	int		2595771	0					
ANR	2597038	Identifier	is_hw		2595771	1					
ANR	2597039	CFGEntryNode	ENTRY		2595771		True				
ANR	2597040	CFGExitNode	EXIT		2595771		True				
ANR	2597041	Symbol	compute_eflags		2595771						
ANR	2597042	Symbol	load_segment		2595771						
ANR	2597043	Symbol	shift		2595771						
ANR	2597044	Symbol	intno		2595771						
ANR	2597045	Symbol	type		2595771						
ANR	2597046	Symbol	ssp		2595771						
ANR	2597047	Symbol	DESC_P_MASK		2595771						
ANR	2597048	Symbol	DESC_C_MASK		2595771						
ANR	2597049	Symbol	NT_MASK		2595771						
ANR	2597050	Symbol	ss_e1		2595771						
ANR	2597051	Symbol	SWITCH_TSS_CALL		2595771						
ANR	2597052	Symbol	ss_e2		2595771						
ANR	2597053	Symbol	* R_CS		2595771						
ANR	2597054	Symbol	push_size		2595771						
ANR	2597055	Symbol	env -> segs		2595771						
ANR	2597056	Symbol	get_sp_mask		2595771						
ANR	2597057	Symbol	DESC_B_MASK		2595771						
ANR	2597058	Symbol	* env -> regs		2595771						
ANR	2597059	Symbol	DESC_B_SHIFT		2595771						
ANR	2597060	Symbol	env -> segs [ R_CS ] . selector		2595771						
ANR	2597061	Symbol	EXCP0D_GPF		2595771						
ANR	2597062	Symbol	* R_SS		2595771						
ANR	2597063	Symbol	env -> segs [ R_SS ] . base		2595771						
ANR	2597064	Symbol	EXCP0A_TSS		2595771						
ANR	2597065	Symbol	env -> eflags		2595771						
ANR	2597066	Symbol	* * env		2595771						
ANR	2597067	Symbol	* R_DS		2595771						
ANR	2597068	Symbol	~mask		2595771						
ANR	2597069	Symbol	R_SS		2595771						
ANR	2597070	Symbol	* dt		2595771						
ANR	2597071	Symbol	R_ESP		2595771						
ANR	2597072	Symbol	R_CS		2595771						
ANR	2597073	Symbol	dt -> limit		2595771						
ANR	2597074	Symbol	dt -> base		2595771						
ANR	2597075	Symbol	has_error_code		2595771						
ANR	2597076	Symbol	ss		2595771						
ANR	2597077	Symbol	& ss_e2		2595771						
ANR	2597078	Symbol	dpl		2595771						
ANR	2597079	Symbol	& ss_e1		2595771						
ANR	2597080	Symbol	ESP		2595771						
ANR	2597081	Symbol	* R_ES		2595771						
ANR	2597082	Symbol	ldl_kernel		2595771						
ANR	2597083	Symbol	env -> segs [ R_SS ] . selector		2595771						
ANR	2597084	Symbol	e1		2595771						
ANR	2597085	Symbol	e2		2595771						
ANR	2597086	Symbol	env -> segs [ R_CS ] . flags		2595771						
ANR	2597087	Symbol	* R_ESP		2595771						
ANR	2597088	Symbol	VM_MASK		2595771						
ANR	2597089	Symbol	HF_CPL_MASK		2595771						
ANR	2597090	Symbol	~3		2595771						
ANR	2597091	Symbol	sp_mask		2595771						
ANR	2597092	Symbol	esp		2595771						
ANR	2597093	Symbol	env -> segs [ R_SS ] . flags		2595771						
ANR	2597094	Symbol	* R_FS		2595771						
ANR	2597095	Symbol	RF_MASK		2595771						
ANR	2597096	Symbol	& ss		2595771						
ANR	2597097	Symbol	env -> regs		2595771						
ANR	2597098	Symbol	DESC_TYPE_SHIFT		2595771						
ANR	2597099	Symbol	get_seg_limit		2595771						
ANR	2597100	Symbol	dt		2595771						
ANR	2597101	Symbol	env -> segs [ R_DS ] . selector		2595771						
ANR	2597102	Symbol	R_ES		2595771						
ANR	2597103	Symbol	~sp_mask		2595771						
ANR	2597104	Symbol	cpl		2595771						
ANR	2597105	Symbol	NULL		2595771						
ANR	2597106	Symbol	offset		2595771						
ANR	2597107	Symbol	* env		2595771						
ANR	2597108	Symbol	DESC_W_MASK		2595771						
ANR	2597109	Symbol	& esp		2595771						
ANR	2597110	Symbol	& e2		2595771						
ANR	2597111	Symbol	& e1		2595771						
ANR	2597112	Symbol	is_hw		2595771						
ANR	2597113	Symbol	error_code		2595771						
ANR	2597114	Symbol	* R_GS		2595771						
ANR	2597115	Symbol	R_DS		2595771						
ANR	2597116	Symbol	& env -> idt		2595771						
ANR	2597117	Symbol	env -> segs [ R_GS ] . selector		2595771						
ANR	2597118	Symbol	ss_dpl		2595771						
ANR	2597119	Symbol	new_stack		2595771						
ANR	2597120	Symbol	TF_MASK		2595771						
ANR	2597121	Symbol	env -> hflags		2595771						
ANR	2597122	Symbol	env -> eip		2595771						
ANR	2597123	Symbol	get_seg_base		2595771						
ANR	2597124	Symbol	* env -> segs		2595771						
ANR	2597125	Symbol	DESC_DPL_SHIFT		2595771						
ANR	2597126	Symbol	selector		2595771						
ANR	2597127	Symbol	DESC_S_MASK		2595771						
ANR	2597128	Symbol	~IF_MASK		2595771						
ANR	2597129	Symbol	env -> segs [ R_FS ] . selector		2595771						
ANR	2597130	Symbol	mask		2595771						
ANR	2597131	Symbol	R_GS		2595771						
ANR	2597132	Symbol	next_eip		2595771						
ANR	2597133	Symbol	env		2595771						
ANR	2597134	Symbol	ptr		2595771						
ANR	2597135	Symbol	DESC_CS_MASK		2595771						
ANR	2597136	Symbol	is_int		2595771						
ANR	2597137	Symbol	old_eip		2595771						
ANR	2597138	Symbol	env -> segs [ R_ES ] . selector		2595771						
ANR	2597139	Symbol	R_FS		2595771						
ANR	2597140	Symbol	EXCP0B_NOSEG		2595771						
