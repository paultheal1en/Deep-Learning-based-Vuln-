command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7271171	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_channel_params_1.c								
ANR	7271172	Function	read_channel_params	1:0:0:1959							
ANR	7271173	FunctionDef	"read_channel_params (MLPDecodeContext * m , unsigned int substr , GetBitContext * gbp , unsigned int ch)"		7271172	0					
ANR	7271174	CompoundStatement		5:0:143:1959	7271172	0					
ANR	7271175	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	7:4:150:186	7271172	0	True				
ANR	7271176	IdentifierDecl	* s = & m -> substream [ substr ]		7271172	0					
ANR	7271177	IdentifierDeclType	SubStream *		7271172	0					
ANR	7271178	Identifier	s		7271172	1					
ANR	7271179	AssignmentExpression	* s = & m -> substream [ substr ]		7271172	2		=			
ANR	7271180	Identifier	s		7271172	0					
ANR	7271181	UnaryOperationExpression	& m -> substream [ substr ]		7271172	1					
ANR	7271182	UnaryOperator	&		7271172	0					
ANR	7271183	ArrayIndexing	m -> substream [ substr ]		7271172	1					
ANR	7271184	PtrMemberAccess	m -> substream		7271172	0					
ANR	7271185	Identifier	m		7271172	0					
ANR	7271186	Identifier	substream		7271172	1					
ANR	7271187	Identifier	substr		7271172	1					
ANR	7271188	IdentifierDeclStatement	ChannelParams * cp = & s -> channel_params [ ch ] ;	9:4:193:235	7271172	1	True				
ANR	7271189	IdentifierDecl	* cp = & s -> channel_params [ ch ]		7271172	0					
ANR	7271190	IdentifierDeclType	ChannelParams *		7271172	0					
ANR	7271191	Identifier	cp		7271172	1					
ANR	7271192	AssignmentExpression	* cp = & s -> channel_params [ ch ]		7271172	2		=			
ANR	7271193	Identifier	cp		7271172	0					
ANR	7271194	UnaryOperationExpression	& s -> channel_params [ ch ]		7271172	1					
ANR	7271195	UnaryOperator	&		7271172	0					
ANR	7271196	ArrayIndexing	s -> channel_params [ ch ]		7271172	1					
ANR	7271197	PtrMemberAccess	s -> channel_params		7271172	0					
ANR	7271198	Identifier	s		7271172	0					
ANR	7271199	Identifier	channel_params		7271172	1					
ANR	7271200	Identifier	ch		7271172	1					
ANR	7271201	IdentifierDeclStatement	FilterParams * fir = & cp -> filter_params [ FIR ] ;	11:4:242:285	7271172	2	True				
ANR	7271202	IdentifierDecl	* fir = & cp -> filter_params [ FIR ]		7271172	0					
ANR	7271203	IdentifierDeclType	FilterParams *		7271172	0					
ANR	7271204	Identifier	fir		7271172	1					
ANR	7271205	AssignmentExpression	* fir = & cp -> filter_params [ FIR ]		7271172	2		=			
ANR	7271206	Identifier	fir		7271172	0					
ANR	7271207	UnaryOperationExpression	& cp -> filter_params [ FIR ]		7271172	1					
ANR	7271208	UnaryOperator	&		7271172	0					
ANR	7271209	ArrayIndexing	cp -> filter_params [ FIR ]		7271172	1					
ANR	7271210	PtrMemberAccess	cp -> filter_params		7271172	0					
ANR	7271211	Identifier	cp		7271172	0					
ANR	7271212	Identifier	filter_params		7271172	1					
ANR	7271213	Identifier	FIR		7271172	1					
ANR	7271214	IdentifierDeclStatement	FilterParams * iir = & cp -> filter_params [ IIR ] ;	13:4:292:335	7271172	3	True				
ANR	7271215	IdentifierDecl	* iir = & cp -> filter_params [ IIR ]		7271172	0					
ANR	7271216	IdentifierDeclType	FilterParams *		7271172	0					
ANR	7271217	Identifier	iir		7271172	1					
ANR	7271218	AssignmentExpression	* iir = & cp -> filter_params [ IIR ]		7271172	2		=			
ANR	7271219	Identifier	iir		7271172	0					
ANR	7271220	UnaryOperationExpression	& cp -> filter_params [ IIR ]		7271172	1					
ANR	7271221	UnaryOperator	&		7271172	0					
ANR	7271222	ArrayIndexing	cp -> filter_params [ IIR ]		7271172	1					
ANR	7271223	PtrMemberAccess	cp -> filter_params		7271172	0					
ANR	7271224	Identifier	cp		7271172	0					
ANR	7271225	Identifier	filter_params		7271172	1					
ANR	7271226	Identifier	IIR		7271172	1					
ANR	7271227	IdentifierDeclStatement	int ret ;	15:4:342:349	7271172	4	True				
ANR	7271228	IdentifierDecl	ret		7271172	0					
ANR	7271229	IdentifierDeclType	int		7271172	0					
ANR	7271230	Identifier	ret		7271172	1					
ANR	7271231	IfStatement	if ( s -> param_presence_flags & PARAM_FIR )		7271172	5					
ANR	7271232	Condition	s -> param_presence_flags & PARAM_FIR	19:8:362:396	7271172	0	True				
ANR	7271233	BitAndExpression	s -> param_presence_flags & PARAM_FIR		7271172	0		&			
ANR	7271234	PtrMemberAccess	s -> param_presence_flags		7271172	0					
ANR	7271235	Identifier	s		7271172	0					
ANR	7271236	Identifier	param_presence_flags		7271172	1					
ANR	7271237	Identifier	PARAM_FIR		7271172	1					
ANR	7271238	IfStatement	if ( get_bits1 ( gbp ) )		7271172	1					
ANR	7271239	Condition	get_bits1 ( gbp )	21:12:412:425	7271172	0	True				
ANR	7271240	CallExpression	get_bits1 ( gbp )		7271172	0					
ANR	7271241	Callee	get_bits1		7271172	0					
ANR	7271242	Identifier	get_bits1		7271172	0					
ANR	7271243	ArgumentList	gbp		7271172	1					
ANR	7271244	Argument	gbp		7271172	0					
ANR	7271245	Identifier	gbp		7271172	0					
ANR	7271246	IfStatement	"if ( ( ret = read_filter_params ( m , gbp , substr , ch , FIR ) ) < 0 )"		7271172	1					
ANR	7271247	Condition	"( ret = read_filter_params ( m , gbp , substr , ch , FIR ) ) < 0"	23:16:445:499	7271172	0	True				
ANR	7271248	RelationalExpression	"( ret = read_filter_params ( m , gbp , substr , ch , FIR ) ) < 0"		7271172	0		<			
ANR	7271249	AssignmentExpression	"ret = read_filter_params ( m , gbp , substr , ch , FIR )"		7271172	0		=			
ANR	7271250	Identifier	ret		7271172	0					
ANR	7271251	CallExpression	"read_filter_params ( m , gbp , substr , ch , FIR )"		7271172	1					
ANR	7271252	Callee	read_filter_params		7271172	0					
ANR	7271253	Identifier	read_filter_params		7271172	0					
ANR	7271254	ArgumentList	m		7271172	1					
ANR	7271255	Argument	m		7271172	0					
ANR	7271256	Identifier	m		7271172	0					
ANR	7271257	Argument	gbp		7271172	1					
ANR	7271258	Identifier	gbp		7271172	0					
ANR	7271259	Argument	substr		7271172	2					
ANR	7271260	Identifier	substr		7271172	0					
ANR	7271261	Argument	ch		7271172	3					
ANR	7271262	Identifier	ch		7271172	0					
ANR	7271263	Argument	FIR		7271172	4					
ANR	7271264	Identifier	FIR		7271172	0					
ANR	7271265	PrimaryExpression	0		7271172	1					
ANR	7271266	ReturnStatement	return ret ;	25:16:519:529	7271172	1	True				
ANR	7271267	Identifier	ret		7271172	0					
ANR	7271268	IfStatement	if ( s -> param_presence_flags & PARAM_IIR )		7271172	6					
ANR	7271269	Condition	s -> param_presence_flags & PARAM_IIR	29:8:542:576	7271172	0	True				
ANR	7271270	BitAndExpression	s -> param_presence_flags & PARAM_IIR		7271172	0		&			
ANR	7271271	PtrMemberAccess	s -> param_presence_flags		7271172	0					
ANR	7271272	Identifier	s		7271172	0					
ANR	7271273	Identifier	param_presence_flags		7271172	1					
ANR	7271274	Identifier	PARAM_IIR		7271172	1					
ANR	7271275	IfStatement	if ( get_bits1 ( gbp ) )		7271172	1					
ANR	7271276	Condition	get_bits1 ( gbp )	31:12:592:605	7271172	0	True				
ANR	7271277	CallExpression	get_bits1 ( gbp )		7271172	0					
ANR	7271278	Callee	get_bits1		7271172	0					
ANR	7271279	Identifier	get_bits1		7271172	0					
ANR	7271280	ArgumentList	gbp		7271172	1					
ANR	7271281	Argument	gbp		7271172	0					
ANR	7271282	Identifier	gbp		7271172	0					
ANR	7271283	IfStatement	"if ( ( ret = read_filter_params ( m , gbp , substr , ch , IIR ) ) < 0 )"		7271172	1					
ANR	7271284	Condition	"( ret = read_filter_params ( m , gbp , substr , ch , IIR ) ) < 0"	33:16:625:679	7271172	0	True				
ANR	7271285	RelationalExpression	"( ret = read_filter_params ( m , gbp , substr , ch , IIR ) ) < 0"		7271172	0		<			
ANR	7271286	AssignmentExpression	"ret = read_filter_params ( m , gbp , substr , ch , IIR )"		7271172	0		=			
ANR	7271287	Identifier	ret		7271172	0					
ANR	7271288	CallExpression	"read_filter_params ( m , gbp , substr , ch , IIR )"		7271172	1					
ANR	7271289	Callee	read_filter_params		7271172	0					
ANR	7271290	Identifier	read_filter_params		7271172	0					
ANR	7271291	ArgumentList	m		7271172	1					
ANR	7271292	Argument	m		7271172	0					
ANR	7271293	Identifier	m		7271172	0					
ANR	7271294	Argument	gbp		7271172	1					
ANR	7271295	Identifier	gbp		7271172	0					
ANR	7271296	Argument	substr		7271172	2					
ANR	7271297	Identifier	substr		7271172	0					
ANR	7271298	Argument	ch		7271172	3					
ANR	7271299	Identifier	ch		7271172	0					
ANR	7271300	Argument	IIR		7271172	4					
ANR	7271301	Identifier	IIR		7271172	0					
ANR	7271302	PrimaryExpression	0		7271172	1					
ANR	7271303	ReturnStatement	return ret ;	35:16:699:709	7271172	1	True				
ANR	7271304	Identifier	ret		7271172	0					
ANR	7271305	IfStatement	if ( fir -> order + iir -> order > 8 )		7271172	7					
ANR	7271306	Condition	fir -> order + iir -> order > 8	39:8:722:748	7271172	0	True				
ANR	7271307	RelationalExpression	fir -> order + iir -> order > 8		7271172	0		>			
ANR	7271308	AdditiveExpression	fir -> order + iir -> order		7271172	0		+			
ANR	7271309	PtrMemberAccess	fir -> order		7271172	0					
ANR	7271310	Identifier	fir		7271172	0					
ANR	7271311	Identifier	order		7271172	1					
ANR	7271312	PtrMemberAccess	iir -> order		7271172	1					
ANR	7271313	Identifier	iir		7271172	0					
ANR	7271314	Identifier	order		7271172	1					
ANR	7271315	PrimaryExpression	8		7271172	1					
ANR	7271316	CompoundStatement		35:37:607:607	7271172	1					
ANR	7271317	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Total filter orders too high.\\n"" )"	41:8:762:827	7271172	0	True				
ANR	7271318	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Total filter orders too high.\\n"" )"		7271172	0					
ANR	7271319	Callee	av_log		7271172	0					
ANR	7271320	Identifier	av_log		7271172	0					
ANR	7271321	ArgumentList	m -> avctx		7271172	1					
ANR	7271322	Argument	m -> avctx		7271172	0					
ANR	7271323	PtrMemberAccess	m -> avctx		7271172	0					
ANR	7271324	Identifier	m		7271172	0					
ANR	7271325	Identifier	avctx		7271172	1					
ANR	7271326	Argument	AV_LOG_ERROR		7271172	1					
ANR	7271327	Identifier	AV_LOG_ERROR		7271172	0					
ANR	7271328	Argument	"""Total filter orders too high.\\n"""		7271172	2					
ANR	7271329	PrimaryExpression	"""Total filter orders too high.\\n"""		7271172	0					
ANR	7271330	ReturnStatement	return AVERROR_INVALIDDATA ;	43:8:838:864	7271172	1	True				
ANR	7271331	Identifier	AVERROR_INVALIDDATA		7271172	0					
ANR	7271332	IfStatement	if ( fir -> order && iir -> order && fir -> shift != iir -> shift )		7271172	8					
ANR	7271333	Condition	fir -> order && iir -> order && fir -> shift != iir -> shift	49:8:884:944	7271172	0	True				
ANR	7271334	AndExpression	fir -> order && iir -> order && fir -> shift != iir -> shift		7271172	0		&&			
ANR	7271335	PtrMemberAccess	fir -> order		7271172	0					
ANR	7271336	Identifier	fir		7271172	0					
ANR	7271337	Identifier	order		7271172	1					
ANR	7271338	AndExpression	iir -> order && fir -> shift != iir -> shift		7271172	1		&&			
ANR	7271339	PtrMemberAccess	iir -> order		7271172	0					
ANR	7271340	Identifier	iir		7271172	0					
ANR	7271341	Identifier	order		7271172	1					
ANR	7271342	EqualityExpression	fir -> shift != iir -> shift		7271172	1		!=			
ANR	7271343	PtrMemberAccess	fir -> shift		7271172	0					
ANR	7271344	Identifier	fir		7271172	0					
ANR	7271345	Identifier	shift		7271172	1					
ANR	7271346	PtrMemberAccess	iir -> shift		7271172	1					
ANR	7271347	Identifier	iir		7271172	0					
ANR	7271348	Identifier	shift		7271172	1					
ANR	7271349	CompoundStatement		47:34:803:803	7271172	1					
ANR	7271350	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""FIR and IIR filters must use the same precision.\\n"" )"	53:8:958:1059	7271172	0	True				
ANR	7271351	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""FIR and IIR filters must use the same precision.\\n"" )"		7271172	0					
ANR	7271352	Callee	av_log		7271172	0					
ANR	7271353	Identifier	av_log		7271172	0					
ANR	7271354	ArgumentList	m -> avctx		7271172	1					
ANR	7271355	Argument	m -> avctx		7271172	0					
ANR	7271356	PtrMemberAccess	m -> avctx		7271172	0					
ANR	7271357	Identifier	m		7271172	0					
ANR	7271358	Identifier	avctx		7271172	1					
ANR	7271359	Argument	AV_LOG_ERROR		7271172	1					
ANR	7271360	Identifier	AV_LOG_ERROR		7271172	0					
ANR	7271361	Argument	"""FIR and IIR filters must use the same precision.\\n"""		7271172	2					
ANR	7271362	PrimaryExpression	"""FIR and IIR filters must use the same precision.\\n"""		7271172	0					
ANR	7271363	ReturnStatement	return AVERROR_INVALIDDATA ;	57:8:1070:1096	7271172	1	True				
ANR	7271364	Identifier	AVERROR_INVALIDDATA		7271172	0					
ANR	7271365	IfStatement	if ( ! fir -> order && iir -> order )		7271172	9					
ANR	7271366	Condition	! fir -> order && iir -> order	71:8:1429:1453	7271172	0	True				
ANR	7271367	AndExpression	! fir -> order && iir -> order		7271172	0		&&			
ANR	7271368	UnaryOperationExpression	! fir -> order		7271172	0					
ANR	7271369	UnaryOperator	!		7271172	0					
ANR	7271370	PtrMemberAccess	fir -> order		7271172	1					
ANR	7271371	Identifier	fir		7271172	0					
ANR	7271372	Identifier	order		7271172	1					
ANR	7271373	PtrMemberAccess	iir -> order		7271172	1					
ANR	7271374	Identifier	iir		7271172	0					
ANR	7271375	Identifier	order		7271172	1					
ANR	7271376	ExpressionStatement	fir -> shift = iir -> shift	73:8:1465:1488	7271172	1	True				
ANR	7271377	AssignmentExpression	fir -> shift = iir -> shift		7271172	0		=			
ANR	7271378	PtrMemberAccess	fir -> shift		7271172	0					
ANR	7271379	Identifier	fir		7271172	0					
ANR	7271380	Identifier	shift		7271172	1					
ANR	7271381	PtrMemberAccess	iir -> shift		7271172	1					
ANR	7271382	Identifier	iir		7271172	0					
ANR	7271383	Identifier	shift		7271172	1					
ANR	7271384	IfStatement	if ( s -> param_presence_flags & PARAM_HUFFOFFSET )		7271172	10					
ANR	7271385	Condition	s -> param_presence_flags & PARAM_HUFFOFFSET	77:8:1501:1542	7271172	0	True				
ANR	7271386	BitAndExpression	s -> param_presence_flags & PARAM_HUFFOFFSET		7271172	0		&			
ANR	7271387	PtrMemberAccess	s -> param_presence_flags		7271172	0					
ANR	7271388	Identifier	s		7271172	0					
ANR	7271389	Identifier	param_presence_flags		7271172	1					
ANR	7271390	Identifier	PARAM_HUFFOFFSET		7271172	1					
ANR	7271391	IfStatement	if ( get_bits1 ( gbp ) )		7271172	1					
ANR	7271392	Condition	get_bits1 ( gbp )	79:12:1558:1571	7271172	0	True				
ANR	7271393	CallExpression	get_bits1 ( gbp )		7271172	0					
ANR	7271394	Callee	get_bits1		7271172	0					
ANR	7271395	Identifier	get_bits1		7271172	0					
ANR	7271396	ArgumentList	gbp		7271172	1					
ANR	7271397	Argument	gbp		7271172	0					
ANR	7271398	Identifier	gbp		7271172	0					
ANR	7271399	ExpressionStatement	"cp -> huff_offset = get_sbits ( gbp , 15 )"	81:12:1587:1623	7271172	1	True				
ANR	7271400	AssignmentExpression	"cp -> huff_offset = get_sbits ( gbp , 15 )"		7271172	0		=			
ANR	7271401	PtrMemberAccess	cp -> huff_offset		7271172	0					
ANR	7271402	Identifier	cp		7271172	0					
ANR	7271403	Identifier	huff_offset		7271172	1					
ANR	7271404	CallExpression	"get_sbits ( gbp , 15 )"		7271172	1					
ANR	7271405	Callee	get_sbits		7271172	0					
ANR	7271406	Identifier	get_sbits		7271172	0					
ANR	7271407	ArgumentList	gbp		7271172	1					
ANR	7271408	Argument	gbp		7271172	0					
ANR	7271409	Identifier	gbp		7271172	0					
ANR	7271410	Argument	15		7271172	1					
ANR	7271411	PrimaryExpression	15		7271172	0					
ANR	7271412	ExpressionStatement	"cp -> codebook = get_bits ( gbp , 2 )"	85:4:1632:1664	7271172	11	True				
ANR	7271413	AssignmentExpression	"cp -> codebook = get_bits ( gbp , 2 )"		7271172	0		=			
ANR	7271414	PtrMemberAccess	cp -> codebook		7271172	0					
ANR	7271415	Identifier	cp		7271172	0					
ANR	7271416	Identifier	codebook		7271172	1					
ANR	7271417	CallExpression	"get_bits ( gbp , 2 )"		7271172	1					
ANR	7271418	Callee	get_bits		7271172	0					
ANR	7271419	Identifier	get_bits		7271172	0					
ANR	7271420	ArgumentList	gbp		7271172	1					
ANR	7271421	Argument	gbp		7271172	0					
ANR	7271422	Identifier	gbp		7271172	0					
ANR	7271423	Argument	2		7271172	1					
ANR	7271424	PrimaryExpression	2		7271172	0					
ANR	7271425	ExpressionStatement	"cp -> huff_lsbs = get_bits ( gbp , 5 )"	87:4:1671:1703	7271172	12	True				
ANR	7271426	AssignmentExpression	"cp -> huff_lsbs = get_bits ( gbp , 5 )"		7271172	0		=			
ANR	7271427	PtrMemberAccess	cp -> huff_lsbs		7271172	0					
ANR	7271428	Identifier	cp		7271172	0					
ANR	7271429	Identifier	huff_lsbs		7271172	1					
ANR	7271430	CallExpression	"get_bits ( gbp , 5 )"		7271172	1					
ANR	7271431	Callee	get_bits		7271172	0					
ANR	7271432	Identifier	get_bits		7271172	0					
ANR	7271433	ArgumentList	gbp		7271172	1					
ANR	7271434	Argument	gbp		7271172	0					
ANR	7271435	Identifier	gbp		7271172	0					
ANR	7271436	Argument	5		7271172	1					
ANR	7271437	PrimaryExpression	5		7271172	0					
ANR	7271438	IfStatement	if ( cp -> huff_lsbs > 24 )		7271172	13					
ANR	7271439	Condition	cp -> huff_lsbs > 24	91:8:1716:1733	7271172	0	True				
ANR	7271440	RelationalExpression	cp -> huff_lsbs > 24		7271172	0		>			
ANR	7271441	PtrMemberAccess	cp -> huff_lsbs		7271172	0					
ANR	7271442	Identifier	cp		7271172	0					
ANR	7271443	Identifier	huff_lsbs		7271172	1					
ANR	7271444	PrimaryExpression	24		7271172	1					
ANR	7271445	CompoundStatement		87:28:1592:1592	7271172	1					
ANR	7271446	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid huff_lsbs.\\n"" )"	93:8:1747:1801	7271172	0	True				
ANR	7271447	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid huff_lsbs.\\n"" )"		7271172	0					
ANR	7271448	Callee	av_log		7271172	0					
ANR	7271449	Identifier	av_log		7271172	0					
ANR	7271450	ArgumentList	m -> avctx		7271172	1					
ANR	7271451	Argument	m -> avctx		7271172	0					
ANR	7271452	PtrMemberAccess	m -> avctx		7271172	0					
ANR	7271453	Identifier	m		7271172	0					
ANR	7271454	Identifier	avctx		7271172	1					
ANR	7271455	Argument	AV_LOG_ERROR		7271172	1					
ANR	7271456	Identifier	AV_LOG_ERROR		7271172	0					
ANR	7271457	Argument	"""Invalid huff_lsbs.\\n"""		7271172	2					
ANR	7271458	PrimaryExpression	"""Invalid huff_lsbs.\\n"""		7271172	0					
ANR	7271459	ExpressionStatement	cp -> huff_lsbs = 0	95:8:1812:1829	7271172	1	True				
ANR	7271460	AssignmentExpression	cp -> huff_lsbs = 0		7271172	0		=			
ANR	7271461	PtrMemberAccess	cp -> huff_lsbs		7271172	0					
ANR	7271462	Identifier	cp		7271172	0					
ANR	7271463	Identifier	huff_lsbs		7271172	1					
ANR	7271464	PrimaryExpression	0		7271172	1					
ANR	7271465	ReturnStatement	return AVERROR_INVALIDDATA ;	97:8:1840:1866	7271172	2	True				
ANR	7271466	Identifier	AVERROR_INVALIDDATA		7271172	0					
ANR	7271467	ExpressionStatement	"cp -> sign_huff_offset = calculate_sign_huff ( m , substr , ch )"	103:4:1882:1939	7271172	14	True				
ANR	7271468	AssignmentExpression	"cp -> sign_huff_offset = calculate_sign_huff ( m , substr , ch )"		7271172	0		=			
ANR	7271469	PtrMemberAccess	cp -> sign_huff_offset		7271172	0					
ANR	7271470	Identifier	cp		7271172	0					
ANR	7271471	Identifier	sign_huff_offset		7271172	1					
ANR	7271472	CallExpression	"calculate_sign_huff ( m , substr , ch )"		7271172	1					
ANR	7271473	Callee	calculate_sign_huff		7271172	0					
ANR	7271474	Identifier	calculate_sign_huff		7271172	0					
ANR	7271475	ArgumentList	m		7271172	1					
ANR	7271476	Argument	m		7271172	0					
ANR	7271477	Identifier	m		7271172	0					
ANR	7271478	Argument	substr		7271172	1					
ANR	7271479	Identifier	substr		7271172	0					
ANR	7271480	Argument	ch		7271172	2					
ANR	7271481	Identifier	ch		7271172	0					
ANR	7271482	ReturnStatement	return 0 ;	107:4:1948:1956	7271172	15	True				
ANR	7271483	PrimaryExpression	0		7271172	0					
ANR	7271484	ReturnType	static int		7271172	1					
ANR	7271485	Identifier	read_channel_params		7271172	2					
ANR	7271486	ParameterList	"MLPDecodeContext * m , unsigned int substr , GetBitContext * gbp , unsigned int ch"		7271172	3					
ANR	7271487	Parameter	MLPDecodeContext * m	1:31:31:49	7271172	0	True				
ANR	7271488	ParameterType	MLPDecodeContext *		7271172	0					
ANR	7271489	Identifier	m		7271172	1					
ANR	7271490	Parameter	unsigned int substr	1:52:52:70	7271172	1	True				
ANR	7271491	ParameterType	unsigned int		7271172	0					
ANR	7271492	Identifier	substr		7271172	1					
ANR	7271493	Parameter	GetBitContext * gbp	3:31:105:122	7271172	2	True				
ANR	7271494	ParameterType	GetBitContext *		7271172	0					
ANR	7271495	Identifier	gbp		7271172	1					
ANR	7271496	Parameter	unsigned int ch	3:51:125:139	7271172	3	True				
ANR	7271497	ParameterType	unsigned int		7271172	0					
ANR	7271498	Identifier	ch		7271172	1					
ANR	7271499	CFGEntryNode	ENTRY		7271172		True				
ANR	7271500	CFGExitNode	EXIT		7271172		True				
ANR	7271501	Symbol	get_sbits		7271172						
ANR	7271502	Symbol	PARAM_IIR		7271172						
ANR	7271503	Symbol	* iir		7271172						
ANR	7271504	Symbol	iir -> shift		7271172						
ANR	7271505	Symbol	* fir		7271172						
ANR	7271506	Symbol	get_bits		7271172						
ANR	7271507	Symbol	fir -> order		7271172						
ANR	7271508	Symbol	fir -> shift		7271172						
ANR	7271509	Symbol	fir		7271172						
ANR	7271510	Symbol	cp -> huff_offset		7271172						
ANR	7271511	Symbol	cp -> huff_lsbs		7271172						
ANR	7271512	Symbol	iir		7271172						
ANR	7271513	Symbol	cp -> codebook		7271172						
ANR	7271514	Symbol	s -> param_presence_flags		7271172						
ANR	7271515	Symbol	iir -> order		7271172						
ANR	7271516	Symbol	m -> substream		7271172						
ANR	7271517	Symbol	ret		7271172						
ANR	7271518	Symbol	AV_LOG_ERROR		7271172						
ANR	7271519	Symbol	ch		7271172						
ANR	7271520	Symbol	m -> avctx		7271172						
ANR	7271521	Symbol	get_bits1		7271172						
ANR	7271522	Symbol	calculate_sign_huff		7271172						
ANR	7271523	Symbol	cp -> sign_huff_offset		7271172						
ANR	7271524	Symbol	PARAM_HUFFOFFSET		7271172						
ANR	7271525	Symbol	m		7271172						
ANR	7271526	Symbol	substr		7271172						
ANR	7271527	Symbol	cp		7271172						
ANR	7271528	Symbol	FIR		7271172						
ANR	7271529	Symbol	* cp		7271172						
ANR	7271530	Symbol	s		7271172						
ANR	7271531	Symbol	IIR		7271172						
ANR	7271532	Symbol	gbp		7271172						
ANR	7271533	Symbol	* m		7271172						
ANR	7271534	Symbol	cp -> filter_params		7271172						
ANR	7271535	Symbol	AVERROR_INVALIDDATA		7271172						
ANR	7271536	Symbol	s -> channel_params		7271172						
ANR	7271537	Symbol	read_filter_params		7271172						
ANR	7271538	Symbol	* s		7271172						
ANR	7271539	Symbol	PARAM_FIR		7271172						
