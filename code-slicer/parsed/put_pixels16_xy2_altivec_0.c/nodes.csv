command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6774759	File	/home/p4ultr4n/workplace/ReVeal/raw_code/put_pixels16_xy2_altivec_0.c								
ANR	6774760	Function	put_pixels16_xy2_altivec	1:0:0:4483							
ANR	6774761	FunctionDef	"put_pixels16_xy2_altivec (uint8_t * block , const uint8_t * pixels , int line_size , int h)"		6774760	0					
ANR	6774762	CompoundStatement		3:0:94:4483	6774760	0					
ANR	6774763	ExpressionStatement	"POWERPC_TBL_DECLARE ( altivec_put_pixels16_xy2_num , 1 )"	5:0:97:149	6774760	0	True				
ANR	6774764	CallExpression	"POWERPC_TBL_DECLARE ( altivec_put_pixels16_xy2_num , 1 )"		6774760	0					
ANR	6774765	Callee	POWERPC_TBL_DECLARE		6774760	0					
ANR	6774766	Identifier	POWERPC_TBL_DECLARE		6774760	0					
ANR	6774767	ArgumentList	altivec_put_pixels16_xy2_num		6774760	1					
ANR	6774768	Argument	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6774769	Identifier	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6774770	Argument	1		6774760	1					
ANR	6774771	PrimaryExpression	1		6774760	0					
ANR	6774772	IdentifierDeclStatement	int j ;	9:4:193:198	6774760	1	True				
ANR	6774773	IdentifierDecl	j		6774760	0					
ANR	6774774	IdentifierDeclType	int		6774760	0					
ANR	6774775	Identifier	j		6774760	1					
ANR	6774776	ExpressionStatement	"POWERPC_TBL_START_COUNT ( altivec_put_pixels16_xy2_num , 1 )"	11:0:201:257	6774760	2	True				
ANR	6774777	CallExpression	"POWERPC_TBL_START_COUNT ( altivec_put_pixels16_xy2_num , 1 )"		6774760	0					
ANR	6774778	Callee	POWERPC_TBL_START_COUNT		6774760	0					
ANR	6774779	Identifier	POWERPC_TBL_START_COUNT		6774760	0					
ANR	6774780	ArgumentList	altivec_put_pixels16_xy2_num		6774760	1					
ANR	6774781	Argument	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6774782	Identifier	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6774783	Argument	1		6774760	1					
ANR	6774784	PrimaryExpression	1		6774760	0					
ANR	6774785	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		6774760	3					
ANR	6774786	ForInit	j = 0 ;	13:11:271:276	6774760	0	True				
ANR	6774787	AssignmentExpression	j = 0		6774760	0		=			
ANR	6774788	Identifier	j		6774760	0					
ANR	6774789	PrimaryExpression	0		6774760	1					
ANR	6774790	Condition	j < 4	13:18:278:282	6774760	1	True				
ANR	6774791	RelationalExpression	j < 4		6774760	0		<			
ANR	6774792	Identifier	j		6774760	0					
ANR	6774793	PrimaryExpression	4		6774760	1					
ANR	6774794	PostIncDecOperationExpression	j ++	13:25:285:287	6774760	2	True				
ANR	6774795	Identifier	j		6774760	0					
ANR	6774796	IncDec	++		6774760	1					
ANR	6774797	CompoundStatement		29:6:548:563	6774760	3					
ANR	6774798	IdentifierDeclStatement	int i ;	15:6:299:304	6774760	0	True				
ANR	6774799	IdentifierDecl	i		6774760	0					
ANR	6774800	IdentifierDeclType	int		6774760	0					
ANR	6774801	Identifier	i		6774760	1					
ANR	6774802	IdentifierDeclStatement	const uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	17:6:313:377	6774760	1	True				
ANR	6774803	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6774760	0					
ANR	6774804	IdentifierDeclType	const uint32_t		6774760	0					
ANR	6774805	Identifier	a		6774760	1					
ANR	6774806	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6774760	2		=			
ANR	6774807	Identifier	a		6774760	0					
ANR	6774808	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6774760	1					
ANR	6774809	CastExpression	( const struct unaligned_32 * ) ( pixels )		6774760	0					
ANR	6774810	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774811	Identifier	pixels		6774760	1					
ANR	6774812	Identifier	l		6774760	1					
ANR	6774813	IdentifierDeclStatement	const uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	19:6:386:463	6774760	2	True				
ANR	6774814	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6774760	0					
ANR	6774815	IdentifierDeclType	const uint32_t		6774760	0					
ANR	6774816	Identifier	b		6774760	1					
ANR	6774817	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6774760	2		=			
ANR	6774818	Identifier	b		6774760	0					
ANR	6774819	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6774760	1					
ANR	6774820	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6774760	0					
ANR	6774821	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774822	AdditiveExpression	pixels + 1		6774760	1		+			
ANR	6774823	Identifier	pixels		6774760	0					
ANR	6774824	PrimaryExpression	1		6774760	1					
ANR	6774825	Identifier	l		6774760	1					
ANR	6774826	IdentifierDeclStatement	uint32_t l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL ;	23:6:472:549	6774760	3	True				
ANR	6774827	IdentifierDecl	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6774760	0					
ANR	6774828	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774829	Identifier	l0		6774760	1					
ANR	6774830	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6774760	2		=			
ANR	6774831	Identifier	l0		6774760	0					
ANR	6774832	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6774760	1		+			
ANR	6774833	BitAndExpression	a & 0x03030303UL		6774760	0		&			
ANR	6774834	Identifier	a		6774760	0					
ANR	6774835	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774836	AdditiveExpression	( b & 0x03030303UL ) + 0x02020202UL		6774760	1		+			
ANR	6774837	BitAndExpression	b & 0x03030303UL		6774760	0		&			
ANR	6774838	Identifier	b		6774760	0					
ANR	6774839	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774840	PrimaryExpression	0x02020202UL		6774760	1					
ANR	6774841	IdentifierDeclStatement	uint32_t h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 ) ;	27:6:558:634	6774760	4	True				
ANR	6774842	IdentifierDecl	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	0					
ANR	6774843	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774844	Identifier	h0		6774760	1					
ANR	6774845	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	2		=			
ANR	6774846	Identifier	h0		6774760	0					
ANR	6774847	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	1		+			
ANR	6774848	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6774760	0		>>			
ANR	6774849	BitAndExpression	a & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774850	Identifier	a		6774760	0					
ANR	6774851	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774852	PrimaryExpression	2		6774760	1					
ANR	6774853	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6774760	1		>>			
ANR	6774854	BitAndExpression	b & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774855	Identifier	b		6774760	0					
ANR	6774856	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774857	PrimaryExpression	2		6774760	1					
ANR	6774858	IdentifierDeclStatement	"uint32_t l1 , h1 ;"	31:6:643:658	6774760	5	True				
ANR	6774859	IdentifierDecl	l1		6774760	0					
ANR	6774860	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774861	Identifier	l1		6774760	1					
ANR	6774862	IdentifierDecl	h1		6774760	1					
ANR	6774863	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774864	Identifier	h1		6774760	1					
ANR	6774865	ExpressionStatement	pixels += line_size	33:6:667:686	6774760	6	True				
ANR	6774866	AssignmentExpression	pixels += line_size		6774760	0		+=			
ANR	6774867	Identifier	pixels		6774760	0					
ANR	6774868	Identifier	line_size		6774760	1					
ANR	6774869	ForStatement	for ( i = 0 ; i < h ; i += 2 )		6774760	7					
ANR	6774870	ForInit	i = 0 ;	35:11:700:705	6774760	0	True				
ANR	6774871	AssignmentExpression	i = 0		6774760	0		=			
ANR	6774872	Identifier	i		6774760	0					
ANR	6774873	PrimaryExpression	0		6774760	1					
ANR	6774874	Condition	i < h	35:18:707:711	6774760	1	True				
ANR	6774875	RelationalExpression	i < h		6774760	0		<			
ANR	6774876	Identifier	i		6774760	0					
ANR	6774877	Identifier	h		6774760	1					
ANR	6774878	AssignmentExpression	i += 2	35:25:714:719	6774760	2	True	+=			
ANR	6774879	Identifier	i		6774760	0					
ANR	6774880	PrimaryExpression	2		6774760	1					
ANR	6774881	CompoundStatement		37:8:707:769	6774760	3					
ANR	6774882	IdentifierDeclStatement	uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	37:8:733:791	6774760	0	True				
ANR	6774883	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6774760	0					
ANR	6774884	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774885	Identifier	a		6774760	1					
ANR	6774886	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6774760	2		=			
ANR	6774887	Identifier	a		6774760	0					
ANR	6774888	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6774760	1					
ANR	6774889	CastExpression	( const struct unaligned_32 * ) ( pixels )		6774760	0					
ANR	6774890	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774891	Identifier	pixels		6774760	1					
ANR	6774892	Identifier	l		6774760	1					
ANR	6774893	IdentifierDeclStatement	uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	39:8:802:864	6774760	1	True				
ANR	6774894	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6774760	0					
ANR	6774895	IdentifierDeclType	uint32_t		6774760	0					
ANR	6774896	Identifier	b		6774760	1					
ANR	6774897	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6774760	2		=			
ANR	6774898	Identifier	b		6774760	0					
ANR	6774899	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6774760	1					
ANR	6774900	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6774760	0					
ANR	6774901	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774902	AdditiveExpression	pixels + 1		6774760	1		+			
ANR	6774903	Identifier	pixels		6774760	0					
ANR	6774904	PrimaryExpression	1		6774760	1					
ANR	6774905	Identifier	l		6774760	1					
ANR	6774906	ExpressionStatement	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )	41:8:875:919	6774760	2	True				
ANR	6774907	AssignmentExpression	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )		6774760	0		=			
ANR	6774908	Identifier	l1		6774760	0					
ANR	6774909	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL )		6774760	1		+			
ANR	6774910	BitAndExpression	a & 0x03030303UL		6774760	0		&			
ANR	6774911	Identifier	a		6774760	0					
ANR	6774912	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774913	BitAndExpression	b & 0x03030303UL		6774760	1		&			
ANR	6774914	Identifier	b		6774760	0					
ANR	6774915	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774916	ExpressionStatement	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	43:8:930:988	6774760	3	True				
ANR	6774917	AssignmentExpression	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	0		=			
ANR	6774918	Identifier	h1		6774760	0					
ANR	6774919	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	1		+			
ANR	6774920	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6774760	0		>>			
ANR	6774921	BitAndExpression	a & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774922	Identifier	a		6774760	0					
ANR	6774923	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774924	PrimaryExpression	2		6774760	1					
ANR	6774925	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6774760	1		>>			
ANR	6774926	BitAndExpression	b & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774927	Identifier	b		6774760	0					
ANR	6774928	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774929	PrimaryExpression	2		6774760	1					
ANR	6774930	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	45:8:999:1077	6774760	4	True				
ANR	6774931	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	0		=			
ANR	6774932	UnaryOperationExpression	* ( ( uint32_t * ) block )		6774760	0					
ANR	6774933	UnaryOperator	*		6774760	0					
ANR	6774934	CastExpression	( uint32_t * ) block		6774760	1					
ANR	6774935	CastTarget	uint32_t *		6774760	0					
ANR	6774936	Identifier	block		6774760	1					
ANR	6774937	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	1		+			
ANR	6774938	Identifier	h0		6774760	0					
ANR	6774939	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	1		+			
ANR	6774940	Identifier	h1		6774760	0					
ANR	6774941	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6774760	1		&			
ANR	6774942	ShiftExpression	( l0 + l1 ) >> 2		6774760	0		>>			
ANR	6774943	AdditiveExpression	l0 + l1		6774760	0		+			
ANR	6774944	Identifier	l0		6774760	0					
ANR	6774945	Identifier	l1		6774760	1					
ANR	6774946	PrimaryExpression	2		6774760	1					
ANR	6774947	PrimaryExpression	0x0F0F0F0FUL		6774760	1					
ANR	6774948	ExpressionStatement	pixels += line_size	49:8:1088:1107	6774760	5	True				
ANR	6774949	AssignmentExpression	pixels += line_size		6774760	0		+=			
ANR	6774950	Identifier	pixels		6774760	0					
ANR	6774951	Identifier	line_size		6774760	1					
ANR	6774952	ExpressionStatement	block += line_size	51:8:1118:1136	6774760	6	True				
ANR	6774953	AssignmentExpression	block += line_size		6774760	0		+=			
ANR	6774954	Identifier	block		6774760	0					
ANR	6774955	Identifier	line_size		6774760	1					
ANR	6774956	ExpressionStatement	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )	53:8:1147:1196	6774760	7	True				
ANR	6774957	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6774760	0		=			
ANR	6774958	Identifier	a		6774760	0					
ANR	6774959	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6774760	1					
ANR	6774960	CastExpression	( const struct unaligned_32 * ) ( pixels )		6774760	0					
ANR	6774961	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774962	Identifier	pixels		6774760	1					
ANR	6774963	Identifier	l		6774760	1					
ANR	6774964	ExpressionStatement	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )	55:8:1207:1260	6774760	8	True				
ANR	6774965	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6774760	0		=			
ANR	6774966	Identifier	b		6774760	0					
ANR	6774967	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6774760	1					
ANR	6774968	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6774760	0					
ANR	6774969	CastTarget	const struct unaligned_32 *		6774760	0					
ANR	6774970	AdditiveExpression	pixels + 1		6774760	1		+			
ANR	6774971	Identifier	pixels		6774760	0					
ANR	6774972	PrimaryExpression	1		6774760	1					
ANR	6774973	Identifier	l		6774760	1					
ANR	6774974	ExpressionStatement	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL	57:8:1271:1330	6774760	9	True				
ANR	6774975	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6774760	0		=			
ANR	6774976	Identifier	l0		6774760	0					
ANR	6774977	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x02020202UL		6774760	1		+			
ANR	6774978	BitAndExpression	a & 0x03030303UL		6774760	0		&			
ANR	6774979	Identifier	a		6774760	0					
ANR	6774980	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774981	AdditiveExpression	( b & 0x03030303UL ) + 0x02020202UL		6774760	1		+			
ANR	6774982	BitAndExpression	b & 0x03030303UL		6774760	0		&			
ANR	6774983	Identifier	b		6774760	0					
ANR	6774984	PrimaryExpression	0x03030303UL		6774760	1					
ANR	6774985	PrimaryExpression	0x02020202UL		6774760	1					
ANR	6774986	ExpressionStatement	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	59:8:1341:1399	6774760	10	True				
ANR	6774987	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	0		=			
ANR	6774988	Identifier	h0		6774760	0					
ANR	6774989	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6774760	1		+			
ANR	6774990	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6774760	0		>>			
ANR	6774991	BitAndExpression	a & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774992	Identifier	a		6774760	0					
ANR	6774993	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774994	PrimaryExpression	2		6774760	1					
ANR	6774995	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6774760	1		>>			
ANR	6774996	BitAndExpression	b & 0xFCFCFCFCUL		6774760	0		&			
ANR	6774997	Identifier	b		6774760	0					
ANR	6774998	PrimaryExpression	0xFCFCFCFCUL		6774760	1					
ANR	6774999	PrimaryExpression	2		6774760	1					
ANR	6775000	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	61:8:1410:1488	6774760	11	True				
ANR	6775001	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	0		=			
ANR	6775002	UnaryOperationExpression	* ( ( uint32_t * ) block )		6774760	0					
ANR	6775003	UnaryOperator	*		6774760	0					
ANR	6775004	CastExpression	( uint32_t * ) block		6774760	1					
ANR	6775005	CastTarget	uint32_t *		6774760	0					
ANR	6775006	Identifier	block		6774760	1					
ANR	6775007	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	1		+			
ANR	6775008	Identifier	h0		6774760	0					
ANR	6775009	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6774760	1		+			
ANR	6775010	Identifier	h1		6774760	0					
ANR	6775011	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6774760	1		&			
ANR	6775012	ShiftExpression	( l0 + l1 ) >> 2		6774760	0		>>			
ANR	6775013	AdditiveExpression	l0 + l1		6774760	0		+			
ANR	6775014	Identifier	l0		6774760	0					
ANR	6775015	Identifier	l1		6774760	1					
ANR	6775016	PrimaryExpression	2		6774760	1					
ANR	6775017	PrimaryExpression	0x0F0F0F0FUL		6774760	1					
ANR	6775018	ExpressionStatement	pixels += line_size	65:8:1499:1518	6774760	12	True				
ANR	6775019	AssignmentExpression	pixels += line_size		6774760	0		+=			
ANR	6775020	Identifier	pixels		6774760	0					
ANR	6775021	Identifier	line_size		6774760	1					
ANR	6775022	ExpressionStatement	block += line_size	67:8:1529:1547	6774760	13	True				
ANR	6775023	AssignmentExpression	block += line_size		6774760	0		+=			
ANR	6775024	Identifier	block		6774760	0					
ANR	6775025	Identifier	line_size		6774760	1					
ANR	6775026	ExpressionStatement	pixels += 4 - line_size * ( h + 1 )	69:8:1558:1591	6774760	8	True				
ANR	6775027	AssignmentExpression	pixels += 4 - line_size * ( h + 1 )		6774760	0		+=			
ANR	6775028	Identifier	pixels		6774760	0					
ANR	6775029	AdditiveExpression	4 - line_size * ( h + 1 )		6774760	1		-			
ANR	6775030	PrimaryExpression	4		6774760	0					
ANR	6775031	MultiplicativeExpression	line_size * ( h + 1 )		6774760	1		*			
ANR	6775032	Identifier	line_size		6774760	0					
ANR	6775033	AdditiveExpression	h + 1		6774760	1		+			
ANR	6775034	Identifier	h		6774760	0					
ANR	6775035	PrimaryExpression	1		6774760	1					
ANR	6775036	ExpressionStatement	block += 4 - line_size * h	71:6:1600:1626	6774760	9	True				
ANR	6775037	AssignmentExpression	block += 4 - line_size * h		6774760	0		+=			
ANR	6775038	Identifier	block		6774760	0					
ANR	6775039	AdditiveExpression	4 - line_size * h		6774760	1		-			
ANR	6775040	PrimaryExpression	4		6774760	0					
ANR	6775041	MultiplicativeExpression	line_size * h		6774760	1		*			
ANR	6775042	Identifier	line_size		6774760	0					
ANR	6775043	Identifier	h		6774760	1					
ANR	6775044	ExpressionStatement	"POWERPC_TBL_STOP_COUNT ( altivec_put_pixels16_xy2_num , 1 )"	77:0:1638:1693	6774760	4	True				
ANR	6775045	CallExpression	"POWERPC_TBL_STOP_COUNT ( altivec_put_pixels16_xy2_num , 1 )"		6774760	0					
ANR	6775046	Callee	POWERPC_TBL_STOP_COUNT		6774760	0					
ANR	6775047	Identifier	POWERPC_TBL_STOP_COUNT		6774760	0					
ANR	6775048	ArgumentList	altivec_put_pixels16_xy2_num		6774760	1					
ANR	6775049	Argument	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6775050	Identifier	altivec_put_pixels16_xy2_num		6774760	0					
ANR	6775051	Argument	1		6774760	1					
ANR	6775052	PrimaryExpression	1		6774760	0					
ANR	6775053	ReturnType	void		6774760	1					
ANR	6775054	Identifier	put_pixels16_xy2_altivec		6774760	2					
ANR	6775055	ParameterList	"uint8_t * block , const uint8_t * pixels , int line_size , int h"		6774760	3					
ANR	6775056	Parameter	uint8_t * block	1:30:30:44	6774760	0	True				
ANR	6775057	ParameterType	uint8_t *		6774760	0					
ANR	6775058	Identifier	block		6774760	1					
ANR	6775059	Parameter	const uint8_t * pixels	1:47:47:68	6774760	1	True				
ANR	6775060	ParameterType	const uint8_t *		6774760	0					
ANR	6775061	Identifier	pixels		6774760	1					
ANR	6775062	Parameter	int line_size	1:71:71:83	6774760	2	True				
ANR	6775063	ParameterType	int		6774760	0					
ANR	6775064	Identifier	line_size		6774760	1					
ANR	6775065	Parameter	int h	1:86:86:90	6774760	3	True				
ANR	6775066	ParameterType	int		6774760	0					
ANR	6775067	Identifier	h		6774760	1					
ANR	6775068	CFGEntryNode	ENTRY		6774760		True				
ANR	6775069	CFGExitNode	EXIT		6774760		True				
ANR	6775070	Symbol	a		6774760						
ANR	6775071	Symbol	b		6774760						
ANR	6775072	Symbol	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6774760						
ANR	6775073	Symbol	l0		6774760						
ANR	6775074	Symbol	l1		6774760						
ANR	6775075	Symbol	* ( ( uint32_t * ) block )		6774760						
ANR	6775076	Symbol	h		6774760						
ANR	6775077	Symbol	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6774760						
ANR	6775078	Symbol	h0		6774760						
ANR	6775079	Symbol	i		6774760						
ANR	6775080	Symbol	h1		6774760						
ANR	6775081	Symbol	j		6774760						
ANR	6775082	Symbol	altivec_put_pixels16_xy2_num		6774760						
ANR	6775083	Symbol	* block		6774760						
ANR	6775084	Symbol	pixels		6774760						
ANR	6775085	Symbol	* pixels		6774760						
ANR	6775086	Symbol	block		6774760						
ANR	6775087	Symbol	line_size		6774760						
