command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7676677	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sd_parse_uri_0.c								
ANR	7676678	Function	sd_parse_uri	1:0:0:1817							
ANR	7676679	FunctionDef	"sd_parse_uri (BDRVSheepdogState * s , const char * filename , char * vdi , uint32_t * snapid , char * tag)"		7676678	0					
ANR	7676680	CompoundStatement		5:0:134:1817	7676678	0					
ANR	7676681	IdentifierDeclStatement	URI * uri ;	7:4:141:149	7676678	0	True				
ANR	7676682	IdentifierDecl	* uri		7676678	0					
ANR	7676683	IdentifierDeclType	URI *		7676678	0					
ANR	7676684	Identifier	uri		7676678	1					
ANR	7676685	IdentifierDeclStatement	QueryParams * qp = NULL ;	9:4:156:178	7676678	1	True				
ANR	7676686	IdentifierDecl	* qp = NULL		7676678	0					
ANR	7676687	IdentifierDeclType	QueryParams *		7676678	0					
ANR	7676688	Identifier	qp		7676678	1					
ANR	7676689	AssignmentExpression	* qp = NULL		7676678	2		=			
ANR	7676690	Identifier	NULL		7676678	0					
ANR	7676691	Identifier	NULL		7676678	1					
ANR	7676692	IdentifierDeclStatement	int ret = 0 ;	11:4:185:196	7676678	2	True				
ANR	7676693	IdentifierDecl	ret = 0		7676678	0					
ANR	7676694	IdentifierDeclType	int		7676678	0					
ANR	7676695	Identifier	ret		7676678	1					
ANR	7676696	AssignmentExpression	ret = 0		7676678	2		=			
ANR	7676697	Identifier	ret		7676678	0					
ANR	7676698	PrimaryExpression	0		7676678	1					
ANR	7676699	ExpressionStatement	uri = uri_parse ( filename )	15:4:205:230	7676678	3	True				
ANR	7676700	AssignmentExpression	uri = uri_parse ( filename )		7676678	0		=			
ANR	7676701	Identifier	uri		7676678	0					
ANR	7676702	CallExpression	uri_parse ( filename )		7676678	1					
ANR	7676703	Callee	uri_parse		7676678	0					
ANR	7676704	Identifier	uri_parse		7676678	0					
ANR	7676705	ArgumentList	filename		7676678	1					
ANR	7676706	Argument	filename		7676678	0					
ANR	7676707	Identifier	filename		7676678	0					
ANR	7676708	IfStatement	if ( ! uri )		7676678	4					
ANR	7676709	Condition	! uri	17:8:241:244	7676678	0	True				
ANR	7676710	UnaryOperationExpression	! uri		7676678	0					
ANR	7676711	UnaryOperator	!		7676678	0					
ANR	7676712	Identifier	uri		7676678	1					
ANR	7676713	CompoundStatement		13:14:112:112	7676678	1					
ANR	7676714	ReturnStatement	return - EINVAL ;	19:8:258:272	7676678	0	True				
ANR	7676715	UnaryOperationExpression	- EINVAL		7676678	0					
ANR	7676716	UnaryOperator	-		7676678	0					
ANR	7676717	Identifier	EINVAL		7676678	1					
ANR	7676718	IfStatement	"if ( ! strcmp ( uri -> scheme , ""sheepdog"" ) )"		7676678	5					
ANR	7676719	Condition	"! strcmp ( uri -> scheme , ""sheepdog"" )"	27:8:313:344	7676678	0	True				
ANR	7676720	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""sheepdog"" )"		7676678	0					
ANR	7676721	UnaryOperator	!		7676678	0					
ANR	7676722	CallExpression	"strcmp ( uri -> scheme , ""sheepdog"" )"		7676678	1					
ANR	7676723	Callee	strcmp		7676678	0					
ANR	7676724	Identifier	strcmp		7676678	0					
ANR	7676725	ArgumentList	uri -> scheme		7676678	1					
ANR	7676726	Argument	uri -> scheme		7676678	0					
ANR	7676727	PtrMemberAccess	uri -> scheme		7676678	0					
ANR	7676728	Identifier	uri		7676678	0					
ANR	7676729	Identifier	scheme		7676678	1					
ANR	7676730	Argument	"""sheepdog"""		7676678	1					
ANR	7676731	PrimaryExpression	"""sheepdog"""		7676678	0					
ANR	7676732	CompoundStatement		23:42:212:212	7676678	1					
ANR	7676733	ExpressionStatement	s -> is_unix = false	29:8:358:376	7676678	0	True				
ANR	7676734	AssignmentExpression	s -> is_unix = false		7676678	0		=			
ANR	7676735	PtrMemberAccess	s -> is_unix		7676678	0					
ANR	7676736	Identifier	s		7676678	0					
ANR	7676737	Identifier	is_unix		7676678	1					
ANR	7676738	Identifier	false		7676678	1					
ANR	7676739	ElseStatement	else		7676678	0					
ANR	7676740	IfStatement	"if ( ! strcmp ( uri -> scheme , ""sheepdog+tcp"" ) )"		7676678	0					
ANR	7676741	Condition	"! strcmp ( uri -> scheme , ""sheepdog+tcp"" )"	31:15:394:429	7676678	0	True				
ANR	7676742	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""sheepdog+tcp"" )"		7676678	0					
ANR	7676743	UnaryOperator	!		7676678	0					
ANR	7676744	CallExpression	"strcmp ( uri -> scheme , ""sheepdog+tcp"" )"		7676678	1					
ANR	7676745	Callee	strcmp		7676678	0					
ANR	7676746	Identifier	strcmp		7676678	0					
ANR	7676747	ArgumentList	uri -> scheme		7676678	1					
ANR	7676748	Argument	uri -> scheme		7676678	0					
ANR	7676749	PtrMemberAccess	uri -> scheme		7676678	0					
ANR	7676750	Identifier	uri		7676678	0					
ANR	7676751	Identifier	scheme		7676678	1					
ANR	7676752	Argument	"""sheepdog+tcp"""		7676678	1					
ANR	7676753	PrimaryExpression	"""sheepdog+tcp"""		7676678	0					
ANR	7676754	CompoundStatement		27:53:297:297	7676678	1					
ANR	7676755	ExpressionStatement	s -> is_unix = false	33:8:443:461	7676678	0	True				
ANR	7676756	AssignmentExpression	s -> is_unix = false		7676678	0		=			
ANR	7676757	PtrMemberAccess	s -> is_unix		7676678	0					
ANR	7676758	Identifier	s		7676678	0					
ANR	7676759	Identifier	is_unix		7676678	1					
ANR	7676760	Identifier	false		7676678	1					
ANR	7676761	ElseStatement	else		7676678	0					
ANR	7676762	IfStatement	"if ( ! strcmp ( uri -> scheme , ""sheepdog+unix"" ) )"		7676678	0					
ANR	7676763	Condition	"! strcmp ( uri -> scheme , ""sheepdog+unix"" )"	35:15:479:515	7676678	0	True				
ANR	7676764	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""sheepdog+unix"" )"		7676678	0					
ANR	7676765	UnaryOperator	!		7676678	0					
ANR	7676766	CallExpression	"strcmp ( uri -> scheme , ""sheepdog+unix"" )"		7676678	1					
ANR	7676767	Callee	strcmp		7676678	0					
ANR	7676768	Identifier	strcmp		7676678	0					
ANR	7676769	ArgumentList	uri -> scheme		7676678	1					
ANR	7676770	Argument	uri -> scheme		7676678	0					
ANR	7676771	PtrMemberAccess	uri -> scheme		7676678	0					
ANR	7676772	Identifier	uri		7676678	0					
ANR	7676773	Identifier	scheme		7676678	1					
ANR	7676774	Argument	"""sheepdog+unix"""		7676678	1					
ANR	7676775	PrimaryExpression	"""sheepdog+unix"""		7676678	0					
ANR	7676776	CompoundStatement		31:54:383:383	7676678	1					
ANR	7676777	ExpressionStatement	s -> is_unix = true	37:8:529:546	7676678	0	True				
ANR	7676778	AssignmentExpression	s -> is_unix = true		7676678	0		=			
ANR	7676779	PtrMemberAccess	s -> is_unix		7676678	0					
ANR	7676780	Identifier	s		7676678	0					
ANR	7676781	Identifier	is_unix		7676678	1					
ANR	7676782	Identifier	true		7676678	1					
ANR	7676783	ElseStatement	else		7676678	0					
ANR	7676784	CompoundStatement		35:11:425:425	7676678	0					
ANR	7676785	ExpressionStatement	ret = - EINVAL	41:8:571:584	7676678	0	True				
ANR	7676786	AssignmentExpression	ret = - EINVAL		7676678	0		=			
ANR	7676787	Identifier	ret		7676678	0					
ANR	7676788	UnaryOperationExpression	- EINVAL		7676678	1					
ANR	7676789	UnaryOperator	-		7676678	0					
ANR	7676790	Identifier	EINVAL		7676678	1					
ANR	7676791	GotoStatement	goto out ;	43:8:595:603	7676678	1	True				
ANR	7676792	Identifier	out		7676678	0					
ANR	7676793	IfStatement	"if ( uri -> path == NULL || ! strcmp ( uri -> path , ""/"" ) )"		7676678	6					
ANR	7676794	Condition	"uri -> path == NULL || ! strcmp ( uri -> path , ""/"" )"	49:8:623:666	7676678	0	True				
ANR	7676795	OrExpression	"uri -> path == NULL || ! strcmp ( uri -> path , ""/"" )"		7676678	0		||			
ANR	7676796	EqualityExpression	uri -> path == NULL		7676678	0		==			
ANR	7676797	PtrMemberAccess	uri -> path		7676678	0					
ANR	7676798	Identifier	uri		7676678	0					
ANR	7676799	Identifier	path		7676678	1					
ANR	7676800	Identifier	NULL		7676678	1					
ANR	7676801	UnaryOperationExpression	"! strcmp ( uri -> path , ""/"" )"		7676678	1					
ANR	7676802	UnaryOperator	!		7676678	0					
ANR	7676803	CallExpression	"strcmp ( uri -> path , ""/"" )"		7676678	1					
ANR	7676804	Callee	strcmp		7676678	0					
ANR	7676805	Identifier	strcmp		7676678	0					
ANR	7676806	ArgumentList	uri -> path		7676678	1					
ANR	7676807	Argument	uri -> path		7676678	0					
ANR	7676808	PtrMemberAccess	uri -> path		7676678	0					
ANR	7676809	Identifier	uri		7676678	0					
ANR	7676810	Identifier	path		7676678	1					
ANR	7676811	Argument	"""/"""		7676678	1					
ANR	7676812	PrimaryExpression	"""/"""		7676678	0					
ANR	7676813	CompoundStatement		45:54:534:534	7676678	1					
ANR	7676814	ExpressionStatement	ret = - EINVAL	51:8:680:693	7676678	0	True				
ANR	7676815	AssignmentExpression	ret = - EINVAL		7676678	0		=			
ANR	7676816	Identifier	ret		7676678	0					
ANR	7676817	UnaryOperationExpression	- EINVAL		7676678	1					
ANR	7676818	UnaryOperator	-		7676678	0					
ANR	7676819	Identifier	EINVAL		7676678	1					
ANR	7676820	GotoStatement	goto out ;	53:8:704:712	7676678	1	True				
ANR	7676821	Identifier	out		7676678	0					
ANR	7676822	ExpressionStatement	"pstrcpy ( vdi , SD_MAX_VDI_LEN , uri -> path + 1 )"	57:4:726:769	7676678	7	True				
ANR	7676823	CallExpression	"pstrcpy ( vdi , SD_MAX_VDI_LEN , uri -> path + 1 )"		7676678	0					
ANR	7676824	Callee	pstrcpy		7676678	0					
ANR	7676825	Identifier	pstrcpy		7676678	0					
ANR	7676826	ArgumentList	vdi		7676678	1					
ANR	7676827	Argument	vdi		7676678	0					
ANR	7676828	Identifier	vdi		7676678	0					
ANR	7676829	Argument	SD_MAX_VDI_LEN		7676678	1					
ANR	7676830	Identifier	SD_MAX_VDI_LEN		7676678	0					
ANR	7676831	Argument	uri -> path + 1		7676678	2					
ANR	7676832	AdditiveExpression	uri -> path + 1		7676678	0		+			
ANR	7676833	PtrMemberAccess	uri -> path		7676678	0					
ANR	7676834	Identifier	uri		7676678	0					
ANR	7676835	Identifier	path		7676678	1					
ANR	7676836	PrimaryExpression	1		7676678	1					
ANR	7676837	ExpressionStatement	qp = query_params_parse ( uri -> query )	61:4:778:813	7676678	8	True				
ANR	7676838	AssignmentExpression	qp = query_params_parse ( uri -> query )		7676678	0		=			
ANR	7676839	Identifier	qp		7676678	0					
ANR	7676840	CallExpression	query_params_parse ( uri -> query )		7676678	1					
ANR	7676841	Callee	query_params_parse		7676678	0					
ANR	7676842	Identifier	query_params_parse		7676678	0					
ANR	7676843	ArgumentList	uri -> query		7676678	1					
ANR	7676844	Argument	uri -> query		7676678	0					
ANR	7676845	PtrMemberAccess	uri -> query		7676678	0					
ANR	7676846	Identifier	uri		7676678	0					
ANR	7676847	Identifier	query		7676678	1					
ANR	7676848	IfStatement	if ( qp -> n > 1 || ( s -> is_unix && ! qp -> n ) || ( ! s -> is_unix && qp -> n ) )		7676678	9					
ANR	7676849	Condition	qp -> n > 1 || ( s -> is_unix && ! qp -> n ) || ( ! s -> is_unix && qp -> n )	63:8:824:884	7676678	0	True				
ANR	7676850	OrExpression	qp -> n > 1 || ( s -> is_unix && ! qp -> n ) || ( ! s -> is_unix && qp -> n )		7676678	0		||			
ANR	7676851	RelationalExpression	qp -> n > 1		7676678	0		>			
ANR	7676852	PtrMemberAccess	qp -> n		7676678	0					
ANR	7676853	Identifier	qp		7676678	0					
ANR	7676854	Identifier	n		7676678	1					
ANR	7676855	PrimaryExpression	1		7676678	1					
ANR	7676856	OrExpression	( s -> is_unix && ! qp -> n ) || ( ! s -> is_unix && qp -> n )		7676678	1		||			
ANR	7676857	AndExpression	s -> is_unix && ! qp -> n		7676678	0		&&			
ANR	7676858	PtrMemberAccess	s -> is_unix		7676678	0					
ANR	7676859	Identifier	s		7676678	0					
ANR	7676860	Identifier	is_unix		7676678	1					
ANR	7676861	UnaryOperationExpression	! qp -> n		7676678	1					
ANR	7676862	UnaryOperator	!		7676678	0					
ANR	7676863	PtrMemberAccess	qp -> n		7676678	1					
ANR	7676864	Identifier	qp		7676678	0					
ANR	7676865	Identifier	n		7676678	1					
ANR	7676866	AndExpression	! s -> is_unix && qp -> n		7676678	1		&&			
ANR	7676867	UnaryOperationExpression	! s -> is_unix		7676678	0					
ANR	7676868	UnaryOperator	!		7676678	0					
ANR	7676869	PtrMemberAccess	s -> is_unix		7676678	1					
ANR	7676870	Identifier	s		7676678	0					
ANR	7676871	Identifier	is_unix		7676678	1					
ANR	7676872	PtrMemberAccess	qp -> n		7676678	1					
ANR	7676873	Identifier	qp		7676678	0					
ANR	7676874	Identifier	n		7676678	1					
ANR	7676875	CompoundStatement		59:71:752:752	7676678	1					
ANR	7676876	ExpressionStatement	ret = - EINVAL	65:8:898:911	7676678	0	True				
ANR	7676877	AssignmentExpression	ret = - EINVAL		7676678	0		=			
ANR	7676878	Identifier	ret		7676678	0					
ANR	7676879	UnaryOperationExpression	- EINVAL		7676678	1					
ANR	7676880	UnaryOperator	-		7676678	0					
ANR	7676881	Identifier	EINVAL		7676678	1					
ANR	7676882	GotoStatement	goto out ;	67:8:922:930	7676678	1	True				
ANR	7676883	Identifier	out		7676678	0					
ANR	7676884	IfStatement	if ( s -> is_unix )		7676678	10					
ANR	7676885	Condition	s -> is_unix	73:8:950:959	7676678	0	True				
ANR	7676886	PtrMemberAccess	s -> is_unix		7676678	0					
ANR	7676887	Identifier	s		7676678	0					
ANR	7676888	Identifier	is_unix		7676678	1					
ANR	7676889	CompoundStatement		69:20:827:827	7676678	1					
ANR	7676890	IfStatement	"if ( uri -> server || uri -> port || strcmp ( qp -> p [ 0 ] . name , ""socket"" ) )"		7676678	0					
ANR	7676891	Condition	"uri -> server || uri -> port || strcmp ( qp -> p [ 0 ] . name , ""socket"" )"	77:12:1029:1087	7676678	0	True				
ANR	7676892	OrExpression	"uri -> server || uri -> port || strcmp ( qp -> p [ 0 ] . name , ""socket"" )"		7676678	0		||			
ANR	7676893	PtrMemberAccess	uri -> server		7676678	0					
ANR	7676894	Identifier	uri		7676678	0					
ANR	7676895	Identifier	server		7676678	1					
ANR	7676896	OrExpression	"uri -> port || strcmp ( qp -> p [ 0 ] . name , ""socket"" )"		7676678	1		||			
ANR	7676897	PtrMemberAccess	uri -> port		7676678	0					
ANR	7676898	Identifier	uri		7676678	0					
ANR	7676899	Identifier	port		7676678	1					
ANR	7676900	CallExpression	"strcmp ( qp -> p [ 0 ] . name , ""socket"" )"		7676678	1					
ANR	7676901	Callee	strcmp		7676678	0					
ANR	7676902	Identifier	strcmp		7676678	0					
ANR	7676903	ArgumentList	qp -> p [ 0 ] . name		7676678	1					
ANR	7676904	Argument	qp -> p [ 0 ] . name		7676678	0					
ANR	7676905	MemberAccess	qp -> p [ 0 ] . name		7676678	0					
ANR	7676906	ArrayIndexing	qp -> p [ 0 ]		7676678	0					
ANR	7676907	PtrMemberAccess	qp -> p		7676678	0					
ANR	7676908	Identifier	qp		7676678	0					
ANR	7676909	Identifier	p		7676678	1					
ANR	7676910	PrimaryExpression	0		7676678	1					
ANR	7676911	Identifier	name		7676678	1					
ANR	7676912	Argument	"""socket"""		7676678	1					
ANR	7676913	PrimaryExpression	"""socket"""		7676678	0					
ANR	7676914	CompoundStatement		73:73:955:955	7676678	1					
ANR	7676915	ExpressionStatement	ret = - EINVAL	79:12:1105:1118	7676678	0	True				
ANR	7676916	AssignmentExpression	ret = - EINVAL		7676678	0		=			
ANR	7676917	Identifier	ret		7676678	0					
ANR	7676918	UnaryOperationExpression	- EINVAL		7676678	1					
ANR	7676919	UnaryOperator	-		7676678	0					
ANR	7676920	Identifier	EINVAL		7676678	1					
ANR	7676921	GotoStatement	goto out ;	81:12:1133:1141	7676678	1	True				
ANR	7676922	Identifier	out		7676678	0					
ANR	7676923	ExpressionStatement	s -> host_spec = g_strdup ( qp -> p [ 0 ] . value )	85:8:1163:1202	7676678	1	True				
ANR	7676924	AssignmentExpression	s -> host_spec = g_strdup ( qp -> p [ 0 ] . value )		7676678	0		=			
ANR	7676925	PtrMemberAccess	s -> host_spec		7676678	0					
ANR	7676926	Identifier	s		7676678	0					
ANR	7676927	Identifier	host_spec		7676678	1					
ANR	7676928	CallExpression	g_strdup ( qp -> p [ 0 ] . value )		7676678	1					
ANR	7676929	Callee	g_strdup		7676678	0					
ANR	7676930	Identifier	g_strdup		7676678	0					
ANR	7676931	ArgumentList	qp -> p [ 0 ] . value		7676678	1					
ANR	7676932	Argument	qp -> p [ 0 ] . value		7676678	0					
ANR	7676933	MemberAccess	qp -> p [ 0 ] . value		7676678	0					
ANR	7676934	ArrayIndexing	qp -> p [ 0 ]		7676678	0					
ANR	7676935	PtrMemberAccess	qp -> p		7676678	0					
ANR	7676936	Identifier	qp		7676678	0					
ANR	7676937	Identifier	p		7676678	1					
ANR	7676938	PrimaryExpression	0		7676678	1					
ANR	7676939	Identifier	value		7676678	1					
ANR	7676940	ElseStatement	else		7676678	0					
ANR	7676941	CompoundStatement		83:11:1081:1081	7676678	0					
ANR	7676942	Statement	s	91:8:1279:1279	7676678	0	True				
ANR	7676943	Statement	->	91:9:1280:1281	7676678	1	True				
ANR	7676944	Statement	host_spec	91:11:1282:1290	7676678	2	True				
ANR	7676945	Statement	=	91:21:1292:1292	7676678	3	True				
ANR	7676946	Statement	g_strdup_printf	91:23:1294:1308	7676678	4	True				
ANR	7676947	Statement	(	91:38:1309:1309	7676678	5	True				
ANR	7676948	Statement	"""%s:%d"""	91:39:1310:1316	7676678	6	True				
ANR	7676949	Statement	","	91:46:1317:1317	7676678	7	True				
ANR	7676950	Statement	uri	91:48:1319:1321	7676678	8	True				
ANR	7676951	Statement	->	91:51:1322:1323	7676678	9	True				
ANR	7676952	Statement	server	91:53:1324:1329	7676678	10	True				
ANR	7676953	Statement	?	91:60:1331:1331	7676678	11	True				
ANR	7676954	Statement	:	91:61:1332:1332	7676678	12	True				
ANR	7676955	Statement	SD_DEFAULT_ADDR	91:63:1334:1348	7676678	13	True				
ANR	7676956	Statement	","	91:78:1349:1349	7676678	14	True				
ANR	7676957	Statement	uri	93:39:1391:1393	7676678	15	True				
ANR	7676958	Statement	->	93:42:1394:1395	7676678	16	True				
ANR	7676959	Statement	port	93:44:1396:1399	7676678	17	True				
ANR	7676960	Statement	?	93:49:1401:1401	7676678	18	True				
ANR	7676961	Statement	:	93:50:1402:1402	7676678	19	True				
ANR	7676962	Statement	SD_DEFAULT_PORT	93:52:1404:1418	7676678	20	True				
ANR	7676963	Statement	)	93:67:1419:1419	7676678	21	True				
ANR	7676964	ExpressionStatement		93:68:1420:1420	7676678	22	True				
ANR	7676965	IfStatement	if ( uri -> fragment )		7676678	11					
ANR	7676966	Condition	uri -> fragment	101:8:1464:1476	7676678	0	True				
ANR	7676967	PtrMemberAccess	uri -> fragment		7676678	0					
ANR	7676968	Identifier	uri		7676678	0					
ANR	7676969	Identifier	fragment		7676678	1					
ANR	7676970	CompoundStatement		97:23:1344:1344	7676678	1					
ANR	7676971	ExpressionStatement	"* snapid = strtoul ( uri -> fragment , NULL , 10 )"	103:8:1490:1532	7676678	0	True				
ANR	7676972	AssignmentExpression	"* snapid = strtoul ( uri -> fragment , NULL , 10 )"		7676678	0		=			
ANR	7676973	UnaryOperationExpression	* snapid		7676678	0					
ANR	7676974	UnaryOperator	*		7676678	0					
ANR	7676975	Identifier	snapid		7676678	1					
ANR	7676976	CallExpression	"strtoul ( uri -> fragment , NULL , 10 )"		7676678	1					
ANR	7676977	Callee	strtoul		7676678	0					
ANR	7676978	Identifier	strtoul		7676678	0					
ANR	7676979	ArgumentList	uri -> fragment		7676678	1					
ANR	7676980	Argument	uri -> fragment		7676678	0					
ANR	7676981	PtrMemberAccess	uri -> fragment		7676678	0					
ANR	7676982	Identifier	uri		7676678	0					
ANR	7676983	Identifier	fragment		7676678	1					
ANR	7676984	Argument	NULL		7676678	1					
ANR	7676985	Identifier	NULL		7676678	0					
ANR	7676986	Argument	10		7676678	2					
ANR	7676987	PrimaryExpression	10		7676678	0					
ANR	7676988	IfStatement	if ( * snapid == 0 )		7676678	1					
ANR	7676989	Condition	* snapid == 0	105:12:1547:1558	7676678	0	True				
ANR	7676990	EqualityExpression	* snapid == 0		7676678	0		==			
ANR	7676991	UnaryOperationExpression	* snapid		7676678	0					
ANR	7676992	UnaryOperator	*		7676678	0					
ANR	7676993	Identifier	snapid		7676678	1					
ANR	7676994	PrimaryExpression	0		7676678	1					
ANR	7676995	CompoundStatement		101:26:1426:1426	7676678	1					
ANR	7676996	ExpressionStatement	"pstrcpy ( tag , SD_MAX_VDI_TAG_LEN , uri -> fragment )"	107:12:1576:1623	7676678	0	True				
ANR	7676997	CallExpression	"pstrcpy ( tag , SD_MAX_VDI_TAG_LEN , uri -> fragment )"		7676678	0					
ANR	7676998	Callee	pstrcpy		7676678	0					
ANR	7676999	Identifier	pstrcpy		7676678	0					
ANR	7677000	ArgumentList	tag		7676678	1					
ANR	7677001	Argument	tag		7676678	0					
ANR	7677002	Identifier	tag		7676678	0					
ANR	7677003	Argument	SD_MAX_VDI_TAG_LEN		7676678	1					
ANR	7677004	Identifier	SD_MAX_VDI_TAG_LEN		7676678	0					
ANR	7677005	Argument	uri -> fragment		7676678	2					
ANR	7677006	PtrMemberAccess	uri -> fragment		7676678	0					
ANR	7677007	Identifier	uri		7676678	0					
ANR	7677008	Identifier	fragment		7676678	1					
ANR	7677009	ElseStatement	else		7676678	0					
ANR	7677010	CompoundStatement		107:11:1513:1513	7676678	0					
ANR	7677011	ExpressionStatement	* snapid = CURRENT_VDI_ID	113:8:1659:1683	7676678	0	True				
ANR	7677012	AssignmentExpression	* snapid = CURRENT_VDI_ID		7676678	0		=			
ANR	7677013	UnaryOperationExpression	* snapid		7676678	0					
ANR	7677014	UnaryOperator	*		7676678	0					
ANR	7677015	Identifier	snapid		7676678	1					
ANR	7677016	Identifier	CURRENT_VDI_ID		7676678	1					
ANR	7677017	Label	out :	119:0:1720:1723	7676678	12	True				
ANR	7677018	Identifier	out		7676678	0					
ANR	7677019	IfStatement	if ( qp )		7676678	13					
ANR	7677020	Condition	qp	121:8:1734:1735	7676678	0	True				
ANR	7677021	Identifier	qp		7676678	0					
ANR	7677022	CompoundStatement		117:12:1603:1603	7676678	1					
ANR	7677023	ExpressionStatement	query_params_free ( qp )	123:8:1749:1770	7676678	0	True				
ANR	7677024	CallExpression	query_params_free ( qp )		7676678	0					
ANR	7677025	Callee	query_params_free		7676678	0					
ANR	7677026	Identifier	query_params_free		7676678	0					
ANR	7677027	ArgumentList	qp		7676678	1					
ANR	7677028	Argument	qp		7676678	0					
ANR	7677029	Identifier	qp		7676678	0					
ANR	7677030	ExpressionStatement	uri_free ( uri )	127:4:1784:1797	7676678	14	True				
ANR	7677031	CallExpression	uri_free ( uri )		7676678	0					
ANR	7677032	Callee	uri_free		7676678	0					
ANR	7677033	Identifier	uri_free		7676678	0					
ANR	7677034	ArgumentList	uri		7676678	1					
ANR	7677035	Argument	uri		7676678	0					
ANR	7677036	Identifier	uri		7676678	0					
ANR	7677037	ReturnStatement	return ret ;	129:4:1804:1814	7676678	15	True				
ANR	7677038	Identifier	ret		7676678	0					
ANR	7677039	ReturnType	static int		7676678	1					
ANR	7677040	Identifier	sd_parse_uri		7676678	2					
ANR	7677041	ParameterList	"BDRVSheepdogState * s , const char * filename , char * vdi , uint32_t * snapid , char * tag"		7676678	3					
ANR	7677042	Parameter	BDRVSheepdogState * s	1:24:24:43	7676678	0	True				
ANR	7677043	ParameterType	BDRVSheepdogState *		7676678	0					
ANR	7677044	Identifier	s		7676678	1					
ANR	7677045	Parameter	const char * filename	1:46:46:65	7676678	1	True				
ANR	7677046	ParameterType	const char *		7676678	0					
ANR	7677047	Identifier	filename		7676678	1					
ANR	7677048	Parameter	char * vdi	3:24:93:101	7676678	2	True				
ANR	7677049	ParameterType	char *		7676678	0					
ANR	7677050	Identifier	vdi		7676678	1					
ANR	7677051	Parameter	uint32_t * snapid	3:35:104:119	7676678	3	True				
ANR	7677052	ParameterType	uint32_t *		7676678	0					
ANR	7677053	Identifier	snapid		7676678	1					
ANR	7677054	Parameter	char * tag	3:53:122:130	7676678	4	True				
ANR	7677055	ParameterType	char *		7676678	0					
ANR	7677056	Identifier	tag		7676678	1					
ANR	7677057	CFGEntryNode	ENTRY		7676678		True				
ANR	7677058	CFGExitNode	EXIT		7676678		True				
ANR	7677059	Symbol	uri -> fragment		7676678						
ANR	7677060	Symbol	* qp		7676678						
ANR	7677061	Symbol	* * qp		7676678						
ANR	7677062	Symbol	uri -> server		7676678						
ANR	7677063	Symbol	uri_parse		7676678						
ANR	7677064	Symbol	query_params_parse		7676678						
ANR	7677065	Symbol	SD_MAX_VDI_LEN		7676678						
ANR	7677066	Symbol	qp -> p [ 0 ] . value		7676678						
ANR	7677067	Symbol	* uri		7676678						
ANR	7677068	Symbol	g_strdup		7676678						
ANR	7677069	Symbol	strtoul		7676678						
ANR	7677070	Symbol	tag		7676678						
ANR	7677071	Symbol	uri -> query		7676678						
ANR	7677072	Symbol	* qp -> p		7676678						
ANR	7677073	Symbol	snapid		7676678						
ANR	7677074	Symbol	s -> host_spec		7676678						
ANR	7677075	Symbol	qp		7676678						
ANR	7677076	Symbol	ret		7676678						
ANR	7677077	Symbol	strcmp		7676678						
ANR	7677078	Symbol	NULL		7676678						
ANR	7677079	Symbol	SD_MAX_VDI_TAG_LEN		7676678						
ANR	7677080	Symbol	qp -> p [ 0 ] . name		7676678						
ANR	7677081	Symbol	false		7676678						
ANR	7677082	Symbol	* snapid		7676678						
ANR	7677083	Symbol	CURRENT_VDI_ID		7676678						
ANR	7677084	Symbol	uri		7676678						
ANR	7677085	Symbol	uri -> path		7676678						
ANR	7677086	Symbol	EINVAL		7676678						
ANR	7677087	Symbol	uri -> port		7676678						
ANR	7677088	Symbol	uri -> scheme		7676678						
ANR	7677089	Symbol	s		7676678						
ANR	7677090	Symbol	filename		7676678						
ANR	7677091	Symbol	qp -> p		7676678						
ANR	7677092	Symbol	qp -> n		7676678						
ANR	7677093	Symbol	true		7676678						
ANR	7677094	Symbol	s -> is_unix		7676678						
ANR	7677095	Symbol	vdi		7676678						
ANR	7677096	Symbol	* s		7676678						
