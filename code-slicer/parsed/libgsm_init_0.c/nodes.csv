command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5188067	File	/home/p4ultr4n/workplace/ReVeal/raw_code/libgsm_init_0.c								
ANR	5188068	Function	libgsm_init	1:0:0:1740							
ANR	5188069	FunctionDef	libgsm_init (AVCodecContext * avctx)		5188068	0					
ANR	5188070	CompoundStatement		1:54:54:1740	5188068	0					
ANR	5188071	IfStatement	if ( avctx -> channels > 1 )		5188068	0					
ANR	5188072	Condition	avctx -> channels > 1	3:8:65:83	5188068	0	True				
ANR	5188073	RelationalExpression	avctx -> channels > 1		5188068	0		>			
ANR	5188074	PtrMemberAccess	avctx -> channels		5188068	0					
ANR	5188075	Identifier	avctx		5188068	0					
ANR	5188076	Identifier	channels		5188068	1					
ANR	5188077	PrimaryExpression	1		5188068	1					
ANR	5188078	CompoundStatement		3:29:31:31	5188068	1					
ANR	5188079	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Mono required for GSM, got %d channels\\n"" , avctx -> channels )"	5:8:97:201	5188068	0	True				
ANR	5188080	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Mono required for GSM, got %d channels\\n"" , avctx -> channels )"		5188068	0					
ANR	5188081	Callee	av_log		5188068	0					
ANR	5188082	Identifier	av_log		5188068	0					
ANR	5188083	ArgumentList	avctx		5188068	1					
ANR	5188084	Argument	avctx		5188068	0					
ANR	5188085	Identifier	avctx		5188068	0					
ANR	5188086	Argument	AV_LOG_ERROR		5188068	1					
ANR	5188087	Identifier	AV_LOG_ERROR		5188068	0					
ANR	5188088	Argument	"""Mono required for GSM, got %d channels\\n"""		5188068	2					
ANR	5188089	PrimaryExpression	"""Mono required for GSM, got %d channels\\n"""		5188068	0					
ANR	5188090	Argument	avctx -> channels		5188068	3					
ANR	5188091	PtrMemberAccess	avctx -> channels		5188068	0					
ANR	5188092	Identifier	avctx		5188068	0					
ANR	5188093	Identifier	channels		5188068	1					
ANR	5188094	ReturnStatement	return - 1 ;	9:8:212:221	5188068	1	True				
ANR	5188095	UnaryOperationExpression	- 1		5188068	0					
ANR	5188096	UnaryOperator	-		5188068	0					
ANR	5188097	PrimaryExpression	1		5188068	1					
ANR	5188098	IfStatement	if ( avctx -> codec -> decode )		5188068	1					
ANR	5188099	Condition	avctx -> codec -> decode	15:7:240:259	5188068	0	True				
ANR	5188100	PtrMemberAccess	avctx -> codec -> decode		5188068	0					
ANR	5188101	PtrMemberAccess	avctx -> codec		5188068	0					
ANR	5188102	Identifier	avctx		5188068	0					
ANR	5188103	Identifier	codec		5188068	1					
ANR	5188104	Identifier	decode		5188068	1					
ANR	5188105	CompoundStatement		15:28:206:206	5188068	1					
ANR	5188106	IfStatement	if ( ! avctx -> channels )		5188068	0					
ANR	5188107	Condition	! avctx -> channels	17:11:275:290	5188068	0	True				
ANR	5188108	UnaryOperationExpression	! avctx -> channels		5188068	0					
ANR	5188109	UnaryOperator	!		5188068	0					
ANR	5188110	PtrMemberAccess	avctx -> channels		5188068	1					
ANR	5188111	Identifier	avctx		5188068	0					
ANR	5188112	Identifier	channels		5188068	1					
ANR	5188113	ExpressionStatement	avctx -> channels = 1	19:12:306:324	5188068	1	True				
ANR	5188114	AssignmentExpression	avctx -> channels = 1		5188068	0		=			
ANR	5188115	PtrMemberAccess	avctx -> channels		5188068	0					
ANR	5188116	Identifier	avctx		5188068	0					
ANR	5188117	Identifier	channels		5188068	1					
ANR	5188118	PrimaryExpression	1		5188068	1					
ANR	5188119	IfStatement	if ( ! avctx -> sample_rate )		5188068	1					
ANR	5188120	Condition	! avctx -> sample_rate	23:11:340:358	5188068	0	True				
ANR	5188121	UnaryOperationExpression	! avctx -> sample_rate		5188068	0					
ANR	5188122	UnaryOperator	!		5188068	0					
ANR	5188123	PtrMemberAccess	avctx -> sample_rate		5188068	1					
ANR	5188124	Identifier	avctx		5188068	0					
ANR	5188125	Identifier	sample_rate		5188068	1					
ANR	5188126	ExpressionStatement	avctx -> sample_rate = 8000	25:12:374:398	5188068	1	True				
ANR	5188127	AssignmentExpression	avctx -> sample_rate = 8000		5188068	0		=			
ANR	5188128	PtrMemberAccess	avctx -> sample_rate		5188068	0					
ANR	5188129	Identifier	avctx		5188068	0					
ANR	5188130	Identifier	sample_rate		5188068	1					
ANR	5188131	PrimaryExpression	8000		5188068	1					
ANR	5188132	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16	29:8:411:448	5188068	2	True				
ANR	5188133	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16		5188068	0		=			
ANR	5188134	PtrMemberAccess	avctx -> sample_fmt		5188068	0					
ANR	5188135	Identifier	avctx		5188068	0					
ANR	5188136	Identifier	sample_fmt		5188068	1					
ANR	5188137	Identifier	AV_SAMPLE_FMT_S16		5188068	1					
ANR	5188138	ElseStatement	else		5188068	0					
ANR	5188139	CompoundStatement		31:9:405:405	5188068	0					
ANR	5188140	IfStatement	if ( avctx -> sample_rate != 8000 )		5188068	0					
ANR	5188141	Condition	avctx -> sample_rate != 8000	33:12:475:500	5188068	0	True				
ANR	5188142	EqualityExpression	avctx -> sample_rate != 8000		5188068	0		!=			
ANR	5188143	PtrMemberAccess	avctx -> sample_rate		5188068	0					
ANR	5188144	Identifier	avctx		5188068	0					
ANR	5188145	Identifier	sample_rate		5188068	1					
ANR	5188146	PrimaryExpression	8000		5188068	1					
ANR	5188147	CompoundStatement		33:40:448:448	5188068	1					
ANR	5188148	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Sample rate 8000Hz required for GSM, got %dHz\\n"" , avctx -> sample_rate )"	35:12:518:633	5188068	0	True				
ANR	5188149	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Sample rate 8000Hz required for GSM, got %dHz\\n"" , avctx -> sample_rate )"		5188068	0					
ANR	5188150	Callee	av_log		5188068	0					
ANR	5188151	Identifier	av_log		5188068	0					
ANR	5188152	ArgumentList	avctx		5188068	1					
ANR	5188153	Argument	avctx		5188068	0					
ANR	5188154	Identifier	avctx		5188068	0					
ANR	5188155	Argument	AV_LOG_ERROR		5188068	1					
ANR	5188156	Identifier	AV_LOG_ERROR		5188068	0					
ANR	5188157	Argument	"""Sample rate 8000Hz required for GSM, got %dHz\\n"""		5188068	2					
ANR	5188158	PrimaryExpression	"""Sample rate 8000Hz required for GSM, got %dHz\\n"""		5188068	0					
ANR	5188159	Argument	avctx -> sample_rate		5188068	3					
ANR	5188160	PtrMemberAccess	avctx -> sample_rate		5188068	0					
ANR	5188161	Identifier	avctx		5188068	0					
ANR	5188162	Identifier	sample_rate		5188068	1					
ANR	5188163	IfStatement	if ( avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		5188068	1					
ANR	5188164	Condition	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL	39:15:651:705	5188068	0	True				
ANR	5188165	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		5188068	0		>			
ANR	5188166	PtrMemberAccess	avctx -> strict_std_compliance		5188068	0					
ANR	5188167	Identifier	avctx		5188068	0					
ANR	5188168	Identifier	strict_std_compliance		5188068	1					
ANR	5188169	Identifier	FF_COMPLIANCE_UNOFFICIAL		5188068	1					
ANR	5188170	ReturnStatement	return - 1 ;	41:16:725:734	5188068	1	True				
ANR	5188171	UnaryOperationExpression	- 1		5188068	0					
ANR	5188172	UnaryOperator	-		5188068	0					
ANR	5188173	PrimaryExpression	1		5188068	1					
ANR	5188174	IfStatement	if ( avctx -> bit_rate != 13000 && avctx -> bit_rate != 13200 && avctx -> bit_rate != 0 )		5188068	1					
ANR	5188175	Condition	avctx -> bit_rate != 13000 && avctx -> bit_rate != 13200 && avctx -> bit_rate != 0	45:12:760:894	5188068	0	True				
ANR	5188176	AndExpression	avctx -> bit_rate != 13000 && avctx -> bit_rate != 13200 && avctx -> bit_rate != 0		5188068	0		&&			
ANR	5188177	EqualityExpression	avctx -> bit_rate != 13000		5188068	0		!=			
ANR	5188178	PtrMemberAccess	avctx -> bit_rate		5188068	0					
ANR	5188179	Identifier	avctx		5188068	0					
ANR	5188180	Identifier	bit_rate		5188068	1					
ANR	5188181	PrimaryExpression	13000		5188068	1					
ANR	5188182	AndExpression	avctx -> bit_rate != 13200 && avctx -> bit_rate != 0		5188068	1		&&			
ANR	5188183	EqualityExpression	avctx -> bit_rate != 13200		5188068	0		!=			
ANR	5188184	PtrMemberAccess	avctx -> bit_rate		5188068	0					
ANR	5188185	Identifier	avctx		5188068	0					
ANR	5188186	Identifier	bit_rate		5188068	1					
ANR	5188187	PrimaryExpression	13200		5188068	1					
ANR	5188188	EqualityExpression	avctx -> bit_rate != 0		5188068	1		!=			
ANR	5188189	PtrMemberAccess	avctx -> bit_rate		5188068	0					
ANR	5188190	Identifier	avctx		5188068	0					
ANR	5188191	Identifier	bit_rate		5188068	1					
ANR	5188192	PrimaryExpression	0		5188068	1					
ANR	5188193	CompoundStatement		49:94:902:902	5188068	1					
ANR	5188194	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Bitrate 13000bps required for GSM, got %dbps\\n"" , avctx -> bit_rate )"	51:12:972:1083	5188068	0	True				
ANR	5188195	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Bitrate 13000bps required for GSM, got %dbps\\n"" , avctx -> bit_rate )"		5188068	0					
ANR	5188196	Callee	av_log		5188068	0					
ANR	5188197	Identifier	av_log		5188068	0					
ANR	5188198	ArgumentList	avctx		5188068	1					
ANR	5188199	Argument	avctx		5188068	0					
ANR	5188200	Identifier	avctx		5188068	0					
ANR	5188201	Argument	AV_LOG_ERROR		5188068	1					
ANR	5188202	Identifier	AV_LOG_ERROR		5188068	0					
ANR	5188203	Argument	"""Bitrate 13000bps required for GSM, got %dbps\\n"""		5188068	2					
ANR	5188204	PrimaryExpression	"""Bitrate 13000bps required for GSM, got %dbps\\n"""		5188068	0					
ANR	5188205	Argument	avctx -> bit_rate		5188068	3					
ANR	5188206	PtrMemberAccess	avctx -> bit_rate		5188068	0					
ANR	5188207	Identifier	avctx		5188068	0					
ANR	5188208	Identifier	bit_rate		5188068	1					
ANR	5188209	IfStatement	if ( avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		5188068	1					
ANR	5188210	Condition	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL	55:15:1101:1155	5188068	0	True				
ANR	5188211	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		5188068	0		>			
ANR	5188212	PtrMemberAccess	avctx -> strict_std_compliance		5188068	0					
ANR	5188213	Identifier	avctx		5188068	0					
ANR	5188214	Identifier	strict_std_compliance		5188068	1					
ANR	5188215	Identifier	FF_COMPLIANCE_UNOFFICIAL		5188068	1					
ANR	5188216	ReturnStatement	return - 1 ;	57:16:1175:1184	5188068	1	True				
ANR	5188217	UnaryOperationExpression	- 1		5188068	0					
ANR	5188218	UnaryOperator	-		5188068	0					
ANR	5188219	PrimaryExpression	1		5188068	1					
ANR	5188220	ExpressionStatement	avctx -> priv_data = gsm_create ( )	65:4:1211:1242	5188068	2	True				
ANR	5188221	AssignmentExpression	avctx -> priv_data = gsm_create ( )		5188068	0		=			
ANR	5188222	PtrMemberAccess	avctx -> priv_data		5188068	0					
ANR	5188223	Identifier	avctx		5188068	0					
ANR	5188224	Identifier	priv_data		5188068	1					
ANR	5188225	CallExpression	gsm_create ( )		5188068	1					
ANR	5188226	Callee	gsm_create		5188068	0					
ANR	5188227	Identifier	gsm_create		5188068	0					
ANR	5188228	ArgumentList			5188068	1					
ANR	5188229	SwitchStatement	switch ( avctx -> codec_id )		5188068	3					
ANR	5188230	Condition	avctx -> codec_id	69:11:1258:1272	5188068	0	True				
ANR	5188231	PtrMemberAccess	avctx -> codec_id		5188068	0					
ANR	5188232	Identifier	avctx		5188068	0					
ANR	5188233	Identifier	codec_id		5188068	1					
ANR	5188234	CompoundStatement		69:28:1220:1220	5188068	1					
ANR	5188235	Label	case CODEC_ID_GSM :	71:4:1282:1299	5188068	0	True				
ANR	5188236	Identifier	CODEC_ID_GSM		5188068	0					
ANR	5188237	ExpressionStatement	avctx -> frame_size = GSM_FRAME_SIZE	73:8:1310:1344	5188068	1	True				
ANR	5188238	AssignmentExpression	avctx -> frame_size = GSM_FRAME_SIZE		5188068	0		=			
ANR	5188239	PtrMemberAccess	avctx -> frame_size		5188068	0					
ANR	5188240	Identifier	avctx		5188068	0					
ANR	5188241	Identifier	frame_size		5188068	1					
ANR	5188242	Identifier	GSM_FRAME_SIZE		5188068	1					
ANR	5188243	ExpressionStatement	avctx -> block_align = GSM_BLOCK_SIZE	75:8:1355:1390	5188068	2	True				
ANR	5188244	AssignmentExpression	avctx -> block_align = GSM_BLOCK_SIZE		5188068	0		=			
ANR	5188245	PtrMemberAccess	avctx -> block_align		5188068	0					
ANR	5188246	Identifier	avctx		5188068	0					
ANR	5188247	Identifier	block_align		5188068	1					
ANR	5188248	Identifier	GSM_BLOCK_SIZE		5188068	1					
ANR	5188249	BreakStatement	break ;	77:8:1401:1406	5188068	3	True				
ANR	5188250	Label	case CODEC_ID_GSM_MS :	79:4:1413:1433	5188068	4	True				
ANR	5188251	Identifier	CODEC_ID_GSM_MS		5188068	0					
ANR	5188252	CompoundStatement		81:8:1391:1402	5188068	5					
ANR	5188253	IdentifierDeclStatement	int one = 1 ;	81:8:1446:1457	5188068	0	True				
ANR	5188254	IdentifierDecl	one = 1		5188068	0					
ANR	5188255	IdentifierDeclType	int		5188068	0					
ANR	5188256	Identifier	one		5188068	1					
ANR	5188257	AssignmentExpression	one = 1		5188068	2		=			
ANR	5188258	Identifier	one		5188068	0					
ANR	5188259	PrimaryExpression	1		5188068	1					
ANR	5188260	ExpressionStatement	"gsm_option ( avctx -> priv_data , GSM_OPT_WAV49 , & one )"	83:8:1468:1517	5188068	1	True				
ANR	5188261	CallExpression	"gsm_option ( avctx -> priv_data , GSM_OPT_WAV49 , & one )"		5188068	0					
ANR	5188262	Callee	gsm_option		5188068	0					
ANR	5188263	Identifier	gsm_option		5188068	0					
ANR	5188264	ArgumentList	avctx -> priv_data		5188068	1					
ANR	5188265	Argument	avctx -> priv_data		5188068	0					
ANR	5188266	PtrMemberAccess	avctx -> priv_data		5188068	0					
ANR	5188267	Identifier	avctx		5188068	0					
ANR	5188268	Identifier	priv_data		5188068	1					
ANR	5188269	Argument	GSM_OPT_WAV49		5188068	1					
ANR	5188270	Identifier	GSM_OPT_WAV49		5188068	0					
ANR	5188271	Argument	& one		5188068	2					
ANR	5188272	UnaryOperationExpression	& one		5188068	0					
ANR	5188273	UnaryOperator	&		5188068	0					
ANR	5188274	Identifier	one		5188068	1					
ANR	5188275	ExpressionStatement	avctx -> frame_size = 2 * GSM_FRAME_SIZE	85:8:1528:1564	5188068	2	True				
ANR	5188276	AssignmentExpression	avctx -> frame_size = 2 * GSM_FRAME_SIZE		5188068	0		=			
ANR	5188277	PtrMemberAccess	avctx -> frame_size		5188068	0					
ANR	5188278	Identifier	avctx		5188068	0					
ANR	5188279	Identifier	frame_size		5188068	1					
ANR	5188280	MultiplicativeExpression	2 * GSM_FRAME_SIZE		5188068	1		*			
ANR	5188281	PrimaryExpression	2		5188068	0					
ANR	5188282	Identifier	GSM_FRAME_SIZE		5188068	1					
ANR	5188283	ExpressionStatement	avctx -> block_align = GSM_MS_BLOCK_SIZE	87:8:1575:1613	5188068	3	True				
ANR	5188284	AssignmentExpression	avctx -> block_align = GSM_MS_BLOCK_SIZE		5188068	0		=			
ANR	5188285	PtrMemberAccess	avctx -> block_align		5188068	0					
ANR	5188286	Identifier	avctx		5188068	0					
ANR	5188287	Identifier	block_align		5188068	1					
ANR	5188288	Identifier	GSM_MS_BLOCK_SIZE		5188068	1					
ANR	5188289	ExpressionStatement	avctx -> coded_frame = avcodec_alloc_frame ( )	95:4:1640:1681	5188068	4	True				
ANR	5188290	AssignmentExpression	avctx -> coded_frame = avcodec_alloc_frame ( )		5188068	0		=			
ANR	5188291	PtrMemberAccess	avctx -> coded_frame		5188068	0					
ANR	5188292	Identifier	avctx		5188068	0					
ANR	5188293	Identifier	coded_frame		5188068	1					
ANR	5188294	CallExpression	avcodec_alloc_frame ( )		5188068	1					
ANR	5188295	Callee	avcodec_alloc_frame		5188068	0					
ANR	5188296	Identifier	avcodec_alloc_frame		5188068	0					
ANR	5188297	ArgumentList			5188068	1					
ANR	5188298	ExpressionStatement	avctx -> coded_frame -> key_frame = 1	97:4:1688:1720	5188068	5	True				
ANR	5188299	AssignmentExpression	avctx -> coded_frame -> key_frame = 1		5188068	0		=			
ANR	5188300	PtrMemberAccess	avctx -> coded_frame -> key_frame		5188068	0					
ANR	5188301	PtrMemberAccess	avctx -> coded_frame		5188068	0					
ANR	5188302	Identifier	avctx		5188068	0					
ANR	5188303	Identifier	coded_frame		5188068	1					
ANR	5188304	Identifier	key_frame		5188068	1					
ANR	5188305	PrimaryExpression	1		5188068	1					
ANR	5188306	ReturnStatement	return 0 ;	101:4:1729:1737	5188068	6	True				
ANR	5188307	PrimaryExpression	0		5188068	0					
ANR	5188308	ReturnType	static av_cold int		5188068	1					
ANR	5188309	Identifier	libgsm_init		5188068	2					
ANR	5188310	ParameterList	AVCodecContext * avctx		5188068	3					
ANR	5188311	Parameter	AVCodecContext * avctx	1:31:31:51	5188068	0	True				
ANR	5188312	ParameterType	AVCodecContext *		5188068	0					
ANR	5188313	Identifier	avctx		5188068	1					
ANR	5188314	CFGEntryNode	ENTRY		5188068		True				
ANR	5188315	CFGExitNode	EXIT		5188068		True				
ANR	5188316	Symbol	GSM_OPT_WAV49		5188068						
ANR	5188317	Symbol	GSM_MS_BLOCK_SIZE		5188068						
ANR	5188318	Symbol	avctx -> codec_id		5188068						
ANR	5188319	Symbol	avcodec_alloc_frame		5188068						
ANR	5188320	Symbol	GSM_FRAME_SIZE		5188068						
ANR	5188321	Symbol	& one		5188068						
ANR	5188322	Symbol	AV_SAMPLE_FMT_S16		5188068						
ANR	5188323	Symbol	avctx -> channels		5188068						
ANR	5188324	Symbol	avctx -> block_align		5188068						
ANR	5188325	Symbol	avctx -> coded_frame		5188068						
ANR	5188326	Symbol	GSM_BLOCK_SIZE		5188068						
ANR	5188327	Symbol	avctx -> codec -> decode		5188068						
ANR	5188328	Symbol	* avctx -> codec		5188068						
ANR	5188329	Symbol	* avctx -> coded_frame		5188068						
ANR	5188330	Symbol	avctx		5188068						
ANR	5188331	Symbol	avctx -> sample_fmt		5188068						
ANR	5188332	Symbol	FF_COMPLIANCE_UNOFFICIAL		5188068						
ANR	5188333	Symbol	avctx -> codec		5188068						
ANR	5188334	Symbol	AV_LOG_ERROR		5188068						
ANR	5188335	Symbol	one		5188068						
ANR	5188336	Symbol	* * avctx		5188068						
ANR	5188337	Symbol	avctx -> priv_data		5188068						
ANR	5188338	Symbol	avctx -> sample_rate		5188068						
ANR	5188339	Symbol	avctx -> coded_frame -> key_frame		5188068						
ANR	5188340	Symbol	avctx -> strict_std_compliance		5188068						
ANR	5188341	Symbol	* avctx		5188068						
ANR	5188342	Symbol	avctx -> bit_rate		5188068						
ANR	5188343	Symbol	avctx -> frame_size		5188068						
ANR	5188344	Symbol	gsm_create		5188068						
