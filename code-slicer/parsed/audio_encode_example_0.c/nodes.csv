command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	672751	File	/home/p4ultr4n/workplace/ReVeal/raw_code/audio_encode_example_0.c								
ANR	672752	Function	audio_encode_example	1:0:0:4074							
ANR	672753	FunctionDef	audio_encode_example (const char * filename)		672752	0					
ANR	672754	CompoundStatement		3:0:56:4074	672752	0					
ANR	672755	IdentifierDeclStatement	AVCodec * codec ;	5:4:63:77	672752	0	True				
ANR	672756	IdentifierDecl	* codec		672752	0					
ANR	672757	IdentifierDeclType	AVCodec *		672752	0					
ANR	672758	Identifier	codec		672752	1					
ANR	672759	IdentifierDeclStatement	AVCodecContext * c = NULL ;	7:4:84:107	672752	1	True				
ANR	672760	IdentifierDecl	* c = NULL		672752	0					
ANR	672761	IdentifierDeclType	AVCodecContext *		672752	0					
ANR	672762	Identifier	c		672752	1					
ANR	672763	AssignmentExpression	* c = NULL		672752	2		=			
ANR	672764	Identifier	NULL		672752	0					
ANR	672765	Identifier	NULL		672752	1					
ANR	672766	IdentifierDeclStatement	AVFrame * frame ;	9:4:114:128	672752	2	True				
ANR	672767	IdentifierDecl	* frame		672752	0					
ANR	672768	IdentifierDeclType	AVFrame *		672752	0					
ANR	672769	Identifier	frame		672752	1					
ANR	672770	IdentifierDeclStatement	AVPacket pkt ;	11:4:135:147	672752	3	True				
ANR	672771	IdentifierDecl	pkt		672752	0					
ANR	672772	IdentifierDeclType	AVPacket		672752	0					
ANR	672773	Identifier	pkt		672752	1					
ANR	672774	IdentifierDeclStatement	"int i , j , k , ret , got_output ;"	13:4:154:182	672752	4	True				
ANR	672775	IdentifierDecl	i		672752	0					
ANR	672776	IdentifierDeclType	int		672752	0					
ANR	672777	Identifier	i		672752	1					
ANR	672778	IdentifierDecl	j		672752	1					
ANR	672779	IdentifierDeclType	int		672752	0					
ANR	672780	Identifier	j		672752	1					
ANR	672781	IdentifierDecl	k		672752	2					
ANR	672782	IdentifierDeclType	int		672752	0					
ANR	672783	Identifier	k		672752	1					
ANR	672784	IdentifierDecl	ret		672752	3					
ANR	672785	IdentifierDeclType	int		672752	0					
ANR	672786	Identifier	ret		672752	1					
ANR	672787	IdentifierDecl	got_output		672752	4					
ANR	672788	IdentifierDeclType	int		672752	0					
ANR	672789	Identifier	got_output		672752	1					
ANR	672790	IdentifierDeclStatement	int buffer_size ;	15:4:189:204	672752	5	True				
ANR	672791	IdentifierDecl	buffer_size		672752	0					
ANR	672792	IdentifierDeclType	int		672752	0					
ANR	672793	Identifier	buffer_size		672752	1					
ANR	672794	IdentifierDeclStatement	FILE * f ;	17:4:211:218	672752	6	True				
ANR	672795	IdentifierDecl	* f		672752	0					
ANR	672796	IdentifierDeclType	FILE *		672752	0					
ANR	672797	Identifier	f		672752	1					
ANR	672798	IdentifierDeclStatement	uint16_t * samples ;	19:4:225:242	672752	7	True				
ANR	672799	IdentifierDecl	* samples		672752	0					
ANR	672800	IdentifierDeclType	uint16_t *		672752	0					
ANR	672801	Identifier	samples		672752	1					
ANR	672802	IdentifierDeclStatement	"float t , tincr ;"	21:4:249:263	672752	8	True				
ANR	672803	IdentifierDecl	t		672752	0					
ANR	672804	IdentifierDeclType	float		672752	0					
ANR	672805	Identifier	t		672752	1					
ANR	672806	IdentifierDecl	tincr		672752	1					
ANR	672807	IdentifierDeclType	float		672752	0					
ANR	672808	Identifier	tincr		672752	1					
ANR	672809	ExpressionStatement	"printf ( ""Encode audio file %s\\n"" , filename )"	25:4:272:314	672752	9	True				
ANR	672810	CallExpression	"printf ( ""Encode audio file %s\\n"" , filename )"		672752	0					
ANR	672811	Callee	printf		672752	0					
ANR	672812	Identifier	printf		672752	0					
ANR	672813	ArgumentList	"""Encode audio file %s\\n"""		672752	1					
ANR	672814	Argument	"""Encode audio file %s\\n"""		672752	0					
ANR	672815	PrimaryExpression	"""Encode audio file %s\\n"""		672752	0					
ANR	672816	Argument	filename		672752	1					
ANR	672817	Identifier	filename		672752	0					
ANR	672818	ExpressionStatement	codec = avcodec_find_encoder ( AV_CODEC_ID_MP2 )	31:4:355:400	672752	10	True				
ANR	672819	AssignmentExpression	codec = avcodec_find_encoder ( AV_CODEC_ID_MP2 )		672752	0		=			
ANR	672820	Identifier	codec		672752	0					
ANR	672821	CallExpression	avcodec_find_encoder ( AV_CODEC_ID_MP2 )		672752	1					
ANR	672822	Callee	avcodec_find_encoder		672752	0					
ANR	672823	Identifier	avcodec_find_encoder		672752	0					
ANR	672824	ArgumentList	AV_CODEC_ID_MP2		672752	1					
ANR	672825	Argument	AV_CODEC_ID_MP2		672752	0					
ANR	672826	Identifier	AV_CODEC_ID_MP2		672752	0					
ANR	672827	IfStatement	if ( ! codec )		672752	11					
ANR	672828	Condition	! codec	33:8:411:416	672752	0	True				
ANR	672829	UnaryOperationExpression	! codec		672752	0					
ANR	672830	UnaryOperator	!		672752	0					
ANR	672831	Identifier	codec		672752	1					
ANR	672832	CompoundStatement		31:16:362:362	672752	1					
ANR	672833	ExpressionStatement	"fprintf ( stderr , ""Codec not found\\n"" )"	35:8:430:466	672752	0	True				
ANR	672834	CallExpression	"fprintf ( stderr , ""Codec not found\\n"" )"		672752	0					
ANR	672835	Callee	fprintf		672752	0					
ANR	672836	Identifier	fprintf		672752	0					
ANR	672837	ArgumentList	stderr		672752	1					
ANR	672838	Argument	stderr		672752	0					
ANR	672839	Identifier	stderr		672752	0					
ANR	672840	Argument	"""Codec not found\\n"""		672752	1					
ANR	672841	PrimaryExpression	"""Codec not found\\n"""		672752	0					
ANR	672842	ExpressionStatement	exit ( 1 )	37:8:477:484	672752	1	True				
ANR	672843	CallExpression	exit ( 1 )		672752	0					
ANR	672844	Callee	exit		672752	0					
ANR	672845	Identifier	exit		672752	0					
ANR	672846	ArgumentList	1		672752	1					
ANR	672847	Argument	1		672752	0					
ANR	672848	PrimaryExpression	1		672752	0					
ANR	672849	ExpressionStatement	c = avcodec_alloc_context3 ( codec )	43:4:500:533	672752	12	True				
ANR	672850	AssignmentExpression	c = avcodec_alloc_context3 ( codec )		672752	0		=			
ANR	672851	Identifier	c		672752	0					
ANR	672852	CallExpression	avcodec_alloc_context3 ( codec )		672752	1					
ANR	672853	Callee	avcodec_alloc_context3		672752	0					
ANR	672854	Identifier	avcodec_alloc_context3		672752	0					
ANR	672855	ArgumentList	codec		672752	1					
ANR	672856	Argument	codec		672752	0					
ANR	672857	Identifier	codec		672752	0					
ANR	672858	IfStatement	if ( ! c )		672752	13					
ANR	672859	Condition	! c	45:8:544:545	672752	0	True				
ANR	672860	UnaryOperationExpression	! c		672752	0					
ANR	672861	UnaryOperator	!		672752	0					
ANR	672862	Identifier	c		672752	1					
ANR	672863	CompoundStatement		43:12:491:491	672752	1					
ANR	672864	ExpressionStatement	"fprintf ( stderr , ""Could not allocate audio codec context\\n"" )"	47:8:559:618	672752	0	True				
ANR	672865	CallExpression	"fprintf ( stderr , ""Could not allocate audio codec context\\n"" )"		672752	0					
ANR	672866	Callee	fprintf		672752	0					
ANR	672867	Identifier	fprintf		672752	0					
ANR	672868	ArgumentList	stderr		672752	1					
ANR	672869	Argument	stderr		672752	0					
ANR	672870	Identifier	stderr		672752	0					
ANR	672871	Argument	"""Could not allocate audio codec context\\n"""		672752	1					
ANR	672872	PrimaryExpression	"""Could not allocate audio codec context\\n"""		672752	0					
ANR	672873	ExpressionStatement	exit ( 1 )	49:8:629:636	672752	1	True				
ANR	672874	CallExpression	exit ( 1 )		672752	0					
ANR	672875	Callee	exit		672752	0					
ANR	672876	Identifier	exit		672752	0					
ANR	672877	ArgumentList	1		672752	1					
ANR	672878	Argument	1		672752	0					
ANR	672879	PrimaryExpression	1		672752	0					
ANR	672880	ExpressionStatement	c -> bit_rate = 64000	57:4:685:704	672752	14	True				
ANR	672881	AssignmentExpression	c -> bit_rate = 64000		672752	0		=			
ANR	672882	PtrMemberAccess	c -> bit_rate		672752	0					
ANR	672883	Identifier	c		672752	0					
ANR	672884	Identifier	bit_rate		672752	1					
ANR	672885	PrimaryExpression	64000		672752	1					
ANR	672886	ExpressionStatement	c -> sample_fmt = AV_SAMPLE_FMT_S16	63:4:770:803	672752	15	True				
ANR	672887	AssignmentExpression	c -> sample_fmt = AV_SAMPLE_FMT_S16		672752	0		=			
ANR	672888	PtrMemberAccess	c -> sample_fmt		672752	0					
ANR	672889	Identifier	c		672752	0					
ANR	672890	Identifier	sample_fmt		672752	1					
ANR	672891	Identifier	AV_SAMPLE_FMT_S16		672752	1					
ANR	672892	IfStatement	"if ( ! check_sample_fmt ( codec , c -> sample_fmt ) )"		672752	16					
ANR	672893	Condition	"! check_sample_fmt ( codec , c -> sample_fmt )"	65:8:814:852	672752	0	True				
ANR	672894	UnaryOperationExpression	"! check_sample_fmt ( codec , c -> sample_fmt )"		672752	0					
ANR	672895	UnaryOperator	!		672752	0					
ANR	672896	CallExpression	"check_sample_fmt ( codec , c -> sample_fmt )"		672752	1					
ANR	672897	Callee	check_sample_fmt		672752	0					
ANR	672898	Identifier	check_sample_fmt		672752	0					
ANR	672899	ArgumentList	codec		672752	1					
ANR	672900	Argument	codec		672752	0					
ANR	672901	Identifier	codec		672752	0					
ANR	672902	Argument	c -> sample_fmt		672752	1					
ANR	672903	PtrMemberAccess	c -> sample_fmt		672752	0					
ANR	672904	Identifier	c		672752	0					
ANR	672905	Identifier	sample_fmt		672752	1					
ANR	672906	CompoundStatement		63:49:798:798	672752	1					
ANR	672907	ExpressionStatement	"fprintf ( stderr , ""Encoder does not support sample format %s"" , av_get_sample_fmt_name ( c -> sample_fmt ) )"	67:8:866:982	672752	0	True				
ANR	672908	CallExpression	"fprintf ( stderr , ""Encoder does not support sample format %s"" , av_get_sample_fmt_name ( c -> sample_fmt ) )"		672752	0					
ANR	672909	Callee	fprintf		672752	0					
ANR	672910	Identifier	fprintf		672752	0					
ANR	672911	ArgumentList	stderr		672752	1					
ANR	672912	Argument	stderr		672752	0					
ANR	672913	Identifier	stderr		672752	0					
ANR	672914	Argument	"""Encoder does not support sample format %s"""		672752	1					
ANR	672915	PrimaryExpression	"""Encoder does not support sample format %s"""		672752	0					
ANR	672916	Argument	av_get_sample_fmt_name ( c -> sample_fmt )		672752	2					
ANR	672917	CallExpression	av_get_sample_fmt_name ( c -> sample_fmt )		672752	0					
ANR	672918	Callee	av_get_sample_fmt_name		672752	0					
ANR	672919	Identifier	av_get_sample_fmt_name		672752	0					
ANR	672920	ArgumentList	c -> sample_fmt		672752	1					
ANR	672921	Argument	c -> sample_fmt		672752	0					
ANR	672922	PtrMemberAccess	c -> sample_fmt		672752	0					
ANR	672923	Identifier	c		672752	0					
ANR	672924	Identifier	sample_fmt		672752	1					
ANR	672925	ExpressionStatement	exit ( 1 )	71:8:993:1000	672752	1	True				
ANR	672926	CallExpression	exit ( 1 )		672752	0					
ANR	672927	Callee	exit		672752	0					
ANR	672928	Identifier	exit		672752	0					
ANR	672929	ArgumentList	1		672752	1					
ANR	672930	Argument	1		672752	0					
ANR	672931	PrimaryExpression	1		672752	0					
ANR	672932	ExpressionStatement	c -> sample_rate = select_sample_rate ( codec )	79:4:1082:1127	672752	17	True				
ANR	672933	AssignmentExpression	c -> sample_rate = select_sample_rate ( codec )		672752	0		=			
ANR	672934	PtrMemberAccess	c -> sample_rate		672752	0					
ANR	672935	Identifier	c		672752	0					
ANR	672936	Identifier	sample_rate		672752	1					
ANR	672937	CallExpression	select_sample_rate ( codec )		672752	1					
ANR	672938	Callee	select_sample_rate		672752	0					
ANR	672939	Identifier	select_sample_rate		672752	0					
ANR	672940	ArgumentList	codec		672752	1					
ANR	672941	Argument	codec		672752	0					
ANR	672942	Identifier	codec		672752	0					
ANR	672943	ExpressionStatement	c -> channel_layout = select_channel_layout ( codec )	81:4:1134:1182	672752	18	True				
ANR	672944	AssignmentExpression	c -> channel_layout = select_channel_layout ( codec )		672752	0		=			
ANR	672945	PtrMemberAccess	c -> channel_layout		672752	0					
ANR	672946	Identifier	c		672752	0					
ANR	672947	Identifier	channel_layout		672752	1					
ANR	672948	CallExpression	select_channel_layout ( codec )		672752	1					
ANR	672949	Callee	select_channel_layout		672752	0					
ANR	672950	Identifier	select_channel_layout		672752	0					
ANR	672951	ArgumentList	codec		672752	1					
ANR	672952	Argument	codec		672752	0					
ANR	672953	Identifier	codec		672752	0					
ANR	672954	ExpressionStatement	c -> channels = av_get_channel_layout_nb_channels ( c -> channel_layout )	83:4:1189:1261	672752	19	True				
ANR	672955	AssignmentExpression	c -> channels = av_get_channel_layout_nb_channels ( c -> channel_layout )		672752	0		=			
ANR	672956	PtrMemberAccess	c -> channels		672752	0					
ANR	672957	Identifier	c		672752	0					
ANR	672958	Identifier	channels		672752	1					
ANR	672959	CallExpression	av_get_channel_layout_nb_channels ( c -> channel_layout )		672752	1					
ANR	672960	Callee	av_get_channel_layout_nb_channels		672752	0					
ANR	672961	Identifier	av_get_channel_layout_nb_channels		672752	0					
ANR	672962	ArgumentList	c -> channel_layout		672752	1					
ANR	672963	Argument	c -> channel_layout		672752	0					
ANR	672964	PtrMemberAccess	c -> channel_layout		672752	0					
ANR	672965	Identifier	c		672752	0					
ANR	672966	Identifier	channel_layout		672752	1					
ANR	672967	IfStatement	"if ( avcodec_open2 ( c , codec , NULL ) < 0 )"		672752	20					
ANR	672968	Condition	"avcodec_open2 ( c , codec , NULL ) < 0"	89:8:1293:1325	672752	0	True				
ANR	672969	RelationalExpression	"avcodec_open2 ( c , codec , NULL ) < 0"		672752	0		<			
ANR	672970	CallExpression	"avcodec_open2 ( c , codec , NULL )"		672752	0					
ANR	672971	Callee	avcodec_open2		672752	0					
ANR	672972	Identifier	avcodec_open2		672752	0					
ANR	672973	ArgumentList	c		672752	1					
ANR	672974	Argument	c		672752	0					
ANR	672975	Identifier	c		672752	0					
ANR	672976	Argument	codec		672752	1					
ANR	672977	Identifier	codec		672752	0					
ANR	672978	Argument	NULL		672752	2					
ANR	672979	Identifier	NULL		672752	0					
ANR	672980	PrimaryExpression	0		672752	1					
ANR	672981	CompoundStatement		87:43:1271:1271	672752	1					
ANR	672982	ExpressionStatement	"fprintf ( stderr , ""Could not open codec\\n"" )"	91:8:1339:1380	672752	0	True				
ANR	672983	CallExpression	"fprintf ( stderr , ""Could not open codec\\n"" )"		672752	0					
ANR	672984	Callee	fprintf		672752	0					
ANR	672985	Identifier	fprintf		672752	0					
ANR	672986	ArgumentList	stderr		672752	1					
ANR	672987	Argument	stderr		672752	0					
ANR	672988	Identifier	stderr		672752	0					
ANR	672989	Argument	"""Could not open codec\\n"""		672752	1					
ANR	672990	PrimaryExpression	"""Could not open codec\\n"""		672752	0					
ANR	672991	ExpressionStatement	exit ( 1 )	93:8:1391:1398	672752	1	True				
ANR	672992	CallExpression	exit ( 1 )		672752	0					
ANR	672993	Callee	exit		672752	0					
ANR	672994	Identifier	exit		672752	0					
ANR	672995	ArgumentList	1		672752	1					
ANR	672996	Argument	1		672752	0					
ANR	672997	PrimaryExpression	1		672752	0					
ANR	672998	ExpressionStatement	"f = fopen ( filename , ""wb"" )"	99:4:1414:1439	672752	21	True				
ANR	672999	AssignmentExpression	"f = fopen ( filename , ""wb"" )"		672752	0		=			
ANR	673000	Identifier	f		672752	0					
ANR	673001	CallExpression	"fopen ( filename , ""wb"" )"		672752	1					
ANR	673002	Callee	fopen		672752	0					
ANR	673003	Identifier	fopen		672752	0					
ANR	673004	ArgumentList	filename		672752	1					
ANR	673005	Argument	filename		672752	0					
ANR	673006	Identifier	filename		672752	0					
ANR	673007	Argument	"""wb"""		672752	1					
ANR	673008	PrimaryExpression	"""wb"""		672752	0					
ANR	673009	IfStatement	if ( ! f )		672752	22					
ANR	673010	Condition	! f	101:8:1450:1451	672752	0	True				
ANR	673011	UnaryOperationExpression	! f		672752	0					
ANR	673012	UnaryOperator	!		672752	0					
ANR	673013	Identifier	f		672752	1					
ANR	673014	CompoundStatement		99:12:1397:1397	672752	1					
ANR	673015	ExpressionStatement	"fprintf ( stderr , ""Could not open %s\\n"" , filename )"	103:8:1465:1513	672752	0	True				
ANR	673016	CallExpression	"fprintf ( stderr , ""Could not open %s\\n"" , filename )"		672752	0					
ANR	673017	Callee	fprintf		672752	0					
ANR	673018	Identifier	fprintf		672752	0					
ANR	673019	ArgumentList	stderr		672752	1					
ANR	673020	Argument	stderr		672752	0					
ANR	673021	Identifier	stderr		672752	0					
ANR	673022	Argument	"""Could not open %s\\n"""		672752	1					
ANR	673023	PrimaryExpression	"""Could not open %s\\n"""		672752	0					
ANR	673024	Argument	filename		672752	2					
ANR	673025	Identifier	filename		672752	0					
ANR	673026	ExpressionStatement	exit ( 1 )	105:8:1524:1531	672752	1	True				
ANR	673027	CallExpression	exit ( 1 )		672752	0					
ANR	673028	Callee	exit		672752	0					
ANR	673029	Identifier	exit		672752	0					
ANR	673030	ArgumentList	1		672752	1					
ANR	673031	Argument	1		672752	0					
ANR	673032	PrimaryExpression	1		672752	0					
ANR	673033	ExpressionStatement	frame = av_frame_alloc ( )	113:4:1591:1615	672752	23	True				
ANR	673034	AssignmentExpression	frame = av_frame_alloc ( )		672752	0		=			
ANR	673035	Identifier	frame		672752	0					
ANR	673036	CallExpression	av_frame_alloc ( )		672752	1					
ANR	673037	Callee	av_frame_alloc		672752	0					
ANR	673038	Identifier	av_frame_alloc		672752	0					
ANR	673039	ArgumentList			672752	1					
ANR	673040	IfStatement	if ( ! frame )		672752	24					
ANR	673041	Condition	! frame	115:8:1626:1631	672752	0	True				
ANR	673042	UnaryOperationExpression	! frame		672752	0					
ANR	673043	UnaryOperator	!		672752	0					
ANR	673044	Identifier	frame		672752	1					
ANR	673045	CompoundStatement		113:16:1577:1577	672752	1					
ANR	673046	ExpressionStatement	"fprintf ( stderr , ""Could not allocate audio frame\\n"" )"	117:8:1645:1696	672752	0	True				
ANR	673047	CallExpression	"fprintf ( stderr , ""Could not allocate audio frame\\n"" )"		672752	0					
ANR	673048	Callee	fprintf		672752	0					
ANR	673049	Identifier	fprintf		672752	0					
ANR	673050	ArgumentList	stderr		672752	1					
ANR	673051	Argument	stderr		672752	0					
ANR	673052	Identifier	stderr		672752	0					
ANR	673053	Argument	"""Could not allocate audio frame\\n"""		672752	1					
ANR	673054	PrimaryExpression	"""Could not allocate audio frame\\n"""		672752	0					
ANR	673055	ExpressionStatement	exit ( 1 )	119:8:1707:1714	672752	1	True				
ANR	673056	CallExpression	exit ( 1 )		672752	0					
ANR	673057	Callee	exit		672752	0					
ANR	673058	Identifier	exit		672752	0					
ANR	673059	ArgumentList	1		672752	1					
ANR	673060	Argument	1		672752	0					
ANR	673061	PrimaryExpression	1		672752	0					
ANR	673062	ExpressionStatement	frame -> nb_samples = c -> frame_size	125:4:1730:1767	672752	25	True				
ANR	673063	AssignmentExpression	frame -> nb_samples = c -> frame_size		672752	0		=			
ANR	673064	PtrMemberAccess	frame -> nb_samples		672752	0					
ANR	673065	Identifier	frame		672752	0					
ANR	673066	Identifier	nb_samples		672752	1					
ANR	673067	PtrMemberAccess	c -> frame_size		672752	1					
ANR	673068	Identifier	c		672752	0					
ANR	673069	Identifier	frame_size		672752	1					
ANR	673070	ExpressionStatement	frame -> format = c -> sample_fmt	127:4:1774:1811	672752	26	True				
ANR	673071	AssignmentExpression	frame -> format = c -> sample_fmt		672752	0		=			
ANR	673072	PtrMemberAccess	frame -> format		672752	0					
ANR	673073	Identifier	frame		672752	0					
ANR	673074	Identifier	format		672752	1					
ANR	673075	PtrMemberAccess	c -> sample_fmt		672752	1					
ANR	673076	Identifier	c		672752	0					
ANR	673077	Identifier	sample_fmt		672752	1					
ANR	673078	ExpressionStatement	frame -> channel_layout = c -> channel_layout	129:4:1818:1859	672752	27	True				
ANR	673079	AssignmentExpression	frame -> channel_layout = c -> channel_layout		672752	0		=			
ANR	673080	PtrMemberAccess	frame -> channel_layout		672752	0					
ANR	673081	Identifier	frame		672752	0					
ANR	673082	Identifier	channel_layout		672752	1					
ANR	673083	PtrMemberAccess	c -> channel_layout		672752	1					
ANR	673084	Identifier	c		672752	0					
ANR	673085	Identifier	channel_layout		672752	1					
ANR	673086	ExpressionStatement	"buffer_size = av_samples_get_buffer_size ( NULL , c -> channels , c -> frame_size , c -> sample_fmt , 0 )"	137:4:1987:2125	672752	28	True				
ANR	673087	AssignmentExpression	"buffer_size = av_samples_get_buffer_size ( NULL , c -> channels , c -> frame_size , c -> sample_fmt , 0 )"		672752	0		=			
ANR	673088	Identifier	buffer_size		672752	0					
ANR	673089	CallExpression	"av_samples_get_buffer_size ( NULL , c -> channels , c -> frame_size , c -> sample_fmt , 0 )"		672752	1					
ANR	673090	Callee	av_samples_get_buffer_size		672752	0					
ANR	673091	Identifier	av_samples_get_buffer_size		672752	0					
ANR	673092	ArgumentList	NULL		672752	1					
ANR	673093	Argument	NULL		672752	0					
ANR	673094	Identifier	NULL		672752	0					
ANR	673095	Argument	c -> channels		672752	1					
ANR	673096	PtrMemberAccess	c -> channels		672752	0					
ANR	673097	Identifier	c		672752	0					
ANR	673098	Identifier	channels		672752	1					
ANR	673099	Argument	c -> frame_size		672752	2					
ANR	673100	PtrMemberAccess	c -> frame_size		672752	0					
ANR	673101	Identifier	c		672752	0					
ANR	673102	Identifier	frame_size		672752	1					
ANR	673103	Argument	c -> sample_fmt		672752	3					
ANR	673104	PtrMemberAccess	c -> sample_fmt		672752	0					
ANR	673105	Identifier	c		672752	0					
ANR	673106	Identifier	sample_fmt		672752	1					
ANR	673107	Argument	0		672752	4					
ANR	673108	PrimaryExpression	0		672752	0					
ANR	673109	IfStatement	if ( ! buffer_size )		672752	29					
ANR	673110	Condition	! buffer_size	141:8:2136:2147	672752	0	True				
ANR	673111	UnaryOperationExpression	! buffer_size		672752	0					
ANR	673112	UnaryOperator	!		672752	0					
ANR	673113	Identifier	buffer_size		672752	1					
ANR	673114	CompoundStatement		139:22:2093:2093	672752	1					
ANR	673115	ExpressionStatement	"fprintf ( stderr , ""Could not get sample buffer size\\n"" )"	143:8:2161:2214	672752	0	True				
ANR	673116	CallExpression	"fprintf ( stderr , ""Could not get sample buffer size\\n"" )"		672752	0					
ANR	673117	Callee	fprintf		672752	0					
ANR	673118	Identifier	fprintf		672752	0					
ANR	673119	ArgumentList	stderr		672752	1					
ANR	673120	Argument	stderr		672752	0					
ANR	673121	Identifier	stderr		672752	0					
ANR	673122	Argument	"""Could not get sample buffer size\\n"""		672752	1					
ANR	673123	PrimaryExpression	"""Could not get sample buffer size\\n"""		672752	0					
ANR	673124	ExpressionStatement	exit ( 1 )	145:8:2225:2232	672752	1	True				
ANR	673125	CallExpression	exit ( 1 )		672752	0					
ANR	673126	Callee	exit		672752	0					
ANR	673127	Identifier	exit		672752	0					
ANR	673128	ArgumentList	1		672752	1					
ANR	673129	Argument	1		672752	0					
ANR	673130	PrimaryExpression	1		672752	0					
ANR	673131	ExpressionStatement	samples = av_malloc ( buffer_size )	149:4:2246:2278	672752	30	True				
ANR	673132	AssignmentExpression	samples = av_malloc ( buffer_size )		672752	0		=			
ANR	673133	Identifier	samples		672752	0					
ANR	673134	CallExpression	av_malloc ( buffer_size )		672752	1					
ANR	673135	Callee	av_malloc		672752	0					
ANR	673136	Identifier	av_malloc		672752	0					
ANR	673137	ArgumentList	buffer_size		672752	1					
ANR	673138	Argument	buffer_size		672752	0					
ANR	673139	Identifier	buffer_size		672752	0					
ANR	673140	IfStatement	if ( ! samples )		672752	31					
ANR	673141	Condition	! samples	151:8:2289:2296	672752	0	True				
ANR	673142	UnaryOperationExpression	! samples		672752	0					
ANR	673143	UnaryOperator	!		672752	0					
ANR	673144	Identifier	samples		672752	1					
ANR	673145	CompoundStatement		149:18:2242:2242	672752	1					
ANR	673146	ExpressionStatement	"fprintf ( stderr , ""Could not allocate %d bytes for samples buffer\\n"" , buffer_size )"	153:8:2310:2407	672752	0	True				
ANR	673147	CallExpression	"fprintf ( stderr , ""Could not allocate %d bytes for samples buffer\\n"" , buffer_size )"		672752	0					
ANR	673148	Callee	fprintf		672752	0					
ANR	673149	Identifier	fprintf		672752	0					
ANR	673150	ArgumentList	stderr		672752	1					
ANR	673151	Argument	stderr		672752	0					
ANR	673152	Identifier	stderr		672752	0					
ANR	673153	Argument	"""Could not allocate %d bytes for samples buffer\\n"""		672752	1					
ANR	673154	PrimaryExpression	"""Could not allocate %d bytes for samples buffer\\n"""		672752	0					
ANR	673155	Argument	buffer_size		672752	2					
ANR	673156	Identifier	buffer_size		672752	0					
ANR	673157	ExpressionStatement	exit ( 1 )	157:8:2418:2425	672752	1	True				
ANR	673158	CallExpression	exit ( 1 )		672752	0					
ANR	673159	Callee	exit		672752	0					
ANR	673160	Identifier	exit		672752	0					
ANR	673161	ArgumentList	1		672752	1					
ANR	673162	Argument	1		672752	0					
ANR	673163	PrimaryExpression	1		672752	0					
ANR	673164	ExpressionStatement	"ret = avcodec_fill_audio_frame ( frame , c -> channels , c -> sample_fmt , ( const uint8_t * ) samples , buffer_size , 0 )"	163:4:2489:2631	672752	32	True				
ANR	673165	AssignmentExpression	"ret = avcodec_fill_audio_frame ( frame , c -> channels , c -> sample_fmt , ( const uint8_t * ) samples , buffer_size , 0 )"		672752	0		=			
ANR	673166	Identifier	ret		672752	0					
ANR	673167	CallExpression	"avcodec_fill_audio_frame ( frame , c -> channels , c -> sample_fmt , ( const uint8_t * ) samples , buffer_size , 0 )"		672752	1					
ANR	673168	Callee	avcodec_fill_audio_frame		672752	0					
ANR	673169	Identifier	avcodec_fill_audio_frame		672752	0					
ANR	673170	ArgumentList	frame		672752	1					
ANR	673171	Argument	frame		672752	0					
ANR	673172	Identifier	frame		672752	0					
ANR	673173	Argument	c -> channels		672752	1					
ANR	673174	PtrMemberAccess	c -> channels		672752	0					
ANR	673175	Identifier	c		672752	0					
ANR	673176	Identifier	channels		672752	1					
ANR	673177	Argument	c -> sample_fmt		672752	2					
ANR	673178	PtrMemberAccess	c -> sample_fmt		672752	0					
ANR	673179	Identifier	c		672752	0					
ANR	673180	Identifier	sample_fmt		672752	1					
ANR	673181	Argument	( const uint8_t * ) samples		672752	3					
ANR	673182	CastExpression	( const uint8_t * ) samples		672752	0					
ANR	673183	CastTarget	const uint8_t *		672752	0					
ANR	673184	Identifier	samples		672752	1					
ANR	673185	Argument	buffer_size		672752	4					
ANR	673186	Identifier	buffer_size		672752	0					
ANR	673187	Argument	0		672752	5					
ANR	673188	PrimaryExpression	0		672752	0					
ANR	673189	IfStatement	if ( ret < 0 )		672752	33					
ANR	673190	Condition	ret < 0	167:8:2642:2648	672752	0	True				
ANR	673191	RelationalExpression	ret < 0		672752	0		<			
ANR	673192	Identifier	ret		672752	0					
ANR	673193	PrimaryExpression	0		672752	1					
ANR	673194	CompoundStatement		165:17:2594:2594	672752	1					
ANR	673195	ExpressionStatement	"fprintf ( stderr , ""Could not setup audio frame\\n"" )"	169:8:2662:2710	672752	0	True				
ANR	673196	CallExpression	"fprintf ( stderr , ""Could not setup audio frame\\n"" )"		672752	0					
ANR	673197	Callee	fprintf		672752	0					
ANR	673198	Identifier	fprintf		672752	0					
ANR	673199	ArgumentList	stderr		672752	1					
ANR	673200	Argument	stderr		672752	0					
ANR	673201	Identifier	stderr		672752	0					
ANR	673202	Argument	"""Could not setup audio frame\\n"""		672752	1					
ANR	673203	PrimaryExpression	"""Could not setup audio frame\\n"""		672752	0					
ANR	673204	ExpressionStatement	exit ( 1 )	171:8:2721:2728	672752	1	True				
ANR	673205	CallExpression	exit ( 1 )		672752	0					
ANR	673206	Callee	exit		672752	0					
ANR	673207	Identifier	exit		672752	0					
ANR	673208	ArgumentList	1		672752	1					
ANR	673209	Argument	1		672752	0					
ANR	673210	PrimaryExpression	1		672752	0					
ANR	673211	ExpressionStatement	t = 0	179:4:2782:2787	672752	34	True				
ANR	673212	AssignmentExpression	t = 0		672752	0		=			
ANR	673213	Identifier	t		672752	0					
ANR	673214	PrimaryExpression	0		672752	1					
ANR	673215	ExpressionStatement	tincr = 2 * M_PI * 440.0 / c -> sample_rate	181:4:2794:2835	672752	35	True				
ANR	673216	AssignmentExpression	tincr = 2 * M_PI * 440.0 / c -> sample_rate		672752	0		=			
ANR	673217	Identifier	tincr		672752	0					
ANR	673218	MultiplicativeExpression	2 * M_PI * 440.0 / c -> sample_rate		672752	1		*			
ANR	673219	PrimaryExpression	2		672752	0					
ANR	673220	MultiplicativeExpression	M_PI * 440.0 / c -> sample_rate		672752	1		*			
ANR	673221	Identifier	M_PI		672752	0					
ANR	673222	MultiplicativeExpression	440.0 / c -> sample_rate		672752	1		/			
ANR	673223	PrimaryExpression	440.0		672752	0					
ANR	673224	PtrMemberAccess	c -> sample_rate		672752	1					
ANR	673225	Identifier	c		672752	0					
ANR	673226	Identifier	sample_rate		672752	1					
ANR	673227	ForStatement	for ( i = 0 ; i < 200 ; i ++ )		672752	36					
ANR	673228	ForInit	i = 0 ;	183:8:2846:2849	672752	0	True				
ANR	673229	AssignmentExpression	i = 0		672752	0		=			
ANR	673230	Identifier	i		672752	0					
ANR	673231	PrimaryExpression	0		672752	1					
ANR	673232	Condition	i < 200	183:12:2850:2854	672752	1	True				
ANR	673233	RelationalExpression	i < 200		672752	0		<			
ANR	673234	Identifier	i		672752	0					
ANR	673235	PrimaryExpression	200		672752	1					
ANR	673236	PostIncDecOperationExpression	i ++	183:18:2856:2858	672752	2	True				
ANR	673237	Identifier	i		672752	0					
ANR	673238	IncDec	++		672752	1					
ANR	673239	CompoundStatement		181:23:2804:2804	672752	3					
ANR	673240	ExpressionStatement	av_init_packet ( & pkt )	185:8:2872:2892	672752	0	True				
ANR	673241	CallExpression	av_init_packet ( & pkt )		672752	0					
ANR	673242	Callee	av_init_packet		672752	0					
ANR	673243	Identifier	av_init_packet		672752	0					
ANR	673244	ArgumentList	& pkt		672752	1					
ANR	673245	Argument	& pkt		672752	0					
ANR	673246	UnaryOperationExpression	& pkt		672752	0					
ANR	673247	UnaryOperator	&		672752	0					
ANR	673248	Identifier	pkt		672752	1					
ANR	673249	ExpressionStatement	pkt . data = NULL	187:8:2903:2918	672752	1	True				
ANR	673250	AssignmentExpression	pkt . data = NULL		672752	0		=			
ANR	673251	MemberAccess	pkt . data		672752	0					
ANR	673252	Identifier	pkt		672752	0					
ANR	673253	Identifier	data		672752	1					
ANR	673254	Identifier	NULL		672752	1					
ANR	673255	ExpressionStatement	pkt . size = 0	189:8:2977:2989	672752	2	True				
ANR	673256	AssignmentExpression	pkt . size = 0		672752	0		=			
ANR	673257	MemberAccess	pkt . size		672752	0					
ANR	673258	Identifier	pkt		672752	0					
ANR	673259	Identifier	size		672752	1					
ANR	673260	PrimaryExpression	0		672752	1					
ANR	673261	ForStatement	for ( j = 0 ; j < c -> frame_size ; j ++ )		672752	3					
ANR	673262	ForInit	j = 0 ;	193:13:3007:3012	672752	0	True				
ANR	673263	AssignmentExpression	j = 0		672752	0		=			
ANR	673264	Identifier	j		672752	0					
ANR	673265	PrimaryExpression	0		672752	1					
ANR	673266	Condition	j < c -> frame_size	193:20:3014:3030	672752	1	True				
ANR	673267	RelationalExpression	j < c -> frame_size		672752	0		<			
ANR	673268	Identifier	j		672752	0					
ANR	673269	PtrMemberAccess	c -> frame_size		672752	1					
ANR	673270	Identifier	c		672752	0					
ANR	673271	Identifier	frame_size		672752	1					
ANR	673272	PostIncDecOperationExpression	j ++	193:39:3033:3035	672752	2	True				
ANR	673273	Identifier	j		672752	0					
ANR	673274	IncDec	++		672752	1					
ANR	673275	CompoundStatement		191:44:2981:2981	672752	3					
ANR	673276	ExpressionStatement	samples [ 2 * j ] = ( int ) ( sin ( t ) * 10000 )	195:12:3053:3089	672752	0	True				
ANR	673277	AssignmentExpression	samples [ 2 * j ] = ( int ) ( sin ( t ) * 10000 )		672752	0		=			
ANR	673278	ArrayIndexing	samples [ 2 * j ]		672752	0					
ANR	673279	Identifier	samples		672752	0					
ANR	673280	MultiplicativeExpression	2 * j		672752	1		*			
ANR	673281	PrimaryExpression	2		672752	0					
ANR	673282	Identifier	j		672752	1					
ANR	673283	CastExpression	( int ) ( sin ( t ) * 10000 )		672752	1					
ANR	673284	CastTarget	int		672752	0					
ANR	673285	MultiplicativeExpression	sin ( t ) * 10000		672752	1		*			
ANR	673286	CallExpression	sin ( t )		672752	0					
ANR	673287	Callee	sin		672752	0					
ANR	673288	Identifier	sin		672752	0					
ANR	673289	ArgumentList	t		672752	1					
ANR	673290	Argument	t		672752	0					
ANR	673291	Identifier	t		672752	0					
ANR	673292	PrimaryExpression	10000		672752	1					
ANR	673293	ForStatement	for ( k = 1 ; k < c -> channels ; k ++ )		672752	1					
ANR	673294	ForInit	k = 1 ;	199:17:3111:3116	672752	0	True				
ANR	673295	AssignmentExpression	k = 1		672752	0		=			
ANR	673296	Identifier	k		672752	0					
ANR	673297	PrimaryExpression	1		672752	1					
ANR	673298	Condition	k < c -> channels	199:24:3118:3132	672752	1	True				
ANR	673299	RelationalExpression	k < c -> channels		672752	0		<			
ANR	673300	Identifier	k		672752	0					
ANR	673301	PtrMemberAccess	c -> channels		672752	1					
ANR	673302	Identifier	c		672752	0					
ANR	673303	Identifier	channels		672752	1					
ANR	673304	PostIncDecOperationExpression	k ++	199:41:3135:3137	672752	2	True				
ANR	673305	Identifier	k		672752	0					
ANR	673306	IncDec	++		672752	1					
ANR	673307	ExpressionStatement	samples [ 2 * j + k ] = samples [ 2 * j ]	201:16:3157:3188	672752	3	True				
ANR	673308	AssignmentExpression	samples [ 2 * j + k ] = samples [ 2 * j ]		672752	0		=			
ANR	673309	ArrayIndexing	samples [ 2 * j + k ]		672752	0					
ANR	673310	Identifier	samples		672752	0					
ANR	673311	AdditiveExpression	2 * j + k		672752	1		+			
ANR	673312	MultiplicativeExpression	2 * j		672752	0		*			
ANR	673313	PrimaryExpression	2		672752	0					
ANR	673314	Identifier	j		672752	1					
ANR	673315	Identifier	k		672752	1					
ANR	673316	ArrayIndexing	samples [ 2 * j ]		672752	1					
ANR	673317	Identifier	samples		672752	0					
ANR	673318	MultiplicativeExpression	2 * j		672752	1		*			
ANR	673319	PrimaryExpression	2		672752	0					
ANR	673320	Identifier	j		672752	1					
ANR	673321	ExpressionStatement	t += tincr	203:12:3203:3213	672752	2	True				
ANR	673322	AssignmentExpression	t += tincr		672752	0		+=			
ANR	673323	Identifier	t		672752	0					
ANR	673324	Identifier	tincr		672752	1					
ANR	673325	ExpressionStatement	"ret = avcodec_encode_audio2 ( c , & pkt , frame , & got_output )"	209:8:3269:3325	672752	4	True				
ANR	673326	AssignmentExpression	"ret = avcodec_encode_audio2 ( c , & pkt , frame , & got_output )"		672752	0		=			
ANR	673327	Identifier	ret		672752	0					
ANR	673328	CallExpression	"avcodec_encode_audio2 ( c , & pkt , frame , & got_output )"		672752	1					
ANR	673329	Callee	avcodec_encode_audio2		672752	0					
ANR	673330	Identifier	avcodec_encode_audio2		672752	0					
ANR	673331	ArgumentList	c		672752	1					
ANR	673332	Argument	c		672752	0					
ANR	673333	Identifier	c		672752	0					
ANR	673334	Argument	& pkt		672752	1					
ANR	673335	UnaryOperationExpression	& pkt		672752	0					
ANR	673336	UnaryOperator	&		672752	0					
ANR	673337	Identifier	pkt		672752	1					
ANR	673338	Argument	frame		672752	2					
ANR	673339	Identifier	frame		672752	0					
ANR	673340	Argument	& got_output		672752	3					
ANR	673341	UnaryOperationExpression	& got_output		672752	0					
ANR	673342	UnaryOperator	&		672752	0					
ANR	673343	Identifier	got_output		672752	1					
ANR	673344	IfStatement	if ( ret < 0 )		672752	5					
ANR	673345	Condition	ret < 0	211:12:3340:3346	672752	0	True				
ANR	673346	RelationalExpression	ret < 0		672752	0		<			
ANR	673347	Identifier	ret		672752	0					
ANR	673348	PrimaryExpression	0		672752	1					
ANR	673349	CompoundStatement		209:21:3292:3292	672752	1					
ANR	673350	ExpressionStatement	"fprintf ( stderr , ""Error encoding audio frame\\n"" )"	213:12:3364:3411	672752	0	True				
ANR	673351	CallExpression	"fprintf ( stderr , ""Error encoding audio frame\\n"" )"		672752	0					
ANR	673352	Callee	fprintf		672752	0					
ANR	673353	Identifier	fprintf		672752	0					
ANR	673354	ArgumentList	stderr		672752	1					
ANR	673355	Argument	stderr		672752	0					
ANR	673356	Identifier	stderr		672752	0					
ANR	673357	Argument	"""Error encoding audio frame\\n"""		672752	1					
ANR	673358	PrimaryExpression	"""Error encoding audio frame\\n"""		672752	0					
ANR	673359	ExpressionStatement	exit ( 1 )	215:12:3426:3433	672752	1	True				
ANR	673360	CallExpression	exit ( 1 )		672752	0					
ANR	673361	Callee	exit		672752	0					
ANR	673362	Identifier	exit		672752	0					
ANR	673363	ArgumentList	1		672752	1					
ANR	673364	Argument	1		672752	0					
ANR	673365	PrimaryExpression	1		672752	0					
ANR	673366	IfStatement	if ( got_output )		672752	6					
ANR	673367	Condition	got_output	219:12:3459:3468	672752	0	True				
ANR	673368	Identifier	got_output		672752	0					
ANR	673369	CompoundStatement		217:24:3414:3414	672752	1					
ANR	673370	ExpressionStatement	"fwrite ( pkt . data , 1 , pkt . size , f )"	221:12:3486:3518	672752	0	True				
ANR	673371	CallExpression	"fwrite ( pkt . data , 1 , pkt . size , f )"		672752	0					
ANR	673372	Callee	fwrite		672752	0					
ANR	673373	Identifier	fwrite		672752	0					
ANR	673374	ArgumentList	pkt . data		672752	1					
ANR	673375	Argument	pkt . data		672752	0					
ANR	673376	MemberAccess	pkt . data		672752	0					
ANR	673377	Identifier	pkt		672752	0					
ANR	673378	Identifier	data		672752	1					
ANR	673379	Argument	1		672752	1					
ANR	673380	PrimaryExpression	1		672752	0					
ANR	673381	Argument	pkt . size		672752	2					
ANR	673382	MemberAccess	pkt . size		672752	0					
ANR	673383	Identifier	pkt		672752	0					
ANR	673384	Identifier	size		672752	1					
ANR	673385	Argument	f		672752	3					
ANR	673386	Identifier	f		672752	0					
ANR	673387	ExpressionStatement	av_free_packet ( & pkt )	223:12:3533:3553	672752	1	True				
ANR	673388	CallExpression	av_free_packet ( & pkt )		672752	0					
ANR	673389	Callee	av_free_packet		672752	0					
ANR	673390	Identifier	av_free_packet		672752	0					
ANR	673391	ArgumentList	& pkt		672752	1					
ANR	673392	Argument	& pkt		672752	0					
ANR	673393	UnaryOperationExpression	& pkt		672752	0					
ANR	673394	UnaryOperator	&		672752	0					
ANR	673395	Identifier	pkt		672752	1					
ANR	673396	ForStatement	for ( got_output = 1 ; got_output ; i ++ )		672752	37					
ANR	673397	ForInit	got_output = 1 ;	233:9:3619:3633	672752	0	True				
ANR	673398	AssignmentExpression	got_output = 1		672752	0		=			
ANR	673399	Identifier	got_output		672752	0					
ANR	673400	PrimaryExpression	1		672752	1					
ANR	673401	Condition	got_output	233:25:3635:3644	672752	1	True				
ANR	673402	Identifier	got_output		672752	0					
ANR	673403	PostIncDecOperationExpression	i ++	233:37:3647:3649	672752	2	True				
ANR	673404	Identifier	i		672752	0					
ANR	673405	IncDec	++		672752	1					
ANR	673406	CompoundStatement		231:42:3595:3595	672752	3					
ANR	673407	ExpressionStatement	"ret = avcodec_encode_audio2 ( c , & pkt , NULL , & got_output )"	235:8:3663:3718	672752	0	True				
ANR	673408	AssignmentExpression	"ret = avcodec_encode_audio2 ( c , & pkt , NULL , & got_output )"		672752	0		=			
ANR	673409	Identifier	ret		672752	0					
ANR	673410	CallExpression	"avcodec_encode_audio2 ( c , & pkt , NULL , & got_output )"		672752	1					
ANR	673411	Callee	avcodec_encode_audio2		672752	0					
ANR	673412	Identifier	avcodec_encode_audio2		672752	0					
ANR	673413	ArgumentList	c		672752	1					
ANR	673414	Argument	c		672752	0					
ANR	673415	Identifier	c		672752	0					
ANR	673416	Argument	& pkt		672752	1					
ANR	673417	UnaryOperationExpression	& pkt		672752	0					
ANR	673418	UnaryOperator	&		672752	0					
ANR	673419	Identifier	pkt		672752	1					
ANR	673420	Argument	NULL		672752	2					
ANR	673421	Identifier	NULL		672752	0					
ANR	673422	Argument	& got_output		672752	3					
ANR	673423	UnaryOperationExpression	& got_output		672752	0					
ANR	673424	UnaryOperator	&		672752	0					
ANR	673425	Identifier	got_output		672752	1					
ANR	673426	IfStatement	if ( ret < 0 )		672752	1					
ANR	673427	Condition	ret < 0	237:12:3733:3739	672752	0	True				
ANR	673428	RelationalExpression	ret < 0		672752	0		<			
ANR	673429	Identifier	ret		672752	0					
ANR	673430	PrimaryExpression	0		672752	1					
ANR	673431	CompoundStatement		235:21:3685:3685	672752	1					
ANR	673432	ExpressionStatement	"fprintf ( stderr , ""Error encoding frame\\n"" )"	239:12:3757:3798	672752	0	True				
ANR	673433	CallExpression	"fprintf ( stderr , ""Error encoding frame\\n"" )"		672752	0					
ANR	673434	Callee	fprintf		672752	0					
ANR	673435	Identifier	fprintf		672752	0					
ANR	673436	ArgumentList	stderr		672752	1					
ANR	673437	Argument	stderr		672752	0					
ANR	673438	Identifier	stderr		672752	0					
ANR	673439	Argument	"""Error encoding frame\\n"""		672752	1					
ANR	673440	PrimaryExpression	"""Error encoding frame\\n"""		672752	0					
ANR	673441	ExpressionStatement	exit ( 1 )	241:12:3813:3820	672752	1	True				
ANR	673442	CallExpression	exit ( 1 )		672752	0					
ANR	673443	Callee	exit		672752	0					
ANR	673444	Identifier	exit		672752	0					
ANR	673445	ArgumentList	1		672752	1					
ANR	673446	Argument	1		672752	0					
ANR	673447	PrimaryExpression	1		672752	0					
ANR	673448	IfStatement	if ( got_output )		672752	2					
ANR	673449	Condition	got_output	247:12:3848:3857	672752	0	True				
ANR	673450	Identifier	got_output		672752	0					
ANR	673451	CompoundStatement		245:24:3803:3803	672752	1					
ANR	673452	ExpressionStatement	"fwrite ( pkt . data , 1 , pkt . size , f )"	249:12:3875:3907	672752	0	True				
ANR	673453	CallExpression	"fwrite ( pkt . data , 1 , pkt . size , f )"		672752	0					
ANR	673454	Callee	fwrite		672752	0					
ANR	673455	Identifier	fwrite		672752	0					
ANR	673456	ArgumentList	pkt . data		672752	1					
ANR	673457	Argument	pkt . data		672752	0					
ANR	673458	MemberAccess	pkt . data		672752	0					
ANR	673459	Identifier	pkt		672752	0					
ANR	673460	Identifier	data		672752	1					
ANR	673461	Argument	1		672752	1					
ANR	673462	PrimaryExpression	1		672752	0					
ANR	673463	Argument	pkt . size		672752	2					
ANR	673464	MemberAccess	pkt . size		672752	0					
ANR	673465	Identifier	pkt		672752	0					
ANR	673466	Identifier	size		672752	1					
ANR	673467	Argument	f		672752	3					
ANR	673468	Identifier	f		672752	0					
ANR	673469	ExpressionStatement	av_free_packet ( & pkt )	251:12:3922:3942	672752	1	True				
ANR	673470	CallExpression	av_free_packet ( & pkt )		672752	0					
ANR	673471	Callee	av_free_packet		672752	0					
ANR	673472	Identifier	av_free_packet		672752	0					
ANR	673473	ArgumentList	& pkt		672752	1					
ANR	673474	Argument	& pkt		672752	0					
ANR	673475	UnaryOperationExpression	& pkt		672752	0					
ANR	673476	UnaryOperator	&		672752	0					
ANR	673477	Identifier	pkt		672752	1					
ANR	673478	ExpressionStatement	fclose ( f )	257:4:3967:3976	672752	38	True				
ANR	673479	CallExpression	fclose ( f )		672752	0					
ANR	673480	Callee	fclose		672752	0					
ANR	673481	Identifier	fclose		672752	0					
ANR	673482	ArgumentList	f		672752	1					
ANR	673483	Argument	f		672752	0					
ANR	673484	Identifier	f		672752	0					
ANR	673485	ExpressionStatement	av_freep ( & samples )	261:4:3985:4003	672752	39	True				
ANR	673486	CallExpression	av_freep ( & samples )		672752	0					
ANR	673487	Callee	av_freep		672752	0					
ANR	673488	Identifier	av_freep		672752	0					
ANR	673489	ArgumentList	& samples		672752	1					
ANR	673490	Argument	& samples		672752	0					
ANR	673491	UnaryOperationExpression	& samples		672752	0					
ANR	673492	UnaryOperator	&		672752	0					
ANR	673493	Identifier	samples		672752	1					
ANR	673494	ExpressionStatement	av_frame_free ( & frame )	263:4:4010:4031	672752	40	True				
ANR	673495	CallExpression	av_frame_free ( & frame )		672752	0					
ANR	673496	Callee	av_frame_free		672752	0					
ANR	673497	Identifier	av_frame_free		672752	0					
ANR	673498	ArgumentList	& frame		672752	1					
ANR	673499	Argument	& frame		672752	0					
ANR	673500	UnaryOperationExpression	& frame		672752	0					
ANR	673501	UnaryOperator	&		672752	0					
ANR	673502	Identifier	frame		672752	1					
ANR	673503	ExpressionStatement	avcodec_close ( c )	265:4:4038:4054	672752	41	True				
ANR	673504	CallExpression	avcodec_close ( c )		672752	0					
ANR	673505	Callee	avcodec_close		672752	0					
ANR	673506	Identifier	avcodec_close		672752	0					
ANR	673507	ArgumentList	c		672752	1					
ANR	673508	Argument	c		672752	0					
ANR	673509	Identifier	c		672752	0					
ANR	673510	ExpressionStatement	av_free ( c )	267:4:4061:4071	672752	42	True				
ANR	673511	CallExpression	av_free ( c )		672752	0					
ANR	673512	Callee	av_free		672752	0					
ANR	673513	Identifier	av_free		672752	0					
ANR	673514	ArgumentList	c		672752	1					
ANR	673515	Argument	c		672752	0					
ANR	673516	Identifier	c		672752	0					
ANR	673517	ReturnType	static void		672752	1					
ANR	673518	Identifier	audio_encode_example		672752	2					
ANR	673519	ParameterList	const char * filename		672752	3					
ANR	673520	Parameter	const char * filename	1:33:33:52	672752	0	True				
ANR	673521	ParameterType	const char *		672752	0					
ANR	673522	Identifier	filename		672752	1					
ANR	673523	CFGEntryNode	ENTRY		672752		True				
ANR	673524	CFGExitNode	EXIT		672752		True				
ANR	673525	Symbol	av_malloc		672752						
ANR	673526	Symbol	AV_SAMPLE_FMT_S16		672752						
ANR	673527	Symbol	c -> sample_fmt		672752						
ANR	673528	Symbol	M_PI		672752						
ANR	673529	Symbol	c -> channel_layout		672752						
ANR	673530	Symbol	* samples		672752						
ANR	673531	Symbol	av_samples_get_buffer_size		672752						
ANR	673532	Symbol	avcodec_encode_audio2		672752						
ANR	673533	Symbol	ret		672752						
ANR	673534	Symbol	NULL		672752						
ANR	673535	Symbol	c -> sample_rate		672752						
ANR	673536	Symbol	select_channel_layout		672752						
ANR	673537	Symbol	stderr		672752						
ANR	673538	Symbol	samples		672752						
ANR	673539	Symbol	av_get_channel_layout_nb_channels		672752						
ANR	673540	Symbol	av_frame_alloc		672752						
ANR	673541	Symbol	codec		672752						
ANR	673542	Symbol	avcodec_open2		672752						
ANR	673543	Symbol	filename		672752						
ANR	673544	Symbol	frame		672752						
ANR	673545	Symbol	* frame		672752						
ANR	673546	Symbol	buffer_size		672752						
ANR	673547	Symbol	AV_CODEC_ID_MP2		672752						
ANR	673548	Symbol	c -> bit_rate		672752						
ANR	673549	Symbol	frame -> format		672752						
ANR	673550	Symbol	select_sample_rate		672752						
ANR	673551	Symbol	avcodec_alloc_context3		672752						
ANR	673552	Symbol	avcodec_fill_audio_frame		672752						
ANR	673553	Symbol	got_output		672752						
ANR	673554	Symbol	pkt		672752						
ANR	673555	Symbol	pkt . size		672752						
ANR	673556	Symbol	sin		672752						
ANR	673557	Symbol	tincr		672752						
ANR	673558	Symbol	fopen		672752						
ANR	673559	Symbol	frame -> nb_samples		672752						
ANR	673560	Symbol	c		672752						
ANR	673561	Symbol	f		672752						
ANR	673562	Symbol	i		672752						
ANR	673563	Symbol	avcodec_find_encoder		672752						
ANR	673564	Symbol	frame -> channel_layout		672752						
ANR	673565	Symbol	& frame		672752						
ANR	673566	Symbol	j		672752						
ANR	673567	Symbol	k		672752						
ANR	673568	Symbol	check_sample_fmt		672752						
ANR	673569	Symbol	* c		672752						
ANR	673570	Symbol	c -> channels		672752						
ANR	673571	Symbol	c -> frame_size		672752						
ANR	673572	Symbol	t		672752						
ANR	673573	Symbol	* j		672752						
ANR	673574	Symbol	* k		672752						
ANR	673575	Symbol	& pkt		672752						
ANR	673576	Symbol	& got_output		672752						
ANR	673577	Symbol	av_get_sample_fmt_name		672752						
ANR	673578	Symbol	& samples		672752						
ANR	673579	Symbol	pkt . data		672752						
