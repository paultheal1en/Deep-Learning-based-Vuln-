command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6199754	File	/home/p4ultr4n/workplace/ReVeal/raw_code/open_f_01_1.c								
ANR	6199755	Function	open_f	1:0:0:2537							
ANR	6199756	FunctionDef	"open_f (BlockBackend * blk , int argc , char * * argv)"		6199755	0					
ANR	6199757	CompoundStatement		3:0:61:2537	6199755	0					
ANR	6199758	IdentifierDeclStatement	int flags = BDRV_O_UNMAP ;	5:4:68:92	6199755	0	True				
ANR	6199759	IdentifierDecl	flags = BDRV_O_UNMAP		6199755	0					
ANR	6199760	IdentifierDeclType	int		6199755	0					
ANR	6199761	Identifier	flags		6199755	1					
ANR	6199762	AssignmentExpression	flags = BDRV_O_UNMAP		6199755	2		=			
ANR	6199763	Identifier	BDRV_O_UNMAP		6199755	0					
ANR	6199764	Identifier	BDRV_O_UNMAP		6199755	1					
ANR	6199765	IdentifierDeclStatement	int readonly = 0 ;	7:4:99:115	6199755	1	True				
ANR	6199766	IdentifierDecl	readonly = 0		6199755	0					
ANR	6199767	IdentifierDeclType	int		6199755	0					
ANR	6199768	Identifier	readonly		6199755	1					
ANR	6199769	AssignmentExpression	readonly = 0		6199755	2		=			
ANR	6199770	Identifier	readonly		6199755	0					
ANR	6199771	PrimaryExpression	0		6199755	1					
ANR	6199772	IdentifierDeclStatement	bool writethrough = true ;	9:4:122:146	6199755	2	True				
ANR	6199773	IdentifierDecl	writethrough = true		6199755	0					
ANR	6199774	IdentifierDeclType	bool		6199755	0					
ANR	6199775	Identifier	writethrough		6199755	1					
ANR	6199776	AssignmentExpression	writethrough = true		6199755	2		=			
ANR	6199777	Identifier	true		6199755	0					
ANR	6199778	Identifier	true		6199755	1					
ANR	6199779	IdentifierDeclStatement	int c ;	11:4:153:158	6199755	3	True				
ANR	6199780	IdentifierDecl	c		6199755	0					
ANR	6199781	IdentifierDeclType	int		6199755	0					
ANR	6199782	Identifier	c		6199755	1					
ANR	6199783	IdentifierDeclStatement	QemuOpts * qopts ;	13:4:165:180	6199755	4	True				
ANR	6199784	IdentifierDecl	* qopts		6199755	0					
ANR	6199785	IdentifierDeclType	QemuOpts *		6199755	0					
ANR	6199786	Identifier	qopts		6199755	1					
ANR	6199787	IdentifierDeclStatement	QDict * opts ;	15:4:187:198	6199755	5	True				
ANR	6199788	IdentifierDecl	* opts		6199755	0					
ANR	6199789	IdentifierDeclType	QDict *		6199755	0					
ANR	6199790	Identifier	opts		6199755	1					
ANR	6199791	IdentifierDeclStatement	bool force_share = false ;	17:4:205:229	6199755	6	True				
ANR	6199792	IdentifierDecl	force_share = false		6199755	0					
ANR	6199793	IdentifierDeclType	bool		6199755	0					
ANR	6199794	Identifier	force_share		6199755	1					
ANR	6199795	AssignmentExpression	force_share = false		6199755	2		=			
ANR	6199796	Identifier	false		6199755	0					
ANR	6199797	Identifier	false		6199755	1					
ANR	6199798	WhileStatement	"while ( ( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1 )"		6199755	7					
ANR	6199799	Condition	"( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1"	21:11:245:289	6199755	0	True				
ANR	6199800	EqualityExpression	"( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1"		6199755	0		!=			
ANR	6199801	AssignmentExpression	"c = getopt ( argc , argv , ""snro:kt:d:U"" )"		6199755	0		=			
ANR	6199802	Identifier	c		6199755	0					
ANR	6199803	CallExpression	"getopt ( argc , argv , ""snro:kt:d:U"" )"		6199755	1					
ANR	6199804	Callee	getopt		6199755	0					
ANR	6199805	Identifier	getopt		6199755	0					
ANR	6199806	ArgumentList	argc		6199755	1					
ANR	6199807	Argument	argc		6199755	0					
ANR	6199808	Identifier	argc		6199755	0					
ANR	6199809	Argument	argv		6199755	1					
ANR	6199810	Identifier	argv		6199755	0					
ANR	6199811	Argument	"""snro:kt:d:U"""		6199755	2					
ANR	6199812	PrimaryExpression	"""snro:kt:d:U"""		6199755	0					
ANR	6199813	UnaryOperationExpression	- 1		6199755	1					
ANR	6199814	UnaryOperator	-		6199755	0					
ANR	6199815	PrimaryExpression	1		6199755	1					
ANR	6199816	CompoundStatement		19:58:230:230	6199755	1					
ANR	6199817	SwitchStatement	switch ( c )		6199755	0					
ANR	6199818	Condition	c	23:16:311:311	6199755	0	True				
ANR	6199819	Identifier	c		6199755	0					
ANR	6199820	CompoundStatement		21:19:252:252	6199755	1					
ANR	6199821	Label	case 's' :	25:8:325:333	6199755	0	True				
ANR	6199822	ExpressionStatement	flags |= BDRV_O_SNAPSHOT	27:12:348:372	6199755	1	True				
ANR	6199823	AssignmentExpression	flags |= BDRV_O_SNAPSHOT		6199755	0		|=			
ANR	6199824	Identifier	flags		6199755	0					
ANR	6199825	Identifier	BDRV_O_SNAPSHOT		6199755	1					
ANR	6199826	BreakStatement	break ;	29:12:387:392	6199755	2	True				
ANR	6199827	Label	case 'n' :	31:8:403:411	6199755	3	True				
ANR	6199828	ExpressionStatement	flags |= BDRV_O_NOCACHE	33:12:426:449	6199755	4	True				
ANR	6199829	AssignmentExpression	flags |= BDRV_O_NOCACHE		6199755	0		|=			
ANR	6199830	Identifier	flags		6199755	0					
ANR	6199831	Identifier	BDRV_O_NOCACHE		6199755	1					
ANR	6199832	ExpressionStatement	writethrough = false	35:12:464:484	6199755	5	True				
ANR	6199833	AssignmentExpression	writethrough = false		6199755	0		=			
ANR	6199834	Identifier	writethrough		6199755	0					
ANR	6199835	Identifier	false		6199755	1					
ANR	6199836	BreakStatement	break ;	37:12:499:504	6199755	6	True				
ANR	6199837	Label	case 'r' :	39:8:515:523	6199755	7	True				
ANR	6199838	ExpressionStatement	readonly = 1	41:12:538:550	6199755	8	True				
ANR	6199839	AssignmentExpression	readonly = 1		6199755	0		=			
ANR	6199840	Identifier	readonly		6199755	0					
ANR	6199841	PrimaryExpression	1		6199755	1					
ANR	6199842	BreakStatement	break ;	43:12:565:570	6199755	9	True				
ANR	6199843	Label	case 'k' :	45:8:581:589	6199755	10	True				
ANR	6199844	ExpressionStatement	flags |= BDRV_O_NATIVE_AIO	47:12:604:630	6199755	11	True				
ANR	6199845	AssignmentExpression	flags |= BDRV_O_NATIVE_AIO		6199755	0		|=			
ANR	6199846	Identifier	flags		6199755	0					
ANR	6199847	Identifier	BDRV_O_NATIVE_AIO		6199755	1					
ANR	6199848	BreakStatement	break ;	49:12:645:650	6199755	12	True				
ANR	6199849	Label	case 't' :	51:8:661:669	6199755	13	True				
ANR	6199850	IfStatement	"if ( bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0 )"		6199755	14					
ANR	6199851	Condition	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0"	53:16:688:743	6199755	0	True				
ANR	6199852	RelationalExpression	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0"		6199755	0		<			
ANR	6199853	CallExpression	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough )"		6199755	0					
ANR	6199854	Callee	bdrv_parse_cache_mode		6199755	0					
ANR	6199855	Identifier	bdrv_parse_cache_mode		6199755	0					
ANR	6199856	ArgumentList	optarg		6199755	1					
ANR	6199857	Argument	optarg		6199755	0					
ANR	6199858	Identifier	optarg		6199755	0					
ANR	6199859	Argument	& flags		6199755	1					
ANR	6199860	UnaryOperationExpression	& flags		6199755	0					
ANR	6199861	UnaryOperator	&		6199755	0					
ANR	6199862	Identifier	flags		6199755	1					
ANR	6199863	Argument	& writethrough		6199755	2					
ANR	6199864	UnaryOperationExpression	& writethrough		6199755	0					
ANR	6199865	UnaryOperator	&		6199755	0					
ANR	6199866	Identifier	writethrough		6199755	1					
ANR	6199867	PrimaryExpression	0		6199755	1					
ANR	6199868	CompoundStatement		51:74:684:684	6199755	1					
ANR	6199869	ExpressionStatement	"error_report ( ""Invalid cache option: %s"" , optarg )"	55:16:765:813	6199755	0	True				
ANR	6199870	CallExpression	"error_report ( ""Invalid cache option: %s"" , optarg )"		6199755	0					
ANR	6199871	Callee	error_report		6199755	0					
ANR	6199872	Identifier	error_report		6199755	0					
ANR	6199873	ArgumentList	"""Invalid cache option: %s"""		6199755	1					
ANR	6199874	Argument	"""Invalid cache option: %s"""		6199755	0					
ANR	6199875	PrimaryExpression	"""Invalid cache option: %s"""		6199755	0					
ANR	6199876	Argument	optarg		6199755	1					
ANR	6199877	Identifier	optarg		6199755	0					
ANR	6199878	ExpressionStatement	qemu_opts_reset ( & empty_opts )	57:16:832:860	6199755	1	True				
ANR	6199879	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6199880	Callee	qemu_opts_reset		6199755	0					
ANR	6199881	Identifier	qemu_opts_reset		6199755	0					
ANR	6199882	ArgumentList	& empty_opts		6199755	1					
ANR	6199883	Argument	& empty_opts		6199755	0					
ANR	6199884	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199885	UnaryOperator	&		6199755	0					
ANR	6199886	Identifier	empty_opts		6199755	1					
ANR	6199887	ReturnStatement	return 0 ;	59:16:879:887	6199755	2	True				
ANR	6199888	PrimaryExpression	0		6199755	0					
ANR	6199889	BreakStatement	break ;	63:12:917:922	6199755	15	True				
ANR	6199890	Label	case 'd' :	65:8:933:941	6199755	16	True				
ANR	6199891	IfStatement	"if ( bdrv_parse_discard_flags ( optarg , & flags ) < 0 )"		6199755	17					
ANR	6199892	Condition	"bdrv_parse_discard_flags ( optarg , & flags ) < 0"	67:16:960:1003	6199755	0	True				
ANR	6199893	RelationalExpression	"bdrv_parse_discard_flags ( optarg , & flags ) < 0"		6199755	0		<			
ANR	6199894	CallExpression	"bdrv_parse_discard_flags ( optarg , & flags )"		6199755	0					
ANR	6199895	Callee	bdrv_parse_discard_flags		6199755	0					
ANR	6199896	Identifier	bdrv_parse_discard_flags		6199755	0					
ANR	6199897	ArgumentList	optarg		6199755	1					
ANR	6199898	Argument	optarg		6199755	0					
ANR	6199899	Identifier	optarg		6199755	0					
ANR	6199900	Argument	& flags		6199755	1					
ANR	6199901	UnaryOperationExpression	& flags		6199755	0					
ANR	6199902	UnaryOperator	&		6199755	0					
ANR	6199903	Identifier	flags		6199755	1					
ANR	6199904	PrimaryExpression	0		6199755	1					
ANR	6199905	CompoundStatement		65:62:944:944	6199755	1					
ANR	6199906	ExpressionStatement	"error_report ( ""Invalid discard option: %s"" , optarg )"	69:16:1025:1075	6199755	0	True				
ANR	6199907	CallExpression	"error_report ( ""Invalid discard option: %s"" , optarg )"		6199755	0					
ANR	6199908	Callee	error_report		6199755	0					
ANR	6199909	Identifier	error_report		6199755	0					
ANR	6199910	ArgumentList	"""Invalid discard option: %s"""		6199755	1					
ANR	6199911	Argument	"""Invalid discard option: %s"""		6199755	0					
ANR	6199912	PrimaryExpression	"""Invalid discard option: %s"""		6199755	0					
ANR	6199913	Argument	optarg		6199755	1					
ANR	6199914	Identifier	optarg		6199755	0					
ANR	6199915	ExpressionStatement	qemu_opts_reset ( & empty_opts )	71:16:1094:1122	6199755	1	True				
ANR	6199916	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6199917	Callee	qemu_opts_reset		6199755	0					
ANR	6199918	Identifier	qemu_opts_reset		6199755	0					
ANR	6199919	ArgumentList	& empty_opts		6199755	1					
ANR	6199920	Argument	& empty_opts		6199755	0					
ANR	6199921	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199922	UnaryOperator	&		6199755	0					
ANR	6199923	Identifier	empty_opts		6199755	1					
ANR	6199924	ReturnStatement	return 0 ;	73:16:1141:1149	6199755	2	True				
ANR	6199925	PrimaryExpression	0		6199755	0					
ANR	6199926	BreakStatement	break ;	77:12:1179:1184	6199755	18	True				
ANR	6199927	Label	case 'o' :	79:8:1195:1203	6199755	19	True				
ANR	6199928	IfStatement	if ( imageOpts )		6199755	20					
ANR	6199929	Condition	imageOpts	81:16:1222:1230	6199755	0	True				
ANR	6199930	Identifier	imageOpts		6199755	0					
ANR	6199931	CompoundStatement		79:27:1171:1171	6199755	1					
ANR	6199932	ExpressionStatement	"printf ( ""--image-opts and 'open -o' are mutually exclusive\\n"" )"	83:16:1252:1313	6199755	0	True				
ANR	6199933	CallExpression	"printf ( ""--image-opts and 'open -o' are mutually exclusive\\n"" )"		6199755	0					
ANR	6199934	Callee	printf		6199755	0					
ANR	6199935	Identifier	printf		6199755	0					
ANR	6199936	ArgumentList	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199755	1					
ANR	6199937	Argument	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199755	0					
ANR	6199938	PrimaryExpression	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199755	0					
ANR	6199939	ExpressionStatement	qemu_opts_reset ( & empty_opts )	85:16:1332:1360	6199755	1	True				
ANR	6199940	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6199941	Callee	qemu_opts_reset		6199755	0					
ANR	6199942	Identifier	qemu_opts_reset		6199755	0					
ANR	6199943	ArgumentList	& empty_opts		6199755	1					
ANR	6199944	Argument	& empty_opts		6199755	0					
ANR	6199945	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199946	UnaryOperator	&		6199755	0					
ANR	6199947	Identifier	empty_opts		6199755	1					
ANR	6199948	ReturnStatement	return 0 ;	87:16:1379:1387	6199755	2	True				
ANR	6199949	PrimaryExpression	0		6199755	0					
ANR	6199950	IfStatement	"if ( ! qemu_opts_parse_noisily ( & empty_opts , optarg , false ) )"		6199755	21					
ANR	6199951	Condition	"! qemu_opts_parse_noisily ( & empty_opts , optarg , false )"	91:16:1421:1472	6199755	0	True				
ANR	6199952	UnaryOperationExpression	"! qemu_opts_parse_noisily ( & empty_opts , optarg , false )"		6199755	0					
ANR	6199953	UnaryOperator	!		6199755	0					
ANR	6199954	CallExpression	"qemu_opts_parse_noisily ( & empty_opts , optarg , false )"		6199755	1					
ANR	6199955	Callee	qemu_opts_parse_noisily		6199755	0					
ANR	6199956	Identifier	qemu_opts_parse_noisily		6199755	0					
ANR	6199957	ArgumentList	& empty_opts		6199755	1					
ANR	6199958	Argument	& empty_opts		6199755	0					
ANR	6199959	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199960	UnaryOperator	&		6199755	0					
ANR	6199961	Identifier	empty_opts		6199755	1					
ANR	6199962	Argument	optarg		6199755	1					
ANR	6199963	Identifier	optarg		6199755	0					
ANR	6199964	Argument	false		6199755	2					
ANR	6199965	Identifier	false		6199755	0					
ANR	6199966	CompoundStatement		89:70:1413:1413	6199755	1					
ANR	6199967	ExpressionStatement	qemu_opts_reset ( & empty_opts )	93:16:1494:1522	6199755	0	True				
ANR	6199968	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6199969	Callee	qemu_opts_reset		6199755	0					
ANR	6199970	Identifier	qemu_opts_reset		6199755	0					
ANR	6199971	ArgumentList	& empty_opts		6199755	1					
ANR	6199972	Argument	& empty_opts		6199755	0					
ANR	6199973	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199974	UnaryOperator	&		6199755	0					
ANR	6199975	Identifier	empty_opts		6199755	1					
ANR	6199976	ReturnStatement	return 0 ;	95:16:1541:1549	6199755	1	True				
ANR	6199977	PrimaryExpression	0		6199755	0					
ANR	6199978	BreakStatement	break ;	99:12:1579:1584	6199755	22	True				
ANR	6199979	Label	case 'U' :	101:8:1595:1603	6199755	23	True				
ANR	6199980	ExpressionStatement	force_share = true	103:12:1618:1636	6199755	24	True				
ANR	6199981	AssignmentExpression	force_share = true		6199755	0		=			
ANR	6199982	Identifier	force_share		6199755	0					
ANR	6199983	Identifier	true		6199755	1					
ANR	6199984	BreakStatement	break ;	105:12:1651:1656	6199755	25	True				
ANR	6199985	Label	default :	107:8:1667:1674	6199755	26	True				
ANR	6199986	Identifier	default		6199755	0					
ANR	6199987	ExpressionStatement	qemu_opts_reset ( & empty_opts )	109:12:1689:1717	6199755	27	True				
ANR	6199988	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6199989	Callee	qemu_opts_reset		6199755	0					
ANR	6199990	Identifier	qemu_opts_reset		6199755	0					
ANR	6199991	ArgumentList	& empty_opts		6199755	1					
ANR	6199992	Argument	& empty_opts		6199755	0					
ANR	6199993	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6199994	UnaryOperator	&		6199755	0					
ANR	6199995	Identifier	empty_opts		6199755	1					
ANR	6199996	ReturnStatement	return qemuio_command_usage ( & open_cmd ) ;	111:12:1732:1770	6199755	28	True				
ANR	6199997	CallExpression	qemuio_command_usage ( & open_cmd )		6199755	0					
ANR	6199998	Callee	qemuio_command_usage		6199755	0					
ANR	6199999	Identifier	qemuio_command_usage		6199755	0					
ANR	6200000	ArgumentList	& open_cmd		6199755	1					
ANR	6200001	Argument	& open_cmd		6199755	0					
ANR	6200002	UnaryOperationExpression	& open_cmd		6199755	0					
ANR	6200003	UnaryOperator	&		6199755	0					
ANR	6200004	Identifier	open_cmd		6199755	1					
ANR	6200005	IfStatement	if ( ! readonly )		6199755	8					
ANR	6200006	Condition	! readonly	119:8:1801:1809	6199755	0	True				
ANR	6200007	UnaryOperationExpression	! readonly		6199755	0					
ANR	6200008	UnaryOperator	!		6199755	0					
ANR	6200009	Identifier	readonly		6199755	1					
ANR	6200010	CompoundStatement		117:19:1750:1750	6199755	1					
ANR	6200011	ExpressionStatement	flags |= BDRV_O_RDWR	121:8:1823:1843	6199755	0	True				
ANR	6200012	AssignmentExpression	flags |= BDRV_O_RDWR		6199755	0		|=			
ANR	6200013	Identifier	flags		6199755	0					
ANR	6200014	Identifier	BDRV_O_RDWR		6199755	1					
ANR	6200015	IfStatement	if ( imageOpts && ( optind == argc - 1 ) )		6199755	9					
ANR	6200016	Condition	imageOpts && ( optind == argc - 1 )	127:8:1863:1895	6199755	0	True				
ANR	6200017	AndExpression	imageOpts && ( optind == argc - 1 )		6199755	0		&&			
ANR	6200018	Identifier	imageOpts		6199755	0					
ANR	6200019	EqualityExpression	optind == argc - 1		6199755	1		==			
ANR	6200020	Identifier	optind		6199755	0					
ANR	6200021	AdditiveExpression	argc - 1		6199755	1		-			
ANR	6200022	Identifier	argc		6199755	0					
ANR	6200023	PrimaryExpression	1		6199755	1					
ANR	6200024	CompoundStatement		125:43:1836:1836	6199755	1					
ANR	6200025	IfStatement	"if ( ! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false ) )"		6199755	0					
ANR	6200026	Condition	"! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"	129:12:1913:1970	6199755	0	True				
ANR	6200027	UnaryOperationExpression	"! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"		6199755	0					
ANR	6200028	UnaryOperator	!		6199755	0					
ANR	6200029	CallExpression	"qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"		6199755	1					
ANR	6200030	Callee	qemu_opts_parse_noisily		6199755	0					
ANR	6200031	Identifier	qemu_opts_parse_noisily		6199755	0					
ANR	6200032	ArgumentList	& empty_opts		6199755	1					
ANR	6200033	Argument	& empty_opts		6199755	0					
ANR	6200034	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6200035	UnaryOperator	&		6199755	0					
ANR	6200036	Identifier	empty_opts		6199755	1					
ANR	6200037	Argument	argv [ optind ]		6199755	1					
ANR	6200038	ArrayIndexing	argv [ optind ]		6199755	0					
ANR	6200039	Identifier	argv		6199755	0					
ANR	6200040	Identifier	optind		6199755	1					
ANR	6200041	Argument	false		6199755	2					
ANR	6200042	Identifier	false		6199755	0					
ANR	6200043	CompoundStatement		127:72:1911:1911	6199755	1					
ANR	6200044	ExpressionStatement	qemu_opts_reset ( & empty_opts )	131:12:1988:2016	6199755	0	True				
ANR	6200045	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6200046	Callee	qemu_opts_reset		6199755	0					
ANR	6200047	Identifier	qemu_opts_reset		6199755	0					
ANR	6200048	ArgumentList	& empty_opts		6199755	1					
ANR	6200049	Argument	& empty_opts		6199755	0					
ANR	6200050	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6200051	UnaryOperator	&		6199755	0					
ANR	6200052	Identifier	empty_opts		6199755	1					
ANR	6200053	ReturnStatement	return 0 ;	133:12:2031:2039	6199755	1	True				
ANR	6200054	PrimaryExpression	0		6199755	0					
ANR	6200055	ExpressionStatement	optind ++	137:8:2061:2069	6199755	1	True				
ANR	6200056	PostIncDecOperationExpression	optind ++		6199755	0					
ANR	6200057	Identifier	optind		6199755	0					
ANR	6200058	IncDec	++		6199755	1					
ANR	6200059	ExpressionStatement	"qopts = qemu_opts_find ( & empty_opts , NULL )"	143:4:2085:2126	6199755	10	True				
ANR	6200060	AssignmentExpression	"qopts = qemu_opts_find ( & empty_opts , NULL )"		6199755	0		=			
ANR	6200061	Identifier	qopts		6199755	0					
ANR	6200062	CallExpression	"qemu_opts_find ( & empty_opts , NULL )"		6199755	1					
ANR	6200063	Callee	qemu_opts_find		6199755	0					
ANR	6200064	Identifier	qemu_opts_find		6199755	0					
ANR	6200065	ArgumentList	& empty_opts		6199755	1					
ANR	6200066	Argument	& empty_opts		6199755	0					
ANR	6200067	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6200068	UnaryOperator	&		6199755	0					
ANR	6200069	Identifier	empty_opts		6199755	1					
ANR	6200070	Argument	NULL		6199755	1					
ANR	6200071	Identifier	NULL		6199755	0					
ANR	6200072	ExpressionStatement	"opts = qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"	145:4:2133:2186	6199755	11	True				
ANR	6200073	AssignmentExpression	"opts = qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"		6199755	0		=			
ANR	6200074	Identifier	opts		6199755	0					
ANR	6200075	ConditionalExpression	"qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"		6199755	1					
ANR	6200076	Condition	qopts		6199755	0					
ANR	6200077	Identifier	qopts		6199755	0					
ANR	6200078	CallExpression	"qemu_opts_to_qdict ( qopts , NULL )"		6199755	1					
ANR	6200079	Callee	qemu_opts_to_qdict		6199755	0					
ANR	6200080	Identifier	qemu_opts_to_qdict		6199755	0					
ANR	6200081	ArgumentList	qopts		6199755	1					
ANR	6200082	Argument	qopts		6199755	0					
ANR	6200083	Identifier	qopts		6199755	0					
ANR	6200084	Argument	NULL		6199755	1					
ANR	6200085	Identifier	NULL		6199755	0					
ANR	6200086	Identifier	NULL		6199755	2					
ANR	6200087	ExpressionStatement	qemu_opts_reset ( & empty_opts )	147:4:2193:2221	6199755	12	True				
ANR	6200088	CallExpression	qemu_opts_reset ( & empty_opts )		6199755	0					
ANR	6200089	Callee	qemu_opts_reset		6199755	0					
ANR	6200090	Identifier	qemu_opts_reset		6199755	0					
ANR	6200091	ArgumentList	& empty_opts		6199755	1					
ANR	6200092	Argument	& empty_opts		6199755	0					
ANR	6200093	UnaryOperationExpression	& empty_opts		6199755	0					
ANR	6200094	UnaryOperator	&		6199755	0					
ANR	6200095	Identifier	empty_opts		6199755	1					
ANR	6200096	IfStatement	if ( optind == argc - 1 )		6199755	13					
ANR	6200097	Condition	optind == argc - 1	151:8:2234:2251	6199755	0	True				
ANR	6200098	EqualityExpression	optind == argc - 1		6199755	0		==			
ANR	6200099	Identifier	optind		6199755	0					
ANR	6200100	AdditiveExpression	argc - 1		6199755	1		-			
ANR	6200101	Identifier	argc		6199755	0					
ANR	6200102	PrimaryExpression	1		6199755	1					
ANR	6200103	CompoundStatement		149:28:2192:2192	6199755	1					
ANR	6200104	ReturnStatement	"return openfile ( argv [ optind ] , flags , writethrough , force_share , opts ) ;"	153:8:2265:2334	6199755	0	True				
ANR	6200105	CallExpression	"openfile ( argv [ optind ] , flags , writethrough , force_share , opts )"		6199755	0					
ANR	6200106	Callee	openfile		6199755	0					
ANR	6200107	Identifier	openfile		6199755	0					
ANR	6200108	ArgumentList	argv [ optind ]		6199755	1					
ANR	6200109	Argument	argv [ optind ]		6199755	0					
ANR	6200110	ArrayIndexing	argv [ optind ]		6199755	0					
ANR	6200111	Identifier	argv		6199755	0					
ANR	6200112	Identifier	optind		6199755	1					
ANR	6200113	Argument	flags		6199755	1					
ANR	6200114	Identifier	flags		6199755	0					
ANR	6200115	Argument	writethrough		6199755	2					
ANR	6200116	Identifier	writethrough		6199755	0					
ANR	6200117	Argument	force_share		6199755	3					
ANR	6200118	Identifier	force_share		6199755	0					
ANR	6200119	Argument	opts		6199755	4					
ANR	6200120	Identifier	opts		6199755	0					
ANR	6200121	ElseStatement	else		6199755	0					
ANR	6200122	IfStatement	if ( optind == argc )		6199755	0					
ANR	6200123	Condition	optind == argc	155:15:2352:2365	6199755	0	True				
ANR	6200124	EqualityExpression	optind == argc		6199755	0		==			
ANR	6200125	Identifier	optind		6199755	0					
ANR	6200126	Identifier	argc		6199755	1					
ANR	6200127	CompoundStatement		153:31:2306:2306	6199755	1					
ANR	6200128	ReturnStatement	"return openfile ( NULL , flags , writethrough , force_share , opts ) ;"	157:8:2379:2440	6199755	0	True				
ANR	6200129	CallExpression	"openfile ( NULL , flags , writethrough , force_share , opts )"		6199755	0					
ANR	6200130	Callee	openfile		6199755	0					
ANR	6200131	Identifier	openfile		6199755	0					
ANR	6200132	ArgumentList	NULL		6199755	1					
ANR	6200133	Argument	NULL		6199755	0					
ANR	6200134	Identifier	NULL		6199755	0					
ANR	6200135	Argument	flags		6199755	1					
ANR	6200136	Identifier	flags		6199755	0					
ANR	6200137	Argument	writethrough		6199755	2					
ANR	6200138	Identifier	writethrough		6199755	0					
ANR	6200139	Argument	force_share		6199755	3					
ANR	6200140	Identifier	force_share		6199755	0					
ANR	6200141	Argument	opts		6199755	4					
ANR	6200142	Identifier	opts		6199755	0					
ANR	6200143	ElseStatement	else		6199755	0					
ANR	6200144	CompoundStatement		157:11:2392:2392	6199755	0					
ANR	6200145	ExpressionStatement	QDECREF ( opts )	161:8:2465:2478	6199755	0	True				
ANR	6200146	CallExpression	QDECREF ( opts )		6199755	0					
ANR	6200147	Callee	QDECREF		6199755	0					
ANR	6200148	Identifier	QDECREF		6199755	0					
ANR	6200149	ArgumentList	opts		6199755	1					
ANR	6200150	Argument	opts		6199755	0					
ANR	6200151	Identifier	opts		6199755	0					
ANR	6200152	ReturnStatement	return qemuio_command_usage ( & open_cmd ) ;	163:8:2489:2527	6199755	1	True				
ANR	6200153	CallExpression	qemuio_command_usage ( & open_cmd )		6199755	0					
ANR	6200154	Callee	qemuio_command_usage		6199755	0					
ANR	6200155	Identifier	qemuio_command_usage		6199755	0					
ANR	6200156	ArgumentList	& open_cmd		6199755	1					
ANR	6200157	Argument	& open_cmd		6199755	0					
ANR	6200158	UnaryOperationExpression	& open_cmd		6199755	0					
ANR	6200159	UnaryOperator	&		6199755	0					
ANR	6200160	Identifier	open_cmd		6199755	1					
ANR	6200161	ReturnType	static int		6199755	1					
ANR	6200162	Identifier	open_f		6199755	2					
ANR	6200163	ParameterList	"BlockBackend * blk , int argc , char * * argv"		6199755	3					
ANR	6200164	Parameter	BlockBackend * blk	1:18:18:34	6199755	0	True				
ANR	6200165	ParameterType	BlockBackend *		6199755	0					
ANR	6200166	Identifier	blk		6199755	1					
ANR	6200167	Parameter	int argc	1:37:37:44	6199755	1	True				
ANR	6200168	ParameterType	int		6199755	0					
ANR	6200169	Identifier	argc		6199755	1					
ANR	6200170	Parameter	char * * argv	1:47:47:57	6199755	2	True				
ANR	6200171	ParameterType	char * *		6199755	0					
ANR	6200172	Identifier	argv		6199755	1					
ANR	6200173	CFGEntryNode	ENTRY		6199755		True				
ANR	6200174	CFGExitNode	EXIT		6199755		True				
ANR	6200175	Symbol	BDRV_O_UNMAP		6199755						
ANR	6200176	Symbol	* optind		6199755						
ANR	6200177	Symbol	optind		6199755						
ANR	6200178	Symbol	flags		6199755						
ANR	6200179	Symbol	optarg		6199755						
ANR	6200180	Symbol	* argv		6199755						
ANR	6200181	Symbol	bdrv_parse_cache_mode		6199755						
ANR	6200182	Symbol	argv		6199755						
ANR	6200183	Symbol	bdrv_parse_discard_flags		6199755						
ANR	6200184	Symbol	readonly		6199755						
ANR	6200185	Symbol	opts		6199755						
ANR	6200186	Symbol	getopt		6199755						
ANR	6200187	Symbol	qemu_opts_find		6199755						
ANR	6200188	Symbol	qemu_opts_to_qdict		6199755						
ANR	6200189	Symbol	& flags		6199755						
ANR	6200190	Symbol	& open_cmd		6199755						
ANR	6200191	Symbol	& empty_opts		6199755						
ANR	6200192	Symbol	blk		6199755						
ANR	6200193	Symbol	argc		6199755						
ANR	6200194	Symbol	c		6199755						
ANR	6200195	Symbol	BDRV_O_SNAPSHOT		6199755						
ANR	6200196	Symbol	NULL		6199755						
ANR	6200197	Symbol	false		6199755						
ANR	6200198	Symbol	writethrough		6199755						
ANR	6200199	Symbol	BDRV_O_NATIVE_AIO		6199755						
ANR	6200200	Symbol	BDRV_O_NOCACHE		6199755						
ANR	6200201	Symbol	qemuio_command_usage		6199755						
ANR	6200202	Symbol	openfile		6199755						
ANR	6200203	Symbol	& writethrough		6199755						
ANR	6200204	Symbol	force_share		6199755						
ANR	6200205	Symbol	true		6199755						
ANR	6200206	Symbol	qopts		6199755						
ANR	6200207	Symbol	imageOpts		6199755						
ANR	6200208	Symbol	qemu_opts_parse_noisily		6199755						
ANR	6200209	Symbol	BDRV_O_RDWR		6199755						
