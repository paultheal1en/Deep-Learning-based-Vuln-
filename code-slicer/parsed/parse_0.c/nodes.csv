command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6301608	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_0.c								
ANR	6301609	Function	parse	1:0:0:2282							
ANR	6301610	FunctionDef	"parse (AVCodecParserContext * ctx , AVCodecContext * avctx , const uint8_t * * out_data , int * out_size , const uint8_t * data , int size)"		6301609	0					
ANR	6301611	CompoundStatement		9:0:194:2282	6301609	0					
ANR	6301612	IdentifierDeclStatement	VP9ParseContext * s = ctx -> priv_data ;	11:4:201:236	6301609	0	True				
ANR	6301613	IdentifierDecl	* s = ctx -> priv_data		6301609	0					
ANR	6301614	IdentifierDeclType	VP9ParseContext *		6301609	0					
ANR	6301615	Identifier	s		6301609	1					
ANR	6301616	AssignmentExpression	* s = ctx -> priv_data		6301609	2		=			
ANR	6301617	Identifier	s		6301609	0					
ANR	6301618	PtrMemberAccess	ctx -> priv_data		6301609	1					
ANR	6301619	Identifier	ctx		6301609	0					
ANR	6301620	Identifier	priv_data		6301609	1					
ANR	6301621	IdentifierDeclStatement	int marker ;	13:4:243:253	6301609	1	True				
ANR	6301622	IdentifierDecl	marker		6301609	0					
ANR	6301623	IdentifierDeclType	int		6301609	0					
ANR	6301624	Identifier	marker		6301609	1					
ANR	6301625	IfStatement	if ( size <= 0 )		6301609	2					
ANR	6301626	Condition	size <= 0	17:8:266:274	6301609	0	True				
ANR	6301627	RelationalExpression	size <= 0		6301609	0		<=			
ANR	6301628	Identifier	size		6301609	0					
ANR	6301629	PrimaryExpression	0		6301609	1					
ANR	6301630	CompoundStatement		9:19:82:82	6301609	1					
ANR	6301631	ExpressionStatement	* out_size = 0	19:8:288:301	6301609	0	True				
ANR	6301632	AssignmentExpression	* out_size = 0		6301609	0		=			
ANR	6301633	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301634	UnaryOperator	*		6301609	0					
ANR	6301635	Identifier	out_size		6301609	1					
ANR	6301636	PrimaryExpression	0		6301609	1					
ANR	6301637	ExpressionStatement	* out_data = data	21:8:312:328	6301609	1	True				
ANR	6301638	AssignmentExpression	* out_data = data		6301609	0		=			
ANR	6301639	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301640	UnaryOperator	*		6301609	0					
ANR	6301641	Identifier	out_data		6301609	1					
ANR	6301642	Identifier	data		6301609	1					
ANR	6301643	ReturnStatement	return 0 ;	25:8:341:349	6301609	2	True				
ANR	6301644	PrimaryExpression	0		6301609	0					
ANR	6301645	IfStatement	if ( s -> n_frames > 0 )		6301609	3					
ANR	6301646	Condition	s -> n_frames > 0	31:8:369:383	6301609	0	True				
ANR	6301647	RelationalExpression	s -> n_frames > 0		6301609	0		>			
ANR	6301648	PtrMemberAccess	s -> n_frames		6301609	0					
ANR	6301649	Identifier	s		6301609	0					
ANR	6301650	Identifier	n_frames		6301609	1					
ANR	6301651	PrimaryExpression	0		6301609	1					
ANR	6301652	CompoundStatement		23:25:191:191	6301609	1					
ANR	6301653	ExpressionStatement	* out_data = data	33:8:397:413	6301609	0	True				
ANR	6301654	AssignmentExpression	* out_data = data		6301609	0		=			
ANR	6301655	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301656	UnaryOperator	*		6301609	0					
ANR	6301657	Identifier	out_data		6301609	1					
ANR	6301658	Identifier	data		6301609	1					
ANR	6301659	ExpressionStatement	* out_size = s -> size [ -- s -> n_frames ]	35:8:424:458	6301609	1	True				
ANR	6301660	AssignmentExpression	* out_size = s -> size [ -- s -> n_frames ]		6301609	0		=			
ANR	6301661	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301662	UnaryOperator	*		6301609	0					
ANR	6301663	Identifier	out_size		6301609	1					
ANR	6301664	ArrayIndexing	s -> size [ -- s -> n_frames ]		6301609	1					
ANR	6301665	PtrMemberAccess	s -> size		6301609	0					
ANR	6301666	Identifier	s		6301609	0					
ANR	6301667	Identifier	size		6301609	1					
ANR	6301668	UnaryExpression	-- s -> n_frames		6301609	1					
ANR	6301669	IncDec	--		6301609	0					
ANR	6301670	PtrMemberAccess	s -> n_frames		6301609	1					
ANR	6301671	Identifier	s		6301609	0					
ANR	6301672	Identifier	n_frames		6301609	1					
ANR	6301673	ExpressionStatement	"parse_frame ( ctx , * out_data , * out_size )"	37:8:469:507	6301609	2	True				
ANR	6301674	CallExpression	"parse_frame ( ctx , * out_data , * out_size )"		6301609	0					
ANR	6301675	Callee	parse_frame		6301609	0					
ANR	6301676	Identifier	parse_frame		6301609	0					
ANR	6301677	ArgumentList	ctx		6301609	1					
ANR	6301678	Argument	ctx		6301609	0					
ANR	6301679	Identifier	ctx		6301609	0					
ANR	6301680	Argument	* out_data		6301609	1					
ANR	6301681	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301682	UnaryOperator	*		6301609	0					
ANR	6301683	Identifier	out_data		6301609	1					
ANR	6301684	Argument	* out_size		6301609	2					
ANR	6301685	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301686	UnaryOperator	*		6301609	0					
ANR	6301687	Identifier	out_size		6301609	1					
ANR	6301688	ReturnStatement	return s -> n_frames > 0 ? * out_size : size ;	41:8:520:589	6301609	3	True				
ANR	6301689	ConditionalExpression	s -> n_frames > 0 ? * out_size : size		6301609	0					
ANR	6301690	Condition	s -> n_frames > 0		6301609	0					
ANR	6301691	RelationalExpression	s -> n_frames > 0		6301609	0		>			
ANR	6301692	PtrMemberAccess	s -> n_frames		6301609	0					
ANR	6301693	Identifier	s		6301609	0					
ANR	6301694	Identifier	n_frames		6301609	1					
ANR	6301695	PrimaryExpression	0		6301609	1					
ANR	6301696	UnaryOperationExpression	* out_size		6301609	1					
ANR	6301697	UnaryOperator	*		6301609	0					
ANR	6301698	Identifier	out_size		6301609	1					
ANR	6301699	Identifier	size		6301609	2					
ANR	6301700	ExpressionStatement	marker = data [ size - 1 ]	47:4:605:628	6301609	4	True				
ANR	6301701	AssignmentExpression	marker = data [ size - 1 ]		6301609	0		=			
ANR	6301702	Identifier	marker		6301609	0					
ANR	6301703	ArrayIndexing	data [ size - 1 ]		6301609	1					
ANR	6301704	Identifier	data		6301609	0					
ANR	6301705	AdditiveExpression	size - 1		6301609	1		-			
ANR	6301706	Identifier	size		6301609	0					
ANR	6301707	PrimaryExpression	1		6301609	1					
ANR	6301708	IfStatement	if ( ( marker & 0xe0 ) == 0xc0 )		6301609	5					
ANR	6301709	Condition	( marker & 0xe0 ) == 0xc0	49:8:639:661	6301609	0	True				
ANR	6301710	EqualityExpression	( marker & 0xe0 ) == 0xc0		6301609	0		==			
ANR	6301711	BitAndExpression	marker & 0xe0		6301609	0		&			
ANR	6301712	Identifier	marker		6301609	0					
ANR	6301713	PrimaryExpression	0xe0		6301609	1					
ANR	6301714	PrimaryExpression	0xc0		6301609	1					
ANR	6301715	CompoundStatement		45:8:529:594	6301609	1					
ANR	6301716	IdentifierDeclStatement	int nbytes = 1 + ( ( marker >> 3 ) & 0x3 ) ;	51:8:675:713	6301609	0	True				
ANR	6301717	IdentifierDecl	nbytes = 1 + ( ( marker >> 3 ) & 0x3 )		6301609	0					
ANR	6301718	IdentifierDeclType	int		6301609	0					
ANR	6301719	Identifier	nbytes		6301609	1					
ANR	6301720	AssignmentExpression	nbytes = 1 + ( ( marker >> 3 ) & 0x3 )		6301609	2		=			
ANR	6301721	Identifier	nbytes		6301609	0					
ANR	6301722	AdditiveExpression	1 + ( ( marker >> 3 ) & 0x3 )		6301609	1		+			
ANR	6301723	PrimaryExpression	1		6301609	0					
ANR	6301724	BitAndExpression	( marker >> 3 ) & 0x3		6301609	1		&			
ANR	6301725	ShiftExpression	marker >> 3		6301609	0		>>			
ANR	6301726	Identifier	marker		6301609	0					
ANR	6301727	PrimaryExpression	3		6301609	1					
ANR	6301728	PrimaryExpression	0x3		6301609	1					
ANR	6301729	IdentifierDeclStatement	"int n_frames = 1 + ( marker & 0x7 ) , idx_sz = 2 + n_frames * nbytes ;"	53:8:724:789	6301609	1	True				
ANR	6301730	IdentifierDecl	n_frames = 1 + ( marker & 0x7 )		6301609	0					
ANR	6301731	IdentifierDeclType	int		6301609	0					
ANR	6301732	Identifier	n_frames		6301609	1					
ANR	6301733	AssignmentExpression	n_frames = 1 + ( marker & 0x7 )		6301609	2		=			
ANR	6301734	Identifier	n_frames		6301609	0					
ANR	6301735	AdditiveExpression	1 + ( marker & 0x7 )		6301609	1		+			
ANR	6301736	PrimaryExpression	1		6301609	0					
ANR	6301737	BitAndExpression	marker & 0x7		6301609	1		&			
ANR	6301738	Identifier	marker		6301609	0					
ANR	6301739	PrimaryExpression	0x7		6301609	1					
ANR	6301740	IdentifierDecl	idx_sz = 2 + n_frames * nbytes		6301609	1					
ANR	6301741	IdentifierDeclType	int		6301609	0					
ANR	6301742	Identifier	idx_sz		6301609	1					
ANR	6301743	AssignmentExpression	idx_sz = 2 + n_frames * nbytes		6301609	2		=			
ANR	6301744	Identifier	idx_sz		6301609	0					
ANR	6301745	AdditiveExpression	2 + n_frames * nbytes		6301609	1		+			
ANR	6301746	PrimaryExpression	2		6301609	0					
ANR	6301747	MultiplicativeExpression	n_frames * nbytes		6301609	1		*			
ANR	6301748	Identifier	n_frames		6301609	0					
ANR	6301749	Identifier	nbytes		6301609	1					
ANR	6301750	IfStatement	if ( size >= idx_sz && data [ size - idx_sz ] == marker )		6301609	2					
ANR	6301751	Condition	size >= idx_sz && data [ size - idx_sz ] == marker	57:12:806:852	6301609	0	True				
ANR	6301752	AndExpression	size >= idx_sz && data [ size - idx_sz ] == marker		6301609	0		&&			
ANR	6301753	RelationalExpression	size >= idx_sz		6301609	0		>=			
ANR	6301754	Identifier	size		6301609	0					
ANR	6301755	Identifier	idx_sz		6301609	1					
ANR	6301756	EqualityExpression	data [ size - idx_sz ] == marker		6301609	1		==			
ANR	6301757	ArrayIndexing	data [ size - idx_sz ]		6301609	0					
ANR	6301758	Identifier	data		6301609	0					
ANR	6301759	AdditiveExpression	size - idx_sz		6301609	1		-			
ANR	6301760	Identifier	size		6301609	0					
ANR	6301761	Identifier	idx_sz		6301609	1					
ANR	6301762	Identifier	marker		6301609	1					
ANR	6301763	CompoundStatement		53:12:735:748	6301609	1					
ANR	6301764	IdentifierDeclStatement	const uint8_t * idx = data + size + 1 - idx_sz ;	59:12:870:915	6301609	0	True				
ANR	6301765	IdentifierDecl	* idx = data + size + 1 - idx_sz		6301609	0					
ANR	6301766	IdentifierDeclType	const uint8_t *		6301609	0					
ANR	6301767	Identifier	idx		6301609	1					
ANR	6301768	AssignmentExpression	* idx = data + size + 1 - idx_sz		6301609	2		=			
ANR	6301769	Identifier	idx		6301609	0					
ANR	6301770	AdditiveExpression	data + size + 1 - idx_sz		6301609	1		+			
ANR	6301771	Identifier	data		6301609	0					
ANR	6301772	AdditiveExpression	size + 1 - idx_sz		6301609	1		+			
ANR	6301773	Identifier	size		6301609	0					
ANR	6301774	AdditiveExpression	1 - idx_sz		6301609	1		-			
ANR	6301775	PrimaryExpression	1		6301609	0					
ANR	6301776	Identifier	idx_sz		6301609	1					
ANR	6301777	IdentifierDeclStatement	int first = 1 ;	61:12:930:943	6301609	1	True				
ANR	6301778	IdentifierDecl	first = 1		6301609	0					
ANR	6301779	IdentifierDeclType	int		6301609	0					
ANR	6301780	Identifier	first		6301609	1					
ANR	6301781	AssignmentExpression	first = 1		6301609	2		=			
ANR	6301782	Identifier	first		6301609	0					
ANR	6301783	PrimaryExpression	1		6301609	1					
ANR	6301784	SwitchStatement	switch ( nbytes )		6301609	2					
ANR	6301785	Condition	nbytes	65:20:968:973	6301609	0	True				
ANR	6301786	Identifier	nbytes		6301609	0					
ANR	6301787	CompoundStatement		107:24:1779:1822	6301609	1					
ANR	6301788	Statement	define	67:1:980:985	6301609	0	True				
ANR	6301789	Statement	case_n	67:8:987:992	6301609	1	True				
ANR	6301790	Statement	(	67:14:993:993	6301609	2	True				
ANR	6301791	Statement	a	67:15:994:994	6301609	3	True				
ANR	6301792	Statement	","	67:16:995:995	6301609	4	True				
ANR	6301793	Statement	rd	67:18:997:998	6301609	5	True				
ANR	6301794	Statement	)	67:20:999:999	6301609	6	True				
ANR	6301795	Label	case a :	69:12:1016:1022	6301609	7	True				
ANR	6301796	Identifier	a		6301609	0					
ANR	6301797	WhileStatement	while ( n_frames -- )		6301609	8					
ANR	6301798	Condition	n_frames --	71:23:1050:1059	6301609	0	True				
ANR	6301799	PostIncDecOperationExpression	n_frames --		6301609	0					
ANR	6301800	Identifier	n_frames		6301609	0					
ANR	6301801	IncDec	--		6301609	1					
ANR	6301802	CompoundStatement		65:20:892:903	6301609	1					
ANR	6301803	IdentifierDeclStatement	int sz = rd ;	73:20:1087:1098	6301609	0	True				
ANR	6301804	IdentifierDecl	sz = rd		6301609	0					
ANR	6301805	IdentifierDeclType	int		6301609	0					
ANR	6301806	Identifier	sz		6301609	1					
ANR	6301807	AssignmentExpression	sz = rd		6301609	2		=			
ANR	6301808	Identifier	rd		6301609	0					
ANR	6301809	Identifier	rd		6301609	1					
ANR	6301810	ExpressionStatement	idx += a	75:20:1123:1131	6301609	1	True				
ANR	6301811	AssignmentExpression	idx += a		6301609	0		+=			
ANR	6301812	Identifier	idx		6301609	0					
ANR	6301813	Identifier	a		6301609	1					
ANR	6301814	IfStatement	if ( sz > size )		6301609	2					
ANR	6301815	Condition	sz > size	77:24:1160:1168	6301609	0	True				
ANR	6301816	RelationalExpression	sz > size		6301609	0		>			
ANR	6301817	Identifier	sz		6301609	0					
ANR	6301818	Identifier	size		6301609	1					
ANR	6301819	CompoundStatement		69:35:976:976	6301609	1					
ANR	6301820	ExpressionStatement	s -> n_frames = 0	79:24:1200:1215	6301609	0	True				
ANR	6301821	AssignmentExpression	s -> n_frames = 0		6301609	0		=			
ANR	6301822	PtrMemberAccess	s -> n_frames		6301609	0					
ANR	6301823	Identifier	s		6301609	0					
ANR	6301824	Identifier	n_frames		6301609	1					
ANR	6301825	PrimaryExpression	0		6301609	1					
ANR	6301826	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Superframe packet size too big: %d > %d\\n"" , sz , size )"	81:24:1244:1394	6301609	1	True				
ANR	6301827	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Superframe packet size too big: %d > %d\\n"" , sz , size )"		6301609	0					
ANR	6301828	Callee	av_log		6301609	0					
ANR	6301829	Identifier	av_log		6301609	0					
ANR	6301830	ArgumentList	avctx		6301609	1					
ANR	6301831	Argument	avctx		6301609	0					
ANR	6301832	Identifier	avctx		6301609	0					
ANR	6301833	Argument	AV_LOG_ERROR		6301609	1					
ANR	6301834	Identifier	AV_LOG_ERROR		6301609	0					
ANR	6301835	Argument	"""Superframe packet size too big: %d > %d\\n"""		6301609	2					
ANR	6301836	PrimaryExpression	"""Superframe packet size too big: %d > %d\\n"""		6301609	0					
ANR	6301837	Argument	sz		6301609	3					
ANR	6301838	Identifier	sz		6301609	0					
ANR	6301839	Argument	size		6301609	4					
ANR	6301840	Identifier	size		6301609	0					
ANR	6301841	ReturnStatement	return AVERROR_INVALIDDATA ;	87:24:1423:1449	6301609	2	True				
ANR	6301842	Identifier	AVERROR_INVALIDDATA		6301609	0					
ANR	6301843	IfStatement	if ( first )		6301609	3					
ANR	6301844	Condition	first	91:24:1503:1507	6301609	0	True				
ANR	6301845	Identifier	first		6301609	0					
ANR	6301846	CompoundStatement		83:31:1315:1315	6301609	1					
ANR	6301847	ExpressionStatement	first = 0	93:24:1539:1548	6301609	0	True				
ANR	6301848	AssignmentExpression	first = 0		6301609	0		=			
ANR	6301849	Identifier	first		6301609	0					
ANR	6301850	PrimaryExpression	0		6301609	1					
ANR	6301851	ExpressionStatement	* out_data = data	95:24:1577:1593	6301609	1	True				
ANR	6301852	AssignmentExpression	* out_data = data		6301609	0		=			
ANR	6301853	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301854	UnaryOperator	*		6301609	0					
ANR	6301855	Identifier	out_data		6301609	1					
ANR	6301856	Identifier	data		6301609	1					
ANR	6301857	ExpressionStatement	* out_size = sz	97:24:1622:1636	6301609	2	True				
ANR	6301858	AssignmentExpression	* out_size = sz		6301609	0		=			
ANR	6301859	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301860	UnaryOperator	*		6301609	0					
ANR	6301861	Identifier	out_size		6301609	1					
ANR	6301862	Identifier	sz		6301609	1					
ANR	6301863	ExpressionStatement	s -> n_frames = n_frames	99:24:1665:1687	6301609	3	True				
ANR	6301864	AssignmentExpression	s -> n_frames = n_frames		6301609	0		=			
ANR	6301865	PtrMemberAccess	s -> n_frames		6301609	0					
ANR	6301866	Identifier	s		6301609	0					
ANR	6301867	Identifier	n_frames		6301609	1					
ANR	6301868	Identifier	n_frames		6301609	1					
ANR	6301869	ElseStatement	else		6301609	0					
ANR	6301870	CompoundStatement		93:27:1524:1524	6301609	0					
ANR	6301871	ExpressionStatement	s -> size [ n_frames ] = sz	103:24:1748:1770	6301609	0	True				
ANR	6301872	AssignmentExpression	s -> size [ n_frames ] = sz		6301609	0		=			
ANR	6301873	ArrayIndexing	s -> size [ n_frames ]		6301609	0					
ANR	6301874	PtrMemberAccess	s -> size		6301609	0					
ANR	6301875	Identifier	s		6301609	0					
ANR	6301876	Identifier	size		6301609	1					
ANR	6301877	Identifier	n_frames		6301609	1					
ANR	6301878	Identifier	sz		6301609	1					
ANR	6301879	ExpressionStatement	data += sz	107:20:1820:1830	6301609	4	True				
ANR	6301880	AssignmentExpression	data += sz		6301609	0		+=			
ANR	6301881	Identifier	data		6301609	0					
ANR	6301882	Identifier	sz		6301609	1					
ANR	6301883	ExpressionStatement	size -= sz	109:20:1855:1865	6301609	5	True				
ANR	6301884	AssignmentExpression	size -= sz		6301609	0		-=			
ANR	6301885	Identifier	size		6301609	0					
ANR	6301886	Identifier	sz		6301609	1					
ANR	6301887	ExpressionStatement	"parse_frame ( ctx , * out_data , * out_size )"	113:16:1907:1945	6301609	9	True				
ANR	6301888	CallExpression	"parse_frame ( ctx , * out_data , * out_size )"		6301609	0					
ANR	6301889	Callee	parse_frame		6301609	0					
ANR	6301890	Identifier	parse_frame		6301609	0					
ANR	6301891	ArgumentList	ctx		6301609	1					
ANR	6301892	Argument	ctx		6301609	0					
ANR	6301893	Identifier	ctx		6301609	0					
ANR	6301894	Argument	* out_data		6301609	1					
ANR	6301895	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301896	UnaryOperator	*		6301609	0					
ANR	6301897	Identifier	out_data		6301609	1					
ANR	6301898	Argument	* out_size		6301609	2					
ANR	6301899	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301900	UnaryOperator	*		6301609	0					
ANR	6301901	Identifier	out_size		6301609	1					
ANR	6301902	Statement	return	115:16:1966:1971	6301609	10	True				
ANR	6301903	Statement	*	115:23:1973:1973	6301609	11	True				
ANR	6301904	IdentifierDeclStatement	"out_size case_n ( 1 , * idx ) ;"	115:24:1974:2017	6301609	12	True				
ANR	6301905	IdentifierDecl	"case_n ( 1 , * idx )"		6301609	0					
ANR	6301906	IdentifierDeclType	out_size		6301609	0					
ANR	6301907	Identifier	case_n		6301609	1					
ANR	6301908	Expression	"1 , * idx"		6301609	2					
ANR	6301909	PrimaryExpression	1		6301609	0					
ANR	6301910	UnaryOperationExpression	* idx		6301609	1					
ANR	6301911	UnaryOperator	*		6301609	0					
ANR	6301912	Identifier	idx		6301609	1					
ANR	6301913	ExpressionStatement	"case_n ( 2 , AV_RL16 ( idx ) )"	121:16:2036:2059	6301609	13	True				
ANR	6301914	CallExpression	"case_n ( 2 , AV_RL16 ( idx ) )"		6301609	0					
ANR	6301915	Callee	case_n		6301609	0					
ANR	6301916	Identifier	case_n		6301609	0					
ANR	6301917	ArgumentList	2		6301609	1					
ANR	6301918	Argument	2		6301609	0					
ANR	6301919	PrimaryExpression	2		6301609	0					
ANR	6301920	Argument	AV_RL16 ( idx )		6301609	1					
ANR	6301921	CallExpression	AV_RL16 ( idx )		6301609	0					
ANR	6301922	Callee	AV_RL16		6301609	0					
ANR	6301923	Identifier	AV_RL16		6301609	0					
ANR	6301924	ArgumentList	idx		6301609	1					
ANR	6301925	Argument	idx		6301609	0					
ANR	6301926	Identifier	idx		6301609	0					
ANR	6301927	ExpressionStatement	"case_n ( 3 , AV_RL24 ( idx ) )"	123:16:2078:2101	6301609	14	True				
ANR	6301928	CallExpression	"case_n ( 3 , AV_RL24 ( idx ) )"		6301609	0					
ANR	6301929	Callee	case_n		6301609	0					
ANR	6301930	Identifier	case_n		6301609	0					
ANR	6301931	ArgumentList	3		6301609	1					
ANR	6301932	Argument	3		6301609	0					
ANR	6301933	PrimaryExpression	3		6301609	0					
ANR	6301934	Argument	AV_RL24 ( idx )		6301609	1					
ANR	6301935	CallExpression	AV_RL24 ( idx )		6301609	0					
ANR	6301936	Callee	AV_RL24		6301609	0					
ANR	6301937	Identifier	AV_RL24		6301609	0					
ANR	6301938	ArgumentList	idx		6301609	1					
ANR	6301939	Argument	idx		6301609	0					
ANR	6301940	Identifier	idx		6301609	0					
ANR	6301941	ExpressionStatement	"case_n ( 4 , AV_RL32 ( idx ) )"	125:16:2120:2143	6301609	15	True				
ANR	6301942	CallExpression	"case_n ( 4 , AV_RL32 ( idx ) )"		6301609	0					
ANR	6301943	Callee	case_n		6301609	0					
ANR	6301944	Identifier	case_n		6301609	0					
ANR	6301945	ArgumentList	4		6301609	1					
ANR	6301946	Argument	4		6301609	0					
ANR	6301947	PrimaryExpression	4		6301609	0					
ANR	6301948	Argument	AV_RL32 ( idx )		6301609	1					
ANR	6301949	CallExpression	AV_RL32 ( idx )		6301609	0					
ANR	6301950	Callee	AV_RL32		6301609	0					
ANR	6301951	Identifier	AV_RL32		6301609	0					
ANR	6301952	ArgumentList	idx		6301609	1					
ANR	6301953	Argument	idx		6301609	0					
ANR	6301954	Identifier	idx		6301609	0					
ANR	6301955	ExpressionStatement	* out_data = data	135:4:2185:2201	6301609	6	True				
ANR	6301956	AssignmentExpression	* out_data = data		6301609	0		=			
ANR	6301957	UnaryOperationExpression	* out_data		6301609	0					
ANR	6301958	UnaryOperator	*		6301609	0					
ANR	6301959	Identifier	out_data		6301609	1					
ANR	6301960	Identifier	data		6301609	1					
ANR	6301961	ExpressionStatement	* out_size = size	137:4:2208:2224	6301609	7	True				
ANR	6301962	AssignmentExpression	* out_size = size		6301609	0		=			
ANR	6301963	UnaryOperationExpression	* out_size		6301609	0					
ANR	6301964	UnaryOperator	*		6301609	0					
ANR	6301965	Identifier	out_size		6301609	1					
ANR	6301966	Identifier	size		6301609	1					
ANR	6301967	ExpressionStatement	"parse_frame ( ctx , data , size )"	139:4:2231:2259	6301609	8	True				
ANR	6301968	CallExpression	"parse_frame ( ctx , data , size )"		6301609	0					
ANR	6301969	Callee	parse_frame		6301609	0					
ANR	6301970	Identifier	parse_frame		6301609	0					
ANR	6301971	ArgumentList	ctx		6301609	1					
ANR	6301972	Argument	ctx		6301609	0					
ANR	6301973	Identifier	ctx		6301609	0					
ANR	6301974	Argument	data		6301609	1					
ANR	6301975	Identifier	data		6301609	0					
ANR	6301976	Argument	size		6301609	2					
ANR	6301977	Identifier	size		6301609	0					
ANR	6301978	ReturnStatement	return size ;	143:4:2268:2279	6301609	9	True				
ANR	6301979	Identifier	size		6301609	0					
ANR	6301980	ReturnType	static int		6301609	1					
ANR	6301981	Identifier	parse		6301609	2					
ANR	6301982	ParameterList	"AVCodecParserContext * ctx , AVCodecContext * avctx , const uint8_t * * out_data , int * out_size , const uint8_t * data , int size"		6301609	3					
ANR	6301983	Parameter	AVCodecParserContext * ctx	1:17:17:41	6301609	0	True				
ANR	6301984	ParameterType	AVCodecParserContext *		6301609	0					
ANR	6301985	Identifier	ctx		6301609	1					
ANR	6301986	Parameter	AVCodecContext * avctx	3:17:62:82	6301609	1	True				
ANR	6301987	ParameterType	AVCodecContext *		6301609	0					
ANR	6301988	Identifier	avctx		6301609	1					
ANR	6301989	Parameter	const uint8_t * * out_data	5:17:103:126	6301609	2	True				
ANR	6301990	ParameterType	const uint8_t * *		6301609	0					
ANR	6301991	Identifier	out_data		6301609	1					
ANR	6301992	Parameter	int * out_size	5:43:129:141	6301609	3	True				
ANR	6301993	ParameterType	int *		6301609	0					
ANR	6301994	Identifier	out_size		6301609	1					
ANR	6301995	Parameter	const uint8_t * data	7:17:162:180	6301609	4	True				
ANR	6301996	ParameterType	const uint8_t *		6301609	0					
ANR	6301997	Identifier	data		6301609	1					
ANR	6301998	Parameter	int size	7:38:183:190	6301609	5	True				
ANR	6301999	ParameterType	int		6301609	0					
ANR	6302000	Identifier	size		6301609	1					
ANR	6302001	CFGEntryNode	ENTRY		6301609		True				
ANR	6302002	CFGExitNode	EXIT		6301609		True				
ANR	6302003	Symbol	* idx_sz		6301609						
ANR	6302004	Symbol	s -> size		6301609						
ANR	6302005	Symbol	* n_frames		6301609						
ANR	6302006	Symbol	data		6301609						
ANR	6302007	Symbol	* s -> n_frames		6301609						
ANR	6302008	Symbol	ctx -> priv_data		6301609						
ANR	6302009	Symbol	out_data		6301609						
ANR	6302010	Symbol	idx_sz		6301609						
ANR	6302011	Symbol	* out_size		6301609						
ANR	6302012	Symbol	AV_RL24		6301609						
ANR	6302013	Symbol	* size		6301609						
ANR	6302014	Symbol	* * s		6301609						
ANR	6302015	Symbol	avctx		6301609						
ANR	6302016	Symbol	* out_data		6301609						
ANR	6302017	Symbol	a		6301609						
ANR	6302018	Symbol	case_n		6301609						
ANR	6302019	Symbol	n_frames		6301609						
ANR	6302020	Symbol	AV_LOG_ERROR		6301609						
ANR	6302021	Symbol	ctx		6301609						
ANR	6302022	Symbol	sz		6301609						
ANR	6302023	Symbol	out_size		6301609						
ANR	6302024	Symbol	* ctx		6301609						
ANR	6302025	Symbol	nbytes		6301609						
ANR	6302026	Symbol	rd		6301609						
ANR	6302027	Symbol	s		6301609						
ANR	6302028	Symbol	size		6301609						
ANR	6302029	Symbol	AV_RL32		6301609						
ANR	6302030	Symbol	marker		6301609						
ANR	6302031	Symbol	s -> n_frames		6301609						
ANR	6302032	Symbol	* s -> size		6301609						
ANR	6302033	Symbol	AVERROR_INVALIDDATA		6301609						
ANR	6302034	Symbol	idx		6301609						
ANR	6302035	Symbol	* s		6301609						
ANR	6302036	Symbol	* data		6301609						
ANR	6302037	Symbol	first		6301609						
ANR	6302038	Symbol	AV_RL16		6301609						
