command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7048584	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_set_log_filename_1.c								
ANR	7048585	Function	qemu_set_log_filename	1:0:0:588							
ANR	7048586	FunctionDef	qemu_set_log_filename (const char * filename)		7048585	0					
ANR	7048587	CompoundStatement		3:0:50:588	7048585	0					
ANR	7048588	IdentifierDeclStatement	char * pidstr ;	5:4:57:69	7048585	0	True				
ANR	7048589	IdentifierDecl	* pidstr		7048585	0					
ANR	7048590	IdentifierDeclType	char *		7048585	0					
ANR	7048591	Identifier	pidstr		7048585	1					
ANR	7048592	ExpressionStatement	g_free ( logfilename )	7:4:76:95	7048585	1	True				
ANR	7048593	CallExpression	g_free ( logfilename )		7048585	0					
ANR	7048594	Callee	g_free		7048585	0					
ANR	7048595	Identifier	g_free		7048585	0					
ANR	7048596	ArgumentList	logfilename		7048585	1					
ANR	7048597	Argument	logfilename		7048585	0					
ANR	7048598	Identifier	logfilename		7048585	0					
ANR	7048599	ExpressionStatement	"pidstr = strstr ( filename , ""%"" )"	11:4:104:134	7048585	2	True				
ANR	7048600	AssignmentExpression	"pidstr = strstr ( filename , ""%"" )"		7048585	0		=			
ANR	7048601	Identifier	pidstr		7048585	0					
ANR	7048602	CallExpression	"strstr ( filename , ""%"" )"		7048585	1					
ANR	7048603	Callee	strstr		7048585	0					
ANR	7048604	Identifier	strstr		7048585	0					
ANR	7048605	ArgumentList	filename		7048585	1					
ANR	7048606	Argument	filename		7048585	0					
ANR	7048607	Identifier	filename		7048585	0					
ANR	7048608	Argument	"""%"""		7048585	1					
ANR	7048609	PrimaryExpression	"""%"""		7048585	0					
ANR	7048610	IfStatement	if ( pidstr )		7048585	3					
ANR	7048611	Condition	pidstr	13:8:145:150	7048585	0	True				
ANR	7048612	Identifier	pidstr		7048585	0					
ANR	7048613	CompoundStatement		11:16:102:102	7048585	1					
ANR	7048614	IfStatement	"if ( pidstr [ 1 ] != 'd' || strchr ( pidstr + 2 , '%' ) )"		7048585	0					
ANR	7048615	Condition	"pidstr [ 1 ] != 'd' || strchr ( pidstr + 2 , '%' )"	17:12:230:272	7048585	0	True				
ANR	7048616	OrExpression	"pidstr [ 1 ] != 'd' || strchr ( pidstr + 2 , '%' )"		7048585	0		||			
ANR	7048617	EqualityExpression	pidstr [ 1 ] != 'd'		7048585	0		!=			
ANR	7048618	ArrayIndexing	pidstr [ 1 ]		7048585	0					
ANR	7048619	Identifier	pidstr		7048585	0					
ANR	7048620	PrimaryExpression	1		7048585	1					
ANR	7048621	PrimaryExpression	'd'		7048585	1					
ANR	7048622	CallExpression	"strchr ( pidstr + 2 , '%' )"		7048585	1					
ANR	7048623	Callee	strchr		7048585	0					
ANR	7048624	Identifier	strchr		7048585	0					
ANR	7048625	ArgumentList	pidstr + 2		7048585	1					
ANR	7048626	Argument	pidstr + 2		7048585	0					
ANR	7048627	AdditiveExpression	pidstr + 2		7048585	0		+			
ANR	7048628	Identifier	pidstr		7048585	0					
ANR	7048629	PrimaryExpression	2		7048585	1					
ANR	7048630	Argument	'%'		7048585	1					
ANR	7048631	PrimaryExpression	'%'		7048585	0					
ANR	7048632	CompoundStatement		15:57:224:224	7048585	1					
ANR	7048633	ExpressionStatement	"error_report ( ""Bad logfile format: %s"" , filename )"	19:12:290:338	7048585	0	True				
ANR	7048634	CallExpression	"error_report ( ""Bad logfile format: %s"" , filename )"		7048585	0					
ANR	7048635	Callee	error_report		7048585	0					
ANR	7048636	Identifier	error_report		7048585	0					
ANR	7048637	ArgumentList	"""Bad logfile format: %s"""		7048585	1					
ANR	7048638	Argument	"""Bad logfile format: %s"""		7048585	0					
ANR	7048639	PrimaryExpression	"""Bad logfile format: %s"""		7048585	0					
ANR	7048640	Argument	filename		7048585	1					
ANR	7048641	Identifier	filename		7048585	0					
ANR	7048642	ExpressionStatement	logfilename = NULL	21:12:353:371	7048585	1	True				
ANR	7048643	AssignmentExpression	logfilename = NULL		7048585	0		=			
ANR	7048644	Identifier	logfilename		7048585	0					
ANR	7048645	Identifier	NULL		7048585	1					
ANR	7048646	ElseStatement	else		7048585	0					
ANR	7048647	CompoundStatement		21:15:338:338	7048585	0					
ANR	7048648	ExpressionStatement	"logfilename = g_strdup_printf ( filename , getpid ( ) )"	25:12:404:453	7048585	0	True				
ANR	7048649	AssignmentExpression	"logfilename = g_strdup_printf ( filename , getpid ( ) )"		7048585	0		=			
ANR	7048650	Identifier	logfilename		7048585	0					
ANR	7048651	CallExpression	"g_strdup_printf ( filename , getpid ( ) )"		7048585	1					
ANR	7048652	Callee	g_strdup_printf		7048585	0					
ANR	7048653	Identifier	g_strdup_printf		7048585	0					
ANR	7048654	ArgumentList	filename		7048585	1					
ANR	7048655	Argument	filename		7048585	0					
ANR	7048656	Identifier	filename		7048585	0					
ANR	7048657	Argument	getpid ( )		7048585	1					
ANR	7048658	CallExpression	getpid ( )		7048585	0					
ANR	7048659	Callee	getpid		7048585	0					
ANR	7048660	Identifier	getpid		7048585	0					
ANR	7048661	ArgumentList			7048585	1					
ANR	7048662	ElseStatement	else		7048585	0					
ANR	7048663	CompoundStatement		27:11:427:427	7048585	0					
ANR	7048664	ExpressionStatement	logfilename = g_strdup ( filename )	31:8:489:521	7048585	0	True				
ANR	7048665	AssignmentExpression	logfilename = g_strdup ( filename )		7048585	0		=			
ANR	7048666	Identifier	logfilename		7048585	0					
ANR	7048667	CallExpression	g_strdup ( filename )		7048585	1					
ANR	7048668	Callee	g_strdup		7048585	0					
ANR	7048669	Identifier	g_strdup		7048585	0					
ANR	7048670	ArgumentList	filename		7048585	1					
ANR	7048671	Argument	filename		7048585	0					
ANR	7048672	Identifier	filename		7048585	0					
ANR	7048673	ExpressionStatement	qemu_log_close ( )	35:4:535:551	7048585	4	True				
ANR	7048674	CallExpression	qemu_log_close ( )		7048585	0					
ANR	7048675	Callee	qemu_log_close		7048585	0					
ANR	7048676	Identifier	qemu_log_close		7048585	0					
ANR	7048677	ArgumentList			7048585	1					
ANR	7048678	ExpressionStatement	qemu_set_log ( qemu_loglevel )	37:4:558:585	7048585	5	True				
ANR	7048679	CallExpression	qemu_set_log ( qemu_loglevel )		7048585	0					
ANR	7048680	Callee	qemu_set_log		7048585	0					
ANR	7048681	Identifier	qemu_set_log		7048585	0					
ANR	7048682	ArgumentList	qemu_loglevel		7048585	1					
ANR	7048683	Argument	qemu_loglevel		7048585	0					
ANR	7048684	Identifier	qemu_loglevel		7048585	0					
ANR	7048685	ReturnType	void		7048585	1					
ANR	7048686	Identifier	qemu_set_log_filename		7048585	2					
ANR	7048687	ParameterList	const char * filename		7048585	3					
ANR	7048688	Parameter	const char * filename	1:27:27:46	7048585	0	True				
ANR	7048689	ParameterType	const char *		7048585	0					
ANR	7048690	Identifier	filename		7048585	1					
ANR	7048691	CFGEntryNode	ENTRY		7048585		True				
ANR	7048692	CFGExitNode	EXIT		7048585		True				
ANR	7048693	Symbol	* pidstr		7048585						
ANR	7048694	Symbol	filename		7048585						
ANR	7048695	Symbol	pidstr		7048585						
ANR	7048696	Symbol	NULL		7048585						
ANR	7048697	Symbol	strstr		7048585						
ANR	7048698	Symbol	g_strdup		7048585						
ANR	7048699	Symbol	strchr		7048585						
ANR	7048700	Symbol	qemu_loglevel		7048585						
ANR	7048701	Symbol	logfilename		7048585						
ANR	7048702	Symbol	g_strdup_printf		7048585						
ANR	7048703	Symbol	getpid		7048585						
