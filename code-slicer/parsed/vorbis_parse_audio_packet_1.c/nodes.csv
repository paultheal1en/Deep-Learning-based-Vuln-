command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9265719	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vorbis_parse_audio_packet_1.c								
ANR	9265720	Function	vorbis_parse_audio_packet	1:0:0:5434							
ANR	9265721	FunctionDef	vorbis_parse_audio_packet (vorbis_context * vc)		9265720	0					
ANR	9265722	CompoundStatement		3:0:58:5434	9265720	0					
ANR	9265723	IdentifierDeclStatement	GetBitContext * gb = & vc -> gb ;	5:4:65:92	9265720	0	True				
ANR	9265724	IdentifierDecl	* gb = & vc -> gb		9265720	0					
ANR	9265725	IdentifierDeclType	GetBitContext *		9265720	0					
ANR	9265726	Identifier	gb		9265720	1					
ANR	9265727	AssignmentExpression	* gb = & vc -> gb		9265720	2		=			
ANR	9265728	Identifier	gb		9265720	0					
ANR	9265729	UnaryOperationExpression	& vc -> gb		9265720	1					
ANR	9265730	UnaryOperator	&		9265720	0					
ANR	9265731	PtrMemberAccess	vc -> gb		9265720	1					
ANR	9265732	Identifier	vc		9265720	0					
ANR	9265733	Identifier	gb		9265720	1					
ANR	9265734	IdentifierDeclStatement	FFTContext * mdct ;	7:4:99:115	9265720	1	True				
ANR	9265735	IdentifierDecl	* mdct		9265720	0					
ANR	9265736	IdentifierDeclType	FFTContext *		9265720	0					
ANR	9265737	Identifier	mdct		9265720	1					
ANR	9265738	IdentifierDeclStatement	unsigned previous_window = vc -> previous_window ;	9:4:122:168	9265720	2	True				
ANR	9265739	IdentifierDecl	previous_window = vc -> previous_window		9265720	0					
ANR	9265740	IdentifierDeclType	unsigned		9265720	0					
ANR	9265741	Identifier	previous_window		9265720	1					
ANR	9265742	AssignmentExpression	previous_window = vc -> previous_window		9265720	2		=			
ANR	9265743	Identifier	previous_window		9265720	0					
ANR	9265744	PtrMemberAccess	vc -> previous_window		9265720	1					
ANR	9265745	Identifier	vc		9265720	0					
ANR	9265746	Identifier	previous_window		9265720	1					
ANR	9265747	IdentifierDeclStatement	"unsigned mode_number , blockflag , blocksize ;"	11:4:175:217	9265720	3	True				
ANR	9265748	IdentifierDecl	mode_number		9265720	0					
ANR	9265749	IdentifierDeclType	unsigned		9265720	0					
ANR	9265750	Identifier	mode_number		9265720	1					
ANR	9265751	IdentifierDecl	blockflag		9265720	1					
ANR	9265752	IdentifierDeclType	unsigned		9265720	0					
ANR	9265753	Identifier	blockflag		9265720	1					
ANR	9265754	IdentifierDecl	blocksize		9265720	2					
ANR	9265755	IdentifierDeclType	unsigned		9265720	0					
ANR	9265756	Identifier	blocksize		9265720	1					
ANR	9265757	IdentifierDeclStatement	"int i , j ;"	13:4:224:232	9265720	4	True				
ANR	9265758	IdentifierDecl	i		9265720	0					
ANR	9265759	IdentifierDeclType	int		9265720	0					
ANR	9265760	Identifier	i		9265720	1					
ANR	9265761	IdentifierDecl	j		9265720	1					
ANR	9265762	IdentifierDeclType	int		9265720	0					
ANR	9265763	Identifier	j		9265720	1					
ANR	9265764	IdentifierDeclStatement	uint8_t no_residue [ 255 ] ;	15:4:239:262	9265720	5	True				
ANR	9265765	IdentifierDecl	no_residue [ 255 ]		9265720	0					
ANR	9265766	IdentifierDeclType	uint8_t [ 255 ]		9265720	0					
ANR	9265767	Identifier	no_residue		9265720	1					
ANR	9265768	PrimaryExpression	255		9265720	2					
ANR	9265769	IdentifierDeclStatement	uint8_t do_not_decode [ 255 ] ;	17:4:269:295	9265720	6	True				
ANR	9265770	IdentifierDecl	do_not_decode [ 255 ]		9265720	0					
ANR	9265771	IdentifierDeclType	uint8_t [ 255 ]		9265720	0					
ANR	9265772	Identifier	do_not_decode		9265720	1					
ANR	9265773	PrimaryExpression	255		9265720	2					
ANR	9265774	IdentifierDeclStatement	vorbis_mapping * mapping ;	19:4:302:325	9265720	7	True				
ANR	9265775	IdentifierDecl	* mapping		9265720	0					
ANR	9265776	IdentifierDeclType	vorbis_mapping *		9265720	0					
ANR	9265777	Identifier	mapping		9265720	1					
ANR	9265778	IdentifierDeclStatement	float * ch_res_ptr = vc -> channel_residues ;	21:4:332:374	9265720	8	True				
ANR	9265779	IdentifierDecl	* ch_res_ptr = vc -> channel_residues		9265720	0					
ANR	9265780	IdentifierDeclType	float *		9265720	0					
ANR	9265781	Identifier	ch_res_ptr		9265720	1					
ANR	9265782	AssignmentExpression	* ch_res_ptr = vc -> channel_residues		9265720	2		=			
ANR	9265783	Identifier	ch_res_ptr		9265720	0					
ANR	9265784	PtrMemberAccess	vc -> channel_residues		9265720	1					
ANR	9265785	Identifier	vc		9265720	0					
ANR	9265786	Identifier	channel_residues		9265720	1					
ANR	9265787	IdentifierDeclStatement	float * ch_floor_ptr = vc -> channel_floors ;	23:4:381:421	9265720	9	True				
ANR	9265788	IdentifierDecl	* ch_floor_ptr = vc -> channel_floors		9265720	0					
ANR	9265789	IdentifierDeclType	float *		9265720	0					
ANR	9265790	Identifier	ch_floor_ptr		9265720	1					
ANR	9265791	AssignmentExpression	* ch_floor_ptr = vc -> channel_floors		9265720	2		=			
ANR	9265792	Identifier	ch_floor_ptr		9265720	0					
ANR	9265793	PtrMemberAccess	vc -> channel_floors		9265720	1					
ANR	9265794	Identifier	vc		9265720	0					
ANR	9265795	Identifier	channel_floors		9265720	1					
ANR	9265796	IdentifierDeclStatement	uint8_t res_chan [ 255 ] ;	25:4:428:449	9265720	10	True				
ANR	9265797	IdentifierDecl	res_chan [ 255 ]		9265720	0					
ANR	9265798	IdentifierDeclType	uint8_t [ 255 ]		9265720	0					
ANR	9265799	Identifier	res_chan		9265720	1					
ANR	9265800	PrimaryExpression	255		9265720	2					
ANR	9265801	IdentifierDeclStatement	unsigned res_num = 0 ;	27:4:456:476	9265720	11	True				
ANR	9265802	IdentifierDecl	res_num = 0		9265720	0					
ANR	9265803	IdentifierDeclType	unsigned		9265720	0					
ANR	9265804	Identifier	res_num		9265720	1					
ANR	9265805	AssignmentExpression	res_num = 0		9265720	2		=			
ANR	9265806	Identifier	res_num		9265720	0					
ANR	9265807	PrimaryExpression	0		9265720	1					
ANR	9265808	IdentifierDeclStatement	int retlen = 0 ;	29:4:483:498	9265720	12	True				
ANR	9265809	IdentifierDecl	retlen = 0		9265720	0					
ANR	9265810	IdentifierDeclType	int		9265720	0					
ANR	9265811	Identifier	retlen		9265720	1					
ANR	9265812	AssignmentExpression	retlen = 0		9265720	2		=			
ANR	9265813	Identifier	retlen		9265720	0					
ANR	9265814	PrimaryExpression	0		9265720	1					
ANR	9265815	IdentifierDeclStatement	int ch_left = vc -> audio_channels ;	31:4:505:537	9265720	13	True				
ANR	9265816	IdentifierDecl	ch_left = vc -> audio_channels		9265720	0					
ANR	9265817	IdentifierDeclType	int		9265720	0					
ANR	9265818	Identifier	ch_left		9265720	1					
ANR	9265819	AssignmentExpression	ch_left = vc -> audio_channels		9265720	2		=			
ANR	9265820	Identifier	ch_left		9265720	0					
ANR	9265821	PtrMemberAccess	vc -> audio_channels		9265720	1					
ANR	9265822	Identifier	vc		9265720	0					
ANR	9265823	Identifier	audio_channels		9265720	1					
ANR	9265824	IfStatement	if ( get_bits1 ( gb ) )		9265720	14					
ANR	9265825	Condition	get_bits1 ( gb )	35:8:550:562	9265720	0	True				
ANR	9265826	CallExpression	get_bits1 ( gb )		9265720	0					
ANR	9265827	Callee	get_bits1		9265720	0					
ANR	9265828	Identifier	get_bits1		9265720	0					
ANR	9265829	ArgumentList	gb		9265720	1					
ANR	9265830	Argument	gb		9265720	0					
ANR	9265831	Identifier	gb		9265720	0					
ANR	9265832	CompoundStatement		33:23:506:506	9265720	1					
ANR	9265833	ExpressionStatement	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Not a Vorbis I audio packet.\\n"" )"	37:8:576:646	9265720	0	True				
ANR	9265834	CallExpression	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Not a Vorbis I audio packet.\\n"" )"		9265720	0					
ANR	9265835	Callee	av_log		9265720	0					
ANR	9265836	Identifier	av_log		9265720	0					
ANR	9265837	ArgumentList	vc -> avccontext		9265720	1					
ANR	9265838	Argument	vc -> avccontext		9265720	0					
ANR	9265839	PtrMemberAccess	vc -> avccontext		9265720	0					
ANR	9265840	Identifier	vc		9265720	0					
ANR	9265841	Identifier	avccontext		9265720	1					
ANR	9265842	Argument	AV_LOG_ERROR		9265720	1					
ANR	9265843	Identifier	AV_LOG_ERROR		9265720	0					
ANR	9265844	Argument	"""Not a Vorbis I audio packet.\\n"""		9265720	2					
ANR	9265845	PrimaryExpression	"""Not a Vorbis I audio packet.\\n"""		9265720	0					
ANR	9265846	ReturnStatement	return AVERROR_INVALIDDATA ;	39:8:657:683	9265720	1	True				
ANR	9265847	Identifier	AVERROR_INVALIDDATA		9265720	0					
ANR	9265848	IfStatement	if ( vc -> mode_count == 1 )		9265720	15					
ANR	9265849	Condition	vc -> mode_count == 1	45:8:728:746	9265720	0	True				
ANR	9265850	EqualityExpression	vc -> mode_count == 1		9265720	0		==			
ANR	9265851	PtrMemberAccess	vc -> mode_count		9265720	0					
ANR	9265852	Identifier	vc		9265720	0					
ANR	9265853	Identifier	mode_count		9265720	1					
ANR	9265854	PrimaryExpression	1		9265720	1					
ANR	9265855	CompoundStatement		43:29:690:690	9265720	1					
ANR	9265856	ExpressionStatement	mode_number = 0	47:8:760:775	9265720	0	True				
ANR	9265857	AssignmentExpression	mode_number = 0		9265720	0		=			
ANR	9265858	Identifier	mode_number		9265720	0					
ANR	9265859	PrimaryExpression	0		9265720	1					
ANR	9265860	ElseStatement	else		9265720	0					
ANR	9265861	CompoundStatement		47:11:730:730	9265720	0					
ANR	9265862	Statement	GET_VALIDATED_INDEX	51:8:800:818	9265720	0	True				
ANR	9265863	Statement	(	51:27:819:819	9265720	1	True				
ANR	9265864	Statement	mode_number	51:28:820:830	9265720	2	True				
ANR	9265865	Statement	","	51:39:831:831	9265720	3	True				
ANR	9265866	Statement	ilog	51:41:833:836	9265720	4	True				
ANR	9265867	Statement	(	51:45:837:837	9265720	5	True				
ANR	9265868	Statement	vc	51:46:838:839	9265720	6	True				
ANR	9265869	Statement	->	51:48:840:841	9265720	7	True				
ANR	9265870	Statement	mode_count	51:50:842:851	9265720	8	True				
ANR	9265871	Statement	-	51:60:852:852	9265720	9	True				
ANR	9265872	Statement	1	51:61:853:853	9265720	10	True				
ANR	9265873	Statement	)	51:62:854:854	9265720	11	True				
ANR	9265874	Statement	","	51:63:855:855	9265720	12	True				
ANR	9265875	Statement	vc	51:65:857:858	9265720	13	True				
ANR	9265876	Statement	->	51:67:859:860	9265720	14	True				
ANR	9265877	Statement	mode_count	51:69:861:870	9265720	15	True				
ANR	9265878	Statement	)	51:79:871:871	9265720	16	True				
ANR	9265879	ExpressionStatement	vc -> mode_number = mode_number	55:4:885:914	9265720	16	True				
ANR	9265880	AssignmentExpression	vc -> mode_number = mode_number		9265720	0		=			
ANR	9265881	PtrMemberAccess	vc -> mode_number		9265720	0					
ANR	9265882	Identifier	vc		9265720	0					
ANR	9265883	Identifier	mode_number		9265720	1					
ANR	9265884	Identifier	mode_number		9265720	1					
ANR	9265885	ExpressionStatement	mapping = & vc -> mappings [ vc -> modes [ mode_number ] . mapping ]	57:4:921:976	9265720	17	True				
ANR	9265886	AssignmentExpression	mapping = & vc -> mappings [ vc -> modes [ mode_number ] . mapping ]		9265720	0		=			
ANR	9265887	Identifier	mapping		9265720	0					
ANR	9265888	UnaryOperationExpression	& vc -> mappings [ vc -> modes [ mode_number ] . mapping ]		9265720	1					
ANR	9265889	UnaryOperator	&		9265720	0					
ANR	9265890	ArrayIndexing	vc -> mappings [ vc -> modes [ mode_number ] . mapping ]		9265720	1					
ANR	9265891	PtrMemberAccess	vc -> mappings		9265720	0					
ANR	9265892	Identifier	vc		9265720	0					
ANR	9265893	Identifier	mappings		9265720	1					
ANR	9265894	MemberAccess	vc -> modes [ mode_number ] . mapping		9265720	1					
ANR	9265895	ArrayIndexing	vc -> modes [ mode_number ]		9265720	0					
ANR	9265896	PtrMemberAccess	vc -> modes		9265720	0					
ANR	9265897	Identifier	vc		9265720	0					
ANR	9265898	Identifier	modes		9265720	1					
ANR	9265899	Identifier	mode_number		9265720	1					
ANR	9265900	Identifier	mapping		9265720	1					
ANR	9265901	ExpressionStatement	"av_dlog ( NULL , "" Mode number: %u , mapping: %d , blocktype %d\\n"" , mode_number , vc -> modes [ mode_number ] . mapping , vc -> modes [ mode_number ] . blockflag )"	61:4:985:1141	9265720	18	True				
ANR	9265902	CallExpression	"av_dlog ( NULL , "" Mode number: %u , mapping: %d , blocktype %d\\n"" , mode_number , vc -> modes [ mode_number ] . mapping , vc -> modes [ mode_number ] . blockflag )"		9265720	0					
ANR	9265903	Callee	av_dlog		9265720	0					
ANR	9265904	Identifier	av_dlog		9265720	0					
ANR	9265905	ArgumentList	NULL		9265720	1					
ANR	9265906	Argument	NULL		9265720	0					
ANR	9265907	Identifier	NULL		9265720	0					
ANR	9265908	Argument	""" Mode number: %u , mapping: %d , blocktype %d\\n"""		9265720	1					
ANR	9265909	PrimaryExpression	""" Mode number: %u , mapping: %d , blocktype %d\\n"""		9265720	0					
ANR	9265910	Argument	mode_number		9265720	2					
ANR	9265911	Identifier	mode_number		9265720	0					
ANR	9265912	Argument	vc -> modes [ mode_number ] . mapping		9265720	3					
ANR	9265913	MemberAccess	vc -> modes [ mode_number ] . mapping		9265720	0					
ANR	9265914	ArrayIndexing	vc -> modes [ mode_number ]		9265720	0					
ANR	9265915	PtrMemberAccess	vc -> modes		9265720	0					
ANR	9265916	Identifier	vc		9265720	0					
ANR	9265917	Identifier	modes		9265720	1					
ANR	9265918	Identifier	mode_number		9265720	1					
ANR	9265919	Identifier	mapping		9265720	1					
ANR	9265920	Argument	vc -> modes [ mode_number ] . blockflag		9265720	4					
ANR	9265921	MemberAccess	vc -> modes [ mode_number ] . blockflag		9265720	0					
ANR	9265922	ArrayIndexing	vc -> modes [ mode_number ]		9265720	0					
ANR	9265923	PtrMemberAccess	vc -> modes		9265720	0					
ANR	9265924	Identifier	vc		9265720	0					
ANR	9265925	Identifier	modes		9265720	1					
ANR	9265926	Identifier	mode_number		9265720	1					
ANR	9265927	Identifier	blockflag		9265720	1					
ANR	9265928	ExpressionStatement	blockflag = vc -> modes [ mode_number ] . blockflag	67:4:1150:1194	9265720	19	True				
ANR	9265929	AssignmentExpression	blockflag = vc -> modes [ mode_number ] . blockflag		9265720	0		=			
ANR	9265930	Identifier	blockflag		9265720	0					
ANR	9265931	MemberAccess	vc -> modes [ mode_number ] . blockflag		9265720	1					
ANR	9265932	ArrayIndexing	vc -> modes [ mode_number ]		9265720	0					
ANR	9265933	PtrMemberAccess	vc -> modes		9265720	0					
ANR	9265934	Identifier	vc		9265720	0					
ANR	9265935	Identifier	modes		9265720	1					
ANR	9265936	Identifier	mode_number		9265720	1					
ANR	9265937	Identifier	blockflag		9265720	1					
ANR	9265938	ExpressionStatement	blocksize = vc -> blocksize [ blockflag ]	69:4:1201:1237	9265720	20	True				
ANR	9265939	AssignmentExpression	blocksize = vc -> blocksize [ blockflag ]		9265720	0		=			
ANR	9265940	Identifier	blocksize		9265720	0					
ANR	9265941	ArrayIndexing	vc -> blocksize [ blockflag ]		9265720	1					
ANR	9265942	PtrMemberAccess	vc -> blocksize		9265720	0					
ANR	9265943	Identifier	vc		9265720	0					
ANR	9265944	Identifier	blocksize		9265720	1					
ANR	9265945	Identifier	blockflag		9265720	1					
ANR	9265946	IfStatement	if ( blockflag )		9265720	21					
ANR	9265947	Condition	blockflag	71:8:1248:1256	9265720	0	True				
ANR	9265948	Identifier	blockflag		9265720	0					
ANR	9265949	ExpressionStatement	"skip_bits ( gb , 2 )"	73:8:1268:1284	9265720	1	True				
ANR	9265950	CallExpression	"skip_bits ( gb , 2 )"		9265720	0					
ANR	9265951	Callee	skip_bits		9265720	0					
ANR	9265952	Identifier	skip_bits		9265720	0					
ANR	9265953	ArgumentList	gb		9265720	1					
ANR	9265954	Argument	gb		9265720	0					
ANR	9265955	Identifier	gb		9265720	0					
ANR	9265956	Argument	2		9265720	1					
ANR	9265957	PrimaryExpression	2		9265720	0					
ANR	9265958	ExpressionStatement	"memset ( ch_res_ptr , 0 , sizeof ( float ) * vc -> audio_channels * blocksize / 2 )"	77:4:1325:1400	9265720	22	True				
ANR	9265959	CallExpression	"memset ( ch_res_ptr , 0 , sizeof ( float ) * vc -> audio_channels * blocksize / 2 )"		9265720	0					
ANR	9265960	Callee	memset		9265720	0					
ANR	9265961	Identifier	memset		9265720	0					
ANR	9265962	ArgumentList	ch_res_ptr		9265720	1					
ANR	9265963	Argument	ch_res_ptr		9265720	0					
ANR	9265964	Identifier	ch_res_ptr		9265720	0					
ANR	9265965	Argument	0		9265720	1					
ANR	9265966	PrimaryExpression	0		9265720	0					
ANR	9265967	Argument	sizeof ( float ) * vc -> audio_channels * blocksize / 2		9265720	2					
ANR	9265968	MultiplicativeExpression	sizeof ( float ) * vc -> audio_channels * blocksize / 2		9265720	0		*			
ANR	9265969	SizeofExpression	sizeof ( float )		9265720	0					
ANR	9265970	Sizeof	sizeof		9265720	0					
ANR	9265971	SizeofOperand	float		9265720	1					
ANR	9265972	MultiplicativeExpression	vc -> audio_channels * blocksize / 2		9265720	1		*			
ANR	9265973	PtrMemberAccess	vc -> audio_channels		9265720	0					
ANR	9265974	Identifier	vc		9265720	0					
ANR	9265975	Identifier	audio_channels		9265720	1					
ANR	9265976	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9265977	Identifier	blocksize		9265720	0					
ANR	9265978	PrimaryExpression	2		9265720	1					
ANR	9265979	ExpressionStatement	"memset ( ch_floor_ptr , 0 , sizeof ( float ) * vc -> audio_channels * blocksize / 2 )"	79:4:1437:1512	9265720	23	True				
ANR	9265980	CallExpression	"memset ( ch_floor_ptr , 0 , sizeof ( float ) * vc -> audio_channels * blocksize / 2 )"		9265720	0					
ANR	9265981	Callee	memset		9265720	0					
ANR	9265982	Identifier	memset		9265720	0					
ANR	9265983	ArgumentList	ch_floor_ptr		9265720	1					
ANR	9265984	Argument	ch_floor_ptr		9265720	0					
ANR	9265985	Identifier	ch_floor_ptr		9265720	0					
ANR	9265986	Argument	0		9265720	1					
ANR	9265987	PrimaryExpression	0		9265720	0					
ANR	9265988	Argument	sizeof ( float ) * vc -> audio_channels * blocksize / 2		9265720	2					
ANR	9265989	MultiplicativeExpression	sizeof ( float ) * vc -> audio_channels * blocksize / 2		9265720	0		*			
ANR	9265990	SizeofExpression	sizeof ( float )		9265720	0					
ANR	9265991	Sizeof	sizeof		9265720	0					
ANR	9265992	SizeofOperand	float		9265720	1					
ANR	9265993	MultiplicativeExpression	vc -> audio_channels * blocksize / 2		9265720	1		*			
ANR	9265994	PtrMemberAccess	vc -> audio_channels		9265720	0					
ANR	9265995	Identifier	vc		9265720	0					
ANR	9265996	Identifier	audio_channels		9265720	1					
ANR	9265997	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9265998	Identifier	blocksize		9265720	0					
ANR	9265999	PrimaryExpression	2		9265720	1					
ANR	9266000	ForStatement	for ( i = 0 ; i < vc -> audio_channels ; ++ i )		9265720	24					
ANR	9266001	ForInit	i = 0 ;	87:9:1575:1580	9265720	0	True				
ANR	9266002	AssignmentExpression	i = 0		9265720	0		=			
ANR	9266003	Identifier	i		9265720	0					
ANR	9266004	PrimaryExpression	0		9265720	1					
ANR	9266005	Condition	i < vc -> audio_channels	87:16:1582:1603	9265720	1	True				
ANR	9266006	RelationalExpression	i < vc -> audio_channels		9265720	0		<			
ANR	9266007	Identifier	i		9265720	0					
ANR	9266008	PtrMemberAccess	vc -> audio_channels		9265720	1					
ANR	9266009	Identifier	vc		9265720	0					
ANR	9266010	Identifier	audio_channels		9265720	1					
ANR	9266011	UnaryExpression	++ i	87:40:1606:1608	9265720	2	True				
ANR	9266012	IncDec	++		9265720	0					
ANR	9266013	Identifier	i		9265720	1					
ANR	9266014	CompoundStatement		89:8:1593:1600	9265720	3					
ANR	9266015	IdentifierDeclStatement	vorbis_floor * floor ;	89:8:1622:1641	9265720	0	True				
ANR	9266016	IdentifierDecl	* floor		9265720	0					
ANR	9266017	IdentifierDeclType	vorbis_floor *		9265720	0					
ANR	9266018	Identifier	floor		9265720	1					
ANR	9266019	IdentifierDeclStatement	int ret ;	91:8:1652:1659	9265720	1	True				
ANR	9266020	IdentifierDecl	ret		9265720	0					
ANR	9266021	IdentifierDeclType	int		9265720	0					
ANR	9266022	Identifier	ret		9265720	1					
ANR	9266023	IfStatement	if ( mapping -> submaps > 1 )		9265720	2					
ANR	9266024	Condition	mapping -> submaps > 1	93:12:1674:1693	9265720	0	True				
ANR	9266025	RelationalExpression	mapping -> submaps > 1		9265720	0		>			
ANR	9266026	PtrMemberAccess	mapping -> submaps		9265720	0					
ANR	9266027	Identifier	mapping		9265720	0					
ANR	9266028	Identifier	submaps		9265720	1					
ANR	9266029	PrimaryExpression	1		9265720	1					
ANR	9266030	CompoundStatement		91:34:1637:1637	9265720	1					
ANR	9266031	ExpressionStatement	floor = & vc -> floors [ mapping -> submap_floor [ mapping -> mux [ i ] ] ]	95:12:1711:1770	9265720	0	True				
ANR	9266032	AssignmentExpression	floor = & vc -> floors [ mapping -> submap_floor [ mapping -> mux [ i ] ] ]		9265720	0		=			
ANR	9266033	Identifier	floor		9265720	0					
ANR	9266034	UnaryOperationExpression	& vc -> floors [ mapping -> submap_floor [ mapping -> mux [ i ] ] ]		9265720	1					
ANR	9266035	UnaryOperator	&		9265720	0					
ANR	9266036	ArrayIndexing	vc -> floors [ mapping -> submap_floor [ mapping -> mux [ i ] ] ]		9265720	1					
ANR	9266037	PtrMemberAccess	vc -> floors		9265720	0					
ANR	9266038	Identifier	vc		9265720	0					
ANR	9266039	Identifier	floors		9265720	1					
ANR	9266040	ArrayIndexing	mapping -> submap_floor [ mapping -> mux [ i ] ]		9265720	1					
ANR	9266041	PtrMemberAccess	mapping -> submap_floor		9265720	0					
ANR	9266042	Identifier	mapping		9265720	0					
ANR	9266043	Identifier	submap_floor		9265720	1					
ANR	9266044	ArrayIndexing	mapping -> mux [ i ]		9265720	1					
ANR	9266045	PtrMemberAccess	mapping -> mux		9265720	0					
ANR	9266046	Identifier	mapping		9265720	0					
ANR	9266047	Identifier	mux		9265720	1					
ANR	9266048	Identifier	i		9265720	1					
ANR	9266049	ElseStatement	else		9265720	0					
ANR	9266050	CompoundStatement		95:15:1729:1729	9265720	0					
ANR	9266051	ExpressionStatement	floor = & vc -> floors [ mapping -> submap_floor [ 0 ] ]	99:12:1803:1848	9265720	0	True				
ANR	9266052	AssignmentExpression	floor = & vc -> floors [ mapping -> submap_floor [ 0 ] ]		9265720	0		=			
ANR	9266053	Identifier	floor		9265720	0					
ANR	9266054	UnaryOperationExpression	& vc -> floors [ mapping -> submap_floor [ 0 ] ]		9265720	1					
ANR	9266055	UnaryOperator	&		9265720	0					
ANR	9266056	ArrayIndexing	vc -> floors [ mapping -> submap_floor [ 0 ] ]		9265720	1					
ANR	9266057	PtrMemberAccess	vc -> floors		9265720	0					
ANR	9266058	Identifier	vc		9265720	0					
ANR	9266059	Identifier	floors		9265720	1					
ANR	9266060	ArrayIndexing	mapping -> submap_floor [ 0 ]		9265720	1					
ANR	9266061	PtrMemberAccess	mapping -> submap_floor		9265720	0					
ANR	9266062	Identifier	mapping		9265720	0					
ANR	9266063	Identifier	submap_floor		9265720	1					
ANR	9266064	PrimaryExpression	0		9265720	1					
ANR	9266065	ExpressionStatement	"ret = floor -> decode ( vc , & floor -> data , ch_floor_ptr )"	105:8:1872:1923	9265720	3	True				
ANR	9266066	AssignmentExpression	"ret = floor -> decode ( vc , & floor -> data , ch_floor_ptr )"		9265720	0		=			
ANR	9266067	Identifier	ret		9265720	0					
ANR	9266068	CallExpression	"floor -> decode ( vc , & floor -> data , ch_floor_ptr )"		9265720	1					
ANR	9266069	Callee	floor -> decode		9265720	0					
ANR	9266070	PtrMemberAccess	floor -> decode		9265720	0					
ANR	9266071	Identifier	floor		9265720	0					
ANR	9266072	Identifier	decode		9265720	1					
ANR	9266073	ArgumentList	vc		9265720	1					
ANR	9266074	Argument	vc		9265720	0					
ANR	9266075	Identifier	vc		9265720	0					
ANR	9266076	Argument	& floor -> data		9265720	1					
ANR	9266077	UnaryOperationExpression	& floor -> data		9265720	0					
ANR	9266078	UnaryOperator	&		9265720	0					
ANR	9266079	PtrMemberAccess	floor -> data		9265720	1					
ANR	9266080	Identifier	floor		9265720	0					
ANR	9266081	Identifier	data		9265720	1					
ANR	9266082	Argument	ch_floor_ptr		9265720	2					
ANR	9266083	Identifier	ch_floor_ptr		9265720	0					
ANR	9266084	IfStatement	if ( ret < 0 )		9265720	4					
ANR	9266085	Condition	ret < 0	109:12:1940:1946	9265720	0	True				
ANR	9266086	RelationalExpression	ret < 0		9265720	0		<			
ANR	9266087	Identifier	ret		9265720	0					
ANR	9266088	PrimaryExpression	0		9265720	1					
ANR	9266089	CompoundStatement		107:21:1890:1890	9265720	1					
ANR	9266090	ExpressionStatement	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Invalid codebook in vorbis_floor_decode.\\n"" )"	111:12:1964:2046	9265720	0	True				
ANR	9266091	CallExpression	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Invalid codebook in vorbis_floor_decode.\\n"" )"		9265720	0					
ANR	9266092	Callee	av_log		9265720	0					
ANR	9266093	Identifier	av_log		9265720	0					
ANR	9266094	ArgumentList	vc -> avccontext		9265720	1					
ANR	9266095	Argument	vc -> avccontext		9265720	0					
ANR	9266096	PtrMemberAccess	vc -> avccontext		9265720	0					
ANR	9266097	Identifier	vc		9265720	0					
ANR	9266098	Identifier	avccontext		9265720	1					
ANR	9266099	Argument	AV_LOG_ERROR		9265720	1					
ANR	9266100	Identifier	AV_LOG_ERROR		9265720	0					
ANR	9266101	Argument	"""Invalid codebook in vorbis_floor_decode.\\n"""		9265720	2					
ANR	9266102	PrimaryExpression	"""Invalid codebook in vorbis_floor_decode.\\n"""		9265720	0					
ANR	9266103	ReturnStatement	return AVERROR_INVALIDDATA ;	113:12:2061:2087	9265720	1	True				
ANR	9266104	Identifier	AVERROR_INVALIDDATA		9265720	0					
ANR	9266105	ExpressionStatement	no_residue [ i ] = ret	117:8:2109:2128	9265720	5	True				
ANR	9266106	AssignmentExpression	no_residue [ i ] = ret		9265720	0		=			
ANR	9266107	ArrayIndexing	no_residue [ i ]		9265720	0					
ANR	9266108	Identifier	no_residue		9265720	0					
ANR	9266109	Identifier	i		9265720	1					
ANR	9266110	Identifier	ret		9265720	1					
ANR	9266111	ExpressionStatement	ch_floor_ptr += blocksize / 2	119:8:2139:2168	9265720	6	True				
ANR	9266112	AssignmentExpression	ch_floor_ptr += blocksize / 2		9265720	0		+=			
ANR	9266113	Identifier	ch_floor_ptr		9265720	0					
ANR	9266114	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266115	Identifier	blocksize		9265720	0					
ANR	9266116	PrimaryExpression	2		9265720	1					
ANR	9266117	ForStatement	for ( i = mapping -> coupling_steps - 1 ; i >= 0 ; -- i )		9265720	25					
ANR	9266118	ForInit	i = mapping -> coupling_steps - 1 ;	129:9:2220:2251	9265720	0	True				
ANR	9266119	AssignmentExpression	i = mapping -> coupling_steps - 1		9265720	0		=			
ANR	9266120	Identifier	i		9265720	0					
ANR	9266121	AdditiveExpression	mapping -> coupling_steps - 1		9265720	1		-			
ANR	9266122	PtrMemberAccess	mapping -> coupling_steps		9265720	0					
ANR	9266123	Identifier	mapping		9265720	0					
ANR	9266124	Identifier	coupling_steps		9265720	1					
ANR	9266125	PrimaryExpression	1		9265720	1					
ANR	9266126	Condition	i >= 0	129:42:2253:2258	9265720	1	True				
ANR	9266127	RelationalExpression	i >= 0		9265720	0		>=			
ANR	9266128	Identifier	i		9265720	0					
ANR	9266129	PrimaryExpression	0		9265720	1					
ANR	9266130	UnaryExpression	-- i	129:50:2261:2263	9265720	2	True				
ANR	9266131	IncDec	--		9265720	0					
ANR	9266132	Identifier	i		9265720	1					
ANR	9266133	CompoundStatement		127:55:2207:2207	9265720	3					
ANR	9266134	IfStatement	if ( ! ( no_residue [ mapping -> magnitude [ i ] ] & no_residue [ mapping -> angle [ i ] ] ) )		9265720	0					
ANR	9266135	Condition	! ( no_residue [ mapping -> magnitude [ i ] ] & no_residue [ mapping -> angle [ i ] ] )	131:12:2281:2348	9265720	0	True				
ANR	9266136	UnaryOperationExpression	! ( no_residue [ mapping -> magnitude [ i ] ] & no_residue [ mapping -> angle [ i ] ] )		9265720	0					
ANR	9266137	UnaryOperator	!		9265720	0					
ANR	9266138	BitAndExpression	no_residue [ mapping -> magnitude [ i ] ] & no_residue [ mapping -> angle [ i ] ]		9265720	1		&			
ANR	9266139	ArrayIndexing	no_residue [ mapping -> magnitude [ i ] ]		9265720	0					
ANR	9266140	Identifier	no_residue		9265720	0					
ANR	9266141	ArrayIndexing	mapping -> magnitude [ i ]		9265720	1					
ANR	9266142	PtrMemberAccess	mapping -> magnitude		9265720	0					
ANR	9266143	Identifier	mapping		9265720	0					
ANR	9266144	Identifier	magnitude		9265720	1					
ANR	9266145	Identifier	i		9265720	1					
ANR	9266146	ArrayIndexing	no_residue [ mapping -> angle [ i ] ]		9265720	1					
ANR	9266147	Identifier	no_residue		9265720	0					
ANR	9266148	ArrayIndexing	mapping -> angle [ i ]		9265720	1					
ANR	9266149	PtrMemberAccess	mapping -> angle		9265720	0					
ANR	9266150	Identifier	mapping		9265720	0					
ANR	9266151	Identifier	angle		9265720	1					
ANR	9266152	Identifier	i		9265720	1					
ANR	9266153	CompoundStatement		129:82:2292:2292	9265720	1					
ANR	9266154	ExpressionStatement	no_residue [ mapping -> magnitude [ i ] ] = 0	133:12:2366:2403	9265720	0	True				
ANR	9266155	AssignmentExpression	no_residue [ mapping -> magnitude [ i ] ] = 0		9265720	0		=			
ANR	9266156	ArrayIndexing	no_residue [ mapping -> magnitude [ i ] ]		9265720	0					
ANR	9266157	Identifier	no_residue		9265720	0					
ANR	9266158	ArrayIndexing	mapping -> magnitude [ i ]		9265720	1					
ANR	9266159	PtrMemberAccess	mapping -> magnitude		9265720	0					
ANR	9266160	Identifier	mapping		9265720	0					
ANR	9266161	Identifier	magnitude		9265720	1					
ANR	9266162	Identifier	i		9265720	1					
ANR	9266163	PrimaryExpression	0		9265720	1					
ANR	9266164	ExpressionStatement	no_residue [ mapping -> angle [ i ] ] = 0	135:12:2418:2455	9265720	1	True				
ANR	9266165	AssignmentExpression	no_residue [ mapping -> angle [ i ] ] = 0		9265720	0		=			
ANR	9266166	ArrayIndexing	no_residue [ mapping -> angle [ i ] ]		9265720	0					
ANR	9266167	Identifier	no_residue		9265720	0					
ANR	9266168	ArrayIndexing	mapping -> angle [ i ]		9265720	1					
ANR	9266169	PtrMemberAccess	mapping -> angle		9265720	0					
ANR	9266170	Identifier	mapping		9265720	0					
ANR	9266171	Identifier	angle		9265720	1					
ANR	9266172	Identifier	i		9265720	1					
ANR	9266173	PrimaryExpression	0		9265720	1					
ANR	9266174	ForStatement	for ( i = 0 ; i < mapping -> submaps ; ++ i )		9265720	26					
ANR	9266175	ForInit	i = 0 ;	147:9:2508:2513	9265720	0	True				
ANR	9266176	AssignmentExpression	i = 0		9265720	0		=			
ANR	9266177	Identifier	i		9265720	0					
ANR	9266178	PrimaryExpression	0		9265720	1					
ANR	9266179	Condition	i < mapping -> submaps	147:16:2515:2534	9265720	1	True				
ANR	9266180	RelationalExpression	i < mapping -> submaps		9265720	0		<			
ANR	9266181	Identifier	i		9265720	0					
ANR	9266182	PtrMemberAccess	mapping -> submaps		9265720	1					
ANR	9266183	Identifier	mapping		9265720	0					
ANR	9266184	Identifier	submaps		9265720	1					
ANR	9266185	UnaryExpression	++ i	147:38:2537:2539	9265720	2	True				
ANR	9266186	IncDec	++		9265720	0					
ANR	9266187	Identifier	i		9265720	1					
ANR	9266188	CompoundStatement		149:8:2528:2543	9265720	3					
ANR	9266189	IdentifierDeclStatement	vorbis_residue * residue ;	149:8:2553:2576	9265720	0	True				
ANR	9266190	IdentifierDecl	* residue		9265720	0					
ANR	9266191	IdentifierDeclType	vorbis_residue *		9265720	0					
ANR	9266192	Identifier	residue		9265720	1					
ANR	9266193	IdentifierDeclStatement	unsigned ch = 0 ;	151:8:2587:2602	9265720	1	True				
ANR	9266194	IdentifierDecl	ch = 0		9265720	0					
ANR	9266195	IdentifierDeclType	unsigned		9265720	0					
ANR	9266196	Identifier	ch		9265720	1					
ANR	9266197	AssignmentExpression	ch = 0		9265720	2		=			
ANR	9266198	Identifier	ch		9265720	0					
ANR	9266199	PrimaryExpression	0		9265720	1					
ANR	9266200	ForStatement	for ( j = 0 ; j < vc -> audio_channels ; ++ j )		9265720	2					
ANR	9266201	ForInit	j = 0 ;	155:13:2620:2625	9265720	0	True				
ANR	9266202	AssignmentExpression	j = 0		9265720	0		=			
ANR	9266203	Identifier	j		9265720	0					
ANR	9266204	PrimaryExpression	0		9265720	1					
ANR	9266205	Condition	j < vc -> audio_channels	155:20:2627:2648	9265720	1	True				
ANR	9266206	RelationalExpression	j < vc -> audio_channels		9265720	0		<			
ANR	9266207	Identifier	j		9265720	0					
ANR	9266208	PtrMemberAccess	vc -> audio_channels		9265720	1					
ANR	9266209	Identifier	vc		9265720	0					
ANR	9266210	Identifier	audio_channels		9265720	1					
ANR	9266211	UnaryExpression	++ j	155:44:2651:2653	9265720	2	True				
ANR	9266212	IncDec	++		9265720	0					
ANR	9266213	Identifier	j		9265720	1					
ANR	9266214	CompoundStatement		153:49:2597:2597	9265720	3					
ANR	9266215	IfStatement	if ( ( mapping -> submaps == 1 ) || ( i == mapping -> mux [ j ] ) )		9265720	0					
ANR	9266216	Condition	( mapping -> submaps == 1 ) || ( i == mapping -> mux [ j ] )	157:16:2675:2723	9265720	0	True				
ANR	9266217	OrExpression	( mapping -> submaps == 1 ) || ( i == mapping -> mux [ j ] )		9265720	0		||			
ANR	9266218	EqualityExpression	mapping -> submaps == 1		9265720	0		==			
ANR	9266219	PtrMemberAccess	mapping -> submaps		9265720	0					
ANR	9266220	Identifier	mapping		9265720	0					
ANR	9266221	Identifier	submaps		9265720	1					
ANR	9266222	PrimaryExpression	1		9265720	1					
ANR	9266223	EqualityExpression	i == mapping -> mux [ j ]		9265720	1		==			
ANR	9266224	Identifier	i		9265720	0					
ANR	9266225	ArrayIndexing	mapping -> mux [ j ]		9265720	1					
ANR	9266226	PtrMemberAccess	mapping -> mux		9265720	0					
ANR	9266227	Identifier	mapping		9265720	0					
ANR	9266228	Identifier	mux		9265720	1					
ANR	9266229	Identifier	j		9265720	1					
ANR	9266230	CompoundStatement		155:67:2667:2667	9265720	1					
ANR	9266231	ExpressionStatement	res_chan [ j ] = res_num	159:16:2745:2766	9265720	0	True				
ANR	9266232	AssignmentExpression	res_chan [ j ] = res_num		9265720	0		=			
ANR	9266233	ArrayIndexing	res_chan [ j ]		9265720	0					
ANR	9266234	Identifier	res_chan		9265720	0					
ANR	9266235	Identifier	j		9265720	1					
ANR	9266236	Identifier	res_num		9265720	1					
ANR	9266237	IfStatement	if ( no_residue [ j ] )		9265720	1					
ANR	9266238	Condition	no_residue [ j ]	161:20:2789:2801	9265720	0	True				
ANR	9266239	ArrayIndexing	no_residue [ j ]		9265720	0					
ANR	9266240	Identifier	no_residue		9265720	0					
ANR	9266241	Identifier	j		9265720	1					
ANR	9266242	CompoundStatement		159:35:2745:2745	9265720	1					
ANR	9266243	ExpressionStatement	do_not_decode [ ch ] = 1	163:20:2827:2848	9265720	0	True				
ANR	9266244	AssignmentExpression	do_not_decode [ ch ] = 1		9265720	0		=			
ANR	9266245	ArrayIndexing	do_not_decode [ ch ]		9265720	0					
ANR	9266246	Identifier	do_not_decode		9265720	0					
ANR	9266247	Identifier	ch		9265720	1					
ANR	9266248	PrimaryExpression	1		9265720	1					
ANR	9266249	ElseStatement	else		9265720	0					
ANR	9266250	CompoundStatement		163:23:2815:2815	9265720	0					
ANR	9266251	ExpressionStatement	do_not_decode [ ch ] = 0	167:20:2897:2918	9265720	0	True				
ANR	9266252	AssignmentExpression	do_not_decode [ ch ] = 0		9265720	0		=			
ANR	9266253	ArrayIndexing	do_not_decode [ ch ]		9265720	0					
ANR	9266254	Identifier	do_not_decode		9265720	0					
ANR	9266255	Identifier	ch		9265720	1					
ANR	9266256	PrimaryExpression	0		9265720	1					
ANR	9266257	ExpressionStatement	++ ch	171:16:2956:2960	9265720	2	True				
ANR	9266258	UnaryExpression	++ ch		9265720	0					
ANR	9266259	IncDec	++		9265720	0					
ANR	9266260	Identifier	ch		9265720	1					
ANR	9266261	ExpressionStatement	++ res_num	173:16:2979:2988	9265720	3	True				
ANR	9266262	UnaryExpression	++ res_num		9265720	0					
ANR	9266263	IncDec	++		9265720	0					
ANR	9266264	Identifier	res_num		9265720	1					
ANR	9266265	ExpressionStatement	residue = & vc -> residues [ mapping -> submap_residue [ i ] ]	179:8:3025:3076	9265720	3	True				
ANR	9266266	AssignmentExpression	residue = & vc -> residues [ mapping -> submap_residue [ i ] ]		9265720	0		=			
ANR	9266267	Identifier	residue		9265720	0					
ANR	9266268	UnaryOperationExpression	& vc -> residues [ mapping -> submap_residue [ i ] ]		9265720	1					
ANR	9266269	UnaryOperator	&		9265720	0					
ANR	9266270	ArrayIndexing	vc -> residues [ mapping -> submap_residue [ i ] ]		9265720	1					
ANR	9266271	PtrMemberAccess	vc -> residues		9265720	0					
ANR	9266272	Identifier	vc		9265720	0					
ANR	9266273	Identifier	residues		9265720	1					
ANR	9266274	ArrayIndexing	mapping -> submap_residue [ i ]		9265720	1					
ANR	9266275	PtrMemberAccess	mapping -> submap_residue		9265720	0					
ANR	9266276	Identifier	mapping		9265720	0					
ANR	9266277	Identifier	submap_residue		9265720	1					
ANR	9266278	Identifier	i		9265720	1					
ANR	9266279	IfStatement	if ( ch_left < ch )		9265720	4					
ANR	9266280	Condition	ch_left < ch	181:12:3091:3102	9265720	0	True				
ANR	9266281	RelationalExpression	ch_left < ch		9265720	0		<			
ANR	9266282	Identifier	ch_left		9265720	0					
ANR	9266283	Identifier	ch		9265720	1					
ANR	9266284	CompoundStatement		179:26:3046:3046	9265720	1					
ANR	9266285	ExpressionStatement	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Too many channels in vorbis_floor_decode.\\n"" )"	183:12:3120:3203	9265720	0	True				
ANR	9266286	CallExpression	"av_log ( vc -> avccontext , AV_LOG_ERROR , ""Too many channels in vorbis_floor_decode.\\n"" )"		9265720	0					
ANR	9266287	Callee	av_log		9265720	0					
ANR	9266288	Identifier	av_log		9265720	0					
ANR	9266289	ArgumentList	vc -> avccontext		9265720	1					
ANR	9266290	Argument	vc -> avccontext		9265720	0					
ANR	9266291	PtrMemberAccess	vc -> avccontext		9265720	0					
ANR	9266292	Identifier	vc		9265720	0					
ANR	9266293	Identifier	avccontext		9265720	1					
ANR	9266294	Argument	AV_LOG_ERROR		9265720	1					
ANR	9266295	Identifier	AV_LOG_ERROR		9265720	0					
ANR	9266296	Argument	"""Too many channels in vorbis_floor_decode.\\n"""		9265720	2					
ANR	9266297	PrimaryExpression	"""Too many channels in vorbis_floor_decode.\\n"""		9265720	0					
ANR	9266298	ReturnStatement	return - 1 ;	185:12:3218:3227	9265720	1	True				
ANR	9266299	UnaryOperationExpression	- 1		9265720	0					
ANR	9266300	UnaryOperator	-		9265720	0					
ANR	9266301	PrimaryExpression	1		9265720	1					
ANR	9266302	ExpressionStatement	"vorbis_residue_decode ( vc , residue , ch , do_not_decode , ch_res_ptr , blocksize / 2 )"	189:8:3249:3327	9265720	5	True				
ANR	9266303	CallExpression	"vorbis_residue_decode ( vc , residue , ch , do_not_decode , ch_res_ptr , blocksize / 2 )"		9265720	0					
ANR	9266304	Callee	vorbis_residue_decode		9265720	0					
ANR	9266305	Identifier	vorbis_residue_decode		9265720	0					
ANR	9266306	ArgumentList	vc		9265720	1					
ANR	9266307	Argument	vc		9265720	0					
ANR	9266308	Identifier	vc		9265720	0					
ANR	9266309	Argument	residue		9265720	1					
ANR	9266310	Identifier	residue		9265720	0					
ANR	9266311	Argument	ch		9265720	2					
ANR	9266312	Identifier	ch		9265720	0					
ANR	9266313	Argument	do_not_decode		9265720	3					
ANR	9266314	Identifier	do_not_decode		9265720	0					
ANR	9266315	Argument	ch_res_ptr		9265720	4					
ANR	9266316	Identifier	ch_res_ptr		9265720	0					
ANR	9266317	Argument	blocksize / 2		9265720	5					
ANR	9266318	MultiplicativeExpression	blocksize / 2		9265720	0		/			
ANR	9266319	Identifier	blocksize		9265720	0					
ANR	9266320	PrimaryExpression	2		9265720	1					
ANR	9266321	ExpressionStatement	ch_res_ptr += ch * blocksize / 2	193:8:3340:3372	9265720	6	True				
ANR	9266322	AssignmentExpression	ch_res_ptr += ch * blocksize / 2		9265720	0		+=			
ANR	9266323	Identifier	ch_res_ptr		9265720	0					
ANR	9266324	MultiplicativeExpression	ch * blocksize / 2		9265720	1		*			
ANR	9266325	Identifier	ch		9265720	0					
ANR	9266326	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266327	Identifier	blocksize		9265720	0					
ANR	9266328	PrimaryExpression	2		9265720	1					
ANR	9266329	ExpressionStatement	ch_left -= ch	195:8:3383:3396	9265720	7	True				
ANR	9266330	AssignmentExpression	ch_left -= ch		9265720	0		-=			
ANR	9266331	Identifier	ch_left		9265720	0					
ANR	9266332	Identifier	ch		9265720	1					
ANR	9266333	ForStatement	for ( i = mapping -> coupling_steps - 1 ; i >= 0 ; -- i )		9265720	27					
ANR	9266334	ForInit	i = mapping -> coupling_steps - 1 ;	205:9:3440:3471	9265720	0	True				
ANR	9266335	AssignmentExpression	i = mapping -> coupling_steps - 1		9265720	0		=			
ANR	9266336	Identifier	i		9265720	0					
ANR	9266337	AdditiveExpression	mapping -> coupling_steps - 1		9265720	1		-			
ANR	9266338	PtrMemberAccess	mapping -> coupling_steps		9265720	0					
ANR	9266339	Identifier	mapping		9265720	0					
ANR	9266340	Identifier	coupling_steps		9265720	1					
ANR	9266341	PrimaryExpression	1		9265720	1					
ANR	9266342	Condition	i >= 0	205:42:3473:3478	9265720	1	True				
ANR	9266343	RelationalExpression	i >= 0		9265720	0		>=			
ANR	9266344	Identifier	i		9265720	0					
ANR	9266345	PrimaryExpression	0		9265720	1					
ANR	9266346	UnaryExpression	-- i	205:50:3481:3483	9265720	2	True				
ANR	9266347	IncDec	--		9265720	0					
ANR	9266348	Identifier	i		9265720	1					
ANR	9266349	CompoundStatement		205:8:3468:3484	9265720	3					
ANR	9266350	IdentifierDeclStatement	"float * mag , * ang ;"	207:8:3527:3543	9265720	0	True				
ANR	9266351	IdentifierDecl	* mag		9265720	0					
ANR	9266352	IdentifierDeclType	float *		9265720	0					
ANR	9266353	Identifier	mag		9265720	1					
ANR	9266354	IdentifierDecl	* ang		9265720	1					
ANR	9266355	IdentifierDeclType	float *		9265720	0					
ANR	9266356	Identifier	ang		9265720	1					
ANR	9266357	ExpressionStatement	mag = vc -> channel_residues + res_chan [ mapping -> magnitude [ i ] ] * blocksize / 2	211:8:3556:3630	9265720	1	True				
ANR	9266358	AssignmentExpression	mag = vc -> channel_residues + res_chan [ mapping -> magnitude [ i ] ] * blocksize / 2		9265720	0		=			
ANR	9266359	Identifier	mag		9265720	0					
ANR	9266360	AdditiveExpression	vc -> channel_residues + res_chan [ mapping -> magnitude [ i ] ] * blocksize / 2		9265720	1		+			
ANR	9266361	PtrMemberAccess	vc -> channel_residues		9265720	0					
ANR	9266362	Identifier	vc		9265720	0					
ANR	9266363	Identifier	channel_residues		9265720	1					
ANR	9266364	MultiplicativeExpression	res_chan [ mapping -> magnitude [ i ] ] * blocksize / 2		9265720	1		*			
ANR	9266365	ArrayIndexing	res_chan [ mapping -> magnitude [ i ] ]		9265720	0					
ANR	9266366	Identifier	res_chan		9265720	0					
ANR	9266367	ArrayIndexing	mapping -> magnitude [ i ]		9265720	1					
ANR	9266368	PtrMemberAccess	mapping -> magnitude		9265720	0					
ANR	9266369	Identifier	mapping		9265720	0					
ANR	9266370	Identifier	magnitude		9265720	1					
ANR	9266371	Identifier	i		9265720	1					
ANR	9266372	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266373	Identifier	blocksize		9265720	0					
ANR	9266374	PrimaryExpression	2		9265720	1					
ANR	9266375	ExpressionStatement	ang = vc -> channel_residues + res_chan [ mapping -> angle [ i ] ] * blocksize / 2	213:8:3641:3715	9265720	2	True				
ANR	9266376	AssignmentExpression	ang = vc -> channel_residues + res_chan [ mapping -> angle [ i ] ] * blocksize / 2		9265720	0		=			
ANR	9266377	Identifier	ang		9265720	0					
ANR	9266378	AdditiveExpression	vc -> channel_residues + res_chan [ mapping -> angle [ i ] ] * blocksize / 2		9265720	1		+			
ANR	9266379	PtrMemberAccess	vc -> channel_residues		9265720	0					
ANR	9266380	Identifier	vc		9265720	0					
ANR	9266381	Identifier	channel_residues		9265720	1					
ANR	9266382	MultiplicativeExpression	res_chan [ mapping -> angle [ i ] ] * blocksize / 2		9265720	1		*			
ANR	9266383	ArrayIndexing	res_chan [ mapping -> angle [ i ] ]		9265720	0					
ANR	9266384	Identifier	res_chan		9265720	0					
ANR	9266385	ArrayIndexing	mapping -> angle [ i ]		9265720	1					
ANR	9266386	PtrMemberAccess	mapping -> angle		9265720	0					
ANR	9266387	Identifier	mapping		9265720	0					
ANR	9266388	Identifier	angle		9265720	1					
ANR	9266389	Identifier	i		9265720	1					
ANR	9266390	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266391	Identifier	blocksize		9265720	0					
ANR	9266392	PrimaryExpression	2		9265720	1					
ANR	9266393	ExpressionStatement	"vc -> dsp . vorbis_inverse_coupling ( mag , ang , blocksize / 2 )"	215:8:3726:3782	9265720	3	True				
ANR	9266394	CallExpression	"vc -> dsp . vorbis_inverse_coupling ( mag , ang , blocksize / 2 )"		9265720	0					
ANR	9266395	Callee	vc -> dsp . vorbis_inverse_coupling		9265720	0					
ANR	9266396	MemberAccess	vc -> dsp . vorbis_inverse_coupling		9265720	0					
ANR	9266397	PtrMemberAccess	vc -> dsp		9265720	0					
ANR	9266398	Identifier	vc		9265720	0					
ANR	9266399	Identifier	dsp		9265720	1					
ANR	9266400	Identifier	vorbis_inverse_coupling		9265720	1					
ANR	9266401	ArgumentList	mag		9265720	1					
ANR	9266402	Argument	mag		9265720	0					
ANR	9266403	Identifier	mag		9265720	0					
ANR	9266404	Argument	ang		9265720	1					
ANR	9266405	Identifier	ang		9265720	0					
ANR	9266406	Argument	blocksize / 2		9265720	2					
ANR	9266407	MultiplicativeExpression	blocksize / 2		9265720	0		/			
ANR	9266408	Identifier	blocksize		9265720	0					
ANR	9266409	PrimaryExpression	2		9265720	1					
ANR	9266410	ExpressionStatement	mdct = & vc -> mdct [ blockflag ]	225:4:3821:3848	9265720	28	True				
ANR	9266411	AssignmentExpression	mdct = & vc -> mdct [ blockflag ]		9265720	0		=			
ANR	9266412	Identifier	mdct		9265720	0					
ANR	9266413	UnaryOperationExpression	& vc -> mdct [ blockflag ]		9265720	1					
ANR	9266414	UnaryOperator	&		9265720	0					
ANR	9266415	ArrayIndexing	vc -> mdct [ blockflag ]		9265720	1					
ANR	9266416	PtrMemberAccess	vc -> mdct		9265720	0					
ANR	9266417	Identifier	vc		9265720	0					
ANR	9266418	Identifier	mdct		9265720	1					
ANR	9266419	Identifier	blockflag		9265720	1					
ANR	9266420	ForStatement	for ( j = vc -> audio_channels - 1 ; j >= 0 ; j -- )		9265720	29					
ANR	9266421	ForInit	j = vc -> audio_channels - 1 ;	229:9:3862:3886	9265720	0	True				
ANR	9266422	AssignmentExpression	j = vc -> audio_channels - 1		9265720	0		=			
ANR	9266423	Identifier	j		9265720	0					
ANR	9266424	AdditiveExpression	vc -> audio_channels - 1		9265720	1		-			
ANR	9266425	PtrMemberAccess	vc -> audio_channels		9265720	0					
ANR	9266426	Identifier	vc		9265720	0					
ANR	9266427	Identifier	audio_channels		9265720	1					
ANR	9266428	PrimaryExpression	1		9265720	1					
ANR	9266429	Condition	j >= 0	229:34:3887:3892	9265720	1	True				
ANR	9266430	RelationalExpression	j >= 0		9265720	0		>=			
ANR	9266431	Identifier	j		9265720	0					
ANR	9266432	PrimaryExpression	0		9265720	1					
ANR	9266433	PostIncDecOperationExpression	j --	229:42:3895:3897	9265720	2	True				
ANR	9266434	Identifier	j		9265720	0					
ANR	9266435	IncDec	--		9265720	1					
ANR	9266436	CompoundStatement		227:47:3841:3841	9265720	3					
ANR	9266437	ExpressionStatement	ch_floor_ptr = vc -> channel_floors + j * blocksize / 2	231:8:3911:3976	9265720	0	True				
ANR	9266438	AssignmentExpression	ch_floor_ptr = vc -> channel_floors + j * blocksize / 2		9265720	0		=			
ANR	9266439	Identifier	ch_floor_ptr		9265720	0					
ANR	9266440	AdditiveExpression	vc -> channel_floors + j * blocksize / 2		9265720	1		+			
ANR	9266441	PtrMemberAccess	vc -> channel_floors		9265720	0					
ANR	9266442	Identifier	vc		9265720	0					
ANR	9266443	Identifier	channel_floors		9265720	1					
ANR	9266444	MultiplicativeExpression	j * blocksize / 2		9265720	1		*			
ANR	9266445	Identifier	j		9265720	0					
ANR	9266446	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266447	Identifier	blocksize		9265720	0					
ANR	9266448	PrimaryExpression	2		9265720	1					
ANR	9266449	ExpressionStatement	ch_res_ptr = vc -> channel_residues + res_chan [ j ] * blocksize / 2	233:8:3987:4052	9265720	1	True				
ANR	9266450	AssignmentExpression	ch_res_ptr = vc -> channel_residues + res_chan [ j ] * blocksize / 2		9265720	0		=			
ANR	9266451	Identifier	ch_res_ptr		9265720	0					
ANR	9266452	AdditiveExpression	vc -> channel_residues + res_chan [ j ] * blocksize / 2		9265720	1		+			
ANR	9266453	PtrMemberAccess	vc -> channel_residues		9265720	0					
ANR	9266454	Identifier	vc		9265720	0					
ANR	9266455	Identifier	channel_residues		9265720	1					
ANR	9266456	MultiplicativeExpression	res_chan [ j ] * blocksize / 2		9265720	1		*			
ANR	9266457	ArrayIndexing	res_chan [ j ]		9265720	0					
ANR	9266458	Identifier	res_chan		9265720	0					
ANR	9266459	Identifier	j		9265720	1					
ANR	9266460	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266461	Identifier	blocksize		9265720	0					
ANR	9266462	PrimaryExpression	2		9265720	1					
ANR	9266463	ExpressionStatement	"vc -> dsp . vector_fmul ( ch_floor_ptr , ch_floor_ptr , ch_res_ptr , blocksize / 2 )"	235:8:4063:4137	9265720	2	True				
ANR	9266464	CallExpression	"vc -> dsp . vector_fmul ( ch_floor_ptr , ch_floor_ptr , ch_res_ptr , blocksize / 2 )"		9265720	0					
ANR	9266465	Callee	vc -> dsp . vector_fmul		9265720	0					
ANR	9266466	MemberAccess	vc -> dsp . vector_fmul		9265720	0					
ANR	9266467	PtrMemberAccess	vc -> dsp		9265720	0					
ANR	9266468	Identifier	vc		9265720	0					
ANR	9266469	Identifier	dsp		9265720	1					
ANR	9266470	Identifier	vector_fmul		9265720	1					
ANR	9266471	ArgumentList	ch_floor_ptr		9265720	1					
ANR	9266472	Argument	ch_floor_ptr		9265720	0					
ANR	9266473	Identifier	ch_floor_ptr		9265720	0					
ANR	9266474	Argument	ch_floor_ptr		9265720	1					
ANR	9266475	Identifier	ch_floor_ptr		9265720	0					
ANR	9266476	Argument	ch_res_ptr		9265720	2					
ANR	9266477	Identifier	ch_res_ptr		9265720	0					
ANR	9266478	Argument	blocksize / 2		9265720	3					
ANR	9266479	MultiplicativeExpression	blocksize / 2		9265720	0		/			
ANR	9266480	Identifier	blocksize		9265720	0					
ANR	9266481	PrimaryExpression	2		9265720	1					
ANR	9266482	ExpressionStatement	"mdct -> imdct_half ( mdct , ch_res_ptr , ch_floor_ptr )"	237:8:4148:4196	9265720	3	True				
ANR	9266483	CallExpression	"mdct -> imdct_half ( mdct , ch_res_ptr , ch_floor_ptr )"		9265720	0					
ANR	9266484	Callee	mdct -> imdct_half		9265720	0					
ANR	9266485	PtrMemberAccess	mdct -> imdct_half		9265720	0					
ANR	9266486	Identifier	mdct		9265720	0					
ANR	9266487	Identifier	imdct_half		9265720	1					
ANR	9266488	ArgumentList	mdct		9265720	1					
ANR	9266489	Argument	mdct		9265720	0					
ANR	9266490	Identifier	mdct		9265720	0					
ANR	9266491	Argument	ch_res_ptr		9265720	1					
ANR	9266492	Identifier	ch_res_ptr		9265720	0					
ANR	9266493	Argument	ch_floor_ptr		9265720	2					
ANR	9266494	Identifier	ch_floor_ptr		9265720	0					
ANR	9266495	ExpressionStatement	retlen = ( blocksize + vc -> blocksize [ previous_window ] ) / 4	247:4:4270:4327	9265720	30	True				
ANR	9266496	AssignmentExpression	retlen = ( blocksize + vc -> blocksize [ previous_window ] ) / 4		9265720	0		=			
ANR	9266497	Identifier	retlen		9265720	0					
ANR	9266498	MultiplicativeExpression	( blocksize + vc -> blocksize [ previous_window ] ) / 4		9265720	1		/			
ANR	9266499	AdditiveExpression	blocksize + vc -> blocksize [ previous_window ]		9265720	0		+			
ANR	9266500	Identifier	blocksize		9265720	0					
ANR	9266501	ArrayIndexing	vc -> blocksize [ previous_window ]		9265720	1					
ANR	9266502	PtrMemberAccess	vc -> blocksize		9265720	0					
ANR	9266503	Identifier	vc		9265720	0					
ANR	9266504	Identifier	blocksize		9265720	1					
ANR	9266505	Identifier	previous_window		9265720	1					
ANR	9266506	PrimaryExpression	4		9265720	1					
ANR	9266507	ForStatement	for ( j = 0 ; j < vc -> audio_channels ; j ++ )		9265720	31					
ANR	9266508	ForInit	j = 0 ;	249:9:4339:4344	9265720	0	True				
ANR	9266509	AssignmentExpression	j = 0		9265720	0		=			
ANR	9266510	Identifier	j		9265720	0					
ANR	9266511	PrimaryExpression	0		9265720	1					
ANR	9266512	Condition	j < vc -> audio_channels	249:16:4346:4367	9265720	1	True				
ANR	9266513	RelationalExpression	j < vc -> audio_channels		9265720	0		<			
ANR	9266514	Identifier	j		9265720	0					
ANR	9266515	PtrMemberAccess	vc -> audio_channels		9265720	1					
ANR	9266516	Identifier	vc		9265720	0					
ANR	9266517	Identifier	audio_channels		9265720	1					
ANR	9266518	PostIncDecOperationExpression	j ++	249:40:4370:4372	9265720	2	True				
ANR	9266519	Identifier	j		9265720	0					
ANR	9266520	IncDec	++		9265720	1					
ANR	9266521	CompoundStatement		261:8:4646:4702	9265720	3					
ANR	9266522	IdentifierDeclStatement	unsigned bs0 = vc -> blocksize [ 0 ] ;	251:8:4386:4417	9265720	0	True				
ANR	9266523	IdentifierDecl	bs0 = vc -> blocksize [ 0 ]		9265720	0					
ANR	9266524	IdentifierDeclType	unsigned		9265720	0					
ANR	9266525	Identifier	bs0		9265720	1					
ANR	9266526	AssignmentExpression	bs0 = vc -> blocksize [ 0 ]		9265720	2		=			
ANR	9266527	Identifier	bs0		9265720	0					
ANR	9266528	ArrayIndexing	vc -> blocksize [ 0 ]		9265720	1					
ANR	9266529	PtrMemberAccess	vc -> blocksize		9265720	0					
ANR	9266530	Identifier	vc		9265720	0					
ANR	9266531	Identifier	blocksize		9265720	1					
ANR	9266532	PrimaryExpression	0		9265720	1					
ANR	9266533	IdentifierDeclStatement	unsigned bs1 = vc -> blocksize [ 1 ] ;	253:8:4428:4459	9265720	1	True				
ANR	9266534	IdentifierDecl	bs1 = vc -> blocksize [ 1 ]		9265720	0					
ANR	9266535	IdentifierDeclType	unsigned		9265720	0					
ANR	9266536	Identifier	bs1		9265720	1					
ANR	9266537	AssignmentExpression	bs1 = vc -> blocksize [ 1 ]		9265720	2		=			
ANR	9266538	Identifier	bs1		9265720	0					
ANR	9266539	ArrayIndexing	vc -> blocksize [ 1 ]		9265720	1					
ANR	9266540	PtrMemberAccess	vc -> blocksize		9265720	0					
ANR	9266541	Identifier	vc		9265720	0					
ANR	9266542	Identifier	blocksize		9265720	1					
ANR	9266543	PrimaryExpression	1		9265720	1					
ANR	9266544	IdentifierDeclStatement	float * residue = vc -> channel_residues + res_chan [ j ] * blocksize / 2 ;	255:8:4470:4540	9265720	2	True				
ANR	9266545	IdentifierDecl	* residue = vc -> channel_residues + res_chan [ j ] * blocksize / 2		9265720	0					
ANR	9266546	IdentifierDeclType	float *		9265720	0					
ANR	9266547	Identifier	residue		9265720	1					
ANR	9266548	AssignmentExpression	* residue = vc -> channel_residues + res_chan [ j ] * blocksize / 2		9265720	2		=			
ANR	9266549	Identifier	residue		9265720	0					
ANR	9266550	AdditiveExpression	vc -> channel_residues + res_chan [ j ] * blocksize / 2		9265720	1		+			
ANR	9266551	PtrMemberAccess	vc -> channel_residues		9265720	0					
ANR	9266552	Identifier	vc		9265720	0					
ANR	9266553	Identifier	channel_residues		9265720	1					
ANR	9266554	MultiplicativeExpression	res_chan [ j ] * blocksize / 2		9265720	1		*			
ANR	9266555	ArrayIndexing	res_chan [ j ]		9265720	0					
ANR	9266556	Identifier	res_chan		9265720	0					
ANR	9266557	Identifier	j		9265720	1					
ANR	9266558	MultiplicativeExpression	blocksize / 2		9265720	1		/			
ANR	9266559	Identifier	blocksize		9265720	0					
ANR	9266560	PrimaryExpression	2		9265720	1					
ANR	9266561	IdentifierDeclStatement	float * saved = vc -> saved + j * bs1 / 4 ;	257:8:4551:4594	9265720	3	True				
ANR	9266562	IdentifierDecl	* saved = vc -> saved + j * bs1 / 4		9265720	0					
ANR	9266563	IdentifierDeclType	float *		9265720	0					
ANR	9266564	Identifier	saved		9265720	1					
ANR	9266565	AssignmentExpression	* saved = vc -> saved + j * bs1 / 4		9265720	2		=			
ANR	9266566	Identifier	saved		9265720	0					
ANR	9266567	AdditiveExpression	vc -> saved + j * bs1 / 4		9265720	1		+			
ANR	9266568	PtrMemberAccess	vc -> saved		9265720	0					
ANR	9266569	Identifier	vc		9265720	0					
ANR	9266570	Identifier	saved		9265720	1					
ANR	9266571	MultiplicativeExpression	j * bs1 / 4		9265720	1		*			
ANR	9266572	Identifier	j		9265720	0					
ANR	9266573	MultiplicativeExpression	bs1 / 4		9265720	1		/			
ANR	9266574	Identifier	bs1		9265720	0					
ANR	9266575	PrimaryExpression	4		9265720	1					
ANR	9266576	IdentifierDeclStatement	float * ret = vc -> channel_floors + j * retlen ;	259:8:4605:4656	9265720	4	True				
ANR	9266577	IdentifierDecl	* ret = vc -> channel_floors + j * retlen		9265720	0					
ANR	9266578	IdentifierDeclType	float *		9265720	0					
ANR	9266579	Identifier	ret		9265720	1					
ANR	9266580	AssignmentExpression	* ret = vc -> channel_floors + j * retlen		9265720	2		=			
ANR	9266581	Identifier	ret		9265720	0					
ANR	9266582	AdditiveExpression	vc -> channel_floors + j * retlen		9265720	1		+			
ANR	9266583	PtrMemberAccess	vc -> channel_floors		9265720	0					
ANR	9266584	Identifier	vc		9265720	0					
ANR	9266585	Identifier	channel_floors		9265720	1					
ANR	9266586	MultiplicativeExpression	j * retlen		9265720	1		*			
ANR	9266587	Identifier	j		9265720	0					
ANR	9266588	Identifier	retlen		9265720	1					
ANR	9266589	IdentifierDeclStatement	float * buf = residue ;	261:8:4667:4694	9265720	5	True				
ANR	9266590	IdentifierDecl	* buf = residue		9265720	0					
ANR	9266591	IdentifierDeclType	float *		9265720	0					
ANR	9266592	Identifier	buf		9265720	1					
ANR	9266593	AssignmentExpression	* buf = residue		9265720	2		=			
ANR	9266594	Identifier	residue		9265720	0					
ANR	9266595	Identifier	residue		9265720	1					
ANR	9266596	IdentifierDeclStatement	const float * win = vc -> win [ blockflag & previous_window ] ;	263:8:4705:4761	9265720	6	True				
ANR	9266597	IdentifierDecl	* win = vc -> win [ blockflag & previous_window ]		9265720	0					
ANR	9266598	IdentifierDeclType	const float *		9265720	0					
ANR	9266599	Identifier	win		9265720	1					
ANR	9266600	AssignmentExpression	* win = vc -> win [ blockflag & previous_window ]		9265720	2		=			
ANR	9266601	Identifier	win		9265720	0					
ANR	9266602	ArrayIndexing	vc -> win [ blockflag & previous_window ]		9265720	1					
ANR	9266603	PtrMemberAccess	vc -> win		9265720	0					
ANR	9266604	Identifier	vc		9265720	0					
ANR	9266605	Identifier	win		9265720	1					
ANR	9266606	BitAndExpression	blockflag & previous_window		9265720	1		&			
ANR	9266607	Identifier	blockflag		9265720	0					
ANR	9266608	Identifier	previous_window		9265720	1					
ANR	9266609	IfStatement	if ( blockflag == previous_window )		9265720	7					
ANR	9266610	Condition	blockflag == previous_window	267:12:4778:4805	9265720	0	True				
ANR	9266611	EqualityExpression	blockflag == previous_window		9265720	0		==			
ANR	9266612	Identifier	blockflag		9265720	0					
ANR	9266613	Identifier	previous_window		9265720	1					
ANR	9266614	CompoundStatement		265:42:4749:4749	9265720	1					
ANR	9266615	ExpressionStatement	"vc -> dsp . vector_fmul_window ( ret , saved , buf , win , blocksize / 4 )"	269:12:4823:4886	9265720	0	True				
ANR	9266616	CallExpression	"vc -> dsp . vector_fmul_window ( ret , saved , buf , win , blocksize / 4 )"		9265720	0					
ANR	9266617	Callee	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266618	MemberAccess	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266619	PtrMemberAccess	vc -> dsp		9265720	0					
ANR	9266620	Identifier	vc		9265720	0					
ANR	9266621	Identifier	dsp		9265720	1					
ANR	9266622	Identifier	vector_fmul_window		9265720	1					
ANR	9266623	ArgumentList	ret		9265720	1					
ANR	9266624	Argument	ret		9265720	0					
ANR	9266625	Identifier	ret		9265720	0					
ANR	9266626	Argument	saved		9265720	1					
ANR	9266627	Identifier	saved		9265720	0					
ANR	9266628	Argument	buf		9265720	2					
ANR	9266629	Identifier	buf		9265720	0					
ANR	9266630	Argument	win		9265720	3					
ANR	9266631	Identifier	win		9265720	0					
ANR	9266632	Argument	blocksize / 4		9265720	4					
ANR	9266633	MultiplicativeExpression	blocksize / 4		9265720	0		/			
ANR	9266634	Identifier	blocksize		9265720	0					
ANR	9266635	PrimaryExpression	4		9265720	1					
ANR	9266636	ElseStatement	else		9265720	0					
ANR	9266637	IfStatement	if ( blockflag > previous_window )		9265720	0					
ANR	9266638	Condition	blockflag > previous_window	271:19:4908:4934	9265720	0	True				
ANR	9266639	RelationalExpression	blockflag > previous_window		9265720	0		>			
ANR	9266640	Identifier	blockflag		9265720	0					
ANR	9266641	Identifier	previous_window		9265720	1					
ANR	9266642	CompoundStatement		269:48:4878:4878	9265720	1					
ANR	9266643	ExpressionStatement	"vc -> dsp . vector_fmul_window ( ret , saved , buf , win , bs0 / 4 )"	273:12:4952:5009	9265720	0	True				
ANR	9266644	CallExpression	"vc -> dsp . vector_fmul_window ( ret , saved , buf , win , bs0 / 4 )"		9265720	0					
ANR	9266645	Callee	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266646	MemberAccess	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266647	PtrMemberAccess	vc -> dsp		9265720	0					
ANR	9266648	Identifier	vc		9265720	0					
ANR	9266649	Identifier	dsp		9265720	1					
ANR	9266650	Identifier	vector_fmul_window		9265720	1					
ANR	9266651	ArgumentList	ret		9265720	1					
ANR	9266652	Argument	ret		9265720	0					
ANR	9266653	Identifier	ret		9265720	0					
ANR	9266654	Argument	saved		9265720	1					
ANR	9266655	Identifier	saved		9265720	0					
ANR	9266656	Argument	buf		9265720	2					
ANR	9266657	Identifier	buf		9265720	0					
ANR	9266658	Argument	win		9265720	3					
ANR	9266659	Identifier	win		9265720	0					
ANR	9266660	Argument	bs0 / 4		9265720	4					
ANR	9266661	MultiplicativeExpression	bs0 / 4		9265720	0		/			
ANR	9266662	Identifier	bs0		9265720	0					
ANR	9266663	PrimaryExpression	4		9265720	1					
ANR	9266664	ExpressionStatement	"memcpy ( ret + bs0 / 2 , buf + bs0 / 4 , ( ( bs1 - bs0 ) / 4 ) * sizeof ( float ) )"	275:12:5024:5083	9265720	1	True				
ANR	9266665	CallExpression	"memcpy ( ret + bs0 / 2 , buf + bs0 / 4 , ( ( bs1 - bs0 ) / 4 ) * sizeof ( float ) )"		9265720	0					
ANR	9266666	Callee	memcpy		9265720	0					
ANR	9266667	Identifier	memcpy		9265720	0					
ANR	9266668	ArgumentList	ret + bs0 / 2		9265720	1					
ANR	9266669	Argument	ret + bs0 / 2		9265720	0					
ANR	9266670	AdditiveExpression	ret + bs0 / 2		9265720	0		+			
ANR	9266671	Identifier	ret		9265720	0					
ANR	9266672	MultiplicativeExpression	bs0 / 2		9265720	1		/			
ANR	9266673	Identifier	bs0		9265720	0					
ANR	9266674	PrimaryExpression	2		9265720	1					
ANR	9266675	Argument	buf + bs0 / 4		9265720	1					
ANR	9266676	AdditiveExpression	buf + bs0 / 4		9265720	0		+			
ANR	9266677	Identifier	buf		9265720	0					
ANR	9266678	MultiplicativeExpression	bs0 / 4		9265720	1		/			
ANR	9266679	Identifier	bs0		9265720	0					
ANR	9266680	PrimaryExpression	4		9265720	1					
ANR	9266681	Argument	( ( bs1 - bs0 ) / 4 ) * sizeof ( float )		9265720	2					
ANR	9266682	MultiplicativeExpression	( ( bs1 - bs0 ) / 4 ) * sizeof ( float )		9265720	0		*			
ANR	9266683	MultiplicativeExpression	( bs1 - bs0 ) / 4		9265720	0		/			
ANR	9266684	AdditiveExpression	bs1 - bs0		9265720	0		-			
ANR	9266685	Identifier	bs1		9265720	0					
ANR	9266686	Identifier	bs0		9265720	1					
ANR	9266687	PrimaryExpression	4		9265720	1					
ANR	9266688	SizeofExpression	sizeof ( float )		9265720	1					
ANR	9266689	Sizeof	sizeof		9265720	0					
ANR	9266690	SizeofOperand	float		9265720	1					
ANR	9266691	ElseStatement	else		9265720	0					
ANR	9266692	CompoundStatement		275:15:5042:5042	9265720	0					
ANR	9266693	ExpressionStatement	"memcpy ( ret , saved , ( ( bs1 - bs0 ) / 4 ) * sizeof ( float ) )"	279:12:5116:5169	9265720	0	True				
ANR	9266694	CallExpression	"memcpy ( ret , saved , ( ( bs1 - bs0 ) / 4 ) * sizeof ( float ) )"		9265720	0					
ANR	9266695	Callee	memcpy		9265720	0					
ANR	9266696	Identifier	memcpy		9265720	0					
ANR	9266697	ArgumentList	ret		9265720	1					
ANR	9266698	Argument	ret		9265720	0					
ANR	9266699	Identifier	ret		9265720	0					
ANR	9266700	Argument	saved		9265720	1					
ANR	9266701	Identifier	saved		9265720	0					
ANR	9266702	Argument	( ( bs1 - bs0 ) / 4 ) * sizeof ( float )		9265720	2					
ANR	9266703	MultiplicativeExpression	( ( bs1 - bs0 ) / 4 ) * sizeof ( float )		9265720	0		*			
ANR	9266704	MultiplicativeExpression	( bs1 - bs0 ) / 4		9265720	0		/			
ANR	9266705	AdditiveExpression	bs1 - bs0		9265720	0		-			
ANR	9266706	Identifier	bs1		9265720	0					
ANR	9266707	Identifier	bs0		9265720	1					
ANR	9266708	PrimaryExpression	4		9265720	1					
ANR	9266709	SizeofExpression	sizeof ( float )		9265720	1					
ANR	9266710	Sizeof	sizeof		9265720	0					
ANR	9266711	SizeofOperand	float		9265720	1					
ANR	9266712	ExpressionStatement	"vc -> dsp . vector_fmul_window ( ret + ( bs1 - bs0 ) / 4 , saved + ( bs1 - bs0 ) / 4 , buf , win , bs0 / 4 )"	281:12:5184:5277	9265720	1	True				
ANR	9266713	CallExpression	"vc -> dsp . vector_fmul_window ( ret + ( bs1 - bs0 ) / 4 , saved + ( bs1 - bs0 ) / 4 , buf , win , bs0 / 4 )"		9265720	0					
ANR	9266714	Callee	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266715	MemberAccess	vc -> dsp . vector_fmul_window		9265720	0					
ANR	9266716	PtrMemberAccess	vc -> dsp		9265720	0					
ANR	9266717	Identifier	vc		9265720	0					
ANR	9266718	Identifier	dsp		9265720	1					
ANR	9266719	Identifier	vector_fmul_window		9265720	1					
ANR	9266720	ArgumentList	ret + ( bs1 - bs0 ) / 4		9265720	1					
ANR	9266721	Argument	ret + ( bs1 - bs0 ) / 4		9265720	0					
ANR	9266722	AdditiveExpression	ret + ( bs1 - bs0 ) / 4		9265720	0		+			
ANR	9266723	Identifier	ret		9265720	0					
ANR	9266724	MultiplicativeExpression	( bs1 - bs0 ) / 4		9265720	1		/			
ANR	9266725	AdditiveExpression	bs1 - bs0		9265720	0		-			
ANR	9266726	Identifier	bs1		9265720	0					
ANR	9266727	Identifier	bs0		9265720	1					
ANR	9266728	PrimaryExpression	4		9265720	1					
ANR	9266729	Argument	saved + ( bs1 - bs0 ) / 4		9265720	1					
ANR	9266730	AdditiveExpression	saved + ( bs1 - bs0 ) / 4		9265720	0		+			
ANR	9266731	Identifier	saved		9265720	0					
ANR	9266732	MultiplicativeExpression	( bs1 - bs0 ) / 4		9265720	1		/			
ANR	9266733	AdditiveExpression	bs1 - bs0		9265720	0		-			
ANR	9266734	Identifier	bs1		9265720	0					
ANR	9266735	Identifier	bs0		9265720	1					
ANR	9266736	PrimaryExpression	4		9265720	1					
ANR	9266737	Argument	buf		9265720	2					
ANR	9266738	Identifier	buf		9265720	0					
ANR	9266739	Argument	win		9265720	3					
ANR	9266740	Identifier	win		9265720	0					
ANR	9266741	Argument	bs0 / 4		9265720	4					
ANR	9266742	MultiplicativeExpression	bs0 / 4		9265720	0		/			
ANR	9266743	Identifier	bs0		9265720	0					
ANR	9266744	PrimaryExpression	4		9265720	1					
ANR	9266745	ExpressionStatement	"memcpy ( saved , buf + blocksize / 4 , blocksize / 4 * sizeof ( float ) )"	285:8:5299:5364	9265720	8	True				
ANR	9266746	CallExpression	"memcpy ( saved , buf + blocksize / 4 , blocksize / 4 * sizeof ( float ) )"		9265720	0					
ANR	9266747	Callee	memcpy		9265720	0					
ANR	9266748	Identifier	memcpy		9265720	0					
ANR	9266749	ArgumentList	saved		9265720	1					
ANR	9266750	Argument	saved		9265720	0					
ANR	9266751	Identifier	saved		9265720	0					
ANR	9266752	Argument	buf + blocksize / 4		9265720	1					
ANR	9266753	AdditiveExpression	buf + blocksize / 4		9265720	0		+			
ANR	9266754	Identifier	buf		9265720	0					
ANR	9266755	MultiplicativeExpression	blocksize / 4		9265720	1		/			
ANR	9266756	Identifier	blocksize		9265720	0					
ANR	9266757	PrimaryExpression	4		9265720	1					
ANR	9266758	Argument	blocksize / 4 * sizeof ( float )		9265720	2					
ANR	9266759	MultiplicativeExpression	blocksize / 4 * sizeof ( float )		9265720	0		/			
ANR	9266760	Identifier	blocksize		9265720	0					
ANR	9266761	MultiplicativeExpression	4 * sizeof ( float )		9265720	1		*			
ANR	9266762	PrimaryExpression	4		9265720	0					
ANR	9266763	SizeofExpression	sizeof ( float )		9265720	1					
ANR	9266764	Sizeof	sizeof		9265720	0					
ANR	9266765	SizeofOperand	float		9265720	1					
ANR	9266766	ExpressionStatement	vc -> previous_window = blockflag	291:4:5380:5411	9265720	32	True				
ANR	9266767	AssignmentExpression	vc -> previous_window = blockflag		9265720	0		=			
ANR	9266768	PtrMemberAccess	vc -> previous_window		9265720	0					
ANR	9266769	Identifier	vc		9265720	0					
ANR	9266770	Identifier	previous_window		9265720	1					
ANR	9266771	Identifier	blockflag		9265720	1					
ANR	9266772	ReturnStatement	return retlen ;	293:4:5418:5431	9265720	33	True				
ANR	9266773	Identifier	retlen		9265720	0					
ANR	9266774	ReturnType	static int		9265720	1					
ANR	9266775	Identifier	vorbis_parse_audio_packet		9265720	2					
ANR	9266776	ParameterList	vorbis_context * vc		9265720	3					
ANR	9266777	Parameter	vorbis_context * vc	1:37:37:54	9265720	0	True				
ANR	9266778	ParameterType	vorbis_context *		9265720	0					
ANR	9266779	Identifier	vc		9265720	1					
ANR	9266780	CFGEntryNode	ENTRY		9265720		True				
ANR	9266781	CFGExitNode	EXIT		9265720		True				
ANR	9266782	Symbol	blocksize		9265720						
ANR	9266783	Symbol	bs1		9265720						
ANR	9266784	Symbol	saved		9265720						
ANR	9266785	Symbol	res_num		9265720						
ANR	9266786	Symbol	* ch		9265720						
ANR	9266787	Symbol	vc -> channel_residues		9265720						
ANR	9266788	Symbol	* mapping -> submap_floor		9265720						
ANR	9266789	Symbol	vc -> floors		9265720						
ANR	9266790	Symbol	vc -> dsp		9265720						
ANR	9266791	Symbol	vc -> modes		9265720						
ANR	9266792	Symbol	mapping -> submaps		9265720						
ANR	9266793	Symbol	* mapping -> angle		9265720						
ANR	9266794	Symbol	vc -> residues		9265720						
ANR	9266795	Symbol	* mapping		9265720						
ANR	9266796	Symbol	* vc -> win		9265720						
ANR	9266797	Symbol	mapping -> coupling_steps		9265720						
ANR	9266798	Symbol	retlen		9265720						
ANR	9266799	Symbol	mapping -> magnitude		9265720						
ANR	9266800	Symbol	* * vc		9265720						
ANR	9266801	Symbol	* res_chan		9265720						
ANR	9266802	Symbol	* * mapping		9265720						
ANR	9266803	Symbol	ret		9265720						
ANR	9266804	Symbol	vc -> audio_channels		9265720						
ANR	9266805	Symbol	mapping		9265720						
ANR	9266806	Symbol	* * i		9265720						
ANR	9266807	Symbol	vc -> avccontext		9265720						
ANR	9266808	Symbol	NULL		9265720						
ANR	9266809	Symbol	vc -> channel_floors		9265720						
ANR	9266810	Symbol	* floor		9265720						
ANR	9266811	Symbol	do_not_decode		9265720						
ANR	9266812	Symbol	get_bits1		9265720						
ANR	9266813	Symbol	* vc -> modes		9265720						
ANR	9266814	Symbol	* no_residue		9265720						
ANR	9266815	Symbol	* mode_number		9265720						
ANR	9266816	Symbol	vc -> modes [ mode_number ] . mapping		9265720						
ANR	9266817	Symbol	vc		9265720						
ANR	9266818	Symbol	ch_floor_ptr		9265720						
ANR	9266819	Symbol	* * mapping -> magnitude		9265720						
ANR	9266820	Symbol	vc -> modes [ mode_number ] . blockflag		9265720						
ANR	9266821	Symbol	vc -> saved		9265720						
ANR	9266822	Symbol	mapping -> submap_floor		9265720						
ANR	9266823	Symbol	no_residue		9265720						
ANR	9266824	Symbol	vc -> mappings		9265720						
ANR	9266825	Symbol	floor -> decode		9265720						
ANR	9266826	Symbol	* previous_window		9265720						
ANR	9266827	Symbol	* blockflag		9265720						
ANR	9266828	Symbol	* vc -> blocksize		9265720						
ANR	9266829	Symbol	& vc -> gb		9265720						
ANR	9266830	Symbol	* mapping -> mux		9265720						
ANR	9266831	Symbol	mapping -> submap_residue		9265720						
ANR	9266832	Symbol	ch_left		9265720						
ANR	9266833	Symbol	vc -> previous_window		9265720						
ANR	9266834	Symbol	res_chan		9265720						
ANR	9266835	Symbol	vc -> blocksize		9265720						
ANR	9266836	Symbol	* mapping -> magnitude		9265720						
ANR	9266837	Symbol	ch_res_ptr		9265720						
ANR	9266838	Symbol	mag		9265720						
ANR	9266839	Symbol	* * mapping -> mux		9265720						
ANR	9266840	Symbol	vc -> mdct		9265720						
ANR	9266841	Symbol	gb		9265720						
ANR	9266842	Symbol	ang		9265720						
ANR	9266843	Symbol	floor		9265720						
ANR	9266844	Symbol	previous_window		9265720						
ANR	9266845	Symbol	win		9265720						
ANR	9266846	Symbol	* * * mapping		9265720						
ANR	9266847	Symbol	& floor -> data		9265720						
ANR	9266848	Symbol	AV_LOG_ERROR		9265720						
ANR	9266849	Symbol	mapping -> angle		9265720						
ANR	9266850	Symbol	ch		9265720						
ANR	9266851	Symbol	i		9265720						
ANR	9266852	Symbol	j		9265720						
ANR	9266853	Symbol	vc -> mode_number		9265720						
ANR	9266854	Symbol	vc -> win		9265720						
ANR	9266855	Symbol	residue		9265720						
ANR	9266856	Symbol	* vc		9265720						
ANR	9266857	Symbol	* mapping -> submap_residue		9265720						
ANR	9266858	Symbol	blockflag		9265720						
ANR	9266859	Symbol	buf		9265720						
ANR	9266860	Symbol	* i		9265720						
ANR	9266861	Symbol	* * mapping -> angle		9265720						
ANR	9266862	Symbol	* j		9265720						
ANR	9266863	Symbol	mapping -> mux		9265720						
ANR	9266864	Symbol	mode_number		9265720						
ANR	9266865	Symbol	* do_not_decode		9265720						
ANR	9266866	Symbol	AVERROR_INVALIDDATA		9265720						
ANR	9266867	Symbol	mdct		9265720						
ANR	9266868	Symbol	vc -> mode_count		9265720						
ANR	9266869	Symbol	bs0		9265720						
