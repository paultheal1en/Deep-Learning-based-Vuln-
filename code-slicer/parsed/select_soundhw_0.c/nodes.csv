command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7740098	File	/home/p4ultr4n/workplace/ReVeal/raw_code/select_soundhw_0.c								
ANR	7740099	Function	select_soundhw	1:0:0:1540							
ANR	7740100	FunctionDef	select_soundhw (const char * optarg)		7740099	0					
ANR	7740101	CompoundStatement		3:0:49:1540	7740099	0					
ANR	7740102	IdentifierDeclStatement	struct soundhw * c ;	5:4:56:73	7740099	0	True				
ANR	7740103	IdentifierDecl	* c		7740099	0					
ANR	7740104	IdentifierDeclType	struct soundhw *		7740099	0					
ANR	7740105	Identifier	c		7740099	1					
ANR	7740106	IfStatement	if ( * optarg == '?' )		7740099	1					
ANR	7740107	Condition	* optarg == '?'	9:8:86:99	7740099	0	True				
ANR	7740108	EqualityExpression	* optarg == '?'		7740099	0		==			
ANR	7740109	UnaryOperationExpression	* optarg		7740099	0					
ANR	7740110	UnaryOperator	*		7740099	0					
ANR	7740111	Identifier	optarg		7740099	1					
ANR	7740112	PrimaryExpression	'?'		7740099	1					
ANR	7740113	CompoundStatement		7:24:52:52	7740099	1					
ANR	7740114	Label	show_valid_cards :	11:4:109:125	7740099	0	True				
ANR	7740115	Identifier	show_valid_cards		7740099	0					
ANR	7740116	ExpressionStatement	"printf ( ""Valid sound card names (comma separated):\\n"" )"	15:8:138:192	7740099	1	True				
ANR	7740117	CallExpression	"printf ( ""Valid sound card names (comma separated):\\n"" )"		7740099	0					
ANR	7740118	Callee	printf		7740099	0					
ANR	7740119	Identifier	printf		7740099	0					
ANR	7740120	ArgumentList	"""Valid sound card names (comma separated):\\n"""		7740099	1					
ANR	7740121	Argument	"""Valid sound card names (comma separated):\\n"""		7740099	0					
ANR	7740122	PrimaryExpression	"""Valid sound card names (comma separated):\\n"""		7740099	0					
ANR	7740123	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740099	2					
ANR	7740124	ForInit	c = soundhw ;	17:13:208:219	7740099	0	True				
ANR	7740125	AssignmentExpression	c = soundhw		7740099	0		=			
ANR	7740126	Identifier	c		7740099	0					
ANR	7740127	Identifier	soundhw		7740099	1					
ANR	7740128	Condition	c -> name	17:26:221:227	7740099	1	True				
ANR	7740129	PtrMemberAccess	c -> name		7740099	0					
ANR	7740130	Identifier	c		7740099	0					
ANR	7740131	Identifier	name		7740099	1					
ANR	7740132	UnaryExpression	++ c	17:35:230:232	7740099	2	True				
ANR	7740133	IncDec	++		7740099	0					
ANR	7740134	Identifier	c		7740099	1					
ANR	7740135	CompoundStatement		15:40:185:185	7740099	3					
ANR	7740136	ExpressionStatement	"printf ( ""%-11s %s\\n"" , c -> name , c -> descr )"	19:12:250:290	7740099	0	True				
ANR	7740137	CallExpression	"printf ( ""%-11s %s\\n"" , c -> name , c -> descr )"		7740099	0					
ANR	7740138	Callee	printf		7740099	0					
ANR	7740139	Identifier	printf		7740099	0					
ANR	7740140	ArgumentList	"""%-11s %s\\n"""		7740099	1					
ANR	7740141	Argument	"""%-11s %s\\n"""		7740099	0					
ANR	7740142	PrimaryExpression	"""%-11s %s\\n"""		7740099	0					
ANR	7740143	Argument	c -> name		7740099	1					
ANR	7740144	PtrMemberAccess	c -> name		7740099	0					
ANR	7740145	Identifier	c		7740099	0					
ANR	7740146	Identifier	name		7740099	1					
ANR	7740147	Argument	c -> descr		7740099	2					
ANR	7740148	PtrMemberAccess	c -> descr		7740099	0					
ANR	7740149	Identifier	c		7740099	0					
ANR	7740150	Identifier	descr		7740099	1					
ANR	7740151	ExpressionStatement	"printf ( ""\\n-soundhw all will enable all of the above\\n"" )"	23:8:312:368	7740099	3	True				
ANR	7740152	CallExpression	"printf ( ""\\n-soundhw all will enable all of the above\\n"" )"		7740099	0					
ANR	7740153	Callee	printf		7740099	0					
ANR	7740154	Identifier	printf		7740099	0					
ANR	7740155	ArgumentList	"""\\n-soundhw all will enable all of the above\\n"""		7740099	1					
ANR	7740156	Argument	"""\\n-soundhw all will enable all of the above\\n"""		7740099	0					
ANR	7740157	PrimaryExpression	"""\\n-soundhw all will enable all of the above\\n"""		7740099	0					
ANR	7740158	ExpressionStatement	exit ( * optarg != '?' )	25:8:379:400	7740099	4	True				
ANR	7740159	CallExpression	exit ( * optarg != '?' )		7740099	0					
ANR	7740160	Callee	exit		7740099	0					
ANR	7740161	Identifier	exit		7740099	0					
ANR	7740162	ArgumentList	* optarg != '?'		7740099	1					
ANR	7740163	Argument	* optarg != '?'		7740099	0					
ANR	7740164	EqualityExpression	* optarg != '?'		7740099	0		!=			
ANR	7740165	UnaryOperationExpression	* optarg		7740099	0					
ANR	7740166	UnaryOperator	*		7740099	0					
ANR	7740167	Identifier	optarg		7740099	1					
ANR	7740168	PrimaryExpression	'?'		7740099	1					
ANR	7740169	ElseStatement	else		7740099	0					
ANR	7740170	CompoundStatement		35:8:441:457	7740099	0					
ANR	7740171	IdentifierDeclStatement	size_t l ;	31:8:430:438	7740099	0	True				
ANR	7740172	IdentifierDecl	l		7740099	0					
ANR	7740173	IdentifierDeclType	size_t		7740099	0					
ANR	7740174	Identifier	l		7740099	1					
ANR	7740175	IdentifierDeclStatement	const char * p ;	33:8:449:462	7740099	1	True				
ANR	7740176	IdentifierDecl	* p		7740099	0					
ANR	7740177	IdentifierDeclType	const char *		7740099	0					
ANR	7740178	Identifier	p		7740099	1					
ANR	7740179	IdentifierDeclStatement	char * e ;	35:8:473:480	7740099	2	True				
ANR	7740180	IdentifierDecl	* e		7740099	0					
ANR	7740181	IdentifierDeclType	char *		7740099	0					
ANR	7740182	Identifier	e		7740099	1					
ANR	7740183	IdentifierDeclStatement	int bad_card = 0 ;	37:8:491:507	7740099	3	True				
ANR	7740184	IdentifierDecl	bad_card = 0		7740099	0					
ANR	7740185	IdentifierDeclType	int		7740099	0					
ANR	7740186	Identifier	bad_card		7740099	1					
ANR	7740187	AssignmentExpression	bad_card = 0		7740099	2		=			
ANR	7740188	Identifier	bad_card		7740099	0					
ANR	7740189	PrimaryExpression	0		7740099	1					
ANR	7740190	IfStatement	"if ( ! strcmp ( optarg , ""all"" ) )"		7740099	4					
ANR	7740191	Condition	"! strcmp ( optarg , ""all"" )"	41:12:524:546	7740099	0	True				
ANR	7740192	UnaryOperationExpression	"! strcmp ( optarg , ""all"" )"		7740099	0					
ANR	7740193	UnaryOperator	!		7740099	0					
ANR	7740194	CallExpression	"strcmp ( optarg , ""all"" )"		7740099	1					
ANR	7740195	Callee	strcmp		7740099	0					
ANR	7740196	Identifier	strcmp		7740099	0					
ANR	7740197	ArgumentList	optarg		7740099	1					
ANR	7740198	Argument	optarg		7740099	0					
ANR	7740199	Identifier	optarg		7740099	0					
ANR	7740200	Argument	"""all"""		7740099	1					
ANR	7740201	PrimaryExpression	"""all"""		7740099	0					
ANR	7740202	CompoundStatement		39:37:499:499	7740099	1					
ANR	7740203	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740099	0					
ANR	7740204	ForInit	c = soundhw ;	43:17:569:580	7740099	0	True				
ANR	7740205	AssignmentExpression	c = soundhw		7740099	0		=			
ANR	7740206	Identifier	c		7740099	0					
ANR	7740207	Identifier	soundhw		7740099	1					
ANR	7740208	Condition	c -> name	43:30:582:588	7740099	1	True				
ANR	7740209	PtrMemberAccess	c -> name		7740099	0					
ANR	7740210	Identifier	c		7740099	0					
ANR	7740211	Identifier	name		7740099	1					
ANR	7740212	UnaryExpression	++ c	43:39:591:593	7740099	2	True				
ANR	7740213	IncDec	++		7740099	0					
ANR	7740214	Identifier	c		7740099	1					
ANR	7740215	CompoundStatement		41:44:546:546	7740099	3					
ANR	7740216	ExpressionStatement	c -> enabled = 1	45:16:615:629	7740099	0	True				
ANR	7740217	AssignmentExpression	c -> enabled = 1		7740099	0		=			
ANR	7740218	PtrMemberAccess	c -> enabled		7740099	0					
ANR	7740219	Identifier	c		7740099	0					
ANR	7740220	Identifier	enabled		7740099	1					
ANR	7740221	PrimaryExpression	1		7740099	1					
ANR	7740222	ReturnStatement	return ;	49:12:659:665	7740099	1	True				
ANR	7740223	ExpressionStatement	p = optarg	55:8:689:699	7740099	5	True				
ANR	7740224	AssignmentExpression	p = optarg		7740099	0		=			
ANR	7740225	Identifier	p		7740099	0					
ANR	7740226	Identifier	optarg		7740099	1					
ANR	7740227	WhileStatement	while ( * p )		7740099	6					
ANR	7740228	Condition	* p	57:15:717:718	7740099	0	True				
ANR	7740229	UnaryOperationExpression	* p		7740099	0					
ANR	7740230	UnaryOperator	*		7740099	0					
ANR	7740231	Identifier	p		7740099	1					
ANR	7740232	CompoundStatement		55:19:671:671	7740099	1					
ANR	7740233	ExpressionStatement	"e = strchr ( p , ',' )"	59:12:736:755	7740099	0	True				
ANR	7740234	AssignmentExpression	"e = strchr ( p , ',' )"		7740099	0		=			
ANR	7740235	Identifier	e		7740099	0					
ANR	7740236	CallExpression	"strchr ( p , ',' )"		7740099	1					
ANR	7740237	Callee	strchr		7740099	0					
ANR	7740238	Identifier	strchr		7740099	0					
ANR	7740239	ArgumentList	p		7740099	1					
ANR	7740240	Argument	p		7740099	0					
ANR	7740241	Identifier	p		7740099	0					
ANR	7740242	Argument	"','"		7740099	1					
ANR	7740243	PrimaryExpression	"','"		7740099	0					
ANR	7740244	ExpressionStatement	l = ! e ? strlen ( p ) : ( size_t ) ( e - p )	61:12:770:808	7740099	1	True				
ANR	7740245	AssignmentExpression	l = ! e ? strlen ( p ) : ( size_t ) ( e - p )		7740099	0		=			
ANR	7740246	Identifier	l		7740099	0					
ANR	7740247	ConditionalExpression	! e ? strlen ( p ) : ( size_t ) ( e - p )		7740099	1					
ANR	7740248	Condition	! e		7740099	0					
ANR	7740249	UnaryOperationExpression	! e		7740099	0					
ANR	7740250	UnaryOperator	!		7740099	0					
ANR	7740251	Identifier	e		7740099	1					
ANR	7740252	CallExpression	strlen ( p )		7740099	1					
ANR	7740253	Callee	strlen		7740099	0					
ANR	7740254	Identifier	strlen		7740099	0					
ANR	7740255	ArgumentList	p		7740099	1					
ANR	7740256	Argument	p		7740099	0					
ANR	7740257	Identifier	p		7740099	0					
ANR	7740258	CastExpression	( size_t ) ( e - p )		7740099	2					
ANR	7740259	CastTarget	size_t		7740099	0					
ANR	7740260	AdditiveExpression	e - p		7740099	1		-			
ANR	7740261	Identifier	e		7740099	0					
ANR	7740262	Identifier	p		7740099	1					
ANR	7740263	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740099	2					
ANR	7740264	ForInit	c = soundhw ;	65:17:830:841	7740099	0	True				
ANR	7740265	AssignmentExpression	c = soundhw		7740099	0		=			
ANR	7740266	Identifier	c		7740099	0					
ANR	7740267	Identifier	soundhw		7740099	1					
ANR	7740268	Condition	c -> name	65:30:843:849	7740099	1	True				
ANR	7740269	PtrMemberAccess	c -> name		7740099	0					
ANR	7740270	Identifier	c		7740099	0					
ANR	7740271	Identifier	name		7740099	1					
ANR	7740272	UnaryExpression	++ c	65:39:852:854	7740099	2	True				
ANR	7740273	IncDec	++		7740099	0					
ANR	7740274	Identifier	c		7740099	1					
ANR	7740275	CompoundStatement		63:44:807:807	7740099	3					
ANR	7740276	IfStatement	"if ( ! strncmp ( c -> name , p , l ) && ! c -> name [ l ] )"		7740099	0					
ANR	7740277	Condition	"! strncmp ( c -> name , p , l ) && ! c -> name [ l ]"	67:20:880:918	7740099	0	True				
ANR	7740278	AndExpression	"! strncmp ( c -> name , p , l ) && ! c -> name [ l ]"		7740099	0		&&			
ANR	7740279	UnaryOperationExpression	"! strncmp ( c -> name , p , l )"		7740099	0					
ANR	7740280	UnaryOperator	!		7740099	0					
ANR	7740281	CallExpression	"strncmp ( c -> name , p , l )"		7740099	1					
ANR	7740282	Callee	strncmp		7740099	0					
ANR	7740283	Identifier	strncmp		7740099	0					
ANR	7740284	ArgumentList	c -> name		7740099	1					
ANR	7740285	Argument	c -> name		7740099	0					
ANR	7740286	PtrMemberAccess	c -> name		7740099	0					
ANR	7740287	Identifier	c		7740099	0					
ANR	7740288	Identifier	name		7740099	1					
ANR	7740289	Argument	p		7740099	1					
ANR	7740290	Identifier	p		7740099	0					
ANR	7740291	Argument	l		7740099	2					
ANR	7740292	Identifier	l		7740099	0					
ANR	7740293	UnaryOperationExpression	! c -> name [ l ]		7740099	1					
ANR	7740294	UnaryOperator	!		7740099	0					
ANR	7740295	ArrayIndexing	c -> name [ l ]		7740099	1					
ANR	7740296	PtrMemberAccess	c -> name		7740099	0					
ANR	7740297	Identifier	c		7740099	0					
ANR	7740298	Identifier	name		7740099	1					
ANR	7740299	Identifier	l		7740099	1					
ANR	7740300	CompoundStatement		65:61:871:871	7740099	1					
ANR	7740301	ExpressionStatement	c -> enabled = 1	69:20:944:958	7740099	0	True				
ANR	7740302	AssignmentExpression	c -> enabled = 1		7740099	0		=			
ANR	7740303	PtrMemberAccess	c -> enabled		7740099	0					
ANR	7740304	Identifier	c		7740099	0					
ANR	7740305	Identifier	enabled		7740099	1					
ANR	7740306	PrimaryExpression	1		7740099	1					
ANR	7740307	BreakStatement	break ;	71:20:981:986	7740099	1	True				
ANR	7740308	IfStatement	if ( ! c -> name )		7740099	3					
ANR	7740309	Condition	! c -> name	79:16:1041:1048	7740099	0	True				
ANR	7740310	UnaryOperationExpression	! c -> name		7740099	0					
ANR	7740311	UnaryOperator	!		7740099	0					
ANR	7740312	PtrMemberAccess	c -> name		7740099	1					
ANR	7740313	Identifier	c		7740099	0					
ANR	7740314	Identifier	name		7740099	1					
ANR	7740315	CompoundStatement		77:26:1001:1001	7740099	1					
ANR	7740316	IfStatement	if ( l > 80 )		7740099	0					
ANR	7740317	Condition	l > 80	81:20:1074:1079	7740099	0	True				
ANR	7740318	RelationalExpression	l > 80		7740099	0		>			
ANR	7740319	Identifier	l		7740099	0					
ANR	7740320	PrimaryExpression	80		7740099	1					
ANR	7740321	CompoundStatement		79:28:1032:1032	7740099	1					
ANR	7740322	ExpressionStatement	"fprintf ( stderr , ""Unknown sound card name (too big to show)\\n"" )"	83:20:1105:1198	7740099	0	True				
ANR	7740323	CallExpression	"fprintf ( stderr , ""Unknown sound card name (too big to show)\\n"" )"		7740099	0					
ANR	7740324	Callee	fprintf		7740099	0					
ANR	7740325	Identifier	fprintf		7740099	0					
ANR	7740326	ArgumentList	stderr		7740099	1					
ANR	7740327	Argument	stderr		7740099	0					
ANR	7740328	Identifier	stderr		7740099	0					
ANR	7740329	Argument	"""Unknown sound card name (too big to show)\\n"""		7740099	1					
ANR	7740330	PrimaryExpression	"""Unknown sound card name (too big to show)\\n"""		7740099	0					
ANR	7740331	ElseStatement	else		7740099	0					
ANR	7740332	CompoundStatement		87:21:1191:1191	7740099	0					
ANR	7740333	ExpressionStatement	"fprintf ( stderr , ""Unknown sound card name `%.*s'\\n"" , ( int ) l , p )"	91:20:1264:1358	7740099	0	True				
ANR	7740334	CallExpression	"fprintf ( stderr , ""Unknown sound card name `%.*s'\\n"" , ( int ) l , p )"		7740099	0					
ANR	7740335	Callee	fprintf		7740099	0					
ANR	7740336	Identifier	fprintf		7740099	0					
ANR	7740337	ArgumentList	stderr		7740099	1					
ANR	7740338	Argument	stderr		7740099	0					
ANR	7740339	Identifier	stderr		7740099	0					
ANR	7740340	Argument	"""Unknown sound card name `%.*s'\\n"""		7740099	1					
ANR	7740341	PrimaryExpression	"""Unknown sound card name `%.*s'\\n"""		7740099	0					
ANR	7740342	Argument	( int ) l		7740099	2					
ANR	7740343	CastExpression	( int ) l		7740099	0					
ANR	7740344	CastTarget	int		7740099	0					
ANR	7740345	Identifier	l		7740099	1					
ANR	7740346	Argument	p		7740099	3					
ANR	7740347	Identifier	p		7740099	0					
ANR	7740348	ExpressionStatement	bad_card = 1	97:16:1396:1408	7740099	1	True				
ANR	7740349	AssignmentExpression	bad_card = 1		7740099	0		=			
ANR	7740350	Identifier	bad_card		7740099	0					
ANR	7740351	PrimaryExpression	1		7740099	1					
ANR	7740352	ExpressionStatement	p += l + ( e != NULL )	101:12:1438:1458	7740099	4	True				
ANR	7740353	AssignmentExpression	p += l + ( e != NULL )		7740099	0		+=			
ANR	7740354	Identifier	p		7740099	0					
ANR	7740355	AdditiveExpression	l + ( e != NULL )		7740099	1		+			
ANR	7740356	Identifier	l		7740099	0					
ANR	7740357	EqualityExpression	e != NULL		7740099	1		!=			
ANR	7740358	Identifier	e		7740099	0					
ANR	7740359	Identifier	NULL		7740099	1					
ANR	7740360	IfStatement	if ( bad_card )		7740099	7					
ANR	7740361	Condition	bad_card	107:12:1486:1493	7740099	0	True				
ANR	7740362	Identifier	bad_card		7740099	0					
ANR	7740363	GotoStatement	goto show_valid_cards ;	109:12:1509:1530	7740099	1	True				
ANR	7740364	Identifier	show_valid_cards		7740099	0					
ANR	7740365	ReturnType	static void		7740099	1					
ANR	7740366	Identifier	select_soundhw		7740099	2					
ANR	7740367	ParameterList	const char * optarg		7740099	3					
ANR	7740368	Parameter	const char * optarg	1:28:28:45	7740099	0	True				
ANR	7740369	ParameterType	const char *		7740099	0					
ANR	7740370	Identifier	optarg		7740099	1					
ANR	7740371	CFGEntryNode	ENTRY		7740099		True				
ANR	7740372	CFGExitNode	EXIT		7740099		True				
ANR	7740373	Symbol	strcmp		7740099						
ANR	7740374	Symbol	c		7740099						
ANR	7740375	Symbol	NULL		7740099						
ANR	7740376	Symbol	soundhw		7740099						
ANR	7740377	Symbol	e		7740099						
ANR	7740378	Symbol	* * c		7740099						
ANR	7740379	Symbol	optarg		7740099						
ANR	7740380	Symbol	strchr		7740099						
ANR	7740381	Symbol	c -> name		7740099						
ANR	7740382	Symbol	l		7740099						
ANR	7740383	Symbol	* c -> name		7740099						
ANR	7740384	Symbol	stderr		7740099						
ANR	7740385	Symbol	* c		7740099						
ANR	7740386	Symbol	p		7740099						
ANR	7740387	Symbol	strlen		7740099						
ANR	7740388	Symbol	strncmp		7740099						
ANR	7740389	Symbol	c -> enabled		7740099						
ANR	7740390	Symbol	* l		7740099						
ANR	7740391	Symbol	bad_card		7740099						
ANR	7740392	Symbol	c -> descr		7740099						
ANR	7740393	Symbol	* optarg		7740099						
ANR	7740394	Symbol	* p		7740099						
