command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5168146	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lag_decode_zero_run_line_01_1.c								
ANR	5168147	Function	lag_decode_zero_run_line	1:0:0:1571							
ANR	5168148	FunctionDef	"lag_decode_zero_run_line (LagarithContext * l , uint8_t * dst , const uint8_t * src , const uint8_t * src_end , int width , int esc_count)"		5168147	0					
ANR	5168149	CompoundStatement		7:0:215:1571	5168147	0					
ANR	5168150	IdentifierDeclStatement	int i = 0 ;	9:4:222:231	5168147	0	True				
ANR	5168151	IdentifierDecl	i = 0		5168147	0					
ANR	5168152	IdentifierDeclType	int		5168147	0					
ANR	5168153	Identifier	i		5168147	1					
ANR	5168154	AssignmentExpression	i = 0		5168147	2		=			
ANR	5168155	Identifier	i		5168147	0					
ANR	5168156	PrimaryExpression	0		5168147	1					
ANR	5168157	IdentifierDeclStatement	int count ;	11:4:238:247	5168147	1	True				
ANR	5168158	IdentifierDecl	count		5168147	0					
ANR	5168159	IdentifierDeclType	int		5168147	0					
ANR	5168160	Identifier	count		5168147	1					
ANR	5168161	IdentifierDeclStatement	uint8_t zero_run = 0 ;	13:4:254:274	5168147	2	True				
ANR	5168162	IdentifierDecl	zero_run = 0		5168147	0					
ANR	5168163	IdentifierDeclType	uint8_t		5168147	0					
ANR	5168164	Identifier	zero_run		5168147	1					
ANR	5168165	AssignmentExpression	zero_run = 0		5168147	2		=			
ANR	5168166	Identifier	zero_run		5168147	0					
ANR	5168167	PrimaryExpression	0		5168147	1					
ANR	5168168	IdentifierDeclStatement	const uint8_t * src_start = src ;	15:4:281:311	5168147	3	True				
ANR	5168169	IdentifierDecl	* src_start = src		5168147	0					
ANR	5168170	IdentifierDeclType	const uint8_t *		5168147	0					
ANR	5168171	Identifier	src_start		5168147	1					
ANR	5168172	AssignmentExpression	* src_start = src		5168147	2		=			
ANR	5168173	Identifier	src		5168147	0					
ANR	5168174	Identifier	src		5168147	1					
ANR	5168175	IdentifierDeclStatement	uint8_t mask1 = - ( esc_count < 2 ) ;	17:4:318:350	5168147	4	True				
ANR	5168176	IdentifierDecl	mask1 = - ( esc_count < 2 )		5168147	0					
ANR	5168177	IdentifierDeclType	uint8_t		5168147	0					
ANR	5168178	Identifier	mask1		5168147	1					
ANR	5168179	AssignmentExpression	mask1 = - ( esc_count < 2 )		5168147	2		=			
ANR	5168180	Identifier	mask1		5168147	0					
ANR	5168181	UnaryOperationExpression	- ( esc_count < 2 )		5168147	1					
ANR	5168182	UnaryOperator	-		5168147	0					
ANR	5168183	RelationalExpression	esc_count < 2		5168147	1		<			
ANR	5168184	Identifier	esc_count		5168147	0					
ANR	5168185	PrimaryExpression	2		5168147	1					
ANR	5168186	IdentifierDeclStatement	uint8_t mask2 = - ( esc_count < 3 ) ;	19:4:357:389	5168147	5	True				
ANR	5168187	IdentifierDecl	mask2 = - ( esc_count < 3 )		5168147	0					
ANR	5168188	IdentifierDeclType	uint8_t		5168147	0					
ANR	5168189	Identifier	mask2		5168147	1					
ANR	5168190	AssignmentExpression	mask2 = - ( esc_count < 3 )		5168147	2		=			
ANR	5168191	Identifier	mask2		5168147	0					
ANR	5168192	UnaryOperationExpression	- ( esc_count < 3 )		5168147	1					
ANR	5168193	UnaryOperator	-		5168147	0					
ANR	5168194	RelationalExpression	esc_count < 3		5168147	1		<			
ANR	5168195	Identifier	esc_count		5168147	0					
ANR	5168196	PrimaryExpression	3		5168147	1					
ANR	5168197	IdentifierDeclStatement	uint8_t * end = dst + ( width - 2 ) ;	21:4:396:428	5168147	6	True				
ANR	5168198	IdentifierDecl	* end = dst + ( width - 2 )		5168147	0					
ANR	5168199	IdentifierDeclType	uint8_t *		5168147	0					
ANR	5168200	Identifier	end		5168147	1					
ANR	5168201	AssignmentExpression	* end = dst + ( width - 2 )		5168147	2		=			
ANR	5168202	Identifier	end		5168147	0					
ANR	5168203	AdditiveExpression	dst + ( width - 2 )		5168147	1		+			
ANR	5168204	Identifier	dst		5168147	0					
ANR	5168205	AdditiveExpression	width - 2		5168147	1		-			
ANR	5168206	Identifier	width		5168147	0					
ANR	5168207	PrimaryExpression	2		5168147	1					
ANR	5168208	ExpressionStatement	"avpriv_request_sample ( l -> avctx , ""zero_run_line"" )"	25:4:437:485	5168147	7	True				
ANR	5168209	CallExpression	"avpriv_request_sample ( l -> avctx , ""zero_run_line"" )"		5168147	0					
ANR	5168210	Callee	avpriv_request_sample		5168147	0					
ANR	5168211	Identifier	avpriv_request_sample		5168147	0					
ANR	5168212	ArgumentList	l -> avctx		5168147	1					
ANR	5168213	Argument	l -> avctx		5168147	0					
ANR	5168214	PtrMemberAccess	l -> avctx		5168147	0					
ANR	5168215	Identifier	l		5168147	0					
ANR	5168216	Identifier	avctx		5168147	1					
ANR	5168217	Argument	"""zero_run_line"""		5168147	1					
ANR	5168218	PrimaryExpression	"""zero_run_line"""		5168147	0					
ANR	5168219	ReturnStatement	return AVERROR_PATCHWELCOME ;	27:4:492:519	5168147	8	True				
ANR	5168220	Identifier	AVERROR_PATCHWELCOME		5168147	0					
ANR	5168221	Label	output_zeros :	31:0:524:536	5168147	9	True				
ANR	5168222	Identifier	output_zeros		5168147	0					
ANR	5168223	IfStatement	if ( l -> zeros_rem )		5168147	10					
ANR	5168224	Condition	l -> zeros_rem	33:8:547:558	5168147	0	True				
ANR	5168225	PtrMemberAccess	l -> zeros_rem		5168147	0					
ANR	5168226	Identifier	l		5168147	0					
ANR	5168227	Identifier	zeros_rem		5168147	1					
ANR	5168228	CompoundStatement		27:22:345:345	5168147	1					
ANR	5168229	ExpressionStatement	"count = FFMIN ( l -> zeros_rem , width - i )"	35:8:572:610	5168147	0	True				
ANR	5168230	AssignmentExpression	"count = FFMIN ( l -> zeros_rem , width - i )"		5168147	0		=			
ANR	5168231	Identifier	count		5168147	0					
ANR	5168232	CallExpression	"FFMIN ( l -> zeros_rem , width - i )"		5168147	1					
ANR	5168233	Callee	FFMIN		5168147	0					
ANR	5168234	Identifier	FFMIN		5168147	0					
ANR	5168235	ArgumentList	l -> zeros_rem		5168147	1					
ANR	5168236	Argument	l -> zeros_rem		5168147	0					
ANR	5168237	PtrMemberAccess	l -> zeros_rem		5168147	0					
ANR	5168238	Identifier	l		5168147	0					
ANR	5168239	Identifier	zeros_rem		5168147	1					
ANR	5168240	Argument	width - i		5168147	1					
ANR	5168241	AdditiveExpression	width - i		5168147	0		-			
ANR	5168242	Identifier	width		5168147	0					
ANR	5168243	Identifier	i		5168147	1					
ANR	5168244	IfStatement	if ( end - dst < count )		5168147	1					
ANR	5168245	Condition	end - dst < count	37:12:625:641	5168147	0	True				
ANR	5168246	RelationalExpression	end - dst < count		5168147	0		<			
ANR	5168247	AdditiveExpression	end - dst		5168147	0		-			
ANR	5168248	Identifier	end		5168147	0					
ANR	5168249	Identifier	dst		5168147	1					
ANR	5168250	Identifier	count		5168147	1					
ANR	5168251	CompoundStatement		31:31:428:428	5168147	1					
ANR	5168252	ExpressionStatement	"av_log ( l -> avctx , AV_LOG_ERROR , ""Too many zeros remaining.\\n"" )"	39:12:659:720	5168147	0	True				
ANR	5168253	CallExpression	"av_log ( l -> avctx , AV_LOG_ERROR , ""Too many zeros remaining.\\n"" )"		5168147	0					
ANR	5168254	Callee	av_log		5168147	0					
ANR	5168255	Identifier	av_log		5168147	0					
ANR	5168256	ArgumentList	l -> avctx		5168147	1					
ANR	5168257	Argument	l -> avctx		5168147	0					
ANR	5168258	PtrMemberAccess	l -> avctx		5168147	0					
ANR	5168259	Identifier	l		5168147	0					
ANR	5168260	Identifier	avctx		5168147	1					
ANR	5168261	Argument	AV_LOG_ERROR		5168147	1					
ANR	5168262	Identifier	AV_LOG_ERROR		5168147	0					
ANR	5168263	Argument	"""Too many zeros remaining.\\n"""		5168147	2					
ANR	5168264	PrimaryExpression	"""Too many zeros remaining.\\n"""		5168147	0					
ANR	5168265	ReturnStatement	return AVERROR_INVALIDDATA ;	41:12:735:761	5168147	1	True				
ANR	5168266	Identifier	AVERROR_INVALIDDATA		5168147	0					
ANR	5168267	ExpressionStatement	"memset ( dst , 0 , count )"	47:8:785:806	5168147	2	True				
ANR	5168268	CallExpression	"memset ( dst , 0 , count )"		5168147	0					
ANR	5168269	Callee	memset		5168147	0					
ANR	5168270	Identifier	memset		5168147	0					
ANR	5168271	ArgumentList	dst		5168147	1					
ANR	5168272	Argument	dst		5168147	0					
ANR	5168273	Identifier	dst		5168147	0					
ANR	5168274	Argument	0		5168147	1					
ANR	5168275	PrimaryExpression	0		5168147	0					
ANR	5168276	Argument	count		5168147	2					
ANR	5168277	Identifier	count		5168147	0					
ANR	5168278	ExpressionStatement	l -> zeros_rem -= count	49:8:817:838	5168147	3	True				
ANR	5168279	AssignmentExpression	l -> zeros_rem -= count		5168147	0		-=			
ANR	5168280	PtrMemberAccess	l -> zeros_rem		5168147	0					
ANR	5168281	Identifier	l		5168147	0					
ANR	5168282	Identifier	zeros_rem		5168147	1					
ANR	5168283	Identifier	count		5168147	1					
ANR	5168284	ExpressionStatement	dst += count	51:8:849:861	5168147	4	True				
ANR	5168285	AssignmentExpression	dst += count		5168147	0		+=			
ANR	5168286	Identifier	dst		5168147	0					
ANR	5168287	Identifier	count		5168147	1					
ANR	5168288	WhileStatement	while ( dst < end )		5168147	11					
ANR	5168289	Condition	dst < end	57:11:884:892	5168147	0	True				
ANR	5168290	RelationalExpression	dst < end		5168147	0		<			
ANR	5168291	Identifier	dst		5168147	0					
ANR	5168292	Identifier	end		5168147	1					
ANR	5168293	CompoundStatement		51:22:679:679	5168147	1					
ANR	5168294	ExpressionStatement	i = 0	59:8:906:911	5168147	0	True				
ANR	5168295	AssignmentExpression	i = 0		5168147	0		=			
ANR	5168296	Identifier	i		5168147	0					
ANR	5168297	PrimaryExpression	0		5168147	1					
ANR	5168298	WhileStatement	while ( ! zero_run && dst + i < end )		5168147	1					
ANR	5168299	Condition	! zero_run && dst + i < end	61:15:929:954	5168147	0	True				
ANR	5168300	AndExpression	! zero_run && dst + i < end		5168147	0		&&			
ANR	5168301	UnaryOperationExpression	! zero_run		5168147	0					
ANR	5168302	UnaryOperator	!		5168147	0					
ANR	5168303	Identifier	zero_run		5168147	1					
ANR	5168304	RelationalExpression	dst + i < end		5168147	1		<			
ANR	5168305	AdditiveExpression	dst + i		5168147	0		+			
ANR	5168306	Identifier	dst		5168147	0					
ANR	5168307	Identifier	i		5168147	1					
ANR	5168308	Identifier	end		5168147	1					
ANR	5168309	CompoundStatement		55:43:741:741	5168147	1					
ANR	5168310	ExpressionStatement	i ++	63:12:972:975	5168147	0	True				
ANR	5168311	PostIncDecOperationExpression	i ++		5168147	0					
ANR	5168312	Identifier	i		5168147	0					
ANR	5168313	IncDec	++		5168147	1					
ANR	5168314	IfStatement	if ( i + 2 >= src_end - src )		5168147	1					
ANR	5168315	Condition	i + 2 >= src_end - src	65:16:994:1013	5168147	0	True				
ANR	5168316	RelationalExpression	i + 2 >= src_end - src		5168147	0		>=			
ANR	5168317	AdditiveExpression	i + 2		5168147	0		+			
ANR	5168318	Identifier	i		5168147	0					
ANR	5168319	PrimaryExpression	2		5168147	1					
ANR	5168320	AdditiveExpression	src_end - src		5168147	1		-			
ANR	5168321	Identifier	src_end		5168147	0					
ANR	5168322	Identifier	src		5168147	1					
ANR	5168323	ReturnStatement	return AVERROR_INVALIDDATA ;	67:16:1033:1059	5168147	1	True				
ANR	5168324	Identifier	AVERROR_INVALIDDATA		5168147	0					
ANR	5168325	ExpressionStatement	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )	69:12:1074:1157	5168147	2	True				
ANR	5168326	AssignmentExpression	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168147	0		=			
ANR	5168327	Identifier	zero_run		5168147	0					
ANR	5168328	UnaryOperationExpression	! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168147	1					
ANR	5168329	UnaryOperator	!		5168147	0					
ANR	5168330	InclusiveOrExpression	src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168147	1		|			
ANR	5168331	ArrayIndexing	src [ i ]		5168147	0					
ANR	5168332	Identifier	src		5168147	0					
ANR	5168333	Identifier	i		5168147	1					
ANR	5168334	InclusiveOrExpression	( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168147	1		|			
ANR	5168335	BitAndExpression	src [ i + 1 ] & mask1		5168147	0		&			
ANR	5168336	ArrayIndexing	src [ i + 1 ]		5168147	0					
ANR	5168337	Identifier	src		5168147	0					
ANR	5168338	AdditiveExpression	i + 1		5168147	1		+			
ANR	5168339	Identifier	i		5168147	0					
ANR	5168340	PrimaryExpression	1		5168147	1					
ANR	5168341	Identifier	mask1		5168147	1					
ANR	5168342	BitAndExpression	src [ i + 2 ] & mask2		5168147	1		&			
ANR	5168343	ArrayIndexing	src [ i + 2 ]		5168147	0					
ANR	5168344	Identifier	src		5168147	0					
ANR	5168345	AdditiveExpression	i + 2		5168147	1		+			
ANR	5168346	Identifier	i		5168147	0					
ANR	5168347	PrimaryExpression	2		5168147	1					
ANR	5168348	Identifier	mask2		5168147	1					
ANR	5168349	IfStatement	if ( zero_run )		5168147	2					
ANR	5168350	Condition	zero_run	75:12:1183:1190	5168147	0	True				
ANR	5168351	Identifier	zero_run		5168147	0					
ANR	5168352	CompoundStatement		69:22:977:977	5168147	1					
ANR	5168353	ExpressionStatement	zero_run = 0	77:12:1208:1220	5168147	0	True				
ANR	5168354	AssignmentExpression	zero_run = 0		5168147	0		=			
ANR	5168355	Identifier	zero_run		5168147	0					
ANR	5168356	PrimaryExpression	0		5168147	1					
ANR	5168357	ExpressionStatement	i += esc_count	79:12:1235:1249	5168147	1	True				
ANR	5168358	AssignmentExpression	i += esc_count		5168147	0		+=			
ANR	5168359	Identifier	i		5168147	0					
ANR	5168360	Identifier	esc_count		5168147	1					
ANR	5168361	ExpressionStatement	"memcpy ( dst , src , i )"	81:12:1264:1283	5168147	2	True				
ANR	5168362	CallExpression	"memcpy ( dst , src , i )"		5168147	0					
ANR	5168363	Callee	memcpy		5168147	0					
ANR	5168364	Identifier	memcpy		5168147	0					
ANR	5168365	ArgumentList	dst		5168147	1					
ANR	5168366	Argument	dst		5168147	0					
ANR	5168367	Identifier	dst		5168147	0					
ANR	5168368	Argument	src		5168147	1					
ANR	5168369	Identifier	src		5168147	0					
ANR	5168370	Argument	i		5168147	2					
ANR	5168371	Identifier	i		5168147	0					
ANR	5168372	ExpressionStatement	dst += i	83:12:1298:1306	5168147	3	True				
ANR	5168373	AssignmentExpression	dst += i		5168147	0		+=			
ANR	5168374	Identifier	dst		5168147	0					
ANR	5168375	Identifier	i		5168147	1					
ANR	5168376	ExpressionStatement	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )	85:12:1321:1361	5168147	4	True				
ANR	5168377	AssignmentExpression	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )		5168147	0		=			
ANR	5168378	PtrMemberAccess	l -> zeros_rem		5168147	0					
ANR	5168379	Identifier	l		5168147	0					
ANR	5168380	Identifier	zeros_rem		5168147	1					
ANR	5168381	CallExpression	lag_calc_zero_run ( src [ i ] )		5168147	1					
ANR	5168382	Callee	lag_calc_zero_run		5168147	0					
ANR	5168383	Identifier	lag_calc_zero_run		5168147	0					
ANR	5168384	ArgumentList	src [ i ]		5168147	1					
ANR	5168385	Argument	src [ i ]		5168147	0					
ANR	5168386	ArrayIndexing	src [ i ]		5168147	0					
ANR	5168387	Identifier	src		5168147	0					
ANR	5168388	Identifier	i		5168147	1					
ANR	5168389	ExpressionStatement	src += i + 1	89:12:1378:1390	5168147	5	True				
ANR	5168390	AssignmentExpression	src += i + 1		5168147	0		+=			
ANR	5168391	Identifier	src		5168147	0					
ANR	5168392	AdditiveExpression	i + 1		5168147	1		+			
ANR	5168393	Identifier	i		5168147	0					
ANR	5168394	PrimaryExpression	1		5168147	1					
ANR	5168395	GotoStatement	goto output_zeros ;	91:12:1405:1422	5168147	6	True				
ANR	5168396	Identifier	output_zeros		5168147	0					
ANR	5168397	ElseStatement	else		5168147	0					
ANR	5168398	CompoundStatement		87:15:1224:1224	5168147	0					
ANR	5168399	ExpressionStatement	"memcpy ( dst , src , i )"	95:12:1455:1474	5168147	0	True				
ANR	5168400	CallExpression	"memcpy ( dst , src , i )"		5168147	0					
ANR	5168401	Callee	memcpy		5168147	0					
ANR	5168402	Identifier	memcpy		5168147	0					
ANR	5168403	ArgumentList	dst		5168147	1					
ANR	5168404	Argument	dst		5168147	0					
ANR	5168405	Identifier	dst		5168147	0					
ANR	5168406	Argument	src		5168147	1					
ANR	5168407	Identifier	src		5168147	0					
ANR	5168408	Argument	i		5168147	2					
ANR	5168409	Identifier	i		5168147	0					
ANR	5168410	ExpressionStatement	src += i	97:12:1489:1497	5168147	1	True				
ANR	5168411	AssignmentExpression	src += i		5168147	0		+=			
ANR	5168412	Identifier	src		5168147	0					
ANR	5168413	Identifier	i		5168147	1					
ANR	5168414	ExpressionStatement	dst += i	99:12:1512:1520	5168147	2	True				
ANR	5168415	AssignmentExpression	dst += i		5168147	0		+=			
ANR	5168416	Identifier	dst		5168147	0					
ANR	5168417	Identifier	i		5168147	1					
ANR	5168418	ReturnStatement	return src - src_start ;	105:4:1545:1568	5168147	12	True				
ANR	5168419	AdditiveExpression	src - src_start		5168147	0		-			
ANR	5168420	Identifier	src		5168147	0					
ANR	5168421	Identifier	src_start		5168147	1					
ANR	5168422	ReturnType	static int		5168147	1					
ANR	5168423	Identifier	lag_decode_zero_run_line		5168147	2					
ANR	5168424	ParameterList	"LagarithContext * l , uint8_t * dst , const uint8_t * src , const uint8_t * src_end , int width , int esc_count"		5168147	3					
ANR	5168425	Parameter	LagarithContext * l	1:36:36:53	5168147	0	True				
ANR	5168426	ParameterType	LagarithContext *		5168147	0					
ANR	5168427	Identifier	l		5168147	1					
ANR	5168428	Parameter	uint8_t * dst	1:56:56:67	5168147	1	True				
ANR	5168429	ParameterType	uint8_t *		5168147	0					
ANR	5168430	Identifier	dst		5168147	1					
ANR	5168431	Parameter	const uint8_t * src	3:36:107:124	5168147	2	True				
ANR	5168432	ParameterType	const uint8_t *		5168147	0					
ANR	5168433	Identifier	src		5168147	1					
ANR	5168434	Parameter	const uint8_t * src_end	3:56:127:148	5168147	3	True				
ANR	5168435	ParameterType	const uint8_t *		5168147	0					
ANR	5168436	Identifier	src_end		5168147	1					
ANR	5168437	Parameter	int width	5:36:188:196	5168147	4	True				
ANR	5168438	ParameterType	int		5168147	0					
ANR	5168439	Identifier	width		5168147	1					
ANR	5168440	Parameter	int esc_count	5:47:199:211	5168147	5	True				
ANR	5168441	ParameterType	int		5168147	0					
ANR	5168442	Identifier	esc_count		5168147	1					
ANR	5168443	CFGEntryNode	ENTRY		5168147		True				
ANR	5168444	CFGExitNode	EXIT		5168147		True				
ANR	5168445	Symbol	zero_run		5168147						
ANR	5168446	Symbol	dst		5168147						
ANR	5168447	Symbol	AV_LOG_ERROR		5168147						
ANR	5168448	Symbol	src		5168147						
ANR	5168449	Symbol	count		5168147						
ANR	5168450	Symbol	mask1		5168147						
ANR	5168451	Symbol	i		5168147						
ANR	5168452	Symbol	l -> zeros_rem		5168147						
ANR	5168453	Symbol	FFMIN		5168147						
ANR	5168454	Symbol	mask2		5168147						
ANR	5168455	Symbol	l		5168147						
ANR	5168456	Symbol	lag_calc_zero_run		5168147						
ANR	5168457	Symbol	* src		5168147						
ANR	5168458	Symbol	* i		5168147						
ANR	5168459	Symbol	src_end		5168147						
ANR	5168460	Symbol	src_start		5168147						
ANR	5168461	Symbol	esc_count		5168147						
ANR	5168462	Symbol	* l		5168147						
ANR	5168463	Symbol	width		5168147						
ANR	5168464	Symbol	AVERROR_PATCHWELCOME		5168147						
ANR	5168465	Symbol	end		5168147						
ANR	5168466	Symbol	AVERROR_INVALIDDATA		5168147						
ANR	5168467	Symbol	l -> avctx		5168147						
