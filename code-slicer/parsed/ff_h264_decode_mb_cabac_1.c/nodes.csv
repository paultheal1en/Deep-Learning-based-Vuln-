command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3344041	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_decode_mb_cabac_1.c								
ANR	3344042	Function	ff_h264_decode_mb_cabac	1:0:0:24970							
ANR	3344043	FunctionDef	ff_h264_decode_mb_cabac (H264Context * h)		3344042	0					
ANR	3344044	CompoundStatement		1:44:44:24970	3344042	0					
ANR	3344045	Statement	MpegEncContext	3:4:51:64	3344042	0	True				
ANR	3344046	Statement	*	3:19:66:66	3344042	1	True				
ANR	3344047	Statement	const	3:21:68:72	3344042	2	True				
ANR	3344048	ExpressionStatement	s = & h -> s	3:27:74:83	3344042	3	True				
ANR	3344049	AssignmentExpression	s = & h -> s		3344042	0		=			
ANR	3344050	Identifier	s		3344042	0					
ANR	3344051	UnaryOperationExpression	& h -> s		3344042	1					
ANR	3344052	UnaryOperator	&		3344042	0					
ANR	3344053	PtrMemberAccess	h -> s		3344042	1					
ANR	3344054	Identifier	h		3344042	0					
ANR	3344055	Identifier	s		3344042	1					
ANR	3344056	IdentifierDeclStatement	int mb_xy ;	5:4:90:99	3344042	4	True				
ANR	3344057	IdentifierDecl	mb_xy		3344042	0					
ANR	3344058	IdentifierDeclType	int		3344042	0					
ANR	3344059	Identifier	mb_xy		3344042	1					
ANR	3344060	IdentifierDeclStatement	"int mb_type , partition_count , cbp = 0 ;"	7:4:106:143	3344042	5	True				
ANR	3344061	IdentifierDecl	mb_type		3344042	0					
ANR	3344062	IdentifierDeclType	int		3344042	0					
ANR	3344063	Identifier	mb_type		3344042	1					
ANR	3344064	IdentifierDecl	partition_count		3344042	1					
ANR	3344065	IdentifierDeclType	int		3344042	0					
ANR	3344066	Identifier	partition_count		3344042	1					
ANR	3344067	IdentifierDecl	cbp = 0		3344042	2					
ANR	3344068	IdentifierDeclType	int		3344042	0					
ANR	3344069	Identifier	cbp		3344042	1					
ANR	3344070	AssignmentExpression	cbp = 0		3344042	2		=			
ANR	3344071	Identifier	cbp		3344042	0					
ANR	3344072	PrimaryExpression	0		3344042	1					
ANR	3344073	IdentifierDeclStatement	int dct8x8_allowed = h -> pps . transform_8x8_mode ;	9:4:150:195	3344042	6	True				
ANR	3344074	IdentifierDecl	dct8x8_allowed = h -> pps . transform_8x8_mode		3344042	0					
ANR	3344075	IdentifierDeclType	int		3344042	0					
ANR	3344076	Identifier	dct8x8_allowed		3344042	1					
ANR	3344077	AssignmentExpression	dct8x8_allowed = h -> pps . transform_8x8_mode		3344042	2		=			
ANR	3344078	Identifier	dct8x8_allowed		3344042	0					
ANR	3344079	MemberAccess	h -> pps . transform_8x8_mode		3344042	1					
ANR	3344080	PtrMemberAccess	h -> pps		3344042	0					
ANR	3344081	Identifier	h		3344042	0					
ANR	3344082	Identifier	pps		3344042	1					
ANR	3344083	Identifier	transform_8x8_mode		3344042	1					
ANR	3344084	IdentifierDeclStatement	int decode_chroma = h -> sps . chroma_format_idc == 1 || h -> sps . chroma_format_idc == 2 ;	11:4:202:284	3344042	7	True				
ANR	3344085	IdentifierDecl	decode_chroma = h -> sps . chroma_format_idc == 1 || h -> sps . chroma_format_idc == 2		3344042	0					
ANR	3344086	IdentifierDeclType	int		3344042	0					
ANR	3344087	Identifier	decode_chroma		3344042	1					
ANR	3344088	AssignmentExpression	decode_chroma = h -> sps . chroma_format_idc == 1 || h -> sps . chroma_format_idc == 2		3344042	2		=			
ANR	3344089	Identifier	decode_chroma		3344042	0					
ANR	3344090	OrExpression	h -> sps . chroma_format_idc == 1 || h -> sps . chroma_format_idc == 2		3344042	1		||			
ANR	3344091	EqualityExpression	h -> sps . chroma_format_idc == 1		3344042	0		==			
ANR	3344092	MemberAccess	h -> sps . chroma_format_idc		3344042	0					
ANR	3344093	PtrMemberAccess	h -> sps		3344042	0					
ANR	3344094	Identifier	h		3344042	0					
ANR	3344095	Identifier	sps		3344042	1					
ANR	3344096	Identifier	chroma_format_idc		3344042	1					
ANR	3344097	PrimaryExpression	1		3344042	1					
ANR	3344098	EqualityExpression	h -> sps . chroma_format_idc == 2		3344042	1		==			
ANR	3344099	MemberAccess	h -> sps . chroma_format_idc		3344042	0					
ANR	3344100	PtrMemberAccess	h -> sps		3344042	0					
ANR	3344101	Identifier	h		3344042	0					
ANR	3344102	Identifier	sps		3344042	1					
ANR	3344103	Identifier	chroma_format_idc		3344042	1					
ANR	3344104	PrimaryExpression	2		3344042	1					
ANR	3344105	IdentifierDeclStatement	const int pixel_shift = h -> pixel_shift ;	13:4:291:329	3344042	8	True				
ANR	3344106	IdentifierDecl	pixel_shift = h -> pixel_shift		3344042	0					
ANR	3344107	IdentifierDeclType	const int		3344042	0					
ANR	3344108	Identifier	pixel_shift		3344042	1					
ANR	3344109	AssignmentExpression	pixel_shift = h -> pixel_shift		3344042	2		=			
ANR	3344110	Identifier	pixel_shift		3344042	0					
ANR	3344111	PtrMemberAccess	h -> pixel_shift		3344042	1					
ANR	3344112	Identifier	h		3344042	0					
ANR	3344113	Identifier	pixel_shift		3344042	1					
ANR	3344114	ExpressionStatement	mb_xy = h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride	17:4:338:387	3344042	9	True				
ANR	3344115	AssignmentExpression	mb_xy = h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride		3344042	0		=			
ANR	3344116	Identifier	mb_xy		3344042	0					
ANR	3344117	AssignmentExpression	h -> mb_xy = s -> mb_x + s -> mb_y * s -> mb_stride		3344042	1		=			
ANR	3344118	PtrMemberAccess	h -> mb_xy		3344042	0					
ANR	3344119	Identifier	h		3344042	0					
ANR	3344120	Identifier	mb_xy		3344042	1					
ANR	3344121	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		3344042	1		+			
ANR	3344122	PtrMemberAccess	s -> mb_x		3344042	0					
ANR	3344123	Identifier	s		3344042	0					
ANR	3344124	Identifier	mb_x		3344042	1					
ANR	3344125	MultiplicativeExpression	s -> mb_y * s -> mb_stride		3344042	1		*			
ANR	3344126	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344127	Identifier	s		3344042	0					
ANR	3344128	Identifier	mb_y		3344042	1					
ANR	3344129	PtrMemberAccess	s -> mb_stride		3344042	1					
ANR	3344130	Identifier	s		3344042	0					
ANR	3344131	Identifier	mb_stride		3344042	1					
ANR	3344132	ExpressionStatement	"tprintf ( s -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> frame_num , s -> mb_x , s -> mb_y )"	21:4:396:466	3344042	10	True				
ANR	3344133	CallExpression	"tprintf ( s -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> frame_num , s -> mb_x , s -> mb_y )"		3344042	0					
ANR	3344134	Callee	tprintf		3344042	0					
ANR	3344135	Identifier	tprintf		3344042	0					
ANR	3344136	ArgumentList	s -> avctx		3344042	1					
ANR	3344137	Argument	s -> avctx		3344042	0					
ANR	3344138	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3344139	Identifier	s		3344042	0					
ANR	3344140	Identifier	avctx		3344042	1					
ANR	3344141	Argument	"""pic:%d mb:%d/%d\\n"""		3344042	1					
ANR	3344142	PrimaryExpression	"""pic:%d mb:%d/%d\\n"""		3344042	0					
ANR	3344143	Argument	h -> frame_num		3344042	2					
ANR	3344144	PtrMemberAccess	h -> frame_num		3344042	0					
ANR	3344145	Identifier	h		3344042	0					
ANR	3344146	Identifier	frame_num		3344042	1					
ANR	3344147	Argument	s -> mb_x		3344042	3					
ANR	3344148	PtrMemberAccess	s -> mb_x		3344042	0					
ANR	3344149	Identifier	s		3344042	0					
ANR	3344150	Identifier	mb_x		3344042	1					
ANR	3344151	Argument	s -> mb_y		3344042	4					
ANR	3344152	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344153	Identifier	s		3344042	0					
ANR	3344154	Identifier	mb_y		3344042	1					
ANR	3344155	IfStatement	if ( h -> slice_type_nos != AV_PICTURE_TYPE_I )		3344042	11					
ANR	3344156	Condition	h -> slice_type_nos != AV_PICTURE_TYPE_I	23:8:477:514	3344042	0	True				
ANR	3344157	EqualityExpression	h -> slice_type_nos != AV_PICTURE_TYPE_I		3344042	0		!=			
ANR	3344158	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3344159	Identifier	h		3344042	0					
ANR	3344160	Identifier	slice_type_nos		3344042	1					
ANR	3344161	Identifier	AV_PICTURE_TYPE_I		3344042	1					
ANR	3344162	CompoundStatement		25:8:484:492	3344042	1					
ANR	3344163	IdentifierDeclStatement	int skip ;	25:8:529:537	3344042	0	True				
ANR	3344164	IdentifierDecl	skip		3344042	0					
ANR	3344165	IdentifierDeclType	int		3344042	0					
ANR	3344166	Identifier	skip		3344042	1					
ANR	3344167	IfStatement	if ( FRAME_MBAFF && ( s -> mb_y & 1 ) == 1 && h -> prev_mb_skipped )		3344042	1					
ANR	3344168	Condition	FRAME_MBAFF && ( s -> mb_y & 1 ) == 1 && h -> prev_mb_skipped	29:12:621:671	3344042	0	True				
ANR	3344169	AndExpression	FRAME_MBAFF && ( s -> mb_y & 1 ) == 1 && h -> prev_mb_skipped		3344042	0		&&			
ANR	3344170	Identifier	FRAME_MBAFF		3344042	0					
ANR	3344171	AndExpression	( s -> mb_y & 1 ) == 1 && h -> prev_mb_skipped		3344042	1		&&			
ANR	3344172	EqualityExpression	( s -> mb_y & 1 ) == 1		3344042	0		==			
ANR	3344173	BitAndExpression	s -> mb_y & 1		3344042	0		&			
ANR	3344174	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344175	Identifier	s		3344042	0					
ANR	3344176	Identifier	mb_y		3344042	1					
ANR	3344177	PrimaryExpression	1		3344042	1					
ANR	3344178	PrimaryExpression	1		3344042	1					
ANR	3344179	PtrMemberAccess	h -> prev_mb_skipped		3344042	1					
ANR	3344180	Identifier	h		3344042	0					
ANR	3344181	Identifier	prev_mb_skipped		3344042	1					
ANR	3344182	ExpressionStatement	skip = h -> next_mb_skipped	31:12:688:713	3344042	1	True				
ANR	3344183	AssignmentExpression	skip = h -> next_mb_skipped		3344042	0		=			
ANR	3344184	Identifier	skip		3344042	0					
ANR	3344185	PtrMemberAccess	h -> next_mb_skipped		3344042	1					
ANR	3344186	Identifier	h		3344042	0					
ANR	3344187	Identifier	next_mb_skipped		3344042	1					
ANR	3344188	ElseStatement	else		3344042	0					
ANR	3344189	ExpressionStatement	"skip = decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y )"	35:12:742:792	3344042	0	True				
ANR	3344190	AssignmentExpression	"skip = decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y )"		3344042	0		=			
ANR	3344191	Identifier	skip		3344042	0					
ANR	3344192	CallExpression	"decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y )"		3344042	1					
ANR	3344193	Callee	decode_cabac_mb_skip		3344042	0					
ANR	3344194	Identifier	decode_cabac_mb_skip		3344042	0					
ANR	3344195	ArgumentList	h		3344042	1					
ANR	3344196	Argument	h		3344042	0					
ANR	3344197	Identifier	h		3344042	0					
ANR	3344198	Argument	s -> mb_x		3344042	1					
ANR	3344199	PtrMemberAccess	s -> mb_x		3344042	0					
ANR	3344200	Identifier	s		3344042	0					
ANR	3344201	Identifier	mb_x		3344042	1					
ANR	3344202	Argument	s -> mb_y		3344042	2					
ANR	3344203	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344204	Identifier	s		3344042	0					
ANR	3344205	Identifier	mb_y		3344042	1					
ANR	3344206	IfStatement	if ( skip )		3344042	2					
ANR	3344207	Condition	skip	39:12:838:841	3344042	0	True				
ANR	3344208	Identifier	skip		3344042	0					
ANR	3344209	CompoundStatement		39:19:800:800	3344042	1					
ANR	3344210	IfStatement	if ( FRAME_MBAFF && ( s -> mb_y & 1 ) == 0 )		3344042	0					
ANR	3344211	Condition	FRAME_MBAFF && ( s -> mb_y & 1 ) == 0	41:16:864:892	3344042	0	True				
ANR	3344212	AndExpression	FRAME_MBAFF && ( s -> mb_y & 1 ) == 0		3344042	0		&&			
ANR	3344213	Identifier	FRAME_MBAFF		3344042	0					
ANR	3344214	EqualityExpression	( s -> mb_y & 1 ) == 0		3344042	1		==			
ANR	3344215	BitAndExpression	s -> mb_y & 1		3344042	0		&			
ANR	3344216	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344217	Identifier	s		3344042	0					
ANR	3344218	Identifier	mb_y		3344042	1					
ANR	3344219	PrimaryExpression	1		3344042	1					
ANR	3344220	PrimaryExpression	0		3344042	1					
ANR	3344221	CompoundStatement		41:47:850:850	3344042	1					
ANR	3344222	ExpressionStatement	s -> current_picture . f . mb_type [ mb_xy ] = MB_TYPE_SKIP	43:16:914:964	3344042	0	True				
ANR	3344223	AssignmentExpression	s -> current_picture . f . mb_type [ mb_xy ] = MB_TYPE_SKIP		3344042	0		=			
ANR	3344224	ArrayIndexing	s -> current_picture . f . mb_type [ mb_xy ]		3344042	0					
ANR	3344225	MemberAccess	s -> current_picture . f . mb_type		3344042	0					
ANR	3344226	MemberAccess	s -> current_picture . f		3344042	0					
ANR	3344227	PtrMemberAccess	s -> current_picture		3344042	0					
ANR	3344228	Identifier	s		3344042	0					
ANR	3344229	Identifier	current_picture		3344042	1					
ANR	3344230	Identifier	f		3344042	1					
ANR	3344231	Identifier	mb_type		3344042	1					
ANR	3344232	Identifier	mb_xy		3344042	1					
ANR	3344233	Identifier	MB_TYPE_SKIP		3344042	1					
ANR	3344234	ExpressionStatement	"h -> next_mb_skipped = decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y + 1 )"	45:16:983:1049	3344042	1	True				
ANR	3344235	AssignmentExpression	"h -> next_mb_skipped = decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y + 1 )"		3344042	0		=			
ANR	3344236	PtrMemberAccess	h -> next_mb_skipped		3344042	0					
ANR	3344237	Identifier	h		3344042	0					
ANR	3344238	Identifier	next_mb_skipped		3344042	1					
ANR	3344239	CallExpression	"decode_cabac_mb_skip ( h , s -> mb_x , s -> mb_y + 1 )"		3344042	1					
ANR	3344240	Callee	decode_cabac_mb_skip		3344042	0					
ANR	3344241	Identifier	decode_cabac_mb_skip		3344042	0					
ANR	3344242	ArgumentList	h		3344042	1					
ANR	3344243	Argument	h		3344042	0					
ANR	3344244	Identifier	h		3344042	0					
ANR	3344245	Argument	s -> mb_x		3344042	1					
ANR	3344246	PtrMemberAccess	s -> mb_x		3344042	0					
ANR	3344247	Identifier	s		3344042	0					
ANR	3344248	Identifier	mb_x		3344042	1					
ANR	3344249	Argument	s -> mb_y + 1		3344042	2					
ANR	3344250	AdditiveExpression	s -> mb_y + 1		3344042	0		+			
ANR	3344251	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344252	Identifier	s		3344042	0					
ANR	3344253	Identifier	mb_y		3344042	1					
ANR	3344254	PrimaryExpression	1		3344042	1					
ANR	3344255	IfStatement	if ( ! h -> next_mb_skipped )		3344042	2					
ANR	3344256	Condition	! h -> next_mb_skipped	47:19:1071:1089	3344042	0	True				
ANR	3344257	UnaryOperationExpression	! h -> next_mb_skipped		3344042	0					
ANR	3344258	UnaryOperator	!		3344042	0					
ANR	3344259	PtrMemberAccess	h -> next_mb_skipped		3344042	1					
ANR	3344260	Identifier	h		3344042	0					
ANR	3344261	Identifier	next_mb_skipped		3344042	1					
ANR	3344262	ExpressionStatement	h -> mb_mbaff = h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )	49:20:1113:1190	3344042	1	True				
ANR	3344263	AssignmentExpression	h -> mb_mbaff = h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )		3344042	0		=			
ANR	3344264	PtrMemberAccess	h -> mb_mbaff		3344042	0					
ANR	3344265	Identifier	h		3344042	0					
ANR	3344266	Identifier	mb_mbaff		3344042	1					
ANR	3344267	AssignmentExpression	h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )		3344042	1		=			
ANR	3344268	PtrMemberAccess	h -> mb_field_decoding_flag		3344042	0					
ANR	3344269	Identifier	h		3344042	0					
ANR	3344270	Identifier	mb_field_decoding_flag		3344042	1					
ANR	3344271	CallExpression	decode_cabac_field_decoding_flag ( h )		3344042	1					
ANR	3344272	Callee	decode_cabac_field_decoding_flag		3344042	0					
ANR	3344273	Identifier	decode_cabac_field_decoding_flag		3344042	0					
ANR	3344274	ArgumentList	h		3344042	1					
ANR	3344275	Argument	h		3344042	0					
ANR	3344276	Identifier	h		3344042	0					
ANR	3344277	ExpressionStatement	decode_mb_skip ( h )	55:12:1222:1239	3344042	1	True				
ANR	3344278	CallExpression	decode_mb_skip ( h )		3344042	0					
ANR	3344279	Callee	decode_mb_skip		3344042	0					
ANR	3344280	Identifier	decode_mb_skip		3344042	0					
ANR	3344281	ArgumentList	h		3344042	1					
ANR	3344282	Argument	h		3344042	0					
ANR	3344283	Identifier	h		3344042	0					
ANR	3344284	ExpressionStatement	h -> cbp_table [ mb_xy ] = 0	59:12:1256:1279	3344042	2	True				
ANR	3344285	AssignmentExpression	h -> cbp_table [ mb_xy ] = 0		3344042	0		=			
ANR	3344286	ArrayIndexing	h -> cbp_table [ mb_xy ]		3344042	0					
ANR	3344287	PtrMemberAccess	h -> cbp_table		3344042	0					
ANR	3344288	Identifier	h		3344042	0					
ANR	3344289	Identifier	cbp_table		3344042	1					
ANR	3344290	Identifier	mb_xy		3344042	1					
ANR	3344291	PrimaryExpression	0		3344042	1					
ANR	3344292	ExpressionStatement	h -> chroma_pred_mode_table [ mb_xy ] = 0	61:12:1294:1330	3344042	3	True				
ANR	3344293	AssignmentExpression	h -> chroma_pred_mode_table [ mb_xy ] = 0		3344042	0		=			
ANR	3344294	ArrayIndexing	h -> chroma_pred_mode_table [ mb_xy ]		3344042	0					
ANR	3344295	PtrMemberAccess	h -> chroma_pred_mode_table		3344042	0					
ANR	3344296	Identifier	h		3344042	0					
ANR	3344297	Identifier	chroma_pred_mode_table		3344042	1					
ANR	3344298	Identifier	mb_xy		3344042	1					
ANR	3344299	PrimaryExpression	0		3344042	1					
ANR	3344300	ExpressionStatement	h -> last_qscale_diff = 0	63:12:1345:1368	3344042	4	True				
ANR	3344301	AssignmentExpression	h -> last_qscale_diff = 0		3344042	0		=			
ANR	3344302	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3344303	Identifier	h		3344042	0					
ANR	3344304	Identifier	last_qscale_diff		3344042	1					
ANR	3344305	PrimaryExpression	0		3344042	1					
ANR	3344306	ReturnStatement	return 0 ;	67:12:1385:1393	3344042	5	True				
ANR	3344307	PrimaryExpression	0		3344042	0					
ANR	3344308	IfStatement	if ( FRAME_MBAFF )		3344042	12					
ANR	3344309	Condition	FRAME_MBAFF	75:7:1423:1433	3344042	0	True				
ANR	3344310	Identifier	FRAME_MBAFF		3344042	0					
ANR	3344311	CompoundStatement		75:19:1390:1390	3344042	1					
ANR	3344312	IfStatement	if ( ( s -> mb_y & 1 ) == 0 )		3344042	0					
ANR	3344313	Condition	( s -> mb_y & 1 ) == 0	77:12:1450:1465	3344042	0	True				
ANR	3344314	EqualityExpression	( s -> mb_y & 1 ) == 0		3344042	0		==			
ANR	3344315	BitAndExpression	s -> mb_y & 1		3344042	0		&			
ANR	3344316	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3344317	Identifier	s		3344042	0					
ANR	3344318	Identifier	mb_y		3344042	1					
ANR	3344319	PrimaryExpression	1		3344042	1					
ANR	3344320	PrimaryExpression	0		3344042	1					
ANR	3344321	ExpressionStatement	h -> mb_mbaff = h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )	79:12:1482:1572	3344042	1	True				
ANR	3344322	AssignmentExpression	h -> mb_mbaff = h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )		3344042	0		=			
ANR	3344323	PtrMemberAccess	h -> mb_mbaff		3344042	0					
ANR	3344324	Identifier	h		3344042	0					
ANR	3344325	Identifier	mb_mbaff		3344042	1					
ANR	3344326	AssignmentExpression	h -> mb_field_decoding_flag = decode_cabac_field_decoding_flag ( h )		3344042	1		=			
ANR	3344327	PtrMemberAccess	h -> mb_field_decoding_flag		3344042	0					
ANR	3344328	Identifier	h		3344042	0					
ANR	3344329	Identifier	mb_field_decoding_flag		3344042	1					
ANR	3344330	CallExpression	decode_cabac_field_decoding_flag ( h )		3344042	1					
ANR	3344331	Callee	decode_cabac_field_decoding_flag		3344042	0					
ANR	3344332	Identifier	decode_cabac_field_decoding_flag		3344042	0					
ANR	3344333	ArgumentList	h		3344042	1					
ANR	3344334	Argument	h		3344042	0					
ANR	3344335	Identifier	h		3344042	0					
ANR	3344336	ExpressionStatement	h -> prev_mb_skipped = 0	87:4:1588:1610	3344042	13	True				
ANR	3344337	AssignmentExpression	h -> prev_mb_skipped = 0		3344042	0		=			
ANR	3344338	PtrMemberAccess	h -> prev_mb_skipped		3344042	0					
ANR	3344339	Identifier	h		3344042	0					
ANR	3344340	Identifier	prev_mb_skipped		3344042	1					
ANR	3344341	PrimaryExpression	0		3344042	1					
ANR	3344342	ExpressionStatement	"fill_decode_neighbors ( h , - ( MB_FIELD ) )"	91:4:1619:1656	3344042	14	True				
ANR	3344343	CallExpression	"fill_decode_neighbors ( h , - ( MB_FIELD ) )"		3344042	0					
ANR	3344344	Callee	fill_decode_neighbors		3344042	0					
ANR	3344345	Identifier	fill_decode_neighbors		3344042	0					
ANR	3344346	ArgumentList	h		3344042	1					
ANR	3344347	Argument	h		3344042	0					
ANR	3344348	Identifier	h		3344042	0					
ANR	3344349	Argument	- ( MB_FIELD )		3344042	1					
ANR	3344350	UnaryOperationExpression	- ( MB_FIELD )		3344042	0					
ANR	3344351	UnaryOperator	-		3344042	0					
ANR	3344352	Identifier	MB_FIELD		3344042	1					
ANR	3344353	IfStatement	if ( h -> slice_type_nos == AV_PICTURE_TYPE_B )		3344042	15					
ANR	3344354	Condition	h -> slice_type_nos == AV_PICTURE_TYPE_B	95:8:1669:1706	3344042	0	True				
ANR	3344355	EqualityExpression	h -> slice_type_nos == AV_PICTURE_TYPE_B		3344042	0		==			
ANR	3344356	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3344357	Identifier	h		3344042	0					
ANR	3344358	Identifier	slice_type_nos		3344042	1					
ANR	3344359	Identifier	AV_PICTURE_TYPE_B		3344042	1					
ANR	3344360	CompoundStatement		97:8:1676:1687	3344042	1					
ANR	3344361	IdentifierDeclStatement	int ctx = 0 ;	97:8:1721:1732	3344042	0	True				
ANR	3344362	IdentifierDecl	ctx = 0		3344042	0					
ANR	3344363	IdentifierDeclType	int		3344042	0					
ANR	3344364	Identifier	ctx		3344042	1					
ANR	3344365	AssignmentExpression	ctx = 0		3344042	2		=			
ANR	3344366	Identifier	ctx		3344042	0					
ANR	3344367	PrimaryExpression	0		3344042	1					
ANR	3344368	ExpressionStatement	assert ( h -> slice_type_nos == AV_PICTURE_TYPE_B )	99:8:1743:1789	3344042	1	True				
ANR	3344369	CallExpression	assert ( h -> slice_type_nos == AV_PICTURE_TYPE_B )		3344042	0					
ANR	3344370	Callee	assert		3344042	0					
ANR	3344371	Identifier	assert		3344042	0					
ANR	3344372	ArgumentList	h -> slice_type_nos == AV_PICTURE_TYPE_B		3344042	1					
ANR	3344373	Argument	h -> slice_type_nos == AV_PICTURE_TYPE_B		3344042	0					
ANR	3344374	EqualityExpression	h -> slice_type_nos == AV_PICTURE_TYPE_B		3344042	0		==			
ANR	3344375	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3344376	Identifier	h		3344042	0					
ANR	3344377	Identifier	slice_type_nos		3344042	1					
ANR	3344378	Identifier	AV_PICTURE_TYPE_B		3344042	1					
ANR	3344379	IfStatement	if ( ! IS_DIRECT ( h -> left_type [ LTOP ] - 1 ) )		3344042	2					
ANR	3344380	Condition	! IS_DIRECT ( h -> left_type [ LTOP ] - 1 )	103:12:1806:1839	3344042	0	True				
ANR	3344381	UnaryOperationExpression	! IS_DIRECT ( h -> left_type [ LTOP ] - 1 )		3344042	0					
ANR	3344382	UnaryOperator	!		3344042	0					
ANR	3344383	CallExpression	IS_DIRECT ( h -> left_type [ LTOP ] - 1 )		3344042	1					
ANR	3344384	Callee	IS_DIRECT		3344042	0					
ANR	3344385	Identifier	IS_DIRECT		3344042	0					
ANR	3344386	ArgumentList	h -> left_type [ LTOP ] - 1		3344042	1					
ANR	3344387	Argument	h -> left_type [ LTOP ] - 1		3344042	0					
ANR	3344388	AdditiveExpression	h -> left_type [ LTOP ] - 1		3344042	0		-			
ANR	3344389	ArrayIndexing	h -> left_type [ LTOP ]		3344042	0					
ANR	3344390	PtrMemberAccess	h -> left_type		3344042	0					
ANR	3344391	Identifier	h		3344042	0					
ANR	3344392	Identifier	left_type		3344042	1					
ANR	3344393	Identifier	LTOP		3344042	1					
ANR	3344394	PrimaryExpression	1		3344042	1					
ANR	3344395	ExpressionStatement	ctx ++	105:12:1856:1861	3344042	1	True				
ANR	3344396	PostIncDecOperationExpression	ctx ++		3344042	0					
ANR	3344397	Identifier	ctx		3344042	0					
ANR	3344398	IncDec	++		3344042	1					
ANR	3344399	IfStatement	if ( ! IS_DIRECT ( h -> top_type - 1 ) )		3344042	3					
ANR	3344400	Condition	! IS_DIRECT ( h -> top_type - 1 )	107:12:1876:1902	3344042	0	True				
ANR	3344401	UnaryOperationExpression	! IS_DIRECT ( h -> top_type - 1 )		3344042	0					
ANR	3344402	UnaryOperator	!		3344042	0					
ANR	3344403	CallExpression	IS_DIRECT ( h -> top_type - 1 )		3344042	1					
ANR	3344404	Callee	IS_DIRECT		3344042	0					
ANR	3344405	Identifier	IS_DIRECT		3344042	0					
ANR	3344406	ArgumentList	h -> top_type - 1		3344042	1					
ANR	3344407	Argument	h -> top_type - 1		3344042	0					
ANR	3344408	AdditiveExpression	h -> top_type - 1		3344042	0		-			
ANR	3344409	PtrMemberAccess	h -> top_type		3344042	0					
ANR	3344410	Identifier	h		3344042	0					
ANR	3344411	Identifier	top_type		3344042	1					
ANR	3344412	PrimaryExpression	1		3344042	1					
ANR	3344413	ExpressionStatement	ctx ++	109:12:1919:1924	3344042	1	True				
ANR	3344414	PostIncDecOperationExpression	ctx ++		3344042	0					
ANR	3344415	Identifier	ctx		3344042	0					
ANR	3344416	IncDec	++		3344042	1					
ANR	3344417	IfStatement	"if ( ! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + ctx ] ) )"		3344042	4					
ANR	3344418	Condition	"! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + ctx ] )"	113:12:1941:1997	3344042	0	True				
ANR	3344419	UnaryOperationExpression	"! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + ctx ] )"		3344042	0					
ANR	3344420	UnaryOperator	!		3344042	0					
ANR	3344421	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + ctx ] )"		3344042	1					
ANR	3344422	Callee	get_cabac_noinline		3344042	0					
ANR	3344423	Identifier	get_cabac_noinline		3344042	0					
ANR	3344424	ArgumentList	& h -> cabac		3344042	1					
ANR	3344425	Argument	& h -> cabac		3344042	0					
ANR	3344426	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344427	UnaryOperator	&		3344042	0					
ANR	3344428	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344429	Identifier	h		3344042	0					
ANR	3344430	Identifier	cabac		3344042	1					
ANR	3344431	Argument	& h -> cabac_state [ 27 + ctx ]		3344042	1					
ANR	3344432	UnaryOperationExpression	& h -> cabac_state [ 27 + ctx ]		3344042	0					
ANR	3344433	UnaryOperator	&		3344042	0					
ANR	3344434	ArrayIndexing	h -> cabac_state [ 27 + ctx ]		3344042	1					
ANR	3344435	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344436	Identifier	h		3344042	0					
ANR	3344437	Identifier	cabac_state		3344042	1					
ANR	3344438	AdditiveExpression	27 + ctx		3344042	1		+			
ANR	3344439	PrimaryExpression	27		3344042	0					
ANR	3344440	Identifier	ctx		3344042	1					
ANR	3344441	CompoundStatement		113:71:1955:1955	3344042	1					
ANR	3344442	ExpressionStatement	mb_type = 0	115:12:2015:2025	3344042	0	True				
ANR	3344443	AssignmentExpression	mb_type = 0		3344042	0		=			
ANR	3344444	Identifier	mb_type		3344042	0					
ANR	3344445	PrimaryExpression	0		3344042	1					
ANR	3344446	ElseStatement	else		3344042	0					
ANR	3344447	IfStatement	"if ( ! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 3 ] ) )"		3344042	0					
ANR	3344448	Condition	"! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 3 ] )"	117:18:2067:2121	3344042	0	True				
ANR	3344449	UnaryOperationExpression	"! get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 3 ] )"		3344042	0					
ANR	3344450	UnaryOperator	!		3344042	0					
ANR	3344451	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 3 ] )"		3344042	1					
ANR	3344452	Callee	get_cabac_noinline		3344042	0					
ANR	3344453	Identifier	get_cabac_noinline		3344042	0					
ANR	3344454	ArgumentList	& h -> cabac		3344042	1					
ANR	3344455	Argument	& h -> cabac		3344042	0					
ANR	3344456	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344457	UnaryOperator	&		3344042	0					
ANR	3344458	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344459	Identifier	h		3344042	0					
ANR	3344460	Identifier	cabac		3344042	1					
ANR	3344461	Argument	& h -> cabac_state [ 27 + 3 ]		3344042	1					
ANR	3344462	UnaryOperationExpression	& h -> cabac_state [ 27 + 3 ]		3344042	0					
ANR	3344463	UnaryOperator	&		3344042	0					
ANR	3344464	ArrayIndexing	h -> cabac_state [ 27 + 3 ]		3344042	1					
ANR	3344465	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344466	Identifier	h		3344042	0					
ANR	3344467	Identifier	cabac_state		3344042	1					
ANR	3344468	AdditiveExpression	27 + 3		3344042	1		+			
ANR	3344469	PrimaryExpression	27		3344042	0					
ANR	3344470	PrimaryExpression	3		3344042	1					
ANR	3344471	CompoundStatement		117:76:2080:2080	3344042	1					
ANR	3344472	ExpressionStatement	"mb_type = 1 + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"	119:12:2140:2207	3344042	0	True				
ANR	3344473	AssignmentExpression	"mb_type = 1 + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	0		=			
ANR	3344474	Identifier	mb_type		3344042	0					
ANR	3344475	AdditiveExpression	"1 + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	1		+			
ANR	3344476	PrimaryExpression	1		3344042	0					
ANR	3344477	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	1					
ANR	3344478	Callee	get_cabac_noinline		3344042	0					
ANR	3344479	Identifier	get_cabac_noinline		3344042	0					
ANR	3344480	ArgumentList	& h -> cabac		3344042	1					
ANR	3344481	Argument	& h -> cabac		3344042	0					
ANR	3344482	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344483	UnaryOperator	&		3344042	0					
ANR	3344484	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344485	Identifier	h		3344042	0					
ANR	3344486	Identifier	cabac		3344042	1					
ANR	3344487	Argument	& h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344488	UnaryOperationExpression	& h -> cabac_state [ 27 + 5 ]		3344042	0					
ANR	3344489	UnaryOperator	&		3344042	0					
ANR	3344490	ArrayIndexing	h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344491	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344492	Identifier	h		3344042	0					
ANR	3344493	Identifier	cabac_state		3344042	1					
ANR	3344494	AdditiveExpression	27 + 5		3344042	1		+			
ANR	3344495	PrimaryExpression	27		3344042	0					
ANR	3344496	PrimaryExpression	5		3344042	1					
ANR	3344497	ElseStatement	else		3344042	0					
ANR	3344498	CompoundStatement		123:12:2213:2221	3344042	0					
ANR	3344499	IdentifierDeclStatement	int bits ;	123:12:2258:2266	3344042	0	True				
ANR	3344500	IdentifierDecl	bits		3344042	0					
ANR	3344501	IdentifierDeclType	int		3344042	0					
ANR	3344502	Identifier	bits		3344042	1					
ANR	3344503	ExpressionStatement	"bits = get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 4 ] ) << 3"	125:12:2281:2347	3344042	1	True				
ANR	3344504	AssignmentExpression	"bits = get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 4 ] ) << 3"		3344042	0		=			
ANR	3344505	Identifier	bits		3344042	0					
ANR	3344506	ShiftExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 4 ] ) << 3"		3344042	1		<<			
ANR	3344507	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 4 ] )"		3344042	0					
ANR	3344508	Callee	get_cabac_noinline		3344042	0					
ANR	3344509	Identifier	get_cabac_noinline		3344042	0					
ANR	3344510	ArgumentList	& h -> cabac		3344042	1					
ANR	3344511	Argument	& h -> cabac		3344042	0					
ANR	3344512	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344513	UnaryOperator	&		3344042	0					
ANR	3344514	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344515	Identifier	h		3344042	0					
ANR	3344516	Identifier	cabac		3344042	1					
ANR	3344517	Argument	& h -> cabac_state [ 27 + 4 ]		3344042	1					
ANR	3344518	UnaryOperationExpression	& h -> cabac_state [ 27 + 4 ]		3344042	0					
ANR	3344519	UnaryOperator	&		3344042	0					
ANR	3344520	ArrayIndexing	h -> cabac_state [ 27 + 4 ]		3344042	1					
ANR	3344521	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344522	Identifier	h		3344042	0					
ANR	3344523	Identifier	cabac_state		3344042	1					
ANR	3344524	AdditiveExpression	27 + 4		3344042	1		+			
ANR	3344525	PrimaryExpression	27		3344042	0					
ANR	3344526	PrimaryExpression	4		3344042	1					
ANR	3344527	PrimaryExpression	3		3344042	1					
ANR	3344528	ExpressionStatement	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 2"	127:12:2362:2428	3344042	2	True				
ANR	3344529	AssignmentExpression	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 2"		3344042	0		+=			
ANR	3344530	Identifier	bits		3344042	0					
ANR	3344531	ShiftExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 2"		3344042	1		<<			
ANR	3344532	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	0					
ANR	3344533	Callee	get_cabac_noinline		3344042	0					
ANR	3344534	Identifier	get_cabac_noinline		3344042	0					
ANR	3344535	ArgumentList	& h -> cabac		3344042	1					
ANR	3344536	Argument	& h -> cabac		3344042	0					
ANR	3344537	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344538	UnaryOperator	&		3344042	0					
ANR	3344539	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344540	Identifier	h		3344042	0					
ANR	3344541	Identifier	cabac		3344042	1					
ANR	3344542	Argument	& h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344543	UnaryOperationExpression	& h -> cabac_state [ 27 + 5 ]		3344042	0					
ANR	3344544	UnaryOperator	&		3344042	0					
ANR	3344545	ArrayIndexing	h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344546	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344547	Identifier	h		3344042	0					
ANR	3344548	Identifier	cabac_state		3344042	1					
ANR	3344549	AdditiveExpression	27 + 5		3344042	1		+			
ANR	3344550	PrimaryExpression	27		3344042	0					
ANR	3344551	PrimaryExpression	5		3344042	1					
ANR	3344552	PrimaryExpression	2		3344042	1					
ANR	3344553	ExpressionStatement	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 1"	129:12:2443:2509	3344042	3	True				
ANR	3344554	AssignmentExpression	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 1"		3344042	0		+=			
ANR	3344555	Identifier	bits		3344042	0					
ANR	3344556	ShiftExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] ) << 1"		3344042	1		<<			
ANR	3344557	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	0					
ANR	3344558	Callee	get_cabac_noinline		3344042	0					
ANR	3344559	Identifier	get_cabac_noinline		3344042	0					
ANR	3344560	ArgumentList	& h -> cabac		3344042	1					
ANR	3344561	Argument	& h -> cabac		3344042	0					
ANR	3344562	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344563	UnaryOperator	&		3344042	0					
ANR	3344564	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344565	Identifier	h		3344042	0					
ANR	3344566	Identifier	cabac		3344042	1					
ANR	3344567	Argument	& h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344568	UnaryOperationExpression	& h -> cabac_state [ 27 + 5 ]		3344042	0					
ANR	3344569	UnaryOperator	&		3344042	0					
ANR	3344570	ArrayIndexing	h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344571	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344572	Identifier	h		3344042	0					
ANR	3344573	Identifier	cabac_state		3344042	1					
ANR	3344574	AdditiveExpression	27 + 5		3344042	1		+			
ANR	3344575	PrimaryExpression	27		3344042	0					
ANR	3344576	PrimaryExpression	5		3344042	1					
ANR	3344577	PrimaryExpression	1		3344042	1					
ANR	3344578	ExpressionStatement	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"	131:12:2524:2585	3344042	4	True				
ANR	3344579	AssignmentExpression	"bits += get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	0		+=			
ANR	3344580	Identifier	bits		3344042	0					
ANR	3344581	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	1					
ANR	3344582	Callee	get_cabac_noinline		3344042	0					
ANR	3344583	Identifier	get_cabac_noinline		3344042	0					
ANR	3344584	ArgumentList	& h -> cabac		3344042	1					
ANR	3344585	Argument	& h -> cabac		3344042	0					
ANR	3344586	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344587	UnaryOperator	&		3344042	0					
ANR	3344588	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344589	Identifier	h		3344042	0					
ANR	3344590	Identifier	cabac		3344042	1					
ANR	3344591	Argument	& h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344592	UnaryOperationExpression	& h -> cabac_state [ 27 + 5 ]		3344042	0					
ANR	3344593	UnaryOperator	&		3344042	0					
ANR	3344594	ArrayIndexing	h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344595	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344596	Identifier	h		3344042	0					
ANR	3344597	Identifier	cabac_state		3344042	1					
ANR	3344598	AdditiveExpression	27 + 5		3344042	1		+			
ANR	3344599	PrimaryExpression	27		3344042	0					
ANR	3344600	PrimaryExpression	5		3344042	1					
ANR	3344601	IfStatement	if ( bits < 8 )		3344042	5					
ANR	3344602	Condition	bits < 8	133:16:2604:2611	3344042	0	True				
ANR	3344603	RelationalExpression	bits < 8		3344042	0		<			
ANR	3344604	Identifier	bits		3344042	0					
ANR	3344605	PrimaryExpression	8		3344042	1					
ANR	3344606	CompoundStatement		133:26:2569:2569	3344042	1					
ANR	3344607	ExpressionStatement	mb_type = bits + 3	135:16:2633:2650	3344042	0	True				
ANR	3344608	AssignmentExpression	mb_type = bits + 3		3344042	0		=			
ANR	3344609	Identifier	mb_type		3344042	0					
ANR	3344610	AdditiveExpression	bits + 3		3344042	1		+			
ANR	3344611	Identifier	bits		3344042	0					
ANR	3344612	PrimaryExpression	3		3344042	1					
ANR	3344613	ElseStatement	else		3344042	0					
ANR	3344614	IfStatement	if ( bits == 13 )		3344042	0					
ANR	3344615	Condition	bits == 13	137:22:2713:2722	3344042	0	True				
ANR	3344616	EqualityExpression	bits == 13		3344042	0		==			
ANR	3344617	Identifier	bits		3344042	0					
ANR	3344618	PrimaryExpression	13		3344042	1					
ANR	3344619	CompoundStatement		137:34:2680:2680	3344042	1					
ANR	3344620	ExpressionStatement	"mb_type = decode_cabac_intra_mb_type ( h , 32 , 0 )"	139:16:2744:2789	3344042	0	True				
ANR	3344621	AssignmentExpression	"mb_type = decode_cabac_intra_mb_type ( h , 32 , 0 )"		3344042	0		=			
ANR	3344622	Identifier	mb_type		3344042	0					
ANR	3344623	CallExpression	"decode_cabac_intra_mb_type ( h , 32 , 0 )"		3344042	1					
ANR	3344624	Callee	decode_cabac_intra_mb_type		3344042	0					
ANR	3344625	Identifier	decode_cabac_intra_mb_type		3344042	0					
ANR	3344626	ArgumentList	h		3344042	1					
ANR	3344627	Argument	h		3344042	0					
ANR	3344628	Identifier	h		3344042	0					
ANR	3344629	Argument	32		3344042	1					
ANR	3344630	PrimaryExpression	32		3344042	0					
ANR	3344631	Argument	0		3344042	2					
ANR	3344632	PrimaryExpression	0		3344042	0					
ANR	3344633	GotoStatement	goto decode_intra_mb ;	141:16:2808:2828	3344042	1	True				
ANR	3344634	Identifier	decode_intra_mb		3344042	0					
ANR	3344635	ElseStatement	else		3344042	0					
ANR	3344636	IfStatement	if ( bits == 14 )		3344042	0					
ANR	3344637	Condition	bits == 14	143:22:2853:2862	3344042	0	True				
ANR	3344638	EqualityExpression	bits == 14		3344042	0		==			
ANR	3344639	Identifier	bits		3344042	0					
ANR	3344640	PrimaryExpression	14		3344042	1					
ANR	3344641	CompoundStatement		143:34:2820:2820	3344042	1					
ANR	3344642	ExpressionStatement	mb_type = 11	145:16:2884:2895	3344042	0	True				
ANR	3344643	AssignmentExpression	mb_type = 11		3344042	0		=			
ANR	3344644	Identifier	mb_type		3344042	0					
ANR	3344645	PrimaryExpression	11		3344042	1					
ANR	3344646	ElseStatement	else		3344042	0					
ANR	3344647	IfStatement	if ( bits == 15 )		3344042	0					
ANR	3344648	Condition	bits == 15	147:22:2939:2948	3344042	0	True				
ANR	3344649	EqualityExpression	bits == 15		3344042	0		==			
ANR	3344650	Identifier	bits		3344042	0					
ANR	3344651	PrimaryExpression	15		3344042	1					
ANR	3344652	CompoundStatement		147:34:2906:2906	3344042	1					
ANR	3344653	ExpressionStatement	mb_type = 22	149:16:2970:2981	3344042	0	True				
ANR	3344654	AssignmentExpression	mb_type = 22		3344042	0		=			
ANR	3344655	Identifier	mb_type		3344042	0					
ANR	3344656	PrimaryExpression	22		3344042	1					
ANR	3344657	ElseStatement	else		3344042	0					
ANR	3344658	CompoundStatement		151:17:2968:2968	3344042	0					
ANR	3344659	ExpressionStatement	"bits = ( bits << 1 ) + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"	153:16:3032:3106	3344042	0	True				
ANR	3344660	AssignmentExpression	"bits = ( bits << 1 ) + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	0		=			
ANR	3344661	Identifier	bits		3344042	0					
ANR	3344662	AdditiveExpression	"( bits << 1 ) + get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	1		+			
ANR	3344663	ShiftExpression	bits << 1		3344042	0		<<			
ANR	3344664	Identifier	bits		3344042	0					
ANR	3344665	PrimaryExpression	1		3344042	1					
ANR	3344666	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 27 + 5 ] )"		3344042	1					
ANR	3344667	Callee	get_cabac_noinline		3344042	0					
ANR	3344668	Identifier	get_cabac_noinline		3344042	0					
ANR	3344669	ArgumentList	& h -> cabac		3344042	1					
ANR	3344670	Argument	& h -> cabac		3344042	0					
ANR	3344671	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344672	UnaryOperator	&		3344042	0					
ANR	3344673	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344674	Identifier	h		3344042	0					
ANR	3344675	Identifier	cabac		3344042	1					
ANR	3344676	Argument	& h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344677	UnaryOperationExpression	& h -> cabac_state [ 27 + 5 ]		3344042	0					
ANR	3344678	UnaryOperator	&		3344042	0					
ANR	3344679	ArrayIndexing	h -> cabac_state [ 27 + 5 ]		3344042	1					
ANR	3344680	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344681	Identifier	h		3344042	0					
ANR	3344682	Identifier	cabac_state		3344042	1					
ANR	3344683	AdditiveExpression	27 + 5		3344042	1		+			
ANR	3344684	PrimaryExpression	27		3344042	0					
ANR	3344685	PrimaryExpression	5		3344042	1					
ANR	3344686	ExpressionStatement	mb_type = bits - 4	155:16:3125:3142	3344042	1	True				
ANR	3344687	AssignmentExpression	mb_type = bits - 4		3344042	0		=			
ANR	3344688	Identifier	mb_type		3344042	0					
ANR	3344689	AdditiveExpression	bits - 4		3344042	1		-			
ANR	3344690	Identifier	bits		3344042	0					
ANR	3344691	PrimaryExpression	4		3344042	1					
ANR	3344692	ExpressionStatement	partition_count = b_mb_type_info [ mb_type ] . partition_count	161:12:3217:3273	3344042	5	True				
ANR	3344693	AssignmentExpression	partition_count = b_mb_type_info [ mb_type ] . partition_count		3344042	0		=			
ANR	3344694	Identifier	partition_count		3344042	0					
ANR	3344695	MemberAccess	b_mb_type_info [ mb_type ] . partition_count		3344042	1					
ANR	3344696	ArrayIndexing	b_mb_type_info [ mb_type ]		3344042	0					
ANR	3344697	Identifier	b_mb_type_info		3344042	0					
ANR	3344698	Identifier	mb_type		3344042	1					
ANR	3344699	Identifier	partition_count		3344042	1					
ANR	3344700	ExpressionStatement	mb_type = b_mb_type_info [ mb_type ] . type	163:12:3288:3333	3344042	6	True				
ANR	3344701	AssignmentExpression	mb_type = b_mb_type_info [ mb_type ] . type		3344042	0		=			
ANR	3344702	Identifier	mb_type		3344042	0					
ANR	3344703	MemberAccess	b_mb_type_info [ mb_type ] . type		3344042	1					
ANR	3344704	ArrayIndexing	b_mb_type_info [ mb_type ]		3344042	0					
ANR	3344705	Identifier	b_mb_type_info		3344042	0					
ANR	3344706	Identifier	mb_type		3344042	1					
ANR	3344707	Identifier	type		3344042	1					
ANR	3344708	ElseStatement	else		3344042	0					
ANR	3344709	IfStatement	if ( h -> slice_type_nos == AV_PICTURE_TYPE_P )		3344042	0					
ANR	3344710	Condition	h -> slice_type_nos == AV_PICTURE_TYPE_P	165:15:3351:3388	3344042	0	True				
ANR	3344711	EqualityExpression	h -> slice_type_nos == AV_PICTURE_TYPE_P		3344042	0		==			
ANR	3344712	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3344713	Identifier	h		3344042	0					
ANR	3344714	Identifier	slice_type_nos		3344042	1					
ANR	3344715	Identifier	AV_PICTURE_TYPE_P		3344042	1					
ANR	3344716	CompoundStatement		165:56:3347:3347	3344042	1					
ANR	3344717	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 14 ] ) == 0 )"		3344042	0					
ANR	3344718	Condition	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 14 ] ) == 0"	167:12:3407:3463	3344042	0	True				
ANR	3344719	EqualityExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 14 ] ) == 0"		3344042	0		==			
ANR	3344720	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 14 ] )"		3344042	0					
ANR	3344721	Callee	get_cabac_noinline		3344042	0					
ANR	3344722	Identifier	get_cabac_noinline		3344042	0					
ANR	3344723	ArgumentList	& h -> cabac		3344042	1					
ANR	3344724	Argument	& h -> cabac		3344042	0					
ANR	3344725	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344726	UnaryOperator	&		3344042	0					
ANR	3344727	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344728	Identifier	h		3344042	0					
ANR	3344729	Identifier	cabac		3344042	1					
ANR	3344730	Argument	& h -> cabac_state [ 14 ]		3344042	1					
ANR	3344731	UnaryOperationExpression	& h -> cabac_state [ 14 ]		3344042	0					
ANR	3344732	UnaryOperator	&		3344042	0					
ANR	3344733	ArrayIndexing	h -> cabac_state [ 14 ]		3344042	1					
ANR	3344734	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344735	Identifier	h		3344042	0					
ANR	3344736	Identifier	cabac_state		3344042	1					
ANR	3344737	PrimaryExpression	14		3344042	1					
ANR	3344738	PrimaryExpression	0		3344042	1					
ANR	3344739	CompoundStatement		167:72:3422:3422	3344042	1					
ANR	3344740	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 15 ] ) == 0 )"		3344042	0					
ANR	3344741	Condition	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 15 ] ) == 0"	171:16:3512:3568	3344042	0	True				
ANR	3344742	EqualityExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 15 ] ) == 0"		3344042	0		==			
ANR	3344743	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 15 ] )"		3344042	0					
ANR	3344744	Callee	get_cabac_noinline		3344042	0					
ANR	3344745	Identifier	get_cabac_noinline		3344042	0					
ANR	3344746	ArgumentList	& h -> cabac		3344042	1					
ANR	3344747	Argument	& h -> cabac		3344042	0					
ANR	3344748	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344749	UnaryOperator	&		3344042	0					
ANR	3344750	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344751	Identifier	h		3344042	0					
ANR	3344752	Identifier	cabac		3344042	1					
ANR	3344753	Argument	& h -> cabac_state [ 15 ]		3344042	1					
ANR	3344754	UnaryOperationExpression	& h -> cabac_state [ 15 ]		3344042	0					
ANR	3344755	UnaryOperator	&		3344042	0					
ANR	3344756	ArrayIndexing	h -> cabac_state [ 15 ]		3344042	1					
ANR	3344757	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344758	Identifier	h		3344042	0					
ANR	3344759	Identifier	cabac_state		3344042	1					
ANR	3344760	PrimaryExpression	15		3344042	1					
ANR	3344761	PrimaryExpression	0		3344042	1					
ANR	3344762	CompoundStatement		171:76:3527:3527	3344042	1					
ANR	3344763	ExpressionStatement	"mb_type = 3 * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 16 ] )"	175:16:3633:3698	3344042	0	True				
ANR	3344764	AssignmentExpression	"mb_type = 3 * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 16 ] )"		3344042	0		=			
ANR	3344765	Identifier	mb_type		3344042	0					
ANR	3344766	MultiplicativeExpression	"3 * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 16 ] )"		3344042	1		*			
ANR	3344767	PrimaryExpression	3		3344042	0					
ANR	3344768	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 16 ] )"		3344042	1					
ANR	3344769	Callee	get_cabac_noinline		3344042	0					
ANR	3344770	Identifier	get_cabac_noinline		3344042	0					
ANR	3344771	ArgumentList	& h -> cabac		3344042	1					
ANR	3344772	Argument	& h -> cabac		3344042	0					
ANR	3344773	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344774	UnaryOperator	&		3344042	0					
ANR	3344775	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344776	Identifier	h		3344042	0					
ANR	3344777	Identifier	cabac		3344042	1					
ANR	3344778	Argument	& h -> cabac_state [ 16 ]		3344042	1					
ANR	3344779	UnaryOperationExpression	& h -> cabac_state [ 16 ]		3344042	0					
ANR	3344780	UnaryOperator	&		3344042	0					
ANR	3344781	ArrayIndexing	h -> cabac_state [ 16 ]		3344042	1					
ANR	3344782	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344783	Identifier	h		3344042	0					
ANR	3344784	Identifier	cabac_state		3344042	1					
ANR	3344785	PrimaryExpression	16		3344042	1					
ANR	3344786	ElseStatement	else		3344042	0					
ANR	3344787	CompoundStatement		177:19:3675:3675	3344042	0					
ANR	3344788	ExpressionStatement	"mb_type = 2 - get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 17 ] )"	181:16:3785:3850	3344042	0	True				
ANR	3344789	AssignmentExpression	"mb_type = 2 - get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 17 ] )"		3344042	0		=			
ANR	3344790	Identifier	mb_type		3344042	0					
ANR	3344791	AdditiveExpression	"2 - get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 17 ] )"		3344042	1		-			
ANR	3344792	PrimaryExpression	2		3344042	0					
ANR	3344793	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 17 ] )"		3344042	1					
ANR	3344794	Callee	get_cabac_noinline		3344042	0					
ANR	3344795	Identifier	get_cabac_noinline		3344042	0					
ANR	3344796	ArgumentList	& h -> cabac		3344042	1					
ANR	3344797	Argument	& h -> cabac		3344042	0					
ANR	3344798	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3344799	UnaryOperator	&		3344042	0					
ANR	3344800	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3344801	Identifier	h		3344042	0					
ANR	3344802	Identifier	cabac		3344042	1					
ANR	3344803	Argument	& h -> cabac_state [ 17 ]		3344042	1					
ANR	3344804	UnaryOperationExpression	& h -> cabac_state [ 17 ]		3344042	0					
ANR	3344805	UnaryOperator	&		3344042	0					
ANR	3344806	ArrayIndexing	h -> cabac_state [ 17 ]		3344042	1					
ANR	3344807	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3344808	Identifier	h		3344042	0					
ANR	3344809	Identifier	cabac_state		3344042	1					
ANR	3344810	PrimaryExpression	17		3344042	1					
ANR	3344811	ExpressionStatement	partition_count = p_mb_type_info [ mb_type ] . partition_count	185:12:3880:3936	3344042	1	True				
ANR	3344812	AssignmentExpression	partition_count = p_mb_type_info [ mb_type ] . partition_count		3344042	0		=			
ANR	3344813	Identifier	partition_count		3344042	0					
ANR	3344814	MemberAccess	p_mb_type_info [ mb_type ] . partition_count		3344042	1					
ANR	3344815	ArrayIndexing	p_mb_type_info [ mb_type ]		3344042	0					
ANR	3344816	Identifier	p_mb_type_info		3344042	0					
ANR	3344817	Identifier	mb_type		3344042	1					
ANR	3344818	Identifier	partition_count		3344042	1					
ANR	3344819	ExpressionStatement	mb_type = p_mb_type_info [ mb_type ] . type	187:12:3951:3996	3344042	2	True				
ANR	3344820	AssignmentExpression	mb_type = p_mb_type_info [ mb_type ] . type		3344042	0		=			
ANR	3344821	Identifier	mb_type		3344042	0					
ANR	3344822	MemberAccess	p_mb_type_info [ mb_type ] . type		3344042	1					
ANR	3344823	ArrayIndexing	p_mb_type_info [ mb_type ]		3344042	0					
ANR	3344824	Identifier	p_mb_type_info		3344042	0					
ANR	3344825	Identifier	mb_type		3344042	1					
ANR	3344826	Identifier	type		3344042	1					
ANR	3344827	ElseStatement	else		3344042	0					
ANR	3344828	CompoundStatement		189:15:3969:3969	3344042	0					
ANR	3344829	ExpressionStatement	"mb_type = decode_cabac_intra_mb_type ( h , 17 , 0 )"	191:12:4029:4074	3344042	0	True				
ANR	3344830	AssignmentExpression	"mb_type = decode_cabac_intra_mb_type ( h , 17 , 0 )"		3344042	0		=			
ANR	3344831	Identifier	mb_type		3344042	0					
ANR	3344832	CallExpression	"decode_cabac_intra_mb_type ( h , 17 , 0 )"		3344042	1					
ANR	3344833	Callee	decode_cabac_intra_mb_type		3344042	0					
ANR	3344834	Identifier	decode_cabac_intra_mb_type		3344042	0					
ANR	3344835	ArgumentList	h		3344042	1					
ANR	3344836	Argument	h		3344042	0					
ANR	3344837	Identifier	h		3344042	0					
ANR	3344838	Argument	17		3344042	1					
ANR	3344839	PrimaryExpression	17		3344042	0					
ANR	3344840	Argument	0		3344042	2					
ANR	3344841	PrimaryExpression	0		3344042	0					
ANR	3344842	GotoStatement	goto decode_intra_mb ;	193:12:4089:4109	3344042	1	True				
ANR	3344843	Identifier	decode_intra_mb		3344042	0					
ANR	3344844	ElseStatement	else		3344042	0					
ANR	3344845	CompoundStatement		197:11:4089:4089	3344042	0					
ANR	3344846	ExpressionStatement	"mb_type = decode_cabac_intra_mb_type ( h , 3 , 1 )"	199:8:4145:4189	3344042	0	True				
ANR	3344847	AssignmentExpression	"mb_type = decode_cabac_intra_mb_type ( h , 3 , 1 )"		3344042	0		=			
ANR	3344848	Identifier	mb_type		3344042	0					
ANR	3344849	CallExpression	"decode_cabac_intra_mb_type ( h , 3 , 1 )"		3344042	1					
ANR	3344850	Callee	decode_cabac_intra_mb_type		3344042	0					
ANR	3344851	Identifier	decode_cabac_intra_mb_type		3344042	0					
ANR	3344852	ArgumentList	h		3344042	1					
ANR	3344853	Argument	h		3344042	0					
ANR	3344854	Identifier	h		3344042	0					
ANR	3344855	Argument	3		3344042	1					
ANR	3344856	PrimaryExpression	3		3344042	0					
ANR	3344857	Argument	1		3344042	2					
ANR	3344858	PrimaryExpression	1		3344042	0					
ANR	3344859	IfStatement	if ( h -> slice_type == AV_PICTURE_TYPE_SI && mb_type )		3344042	1					
ANR	3344860	Condition	h -> slice_type == AV_PICTURE_TYPE_SI && mb_type	201:11:4203:4248	3344042	0	True				
ANR	3344861	AndExpression	h -> slice_type == AV_PICTURE_TYPE_SI && mb_type		3344042	0		&&			
ANR	3344862	EqualityExpression	h -> slice_type == AV_PICTURE_TYPE_SI		3344042	0		==			
ANR	3344863	PtrMemberAccess	h -> slice_type		3344042	0					
ANR	3344864	Identifier	h		3344042	0					
ANR	3344865	Identifier	slice_type		3344042	1					
ANR	3344866	Identifier	AV_PICTURE_TYPE_SI		3344042	1					
ANR	3344867	Identifier	mb_type		3344042	1					
ANR	3344868	ExpressionStatement	mb_type --	203:12:4264:4273	3344042	1	True				
ANR	3344869	PostIncDecOperationExpression	mb_type --		3344042	0					
ANR	3344870	Identifier	mb_type		3344042	0					
ANR	3344871	IncDec	--		3344042	1					
ANR	3344872	ExpressionStatement	assert ( h -> slice_type_nos == AV_PICTURE_TYPE_I )	205:8:4284:4330	3344042	2	True				
ANR	3344873	CallExpression	assert ( h -> slice_type_nos == AV_PICTURE_TYPE_I )		3344042	0					
ANR	3344874	Callee	assert		3344042	0					
ANR	3344875	Identifier	assert		3344042	0					
ANR	3344876	ArgumentList	h -> slice_type_nos == AV_PICTURE_TYPE_I		3344042	1					
ANR	3344877	Argument	h -> slice_type_nos == AV_PICTURE_TYPE_I		3344042	0					
ANR	3344878	EqualityExpression	h -> slice_type_nos == AV_PICTURE_TYPE_I		3344042	0		==			
ANR	3344879	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3344880	Identifier	h		3344042	0					
ANR	3344881	Identifier	slice_type_nos		3344042	1					
ANR	3344882	Identifier	AV_PICTURE_TYPE_I		3344042	1					
ANR	3344883	Label	decode_intra_mb :	207:0:4333:4348	3344042	3	True				
ANR	3344884	Identifier	decode_intra_mb		3344042	0					
ANR	3344885	ExpressionStatement	partition_count = 0	209:8:4359:4378	3344042	4	True				
ANR	3344886	AssignmentExpression	partition_count = 0		3344042	0		=			
ANR	3344887	Identifier	partition_count		3344042	0					
ANR	3344888	PrimaryExpression	0		3344042	1					
ANR	3344889	ExpressionStatement	cbp = i_mb_type_info [ mb_type ] . cbp	211:8:4389:4421	3344042	5	True				
ANR	3344890	AssignmentExpression	cbp = i_mb_type_info [ mb_type ] . cbp		3344042	0		=			
ANR	3344891	Identifier	cbp		3344042	0					
ANR	3344892	MemberAccess	i_mb_type_info [ mb_type ] . cbp		3344042	1					
ANR	3344893	ArrayIndexing	i_mb_type_info [ mb_type ]		3344042	0					
ANR	3344894	Identifier	i_mb_type_info		3344042	0					
ANR	3344895	Identifier	mb_type		3344042	1					
ANR	3344896	Identifier	cbp		3344042	1					
ANR	3344897	ExpressionStatement	h -> intra16x16_pred_mode = i_mb_type_info [ mb_type ] . pred_mode	213:8:4432:4490	3344042	6	True				
ANR	3344898	AssignmentExpression	h -> intra16x16_pred_mode = i_mb_type_info [ mb_type ] . pred_mode		3344042	0		=			
ANR	3344899	PtrMemberAccess	h -> intra16x16_pred_mode		3344042	0					
ANR	3344900	Identifier	h		3344042	0					
ANR	3344901	Identifier	intra16x16_pred_mode		3344042	1					
ANR	3344902	MemberAccess	i_mb_type_info [ mb_type ] . pred_mode		3344042	1					
ANR	3344903	ArrayIndexing	i_mb_type_info [ mb_type ]		3344042	0					
ANR	3344904	Identifier	i_mb_type_info		3344042	0					
ANR	3344905	Identifier	mb_type		3344042	1					
ANR	3344906	Identifier	pred_mode		3344042	1					
ANR	3344907	ExpressionStatement	mb_type = i_mb_type_info [ mb_type ] . type	215:8:4501:4538	3344042	7	True				
ANR	3344908	AssignmentExpression	mb_type = i_mb_type_info [ mb_type ] . type		3344042	0		=			
ANR	3344909	Identifier	mb_type		3344042	0					
ANR	3344910	MemberAccess	i_mb_type_info [ mb_type ] . type		3344042	1					
ANR	3344911	ArrayIndexing	i_mb_type_info [ mb_type ]		3344042	0					
ANR	3344912	Identifier	i_mb_type_info		3344042	0					
ANR	3344913	Identifier	mb_type		3344042	1					
ANR	3344914	Identifier	type		3344042	1					
ANR	3344915	IfStatement	if ( MB_FIELD )		3344042	16					
ANR	3344916	Condition	MB_FIELD	219:7:4555:4562	3344042	0	True				
ANR	3344917	Identifier	MB_FIELD		3344042	0					
ANR	3344918	ExpressionStatement	mb_type |= MB_TYPE_INTERLACED	221:8:4574:4603	3344042	1	True				
ANR	3344919	AssignmentExpression	mb_type |= MB_TYPE_INTERLACED		3344042	0		|=			
ANR	3344920	Identifier	mb_type		3344042	0					
ANR	3344921	Identifier	MB_TYPE_INTERLACED		3344042	1					
ANR	3344922	ExpressionStatement	h -> slice_table [ mb_xy ] = h -> slice_num	225:4:4612:4649	3344042	17	True				
ANR	3344923	AssignmentExpression	h -> slice_table [ mb_xy ] = h -> slice_num		3344042	0		=			
ANR	3344924	ArrayIndexing	h -> slice_table [ mb_xy ]		3344042	0					
ANR	3344925	PtrMemberAccess	h -> slice_table		3344042	0					
ANR	3344926	Identifier	h		3344042	0					
ANR	3344927	Identifier	slice_table		3344042	1					
ANR	3344928	Identifier	mb_xy		3344042	1					
ANR	3344929	PtrMemberAccess	h -> slice_num		3344042	1					
ANR	3344930	Identifier	h		3344042	0					
ANR	3344931	Identifier	slice_num		3344042	1					
ANR	3344932	IfStatement	if ( IS_INTRA_PCM ( mb_type ) )		3344042	18					
ANR	3344933	Condition	IS_INTRA_PCM ( mb_type )	229:7:4661:4681	3344042	0	True				
ANR	3344934	CallExpression	IS_INTRA_PCM ( mb_type )		3344042	0					
ANR	3344935	Callee	IS_INTRA_PCM		3344042	0					
ANR	3344936	Identifier	IS_INTRA_PCM		3344042	0					
ANR	3344937	ArgumentList	mb_type		3344042	1					
ANR	3344938	Argument	mb_type		3344042	0					
ANR	3344939	Identifier	mb_type		3344042	0					
ANR	3344940	CompoundStatement		235:8:4806:4824	3344042	1					
ANR	3344941	Statement	static	231:8:4695:4700	3344042	0	True				
ANR	3344942	IdentifierDeclStatement	"const uint16_t mb_sizes [ 4 ] = { 256 , 384 , 512 , 768 } ;"	231:15:4702:4748	3344042	1	True				
ANR	3344943	IdentifierDecl	"mb_sizes [ 4 ] = { 256 , 384 , 512 , 768 }"		3344042	0					
ANR	3344944	IdentifierDeclType	const uint16_t [ 4 ]		3344042	0					
ANR	3344945	Identifier	mb_sizes		3344042	1					
ANR	3344946	PrimaryExpression	4		3344042	2					
ANR	3344947	AssignmentExpression	"mb_sizes [ 4 ] = { 256 , 384 , 512 , 768 }"		3344042	3		=			
ANR	3344948	Identifier	mb_sizes		3344042	0					
ANR	3344949	InitializerList	256		3344042	1					
ANR	3344950	PrimaryExpression	256		3344042	0					
ANR	3344951	PrimaryExpression	384		3344042	1					
ANR	3344952	PrimaryExpression	512		3344042	2					
ANR	3344953	PrimaryExpression	768		3344042	3					
ANR	3344954	IdentifierDeclStatement	const int mb_size = mb_sizes [ h -> sps . chroma_format_idc ] * h -> sps . bit_depth_luma >> 3 ;	233:8:4759:4840	3344042	2	True				
ANR	3344955	IdentifierDecl	mb_size = mb_sizes [ h -> sps . chroma_format_idc ] * h -> sps . bit_depth_luma >> 3		3344042	0					
ANR	3344956	IdentifierDeclType	const int		3344042	0					
ANR	3344957	Identifier	mb_size		3344042	1					
ANR	3344958	AssignmentExpression	mb_size = mb_sizes [ h -> sps . chroma_format_idc ] * h -> sps . bit_depth_luma >> 3		3344042	2		=			
ANR	3344959	Identifier	mb_size		3344042	0					
ANR	3344960	ShiftExpression	mb_sizes [ h -> sps . chroma_format_idc ] * h -> sps . bit_depth_luma >> 3		3344042	1		>>			
ANR	3344961	MultiplicativeExpression	mb_sizes [ h -> sps . chroma_format_idc ] * h -> sps . bit_depth_luma		3344042	0		*			
ANR	3344962	ArrayIndexing	mb_sizes [ h -> sps . chroma_format_idc ]		3344042	0					
ANR	3344963	Identifier	mb_sizes		3344042	0					
ANR	3344964	MemberAccess	h -> sps . chroma_format_idc		3344042	1					
ANR	3344965	PtrMemberAccess	h -> sps		3344042	0					
ANR	3344966	Identifier	h		3344042	0					
ANR	3344967	Identifier	sps		3344042	1					
ANR	3344968	Identifier	chroma_format_idc		3344042	1					
ANR	3344969	MemberAccess	h -> sps . bit_depth_luma		3344042	1					
ANR	3344970	PtrMemberAccess	h -> sps		3344042	0					
ANR	3344971	Identifier	h		3344042	0					
ANR	3344972	Identifier	sps		3344042	1					
ANR	3344973	Identifier	bit_depth_luma		3344042	1					
ANR	3344974	PrimaryExpression	3		3344042	1					
ANR	3344975	IdentifierDeclStatement	const uint8_t * ptr ;	235:8:4851:4869	3344042	3	True				
ANR	3344976	IdentifierDecl	* ptr		3344042	0					
ANR	3344977	IdentifierDeclType	const uint8_t *		3344042	0					
ANR	3344978	Identifier	ptr		3344042	1					
ANR	3344979	ExpressionStatement	ptr = h -> cabac . bytestream	245:8:5124:5148	3344042	4	True				
ANR	3344980	AssignmentExpression	ptr = h -> cabac . bytestream		3344042	0		=			
ANR	3344981	Identifier	ptr		3344042	0					
ANR	3344982	MemberAccess	h -> cabac . bytestream		3344042	1					
ANR	3344983	PtrMemberAccess	h -> cabac		3344042	0					
ANR	3344984	Identifier	h		3344042	0					
ANR	3344985	Identifier	cabac		3344042	1					
ANR	3344986	Identifier	bytestream		3344042	1					
ANR	3344987	IfStatement	if ( h -> cabac . low & 0x1 )		3344042	5					
ANR	3344988	Condition	h -> cabac . low & 0x1	247:11:5162:5177	3344042	0	True				
ANR	3344989	BitAndExpression	h -> cabac . low & 0x1		3344042	0		&			
ANR	3344990	MemberAccess	h -> cabac . low		3344042	0					
ANR	3344991	PtrMemberAccess	h -> cabac		3344042	0					
ANR	3344992	Identifier	h		3344042	0					
ANR	3344993	Identifier	cabac		3344042	1					
ANR	3344994	Identifier	low		3344042	1					
ANR	3344995	PrimaryExpression	0x1		3344042	1					
ANR	3344996	ExpressionStatement	ptr --	247:29:5180:5185	3344042	1	True				
ANR	3344997	PostIncDecOperationExpression	ptr --		3344042	0					
ANR	3344998	Identifier	ptr		3344042	0					
ANR	3344999	IncDec	--		3344042	1					
ANR	3345000	IfStatement	if ( CABAC_BITS == 16 )		3344042	6					
ANR	3345001	Condition	CABAC_BITS == 16	249:11:5199:5212	3344042	0	True				
ANR	3345002	EqualityExpression	CABAC_BITS == 16		3344042	0		==			
ANR	3345003	Identifier	CABAC_BITS		3344042	0					
ANR	3345004	PrimaryExpression	16		3344042	1					
ANR	3345005	CompoundStatement		249:26:5169:5169	3344042	1					
ANR	3345006	IfStatement	if ( h -> cabac . low & 0x1FF )		3344042	0					
ANR	3345007	Condition	h -> cabac . low & 0x1FF	251:15:5232:5249	3344042	0	True				
ANR	3345008	BitAndExpression	h -> cabac . low & 0x1FF		3344042	0		&			
ANR	3345009	MemberAccess	h -> cabac . low		3344042	0					
ANR	3345010	PtrMemberAccess	h -> cabac		3344042	0					
ANR	3345011	Identifier	h		3344042	0					
ANR	3345012	Identifier	cabac		3344042	1					
ANR	3345013	Identifier	low		3344042	1					
ANR	3345014	PrimaryExpression	0x1FF		3344042	1					
ANR	3345015	ExpressionStatement	ptr --	251:35:5252:5257	3344042	1	True				
ANR	3345016	PostIncDecOperationExpression	ptr --		3344042	0					
ANR	3345017	Identifier	ptr		3344042	0					
ANR	3345018	IncDec	--		3344042	1					
ANR	3345019	ExpressionStatement	"memcpy ( h -> mb , ptr , mb_size )"	261:8:5361:5388	3344042	7	True				
ANR	3345020	CallExpression	"memcpy ( h -> mb , ptr , mb_size )"		3344042	0					
ANR	3345021	Callee	memcpy		3344042	0					
ANR	3345022	Identifier	memcpy		3344042	0					
ANR	3345023	ArgumentList	h -> mb		3344042	1					
ANR	3345024	Argument	h -> mb		3344042	0					
ANR	3345025	PtrMemberAccess	h -> mb		3344042	0					
ANR	3345026	Identifier	h		3344042	0					
ANR	3345027	Identifier	mb		3344042	1					
ANR	3345028	Argument	ptr		3344042	1					
ANR	3345029	Identifier	ptr		3344042	0					
ANR	3345030	Argument	mb_size		3344042	2					
ANR	3345031	Identifier	mb_size		3344042	0					
ANR	3345032	ExpressionStatement	ptr += mb_size	261:37:5390:5402	3344042	8	True				
ANR	3345033	AssignmentExpression	ptr += mb_size		3344042	0		+=			
ANR	3345034	Identifier	ptr		3344042	0					
ANR	3345035	Identifier	mb_size		3344042	1					
ANR	3345036	ExpressionStatement	"ff_init_cabac_decoder ( & h -> cabac , ptr , h -> cabac . bytestream_end - ptr )"	265:8:5415:5483	3344042	9	True				
ANR	3345037	CallExpression	"ff_init_cabac_decoder ( & h -> cabac , ptr , h -> cabac . bytestream_end - ptr )"		3344042	0					
ANR	3345038	Callee	ff_init_cabac_decoder		3344042	0					
ANR	3345039	Identifier	ff_init_cabac_decoder		3344042	0					
ANR	3345040	ArgumentList	& h -> cabac		3344042	1					
ANR	3345041	Argument	& h -> cabac		3344042	0					
ANR	3345042	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3345043	UnaryOperator	&		3344042	0					
ANR	3345044	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3345045	Identifier	h		3344042	0					
ANR	3345046	Identifier	cabac		3344042	1					
ANR	3345047	Argument	ptr		3344042	1					
ANR	3345048	Identifier	ptr		3344042	0					
ANR	3345049	Argument	h -> cabac . bytestream_end - ptr		3344042	2					
ANR	3345050	AdditiveExpression	h -> cabac . bytestream_end - ptr		3344042	0		-			
ANR	3345051	MemberAccess	h -> cabac . bytestream_end		3344042	0					
ANR	3345052	PtrMemberAccess	h -> cabac		3344042	0					
ANR	3345053	Identifier	h		3344042	0					
ANR	3345054	Identifier	cabac		3344042	1					
ANR	3345055	Identifier	bytestream_end		3344042	1					
ANR	3345056	Identifier	ptr		3344042	1					
ANR	3345057	ExpressionStatement	h -> cbp_table [ mb_xy ] = 0xf7ef	271:8:5531:5559	3344042	10	True				
ANR	3345058	AssignmentExpression	h -> cbp_table [ mb_xy ] = 0xf7ef		3344042	0		=			
ANR	3345059	ArrayIndexing	h -> cbp_table [ mb_xy ]		3344042	0					
ANR	3345060	PtrMemberAccess	h -> cbp_table		3344042	0					
ANR	3345061	Identifier	h		3344042	0					
ANR	3345062	Identifier	cbp_table		3344042	1					
ANR	3345063	Identifier	mb_xy		3344042	1					
ANR	3345064	PrimaryExpression	0xf7ef		3344042	1					
ANR	3345065	ExpressionStatement	h -> chroma_pred_mode_table [ mb_xy ] = 0	273:8:5570:5606	3344042	11	True				
ANR	3345066	AssignmentExpression	h -> chroma_pred_mode_table [ mb_xy ] = 0		3344042	0		=			
ANR	3345067	ArrayIndexing	h -> chroma_pred_mode_table [ mb_xy ]		3344042	0					
ANR	3345068	PtrMemberAccess	h -> chroma_pred_mode_table		3344042	0					
ANR	3345069	Identifier	h		3344042	0					
ANR	3345070	Identifier	chroma_pred_mode_table		3344042	1					
ANR	3345071	Identifier	mb_xy		3344042	1					
ANR	3345072	PrimaryExpression	0		3344042	1					
ANR	3345073	ExpressionStatement	s -> current_picture . f . qscale_table [ mb_xy ] = 0	277:8:5663:5707	3344042	12	True				
ANR	3345074	AssignmentExpression	s -> current_picture . f . qscale_table [ mb_xy ] = 0		3344042	0		=			
ANR	3345075	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_xy ]		3344042	0					
ANR	3345076	MemberAccess	s -> current_picture . f . qscale_table		3344042	0					
ANR	3345077	MemberAccess	s -> current_picture . f		3344042	0					
ANR	3345078	PtrMemberAccess	s -> current_picture		3344042	0					
ANR	3345079	Identifier	s		3344042	0					
ANR	3345080	Identifier	current_picture		3344042	1					
ANR	3345081	Identifier	f		3344042	1					
ANR	3345082	Identifier	qscale_table		3344042	1					
ANR	3345083	Identifier	mb_xy		3344042	1					
ANR	3345084	PrimaryExpression	0		3344042	1					
ANR	3345085	ExpressionStatement	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 48 )"	281:8:5753:5793	3344042	13	True				
ANR	3345086	CallExpression	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 48 )"		3344042	0					
ANR	3345087	Callee	memset		3344042	0					
ANR	3345088	Identifier	memset		3344042	0					
ANR	3345089	ArgumentList	h -> non_zero_count [ mb_xy ]		3344042	1					
ANR	3345090	Argument	h -> non_zero_count [ mb_xy ]		3344042	0					
ANR	3345091	ArrayIndexing	h -> non_zero_count [ mb_xy ]		3344042	0					
ANR	3345092	PtrMemberAccess	h -> non_zero_count		3344042	0					
ANR	3345093	Identifier	h		3344042	0					
ANR	3345094	Identifier	non_zero_count		3344042	1					
ANR	3345095	Identifier	mb_xy		3344042	1					
ANR	3345096	Argument	16		3344042	1					
ANR	3345097	PrimaryExpression	16		3344042	0					
ANR	3345098	Argument	48		3344042	2					
ANR	3345099	PrimaryExpression	48		3344042	0					
ANR	3345100	ExpressionStatement	s -> current_picture . f . mb_type [ mb_xy ] = mb_type	283:8:5804:5849	3344042	14	True				
ANR	3345101	AssignmentExpression	s -> current_picture . f . mb_type [ mb_xy ] = mb_type		3344042	0		=			
ANR	3345102	ArrayIndexing	s -> current_picture . f . mb_type [ mb_xy ]		3344042	0					
ANR	3345103	MemberAccess	s -> current_picture . f . mb_type		3344042	0					
ANR	3345104	MemberAccess	s -> current_picture . f		3344042	0					
ANR	3345105	PtrMemberAccess	s -> current_picture		3344042	0					
ANR	3345106	Identifier	s		3344042	0					
ANR	3345107	Identifier	current_picture		3344042	1					
ANR	3345108	Identifier	f		3344042	1					
ANR	3345109	Identifier	mb_type		3344042	1					
ANR	3345110	Identifier	mb_xy		3344042	1					
ANR	3345111	Identifier	mb_type		3344042	1					
ANR	3345112	ExpressionStatement	h -> last_qscale_diff = 0	285:8:5860:5883	3344042	15	True				
ANR	3345113	AssignmentExpression	h -> last_qscale_diff = 0		3344042	0		=			
ANR	3345114	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3345115	Identifier	h		3344042	0					
ANR	3345116	Identifier	last_qscale_diff		3344042	1					
ANR	3345117	PrimaryExpression	0		3344042	1					
ANR	3345118	ReturnStatement	return 0 ;	287:8:5894:5902	3344042	16	True				
ANR	3345119	PrimaryExpression	0		3344042	0					
ANR	3345120	IfStatement	if ( MB_MBAFF )		3344042	19					
ANR	3345121	Condition	MB_MBAFF	293:7:5921:5928	3344042	0	True				
ANR	3345122	Identifier	MB_MBAFF		3344042	0					
ANR	3345123	CompoundStatement		293:16:5885:5885	3344042	1					
ANR	3345124	ExpressionStatement	h -> ref_count [ 0 ] <<= 1	295:8:5941:5962	3344042	0	True				
ANR	3345125	AssignmentExpression	h -> ref_count [ 0 ] <<= 1		3344042	0		<<=			
ANR	3345126	ArrayIndexing	h -> ref_count [ 0 ]		3344042	0					
ANR	3345127	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3345128	Identifier	h		3344042	0					
ANR	3345129	Identifier	ref_count		3344042	1					
ANR	3345130	PrimaryExpression	0		3344042	1					
ANR	3345131	PrimaryExpression	1		3344042	1					
ANR	3345132	ExpressionStatement	h -> ref_count [ 1 ] <<= 1	297:8:5973:5994	3344042	1	True				
ANR	3345133	AssignmentExpression	h -> ref_count [ 1 ] <<= 1		3344042	0		<<=			
ANR	3345134	ArrayIndexing	h -> ref_count [ 1 ]		3344042	0					
ANR	3345135	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3345136	Identifier	h		3344042	0					
ANR	3345137	Identifier	ref_count		3344042	1					
ANR	3345138	PrimaryExpression	1		3344042	1					
ANR	3345139	PrimaryExpression	1		3344042	1					
ANR	3345140	ExpressionStatement	"fill_decode_caches ( h , mb_type )"	303:4:6010:6040	3344042	20	True				
ANR	3345141	CallExpression	"fill_decode_caches ( h , mb_type )"		3344042	0					
ANR	3345142	Callee	fill_decode_caches		3344042	0					
ANR	3345143	Identifier	fill_decode_caches		3344042	0					
ANR	3345144	ArgumentList	h		3344042	1					
ANR	3345145	Argument	h		3344042	0					
ANR	3345146	Identifier	h		3344042	0					
ANR	3345147	Argument	mb_type		3344042	1					
ANR	3345148	Identifier	mb_type		3344042	0					
ANR	3345149	IfStatement	if ( IS_INTRA ( mb_type ) )		3344042	21					
ANR	3345150	Condition	IS_INTRA ( mb_type )	307:8:6053:6071	3344042	0	True				
ANR	3345151	CallExpression	IS_INTRA ( mb_type )		3344042	0					
ANR	3345152	Callee	IS_INTRA		3344042	0					
ANR	3345153	Identifier	IS_INTRA		3344042	0					
ANR	3345154	ArgumentList	mb_type		3344042	1					
ANR	3345155	Argument	mb_type		3344042	0					
ANR	3345156	Identifier	mb_type		3344042	0					
ANR	3345157	CompoundStatement		309:8:6041:6057	3344042	1					
ANR	3345158	IdentifierDeclStatement	"int i , pred_mode ;"	309:8:6086:6102	3344042	0	True				
ANR	3345159	IdentifierDecl	i		3344042	0					
ANR	3345160	IdentifierDeclType	int		3344042	0					
ANR	3345161	Identifier	i		3344042	1					
ANR	3345162	IdentifierDecl	pred_mode		3344042	1					
ANR	3345163	IdentifierDeclType	int		3344042	0					
ANR	3345164	Identifier	pred_mode		3344042	1					
ANR	3345165	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3344042	1					
ANR	3345166	Condition	IS_INTRA4x4 ( mb_type )	311:12:6117:6138	3344042	0	True				
ANR	3345167	CallExpression	IS_INTRA4x4 ( mb_type )		3344042	0					
ANR	3345168	Callee	IS_INTRA4x4		3344042	0					
ANR	3345169	Identifier	IS_INTRA4x4		3344042	0					
ANR	3345170	ArgumentList	mb_type		3344042	1					
ANR	3345171	Argument	mb_type		3344042	0					
ANR	3345172	Identifier	mb_type		3344042	0					
ANR	3345173	CompoundStatement		311:37:6097:6097	3344042	1					
ANR	3345174	IfStatement	"if ( dct8x8_allowed && get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] ) )"		3344042	0					
ANR	3345175	Condition	"dct8x8_allowed && get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"	313:16:6161:6260	3344042	0	True				
ANR	3345176	AndExpression	"dct8x8_allowed && get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"		3344042	0		&&			
ANR	3345177	Identifier	dct8x8_allowed		3344042	0					
ANR	3345178	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"		3344042	1					
ANR	3345179	Callee	get_cabac_noinline		3344042	0					
ANR	3345180	Identifier	get_cabac_noinline		3344042	0					
ANR	3345181	ArgumentList	& h -> cabac		3344042	1					
ANR	3345182	Argument	& h -> cabac		3344042	0					
ANR	3345183	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3345184	UnaryOperator	&		3344042	0					
ANR	3345185	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3345186	Identifier	h		3344042	0					
ANR	3345187	Identifier	cabac		3344042	1					
ANR	3345188	Argument	& h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	1					
ANR	3345189	UnaryOperationExpression	& h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	0					
ANR	3345190	UnaryOperator	&		3344042	0					
ANR	3345191	ArrayIndexing	h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	1					
ANR	3345192	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3345193	Identifier	h		3344042	0					
ANR	3345194	Identifier	cabac_state		3344042	1					
ANR	3345195	AdditiveExpression	399 + h -> neighbor_transform_size		3344042	1		+			
ANR	3345196	PrimaryExpression	399		3344042	0					
ANR	3345197	PtrMemberAccess	h -> neighbor_transform_size		3344042	1					
ANR	3345198	Identifier	h		3344042	0					
ANR	3345199	Identifier	neighbor_transform_size		3344042	1					
ANR	3345200	CompoundStatement		313:119:6219:6219	3344042	1					
ANR	3345201	ExpressionStatement	mb_type |= MB_TYPE_8x8DCT	315:16:6283:6308	3344042	0	True				
ANR	3345202	AssignmentExpression	mb_type |= MB_TYPE_8x8DCT		3344042	0		|=			
ANR	3345203	Identifier	mb_type		3344042	0					
ANR	3345204	Identifier	MB_TYPE_8x8DCT		3344042	1					
ANR	3345205	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		3344042	1					
ANR	3345206	ForInit	i = 0 ;	317:21:6332:6337	3344042	0	True				
ANR	3345207	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345208	Identifier	i		3344042	0					
ANR	3345209	PrimaryExpression	0		3344042	1					
ANR	3345210	Condition	i < 16	317:28:6339:6344	3344042	1	True				
ANR	3345211	RelationalExpression	i < 16		3344042	0		<			
ANR	3345212	Identifier	i		3344042	0					
ANR	3345213	PrimaryExpression	16		3344042	1					
ANR	3345214	AssignmentExpression	i += 4	317:36:6347:6350	3344042	2	True	+=			
ANR	3345215	Identifier	i		3344042	0					
ANR	3345216	PrimaryExpression	4		3344042	1					
ANR	3345217	CompoundStatement		321:20:6389:6445	3344042	3					
ANR	3345218	IdentifierDeclStatement	"int pred = pred_intra_mode ( h , i ) ;"	319:20:6377:6411	3344042	0	True				
ANR	3345219	IdentifierDecl	"pred = pred_intra_mode ( h , i )"		3344042	0					
ANR	3345220	IdentifierDeclType	int		3344042	0					
ANR	3345221	Identifier	pred		3344042	1					
ANR	3345222	AssignmentExpression	"pred = pred_intra_mode ( h , i )"		3344042	2		=			
ANR	3345223	Identifier	pred		3344042	0					
ANR	3345224	CallExpression	"pred_intra_mode ( h , i )"		3344042	1					
ANR	3345225	Callee	pred_intra_mode		3344042	0					
ANR	3345226	Identifier	pred_intra_mode		3344042	0					
ANR	3345227	ArgumentList	h		3344042	1					
ANR	3345228	Argument	h		3344042	0					
ANR	3345229	Identifier	h		3344042	0					
ANR	3345230	Argument	i		3344042	1					
ANR	3345231	Identifier	i		3344042	0					
ANR	3345232	IdentifierDeclStatement	"int mode = decode_cabac_mb_intra4x4_pred_mode ( h , pred ) ;"	321:20:6434:6490	3344042	1	True				
ANR	3345233	IdentifierDecl	"mode = decode_cabac_mb_intra4x4_pred_mode ( h , pred )"		3344042	0					
ANR	3345234	IdentifierDeclType	int		3344042	0					
ANR	3345235	Identifier	mode		3344042	1					
ANR	3345236	AssignmentExpression	"mode = decode_cabac_mb_intra4x4_pred_mode ( h , pred )"		3344042	2		=			
ANR	3345237	Identifier	mode		3344042	0					
ANR	3345238	CallExpression	"decode_cabac_mb_intra4x4_pred_mode ( h , pred )"		3344042	1					
ANR	3345239	Callee	decode_cabac_mb_intra4x4_pred_mode		3344042	0					
ANR	3345240	Identifier	decode_cabac_mb_intra4x4_pred_mode		3344042	0					
ANR	3345241	ArgumentList	h		3344042	1					
ANR	3345242	Argument	h		3344042	0					
ANR	3345243	Identifier	h		3344042	0					
ANR	3345244	Argument	pred		3344042	1					
ANR	3345245	Identifier	pred		3344042	0					
ANR	3345246	ExpressionStatement	"fill_rectangle ( & h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"	323:20:6513:6589	3344042	2	True				
ANR	3345247	CallExpression	"fill_rectangle ( & h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"		3344042	0					
ANR	3345248	Callee	fill_rectangle		3344042	0					
ANR	3345249	Identifier	fill_rectangle		3344042	0					
ANR	3345250	ArgumentList	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3344042	1					
ANR	3345251	Argument	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3344042	0					
ANR	3345252	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3344042	0					
ANR	3345253	UnaryOperator	&		3344042	0					
ANR	3345254	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3344042	1					
ANR	3345255	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3344042	0					
ANR	3345256	Identifier	h		3344042	0					
ANR	3345257	Identifier	intra4x4_pred_mode_cache		3344042	1					
ANR	3345258	ArrayIndexing	scan8 [ i ]		3344042	1					
ANR	3345259	Identifier	scan8		3344042	0					
ANR	3345260	Identifier	i		3344042	1					
ANR	3345261	Argument	2		3344042	1					
ANR	3345262	PrimaryExpression	2		3344042	0					
ANR	3345263	Argument	2		3344042	2					
ANR	3345264	PrimaryExpression	2		3344042	0					
ANR	3345265	Argument	8		3344042	3					
ANR	3345266	PrimaryExpression	8		3344042	0					
ANR	3345267	Argument	mode		3344042	4					
ANR	3345268	Identifier	mode		3344042	0					
ANR	3345269	Argument	1		3344042	5					
ANR	3345270	PrimaryExpression	1		3344042	0					
ANR	3345271	ElseStatement	else		3344042	0					
ANR	3345272	CompoundStatement		327:19:6585:6585	3344042	0					
ANR	3345273	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		3344042	0					
ANR	3345274	ForInit	i = 0 ;	329:21:6654:6659	3344042	0	True				
ANR	3345275	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345276	Identifier	i		3344042	0					
ANR	3345277	PrimaryExpression	0		3344042	1					
ANR	3345278	Condition	i < 16	329:28:6661:6666	3344042	1	True				
ANR	3345279	RelationalExpression	i < 16		3344042	0		<			
ANR	3345280	Identifier	i		3344042	0					
ANR	3345281	PrimaryExpression	16		3344042	1					
ANR	3345282	PostIncDecOperationExpression	i ++	329:36:6669:6671	3344042	2	True				
ANR	3345283	Identifier	i		3344042	0					
ANR	3345284	IncDec	++		3344042	1					
ANR	3345285	CompoundStatement		331:20:6653:6687	3344042	3					
ANR	3345286	IdentifierDeclStatement	"int pred = pred_intra_mode ( h , i ) ;"	331:20:6698:6732	3344042	0	True				
ANR	3345287	IdentifierDecl	"pred = pred_intra_mode ( h , i )"		3344042	0					
ANR	3345288	IdentifierDeclType	int		3344042	0					
ANR	3345289	Identifier	pred		3344042	1					
ANR	3345290	AssignmentExpression	"pred = pred_intra_mode ( h , i )"		3344042	2		=			
ANR	3345291	Identifier	pred		3344042	0					
ANR	3345292	CallExpression	"pred_intra_mode ( h , i )"		3344042	1					
ANR	3345293	Callee	pred_intra_mode		3344042	0					
ANR	3345294	Identifier	pred_intra_mode		3344042	0					
ANR	3345295	ArgumentList	h		3344042	1					
ANR	3345296	Argument	h		3344042	0					
ANR	3345297	Identifier	h		3344042	0					
ANR	3345298	Argument	i		3344042	1					
ANR	3345299	Identifier	i		3344042	0					
ANR	3345300	ExpressionStatement	"h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = decode_cabac_mb_intra4x4_pred_mode ( h , pred )"	333:20:6755:6842	3344042	1	True				
ANR	3345301	AssignmentExpression	"h -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = decode_cabac_mb_intra4x4_pred_mode ( h , pred )"		3344042	0		=			
ANR	3345302	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3344042	0					
ANR	3345303	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3344042	0					
ANR	3345304	Identifier	h		3344042	0					
ANR	3345305	Identifier	intra4x4_pred_mode_cache		3344042	1					
ANR	3345306	ArrayIndexing	scan8 [ i ]		3344042	1					
ANR	3345307	Identifier	scan8		3344042	0					
ANR	3345308	Identifier	i		3344042	1					
ANR	3345309	CallExpression	"decode_cabac_mb_intra4x4_pred_mode ( h , pred )"		3344042	1					
ANR	3345310	Callee	decode_cabac_mb_intra4x4_pred_mode		3344042	0					
ANR	3345311	Identifier	decode_cabac_mb_intra4x4_pred_mode		3344042	0					
ANR	3345312	ArgumentList	h		3344042	1					
ANR	3345313	Argument	h		3344042	0					
ANR	3345314	Identifier	h		3344042	0					
ANR	3345315	Argument	pred		3344042	1					
ANR	3345316	Identifier	pred		3344042	0					
ANR	3345317	ExpressionStatement	write_back_intra_pred_mode ( h )	343:12:7019:7048	3344042	1	True				
ANR	3345318	CallExpression	write_back_intra_pred_mode ( h )		3344042	0					
ANR	3345319	Callee	write_back_intra_pred_mode		3344042	0					
ANR	3345320	Identifier	write_back_intra_pred_mode		3344042	0					
ANR	3345321	ArgumentList	h		3344042	1					
ANR	3345322	Argument	h		3344042	0					
ANR	3345323	Identifier	h		3344042	0					
ANR	3345324	IfStatement	if ( ff_h264_check_intra4x4_pred_mode ( h ) < 0 )		3344042	2					
ANR	3345325	Condition	ff_h264_check_intra4x4_pred_mode ( h ) < 0	345:16:7067:7105	3344042	0	True				
ANR	3345326	RelationalExpression	ff_h264_check_intra4x4_pred_mode ( h ) < 0		3344042	0		<			
ANR	3345327	CallExpression	ff_h264_check_intra4x4_pred_mode ( h )		3344042	0					
ANR	3345328	Callee	ff_h264_check_intra4x4_pred_mode		3344042	0					
ANR	3345329	Identifier	ff_h264_check_intra4x4_pred_mode		3344042	0					
ANR	3345330	ArgumentList	h		3344042	1					
ANR	3345331	Argument	h		3344042	0					
ANR	3345332	Identifier	h		3344042	0					
ANR	3345333	PrimaryExpression	0		3344042	1					
ANR	3345334	ReturnStatement	return - 1 ;	345:58:7109:7118	3344042	1	True				
ANR	3345335	UnaryOperationExpression	- 1		3344042	0					
ANR	3345336	UnaryOperator	-		3344042	0					
ANR	3345337	PrimaryExpression	1		3344042	1					
ANR	3345338	ElseStatement	else		3344042	0					
ANR	3345339	CompoundStatement		347:15:7091:7091	3344042	0					
ANR	3345340	ExpressionStatement	"h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode , 0 )"	349:12:7151:7238	3344042	0	True				
ANR	3345341	AssignmentExpression	"h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode , 0 )"		3344042	0		=			
ANR	3345342	PtrMemberAccess	h -> intra16x16_pred_mode		3344042	0					
ANR	3345343	Identifier	h		3344042	0					
ANR	3345344	Identifier	intra16x16_pred_mode		3344042	1					
ANR	3345345	CallExpression	"ff_h264_check_intra_pred_mode ( h , h -> intra16x16_pred_mode , 0 )"		3344042	1					
ANR	3345346	Callee	ff_h264_check_intra_pred_mode		3344042	0					
ANR	3345347	Identifier	ff_h264_check_intra_pred_mode		3344042	0					
ANR	3345348	ArgumentList	h		3344042	1					
ANR	3345349	Argument	h		3344042	0					
ANR	3345350	Identifier	h		3344042	0					
ANR	3345351	Argument	h -> intra16x16_pred_mode		3344042	1					
ANR	3345352	PtrMemberAccess	h -> intra16x16_pred_mode		3344042	0					
ANR	3345353	Identifier	h		3344042	0					
ANR	3345354	Identifier	intra16x16_pred_mode		3344042	1					
ANR	3345355	Argument	0		3344042	2					
ANR	3345356	PrimaryExpression	0		3344042	0					
ANR	3345357	IfStatement	if ( h -> intra16x16_pred_mode < 0 )		3344042	1					
ANR	3345358	Condition	h -> intra16x16_pred_mode < 0	351:16:7257:7283	3344042	0	True				
ANR	3345359	RelationalExpression	h -> intra16x16_pred_mode < 0		3344042	0		<			
ANR	3345360	PtrMemberAccess	h -> intra16x16_pred_mode		3344042	0					
ANR	3345361	Identifier	h		3344042	0					
ANR	3345362	Identifier	intra16x16_pred_mode		3344042	1					
ANR	3345363	PrimaryExpression	0		3344042	1					
ANR	3345364	ReturnStatement	return - 1 ;	351:46:7287:7296	3344042	1	True				
ANR	3345365	UnaryOperationExpression	- 1		3344042	0					
ANR	3345366	UnaryOperator	-		3344042	0					
ANR	3345367	PrimaryExpression	1		3344042	1					
ANR	3345368	IfStatement	if ( decode_chroma )		3344042	2					
ANR	3345369	Condition	decode_chroma	355:11:7321:7333	3344042	0	True				
ANR	3345370	Identifier	decode_chroma		3344042	0					
ANR	3345371	CompoundStatement		355:25:7290:7290	3344042	1					
ANR	3345372	ExpressionStatement	h -> chroma_pred_mode_table [ mb_xy ] = pred_mode = decode_cabac_mb_chroma_pre_mode ( h )	357:12:7350:7469	3344042	0	True				
ANR	3345373	AssignmentExpression	h -> chroma_pred_mode_table [ mb_xy ] = pred_mode = decode_cabac_mb_chroma_pre_mode ( h )		3344042	0		=			
ANR	3345374	ArrayIndexing	h -> chroma_pred_mode_table [ mb_xy ]		3344042	0					
ANR	3345375	PtrMemberAccess	h -> chroma_pred_mode_table		3344042	0					
ANR	3345376	Identifier	h		3344042	0					
ANR	3345377	Identifier	chroma_pred_mode_table		3344042	1					
ANR	3345378	Identifier	mb_xy		3344042	1					
ANR	3345379	AssignmentExpression	pred_mode = decode_cabac_mb_chroma_pre_mode ( h )		3344042	1		=			
ANR	3345380	Identifier	pred_mode		3344042	0					
ANR	3345381	CallExpression	decode_cabac_mb_chroma_pre_mode ( h )		3344042	1					
ANR	3345382	Callee	decode_cabac_mb_chroma_pre_mode		3344042	0					
ANR	3345383	Identifier	decode_cabac_mb_chroma_pre_mode		3344042	0					
ANR	3345384	ArgumentList	h		3344042	1					
ANR	3345385	Argument	h		3344042	0					
ANR	3345386	Identifier	h		3344042	0					
ANR	3345387	ExpressionStatement	"pred_mode = ff_h264_check_intra_pred_mode ( h , pred_mode , 1 )"	363:12:7486:7545	3344042	1	True				
ANR	3345388	AssignmentExpression	"pred_mode = ff_h264_check_intra_pred_mode ( h , pred_mode , 1 )"		3344042	0		=			
ANR	3345389	Identifier	pred_mode		3344042	0					
ANR	3345390	CallExpression	"ff_h264_check_intra_pred_mode ( h , pred_mode , 1 )"		3344042	1					
ANR	3345391	Callee	ff_h264_check_intra_pred_mode		3344042	0					
ANR	3345392	Identifier	ff_h264_check_intra_pred_mode		3344042	0					
ANR	3345393	ArgumentList	h		3344042	1					
ANR	3345394	Argument	h		3344042	0					
ANR	3345395	Identifier	h		3344042	0					
ANR	3345396	Argument	pred_mode		3344042	1					
ANR	3345397	Identifier	pred_mode		3344042	0					
ANR	3345398	Argument	1		3344042	2					
ANR	3345399	PrimaryExpression	1		3344042	0					
ANR	3345400	IfStatement	if ( pred_mode < 0 )		3344042	2					
ANR	3345401	Condition	pred_mode < 0	365:16:7564:7576	3344042	0	True				
ANR	3345402	RelationalExpression	pred_mode < 0		3344042	0		<			
ANR	3345403	Identifier	pred_mode		3344042	0					
ANR	3345404	PrimaryExpression	0		3344042	1					
ANR	3345405	ReturnStatement	return - 1 ;	365:32:7580:7589	3344042	1	True				
ANR	3345406	UnaryOperationExpression	- 1		3344042	0					
ANR	3345407	UnaryOperator	-		3344042	0					
ANR	3345408	PrimaryExpression	1		3344042	1					
ANR	3345409	ExpressionStatement	h -> chroma_pred_mode = pred_mode	367:12:7604:7634	3344042	3	True				
ANR	3345410	AssignmentExpression	h -> chroma_pred_mode = pred_mode		3344042	0		=			
ANR	3345411	PtrMemberAccess	h -> chroma_pred_mode		3344042	0					
ANR	3345412	Identifier	h		3344042	0					
ANR	3345413	Identifier	chroma_pred_mode		3344042	1					
ANR	3345414	Identifier	pred_mode		3344042	1					
ANR	3345415	ElseStatement	else		3344042	0					
ANR	3345416	CompoundStatement		369:15:7607:7607	3344042	0					
ANR	3345417	ExpressionStatement	h -> chroma_pred_mode = DC_128_PRED8x8	371:12:7667:7702	3344042	0	True				
ANR	3345418	AssignmentExpression	h -> chroma_pred_mode = DC_128_PRED8x8		3344042	0		=			
ANR	3345419	PtrMemberAccess	h -> chroma_pred_mode		3344042	0					
ANR	3345420	Identifier	h		3344042	0					
ANR	3345421	Identifier	chroma_pred_mode		3344042	1					
ANR	3345422	Identifier	DC_128_PRED8x8		3344042	1					
ANR	3345423	ElseStatement	else		3344042	0					
ANR	3345424	IfStatement	if ( partition_count == 4 )		3344042	0					
ANR	3345425	Condition	partition_count == 4	375:15:7731:7750	3344042	0	True				
ANR	3345426	EqualityExpression	partition_count == 4		3344042	0		==			
ANR	3345427	Identifier	partition_count		3344042	0					
ANR	3345428	PrimaryExpression	4		3344042	1					
ANR	3345429	CompoundStatement		375:38:7709:7709	3344042	1					
ANR	3345430	Statement	int	377:8:7765:7767	3344042	0	True				
ANR	3345431	ExpressionStatement	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"	377:12:7769:7814	3344042	1	True				
ANR	3345432	Expression	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3344042	0					
ANR	3345433	Identifier	i		3344042	0					
ANR	3345434	Expression	"j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3344042	1					
ANR	3345435	Identifier	j		3344042	0					
ANR	3345436	Expression	"sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3344042	1					
ANR	3345437	ArrayIndexing	sub_partition_count [ 4 ]		3344042	0					
ANR	3345438	Identifier	sub_partition_count		3344042	0					
ANR	3345439	PrimaryExpression	4		3344042	1					
ANR	3345440	Expression	"list , ref [ 2 ] [ 4 ]"		3344042	1					
ANR	3345441	Identifier	list		3344042	0					
ANR	3345442	ArrayIndexing	ref [ 2 ] [ 4 ]		3344042	1					
ANR	3345443	ArrayIndexing	ref [ 2 ]		3344042	0					
ANR	3345444	Identifier	ref		3344042	0					
ANR	3345445	PrimaryExpression	2		3344042	1					
ANR	3345446	PrimaryExpression	4		3344042	1					
ANR	3345447	IfStatement	if ( h -> slice_type_nos == AV_PICTURE_TYPE_B )		3344042	2					
ANR	3345448	Condition	h -> slice_type_nos == AV_PICTURE_TYPE_B	381:12:7831:7868	3344042	0	True				
ANR	3345449	EqualityExpression	h -> slice_type_nos == AV_PICTURE_TYPE_B		3344042	0		==			
ANR	3345450	PtrMemberAccess	h -> slice_type_nos		3344042	0					
ANR	3345451	Identifier	h		3344042	0					
ANR	3345452	Identifier	slice_type_nos		3344042	1					
ANR	3345453	Identifier	AV_PICTURE_TYPE_B		3344042	1					
ANR	3345454	CompoundStatement		381:53:7827:7827	3344042	1					
ANR	3345455	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	0					
ANR	3345456	ForInit	i = 0 ;	383:17:7892:7897	3344042	0	True				
ANR	3345457	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345458	Identifier	i		3344042	0					
ANR	3345459	PrimaryExpression	0		3344042	1					
ANR	3345460	Condition	i < 4	383:24:7899:7903	3344042	1	True				
ANR	3345461	RelationalExpression	i < 4		3344042	0		<			
ANR	3345462	Identifier	i		3344042	0					
ANR	3345463	PrimaryExpression	4		3344042	1					
ANR	3345464	PostIncDecOperationExpression	i ++	383:31:7906:7908	3344042	2	True				
ANR	3345465	Identifier	i		3344042	0					
ANR	3345466	IncDec	++		3344042	1					
ANR	3345467	CompoundStatement		383:37:7867:7867	3344042	3					
ANR	3345468	ExpressionStatement	h -> sub_mb_type [ i ] = decode_cabac_b_mb_sub_type ( h )	385:16:7931:7982	3344042	0	True				
ANR	3345469	AssignmentExpression	h -> sub_mb_type [ i ] = decode_cabac_b_mb_sub_type ( h )		3344042	0		=			
ANR	3345470	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345471	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345472	Identifier	h		3344042	0					
ANR	3345473	Identifier	sub_mb_type		3344042	1					
ANR	3345474	Identifier	i		3344042	1					
ANR	3345475	CallExpression	decode_cabac_b_mb_sub_type ( h )		3344042	1					
ANR	3345476	Callee	decode_cabac_b_mb_sub_type		3344042	0					
ANR	3345477	Identifier	decode_cabac_b_mb_sub_type		3344042	0					
ANR	3345478	ArgumentList	h		3344042	1					
ANR	3345479	Argument	h		3344042	0					
ANR	3345480	Identifier	h		3344042	0					
ANR	3345481	ExpressionStatement	sub_partition_count [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count	387:16:8001:8080	3344042	1	True				
ANR	3345482	AssignmentExpression	sub_partition_count [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042	0		=			
ANR	3345483	ArrayIndexing	sub_partition_count [ i ]		3344042	0					
ANR	3345484	Identifier	sub_partition_count		3344042	0					
ANR	3345485	Identifier	i		3344042	1					
ANR	3345486	MemberAccess	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042	1					
ANR	3345487	ArrayIndexing	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3344042	0					
ANR	3345488	Identifier	b_sub_mb_type_info		3344042	0					
ANR	3345489	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345490	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345491	Identifier	h		3344042	0					
ANR	3345492	Identifier	sub_mb_type		3344042	1					
ANR	3345493	Identifier	i		3344042	1					
ANR	3345494	Identifier	partition_count		3344042	1					
ANR	3345495	ExpressionStatement	h -> sub_mb_type [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type	389:16:8099:8167	3344042	2	True				
ANR	3345496	AssignmentExpression	h -> sub_mb_type [ i ] = b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042	0		=			
ANR	3345497	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345498	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345499	Identifier	h		3344042	0					
ANR	3345500	Identifier	sub_mb_type		3344042	1					
ANR	3345501	Identifier	i		3344042	1					
ANR	3345502	MemberAccess	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042	1					
ANR	3345503	ArrayIndexing	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3344042	0					
ANR	3345504	Identifier	b_sub_mb_type_info		3344042	0					
ANR	3345505	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345506	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345507	Identifier	h		3344042	0					
ANR	3345508	Identifier	sub_mb_type		3344042	1					
ANR	3345509	Identifier	i		3344042	1					
ANR	3345510	Identifier	type		3344042	1					
ANR	3345511	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ] ) )		3344042	1					
ANR	3345512	Condition	IS_DIRECT ( h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ] )	393:16:8201:8315	3344042	0	True				
ANR	3345513	CallExpression	IS_DIRECT ( h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ] )		3344042	0					
ANR	3345514	Callee	IS_DIRECT		3344042	0					
ANR	3345515	Identifier	IS_DIRECT		3344042	0					
ANR	3345516	ArgumentList	h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ]		3344042	1					
ANR	3345517	Argument	h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ]		3344042	0					
ANR	3345518	InclusiveOrExpression	h -> sub_mb_type [ 0 ] | h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ]		3344042	0		|			
ANR	3345519	ArrayIndexing	h -> sub_mb_type [ 0 ]		3344042	0					
ANR	3345520	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345521	Identifier	h		3344042	0					
ANR	3345522	Identifier	sub_mb_type		3344042	1					
ANR	3345523	PrimaryExpression	0		3344042	1					
ANR	3345524	InclusiveOrExpression	h -> sub_mb_type [ 1 ] | h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ]		3344042	1		|			
ANR	3345525	ArrayIndexing	h -> sub_mb_type [ 1 ]		3344042	0					
ANR	3345526	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345527	Identifier	h		3344042	0					
ANR	3345528	Identifier	sub_mb_type		3344042	1					
ANR	3345529	PrimaryExpression	1		3344042	1					
ANR	3345530	InclusiveOrExpression	h -> sub_mb_type [ 2 ] | h -> sub_mb_type [ 3 ]		3344042	1		|			
ANR	3345531	ArrayIndexing	h -> sub_mb_type [ 2 ]		3344042	0					
ANR	3345532	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345533	Identifier	h		3344042	0					
ANR	3345534	Identifier	sub_mb_type		3344042	1					
ANR	3345535	PrimaryExpression	2		3344042	1					
ANR	3345536	ArrayIndexing	h -> sub_mb_type [ 3 ]		3344042	1					
ANR	3345537	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345538	Identifier	h		3344042	0					
ANR	3345539	Identifier	sub_mb_type		3344042	1					
ANR	3345540	PrimaryExpression	3		3344042	1					
ANR	3345541	CompoundStatement		395:67:8274:8274	3344042	1					
ANR	3345542	ExpressionStatement	"ff_h264_pred_direct_motion ( h , & mb_type )"	397:16:8338:8377	3344042	0	True				
ANR	3345543	CallExpression	"ff_h264_pred_direct_motion ( h , & mb_type )"		3344042	0					
ANR	3345544	Callee	ff_h264_pred_direct_motion		3344042	0					
ANR	3345545	Identifier	ff_h264_pred_direct_motion		3344042	0					
ANR	3345546	ArgumentList	h		3344042	1					
ANR	3345547	Argument	h		3344042	0					
ANR	3345548	Identifier	h		3344042	0					
ANR	3345549	Argument	& mb_type		3344042	1					
ANR	3345550	UnaryOperationExpression	& mb_type		3344042	0					
ANR	3345551	UnaryOperator	&		3344042	0					
ANR	3345552	Identifier	mb_type		3344042	1					
ANR	3345553	ExpressionStatement	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE	399:16:8396:8579	3344042	1	True				
ANR	3345554	AssignmentExpression	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3344042	0		=			
ANR	3345555	ArrayIndexing	h -> ref_cache [ 0 ] [ scan8 [ 4 ] ]		3344042	0					
ANR	3345556	ArrayIndexing	h -> ref_cache [ 0 ]		3344042	0					
ANR	3345557	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345558	Identifier	h		3344042	0					
ANR	3345559	Identifier	ref_cache		3344042	1					
ANR	3345560	PrimaryExpression	0		3344042	1					
ANR	3345561	ArrayIndexing	scan8 [ 4 ]		3344042	1					
ANR	3345562	Identifier	scan8		3344042	0					
ANR	3345563	PrimaryExpression	4		3344042	1					
ANR	3345564	AssignmentExpression	h -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3344042	1		=			
ANR	3345565	ArrayIndexing	h -> ref_cache [ 1 ] [ scan8 [ 4 ] ]		3344042	0					
ANR	3345566	ArrayIndexing	h -> ref_cache [ 1 ]		3344042	0					
ANR	3345567	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345568	Identifier	h		3344042	0					
ANR	3345569	Identifier	ref_cache		3344042	1					
ANR	3345570	PrimaryExpression	1		3344042	1					
ANR	3345571	ArrayIndexing	scan8 [ 4 ]		3344042	1					
ANR	3345572	Identifier	scan8		3344042	0					
ANR	3345573	PrimaryExpression	4		3344042	1					
ANR	3345574	AssignmentExpression	h -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3344042	1		=			
ANR	3345575	ArrayIndexing	h -> ref_cache [ 0 ] [ scan8 [ 12 ] ]		3344042	0					
ANR	3345576	ArrayIndexing	h -> ref_cache [ 0 ]		3344042	0					
ANR	3345577	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345578	Identifier	h		3344042	0					
ANR	3345579	Identifier	ref_cache		3344042	1					
ANR	3345580	PrimaryExpression	0		3344042	1					
ANR	3345581	ArrayIndexing	scan8 [ 12 ]		3344042	1					
ANR	3345582	Identifier	scan8		3344042	0					
ANR	3345583	PrimaryExpression	12		3344042	1					
ANR	3345584	AssignmentExpression	h -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3344042	1		=			
ANR	3345585	ArrayIndexing	h -> ref_cache [ 1 ] [ scan8 [ 12 ] ]		3344042	0					
ANR	3345586	ArrayIndexing	h -> ref_cache [ 1 ]		3344042	0					
ANR	3345587	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345588	Identifier	h		3344042	0					
ANR	3345589	Identifier	ref_cache		3344042	1					
ANR	3345590	PrimaryExpression	1		3344042	1					
ANR	3345591	ArrayIndexing	scan8 [ 12 ]		3344042	1					
ANR	3345592	Identifier	scan8		3344042	0					
ANR	3345593	PrimaryExpression	12		3344042	1					
ANR	3345594	Identifier	PART_NOT_AVAILABLE		3344042	1					
ANR	3345595	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	2					
ANR	3345596	ForInit	i = 0 ;	407:25:8607:8612	3344042	0	True				
ANR	3345597	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345598	Identifier	i		3344042	0					
ANR	3345599	PrimaryExpression	0		3344042	1					
ANR	3345600	Condition	i < 4	407:32:8614:8618	3344042	1	True				
ANR	3345601	RelationalExpression	i < 4		3344042	0		<			
ANR	3345602	Identifier	i		3344042	0					
ANR	3345603	PrimaryExpression	4		3344042	1					
ANR	3345604	PostIncDecOperationExpression	i ++	407:39:8621:8623	3344042	2	True				
ANR	3345605	Identifier	i		3344042	0					
ANR	3345606	IncDec	++		3344042	1					
ANR	3345607	ExpressionStatement	"fill_rectangle ( & h -> direct_cache [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , ( h -> sub_mb_type [ i ] >> 1 ) & 0xFF , 1 )"	409:24:8652:8739	3344042	3	True				
ANR	3345608	CallExpression	"fill_rectangle ( & h -> direct_cache [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , ( h -> sub_mb_type [ i ] >> 1 ) & 0xFF , 1 )"		3344042	0					
ANR	3345609	Callee	fill_rectangle		3344042	0					
ANR	3345610	Identifier	fill_rectangle		3344042	0					
ANR	3345611	ArgumentList	& h -> direct_cache [ scan8 [ 4 * i ] ]		3344042	1					
ANR	3345612	Argument	& h -> direct_cache [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3345613	UnaryOperationExpression	& h -> direct_cache [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3345614	UnaryOperator	&		3344042	0					
ANR	3345615	ArrayIndexing	h -> direct_cache [ scan8 [ 4 * i ] ]		3344042	1					
ANR	3345616	PtrMemberAccess	h -> direct_cache		3344042	0					
ANR	3345617	Identifier	h		3344042	0					
ANR	3345618	Identifier	direct_cache		3344042	1					
ANR	3345619	ArrayIndexing	scan8 [ 4 * i ]		3344042	1					
ANR	3345620	Identifier	scan8		3344042	0					
ANR	3345621	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345622	PrimaryExpression	4		3344042	0					
ANR	3345623	Identifier	i		3344042	1					
ANR	3345624	Argument	2		3344042	1					
ANR	3345625	PrimaryExpression	2		3344042	0					
ANR	3345626	Argument	2		3344042	2					
ANR	3345627	PrimaryExpression	2		3344042	0					
ANR	3345628	Argument	8		3344042	3					
ANR	3345629	PrimaryExpression	8		3344042	0					
ANR	3345630	Argument	( h -> sub_mb_type [ i ] >> 1 ) & 0xFF		3344042	4					
ANR	3345631	BitAndExpression	( h -> sub_mb_type [ i ] >> 1 ) & 0xFF		3344042	0		&			
ANR	3345632	ShiftExpression	h -> sub_mb_type [ i ] >> 1		3344042	0		>>			
ANR	3345633	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345634	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345635	Identifier	h		3344042	0					
ANR	3345636	Identifier	sub_mb_type		3344042	1					
ANR	3345637	Identifier	i		3344042	1					
ANR	3345638	PrimaryExpression	1		3344042	1					
ANR	3345639	PrimaryExpression	0xFF		3344042	1					
ANR	3345640	Argument	1		3344042	5					
ANR	3345641	PrimaryExpression	1		3344042	0					
ANR	3345642	ElseStatement	else		3344042	0					
ANR	3345643	CompoundStatement		413:15:8727:8727	3344042	0					
ANR	3345644	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	0					
ANR	3345645	ForInit	i = 0 ;	415:17:8792:8797	3344042	0	True				
ANR	3345646	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345647	Identifier	i		3344042	0					
ANR	3345648	PrimaryExpression	0		3344042	1					
ANR	3345649	Condition	i < 4	415:24:8799:8803	3344042	1	True				
ANR	3345650	RelationalExpression	i < 4		3344042	0		<			
ANR	3345651	Identifier	i		3344042	0					
ANR	3345652	PrimaryExpression	4		3344042	1					
ANR	3345653	PostIncDecOperationExpression	i ++	415:31:8806:8808	3344042	2	True				
ANR	3345654	Identifier	i		3344042	0					
ANR	3345655	IncDec	++		3344042	1					
ANR	3345656	CompoundStatement		415:37:8767:8767	3344042	3					
ANR	3345657	ExpressionStatement	h -> sub_mb_type [ i ] = decode_cabac_p_mb_sub_type ( h )	417:16:8831:8882	3344042	0	True				
ANR	3345658	AssignmentExpression	h -> sub_mb_type [ i ] = decode_cabac_p_mb_sub_type ( h )		3344042	0		=			
ANR	3345659	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345660	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345661	Identifier	h		3344042	0					
ANR	3345662	Identifier	sub_mb_type		3344042	1					
ANR	3345663	Identifier	i		3344042	1					
ANR	3345664	CallExpression	decode_cabac_p_mb_sub_type ( h )		3344042	1					
ANR	3345665	Callee	decode_cabac_p_mb_sub_type		3344042	0					
ANR	3345666	Identifier	decode_cabac_p_mb_sub_type		3344042	0					
ANR	3345667	ArgumentList	h		3344042	1					
ANR	3345668	Argument	h		3344042	0					
ANR	3345669	Identifier	h		3344042	0					
ANR	3345670	ExpressionStatement	sub_partition_count [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count	419:16:8901:8980	3344042	1	True				
ANR	3345671	AssignmentExpression	sub_partition_count [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042	0		=			
ANR	3345672	ArrayIndexing	sub_partition_count [ i ]		3344042	0					
ANR	3345673	Identifier	sub_partition_count		3344042	0					
ANR	3345674	Identifier	i		3344042	1					
ANR	3345675	MemberAccess	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042	1					
ANR	3345676	ArrayIndexing	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3344042	0					
ANR	3345677	Identifier	p_sub_mb_type_info		3344042	0					
ANR	3345678	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345679	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345680	Identifier	h		3344042	0					
ANR	3345681	Identifier	sub_mb_type		3344042	1					
ANR	3345682	Identifier	i		3344042	1					
ANR	3345683	Identifier	partition_count		3344042	1					
ANR	3345684	ExpressionStatement	h -> sub_mb_type [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type	421:16:8999:9067	3344042	2	True				
ANR	3345685	AssignmentExpression	h -> sub_mb_type [ i ] = p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042	0		=			
ANR	3345686	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345687	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345688	Identifier	h		3344042	0					
ANR	3345689	Identifier	sub_mb_type		3344042	1					
ANR	3345690	Identifier	i		3344042	1					
ANR	3345691	MemberAccess	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042	1					
ANR	3345692	ArrayIndexing	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ]		3344042	0					
ANR	3345693	Identifier	p_sub_mb_type_info		3344042	0					
ANR	3345694	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345695	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345696	Identifier	h		3344042	0					
ANR	3345697	Identifier	sub_mb_type		3344042	1					
ANR	3345698	Identifier	i		3344042	1					
ANR	3345699	Identifier	type		3344042	1					
ANR	3345700	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	3					
ANR	3345701	ForInit	list = 0 ;	429:13:9111:9119	3344042	0	True				
ANR	3345702	AssignmentExpression	list = 0		3344042	0		=			
ANR	3345703	Identifier	list		3344042	0					
ANR	3345704	PrimaryExpression	0		3344042	1					
ANR	3345705	Condition	list < h -> list_count	429:23:9121:9140	3344042	1	True				
ANR	3345706	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3345707	Identifier	list		3344042	0					
ANR	3345708	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3345709	Identifier	h		3344042	0					
ANR	3345710	Identifier	list_count		3344042	1					
ANR	3345711	PostIncDecOperationExpression	list ++	429:45:9143:9148	3344042	2	True				
ANR	3345712	Identifier	list		3344042	0					
ANR	3345713	IncDec	++		3344042	1					
ANR	3345714	CompoundStatement		429:54:9107:9107	3344042	3					
ANR	3345715	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	0					
ANR	3345716	ForInit	i = 0 ;	431:21:9176:9181	3344042	0	True				
ANR	3345717	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345718	Identifier	i		3344042	0					
ANR	3345719	PrimaryExpression	0		3344042	1					
ANR	3345720	Condition	i < 4	431:28:9183:9187	3344042	1	True				
ANR	3345721	RelationalExpression	i < 4		3344042	0		<			
ANR	3345722	Identifier	i		3344042	0					
ANR	3345723	PrimaryExpression	4		3344042	1					
ANR	3345724	PostIncDecOperationExpression	i ++	431:35:9190:9192	3344042	2	True				
ANR	3345725	Identifier	i		3344042	0					
ANR	3345726	IncDec	++		3344042	1					
ANR	3345727	CompoundStatement		431:41:9151:9151	3344042	3					
ANR	3345728	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ i ] ) )		3344042	0					
ANR	3345729	Condition	IS_DIRECT ( h -> sub_mb_type [ i ] )	433:23:9222:9249	3344042	0	True				
ANR	3345730	CallExpression	IS_DIRECT ( h -> sub_mb_type [ i ] )		3344042	0					
ANR	3345731	Callee	IS_DIRECT		3344042	0					
ANR	3345732	Identifier	IS_DIRECT		3344042	0					
ANR	3345733	ArgumentList	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345734	Argument	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345735	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345736	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345737	Identifier	h		3344042	0					
ANR	3345738	Identifier	sub_mb_type		3344042	1					
ANR	3345739	Identifier	i		3344042	1					
ANR	3345740	ContinueStatement	continue ;	433:53:9252:9260	3344042	1	True				
ANR	3345741	IfStatement	"if ( IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) )"		3344042	1					
ANR	3345742	Condition	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"	435:23:9286:9319	3344042	0	True				
ANR	3345743	CallExpression	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"		3344042	0					
ANR	3345744	Callee	IS_DIR		3344042	0					
ANR	3345745	Identifier	IS_DIR		3344042	0					
ANR	3345746	ArgumentList	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345747	Argument	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345748	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345749	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345750	Identifier	h		3344042	0					
ANR	3345751	Identifier	sub_mb_type		3344042	1					
ANR	3345752	Identifier	i		3344042	1					
ANR	3345753	Argument	0		3344042	1					
ANR	3345754	PrimaryExpression	0		3344042	0					
ANR	3345755	Argument	list		3344042	2					
ANR	3345756	Identifier	list		3344042	0					
ANR	3345757	CompoundStatement		435:58:9276:9276	3344042	1					
ANR	3345758	IfStatement	if ( h -> ref_count [ list ] > 1 )		3344042	0					
ANR	3345759	Condition	h -> ref_count [ list ] > 1	437:28:9352:9373	3344042	0	True				
ANR	3345760	RelationalExpression	h -> ref_count [ list ] > 1		3344042	0		>			
ANR	3345761	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3345762	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3345763	Identifier	h		3344042	0					
ANR	3345764	Identifier	ref_count		3344042	1					
ANR	3345765	Identifier	list		3344042	1					
ANR	3345766	PrimaryExpression	1		3344042	1					
ANR	3345767	CompoundStatement		437:52:9331:9331	3344042	1					
ANR	3345768	ExpressionStatement	"ref [ list ] [ i ] = decode_cabac_mb_ref ( h , list , 4 * i )"	439:28:9407:9457	3344042	0	True				
ANR	3345769	AssignmentExpression	"ref [ list ] [ i ] = decode_cabac_mb_ref ( h , list , 4 * i )"		3344042	0		=			
ANR	3345770	ArrayIndexing	ref [ list ] [ i ]		3344042	0					
ANR	3345771	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345772	Identifier	ref		3344042	0					
ANR	3345773	Identifier	list		3344042	1					
ANR	3345774	Identifier	i		3344042	1					
ANR	3345775	CallExpression	"decode_cabac_mb_ref ( h , list , 4 * i )"		3344042	1					
ANR	3345776	Callee	decode_cabac_mb_ref		3344042	0					
ANR	3345777	Identifier	decode_cabac_mb_ref		3344042	0					
ANR	3345778	ArgumentList	h		3344042	1					
ANR	3345779	Argument	h		3344042	0					
ANR	3345780	Identifier	h		3344042	0					
ANR	3345781	Argument	list		3344042	1					
ANR	3345782	Identifier	list		3344042	0					
ANR	3345783	Argument	4 * i		3344042	2					
ANR	3345784	MultiplicativeExpression	4 * i		3344042	0		*			
ANR	3345785	PrimaryExpression	4		3344042	0					
ANR	3345786	Identifier	i		3344042	1					
ANR	3345787	IfStatement	if ( ref [ list ] [ i ] >= ( unsigned ) h -> ref_count [ list ] )		3344042	1					
ANR	3345788	Condition	ref [ list ] [ i ] >= ( unsigned ) h -> ref_count [ list ]	441:31:9491:9534	3344042	0	True				
ANR	3345789	RelationalExpression	ref [ list ] [ i ] >= ( unsigned ) h -> ref_count [ list ]		3344042	0		>=			
ANR	3345790	ArrayIndexing	ref [ list ] [ i ]		3344042	0					
ANR	3345791	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345792	Identifier	ref		3344042	0					
ANR	3345793	Identifier	list		3344042	1					
ANR	3345794	Identifier	i		3344042	1					
ANR	3345795	CastExpression	( unsigned ) h -> ref_count [ list ]		3344042	1					
ANR	3345796	CastTarget	unsigned		3344042	0					
ANR	3345797	ArrayIndexing	h -> ref_count [ list ]		3344042	1					
ANR	3345798	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3345799	Identifier	h		3344042	0					
ANR	3345800	Identifier	ref_count		3344042	1					
ANR	3345801	Identifier	list		3344042	1					
ANR	3345802	CompoundStatement		441:76:9491:9491	3344042	1					
ANR	3345803	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref [ list ] [ i ] , h -> ref_count [ list ] )"	443:32:9571:9659	3344042	0	True				
ANR	3345804	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref [ list ] [ i ] , h -> ref_count [ list ] )"		3344042	0					
ANR	3345805	Callee	av_log		3344042	0					
ANR	3345806	Identifier	av_log		3344042	0					
ANR	3345807	ArgumentList	s -> avctx		3344042	1					
ANR	3345808	Argument	s -> avctx		3344042	0					
ANR	3345809	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3345810	Identifier	s		3344042	0					
ANR	3345811	Identifier	avctx		3344042	1					
ANR	3345812	Argument	AV_LOG_ERROR		3344042	1					
ANR	3345813	Identifier	AV_LOG_ERROR		3344042	0					
ANR	3345814	Argument	"""Reference %d >= %d\\n"""		3344042	2					
ANR	3345815	PrimaryExpression	"""Reference %d >= %d\\n"""		3344042	0					
ANR	3345816	Argument	ref [ list ] [ i ]		3344042	3					
ANR	3345817	ArrayIndexing	ref [ list ] [ i ]		3344042	0					
ANR	3345818	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345819	Identifier	ref		3344042	0					
ANR	3345820	Identifier	list		3344042	1					
ANR	3345821	Identifier	i		3344042	1					
ANR	3345822	Argument	h -> ref_count [ list ]		3344042	4					
ANR	3345823	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3345824	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3345825	Identifier	h		3344042	0					
ANR	3345826	Identifier	ref_count		3344042	1					
ANR	3345827	Identifier	list		3344042	1					
ANR	3345828	ElseStatement	else		3344042	0					
ANR	3345829	ExpressionStatement	ref [ list ] [ i ] = 0	450:28:9753:9769	3344042	0	True				
ANR	3345830	AssignmentExpression	ref [ list ] [ i ] = 0		3344042	0		=			
ANR	3345831	ArrayIndexing	ref [ list ] [ i ]		3344042	0					
ANR	3345832	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345833	Identifier	ref		3344042	0					
ANR	3345834	Identifier	list		3344042	1					
ANR	3345835	Identifier	i		3344042	1					
ANR	3345836	PrimaryExpression	0		3344042	1					
ANR	3345837	ElseStatement	else		3344042	0					
ANR	3345838	CompoundStatement		452:27:9754:9754	3344042	0					
ANR	3345839	ExpressionStatement	ref [ list ] [ i ] = - 1	454:24:9826:9843	3344042	0	True				
ANR	3345840	AssignmentExpression	ref [ list ] [ i ] = - 1		3344042	0		=			
ANR	3345841	ArrayIndexing	ref [ list ] [ i ]		3344042	0					
ANR	3345842	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345843	Identifier	ref		3344042	0					
ANR	3345844	Identifier	list		3344042	1					
ANR	3345845	Identifier	i		3344042	1					
ANR	3345846	UnaryOperationExpression	- 1		3344042	1					
ANR	3345847	UnaryOperator	-		3344042	0					
ANR	3345848	PrimaryExpression	1		3344042	1					
ANR	3345849	ExpressionStatement	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]	458:55:9924:10064	3344042	2	True				
ANR	3345850	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3344042	0		=			
ANR	3345851	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3344042	0					
ANR	3345852	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3345853	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345854	Identifier	h		3344042	0					
ANR	3345855	Identifier	ref_cache		3344042	1					
ANR	3345856	Identifier	list		3344042	1					
ANR	3345857	AdditiveExpression	scan8 [ 4 * i ] + 1		3344042	1		+			
ANR	3345858	ArrayIndexing	scan8 [ 4 * i ]		3344042	0					
ANR	3345859	Identifier	scan8		3344042	0					
ANR	3345860	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345861	PrimaryExpression	4		3344042	0					
ANR	3345862	Identifier	i		3344042	1					
ANR	3345863	PrimaryExpression	1		3344042	1					
ANR	3345864	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3344042	1		=			
ANR	3345865	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ]		3344042	0					
ANR	3345866	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3345867	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345868	Identifier	h		3344042	0					
ANR	3345869	Identifier	ref_cache		3344042	1					
ANR	3345870	Identifier	list		3344042	1					
ANR	3345871	AdditiveExpression	scan8 [ 4 * i ] + 8		3344042	1		+			
ANR	3345872	ArrayIndexing	scan8 [ 4 * i ]		3344042	0					
ANR	3345873	Identifier	scan8		3344042	0					
ANR	3345874	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345875	PrimaryExpression	4		3344042	0					
ANR	3345876	Identifier	i		3344042	1					
ANR	3345877	PrimaryExpression	8		3344042	1					
ANR	3345878	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3344042	1		=			
ANR	3345879	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ]		3344042	0					
ANR	3345880	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3345881	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345882	Identifier	h		3344042	0					
ANR	3345883	Identifier	ref_cache		3344042	1					
ANR	3345884	Identifier	list		3344042	1					
ANR	3345885	AdditiveExpression	scan8 [ 4 * i ] + 9		3344042	1		+			
ANR	3345886	ArrayIndexing	scan8 [ 4 * i ]		3344042	0					
ANR	3345887	Identifier	scan8		3344042	0					
ANR	3345888	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345889	PrimaryExpression	4		3344042	0					
ANR	3345890	Identifier	i		3344042	1					
ANR	3345891	PrimaryExpression	9		3344042	1					
ANR	3345892	ArrayIndexing	ref [ list ] [ i ]		3344042	1					
ANR	3345893	ArrayIndexing	ref [ list ]		3344042	0					
ANR	3345894	Identifier	ref		3344042	0					
ANR	3345895	Identifier	list		3344042	1					
ANR	3345896	Identifier	i		3344042	1					
ANR	3345897	IfStatement	if ( dct8x8_allowed )		3344042	4					
ANR	3345898	Condition	dct8x8_allowed	468:11:10110:10123	3344042	0	True				
ANR	3345899	Identifier	dct8x8_allowed		3344042	0					
ANR	3345900	ExpressionStatement	dct8x8_allowed = get_dct8x8_allowed ( h )	470:12:10139:10177	3344042	1	True				
ANR	3345901	AssignmentExpression	dct8x8_allowed = get_dct8x8_allowed ( h )		3344042	0		=			
ANR	3345902	Identifier	dct8x8_allowed		3344042	0					
ANR	3345903	CallExpression	get_dct8x8_allowed ( h )		3344042	1					
ANR	3345904	Callee	get_dct8x8_allowed		3344042	0					
ANR	3345905	Identifier	get_dct8x8_allowed		3344042	0					
ANR	3345906	ArgumentList	h		3344042	1					
ANR	3345907	Argument	h		3344042	0					
ANR	3345908	Identifier	h		3344042	0					
ANR	3345909	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	5					
ANR	3345910	ForInit	list = 0 ;	474:12:10194:10200	3344042	0	True				
ANR	3345911	AssignmentExpression	list = 0		3344042	0		=			
ANR	3345912	Identifier	list		3344042	0					
ANR	3345913	PrimaryExpression	0		3344042	1					
ANR	3345914	Condition	list < h -> list_count	474:20:10202:10219	3344042	1	True				
ANR	3345915	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3345916	Identifier	list		3344042	0					
ANR	3345917	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3345918	Identifier	h		3344042	0					
ANR	3345919	Identifier	list_count		3344042	1					
ANR	3345920	PostIncDecOperationExpression	list ++	474:40:10222:10227	3344042	2	True				
ANR	3345921	Identifier	list		3344042	0					
ANR	3345922	IncDec	++		3344042	1					
ANR	3345923	CompoundStatement		474:47:10184:10184	3344042	3					
ANR	3345924	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	0					
ANR	3345925	ForInit	i = 0 ;	476:16:10248:10251	3344042	0	True				
ANR	3345926	AssignmentExpression	i = 0		3344042	0		=			
ANR	3345927	Identifier	i		3344042	0					
ANR	3345928	PrimaryExpression	0		3344042	1					
ANR	3345929	Condition	i < 4	476:21:10253:10255	3344042	1	True				
ANR	3345930	RelationalExpression	i < 4		3344042	0		<			
ANR	3345931	Identifier	i		3344042	0					
ANR	3345932	PrimaryExpression	4		3344042	1					
ANR	3345933	PostIncDecOperationExpression	i ++	476:26:10258:10260	3344042	2	True				
ANR	3345934	Identifier	i		3344042	0					
ANR	3345935	IncDec	++		3344042	1					
ANR	3345936	CompoundStatement		476:30:10217:10217	3344042	3					
ANR	3345937	ExpressionStatement	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]	478:16:10281:10350	3344042	0	True				
ANR	3345938	AssignmentExpression	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3344042	0		=			
ANR	3345939	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3345940	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3345941	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345942	Identifier	h		3344042	0					
ANR	3345943	Identifier	ref_cache		3344042	1					
ANR	3345944	Identifier	list		3344042	1					
ANR	3345945	ArrayIndexing	scan8 [ 4 * i ]		3344042	1					
ANR	3345946	Identifier	scan8		3344042	0					
ANR	3345947	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345948	PrimaryExpression	4		3344042	0					
ANR	3345949	Identifier	i		3344042	1					
ANR	3345950	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3344042	1					
ANR	3345951	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3345952	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3345953	Identifier	h		3344042	0					
ANR	3345954	Identifier	ref_cache		3344042	1					
ANR	3345955	Identifier	list		3344042	1					
ANR	3345956	AdditiveExpression	scan8 [ 4 * i ] + 1		3344042	1		+			
ANR	3345957	ArrayIndexing	scan8 [ 4 * i ]		3344042	0					
ANR	3345958	Identifier	scan8		3344042	0					
ANR	3345959	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345960	PrimaryExpression	4		3344042	0					
ANR	3345961	Identifier	i		3344042	1					
ANR	3345962	PrimaryExpression	1		3344042	1					
ANR	3345963	IfStatement	if ( IS_DIRECT ( h -> sub_mb_type [ i ] ) )		3344042	1					
ANR	3345964	Condition	IS_DIRECT ( h -> sub_mb_type [ i ] )	480:19:10372:10399	3344042	0	True				
ANR	3345965	CallExpression	IS_DIRECT ( h -> sub_mb_type [ i ] )		3344042	0					
ANR	3345966	Callee	IS_DIRECT		3344042	0					
ANR	3345967	Identifier	IS_DIRECT		3344042	0					
ANR	3345968	ArgumentList	h -> sub_mb_type [ i ]		3344042	1					
ANR	3345969	Argument	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345970	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3345971	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3345972	Identifier	h		3344042	0					
ANR	3345973	Identifier	sub_mb_type		3344042	1					
ANR	3345974	Identifier	i		3344042	1					
ANR	3345975	CompoundStatement		480:48:10356:10356	3344042	1					
ANR	3345976	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 2 )"	482:20:10424:10485	3344042	0	True				
ANR	3345977	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 2 )"		3344042	0					
ANR	3345978	Callee	fill_rectangle		3344042	0					
ANR	3345979	Identifier	fill_rectangle		3344042	0					
ANR	3345980	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	1					
ANR	3345981	Argument	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3345982	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3345983	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3345984	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3345985	Identifier	h		3344042	0					
ANR	3345986	Identifier	mvd_cache		3344042	1					
ANR	3345987	Identifier	list		3344042	1					
ANR	3345988	ArrayIndexing	scan8 [ 4 * i ]		3344042	1					
ANR	3345989	Identifier	scan8		3344042	0					
ANR	3345990	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3345991	PrimaryExpression	4		3344042	0					
ANR	3345992	Identifier	i		3344042	1					
ANR	3345993	Argument	2		3344042	1					
ANR	3345994	PrimaryExpression	2		3344042	0					
ANR	3345995	Argument	2		3344042	2					
ANR	3345996	PrimaryExpression	2		3344042	0					
ANR	3345997	Argument	8		3344042	3					
ANR	3345998	PrimaryExpression	8		3344042	0					
ANR	3345999	Argument	0		3344042	4					
ANR	3346000	PrimaryExpression	0		3344042	0					
ANR	3346001	Argument	2		3344042	5					
ANR	3346002	PrimaryExpression	2		3344042	0					
ANR	3346003	ContinueStatement	continue ;	484:20:10508:10516	3344042	1	True				
ANR	3346004	IfStatement	"if ( IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) && ! IS_DIRECT ( h -> sub_mb_type [ i ] ) )"		3344042	2					
ANR	3346005	Condition	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) && ! IS_DIRECT ( h -> sub_mb_type [ i ] )"	490:19:10559:10625	3344042	0	True				
ANR	3346006	AndExpression	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list ) && ! IS_DIRECT ( h -> sub_mb_type [ i ] )"		3344042	0		&&			
ANR	3346007	CallExpression	"IS_DIR ( h -> sub_mb_type [ i ] , 0 , list )"		3344042	0					
ANR	3346008	Callee	IS_DIR		3344042	0					
ANR	3346009	Identifier	IS_DIR		3344042	0					
ANR	3346010	ArgumentList	h -> sub_mb_type [ i ]		3344042	1					
ANR	3346011	Argument	h -> sub_mb_type [ i ]		3344042	0					
ANR	3346012	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3346013	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3346014	Identifier	h		3344042	0					
ANR	3346015	Identifier	sub_mb_type		3344042	1					
ANR	3346016	Identifier	i		3344042	1					
ANR	3346017	Argument	0		3344042	1					
ANR	3346018	PrimaryExpression	0		3344042	0					
ANR	3346019	Argument	list		3344042	2					
ANR	3346020	Identifier	list		3344042	0					
ANR	3346021	UnaryOperationExpression	! IS_DIRECT ( h -> sub_mb_type [ i ] )		3344042	1					
ANR	3346022	UnaryOperator	!		3344042	0					
ANR	3346023	CallExpression	IS_DIRECT ( h -> sub_mb_type [ i ] )		3344042	1					
ANR	3346024	Callee	IS_DIRECT		3344042	0					
ANR	3346025	Identifier	IS_DIRECT		3344042	0					
ANR	3346026	ArgumentList	h -> sub_mb_type [ i ]		3344042	1					
ANR	3346027	Argument	h -> sub_mb_type [ i ]		3344042	0					
ANR	3346028	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	0					
ANR	3346029	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3346030	Identifier	h		3344042	0					
ANR	3346031	Identifier	sub_mb_type		3344042	1					
ANR	3346032	Identifier	i		3344042	1					
ANR	3346033	CompoundStatement		494:20:10668:10743	3344042	1					
ANR	3346034	IdentifierDeclStatement	const int sub_mb_type = h -> sub_mb_type [ i ] ;	492:20:10650:10690	3344042	0	True				
ANR	3346035	IdentifierDecl	sub_mb_type = h -> sub_mb_type [ i ]		3344042	0					
ANR	3346036	IdentifierDeclType	const int		3344042	0					
ANR	3346037	Identifier	sub_mb_type		3344042	1					
ANR	3346038	AssignmentExpression	sub_mb_type = h -> sub_mb_type [ i ]		3344042	2		=			
ANR	3346039	Identifier	sub_mb_type		3344042	0					
ANR	3346040	ArrayIndexing	h -> sub_mb_type [ i ]		3344042	1					
ANR	3346041	PtrMemberAccess	h -> sub_mb_type		3344042	0					
ANR	3346042	Identifier	h		3344042	0					
ANR	3346043	Identifier	sub_mb_type		3344042	1					
ANR	3346044	Identifier	i		3344042	1					
ANR	3346045	IdentifierDeclStatement	const int block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1 ;	494:20:10713:10788	3344042	1	True				
ANR	3346046	IdentifierDecl	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3344042	0					
ANR	3346047	IdentifierDeclType	const int		3344042	0					
ANR	3346048	Identifier	block_width		3344042	1					
ANR	3346049	AssignmentExpression	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3344042	2		=			
ANR	3346050	Identifier	block_width		3344042	0					
ANR	3346051	ConditionalExpression	( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3344042	1					
ANR	3346052	Condition	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3344042	0					
ANR	3346053	BitAndExpression	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3344042	0		&			
ANR	3346054	Identifier	sub_mb_type		3344042	0					
ANR	3346055	InclusiveOrExpression	MB_TYPE_16x16 | MB_TYPE_16x8		3344042	1		|			
ANR	3346056	Identifier	MB_TYPE_16x16		3344042	0					
ANR	3346057	Identifier	MB_TYPE_16x8		3344042	1					
ANR	3346058	PrimaryExpression	2		3344042	1					
ANR	3346059	PrimaryExpression	1		3344042	2					
ANR	3346060	ForStatement	for ( j = 0 ; j < sub_partition_count [ i ] ; j ++ )		3344042	2					
ANR	3346061	ForInit	j = 0 ;	496:24:10815:10818	3344042	0	True				
ANR	3346062	AssignmentExpression	j = 0		3344042	0		=			
ANR	3346063	Identifier	j		3344042	0					
ANR	3346064	PrimaryExpression	0		3344042	1					
ANR	3346065	Condition	j < sub_partition_count [ i ]	496:29:10820:10843	3344042	1	True				
ANR	3346066	RelationalExpression	j < sub_partition_count [ i ]		3344042	0		<			
ANR	3346067	Identifier	j		3344042	0					
ANR	3346068	ArrayIndexing	sub_partition_count [ i ]		3344042	1					
ANR	3346069	Identifier	sub_partition_count		3344042	0					
ANR	3346070	Identifier	i		3344042	1					
ANR	3346071	PostIncDecOperationExpression	j ++	496:55:10846:10848	3344042	2	True				
ANR	3346072	Identifier	j		3344042	0					
ANR	3346073	IncDec	++		3344042	1					
ANR	3346074	CompoundStatement		506:24:11057:11118	3344042	3					
ANR	3346075	IdentifierDeclStatement	"int mpx , mpy ;"	498:24:10877:10889	3344042	0	True				
ANR	3346076	IdentifierDecl	mpx		3344042	0					
ANR	3346077	IdentifierDeclType	int		3344042	0					
ANR	3346078	Identifier	mpx		3344042	1					
ANR	3346079	IdentifierDecl	mpy		3344042	1					
ANR	3346080	IdentifierDeclType	int		3344042	0					
ANR	3346081	Identifier	mpy		3344042	1					
ANR	3346082	IdentifierDeclStatement	"int mx , my ;"	500:24:10916:10926	3344042	1	True				
ANR	3346083	IdentifierDecl	mx		3344042	0					
ANR	3346084	IdentifierDeclType	int		3344042	0					
ANR	3346085	Identifier	mx		3344042	1					
ANR	3346086	IdentifierDecl	my		3344042	1					
ANR	3346087	IdentifierDeclType	int		3344042	0					
ANR	3346088	Identifier	my		3344042	1					
ANR	3346089	IdentifierDeclStatement	const int index = 4 * i + block_width * j ;	502:24:10953:10989	3344042	2	True				
ANR	3346090	IdentifierDecl	index = 4 * i + block_width * j		3344042	0					
ANR	3346091	IdentifierDeclType	const int		3344042	0					
ANR	3346092	Identifier	index		3344042	1					
ANR	3346093	AssignmentExpression	index = 4 * i + block_width * j		3344042	2		=			
ANR	3346094	Identifier	index		3344042	0					
ANR	3346095	AdditiveExpression	4 * i + block_width * j		3344042	1		+			
ANR	3346096	MultiplicativeExpression	4 * i		3344042	0		*			
ANR	3346097	PrimaryExpression	4		3344042	0					
ANR	3346098	Identifier	i		3344042	1					
ANR	3346099	MultiplicativeExpression	block_width * j		3344042	1		*			
ANR	3346100	Identifier	block_width		3344042	0					
ANR	3346101	Identifier	j		3344042	1					
ANR	3346102	IdentifierDeclStatement	int16_t ( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ] ;	504:24:11016:11075	3344042	3	True				
ANR	3346103	IdentifierDecl	( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ]		3344042	0					
ANR	3346104	IdentifierDeclType	int16_t ( * ) [ 2 ]		3344042	0					
ANR	3346105	Identifier	mv_cache		3344042	1					
ANR	3346106	PrimaryExpression	2		3344042	2					
ANR	3346107	AssignmentExpression	( * mv_cache ) [ 2 ] = & h -> mv_cache [ list ] [ scan8 [ index ] ]		3344042	3		=			
ANR	3346108	Identifier	mv_cache		3344042	0					
ANR	3346109	UnaryOperationExpression	& h -> mv_cache [ list ] [ scan8 [ index ] ]		3344042	1					
ANR	3346110	UnaryOperator	&		3344042	0					
ANR	3346111	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ index ] ]		3344042	1					
ANR	3346112	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3346113	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3346114	Identifier	h		3344042	0					
ANR	3346115	Identifier	mv_cache		3344042	1					
ANR	3346116	Identifier	list		3344042	1					
ANR	3346117	ArrayIndexing	scan8 [ index ]		3344042	1					
ANR	3346118	Identifier	scan8		3344042	0					
ANR	3346119	Identifier	index		3344042	1					
ANR	3346120	IdentifierDeclStatement	uint8_t ( * mvd_cache ) [ 2 ] = & h -> mvd_cache [ list ] [ scan8 [ index ] ] ;	506:24:11102:11163	3344042	4	True				
ANR	3346121	IdentifierDecl	( * mvd_cache ) [ 2 ] = & h -> mvd_cache [ list ] [ scan8 [ index ] ]		3344042	0					
ANR	3346122	IdentifierDeclType	uint8_t ( * ) [ 2 ]		3344042	0					
ANR	3346123	Identifier	mvd_cache		3344042	1					
ANR	3346124	PrimaryExpression	2		3344042	2					
ANR	3346125	AssignmentExpression	( * mvd_cache ) [ 2 ] = & h -> mvd_cache [ list ] [ scan8 [ index ] ]		3344042	3		=			
ANR	3346126	Identifier	mvd_cache		3344042	0					
ANR	3346127	UnaryOperationExpression	& h -> mvd_cache [ list ] [ scan8 [ index ] ]		3344042	1					
ANR	3346128	UnaryOperator	&		3344042	0					
ANR	3346129	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ index ] ]		3344042	1					
ANR	3346130	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3346131	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3346132	Identifier	h		3344042	0					
ANR	3346133	Identifier	mvd_cache		3344042	1					
ANR	3346134	Identifier	list		3344042	1					
ANR	3346135	ArrayIndexing	scan8 [ index ]		3344042	1					
ANR	3346136	Identifier	scan8		3344042	0					
ANR	3346137	Identifier	index		3344042	1					
ANR	3346138	ExpressionStatement	"pred_motion ( h , index , block_width , list , h -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"	508:24:11190:11276	3344042	5	True				
ANR	3346139	CallExpression	"pred_motion ( h , index , block_width , list , h -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"		3344042	0					
ANR	3346140	Callee	pred_motion		3344042	0					
ANR	3346141	Identifier	pred_motion		3344042	0					
ANR	3346142	ArgumentList	h		3344042	1					
ANR	3346143	Argument	h		3344042	0					
ANR	3346144	Identifier	h		3344042	0					
ANR	3346145	Argument	index		3344042	1					
ANR	3346146	Identifier	index		3344042	0					
ANR	3346147	Argument	block_width		3344042	2					
ANR	3346148	Identifier	block_width		3344042	0					
ANR	3346149	Argument	list		3344042	3					
ANR	3346150	Identifier	list		3344042	0					
ANR	3346151	Argument	h -> ref_cache [ list ] [ scan8 [ index ] ]		3344042	4					
ANR	3346152	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ index ] ]		3344042	0					
ANR	3346153	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3346154	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3346155	Identifier	h		3344042	0					
ANR	3346156	Identifier	ref_cache		3344042	1					
ANR	3346157	Identifier	list		3344042	1					
ANR	3346158	ArrayIndexing	scan8 [ index ]		3344042	1					
ANR	3346159	Identifier	scan8		3344042	0					
ANR	3346160	Identifier	index		3344042	1					
ANR	3346161	Argument	& mx		3344042	5					
ANR	3346162	UnaryOperationExpression	& mx		3344042	0					
ANR	3346163	UnaryOperator	&		3344042	0					
ANR	3346164	Identifier	mx		3344042	1					
ANR	3346165	Argument	& my		3344042	6					
ANR	3346166	UnaryOperationExpression	& my		3344042	0					
ANR	3346167	UnaryOperator	&		3344042	0					
ANR	3346168	Identifier	my		3344042	1					
ANR	3346169	Statement	DECODE_CABAC_MB_MVD	510:24:11303:11321	3344042	6	True				
ANR	3346170	Statement	(	510:43:11322:11322	3344042	7	True				
ANR	3346171	Statement	h	510:45:11324:11324	3344042	8	True				
ANR	3346172	Statement	","	510:46:11325:11325	3344042	9	True				
ANR	3346173	Statement	list	510:48:11327:11330	3344042	10	True				
ANR	3346174	Statement	","	510:52:11331:11331	3344042	11	True				
ANR	3346175	Statement	index	510:54:11333:11337	3344042	12	True				
ANR	3346176	Statement	)	510:59:11338:11338	3344042	13	True				
ANR	3346177	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	512:24:11365:11410	3344042	14	True				
ANR	3346178	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3344042	0					
ANR	3346179	Callee	tprintf		3344042	0					
ANR	3346180	Identifier	tprintf		3344042	0					
ANR	3346181	ArgumentList	s -> avctx		3344042	1					
ANR	3346182	Argument	s -> avctx		3344042	0					
ANR	3346183	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3346184	Identifier	s		3344042	0					
ANR	3346185	Identifier	avctx		3344042	1					
ANR	3346186	Argument	"""final mv:%d %d\\n"""		3344042	1					
ANR	3346187	PrimaryExpression	"""final mv:%d %d\\n"""		3344042	0					
ANR	3346188	Argument	mx		3344042	2					
ANR	3346189	Identifier	mx		3344042	0					
ANR	3346190	Argument	my		3344042	3					
ANR	3346191	Identifier	my		3344042	0					
ANR	3346192	IfStatement	if ( IS_SUB_8X8 ( sub_mb_type ) )		3344042	15					
ANR	3346193	Condition	IS_SUB_8X8 ( sub_mb_type )	516:27:11442:11464	3344042	0	True				
ANR	3346194	CallExpression	IS_SUB_8X8 ( sub_mb_type )		3344042	0					
ANR	3346195	Callee	IS_SUB_8X8		3344042	0					
ANR	3346196	Identifier	IS_SUB_8X8		3344042	0					
ANR	3346197	ArgumentList	sub_mb_type		3344042	1					
ANR	3346198	Argument	sub_mb_type		3344042	0					
ANR	3346199	Identifier	sub_mb_type		3344042	0					
ANR	3346200	CompoundStatement		516:51:11421:11421	3344042	1					
ANR	3346201	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx	518:28:11497:11582	3344042	0	True				
ANR	3346202	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3344042	0		=			
ANR	3346203	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3344042	0					
ANR	3346204	ArrayIndexing	mv_cache [ 1 ]		3344042	0					
ANR	3346205	Identifier	mv_cache		3344042	0					
ANR	3346206	PrimaryExpression	1		3344042	1					
ANR	3346207	PrimaryExpression	0		3344042	1					
ANR	3346208	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3344042	1		=			
ANR	3346209	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3344042	0					
ANR	3346210	ArrayIndexing	mv_cache [ 8 ]		3344042	0					
ANR	3346211	Identifier	mv_cache		3344042	0					
ANR	3346212	PrimaryExpression	8		3344042	1					
ANR	3346213	PrimaryExpression	0		3344042	1					
ANR	3346214	AssignmentExpression	mv_cache [ 9 ] [ 0 ] = mx		3344042	1		=			
ANR	3346215	ArrayIndexing	mv_cache [ 9 ] [ 0 ]		3344042	0					
ANR	3346216	ArrayIndexing	mv_cache [ 9 ]		3344042	0					
ANR	3346217	Identifier	mv_cache		3344042	0					
ANR	3346218	PrimaryExpression	9		3344042	1					
ANR	3346219	PrimaryExpression	0		3344042	1					
ANR	3346220	Identifier	mx		3344042	1					
ANR	3346221	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my	522:28:11613:11698	3344042	1	True				
ANR	3346222	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3344042	0		=			
ANR	3346223	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3344042	0					
ANR	3346224	ArrayIndexing	mv_cache [ 1 ]		3344042	0					
ANR	3346225	Identifier	mv_cache		3344042	0					
ANR	3346226	PrimaryExpression	1		3344042	1					
ANR	3346227	PrimaryExpression	1		3344042	1					
ANR	3346228	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3344042	1		=			
ANR	3346229	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3344042	0					
ANR	3346230	ArrayIndexing	mv_cache [ 8 ]		3344042	0					
ANR	3346231	Identifier	mv_cache		3344042	0					
ANR	3346232	PrimaryExpression	8		3344042	1					
ANR	3346233	PrimaryExpression	1		3344042	1					
ANR	3346234	AssignmentExpression	mv_cache [ 9 ] [ 1 ] = my		3344042	1		=			
ANR	3346235	ArrayIndexing	mv_cache [ 9 ] [ 1 ]		3344042	0					
ANR	3346236	ArrayIndexing	mv_cache [ 9 ]		3344042	0					
ANR	3346237	Identifier	mv_cache		3344042	0					
ANR	3346238	PrimaryExpression	9		3344042	1					
ANR	3346239	PrimaryExpression	1		3344042	1					
ANR	3346240	Identifier	my		3344042	1					
ANR	3346241	ExpressionStatement	mvd_cache [ 1 ] [ 0 ] = mvd_cache [ 8 ] [ 0 ] = mvd_cache [ 9 ] [ 0 ] = mpx	528:28:11731:11820	3344042	2	True				
ANR	3346242	AssignmentExpression	mvd_cache [ 1 ] [ 0 ] = mvd_cache [ 8 ] [ 0 ] = mvd_cache [ 9 ] [ 0 ] = mpx		3344042	0		=			
ANR	3346243	ArrayIndexing	mvd_cache [ 1 ] [ 0 ]		3344042	0					
ANR	3346244	ArrayIndexing	mvd_cache [ 1 ]		3344042	0					
ANR	3346245	Identifier	mvd_cache		3344042	0					
ANR	3346246	PrimaryExpression	1		3344042	1					
ANR	3346247	PrimaryExpression	0		3344042	1					
ANR	3346248	AssignmentExpression	mvd_cache [ 8 ] [ 0 ] = mvd_cache [ 9 ] [ 0 ] = mpx		3344042	1		=			
ANR	3346249	ArrayIndexing	mvd_cache [ 8 ] [ 0 ]		3344042	0					
ANR	3346250	ArrayIndexing	mvd_cache [ 8 ]		3344042	0					
ANR	3346251	Identifier	mvd_cache		3344042	0					
ANR	3346252	PrimaryExpression	8		3344042	1					
ANR	3346253	PrimaryExpression	0		3344042	1					
ANR	3346254	AssignmentExpression	mvd_cache [ 9 ] [ 0 ] = mpx		3344042	1		=			
ANR	3346255	ArrayIndexing	mvd_cache [ 9 ] [ 0 ]		3344042	0					
ANR	3346256	ArrayIndexing	mvd_cache [ 9 ]		3344042	0					
ANR	3346257	Identifier	mvd_cache		3344042	0					
ANR	3346258	PrimaryExpression	9		3344042	1					
ANR	3346259	PrimaryExpression	0		3344042	1					
ANR	3346260	Identifier	mpx		3344042	1					
ANR	3346261	ExpressionStatement	mvd_cache [ 1 ] [ 1 ] = mvd_cache [ 8 ] [ 1 ] = mvd_cache [ 9 ] [ 1 ] = mpy	532:28:11851:11940	3344042	3	True				
ANR	3346262	AssignmentExpression	mvd_cache [ 1 ] [ 1 ] = mvd_cache [ 8 ] [ 1 ] = mvd_cache [ 9 ] [ 1 ] = mpy		3344042	0		=			
ANR	3346263	ArrayIndexing	mvd_cache [ 1 ] [ 1 ]		3344042	0					
ANR	3346264	ArrayIndexing	mvd_cache [ 1 ]		3344042	0					
ANR	3346265	Identifier	mvd_cache		3344042	0					
ANR	3346266	PrimaryExpression	1		3344042	1					
ANR	3346267	PrimaryExpression	1		3344042	1					
ANR	3346268	AssignmentExpression	mvd_cache [ 8 ] [ 1 ] = mvd_cache [ 9 ] [ 1 ] = mpy		3344042	1		=			
ANR	3346269	ArrayIndexing	mvd_cache [ 8 ] [ 1 ]		3344042	0					
ANR	3346270	ArrayIndexing	mvd_cache [ 8 ]		3344042	0					
ANR	3346271	Identifier	mvd_cache		3344042	0					
ANR	3346272	PrimaryExpression	8		3344042	1					
ANR	3346273	PrimaryExpression	1		3344042	1					
ANR	3346274	AssignmentExpression	mvd_cache [ 9 ] [ 1 ] = mpy		3344042	1		=			
ANR	3346275	ArrayIndexing	mvd_cache [ 9 ] [ 1 ]		3344042	0					
ANR	3346276	ArrayIndexing	mvd_cache [ 9 ]		3344042	0					
ANR	3346277	Identifier	mvd_cache		3344042	0					
ANR	3346278	PrimaryExpression	9		3344042	1					
ANR	3346279	PrimaryExpression	1		3344042	1					
ANR	3346280	Identifier	mpy		3344042	1					
ANR	3346281	ElseStatement	else		3344042	0					
ANR	3346282	IfStatement	if ( IS_SUB_8X4 ( sub_mb_type ) )		3344042	0					
ANR	3346283	Condition	IS_SUB_8X4 ( sub_mb_type )	536:33:11976:11998	3344042	0	True				
ANR	3346284	CallExpression	IS_SUB_8X4 ( sub_mb_type )		3344042	0					
ANR	3346285	Callee	IS_SUB_8X4		3344042	0					
ANR	3346286	Identifier	IS_SUB_8X4		3344042	0					
ANR	3346287	ArgumentList	sub_mb_type		3344042	1					
ANR	3346288	Argument	sub_mb_type		3344042	0					
ANR	3346289	Identifier	sub_mb_type		3344042	0					
ANR	3346290	CompoundStatement		536:57:11955:11955	3344042	1					
ANR	3346291	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mx	538:28:12031:12051	3344042	0	True				
ANR	3346292	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mx		3344042	0		=			
ANR	3346293	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3344042	0					
ANR	3346294	ArrayIndexing	mv_cache [ 1 ]		3344042	0					
ANR	3346295	Identifier	mv_cache		3344042	0					
ANR	3346296	PrimaryExpression	1		3344042	1					
ANR	3346297	PrimaryExpression	0		3344042	1					
ANR	3346298	Identifier	mx		3344042	1					
ANR	3346299	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = my	540:28:12082:12102	3344042	1	True				
ANR	3346300	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = my		3344042	0		=			
ANR	3346301	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3344042	0					
ANR	3346302	ArrayIndexing	mv_cache [ 1 ]		3344042	0					
ANR	3346303	Identifier	mv_cache		3344042	0					
ANR	3346304	PrimaryExpression	1		3344042	1					
ANR	3346305	PrimaryExpression	1		3344042	1					
ANR	3346306	Identifier	my		3344042	1					
ANR	3346307	ExpressionStatement	mvd_cache [ 1 ] [ 0 ] = mpx	544:28:12135:12158	3344042	2	True				
ANR	3346308	AssignmentExpression	mvd_cache [ 1 ] [ 0 ] = mpx		3344042	0		=			
ANR	3346309	ArrayIndexing	mvd_cache [ 1 ] [ 0 ]		3344042	0					
ANR	3346310	ArrayIndexing	mvd_cache [ 1 ]		3344042	0					
ANR	3346311	Identifier	mvd_cache		3344042	0					
ANR	3346312	PrimaryExpression	1		3344042	1					
ANR	3346313	PrimaryExpression	0		3344042	1					
ANR	3346314	Identifier	mpx		3344042	1					
ANR	3346315	ExpressionStatement	mvd_cache [ 1 ] [ 1 ] = mpy	546:28:12189:12211	3344042	3	True				
ANR	3346316	AssignmentExpression	mvd_cache [ 1 ] [ 1 ] = mpy		3344042	0		=			
ANR	3346317	ArrayIndexing	mvd_cache [ 1 ] [ 1 ]		3344042	0					
ANR	3346318	ArrayIndexing	mvd_cache [ 1 ]		3344042	0					
ANR	3346319	Identifier	mvd_cache		3344042	0					
ANR	3346320	PrimaryExpression	1		3344042	1					
ANR	3346321	PrimaryExpression	1		3344042	1					
ANR	3346322	Identifier	mpy		3344042	1					
ANR	3346323	ElseStatement	else		3344042	0					
ANR	3346324	IfStatement	if ( IS_SUB_4X8 ( sub_mb_type ) )		3344042	0					
ANR	3346325	Condition	IS_SUB_4X8 ( sub_mb_type )	548:33:12247:12269	3344042	0	True				
ANR	3346326	CallExpression	IS_SUB_4X8 ( sub_mb_type )		3344042	0					
ANR	3346327	Callee	IS_SUB_4X8		3344042	0					
ANR	3346328	Identifier	IS_SUB_4X8		3344042	0					
ANR	3346329	ArgumentList	sub_mb_type		3344042	1					
ANR	3346330	Argument	sub_mb_type		3344042	0					
ANR	3346331	Identifier	sub_mb_type		3344042	0					
ANR	3346332	CompoundStatement		548:57:12226:12226	3344042	1					
ANR	3346333	ExpressionStatement	mv_cache [ 8 ] [ 0 ] = mx	550:28:12302:12322	3344042	0	True				
ANR	3346334	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mx		3344042	0		=			
ANR	3346335	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3344042	0					
ANR	3346336	ArrayIndexing	mv_cache [ 8 ]		3344042	0					
ANR	3346337	Identifier	mv_cache		3344042	0					
ANR	3346338	PrimaryExpression	8		3344042	1					
ANR	3346339	PrimaryExpression	0		3344042	1					
ANR	3346340	Identifier	mx		3344042	1					
ANR	3346341	ExpressionStatement	mv_cache [ 8 ] [ 1 ] = my	552:28:12353:12373	3344042	1	True				
ANR	3346342	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = my		3344042	0		=			
ANR	3346343	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3344042	0					
ANR	3346344	ArrayIndexing	mv_cache [ 8 ]		3344042	0					
ANR	3346345	Identifier	mv_cache		3344042	0					
ANR	3346346	PrimaryExpression	8		3344042	1					
ANR	3346347	PrimaryExpression	1		3344042	1					
ANR	3346348	Identifier	my		3344042	1					
ANR	3346349	ExpressionStatement	mvd_cache [ 8 ] [ 0 ] = mpx	556:28:12406:12428	3344042	2	True				
ANR	3346350	AssignmentExpression	mvd_cache [ 8 ] [ 0 ] = mpx		3344042	0		=			
ANR	3346351	ArrayIndexing	mvd_cache [ 8 ] [ 0 ]		3344042	0					
ANR	3346352	ArrayIndexing	mvd_cache [ 8 ]		3344042	0					
ANR	3346353	Identifier	mvd_cache		3344042	0					
ANR	3346354	PrimaryExpression	8		3344042	1					
ANR	3346355	PrimaryExpression	0		3344042	1					
ANR	3346356	Identifier	mpx		3344042	1					
ANR	3346357	ExpressionStatement	mvd_cache [ 8 ] [ 1 ] = mpy	558:28:12459:12481	3344042	3	True				
ANR	3346358	AssignmentExpression	mvd_cache [ 8 ] [ 1 ] = mpy		3344042	0		=			
ANR	3346359	ArrayIndexing	mvd_cache [ 8 ] [ 1 ]		3344042	0					
ANR	3346360	ArrayIndexing	mvd_cache [ 8 ]		3344042	0					
ANR	3346361	Identifier	mvd_cache		3344042	0					
ANR	3346362	PrimaryExpression	8		3344042	1					
ANR	3346363	PrimaryExpression	1		3344042	1					
ANR	3346364	Identifier	mpy		3344042	1					
ANR	3346365	ExpressionStatement	mv_cache [ 0 ] [ 0 ] = mx	562:24:12535:12555	3344042	16	True				
ANR	3346366	AssignmentExpression	mv_cache [ 0 ] [ 0 ] = mx		3344042	0		=			
ANR	3346367	ArrayIndexing	mv_cache [ 0 ] [ 0 ]		3344042	0					
ANR	3346368	ArrayIndexing	mv_cache [ 0 ]		3344042	0					
ANR	3346369	Identifier	mv_cache		3344042	0					
ANR	3346370	PrimaryExpression	0		3344042	1					
ANR	3346371	PrimaryExpression	0		3344042	1					
ANR	3346372	Identifier	mx		3344042	1					
ANR	3346373	ExpressionStatement	mv_cache [ 0 ] [ 1 ] = my	564:24:12582:12602	3344042	17	True				
ANR	3346374	AssignmentExpression	mv_cache [ 0 ] [ 1 ] = my		3344042	0		=			
ANR	3346375	ArrayIndexing	mv_cache [ 0 ] [ 1 ]		3344042	0					
ANR	3346376	ArrayIndexing	mv_cache [ 0 ]		3344042	0					
ANR	3346377	Identifier	mv_cache		3344042	0					
ANR	3346378	PrimaryExpression	0		3344042	1					
ANR	3346379	PrimaryExpression	1		3344042	1					
ANR	3346380	Identifier	my		3344042	1					
ANR	3346381	ExpressionStatement	mvd_cache [ 0 ] [ 0 ] = mpx	568:24:12631:12653	3344042	18	True				
ANR	3346382	AssignmentExpression	mvd_cache [ 0 ] [ 0 ] = mpx		3344042	0		=			
ANR	3346383	ArrayIndexing	mvd_cache [ 0 ] [ 0 ]		3344042	0					
ANR	3346384	ArrayIndexing	mvd_cache [ 0 ]		3344042	0					
ANR	3346385	Identifier	mvd_cache		3344042	0					
ANR	3346386	PrimaryExpression	0		3344042	1					
ANR	3346387	PrimaryExpression	0		3344042	1					
ANR	3346388	Identifier	mpx		3344042	1					
ANR	3346389	ExpressionStatement	mvd_cache [ 0 ] [ 1 ] = mpy	570:24:12680:12702	3344042	19	True				
ANR	3346390	AssignmentExpression	mvd_cache [ 0 ] [ 1 ] = mpy		3344042	0		=			
ANR	3346391	ArrayIndexing	mvd_cache [ 0 ] [ 1 ]		3344042	0					
ANR	3346392	ArrayIndexing	mvd_cache [ 0 ]		3344042	0					
ANR	3346393	Identifier	mvd_cache		3344042	0					
ANR	3346394	PrimaryExpression	0		3344042	1					
ANR	3346395	PrimaryExpression	1		3344042	1					
ANR	3346396	Identifier	mpy		3344042	1					
ANR	3346397	ElseStatement	else		3344042	0					
ANR	3346398	CompoundStatement		574:21:12704:12704	3344042	0					
ANR	3346399	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 4 )"	576:20:12772:12835	3344042	0	True				
ANR	3346400	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 4 )"		3344042	0					
ANR	3346401	Callee	fill_rectangle		3344042	0					
ANR	3346402	Identifier	fill_rectangle		3344042	0					
ANR	3346403	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	1					
ANR	3346404	Argument	h -> mv_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3346405	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3346406	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3346407	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3346408	Identifier	h		3344042	0					
ANR	3346409	Identifier	mv_cache		3344042	1					
ANR	3346410	Identifier	list		3344042	1					
ANR	3346411	ArrayIndexing	scan8 [ 4 * i ]		3344042	1					
ANR	3346412	Identifier	scan8		3344042	0					
ANR	3346413	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3346414	PrimaryExpression	4		3344042	0					
ANR	3346415	Identifier	i		3344042	1					
ANR	3346416	Argument	2		3344042	1					
ANR	3346417	PrimaryExpression	2		3344042	0					
ANR	3346418	Argument	2		3344042	2					
ANR	3346419	PrimaryExpression	2		3344042	0					
ANR	3346420	Argument	8		3344042	3					
ANR	3346421	PrimaryExpression	8		3344042	0					
ANR	3346422	Argument	0		3344042	4					
ANR	3346423	PrimaryExpression	0		3344042	0					
ANR	3346424	Argument	4		3344042	5					
ANR	3346425	PrimaryExpression	4		3344042	0					
ANR	3346426	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 2 )"	578:20:12858:12921	3344042	1	True				
ANR	3346427	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ] , 2 , 2 , 8 , 0 , 2 )"		3344042	0					
ANR	3346428	Callee	fill_rectangle		3344042	0					
ANR	3346429	Identifier	fill_rectangle		3344042	0					
ANR	3346430	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	1					
ANR	3346431	Argument	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3346432	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 4 * i ] ]		3344042	0					
ANR	3346433	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3346434	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3346435	Identifier	h		3344042	0					
ANR	3346436	Identifier	mvd_cache		3344042	1					
ANR	3346437	Identifier	list		3344042	1					
ANR	3346438	ArrayIndexing	scan8 [ 4 * i ]		3344042	1					
ANR	3346439	Identifier	scan8		3344042	0					
ANR	3346440	MultiplicativeExpression	4 * i		3344042	1		*			
ANR	3346441	PrimaryExpression	4		3344042	0					
ANR	3346442	Identifier	i		3344042	1					
ANR	3346443	Argument	2		3344042	1					
ANR	3346444	PrimaryExpression	2		3344042	0					
ANR	3346445	Argument	2		3344042	2					
ANR	3346446	PrimaryExpression	2		3344042	0					
ANR	3346447	Argument	8		3344042	3					
ANR	3346448	PrimaryExpression	8		3344042	0					
ANR	3346449	Argument	0		3344042	4					
ANR	3346450	PrimaryExpression	0		3344042	0					
ANR	3346451	Argument	2		3344042	5					
ANR	3346452	PrimaryExpression	2		3344042	0					
ANR	3346453	ElseStatement	else		3344042	0					
ANR	3346454	IfStatement	if ( IS_DIRECT ( mb_type ) )		3344042	0					
ANR	3346455	Condition	IS_DIRECT ( mb_type )	586:15:12984:13001	3344042	0	True				
ANR	3346456	CallExpression	IS_DIRECT ( mb_type )		3344042	0					
ANR	3346457	Callee	IS_DIRECT		3344042	0					
ANR	3346458	Identifier	IS_DIRECT		3344042	0					
ANR	3346459	ArgumentList	mb_type		3344042	1					
ANR	3346460	Argument	mb_type		3344042	0					
ANR	3346461	Identifier	mb_type		3344042	0					
ANR	3346462	CompoundStatement		586:36:12960:12960	3344042	1					
ANR	3346463	ExpressionStatement	"ff_h264_pred_direct_motion ( h , & mb_type )"	588:8:13016:13055	3344042	0	True				
ANR	3346464	CallExpression	"ff_h264_pred_direct_motion ( h , & mb_type )"		3344042	0					
ANR	3346465	Callee	ff_h264_pred_direct_motion		3344042	0					
ANR	3346466	Identifier	ff_h264_pred_direct_motion		3344042	0					
ANR	3346467	ArgumentList	h		3344042	1					
ANR	3346468	Argument	h		3344042	0					
ANR	3346469	Identifier	h		3344042	0					
ANR	3346470	Argument	& mb_type		3344042	1					
ANR	3346471	UnaryOperationExpression	& mb_type		3344042	0					
ANR	3346472	UnaryOperator	&		3344042	0					
ANR	3346473	Identifier	mb_type		3344042	1					
ANR	3346474	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ 0 ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 2 )"	590:8:13066:13122	3344042	1	True				
ANR	3346475	CallExpression	"fill_rectangle ( h -> mvd_cache [ 0 ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 2 )"		3344042	0					
ANR	3346476	Callee	fill_rectangle		3344042	0					
ANR	3346477	Identifier	fill_rectangle		3344042	0					
ANR	3346478	ArgumentList	h -> mvd_cache [ 0 ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346479	Argument	h -> mvd_cache [ 0 ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346480	ArrayIndexing	h -> mvd_cache [ 0 ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346481	ArrayIndexing	h -> mvd_cache [ 0 ]		3344042	0					
ANR	3346482	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3346483	Identifier	h		3344042	0					
ANR	3346484	Identifier	mvd_cache		3344042	1					
ANR	3346485	PrimaryExpression	0		3344042	1					
ANR	3346486	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346487	Identifier	scan8		3344042	0					
ANR	3346488	PrimaryExpression	0		3344042	1					
ANR	3346489	Argument	4		3344042	1					
ANR	3346490	PrimaryExpression	4		3344042	0					
ANR	3346491	Argument	4		3344042	2					
ANR	3346492	PrimaryExpression	4		3344042	0					
ANR	3346493	Argument	8		3344042	3					
ANR	3346494	PrimaryExpression	8		3344042	0					
ANR	3346495	Argument	0		3344042	4					
ANR	3346496	PrimaryExpression	0		3344042	0					
ANR	3346497	Argument	2		3344042	5					
ANR	3346498	PrimaryExpression	2		3344042	0					
ANR	3346499	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ 1 ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 2 )"	592:8:13133:13189	3344042	2	True				
ANR	3346500	CallExpression	"fill_rectangle ( h -> mvd_cache [ 1 ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 2 )"		3344042	0					
ANR	3346501	Callee	fill_rectangle		3344042	0					
ANR	3346502	Identifier	fill_rectangle		3344042	0					
ANR	3346503	ArgumentList	h -> mvd_cache [ 1 ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346504	Argument	h -> mvd_cache [ 1 ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346505	ArrayIndexing	h -> mvd_cache [ 1 ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346506	ArrayIndexing	h -> mvd_cache [ 1 ]		3344042	0					
ANR	3346507	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3346508	Identifier	h		3344042	0					
ANR	3346509	Identifier	mvd_cache		3344042	1					
ANR	3346510	PrimaryExpression	1		3344042	1					
ANR	3346511	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346512	Identifier	scan8		3344042	0					
ANR	3346513	PrimaryExpression	0		3344042	1					
ANR	3346514	Argument	4		3344042	1					
ANR	3346515	PrimaryExpression	4		3344042	0					
ANR	3346516	Argument	4		3344042	2					
ANR	3346517	PrimaryExpression	4		3344042	0					
ANR	3346518	Argument	8		3344042	3					
ANR	3346519	PrimaryExpression	8		3344042	0					
ANR	3346520	Argument	0		3344042	4					
ANR	3346521	PrimaryExpression	0		3344042	0					
ANR	3346522	Argument	2		3344042	5					
ANR	3346523	PrimaryExpression	2		3344042	0					
ANR	3346524	ExpressionStatement	dct8x8_allowed &= h -> sps . direct_8x8_inference_flag	594:8:13200:13250	3344042	3	True				
ANR	3346525	AssignmentExpression	dct8x8_allowed &= h -> sps . direct_8x8_inference_flag		3344042	0		&=			
ANR	3346526	Identifier	dct8x8_allowed		3344042	0					
ANR	3346527	MemberAccess	h -> sps . direct_8x8_inference_flag		3344042	1					
ANR	3346528	PtrMemberAccess	h -> sps		3344042	0					
ANR	3346529	Identifier	h		3344042	0					
ANR	3346530	Identifier	sps		3344042	1					
ANR	3346531	Identifier	direct_8x8_inference_flag		3344042	1					
ANR	3346532	ElseStatement	else		3344042	0					
ANR	3346533	CompoundStatement		598:8:13230:13241	3344042	0					
ANR	3346534	IdentifierDeclStatement	"int list , i ;"	598:8:13275:13286	3344042	0	True				
ANR	3346535	IdentifierDecl	list		3344042	0					
ANR	3346536	IdentifierDeclType	int		3344042	0					
ANR	3346537	Identifier	list		3344042	1					
ANR	3346538	IdentifierDecl	i		3344042	1					
ANR	3346539	IdentifierDeclType	int		3344042	0					
ANR	3346540	Identifier	i		3344042	1					
ANR	3346541	IfStatement	if ( IS_16X16 ( mb_type ) )		3344042	1					
ANR	3346542	Condition	IS_16X16 ( mb_type )	600:11:13300:13316	3344042	0	True				
ANR	3346543	CallExpression	IS_16X16 ( mb_type )		3344042	0					
ANR	3346544	Callee	IS_16X16		3344042	0					
ANR	3346545	Identifier	IS_16X16		3344042	0					
ANR	3346546	ArgumentList	mb_type		3344042	1					
ANR	3346547	Argument	mb_type		3344042	0					
ANR	3346548	Identifier	mb_type		3344042	0					
ANR	3346549	CompoundStatement		600:29:13273:13273	3344042	1					
ANR	3346550	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	0					
ANR	3346551	ForInit	list = 0 ;	602:16:13337:13343	3344042	0	True				
ANR	3346552	AssignmentExpression	list = 0		3344042	0		=			
ANR	3346553	Identifier	list		3344042	0					
ANR	3346554	PrimaryExpression	0		3344042	1					
ANR	3346555	Condition	list < h -> list_count	602:24:13345:13362	3344042	1	True				
ANR	3346556	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3346557	Identifier	list		3344042	0					
ANR	3346558	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3346559	Identifier	h		3344042	0					
ANR	3346560	Identifier	list_count		3344042	1					
ANR	3346561	PostIncDecOperationExpression	list ++	602:44:13365:13370	3344042	2	True				
ANR	3346562	Identifier	list		3344042	0					
ANR	3346563	IncDec	++		3344042	1					
ANR	3346564	CompoundStatement		602:51:13327:13327	3344042	3					
ANR	3346565	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3344042	0					
ANR	3346566	Condition	"IS_DIR ( mb_type , 0 , list )"	604:19:13394:13417	3344042	0	True				
ANR	3346567	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3344042	0					
ANR	3346568	Callee	IS_DIR		3344042	0					
ANR	3346569	Identifier	IS_DIR		3344042	0					
ANR	3346570	ArgumentList	mb_type		3344042	1					
ANR	3346571	Argument	mb_type		3344042	0					
ANR	3346572	Identifier	mb_type		3344042	0					
ANR	3346573	Argument	0		3344042	1					
ANR	3346574	PrimaryExpression	0		3344042	0					
ANR	3346575	Argument	list		3344042	2					
ANR	3346576	Identifier	list		3344042	0					
ANR	3346577	CompoundStatement		606:20:13397:13404	3344042	1					
ANR	3346578	IdentifierDeclStatement	int ref ;	606:20:13442:13449	3344042	0	True				
ANR	3346579	IdentifierDecl	ref		3344042	0					
ANR	3346580	IdentifierDeclType	int		3344042	0					
ANR	3346581	Identifier	ref		3344042	1					
ANR	3346582	IfStatement	if ( h -> ref_count [ list ] > 1 )		3344042	1					
ANR	3346583	Condition	h -> ref_count [ list ] > 1	608:23:13475:13496	3344042	0	True				
ANR	3346584	RelationalExpression	h -> ref_count [ list ] > 1		3344042	0		>			
ANR	3346585	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3346586	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346587	Identifier	h		3344042	0					
ANR	3346588	Identifier	ref_count		3344042	1					
ANR	3346589	Identifier	list		3344042	1					
ANR	3346590	PrimaryExpression	1		3344042	1					
ANR	3346591	CompoundStatement		608:46:13453:13453	3344042	1					
ANR	3346592	ExpressionStatement	"ref = decode_cabac_mb_ref ( h , list , 0 )"	610:24:13525:13561	3344042	0	True				
ANR	3346593	AssignmentExpression	"ref = decode_cabac_mb_ref ( h , list , 0 )"		3344042	0		=			
ANR	3346594	Identifier	ref		3344042	0					
ANR	3346595	CallExpression	"decode_cabac_mb_ref ( h , list , 0 )"		3344042	1					
ANR	3346596	Callee	decode_cabac_mb_ref		3344042	0					
ANR	3346597	Identifier	decode_cabac_mb_ref		3344042	0					
ANR	3346598	ArgumentList	h		3344042	1					
ANR	3346599	Argument	h		3344042	0					
ANR	3346600	Identifier	h		3344042	0					
ANR	3346601	Argument	list		3344042	1					
ANR	3346602	Identifier	list		3344042	0					
ANR	3346603	Argument	0		3344042	2					
ANR	3346604	PrimaryExpression	0		3344042	0					
ANR	3346605	IfStatement	if ( ref >= ( unsigned ) h -> ref_count [ list ] )		3344042	1					
ANR	3346606	Condition	ref >= ( unsigned ) h -> ref_count [ list ]	612:27:13591:13625	3344042	0	True				
ANR	3346607	RelationalExpression	ref >= ( unsigned ) h -> ref_count [ list ]		3344042	0		>=			
ANR	3346608	Identifier	ref		3344042	0					
ANR	3346609	CastExpression	( unsigned ) h -> ref_count [ list ]		3344042	1					
ANR	3346610	CastTarget	unsigned		3344042	0					
ANR	3346611	ArrayIndexing	h -> ref_count [ list ]		3344042	1					
ANR	3346612	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346613	Identifier	h		3344042	0					
ANR	3346614	Identifier	ref_count		3344042	1					
ANR	3346615	Identifier	list		3344042	1					
ANR	3346616	CompoundStatement		612:63:13582:13582	3344042	1					
ANR	3346617	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"	614:28:13658:13737	3344042	0	True				
ANR	3346618	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"		3344042	0					
ANR	3346619	Callee	av_log		3344042	0					
ANR	3346620	Identifier	av_log		3344042	0					
ANR	3346621	ArgumentList	s -> avctx		3344042	1					
ANR	3346622	Argument	s -> avctx		3344042	0					
ANR	3346623	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3346624	Identifier	s		3344042	0					
ANR	3346625	Identifier	avctx		3344042	1					
ANR	3346626	Argument	AV_LOG_ERROR		3344042	1					
ANR	3346627	Identifier	AV_LOG_ERROR		3344042	0					
ANR	3346628	Argument	"""Reference %d >= %d\\n"""		3344042	2					
ANR	3346629	PrimaryExpression	"""Reference %d >= %d\\n"""		3344042	0					
ANR	3346630	Argument	ref		3344042	3					
ANR	3346631	Identifier	ref		3344042	0					
ANR	3346632	Argument	h -> ref_count [ list ]		3344042	4					
ANR	3346633	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3346634	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346635	Identifier	h		3344042	0					
ANR	3346636	Identifier	ref_count		3344042	1					
ANR	3346637	Identifier	list		3344042	1					
ANR	3346638	ElseStatement	else		3344042	0					
ANR	3346639	ExpressionStatement	ref = 0	621:24:13819:13824	3344042	0	True				
ANR	3346640	AssignmentExpression	ref = 0		3344042	0		=			
ANR	3346641	Identifier	ref		3344042	0					
ANR	3346642	PrimaryExpression	0		3344042	1					
ANR	3346643	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , ref , 1 )"	623:24:13851:13915	3344042	2	True				
ANR	3346644	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , ref , 1 )"		3344042	0					
ANR	3346645	Callee	fill_rectangle		3344042	0					
ANR	3346646	Identifier	fill_rectangle		3344042	0					
ANR	3346647	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346648	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346649	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346650	UnaryOperator	&		3344042	0					
ANR	3346651	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346652	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3346653	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3346654	Identifier	h		3344042	0					
ANR	3346655	Identifier	ref_cache		3344042	1					
ANR	3346656	Identifier	list		3344042	1					
ANR	3346657	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346658	Identifier	scan8		3344042	0					
ANR	3346659	PrimaryExpression	0		3344042	1					
ANR	3346660	Argument	4		3344042	1					
ANR	3346661	PrimaryExpression	4		3344042	0					
ANR	3346662	Argument	4		3344042	2					
ANR	3346663	PrimaryExpression	4		3344042	0					
ANR	3346664	Argument	8		3344042	3					
ANR	3346665	PrimaryExpression	8		3344042	0					
ANR	3346666	Argument	ref		3344042	4					
ANR	3346667	Identifier	ref		3344042	0					
ANR	3346668	Argument	1		3344042	5					
ANR	3346669	PrimaryExpression	1		3344042	0					
ANR	3346670	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	1					
ANR	3346671	ForInit	list = 0 ;	629:16:13968:13974	3344042	0	True				
ANR	3346672	AssignmentExpression	list = 0		3344042	0		=			
ANR	3346673	Identifier	list		3344042	0					
ANR	3346674	PrimaryExpression	0		3344042	1					
ANR	3346675	Condition	list < h -> list_count	629:24:13976:13993	3344042	1	True				
ANR	3346676	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3346677	Identifier	list		3344042	0					
ANR	3346678	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3346679	Identifier	h		3344042	0					
ANR	3346680	Identifier	list_count		3344042	1					
ANR	3346681	PostIncDecOperationExpression	list ++	629:44:13996:14001	3344042	2	True				
ANR	3346682	Identifier	list		3344042	0					
ANR	3346683	IncDec	++		3344042	1					
ANR	3346684	CompoundStatement		629:51:13958:13958	3344042	3					
ANR	3346685	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3344042	0					
ANR	3346686	Condition	"IS_DIR ( mb_type , 0 , list )"	631:19:14025:14048	3344042	0	True				
ANR	3346687	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3344042	0					
ANR	3346688	Callee	IS_DIR		3344042	0					
ANR	3346689	Identifier	IS_DIR		3344042	0					
ANR	3346690	ArgumentList	mb_type		3344042	1					
ANR	3346691	Argument	mb_type		3344042	0					
ANR	3346692	Identifier	mb_type		3344042	0					
ANR	3346693	Argument	0		3344042	1					
ANR	3346694	PrimaryExpression	0		3344042	0					
ANR	3346695	Argument	list		3344042	2					
ANR	3346696	Identifier	list		3344042	0					
ANR	3346697	CompoundStatement		633:20:14028:14045	3344042	1					
ANR	3346698	IdentifierDeclStatement	"int mx , my , mpx , mpy ;"	633:20:14073:14090	3344042	0	True				
ANR	3346699	IdentifierDecl	mx		3344042	0					
ANR	3346700	IdentifierDeclType	int		3344042	0					
ANR	3346701	Identifier	mx		3344042	1					
ANR	3346702	IdentifierDecl	my		3344042	1					
ANR	3346703	IdentifierDeclType	int		3344042	0					
ANR	3346704	Identifier	my		3344042	1					
ANR	3346705	IdentifierDecl	mpx		3344042	2					
ANR	3346706	IdentifierDeclType	int		3344042	0					
ANR	3346707	Identifier	mpx		3344042	1					
ANR	3346708	IdentifierDecl	mpy		3344042	3					
ANR	3346709	IdentifierDeclType	int		3344042	0					
ANR	3346710	Identifier	mpy		3344042	1					
ANR	3346711	ExpressionStatement	"pred_motion ( h , 0 , 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"	635:20:14113:14181	3344042	1	True				
ANR	3346712	CallExpression	"pred_motion ( h , 0 , 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"		3344042	0					
ANR	3346713	Callee	pred_motion		3344042	0					
ANR	3346714	Identifier	pred_motion		3344042	0					
ANR	3346715	ArgumentList	h		3344042	1					
ANR	3346716	Argument	h		3344042	0					
ANR	3346717	Identifier	h		3344042	0					
ANR	3346718	Argument	0		3344042	1					
ANR	3346719	PrimaryExpression	0		3344042	0					
ANR	3346720	Argument	4		3344042	2					
ANR	3346721	PrimaryExpression	4		3344042	0					
ANR	3346722	Argument	list		3344042	3					
ANR	3346723	Identifier	list		3344042	0					
ANR	3346724	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	4					
ANR	3346725	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346726	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3346727	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3346728	Identifier	h		3344042	0					
ANR	3346729	Identifier	ref_cache		3344042	1					
ANR	3346730	Identifier	list		3344042	1					
ANR	3346731	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346732	Identifier	scan8		3344042	0					
ANR	3346733	PrimaryExpression	0		3344042	1					
ANR	3346734	Argument	& mx		3344042	5					
ANR	3346735	UnaryOperationExpression	& mx		3344042	0					
ANR	3346736	UnaryOperator	&		3344042	0					
ANR	3346737	Identifier	mx		3344042	1					
ANR	3346738	Argument	& my		3344042	6					
ANR	3346739	UnaryOperationExpression	& my		3344042	0					
ANR	3346740	UnaryOperator	&		3344042	0					
ANR	3346741	Identifier	my		3344042	1					
ANR	3346742	Statement	DECODE_CABAC_MB_MVD	637:20:14204:14222	3344042	2	True				
ANR	3346743	Statement	(	637:39:14223:14223	3344042	3	True				
ANR	3346744	Statement	h	637:41:14225:14225	3344042	4	True				
ANR	3346745	Statement	","	637:42:14226:14226	3344042	5	True				
ANR	3346746	Statement	list	637:44:14228:14231	3344042	6	True				
ANR	3346747	Statement	","	637:48:14232:14232	3344042	7	True				
ANR	3346748	Statement	0	637:50:14234:14234	3344042	8	True				
ANR	3346749	Statement	)	637:51:14235:14235	3344042	9	True				
ANR	3346750	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	639:20:14258:14303	3344042	10	True				
ANR	3346751	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3344042	0					
ANR	3346752	Callee	tprintf		3344042	0					
ANR	3346753	Identifier	tprintf		3344042	0					
ANR	3346754	ArgumentList	s -> avctx		3344042	1					
ANR	3346755	Argument	s -> avctx		3344042	0					
ANR	3346756	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3346757	Identifier	s		3344042	0					
ANR	3346758	Identifier	avctx		3344042	1					
ANR	3346759	Argument	"""final mv:%d %d\\n"""		3344042	1					
ANR	3346760	PrimaryExpression	"""final mv:%d %d\\n"""		3344042	0					
ANR	3346761	Argument	mx		3344042	2					
ANR	3346762	Identifier	mx		3344042	0					
ANR	3346763	Argument	my		3344042	3					
ANR	3346764	Identifier	my		3344042	0					
ANR	3346765	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack8to16 ( mpx , mpy ) , 2 )"	643:20:14328:14406	3344042	11	True				
ANR	3346766	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack8to16 ( mpx , mpy ) , 2 )"		3344042	0					
ANR	3346767	Callee	fill_rectangle		3344042	0					
ANR	3346768	Identifier	fill_rectangle		3344042	0					
ANR	3346769	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346770	Argument	h -> mvd_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346771	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346772	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3346773	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3346774	Identifier	h		3344042	0					
ANR	3346775	Identifier	mvd_cache		3344042	1					
ANR	3346776	Identifier	list		3344042	1					
ANR	3346777	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346778	Identifier	scan8		3344042	0					
ANR	3346779	PrimaryExpression	0		3344042	1					
ANR	3346780	Argument	4		3344042	1					
ANR	3346781	PrimaryExpression	4		3344042	0					
ANR	3346782	Argument	4		3344042	2					
ANR	3346783	PrimaryExpression	4		3344042	0					
ANR	3346784	Argument	8		3344042	3					
ANR	3346785	PrimaryExpression	8		3344042	0					
ANR	3346786	Argument	"pack8to16 ( mpx , mpy )"		3344042	4					
ANR	3346787	CallExpression	"pack8to16 ( mpx , mpy )"		3344042	0					
ANR	3346788	Callee	pack8to16		3344042	0					
ANR	3346789	Identifier	pack8to16		3344042	0					
ANR	3346790	ArgumentList	mpx		3344042	1					
ANR	3346791	Argument	mpx		3344042	0					
ANR	3346792	Identifier	mpx		3344042	0					
ANR	3346793	Argument	mpy		3344042	1					
ANR	3346794	Identifier	mpy		3344042	0					
ANR	3346795	Argument	2		3344042	5					
ANR	3346796	PrimaryExpression	2		3344042	0					
ANR	3346797	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"	645:20:14429:14505	3344042	12	True				
ANR	3346798	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"		3344042	0					
ANR	3346799	Callee	fill_rectangle		3344042	0					
ANR	3346800	Identifier	fill_rectangle		3344042	0					
ANR	3346801	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3344042	1					
ANR	3346802	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346803	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] ]		3344042	0					
ANR	3346804	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3346805	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3346806	Identifier	h		3344042	0					
ANR	3346807	Identifier	mv_cache		3344042	1					
ANR	3346808	Identifier	list		3344042	1					
ANR	3346809	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3346810	Identifier	scan8		3344042	0					
ANR	3346811	PrimaryExpression	0		3344042	1					
ANR	3346812	Argument	4		3344042	1					
ANR	3346813	PrimaryExpression	4		3344042	0					
ANR	3346814	Argument	4		3344042	2					
ANR	3346815	PrimaryExpression	4		3344042	0					
ANR	3346816	Argument	8		3344042	3					
ANR	3346817	PrimaryExpression	8		3344042	0					
ANR	3346818	Argument	"pack16to32 ( mx , my )"		3344042	4					
ANR	3346819	CallExpression	"pack16to32 ( mx , my )"		3344042	0					
ANR	3346820	Callee	pack16to32		3344042	0					
ANR	3346821	Identifier	pack16to32		3344042	0					
ANR	3346822	ArgumentList	mx		3344042	1					
ANR	3346823	Argument	mx		3344042	0					
ANR	3346824	Identifier	mx		3344042	0					
ANR	3346825	Argument	my		3344042	1					
ANR	3346826	Identifier	my		3344042	0					
ANR	3346827	Argument	4		3344042	5					
ANR	3346828	PrimaryExpression	4		3344042	0					
ANR	3346829	ElseStatement	else		3344042	0					
ANR	3346830	IfStatement	if ( IS_16X8 ( mb_type ) )		3344042	0					
ANR	3346831	Condition	IS_16X8 ( mb_type )	653:16:14569:14584	3344042	0	True				
ANR	3346832	CallExpression	IS_16X8 ( mb_type )		3344042	0					
ANR	3346833	Callee	IS_16X8		3344042	0					
ANR	3346834	Identifier	IS_16X8		3344042	0					
ANR	3346835	ArgumentList	mb_type		3344042	1					
ANR	3346836	Argument	mb_type		3344042	0					
ANR	3346837	Identifier	mb_type		3344042	0					
ANR	3346838	CompoundStatement		653:33:14541:14541	3344042	1					
ANR	3346839	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	0					
ANR	3346840	ForInit	list = 0 ;	655:16:14605:14611	3344042	0	True				
ANR	3346841	AssignmentExpression	list = 0		3344042	0		=			
ANR	3346842	Identifier	list		3344042	0					
ANR	3346843	PrimaryExpression	0		3344042	1					
ANR	3346844	Condition	list < h -> list_count	655:24:14613:14630	3344042	1	True				
ANR	3346845	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3346846	Identifier	list		3344042	0					
ANR	3346847	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3346848	Identifier	h		3344042	0					
ANR	3346849	Identifier	list_count		3344042	1					
ANR	3346850	PostIncDecOperationExpression	list ++	655:44:14633:14638	3344042	2	True				
ANR	3346851	Identifier	list		3344042	0					
ANR	3346852	IncDec	++		3344042	1					
ANR	3346853	CompoundStatement		655:51:14595:14595	3344042	3					
ANR	3346854	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3344042	0					
ANR	3346855	ForInit	i = 0 ;	657:24:14667:14670	3344042	0	True				
ANR	3346856	AssignmentExpression	i = 0		3344042	0		=			
ANR	3346857	Identifier	i		3344042	0					
ANR	3346858	PrimaryExpression	0		3344042	1					
ANR	3346859	Condition	i < 2	657:29:14672:14674	3344042	1	True				
ANR	3346860	RelationalExpression	i < 2		3344042	0		<			
ANR	3346861	Identifier	i		3344042	0					
ANR	3346862	PrimaryExpression	2		3344042	1					
ANR	3346863	PostIncDecOperationExpression	i ++	657:34:14677:14679	3344042	2	True				
ANR	3346864	Identifier	i		3344042	0					
ANR	3346865	IncDec	++		3344042	1					
ANR	3346866	CompoundStatement		657:38:14636:14636	3344042	3					
ANR	3346867	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3344042	0					
ANR	3346868	Condition	"IS_DIR ( mb_type , i , list )"	659:27:14711:14734	3344042	0	True				
ANR	3346869	CallExpression	"IS_DIR ( mb_type , i , list )"		3344042	0					
ANR	3346870	Callee	IS_DIR		3344042	0					
ANR	3346871	Identifier	IS_DIR		3344042	0					
ANR	3346872	ArgumentList	mb_type		3344042	1					
ANR	3346873	Argument	mb_type		3344042	0					
ANR	3346874	Identifier	mb_type		3344042	0					
ANR	3346875	Argument	i		3344042	1					
ANR	3346876	Identifier	i		3344042	0					
ANR	3346877	Argument	list		3344042	2					
ANR	3346878	Identifier	list		3344042	0					
ANR	3346879	CompoundStatement		661:28:14722:14729	3344042	1					
ANR	3346880	IdentifierDeclStatement	int ref ;	661:28:14767:14774	3344042	0	True				
ANR	3346881	IdentifierDecl	ref		3344042	0					
ANR	3346882	IdentifierDeclType	int		3344042	0					
ANR	3346883	Identifier	ref		3344042	1					
ANR	3346884	IfStatement	if ( h -> ref_count [ list ] > 1 )		3344042	1					
ANR	3346885	Condition	h -> ref_count [ list ] > 1	663:31:14808:14829	3344042	0	True				
ANR	3346886	RelationalExpression	h -> ref_count [ list ] > 1		3344042	0		>			
ANR	3346887	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3346888	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346889	Identifier	h		3344042	0					
ANR	3346890	Identifier	ref_count		3344042	1					
ANR	3346891	Identifier	list		3344042	1					
ANR	3346892	PrimaryExpression	1		3344042	1					
ANR	3346893	CompoundStatement		663:54:14786:14786	3344042	1					
ANR	3346894	ExpressionStatement	"ref = decode_cabac_mb_ref ( h , list , 8 * i )"	665:32:14866:14906	3344042	0	True				
ANR	3346895	AssignmentExpression	"ref = decode_cabac_mb_ref ( h , list , 8 * i )"		3344042	0		=			
ANR	3346896	Identifier	ref		3344042	0					
ANR	3346897	CallExpression	"decode_cabac_mb_ref ( h , list , 8 * i )"		3344042	1					
ANR	3346898	Callee	decode_cabac_mb_ref		3344042	0					
ANR	3346899	Identifier	decode_cabac_mb_ref		3344042	0					
ANR	3346900	ArgumentList	h		3344042	1					
ANR	3346901	Argument	h		3344042	0					
ANR	3346902	Identifier	h		3344042	0					
ANR	3346903	Argument	list		3344042	1					
ANR	3346904	Identifier	list		3344042	0					
ANR	3346905	Argument	8 * i		3344042	2					
ANR	3346906	MultiplicativeExpression	8 * i		3344042	0		*			
ANR	3346907	PrimaryExpression	8		3344042	0					
ANR	3346908	Identifier	i		3344042	1					
ANR	3346909	IfStatement	if ( ref >= ( unsigned ) h -> ref_count [ list ] )		3344042	1					
ANR	3346910	Condition	ref >= ( unsigned ) h -> ref_count [ list ]	667:35:14944:14978	3344042	0	True				
ANR	3346911	RelationalExpression	ref >= ( unsigned ) h -> ref_count [ list ]		3344042	0		>=			
ANR	3346912	Identifier	ref		3344042	0					
ANR	3346913	CastExpression	( unsigned ) h -> ref_count [ list ]		3344042	1					
ANR	3346914	CastTarget	unsigned		3344042	0					
ANR	3346915	ArrayIndexing	h -> ref_count [ list ]		3344042	1					
ANR	3346916	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346917	Identifier	h		3344042	0					
ANR	3346918	Identifier	ref_count		3344042	1					
ANR	3346919	Identifier	list		3344042	1					
ANR	3346920	CompoundStatement		667:71:14935:14935	3344042	1					
ANR	3346921	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"	669:36:15019:15098	3344042	0	True				
ANR	3346922	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"		3344042	0					
ANR	3346923	Callee	av_log		3344042	0					
ANR	3346924	Identifier	av_log		3344042	0					
ANR	3346925	ArgumentList	s -> avctx		3344042	1					
ANR	3346926	Argument	s -> avctx		3344042	0					
ANR	3346927	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3346928	Identifier	s		3344042	0					
ANR	3346929	Identifier	avctx		3344042	1					
ANR	3346930	Argument	AV_LOG_ERROR		3344042	1					
ANR	3346931	Identifier	AV_LOG_ERROR		3344042	0					
ANR	3346932	Argument	"""Reference %d >= %d\\n"""		3344042	2					
ANR	3346933	PrimaryExpression	"""Reference %d >= %d\\n"""		3344042	0					
ANR	3346934	Argument	ref		3344042	3					
ANR	3346935	Identifier	ref		3344042	0					
ANR	3346936	Argument	h -> ref_count [ list ]		3344042	4					
ANR	3346937	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3346938	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3346939	Identifier	h		3344042	0					
ANR	3346940	Identifier	ref_count		3344042	1					
ANR	3346941	Identifier	list		3344042	1					
ANR	3346942	ElseStatement	else		3344042	0					
ANR	3346943	ExpressionStatement	ref = 0	676:32:15204:15209	3344042	0	True				
ANR	3346944	AssignmentExpression	ref = 0		3344042	0		=			
ANR	3346945	Identifier	ref		3344042	0					
ANR	3346946	PrimaryExpression	0		3344042	1					
ANR	3346947	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , ref , 1 )"	678:28:15240:15311	3344042	2	True				
ANR	3346948	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , ref , 1 )"		3344042	0					
ANR	3346949	Callee	fill_rectangle		3344042	0					
ANR	3346950	Identifier	fill_rectangle		3344042	0					
ANR	3346951	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3346952	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3346953	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3346954	UnaryOperator	&		3344042	0					
ANR	3346955	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3346956	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3346957	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3346958	Identifier	h		3344042	0					
ANR	3346959	Identifier	ref_cache		3344042	1					
ANR	3346960	Identifier	list		3344042	1					
ANR	3346961	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3346962	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3346963	Identifier	scan8		3344042	0					
ANR	3346964	PrimaryExpression	0		3344042	1					
ANR	3346965	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3346966	PrimaryExpression	16		3344042	0					
ANR	3346967	Identifier	i		3344042	1					
ANR	3346968	Argument	4		3344042	1					
ANR	3346969	PrimaryExpression	4		3344042	0					
ANR	3346970	Argument	2		3344042	2					
ANR	3346971	PrimaryExpression	2		3344042	0					
ANR	3346972	Argument	8		3344042	3					
ANR	3346973	PrimaryExpression	8		3344042	0					
ANR	3346974	Argument	ref		3344042	4					
ANR	3346975	Identifier	ref		3344042	0					
ANR	3346976	Argument	1		3344042	5					
ANR	3346977	PrimaryExpression	1		3344042	0					
ANR	3346978	ElseStatement	else		3344042	0					
ANR	3346979	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , ( LIST_NOT_USED & 0xFF ) , 1 )"	682:28:15373:15461	3344042	0	True				
ANR	3346980	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , ( LIST_NOT_USED & 0xFF ) , 1 )"		3344042	0					
ANR	3346981	Callee	fill_rectangle		3344042	0					
ANR	3346982	Identifier	fill_rectangle		3344042	0					
ANR	3346983	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3346984	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3346985	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3346986	UnaryOperator	&		3344042	0					
ANR	3346987	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3346988	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3346989	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3346990	Identifier	h		3344042	0					
ANR	3346991	Identifier	ref_cache		3344042	1					
ANR	3346992	Identifier	list		3344042	1					
ANR	3346993	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3346994	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3346995	Identifier	scan8		3344042	0					
ANR	3346996	PrimaryExpression	0		3344042	1					
ANR	3346997	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3346998	PrimaryExpression	16		3344042	0					
ANR	3346999	Identifier	i		3344042	1					
ANR	3347000	Argument	4		3344042	1					
ANR	3347001	PrimaryExpression	4		3344042	0					
ANR	3347002	Argument	2		3344042	2					
ANR	3347003	PrimaryExpression	2		3344042	0					
ANR	3347004	Argument	8		3344042	3					
ANR	3347005	PrimaryExpression	8		3344042	0					
ANR	3347006	Argument	LIST_NOT_USED & 0xFF		3344042	4					
ANR	3347007	BitAndExpression	LIST_NOT_USED & 0xFF		3344042	0		&			
ANR	3347008	Identifier	LIST_NOT_USED		3344042	0					
ANR	3347009	PrimaryExpression	0xFF		3344042	1					
ANR	3347010	Argument	1		3344042	5					
ANR	3347011	PrimaryExpression	1		3344042	0					
ANR	3347012	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	1					
ANR	3347013	ForInit	list = 0 ;	688:16:15518:15524	3344042	0	True				
ANR	3347014	AssignmentExpression	list = 0		3344042	0		=			
ANR	3347015	Identifier	list		3344042	0					
ANR	3347016	PrimaryExpression	0		3344042	1					
ANR	3347017	Condition	list < h -> list_count	688:24:15526:15543	3344042	1	True				
ANR	3347018	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3347019	Identifier	list		3344042	0					
ANR	3347020	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3347021	Identifier	h		3344042	0					
ANR	3347022	Identifier	list_count		3344042	1					
ANR	3347023	PostIncDecOperationExpression	list ++	688:44:15546:15551	3344042	2	True				
ANR	3347024	Identifier	list		3344042	0					
ANR	3347025	IncDec	++		3344042	1					
ANR	3347026	CompoundStatement		688:51:15508:15508	3344042	3					
ANR	3347027	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3344042	0					
ANR	3347028	ForInit	i = 0 ;	690:20:15576:15579	3344042	0	True				
ANR	3347029	AssignmentExpression	i = 0		3344042	0		=			
ANR	3347030	Identifier	i		3344042	0					
ANR	3347031	PrimaryExpression	0		3344042	1					
ANR	3347032	Condition	i < 2	690:25:15581:15583	3344042	1	True				
ANR	3347033	RelationalExpression	i < 2		3344042	0		<			
ANR	3347034	Identifier	i		3344042	0					
ANR	3347035	PrimaryExpression	2		3344042	1					
ANR	3347036	PostIncDecOperationExpression	i ++	690:30:15586:15588	3344042	2	True				
ANR	3347037	Identifier	i		3344042	0					
ANR	3347038	IncDec	++		3344042	1					
ANR	3347039	CompoundStatement		690:34:15545:15545	3344042	3					
ANR	3347040	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3344042	0					
ANR	3347041	Condition	"IS_DIR ( mb_type , i , list )"	692:23:15616:15639	3344042	0	True				
ANR	3347042	CallExpression	"IS_DIR ( mb_type , i , list )"		3344042	0					
ANR	3347043	Callee	IS_DIR		3344042	0					
ANR	3347044	Identifier	IS_DIR		3344042	0					
ANR	3347045	ArgumentList	mb_type		3344042	1					
ANR	3347046	Argument	mb_type		3344042	0					
ANR	3347047	Identifier	mb_type		3344042	0					
ANR	3347048	Argument	i		3344042	1					
ANR	3347049	Identifier	i		3344042	0					
ANR	3347050	Argument	list		3344042	2					
ANR	3347051	Identifier	list		3344042	0					
ANR	3347052	CompoundStatement		694:24:15623:15640	3344042	1					
ANR	3347053	IdentifierDeclStatement	"int mx , my , mpx , mpy ;"	694:24:15668:15685	3344042	0	True				
ANR	3347054	IdentifierDecl	mx		3344042	0					
ANR	3347055	IdentifierDeclType	int		3344042	0					
ANR	3347056	Identifier	mx		3344042	1					
ANR	3347057	IdentifierDecl	my		3344042	1					
ANR	3347058	IdentifierDeclType	int		3344042	0					
ANR	3347059	Identifier	my		3344042	1					
ANR	3347060	IdentifierDecl	mpx		3344042	2					
ANR	3347061	IdentifierDeclType	int		3344042	0					
ANR	3347062	Identifier	mpx		3344042	1					
ANR	3347063	IdentifierDecl	mpy		3344042	3					
ANR	3347064	IdentifierDeclType	int		3344042	0					
ANR	3347065	Identifier	mpy		3344042	1					
ANR	3347066	ExpressionStatement	"pred_16x8_motion ( h , 8 * i , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"	696:24:15712:15789	3344042	1	True				
ANR	3347067	CallExpression	"pred_16x8_motion ( h , 8 * i , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"		3344042	0					
ANR	3347068	Callee	pred_16x8_motion		3344042	0					
ANR	3347069	Identifier	pred_16x8_motion		3344042	0					
ANR	3347070	ArgumentList	h		3344042	1					
ANR	3347071	Argument	h		3344042	0					
ANR	3347072	Identifier	h		3344042	0					
ANR	3347073	Argument	8 * i		3344042	1					
ANR	3347074	MultiplicativeExpression	8 * i		3344042	0		*			
ANR	3347075	PrimaryExpression	8		3344042	0					
ANR	3347076	Identifier	i		3344042	1					
ANR	3347077	Argument	list		3344042	2					
ANR	3347078	Identifier	list		3344042	0					
ANR	3347079	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	3					
ANR	3347080	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347081	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3347082	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3347083	Identifier	h		3344042	0					
ANR	3347084	Identifier	ref_cache		3344042	1					
ANR	3347085	Identifier	list		3344042	1					
ANR	3347086	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3347087	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347088	Identifier	scan8		3344042	0					
ANR	3347089	PrimaryExpression	0		3344042	1					
ANR	3347090	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3347091	PrimaryExpression	16		3344042	0					
ANR	3347092	Identifier	i		3344042	1					
ANR	3347093	Argument	& mx		3344042	4					
ANR	3347094	UnaryOperationExpression	& mx		3344042	0					
ANR	3347095	UnaryOperator	&		3344042	0					
ANR	3347096	Identifier	mx		3344042	1					
ANR	3347097	Argument	& my		3344042	5					
ANR	3347098	UnaryOperationExpression	& my		3344042	0					
ANR	3347099	UnaryOperator	&		3344042	0					
ANR	3347100	Identifier	my		3344042	1					
ANR	3347101	Statement	DECODE_CABAC_MB_MVD	698:24:15816:15834	3344042	2	True				
ANR	3347102	Statement	(	698:43:15835:15835	3344042	3	True				
ANR	3347103	Statement	h	698:45:15837:15837	3344042	4	True				
ANR	3347104	Statement	","	698:46:15838:15838	3344042	5	True				
ANR	3347105	Statement	list	698:48:15840:15843	3344042	6	True				
ANR	3347106	Statement	","	698:52:15844:15844	3344042	7	True				
ANR	3347107	Statement	8	698:54:15846:15846	3344042	8	True				
ANR	3347108	Statement	*	698:55:15847:15847	3344042	9	True				
ANR	3347109	Statement	i	698:56:15848:15848	3344042	10	True				
ANR	3347110	Statement	)	698:57:15849:15849	3344042	11	True				
ANR	3347111	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	700:24:15876:15921	3344042	12	True				
ANR	3347112	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3344042	0					
ANR	3347113	Callee	tprintf		3344042	0					
ANR	3347114	Identifier	tprintf		3344042	0					
ANR	3347115	ArgumentList	s -> avctx		3344042	1					
ANR	3347116	Argument	s -> avctx		3344042	0					
ANR	3347117	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3347118	Identifier	s		3344042	0					
ANR	3347119	Identifier	avctx		3344042	1					
ANR	3347120	Argument	"""final mv:%d %d\\n"""		3344042	1					
ANR	3347121	PrimaryExpression	"""final mv:%d %d\\n"""		3344042	0					
ANR	3347122	Argument	mx		3344042	2					
ANR	3347123	Identifier	mx		3344042	0					
ANR	3347124	Argument	my		3344042	3					
ANR	3347125	Identifier	my		3344042	0					
ANR	3347126	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , pack8to16 ( mpx , mpy ) , 2 )"	704:24:15950:16035	3344042	13	True				
ANR	3347127	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , pack8to16 ( mpx , mpy ) , 2 )"		3344042	0					
ANR	3347128	Callee	fill_rectangle		3344042	0					
ANR	3347129	Identifier	fill_rectangle		3344042	0					
ANR	3347130	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3347131	Argument	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347132	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347133	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3347134	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3347135	Identifier	h		3344042	0					
ANR	3347136	Identifier	mvd_cache		3344042	1					
ANR	3347137	Identifier	list		3344042	1					
ANR	3347138	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3347139	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347140	Identifier	scan8		3344042	0					
ANR	3347141	PrimaryExpression	0		3344042	1					
ANR	3347142	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3347143	PrimaryExpression	16		3344042	0					
ANR	3347144	Identifier	i		3344042	1					
ANR	3347145	Argument	4		3344042	1					
ANR	3347146	PrimaryExpression	4		3344042	0					
ANR	3347147	Argument	2		3344042	2					
ANR	3347148	PrimaryExpression	2		3344042	0					
ANR	3347149	Argument	8		3344042	3					
ANR	3347150	PrimaryExpression	8		3344042	0					
ANR	3347151	Argument	"pack8to16 ( mpx , mpy )"		3344042	4					
ANR	3347152	CallExpression	"pack8to16 ( mpx , mpy )"		3344042	0					
ANR	3347153	Callee	pack8to16		3344042	0					
ANR	3347154	Identifier	pack8to16		3344042	0					
ANR	3347155	ArgumentList	mpx		3344042	1					
ANR	3347156	Argument	mpx		3344042	0					
ANR	3347157	Identifier	mpx		3344042	0					
ANR	3347158	Argument	mpy		3344042	1					
ANR	3347159	Identifier	mpy		3344042	0					
ANR	3347160	Argument	2		3344042	5					
ANR	3347161	PrimaryExpression	2		3344042	0					
ANR	3347162	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , pack16to32 ( mx , my ) , 4 )"	706:24:16062:16145	3344042	14	True				
ANR	3347163	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , pack16to32 ( mx , my ) , 4 )"		3344042	0					
ANR	3347164	Callee	fill_rectangle		3344042	0					
ANR	3347165	Identifier	fill_rectangle		3344042	0					
ANR	3347166	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3347167	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347168	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347169	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3347170	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3347171	Identifier	h		3344042	0					
ANR	3347172	Identifier	mv_cache		3344042	1					
ANR	3347173	Identifier	list		3344042	1					
ANR	3347174	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3347175	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347176	Identifier	scan8		3344042	0					
ANR	3347177	PrimaryExpression	0		3344042	1					
ANR	3347178	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3347179	PrimaryExpression	16		3344042	0					
ANR	3347180	Identifier	i		3344042	1					
ANR	3347181	Argument	4		3344042	1					
ANR	3347182	PrimaryExpression	4		3344042	0					
ANR	3347183	Argument	2		3344042	2					
ANR	3347184	PrimaryExpression	2		3344042	0					
ANR	3347185	Argument	8		3344042	3					
ANR	3347186	PrimaryExpression	8		3344042	0					
ANR	3347187	Argument	"pack16to32 ( mx , my )"		3344042	4					
ANR	3347188	CallExpression	"pack16to32 ( mx , my )"		3344042	0					
ANR	3347189	Callee	pack16to32		3344042	0					
ANR	3347190	Identifier	pack16to32		3344042	0					
ANR	3347191	ArgumentList	mx		3344042	1					
ANR	3347192	Argument	mx		3344042	0					
ANR	3347193	Identifier	mx		3344042	0					
ANR	3347194	Argument	my		3344042	1					
ANR	3347195	Identifier	my		3344042	0					
ANR	3347196	Argument	4		3344042	5					
ANR	3347197	PrimaryExpression	4		3344042	0					
ANR	3347198	ElseStatement	else		3344042	0					
ANR	3347199	CompoundStatement		708:25:16128:16128	3344042	0					
ANR	3347200	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , 0 , 2 )"	710:24:16200:16268	3344042	0	True				
ANR	3347201	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , 0 , 2 )"		3344042	0					
ANR	3347202	Callee	fill_rectangle		3344042	0					
ANR	3347203	Identifier	fill_rectangle		3344042	0					
ANR	3347204	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3347205	Argument	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347206	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347207	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3347208	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3347209	Identifier	h		3344042	0					
ANR	3347210	Identifier	mvd_cache		3344042	1					
ANR	3347211	Identifier	list		3344042	1					
ANR	3347212	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3347213	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347214	Identifier	scan8		3344042	0					
ANR	3347215	PrimaryExpression	0		3344042	1					
ANR	3347216	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3347217	PrimaryExpression	16		3344042	0					
ANR	3347218	Identifier	i		3344042	1					
ANR	3347219	Argument	4		3344042	1					
ANR	3347220	PrimaryExpression	4		3344042	0					
ANR	3347221	Argument	2		3344042	2					
ANR	3347222	PrimaryExpression	2		3344042	0					
ANR	3347223	Argument	8		3344042	3					
ANR	3347224	PrimaryExpression	8		3344042	0					
ANR	3347225	Argument	0		3344042	4					
ANR	3347226	PrimaryExpression	0		3344042	0					
ANR	3347227	Argument	2		3344042	5					
ANR	3347228	PrimaryExpression	2		3344042	0					
ANR	3347229	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , 0 , 4 )"	712:24:16295:16363	3344042	1	True				
ANR	3347230	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , 0 , 4 )"		3344042	0					
ANR	3347231	Callee	fill_rectangle		3344042	0					
ANR	3347232	Identifier	fill_rectangle		3344042	0					
ANR	3347233	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	1					
ANR	3347234	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347235	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3344042	0					
ANR	3347236	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3347237	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3347238	Identifier	h		3344042	0					
ANR	3347239	Identifier	mv_cache		3344042	1					
ANR	3347240	Identifier	list		3344042	1					
ANR	3347241	AdditiveExpression	scan8 [ 0 ] + 16 * i		3344042	1		+			
ANR	3347242	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347243	Identifier	scan8		3344042	0					
ANR	3347244	PrimaryExpression	0		3344042	1					
ANR	3347245	MultiplicativeExpression	16 * i		3344042	1		*			
ANR	3347246	PrimaryExpression	16		3344042	0					
ANR	3347247	Identifier	i		3344042	1					
ANR	3347248	Argument	4		3344042	1					
ANR	3347249	PrimaryExpression	4		3344042	0					
ANR	3347250	Argument	2		3344042	2					
ANR	3347251	PrimaryExpression	2		3344042	0					
ANR	3347252	Argument	8		3344042	3					
ANR	3347253	PrimaryExpression	8		3344042	0					
ANR	3347254	Argument	0		3344042	4					
ANR	3347255	PrimaryExpression	0		3344042	0					
ANR	3347256	Argument	4		3344042	5					
ANR	3347257	PrimaryExpression	4		3344042	0					
ANR	3347258	ElseStatement	else		3344042	0					
ANR	3347259	CompoundStatement		720:13:16391:16391	3344042	0					
ANR	3347260	ExpressionStatement	assert ( IS_8X16 ( mb_type ) )	722:12:16451:16475	3344042	0	True				
ANR	3347261	CallExpression	assert ( IS_8X16 ( mb_type ) )		3344042	0					
ANR	3347262	Callee	assert		3344042	0					
ANR	3347263	Identifier	assert		3344042	0					
ANR	3347264	ArgumentList	IS_8X16 ( mb_type )		3344042	1					
ANR	3347265	Argument	IS_8X16 ( mb_type )		3344042	0					
ANR	3347266	CallExpression	IS_8X16 ( mb_type )		3344042	0					
ANR	3347267	Callee	IS_8X16		3344042	0					
ANR	3347268	Identifier	IS_8X16		3344042	0					
ANR	3347269	ArgumentList	mb_type		3344042	1					
ANR	3347270	Argument	mb_type		3344042	0					
ANR	3347271	Identifier	mb_type		3344042	0					
ANR	3347272	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	1					
ANR	3347273	ForInit	list = 0 ;	724:16:16494:16500	3344042	0	True				
ANR	3347274	AssignmentExpression	list = 0		3344042	0		=			
ANR	3347275	Identifier	list		3344042	0					
ANR	3347276	PrimaryExpression	0		3344042	1					
ANR	3347277	Condition	list < h -> list_count	724:24:16502:16519	3344042	1	True				
ANR	3347278	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3347279	Identifier	list		3344042	0					
ANR	3347280	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3347281	Identifier	h		3344042	0					
ANR	3347282	Identifier	list_count		3344042	1					
ANR	3347283	PostIncDecOperationExpression	list ++	724:44:16522:16527	3344042	2	True				
ANR	3347284	Identifier	list		3344042	0					
ANR	3347285	IncDec	++		3344042	1					
ANR	3347286	CompoundStatement		724:51:16484:16484	3344042	3					
ANR	3347287	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3344042	0					
ANR	3347288	ForInit	i = 0 ;	726:24:16556:16559	3344042	0	True				
ANR	3347289	AssignmentExpression	i = 0		3344042	0		=			
ANR	3347290	Identifier	i		3344042	0					
ANR	3347291	PrimaryExpression	0		3344042	1					
ANR	3347292	Condition	i < 2	726:29:16561:16563	3344042	1	True				
ANR	3347293	RelationalExpression	i < 2		3344042	0		<			
ANR	3347294	Identifier	i		3344042	0					
ANR	3347295	PrimaryExpression	2		3344042	1					
ANR	3347296	PostIncDecOperationExpression	i ++	726:34:16566:16568	3344042	2	True				
ANR	3347297	Identifier	i		3344042	0					
ANR	3347298	IncDec	++		3344042	1					
ANR	3347299	CompoundStatement		726:38:16525:16525	3344042	3					
ANR	3347300	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3344042	0					
ANR	3347301	Condition	"IS_DIR ( mb_type , i , list )"	728:27:16600:16623	3344042	0	True				
ANR	3347302	CallExpression	"IS_DIR ( mb_type , i , list )"		3344042	0					
ANR	3347303	Callee	IS_DIR		3344042	0					
ANR	3347304	Identifier	IS_DIR		3344042	0					
ANR	3347305	ArgumentList	mb_type		3344042	1					
ANR	3347306	Argument	mb_type		3344042	0					
ANR	3347307	Identifier	mb_type		3344042	0					
ANR	3347308	Argument	i		3344042	1					
ANR	3347309	Identifier	i		3344042	0					
ANR	3347310	Argument	list		3344042	2					
ANR	3347311	Identifier	list		3344042	0					
ANR	3347312	CompoundStatement		730:28:16628:16635	3344042	1					
ANR	3347313	IdentifierDeclStatement	int ref ;	730:28:16673:16680	3344042	0	True				
ANR	3347314	IdentifierDecl	ref		3344042	0					
ANR	3347315	IdentifierDeclType	int		3344042	0					
ANR	3347316	Identifier	ref		3344042	1					
ANR	3347317	IfStatement	if ( h -> ref_count [ list ] > 1 )		3344042	1					
ANR	3347318	Condition	h -> ref_count [ list ] > 1	732:31:16714:16735	3344042	0	True				
ANR	3347319	RelationalExpression	h -> ref_count [ list ] > 1		3344042	0		>			
ANR	3347320	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3347321	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3347322	Identifier	h		3344042	0					
ANR	3347323	Identifier	ref_count		3344042	1					
ANR	3347324	Identifier	list		3344042	1					
ANR	3347325	PrimaryExpression	1		3344042	1					
ANR	3347326	CompoundStatement		732:54:16692:16692	3344042	1					
ANR	3347327	ExpressionStatement	"ref = decode_cabac_mb_ref ( h , list , 4 * i )"	734:32:16772:16812	3344042	0	True				
ANR	3347328	AssignmentExpression	"ref = decode_cabac_mb_ref ( h , list , 4 * i )"		3344042	0		=			
ANR	3347329	Identifier	ref		3344042	0					
ANR	3347330	CallExpression	"decode_cabac_mb_ref ( h , list , 4 * i )"		3344042	1					
ANR	3347331	Callee	decode_cabac_mb_ref		3344042	0					
ANR	3347332	Identifier	decode_cabac_mb_ref		3344042	0					
ANR	3347333	ArgumentList	h		3344042	1					
ANR	3347334	Argument	h		3344042	0					
ANR	3347335	Identifier	h		3344042	0					
ANR	3347336	Argument	list		3344042	1					
ANR	3347337	Identifier	list		3344042	0					
ANR	3347338	Argument	4 * i		3344042	2					
ANR	3347339	MultiplicativeExpression	4 * i		3344042	0		*			
ANR	3347340	PrimaryExpression	4		3344042	0					
ANR	3347341	Identifier	i		3344042	1					
ANR	3347342	IfStatement	if ( ref >= ( unsigned ) h -> ref_count [ list ] )		3344042	1					
ANR	3347343	Condition	ref >= ( unsigned ) h -> ref_count [ list ]	736:35:16850:16884	3344042	0	True				
ANR	3347344	RelationalExpression	ref >= ( unsigned ) h -> ref_count [ list ]		3344042	0		>=			
ANR	3347345	Identifier	ref		3344042	0					
ANR	3347346	CastExpression	( unsigned ) h -> ref_count [ list ]		3344042	1					
ANR	3347347	CastTarget	unsigned		3344042	0					
ANR	3347348	ArrayIndexing	h -> ref_count [ list ]		3344042	1					
ANR	3347349	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3347350	Identifier	h		3344042	0					
ANR	3347351	Identifier	ref_count		3344042	1					
ANR	3347352	Identifier	list		3344042	1					
ANR	3347353	CompoundStatement		736:71:16841:16841	3344042	1					
ANR	3347354	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"	738:36:16925:17004	3344042	0	True				
ANR	3347355	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reference %d >= %d\\n"" , ref , h -> ref_count [ list ] )"		3344042	0					
ANR	3347356	Callee	av_log		3344042	0					
ANR	3347357	Identifier	av_log		3344042	0					
ANR	3347358	ArgumentList	s -> avctx		3344042	1					
ANR	3347359	Argument	s -> avctx		3344042	0					
ANR	3347360	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3347361	Identifier	s		3344042	0					
ANR	3347362	Identifier	avctx		3344042	1					
ANR	3347363	Argument	AV_LOG_ERROR		3344042	1					
ANR	3347364	Identifier	AV_LOG_ERROR		3344042	0					
ANR	3347365	Argument	"""Reference %d >= %d\\n"""		3344042	2					
ANR	3347366	PrimaryExpression	"""Reference %d >= %d\\n"""		3344042	0					
ANR	3347367	Argument	ref		3344042	3					
ANR	3347368	Identifier	ref		3344042	0					
ANR	3347369	Argument	h -> ref_count [ list ]		3344042	4					
ANR	3347370	ArrayIndexing	h -> ref_count [ list ]		3344042	0					
ANR	3347371	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3347372	Identifier	h		3344042	0					
ANR	3347373	Identifier	ref_count		3344042	1					
ANR	3347374	Identifier	list		3344042	1					
ANR	3347375	ElseStatement	else		3344042	0					
ANR	3347376	ExpressionStatement	ref = 0	745:32:17110:17115	3344042	0	True				
ANR	3347377	AssignmentExpression	ref = 0		3344042	0		=			
ANR	3347378	Identifier	ref		3344042	0					
ANR	3347379	PrimaryExpression	0		3344042	1					
ANR	3347380	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , ref , 1 )"	747:28:17146:17216	3344042	2	True				
ANR	3347381	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , ref , 1 )"		3344042	0					
ANR	3347382	Callee	fill_rectangle		3344042	0					
ANR	3347383	Identifier	fill_rectangle		3344042	0					
ANR	3347384	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347385	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347386	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347387	UnaryOperator	&		3344042	0					
ANR	3347388	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347389	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3347390	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3347391	Identifier	h		3344042	0					
ANR	3347392	Identifier	ref_cache		3344042	1					
ANR	3347393	Identifier	list		3344042	1					
ANR	3347394	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347395	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347396	Identifier	scan8		3344042	0					
ANR	3347397	PrimaryExpression	0		3344042	1					
ANR	3347398	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347399	PrimaryExpression	2		3344042	0					
ANR	3347400	Identifier	i		3344042	1					
ANR	3347401	Argument	2		3344042	1					
ANR	3347402	PrimaryExpression	2		3344042	0					
ANR	3347403	Argument	4		3344042	2					
ANR	3347404	PrimaryExpression	4		3344042	0					
ANR	3347405	Argument	8		3344042	3					
ANR	3347406	PrimaryExpression	8		3344042	0					
ANR	3347407	Argument	ref		3344042	4					
ANR	3347408	Identifier	ref		3344042	0					
ANR	3347409	Argument	1		3344042	5					
ANR	3347410	PrimaryExpression	1		3344042	0					
ANR	3347411	ElseStatement	else		3344042	0					
ANR	3347412	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , ( LIST_NOT_USED & 0xFF ) , 1 )"	751:28:17278:17365	3344042	0	True				
ANR	3347413	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , ( LIST_NOT_USED & 0xFF ) , 1 )"		3344042	0					
ANR	3347414	Callee	fill_rectangle		3344042	0					
ANR	3347415	Identifier	fill_rectangle		3344042	0					
ANR	3347416	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347417	Argument	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347418	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347419	UnaryOperator	&		3344042	0					
ANR	3347420	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347421	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3347422	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3347423	Identifier	h		3344042	0					
ANR	3347424	Identifier	ref_cache		3344042	1					
ANR	3347425	Identifier	list		3344042	1					
ANR	3347426	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347427	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347428	Identifier	scan8		3344042	0					
ANR	3347429	PrimaryExpression	0		3344042	1					
ANR	3347430	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347431	PrimaryExpression	2		3344042	0					
ANR	3347432	Identifier	i		3344042	1					
ANR	3347433	Argument	2		3344042	1					
ANR	3347434	PrimaryExpression	2		3344042	0					
ANR	3347435	Argument	4		3344042	2					
ANR	3347436	PrimaryExpression	4		3344042	0					
ANR	3347437	Argument	8		3344042	3					
ANR	3347438	PrimaryExpression	8		3344042	0					
ANR	3347439	Argument	LIST_NOT_USED & 0xFF		3344042	4					
ANR	3347440	BitAndExpression	LIST_NOT_USED & 0xFF		3344042	0		&			
ANR	3347441	Identifier	LIST_NOT_USED		3344042	0					
ANR	3347442	PrimaryExpression	0xFF		3344042	1					
ANR	3347443	Argument	1		3344042	5					
ANR	3347444	PrimaryExpression	1		3344042	0					
ANR	3347445	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		3344042	2					
ANR	3347446	ForInit	list = 0 ;	757:16:17422:17428	3344042	0	True				
ANR	3347447	AssignmentExpression	list = 0		3344042	0		=			
ANR	3347448	Identifier	list		3344042	0					
ANR	3347449	PrimaryExpression	0		3344042	1					
ANR	3347450	Condition	list < h -> list_count	757:24:17430:17447	3344042	1	True				
ANR	3347451	RelationalExpression	list < h -> list_count		3344042	0		<			
ANR	3347452	Identifier	list		3344042	0					
ANR	3347453	PtrMemberAccess	h -> list_count		3344042	1					
ANR	3347454	Identifier	h		3344042	0					
ANR	3347455	Identifier	list_count		3344042	1					
ANR	3347456	PostIncDecOperationExpression	list ++	757:44:17450:17455	3344042	2	True				
ANR	3347457	Identifier	list		3344042	0					
ANR	3347458	IncDec	++		3344042	1					
ANR	3347459	CompoundStatement		757:51:17412:17412	3344042	3					
ANR	3347460	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3344042	0					
ANR	3347461	ForInit	i = 0 ;	759:20:17480:17483	3344042	0	True				
ANR	3347462	AssignmentExpression	i = 0		3344042	0		=			
ANR	3347463	Identifier	i		3344042	0					
ANR	3347464	PrimaryExpression	0		3344042	1					
ANR	3347465	Condition	i < 2	759:25:17485:17487	3344042	1	True				
ANR	3347466	RelationalExpression	i < 2		3344042	0		<			
ANR	3347467	Identifier	i		3344042	0					
ANR	3347468	PrimaryExpression	2		3344042	1					
ANR	3347469	PostIncDecOperationExpression	i ++	759:30:17490:17492	3344042	2	True				
ANR	3347470	Identifier	i		3344042	0					
ANR	3347471	IncDec	++		3344042	1					
ANR	3347472	CompoundStatement		759:34:17449:17449	3344042	3					
ANR	3347473	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3344042	0					
ANR	3347474	Condition	"IS_DIR ( mb_type , i , list )"	761:23:17520:17543	3344042	0	True				
ANR	3347475	CallExpression	"IS_DIR ( mb_type , i , list )"		3344042	0					
ANR	3347476	Callee	IS_DIR		3344042	0					
ANR	3347477	Identifier	IS_DIR		3344042	0					
ANR	3347478	ArgumentList	mb_type		3344042	1					
ANR	3347479	Argument	mb_type		3344042	0					
ANR	3347480	Identifier	mb_type		3344042	0					
ANR	3347481	Argument	i		3344042	1					
ANR	3347482	Identifier	i		3344042	0					
ANR	3347483	Argument	list		3344042	2					
ANR	3347484	Identifier	list		3344042	0					
ANR	3347485	CompoundStatement		763:24:17527:17544	3344042	1					
ANR	3347486	IdentifierDeclStatement	"int mx , my , mpx , mpy ;"	763:24:17572:17589	3344042	0	True				
ANR	3347487	IdentifierDecl	mx		3344042	0					
ANR	3347488	IdentifierDeclType	int		3344042	0					
ANR	3347489	Identifier	mx		3344042	1					
ANR	3347490	IdentifierDecl	my		3344042	1					
ANR	3347491	IdentifierDeclType	int		3344042	0					
ANR	3347492	Identifier	my		3344042	1					
ANR	3347493	IdentifierDecl	mpx		3344042	2					
ANR	3347494	IdentifierDeclType	int		3344042	0					
ANR	3347495	Identifier	mpx		3344042	1					
ANR	3347496	IdentifierDecl	mpy		3344042	3					
ANR	3347497	IdentifierDeclType	int		3344042	0					
ANR	3347498	Identifier	mpy		3344042	1					
ANR	3347499	ExpressionStatement	"pred_8x16_motion ( h , i * 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"	765:24:17616:17694	3344042	1	True				
ANR	3347500	CallExpression	"pred_8x16_motion ( h , i * 4 , list , h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"		3344042	0					
ANR	3347501	Callee	pred_8x16_motion		3344042	0					
ANR	3347502	Identifier	pred_8x16_motion		3344042	0					
ANR	3347503	ArgumentList	h		3344042	1					
ANR	3347504	Argument	h		3344042	0					
ANR	3347505	Identifier	h		3344042	0					
ANR	3347506	Argument	i * 4		3344042	1					
ANR	3347507	MultiplicativeExpression	i * 4		3344042	0		*			
ANR	3347508	Identifier	i		3344042	0					
ANR	3347509	PrimaryExpression	4		3344042	1					
ANR	3347510	Argument	list		3344042	2					
ANR	3347511	Identifier	list		3344042	0					
ANR	3347512	Argument	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	3					
ANR	3347513	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347514	ArrayIndexing	h -> ref_cache [ list ]		3344042	0					
ANR	3347515	PtrMemberAccess	h -> ref_cache		3344042	0					
ANR	3347516	Identifier	h		3344042	0					
ANR	3347517	Identifier	ref_cache		3344042	1					
ANR	3347518	Identifier	list		3344042	1					
ANR	3347519	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347520	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347521	Identifier	scan8		3344042	0					
ANR	3347522	PrimaryExpression	0		3344042	1					
ANR	3347523	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347524	PrimaryExpression	2		3344042	0					
ANR	3347525	Identifier	i		3344042	1					
ANR	3347526	Argument	& mx		3344042	4					
ANR	3347527	UnaryOperationExpression	& mx		3344042	0					
ANR	3347528	UnaryOperator	&		3344042	0					
ANR	3347529	Identifier	mx		3344042	1					
ANR	3347530	Argument	& my		3344042	5					
ANR	3347531	UnaryOperationExpression	& my		3344042	0					
ANR	3347532	UnaryOperator	&		3344042	0					
ANR	3347533	Identifier	my		3344042	1					
ANR	3347534	Statement	DECODE_CABAC_MB_MVD	767:24:17721:17739	3344042	2	True				
ANR	3347535	Statement	(	767:43:17740:17740	3344042	3	True				
ANR	3347536	Statement	h	767:45:17742:17742	3344042	4	True				
ANR	3347537	Statement	","	767:46:17743:17743	3344042	5	True				
ANR	3347538	Statement	list	767:48:17745:17748	3344042	6	True				
ANR	3347539	Statement	","	767:52:17749:17749	3344042	7	True				
ANR	3347540	Statement	4	767:54:17751:17751	3344042	8	True				
ANR	3347541	Statement	*	767:55:17752:17752	3344042	9	True				
ANR	3347542	Statement	i	767:56:17753:17753	3344042	10	True				
ANR	3347543	Statement	)	767:57:17754:17754	3344042	11	True				
ANR	3347544	ExpressionStatement	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"	771:24:17783:17828	3344042	12	True				
ANR	3347545	CallExpression	"tprintf ( s -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3344042	0					
ANR	3347546	Callee	tprintf		3344042	0					
ANR	3347547	Identifier	tprintf		3344042	0					
ANR	3347548	ArgumentList	s -> avctx		3344042	1					
ANR	3347549	Argument	s -> avctx		3344042	0					
ANR	3347550	PtrMemberAccess	s -> avctx		3344042	0					
ANR	3347551	Identifier	s		3344042	0					
ANR	3347552	Identifier	avctx		3344042	1					
ANR	3347553	Argument	"""final mv:%d %d\\n"""		3344042	1					
ANR	3347554	PrimaryExpression	"""final mv:%d %d\\n"""		3344042	0					
ANR	3347555	Argument	mx		3344042	2					
ANR	3347556	Identifier	mx		3344042	0					
ANR	3347557	Argument	my		3344042	3					
ANR	3347558	Identifier	my		3344042	0					
ANR	3347559	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , pack8to16 ( mpx , mpy ) , 2 )"	773:24:17855:17939	3344042	13	True				
ANR	3347560	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , pack8to16 ( mpx , mpy ) , 2 )"		3344042	0					
ANR	3347561	Callee	fill_rectangle		3344042	0					
ANR	3347562	Identifier	fill_rectangle		3344042	0					
ANR	3347563	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347564	Argument	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347565	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347566	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3347567	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3347568	Identifier	h		3344042	0					
ANR	3347569	Identifier	mvd_cache		3344042	1					
ANR	3347570	Identifier	list		3344042	1					
ANR	3347571	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347572	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347573	Identifier	scan8		3344042	0					
ANR	3347574	PrimaryExpression	0		3344042	1					
ANR	3347575	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347576	PrimaryExpression	2		3344042	0					
ANR	3347577	Identifier	i		3344042	1					
ANR	3347578	Argument	2		3344042	1					
ANR	3347579	PrimaryExpression	2		3344042	0					
ANR	3347580	Argument	4		3344042	2					
ANR	3347581	PrimaryExpression	4		3344042	0					
ANR	3347582	Argument	8		3344042	3					
ANR	3347583	PrimaryExpression	8		3344042	0					
ANR	3347584	Argument	"pack8to16 ( mpx , mpy )"		3344042	4					
ANR	3347585	CallExpression	"pack8to16 ( mpx , mpy )"		3344042	0					
ANR	3347586	Callee	pack8to16		3344042	0					
ANR	3347587	Identifier	pack8to16		3344042	0					
ANR	3347588	ArgumentList	mpx		3344042	1					
ANR	3347589	Argument	mpx		3344042	0					
ANR	3347590	Identifier	mpx		3344042	0					
ANR	3347591	Argument	mpy		3344042	1					
ANR	3347592	Identifier	mpy		3344042	0					
ANR	3347593	Argument	2		3344042	5					
ANR	3347594	PrimaryExpression	2		3344042	0					
ANR	3347595	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"	775:24:17966:18048	3344042	14	True				
ANR	3347596	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"		3344042	0					
ANR	3347597	Callee	fill_rectangle		3344042	0					
ANR	3347598	Identifier	fill_rectangle		3344042	0					
ANR	3347599	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347600	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347601	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347602	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3347603	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3347604	Identifier	h		3344042	0					
ANR	3347605	Identifier	mv_cache		3344042	1					
ANR	3347606	Identifier	list		3344042	1					
ANR	3347607	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347608	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347609	Identifier	scan8		3344042	0					
ANR	3347610	PrimaryExpression	0		3344042	1					
ANR	3347611	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347612	PrimaryExpression	2		3344042	0					
ANR	3347613	Identifier	i		3344042	1					
ANR	3347614	Argument	2		3344042	1					
ANR	3347615	PrimaryExpression	2		3344042	0					
ANR	3347616	Argument	4		3344042	2					
ANR	3347617	PrimaryExpression	4		3344042	0					
ANR	3347618	Argument	8		3344042	3					
ANR	3347619	PrimaryExpression	8		3344042	0					
ANR	3347620	Argument	"pack16to32 ( mx , my )"		3344042	4					
ANR	3347621	CallExpression	"pack16to32 ( mx , my )"		3344042	0					
ANR	3347622	Callee	pack16to32		3344042	0					
ANR	3347623	Identifier	pack16to32		3344042	0					
ANR	3347624	ArgumentList	mx		3344042	1					
ANR	3347625	Argument	mx		3344042	0					
ANR	3347626	Identifier	mx		3344042	0					
ANR	3347627	Argument	my		3344042	1					
ANR	3347628	Identifier	my		3344042	0					
ANR	3347629	Argument	4		3344042	5					
ANR	3347630	PrimaryExpression	4		3344042	0					
ANR	3347631	ElseStatement	else		3344042	0					
ANR	3347632	CompoundStatement		777:25:18031:18031	3344042	0					
ANR	3347633	ExpressionStatement	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , 0 , 2 )"	779:24:18103:18170	3344042	0	True				
ANR	3347634	CallExpression	"fill_rectangle ( h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , 0 , 2 )"		3344042	0					
ANR	3347635	Callee	fill_rectangle		3344042	0					
ANR	3347636	Identifier	fill_rectangle		3344042	0					
ANR	3347637	ArgumentList	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347638	Argument	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347639	ArrayIndexing	h -> mvd_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347640	ArrayIndexing	h -> mvd_cache [ list ]		3344042	0					
ANR	3347641	PtrMemberAccess	h -> mvd_cache		3344042	0					
ANR	3347642	Identifier	h		3344042	0					
ANR	3347643	Identifier	mvd_cache		3344042	1					
ANR	3347644	Identifier	list		3344042	1					
ANR	3347645	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347646	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347647	Identifier	scan8		3344042	0					
ANR	3347648	PrimaryExpression	0		3344042	1					
ANR	3347649	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347650	PrimaryExpression	2		3344042	0					
ANR	3347651	Identifier	i		3344042	1					
ANR	3347652	Argument	2		3344042	1					
ANR	3347653	PrimaryExpression	2		3344042	0					
ANR	3347654	Argument	4		3344042	2					
ANR	3347655	PrimaryExpression	4		3344042	0					
ANR	3347656	Argument	8		3344042	3					
ANR	3347657	PrimaryExpression	8		3344042	0					
ANR	3347658	Argument	0		3344042	4					
ANR	3347659	PrimaryExpression	0		3344042	0					
ANR	3347660	Argument	2		3344042	5					
ANR	3347661	PrimaryExpression	2		3344042	0					
ANR	3347662	ExpressionStatement	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , 0 , 4 )"	781:24:18197:18264	3344042	1	True				
ANR	3347663	CallExpression	"fill_rectangle ( h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , 0 , 4 )"		3344042	0					
ANR	3347664	Callee	fill_rectangle		3344042	0					
ANR	3347665	Identifier	fill_rectangle		3344042	0					
ANR	3347666	ArgumentList	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	1					
ANR	3347667	Argument	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347668	ArrayIndexing	h -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3344042	0					
ANR	3347669	ArrayIndexing	h -> mv_cache [ list ]		3344042	0					
ANR	3347670	PtrMemberAccess	h -> mv_cache		3344042	0					
ANR	3347671	Identifier	h		3344042	0					
ANR	3347672	Identifier	mv_cache		3344042	1					
ANR	3347673	Identifier	list		3344042	1					
ANR	3347674	AdditiveExpression	scan8 [ 0 ] + 2 * i		3344042	1		+			
ANR	3347675	ArrayIndexing	scan8 [ 0 ]		3344042	0					
ANR	3347676	Identifier	scan8		3344042	0					
ANR	3347677	PrimaryExpression	0		3344042	1					
ANR	3347678	MultiplicativeExpression	2 * i		3344042	1		*			
ANR	3347679	PrimaryExpression	2		3344042	0					
ANR	3347680	Identifier	i		3344042	1					
ANR	3347681	Argument	2		3344042	1					
ANR	3347682	PrimaryExpression	2		3344042	0					
ANR	3347683	Argument	4		3344042	2					
ANR	3347684	PrimaryExpression	4		3344042	0					
ANR	3347685	Argument	8		3344042	3					
ANR	3347686	PrimaryExpression	8		3344042	0					
ANR	3347687	Argument	0		3344042	4					
ANR	3347688	PrimaryExpression	0		3344042	0					
ANR	3347689	Argument	4		3344042	5					
ANR	3347690	PrimaryExpression	4		3344042	0					
ANR	3347691	IfStatement	if ( IS_INTER ( mb_type ) )		3344042	22					
ANR	3347692	Condition	IS_INTER ( mb_type )	795:7:18351:18369	3344042	0	True				
ANR	3347693	CallExpression	IS_INTER ( mb_type )		3344042	0					
ANR	3347694	Callee	IS_INTER		3344042	0					
ANR	3347695	Identifier	IS_INTER		3344042	0					
ANR	3347696	ArgumentList	mb_type		3344042	1					
ANR	3347697	Argument	mb_type		3344042	0					
ANR	3347698	Identifier	mb_type		3344042	0					
ANR	3347699	CompoundStatement		795:29:18328:18328	3344042	1					
ANR	3347700	ExpressionStatement	h -> chroma_pred_mode_table [ mb_xy ] = 0	797:8:18384:18420	3344042	0	True				
ANR	3347701	AssignmentExpression	h -> chroma_pred_mode_table [ mb_xy ] = 0		3344042	0		=			
ANR	3347702	ArrayIndexing	h -> chroma_pred_mode_table [ mb_xy ]		3344042	0					
ANR	3347703	PtrMemberAccess	h -> chroma_pred_mode_table		3344042	0					
ANR	3347704	Identifier	h		3344042	0					
ANR	3347705	Identifier	chroma_pred_mode_table		3344042	1					
ANR	3347706	Identifier	mb_xy		3344042	1					
ANR	3347707	PrimaryExpression	0		3344042	1					
ANR	3347708	ExpressionStatement	"write_back_motion ( h , mb_type )"	799:8:18431:18462	3344042	1	True				
ANR	3347709	CallExpression	"write_back_motion ( h , mb_type )"		3344042	0					
ANR	3347710	Callee	write_back_motion		3344042	0					
ANR	3347711	Identifier	write_back_motion		3344042	0					
ANR	3347712	ArgumentList	h		3344042	1					
ANR	3347713	Argument	h		3344042	0					
ANR	3347714	Identifier	h		3344042	0					
ANR	3347715	Argument	mb_type		3344042	1					
ANR	3347716	Identifier	mb_type		3344042	0					
ANR	3347717	IfStatement	if ( ! IS_INTRA16x16 ( mb_type ) )		3344042	23					
ANR	3347718	Condition	! IS_INTRA16x16 ( mb_type )	805:8:18481:18505	3344042	0	True				
ANR	3347719	UnaryOperationExpression	! IS_INTRA16x16 ( mb_type )		3344042	0					
ANR	3347720	UnaryOperator	!		3344042	0					
ANR	3347721	CallExpression	IS_INTRA16x16 ( mb_type )		3344042	1					
ANR	3347722	Callee	IS_INTRA16x16		3344042	0					
ANR	3347723	Identifier	IS_INTRA16x16		3344042	0					
ANR	3347724	ArgumentList	mb_type		3344042	1					
ANR	3347725	Argument	mb_type		3344042	0					
ANR	3347726	Identifier	mb_type		3344042	0					
ANR	3347727	CompoundStatement		805:36:18464:18464	3344042	1					
ANR	3347728	ExpressionStatement	cbp = decode_cabac_mb_cbp_luma ( h )	807:8:18520:18556	3344042	0	True				
ANR	3347729	AssignmentExpression	cbp = decode_cabac_mb_cbp_luma ( h )		3344042	0		=			
ANR	3347730	Identifier	cbp		3344042	0					
ANR	3347731	CallExpression	decode_cabac_mb_cbp_luma ( h )		3344042	1					
ANR	3347732	Callee	decode_cabac_mb_cbp_luma		3344042	0					
ANR	3347733	Identifier	decode_cabac_mb_cbp_luma		3344042	0					
ANR	3347734	ArgumentList	h		3344042	1					
ANR	3347735	Argument	h		3344042	0					
ANR	3347736	Identifier	h		3344042	0					
ANR	3347737	IfStatement	if ( decode_chroma )		3344042	1					
ANR	3347738	Condition	decode_chroma	809:11:18570:18582	3344042	0	True				
ANR	3347739	Identifier	decode_chroma		3344042	0					
ANR	3347740	ExpressionStatement	cbp |= decode_cabac_mb_cbp_chroma ( h ) << 4	811:12:18598:18641	3344042	1	True				
ANR	3347741	AssignmentExpression	cbp |= decode_cabac_mb_cbp_chroma ( h ) << 4		3344042	0		|=			
ANR	3347742	Identifier	cbp		3344042	0					
ANR	3347743	ShiftExpression	decode_cabac_mb_cbp_chroma ( h ) << 4		3344042	1		<<			
ANR	3347744	CallExpression	decode_cabac_mb_cbp_chroma ( h )		3344042	0					
ANR	3347745	Callee	decode_cabac_mb_cbp_chroma		3344042	0					
ANR	3347746	Identifier	decode_cabac_mb_cbp_chroma		3344042	0					
ANR	3347747	ArgumentList	h		3344042	1					
ANR	3347748	Argument	h		3344042	0					
ANR	3347749	Identifier	h		3344042	0					
ANR	3347750	PrimaryExpression	4		3344042	1					
ANR	3347751	ExpressionStatement	h -> cbp_table [ mb_xy ] = h -> cbp = cbp	817:4:18657:18691	3344042	24	True				
ANR	3347752	AssignmentExpression	h -> cbp_table [ mb_xy ] = h -> cbp = cbp		3344042	0		=			
ANR	3347753	ArrayIndexing	h -> cbp_table [ mb_xy ]		3344042	0					
ANR	3347754	PtrMemberAccess	h -> cbp_table		3344042	0					
ANR	3347755	Identifier	h		3344042	0					
ANR	3347756	Identifier	cbp_table		3344042	1					
ANR	3347757	Identifier	mb_xy		3344042	1					
ANR	3347758	AssignmentExpression	h -> cbp = cbp		3344042	1		=			
ANR	3347759	PtrMemberAccess	h -> cbp		3344042	0					
ANR	3347760	Identifier	h		3344042	0					
ANR	3347761	Identifier	cbp		3344042	1					
ANR	3347762	Identifier	cbp		3344042	1					
ANR	3347763	IfStatement	if ( dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type ) )		3344042	25					
ANR	3347764	Condition	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )	821:8:18704:18753	3344042	0	True				
ANR	3347765	AndExpression	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )		3344042	0		&&			
ANR	3347766	Identifier	dct8x8_allowed		3344042	0					
ANR	3347767	AndExpression	( cbp & 15 ) && ! IS_INTRA ( mb_type )		3344042	1		&&			
ANR	3347768	BitAndExpression	cbp & 15		3344042	0		&			
ANR	3347769	Identifier	cbp		3344042	0					
ANR	3347770	PrimaryExpression	15		3344042	1					
ANR	3347771	UnaryOperationExpression	! IS_INTRA ( mb_type )		3344042	1					
ANR	3347772	UnaryOperator	!		3344042	0					
ANR	3347773	CallExpression	IS_INTRA ( mb_type )		3344042	1					
ANR	3347774	Callee	IS_INTRA		3344042	0					
ANR	3347775	Identifier	IS_INTRA		3344042	0					
ANR	3347776	ArgumentList	mb_type		3344042	1					
ANR	3347777	Argument	mb_type		3344042	0					
ANR	3347778	Identifier	mb_type		3344042	0					
ANR	3347779	CompoundStatement		821:61:18712:18712	3344042	1					
ANR	3347780	ExpressionStatement	"mb_type |= MB_TYPE_8x8DCT * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"	823:8:18768:18878	3344042	0	True				
ANR	3347781	AssignmentExpression	"mb_type |= MB_TYPE_8x8DCT * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"		3344042	0		|=			
ANR	3347782	Identifier	mb_type		3344042	0					
ANR	3347783	MultiplicativeExpression	"MB_TYPE_8x8DCT * get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"		3344042	1		*			
ANR	3347784	Identifier	MB_TYPE_8x8DCT		3344042	0					
ANR	3347785	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 399 + h -> neighbor_transform_size ] )"		3344042	1					
ANR	3347786	Callee	get_cabac_noinline		3344042	0					
ANR	3347787	Identifier	get_cabac_noinline		3344042	0					
ANR	3347788	ArgumentList	& h -> cabac		3344042	1					
ANR	3347789	Argument	& h -> cabac		3344042	0					
ANR	3347790	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3347791	UnaryOperator	&		3344042	0					
ANR	3347792	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3347793	Identifier	h		3344042	0					
ANR	3347794	Identifier	cabac		3344042	1					
ANR	3347795	Argument	& h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	1					
ANR	3347796	UnaryOperationExpression	& h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	0					
ANR	3347797	UnaryOperator	&		3344042	0					
ANR	3347798	ArrayIndexing	h -> cabac_state [ 399 + h -> neighbor_transform_size ]		3344042	1					
ANR	3347799	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3347800	Identifier	h		3344042	0					
ANR	3347801	Identifier	cabac_state		3344042	1					
ANR	3347802	AdditiveExpression	399 + h -> neighbor_transform_size		3344042	1		+			
ANR	3347803	PrimaryExpression	399		3344042	0					
ANR	3347804	PtrMemberAccess	h -> neighbor_transform_size		3344042	1					
ANR	3347805	Identifier	h		3344042	0					
ANR	3347806	Identifier	neighbor_transform_size		3344042	1					
ANR	3347807	IfStatement	if ( CHROMA444 && IS_8x8DCT ( mb_type ) )		3344042	26					
ANR	3347808	Condition	CHROMA444 && IS_8x8DCT ( mb_type )	833:8:19040:19070	3344042	0	True				
ANR	3347809	AndExpression	CHROMA444 && IS_8x8DCT ( mb_type )		3344042	0		&&			
ANR	3347810	Identifier	CHROMA444		3344042	0					
ANR	3347811	CallExpression	IS_8x8DCT ( mb_type )		3344042	1					
ANR	3347812	Callee	IS_8x8DCT		3344042	0					
ANR	3347813	Identifier	IS_8x8DCT		3344042	0					
ANR	3347814	ArgumentList	mb_type		3344042	1					
ANR	3347815	Argument	mb_type		3344042	0					
ANR	3347816	Identifier	mb_type		3344042	0					
ANR	3347817	CompoundStatement		837:8:19054:19098	3344042	1					
ANR	3347818	IdentifierDeclStatement	int i ;	835:8:19083:19088	3344042	0	True				
ANR	3347819	IdentifierDecl	i		3344042	0					
ANR	3347820	IdentifierDeclType	int		3344042	0					
ANR	3347821	Identifier	i		3344042	1					
ANR	3347822	IdentifierDeclStatement	uint8_t * nnz_cache = h -> non_zero_count_cache ;	837:8:19099:19143	3344042	1	True				
ANR	3347823	IdentifierDecl	* nnz_cache = h -> non_zero_count_cache		3344042	0					
ANR	3347824	IdentifierDeclType	uint8_t *		3344042	0					
ANR	3347825	Identifier	nnz_cache		3344042	1					
ANR	3347826	AssignmentExpression	* nnz_cache = h -> non_zero_count_cache		3344042	2		=			
ANR	3347827	Identifier	nnz_cache		3344042	0					
ANR	3347828	PtrMemberAccess	h -> non_zero_count_cache		3344042	1					
ANR	3347829	Identifier	h		3344042	0					
ANR	3347830	Identifier	non_zero_count_cache		3344042	1					
ANR	3347831	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3344042	2					
ANR	3347832	ForInit	i = 0 ;	839:13:19159:19164	3344042	0	True				
ANR	3347833	AssignmentExpression	i = 0		3344042	0		=			
ANR	3347834	Identifier	i		3344042	0					
ANR	3347835	PrimaryExpression	0		3344042	1					
ANR	3347836	Condition	i < 2	839:20:19166:19170	3344042	1	True				
ANR	3347837	RelationalExpression	i < 2		3344042	0		<			
ANR	3347838	Identifier	i		3344042	0					
ANR	3347839	PrimaryExpression	2		3344042	1					
ANR	3347840	PostIncDecOperationExpression	i ++	839:27:19173:19175	3344042	2	True				
ANR	3347841	Identifier	i		3344042	0					
ANR	3347842	IncDec	++		3344042	1					
ANR	3347843	CompoundStatement		839:31:19132:19132	3344042	3					
ANR	3347844	IfStatement	if ( h -> left_type [ LEFT ( i ) ] && ! IS_8x8DCT ( h -> left_type [ LEFT ( i ) ] ) )		3344042	0					
ANR	3347845	Condition	h -> left_type [ LEFT ( i ) ] && ! IS_8x8DCT ( h -> left_type [ LEFT ( i ) ] )	841:16:19196:19253	3344042	0	True				
ANR	3347846	AndExpression	h -> left_type [ LEFT ( i ) ] && ! IS_8x8DCT ( h -> left_type [ LEFT ( i ) ] )		3344042	0		&&			
ANR	3347847	ArrayIndexing	h -> left_type [ LEFT ( i ) ]		3344042	0					
ANR	3347848	PtrMemberAccess	h -> left_type		3344042	0					
ANR	3347849	Identifier	h		3344042	0					
ANR	3347850	Identifier	left_type		3344042	1					
ANR	3347851	CallExpression	LEFT ( i )		3344042	1					
ANR	3347852	Callee	LEFT		3344042	0					
ANR	3347853	Identifier	LEFT		3344042	0					
ANR	3347854	ArgumentList	i		3344042	1					
ANR	3347855	Argument	i		3344042	0					
ANR	3347856	Identifier	i		3344042	0					
ANR	3347857	UnaryOperationExpression	! IS_8x8DCT ( h -> left_type [ LEFT ( i ) ] )		3344042	1					
ANR	3347858	UnaryOperator	!		3344042	0					
ANR	3347859	CallExpression	IS_8x8DCT ( h -> left_type [ LEFT ( i ) ] )		3344042	1					
ANR	3347860	Callee	IS_8x8DCT		3344042	0					
ANR	3347861	Identifier	IS_8x8DCT		3344042	0					
ANR	3347862	ArgumentList	h -> left_type [ LEFT ( i ) ]		3344042	1					
ANR	3347863	Argument	h -> left_type [ LEFT ( i ) ]		3344042	0					
ANR	3347864	ArrayIndexing	h -> left_type [ LEFT ( i ) ]		3344042	0					
ANR	3347865	PtrMemberAccess	h -> left_type		3344042	0					
ANR	3347866	Identifier	h		3344042	0					
ANR	3347867	Identifier	left_type		3344042	1					
ANR	3347868	CallExpression	LEFT ( i )		3344042	1					
ANR	3347869	Callee	LEFT		3344042	0					
ANR	3347870	Identifier	LEFT		3344042	0					
ANR	3347871	ArgumentList	i		3344042	1					
ANR	3347872	Argument	i		3344042	0					
ANR	3347873	Identifier	i		3344042	0					
ANR	3347874	CompoundStatement		841:75:19210:19210	3344042	1					
ANR	3347875	ExpressionStatement	nnz_cache [ 3 + 8 * 1 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 2 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 6 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0	843:16:19274:19547	3344042	0	True				
ANR	3347876	AssignmentExpression	nnz_cache [ 3 + 8 * 1 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 2 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 6 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	0		=			
ANR	3347877	ArrayIndexing	nnz_cache [ 3 + 8 * 1 + 2 * 8 * i ]		3344042	0					
ANR	3347878	Identifier	nnz_cache		3344042	0					
ANR	3347879	AdditiveExpression	3 + 8 * 1 + 2 * 8 * i		3344042	1		+			
ANR	3347880	PrimaryExpression	3		3344042	0					
ANR	3347881	AdditiveExpression	8 * 1 + 2 * 8 * i		3344042	1		+			
ANR	3347882	MultiplicativeExpression	8 * 1		3344042	0		*			
ANR	3347883	PrimaryExpression	8		3344042	0					
ANR	3347884	PrimaryExpression	1		3344042	1					
ANR	3347885	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347886	PrimaryExpression	2		3344042	0					
ANR	3347887	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347888	PrimaryExpression	8		3344042	0					
ANR	3347889	Identifier	i		3344042	1					
ANR	3347890	AssignmentExpression	nnz_cache [ 3 + 8 * 2 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 6 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	1		=			
ANR	3347891	ArrayIndexing	nnz_cache [ 3 + 8 * 2 + 2 * 8 * i ]		3344042	0					
ANR	3347892	Identifier	nnz_cache		3344042	0					
ANR	3347893	AdditiveExpression	3 + 8 * 2 + 2 * 8 * i		3344042	1		+			
ANR	3347894	PrimaryExpression	3		3344042	0					
ANR	3347895	AdditiveExpression	8 * 2 + 2 * 8 * i		3344042	1		+			
ANR	3347896	MultiplicativeExpression	8 * 2		3344042	0		*			
ANR	3347897	PrimaryExpression	8		3344042	0					
ANR	3347898	PrimaryExpression	2		3344042	1					
ANR	3347899	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347900	PrimaryExpression	2		3344042	0					
ANR	3347901	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347902	PrimaryExpression	8		3344042	0					
ANR	3347903	Identifier	i		3344042	1					
ANR	3347904	AssignmentExpression	nnz_cache [ 3 + 8 * 6 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	1		=			
ANR	3347905	ArrayIndexing	nnz_cache [ 3 + 8 * 6 + 2 * 8 * i ]		3344042	0					
ANR	3347906	Identifier	nnz_cache		3344042	0					
ANR	3347907	AdditiveExpression	3 + 8 * 6 + 2 * 8 * i		3344042	1		+			
ANR	3347908	PrimaryExpression	3		3344042	0					
ANR	3347909	AdditiveExpression	8 * 6 + 2 * 8 * i		3344042	1		+			
ANR	3347910	MultiplicativeExpression	8 * 6		3344042	0		*			
ANR	3347911	PrimaryExpression	8		3344042	0					
ANR	3347912	PrimaryExpression	6		3344042	1					
ANR	3347913	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347914	PrimaryExpression	2		3344042	0					
ANR	3347915	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347916	PrimaryExpression	8		3344042	0					
ANR	3347917	Identifier	i		3344042	1					
ANR	3347918	AssignmentExpression	nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	1		=			
ANR	3347919	ArrayIndexing	nnz_cache [ 3 + 8 * 7 + 2 * 8 * i ]		3344042	0					
ANR	3347920	Identifier	nnz_cache		3344042	0					
ANR	3347921	AdditiveExpression	3 + 8 * 7 + 2 * 8 * i		3344042	1		+			
ANR	3347922	PrimaryExpression	3		3344042	0					
ANR	3347923	AdditiveExpression	8 * 7 + 2 * 8 * i		3344042	1		+			
ANR	3347924	MultiplicativeExpression	8 * 7		3344042	0		*			
ANR	3347925	PrimaryExpression	8		3344042	0					
ANR	3347926	PrimaryExpression	7		3344042	1					
ANR	3347927	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347928	PrimaryExpression	2		3344042	0					
ANR	3347929	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347930	PrimaryExpression	8		3344042	0					
ANR	3347931	Identifier	i		3344042	1					
ANR	3347932	AssignmentExpression	nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ] = nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	1		=			
ANR	3347933	ArrayIndexing	nnz_cache [ 3 + 8 * 11 + 2 * 8 * i ]		3344042	0					
ANR	3347934	Identifier	nnz_cache		3344042	0					
ANR	3347935	AdditiveExpression	3 + 8 * 11 + 2 * 8 * i		3344042	1		+			
ANR	3347936	PrimaryExpression	3		3344042	0					
ANR	3347937	AdditiveExpression	8 * 11 + 2 * 8 * i		3344042	1		+			
ANR	3347938	MultiplicativeExpression	8 * 11		3344042	0		*			
ANR	3347939	PrimaryExpression	8		3344042	0					
ANR	3347940	PrimaryExpression	11		3344042	1					
ANR	3347941	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347942	PrimaryExpression	2		3344042	0					
ANR	3347943	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347944	PrimaryExpression	8		3344042	0					
ANR	3347945	Identifier	i		3344042	1					
ANR	3347946	AssignmentExpression	nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ] = IS_INTRA ( mb_type ) ? 64 : 0		3344042	1		=			
ANR	3347947	ArrayIndexing	nnz_cache [ 3 + 8 * 12 + 2 * 8 * i ]		3344042	0					
ANR	3347948	Identifier	nnz_cache		3344042	0					
ANR	3347949	AdditiveExpression	3 + 8 * 12 + 2 * 8 * i		3344042	1		+			
ANR	3347950	PrimaryExpression	3		3344042	0					
ANR	3347951	AdditiveExpression	8 * 12 + 2 * 8 * i		3344042	1		+			
ANR	3347952	MultiplicativeExpression	8 * 12		3344042	0		*			
ANR	3347953	PrimaryExpression	8		3344042	0					
ANR	3347954	PrimaryExpression	12		3344042	1					
ANR	3347955	MultiplicativeExpression	2 * 8 * i		3344042	1		*			
ANR	3347956	PrimaryExpression	2		3344042	0					
ANR	3347957	MultiplicativeExpression	8 * i		3344042	1		*			
ANR	3347958	PrimaryExpression	8		3344042	0					
ANR	3347959	Identifier	i		3344042	1					
ANR	3347960	ConditionalExpression	IS_INTRA ( mb_type ) ? 64 : 0		3344042	1					
ANR	3347961	Condition	IS_INTRA ( mb_type )		3344042	0					
ANR	3347962	CallExpression	IS_INTRA ( mb_type )		3344042	0					
ANR	3347963	Callee	IS_INTRA		3344042	0					
ANR	3347964	Identifier	IS_INTRA		3344042	0					
ANR	3347965	ArgumentList	mb_type		3344042	1					
ANR	3347966	Argument	mb_type		3344042	0					
ANR	3347967	Identifier	mb_type		3344042	0					
ANR	3347968	PrimaryExpression	64		3344042	1					
ANR	3347969	PrimaryExpression	0		3344042	2					
ANR	3347970	IfStatement	if ( h -> top_type && ! IS_8x8DCT ( h -> top_type ) )		3344042	3					
ANR	3347971	Condition	h -> top_type && ! IS_8x8DCT ( h -> top_type )	859:12:19588:19625	3344042	0	True				
ANR	3347972	AndExpression	h -> top_type && ! IS_8x8DCT ( h -> top_type )		3344042	0		&&			
ANR	3347973	PtrMemberAccess	h -> top_type		3344042	0					
ANR	3347974	Identifier	h		3344042	0					
ANR	3347975	Identifier	top_type		3344042	1					
ANR	3347976	UnaryOperationExpression	! IS_8x8DCT ( h -> top_type )		3344042	1					
ANR	3347977	UnaryOperator	!		3344042	0					
ANR	3347978	CallExpression	IS_8x8DCT ( h -> top_type )		3344042	1					
ANR	3347979	Callee	IS_8x8DCT		3344042	0					
ANR	3347980	Identifier	IS_8x8DCT		3344042	0					
ANR	3347981	ArgumentList	h -> top_type		3344042	1					
ANR	3347982	Argument	h -> top_type		3344042	0					
ANR	3347983	PtrMemberAccess	h -> top_type		3344042	0					
ANR	3347984	Identifier	h		3344042	0					
ANR	3347985	Identifier	top_type		3344042	1					
ANR	3347986	CompoundStatement		861:12:19597:19662	3344042	1					
ANR	3347987	IdentifierDeclStatement	uint32_t top_empty = CABAC && ! IS_INTRA ( mb_type ) ? 0 : 0x40404040 ;	861:12:19642:19707	3344042	0	True				
ANR	3347988	IdentifierDecl	top_empty = CABAC && ! IS_INTRA ( mb_type ) ? 0 : 0x40404040		3344042	0					
ANR	3347989	IdentifierDeclType	uint32_t		3344042	0					
ANR	3347990	Identifier	top_empty		3344042	1					
ANR	3347991	AssignmentExpression	top_empty = CABAC && ! IS_INTRA ( mb_type ) ? 0 : 0x40404040		3344042	2		=			
ANR	3347992	Identifier	top_empty		3344042	0					
ANR	3347993	ConditionalExpression	CABAC && ! IS_INTRA ( mb_type ) ? 0 : 0x40404040		3344042	1					
ANR	3347994	Condition	CABAC && ! IS_INTRA ( mb_type )		3344042	0					
ANR	3347995	AndExpression	CABAC && ! IS_INTRA ( mb_type )		3344042	0		&&			
ANR	3347996	Identifier	CABAC		3344042	0					
ANR	3347997	UnaryOperationExpression	! IS_INTRA ( mb_type )		3344042	1					
ANR	3347998	UnaryOperator	!		3344042	0					
ANR	3347999	CallExpression	IS_INTRA ( mb_type )		3344042	1					
ANR	3348000	Callee	IS_INTRA		3344042	0					
ANR	3348001	Identifier	IS_INTRA		3344042	0					
ANR	3348002	ArgumentList	mb_type		3344042	1					
ANR	3348003	Argument	mb_type		3344042	0					
ANR	3348004	Identifier	mb_type		3344042	0					
ANR	3348005	PrimaryExpression	0		3344042	1					
ANR	3348006	PrimaryExpression	0x40404040		3344042	2					
ANR	3348007	ExpressionStatement	"AV_WN32A ( & nnz_cache [ 4 + 8 * 0 ] , top_empty )"	863:12:19722:19761	3344042	1	True				
ANR	3348008	CallExpression	"AV_WN32A ( & nnz_cache [ 4 + 8 * 0 ] , top_empty )"		3344042	0					
ANR	3348009	Callee	AV_WN32A		3344042	0					
ANR	3348010	Identifier	AV_WN32A		3344042	0					
ANR	3348011	ArgumentList	& nnz_cache [ 4 + 8 * 0 ]		3344042	1					
ANR	3348012	Argument	& nnz_cache [ 4 + 8 * 0 ]		3344042	0					
ANR	3348013	UnaryOperationExpression	& nnz_cache [ 4 + 8 * 0 ]		3344042	0					
ANR	3348014	UnaryOperator	&		3344042	0					
ANR	3348015	ArrayIndexing	nnz_cache [ 4 + 8 * 0 ]		3344042	1					
ANR	3348016	Identifier	nnz_cache		3344042	0					
ANR	3348017	AdditiveExpression	4 + 8 * 0		3344042	1		+			
ANR	3348018	PrimaryExpression	4		3344042	0					
ANR	3348019	MultiplicativeExpression	8 * 0		3344042	1		*			
ANR	3348020	PrimaryExpression	8		3344042	0					
ANR	3348021	PrimaryExpression	0		3344042	1					
ANR	3348022	Argument	top_empty		3344042	1					
ANR	3348023	Identifier	top_empty		3344042	0					
ANR	3348024	ExpressionStatement	"AV_WN32A ( & nnz_cache [ 4 + 8 * 5 ] , top_empty )"	865:12:19776:19815	3344042	2	True				
ANR	3348025	CallExpression	"AV_WN32A ( & nnz_cache [ 4 + 8 * 5 ] , top_empty )"		3344042	0					
ANR	3348026	Callee	AV_WN32A		3344042	0					
ANR	3348027	Identifier	AV_WN32A		3344042	0					
ANR	3348028	ArgumentList	& nnz_cache [ 4 + 8 * 5 ]		3344042	1					
ANR	3348029	Argument	& nnz_cache [ 4 + 8 * 5 ]		3344042	0					
ANR	3348030	UnaryOperationExpression	& nnz_cache [ 4 + 8 * 5 ]		3344042	0					
ANR	3348031	UnaryOperator	&		3344042	0					
ANR	3348032	ArrayIndexing	nnz_cache [ 4 + 8 * 5 ]		3344042	1					
ANR	3348033	Identifier	nnz_cache		3344042	0					
ANR	3348034	AdditiveExpression	4 + 8 * 5		3344042	1		+			
ANR	3348035	PrimaryExpression	4		3344042	0					
ANR	3348036	MultiplicativeExpression	8 * 5		3344042	1		*			
ANR	3348037	PrimaryExpression	8		3344042	0					
ANR	3348038	PrimaryExpression	5		3344042	1					
ANR	3348039	Argument	top_empty		3344042	1					
ANR	3348040	Identifier	top_empty		3344042	0					
ANR	3348041	ExpressionStatement	"AV_WN32A ( & nnz_cache [ 4 + 8 * 10 ] , top_empty )"	867:12:19830:19869	3344042	3	True				
ANR	3348042	CallExpression	"AV_WN32A ( & nnz_cache [ 4 + 8 * 10 ] , top_empty )"		3344042	0					
ANR	3348043	Callee	AV_WN32A		3344042	0					
ANR	3348044	Identifier	AV_WN32A		3344042	0					
ANR	3348045	ArgumentList	& nnz_cache [ 4 + 8 * 10 ]		3344042	1					
ANR	3348046	Argument	& nnz_cache [ 4 + 8 * 10 ]		3344042	0					
ANR	3348047	UnaryOperationExpression	& nnz_cache [ 4 + 8 * 10 ]		3344042	0					
ANR	3348048	UnaryOperator	&		3344042	0					
ANR	3348049	ArrayIndexing	nnz_cache [ 4 + 8 * 10 ]		3344042	1					
ANR	3348050	Identifier	nnz_cache		3344042	0					
ANR	3348051	AdditiveExpression	4 + 8 * 10		3344042	1		+			
ANR	3348052	PrimaryExpression	4		3344042	0					
ANR	3348053	MultiplicativeExpression	8 * 10		3344042	1		*			
ANR	3348054	PrimaryExpression	8		3344042	0					
ANR	3348055	PrimaryExpression	10		3344042	1					
ANR	3348056	Argument	top_empty		3344042	1					
ANR	3348057	Identifier	top_empty		3344042	0					
ANR	3348058	ExpressionStatement	s -> current_picture . f . mb_type [ mb_xy ] = mb_type	873:4:19894:19939	3344042	27	True				
ANR	3348059	AssignmentExpression	s -> current_picture . f . mb_type [ mb_xy ] = mb_type		3344042	0		=			
ANR	3348060	ArrayIndexing	s -> current_picture . f . mb_type [ mb_xy ]		3344042	0					
ANR	3348061	MemberAccess	s -> current_picture . f . mb_type		3344042	0					
ANR	3348062	MemberAccess	s -> current_picture . f		3344042	0					
ANR	3348063	PtrMemberAccess	s -> current_picture		3344042	0					
ANR	3348064	Identifier	s		3344042	0					
ANR	3348065	Identifier	current_picture		3344042	1					
ANR	3348066	Identifier	f		3344042	1					
ANR	3348067	Identifier	mb_type		3344042	1					
ANR	3348068	Identifier	mb_xy		3344042	1					
ANR	3348069	Identifier	mb_type		3344042	1					
ANR	3348070	IfStatement	if ( cbp || IS_INTRA16x16 ( mb_type ) )		3344042	28					
ANR	3348071	Condition	cbp || IS_INTRA16x16 ( mb_type )	877:8:19952:19982	3344042	0	True				
ANR	3348072	OrExpression	cbp || IS_INTRA16x16 ( mb_type )		3344042	0		||			
ANR	3348073	Identifier	cbp		3344042	0					
ANR	3348074	CallExpression	IS_INTRA16x16 ( mb_type )		3344042	1					
ANR	3348075	Callee	IS_INTRA16x16		3344042	0					
ANR	3348076	Identifier	IS_INTRA16x16		3344042	0					
ANR	3348077	ArgumentList	mb_type		3344042	1					
ANR	3348078	Argument	mb_type		3344042	0					
ANR	3348079	Identifier	mb_type		3344042	0					
ANR	3348080	CompoundStatement		881:8:19992:20012	3344042	1					
ANR	3348081	IdentifierDeclStatement	"const uint8_t * scan , * scan8x8 ;"	879:8:19997:20026	3344042	0	True				
ANR	3348082	IdentifierDecl	* scan		3344042	0					
ANR	3348083	IdentifierDeclType	const uint8_t *		3344042	0					
ANR	3348084	Identifier	scan		3344042	1					
ANR	3348085	IdentifierDecl	* scan8x8		3344042	1					
ANR	3348086	IdentifierDeclType	const uint8_t *		3344042	0					
ANR	3348087	Identifier	scan8x8		3344042	1					
ANR	3348088	IdentifierDeclStatement	const uint32_t * qmul ;	881:8:20037:20057	3344042	1	True				
ANR	3348089	IdentifierDecl	* qmul		3344042	0					
ANR	3348090	IdentifierDeclType	const uint32_t *		3344042	0					
ANR	3348091	Identifier	qmul		3344042	1					
ANR	3348092	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3344042	2					
ANR	3348093	Condition	IS_INTERLACED ( mb_type )	885:11:20073:20094	3344042	0	True				
ANR	3348094	CallExpression	IS_INTERLACED ( mb_type )		3344042	0					
ANR	3348095	Callee	IS_INTERLACED		3344042	0					
ANR	3348096	Identifier	IS_INTERLACED		3344042	0					
ANR	3348097	ArgumentList	mb_type		3344042	1					
ANR	3348098	Argument	mb_type		3344042	0					
ANR	3348099	Identifier	mb_type		3344042	0					
ANR	3348100	CompoundStatement		885:34:20051:20051	3344042	1					
ANR	3348101	ExpressionStatement	scan8x8 = s -> qscale ? h -> field_scan8x8 : h -> field_scan8x8_q0	887:12:20111:20170	3344042	0	True				
ANR	3348102	AssignmentExpression	scan8x8 = s -> qscale ? h -> field_scan8x8 : h -> field_scan8x8_q0		3344042	0		=			
ANR	3348103	Identifier	scan8x8		3344042	0					
ANR	3348104	ConditionalExpression	s -> qscale ? h -> field_scan8x8 : h -> field_scan8x8_q0		3344042	1					
ANR	3348105	Condition	s -> qscale		3344042	0					
ANR	3348106	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348107	Identifier	s		3344042	0					
ANR	3348108	Identifier	qscale		3344042	1					
ANR	3348109	PtrMemberAccess	h -> field_scan8x8		3344042	1					
ANR	3348110	Identifier	h		3344042	0					
ANR	3348111	Identifier	field_scan8x8		3344042	1					
ANR	3348112	PtrMemberAccess	h -> field_scan8x8_q0		3344042	2					
ANR	3348113	Identifier	h		3344042	0					
ANR	3348114	Identifier	field_scan8x8_q0		3344042	1					
ANR	3348115	ExpressionStatement	scan = s -> qscale ? h -> field_scan : h -> field_scan_q0	889:12:20185:20235	3344042	1	True				
ANR	3348116	AssignmentExpression	scan = s -> qscale ? h -> field_scan : h -> field_scan_q0		3344042	0		=			
ANR	3348117	Identifier	scan		3344042	0					
ANR	3348118	ConditionalExpression	s -> qscale ? h -> field_scan : h -> field_scan_q0		3344042	1					
ANR	3348119	Condition	s -> qscale		3344042	0					
ANR	3348120	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348121	Identifier	s		3344042	0					
ANR	3348122	Identifier	qscale		3344042	1					
ANR	3348123	PtrMemberAccess	h -> field_scan		3344042	1					
ANR	3348124	Identifier	h		3344042	0					
ANR	3348125	Identifier	field_scan		3344042	1					
ANR	3348126	PtrMemberAccess	h -> field_scan_q0		3344042	2					
ANR	3348127	Identifier	h		3344042	0					
ANR	3348128	Identifier	field_scan_q0		3344042	1					
ANR	3348129	ElseStatement	else		3344042	0					
ANR	3348130	CompoundStatement		891:13:20206:20206	3344042	0					
ANR	3348131	ExpressionStatement	scan8x8 = s -> qscale ? h -> zigzag_scan8x8 : h -> zigzag_scan8x8_q0	893:12:20266:20327	3344042	0	True				
ANR	3348132	AssignmentExpression	scan8x8 = s -> qscale ? h -> zigzag_scan8x8 : h -> zigzag_scan8x8_q0		3344042	0		=			
ANR	3348133	Identifier	scan8x8		3344042	0					
ANR	3348134	ConditionalExpression	s -> qscale ? h -> zigzag_scan8x8 : h -> zigzag_scan8x8_q0		3344042	1					
ANR	3348135	Condition	s -> qscale		3344042	0					
ANR	3348136	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348137	Identifier	s		3344042	0					
ANR	3348138	Identifier	qscale		3344042	1					
ANR	3348139	PtrMemberAccess	h -> zigzag_scan8x8		3344042	1					
ANR	3348140	Identifier	h		3344042	0					
ANR	3348141	Identifier	zigzag_scan8x8		3344042	1					
ANR	3348142	PtrMemberAccess	h -> zigzag_scan8x8_q0		3344042	2					
ANR	3348143	Identifier	h		3344042	0					
ANR	3348144	Identifier	zigzag_scan8x8_q0		3344042	1					
ANR	3348145	ExpressionStatement	scan = s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0	895:12:20342:20394	3344042	1	True				
ANR	3348146	AssignmentExpression	scan = s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3344042	0		=			
ANR	3348147	Identifier	scan		3344042	0					
ANR	3348148	ConditionalExpression	s -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3344042	1					
ANR	3348149	Condition	s -> qscale		3344042	0					
ANR	3348150	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348151	Identifier	s		3344042	0					
ANR	3348152	Identifier	qscale		3344042	1					
ANR	3348153	PtrMemberAccess	h -> zigzag_scan		3344042	1					
ANR	3348154	Identifier	h		3344042	0					
ANR	3348155	Identifier	zigzag_scan		3344042	1					
ANR	3348156	PtrMemberAccess	h -> zigzag_scan_q0		3344042	2					
ANR	3348157	Identifier	h		3344042	0					
ANR	3348158	Identifier	zigzag_scan_q0		3344042	1					
ANR	3348159	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ] ) )"		3344042	3					
ANR	3348160	Condition	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ] )"	903:11:20453:20532	3344042	0	True				
ANR	3348161	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ] )"		3344042	0					
ANR	3348162	Callee	get_cabac_noinline		3344042	0					
ANR	3348163	Identifier	get_cabac_noinline		3344042	0					
ANR	3348164	ArgumentList	& h -> cabac		3344042	1					
ANR	3348165	Argument	& h -> cabac		3344042	0					
ANR	3348166	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3348167	UnaryOperator	&		3344042	0					
ANR	3348168	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3348169	Identifier	h		3344042	0					
ANR	3348170	Identifier	cabac		3344042	1					
ANR	3348171	Argument	& h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ]		3344042	1					
ANR	3348172	UnaryOperationExpression	& h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ]		3344042	0					
ANR	3348173	UnaryOperator	&		3344042	0					
ANR	3348174	ArrayIndexing	h -> cabac_state [ 60 + ( h -> last_qscale_diff != 0 ) ]		3344042	1					
ANR	3348175	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3348176	Identifier	h		3344042	0					
ANR	3348177	Identifier	cabac_state		3344042	1					
ANR	3348178	AdditiveExpression	60 + ( h -> last_qscale_diff != 0 )		3344042	1		+			
ANR	3348179	PrimaryExpression	60		3344042	0					
ANR	3348180	EqualityExpression	h -> last_qscale_diff != 0		3344042	1		!=			
ANR	3348181	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3348182	Identifier	h		3344042	0					
ANR	3348183	Identifier	last_qscale_diff		3344042	1					
ANR	3348184	PrimaryExpression	0		3344042	1					
ANR	3348185	CompoundStatement		909:12:20555:20606	3344042	1					
ANR	3348186	IdentifierDeclStatement	int val = 1 ;	905:12:20549:20560	3344042	0	True				
ANR	3348187	IdentifierDecl	val = 1		3344042	0					
ANR	3348188	IdentifierDeclType	int		3344042	0					
ANR	3348189	Identifier	val		3344042	1					
ANR	3348190	AssignmentExpression	val = 1		3344042	2		=			
ANR	3348191	Identifier	val		3344042	0					
ANR	3348192	PrimaryExpression	1		3344042	1					
ANR	3348193	IdentifierDeclStatement	int ctx = 2 ;	907:12:20575:20585	3344042	1	True				
ANR	3348194	IdentifierDecl	ctx = 2		3344042	0					
ANR	3348195	IdentifierDeclType	int		3344042	0					
ANR	3348196	Identifier	ctx		3344042	1					
ANR	3348197	AssignmentExpression	ctx = 2		3344042	2		=			
ANR	3348198	Identifier	ctx		3344042	0					
ANR	3348199	PrimaryExpression	2		3344042	1					
ANR	3348200	IdentifierDeclStatement	const int max_qp = 51 + 6 * ( h -> sps . bit_depth_luma - 8 ) ;	909:12:20600:20651	3344042	2	True				
ANR	3348201	IdentifierDecl	max_qp = 51 + 6 * ( h -> sps . bit_depth_luma - 8 )		3344042	0					
ANR	3348202	IdentifierDeclType	const int		3344042	0					
ANR	3348203	Identifier	max_qp		3344042	1					
ANR	3348204	AssignmentExpression	max_qp = 51 + 6 * ( h -> sps . bit_depth_luma - 8 )		3344042	2		=			
ANR	3348205	Identifier	max_qp		3344042	0					
ANR	3348206	AdditiveExpression	51 + 6 * ( h -> sps . bit_depth_luma - 8 )		3344042	1		+			
ANR	3348207	PrimaryExpression	51		3344042	0					
ANR	3348208	MultiplicativeExpression	6 * ( h -> sps . bit_depth_luma - 8 )		3344042	1		*			
ANR	3348209	PrimaryExpression	6		3344042	0					
ANR	3348210	AdditiveExpression	h -> sps . bit_depth_luma - 8		3344042	1		-			
ANR	3348211	MemberAccess	h -> sps . bit_depth_luma		3344042	0					
ANR	3348212	PtrMemberAccess	h -> sps		3344042	0					
ANR	3348213	Identifier	h		3344042	0					
ANR	3348214	Identifier	sps		3344042	1					
ANR	3348215	Identifier	bit_depth_luma		3344042	1					
ANR	3348216	PrimaryExpression	8		3344042	1					
ANR	3348217	WhileStatement	"while ( get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ctx ] ) )"		3344042	3					
ANR	3348218	Condition	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ctx ] )"	913:19:20675:20732	3344042	0	True				
ANR	3348219	CallExpression	"get_cabac_noinline ( & h -> cabac , & h -> cabac_state [ 60 + ctx ] )"		3344042	0					
ANR	3348220	Callee	get_cabac_noinline		3344042	0					
ANR	3348221	Identifier	get_cabac_noinline		3344042	0					
ANR	3348222	ArgumentList	& h -> cabac		3344042	1					
ANR	3348223	Argument	& h -> cabac		3344042	0					
ANR	3348224	UnaryOperationExpression	& h -> cabac		3344042	0					
ANR	3348225	UnaryOperator	&		3344042	0					
ANR	3348226	PtrMemberAccess	h -> cabac		3344042	1					
ANR	3348227	Identifier	h		3344042	0					
ANR	3348228	Identifier	cabac		3344042	1					
ANR	3348229	Argument	& h -> cabac_state [ 60 + ctx ]		3344042	1					
ANR	3348230	UnaryOperationExpression	& h -> cabac_state [ 60 + ctx ]		3344042	0					
ANR	3348231	UnaryOperator	&		3344042	0					
ANR	3348232	ArrayIndexing	h -> cabac_state [ 60 + ctx ]		3344042	1					
ANR	3348233	PtrMemberAccess	h -> cabac_state		3344042	0					
ANR	3348234	Identifier	h		3344042	0					
ANR	3348235	Identifier	cabac_state		3344042	1					
ANR	3348236	AdditiveExpression	60 + ctx		3344042	1		+			
ANR	3348237	PrimaryExpression	60		3344042	0					
ANR	3348238	Identifier	ctx		3344042	1					
ANR	3348239	CompoundStatement		913:80:20691:20691	3344042	1					
ANR	3348240	ExpressionStatement	ctx = 3	915:16:20755:20761	3344042	0	True				
ANR	3348241	AssignmentExpression	ctx = 3		3344042	0		=			
ANR	3348242	Identifier	ctx		3344042	0					
ANR	3348243	PrimaryExpression	3		3344042	1					
ANR	3348244	ExpressionStatement	val ++	917:16:20780:20785	3344042	1	True				
ANR	3348245	PostIncDecOperationExpression	val ++		3344042	0					
ANR	3348246	Identifier	val		3344042	0					
ANR	3348247	IncDec	++		3344042	1					
ANR	3348248	IfStatement	if ( val > 2 * max_qp )		3344042	2					
ANR	3348249	Condition	val > 2 * max_qp	919:19:20807:20820	3344042	0	True				
ANR	3348250	RelationalExpression	val > 2 * max_qp		3344042	0		>			
ANR	3348251	Identifier	val		3344042	0					
ANR	3348252	MultiplicativeExpression	2 * max_qp		3344042	1		*			
ANR	3348253	PrimaryExpression	2		3344042	0					
ANR	3348254	Identifier	max_qp		3344042	1					
ANR	3348255	CompoundStatement		919:34:20777:20777	3344042	1					
ANR	3348256	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cabac decode of qscale diff failed at %d %d\\n"" , s -> mb_x , s -> mb_y )"	921:20:20869:20968	3344042	0	True				
ANR	3348257	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cabac decode of qscale diff failed at %d %d\\n"" , s -> mb_x , s -> mb_y )"		3344042	0					
ANR	3348258	Callee	av_log		3344042	0					
ANR	3348259	Identifier	av_log		3344042	0					
ANR	3348260	ArgumentList	h -> s . avctx		3344042	1					
ANR	3348261	Argument	h -> s . avctx		3344042	0					
ANR	3348262	MemberAccess	h -> s . avctx		3344042	0					
ANR	3348263	PtrMemberAccess	h -> s		3344042	0					
ANR	3348264	Identifier	h		3344042	0					
ANR	3348265	Identifier	s		3344042	1					
ANR	3348266	Identifier	avctx		3344042	1					
ANR	3348267	Argument	AV_LOG_ERROR		3344042	1					
ANR	3348268	Identifier	AV_LOG_ERROR		3344042	0					
ANR	3348269	Argument	"""cabac decode of qscale diff failed at %d %d\\n"""		3344042	2					
ANR	3348270	PrimaryExpression	"""cabac decode of qscale diff failed at %d %d\\n"""		3344042	0					
ANR	3348271	Argument	s -> mb_x		3344042	3					
ANR	3348272	PtrMemberAccess	s -> mb_x		3344042	0					
ANR	3348273	Identifier	s		3344042	0					
ANR	3348274	Identifier	mb_x		3344042	1					
ANR	3348275	Argument	s -> mb_y		3344042	4					
ANR	3348276	PtrMemberAccess	s -> mb_y		3344042	0					
ANR	3348277	Identifier	s		3344042	0					
ANR	3348278	Identifier	mb_y		3344042	1					
ANR	3348279	IfStatement	if ( val & 0x01 )		3344042	4					
ANR	3348280	Condition	val & 0x01	930:16:21024:21031	3344042	0	True				
ANR	3348281	BitAndExpression	val & 0x01		3344042	0		&			
ANR	3348282	Identifier	val		3344042	0					
ANR	3348283	PrimaryExpression	0x01		3344042	1					
ANR	3348284	ExpressionStatement	val = ( val + 1 ) >> 1	932:16:21052:21072	3344042	1	True				
ANR	3348285	AssignmentExpression	val = ( val + 1 ) >> 1		3344042	0		=			
ANR	3348286	Identifier	val		3344042	0					
ANR	3348287	ShiftExpression	( val + 1 ) >> 1		3344042	1		>>			
ANR	3348288	AdditiveExpression	val + 1		3344042	0		+			
ANR	3348289	Identifier	val		3344042	0					
ANR	3348290	PrimaryExpression	1		3344042	1					
ANR	3348291	PrimaryExpression	1		3344042	1					
ANR	3348292	ElseStatement	else		3344042	0					
ANR	3348293	ExpressionStatement	val = - ( ( val + 1 ) >> 1 )	936:16:21109:21129	3344042	0	True				
ANR	3348294	AssignmentExpression	val = - ( ( val + 1 ) >> 1 )		3344042	0		=			
ANR	3348295	Identifier	val		3344042	0					
ANR	3348296	UnaryOperationExpression	- ( ( val + 1 ) >> 1 )		3344042	1					
ANR	3348297	UnaryOperator	-		3344042	0					
ANR	3348298	ShiftExpression	( val + 1 ) >> 1		3344042	1		>>			
ANR	3348299	AdditiveExpression	val + 1		3344042	0		+			
ANR	3348300	Identifier	val		3344042	0					
ANR	3348301	PrimaryExpression	1		3344042	1					
ANR	3348302	PrimaryExpression	1		3344042	1					
ANR	3348303	ExpressionStatement	h -> last_qscale_diff = val	938:12:21144:21169	3344042	5	True				
ANR	3348304	AssignmentExpression	h -> last_qscale_diff = val		3344042	0		=			
ANR	3348305	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3348306	Identifier	h		3344042	0					
ANR	3348307	Identifier	last_qscale_diff		3344042	1					
ANR	3348308	Identifier	val		3344042	1					
ANR	3348309	ExpressionStatement	s -> qscale += val	940:12:21184:21200	3344042	6	True				
ANR	3348310	AssignmentExpression	s -> qscale += val		3344042	0		+=			
ANR	3348311	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348312	Identifier	s		3344042	0					
ANR	3348313	Identifier	qscale		3344042	1					
ANR	3348314	Identifier	val		3344042	1					
ANR	3348315	IfStatement	if ( ( ( unsigned ) s -> qscale ) > max_qp )		3344042	7					
ANR	3348316	Condition	( ( unsigned ) s -> qscale ) > max_qp	942:15:21218:21247	3344042	0	True				
ANR	3348317	RelationalExpression	( ( unsigned ) s -> qscale ) > max_qp		3344042	0		>			
ANR	3348318	CastExpression	( unsigned ) s -> qscale		3344042	0					
ANR	3348319	CastTarget	unsigned		3344042	0					
ANR	3348320	PtrMemberAccess	s -> qscale		3344042	1					
ANR	3348321	Identifier	s		3344042	0					
ANR	3348322	Identifier	qscale		3344042	1					
ANR	3348323	Identifier	max_qp		3344042	1					
ANR	3348324	CompoundStatement		942:46:21204:21204	3344042	1					
ANR	3348325	IfStatement	if ( s -> qscale < 0 )		3344042	0					
ANR	3348326	Condition	s -> qscale < 0	944:19:21271:21281	3344042	0	True				
ANR	3348327	RelationalExpression	s -> qscale < 0		3344042	0		<			
ANR	3348328	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348329	Identifier	s		3344042	0					
ANR	3348330	Identifier	qscale		3344042	1					
ANR	3348331	PrimaryExpression	0		3344042	1					
ANR	3348332	ExpressionStatement	s -> qscale += max_qp + 1	944:32:21284:21304	3344042	1	True				
ANR	3348333	AssignmentExpression	s -> qscale += max_qp + 1		3344042	0		+=			
ANR	3348334	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348335	Identifier	s		3344042	0					
ANR	3348336	Identifier	qscale		3344042	1					
ANR	3348337	AdditiveExpression	max_qp + 1		3344042	1		+			
ANR	3348338	Identifier	max_qp		3344042	0					
ANR	3348339	PrimaryExpression	1		3344042	1					
ANR	3348340	ElseStatement	else		3344042	0					
ANR	3348341	ExpressionStatement	s -> qscale -= max_qp + 1	946:32:21339:21359	3344042	0	True				
ANR	3348342	AssignmentExpression	s -> qscale -= max_qp + 1		3344042	0		-=			
ANR	3348343	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348344	Identifier	s		3344042	0					
ANR	3348345	Identifier	qscale		3344042	1					
ANR	3348346	AdditiveExpression	max_qp + 1		3344042	1		+			
ANR	3348347	Identifier	max_qp		3344042	0					
ANR	3348348	PrimaryExpression	1		3344042	1					
ANR	3348349	ExpressionStatement	"h -> chroma_qp [ 0 ] = get_chroma_qp ( h , 0 , s -> qscale )"	950:12:21389:21437	3344042	8	True				
ANR	3348350	AssignmentExpression	"h -> chroma_qp [ 0 ] = get_chroma_qp ( h , 0 , s -> qscale )"		3344042	0		=			
ANR	3348351	ArrayIndexing	h -> chroma_qp [ 0 ]		3344042	0					
ANR	3348352	PtrMemberAccess	h -> chroma_qp		3344042	0					
ANR	3348353	Identifier	h		3344042	0					
ANR	3348354	Identifier	chroma_qp		3344042	1					
ANR	3348355	PrimaryExpression	0		3344042	1					
ANR	3348356	CallExpression	"get_chroma_qp ( h , 0 , s -> qscale )"		3344042	1					
ANR	3348357	Callee	get_chroma_qp		3344042	0					
ANR	3348358	Identifier	get_chroma_qp		3344042	0					
ANR	3348359	ArgumentList	h		3344042	1					
ANR	3348360	Argument	h		3344042	0					
ANR	3348361	Identifier	h		3344042	0					
ANR	3348362	Argument	0		3344042	1					
ANR	3348363	PrimaryExpression	0		3344042	0					
ANR	3348364	Argument	s -> qscale		3344042	2					
ANR	3348365	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348366	Identifier	s		3344042	0					
ANR	3348367	Identifier	qscale		3344042	1					
ANR	3348368	ExpressionStatement	"h -> chroma_qp [ 1 ] = get_chroma_qp ( h , 1 , s -> qscale )"	952:12:21452:21500	3344042	9	True				
ANR	3348369	AssignmentExpression	"h -> chroma_qp [ 1 ] = get_chroma_qp ( h , 1 , s -> qscale )"		3344042	0		=			
ANR	3348370	ArrayIndexing	h -> chroma_qp [ 1 ]		3344042	0					
ANR	3348371	PtrMemberAccess	h -> chroma_qp		3344042	0					
ANR	3348372	Identifier	h		3344042	0					
ANR	3348373	Identifier	chroma_qp		3344042	1					
ANR	3348374	PrimaryExpression	1		3344042	1					
ANR	3348375	CallExpression	"get_chroma_qp ( h , 1 , s -> qscale )"		3344042	1					
ANR	3348376	Callee	get_chroma_qp		3344042	0					
ANR	3348377	Identifier	get_chroma_qp		3344042	0					
ANR	3348378	ArgumentList	h		3344042	1					
ANR	3348379	Argument	h		3344042	0					
ANR	3348380	Identifier	h		3344042	0					
ANR	3348381	Argument	1		3344042	1					
ANR	3348382	PrimaryExpression	1		3344042	0					
ANR	3348383	Argument	s -> qscale		3344042	2					
ANR	3348384	PtrMemberAccess	s -> qscale		3344042	0					
ANR	3348385	Identifier	s		3344042	0					
ANR	3348386	Identifier	qscale		3344042	1					
ANR	3348387	ElseStatement	else		3344042	0					
ANR	3348388	ExpressionStatement	h -> last_qscale_diff = 0	956:12:21530:21551	3344042	0	True				
ANR	3348389	AssignmentExpression	h -> last_qscale_diff = 0		3344042	0		=			
ANR	3348390	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3348391	Identifier	h		3344042	0					
ANR	3348392	Identifier	last_qscale_diff		3344042	1					
ANR	3348393	PrimaryExpression	0		3344042	1					
ANR	3348394	ExpressionStatement	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 )"	960:8:21564:21638	3344042	4	True				
ANR	3348395	CallExpression	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 )"		3344042	0					
ANR	3348396	Callee	decode_cabac_luma_residual		3344042	0					
ANR	3348397	Identifier	decode_cabac_luma_residual		3344042	0					
ANR	3348398	ArgumentList	h		3344042	1					
ANR	3348399	Argument	h		3344042	0					
ANR	3348400	Identifier	h		3344042	0					
ANR	3348401	Argument	scan		3344042	1					
ANR	3348402	Identifier	scan		3344042	0					
ANR	3348403	Argument	scan8x8		3344042	2					
ANR	3348404	Identifier	scan8x8		3344042	0					
ANR	3348405	Argument	pixel_shift		3344042	3					
ANR	3348406	Identifier	pixel_shift		3344042	0					
ANR	3348407	Argument	mb_type		3344042	4					
ANR	3348408	Identifier	mb_type		3344042	0					
ANR	3348409	Argument	cbp		3344042	5					
ANR	3348410	Identifier	cbp		3344042	0					
ANR	3348411	Argument	0		3344042	6					
ANR	3348412	PrimaryExpression	0		3344042	0					
ANR	3348413	IfStatement	if ( CHROMA444 )		3344042	5					
ANR	3348414	Condition	CHROMA444	962:11:21652:21660	3344042	0	True				
ANR	3348415	Identifier	CHROMA444		3344042	0					
ANR	3348416	CompoundStatement		962:21:21617:21617	3344042	1					
ANR	3348417	ExpressionStatement	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 )"	964:12:21677:21751	3344042	0	True				
ANR	3348418	CallExpression	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 )"		3344042	0					
ANR	3348419	Callee	decode_cabac_luma_residual		3344042	0					
ANR	3348420	Identifier	decode_cabac_luma_residual		3344042	0					
ANR	3348421	ArgumentList	h		3344042	1					
ANR	3348422	Argument	h		3344042	0					
ANR	3348423	Identifier	h		3344042	0					
ANR	3348424	Argument	scan		3344042	1					
ANR	3348425	Identifier	scan		3344042	0					
ANR	3348426	Argument	scan8x8		3344042	2					
ANR	3348427	Identifier	scan8x8		3344042	0					
ANR	3348428	Argument	pixel_shift		3344042	3					
ANR	3348429	Identifier	pixel_shift		3344042	0					
ANR	3348430	Argument	mb_type		3344042	4					
ANR	3348431	Identifier	mb_type		3344042	0					
ANR	3348432	Argument	cbp		3344042	5					
ANR	3348433	Identifier	cbp		3344042	0					
ANR	3348434	Argument	1		3344042	6					
ANR	3348435	PrimaryExpression	1		3344042	0					
ANR	3348436	ExpressionStatement	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 )"	966:12:21766:21840	3344042	1	True				
ANR	3348437	CallExpression	"decode_cabac_luma_residual ( h , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 )"		3344042	0					
ANR	3348438	Callee	decode_cabac_luma_residual		3344042	0					
ANR	3348439	Identifier	decode_cabac_luma_residual		3344042	0					
ANR	3348440	ArgumentList	h		3344042	1					
ANR	3348441	Argument	h		3344042	0					
ANR	3348442	Identifier	h		3344042	0					
ANR	3348443	Argument	scan		3344042	1					
ANR	3348444	Identifier	scan		3344042	0					
ANR	3348445	Argument	scan8x8		3344042	2					
ANR	3348446	Identifier	scan8x8		3344042	0					
ANR	3348447	Argument	pixel_shift		3344042	3					
ANR	3348448	Identifier	pixel_shift		3344042	0					
ANR	3348449	Argument	mb_type		3344042	4					
ANR	3348450	Identifier	mb_type		3344042	0					
ANR	3348451	Argument	cbp		3344042	5					
ANR	3348452	Identifier	cbp		3344042	0					
ANR	3348453	Argument	2		3344042	6					
ANR	3348454	PrimaryExpression	2		3344042	0					
ANR	3348455	ElseStatement	else		3344042	0					
ANR	3348456	IfStatement	if ( CHROMA422 )		3344042	0					
ANR	3348457	Condition	CHROMA422	968:19:21862:21870	3344042	0	True				
ANR	3348458	Identifier	CHROMA422		3344042	0					
ANR	3348459	CompoundStatement		968:30:21828:21828	3344042	1					
ANR	3348460	IfStatement	if ( cbp & 0x30 )		3344042	0					
ANR	3348461	Condition	cbp & 0x30	970:16:21892:21899	3344042	0	True				
ANR	3348462	BitAndExpression	cbp & 0x30		3344042	0		&			
ANR	3348463	Identifier	cbp		3344042	0					
ANR	3348464	PrimaryExpression	0x30		3344042	1					
ANR	3348465	CompoundStatement		972:16:21876:21881	3344042	1					
ANR	3348466	IdentifierDeclStatement	int c ;	972:16:21921:21926	3344042	0	True				
ANR	3348467	IdentifierDecl	c		3344042	0					
ANR	3348468	IdentifierDeclType	int		3344042	0					
ANR	3348469	Identifier	c		3344042	1					
ANR	3348470	ForStatement	for ( c = 0 ; c < 2 ; c ++ )		3344042	1					
ANR	3348471	ForInit	c = 0 ;	974:21:21950:21955	3344042	0	True				
ANR	3348472	AssignmentExpression	c = 0		3344042	0		=			
ANR	3348473	Identifier	c		3344042	0					
ANR	3348474	PrimaryExpression	0		3344042	1					
ANR	3348475	Condition	c < 2	974:28:21957:21961	3344042	1	True				
ANR	3348476	RelationalExpression	c < 2		3344042	0		<			
ANR	3348477	Identifier	c		3344042	0					
ANR	3348478	PrimaryExpression	2		3344042	1					
ANR	3348479	PostIncDecOperationExpression	c ++	974:35:21964:21966	3344042	2	True				
ANR	3348480	Identifier	c		3344042	0					
ANR	3348481	IncDec	++		3344042	1					
ANR	3348482	CompoundStatement		974:41:21925:21925	3344042	3					
ANR	3348483	ExpressionStatement	"decode_cabac_residual_dc_422 ( h , h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift ) , 3 , CHROMA_DC_BLOCK_INDEX + c , chroma422_dc_scan , 8 )"	978:20:22070:22295	3344042	0	True				
ANR	3348484	CallExpression	"decode_cabac_residual_dc_422 ( h , h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift ) , 3 , CHROMA_DC_BLOCK_INDEX + c , chroma422_dc_scan , 8 )"		3344042	0					
ANR	3348485	Callee	decode_cabac_residual_dc_422		3344042	0					
ANR	3348486	Identifier	decode_cabac_residual_dc_422		3344042	0					
ANR	3348487	ArgumentList	h		3344042	1					
ANR	3348488	Argument	h		3344042	0					
ANR	3348489	Identifier	h		3344042	0					
ANR	3348490	Argument	h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift )		3344042	1					
ANR	3348491	AdditiveExpression	h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift )		3344042	0		+			
ANR	3348492	PtrMemberAccess	h -> mb		3344042	0					
ANR	3348493	Identifier	h		3344042	0					
ANR	3348494	Identifier	mb		3344042	1					
ANR	3348495	ShiftExpression	( 256 + 16 * 16 * c ) << pixel_shift		3344042	1		<<			
ANR	3348496	AdditiveExpression	256 + 16 * 16 * c		3344042	0		+			
ANR	3348497	PrimaryExpression	256		3344042	0					
ANR	3348498	MultiplicativeExpression	16 * 16 * c		3344042	1		*			
ANR	3348499	PrimaryExpression	16		3344042	0					
ANR	3348500	MultiplicativeExpression	16 * c		3344042	1		*			
ANR	3348501	PrimaryExpression	16		3344042	0					
ANR	3348502	Identifier	c		3344042	1					
ANR	3348503	Identifier	pixel_shift		3344042	1					
ANR	3348504	Argument	3		3344042	2					
ANR	3348505	PrimaryExpression	3		3344042	0					
ANR	3348506	Argument	CHROMA_DC_BLOCK_INDEX + c		3344042	3					
ANR	3348507	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + c		3344042	0		+			
ANR	3348508	Identifier	CHROMA_DC_BLOCK_INDEX		3344042	0					
ANR	3348509	Identifier	c		3344042	1					
ANR	3348510	Argument	chroma422_dc_scan		3344042	4					
ANR	3348511	Identifier	chroma422_dc_scan		3344042	0					
ANR	3348512	Argument	8		3344042	5					
ANR	3348513	PrimaryExpression	8		3344042	0					
ANR	3348514	IfStatement	if ( cbp & 0x20 )		3344042	1					
ANR	3348515	Condition	cbp & 0x20	990:16:22350:22357	3344042	0	True				
ANR	3348516	BitAndExpression	cbp & 0x20		3344042	0		&			
ANR	3348517	Identifier	cbp		3344042	0					
ANR	3348518	PrimaryExpression	0x20		3344042	1					
ANR	3348519	CompoundStatement		992:16:22335:22349	3344042	1					
ANR	3348520	IdentifierDeclStatement	"int c , i , i8x8 ;"	992:16:22380:22394	3344042	0	True				
ANR	3348521	IdentifierDecl	c		3344042	0					
ANR	3348522	IdentifierDeclType	int		3344042	0					
ANR	3348523	Identifier	c		3344042	1					
ANR	3348524	IdentifierDecl	i		3344042	1					
ANR	3348525	IdentifierDeclType	int		3344042	0					
ANR	3348526	Identifier	i		3344042	1					
ANR	3348527	IdentifierDecl	i8x8		3344042	2					
ANR	3348528	IdentifierDeclType	int		3344042	0					
ANR	3348529	Identifier	i8x8		3344042	1					
ANR	3348530	ForStatement	for ( c = 0 ; c < 2 ; c ++ )		3344042	1					
ANR	3348531	ForInit	c = 0 ;	994:21:22418:22423	3344042	0	True				
ANR	3348532	AssignmentExpression	c = 0		3344042	0		=			
ANR	3348533	Identifier	c		3344042	0					
ANR	3348534	PrimaryExpression	0		3344042	1					
ANR	3348535	Condition	c < 2	994:28:22425:22429	3344042	1	True				
ANR	3348536	RelationalExpression	c < 2		3344042	0		<			
ANR	3348537	Identifier	c		3344042	0					
ANR	3348538	PrimaryExpression	2		3344042	1					
ANR	3348539	PostIncDecOperationExpression	c ++	994:35:22432:22434	3344042	2	True				
ANR	3348540	Identifier	c		3344042	0					
ANR	3348541	IncDec	++		3344042	1					
ANR	3348542	CompoundStatement		996:20:22416:22469	3344042	3					
ANR	3348543	IdentifierDeclStatement	DCTELEM * mb = h -> mb + ( 16 * ( 16 + 16 * c ) << pixel_shift ) ;	996:20:22461:22514	3344042	0	True				
ANR	3348544	IdentifierDecl	* mb = h -> mb + ( 16 * ( 16 + 16 * c ) << pixel_shift )		3344042	0					
ANR	3348545	IdentifierDeclType	DCTELEM *		3344042	0					
ANR	3348546	Identifier	mb		3344042	1					
ANR	3348547	AssignmentExpression	* mb = h -> mb + ( 16 * ( 16 + 16 * c ) << pixel_shift )		3344042	2		=			
ANR	3348548	Identifier	mb		3344042	0					
ANR	3348549	AdditiveExpression	h -> mb + ( 16 * ( 16 + 16 * c ) << pixel_shift )		3344042	1		+			
ANR	3348550	PtrMemberAccess	h -> mb		3344042	0					
ANR	3348551	Identifier	h		3344042	0					
ANR	3348552	Identifier	mb		3344042	1					
ANR	3348553	ShiftExpression	16 * ( 16 + 16 * c ) << pixel_shift		3344042	1		<<			
ANR	3348554	MultiplicativeExpression	16 * ( 16 + 16 * c )		3344042	0		*			
ANR	3348555	PrimaryExpression	16		3344042	0					
ANR	3348556	AdditiveExpression	16 + 16 * c		3344042	1		+			
ANR	3348557	PrimaryExpression	16		3344042	0					
ANR	3348558	MultiplicativeExpression	16 * c		3344042	1		*			
ANR	3348559	PrimaryExpression	16		3344042	0					
ANR	3348560	Identifier	c		3344042	1					
ANR	3348561	Identifier	pixel_shift		3344042	1					
ANR	3348562	ExpressionStatement	qmul = h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]	998:20:22537:22611	3344042	1	True				
ANR	3348563	AssignmentExpression	qmul = h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]		3344042	0		=			
ANR	3348564	Identifier	qmul		3344042	0					
ANR	3348565	ArrayIndexing	h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]		3344042	1					
ANR	3348566	ArrayIndexing	h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ]		3344042	0					
ANR	3348567	PtrMemberAccess	h -> dequant4_coeff		3344042	0					
ANR	3348568	Identifier	h		3344042	0					
ANR	3348569	Identifier	dequant4_coeff		3344042	1					
ANR	3348570	AdditiveExpression	c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3344042	1		+			
ANR	3348571	Identifier	c		3344042	0					
ANR	3348572	AdditiveExpression	1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3344042	1		+			
ANR	3348573	PrimaryExpression	1		3344042	0					
ANR	3348574	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		3344042	1					
ANR	3348575	Condition	IS_INTRA ( mb_type )		3344042	0					
ANR	3348576	CallExpression	IS_INTRA ( mb_type )		3344042	0					
ANR	3348577	Callee	IS_INTRA		3344042	0					
ANR	3348578	Identifier	IS_INTRA		3344042	0					
ANR	3348579	ArgumentList	mb_type		3344042	1					
ANR	3348580	Argument	mb_type		3344042	0					
ANR	3348581	Identifier	mb_type		3344042	0					
ANR	3348582	PrimaryExpression	0		3344042	1					
ANR	3348583	PrimaryExpression	3		3344042	2					
ANR	3348584	ArrayIndexing	h -> chroma_qp [ c ]		3344042	1					
ANR	3348585	PtrMemberAccess	h -> chroma_qp		3344042	0					
ANR	3348586	Identifier	h		3344042	0					
ANR	3348587	Identifier	chroma_qp		3344042	1					
ANR	3348588	Identifier	c		3344042	1					
ANR	3348589	ForStatement	for ( i8x8 = 0 ; i8x8 < 2 ; i8x8 ++ )		3344042	2					
ANR	3348590	ForInit	i8x8 = 0 ;	1000:25:22639:22647	3344042	0	True				
ANR	3348591	AssignmentExpression	i8x8 = 0		3344042	0		=			
ANR	3348592	Identifier	i8x8		3344042	0					
ANR	3348593	PrimaryExpression	0		3344042	1					
ANR	3348594	Condition	i8x8 < 2	1000:35:22649:22656	3344042	1	True				
ANR	3348595	RelationalExpression	i8x8 < 2		3344042	0		<			
ANR	3348596	Identifier	i8x8		3344042	0					
ANR	3348597	PrimaryExpression	2		3344042	1					
ANR	3348598	PostIncDecOperationExpression	i8x8 ++	1000:45:22659:22664	3344042	2	True				
ANR	3348599	Identifier	i8x8		3344042	0					
ANR	3348600	IncDec	++		3344042	1					
ANR	3348601	CompoundStatement		1000:53:22622:22622	3344042	3					
ANR	3348602	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	0					
ANR	3348603	ForInit	i = 0 ;	1002:29:22699:22704	3344042	0	True				
ANR	3348604	AssignmentExpression	i = 0		3344042	0		=			
ANR	3348605	Identifier	i		3344042	0					
ANR	3348606	PrimaryExpression	0		3344042	1					
ANR	3348607	Condition	i < 4	1002:36:22706:22710	3344042	1	True				
ANR	3348608	RelationalExpression	i < 4		3344042	0		<			
ANR	3348609	Identifier	i		3344042	0					
ANR	3348610	PrimaryExpression	4		3344042	1					
ANR	3348611	PostIncDecOperationExpression	i ++	1002:43:22713:22715	3344042	2	True				
ANR	3348612	Identifier	i		3344042	0					
ANR	3348613	IncDec	++		3344042	1					
ANR	3348614	CompoundStatement		1004:28:22704:22746	3344042	3					
ANR	3348615	IdentifierDeclStatement	const int index = 16 + 16 * c + 8 * i8x8 + i ;	1004:28:22749:22791	3344042	0	True				
ANR	3348616	IdentifierDecl	index = 16 + 16 * c + 8 * i8x8 + i		3344042	0					
ANR	3348617	IdentifierDeclType	const int		3344042	0					
ANR	3348618	Identifier	index		3344042	1					
ANR	3348619	AssignmentExpression	index = 16 + 16 * c + 8 * i8x8 + i		3344042	2		=			
ANR	3348620	Identifier	index		3344042	0					
ANR	3348621	AdditiveExpression	16 + 16 * c + 8 * i8x8 + i		3344042	1		+			
ANR	3348622	PrimaryExpression	16		3344042	0					
ANR	3348623	AdditiveExpression	16 * c + 8 * i8x8 + i		3344042	1		+			
ANR	3348624	MultiplicativeExpression	16 * c		3344042	0		*			
ANR	3348625	PrimaryExpression	16		3344042	0					
ANR	3348626	Identifier	c		3344042	1					
ANR	3348627	AdditiveExpression	8 * i8x8 + i		3344042	1		+			
ANR	3348628	MultiplicativeExpression	8 * i8x8		3344042	0		*			
ANR	3348629	PrimaryExpression	8		3344042	0					
ANR	3348630	Identifier	i8x8		3344042	1					
ANR	3348631	Identifier	i		3344042	1					
ANR	3348632	ExpressionStatement	"decode_cabac_residual_nondc ( h , mb , 4 , index , scan + 1 , qmul , 15 )"	1008:28:22920:22984	3344042	1	True				
ANR	3348633	CallExpression	"decode_cabac_residual_nondc ( h , mb , 4 , index , scan + 1 , qmul , 15 )"		3344042	0					
ANR	3348634	Callee	decode_cabac_residual_nondc		3344042	0					
ANR	3348635	Identifier	decode_cabac_residual_nondc		3344042	0					
ANR	3348636	ArgumentList	h		3344042	1					
ANR	3348637	Argument	h		3344042	0					
ANR	3348638	Identifier	h		3344042	0					
ANR	3348639	Argument	mb		3344042	1					
ANR	3348640	Identifier	mb		3344042	0					
ANR	3348641	Argument	4		3344042	2					
ANR	3348642	PrimaryExpression	4		3344042	0					
ANR	3348643	Argument	index		3344042	3					
ANR	3348644	Identifier	index		3344042	0					
ANR	3348645	Argument	scan + 1		3344042	4					
ANR	3348646	AdditiveExpression	scan + 1		3344042	0		+			
ANR	3348647	Identifier	scan		3344042	0					
ANR	3348648	PrimaryExpression	1		3344042	1					
ANR	3348649	Argument	qmul		3344042	5					
ANR	3348650	Identifier	qmul		3344042	0					
ANR	3348651	Argument	15		3344042	6					
ANR	3348652	PrimaryExpression	15		3344042	0					
ANR	3348653	ExpressionStatement	mb += 16 << pixel_shift	1010:28:23015:23036	3344042	2	True				
ANR	3348654	AssignmentExpression	mb += 16 << pixel_shift		3344042	0		+=			
ANR	3348655	Identifier	mb		3344042	0					
ANR	3348656	ShiftExpression	16 << pixel_shift		3344042	1		<<			
ANR	3348657	PrimaryExpression	16		3344042	0					
ANR	3348658	Identifier	pixel_shift		3344042	1					
ANR	3348659	ElseStatement	else		3344042	0					
ANR	3348660	CompoundStatement		1018:19:23082:23082	3344042	0					
ANR	3348661	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	1020:16:23146:23212	3344042	0	True				
ANR	3348662	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348663	Callee	fill_rectangle		3344042	0					
ANR	3348664	Identifier	fill_rectangle		3344042	0					
ANR	3348665	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348666	Argument	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348667	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348668	UnaryOperator	&		3344042	0					
ANR	3348669	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348670	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348671	Identifier	h		3344042	0					
ANR	3348672	Identifier	non_zero_count_cache		3344042	1					
ANR	3348673	ArrayIndexing	scan8 [ 16 ]		3344042	1					
ANR	3348674	Identifier	scan8		3344042	0					
ANR	3348675	PrimaryExpression	16		3344042	1					
ANR	3348676	Argument	4		3344042	1					
ANR	3348677	PrimaryExpression	4		3344042	0					
ANR	3348678	Argument	4		3344042	2					
ANR	3348679	PrimaryExpression	4		3344042	0					
ANR	3348680	Argument	8		3344042	3					
ANR	3348681	PrimaryExpression	8		3344042	0					
ANR	3348682	Argument	0		3344042	4					
ANR	3348683	PrimaryExpression	0		3344042	0					
ANR	3348684	Argument	1		3344042	5					
ANR	3348685	PrimaryExpression	1		3344042	0					
ANR	3348686	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"	1022:16:23231:23297	3344042	1	True				
ANR	3348687	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348688	Callee	fill_rectangle		3344042	0					
ANR	3348689	Identifier	fill_rectangle		3344042	0					
ANR	3348690	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348691	Argument	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348692	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348693	UnaryOperator	&		3344042	0					
ANR	3348694	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348695	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348696	Identifier	h		3344042	0					
ANR	3348697	Identifier	non_zero_count_cache		3344042	1					
ANR	3348698	ArrayIndexing	scan8 [ 32 ]		3344042	1					
ANR	3348699	Identifier	scan8		3344042	0					
ANR	3348700	PrimaryExpression	32		3344042	1					
ANR	3348701	Argument	4		3344042	1					
ANR	3348702	PrimaryExpression	4		3344042	0					
ANR	3348703	Argument	4		3344042	2					
ANR	3348704	PrimaryExpression	4		3344042	0					
ANR	3348705	Argument	8		3344042	3					
ANR	3348706	PrimaryExpression	8		3344042	0					
ANR	3348707	Argument	0		3344042	4					
ANR	3348708	PrimaryExpression	0		3344042	0					
ANR	3348709	Argument	1		3344042	5					
ANR	3348710	PrimaryExpression	1		3344042	0					
ANR	3348711	ElseStatement	else		3344042	0					
ANR	3348712	CompoundStatement		1026:28:23298:23298	3344042	0					
ANR	3348713	IfStatement	if ( cbp & 0x30 )		3344042	0					
ANR	3348714	Condition	cbp & 0x30	1028:16:23362:23369	3344042	0	True				
ANR	3348715	BitAndExpression	cbp & 0x30		3344042	0		&			
ANR	3348716	Identifier	cbp		3344042	0					
ANR	3348717	PrimaryExpression	0x30		3344042	1					
ANR	3348718	CompoundStatement		1030:16:23346:23351	3344042	1					
ANR	3348719	IdentifierDeclStatement	int c ;	1030:16:23391:23396	3344042	0	True				
ANR	3348720	IdentifierDecl	c		3344042	0					
ANR	3348721	IdentifierDeclType	int		3344042	0					
ANR	3348722	Identifier	c		3344042	1					
ANR	3348723	ForStatement	for ( c = 0 ; c < 2 ; c ++ )		3344042	1					
ANR	3348724	ForInit	c = 0 ;	1032:21:23420:23425	3344042	0	True				
ANR	3348725	AssignmentExpression	c = 0		3344042	0		=			
ANR	3348726	Identifier	c		3344042	0					
ANR	3348727	PrimaryExpression	0		3344042	1					
ANR	3348728	Condition	c < 2	1032:28:23427:23431	3344042	1	True				
ANR	3348729	RelationalExpression	c < 2		3344042	0		<			
ANR	3348730	Identifier	c		3344042	0					
ANR	3348731	PrimaryExpression	2		3344042	1					
ANR	3348732	PostIncDecOperationExpression	c ++	1032:35:23434:23436	3344042	2	True				
ANR	3348733	Identifier	c		3344042	0					
ANR	3348734	IncDec	++		3344042	1					
ANR	3348735	CompoundStatement		1032:41:23395:23395	3344042	3					
ANR	3348736	ExpressionStatement	"decode_cabac_residual_dc ( h , h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift ) , 3 , CHROMA_DC_BLOCK_INDEX + c , chroma_dc_scan , 4 )"	1036:20:23540:23656	3344042	0	True				
ANR	3348737	CallExpression	"decode_cabac_residual_dc ( h , h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift ) , 3 , CHROMA_DC_BLOCK_INDEX + c , chroma_dc_scan , 4 )"		3344042	0					
ANR	3348738	Callee	decode_cabac_residual_dc		3344042	0					
ANR	3348739	Identifier	decode_cabac_residual_dc		3344042	0					
ANR	3348740	ArgumentList	h		3344042	1					
ANR	3348741	Argument	h		3344042	0					
ANR	3348742	Identifier	h		3344042	0					
ANR	3348743	Argument	h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift )		3344042	1					
ANR	3348744	AdditiveExpression	h -> mb + ( ( 256 + 16 * 16 * c ) << pixel_shift )		3344042	0		+			
ANR	3348745	PtrMemberAccess	h -> mb		3344042	0					
ANR	3348746	Identifier	h		3344042	0					
ANR	3348747	Identifier	mb		3344042	1					
ANR	3348748	ShiftExpression	( 256 + 16 * 16 * c ) << pixel_shift		3344042	1		<<			
ANR	3348749	AdditiveExpression	256 + 16 * 16 * c		3344042	0		+			
ANR	3348750	PrimaryExpression	256		3344042	0					
ANR	3348751	MultiplicativeExpression	16 * 16 * c		3344042	1		*			
ANR	3348752	PrimaryExpression	16		3344042	0					
ANR	3348753	MultiplicativeExpression	16 * c		3344042	1		*			
ANR	3348754	PrimaryExpression	16		3344042	0					
ANR	3348755	Identifier	c		3344042	1					
ANR	3348756	Identifier	pixel_shift		3344042	1					
ANR	3348757	Argument	3		3344042	2					
ANR	3348758	PrimaryExpression	3		3344042	0					
ANR	3348759	Argument	CHROMA_DC_BLOCK_INDEX + c		3344042	3					
ANR	3348760	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + c		3344042	0		+			
ANR	3348761	Identifier	CHROMA_DC_BLOCK_INDEX		3344042	0					
ANR	3348762	Identifier	c		3344042	1					
ANR	3348763	Argument	chroma_dc_scan		3344042	4					
ANR	3348764	Identifier	chroma_dc_scan		3344042	0					
ANR	3348765	Argument	4		3344042	5					
ANR	3348766	PrimaryExpression	4		3344042	0					
ANR	3348767	IfStatement	if ( cbp & 0x20 )		3344042	1					
ANR	3348768	Condition	cbp & 0x20	1044:16:23711:23718	3344042	0	True				
ANR	3348769	BitAndExpression	cbp & 0x20		3344042	0		&			
ANR	3348770	Identifier	cbp		3344042	0					
ANR	3348771	PrimaryExpression	0x20		3344042	1					
ANR	3348772	CompoundStatement		1046:16:23696:23704	3344042	1					
ANR	3348773	IdentifierDeclStatement	"int c , i ;"	1046:16:23741:23749	3344042	0	True				
ANR	3348774	IdentifierDecl	c		3344042	0					
ANR	3348775	IdentifierDeclType	int		3344042	0					
ANR	3348776	Identifier	c		3344042	1					
ANR	3348777	IdentifierDecl	i		3344042	1					
ANR	3348778	IdentifierDeclType	int		3344042	0					
ANR	3348779	Identifier	i		3344042	1					
ANR	3348780	ForStatement	for ( c = 0 ; c < 2 ; c ++ )		3344042	1					
ANR	3348781	ForInit	c = 0 ;	1048:21:23773:23778	3344042	0	True				
ANR	3348782	AssignmentExpression	c = 0		3344042	0		=			
ANR	3348783	Identifier	c		3344042	0					
ANR	3348784	PrimaryExpression	0		3344042	1					
ANR	3348785	Condition	c < 2	1048:28:23780:23784	3344042	1	True				
ANR	3348786	RelationalExpression	c < 2		3344042	0		<			
ANR	3348787	Identifier	c		3344042	0					
ANR	3348788	PrimaryExpression	2		3344042	1					
ANR	3348789	PostIncDecOperationExpression	c ++	1048:35:23787:23789	3344042	2	True				
ANR	3348790	Identifier	c		3344042	0					
ANR	3348791	IncDec	++		3344042	1					
ANR	3348792	CompoundStatement		1048:41:23748:23748	3344042	3					
ANR	3348793	ExpressionStatement	qmul = h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]	1050:20:23816:23890	3344042	0	True				
ANR	3348794	AssignmentExpression	qmul = h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]		3344042	0		=			
ANR	3348795	Identifier	qmul		3344042	0					
ANR	3348796	ArrayIndexing	h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ h -> chroma_qp [ c ] ]		3344042	1					
ANR	3348797	ArrayIndexing	h -> dequant4_coeff [ c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ]		3344042	0					
ANR	3348798	PtrMemberAccess	h -> dequant4_coeff		3344042	0					
ANR	3348799	Identifier	h		3344042	0					
ANR	3348800	Identifier	dequant4_coeff		3344042	1					
ANR	3348801	AdditiveExpression	c + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3344042	1		+			
ANR	3348802	Identifier	c		3344042	0					
ANR	3348803	AdditiveExpression	1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3344042	1		+			
ANR	3348804	PrimaryExpression	1		3344042	0					
ANR	3348805	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		3344042	1					
ANR	3348806	Condition	IS_INTRA ( mb_type )		3344042	0					
ANR	3348807	CallExpression	IS_INTRA ( mb_type )		3344042	0					
ANR	3348808	Callee	IS_INTRA		3344042	0					
ANR	3348809	Identifier	IS_INTRA		3344042	0					
ANR	3348810	ArgumentList	mb_type		3344042	1					
ANR	3348811	Argument	mb_type		3344042	0					
ANR	3348812	Identifier	mb_type		3344042	0					
ANR	3348813	PrimaryExpression	0		3344042	1					
ANR	3348814	PrimaryExpression	3		3344042	2					
ANR	3348815	ArrayIndexing	h -> chroma_qp [ c ]		3344042	1					
ANR	3348816	PtrMemberAccess	h -> chroma_qp		3344042	0					
ANR	3348817	Identifier	h		3344042	0					
ANR	3348818	Identifier	chroma_qp		3344042	1					
ANR	3348819	Identifier	c		3344042	1					
ANR	3348820	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3344042	1					
ANR	3348821	ForInit	i = 0 ;	1052:25:23918:23923	3344042	0	True				
ANR	3348822	AssignmentExpression	i = 0		3344042	0		=			
ANR	3348823	Identifier	i		3344042	0					
ANR	3348824	PrimaryExpression	0		3344042	1					
ANR	3348825	Condition	i < 4	1052:32:23925:23929	3344042	1	True				
ANR	3348826	RelationalExpression	i < 4		3344042	0		<			
ANR	3348827	Identifier	i		3344042	0					
ANR	3348828	PrimaryExpression	4		3344042	1					
ANR	3348829	PostIncDecOperationExpression	i ++	1052:39:23932:23934	3344042	2	True				
ANR	3348830	Identifier	i		3344042	0					
ANR	3348831	IncDec	++		3344042	1					
ANR	3348832	CompoundStatement		1054:24:23920:23953	3344042	3					
ANR	3348833	IdentifierDeclStatement	const int index = 16 + 16 * c + i ;	1054:24:23965:23998	3344042	0	True				
ANR	3348834	IdentifierDecl	index = 16 + 16 * c + i		3344042	0					
ANR	3348835	IdentifierDeclType	const int		3344042	0					
ANR	3348836	Identifier	index		3344042	1					
ANR	3348837	AssignmentExpression	index = 16 + 16 * c + i		3344042	2		=			
ANR	3348838	Identifier	index		3344042	0					
ANR	3348839	AdditiveExpression	16 + 16 * c + i		3344042	1		+			
ANR	3348840	PrimaryExpression	16		3344042	0					
ANR	3348841	AdditiveExpression	16 * c + i		3344042	1		+			
ANR	3348842	MultiplicativeExpression	16 * c		3344042	0		*			
ANR	3348843	PrimaryExpression	16		3344042	0					
ANR	3348844	Identifier	c		3344042	1					
ANR	3348845	Identifier	i		3344042	1					
ANR	3348846	ExpressionStatement	"decode_cabac_residual_nondc ( h , h -> mb + ( 16 * index << pixel_shift ) , 4 , index , scan + 1 , qmul , 15 )"	1058:24:24121:24216	3344042	1	True				
ANR	3348847	CallExpression	"decode_cabac_residual_nondc ( h , h -> mb + ( 16 * index << pixel_shift ) , 4 , index , scan + 1 , qmul , 15 )"		3344042	0					
ANR	3348848	Callee	decode_cabac_residual_nondc		3344042	0					
ANR	3348849	Identifier	decode_cabac_residual_nondc		3344042	0					
ANR	3348850	ArgumentList	h		3344042	1					
ANR	3348851	Argument	h		3344042	0					
ANR	3348852	Identifier	h		3344042	0					
ANR	3348853	Argument	h -> mb + ( 16 * index << pixel_shift )		3344042	1					
ANR	3348854	AdditiveExpression	h -> mb + ( 16 * index << pixel_shift )		3344042	0		+			
ANR	3348855	PtrMemberAccess	h -> mb		3344042	0					
ANR	3348856	Identifier	h		3344042	0					
ANR	3348857	Identifier	mb		3344042	1					
ANR	3348858	ShiftExpression	16 * index << pixel_shift		3344042	1		<<			
ANR	3348859	MultiplicativeExpression	16 * index		3344042	0		*			
ANR	3348860	PrimaryExpression	16		3344042	0					
ANR	3348861	Identifier	index		3344042	1					
ANR	3348862	Identifier	pixel_shift		3344042	1					
ANR	3348863	Argument	4		3344042	2					
ANR	3348864	PrimaryExpression	4		3344042	0					
ANR	3348865	Argument	index		3344042	3					
ANR	3348866	Identifier	index		3344042	0					
ANR	3348867	Argument	scan + 1		3344042	4					
ANR	3348868	AdditiveExpression	scan + 1		3344042	0		+			
ANR	3348869	Identifier	scan		3344042	0					
ANR	3348870	PrimaryExpression	1		3344042	1					
ANR	3348871	Argument	qmul		3344042	5					
ANR	3348872	Identifier	qmul		3344042	0					
ANR	3348873	Argument	15		3344042	6					
ANR	3348874	PrimaryExpression	15		3344042	0					
ANR	3348875	ElseStatement	else		3344042	0					
ANR	3348876	CompoundStatement		1064:19:24235:24235	3344042	0					
ANR	3348877	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	1066:16:24299:24365	3344042	0	True				
ANR	3348878	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348879	Callee	fill_rectangle		3344042	0					
ANR	3348880	Identifier	fill_rectangle		3344042	0					
ANR	3348881	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348882	Argument	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348883	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348884	UnaryOperator	&		3344042	0					
ANR	3348885	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348886	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348887	Identifier	h		3344042	0					
ANR	3348888	Identifier	non_zero_count_cache		3344042	1					
ANR	3348889	ArrayIndexing	scan8 [ 16 ]		3344042	1					
ANR	3348890	Identifier	scan8		3344042	0					
ANR	3348891	PrimaryExpression	16		3344042	1					
ANR	3348892	Argument	4		3344042	1					
ANR	3348893	PrimaryExpression	4		3344042	0					
ANR	3348894	Argument	4		3344042	2					
ANR	3348895	PrimaryExpression	4		3344042	0					
ANR	3348896	Argument	8		3344042	3					
ANR	3348897	PrimaryExpression	8		3344042	0					
ANR	3348898	Argument	0		3344042	4					
ANR	3348899	PrimaryExpression	0		3344042	0					
ANR	3348900	Argument	1		3344042	5					
ANR	3348901	PrimaryExpression	1		3344042	0					
ANR	3348902	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"	1068:16:24384:24450	3344042	1	True				
ANR	3348903	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348904	Callee	fill_rectangle		3344042	0					
ANR	3348905	Identifier	fill_rectangle		3344042	0					
ANR	3348906	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348907	Argument	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348908	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348909	UnaryOperator	&		3344042	0					
ANR	3348910	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348911	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348912	Identifier	h		3344042	0					
ANR	3348913	Identifier	non_zero_count_cache		3344042	1					
ANR	3348914	ArrayIndexing	scan8 [ 32 ]		3344042	1					
ANR	3348915	Identifier	scan8		3344042	0					
ANR	3348916	PrimaryExpression	32		3344042	1					
ANR	3348917	Argument	4		3344042	1					
ANR	3348918	PrimaryExpression	4		3344042	0					
ANR	3348919	Argument	4		3344042	2					
ANR	3348920	PrimaryExpression	4		3344042	0					
ANR	3348921	Argument	8		3344042	3					
ANR	3348922	PrimaryExpression	8		3344042	0					
ANR	3348923	Argument	0		3344042	4					
ANR	3348924	PrimaryExpression	0		3344042	0					
ANR	3348925	Argument	1		3344042	5					
ANR	3348926	PrimaryExpression	1		3344042	0					
ANR	3348927	ElseStatement	else		3344042	0					
ANR	3348928	CompoundStatement		1074:11:24445:24445	3344042	0					
ANR	3348929	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"	1076:8:24501:24567	3344042	0	True				
ANR	3348930	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348931	Callee	fill_rectangle		3344042	0					
ANR	3348932	Identifier	fill_rectangle		3344042	0					
ANR	3348933	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3344042	1					
ANR	3348934	Argument	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3344042	0					
ANR	3348935	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 0 ] ]		3344042	0					
ANR	3348936	UnaryOperator	&		3344042	0					
ANR	3348937	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 0 ] ]		3344042	1					
ANR	3348938	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348939	Identifier	h		3344042	0					
ANR	3348940	Identifier	non_zero_count_cache		3344042	1					
ANR	3348941	ArrayIndexing	scan8 [ 0 ]		3344042	1					
ANR	3348942	Identifier	scan8		3344042	0					
ANR	3348943	PrimaryExpression	0		3344042	1					
ANR	3348944	Argument	4		3344042	1					
ANR	3348945	PrimaryExpression	4		3344042	0					
ANR	3348946	Argument	4		3344042	2					
ANR	3348947	PrimaryExpression	4		3344042	0					
ANR	3348948	Argument	8		3344042	3					
ANR	3348949	PrimaryExpression	8		3344042	0					
ANR	3348950	Argument	0		3344042	4					
ANR	3348951	PrimaryExpression	0		3344042	0					
ANR	3348952	Argument	1		3344042	5					
ANR	3348953	PrimaryExpression	1		3344042	0					
ANR	3348954	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	1078:8:24578:24644	3344042	1	True				
ANR	3348955	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348956	Callee	fill_rectangle		3344042	0					
ANR	3348957	Identifier	fill_rectangle		3344042	0					
ANR	3348958	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348959	Argument	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348960	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	0					
ANR	3348961	UnaryOperator	&		3344042	0					
ANR	3348962	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 16 ] ]		3344042	1					
ANR	3348963	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348964	Identifier	h		3344042	0					
ANR	3348965	Identifier	non_zero_count_cache		3344042	1					
ANR	3348966	ArrayIndexing	scan8 [ 16 ]		3344042	1					
ANR	3348967	Identifier	scan8		3344042	0					
ANR	3348968	PrimaryExpression	16		3344042	1					
ANR	3348969	Argument	4		3344042	1					
ANR	3348970	PrimaryExpression	4		3344042	0					
ANR	3348971	Argument	4		3344042	2					
ANR	3348972	PrimaryExpression	4		3344042	0					
ANR	3348973	Argument	8		3344042	3					
ANR	3348974	PrimaryExpression	8		3344042	0					
ANR	3348975	Argument	0		3344042	4					
ANR	3348976	PrimaryExpression	0		3344042	0					
ANR	3348977	Argument	1		3344042	5					
ANR	3348978	PrimaryExpression	1		3344042	0					
ANR	3348979	ExpressionStatement	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"	1080:8:24655:24721	3344042	2	True				
ANR	3348980	CallExpression	"fill_rectangle ( & h -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"		3344042	0					
ANR	3348981	Callee	fill_rectangle		3344042	0					
ANR	3348982	Identifier	fill_rectangle		3344042	0					
ANR	3348983	ArgumentList	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348984	Argument	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348985	UnaryOperationExpression	& h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	0					
ANR	3348986	UnaryOperator	&		3344042	0					
ANR	3348987	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 32 ] ]		3344042	1					
ANR	3348988	PtrMemberAccess	h -> non_zero_count_cache		3344042	0					
ANR	3348989	Identifier	h		3344042	0					
ANR	3348990	Identifier	non_zero_count_cache		3344042	1					
ANR	3348991	ArrayIndexing	scan8 [ 32 ]		3344042	1					
ANR	3348992	Identifier	scan8		3344042	0					
ANR	3348993	PrimaryExpression	32		3344042	1					
ANR	3348994	Argument	4		3344042	1					
ANR	3348995	PrimaryExpression	4		3344042	0					
ANR	3348996	Argument	4		3344042	2					
ANR	3348997	PrimaryExpression	4		3344042	0					
ANR	3348998	Argument	8		3344042	3					
ANR	3348999	PrimaryExpression	8		3344042	0					
ANR	3349000	Argument	0		3344042	4					
ANR	3349001	PrimaryExpression	0		3344042	0					
ANR	3349002	Argument	1		3344042	5					
ANR	3349003	PrimaryExpression	1		3344042	0					
ANR	3349004	ExpressionStatement	h -> last_qscale_diff = 0	1082:8:24732:24755	3344042	3	True				
ANR	3349005	AssignmentExpression	h -> last_qscale_diff = 0		3344042	0		=			
ANR	3349006	PtrMemberAccess	h -> last_qscale_diff		3344042	0					
ANR	3349007	Identifier	h		3344042	0					
ANR	3349008	Identifier	last_qscale_diff		3344042	1					
ANR	3349009	PrimaryExpression	0		3344042	1					
ANR	3349010	ExpressionStatement	s -> current_picture . f . qscale_table [ mb_xy ] = s -> qscale	1088:4:24771:24823	3344042	29	True				
ANR	3349011	AssignmentExpression	s -> current_picture . f . qscale_table [ mb_xy ] = s -> qscale		3344042	0		=			
ANR	3349012	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_xy ]		3344042	0					
ANR	3349013	MemberAccess	s -> current_picture . f . qscale_table		3344042	0					
ANR	3349014	MemberAccess	s -> current_picture . f		3344042	0					
ANR	3349015	PtrMemberAccess	s -> current_picture		3344042	0					
ANR	3349016	Identifier	s		3344042	0					
ANR	3349017	Identifier	current_picture		3344042	1					
ANR	3349018	Identifier	f		3344042	1					
ANR	3349019	Identifier	qscale_table		3344042	1					
ANR	3349020	Identifier	mb_xy		3344042	1					
ANR	3349021	PtrMemberAccess	s -> qscale		3344042	1					
ANR	3349022	Identifier	s		3344042	0					
ANR	3349023	Identifier	qscale		3344042	1					
ANR	3349024	ExpressionStatement	write_back_non_zero_count ( h )	1090:4:24830:24858	3344042	30	True				
ANR	3349025	CallExpression	write_back_non_zero_count ( h )		3344042	0					
ANR	3349026	Callee	write_back_non_zero_count		3344042	0					
ANR	3349027	Identifier	write_back_non_zero_count		3344042	0					
ANR	3349028	ArgumentList	h		3344042	1					
ANR	3349029	Argument	h		3344042	0					
ANR	3349030	Identifier	h		3344042	0					
ANR	3349031	IfStatement	if ( MB_MBAFF )		3344042	31					
ANR	3349032	Condition	MB_MBAFF	1094:7:24870:24877	3344042	0	True				
ANR	3349033	Identifier	MB_MBAFF		3344042	0					
ANR	3349034	CompoundStatement		1094:16:24834:24834	3344042	1					
ANR	3349035	ExpressionStatement	h -> ref_count [ 0 ] >>= 1	1096:8:24890:24911	3344042	0	True				
ANR	3349036	AssignmentExpression	h -> ref_count [ 0 ] >>= 1		3344042	0		>>=			
ANR	3349037	ArrayIndexing	h -> ref_count [ 0 ]		3344042	0					
ANR	3349038	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3349039	Identifier	h		3344042	0					
ANR	3349040	Identifier	ref_count		3344042	1					
ANR	3349041	PrimaryExpression	0		3344042	1					
ANR	3349042	PrimaryExpression	1		3344042	1					
ANR	3349043	ExpressionStatement	h -> ref_count [ 1 ] >>= 1	1098:8:24922:24943	3344042	1	True				
ANR	3349044	AssignmentExpression	h -> ref_count [ 1 ] >>= 1		3344042	0		>>=			
ANR	3349045	ArrayIndexing	h -> ref_count [ 1 ]		3344042	0					
ANR	3349046	PtrMemberAccess	h -> ref_count		3344042	0					
ANR	3349047	Identifier	h		3344042	0					
ANR	3349048	Identifier	ref_count		3344042	1					
ANR	3349049	PrimaryExpression	1		3344042	1					
ANR	3349050	PrimaryExpression	1		3344042	1					
ANR	3349051	ReturnStatement	return 0 ;	1104:4:24959:24967	3344042	32	True				
ANR	3349052	PrimaryExpression	0		3344042	0					
ANR	3349053	ReturnType	int		3344042	1					
ANR	3349054	Identifier	ff_h264_decode_mb_cabac		3344042	2					
ANR	3349055	ParameterList	H264Context * h		3344042	3					
ANR	3349056	Parameter	H264Context * h	1:28:28:41	3344042	0	True				
ANR	3349057	ParameterType	H264Context *		3344042	0					
ANR	3349058	Identifier	h		3344042	1					
ANR	3349059	CFGEntryNode	ENTRY		3344042		True				
ANR	3349060	CFGExitNode	EXIT		3344042		True				
ANR	3349061	Symbol	pred_intra_mode		3344042						
ANR	3349062	Symbol	IS_INTRA_PCM		3344042						
ANR	3349063	Symbol	MB_TYPE_16x8		3344042						
ANR	3349064	Symbol	* h -> chroma_pred_mode_table		3344042						
ANR	3349065	Symbol	s -> current_picture		3344042						
ANR	3349066	Symbol	* LTOP		3344042						
ANR	3349067	Symbol	h -> s . avctx		3344042						
ANR	3349068	Symbol	h -> mb		3344042						
ANR	3349069	Symbol	pred		3344042						
ANR	3349070	Symbol	CABAC_BITS		3344042						
ANR	3349071	Symbol	AV_PICTURE_TYPE_SI		3344042						
ANR	3349072	Symbol	h -> zigzag_scan		3344042						
ANR	3349073	Symbol	pred_mode		3344042						
ANR	3349074	Symbol	IS_16X16		3344042						
ANR	3349075	Symbol	nnz_cache		3344042						
ANR	3349076	Symbol	LEFT		3344042						
ANR	3349077	Symbol	h -> pixel_shift		3344042						
ANR	3349078	Symbol	ctx		3344042						
ANR	3349079	Symbol	s -> current_picture . f . qscale_table		3344042						
ANR	3349080	Symbol	& h -> s		3344042						
ANR	3349081	Symbol	pack16to32		3344042						
ANR	3349082	Symbol	h -> next_mb_skipped		3344042						
ANR	3349083	Symbol	i_mb_type_info [ mb_type ] . cbp		3344042						
ANR	3349084	Symbol	* s -> current_picture . f . qscale_table		3344042						
ANR	3349085	Symbol	* h -> left_type		3344042						
ANR	3349086	Symbol	scan		3344042						
ANR	3349087	Symbol	MB_TYPE_SKIP		3344042						
ANR	3349088	Symbol	IS_SUB_4X8		3344042						
ANR	3349089	Symbol	s -> current_picture . f . mb_type		3344042						
ANR	3349090	Symbol	pixel_shift		3344042						
ANR	3349091	Symbol	h -> slice_type		3344042						
ANR	3349092	Symbol	* h -> ref_count		3344042						
ANR	3349093	Symbol	h -> slice_table		3344042						
ANR	3349094	Symbol	h -> neighbor_transform_size		3344042						
ANR	3349095	Symbol	* * h -> ref_cache		3344042						
ANR	3349096	Symbol	h -> cbp_table		3344042						
ANR	3349097	Symbol	h -> left_type		3344042						
ANR	3349098	Symbol	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042						
ANR	3349099	Symbol	get_chroma_qp		3344042						
ANR	3349100	Symbol	decode_cabac_mb_cbp_chroma		3344042						
ANR	3349101	Symbol	c		3344042						
ANR	3349102	Symbol	h -> intra16x16_pred_mode		3344042						
ANR	3349103	Symbol	h -> cabac . bytestream_end		3344042						
ANR	3349104	Symbol	h		3344042						
ANR	3349105	Symbol	i		3344042						
ANR	3349106	Symbol	j		3344042						
ANR	3349107	Symbol	h -> chroma_pred_mode_table		3344042						
ANR	3349108	Symbol	h -> zigzag_scan8x8		3344042						
ANR	3349109	Symbol	s		3344042						
ANR	3349110	Symbol	h -> ref_count		3344042						
ANR	3349111	Symbol	h -> field_scan8x8_q0		3344042						
ANR	3349112	Symbol	h -> slice_num		3344042						
ANR	3349113	Symbol	i_mb_type_info [ mb_type ] . pred_mode		3344042						
ANR	3349114	Symbol	mvd_cache		3344042						
ANR	3349115	Symbol	h -> sps . direct_8x8_inference_flag		3344042						
ANR	3349116	Symbol	i_mb_type_info		3344042						
ANR	3349117	Symbol	decode_chroma		3344042						
ANR	3349118	Symbol	h -> zigzag_scan_q0		3344042						
ANR	3349119	Symbol	* sub_partition_count		3344042						
ANR	3349120	Symbol	h -> list_count		3344042						
ANR	3349121	Symbol	ref		3344042						
ANR	3349122	Symbol	IS_DIR		3344042						
ANR	3349123	Symbol	h -> cabac		3344042						
ANR	3349124	Symbol	h -> mb_mbaff		3344042						
ANR	3349125	Symbol	* b_mb_type_info		3344042						
ANR	3349126	Symbol	* mb_sizes		3344042						
ANR	3349127	Symbol	* * i		3344042						
ANR	3349128	Symbol	* * h		3344042						
ANR	3349129	Symbol	* IS_INTRA		3344042						
ANR	3349130	Symbol	* * h -> chroma_qp		3344042						
ANR	3349131	Symbol	* * c		3344042						
ANR	3349132	Symbol	h -> mb_field_decoding_flag		3344042						
ANR	3349133	Symbol	h -> slice_type_nos		3344042						
ANR	3349134	Symbol	& mb_type		3344042						
ANR	3349135	Symbol	list		3344042						
ANR	3349136	Symbol	MB_TYPE_16x16		3344042						
ANR	3349137	Symbol	pack8to16		3344042						
ANR	3349138	Symbol	decode_cabac_intra_mb_type		3344042						
ANR	3349139	Symbol	p_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042						
ANR	3349140	Symbol	h -> pps		3344042						
ANR	3349141	Symbol	scan8x8		3344042						
ANR	3349142	Symbol	b_mb_type_info		3344042						
ANR	3349143	Symbol	h -> chroma_qp		3344042						
ANR	3349144	Symbol	h -> mvd_cache		3344042						
ANR	3349145	Symbol	s -> mb_stride		3344042						
ANR	3349146	Symbol	IS_INTRA		3344042						
ANR	3349147	Symbol	block_width		3344042						
ANR	3349148	Symbol	chroma422_dc_scan		3344042						
ANR	3349149	Symbol	mb_sizes		3344042						
ANR	3349150	Symbol	h -> cabac . low		3344042						
ANR	3349151	Symbol	h -> ref_cache		3344042						
ANR	3349152	Symbol	b_sub_mb_type_info		3344042						
ANR	3349153	Symbol	* * list		3344042						
ANR	3349154	Symbol	h -> pps . transform_8x8_mode		3344042						
ANR	3349155	Symbol	mb_size		3344042						
ANR	3349156	Symbol	* * index		3344042						
ANR	3349157	Symbol	i_mb_type_info [ mb_type ] . type		3344042						
ANR	3349158	Symbol	LIST_NOT_USED		3344042						
ANR	3349159	Symbol	h -> sps . chroma_format_idc		3344042						
ANR	3349160	Symbol	p_mb_type_info [ mb_type ] . partition_count		3344042						
ANR	3349161	Symbol	* h -> mvd_cache		3344042						
ANR	3349162	Symbol	h -> chroma_pred_mode		3344042						
ANR	3349163	Symbol	b_mb_type_info [ mb_type ] . partition_count		3344042						
ANR	3349164	Symbol	* mvd_cache		3344042						
ANR	3349165	Symbol	* * ref		3344042						
ANR	3349166	Symbol	ff_h264_check_intra4x4_pred_mode		3344042						
ANR	3349167	Symbol	ptr		3344042						
ANR	3349168	Symbol	h -> mb_xy		3344042						
ANR	3349169	Symbol	IS_INTRA16x16		3344042						
ANR	3349170	Symbol	* h -> chroma_qp		3344042						
ANR	3349171	Symbol	* * h -> dequant4_coeff		3344042						
ANR	3349172	Symbol	* mb_xy		3344042						
ANR	3349173	Symbol	DC_128_PRED8x8		3344042						
ANR	3349174	Symbol	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . partition_count		3344042						
ANR	3349175	Symbol	h -> zigzag_scan8x8_q0		3344042						
ANR	3349176	Symbol	* h -> ref_cache		3344042						
ANR	3349177	Symbol	h -> dequant4_coeff		3344042						
ANR	3349178	Symbol	* scan8		3344042						
ANR	3349179	Symbol	* index		3344042						
ANR	3349180	Symbol	CABAC		3344042						
ANR	3349181	Symbol	* h -> cbp_table		3344042						
ANR	3349182	Symbol	h -> prev_mb_skipped		3344042						
ANR	3349183	Symbol	* nnz_cache		3344042						
ANR	3349184	Symbol	mb_type		3344042						
ANR	3349185	Symbol	CHROMA422		3344042						
ANR	3349186	Symbol	h -> cabac . bytestream		3344042						
ANR	3349187	Symbol	dct8x8_allowed		3344042						
ANR	3349188	Symbol	decode_cabac_field_decoding_flag		3344042						
ANR	3349189	Symbol	* s -> current_picture . f		3344042						
ANR	3349190	Symbol	IS_16X8		3344042						
ANR	3349191	Symbol	val		3344042						
ANR	3349192	Symbol	partition_count		3344042						
ANR	3349193	Symbol	chroma_dc_scan		3344042						
ANR	3349194	Symbol	bits		3344042						
ANR	3349195	Symbol	decode_cabac_b_mb_sub_type		3344042						
ANR	3349196	Symbol	index		3344042						
ANR	3349197	Symbol	FRAME_MBAFF		3344042						
ANR	3349198	Symbol	h -> s		3344042						
ANR	3349199	Symbol	* h -> sub_mb_type		3344042						
ANR	3349200	Symbol	h -> sub_mb_type		3344042						
ANR	3349201	Symbol	mpx		3344042						
ANR	3349202	Symbol	mpy		3344042						
ANR	3349203	Symbol	* * h -> sub_mb_type		3344042						
ANR	3349204	Symbol	* * * h		3344042						
ANR	3349205	Symbol	h -> non_zero_count		3344042						
ANR	3349206	Symbol	h -> cbp		3344042						
ANR	3349207	Symbol	& h -> cabac		3344042						
ANR	3349208	Symbol	IS_INTER		3344042						
ANR	3349209	Symbol	IS_8x8DCT		3344042						
ANR	3349210	Symbol	skip		3344042						
ANR	3349211	Symbol	LTOP		3344042						
ANR	3349212	Symbol	* h -> sps . chroma_format_idc		3344042						
ANR	3349213	Symbol	* * mv_cache		3344042						
ANR	3349214	Symbol	IS_INTERLACED		3344042						
ANR	3349215	Symbol	decode_cabac_mb_ref		3344042						
ANR	3349216	Symbol	IS_SUB_8X4		3344042						
ANR	3349217	Symbol	IS_SUB_8X8		3344042						
ANR	3349218	Symbol	max_qp		3344042						
ANR	3349219	Symbol	* * s		3344042						
ANR	3349220	Symbol	CHROMA444		3344042						
ANR	3349221	Symbol	h -> field_scan		3344042						
ANR	3349222	Symbol	MB_TYPE_INTERLACED		3344042						
ANR	3349223	Symbol	h -> field_scan_q0		3344042						
ANR	3349224	Symbol	* * h -> mv_cache		3344042						
ANR	3349225	Symbol	* h -> dequant4_coeff		3344042						
ANR	3349226	Symbol	h -> intra4x4_pred_mode_cache		3344042						
ANR	3349227	Symbol	AV_LOG_ERROR		3344042						
ANR	3349228	Symbol	* s -> current_picture		3344042						
ANR	3349229	Symbol	* i_mb_type_info		3344042						
ANR	3349230	Symbol	p_sub_mb_type_info		3344042						
ANR	3349231	Symbol	s -> current_picture . f		3344042						
ANR	3349232	Symbol	sub_mb_type		3344042						
ANR	3349233	Symbol	MB_MBAFF		3344042						
ANR	3349234	Symbol	h -> frame_num		3344042						
ANR	3349235	Symbol	* list		3344042						
ANR	3349236	Symbol	* * h -> mvd_cache		3344042						
ANR	3349237	Symbol	ff_h264_check_intra_pred_mode		3344042						
ANR	3349238	Symbol	MB_TYPE_8x8DCT		3344042						
ANR	3349239	Symbol	qmul		3344042						
ANR	3349240	Symbol	* b_sub_mb_type_info		3344042						
ANR	3349241	Symbol	decode_cabac_mb_skip		3344042						
ANR	3349242	Symbol	mode		3344042						
ANR	3349243	Symbol	* h -> sps		3344042						
ANR	3349244	Symbol	mb		3344042						
ANR	3349245	Symbol	* s -> current_picture . f . mb_type		3344042						
ANR	3349246	Symbol	* h -> non_zero_count		3344042						
ANR	3349247	Symbol	MB_FIELD		3344042						
ANR	3349248	Symbol	h -> last_qscale_diff		3344042						
ANR	3349249	Symbol	decode_cabac_mb_chroma_pre_mode		3344042						
ANR	3349250	Symbol	* h -> mv_cache		3344042						
ANR	3349251	Symbol	b_mb_type_info [ mb_type ] . type		3344042						
ANR	3349252	Symbol	* * IS_INTRA		3344042						
ANR	3349253	Symbol	IS_8X16		3344042						
ANR	3349254	Symbol	IS_INTRA4x4		3344042						
ANR	3349255	Symbol	b_sub_mb_type_info [ h -> sub_mb_type [ i ] ] . type		3344042						
ANR	3349256	Symbol	* h -> intra4x4_pred_mode_cache		3344042						
ANR	3349257	Symbol	mx		3344042						
ANR	3349258	Symbol	* * scan8		3344042						
ANR	3349259	Symbol	my		3344042						
ANR	3349260	Symbol	s -> mb_x		3344042						
ANR	3349261	Symbol	s -> mb_y		3344042						
ANR	3349262	Symbol	* LEFT		3344042						
ANR	3349263	Symbol	* * mvd_cache		3344042						
ANR	3349264	Symbol	IS_DIRECT		3344042						
ANR	3349265	Symbol	decode_cabac_mb_intra4x4_pred_mode		3344042						
ANR	3349266	Symbol	s -> avctx		3344042						
ANR	3349267	Symbol	* mb_type		3344042						
ANR	3349268	Symbol	get_cabac_noinline		3344042						
ANR	3349269	Symbol	AV_PICTURE_TYPE_P		3344042						
ANR	3349270	Symbol	sub_partition_count		3344042						
ANR	3349271	Symbol	s -> qscale		3344042						
ANR	3349272	Symbol	mb_xy		3344042						
ANR	3349273	Symbol	* h -> slice_table		3344042						
ANR	3349274	Symbol	* p_sub_mb_type_info		3344042						
ANR	3349275	Symbol	get_dct8x8_allowed		3344042						
ANR	3349276	Symbol	p_mb_type_info		3344042						
ANR	3349277	Symbol	mv_cache		3344042						
ANR	3349278	Symbol	h -> cabac_state		3344042						
ANR	3349279	Symbol	CHROMA_DC_BLOCK_INDEX		3344042						
ANR	3349280	Symbol	scan8		3344042						
ANR	3349281	Symbol	AV_PICTURE_TYPE_I		3344042						
ANR	3349282	Symbol	AV_PICTURE_TYPE_B		3344042						
ANR	3349283	Symbol	h -> top_type		3344042						
ANR	3349284	Symbol	top_empty		3344042						
ANR	3349285	Symbol	i8x8		3344042						
ANR	3349286	Symbol	h -> sps . bit_depth_luma		3344042						
ANR	3349287	Symbol	h -> field_scan8x8		3344042						
ANR	3349288	Symbol	h -> non_zero_count_cache		3344042						
ANR	3349289	Symbol	* p_mb_type_info		3344042						
ANR	3349290	Symbol	p_mb_type_info [ mb_type ] . type		3344042						
ANR	3349291	Symbol	* c		3344042						
ANR	3349292	Symbol	decode_cabac_mb_cbp_luma		3344042						
ANR	3349293	Symbol	cbp		3344042						
ANR	3349294	Symbol	PART_NOT_AVAILABLE		3344042						
ANR	3349295	Symbol	* h		3344042						
ANR	3349296	Symbol	h -> direct_cache		3344042						
ANR	3349297	Symbol	* i		3344042						
ANR	3349298	Symbol	& mx		3344042						
ANR	3349299	Symbol	* mv_cache		3344042						
ANR	3349300	Symbol	decode_cabac_p_mb_sub_type		3344042						
ANR	3349301	Symbol	h -> mv_cache		3344042						
ANR	3349302	Symbol	& my		3344042						
ANR	3349303	Symbol	h -> sps		3344042						
ANR	3349304	Symbol	* s		3344042						
ANR	3349305	Symbol	* ref		3344042						
