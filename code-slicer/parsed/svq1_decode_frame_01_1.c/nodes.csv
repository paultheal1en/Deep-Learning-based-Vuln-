command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8047958	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_decode_frame_01_1.c								
ANR	8047959	Function	svq1_decode_frame	1:0:0:4310							
ANR	8047960	FunctionDef	"svq1_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		8047959	0					
ANR	8047961	CompoundStatement		5:0:128:4310	8047959	0					
ANR	8047962	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:135:167	8047959	0	True				
ANR	8047963	IdentifierDecl	* buf = avpkt -> data		8047959	0					
ANR	8047964	IdentifierDeclType	const uint8_t *		8047959	0					
ANR	8047965	Identifier	buf		8047959	1					
ANR	8047966	AssignmentExpression	* buf = avpkt -> data		8047959	2		=			
ANR	8047967	Identifier	buf		8047959	0					
ANR	8047968	PtrMemberAccess	avpkt -> data		8047959	1					
ANR	8047969	Identifier	avpkt		8047959	0					
ANR	8047970	Identifier	data		8047959	1					
ANR	8047971	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:174:206	8047959	1	True				
ANR	8047972	IdentifierDecl	buf_size = avpkt -> size		8047959	0					
ANR	8047973	IdentifierDeclType	int		8047959	0					
ANR	8047974	Identifier	buf_size		8047959	1					
ANR	8047975	AssignmentExpression	buf_size = avpkt -> size		8047959	2		=			
ANR	8047976	Identifier	buf_size		8047959	0					
ANR	8047977	PtrMemberAccess	avpkt -> size		8047959	1					
ANR	8047978	Identifier	avpkt		8047959	0					
ANR	8047979	Identifier	size		8047959	1					
ANR	8047980	IdentifierDeclStatement	SVQ1Context * s = avctx -> priv_data ;	11:4:213:250	8047959	2	True				
ANR	8047981	IdentifierDecl	* s = avctx -> priv_data		8047959	0					
ANR	8047982	IdentifierDeclType	SVQ1Context *		8047959	0					
ANR	8047983	Identifier	s		8047959	1					
ANR	8047984	AssignmentExpression	* s = avctx -> priv_data		8047959	2		=			
ANR	8047985	Identifier	s		8047959	0					
ANR	8047986	PtrMemberAccess	avctx -> priv_data		8047959	1					
ANR	8047987	Identifier	avctx		8047959	0					
ANR	8047988	Identifier	priv_data		8047959	1					
ANR	8047989	IdentifierDeclStatement	AVFrame * cur = data ;	13:4:257:282	8047959	3	True				
ANR	8047990	IdentifierDecl	* cur = data		8047959	0					
ANR	8047991	IdentifierDeclType	AVFrame *		8047959	0					
ANR	8047992	Identifier	cur		8047959	1					
ANR	8047993	AssignmentExpression	* cur = data		8047959	2		=			
ANR	8047994	Identifier	data		8047959	0					
ANR	8047995	Identifier	data		8047959	1					
ANR	8047996	IdentifierDeclStatement	uint8_t * current ;	15:4:289:305	8047959	4	True				
ANR	8047997	IdentifierDecl	* current		8047959	0					
ANR	8047998	IdentifierDeclType	uint8_t *		8047959	0					
ANR	8047999	Identifier	current		8047959	1					
ANR	8048000	IdentifierDeclStatement	"int result , i , x , y , width , height ;"	17:4:312:346	8047959	5	True				
ANR	8048001	IdentifierDecl	result		8047959	0					
ANR	8048002	IdentifierDeclType	int		8047959	0					
ANR	8048003	Identifier	result		8047959	1					
ANR	8048004	IdentifierDecl	i		8047959	1					
ANR	8048005	IdentifierDeclType	int		8047959	0					
ANR	8048006	Identifier	i		8047959	1					
ANR	8048007	IdentifierDecl	x		8047959	2					
ANR	8048008	IdentifierDeclType	int		8047959	0					
ANR	8048009	Identifier	x		8047959	1					
ANR	8048010	IdentifierDecl	y		8047959	3					
ANR	8048011	IdentifierDeclType	int		8047959	0					
ANR	8048012	Identifier	y		8047959	1					
ANR	8048013	IdentifierDecl	width		8047959	4					
ANR	8048014	IdentifierDeclType	int		8047959	0					
ANR	8048015	Identifier	width		8047959	1					
ANR	8048016	IdentifierDecl	height		8047959	5					
ANR	8048017	IdentifierDeclType	int		8047959	0					
ANR	8048018	Identifier	height		8047959	1					
ANR	8048019	IdentifierDeclStatement	svq1_pmv * pmv ;	19:4:353:366	8047959	6	True				
ANR	8048020	IdentifierDecl	* pmv		8047959	0					
ANR	8048021	IdentifierDeclType	svq1_pmv *		8047959	0					
ANR	8048022	Identifier	pmv		8047959	1					
ANR	8048023	ExpressionStatement	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"	25:4:408:448	8047959	7	True				
ANR	8048024	CallExpression	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"		8047959	0					
ANR	8048025	Callee	init_get_bits		8047959	0					
ANR	8048026	Identifier	init_get_bits		8047959	0					
ANR	8048027	ArgumentList	& s -> gb		8047959	1					
ANR	8048028	Argument	& s -> gb		8047959	0					
ANR	8048029	UnaryOperationExpression	& s -> gb		8047959	0					
ANR	8048030	UnaryOperator	&		8047959	0					
ANR	8048031	PtrMemberAccess	s -> gb		8047959	1					
ANR	8048032	Identifier	s		8047959	0					
ANR	8048033	Identifier	gb		8047959	1					
ANR	8048034	Argument	buf		8047959	1					
ANR	8048035	Identifier	buf		8047959	0					
ANR	8048036	Argument	buf_size * 8		8047959	2					
ANR	8048037	MultiplicativeExpression	buf_size * 8		8047959	0		*			
ANR	8048038	Identifier	buf_size		8047959	0					
ANR	8048039	PrimaryExpression	8		8047959	1					
ANR	8048040	ExpressionStatement	"s -> frame_code = get_bits ( & s -> gb , 22 )"	31:4:488:524	8047959	8	True				
ANR	8048041	AssignmentExpression	"s -> frame_code = get_bits ( & s -> gb , 22 )"		8047959	0		=			
ANR	8048042	PtrMemberAccess	s -> frame_code		8047959	0					
ANR	8048043	Identifier	s		8047959	0					
ANR	8048044	Identifier	frame_code		8047959	1					
ANR	8048045	CallExpression	"get_bits ( & s -> gb , 22 )"		8047959	1					
ANR	8048046	Callee	get_bits		8047959	0					
ANR	8048047	Identifier	get_bits		8047959	0					
ANR	8048048	ArgumentList	& s -> gb		8047959	1					
ANR	8048049	Argument	& s -> gb		8047959	0					
ANR	8048050	UnaryOperationExpression	& s -> gb		8047959	0					
ANR	8048051	UnaryOperator	&		8047959	0					
ANR	8048052	PtrMemberAccess	s -> gb		8047959	1					
ANR	8048053	Identifier	s		8047959	0					
ANR	8048054	Identifier	gb		8047959	1					
ANR	8048055	Argument	22		8047959	1					
ANR	8048056	PrimaryExpression	22		8047959	0					
ANR	8048057	IfStatement	if ( ( s -> frame_code & ~0x70 ) || ! ( s -> frame_code & 0x60 ) )		8047959	9					
ANR	8048058	Condition	( s -> frame_code & ~0x70 ) || ! ( s -> frame_code & 0x60 )	35:8:537:586	8047959	0	True				
ANR	8048059	OrExpression	( s -> frame_code & ~0x70 ) || ! ( s -> frame_code & 0x60 )		8047959	0		||			
ANR	8048060	BitAndExpression	s -> frame_code & ~0x70		8047959	0		&			
ANR	8048061	PtrMemberAccess	s -> frame_code		8047959	0					
ANR	8048062	Identifier	s		8047959	0					
ANR	8048063	Identifier	frame_code		8047959	1					
ANR	8048064	Identifier	~0x70		8047959	1					
ANR	8048065	UnaryOperationExpression	! ( s -> frame_code & 0x60 )		8047959	1					
ANR	8048066	UnaryOperator	!		8047959	0					
ANR	8048067	BitAndExpression	s -> frame_code & 0x60		8047959	1		&			
ANR	8048068	PtrMemberAccess	s -> frame_code		8047959	0					
ANR	8048069	Identifier	s		8047959	0					
ANR	8048070	Identifier	frame_code		8047959	1					
ANR	8048071	PrimaryExpression	0x60		8047959	1					
ANR	8048072	ReturnStatement	return AVERROR_INVALIDDATA ;	37:8:598:624	8047959	1	True				
ANR	8048073	Identifier	AVERROR_INVALIDDATA		8047959	0					
ANR	8048074	IfStatement	if ( s -> frame_code != 0x20 )		8047959	10					
ANR	8048075	Condition	s -> frame_code != 0x20	43:8:678:698	8047959	0	True				
ANR	8048076	EqualityExpression	s -> frame_code != 0x20		8047959	0		!=			
ANR	8048077	PtrMemberAccess	s -> frame_code		8047959	0					
ANR	8048078	Identifier	s		8047959	0					
ANR	8048079	Identifier	frame_code		8047959	1					
ANR	8048080	PrimaryExpression	0x20		8047959	1					
ANR	8048081	CompoundStatement		41:8:583:620	8047959	1					
ANR	8048082	IdentifierDeclStatement	uint32_t * src = ( uint32_t * ) ( buf + 4 ) ;	45:8:712:749	8047959	0	True				
ANR	8048083	IdentifierDecl	* src = ( uint32_t * ) ( buf + 4 )		8047959	0					
ANR	8048084	IdentifierDeclType	uint32_t *		8047959	0					
ANR	8048085	Identifier	src		8047959	1					
ANR	8048086	AssignmentExpression	* src = ( uint32_t * ) ( buf + 4 )		8047959	2		=			
ANR	8048087	Identifier	src		8047959	0					
ANR	8048088	CastExpression	( uint32_t * ) ( buf + 4 )		8047959	1					
ANR	8048089	CastTarget	uint32_t *		8047959	0					
ANR	8048090	AdditiveExpression	buf + 4		8047959	1		+			
ANR	8048091	Identifier	buf		8047959	0					
ANR	8048092	PrimaryExpression	4		8047959	1					
ANR	8048093	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8047959	1					
ANR	8048094	ForInit	i = 0 ;	49:13:767:772	8047959	0	True				
ANR	8048095	AssignmentExpression	i = 0		8047959	0		=			
ANR	8048096	Identifier	i		8047959	0					
ANR	8048097	PrimaryExpression	0		8047959	1					
ANR	8048098	Condition	i < 4	49:20:774:778	8047959	1	True				
ANR	8048099	RelationalExpression	i < 4		8047959	0		<			
ANR	8048100	Identifier	i		8047959	0					
ANR	8048101	PrimaryExpression	4		8047959	1					
ANR	8048102	PostIncDecOperationExpression	i ++	49:27:781:783	8047959	2	True				
ANR	8048103	Identifier	i		8047959	0					
ANR	8048104	IncDec	++		8047959	1					
ANR	8048105	ExpressionStatement	src [ i ] = ( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]	51:12:799:854	8047959	3	True				
ANR	8048106	AssignmentExpression	src [ i ] = ( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]		8047959	0		=			
ANR	8048107	ArrayIndexing	src [ i ]		8047959	0					
ANR	8048108	Identifier	src		8047959	0					
ANR	8048109	Identifier	i		8047959	1					
ANR	8048110	ExclusiveOrExpression	( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]		8047959	1		^			
ANR	8048111	InclusiveOrExpression	( src [ i ] << 16 ) | ( src [ i ] >> 16 )		8047959	0		|			
ANR	8048112	ShiftExpression	src [ i ] << 16		8047959	0		<<			
ANR	8048113	ArrayIndexing	src [ i ]		8047959	0					
ANR	8048114	Identifier	src		8047959	0					
ANR	8048115	Identifier	i		8047959	1					
ANR	8048116	PrimaryExpression	16		8047959	1					
ANR	8048117	ShiftExpression	src [ i ] >> 16		8047959	1		>>			
ANR	8048118	ArrayIndexing	src [ i ]		8047959	0					
ANR	8048119	Identifier	src		8047959	0					
ANR	8048120	Identifier	i		8047959	1					
ANR	8048121	PrimaryExpression	16		8047959	1					
ANR	8048122	ArrayIndexing	src [ 7 - i ]		8047959	1					
ANR	8048123	Identifier	src		8047959	0					
ANR	8048124	AdditiveExpression	7 - i		8047959	1		-			
ANR	8048125	PrimaryExpression	7		8047959	0					
ANR	8048126	Identifier	i		8047959	1					
ANR	8048127	ExpressionStatement	"result = svq1_decode_frame_header ( avctx , cur )"	57:4:870:915	8047959	11	True				
ANR	8048128	AssignmentExpression	"result = svq1_decode_frame_header ( avctx , cur )"		8047959	0		=			
ANR	8048129	Identifier	result		8047959	0					
ANR	8048130	CallExpression	"svq1_decode_frame_header ( avctx , cur )"		8047959	1					
ANR	8048131	Callee	svq1_decode_frame_header		8047959	0					
ANR	8048132	Identifier	svq1_decode_frame_header		8047959	0					
ANR	8048133	ArgumentList	avctx		8047959	1					
ANR	8048134	Argument	avctx		8047959	0					
ANR	8048135	Identifier	avctx		8047959	0					
ANR	8048136	Argument	cur		8047959	1					
ANR	8048137	Identifier	cur		8047959	0					
ANR	8048138	IfStatement	if ( result != 0 )		8047959	12					
ANR	8048139	Condition	result != 0	61:8:928:938	8047959	0	True				
ANR	8048140	EqualityExpression	result != 0		8047959	0		!=			
ANR	8048141	Identifier	result		8047959	0					
ANR	8048142	PrimaryExpression	0		8047959	1					
ANR	8048143	CompoundStatement		57:21:812:812	8047959	1					
ANR	8048144	ExpressionStatement	"av_dlog ( avctx , ""Error in svq1_decode_frame_header %i\\n"" , result )"	63:8:952:1016	8047959	0	True				
ANR	8048145	CallExpression	"av_dlog ( avctx , ""Error in svq1_decode_frame_header %i\\n"" , result )"		8047959	0					
ANR	8048146	Callee	av_dlog		8047959	0					
ANR	8048147	Identifier	av_dlog		8047959	0					
ANR	8048148	ArgumentList	avctx		8047959	1					
ANR	8048149	Argument	avctx		8047959	0					
ANR	8048150	Identifier	avctx		8047959	0					
ANR	8048151	Argument	"""Error in svq1_decode_frame_header %i\\n"""		8047959	1					
ANR	8048152	PrimaryExpression	"""Error in svq1_decode_frame_header %i\\n"""		8047959	0					
ANR	8048153	Argument	result		8047959	2					
ANR	8048154	Identifier	result		8047959	0					
ANR	8048155	ReturnStatement	return result ;	65:8:1027:1040	8047959	1	True				
ANR	8048156	Identifier	result		8047959	0					
ANR	8048157	ExpressionStatement	"result = ff_set_dimensions ( avctx , s -> width , s -> height )"	71:4:1056:1110	8047959	13	True				
ANR	8048158	AssignmentExpression	"result = ff_set_dimensions ( avctx , s -> width , s -> height )"		8047959	0		=			
ANR	8048159	Identifier	result		8047959	0					
ANR	8048160	CallExpression	"ff_set_dimensions ( avctx , s -> width , s -> height )"		8047959	1					
ANR	8048161	Callee	ff_set_dimensions		8047959	0					
ANR	8048162	Identifier	ff_set_dimensions		8047959	0					
ANR	8048163	ArgumentList	avctx		8047959	1					
ANR	8048164	Argument	avctx		8047959	0					
ANR	8048165	Identifier	avctx		8047959	0					
ANR	8048166	Argument	s -> width		8047959	1					
ANR	8048167	PtrMemberAccess	s -> width		8047959	0					
ANR	8048168	Identifier	s		8047959	0					
ANR	8048169	Identifier	width		8047959	1					
ANR	8048170	Argument	s -> height		8047959	2					
ANR	8048171	PtrMemberAccess	s -> height		8047959	0					
ANR	8048172	Identifier	s		8047959	0					
ANR	8048173	Identifier	height		8047959	1					
ANR	8048174	IfStatement	if ( result < 0 )		8047959	14					
ANR	8048175	Condition	result < 0	73:8:1121:1130	8047959	0	True				
ANR	8048176	RelationalExpression	result < 0		8047959	0		<			
ANR	8048177	Identifier	result		8047959	0					
ANR	8048178	PrimaryExpression	0		8047959	1					
ANR	8048179	ReturnStatement	return result ;	75:8:1142:1155	8047959	1	True				
ANR	8048180	Identifier	result		8047959	0					
ANR	8048181	IfStatement	if ( ( avctx -> skip_frame >= AVDISCARD_NONREF && s -> nonref ) || ( avctx -> skip_frame >= AVDISCARD_NONKEY && cur -> pict_type != AV_PICTURE_TYPE_I ) || avctx -> skip_frame >= AVDISCARD_ALL )		8047959	15					
ANR	8048182	Condition	( avctx -> skip_frame >= AVDISCARD_NONREF && s -> nonref ) || ( avctx -> skip_frame >= AVDISCARD_NONKEY && cur -> pict_type != AV_PICTURE_TYPE_I ) || avctx -> skip_frame >= AVDISCARD_ALL	79:8:1168:1367	8047959	0	True				
ANR	8048183	OrExpression	( avctx -> skip_frame >= AVDISCARD_NONREF && s -> nonref ) || ( avctx -> skip_frame >= AVDISCARD_NONKEY && cur -> pict_type != AV_PICTURE_TYPE_I ) || avctx -> skip_frame >= AVDISCARD_ALL		8047959	0		||			
ANR	8048184	AndExpression	avctx -> skip_frame >= AVDISCARD_NONREF && s -> nonref		8047959	0		&&			
ANR	8048185	RelationalExpression	avctx -> skip_frame >= AVDISCARD_NONREF		8047959	0		>=			
ANR	8048186	PtrMemberAccess	avctx -> skip_frame		8047959	0					
ANR	8048187	Identifier	avctx		8047959	0					
ANR	8048188	Identifier	skip_frame		8047959	1					
ANR	8048189	Identifier	AVDISCARD_NONREF		8047959	1					
ANR	8048190	PtrMemberAccess	s -> nonref		8047959	1					
ANR	8048191	Identifier	s		8047959	0					
ANR	8048192	Identifier	nonref		8047959	1					
ANR	8048193	OrExpression	( avctx -> skip_frame >= AVDISCARD_NONKEY && cur -> pict_type != AV_PICTURE_TYPE_I ) || avctx -> skip_frame >= AVDISCARD_ALL		8047959	1		||			
ANR	8048194	AndExpression	avctx -> skip_frame >= AVDISCARD_NONKEY && cur -> pict_type != AV_PICTURE_TYPE_I		8047959	0		&&			
ANR	8048195	RelationalExpression	avctx -> skip_frame >= AVDISCARD_NONKEY		8047959	0		>=			
ANR	8048196	PtrMemberAccess	avctx -> skip_frame		8047959	0					
ANR	8048197	Identifier	avctx		8047959	0					
ANR	8048198	Identifier	skip_frame		8047959	1					
ANR	8048199	Identifier	AVDISCARD_NONKEY		8047959	1					
ANR	8048200	EqualityExpression	cur -> pict_type != AV_PICTURE_TYPE_I		8047959	1		!=			
ANR	8048201	PtrMemberAccess	cur -> pict_type		8047959	0					
ANR	8048202	Identifier	cur		8047959	0					
ANR	8048203	Identifier	pict_type		8047959	1					
ANR	8048204	Identifier	AV_PICTURE_TYPE_I		8047959	1					
ANR	8048205	RelationalExpression	avctx -> skip_frame >= AVDISCARD_ALL		8047959	1		>=			
ANR	8048206	PtrMemberAccess	avctx -> skip_frame		8047959	0					
ANR	8048207	Identifier	avctx		8047959	0					
ANR	8048208	Identifier	skip_frame		8047959	1					
ANR	8048209	Identifier	AVDISCARD_ALL		8047959	1					
ANR	8048210	ReturnStatement	return buf_size ;	87:8:1379:1394	8047959	1	True				
ANR	8048211	Identifier	buf_size		8047959	0					
ANR	8048212	ExpressionStatement	"result = ff_get_buffer ( avctx , cur , s -> nonref ? 0 : AV_GET_BUFFER_FLAG_REF )"	91:4:1403:1477	8047959	16	True				
ANR	8048213	AssignmentExpression	"result = ff_get_buffer ( avctx , cur , s -> nonref ? 0 : AV_GET_BUFFER_FLAG_REF )"		8047959	0		=			
ANR	8048214	Identifier	result		8047959	0					
ANR	8048215	CallExpression	"ff_get_buffer ( avctx , cur , s -> nonref ? 0 : AV_GET_BUFFER_FLAG_REF )"		8047959	1					
ANR	8048216	Callee	ff_get_buffer		8047959	0					
ANR	8048217	Identifier	ff_get_buffer		8047959	0					
ANR	8048218	ArgumentList	avctx		8047959	1					
ANR	8048219	Argument	avctx		8047959	0					
ANR	8048220	Identifier	avctx		8047959	0					
ANR	8048221	Argument	cur		8047959	1					
ANR	8048222	Identifier	cur		8047959	0					
ANR	8048223	Argument	s -> nonref ? 0 : AV_GET_BUFFER_FLAG_REF		8047959	2					
ANR	8048224	ConditionalExpression	s -> nonref ? 0 : AV_GET_BUFFER_FLAG_REF		8047959	0					
ANR	8048225	Condition	s -> nonref		8047959	0					
ANR	8048226	PtrMemberAccess	s -> nonref		8047959	0					
ANR	8048227	Identifier	s		8047959	0					
ANR	8048228	Identifier	nonref		8047959	1					
ANR	8048229	PrimaryExpression	0		8047959	1					
ANR	8048230	Identifier	AV_GET_BUFFER_FLAG_REF		8047959	2					
ANR	8048231	IfStatement	if ( result < 0 )		8047959	17					
ANR	8048232	Condition	result < 0	93:8:1488:1497	8047959	0	True				
ANR	8048233	RelationalExpression	result < 0		8047959	0		<			
ANR	8048234	Identifier	result		8047959	0					
ANR	8048235	PrimaryExpression	0		8047959	1					
ANR	8048236	ReturnStatement	return result ;	95:8:1509:1522	8047959	1	True				
ANR	8048237	Identifier	result		8047959	0					
ANR	8048238	ExpressionStatement	"pmv = av_malloc ( ( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv ) )"	99:4:1531:1594	8047959	18	True				
ANR	8048239	AssignmentExpression	"pmv = av_malloc ( ( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv ) )"		8047959	0		=			
ANR	8048240	Identifier	pmv		8047959	0					
ANR	8048241	CallExpression	"av_malloc ( ( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv ) )"		8047959	1					
ANR	8048242	Callee	av_malloc		8047959	0					
ANR	8048243	Identifier	av_malloc		8047959	0					
ANR	8048244	ArgumentList	"( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv )"		8047959	1					
ANR	8048245	Argument	"( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv )"		8047959	0					
ANR	8048246	MultiplicativeExpression	"( FFALIGN ( s -> width , 16 ) / 8 + 3 ) * sizeof ( * pmv )"		8047959	0		*			
ANR	8048247	AdditiveExpression	"FFALIGN ( s -> width , 16 ) / 8 + 3"		8047959	0		+			
ANR	8048248	MultiplicativeExpression	"FFALIGN ( s -> width , 16 ) / 8"		8047959	0		/			
ANR	8048249	CallExpression	"FFALIGN ( s -> width , 16 )"		8047959	0					
ANR	8048250	Callee	FFALIGN		8047959	0					
ANR	8048251	Identifier	FFALIGN		8047959	0					
ANR	8048252	ArgumentList	s -> width		8047959	1					
ANR	8048253	Argument	s -> width		8047959	0					
ANR	8048254	PtrMemberAccess	s -> width		8047959	0					
ANR	8048255	Identifier	s		8047959	0					
ANR	8048256	Identifier	width		8047959	1					
ANR	8048257	Argument	16		8047959	1					
ANR	8048258	PrimaryExpression	16		8047959	0					
ANR	8048259	PrimaryExpression	8		8047959	1					
ANR	8048260	PrimaryExpression	3		8047959	1					
ANR	8048261	SizeofExpression	sizeof ( * pmv )		8047959	1					
ANR	8048262	Sizeof	sizeof		8047959	0					
ANR	8048263	UnaryOperationExpression	* pmv		8047959	1					
ANR	8048264	UnaryOperator	*		8047959	0					
ANR	8048265	Identifier	pmv		8047959	1					
ANR	8048266	IfStatement	if ( ! pmv )		8047959	19					
ANR	8048267	Condition	! pmv	101:8:1605:1608	8047959	0	True				
ANR	8048268	UnaryOperationExpression	! pmv		8047959	0					
ANR	8048269	UnaryOperator	!		8047959	0					
ANR	8048270	Identifier	pmv		8047959	1					
ANR	8048271	ReturnStatement	return AVERROR ( ENOMEM ) ;	103:8:1620:1642	8047959	1	True				
ANR	8048272	CallExpression	AVERROR ( ENOMEM )		8047959	0					
ANR	8048273	Callee	AVERROR		8047959	0					
ANR	8048274	Identifier	AVERROR		8047959	0					
ANR	8048275	ArgumentList	ENOMEM		8047959	1					
ANR	8048276	Argument	ENOMEM		8047959	0					
ANR	8048277	Identifier	ENOMEM		8047959	0					
ANR	8048278	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8047959	20					
ANR	8048279	ForInit	i = 0 ;	109:9:1696:1701	8047959	0	True				
ANR	8048280	AssignmentExpression	i = 0		8047959	0		=			
ANR	8048281	Identifier	i		8047959	0					
ANR	8048282	PrimaryExpression	0		8047959	1					
ANR	8048283	Condition	i < 3	109:16:1703:1707	8047959	1	True				
ANR	8048284	RelationalExpression	i < 3		8047959	0		<			
ANR	8048285	Identifier	i		8047959	0					
ANR	8048286	PrimaryExpression	3		8047959	1					
ANR	8048287	PostIncDecOperationExpression	i ++	109:23:1710:1712	8047959	2	True				
ANR	8048288	Identifier	i		8047959	0					
ANR	8048289	IncDec	++		8047959	1					
ANR	8048290	CompoundStatement		107:8:1597:1628	8047959	3					
ANR	8048291	IdentifierDeclStatement	int linesize = cur -> linesize [ i ] ;	111:8:1726:1757	8047959	0	True				
ANR	8048292	IdentifierDecl	linesize = cur -> linesize [ i ]		8047959	0					
ANR	8048293	IdentifierDeclType	int		8047959	0					
ANR	8048294	Identifier	linesize		8047959	1					
ANR	8048295	AssignmentExpression	linesize = cur -> linesize [ i ]		8047959	2		=			
ANR	8048296	Identifier	linesize		8047959	0					
ANR	8048297	ArrayIndexing	cur -> linesize [ i ]		8047959	1					
ANR	8048298	PtrMemberAccess	cur -> linesize		8047959	0					
ANR	8048299	Identifier	cur		8047959	0					
ANR	8048300	Identifier	linesize		8047959	1					
ANR	8048301	Identifier	i		8047959	1					
ANR	8048302	IfStatement	if ( i == 0 )		8047959	1					
ANR	8048303	Condition	i == 0	113:12:1772:1777	8047959	0	True				
ANR	8048304	EqualityExpression	i == 0		8047959	0		==			
ANR	8048305	Identifier	i		8047959	0					
ANR	8048306	PrimaryExpression	0		8047959	1					
ANR	8048307	CompoundStatement		109:20:1651:1651	8047959	1					
ANR	8048308	ExpressionStatement	"width = FFALIGN ( s -> width , 16 )"	115:12:1795:1828	8047959	0	True				
ANR	8048309	AssignmentExpression	"width = FFALIGN ( s -> width , 16 )"		8047959	0		=			
ANR	8048310	Identifier	width		8047959	0					
ANR	8048311	CallExpression	"FFALIGN ( s -> width , 16 )"		8047959	1					
ANR	8048312	Callee	FFALIGN		8047959	0					
ANR	8048313	Identifier	FFALIGN		8047959	0					
ANR	8048314	ArgumentList	s -> width		8047959	1					
ANR	8048315	Argument	s -> width		8047959	0					
ANR	8048316	PtrMemberAccess	s -> width		8047959	0					
ANR	8048317	Identifier	s		8047959	0					
ANR	8048318	Identifier	width		8047959	1					
ANR	8048319	Argument	16		8047959	1					
ANR	8048320	PrimaryExpression	16		8047959	0					
ANR	8048321	ExpressionStatement	"height = FFALIGN ( s -> height , 16 )"	117:12:1843:1876	8047959	1	True				
ANR	8048322	AssignmentExpression	"height = FFALIGN ( s -> height , 16 )"		8047959	0		=			
ANR	8048323	Identifier	height		8047959	0					
ANR	8048324	CallExpression	"FFALIGN ( s -> height , 16 )"		8047959	1					
ANR	8048325	Callee	FFALIGN		8047959	0					
ANR	8048326	Identifier	FFALIGN		8047959	0					
ANR	8048327	ArgumentList	s -> height		8047959	1					
ANR	8048328	Argument	s -> height		8047959	0					
ANR	8048329	PtrMemberAccess	s -> height		8047959	0					
ANR	8048330	Identifier	s		8047959	0					
ANR	8048331	Identifier	height		8047959	1					
ANR	8048332	Argument	16		8047959	1					
ANR	8048333	PrimaryExpression	16		8047959	0					
ANR	8048334	ElseStatement	else		8047959	0					
ANR	8048335	CompoundStatement		115:15:1765:1765	8047959	0					
ANR	8048336	IfStatement	if ( avctx -> flags & CODEC_FLAG_GRAY )		8047959	0					
ANR	8048337	Condition	avctx -> flags & CODEC_FLAG_GRAY	121:16:1913:1942	8047959	0	True				
ANR	8048338	BitAndExpression	avctx -> flags & CODEC_FLAG_GRAY		8047959	0		&			
ANR	8048339	PtrMemberAccess	avctx -> flags		8047959	0					
ANR	8048340	Identifier	avctx		8047959	0					
ANR	8048341	Identifier	flags		8047959	1					
ANR	8048342	Identifier	CODEC_FLAG_GRAY		8047959	1					
ANR	8048343	BreakStatement	break ;	123:16:1962:1967	8047959	1	True				
ANR	8048344	ExpressionStatement	"width = FFALIGN ( s -> width / 4 , 16 )"	125:12:1982:2019	8047959	1	True				
ANR	8048345	AssignmentExpression	"width = FFALIGN ( s -> width / 4 , 16 )"		8047959	0		=			
ANR	8048346	Identifier	width		8047959	0					
ANR	8048347	CallExpression	"FFALIGN ( s -> width / 4 , 16 )"		8047959	1					
ANR	8048348	Callee	FFALIGN		8047959	0					
ANR	8048349	Identifier	FFALIGN		8047959	0					
ANR	8048350	ArgumentList	s -> width / 4		8047959	1					
ANR	8048351	Argument	s -> width / 4		8047959	0					
ANR	8048352	MultiplicativeExpression	s -> width / 4		8047959	0		/			
ANR	8048353	PtrMemberAccess	s -> width		8047959	0					
ANR	8048354	Identifier	s		8047959	0					
ANR	8048355	Identifier	width		8047959	1					
ANR	8048356	PrimaryExpression	4		8047959	1					
ANR	8048357	Argument	16		8047959	1					
ANR	8048358	PrimaryExpression	16		8047959	0					
ANR	8048359	ExpressionStatement	"height = FFALIGN ( s -> height / 4 , 16 )"	127:12:2034:2071	8047959	2	True				
ANR	8048360	AssignmentExpression	"height = FFALIGN ( s -> height / 4 , 16 )"		8047959	0		=			
ANR	8048361	Identifier	height		8047959	0					
ANR	8048362	CallExpression	"FFALIGN ( s -> height / 4 , 16 )"		8047959	1					
ANR	8048363	Callee	FFALIGN		8047959	0					
ANR	8048364	Identifier	FFALIGN		8047959	0					
ANR	8048365	ArgumentList	s -> height / 4		8047959	1					
ANR	8048366	Argument	s -> height / 4		8047959	0					
ANR	8048367	MultiplicativeExpression	s -> height / 4		8047959	0		/			
ANR	8048368	PtrMemberAccess	s -> height		8047959	0					
ANR	8048369	Identifier	s		8047959	0					
ANR	8048370	Identifier	height		8047959	1					
ANR	8048371	PrimaryExpression	4		8047959	1					
ANR	8048372	Argument	16		8047959	1					
ANR	8048373	PrimaryExpression	16		8047959	0					
ANR	8048374	ExpressionStatement	current = cur -> data [ i ]	133:8:2095:2117	8047959	2	True				
ANR	8048375	AssignmentExpression	current = cur -> data [ i ]		8047959	0		=			
ANR	8048376	Identifier	current		8047959	0					
ANR	8048377	ArrayIndexing	cur -> data [ i ]		8047959	1					
ANR	8048378	PtrMemberAccess	cur -> data		8047959	0					
ANR	8048379	Identifier	cur		8047959	0					
ANR	8048380	Identifier	data		8047959	1					
ANR	8048381	Identifier	i		8047959	1					
ANR	8048382	IfStatement	if ( cur -> pict_type == AV_PICTURE_TYPE_I )		8047959	3					
ANR	8048383	Condition	cur -> pict_type == AV_PICTURE_TYPE_I	137:12:2134:2168	8047959	0	True				
ANR	8048384	EqualityExpression	cur -> pict_type == AV_PICTURE_TYPE_I		8047959	0		==			
ANR	8048385	PtrMemberAccess	cur -> pict_type		8047959	0					
ANR	8048386	Identifier	cur		8047959	0					
ANR	8048387	Identifier	pict_type		8047959	1					
ANR	8048388	Identifier	AV_PICTURE_TYPE_I		8047959	1					
ANR	8048389	CompoundStatement		133:49:2042:2042	8047959	1					
ANR	8048390	ForStatement	for ( y = 0 ; y < height ; y += 16 )		8047959	0					
ANR	8048391	ForInit	y = 0 ;	141:17:2219:2224	8047959	0	True				
ANR	8048392	AssignmentExpression	y = 0		8047959	0		=			
ANR	8048393	Identifier	y		8047959	0					
ANR	8048394	PrimaryExpression	0		8047959	1					
ANR	8048395	Condition	y < height	141:24:2226:2235	8047959	1	True				
ANR	8048396	RelationalExpression	y < height		8047959	0		<			
ANR	8048397	Identifier	y		8047959	0					
ANR	8048398	Identifier	height		8047959	1					
ANR	8048399	AssignmentExpression	y += 16	141:36:2238:2244	8047959	2	True	+=			
ANR	8048400	Identifier	y		8047959	0					
ANR	8048401	PrimaryExpression	16		8047959	1					
ANR	8048402	CompoundStatement		137:45:2118:2118	8047959	3					
ANR	8048403	ForStatement	for ( x = 0 ; x < width ; x += 16 )		8047959	0					
ANR	8048404	ForInit	x = 0 ;	143:21:2271:2276	8047959	0	True				
ANR	8048405	AssignmentExpression	x = 0		8047959	0		=			
ANR	8048406	Identifier	x		8047959	0					
ANR	8048407	PrimaryExpression	0		8047959	1					
ANR	8048408	Condition	x < width	143:28:2278:2286	8047959	1	True				
ANR	8048409	RelationalExpression	x < width		8047959	0		<			
ANR	8048410	Identifier	x		8047959	0					
ANR	8048411	Identifier	width		8047959	1					
ANR	8048412	AssignmentExpression	x += 16	143:39:2289:2295	8047959	2	True	+=			
ANR	8048413	Identifier	x		8047959	0					
ANR	8048414	PrimaryExpression	16		8047959	1					
ANR	8048415	CompoundStatement		139:48:2169:2169	8047959	3					
ANR	8048416	ExpressionStatement	"result = svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"	145:20:2321:2438	8047959	0	True				
ANR	8048417	AssignmentExpression	"result = svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"		8047959	0		=			
ANR	8048418	Identifier	result		8047959	0					
ANR	8048419	CallExpression	"svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"		8047959	1					
ANR	8048420	Callee	svq1_decode_block_intra		8047959	0					
ANR	8048421	Identifier	svq1_decode_block_intra		8047959	0					
ANR	8048422	ArgumentList	& s -> gb		8047959	1					
ANR	8048423	Argument	& s -> gb		8047959	0					
ANR	8048424	UnaryOperationExpression	& s -> gb		8047959	0					
ANR	8048425	UnaryOperator	&		8047959	0					
ANR	8048426	PtrMemberAccess	s -> gb		8047959	1					
ANR	8048427	Identifier	s		8047959	0					
ANR	8048428	Identifier	gb		8047959	1					
ANR	8048429	Argument	& current [ x ]		8047959	1					
ANR	8048430	UnaryOperationExpression	& current [ x ]		8047959	0					
ANR	8048431	UnaryOperator	&		8047959	0					
ANR	8048432	ArrayIndexing	current [ x ]		8047959	1					
ANR	8048433	Identifier	current		8047959	0					
ANR	8048434	Identifier	x		8047959	1					
ANR	8048435	Argument	linesize		8047959	2					
ANR	8048436	Identifier	linesize		8047959	0					
ANR	8048437	IfStatement	if ( result != 0 )		8047959	1					
ANR	8048438	Condition	result != 0	149:24:2465:2475	8047959	0	True				
ANR	8048439	EqualityExpression	result != 0		8047959	0		!=			
ANR	8048440	Identifier	result		8047959	0					
ANR	8048441	PrimaryExpression	0		8047959	1					
ANR	8048442	CompoundStatement		145:37:2349:2349	8047959	1					
ANR	8048443	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""Error in svq1_decode_block %i (keyframe)\\n"" , result )"	151:24:2505:2649	8047959	0	True				
ANR	8048444	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""Error in svq1_decode_block %i (keyframe)\\n"" , result )"		8047959	0					
ANR	8048445	Callee	av_log		8047959	0					
ANR	8048446	Identifier	av_log		8047959	0					
ANR	8048447	ArgumentList	avctx		8047959	1					
ANR	8048448	Argument	avctx		8047959	0					
ANR	8048449	Identifier	avctx		8047959	0					
ANR	8048450	Argument	AV_LOG_INFO		8047959	1					
ANR	8048451	Identifier	AV_LOG_INFO		8047959	0					
ANR	8048452	Argument	"""Error in svq1_decode_block %i (keyframe)\\n"""		8047959	2					
ANR	8048453	PrimaryExpression	"""Error in svq1_decode_block %i (keyframe)\\n"""		8047959	0					
ANR	8048454	Argument	result		8047959	3					
ANR	8048455	Identifier	result		8047959	0					
ANR	8048456	GotoStatement	goto err ;	157:24:2676:2684	8047959	1	True				
ANR	8048457	Identifier	err		8047959	0					
ANR	8048458	ExpressionStatement	current += 16 * linesize	163:16:2745:2769	8047959	1	True				
ANR	8048459	AssignmentExpression	current += 16 * linesize		8047959	0		+=			
ANR	8048460	Identifier	current		8047959	0					
ANR	8048461	MultiplicativeExpression	16 * linesize		8047959	1		*			
ANR	8048462	PrimaryExpression	16		8047959	0					
ANR	8048463	Identifier	linesize		8047959	1					
ANR	8048464	ElseStatement	else		8047959	0					
ANR	8048465	CompoundStatement		167:12:2719:2755	8047959	0					
ANR	8048466	IdentifierDeclStatement	uint8_t * previous = s -> prev -> data [ i ] ;	171:12:2848:2884	8047959	0	True				
ANR	8048467	IdentifierDecl	* previous = s -> prev -> data [ i ]		8047959	0					
ANR	8048468	IdentifierDeclType	uint8_t *		8047959	0					
ANR	8048469	Identifier	previous		8047959	1					
ANR	8048470	AssignmentExpression	* previous = s -> prev -> data [ i ]		8047959	2		=			
ANR	8048471	Identifier	previous		8047959	0					
ANR	8048472	ArrayIndexing	s -> prev -> data [ i ]		8047959	1					
ANR	8048473	PtrMemberAccess	s -> prev -> data		8047959	0					
ANR	8048474	PtrMemberAccess	s -> prev		8047959	0					
ANR	8048475	Identifier	s		8047959	0					
ANR	8048476	Identifier	prev		8047959	1					
ANR	8048477	Identifier	data		8047959	1					
ANR	8048478	Identifier	i		8047959	1					
ANR	8048479	IfStatement	if ( ! previous || s -> prev -> width != s -> width || s -> prev -> height != s -> height )		8047959	1					
ANR	8048480	Condition	! previous || s -> prev -> width != s -> width || s -> prev -> height != s -> height	173:16:2903:2990	8047959	0	True				
ANR	8048481	OrExpression	! previous || s -> prev -> width != s -> width || s -> prev -> height != s -> height		8047959	0		||			
ANR	8048482	UnaryOperationExpression	! previous		8047959	0					
ANR	8048483	UnaryOperator	!		8047959	0					
ANR	8048484	Identifier	previous		8047959	1					
ANR	8048485	OrExpression	s -> prev -> width != s -> width || s -> prev -> height != s -> height		8047959	1		||			
ANR	8048486	EqualityExpression	s -> prev -> width != s -> width		8047959	0		!=			
ANR	8048487	PtrMemberAccess	s -> prev -> width		8047959	0					
ANR	8048488	PtrMemberAccess	s -> prev		8047959	0					
ANR	8048489	Identifier	s		8047959	0					
ANR	8048490	Identifier	prev		8047959	1					
ANR	8048491	Identifier	width		8047959	1					
ANR	8048492	PtrMemberAccess	s -> width		8047959	1					
ANR	8048493	Identifier	s		8047959	0					
ANR	8048494	Identifier	width		8047959	1					
ANR	8048495	EqualityExpression	s -> prev -> height != s -> height		8047959	1		!=			
ANR	8048496	PtrMemberAccess	s -> prev -> height		8047959	0					
ANR	8048497	PtrMemberAccess	s -> prev		8047959	0					
ANR	8048498	Identifier	s		8047959	0					
ANR	8048499	Identifier	prev		8047959	1					
ANR	8048500	Identifier	height		8047959	1					
ANR	8048501	PtrMemberAccess	s -> height		8047959	1					
ANR	8048502	Identifier	s		8047959	0					
ANR	8048503	Identifier	height		8047959	1					
ANR	8048504	CompoundStatement		171:76:2864:2864	8047959	1					
ANR	8048505	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Missing reference frame.\\n"" )"	177:16:3012:3069	8047959	0	True				
ANR	8048506	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Missing reference frame.\\n"" )"		8047959	0					
ANR	8048507	Callee	av_log		8047959	0					
ANR	8048508	Identifier	av_log		8047959	0					
ANR	8048509	ArgumentList	avctx		8047959	1					
ANR	8048510	Argument	avctx		8047959	0					
ANR	8048511	Identifier	avctx		8047959	0					
ANR	8048512	Argument	AV_LOG_ERROR		8047959	1					
ANR	8048513	Identifier	AV_LOG_ERROR		8047959	0					
ANR	8048514	Argument	"""Missing reference frame.\\n"""		8047959	2					
ANR	8048515	PrimaryExpression	"""Missing reference frame.\\n"""		8047959	0					
ANR	8048516	ExpressionStatement	result = AVERROR_INVALIDDATA	179:16:3088:3116	8047959	1	True				
ANR	8048517	AssignmentExpression	result = AVERROR_INVALIDDATA		8047959	0		=			
ANR	8048518	Identifier	result		8047959	0					
ANR	8048519	Identifier	AVERROR_INVALIDDATA		8047959	1					
ANR	8048520	GotoStatement	goto err ;	181:16:3135:3143	8047959	2	True				
ANR	8048521	Identifier	err		8047959	0					
ANR	8048522	ExpressionStatement	"memset ( pmv , 0 , ( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv ) )"	187:12:3175:3227	8047959	2	True				
ANR	8048523	CallExpression	"memset ( pmv , 0 , ( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv ) )"		8047959	0					
ANR	8048524	Callee	memset		8047959	0					
ANR	8048525	Identifier	memset		8047959	0					
ANR	8048526	ArgumentList	pmv		8047959	1					
ANR	8048527	Argument	pmv		8047959	0					
ANR	8048528	Identifier	pmv		8047959	0					
ANR	8048529	Argument	0		8047959	1					
ANR	8048530	PrimaryExpression	0		8047959	0					
ANR	8048531	Argument	( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv )		8047959	2					
ANR	8048532	MultiplicativeExpression	( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv )		8047959	0		*			
ANR	8048533	AdditiveExpression	( width / 8 ) + 3		8047959	0		+			
ANR	8048534	MultiplicativeExpression	width / 8		8047959	0		/			
ANR	8048535	Identifier	width		8047959	0					
ANR	8048536	PrimaryExpression	8		8047959	1					
ANR	8048537	PrimaryExpression	3		8047959	1					
ANR	8048538	SizeofExpression	sizeof ( svq1_pmv )		8047959	1					
ANR	8048539	Sizeof	sizeof		8047959	0					
ANR	8048540	SizeofOperand	svq1_pmv		8047959	1					
ANR	8048541	ForStatement	for ( y = 0 ; y < height ; y += 16 )		8047959	3					
ANR	8048542	ForInit	y = 0 ;	191:17:3249:3254	8047959	0	True				
ANR	8048543	AssignmentExpression	y = 0		8047959	0		=			
ANR	8048544	Identifier	y		8047959	0					
ANR	8048545	PrimaryExpression	0		8047959	1					
ANR	8048546	Condition	y < height	191:24:3256:3265	8047959	1	True				
ANR	8048547	RelationalExpression	y < height		8047959	0		<			
ANR	8048548	Identifier	y		8047959	0					
ANR	8048549	Identifier	height		8047959	1					
ANR	8048550	AssignmentExpression	y += 16	191:36:3268:3274	8047959	2	True	+=			
ANR	8048551	Identifier	y		8047959	0					
ANR	8048552	PrimaryExpression	16		8047959	1					
ANR	8048553	CompoundStatement		187:45:3148:3148	8047959	3					
ANR	8048554	ForStatement	for ( x = 0 ; x < width ; x += 16 )		8047959	0					
ANR	8048555	ForInit	x = 0 ;	193:21:3301:3306	8047959	0	True				
ANR	8048556	AssignmentExpression	x = 0		8047959	0		=			
ANR	8048557	Identifier	x		8047959	0					
ANR	8048558	PrimaryExpression	0		8047959	1					
ANR	8048559	Condition	x < width	193:28:3308:3316	8047959	1	True				
ANR	8048560	RelationalExpression	x < width		8047959	0		<			
ANR	8048561	Identifier	x		8047959	0					
ANR	8048562	Identifier	width		8047959	1					
ANR	8048563	AssignmentExpression	x += 16	193:39:3319:3325	8047959	2	True	+=			
ANR	8048564	Identifier	x		8047959	0					
ANR	8048565	PrimaryExpression	16		8047959	1					
ANR	8048566	CompoundStatement		189:48:3199:3199	8047959	3					
ANR	8048567	ExpressionStatement	"result = svq1_decode_delta_block ( avctx , & s -> hdsp , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y , width , height )"	195:20:3351:3629	8047959	0	True				
ANR	8048568	AssignmentExpression	"result = svq1_decode_delta_block ( avctx , & s -> hdsp , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y , width , height )"		8047959	0		=			
ANR	8048569	Identifier	result		8047959	0					
ANR	8048570	CallExpression	"svq1_decode_delta_block ( avctx , & s -> hdsp , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y , width , height )"		8047959	1					
ANR	8048571	Callee	svq1_decode_delta_block		8047959	0					
ANR	8048572	Identifier	svq1_decode_delta_block		8047959	0					
ANR	8048573	ArgumentList	avctx		8047959	1					
ANR	8048574	Argument	avctx		8047959	0					
ANR	8048575	Identifier	avctx		8047959	0					
ANR	8048576	Argument	& s -> hdsp		8047959	1					
ANR	8048577	UnaryOperationExpression	& s -> hdsp		8047959	0					
ANR	8048578	UnaryOperator	&		8047959	0					
ANR	8048579	PtrMemberAccess	s -> hdsp		8047959	1					
ANR	8048580	Identifier	s		8047959	0					
ANR	8048581	Identifier	hdsp		8047959	1					
ANR	8048582	Argument	& s -> gb		8047959	2					
ANR	8048583	UnaryOperationExpression	& s -> gb		8047959	0					
ANR	8048584	UnaryOperator	&		8047959	0					
ANR	8048585	PtrMemberAccess	s -> gb		8047959	1					
ANR	8048586	Identifier	s		8047959	0					
ANR	8048587	Identifier	gb		8047959	1					
ANR	8048588	Argument	& current [ x ]		8047959	3					
ANR	8048589	UnaryOperationExpression	& current [ x ]		8047959	0					
ANR	8048590	UnaryOperator	&		8047959	0					
ANR	8048591	ArrayIndexing	current [ x ]		8047959	1					
ANR	8048592	Identifier	current		8047959	0					
ANR	8048593	Identifier	x		8047959	1					
ANR	8048594	Argument	previous		8047959	4					
ANR	8048595	Identifier	previous		8047959	0					
ANR	8048596	Argument	linesize		8047959	5					
ANR	8048597	Identifier	linesize		8047959	0					
ANR	8048598	Argument	pmv		8047959	6					
ANR	8048599	Identifier	pmv		8047959	0					
ANR	8048600	Argument	x		8047959	7					
ANR	8048601	Identifier	x		8047959	0					
ANR	8048602	Argument	y		8047959	8					
ANR	8048603	Identifier	y		8047959	0					
ANR	8048604	Argument	width		8047959	9					
ANR	8048605	Identifier	width		8047959	0					
ANR	8048606	Argument	height		8047959	10					
ANR	8048607	Identifier	height		8047959	0					
ANR	8048608	IfStatement	if ( result != 0 )		8047959	1					
ANR	8048609	Condition	result != 0	203:24:3656:3666	8047959	0	True				
ANR	8048610	EqualityExpression	result != 0		8047959	0		!=			
ANR	8048611	Identifier	result		8047959	0					
ANR	8048612	PrimaryExpression	0		8047959	1					
ANR	8048613	CompoundStatement		199:37:3540:3540	8047959	1					
ANR	8048614	ExpressionStatement	"av_dlog ( avctx , ""Error in svq1_decode_delta_block %i\\n"" , result )"	205:24:3696:3825	8047959	0	True				
ANR	8048615	CallExpression	"av_dlog ( avctx , ""Error in svq1_decode_delta_block %i\\n"" , result )"		8047959	0					
ANR	8048616	Callee	av_dlog		8047959	0					
ANR	8048617	Identifier	av_dlog		8047959	0					
ANR	8048618	ArgumentList	avctx		8047959	1					
ANR	8048619	Argument	avctx		8047959	0					
ANR	8048620	Identifier	avctx		8047959	0					
ANR	8048621	Argument	"""Error in svq1_decode_delta_block %i\\n"""		8047959	1					
ANR	8048622	PrimaryExpression	"""Error in svq1_decode_delta_block %i\\n"""		8047959	0					
ANR	8048623	Argument	result		8047959	2					
ANR	8048624	Identifier	result		8047959	0					
ANR	8048625	GotoStatement	goto err ;	211:24:3852:3860	8047959	1	True				
ANR	8048626	Identifier	err		8047959	0					
ANR	8048627	ExpressionStatement	pmv [ 0 ] . x = pmv [ 0 ] . y = 0	219:16:3923:3971	8047959	1	True				
ANR	8048628	AssignmentExpression	pmv [ 0 ] . x = pmv [ 0 ] . y = 0		8047959	0		=			
ANR	8048629	MemberAccess	pmv [ 0 ] . x		8047959	0					
ANR	8048630	ArrayIndexing	pmv [ 0 ]		8047959	0					
ANR	8048631	Identifier	pmv		8047959	0					
ANR	8048632	PrimaryExpression	0		8047959	1					
ANR	8048633	Identifier	x		8047959	1					
ANR	8048634	AssignmentExpression	pmv [ 0 ] . y = 0		8047959	1		=			
ANR	8048635	MemberAccess	pmv [ 0 ] . y		8047959	0					
ANR	8048636	ArrayIndexing	pmv [ 0 ]		8047959	0					
ANR	8048637	Identifier	pmv		8047959	0					
ANR	8048638	PrimaryExpression	0		8047959	1					
ANR	8048639	Identifier	y		8047959	1					
ANR	8048640	PrimaryExpression	0		8047959	1					
ANR	8048641	ExpressionStatement	current += 16 * linesize	225:16:3992:4016	8047959	2	True				
ANR	8048642	AssignmentExpression	current += 16 * linesize		8047959	0		+=			
ANR	8048643	Identifier	current		8047959	0					
ANR	8048644	MultiplicativeExpression	16 * linesize		8047959	1		*			
ANR	8048645	PrimaryExpression	16		8047959	0					
ANR	8048646	Identifier	linesize		8047959	1					
ANR	8048647	IfStatement	if ( ! s -> nonref )		8047959	21					
ANR	8048648	Condition	! s -> nonref	235:8:4062:4071	8047959	0	True				
ANR	8048649	UnaryOperationExpression	! s -> nonref		8047959	0					
ANR	8048650	UnaryOperator	!		8047959	0					
ANR	8048651	PtrMemberAccess	s -> nonref		8047959	1					
ANR	8048652	Identifier	s		8047959	0					
ANR	8048653	Identifier	nonref		8047959	1					
ANR	8048654	CompoundStatement		231:20:3945:3945	8047959	1					
ANR	8048655	ExpressionStatement	av_frame_unref ( s -> prev )	237:8:4085:4108	8047959	0	True				
ANR	8048656	CallExpression	av_frame_unref ( s -> prev )		8047959	0					
ANR	8048657	Callee	av_frame_unref		8047959	0					
ANR	8048658	Identifier	av_frame_unref		8047959	0					
ANR	8048659	ArgumentList	s -> prev		8047959	1					
ANR	8048660	Argument	s -> prev		8047959	0					
ANR	8048661	PtrMemberAccess	s -> prev		8047959	0					
ANR	8048662	Identifier	s		8047959	0					
ANR	8048663	Identifier	prev		8047959	1					
ANR	8048664	ExpressionStatement	"result = av_frame_ref ( s -> prev , cur )"	239:8:4119:4154	8047959	1	True				
ANR	8048665	AssignmentExpression	"result = av_frame_ref ( s -> prev , cur )"		8047959	0		=			
ANR	8048666	Identifier	result		8047959	0					
ANR	8048667	CallExpression	"av_frame_ref ( s -> prev , cur )"		8047959	1					
ANR	8048668	Callee	av_frame_ref		8047959	0					
ANR	8048669	Identifier	av_frame_ref		8047959	0					
ANR	8048670	ArgumentList	s -> prev		8047959	1					
ANR	8048671	Argument	s -> prev		8047959	0					
ANR	8048672	PtrMemberAccess	s -> prev		8047959	0					
ANR	8048673	Identifier	s		8047959	0					
ANR	8048674	Identifier	prev		8047959	1					
ANR	8048675	Argument	cur		8047959	1					
ANR	8048676	Identifier	cur		8047959	0					
ANR	8048677	IfStatement	if ( result < 0 )		8047959	2					
ANR	8048678	Condition	result < 0	241:12:4169:4178	8047959	0	True				
ANR	8048679	RelationalExpression	result < 0		8047959	0		<			
ANR	8048680	Identifier	result		8047959	0					
ANR	8048681	PrimaryExpression	0		8047959	1					
ANR	8048682	GotoStatement	goto err ;	243:12:4194:4202	8047959	1	True				
ANR	8048683	Identifier	err		8047959	0					
ANR	8048684	ExpressionStatement	* got_frame = 1	249:4:4218:4232	8047959	22	True				
ANR	8048685	AssignmentExpression	* got_frame = 1		8047959	0		=			
ANR	8048686	UnaryOperationExpression	* got_frame		8047959	0					
ANR	8048687	UnaryOperator	*		8047959	0					
ANR	8048688	Identifier	got_frame		8047959	1					
ANR	8048689	PrimaryExpression	1		8047959	1					
ANR	8048690	ExpressionStatement	result = buf_size	251:4:4239:4260	8047959	23	True				
ANR	8048691	AssignmentExpression	result = buf_size		8047959	0		=			
ANR	8048692	Identifier	result		8047959	0					
ANR	8048693	Identifier	buf_size		8047959	1					
ANR	8048694	Label	err :	255:0:4265:4268	8047959	24	True				
ANR	8048695	Identifier	err		8047959	0					
ANR	8048696	ExpressionStatement	av_free ( pmv )	257:4:4275:4287	8047959	25	True				
ANR	8048697	CallExpression	av_free ( pmv )		8047959	0					
ANR	8048698	Callee	av_free		8047959	0					
ANR	8048699	Identifier	av_free		8047959	0					
ANR	8048700	ArgumentList	pmv		8047959	1					
ANR	8048701	Argument	pmv		8047959	0					
ANR	8048702	Identifier	pmv		8047959	0					
ANR	8048703	ReturnStatement	return result ;	259:4:4294:4307	8047959	26	True				
ANR	8048704	Identifier	result		8047959	0					
ANR	8048705	ReturnType	static int		8047959	1					
ANR	8048706	Identifier	svq1_decode_frame		8047959	2					
ANR	8048707	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		8047959	3					
ANR	8048708	Parameter	AVCodecContext * avctx	1:29:29:49	8047959	0	True				
ANR	8048709	ParameterType	AVCodecContext *		8047959	0					
ANR	8048710	Identifier	avctx		8047959	1					
ANR	8048711	Parameter	void * data	1:52:52:61	8047959	1	True				
ANR	8048712	ParameterType	void *		8047959	0					
ANR	8048713	Identifier	data		8047959	1					
ANR	8048714	Parameter	int * got_frame	3:29:94:107	8047959	2	True				
ANR	8048715	ParameterType	int *		8047959	0					
ANR	8048716	Identifier	got_frame		8047959	1					
ANR	8048717	Parameter	AVPacket * avpkt	3:45:110:124	8047959	3	True				
ANR	8048718	ParameterType	AVPacket *		8047959	0					
ANR	8048719	Identifier	avpkt		8047959	1					
ANR	8048720	CFGEntryNode	ENTRY		8047959		True				
ANR	8048721	CFGExitNode	EXIT		8047959		True				
ANR	8048722	Symbol	av_malloc		8047959						
ANR	8048723	Symbol	ENOMEM		8047959						
ANR	8048724	Symbol	data		8047959						
ANR	8048725	Symbol	get_bits		8047959						
ANR	8048726	Symbol	avpkt		8047959						
ANR	8048727	Symbol	s -> prev -> data		8047959						
ANR	8048728	Symbol	s -> prev		8047959						
ANR	8048729	Symbol	* src		8047959						
ANR	8048730	Symbol	cur -> data		8047959						
ANR	8048731	Symbol	linesize		8047959						
ANR	8048732	Symbol	cur -> linesize		8047959						
ANR	8048733	Symbol	ff_get_buffer		8047959						
ANR	8048734	Symbol	* * cur		8047959						
ANR	8048735	Symbol	* cur		8047959						
ANR	8048736	Symbol	got_frame		8047959						
ANR	8048737	Symbol	pmv		8047959						
ANR	8048738	Symbol	~0x70		8047959						
ANR	8048739	Symbol	s -> width		8047959						
ANR	8048740	Symbol	avctx -> flags		8047959						
ANR	8048741	Symbol	svq1_decode_block_intra		8047959						
ANR	8048742	Symbol	AVDISCARD_NONREF		8047959						
ANR	8048743	Symbol	height		8047959						
ANR	8048744	Symbol	* got_frame		8047959						
ANR	8048745	Symbol	buf_size		8047959						
ANR	8048746	Symbol	s -> frame_code		8047959						
ANR	8048747	Symbol	s -> prev -> height		8047959						
ANR	8048748	Symbol	svq1_decode_delta_block		8047959						
ANR	8048749	Symbol	AVDISCARD_NONKEY		8047959						
ANR	8048750	Symbol	* * * s		8047959						
ANR	8048751	Symbol	* * s -> prev		8047959						
ANR	8048752	Symbol	& s -> gb		8047959						
ANR	8048753	Symbol	* avctx		8047959						
ANR	8048754	Symbol	ff_set_dimensions		8047959						
ANR	8048755	Symbol	pmv [ 0 ] . y		8047959						
ANR	8048756	Symbol	cur -> pict_type		8047959						
ANR	8048757	Symbol	FFALIGN		8047959						
ANR	8048758	Symbol	avpkt -> data		8047959						
ANR	8048759	Symbol	pmv [ 0 ] . x		8047959						
ANR	8048760	Symbol	AV_LOG_INFO		8047959						
ANR	8048761	Symbol	cur		8047959						
ANR	8048762	Symbol	AV_GET_BUFFER_FLAG_REF		8047959						
ANR	8048763	Symbol	* pmv		8047959						
ANR	8048764	Symbol	avctx -> skip_frame		8047959						
ANR	8048765	Symbol	s -> prev -> width		8047959						
ANR	8048766	Symbol	av_frame_ref		8047959						
ANR	8048767	Symbol	* s -> prev		8047959						
ANR	8048768	Symbol	s -> nonref		8047959						
ANR	8048769	Symbol	result		8047959						
ANR	8048770	Symbol	current		8047959						
ANR	8048771	Symbol	* * s		8047959						
ANR	8048772	Symbol	avpkt -> size		8047959						
ANR	8048773	Symbol	AV_PICTURE_TYPE_I		8047959						
ANR	8048774	Symbol	avctx		8047959						
ANR	8048775	Symbol	* avpkt		8047959						
ANR	8048776	Symbol	previous		8047959						
ANR	8048777	Symbol	AV_LOG_ERROR		8047959						
ANR	8048778	Symbol	src		8047959						
ANR	8048779	Symbol	AVDISCARD_ALL		8047959						
ANR	8048780	Symbol	* cur -> data		8047959						
ANR	8048781	Symbol	i		8047959						
ANR	8048782	Symbol	avctx -> priv_data		8047959						
ANR	8048783	Symbol	* s -> prev -> data		8047959						
ANR	8048784	Symbol	buf		8047959						
ANR	8048785	Symbol	s		8047959						
ANR	8048786	Symbol	* i		8047959						
ANR	8048787	Symbol	s -> height		8047959						
ANR	8048788	Symbol	svq1_decode_frame_header		8047959						
ANR	8048789	Symbol	x		8047959						
ANR	8048790	Symbol	width		8047959						
ANR	8048791	Symbol	y		8047959						
ANR	8048792	Symbol	AVERROR_INVALIDDATA		8047959						
ANR	8048793	Symbol	AVERROR		8047959						
ANR	8048794	Symbol	* s		8047959						
ANR	8048795	Symbol	& s -> hdsp		8047959						
ANR	8048796	Symbol	* cur -> linesize		8047959						
ANR	8048797	Symbol	CODEC_FLAG_GRAY		8047959						
