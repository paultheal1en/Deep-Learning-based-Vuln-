command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	13791	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNCC_01_1.c								
ANR	13792	Function	ff_h264_chroma422_dc_dequant_idct	1:0:0:971							
ANR	13793	FunctionDef	"ff_h264_chroma422_dc_dequant_idct (int16_t * _block , int qmul)"		13792	0					
ANR	13794	CompoundStatement		1:72:72:971	13792	0					
ANR	13795	IdentifierDeclStatement	const int stride = 16 * 2 ;	3:4:79:101	13792	0	True				
ANR	13796	IdentifierDecl	stride = 16 * 2		13792	0					
ANR	13797	IdentifierDeclType	const int		13792	0					
ANR	13798	Identifier	stride		13792	1					
ANR	13799	AssignmentExpression	stride = 16 * 2		13792	2		=			
ANR	13800	Identifier	stride		13792	0					
ANR	13801	MultiplicativeExpression	16 * 2		13792	1		*			
ANR	13802	PrimaryExpression	16		13792	0					
ANR	13803	PrimaryExpression	2		13792	1					
ANR	13804	IdentifierDeclStatement	const int xStride = 16 ;	5:4:108:129	13792	1	True				
ANR	13805	IdentifierDecl	xStride = 16		13792	0					
ANR	13806	IdentifierDeclType	const int		13792	0					
ANR	13807	Identifier	xStride		13792	1					
ANR	13808	AssignmentExpression	xStride = 16		13792	2		=			
ANR	13809	Identifier	xStride		13792	0					
ANR	13810	PrimaryExpression	16		13792	1					
ANR	13811	IdentifierDeclStatement	int i ;	7:4:136:141	13792	2	True				
ANR	13812	IdentifierDecl	i		13792	0					
ANR	13813	IdentifierDeclType	int		13792	0					
ANR	13814	Identifier	i		13792	1					
ANR	13815	IdentifierDeclStatement	int temp [ 8 ] ;	9:4:148:159	13792	3	True				
ANR	13816	IdentifierDecl	temp [ 8 ]		13792	0					
ANR	13817	IdentifierDeclType	int [ 8 ]		13792	0					
ANR	13818	Identifier	temp		13792	1					
ANR	13819	PrimaryExpression	8		13792	2					
ANR	13820	Statement	static	11:4:166:171	13792	4	True				
ANR	13821	IdentifierDeclStatement	"const uint8_t x_offset [ 2 ] = { 0 , 16 } ;"	11:11:173:206	13792	5	True				
ANR	13822	IdentifierDecl	"x_offset [ 2 ] = { 0 , 16 }"		13792	0					
ANR	13823	IdentifierDeclType	const uint8_t [ 2 ]		13792	0					
ANR	13824	Identifier	x_offset		13792	1					
ANR	13825	PrimaryExpression	2		13792	2					
ANR	13826	AssignmentExpression	"x_offset [ 2 ] = { 0 , 16 }"		13792	3		=			
ANR	13827	Identifier	x_offset		13792	0					
ANR	13828	InitializerList	0		13792	1					
ANR	13829	PrimaryExpression	0		13792	0					
ANR	13830	PrimaryExpression	16		13792	1					
ANR	13831	IdentifierDeclStatement	dctcoef * block = ( dctcoef * ) _block ;	13:4:213:246	13792	6	True				
ANR	13832	IdentifierDecl	* block = ( dctcoef * ) _block		13792	0					
ANR	13833	IdentifierDeclType	dctcoef *		13792	0					
ANR	13834	Identifier	block		13792	1					
ANR	13835	AssignmentExpression	* block = ( dctcoef * ) _block		13792	2		=			
ANR	13836	Identifier	block		13792	0					
ANR	13837	CastExpression	( dctcoef * ) _block		13792	1					
ANR	13838	CastTarget	dctcoef *		13792	0					
ANR	13839	Identifier	_block		13792	1					
ANR	13840	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		13792	7					
ANR	13841	ForInit	i = 0 ;	17:8:259:262	13792	0	True				
ANR	13842	AssignmentExpression	i = 0		13792	0		=			
ANR	13843	Identifier	i		13792	0					
ANR	13844	PrimaryExpression	0		13792	1					
ANR	13845	Condition	i < 4	17:13:264:266	13792	1	True				
ANR	13846	RelationalExpression	i < 4		13792	0		<			
ANR	13847	Identifier	i		13792	0					
ANR	13848	PrimaryExpression	4		13792	1					
ANR	13849	PostIncDecOperationExpression	i ++	17:18:269:271	13792	2	True				
ANR	13850	Identifier	i		13792	0					
ANR	13851	IncDec	++		13792	1					
ANR	13852	CompoundStatement		17:22:200:200	13792	3					
ANR	13853	ExpressionStatement	temp [ 2 * i + 0 ] = block [ stride * i + xStride * 0 ] + block [ stride * i + xStride * 1 ]	19:8:284:355	13792	0	True				
ANR	13854	AssignmentExpression	temp [ 2 * i + 0 ] = block [ stride * i + xStride * 0 ] + block [ stride * i + xStride * 1 ]		13792	0		=			
ANR	13855	ArrayIndexing	temp [ 2 * i + 0 ]		13792	0					
ANR	13856	Identifier	temp		13792	0					
ANR	13857	AdditiveExpression	2 * i + 0		13792	1		+			
ANR	13858	MultiplicativeExpression	2 * i		13792	0		*			
ANR	13859	PrimaryExpression	2		13792	0					
ANR	13860	Identifier	i		13792	1					
ANR	13861	PrimaryExpression	0		13792	1					
ANR	13862	AdditiveExpression	block [ stride * i + xStride * 0 ] + block [ stride * i + xStride * 1 ]		13792	1		+			
ANR	13863	ArrayIndexing	block [ stride * i + xStride * 0 ]		13792	0					
ANR	13864	Identifier	block		13792	0					
ANR	13865	AdditiveExpression	stride * i + xStride * 0		13792	1		+			
ANR	13866	MultiplicativeExpression	stride * i		13792	0		*			
ANR	13867	Identifier	stride		13792	0					
ANR	13868	Identifier	i		13792	1					
ANR	13869	MultiplicativeExpression	xStride * 0		13792	1		*			
ANR	13870	Identifier	xStride		13792	0					
ANR	13871	PrimaryExpression	0		13792	1					
ANR	13872	ArrayIndexing	block [ stride * i + xStride * 1 ]		13792	1					
ANR	13873	Identifier	block		13792	0					
ANR	13874	AdditiveExpression	stride * i + xStride * 1		13792	1		+			
ANR	13875	MultiplicativeExpression	stride * i		13792	0		*			
ANR	13876	Identifier	stride		13792	0					
ANR	13877	Identifier	i		13792	1					
ANR	13878	MultiplicativeExpression	xStride * 1		13792	1		*			
ANR	13879	Identifier	xStride		13792	0					
ANR	13880	PrimaryExpression	1		13792	1					
ANR	13881	ExpressionStatement	temp [ 2 * i + 1 ] = block [ stride * i + xStride * 0 ] - block [ stride * i + xStride * 1 ]	21:8:366:437	13792	1	True				
ANR	13882	AssignmentExpression	temp [ 2 * i + 1 ] = block [ stride * i + xStride * 0 ] - block [ stride * i + xStride * 1 ]		13792	0		=			
ANR	13883	ArrayIndexing	temp [ 2 * i + 1 ]		13792	0					
ANR	13884	Identifier	temp		13792	0					
ANR	13885	AdditiveExpression	2 * i + 1		13792	1		+			
ANR	13886	MultiplicativeExpression	2 * i		13792	0		*			
ANR	13887	PrimaryExpression	2		13792	0					
ANR	13888	Identifier	i		13792	1					
ANR	13889	PrimaryExpression	1		13792	1					
ANR	13890	AdditiveExpression	block [ stride * i + xStride * 0 ] - block [ stride * i + xStride * 1 ]		13792	1		-			
ANR	13891	ArrayIndexing	block [ stride * i + xStride * 0 ]		13792	0					
ANR	13892	Identifier	block		13792	0					
ANR	13893	AdditiveExpression	stride * i + xStride * 0		13792	1		+			
ANR	13894	MultiplicativeExpression	stride * i		13792	0		*			
ANR	13895	Identifier	stride		13792	0					
ANR	13896	Identifier	i		13792	1					
ANR	13897	MultiplicativeExpression	xStride * 0		13792	1		*			
ANR	13898	Identifier	xStride		13792	0					
ANR	13899	PrimaryExpression	0		13792	1					
ANR	13900	ArrayIndexing	block [ stride * i + xStride * 1 ]		13792	1					
ANR	13901	Identifier	block		13792	0					
ANR	13902	AdditiveExpression	stride * i + xStride * 1		13792	1		+			
ANR	13903	MultiplicativeExpression	stride * i		13792	0		*			
ANR	13904	Identifier	stride		13792	0					
ANR	13905	Identifier	i		13792	1					
ANR	13906	MultiplicativeExpression	xStride * 1		13792	1		*			
ANR	13907	Identifier	xStride		13792	0					
ANR	13908	PrimaryExpression	1		13792	1					
ANR	13909	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		13792	8					
ANR	13910	ForInit	i = 0 ;	27:8:457:460	13792	0	True				
ANR	13911	AssignmentExpression	i = 0		13792	0		=			
ANR	13912	Identifier	i		13792	0					
ANR	13913	PrimaryExpression	0		13792	1					
ANR	13914	Condition	i < 2	27:13:462:464	13792	1	True				
ANR	13915	RelationalExpression	i < 2		13792	0		<			
ANR	13916	Identifier	i		13792	0					
ANR	13917	PrimaryExpression	2		13792	1					
ANR	13918	PostIncDecOperationExpression	i ++	27:18:467:469	13792	2	True				
ANR	13919	Identifier	i		13792	0					
ANR	13920	IncDec	++		13792	1					
ANR	13921	CompoundStatement		37:8:599:638	13792	3					
ANR	13922	IdentifierDeclStatement	const int offset = x_offset [ i ] ;	29:8:482:511	13792	0	True				
ANR	13923	IdentifierDecl	offset = x_offset [ i ]		13792	0					
ANR	13924	IdentifierDeclType	const int		13792	0					
ANR	13925	Identifier	offset		13792	1					
ANR	13926	AssignmentExpression	offset = x_offset [ i ]		13792	2		=			
ANR	13927	Identifier	offset		13792	0					
ANR	13928	ArrayIndexing	x_offset [ i ]		13792	1					
ANR	13929	Identifier	x_offset		13792	0					
ANR	13930	Identifier	i		13792	1					
ANR	13931	IdentifierDeclStatement	const int z0 = temp [ 2 * 0 + i ] + temp [ 2 * 2 + i ] ;	31:8:522:561	13792	1	True				
ANR	13932	IdentifierDecl	z0 = temp [ 2 * 0 + i ] + temp [ 2 * 2 + i ]		13792	0					
ANR	13933	IdentifierDeclType	const int		13792	0					
ANR	13934	Identifier	z0		13792	1					
ANR	13935	AssignmentExpression	z0 = temp [ 2 * 0 + i ] + temp [ 2 * 2 + i ]		13792	2		=			
ANR	13936	Identifier	z0		13792	0					
ANR	13937	AdditiveExpression	temp [ 2 * 0 + i ] + temp [ 2 * 2 + i ]		13792	1		+			
ANR	13938	ArrayIndexing	temp [ 2 * 0 + i ]		13792	0					
ANR	13939	Identifier	temp		13792	0					
ANR	13940	AdditiveExpression	2 * 0 + i		13792	1		+			
ANR	13941	MultiplicativeExpression	2 * 0		13792	0		*			
ANR	13942	PrimaryExpression	2		13792	0					
ANR	13943	PrimaryExpression	0		13792	1					
ANR	13944	Identifier	i		13792	1					
ANR	13945	ArrayIndexing	temp [ 2 * 2 + i ]		13792	1					
ANR	13946	Identifier	temp		13792	0					
ANR	13947	AdditiveExpression	2 * 2 + i		13792	1		+			
ANR	13948	MultiplicativeExpression	2 * 2		13792	0		*			
ANR	13949	PrimaryExpression	2		13792	0					
ANR	13950	PrimaryExpression	2		13792	1					
ANR	13951	Identifier	i		13792	1					
ANR	13952	IdentifierDeclStatement	const int z1 = temp [ 2 * 0 + i ] - temp [ 2 * 2 + i ] ;	33:8:572:611	13792	2	True				
ANR	13953	IdentifierDecl	z1 = temp [ 2 * 0 + i ] - temp [ 2 * 2 + i ]		13792	0					
ANR	13954	IdentifierDeclType	const int		13792	0					
ANR	13955	Identifier	z1		13792	1					
ANR	13956	AssignmentExpression	z1 = temp [ 2 * 0 + i ] - temp [ 2 * 2 + i ]		13792	2		=			
ANR	13957	Identifier	z1		13792	0					
ANR	13958	AdditiveExpression	temp [ 2 * 0 + i ] - temp [ 2 * 2 + i ]		13792	1		-			
ANR	13959	ArrayIndexing	temp [ 2 * 0 + i ]		13792	0					
ANR	13960	Identifier	temp		13792	0					
ANR	13961	AdditiveExpression	2 * 0 + i		13792	1		+			
ANR	13962	MultiplicativeExpression	2 * 0		13792	0		*			
ANR	13963	PrimaryExpression	2		13792	0					
ANR	13964	PrimaryExpression	0		13792	1					
ANR	13965	Identifier	i		13792	1					
ANR	13966	ArrayIndexing	temp [ 2 * 2 + i ]		13792	1					
ANR	13967	Identifier	temp		13792	0					
ANR	13968	AdditiveExpression	2 * 2 + i		13792	1		+			
ANR	13969	MultiplicativeExpression	2 * 2		13792	0		*			
ANR	13970	PrimaryExpression	2		13792	0					
ANR	13971	PrimaryExpression	2		13792	1					
ANR	13972	Identifier	i		13792	1					
ANR	13973	IdentifierDeclStatement	const int z2 = temp [ 2 * 1 + i ] - temp [ 2 * 3 + i ] ;	35:8:622:661	13792	3	True				
ANR	13974	IdentifierDecl	z2 = temp [ 2 * 1 + i ] - temp [ 2 * 3 + i ]		13792	0					
ANR	13975	IdentifierDeclType	const int		13792	0					
ANR	13976	Identifier	z2		13792	1					
ANR	13977	AssignmentExpression	z2 = temp [ 2 * 1 + i ] - temp [ 2 * 3 + i ]		13792	2		=			
ANR	13978	Identifier	z2		13792	0					
ANR	13979	AdditiveExpression	temp [ 2 * 1 + i ] - temp [ 2 * 3 + i ]		13792	1		-			
ANR	13980	ArrayIndexing	temp [ 2 * 1 + i ]		13792	0					
ANR	13981	Identifier	temp		13792	0					
ANR	13982	AdditiveExpression	2 * 1 + i		13792	1		+			
ANR	13983	MultiplicativeExpression	2 * 1		13792	0		*			
ANR	13984	PrimaryExpression	2		13792	0					
ANR	13985	PrimaryExpression	1		13792	1					
ANR	13986	Identifier	i		13792	1					
ANR	13987	ArrayIndexing	temp [ 2 * 3 + i ]		13792	1					
ANR	13988	Identifier	temp		13792	0					
ANR	13989	AdditiveExpression	2 * 3 + i		13792	1		+			
ANR	13990	MultiplicativeExpression	2 * 3		13792	0		*			
ANR	13991	PrimaryExpression	2		13792	0					
ANR	13992	PrimaryExpression	3		13792	1					
ANR	13993	Identifier	i		13792	1					
ANR	13994	IdentifierDeclStatement	const int z3 = temp [ 2 * 1 + i ] + temp [ 2 * 3 + i ] ;	37:8:672:711	13792	4	True				
ANR	13995	IdentifierDecl	z3 = temp [ 2 * 1 + i ] + temp [ 2 * 3 + i ]		13792	0					
ANR	13996	IdentifierDeclType	const int		13792	0					
ANR	13997	Identifier	z3		13792	1					
ANR	13998	AssignmentExpression	z3 = temp [ 2 * 1 + i ] + temp [ 2 * 3 + i ]		13792	2		=			
ANR	13999	Identifier	z3		13792	0					
ANR	14000	AdditiveExpression	temp [ 2 * 1 + i ] + temp [ 2 * 3 + i ]		13792	1		+			
ANR	14001	ArrayIndexing	temp [ 2 * 1 + i ]		13792	0					
ANR	14002	Identifier	temp		13792	0					
ANR	14003	AdditiveExpression	2 * 1 + i		13792	1		+			
ANR	14004	MultiplicativeExpression	2 * 1		13792	0		*			
ANR	14005	PrimaryExpression	2		13792	0					
ANR	14006	PrimaryExpression	1		13792	1					
ANR	14007	Identifier	i		13792	1					
ANR	14008	ArrayIndexing	temp [ 2 * 3 + i ]		13792	1					
ANR	14009	Identifier	temp		13792	0					
ANR	14010	AdditiveExpression	2 * 3 + i		13792	1		+			
ANR	14011	MultiplicativeExpression	2 * 3		13792	0		*			
ANR	14012	PrimaryExpression	2		13792	0					
ANR	14013	PrimaryExpression	3		13792	1					
ANR	14014	Identifier	i		13792	1					
ANR	14015	ExpressionStatement	block [ stride * 0 + offset ] = ( ( z0 + z3 ) * qmul + 128 ) >> 8	41:8:724:775	13792	5	True				
ANR	14016	AssignmentExpression	block [ stride * 0 + offset ] = ( ( z0 + z3 ) * qmul + 128 ) >> 8		13792	0		=			
ANR	14017	ArrayIndexing	block [ stride * 0 + offset ]		13792	0					
ANR	14018	Identifier	block		13792	0					
ANR	14019	AdditiveExpression	stride * 0 + offset		13792	1		+			
ANR	14020	MultiplicativeExpression	stride * 0		13792	0		*			
ANR	14021	Identifier	stride		13792	0					
ANR	14022	PrimaryExpression	0		13792	1					
ANR	14023	Identifier	offset		13792	1					
ANR	14024	ShiftExpression	( ( z0 + z3 ) * qmul + 128 ) >> 8		13792	1		>>			
ANR	14025	AdditiveExpression	( z0 + z3 ) * qmul + 128		13792	0		+			
ANR	14026	MultiplicativeExpression	( z0 + z3 ) * qmul		13792	0		*			
ANR	14027	AdditiveExpression	z0 + z3		13792	0		+			
ANR	14028	Identifier	z0		13792	0					
ANR	14029	Identifier	z3		13792	1					
ANR	14030	Identifier	qmul		13792	1					
ANR	14031	PrimaryExpression	128		13792	1					
ANR	14032	PrimaryExpression	8		13792	1					
ANR	14033	ExpressionStatement	block [ stride * 1 + offset ] = ( ( z1 + z2 ) * qmul + 128 ) >> 8	43:8:786:837	13792	6	True				
ANR	14034	AssignmentExpression	block [ stride * 1 + offset ] = ( ( z1 + z2 ) * qmul + 128 ) >> 8		13792	0		=			
ANR	14035	ArrayIndexing	block [ stride * 1 + offset ]		13792	0					
ANR	14036	Identifier	block		13792	0					
ANR	14037	AdditiveExpression	stride * 1 + offset		13792	1		+			
ANR	14038	MultiplicativeExpression	stride * 1		13792	0		*			
ANR	14039	Identifier	stride		13792	0					
ANR	14040	PrimaryExpression	1		13792	1					
ANR	14041	Identifier	offset		13792	1					
ANR	14042	ShiftExpression	( ( z1 + z2 ) * qmul + 128 ) >> 8		13792	1		>>			
ANR	14043	AdditiveExpression	( z1 + z2 ) * qmul + 128		13792	0		+			
ANR	14044	MultiplicativeExpression	( z1 + z2 ) * qmul		13792	0		*			
ANR	14045	AdditiveExpression	z1 + z2		13792	0		+			
ANR	14046	Identifier	z1		13792	0					
ANR	14047	Identifier	z2		13792	1					
ANR	14048	Identifier	qmul		13792	1					
ANR	14049	PrimaryExpression	128		13792	1					
ANR	14050	PrimaryExpression	8		13792	1					
ANR	14051	ExpressionStatement	block [ stride * 2 + offset ] = ( ( z1 - z2 ) * qmul + 128 ) >> 8	45:8:848:899	13792	7	True				
ANR	14052	AssignmentExpression	block [ stride * 2 + offset ] = ( ( z1 - z2 ) * qmul + 128 ) >> 8		13792	0		=			
ANR	14053	ArrayIndexing	block [ stride * 2 + offset ]		13792	0					
ANR	14054	Identifier	block		13792	0					
ANR	14055	AdditiveExpression	stride * 2 + offset		13792	1		+			
ANR	14056	MultiplicativeExpression	stride * 2		13792	0		*			
ANR	14057	Identifier	stride		13792	0					
ANR	14058	PrimaryExpression	2		13792	1					
ANR	14059	Identifier	offset		13792	1					
ANR	14060	ShiftExpression	( ( z1 - z2 ) * qmul + 128 ) >> 8		13792	1		>>			
ANR	14061	AdditiveExpression	( z1 - z2 ) * qmul + 128		13792	0		+			
ANR	14062	MultiplicativeExpression	( z1 - z2 ) * qmul		13792	0		*			
ANR	14063	AdditiveExpression	z1 - z2		13792	0		-			
ANR	14064	Identifier	z1		13792	0					
ANR	14065	Identifier	z2		13792	1					
ANR	14066	Identifier	qmul		13792	1					
ANR	14067	PrimaryExpression	128		13792	1					
ANR	14068	PrimaryExpression	8		13792	1					
ANR	14069	ExpressionStatement	block [ stride * 3 + offset ] = ( ( z0 - z3 ) * qmul + 128 ) >> 8	47:8:910:961	13792	8	True				
ANR	14070	AssignmentExpression	block [ stride * 3 + offset ] = ( ( z0 - z3 ) * qmul + 128 ) >> 8		13792	0		=			
ANR	14071	ArrayIndexing	block [ stride * 3 + offset ]		13792	0					
ANR	14072	Identifier	block		13792	0					
ANR	14073	AdditiveExpression	stride * 3 + offset		13792	1		+			
ANR	14074	MultiplicativeExpression	stride * 3		13792	0		*			
ANR	14075	Identifier	stride		13792	0					
ANR	14076	PrimaryExpression	3		13792	1					
ANR	14077	Identifier	offset		13792	1					
ANR	14078	ShiftExpression	( ( z0 - z3 ) * qmul + 128 ) >> 8		13792	1		>>			
ANR	14079	AdditiveExpression	( z0 - z3 ) * qmul + 128		13792	0		+			
ANR	14080	MultiplicativeExpression	( z0 - z3 ) * qmul		13792	0		*			
ANR	14081	AdditiveExpression	z0 - z3		13792	0		-			
ANR	14082	Identifier	z0		13792	0					
ANR	14083	Identifier	z3		13792	1					
ANR	14084	Identifier	qmul		13792	1					
ANR	14085	PrimaryExpression	128		13792	1					
ANR	14086	PrimaryExpression	8		13792	1					
ANR	14087	ReturnType	void FUNCC		13792	1					
ANR	14088	Identifier	( ff_h264_chroma422_dc_dequant_idct )		13792	2					
ANR	14089	Identifier	ff_h264_chroma422_dc_dequant_idct		13792	3					
ANR	14090	ParameterList	"int16_t * _block , int qmul"		13792	4					
ANR	14091	Parameter	int16_t * _block	1:46:46:60	13792	0	True				
ANR	14092	ParameterType	int16_t *		13792	0					
ANR	14093	Identifier	_block		13792	1					
ANR	14094	Parameter	int qmul	1:63:63:70	13792	1	True				
ANR	14095	ParameterType	int		13792	0					
ANR	14096	Identifier	qmul		13792	1					
ANR	14097	CFGEntryNode	ENTRY		13792		True				
ANR	14098	CFGExitNode	EXIT		13792		True				
ANR	14099	Symbol	* stride		13792						
ANR	14100	Symbol	temp		13792						
ANR	14101	Symbol	offset		13792						
ANR	14102	Symbol	qmul		13792						
ANR	14103	Symbol	i		13792						
ANR	14104	Symbol	stride		13792						
ANR	14105	Symbol	x_offset		13792						
ANR	14106	Symbol	* temp		13792						
ANR	14107	Symbol	* block		13792						
ANR	14108	Symbol	* i		13792						
ANR	14109	Symbol	z0		13792						
ANR	14110	Symbol	xStride		13792						
ANR	14111	Symbol	z1		13792						
ANR	14112	Symbol	z2		13792						
ANR	14113	Symbol	z3		13792						
ANR	14114	Symbol	* offset		13792						
ANR	14115	Symbol	_block		13792						
ANR	14116	Symbol	block		13792						
ANR	14117	Symbol	* xStride		13792						
ANR	14118	Symbol	* x_offset		13792						
