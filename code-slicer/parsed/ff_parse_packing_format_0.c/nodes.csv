command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3599074	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_parse_packing_format_0.c								
ANR	3599075	Function	ff_parse_packing_format	1:0:0:398							
ANR	3599076	FunctionDef	"ff_parse_packing_format (int * ret , const char * arg , void * log_ctx)"		3599075	0					
ANR	3599077	CompoundStatement		3:0:71:398	3599075	0					
ANR	3599078	IdentifierDeclStatement	char * tail ;	5:4:78:88	3599075	0	True				
ANR	3599079	IdentifierDecl	* tail		3599075	0					
ANR	3599080	IdentifierDeclType	char *		3599075	0					
ANR	3599081	Identifier	tail		3599075	1					
ANR	3599082	IdentifierDeclStatement	"int planar = strtol ( arg , & tail , 10 ) ;"	7:4:95:130	3599075	1	True				
ANR	3599083	IdentifierDecl	"planar = strtol ( arg , & tail , 10 )"		3599075	0					
ANR	3599084	IdentifierDeclType	int		3599075	0					
ANR	3599085	Identifier	planar		3599075	1					
ANR	3599086	AssignmentExpression	"planar = strtol ( arg , & tail , 10 )"		3599075	2		=			
ANR	3599087	Identifier	planar		3599075	0					
ANR	3599088	CallExpression	"strtol ( arg , & tail , 10 )"		3599075	1					
ANR	3599089	Callee	strtol		3599075	0					
ANR	3599090	Identifier	strtol		3599075	0					
ANR	3599091	ArgumentList	arg		3599075	1					
ANR	3599092	Argument	arg		3599075	0					
ANR	3599093	Identifier	arg		3599075	0					
ANR	3599094	Argument	& tail		3599075	1					
ANR	3599095	UnaryOperationExpression	& tail		3599075	0					
ANR	3599096	UnaryOperator	&		3599075	0					
ANR	3599097	Identifier	tail		3599075	1					
ANR	3599098	Argument	10		3599075	2					
ANR	3599099	PrimaryExpression	10		3599075	0					
ANR	3599100	IfStatement	if ( * tail )		3599075	2					
ANR	3599101	Condition	* tail	9:8:141:145	3599075	0	True				
ANR	3599102	UnaryOperationExpression	* tail		3599075	0					
ANR	3599103	UnaryOperator	*		3599075	0					
ANR	3599104	Identifier	tail		3599075	1					
ANR	3599105	CompoundStatement		7:15:76:76	3599075	1					
ANR	3599106	ExpressionStatement	"planar = ( strcmp ( arg , ""packed"" ) != 0 )"	11:8:159:196	3599075	0	True				
ANR	3599107	AssignmentExpression	"planar = ( strcmp ( arg , ""packed"" ) != 0 )"		3599075	0		=			
ANR	3599108	Identifier	planar		3599075	0					
ANR	3599109	EqualityExpression	"strcmp ( arg , ""packed"" ) != 0"		3599075	1		!=			
ANR	3599110	CallExpression	"strcmp ( arg , ""packed"" )"		3599075	0					
ANR	3599111	Callee	strcmp		3599075	0					
ANR	3599112	Identifier	strcmp		3599075	0					
ANR	3599113	ArgumentList	arg		3599075	1					
ANR	3599114	Argument	arg		3599075	0					
ANR	3599115	Identifier	arg		3599075	0					
ANR	3599116	Argument	"""packed"""		3599075	1					
ANR	3599117	PrimaryExpression	"""packed"""		3599075	0					
ANR	3599118	PrimaryExpression	0		3599075	1					
ANR	3599119	ElseStatement	else		3599075	0					
ANR	3599120	IfStatement	if ( planar != 0 && planar != 1 )		3599075	0					
ANR	3599121	Condition	planar != 0 && planar != 1	13:15:214:239	3599075	0	True				
ANR	3599122	AndExpression	planar != 0 && planar != 1		3599075	0		&&			
ANR	3599123	EqualityExpression	planar != 0		3599075	0		!=			
ANR	3599124	Identifier	planar		3599075	0					
ANR	3599125	PrimaryExpression	0		3599075	1					
ANR	3599126	EqualityExpression	planar != 1		3599075	1		!=			
ANR	3599127	Identifier	planar		3599075	0					
ANR	3599128	PrimaryExpression	1		3599075	1					
ANR	3599129	CompoundStatement		11:43:170:170	3599075	1					
ANR	3599130	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Invalid packing format '%s'\\n"" , arg )"	15:8:253:320	3599075	0	True				
ANR	3599131	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Invalid packing format '%s'\\n"" , arg )"		3599075	0					
ANR	3599132	Callee	av_log		3599075	0					
ANR	3599133	Identifier	av_log		3599075	0					
ANR	3599134	ArgumentList	log_ctx		3599075	1					
ANR	3599135	Argument	log_ctx		3599075	0					
ANR	3599136	Identifier	log_ctx		3599075	0					
ANR	3599137	Argument	AV_LOG_ERROR		3599075	1					
ANR	3599138	Identifier	AV_LOG_ERROR		3599075	0					
ANR	3599139	Argument	"""Invalid packing format '%s'\\n"""		3599075	2					
ANR	3599140	PrimaryExpression	"""Invalid packing format '%s'\\n"""		3599075	0					
ANR	3599141	Argument	arg		3599075	3					
ANR	3599142	Identifier	arg		3599075	0					
ANR	3599143	ReturnStatement	return AVERROR ( EINVAL ) ;	17:8:331:353	3599075	1	True				
ANR	3599144	CallExpression	AVERROR ( EINVAL )		3599075	0					
ANR	3599145	Callee	AVERROR		3599075	0					
ANR	3599146	Identifier	AVERROR		3599075	0					
ANR	3599147	ArgumentList	EINVAL		3599075	1					
ANR	3599148	Argument	EINVAL		3599075	0					
ANR	3599149	Identifier	EINVAL		3599075	0					
ANR	3599150	ExpressionStatement	* ret = planar	21:4:367:380	3599075	3	True				
ANR	3599151	AssignmentExpression	* ret = planar		3599075	0		=			
ANR	3599152	UnaryOperationExpression	* ret		3599075	0					
ANR	3599153	UnaryOperator	*		3599075	0					
ANR	3599154	Identifier	ret		3599075	1					
ANR	3599155	Identifier	planar		3599075	1					
ANR	3599156	ReturnStatement	return 0 ;	23:4:387:395	3599075	4	True				
ANR	3599157	PrimaryExpression	0		3599075	0					
ANR	3599158	ReturnType	int		3599075	1					
ANR	3599159	Identifier	ff_parse_packing_format		3599075	2					
ANR	3599160	ParameterList	"int * ret , const char * arg , void * log_ctx"		3599075	3					
ANR	3599161	Parameter	int * ret	1:28:28:35	3599075	0	True				
ANR	3599162	ParameterType	int *		3599075	0					
ANR	3599163	Identifier	ret		3599075	1					
ANR	3599164	Parameter	const char * arg	1:38:38:52	3599075	1	True				
ANR	3599165	ParameterType	const char *		3599075	0					
ANR	3599166	Identifier	arg		3599075	1					
ANR	3599167	Parameter	void * log_ctx	1:55:55:67	3599075	2	True				
ANR	3599168	ParameterType	void *		3599075	0					
ANR	3599169	Identifier	log_ctx		3599075	1					
ANR	3599170	CFGEntryNode	ENTRY		3599075		True				
ANR	3599171	CFGExitNode	EXIT		3599075		True				
ANR	3599172	Symbol	ret		3599075						
ANR	3599173	Symbol	strcmp		3599075						
ANR	3599174	Symbol	* tail		3599075						
ANR	3599175	Symbol	planar		3599075						
ANR	3599176	Symbol	AV_LOG_ERROR		3599075						
ANR	3599177	Symbol	tail		3599075						
ANR	3599178	Symbol	* ret		3599075						
ANR	3599179	Symbol	log_ctx		3599075						
ANR	3599180	Symbol	EINVAL		3599075						
ANR	3599181	Symbol	strtol		3599075						
ANR	3599182	Symbol	arg		3599075						
ANR	3599183	Symbol	& tail		3599075						
ANR	3599184	Symbol	AVERROR		3599075						
