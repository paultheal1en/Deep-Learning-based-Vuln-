command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6960424	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_open_stdio_0.c								
ANR	6960425	Function	qemu_chr_open_stdio	1:0:0:1143							
ANR	6960426	FunctionDef	"qemu_chr_open_stdio (const char * id , ChardevBackend * backend , ChardevReturn * ret , Error * * errp)"		6960425	0					
ANR	6960427	CompoundStatement		9:0:255:1143	6960425	0					
ANR	6960428	IdentifierDeclStatement	ChardevStdio * opts = backend -> u . stdio ;	11:4:262:299	6960425	0	True				
ANR	6960429	IdentifierDecl	* opts = backend -> u . stdio		6960425	0					
ANR	6960430	IdentifierDeclType	ChardevStdio *		6960425	0					
ANR	6960431	Identifier	opts		6960425	1					
ANR	6960432	AssignmentExpression	* opts = backend -> u . stdio		6960425	2		=			
ANR	6960433	Identifier	opts		6960425	0					
ANR	6960434	MemberAccess	backend -> u . stdio		6960425	1					
ANR	6960435	PtrMemberAccess	backend -> u		6960425	0					
ANR	6960436	Identifier	backend		6960425	0					
ANR	6960437	Identifier	u		6960425	1					
ANR	6960438	Identifier	stdio		6960425	1					
ANR	6960439	IdentifierDeclStatement	CharDriverState * chr ;	13:4:306:326	6960425	1	True				
ANR	6960440	IdentifierDecl	* chr		6960425	0					
ANR	6960441	IdentifierDeclType	CharDriverState *		6960425	0					
ANR	6960442	Identifier	chr		6960425	1					
ANR	6960443	IdentifierDeclStatement	struct sigaction act ;	15:4:333:353	6960425	2	True				
ANR	6960444	IdentifierDecl	act		6960425	0					
ANR	6960445	IdentifierDeclType	struct sigaction		6960425	0					
ANR	6960446	Identifier	act		6960425	1					
ANR	6960447	IfStatement	if ( is_daemonized ( ) )		6960425	3					
ANR	6960448	Condition	is_daemonized ( )	19:8:366:380	6960425	0	True				
ANR	6960449	CallExpression	is_daemonized ( )		6960425	0					
ANR	6960450	Callee	is_daemonized		6960425	0					
ANR	6960451	Identifier	is_daemonized		6960425	0					
ANR	6960452	ArgumentList			6960425	1					
ANR	6960453	CompoundStatement		11:25:127:127	6960425	1					
ANR	6960454	ExpressionStatement	"error_setg ( errp , ""cannot use stdio with -daemonize"" )"	21:8:394:446	6960425	0	True				
ANR	6960455	CallExpression	"error_setg ( errp , ""cannot use stdio with -daemonize"" )"		6960425	0					
ANR	6960456	Callee	error_setg		6960425	0					
ANR	6960457	Identifier	error_setg		6960425	0					
ANR	6960458	ArgumentList	errp		6960425	1					
ANR	6960459	Argument	errp		6960425	0					
ANR	6960460	Identifier	errp		6960425	0					
ANR	6960461	Argument	"""cannot use stdio with -daemonize"""		6960425	1					
ANR	6960462	PrimaryExpression	"""cannot use stdio with -daemonize"""		6960425	0					
ANR	6960463	ReturnStatement	return NULL ;	23:8:457:468	6960425	1	True				
ANR	6960464	Identifier	NULL		6960425	0					
ANR	6960465	IfStatement	if ( stdio_in_use )		6960425	4					
ANR	6960466	Condition	stdio_in_use	29:8:488:499	6960425	0	True				
ANR	6960467	Identifier	stdio_in_use		6960425	0					
ANR	6960468	CompoundStatement		21:22:246:246	6960425	1					
ANR	6960469	ExpressionStatement	"error_setg ( errp , ""cannot use stdio by multiple character devices"" )"	31:8:513:579	6960425	0	True				
ANR	6960470	CallExpression	"error_setg ( errp , ""cannot use stdio by multiple character devices"" )"		6960425	0					
ANR	6960471	Callee	error_setg		6960425	0					
ANR	6960472	Identifier	error_setg		6960425	0					
ANR	6960473	ArgumentList	errp		6960425	1					
ANR	6960474	Argument	errp		6960425	0					
ANR	6960475	Identifier	errp		6960425	0					
ANR	6960476	Argument	"""cannot use stdio by multiple character devices"""		6960425	1					
ANR	6960477	PrimaryExpression	"""cannot use stdio by multiple character devices"""		6960425	0					
ANR	6960478	ReturnStatement	return NULL ;	33:8:590:601	6960425	1	True				
ANR	6960479	Identifier	NULL		6960425	0					
ANR	6960480	ExpressionStatement	stdio_in_use = true	39:4:617:636	6960425	5	True				
ANR	6960481	AssignmentExpression	stdio_in_use = true		6960425	0		=			
ANR	6960482	Identifier	stdio_in_use		6960425	0					
ANR	6960483	Identifier	true		6960425	1					
ANR	6960484	ExpressionStatement	"old_fd0_flags = fcntl ( 0 , F_GETFL )"	41:4:643:676	6960425	6	True				
ANR	6960485	AssignmentExpression	"old_fd0_flags = fcntl ( 0 , F_GETFL )"		6960425	0		=			
ANR	6960486	Identifier	old_fd0_flags		6960425	0					
ANR	6960487	CallExpression	"fcntl ( 0 , F_GETFL )"		6960425	1					
ANR	6960488	Callee	fcntl		6960425	0					
ANR	6960489	Identifier	fcntl		6960425	0					
ANR	6960490	ArgumentList	0		6960425	1					
ANR	6960491	Argument	0		6960425	0					
ANR	6960492	PrimaryExpression	0		6960425	0					
ANR	6960493	Argument	F_GETFL		6960425	1					
ANR	6960494	Identifier	F_GETFL		6960425	0					
ANR	6960495	ExpressionStatement	"tcgetattr ( 0 , & oldtty )"	43:4:683:704	6960425	7	True				
ANR	6960496	CallExpression	"tcgetattr ( 0 , & oldtty )"		6960425	0					
ANR	6960497	Callee	tcgetattr		6960425	0					
ANR	6960498	Identifier	tcgetattr		6960425	0					
ANR	6960499	ArgumentList	0		6960425	1					
ANR	6960500	Argument	0		6960425	0					
ANR	6960501	PrimaryExpression	0		6960425	0					
ANR	6960502	Argument	& oldtty		6960425	1					
ANR	6960503	UnaryOperationExpression	& oldtty		6960425	0					
ANR	6960504	UnaryOperator	&		6960425	0					
ANR	6960505	Identifier	oldtty		6960425	1					
ANR	6960506	ExpressionStatement	qemu_set_nonblock ( 0 )	45:4:711:731	6960425	8	True				
ANR	6960507	CallExpression	qemu_set_nonblock ( 0 )		6960425	0					
ANR	6960508	Callee	qemu_set_nonblock		6960425	0					
ANR	6960509	Identifier	qemu_set_nonblock		6960425	0					
ANR	6960510	ArgumentList	0		6960425	1					
ANR	6960511	Argument	0		6960425	0					
ANR	6960512	PrimaryExpression	0		6960425	0					
ANR	6960513	ExpressionStatement	atexit ( term_exit )	47:4:738:755	6960425	9	True				
ANR	6960514	CallExpression	atexit ( term_exit )		6960425	0					
ANR	6960515	Callee	atexit		6960425	0					
ANR	6960516	Identifier	atexit		6960425	0					
ANR	6960517	ArgumentList	term_exit		6960425	1					
ANR	6960518	Argument	term_exit		6960425	0					
ANR	6960519	Identifier	term_exit		6960425	0					
ANR	6960520	ExpressionStatement	"memset ( & act , 0 , sizeof ( act ) )"	51:4:764:792	6960425	10	True				
ANR	6960521	CallExpression	"memset ( & act , 0 , sizeof ( act ) )"		6960425	0					
ANR	6960522	Callee	memset		6960425	0					
ANR	6960523	Identifier	memset		6960425	0					
ANR	6960524	ArgumentList	& act		6960425	1					
ANR	6960525	Argument	& act		6960425	0					
ANR	6960526	UnaryOperationExpression	& act		6960425	0					
ANR	6960527	UnaryOperator	&		6960425	0					
ANR	6960528	Identifier	act		6960425	1					
ANR	6960529	Argument	0		6960425	1					
ANR	6960530	PrimaryExpression	0		6960425	0					
ANR	6960531	Argument	sizeof ( act )		6960425	2					
ANR	6960532	SizeofExpression	sizeof ( act )		6960425	0					
ANR	6960533	Sizeof	sizeof		6960425	0					
ANR	6960534	SizeofOperand	act		6960425	1					
ANR	6960535	ExpressionStatement	act . sa_handler = term_stdio_handler	53:4:799:834	6960425	11	True				
ANR	6960536	AssignmentExpression	act . sa_handler = term_stdio_handler		6960425	0		=			
ANR	6960537	MemberAccess	act . sa_handler		6960425	0					
ANR	6960538	Identifier	act		6960425	0					
ANR	6960539	Identifier	sa_handler		6960425	1					
ANR	6960540	Identifier	term_stdio_handler		6960425	1					
ANR	6960541	ExpressionStatement	"sigaction ( SIGCONT , & act , NULL )"	55:4:841:871	6960425	12	True				
ANR	6960542	CallExpression	"sigaction ( SIGCONT , & act , NULL )"		6960425	0					
ANR	6960543	Callee	sigaction		6960425	0					
ANR	6960544	Identifier	sigaction		6960425	0					
ANR	6960545	ArgumentList	SIGCONT		6960425	1					
ANR	6960546	Argument	SIGCONT		6960425	0					
ANR	6960547	Identifier	SIGCONT		6960425	0					
ANR	6960548	Argument	& act		6960425	1					
ANR	6960549	UnaryOperationExpression	& act		6960425	0					
ANR	6960550	UnaryOperator	&		6960425	0					
ANR	6960551	Identifier	act		6960425	1					
ANR	6960552	Argument	NULL		6960425	2					
ANR	6960553	Identifier	NULL		6960425	0					
ANR	6960554	ExpressionStatement	"chr = qemu_chr_open_fd ( 0 , 1 )"	59:4:880:908	6960425	13	True				
ANR	6960555	AssignmentExpression	"chr = qemu_chr_open_fd ( 0 , 1 )"		6960425	0		=			
ANR	6960556	Identifier	chr		6960425	0					
ANR	6960557	CallExpression	"qemu_chr_open_fd ( 0 , 1 )"		6960425	1					
ANR	6960558	Callee	qemu_chr_open_fd		6960425	0					
ANR	6960559	Identifier	qemu_chr_open_fd		6960425	0					
ANR	6960560	ArgumentList	0		6960425	1					
ANR	6960561	Argument	0		6960425	0					
ANR	6960562	PrimaryExpression	0		6960425	0					
ANR	6960563	Argument	1		6960425	1					
ANR	6960564	PrimaryExpression	1		6960425	0					
ANR	6960565	ExpressionStatement	chr -> chr_close = qemu_chr_close_stdio	61:4:915:952	6960425	14	True				
ANR	6960566	AssignmentExpression	chr -> chr_close = qemu_chr_close_stdio		6960425	0		=			
ANR	6960567	PtrMemberAccess	chr -> chr_close		6960425	0					
ANR	6960568	Identifier	chr		6960425	0					
ANR	6960569	Identifier	chr_close		6960425	1					
ANR	6960570	Identifier	qemu_chr_close_stdio		6960425	1					
ANR	6960571	ExpressionStatement	chr -> chr_set_echo = qemu_chr_set_echo_stdio	63:4:959:1002	6960425	15	True				
ANR	6960572	AssignmentExpression	chr -> chr_set_echo = qemu_chr_set_echo_stdio		6960425	0		=			
ANR	6960573	PtrMemberAccess	chr -> chr_set_echo		6960425	0					
ANR	6960574	Identifier	chr		6960425	0					
ANR	6960575	Identifier	chr_set_echo		6960425	1					
ANR	6960576	Identifier	qemu_chr_set_echo_stdio		6960425	1					
ANR	6960577	IfStatement	if ( opts -> has_signal )		6960425	16					
ANR	6960578	Condition	opts -> has_signal	65:8:1013:1028	6960425	0	True				
ANR	6960579	PtrMemberAccess	opts -> has_signal		6960425	0					
ANR	6960580	Identifier	opts		6960425	0					
ANR	6960581	Identifier	has_signal		6960425	1					
ANR	6960582	CompoundStatement		57:26:775:775	6960425	1					
ANR	6960583	ExpressionStatement	stdio_allow_signal = opts -> signal	67:8:1042:1075	6960425	0	True				
ANR	6960584	AssignmentExpression	stdio_allow_signal = opts -> signal		6960425	0		=			
ANR	6960585	Identifier	stdio_allow_signal		6960425	0					
ANR	6960586	PtrMemberAccess	opts -> signal		6960425	1					
ANR	6960587	Identifier	opts		6960425	0					
ANR	6960588	Identifier	signal		6960425	1					
ANR	6960589	ExpressionStatement	"qemu_chr_fe_set_echo ( chr , false )"	71:4:1089:1121	6960425	17	True				
ANR	6960590	CallExpression	"qemu_chr_fe_set_echo ( chr , false )"		6960425	0					
ANR	6960591	Callee	qemu_chr_fe_set_echo		6960425	0					
ANR	6960592	Identifier	qemu_chr_fe_set_echo		6960425	0					
ANR	6960593	ArgumentList	chr		6960425	1					
ANR	6960594	Argument	chr		6960425	0					
ANR	6960595	Identifier	chr		6960425	0					
ANR	6960596	Argument	false		6960425	1					
ANR	6960597	Identifier	false		6960425	0					
ANR	6960598	ReturnStatement	return chr ;	75:4:1130:1140	6960425	18	True				
ANR	6960599	Identifier	chr		6960425	0					
ANR	6960600	ReturnType	static CharDriverState *		6960425	1					
ANR	6960601	Identifier	qemu_chr_open_stdio		6960425	2					
ANR	6960602	ParameterList	"const char * id , ChardevBackend * backend , ChardevReturn * ret , Error * * errp"		6960425	3					
ANR	6960603	Parameter	const char * id	1:44:44:57	6960425	0	True				
ANR	6960604	ParameterType	const char *		6960425	0					
ANR	6960605	Identifier	id		6960425	1					
ANR	6960606	Parameter	ChardevBackend * backend	3:44:105:127	6960425	1	True				
ANR	6960607	ParameterType	ChardevBackend *		6960425	0					
ANR	6960608	Identifier	backend		6960425	1					
ANR	6960609	Parameter	ChardevReturn * ret	5:44:175:192	6960425	2	True				
ANR	6960610	ParameterType	ChardevReturn *		6960425	0					
ANR	6960611	Identifier	ret		6960425	1					
ANR	6960612	Parameter	Error * * errp	7:44:240:251	6960425	3	True				
ANR	6960613	ParameterType	Error * *		6960425	0					
ANR	6960614	Identifier	errp		6960425	1					
ANR	6960615	CFGEntryNode	ENTRY		6960425		True				
ANR	6960616	CFGExitNode	EXIT		6960425		True				
ANR	6960617	Symbol	errp		6960425						
ANR	6960618	Symbol	opts -> signal		6960425						
ANR	6960619	Symbol	fcntl		6960425						
ANR	6960620	Symbol	is_daemonized		6960425						
ANR	6960621	Symbol	backend -> u . stdio		6960425						
ANR	6960622	Symbol	qemu_chr_open_fd		6960425						
ANR	6960623	Symbol	stdio_in_use		6960425						
ANR	6960624	Symbol	old_fd0_flags		6960425						
ANR	6960625	Symbol	act . sa_handler		6960425						
ANR	6960626	Symbol	qemu_chr_close_stdio		6960425						
ANR	6960627	Symbol	act		6960425						
ANR	6960628	Symbol	& oldtty		6960425						
ANR	6960629	Symbol	opts		6960425						
ANR	6960630	Symbol	opts -> has_signal		6960425						
ANR	6960631	Symbol	backend		6960425						
ANR	6960632	Symbol	F_GETFL		6960425						
ANR	6960633	Symbol	id		6960425						
ANR	6960634	Symbol	term_exit		6960425						
ANR	6960635	Symbol	SIGCONT		6960425						
ANR	6960636	Symbol	stdio_allow_signal		6960425						
ANR	6960637	Symbol	ret		6960425						
ANR	6960638	Symbol	NULL		6960425						
ANR	6960639	Symbol	term_stdio_handler		6960425						
ANR	6960640	Symbol	* chr		6960425						
ANR	6960641	Symbol	false		6960425						
ANR	6960642	Symbol	chr		6960425						
ANR	6960643	Symbol	chr -> chr_set_echo		6960425						
ANR	6960644	Symbol	* backend		6960425						
ANR	6960645	Symbol	* opts		6960425						
ANR	6960646	Symbol	true		6960425						
ANR	6960647	Symbol	backend -> u		6960425						
ANR	6960648	Symbol	qemu_chr_set_echo_stdio		6960425						
ANR	6960649	Symbol	& act		6960425						
ANR	6960650	Symbol	chr -> chr_close		6960425						
