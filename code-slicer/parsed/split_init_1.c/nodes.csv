command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7970559	File	/home/p4ultr4n/workplace/ReVeal/raw_code/split_init_1.c								
ANR	7970560	Function	split_init	1:0:0:475							
ANR	7970561	FunctionDef	split_init (AVFilterContext * ctx)		7970560	0					
ANR	7970562	CompoundStatement		3:0:53:475	7970560	0					
ANR	7970563	IdentifierDeclStatement	SplitContext * s = ctx -> priv ;	5:4:60:87	7970560	0	True				
ANR	7970564	IdentifierDecl	* s = ctx -> priv		7970560	0					
ANR	7970565	IdentifierDeclType	SplitContext *		7970560	0					
ANR	7970566	Identifier	s		7970560	1					
ANR	7970567	AssignmentExpression	* s = ctx -> priv		7970560	2		=			
ANR	7970568	Identifier	s		7970560	0					
ANR	7970569	PtrMemberAccess	ctx -> priv		7970560	1					
ANR	7970570	Identifier	ctx		7970560	0					
ANR	7970571	Identifier	priv		7970560	1					
ANR	7970572	IdentifierDeclStatement	int i ;	7:4:94:99	7970560	1	True				
ANR	7970573	IdentifierDecl	i		7970560	0					
ANR	7970574	IdentifierDeclType	int		7970560	0					
ANR	7970575	Identifier	i		7970560	1					
ANR	7970576	ForStatement	for ( i = 0 ; i < s -> nb_outputs ; i ++ )		7970560	2					
ANR	7970577	ForInit	i = 0 ;	11:9:113:118	7970560	0	True				
ANR	7970578	AssignmentExpression	i = 0		7970560	0		=			
ANR	7970579	Identifier	i		7970560	0					
ANR	7970580	PrimaryExpression	0		7970560	1					
ANR	7970581	Condition	i < s -> nb_outputs	11:16:120:136	7970560	1	True				
ANR	7970582	RelationalExpression	i < s -> nb_outputs		7970560	0		<			
ANR	7970583	Identifier	i		7970560	0					
ANR	7970584	PtrMemberAccess	s -> nb_outputs		7970560	1					
ANR	7970585	Identifier	s		7970560	0					
ANR	7970586	Identifier	nb_outputs		7970560	1					
ANR	7970587	PostIncDecOperationExpression	i ++	11:35:139:141	7970560	2	True				
ANR	7970588	Identifier	i		7970560	0					
ANR	7970589	IncDec	++		7970560	1					
ANR	7970590	CompoundStatement		13:8:125:148	7970560	3					
ANR	7970591	IdentifierDeclStatement	char name [ 32 ] ;	13:8:155:168	7970560	0	True				
ANR	7970592	IdentifierDecl	name [ 32 ]		7970560	0					
ANR	7970593	IdentifierDeclType	char [ 32 ]		7970560	0					
ANR	7970594	Identifier	name		7970560	1					
ANR	7970595	PrimaryExpression	32		7970560	2					
ANR	7970596	IdentifierDeclStatement	AVFilterPad pad = { 0 } ;	15:8:179:202	7970560	1	True				
ANR	7970597	IdentifierDecl	pad = { 0 }		7970560	0					
ANR	7970598	IdentifierDeclType	AVFilterPad		7970560	0					
ANR	7970599	Identifier	pad		7970560	1					
ANR	7970600	AssignmentExpression	pad = { 0 }		7970560	2		=			
ANR	7970601	Identifier	pad		7970560	0					
ANR	7970602	InitializerList	0		7970560	1					
ANR	7970603	PrimaryExpression	0		7970560	0					
ANR	7970604	ExpressionStatement	"snprintf ( name , sizeof ( name ) , ""output%d"" , i )"	19:8:215:258	7970560	2	True				
ANR	7970605	CallExpression	"snprintf ( name , sizeof ( name ) , ""output%d"" , i )"		7970560	0					
ANR	7970606	Callee	snprintf		7970560	0					
ANR	7970607	Identifier	snprintf		7970560	0					
ANR	7970608	ArgumentList	name		7970560	1					
ANR	7970609	Argument	name		7970560	0					
ANR	7970610	Identifier	name		7970560	0					
ANR	7970611	Argument	sizeof ( name )		7970560	1					
ANR	7970612	SizeofExpression	sizeof ( name )		7970560	0					
ANR	7970613	Sizeof	sizeof		7970560	0					
ANR	7970614	SizeofOperand	name		7970560	1					
ANR	7970615	Argument	"""output%d"""		7970560	2					
ANR	7970616	PrimaryExpression	"""output%d"""		7970560	0					
ANR	7970617	Argument	i		7970560	3					
ANR	7970618	Identifier	i		7970560	0					
ANR	7970619	ExpressionStatement	pad . type = ctx -> filter -> inputs [ 0 ] . type	21:8:269:307	7970560	3	True				
ANR	7970620	AssignmentExpression	pad . type = ctx -> filter -> inputs [ 0 ] . type		7970560	0		=			
ANR	7970621	MemberAccess	pad . type		7970560	0					
ANR	7970622	Identifier	pad		7970560	0					
ANR	7970623	Identifier	type		7970560	1					
ANR	7970624	MemberAccess	ctx -> filter -> inputs [ 0 ] . type		7970560	1					
ANR	7970625	ArrayIndexing	ctx -> filter -> inputs [ 0 ]		7970560	0					
ANR	7970626	PtrMemberAccess	ctx -> filter -> inputs		7970560	0					
ANR	7970627	PtrMemberAccess	ctx -> filter		7970560	0					
ANR	7970628	Identifier	ctx		7970560	0					
ANR	7970629	Identifier	filter		7970560	1					
ANR	7970630	Identifier	inputs		7970560	1					
ANR	7970631	PrimaryExpression	0		7970560	1					
ANR	7970632	Identifier	type		7970560	1					
ANR	7970633	ExpressionStatement	pad . name = av_strdup ( name )	23:8:318:344	7970560	4	True				
ANR	7970634	AssignmentExpression	pad . name = av_strdup ( name )		7970560	0		=			
ANR	7970635	MemberAccess	pad . name		7970560	0					
ANR	7970636	Identifier	pad		7970560	0					
ANR	7970637	Identifier	name		7970560	1					
ANR	7970638	CallExpression	av_strdup ( name )		7970560	1					
ANR	7970639	Callee	av_strdup		7970560	0					
ANR	7970640	Identifier	av_strdup		7970560	0					
ANR	7970641	ArgumentList	name		7970560	1					
ANR	7970642	Argument	name		7970560	0					
ANR	7970643	Identifier	name		7970560	0					
ANR	7970644	IfStatement	if ( ! pad . name )		7970560	5					
ANR	7970645	Condition	! pad . name	25:12:359:367	7970560	0	True				
ANR	7970646	UnaryOperationExpression	! pad . name		7970560	0					
ANR	7970647	UnaryOperator	!		7970560	0					
ANR	7970648	MemberAccess	pad . name		7970560	1					
ANR	7970649	Identifier	pad		7970560	0					
ANR	7970650	Identifier	name		7970560	1					
ANR	7970651	ReturnStatement	return AVERROR ( ENOMEM ) ;	27:12:383:405	7970560	1	True				
ANR	7970652	CallExpression	AVERROR ( ENOMEM )		7970560	0					
ANR	7970653	Callee	AVERROR		7970560	0					
ANR	7970654	Identifier	AVERROR		7970560	0					
ANR	7970655	ArgumentList	ENOMEM		7970560	1					
ANR	7970656	Argument	ENOMEM		7970560	0					
ANR	7970657	Identifier	ENOMEM		7970560	0					
ANR	7970658	ExpressionStatement	"ff_insert_outpad ( ctx , i , & pad )"	31:8:418:448	7970560	6	True				
ANR	7970659	CallExpression	"ff_insert_outpad ( ctx , i , & pad )"		7970560	0					
ANR	7970660	Callee	ff_insert_outpad		7970560	0					
ANR	7970661	Identifier	ff_insert_outpad		7970560	0					
ANR	7970662	ArgumentList	ctx		7970560	1					
ANR	7970663	Argument	ctx		7970560	0					
ANR	7970664	Identifier	ctx		7970560	0					
ANR	7970665	Argument	i		7970560	1					
ANR	7970666	Identifier	i		7970560	0					
ANR	7970667	Argument	& pad		7970560	2					
ANR	7970668	UnaryOperationExpression	& pad		7970560	0					
ANR	7970669	UnaryOperator	&		7970560	0					
ANR	7970670	Identifier	pad		7970560	1					
ANR	7970671	ReturnStatement	return 0 ;	37:4:464:472	7970560	3	True				
ANR	7970672	PrimaryExpression	0		7970560	0					
ANR	7970673	ReturnType	static av_cold int		7970560	1					
ANR	7970674	Identifier	split_init		7970560	2					
ANR	7970675	ParameterList	AVFilterContext * ctx		7970560	3					
ANR	7970676	Parameter	AVFilterContext * ctx	1:30:30:49	7970560	0	True				
ANR	7970677	ParameterType	AVFilterContext *		7970560	0					
ANR	7970678	Identifier	ctx		7970560	1					
ANR	7970679	CFGEntryNode	ENTRY		7970560		True				
ANR	7970680	CFGExitNode	EXIT		7970560		True				
ANR	7970681	Symbol	ENOMEM		7970560						
ANR	7970682	Symbol	ctx -> filter		7970560						
ANR	7970683	Symbol	* * * ctx		7970560						
ANR	7970684	Symbol	ctx		7970560						
ANR	7970685	Symbol	av_strdup		7970560						
ANR	7970686	Symbol	i		7970560						
ANR	7970687	Symbol	ctx -> priv		7970560						
ANR	7970688	Symbol	pad . name		7970560						
ANR	7970689	Symbol	* ctx		7970560						
ANR	7970690	Symbol	ctx -> filter -> inputs		7970560						
ANR	7970691	Symbol	pad		7970560						
ANR	7970692	Symbol	s		7970560						
ANR	7970693	Symbol	* ctx -> filter -> inputs		7970560						
ANR	7970694	Symbol	s -> nb_outputs		7970560						
ANR	7970695	Symbol	name		7970560						
ANR	7970696	Symbol	ctx -> filter -> inputs [ 0 ] . type		7970560						
ANR	7970697	Symbol	* * ctx		7970560						
ANR	7970698	Symbol	AVERROR		7970560						
ANR	7970699	Symbol	* s		7970560						
ANR	7970700	Symbol	pad . type		7970560						
ANR	7970701	Symbol	* * ctx -> filter		7970560						
ANR	7970702	Symbol	* ctx -> filter		7970560						
ANR	7970703	Symbol	& pad		7970560						
