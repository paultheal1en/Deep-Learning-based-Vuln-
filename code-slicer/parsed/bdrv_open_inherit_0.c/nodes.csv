command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1005443	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bdrv_open_inherit_0.c								
ANR	1005444	Function	bdrv_open_inherit	1:0:0:7944							
ANR	1005445	FunctionDef	"bdrv_open_inherit (const char * filename , const char * reference , QDict * options , int flags , BlockDriverState * parent , const BdrvChildRole * child_role , Error * * errp)"		1005444	0					
ANR	1005446	CompoundStatement		13:0:409:7944	1005444	0					
ANR	1005447	IdentifierDeclStatement	int ret ;	15:4:416:423	1005444	0	True				
ANR	1005448	IdentifierDecl	ret		1005444	0					
ANR	1005449	IdentifierDeclType	int		1005444	0					
ANR	1005450	Identifier	ret		1005444	1					
ANR	1005451	IdentifierDeclStatement	BdrvChild * file = NULL ;	17:4:430:452	1005444	1	True				
ANR	1005452	IdentifierDecl	* file = NULL		1005444	0					
ANR	1005453	IdentifierDeclType	BdrvChild *		1005444	0					
ANR	1005454	Identifier	file		1005444	1					
ANR	1005455	AssignmentExpression	* file = NULL		1005444	2		=			
ANR	1005456	Identifier	NULL		1005444	0					
ANR	1005457	Identifier	NULL		1005444	1					
ANR	1005458	IdentifierDeclStatement	BlockDriverState * bs ;	19:4:459:479	1005444	2	True				
ANR	1005459	IdentifierDecl	* bs		1005444	0					
ANR	1005460	IdentifierDeclType	BlockDriverState *		1005444	0					
ANR	1005461	Identifier	bs		1005444	1					
ANR	1005462	IdentifierDeclStatement	BlockDriver * drv = NULL ;	21:4:486:509	1005444	3	True				
ANR	1005463	IdentifierDecl	* drv = NULL		1005444	0					
ANR	1005464	IdentifierDeclType	BlockDriver *		1005444	0					
ANR	1005465	Identifier	drv		1005444	1					
ANR	1005466	AssignmentExpression	* drv = NULL		1005444	2		=			
ANR	1005467	Identifier	NULL		1005444	0					
ANR	1005468	Identifier	NULL		1005444	1					
ANR	1005469	IdentifierDeclStatement	const char * drvname ;	23:4:516:535	1005444	4	True				
ANR	1005470	IdentifierDecl	* drvname		1005444	0					
ANR	1005471	IdentifierDeclType	const char *		1005444	0					
ANR	1005472	Identifier	drvname		1005444	1					
ANR	1005473	IdentifierDeclStatement	const char * backing ;	25:4:542:561	1005444	5	True				
ANR	1005474	IdentifierDecl	* backing		1005444	0					
ANR	1005475	IdentifierDeclType	const char *		1005444	0					
ANR	1005476	Identifier	backing		1005444	1					
ANR	1005477	IdentifierDeclStatement	Error * local_err = NULL ;	27:4:568:591	1005444	6	True				
ANR	1005478	IdentifierDecl	* local_err = NULL		1005444	0					
ANR	1005479	IdentifierDeclType	Error *		1005444	0					
ANR	1005480	Identifier	local_err		1005444	1					
ANR	1005481	AssignmentExpression	* local_err = NULL		1005444	2		=			
ANR	1005482	Identifier	NULL		1005444	0					
ANR	1005483	Identifier	NULL		1005444	1					
ANR	1005484	IdentifierDeclStatement	QDict * snapshot_options = NULL ;	29:4:598:628	1005444	7	True				
ANR	1005485	IdentifierDecl	* snapshot_options = NULL		1005444	0					
ANR	1005486	IdentifierDeclType	QDict *		1005444	0					
ANR	1005487	Identifier	snapshot_options		1005444	1					
ANR	1005488	AssignmentExpression	* snapshot_options = NULL		1005444	2		=			
ANR	1005489	Identifier	NULL		1005444	0					
ANR	1005490	Identifier	NULL		1005444	1					
ANR	1005491	IdentifierDeclStatement	int snapshot_flags = 0 ;	31:4:635:657	1005444	8	True				
ANR	1005492	IdentifierDecl	snapshot_flags = 0		1005444	0					
ANR	1005493	IdentifierDeclType	int		1005444	0					
ANR	1005494	Identifier	snapshot_flags		1005444	1					
ANR	1005495	AssignmentExpression	snapshot_flags = 0		1005444	2		=			
ANR	1005496	Identifier	snapshot_flags		1005444	0					
ANR	1005497	PrimaryExpression	0		1005444	1					
ANR	1005498	ExpressionStatement	assert ( ! child_role || ! flags )	35:4:666:695	1005444	9	True				
ANR	1005499	CallExpression	assert ( ! child_role || ! flags )		1005444	0					
ANR	1005500	Callee	assert		1005444	0					
ANR	1005501	Identifier	assert		1005444	0					
ANR	1005502	ArgumentList	! child_role || ! flags		1005444	1					
ANR	1005503	Argument	! child_role || ! flags		1005444	0					
ANR	1005504	OrExpression	! child_role || ! flags		1005444	0		||			
ANR	1005505	UnaryOperationExpression	! child_role		1005444	0					
ANR	1005506	UnaryOperator	!		1005444	0					
ANR	1005507	Identifier	child_role		1005444	1					
ANR	1005508	UnaryOperationExpression	! flags		1005444	1					
ANR	1005509	UnaryOperator	!		1005444	0					
ANR	1005510	Identifier	flags		1005444	1					
ANR	1005511	ExpressionStatement	assert ( ! child_role == ! parent )	37:4:702:732	1005444	10	True				
ANR	1005512	CallExpression	assert ( ! child_role == ! parent )		1005444	0					
ANR	1005513	Callee	assert		1005444	0					
ANR	1005514	Identifier	assert		1005444	0					
ANR	1005515	ArgumentList	! child_role == ! parent		1005444	1					
ANR	1005516	Argument	! child_role == ! parent		1005444	0					
ANR	1005517	EqualityExpression	! child_role == ! parent		1005444	0		==			
ANR	1005518	UnaryOperationExpression	! child_role		1005444	0					
ANR	1005519	UnaryOperator	!		1005444	0					
ANR	1005520	Identifier	child_role		1005444	1					
ANR	1005521	UnaryOperationExpression	! parent		1005444	1					
ANR	1005522	UnaryOperator	!		1005444	0					
ANR	1005523	Identifier	parent		1005444	1					
ANR	1005524	IfStatement	if ( reference )		1005444	11					
ANR	1005525	Condition	reference	41:8:745:753	1005444	0	True				
ANR	1005526	Identifier	reference		1005444	0					
ANR	1005527	CompoundStatement		31:8:357:419	1005444	1					
ANR	1005528	IdentifierDeclStatement	bool options_non_empty = options ? qdict_size ( options ) : false ;	43:8:767:829	1005444	0	True				
ANR	1005529	IdentifierDecl	options_non_empty = options ? qdict_size ( options ) : false		1005444	0					
ANR	1005530	IdentifierDeclType	bool		1005444	0					
ANR	1005531	Identifier	options_non_empty		1005444	1					
ANR	1005532	AssignmentExpression	options_non_empty = options ? qdict_size ( options ) : false		1005444	2		=			
ANR	1005533	Identifier	options_non_empty		1005444	0					
ANR	1005534	ConditionalExpression	options ? qdict_size ( options ) : false		1005444	1					
ANR	1005535	Condition	options		1005444	0					
ANR	1005536	Identifier	options		1005444	0					
ANR	1005537	CallExpression	qdict_size ( options )		1005444	1					
ANR	1005538	Callee	qdict_size		1005444	0					
ANR	1005539	Identifier	qdict_size		1005444	0					
ANR	1005540	ArgumentList	options		1005444	1					
ANR	1005541	Argument	options		1005444	0					
ANR	1005542	Identifier	options		1005444	0					
ANR	1005543	Identifier	false		1005444	2					
ANR	1005544	ExpressionStatement	QDECREF ( options )	45:8:840:856	1005444	1	True				
ANR	1005545	CallExpression	QDECREF ( options )		1005444	0					
ANR	1005546	Callee	QDECREF		1005444	0					
ANR	1005547	Identifier	QDECREF		1005444	0					
ANR	1005548	ArgumentList	options		1005444	1					
ANR	1005549	Argument	options		1005444	0					
ANR	1005550	Identifier	options		1005444	0					
ANR	1005551	IfStatement	if ( filename || options_non_empty )		1005444	2					
ANR	1005552	Condition	filename || options_non_empty	49:12:873:901	1005444	0	True				
ANR	1005553	OrExpression	filename || options_non_empty		1005444	0		||			
ANR	1005554	Identifier	filename		1005444	0					
ANR	1005555	Identifier	options_non_empty		1005444	1					
ANR	1005556	CompoundStatement		37:43:494:494	1005444	1					
ANR	1005557	Statement	error_setg	51:12:919:928	1005444	0	True				
ANR	1005558	Statement	(	51:22:929:929	1005444	1	True				
ANR	1005559	Statement	errp	51:23:930:933	1005444	2	True				
ANR	1005560	Statement	","	51:27:934:934	1005444	3	True				
ANR	1005561	Statement	"""Cannot reference an existing block device with """	51:29:936:984	1005444	4	True				
ANR	1005562	Statement	"""additional options or a new filename"""	53:23:1010:1047	1005444	5	True				
ANR	1005563	Statement	)	53:61:1048:1048	1005444	6	True				
ANR	1005564	ExpressionStatement		53:62:1049:1049	1005444	7	True				
ANR	1005565	ReturnStatement	return NULL ;	55:12:1064:1075	1005444	8	True				
ANR	1005566	Identifier	NULL		1005444	0					
ANR	1005567	ExpressionStatement	"bs = bdrv_lookup_bs ( reference , reference , errp )"	61:8:1099:1146	1005444	3	True				
ANR	1005568	AssignmentExpression	"bs = bdrv_lookup_bs ( reference , reference , errp )"		1005444	0		=			
ANR	1005569	Identifier	bs		1005444	0					
ANR	1005570	CallExpression	"bdrv_lookup_bs ( reference , reference , errp )"		1005444	1					
ANR	1005571	Callee	bdrv_lookup_bs		1005444	0					
ANR	1005572	Identifier	bdrv_lookup_bs		1005444	0					
ANR	1005573	ArgumentList	reference		1005444	1					
ANR	1005574	Argument	reference		1005444	0					
ANR	1005575	Identifier	reference		1005444	0					
ANR	1005576	Argument	reference		1005444	1					
ANR	1005577	Identifier	reference		1005444	0					
ANR	1005578	Argument	errp		1005444	2					
ANR	1005579	Identifier	errp		1005444	0					
ANR	1005580	IfStatement	if ( ! bs )		1005444	4					
ANR	1005581	Condition	! bs	63:12:1161:1163	1005444	0	True				
ANR	1005582	UnaryOperationExpression	! bs		1005444	0					
ANR	1005583	UnaryOperator	!		1005444	0					
ANR	1005584	Identifier	bs		1005444	1					
ANR	1005585	CompoundStatement		51:17:756:756	1005444	1					
ANR	1005586	ReturnStatement	return NULL ;	65:12:1181:1192	1005444	0	True				
ANR	1005587	Identifier	NULL		1005444	0					
ANR	1005588	ExpressionStatement	bdrv_ref ( bs )	71:8:1216:1228	1005444	5	True				
ANR	1005589	CallExpression	bdrv_ref ( bs )		1005444	0					
ANR	1005590	Callee	bdrv_ref		1005444	0					
ANR	1005591	Identifier	bdrv_ref		1005444	0					
ANR	1005592	ArgumentList	bs		1005444	1					
ANR	1005593	Argument	bs		1005444	0					
ANR	1005594	Identifier	bs		1005444	0					
ANR	1005595	ReturnStatement	return bs ;	73:8:1239:1248	1005444	6	True				
ANR	1005596	Identifier	bs		1005444	0					
ANR	1005597	ExpressionStatement	bs = bdrv_new ( )	79:4:1264:1279	1005444	12	True				
ANR	1005598	AssignmentExpression	bs = bdrv_new ( )		1005444	0		=			
ANR	1005599	Identifier	bs		1005444	0					
ANR	1005600	CallExpression	bdrv_new ( )		1005444	1					
ANR	1005601	Callee	bdrv_new		1005444	0					
ANR	1005602	Identifier	bdrv_new		1005444	0					
ANR	1005603	ArgumentList			1005444	1					
ANR	1005604	IfStatement	if ( options == NULL )		1005444	13					
ANR	1005605	Condition	options == NULL	85:8:1338:1352	1005444	0	True				
ANR	1005606	EqualityExpression	options == NULL		1005444	0		==			
ANR	1005607	Identifier	options		1005444	0					
ANR	1005608	Identifier	NULL		1005444	1					
ANR	1005609	CompoundStatement		73:25:945:945	1005444	1					
ANR	1005610	ExpressionStatement	options = qdict_new ( )	87:8:1366:1387	1005444	0	True				
ANR	1005611	AssignmentExpression	options = qdict_new ( )		1005444	0		=			
ANR	1005612	Identifier	options		1005444	0					
ANR	1005613	CallExpression	qdict_new ( )		1005444	1					
ANR	1005614	Callee	qdict_new		1005444	0					
ANR	1005615	Identifier	qdict_new		1005444	0					
ANR	1005616	ArgumentList			1005444	1					
ANR	1005617	ExpressionStatement	"parse_json_protocol ( options , & filename , & local_err )"	95:4:1474:1525	1005444	14	True				
ANR	1005618	CallExpression	"parse_json_protocol ( options , & filename , & local_err )"		1005444	0					
ANR	1005619	Callee	parse_json_protocol		1005444	0					
ANR	1005620	Identifier	parse_json_protocol		1005444	0					
ANR	1005621	ArgumentList	options		1005444	1					
ANR	1005622	Argument	options		1005444	0					
ANR	1005623	Identifier	options		1005444	0					
ANR	1005624	Argument	& filename		1005444	1					
ANR	1005625	UnaryOperationExpression	& filename		1005444	0					
ANR	1005626	UnaryOperator	&		1005444	0					
ANR	1005627	Identifier	filename		1005444	1					
ANR	1005628	Argument	& local_err		1005444	2					
ANR	1005629	UnaryOperationExpression	& local_err		1005444	0					
ANR	1005630	UnaryOperator	&		1005444	0					
ANR	1005631	Identifier	local_err		1005444	1					
ANR	1005632	IfStatement	if ( local_err )		1005444	15					
ANR	1005633	Condition	local_err	97:8:1536:1544	1005444	0	True				
ANR	1005634	Identifier	local_err		1005444	0					
ANR	1005635	CompoundStatement		85:19:1137:1137	1005444	1					
ANR	1005636	GotoStatement	goto fail ;	99:8:1558:1567	1005444	0	True				
ANR	1005637	Identifier	fail		1005444	0					
ANR	1005638	ExpressionStatement	bs -> explicit_options = qdict_clone_shallow ( options )	105:4:1583:1634	1005444	16	True				
ANR	1005639	AssignmentExpression	bs -> explicit_options = qdict_clone_shallow ( options )		1005444	0		=			
ANR	1005640	PtrMemberAccess	bs -> explicit_options		1005444	0					
ANR	1005641	Identifier	bs		1005444	0					
ANR	1005642	Identifier	explicit_options		1005444	1					
ANR	1005643	CallExpression	qdict_clone_shallow ( options )		1005444	1					
ANR	1005644	Callee	qdict_clone_shallow		1005444	0					
ANR	1005645	Identifier	qdict_clone_shallow		1005444	0					
ANR	1005646	ArgumentList	options		1005444	1					
ANR	1005647	Argument	options		1005444	0					
ANR	1005648	Identifier	options		1005444	0					
ANR	1005649	IfStatement	if ( child_role )		1005444	17					
ANR	1005650	Condition	child_role	109:8:1647:1656	1005444	0	True				
ANR	1005651	Identifier	child_role		1005444	0					
ANR	1005652	CompoundStatement		97:20:1249:1249	1005444	1					
ANR	1005653	ExpressionStatement	bs -> inherits_from = parent	111:8:1670:1696	1005444	0	True				
ANR	1005654	AssignmentExpression	bs -> inherits_from = parent		1005444	0		=			
ANR	1005655	PtrMemberAccess	bs -> inherits_from		1005444	0					
ANR	1005656	Identifier	bs		1005444	0					
ANR	1005657	Identifier	inherits_from		1005444	1					
ANR	1005658	Identifier	parent		1005444	1					
ANR	1005659	ExpressionStatement	"child_role -> inherit_options ( & flags , options , parent -> open_flags , parent -> options )"	113:8:1707:1825	1005444	1	True				
ANR	1005660	CallExpression	"child_role -> inherit_options ( & flags , options , parent -> open_flags , parent -> options )"		1005444	0					
ANR	1005661	Callee	child_role -> inherit_options		1005444	0					
ANR	1005662	PtrMemberAccess	child_role -> inherit_options		1005444	0					
ANR	1005663	Identifier	child_role		1005444	0					
ANR	1005664	Identifier	inherit_options		1005444	1					
ANR	1005665	ArgumentList	& flags		1005444	1					
ANR	1005666	Argument	& flags		1005444	0					
ANR	1005667	UnaryOperationExpression	& flags		1005444	0					
ANR	1005668	UnaryOperator	&		1005444	0					
ANR	1005669	Identifier	flags		1005444	1					
ANR	1005670	Argument	options		1005444	1					
ANR	1005671	Identifier	options		1005444	0					
ANR	1005672	Argument	parent -> open_flags		1005444	2					
ANR	1005673	PtrMemberAccess	parent -> open_flags		1005444	0					
ANR	1005674	Identifier	parent		1005444	0					
ANR	1005675	Identifier	open_flags		1005444	1					
ANR	1005676	Argument	parent -> options		1005444	3					
ANR	1005677	PtrMemberAccess	parent -> options		1005444	0					
ANR	1005678	Identifier	parent		1005444	0					
ANR	1005679	Identifier	options		1005444	1					
ANR	1005680	ExpressionStatement	"ret = bdrv_fill_options ( & options , filename , & flags , & local_err )"	121:4:1841:1904	1005444	18	True				
ANR	1005681	AssignmentExpression	"ret = bdrv_fill_options ( & options , filename , & flags , & local_err )"		1005444	0		=			
ANR	1005682	Identifier	ret		1005444	0					
ANR	1005683	CallExpression	"bdrv_fill_options ( & options , filename , & flags , & local_err )"		1005444	1					
ANR	1005684	Callee	bdrv_fill_options		1005444	0					
ANR	1005685	Identifier	bdrv_fill_options		1005444	0					
ANR	1005686	ArgumentList	& options		1005444	1					
ANR	1005687	Argument	& options		1005444	0					
ANR	1005688	UnaryOperationExpression	& options		1005444	0					
ANR	1005689	UnaryOperator	&		1005444	0					
ANR	1005690	Identifier	options		1005444	1					
ANR	1005691	Argument	filename		1005444	1					
ANR	1005692	Identifier	filename		1005444	0					
ANR	1005693	Argument	& flags		1005444	2					
ANR	1005694	UnaryOperationExpression	& flags		1005444	0					
ANR	1005695	UnaryOperator	&		1005444	0					
ANR	1005696	Identifier	flags		1005444	1					
ANR	1005697	Argument	& local_err		1005444	3					
ANR	1005698	UnaryOperationExpression	& local_err		1005444	0					
ANR	1005699	UnaryOperator	&		1005444	0					
ANR	1005700	Identifier	local_err		1005444	1					
ANR	1005701	IfStatement	if ( local_err )		1005444	19					
ANR	1005702	Condition	local_err	123:8:1915:1923	1005444	0	True				
ANR	1005703	Identifier	local_err		1005444	0					
ANR	1005704	CompoundStatement		111:19:1516:1516	1005444	1					
ANR	1005705	GotoStatement	goto fail ;	125:8:1937:1946	1005444	0	True				
ANR	1005706	Identifier	fail		1005444	0					
ANR	1005707	IfStatement	"if ( g_strcmp0 ( qdict_get_try_str ( options , BDRV_OPT_READ_ONLY ) , ""on"" ) && ! qdict_get_try_bool ( options , BDRV_OPT_READ_ONLY , false ) )"		1005444	20					
ANR	1005708	Condition	"g_strcmp0 ( qdict_get_try_str ( options , BDRV_OPT_READ_ONLY ) , ""on"" ) && ! qdict_get_try_bool ( options , BDRV_OPT_READ_ONLY , false )"	137:8:2156:2286	1005444	0	True				
ANR	1005709	AndExpression	"g_strcmp0 ( qdict_get_try_str ( options , BDRV_OPT_READ_ONLY ) , ""on"" ) && ! qdict_get_try_bool ( options , BDRV_OPT_READ_ONLY , false )"		1005444	0		&&			
ANR	1005710	CallExpression	"g_strcmp0 ( qdict_get_try_str ( options , BDRV_OPT_READ_ONLY ) , ""on"" )"		1005444	0					
ANR	1005711	Callee	g_strcmp0		1005444	0					
ANR	1005712	Identifier	g_strcmp0		1005444	0					
ANR	1005713	ArgumentList	"qdict_get_try_str ( options , BDRV_OPT_READ_ONLY )"		1005444	1					
ANR	1005714	Argument	"qdict_get_try_str ( options , BDRV_OPT_READ_ONLY )"		1005444	0					
ANR	1005715	CallExpression	"qdict_get_try_str ( options , BDRV_OPT_READ_ONLY )"		1005444	0					
ANR	1005716	Callee	qdict_get_try_str		1005444	0					
ANR	1005717	Identifier	qdict_get_try_str		1005444	0					
ANR	1005718	ArgumentList	options		1005444	1					
ANR	1005719	Argument	options		1005444	0					
ANR	1005720	Identifier	options		1005444	0					
ANR	1005721	Argument	BDRV_OPT_READ_ONLY		1005444	1					
ANR	1005722	Identifier	BDRV_OPT_READ_ONLY		1005444	0					
ANR	1005723	Argument	"""on"""		1005444	1					
ANR	1005724	PrimaryExpression	"""on"""		1005444	0					
ANR	1005725	UnaryOperationExpression	"! qdict_get_try_bool ( options , BDRV_OPT_READ_ONLY , false )"		1005444	1					
ANR	1005726	UnaryOperator	!		1005444	0					
ANR	1005727	CallExpression	"qdict_get_try_bool ( options , BDRV_OPT_READ_ONLY , false )"		1005444	1					
ANR	1005728	Callee	qdict_get_try_bool		1005444	0					
ANR	1005729	Identifier	qdict_get_try_bool		1005444	0					
ANR	1005730	ArgumentList	options		1005444	1					
ANR	1005731	Argument	options		1005444	0					
ANR	1005732	Identifier	options		1005444	0					
ANR	1005733	Argument	BDRV_OPT_READ_ONLY		1005444	1					
ANR	1005734	Identifier	BDRV_OPT_READ_ONLY		1005444	0					
ANR	1005735	Argument	false		1005444	2					
ANR	1005736	Identifier	false		1005444	0					
ANR	1005737	CompoundStatement		127:65:1879:1879	1005444	1					
ANR	1005738	ExpressionStatement	flags |= ( BDRV_O_RDWR | BDRV_O_ALLOW_RDWR )	141:8:2300:2342	1005444	0	True				
ANR	1005739	AssignmentExpression	flags |= ( BDRV_O_RDWR | BDRV_O_ALLOW_RDWR )		1005444	0		|=			
ANR	1005740	Identifier	flags		1005444	0					
ANR	1005741	InclusiveOrExpression	BDRV_O_RDWR | BDRV_O_ALLOW_RDWR		1005444	1		|			
ANR	1005742	Identifier	BDRV_O_RDWR		1005444	0					
ANR	1005743	Identifier	BDRV_O_ALLOW_RDWR		1005444	1					
ANR	1005744	ElseStatement	else		1005444	0					
ANR	1005745	CompoundStatement		131:11:1946:1946	1005444	0					
ANR	1005746	ExpressionStatement	flags &= ~BDRV_O_RDWR	145:8:2367:2388	1005444	0	True				
ANR	1005747	AssignmentExpression	flags &= ~BDRV_O_RDWR		1005444	0		&=			
ANR	1005748	Identifier	flags		1005444	0					
ANR	1005749	Identifier	~BDRV_O_RDWR		1005444	1					
ANR	1005750	IfStatement	if ( flags & BDRV_O_SNAPSHOT )		1005444	21					
ANR	1005751	Condition	flags & BDRV_O_SNAPSHOT	151:8:2408:2430	1005444	0	True				
ANR	1005752	BitAndExpression	flags & BDRV_O_SNAPSHOT		1005444	0		&			
ANR	1005753	Identifier	flags		1005444	0					
ANR	1005754	Identifier	BDRV_O_SNAPSHOT		1005444	1					
ANR	1005755	CompoundStatement		139:33:2023:2023	1005444	1					
ANR	1005756	ExpressionStatement	snapshot_options = qdict_new ( )	153:8:2444:2474	1005444	0	True				
ANR	1005757	AssignmentExpression	snapshot_options = qdict_new ( )		1005444	0		=			
ANR	1005758	Identifier	snapshot_options		1005444	0					
ANR	1005759	CallExpression	qdict_new ( )		1005444	1					
ANR	1005760	Callee	qdict_new		1005444	0					
ANR	1005761	Identifier	qdict_new		1005444	0					
ANR	1005762	ArgumentList			1005444	1					
ANR	1005763	ExpressionStatement	"bdrv_temp_snapshot_options ( & snapshot_flags , snapshot_options , flags , options )"	155:8:2485:2598	1005444	1	True				
ANR	1005764	CallExpression	"bdrv_temp_snapshot_options ( & snapshot_flags , snapshot_options , flags , options )"		1005444	0					
ANR	1005765	Callee	bdrv_temp_snapshot_options		1005444	0					
ANR	1005766	Identifier	bdrv_temp_snapshot_options		1005444	0					
ANR	1005767	ArgumentList	& snapshot_flags		1005444	1					
ANR	1005768	Argument	& snapshot_flags		1005444	0					
ANR	1005769	UnaryOperationExpression	& snapshot_flags		1005444	0					
ANR	1005770	UnaryOperator	&		1005444	0					
ANR	1005771	Identifier	snapshot_flags		1005444	1					
ANR	1005772	Argument	snapshot_options		1005444	1					
ANR	1005773	Identifier	snapshot_options		1005444	0					
ANR	1005774	Argument	flags		1005444	2					
ANR	1005775	Identifier	flags		1005444	0					
ANR	1005776	Argument	options		1005444	3					
ANR	1005777	Identifier	options		1005444	0					
ANR	1005778	ExpressionStatement	"qdict_del ( options , BDRV_OPT_READ_ONLY )"	161:8:2672:2710	1005444	2	True				
ANR	1005779	CallExpression	"qdict_del ( options , BDRV_OPT_READ_ONLY )"		1005444	0					
ANR	1005780	Callee	qdict_del		1005444	0					
ANR	1005781	Identifier	qdict_del		1005444	0					
ANR	1005782	ArgumentList	options		1005444	1					
ANR	1005783	Argument	options		1005444	0					
ANR	1005784	Identifier	options		1005444	0					
ANR	1005785	Argument	BDRV_OPT_READ_ONLY		1005444	1					
ANR	1005786	Identifier	BDRV_OPT_READ_ONLY		1005444	0					
ANR	1005787	ExpressionStatement	"bdrv_backing_options ( & flags , options , flags , options )"	163:8:2721:2774	1005444	3	True				
ANR	1005788	CallExpression	"bdrv_backing_options ( & flags , options , flags , options )"		1005444	0					
ANR	1005789	Callee	bdrv_backing_options		1005444	0					
ANR	1005790	Identifier	bdrv_backing_options		1005444	0					
ANR	1005791	ArgumentList	& flags		1005444	1					
ANR	1005792	Argument	& flags		1005444	0					
ANR	1005793	UnaryOperationExpression	& flags		1005444	0					
ANR	1005794	UnaryOperator	&		1005444	0					
ANR	1005795	Identifier	flags		1005444	1					
ANR	1005796	Argument	options		1005444	1					
ANR	1005797	Identifier	options		1005444	0					
ANR	1005798	Argument	flags		1005444	2					
ANR	1005799	Identifier	flags		1005444	0					
ANR	1005800	Argument	options		1005444	3					
ANR	1005801	Identifier	options		1005444	0					
ANR	1005802	ExpressionStatement	bs -> open_flags = flags	169:4:2790:2812	1005444	22	True				
ANR	1005803	AssignmentExpression	bs -> open_flags = flags		1005444	0		=			
ANR	1005804	PtrMemberAccess	bs -> open_flags		1005444	0					
ANR	1005805	Identifier	bs		1005444	0					
ANR	1005806	Identifier	open_flags		1005444	1					
ANR	1005807	Identifier	flags		1005444	1					
ANR	1005808	ExpressionStatement	bs -> options = options	171:4:2819:2840	1005444	23	True				
ANR	1005809	AssignmentExpression	bs -> options = options		1005444	0		=			
ANR	1005810	PtrMemberAccess	bs -> options		1005444	0					
ANR	1005811	Identifier	bs		1005444	0					
ANR	1005812	Identifier	options		1005444	1					
ANR	1005813	Identifier	options		1005444	1					
ANR	1005814	ExpressionStatement	options = qdict_clone_shallow ( options )	173:4:2847:2885	1005444	24	True				
ANR	1005815	AssignmentExpression	options = qdict_clone_shallow ( options )		1005444	0		=			
ANR	1005816	Identifier	options		1005444	0					
ANR	1005817	CallExpression	qdict_clone_shallow ( options )		1005444	1					
ANR	1005818	Callee	qdict_clone_shallow		1005444	0					
ANR	1005819	Identifier	qdict_clone_shallow		1005444	0					
ANR	1005820	ArgumentList	options		1005444	1					
ANR	1005821	Argument	options		1005444	0					
ANR	1005822	Identifier	options		1005444	0					
ANR	1005823	ExpressionStatement	"drvname = qdict_get_try_str ( options , ""driver"" )"	179:4:2940:2986	1005444	25	True				
ANR	1005824	AssignmentExpression	"drvname = qdict_get_try_str ( options , ""driver"" )"		1005444	0		=			
ANR	1005825	Identifier	drvname		1005444	0					
ANR	1005826	CallExpression	"qdict_get_try_str ( options , ""driver"" )"		1005444	1					
ANR	1005827	Callee	qdict_get_try_str		1005444	0					
ANR	1005828	Identifier	qdict_get_try_str		1005444	0					
ANR	1005829	ArgumentList	options		1005444	1					
ANR	1005830	Argument	options		1005444	0					
ANR	1005831	Identifier	options		1005444	0					
ANR	1005832	Argument	"""driver"""		1005444	1					
ANR	1005833	PrimaryExpression	"""driver"""		1005444	0					
ANR	1005834	IfStatement	if ( drvname )		1005444	26					
ANR	1005835	Condition	drvname	181:8:2997:3003	1005444	0	True				
ANR	1005836	Identifier	drvname		1005444	0					
ANR	1005837	CompoundStatement		169:17:2596:2596	1005444	1					
ANR	1005838	ExpressionStatement	drv = bdrv_find_format ( drvname )	183:8:3017:3048	1005444	0	True				
ANR	1005839	AssignmentExpression	drv = bdrv_find_format ( drvname )		1005444	0		=			
ANR	1005840	Identifier	drv		1005444	0					
ANR	1005841	CallExpression	bdrv_find_format ( drvname )		1005444	1					
ANR	1005842	Callee	bdrv_find_format		1005444	0					
ANR	1005843	Identifier	bdrv_find_format		1005444	0					
ANR	1005844	ArgumentList	drvname		1005444	1					
ANR	1005845	Argument	drvname		1005444	0					
ANR	1005846	Identifier	drvname		1005444	0					
ANR	1005847	IfStatement	if ( ! drv )		1005444	1					
ANR	1005848	Condition	! drv	185:12:3063:3066	1005444	0	True				
ANR	1005849	UnaryOperationExpression	! drv		1005444	0					
ANR	1005850	UnaryOperator	!		1005444	0					
ANR	1005851	Identifier	drv		1005444	1					
ANR	1005852	CompoundStatement		173:18:2659:2659	1005444	1					
ANR	1005853	ExpressionStatement	"error_setg ( errp , ""Unknown driver: '%s'"" , drvname )"	187:12:3084:3133	1005444	0	True				
ANR	1005854	CallExpression	"error_setg ( errp , ""Unknown driver: '%s'"" , drvname )"		1005444	0					
ANR	1005855	Callee	error_setg		1005444	0					
ANR	1005856	Identifier	error_setg		1005444	0					
ANR	1005857	ArgumentList	errp		1005444	1					
ANR	1005858	Argument	errp		1005444	0					
ANR	1005859	Identifier	errp		1005444	0					
ANR	1005860	Argument	"""Unknown driver: '%s'"""		1005444	1					
ANR	1005861	PrimaryExpression	"""Unknown driver: '%s'"""		1005444	0					
ANR	1005862	Argument	drvname		1005444	2					
ANR	1005863	Identifier	drvname		1005444	0					
ANR	1005864	GotoStatement	goto fail ;	189:12:3148:3157	1005444	1	True				
ANR	1005865	Identifier	fail		1005444	0					
ANR	1005866	ExpressionStatement	assert ( drvname || ! ( flags & BDRV_O_PROTOCOL ) )	197:4:3184:3229	1005444	27	True				
ANR	1005867	CallExpression	assert ( drvname || ! ( flags & BDRV_O_PROTOCOL ) )		1005444	0					
ANR	1005868	Callee	assert		1005444	0					
ANR	1005869	Identifier	assert		1005444	0					
ANR	1005870	ArgumentList	drvname || ! ( flags & BDRV_O_PROTOCOL )		1005444	1					
ANR	1005871	Argument	drvname || ! ( flags & BDRV_O_PROTOCOL )		1005444	0					
ANR	1005872	OrExpression	drvname || ! ( flags & BDRV_O_PROTOCOL )		1005444	0		||			
ANR	1005873	Identifier	drvname		1005444	0					
ANR	1005874	UnaryOperationExpression	! ( flags & BDRV_O_PROTOCOL )		1005444	1					
ANR	1005875	UnaryOperator	!		1005444	0					
ANR	1005876	BitAndExpression	flags & BDRV_O_PROTOCOL		1005444	1		&			
ANR	1005877	Identifier	flags		1005444	0					
ANR	1005878	Identifier	BDRV_O_PROTOCOL		1005444	1					
ANR	1005879	ExpressionStatement	"backing = qdict_get_try_str ( options , ""backing"" )"	201:4:3238:3285	1005444	28	True				
ANR	1005880	AssignmentExpression	"backing = qdict_get_try_str ( options , ""backing"" )"		1005444	0		=			
ANR	1005881	Identifier	backing		1005444	0					
ANR	1005882	CallExpression	"qdict_get_try_str ( options , ""backing"" )"		1005444	1					
ANR	1005883	Callee	qdict_get_try_str		1005444	0					
ANR	1005884	Identifier	qdict_get_try_str		1005444	0					
ANR	1005885	ArgumentList	options		1005444	1					
ANR	1005886	Argument	options		1005444	0					
ANR	1005887	Identifier	options		1005444	0					
ANR	1005888	Argument	"""backing"""		1005444	1					
ANR	1005889	PrimaryExpression	"""backing"""		1005444	0					
ANR	1005890	IfStatement	if ( backing && * backing == '\\0' )		1005444	29					
ANR	1005891	Condition	backing && * backing == '\\0'	203:8:3296:3322	1005444	0	True				
ANR	1005892	AndExpression	backing && * backing == '\\0'		1005444	0		&&			
ANR	1005893	Identifier	backing		1005444	0					
ANR	1005894	EqualityExpression	* backing == '\\0'		1005444	1		==			
ANR	1005895	UnaryOperationExpression	* backing		1005444	0					
ANR	1005896	UnaryOperator	*		1005444	0					
ANR	1005897	Identifier	backing		1005444	1					
ANR	1005898	PrimaryExpression	'\\0'		1005444	1					
ANR	1005899	CompoundStatement		191:37:2915:2915	1005444	1					
ANR	1005900	ExpressionStatement	flags |= BDRV_O_NO_BACKING	205:8:3336:3362	1005444	0	True				
ANR	1005901	AssignmentExpression	flags |= BDRV_O_NO_BACKING		1005444	0		|=			
ANR	1005902	Identifier	flags		1005444	0					
ANR	1005903	Identifier	BDRV_O_NO_BACKING		1005444	1					
ANR	1005904	ExpressionStatement	"qdict_del ( options , ""backing"" )"	207:8:3373:3402	1005444	1	True				
ANR	1005905	CallExpression	"qdict_del ( options , ""backing"" )"		1005444	0					
ANR	1005906	Callee	qdict_del		1005444	0					
ANR	1005907	Identifier	qdict_del		1005444	0					
ANR	1005908	ArgumentList	options		1005444	1					
ANR	1005909	Argument	options		1005444	0					
ANR	1005910	Identifier	options		1005444	0					
ANR	1005911	Argument	"""backing"""		1005444	1					
ANR	1005912	PrimaryExpression	"""backing"""		1005444	0					
ANR	1005913	IfStatement	if ( ( flags & BDRV_O_PROTOCOL ) == 0 )		1005444	30					
ANR	1005914	Condition	( flags & BDRV_O_PROTOCOL ) == 0	215:8:3470:3499	1005444	0	True				
ANR	1005915	EqualityExpression	( flags & BDRV_O_PROTOCOL ) == 0		1005444	0		==			
ANR	1005916	BitAndExpression	flags & BDRV_O_PROTOCOL		1005444	0		&			
ANR	1005917	Identifier	flags		1005444	0					
ANR	1005918	Identifier	BDRV_O_PROTOCOL		1005444	1					
ANR	1005919	PrimaryExpression	0		1005444	1					
ANR	1005920	CompoundStatement		203:40:3092:3092	1005444	1					
ANR	1005921	ExpressionStatement	"file = bdrv_open_child ( filename , options , ""file"" , bs , & child_file , true , & local_err )"	217:8:3513:3629	1005444	0	True				
ANR	1005922	AssignmentExpression	"file = bdrv_open_child ( filename , options , ""file"" , bs , & child_file , true , & local_err )"		1005444	0		=			
ANR	1005923	Identifier	file		1005444	0					
ANR	1005924	CallExpression	"bdrv_open_child ( filename , options , ""file"" , bs , & child_file , true , & local_err )"		1005444	1					
ANR	1005925	Callee	bdrv_open_child		1005444	0					
ANR	1005926	Identifier	bdrv_open_child		1005444	0					
ANR	1005927	ArgumentList	filename		1005444	1					
ANR	1005928	Argument	filename		1005444	0					
ANR	1005929	Identifier	filename		1005444	0					
ANR	1005930	Argument	options		1005444	1					
ANR	1005931	Identifier	options		1005444	0					
ANR	1005932	Argument	"""file"""		1005444	2					
ANR	1005933	PrimaryExpression	"""file"""		1005444	0					
ANR	1005934	Argument	bs		1005444	3					
ANR	1005935	Identifier	bs		1005444	0					
ANR	1005936	Argument	& child_file		1005444	4					
ANR	1005937	UnaryOperationExpression	& child_file		1005444	0					
ANR	1005938	UnaryOperator	&		1005444	0					
ANR	1005939	Identifier	child_file		1005444	1					
ANR	1005940	Argument	true		1005444	5					
ANR	1005941	Identifier	true		1005444	0					
ANR	1005942	Argument	& local_err		1005444	6					
ANR	1005943	UnaryOperationExpression	& local_err		1005444	0					
ANR	1005944	UnaryOperator	&		1005444	0					
ANR	1005945	Identifier	local_err		1005444	1					
ANR	1005946	IfStatement	if ( local_err )		1005444	1					
ANR	1005947	Condition	local_err	221:12:3644:3652	1005444	0	True				
ANR	1005948	Identifier	local_err		1005444	0					
ANR	1005949	CompoundStatement		209:23:3245:3245	1005444	1					
ANR	1005950	GotoStatement	goto fail ;	223:12:3670:3679	1005444	0	True				
ANR	1005951	Identifier	fail		1005444	0					
ANR	1005952	ExpressionStatement	bs -> probed = ! drv	233:4:3738:3755	1005444	31	True				
ANR	1005953	AssignmentExpression	bs -> probed = ! drv		1005444	0		=			
ANR	1005954	PtrMemberAccess	bs -> probed		1005444	0					
ANR	1005955	Identifier	bs		1005444	0					
ANR	1005956	Identifier	probed		1005444	1					
ANR	1005957	UnaryOperationExpression	! drv		1005444	1					
ANR	1005958	UnaryOperator	!		1005444	0					
ANR	1005959	Identifier	drv		1005444	1					
ANR	1005960	IfStatement	if ( ! drv && file )		1005444	32					
ANR	1005961	Condition	! drv && file	235:8:3766:3777	1005444	0	True				
ANR	1005962	AndExpression	! drv && file		1005444	0		&&			
ANR	1005963	UnaryOperationExpression	! drv		1005444	0					
ANR	1005964	UnaryOperator	!		1005444	0					
ANR	1005965	Identifier	drv		1005444	1					
ANR	1005966	Identifier	file		1005444	1					
ANR	1005967	CompoundStatement		223:22:3370:3370	1005444	1					
ANR	1005968	ExpressionStatement	"ret = find_image_format ( file , filename , & drv , & local_err )"	237:8:3791:3848	1005444	0	True				
ANR	1005969	AssignmentExpression	"ret = find_image_format ( file , filename , & drv , & local_err )"		1005444	0		=			
ANR	1005970	Identifier	ret		1005444	0					
ANR	1005971	CallExpression	"find_image_format ( file , filename , & drv , & local_err )"		1005444	1					
ANR	1005972	Callee	find_image_format		1005444	0					
ANR	1005973	Identifier	find_image_format		1005444	0					
ANR	1005974	ArgumentList	file		1005444	1					
ANR	1005975	Argument	file		1005444	0					
ANR	1005976	Identifier	file		1005444	0					
ANR	1005977	Argument	filename		1005444	1					
ANR	1005978	Identifier	filename		1005444	0					
ANR	1005979	Argument	& drv		1005444	2					
ANR	1005980	UnaryOperationExpression	& drv		1005444	0					
ANR	1005981	UnaryOperator	&		1005444	0					
ANR	1005982	Identifier	drv		1005444	1					
ANR	1005983	Argument	& local_err		1005444	3					
ANR	1005984	UnaryOperationExpression	& local_err		1005444	0					
ANR	1005985	UnaryOperator	&		1005444	0					
ANR	1005986	Identifier	local_err		1005444	1					
ANR	1005987	IfStatement	if ( ret < 0 )		1005444	1					
ANR	1005988	Condition	ret < 0	239:12:3863:3869	1005444	0	True				
ANR	1005989	RelationalExpression	ret < 0		1005444	0		<			
ANR	1005990	Identifier	ret		1005444	0					
ANR	1005991	PrimaryExpression	0		1005444	1					
ANR	1005992	CompoundStatement		227:21:3462:3462	1005444	1					
ANR	1005993	GotoStatement	goto fail ;	241:12:3887:3896	1005444	0	True				
ANR	1005994	Identifier	fail		1005444	0					
ANR	1005995	ExpressionStatement	"qdict_put ( bs -> options , ""driver"" , qstring_from_str ( drv -> format_name ) )"	267:8:4552:4620	1005444	2	True				
ANR	1005996	CallExpression	"qdict_put ( bs -> options , ""driver"" , qstring_from_str ( drv -> format_name ) )"		1005444	0					
ANR	1005997	Callee	qdict_put		1005444	0					
ANR	1005998	Identifier	qdict_put		1005444	0					
ANR	1005999	ArgumentList	bs -> options		1005444	1					
ANR	1006000	Argument	bs -> options		1005444	0					
ANR	1006001	PtrMemberAccess	bs -> options		1005444	0					
ANR	1006002	Identifier	bs		1005444	0					
ANR	1006003	Identifier	options		1005444	1					
ANR	1006004	Argument	"""driver"""		1005444	1					
ANR	1006005	PrimaryExpression	"""driver"""		1005444	0					
ANR	1006006	Argument	qstring_from_str ( drv -> format_name )		1005444	2					
ANR	1006007	CallExpression	qstring_from_str ( drv -> format_name )		1005444	0					
ANR	1006008	Callee	qstring_from_str		1005444	0					
ANR	1006009	Identifier	qstring_from_str		1005444	0					
ANR	1006010	ArgumentList	drv -> format_name		1005444	1					
ANR	1006011	Argument	drv -> format_name		1005444	0					
ANR	1006012	PtrMemberAccess	drv -> format_name		1005444	0					
ANR	1006013	Identifier	drv		1005444	0					
ANR	1006014	Identifier	format_name		1005444	1					
ANR	1006015	ExpressionStatement	"qdict_put ( options , ""driver"" , qstring_from_str ( drv -> format_name ) )"	269:8:4631:4695	1005444	3	True				
ANR	1006016	CallExpression	"qdict_put ( options , ""driver"" , qstring_from_str ( drv -> format_name ) )"		1005444	0					
ANR	1006017	Callee	qdict_put		1005444	0					
ANR	1006018	Identifier	qdict_put		1005444	0					
ANR	1006019	ArgumentList	options		1005444	1					
ANR	1006020	Argument	options		1005444	0					
ANR	1006021	Identifier	options		1005444	0					
ANR	1006022	Argument	"""driver"""		1005444	1					
ANR	1006023	PrimaryExpression	"""driver"""		1005444	0					
ANR	1006024	Argument	qstring_from_str ( drv -> format_name )		1005444	2					
ANR	1006025	CallExpression	qstring_from_str ( drv -> format_name )		1005444	0					
ANR	1006026	Callee	qstring_from_str		1005444	0					
ANR	1006027	Identifier	qstring_from_str		1005444	0					
ANR	1006028	ArgumentList	drv -> format_name		1005444	1					
ANR	1006029	Argument	drv -> format_name		1005444	0					
ANR	1006030	PtrMemberAccess	drv -> format_name		1005444	0					
ANR	1006031	Identifier	drv		1005444	0					
ANR	1006032	Identifier	format_name		1005444	1					
ANR	1006033	ElseStatement	else		1005444	0					
ANR	1006034	IfStatement	if ( ! drv )		1005444	0					
ANR	1006035	Condition	! drv	271:15:4713:4716	1005444	0	True				
ANR	1006036	UnaryOperationExpression	! drv		1005444	0					
ANR	1006037	UnaryOperator	!		1005444	0					
ANR	1006038	Identifier	drv		1005444	1					
ANR	1006039	CompoundStatement		259:21:4309:4309	1005444	1					
ANR	1006040	ExpressionStatement	"error_setg ( errp , ""Must specify either driver or file"" )"	273:8:4730:4784	1005444	0	True				
ANR	1006041	CallExpression	"error_setg ( errp , ""Must specify either driver or file"" )"		1005444	0					
ANR	1006042	Callee	error_setg		1005444	0					
ANR	1006043	Identifier	error_setg		1005444	0					
ANR	1006044	ArgumentList	errp		1005444	1					
ANR	1006045	Argument	errp		1005444	0					
ANR	1006046	Identifier	errp		1005444	0					
ANR	1006047	Argument	"""Must specify either driver or file"""		1005444	1					
ANR	1006048	PrimaryExpression	"""Must specify either driver or file"""		1005444	0					
ANR	1006049	GotoStatement	goto fail ;	275:8:4795:4804	1005444	1	True				
ANR	1006050	Identifier	fail		1005444	0					
ANR	1006051	ExpressionStatement	assert ( ! ! ( flags & BDRV_O_PROTOCOL ) == ! ! drv -> bdrv_file_open )	283:4:4901:4961	1005444	33	True				
ANR	1006052	CallExpression	assert ( ! ! ( flags & BDRV_O_PROTOCOL ) == ! ! drv -> bdrv_file_open )		1005444	0					
ANR	1006053	Callee	assert		1005444	0					
ANR	1006054	Identifier	assert		1005444	0					
ANR	1006055	ArgumentList	! ! ( flags & BDRV_O_PROTOCOL ) == ! ! drv -> bdrv_file_open		1005444	1					
ANR	1006056	Argument	! ! ( flags & BDRV_O_PROTOCOL ) == ! ! drv -> bdrv_file_open		1005444	0					
ANR	1006057	EqualityExpression	! ! ( flags & BDRV_O_PROTOCOL ) == ! ! drv -> bdrv_file_open		1005444	0		==			
ANR	1006058	UnaryOperationExpression	! ! ( flags & BDRV_O_PROTOCOL )		1005444	0					
ANR	1006059	UnaryOperator	!		1005444	0					
ANR	1006060	UnaryOperationExpression	! ( flags & BDRV_O_PROTOCOL )		1005444	1					
ANR	1006061	UnaryOperator	!		1005444	0					
ANR	1006062	BitAndExpression	flags & BDRV_O_PROTOCOL		1005444	1		&			
ANR	1006063	Identifier	flags		1005444	0					
ANR	1006064	Identifier	BDRV_O_PROTOCOL		1005444	1					
ANR	1006065	UnaryOperationExpression	! ! drv -> bdrv_file_open		1005444	1					
ANR	1006066	UnaryOperator	!		1005444	0					
ANR	1006067	UnaryOperationExpression	! drv -> bdrv_file_open		1005444	1					
ANR	1006068	UnaryOperator	!		1005444	0					
ANR	1006069	PtrMemberAccess	drv -> bdrv_file_open		1005444	1					
ANR	1006070	Identifier	drv		1005444	0					
ANR	1006071	Identifier	bdrv_file_open		1005444	1					
ANR	1006072	ExpressionStatement	assert ( ! ( flags & BDRV_O_PROTOCOL ) || ! file )	289:4:5112:5155	1005444	34	True				
ANR	1006073	CallExpression	assert ( ! ( flags & BDRV_O_PROTOCOL ) || ! file )		1005444	0					
ANR	1006074	Callee	assert		1005444	0					
ANR	1006075	Identifier	assert		1005444	0					
ANR	1006076	ArgumentList	! ( flags & BDRV_O_PROTOCOL ) || ! file		1005444	1					
ANR	1006077	Argument	! ( flags & BDRV_O_PROTOCOL ) || ! file		1005444	0					
ANR	1006078	OrExpression	! ( flags & BDRV_O_PROTOCOL ) || ! file		1005444	0		||			
ANR	1006079	UnaryOperationExpression	! ( flags & BDRV_O_PROTOCOL )		1005444	0					
ANR	1006080	UnaryOperator	!		1005444	0					
ANR	1006081	BitAndExpression	flags & BDRV_O_PROTOCOL		1005444	1		&			
ANR	1006082	Identifier	flags		1005444	0					
ANR	1006083	Identifier	BDRV_O_PROTOCOL		1005444	1					
ANR	1006084	UnaryOperationExpression	! file		1005444	1					
ANR	1006085	UnaryOperator	!		1005444	0					
ANR	1006086	Identifier	file		1005444	1					
ANR	1006087	ExpressionStatement	"ret = bdrv_open_common ( bs , file , options , & local_err )"	295:4:5190:5243	1005444	35	True				
ANR	1006088	AssignmentExpression	"ret = bdrv_open_common ( bs , file , options , & local_err )"		1005444	0		=			
ANR	1006089	Identifier	ret		1005444	0					
ANR	1006090	CallExpression	"bdrv_open_common ( bs , file , options , & local_err )"		1005444	1					
ANR	1006091	Callee	bdrv_open_common		1005444	0					
ANR	1006092	Identifier	bdrv_open_common		1005444	0					
ANR	1006093	ArgumentList	bs		1005444	1					
ANR	1006094	Argument	bs		1005444	0					
ANR	1006095	Identifier	bs		1005444	0					
ANR	1006096	Argument	file		1005444	1					
ANR	1006097	Identifier	file		1005444	0					
ANR	1006098	Argument	options		1005444	2					
ANR	1006099	Identifier	options		1005444	0					
ANR	1006100	Argument	& local_err		1005444	3					
ANR	1006101	UnaryOperationExpression	& local_err		1005444	0					
ANR	1006102	UnaryOperator	&		1005444	0					
ANR	1006103	Identifier	local_err		1005444	1					
ANR	1006104	IfStatement	if ( ret < 0 )		1005444	36					
ANR	1006105	Condition	ret < 0	297:8:5254:5260	1005444	0	True				
ANR	1006106	RelationalExpression	ret < 0		1005444	0		<			
ANR	1006107	Identifier	ret		1005444	0					
ANR	1006108	PrimaryExpression	0		1005444	1					
ANR	1006109	CompoundStatement		285:17:4853:4853	1005444	1					
ANR	1006110	GotoStatement	goto fail ;	299:8:5274:5283	1005444	0	True				
ANR	1006111	Identifier	fail		1005444	0					
ANR	1006112	IfStatement	if ( file && ( bs -> file != file ) )		1005444	37					
ANR	1006113	Condition	file && ( bs -> file != file )	305:8:5303:5328	1005444	0	True				
ANR	1006114	AndExpression	file && ( bs -> file != file )		1005444	0		&&			
ANR	1006115	Identifier	file		1005444	0					
ANR	1006116	EqualityExpression	bs -> file != file		1005444	1		!=			
ANR	1006117	PtrMemberAccess	bs -> file		1005444	0					
ANR	1006118	Identifier	bs		1005444	0					
ANR	1006119	Identifier	file		1005444	1					
ANR	1006120	Identifier	file		1005444	1					
ANR	1006121	CompoundStatement		293:36:4921:4921	1005444	1					
ANR	1006122	ExpressionStatement	"bdrv_unref_child ( bs , file )"	307:8:5342:5368	1005444	0	True				
ANR	1006123	CallExpression	"bdrv_unref_child ( bs , file )"		1005444	0					
ANR	1006124	Callee	bdrv_unref_child		1005444	0					
ANR	1006125	Identifier	bdrv_unref_child		1005444	0					
ANR	1006126	ArgumentList	bs		1005444	1					
ANR	1006127	Argument	bs		1005444	0					
ANR	1006128	Identifier	bs		1005444	0					
ANR	1006129	Argument	file		1005444	1					
ANR	1006130	Identifier	file		1005444	0					
ANR	1006131	ExpressionStatement	file = NULL	309:8:5379:5390	1005444	1	True				
ANR	1006132	AssignmentExpression	file = NULL		1005444	0		=			
ANR	1006133	Identifier	file		1005444	0					
ANR	1006134	Identifier	NULL		1005444	1					
ANR	1006135	IfStatement	if ( ( flags & BDRV_O_NO_BACKING ) == 0 )		1005444	38					
ANR	1006136	Condition	( flags & BDRV_O_NO_BACKING ) == 0	317:8:5456:5487	1005444	0	True				
ANR	1006137	EqualityExpression	( flags & BDRV_O_NO_BACKING ) == 0		1005444	0		==			
ANR	1006138	BitAndExpression	flags & BDRV_O_NO_BACKING		1005444	0		&			
ANR	1006139	Identifier	flags		1005444	0					
ANR	1006140	Identifier	BDRV_O_NO_BACKING		1005444	1					
ANR	1006141	PrimaryExpression	0		1005444	1					
ANR	1006142	CompoundStatement		305:42:5080:5080	1005444	1					
ANR	1006143	ExpressionStatement	"ret = bdrv_open_backing_file ( bs , options , ""backing"" , & local_err )"	319:8:5501:5565	1005444	0	True				
ANR	1006144	AssignmentExpression	"ret = bdrv_open_backing_file ( bs , options , ""backing"" , & local_err )"		1005444	0		=			
ANR	1006145	Identifier	ret		1005444	0					
ANR	1006146	CallExpression	"bdrv_open_backing_file ( bs , options , ""backing"" , & local_err )"		1005444	1					
ANR	1006147	Callee	bdrv_open_backing_file		1005444	0					
ANR	1006148	Identifier	bdrv_open_backing_file		1005444	0					
ANR	1006149	ArgumentList	bs		1005444	1					
ANR	1006150	Argument	bs		1005444	0					
ANR	1006151	Identifier	bs		1005444	0					
ANR	1006152	Argument	options		1005444	1					
ANR	1006153	Identifier	options		1005444	0					
ANR	1006154	Argument	"""backing"""		1005444	2					
ANR	1006155	PrimaryExpression	"""backing"""		1005444	0					
ANR	1006156	Argument	& local_err		1005444	3					
ANR	1006157	UnaryOperationExpression	& local_err		1005444	0					
ANR	1006158	UnaryOperator	&		1005444	0					
ANR	1006159	Identifier	local_err		1005444	1					
ANR	1006160	IfStatement	if ( ret < 0 )		1005444	1					
ANR	1006161	Condition	ret < 0	321:12:5580:5586	1005444	0	True				
ANR	1006162	RelationalExpression	ret < 0		1005444	0		<			
ANR	1006163	Identifier	ret		1005444	0					
ANR	1006164	PrimaryExpression	0		1005444	1					
ANR	1006165	CompoundStatement		309:21:5179:5179	1005444	1					
ANR	1006166	GotoStatement	goto close_and_fail ;	323:12:5604:5623	1005444	0	True				
ANR	1006167	Identifier	close_and_fail		1005444	0					
ANR	1006168	ExpressionStatement	bdrv_refresh_filename ( bs )	331:4:5650:5675	1005444	39	True				
ANR	1006169	CallExpression	bdrv_refresh_filename ( bs )		1005444	0					
ANR	1006170	Callee	bdrv_refresh_filename		1005444	0					
ANR	1006171	Identifier	bdrv_refresh_filename		1005444	0					
ANR	1006172	ArgumentList	bs		1005444	1					
ANR	1006173	Argument	bs		1005444	0					
ANR	1006174	Identifier	bs		1005444	0					
ANR	1006175	IfStatement	if ( options && ( qdict_size ( options ) != 0 ) )		1005444	40					
ANR	1006176	Condition	options && ( qdict_size ( options ) != 0 )	337:8:5738:5774	1005444	0	True				
ANR	1006177	AndExpression	options && ( qdict_size ( options ) != 0 )		1005444	0		&&			
ANR	1006178	Identifier	options		1005444	0					
ANR	1006179	EqualityExpression	qdict_size ( options ) != 0		1005444	1		!=			
ANR	1006180	CallExpression	qdict_size ( options )		1005444	0					
ANR	1006181	Callee	qdict_size		1005444	0					
ANR	1006182	Identifier	qdict_size		1005444	0					
ANR	1006183	ArgumentList	options		1005444	1					
ANR	1006184	Argument	options		1005444	0					
ANR	1006185	Identifier	options		1005444	0					
ANR	1006186	PrimaryExpression	0		1005444	1					
ANR	1006187	CompoundStatement		327:8:5378:5424	1005444	1					
ANR	1006188	IdentifierDeclStatement	const QDictEntry * entry = qdict_first ( options ) ;	339:8:5788:5834	1005444	0	True				
ANR	1006189	IdentifierDecl	* entry = qdict_first ( options )		1005444	0					
ANR	1006190	IdentifierDeclType	const QDictEntry *		1005444	0					
ANR	1006191	Identifier	entry		1005444	1					
ANR	1006192	AssignmentExpression	* entry = qdict_first ( options )		1005444	2		=			
ANR	1006193	Identifier	entry		1005444	0					
ANR	1006194	CallExpression	qdict_first ( options )		1005444	1					
ANR	1006195	Callee	qdict_first		1005444	0					
ANR	1006196	Identifier	qdict_first		1005444	0					
ANR	1006197	ArgumentList	options		1005444	1					
ANR	1006198	Argument	options		1005444	0					
ANR	1006199	Identifier	options		1005444	0					
ANR	1006200	IfStatement	if ( flags & BDRV_O_PROTOCOL )		1005444	1					
ANR	1006201	Condition	flags & BDRV_O_PROTOCOL	341:12:5849:5871	1005444	0	True				
ANR	1006202	BitAndExpression	flags & BDRV_O_PROTOCOL		1005444	0		&			
ANR	1006203	Identifier	flags		1005444	0					
ANR	1006204	Identifier	BDRV_O_PROTOCOL		1005444	1					
ANR	1006205	CompoundStatement		329:37:5464:5464	1005444	1					
ANR	1006206	Statement	error_setg	343:12:5889:5898	1005444	0	True				
ANR	1006207	Statement	(	343:22:5899:5899	1005444	1	True				
ANR	1006208	Statement	errp	343:23:5900:5903	1005444	2	True				
ANR	1006209	Statement	","	343:27:5904:5904	1005444	3	True				
ANR	1006210	Statement	"""Block protocol '%s' doesn't support the option """	343:29:5906:5954	1005444	4	True				
ANR	1006211	Statement	"""'%s'"""	345:23:5980:5985	1005444	5	True				
ANR	1006212	Statement	","	345:29:5986:5986	1005444	6	True				
ANR	1006213	Statement	drv	345:31:5988:5990	1005444	7	True				
ANR	1006214	Statement	->	345:34:5991:5992	1005444	8	True				
ANR	1006215	Statement	format_name	345:36:5993:6003	1005444	9	True				
ANR	1006216	Statement	","	345:47:6004:6004	1005444	10	True				
ANR	1006217	Statement	entry	345:49:6006:6010	1005444	11	True				
ANR	1006218	Statement	->	345:54:6011:6012	1005444	12	True				
ANR	1006219	Statement	key	345:56:6013:6015	1005444	13	True				
ANR	1006220	Statement	)	345:59:6016:6016	1005444	14	True				
ANR	1006221	ExpressionStatement		345:60:6017:6017	1005444	15	True				
ANR	1006222	ElseStatement	else		1005444	0					
ANR	1006223	CompoundStatement		335:15:5625:5625	1005444	0					
ANR	1006224	ExpressionStatement	"error_setg ( errp , ""Block format '%s' does not support the option '%s'"" , drv -> format_name , entry -> key )"	349:12:6050:6198	1005444	0	True				
ANR	1006225	CallExpression	"error_setg ( errp , ""Block format '%s' does not support the option '%s'"" , drv -> format_name , entry -> key )"		1005444	0					
ANR	1006226	Callee	error_setg		1005444	0					
ANR	1006227	Identifier	error_setg		1005444	0					
ANR	1006228	ArgumentList	errp		1005444	1					
ANR	1006229	Argument	errp		1005444	0					
ANR	1006230	Identifier	errp		1005444	0					
ANR	1006231	Argument	"""Block format '%s' does not support the option '%s'"""		1005444	1					
ANR	1006232	PrimaryExpression	"""Block format '%s' does not support the option '%s'"""		1005444	0					
ANR	1006233	Argument	drv -> format_name		1005444	2					
ANR	1006234	PtrMemberAccess	drv -> format_name		1005444	0					
ANR	1006235	Identifier	drv		1005444	0					
ANR	1006236	Identifier	format_name		1005444	1					
ANR	1006237	Argument	entry -> key		1005444	3					
ANR	1006238	PtrMemberAccess	entry -> key		1005444	0					
ANR	1006239	Identifier	entry		1005444	0					
ANR	1006240	Identifier	key		1005444	1					
ANR	1006241	GotoStatement	goto close_and_fail ;	359:8:6222:6241	1005444	2	True				
ANR	1006242	Identifier	close_and_fail		1005444	0					
ANR	1006243	IfStatement	if ( ! bdrv_key_required ( bs ) )		1005444	41					
ANR	1006244	Condition	! bdrv_key_required ( bs )	365:8:6261:6282	1005444	0	True				
ANR	1006245	UnaryOperationExpression	! bdrv_key_required ( bs )		1005444	0					
ANR	1006246	UnaryOperator	!		1005444	0					
ANR	1006247	CallExpression	bdrv_key_required ( bs )		1005444	1					
ANR	1006248	Callee	bdrv_key_required		1005444	0					
ANR	1006249	Identifier	bdrv_key_required		1005444	0					
ANR	1006250	ArgumentList	bs		1005444	1					
ANR	1006251	Argument	bs		1005444	0					
ANR	1006252	Identifier	bs		1005444	0					
ANR	1006253	CompoundStatement		353:32:5875:5875	1005444	1					
ANR	1006254	ExpressionStatement	"bdrv_parent_cb_change_media ( bs , true )"	367:8:6296:6333	1005444	0	True				
ANR	1006255	CallExpression	"bdrv_parent_cb_change_media ( bs , true )"		1005444	0					
ANR	1006256	Callee	bdrv_parent_cb_change_media		1005444	0					
ANR	1006257	Identifier	bdrv_parent_cb_change_media		1005444	0					
ANR	1006258	ArgumentList	bs		1005444	1					
ANR	1006259	Argument	bs		1005444	0					
ANR	1006260	Identifier	bs		1005444	0					
ANR	1006261	Argument	true		1005444	1					
ANR	1006262	Identifier	true		1005444	0					
ANR	1006263	ElseStatement	else		1005444	0					
ANR	1006264	IfStatement	if ( ! runstate_check ( RUN_STATE_PRELAUNCH ) && ! runstate_check ( RUN_STATE_INMIGRATE ) && ! runstate_check ( RUN_STATE_PAUSED ) )		1005444	0					
ANR	1006265	Condition	! runstate_check ( RUN_STATE_PRELAUNCH ) && ! runstate_check ( RUN_STATE_INMIGRATE ) && ! runstate_check ( RUN_STATE_PAUSED )	369:15:6351:6495	1005444	0	True				
ANR	1006266	AndExpression	! runstate_check ( RUN_STATE_PRELAUNCH ) && ! runstate_check ( RUN_STATE_INMIGRATE ) && ! runstate_check ( RUN_STATE_PAUSED )		1005444	0		&&			
ANR	1006267	UnaryOperationExpression	! runstate_check ( RUN_STATE_PRELAUNCH )		1005444	0					
ANR	1006268	UnaryOperator	!		1005444	0					
ANR	1006269	CallExpression	runstate_check ( RUN_STATE_PRELAUNCH )		1005444	1					
ANR	1006270	Callee	runstate_check		1005444	0					
ANR	1006271	Identifier	runstate_check		1005444	0					
ANR	1006272	ArgumentList	RUN_STATE_PRELAUNCH		1005444	1					
ANR	1006273	Argument	RUN_STATE_PRELAUNCH		1005444	0					
ANR	1006274	Identifier	RUN_STATE_PRELAUNCH		1005444	0					
ANR	1006275	AndExpression	! runstate_check ( RUN_STATE_INMIGRATE ) && ! runstate_check ( RUN_STATE_PAUSED )		1005444	1		&&			
ANR	1006276	UnaryOperationExpression	! runstate_check ( RUN_STATE_INMIGRATE )		1005444	0					
ANR	1006277	UnaryOperator	!		1005444	0					
ANR	1006278	CallExpression	runstate_check ( RUN_STATE_INMIGRATE )		1005444	1					
ANR	1006279	Callee	runstate_check		1005444	0					
ANR	1006280	Identifier	runstate_check		1005444	0					
ANR	1006281	ArgumentList	RUN_STATE_INMIGRATE		1005444	1					
ANR	1006282	Argument	RUN_STATE_INMIGRATE		1005444	0					
ANR	1006283	Identifier	RUN_STATE_INMIGRATE		1005444	0					
ANR	1006284	UnaryOperationExpression	! runstate_check ( RUN_STATE_PAUSED )		1005444	1					
ANR	1006285	UnaryOperator	!		1005444	0					
ANR	1006286	CallExpression	runstate_check ( RUN_STATE_PAUSED )		1005444	1					
ANR	1006287	Callee	runstate_check		1005444	0					
ANR	1006288	Identifier	runstate_check		1005444	0					
ANR	1006289	ArgumentList	RUN_STATE_PAUSED		1005444	1					
ANR	1006290	Argument	RUN_STATE_PAUSED		1005444	0					
ANR	1006291	Identifier	RUN_STATE_PAUSED		1005444	0					
ANR	1006292	CompoundStatement		361:53:6088:6088	1005444	1					
ANR	1006293	ExpressionStatement	"error_setg ( errp , ""Guest must be stopped for opening of encrypted image"" )"	375:8:6520:6612	1005444	0	True				
ANR	1006294	CallExpression	"error_setg ( errp , ""Guest must be stopped for opening of encrypted image"" )"		1005444	0					
ANR	1006295	Callee	error_setg		1005444	0					
ANR	1006296	Identifier	error_setg		1005444	0					
ANR	1006297	ArgumentList	errp		1005444	1					
ANR	1006298	Argument	errp		1005444	0					
ANR	1006299	Identifier	errp		1005444	0					
ANR	1006300	Argument	"""Guest must be stopped for opening of encrypted image"""		1005444	1					
ANR	1006301	PrimaryExpression	"""Guest must be stopped for opening of encrypted image"""		1005444	0					
ANR	1006302	GotoStatement	goto close_and_fail ;	379:8:6623:6642	1005444	1	True				
ANR	1006303	Identifier	close_and_fail		1005444	0					
ANR	1006304	ExpressionStatement	QDECREF ( options )	385:4:6658:6674	1005444	42	True				
ANR	1006305	CallExpression	QDECREF ( options )		1005444	0					
ANR	1006306	Callee	QDECREF		1005444	0					
ANR	1006307	Identifier	QDECREF		1005444	0					
ANR	1006308	ArgumentList	options		1005444	1					
ANR	1006309	Argument	options		1005444	0					
ANR	1006310	Identifier	options		1005444	0					
ANR	1006311	IfStatement	if ( snapshot_flags )		1005444	43					
ANR	1006312	Condition	snapshot_flags	393:8:6805:6818	1005444	0	True				
ANR	1006313	Identifier	snapshot_flags		1005444	0					
ANR	1006314	CompoundStatement		383:8:6422:6451	1005444	1					
ANR	1006315	IdentifierDeclStatement	BlockDriverState * snapshot_bs ;	395:8:6832:6861	1005444	0	True				
ANR	1006316	IdentifierDecl	* snapshot_bs		1005444	0					
ANR	1006317	IdentifierDeclType	BlockDriverState *		1005444	0					
ANR	1006318	Identifier	snapshot_bs		1005444	1					
ANR	1006319	ExpressionStatement	"snapshot_bs = bdrv_append_temp_snapshot ( bs , snapshot_flags , snapshot_options , & local_err )"	397:8:6872:7010	1005444	1	True				
ANR	1006320	AssignmentExpression	"snapshot_bs = bdrv_append_temp_snapshot ( bs , snapshot_flags , snapshot_options , & local_err )"		1005444	0		=			
ANR	1006321	Identifier	snapshot_bs		1005444	0					
ANR	1006322	CallExpression	"bdrv_append_temp_snapshot ( bs , snapshot_flags , snapshot_options , & local_err )"		1005444	1					
ANR	1006323	Callee	bdrv_append_temp_snapshot		1005444	0					
ANR	1006324	Identifier	bdrv_append_temp_snapshot		1005444	0					
ANR	1006325	ArgumentList	bs		1005444	1					
ANR	1006326	Argument	bs		1005444	0					
ANR	1006327	Identifier	bs		1005444	0					
ANR	1006328	Argument	snapshot_flags		1005444	1					
ANR	1006329	Identifier	snapshot_flags		1005444	0					
ANR	1006330	Argument	snapshot_options		1005444	2					
ANR	1006331	Identifier	snapshot_options		1005444	0					
ANR	1006332	Argument	& local_err		1005444	3					
ANR	1006333	UnaryOperationExpression	& local_err		1005444	0					
ANR	1006334	UnaryOperator	&		1005444	0					
ANR	1006335	Identifier	local_err		1005444	1					
ANR	1006336	ExpressionStatement	snapshot_options = NULL	401:8:7021:7044	1005444	2	True				
ANR	1006337	AssignmentExpression	snapshot_options = NULL		1005444	0		=			
ANR	1006338	Identifier	snapshot_options		1005444	0					
ANR	1006339	Identifier	NULL		1005444	1					
ANR	1006340	IfStatement	if ( local_err )		1005444	3					
ANR	1006341	Condition	local_err	403:12:7059:7067	1005444	0	True				
ANR	1006342	Identifier	local_err		1005444	0					
ANR	1006343	CompoundStatement		391:23:6660:6660	1005444	1					
ANR	1006344	GotoStatement	goto close_and_fail ;	405:12:7085:7104	1005444	0	True				
ANR	1006345	Identifier	close_and_fail		1005444	0					
ANR	1006346	ExpressionStatement	bdrv_unref ( bs )	417:8:7424:7438	1005444	4	True				
ANR	1006347	CallExpression	bdrv_unref ( bs )		1005444	0					
ANR	1006348	Callee	bdrv_unref		1005444	0					
ANR	1006349	Identifier	bdrv_unref		1005444	0					
ANR	1006350	ArgumentList	bs		1005444	1					
ANR	1006351	Argument	bs		1005444	0					
ANR	1006352	Identifier	bs		1005444	0					
ANR	1006353	ExpressionStatement	bs = snapshot_bs	419:8:7449:7465	1005444	5	True				
ANR	1006354	AssignmentExpression	bs = snapshot_bs		1005444	0		=			
ANR	1006355	Identifier	bs		1005444	0					
ANR	1006356	Identifier	snapshot_bs		1005444	1					
ANR	1006357	ReturnStatement	return bs ;	425:4:7481:7490	1005444	44	True				
ANR	1006358	Identifier	bs		1005444	0					
ANR	1006359	Label	fail :	429:0:7495:7499	1005444	45	True				
ANR	1006360	Identifier	fail		1005444	0					
ANR	1006361	IfStatement	if ( file != NULL )		1005444	46					
ANR	1006362	Condition	file != NULL	431:8:7510:7521	1005444	0	True				
ANR	1006363	EqualityExpression	file != NULL		1005444	0		!=			
ANR	1006364	Identifier	file		1005444	0					
ANR	1006365	Identifier	NULL		1005444	1					
ANR	1006366	CompoundStatement		419:22:7114:7114	1005444	1					
ANR	1006367	ExpressionStatement	"bdrv_unref_child ( bs , file )"	433:8:7535:7561	1005444	0	True				
ANR	1006368	CallExpression	"bdrv_unref_child ( bs , file )"		1005444	0					
ANR	1006369	Callee	bdrv_unref_child		1005444	0					
ANR	1006370	Identifier	bdrv_unref_child		1005444	0					
ANR	1006371	ArgumentList	bs		1005444	1					
ANR	1006372	Argument	bs		1005444	0					
ANR	1006373	Identifier	bs		1005444	0					
ANR	1006374	Argument	file		1005444	1					
ANR	1006375	Identifier	file		1005444	0					
ANR	1006376	ExpressionStatement	QDECREF ( snapshot_options )	437:4:7575:7600	1005444	47	True				
ANR	1006377	CallExpression	QDECREF ( snapshot_options )		1005444	0					
ANR	1006378	Callee	QDECREF		1005444	0					
ANR	1006379	Identifier	QDECREF		1005444	0					
ANR	1006380	ArgumentList	snapshot_options		1005444	1					
ANR	1006381	Argument	snapshot_options		1005444	0					
ANR	1006382	Identifier	snapshot_options		1005444	0					
ANR	1006383	ExpressionStatement	QDECREF ( bs -> explicit_options )	439:4:7607:7636	1005444	48	True				
ANR	1006384	CallExpression	QDECREF ( bs -> explicit_options )		1005444	0					
ANR	1006385	Callee	QDECREF		1005444	0					
ANR	1006386	Identifier	QDECREF		1005444	0					
ANR	1006387	ArgumentList	bs -> explicit_options		1005444	1					
ANR	1006388	Argument	bs -> explicit_options		1005444	0					
ANR	1006389	PtrMemberAccess	bs -> explicit_options		1005444	0					
ANR	1006390	Identifier	bs		1005444	0					
ANR	1006391	Identifier	explicit_options		1005444	1					
ANR	1006392	ExpressionStatement	QDECREF ( bs -> options )	441:4:7643:7663	1005444	49	True				
ANR	1006393	CallExpression	QDECREF ( bs -> options )		1005444	0					
ANR	1006394	Callee	QDECREF		1005444	0					
ANR	1006395	Identifier	QDECREF		1005444	0					
ANR	1006396	ArgumentList	bs -> options		1005444	1					
ANR	1006397	Argument	bs -> options		1005444	0					
ANR	1006398	PtrMemberAccess	bs -> options		1005444	0					
ANR	1006399	Identifier	bs		1005444	0					
ANR	1006400	Identifier	options		1005444	1					
ANR	1006401	ExpressionStatement	QDECREF ( options )	443:4:7670:7686	1005444	50	True				
ANR	1006402	CallExpression	QDECREF ( options )		1005444	0					
ANR	1006403	Callee	QDECREF		1005444	0					
ANR	1006404	Identifier	QDECREF		1005444	0					
ANR	1006405	ArgumentList	options		1005444	1					
ANR	1006406	Argument	options		1005444	0					
ANR	1006407	Identifier	options		1005444	0					
ANR	1006408	ExpressionStatement	bs -> options = NULL	445:4:7693:7711	1005444	51	True				
ANR	1006409	AssignmentExpression	bs -> options = NULL		1005444	0		=			
ANR	1006410	PtrMemberAccess	bs -> options		1005444	0					
ANR	1006411	Identifier	bs		1005444	0					
ANR	1006412	Identifier	options		1005444	1					
ANR	1006413	Identifier	NULL		1005444	1					
ANR	1006414	ExpressionStatement	bdrv_unref ( bs )	447:4:7718:7732	1005444	52	True				
ANR	1006415	CallExpression	bdrv_unref ( bs )		1005444	0					
ANR	1006416	Callee	bdrv_unref		1005444	0					
ANR	1006417	Identifier	bdrv_unref		1005444	0					
ANR	1006418	ArgumentList	bs		1005444	1					
ANR	1006419	Argument	bs		1005444	0					
ANR	1006420	Identifier	bs		1005444	0					
ANR	1006421	ExpressionStatement	"error_propagate ( errp , local_err )"	449:4:7739:7771	1005444	53	True				
ANR	1006422	CallExpression	"error_propagate ( errp , local_err )"		1005444	0					
ANR	1006423	Callee	error_propagate		1005444	0					
ANR	1006424	Identifier	error_propagate		1005444	0					
ANR	1006425	ArgumentList	errp		1005444	1					
ANR	1006426	Argument	errp		1005444	0					
ANR	1006427	Identifier	errp		1005444	0					
ANR	1006428	Argument	local_err		1005444	1					
ANR	1006429	Identifier	local_err		1005444	0					
ANR	1006430	ReturnStatement	return NULL ;	451:4:7778:7789	1005444	54	True				
ANR	1006431	Identifier	NULL		1005444	0					
ANR	1006432	Label	close_and_fail :	455:0:7794:7808	1005444	55	True				
ANR	1006433	Identifier	close_and_fail		1005444	0					
ANR	1006434	ExpressionStatement	bdrv_unref ( bs )	457:4:7815:7829	1005444	56	True				
ANR	1006435	CallExpression	bdrv_unref ( bs )		1005444	0					
ANR	1006436	Callee	bdrv_unref		1005444	0					
ANR	1006437	Identifier	bdrv_unref		1005444	0					
ANR	1006438	ArgumentList	bs		1005444	1					
ANR	1006439	Argument	bs		1005444	0					
ANR	1006440	Identifier	bs		1005444	0					
ANR	1006441	ExpressionStatement	QDECREF ( snapshot_options )	459:4:7836:7861	1005444	57	True				
ANR	1006442	CallExpression	QDECREF ( snapshot_options )		1005444	0					
ANR	1006443	Callee	QDECREF		1005444	0					
ANR	1006444	Identifier	QDECREF		1005444	0					
ANR	1006445	ArgumentList	snapshot_options		1005444	1					
ANR	1006446	Argument	snapshot_options		1005444	0					
ANR	1006447	Identifier	snapshot_options		1005444	0					
ANR	1006448	ExpressionStatement	QDECREF ( options )	461:4:7868:7884	1005444	58	True				
ANR	1006449	CallExpression	QDECREF ( options )		1005444	0					
ANR	1006450	Callee	QDECREF		1005444	0					
ANR	1006451	Identifier	QDECREF		1005444	0					
ANR	1006452	ArgumentList	options		1005444	1					
ANR	1006453	Argument	options		1005444	0					
ANR	1006454	Identifier	options		1005444	0					
ANR	1006455	ExpressionStatement	"error_propagate ( errp , local_err )"	463:4:7891:7923	1005444	59	True				
ANR	1006456	CallExpression	"error_propagate ( errp , local_err )"		1005444	0					
ANR	1006457	Callee	error_propagate		1005444	0					
ANR	1006458	Identifier	error_propagate		1005444	0					
ANR	1006459	ArgumentList	errp		1005444	1					
ANR	1006460	Argument	errp		1005444	0					
ANR	1006461	Identifier	errp		1005444	0					
ANR	1006462	Argument	local_err		1005444	1					
ANR	1006463	Identifier	local_err		1005444	0					
ANR	1006464	ReturnStatement	return NULL ;	465:4:7930:7941	1005444	60	True				
ANR	1006465	Identifier	NULL		1005444	0					
ANR	1006466	ReturnType	static BlockDriverState *		1005444	1					
ANR	1006467	Identifier	bdrv_open_inherit		1005444	2					
ANR	1006468	ParameterList	"const char * filename , const char * reference , QDict * options , int flags , BlockDriverState * parent , const BdrvChildRole * child_role , Error * * errp"		1005444	3					
ANR	1006469	Parameter	const char * filename	1:43:43:62	1005444	0	True				
ANR	1006470	ParameterType	const char *		1005444	0					
ANR	1006471	Identifier	filename		1005444	1					
ANR	1006472	Parameter	const char * reference	3:43:109:129	1005444	1	True				
ANR	1006473	ParameterType	const char *		1005444	0					
ANR	1006474	Identifier	reference		1005444	1					
ANR	1006475	Parameter	QDict * options	5:43:176:189	1005444	2	True				
ANR	1006476	ParameterType	QDict *		1005444	0					
ANR	1006477	Identifier	options		1005444	1					
ANR	1006478	Parameter	int flags	5:59:192:200	1005444	3	True				
ANR	1006479	ParameterType	int		1005444	0					
ANR	1006480	Identifier	flags		1005444	1					
ANR	1006481	Parameter	BlockDriverState * parent	7:43:247:270	1005444	4	True				
ANR	1006482	ParameterType	BlockDriverState *		1005444	0					
ANR	1006483	Identifier	parent		1005444	1					
ANR	1006484	Parameter	const BdrvChildRole * child_role	9:43:317:347	1005444	5	True				
ANR	1006485	ParameterType	const BdrvChildRole *		1005444	0					
ANR	1006486	Identifier	child_role		1005444	1					
ANR	1006487	Parameter	Error * * errp	11:43:394:405	1005444	6	True				
ANR	1006488	ParameterType	Error * *		1005444	0					
ANR	1006489	Identifier	errp		1005444	1					
ANR	1006490	CFGEntryNode	ENTRY		1005444		True				
ANR	1006491	CFGExitNode	EXIT		1005444		True				
ANR	1006492	Symbol	~BDRV_O_RDWR		1005444						
ANR	1006493	Symbol	parent		1005444						
ANR	1006494	Symbol	* parent		1005444						
ANR	1006495	Symbol	errp		1005444						
ANR	1006496	Symbol	bs -> file		1005444						
ANR	1006497	Symbol	* backing		1005444						
ANR	1006498	Symbol	bdrv_find_format		1005444						
ANR	1006499	Symbol	& drv		1005444						
ANR	1006500	Symbol	& snapshot_flags		1005444						
ANR	1006501	Symbol	reference		1005444						
ANR	1006502	Symbol	qdict_new		1005444						
ANR	1006503	Symbol	qdict_get_try_bool		1005444						
ANR	1006504	Symbol	drv -> bdrv_file_open		1005444						
ANR	1006505	Symbol	* bs		1005444						
ANR	1006506	Symbol	RUN_STATE_PRELAUNCH		1005444						
ANR	1006507	Symbol	options		1005444						
ANR	1006508	Symbol	drvname		1005444						
ANR	1006509	Symbol	& flags		1005444						
ANR	1006510	Symbol	bdrv_open_common		1005444						
ANR	1006511	Symbol	qdict_first		1005444						
ANR	1006512	Symbol	ret		1005444						
ANR	1006513	Symbol	bdrv_key_required		1005444						
ANR	1006514	Symbol	BDRV_OPT_READ_ONLY		1005444						
ANR	1006515	Symbol	NULL		1005444						
ANR	1006516	Symbol	BDRV_O_SNAPSHOT		1005444						
ANR	1006517	Symbol	bs -> probed		1005444						
ANR	1006518	Symbol	drv		1005444						
ANR	1006519	Symbol	bs -> open_flags		1005444						
ANR	1006520	Symbol	options_non_empty		1005444						
ANR	1006521	Symbol	bdrv_new		1005444						
ANR	1006522	Symbol	entry		1005444						
ANR	1006523	Symbol	bs -> explicit_options		1005444						
ANR	1006524	Symbol	bs -> inherits_from		1005444						
ANR	1006525	Symbol	filename		1005444						
ANR	1006526	Symbol	parent -> options		1005444						
ANR	1006527	Symbol	snapshot_flags		1005444						
ANR	1006528	Symbol	true		1005444						
ANR	1006529	Symbol	bdrv_open_backing_file		1005444						
ANR	1006530	Symbol	BDRV_O_ALLOW_RDWR		1005444						
ANR	1006531	Symbol	local_err		1005444						
ANR	1006532	Symbol	flags		1005444						
ANR	1006533	Symbol	bdrv_open_child		1005444						
ANR	1006534	Symbol	qdict_clone_shallow		1005444						
ANR	1006535	Symbol	entry -> key		1005444						
ANR	1006536	Symbol	BDRV_O_NO_BACKING		1005444						
ANR	1006537	Symbol	& child_file		1005444						
ANR	1006538	Symbol	qstring_from_str		1005444						
ANR	1006539	Symbol	bdrv_lookup_bs		1005444						
ANR	1006540	Symbol	bs		1005444						
ANR	1006541	Symbol	bdrv_append_temp_snapshot		1005444						
ANR	1006542	Symbol	file		1005444						
ANR	1006543	Symbol	backing		1005444						
ANR	1006544	Symbol	& local_err		1005444						
ANR	1006545	Symbol	BDRV_O_PROTOCOL		1005444						
ANR	1006546	Symbol	* entry		1005444						
ANR	1006547	Symbol	snapshot_bs		1005444						
ANR	1006548	Symbol	parent -> open_flags		1005444						
ANR	1006549	Symbol	runstate_check		1005444						
ANR	1006550	Symbol	RUN_STATE_INMIGRATE		1005444						
ANR	1006551	Symbol	false		1005444						
ANR	1006552	Symbol	& filename		1005444						
ANR	1006553	Symbol	qdict_get_try_str		1005444						
ANR	1006554	Symbol	bs -> options		1005444						
ANR	1006555	Symbol	bdrv_fill_options		1005444						
ANR	1006556	Symbol	find_image_format		1005444						
ANR	1006557	Symbol	* drv		1005444						
ANR	1006558	Symbol	g_strcmp0		1005444						
ANR	1006559	Symbol	& options		1005444						
ANR	1006560	Symbol	snapshot_options		1005444						
ANR	1006561	Symbol	qdict_size		1005444						
ANR	1006562	Symbol	RUN_STATE_PAUSED		1005444						
ANR	1006563	Symbol	drv -> format_name		1005444						
ANR	1006564	Symbol	child_role		1005444						
ANR	1006565	Symbol	BDRV_O_RDWR		1005444						
