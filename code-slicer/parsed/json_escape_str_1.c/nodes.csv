command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5067270	File	/home/p4ultr4n/workplace/ReVeal/raw_code/json_escape_str_1.c								
ANR	5067271	Function	json_escape_str	1:0:0:1026							
ANR	5067272	FunctionDef	json_escape_str (const char * s)		5067271	0					
ANR	5067273	CompoundStatement		3:0:45:1026	5067271	0					
ANR	5067274	Statement	static	5:4:52:57	5067271	0	True				
ANR	5067275	IdentifierDeclStatement	"const char json_escape [ ] = { '""' , '\\\\' , '\\b' , '\\f' , '\\n' , '\\r' , '\\t' , 0 } ;"	5:11:59:130	5067271	1	True				
ANR	5067276	IdentifierDecl	"json_escape [ ] = { '""' , '\\\\' , '\\b' , '\\f' , '\\n' , '\\r' , '\\t' , 0 }"		5067271	0					
ANR	5067277	IdentifierDeclType	const char [ ]		5067271	0					
ANR	5067278	Identifier	json_escape		5067271	1					
ANR	5067279	AssignmentExpression	"json_escape [ ] = { '""' , '\\\\' , '\\b' , '\\f' , '\\n' , '\\r' , '\\t' , 0 }"		5067271	2		=			
ANR	5067280	Identifier	json_escape		5067271	0					
ANR	5067281	InitializerList	"'""'"		5067271	1					
ANR	5067282	PrimaryExpression	"'""'"		5067271	0					
ANR	5067283	PrimaryExpression	'\\\\'		5067271	1					
ANR	5067284	PrimaryExpression	'\\b'		5067271	2					
ANR	5067285	PrimaryExpression	'\\f'		5067271	3					
ANR	5067286	PrimaryExpression	'\\n'		5067271	4					
ANR	5067287	PrimaryExpression	'\\r'		5067271	5					
ANR	5067288	PrimaryExpression	'\\t'		5067271	6					
ANR	5067289	PrimaryExpression	0		5067271	7					
ANR	5067290	Statement	static	7:4:137:142	5067271	2	True				
ANR	5067291	IdentifierDeclStatement	"const char json_subst [ ] = { '""' , '\\\\' , 'b' , 'f' , 'n' , 'r' , 't' , 0 } ;"	7:11:144:215	5067271	3	True				
ANR	5067292	IdentifierDecl	"json_subst [ ] = { '""' , '\\\\' , 'b' , 'f' , 'n' , 'r' , 't' , 0 }"		5067271	0					
ANR	5067293	IdentifierDeclType	const char [ ]		5067271	0					
ANR	5067294	Identifier	json_subst		5067271	1					
ANR	5067295	AssignmentExpression	"json_subst [ ] = { '""' , '\\\\' , 'b' , 'f' , 'n' , 'r' , 't' , 0 }"		5067271	2		=			
ANR	5067296	Identifier	json_subst		5067271	0					
ANR	5067297	InitializerList	"'""'"		5067271	1					
ANR	5067298	PrimaryExpression	"'""'"		5067271	0					
ANR	5067299	PrimaryExpression	'\\\\'		5067271	1					
ANR	5067300	PrimaryExpression	'b'		5067271	2					
ANR	5067301	PrimaryExpression	'f'		5067271	3					
ANR	5067302	PrimaryExpression	'n'		5067271	4					
ANR	5067303	PrimaryExpression	'r'		5067271	5					
ANR	5067304	PrimaryExpression	't'		5067271	6					
ANR	5067305	PrimaryExpression	0		5067271	7					
ANR	5067306	IdentifierDeclStatement	"char * ret , * p ;"	9:4:222:235	5067271	4	True				
ANR	5067307	IdentifierDecl	* ret		5067271	0					
ANR	5067308	IdentifierDeclType	char *		5067271	0					
ANR	5067309	Identifier	ret		5067271	1					
ANR	5067310	IdentifierDecl	* p		5067271	1					
ANR	5067311	IdentifierDeclType	char *		5067271	0					
ANR	5067312	Identifier	p		5067271	1					
ANR	5067313	IdentifierDeclStatement	"int i , len = 0 ;"	11:4:242:256	5067271	5	True				
ANR	5067314	IdentifierDecl	i		5067271	0					
ANR	5067315	IdentifierDeclType	int		5067271	0					
ANR	5067316	Identifier	i		5067271	1					
ANR	5067317	IdentifierDecl	len = 0		5067271	1					
ANR	5067318	IdentifierDeclType	int		5067271	0					
ANR	5067319	Identifier	len		5067271	1					
ANR	5067320	AssignmentExpression	len = 0		5067271	2		=			
ANR	5067321	Identifier	len		5067271	0					
ANR	5067322	PrimaryExpression	0		5067271	1					
ANR	5067323	ForStatement	for ( i = 0 ; s [ i ] ; i ++ )		5067271	6					
ANR	5067324	ForInit	i = 0 ;	17:9:319:324	5067271	0	True				
ANR	5067325	AssignmentExpression	i = 0		5067271	0		=			
ANR	5067326	Identifier	i		5067271	0					
ANR	5067327	PrimaryExpression	0		5067271	1					
ANR	5067328	Condition	s [ i ]	17:16:326:329	5067271	1	True				
ANR	5067329	ArrayIndexing	s [ i ]		5067271	0					
ANR	5067330	Identifier	s		5067271	0					
ANR	5067331	Identifier	i		5067271	1					
ANR	5067332	PostIncDecOperationExpression	i ++	17:22:332:334	5067271	2	True				
ANR	5067333	Identifier	i		5067271	0					
ANR	5067334	IncDec	++		5067271	1					
ANR	5067335	CompoundStatement		15:27:291:291	5067271	3					
ANR	5067336	IfStatement	"if ( strchr ( json_escape , s [ i ] ) )"		5067271	0					
ANR	5067337	Condition	"strchr ( json_escape , s [ i ] )"	19:12:352:376	5067271	0	True				
ANR	5067338	CallExpression	"strchr ( json_escape , s [ i ] )"		5067271	0					
ANR	5067339	Callee	strchr		5067271	0					
ANR	5067340	Identifier	strchr		5067271	0					
ANR	5067341	ArgumentList	json_escape		5067271	1					
ANR	5067342	Argument	json_escape		5067271	0					
ANR	5067343	Identifier	json_escape		5067271	0					
ANR	5067344	Argument	s [ i ]		5067271	1					
ANR	5067345	ArrayIndexing	s [ i ]		5067271	0					
ANR	5067346	Identifier	s		5067271	0					
ANR	5067347	Identifier	i		5067271	1					
ANR	5067348	ExpressionStatement	len += 2	19:43:383:391	5067271	1	True				
ANR	5067349	AssignmentExpression	len += 2		5067271	0		+=			
ANR	5067350	Identifier	len		5067271	0					
ANR	5067351	PrimaryExpression	2		5067271	1					
ANR	5067352	ElseStatement	else		5067271	0					
ANR	5067353	IfStatement	if ( ( unsigned char ) s [ i ] < 32 )		5067271	0					
ANR	5067354	Condition	( unsigned char ) s [ i ] < 32	21:17:428:451	5067271	0	True				
ANR	5067355	RelationalExpression	( unsigned char ) s [ i ] < 32		5067271	0		<			
ANR	5067356	CastExpression	( unsigned char ) s [ i ]		5067271	0					
ANR	5067357	CastTarget	unsigned char		5067271	0					
ANR	5067358	ArrayIndexing	s [ i ]		5067271	1					
ANR	5067359	Identifier	s		5067271	0					
ANR	5067360	Identifier	i		5067271	1					
ANR	5067361	PrimaryExpression	32		5067271	1					
ANR	5067362	ExpressionStatement	len += 6	21:43:454:462	5067271	1	True				
ANR	5067363	AssignmentExpression	len += 6		5067271	0		+=			
ANR	5067364	Identifier	len		5067271	0					
ANR	5067365	PrimaryExpression	6		5067271	1					
ANR	5067366	ElseStatement	else		5067271	0					
ANR	5067367	ExpressionStatement	len += 1	23:43:538:546	5067271	0	True				
ANR	5067368	AssignmentExpression	len += 1		5067271	0		+=			
ANR	5067369	Identifier	len		5067271	0					
ANR	5067370	PrimaryExpression	1		5067271	1					
ANR	5067371	ExpressionStatement	p = ret = av_malloc ( len + 1 )	29:4:575:603	5067271	7	True				
ANR	5067372	AssignmentExpression	p = ret = av_malloc ( len + 1 )		5067271	0		=			
ANR	5067373	Identifier	p		5067271	0					
ANR	5067374	AssignmentExpression	ret = av_malloc ( len + 1 )		5067271	1		=			
ANR	5067375	Identifier	ret		5067271	0					
ANR	5067376	CallExpression	av_malloc ( len + 1 )		5067271	1					
ANR	5067377	Callee	av_malloc		5067271	0					
ANR	5067378	Identifier	av_malloc		5067271	0					
ANR	5067379	ArgumentList	len + 1		5067271	1					
ANR	5067380	Argument	len + 1		5067271	0					
ANR	5067381	AdditiveExpression	len + 1		5067271	0		+			
ANR	5067382	Identifier	len		5067271	0					
ANR	5067383	PrimaryExpression	1		5067271	1					
ANR	5067384	IfStatement	if ( ! p )		5067271	8					
ANR	5067385	Condition	! p	31:8:614:615	5067271	0	True				
ANR	5067386	UnaryOperationExpression	! p		5067271	0					
ANR	5067387	UnaryOperator	!		5067271	0					
ANR	5067388	Identifier	p		5067271	1					
ANR	5067389	ReturnStatement	return NULL ;	33:8:627:638	5067271	1	True				
ANR	5067390	Identifier	NULL		5067271	0					
ANR	5067391	ForStatement	for ( i = 0 ; s [ i ] ; i ++ )		5067271	9					
ANR	5067392	ForInit	i = 0 ;	35:9:650:655	5067271	0	True				
ANR	5067393	AssignmentExpression	i = 0		5067271	0		=			
ANR	5067394	Identifier	i		5067271	0					
ANR	5067395	PrimaryExpression	0		5067271	1					
ANR	5067396	Condition	s [ i ]	35:16:657:660	5067271	1	True				
ANR	5067397	ArrayIndexing	s [ i ]		5067271	0					
ANR	5067398	Identifier	s		5067271	0					
ANR	5067399	Identifier	i		5067271	1					
ANR	5067400	PostIncDecOperationExpression	i ++	35:22:663:665	5067271	2	True				
ANR	5067401	Identifier	i		5067271	0					
ANR	5067402	IncDec	++		5067271	1					
ANR	5067403	CompoundStatement		35:8:633:668	5067271	3					
ANR	5067404	IdentifierDeclStatement	"char * q = strchr ( json_escape , s [ i ] ) ;"	37:8:679:714	5067271	0	True				
ANR	5067405	IdentifierDecl	"* q = strchr ( json_escape , s [ i ] )"		5067271	0					
ANR	5067406	IdentifierDeclType	char *		5067271	0					
ANR	5067407	Identifier	q		5067271	1					
ANR	5067408	AssignmentExpression	"* q = strchr ( json_escape , s [ i ] )"		5067271	2		=			
ANR	5067409	Identifier	q		5067271	0					
ANR	5067410	CallExpression	"strchr ( json_escape , s [ i ] )"		5067271	1					
ANR	5067411	Callee	strchr		5067271	0					
ANR	5067412	Identifier	strchr		5067271	0					
ANR	5067413	ArgumentList	json_escape		5067271	1					
ANR	5067414	Argument	json_escape		5067271	0					
ANR	5067415	Identifier	json_escape		5067271	0					
ANR	5067416	Argument	s [ i ]		5067271	1					
ANR	5067417	ArrayIndexing	s [ i ]		5067271	0					
ANR	5067418	Identifier	s		5067271	0					
ANR	5067419	Identifier	i		5067271	1					
ANR	5067420	IfStatement	if ( q )		5067271	1					
ANR	5067421	Condition	q	39:12:729:729	5067271	0	True				
ANR	5067422	Identifier	q		5067271	0					
ANR	5067423	CompoundStatement		37:15:686:686	5067271	1					
ANR	5067424	ExpressionStatement	* p ++ = '\\\\'	41:12:747:758	5067271	0	True				
ANR	5067425	AssignmentExpression	* p ++ = '\\\\'		5067271	0		=			
ANR	5067426	UnaryOperationExpression	* p ++		5067271	0					
ANR	5067427	UnaryOperator	*		5067271	0					
ANR	5067428	PostIncDecOperationExpression	p ++		5067271	1					
ANR	5067429	Identifier	p		5067271	0					
ANR	5067430	IncDec	++		5067271	1					
ANR	5067431	PrimaryExpression	'\\\\'		5067271	1					
ANR	5067432	ExpressionStatement	* p ++ = json_subst [ q - json_escape ]	43:12:773:807	5067271	1	True				
ANR	5067433	AssignmentExpression	* p ++ = json_subst [ q - json_escape ]		5067271	0		=			
ANR	5067434	UnaryOperationExpression	* p ++		5067271	0					
ANR	5067435	UnaryOperator	*		5067271	0					
ANR	5067436	PostIncDecOperationExpression	p ++		5067271	1					
ANR	5067437	Identifier	p		5067271	0					
ANR	5067438	IncDec	++		5067271	1					
ANR	5067439	ArrayIndexing	json_subst [ q - json_escape ]		5067271	1					
ANR	5067440	Identifier	json_subst		5067271	0					
ANR	5067441	AdditiveExpression	q - json_escape		5067271	1		-			
ANR	5067442	Identifier	q		5067271	0					
ANR	5067443	Identifier	json_escape		5067271	1					
ANR	5067444	ElseStatement	else		5067271	0					
ANR	5067445	IfStatement	if ( ( unsigned char ) s [ i ] < 32 )		5067271	0					
ANR	5067446	Condition	( unsigned char ) s [ i ] < 32	45:19:829:852	5067271	0	True				
ANR	5067447	RelationalExpression	( unsigned char ) s [ i ] < 32		5067271	0		<			
ANR	5067448	CastExpression	( unsigned char ) s [ i ]		5067271	0					
ANR	5067449	CastTarget	unsigned char		5067271	0					
ANR	5067450	ArrayIndexing	s [ i ]		5067271	1					
ANR	5067451	Identifier	s		5067271	0					
ANR	5067452	Identifier	i		5067271	1					
ANR	5067453	PrimaryExpression	32		5067271	1					
ANR	5067454	CompoundStatement		43:45:809:809	5067271	1					
ANR	5067455	ExpressionStatement	"snprintf ( p , 7 , ""\\\\u00%02x"" , s [ i ] & 0xff )"	47:12:870:910	5067271	0	True				
ANR	5067456	CallExpression	"snprintf ( p , 7 , ""\\\\u00%02x"" , s [ i ] & 0xff )"		5067271	0					
ANR	5067457	Callee	snprintf		5067271	0					
ANR	5067458	Identifier	snprintf		5067271	0					
ANR	5067459	ArgumentList	p		5067271	1					
ANR	5067460	Argument	p		5067271	0					
ANR	5067461	Identifier	p		5067271	0					
ANR	5067462	Argument	7		5067271	1					
ANR	5067463	PrimaryExpression	7		5067271	0					
ANR	5067464	Argument	"""\\\\u00%02x"""		5067271	2					
ANR	5067465	PrimaryExpression	"""\\\\u00%02x"""		5067271	0					
ANR	5067466	Argument	s [ i ] & 0xff		5067271	3					
ANR	5067467	BitAndExpression	s [ i ] & 0xff		5067271	0		&			
ANR	5067468	ArrayIndexing	s [ i ]		5067271	0					
ANR	5067469	Identifier	s		5067271	0					
ANR	5067470	Identifier	i		5067271	1					
ANR	5067471	PrimaryExpression	0xff		5067271	1					
ANR	5067472	ExpressionStatement	p += 6	49:12:925:931	5067271	1	True				
ANR	5067473	AssignmentExpression	p += 6		5067271	0		+=			
ANR	5067474	Identifier	p		5067271	0					
ANR	5067475	PrimaryExpression	6		5067271	1					
ANR	5067476	ElseStatement	else		5067271	0					
ANR	5067477	CompoundStatement		49:15:903:903	5067271	0					
ANR	5067478	ExpressionStatement	* p ++ = s [ i ]	53:12:964:975	5067271	0	True				
ANR	5067479	AssignmentExpression	* p ++ = s [ i ]		5067271	0		=			
ANR	5067480	UnaryOperationExpression	* p ++		5067271	0					
ANR	5067481	UnaryOperator	*		5067271	0					
ANR	5067482	PostIncDecOperationExpression	p ++		5067271	1					
ANR	5067483	Identifier	p		5067271	0					
ANR	5067484	IncDec	++		5067271	1					
ANR	5067485	ArrayIndexing	s [ i ]		5067271	1					
ANR	5067486	Identifier	s		5067271	0					
ANR	5067487	Identifier	i		5067271	1					
ANR	5067488	ExpressionStatement	* p = 0	59:4:1000:1006	5067271	10	True				
ANR	5067489	AssignmentExpression	* p = 0		5067271	0		=			
ANR	5067490	UnaryOperationExpression	* p		5067271	0					
ANR	5067491	UnaryOperator	*		5067271	0					
ANR	5067492	Identifier	p		5067271	1					
ANR	5067493	PrimaryExpression	0		5067271	1					
ANR	5067494	ReturnStatement	return ret ;	61:4:1013:1023	5067271	11	True				
ANR	5067495	Identifier	ret		5067271	0					
ANR	5067496	ReturnType	static char *		5067271	1					
ANR	5067497	Identifier	json_escape_str		5067271	2					
ANR	5067498	ParameterList	const char * s		5067271	3					
ANR	5067499	Parameter	const char * s	1:29:29:41	5067271	0	True				
ANR	5067500	ParameterType	const char *		5067271	0					
ANR	5067501	Identifier	s		5067271	1					
ANR	5067502	CFGEntryNode	ENTRY		5067271		True				
ANR	5067503	CFGExitNode	EXIT		5067271		True				
ANR	5067504	Symbol	ret		5067271						
ANR	5067505	Symbol	av_malloc		5067271						
ANR	5067506	Symbol	NULL		5067271						
ANR	5067507	Symbol	* p ++		5067271						
ANR	5067508	Symbol	i		5067271						
ANR	5067509	Symbol	strchr		5067271						
ANR	5067510	Symbol	p		5067271						
ANR	5067511	Symbol	json_escape		5067271						
ANR	5067512	Symbol	q		5067271						
ANR	5067513	Symbol	s		5067271						
ANR	5067514	Symbol	* i		5067271						
ANR	5067515	Symbol	json_subst		5067271						
ANR	5067516	Symbol	len		5067271						
ANR	5067517	Symbol	* json_subst		5067271						
ANR	5067518	Symbol	* p		5067271						
ANR	5067519	Symbol	* q		5067271						
ANR	5067520	Symbol	* s		5067271						
ANR	5067521	Symbol	* json_escape		5067271						
