command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9472254	File	/home/p4ultr4n/workplace/ReVeal/raw_code/wv_read_block_header_0.c								
ANR	9472255	Function	wv_read_block_header	1:0:0:4571							
ANR	9472256	FunctionDef	"wv_read_block_header (AVFormatContext * ctx , AVIOContext * pb)"		9472255	0					
ANR	9472257	CompoundStatement		3:0:72:4571	9472255	0					
ANR	9472258	IdentifierDeclStatement	WVContext * wc = ctx -> priv_data ;	5:4:79:109	9472255	0	True				
ANR	9472259	IdentifierDecl	* wc = ctx -> priv_data		9472255	0					
ANR	9472260	IdentifierDeclType	WVContext *		9472255	0					
ANR	9472261	Identifier	wc		9472255	1					
ANR	9472262	AssignmentExpression	* wc = ctx -> priv_data		9472255	2		=			
ANR	9472263	Identifier	wc		9472255	0					
ANR	9472264	PtrMemberAccess	ctx -> priv_data		9472255	1					
ANR	9472265	Identifier	ctx		9472255	0					
ANR	9472266	Identifier	priv_data		9472255	1					
ANR	9472267	IdentifierDeclStatement	int ret ;	7:4:116:123	9472255	1	True				
ANR	9472268	IdentifierDecl	ret		9472255	0					
ANR	9472269	IdentifierDeclType	int		9472255	0					
ANR	9472270	Identifier	ret		9472255	1					
ANR	9472271	IdentifierDeclStatement	"int rate , bpp , chan ;"	9:4:130:149	9472255	2	True				
ANR	9472272	IdentifierDecl	rate		9472255	0					
ANR	9472273	IdentifierDeclType	int		9472255	0					
ANR	9472274	Identifier	rate		9472255	1					
ANR	9472275	IdentifierDecl	bpp		9472255	1					
ANR	9472276	IdentifierDeclType	int		9472255	0					
ANR	9472277	Identifier	bpp		9472255	1					
ANR	9472278	IdentifierDecl	chan		9472255	2					
ANR	9472279	IdentifierDeclType	int		9472255	0					
ANR	9472280	Identifier	chan		9472255	1					
ANR	9472281	IdentifierDeclStatement	"uint32_t chmask , flags ;"	11:4:156:178	9472255	3	True				
ANR	9472282	IdentifierDecl	chmask		9472255	0					
ANR	9472283	IdentifierDeclType	uint32_t		9472255	0					
ANR	9472284	Identifier	chmask		9472255	1					
ANR	9472285	IdentifierDecl	flags		9472255	1					
ANR	9472286	IdentifierDeclType	uint32_t		9472255	0					
ANR	9472287	Identifier	flags		9472255	1					
ANR	9472288	ExpressionStatement	wc -> pos = avio_tell ( pb )	15:4:187:210	9472255	4	True				
ANR	9472289	AssignmentExpression	wc -> pos = avio_tell ( pb )		9472255	0		=			
ANR	9472290	PtrMemberAccess	wc -> pos		9472255	0					
ANR	9472291	Identifier	wc		9472255	0					
ANR	9472292	Identifier	pos		9472255	1					
ANR	9472293	CallExpression	avio_tell ( pb )		9472255	1					
ANR	9472294	Callee	avio_tell		9472255	0					
ANR	9472295	Identifier	avio_tell		9472255	0					
ANR	9472296	ArgumentList	pb		9472255	1					
ANR	9472297	Argument	pb		9472255	0					
ANR	9472298	Identifier	pb		9472255	0					
ANR	9472299	IfStatement	if ( wc -> apetag_start && wc -> pos >= wc -> apetag_start )		9472255	5					
ANR	9472300	Condition	wc -> apetag_start && wc -> pos >= wc -> apetag_start	21:8:283:329	9472255	0	True				
ANR	9472301	AndExpression	wc -> apetag_start && wc -> pos >= wc -> apetag_start		9472255	0		&&			
ANR	9472302	PtrMemberAccess	wc -> apetag_start		9472255	0					
ANR	9472303	Identifier	wc		9472255	0					
ANR	9472304	Identifier	apetag_start		9472255	1					
ANR	9472305	RelationalExpression	wc -> pos >= wc -> apetag_start		9472255	1		>=			
ANR	9472306	PtrMemberAccess	wc -> pos		9472255	0					
ANR	9472307	Identifier	wc		9472255	0					
ANR	9472308	Identifier	pos		9472255	1					
ANR	9472309	PtrMemberAccess	wc -> apetag_start		9472255	1					
ANR	9472310	Identifier	wc		9472255	0					
ANR	9472311	Identifier	apetag_start		9472255	1					
ANR	9472312	ReturnStatement	return AVERROR_EOF ;	23:8:341:359	9472255	1	True				
ANR	9472313	Identifier	AVERROR_EOF		9472255	0					
ANR	9472314	ExpressionStatement	"ret = avio_read ( pb , wc -> block_header , WV_HEADER_SIZE )"	27:4:368:421	9472255	6	True				
ANR	9472315	AssignmentExpression	"ret = avio_read ( pb , wc -> block_header , WV_HEADER_SIZE )"		9472255	0		=			
ANR	9472316	Identifier	ret		9472255	0					
ANR	9472317	CallExpression	"avio_read ( pb , wc -> block_header , WV_HEADER_SIZE )"		9472255	1					
ANR	9472318	Callee	avio_read		9472255	0					
ANR	9472319	Identifier	avio_read		9472255	0					
ANR	9472320	ArgumentList	pb		9472255	1					
ANR	9472321	Argument	pb		9472255	0					
ANR	9472322	Identifier	pb		9472255	0					
ANR	9472323	Argument	wc -> block_header		9472255	1					
ANR	9472324	PtrMemberAccess	wc -> block_header		9472255	0					
ANR	9472325	Identifier	wc		9472255	0					
ANR	9472326	Identifier	block_header		9472255	1					
ANR	9472327	Argument	WV_HEADER_SIZE		9472255	2					
ANR	9472328	Identifier	WV_HEADER_SIZE		9472255	0					
ANR	9472329	IfStatement	if ( ret != WV_HEADER_SIZE )		9472255	7					
ANR	9472330	Condition	ret != WV_HEADER_SIZE	29:8:432:452	9472255	0	True				
ANR	9472331	EqualityExpression	ret != WV_HEADER_SIZE		9472255	0		!=			
ANR	9472332	Identifier	ret		9472255	0					
ANR	9472333	Identifier	WV_HEADER_SIZE		9472255	1					
ANR	9472334	ReturnStatement	return ( ret < 0 ) ? ret : AVERROR_EOF ;	31:8:464:500	9472255	1	True				
ANR	9472335	ConditionalExpression	( ret < 0 ) ? ret : AVERROR_EOF		9472255	0					
ANR	9472336	Condition	ret < 0		9472255	0					
ANR	9472337	RelationalExpression	ret < 0		9472255	0		<			
ANR	9472338	Identifier	ret		9472255	0					
ANR	9472339	PrimaryExpression	0		9472255	1					
ANR	9472340	Identifier	ret		9472255	1					
ANR	9472341	Identifier	AVERROR_EOF		9472255	2					
ANR	9472342	ExpressionStatement	"ret = ff_wv_parse_header ( & wc -> header , wc -> block_header )"	35:4:509:564	9472255	8	True				
ANR	9472343	AssignmentExpression	"ret = ff_wv_parse_header ( & wc -> header , wc -> block_header )"		9472255	0		=			
ANR	9472344	Identifier	ret		9472255	0					
ANR	9472345	CallExpression	"ff_wv_parse_header ( & wc -> header , wc -> block_header )"		9472255	1					
ANR	9472346	Callee	ff_wv_parse_header		9472255	0					
ANR	9472347	Identifier	ff_wv_parse_header		9472255	0					
ANR	9472348	ArgumentList	& wc -> header		9472255	1					
ANR	9472349	Argument	& wc -> header		9472255	0					
ANR	9472350	UnaryOperationExpression	& wc -> header		9472255	0					
ANR	9472351	UnaryOperator	&		9472255	0					
ANR	9472352	PtrMemberAccess	wc -> header		9472255	1					
ANR	9472353	Identifier	wc		9472255	0					
ANR	9472354	Identifier	header		9472255	1					
ANR	9472355	Argument	wc -> block_header		9472255	1					
ANR	9472356	PtrMemberAccess	wc -> block_header		9472255	0					
ANR	9472357	Identifier	wc		9472255	0					
ANR	9472358	Identifier	block_header		9472255	1					
ANR	9472359	IfStatement	if ( ret < 0 )		9472255	9					
ANR	9472360	Condition	ret < 0	37:8:575:581	9472255	0	True				
ANR	9472361	RelationalExpression	ret < 0		9472255	0		<			
ANR	9472362	Identifier	ret		9472255	0					
ANR	9472363	PrimaryExpression	0		9472255	1					
ANR	9472364	CompoundStatement		35:17:511:511	9472255	1					
ANR	9472365	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Invalid block header.\\n"" )"	39:8:595:647	9472255	0	True				
ANR	9472366	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Invalid block header.\\n"" )"		9472255	0					
ANR	9472367	Callee	av_log		9472255	0					
ANR	9472368	Identifier	av_log		9472255	0					
ANR	9472369	ArgumentList	ctx		9472255	1					
ANR	9472370	Argument	ctx		9472255	0					
ANR	9472371	Identifier	ctx		9472255	0					
ANR	9472372	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472373	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472374	Argument	"""Invalid block header.\\n"""		9472255	2					
ANR	9472375	PrimaryExpression	"""Invalid block header.\\n"""		9472255	0					
ANR	9472376	ReturnStatement	return ret ;	41:8:658:668	9472255	1	True				
ANR	9472377	Identifier	ret		9472255	0					
ANR	9472378	IfStatement	if ( wc -> header . version < 0x402 || wc -> header . version > 0x410 )		9472255	10					
ANR	9472379	Condition	wc -> header . version < 0x402 || wc -> header . version > 0x410	47:8:688:743	9472255	0	True				
ANR	9472380	OrExpression	wc -> header . version < 0x402 || wc -> header . version > 0x410		9472255	0		||			
ANR	9472381	RelationalExpression	wc -> header . version < 0x402		9472255	0		<			
ANR	9472382	MemberAccess	wc -> header . version		9472255	0					
ANR	9472383	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472384	Identifier	wc		9472255	0					
ANR	9472385	Identifier	header		9472255	1					
ANR	9472386	Identifier	version		9472255	1					
ANR	9472387	PrimaryExpression	0x402		9472255	1					
ANR	9472388	RelationalExpression	wc -> header . version > 0x410		9472255	1		>			
ANR	9472389	MemberAccess	wc -> header . version		9472255	0					
ANR	9472390	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472391	Identifier	wc		9472255	0					
ANR	9472392	Identifier	header		9472255	1					
ANR	9472393	Identifier	version		9472255	1					
ANR	9472394	PrimaryExpression	0x410		9472255	1					
ANR	9472395	CompoundStatement		45:66:673:673	9472255	1					
ANR	9472396	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Unsupported version %03X\\n"" , wc -> header . version )"	49:8:757:832	9472255	0	True				
ANR	9472397	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Unsupported version %03X\\n"" , wc -> header . version )"		9472255	0					
ANR	9472398	Callee	av_log		9472255	0					
ANR	9472399	Identifier	av_log		9472255	0					
ANR	9472400	ArgumentList	ctx		9472255	1					
ANR	9472401	Argument	ctx		9472255	0					
ANR	9472402	Identifier	ctx		9472255	0					
ANR	9472403	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472404	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472405	Argument	"""Unsupported version %03X\\n"""		9472255	2					
ANR	9472406	PrimaryExpression	"""Unsupported version %03X\\n"""		9472255	0					
ANR	9472407	Argument	wc -> header . version		9472255	3					
ANR	9472408	MemberAccess	wc -> header . version		9472255	0					
ANR	9472409	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472410	Identifier	wc		9472255	0					
ANR	9472411	Identifier	header		9472255	1					
ANR	9472412	Identifier	version		9472255	1					
ANR	9472413	ReturnStatement	return AVERROR_PATCHWELCOME ;	51:8:843:870	9472255	1	True				
ANR	9472414	Identifier	AVERROR_PATCHWELCOME		9472255	0					
ANR	9472415	IfStatement	if ( ! wc -> header . samples )		9472255	11					
ANR	9472416	Condition	! wc -> header . samples	61:8:995:1013	9472255	0	True				
ANR	9472417	UnaryOperationExpression	! wc -> header . samples		9472255	0					
ANR	9472418	UnaryOperator	!		9472255	0					
ANR	9472419	MemberAccess	wc -> header . samples		9472255	1					
ANR	9472420	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472421	Identifier	wc		9472255	0					
ANR	9472422	Identifier	header		9472255	1					
ANR	9472423	Identifier	samples		9472255	1					
ANR	9472424	ReturnStatement	return 0 ;	63:8:1025:1033	9472255	1	True				
ANR	9472425	PrimaryExpression	0		9472255	0					
ANR	9472426	ExpressionStatement	flags = wc -> header . flags	67:4:1060:1085	9472255	12	True				
ANR	9472427	AssignmentExpression	flags = wc -> header . flags		9472255	0		=			
ANR	9472428	Identifier	flags		9472255	0					
ANR	9472429	MemberAccess	wc -> header . flags		9472255	1					
ANR	9472430	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472431	Identifier	wc		9472255	0					
ANR	9472432	Identifier	header		9472255	1					
ANR	9472433	Identifier	flags		9472255	1					
ANR	9472434	ExpressionStatement	bpp = ( ( flags & 3 ) + 1 ) << 3	69:4:1092:1123	9472255	13	True				
ANR	9472435	AssignmentExpression	bpp = ( ( flags & 3 ) + 1 ) << 3		9472255	0		=			
ANR	9472436	Identifier	bpp		9472255	0					
ANR	9472437	ShiftExpression	( ( flags & 3 ) + 1 ) << 3		9472255	1		<<			
ANR	9472438	AdditiveExpression	( flags & 3 ) + 1		9472255	0		+			
ANR	9472439	BitAndExpression	flags & 3		9472255	0		&			
ANR	9472440	Identifier	flags		9472255	0					
ANR	9472441	PrimaryExpression	3		9472255	1					
ANR	9472442	PrimaryExpression	1		9472255	1					
ANR	9472443	PrimaryExpression	3		9472255	1					
ANR	9472444	ExpressionStatement	chan = 1 + ! ( flags & WV_MONO )	71:4:1130:1161	9472255	14	True				
ANR	9472445	AssignmentExpression	chan = 1 + ! ( flags & WV_MONO )		9472255	0		=			
ANR	9472446	Identifier	chan		9472255	0					
ANR	9472447	AdditiveExpression	1 + ! ( flags & WV_MONO )		9472255	1		+			
ANR	9472448	PrimaryExpression	1		9472255	0					
ANR	9472449	UnaryOperationExpression	! ( flags & WV_MONO )		9472255	1					
ANR	9472450	UnaryOperator	!		9472255	0					
ANR	9472451	BitAndExpression	flags & WV_MONO		9472255	1		&			
ANR	9472452	Identifier	flags		9472255	0					
ANR	9472453	Identifier	WV_MONO		9472255	1					
ANR	9472454	ExpressionStatement	chmask = flags & WV_MONO ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO	73:4:1168:1234	9472255	15	True				
ANR	9472455	AssignmentExpression	chmask = flags & WV_MONO ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		9472255	0		=			
ANR	9472456	Identifier	chmask		9472255	0					
ANR	9472457	ConditionalExpression	flags & WV_MONO ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		9472255	1					
ANR	9472458	Condition	flags & WV_MONO		9472255	0					
ANR	9472459	BitAndExpression	flags & WV_MONO		9472255	0		&			
ANR	9472460	Identifier	flags		9472255	0					
ANR	9472461	Identifier	WV_MONO		9472255	1					
ANR	9472462	Identifier	AV_CH_LAYOUT_MONO		9472255	1					
ANR	9472463	Identifier	AV_CH_LAYOUT_STEREO		9472255	2					
ANR	9472464	ExpressionStatement	rate = wv_rates [ ( flags >> 23 ) & 0xF ]	75:4:1241:1279	9472255	16	True				
ANR	9472465	AssignmentExpression	rate = wv_rates [ ( flags >> 23 ) & 0xF ]		9472255	0		=			
ANR	9472466	Identifier	rate		9472255	0					
ANR	9472467	ArrayIndexing	wv_rates [ ( flags >> 23 ) & 0xF ]		9472255	1					
ANR	9472468	Identifier	wv_rates		9472255	0					
ANR	9472469	BitAndExpression	( flags >> 23 ) & 0xF		9472255	1		&			
ANR	9472470	ShiftExpression	flags >> 23		9472255	0		>>			
ANR	9472471	Identifier	flags		9472255	0					
ANR	9472472	PrimaryExpression	23		9472255	1					
ANR	9472473	PrimaryExpression	0xF		9472255	1					
ANR	9472474	ExpressionStatement	wc -> multichannel = ! ( wc -> header . initial && wc -> header . final )	77:4:1286:1346	9472255	17	True				
ANR	9472475	AssignmentExpression	wc -> multichannel = ! ( wc -> header . initial && wc -> header . final )		9472255	0		=			
ANR	9472476	PtrMemberAccess	wc -> multichannel		9472255	0					
ANR	9472477	Identifier	wc		9472255	0					
ANR	9472478	Identifier	multichannel		9472255	1					
ANR	9472479	UnaryOperationExpression	! ( wc -> header . initial && wc -> header . final )		9472255	1					
ANR	9472480	UnaryOperator	!		9472255	0					
ANR	9472481	AndExpression	wc -> header . initial && wc -> header . final		9472255	1		&&			
ANR	9472482	MemberAccess	wc -> header . initial		9472255	0					
ANR	9472483	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472484	Identifier	wc		9472255	0					
ANR	9472485	Identifier	header		9472255	1					
ANR	9472486	Identifier	initial		9472255	1					
ANR	9472487	MemberAccess	wc -> header . final		9472255	1					
ANR	9472488	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472489	Identifier	wc		9472255	0					
ANR	9472490	Identifier	header		9472255	1					
ANR	9472491	Identifier	final		9472255	1					
ANR	9472492	IfStatement	if ( wc -> multichannel )		9472255	18					
ANR	9472493	Condition	wc -> multichannel	79:8:1357:1372	9472255	0	True				
ANR	9472494	PtrMemberAccess	wc -> multichannel		9472255	0					
ANR	9472495	Identifier	wc		9472255	0					
ANR	9472496	Identifier	multichannel		9472255	1					
ANR	9472497	CompoundStatement		77:26:1302:1302	9472255	1					
ANR	9472498	ExpressionStatement	chan = wc -> chan	81:8:1386:1403	9472255	0	True				
ANR	9472499	AssignmentExpression	chan = wc -> chan		9472255	0		=			
ANR	9472500	Identifier	chan		9472255	0					
ANR	9472501	PtrMemberAccess	wc -> chan		9472255	1					
ANR	9472502	Identifier	wc		9472255	0					
ANR	9472503	Identifier	chan		9472255	1					
ANR	9472504	ExpressionStatement	chmask = wc -> chmask	83:8:1414:1433	9472255	1	True				
ANR	9472505	AssignmentExpression	chmask = wc -> chmask		9472255	0		=			
ANR	9472506	Identifier	chmask		9472255	0					
ANR	9472507	PtrMemberAccess	wc -> chmask		9472255	1					
ANR	9472508	Identifier	wc		9472255	0					
ANR	9472509	Identifier	chmask		9472255	1					
ANR	9472510	IfStatement	if ( ( rate == - 1 || ! chan ) && ! wc -> block_parsed )		9472255	19					
ANR	9472511	Condition	( rate == - 1 || ! chan ) && ! wc -> block_parsed	87:8:1451:1492	9472255	0	True				
ANR	9472512	AndExpression	( rate == - 1 || ! chan ) && ! wc -> block_parsed		9472255	0		&&			
ANR	9472513	OrExpression	rate == - 1 || ! chan		9472255	0		||			
ANR	9472514	EqualityExpression	rate == - 1		9472255	0		==			
ANR	9472515	Identifier	rate		9472255	0					
ANR	9472516	UnaryOperationExpression	- 1		9472255	1					
ANR	9472517	UnaryOperator	-		9472255	0					
ANR	9472518	PrimaryExpression	1		9472255	1					
ANR	9472519	UnaryOperationExpression	! chan		9472255	1					
ANR	9472520	UnaryOperator	!		9472255	0					
ANR	9472521	Identifier	chan		9472255	1					
ANR	9472522	UnaryOperationExpression	! wc -> block_parsed		9472255	1					
ANR	9472523	UnaryOperator	!		9472255	0					
ANR	9472524	PtrMemberAccess	wc -> block_parsed		9472255	1					
ANR	9472525	Identifier	wc		9472255	0					
ANR	9472526	Identifier	block_parsed		9472255	1					
ANR	9472527	CompoundStatement		87:8:1433:1489	9472255	1					
ANR	9472528	IdentifierDeclStatement	int64_t block_end = avio_tell ( pb ) + wc -> header . blocksize ;	89:8:1506:1562	9472255	0	True				
ANR	9472529	IdentifierDecl	block_end = avio_tell ( pb ) + wc -> header . blocksize		9472255	0					
ANR	9472530	IdentifierDeclType	int64_t		9472255	0					
ANR	9472531	Identifier	block_end		9472255	1					
ANR	9472532	AssignmentExpression	block_end = avio_tell ( pb ) + wc -> header . blocksize		9472255	2		=			
ANR	9472533	Identifier	block_end		9472255	0					
ANR	9472534	AdditiveExpression	avio_tell ( pb ) + wc -> header . blocksize		9472255	1		+			
ANR	9472535	CallExpression	avio_tell ( pb )		9472255	0					
ANR	9472536	Callee	avio_tell		9472255	0					
ANR	9472537	Identifier	avio_tell		9472255	0					
ANR	9472538	ArgumentList	pb		9472255	1					
ANR	9472539	Argument	pb		9472255	0					
ANR	9472540	Identifier	pb		9472255	0					
ANR	9472541	MemberAccess	wc -> header . blocksize		9472255	1					
ANR	9472542	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472543	Identifier	wc		9472255	0					
ANR	9472544	Identifier	header		9472255	1					
ANR	9472545	Identifier	blocksize		9472255	1					
ANR	9472546	IfStatement	if ( ! pb -> seekable )		9472255	1					
ANR	9472547	Condition	! pb -> seekable	91:12:1577:1589	9472255	0	True				
ANR	9472548	UnaryOperationExpression	! pb -> seekable		9472255	0					
ANR	9472549	UnaryOperator	!		9472255	0					
ANR	9472550	PtrMemberAccess	pb -> seekable		9472255	1					
ANR	9472551	Identifier	pb		9472255	0					
ANR	9472552	Identifier	seekable		9472255	1					
ANR	9472553	CompoundStatement		89:27:1519:1519	9472255	1					
ANR	9472554	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Cannot determine additional parameters\\n"" )"	93:12:1607:1696	9472255	0	True				
ANR	9472555	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Cannot determine additional parameters\\n"" )"		9472255	0					
ANR	9472556	Callee	av_log		9472255	0					
ANR	9472557	Identifier	av_log		9472255	0					
ANR	9472558	ArgumentList	ctx		9472255	1					
ANR	9472559	Argument	ctx		9472255	0					
ANR	9472560	Identifier	ctx		9472255	0					
ANR	9472561	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472562	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472563	Argument	"""Cannot determine additional parameters\\n"""		9472255	2					
ANR	9472564	PrimaryExpression	"""Cannot determine additional parameters\\n"""		9472255	0					
ANR	9472565	ReturnStatement	return AVERROR_INVALIDDATA ;	97:12:1711:1737	9472255	1	True				
ANR	9472566	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472567	WhileStatement	while ( avio_tell ( pb ) < block_end )		9472255	2					
ANR	9472568	Condition	avio_tell ( pb ) < block_end	101:15:1766:1790	9472255	0	True				
ANR	9472569	RelationalExpression	avio_tell ( pb ) < block_end		9472255	0		<			
ANR	9472570	CallExpression	avio_tell ( pb )		9472255	0					
ANR	9472571	Callee	avio_tell		9472255	0					
ANR	9472572	Identifier	avio_tell		9472255	0					
ANR	9472573	ArgumentList	pb		9472255	1					
ANR	9472574	Argument	pb		9472255	0					
ANR	9472575	Identifier	pb		9472255	0					
ANR	9472576	Identifier	block_end		9472255	1					
ANR	9472577	CompoundStatement		101:12:1735:1747	9472255	1					
ANR	9472578	IdentifierDeclStatement	"int id , size ;"	103:12:1808:1820	9472255	0	True				
ANR	9472579	IdentifierDecl	id		9472255	0					
ANR	9472580	IdentifierDeclType	int		9472255	0					
ANR	9472581	Identifier	id		9472255	1					
ANR	9472582	IdentifierDecl	size		9472255	1					
ANR	9472583	IdentifierDeclType	int		9472255	0					
ANR	9472584	Identifier	size		9472255	1					
ANR	9472585	ExpressionStatement	id = avio_r8 ( pb )	105:12:1835:1853	9472255	1	True				
ANR	9472586	AssignmentExpression	id = avio_r8 ( pb )		9472255	0		=			
ANR	9472587	Identifier	id		9472255	0					
ANR	9472588	CallExpression	avio_r8 ( pb )		9472255	1					
ANR	9472589	Callee	avio_r8		9472255	0					
ANR	9472590	Identifier	avio_r8		9472255	0					
ANR	9472591	ArgumentList	pb		9472255	1					
ANR	9472592	Argument	pb		9472255	0					
ANR	9472593	Identifier	pb		9472255	0					
ANR	9472594	ExpressionStatement	size = ( id & 0x80 ) ? avio_rl24 ( pb ) : avio_r8 ( pb )	107:12:1868:1916	9472255	2	True				
ANR	9472595	AssignmentExpression	size = ( id & 0x80 ) ? avio_rl24 ( pb ) : avio_r8 ( pb )		9472255	0		=			
ANR	9472596	Identifier	size		9472255	0					
ANR	9472597	ConditionalExpression	( id & 0x80 ) ? avio_rl24 ( pb ) : avio_r8 ( pb )		9472255	1					
ANR	9472598	Condition	id & 0x80		9472255	0					
ANR	9472599	BitAndExpression	id & 0x80		9472255	0		&			
ANR	9472600	Identifier	id		9472255	0					
ANR	9472601	PrimaryExpression	0x80		9472255	1					
ANR	9472602	CallExpression	avio_rl24 ( pb )		9472255	1					
ANR	9472603	Callee	avio_rl24		9472255	0					
ANR	9472604	Identifier	avio_rl24		9472255	0					
ANR	9472605	ArgumentList	pb		9472255	1					
ANR	9472606	Argument	pb		9472255	0					
ANR	9472607	Identifier	pb		9472255	0					
ANR	9472608	CallExpression	avio_r8 ( pb )		9472255	2					
ANR	9472609	Callee	avio_r8		9472255	0					
ANR	9472610	Identifier	avio_r8		9472255	0					
ANR	9472611	ArgumentList	pb		9472255	1					
ANR	9472612	Argument	pb		9472255	0					
ANR	9472613	Identifier	pb		9472255	0					
ANR	9472614	ExpressionStatement	size <<= 1	109:12:1931:1941	9472255	3	True				
ANR	9472615	AssignmentExpression	size <<= 1		9472255	0		<<=			
ANR	9472616	Identifier	size		9472255	0					
ANR	9472617	PrimaryExpression	1		9472255	1					
ANR	9472618	IfStatement	if ( id & 0x40 )		9472255	4					
ANR	9472619	Condition	id & 0x40	111:16:1960:1968	9472255	0	True				
ANR	9472620	BitAndExpression	id & 0x40		9472255	0		&			
ANR	9472621	Identifier	id		9472255	0					
ANR	9472622	PrimaryExpression	0x40		9472255	1					
ANR	9472623	ExpressionStatement	size --	113:16:1988:1994	9472255	1	True				
ANR	9472624	PostIncDecOperationExpression	size --		9472255	0					
ANR	9472625	Identifier	size		9472255	0					
ANR	9472626	IncDec	--		9472255	1					
ANR	9472627	SwitchStatement	switch ( id & 0x3F )		9472255	5					
ANR	9472628	Condition	id & 0x3F	115:20:2017:2025	9472255	0	True				
ANR	9472629	BitAndExpression	id & 0x3F		9472255	0		&			
ANR	9472630	Identifier	id		9472255	0					
ANR	9472631	PrimaryExpression	0x3F		9472255	1					
ANR	9472632	CompoundStatement		113:31:1955:1955	9472255	1					
ANR	9472633	Label	case 0xD :	117:12:2043:2051	9472255	0	True				
ANR	9472634	IfStatement	if ( size <= 1 )		9472255	1					
ANR	9472635	Condition	size <= 1	119:20:2074:2082	9472255	0	True				
ANR	9472636	RelationalExpression	size <= 1		9472255	0		<=			
ANR	9472637	Identifier	size		9472255	0					
ANR	9472638	PrimaryExpression	1		9472255	1					
ANR	9472639	CompoundStatement		117:31:2012:2012	9472255	1					
ANR	9472640	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Insufficient channel information\\n"" )"	121:20:2108:2199	9472255	0	True				
ANR	9472641	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Insufficient channel information\\n"" )"		9472255	0					
ANR	9472642	Callee	av_log		9472255	0					
ANR	9472643	Identifier	av_log		9472255	0					
ANR	9472644	ArgumentList	ctx		9472255	1					
ANR	9472645	Argument	ctx		9472255	0					
ANR	9472646	Identifier	ctx		9472255	0					
ANR	9472647	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472648	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472649	Argument	"""Insufficient channel information\\n"""		9472255	2					
ANR	9472650	PrimaryExpression	"""Insufficient channel information\\n"""		9472255	0					
ANR	9472651	ReturnStatement	return AVERROR_INVALIDDATA ;	125:20:2222:2248	9472255	1	True				
ANR	9472652	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472653	ExpressionStatement	chan = avio_r8 ( pb )	129:16:2286:2304	9472255	2	True				
ANR	9472654	AssignmentExpression	chan = avio_r8 ( pb )		9472255	0		=			
ANR	9472655	Identifier	chan		9472255	0					
ANR	9472656	CallExpression	avio_r8 ( pb )		9472255	1					
ANR	9472657	Callee	avio_r8		9472255	0					
ANR	9472658	Identifier	avio_r8		9472255	0					
ANR	9472659	ArgumentList	pb		9472255	1					
ANR	9472660	Argument	pb		9472255	0					
ANR	9472661	Identifier	pb		9472255	0					
ANR	9472662	SwitchStatement	switch ( size - 2 )		9472255	3					
ANR	9472663	Condition	size - 2	131:24:2331:2338	9472255	0	True				
ANR	9472664	AdditiveExpression	size - 2		9472255	0		-			
ANR	9472665	Identifier	size		9472255	0					
ANR	9472666	PrimaryExpression	2		9472255	1					
ANR	9472667	CompoundStatement		129:34:2268:2268	9472255	1					
ANR	9472668	Label	case 0 :	133:16:2360:2366	9472255	0	True				
ANR	9472669	ExpressionStatement	chmask = avio_r8 ( pb )	135:20:2389:2409	9472255	1	True				
ANR	9472670	AssignmentExpression	chmask = avio_r8 ( pb )		9472255	0		=			
ANR	9472671	Identifier	chmask		9472255	0					
ANR	9472672	CallExpression	avio_r8 ( pb )		9472255	1					
ANR	9472673	Callee	avio_r8		9472255	0					
ANR	9472674	Identifier	avio_r8		9472255	0					
ANR	9472675	ArgumentList	pb		9472255	1					
ANR	9472676	Argument	pb		9472255	0					
ANR	9472677	Identifier	pb		9472255	0					
ANR	9472678	BreakStatement	break ;	137:20:2432:2437	9472255	2	True				
ANR	9472679	Label	case 1 :	139:16:2456:2462	9472255	3	True				
ANR	9472680	ExpressionStatement	chmask = avio_rl16 ( pb )	141:20:2485:2507	9472255	4	True				
ANR	9472681	AssignmentExpression	chmask = avio_rl16 ( pb )		9472255	0		=			
ANR	9472682	Identifier	chmask		9472255	0					
ANR	9472683	CallExpression	avio_rl16 ( pb )		9472255	1					
ANR	9472684	Callee	avio_rl16		9472255	0					
ANR	9472685	Identifier	avio_rl16		9472255	0					
ANR	9472686	ArgumentList	pb		9472255	1					
ANR	9472687	Argument	pb		9472255	0					
ANR	9472688	Identifier	pb		9472255	0					
ANR	9472689	BreakStatement	break ;	143:20:2530:2535	9472255	5	True				
ANR	9472690	Label	case 2 :	145:16:2554:2560	9472255	6	True				
ANR	9472691	ExpressionStatement	chmask = avio_rl24 ( pb )	147:20:2583:2605	9472255	7	True				
ANR	9472692	AssignmentExpression	chmask = avio_rl24 ( pb )		9472255	0		=			
ANR	9472693	Identifier	chmask		9472255	0					
ANR	9472694	CallExpression	avio_rl24 ( pb )		9472255	1					
ANR	9472695	Callee	avio_rl24		9472255	0					
ANR	9472696	Identifier	avio_rl24		9472255	0					
ANR	9472697	ArgumentList	pb		9472255	1					
ANR	9472698	Argument	pb		9472255	0					
ANR	9472699	Identifier	pb		9472255	0					
ANR	9472700	BreakStatement	break ;	149:20:2628:2633	9472255	8	True				
ANR	9472701	Label	case 3 :	151:16:2652:2658	9472255	9	True				
ANR	9472702	ExpressionStatement	chmask = avio_rl32 ( pb )	153:20:2681:2703	9472255	10	True				
ANR	9472703	AssignmentExpression	chmask = avio_rl32 ( pb )		9472255	0		=			
ANR	9472704	Identifier	chmask		9472255	0					
ANR	9472705	CallExpression	avio_rl32 ( pb )		9472255	1					
ANR	9472706	Callee	avio_rl32		9472255	0					
ANR	9472707	Identifier	avio_rl32		9472255	0					
ANR	9472708	ArgumentList	pb		9472255	1					
ANR	9472709	Argument	pb		9472255	0					
ANR	9472710	Identifier	pb		9472255	0					
ANR	9472711	BreakStatement	break ;	155:20:2726:2731	9472255	11	True				
ANR	9472712	Label	case 5 :	157:16:2750:2756	9472255	12	True				
ANR	9472713	ExpressionStatement	"avio_skip ( pb , 1 )"	159:20:2779:2795	9472255	13	True				
ANR	9472714	CallExpression	"avio_skip ( pb , 1 )"		9472255	0					
ANR	9472715	Callee	avio_skip		9472255	0					
ANR	9472716	Identifier	avio_skip		9472255	0					
ANR	9472717	ArgumentList	pb		9472255	1					
ANR	9472718	Argument	pb		9472255	0					
ANR	9472719	Identifier	pb		9472255	0					
ANR	9472720	Argument	1		9472255	1					
ANR	9472721	PrimaryExpression	1		9472255	0					
ANR	9472722	ExpressionStatement	chan |= ( avio_r8 ( pb ) & 0xF ) << 8	161:20:2818:2851	9472255	14	True				
ANR	9472723	AssignmentExpression	chan |= ( avio_r8 ( pb ) & 0xF ) << 8		9472255	0		|=			
ANR	9472724	Identifier	chan		9472255	0					
ANR	9472725	ShiftExpression	( avio_r8 ( pb ) & 0xF ) << 8		9472255	1		<<			
ANR	9472726	BitAndExpression	avio_r8 ( pb ) & 0xF		9472255	0		&			
ANR	9472727	CallExpression	avio_r8 ( pb )		9472255	0					
ANR	9472728	Callee	avio_r8		9472255	0					
ANR	9472729	Identifier	avio_r8		9472255	0					
ANR	9472730	ArgumentList	pb		9472255	1					
ANR	9472731	Argument	pb		9472255	0					
ANR	9472732	Identifier	pb		9472255	0					
ANR	9472733	PrimaryExpression	0xF		9472255	1					
ANR	9472734	PrimaryExpression	8		9472255	1					
ANR	9472735	ExpressionStatement	chmask = avio_rl24 ( pb )	163:20:2874:2896	9472255	15	True				
ANR	9472736	AssignmentExpression	chmask = avio_rl24 ( pb )		9472255	0		=			
ANR	9472737	Identifier	chmask		9472255	0					
ANR	9472738	CallExpression	avio_rl24 ( pb )		9472255	1					
ANR	9472739	Callee	avio_rl24		9472255	0					
ANR	9472740	Identifier	avio_rl24		9472255	0					
ANR	9472741	ArgumentList	pb		9472255	1					
ANR	9472742	Argument	pb		9472255	0					
ANR	9472743	Identifier	pb		9472255	0					
ANR	9472744	BreakStatement	break ;	165:20:2919:2924	9472255	16	True				
ANR	9472745	Label	default :	167:16:2943:2950	9472255	17	True				
ANR	9472746	Identifier	default		9472255	0					
ANR	9472747	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Invalid channel info size %d\\n"" , size )"	169:20:2973:3066	9472255	18	True				
ANR	9472748	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Invalid channel info size %d\\n"" , size )"		9472255	0					
ANR	9472749	Callee	av_log		9472255	0					
ANR	9472750	Identifier	av_log		9472255	0					
ANR	9472751	ArgumentList	ctx		9472255	1					
ANR	9472752	Argument	ctx		9472255	0					
ANR	9472753	Identifier	ctx		9472255	0					
ANR	9472754	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472755	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472756	Argument	"""Invalid channel info size %d\\n"""		9472255	2					
ANR	9472757	PrimaryExpression	"""Invalid channel info size %d\\n"""		9472255	0					
ANR	9472758	Argument	size		9472255	3					
ANR	9472759	Identifier	size		9472255	0					
ANR	9472760	ReturnStatement	return AVERROR_INVALIDDATA ;	173:20:3089:3115	9472255	19	True				
ANR	9472761	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472762	BreakStatement	break ;	177:16:3153:3158	9472255	4	True				
ANR	9472763	Label	case 0x27 :	179:12:3173:3182	9472255	5	True				
ANR	9472764	ExpressionStatement	rate = avio_rl24 ( pb )	181:16:3201:3221	9472255	6	True				
ANR	9472765	AssignmentExpression	rate = avio_rl24 ( pb )		9472255	0		=			
ANR	9472766	Identifier	rate		9472255	0					
ANR	9472767	CallExpression	avio_rl24 ( pb )		9472255	1					
ANR	9472768	Callee	avio_rl24		9472255	0					
ANR	9472769	Identifier	avio_rl24		9472255	0					
ANR	9472770	ArgumentList	pb		9472255	1					
ANR	9472771	Argument	pb		9472255	0					
ANR	9472772	Identifier	pb		9472255	0					
ANR	9472773	BreakStatement	break ;	183:16:3240:3245	9472255	7	True				
ANR	9472774	Label	default :	185:12:3260:3267	9472255	8	True				
ANR	9472775	Identifier	default		9472255	0					
ANR	9472776	ExpressionStatement	"avio_skip ( pb , size )"	187:16:3286:3305	9472255	9	True				
ANR	9472777	CallExpression	"avio_skip ( pb , size )"		9472255	0					
ANR	9472778	Callee	avio_skip		9472255	0					
ANR	9472779	Identifier	avio_skip		9472255	0					
ANR	9472780	ArgumentList	pb		9472255	1					
ANR	9472781	Argument	pb		9472255	0					
ANR	9472782	Identifier	pb		9472255	0					
ANR	9472783	Argument	size		9472255	1					
ANR	9472784	Identifier	size		9472255	0					
ANR	9472785	IfStatement	if ( id & 0x40 )		9472255	6					
ANR	9472786	Condition	id & 0x40	191:16:3339:3347	9472255	0	True				
ANR	9472787	BitAndExpression	id & 0x40		9472255	0		&			
ANR	9472788	Identifier	id		9472255	0					
ANR	9472789	PrimaryExpression	0x40		9472255	1					
ANR	9472790	ExpressionStatement	"avio_skip ( pb , 1 )"	193:16:3367:3383	9472255	1	True				
ANR	9472791	CallExpression	"avio_skip ( pb , 1 )"		9472255	0					
ANR	9472792	Callee	avio_skip		9472255	0					
ANR	9472793	Identifier	avio_skip		9472255	0					
ANR	9472794	ArgumentList	pb		9472255	1					
ANR	9472795	Argument	pb		9472255	0					
ANR	9472796	Identifier	pb		9472255	0					
ANR	9472797	Argument	1		9472255	1					
ANR	9472798	PrimaryExpression	1		9472255	0					
ANR	9472799	IfStatement	if ( rate == - 1 )		9472255	3					
ANR	9472800	Condition	rate == - 1	197:12:3409:3418	9472255	0	True				
ANR	9472801	EqualityExpression	rate == - 1		9472255	0		==			
ANR	9472802	Identifier	rate		9472255	0					
ANR	9472803	UnaryOperationExpression	- 1		9472255	1					
ANR	9472804	UnaryOperator	-		9472255	0					
ANR	9472805	PrimaryExpression	1		9472255	1					
ANR	9472806	CompoundStatement		195:24:3348:3348	9472255	1					
ANR	9472807	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Cannot determine custom sampling rate\\n"" )"	199:12:3436:3524	9472255	0	True				
ANR	9472808	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Cannot determine custom sampling rate\\n"" )"		9472255	0					
ANR	9472809	Callee	av_log		9472255	0					
ANR	9472810	Identifier	av_log		9472255	0					
ANR	9472811	ArgumentList	ctx		9472255	1					
ANR	9472812	Argument	ctx		9472255	0					
ANR	9472813	Identifier	ctx		9472255	0					
ANR	9472814	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472815	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472816	Argument	"""Cannot determine custom sampling rate\\n"""		9472255	2					
ANR	9472817	PrimaryExpression	"""Cannot determine custom sampling rate\\n"""		9472255	0					
ANR	9472818	ReturnStatement	return AVERROR_INVALIDDATA ;	203:12:3539:3565	9472255	1	True				
ANR	9472819	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472820	ExpressionStatement	"avio_seek ( pb , block_end - wc -> header . blocksize , SEEK_SET )"	207:8:3587:3644	9472255	4	True				
ANR	9472821	CallExpression	"avio_seek ( pb , block_end - wc -> header . blocksize , SEEK_SET )"		9472255	0					
ANR	9472822	Callee	avio_seek		9472255	0					
ANR	9472823	Identifier	avio_seek		9472255	0					
ANR	9472824	ArgumentList	pb		9472255	1					
ANR	9472825	Argument	pb		9472255	0					
ANR	9472826	Identifier	pb		9472255	0					
ANR	9472827	Argument	block_end - wc -> header . blocksize		9472255	1					
ANR	9472828	AdditiveExpression	block_end - wc -> header . blocksize		9472255	0		-			
ANR	9472829	Identifier	block_end		9472255	0					
ANR	9472830	MemberAccess	wc -> header . blocksize		9472255	1					
ANR	9472831	PtrMemberAccess	wc -> header		9472255	0					
ANR	9472832	Identifier	wc		9472255	0					
ANR	9472833	Identifier	header		9472255	1					
ANR	9472834	Identifier	blocksize		9472255	1					
ANR	9472835	Argument	SEEK_SET		9472255	2					
ANR	9472836	Identifier	SEEK_SET		9472255	0					
ANR	9472837	IfStatement	if ( ! wc -> bpp )		9472255	20					
ANR	9472838	Condition	! wc -> bpp	211:8:3662:3669	9472255	0	True				
ANR	9472839	UnaryOperationExpression	! wc -> bpp		9472255	0					
ANR	9472840	UnaryOperator	!		9472255	0					
ANR	9472841	PtrMemberAccess	wc -> bpp		9472255	1					
ANR	9472842	Identifier	wc		9472255	0					
ANR	9472843	Identifier	bpp		9472255	1					
ANR	9472844	ExpressionStatement	wc -> bpp = bpp	213:8:3681:3697	9472255	1	True				
ANR	9472845	AssignmentExpression	wc -> bpp = bpp		9472255	0		=			
ANR	9472846	PtrMemberAccess	wc -> bpp		9472255	0					
ANR	9472847	Identifier	wc		9472255	0					
ANR	9472848	Identifier	bpp		9472255	1					
ANR	9472849	Identifier	bpp		9472255	1					
ANR	9472850	IfStatement	if ( ! wc -> chan )		9472255	21					
ANR	9472851	Condition	! wc -> chan	215:8:3708:3716	9472255	0	True				
ANR	9472852	UnaryOperationExpression	! wc -> chan		9472255	0					
ANR	9472853	UnaryOperator	!		9472255	0					
ANR	9472854	PtrMemberAccess	wc -> chan		9472255	1					
ANR	9472855	Identifier	wc		9472255	0					
ANR	9472856	Identifier	chan		9472255	1					
ANR	9472857	ExpressionStatement	wc -> chan = chan	217:8:3728:3745	9472255	1	True				
ANR	9472858	AssignmentExpression	wc -> chan = chan		9472255	0		=			
ANR	9472859	PtrMemberAccess	wc -> chan		9472255	0					
ANR	9472860	Identifier	wc		9472255	0					
ANR	9472861	Identifier	chan		9472255	1					
ANR	9472862	Identifier	chan		9472255	1					
ANR	9472863	IfStatement	if ( ! wc -> chmask )		9472255	22					
ANR	9472864	Condition	! wc -> chmask	219:8:3756:3766	9472255	0	True				
ANR	9472865	UnaryOperationExpression	! wc -> chmask		9472255	0					
ANR	9472866	UnaryOperator	!		9472255	0					
ANR	9472867	PtrMemberAccess	wc -> chmask		9472255	1					
ANR	9472868	Identifier	wc		9472255	0					
ANR	9472869	Identifier	chmask		9472255	1					
ANR	9472870	ExpressionStatement	wc -> chmask = chmask	221:8:3778:3797	9472255	1	True				
ANR	9472871	AssignmentExpression	wc -> chmask = chmask		9472255	0		=			
ANR	9472872	PtrMemberAccess	wc -> chmask		9472255	0					
ANR	9472873	Identifier	wc		9472255	0					
ANR	9472874	Identifier	chmask		9472255	1					
ANR	9472875	Identifier	chmask		9472255	1					
ANR	9472876	IfStatement	if ( ! wc -> rate )		9472255	23					
ANR	9472877	Condition	! wc -> rate	223:8:3808:3816	9472255	0	True				
ANR	9472878	UnaryOperationExpression	! wc -> rate		9472255	0					
ANR	9472879	UnaryOperator	!		9472255	0					
ANR	9472880	PtrMemberAccess	wc -> rate		9472255	1					
ANR	9472881	Identifier	wc		9472255	0					
ANR	9472882	Identifier	rate		9472255	1					
ANR	9472883	ExpressionStatement	wc -> rate = rate	225:8:3828:3845	9472255	1	True				
ANR	9472884	AssignmentExpression	wc -> rate = rate		9472255	0		=			
ANR	9472885	PtrMemberAccess	wc -> rate		9472255	0					
ANR	9472886	Identifier	wc		9472255	0					
ANR	9472887	Identifier	rate		9472255	1					
ANR	9472888	Identifier	rate		9472255	1					
ANR	9472889	IfStatement	if ( flags && bpp != wc -> bpp )		9472255	24					
ANR	9472890	Condition	flags && bpp != wc -> bpp	229:8:3858:3880	9472255	0	True				
ANR	9472891	AndExpression	flags && bpp != wc -> bpp		9472255	0		&&			
ANR	9472892	Identifier	flags		9472255	0					
ANR	9472893	EqualityExpression	bpp != wc -> bpp		9472255	1		!=			
ANR	9472894	Identifier	bpp		9472255	0					
ANR	9472895	PtrMemberAccess	wc -> bpp		9472255	1					
ANR	9472896	Identifier	wc		9472255	0					
ANR	9472897	Identifier	bpp		9472255	1					
ANR	9472898	CompoundStatement		227:33:3810:3810	9472255	1					
ANR	9472899	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Bits per sample differ, this block: %i, header block: %i\\n"" , bpp , wc -> bpp )"	231:8:3894:4027	9472255	0	True				
ANR	9472900	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Bits per sample differ, this block: %i, header block: %i\\n"" , bpp , wc -> bpp )"		9472255	0					
ANR	9472901	Callee	av_log		9472255	0					
ANR	9472902	Identifier	av_log		9472255	0					
ANR	9472903	ArgumentList	ctx		9472255	1					
ANR	9472904	Argument	ctx		9472255	0					
ANR	9472905	Identifier	ctx		9472255	0					
ANR	9472906	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472907	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472908	Argument	"""Bits per sample differ, this block: %i, header block: %i\\n"""		9472255	2					
ANR	9472909	PrimaryExpression	"""Bits per sample differ, this block: %i, header block: %i\\n"""		9472255	0					
ANR	9472910	Argument	bpp		9472255	3					
ANR	9472911	Identifier	bpp		9472255	0					
ANR	9472912	Argument	wc -> bpp		9472255	4					
ANR	9472913	PtrMemberAccess	wc -> bpp		9472255	0					
ANR	9472914	Identifier	wc		9472255	0					
ANR	9472915	Identifier	bpp		9472255	1					
ANR	9472916	ReturnStatement	return AVERROR_INVALIDDATA ;	237:8:4038:4064	9472255	1	True				
ANR	9472917	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472918	IfStatement	if ( flags && ! wc -> multichannel && chan != wc -> chan )		9472255	25					
ANR	9472919	Condition	flags && ! wc -> multichannel && chan != wc -> chan	241:8:4082:4127	9472255	0	True				
ANR	9472920	AndExpression	flags && ! wc -> multichannel && chan != wc -> chan		9472255	0		&&			
ANR	9472921	Identifier	flags		9472255	0					
ANR	9472922	AndExpression	! wc -> multichannel && chan != wc -> chan		9472255	1		&&			
ANR	9472923	UnaryOperationExpression	! wc -> multichannel		9472255	0					
ANR	9472924	UnaryOperator	!		9472255	0					
ANR	9472925	PtrMemberAccess	wc -> multichannel		9472255	1					
ANR	9472926	Identifier	wc		9472255	0					
ANR	9472927	Identifier	multichannel		9472255	1					
ANR	9472928	EqualityExpression	chan != wc -> chan		9472255	1		!=			
ANR	9472929	Identifier	chan		9472255	0					
ANR	9472930	PtrMemberAccess	wc -> chan		9472255	1					
ANR	9472931	Identifier	wc		9472255	0					
ANR	9472932	Identifier	chan		9472255	1					
ANR	9472933	CompoundStatement		239:56:4057:4057	9472255	1					
ANR	9472934	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Channels differ, this block: %i, header block: %i\\n"" , chan , wc -> chan )"	243:8:4141:4269	9472255	0	True				
ANR	9472935	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Channels differ, this block: %i, header block: %i\\n"" , chan , wc -> chan )"		9472255	0					
ANR	9472936	Callee	av_log		9472255	0					
ANR	9472937	Identifier	av_log		9472255	0					
ANR	9472938	ArgumentList	ctx		9472255	1					
ANR	9472939	Argument	ctx		9472255	0					
ANR	9472940	Identifier	ctx		9472255	0					
ANR	9472941	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472942	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472943	Argument	"""Channels differ, this block: %i, header block: %i\\n"""		9472255	2					
ANR	9472944	PrimaryExpression	"""Channels differ, this block: %i, header block: %i\\n"""		9472255	0					
ANR	9472945	Argument	chan		9472255	3					
ANR	9472946	Identifier	chan		9472255	0					
ANR	9472947	Argument	wc -> chan		9472255	4					
ANR	9472948	PtrMemberAccess	wc -> chan		9472255	0					
ANR	9472949	Identifier	wc		9472255	0					
ANR	9472950	Identifier	chan		9472255	1					
ANR	9472951	ReturnStatement	return AVERROR_INVALIDDATA ;	249:8:4280:4306	9472255	1	True				
ANR	9472952	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472953	IfStatement	if ( flags && rate != - 1 && rate != wc -> rate )		9472255	26					
ANR	9472954	Condition	flags && rate != - 1 && rate != wc -> rate	253:8:4324:4362	9472255	0	True				
ANR	9472955	AndExpression	flags && rate != - 1 && rate != wc -> rate		9472255	0		&&			
ANR	9472956	Identifier	flags		9472255	0					
ANR	9472957	AndExpression	rate != - 1 && rate != wc -> rate		9472255	1		&&			
ANR	9472958	EqualityExpression	rate != - 1		9472255	0		!=			
ANR	9472959	Identifier	rate		9472255	0					
ANR	9472960	UnaryOperationExpression	- 1		9472255	1					
ANR	9472961	UnaryOperator	-		9472255	0					
ANR	9472962	PrimaryExpression	1		9472255	1					
ANR	9472963	EqualityExpression	rate != wc -> rate		9472255	1		!=			
ANR	9472964	Identifier	rate		9472255	0					
ANR	9472965	PtrMemberAccess	wc -> rate		9472255	1					
ANR	9472966	Identifier	wc		9472255	0					
ANR	9472967	Identifier	rate		9472255	1					
ANR	9472968	CompoundStatement		251:49:4292:4292	9472255	1					
ANR	9472969	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Sampling rate differ, this block: %i, header block: %i\\n"" , rate , wc -> rate )"	255:8:4376:4509	9472255	0	True				
ANR	9472970	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Sampling rate differ, this block: %i, header block: %i\\n"" , rate , wc -> rate )"		9472255	0					
ANR	9472971	Callee	av_log		9472255	0					
ANR	9472972	Identifier	av_log		9472255	0					
ANR	9472973	ArgumentList	ctx		9472255	1					
ANR	9472974	Argument	ctx		9472255	0					
ANR	9472975	Identifier	ctx		9472255	0					
ANR	9472976	Argument	AV_LOG_ERROR		9472255	1					
ANR	9472977	Identifier	AV_LOG_ERROR		9472255	0					
ANR	9472978	Argument	"""Sampling rate differ, this block: %i, header block: %i\\n"""		9472255	2					
ANR	9472979	PrimaryExpression	"""Sampling rate differ, this block: %i, header block: %i\\n"""		9472255	0					
ANR	9472980	Argument	rate		9472255	3					
ANR	9472981	Identifier	rate		9472255	0					
ANR	9472982	Argument	wc -> rate		9472255	4					
ANR	9472983	PtrMemberAccess	wc -> rate		9472255	0					
ANR	9472984	Identifier	wc		9472255	0					
ANR	9472985	Identifier	rate		9472255	1					
ANR	9472986	ReturnStatement	return AVERROR_INVALIDDATA ;	261:8:4520:4546	9472255	1	True				
ANR	9472987	Identifier	AVERROR_INVALIDDATA		9472255	0					
ANR	9472988	ReturnStatement	return 0 ;	265:4:4560:4568	9472255	27	True				
ANR	9472989	PrimaryExpression	0		9472255	0					
ANR	9472990	ReturnType	static int		9472255	1					
ANR	9472991	Identifier	wv_read_block_header		9472255	2					
ANR	9472992	ParameterList	"AVFormatContext * ctx , AVIOContext * pb"		9472255	3					
ANR	9472993	Parameter	AVFormatContext * ctx	1:32:32:51	9472255	0	True				
ANR	9472994	ParameterType	AVFormatContext *		9472255	0					
ANR	9472995	Identifier	ctx		9472255	1					
ANR	9472996	Parameter	AVIOContext * pb	1:54:54:68	9472255	1	True				
ANR	9472997	ParameterType	AVIOContext *		9472255	0					
ANR	9472998	Identifier	pb		9472255	1					
ANR	9472999	CFGEntryNode	ENTRY		9472255		True				
ANR	9473000	CFGExitNode	EXIT		9472255		True				
ANR	9473001	Symbol	avio_rl16		9472255						
ANR	9473002	Symbol	ctx -> priv_data		9472255						
ANR	9473003	Symbol	AV_CH_LAYOUT_STEREO		9472255						
ANR	9473004	Symbol	chmask		9472255						
ANR	9473005	Symbol	* wc		9472255						
ANR	9473006	Symbol	wc -> multichannel		9472255						
ANR	9473007	Symbol	AV_CH_LAYOUT_MONO		9472255						
ANR	9473008	Symbol	id		9472255						
ANR	9473009	Symbol	WV_MONO		9472255						
ANR	9473010	Symbol	* wv_rates		9472255						
ANR	9473011	Symbol	ret		9472255						
ANR	9473012	Symbol	* flags		9472255						
ANR	9473013	Symbol	avio_rl24		9472255						
ANR	9473014	Symbol	wc -> header . blocksize		9472255						
ANR	9473015	Symbol	wc -> header . final		9472255						
ANR	9473016	Symbol	ctx		9472255						
ANR	9473017	Symbol	wc -> bpp		9472255						
ANR	9473018	Symbol	wc -> chmask		9472255						
ANR	9473019	Symbol	block_end		9472255						
ANR	9473020	Symbol	wc -> header . samples		9472255						
ANR	9473021	Symbol	size		9472255						
ANR	9473022	Symbol	wc -> header . flags		9472255						
ANR	9473023	Symbol	wc -> header		9472255						
ANR	9473024	Symbol	wc -> apetag_start		9472255						
ANR	9473025	Symbol	avio_r8		9472255						
ANR	9473026	Symbol	avio_read		9472255						
ANR	9473027	Symbol	* pb		9472255						
ANR	9473028	Symbol	avio_rl32		9472255						
ANR	9473029	Symbol	flags		9472255						
ANR	9473030	Symbol	wc		9472255						
ANR	9473031	Symbol	wc -> block_header		9472255						
ANR	9473032	Symbol	& wc -> header		9472255						
ANR	9473033	Symbol	wc -> header . version		9472255						
ANR	9473034	Symbol	avio_tell		9472255						
ANR	9473035	Symbol	wc -> block_parsed		9472255						
ANR	9473036	Symbol	rate		9472255						
ANR	9473037	Symbol	wc -> pos		9472255						
ANR	9473038	Symbol	AVERROR_PATCHWELCOME		9472255						
ANR	9473039	Symbol	SEEK_SET		9472255						
ANR	9473040	Symbol	bpp		9472255						
ANR	9473041	Symbol	AV_LOG_ERROR		9472255						
ANR	9473042	Symbol	pb -> seekable		9472255						
ANR	9473043	Symbol	wc -> rate		9472255						
ANR	9473044	Symbol	wv_rates		9472255						
ANR	9473045	Symbol	WV_HEADER_SIZE		9472255						
ANR	9473046	Symbol	ff_wv_parse_header		9472255						
ANR	9473047	Symbol	* ctx		9472255						
ANR	9473048	Symbol	pb		9472255						
ANR	9473049	Symbol	wc -> header . initial		9472255						
ANR	9473050	Symbol	AVERROR_INVALIDDATA		9472255						
ANR	9473051	Symbol	wc -> chan		9472255						
ANR	9473052	Symbol	chan		9472255						
ANR	9473053	Symbol	AVERROR_EOF		9472255						
