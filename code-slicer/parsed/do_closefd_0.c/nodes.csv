command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2568302	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_closefd_0.c								
ANR	2568303	Function	do_closefd	1:0:0:519							
ANR	2568304	FunctionDef	"do_closefd (Monitor * mon , const QDict * qdict)"		2568303	0					
ANR	2568305	CompoundStatement		3:0:58:519	2568303	0					
ANR	2568306	IdentifierDeclStatement	"const char * fdname = qdict_get_str ( qdict , ""fdname"" ) ;"	5:4:65:116	2568303	0	True				
ANR	2568307	IdentifierDecl	"* fdname = qdict_get_str ( qdict , ""fdname"" )"		2568303	0					
ANR	2568308	IdentifierDeclType	const char *		2568303	0					
ANR	2568309	Identifier	fdname		2568303	1					
ANR	2568310	AssignmentExpression	"* fdname = qdict_get_str ( qdict , ""fdname"" )"		2568303	2		=			
ANR	2568311	Identifier	fdname		2568303	0					
ANR	2568312	CallExpression	"qdict_get_str ( qdict , ""fdname"" )"		2568303	1					
ANR	2568313	Callee	qdict_get_str		2568303	0					
ANR	2568314	Identifier	qdict_get_str		2568303	0					
ANR	2568315	ArgumentList	qdict		2568303	1					
ANR	2568316	Argument	qdict		2568303	0					
ANR	2568317	Identifier	qdict		2568303	0					
ANR	2568318	Argument	"""fdname"""		2568303	1					
ANR	2568319	PrimaryExpression	"""fdname"""		2568303	0					
ANR	2568320	IdentifierDeclStatement	mon_fd_t * monfd ;	7:4:123:138	2568303	1	True				
ANR	2568321	IdentifierDecl	* monfd		2568303	0					
ANR	2568322	IdentifierDeclType	mon_fd_t *		2568303	0					
ANR	2568323	Identifier	monfd		2568303	1					
ANR	2568324	Statement	LIST_FOREACH	11:4:147:158	2568303	2	True				
ANR	2568325	Statement	(	11:16:159:159	2568303	3	True				
ANR	2568326	Statement	monfd	11:17:160:164	2568303	4	True				
ANR	2568327	Statement	","	11:22:165:165	2568303	5	True				
ANR	2568328	Statement	&	11:24:167:167	2568303	6	True				
ANR	2568329	Statement	mon	11:25:168:170	2568303	7	True				
ANR	2568330	Statement	->	11:28:171:172	2568303	8	True				
ANR	2568331	Statement	fds	11:30:173:175	2568303	9	True				
ANR	2568332	Statement	","	11:33:176:176	2568303	10	True				
ANR	2568333	Statement	next	11:35:178:181	2568303	11	True				
ANR	2568334	Statement	)	11:39:182:182	2568303	12	True				
ANR	2568335	CompoundStatement		9:41:125:125	2568303	13					
ANR	2568336	IfStatement	"if ( strcmp ( monfd -> name , fdname ) != 0 )"		2568303	0					
ANR	2568337	Condition	"strcmp ( monfd -> name , fdname ) != 0"	13:12:199:230	2568303	0	True				
ANR	2568338	EqualityExpression	"strcmp ( monfd -> name , fdname ) != 0"		2568303	0		!=			
ANR	2568339	CallExpression	"strcmp ( monfd -> name , fdname )"		2568303	0					
ANR	2568340	Callee	strcmp		2568303	0					
ANR	2568341	Identifier	strcmp		2568303	0					
ANR	2568342	ArgumentList	monfd -> name		2568303	1					
ANR	2568343	Argument	monfd -> name		2568303	0					
ANR	2568344	PtrMemberAccess	monfd -> name		2568303	0					
ANR	2568345	Identifier	monfd		2568303	0					
ANR	2568346	Identifier	name		2568303	1					
ANR	2568347	Argument	fdname		2568303	1					
ANR	2568348	Identifier	fdname		2568303	0					
ANR	2568349	PrimaryExpression	0		2568303	1					
ANR	2568350	CompoundStatement		11:46:174:174	2568303	1					
ANR	2568351	ContinueStatement	continue ;	15:12:248:256	2568303	0	True				
ANR	2568352	ExpressionStatement	"LIST_REMOVE ( monfd , next )"	21:8:280:304	2568303	1	True				
ANR	2568353	CallExpression	"LIST_REMOVE ( monfd , next )"		2568303	0					
ANR	2568354	Callee	LIST_REMOVE		2568303	0					
ANR	2568355	Identifier	LIST_REMOVE		2568303	0					
ANR	2568356	ArgumentList	monfd		2568303	1					
ANR	2568357	Argument	monfd		2568303	0					
ANR	2568358	Identifier	monfd		2568303	0					
ANR	2568359	Argument	next		2568303	1					
ANR	2568360	Identifier	next		2568303	0					
ANR	2568361	ExpressionStatement	close ( monfd -> fd )	23:8:315:331	2568303	2	True				
ANR	2568362	CallExpression	close ( monfd -> fd )		2568303	0					
ANR	2568363	Callee	close		2568303	0					
ANR	2568364	Identifier	close		2568303	0					
ANR	2568365	ArgumentList	monfd -> fd		2568303	1					
ANR	2568366	Argument	monfd -> fd		2568303	0					
ANR	2568367	PtrMemberAccess	monfd -> fd		2568303	0					
ANR	2568368	Identifier	monfd		2568303	0					
ANR	2568369	Identifier	fd		2568303	1					
ANR	2568370	ExpressionStatement	qemu_free ( monfd -> name )	25:8:342:364	2568303	3	True				
ANR	2568371	CallExpression	qemu_free ( monfd -> name )		2568303	0					
ANR	2568372	Callee	qemu_free		2568303	0					
ANR	2568373	Identifier	qemu_free		2568303	0					
ANR	2568374	ArgumentList	monfd -> name		2568303	1					
ANR	2568375	Argument	monfd -> name		2568303	0					
ANR	2568376	PtrMemberAccess	monfd -> name		2568303	0					
ANR	2568377	Identifier	monfd		2568303	0					
ANR	2568378	Identifier	name		2568303	1					
ANR	2568379	ExpressionStatement	qemu_free ( monfd )	27:8:375:391	2568303	4	True				
ANR	2568380	CallExpression	qemu_free ( monfd )		2568303	0					
ANR	2568381	Callee	qemu_free		2568303	0					
ANR	2568382	Identifier	qemu_free		2568303	0					
ANR	2568383	ArgumentList	monfd		2568303	1					
ANR	2568384	Argument	monfd		2568303	0					
ANR	2568385	Identifier	monfd		2568303	0					
ANR	2568386	ReturnStatement	return ;	29:8:402:408	2568303	5	True				
ANR	2568387	ExpressionStatement	"monitor_printf ( mon , ""Failed to find file descriptor named %s\\n"" , fdname )"	35:4:424:516	2568303	14	True				
ANR	2568388	CallExpression	"monitor_printf ( mon , ""Failed to find file descriptor named %s\\n"" , fdname )"		2568303	0					
ANR	2568389	Callee	monitor_printf		2568303	0					
ANR	2568390	Identifier	monitor_printf		2568303	0					
ANR	2568391	ArgumentList	mon		2568303	1					
ANR	2568392	Argument	mon		2568303	0					
ANR	2568393	Identifier	mon		2568303	0					
ANR	2568394	Argument	"""Failed to find file descriptor named %s\\n"""		2568303	1					
ANR	2568395	PrimaryExpression	"""Failed to find file descriptor named %s\\n"""		2568303	0					
ANR	2568396	Argument	fdname		2568303	2					
ANR	2568397	Identifier	fdname		2568303	0					
ANR	2568398	ReturnType	static void		2568303	1					
ANR	2568399	Identifier	do_closefd		2568303	2					
ANR	2568400	ParameterList	"Monitor * mon , const QDict * qdict"		2568303	3					
ANR	2568401	Parameter	Monitor * mon	1:23:23:34	2568303	0	True				
ANR	2568402	ParameterType	Monitor *		2568303	0					
ANR	2568403	Identifier	mon		2568303	1					
ANR	2568404	Parameter	const QDict * qdict	1:37:37:54	2568303	1	True				
ANR	2568405	ParameterType	const QDict *		2568303	0					
ANR	2568406	Identifier	qdict		2568303	1					
ANR	2568407	CFGEntryNode	ENTRY		2568303		True				
ANR	2568408	CFGExitNode	EXIT		2568303		True				
ANR	2568409	CFGErrorNode	ERROR		2568303		True				
ANR	2568410	Symbol	qdict		2568303						
ANR	2568411	Symbol	strcmp		2568303						
ANR	2568412	Symbol	monfd -> name		2568303						
ANR	2568413	Symbol	* monfd		2568303						
ANR	2568414	Symbol	next		2568303						
ANR	2568415	Symbol	qdict_get_str		2568303						
ANR	2568416	Symbol	fdname		2568303						
ANR	2568417	Symbol	mon		2568303						
ANR	2568418	Symbol	monfd		2568303						
ANR	2568419	Symbol	monfd -> fd		2568303						
