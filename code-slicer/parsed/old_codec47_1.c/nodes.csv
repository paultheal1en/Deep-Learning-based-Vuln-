command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6134690	File	/home/p4ultr4n/workplace/ReVeal/raw_code/old_codec47_1.c								
ANR	6134691	Function	old_codec47	1:0:0:3115							
ANR	6134692	FunctionDef	"old_codec47 (SANMVideoContext * ctx , int top , int left , int width , int height)"		6134691	0					
ANR	6134693	CompoundStatement		5:0:113:3115	6134691	0					
ANR	6134694	IdentifierDeclStatement	"int i , j , seq , compr , new_rot , tbl_pos , skip ;"	7:4:120:164	6134691	0	True				
ANR	6134695	IdentifierDecl	i		6134691	0					
ANR	6134696	IdentifierDeclType	int		6134691	0					
ANR	6134697	Identifier	i		6134691	1					
ANR	6134698	IdentifierDecl	j		6134691	1					
ANR	6134699	IdentifierDeclType	int		6134691	0					
ANR	6134700	Identifier	j		6134691	1					
ANR	6134701	IdentifierDecl	seq		6134691	2					
ANR	6134702	IdentifierDeclType	int		6134691	0					
ANR	6134703	Identifier	seq		6134691	1					
ANR	6134704	IdentifierDecl	compr		6134691	3					
ANR	6134705	IdentifierDeclType	int		6134691	0					
ANR	6134706	Identifier	compr		6134691	1					
ANR	6134707	IdentifierDecl	new_rot		6134691	4					
ANR	6134708	IdentifierDeclType	int		6134691	0					
ANR	6134709	Identifier	new_rot		6134691	1					
ANR	6134710	IdentifierDecl	tbl_pos		6134691	5					
ANR	6134711	IdentifierDeclType	int		6134691	0					
ANR	6134712	Identifier	tbl_pos		6134691	1					
ANR	6134713	IdentifierDecl	skip		6134691	6					
ANR	6134714	IdentifierDeclType	int		6134691	0					
ANR	6134715	Identifier	skip		6134691	1					
ANR	6134716	IdentifierDeclStatement	int stride = ctx -> pitch ;	9:4:171:198	6134691	1	True				
ANR	6134717	IdentifierDecl	stride = ctx -> pitch		6134691	0					
ANR	6134718	IdentifierDeclType	int		6134691	0					
ANR	6134719	Identifier	stride		6134691	1					
ANR	6134720	AssignmentExpression	stride = ctx -> pitch		6134691	2		=			
ANR	6134721	Identifier	stride		6134691	0					
ANR	6134722	PtrMemberAccess	ctx -> pitch		6134691	1					
ANR	6134723	Identifier	ctx		6134691	0					
ANR	6134724	Identifier	pitch		6134691	1					
ANR	6134725	IdentifierDeclStatement	uint8_t * dst = ( ( uint8_t * ) ctx -> frm0 ) + left + top * stride ;	11:4:205:265	6134691	2	True				
ANR	6134726	IdentifierDecl	* dst = ( ( uint8_t * ) ctx -> frm0 ) + left + top * stride		6134691	0					
ANR	6134727	IdentifierDeclType	uint8_t *		6134691	0					
ANR	6134728	Identifier	dst		6134691	1					
ANR	6134729	AssignmentExpression	* dst = ( ( uint8_t * ) ctx -> frm0 ) + left + top * stride		6134691	2		=			
ANR	6134730	Identifier	dst		6134691	0					
ANR	6134731	AdditiveExpression	( ( uint8_t * ) ctx -> frm0 ) + left + top * stride		6134691	1		+			
ANR	6134732	CastExpression	( uint8_t * ) ctx -> frm0		6134691	0					
ANR	6134733	CastTarget	uint8_t *		6134691	0					
ANR	6134734	PtrMemberAccess	ctx -> frm0		6134691	1					
ANR	6134735	Identifier	ctx		6134691	0					
ANR	6134736	Identifier	frm0		6134691	1					
ANR	6134737	AdditiveExpression	left + top * stride		6134691	1		+			
ANR	6134738	Identifier	left		6134691	0					
ANR	6134739	MultiplicativeExpression	top * stride		6134691	1		*			
ANR	6134740	Identifier	top		6134691	0					
ANR	6134741	Identifier	stride		6134691	1					
ANR	6134742	IdentifierDeclStatement	uint8_t * prev1 = ( uint8_t * ) ctx -> frm1 ;	13:4:272:308	6134691	3	True				
ANR	6134743	IdentifierDecl	* prev1 = ( uint8_t * ) ctx -> frm1		6134691	0					
ANR	6134744	IdentifierDeclType	uint8_t *		6134691	0					
ANR	6134745	Identifier	prev1		6134691	1					
ANR	6134746	AssignmentExpression	* prev1 = ( uint8_t * ) ctx -> frm1		6134691	2		=			
ANR	6134747	Identifier	prev1		6134691	0					
ANR	6134748	CastExpression	( uint8_t * ) ctx -> frm1		6134691	1					
ANR	6134749	CastTarget	uint8_t *		6134691	0					
ANR	6134750	PtrMemberAccess	ctx -> frm1		6134691	1					
ANR	6134751	Identifier	ctx		6134691	0					
ANR	6134752	Identifier	frm1		6134691	1					
ANR	6134753	IdentifierDeclStatement	uint8_t * prev2 = ( uint8_t * ) ctx -> frm2 ;	15:4:315:351	6134691	4	True				
ANR	6134754	IdentifierDecl	* prev2 = ( uint8_t * ) ctx -> frm2		6134691	0					
ANR	6134755	IdentifierDeclType	uint8_t *		6134691	0					
ANR	6134756	Identifier	prev2		6134691	1					
ANR	6134757	AssignmentExpression	* prev2 = ( uint8_t * ) ctx -> frm2		6134691	2		=			
ANR	6134758	Identifier	prev2		6134691	0					
ANR	6134759	CastExpression	( uint8_t * ) ctx -> frm2		6134691	1					
ANR	6134760	CastTarget	uint8_t *		6134691	0					
ANR	6134761	PtrMemberAccess	ctx -> frm2		6134691	1					
ANR	6134762	Identifier	ctx		6134691	0					
ANR	6134763	Identifier	frm2		6134691	1					
ANR	6134764	IdentifierDeclStatement	uint32_t decoded_size ;	17:4:358:379	6134691	5	True				
ANR	6134765	IdentifierDecl	decoded_size		6134691	0					
ANR	6134766	IdentifierDeclType	uint32_t		6134691	0					
ANR	6134767	Identifier	decoded_size		6134691	1					
ANR	6134768	ExpressionStatement	tbl_pos = bytestream2_tell ( & ctx -> gb )	21:4:388:424	6134691	6	True				
ANR	6134769	AssignmentExpression	tbl_pos = bytestream2_tell ( & ctx -> gb )		6134691	0		=			
ANR	6134770	Identifier	tbl_pos		6134691	0					
ANR	6134771	CallExpression	bytestream2_tell ( & ctx -> gb )		6134691	1					
ANR	6134772	Callee	bytestream2_tell		6134691	0					
ANR	6134773	Identifier	bytestream2_tell		6134691	0					
ANR	6134774	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134775	Argument	& ctx -> gb		6134691	0					
ANR	6134776	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134777	UnaryOperator	&		6134691	0					
ANR	6134778	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134779	Identifier	ctx		6134691	0					
ANR	6134780	Identifier	gb		6134691	1					
ANR	6134781	ExpressionStatement	seq = bytestream2_get_le16 ( & ctx -> gb )	23:4:431:471	6134691	7	True				
ANR	6134782	AssignmentExpression	seq = bytestream2_get_le16 ( & ctx -> gb )		6134691	0		=			
ANR	6134783	Identifier	seq		6134691	0					
ANR	6134784	CallExpression	bytestream2_get_le16 ( & ctx -> gb )		6134691	1					
ANR	6134785	Callee	bytestream2_get_le16		6134691	0					
ANR	6134786	Identifier	bytestream2_get_le16		6134691	0					
ANR	6134787	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134788	Argument	& ctx -> gb		6134691	0					
ANR	6134789	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134790	UnaryOperator	&		6134691	0					
ANR	6134791	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134792	Identifier	ctx		6134691	0					
ANR	6134793	Identifier	gb		6134691	1					
ANR	6134794	ExpressionStatement	compr = bytestream2_get_byte ( & ctx -> gb )	25:4:478:518	6134691	8	True				
ANR	6134795	AssignmentExpression	compr = bytestream2_get_byte ( & ctx -> gb )		6134691	0		=			
ANR	6134796	Identifier	compr		6134691	0					
ANR	6134797	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6134691	1					
ANR	6134798	Callee	bytestream2_get_byte		6134691	0					
ANR	6134799	Identifier	bytestream2_get_byte		6134691	0					
ANR	6134800	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134801	Argument	& ctx -> gb		6134691	0					
ANR	6134802	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134803	UnaryOperator	&		6134691	0					
ANR	6134804	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134805	Identifier	ctx		6134691	0					
ANR	6134806	Identifier	gb		6134691	1					
ANR	6134807	ExpressionStatement	new_rot = bytestream2_get_byte ( & ctx -> gb )	27:4:525:565	6134691	9	True				
ANR	6134808	AssignmentExpression	new_rot = bytestream2_get_byte ( & ctx -> gb )		6134691	0		=			
ANR	6134809	Identifier	new_rot		6134691	0					
ANR	6134810	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6134691	1					
ANR	6134811	Callee	bytestream2_get_byte		6134691	0					
ANR	6134812	Identifier	bytestream2_get_byte		6134691	0					
ANR	6134813	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134814	Argument	& ctx -> gb		6134691	0					
ANR	6134815	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134816	UnaryOperator	&		6134691	0					
ANR	6134817	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134818	Identifier	ctx		6134691	0					
ANR	6134819	Identifier	gb		6134691	1					
ANR	6134820	ExpressionStatement	skip = bytestream2_get_byte ( & ctx -> gb )	29:4:572:612	6134691	10	True				
ANR	6134821	AssignmentExpression	skip = bytestream2_get_byte ( & ctx -> gb )		6134691	0		=			
ANR	6134822	Identifier	skip		6134691	0					
ANR	6134823	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6134691	1					
ANR	6134824	Callee	bytestream2_get_byte		6134691	0					
ANR	6134825	Identifier	bytestream2_get_byte		6134691	0					
ANR	6134826	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134827	Argument	& ctx -> gb		6134691	0					
ANR	6134828	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134829	UnaryOperator	&		6134691	0					
ANR	6134830	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134831	Identifier	ctx		6134691	0					
ANR	6134832	Identifier	gb		6134691	1					
ANR	6134833	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 9 )"	31:4:619:648	6134691	11	True				
ANR	6134834	CallExpression	"bytestream2_skip ( & ctx -> gb , 9 )"		6134691	0					
ANR	6134835	Callee	bytestream2_skip		6134691	0					
ANR	6134836	Identifier	bytestream2_skip		6134691	0					
ANR	6134837	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134838	Argument	& ctx -> gb		6134691	0					
ANR	6134839	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134840	UnaryOperator	&		6134691	0					
ANR	6134841	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134842	Identifier	ctx		6134691	0					
ANR	6134843	Identifier	gb		6134691	1					
ANR	6134844	Argument	9		6134691	1					
ANR	6134845	PrimaryExpression	9		6134691	0					
ANR	6134846	ExpressionStatement	decoded_size = bytestream2_get_le32 ( & ctx -> gb )	33:4:655:700	6134691	12	True				
ANR	6134847	AssignmentExpression	decoded_size = bytestream2_get_le32 ( & ctx -> gb )		6134691	0		=			
ANR	6134848	Identifier	decoded_size		6134691	0					
ANR	6134849	CallExpression	bytestream2_get_le32 ( & ctx -> gb )		6134691	1					
ANR	6134850	Callee	bytestream2_get_le32		6134691	0					
ANR	6134851	Identifier	bytestream2_get_le32		6134691	0					
ANR	6134852	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134853	Argument	& ctx -> gb		6134691	0					
ANR	6134854	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134855	UnaryOperator	&		6134691	0					
ANR	6134856	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134857	Identifier	ctx		6134691	0					
ANR	6134858	Identifier	gb		6134691	1					
ANR	6134859	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 8 )"	35:4:707:736	6134691	13	True				
ANR	6134860	CallExpression	"bytestream2_skip ( & ctx -> gb , 8 )"		6134691	0					
ANR	6134861	Callee	bytestream2_skip		6134691	0					
ANR	6134862	Identifier	bytestream2_skip		6134691	0					
ANR	6134863	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134864	Argument	& ctx -> gb		6134691	0					
ANR	6134865	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134866	UnaryOperator	&		6134691	0					
ANR	6134867	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134868	Identifier	ctx		6134691	0					
ANR	6134869	Identifier	gb		6134691	1					
ANR	6134870	Argument	8		6134691	1					
ANR	6134871	PrimaryExpression	8		6134691	0					
ANR	6134872	IfStatement	if ( decoded_size > height * stride - left - top * stride )		6134691	14					
ANR	6134873	Condition	decoded_size > height * stride - left - top * stride	39:8:749:800	6134691	0	True				
ANR	6134874	RelationalExpression	decoded_size > height * stride - left - top * stride		6134691	0		>			
ANR	6134875	Identifier	decoded_size		6134691	0					
ANR	6134876	AdditiveExpression	height * stride - left - top * stride		6134691	1		-			
ANR	6134877	MultiplicativeExpression	height * stride		6134691	0		*			
ANR	6134878	Identifier	height		6134691	0					
ANR	6134879	Identifier	stride		6134691	1					
ANR	6134880	AdditiveExpression	left - top * stride		6134691	1		-			
ANR	6134881	Identifier	left		6134691	0					
ANR	6134882	MultiplicativeExpression	top * stride		6134691	1		*			
ANR	6134883	Identifier	top		6134691	0					
ANR	6134884	Identifier	stride		6134691	1					
ANR	6134885	CompoundStatement		35:62:689:689	6134691	1					
ANR	6134886	ExpressionStatement	decoded_size = height * stride - left - top * stride	41:8:814:866	6134691	0	True				
ANR	6134887	AssignmentExpression	decoded_size = height * stride - left - top * stride		6134691	0		=			
ANR	6134888	Identifier	decoded_size		6134691	0					
ANR	6134889	AdditiveExpression	height * stride - left - top * stride		6134691	1		-			
ANR	6134890	MultiplicativeExpression	height * stride		6134691	0		*			
ANR	6134891	Identifier	height		6134691	0					
ANR	6134892	Identifier	stride		6134691	1					
ANR	6134893	AdditiveExpression	left - top * stride		6134691	1		-			
ANR	6134894	Identifier	left		6134691	0					
ANR	6134895	MultiplicativeExpression	top * stride		6134691	1		*			
ANR	6134896	Identifier	top		6134691	0					
ANR	6134897	Identifier	stride		6134691	1					
ANR	6134898	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""decoded size is too large\\n"" )"	43:8:877:942	6134691	1	True				
ANR	6134899	CallExpression	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""decoded size is too large\\n"" )"		6134691	0					
ANR	6134900	Callee	av_log		6134691	0					
ANR	6134901	Identifier	av_log		6134691	0					
ANR	6134902	ArgumentList	ctx -> avctx		6134691	1					
ANR	6134903	Argument	ctx -> avctx		6134691	0					
ANR	6134904	PtrMemberAccess	ctx -> avctx		6134691	0					
ANR	6134905	Identifier	ctx		6134691	0					
ANR	6134906	Identifier	avctx		6134691	1					
ANR	6134907	Argument	AV_LOG_WARNING		6134691	1					
ANR	6134908	Identifier	AV_LOG_WARNING		6134691	0					
ANR	6134909	Argument	"""decoded size is too large\\n"""		6134691	2					
ANR	6134910	PrimaryExpression	"""decoded size is too large\\n"""		6134691	0					
ANR	6134911	IfStatement	if ( skip & 1 )		6134691	15					
ANR	6134912	Condition	skip & 1	49:8:962:969	6134691	0	True				
ANR	6134913	BitAndExpression	skip & 1		6134691	0		&			
ANR	6134914	Identifier	skip		6134691	0					
ANR	6134915	PrimaryExpression	1		6134691	1					
ANR	6134916	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 0x8080 )"	51:8:981:1015	6134691	1	True				
ANR	6134917	CallExpression	"bytestream2_skip ( & ctx -> gb , 0x8080 )"		6134691	0					
ANR	6134918	Callee	bytestream2_skip		6134691	0					
ANR	6134919	Identifier	bytestream2_skip		6134691	0					
ANR	6134920	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134921	Argument	& ctx -> gb		6134691	0					
ANR	6134922	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6134923	UnaryOperator	&		6134691	0					
ANR	6134924	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6134925	Identifier	ctx		6134691	0					
ANR	6134926	Identifier	gb		6134691	1					
ANR	6134927	Argument	0x8080		6134691	1					
ANR	6134928	PrimaryExpression	0x8080		6134691	0					
ANR	6134929	IfStatement	if ( ! seq )		6134691	16					
ANR	6134930	Condition	! seq	53:8:1026:1029	6134691	0	True				
ANR	6134931	UnaryOperationExpression	! seq		6134691	0					
ANR	6134932	UnaryOperator	!		6134691	0					
ANR	6134933	Identifier	seq		6134691	1					
ANR	6134934	CompoundStatement		49:14:918:918	6134691	1					
ANR	6134935	ExpressionStatement	ctx -> prev_seq = - 1	55:8:1043:1061	6134691	0	True				
ANR	6134936	AssignmentExpression	ctx -> prev_seq = - 1		6134691	0		=			
ANR	6134937	PtrMemberAccess	ctx -> prev_seq		6134691	0					
ANR	6134938	Identifier	ctx		6134691	0					
ANR	6134939	Identifier	prev_seq		6134691	1					
ANR	6134940	UnaryOperationExpression	- 1		6134691	1					
ANR	6134941	UnaryOperator	-		6134691	0					
ANR	6134942	PrimaryExpression	1		6134691	1					
ANR	6134943	ExpressionStatement	"memset ( prev1 , 0 , ctx -> height * stride )"	57:8:1072:1110	6134691	1	True				
ANR	6134944	CallExpression	"memset ( prev1 , 0 , ctx -> height * stride )"		6134691	0					
ANR	6134945	Callee	memset		6134691	0					
ANR	6134946	Identifier	memset		6134691	0					
ANR	6134947	ArgumentList	prev1		6134691	1					
ANR	6134948	Argument	prev1		6134691	0					
ANR	6134949	Identifier	prev1		6134691	0					
ANR	6134950	Argument	0		6134691	1					
ANR	6134951	PrimaryExpression	0		6134691	0					
ANR	6134952	Argument	ctx -> height * stride		6134691	2					
ANR	6134953	MultiplicativeExpression	ctx -> height * stride		6134691	0		*			
ANR	6134954	PtrMemberAccess	ctx -> height		6134691	0					
ANR	6134955	Identifier	ctx		6134691	0					
ANR	6134956	Identifier	height		6134691	1					
ANR	6134957	Identifier	stride		6134691	1					
ANR	6134958	ExpressionStatement	"memset ( prev2 , 0 , ctx -> height * stride )"	59:8:1121:1159	6134691	2	True				
ANR	6134959	CallExpression	"memset ( prev2 , 0 , ctx -> height * stride )"		6134691	0					
ANR	6134960	Callee	memset		6134691	0					
ANR	6134961	Identifier	memset		6134691	0					
ANR	6134962	ArgumentList	prev2		6134691	1					
ANR	6134963	Argument	prev2		6134691	0					
ANR	6134964	Identifier	prev2		6134691	0					
ANR	6134965	Argument	0		6134691	1					
ANR	6134966	PrimaryExpression	0		6134691	0					
ANR	6134967	Argument	ctx -> height * stride		6134691	2					
ANR	6134968	MultiplicativeExpression	ctx -> height * stride		6134691	0		*			
ANR	6134969	PtrMemberAccess	ctx -> height		6134691	0					
ANR	6134970	Identifier	ctx		6134691	0					
ANR	6134971	Identifier	height		6134691	1					
ANR	6134972	Identifier	stride		6134691	1					
ANR	6134973	ExpressionStatement	"av_dlog ( ctx -> avctx , ""compression %d\\n"" , compr )"	63:4:1173:1219	6134691	17	True				
ANR	6134974	CallExpression	"av_dlog ( ctx -> avctx , ""compression %d\\n"" , compr )"		6134691	0					
ANR	6134975	Callee	av_dlog		6134691	0					
ANR	6134976	Identifier	av_dlog		6134691	0					
ANR	6134977	ArgumentList	ctx -> avctx		6134691	1					
ANR	6134978	Argument	ctx -> avctx		6134691	0					
ANR	6134979	PtrMemberAccess	ctx -> avctx		6134691	0					
ANR	6134980	Identifier	ctx		6134691	0					
ANR	6134981	Identifier	avctx		6134691	1					
ANR	6134982	Argument	"""compression %d\\n"""		6134691	1					
ANR	6134983	PrimaryExpression	"""compression %d\\n"""		6134691	0					
ANR	6134984	Argument	compr		6134691	2					
ANR	6134985	Identifier	compr		6134691	0					
ANR	6134986	SwitchStatement	switch ( compr )		6134691	18					
ANR	6134987	Condition	compr	65:12:1234:1238	6134691	0	True				
ANR	6134988	Identifier	compr		6134691	0					
ANR	6134989	CompoundStatement		61:19:1127:1127	6134691	1					
ANR	6134990	Label	case 0 :	67:4:1248:1254	6134691	0	True				
ANR	6134991	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < width * height )		6134691	1					
ANR	6134992	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < width * height	69:12:1269:1321	6134691	0	True				
ANR	6134993	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < width * height		6134691	0		<			
ANR	6134994	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6134691	0					
ANR	6134995	Callee	bytestream2_get_bytes_left		6134691	0					
ANR	6134996	Identifier	bytestream2_get_bytes_left		6134691	0					
ANR	6134997	ArgumentList	& ctx -> gb		6134691	1					
ANR	6134998	Argument	& ctx -> gb		6134691	0					
ANR	6134999	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6135000	UnaryOperator	&		6134691	0					
ANR	6135001	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6135002	Identifier	ctx		6134691	0					
ANR	6135003	Identifier	gb		6134691	1					
ANR	6135004	MultiplicativeExpression	width * height		6134691	1		*			
ANR	6135005	Identifier	width		6134691	0					
ANR	6135006	Identifier	height		6134691	1					
ANR	6135007	ReturnStatement	return AVERROR_INVALIDDATA ;	71:12:1337:1363	6134691	1	True				
ANR	6135008	Identifier	AVERROR_INVALIDDATA		6134691	0					
ANR	6135009	ForStatement	for ( j = 0 ; j < height ; j ++ )		6134691	2					
ANR	6135010	ForInit	j = 0 ;	73:13:1379:1384	6134691	0	True				
ANR	6135011	AssignmentExpression	j = 0		6134691	0		=			
ANR	6135012	Identifier	j		6134691	0					
ANR	6135013	PrimaryExpression	0		6134691	1					
ANR	6135014	Condition	j < height	73:20:1386:1395	6134691	1	True				
ANR	6135015	RelationalExpression	j < height		6134691	0		<			
ANR	6135016	Identifier	j		6134691	0					
ANR	6135017	Identifier	height		6134691	1					
ANR	6135018	PostIncDecOperationExpression	j ++	73:32:1398:1400	6134691	2	True				
ANR	6135019	Identifier	j		6134691	0					
ANR	6135020	IncDec	++		6134691	1					
ANR	6135021	CompoundStatement		69:37:1289:1289	6134691	3					
ANR	6135022	ExpressionStatement	"bytestream2_get_bufferu ( & ctx -> gb , dst , width )"	75:12:1418:1463	6134691	0	True				
ANR	6135023	CallExpression	"bytestream2_get_bufferu ( & ctx -> gb , dst , width )"		6134691	0					
ANR	6135024	Callee	bytestream2_get_bufferu		6134691	0					
ANR	6135025	Identifier	bytestream2_get_bufferu		6134691	0					
ANR	6135026	ArgumentList	& ctx -> gb		6134691	1					
ANR	6135027	Argument	& ctx -> gb		6134691	0					
ANR	6135028	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6135029	UnaryOperator	&		6134691	0					
ANR	6135030	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6135031	Identifier	ctx		6134691	0					
ANR	6135032	Identifier	gb		6134691	1					
ANR	6135033	Argument	dst		6134691	1					
ANR	6135034	Identifier	dst		6134691	0					
ANR	6135035	Argument	width		6134691	2					
ANR	6135036	Identifier	width		6134691	0					
ANR	6135037	ExpressionStatement	dst += stride	77:12:1478:1491	6134691	1	True				
ANR	6135038	AssignmentExpression	dst += stride		6134691	0		+=			
ANR	6135039	Identifier	dst		6134691	0					
ANR	6135040	Identifier	stride		6134691	1					
ANR	6135041	BreakStatement	break ;	81:8:1513:1518	6134691	3	True				
ANR	6135042	Label	case 1 :	83:4:1525:1531	6134691	4	True				
ANR	6135043	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < ( ( width + 1 ) >> 1 ) * ( ( height + 1 ) >> 1 ) )		6134691	5					
ANR	6135044	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < ( ( width + 1 ) >> 1 ) * ( ( height + 1 ) >> 1 )	85:12:1546:1624	6134691	0	True				
ANR	6135045	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < ( ( width + 1 ) >> 1 ) * ( ( height + 1 ) >> 1 )		6134691	0		<			
ANR	6135046	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6134691	0					
ANR	6135047	Callee	bytestream2_get_bytes_left		6134691	0					
ANR	6135048	Identifier	bytestream2_get_bytes_left		6134691	0					
ANR	6135049	ArgumentList	& ctx -> gb		6134691	1					
ANR	6135050	Argument	& ctx -> gb		6134691	0					
ANR	6135051	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6135052	UnaryOperator	&		6134691	0					
ANR	6135053	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6135054	Identifier	ctx		6134691	0					
ANR	6135055	Identifier	gb		6134691	1					
ANR	6135056	MultiplicativeExpression	( ( width + 1 ) >> 1 ) * ( ( height + 1 ) >> 1 )		6134691	1		*			
ANR	6135057	ShiftExpression	( width + 1 ) >> 1		6134691	0		>>			
ANR	6135058	AdditiveExpression	width + 1		6134691	0		+			
ANR	6135059	Identifier	width		6134691	0					
ANR	6135060	PrimaryExpression	1		6134691	1					
ANR	6135061	PrimaryExpression	1		6134691	1					
ANR	6135062	ShiftExpression	( height + 1 ) >> 1		6134691	1		>>			
ANR	6135063	AdditiveExpression	height + 1		6134691	0		+			
ANR	6135064	Identifier	height		6134691	0					
ANR	6135065	PrimaryExpression	1		6134691	1					
ANR	6135066	PrimaryExpression	1		6134691	1					
ANR	6135067	ReturnStatement	return AVERROR_INVALIDDATA ;	87:12:1640:1666	6134691	1	True				
ANR	6135068	Identifier	AVERROR_INVALIDDATA		6134691	0					
ANR	6135069	ForStatement	for ( j = 0 ; j < height ; j += 2 )		6134691	6					
ANR	6135070	ForInit	j = 0 ;	89:13:1682:1687	6134691	0	True				
ANR	6135071	AssignmentExpression	j = 0		6134691	0		=			
ANR	6135072	Identifier	j		6134691	0					
ANR	6135073	PrimaryExpression	0		6134691	1					
ANR	6135074	Condition	j < height	89:20:1689:1698	6134691	1	True				
ANR	6135075	RelationalExpression	j < height		6134691	0		<			
ANR	6135076	Identifier	j		6134691	0					
ANR	6135077	Identifier	height		6134691	1					
ANR	6135078	AssignmentExpression	j += 2	89:32:1701:1706	6134691	2	True	+=			
ANR	6135079	Identifier	j		6134691	0					
ANR	6135080	PrimaryExpression	2		6134691	1					
ANR	6135081	CompoundStatement		85:40:1595:1595	6134691	3					
ANR	6135082	ForStatement	for ( i = 0 ; i < width ; i += 2 )		6134691	0					
ANR	6135083	ForInit	i = 0 ;	91:17:1729:1734	6134691	0	True				
ANR	6135084	AssignmentExpression	i = 0		6134691	0		=			
ANR	6135085	Identifier	i		6134691	0					
ANR	6135086	PrimaryExpression	0		6134691	1					
ANR	6135087	Condition	i < width	91:24:1736:1744	6134691	1	True				
ANR	6135088	RelationalExpression	i < width		6134691	0		<			
ANR	6135089	Identifier	i		6134691	0					
ANR	6135090	Identifier	width		6134691	1					
ANR	6135091	AssignmentExpression	i += 2	91:35:1747:1752	6134691	2	True	+=			
ANR	6135092	Identifier	i		6134691	0					
ANR	6135093	PrimaryExpression	2		6134691	1					
ANR	6135094	CompoundStatement		87:43:1641:1641	6134691	3					
ANR	6135095	ExpressionStatement	dst [ i ] = dst [ i + 1 ] = dst [ stride + i ] = dst [ stride + i + 1 ] = bytestream2_get_byteu ( & ctx -> gb )	93:16:1774:1884	6134691	0	True				
ANR	6135096	AssignmentExpression	dst [ i ] = dst [ i + 1 ] = dst [ stride + i ] = dst [ stride + i + 1 ] = bytestream2_get_byteu ( & ctx -> gb )		6134691	0		=			
ANR	6135097	ArrayIndexing	dst [ i ]		6134691	0					
ANR	6135098	Identifier	dst		6134691	0					
ANR	6135099	Identifier	i		6134691	1					
ANR	6135100	AssignmentExpression	dst [ i + 1 ] = dst [ stride + i ] = dst [ stride + i + 1 ] = bytestream2_get_byteu ( & ctx -> gb )		6134691	1		=			
ANR	6135101	ArrayIndexing	dst [ i + 1 ]		6134691	0					
ANR	6135102	Identifier	dst		6134691	0					
ANR	6135103	AdditiveExpression	i + 1		6134691	1		+			
ANR	6135104	Identifier	i		6134691	0					
ANR	6135105	PrimaryExpression	1		6134691	1					
ANR	6135106	AssignmentExpression	dst [ stride + i ] = dst [ stride + i + 1 ] = bytestream2_get_byteu ( & ctx -> gb )		6134691	1		=			
ANR	6135107	ArrayIndexing	dst [ stride + i ]		6134691	0					
ANR	6135108	Identifier	dst		6134691	0					
ANR	6135109	AdditiveExpression	stride + i		6134691	1		+			
ANR	6135110	Identifier	stride		6134691	0					
ANR	6135111	Identifier	i		6134691	1					
ANR	6135112	AssignmentExpression	dst [ stride + i + 1 ] = bytestream2_get_byteu ( & ctx -> gb )		6134691	1		=			
ANR	6135113	ArrayIndexing	dst [ stride + i + 1 ]		6134691	0					
ANR	6135114	Identifier	dst		6134691	0					
ANR	6135115	AdditiveExpression	stride + i + 1		6134691	1		+			
ANR	6135116	Identifier	stride		6134691	0					
ANR	6135117	AdditiveExpression	i + 1		6134691	1		+			
ANR	6135118	Identifier	i		6134691	0					
ANR	6135119	PrimaryExpression	1		6134691	1					
ANR	6135120	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6134691	1					
ANR	6135121	Callee	bytestream2_get_byteu		6134691	0					
ANR	6135122	Identifier	bytestream2_get_byteu		6134691	0					
ANR	6135123	ArgumentList	& ctx -> gb		6134691	1					
ANR	6135124	Argument	& ctx -> gb		6134691	0					
ANR	6135125	UnaryOperationExpression	& ctx -> gb		6134691	0					
ANR	6135126	UnaryOperator	&		6134691	0					
ANR	6135127	PtrMemberAccess	ctx -> gb		6134691	1					
ANR	6135128	Identifier	ctx		6134691	0					
ANR	6135129	Identifier	gb		6134691	1					
ANR	6135130	ExpressionStatement	dst += stride * 2	99:12:1914:1931	6134691	1	True				
ANR	6135131	AssignmentExpression	dst += stride * 2		6134691	0		+=			
ANR	6135132	Identifier	dst		6134691	0					
ANR	6135133	MultiplicativeExpression	stride * 2		6134691	1		*			
ANR	6135134	Identifier	stride		6134691	0					
ANR	6135135	PrimaryExpression	2		6134691	1					
ANR	6135136	BreakStatement	break ;	103:8:1953:1958	6134691	7	True				
ANR	6135137	Label	case 2 :	105:4:1965:1971	6134691	8	True				
ANR	6135138	IfStatement	if ( seq == ctx -> prev_seq + 1 )		6134691	9					
ANR	6135139	Condition	seq == ctx -> prev_seq + 1	107:12:1986:2009	6134691	0	True				
ANR	6135140	EqualityExpression	seq == ctx -> prev_seq + 1		6134691	0		==			
ANR	6135141	Identifier	seq		6134691	0					
ANR	6135142	AdditiveExpression	ctx -> prev_seq + 1		6134691	1		+			
ANR	6135143	PtrMemberAccess	ctx -> prev_seq		6134691	0					
ANR	6135144	Identifier	ctx		6134691	0					
ANR	6135145	Identifier	prev_seq		6134691	1					
ANR	6135146	PrimaryExpression	1		6134691	1					
ANR	6135147	CompoundStatement		103:38:1898:1898	6134691	1					
ANR	6135148	ForStatement	for ( j = 0 ; j < height ; j += 8 )		6134691	0					
ANR	6135149	ForInit	j = 0 ;	109:17:2032:2037	6134691	0	True				
ANR	6135150	AssignmentExpression	j = 0		6134691	0		=			
ANR	6135151	Identifier	j		6134691	0					
ANR	6135152	PrimaryExpression	0		6134691	1					
ANR	6135153	Condition	j < height	109:24:2039:2048	6134691	1	True				
ANR	6135154	RelationalExpression	j < height		6134691	0		<			
ANR	6135155	Identifier	j		6134691	0					
ANR	6135156	Identifier	height		6134691	1					
ANR	6135157	AssignmentExpression	j += 8	109:36:2051:2056	6134691	2	True	+=			
ANR	6135158	Identifier	j		6134691	0					
ANR	6135159	PrimaryExpression	8		6134691	1					
ANR	6135160	CompoundStatement		105:44:1945:1945	6134691	3					
ANR	6135161	ForStatement	for ( i = 0 ; i < width ; i += 8 )		6134691	0					
ANR	6135162	ForInit	i = 0 ;	111:21:2083:2088	6134691	0	True				
ANR	6135163	AssignmentExpression	i = 0		6134691	0		=			
ANR	6135164	Identifier	i		6134691	0					
ANR	6135165	PrimaryExpression	0		6134691	1					
ANR	6135166	Condition	i < width	111:28:2090:2098	6134691	1	True				
ANR	6135167	RelationalExpression	i < width		6134691	0		<			
ANR	6135168	Identifier	i		6134691	0					
ANR	6135169	Identifier	width		6134691	1					
ANR	6135170	AssignmentExpression	i += 8	111:39:2101:2106	6134691	2	True	+=			
ANR	6135171	Identifier	i		6134691	0					
ANR	6135172	PrimaryExpression	8		6134691	1					
ANR	6135173	CompoundStatement		107:47:1995:1995	6134691	3					
ANR	6135174	IfStatement	"if ( process_block ( ctx , dst + i , prev1 + i , prev2 + i , stride , tbl_pos + 8 , 8 ) )"		6134691	0					
ANR	6135175	Condition	"process_block ( ctx , dst + i , prev1 + i , prev2 + i , stride , tbl_pos + 8 , 8 )"	113:24:2136:2247	6134691	0	True				
ANR	6135176	CallExpression	"process_block ( ctx , dst + i , prev1 + i , prev2 + i , stride , tbl_pos + 8 , 8 )"		6134691	0					
ANR	6135177	Callee	process_block		6134691	0					
ANR	6135178	Identifier	process_block		6134691	0					
ANR	6135179	ArgumentList	ctx		6134691	1					
ANR	6135180	Argument	ctx		6134691	0					
ANR	6135181	Identifier	ctx		6134691	0					
ANR	6135182	Argument	dst + i		6134691	1					
ANR	6135183	AdditiveExpression	dst + i		6134691	0		+			
ANR	6135184	Identifier	dst		6134691	0					
ANR	6135185	Identifier	i		6134691	1					
ANR	6135186	Argument	prev1 + i		6134691	2					
ANR	6135187	AdditiveExpression	prev1 + i		6134691	0		+			
ANR	6135188	Identifier	prev1		6134691	0					
ANR	6135189	Identifier	i		6134691	1					
ANR	6135190	Argument	prev2 + i		6134691	3					
ANR	6135191	AdditiveExpression	prev2 + i		6134691	0		+			
ANR	6135192	Identifier	prev2		6134691	0					
ANR	6135193	Identifier	i		6134691	1					
ANR	6135194	Argument	stride		6134691	4					
ANR	6135195	Identifier	stride		6134691	0					
ANR	6135196	Argument	tbl_pos + 8		6134691	5					
ANR	6135197	AdditiveExpression	tbl_pos + 8		6134691	0		+			
ANR	6135198	Identifier	tbl_pos		6134691	0					
ANR	6135199	PrimaryExpression	8		6134691	1					
ANR	6135200	Argument	8		6134691	6					
ANR	6135201	PrimaryExpression	8		6134691	0					
ANR	6135202	ReturnStatement	return AVERROR_INVALIDDATA ;	117:24:2275:2301	6134691	1	True				
ANR	6135203	Identifier	AVERROR_INVALIDDATA		6134691	0					
ANR	6135204	ExpressionStatement	dst += stride * 8	121:16:2339:2358	6134691	1	True				
ANR	6135205	AssignmentExpression	dst += stride * 8		6134691	0		+=			
ANR	6135206	Identifier	dst		6134691	0					
ANR	6135207	MultiplicativeExpression	stride * 8		6134691	1		*			
ANR	6135208	Identifier	stride		6134691	0					
ANR	6135209	PrimaryExpression	8		6134691	1					
ANR	6135210	ExpressionStatement	prev1 += stride * 8	123:16:2377:2396	6134691	2	True				
ANR	6135211	AssignmentExpression	prev1 += stride * 8		6134691	0		+=			
ANR	6135212	Identifier	prev1		6134691	0					
ANR	6135213	MultiplicativeExpression	stride * 8		6134691	1		*			
ANR	6135214	Identifier	stride		6134691	0					
ANR	6135215	PrimaryExpression	8		6134691	1					
ANR	6135216	ExpressionStatement	prev2 += stride * 8	125:16:2415:2434	6134691	3	True				
ANR	6135217	AssignmentExpression	prev2 += stride * 8		6134691	0		+=			
ANR	6135218	Identifier	prev2		6134691	0					
ANR	6135219	MultiplicativeExpression	stride * 8		6134691	1		*			
ANR	6135220	Identifier	stride		6134691	0					
ANR	6135221	PrimaryExpression	8		6134691	1					
ANR	6135222	BreakStatement	break ;	131:8:2471:2476	6134691	10	True				
ANR	6135223	Label	case 3 :	133:4:2483:2489	6134691	11	True				
ANR	6135224	ExpressionStatement	"memcpy ( ctx -> frm0 , ctx -> frm2 , ctx -> pitch * ctx -> height )"	135:8:2500:2554	6134691	12	True				
ANR	6135225	CallExpression	"memcpy ( ctx -> frm0 , ctx -> frm2 , ctx -> pitch * ctx -> height )"		6134691	0					
ANR	6135226	Callee	memcpy		6134691	0					
ANR	6135227	Identifier	memcpy		6134691	0					
ANR	6135228	ArgumentList	ctx -> frm0		6134691	1					
ANR	6135229	Argument	ctx -> frm0		6134691	0					
ANR	6135230	PtrMemberAccess	ctx -> frm0		6134691	0					
ANR	6135231	Identifier	ctx		6134691	0					
ANR	6135232	Identifier	frm0		6134691	1					
ANR	6135233	Argument	ctx -> frm2		6134691	1					
ANR	6135234	PtrMemberAccess	ctx -> frm2		6134691	0					
ANR	6135235	Identifier	ctx		6134691	0					
ANR	6135236	Identifier	frm2		6134691	1					
ANR	6135237	Argument	ctx -> pitch * ctx -> height		6134691	2					
ANR	6135238	MultiplicativeExpression	ctx -> pitch * ctx -> height		6134691	0		*			
ANR	6135239	PtrMemberAccess	ctx -> pitch		6134691	0					
ANR	6135240	Identifier	ctx		6134691	0					
ANR	6135241	Identifier	pitch		6134691	1					
ANR	6135242	PtrMemberAccess	ctx -> height		6134691	1					
ANR	6135243	Identifier	ctx		6134691	0					
ANR	6135244	Identifier	height		6134691	1					
ANR	6135245	BreakStatement	break ;	137:8:2565:2570	6134691	13	True				
ANR	6135246	Label	case 4 :	139:4:2577:2583	6134691	14	True				
ANR	6135247	ExpressionStatement	"memcpy ( ctx -> frm0 , ctx -> frm1 , ctx -> pitch * ctx -> height )"	141:8:2594:2648	6134691	15	True				
ANR	6135248	CallExpression	"memcpy ( ctx -> frm0 , ctx -> frm1 , ctx -> pitch * ctx -> height )"		6134691	0					
ANR	6135249	Callee	memcpy		6134691	0					
ANR	6135250	Identifier	memcpy		6134691	0					
ANR	6135251	ArgumentList	ctx -> frm0		6134691	1					
ANR	6135252	Argument	ctx -> frm0		6134691	0					
ANR	6135253	PtrMemberAccess	ctx -> frm0		6134691	0					
ANR	6135254	Identifier	ctx		6134691	0					
ANR	6135255	Identifier	frm0		6134691	1					
ANR	6135256	Argument	ctx -> frm1		6134691	1					
ANR	6135257	PtrMemberAccess	ctx -> frm1		6134691	0					
ANR	6135258	Identifier	ctx		6134691	0					
ANR	6135259	Identifier	frm1		6134691	1					
ANR	6135260	Argument	ctx -> pitch * ctx -> height		6134691	2					
ANR	6135261	MultiplicativeExpression	ctx -> pitch * ctx -> height		6134691	0		*			
ANR	6135262	PtrMemberAccess	ctx -> pitch		6134691	0					
ANR	6135263	Identifier	ctx		6134691	0					
ANR	6135264	Identifier	pitch		6134691	1					
ANR	6135265	PtrMemberAccess	ctx -> height		6134691	1					
ANR	6135266	Identifier	ctx		6134691	0					
ANR	6135267	Identifier	height		6134691	1					
ANR	6135268	BreakStatement	break ;	143:8:2659:2664	6134691	16	True				
ANR	6135269	Label	case 5 :	145:4:2671:2677	6134691	17	True				
ANR	6135270	IfStatement	"if ( rle_decode ( ctx , dst , decoded_size ) )"		6134691	18					
ANR	6135271	Condition	"rle_decode ( ctx , dst , decoded_size )"	147:12:2692:2725	6134691	0	True				
ANR	6135272	CallExpression	"rle_decode ( ctx , dst , decoded_size )"		6134691	0					
ANR	6135273	Callee	rle_decode		6134691	0					
ANR	6135274	Identifier	rle_decode		6134691	0					
ANR	6135275	ArgumentList	ctx		6134691	1					
ANR	6135276	Argument	ctx		6134691	0					
ANR	6135277	Identifier	ctx		6134691	0					
ANR	6135278	Argument	dst		6134691	1					
ANR	6135279	Identifier	dst		6134691	0					
ANR	6135280	Argument	decoded_size		6134691	2					
ANR	6135281	Identifier	decoded_size		6134691	0					
ANR	6135282	ReturnStatement	return AVERROR_INVALIDDATA ;	149:12:2741:2767	6134691	1	True				
ANR	6135283	Identifier	AVERROR_INVALIDDATA		6134691	0					
ANR	6135284	BreakStatement	break ;	151:8:2778:2783	6134691	19	True				
ANR	6135285	Label	default :	153:4:2790:2797	6134691	20	True				
ANR	6135286	Identifier	default		6134691	0					
ANR	6135287	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""subcodec 47 compression %d not implemented\\n"" , compr )"	155:8:2808:2911	6134691	21	True				
ANR	6135288	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""subcodec 47 compression %d not implemented\\n"" , compr )"		6134691	0					
ANR	6135289	Callee	av_log		6134691	0					
ANR	6135290	Identifier	av_log		6134691	0					
ANR	6135291	ArgumentList	ctx -> avctx		6134691	1					
ANR	6135292	Argument	ctx -> avctx		6134691	0					
ANR	6135293	PtrMemberAccess	ctx -> avctx		6134691	0					
ANR	6135294	Identifier	ctx		6134691	0					
ANR	6135295	Identifier	avctx		6134691	1					
ANR	6135296	Argument	AV_LOG_ERROR		6134691	1					
ANR	6135297	Identifier	AV_LOG_ERROR		6134691	0					
ANR	6135298	Argument	"""subcodec 47 compression %d not implemented\\n"""		6134691	2					
ANR	6135299	PrimaryExpression	"""subcodec 47 compression %d not implemented\\n"""		6134691	0					
ANR	6135300	Argument	compr		6134691	3					
ANR	6135301	Identifier	compr		6134691	0					
ANR	6135302	ReturnStatement	return AVERROR_PATCHWELCOME ;	159:8:2922:2949	6134691	22	True				
ANR	6135303	Identifier	AVERROR_PATCHWELCOME		6134691	0					
ANR	6135304	IfStatement	if ( seq == ctx -> prev_seq + 1 )		6134691	19					
ANR	6135305	Condition	seq == ctx -> prev_seq + 1	163:8:2967:2990	6134691	0	True				
ANR	6135306	EqualityExpression	seq == ctx -> prev_seq + 1		6134691	0		==			
ANR	6135307	Identifier	seq		6134691	0					
ANR	6135308	AdditiveExpression	ctx -> prev_seq + 1		6134691	1		+			
ANR	6135309	PtrMemberAccess	ctx -> prev_seq		6134691	0					
ANR	6135310	Identifier	ctx		6134691	0					
ANR	6135311	Identifier	prev_seq		6134691	1					
ANR	6135312	PrimaryExpression	1		6134691	1					
ANR	6135313	ExpressionStatement	ctx -> rotate_code = new_rot	165:8:3002:3028	6134691	1	True				
ANR	6135314	AssignmentExpression	ctx -> rotate_code = new_rot		6134691	0		=			
ANR	6135315	PtrMemberAccess	ctx -> rotate_code		6134691	0					
ANR	6135316	Identifier	ctx		6134691	0					
ANR	6135317	Identifier	rotate_code		6134691	1					
ANR	6135318	Identifier	new_rot		6134691	1					
ANR	6135319	ElseStatement	else		6134691	0					
ANR	6135320	ExpressionStatement	ctx -> rotate_code = 0	169:8:3049:3069	6134691	0	True				
ANR	6135321	AssignmentExpression	ctx -> rotate_code = 0		6134691	0		=			
ANR	6135322	PtrMemberAccess	ctx -> rotate_code		6134691	0					
ANR	6135323	Identifier	ctx		6134691	0					
ANR	6135324	Identifier	rotate_code		6134691	1					
ANR	6135325	PrimaryExpression	0		6134691	1					
ANR	6135326	ExpressionStatement	ctx -> prev_seq = seq	171:4:3076:3095	6134691	20	True				
ANR	6135327	AssignmentExpression	ctx -> prev_seq = seq		6134691	0		=			
ANR	6135328	PtrMemberAccess	ctx -> prev_seq		6134691	0					
ANR	6135329	Identifier	ctx		6134691	0					
ANR	6135330	Identifier	prev_seq		6134691	1					
ANR	6135331	Identifier	seq		6134691	1					
ANR	6135332	ReturnStatement	return 0 ;	175:4:3104:3112	6134691	21	True				
ANR	6135333	PrimaryExpression	0		6134691	0					
ANR	6135334	ReturnType	static int		6134691	1					
ANR	6135335	Identifier	old_codec47		6134691	2					
ANR	6135336	ParameterList	"SANMVideoContext * ctx , int top , int left , int width , int height"		6134691	3					
ANR	6135337	Parameter	SANMVideoContext * ctx	1:23:23:43	6134691	0	True				
ANR	6135338	ParameterType	SANMVideoContext *		6134691	0					
ANR	6135339	Identifier	ctx		6134691	1					
ANR	6135340	Parameter	int top	1:46:46:52	6134691	1	True				
ANR	6135341	ParameterType	int		6134691	0					
ANR	6135342	Identifier	top		6134691	1					
ANR	6135343	Parameter	int left	3:23:79:86	6134691	2	True				
ANR	6135344	ParameterType	int		6134691	0					
ANR	6135345	Identifier	left		6134691	1					
ANR	6135346	Parameter	int width	3:33:89:97	6134691	3	True				
ANR	6135347	ParameterType	int		6134691	0					
ANR	6135348	Identifier	width		6134691	1					
ANR	6135349	Parameter	int height	3:44:100:109	6134691	4	True				
ANR	6135350	ParameterType	int		6134691	0					
ANR	6135351	Identifier	height		6134691	1					
ANR	6135352	CFGEntryNode	ENTRY		6134691		True				
ANR	6135353	CFGExitNode	EXIT		6134691		True				
ANR	6135354	Symbol	prev2		6134691						
ANR	6135355	Symbol	prev1		6134691						
ANR	6135356	Symbol	* stride		6134691						
ANR	6135357	Symbol	dst		6134691						
ANR	6135358	Symbol	skip		6134691						
ANR	6135359	Symbol	& ctx -> gb		6134691						
ANR	6135360	Symbol	stride		6134691						
ANR	6135361	Symbol	ctx -> rotate_code		6134691						
ANR	6135362	Symbol	* dst		6134691						
ANR	6135363	Symbol	top		6134691						
ANR	6135364	Symbol	AVERROR_PATCHWELCOME		6134691						
ANR	6135365	Symbol	bytestream2_tell		6134691						
ANR	6135366	Symbol	bytestream2_get_bytes_left		6134691						
ANR	6135367	Symbol	seq		6134691						
ANR	6135368	Symbol	height		6134691						
ANR	6135369	Symbol	ctx -> height		6134691						
ANR	6135370	Symbol	bytestream2_get_le16		6134691						
ANR	6135371	Symbol	bytestream2_get_byteu		6134691						
ANR	6135372	Symbol	compr		6134691						
ANR	6135373	Symbol	AV_LOG_ERROR		6134691						
ANR	6135374	Symbol	ctx		6134691						
ANR	6135375	Symbol	bytestream2_get_le32		6134691						
ANR	6135376	Symbol	i		6134691						
ANR	6135377	Symbol	j		6134691						
ANR	6135378	Symbol	ctx -> frm0		6134691						
ANR	6135379	Symbol	* ctx		6134691						
ANR	6135380	Symbol	ctx -> frm2		6134691						
ANR	6135381	Symbol	ctx -> frm1		6134691						
ANR	6135382	Symbol	ctx -> avctx		6134691						
ANR	6135383	Symbol	* i		6134691						
ANR	6135384	Symbol	left		6134691						
ANR	6135385	Symbol	ctx -> pitch		6134691						
ANR	6135386	Symbol	width		6134691						
ANR	6135387	Symbol	new_rot		6134691						
ANR	6135388	Symbol	decoded_size		6134691						
ANR	6135389	Symbol	ctx -> prev_seq		6134691						
ANR	6135390	Symbol	AVERROR_INVALIDDATA		6134691						
ANR	6135391	Symbol	process_block		6134691						
ANR	6135392	Symbol	bytestream2_get_byte		6134691						
ANR	6135393	Symbol	AV_LOG_WARNING		6134691						
ANR	6135394	Symbol	rle_decode		6134691						
ANR	6135395	Symbol	tbl_pos		6134691						
