command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6992149	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_inject_x86_mce_01_0.c								
ANR	6992150	Function	qemu_inject_x86_mce	1:0:0:2326							
ANR	6992151	FunctionDef	"qemu_inject_x86_mce (Monitor * mon , CPUState * cenv , int bank , uint64_t status , uint64_t mcg_status , uint64_t addr , uint64_t misc , int flags)"		6992150	0					
ANR	6992152	CompoundStatement		7:0:182:2326	6992150	0					
ANR	6992153	IdentifierDeclStatement	uint64_t mcg_cap = cenv -> mcg_cap ;	9:4:189:221	6992150	0	True				
ANR	6992154	IdentifierDecl	mcg_cap = cenv -> mcg_cap		6992150	0					
ANR	6992155	IdentifierDeclType	uint64_t		6992150	0					
ANR	6992156	Identifier	mcg_cap		6992150	1					
ANR	6992157	AssignmentExpression	mcg_cap = cenv -> mcg_cap		6992150	2		=			
ANR	6992158	Identifier	mcg_cap		6992150	0					
ANR	6992159	PtrMemberAccess	cenv -> mcg_cap		6992150	1					
ANR	6992160	Identifier	cenv		6992150	0					
ANR	6992161	Identifier	mcg_cap		6992150	1					
ANR	6992162	IdentifierDeclStatement	uint64_t * banks = cenv -> mce_banks + 4 * bank ;	11:4:228:272	6992150	1	True				
ANR	6992163	IdentifierDecl	* banks = cenv -> mce_banks + 4 * bank		6992150	0					
ANR	6992164	IdentifierDeclType	uint64_t *		6992150	0					
ANR	6992165	Identifier	banks		6992150	1					
ANR	6992166	AssignmentExpression	* banks = cenv -> mce_banks + 4 * bank		6992150	2		=			
ANR	6992167	Identifier	banks		6992150	0					
ANR	6992168	AdditiveExpression	cenv -> mce_banks + 4 * bank		6992150	1		+			
ANR	6992169	PtrMemberAccess	cenv -> mce_banks		6992150	0					
ANR	6992170	Identifier	cenv		6992150	0					
ANR	6992171	Identifier	mce_banks		6992150	1					
ANR	6992172	MultiplicativeExpression	4 * bank		6992150	1		*			
ANR	6992173	PrimaryExpression	4		6992150	0					
ANR	6992174	Identifier	bank		6992150	1					
ANR	6992175	IfStatement	if ( ! ( flags & MCE_INJECT_UNCOND_AO ) && ! ( status & MCI_STATUS_AR ) && ( cenv -> mcg_status & MCG_STATUS_MCIP ) )		6992150	2					
ANR	6992176	Condition	! ( flags & MCE_INJECT_UNCOND_AO ) && ! ( status & MCI_STATUS_AR ) && ( cenv -> mcg_status & MCG_STATUS_MCIP )	23:8:431:539	6992150	0	True				
ANR	6992177	AndExpression	! ( flags & MCE_INJECT_UNCOND_AO ) && ! ( status & MCI_STATUS_AR ) && ( cenv -> mcg_status & MCG_STATUS_MCIP )		6992150	0		&&			
ANR	6992178	UnaryOperationExpression	! ( flags & MCE_INJECT_UNCOND_AO )		6992150	0					
ANR	6992179	UnaryOperator	!		6992150	0					
ANR	6992180	BitAndExpression	flags & MCE_INJECT_UNCOND_AO		6992150	1		&			
ANR	6992181	Identifier	flags		6992150	0					
ANR	6992182	Identifier	MCE_INJECT_UNCOND_AO		6992150	1					
ANR	6992183	AndExpression	! ( status & MCI_STATUS_AR ) && ( cenv -> mcg_status & MCG_STATUS_MCIP )		6992150	1		&&			
ANR	6992184	UnaryOperationExpression	! ( status & MCI_STATUS_AR )		6992150	0					
ANR	6992185	UnaryOperator	!		6992150	0					
ANR	6992186	BitAndExpression	status & MCI_STATUS_AR		6992150	1		&			
ANR	6992187	Identifier	status		6992150	0					
ANR	6992188	Identifier	MCI_STATUS_AR		6992150	1					
ANR	6992189	BitAndExpression	cenv -> mcg_status & MCG_STATUS_MCIP		6992150	1		&			
ANR	6992190	PtrMemberAccess	cenv -> mcg_status		6992150	0					
ANR	6992191	Identifier	cenv		6992150	0					
ANR	6992192	Identifier	mcg_status		6992150	1					
ANR	6992193	Identifier	MCG_STATUS_MCIP		6992150	1					
ANR	6992194	CompoundStatement		19:49:359:359	6992150	1					
ANR	6992195	ReturnStatement	return ;	27:8:553:559	6992150	0	True				
ANR	6992196	IfStatement	if ( status & MCI_STATUS_UC )		6992150	3					
ANR	6992197	Condition	status & MCI_STATUS_UC	31:8:577:598	6992150	0	True				
ANR	6992198	BitAndExpression	status & MCI_STATUS_UC		6992150	0		&			
ANR	6992199	Identifier	status		6992150	0					
ANR	6992200	Identifier	MCI_STATUS_UC		6992150	1					
ANR	6992201	CompoundStatement		25:32:418:418	6992150	1					
ANR	6992202	IfStatement	if ( ( mcg_cap & MCG_CTL_P ) && cenv -> mcg_ctl != ~ ( uint64_t ) 0 )		6992150	0					
ANR	6992203	Condition	( mcg_cap & MCG_CTL_P ) && cenv -> mcg_ctl != ~ ( uint64_t ) 0	41:12:739:792	6992150	0	True				
ANR	6992204	AndExpression	( mcg_cap & MCG_CTL_P ) && cenv -> mcg_ctl != ~ ( uint64_t ) 0		6992150	0		&&			
ANR	6992205	BitAndExpression	mcg_cap & MCG_CTL_P		6992150	0		&			
ANR	6992206	Identifier	mcg_cap		6992150	0					
ANR	6992207	Identifier	MCG_CTL_P		6992150	1					
ANR	6992208	EqualityExpression	cenv -> mcg_ctl != ~ ( uint64_t ) 0		6992150	1		!=			
ANR	6992209	PtrMemberAccess	cenv -> mcg_ctl		6992150	0					
ANR	6992210	Identifier	cenv		6992150	0					
ANR	6992211	Identifier	mcg_ctl		6992150	1					
ANR	6992212	UnaryOperationExpression	~ ( uint64_t ) 0		6992150	1					
ANR	6992213	UnaryOperator	~		6992150	0					
ANR	6992214	CastExpression	( uint64_t ) 0		6992150	1					
ANR	6992215	CastTarget	uint64_t		6992150	0					
ANR	6992216	PrimaryExpression	0		6992150	1					
ANR	6992217	CompoundStatement		35:68:612:612	6992150	1					
ANR	6992218	ExpressionStatement	"monitor_printf ( mon , ""CPU %d: Uncorrected error reporting disabled\\n"" , cenv -> cpu_index )"	43:12:810:952	6992150	0	True				
ANR	6992219	CallExpression	"monitor_printf ( mon , ""CPU %d: Uncorrected error reporting disabled\\n"" , cenv -> cpu_index )"		6992150	0					
ANR	6992220	Callee	monitor_printf		6992150	0					
ANR	6992221	Identifier	monitor_printf		6992150	0					
ANR	6992222	ArgumentList	mon		6992150	1					
ANR	6992223	Argument	mon		6992150	0					
ANR	6992224	Identifier	mon		6992150	0					
ANR	6992225	Argument	"""CPU %d: Uncorrected error reporting disabled\\n"""		6992150	1					
ANR	6992226	PrimaryExpression	"""CPU %d: Uncorrected error reporting disabled\\n"""		6992150	0					
ANR	6992227	Argument	cenv -> cpu_index		6992150	2					
ANR	6992228	PtrMemberAccess	cenv -> cpu_index		6992150	0					
ANR	6992229	Identifier	cenv		6992150	0					
ANR	6992230	Identifier	cpu_index		6992150	1					
ANR	6992231	ReturnStatement	return ;	49:12:967:973	6992150	1	True				
ANR	6992232	IfStatement	if ( banks [ 0 ] != ~ ( uint64_t ) 0 )		6992150	1					
ANR	6992233	Condition	banks [ 0 ] != ~ ( uint64_t ) 0	63:12:1137:1160	6992150	0	True				
ANR	6992234	EqualityExpression	banks [ 0 ] != ~ ( uint64_t ) 0		6992150	0		!=			
ANR	6992235	ArrayIndexing	banks [ 0 ]		6992150	0					
ANR	6992236	Identifier	banks		6992150	0					
ANR	6992237	PrimaryExpression	0		6992150	1					
ANR	6992238	UnaryOperationExpression	~ ( uint64_t ) 0		6992150	1					
ANR	6992239	UnaryOperator	~		6992150	0					
ANR	6992240	CastExpression	( uint64_t ) 0		6992150	1					
ANR	6992241	CastTarget	uint64_t		6992150	0					
ANR	6992242	PrimaryExpression	0		6992150	1					
ANR	6992243	CompoundStatement		57:38:980:980	6992150	1					
ANR	6992244	Statement	monitor_printf	65:12:1178:1191	6992150	0	True				
ANR	6992245	Statement	(	65:26:1192:1192	6992150	1	True				
ANR	6992246	Statement	mon	65:27:1193:1195	6992150	2	True				
ANR	6992247	Statement	","	65:30:1196:1196	6992150	3	True				
ANR	6992248	Statement	"""CPU %d: Uncorrected error reporting disabled """	65:32:1198:1244	6992150	4	True				
ANR	6992249	Statement	"""for bank %d\\n"""	67:27:1274:1288	6992150	5	True				
ANR	6992250	Statement	","	67:42:1289:1289	6992150	6	True				
ANR	6992251	Statement	cenv	67:44:1291:1294	6992150	7	True				
ANR	6992252	Statement	->	67:48:1295:1296	6992150	8	True				
ANR	6992253	Statement	cpu_index	67:50:1297:1305	6992150	9	True				
ANR	6992254	Statement	","	67:59:1306:1306	6992150	10	True				
ANR	6992255	Statement	bank	67:61:1308:1311	6992150	11	True				
ANR	6992256	Statement	)	67:65:1312:1312	6992150	12	True				
ANR	6992257	ExpressionStatement		67:66:1313:1313	6992150	13	True				
ANR	6992258	ReturnStatement	return ;	69:12:1328:1334	6992150	14	True				
ANR	6992259	IfStatement	if ( ( cenv -> mcg_status & MCG_STATUS_MCIP ) || ! ( cenv -> cr [ 4 ] & CR4_MCE_MASK ) )		6992150	2					
ANR	6992260	Condition	( cenv -> mcg_status & MCG_STATUS_MCIP ) || ! ( cenv -> cr [ 4 ] & CR4_MCE_MASK )	75:12:1362:1443	6992150	0	True				
ANR	6992261	OrExpression	( cenv -> mcg_status & MCG_STATUS_MCIP ) || ! ( cenv -> cr [ 4 ] & CR4_MCE_MASK )		6992150	0		||			
ANR	6992262	BitAndExpression	cenv -> mcg_status & MCG_STATUS_MCIP		6992150	0		&			
ANR	6992263	PtrMemberAccess	cenv -> mcg_status		6992150	0					
ANR	6992264	Identifier	cenv		6992150	0					
ANR	6992265	Identifier	mcg_status		6992150	1					
ANR	6992266	Identifier	MCG_STATUS_MCIP		6992150	1					
ANR	6992267	UnaryOperationExpression	! ( cenv -> cr [ 4 ] & CR4_MCE_MASK )		6992150	1					
ANR	6992268	UnaryOperator	!		6992150	0					
ANR	6992269	BitAndExpression	cenv -> cr [ 4 ] & CR4_MCE_MASK		6992150	1		&			
ANR	6992270	ArrayIndexing	cenv -> cr [ 4 ]		6992150	0					
ANR	6992271	PtrMemberAccess	cenv -> cr		6992150	0					
ANR	6992272	Identifier	cenv		6992150	0					
ANR	6992273	Identifier	cr		6992150	1					
ANR	6992274	PrimaryExpression	4		6992150	1					
ANR	6992275	Identifier	CR4_MCE_MASK		6992150	1					
ANR	6992276	CompoundStatement		71:43:1263:1263	6992150	1					
ANR	6992277	Statement	monitor_printf	79:12:1461:1474	6992150	0	True				
ANR	6992278	Statement	(	79:26:1475:1475	6992150	1	True				
ANR	6992279	Statement	mon	79:27:1476:1478	6992150	2	True				
ANR	6992280	Statement	","	79:30:1479:1479	6992150	3	True				
ANR	6992281	Statement	"""CPU %d: Previous MCE still in progress, """	79:32:1481:1522	6992150	4	True				
ANR	6992282	Statement	"""raising triple fault\\n"""	81:32:1557:1580	6992150	5	True				
ANR	6992283	Statement	","	81:56:1581:1581	6992150	6	True				
ANR	6992284	Statement	cenv	81:58:1583:1586	6992150	7	True				
ANR	6992285	Statement	->	81:62:1587:1588	6992150	8	True				
ANR	6992286	Statement	cpu_index	81:64:1589:1597	6992150	9	True				
ANR	6992287	Statement	)	81:73:1598:1598	6992150	10	True				
ANR	6992288	ExpressionStatement		81:74:1599:1599	6992150	11	True				
ANR	6992289	ExpressionStatement	"qemu_log_mask ( CPU_LOG_RESET , ""Triple fault\\n"" )"	83:12:1614:1660	6992150	12	True				
ANR	6992290	CallExpression	"qemu_log_mask ( CPU_LOG_RESET , ""Triple fault\\n"" )"		6992150	0					
ANR	6992291	Callee	qemu_log_mask		6992150	0					
ANR	6992292	Identifier	qemu_log_mask		6992150	0					
ANR	6992293	ArgumentList	CPU_LOG_RESET		6992150	1					
ANR	6992294	Argument	CPU_LOG_RESET		6992150	0					
ANR	6992295	Identifier	CPU_LOG_RESET		6992150	0					
ANR	6992296	Argument	"""Triple fault\\n"""		6992150	1					
ANR	6992297	PrimaryExpression	"""Triple fault\\n"""		6992150	0					
ANR	6992298	ExpressionStatement	qemu_system_reset_request ( )	85:12:1675:1702	6992150	13	True				
ANR	6992299	CallExpression	qemu_system_reset_request ( )		6992150	0					
ANR	6992300	Callee	qemu_system_reset_request		6992150	0					
ANR	6992301	Identifier	qemu_system_reset_request		6992150	0					
ANR	6992302	ArgumentList			6992150	1					
ANR	6992303	ReturnStatement	return ;	87:12:1717:1723	6992150	14	True				
ANR	6992304	IfStatement	if ( banks [ 1 ] & MCI_STATUS_VAL )		6992150	3					
ANR	6992305	Condition	banks [ 1 ] & MCI_STATUS_VAL	91:12:1749:1773	6992150	0	True				
ANR	6992306	BitAndExpression	banks [ 1 ] & MCI_STATUS_VAL		6992150	0		&			
ANR	6992307	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992308	Identifier	banks		6992150	0					
ANR	6992309	PrimaryExpression	1		6992150	1					
ANR	6992310	Identifier	MCI_STATUS_VAL		6992150	1					
ANR	6992311	CompoundStatement		85:39:1593:1593	6992150	1					
ANR	6992312	ExpressionStatement	status |= MCI_STATUS_OVER	93:12:1791:1816	6992150	0	True				
ANR	6992313	AssignmentExpression	status |= MCI_STATUS_OVER		6992150	0		|=			
ANR	6992314	Identifier	status		6992150	0					
ANR	6992315	Identifier	MCI_STATUS_OVER		6992150	1					
ANR	6992316	ExpressionStatement	banks [ 2 ] = addr	97:8:1838:1853	6992150	4	True				
ANR	6992317	AssignmentExpression	banks [ 2 ] = addr		6992150	0		=			
ANR	6992318	ArrayIndexing	banks [ 2 ]		6992150	0					
ANR	6992319	Identifier	banks		6992150	0					
ANR	6992320	PrimaryExpression	2		6992150	1					
ANR	6992321	Identifier	addr		6992150	1					
ANR	6992322	ExpressionStatement	banks [ 3 ] = misc	99:8:1864:1879	6992150	5	True				
ANR	6992323	AssignmentExpression	banks [ 3 ] = misc		6992150	0		=			
ANR	6992324	ArrayIndexing	banks [ 3 ]		6992150	0					
ANR	6992325	Identifier	banks		6992150	0					
ANR	6992326	PrimaryExpression	3		6992150	1					
ANR	6992327	Identifier	misc		6992150	1					
ANR	6992328	ExpressionStatement	cenv -> mcg_status = mcg_status	101:8:1890:1919	6992150	6	True				
ANR	6992329	AssignmentExpression	cenv -> mcg_status = mcg_status		6992150	0		=			
ANR	6992330	PtrMemberAccess	cenv -> mcg_status		6992150	0					
ANR	6992331	Identifier	cenv		6992150	0					
ANR	6992332	Identifier	mcg_status		6992150	1					
ANR	6992333	Identifier	mcg_status		6992150	1					
ANR	6992334	ExpressionStatement	banks [ 1 ] = status	103:8:1930:1947	6992150	7	True				
ANR	6992335	AssignmentExpression	banks [ 1 ] = status		6992150	0		=			
ANR	6992336	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992337	Identifier	banks		6992150	0					
ANR	6992338	PrimaryExpression	1		6992150	1					
ANR	6992339	Identifier	status		6992150	1					
ANR	6992340	ExpressionStatement	"cpu_interrupt ( cenv , CPU_INTERRUPT_MCE )"	105:8:1958:1996	6992150	8	True				
ANR	6992341	CallExpression	"cpu_interrupt ( cenv , CPU_INTERRUPT_MCE )"		6992150	0					
ANR	6992342	Callee	cpu_interrupt		6992150	0					
ANR	6992343	Identifier	cpu_interrupt		6992150	0					
ANR	6992344	ArgumentList	cenv		6992150	1					
ANR	6992345	Argument	cenv		6992150	0					
ANR	6992346	Identifier	cenv		6992150	0					
ANR	6992347	Argument	CPU_INTERRUPT_MCE		6992150	1					
ANR	6992348	Identifier	CPU_INTERRUPT_MCE		6992150	0					
ANR	6992349	ElseStatement	else		6992150	0					
ANR	6992350	IfStatement	if ( ! ( banks [ 1 ] & MCI_STATUS_VAL ) || ! ( banks [ 1 ] & MCI_STATUS_UC ) )		6992150	0					
ANR	6992351	Condition	! ( banks [ 1 ] & MCI_STATUS_VAL ) || ! ( banks [ 1 ] & MCI_STATUS_UC )	107:15:2014:2088	6992150	0	True				
ANR	6992352	OrExpression	! ( banks [ 1 ] & MCI_STATUS_VAL ) || ! ( banks [ 1 ] & MCI_STATUS_UC )		6992150	0		||			
ANR	6992353	UnaryOperationExpression	! ( banks [ 1 ] & MCI_STATUS_VAL )		6992150	0					
ANR	6992354	UnaryOperator	!		6992150	0					
ANR	6992355	BitAndExpression	banks [ 1 ] & MCI_STATUS_VAL		6992150	1		&			
ANR	6992356	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992357	Identifier	banks		6992150	0					
ANR	6992358	PrimaryExpression	1		6992150	1					
ANR	6992359	Identifier	MCI_STATUS_VAL		6992150	1					
ANR	6992360	UnaryOperationExpression	! ( banks [ 1 ] & MCI_STATUS_UC )		6992150	1					
ANR	6992361	UnaryOperator	!		6992150	0					
ANR	6992362	BitAndExpression	banks [ 1 ] & MCI_STATUS_UC		6992150	1		&			
ANR	6992363	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992364	Identifier	banks		6992150	0					
ANR	6992365	PrimaryExpression	1		6992150	1					
ANR	6992366	Identifier	MCI_STATUS_UC		6992150	1					
ANR	6992367	CompoundStatement		103:47:1908:1908	6992150	1					
ANR	6992368	IfStatement	if ( banks [ 1 ] & MCI_STATUS_VAL )		6992150	0					
ANR	6992369	Condition	banks [ 1 ] & MCI_STATUS_VAL	111:12:2106:2130	6992150	0	True				
ANR	6992370	BitAndExpression	banks [ 1 ] & MCI_STATUS_VAL		6992150	0		&			
ANR	6992371	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992372	Identifier	banks		6992150	0					
ANR	6992373	PrimaryExpression	1		6992150	1					
ANR	6992374	Identifier	MCI_STATUS_VAL		6992150	1					
ANR	6992375	CompoundStatement		105:39:1950:1950	6992150	1					
ANR	6992376	ExpressionStatement	status |= MCI_STATUS_OVER	113:12:2148:2173	6992150	0	True				
ANR	6992377	AssignmentExpression	status |= MCI_STATUS_OVER		6992150	0		|=			
ANR	6992378	Identifier	status		6992150	0					
ANR	6992379	Identifier	MCI_STATUS_OVER		6992150	1					
ANR	6992380	ExpressionStatement	banks [ 2 ] = addr	117:8:2195:2210	6992150	1	True				
ANR	6992381	AssignmentExpression	banks [ 2 ] = addr		6992150	0		=			
ANR	6992382	ArrayIndexing	banks [ 2 ]		6992150	0					
ANR	6992383	Identifier	banks		6992150	0					
ANR	6992384	PrimaryExpression	2		6992150	1					
ANR	6992385	Identifier	addr		6992150	1					
ANR	6992386	ExpressionStatement	banks [ 3 ] = misc	119:8:2221:2236	6992150	2	True				
ANR	6992387	AssignmentExpression	banks [ 3 ] = misc		6992150	0		=			
ANR	6992388	ArrayIndexing	banks [ 3 ]		6992150	0					
ANR	6992389	Identifier	banks		6992150	0					
ANR	6992390	PrimaryExpression	3		6992150	1					
ANR	6992391	Identifier	misc		6992150	1					
ANR	6992392	ExpressionStatement	banks [ 1 ] = status	121:8:2247:2264	6992150	3	True				
ANR	6992393	AssignmentExpression	banks [ 1 ] = status		6992150	0		=			
ANR	6992394	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992395	Identifier	banks		6992150	0					
ANR	6992396	PrimaryExpression	1		6992150	1					
ANR	6992397	Identifier	status		6992150	1					
ANR	6992398	ElseStatement	else		6992150	0					
ANR	6992399	CompoundStatement		117:11:2095:2095	6992150	0					
ANR	6992400	ExpressionStatement	banks [ 1 ] |= MCI_STATUS_OVER	125:8:2289:2316	6992150	0	True				
ANR	6992401	AssignmentExpression	banks [ 1 ] |= MCI_STATUS_OVER		6992150	0		|=			
ANR	6992402	ArrayIndexing	banks [ 1 ]		6992150	0					
ANR	6992403	Identifier	banks		6992150	0					
ANR	6992404	PrimaryExpression	1		6992150	1					
ANR	6992405	Identifier	MCI_STATUS_OVER		6992150	1					
ANR	6992406	Identifier	qemu_inject_x86_mce		6992150	1					
ANR	6992407	ParameterList	"Monitor * mon , CPUState * cenv , int bank , uint64_t status , uint64_t mcg_status , uint64_t addr , uint64_t misc , int flags"		6992150	2					
ANR	6992408	Parameter	Monitor * mon	1:20:20:31	6992150	0	True				
ANR	6992409	ParameterType	Monitor *		6992150	0					
ANR	6992410	Identifier	mon		6992150	1					
ANR	6992411	Parameter	CPUState * cenv	1:34:34:47	6992150	1	True				
ANR	6992412	ParameterType	CPUState *		6992150	0					
ANR	6992413	Identifier	cenv		6992150	1					
ANR	6992414	Parameter	int bank	1:50:50:57	6992150	2	True				
ANR	6992415	ParameterType	int		6992150	0					
ANR	6992416	Identifier	bank		6992150	1					
ANR	6992417	Parameter	uint64_t status	1:60:60:74	6992150	3	True				
ANR	6992418	ParameterType	uint64_t		6992150	0					
ANR	6992419	Identifier	status		6992150	1					
ANR	6992420	Parameter	uint64_t mcg_status	3:20:98:116	6992150	4	True				
ANR	6992421	ParameterType	uint64_t		6992150	0					
ANR	6992422	Identifier	mcg_status		6992150	1					
ANR	6992423	Parameter	uint64_t addr	3:41:119:131	6992150	5	True				
ANR	6992424	ParameterType	uint64_t		6992150	0					
ANR	6992425	Identifier	addr		6992150	1					
ANR	6992426	Parameter	uint64_t misc	3:56:134:146	6992150	6	True				
ANR	6992427	ParameterType	uint64_t		6992150	0					
ANR	6992428	Identifier	misc		6992150	1					
ANR	6992429	Parameter	int flags	5:20:170:178	6992150	7	True				
ANR	6992430	ParameterType	int		6992150	0					
ANR	6992431	Identifier	flags		6992150	1					
ANR	6992432	CFGEntryNode	ENTRY		6992150		True				
ANR	6992433	CFGExitNode	EXIT		6992150		True				
ANR	6992434	Symbol	MCI_STATUS_AR		6992150						
ANR	6992435	Symbol	* * cenv		6992150						
ANR	6992436	Symbol	cenv		6992150						
ANR	6992437	Symbol	flags		6992150						
ANR	6992438	Symbol	cenv -> mcg_status		6992150						
ANR	6992439	Symbol	* cenv -> cr		6992150						
ANR	6992440	Symbol	MCI_STATUS_VAL		6992150						
ANR	6992441	Symbol	mon		6992150						
ANR	6992442	Symbol	MCE_INJECT_UNCOND_AO		6992150						
ANR	6992443	Symbol	bank		6992150						
ANR	6992444	Symbol	addr		6992150						
ANR	6992445	Symbol	MCG_STATUS_MCIP		6992150						
ANR	6992446	Symbol	misc		6992150						
ANR	6992447	Symbol	cenv -> mcg_ctl		6992150						
ANR	6992448	Symbol	banks		6992150						
ANR	6992449	Symbol	cenv -> mce_banks		6992150						
ANR	6992450	Symbol	mcg_cap		6992150						
ANR	6992451	Symbol	MCG_CTL_P		6992150						
ANR	6992452	Symbol	CPU_INTERRUPT_MCE		6992150						
ANR	6992453	Symbol	cenv -> cr		6992150						
ANR	6992454	Symbol	mcg_status		6992150						
ANR	6992455	Symbol	* banks		6992150						
ANR	6992456	Symbol	cenv -> cpu_index		6992150						
ANR	6992457	Symbol	CPU_LOG_RESET		6992150						
ANR	6992458	Symbol	cenv -> mcg_cap		6992150						
ANR	6992459	Symbol	MCI_STATUS_OVER		6992150						
ANR	6992460	Symbol	* cenv		6992150						
ANR	6992461	Symbol	MCI_STATUS_UC		6992150						
ANR	6992462	Symbol	CR4_MCE_MASK		6992150						
ANR	6992463	Symbol	status		6992150						
