command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6648152	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc_spapr_init_03_1.c								
ANR	6648153	Function	ppc_spapr_init	1:0:0:9324							
ANR	6648154	FunctionDef	ppc_spapr_init (MachineState * machine)		6648153	0					
ANR	6648155	CompoundStatement		3:0:51:9324	6648153	0					
ANR	6648156	IdentifierDeclStatement	ram_addr_t ram_size = machine -> ram_size ;	5:4:58:97	6648153	0	True				
ANR	6648157	IdentifierDecl	ram_size = machine -> ram_size		6648153	0					
ANR	6648158	IdentifierDeclType	ram_addr_t		6648153	0					
ANR	6648159	Identifier	ram_size		6648153	1					
ANR	6648160	AssignmentExpression	ram_size = machine -> ram_size		6648153	2		=			
ANR	6648161	Identifier	ram_size		6648153	0					
ANR	6648162	PtrMemberAccess	machine -> ram_size		6648153	1					
ANR	6648163	Identifier	machine		6648153	0					
ANR	6648164	Identifier	ram_size		6648153	1					
ANR	6648165	IdentifierDeclStatement	const char * cpu_model = machine -> cpu_model ;	7:4:104:146	6648153	1	True				
ANR	6648166	IdentifierDecl	* cpu_model = machine -> cpu_model		6648153	0					
ANR	6648167	IdentifierDeclType	const char *		6648153	0					
ANR	6648168	Identifier	cpu_model		6648153	1					
ANR	6648169	AssignmentExpression	* cpu_model = machine -> cpu_model		6648153	2		=			
ANR	6648170	Identifier	cpu_model		6648153	0					
ANR	6648171	PtrMemberAccess	machine -> cpu_model		6648153	1					
ANR	6648172	Identifier	machine		6648153	0					
ANR	6648173	Identifier	cpu_model		6648153	1					
ANR	6648174	IdentifierDeclStatement	const char * kernel_filename = machine -> kernel_filename ;	9:4:153:207	6648153	2	True				
ANR	6648175	IdentifierDecl	* kernel_filename = machine -> kernel_filename		6648153	0					
ANR	6648176	IdentifierDeclType	const char *		6648153	0					
ANR	6648177	Identifier	kernel_filename		6648153	1					
ANR	6648178	AssignmentExpression	* kernel_filename = machine -> kernel_filename		6648153	2		=			
ANR	6648179	Identifier	kernel_filename		6648153	0					
ANR	6648180	PtrMemberAccess	machine -> kernel_filename		6648153	1					
ANR	6648181	Identifier	machine		6648153	0					
ANR	6648182	Identifier	kernel_filename		6648153	1					
ANR	6648183	IdentifierDeclStatement	const char * kernel_cmdline = machine -> kernel_cmdline ;	11:4:214:266	6648153	3	True				
ANR	6648184	IdentifierDecl	* kernel_cmdline = machine -> kernel_cmdline		6648153	0					
ANR	6648185	IdentifierDeclType	const char *		6648153	0					
ANR	6648186	Identifier	kernel_cmdline		6648153	1					
ANR	6648187	AssignmentExpression	* kernel_cmdline = machine -> kernel_cmdline		6648153	2		=			
ANR	6648188	Identifier	kernel_cmdline		6648153	0					
ANR	6648189	PtrMemberAccess	machine -> kernel_cmdline		6648153	1					
ANR	6648190	Identifier	machine		6648153	0					
ANR	6648191	Identifier	kernel_cmdline		6648153	1					
ANR	6648192	IdentifierDeclStatement	const char * initrd_filename = machine -> initrd_filename ;	13:4:273:327	6648153	4	True				
ANR	6648193	IdentifierDecl	* initrd_filename = machine -> initrd_filename		6648153	0					
ANR	6648194	IdentifierDeclType	const char *		6648153	0					
ANR	6648195	Identifier	initrd_filename		6648153	1					
ANR	6648196	AssignmentExpression	* initrd_filename = machine -> initrd_filename		6648153	2		=			
ANR	6648197	Identifier	initrd_filename		6648153	0					
ANR	6648198	PtrMemberAccess	machine -> initrd_filename		6648153	1					
ANR	6648199	Identifier	machine		6648153	0					
ANR	6648200	Identifier	initrd_filename		6648153	1					
ANR	6648201	IdentifierDeclStatement	const char * boot_device = machine -> boot_order ;	15:4:334:379	6648153	5	True				
ANR	6648202	IdentifierDecl	* boot_device = machine -> boot_order		6648153	0					
ANR	6648203	IdentifierDeclType	const char *		6648153	0					
ANR	6648204	Identifier	boot_device		6648153	1					
ANR	6648205	AssignmentExpression	* boot_device = machine -> boot_order		6648153	2		=			
ANR	6648206	Identifier	boot_device		6648153	0					
ANR	6648207	PtrMemberAccess	machine -> boot_order		6648153	1					
ANR	6648208	Identifier	machine		6648153	0					
ANR	6648209	Identifier	boot_order		6648153	1					
ANR	6648210	IdentifierDeclStatement	PowerPCCPU * cpu ;	17:4:386:401	6648153	6	True				
ANR	6648211	IdentifierDecl	* cpu		6648153	0					
ANR	6648212	IdentifierDeclType	PowerPCCPU *		6648153	0					
ANR	6648213	Identifier	cpu		6648153	1					
ANR	6648214	IdentifierDeclStatement	CPUPPCState * env ;	19:4:408:424	6648153	7	True				
ANR	6648215	IdentifierDecl	* env		6648153	0					
ANR	6648216	IdentifierDeclType	CPUPPCState *		6648153	0					
ANR	6648217	Identifier	env		6648153	1					
ANR	6648218	IdentifierDeclStatement	PCIHostState * phb ;	21:4:431:448	6648153	8	True				
ANR	6648219	IdentifierDecl	* phb		6648153	0					
ANR	6648220	IdentifierDeclType	PCIHostState *		6648153	0					
ANR	6648221	Identifier	phb		6648153	1					
ANR	6648222	IdentifierDeclStatement	int i ;	23:4:455:460	6648153	9	True				
ANR	6648223	IdentifierDecl	i		6648153	0					
ANR	6648224	IdentifierDeclType	int		6648153	0					
ANR	6648225	Identifier	i		6648153	1					
ANR	6648226	IdentifierDeclStatement	MemoryRegion * sysmem = get_system_memory ( ) ;	25:4:467:509	6648153	10	True				
ANR	6648227	IdentifierDecl	* sysmem = get_system_memory ( )		6648153	0					
ANR	6648228	IdentifierDeclType	MemoryRegion *		6648153	0					
ANR	6648229	Identifier	sysmem		6648153	1					
ANR	6648230	AssignmentExpression	* sysmem = get_system_memory ( )		6648153	2		=			
ANR	6648231	Identifier	sysmem		6648153	0					
ANR	6648232	CallExpression	get_system_memory ( )		6648153	1					
ANR	6648233	Callee	get_system_memory		6648153	0					
ANR	6648234	Identifier	get_system_memory		6648153	0					
ANR	6648235	ArgumentList			6648153	1					
ANR	6648236	IdentifierDeclStatement	"MemoryRegion * ram = g_new ( MemoryRegion , 1 ) ;"	27:4:516:558	6648153	11	True				
ANR	6648237	IdentifierDecl	"* ram = g_new ( MemoryRegion , 1 )"		6648153	0					
ANR	6648238	IdentifierDeclType	MemoryRegion *		6648153	0					
ANR	6648239	Identifier	ram		6648153	1					
ANR	6648240	AssignmentExpression	"* ram = g_new ( MemoryRegion , 1 )"		6648153	2		=			
ANR	6648241	Identifier	ram		6648153	0					
ANR	6648242	CallExpression	"g_new ( MemoryRegion , 1 )"		6648153	1					
ANR	6648243	Callee	g_new		6648153	0					
ANR	6648244	Identifier	g_new		6648153	0					
ANR	6648245	ArgumentList	MemoryRegion		6648153	1					
ANR	6648246	Argument	MemoryRegion		6648153	0					
ANR	6648247	Identifier	MemoryRegion		6648153	0					
ANR	6648248	Argument	1		6648153	1					
ANR	6648249	PrimaryExpression	1		6648153	0					
ANR	6648250	IdentifierDeclStatement	MemoryRegion * rma_region ;	29:4:565:589	6648153	12	True				
ANR	6648251	IdentifierDecl	* rma_region		6648153	0					
ANR	6648252	IdentifierDeclType	MemoryRegion *		6648153	0					
ANR	6648253	Identifier	rma_region		6648153	1					
ANR	6648254	IdentifierDeclStatement	void * rma = NULL ;	31:4:596:612	6648153	13	True				
ANR	6648255	IdentifierDecl	* rma = NULL		6648153	0					
ANR	6648256	IdentifierDeclType	void *		6648153	0					
ANR	6648257	Identifier	rma		6648153	1					
ANR	6648258	AssignmentExpression	* rma = NULL		6648153	2		=			
ANR	6648259	Identifier	NULL		6648153	0					
ANR	6648260	Identifier	NULL		6648153	1					
ANR	6648261	IdentifierDeclStatement	hwaddr rma_alloc_size ;	33:4:619:640	6648153	14	True				
ANR	6648262	IdentifierDecl	rma_alloc_size		6648153	0					
ANR	6648263	IdentifierDeclType	hwaddr		6648153	0					
ANR	6648264	Identifier	rma_alloc_size		6648153	1					
ANR	6648265	IdentifierDeclStatement	hwaddr node0_size = spapr_node0_size ( ) ;	35:4:647:685	6648153	15	True				
ANR	6648266	IdentifierDecl	node0_size = spapr_node0_size ( )		6648153	0					
ANR	6648267	IdentifierDeclType	hwaddr		6648153	0					
ANR	6648268	Identifier	node0_size		6648153	1					
ANR	6648269	AssignmentExpression	node0_size = spapr_node0_size ( )		6648153	2		=			
ANR	6648270	Identifier	node0_size		6648153	0					
ANR	6648271	CallExpression	spapr_node0_size ( )		6648153	1					
ANR	6648272	Callee	spapr_node0_size		6648153	0					
ANR	6648273	Identifier	spapr_node0_size		6648153	0					
ANR	6648274	ArgumentList			6648153	1					
ANR	6648275	IdentifierDeclStatement	uint32_t initrd_base = 0 ;	37:4:692:716	6648153	16	True				
ANR	6648276	IdentifierDecl	initrd_base = 0		6648153	0					
ANR	6648277	IdentifierDeclType	uint32_t		6648153	0					
ANR	6648278	Identifier	initrd_base		6648153	1					
ANR	6648279	AssignmentExpression	initrd_base = 0		6648153	2		=			
ANR	6648280	Identifier	initrd_base		6648153	0					
ANR	6648281	PrimaryExpression	0		6648153	1					
ANR	6648282	IdentifierDeclStatement	"long kernel_size = 0 , initrd_size = 0 ;"	39:4:723:760	6648153	17	True				
ANR	6648283	IdentifierDecl	kernel_size = 0		6648153	0					
ANR	6648284	IdentifierDeclType	long		6648153	0					
ANR	6648285	Identifier	kernel_size		6648153	1					
ANR	6648286	AssignmentExpression	kernel_size = 0		6648153	2		=			
ANR	6648287	Identifier	kernel_size		6648153	0					
ANR	6648288	PrimaryExpression	0		6648153	1					
ANR	6648289	IdentifierDecl	initrd_size = 0		6648153	1					
ANR	6648290	IdentifierDeclType	long		6648153	0					
ANR	6648291	Identifier	initrd_size		6648153	1					
ANR	6648292	AssignmentExpression	initrd_size = 0		6648153	2		=			
ANR	6648293	Identifier	initrd_size		6648153	0					
ANR	6648294	PrimaryExpression	0		6648153	1					
ANR	6648295	IdentifierDeclStatement	"long load_limit , rtas_limit , fw_size ;"	41:4:767:803	6648153	18	True				
ANR	6648296	IdentifierDecl	load_limit		6648153	0					
ANR	6648297	IdentifierDeclType	long		6648153	0					
ANR	6648298	Identifier	load_limit		6648153	1					
ANR	6648299	IdentifierDecl	rtas_limit		6648153	1					
ANR	6648300	IdentifierDeclType	long		6648153	0					
ANR	6648301	Identifier	rtas_limit		6648153	1					
ANR	6648302	IdentifierDecl	fw_size		6648153	2					
ANR	6648303	IdentifierDeclType	long		6648153	0					
ANR	6648304	Identifier	fw_size		6648153	1					
ANR	6648305	IdentifierDeclStatement	bool kernel_le = false ;	43:4:810:832	6648153	19	True				
ANR	6648306	IdentifierDecl	kernel_le = false		6648153	0					
ANR	6648307	IdentifierDeclType	bool		6648153	0					
ANR	6648308	Identifier	kernel_le		6648153	1					
ANR	6648309	AssignmentExpression	kernel_le = false		6648153	2		=			
ANR	6648310	Identifier	false		6648153	0					
ANR	6648311	Identifier	false		6648153	1					
ANR	6648312	IdentifierDeclStatement	char * filename ;	45:4:839:853	6648153	20	True				
ANR	6648313	IdentifierDecl	* filename		6648153	0					
ANR	6648314	IdentifierDeclType	char *		6648153	0					
ANR	6648315	Identifier	filename		6648153	1					
ANR	6648316	ExpressionStatement	msi_supported = true	49:4:862:882	6648153	21	True				
ANR	6648317	AssignmentExpression	msi_supported = true		6648153	0		=			
ANR	6648318	Identifier	msi_supported		6648153	0					
ANR	6648319	Identifier	true		6648153	1					
ANR	6648320	ExpressionStatement	spapr = g_malloc0 ( sizeof ( * spapr ) )	53:4:891:924	6648153	22	True				
ANR	6648321	AssignmentExpression	spapr = g_malloc0 ( sizeof ( * spapr ) )		6648153	0		=			
ANR	6648322	Identifier	spapr		6648153	0					
ANR	6648323	CallExpression	g_malloc0 ( sizeof ( * spapr ) )		6648153	1					
ANR	6648324	Callee	g_malloc0		6648153	0					
ANR	6648325	Identifier	g_malloc0		6648153	0					
ANR	6648326	ArgumentList	sizeof ( * spapr )		6648153	1					
ANR	6648327	Argument	sizeof ( * spapr )		6648153	0					
ANR	6648328	SizeofExpression	sizeof ( * spapr )		6648153	0					
ANR	6648329	Sizeof	sizeof		6648153	0					
ANR	6648330	UnaryOperationExpression	* spapr		6648153	1					
ANR	6648331	UnaryOperator	*		6648153	0					
ANR	6648332	Identifier	spapr		6648153	1					
ANR	6648333	ExpressionStatement	QLIST_INIT ( & spapr -> phbs )	55:4:931:955	6648153	23	True				
ANR	6648334	CallExpression	QLIST_INIT ( & spapr -> phbs )		6648153	0					
ANR	6648335	Callee	QLIST_INIT		6648153	0					
ANR	6648336	Identifier	QLIST_INIT		6648153	0					
ANR	6648337	ArgumentList	& spapr -> phbs		6648153	1					
ANR	6648338	Argument	& spapr -> phbs		6648153	0					
ANR	6648339	UnaryOperationExpression	& spapr -> phbs		6648153	0					
ANR	6648340	UnaryOperator	&		6648153	0					
ANR	6648341	PtrMemberAccess	spapr -> phbs		6648153	1					
ANR	6648342	Identifier	spapr		6648153	0					
ANR	6648343	Identifier	phbs		6648153	1					
ANR	6648344	ExpressionStatement	cpu_ppc_hypercall = emulate_spapr_hypercall	59:4:964:1007	6648153	24	True				
ANR	6648345	AssignmentExpression	cpu_ppc_hypercall = emulate_spapr_hypercall		6648153	0		=			
ANR	6648346	Identifier	cpu_ppc_hypercall		6648153	0					
ANR	6648347	Identifier	emulate_spapr_hypercall		6648153	1					
ANR	6648348	ExpressionStatement	rma_alloc_size = kvmppc_alloc_rma ( & rma )	65:4:1053:1092	6648153	25	True				
ANR	6648349	AssignmentExpression	rma_alloc_size = kvmppc_alloc_rma ( & rma )		6648153	0		=			
ANR	6648350	Identifier	rma_alloc_size		6648153	0					
ANR	6648351	CallExpression	kvmppc_alloc_rma ( & rma )		6648153	1					
ANR	6648352	Callee	kvmppc_alloc_rma		6648153	0					
ANR	6648353	Identifier	kvmppc_alloc_rma		6648153	0					
ANR	6648354	ArgumentList	& rma		6648153	1					
ANR	6648355	Argument	& rma		6648153	0					
ANR	6648356	UnaryOperationExpression	& rma		6648153	0					
ANR	6648357	UnaryOperator	&		6648153	0					
ANR	6648358	Identifier	rma		6648153	1					
ANR	6648359	IfStatement	if ( rma_alloc_size == - 1 )		6648153	26					
ANR	6648360	Condition	rma_alloc_size == - 1	69:8:1105:1124	6648153	0	True				
ANR	6648361	EqualityExpression	rma_alloc_size == - 1		6648153	0		==			
ANR	6648362	Identifier	rma_alloc_size		6648153	0					
ANR	6648363	UnaryOperationExpression	- 1		6648153	1					
ANR	6648364	UnaryOperator	-		6648153	0					
ANR	6648365	PrimaryExpression	1		6648153	1					
ANR	6648366	CompoundStatement		67:30:1075:1075	6648153	1					
ANR	6648367	ExpressionStatement	"hw_error ( ""qemu: Unable to create RMA\\n"" )"	71:8:1138:1178	6648153	0	True				
ANR	6648368	CallExpression	"hw_error ( ""qemu: Unable to create RMA\\n"" )"		6648153	0					
ANR	6648369	Callee	hw_error		6648153	0					
ANR	6648370	Identifier	hw_error		6648153	0					
ANR	6648371	ArgumentList	"""qemu: Unable to create RMA\\n"""		6648153	1					
ANR	6648372	Argument	"""qemu: Unable to create RMA\\n"""		6648153	0					
ANR	6648373	PrimaryExpression	"""qemu: Unable to create RMA\\n"""		6648153	0					
ANR	6648374	ExpressionStatement	exit ( 1 )	73:8:1189:1196	6648153	1	True				
ANR	6648375	CallExpression	exit ( 1 )		6648153	0					
ANR	6648376	Callee	exit		6648153	0					
ANR	6648377	Identifier	exit		6648153	0					
ANR	6648378	ArgumentList	1		6648153	1					
ANR	6648379	Argument	1		6648153	0					
ANR	6648380	PrimaryExpression	1		6648153	0					
ANR	6648381	IfStatement	if ( rma_alloc_size && ( rma_alloc_size < node0_size ) )		6648153	27					
ANR	6648382	Condition	rma_alloc_size && ( rma_alloc_size < node0_size )	79:8:1216:1262	6648153	0	True				
ANR	6648383	AndExpression	rma_alloc_size && ( rma_alloc_size < node0_size )		6648153	0		&&			
ANR	6648384	Identifier	rma_alloc_size		6648153	0					
ANR	6648385	RelationalExpression	rma_alloc_size < node0_size		6648153	1		<			
ANR	6648386	Identifier	rma_alloc_size		6648153	0					
ANR	6648387	Identifier	node0_size		6648153	1					
ANR	6648388	CompoundStatement		77:57:1213:1213	6648153	1					
ANR	6648389	ExpressionStatement	spapr -> rma_size = rma_alloc_size	81:8:1276:1308	6648153	0	True				
ANR	6648390	AssignmentExpression	spapr -> rma_size = rma_alloc_size		6648153	0		=			
ANR	6648391	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648392	Identifier	spapr		6648153	0					
ANR	6648393	Identifier	rma_size		6648153	1					
ANR	6648394	Identifier	rma_alloc_size		6648153	1					
ANR	6648395	ElseStatement	else		6648153	0					
ANR	6648396	CompoundStatement		81:11:1270:1270	6648153	0					
ANR	6648397	ExpressionStatement	spapr -> rma_size = node0_size	85:8:1333:1361	6648153	0	True				
ANR	6648398	AssignmentExpression	spapr -> rma_size = node0_size		6648153	0		=			
ANR	6648399	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648400	Identifier	spapr		6648153	0					
ANR	6648401	Identifier	rma_size		6648153	1					
ANR	6648402	Identifier	node0_size		6648153	1					
ANR	6648403	IfStatement	if ( kvm_enabled ( ) )		6648153	1					
ANR	6648404	Condition	kvm_enabled ( )	107:12:1861:1873	6648153	0	True				
ANR	6648405	CallExpression	kvm_enabled ( )		6648153	0					
ANR	6648406	Callee	kvm_enabled		6648153	0					
ANR	6648407	Identifier	kvm_enabled		6648153	0					
ANR	6648408	ArgumentList			6648153	1					
ANR	6648409	CompoundStatement		105:27:1824:1824	6648153	1					
ANR	6648410	ExpressionStatement	spapr -> vrma_adjust = 1	109:12:1891:1913	6648153	0	True				
ANR	6648411	AssignmentExpression	spapr -> vrma_adjust = 1		6648153	0		=			
ANR	6648412	PtrMemberAccess	spapr -> vrma_adjust		6648153	0					
ANR	6648413	Identifier	spapr		6648153	0					
ANR	6648414	Identifier	vrma_adjust		6648153	1					
ANR	6648415	PrimaryExpression	1		6648153	1					
ANR	6648416	ExpressionStatement	"spapr -> rma_size = MIN ( spapr -> rma_size , 0x10000000 )"	111:12:1928:1978	6648153	1	True				
ANR	6648417	AssignmentExpression	"spapr -> rma_size = MIN ( spapr -> rma_size , 0x10000000 )"		6648153	0		=			
ANR	6648418	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648419	Identifier	spapr		6648153	0					
ANR	6648420	Identifier	rma_size		6648153	1					
ANR	6648421	CallExpression	"MIN ( spapr -> rma_size , 0x10000000 )"		6648153	1					
ANR	6648422	Callee	MIN		6648153	0					
ANR	6648423	Identifier	MIN		6648153	0					
ANR	6648424	ArgumentList	spapr -> rma_size		6648153	1					
ANR	6648425	Argument	spapr -> rma_size		6648153	0					
ANR	6648426	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648427	Identifier	spapr		6648153	0					
ANR	6648428	Identifier	rma_size		6648153	1					
ANR	6648429	Argument	0x10000000		6648153	1					
ANR	6648430	PrimaryExpression	0x10000000		6648153	0					
ANR	6648431	IfStatement	if ( spapr -> rma_size > node0_size )		6648153	28					
ANR	6648432	Condition	spapr -> rma_size > node0_size	119:8:2009:2036	6648153	0	True				
ANR	6648433	RelationalExpression	spapr -> rma_size > node0_size		6648153	0		>			
ANR	6648434	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648435	Identifier	spapr		6648153	0					
ANR	6648436	Identifier	rma_size		6648153	1					
ANR	6648437	Identifier	node0_size		6648153	1					
ANR	6648438	CompoundStatement		117:38:1987:1987	6648153	1					
ANR	6648439	Statement	fprintf	121:8:2050:2056	6648153	0	True				
ANR	6648440	Statement	(	121:15:2057:2057	6648153	1	True				
ANR	6648441	Statement	stderr	121:16:2058:2063	6648153	2	True				
ANR	6648442	Statement	","	121:22:2064:2064	6648153	3	True				
ANR	6648443	Statement	"""Error: Numa node 0 has to span the RMA (%#08"""	121:24:2066:2111	6648153	4	True				
ANR	6648444	Statement	HWADDR_PRIx	121:70:2112:2122	6648153	5	True				
ANR	6648445	Statement	""")\\n"""	121:81:2123:2127	6648153	6	True				
ANR	6648446	Statement	","	121:86:2128:2128	6648153	7	True				
ANR	6648447	Statement	spapr	123:16:2147:2151	6648153	8	True				
ANR	6648448	Statement	->	123:21:2152:2153	6648153	9	True				
ANR	6648449	Statement	rma_size	123:23:2154:2161	6648153	10	True				
ANR	6648450	Statement	)	123:31:2162:2162	6648153	11	True				
ANR	6648451	ExpressionStatement		123:32:2163:2163	6648153	12	True				
ANR	6648452	ExpressionStatement	exit ( 1 )	125:8:2174:2181	6648153	13	True				
ANR	6648453	CallExpression	exit ( 1 )		6648153	0					
ANR	6648454	Callee	exit		6648153	0					
ANR	6648455	Identifier	exit		6648153	0					
ANR	6648456	ArgumentList	1		6648153	1					
ANR	6648457	Argument	1		6648153	0					
ANR	6648458	PrimaryExpression	1		6648153	0					
ANR	6648459	ExpressionStatement	"rtas_limit = MIN ( spapr -> rma_size , 0x80000000 )"	137:4:2404:2449	6648153	29	True				
ANR	6648460	AssignmentExpression	"rtas_limit = MIN ( spapr -> rma_size , 0x80000000 )"		6648153	0		=			
ANR	6648461	Identifier	rtas_limit		6648153	0					
ANR	6648462	CallExpression	"MIN ( spapr -> rma_size , 0x80000000 )"		6648153	1					
ANR	6648463	Callee	MIN		6648153	0					
ANR	6648464	Identifier	MIN		6648153	0					
ANR	6648465	ArgumentList	spapr -> rma_size		6648153	1					
ANR	6648466	Argument	spapr -> rma_size		6648153	0					
ANR	6648467	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6648468	Identifier	spapr		6648153	0					
ANR	6648469	Identifier	rma_size		6648153	1					
ANR	6648470	Argument	0x80000000		6648153	1					
ANR	6648471	PrimaryExpression	0x80000000		6648153	0					
ANR	6648472	ExpressionStatement	spapr -> rtas_addr = rtas_limit - RTAS_MAX_SIZE	139:4:2456:2501	6648153	30	True				
ANR	6648473	AssignmentExpression	spapr -> rtas_addr = rtas_limit - RTAS_MAX_SIZE		6648153	0		=			
ANR	6648474	PtrMemberAccess	spapr -> rtas_addr		6648153	0					
ANR	6648475	Identifier	spapr		6648153	0					
ANR	6648476	Identifier	rtas_addr		6648153	1					
ANR	6648477	AdditiveExpression	rtas_limit - RTAS_MAX_SIZE		6648153	1		-			
ANR	6648478	Identifier	rtas_limit		6648153	0					
ANR	6648479	Identifier	RTAS_MAX_SIZE		6648153	1					
ANR	6648480	ExpressionStatement	spapr -> fdt_addr = spapr -> rtas_addr - FDT_MAX_SIZE	141:4:2508:2557	6648153	31	True				
ANR	6648481	AssignmentExpression	spapr -> fdt_addr = spapr -> rtas_addr - FDT_MAX_SIZE		6648153	0		=			
ANR	6648482	PtrMemberAccess	spapr -> fdt_addr		6648153	0					
ANR	6648483	Identifier	spapr		6648153	0					
ANR	6648484	Identifier	fdt_addr		6648153	1					
ANR	6648485	AdditiveExpression	spapr -> rtas_addr - FDT_MAX_SIZE		6648153	1		-			
ANR	6648486	PtrMemberAccess	spapr -> rtas_addr		6648153	0					
ANR	6648487	Identifier	spapr		6648153	0					
ANR	6648488	Identifier	rtas_addr		6648153	1					
ANR	6648489	Identifier	FDT_MAX_SIZE		6648153	1					
ANR	6648490	ExpressionStatement	load_limit = spapr -> fdt_addr - FW_OVERHEAD	143:4:2564:2606	6648153	32	True				
ANR	6648491	AssignmentExpression	load_limit = spapr -> fdt_addr - FW_OVERHEAD		6648153	0		=			
ANR	6648492	Identifier	load_limit		6648153	0					
ANR	6648493	AdditiveExpression	spapr -> fdt_addr - FW_OVERHEAD		6648153	1		-			
ANR	6648494	PtrMemberAccess	spapr -> fdt_addr		6648153	0					
ANR	6648495	Identifier	spapr		6648153	0					
ANR	6648496	Identifier	fdt_addr		6648153	1					
ANR	6648497	Identifier	FW_OVERHEAD		6648153	1					
ANR	6648498	ExpressionStatement	spapr -> htab_shift = 18	153:4:2814:2836	6648153	33	True				
ANR	6648499	AssignmentExpression	spapr -> htab_shift = 18		6648153	0		=			
ANR	6648500	PtrMemberAccess	spapr -> htab_shift		6648153	0					
ANR	6648501	Identifier	spapr		6648153	0					
ANR	6648502	Identifier	htab_shift		6648153	1					
ANR	6648503	PrimaryExpression	18		6648153	1					
ANR	6648504	WhileStatement	while ( spapr -> htab_shift <= 46 )		6648153	34					
ANR	6648505	Condition	spapr -> htab_shift <= 46	155:11:2881:2903	6648153	0	True				
ANR	6648506	RelationalExpression	spapr -> htab_shift <= 46		6648153	0		<=			
ANR	6648507	PtrMemberAccess	spapr -> htab_shift		6648153	0					
ANR	6648508	Identifier	spapr		6648153	0					
ANR	6648509	Identifier	htab_shift		6648153	1					
ANR	6648510	PrimaryExpression	46		6648153	1					
ANR	6648511	CompoundStatement		153:36:2854:2854	6648153	1					
ANR	6648512	Statement	if	157:8:2917:2918	6648153	0	True				
ANR	6648513	Statement	(	157:11:2920:2920	6648153	1	True				
ANR	6648514	Statement	(	157:12:2921:2921	6648153	2	True				
ANR	6648515	Statement	1UL	157:13:2922:2924	6648153	3	True				
ANR	6648516	Statement	L	157:16:2925:2925	6648153	4	True				
ANR	6648517	Statement	<<	157:18:2927:2928	6648153	5	True				
ANR	6648518	Statement	(	157:21:2930:2930	6648153	6	True				
ANR	6648519	Statement	spapr	157:22:2931:2935	6648153	7	True				
ANR	6648520	Statement	->	157:27:2936:2937	6648153	8	True				
ANR	6648521	Statement	htab_shift	157:29:2938:2947	6648153	9	True				
ANR	6648522	Statement	+	157:40:2949:2949	6648153	10	True				
ANR	6648523	Statement	7	157:42:2951:2951	6648153	11	True				
ANR	6648524	Statement	)	157:43:2952:2952	6648153	12	True				
ANR	6648525	Statement	)	157:44:2953:2953	6648153	13	True				
ANR	6648526	Statement	>=	157:46:2955:2956	6648153	14	True				
ANR	6648527	Statement	ram_size	157:49:2958:2965	6648153	15	True				
ANR	6648528	Statement	)	157:57:2966:2966	6648153	16	True				
ANR	6648529	CompoundStatement		155:59:2916:2916	6648153	17					
ANR	6648530	BreakStatement	break ;	159:12:2983:2988	6648153	0	True				
ANR	6648531	ExpressionStatement	spapr -> htab_shift ++	163:8:3010:3029	6648153	18	True				
ANR	6648532	PostIncDecOperationExpression	spapr -> htab_shift ++		6648153	0					
ANR	6648533	PtrMemberAccess	spapr -> htab_shift		6648153	0					
ANR	6648534	Identifier	spapr		6648153	0					
ANR	6648535	Identifier	htab_shift		6648153	1					
ANR	6648536	IncDec	++		6648153	1					
ANR	6648537	ExpressionStatement	"spapr -> icp = xics_system_init ( smp_cpus * kvmppc_smt_threads ( ) / smp_threads , XICS_IRQS )"	171:4:3111:3233	6648153	35	True				
ANR	6648538	AssignmentExpression	"spapr -> icp = xics_system_init ( smp_cpus * kvmppc_smt_threads ( ) / smp_threads , XICS_IRQS )"		6648153	0		=			
ANR	6648539	PtrMemberAccess	spapr -> icp		6648153	0					
ANR	6648540	Identifier	spapr		6648153	0					
ANR	6648541	Identifier	icp		6648153	1					
ANR	6648542	CallExpression	"xics_system_init ( smp_cpus * kvmppc_smt_threads ( ) / smp_threads , XICS_IRQS )"		6648153	1					
ANR	6648543	Callee	xics_system_init		6648153	0					
ANR	6648544	Identifier	xics_system_init		6648153	0					
ANR	6648545	ArgumentList	smp_cpus * kvmppc_smt_threads ( ) / smp_threads		6648153	1					
ANR	6648546	Argument	smp_cpus * kvmppc_smt_threads ( ) / smp_threads		6648153	0					
ANR	6648547	MultiplicativeExpression	smp_cpus * kvmppc_smt_threads ( ) / smp_threads		6648153	0		*			
ANR	6648548	Identifier	smp_cpus		6648153	0					
ANR	6648549	MultiplicativeExpression	kvmppc_smt_threads ( ) / smp_threads		6648153	1		/			
ANR	6648550	CallExpression	kvmppc_smt_threads ( )		6648153	0					
ANR	6648551	Callee	kvmppc_smt_threads		6648153	0					
ANR	6648552	Identifier	kvmppc_smt_threads		6648153	0					
ANR	6648553	ArgumentList			6648153	1					
ANR	6648554	Identifier	smp_threads		6648153	1					
ANR	6648555	Argument	XICS_IRQS		6648153	1					
ANR	6648556	Identifier	XICS_IRQS		6648153	0					
ANR	6648557	IfStatement	if ( cpu_model == NULL )		6648153	36					
ANR	6648558	Condition	cpu_model == NULL	179:8:3267:3283	6648153	0	True				
ANR	6648559	EqualityExpression	cpu_model == NULL		6648153	0		==			
ANR	6648560	Identifier	cpu_model		6648153	0					
ANR	6648561	Identifier	NULL		6648153	1					
ANR	6648562	CompoundStatement		177:27:3234:3234	6648153	1					
ANR	6648563	ExpressionStatement	"cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""	181:8:3297:3342	6648153	0	True				
ANR	6648564	AssignmentExpression	"cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""		6648153	0		=			
ANR	6648565	Identifier	cpu_model		6648153	0					
ANR	6648566	ConditionalExpression	"kvm_enabled ( ) ? ""host"" : ""POWER7"""		6648153	1					
ANR	6648567	Condition	kvm_enabled ( )		6648153	0					
ANR	6648568	CallExpression	kvm_enabled ( )		6648153	0					
ANR	6648569	Callee	kvm_enabled		6648153	0					
ANR	6648570	Identifier	kvm_enabled		6648153	0					
ANR	6648571	ArgumentList			6648153	1					
ANR	6648572	PrimaryExpression	"""host"""		6648153	1					
ANR	6648573	PrimaryExpression	"""POWER7"""		6648153	2					
ANR	6648574	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		6648153	37					
ANR	6648575	ForInit	i = 0 ;	185:9:3361:3366	6648153	0	True				
ANR	6648576	AssignmentExpression	i = 0		6648153	0		=			
ANR	6648577	Identifier	i		6648153	0					
ANR	6648578	PrimaryExpression	0		6648153	1					
ANR	6648579	Condition	i < smp_cpus	185:16:3368:3379	6648153	1	True				
ANR	6648580	RelationalExpression	i < smp_cpus		6648153	0		<			
ANR	6648581	Identifier	i		6648153	0					
ANR	6648582	Identifier	smp_cpus		6648153	1					
ANR	6648583	PostIncDecOperationExpression	i ++	185:30:3382:3384	6648153	2	True				
ANR	6648584	Identifier	i		6648153	0					
ANR	6648585	IncDec	++		6648153	1					
ANR	6648586	CompoundStatement		183:35:3335:3335	6648153	3					
ANR	6648587	ExpressionStatement	cpu = cpu_ppc_init ( cpu_model )	187:8:3398:3427	6648153	0	True				
ANR	6648588	AssignmentExpression	cpu = cpu_ppc_init ( cpu_model )		6648153	0		=			
ANR	6648589	Identifier	cpu		6648153	0					
ANR	6648590	CallExpression	cpu_ppc_init ( cpu_model )		6648153	1					
ANR	6648591	Callee	cpu_ppc_init		6648153	0					
ANR	6648592	Identifier	cpu_ppc_init		6648153	0					
ANR	6648593	ArgumentList	cpu_model		6648153	1					
ANR	6648594	Argument	cpu_model		6648153	0					
ANR	6648595	Identifier	cpu_model		6648153	0					
ANR	6648596	IfStatement	if ( cpu == NULL )		6648153	1					
ANR	6648597	Condition	cpu == NULL	189:12:3442:3452	6648153	0	True				
ANR	6648598	EqualityExpression	cpu == NULL		6648153	0		==			
ANR	6648599	Identifier	cpu		6648153	0					
ANR	6648600	Identifier	NULL		6648153	1					
ANR	6648601	CompoundStatement		187:25:3403:3403	6648153	1					
ANR	6648602	ExpressionStatement	"fprintf ( stderr , ""Unable to find PowerPC CPU definition\\n"" )"	191:12:3470:3528	6648153	0	True				
ANR	6648603	CallExpression	"fprintf ( stderr , ""Unable to find PowerPC CPU definition\\n"" )"		6648153	0					
ANR	6648604	Callee	fprintf		6648153	0					
ANR	6648605	Identifier	fprintf		6648153	0					
ANR	6648606	ArgumentList	stderr		6648153	1					
ANR	6648607	Argument	stderr		6648153	0					
ANR	6648608	Identifier	stderr		6648153	0					
ANR	6648609	Argument	"""Unable to find PowerPC CPU definition\\n"""		6648153	1					
ANR	6648610	PrimaryExpression	"""Unable to find PowerPC CPU definition\\n"""		6648153	0					
ANR	6648611	ExpressionStatement	exit ( 1 )	193:12:3543:3550	6648153	1	True				
ANR	6648612	CallExpression	exit ( 1 )		6648153	0					
ANR	6648613	Callee	exit		6648153	0					
ANR	6648614	Identifier	exit		6648153	0					
ANR	6648615	ArgumentList	1		6648153	1					
ANR	6648616	Argument	1		6648153	0					
ANR	6648617	PrimaryExpression	1		6648153	0					
ANR	6648618	ExpressionStatement	env = & cpu -> env	197:8:3572:3587	6648153	2	True				
ANR	6648619	AssignmentExpression	env = & cpu -> env		6648153	0		=			
ANR	6648620	Identifier	env		6648153	0					
ANR	6648621	UnaryOperationExpression	& cpu -> env		6648153	1					
ANR	6648622	UnaryOperator	&		6648153	0					
ANR	6648623	PtrMemberAccess	cpu -> env		6648153	1					
ANR	6648624	Identifier	cpu		6648153	0					
ANR	6648625	Identifier	env		6648153	1					
ANR	6648626	ExpressionStatement	"cpu_ppc_tb_init ( env , TIMEBASE_FREQ )"	203:8:3650:3685	6648153	3	True				
ANR	6648627	CallExpression	"cpu_ppc_tb_init ( env , TIMEBASE_FREQ )"		6648153	0					
ANR	6648628	Callee	cpu_ppc_tb_init		6648153	0					
ANR	6648629	Identifier	cpu_ppc_tb_init		6648153	0					
ANR	6648630	ArgumentList	env		6648153	1					
ANR	6648631	Argument	env		6648153	0					
ANR	6648632	Identifier	env		6648153	0					
ANR	6648633	Argument	TIMEBASE_FREQ		6648153	1					
ANR	6648634	Identifier	TIMEBASE_FREQ		6648153	0					
ANR	6648635	ExpressionStatement	env -> msr_mask &= ~ ( 1 << 6 )	213:8:3830:3856	6648153	4	True				
ANR	6648636	AssignmentExpression	env -> msr_mask &= ~ ( 1 << 6 )		6648153	0		&=			
ANR	6648637	PtrMemberAccess	env -> msr_mask		6648153	0					
ANR	6648638	Identifier	env		6648153	0					
ANR	6648639	Identifier	msr_mask		6648153	1					
ANR	6648640	UnaryOperationExpression	~ ( 1 << 6 )		6648153	1					
ANR	6648641	UnaryOperator	~		6648153	0					
ANR	6648642	ShiftExpression	1 << 6		6648153	1		<<			
ANR	6648643	PrimaryExpression	1		6648153	0					
ANR	6648644	PrimaryExpression	6		6648153	1					
ANR	6648645	IfStatement	if ( kvm_enabled ( ) )		6648153	5					
ANR	6648646	Condition	kvm_enabled ( )	219:12:3921:3933	6648153	0	True				
ANR	6648647	CallExpression	kvm_enabled ( )		6648153	0					
ANR	6648648	Callee	kvm_enabled		6648153	0					
ANR	6648649	Identifier	kvm_enabled		6648153	0					
ANR	6648650	ArgumentList			6648153	1					
ANR	6648651	CompoundStatement		217:27:3884:3884	6648153	1					
ANR	6648652	ExpressionStatement	kvmppc_set_papr ( cpu )	221:12:3951:3971	6648153	0	True				
ANR	6648653	CallExpression	kvmppc_set_papr ( cpu )		6648153	0					
ANR	6648654	Callee	kvmppc_set_papr		6648153	0					
ANR	6648655	Identifier	kvmppc_set_papr		6648153	0					
ANR	6648656	ArgumentList	cpu		6648153	1					
ANR	6648657	Argument	cpu		6648153	0					
ANR	6648658	Identifier	cpu		6648153	0					
ANR	6648659	IfStatement	if ( cpu -> max_compat )		6648153	6					
ANR	6648660	Condition	cpu -> max_compat	227:12:3999:4013	6648153	0	True				
ANR	6648661	PtrMemberAccess	cpu -> max_compat		6648153	0					
ANR	6648662	Identifier	cpu		6648153	0					
ANR	6648663	Identifier	max_compat		6648153	1					
ANR	6648664	CompoundStatement		225:29:3964:3964	6648153	1					
ANR	6648665	IfStatement	"if ( ppc_set_compat ( cpu , cpu -> max_compat ) < 0 )"		6648153	0					
ANR	6648666	Condition	"ppc_set_compat ( cpu , cpu -> max_compat ) < 0"	229:16:4035:4074	6648153	0	True				
ANR	6648667	RelationalExpression	"ppc_set_compat ( cpu , cpu -> max_compat ) < 0"		6648153	0		<			
ANR	6648668	CallExpression	"ppc_set_compat ( cpu , cpu -> max_compat )"		6648153	0					
ANR	6648669	Callee	ppc_set_compat		6648153	0					
ANR	6648670	Identifier	ppc_set_compat		6648153	0					
ANR	6648671	ArgumentList	cpu		6648153	1					
ANR	6648672	Argument	cpu		6648153	0					
ANR	6648673	Identifier	cpu		6648153	0					
ANR	6648674	Argument	cpu -> max_compat		6648153	1					
ANR	6648675	PtrMemberAccess	cpu -> max_compat		6648153	0					
ANR	6648676	Identifier	cpu		6648153	0					
ANR	6648677	Identifier	max_compat		6648153	1					
ANR	6648678	PrimaryExpression	0		6648153	1					
ANR	6648679	CompoundStatement		227:58:4025:4025	6648153	1					
ANR	6648680	ExpressionStatement	exit ( 1 )	231:16:4096:4103	6648153	0	True				
ANR	6648681	CallExpression	exit ( 1 )		6648153	0					
ANR	6648682	Callee	exit		6648153	0					
ANR	6648683	Identifier	exit		6648153	0					
ANR	6648684	ArgumentList	1		6648153	1					
ANR	6648685	Argument	1		6648153	0					
ANR	6648686	PrimaryExpression	1		6648153	0					
ANR	6648687	ExpressionStatement	"xics_cpu_setup ( spapr -> icp , cpu )"	239:8:4142:4173	6648153	7	True				
ANR	6648688	CallExpression	"xics_cpu_setup ( spapr -> icp , cpu )"		6648153	0					
ANR	6648689	Callee	xics_cpu_setup		6648153	0					
ANR	6648690	Identifier	xics_cpu_setup		6648153	0					
ANR	6648691	ArgumentList	spapr -> icp		6648153	1					
ANR	6648692	Argument	spapr -> icp		6648153	0					
ANR	6648693	PtrMemberAccess	spapr -> icp		6648153	0					
ANR	6648694	Identifier	spapr		6648153	0					
ANR	6648695	Identifier	icp		6648153	1					
ANR	6648696	Argument	cpu		6648153	1					
ANR	6648697	Identifier	cpu		6648153	0					
ANR	6648698	ExpressionStatement	"qemu_register_reset ( spapr_cpu_reset , cpu )"	243:8:4186:4227	6648153	8	True				
ANR	6648699	CallExpression	"qemu_register_reset ( spapr_cpu_reset , cpu )"		6648153	0					
ANR	6648700	Callee	qemu_register_reset		6648153	0					
ANR	6648701	Identifier	qemu_register_reset		6648153	0					
ANR	6648702	ArgumentList	spapr_cpu_reset		6648153	1					
ANR	6648703	Argument	spapr_cpu_reset		6648153	0					
ANR	6648704	Identifier	spapr_cpu_reset		6648153	0					
ANR	6648705	Argument	cpu		6648153	1					
ANR	6648706	Identifier	cpu		6648153	0					
ANR	6648707	ExpressionStatement	spapr -> ram_limit = ram_size	251:4:4267:4294	6648153	38	True				
ANR	6648708	AssignmentExpression	spapr -> ram_limit = ram_size		6648153	0		=			
ANR	6648709	PtrMemberAccess	spapr -> ram_limit		6648153	0					
ANR	6648710	Identifier	spapr		6648153	0					
ANR	6648711	Identifier	ram_limit		6648153	1					
ANR	6648712	Identifier	ram_size		6648153	1					
ANR	6648713	ExpressionStatement	"memory_region_allocate_system_memory ( ram , NULL , ""ppc_spapr.ram"" , spapr -> ram_limit )"	253:4:4301:4425	6648153	39	True				
ANR	6648714	CallExpression	"memory_region_allocate_system_memory ( ram , NULL , ""ppc_spapr.ram"" , spapr -> ram_limit )"		6648153	0					
ANR	6648715	Callee	memory_region_allocate_system_memory		6648153	0					
ANR	6648716	Identifier	memory_region_allocate_system_memory		6648153	0					
ANR	6648717	ArgumentList	ram		6648153	1					
ANR	6648718	Argument	ram		6648153	0					
ANR	6648719	Identifier	ram		6648153	0					
ANR	6648720	Argument	NULL		6648153	1					
ANR	6648721	Identifier	NULL		6648153	0					
ANR	6648722	Argument	"""ppc_spapr.ram"""		6648153	2					
ANR	6648723	PrimaryExpression	"""ppc_spapr.ram"""		6648153	0					
ANR	6648724	Argument	spapr -> ram_limit		6648153	3					
ANR	6648725	PtrMemberAccess	spapr -> ram_limit		6648153	0					
ANR	6648726	Identifier	spapr		6648153	0					
ANR	6648727	Identifier	ram_limit		6648153	1					
ANR	6648728	ExpressionStatement	"memory_region_add_subregion ( sysmem , 0 , ram )"	257:4:4432:4475	6648153	40	True				
ANR	6648729	CallExpression	"memory_region_add_subregion ( sysmem , 0 , ram )"		6648153	0					
ANR	6648730	Callee	memory_region_add_subregion		6648153	0					
ANR	6648731	Identifier	memory_region_add_subregion		6648153	0					
ANR	6648732	ArgumentList	sysmem		6648153	1					
ANR	6648733	Argument	sysmem		6648153	0					
ANR	6648734	Identifier	sysmem		6648153	0					
ANR	6648735	Argument	0		6648153	1					
ANR	6648736	PrimaryExpression	0		6648153	0					
ANR	6648737	Argument	ram		6648153	2					
ANR	6648738	Identifier	ram		6648153	0					
ANR	6648739	IfStatement	if ( rma_alloc_size && rma )		6648153	41					
ANR	6648740	Condition	rma_alloc_size && rma	261:8:4488:4508	6648153	0	True				
ANR	6648741	AndExpression	rma_alloc_size && rma		6648153	0		&&			
ANR	6648742	Identifier	rma_alloc_size		6648153	0					
ANR	6648743	Identifier	rma		6648153	1					
ANR	6648744	CompoundStatement		259:31:4459:4459	6648153	1					
ANR	6648745	ExpressionStatement	"rma_region = g_new ( MemoryRegion , 1 )"	263:8:4522:4557	6648153	0	True				
ANR	6648746	AssignmentExpression	"rma_region = g_new ( MemoryRegion , 1 )"		6648153	0		=			
ANR	6648747	Identifier	rma_region		6648153	0					
ANR	6648748	CallExpression	"g_new ( MemoryRegion , 1 )"		6648153	1					
ANR	6648749	Callee	g_new		6648153	0					
ANR	6648750	Identifier	g_new		6648153	0					
ANR	6648751	ArgumentList	MemoryRegion		6648153	1					
ANR	6648752	Argument	MemoryRegion		6648153	0					
ANR	6648753	Identifier	MemoryRegion		6648153	0					
ANR	6648754	Argument	1		6648153	1					
ANR	6648755	PrimaryExpression	1		6648153	0					
ANR	6648756	ExpressionStatement	"memory_region_init_ram_ptr ( rma_region , NULL , ""ppc_spapr.rma"" , rma_alloc_size , rma )"	265:8:4568:4686	6648153	1	True				
ANR	6648757	CallExpression	"memory_region_init_ram_ptr ( rma_region , NULL , ""ppc_spapr.rma"" , rma_alloc_size , rma )"		6648153	0					
ANR	6648758	Callee	memory_region_init_ram_ptr		6648153	0					
ANR	6648759	Identifier	memory_region_init_ram_ptr		6648153	0					
ANR	6648760	ArgumentList	rma_region		6648153	1					
ANR	6648761	Argument	rma_region		6648153	0					
ANR	6648762	Identifier	rma_region		6648153	0					
ANR	6648763	Argument	NULL		6648153	1					
ANR	6648764	Identifier	NULL		6648153	0					
ANR	6648765	Argument	"""ppc_spapr.rma"""		6648153	2					
ANR	6648766	PrimaryExpression	"""ppc_spapr.rma"""		6648153	0					
ANR	6648767	Argument	rma_alloc_size		6648153	3					
ANR	6648768	Identifier	rma_alloc_size		6648153	0					
ANR	6648769	Argument	rma		6648153	4					
ANR	6648770	Identifier	rma		6648153	0					
ANR	6648771	ExpressionStatement	vmstate_register_ram_global ( rma_region )	269:8:4697:4736	6648153	2	True				
ANR	6648772	CallExpression	vmstate_register_ram_global ( rma_region )		6648153	0					
ANR	6648773	Callee	vmstate_register_ram_global		6648153	0					
ANR	6648774	Identifier	vmstate_register_ram_global		6648153	0					
ANR	6648775	ArgumentList	rma_region		6648153	1					
ANR	6648776	Argument	rma_region		6648153	0					
ANR	6648777	Identifier	rma_region		6648153	0					
ANR	6648778	ExpressionStatement	"memory_region_add_subregion ( sysmem , 0 , rma_region )"	271:8:4747:4797	6648153	3	True				
ANR	6648779	CallExpression	"memory_region_add_subregion ( sysmem , 0 , rma_region )"		6648153	0					
ANR	6648780	Callee	memory_region_add_subregion		6648153	0					
ANR	6648781	Identifier	memory_region_add_subregion		6648153	0					
ANR	6648782	ArgumentList	sysmem		6648153	1					
ANR	6648783	Argument	sysmem		6648153	0					
ANR	6648784	Identifier	sysmem		6648153	0					
ANR	6648785	Argument	0		6648153	1					
ANR	6648786	PrimaryExpression	0		6648153	0					
ANR	6648787	Argument	rma_region		6648153	2					
ANR	6648788	Identifier	rma_region		6648153	0					
ANR	6648789	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"	277:4:4813:4877	6648153	42	True				
ANR	6648790	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6648153	0		=			
ANR	6648791	Identifier	filename		6648153	0					
ANR	6648792	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6648153	1					
ANR	6648793	Callee	qemu_find_file		6648153	0					
ANR	6648794	Identifier	qemu_find_file		6648153	0					
ANR	6648795	ArgumentList	QEMU_FILE_TYPE_BIOS		6648153	1					
ANR	6648796	Argument	QEMU_FILE_TYPE_BIOS		6648153	0					
ANR	6648797	Identifier	QEMU_FILE_TYPE_BIOS		6648153	0					
ANR	6648798	Argument	"""spapr-rtas.bin"""		6648153	1					
ANR	6648799	PrimaryExpression	"""spapr-rtas.bin"""		6648153	0					
ANR	6648800	ExpressionStatement	"spapr -> rtas_size = load_image_targphys ( filename , spapr -> rtas_addr , rtas_limit - spapr -> rtas_addr )"	279:4:4884:5025	6648153	43	True				
ANR	6648801	AssignmentExpression	"spapr -> rtas_size = load_image_targphys ( filename , spapr -> rtas_addr , rtas_limit - spapr -> rtas_addr )"		6648153	0		=			
ANR	6648802	PtrMemberAccess	spapr -> rtas_size		6648153	0					
ANR	6648803	Identifier	spapr		6648153	0					
ANR	6648804	Identifier	rtas_size		6648153	1					
ANR	6648805	CallExpression	"load_image_targphys ( filename , spapr -> rtas_addr , rtas_limit - spapr -> rtas_addr )"		6648153	1					
ANR	6648806	Callee	load_image_targphys		6648153	0					
ANR	6648807	Identifier	load_image_targphys		6648153	0					
ANR	6648808	ArgumentList	filename		6648153	1					
ANR	6648809	Argument	filename		6648153	0					
ANR	6648810	Identifier	filename		6648153	0					
ANR	6648811	Argument	spapr -> rtas_addr		6648153	1					
ANR	6648812	PtrMemberAccess	spapr -> rtas_addr		6648153	0					
ANR	6648813	Identifier	spapr		6648153	0					
ANR	6648814	Identifier	rtas_addr		6648153	1					
ANR	6648815	Argument	rtas_limit - spapr -> rtas_addr		6648153	2					
ANR	6648816	AdditiveExpression	rtas_limit - spapr -> rtas_addr		6648153	0		-			
ANR	6648817	Identifier	rtas_limit		6648153	0					
ANR	6648818	PtrMemberAccess	spapr -> rtas_addr		6648153	1					
ANR	6648819	Identifier	spapr		6648153	0					
ANR	6648820	Identifier	rtas_addr		6648153	1					
ANR	6648821	IfStatement	if ( spapr -> rtas_size < 0 )		6648153	44					
ANR	6648822	Condition	spapr -> rtas_size < 0	283:8:5036:5055	6648153	0	True				
ANR	6648823	RelationalExpression	spapr -> rtas_size < 0		6648153	0		<			
ANR	6648824	PtrMemberAccess	spapr -> rtas_size		6648153	0					
ANR	6648825	Identifier	spapr		6648153	0					
ANR	6648826	Identifier	rtas_size		6648153	1					
ANR	6648827	PrimaryExpression	0		6648153	1					
ANR	6648828	CompoundStatement		281:30:5006:5006	6648153	1					
ANR	6648829	ExpressionStatement	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"	285:8:5069:5128	6648153	0	True				
ANR	6648830	CallExpression	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"		6648153	0					
ANR	6648831	Callee	hw_error		6648153	0					
ANR	6648832	Identifier	hw_error		6648153	0					
ANR	6648833	ArgumentList	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	1					
ANR	6648834	Argument	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	0					
ANR	6648835	PrimaryExpression	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	0					
ANR	6648836	Argument	filename		6648153	1					
ANR	6648837	Identifier	filename		6648153	0					
ANR	6648838	ExpressionStatement	exit ( 1 )	287:8:5139:5146	6648153	1	True				
ANR	6648839	CallExpression	exit ( 1 )		6648153	0					
ANR	6648840	Callee	exit		6648153	0					
ANR	6648841	Identifier	exit		6648153	0					
ANR	6648842	ArgumentList	1		6648153	1					
ANR	6648843	Argument	1		6648153	0					
ANR	6648844	PrimaryExpression	1		6648153	0					
ANR	6648845	IfStatement	if ( spapr -> rtas_size > RTAS_MAX_SIZE )		6648153	45					
ANR	6648846	Condition	spapr -> rtas_size > RTAS_MAX_SIZE	291:8:5164:5195	6648153	0	True				
ANR	6648847	RelationalExpression	spapr -> rtas_size > RTAS_MAX_SIZE		6648153	0		>			
ANR	6648848	PtrMemberAccess	spapr -> rtas_size		6648153	0					
ANR	6648849	Identifier	spapr		6648153	0					
ANR	6648850	Identifier	rtas_size		6648153	1					
ANR	6648851	Identifier	RTAS_MAX_SIZE		6648153	1					
ANR	6648852	CompoundStatement		289:42:5146:5146	6648153	1					
ANR	6648853	ExpressionStatement	"hw_error ( ""RTAS too big ! 0x%lx bytes (max is 0x%x)\\n"" , spapr -> rtas_size , RTAS_MAX_SIZE )"	293:8:5209:5314	6648153	0	True				
ANR	6648854	CallExpression	"hw_error ( ""RTAS too big ! 0x%lx bytes (max is 0x%x)\\n"" , spapr -> rtas_size , RTAS_MAX_SIZE )"		6648153	0					
ANR	6648855	Callee	hw_error		6648153	0					
ANR	6648856	Identifier	hw_error		6648153	0					
ANR	6648857	ArgumentList	"""RTAS too big ! 0x%lx bytes (max is 0x%x)\\n"""		6648153	1					
ANR	6648858	Argument	"""RTAS too big ! 0x%lx bytes (max is 0x%x)\\n"""		6648153	0					
ANR	6648859	PrimaryExpression	"""RTAS too big ! 0x%lx bytes (max is 0x%x)\\n"""		6648153	0					
ANR	6648860	Argument	spapr -> rtas_size		6648153	1					
ANR	6648861	PtrMemberAccess	spapr -> rtas_size		6648153	0					
ANR	6648862	Identifier	spapr		6648153	0					
ANR	6648863	Identifier	rtas_size		6648153	1					
ANR	6648864	Argument	RTAS_MAX_SIZE		6648153	2					
ANR	6648865	Identifier	RTAS_MAX_SIZE		6648153	0					
ANR	6648866	ExpressionStatement	exit ( 1 )	297:8:5325:5332	6648153	1	True				
ANR	6648867	CallExpression	exit ( 1 )		6648153	0					
ANR	6648868	Callee	exit		6648153	0					
ANR	6648869	Identifier	exit		6648153	0					
ANR	6648870	ArgumentList	1		6648153	1					
ANR	6648871	Argument	1		6648153	0					
ANR	6648872	PrimaryExpression	1		6648153	0					
ANR	6648873	ExpressionStatement	g_free ( filename )	301:4:5346:5362	6648153	46	True				
ANR	6648874	CallExpression	g_free ( filename )		6648153	0					
ANR	6648875	Callee	g_free		6648153	0					
ANR	6648876	Identifier	g_free		6648153	0					
ANR	6648877	ArgumentList	filename		6648153	1					
ANR	6648878	Argument	filename		6648153	0					
ANR	6648879	Identifier	filename		6648153	0					
ANR	6648880	ExpressionStatement	spapr_events_init ( spapr )	307:4:5416:5440	6648153	47	True				
ANR	6648881	CallExpression	spapr_events_init ( spapr )		6648153	0					
ANR	6648882	Callee	spapr_events_init		6648153	0					
ANR	6648883	Identifier	spapr_events_init		6648153	0					
ANR	6648884	ArgumentList	spapr		6648153	1					
ANR	6648885	Argument	spapr		6648153	0					
ANR	6648886	Identifier	spapr		6648153	0					
ANR	6648887	ExpressionStatement	spapr -> vio_bus = spapr_vio_bus_init ( )	313:4:5475:5512	6648153	48	True				
ANR	6648888	AssignmentExpression	spapr -> vio_bus = spapr_vio_bus_init ( )		6648153	0		=			
ANR	6648889	PtrMemberAccess	spapr -> vio_bus		6648153	0					
ANR	6648890	Identifier	spapr		6648153	0					
ANR	6648891	Identifier	vio_bus		6648153	1					
ANR	6648892	CallExpression	spapr_vio_bus_init ( )		6648153	1					
ANR	6648893	Callee	spapr_vio_bus_init		6648153	0					
ANR	6648894	Identifier	spapr_vio_bus_init		6648153	0					
ANR	6648895	ArgumentList			6648153	1					
ANR	6648896	ForStatement	for ( i = 0 ; i < MAX_SERIAL_PORTS ; i ++ )		6648153	49					
ANR	6648897	ForInit	i = 0 ;	317:9:5526:5531	6648153	0	True				
ANR	6648898	AssignmentExpression	i = 0		6648153	0		=			
ANR	6648899	Identifier	i		6648153	0					
ANR	6648900	PrimaryExpression	0		6648153	1					
ANR	6648901	Condition	i < MAX_SERIAL_PORTS	317:16:5533:5552	6648153	1	True				
ANR	6648902	RelationalExpression	i < MAX_SERIAL_PORTS		6648153	0		<			
ANR	6648903	Identifier	i		6648153	0					
ANR	6648904	Identifier	MAX_SERIAL_PORTS		6648153	1					
ANR	6648905	PostIncDecOperationExpression	i ++	317:38:5555:5557	6648153	2	True				
ANR	6648906	Identifier	i		6648153	0					
ANR	6648907	IncDec	++		6648153	1					
ANR	6648908	CompoundStatement		315:43:5508:5508	6648153	3					
ANR	6648909	IfStatement	if ( serial_hds [ i ] )		6648153	0					
ANR	6648910	Condition	serial_hds [ i ]	319:12:5575:5587	6648153	0	True				
ANR	6648911	ArrayIndexing	serial_hds [ i ]		6648153	0					
ANR	6648912	Identifier	serial_hds		6648153	0					
ANR	6648913	Identifier	i		6648153	1					
ANR	6648914	CompoundStatement		317:27:5538:5538	6648153	1					
ANR	6648915	ExpressionStatement	"spapr_vty_create ( spapr -> vio_bus , serial_hds [ i ] )"	321:12:5605:5652	6648153	0	True				
ANR	6648916	CallExpression	"spapr_vty_create ( spapr -> vio_bus , serial_hds [ i ] )"		6648153	0					
ANR	6648917	Callee	spapr_vty_create		6648153	0					
ANR	6648918	Identifier	spapr_vty_create		6648153	0					
ANR	6648919	ArgumentList	spapr -> vio_bus		6648153	1					
ANR	6648920	Argument	spapr -> vio_bus		6648153	0					
ANR	6648921	PtrMemberAccess	spapr -> vio_bus		6648153	0					
ANR	6648922	Identifier	spapr		6648153	0					
ANR	6648923	Identifier	vio_bus		6648153	1					
ANR	6648924	Argument	serial_hds [ i ]		6648153	1					
ANR	6648925	ArrayIndexing	serial_hds [ i ]		6648153	0					
ANR	6648926	Identifier	serial_hds		6648153	0					
ANR	6648927	Identifier	i		6648153	1					
ANR	6648928	ExpressionStatement	spapr_create_nvram ( spapr )	331:4:5738:5763	6648153	50	True				
ANR	6648929	CallExpression	spapr_create_nvram ( spapr )		6648153	0					
ANR	6648930	Callee	spapr_create_nvram		6648153	0					
ANR	6648931	Identifier	spapr_create_nvram		6648153	0					
ANR	6648932	ArgumentList	spapr		6648153	1					
ANR	6648933	Argument	spapr		6648153	0					
ANR	6648934	Identifier	spapr		6648153	0					
ANR	6648935	ExpressionStatement	"spapr_pci_msi_init ( spapr , SPAPR_PCI_MSI_WINDOW )"	337:4:5794:5841	6648153	51	True				
ANR	6648936	CallExpression	"spapr_pci_msi_init ( spapr , SPAPR_PCI_MSI_WINDOW )"		6648153	0					
ANR	6648937	Callee	spapr_pci_msi_init		6648153	0					
ANR	6648938	Identifier	spapr_pci_msi_init		6648153	0					
ANR	6648939	ArgumentList	spapr		6648153	1					
ANR	6648940	Argument	spapr		6648153	0					
ANR	6648941	Identifier	spapr		6648153	0					
ANR	6648942	Argument	SPAPR_PCI_MSI_WINDOW		6648153	1					
ANR	6648943	Identifier	SPAPR_PCI_MSI_WINDOW		6648153	0					
ANR	6648944	ExpressionStatement	spapr_pci_rtas_init ( )	339:4:5848:5869	6648153	52	True				
ANR	6648945	CallExpression	spapr_pci_rtas_init ( )		6648153	0					
ANR	6648946	Callee	spapr_pci_rtas_init		6648153	0					
ANR	6648947	Identifier	spapr_pci_rtas_init		6648153	0					
ANR	6648948	ArgumentList			6648153	1					
ANR	6648949	ExpressionStatement	"phb = spapr_create_phb ( spapr , 0 )"	343:4:5878:5910	6648153	53	True				
ANR	6648950	AssignmentExpression	"phb = spapr_create_phb ( spapr , 0 )"		6648153	0		=			
ANR	6648951	Identifier	phb		6648153	0					
ANR	6648952	CallExpression	"spapr_create_phb ( spapr , 0 )"		6648153	1					
ANR	6648953	Callee	spapr_create_phb		6648153	0					
ANR	6648954	Identifier	spapr_create_phb		6648153	0					
ANR	6648955	ArgumentList	spapr		6648153	1					
ANR	6648956	Argument	spapr		6648153	0					
ANR	6648957	Identifier	spapr		6648153	0					
ANR	6648958	Argument	0		6648153	1					
ANR	6648959	PrimaryExpression	0		6648153	0					
ANR	6648960	ForStatement	for ( i = 0 ; i < nb_nics ; i ++ )		6648153	54					
ANR	6648961	ForInit	i = 0 ;	347:9:5924:5929	6648153	0	True				
ANR	6648962	AssignmentExpression	i = 0		6648153	0		=			
ANR	6648963	Identifier	i		6648153	0					
ANR	6648964	PrimaryExpression	0		6648153	1					
ANR	6648965	Condition	i < nb_nics	347:16:5931:5941	6648153	1	True				
ANR	6648966	RelationalExpression	i < nb_nics		6648153	0		<			
ANR	6648967	Identifier	i		6648153	0					
ANR	6648968	Identifier	nb_nics		6648153	1					
ANR	6648969	PostIncDecOperationExpression	i ++	347:29:5944:5946	6648153	2	True				
ANR	6648970	Identifier	i		6648153	0					
ANR	6648971	IncDec	++		6648153	1					
ANR	6648972	CompoundStatement		347:8:5908:5934	6648153	3					
ANR	6648973	IdentifierDeclStatement	NICInfo * nd = & nd_table [ i ] ;	349:8:5960:5986	6648153	0	True				
ANR	6648974	IdentifierDecl	* nd = & nd_table [ i ]		6648153	0					
ANR	6648975	IdentifierDeclType	NICInfo *		6648153	0					
ANR	6648976	Identifier	nd		6648153	1					
ANR	6648977	AssignmentExpression	* nd = & nd_table [ i ]		6648153	2		=			
ANR	6648978	Identifier	nd		6648153	0					
ANR	6648979	UnaryOperationExpression	& nd_table [ i ]		6648153	1					
ANR	6648980	UnaryOperator	&		6648153	0					
ANR	6648981	ArrayIndexing	nd_table [ i ]		6648153	1					
ANR	6648982	Identifier	nd_table		6648153	0					
ANR	6648983	Identifier	i		6648153	1					
ANR	6648984	IfStatement	if ( ! nd -> model )		6648153	1					
ANR	6648985	Condition	! nd -> model	353:12:6003:6012	6648153	0	True				
ANR	6648986	UnaryOperationExpression	! nd -> model		6648153	0					
ANR	6648987	UnaryOperator	!		6648153	0					
ANR	6648988	PtrMemberAccess	nd -> model		6648153	1					
ANR	6648989	Identifier	nd		6648153	0					
ANR	6648990	Identifier	model		6648153	1					
ANR	6648991	CompoundStatement		351:24:5963:5963	6648153	1					
ANR	6648992	ExpressionStatement	"nd -> model = g_strdup ( ""ibmveth"" )"	355:12:6030:6061	6648153	0	True				
ANR	6648993	AssignmentExpression	"nd -> model = g_strdup ( ""ibmveth"" )"		6648153	0		=			
ANR	6648994	PtrMemberAccess	nd -> model		6648153	0					
ANR	6648995	Identifier	nd		6648153	0					
ANR	6648996	Identifier	model		6648153	1					
ANR	6648997	CallExpression	"g_strdup ( ""ibmveth"" )"		6648153	1					
ANR	6648998	Callee	g_strdup		6648153	0					
ANR	6648999	Identifier	g_strdup		6648153	0					
ANR	6649000	ArgumentList	"""ibmveth"""		6648153	1					
ANR	6649001	Argument	"""ibmveth"""		6648153	0					
ANR	6649002	PrimaryExpression	"""ibmveth"""		6648153	0					
ANR	6649003	IfStatement	"if ( strcmp ( nd -> model , ""ibmveth"" ) == 0 )"		6648153	2					
ANR	6649004	Condition	"strcmp ( nd -> model , ""ibmveth"" ) == 0"	361:12:6089:6121	6648153	0	True				
ANR	6649005	EqualityExpression	"strcmp ( nd -> model , ""ibmveth"" ) == 0"		6648153	0		==			
ANR	6649006	CallExpression	"strcmp ( nd -> model , ""ibmveth"" )"		6648153	0					
ANR	6649007	Callee	strcmp		6648153	0					
ANR	6649008	Identifier	strcmp		6648153	0					
ANR	6649009	ArgumentList	nd -> model		6648153	1					
ANR	6649010	Argument	nd -> model		6648153	0					
ANR	6649011	PtrMemberAccess	nd -> model		6648153	0					
ANR	6649012	Identifier	nd		6648153	0					
ANR	6649013	Identifier	model		6648153	1					
ANR	6649014	Argument	"""ibmveth"""		6648153	1					
ANR	6649015	PrimaryExpression	"""ibmveth"""		6648153	0					
ANR	6649016	PrimaryExpression	0		6648153	1					
ANR	6649017	CompoundStatement		359:47:6072:6072	6648153	1					
ANR	6649018	ExpressionStatement	"spapr_vlan_create ( spapr -> vio_bus , nd )"	363:12:6139:6176	6648153	0	True				
ANR	6649019	CallExpression	"spapr_vlan_create ( spapr -> vio_bus , nd )"		6648153	0					
ANR	6649020	Callee	spapr_vlan_create		6648153	0					
ANR	6649021	Identifier	spapr_vlan_create		6648153	0					
ANR	6649022	ArgumentList	spapr -> vio_bus		6648153	1					
ANR	6649023	Argument	spapr -> vio_bus		6648153	0					
ANR	6649024	PtrMemberAccess	spapr -> vio_bus		6648153	0					
ANR	6649025	Identifier	spapr		6648153	0					
ANR	6649026	Identifier	vio_bus		6648153	1					
ANR	6649027	Argument	nd		6648153	1					
ANR	6649028	Identifier	nd		6648153	0					
ANR	6649029	ElseStatement	else		6648153	0					
ANR	6649030	CompoundStatement		363:15:6142:6142	6648153	0					
ANR	6649031	ExpressionStatement	"pci_nic_init_nofail ( & nd_table [ i ] , phb -> bus , nd -> model , NULL )"	367:12:6209:6269	6648153	0	True				
ANR	6649032	CallExpression	"pci_nic_init_nofail ( & nd_table [ i ] , phb -> bus , nd -> model , NULL )"		6648153	0					
ANR	6649033	Callee	pci_nic_init_nofail		6648153	0					
ANR	6649034	Identifier	pci_nic_init_nofail		6648153	0					
ANR	6649035	ArgumentList	& nd_table [ i ]		6648153	1					
ANR	6649036	Argument	& nd_table [ i ]		6648153	0					
ANR	6649037	UnaryOperationExpression	& nd_table [ i ]		6648153	0					
ANR	6649038	UnaryOperator	&		6648153	0					
ANR	6649039	ArrayIndexing	nd_table [ i ]		6648153	1					
ANR	6649040	Identifier	nd_table		6648153	0					
ANR	6649041	Identifier	i		6648153	1					
ANR	6649042	Argument	phb -> bus		6648153	1					
ANR	6649043	PtrMemberAccess	phb -> bus		6648153	0					
ANR	6649044	Identifier	phb		6648153	0					
ANR	6649045	Identifier	bus		6648153	1					
ANR	6649046	Argument	nd -> model		6648153	2					
ANR	6649047	PtrMemberAccess	nd -> model		6648153	0					
ANR	6649048	Identifier	nd		6648153	0					
ANR	6649049	Identifier	model		6648153	1					
ANR	6649050	Argument	NULL		6648153	3					
ANR	6649051	Identifier	NULL		6648153	0					
ANR	6649052	ForStatement	for ( i = 0 ; i <= drive_get_max_bus ( IF_SCSI ) ; i ++ )		6648153	55					
ANR	6649053	ForInit	i = 0 ;	375:9:6301:6306	6648153	0	True				
ANR	6649054	AssignmentExpression	i = 0		6648153	0		=			
ANR	6649055	Identifier	i		6648153	0					
ANR	6649056	PrimaryExpression	0		6648153	1					
ANR	6649057	Condition	i <= drive_get_max_bus ( IF_SCSI )	375:16:6308:6338	6648153	1	True				
ANR	6649058	RelationalExpression	i <= drive_get_max_bus ( IF_SCSI )		6648153	0		<=			
ANR	6649059	Identifier	i		6648153	0					
ANR	6649060	CallExpression	drive_get_max_bus ( IF_SCSI )		6648153	1					
ANR	6649061	Callee	drive_get_max_bus		6648153	0					
ANR	6649062	Identifier	drive_get_max_bus		6648153	0					
ANR	6649063	ArgumentList	IF_SCSI		6648153	1					
ANR	6649064	Argument	IF_SCSI		6648153	0					
ANR	6649065	Identifier	IF_SCSI		6648153	0					
ANR	6649066	PostIncDecOperationExpression	i ++	375:49:6341:6343	6648153	2	True				
ANR	6649067	Identifier	i		6648153	0					
ANR	6649068	IncDec	++		6648153	1					
ANR	6649069	CompoundStatement		373:54:6294:6294	6648153	3					
ANR	6649070	ExpressionStatement	spapr_vscsi_create ( spapr -> vio_bus )	377:8:6357:6391	6648153	0	True				
ANR	6649071	CallExpression	spapr_vscsi_create ( spapr -> vio_bus )		6648153	0					
ANR	6649072	Callee	spapr_vscsi_create		6648153	0					
ANR	6649073	Identifier	spapr_vscsi_create		6648153	0					
ANR	6649074	ArgumentList	spapr -> vio_bus		6648153	1					
ANR	6649075	Argument	spapr -> vio_bus		6648153	0					
ANR	6649076	PtrMemberAccess	spapr -> vio_bus		6648153	0					
ANR	6649077	Identifier	spapr		6648153	0					
ANR	6649078	Identifier	vio_bus		6648153	1					
ANR	6649079	IfStatement	if ( spapr_vga_init ( phb -> bus ) )		6648153	56					
ANR	6649080	Condition	spapr_vga_init ( phb -> bus )	385:8:6431:6454	6648153	0	True				
ANR	6649081	CallExpression	spapr_vga_init ( phb -> bus )		6648153	0					
ANR	6649082	Callee	spapr_vga_init		6648153	0					
ANR	6649083	Identifier	spapr_vga_init		6648153	0					
ANR	6649084	ArgumentList	phb -> bus		6648153	1					
ANR	6649085	Argument	phb -> bus		6648153	0					
ANR	6649086	PtrMemberAccess	phb -> bus		6648153	0					
ANR	6649087	Identifier	phb		6648153	0					
ANR	6649088	Identifier	bus		6648153	1					
ANR	6649089	CompoundStatement		383:34:6405:6405	6648153	1					
ANR	6649090	ExpressionStatement	spapr -> has_graphics = true	387:8:6468:6494	6648153	0	True				
ANR	6649091	AssignmentExpression	spapr -> has_graphics = true		6648153	0		=			
ANR	6649092	PtrMemberAccess	spapr -> has_graphics		6648153	0					
ANR	6649093	Identifier	spapr		6648153	0					
ANR	6649094	Identifier	has_graphics		6648153	1					
ANR	6649095	Identifier	true		6648153	1					
ANR	6649096	IfStatement	if ( usb_enabled ( spapr -> has_graphics ) )		6648153	57					
ANR	6649097	Condition	usb_enabled ( spapr -> has_graphics )	393:8:6514:6545	6648153	0	True				
ANR	6649098	CallExpression	usb_enabled ( spapr -> has_graphics )		6648153	0					
ANR	6649099	Callee	usb_enabled		6648153	0					
ANR	6649100	Identifier	usb_enabled		6648153	0					
ANR	6649101	ArgumentList	spapr -> has_graphics		6648153	1					
ANR	6649102	Argument	spapr -> has_graphics		6648153	0					
ANR	6649103	PtrMemberAccess	spapr -> has_graphics		6648153	0					
ANR	6649104	Identifier	spapr		6648153	0					
ANR	6649105	Identifier	has_graphics		6648153	1					
ANR	6649106	CompoundStatement		391:42:6496:6496	6648153	1					
ANR	6649107	ExpressionStatement	"pci_create_simple ( phb -> bus , - 1 , ""pci-ohci"" )"	395:8:6559:6602	6648153	0	True				
ANR	6649108	CallExpression	"pci_create_simple ( phb -> bus , - 1 , ""pci-ohci"" )"		6648153	0					
ANR	6649109	Callee	pci_create_simple		6648153	0					
ANR	6649110	Identifier	pci_create_simple		6648153	0					
ANR	6649111	ArgumentList	phb -> bus		6648153	1					
ANR	6649112	Argument	phb -> bus		6648153	0					
ANR	6649113	PtrMemberAccess	phb -> bus		6648153	0					
ANR	6649114	Identifier	phb		6648153	0					
ANR	6649115	Identifier	bus		6648153	1					
ANR	6649116	Argument	- 1		6648153	1					
ANR	6649117	UnaryOperationExpression	- 1		6648153	0					
ANR	6649118	UnaryOperator	-		6648153	0					
ANR	6649119	PrimaryExpression	1		6648153	1					
ANR	6649120	Argument	"""pci-ohci"""		6648153	2					
ANR	6649121	PrimaryExpression	"""pci-ohci"""		6648153	0					
ANR	6649122	IfStatement	if ( spapr -> has_graphics )		6648153	1					
ANR	6649123	Condition	spapr -> has_graphics	397:12:6617:6635	6648153	0	True				
ANR	6649124	PtrMemberAccess	spapr -> has_graphics		6648153	0					
ANR	6649125	Identifier	spapr		6648153	0					
ANR	6649126	Identifier	has_graphics		6648153	1					
ANR	6649127	CompoundStatement		395:33:6586:6586	6648153	1					
ANR	6649128	ExpressionStatement	"usbdevice_create ( ""keyboard"" )"	399:12:6653:6681	6648153	0	True				
ANR	6649129	CallExpression	"usbdevice_create ( ""keyboard"" )"		6648153	0					
ANR	6649130	Callee	usbdevice_create		6648153	0					
ANR	6649131	Identifier	usbdevice_create		6648153	0					
ANR	6649132	ArgumentList	"""keyboard"""		6648153	1					
ANR	6649133	Argument	"""keyboard"""		6648153	0					
ANR	6649134	PrimaryExpression	"""keyboard"""		6648153	0					
ANR	6649135	ExpressionStatement	"usbdevice_create ( ""mouse"" )"	401:12:6696:6721	6648153	1	True				
ANR	6649136	CallExpression	"usbdevice_create ( ""mouse"" )"		6648153	0					
ANR	6649137	Callee	usbdevice_create		6648153	0					
ANR	6649138	Identifier	usbdevice_create		6648153	0					
ANR	6649139	ArgumentList	"""mouse"""		6648153	1					
ANR	6649140	Argument	"""mouse"""		6648153	0					
ANR	6649141	PrimaryExpression	"""mouse"""		6648153	0					
ANR	6649142	IfStatement	if ( spapr -> rma_size < ( MIN_RMA_SLOF << 20 ) )		6648153	58					
ANR	6649143	Condition	spapr -> rma_size < ( MIN_RMA_SLOF << 20 )	409:8:6752:6789	6648153	0	True				
ANR	6649144	RelationalExpression	spapr -> rma_size < ( MIN_RMA_SLOF << 20 )		6648153	0		<			
ANR	6649145	PtrMemberAccess	spapr -> rma_size		6648153	0					
ANR	6649146	Identifier	spapr		6648153	0					
ANR	6649147	Identifier	rma_size		6648153	1					
ANR	6649148	ShiftExpression	MIN_RMA_SLOF << 20		6648153	1		<<			
ANR	6649149	Identifier	MIN_RMA_SLOF		6648153	0					
ANR	6649150	PrimaryExpression	20		6648153	1					
ANR	6649151	CompoundStatement		407:48:6740:6740	6648153	1					
ANR	6649152	Statement	fprintf	411:8:6803:6809	6648153	0	True				
ANR	6649153	Statement	(	411:15:6810:6810	6648153	1	True				
ANR	6649154	Statement	stderr	411:16:6811:6816	6648153	2	True				
ANR	6649155	Statement	","	411:22:6817:6817	6648153	3	True				
ANR	6649156	Statement	"""qemu: pSeries SLOF firmware requires >= """	411:24:6819:6860	6648153	4	True				
ANR	6649157	Statement	"""%ldM guest RMA (Real Mode Area memory)\\n"""	413:16:6879:6920	6648153	5	True				
ANR	6649158	Statement	","	413:58:6921:6921	6648153	6	True				
ANR	6649159	Statement	MIN_RMA_SLOF	413:60:6923:6934	6648153	7	True				
ANR	6649160	Statement	)	413:72:6935:6935	6648153	8	True				
ANR	6649161	ExpressionStatement		413:73:6936:6936	6648153	9	True				
ANR	6649162	ExpressionStatement	exit ( 1 )	415:8:6947:6954	6648153	10	True				
ANR	6649163	CallExpression	exit ( 1 )		6648153	0					
ANR	6649164	Callee	exit		6648153	0					
ANR	6649165	Identifier	exit		6648153	0					
ANR	6649166	ArgumentList	1		6648153	1					
ANR	6649167	Argument	1		6648153	0					
ANR	6649168	PrimaryExpression	1		6648153	0					
ANR	6649169	IfStatement	if ( kernel_filename )		6648153	59					
ANR	6649170	Condition	kernel_filename	421:8:6974:6988	6648153	0	True				
ANR	6649171	Identifier	kernel_filename		6648153	0					
ANR	6649172	CompoundStatement		421:8:6950:6970	6648153	1					
ANR	6649173	IdentifierDeclStatement	uint64_t lowaddr = 0 ;	423:8:7002:7022	6648153	0	True				
ANR	6649174	IdentifierDecl	lowaddr = 0		6648153	0					
ANR	6649175	IdentifierDeclType	uint64_t		6648153	0					
ANR	6649176	Identifier	lowaddr		6648153	1					
ANR	6649177	AssignmentExpression	lowaddr = 0		6648153	2		=			
ANR	6649178	Identifier	lowaddr		6648153	0					
ANR	6649179	PrimaryExpression	0		6648153	1					
ANR	6649180	ExpressionStatement	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"	427:8:7035:7179	6648153	1	True				
ANR	6649181	AssignmentExpression	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"		6648153	0		=			
ANR	6649182	Identifier	kernel_size		6648153	0					
ANR	6649183	CallExpression	"load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"		6648153	1					
ANR	6649184	Callee	load_elf		6648153	0					
ANR	6649185	Identifier	load_elf		6648153	0					
ANR	6649186	ArgumentList	kernel_filename		6648153	1					
ANR	6649187	Argument	kernel_filename		6648153	0					
ANR	6649188	Identifier	kernel_filename		6648153	0					
ANR	6649189	Argument	translate_kernel_address		6648153	1					
ANR	6649190	Identifier	translate_kernel_address		6648153	0					
ANR	6649191	Argument	NULL		6648153	2					
ANR	6649192	Identifier	NULL		6648153	0					
ANR	6649193	Argument	NULL		6648153	3					
ANR	6649194	Identifier	NULL		6648153	0					
ANR	6649195	Argument	& lowaddr		6648153	4					
ANR	6649196	UnaryOperationExpression	& lowaddr		6648153	0					
ANR	6649197	UnaryOperator	&		6648153	0					
ANR	6649198	Identifier	lowaddr		6648153	1					
ANR	6649199	Argument	NULL		6648153	5					
ANR	6649200	Identifier	NULL		6648153	0					
ANR	6649201	Argument	1		6648153	6					
ANR	6649202	PrimaryExpression	1		6648153	0					
ANR	6649203	Argument	ELF_MACHINE		6648153	7					
ANR	6649204	Identifier	ELF_MACHINE		6648153	0					
ANR	6649205	Argument	0		6648153	8					
ANR	6649206	PrimaryExpression	0		6648153	0					
ANR	6649207	IfStatement	if ( kernel_size == ELF_LOAD_WRONG_ENDIAN )		6648153	2					
ANR	6649208	Condition	kernel_size == ELF_LOAD_WRONG_ENDIAN	431:12:7194:7229	6648153	0	True				
ANR	6649209	EqualityExpression	kernel_size == ELF_LOAD_WRONG_ENDIAN		6648153	0		==			
ANR	6649210	Identifier	kernel_size		6648153	0					
ANR	6649211	Identifier	ELF_LOAD_WRONG_ENDIAN		6648153	1					
ANR	6649212	CompoundStatement		429:50:7180:7180	6648153	1					
ANR	6649213	ExpressionStatement	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , ELF_MACHINE , 0 )"	433:12:7247:7431	6648153	0	True				
ANR	6649214	AssignmentExpression	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , ELF_MACHINE , 0 )"		6648153	0		=			
ANR	6649215	Identifier	kernel_size		6648153	0					
ANR	6649216	CallExpression	"load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , ELF_MACHINE , 0 )"		6648153	1					
ANR	6649217	Callee	load_elf		6648153	0					
ANR	6649218	Identifier	load_elf		6648153	0					
ANR	6649219	ArgumentList	kernel_filename		6648153	1					
ANR	6649220	Argument	kernel_filename		6648153	0					
ANR	6649221	Identifier	kernel_filename		6648153	0					
ANR	6649222	Argument	translate_kernel_address		6648153	1					
ANR	6649223	Identifier	translate_kernel_address		6648153	0					
ANR	6649224	Argument	NULL		6648153	2					
ANR	6649225	Identifier	NULL		6648153	0					
ANR	6649226	Argument	NULL		6648153	3					
ANR	6649227	Identifier	NULL		6648153	0					
ANR	6649228	Argument	& lowaddr		6648153	4					
ANR	6649229	UnaryOperationExpression	& lowaddr		6648153	0					
ANR	6649230	UnaryOperator	&		6648153	0					
ANR	6649231	Identifier	lowaddr		6648153	1					
ANR	6649232	Argument	NULL		6648153	5					
ANR	6649233	Identifier	NULL		6648153	0					
ANR	6649234	Argument	0		6648153	6					
ANR	6649235	PrimaryExpression	0		6648153	0					
ANR	6649236	Argument	ELF_MACHINE		6648153	7					
ANR	6649237	Identifier	ELF_MACHINE		6648153	0					
ANR	6649238	Argument	0		6648153	8					
ANR	6649239	PrimaryExpression	0		6648153	0					
ANR	6649240	ExpressionStatement	kernel_le = kernel_size > 0	439:12:7446:7473	6648153	1	True				
ANR	6649241	AssignmentExpression	kernel_le = kernel_size > 0		6648153	0		=			
ANR	6649242	Identifier	kernel_le		6648153	0					
ANR	6649243	RelationalExpression	kernel_size > 0		6648153	1		>			
ANR	6649244	Identifier	kernel_size		6648153	0					
ANR	6649245	PrimaryExpression	0		6648153	1					
ANR	6649246	IfStatement	if ( kernel_size < 0 )		6648153	3					
ANR	6649247	Condition	kernel_size < 0	443:12:7499:7513	6648153	0	True				
ANR	6649248	RelationalExpression	kernel_size < 0		6648153	0		<			
ANR	6649249	Identifier	kernel_size		6648153	0					
ANR	6649250	PrimaryExpression	0		6648153	1					
ANR	6649251	CompoundStatement		441:29:7464:7464	6648153	1					
ANR	6649252	ExpressionStatement	"fprintf ( stderr , ""qemu: error loading %s: %s\\n"" , kernel_filename , load_elf_strerror ( kernel_size ) )"	445:12:7531:7648	6648153	0	True				
ANR	6649253	CallExpression	"fprintf ( stderr , ""qemu: error loading %s: %s\\n"" , kernel_filename , load_elf_strerror ( kernel_size ) )"		6648153	0					
ANR	6649254	Callee	fprintf		6648153	0					
ANR	6649255	Identifier	fprintf		6648153	0					
ANR	6649256	ArgumentList	stderr		6648153	1					
ANR	6649257	Argument	stderr		6648153	0					
ANR	6649258	Identifier	stderr		6648153	0					
ANR	6649259	Argument	"""qemu: error loading %s: %s\\n"""		6648153	1					
ANR	6649260	PrimaryExpression	"""qemu: error loading %s: %s\\n"""		6648153	0					
ANR	6649261	Argument	kernel_filename		6648153	2					
ANR	6649262	Identifier	kernel_filename		6648153	0					
ANR	6649263	Argument	load_elf_strerror ( kernel_size )		6648153	3					
ANR	6649264	CallExpression	load_elf_strerror ( kernel_size )		6648153	0					
ANR	6649265	Callee	load_elf_strerror		6648153	0					
ANR	6649266	Identifier	load_elf_strerror		6648153	0					
ANR	6649267	ArgumentList	kernel_size		6648153	1					
ANR	6649268	Argument	kernel_size		6648153	0					
ANR	6649269	Identifier	kernel_size		6648153	0					
ANR	6649270	ExpressionStatement	exit ( 1 )	449:12:7663:7670	6648153	1	True				
ANR	6649271	CallExpression	exit ( 1 )		6648153	0					
ANR	6649272	Callee	exit		6648153	0					
ANR	6649273	Identifier	exit		6648153	0					
ANR	6649274	ArgumentList	1		6648153	1					
ANR	6649275	Argument	1		6648153	0					
ANR	6649276	PrimaryExpression	1		6648153	0					
ANR	6649277	IfStatement	if ( initrd_filename )		6648153	4					
ANR	6649278	Condition	initrd_filename	457:12:7725:7739	6648153	0	True				
ANR	6649279	Identifier	initrd_filename		6648153	0					
ANR	6649280	CompoundStatement		455:29:7690:7690	6648153	1					
ANR	6649281	ExpressionStatement	initrd_base = ( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff	465:12:7911:7977	6648153	0	True				
ANR	6649282	AssignmentExpression	initrd_base = ( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff		6648153	0		=			
ANR	6649283	Identifier	initrd_base		6648153	0					
ANR	6649284	BitAndExpression	( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff		6648153	1		&			
ANR	6649285	AdditiveExpression	KERNEL_LOAD_ADDR + kernel_size + 0x1ffff		6648153	0		+			
ANR	6649286	Identifier	KERNEL_LOAD_ADDR		6648153	0					
ANR	6649287	AdditiveExpression	kernel_size + 0x1ffff		6648153	1		+			
ANR	6649288	Identifier	kernel_size		6648153	0					
ANR	6649289	PrimaryExpression	0x1ffff		6648153	1					
ANR	6649290	Identifier	~0xffff		6648153	1					
ANR	6649291	ExpressionStatement	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"	467:12:7992:8128	6648153	1	True				
ANR	6649292	AssignmentExpression	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"		6648153	0		=			
ANR	6649293	Identifier	initrd_size		6648153	0					
ANR	6649294	CallExpression	"load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"		6648153	1					
ANR	6649295	Callee	load_image_targphys		6648153	0					
ANR	6649296	Identifier	load_image_targphys		6648153	0					
ANR	6649297	ArgumentList	initrd_filename		6648153	1					
ANR	6649298	Argument	initrd_filename		6648153	0					
ANR	6649299	Identifier	initrd_filename		6648153	0					
ANR	6649300	Argument	initrd_base		6648153	1					
ANR	6649301	Identifier	initrd_base		6648153	0					
ANR	6649302	Argument	load_limit - initrd_base		6648153	2					
ANR	6649303	AdditiveExpression	load_limit - initrd_base		6648153	0		-			
ANR	6649304	Identifier	load_limit		6648153	0					
ANR	6649305	Identifier	initrd_base		6648153	1					
ANR	6649306	IfStatement	if ( initrd_size < 0 )		6648153	2					
ANR	6649307	Condition	initrd_size < 0	471:16:8147:8161	6648153	0	True				
ANR	6649308	RelationalExpression	initrd_size < 0		6648153	0		<			
ANR	6649309	Identifier	initrd_size		6648153	0					
ANR	6649310	PrimaryExpression	0		6648153	1					
ANR	6649311	CompoundStatement		469:33:8112:8112	6648153	1					
ANR	6649312	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load initial ram disk '%s'\\n"" , initrd_filename )"	473:16:8183:8288	6648153	0	True				
ANR	6649313	CallExpression	"fprintf ( stderr , ""qemu: could not load initial ram disk '%s'\\n"" , initrd_filename )"		6648153	0					
ANR	6649314	Callee	fprintf		6648153	0					
ANR	6649315	Identifier	fprintf		6648153	0					
ANR	6649316	ArgumentList	stderr		6648153	1					
ANR	6649317	Argument	stderr		6648153	0					
ANR	6649318	Identifier	stderr		6648153	0					
ANR	6649319	Argument	"""qemu: could not load initial ram disk '%s'\\n"""		6648153	1					
ANR	6649320	PrimaryExpression	"""qemu: could not load initial ram disk '%s'\\n"""		6648153	0					
ANR	6649321	Argument	initrd_filename		6648153	2					
ANR	6649322	Identifier	initrd_filename		6648153	0					
ANR	6649323	ExpressionStatement	exit ( 1 )	477:16:8307:8314	6648153	1	True				
ANR	6649324	CallExpression	exit ( 1 )		6648153	0					
ANR	6649325	Callee	exit		6648153	0					
ANR	6649326	Identifier	exit		6648153	0					
ANR	6649327	ArgumentList	1		6648153	1					
ANR	6649328	Argument	1		6648153	0					
ANR	6649329	PrimaryExpression	1		6648153	0					
ANR	6649330	ElseStatement	else		6648153	0					
ANR	6649331	CompoundStatement		479:15:8295:8295	6648153	0					
ANR	6649332	ExpressionStatement	initrd_base = 0	483:12:8362:8377	6648153	0	True				
ANR	6649333	AssignmentExpression	initrd_base = 0		6648153	0		=			
ANR	6649334	Identifier	initrd_base		6648153	0					
ANR	6649335	PrimaryExpression	0		6648153	1					
ANR	6649336	ExpressionStatement	initrd_size = 0	485:12:8392:8407	6648153	1	True				
ANR	6649337	AssignmentExpression	initrd_size = 0		6648153	0		=			
ANR	6649338	Identifier	initrd_size		6648153	0					
ANR	6649339	PrimaryExpression	0		6648153	1					
ANR	6649340	IfStatement	if ( bios_name == NULL )		6648153	60					
ANR	6649341	Condition	bios_name == NULL	493:8:8438:8454	6648153	0	True				
ANR	6649342	EqualityExpression	bios_name == NULL		6648153	0		==			
ANR	6649343	Identifier	bios_name		6648153	0					
ANR	6649344	Identifier	NULL		6648153	1					
ANR	6649345	CompoundStatement		491:27:8405:8405	6648153	1					
ANR	6649346	ExpressionStatement	bios_name = FW_FILE_NAME	495:8:8468:8492	6648153	0	True				
ANR	6649347	AssignmentExpression	bios_name = FW_FILE_NAME		6648153	0		=			
ANR	6649348	Identifier	bios_name		6648153	0					
ANR	6649349	Identifier	FW_FILE_NAME		6648153	1					
ANR	6649350	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"	499:4:8506:8563	6648153	61	True				
ANR	6649351	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		6648153	0		=			
ANR	6649352	Identifier	filename		6648153	0					
ANR	6649353	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		6648153	1					
ANR	6649354	Callee	qemu_find_file		6648153	0					
ANR	6649355	Identifier	qemu_find_file		6648153	0					
ANR	6649356	ArgumentList	QEMU_FILE_TYPE_BIOS		6648153	1					
ANR	6649357	Argument	QEMU_FILE_TYPE_BIOS		6648153	0					
ANR	6649358	Identifier	QEMU_FILE_TYPE_BIOS		6648153	0					
ANR	6649359	Argument	bios_name		6648153	1					
ANR	6649360	Identifier	bios_name		6648153	0					
ANR	6649361	ExpressionStatement	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"	501:4:8570:8625	6648153	62	True				
ANR	6649362	AssignmentExpression	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6648153	0		=			
ANR	6649363	Identifier	fw_size		6648153	0					
ANR	6649364	CallExpression	"load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6648153	1					
ANR	6649365	Callee	load_image_targphys		6648153	0					
ANR	6649366	Identifier	load_image_targphys		6648153	0					
ANR	6649367	ArgumentList	filename		6648153	1					
ANR	6649368	Argument	filename		6648153	0					
ANR	6649369	Identifier	filename		6648153	0					
ANR	6649370	Argument	0		6648153	1					
ANR	6649371	PrimaryExpression	0		6648153	0					
ANR	6649372	Argument	FW_MAX_SIZE		6648153	2					
ANR	6649373	Identifier	FW_MAX_SIZE		6648153	0					
ANR	6649374	IfStatement	if ( fw_size < 0 )		6648153	63					
ANR	6649375	Condition	fw_size < 0	503:8:8636:8646	6648153	0	True				
ANR	6649376	RelationalExpression	fw_size < 0		6648153	0		<			
ANR	6649377	Identifier	fw_size		6648153	0					
ANR	6649378	PrimaryExpression	0		6648153	1					
ANR	6649379	CompoundStatement		501:21:8597:8597	6648153	1					
ANR	6649380	ExpressionStatement	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"	505:8:8660:8719	6648153	0	True				
ANR	6649381	CallExpression	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"		6648153	0					
ANR	6649382	Callee	hw_error		6648153	0					
ANR	6649383	Identifier	hw_error		6648153	0					
ANR	6649384	ArgumentList	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	1					
ANR	6649385	Argument	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	0					
ANR	6649386	PrimaryExpression	"""qemu: could not load LPAR rtas '%s'\\n"""		6648153	0					
ANR	6649387	Argument	filename		6648153	1					
ANR	6649388	Identifier	filename		6648153	0					
ANR	6649389	ExpressionStatement	exit ( 1 )	507:8:8730:8737	6648153	1	True				
ANR	6649390	CallExpression	exit ( 1 )		6648153	0					
ANR	6649391	Callee	exit		6648153	0					
ANR	6649392	Identifier	exit		6648153	0					
ANR	6649393	ArgumentList	1		6648153	1					
ANR	6649394	Argument	1		6648153	0					
ANR	6649395	PrimaryExpression	1		6648153	0					
ANR	6649396	ExpressionStatement	g_free ( filename )	511:4:8751:8767	6648153	64	True				
ANR	6649397	CallExpression	g_free ( filename )		6648153	0					
ANR	6649398	Callee	g_free		6648153	0					
ANR	6649399	Identifier	g_free		6648153	0					
ANR	6649400	ArgumentList	filename		6648153	1					
ANR	6649401	Argument	filename		6648153	0					
ANR	6649402	Identifier	filename		6648153	0					
ANR	6649403	ExpressionStatement	spapr -> entry_point = 0x100	515:4:8776:8802	6648153	65	True				
ANR	6649404	AssignmentExpression	spapr -> entry_point = 0x100		6648153	0		=			
ANR	6649405	PtrMemberAccess	spapr -> entry_point		6648153	0					
ANR	6649406	Identifier	spapr		6648153	0					
ANR	6649407	Identifier	entry_point		6648153	1					
ANR	6649408	PrimaryExpression	0x100		6648153	1					
ANR	6649409	ExpressionStatement	"vmstate_register ( NULL , 0 , & vmstate_spapr , spapr )"	519:4:8811:8859	6648153	66	True				
ANR	6649410	CallExpression	"vmstate_register ( NULL , 0 , & vmstate_spapr , spapr )"		6648153	0					
ANR	6649411	Callee	vmstate_register		6648153	0					
ANR	6649412	Identifier	vmstate_register		6648153	0					
ANR	6649413	ArgumentList	NULL		6648153	1					
ANR	6649414	Argument	NULL		6648153	0					
ANR	6649415	Identifier	NULL		6648153	0					
ANR	6649416	Argument	0		6648153	1					
ANR	6649417	PrimaryExpression	0		6648153	0					
ANR	6649418	Argument	& vmstate_spapr		6648153	2					
ANR	6649419	UnaryOperationExpression	& vmstate_spapr		6648153	0					
ANR	6649420	UnaryOperator	&		6648153	0					
ANR	6649421	Identifier	vmstate_spapr		6648153	1					
ANR	6649422	Argument	spapr		6648153	3					
ANR	6649423	Identifier	spapr		6648153	0					
ANR	6649424	ExpressionStatement	"register_savevm_live ( NULL , ""spapr/htab"" , - 1 , 1 , & savevm_htab_handlers , spapr )"	521:4:8866:8969	6648153	67	True				
ANR	6649425	CallExpression	"register_savevm_live ( NULL , ""spapr/htab"" , - 1 , 1 , & savevm_htab_handlers , spapr )"		6648153	0					
ANR	6649426	Callee	register_savevm_live		6648153	0					
ANR	6649427	Identifier	register_savevm_live		6648153	0					
ANR	6649428	ArgumentList	NULL		6648153	1					
ANR	6649429	Argument	NULL		6648153	0					
ANR	6649430	Identifier	NULL		6648153	0					
ANR	6649431	Argument	"""spapr/htab"""		6648153	1					
ANR	6649432	PrimaryExpression	"""spapr/htab"""		6648153	0					
ANR	6649433	Argument	- 1		6648153	2					
ANR	6649434	UnaryOperationExpression	- 1		6648153	0					
ANR	6649435	UnaryOperator	-		6648153	0					
ANR	6649436	PrimaryExpression	1		6648153	1					
ANR	6649437	Argument	1		6648153	3					
ANR	6649438	PrimaryExpression	1		6648153	0					
ANR	6649439	Argument	& savevm_htab_handlers		6648153	4					
ANR	6649440	UnaryOperationExpression	& savevm_htab_handlers		6648153	0					
ANR	6649441	UnaryOperator	&		6648153	0					
ANR	6649442	Identifier	savevm_htab_handlers		6648153	1					
ANR	6649443	Argument	spapr		6648153	5					
ANR	6649444	Identifier	spapr		6648153	0					
ANR	6649445	ExpressionStatement	"spapr -> fdt_skel = spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , boot_device , kernel_cmdline , spapr -> epow_irq )"	529:4:9013:9283	6648153	68	True				
ANR	6649446	AssignmentExpression	"spapr -> fdt_skel = spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , boot_device , kernel_cmdline , spapr -> epow_irq )"		6648153	0		=			
ANR	6649447	PtrMemberAccess	spapr -> fdt_skel		6648153	0					
ANR	6649448	Identifier	spapr		6648153	0					
ANR	6649449	Identifier	fdt_skel		6648153	1					
ANR	6649450	CallExpression	"spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , boot_device , kernel_cmdline , spapr -> epow_irq )"		6648153	1					
ANR	6649451	Callee	spapr_create_fdt_skel		6648153	0					
ANR	6649452	Identifier	spapr_create_fdt_skel		6648153	0					
ANR	6649453	ArgumentList	initrd_base		6648153	1					
ANR	6649454	Argument	initrd_base		6648153	0					
ANR	6649455	Identifier	initrd_base		6648153	0					
ANR	6649456	Argument	initrd_size		6648153	1					
ANR	6649457	Identifier	initrd_size		6648153	0					
ANR	6649458	Argument	kernel_size		6648153	2					
ANR	6649459	Identifier	kernel_size		6648153	0					
ANR	6649460	Argument	kernel_le		6648153	3					
ANR	6649461	Identifier	kernel_le		6648153	0					
ANR	6649462	Argument	boot_device		6648153	4					
ANR	6649463	Identifier	boot_device		6648153	0					
ANR	6649464	Argument	kernel_cmdline		6648153	5					
ANR	6649465	Identifier	kernel_cmdline		6648153	0					
ANR	6649466	Argument	spapr -> epow_irq		6648153	6					
ANR	6649467	PtrMemberAccess	spapr -> epow_irq		6648153	0					
ANR	6649468	Identifier	spapr		6648153	0					
ANR	6649469	Identifier	epow_irq		6648153	1					
ANR	6649470	ExpressionStatement	assert ( spapr -> fdt_skel != NULL )	537:4:9290:9321	6648153	69	True				
ANR	6649471	CallExpression	assert ( spapr -> fdt_skel != NULL )		6648153	0					
ANR	6649472	Callee	assert		6648153	0					
ANR	6649473	Identifier	assert		6648153	0					
ANR	6649474	ArgumentList	spapr -> fdt_skel != NULL		6648153	1					
ANR	6649475	Argument	spapr -> fdt_skel != NULL		6648153	0					
ANR	6649476	EqualityExpression	spapr -> fdt_skel != NULL		6648153	0		!=			
ANR	6649477	PtrMemberAccess	spapr -> fdt_skel		6648153	0					
ANR	6649478	Identifier	spapr		6648153	0					
ANR	6649479	Identifier	fdt_skel		6648153	1					
ANR	6649480	Identifier	NULL		6648153	1					
ANR	6649481	ReturnType	static void		6648153	1					
ANR	6649482	Identifier	ppc_spapr_init		6648153	2					
ANR	6649483	ParameterList	MachineState * machine		6648153	3					
ANR	6649484	Parameter	MachineState * machine	1:27:27:47	6648153	0	True				
ANR	6649485	ParameterType	MachineState *		6648153	0					
ANR	6649486	Identifier	machine		6648153	1					
ANR	6649487	CFGEntryNode	ENTRY		6648153		True				
ANR	6649488	CFGExitNode	EXIT		6648153		True				
ANR	6649489	Symbol	lowaddr		6648153						
ANR	6649490	Symbol	smp_threads		6648153						
ANR	6649491	Symbol	rtas_limit		6648153						
ANR	6649492	Symbol	spapr -> epow_irq		6648153						
ANR	6649493	Symbol	load_limit		6648153						
ANR	6649494	Symbol	drive_get_max_bus		6648153						
ANR	6649495	Symbol	machine -> kernel_cmdline		6648153						
ANR	6649496	Symbol	cpu_ppc_hypercall		6648153						
ANR	6649497	Symbol	g_new		6648153						
ANR	6649498	Symbol	* phb		6648153						
ANR	6649499	Symbol	ram		6648153						
ANR	6649500	Symbol	kvmppc_alloc_rma		6648153						
ANR	6649501	Symbol	spapr_create_fdt_skel		6648153						
ANR	6649502	Symbol	MemoryRegion		6648153						
ANR	6649503	Symbol	phb -> bus		6648153						
ANR	6649504	Symbol	rma_region		6648153						
ANR	6649505	Symbol	spapr		6648153						
ANR	6649506	Symbol	& vmstate_spapr		6648153						
ANR	6649507	Symbol	TIMEBASE_FREQ		6648153						
ANR	6649508	Symbol	filename		6648153						
ANR	6649509	Symbol	MIN		6648153						
ANR	6649510	Symbol	RTAS_MAX_SIZE		6648153						
ANR	6649511	Symbol	spapr -> vrma_adjust		6648153						
ANR	6649512	Symbol	spapr -> htab_shift		6648153						
ANR	6649513	Symbol	spapr -> fdt_addr		6648153						
ANR	6649514	Symbol	spapr_cpu_reset		6648153						
ANR	6649515	Symbol	spapr -> fdt_skel		6648153						
ANR	6649516	Symbol	spapr_node0_size		6648153						
ANR	6649517	Symbol	spapr_vga_init		6648153						
ANR	6649518	Symbol	FW_MAX_SIZE		6648153						
ANR	6649519	Symbol	cpu_model		6648153						
ANR	6649520	Symbol	load_image_targphys		6648153						
ANR	6649521	Symbol	kvm_enabled		6648153						
ANR	6649522	Symbol	nd_table		6648153						
ANR	6649523	Symbol	get_system_memory		6648153						
ANR	6649524	Symbol	xics_system_init		6648153						
ANR	6649525	Symbol	ELF_LOAD_WRONG_ENDIAN		6648153						
ANR	6649526	Symbol	i		6648153						
ANR	6649527	Symbol	FDT_MAX_SIZE		6648153						
ANR	6649528	Symbol	phb		6648153						
ANR	6649529	Symbol	machine -> cpu_model		6648153						
ANR	6649530	Symbol	node0_size		6648153						
ANR	6649531	Symbol	FW_FILE_NAME		6648153						
ANR	6649532	Symbol	ram_size		6648153						
ANR	6649533	Symbol	cpu_ppc_init		6648153						
ANR	6649534	Symbol	machine		6648153						
ANR	6649535	Symbol	emulate_spapr_hypercall		6648153						
ANR	6649536	Symbol	machine -> boot_order		6648153						
ANR	6649537	Symbol	FW_OVERHEAD		6648153						
ANR	6649538	Symbol	kernel_filename		6648153						
ANR	6649539	Symbol	serial_hds		6648153						
ANR	6649540	Symbol	* nd		6648153						
ANR	6649541	Symbol	nb_nics		6648153						
ANR	6649542	Symbol	cpu -> max_compat		6648153						
ANR	6649543	Symbol	spapr -> has_graphics		6648153						
ANR	6649544	Symbol	rma_alloc_size		6648153						
ANR	6649545	Symbol	msi_supported		6648153						
ANR	6649546	Symbol	rma		6648153						
ANR	6649547	Symbol	spapr -> rma_size		6648153						
ANR	6649548	Symbol	nd -> model		6648153						
ANR	6649549	Symbol	spapr -> rtas_size		6648153						
ANR	6649550	Symbol	MIN_RMA_SLOF		6648153						
ANR	6649551	Symbol	spapr -> icp		6648153						
ANR	6649552	Symbol	machine -> initrd_filename		6648153						
ANR	6649553	Symbol	kvmppc_smt_threads		6648153						
ANR	6649554	Symbol	fw_size		6648153						
ANR	6649555	Symbol	XICS_IRQS		6648153						
ANR	6649556	Symbol	spapr -> rtas_addr		6648153						
ANR	6649557	Symbol	spapr_create_phb		6648153						
ANR	6649558	Symbol	& savevm_htab_handlers		6648153						
ANR	6649559	Symbol	kernel_size		6648153						
ANR	6649560	Symbol	load_elf_strerror		6648153						
ANR	6649561	Symbol	strcmp		6648153						
ANR	6649562	Symbol	smp_cpus		6648153						
ANR	6649563	Symbol	NULL		6648153						
ANR	6649564	Symbol	initrd_base		6648153						
ANR	6649565	Symbol	* env		6648153						
ANR	6649566	Symbol	cpu		6648153						
ANR	6649567	Symbol	QEMU_FILE_TYPE_BIOS		6648153						
ANR	6649568	Symbol	spapr_vio_bus_init		6648153						
ANR	6649569	Symbol	& rma		6648153						
ANR	6649570	Symbol	KERNEL_LOAD_ADDR		6648153						
ANR	6649571	Symbol	stderr		6648153						
ANR	6649572	Symbol	nd		6648153						
ANR	6649573	Symbol	boot_device		6648153						
ANR	6649574	Symbol	true		6648153						
ANR	6649575	Symbol	g_malloc0		6648153						
ANR	6649576	Symbol	* machine		6648153						
ANR	6649577	Symbol	load_elf		6648153						
ANR	6649578	Symbol	translate_kernel_address		6648153						
ANR	6649579	Symbol	~0xffff		6648153						
ANR	6649580	Symbol	kernel_cmdline		6648153						
ANR	6649581	Symbol	machine -> ram_size		6648153						
ANR	6649582	Symbol	spapr -> entry_point		6648153						
ANR	6649583	Symbol	initrd_filename		6648153						
ANR	6649584	Symbol	initrd_size		6648153						
ANR	6649585	Symbol	bios_name		6648153						
ANR	6649586	Symbol	usb_enabled		6648153						
ANR	6649587	Symbol	ELF_MACHINE		6648153						
ANR	6649588	Symbol	machine -> kernel_filename		6648153						
ANR	6649589	Symbol	kernel_le		6648153						
ANR	6649590	Symbol	g_strdup		6648153						
ANR	6649591	Symbol	& lowaddr		6648153						
ANR	6649592	Symbol	* spapr		6648153						
ANR	6649593	Symbol	env -> msr_mask		6648153						
ANR	6649594	Symbol	qemu_find_file		6648153						
ANR	6649595	Symbol	spapr -> vio_bus		6648153						
ANR	6649596	Symbol	MAX_SERIAL_PORTS		6648153						
ANR	6649597	Symbol	SPAPR_PCI_MSI_WINDOW		6648153						
ANR	6649598	Symbol	& spapr -> phbs		6648153						
ANR	6649599	Symbol	false		6648153						
ANR	6649600	Symbol	env		6648153						
ANR	6649601	Symbol	* cpu		6648153						
ANR	6649602	Symbol	& cpu -> env		6648153						
ANR	6649603	Symbol	* serial_hds		6648153						
ANR	6649604	Symbol	* i		6648153						
ANR	6649605	Symbol	IF_SCSI		6648153						
ANR	6649606	Symbol	sysmem		6648153						
ANR	6649607	Symbol	ppc_set_compat		6648153						
ANR	6649608	Symbol	spapr -> ram_limit		6648153						
