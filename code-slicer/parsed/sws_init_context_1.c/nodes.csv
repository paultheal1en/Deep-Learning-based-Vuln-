command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8140665	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sws_init_context_1.c								
ANR	8140666	Function	sws_init_context	1:0:0:20652							
ANR	8140667	FunctionDef	"sws_init_context (SwsContext * c , SwsFilter * srcFilter , SwsFilter * dstFilter)"		8140666	0					
ANR	8140668	CompoundStatement		5:0:119:20652	8140666	0					
ANR	8140669	IdentifierDeclStatement	int i ;	7:4:126:131	8140666	0	True				
ANR	8140670	IdentifierDecl	i		8140666	0					
ANR	8140671	IdentifierDeclType	int		8140666	0					
ANR	8140672	Identifier	i		8140666	1					
ANR	8140673	IdentifierDeclStatement	"int usesVFilter , usesHFilter ;"	9:4:138:166	8140666	1	True				
ANR	8140674	IdentifierDecl	usesVFilter		8140666	0					
ANR	8140675	IdentifierDeclType	int		8140666	0					
ANR	8140676	Identifier	usesVFilter		8140666	1					
ANR	8140677	IdentifierDecl	usesHFilter		8140666	1					
ANR	8140678	IdentifierDeclType	int		8140666	0					
ANR	8140679	Identifier	usesHFilter		8140666	1					
ANR	8140680	IdentifierDeclStatement	int unscaled ;	11:4:173:185	8140666	2	True				
ANR	8140681	IdentifierDecl	unscaled		8140666	0					
ANR	8140682	IdentifierDeclType	int		8140666	0					
ANR	8140683	Identifier	unscaled		8140666	1					
ANR	8140684	IdentifierDeclStatement	"SwsFilter dummyFilter = { NULL , NULL , NULL , NULL } ;"	13:4:192:242	8140666	3	True				
ANR	8140685	IdentifierDecl	"dummyFilter = { NULL , NULL , NULL , NULL }"		8140666	0					
ANR	8140686	IdentifierDeclType	SwsFilter		8140666	0					
ANR	8140687	Identifier	dummyFilter		8140666	1					
ANR	8140688	AssignmentExpression	"dummyFilter = { NULL , NULL , NULL , NULL }"		8140666	2		=			
ANR	8140689	Identifier	dummyFilter		8140666	0					
ANR	8140690	InitializerList	NULL		8140666	1					
ANR	8140691	Identifier	NULL		8140666	0					
ANR	8140692	Identifier	NULL		8140666	1					
ANR	8140693	Identifier	NULL		8140666	2					
ANR	8140694	Identifier	NULL		8140666	3					
ANR	8140695	IdentifierDeclStatement	int srcW = c -> srcW ;	15:4:249:280	8140666	4	True				
ANR	8140696	IdentifierDecl	srcW = c -> srcW		8140666	0					
ANR	8140697	IdentifierDeclType	int		8140666	0					
ANR	8140698	Identifier	srcW		8140666	1					
ANR	8140699	AssignmentExpression	srcW = c -> srcW		8140666	2		=			
ANR	8140700	Identifier	srcW		8140666	0					
ANR	8140701	PtrMemberAccess	c -> srcW		8140666	1					
ANR	8140702	Identifier	c		8140666	0					
ANR	8140703	Identifier	srcW		8140666	1					
ANR	8140704	IdentifierDeclStatement	int srcH = c -> srcH ;	17:4:287:318	8140666	5	True				
ANR	8140705	IdentifierDecl	srcH = c -> srcH		8140666	0					
ANR	8140706	IdentifierDeclType	int		8140666	0					
ANR	8140707	Identifier	srcH		8140666	1					
ANR	8140708	AssignmentExpression	srcH = c -> srcH		8140666	2		=			
ANR	8140709	Identifier	srcH		8140666	0					
ANR	8140710	PtrMemberAccess	c -> srcH		8140666	1					
ANR	8140711	Identifier	c		8140666	0					
ANR	8140712	Identifier	srcH		8140666	1					
ANR	8140713	IdentifierDeclStatement	int dstW = c -> dstW ;	19:4:325:356	8140666	6	True				
ANR	8140714	IdentifierDecl	dstW = c -> dstW		8140666	0					
ANR	8140715	IdentifierDeclType	int		8140666	0					
ANR	8140716	Identifier	dstW		8140666	1					
ANR	8140717	AssignmentExpression	dstW = c -> dstW		8140666	2		=			
ANR	8140718	Identifier	dstW		8140666	0					
ANR	8140719	PtrMemberAccess	c -> dstW		8140666	1					
ANR	8140720	Identifier	c		8140666	0					
ANR	8140721	Identifier	dstW		8140666	1					
ANR	8140722	IdentifierDeclStatement	int dstH = c -> dstH ;	21:4:363:394	8140666	7	True				
ANR	8140723	IdentifierDecl	dstH = c -> dstH		8140666	0					
ANR	8140724	IdentifierDeclType	int		8140666	0					
ANR	8140725	Identifier	dstH		8140666	1					
ANR	8140726	AssignmentExpression	dstH = c -> dstH		8140666	2		=			
ANR	8140727	Identifier	dstH		8140666	0					
ANR	8140728	PtrMemberAccess	c -> dstH		8140666	1					
ANR	8140729	Identifier	c		8140666	0					
ANR	8140730	Identifier	dstH		8140666	1					
ANR	8140731	IdentifierDeclStatement	"int dst_stride = FFALIGN ( dstW * sizeof ( int16_t ) + 16 , 16 ) ;"	23:4:401:465	8140666	8	True				
ANR	8140732	IdentifierDecl	"dst_stride = FFALIGN ( dstW * sizeof ( int16_t ) + 16 , 16 )"		8140666	0					
ANR	8140733	IdentifierDeclType	int		8140666	0					
ANR	8140734	Identifier	dst_stride		8140666	1					
ANR	8140735	AssignmentExpression	"dst_stride = FFALIGN ( dstW * sizeof ( int16_t ) + 16 , 16 )"		8140666	2		=			
ANR	8140736	Identifier	dst_stride		8140666	0					
ANR	8140737	CallExpression	"FFALIGN ( dstW * sizeof ( int16_t ) + 16 , 16 )"		8140666	1					
ANR	8140738	Callee	FFALIGN		8140666	0					
ANR	8140739	Identifier	FFALIGN		8140666	0					
ANR	8140740	ArgumentList	dstW * sizeof ( int16_t ) + 16		8140666	1					
ANR	8140741	Argument	dstW * sizeof ( int16_t ) + 16		8140666	0					
ANR	8140742	AdditiveExpression	dstW * sizeof ( int16_t ) + 16		8140666	0		+			
ANR	8140743	MultiplicativeExpression	dstW * sizeof ( int16_t )		8140666	0		*			
ANR	8140744	Identifier	dstW		8140666	0					
ANR	8140745	SizeofExpression	sizeof ( int16_t )		8140666	1					
ANR	8140746	Sizeof	sizeof		8140666	0					
ANR	8140747	SizeofOperand	int16_t		8140666	1					
ANR	8140748	PrimaryExpression	16		8140666	1					
ANR	8140749	Argument	16		8140666	1					
ANR	8140750	PrimaryExpression	16		8140666	0					
ANR	8140751	IdentifierDeclStatement	int dst_stride_px = dst_stride >> 1 ;	25:4:472:511	8140666	9	True				
ANR	8140752	IdentifierDecl	dst_stride_px = dst_stride >> 1		8140666	0					
ANR	8140753	IdentifierDeclType	int		8140666	0					
ANR	8140754	Identifier	dst_stride_px		8140666	1					
ANR	8140755	AssignmentExpression	dst_stride_px = dst_stride >> 1		8140666	2		=			
ANR	8140756	Identifier	dst_stride_px		8140666	0					
ANR	8140757	ShiftExpression	dst_stride >> 1		8140666	1		>>			
ANR	8140758	Identifier	dst_stride		8140666	0					
ANR	8140759	PrimaryExpression	1		8140666	1					
ANR	8140760	IdentifierDeclStatement	"int flags , cpu_flags ;"	27:4:518:538	8140666	10	True				
ANR	8140761	IdentifierDecl	flags		8140666	0					
ANR	8140762	IdentifierDeclType	int		8140666	0					
ANR	8140763	Identifier	flags		8140666	1					
ANR	8140764	IdentifierDecl	cpu_flags		8140666	1					
ANR	8140765	IdentifierDeclType	int		8140666	0					
ANR	8140766	Identifier	cpu_flags		8140666	1					
ANR	8140767	IdentifierDeclStatement	enum AVPixelFormat srcFormat = c -> srcFormat ;	29:4:545:588	8140666	11	True				
ANR	8140768	IdentifierDecl	srcFormat = c -> srcFormat		8140666	0					
ANR	8140769	IdentifierDeclType	enum AVPixelFormat		8140666	0					
ANR	8140770	Identifier	srcFormat		8140666	1					
ANR	8140771	AssignmentExpression	srcFormat = c -> srcFormat		8140666	2		=			
ANR	8140772	Identifier	srcFormat		8140666	0					
ANR	8140773	PtrMemberAccess	c -> srcFormat		8140666	1					
ANR	8140774	Identifier	c		8140666	0					
ANR	8140775	Identifier	srcFormat		8140666	1					
ANR	8140776	IdentifierDeclStatement	enum AVPixelFormat dstFormat = c -> dstFormat ;	31:4:595:638	8140666	12	True				
ANR	8140777	IdentifierDecl	dstFormat = c -> dstFormat		8140666	0					
ANR	8140778	IdentifierDeclType	enum AVPixelFormat		8140666	0					
ANR	8140779	Identifier	dstFormat		8140666	1					
ANR	8140780	AssignmentExpression	dstFormat = c -> dstFormat		8140666	2		=			
ANR	8140781	Identifier	dstFormat		8140666	0					
ANR	8140782	PtrMemberAccess	c -> dstFormat		8140666	1					
ANR	8140783	Identifier	c		8140666	0					
ANR	8140784	Identifier	dstFormat		8140666	1					
ANR	8140785	IdentifierDeclStatement	const AVPixFmtDescriptor * desc_src = av_pix_fmt_desc_get ( srcFormat ) ;	33:4:645:712	8140666	13	True				
ANR	8140786	IdentifierDecl	* desc_src = av_pix_fmt_desc_get ( srcFormat )		8140666	0					
ANR	8140787	IdentifierDeclType	const AVPixFmtDescriptor *		8140666	0					
ANR	8140788	Identifier	desc_src		8140666	1					
ANR	8140789	AssignmentExpression	* desc_src = av_pix_fmt_desc_get ( srcFormat )		8140666	2		=			
ANR	8140790	Identifier	desc_src		8140666	0					
ANR	8140791	CallExpression	av_pix_fmt_desc_get ( srcFormat )		8140666	1					
ANR	8140792	Callee	av_pix_fmt_desc_get		8140666	0					
ANR	8140793	Identifier	av_pix_fmt_desc_get		8140666	0					
ANR	8140794	ArgumentList	srcFormat		8140666	1					
ANR	8140795	Argument	srcFormat		8140666	0					
ANR	8140796	Identifier	srcFormat		8140666	0					
ANR	8140797	IdentifierDeclStatement	const AVPixFmtDescriptor * desc_dst = av_pix_fmt_desc_get ( dstFormat ) ;	35:4:719:786	8140666	14	True				
ANR	8140798	IdentifierDecl	* desc_dst = av_pix_fmt_desc_get ( dstFormat )		8140666	0					
ANR	8140799	IdentifierDeclType	const AVPixFmtDescriptor *		8140666	0					
ANR	8140800	Identifier	desc_dst		8140666	1					
ANR	8140801	AssignmentExpression	* desc_dst = av_pix_fmt_desc_get ( dstFormat )		8140666	2		=			
ANR	8140802	Identifier	desc_dst		8140666	0					
ANR	8140803	CallExpression	av_pix_fmt_desc_get ( dstFormat )		8140666	1					
ANR	8140804	Callee	av_pix_fmt_desc_get		8140666	0					
ANR	8140805	Identifier	av_pix_fmt_desc_get		8140666	0					
ANR	8140806	ArgumentList	dstFormat		8140666	1					
ANR	8140807	Argument	dstFormat		8140666	0					
ANR	8140808	Identifier	dstFormat		8140666	0					
ANR	8140809	ExpressionStatement	cpu_flags = av_get_cpu_flags ( )	39:4:795:825	8140666	15	True				
ANR	8140810	AssignmentExpression	cpu_flags = av_get_cpu_flags ( )		8140666	0		=			
ANR	8140811	Identifier	cpu_flags		8140666	0					
ANR	8140812	CallExpression	av_get_cpu_flags ( )		8140666	1					
ANR	8140813	Callee	av_get_cpu_flags		8140666	0					
ANR	8140814	Identifier	av_get_cpu_flags		8140666	0					
ANR	8140815	ArgumentList			8140666	1					
ANR	8140816	ExpressionStatement	flags = c -> flags	41:4:832:852	8140666	16	True				
ANR	8140817	AssignmentExpression	flags = c -> flags		8140666	0		=			
ANR	8140818	Identifier	flags		8140666	0					
ANR	8140819	PtrMemberAccess	c -> flags		8140666	1					
ANR	8140820	Identifier	c		8140666	0					
ANR	8140821	Identifier	flags		8140666	1					
ANR	8140822	ExpressionStatement	emms_c ( )	43:4:859:867	8140666	17	True				
ANR	8140823	CallExpression	emms_c ( )		8140666	0					
ANR	8140824	Callee	emms_c		8140666	0					
ANR	8140825	Identifier	emms_c		8140666	0					
ANR	8140826	ArgumentList			8140666	1					
ANR	8140827	IfStatement	if ( ! rgb15to16 )		8140666	18					
ANR	8140828	Condition	! rgb15to16	45:8:878:887	8140666	0	True				
ANR	8140829	UnaryOperationExpression	! rgb15to16		8140666	0					
ANR	8140830	UnaryOperator	!		8140666	0					
ANR	8140831	Identifier	rgb15to16		8140666	1					
ANR	8140832	ExpressionStatement	ff_rgb2rgb_init ( )	47:8:899:916	8140666	1	True				
ANR	8140833	CallExpression	ff_rgb2rgb_init ( )		8140666	0					
ANR	8140834	Callee	ff_rgb2rgb_init		8140666	0					
ANR	8140835	Identifier	ff_rgb2rgb_init		8140666	0					
ANR	8140836	ArgumentList			8140666	1					
ANR	8140837	ExpressionStatement	unscaled = ( srcW == dstW && srcH == dstH )	51:4:925:966	8140666	19	True				
ANR	8140838	AssignmentExpression	unscaled = ( srcW == dstW && srcH == dstH )		8140666	0		=			
ANR	8140839	Identifier	unscaled		8140666	0					
ANR	8140840	AndExpression	srcW == dstW && srcH == dstH		8140666	1		&&			
ANR	8140841	EqualityExpression	srcW == dstW		8140666	0		==			
ANR	8140842	Identifier	srcW		8140666	0					
ANR	8140843	Identifier	dstW		8140666	1					
ANR	8140844	EqualityExpression	srcH == dstH		8140666	1		==			
ANR	8140845	Identifier	srcH		8140666	0					
ANR	8140846	Identifier	dstH		8140666	1					
ANR	8140847	IfStatement	if ( ! ( unscaled && sws_isSupportedEndiannessConversion ( srcFormat ) && av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat ) )		8140666	20					
ANR	8140848	Condition	! ( unscaled && sws_isSupportedEndiannessConversion ( srcFormat ) && av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat )	55:8:979:1104	8140666	0	True				
ANR	8140849	UnaryOperationExpression	! ( unscaled && sws_isSupportedEndiannessConversion ( srcFormat ) && av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat )		8140666	0					
ANR	8140850	UnaryOperator	!		8140666	0					
ANR	8140851	AndExpression	unscaled && sws_isSupportedEndiannessConversion ( srcFormat ) && av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat		8140666	1		&&			
ANR	8140852	Identifier	unscaled		8140666	0					
ANR	8140853	AndExpression	sws_isSupportedEndiannessConversion ( srcFormat ) && av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat		8140666	1		&&			
ANR	8140854	CallExpression	sws_isSupportedEndiannessConversion ( srcFormat )		8140666	0					
ANR	8140855	Callee	sws_isSupportedEndiannessConversion		8140666	0					
ANR	8140856	Identifier	sws_isSupportedEndiannessConversion		8140666	0					
ANR	8140857	ArgumentList	srcFormat		8140666	1					
ANR	8140858	Argument	srcFormat		8140666	0					
ANR	8140859	Identifier	srcFormat		8140666	0					
ANR	8140860	EqualityExpression	av_pix_fmt_swap_endianness ( srcFormat ) == dstFormat		8140666	1		==			
ANR	8140861	CallExpression	av_pix_fmt_swap_endianness ( srcFormat )		8140666	0					
ANR	8140862	Callee	av_pix_fmt_swap_endianness		8140666	0					
ANR	8140863	Identifier	av_pix_fmt_swap_endianness		8140666	0					
ANR	8140864	ArgumentList	srcFormat		8140666	1					
ANR	8140865	Argument	srcFormat		8140666	0					
ANR	8140866	Identifier	srcFormat		8140666	0					
ANR	8140867	Identifier	dstFormat		8140666	1					
ANR	8140868	CompoundStatement		53:63:987:987	8140666	1					
ANR	8140869	IfStatement	if ( ! sws_isSupportedInput ( srcFormat ) )		8140666	0					
ANR	8140870	Condition	! sws_isSupportedInput ( srcFormat )	59:8:1118:1149	8140666	0	True				
ANR	8140871	UnaryOperationExpression	! sws_isSupportedInput ( srcFormat )		8140666	0					
ANR	8140872	UnaryOperator	!		8140666	0					
ANR	8140873	CallExpression	sws_isSupportedInput ( srcFormat )		8140666	1					
ANR	8140874	Callee	sws_isSupportedInput		8140666	0					
ANR	8140875	Identifier	sws_isSupportedInput		8140666	0					
ANR	8140876	ArgumentList	srcFormat		8140666	1					
ANR	8140877	Argument	srcFormat		8140666	0					
ANR	8140878	Identifier	srcFormat		8140666	0					
ANR	8140879	CompoundStatement		55:42:1032:1032	8140666	1					
ANR	8140880	ExpressionStatement	"av_log ( c , AV_LOG_ERROR , ""%s is not supported as input pixel format\\n"" , sws_format_name ( srcFormat ) )"	61:8:1163:1277	8140666	0	True				
ANR	8140881	CallExpression	"av_log ( c , AV_LOG_ERROR , ""%s is not supported as input pixel format\\n"" , sws_format_name ( srcFormat ) )"		8140666	0					
ANR	8140882	Callee	av_log		8140666	0					
ANR	8140883	Identifier	av_log		8140666	0					
ANR	8140884	ArgumentList	c		8140666	1					
ANR	8140885	Argument	c		8140666	0					
ANR	8140886	Identifier	c		8140666	0					
ANR	8140887	Argument	AV_LOG_ERROR		8140666	1					
ANR	8140888	Identifier	AV_LOG_ERROR		8140666	0					
ANR	8140889	Argument	"""%s is not supported as input pixel format\\n"""		8140666	2					
ANR	8140890	PrimaryExpression	"""%s is not supported as input pixel format\\n"""		8140666	0					
ANR	8140891	Argument	sws_format_name ( srcFormat )		8140666	3					
ANR	8140892	CallExpression	sws_format_name ( srcFormat )		8140666	0					
ANR	8140893	Callee	sws_format_name		8140666	0					
ANR	8140894	Identifier	sws_format_name		8140666	0					
ANR	8140895	ArgumentList	srcFormat		8140666	1					
ANR	8140896	Argument	srcFormat		8140666	0					
ANR	8140897	Identifier	srcFormat		8140666	0					
ANR	8140898	ReturnStatement	return AVERROR ( EINVAL ) ;	65:8:1288:1310	8140666	1	True				
ANR	8140899	CallExpression	AVERROR ( EINVAL )		8140666	0					
ANR	8140900	Callee	AVERROR		8140666	0					
ANR	8140901	Identifier	AVERROR		8140666	0					
ANR	8140902	ArgumentList	EINVAL		8140666	1					
ANR	8140903	Argument	EINVAL		8140666	0					
ANR	8140904	Identifier	EINVAL		8140666	0					
ANR	8140905	IfStatement	if ( ! sws_isSupportedOutput ( dstFormat ) )		8140666	1					
ANR	8140906	Condition	! sws_isSupportedOutput ( dstFormat )	69:8:1328:1360	8140666	0	True				
ANR	8140907	UnaryOperationExpression	! sws_isSupportedOutput ( dstFormat )		8140666	0					
ANR	8140908	UnaryOperator	!		8140666	0					
ANR	8140909	CallExpression	sws_isSupportedOutput ( dstFormat )		8140666	1					
ANR	8140910	Callee	sws_isSupportedOutput		8140666	0					
ANR	8140911	Identifier	sws_isSupportedOutput		8140666	0					
ANR	8140912	ArgumentList	dstFormat		8140666	1					
ANR	8140913	Argument	dstFormat		8140666	0					
ANR	8140914	Identifier	dstFormat		8140666	0					
ANR	8140915	CompoundStatement		65:43:1243:1243	8140666	1					
ANR	8140916	ExpressionStatement	"av_log ( c , AV_LOG_ERROR , ""%s is not supported as output pixel format\\n"" , sws_format_name ( dstFormat ) )"	71:8:1374:1489	8140666	0	True				
ANR	8140917	CallExpression	"av_log ( c , AV_LOG_ERROR , ""%s is not supported as output pixel format\\n"" , sws_format_name ( dstFormat ) )"		8140666	0					
ANR	8140918	Callee	av_log		8140666	0					
ANR	8140919	Identifier	av_log		8140666	0					
ANR	8140920	ArgumentList	c		8140666	1					
ANR	8140921	Argument	c		8140666	0					
ANR	8140922	Identifier	c		8140666	0					
ANR	8140923	Argument	AV_LOG_ERROR		8140666	1					
ANR	8140924	Identifier	AV_LOG_ERROR		8140666	0					
ANR	8140925	Argument	"""%s is not supported as output pixel format\\n"""		8140666	2					
ANR	8140926	PrimaryExpression	"""%s is not supported as output pixel format\\n"""		8140666	0					
ANR	8140927	Argument	sws_format_name ( dstFormat )		8140666	3					
ANR	8140928	CallExpression	sws_format_name ( dstFormat )		8140666	0					
ANR	8140929	Callee	sws_format_name		8140666	0					
ANR	8140930	Identifier	sws_format_name		8140666	0					
ANR	8140931	ArgumentList	dstFormat		8140666	1					
ANR	8140932	Argument	dstFormat		8140666	0					
ANR	8140933	Identifier	dstFormat		8140666	0					
ANR	8140934	ReturnStatement	return AVERROR ( EINVAL ) ;	75:8:1500:1522	8140666	1	True				
ANR	8140935	CallExpression	AVERROR ( EINVAL )		8140666	0					
ANR	8140936	Callee	AVERROR		8140666	0					
ANR	8140937	Identifier	AVERROR		8140666	0					
ANR	8140938	ArgumentList	EINVAL		8140666	1					
ANR	8140939	Argument	EINVAL		8140666	0					
ANR	8140940	Identifier	EINVAL		8140666	0					
ANR	8140941	ExpressionStatement	i = flags & ( SWS_POINT | SWS_AREA | SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN )	83:4:1545:1951	8140666	21	True				
ANR	8140942	AssignmentExpression	i = flags & ( SWS_POINT | SWS_AREA | SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN )		8140666	0		=			
ANR	8140943	Identifier	i		8140666	0					
ANR	8140944	BitAndExpression	flags & ( SWS_POINT | SWS_AREA | SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN )		8140666	1		&			
ANR	8140945	Identifier	flags		8140666	0					
ANR	8140946	InclusiveOrExpression	SWS_POINT | SWS_AREA | SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140947	Identifier	SWS_POINT		8140666	0					
ANR	8140948	InclusiveOrExpression	SWS_AREA | SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140949	Identifier	SWS_AREA		8140666	0					
ANR	8140950	InclusiveOrExpression	SWS_BILINEAR | SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140951	Identifier	SWS_BILINEAR		8140666	0					
ANR	8140952	InclusiveOrExpression	SWS_FAST_BILINEAR | SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140953	Identifier	SWS_FAST_BILINEAR		8140666	0					
ANR	8140954	InclusiveOrExpression	SWS_BICUBIC | SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140955	Identifier	SWS_BICUBIC		8140666	0					
ANR	8140956	InclusiveOrExpression	SWS_X | SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140957	Identifier	SWS_X		8140666	0					
ANR	8140958	InclusiveOrExpression	SWS_GAUSS | SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140959	Identifier	SWS_GAUSS		8140666	0					
ANR	8140960	InclusiveOrExpression	SWS_LANCZOS | SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140961	Identifier	SWS_LANCZOS		8140666	0					
ANR	8140962	InclusiveOrExpression	SWS_SINC | SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140963	Identifier	SWS_SINC		8140666	0					
ANR	8140964	InclusiveOrExpression	SWS_SPLINE | SWS_BICUBLIN		8140666	1		|			
ANR	8140965	Identifier	SWS_SPLINE		8140666	0					
ANR	8140966	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8140967	IfStatement	if ( ! i )		8140666	22					
ANR	8140968	Condition	! i	109:8:2021:2022	8140666	0	True				
ANR	8140969	UnaryOperationExpression	! i		8140666	0					
ANR	8140970	UnaryOperator	!		8140666	0					
ANR	8140971	Identifier	i		8140666	1					
ANR	8140972	CompoundStatement		105:12:1905:1905	8140666	1					
ANR	8140973	IfStatement	if ( dstW < srcW && dstH < srcH )		8140666	0					
ANR	8140974	Condition	dstW < srcW && dstH < srcH	111:12:2040:2065	8140666	0	True				
ANR	8140975	AndExpression	dstW < srcW && dstH < srcH		8140666	0		&&			
ANR	8140976	RelationalExpression	dstW < srcW		8140666	0		<			
ANR	8140977	Identifier	dstW		8140666	0					
ANR	8140978	Identifier	srcW		8140666	1					
ANR	8140979	RelationalExpression	dstH < srcH		8140666	1		<			
ANR	8140980	Identifier	dstH		8140666	0					
ANR	8140981	Identifier	srcH		8140666	1					
ANR	8140982	ExpressionStatement	flags |= SWS_GAUSS	113:12:2081:2099	8140666	1	True				
ANR	8140983	AssignmentExpression	flags |= SWS_GAUSS		8140666	0		|=			
ANR	8140984	Identifier	flags		8140666	0					
ANR	8140985	Identifier	SWS_GAUSS		8140666	1					
ANR	8140986	ElseStatement	else		8140666	0					
ANR	8140987	IfStatement	if ( dstW > srcW && dstH > srcH )		8140666	0					
ANR	8140988	Condition	dstW > srcW && dstH > srcH	115:17:2119:2144	8140666	0	True				
ANR	8140989	AndExpression	dstW > srcW && dstH > srcH		8140666	0		&&			
ANR	8140990	RelationalExpression	dstW > srcW		8140666	0		>			
ANR	8140991	Identifier	dstW		8140666	0					
ANR	8140992	Identifier	srcW		8140666	1					
ANR	8140993	RelationalExpression	dstH > srcH		8140666	1		>			
ANR	8140994	Identifier	dstH		8140666	0					
ANR	8140995	Identifier	srcH		8140666	1					
ANR	8140996	ExpressionStatement	flags |= SWS_SINC	117:12:2160:2177	8140666	1	True				
ANR	8140997	AssignmentExpression	flags |= SWS_SINC		8140666	0		|=			
ANR	8140998	Identifier	flags		8140666	0					
ANR	8140999	Identifier	SWS_SINC		8140666	1					
ANR	8141000	ElseStatement	else		8140666	0					
ANR	8141001	ExpressionStatement	flags |= SWS_LANCZOS	121:12:2206:2226	8140666	0	True				
ANR	8141002	AssignmentExpression	flags |= SWS_LANCZOS		8140666	0		|=			
ANR	8141003	Identifier	flags		8140666	0					
ANR	8141004	Identifier	SWS_LANCZOS		8140666	1					
ANR	8141005	ExpressionStatement	c -> flags = flags	123:8:2237:2253	8140666	1	True				
ANR	8141006	AssignmentExpression	c -> flags = flags		8140666	0		=			
ANR	8141007	PtrMemberAccess	c -> flags		8140666	0					
ANR	8141008	Identifier	c		8140666	0					
ANR	8141009	Identifier	flags		8140666	1					
ANR	8141010	Identifier	flags		8140666	1					
ANR	8141011	ElseStatement	else		8140666	0					
ANR	8141012	IfStatement	if ( i & ( i - 1 ) )		8140666	0					
ANR	8141013	Condition	i & ( i - 1 )	125:15:2271:2281	8140666	0	True				
ANR	8141014	BitAndExpression	i & ( i - 1 )		8140666	0		&			
ANR	8141015	Identifier	i		8140666	0					
ANR	8141016	AdditiveExpression	i - 1		8140666	1		-			
ANR	8141017	Identifier	i		8140666	0					
ANR	8141018	PrimaryExpression	1		8140666	1					
ANR	8141019	CompoundStatement		121:28:2164:2164	8140666	1					
ANR	8141020	ExpressionStatement	"av_log ( c , AV_LOG_ERROR , ""Exactly one scaler algorithm must be chosen\\n"" )"	127:8:2295:2383	8140666	0	True				
ANR	8141021	CallExpression	"av_log ( c , AV_LOG_ERROR , ""Exactly one scaler algorithm must be chosen\\n"" )"		8140666	0					
ANR	8141022	Callee	av_log		8140666	0					
ANR	8141023	Identifier	av_log		8140666	0					
ANR	8141024	ArgumentList	c		8140666	1					
ANR	8141025	Argument	c		8140666	0					
ANR	8141026	Identifier	c		8140666	0					
ANR	8141027	Argument	AV_LOG_ERROR		8140666	1					
ANR	8141028	Identifier	AV_LOG_ERROR		8140666	0					
ANR	8141029	Argument	"""Exactly one scaler algorithm must be chosen\\n"""		8140666	2					
ANR	8141030	PrimaryExpression	"""Exactly one scaler algorithm must be chosen\\n"""		8140666	0					
ANR	8141031	ReturnStatement	return AVERROR ( EINVAL ) ;	131:8:2394:2416	8140666	1	True				
ANR	8141032	CallExpression	AVERROR ( EINVAL )		8140666	0					
ANR	8141033	Callee	AVERROR		8140666	0					
ANR	8141034	Identifier	AVERROR		8140666	0					
ANR	8141035	ArgumentList	EINVAL		8140666	1					
ANR	8141036	Argument	EINVAL		8140666	0					
ANR	8141037	Identifier	EINVAL		8140666	0					
ANR	8141038	IfStatement	if ( srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1 )		8140666	23					
ANR	8141039	Condition	srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1	137:8:2458:2501	8140666	0	True				
ANR	8141040	OrExpression	srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1		8140666	0		||			
ANR	8141041	RelationalExpression	srcW < 4		8140666	0		<			
ANR	8141042	Identifier	srcW		8140666	0					
ANR	8141043	PrimaryExpression	4		8140666	1					
ANR	8141044	OrExpression	srcH < 1 || dstW < 8 || dstH < 1		8140666	1		||			
ANR	8141045	RelationalExpression	srcH < 1		8140666	0		<			
ANR	8141046	Identifier	srcH		8140666	0					
ANR	8141047	PrimaryExpression	1		8140666	1					
ANR	8141048	OrExpression	dstW < 8 || dstH < 1		8140666	1		||			
ANR	8141049	RelationalExpression	dstW < 8		8140666	0		<			
ANR	8141050	Identifier	dstW		8140666	0					
ANR	8141051	PrimaryExpression	8		8140666	1					
ANR	8141052	RelationalExpression	dstH < 1		8140666	1		<			
ANR	8141053	Identifier	dstH		8140666	0					
ANR	8141054	PrimaryExpression	1		8140666	1					
ANR	8141055	CompoundStatement		133:54:2384:2384	8140666	1					
ANR	8141056	ExpressionStatement	"av_log ( c , AV_LOG_ERROR , ""%dx%d -> %dx%d is invalid scaling dimension\\n"" , srcW , srcH , dstW , dstH )"	143:8:2640:2752	8140666	0	True				
ANR	8141057	CallExpression	"av_log ( c , AV_LOG_ERROR , ""%dx%d -> %dx%d is invalid scaling dimension\\n"" , srcW , srcH , dstW , dstH )"		8140666	0					
ANR	8141058	Callee	av_log		8140666	0					
ANR	8141059	Identifier	av_log		8140666	0					
ANR	8141060	ArgumentList	c		8140666	1					
ANR	8141061	Argument	c		8140666	0					
ANR	8141062	Identifier	c		8140666	0					
ANR	8141063	Argument	AV_LOG_ERROR		8140666	1					
ANR	8141064	Identifier	AV_LOG_ERROR		8140666	0					
ANR	8141065	Argument	"""%dx%d -> %dx%d is invalid scaling dimension\\n"""		8140666	2					
ANR	8141066	PrimaryExpression	"""%dx%d -> %dx%d is invalid scaling dimension\\n"""		8140666	0					
ANR	8141067	Argument	srcW		8140666	3					
ANR	8141068	Identifier	srcW		8140666	0					
ANR	8141069	Argument	srcH		8140666	4					
ANR	8141070	Identifier	srcH		8140666	0					
ANR	8141071	Argument	dstW		8140666	5					
ANR	8141072	Identifier	dstW		8140666	0					
ANR	8141073	Argument	dstH		8140666	6					
ANR	8141074	Identifier	dstH		8140666	0					
ANR	8141075	ReturnStatement	return AVERROR ( EINVAL ) ;	147:8:2763:2785	8140666	1	True				
ANR	8141076	CallExpression	AVERROR ( EINVAL )		8140666	0					
ANR	8141077	Callee	AVERROR		8140666	0					
ANR	8141078	Identifier	AVERROR		8140666	0					
ANR	8141079	ArgumentList	EINVAL		8140666	1					
ANR	8141080	Argument	EINVAL		8140666	0					
ANR	8141081	Identifier	EINVAL		8140666	0					
ANR	8141082	IfStatement	if ( ! dstFilter )		8140666	24					
ANR	8141083	Condition	! dstFilter	153:8:2805:2814	8140666	0	True				
ANR	8141084	UnaryOperationExpression	! dstFilter		8140666	0					
ANR	8141085	UnaryOperator	!		8140666	0					
ANR	8141086	Identifier	dstFilter		8140666	1					
ANR	8141087	ExpressionStatement	dstFilter = & dummyFilter	155:8:2826:2850	8140666	1	True				
ANR	8141088	AssignmentExpression	dstFilter = & dummyFilter		8140666	0		=			
ANR	8141089	Identifier	dstFilter		8140666	0					
ANR	8141090	UnaryOperationExpression	& dummyFilter		8140666	1					
ANR	8141091	UnaryOperator	&		8140666	0					
ANR	8141092	Identifier	dummyFilter		8140666	1					
ANR	8141093	IfStatement	if ( ! srcFilter )		8140666	25					
ANR	8141094	Condition	! srcFilter	157:8:2861:2870	8140666	0	True				
ANR	8141095	UnaryOperationExpression	! srcFilter		8140666	0					
ANR	8141096	UnaryOperator	!		8140666	0					
ANR	8141097	Identifier	srcFilter		8140666	1					
ANR	8141098	ExpressionStatement	srcFilter = & dummyFilter	159:8:2882:2906	8140666	1	True				
ANR	8141099	AssignmentExpression	srcFilter = & dummyFilter		8140666	0		=			
ANR	8141100	Identifier	srcFilter		8140666	0					
ANR	8141101	UnaryOperationExpression	& dummyFilter		8140666	1					
ANR	8141102	UnaryOperator	&		8140666	0					
ANR	8141103	Identifier	dummyFilter		8140666	1					
ANR	8141104	ExpressionStatement	c -> lumXInc = ( ( ( int64_t ) srcW << 16 ) + ( dstW >> 1 ) ) / dstW	163:4:2915:2977	8140666	26	True				
ANR	8141105	AssignmentExpression	c -> lumXInc = ( ( ( int64_t ) srcW << 16 ) + ( dstW >> 1 ) ) / dstW		8140666	0		=			
ANR	8141106	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8141107	Identifier	c		8140666	0					
ANR	8141108	Identifier	lumXInc		8140666	1					
ANR	8141109	MultiplicativeExpression	( ( ( int64_t ) srcW << 16 ) + ( dstW >> 1 ) ) / dstW		8140666	1		/			
ANR	8141110	AdditiveExpression	( ( int64_t ) srcW << 16 ) + ( dstW >> 1 )		8140666	0		+			
ANR	8141111	ShiftExpression	( int64_t ) srcW << 16		8140666	0		<<			
ANR	8141112	CastExpression	( int64_t ) srcW		8140666	0					
ANR	8141113	CastTarget	int64_t		8140666	0					
ANR	8141114	Identifier	srcW		8140666	1					
ANR	8141115	PrimaryExpression	16		8140666	1					
ANR	8141116	ShiftExpression	dstW >> 1		8140666	1		>>			
ANR	8141117	Identifier	dstW		8140666	0					
ANR	8141118	PrimaryExpression	1		8140666	1					
ANR	8141119	Identifier	dstW		8140666	1					
ANR	8141120	ExpressionStatement	c -> lumYInc = ( ( ( int64_t ) srcH << 16 ) + ( dstH >> 1 ) ) / dstH	165:4:2984:3046	8140666	27	True				
ANR	8141121	AssignmentExpression	c -> lumYInc = ( ( ( int64_t ) srcH << 16 ) + ( dstH >> 1 ) ) / dstH		8140666	0		=			
ANR	8141122	PtrMemberAccess	c -> lumYInc		8140666	0					
ANR	8141123	Identifier	c		8140666	0					
ANR	8141124	Identifier	lumYInc		8140666	1					
ANR	8141125	MultiplicativeExpression	( ( ( int64_t ) srcH << 16 ) + ( dstH >> 1 ) ) / dstH		8140666	1		/			
ANR	8141126	AdditiveExpression	( ( int64_t ) srcH << 16 ) + ( dstH >> 1 )		8140666	0		+			
ANR	8141127	ShiftExpression	( int64_t ) srcH << 16		8140666	0		<<			
ANR	8141128	CastExpression	( int64_t ) srcH		8140666	0					
ANR	8141129	CastTarget	int64_t		8140666	0					
ANR	8141130	Identifier	srcH		8140666	1					
ANR	8141131	PrimaryExpression	16		8140666	1					
ANR	8141132	ShiftExpression	dstH >> 1		8140666	1		>>			
ANR	8141133	Identifier	dstH		8140666	0					
ANR	8141134	PrimaryExpression	1		8140666	1					
ANR	8141135	Identifier	dstH		8140666	1					
ANR	8141136	ExpressionStatement	c -> dstFormatBpp = av_get_bits_per_pixel ( desc_dst )	167:4:3053:3102	8140666	28	True				
ANR	8141137	AssignmentExpression	c -> dstFormatBpp = av_get_bits_per_pixel ( desc_dst )		8140666	0		=			
ANR	8141138	PtrMemberAccess	c -> dstFormatBpp		8140666	0					
ANR	8141139	Identifier	c		8140666	0					
ANR	8141140	Identifier	dstFormatBpp		8140666	1					
ANR	8141141	CallExpression	av_get_bits_per_pixel ( desc_dst )		8140666	1					
ANR	8141142	Callee	av_get_bits_per_pixel		8140666	0					
ANR	8141143	Identifier	av_get_bits_per_pixel		8140666	0					
ANR	8141144	ArgumentList	desc_dst		8140666	1					
ANR	8141145	Argument	desc_dst		8140666	0					
ANR	8141146	Identifier	desc_dst		8140666	0					
ANR	8141147	ExpressionStatement	c -> srcFormatBpp = av_get_bits_per_pixel ( desc_src )	169:4:3109:3158	8140666	29	True				
ANR	8141148	AssignmentExpression	c -> srcFormatBpp = av_get_bits_per_pixel ( desc_src )		8140666	0		=			
ANR	8141149	PtrMemberAccess	c -> srcFormatBpp		8140666	0					
ANR	8141150	Identifier	c		8140666	0					
ANR	8141151	Identifier	srcFormatBpp		8140666	1					
ANR	8141152	CallExpression	av_get_bits_per_pixel ( desc_src )		8140666	1					
ANR	8141153	Callee	av_get_bits_per_pixel		8140666	0					
ANR	8141154	Identifier	av_get_bits_per_pixel		8140666	0					
ANR	8141155	ArgumentList	desc_src		8140666	1					
ANR	8141156	Argument	desc_src		8140666	0					
ANR	8141157	Identifier	desc_src		8140666	0					
ANR	8141158	Statement	c	171:4:3165:3165	8140666	30	True				
ANR	8141159	Statement	->	171:5:3166:3167	8140666	31	True				
ANR	8141160	Statement	vRounder	171:7:3168:3175	8140666	32	True				
ANR	8141161	Statement	=	171:20:3181:3181	8140666	33	True				
ANR	8141162	Statement	4	171:22:3183:3183	8140666	34	True				
ANR	8141163	Statement	*	171:24:3185:3185	8140666	35	True				
ANR	8141164	Statement	0x0001000100010001UL	171:26:3187:3206	8140666	36	True				
ANR	8141165	ExpressionStatement	L	171:46:3207:3208	8140666	37	True				
ANR	8141166	Identifier	L		8140666	0					
ANR	8141167	ExpressionStatement	usesVFilter = ( srcFilter -> lumV && srcFilter -> lumV -> length > 1 ) || ( srcFilter -> chrV && srcFilter -> chrV -> length > 1 ) || ( dstFilter -> lumV && dstFilter -> lumV -> length > 1 ) || ( dstFilter -> chrV && dstFilter -> chrV -> length > 1 )	175:4:3217:3492	8140666	38	True				
ANR	8141168	AssignmentExpression	usesVFilter = ( srcFilter -> lumV && srcFilter -> lumV -> length > 1 ) || ( srcFilter -> chrV && srcFilter -> chrV -> length > 1 ) || ( dstFilter -> lumV && dstFilter -> lumV -> length > 1 ) || ( dstFilter -> chrV && dstFilter -> chrV -> length > 1 )		8140666	0		=			
ANR	8141169	Identifier	usesVFilter		8140666	0					
ANR	8141170	OrExpression	( srcFilter -> lumV && srcFilter -> lumV -> length > 1 ) || ( srcFilter -> chrV && srcFilter -> chrV -> length > 1 ) || ( dstFilter -> lumV && dstFilter -> lumV -> length > 1 ) || ( dstFilter -> chrV && dstFilter -> chrV -> length > 1 )		8140666	1		||			
ANR	8141171	AndExpression	srcFilter -> lumV && srcFilter -> lumV -> length > 1		8140666	0		&&			
ANR	8141172	PtrMemberAccess	srcFilter -> lumV		8140666	0					
ANR	8141173	Identifier	srcFilter		8140666	0					
ANR	8141174	Identifier	lumV		8140666	1					
ANR	8141175	RelationalExpression	srcFilter -> lumV -> length > 1		8140666	1		>			
ANR	8141176	PtrMemberAccess	srcFilter -> lumV -> length		8140666	0					
ANR	8141177	PtrMemberAccess	srcFilter -> lumV		8140666	0					
ANR	8141178	Identifier	srcFilter		8140666	0					
ANR	8141179	Identifier	lumV		8140666	1					
ANR	8141180	Identifier	length		8140666	1					
ANR	8141181	PrimaryExpression	1		8140666	1					
ANR	8141182	OrExpression	( srcFilter -> chrV && srcFilter -> chrV -> length > 1 ) || ( dstFilter -> lumV && dstFilter -> lumV -> length > 1 ) || ( dstFilter -> chrV && dstFilter -> chrV -> length > 1 )		8140666	1		||			
ANR	8141183	AndExpression	srcFilter -> chrV && srcFilter -> chrV -> length > 1		8140666	0		&&			
ANR	8141184	PtrMemberAccess	srcFilter -> chrV		8140666	0					
ANR	8141185	Identifier	srcFilter		8140666	0					
ANR	8141186	Identifier	chrV		8140666	1					
ANR	8141187	RelationalExpression	srcFilter -> chrV -> length > 1		8140666	1		>			
ANR	8141188	PtrMemberAccess	srcFilter -> chrV -> length		8140666	0					
ANR	8141189	PtrMemberAccess	srcFilter -> chrV		8140666	0					
ANR	8141190	Identifier	srcFilter		8140666	0					
ANR	8141191	Identifier	chrV		8140666	1					
ANR	8141192	Identifier	length		8140666	1					
ANR	8141193	PrimaryExpression	1		8140666	1					
ANR	8141194	OrExpression	( dstFilter -> lumV && dstFilter -> lumV -> length > 1 ) || ( dstFilter -> chrV && dstFilter -> chrV -> length > 1 )		8140666	1		||			
ANR	8141195	AndExpression	dstFilter -> lumV && dstFilter -> lumV -> length > 1		8140666	0		&&			
ANR	8141196	PtrMemberAccess	dstFilter -> lumV		8140666	0					
ANR	8141197	Identifier	dstFilter		8140666	0					
ANR	8141198	Identifier	lumV		8140666	1					
ANR	8141199	RelationalExpression	dstFilter -> lumV -> length > 1		8140666	1		>			
ANR	8141200	PtrMemberAccess	dstFilter -> lumV -> length		8140666	0					
ANR	8141201	PtrMemberAccess	dstFilter -> lumV		8140666	0					
ANR	8141202	Identifier	dstFilter		8140666	0					
ANR	8141203	Identifier	lumV		8140666	1					
ANR	8141204	Identifier	length		8140666	1					
ANR	8141205	PrimaryExpression	1		8140666	1					
ANR	8141206	AndExpression	dstFilter -> chrV && dstFilter -> chrV -> length > 1		8140666	1		&&			
ANR	8141207	PtrMemberAccess	dstFilter -> chrV		8140666	0					
ANR	8141208	Identifier	dstFilter		8140666	0					
ANR	8141209	Identifier	chrV		8140666	1					
ANR	8141210	RelationalExpression	dstFilter -> chrV -> length > 1		8140666	1		>			
ANR	8141211	PtrMemberAccess	dstFilter -> chrV -> length		8140666	0					
ANR	8141212	PtrMemberAccess	dstFilter -> chrV		8140666	0					
ANR	8141213	Identifier	dstFilter		8140666	0					
ANR	8141214	Identifier	chrV		8140666	1					
ANR	8141215	Identifier	length		8140666	1					
ANR	8141216	PrimaryExpression	1		8140666	1					
ANR	8141217	ExpressionStatement	usesHFilter = ( srcFilter -> lumH && srcFilter -> lumH -> length > 1 ) || ( srcFilter -> chrH && srcFilter -> chrH -> length > 1 ) || ( dstFilter -> lumH && dstFilter -> lumH -> length > 1 ) || ( dstFilter -> chrH && dstFilter -> chrH -> length > 1 )	183:4:3499:3774	8140666	39	True				
ANR	8141218	AssignmentExpression	usesHFilter = ( srcFilter -> lumH && srcFilter -> lumH -> length > 1 ) || ( srcFilter -> chrH && srcFilter -> chrH -> length > 1 ) || ( dstFilter -> lumH && dstFilter -> lumH -> length > 1 ) || ( dstFilter -> chrH && dstFilter -> chrH -> length > 1 )		8140666	0		=			
ANR	8141219	Identifier	usesHFilter		8140666	0					
ANR	8141220	OrExpression	( srcFilter -> lumH && srcFilter -> lumH -> length > 1 ) || ( srcFilter -> chrH && srcFilter -> chrH -> length > 1 ) || ( dstFilter -> lumH && dstFilter -> lumH -> length > 1 ) || ( dstFilter -> chrH && dstFilter -> chrH -> length > 1 )		8140666	1		||			
ANR	8141221	AndExpression	srcFilter -> lumH && srcFilter -> lumH -> length > 1		8140666	0		&&			
ANR	8141222	PtrMemberAccess	srcFilter -> lumH		8140666	0					
ANR	8141223	Identifier	srcFilter		8140666	0					
ANR	8141224	Identifier	lumH		8140666	1					
ANR	8141225	RelationalExpression	srcFilter -> lumH -> length > 1		8140666	1		>			
ANR	8141226	PtrMemberAccess	srcFilter -> lumH -> length		8140666	0					
ANR	8141227	PtrMemberAccess	srcFilter -> lumH		8140666	0					
ANR	8141228	Identifier	srcFilter		8140666	0					
ANR	8141229	Identifier	lumH		8140666	1					
ANR	8141230	Identifier	length		8140666	1					
ANR	8141231	PrimaryExpression	1		8140666	1					
ANR	8141232	OrExpression	( srcFilter -> chrH && srcFilter -> chrH -> length > 1 ) || ( dstFilter -> lumH && dstFilter -> lumH -> length > 1 ) || ( dstFilter -> chrH && dstFilter -> chrH -> length > 1 )		8140666	1		||			
ANR	8141233	AndExpression	srcFilter -> chrH && srcFilter -> chrH -> length > 1		8140666	0		&&			
ANR	8141234	PtrMemberAccess	srcFilter -> chrH		8140666	0					
ANR	8141235	Identifier	srcFilter		8140666	0					
ANR	8141236	Identifier	chrH		8140666	1					
ANR	8141237	RelationalExpression	srcFilter -> chrH -> length > 1		8140666	1		>			
ANR	8141238	PtrMemberAccess	srcFilter -> chrH -> length		8140666	0					
ANR	8141239	PtrMemberAccess	srcFilter -> chrH		8140666	0					
ANR	8141240	Identifier	srcFilter		8140666	0					
ANR	8141241	Identifier	chrH		8140666	1					
ANR	8141242	Identifier	length		8140666	1					
ANR	8141243	PrimaryExpression	1		8140666	1					
ANR	8141244	OrExpression	( dstFilter -> lumH && dstFilter -> lumH -> length > 1 ) || ( dstFilter -> chrH && dstFilter -> chrH -> length > 1 )		8140666	1		||			
ANR	8141245	AndExpression	dstFilter -> lumH && dstFilter -> lumH -> length > 1		8140666	0		&&			
ANR	8141246	PtrMemberAccess	dstFilter -> lumH		8140666	0					
ANR	8141247	Identifier	dstFilter		8140666	0					
ANR	8141248	Identifier	lumH		8140666	1					
ANR	8141249	RelationalExpression	dstFilter -> lumH -> length > 1		8140666	1		>			
ANR	8141250	PtrMemberAccess	dstFilter -> lumH -> length		8140666	0					
ANR	8141251	PtrMemberAccess	dstFilter -> lumH		8140666	0					
ANR	8141252	Identifier	dstFilter		8140666	0					
ANR	8141253	Identifier	lumH		8140666	1					
ANR	8141254	Identifier	length		8140666	1					
ANR	8141255	PrimaryExpression	1		8140666	1					
ANR	8141256	AndExpression	dstFilter -> chrH && dstFilter -> chrH -> length > 1		8140666	1		&&			
ANR	8141257	PtrMemberAccess	dstFilter -> chrH		8140666	0					
ANR	8141258	Identifier	dstFilter		8140666	0					
ANR	8141259	Identifier	chrH		8140666	1					
ANR	8141260	RelationalExpression	dstFilter -> chrH -> length > 1		8140666	1		>			
ANR	8141261	PtrMemberAccess	dstFilter -> chrH -> length		8140666	0					
ANR	8141262	PtrMemberAccess	dstFilter -> chrH		8140666	0					
ANR	8141263	Identifier	dstFilter		8140666	0					
ANR	8141264	Identifier	chrH		8140666	1					
ANR	8141265	Identifier	length		8140666	1					
ANR	8141266	PrimaryExpression	1		8140666	1					
ANR	8141267	ExpressionStatement	"getSubSampleFactors ( & c -> chrSrcHSubSample , & c -> chrSrcVSubSample , srcFormat )"	193:4:3783:3857	8140666	40	True				
ANR	8141268	CallExpression	"getSubSampleFactors ( & c -> chrSrcHSubSample , & c -> chrSrcVSubSample , srcFormat )"		8140666	0					
ANR	8141269	Callee	getSubSampleFactors		8140666	0					
ANR	8141270	Identifier	getSubSampleFactors		8140666	0					
ANR	8141271	ArgumentList	& c -> chrSrcHSubSample		8140666	1					
ANR	8141272	Argument	& c -> chrSrcHSubSample		8140666	0					
ANR	8141273	UnaryOperationExpression	& c -> chrSrcHSubSample		8140666	0					
ANR	8141274	UnaryOperator	&		8140666	0					
ANR	8141275	PtrMemberAccess	c -> chrSrcHSubSample		8140666	1					
ANR	8141276	Identifier	c		8140666	0					
ANR	8141277	Identifier	chrSrcHSubSample		8140666	1					
ANR	8141278	Argument	& c -> chrSrcVSubSample		8140666	1					
ANR	8141279	UnaryOperationExpression	& c -> chrSrcVSubSample		8140666	0					
ANR	8141280	UnaryOperator	&		8140666	0					
ANR	8141281	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8141282	Identifier	c		8140666	0					
ANR	8141283	Identifier	chrSrcVSubSample		8140666	1					
ANR	8141284	Argument	srcFormat		8140666	2					
ANR	8141285	Identifier	srcFormat		8140666	0					
ANR	8141286	ExpressionStatement	"getSubSampleFactors ( & c -> chrDstHSubSample , & c -> chrDstVSubSample , dstFormat )"	195:4:3864:3938	8140666	41	True				
ANR	8141287	CallExpression	"getSubSampleFactors ( & c -> chrDstHSubSample , & c -> chrDstVSubSample , dstFormat )"		8140666	0					
ANR	8141288	Callee	getSubSampleFactors		8140666	0					
ANR	8141289	Identifier	getSubSampleFactors		8140666	0					
ANR	8141290	ArgumentList	& c -> chrDstHSubSample		8140666	1					
ANR	8141291	Argument	& c -> chrDstHSubSample		8140666	0					
ANR	8141292	UnaryOperationExpression	& c -> chrDstHSubSample		8140666	0					
ANR	8141293	UnaryOperator	&		8140666	0					
ANR	8141294	PtrMemberAccess	c -> chrDstHSubSample		8140666	1					
ANR	8141295	Identifier	c		8140666	0					
ANR	8141296	Identifier	chrDstHSubSample		8140666	1					
ANR	8141297	Argument	& c -> chrDstVSubSample		8140666	1					
ANR	8141298	UnaryOperationExpression	& c -> chrDstVSubSample		8140666	0					
ANR	8141299	UnaryOperator	&		8140666	0					
ANR	8141300	PtrMemberAccess	c -> chrDstVSubSample		8140666	1					
ANR	8141301	Identifier	c		8140666	0					
ANR	8141302	Identifier	chrDstVSubSample		8140666	1					
ANR	8141303	Argument	dstFormat		8140666	2					
ANR	8141304	Identifier	dstFormat		8140666	0					
ANR	8141305	IfStatement	if ( isPlanarRGB ( dstFormat ) )		8140666	42					
ANR	8141306	Condition	isPlanarRGB ( dstFormat )	199:8:3951:3972	8140666	0	True				
ANR	8141307	CallExpression	isPlanarRGB ( dstFormat )		8140666	0					
ANR	8141308	Callee	isPlanarRGB		8140666	0					
ANR	8141309	Identifier	isPlanarRGB		8140666	0					
ANR	8141310	ArgumentList	dstFormat		8140666	1					
ANR	8141311	Argument	dstFormat		8140666	0					
ANR	8141312	Identifier	dstFormat		8140666	0					
ANR	8141313	CompoundStatement		195:32:3855:3855	8140666	1					
ANR	8141314	IfStatement	if ( ! ( flags & SWS_FULL_CHR_H_INT ) )		8140666	0					
ANR	8141315	Condition	! ( flags & SWS_FULL_CHR_H_INT )	201:12:3990:4018	8140666	0	True				
ANR	8141316	UnaryOperationExpression	! ( flags & SWS_FULL_CHR_H_INT )		8140666	0					
ANR	8141317	UnaryOperator	!		8140666	0					
ANR	8141318	BitAndExpression	flags & SWS_FULL_CHR_H_INT		8140666	1		&			
ANR	8141319	Identifier	flags		8140666	0					
ANR	8141320	Identifier	SWS_FULL_CHR_H_INT		8140666	1					
ANR	8141321	CompoundStatement		197:43:3901:3901	8140666	1					
ANR	8141322	ExpressionStatement	"av_log ( c , AV_LOG_DEBUG , ""%s output is not supported with half chroma resolution, switching to full\\n"" , av_get_pix_fmt_name ( dstFormat ) )"	203:12:4036:4210	8140666	0	True				
ANR	8141323	CallExpression	"av_log ( c , AV_LOG_DEBUG , ""%s output is not supported with half chroma resolution, switching to full\\n"" , av_get_pix_fmt_name ( dstFormat ) )"		8140666	0					
ANR	8141324	Callee	av_log		8140666	0					
ANR	8141325	Identifier	av_log		8140666	0					
ANR	8141326	ArgumentList	c		8140666	1					
ANR	8141327	Argument	c		8140666	0					
ANR	8141328	Identifier	c		8140666	0					
ANR	8141329	Argument	AV_LOG_DEBUG		8140666	1					
ANR	8141330	Identifier	AV_LOG_DEBUG		8140666	0					
ANR	8141331	Argument	"""%s output is not supported with half chroma resolution, switching to full\\n"""		8140666	2					
ANR	8141332	PrimaryExpression	"""%s output is not supported with half chroma resolution, switching to full\\n"""		8140666	0					
ANR	8141333	Argument	av_get_pix_fmt_name ( dstFormat )		8140666	3					
ANR	8141334	CallExpression	av_get_pix_fmt_name ( dstFormat )		8140666	0					
ANR	8141335	Callee	av_get_pix_fmt_name		8140666	0					
ANR	8141336	Identifier	av_get_pix_fmt_name		8140666	0					
ANR	8141337	ArgumentList	dstFormat		8140666	1					
ANR	8141338	Argument	dstFormat		8140666	0					
ANR	8141339	Identifier	dstFormat		8140666	0					
ANR	8141340	ExpressionStatement	flags |= SWS_FULL_CHR_H_INT	209:12:4225:4254	8140666	1	True				
ANR	8141341	AssignmentExpression	flags |= SWS_FULL_CHR_H_INT		8140666	0		|=			
ANR	8141342	Identifier	flags		8140666	0					
ANR	8141343	Identifier	SWS_FULL_CHR_H_INT		8140666	1					
ANR	8141344	ExpressionStatement	c -> flags = flags	211:12:4269:4285	8140666	2	True				
ANR	8141345	AssignmentExpression	c -> flags = flags		8140666	0		=			
ANR	8141346	PtrMemberAccess	c -> flags		8140666	0					
ANR	8141347	Identifier	c		8140666	0					
ANR	8141348	Identifier	flags		8140666	1					
ANR	8141349	Identifier	flags		8140666	1					
ANR	8141350	IfStatement	if ( flags & SWS_FULL_CHR_H_INT && isAnyRGB ( dstFormat ) && ! isPlanarRGB ( dstFormat ) && dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24 )		8140666	43					
ANR	8141351	Condition	flags & SWS_FULL_CHR_H_INT && isAnyRGB ( dstFormat ) && ! isPlanarRGB ( dstFormat ) && dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24	223:8:4413:4768	8140666	0	True				
ANR	8141352	AndExpression	flags & SWS_FULL_CHR_H_INT && isAnyRGB ( dstFormat ) && ! isPlanarRGB ( dstFormat ) && dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	0		&&			
ANR	8141353	BitAndExpression	flags & SWS_FULL_CHR_H_INT		8140666	0		&			
ANR	8141354	Identifier	flags		8140666	0					
ANR	8141355	Identifier	SWS_FULL_CHR_H_INT		8140666	1					
ANR	8141356	AndExpression	isAnyRGB ( dstFormat ) && ! isPlanarRGB ( dstFormat ) && dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141357	CallExpression	isAnyRGB ( dstFormat )		8140666	0					
ANR	8141358	Callee	isAnyRGB		8140666	0					
ANR	8141359	Identifier	isAnyRGB		8140666	0					
ANR	8141360	ArgumentList	dstFormat		8140666	1					
ANR	8141361	Argument	dstFormat		8140666	0					
ANR	8141362	Identifier	dstFormat		8140666	0					
ANR	8141363	AndExpression	! isPlanarRGB ( dstFormat ) && dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141364	UnaryOperationExpression	! isPlanarRGB ( dstFormat )		8140666	0					
ANR	8141365	UnaryOperator	!		8140666	0					
ANR	8141366	CallExpression	isPlanarRGB ( dstFormat )		8140666	1					
ANR	8141367	Callee	isPlanarRGB		8140666	0					
ANR	8141368	Identifier	isPlanarRGB		8140666	0					
ANR	8141369	ArgumentList	dstFormat		8140666	1					
ANR	8141370	Argument	dstFormat		8140666	0					
ANR	8141371	Identifier	dstFormat		8140666	0					
ANR	8141372	AndExpression	dstFormat != AV_PIX_FMT_RGBA && dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141373	EqualityExpression	dstFormat != AV_PIX_FMT_RGBA		8140666	0		!=			
ANR	8141374	Identifier	dstFormat		8140666	0					
ANR	8141375	Identifier	AV_PIX_FMT_RGBA		8140666	1					
ANR	8141376	AndExpression	dstFormat != AV_PIX_FMT_ARGB && dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141377	EqualityExpression	dstFormat != AV_PIX_FMT_ARGB		8140666	0		!=			
ANR	8141378	Identifier	dstFormat		8140666	0					
ANR	8141379	Identifier	AV_PIX_FMT_ARGB		8140666	1					
ANR	8141380	AndExpression	dstFormat != AV_PIX_FMT_BGRA && dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141381	EqualityExpression	dstFormat != AV_PIX_FMT_BGRA		8140666	0		!=			
ANR	8141382	Identifier	dstFormat		8140666	0					
ANR	8141383	Identifier	AV_PIX_FMT_BGRA		8140666	1					
ANR	8141384	AndExpression	dstFormat != AV_PIX_FMT_ABGR && dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141385	EqualityExpression	dstFormat != AV_PIX_FMT_ABGR		8140666	0		!=			
ANR	8141386	Identifier	dstFormat		8140666	0					
ANR	8141387	Identifier	AV_PIX_FMT_ABGR		8140666	1					
ANR	8141388	AndExpression	dstFormat != AV_PIX_FMT_RGB24 && dstFormat != AV_PIX_FMT_BGR24		8140666	1		&&			
ANR	8141389	EqualityExpression	dstFormat != AV_PIX_FMT_RGB24		8140666	0		!=			
ANR	8141390	Identifier	dstFormat		8140666	0					
ANR	8141391	Identifier	AV_PIX_FMT_RGB24		8140666	1					
ANR	8141392	EqualityExpression	dstFormat != AV_PIX_FMT_BGR24		8140666	1		!=			
ANR	8141393	Identifier	dstFormat		8140666	0					
ANR	8141394	Identifier	AV_PIX_FMT_BGR24		8140666	1					
ANR	8141395	CompoundStatement		235:39:4651:4651	8140666	1					
ANR	8141396	ExpressionStatement	"av_log ( c , AV_LOG_ERROR , ""full chroma interpolation for destination format '%s' not yet implemented\\n"" , sws_format_name ( dstFormat ) )"	241:8:4782:4944	8140666	0	True				
ANR	8141397	CallExpression	"av_log ( c , AV_LOG_ERROR , ""full chroma interpolation for destination format '%s' not yet implemented\\n"" , sws_format_name ( dstFormat ) )"		8140666	0					
ANR	8141398	Callee	av_log		8140666	0					
ANR	8141399	Identifier	av_log		8140666	0					
ANR	8141400	ArgumentList	c		8140666	1					
ANR	8141401	Argument	c		8140666	0					
ANR	8141402	Identifier	c		8140666	0					
ANR	8141403	Argument	AV_LOG_ERROR		8140666	1					
ANR	8141404	Identifier	AV_LOG_ERROR		8140666	0					
ANR	8141405	Argument	"""full chroma interpolation for destination format '%s' not yet implemented\\n"""		8140666	2					
ANR	8141406	PrimaryExpression	"""full chroma interpolation for destination format '%s' not yet implemented\\n"""		8140666	0					
ANR	8141407	Argument	sws_format_name ( dstFormat )		8140666	3					
ANR	8141408	CallExpression	sws_format_name ( dstFormat )		8140666	0					
ANR	8141409	Callee	sws_format_name		8140666	0					
ANR	8141410	Identifier	sws_format_name		8140666	0					
ANR	8141411	ArgumentList	dstFormat		8140666	1					
ANR	8141412	Argument	dstFormat		8140666	0					
ANR	8141413	Identifier	dstFormat		8140666	0					
ANR	8141414	ExpressionStatement	flags &= ~SWS_FULL_CHR_H_INT	247:8:4955:4985	8140666	1	True				
ANR	8141415	AssignmentExpression	flags &= ~SWS_FULL_CHR_H_INT		8140666	0		&=			
ANR	8141416	Identifier	flags		8140666	0					
ANR	8141417	Identifier	~SWS_FULL_CHR_H_INT		8140666	1					
ANR	8141418	ExpressionStatement	c -> flags = flags	249:8:4996:5012	8140666	2	True				
ANR	8141419	AssignmentExpression	c -> flags = flags		8140666	0		=			
ANR	8141420	PtrMemberAccess	c -> flags		8140666	0					
ANR	8141421	Identifier	c		8140666	0					
ANR	8141422	Identifier	flags		8140666	1					
ANR	8141423	Identifier	flags		8140666	1					
ANR	8141424	IfStatement	if ( isAnyRGB ( dstFormat ) && ! ( flags & SWS_FULL_CHR_H_INT ) )		8140666	44					
ANR	8141425	Condition	isAnyRGB ( dstFormat ) && ! ( flags & SWS_FULL_CHR_H_INT )	253:8:5030:5081	8140666	0	True				
ANR	8141426	AndExpression	isAnyRGB ( dstFormat ) && ! ( flags & SWS_FULL_CHR_H_INT )		8140666	0		&&			
ANR	8141427	CallExpression	isAnyRGB ( dstFormat )		8140666	0					
ANR	8141428	Callee	isAnyRGB		8140666	0					
ANR	8141429	Identifier	isAnyRGB		8140666	0					
ANR	8141430	ArgumentList	dstFormat		8140666	1					
ANR	8141431	Argument	dstFormat		8140666	0					
ANR	8141432	Identifier	dstFormat		8140666	0					
ANR	8141433	UnaryOperationExpression	! ( flags & SWS_FULL_CHR_H_INT )		8140666	1					
ANR	8141434	UnaryOperator	!		8140666	0					
ANR	8141435	BitAndExpression	flags & SWS_FULL_CHR_H_INT		8140666	1		&			
ANR	8141436	Identifier	flags		8140666	0					
ANR	8141437	Identifier	SWS_FULL_CHR_H_INT		8140666	1					
ANR	8141438	ExpressionStatement	c -> chrDstHSubSample = 1	255:8:5093:5116	8140666	1	True				
ANR	8141439	AssignmentExpression	c -> chrDstHSubSample = 1		8140666	0		=			
ANR	8141440	PtrMemberAccess	c -> chrDstHSubSample		8140666	0					
ANR	8141441	Identifier	c		8140666	0					
ANR	8141442	Identifier	chrDstHSubSample		8140666	1					
ANR	8141443	PrimaryExpression	1		8140666	1					
ANR	8141444	ExpressionStatement	c -> vChrDrop = ( flags & SWS_SRC_V_CHR_DROP_MASK ) >> SWS_SRC_V_CHR_DROP_SHIFT	261:4:5177:5289	8140666	45	True				
ANR	8141445	AssignmentExpression	c -> vChrDrop = ( flags & SWS_SRC_V_CHR_DROP_MASK ) >> SWS_SRC_V_CHR_DROP_SHIFT		8140666	0		=			
ANR	8141446	PtrMemberAccess	c -> vChrDrop		8140666	0					
ANR	8141447	Identifier	c		8140666	0					
ANR	8141448	Identifier	vChrDrop		8140666	1					
ANR	8141449	ShiftExpression	( flags & SWS_SRC_V_CHR_DROP_MASK ) >> SWS_SRC_V_CHR_DROP_SHIFT		8140666	1		>>			
ANR	8141450	BitAndExpression	flags & SWS_SRC_V_CHR_DROP_MASK		8140666	0		&			
ANR	8141451	Identifier	flags		8140666	0					
ANR	8141452	Identifier	SWS_SRC_V_CHR_DROP_MASK		8140666	1					
ANR	8141453	Identifier	SWS_SRC_V_CHR_DROP_SHIFT		8140666	1					
ANR	8141454	ExpressionStatement	c -> chrSrcVSubSample += c -> vChrDrop	265:4:5296:5330	8140666	46	True				
ANR	8141455	AssignmentExpression	c -> chrSrcVSubSample += c -> vChrDrop		8140666	0		+=			
ANR	8141456	PtrMemberAccess	c -> chrSrcVSubSample		8140666	0					
ANR	8141457	Identifier	c		8140666	0					
ANR	8141458	Identifier	chrSrcVSubSample		8140666	1					
ANR	8141459	PtrMemberAccess	c -> vChrDrop		8140666	1					
ANR	8141460	Identifier	c		8140666	0					
ANR	8141461	Identifier	vChrDrop		8140666	1					
ANR	8141462	IfStatement	if ( isAnyRGB ( srcFormat ) && ! ( flags & SWS_FULL_CHR_H_INP ) && srcFormat != AV_PIX_FMT_RGB8 && srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) ) )		8140666	47					
ANR	8141463	Condition	isAnyRGB ( srcFormat ) && ! ( flags & SWS_FULL_CHR_H_INP ) && srcFormat != AV_PIX_FMT_RGB8 && srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )	273:8:5438:6231	8140666	0	True				
ANR	8141464	AndExpression	isAnyRGB ( srcFormat ) && ! ( flags & SWS_FULL_CHR_H_INP ) && srcFormat != AV_PIX_FMT_RGB8 && srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	0		&&			
ANR	8141465	CallExpression	isAnyRGB ( srcFormat )		8140666	0					
ANR	8141466	Callee	isAnyRGB		8140666	0					
ANR	8141467	Identifier	isAnyRGB		8140666	0					
ANR	8141468	ArgumentList	srcFormat		8140666	1					
ANR	8141469	Argument	srcFormat		8140666	0					
ANR	8141470	Identifier	srcFormat		8140666	0					
ANR	8141471	AndExpression	! ( flags & SWS_FULL_CHR_H_INP ) && srcFormat != AV_PIX_FMT_RGB8 && srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141472	UnaryOperationExpression	! ( flags & SWS_FULL_CHR_H_INP )		8140666	0					
ANR	8141473	UnaryOperator	!		8140666	0					
ANR	8141474	BitAndExpression	flags & SWS_FULL_CHR_H_INP		8140666	1		&			
ANR	8141475	Identifier	flags		8140666	0					
ANR	8141476	Identifier	SWS_FULL_CHR_H_INP		8140666	1					
ANR	8141477	AndExpression	srcFormat != AV_PIX_FMT_RGB8 && srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141478	EqualityExpression	srcFormat != AV_PIX_FMT_RGB8		8140666	0		!=			
ANR	8141479	Identifier	srcFormat		8140666	0					
ANR	8141480	Identifier	AV_PIX_FMT_RGB8		8140666	1					
ANR	8141481	AndExpression	srcFormat != AV_PIX_FMT_BGR8 && srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141482	EqualityExpression	srcFormat != AV_PIX_FMT_BGR8		8140666	0		!=			
ANR	8141483	Identifier	srcFormat		8140666	0					
ANR	8141484	Identifier	AV_PIX_FMT_BGR8		8140666	1					
ANR	8141485	AndExpression	srcFormat != AV_PIX_FMT_RGB4 && srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141486	EqualityExpression	srcFormat != AV_PIX_FMT_RGB4		8140666	0		!=			
ANR	8141487	Identifier	srcFormat		8140666	0					
ANR	8141488	Identifier	AV_PIX_FMT_RGB4		8140666	1					
ANR	8141489	AndExpression	srcFormat != AV_PIX_FMT_BGR4 && srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141490	EqualityExpression	srcFormat != AV_PIX_FMT_BGR4		8140666	0		!=			
ANR	8141491	Identifier	srcFormat		8140666	0					
ANR	8141492	Identifier	AV_PIX_FMT_BGR4		8140666	1					
ANR	8141493	AndExpression	srcFormat != AV_PIX_FMT_RGB4_BYTE && srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141494	EqualityExpression	srcFormat != AV_PIX_FMT_RGB4_BYTE		8140666	0		!=			
ANR	8141495	Identifier	srcFormat		8140666	0					
ANR	8141496	Identifier	AV_PIX_FMT_RGB4_BYTE		8140666	1					
ANR	8141497	AndExpression	srcFormat != AV_PIX_FMT_BGR4_BYTE && srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141498	EqualityExpression	srcFormat != AV_PIX_FMT_BGR4_BYTE		8140666	0		!=			
ANR	8141499	Identifier	srcFormat		8140666	0					
ANR	8141500	Identifier	AV_PIX_FMT_BGR4_BYTE		8140666	1					
ANR	8141501	AndExpression	srcFormat != AV_PIX_FMT_GBRP9BE && srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141502	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP9BE		8140666	0		!=			
ANR	8141503	Identifier	srcFormat		8140666	0					
ANR	8141504	Identifier	AV_PIX_FMT_GBRP9BE		8140666	1					
ANR	8141505	AndExpression	srcFormat != AV_PIX_FMT_GBRP9LE && srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141506	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP9LE		8140666	0		!=			
ANR	8141507	Identifier	srcFormat		8140666	0					
ANR	8141508	Identifier	AV_PIX_FMT_GBRP9LE		8140666	1					
ANR	8141509	AndExpression	srcFormat != AV_PIX_FMT_GBRP10BE && srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141510	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP10BE		8140666	0		!=			
ANR	8141511	Identifier	srcFormat		8140666	0					
ANR	8141512	Identifier	AV_PIX_FMT_GBRP10BE		8140666	1					
ANR	8141513	AndExpression	srcFormat != AV_PIX_FMT_GBRP10LE && srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141514	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP10LE		8140666	0		!=			
ANR	8141515	Identifier	srcFormat		8140666	0					
ANR	8141516	Identifier	AV_PIX_FMT_GBRP10LE		8140666	1					
ANR	8141517	AndExpression	srcFormat != AV_PIX_FMT_GBRAP10BE && srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141518	EqualityExpression	srcFormat != AV_PIX_FMT_GBRAP10BE		8140666	0		!=			
ANR	8141519	Identifier	srcFormat		8140666	0					
ANR	8141520	Identifier	AV_PIX_FMT_GBRAP10BE		8140666	1					
ANR	8141521	AndExpression	srcFormat != AV_PIX_FMT_GBRAP10LE && srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141522	EqualityExpression	srcFormat != AV_PIX_FMT_GBRAP10LE		8140666	0		!=			
ANR	8141523	Identifier	srcFormat		8140666	0					
ANR	8141524	Identifier	AV_PIX_FMT_GBRAP10LE		8140666	1					
ANR	8141525	AndExpression	srcFormat != AV_PIX_FMT_GBRP12BE && srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141526	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP12BE		8140666	0		!=			
ANR	8141527	Identifier	srcFormat		8140666	0					
ANR	8141528	Identifier	AV_PIX_FMT_GBRP12BE		8140666	1					
ANR	8141529	AndExpression	srcFormat != AV_PIX_FMT_GBRP12LE && srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141530	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP12LE		8140666	0		!=			
ANR	8141531	Identifier	srcFormat		8140666	0					
ANR	8141532	Identifier	AV_PIX_FMT_GBRP12LE		8140666	1					
ANR	8141533	AndExpression	srcFormat != AV_PIX_FMT_GBRP16BE && srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141534	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP16BE		8140666	0		!=			
ANR	8141535	Identifier	srcFormat		8140666	0					
ANR	8141536	Identifier	AV_PIX_FMT_GBRP16BE		8140666	1					
ANR	8141537	AndExpression	srcFormat != AV_PIX_FMT_GBRP16LE && ( ( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR ) )		8140666	1		&&			
ANR	8141538	EqualityExpression	srcFormat != AV_PIX_FMT_GBRP16LE		8140666	0		!=			
ANR	8141539	Identifier	srcFormat		8140666	0					
ANR	8141540	Identifier	AV_PIX_FMT_GBRP16LE		8140666	1					
ANR	8141541	OrExpression	( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 ) || ( flags & SWS_FAST_BILINEAR )		8140666	1		||			
ANR	8141542	RelationalExpression	( dstW >> c -> chrDstHSubSample ) <= ( srcW >> 1 )		8140666	0		<=			
ANR	8141543	ShiftExpression	dstW >> c -> chrDstHSubSample		8140666	0		>>			
ANR	8141544	Identifier	dstW		8140666	0					
ANR	8141545	PtrMemberAccess	c -> chrDstHSubSample		8140666	1					
ANR	8141546	Identifier	c		8140666	0					
ANR	8141547	Identifier	chrDstHSubSample		8140666	1					
ANR	8141548	ShiftExpression	srcW >> 1		8140666	1		>>			
ANR	8141549	Identifier	srcW		8140666	0					
ANR	8141550	PrimaryExpression	1		8140666	1					
ANR	8141551	BitAndExpression	flags & SWS_FAST_BILINEAR		8140666	1		&			
ANR	8141552	Identifier	flags		8140666	0					
ANR	8141553	Identifier	SWS_FAST_BILINEAR		8140666	1					
ANR	8141554	ExpressionStatement	c -> chrSrcHSubSample = 1	295:8:6243:6266	8140666	1	True				
ANR	8141555	AssignmentExpression	c -> chrSrcHSubSample = 1		8140666	0		=			
ANR	8141556	PtrMemberAccess	c -> chrSrcHSubSample		8140666	0					
ANR	8141557	Identifier	c		8140666	0					
ANR	8141558	Identifier	chrSrcHSubSample		8140666	1					
ANR	8141559	PrimaryExpression	1		8140666	1					
ANR	8141560	ExpressionStatement	"c -> chrSrcW = AV_CEIL_RSHIFT ( srcW , c -> chrSrcHSubSample )"	301:4:6347:6401	8140666	48	True				
ANR	8141561	AssignmentExpression	"c -> chrSrcW = AV_CEIL_RSHIFT ( srcW , c -> chrSrcHSubSample )"		8140666	0		=			
ANR	8141562	PtrMemberAccess	c -> chrSrcW		8140666	0					
ANR	8141563	Identifier	c		8140666	0					
ANR	8141564	Identifier	chrSrcW		8140666	1					
ANR	8141565	CallExpression	"AV_CEIL_RSHIFT ( srcW , c -> chrSrcHSubSample )"		8140666	1					
ANR	8141566	Callee	AV_CEIL_RSHIFT		8140666	0					
ANR	8141567	Identifier	AV_CEIL_RSHIFT		8140666	0					
ANR	8141568	ArgumentList	srcW		8140666	1					
ANR	8141569	Argument	srcW		8140666	0					
ANR	8141570	Identifier	srcW		8140666	0					
ANR	8141571	Argument	c -> chrSrcHSubSample		8140666	1					
ANR	8141572	PtrMemberAccess	c -> chrSrcHSubSample		8140666	0					
ANR	8141573	Identifier	c		8140666	0					
ANR	8141574	Identifier	chrSrcHSubSample		8140666	1					
ANR	8141575	ExpressionStatement	"c -> chrSrcH = AV_CEIL_RSHIFT ( srcH , c -> chrSrcVSubSample )"	303:4:6408:6462	8140666	49	True				
ANR	8141576	AssignmentExpression	"c -> chrSrcH = AV_CEIL_RSHIFT ( srcH , c -> chrSrcVSubSample )"		8140666	0		=			
ANR	8141577	PtrMemberAccess	c -> chrSrcH		8140666	0					
ANR	8141578	Identifier	c		8140666	0					
ANR	8141579	Identifier	chrSrcH		8140666	1					
ANR	8141580	CallExpression	"AV_CEIL_RSHIFT ( srcH , c -> chrSrcVSubSample )"		8140666	1					
ANR	8141581	Callee	AV_CEIL_RSHIFT		8140666	0					
ANR	8141582	Identifier	AV_CEIL_RSHIFT		8140666	0					
ANR	8141583	ArgumentList	srcH		8140666	1					
ANR	8141584	Argument	srcH		8140666	0					
ANR	8141585	Identifier	srcH		8140666	0					
ANR	8141586	Argument	c -> chrSrcVSubSample		8140666	1					
ANR	8141587	PtrMemberAccess	c -> chrSrcVSubSample		8140666	0					
ANR	8141588	Identifier	c		8140666	0					
ANR	8141589	Identifier	chrSrcVSubSample		8140666	1					
ANR	8141590	ExpressionStatement	"c -> chrDstW = AV_CEIL_RSHIFT ( dstW , c -> chrDstHSubSample )"	305:4:6469:6523	8140666	50	True				
ANR	8141591	AssignmentExpression	"c -> chrDstW = AV_CEIL_RSHIFT ( dstW , c -> chrDstHSubSample )"		8140666	0		=			
ANR	8141592	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8141593	Identifier	c		8140666	0					
ANR	8141594	Identifier	chrDstW		8140666	1					
ANR	8141595	CallExpression	"AV_CEIL_RSHIFT ( dstW , c -> chrDstHSubSample )"		8140666	1					
ANR	8141596	Callee	AV_CEIL_RSHIFT		8140666	0					
ANR	8141597	Identifier	AV_CEIL_RSHIFT		8140666	0					
ANR	8141598	ArgumentList	dstW		8140666	1					
ANR	8141599	Argument	dstW		8140666	0					
ANR	8141600	Identifier	dstW		8140666	0					
ANR	8141601	Argument	c -> chrDstHSubSample		8140666	1					
ANR	8141602	PtrMemberAccess	c -> chrDstHSubSample		8140666	0					
ANR	8141603	Identifier	c		8140666	0					
ANR	8141604	Identifier	chrDstHSubSample		8140666	1					
ANR	8141605	ExpressionStatement	"c -> chrDstH = AV_CEIL_RSHIFT ( dstH , c -> chrDstVSubSample )"	307:4:6530:6584	8140666	51	True				
ANR	8141606	AssignmentExpression	"c -> chrDstH = AV_CEIL_RSHIFT ( dstH , c -> chrDstVSubSample )"		8140666	0		=			
ANR	8141607	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8141608	Identifier	c		8140666	0					
ANR	8141609	Identifier	chrDstH		8140666	1					
ANR	8141610	CallExpression	"AV_CEIL_RSHIFT ( dstH , c -> chrDstVSubSample )"		8140666	1					
ANR	8141611	Callee	AV_CEIL_RSHIFT		8140666	0					
ANR	8141612	Identifier	AV_CEIL_RSHIFT		8140666	0					
ANR	8141613	ArgumentList	dstH		8140666	1					
ANR	8141614	Argument	dstH		8140666	0					
ANR	8141615	Identifier	dstH		8140666	0					
ANR	8141616	Argument	c -> chrDstVSubSample		8140666	1					
ANR	8141617	PtrMemberAccess	c -> chrDstVSubSample		8140666	0					
ANR	8141618	Identifier	c		8140666	0					
ANR	8141619	Identifier	chrDstVSubSample		8140666	1					
ANR	8141620	IfStatement	if ( unscaled && ! usesHFilter && ! usesVFilter && ( c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat ) ) )		8140666	52					
ANR	8141621	Condition	unscaled && ! usesHFilter && ! usesVFilter && ( c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat ) )	313:8:6631:6734	8140666	0	True				
ANR	8141622	AndExpression	unscaled && ! usesHFilter && ! usesVFilter && ( c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat ) )		8140666	0		&&			
ANR	8141623	Identifier	unscaled		8140666	0					
ANR	8141624	AndExpression	! usesHFilter && ! usesVFilter && ( c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat ) )		8140666	1		&&			
ANR	8141625	UnaryOperationExpression	! usesHFilter		8140666	0					
ANR	8141626	UnaryOperator	!		8140666	0					
ANR	8141627	Identifier	usesHFilter		8140666	1					
ANR	8141628	AndExpression	! usesVFilter && ( c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat ) )		8140666	1		&&			
ANR	8141629	UnaryOperationExpression	! usesVFilter		8140666	0					
ANR	8141630	UnaryOperator	!		8140666	0					
ANR	8141631	Identifier	usesVFilter		8140666	1					
ANR	8141632	OrExpression	c -> srcRange == c -> dstRange || isAnyRGB ( dstFormat )		8140666	1		||			
ANR	8141633	EqualityExpression	c -> srcRange == c -> dstRange		8140666	0		==			
ANR	8141634	PtrMemberAccess	c -> srcRange		8140666	0					
ANR	8141635	Identifier	c		8140666	0					
ANR	8141636	Identifier	srcRange		8140666	1					
ANR	8141637	PtrMemberAccess	c -> dstRange		8140666	1					
ANR	8141638	Identifier	c		8140666	0					
ANR	8141639	Identifier	dstRange		8140666	1					
ANR	8141640	CallExpression	isAnyRGB ( dstFormat )		8140666	1					
ANR	8141641	Callee	isAnyRGB		8140666	0					
ANR	8141642	Identifier	isAnyRGB		8140666	0					
ANR	8141643	ArgumentList	dstFormat		8140666	1					
ANR	8141644	Argument	dstFormat		8140666	0					
ANR	8141645	Identifier	dstFormat		8140666	0					
ANR	8141646	CompoundStatement		311:61:6617:6617	8140666	1					
ANR	8141647	ExpressionStatement	ff_get_unscaled_swscale ( c )	317:8:6748:6774	8140666	0	True				
ANR	8141648	CallExpression	ff_get_unscaled_swscale ( c )		8140666	0					
ANR	8141649	Callee	ff_get_unscaled_swscale		8140666	0					
ANR	8141650	Identifier	ff_get_unscaled_swscale		8140666	0					
ANR	8141651	ArgumentList	c		8140666	1					
ANR	8141652	Argument	c		8140666	0					
ANR	8141653	Identifier	c		8140666	0					
ANR	8141654	IfStatement	if ( c -> swscale )		8140666	1					
ANR	8141655	Condition	c -> swscale	321:12:6791:6800	8140666	0	True				
ANR	8141656	PtrMemberAccess	c -> swscale		8140666	0					
ANR	8141657	Identifier	c		8140666	0					
ANR	8141658	Identifier	swscale		8140666	1					
ANR	8141659	CompoundStatement		317:24:6683:6683	8140666	1					
ANR	8141660	IfStatement	if ( flags & SWS_PRINT_INFO )		8140666	0					
ANR	8141661	Condition	flags & SWS_PRINT_INFO	323:16:6822:6843	8140666	0	True				
ANR	8141662	BitAndExpression	flags & SWS_PRINT_INFO		8140666	0		&			
ANR	8141663	Identifier	flags		8140666	0					
ANR	8141664	Identifier	SWS_PRINT_INFO		8140666	1					
ANR	8141665	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using unscaled %s -> %s special converter\\n"" , sws_format_name ( srcFormat ) , sws_format_name ( dstFormat ) )"	325:16:6863:7036	8140666	1	True				
ANR	8141666	CallExpression	"av_log ( c , AV_LOG_INFO , ""using unscaled %s -> %s special converter\\n"" , sws_format_name ( srcFormat ) , sws_format_name ( dstFormat ) )"		8140666	0					
ANR	8141667	Callee	av_log		8140666	0					
ANR	8141668	Identifier	av_log		8140666	0					
ANR	8141669	ArgumentList	c		8140666	1					
ANR	8141670	Argument	c		8140666	0					
ANR	8141671	Identifier	c		8140666	0					
ANR	8141672	Argument	AV_LOG_INFO		8140666	1					
ANR	8141673	Identifier	AV_LOG_INFO		8140666	0					
ANR	8141674	Argument	"""using unscaled %s -> %s special converter\\n"""		8140666	2					
ANR	8141675	PrimaryExpression	"""using unscaled %s -> %s special converter\\n"""		8140666	0					
ANR	8141676	Argument	sws_format_name ( srcFormat )		8140666	3					
ANR	8141677	CallExpression	sws_format_name ( srcFormat )		8140666	0					
ANR	8141678	Callee	sws_format_name		8140666	0					
ANR	8141679	Identifier	sws_format_name		8140666	0					
ANR	8141680	ArgumentList	srcFormat		8140666	1					
ANR	8141681	Argument	srcFormat		8140666	0					
ANR	8141682	Identifier	srcFormat		8140666	0					
ANR	8141683	Argument	sws_format_name ( dstFormat )		8140666	4					
ANR	8141684	CallExpression	sws_format_name ( dstFormat )		8140666	0					
ANR	8141685	Callee	sws_format_name		8140666	0					
ANR	8141686	Identifier	sws_format_name		8140666	0					
ANR	8141687	ArgumentList	dstFormat		8140666	1					
ANR	8141688	Argument	dstFormat		8140666	0					
ANR	8141689	Identifier	dstFormat		8140666	0					
ANR	8141690	ReturnStatement	return 0 ;	331:12:7051:7059	8140666	1	True				
ANR	8141691	PrimaryExpression	0		8140666	0					
ANR	8141692	ExpressionStatement	c -> srcBpc = desc_src -> comp [ 0 ] . depth	339:4:7086:7121	8140666	53	True				
ANR	8141693	AssignmentExpression	c -> srcBpc = desc_src -> comp [ 0 ] . depth		8140666	0		=			
ANR	8141694	PtrMemberAccess	c -> srcBpc		8140666	0					
ANR	8141695	Identifier	c		8140666	0					
ANR	8141696	Identifier	srcBpc		8140666	1					
ANR	8141697	MemberAccess	desc_src -> comp [ 0 ] . depth		8140666	1					
ANR	8141698	ArrayIndexing	desc_src -> comp [ 0 ]		8140666	0					
ANR	8141699	PtrMemberAccess	desc_src -> comp		8140666	0					
ANR	8141700	Identifier	desc_src		8140666	0					
ANR	8141701	Identifier	comp		8140666	1					
ANR	8141702	PrimaryExpression	0		8140666	1					
ANR	8141703	Identifier	depth		8140666	1					
ANR	8141704	IfStatement	if ( c -> srcBpc < 8 )		8140666	54					
ANR	8141705	Condition	c -> srcBpc < 8	341:8:7132:7144	8140666	0	True				
ANR	8141706	RelationalExpression	c -> srcBpc < 8		8140666	0		<			
ANR	8141707	PtrMemberAccess	c -> srcBpc		8140666	0					
ANR	8141708	Identifier	c		8140666	0					
ANR	8141709	Identifier	srcBpc		8140666	1					
ANR	8141710	PrimaryExpression	8		8140666	1					
ANR	8141711	ExpressionStatement	c -> srcBpc = 8	343:8:7156:7169	8140666	1	True				
ANR	8141712	AssignmentExpression	c -> srcBpc = 8		8140666	0		=			
ANR	8141713	PtrMemberAccess	c -> srcBpc		8140666	0					
ANR	8141714	Identifier	c		8140666	0					
ANR	8141715	Identifier	srcBpc		8140666	1					
ANR	8141716	PrimaryExpression	8		8140666	1					
ANR	8141717	ExpressionStatement	c -> dstBpc = desc_dst -> comp [ 0 ] . depth	345:4:7176:7211	8140666	55	True				
ANR	8141718	AssignmentExpression	c -> dstBpc = desc_dst -> comp [ 0 ] . depth		8140666	0		=			
ANR	8141719	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8141720	Identifier	c		8140666	0					
ANR	8141721	Identifier	dstBpc		8140666	1					
ANR	8141722	MemberAccess	desc_dst -> comp [ 0 ] . depth		8140666	1					
ANR	8141723	ArrayIndexing	desc_dst -> comp [ 0 ]		8140666	0					
ANR	8141724	PtrMemberAccess	desc_dst -> comp		8140666	0					
ANR	8141725	Identifier	desc_dst		8140666	0					
ANR	8141726	Identifier	comp		8140666	1					
ANR	8141727	PrimaryExpression	0		8140666	1					
ANR	8141728	Identifier	depth		8140666	1					
ANR	8141729	IfStatement	if ( c -> dstBpc < 8 )		8140666	56					
ANR	8141730	Condition	c -> dstBpc < 8	347:8:7222:7234	8140666	0	True				
ANR	8141731	RelationalExpression	c -> dstBpc < 8		8140666	0		<			
ANR	8141732	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8141733	Identifier	c		8140666	0					
ANR	8141734	Identifier	dstBpc		8140666	1					
ANR	8141735	PrimaryExpression	8		8140666	1					
ANR	8141736	ExpressionStatement	c -> dstBpc = 8	349:8:7246:7259	8140666	1	True				
ANR	8141737	AssignmentExpression	c -> dstBpc = 8		8140666	0		=			
ANR	8141738	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8141739	Identifier	c		8140666	0					
ANR	8141740	Identifier	dstBpc		8140666	1					
ANR	8141741	PrimaryExpression	8		8140666	1					
ANR	8141742	IfStatement	if ( c -> dstBpc == 16 )		8140666	57					
ANR	8141743	Condition	c -> dstBpc == 16	351:8:7270:7284	8140666	0	True				
ANR	8141744	EqualityExpression	c -> dstBpc == 16		8140666	0		==			
ANR	8141745	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8141746	Identifier	c		8140666	0					
ANR	8141747	Identifier	dstBpc		8140666	1					
ANR	8141748	PrimaryExpression	16		8140666	1					
ANR	8141749	ExpressionStatement	dst_stride <<= 1	353:8:7296:7312	8140666	1	True				
ANR	8141750	AssignmentExpression	dst_stride <<= 1		8140666	0		<<=			
ANR	8141751	Identifier	dst_stride		8140666	0					
ANR	8141752	PrimaryExpression	1		8140666	1					
ANR	8141753	ExpressionStatement	"FF_ALLOC_OR_GOTO ( c , c -> formatConvBuffer , ( FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 ) >> 3 ) + 16 , fail )"	355:4:7319:7468	8140666	58	True				
ANR	8141754	CallExpression	"FF_ALLOC_OR_GOTO ( c , c -> formatConvBuffer , ( FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 ) >> 3 ) + 16 , fail )"		8140666	0					
ANR	8141755	Callee	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8141756	Identifier	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8141757	ArgumentList	c		8140666	1					
ANR	8141758	Argument	c		8140666	0					
ANR	8141759	Identifier	c		8140666	0					
ANR	8141760	Argument	c -> formatConvBuffer		8140666	1					
ANR	8141761	PtrMemberAccess	c -> formatConvBuffer		8140666	0					
ANR	8141762	Identifier	c		8140666	0					
ANR	8141763	Identifier	formatConvBuffer		8140666	1					
ANR	8141764	Argument	"( FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 ) >> 3 ) + 16"		8140666	2					
ANR	8141765	AdditiveExpression	"( FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 ) >> 3 ) + 16"		8140666	0		+			
ANR	8141766	ShiftExpression	"FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 ) >> 3"		8140666	0		>>			
ANR	8141767	MultiplicativeExpression	"FFALIGN ( srcW , 16 ) * 2 * FFALIGN ( c -> srcBpc , 8 )"		8140666	0		*			
ANR	8141768	CallExpression	"FFALIGN ( srcW , 16 )"		8140666	0					
ANR	8141769	Callee	FFALIGN		8140666	0					
ANR	8141770	Identifier	FFALIGN		8140666	0					
ANR	8141771	ArgumentList	srcW		8140666	1					
ANR	8141772	Argument	srcW		8140666	0					
ANR	8141773	Identifier	srcW		8140666	0					
ANR	8141774	Argument	16		8140666	1					
ANR	8141775	PrimaryExpression	16		8140666	0					
ANR	8141776	MultiplicativeExpression	"2 * FFALIGN ( c -> srcBpc , 8 )"		8140666	1		*			
ANR	8141777	PrimaryExpression	2		8140666	0					
ANR	8141778	CallExpression	"FFALIGN ( c -> srcBpc , 8 )"		8140666	1					
ANR	8141779	Callee	FFALIGN		8140666	0					
ANR	8141780	Identifier	FFALIGN		8140666	0					
ANR	8141781	ArgumentList	c -> srcBpc		8140666	1					
ANR	8141782	Argument	c -> srcBpc		8140666	0					
ANR	8141783	PtrMemberAccess	c -> srcBpc		8140666	0					
ANR	8141784	Identifier	c		8140666	0					
ANR	8141785	Identifier	srcBpc		8140666	1					
ANR	8141786	Argument	8		8140666	1					
ANR	8141787	PrimaryExpression	8		8140666	0					
ANR	8141788	PrimaryExpression	3		8140666	1					
ANR	8141789	PrimaryExpression	16		8140666	1					
ANR	8141790	Argument	fail		8140666	3					
ANR	8141791	Identifier	fail		8140666	0					
ANR	8141792	IfStatement	if ( INLINE_MMXEXT ( cpu_flags ) && c -> srcBpc == 8 && c -> dstBpc <= 12 )		8140666	59					
ANR	8141793	Condition	INLINE_MMXEXT ( cpu_flags ) && c -> srcBpc == 8 && c -> dstBpc <= 12	361:8:7479:7539	8140666	0	True				
ANR	8141794	AndExpression	INLINE_MMXEXT ( cpu_flags ) && c -> srcBpc == 8 && c -> dstBpc <= 12		8140666	0		&&			
ANR	8141795	CallExpression	INLINE_MMXEXT ( cpu_flags )		8140666	0					
ANR	8141796	Callee	INLINE_MMXEXT		8140666	0					
ANR	8141797	Identifier	INLINE_MMXEXT		8140666	0					
ANR	8141798	ArgumentList	cpu_flags		8140666	1					
ANR	8141799	Argument	cpu_flags		8140666	0					
ANR	8141800	Identifier	cpu_flags		8140666	0					
ANR	8141801	AndExpression	c -> srcBpc == 8 && c -> dstBpc <= 12		8140666	1		&&			
ANR	8141802	EqualityExpression	c -> srcBpc == 8		8140666	0		==			
ANR	8141803	PtrMemberAccess	c -> srcBpc		8140666	0					
ANR	8141804	Identifier	c		8140666	0					
ANR	8141805	Identifier	srcBpc		8140666	1					
ANR	8141806	PrimaryExpression	8		8140666	1					
ANR	8141807	RelationalExpression	c -> dstBpc <= 12		8140666	1		<=			
ANR	8141808	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8141809	Identifier	c		8140666	0					
ANR	8141810	Identifier	dstBpc		8140666	1					
ANR	8141811	PrimaryExpression	12		8140666	1					
ANR	8141812	CompoundStatement		357:71:7422:7422	8140666	1					
ANR	8141813	ExpressionStatement	c -> canMMXEXTBeUsed = ( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0	363:8:7553:7667	8140666	0	True				
ANR	8141814	AssignmentExpression	c -> canMMXEXTBeUsed = ( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0		8140666	0		=			
ANR	8141815	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	0					
ANR	8141816	Identifier	c		8140666	0					
ANR	8141817	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8141818	ConditionalExpression	( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0		8140666	1					
ANR	8141819	Condition	dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		8140666	0					
ANR	8141820	AndExpression	dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		8140666	0		&&			
ANR	8141821	RelationalExpression	dstW >= srcW		8140666	0		>=			
ANR	8141822	Identifier	dstW		8140666	0					
ANR	8141823	Identifier	srcW		8140666	1					
ANR	8141824	AndExpression	( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		8140666	1		&&			
ANR	8141825	EqualityExpression	( dstW & 31 ) == 0		8140666	0		==			
ANR	8141826	BitAndExpression	dstW & 31		8140666	0		&			
ANR	8141827	Identifier	dstW		8140666	0					
ANR	8141828	PrimaryExpression	31		8140666	1					
ANR	8141829	PrimaryExpression	0		8140666	1					
ANR	8141830	EqualityExpression	( srcW & 15 ) == 0		8140666	1		==			
ANR	8141831	BitAndExpression	srcW & 15		8140666	0		&			
ANR	8141832	Identifier	srcW		8140666	0					
ANR	8141833	PrimaryExpression	15		8140666	1					
ANR	8141834	PrimaryExpression	0		8140666	1					
ANR	8141835	PrimaryExpression	1		8140666	1					
ANR	8141836	PrimaryExpression	0		8140666	2					
ANR	8141837	IfStatement	if ( ! c -> canMMXEXTBeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR ) )		8140666	1					
ANR	8141838	Condition	! c -> canMMXEXTBeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )	367:12:7682:7780	8140666	0	True				
ANR	8141839	AndExpression	! c -> canMMXEXTBeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		8140666	0		&&			
ANR	8141840	UnaryOperationExpression	! c -> canMMXEXTBeUsed		8140666	0					
ANR	8141841	UnaryOperator	!		8140666	0					
ANR	8141842	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	1					
ANR	8141843	Identifier	c		8140666	0					
ANR	8141844	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8141845	AndExpression	dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		8140666	1		&&			
ANR	8141846	RelationalExpression	dstW >= srcW		8140666	0		>=			
ANR	8141847	Identifier	dstW		8140666	0					
ANR	8141848	Identifier	srcW		8140666	1					
ANR	8141849	AndExpression	( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		8140666	1		&&			
ANR	8141850	EqualityExpression	( srcW & 15 ) == 0		8140666	0		==			
ANR	8141851	BitAndExpression	srcW & 15		8140666	0		&			
ANR	8141852	Identifier	srcW		8140666	0					
ANR	8141853	PrimaryExpression	15		8140666	1					
ANR	8141854	PrimaryExpression	0		8140666	1					
ANR	8141855	BitAndExpression	flags & SWS_FAST_BILINEAR		8140666	1		&			
ANR	8141856	Identifier	flags		8140666	0					
ANR	8141857	Identifier	SWS_FAST_BILINEAR		8140666	1					
ANR	8141858	CompoundStatement		365:44:7663:7663	8140666	1					
ANR	8141859	IfStatement	if ( flags & SWS_PRINT_INFO )		8140666	0					
ANR	8141860	Condition	flags & SWS_PRINT_INFO	371:16:7802:7823	8140666	0	True				
ANR	8141861	BitAndExpression	flags & SWS_PRINT_INFO		8140666	0		&			
ANR	8141862	Identifier	flags		8140666	0					
ANR	8141863	Identifier	SWS_PRINT_INFO		8140666	1					
ANR	8141864	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""output width is not a multiple of 32 -> no MMXEXT scaler\\n"" )"	373:16:7843:7951	8140666	1	True				
ANR	8141865	CallExpression	"av_log ( c , AV_LOG_INFO , ""output width is not a multiple of 32 -> no MMXEXT scaler\\n"" )"		8140666	0					
ANR	8141866	Callee	av_log		8140666	0					
ANR	8141867	Identifier	av_log		8140666	0					
ANR	8141868	ArgumentList	c		8140666	1					
ANR	8141869	Argument	c		8140666	0					
ANR	8141870	Identifier	c		8140666	0					
ANR	8141871	Argument	AV_LOG_INFO		8140666	1					
ANR	8141872	Identifier	AV_LOG_INFO		8140666	0					
ANR	8141873	Argument	"""output width is not a multiple of 32 -> no MMXEXT scaler\\n"""		8140666	2					
ANR	8141874	PrimaryExpression	"""output width is not a multiple of 32 -> no MMXEXT scaler\\n"""		8140666	0					
ANR	8141875	IfStatement	if ( usesHFilter )		8140666	2					
ANR	8141876	Condition	usesHFilter	379:12:7977:7987	8140666	0	True				
ANR	8141877	Identifier	usesHFilter		8140666	0					
ANR	8141878	ExpressionStatement	c -> canMMXEXTBeUsed = 0	381:12:8003:8025	8140666	1	True				
ANR	8141879	AssignmentExpression	c -> canMMXEXTBeUsed = 0		8140666	0		=			
ANR	8141880	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	0					
ANR	8141881	Identifier	c		8140666	0					
ANR	8141882	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8141883	PrimaryExpression	0		8140666	1					
ANR	8141884	ElseStatement	else		8140666	0					
ANR	8141885	ExpressionStatement	c -> canMMXEXTBeUsed = 0	385:8:8048:8070	8140666	0	True				
ANR	8141886	AssignmentExpression	c -> canMMXEXTBeUsed = 0		8140666	0		=			
ANR	8141887	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	0					
ANR	8141888	Identifier	c		8140666	0					
ANR	8141889	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8141890	PrimaryExpression	0		8140666	1					
ANR	8141891	ExpressionStatement	c -> chrXInc = ( ( ( int64_t ) c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW	389:4:8079:8154	8140666	60	True				
ANR	8141892	AssignmentExpression	c -> chrXInc = ( ( ( int64_t ) c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW		8140666	0		=			
ANR	8141893	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8141894	Identifier	c		8140666	0					
ANR	8141895	Identifier	chrXInc		8140666	1					
ANR	8141896	MultiplicativeExpression	( ( ( int64_t ) c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW		8140666	1		/			
ANR	8141897	AdditiveExpression	( ( int64_t ) c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 )		8140666	0		+			
ANR	8141898	ShiftExpression	( int64_t ) c -> chrSrcW << 16		8140666	0		<<			
ANR	8141899	CastExpression	( int64_t ) c -> chrSrcW		8140666	0					
ANR	8141900	CastTarget	int64_t		8140666	0					
ANR	8141901	PtrMemberAccess	c -> chrSrcW		8140666	1					
ANR	8141902	Identifier	c		8140666	0					
ANR	8141903	Identifier	chrSrcW		8140666	1					
ANR	8141904	PrimaryExpression	16		8140666	1					
ANR	8141905	ShiftExpression	c -> chrDstW >> 1		8140666	1		>>			
ANR	8141906	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8141907	Identifier	c		8140666	0					
ANR	8141908	Identifier	chrDstW		8140666	1					
ANR	8141909	PrimaryExpression	1		8140666	1					
ANR	8141910	PtrMemberAccess	c -> chrDstW		8140666	1					
ANR	8141911	Identifier	c		8140666	0					
ANR	8141912	Identifier	chrDstW		8140666	1					
ANR	8141913	ExpressionStatement	c -> chrYInc = ( ( ( int64_t ) c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH	391:4:8161:8236	8140666	61	True				
ANR	8141914	AssignmentExpression	c -> chrYInc = ( ( ( int64_t ) c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH		8140666	0		=			
ANR	8141915	PtrMemberAccess	c -> chrYInc		8140666	0					
ANR	8141916	Identifier	c		8140666	0					
ANR	8141917	Identifier	chrYInc		8140666	1					
ANR	8141918	MultiplicativeExpression	( ( ( int64_t ) c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH		8140666	1		/			
ANR	8141919	AdditiveExpression	( ( int64_t ) c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 )		8140666	0		+			
ANR	8141920	ShiftExpression	( int64_t ) c -> chrSrcH << 16		8140666	0		<<			
ANR	8141921	CastExpression	( int64_t ) c -> chrSrcH		8140666	0					
ANR	8141922	CastTarget	int64_t		8140666	0					
ANR	8141923	PtrMemberAccess	c -> chrSrcH		8140666	1					
ANR	8141924	Identifier	c		8140666	0					
ANR	8141925	Identifier	chrSrcH		8140666	1					
ANR	8141926	PrimaryExpression	16		8140666	1					
ANR	8141927	ShiftExpression	c -> chrDstH >> 1		8140666	1		>>			
ANR	8141928	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8141929	Identifier	c		8140666	0					
ANR	8141930	Identifier	chrDstH		8140666	1					
ANR	8141931	PrimaryExpression	1		8140666	1					
ANR	8141932	PtrMemberAccess	c -> chrDstH		8140666	1					
ANR	8141933	Identifier	c		8140666	0					
ANR	8141934	Identifier	chrDstH		8140666	1					
ANR	8141935	IfStatement	if ( flags & SWS_FAST_BILINEAR )		8140666	62					
ANR	8141936	Condition	flags & SWS_FAST_BILINEAR	409:8:8700:8724	8140666	0	True				
ANR	8141937	BitAndExpression	flags & SWS_FAST_BILINEAR		8140666	0		&			
ANR	8141938	Identifier	flags		8140666	0					
ANR	8141939	Identifier	SWS_FAST_BILINEAR		8140666	1					
ANR	8141940	CompoundStatement		405:35:8607:8607	8140666	1					
ANR	8141941	IfStatement	if ( c -> canMMXEXTBeUsed )		8140666	0					
ANR	8141942	Condition	c -> canMMXEXTBeUsed	411:12:8742:8759	8140666	0	True				
ANR	8141943	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	0					
ANR	8141944	Identifier	c		8140666	0					
ANR	8141945	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8141946	CompoundStatement		407:32:8642:8642	8140666	1					
ANR	8141947	ExpressionStatement	c -> lumXInc += 20	413:12:8777:8793	8140666	0	True				
ANR	8141948	AssignmentExpression	c -> lumXInc += 20		8140666	0		+=			
ANR	8141949	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8141950	Identifier	c		8140666	0					
ANR	8141951	Identifier	lumXInc		8140666	1					
ANR	8141952	PrimaryExpression	20		8140666	1					
ANR	8141953	ExpressionStatement	c -> chrXInc += 20	415:12:8808:8824	8140666	1	True				
ANR	8141954	AssignmentExpression	c -> chrXInc += 20		8140666	0		+=			
ANR	8141955	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8141956	Identifier	c		8140666	0					
ANR	8141957	Identifier	chrXInc		8140666	1					
ANR	8141958	PrimaryExpression	20		8140666	1					
ANR	8141959	ElseStatement	else		8140666	0					
ANR	8141960	IfStatement	if ( INLINE_MMX ( cpu_flags ) )		8140666	0					
ANR	8141961	Condition	INLINE_MMX ( cpu_flags )	421:17:8919:8939	8140666	0	True				
ANR	8141962	CallExpression	INLINE_MMX ( cpu_flags )		8140666	0					
ANR	8141963	Callee	INLINE_MMX		8140666	0					
ANR	8141964	Identifier	INLINE_MMX		8140666	0					
ANR	8141965	ArgumentList	cpu_flags		8140666	1					
ANR	8141966	Argument	cpu_flags		8140666	0					
ANR	8141967	Identifier	cpu_flags		8140666	0					
ANR	8141968	CompoundStatement		417:40:8822:8822	8140666	1					
ANR	8141969	ExpressionStatement	c -> lumXInc = ( ( int64_t ) ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20	423:12:8957:9027	8140666	0	True				
ANR	8141970	AssignmentExpression	c -> lumXInc = ( ( int64_t ) ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20		8140666	0		=			
ANR	8141971	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8141972	Identifier	c		8140666	0					
ANR	8141973	Identifier	lumXInc		8140666	1					
ANR	8141974	AdditiveExpression	( ( int64_t ) ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20		8140666	1		-			
ANR	8141975	MultiplicativeExpression	( ( int64_t ) ( srcW - 2 ) << 16 ) / ( dstW - 2 )		8140666	0		/			
ANR	8141976	ShiftExpression	( int64_t ) ( srcW - 2 ) << 16		8140666	0		<<			
ANR	8141977	CastExpression	( int64_t ) ( srcW - 2 )		8140666	0					
ANR	8141978	CastTarget	int64_t		8140666	0					
ANR	8141979	AdditiveExpression	srcW - 2		8140666	1		-			
ANR	8141980	Identifier	srcW		8140666	0					
ANR	8141981	PrimaryExpression	2		8140666	1					
ANR	8141982	PrimaryExpression	16		8140666	1					
ANR	8141983	AdditiveExpression	dstW - 2		8140666	1		-			
ANR	8141984	Identifier	dstW		8140666	0					
ANR	8141985	PrimaryExpression	2		8140666	1					
ANR	8141986	PrimaryExpression	20		8140666	1					
ANR	8141987	ExpressionStatement	c -> chrXInc = ( ( int64_t ) ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20	425:12:9042:9112	8140666	1	True				
ANR	8141988	AssignmentExpression	c -> chrXInc = ( ( int64_t ) ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20		8140666	0		=			
ANR	8141989	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8141990	Identifier	c		8140666	0					
ANR	8141991	Identifier	chrXInc		8140666	1					
ANR	8141992	AdditiveExpression	( ( int64_t ) ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20		8140666	1		-			
ANR	8141993	MultiplicativeExpression	( ( int64_t ) ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 )		8140666	0		/			
ANR	8141994	ShiftExpression	( int64_t ) ( c -> chrSrcW - 2 ) << 16		8140666	0		<<			
ANR	8141995	CastExpression	( int64_t ) ( c -> chrSrcW - 2 )		8140666	0					
ANR	8141996	CastTarget	int64_t		8140666	0					
ANR	8141997	AdditiveExpression	c -> chrSrcW - 2		8140666	1		-			
ANR	8141998	PtrMemberAccess	c -> chrSrcW		8140666	0					
ANR	8141999	Identifier	c		8140666	0					
ANR	8142000	Identifier	chrSrcW		8140666	1					
ANR	8142001	PrimaryExpression	2		8140666	1					
ANR	8142002	PrimaryExpression	16		8140666	1					
ANR	8142003	AdditiveExpression	c -> chrDstW - 2		8140666	1		-			
ANR	8142004	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142005	Identifier	c		8140666	0					
ANR	8142006	Identifier	chrDstW		8140666	1					
ANR	8142007	PrimaryExpression	2		8140666	1					
ANR	8142008	PrimaryExpression	20		8140666	1					
ANR	8142009	Statement	define	433:1:9136:9141	8140666	63	True				
ANR	8142010	Statement	USE_MMAP	433:8:9143:9150	8140666	64	True				
ANR	8142011	Statement	(	433:17:9152:9152	8140666	65	True				
ANR	8142012	Statement	HAVE_MMAP	433:18:9153:9161	8140666	66	True				
ANR	8142013	Statement	&&	433:28:9163:9164	8140666	67	True				
ANR	8142014	Statement	HAVE_MPROTECT	433:31:9166:9178	8140666	68	True				
ANR	8142015	Statement	&&	433:45:9180:9181	8140666	69	True				
ANR	8142016	Statement	defined	433:48:9183:9189	8140666	70	True				
ANR	8142017	Statement	MAP_ANONYMOUS	433:56:9191:9203	8140666	71	True				
ANR	8142018	Statement	)	433:69:9204:9204	8140666	72	True				
ANR	8142019	CompoundStatement		435:4:9155:9155	8140666	73					
ANR	8142020	IfStatement	if ( c -> canMMXEXTBeUsed && ( flags & SWS_FAST_BILINEAR ) )		8140666	0					
ANR	8142021	Condition	c -> canMMXEXTBeUsed && ( flags & SWS_FAST_BILINEAR )	445:12:9338:9386	8140666	0	True				
ANR	8142022	AndExpression	c -> canMMXEXTBeUsed && ( flags & SWS_FAST_BILINEAR )		8140666	0		&&			
ANR	8142023	PtrMemberAccess	c -> canMMXEXTBeUsed		8140666	0					
ANR	8142024	Identifier	c		8140666	0					
ANR	8142025	Identifier	canMMXEXTBeUsed		8140666	1					
ANR	8142026	BitAndExpression	flags & SWS_FAST_BILINEAR		8140666	1		&			
ANR	8142027	Identifier	flags		8140666	0					
ANR	8142028	Identifier	SWS_FAST_BILINEAR		8140666	1					
ANR	8142029	CompoundStatement		441:63:9269:9269	8140666	1					
ANR	8142030	ExpressionStatement	"c -> lumMmxextFilterCodeSize = init_hscaler_mmxext ( dstW , c -> lumXInc , NULL , NULL , NULL , 8 )"	447:12:9404:9553	8140666	0	True				
ANR	8142031	AssignmentExpression	"c -> lumMmxextFilterCodeSize = init_hscaler_mmxext ( dstW , c -> lumXInc , NULL , NULL , NULL , 8 )"		8140666	0		=			
ANR	8142032	PtrMemberAccess	c -> lumMmxextFilterCodeSize		8140666	0					
ANR	8142033	Identifier	c		8140666	0					
ANR	8142034	Identifier	lumMmxextFilterCodeSize		8140666	1					
ANR	8142035	CallExpression	"init_hscaler_mmxext ( dstW , c -> lumXInc , NULL , NULL , NULL , 8 )"		8140666	1					
ANR	8142036	Callee	init_hscaler_mmxext		8140666	0					
ANR	8142037	Identifier	init_hscaler_mmxext		8140666	0					
ANR	8142038	ArgumentList	dstW		8140666	1					
ANR	8142039	Argument	dstW		8140666	0					
ANR	8142040	Identifier	dstW		8140666	0					
ANR	8142041	Argument	c -> lumXInc		8140666	1					
ANR	8142042	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8142043	Identifier	c		8140666	0					
ANR	8142044	Identifier	lumXInc		8140666	1					
ANR	8142045	Argument	NULL		8140666	2					
ANR	8142046	Identifier	NULL		8140666	0					
ANR	8142047	Argument	NULL		8140666	3					
ANR	8142048	Identifier	NULL		8140666	0					
ANR	8142049	Argument	NULL		8140666	4					
ANR	8142050	Identifier	NULL		8140666	0					
ANR	8142051	Argument	8		8140666	5					
ANR	8142052	PrimaryExpression	8		8140666	0					
ANR	8142053	ExpressionStatement	"c -> chrMmxextFilterCodeSize = init_hscaler_mmxext ( c -> chrDstW , c -> chrXInc , NULL , NULL , NULL , 4 )"	451:12:9568:9723	8140666	1	True				
ANR	8142054	AssignmentExpression	"c -> chrMmxextFilterCodeSize = init_hscaler_mmxext ( c -> chrDstW , c -> chrXInc , NULL , NULL , NULL , 4 )"		8140666	0		=			
ANR	8142055	PtrMemberAccess	c -> chrMmxextFilterCodeSize		8140666	0					
ANR	8142056	Identifier	c		8140666	0					
ANR	8142057	Identifier	chrMmxextFilterCodeSize		8140666	1					
ANR	8142058	CallExpression	"init_hscaler_mmxext ( c -> chrDstW , c -> chrXInc , NULL , NULL , NULL , 4 )"		8140666	1					
ANR	8142059	Callee	init_hscaler_mmxext		8140666	0					
ANR	8142060	Identifier	init_hscaler_mmxext		8140666	0					
ANR	8142061	ArgumentList	c -> chrDstW		8140666	1					
ANR	8142062	Argument	c -> chrDstW		8140666	0					
ANR	8142063	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142064	Identifier	c		8140666	0					
ANR	8142065	Identifier	chrDstW		8140666	1					
ANR	8142066	Argument	c -> chrXInc		8140666	1					
ANR	8142067	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8142068	Identifier	c		8140666	0					
ANR	8142069	Identifier	chrXInc		8140666	1					
ANR	8142070	Argument	NULL		8140666	2					
ANR	8142071	Identifier	NULL		8140666	0					
ANR	8142072	Argument	NULL		8140666	3					
ANR	8142073	Identifier	NULL		8140666	0					
ANR	8142074	Argument	NULL		8140666	4					
ANR	8142075	Identifier	NULL		8140666	0					
ANR	8142076	Argument	4		8140666	5					
ANR	8142077	PrimaryExpression	4		8140666	0					
ANR	8142078	ExpressionStatement	"c -> lumMmxextFilterCode = mmap ( NULL , c -> lumMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"	459:12:9754:10006	8140666	2	True				
ANR	8142079	AssignmentExpression	"c -> lumMmxextFilterCode = mmap ( NULL , c -> lumMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		8140666	0		=			
ANR	8142080	PtrMemberAccess	c -> lumMmxextFilterCode		8140666	0					
ANR	8142081	Identifier	c		8140666	0					
ANR	8142082	Identifier	lumMmxextFilterCode		8140666	1					
ANR	8142083	CallExpression	"mmap ( NULL , c -> lumMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		8140666	1					
ANR	8142084	Callee	mmap		8140666	0					
ANR	8142085	Identifier	mmap		8140666	0					
ANR	8142086	ArgumentList	NULL		8140666	1					
ANR	8142087	Argument	NULL		8140666	0					
ANR	8142088	Identifier	NULL		8140666	0					
ANR	8142089	Argument	c -> lumMmxextFilterCodeSize		8140666	1					
ANR	8142090	PtrMemberAccess	c -> lumMmxextFilterCodeSize		8140666	0					
ANR	8142091	Identifier	c		8140666	0					
ANR	8142092	Identifier	lumMmxextFilterCodeSize		8140666	1					
ANR	8142093	Argument	PROT_READ | PROT_WRITE		8140666	2					
ANR	8142094	InclusiveOrExpression	PROT_READ | PROT_WRITE		8140666	0		|			
ANR	8142095	Identifier	PROT_READ		8140666	0					
ANR	8142096	Identifier	PROT_WRITE		8140666	1					
ANR	8142097	Argument	MAP_PRIVATE | MAP_ANONYMOUS		8140666	3					
ANR	8142098	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS		8140666	0		|			
ANR	8142099	Identifier	MAP_PRIVATE		8140666	0					
ANR	8142100	Identifier	MAP_ANONYMOUS		8140666	1					
ANR	8142101	Argument	- 1		8140666	4					
ANR	8142102	UnaryOperationExpression	- 1		8140666	0					
ANR	8142103	UnaryOperator	-		8140666	0					
ANR	8142104	PrimaryExpression	1		8140666	1					
ANR	8142105	Argument	0		8140666	5					
ANR	8142106	PrimaryExpression	0		8140666	0					
ANR	8142107	ExpressionStatement	"c -> chrMmxextFilterCode = mmap ( NULL , c -> chrMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"	467:12:10021:10273	8140666	3	True				
ANR	8142108	AssignmentExpression	"c -> chrMmxextFilterCode = mmap ( NULL , c -> chrMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		8140666	0		=			
ANR	8142109	PtrMemberAccess	c -> chrMmxextFilterCode		8140666	0					
ANR	8142110	Identifier	c		8140666	0					
ANR	8142111	Identifier	chrMmxextFilterCode		8140666	1					
ANR	8142112	CallExpression	"mmap ( NULL , c -> chrMmxextFilterCodeSize , PROT_READ | PROT_WRITE , MAP_PRIVATE | MAP_ANONYMOUS , - 1 , 0 )"		8140666	1					
ANR	8142113	Callee	mmap		8140666	0					
ANR	8142114	Identifier	mmap		8140666	0					
ANR	8142115	ArgumentList	NULL		8140666	1					
ANR	8142116	Argument	NULL		8140666	0					
ANR	8142117	Identifier	NULL		8140666	0					
ANR	8142118	Argument	c -> chrMmxextFilterCodeSize		8140666	1					
ANR	8142119	PtrMemberAccess	c -> chrMmxextFilterCodeSize		8140666	0					
ANR	8142120	Identifier	c		8140666	0					
ANR	8142121	Identifier	chrMmxextFilterCodeSize		8140666	1					
ANR	8142122	Argument	PROT_READ | PROT_WRITE		8140666	2					
ANR	8142123	InclusiveOrExpression	PROT_READ | PROT_WRITE		8140666	0		|			
ANR	8142124	Identifier	PROT_READ		8140666	0					
ANR	8142125	Identifier	PROT_WRITE		8140666	1					
ANR	8142126	Argument	MAP_PRIVATE | MAP_ANONYMOUS		8140666	3					
ANR	8142127	InclusiveOrExpression	MAP_PRIVATE | MAP_ANONYMOUS		8140666	0		|			
ANR	8142128	Identifier	MAP_PRIVATE		8140666	0					
ANR	8142129	Identifier	MAP_ANONYMOUS		8140666	1					
ANR	8142130	Argument	- 1		8140666	4					
ANR	8142131	UnaryOperationExpression	- 1		8140666	0					
ANR	8142132	UnaryOperator	-		8140666	0					
ANR	8142133	PrimaryExpression	1		8140666	1					
ANR	8142134	Argument	0		8140666	5					
ANR	8142135	PrimaryExpression	0		8140666	0					
ANR	8142136	IfStatement	if ( ! c -> lumMmxextFilterCode || ! c -> chrMmxextFilterCode )		8140666	4					
ANR	8142137	Condition	! c -> lumMmxextFilterCode || ! c -> chrMmxextFilterCode	503:16:11038:11087	8140666	0	True				
ANR	8142138	OrExpression	! c -> lumMmxextFilterCode || ! c -> chrMmxextFilterCode		8140666	0		||			
ANR	8142139	UnaryOperationExpression	! c -> lumMmxextFilterCode		8140666	0					
ANR	8142140	UnaryOperator	!		8140666	0					
ANR	8142141	PtrMemberAccess	c -> lumMmxextFilterCode		8140666	1					
ANR	8142142	Identifier	c		8140666	0					
ANR	8142143	Identifier	lumMmxextFilterCode		8140666	1					
ANR	8142144	UnaryOperationExpression	! c -> chrMmxextFilterCode		8140666	1					
ANR	8142145	UnaryOperator	!		8140666	0					
ANR	8142146	PtrMemberAccess	c -> chrMmxextFilterCode		8140666	1					
ANR	8142147	Identifier	c		8140666	0					
ANR	8142148	Identifier	chrMmxextFilterCode		8140666	1					
ANR	8142149	ReturnStatement	return AVERROR ( ENOMEM ) ;	505:16:11107:11129	8140666	1	True				
ANR	8142150	CallExpression	AVERROR ( ENOMEM )		8140666	0					
ANR	8142151	Callee	AVERROR		8140666	0					
ANR	8142152	Identifier	AVERROR		8140666	0					
ANR	8142153	ArgumentList	ENOMEM		8140666	1					
ANR	8142154	Argument	ENOMEM		8140666	0					
ANR	8142155	Identifier	ENOMEM		8140666	0					
ANR	8142156	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> hLumFilter , ( dstW / 8 + 8 ) * sizeof ( int16_t ) , fail )"	507:12:11144:11232	8140666	5	True				
ANR	8142157	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> hLumFilter , ( dstW / 8 + 8 ) * sizeof ( int16_t ) , fail )"		8140666	0					
ANR	8142158	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142159	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142160	ArgumentList	c		8140666	1					
ANR	8142161	Argument	c		8140666	0					
ANR	8142162	Identifier	c		8140666	0					
ANR	8142163	Argument	c -> hLumFilter		8140666	1					
ANR	8142164	PtrMemberAccess	c -> hLumFilter		8140666	0					
ANR	8142165	Identifier	c		8140666	0					
ANR	8142166	Identifier	hLumFilter		8140666	1					
ANR	8142167	Argument	( dstW / 8 + 8 ) * sizeof ( int16_t )		8140666	2					
ANR	8142168	MultiplicativeExpression	( dstW / 8 + 8 ) * sizeof ( int16_t )		8140666	0		*			
ANR	8142169	AdditiveExpression	dstW / 8 + 8		8140666	0		+			
ANR	8142170	MultiplicativeExpression	dstW / 8		8140666	0		/			
ANR	8142171	Identifier	dstW		8140666	0					
ANR	8142172	PrimaryExpression	8		8140666	1					
ANR	8142173	PrimaryExpression	8		8140666	1					
ANR	8142174	SizeofExpression	sizeof ( int16_t )		8140666	1					
ANR	8142175	Sizeof	sizeof		8140666	0					
ANR	8142176	SizeofOperand	int16_t		8140666	1					
ANR	8142177	Argument	fail		8140666	3					
ANR	8142178	Identifier	fail		8140666	0					
ANR	8142179	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> hChrFilter , ( c -> chrDstW / 4 + 8 ) * sizeof ( int16_t ) , fail )"	509:12:11247:11335	8140666	6	True				
ANR	8142180	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> hChrFilter , ( c -> chrDstW / 4 + 8 ) * sizeof ( int16_t ) , fail )"		8140666	0					
ANR	8142181	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142182	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142183	ArgumentList	c		8140666	1					
ANR	8142184	Argument	c		8140666	0					
ANR	8142185	Identifier	c		8140666	0					
ANR	8142186	Argument	c -> hChrFilter		8140666	1					
ANR	8142187	PtrMemberAccess	c -> hChrFilter		8140666	0					
ANR	8142188	Identifier	c		8140666	0					
ANR	8142189	Identifier	hChrFilter		8140666	1					
ANR	8142190	Argument	( c -> chrDstW / 4 + 8 ) * sizeof ( int16_t )		8140666	2					
ANR	8142191	MultiplicativeExpression	( c -> chrDstW / 4 + 8 ) * sizeof ( int16_t )		8140666	0		*			
ANR	8142192	AdditiveExpression	c -> chrDstW / 4 + 8		8140666	0		+			
ANR	8142193	MultiplicativeExpression	c -> chrDstW / 4		8140666	0		/			
ANR	8142194	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142195	Identifier	c		8140666	0					
ANR	8142196	Identifier	chrDstW		8140666	1					
ANR	8142197	PrimaryExpression	4		8140666	1					
ANR	8142198	PrimaryExpression	8		8140666	1					
ANR	8142199	SizeofExpression	sizeof ( int16_t )		8140666	1					
ANR	8142200	Sizeof	sizeof		8140666	0					
ANR	8142201	SizeofOperand	int16_t		8140666	1					
ANR	8142202	Argument	fail		8140666	3					
ANR	8142203	Identifier	fail		8140666	0					
ANR	8142204	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> hLumFilterPos , ( dstW / 2 / 8 + 8 ) * sizeof ( int32_t ) , fail )"	511:12:11350:11438	8140666	7	True				
ANR	8142205	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> hLumFilterPos , ( dstW / 2 / 8 + 8 ) * sizeof ( int32_t ) , fail )"		8140666	0					
ANR	8142206	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142207	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142208	ArgumentList	c		8140666	1					
ANR	8142209	Argument	c		8140666	0					
ANR	8142210	Identifier	c		8140666	0					
ANR	8142211	Argument	c -> hLumFilterPos		8140666	1					
ANR	8142212	PtrMemberAccess	c -> hLumFilterPos		8140666	0					
ANR	8142213	Identifier	c		8140666	0					
ANR	8142214	Identifier	hLumFilterPos		8140666	1					
ANR	8142215	Argument	( dstW / 2 / 8 + 8 ) * sizeof ( int32_t )		8140666	2					
ANR	8142216	MultiplicativeExpression	( dstW / 2 / 8 + 8 ) * sizeof ( int32_t )		8140666	0		*			
ANR	8142217	AdditiveExpression	dstW / 2 / 8 + 8		8140666	0		+			
ANR	8142218	MultiplicativeExpression	dstW / 2 / 8		8140666	0		/			
ANR	8142219	Identifier	dstW		8140666	0					
ANR	8142220	MultiplicativeExpression	2 / 8		8140666	1		/			
ANR	8142221	PrimaryExpression	2		8140666	0					
ANR	8142222	PrimaryExpression	8		8140666	1					
ANR	8142223	PrimaryExpression	8		8140666	1					
ANR	8142224	SizeofExpression	sizeof ( int32_t )		8140666	1					
ANR	8142225	Sizeof	sizeof		8140666	0					
ANR	8142226	SizeofOperand	int32_t		8140666	1					
ANR	8142227	Argument	fail		8140666	3					
ANR	8142228	Identifier	fail		8140666	0					
ANR	8142229	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> hChrFilterPos , ( c -> chrDstW / 2 / 4 + 8 ) * sizeof ( int32_t ) , fail )"	513:12:11453:11541	8140666	8	True				
ANR	8142230	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> hChrFilterPos , ( c -> chrDstW / 2 / 4 + 8 ) * sizeof ( int32_t ) , fail )"		8140666	0					
ANR	8142231	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142232	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8142233	ArgumentList	c		8140666	1					
ANR	8142234	Argument	c		8140666	0					
ANR	8142235	Identifier	c		8140666	0					
ANR	8142236	Argument	c -> hChrFilterPos		8140666	1					
ANR	8142237	PtrMemberAccess	c -> hChrFilterPos		8140666	0					
ANR	8142238	Identifier	c		8140666	0					
ANR	8142239	Identifier	hChrFilterPos		8140666	1					
ANR	8142240	Argument	( c -> chrDstW / 2 / 4 + 8 ) * sizeof ( int32_t )		8140666	2					
ANR	8142241	MultiplicativeExpression	( c -> chrDstW / 2 / 4 + 8 ) * sizeof ( int32_t )		8140666	0		*			
ANR	8142242	AdditiveExpression	c -> chrDstW / 2 / 4 + 8		8140666	0		+			
ANR	8142243	MultiplicativeExpression	c -> chrDstW / 2 / 4		8140666	0		/			
ANR	8142244	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142245	Identifier	c		8140666	0					
ANR	8142246	Identifier	chrDstW		8140666	1					
ANR	8142247	MultiplicativeExpression	2 / 4		8140666	1		/			
ANR	8142248	PrimaryExpression	2		8140666	0					
ANR	8142249	PrimaryExpression	4		8140666	1					
ANR	8142250	PrimaryExpression	8		8140666	1					
ANR	8142251	SizeofExpression	sizeof ( int32_t )		8140666	1					
ANR	8142252	Sizeof	sizeof		8140666	0					
ANR	8142253	SizeofOperand	int32_t		8140666	1					
ANR	8142254	Argument	fail		8140666	3					
ANR	8142255	Identifier	fail		8140666	0					
ANR	8142256	ExpressionStatement	"init_hscaler_mmxext ( dstW , c -> lumXInc , c -> lumMmxextFilterCode , c -> hLumFilter , c -> hLumFilterPos , 8 )"	517:12:11558:11688	8140666	9	True				
ANR	8142257	CallExpression	"init_hscaler_mmxext ( dstW , c -> lumXInc , c -> lumMmxextFilterCode , c -> hLumFilter , c -> hLumFilterPos , 8 )"		8140666	0					
ANR	8142258	Callee	init_hscaler_mmxext		8140666	0					
ANR	8142259	Identifier	init_hscaler_mmxext		8140666	0					
ANR	8142260	ArgumentList	dstW		8140666	1					
ANR	8142261	Argument	dstW		8140666	0					
ANR	8142262	Identifier	dstW		8140666	0					
ANR	8142263	Argument	c -> lumXInc		8140666	1					
ANR	8142264	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8142265	Identifier	c		8140666	0					
ANR	8142266	Identifier	lumXInc		8140666	1					
ANR	8142267	Argument	c -> lumMmxextFilterCode		8140666	2					
ANR	8142268	PtrMemberAccess	c -> lumMmxextFilterCode		8140666	0					
ANR	8142269	Identifier	c		8140666	0					
ANR	8142270	Identifier	lumMmxextFilterCode		8140666	1					
ANR	8142271	Argument	c -> hLumFilter		8140666	3					
ANR	8142272	PtrMemberAccess	c -> hLumFilter		8140666	0					
ANR	8142273	Identifier	c		8140666	0					
ANR	8142274	Identifier	hLumFilter		8140666	1					
ANR	8142275	Argument	c -> hLumFilterPos		8140666	4					
ANR	8142276	PtrMemberAccess	c -> hLumFilterPos		8140666	0					
ANR	8142277	Identifier	c		8140666	0					
ANR	8142278	Identifier	hLumFilterPos		8140666	1					
ANR	8142279	Argument	8		8140666	5					
ANR	8142280	PrimaryExpression	8		8140666	0					
ANR	8142281	ExpressionStatement	"init_hscaler_mmxext ( c -> chrDstW , c -> chrXInc , c -> chrMmxextFilterCode , c -> hChrFilter , c -> hChrFilterPos , 4 )"	521:12:11703:11839	8140666	10	True				
ANR	8142282	CallExpression	"init_hscaler_mmxext ( c -> chrDstW , c -> chrXInc , c -> chrMmxextFilterCode , c -> hChrFilter , c -> hChrFilterPos , 4 )"		8140666	0					
ANR	8142283	Callee	init_hscaler_mmxext		8140666	0					
ANR	8142284	Identifier	init_hscaler_mmxext		8140666	0					
ANR	8142285	ArgumentList	c -> chrDstW		8140666	1					
ANR	8142286	Argument	c -> chrDstW		8140666	0					
ANR	8142287	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142288	Identifier	c		8140666	0					
ANR	8142289	Identifier	chrDstW		8140666	1					
ANR	8142290	Argument	c -> chrXInc		8140666	1					
ANR	8142291	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8142292	Identifier	c		8140666	0					
ANR	8142293	Identifier	chrXInc		8140666	1					
ANR	8142294	Argument	c -> chrMmxextFilterCode		8140666	2					
ANR	8142295	PtrMemberAccess	c -> chrMmxextFilterCode		8140666	0					
ANR	8142296	Identifier	c		8140666	0					
ANR	8142297	Identifier	chrMmxextFilterCode		8140666	1					
ANR	8142298	Argument	c -> hChrFilter		8140666	3					
ANR	8142299	PtrMemberAccess	c -> hChrFilter		8140666	0					
ANR	8142300	Identifier	c		8140666	0					
ANR	8142301	Identifier	hChrFilter		8140666	1					
ANR	8142302	Argument	c -> hChrFilterPos		8140666	4					
ANR	8142303	PtrMemberAccess	c -> hChrFilterPos		8140666	0					
ANR	8142304	Identifier	c		8140666	0					
ANR	8142305	Identifier	hChrFilterPos		8140666	1					
ANR	8142306	Argument	4		8140666	5					
ANR	8142307	PrimaryExpression	4		8140666	0					
ANR	8142308	ExpressionStatement	"mprotect ( c -> lumMmxextFilterCode , c -> lumMmxextFilterCodeSize , PROT_EXEC | PROT_READ )"	529:12:11870:11953	8140666	11	True				
ANR	8142309	CallExpression	"mprotect ( c -> lumMmxextFilterCode , c -> lumMmxextFilterCodeSize , PROT_EXEC | PROT_READ )"		8140666	0					
ANR	8142310	Callee	mprotect		8140666	0					
ANR	8142311	Identifier	mprotect		8140666	0					
ANR	8142312	ArgumentList	c -> lumMmxextFilterCode		8140666	1					
ANR	8142313	Argument	c -> lumMmxextFilterCode		8140666	0					
ANR	8142314	PtrMemberAccess	c -> lumMmxextFilterCode		8140666	0					
ANR	8142315	Identifier	c		8140666	0					
ANR	8142316	Identifier	lumMmxextFilterCode		8140666	1					
ANR	8142317	Argument	c -> lumMmxextFilterCodeSize		8140666	1					
ANR	8142318	PtrMemberAccess	c -> lumMmxextFilterCodeSize		8140666	0					
ANR	8142319	Identifier	c		8140666	0					
ANR	8142320	Identifier	lumMmxextFilterCodeSize		8140666	1					
ANR	8142321	Argument	PROT_EXEC | PROT_READ		8140666	2					
ANR	8142322	InclusiveOrExpression	PROT_EXEC | PROT_READ		8140666	0		|			
ANR	8142323	Identifier	PROT_EXEC		8140666	0					
ANR	8142324	Identifier	PROT_READ		8140666	1					
ANR	8142325	ExpressionStatement	"mprotect ( c -> chrMmxextFilterCode , c -> chrMmxextFilterCodeSize , PROT_EXEC | PROT_READ )"	531:12:11968:12051	8140666	12	True				
ANR	8142326	CallExpression	"mprotect ( c -> chrMmxextFilterCode , c -> chrMmxextFilterCodeSize , PROT_EXEC | PROT_READ )"		8140666	0					
ANR	8142327	Callee	mprotect		8140666	0					
ANR	8142328	Identifier	mprotect		8140666	0					
ANR	8142329	ArgumentList	c -> chrMmxextFilterCode		8140666	1					
ANR	8142330	Argument	c -> chrMmxextFilterCode		8140666	0					
ANR	8142331	PtrMemberAccess	c -> chrMmxextFilterCode		8140666	0					
ANR	8142332	Identifier	c		8140666	0					
ANR	8142333	Identifier	chrMmxextFilterCode		8140666	1					
ANR	8142334	Argument	c -> chrMmxextFilterCodeSize		8140666	1					
ANR	8142335	PtrMemberAccess	c -> chrMmxextFilterCodeSize		8140666	0					
ANR	8142336	Identifier	c		8140666	0					
ANR	8142337	Identifier	chrMmxextFilterCodeSize		8140666	1					
ANR	8142338	Argument	PROT_EXEC | PROT_READ		8140666	2					
ANR	8142339	InclusiveOrExpression	PROT_EXEC | PROT_READ		8140666	0		|			
ANR	8142340	Identifier	PROT_EXEC		8140666	0					
ANR	8142341	Identifier	PROT_READ		8140666	1					
ANR	8142342	ElseStatement	else		8140666	0					
ANR	8142343	CompoundStatement		537:12:12014:12134	8140666	0					
ANR	8142344	IdentifierDeclStatement	const int filterAlign = X86_MMX ( cpu_flags ) ? 4 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1 ;	541:12:12134:12254	8140666	0	True				
ANR	8142345	IdentifierDecl	filterAlign = X86_MMX ( cpu_flags ) ? 4 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	0					
ANR	8142346	IdentifierDeclType	const int		8140666	0					
ANR	8142347	Identifier	filterAlign		8140666	1					
ANR	8142348	AssignmentExpression	filterAlign = X86_MMX ( cpu_flags ) ? 4 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	2		=			
ANR	8142349	Identifier	filterAlign		8140666	0					
ANR	8142350	ConditionalExpression	X86_MMX ( cpu_flags ) ? 4 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	1					
ANR	8142351	Condition	X86_MMX ( cpu_flags )		8140666	0					
ANR	8142352	CallExpression	X86_MMX ( cpu_flags )		8140666	0					
ANR	8142353	Callee	X86_MMX		8140666	0					
ANR	8142354	Identifier	X86_MMX		8140666	0					
ANR	8142355	ArgumentList	cpu_flags		8140666	1					
ANR	8142356	Argument	cpu_flags		8140666	0					
ANR	8142357	Identifier	cpu_flags		8140666	0					
ANR	8142358	PrimaryExpression	4		8140666	1					
ANR	8142359	ConditionalExpression	PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	2					
ANR	8142360	Condition	PPC_ALTIVEC ( cpu_flags )		8140666	0					
ANR	8142361	CallExpression	PPC_ALTIVEC ( cpu_flags )		8140666	0					
ANR	8142362	Callee	PPC_ALTIVEC		8140666	0					
ANR	8142363	Identifier	PPC_ALTIVEC		8140666	0					
ANR	8142364	ArgumentList	cpu_flags		8140666	1					
ANR	8142365	Argument	cpu_flags		8140666	0					
ANR	8142366	Identifier	cpu_flags		8140666	0					
ANR	8142367	PrimaryExpression	8		8140666	1					
ANR	8142368	PrimaryExpression	1		8140666	2					
ANR	8142369	IfStatement	"if ( initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumH , dstFilter -> lumH , c -> param , 1 ) < 0 )"		8140666	1					
ANR	8142370	Condition	"initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumH , dstFilter -> lumH , c -> param , 1 ) < 0"	547:16:12275:12643	8140666	0	True				
ANR	8142371	RelationalExpression	"initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumH , dstFilter -> lumH , c -> param , 1 ) < 0"		8140666	0		<			
ANR	8142372	CallExpression	"initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumH , dstFilter -> lumH , c -> param , 1 )"		8140666	0					
ANR	8142373	Callee	initFilter		8140666	0					
ANR	8142374	Identifier	initFilter		8140666	0					
ANR	8142375	ArgumentList	& c -> hLumFilter		8140666	1					
ANR	8142376	Argument	& c -> hLumFilter		8140666	0					
ANR	8142377	UnaryOperationExpression	& c -> hLumFilter		8140666	0					
ANR	8142378	UnaryOperator	&		8140666	0					
ANR	8142379	PtrMemberAccess	c -> hLumFilter		8140666	1					
ANR	8142380	Identifier	c		8140666	0					
ANR	8142381	Identifier	hLumFilter		8140666	1					
ANR	8142382	Argument	& c -> hLumFilterPos		8140666	1					
ANR	8142383	UnaryOperationExpression	& c -> hLumFilterPos		8140666	0					
ANR	8142384	UnaryOperator	&		8140666	0					
ANR	8142385	PtrMemberAccess	c -> hLumFilterPos		8140666	1					
ANR	8142386	Identifier	c		8140666	0					
ANR	8142387	Identifier	hLumFilterPos		8140666	1					
ANR	8142388	Argument	& c -> hLumFilterSize		8140666	2					
ANR	8142389	UnaryOperationExpression	& c -> hLumFilterSize		8140666	0					
ANR	8142390	UnaryOperator	&		8140666	0					
ANR	8142391	PtrMemberAccess	c -> hLumFilterSize		8140666	1					
ANR	8142392	Identifier	c		8140666	0					
ANR	8142393	Identifier	hLumFilterSize		8140666	1					
ANR	8142394	Argument	c -> lumXInc		8140666	3					
ANR	8142395	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8142396	Identifier	c		8140666	0					
ANR	8142397	Identifier	lumXInc		8140666	1					
ANR	8142398	Argument	srcW		8140666	4					
ANR	8142399	Identifier	srcW		8140666	0					
ANR	8142400	Argument	dstW		8140666	5					
ANR	8142401	Identifier	dstW		8140666	0					
ANR	8142402	Argument	filterAlign		8140666	6					
ANR	8142403	Identifier	filterAlign		8140666	0					
ANR	8142404	Argument	1 << 14		8140666	7					
ANR	8142405	ShiftExpression	1 << 14		8140666	0		<<			
ANR	8142406	PrimaryExpression	1		8140666	0					
ANR	8142407	PrimaryExpression	14		8140666	1					
ANR	8142408	Argument	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags		8140666	8					
ANR	8142409	ConditionalExpression	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags		8140666	0					
ANR	8142410	Condition	flags & SWS_BICUBLIN		8140666	0					
ANR	8142411	BitAndExpression	flags & SWS_BICUBLIN		8140666	0		&			
ANR	8142412	Identifier	flags		8140666	0					
ANR	8142413	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8142414	InclusiveOrExpression	flags | SWS_BICUBIC		8140666	1		|			
ANR	8142415	Identifier	flags		8140666	0					
ANR	8142416	Identifier	SWS_BICUBIC		8140666	1					
ANR	8142417	Identifier	flags		8140666	2					
ANR	8142418	Argument	cpu_flags		8140666	9					
ANR	8142419	Identifier	cpu_flags		8140666	0					
ANR	8142420	Argument	srcFilter -> lumH		8140666	10					
ANR	8142421	PtrMemberAccess	srcFilter -> lumH		8140666	0					
ANR	8142422	Identifier	srcFilter		8140666	0					
ANR	8142423	Identifier	lumH		8140666	1					
ANR	8142424	Argument	dstFilter -> lumH		8140666	11					
ANR	8142425	PtrMemberAccess	dstFilter -> lumH		8140666	0					
ANR	8142426	Identifier	dstFilter		8140666	0					
ANR	8142427	Identifier	lumH		8140666	1					
ANR	8142428	Argument	c -> param		8140666	12					
ANR	8142429	PtrMemberAccess	c -> param		8140666	0					
ANR	8142430	Identifier	c		8140666	0					
ANR	8142431	Identifier	param		8140666	1					
ANR	8142432	Argument	1		8140666	13					
ANR	8142433	PrimaryExpression	1		8140666	0					
ANR	8142434	PrimaryExpression	0		8140666	1					
ANR	8142435	GotoStatement	goto fail ;	559:16:12663:12672	8140666	1	True				
ANR	8142436	Identifier	fail		8140666	0					
ANR	8142437	IfStatement	"if ( initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , c -> chrSrcW , c -> chrDstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrH , dstFilter -> chrH , c -> param , 1 ) < 0 )"		8140666	2					
ANR	8142438	Condition	"initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , c -> chrSrcW , c -> chrDstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrH , dstFilter -> chrH , c -> param , 1 ) < 0"	561:16:12691:13072	8140666	0	True				
ANR	8142439	RelationalExpression	"initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , c -> chrSrcW , c -> chrDstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrH , dstFilter -> chrH , c -> param , 1 ) < 0"		8140666	0		<			
ANR	8142440	CallExpression	"initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , c -> chrSrcW , c -> chrDstW , filterAlign , 1 << 14 , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrH , dstFilter -> chrH , c -> param , 1 )"		8140666	0					
ANR	8142441	Callee	initFilter		8140666	0					
ANR	8142442	Identifier	initFilter		8140666	0					
ANR	8142443	ArgumentList	& c -> hChrFilter		8140666	1					
ANR	8142444	Argument	& c -> hChrFilter		8140666	0					
ANR	8142445	UnaryOperationExpression	& c -> hChrFilter		8140666	0					
ANR	8142446	UnaryOperator	&		8140666	0					
ANR	8142447	PtrMemberAccess	c -> hChrFilter		8140666	1					
ANR	8142448	Identifier	c		8140666	0					
ANR	8142449	Identifier	hChrFilter		8140666	1					
ANR	8142450	Argument	& c -> hChrFilterPos		8140666	1					
ANR	8142451	UnaryOperationExpression	& c -> hChrFilterPos		8140666	0					
ANR	8142452	UnaryOperator	&		8140666	0					
ANR	8142453	PtrMemberAccess	c -> hChrFilterPos		8140666	1					
ANR	8142454	Identifier	c		8140666	0					
ANR	8142455	Identifier	hChrFilterPos		8140666	1					
ANR	8142456	Argument	& c -> hChrFilterSize		8140666	2					
ANR	8142457	UnaryOperationExpression	& c -> hChrFilterSize		8140666	0					
ANR	8142458	UnaryOperator	&		8140666	0					
ANR	8142459	PtrMemberAccess	c -> hChrFilterSize		8140666	1					
ANR	8142460	Identifier	c		8140666	0					
ANR	8142461	Identifier	hChrFilterSize		8140666	1					
ANR	8142462	Argument	c -> chrXInc		8140666	3					
ANR	8142463	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8142464	Identifier	c		8140666	0					
ANR	8142465	Identifier	chrXInc		8140666	1					
ANR	8142466	Argument	c -> chrSrcW		8140666	4					
ANR	8142467	PtrMemberAccess	c -> chrSrcW		8140666	0					
ANR	8142468	Identifier	c		8140666	0					
ANR	8142469	Identifier	chrSrcW		8140666	1					
ANR	8142470	Argument	c -> chrDstW		8140666	5					
ANR	8142471	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8142472	Identifier	c		8140666	0					
ANR	8142473	Identifier	chrDstW		8140666	1					
ANR	8142474	Argument	filterAlign		8140666	6					
ANR	8142475	Identifier	filterAlign		8140666	0					
ANR	8142476	Argument	1 << 14		8140666	7					
ANR	8142477	ShiftExpression	1 << 14		8140666	0		<<			
ANR	8142478	PrimaryExpression	1		8140666	0					
ANR	8142479	PrimaryExpression	14		8140666	1					
ANR	8142480	Argument	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags		8140666	8					
ANR	8142481	ConditionalExpression	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags		8140666	0					
ANR	8142482	Condition	flags & SWS_BICUBLIN		8140666	0					
ANR	8142483	BitAndExpression	flags & SWS_BICUBLIN		8140666	0		&			
ANR	8142484	Identifier	flags		8140666	0					
ANR	8142485	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8142486	InclusiveOrExpression	flags | SWS_BILINEAR		8140666	1		|			
ANR	8142487	Identifier	flags		8140666	0					
ANR	8142488	Identifier	SWS_BILINEAR		8140666	1					
ANR	8142489	Identifier	flags		8140666	2					
ANR	8142490	Argument	cpu_flags		8140666	9					
ANR	8142491	Identifier	cpu_flags		8140666	0					
ANR	8142492	Argument	srcFilter -> chrH		8140666	10					
ANR	8142493	PtrMemberAccess	srcFilter -> chrH		8140666	0					
ANR	8142494	Identifier	srcFilter		8140666	0					
ANR	8142495	Identifier	chrH		8140666	1					
ANR	8142496	Argument	dstFilter -> chrH		8140666	11					
ANR	8142497	PtrMemberAccess	dstFilter -> chrH		8140666	0					
ANR	8142498	Identifier	dstFilter		8140666	0					
ANR	8142499	Identifier	chrH		8140666	1					
ANR	8142500	Argument	c -> param		8140666	12					
ANR	8142501	PtrMemberAccess	c -> param		8140666	0					
ANR	8142502	Identifier	c		8140666	0					
ANR	8142503	Identifier	param		8140666	1					
ANR	8142504	Argument	1		8140666	13					
ANR	8142505	PrimaryExpression	1		8140666	0					
ANR	8142506	PrimaryExpression	0		8140666	1					
ANR	8142507	GotoStatement	goto fail ;	573:16:13092:13101	8140666	1	True				
ANR	8142508	Identifier	fail		8140666	0					
ANR	8142509	CompoundStatement		581:8:13110:13226	8140666	74					
ANR	8142510	IdentifierDeclStatement	const int filterAlign = X86_MMX ( cpu_flags ) ? 2 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1 ;	585:8:13230:13346	8140666	0	True				
ANR	8142511	IdentifierDecl	filterAlign = X86_MMX ( cpu_flags ) ? 2 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	0					
ANR	8142512	IdentifierDeclType	const int		8140666	0					
ANR	8142513	Identifier	filterAlign		8140666	1					
ANR	8142514	AssignmentExpression	filterAlign = X86_MMX ( cpu_flags ) ? 2 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	2		=			
ANR	8142515	Identifier	filterAlign		8140666	0					
ANR	8142516	ConditionalExpression	X86_MMX ( cpu_flags ) ? 2 : PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	1					
ANR	8142517	Condition	X86_MMX ( cpu_flags )		8140666	0					
ANR	8142518	CallExpression	X86_MMX ( cpu_flags )		8140666	0					
ANR	8142519	Callee	X86_MMX		8140666	0					
ANR	8142520	Identifier	X86_MMX		8140666	0					
ANR	8142521	ArgumentList	cpu_flags		8140666	1					
ANR	8142522	Argument	cpu_flags		8140666	0					
ANR	8142523	Identifier	cpu_flags		8140666	0					
ANR	8142524	PrimaryExpression	2		8140666	1					
ANR	8142525	ConditionalExpression	PPC_ALTIVEC ( cpu_flags ) ? 8 : 1		8140666	2					
ANR	8142526	Condition	PPC_ALTIVEC ( cpu_flags )		8140666	0					
ANR	8142527	CallExpression	PPC_ALTIVEC ( cpu_flags )		8140666	0					
ANR	8142528	Callee	PPC_ALTIVEC		8140666	0					
ANR	8142529	Identifier	PPC_ALTIVEC		8140666	0					
ANR	8142530	ArgumentList	cpu_flags		8140666	1					
ANR	8142531	Argument	cpu_flags		8140666	0					
ANR	8142532	Identifier	cpu_flags		8140666	0					
ANR	8142533	PrimaryExpression	8		8140666	1					
ANR	8142534	PrimaryExpression	1		8140666	2					
ANR	8142535	IfStatement	"if ( initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumV , dstFilter -> lumV , c -> param , 0 ) < 0 )"		8140666	1					
ANR	8142536	Condition	"initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumV , dstFilter -> lumV , c -> param , 0 ) < 0"	591:12:13363:13689	8140666	0	True				
ANR	8142537	RelationalExpression	"initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumV , dstFilter -> lumV , c -> param , 0 ) < 0"		8140666	0		<			
ANR	8142538	CallExpression	"initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags , cpu_flags , srcFilter -> lumV , dstFilter -> lumV , c -> param , 0 )"		8140666	0					
ANR	8142539	Callee	initFilter		8140666	0					
ANR	8142540	Identifier	initFilter		8140666	0					
ANR	8142541	ArgumentList	& c -> vLumFilter		8140666	1					
ANR	8142542	Argument	& c -> vLumFilter		8140666	0					
ANR	8142543	UnaryOperationExpression	& c -> vLumFilter		8140666	0					
ANR	8142544	UnaryOperator	&		8140666	0					
ANR	8142545	PtrMemberAccess	c -> vLumFilter		8140666	1					
ANR	8142546	Identifier	c		8140666	0					
ANR	8142547	Identifier	vLumFilter		8140666	1					
ANR	8142548	Argument	& c -> vLumFilterPos		8140666	1					
ANR	8142549	UnaryOperationExpression	& c -> vLumFilterPos		8140666	0					
ANR	8142550	UnaryOperator	&		8140666	0					
ANR	8142551	PtrMemberAccess	c -> vLumFilterPos		8140666	1					
ANR	8142552	Identifier	c		8140666	0					
ANR	8142553	Identifier	vLumFilterPos		8140666	1					
ANR	8142554	Argument	& c -> vLumFilterSize		8140666	2					
ANR	8142555	UnaryOperationExpression	& c -> vLumFilterSize		8140666	0					
ANR	8142556	UnaryOperator	&		8140666	0					
ANR	8142557	PtrMemberAccess	c -> vLumFilterSize		8140666	1					
ANR	8142558	Identifier	c		8140666	0					
ANR	8142559	Identifier	vLumFilterSize		8140666	1					
ANR	8142560	Argument	c -> lumYInc		8140666	3					
ANR	8142561	PtrMemberAccess	c -> lumYInc		8140666	0					
ANR	8142562	Identifier	c		8140666	0					
ANR	8142563	Identifier	lumYInc		8140666	1					
ANR	8142564	Argument	srcH		8140666	4					
ANR	8142565	Identifier	srcH		8140666	0					
ANR	8142566	Argument	dstH		8140666	5					
ANR	8142567	Identifier	dstH		8140666	0					
ANR	8142568	Argument	filterAlign		8140666	6					
ANR	8142569	Identifier	filterAlign		8140666	0					
ANR	8142570	Argument	1 << 12		8140666	7					
ANR	8142571	ShiftExpression	1 << 12		8140666	0		<<			
ANR	8142572	PrimaryExpression	1		8140666	0					
ANR	8142573	PrimaryExpression	12		8140666	1					
ANR	8142574	Argument	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags		8140666	8					
ANR	8142575	ConditionalExpression	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BICUBIC ) : flags		8140666	0					
ANR	8142576	Condition	flags & SWS_BICUBLIN		8140666	0					
ANR	8142577	BitAndExpression	flags & SWS_BICUBLIN		8140666	0		&			
ANR	8142578	Identifier	flags		8140666	0					
ANR	8142579	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8142580	InclusiveOrExpression	flags | SWS_BICUBIC		8140666	1		|			
ANR	8142581	Identifier	flags		8140666	0					
ANR	8142582	Identifier	SWS_BICUBIC		8140666	1					
ANR	8142583	Identifier	flags		8140666	2					
ANR	8142584	Argument	cpu_flags		8140666	9					
ANR	8142585	Identifier	cpu_flags		8140666	0					
ANR	8142586	Argument	srcFilter -> lumV		8140666	10					
ANR	8142587	PtrMemberAccess	srcFilter -> lumV		8140666	0					
ANR	8142588	Identifier	srcFilter		8140666	0					
ANR	8142589	Identifier	lumV		8140666	1					
ANR	8142590	Argument	dstFilter -> lumV		8140666	11					
ANR	8142591	PtrMemberAccess	dstFilter -> lumV		8140666	0					
ANR	8142592	Identifier	dstFilter		8140666	0					
ANR	8142593	Identifier	lumV		8140666	1					
ANR	8142594	Argument	c -> param		8140666	12					
ANR	8142595	PtrMemberAccess	c -> param		8140666	0					
ANR	8142596	Identifier	c		8140666	0					
ANR	8142597	Identifier	param		8140666	1					
ANR	8142598	Argument	0		8140666	13					
ANR	8142599	PrimaryExpression	0		8140666	0					
ANR	8142600	PrimaryExpression	0		8140666	1					
ANR	8142601	GotoStatement	goto fail ;	601:12:13705:13714	8140666	1	True				
ANR	8142602	Identifier	fail		8140666	0					
ANR	8142603	IfStatement	"if ( initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , c -> chrSrcH , c -> chrDstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrV , dstFilter -> chrV , c -> param , 0 ) < 0 )"		8140666	2					
ANR	8142604	Condition	"initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , c -> chrSrcH , c -> chrDstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrV , dstFilter -> chrV , c -> param , 0 ) < 0"	603:12:13729:14092	8140666	0	True				
ANR	8142605	RelationalExpression	"initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , c -> chrSrcH , c -> chrDstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrV , dstFilter -> chrV , c -> param , 0 ) < 0"		8140666	0		<			
ANR	8142606	CallExpression	"initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , c -> chrSrcH , c -> chrDstH , filterAlign , ( 1 << 12 ) , ( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags , cpu_flags , srcFilter -> chrV , dstFilter -> chrV , c -> param , 0 )"		8140666	0					
ANR	8142607	Callee	initFilter		8140666	0					
ANR	8142608	Identifier	initFilter		8140666	0					
ANR	8142609	ArgumentList	& c -> vChrFilter		8140666	1					
ANR	8142610	Argument	& c -> vChrFilter		8140666	0					
ANR	8142611	UnaryOperationExpression	& c -> vChrFilter		8140666	0					
ANR	8142612	UnaryOperator	&		8140666	0					
ANR	8142613	PtrMemberAccess	c -> vChrFilter		8140666	1					
ANR	8142614	Identifier	c		8140666	0					
ANR	8142615	Identifier	vChrFilter		8140666	1					
ANR	8142616	Argument	& c -> vChrFilterPos		8140666	1					
ANR	8142617	UnaryOperationExpression	& c -> vChrFilterPos		8140666	0					
ANR	8142618	UnaryOperator	&		8140666	0					
ANR	8142619	PtrMemberAccess	c -> vChrFilterPos		8140666	1					
ANR	8142620	Identifier	c		8140666	0					
ANR	8142621	Identifier	vChrFilterPos		8140666	1					
ANR	8142622	Argument	& c -> vChrFilterSize		8140666	2					
ANR	8142623	UnaryOperationExpression	& c -> vChrFilterSize		8140666	0					
ANR	8142624	UnaryOperator	&		8140666	0					
ANR	8142625	PtrMemberAccess	c -> vChrFilterSize		8140666	1					
ANR	8142626	Identifier	c		8140666	0					
ANR	8142627	Identifier	vChrFilterSize		8140666	1					
ANR	8142628	Argument	c -> chrYInc		8140666	3					
ANR	8142629	PtrMemberAccess	c -> chrYInc		8140666	0					
ANR	8142630	Identifier	c		8140666	0					
ANR	8142631	Identifier	chrYInc		8140666	1					
ANR	8142632	Argument	c -> chrSrcH		8140666	4					
ANR	8142633	PtrMemberAccess	c -> chrSrcH		8140666	0					
ANR	8142634	Identifier	c		8140666	0					
ANR	8142635	Identifier	chrSrcH		8140666	1					
ANR	8142636	Argument	c -> chrDstH		8140666	5					
ANR	8142637	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8142638	Identifier	c		8140666	0					
ANR	8142639	Identifier	chrDstH		8140666	1					
ANR	8142640	Argument	filterAlign		8140666	6					
ANR	8142641	Identifier	filterAlign		8140666	0					
ANR	8142642	Argument	1 << 12		8140666	7					
ANR	8142643	ShiftExpression	1 << 12		8140666	0		<<			
ANR	8142644	PrimaryExpression	1		8140666	0					
ANR	8142645	PrimaryExpression	12		8140666	1					
ANR	8142646	Argument	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags		8140666	8					
ANR	8142647	ConditionalExpression	( flags & SWS_BICUBLIN ) ? ( flags | SWS_BILINEAR ) : flags		8140666	0					
ANR	8142648	Condition	flags & SWS_BICUBLIN		8140666	0					
ANR	8142649	BitAndExpression	flags & SWS_BICUBLIN		8140666	0		&			
ANR	8142650	Identifier	flags		8140666	0					
ANR	8142651	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8142652	InclusiveOrExpression	flags | SWS_BILINEAR		8140666	1		|			
ANR	8142653	Identifier	flags		8140666	0					
ANR	8142654	Identifier	SWS_BILINEAR		8140666	1					
ANR	8142655	Identifier	flags		8140666	2					
ANR	8142656	Argument	cpu_flags		8140666	9					
ANR	8142657	Identifier	cpu_flags		8140666	0					
ANR	8142658	Argument	srcFilter -> chrV		8140666	10					
ANR	8142659	PtrMemberAccess	srcFilter -> chrV		8140666	0					
ANR	8142660	Identifier	srcFilter		8140666	0					
ANR	8142661	Identifier	chrV		8140666	1					
ANR	8142662	Argument	dstFilter -> chrV		8140666	11					
ANR	8142663	PtrMemberAccess	dstFilter -> chrV		8140666	0					
ANR	8142664	Identifier	dstFilter		8140666	0					
ANR	8142665	Identifier	chrV		8140666	1					
ANR	8142666	Argument	c -> param		8140666	12					
ANR	8142667	PtrMemberAccess	c -> param		8140666	0					
ANR	8142668	Identifier	c		8140666	0					
ANR	8142669	Identifier	param		8140666	1					
ANR	8142670	Argument	0		8140666	13					
ANR	8142671	PrimaryExpression	0		8140666	0					
ANR	8142672	PrimaryExpression	0		8140666	1					
ANR	8142673	GotoStatement	goto fail ;	615:12:14108:14117	8140666	1	True				
ANR	8142674	Identifier	fail		8140666	0					
ANR	8142675	Statement	FF_ALLOC_OR_GOTO	621:8:14148:14163	8140666	3	True				
ANR	8142676	Statement	(	621:24:14164:14164	8140666	4	True				
ANR	8142677	Statement	c	621:25:14165:14165	8140666	5	True				
ANR	8142678	Statement	","	621:26:14166:14166	8140666	6	True				
ANR	8142679	Statement	c	621:28:14168:14168	8140666	7	True				
ANR	8142680	Statement	->	621:29:14169:14170	8140666	8	True				
ANR	8142681	Statement	vYCoeffsBank	621:31:14171:14182	8140666	9	True				
ANR	8142682	Statement	","	621:43:14183:14183	8140666	10	True				
ANR	8142683	Statement	sizeof	621:45:14185:14190	8140666	11	True				
ANR	8142684	Statement	(	621:51:14191:14191	8140666	12	True				
ANR	8142685	Statement	vector	621:52:14192:14197	8140666	13	True				
ANR	8142686	Statement	signed	621:59:14199:14204	8140666	14	True				
ANR	8142687	Statement	short	621:66:14206:14210	8140666	15	True				
ANR	8142688	Statement	)	621:71:14211:14211	8140666	16	True				
ANR	8142689	Statement	*	621:73:14213:14213	8140666	17	True				
ANR	8142690	Statement	c	621:75:14215:14215	8140666	18	True				
ANR	8142691	Statement	->	621:76:14216:14217	8140666	19	True				
ANR	8142692	Statement	vLumFilterSize	621:78:14218:14231	8140666	20	True				
ANR	8142693	Statement	*	621:93:14233:14233	8140666	21	True				
ANR	8142694	Statement	c	621:95:14235:14235	8140666	22	True				
ANR	8142695	Statement	->	621:96:14236:14237	8140666	23	True				
ANR	8142696	Statement	dstH	621:98:14238:14241	8140666	24	True				
ANR	8142697	Statement	","	621:102:14242:14242	8140666	25	True				
ANR	8142698	Statement	fail	621:107:14247:14250	8140666	26	True				
ANR	8142699	Statement	)	621:111:14251:14251	8140666	27	True				
ANR	8142700	ExpressionStatement		621:112:14252:14252	8140666	28	True				
ANR	8142701	Statement	FF_ALLOC_OR_GOTO	623:8:14263:14278	8140666	29	True				
ANR	8142702	Statement	(	623:24:14279:14279	8140666	30	True				
ANR	8142703	Statement	c	623:25:14280:14280	8140666	31	True				
ANR	8142704	Statement	","	623:26:14281:14281	8140666	32	True				
ANR	8142705	Statement	c	623:28:14283:14283	8140666	33	True				
ANR	8142706	Statement	->	623:29:14284:14285	8140666	34	True				
ANR	8142707	Statement	vCCoeffsBank	623:31:14286:14297	8140666	35	True				
ANR	8142708	Statement	","	623:43:14298:14298	8140666	36	True				
ANR	8142709	Statement	sizeof	623:45:14300:14305	8140666	37	True				
ANR	8142710	Statement	(	623:51:14306:14306	8140666	38	True				
ANR	8142711	Statement	vector	623:52:14307:14312	8140666	39	True				
ANR	8142712	Statement	signed	623:59:14314:14319	8140666	40	True				
ANR	8142713	Statement	short	623:66:14321:14325	8140666	41	True				
ANR	8142714	Statement	)	623:71:14326:14326	8140666	42	True				
ANR	8142715	Statement	*	623:73:14328:14328	8140666	43	True				
ANR	8142716	Statement	c	623:75:14330:14330	8140666	44	True				
ANR	8142717	Statement	->	623:76:14331:14332	8140666	45	True				
ANR	8142718	Statement	vChrFilterSize	623:78:14333:14346	8140666	46	True				
ANR	8142719	Statement	*	623:93:14348:14348	8140666	47	True				
ANR	8142720	Statement	c	623:95:14350:14350	8140666	48	True				
ANR	8142721	Statement	->	623:96:14351:14352	8140666	49	True				
ANR	8142722	Statement	chrDstH	623:98:14353:14359	8140666	50	True				
ANR	8142723	Statement	","	623:105:14360:14360	8140666	51	True				
ANR	8142724	Statement	fail	623:107:14362:14365	8140666	52	True				
ANR	8142725	Statement	)	623:111:14366:14366	8140666	53	True				
ANR	8142726	ExpressionStatement		623:112:14367:14367	8140666	54	True				
ANR	8142727	ForStatement	for ( i = 0 ; i < c -> vLumFilterSize * c -> dstH ; i ++ )		8140666	55					
ANR	8142728	ForInit	i = 0 ;	627:13:14385:14390	8140666	0	True				
ANR	8142729	AssignmentExpression	i = 0		8140666	0		=			
ANR	8142730	Identifier	i		8140666	0					
ANR	8142731	PrimaryExpression	0		8140666	1					
ANR	8142732	Condition	i < c -> vLumFilterSize * c -> dstH	627:20:14392:14422	8140666	1	True				
ANR	8142733	RelationalExpression	i < c -> vLumFilterSize * c -> dstH		8140666	0		<			
ANR	8142734	Identifier	i		8140666	0					
ANR	8142735	MultiplicativeExpression	c -> vLumFilterSize * c -> dstH		8140666	1		*			
ANR	8142736	PtrMemberAccess	c -> vLumFilterSize		8140666	0					
ANR	8142737	Identifier	c		8140666	0					
ANR	8142738	Identifier	vLumFilterSize		8140666	1					
ANR	8142739	PtrMemberAccess	c -> dstH		8140666	1					
ANR	8142740	Identifier	c		8140666	0					
ANR	8142741	Identifier	dstH		8140666	1					
ANR	8142742	PostIncDecOperationExpression	i ++	627:53:14425:14427	8140666	2	True				
ANR	8142743	Identifier	i		8140666	0					
ANR	8142744	IncDec	++		8140666	1					
ANR	8142745	CompoundStatement		627:12:14345:14384	8140666	3					
ANR	8142746	IdentifierDeclStatement	int j ;	629:12:14445:14450	8140666	0	True				
ANR	8142747	IdentifierDecl	j		8140666	0					
ANR	8142748	IdentifierDeclType	int		8140666	0					
ANR	8142749	Identifier	j		8140666	1					
ANR	8142750	IdentifierDeclStatement	short * p = ( short * ) & c -> vYCoeffsBank [ i ] ;	631:12:14465:14504	8140666	1	True				
ANR	8142751	IdentifierDecl	* p = ( short * ) & c -> vYCoeffsBank [ i ]		8140666	0					
ANR	8142752	IdentifierDeclType	short *		8140666	0					
ANR	8142753	Identifier	p		8140666	1					
ANR	8142754	AssignmentExpression	* p = ( short * ) & c -> vYCoeffsBank [ i ]		8140666	2		=			
ANR	8142755	Identifier	p		8140666	0					
ANR	8142756	CastExpression	( short * ) & c -> vYCoeffsBank [ i ]		8140666	1					
ANR	8142757	CastTarget	short *		8140666	0					
ANR	8142758	UnaryOperationExpression	& c -> vYCoeffsBank [ i ]		8140666	1					
ANR	8142759	UnaryOperator	&		8140666	0					
ANR	8142760	ArrayIndexing	c -> vYCoeffsBank [ i ]		8140666	1					
ANR	8142761	PtrMemberAccess	c -> vYCoeffsBank		8140666	0					
ANR	8142762	Identifier	c		8140666	0					
ANR	8142763	Identifier	vYCoeffsBank		8140666	1					
ANR	8142764	Identifier	i		8140666	1					
ANR	8142765	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		8140666	2					
ANR	8142766	ForInit	j = 0 ;	633:17:14524:14529	8140666	0	True				
ANR	8142767	AssignmentExpression	j = 0		8140666	0		=			
ANR	8142768	Identifier	j		8140666	0					
ANR	8142769	PrimaryExpression	0		8140666	1					
ANR	8142770	Condition	j < 8	633:24:14531:14535	8140666	1	True				
ANR	8142771	RelationalExpression	j < 8		8140666	0		<			
ANR	8142772	Identifier	j		8140666	0					
ANR	8142773	PrimaryExpression	8		8140666	1					
ANR	8142774	PostIncDecOperationExpression	j ++	633:31:14538:14540	8140666	2	True				
ANR	8142775	Identifier	j		8140666	0					
ANR	8142776	IncDec	++		8140666	1					
ANR	8142777	ExpressionStatement	p [ j ] = c -> vLumFilter [ i ]	635:16:14560:14583	8140666	3	True				
ANR	8142778	AssignmentExpression	p [ j ] = c -> vLumFilter [ i ]		8140666	0		=			
ANR	8142779	ArrayIndexing	p [ j ]		8140666	0					
ANR	8142780	Identifier	p		8140666	0					
ANR	8142781	Identifier	j		8140666	1					
ANR	8142782	ArrayIndexing	c -> vLumFilter [ i ]		8140666	1					
ANR	8142783	PtrMemberAccess	c -> vLumFilter		8140666	0					
ANR	8142784	Identifier	c		8140666	0					
ANR	8142785	Identifier	vLumFilter		8140666	1					
ANR	8142786	Identifier	i		8140666	1					
ANR	8142787	ForStatement	for ( i = 0 ; i < c -> vChrFilterSize * c -> chrDstH ; i ++ )		8140666	56					
ANR	8142788	ForInit	i = 0 ;	641:13:14612:14617	8140666	0	True				
ANR	8142789	AssignmentExpression	i = 0		8140666	0		=			
ANR	8142790	Identifier	i		8140666	0					
ANR	8142791	PrimaryExpression	0		8140666	1					
ANR	8142792	Condition	i < c -> vChrFilterSize * c -> chrDstH	641:20:14619:14652	8140666	1	True				
ANR	8142793	RelationalExpression	i < c -> vChrFilterSize * c -> chrDstH		8140666	0		<			
ANR	8142794	Identifier	i		8140666	0					
ANR	8142795	MultiplicativeExpression	c -> vChrFilterSize * c -> chrDstH		8140666	1		*			
ANR	8142796	PtrMemberAccess	c -> vChrFilterSize		8140666	0					
ANR	8142797	Identifier	c		8140666	0					
ANR	8142798	Identifier	vChrFilterSize		8140666	1					
ANR	8142799	PtrMemberAccess	c -> chrDstH		8140666	1					
ANR	8142800	Identifier	c		8140666	0					
ANR	8142801	Identifier	chrDstH		8140666	1					
ANR	8142802	PostIncDecOperationExpression	i ++	641:56:14655:14657	8140666	2	True				
ANR	8142803	Identifier	i		8140666	0					
ANR	8142804	IncDec	++		8140666	1					
ANR	8142805	CompoundStatement		641:12:14575:14614	8140666	3					
ANR	8142806	IdentifierDeclStatement	int j ;	643:12:14675:14680	8140666	0	True				
ANR	8142807	IdentifierDecl	j		8140666	0					
ANR	8142808	IdentifierDeclType	int		8140666	0					
ANR	8142809	Identifier	j		8140666	1					
ANR	8142810	IdentifierDeclStatement	short * p = ( short * ) & c -> vCCoeffsBank [ i ] ;	645:12:14695:14734	8140666	1	True				
ANR	8142811	IdentifierDecl	* p = ( short * ) & c -> vCCoeffsBank [ i ]		8140666	0					
ANR	8142812	IdentifierDeclType	short *		8140666	0					
ANR	8142813	Identifier	p		8140666	1					
ANR	8142814	AssignmentExpression	* p = ( short * ) & c -> vCCoeffsBank [ i ]		8140666	2		=			
ANR	8142815	Identifier	p		8140666	0					
ANR	8142816	CastExpression	( short * ) & c -> vCCoeffsBank [ i ]		8140666	1					
ANR	8142817	CastTarget	short *		8140666	0					
ANR	8142818	UnaryOperationExpression	& c -> vCCoeffsBank [ i ]		8140666	1					
ANR	8142819	UnaryOperator	&		8140666	0					
ANR	8142820	ArrayIndexing	c -> vCCoeffsBank [ i ]		8140666	1					
ANR	8142821	PtrMemberAccess	c -> vCCoeffsBank		8140666	0					
ANR	8142822	Identifier	c		8140666	0					
ANR	8142823	Identifier	vCCoeffsBank		8140666	1					
ANR	8142824	Identifier	i		8140666	1					
ANR	8142825	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		8140666	2					
ANR	8142826	ForInit	j = 0 ;	647:17:14754:14759	8140666	0	True				
ANR	8142827	AssignmentExpression	j = 0		8140666	0		=			
ANR	8142828	Identifier	j		8140666	0					
ANR	8142829	PrimaryExpression	0		8140666	1					
ANR	8142830	Condition	j < 8	647:24:14761:14765	8140666	1	True				
ANR	8142831	RelationalExpression	j < 8		8140666	0		<			
ANR	8142832	Identifier	j		8140666	0					
ANR	8142833	PrimaryExpression	8		8140666	1					
ANR	8142834	PostIncDecOperationExpression	j ++	647:31:14768:14770	8140666	2	True				
ANR	8142835	Identifier	j		8140666	0					
ANR	8142836	IncDec	++		8140666	1					
ANR	8142837	ExpressionStatement	p [ j ] = c -> vChrFilter [ i ]	649:16:14790:14813	8140666	3	True				
ANR	8142838	AssignmentExpression	p [ j ] = c -> vChrFilter [ i ]		8140666	0		=			
ANR	8142839	ArrayIndexing	p [ j ]		8140666	0					
ANR	8142840	Identifier	p		8140666	0					
ANR	8142841	Identifier	j		8140666	1					
ANR	8142842	ArrayIndexing	c -> vChrFilter [ i ]		8140666	1					
ANR	8142843	PtrMemberAccess	c -> vChrFilter		8140666	0					
ANR	8142844	Identifier	c		8140666	0					
ANR	8142845	Identifier	vChrFilter		8140666	1					
ANR	8142846	Identifier	i		8140666	1					
ANR	8142847	ExpressionStatement	c -> vLumBufSize = c -> vLumFilterSize	661:4:14939:14973	8140666	75	True				
ANR	8142848	AssignmentExpression	c -> vLumBufSize = c -> vLumFilterSize		8140666	0		=			
ANR	8142849	PtrMemberAccess	c -> vLumBufSize		8140666	0					
ANR	8142850	Identifier	c		8140666	0					
ANR	8142851	Identifier	vLumBufSize		8140666	1					
ANR	8142852	PtrMemberAccess	c -> vLumFilterSize		8140666	1					
ANR	8142853	Identifier	c		8140666	0					
ANR	8142854	Identifier	vLumFilterSize		8140666	1					
ANR	8142855	ExpressionStatement	c -> vChrBufSize = c -> vChrFilterSize	663:4:14980:15014	8140666	76	True				
ANR	8142856	AssignmentExpression	c -> vChrBufSize = c -> vChrFilterSize		8140666	0		=			
ANR	8142857	PtrMemberAccess	c -> vChrBufSize		8140666	0					
ANR	8142858	Identifier	c		8140666	0					
ANR	8142859	Identifier	vChrBufSize		8140666	1					
ANR	8142860	PtrMemberAccess	c -> vChrFilterSize		8140666	1					
ANR	8142861	Identifier	c		8140666	0					
ANR	8142862	Identifier	vChrFilterSize		8140666	1					
ANR	8142863	ForStatement	for ( i = 0 ; i < dstH ; i ++ )		8140666	77					
ANR	8142864	ForInit	i = 0 ;	665:9:15026:15031	8140666	0	True				
ANR	8142865	AssignmentExpression	i = 0		8140666	0		=			
ANR	8142866	Identifier	i		8140666	0					
ANR	8142867	PrimaryExpression	0		8140666	1					
ANR	8142868	Condition	i < dstH	665:16:15033:15040	8140666	1	True				
ANR	8142869	RelationalExpression	i < dstH		8140666	0		<			
ANR	8142870	Identifier	i		8140666	0					
ANR	8142871	Identifier	dstH		8140666	1					
ANR	8142872	PostIncDecOperationExpression	i ++	665:26:15043:15045	8140666	2	True				
ANR	8142873	Identifier	i		8140666	0					
ANR	8142874	IncDec	++		8140666	1					
ANR	8142875	CompoundStatement		665:8:14996:15200	8140666	3					
ANR	8142876	IdentifierDeclStatement	int chrI = ( int64_t ) i * c -> chrDstH / dstH ;	667:8:15059:15105	8140666	0	True				
ANR	8142877	IdentifierDecl	chrI = ( int64_t ) i * c -> chrDstH / dstH		8140666	0					
ANR	8142878	IdentifierDeclType	int		8140666	0					
ANR	8142879	Identifier	chrI		8140666	1					
ANR	8142880	AssignmentExpression	chrI = ( int64_t ) i * c -> chrDstH / dstH		8140666	2		=			
ANR	8142881	Identifier	chrI		8140666	0					
ANR	8142882	MultiplicativeExpression	( int64_t ) i * c -> chrDstH / dstH		8140666	1		*			
ANR	8142883	CastExpression	( int64_t ) i		8140666	0					
ANR	8142884	CastTarget	int64_t		8140666	0					
ANR	8142885	Identifier	i		8140666	1					
ANR	8142886	MultiplicativeExpression	c -> chrDstH / dstH		8140666	1		/			
ANR	8142887	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8142888	Identifier	c		8140666	0					
ANR	8142889	Identifier	chrDstH		8140666	1					
ANR	8142890	Identifier	dstH		8140666	1					
ANR	8142891	IdentifierDeclStatement	"int nextSlice = FFMAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample ) ) ;"	669:8:15116:15320	8140666	1	True				
ANR	8142892	IdentifierDecl	"nextSlice = FFMAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample ) )"		8140666	0					
ANR	8142893	IdentifierDeclType	int		8140666	0					
ANR	8142894	Identifier	nextSlice		8140666	1					
ANR	8142895	AssignmentExpression	"nextSlice = FFMAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample ) )"		8140666	2		=			
ANR	8142896	Identifier	nextSlice		8140666	0					
ANR	8142897	CallExpression	"FFMAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample ) )"		8140666	1					
ANR	8142898	Callee	FFMAX		8140666	0					
ANR	8142899	Identifier	FFMAX		8140666	0					
ANR	8142900	ArgumentList	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		8140666	1					
ANR	8142901	Argument	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		8140666	0					
ANR	8142902	AdditiveExpression	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		8140666	0		+			
ANR	8142903	ArrayIndexing	c -> vLumFilterPos [ i ]		8140666	0					
ANR	8142904	PtrMemberAccess	c -> vLumFilterPos		8140666	0					
ANR	8142905	Identifier	c		8140666	0					
ANR	8142906	Identifier	vLumFilterPos		8140666	1					
ANR	8142907	Identifier	i		8140666	1					
ANR	8142908	AdditiveExpression	c -> vLumFilterSize - 1		8140666	1		-			
ANR	8142909	PtrMemberAccess	c -> vLumFilterSize		8140666	0					
ANR	8142910	Identifier	c		8140666	0					
ANR	8142911	Identifier	vLumFilterSize		8140666	1					
ANR	8142912	PrimaryExpression	1		8140666	1					
ANR	8142913	Argument	( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample		8140666	1					
ANR	8142914	ShiftExpression	( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << c -> chrSrcVSubSample		8140666	0		<<			
ANR	8142915	AdditiveExpression	c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1		8140666	0		+			
ANR	8142916	ArrayIndexing	c -> vChrFilterPos [ chrI ]		8140666	0					
ANR	8142917	PtrMemberAccess	c -> vChrFilterPos		8140666	0					
ANR	8142918	Identifier	c		8140666	0					
ANR	8142919	Identifier	vChrFilterPos		8140666	1					
ANR	8142920	Identifier	chrI		8140666	1					
ANR	8142921	AdditiveExpression	c -> vChrFilterSize - 1		8140666	1		-			
ANR	8142922	PtrMemberAccess	c -> vChrFilterSize		8140666	0					
ANR	8142923	Identifier	c		8140666	0					
ANR	8142924	Identifier	vChrFilterSize		8140666	1					
ANR	8142925	PrimaryExpression	1		8140666	1					
ANR	8142926	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8142927	Identifier	c		8140666	0					
ANR	8142928	Identifier	chrSrcVSubSample		8140666	1					
ANR	8142929	ExpressionStatement	nextSlice >>= c -> chrSrcVSubSample	677:8:15333:15366	8140666	2	True				
ANR	8142930	AssignmentExpression	nextSlice >>= c -> chrSrcVSubSample		8140666	0		>>=			
ANR	8142931	Identifier	nextSlice		8140666	0					
ANR	8142932	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8142933	Identifier	c		8140666	0					
ANR	8142934	Identifier	chrSrcVSubSample		8140666	1					
ANR	8142935	ExpressionStatement	nextSlice <<= c -> chrSrcVSubSample	679:8:15377:15410	8140666	3	True				
ANR	8142936	AssignmentExpression	nextSlice <<= c -> chrSrcVSubSample		8140666	0		<<=			
ANR	8142937	Identifier	nextSlice		8140666	0					
ANR	8142938	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8142939	Identifier	c		8140666	0					
ANR	8142940	Identifier	chrSrcVSubSample		8140666	1					
ANR	8142941	IfStatement	if ( c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice )		8140666	4					
ANR	8142942	Condition	c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice	681:12:15425:15472	8140666	0	True				
ANR	8142943	RelationalExpression	c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice		8140666	0		<			
ANR	8142944	AdditiveExpression	c -> vLumFilterPos [ i ] + c -> vLumBufSize		8140666	0		+			
ANR	8142945	ArrayIndexing	c -> vLumFilterPos [ i ]		8140666	0					
ANR	8142946	PtrMemberAccess	c -> vLumFilterPos		8140666	0					
ANR	8142947	Identifier	c		8140666	0					
ANR	8142948	Identifier	vLumFilterPos		8140666	1					
ANR	8142949	Identifier	i		8140666	1					
ANR	8142950	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8142951	Identifier	c		8140666	0					
ANR	8142952	Identifier	vLumBufSize		8140666	1					
ANR	8142953	Identifier	nextSlice		8140666	1					
ANR	8142954	ExpressionStatement	c -> vLumBufSize = nextSlice - c -> vLumFilterPos [ i ]	683:12:15488:15536	8140666	1	True				
ANR	8142955	AssignmentExpression	c -> vLumBufSize = nextSlice - c -> vLumFilterPos [ i ]		8140666	0		=			
ANR	8142956	PtrMemberAccess	c -> vLumBufSize		8140666	0					
ANR	8142957	Identifier	c		8140666	0					
ANR	8142958	Identifier	vLumBufSize		8140666	1					
ANR	8142959	AdditiveExpression	nextSlice - c -> vLumFilterPos [ i ]		8140666	1		-			
ANR	8142960	Identifier	nextSlice		8140666	0					
ANR	8142961	ArrayIndexing	c -> vLumFilterPos [ i ]		8140666	1					
ANR	8142962	PtrMemberAccess	c -> vLumFilterPos		8140666	0					
ANR	8142963	Identifier	c		8140666	0					
ANR	8142964	Identifier	vLumFilterPos		8140666	1					
ANR	8142965	Identifier	i		8140666	1					
ANR	8142966	IfStatement	if ( c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> c -> chrSrcVSubSample ) )		8140666	5					
ANR	8142967	Condition	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> c -> chrSrcVSubSample )	685:12:15551:15639	8140666	0	True				
ANR	8142968	RelationalExpression	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> c -> chrSrcVSubSample )		8140666	0		<			
ANR	8142969	AdditiveExpression	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize		8140666	0		+			
ANR	8142970	ArrayIndexing	c -> vChrFilterPos [ chrI ]		8140666	0					
ANR	8142971	PtrMemberAccess	c -> vChrFilterPos		8140666	0					
ANR	8142972	Identifier	c		8140666	0					
ANR	8142973	Identifier	vChrFilterPos		8140666	1					
ANR	8142974	Identifier	chrI		8140666	1					
ANR	8142975	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8142976	Identifier	c		8140666	0					
ANR	8142977	Identifier	vChrBufSize		8140666	1					
ANR	8142978	ShiftExpression	nextSlice >> c -> chrSrcVSubSample		8140666	1		>>			
ANR	8142979	Identifier	nextSlice		8140666	0					
ANR	8142980	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8142981	Identifier	c		8140666	0					
ANR	8142982	Identifier	chrSrcVSubSample		8140666	1					
ANR	8142983	ExpressionStatement	c -> vChrBufSize = ( nextSlice >> c -> chrSrcVSubSample ) - c -> vChrFilterPos [ chrI ]	689:12:15655:15761	8140666	1	True				
ANR	8142984	AssignmentExpression	c -> vChrBufSize = ( nextSlice >> c -> chrSrcVSubSample ) - c -> vChrFilterPos [ chrI ]		8140666	0		=			
ANR	8142985	PtrMemberAccess	c -> vChrBufSize		8140666	0					
ANR	8142986	Identifier	c		8140666	0					
ANR	8142987	Identifier	vChrBufSize		8140666	1					
ANR	8142988	AdditiveExpression	( nextSlice >> c -> chrSrcVSubSample ) - c -> vChrFilterPos [ chrI ]		8140666	1		-			
ANR	8142989	ShiftExpression	nextSlice >> c -> chrSrcVSubSample		8140666	0		>>			
ANR	8142990	Identifier	nextSlice		8140666	0					
ANR	8142991	PtrMemberAccess	c -> chrSrcVSubSample		8140666	1					
ANR	8142992	Identifier	c		8140666	0					
ANR	8142993	Identifier	chrSrcVSubSample		8140666	1					
ANR	8142994	ArrayIndexing	c -> vChrFilterPos [ chrI ]		8140666	1					
ANR	8142995	PtrMemberAccess	c -> vChrFilterPos		8140666	0					
ANR	8142996	Identifier	c		8140666	0					
ANR	8142997	Identifier	vChrFilterPos		8140666	1					
ANR	8142998	Identifier	chrI		8140666	1					
ANR	8142999	ExpressionStatement	"FF_ALLOC_OR_GOTO ( c , c -> lumPixBuf , c -> vLumBufSize * 3 * sizeof ( int16_t * ) , fail )"	701:4:15932:16012	8140666	78	True				
ANR	8143000	CallExpression	"FF_ALLOC_OR_GOTO ( c , c -> lumPixBuf , c -> vLumBufSize * 3 * sizeof ( int16_t * ) , fail )"		8140666	0					
ANR	8143001	Callee	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143002	Identifier	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143003	ArgumentList	c		8140666	1					
ANR	8143004	Argument	c		8140666	0					
ANR	8143005	Identifier	c		8140666	0					
ANR	8143006	Argument	c -> lumPixBuf		8140666	1					
ANR	8143007	PtrMemberAccess	c -> lumPixBuf		8140666	0					
ANR	8143008	Identifier	c		8140666	0					
ANR	8143009	Identifier	lumPixBuf		8140666	1					
ANR	8143010	Argument	c -> vLumBufSize * 3 * sizeof ( int16_t * )		8140666	2					
ANR	8143011	MultiplicativeExpression	c -> vLumBufSize * 3 * sizeof ( int16_t * )		8140666	0		*			
ANR	8143012	PtrMemberAccess	c -> vLumBufSize		8140666	0					
ANR	8143013	Identifier	c		8140666	0					
ANR	8143014	Identifier	vLumBufSize		8140666	1					
ANR	8143015	MultiplicativeExpression	3 * sizeof ( int16_t * )		8140666	1		*			
ANR	8143016	PrimaryExpression	3		8140666	0					
ANR	8143017	SizeofExpression	sizeof ( int16_t * )		8140666	1					
ANR	8143018	Sizeof	sizeof		8140666	0					
ANR	8143019	SizeofOperand	int16_t *		8140666	1					
ANR	8143020	Argument	fail		8140666	3					
ANR	8143021	Identifier	fail		8140666	0					
ANR	8143022	ExpressionStatement	"FF_ALLOC_OR_GOTO ( c , c -> chrUPixBuf , c -> vChrBufSize * 3 * sizeof ( int16_t * ) , fail )"	703:4:16019:16099	8140666	79	True				
ANR	8143023	CallExpression	"FF_ALLOC_OR_GOTO ( c , c -> chrUPixBuf , c -> vChrBufSize * 3 * sizeof ( int16_t * ) , fail )"		8140666	0					
ANR	8143024	Callee	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143025	Identifier	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143026	ArgumentList	c		8140666	1					
ANR	8143027	Argument	c		8140666	0					
ANR	8143028	Identifier	c		8140666	0					
ANR	8143029	Argument	c -> chrUPixBuf		8140666	1					
ANR	8143030	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143031	Identifier	c		8140666	0					
ANR	8143032	Identifier	chrUPixBuf		8140666	1					
ANR	8143033	Argument	c -> vChrBufSize * 3 * sizeof ( int16_t * )		8140666	2					
ANR	8143034	MultiplicativeExpression	c -> vChrBufSize * 3 * sizeof ( int16_t * )		8140666	0		*			
ANR	8143035	PtrMemberAccess	c -> vChrBufSize		8140666	0					
ANR	8143036	Identifier	c		8140666	0					
ANR	8143037	Identifier	vChrBufSize		8140666	1					
ANR	8143038	MultiplicativeExpression	3 * sizeof ( int16_t * )		8140666	1		*			
ANR	8143039	PrimaryExpression	3		8140666	0					
ANR	8143040	SizeofExpression	sizeof ( int16_t * )		8140666	1					
ANR	8143041	Sizeof	sizeof		8140666	0					
ANR	8143042	SizeofOperand	int16_t *		8140666	1					
ANR	8143043	Argument	fail		8140666	3					
ANR	8143044	Identifier	fail		8140666	0					
ANR	8143045	ExpressionStatement	"FF_ALLOC_OR_GOTO ( c , c -> chrVPixBuf , c -> vChrBufSize * 3 * sizeof ( int16_t * ) , fail )"	705:4:16106:16186	8140666	80	True				
ANR	8143046	CallExpression	"FF_ALLOC_OR_GOTO ( c , c -> chrVPixBuf , c -> vChrBufSize * 3 * sizeof ( int16_t * ) , fail )"		8140666	0					
ANR	8143047	Callee	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143048	Identifier	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143049	ArgumentList	c		8140666	1					
ANR	8143050	Argument	c		8140666	0					
ANR	8143051	Identifier	c		8140666	0					
ANR	8143052	Argument	c -> chrVPixBuf		8140666	1					
ANR	8143053	PtrMemberAccess	c -> chrVPixBuf		8140666	0					
ANR	8143054	Identifier	c		8140666	0					
ANR	8143055	Identifier	chrVPixBuf		8140666	1					
ANR	8143056	Argument	c -> vChrBufSize * 3 * sizeof ( int16_t * )		8140666	2					
ANR	8143057	MultiplicativeExpression	c -> vChrBufSize * 3 * sizeof ( int16_t * )		8140666	0		*			
ANR	8143058	PtrMemberAccess	c -> vChrBufSize		8140666	0					
ANR	8143059	Identifier	c		8140666	0					
ANR	8143060	Identifier	vChrBufSize		8140666	1					
ANR	8143061	MultiplicativeExpression	3 * sizeof ( int16_t * )		8140666	1		*			
ANR	8143062	PrimaryExpression	3		8140666	0					
ANR	8143063	SizeofExpression	sizeof ( int16_t * )		8140666	1					
ANR	8143064	Sizeof	sizeof		8140666	0					
ANR	8143065	SizeofOperand	int16_t *		8140666	1					
ANR	8143066	Argument	fail		8140666	3					
ANR	8143067	Identifier	fail		8140666	0					
ANR	8143068	IfStatement	if ( CONFIG_SWSCALE_ALPHA && isALPHA ( c -> srcFormat ) && isALPHA ( c -> dstFormat ) )		8140666	81					
ANR	8143069	Condition	CONFIG_SWSCALE_ALPHA && isALPHA ( c -> srcFormat ) && isALPHA ( c -> dstFormat )	707:8:16197:16266	8140666	0	True				
ANR	8143070	AndExpression	CONFIG_SWSCALE_ALPHA && isALPHA ( c -> srcFormat ) && isALPHA ( c -> dstFormat )		8140666	0		&&			
ANR	8143071	Identifier	CONFIG_SWSCALE_ALPHA		8140666	0					
ANR	8143072	AndExpression	isALPHA ( c -> srcFormat ) && isALPHA ( c -> dstFormat )		8140666	1		&&			
ANR	8143073	CallExpression	isALPHA ( c -> srcFormat )		8140666	0					
ANR	8143074	Callee	isALPHA		8140666	0					
ANR	8143075	Identifier	isALPHA		8140666	0					
ANR	8143076	ArgumentList	c -> srcFormat		8140666	1					
ANR	8143077	Argument	c -> srcFormat		8140666	0					
ANR	8143078	PtrMemberAccess	c -> srcFormat		8140666	0					
ANR	8143079	Identifier	c		8140666	0					
ANR	8143080	Identifier	srcFormat		8140666	1					
ANR	8143081	CallExpression	isALPHA ( c -> dstFormat )		8140666	1					
ANR	8143082	Callee	isALPHA		8140666	0					
ANR	8143083	Identifier	isALPHA		8140666	0					
ANR	8143084	ArgumentList	c -> dstFormat		8140666	1					
ANR	8143085	Argument	c -> dstFormat		8140666	0					
ANR	8143086	PtrMemberAccess	c -> dstFormat		8140666	0					
ANR	8143087	Identifier	c		8140666	0					
ANR	8143088	Identifier	dstFormat		8140666	1					
ANR	8143089	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> alpPixBuf , c -> vLumBufSize * 3 * sizeof ( int16_t * ) , fail )"	709:8:16278:16358	8140666	1	True				
ANR	8143090	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> alpPixBuf , c -> vLumBufSize * 3 * sizeof ( int16_t * ) , fail )"		8140666	0					
ANR	8143091	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143092	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143093	ArgumentList	c		8140666	1					
ANR	8143094	Argument	c		8140666	0					
ANR	8143095	Identifier	c		8140666	0					
ANR	8143096	Argument	c -> alpPixBuf		8140666	1					
ANR	8143097	PtrMemberAccess	c -> alpPixBuf		8140666	0					
ANR	8143098	Identifier	c		8140666	0					
ANR	8143099	Identifier	alpPixBuf		8140666	1					
ANR	8143100	Argument	c -> vLumBufSize * 3 * sizeof ( int16_t * )		8140666	2					
ANR	8143101	MultiplicativeExpression	c -> vLumBufSize * 3 * sizeof ( int16_t * )		8140666	0		*			
ANR	8143102	PtrMemberAccess	c -> vLumBufSize		8140666	0					
ANR	8143103	Identifier	c		8140666	0					
ANR	8143104	Identifier	vLumBufSize		8140666	1					
ANR	8143105	MultiplicativeExpression	3 * sizeof ( int16_t * )		8140666	1		*			
ANR	8143106	PrimaryExpression	3		8140666	0					
ANR	8143107	SizeofExpression	sizeof ( int16_t * )		8140666	1					
ANR	8143108	Sizeof	sizeof		8140666	0					
ANR	8143109	SizeofOperand	int16_t *		8140666	1					
ANR	8143110	Argument	fail		8140666	3					
ANR	8143111	Identifier	fail		8140666	0					
ANR	8143112	ForStatement	for ( i = 0 ; i < c -> vLumBufSize ; i ++ )		8140666	82					
ANR	8143113	ForInit	i = 0 ;	717:9:16557:16562	8140666	0	True				
ANR	8143114	AssignmentExpression	i = 0		8140666	0		=			
ANR	8143115	Identifier	i		8140666	0					
ANR	8143116	PrimaryExpression	0		8140666	1					
ANR	8143117	Condition	i < c -> vLumBufSize	717:16:16564:16581	8140666	1	True				
ANR	8143118	RelationalExpression	i < c -> vLumBufSize		8140666	0		<			
ANR	8143119	Identifier	i		8140666	0					
ANR	8143120	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143121	Identifier	c		8140666	0					
ANR	8143122	Identifier	vLumBufSize		8140666	1					
ANR	8143123	PostIncDecOperationExpression	i ++	717:36:16584:16586	8140666	2	True				
ANR	8143124	Identifier	i		8140666	0					
ANR	8143125	IncDec	++		8140666	1					
ANR	8143126	CompoundStatement		713:41:16469:16469	8140666	3					
ANR	8143127	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> lumPixBuf [ i + c -> vLumBufSize ] , dst_stride + 16 , fail )"	719:8:16600:16704	8140666	0	True				
ANR	8143128	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> lumPixBuf [ i + c -> vLumBufSize ] , dst_stride + 16 , fail )"		8140666	0					
ANR	8143129	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143130	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143131	ArgumentList	c		8140666	1					
ANR	8143132	Argument	c		8140666	0					
ANR	8143133	Identifier	c		8140666	0					
ANR	8143134	Argument	c -> lumPixBuf [ i + c -> vLumBufSize ]		8140666	1					
ANR	8143135	ArrayIndexing	c -> lumPixBuf [ i + c -> vLumBufSize ]		8140666	0					
ANR	8143136	PtrMemberAccess	c -> lumPixBuf		8140666	0					
ANR	8143137	Identifier	c		8140666	0					
ANR	8143138	Identifier	lumPixBuf		8140666	1					
ANR	8143139	AdditiveExpression	i + c -> vLumBufSize		8140666	1		+			
ANR	8143140	Identifier	i		8140666	0					
ANR	8143141	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143142	Identifier	c		8140666	0					
ANR	8143143	Identifier	vLumBufSize		8140666	1					
ANR	8143144	Argument	dst_stride + 16		8140666	2					
ANR	8143145	AdditiveExpression	dst_stride + 16		8140666	0		+			
ANR	8143146	Identifier	dst_stride		8140666	0					
ANR	8143147	PrimaryExpression	16		8140666	1					
ANR	8143148	Argument	fail		8140666	3					
ANR	8143149	Identifier	fail		8140666	0					
ANR	8143150	ExpressionStatement	c -> lumPixBuf [ i ] = c -> lumPixBuf [ i + c -> vLumBufSize ]	723:8:16715:16765	8140666	1	True				
ANR	8143151	AssignmentExpression	c -> lumPixBuf [ i ] = c -> lumPixBuf [ i + c -> vLumBufSize ]		8140666	0		=			
ANR	8143152	ArrayIndexing	c -> lumPixBuf [ i ]		8140666	0					
ANR	8143153	PtrMemberAccess	c -> lumPixBuf		8140666	0					
ANR	8143154	Identifier	c		8140666	0					
ANR	8143155	Identifier	lumPixBuf		8140666	1					
ANR	8143156	Identifier	i		8140666	1					
ANR	8143157	ArrayIndexing	c -> lumPixBuf [ i + c -> vLumBufSize ]		8140666	1					
ANR	8143158	PtrMemberAccess	c -> lumPixBuf		8140666	0					
ANR	8143159	Identifier	c		8140666	0					
ANR	8143160	Identifier	lumPixBuf		8140666	1					
ANR	8143161	AdditiveExpression	i + c -> vLumBufSize		8140666	1		+			
ANR	8143162	Identifier	i		8140666	0					
ANR	8143163	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143164	Identifier	c		8140666	0					
ANR	8143165	Identifier	vLumBufSize		8140666	1					
ANR	8143166	ExpressionStatement	c -> uv_off_px = dst_stride_px + 64 / ( c -> dstBpc & ~7 )	729:4:16858:16912	8140666	83	True				
ANR	8143167	AssignmentExpression	c -> uv_off_px = dst_stride_px + 64 / ( c -> dstBpc & ~7 )		8140666	0		=			
ANR	8143168	PtrMemberAccess	c -> uv_off_px		8140666	0					
ANR	8143169	Identifier	c		8140666	0					
ANR	8143170	Identifier	uv_off_px		8140666	1					
ANR	8143171	AdditiveExpression	dst_stride_px + 64 / ( c -> dstBpc & ~7 )		8140666	1		+			
ANR	8143172	Identifier	dst_stride_px		8140666	0					
ANR	8143173	MultiplicativeExpression	64 / ( c -> dstBpc & ~7 )		8140666	1		/			
ANR	8143174	PrimaryExpression	64		8140666	0					
ANR	8143175	BitAndExpression	c -> dstBpc & ~7		8140666	1		&			
ANR	8143176	PtrMemberAccess	c -> dstBpc		8140666	0					
ANR	8143177	Identifier	c		8140666	0					
ANR	8143178	Identifier	dstBpc		8140666	1					
ANR	8143179	Identifier	~7		8140666	1					
ANR	8143180	ExpressionStatement	c -> uv_off_byte = dst_stride + 16	731:4:16919:16951	8140666	84	True				
ANR	8143181	AssignmentExpression	c -> uv_off_byte = dst_stride + 16		8140666	0		=			
ANR	8143182	PtrMemberAccess	c -> uv_off_byte		8140666	0					
ANR	8143183	Identifier	c		8140666	0					
ANR	8143184	Identifier	uv_off_byte		8140666	1					
ANR	8143185	AdditiveExpression	dst_stride + 16		8140666	1		+			
ANR	8143186	Identifier	dst_stride		8140666	0					
ANR	8143187	PrimaryExpression	16		8140666	1					
ANR	8143188	ForStatement	for ( i = 0 ; i < c -> vChrBufSize ; i ++ )		8140666	85					
ANR	8143189	ForInit	i = 0 ;	733:9:16963:16968	8140666	0	True				
ANR	8143190	AssignmentExpression	i = 0		8140666	0		=			
ANR	8143191	Identifier	i		8140666	0					
ANR	8143192	PrimaryExpression	0		8140666	1					
ANR	8143193	Condition	i < c -> vChrBufSize	733:16:16970:16987	8140666	1	True				
ANR	8143194	RelationalExpression	i < c -> vChrBufSize		8140666	0		<			
ANR	8143195	Identifier	i		8140666	0					
ANR	8143196	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8143197	Identifier	c		8140666	0					
ANR	8143198	Identifier	vChrBufSize		8140666	1					
ANR	8143199	PostIncDecOperationExpression	i ++	733:36:16990:16992	8140666	2	True				
ANR	8143200	Identifier	i		8140666	0					
ANR	8143201	IncDec	++		8140666	1					
ANR	8143202	CompoundStatement		729:41:16875:16875	8140666	3					
ANR	8143203	ExpressionStatement	"FF_ALLOC_OR_GOTO ( c , c -> chrUPixBuf [ i + c -> vChrBufSize ] , dst_stride * 2 + 32 , fail )"	735:8:17006:17113	8140666	0	True				
ANR	8143204	CallExpression	"FF_ALLOC_OR_GOTO ( c , c -> chrUPixBuf [ i + c -> vChrBufSize ] , dst_stride * 2 + 32 , fail )"		8140666	0					
ANR	8143205	Callee	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143206	Identifier	FF_ALLOC_OR_GOTO		8140666	0					
ANR	8143207	ArgumentList	c		8140666	1					
ANR	8143208	Argument	c		8140666	0					
ANR	8143209	Identifier	c		8140666	0					
ANR	8143210	Argument	c -> chrUPixBuf [ i + c -> vChrBufSize ]		8140666	1					
ANR	8143211	ArrayIndexing	c -> chrUPixBuf [ i + c -> vChrBufSize ]		8140666	0					
ANR	8143212	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143213	Identifier	c		8140666	0					
ANR	8143214	Identifier	chrUPixBuf		8140666	1					
ANR	8143215	AdditiveExpression	i + c -> vChrBufSize		8140666	1		+			
ANR	8143216	Identifier	i		8140666	0					
ANR	8143217	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8143218	Identifier	c		8140666	0					
ANR	8143219	Identifier	vChrBufSize		8140666	1					
ANR	8143220	Argument	dst_stride * 2 + 32		8140666	2					
ANR	8143221	AdditiveExpression	dst_stride * 2 + 32		8140666	0		+			
ANR	8143222	MultiplicativeExpression	dst_stride * 2		8140666	0		*			
ANR	8143223	Identifier	dst_stride		8140666	0					
ANR	8143224	PrimaryExpression	2		8140666	1					
ANR	8143225	PrimaryExpression	32		8140666	1					
ANR	8143226	Argument	fail		8140666	3					
ANR	8143227	Identifier	fail		8140666	0					
ANR	8143228	ExpressionStatement	c -> chrUPixBuf [ i ] = c -> chrUPixBuf [ i + c -> vChrBufSize ]	739:8:17124:17176	8140666	1	True				
ANR	8143229	AssignmentExpression	c -> chrUPixBuf [ i ] = c -> chrUPixBuf [ i + c -> vChrBufSize ]		8140666	0		=			
ANR	8143230	ArrayIndexing	c -> chrUPixBuf [ i ]		8140666	0					
ANR	8143231	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143232	Identifier	c		8140666	0					
ANR	8143233	Identifier	chrUPixBuf		8140666	1					
ANR	8143234	Identifier	i		8140666	1					
ANR	8143235	ArrayIndexing	c -> chrUPixBuf [ i + c -> vChrBufSize ]		8140666	1					
ANR	8143236	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143237	Identifier	c		8140666	0					
ANR	8143238	Identifier	chrUPixBuf		8140666	1					
ANR	8143239	AdditiveExpression	i + c -> vChrBufSize		8140666	1		+			
ANR	8143240	Identifier	i		8140666	0					
ANR	8143241	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8143242	Identifier	c		8140666	0					
ANR	8143243	Identifier	vChrBufSize		8140666	1					
ANR	8143244	ExpressionStatement	c -> chrVPixBuf [ i ] = c -> chrVPixBuf [ i + c -> vChrBufSize ] = c -> chrUPixBuf [ i ] + ( dst_stride >> 1 ) + 8	741:8:17187:17308	8140666	2	True				
ANR	8143245	AssignmentExpression	c -> chrVPixBuf [ i ] = c -> chrVPixBuf [ i + c -> vChrBufSize ] = c -> chrUPixBuf [ i ] + ( dst_stride >> 1 ) + 8		8140666	0		=			
ANR	8143246	ArrayIndexing	c -> chrVPixBuf [ i ]		8140666	0					
ANR	8143247	PtrMemberAccess	c -> chrVPixBuf		8140666	0					
ANR	8143248	Identifier	c		8140666	0					
ANR	8143249	Identifier	chrVPixBuf		8140666	1					
ANR	8143250	Identifier	i		8140666	1					
ANR	8143251	AssignmentExpression	c -> chrVPixBuf [ i + c -> vChrBufSize ] = c -> chrUPixBuf [ i ] + ( dst_stride >> 1 ) + 8		8140666	1		=			
ANR	8143252	ArrayIndexing	c -> chrVPixBuf [ i + c -> vChrBufSize ]		8140666	0					
ANR	8143253	PtrMemberAccess	c -> chrVPixBuf		8140666	0					
ANR	8143254	Identifier	c		8140666	0					
ANR	8143255	Identifier	chrVPixBuf		8140666	1					
ANR	8143256	AdditiveExpression	i + c -> vChrBufSize		8140666	1		+			
ANR	8143257	Identifier	i		8140666	0					
ANR	8143258	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8143259	Identifier	c		8140666	0					
ANR	8143260	Identifier	vChrBufSize		8140666	1					
ANR	8143261	AdditiveExpression	c -> chrUPixBuf [ i ] + ( dst_stride >> 1 ) + 8		8140666	1		+			
ANR	8143262	ArrayIndexing	c -> chrUPixBuf [ i ]		8140666	0					
ANR	8143263	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143264	Identifier	c		8140666	0					
ANR	8143265	Identifier	chrUPixBuf		8140666	1					
ANR	8143266	Identifier	i		8140666	1					
ANR	8143267	AdditiveExpression	( dst_stride >> 1 ) + 8		8140666	1		+			
ANR	8143268	ShiftExpression	dst_stride >> 1		8140666	0		>>			
ANR	8143269	Identifier	dst_stride		8140666	0					
ANR	8143270	PrimaryExpression	1		8140666	1					
ANR	8143271	PrimaryExpression	8		8140666	1					
ANR	8143272	IfStatement	if ( CONFIG_SWSCALE_ALPHA && c -> alpPixBuf )		8140666	86					
ANR	8143273	Condition	CONFIG_SWSCALE_ALPHA && c -> alpPixBuf	747:8:17326:17361	8140666	0	True				
ANR	8143274	AndExpression	CONFIG_SWSCALE_ALPHA && c -> alpPixBuf		8140666	0		&&			
ANR	8143275	Identifier	CONFIG_SWSCALE_ALPHA		8140666	0					
ANR	8143276	PtrMemberAccess	c -> alpPixBuf		8140666	1					
ANR	8143277	Identifier	c		8140666	0					
ANR	8143278	Identifier	alpPixBuf		8140666	1					
ANR	8143279	ForStatement	for ( i = 0 ; i < c -> vLumBufSize ; i ++ )		8140666	1					
ANR	8143280	ForInit	i = 0 ;	749:13:17378:17383	8140666	0	True				
ANR	8143281	AssignmentExpression	i = 0		8140666	0		=			
ANR	8143282	Identifier	i		8140666	0					
ANR	8143283	PrimaryExpression	0		8140666	1					
ANR	8143284	Condition	i < c -> vLumBufSize	749:20:17385:17402	8140666	1	True				
ANR	8143285	RelationalExpression	i < c -> vLumBufSize		8140666	0		<			
ANR	8143286	Identifier	i		8140666	0					
ANR	8143287	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143288	Identifier	c		8140666	0					
ANR	8143289	Identifier	vLumBufSize		8140666	1					
ANR	8143290	PostIncDecOperationExpression	i ++	749:40:17405:17407	8140666	2	True				
ANR	8143291	Identifier	i		8140666	0					
ANR	8143292	IncDec	++		8140666	1					
ANR	8143293	CompoundStatement		745:45:17290:17290	8140666	3					
ANR	8143294	ExpressionStatement	"FF_ALLOCZ_OR_GOTO ( c , c -> alpPixBuf [ i + c -> vLumBufSize ] , dst_stride + 16 , fail )"	751:12:17425:17533	8140666	0	True				
ANR	8143295	CallExpression	"FF_ALLOCZ_OR_GOTO ( c , c -> alpPixBuf [ i + c -> vLumBufSize ] , dst_stride + 16 , fail )"		8140666	0					
ANR	8143296	Callee	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143297	Identifier	FF_ALLOCZ_OR_GOTO		8140666	0					
ANR	8143298	ArgumentList	c		8140666	1					
ANR	8143299	Argument	c		8140666	0					
ANR	8143300	Identifier	c		8140666	0					
ANR	8143301	Argument	c -> alpPixBuf [ i + c -> vLumBufSize ]		8140666	1					
ANR	8143302	ArrayIndexing	c -> alpPixBuf [ i + c -> vLumBufSize ]		8140666	0					
ANR	8143303	PtrMemberAccess	c -> alpPixBuf		8140666	0					
ANR	8143304	Identifier	c		8140666	0					
ANR	8143305	Identifier	alpPixBuf		8140666	1					
ANR	8143306	AdditiveExpression	i + c -> vLumBufSize		8140666	1		+			
ANR	8143307	Identifier	i		8140666	0					
ANR	8143308	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143309	Identifier	c		8140666	0					
ANR	8143310	Identifier	vLumBufSize		8140666	1					
ANR	8143311	Argument	dst_stride + 16		8140666	2					
ANR	8143312	AdditiveExpression	dst_stride + 16		8140666	0		+			
ANR	8143313	Identifier	dst_stride		8140666	0					
ANR	8143314	PrimaryExpression	16		8140666	1					
ANR	8143315	Argument	fail		8140666	3					
ANR	8143316	Identifier	fail		8140666	0					
ANR	8143317	ExpressionStatement	c -> alpPixBuf [ i ] = c -> alpPixBuf [ i + c -> vLumBufSize ]	755:12:17548:17598	8140666	1	True				
ANR	8143318	AssignmentExpression	c -> alpPixBuf [ i ] = c -> alpPixBuf [ i + c -> vLumBufSize ]		8140666	0		=			
ANR	8143319	ArrayIndexing	c -> alpPixBuf [ i ]		8140666	0					
ANR	8143320	PtrMemberAccess	c -> alpPixBuf		8140666	0					
ANR	8143321	Identifier	c		8140666	0					
ANR	8143322	Identifier	alpPixBuf		8140666	1					
ANR	8143323	Identifier	i		8140666	1					
ANR	8143324	ArrayIndexing	c -> alpPixBuf [ i + c -> vLumBufSize ]		8140666	1					
ANR	8143325	PtrMemberAccess	c -> alpPixBuf		8140666	0					
ANR	8143326	Identifier	c		8140666	0					
ANR	8143327	Identifier	alpPixBuf		8140666	1					
ANR	8143328	AdditiveExpression	i + c -> vLumBufSize		8140666	1		+			
ANR	8143329	Identifier	i		8140666	0					
ANR	8143330	PtrMemberAccess	c -> vLumBufSize		8140666	1					
ANR	8143331	Identifier	c		8140666	0					
ANR	8143332	Identifier	vLumBufSize		8140666	1					
ANR	8143333	ForStatement	for ( i = 0 ; i < c -> vChrBufSize ; i ++ )		8140666	87					
ANR	8143334	ForInit	i = 0 ;	763:9:17705:17710	8140666	0	True				
ANR	8143335	AssignmentExpression	i = 0		8140666	0		=			
ANR	8143336	Identifier	i		8140666	0					
ANR	8143337	PrimaryExpression	0		8140666	1					
ANR	8143338	Condition	i < c -> vChrBufSize	763:16:17712:17729	8140666	1	True				
ANR	8143339	RelationalExpression	i < c -> vChrBufSize		8140666	0		<			
ANR	8143340	Identifier	i		8140666	0					
ANR	8143341	PtrMemberAccess	c -> vChrBufSize		8140666	1					
ANR	8143342	Identifier	c		8140666	0					
ANR	8143343	Identifier	vChrBufSize		8140666	1					
ANR	8143344	PostIncDecOperationExpression	i ++	763:36:17732:17734	8140666	2	True				
ANR	8143345	Identifier	i		8140666	0					
ANR	8143346	IncDec	++		8140666	1					
ANR	8143347	ExpressionStatement	"memset ( c -> chrUPixBuf [ i ] , 64 , dst_stride * 2 + 1 )"	765:8:17746:17794	8140666	3	True				
ANR	8143348	CallExpression	"memset ( c -> chrUPixBuf [ i ] , 64 , dst_stride * 2 + 1 )"		8140666	0					
ANR	8143349	Callee	memset		8140666	0					
ANR	8143350	Identifier	memset		8140666	0					
ANR	8143351	ArgumentList	c -> chrUPixBuf [ i ]		8140666	1					
ANR	8143352	Argument	c -> chrUPixBuf [ i ]		8140666	0					
ANR	8143353	ArrayIndexing	c -> chrUPixBuf [ i ]		8140666	0					
ANR	8143354	PtrMemberAccess	c -> chrUPixBuf		8140666	0					
ANR	8143355	Identifier	c		8140666	0					
ANR	8143356	Identifier	chrUPixBuf		8140666	1					
ANR	8143357	Identifier	i		8140666	1					
ANR	8143358	Argument	64		8140666	1					
ANR	8143359	PrimaryExpression	64		8140666	0					
ANR	8143360	Argument	dst_stride * 2 + 1		8140666	2					
ANR	8143361	AdditiveExpression	dst_stride * 2 + 1		8140666	0		+			
ANR	8143362	MultiplicativeExpression	dst_stride * 2		8140666	0		*			
ANR	8143363	Identifier	dst_stride		8140666	0					
ANR	8143364	PrimaryExpression	2		8140666	1					
ANR	8143365	PrimaryExpression	1		8140666	1					
ANR	8143366	ExpressionStatement	assert ( c -> chrDstH <= dstH )	769:4:17803:17829	8140666	88	True				
ANR	8143367	CallExpression	assert ( c -> chrDstH <= dstH )		8140666	0					
ANR	8143368	Callee	assert		8140666	0					
ANR	8143369	Identifier	assert		8140666	0					
ANR	8143370	ArgumentList	c -> chrDstH <= dstH		8140666	1					
ANR	8143371	Argument	c -> chrDstH <= dstH		8140666	0					
ANR	8143372	RelationalExpression	c -> chrDstH <= dstH		8140666	0		<=			
ANR	8143373	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8143374	Identifier	c		8140666	0					
ANR	8143375	Identifier	chrDstH		8140666	1					
ANR	8143376	Identifier	dstH		8140666	1					
ANR	8143377	IfStatement	if ( flags & SWS_PRINT_INFO )		8140666	89					
ANR	8143378	Condition	flags & SWS_PRINT_INFO	773:8:17842:17863	8140666	0	True				
ANR	8143379	BitAndExpression	flags & SWS_PRINT_INFO		8140666	0		&			
ANR	8143380	Identifier	flags		8140666	0					
ANR	8143381	Identifier	SWS_PRINT_INFO		8140666	1					
ANR	8143382	CompoundStatement		769:32:17746:17746	8140666	1					
ANR	8143383	IfStatement	if ( flags & SWS_FAST_BILINEAR )		8140666	0					
ANR	8143384	Condition	flags & SWS_FAST_BILINEAR	775:12:17881:17905	8140666	0	True				
ANR	8143385	BitAndExpression	flags & SWS_FAST_BILINEAR		8140666	0		&			
ANR	8143386	Identifier	flags		8140666	0					
ANR	8143387	Identifier	SWS_FAST_BILINEAR		8140666	1					
ANR	8143388	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""FAST_BILINEAR scaler, "" )"	777:12:17921:17969	8140666	1	True				
ANR	8143389	CallExpression	"av_log ( c , AV_LOG_INFO , ""FAST_BILINEAR scaler, "" )"		8140666	0					
ANR	8143390	Callee	av_log		8140666	0					
ANR	8143391	Identifier	av_log		8140666	0					
ANR	8143392	ArgumentList	c		8140666	1					
ANR	8143393	Argument	c		8140666	0					
ANR	8143394	Identifier	c		8140666	0					
ANR	8143395	Argument	AV_LOG_INFO		8140666	1					
ANR	8143396	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143397	Argument	"""FAST_BILINEAR scaler, """		8140666	2					
ANR	8143398	PrimaryExpression	"""FAST_BILINEAR scaler, """		8140666	0					
ANR	8143399	ElseStatement	else		8140666	0					
ANR	8143400	IfStatement	if ( flags & SWS_BILINEAR )		8140666	0					
ANR	8143401	Condition	flags & SWS_BILINEAR	779:17:17989:18008	8140666	0	True				
ANR	8143402	BitAndExpression	flags & SWS_BILINEAR		8140666	0		&			
ANR	8143403	Identifier	flags		8140666	0					
ANR	8143404	Identifier	SWS_BILINEAR		8140666	1					
ANR	8143405	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""BILINEAR scaler, "" )"	781:12:18024:18067	8140666	1	True				
ANR	8143406	CallExpression	"av_log ( c , AV_LOG_INFO , ""BILINEAR scaler, "" )"		8140666	0					
ANR	8143407	Callee	av_log		8140666	0					
ANR	8143408	Identifier	av_log		8140666	0					
ANR	8143409	ArgumentList	c		8140666	1					
ANR	8143410	Argument	c		8140666	0					
ANR	8143411	Identifier	c		8140666	0					
ANR	8143412	Argument	AV_LOG_INFO		8140666	1					
ANR	8143413	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143414	Argument	"""BILINEAR scaler, """		8140666	2					
ANR	8143415	PrimaryExpression	"""BILINEAR scaler, """		8140666	0					
ANR	8143416	ElseStatement	else		8140666	0					
ANR	8143417	IfStatement	if ( flags & SWS_BICUBIC )		8140666	0					
ANR	8143418	Condition	flags & SWS_BICUBIC	783:17:18087:18105	8140666	0	True				
ANR	8143419	BitAndExpression	flags & SWS_BICUBIC		8140666	0		&			
ANR	8143420	Identifier	flags		8140666	0					
ANR	8143421	Identifier	SWS_BICUBIC		8140666	1					
ANR	8143422	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""BICUBIC scaler, "" )"	785:12:18121:18163	8140666	1	True				
ANR	8143423	CallExpression	"av_log ( c , AV_LOG_INFO , ""BICUBIC scaler, "" )"		8140666	0					
ANR	8143424	Callee	av_log		8140666	0					
ANR	8143425	Identifier	av_log		8140666	0					
ANR	8143426	ArgumentList	c		8140666	1					
ANR	8143427	Argument	c		8140666	0					
ANR	8143428	Identifier	c		8140666	0					
ANR	8143429	Argument	AV_LOG_INFO		8140666	1					
ANR	8143430	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143431	Argument	"""BICUBIC scaler, """		8140666	2					
ANR	8143432	PrimaryExpression	"""BICUBIC scaler, """		8140666	0					
ANR	8143433	ElseStatement	else		8140666	0					
ANR	8143434	IfStatement	if ( flags & SWS_X )		8140666	0					
ANR	8143435	Condition	flags & SWS_X	787:17:18183:18195	8140666	0	True				
ANR	8143436	BitAndExpression	flags & SWS_X		8140666	0		&			
ANR	8143437	Identifier	flags		8140666	0					
ANR	8143438	Identifier	SWS_X		8140666	1					
ANR	8143439	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Experimental scaler, "" )"	789:12:18211:18258	8140666	1	True				
ANR	8143440	CallExpression	"av_log ( c , AV_LOG_INFO , ""Experimental scaler, "" )"		8140666	0					
ANR	8143441	Callee	av_log		8140666	0					
ANR	8143442	Identifier	av_log		8140666	0					
ANR	8143443	ArgumentList	c		8140666	1					
ANR	8143444	Argument	c		8140666	0					
ANR	8143445	Identifier	c		8140666	0					
ANR	8143446	Argument	AV_LOG_INFO		8140666	1					
ANR	8143447	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143448	Argument	"""Experimental scaler, """		8140666	2					
ANR	8143449	PrimaryExpression	"""Experimental scaler, """		8140666	0					
ANR	8143450	ElseStatement	else		8140666	0					
ANR	8143451	IfStatement	if ( flags & SWS_POINT )		8140666	0					
ANR	8143452	Condition	flags & SWS_POINT	791:17:18278:18294	8140666	0	True				
ANR	8143453	BitAndExpression	flags & SWS_POINT		8140666	0		&			
ANR	8143454	Identifier	flags		8140666	0					
ANR	8143455	Identifier	SWS_POINT		8140666	1					
ANR	8143456	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Nearest Neighbor / POINT scaler, "" )"	793:12:18310:18369	8140666	1	True				
ANR	8143457	CallExpression	"av_log ( c , AV_LOG_INFO , ""Nearest Neighbor / POINT scaler, "" )"		8140666	0					
ANR	8143458	Callee	av_log		8140666	0					
ANR	8143459	Identifier	av_log		8140666	0					
ANR	8143460	ArgumentList	c		8140666	1					
ANR	8143461	Argument	c		8140666	0					
ANR	8143462	Identifier	c		8140666	0					
ANR	8143463	Argument	AV_LOG_INFO		8140666	1					
ANR	8143464	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143465	Argument	"""Nearest Neighbor / POINT scaler, """		8140666	2					
ANR	8143466	PrimaryExpression	"""Nearest Neighbor / POINT scaler, """		8140666	0					
ANR	8143467	ElseStatement	else		8140666	0					
ANR	8143468	IfStatement	if ( flags & SWS_AREA )		8140666	0					
ANR	8143469	Condition	flags & SWS_AREA	795:17:18389:18404	8140666	0	True				
ANR	8143470	BitAndExpression	flags & SWS_AREA		8140666	0		&			
ANR	8143471	Identifier	flags		8140666	0					
ANR	8143472	Identifier	SWS_AREA		8140666	1					
ANR	8143473	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Area Averaging scaler, "" )"	797:12:18420:18469	8140666	1	True				
ANR	8143474	CallExpression	"av_log ( c , AV_LOG_INFO , ""Area Averaging scaler, "" )"		8140666	0					
ANR	8143475	Callee	av_log		8140666	0					
ANR	8143476	Identifier	av_log		8140666	0					
ANR	8143477	ArgumentList	c		8140666	1					
ANR	8143478	Argument	c		8140666	0					
ANR	8143479	Identifier	c		8140666	0					
ANR	8143480	Argument	AV_LOG_INFO		8140666	1					
ANR	8143481	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143482	Argument	"""Area Averaging scaler, """		8140666	2					
ANR	8143483	PrimaryExpression	"""Area Averaging scaler, """		8140666	0					
ANR	8143484	ElseStatement	else		8140666	0					
ANR	8143485	IfStatement	if ( flags & SWS_BICUBLIN )		8140666	0					
ANR	8143486	Condition	flags & SWS_BICUBLIN	799:17:18489:18508	8140666	0	True				
ANR	8143487	BitAndExpression	flags & SWS_BICUBLIN		8140666	0		&			
ANR	8143488	Identifier	flags		8140666	0					
ANR	8143489	Identifier	SWS_BICUBLIN		8140666	1					
ANR	8143490	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""luma BICUBIC / chroma BILINEAR scaler, "" )"	801:12:18524:18589	8140666	1	True				
ANR	8143491	CallExpression	"av_log ( c , AV_LOG_INFO , ""luma BICUBIC / chroma BILINEAR scaler, "" )"		8140666	0					
ANR	8143492	Callee	av_log		8140666	0					
ANR	8143493	Identifier	av_log		8140666	0					
ANR	8143494	ArgumentList	c		8140666	1					
ANR	8143495	Argument	c		8140666	0					
ANR	8143496	Identifier	c		8140666	0					
ANR	8143497	Argument	AV_LOG_INFO		8140666	1					
ANR	8143498	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143499	Argument	"""luma BICUBIC / chroma BILINEAR scaler, """		8140666	2					
ANR	8143500	PrimaryExpression	"""luma BICUBIC / chroma BILINEAR scaler, """		8140666	0					
ANR	8143501	ElseStatement	else		8140666	0					
ANR	8143502	IfStatement	if ( flags & SWS_GAUSS )		8140666	0					
ANR	8143503	Condition	flags & SWS_GAUSS	803:17:18609:18625	8140666	0	True				
ANR	8143504	BitAndExpression	flags & SWS_GAUSS		8140666	0		&			
ANR	8143505	Identifier	flags		8140666	0					
ANR	8143506	Identifier	SWS_GAUSS		8140666	1					
ANR	8143507	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Gaussian scaler, "" )"	805:12:18641:18684	8140666	1	True				
ANR	8143508	CallExpression	"av_log ( c , AV_LOG_INFO , ""Gaussian scaler, "" )"		8140666	0					
ANR	8143509	Callee	av_log		8140666	0					
ANR	8143510	Identifier	av_log		8140666	0					
ANR	8143511	ArgumentList	c		8140666	1					
ANR	8143512	Argument	c		8140666	0					
ANR	8143513	Identifier	c		8140666	0					
ANR	8143514	Argument	AV_LOG_INFO		8140666	1					
ANR	8143515	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143516	Argument	"""Gaussian scaler, """		8140666	2					
ANR	8143517	PrimaryExpression	"""Gaussian scaler, """		8140666	0					
ANR	8143518	ElseStatement	else		8140666	0					
ANR	8143519	IfStatement	if ( flags & SWS_SINC )		8140666	0					
ANR	8143520	Condition	flags & SWS_SINC	807:17:18704:18719	8140666	0	True				
ANR	8143521	BitAndExpression	flags & SWS_SINC		8140666	0		&			
ANR	8143522	Identifier	flags		8140666	0					
ANR	8143523	Identifier	SWS_SINC		8140666	1					
ANR	8143524	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Sinc scaler, "" )"	809:12:18735:18774	8140666	1	True				
ANR	8143525	CallExpression	"av_log ( c , AV_LOG_INFO , ""Sinc scaler, "" )"		8140666	0					
ANR	8143526	Callee	av_log		8140666	0					
ANR	8143527	Identifier	av_log		8140666	0					
ANR	8143528	ArgumentList	c		8140666	1					
ANR	8143529	Argument	c		8140666	0					
ANR	8143530	Identifier	c		8140666	0					
ANR	8143531	Argument	AV_LOG_INFO		8140666	1					
ANR	8143532	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143533	Argument	"""Sinc scaler, """		8140666	2					
ANR	8143534	PrimaryExpression	"""Sinc scaler, """		8140666	0					
ANR	8143535	ElseStatement	else		8140666	0					
ANR	8143536	IfStatement	if ( flags & SWS_LANCZOS )		8140666	0					
ANR	8143537	Condition	flags & SWS_LANCZOS	811:17:18794:18812	8140666	0	True				
ANR	8143538	BitAndExpression	flags & SWS_LANCZOS		8140666	0		&			
ANR	8143539	Identifier	flags		8140666	0					
ANR	8143540	Identifier	SWS_LANCZOS		8140666	1					
ANR	8143541	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Lanczos scaler, "" )"	813:12:18828:18870	8140666	1	True				
ANR	8143542	CallExpression	"av_log ( c , AV_LOG_INFO , ""Lanczos scaler, "" )"		8140666	0					
ANR	8143543	Callee	av_log		8140666	0					
ANR	8143544	Identifier	av_log		8140666	0					
ANR	8143545	ArgumentList	c		8140666	1					
ANR	8143546	Argument	c		8140666	0					
ANR	8143547	Identifier	c		8140666	0					
ANR	8143548	Argument	AV_LOG_INFO		8140666	1					
ANR	8143549	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143550	Argument	"""Lanczos scaler, """		8140666	2					
ANR	8143551	PrimaryExpression	"""Lanczos scaler, """		8140666	0					
ANR	8143552	ElseStatement	else		8140666	0					
ANR	8143553	IfStatement	if ( flags & SWS_SPLINE )		8140666	0					
ANR	8143554	Condition	flags & SWS_SPLINE	815:17:18890:18907	8140666	0	True				
ANR	8143555	BitAndExpression	flags & SWS_SPLINE		8140666	0		&			
ANR	8143556	Identifier	flags		8140666	0					
ANR	8143557	Identifier	SWS_SPLINE		8140666	1					
ANR	8143558	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""Bicubic spline scaler, "" )"	817:12:18923:18972	8140666	1	True				
ANR	8143559	CallExpression	"av_log ( c , AV_LOG_INFO , ""Bicubic spline scaler, "" )"		8140666	0					
ANR	8143560	Callee	av_log		8140666	0					
ANR	8143561	Identifier	av_log		8140666	0					
ANR	8143562	ArgumentList	c		8140666	1					
ANR	8143563	Argument	c		8140666	0					
ANR	8143564	Identifier	c		8140666	0					
ANR	8143565	Argument	AV_LOG_INFO		8140666	1					
ANR	8143566	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143567	Argument	"""Bicubic spline scaler, """		8140666	2					
ANR	8143568	PrimaryExpression	"""Bicubic spline scaler, """		8140666	0					
ANR	8143569	ElseStatement	else		8140666	0					
ANR	8143570	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""ehh flags invalid?! "" )"	821:12:19001:19047	8140666	0	True				
ANR	8143571	CallExpression	"av_log ( c , AV_LOG_INFO , ""ehh flags invalid?! "" )"		8140666	0					
ANR	8143572	Callee	av_log		8140666	0					
ANR	8143573	Identifier	av_log		8140666	0					
ANR	8143574	ArgumentList	c		8140666	1					
ANR	8143575	Argument	c		8140666	0					
ANR	8143576	Identifier	c		8140666	0					
ANR	8143577	Argument	AV_LOG_INFO		8140666	1					
ANR	8143578	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143579	Argument	"""ehh flags invalid?! """		8140666	2					
ANR	8143580	PrimaryExpression	"""ehh flags invalid?! """		8140666	0					
ANR	8143581	Statement	av_log	825:8:19060:19065	8140666	1	True				
ANR	8143582	Statement	(	825:14:19066:19066	8140666	2	True				
ANR	8143583	Statement	c	825:15:19067:19067	8140666	3	True				
ANR	8143584	Statement	","	825:16:19068:19068	8140666	4	True				
ANR	8143585	Statement	AV_LOG_INFO	825:18:19070:19080	8140666	5	True				
ANR	8143586	Statement	","	825:29:19081:19081	8140666	6	True				
ANR	8143587	Statement	"""from %s to %s%s """	825:31:19083:19100	8140666	7	True				
ANR	8143588	Statement	","	825:49:19101:19101	8140666	8	True				
ANR	8143589	Statement	sws_format_name	827:15:19119:19133	8140666	9	True				
ANR	8143590	Statement	(	827:30:19134:19134	8140666	10	True				
ANR	8143591	Statement	srcFormat	827:31:19135:19143	8140666	11	True				
ANR	8143592	Statement	)	827:40:19144:19144	8140666	12	True				
ANR	8143593	Statement	","	827:41:19145:19145	8140666	13	True				
ANR	8143594	Statement	dstFormat	831:15:19183:19191	8140666	14	True				
ANR	8143595	Statement	==	831:25:19193:19194	8140666	15	True				
ANR	8143596	Statement	AV_PIX_FMT_BGR555	831:28:19196:19212	8140666	16	True				
ANR	8143597	Statement	||	831:48:19216:19217	8140666	17	True				
ANR	8143598	Statement	dstFormat	831:51:19219:19227	8140666	18	True				
ANR	8143599	Statement	==	831:61:19229:19230	8140666	19	True				
ANR	8143600	Statement	AV_PIX_FMT_BGR565	831:64:19232:19248	8140666	20	True				
ANR	8143601	Statement	||	831:84:19252:19253	8140666	21	True				
ANR	8143602	Statement	dstFormat	833:15:19271:19279	8140666	22	True				
ANR	8143603	Statement	==	833:25:19281:19282	8140666	23	True				
ANR	8143604	Statement	AV_PIX_FMT_RGB444BE	833:28:19284:19302	8140666	24	True				
ANR	8143605	Statement	||	833:48:19304:19305	8140666	25	True				
ANR	8143606	Statement	dstFormat	833:51:19307:19315	8140666	26	True				
ANR	8143607	Statement	==	833:61:19317:19318	8140666	27	True				
ANR	8143608	Statement	AV_PIX_FMT_RGB444LE	833:64:19320:19338	8140666	28	True				
ANR	8143609	Statement	||	833:84:19340:19341	8140666	29	True				
ANR	8143610	Statement	dstFormat	835:15:19359:19367	8140666	30	True				
ANR	8143611	Statement	==	835:25:19369:19370	8140666	31	True				
ANR	8143612	Statement	AV_PIX_FMT_BGR444BE	835:28:19372:19390	8140666	32	True				
ANR	8143613	Statement	||	835:48:19392:19393	8140666	33	True				
ANR	8143614	Statement	dstFormat	835:51:19395:19403	8140666	34	True				
ANR	8143615	Statement	==	835:61:19405:19406	8140666	35	True				
ANR	8143616	Statement	AV_PIX_FMT_BGR444LE	835:64:19408:19426	8140666	36	True				
ANR	8143617	Statement	?	835:84:19428:19428	8140666	37	True				
ANR	8143618	Statement	"""dithered """	837:61:19492:19502	8140666	38	True				
ANR	8143619	Statement	:	837:73:19504:19504	8140666	39	True				
ANR	8143620	Statement	""""""	837:75:19506:19507	8140666	40	True				
ANR	8143621	Statement	","	837:77:19508:19508	8140666	41	True				
ANR	8143622	Statement	sws_format_name	845:15:19561:19575	8140666	42	True				
ANR	8143623	Statement	(	845:30:19576:19576	8140666	43	True				
ANR	8143624	Statement	dstFormat	845:31:19577:19585	8140666	44	True				
ANR	8143625	Statement	)	845:40:19586:19586	8140666	45	True				
ANR	8143626	Statement	)	845:41:19587:19587	8140666	46	True				
ANR	8143627	ExpressionStatement		845:42:19588:19588	8140666	47	True				
ANR	8143628	IfStatement	if ( INLINE_MMXEXT ( cpu_flags ) )		8140666	48					
ANR	8143629	Condition	INLINE_MMXEXT ( cpu_flags )	849:12:19605:19628	8140666	0	True				
ANR	8143630	CallExpression	INLINE_MMXEXT ( cpu_flags )		8140666	0					
ANR	8143631	Callee	INLINE_MMXEXT		8140666	0					
ANR	8143632	Identifier	INLINE_MMXEXT		8140666	0					
ANR	8143633	ArgumentList	cpu_flags		8140666	1					
ANR	8143634	Argument	cpu_flags		8140666	0					
ANR	8143635	Identifier	cpu_flags		8140666	0					
ANR	8143636	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using MMXEXT\\n"" )"	851:12:19644:19684	8140666	1	True				
ANR	8143637	CallExpression	"av_log ( c , AV_LOG_INFO , ""using MMXEXT\\n"" )"		8140666	0					
ANR	8143638	Callee	av_log		8140666	0					
ANR	8143639	Identifier	av_log		8140666	0					
ANR	8143640	ArgumentList	c		8140666	1					
ANR	8143641	Argument	c		8140666	0					
ANR	8143642	Identifier	c		8140666	0					
ANR	8143643	Argument	AV_LOG_INFO		8140666	1					
ANR	8143644	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143645	Argument	"""using MMXEXT\\n"""		8140666	2					
ANR	8143646	PrimaryExpression	"""using MMXEXT\\n"""		8140666	0					
ANR	8143647	ElseStatement	else		8140666	0					
ANR	8143648	IfStatement	if ( INLINE_AMD3DNOW ( cpu_flags ) )		8140666	0					
ANR	8143649	Condition	INLINE_AMD3DNOW ( cpu_flags )	853:17:19704:19729	8140666	0	True				
ANR	8143650	CallExpression	INLINE_AMD3DNOW ( cpu_flags )		8140666	0					
ANR	8143651	Callee	INLINE_AMD3DNOW		8140666	0					
ANR	8143652	Identifier	INLINE_AMD3DNOW		8140666	0					
ANR	8143653	ArgumentList	cpu_flags		8140666	1					
ANR	8143654	Argument	cpu_flags		8140666	0					
ANR	8143655	Identifier	cpu_flags		8140666	0					
ANR	8143656	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using 3DNOW\\n"" )"	855:12:19745:19784	8140666	1	True				
ANR	8143657	CallExpression	"av_log ( c , AV_LOG_INFO , ""using 3DNOW\\n"" )"		8140666	0					
ANR	8143658	Callee	av_log		8140666	0					
ANR	8143659	Identifier	av_log		8140666	0					
ANR	8143660	ArgumentList	c		8140666	1					
ANR	8143661	Argument	c		8140666	0					
ANR	8143662	Identifier	c		8140666	0					
ANR	8143663	Argument	AV_LOG_INFO		8140666	1					
ANR	8143664	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143665	Argument	"""using 3DNOW\\n"""		8140666	2					
ANR	8143666	PrimaryExpression	"""using 3DNOW\\n"""		8140666	0					
ANR	8143667	ElseStatement	else		8140666	0					
ANR	8143668	IfStatement	if ( INLINE_MMX ( cpu_flags ) )		8140666	0					
ANR	8143669	Condition	INLINE_MMX ( cpu_flags )	857:17:19804:19824	8140666	0	True				
ANR	8143670	CallExpression	INLINE_MMX ( cpu_flags )		8140666	0					
ANR	8143671	Callee	INLINE_MMX		8140666	0					
ANR	8143672	Identifier	INLINE_MMX		8140666	0					
ANR	8143673	ArgumentList	cpu_flags		8140666	1					
ANR	8143674	Argument	cpu_flags		8140666	0					
ANR	8143675	Identifier	cpu_flags		8140666	0					
ANR	8143676	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using MMX\\n"" )"	859:12:19840:19877	8140666	1	True				
ANR	8143677	CallExpression	"av_log ( c , AV_LOG_INFO , ""using MMX\\n"" )"		8140666	0					
ANR	8143678	Callee	av_log		8140666	0					
ANR	8143679	Identifier	av_log		8140666	0					
ANR	8143680	ArgumentList	c		8140666	1					
ANR	8143681	Argument	c		8140666	0					
ANR	8143682	Identifier	c		8140666	0					
ANR	8143683	Argument	AV_LOG_INFO		8140666	1					
ANR	8143684	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143685	Argument	"""using MMX\\n"""		8140666	2					
ANR	8143686	PrimaryExpression	"""using MMX\\n"""		8140666	0					
ANR	8143687	ElseStatement	else		8140666	0					
ANR	8143688	IfStatement	if ( PPC_ALTIVEC ( cpu_flags ) )		8140666	0					
ANR	8143689	Condition	PPC_ALTIVEC ( cpu_flags )	861:17:19897:19918	8140666	0	True				
ANR	8143690	CallExpression	PPC_ALTIVEC ( cpu_flags )		8140666	0					
ANR	8143691	Callee	PPC_ALTIVEC		8140666	0					
ANR	8143692	Identifier	PPC_ALTIVEC		8140666	0					
ANR	8143693	ArgumentList	cpu_flags		8140666	1					
ANR	8143694	Argument	cpu_flags		8140666	0					
ANR	8143695	Identifier	cpu_flags		8140666	0					
ANR	8143696	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using AltiVec\\n"" )"	863:12:19934:19975	8140666	1	True				
ANR	8143697	CallExpression	"av_log ( c , AV_LOG_INFO , ""using AltiVec\\n"" )"		8140666	0					
ANR	8143698	Callee	av_log		8140666	0					
ANR	8143699	Identifier	av_log		8140666	0					
ANR	8143700	ArgumentList	c		8140666	1					
ANR	8143701	Argument	c		8140666	0					
ANR	8143702	Identifier	c		8140666	0					
ANR	8143703	Argument	AV_LOG_INFO		8140666	1					
ANR	8143704	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143705	Argument	"""using AltiVec\\n"""		8140666	2					
ANR	8143706	PrimaryExpression	"""using AltiVec\\n"""		8140666	0					
ANR	8143707	ElseStatement	else		8140666	0					
ANR	8143708	ExpressionStatement	"av_log ( c , AV_LOG_INFO , ""using C\\n"" )"	867:12:20004:20039	8140666	0	True				
ANR	8143709	CallExpression	"av_log ( c , AV_LOG_INFO , ""using C\\n"" )"		8140666	0					
ANR	8143710	Callee	av_log		8140666	0					
ANR	8143711	Identifier	av_log		8140666	0					
ANR	8143712	ArgumentList	c		8140666	1					
ANR	8143713	Argument	c		8140666	0					
ANR	8143714	Identifier	c		8140666	0					
ANR	8143715	Argument	AV_LOG_INFO		8140666	1					
ANR	8143716	Identifier	AV_LOG_INFO		8140666	0					
ANR	8143717	Argument	"""using C\\n"""		8140666	2					
ANR	8143718	PrimaryExpression	"""using C\\n"""		8140666	0					
ANR	8143719	ExpressionStatement	"av_log ( c , AV_LOG_VERBOSE , ""%dx%d -> %dx%d\\n"" , srcW , srcH , dstW , dstH )"	871:8:20052:20121	8140666	49	True				
ANR	8143720	CallExpression	"av_log ( c , AV_LOG_VERBOSE , ""%dx%d -> %dx%d\\n"" , srcW , srcH , dstW , dstH )"		8140666	0					
ANR	8143721	Callee	av_log		8140666	0					
ANR	8143722	Identifier	av_log		8140666	0					
ANR	8143723	ArgumentList	c		8140666	1					
ANR	8143724	Argument	c		8140666	0					
ANR	8143725	Identifier	c		8140666	0					
ANR	8143726	Argument	AV_LOG_VERBOSE		8140666	1					
ANR	8143727	Identifier	AV_LOG_VERBOSE		8140666	0					
ANR	8143728	Argument	"""%dx%d -> %dx%d\\n"""		8140666	2					
ANR	8143729	PrimaryExpression	"""%dx%d -> %dx%d\\n"""		8140666	0					
ANR	8143730	Argument	srcW		8140666	3					
ANR	8143731	Identifier	srcW		8140666	0					
ANR	8143732	Argument	srcH		8140666	4					
ANR	8143733	Identifier	srcH		8140666	0					
ANR	8143734	Argument	dstW		8140666	5					
ANR	8143735	Identifier	dstW		8140666	0					
ANR	8143736	Argument	dstH		8140666	6					
ANR	8143737	Identifier	dstH		8140666	0					
ANR	8143738	ExpressionStatement	"av_log ( c , AV_LOG_DEBUG , ""lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> srcW , c -> srcH , c -> dstW , c -> dstH , c -> lumXInc , c -> lumYInc )"	873:8:20132:20304	8140666	50	True				
ANR	8143739	CallExpression	"av_log ( c , AV_LOG_DEBUG , ""lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> srcW , c -> srcH , c -> dstW , c -> dstH , c -> lumXInc , c -> lumYInc )"		8140666	0					
ANR	8143740	Callee	av_log		8140666	0					
ANR	8143741	Identifier	av_log		8140666	0					
ANR	8143742	ArgumentList	c		8140666	1					
ANR	8143743	Argument	c		8140666	0					
ANR	8143744	Identifier	c		8140666	0					
ANR	8143745	Argument	AV_LOG_DEBUG		8140666	1					
ANR	8143746	Identifier	AV_LOG_DEBUG		8140666	0					
ANR	8143747	Argument	"""lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		8140666	2					
ANR	8143748	PrimaryExpression	"""lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		8140666	0					
ANR	8143749	Argument	c -> srcW		8140666	3					
ANR	8143750	PtrMemberAccess	c -> srcW		8140666	0					
ANR	8143751	Identifier	c		8140666	0					
ANR	8143752	Identifier	srcW		8140666	1					
ANR	8143753	Argument	c -> srcH		8140666	4					
ANR	8143754	PtrMemberAccess	c -> srcH		8140666	0					
ANR	8143755	Identifier	c		8140666	0					
ANR	8143756	Identifier	srcH		8140666	1					
ANR	8143757	Argument	c -> dstW		8140666	5					
ANR	8143758	PtrMemberAccess	c -> dstW		8140666	0					
ANR	8143759	Identifier	c		8140666	0					
ANR	8143760	Identifier	dstW		8140666	1					
ANR	8143761	Argument	c -> dstH		8140666	6					
ANR	8143762	PtrMemberAccess	c -> dstH		8140666	0					
ANR	8143763	Identifier	c		8140666	0					
ANR	8143764	Identifier	dstH		8140666	1					
ANR	8143765	Argument	c -> lumXInc		8140666	7					
ANR	8143766	PtrMemberAccess	c -> lumXInc		8140666	0					
ANR	8143767	Identifier	c		8140666	0					
ANR	8143768	Identifier	lumXInc		8140666	1					
ANR	8143769	Argument	c -> lumYInc		8140666	8					
ANR	8143770	PtrMemberAccess	c -> lumYInc		8140666	0					
ANR	8143771	Identifier	c		8140666	0					
ANR	8143772	Identifier	lumYInc		8140666	1					
ANR	8143773	ExpressionStatement	"av_log ( c , AV_LOG_DEBUG , ""chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> chrSrcW , c -> chrSrcH , c -> chrDstW , c -> chrDstH , c -> chrXInc , c -> chrYInc )"	879:8:20315:20515	8140666	51	True				
ANR	8143774	CallExpression	"av_log ( c , AV_LOG_DEBUG , ""chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> chrSrcW , c -> chrSrcH , c -> chrDstW , c -> chrDstH , c -> chrXInc , c -> chrYInc )"		8140666	0					
ANR	8143775	Callee	av_log		8140666	0					
ANR	8143776	Identifier	av_log		8140666	0					
ANR	8143777	ArgumentList	c		8140666	1					
ANR	8143778	Argument	c		8140666	0					
ANR	8143779	Identifier	c		8140666	0					
ANR	8143780	Argument	AV_LOG_DEBUG		8140666	1					
ANR	8143781	Identifier	AV_LOG_DEBUG		8140666	0					
ANR	8143782	Argument	"""chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		8140666	2					
ANR	8143783	PrimaryExpression	"""chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		8140666	0					
ANR	8143784	Argument	c -> chrSrcW		8140666	3					
ANR	8143785	PtrMemberAccess	c -> chrSrcW		8140666	0					
ANR	8143786	Identifier	c		8140666	0					
ANR	8143787	Identifier	chrSrcW		8140666	1					
ANR	8143788	Argument	c -> chrSrcH		8140666	4					
ANR	8143789	PtrMemberAccess	c -> chrSrcH		8140666	0					
ANR	8143790	Identifier	c		8140666	0					
ANR	8143791	Identifier	chrSrcH		8140666	1					
ANR	8143792	Argument	c -> chrDstW		8140666	5					
ANR	8143793	PtrMemberAccess	c -> chrDstW		8140666	0					
ANR	8143794	Identifier	c		8140666	0					
ANR	8143795	Identifier	chrDstW		8140666	1					
ANR	8143796	Argument	c -> chrDstH		8140666	6					
ANR	8143797	PtrMemberAccess	c -> chrDstH		8140666	0					
ANR	8143798	Identifier	c		8140666	0					
ANR	8143799	Identifier	chrDstH		8140666	1					
ANR	8143800	Argument	c -> chrXInc		8140666	7					
ANR	8143801	PtrMemberAccess	c -> chrXInc		8140666	0					
ANR	8143802	Identifier	c		8140666	0					
ANR	8143803	Identifier	chrXInc		8140666	1					
ANR	8143804	Argument	c -> chrYInc		8140666	8					
ANR	8143805	PtrMemberAccess	c -> chrYInc		8140666	0					
ANR	8143806	Identifier	c		8140666	0					
ANR	8143807	Identifier	chrYInc		8140666	1					
ANR	8143808	ExpressionStatement	c -> swscale = ff_getSwsFunc ( c )	891:4:20531:20560	8140666	90	True				
ANR	8143809	AssignmentExpression	c -> swscale = ff_getSwsFunc ( c )		8140666	0		=			
ANR	8143810	PtrMemberAccess	c -> swscale		8140666	0					
ANR	8143811	Identifier	c		8140666	0					
ANR	8143812	Identifier	swscale		8140666	1					
ANR	8143813	CallExpression	ff_getSwsFunc ( c )		8140666	1					
ANR	8143814	Callee	ff_getSwsFunc		8140666	0					
ANR	8143815	Identifier	ff_getSwsFunc		8140666	0					
ANR	8143816	ArgumentList	c		8140666	1					
ANR	8143817	Argument	c		8140666	0					
ANR	8143818	Identifier	c		8140666	0					
ANR	8143819	ReturnStatement	return 0 ;	893:4:20567:20575	8140666	91	True				
ANR	8143820	PrimaryExpression	0		8140666	0					
ANR	8143821	Label	fail :	895:0:20578:20582	8140666	92	True				
ANR	8143822	Identifier	fail		8140666	0					
ANR	8143823	ReturnStatement	return - 1 ;	897:4:20640:20649	8140666	93	True				
ANR	8143824	UnaryOperationExpression	- 1		8140666	0					
ANR	8143825	UnaryOperator	-		8140666	0					
ANR	8143826	PrimaryExpression	1		8140666	1					
ANR	8143827	ReturnType	av_cold int		8140666	1					
ANR	8143828	Identifier	sws_init_context		8140666	2					
ANR	8143829	ParameterList	"SwsContext * c , SwsFilter * srcFilter , SwsFilter * dstFilter"		8140666	3					
ANR	8143830	Parameter	SwsContext * c	1:29:29:41	8140666	0	True				
ANR	8143831	ParameterType	SwsContext *		8140666	0					
ANR	8143832	Identifier	c		8140666	1					
ANR	8143833	Parameter	SwsFilter * srcFilter	1:44:44:63	8140666	1	True				
ANR	8143834	ParameterType	SwsFilter *		8140666	0					
ANR	8143835	Identifier	srcFilter		8140666	1					
ANR	8143836	Parameter	SwsFilter * dstFilter	3:29:96:115	8140666	2	True				
ANR	8143837	ParameterType	SwsFilter *		8140666	0					
ANR	8143838	Identifier	dstFilter		8140666	1					
ANR	8143839	CFGEntryNode	ENTRY		8140666		True				
ANR	8143840	CFGExitNode	EXIT		8140666		True				
ANR	8143841	Symbol	c -> lumXInc		8140666						
ANR	8143842	Symbol	INLINE_AMD3DNOW		8140666						
ANR	8143843	Symbol	& c -> chrSrcVSubSample		8140666						
ANR	8143844	Symbol	ff_getSwsFunc		8140666						
ANR	8143845	Symbol	* c -> vChrFilter		8140666						
ANR	8143846	Symbol	initFilter		8140666						
ANR	8143847	Symbol	* c -> vChrBufSize		8140666						
ANR	8143848	Symbol	MAP_PRIVATE		8140666						
ANR	8143849	Symbol	c -> dstFormatBpp		8140666						
ANR	8143850	Symbol	c -> vChrBufSize		8140666						
ANR	8143851	Symbol	AV_PIX_FMT_GBRAP10LE		8140666						
ANR	8143852	Symbol	c -> vLumBufSize		8140666						
ANR	8143853	Symbol	av_get_pix_fmt_name		8140666						
ANR	8143854	Symbol	CONFIG_SWSCALE_ALPHA		8140666						
ANR	8143855	Symbol	* srcFilter -> chrH		8140666						
ANR	8143856	Symbol	& c -> hChrFilterSize		8140666						
ANR	8143857	Symbol	AV_PIX_FMT_GBRP12LE		8140666						
ANR	8143858	Symbol	PROT_READ		8140666						
ANR	8143859	Symbol	c -> srcFormat		8140666						
ANR	8143860	Symbol	* srcFilter		8140666						
ANR	8143861	Symbol	c -> chrMmxextFilterCodeSize		8140666						
ANR	8143862	Symbol	* srcFilter -> chrV		8140666						
ANR	8143863	Symbol	AV_LOG_VERBOSE		8140666						
ANR	8143864	Symbol	SWS_X		8140666						
ANR	8143865	Symbol	dst_stride_px		8140666						
ANR	8143866	Symbol	isALPHA		8140666						
ANR	8143867	Symbol	* c -> vLumBufSize		8140666						
ANR	8143868	Symbol	FFALIGN		8140666						
ANR	8143869	Symbol	desc_src -> comp		8140666						
ANR	8143870	Symbol	SWS_FULL_CHR_H_INP		8140666						
ANR	8143871	Symbol	c -> param		8140666						
ANR	8143872	Symbol	SWS_FULL_CHR_H_INT		8140666						
ANR	8143873	Symbol	av_pix_fmt_swap_endianness		8140666						
ANR	8143874	Symbol	usesHFilter		8140666						
ANR	8143875	Symbol	sws_isSupportedInput		8140666						
ANR	8143876	Symbol	c -> lumMmxextFilterCodeSize		8140666						
ANR	8143877	Symbol	c -> chrDstHSubSample		8140666						
ANR	8143878	Symbol	SWS_LANCZOS		8140666						
ANR	8143879	Symbol	PPC_ALTIVEC		8140666						
ANR	8143880	Symbol	* desc_src -> comp		8140666						
ANR	8143881	Symbol	c -> vLumFilter		8140666						
ANR	8143882	Symbol	c -> hLumFilter		8140666						
ANR	8143883	Symbol	dstFilter -> chrH -> length		8140666						
ANR	8143884	Symbol	desc_dst -> comp		8140666						
ANR	8143885	Symbol	c		8140666						
ANR	8143886	Symbol	MAP_ANONYMOUS		8140666						
ANR	8143887	Symbol	c -> hChrFilterPos		8140666						
ANR	8143888	Symbol	dstFilter -> chrV -> length		8140666						
ANR	8143889	Symbol	i		8140666						
ANR	8143890	Symbol	srcFilter -> lumH -> length		8140666						
ANR	8143891	Symbol	j		8140666						
ANR	8143892	Symbol	c -> vChrDrop		8140666						
ANR	8143893	Symbol	AV_PIX_FMT_GBRP9BE		8140666						
ANR	8143894	Symbol	p		8140666						
ANR	8143895	Symbol	* dstFilter		8140666						
ANR	8143896	Symbol	AV_PIX_FMT_BGR24		8140666						
ANR	8143897	Symbol	* c -> vLumFilter		8140666						
ANR	8143898	Symbol	AV_PIX_FMT_GBRP16BE		8140666						
ANR	8143899	Symbol	sws_format_name		8140666						
ANR	8143900	Symbol	srcFilter -> lumV -> length		8140666						
ANR	8143901	Symbol	AV_PIX_FMT_RGB4		8140666						
ANR	8143902	Symbol	c -> vChrFilterPos		8140666						
ANR	8143903	Symbol	unscaled		8140666						
ANR	8143904	Symbol	AV_PIX_FMT_RGB8		8140666						
ANR	8143905	Symbol	c -> srcBpc		8140666						
ANR	8143906	Symbol	* c -> alpPixBuf		8140666						
ANR	8143907	Symbol	c -> chrSrcVSubSample		8140666						
ANR	8143908	Symbol	c -> uv_off_px		8140666						
ANR	8143909	Symbol	AV_PIX_FMT_RGBA		8140666						
ANR	8143910	Symbol	AV_CEIL_RSHIFT		8140666						
ANR	8143911	Symbol	~SWS_FULL_CHR_H_INT		8140666						
ANR	8143912	Symbol	* dstFilter -> lumH		8140666						
ANR	8143913	Symbol	desc_src -> comp [ 0 ] . depth		8140666						
ANR	8143914	Symbol	& c -> chrDstVSubSample		8140666						
ANR	8143915	Symbol	SWS_POINT		8140666						
ANR	8143916	Symbol	* * c		8140666						
ANR	8143917	Symbol	AV_PIX_FMT_GBRP10LE		8140666						
ANR	8143918	Symbol	c -> hChrFilter		8140666						
ANR	8143919	Symbol	& c -> vLumFilter		8140666						
ANR	8143920	Symbol	* dstFilter -> lumV		8140666						
ANR	8143921	Symbol	c -> srcRange		8140666						
ANR	8143922	Symbol	INLINE_MMXEXT		8140666						
ANR	8143923	Symbol	AV_PIX_FMT_RGB4_BYTE		8140666						
ANR	8143924	Symbol	c -> dstRange		8140666						
ANR	8143925	Symbol	srcFilter -> chrV -> length		8140666						
ANR	8143926	Symbol	& c -> hLumFilter		8140666						
ANR	8143927	Symbol	srcW		8140666						
ANR	8143928	Symbol	& c -> chrDstHSubSample		8140666						
ANR	8143929	Symbol	c -> lumMmxextFilterCode		8140666						
ANR	8143930	Symbol	& c -> chrSrcHSubSample		8140666						
ANR	8143931	Symbol	srcH		8140666						
ANR	8143932	Symbol	* * desc_src		8140666						
ANR	8143933	Symbol	AV_PIX_FMT_BGR4_BYTE		8140666						
ANR	8143934	Symbol	isPlanarRGB		8140666						
ANR	8143935	Symbol	desc_dst -> comp [ 0 ] . depth		8140666						
ANR	8143936	Symbol	dstFormat		8140666						
ANR	8143937	Symbol	SWS_FAST_BILINEAR		8140666						
ANR	8143938	Symbol	SWS_BILINEAR		8140666						
ANR	8143939	Symbol	AV_PIX_FMT_BGRA		8140666						
ANR	8143940	Symbol	c -> vChrFilter		8140666						
ANR	8143941	Symbol	* desc_dst -> comp		8140666						
ANR	8143942	Symbol	SWS_BICUBIC		8140666						
ANR	8143943	Symbol	* chrI		8140666						
ANR	8143944	Symbol	* * srcFilter		8140666						
ANR	8143945	Symbol	isAnyRGB		8140666						
ANR	8143946	Symbol	SWS_GAUSS		8140666						
ANR	8143947	Symbol	AV_PIX_FMT_BGR4		8140666						
ANR	8143948	Symbol	c -> chrDstVSubSample		8140666						
ANR	8143949	Symbol	* * desc_dst		8140666						
ANR	8143950	Symbol	AV_PIX_FMT_BGR8		8140666						
ANR	8143951	Symbol	ENOMEM		8140666						
ANR	8143952	Symbol	& c -> hChrFilter		8140666						
ANR	8143953	Symbol	srcFilter		8140666						
ANR	8143954	Symbol	dstH		8140666						
ANR	8143955	Symbol	c -> chrDstH		8140666						
ANR	8143956	Symbol	* desc_dst		8140666						
ANR	8143957	Symbol	SWS_SPLINE		8140666						
ANR	8143958	Symbol	chrI		8140666						
ANR	8143959	Symbol	* dstFilter -> chrH		8140666						
ANR	8143960	Symbol	AV_PIX_FMT_GBRP9LE		8140666						
ANR	8143961	Symbol	PROT_WRITE		8140666						
ANR	8143962	Symbol	c -> vLumFilterSize		8140666						
ANR	8143963	Symbol	SWS_SINC		8140666						
ANR	8143964	Symbol	dstW		8140666						
ANR	8143965	Symbol	* dstFilter -> chrV		8140666						
ANR	8143966	Symbol	AV_LOG_DEBUG		8140666						
ANR	8143967	Symbol	& c -> vLumFilterSize		8140666						
ANR	8143968	Symbol	SWS_PRINT_INFO		8140666						
ANR	8143969	Symbol	c -> lumPixBuf		8140666						
ANR	8143970	Symbol	filterAlign		8140666						
ANR	8143971	Symbol	dst_stride		8140666						
ANR	8143972	Symbol	PROT_EXEC		8140666						
ANR	8143973	Symbol	c -> chrUPixBuf		8140666						
ANR	8143974	Symbol	SWS_SRC_V_CHR_DROP_MASK		8140666						
ANR	8143975	Symbol	srcFormat		8140666						
ANR	8143976	Symbol	* desc_src		8140666						
ANR	8143977	Symbol	cpu_flags		8140666						
ANR	8143978	Symbol	fail		8140666						
ANR	8143979	Symbol	c -> srcFormatBpp		8140666						
ANR	8143980	Symbol	AV_PIX_FMT_GBRP16LE		8140666						
ANR	8143981	Symbol	* * dstFilter		8140666						
ANR	8143982	Symbol	av_pix_fmt_desc_get		8140666						
ANR	8143983	Symbol	dstFilter		8140666						
ANR	8143984	Symbol	AV_LOG_INFO		8140666						
ANR	8143985	Symbol	c -> chrDstW		8140666						
ANR	8143986	Symbol	c -> swscale		8140666						
ANR	8143987	Symbol	c -> chrVPixBuf		8140666						
ANR	8143988	Symbol	srcFilter -> chrH		8140666						
ANR	8143989	Symbol	dstFilter -> lumH		8140666						
ANR	8143990	Symbol	c -> chrSrcH		8140666						
ANR	8143991	Symbol	flags		8140666						
ANR	8143992	Symbol	dstFilter -> lumV		8140666						
ANR	8143993	Symbol	dstFilter -> lumV -> length		8140666						
ANR	8143994	Symbol	INLINE_MMX		8140666						
ANR	8143995	Symbol	AV_PIX_FMT_ARGB		8140666						
ANR	8143996	Symbol	AV_PIX_FMT_ABGR		8140666						
ANR	8143997	Symbol	AV_PIX_FMT_RGB24		8140666						
ANR	8143998	Symbol	usesVFilter		8140666						
ANR	8143999	Symbol	srcFilter -> chrV		8140666						
ANR	8144000	Symbol	c -> dstW		8140666						
ANR	8144001	Symbol	* c -> chrUPixBuf		8140666						
ANR	8144002	Symbol	init_hscaler_mmxext		8140666						
ANR	8144003	Symbol	& c -> vChrFilter		8140666						
ANR	8144004	Symbol	c -> hLumFilterPos		8140666						
ANR	8144005	Symbol	& c -> vChrFilterSize		8140666						
ANR	8144006	Symbol	c -> alpPixBuf		8140666						
ANR	8144007	Symbol	dstFilter -> lumH -> length		8140666						
ANR	8144008	Symbol	c -> vLumFilterPos		8140666						
ANR	8144009	Symbol	AV_LOG_ERROR		8140666						
ANR	8144010	Symbol	SWS_BICUBLIN		8140666						
ANR	8144011	Symbol	SWS_AREA		8140666						
ANR	8144012	Symbol	c -> chrSrcHSubSample		8140666						
ANR	8144013	Symbol	dummyFilter		8140666						
ANR	8144014	Symbol	sws_isSupportedOutput		8140666						
ANR	8144015	Symbol	EINVAL		8140666						
ANR	8144016	Symbol	& c -> hLumFilterSize		8140666						
ANR	8144017	Symbol	c -> chrSrcW		8140666						
ANR	8144018	Symbol	av_get_cpu_flags		8140666						
ANR	8144019	Symbol	~7		8140666						
ANR	8144020	Symbol	c -> uv_off_byte		8140666						
ANR	8144021	Symbol	SWS_SRC_V_CHR_DROP_SHIFT		8140666						
ANR	8144022	Symbol	AV_PIX_FMT_GBRP12BE		8140666						
ANR	8144023	Symbol	FFMAX		8140666						
ANR	8144024	Symbol	* c -> chrVPixBuf		8140666						
ANR	8144025	Symbol	* c -> lumPixBuf		8140666						
ANR	8144026	Symbol	* c -> vLumFilterPos		8140666						
ANR	8144027	Symbol	c -> dstBpc		8140666						
ANR	8144028	Symbol	& c -> hChrFilterPos		8140666						
ANR	8144029	Symbol	X86_MMX		8140666						
ANR	8144030	Symbol	& dummyFilter		8140666						
ANR	8144031	Symbol	c -> formatConvBuffer		8140666						
ANR	8144032	Symbol	& c -> vLumFilterPos		8140666						
ANR	8144033	Symbol	c -> chrMmxextFilterCode		8140666						
ANR	8144034	Symbol	desc_src		8140666						
ANR	8144035	Symbol	c -> srcW		8140666						
ANR	8144036	Symbol	NULL		8140666						
ANR	8144037	Symbol	* c -> vChrFilterPos		8140666						
ANR	8144038	Symbol	c -> dstH		8140666						
ANR	8144039	Symbol	c -> vChrFilterSize		8140666						
ANR	8144040	Symbol	* srcFilter -> lumH		8140666						
ANR	8144041	Symbol	& c -> vChrFilterPos		8140666						
ANR	8144042	Symbol	c -> vYCoeffsBank		8140666						
ANR	8144043	Symbol	c -> chrYInc		8140666						
ANR	8144044	Symbol	desc_dst		8140666						
ANR	8144045	Symbol	nextSlice		8140666						
ANR	8144046	Symbol	c -> flags		8140666						
ANR	8144047	Symbol	dstFilter -> chrV		8140666						
ANR	8144048	Symbol	srcFilter -> lumH		8140666						
ANR	8144049	Symbol	srcFilter -> chrH -> length		8140666						
ANR	8144050	Symbol	c -> canMMXEXTBeUsed		8140666						
ANR	8144051	Symbol	* srcFilter -> lumV		8140666						
ANR	8144052	Symbol	AV_PIX_FMT_GBRAP10BE		8140666						
ANR	8144053	Symbol	av_get_bits_per_pixel		8140666						
ANR	8144054	Symbol	dstFilter -> chrH		8140666						
ANR	8144055	Symbol	c -> chrXInc		8140666						
ANR	8144056	Symbol	srcFilter -> lumV		8140666						
ANR	8144057	Symbol	c -> dstFormat		8140666						
ANR	8144058	Symbol	rgb15to16		8140666						
ANR	8144059	Symbol	c -> lumYInc		8140666						
ANR	8144060	Symbol	c -> srcH		8140666						
ANR	8144061	Symbol	* c		8140666						
ANR	8144062	Symbol	& c -> hLumFilterPos		8140666						
ANR	8144063	Symbol	AV_PIX_FMT_GBRP10BE		8140666						
ANR	8144064	Symbol	* i		8140666						
ANR	8144065	Symbol	* j		8140666						
ANR	8144066	Symbol	sws_isSupportedEndiannessConversion		8140666						
ANR	8144067	Symbol	c -> vCCoeffsBank		8140666						
ANR	8144068	Symbol	* p		8140666						
ANR	8144069	Symbol	AVERROR		8140666						
ANR	8144070	Symbol	mmap		8140666						
