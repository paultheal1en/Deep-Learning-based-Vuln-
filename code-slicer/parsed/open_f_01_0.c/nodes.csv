command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6199297	File	/home/p4ultr4n/workplace/ReVeal/raw_code/open_f_01_0.c								
ANR	6199298	Function	open_f	1:0:0:2531							
ANR	6199299	FunctionDef	"open_f (BlockBackend * blk , int argc , char * * argv)"		6199298	0					
ANR	6199300	CompoundStatement		3:0:61:2531	6199298	0					
ANR	6199301	IdentifierDeclStatement	int flags = BDRV_O_UNMAP ;	5:4:68:92	6199298	0	True				
ANR	6199302	IdentifierDecl	flags = BDRV_O_UNMAP		6199298	0					
ANR	6199303	IdentifierDeclType	int		6199298	0					
ANR	6199304	Identifier	flags		6199298	1					
ANR	6199305	AssignmentExpression	flags = BDRV_O_UNMAP		6199298	2		=			
ANR	6199306	Identifier	BDRV_O_UNMAP		6199298	0					
ANR	6199307	Identifier	BDRV_O_UNMAP		6199298	1					
ANR	6199308	IdentifierDeclStatement	int readonly = 0 ;	7:4:99:115	6199298	1	True				
ANR	6199309	IdentifierDecl	readonly = 0		6199298	0					
ANR	6199310	IdentifierDeclType	int		6199298	0					
ANR	6199311	Identifier	readonly		6199298	1					
ANR	6199312	AssignmentExpression	readonly = 0		6199298	2		=			
ANR	6199313	Identifier	readonly		6199298	0					
ANR	6199314	PrimaryExpression	0		6199298	1					
ANR	6199315	IdentifierDeclStatement	bool writethrough = true ;	9:4:122:146	6199298	2	True				
ANR	6199316	IdentifierDecl	writethrough = true		6199298	0					
ANR	6199317	IdentifierDeclType	bool		6199298	0					
ANR	6199318	Identifier	writethrough		6199298	1					
ANR	6199319	AssignmentExpression	writethrough = true		6199298	2		=			
ANR	6199320	Identifier	true		6199298	0					
ANR	6199321	Identifier	true		6199298	1					
ANR	6199322	IdentifierDeclStatement	int c ;	11:4:153:158	6199298	3	True				
ANR	6199323	IdentifierDecl	c		6199298	0					
ANR	6199324	IdentifierDeclType	int		6199298	0					
ANR	6199325	Identifier	c		6199298	1					
ANR	6199326	IdentifierDeclStatement	QemuOpts * qopts ;	13:4:165:180	6199298	4	True				
ANR	6199327	IdentifierDecl	* qopts		6199298	0					
ANR	6199328	IdentifierDeclType	QemuOpts *		6199298	0					
ANR	6199329	Identifier	qopts		6199298	1					
ANR	6199330	IdentifierDeclStatement	QDict * opts ;	15:4:187:198	6199298	5	True				
ANR	6199331	IdentifierDecl	* opts		6199298	0					
ANR	6199332	IdentifierDeclType	QDict *		6199298	0					
ANR	6199333	Identifier	opts		6199298	1					
ANR	6199334	IdentifierDeclStatement	bool force_share = false ;	17:4:205:229	6199298	6	True				
ANR	6199335	IdentifierDecl	force_share = false		6199298	0					
ANR	6199336	IdentifierDeclType	bool		6199298	0					
ANR	6199337	Identifier	force_share		6199298	1					
ANR	6199338	AssignmentExpression	force_share = false		6199298	2		=			
ANR	6199339	Identifier	false		6199298	0					
ANR	6199340	Identifier	false		6199298	1					
ANR	6199341	WhileStatement	"while ( ( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1 )"		6199298	7					
ANR	6199342	Condition	"( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1"	21:11:245:289	6199298	0	True				
ANR	6199343	EqualityExpression	"( c = getopt ( argc , argv , ""snro:kt:d:U"" ) ) != - 1"		6199298	0		!=			
ANR	6199344	AssignmentExpression	"c = getopt ( argc , argv , ""snro:kt:d:U"" )"		6199298	0		=			
ANR	6199345	Identifier	c		6199298	0					
ANR	6199346	CallExpression	"getopt ( argc , argv , ""snro:kt:d:U"" )"		6199298	1					
ANR	6199347	Callee	getopt		6199298	0					
ANR	6199348	Identifier	getopt		6199298	0					
ANR	6199349	ArgumentList	argc		6199298	1					
ANR	6199350	Argument	argc		6199298	0					
ANR	6199351	Identifier	argc		6199298	0					
ANR	6199352	Argument	argv		6199298	1					
ANR	6199353	Identifier	argv		6199298	0					
ANR	6199354	Argument	"""snro:kt:d:U"""		6199298	2					
ANR	6199355	PrimaryExpression	"""snro:kt:d:U"""		6199298	0					
ANR	6199356	UnaryOperationExpression	- 1		6199298	1					
ANR	6199357	UnaryOperator	-		6199298	0					
ANR	6199358	PrimaryExpression	1		6199298	1					
ANR	6199359	CompoundStatement		19:58:230:230	6199298	1					
ANR	6199360	SwitchStatement	switch ( c )		6199298	0					
ANR	6199361	Condition	c	23:16:311:311	6199298	0	True				
ANR	6199362	Identifier	c		6199298	0					
ANR	6199363	CompoundStatement		21:19:252:252	6199298	1					
ANR	6199364	Label	case 's' :	25:8:325:333	6199298	0	True				
ANR	6199365	ExpressionStatement	flags |= BDRV_O_SNAPSHOT	27:12:348:372	6199298	1	True				
ANR	6199366	AssignmentExpression	flags |= BDRV_O_SNAPSHOT		6199298	0		|=			
ANR	6199367	Identifier	flags		6199298	0					
ANR	6199368	Identifier	BDRV_O_SNAPSHOT		6199298	1					
ANR	6199369	BreakStatement	break ;	29:12:387:392	6199298	2	True				
ANR	6199370	Label	case 'n' :	31:8:403:411	6199298	3	True				
ANR	6199371	ExpressionStatement	flags |= BDRV_O_NOCACHE	33:12:426:449	6199298	4	True				
ANR	6199372	AssignmentExpression	flags |= BDRV_O_NOCACHE		6199298	0		|=			
ANR	6199373	Identifier	flags		6199298	0					
ANR	6199374	Identifier	BDRV_O_NOCACHE		6199298	1					
ANR	6199375	ExpressionStatement	writethrough = false	35:12:464:484	6199298	5	True				
ANR	6199376	AssignmentExpression	writethrough = false		6199298	0		=			
ANR	6199377	Identifier	writethrough		6199298	0					
ANR	6199378	Identifier	false		6199298	1					
ANR	6199379	BreakStatement	break ;	37:12:499:504	6199298	6	True				
ANR	6199380	Label	case 'r' :	39:8:515:523	6199298	7	True				
ANR	6199381	ExpressionStatement	readonly = 1	41:12:538:550	6199298	8	True				
ANR	6199382	AssignmentExpression	readonly = 1		6199298	0		=			
ANR	6199383	Identifier	readonly		6199298	0					
ANR	6199384	PrimaryExpression	1		6199298	1					
ANR	6199385	BreakStatement	break ;	43:12:565:570	6199298	9	True				
ANR	6199386	Label	case 'k' :	45:8:581:589	6199298	10	True				
ANR	6199387	ExpressionStatement	flags |= BDRV_O_NATIVE_AIO	47:12:604:630	6199298	11	True				
ANR	6199388	AssignmentExpression	flags |= BDRV_O_NATIVE_AIO		6199298	0		|=			
ANR	6199389	Identifier	flags		6199298	0					
ANR	6199390	Identifier	BDRV_O_NATIVE_AIO		6199298	1					
ANR	6199391	BreakStatement	break ;	49:12:645:650	6199298	12	True				
ANR	6199392	Label	case 't' :	51:8:661:669	6199298	13	True				
ANR	6199393	IfStatement	"if ( bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0 )"		6199298	14					
ANR	6199394	Condition	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0"	53:16:688:743	6199298	0	True				
ANR	6199395	RelationalExpression	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough ) < 0"		6199298	0		<			
ANR	6199396	CallExpression	"bdrv_parse_cache_mode ( optarg , & flags , & writethrough )"		6199298	0					
ANR	6199397	Callee	bdrv_parse_cache_mode		6199298	0					
ANR	6199398	Identifier	bdrv_parse_cache_mode		6199298	0					
ANR	6199399	ArgumentList	optarg		6199298	1					
ANR	6199400	Argument	optarg		6199298	0					
ANR	6199401	Identifier	optarg		6199298	0					
ANR	6199402	Argument	& flags		6199298	1					
ANR	6199403	UnaryOperationExpression	& flags		6199298	0					
ANR	6199404	UnaryOperator	&		6199298	0					
ANR	6199405	Identifier	flags		6199298	1					
ANR	6199406	Argument	& writethrough		6199298	2					
ANR	6199407	UnaryOperationExpression	& writethrough		6199298	0					
ANR	6199408	UnaryOperator	&		6199298	0					
ANR	6199409	Identifier	writethrough		6199298	1					
ANR	6199410	PrimaryExpression	0		6199298	1					
ANR	6199411	CompoundStatement		51:74:684:684	6199298	1					
ANR	6199412	ExpressionStatement	"error_report ( ""Invalid cache option: %s"" , optarg )"	55:16:765:813	6199298	0	True				
ANR	6199413	CallExpression	"error_report ( ""Invalid cache option: %s"" , optarg )"		6199298	0					
ANR	6199414	Callee	error_report		6199298	0					
ANR	6199415	Identifier	error_report		6199298	0					
ANR	6199416	ArgumentList	"""Invalid cache option: %s"""		6199298	1					
ANR	6199417	Argument	"""Invalid cache option: %s"""		6199298	0					
ANR	6199418	PrimaryExpression	"""Invalid cache option: %s"""		6199298	0					
ANR	6199419	Argument	optarg		6199298	1					
ANR	6199420	Identifier	optarg		6199298	0					
ANR	6199421	ExpressionStatement	qemu_opts_reset ( & empty_opts )	57:16:832:860	6199298	1	True				
ANR	6199422	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199423	Callee	qemu_opts_reset		6199298	0					
ANR	6199424	Identifier	qemu_opts_reset		6199298	0					
ANR	6199425	ArgumentList	& empty_opts		6199298	1					
ANR	6199426	Argument	& empty_opts		6199298	0					
ANR	6199427	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199428	UnaryOperator	&		6199298	0					
ANR	6199429	Identifier	empty_opts		6199298	1					
ANR	6199430	ReturnStatement	return 0 ;	59:16:879:887	6199298	2	True				
ANR	6199431	PrimaryExpression	0		6199298	0					
ANR	6199432	BreakStatement	break ;	63:12:917:922	6199298	15	True				
ANR	6199433	Label	case 'd' :	65:8:933:941	6199298	16	True				
ANR	6199434	IfStatement	"if ( bdrv_parse_discard_flags ( optarg , & flags ) < 0 )"		6199298	17					
ANR	6199435	Condition	"bdrv_parse_discard_flags ( optarg , & flags ) < 0"	67:16:960:1003	6199298	0	True				
ANR	6199436	RelationalExpression	"bdrv_parse_discard_flags ( optarg , & flags ) < 0"		6199298	0		<			
ANR	6199437	CallExpression	"bdrv_parse_discard_flags ( optarg , & flags )"		6199298	0					
ANR	6199438	Callee	bdrv_parse_discard_flags		6199298	0					
ANR	6199439	Identifier	bdrv_parse_discard_flags		6199298	0					
ANR	6199440	ArgumentList	optarg		6199298	1					
ANR	6199441	Argument	optarg		6199298	0					
ANR	6199442	Identifier	optarg		6199298	0					
ANR	6199443	Argument	& flags		6199298	1					
ANR	6199444	UnaryOperationExpression	& flags		6199298	0					
ANR	6199445	UnaryOperator	&		6199298	0					
ANR	6199446	Identifier	flags		6199298	1					
ANR	6199447	PrimaryExpression	0		6199298	1					
ANR	6199448	CompoundStatement		65:62:944:944	6199298	1					
ANR	6199449	ExpressionStatement	"error_report ( ""Invalid discard option: %s"" , optarg )"	69:16:1025:1075	6199298	0	True				
ANR	6199450	CallExpression	"error_report ( ""Invalid discard option: %s"" , optarg )"		6199298	0					
ANR	6199451	Callee	error_report		6199298	0					
ANR	6199452	Identifier	error_report		6199298	0					
ANR	6199453	ArgumentList	"""Invalid discard option: %s"""		6199298	1					
ANR	6199454	Argument	"""Invalid discard option: %s"""		6199298	0					
ANR	6199455	PrimaryExpression	"""Invalid discard option: %s"""		6199298	0					
ANR	6199456	Argument	optarg		6199298	1					
ANR	6199457	Identifier	optarg		6199298	0					
ANR	6199458	ExpressionStatement	qemu_opts_reset ( & empty_opts )	71:16:1094:1122	6199298	1	True				
ANR	6199459	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199460	Callee	qemu_opts_reset		6199298	0					
ANR	6199461	Identifier	qemu_opts_reset		6199298	0					
ANR	6199462	ArgumentList	& empty_opts		6199298	1					
ANR	6199463	Argument	& empty_opts		6199298	0					
ANR	6199464	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199465	UnaryOperator	&		6199298	0					
ANR	6199466	Identifier	empty_opts		6199298	1					
ANR	6199467	ReturnStatement	return 0 ;	73:16:1141:1149	6199298	2	True				
ANR	6199468	PrimaryExpression	0		6199298	0					
ANR	6199469	BreakStatement	break ;	77:12:1179:1184	6199298	18	True				
ANR	6199470	Label	case 'o' :	79:8:1195:1203	6199298	19	True				
ANR	6199471	IfStatement	if ( imageOpts )		6199298	20					
ANR	6199472	Condition	imageOpts	81:16:1222:1230	6199298	0	True				
ANR	6199473	Identifier	imageOpts		6199298	0					
ANR	6199474	CompoundStatement		79:27:1171:1171	6199298	1					
ANR	6199475	ExpressionStatement	"printf ( ""--image-opts and 'open -o' are mutually exclusive\\n"" )"	83:16:1252:1313	6199298	0	True				
ANR	6199476	CallExpression	"printf ( ""--image-opts and 'open -o' are mutually exclusive\\n"" )"		6199298	0					
ANR	6199477	Callee	printf		6199298	0					
ANR	6199478	Identifier	printf		6199298	0					
ANR	6199479	ArgumentList	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199298	1					
ANR	6199480	Argument	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199298	0					
ANR	6199481	PrimaryExpression	"""--image-opts and 'open -o' are mutually exclusive\\n"""		6199298	0					
ANR	6199482	ExpressionStatement	qemu_opts_reset ( & empty_opts )	85:16:1332:1360	6199298	1	True				
ANR	6199483	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199484	Callee	qemu_opts_reset		6199298	0					
ANR	6199485	Identifier	qemu_opts_reset		6199298	0					
ANR	6199486	ArgumentList	& empty_opts		6199298	1					
ANR	6199487	Argument	& empty_opts		6199298	0					
ANR	6199488	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199489	UnaryOperator	&		6199298	0					
ANR	6199490	Identifier	empty_opts		6199298	1					
ANR	6199491	ReturnStatement	return 0 ;	87:16:1379:1387	6199298	2	True				
ANR	6199492	PrimaryExpression	0		6199298	0					
ANR	6199493	IfStatement	"if ( ! qemu_opts_parse_noisily ( & empty_opts , optarg , false ) )"		6199298	21					
ANR	6199494	Condition	"! qemu_opts_parse_noisily ( & empty_opts , optarg , false )"	91:16:1421:1472	6199298	0	True				
ANR	6199495	UnaryOperationExpression	"! qemu_opts_parse_noisily ( & empty_opts , optarg , false )"		6199298	0					
ANR	6199496	UnaryOperator	!		6199298	0					
ANR	6199497	CallExpression	"qemu_opts_parse_noisily ( & empty_opts , optarg , false )"		6199298	1					
ANR	6199498	Callee	qemu_opts_parse_noisily		6199298	0					
ANR	6199499	Identifier	qemu_opts_parse_noisily		6199298	0					
ANR	6199500	ArgumentList	& empty_opts		6199298	1					
ANR	6199501	Argument	& empty_opts		6199298	0					
ANR	6199502	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199503	UnaryOperator	&		6199298	0					
ANR	6199504	Identifier	empty_opts		6199298	1					
ANR	6199505	Argument	optarg		6199298	1					
ANR	6199506	Identifier	optarg		6199298	0					
ANR	6199507	Argument	false		6199298	2					
ANR	6199508	Identifier	false		6199298	0					
ANR	6199509	CompoundStatement		89:70:1413:1413	6199298	1					
ANR	6199510	ExpressionStatement	qemu_opts_reset ( & empty_opts )	93:16:1494:1522	6199298	0	True				
ANR	6199511	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199512	Callee	qemu_opts_reset		6199298	0					
ANR	6199513	Identifier	qemu_opts_reset		6199298	0					
ANR	6199514	ArgumentList	& empty_opts		6199298	1					
ANR	6199515	Argument	& empty_opts		6199298	0					
ANR	6199516	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199517	UnaryOperator	&		6199298	0					
ANR	6199518	Identifier	empty_opts		6199298	1					
ANR	6199519	ReturnStatement	return 0 ;	95:16:1541:1549	6199298	1	True				
ANR	6199520	PrimaryExpression	0		6199298	0					
ANR	6199521	BreakStatement	break ;	99:12:1579:1584	6199298	22	True				
ANR	6199522	Label	case 'U' :	101:8:1595:1603	6199298	23	True				
ANR	6199523	ExpressionStatement	force_share = true	103:12:1618:1636	6199298	24	True				
ANR	6199524	AssignmentExpression	force_share = true		6199298	0		=			
ANR	6199525	Identifier	force_share		6199298	0					
ANR	6199526	Identifier	true		6199298	1					
ANR	6199527	BreakStatement	break ;	105:12:1651:1656	6199298	25	True				
ANR	6199528	Label	default :	107:8:1667:1674	6199298	26	True				
ANR	6199529	Identifier	default		6199298	0					
ANR	6199530	ExpressionStatement	qemu_opts_reset ( & empty_opts )	109:12:1689:1717	6199298	27	True				
ANR	6199531	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199532	Callee	qemu_opts_reset		6199298	0					
ANR	6199533	Identifier	qemu_opts_reset		6199298	0					
ANR	6199534	ArgumentList	& empty_opts		6199298	1					
ANR	6199535	Argument	& empty_opts		6199298	0					
ANR	6199536	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199537	UnaryOperator	&		6199298	0					
ANR	6199538	Identifier	empty_opts		6199298	1					
ANR	6199539	ReturnStatement	return qemuio_command_usage ( & open_cmd ) ;	111:12:1732:1770	6199298	28	True				
ANR	6199540	CallExpression	qemuio_command_usage ( & open_cmd )		6199298	0					
ANR	6199541	Callee	qemuio_command_usage		6199298	0					
ANR	6199542	Identifier	qemuio_command_usage		6199298	0					
ANR	6199543	ArgumentList	& open_cmd		6199298	1					
ANR	6199544	Argument	& open_cmd		6199298	0					
ANR	6199545	UnaryOperationExpression	& open_cmd		6199298	0					
ANR	6199546	UnaryOperator	&		6199298	0					
ANR	6199547	Identifier	open_cmd		6199298	1					
ANR	6199548	IfStatement	if ( ! readonly )		6199298	8					
ANR	6199549	Condition	! readonly	119:8:1801:1809	6199298	0	True				
ANR	6199550	UnaryOperationExpression	! readonly		6199298	0					
ANR	6199551	UnaryOperator	!		6199298	0					
ANR	6199552	Identifier	readonly		6199298	1					
ANR	6199553	CompoundStatement		117:19:1750:1750	6199298	1					
ANR	6199554	ExpressionStatement	flags |= BDRV_O_RDWR	121:8:1823:1843	6199298	0	True				
ANR	6199555	AssignmentExpression	flags |= BDRV_O_RDWR		6199298	0		|=			
ANR	6199556	Identifier	flags		6199298	0					
ANR	6199557	Identifier	BDRV_O_RDWR		6199298	1					
ANR	6199558	IfStatement	if ( imageOpts && ( optind == argc - 1 ) )		6199298	9					
ANR	6199559	Condition	imageOpts && ( optind == argc - 1 )	127:8:1863:1895	6199298	0	True				
ANR	6199560	AndExpression	imageOpts && ( optind == argc - 1 )		6199298	0		&&			
ANR	6199561	Identifier	imageOpts		6199298	0					
ANR	6199562	EqualityExpression	optind == argc - 1		6199298	1		==			
ANR	6199563	Identifier	optind		6199298	0					
ANR	6199564	AdditiveExpression	argc - 1		6199298	1		-			
ANR	6199565	Identifier	argc		6199298	0					
ANR	6199566	PrimaryExpression	1		6199298	1					
ANR	6199567	CompoundStatement		125:43:1836:1836	6199298	1					
ANR	6199568	IfStatement	"if ( ! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false ) )"		6199298	0					
ANR	6199569	Condition	"! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"	129:12:1913:1970	6199298	0	True				
ANR	6199570	UnaryOperationExpression	"! qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"		6199298	0					
ANR	6199571	UnaryOperator	!		6199298	0					
ANR	6199572	CallExpression	"qemu_opts_parse_noisily ( & empty_opts , argv [ optind ] , false )"		6199298	1					
ANR	6199573	Callee	qemu_opts_parse_noisily		6199298	0					
ANR	6199574	Identifier	qemu_opts_parse_noisily		6199298	0					
ANR	6199575	ArgumentList	& empty_opts		6199298	1					
ANR	6199576	Argument	& empty_opts		6199298	0					
ANR	6199577	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199578	UnaryOperator	&		6199298	0					
ANR	6199579	Identifier	empty_opts		6199298	1					
ANR	6199580	Argument	argv [ optind ]		6199298	1					
ANR	6199581	ArrayIndexing	argv [ optind ]		6199298	0					
ANR	6199582	Identifier	argv		6199298	0					
ANR	6199583	Identifier	optind		6199298	1					
ANR	6199584	Argument	false		6199298	2					
ANR	6199585	Identifier	false		6199298	0					
ANR	6199586	CompoundStatement		127:72:1911:1911	6199298	1					
ANR	6199587	ExpressionStatement	qemu_opts_reset ( & empty_opts )	131:12:1988:2016	6199298	0	True				
ANR	6199588	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199589	Callee	qemu_opts_reset		6199298	0					
ANR	6199590	Identifier	qemu_opts_reset		6199298	0					
ANR	6199591	ArgumentList	& empty_opts		6199298	1					
ANR	6199592	Argument	& empty_opts		6199298	0					
ANR	6199593	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199594	UnaryOperator	&		6199298	0					
ANR	6199595	Identifier	empty_opts		6199298	1					
ANR	6199596	ReturnStatement	return 0 ;	133:12:2031:2039	6199298	1	True				
ANR	6199597	PrimaryExpression	0		6199298	0					
ANR	6199598	ExpressionStatement	optind ++	137:8:2061:2069	6199298	1	True				
ANR	6199599	PostIncDecOperationExpression	optind ++		6199298	0					
ANR	6199600	Identifier	optind		6199298	0					
ANR	6199601	IncDec	++		6199298	1					
ANR	6199602	ExpressionStatement	"qopts = qemu_opts_find ( & empty_opts , NULL )"	143:4:2085:2126	6199298	10	True				
ANR	6199603	AssignmentExpression	"qopts = qemu_opts_find ( & empty_opts , NULL )"		6199298	0		=			
ANR	6199604	Identifier	qopts		6199298	0					
ANR	6199605	CallExpression	"qemu_opts_find ( & empty_opts , NULL )"		6199298	1					
ANR	6199606	Callee	qemu_opts_find		6199298	0					
ANR	6199607	Identifier	qemu_opts_find		6199298	0					
ANR	6199608	ArgumentList	& empty_opts		6199298	1					
ANR	6199609	Argument	& empty_opts		6199298	0					
ANR	6199610	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199611	UnaryOperator	&		6199298	0					
ANR	6199612	Identifier	empty_opts		6199298	1					
ANR	6199613	Argument	NULL		6199298	1					
ANR	6199614	Identifier	NULL		6199298	0					
ANR	6199615	ExpressionStatement	"opts = qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"	145:4:2133:2186	6199298	11	True				
ANR	6199616	AssignmentExpression	"opts = qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"		6199298	0		=			
ANR	6199617	Identifier	opts		6199298	0					
ANR	6199618	ConditionalExpression	"qopts ? qemu_opts_to_qdict ( qopts , NULL ) : NULL"		6199298	1					
ANR	6199619	Condition	qopts		6199298	0					
ANR	6199620	Identifier	qopts		6199298	0					
ANR	6199621	CallExpression	"qemu_opts_to_qdict ( qopts , NULL )"		6199298	1					
ANR	6199622	Callee	qemu_opts_to_qdict		6199298	0					
ANR	6199623	Identifier	qemu_opts_to_qdict		6199298	0					
ANR	6199624	ArgumentList	qopts		6199298	1					
ANR	6199625	Argument	qopts		6199298	0					
ANR	6199626	Identifier	qopts		6199298	0					
ANR	6199627	Argument	NULL		6199298	1					
ANR	6199628	Identifier	NULL		6199298	0					
ANR	6199629	Identifier	NULL		6199298	2					
ANR	6199630	ExpressionStatement	qemu_opts_reset ( & empty_opts )	147:4:2193:2221	6199298	12	True				
ANR	6199631	CallExpression	qemu_opts_reset ( & empty_opts )		6199298	0					
ANR	6199632	Callee	qemu_opts_reset		6199298	0					
ANR	6199633	Identifier	qemu_opts_reset		6199298	0					
ANR	6199634	ArgumentList	& empty_opts		6199298	1					
ANR	6199635	Argument	& empty_opts		6199298	0					
ANR	6199636	UnaryOperationExpression	& empty_opts		6199298	0					
ANR	6199637	UnaryOperator	&		6199298	0					
ANR	6199638	Identifier	empty_opts		6199298	1					
ANR	6199639	IfStatement	if ( optind == argc - 1 )		6199298	13					
ANR	6199640	Condition	optind == argc - 1	151:8:2234:2251	6199298	0	True				
ANR	6199641	EqualityExpression	optind == argc - 1		6199298	0		==			
ANR	6199642	Identifier	optind		6199298	0					
ANR	6199643	AdditiveExpression	argc - 1		6199298	1		-			
ANR	6199644	Identifier	argc		6199298	0					
ANR	6199645	PrimaryExpression	1		6199298	1					
ANR	6199646	CompoundStatement		149:28:2192:2192	6199298	1					
ANR	6199647	ExpressionStatement	"openfile ( argv [ optind ] , flags , writethrough , force_share , opts )"	153:8:2265:2327	6199298	0	True				
ANR	6199648	CallExpression	"openfile ( argv [ optind ] , flags , writethrough , force_share , opts )"		6199298	0					
ANR	6199649	Callee	openfile		6199298	0					
ANR	6199650	Identifier	openfile		6199298	0					
ANR	6199651	ArgumentList	argv [ optind ]		6199298	1					
ANR	6199652	Argument	argv [ optind ]		6199298	0					
ANR	6199653	ArrayIndexing	argv [ optind ]		6199298	0					
ANR	6199654	Identifier	argv		6199298	0					
ANR	6199655	Identifier	optind		6199298	1					
ANR	6199656	Argument	flags		6199298	1					
ANR	6199657	Identifier	flags		6199298	0					
ANR	6199658	Argument	writethrough		6199298	2					
ANR	6199659	Identifier	writethrough		6199298	0					
ANR	6199660	Argument	force_share		6199298	3					
ANR	6199661	Identifier	force_share		6199298	0					
ANR	6199662	Argument	opts		6199298	4					
ANR	6199663	Identifier	opts		6199298	0					
ANR	6199664	ElseStatement	else		6199298	0					
ANR	6199665	IfStatement	if ( optind == argc )		6199298	0					
ANR	6199666	Condition	optind == argc	155:15:2345:2358	6199298	0	True				
ANR	6199667	EqualityExpression	optind == argc		6199298	0		==			
ANR	6199668	Identifier	optind		6199298	0					
ANR	6199669	Identifier	argc		6199298	1					
ANR	6199670	CompoundStatement		153:31:2299:2299	6199298	1					
ANR	6199671	ExpressionStatement	"openfile ( NULL , flags , writethrough , force_share , opts )"	157:8:2372:2426	6199298	0	True				
ANR	6199672	CallExpression	"openfile ( NULL , flags , writethrough , force_share , opts )"		6199298	0					
ANR	6199673	Callee	openfile		6199298	0					
ANR	6199674	Identifier	openfile		6199298	0					
ANR	6199675	ArgumentList	NULL		6199298	1					
ANR	6199676	Argument	NULL		6199298	0					
ANR	6199677	Identifier	NULL		6199298	0					
ANR	6199678	Argument	flags		6199298	1					
ANR	6199679	Identifier	flags		6199298	0					
ANR	6199680	Argument	writethrough		6199298	2					
ANR	6199681	Identifier	writethrough		6199298	0					
ANR	6199682	Argument	force_share		6199298	3					
ANR	6199683	Identifier	force_share		6199298	0					
ANR	6199684	Argument	opts		6199298	4					
ANR	6199685	Identifier	opts		6199298	0					
ANR	6199686	ElseStatement	else		6199298	0					
ANR	6199687	CompoundStatement		157:11:2378:2378	6199298	0					
ANR	6199688	ExpressionStatement	QDECREF ( opts )	161:8:2451:2464	6199298	0	True				
ANR	6199689	CallExpression	QDECREF ( opts )		6199298	0					
ANR	6199690	Callee	QDECREF		6199298	0					
ANR	6199691	Identifier	QDECREF		6199298	0					
ANR	6199692	ArgumentList	opts		6199298	1					
ANR	6199693	Argument	opts		6199298	0					
ANR	6199694	Identifier	opts		6199298	0					
ANR	6199695	ExpressionStatement	qemuio_command_usage ( & open_cmd )	163:8:2475:2506	6199298	1	True				
ANR	6199696	CallExpression	qemuio_command_usage ( & open_cmd )		6199298	0					
ANR	6199697	Callee	qemuio_command_usage		6199298	0					
ANR	6199698	Identifier	qemuio_command_usage		6199298	0					
ANR	6199699	ArgumentList	& open_cmd		6199298	1					
ANR	6199700	Argument	& open_cmd		6199298	0					
ANR	6199701	UnaryOperationExpression	& open_cmd		6199298	0					
ANR	6199702	UnaryOperator	&		6199298	0					
ANR	6199703	Identifier	open_cmd		6199298	1					
ANR	6199704	ReturnStatement	return 0 ;	167:4:2520:2528	6199298	14	True				
ANR	6199705	PrimaryExpression	0		6199298	0					
ANR	6199706	ReturnType	static int		6199298	1					
ANR	6199707	Identifier	open_f		6199298	2					
ANR	6199708	ParameterList	"BlockBackend * blk , int argc , char * * argv"		6199298	3					
ANR	6199709	Parameter	BlockBackend * blk	1:18:18:34	6199298	0	True				
ANR	6199710	ParameterType	BlockBackend *		6199298	0					
ANR	6199711	Identifier	blk		6199298	1					
ANR	6199712	Parameter	int argc	1:37:37:44	6199298	1	True				
ANR	6199713	ParameterType	int		6199298	0					
ANR	6199714	Identifier	argc		6199298	1					
ANR	6199715	Parameter	char * * argv	1:47:47:57	6199298	2	True				
ANR	6199716	ParameterType	char * *		6199298	0					
ANR	6199717	Identifier	argv		6199298	1					
ANR	6199718	CFGEntryNode	ENTRY		6199298		True				
ANR	6199719	CFGExitNode	EXIT		6199298		True				
ANR	6199720	Symbol	BDRV_O_UNMAP		6199298						
ANR	6199721	Symbol	* optind		6199298						
ANR	6199722	Symbol	optind		6199298						
ANR	6199723	Symbol	flags		6199298						
ANR	6199724	Symbol	optarg		6199298						
ANR	6199725	Symbol	* argv		6199298						
ANR	6199726	Symbol	bdrv_parse_cache_mode		6199298						
ANR	6199727	Symbol	argv		6199298						
ANR	6199728	Symbol	bdrv_parse_discard_flags		6199298						
ANR	6199729	Symbol	readonly		6199298						
ANR	6199730	Symbol	opts		6199298						
ANR	6199731	Symbol	getopt		6199298						
ANR	6199732	Symbol	qemu_opts_find		6199298						
ANR	6199733	Symbol	qemu_opts_to_qdict		6199298						
ANR	6199734	Symbol	& flags		6199298						
ANR	6199735	Symbol	& open_cmd		6199298						
ANR	6199736	Symbol	& empty_opts		6199298						
ANR	6199737	Symbol	blk		6199298						
ANR	6199738	Symbol	argc		6199298						
ANR	6199739	Symbol	c		6199298						
ANR	6199740	Symbol	BDRV_O_SNAPSHOT		6199298						
ANR	6199741	Symbol	NULL		6199298						
ANR	6199742	Symbol	false		6199298						
ANR	6199743	Symbol	writethrough		6199298						
ANR	6199744	Symbol	BDRV_O_NATIVE_AIO		6199298						
ANR	6199745	Symbol	BDRV_O_NOCACHE		6199298						
ANR	6199746	Symbol	qemuio_command_usage		6199298						
ANR	6199747	Symbol	& writethrough		6199298						
ANR	6199748	Symbol	force_share		6199298						
ANR	6199749	Symbol	true		6199298						
ANR	6199750	Symbol	qopts		6199298						
ANR	6199751	Symbol	imageOpts		6199298						
ANR	6199752	Symbol	qemu_opts_parse_noisily		6199298						
ANR	6199753	Symbol	BDRV_O_RDWR		6199298						
