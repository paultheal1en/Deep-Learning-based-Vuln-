command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8576755	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tta_decode_frame_1.c								
ANR	8576756	Function	tta_decode_frame	1:0:0:4761							
ANR	8576757	FunctionDef	"tta_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		8576756	0					
ANR	8576758	CompoundStatement		7:0:115:4761	8576756	0					
ANR	8576759	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:122:154	8576756	0	True				
ANR	8576760	IdentifierDecl	* buf = avpkt -> data		8576756	0					
ANR	8576761	IdentifierDeclType	const uint8_t *		8576756	0					
ANR	8576762	Identifier	buf		8576756	1					
ANR	8576763	AssignmentExpression	* buf = avpkt -> data		8576756	2		=			
ANR	8576764	Identifier	buf		8576756	0					
ANR	8576765	PtrMemberAccess	avpkt -> data		8576756	1					
ANR	8576766	Identifier	avpkt		8576756	0					
ANR	8576767	Identifier	data		8576756	1					
ANR	8576768	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:161:187	8576756	1	True				
ANR	8576769	IdentifierDecl	buf_size = avpkt -> size		8576756	0					
ANR	8576770	IdentifierDeclType	int		8576756	0					
ANR	8576771	Identifier	buf_size		8576756	1					
ANR	8576772	AssignmentExpression	buf_size = avpkt -> size		8576756	2		=			
ANR	8576773	Identifier	buf_size		8576756	0					
ANR	8576774	PtrMemberAccess	avpkt -> size		8576756	1					
ANR	8576775	Identifier	avpkt		8576756	0					
ANR	8576776	Identifier	size		8576756	1					
ANR	8576777	IdentifierDeclStatement	TTAContext * s = avctx -> priv_data ;	13:4:194:226	8576756	2	True				
ANR	8576778	IdentifierDecl	* s = avctx -> priv_data		8576756	0					
ANR	8576779	IdentifierDeclType	TTAContext *		8576756	0					
ANR	8576780	Identifier	s		8576756	1					
ANR	8576781	AssignmentExpression	* s = avctx -> priv_data		8576756	2		=			
ANR	8576782	Identifier	s		8576756	0					
ANR	8576783	PtrMemberAccess	avctx -> priv_data		8576756	1					
ANR	8576784	Identifier	avctx		8576756	0					
ANR	8576785	Identifier	priv_data		8576756	1					
ANR	8576786	IdentifierDeclStatement	int i ;	15:4:233:238	8576756	3	True				
ANR	8576787	IdentifierDecl	i		8576756	0					
ANR	8576788	IdentifierDeclType	int		8576756	0					
ANR	8576789	Identifier	i		8576756	1					
ANR	8576790	ExpressionStatement	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"	19:4:247:285	8576756	4	True				
ANR	8576791	CallExpression	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"		8576756	0					
ANR	8576792	Callee	init_get_bits		8576756	0					
ANR	8576793	Identifier	init_get_bits		8576756	0					
ANR	8576794	ArgumentList	& s -> gb		8576756	1					
ANR	8576795	Argument	& s -> gb		8576756	0					
ANR	8576796	UnaryOperationExpression	& s -> gb		8576756	0					
ANR	8576797	UnaryOperator	&		8576756	0					
ANR	8576798	PtrMemberAccess	s -> gb		8576756	1					
ANR	8576799	Identifier	s		8576756	0					
ANR	8576800	Identifier	gb		8576756	1					
ANR	8576801	Argument	buf		8576756	1					
ANR	8576802	Identifier	buf		8576756	0					
ANR	8576803	Argument	buf_size * 8		8576756	2					
ANR	8576804	MultiplicativeExpression	buf_size * 8		8576756	0		*			
ANR	8576805	Identifier	buf_size		8576756	0					
ANR	8576806	PrimaryExpression	8		8576756	1					
ANR	8576807	CompoundStatement		25:8:362:372	8576756	5					
ANR	8576808	IdentifierDeclStatement	int32_t predictors [ s -> channels ] ;	23:8:303:334	8576756	0	True				
ANR	8576809	IdentifierDecl	predictors [ s -> channels ]		8576756	0					
ANR	8576810	IdentifierDeclType	int32_t [ s -> channels ]		8576756	0					
ANR	8576811	Identifier	predictors		8576756	1					
ANR	8576812	PtrMemberAccess	s -> channels		8576756	2					
ANR	8576813	Identifier	s		8576756	0					
ANR	8576814	Identifier	channels		8576756	1					
ANR	8576815	IdentifierDeclStatement	TTAFilter filters [ s -> channels ] ;	25:8:345:375	8576756	1	True				
ANR	8576816	IdentifierDecl	filters [ s -> channels ]		8576756	0					
ANR	8576817	IdentifierDeclType	TTAFilter [ s -> channels ]		8576756	0					
ANR	8576818	Identifier	filters		8576756	1					
ANR	8576819	PtrMemberAccess	s -> channels		8576756	2					
ANR	8576820	Identifier	s		8576756	0					
ANR	8576821	Identifier	channels		8576756	1					
ANR	8576822	IdentifierDeclStatement	TTARice rices [ s -> channels ] ;	27:8:386:412	8576756	2	True				
ANR	8576823	IdentifierDecl	rices [ s -> channels ]		8576756	0					
ANR	8576824	IdentifierDeclType	TTARice [ s -> channels ]		8576756	0					
ANR	8576825	Identifier	rices		8576756	1					
ANR	8576826	PtrMemberAccess	s -> channels		8576756	2					
ANR	8576827	Identifier	s		8576756	0					
ANR	8576828	Identifier	channels		8576756	1					
ANR	8576829	IdentifierDeclStatement	"int cur_chan = 0 , framelen = s -> frame_length ;"	29:8:423:467	8576756	3	True				
ANR	8576830	IdentifierDecl	cur_chan = 0		8576756	0					
ANR	8576831	IdentifierDeclType	int		8576756	0					
ANR	8576832	Identifier	cur_chan		8576756	1					
ANR	8576833	AssignmentExpression	cur_chan = 0		8576756	2		=			
ANR	8576834	Identifier	cur_chan		8576756	0					
ANR	8576835	PrimaryExpression	0		8576756	1					
ANR	8576836	IdentifierDecl	framelen = s -> frame_length		8576756	1					
ANR	8576837	IdentifierDeclType	int		8576756	0					
ANR	8576838	Identifier	framelen		8576756	1					
ANR	8576839	AssignmentExpression	framelen = s -> frame_length		8576756	2		=			
ANR	8576840	Identifier	framelen		8576756	0					
ANR	8576841	PtrMemberAccess	s -> frame_length		8576756	1					
ANR	8576842	Identifier	s		8576756	0					
ANR	8576843	Identifier	frame_length		8576756	1					
ANR	8576844	IdentifierDeclStatement	int32_t * p ;	31:8:478:488	8576756	4	True				
ANR	8576845	IdentifierDecl	* p		8576756	0					
ANR	8576846	IdentifierDeclType	int32_t *		8576756	0					
ANR	8576847	Identifier	p		8576756	1					
ANR	8576848	ExpressionStatement	s -> total_frames --	37:8:528:545	8576756	5	True				
ANR	8576849	PostIncDecOperationExpression	s -> total_frames --		8576756	0					
ANR	8576850	PtrMemberAccess	s -> total_frames		8576756	0					
ANR	8576851	Identifier	s		8576756	0					
ANR	8576852	Identifier	total_frames		8576756	1					
ANR	8576853	IncDec	--		8576756	1					
ANR	8576854	IfStatement	if ( ! s -> total_frames && s -> last_frame_length )		8576756	6					
ANR	8576855	Condition	! s -> total_frames && s -> last_frame_length	39:12:560:599	8576756	0	True				
ANR	8576856	AndExpression	! s -> total_frames && s -> last_frame_length		8576756	0		&&			
ANR	8576857	UnaryOperationExpression	! s -> total_frames		8576756	0					
ANR	8576858	UnaryOperator	!		8576756	0					
ANR	8576859	PtrMemberAccess	s -> total_frames		8576756	1					
ANR	8576860	Identifier	s		8576756	0					
ANR	8576861	Identifier	total_frames		8576756	1					
ANR	8576862	PtrMemberAccess	s -> last_frame_length		8576756	1					
ANR	8576863	Identifier	s		8576756	0					
ANR	8576864	Identifier	last_frame_length		8576756	1					
ANR	8576865	ExpressionStatement	framelen = s -> last_frame_length	41:12:615:646	8576756	1	True				
ANR	8576866	AssignmentExpression	framelen = s -> last_frame_length		8576756	0		=			
ANR	8576867	Identifier	framelen		8576756	0					
ANR	8576868	PtrMemberAccess	s -> last_frame_length		8576756	1					
ANR	8576869	Identifier	s		8576756	0					
ANR	8576870	Identifier	last_frame_length		8576756	1					
ANR	8576871	ForStatement	for ( i = 0 ; i < s -> channels ; i ++ )		8576756	7					
ANR	8576872	ForInit	i = 0 ;	47:13:700:705	8576756	0	True				
ANR	8576873	AssignmentExpression	i = 0		8576756	0		=			
ANR	8576874	Identifier	i		8576756	0					
ANR	8576875	PrimaryExpression	0		8576756	1					
ANR	8576876	Condition	i < s -> channels	47:20:707:721	8576756	1	True				
ANR	8576877	RelationalExpression	i < s -> channels		8576756	0		<			
ANR	8576878	Identifier	i		8576756	0					
ANR	8576879	PtrMemberAccess	s -> channels		8576756	1					
ANR	8576880	Identifier	s		8576756	0					
ANR	8576881	Identifier	channels		8576756	1					
ANR	8576882	PostIncDecOperationExpression	i ++	47:37:724:726	8576756	2	True				
ANR	8576883	Identifier	i		8576756	0					
ANR	8576884	IncDec	++		8576756	1					
ANR	8576885	CompoundStatement		41:42:613:613	8576756	3					
ANR	8576886	ExpressionStatement	predictors [ i ] = 0	49:12:744:761	8576756	0	True				
ANR	8576887	AssignmentExpression	predictors [ i ] = 0		8576756	0		=			
ANR	8576888	ArrayIndexing	predictors [ i ]		8576756	0					
ANR	8576889	Identifier	predictors		8576756	0					
ANR	8576890	Identifier	i		8576756	1					
ANR	8576891	PrimaryExpression	0		8576756	1					
ANR	8576892	ExpressionStatement	"ttafilter_init ( & ( filters [ i ] ) , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"	51:12:776:869	8576756	1	True				
ANR	8576893	CallExpression	"ttafilter_init ( & ( filters [ i ] ) , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"		8576756	0					
ANR	8576894	Callee	ttafilter_init		8576756	0					
ANR	8576895	Identifier	ttafilter_init		8576756	0					
ANR	8576896	ArgumentList	& ( filters [ i ] )		8576756	1					
ANR	8576897	Argument	& ( filters [ i ] )		8576756	0					
ANR	8576898	UnaryOperationExpression	& ( filters [ i ] )		8576756	0					
ANR	8576899	UnaryOperator	&		8576756	0					
ANR	8576900	ArrayIndexing	filters [ i ]		8576756	1					
ANR	8576901	Identifier	filters		8576756	0					
ANR	8576902	Identifier	i		8576756	1					
ANR	8576903	Argument	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8576756	1					
ANR	8576904	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8576756	0					
ANR	8576905	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8576756	0					
ANR	8576906	Identifier	ttafilter_configs		8576756	0					
ANR	8576907	AdditiveExpression	s -> bps - 1		8576756	1		-			
ANR	8576908	PtrMemberAccess	s -> bps		8576756	0					
ANR	8576909	Identifier	s		8576756	0					
ANR	8576910	Identifier	bps		8576756	1					
ANR	8576911	PrimaryExpression	1		8576756	1					
ANR	8576912	PrimaryExpression	0		8576756	1					
ANR	8576913	Argument	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8576756	2					
ANR	8576914	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8576756	0					
ANR	8576915	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8576756	0					
ANR	8576916	Identifier	ttafilter_configs		8576756	0					
ANR	8576917	AdditiveExpression	s -> bps - 1		8576756	1		-			
ANR	8576918	PtrMemberAccess	s -> bps		8576756	0					
ANR	8576919	Identifier	s		8576756	0					
ANR	8576920	Identifier	bps		8576756	1					
ANR	8576921	PrimaryExpression	1		8576756	1					
ANR	8576922	PrimaryExpression	1		8576756	1					
ANR	8576923	ExpressionStatement	"rice_init ( & ( rices [ i ] ) , 10 , 10 )"	53:12:884:914	8576756	2	True				
ANR	8576924	CallExpression	"rice_init ( & ( rices [ i ] ) , 10 , 10 )"		8576756	0					
ANR	8576925	Callee	rice_init		8576756	0					
ANR	8576926	Identifier	rice_init		8576756	0					
ANR	8576927	ArgumentList	& ( rices [ i ] )		8576756	1					
ANR	8576928	Argument	& ( rices [ i ] )		8576756	0					
ANR	8576929	UnaryOperationExpression	& ( rices [ i ] )		8576756	0					
ANR	8576930	UnaryOperator	&		8576756	0					
ANR	8576931	ArrayIndexing	rices [ i ]		8576756	1					
ANR	8576932	Identifier	rices		8576756	0					
ANR	8576933	Identifier	i		8576756	1					
ANR	8576934	Argument	10		8576756	1					
ANR	8576935	PrimaryExpression	10		8576756	0					
ANR	8576936	Argument	10		8576756	2					
ANR	8576937	PrimaryExpression	10		8576756	0					
ANR	8576938	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8576756	8					
ANR	8576939	ForInit	p = s -> decode_buffer ;	59:13:943:963	8576756	0	True				
ANR	8576940	AssignmentExpression	p = s -> decode_buffer		8576756	0		=			
ANR	8576941	Identifier	p		8576756	0					
ANR	8576942	PtrMemberAccess	s -> decode_buffer		8576756	1					
ANR	8576943	Identifier	s		8576756	0					
ANR	8576944	Identifier	decode_buffer		8576756	1					
ANR	8576945	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	59:35:965:1011	8576756	1	True				
ANR	8576946	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8576756	0		<			
ANR	8576947	Identifier	p		8576756	0					
ANR	8576948	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8576756	1		+			
ANR	8576949	PtrMemberAccess	s -> decode_buffer		8576756	0					
ANR	8576950	Identifier	s		8576756	0					
ANR	8576951	Identifier	decode_buffer		8576756	1					
ANR	8576952	MultiplicativeExpression	framelen * s -> channels		8576756	1		*			
ANR	8576953	Identifier	framelen		8576756	0					
ANR	8576954	PtrMemberAccess	s -> channels		8576756	1					
ANR	8576955	Identifier	s		8576756	0					
ANR	8576956	Identifier	channels		8576756	1					
ANR	8576957	PostIncDecOperationExpression	p ++	59:84:1014:1016	8576756	2	True				
ANR	8576958	Identifier	p		8576756	0					
ANR	8576959	IncDec	++		8576756	1					
ANR	8576960	CompoundStatement		63:12:1120:1133	8576756	3					
ANR	8576961	IdentifierDeclStatement	int32_t * predictor = & ( predictors [ cur_chan ] ) ;	61:12:1034:1078	8576756	0	True				
ANR	8576962	IdentifierDecl	* predictor = & ( predictors [ cur_chan ] )		8576756	0					
ANR	8576963	IdentifierDeclType	int32_t *		8576756	0					
ANR	8576964	Identifier	predictor		8576756	1					
ANR	8576965	AssignmentExpression	* predictor = & ( predictors [ cur_chan ] )		8576756	2		=			
ANR	8576966	Identifier	predictor		8576756	0					
ANR	8576967	UnaryOperationExpression	& ( predictors [ cur_chan ] )		8576756	1					
ANR	8576968	UnaryOperator	&		8576756	0					
ANR	8576969	ArrayIndexing	predictors [ cur_chan ]		8576756	1					
ANR	8576970	Identifier	predictors		8576756	0					
ANR	8576971	Identifier	cur_chan		8576756	1					
ANR	8576972	IdentifierDeclStatement	TTAFilter * filter = & ( filters [ cur_chan ] ) ;	63:12:1093:1133	8576756	1	True				
ANR	8576973	IdentifierDecl	* filter = & ( filters [ cur_chan ] )		8576756	0					
ANR	8576974	IdentifierDeclType	TTAFilter *		8576756	0					
ANR	8576975	Identifier	filter		8576756	1					
ANR	8576976	AssignmentExpression	* filter = & ( filters [ cur_chan ] )		8576756	2		=			
ANR	8576977	Identifier	filter		8576756	0					
ANR	8576978	UnaryOperationExpression	& ( filters [ cur_chan ] )		8576756	1					
ANR	8576979	UnaryOperator	&		8576756	0					
ANR	8576980	ArrayIndexing	filters [ cur_chan ]		8576756	1					
ANR	8576981	Identifier	filters		8576756	0					
ANR	8576982	Identifier	cur_chan		8576756	1					
ANR	8576983	IdentifierDeclStatement	TTARice * rice = & ( rices [ cur_chan ] ) ;	65:12:1148:1182	8576756	2	True				
ANR	8576984	IdentifierDecl	* rice = & ( rices [ cur_chan ] )		8576756	0					
ANR	8576985	IdentifierDeclType	TTARice *		8576756	0					
ANR	8576986	Identifier	rice		8576756	1					
ANR	8576987	AssignmentExpression	* rice = & ( rices [ cur_chan ] )		8576756	2		=			
ANR	8576988	Identifier	rice		8576756	0					
ANR	8576989	UnaryOperationExpression	& ( rices [ cur_chan ] )		8576756	1					
ANR	8576990	UnaryOperator	&		8576756	0					
ANR	8576991	ArrayIndexing	rices [ cur_chan ]		8576756	1					
ANR	8576992	Identifier	rices		8576756	0					
ANR	8576993	Identifier	cur_chan		8576756	1					
ANR	8576994	IdentifierDeclStatement	"uint32_t unary , depth , k ;"	67:12:1197:1221	8576756	3	True				
ANR	8576995	IdentifierDecl	unary		8576756	0					
ANR	8576996	IdentifierDeclType	uint32_t		8576756	0					
ANR	8576997	Identifier	unary		8576756	1					
ANR	8576998	IdentifierDecl	depth		8576756	1					
ANR	8576999	IdentifierDeclType	uint32_t		8576756	0					
ANR	8577000	Identifier	depth		8576756	1					
ANR	8577001	IdentifierDecl	k		8576756	2					
ANR	8577002	IdentifierDeclType	uint32_t		8576756	0					
ANR	8577003	Identifier	k		8576756	1					
ANR	8577004	IdentifierDeclStatement	int32_t value ;	69:12:1236:1249	8576756	4	True				
ANR	8577005	IdentifierDecl	value		8576756	0					
ANR	8577006	IdentifierDeclType	int32_t		8576756	0					
ANR	8577007	Identifier	value		8576756	1					
ANR	8577008	ExpressionStatement	unary = tta_get_unary ( & s -> gb )	73:12:1266:1295	8576756	5	True				
ANR	8577009	AssignmentExpression	unary = tta_get_unary ( & s -> gb )		8576756	0		=			
ANR	8577010	Identifier	unary		8576756	0					
ANR	8577011	CallExpression	tta_get_unary ( & s -> gb )		8576756	1					
ANR	8577012	Callee	tta_get_unary		8576756	0					
ANR	8577013	Identifier	tta_get_unary		8576756	0					
ANR	8577014	ArgumentList	& s -> gb		8576756	1					
ANR	8577015	Argument	& s -> gb		8576756	0					
ANR	8577016	UnaryOperationExpression	& s -> gb		8576756	0					
ANR	8577017	UnaryOperator	&		8576756	0					
ANR	8577018	PtrMemberAccess	s -> gb		8576756	1					
ANR	8577019	Identifier	s		8576756	0					
ANR	8577020	Identifier	gb		8576756	1					
ANR	8577021	IfStatement	if ( unary == 0 )		8576756	6					
ANR	8577022	Condition	unary == 0	77:16:1316:1325	8576756	0	True				
ANR	8577023	EqualityExpression	unary == 0		8576756	0		==			
ANR	8577024	Identifier	unary		8576756	0					
ANR	8577025	PrimaryExpression	0		8576756	1					
ANR	8577026	CompoundStatement		71:28:1212:1212	8576756	1					
ANR	8577027	ExpressionStatement	depth = 0	79:16:1347:1356	8576756	0	True				
ANR	8577028	AssignmentExpression	depth = 0		8576756	0		=			
ANR	8577029	Identifier	depth		8576756	0					
ANR	8577030	PrimaryExpression	0		8576756	1					
ANR	8577031	ExpressionStatement	k = rice -> k0	81:16:1375:1387	8576756	1	True				
ANR	8577032	AssignmentExpression	k = rice -> k0		8576756	0		=			
ANR	8577033	Identifier	k		8576756	0					
ANR	8577034	PtrMemberAccess	rice -> k0		8576756	1					
ANR	8577035	Identifier	rice		8576756	0					
ANR	8577036	Identifier	k0		8576756	1					
ANR	8577037	ElseStatement	else		8576756	0					
ANR	8577038	CompoundStatement		77:19:1293:1293	8576756	0					
ANR	8577039	ExpressionStatement	depth = 1	85:16:1428:1437	8576756	0	True				
ANR	8577040	AssignmentExpression	depth = 1		8576756	0		=			
ANR	8577041	Identifier	depth		8576756	0					
ANR	8577042	PrimaryExpression	1		8576756	1					
ANR	8577043	ExpressionStatement	k = rice -> k1	87:16:1456:1468	8576756	1	True				
ANR	8577044	AssignmentExpression	k = rice -> k1		8576756	0		=			
ANR	8577045	Identifier	k		8576756	0					
ANR	8577046	PtrMemberAccess	rice -> k1		8576756	1					
ANR	8577047	Identifier	rice		8576756	0					
ANR	8577048	Identifier	k1		8576756	1					
ANR	8577049	ExpressionStatement	unary --	89:16:1487:1494	8576756	2	True				
ANR	8577050	PostIncDecOperationExpression	unary --		8576756	0					
ANR	8577051	Identifier	unary		8576756	0					
ANR	8577052	IncDec	--		8576756	1					
ANR	8577053	IfStatement	if ( k )		8576756	7					
ANR	8577054	Condition	k	95:16:1530:1530	8576756	0	True				
ANR	8577055	Identifier	k		8576756	0					
ANR	8577056	ExpressionStatement	"value = ( unary << k ) + get_bits ( & s -> gb , k )"	97:16:1550:1592	8576756	1	True				
ANR	8577057	AssignmentExpression	"value = ( unary << k ) + get_bits ( & s -> gb , k )"		8576756	0		=			
ANR	8577058	Identifier	value		8576756	0					
ANR	8577059	AdditiveExpression	"( unary << k ) + get_bits ( & s -> gb , k )"		8576756	1		+			
ANR	8577060	ShiftExpression	unary << k		8576756	0		<<			
ANR	8577061	Identifier	unary		8576756	0					
ANR	8577062	Identifier	k		8576756	1					
ANR	8577063	CallExpression	"get_bits ( & s -> gb , k )"		8576756	1					
ANR	8577064	Callee	get_bits		8576756	0					
ANR	8577065	Identifier	get_bits		8576756	0					
ANR	8577066	ArgumentList	& s -> gb		8576756	1					
ANR	8577067	Argument	& s -> gb		8576756	0					
ANR	8577068	UnaryOperationExpression	& s -> gb		8576756	0					
ANR	8577069	UnaryOperator	&		8576756	0					
ANR	8577070	PtrMemberAccess	s -> gb		8576756	1					
ANR	8577071	Identifier	s		8576756	0					
ANR	8577072	Identifier	gb		8576756	1					
ANR	8577073	Argument	k		8576756	1					
ANR	8577074	Identifier	k		8576756	0					
ANR	8577075	ElseStatement	else		8576756	0					
ANR	8577076	ExpressionStatement	value = unary	101:16:1629:1642	8576756	0	True				
ANR	8577077	AssignmentExpression	value = unary		8576756	0		=			
ANR	8577078	Identifier	value		8576756	0					
ANR	8577079	Identifier	unary		8576756	1					
ANR	8577080	SwitchStatement	switch ( depth )		8576756	8					
ANR	8577081	Condition	depth	107:20:1715:1719	8576756	0	True				
ANR	8577082	Identifier	depth		8576756	0					
ANR	8577083	CompoundStatement		101:27:1606:1606	8576756	1					
ANR	8577084	Label	case 1 :	109:12:1737:1743	8576756	0	True				
ANR	8577085	ExpressionStatement	rice -> sum1 += value - ( rice -> sum1 >> 4 )	111:16:1762:1801	8576756	1	True				
ANR	8577086	AssignmentExpression	rice -> sum1 += value - ( rice -> sum1 >> 4 )		8576756	0		+=			
ANR	8577087	PtrMemberAccess	rice -> sum1		8576756	0					
ANR	8577088	Identifier	rice		8576756	0					
ANR	8577089	Identifier	sum1		8576756	1					
ANR	8577090	AdditiveExpression	value - ( rice -> sum1 >> 4 )		8576756	1		-			
ANR	8577091	Identifier	value		8576756	0					
ANR	8577092	ShiftExpression	rice -> sum1 >> 4		8576756	1		>>			
ANR	8577093	PtrMemberAccess	rice -> sum1		8576756	0					
ANR	8577094	Identifier	rice		8576756	0					
ANR	8577095	Identifier	sum1		8576756	1					
ANR	8577096	PrimaryExpression	4		8576756	1					
ANR	8577097	IfStatement	if ( rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ] )		8576756	2					
ANR	8577098	Condition	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]	113:20:1824:1870	8576756	0	True				
ANR	8577099	AndExpression	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]		8576756	0		&&			
ANR	8577100	RelationalExpression	rice -> k1 > 0		8576756	0		>			
ANR	8577101	PtrMemberAccess	rice -> k1		8576756	0					
ANR	8577102	Identifier	rice		8576756	0					
ANR	8577103	Identifier	k1		8576756	1					
ANR	8577104	PrimaryExpression	0		8576756	1					
ANR	8577105	RelationalExpression	rice -> sum1 < shift_16 [ rice -> k1 ]		8576756	1		<			
ANR	8577106	PtrMemberAccess	rice -> sum1		8576756	0					
ANR	8577107	Identifier	rice		8576756	0					
ANR	8577108	Identifier	sum1		8576756	1					
ANR	8577109	ArrayIndexing	shift_16 [ rice -> k1 ]		8576756	1					
ANR	8577110	Identifier	shift_16		8576756	0					
ANR	8577111	PtrMemberAccess	rice -> k1		8576756	1					
ANR	8577112	Identifier	rice		8576756	0					
ANR	8577113	Identifier	k1		8576756	1					
ANR	8577114	ExpressionStatement	rice -> k1 --	115:20:1894:1904	8576756	1	True				
ANR	8577115	PostIncDecOperationExpression	rice -> k1 --		8576756	0					
ANR	8577116	PtrMemberAccess	rice -> k1		8576756	0					
ANR	8577117	Identifier	rice		8576756	0					
ANR	8577118	Identifier	k1		8576756	1					
ANR	8577119	IncDec	--		8576756	1					
ANR	8577120	ElseStatement	else		8576756	0					
ANR	8577121	IfStatement	if ( rice -> sum1 > shift_16 [ rice -> k1 + 1 ] )		8576756	0					
ANR	8577122	Condition	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]	117:24:1931:1965	8576756	0	True				
ANR	8577123	RelationalExpression	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]		8576756	0		>			
ANR	8577124	PtrMemberAccess	rice -> sum1		8576756	0					
ANR	8577125	Identifier	rice		8576756	0					
ANR	8577126	Identifier	sum1		8576756	1					
ANR	8577127	ArrayIndexing	shift_16 [ rice -> k1 + 1 ]		8576756	1					
ANR	8577128	Identifier	shift_16		8576756	0					
ANR	8577129	AdditiveExpression	rice -> k1 + 1		8576756	1		+			
ANR	8577130	PtrMemberAccess	rice -> k1		8576756	0					
ANR	8577131	Identifier	rice		8576756	0					
ANR	8577132	Identifier	k1		8576756	1					
ANR	8577133	PrimaryExpression	1		8576756	1					
ANR	8577134	ExpressionStatement	rice -> k1 ++	119:20:1989:1999	8576756	1	True				
ANR	8577135	PostIncDecOperationExpression	rice -> k1 ++		8576756	0					
ANR	8577136	PtrMemberAccess	rice -> k1		8576756	0					
ANR	8577137	Identifier	rice		8576756	0					
ANR	8577138	Identifier	k1		8576756	1					
ANR	8577139	IncDec	++		8576756	1					
ANR	8577140	ExpressionStatement	value += shift_1 [ rice -> k0 ]	121:16:2018:2044	8576756	3	True				
ANR	8577141	AssignmentExpression	value += shift_1 [ rice -> k0 ]		8576756	0		+=			
ANR	8577142	Identifier	value		8576756	0					
ANR	8577143	ArrayIndexing	shift_1 [ rice -> k0 ]		8576756	1					
ANR	8577144	Identifier	shift_1		8576756	0					
ANR	8577145	PtrMemberAccess	rice -> k0		8576756	1					
ANR	8577146	Identifier	rice		8576756	0					
ANR	8577147	Identifier	k0		8576756	1					
ANR	8577148	Label	default :	123:12:2059:2066	8576756	4	True				
ANR	8577149	Identifier	default		8576756	0					
ANR	8577150	ExpressionStatement	rice -> sum0 += value - ( rice -> sum0 >> 4 )	125:16:2085:2124	8576756	5	True				
ANR	8577151	AssignmentExpression	rice -> sum0 += value - ( rice -> sum0 >> 4 )		8576756	0		+=			
ANR	8577152	PtrMemberAccess	rice -> sum0		8576756	0					
ANR	8577153	Identifier	rice		8576756	0					
ANR	8577154	Identifier	sum0		8576756	1					
ANR	8577155	AdditiveExpression	value - ( rice -> sum0 >> 4 )		8576756	1		-			
ANR	8577156	Identifier	value		8576756	0					
ANR	8577157	ShiftExpression	rice -> sum0 >> 4		8576756	1		>>			
ANR	8577158	PtrMemberAccess	rice -> sum0		8576756	0					
ANR	8577159	Identifier	rice		8576756	0					
ANR	8577160	Identifier	sum0		8576756	1					
ANR	8577161	PrimaryExpression	4		8576756	1					
ANR	8577162	IfStatement	if ( rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ] )		8576756	6					
ANR	8577163	Condition	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]	127:20:2147:2193	8576756	0	True				
ANR	8577164	AndExpression	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]		8576756	0		&&			
ANR	8577165	RelationalExpression	rice -> k0 > 0		8576756	0		>			
ANR	8577166	PtrMemberAccess	rice -> k0		8576756	0					
ANR	8577167	Identifier	rice		8576756	0					
ANR	8577168	Identifier	k0		8576756	1					
ANR	8577169	PrimaryExpression	0		8576756	1					
ANR	8577170	RelationalExpression	rice -> sum0 < shift_16 [ rice -> k0 ]		8576756	1		<			
ANR	8577171	PtrMemberAccess	rice -> sum0		8576756	0					
ANR	8577172	Identifier	rice		8576756	0					
ANR	8577173	Identifier	sum0		8576756	1					
ANR	8577174	ArrayIndexing	shift_16 [ rice -> k0 ]		8576756	1					
ANR	8577175	Identifier	shift_16		8576756	0					
ANR	8577176	PtrMemberAccess	rice -> k0		8576756	1					
ANR	8577177	Identifier	rice		8576756	0					
ANR	8577178	Identifier	k0		8576756	1					
ANR	8577179	ExpressionStatement	rice -> k0 --	129:20:2217:2227	8576756	1	True				
ANR	8577180	PostIncDecOperationExpression	rice -> k0 --		8576756	0					
ANR	8577181	PtrMemberAccess	rice -> k0		8576756	0					
ANR	8577182	Identifier	rice		8576756	0					
ANR	8577183	Identifier	k0		8576756	1					
ANR	8577184	IncDec	--		8576756	1					
ANR	8577185	ElseStatement	else		8576756	0					
ANR	8577186	IfStatement	if ( rice -> sum0 > shift_16 [ rice -> k0 + 1 ] )		8576756	0					
ANR	8577187	Condition	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]	131:24:2254:2288	8576756	0	True				
ANR	8577188	RelationalExpression	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]		8576756	0		>			
ANR	8577189	PtrMemberAccess	rice -> sum0		8576756	0					
ANR	8577190	Identifier	rice		8576756	0					
ANR	8577191	Identifier	sum0		8576756	1					
ANR	8577192	ArrayIndexing	shift_16 [ rice -> k0 + 1 ]		8576756	1					
ANR	8577193	Identifier	shift_16		8576756	0					
ANR	8577194	AdditiveExpression	rice -> k0 + 1		8576756	1		+			
ANR	8577195	PtrMemberAccess	rice -> k0		8576756	0					
ANR	8577196	Identifier	rice		8576756	0					
ANR	8577197	Identifier	k0		8576756	1					
ANR	8577198	PrimaryExpression	1		8576756	1					
ANR	8577199	ExpressionStatement	rice -> k0 ++	133:20:2312:2322	8576756	1	True				
ANR	8577200	PostIncDecOperationExpression	rice -> k0 ++		8576756	0					
ANR	8577201	PtrMemberAccess	rice -> k0		8576756	0					
ANR	8577202	Identifier	rice		8576756	0					
ANR	8577203	Identifier	k0		8576756	1					
ANR	8577204	IncDec	++		8576756	1					
ANR	8577205	Statement	define	141:1:2379:2384	8576756	9	True				
ANR	8577206	ExpressionStatement	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )	141:8:2386:2462	8576756	10	True				
ANR	8577207	AssignmentExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )		8576756	0		=			
ANR	8577208	MultiplicativeExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p		8576756	0		*			
ANR	8577209	CallExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) )		8576756	0					
ANR	8577210	Callee	UNFOLD ( x )		8576756	0					
ANR	8577211	CallExpression	UNFOLD ( x )		8576756	0					
ANR	8577212	Callee	UNFOLD		8576756	0					
ANR	8577213	Identifier	UNFOLD		8576756	0					
ANR	8577214	ArgumentList	x		8576756	1					
ANR	8577215	Argument	x		8576756	0					
ANR	8577216	Identifier	x		8576756	0					
ANR	8577217	ArgumentList	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8576756	1					
ANR	8577218	Argument	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8576756	0					
ANR	8577219	ConditionalExpression	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8576756	0					
ANR	8577220	Condition	( x ) & 1		8576756	0					
ANR	8577221	CastExpression	( x ) & 1		8576756	0					
ANR	8577222	CastTarget	x		8576756	0					
ANR	8577223	UnaryOperationExpression	& 1		8576756	1					
ANR	8577224	UnaryOperator	&		8576756	0					
ANR	8577225	PrimaryExpression	1		8576756	1					
ANR	8577226	ShiftExpression	++ ( x ) >> 1		8576756	1		>>			
ANR	8577227	UnaryExpression	++ ( x )		8576756	0					
ANR	8577228	IncDec	++		8576756	0					
ANR	8577229	Identifier	x		8576756	1					
ANR	8577230	PrimaryExpression	1		8576756	1					
ANR	8577231	ShiftExpression	- ( x ) >> 1		8576756	2		>>			
ANR	8577232	UnaryOperationExpression	- ( x )		8576756	0					
ANR	8577233	UnaryOperator	-		8576756	0					
ANR	8577234	Identifier	x		8576756	1					
ANR	8577235	PrimaryExpression	1		8576756	1					
ANR	8577236	Identifier	p		8576756	1					
ANR	8577237	CallExpression	UNFOLD ( value )		8576756	1					
ANR	8577238	Callee	UNFOLD		8576756	0					
ANR	8577239	Identifier	UNFOLD		8576756	0					
ANR	8577240	ArgumentList	value		8576756	1					
ANR	8577241	Argument	value		8576756	0					
ANR	8577242	Identifier	value		8576756	0					
ANR	8577243	ExpressionStatement	"ttafilter_process ( filter , p , 0 )"	149:12:2513:2544	8576756	11	True				
ANR	8577244	CallExpression	"ttafilter_process ( filter , p , 0 )"		8576756	0					
ANR	8577245	Callee	ttafilter_process		8576756	0					
ANR	8577246	Identifier	ttafilter_process		8576756	0					
ANR	8577247	ArgumentList	filter		8576756	1					
ANR	8577248	Argument	filter		8576756	0					
ANR	8577249	Identifier	filter		8576756	0					
ANR	8577250	Argument	p		8576756	1					
ANR	8577251	Identifier	p		8576756	0					
ANR	8577252	Argument	0		8576756	2					
ANR	8577253	PrimaryExpression	0		8576756	0					
ANR	8577254	Statement	define	155:1:2589:2594	8576756	12	True				
ANR	8577255	Statement	PRED	155:8:2596:2599	8576756	13	True				
ANR	8577256	Statement	(	155:12:2600:2600	8576756	14	True				
ANR	8577257	Statement	x	155:13:2601:2601	8576756	15	True				
ANR	8577258	Statement	","	155:14:2602:2602	8576756	16	True				
ANR	8577259	Statement	k	155:16:2604:2604	8576756	17	True				
ANR	8577260	Statement	)	155:17:2605:2605	8576756	18	True				
ANR	8577261	Statement	(	155:19:2607:2607	8576756	19	True				
ANR	8577262	Statement	int32_t	155:20:2608:2614	8576756	20	True				
ANR	8577263	Statement	)	155:27:2615:2615	8576756	21	True				
ANR	8577264	Statement	(	155:28:2616:2616	8576756	22	True				
ANR	8577265	Statement	(	155:29:2617:2617	8576756	23	True				
ANR	8577266	Statement	(	155:30:2618:2618	8576756	24	True				
ANR	8577267	Statement	(	155:31:2619:2619	8576756	25	True				
ANR	8577268	Statement	uint64_t	155:32:2620:2627	8576756	26	True				
ANR	8577269	Statement	)	155:40:2628:2628	8576756	27	True				
ANR	8577270	Statement	x	155:41:2629:2629	8576756	28	True				
ANR	8577271	Statement	<<	155:43:2631:2632	8576756	29	True				
ANR	8577272	Statement	k	155:46:2634:2634	8576756	30	True				
ANR	8577273	Statement	)	155:47:2635:2635	8576756	31	True				
ANR	8577274	Statement	-	155:49:2637:2637	8576756	32	True				
ANR	8577275	Statement	x	155:51:2639:2639	8576756	33	True				
ANR	8577276	Statement	)	155:52:2640:2640	8576756	34	True				
ANR	8577277	Statement	>>	155:54:2642:2643	8576756	35	True				
ANR	8577278	Statement	k	155:57:2645:2645	8576756	36	True				
ANR	8577279	Statement	)	155:58:2646:2646	8576756	37	True				
ANR	8577280	SwitchStatement	switch ( s -> bps )		8576756	38					
ANR	8577281	Condition	s -> bps	157:20:2669:2674	8576756	0	True				
ANR	8577282	PtrMemberAccess	s -> bps		8576756	0					
ANR	8577283	Identifier	s		8576756	0					
ANR	8577284	Identifier	bps		8576756	1					
ANR	8577285	CompoundStatement		151:28:2561:2561	8576756	1					
ANR	8577286	Label	case 1 :	159:16:2696:2702	8576756	0	True				
ANR	8577287	ExpressionStatement	"* p += PRED ( * predictor , 4 )"	159:24:2704:2729	8576756	1	True				
ANR	8577288	AssignmentExpression	"* p += PRED ( * predictor , 4 )"		8576756	0		+=			
ANR	8577289	UnaryOperationExpression	* p		8576756	0					
ANR	8577290	UnaryOperator	*		8576756	0					
ANR	8577291	Identifier	p		8576756	1					
ANR	8577292	CallExpression	"PRED ( * predictor , 4 )"		8576756	1					
ANR	8577293	Callee	PRED		8576756	0					
ANR	8577294	Identifier	PRED		8576756	0					
ANR	8577295	ArgumentList	* predictor		8576756	1					
ANR	8577296	Argument	* predictor		8576756	0					
ANR	8577297	UnaryOperationExpression	* predictor		8576756	0					
ANR	8577298	UnaryOperator	*		8576756	0					
ANR	8577299	Identifier	predictor		8576756	1					
ANR	8577300	Argument	4		8576756	1					
ANR	8577301	PrimaryExpression	4		8576756	0					
ANR	8577302	BreakStatement	break ;	159:51:2731:2736	8576756	2	True				
ANR	8577303	Label	case 2 :	161:16:2755:2761	8576756	3	True				
ANR	8577304	Label	case 3 :	163:16:2780:2786	8576756	4	True				
ANR	8577305	ExpressionStatement	"* p += PRED ( * predictor , 5 )"	163:24:2788:2813	8576756	5	True				
ANR	8577306	AssignmentExpression	"* p += PRED ( * predictor , 5 )"		8576756	0		+=			
ANR	8577307	UnaryOperationExpression	* p		8576756	0					
ANR	8577308	UnaryOperator	*		8576756	0					
ANR	8577309	Identifier	p		8576756	1					
ANR	8577310	CallExpression	"PRED ( * predictor , 5 )"		8576756	1					
ANR	8577311	Callee	PRED		8576756	0					
ANR	8577312	Identifier	PRED		8576756	0					
ANR	8577313	ArgumentList	* predictor		8576756	1					
ANR	8577314	Argument	* predictor		8576756	0					
ANR	8577315	UnaryOperationExpression	* predictor		8576756	0					
ANR	8577316	UnaryOperator	*		8576756	0					
ANR	8577317	Identifier	predictor		8576756	1					
ANR	8577318	Argument	5		8576756	1					
ANR	8577319	PrimaryExpression	5		8576756	0					
ANR	8577320	BreakStatement	break ;	163:51:2815:2820	8576756	6	True				
ANR	8577321	Label	case 4 :	165:16:2839:2845	8576756	7	True				
ANR	8577322	ExpressionStatement	* p += * predictor	165:24:2847:2863	8576756	8	True				
ANR	8577323	AssignmentExpression	* p += * predictor		8576756	0		+=			
ANR	8577324	UnaryOperationExpression	* p		8576756	0					
ANR	8577325	UnaryOperator	*		8576756	0					
ANR	8577326	Identifier	p		8576756	1					
ANR	8577327	UnaryOperationExpression	* predictor		8576756	1					
ANR	8577328	UnaryOperator	*		8576756	0					
ANR	8577329	Identifier	predictor		8576756	1					
ANR	8577330	BreakStatement	break ;	165:42:2865:2870	8576756	9	True				
ANR	8577331	ExpressionStatement	* predictor = * p	169:12:2900:2915	8576756	39	True				
ANR	8577332	AssignmentExpression	* predictor = * p		8576756	0		=			
ANR	8577333	UnaryOperationExpression	* predictor		8576756	0					
ANR	8577334	UnaryOperator	*		8576756	0					
ANR	8577335	Identifier	predictor		8576756	1					
ANR	8577336	UnaryOperationExpression	* p		8576756	1					
ANR	8577337	UnaryOperator	*		8576756	0					
ANR	8577338	Identifier	p		8576756	1					
ANR	8577339	IfStatement	if ( s -> is_float && ( ( p - data ) & 1 ) )		8576756	40					
ANR	8577340	Condition	s -> is_float && ( ( p - data ) & 1 )	177:16:3005:3035	8576756	0	True				
ANR	8577341	AndExpression	s -> is_float && ( ( p - data ) & 1 )		8576756	0		&&			
ANR	8577342	PtrMemberAccess	s -> is_float		8576756	0					
ANR	8577343	Identifier	s		8576756	0					
ANR	8577344	Identifier	is_float		8576756	1					
ANR	8577345	BitAndExpression	( p - data ) & 1		8576756	1		&			
ANR	8577346	AdditiveExpression	p - data		8576756	0		-			
ANR	8577347	Identifier	p		8576756	0					
ANR	8577348	Identifier	data		8576756	1					
ANR	8577349	PrimaryExpression	1		8576756	1					
ANR	8577350	CompoundStatement		177:16:3031:3056	8576756	1					
ANR	8577351	IdentifierDeclStatement	uint32_t neg = * p & 0x80000000 ;	179:16:3057:3087	8576756	0	True				
ANR	8577352	IdentifierDecl	neg = * p & 0x80000000		8576756	0					
ANR	8577353	IdentifierDeclType	uint32_t		8576756	0					
ANR	8577354	Identifier	neg		8576756	1					
ANR	8577355	AssignmentExpression	neg = * p & 0x80000000		8576756	2		=			
ANR	8577356	Identifier	neg		8576756	0					
ANR	8577357	BitAndExpression	* p & 0x80000000		8576756	1		&			
ANR	8577358	UnaryOperationExpression	* p		8576756	0					
ANR	8577359	UnaryOperator	*		8576756	0					
ANR	8577360	Identifier	p		8576756	1					
ANR	8577361	PrimaryExpression	0x80000000		8576756	1					
ANR	8577362	IdentifierDeclStatement	uint32_t hi = * ( p - 1 ) ;	181:16:3106:3128	8576756	1	True				
ANR	8577363	IdentifierDecl	hi = * ( p - 1 )		8576756	0					
ANR	8577364	IdentifierDeclType	uint32_t		8576756	0					
ANR	8577365	Identifier	hi		8576756	1					
ANR	8577366	AssignmentExpression	hi = * ( p - 1 )		8576756	2		=			
ANR	8577367	Identifier	hi		8576756	0					
ANR	8577368	UnaryOperationExpression	* ( p - 1 )		8576756	1					
ANR	8577369	UnaryOperator	*		8576756	0					
ANR	8577370	AdditiveExpression	p - 1		8576756	1		-			
ANR	8577371	Identifier	p		8576756	0					
ANR	8577372	PrimaryExpression	1		8576756	1					
ANR	8577373	IdentifierDeclStatement	uint32_t lo = abs ( * p ) - 1 ;	183:16:3147:3172	8576756	2	True				
ANR	8577374	IdentifierDecl	lo = abs ( * p ) - 1		8576756	0					
ANR	8577375	IdentifierDeclType	uint32_t		8576756	0					
ANR	8577376	Identifier	lo		8576756	1					
ANR	8577377	AssignmentExpression	lo = abs ( * p ) - 1		8576756	2		=			
ANR	8577378	Identifier	lo		8576756	0					
ANR	8577379	AdditiveExpression	abs ( * p ) - 1		8576756	1		-			
ANR	8577380	CallExpression	abs ( * p )		8576756	0					
ANR	8577381	Callee	abs		8576756	0					
ANR	8577382	Identifier	abs		8576756	0					
ANR	8577383	ArgumentList	* p		8576756	1					
ANR	8577384	Argument	* p		8576756	0					
ANR	8577385	UnaryOperationExpression	* p		8576756	0					
ANR	8577386	UnaryOperator	*		8576756	0					
ANR	8577387	Identifier	p		8576756	1					
ANR	8577388	PrimaryExpression	1		8576756	1					
ANR	8577389	ExpressionStatement	hi += ( hi || lo ) ? 0x3f80 : 0	187:16:3193:3222	8576756	3	True				
ANR	8577390	AssignmentExpression	hi += ( hi || lo ) ? 0x3f80 : 0		8576756	0		+=			
ANR	8577391	Identifier	hi		8576756	0					
ANR	8577392	ConditionalExpression	( hi || lo ) ? 0x3f80 : 0		8576756	1					
ANR	8577393	Condition	hi || lo		8576756	0					
ANR	8577394	OrExpression	hi || lo		8576756	0		||			
ANR	8577395	Identifier	hi		8576756	0					
ANR	8577396	Identifier	lo		8576756	1					
ANR	8577397	PrimaryExpression	0x3f80		8576756	1					
ANR	8577398	PrimaryExpression	0		8576756	2					
ANR	8577399	ExpressionStatement	* ( p - 1 ) = ( hi << 16 ) | SWAP16 ( lo ) | neg	191:16:3290:3330	8576756	4	True				
ANR	8577400	AssignmentExpression	* ( p - 1 ) = ( hi << 16 ) | SWAP16 ( lo ) | neg		8576756	0		=			
ANR	8577401	UnaryOperationExpression	* ( p - 1 )		8576756	0					
ANR	8577402	UnaryOperator	*		8576756	0					
ANR	8577403	AdditiveExpression	p - 1		8576756	1		-			
ANR	8577404	Identifier	p		8576756	0					
ANR	8577405	PrimaryExpression	1		8576756	1					
ANR	8577406	InclusiveOrExpression	( hi << 16 ) | SWAP16 ( lo ) | neg		8576756	1		|			
ANR	8577407	ShiftExpression	hi << 16		8576756	0		<<			
ANR	8577408	Identifier	hi		8576756	0					
ANR	8577409	PrimaryExpression	16		8576756	1					
ANR	8577410	InclusiveOrExpression	SWAP16 ( lo ) | neg		8576756	1		|			
ANR	8577411	CallExpression	SWAP16 ( lo )		8576756	0					
ANR	8577412	Callee	SWAP16		8576756	0					
ANR	8577413	Identifier	SWAP16		8576756	0					
ANR	8577414	ArgumentList	lo		8576756	1					
ANR	8577415	Argument	lo		8576756	0					
ANR	8577416	Identifier	lo		8576756	0					
ANR	8577417	Identifier	neg		8576756	1					
ANR	8577418	IfStatement	if ( cur_chan < ( s -> channels - 1 ) )		8576756	41					
ANR	8577419	Condition	cur_chan < ( s -> channels - 1 )	213:16:3582:3607	8576756	0	True				
ANR	8577420	RelationalExpression	cur_chan < ( s -> channels - 1 )		8576756	0		<			
ANR	8577421	Identifier	cur_chan		8576756	0					
ANR	8577422	AdditiveExpression	s -> channels - 1		8576756	1		-			
ANR	8577423	PtrMemberAccess	s -> channels		8576756	0					
ANR	8577424	Identifier	s		8576756	0					
ANR	8577425	Identifier	channels		8576756	1					
ANR	8577426	PrimaryExpression	1		8576756	1					
ANR	8577427	ExpressionStatement	cur_chan ++	215:16:3627:3637	8576756	1	True				
ANR	8577428	PostIncDecOperationExpression	cur_chan ++		8576756	0					
ANR	8577429	Identifier	cur_chan		8576756	0					
ANR	8577430	IncDec	++		8576756	1					
ANR	8577431	ElseStatement	else		8576756	0					
ANR	8577432	CompoundStatement		211:17:3541:3541	8576756	0					
ANR	8577433	IfStatement	if ( ! s -> is_float && ( s -> channels > 1 ) )		8576756	0					
ANR	8577434	Condition	! s -> is_float && ( s -> channels > 1 )	221:20:3738:3770	8576756	0	True				
ANR	8577435	AndExpression	! s -> is_float && ( s -> channels > 1 )		8576756	0		&&			
ANR	8577436	UnaryOperationExpression	! s -> is_float		8576756	0					
ANR	8577437	UnaryOperator	!		8576756	0					
ANR	8577438	PtrMemberAccess	s -> is_float		8576756	1					
ANR	8577439	Identifier	s		8576756	0					
ANR	8577440	Identifier	is_float		8576756	1					
ANR	8577441	RelationalExpression	s -> channels > 1		8576756	1		>			
ANR	8577442	PtrMemberAccess	s -> channels		8576756	0					
ANR	8577443	Identifier	s		8576756	0					
ANR	8577444	Identifier	channels		8576756	1					
ANR	8577445	PrimaryExpression	1		8576756	1					
ANR	8577446	CompoundStatement		217:20:3680:3698	8576756	1					
ANR	8577447	IdentifierDeclStatement	int32_t * r = p - 1 ;	223:20:3796:3814	8576756	0	True				
ANR	8577448	IdentifierDecl	* r = p - 1		8576756	0					
ANR	8577449	IdentifierDeclType	int32_t *		8576756	0					
ANR	8577450	Identifier	r		8576756	1					
ANR	8577451	AssignmentExpression	* r = p - 1		8576756	2		=			
ANR	8577452	Identifier	r		8576756	0					
ANR	8577453	AdditiveExpression	p - 1		8576756	1		-			
ANR	8577454	Identifier	p		8576756	0					
ANR	8577455	PrimaryExpression	1		8576756	1					
ANR	8577456	ForStatement	for ( * p += * r / 2 ; r > p - s -> channels ; r -- )		8576756	1					
ANR	8577457	ForInit	* p += * r / 2 ;	225:25:3842:3854	8576756	0	True				
ANR	8577458	AssignmentExpression	* p += * r / 2		8576756	0		+=			
ANR	8577459	UnaryOperationExpression	* p		8576756	0					
ANR	8577460	UnaryOperator	*		8576756	0					
ANR	8577461	Identifier	p		8576756	1					
ANR	8577462	MultiplicativeExpression	* r / 2		8576756	1		/			
ANR	8577463	UnaryOperationExpression	* r		8576756	0					
ANR	8577464	UnaryOperator	*		8576756	0					
ANR	8577465	Identifier	r		8576756	1					
ANR	8577466	PrimaryExpression	2		8576756	1					
ANR	8577467	Condition	r > p - s -> channels	225:39:3856:3874	8576756	1	True				
ANR	8577468	RelationalExpression	r > p - s -> channels		8576756	0		>			
ANR	8577469	Identifier	r		8576756	0					
ANR	8577470	AdditiveExpression	p - s -> channels		8576756	1		-			
ANR	8577471	Identifier	p		8576756	0					
ANR	8577472	PtrMemberAccess	s -> channels		8576756	1					
ANR	8577473	Identifier	s		8576756	0					
ANR	8577474	Identifier	channels		8576756	1					
ANR	8577475	PostIncDecOperationExpression	r --	225:60:3877:3879	8576756	2	True				
ANR	8577476	Identifier	r		8576756	0					
ANR	8577477	IncDec	--		8576756	1					
ANR	8577478	ExpressionStatement	* r = * ( r + 1 ) - * r	227:24:3907:3925	8576756	3	True				
ANR	8577479	AssignmentExpression	* r = * ( r + 1 ) - * r		8576756	0		=			
ANR	8577480	UnaryOperationExpression	* r		8576756	0					
ANR	8577481	UnaryOperator	*		8576756	0					
ANR	8577482	Identifier	r		8576756	1					
ANR	8577483	AdditiveExpression	* ( r + 1 ) - * r		8576756	1		-			
ANR	8577484	UnaryOperationExpression	* ( r + 1 )		8576756	0					
ANR	8577485	UnaryOperator	*		8576756	0					
ANR	8577486	AdditiveExpression	r + 1		8576756	1		+			
ANR	8577487	Identifier	r		8576756	0					
ANR	8577488	PrimaryExpression	1		8576756	1					
ANR	8577489	UnaryOperationExpression	* r		8576756	1					
ANR	8577490	UnaryOperator	*		8576756	0					
ANR	8577491	Identifier	r		8576756	1					
ANR	8577492	ExpressionStatement	cur_chan = 0	231:16:3963:3975	8576756	1	True				
ANR	8577493	AssignmentExpression	cur_chan = 0		8576756	0		=			
ANR	8577494	Identifier	cur_chan		8576756	0					
ANR	8577495	PrimaryExpression	0		8576756	1					
ANR	8577496	ExpressionStatement	"skip_bits ( & s -> gb , 32 )"	239:8:4014:4035	8576756	9	True				
ANR	8577497	CallExpression	"skip_bits ( & s -> gb , 32 )"		8576756	0					
ANR	8577498	Callee	skip_bits		8576756	0					
ANR	8577499	Identifier	skip_bits		8576756	0					
ANR	8577500	ArgumentList	& s -> gb		8576756	1					
ANR	8577501	Argument	& s -> gb		8576756	0					
ANR	8577502	UnaryOperationExpression	& s -> gb		8576756	0					
ANR	8577503	UnaryOperator	&		8576756	0					
ANR	8577504	PtrMemberAccess	s -> gb		8576756	1					
ANR	8577505	Identifier	s		8576756	0					
ANR	8577506	Identifier	gb		8576756	1					
ANR	8577507	Argument	32		8576756	1					
ANR	8577508	PrimaryExpression	32		8576756	0					
ANR	8577509	SwitchStatement	switch ( s -> bps )		8576756	10					
ANR	8577510	Condition	s -> bps	245:15:4105:4110	8576756	0	True				
ANR	8577511	PtrMemberAccess	s -> bps		8576756	0					
ANR	8577512	Identifier	s		8576756	0					
ANR	8577513	Identifier	bps		8576756	1					
ANR	8577514	CompoundStatement		239:23:3997:3997	8576756	1					
ANR	8577515	Label	case 2 :	247:12:4128:4134	8576756	0	True				
ANR	8577516	CompoundStatement		243:16:4039:4063	8576756	1					
ANR	8577517	IdentifierDeclStatement	uint16_t * samples = data ;	249:16:4155:4179	8576756	0	True				
ANR	8577518	IdentifierDecl	* samples = data		8576756	0					
ANR	8577519	IdentifierDeclType	uint16_t *		8576756	0					
ANR	8577520	Identifier	samples		8576756	1					
ANR	8577521	AssignmentExpression	* samples = data		8576756	2		=			
ANR	8577522	Identifier	data		8576756	0					
ANR	8577523	Identifier	data		8576756	1					
ANR	8577524	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8576756	1					
ANR	8577525	ForInit	p = s -> decode_buffer ;	251:21:4203:4223	8576756	0	True				
ANR	8577526	AssignmentExpression	p = s -> decode_buffer		8576756	0		=			
ANR	8577527	Identifier	p		8576756	0					
ANR	8577528	PtrMemberAccess	s -> decode_buffer		8576756	1					
ANR	8577529	Identifier	s		8576756	0					
ANR	8577530	Identifier	decode_buffer		8576756	1					
ANR	8577531	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	251:43:4225:4271	8576756	1	True				
ANR	8577532	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8576756	0		<			
ANR	8577533	Identifier	p		8576756	0					
ANR	8577534	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8576756	1		+			
ANR	8577535	PtrMemberAccess	s -> decode_buffer		8576756	0					
ANR	8577536	Identifier	s		8576756	0					
ANR	8577537	Identifier	decode_buffer		8576756	1					
ANR	8577538	MultiplicativeExpression	framelen * s -> channels		8576756	1		*			
ANR	8577539	Identifier	framelen		8576756	0					
ANR	8577540	PtrMemberAccess	s -> channels		8576756	1					
ANR	8577541	Identifier	s		8576756	0					
ANR	8577542	Identifier	channels		8576756	1					
ANR	8577543	PostIncDecOperationExpression	p ++	251:92:4274:4276	8576756	2	True				
ANR	8577544	Identifier	p		8576756	0					
ANR	8577545	IncDec	++		8576756	1					
ANR	8577546	CompoundStatement		245:97:4163:4163	8576756	3					
ANR	8577547	ExpressionStatement	* samples ++ = * p	257:20:4419:4434	8576756	0	True				
ANR	8577548	AssignmentExpression	* samples ++ = * p		8576756	0		=			
ANR	8577549	UnaryOperationExpression	* samples ++		8576756	0					
ANR	8577550	UnaryOperator	*		8576756	0					
ANR	8577551	PostIncDecOperationExpression	samples ++		8576756	1					
ANR	8577552	Identifier	samples		8576756	0					
ANR	8577553	IncDec	++		8576756	1					
ANR	8577554	UnaryOperationExpression	* p		8576756	1					
ANR	8577555	UnaryOperator	*		8576756	0					
ANR	8577556	Identifier	p		8576756	1					
ANR	8577557	ExpressionStatement	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data	261:16:4472:4521	8576756	2	True				
ANR	8577558	AssignmentExpression	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data		8576756	0		=			
ANR	8577559	UnaryOperationExpression	* data_size		8576756	0					
ANR	8577560	UnaryOperator	*		8576756	0					
ANR	8577561	Identifier	data_size		8576756	1					
ANR	8577562	AdditiveExpression	( uint8_t * ) samples - ( uint8_t * ) data		8576756	1		-			
ANR	8577563	CastExpression	( uint8_t * ) samples		8576756	0					
ANR	8577564	CastTarget	uint8_t *		8576756	0					
ANR	8577565	Identifier	samples		8576756	1					
ANR	8577566	CastExpression	( uint8_t * ) data		8576756	1					
ANR	8577567	CastTarget	uint8_t *		8576756	0					
ANR	8577568	Identifier	data		8576756	1					
ANR	8577569	BreakStatement	break ;	263:16:4540:4545	8576756	3	True				
ANR	8577570	Label	default :	267:12:4575:4582	8576756	2	True				
ANR	8577571	Identifier	default		8576756	0					
ANR	8577572	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Error, only 16bit samples supported!\\n"" )"	269:16:4601:4673	8576756	3	True				
ANR	8577573	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Error, only 16bit samples supported!\\n"" )"		8576756	0					
ANR	8577574	Callee	av_log		8576756	0					
ANR	8577575	Identifier	av_log		8576756	0					
ANR	8577576	ArgumentList	s -> avctx		8576756	1					
ANR	8577577	Argument	s -> avctx		8576756	0					
ANR	8577578	PtrMemberAccess	s -> avctx		8576756	0					
ANR	8577579	Identifier	s		8576756	0					
ANR	8577580	Identifier	avctx		8576756	1					
ANR	8577581	Argument	AV_LOG_ERROR		8576756	1					
ANR	8577582	Identifier	AV_LOG_ERROR		8576756	0					
ANR	8577583	Argument	"""Error, only 16bit samples supported!\\n"""		8576756	2					
ANR	8577584	PrimaryExpression	"""Error, only 16bit samples supported!\\n"""		8576756	0					
ANR	8577585	ReturnStatement	return buf_size ;	279:4:4743:4758	8576756	6	True				
ANR	8577586	Identifier	buf_size		8576756	0					
ANR	8577587	ReturnType	static int		8576756	1					
ANR	8577588	Identifier	tta_decode_frame		8576756	2					
ANR	8577589	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		8576756	3					
ANR	8577590	Parameter	AVCodecContext * avctx	1:28:28:48	8576756	0	True				
ANR	8577591	ParameterType	AVCodecContext *		8576756	0					
ANR	8577592	Identifier	avctx		8576756	1					
ANR	8577593	Parameter	void * data	3:8:60:69	8576756	1	True				
ANR	8577594	ParameterType	void *		8576756	0					
ANR	8577595	Identifier	data		8576756	1					
ANR	8577596	Parameter	int * data_size	3:20:72:85	8576756	2	True				
ANR	8577597	ParameterType	int *		8576756	0					
ANR	8577598	Identifier	data_size		8576756	1					
ANR	8577599	Parameter	AVPacket * avpkt	5:8:97:111	8576756	3	True				
ANR	8577600	ParameterType	AVPacket *		8576756	0					
ANR	8577601	Identifier	avpkt		8576756	1					
ANR	8577602	CFGEntryNode	ENTRY		8576756		True				
ANR	8577603	CFGExitNode	EXIT		8576756		True				
ANR	8577604	Symbol	hi		8576756						
ANR	8577605	Symbol	* ( p - 1 )		8576756						
ANR	8577606	Symbol	* shift_1		8576756						
ANR	8577607	Symbol	lo		8576756						
ANR	8577608	Symbol	data		8576756						
ANR	8577609	Symbol	PRED		8576756						
ANR	8577610	Symbol	get_bits		8576756						
ANR	8577611	Symbol	avpkt		8576756						
ANR	8577612	Symbol	* data_size		8576756						
ANR	8577613	Symbol	unary		8576756						
ANR	8577614	Symbol	rice -> k0		8576756						
ANR	8577615	Symbol	rice -> k1		8576756						
ANR	8577616	Symbol	tta_get_unary		8576756						
ANR	8577617	Symbol	neg		8576756						
ANR	8577618	Symbol	* ttafilter_configs		8576756						
ANR	8577619	Symbol	* * rice		8576756						
ANR	8577620	Symbol	data_size		8576756						
ANR	8577621	Symbol	buf_size		8576756						
ANR	8577622	Symbol	s -> is_float		8576756						
ANR	8577623	Symbol	* * s -> bps		8576756						
ANR	8577624	Symbol	* rice		8576756						
ANR	8577625	Symbol	shift_16		8576756						
ANR	8577626	Symbol	* * * s		8576756						
ANR	8577627	Symbol	samples		8576756						
ANR	8577628	Symbol	& s -> gb		8576756						
ANR	8577629	Symbol	* avctx		8576756						
ANR	8577630	Symbol	* s -> bps		8576756						
ANR	8577631	Symbol	* rice -> k1		8576756						
ANR	8577632	Symbol	avpkt -> data		8576756						
ANR	8577633	Symbol	rice -> sum1		8576756						
ANR	8577634	Symbol	s -> avctx		8576756						
ANR	8577635	Symbol	* rice -> k0		8576756						
ANR	8577636	Symbol	s -> decode_buffer		8576756						
ANR	8577637	Symbol	rice -> sum0		8576756						
ANR	8577638	Symbol	predictors		8576756						
ANR	8577639	Symbol	s -> frame_length		8576756						
ANR	8577640	Symbol	* * ttafilter_configs		8576756						
ANR	8577641	Symbol	rices		8576756						
ANR	8577642	Symbol	s -> channels		8576756						
ANR	8577643	Symbol	cur_chan		8576756						
ANR	8577644	Symbol	* * s		8576756						
ANR	8577645	Symbol	avpkt -> size		8576756						
ANR	8577646	Symbol	predictor		8576756						
ANR	8577647	Symbol	avctx		8576756						
ANR	8577648	Symbol	* predictor		8576756						
ANR	8577649	Symbol	ttafilter_configs		8576756						
ANR	8577650	Symbol	value		8576756						
ANR	8577651	Symbol	* samples ++		8576756						
ANR	8577652	Symbol	* predictors		8576756						
ANR	8577653	Symbol	* avpkt		8576756						
ANR	8577654	Symbol	s -> total_frames		8576756						
ANR	8577655	Symbol	UNFOLD		8576756						
ANR	8577656	Symbol	AV_LOG_ERROR		8576756						
ANR	8577657	Symbol	shift_1		8576756						
ANR	8577658	Symbol	i		8576756						
ANR	8577659	Symbol	filters		8576756						
ANR	8577660	Symbol	k		8576756						
ANR	8577661	Symbol	avctx -> priv_data		8576756						
ANR	8577662	Symbol	rice		8576756						
ANR	8577663	Symbol	p		8576756						
ANR	8577664	Symbol	filter		8576756						
ANR	8577665	Symbol	* ( r + 1 )		8576756						
ANR	8577666	Symbol	s -> bps		8576756						
ANR	8577667	Symbol	buf		8576756						
ANR	8577668	Symbol	s -> last_frame_length		8576756						
ANR	8577669	Symbol	* shift_16		8576756						
ANR	8577670	Symbol	SWAP16		8576756						
ANR	8577671	Symbol	r		8576756						
ANR	8577672	Symbol	s		8576756						
ANR	8577673	Symbol	* i		8576756						
ANR	8577674	Symbol	depth		8576756						
ANR	8577675	Symbol	abs		8576756						
ANR	8577676	Symbol	x		8576756						
ANR	8577677	Symbol	* p		8576756						
ANR	8577678	Symbol	framelen		8576756						
ANR	8577679	Symbol	* r		8576756						
ANR	8577680	Symbol	* s		8576756						
