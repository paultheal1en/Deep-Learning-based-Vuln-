command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7101636	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qmp_getfd_1.c								
ANR	7101637	Function	qmp_getfd	1:0:0:782							
ANR	7101638	FunctionDef	"qmp_getfd (const char * fdname , Error * * errp)"		7101637	0					
ANR	7101639	CompoundStatement		3:0:50:782	7101637	0					
ANR	7101640	IdentifierDeclStatement	mon_fd_t * monfd ;	5:4:57:72	7101637	0	True				
ANR	7101641	IdentifierDecl	* monfd		7101637	0					
ANR	7101642	IdentifierDeclType	mon_fd_t *		7101637	0					
ANR	7101643	Identifier	monfd		7101637	1					
ANR	7101644	IdentifierDeclStatement	int fd ;	7:4:79:85	7101637	1	True				
ANR	7101645	IdentifierDecl	fd		7101637	0					
ANR	7101646	IdentifierDeclType	int		7101637	0					
ANR	7101647	Identifier	fd		7101637	1					
ANR	7101648	ExpressionStatement	fd = qemu_chr_fe_get_msgfd ( cur_mon -> chr )	11:4:94:134	7101637	2	True				
ANR	7101649	AssignmentExpression	fd = qemu_chr_fe_get_msgfd ( cur_mon -> chr )		7101637	0		=			
ANR	7101650	Identifier	fd		7101637	0					
ANR	7101651	CallExpression	qemu_chr_fe_get_msgfd ( cur_mon -> chr )		7101637	1					
ANR	7101652	Callee	qemu_chr_fe_get_msgfd		7101637	0					
ANR	7101653	Identifier	qemu_chr_fe_get_msgfd		7101637	0					
ANR	7101654	ArgumentList	cur_mon -> chr		7101637	1					
ANR	7101655	Argument	cur_mon -> chr		7101637	0					
ANR	7101656	PtrMemberAccess	cur_mon -> chr		7101637	0					
ANR	7101657	Identifier	cur_mon		7101637	0					
ANR	7101658	Identifier	chr		7101637	1					
ANR	7101659	IfStatement	if ( fd == - 1 )		7101637	3					
ANR	7101660	Condition	fd == - 1	13:8:145:152	7101637	0	True				
ANR	7101661	EqualityExpression	fd == - 1		7101637	0		==			
ANR	7101662	Identifier	fd		7101637	0					
ANR	7101663	UnaryOperationExpression	- 1		7101637	1					
ANR	7101664	UnaryOperator	-		7101637	0					
ANR	7101665	PrimaryExpression	1		7101637	1					
ANR	7101666	CompoundStatement		11:18:104:104	7101637	1					
ANR	7101667	ExpressionStatement	"error_set ( errp , QERR_FD_NOT_SUPPLIED )"	15:8:166:203	7101637	0	True				
ANR	7101668	CallExpression	"error_set ( errp , QERR_FD_NOT_SUPPLIED )"		7101637	0					
ANR	7101669	Callee	error_set		7101637	0					
ANR	7101670	Identifier	error_set		7101637	0					
ANR	7101671	ArgumentList	errp		7101637	1					
ANR	7101672	Argument	errp		7101637	0					
ANR	7101673	Identifier	errp		7101637	0					
ANR	7101674	Argument	QERR_FD_NOT_SUPPLIED		7101637	1					
ANR	7101675	Identifier	QERR_FD_NOT_SUPPLIED		7101637	0					
ANR	7101676	ReturnStatement	return ;	17:8:214:220	7101637	1	True				
ANR	7101677	IfStatement	if ( qemu_isdigit ( fdname [ 0 ] ) )		7101637	4					
ANR	7101678	Condition	qemu_isdigit ( fdname [ 0 ] )	23:8:240:262	7101637	0	True				
ANR	7101679	CallExpression	qemu_isdigit ( fdname [ 0 ] )		7101637	0					
ANR	7101680	Callee	qemu_isdigit		7101637	0					
ANR	7101681	Identifier	qemu_isdigit		7101637	0					
ANR	7101682	ArgumentList	fdname [ 0 ]		7101637	1					
ANR	7101683	Argument	fdname [ 0 ]		7101637	0					
ANR	7101684	ArrayIndexing	fdname [ 0 ]		7101637	0					
ANR	7101685	Identifier	fdname		7101637	0					
ANR	7101686	PrimaryExpression	0		7101637	1					
ANR	7101687	CompoundStatement		21:33:214:214	7101637	1					
ANR	7101688	ExpressionStatement	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , ""fdname"" , ""a name not starting with a digit"" )"	26:8:277:387	7101637	0	True				
ANR	7101689	CallExpression	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , ""fdname"" , ""a name not starting with a digit"" )"		7101637	0					
ANR	7101690	Callee	error_set		7101637	0					
ANR	7101691	Identifier	error_set		7101637	0					
ANR	7101692	ArgumentList	errp		7101637	1					
ANR	7101693	Argument	errp		7101637	0					
ANR	7101694	Identifier	errp		7101637	0					
ANR	7101695	Argument	QERR_INVALID_PARAMETER_VALUE		7101637	1					
ANR	7101696	Identifier	QERR_INVALID_PARAMETER_VALUE		7101637	0					
ANR	7101697	Argument	"""fdname"""		7101637	2					
ANR	7101698	PrimaryExpression	"""fdname"""		7101637	0					
ANR	7101699	Argument	"""a name not starting with a digit"""		7101637	3					
ANR	7101700	PrimaryExpression	"""a name not starting with a digit"""		7101637	0					
ANR	7101701	ReturnStatement	return ;	30:8:398:404	7101637	1	True				
ANR	7101702	Statement	QLIST_FOREACH	36:4:420:432	7101637	5	True				
ANR	7101703	Statement	(	36:17:433:433	7101637	6	True				
ANR	7101704	Statement	monfd	36:18:434:438	7101637	7	True				
ANR	7101705	Statement	","	36:23:439:439	7101637	8	True				
ANR	7101706	Statement	&	36:25:441:441	7101637	9	True				
ANR	7101707	Statement	cur_mon	36:26:442:448	7101637	10	True				
ANR	7101708	Statement	->	36:33:449:450	7101637	11	True				
ANR	7101709	Statement	fds	36:35:451:453	7101637	12	True				
ANR	7101710	Statement	","	36:38:454:454	7101637	13	True				
ANR	7101711	Statement	next	36:40:456:459	7101637	14	True				
ANR	7101712	Statement	)	36:44:460:460	7101637	15	True				
ANR	7101713	CompoundStatement		34:46:411:411	7101637	16					
ANR	7101714	IfStatement	"if ( strcmp ( monfd -> name , fdname ) != 0 )"		7101637	0					
ANR	7101715	Condition	"strcmp ( monfd -> name , fdname ) != 0"	38:12:477:508	7101637	0	True				
ANR	7101716	EqualityExpression	"strcmp ( monfd -> name , fdname ) != 0"		7101637	0		!=			
ANR	7101717	CallExpression	"strcmp ( monfd -> name , fdname )"		7101637	0					
ANR	7101718	Callee	strcmp		7101637	0					
ANR	7101719	Identifier	strcmp		7101637	0					
ANR	7101720	ArgumentList	monfd -> name		7101637	1					
ANR	7101721	Argument	monfd -> name		7101637	0					
ANR	7101722	PtrMemberAccess	monfd -> name		7101637	0					
ANR	7101723	Identifier	monfd		7101637	0					
ANR	7101724	Identifier	name		7101637	1					
ANR	7101725	Argument	fdname		7101637	1					
ANR	7101726	Identifier	fdname		7101637	0					
ANR	7101727	PrimaryExpression	0		7101637	1					
ANR	7101728	CompoundStatement		36:46:460:460	7101637	1					
ANR	7101729	ContinueStatement	continue ;	40:12:526:534	7101637	0	True				
ANR	7101730	ExpressionStatement	close ( monfd -> fd )	46:8:558:574	7101637	1	True				
ANR	7101731	CallExpression	close ( monfd -> fd )		7101637	0					
ANR	7101732	Callee	close		7101637	0					
ANR	7101733	Identifier	close		7101637	0					
ANR	7101734	ArgumentList	monfd -> fd		7101637	1					
ANR	7101735	Argument	monfd -> fd		7101637	0					
ANR	7101736	PtrMemberAccess	monfd -> fd		7101637	0					
ANR	7101737	Identifier	monfd		7101637	0					
ANR	7101738	Identifier	fd		7101637	1					
ANR	7101739	ExpressionStatement	monfd -> fd = fd	48:8:585:599	7101637	2	True				
ANR	7101740	AssignmentExpression	monfd -> fd = fd		7101637	0		=			
ANR	7101741	PtrMemberAccess	monfd -> fd		7101637	0					
ANR	7101742	Identifier	monfd		7101637	0					
ANR	7101743	Identifier	fd		7101637	1					
ANR	7101744	Identifier	fd		7101637	1					
ANR	7101745	ReturnStatement	return ;	50:8:610:616	7101637	3	True				
ANR	7101746	ExpressionStatement	monfd = g_malloc0 ( sizeof ( mon_fd_t ) )	56:4:632:667	7101637	17	True				
ANR	7101747	AssignmentExpression	monfd = g_malloc0 ( sizeof ( mon_fd_t ) )		7101637	0		=			
ANR	7101748	Identifier	monfd		7101637	0					
ANR	7101749	CallExpression	g_malloc0 ( sizeof ( mon_fd_t ) )		7101637	1					
ANR	7101750	Callee	g_malloc0		7101637	0					
ANR	7101751	Identifier	g_malloc0		7101637	0					
ANR	7101752	ArgumentList	sizeof ( mon_fd_t )		7101637	1					
ANR	7101753	Argument	sizeof ( mon_fd_t )		7101637	0					
ANR	7101754	SizeofExpression	sizeof ( mon_fd_t )		7101637	0					
ANR	7101755	Sizeof	sizeof		7101637	0					
ANR	7101756	SizeofOperand	mon_fd_t		7101637	1					
ANR	7101757	ExpressionStatement	monfd -> name = g_strdup ( fdname )	58:4:674:704	7101637	18	True				
ANR	7101758	AssignmentExpression	monfd -> name = g_strdup ( fdname )		7101637	0		=			
ANR	7101759	PtrMemberAccess	monfd -> name		7101637	0					
ANR	7101760	Identifier	monfd		7101637	0					
ANR	7101761	Identifier	name		7101637	1					
ANR	7101762	CallExpression	g_strdup ( fdname )		7101637	1					
ANR	7101763	Callee	g_strdup		7101637	0					
ANR	7101764	Identifier	g_strdup		7101637	0					
ANR	7101765	ArgumentList	fdname		7101637	1					
ANR	7101766	Argument	fdname		7101637	0					
ANR	7101767	Identifier	fdname		7101637	0					
ANR	7101768	ExpressionStatement	monfd -> fd = fd	60:4:711:725	7101637	19	True				
ANR	7101769	AssignmentExpression	monfd -> fd = fd		7101637	0		=			
ANR	7101770	PtrMemberAccess	monfd -> fd		7101637	0					
ANR	7101771	Identifier	monfd		7101637	0					
ANR	7101772	Identifier	fd		7101637	1					
ANR	7101773	Identifier	fd		7101637	1					
ANR	7101774	ExpressionStatement	"QLIST_INSERT_HEAD ( & cur_mon -> fds , monfd , next )"	64:4:734:779	7101637	20	True				
ANR	7101775	CallExpression	"QLIST_INSERT_HEAD ( & cur_mon -> fds , monfd , next )"		7101637	0					
ANR	7101776	Callee	QLIST_INSERT_HEAD		7101637	0					
ANR	7101777	Identifier	QLIST_INSERT_HEAD		7101637	0					
ANR	7101778	ArgumentList	& cur_mon -> fds		7101637	1					
ANR	7101779	Argument	& cur_mon -> fds		7101637	0					
ANR	7101780	UnaryOperationExpression	& cur_mon -> fds		7101637	0					
ANR	7101781	UnaryOperator	&		7101637	0					
ANR	7101782	PtrMemberAccess	cur_mon -> fds		7101637	1					
ANR	7101783	Identifier	cur_mon		7101637	0					
ANR	7101784	Identifier	fds		7101637	1					
ANR	7101785	Argument	monfd		7101637	1					
ANR	7101786	Identifier	monfd		7101637	0					
ANR	7101787	Argument	next		7101637	2					
ANR	7101788	Identifier	next		7101637	0					
ANR	7101789	ReturnType	void		7101637	1					
ANR	7101790	Identifier	qmp_getfd		7101637	2					
ANR	7101791	ParameterList	"const char * fdname , Error * * errp"		7101637	3					
ANR	7101792	Parameter	const char * fdname	1:15:15:32	7101637	0	True				
ANR	7101793	ParameterType	const char *		7101637	0					
ANR	7101794	Identifier	fdname		7101637	1					
ANR	7101795	Parameter	Error * * errp	1:35:35:46	7101637	1	True				
ANR	7101796	ParameterType	Error * *		7101637	0					
ANR	7101797	Identifier	errp		7101637	1					
ANR	7101798	CFGEntryNode	ENTRY		7101637		True				
ANR	7101799	CFGExitNode	EXIT		7101637		True				
ANR	7101800	CFGErrorNode	ERROR		7101637		True				
ANR	7101801	Symbol	strcmp		7101637						
ANR	7101802	Symbol	* monfd		7101637						
ANR	7101803	Symbol	next		7101637						
ANR	7101804	Symbol	QERR_FD_NOT_SUPPLIED		7101637						
ANR	7101805	Symbol	& cur_mon -> fds		7101637						
ANR	7101806	Symbol	errp		7101637						
ANR	7101807	Symbol	* fdname		7101637						
ANR	7101808	Symbol	fdname		7101637						
ANR	7101809	Symbol	cur_mon		7101637						
ANR	7101810	Symbol	cur_mon -> chr		7101637						
ANR	7101811	Symbol	monfd -> fd		7101637						
ANR	7101812	Symbol	monfd -> name		7101637						
ANR	7101813	Symbol	* cur_mon		7101637						
ANR	7101814	Symbol	g_strdup		7101637						
ANR	7101815	Symbol	g_malloc0		7101637						
ANR	7101816	Symbol	qemu_chr_fe_get_msgfd		7101637						
ANR	7101817	Symbol	monfd		7101637						
ANR	7101818	Symbol	fd		7101637						
ANR	7101819	Symbol	qemu_isdigit		7101637						
ANR	7101820	Symbol	QERR_INVALID_PARAMETER_VALUE		7101637						
