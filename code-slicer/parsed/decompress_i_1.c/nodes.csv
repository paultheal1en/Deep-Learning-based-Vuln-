command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2126815	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decompress_i_1.c								
ANR	2126816	Function	decompress_i	1:0:0:6178							
ANR	2126817	FunctionDef	"decompress_i (AVCodecContext * avctx , uint32_t * dst , int linesize)"		2126816	0					
ANR	2126818	CompoundStatement		3:0:77:6178	2126816	0					
ANR	2126819	IdentifierDeclStatement	SCPRContext * s = avctx -> priv_data ;	5:4:84:117	2126816	0	True				
ANR	2126820	IdentifierDecl	* s = avctx -> priv_data		2126816	0					
ANR	2126821	IdentifierDeclType	SCPRContext *		2126816	0					
ANR	2126822	Identifier	s		2126816	1					
ANR	2126823	AssignmentExpression	* s = avctx -> priv_data		2126816	2		=			
ANR	2126824	Identifier	s		2126816	0					
ANR	2126825	PtrMemberAccess	avctx -> priv_data		2126816	1					
ANR	2126826	Identifier	avctx		2126816	0					
ANR	2126827	Identifier	priv_data		2126816	1					
ANR	2126828	IdentifierDeclStatement	GetByteContext * gb = & s -> gb ;	7:4:124:151	2126816	1	True				
ANR	2126829	IdentifierDecl	* gb = & s -> gb		2126816	0					
ANR	2126830	IdentifierDeclType	GetByteContext *		2126816	0					
ANR	2126831	Identifier	gb		2126816	1					
ANR	2126832	AssignmentExpression	* gb = & s -> gb		2126816	2		=			
ANR	2126833	Identifier	gb		2126816	0					
ANR	2126834	UnaryOperationExpression	& s -> gb		2126816	1					
ANR	2126835	UnaryOperator	&		2126816	0					
ANR	2126836	PtrMemberAccess	s -> gb		2126816	1					
ANR	2126837	Identifier	s		2126816	0					
ANR	2126838	Identifier	gb		2126816	1					
ANR	2126839	IdentifierDeclStatement	"int cx = 0 , cx1 = 0 , k = 0 , clr = 0 ;"	9:4:158:193	2126816	2	True				
ANR	2126840	IdentifierDecl	cx = 0		2126816	0					
ANR	2126841	IdentifierDeclType	int		2126816	0					
ANR	2126842	Identifier	cx		2126816	1					
ANR	2126843	AssignmentExpression	cx = 0		2126816	2		=			
ANR	2126844	Identifier	cx		2126816	0					
ANR	2126845	PrimaryExpression	0		2126816	1					
ANR	2126846	IdentifierDecl	cx1 = 0		2126816	1					
ANR	2126847	IdentifierDeclType	int		2126816	0					
ANR	2126848	Identifier	cx1		2126816	1					
ANR	2126849	AssignmentExpression	cx1 = 0		2126816	2		=			
ANR	2126850	Identifier	cx1		2126816	0					
ANR	2126851	PrimaryExpression	0		2126816	1					
ANR	2126852	IdentifierDecl	k = 0		2126816	2					
ANR	2126853	IdentifierDeclType	int		2126816	0					
ANR	2126854	Identifier	k		2126816	1					
ANR	2126855	AssignmentExpression	k = 0		2126816	2		=			
ANR	2126856	Identifier	k		2126816	0					
ANR	2126857	PrimaryExpression	0		2126816	1					
ANR	2126858	IdentifierDecl	clr = 0		2126816	3					
ANR	2126859	IdentifierDeclType	int		2126816	0					
ANR	2126860	Identifier	clr		2126816	1					
ANR	2126861	AssignmentExpression	clr = 0		2126816	2		=			
ANR	2126862	Identifier	clr		2126816	0					
ANR	2126863	PrimaryExpression	0		2126816	1					
ANR	2126864	IdentifierDeclStatement	"int run , r , g , b , off , y = 0 , x = 0 , z , ret ;"	11:4:200:243	2126816	3	True				
ANR	2126865	IdentifierDecl	run		2126816	0					
ANR	2126866	IdentifierDeclType	int		2126816	0					
ANR	2126867	Identifier	run		2126816	1					
ANR	2126868	IdentifierDecl	r		2126816	1					
ANR	2126869	IdentifierDeclType	int		2126816	0					
ANR	2126870	Identifier	r		2126816	1					
ANR	2126871	IdentifierDecl	g		2126816	2					
ANR	2126872	IdentifierDeclType	int		2126816	0					
ANR	2126873	Identifier	g		2126816	1					
ANR	2126874	IdentifierDecl	b		2126816	3					
ANR	2126875	IdentifierDeclType	int		2126816	0					
ANR	2126876	Identifier	b		2126816	1					
ANR	2126877	IdentifierDecl	off		2126816	4					
ANR	2126878	IdentifierDeclType	int		2126816	0					
ANR	2126879	Identifier	off		2126816	1					
ANR	2126880	IdentifierDecl	y = 0		2126816	5					
ANR	2126881	IdentifierDeclType	int		2126816	0					
ANR	2126882	Identifier	y		2126816	1					
ANR	2126883	AssignmentExpression	y = 0		2126816	2		=			
ANR	2126884	Identifier	y		2126816	0					
ANR	2126885	PrimaryExpression	0		2126816	1					
ANR	2126886	IdentifierDecl	x = 0		2126816	6					
ANR	2126887	IdentifierDeclType	int		2126816	0					
ANR	2126888	Identifier	x		2126816	1					
ANR	2126889	AssignmentExpression	x = 0		2126816	2		=			
ANR	2126890	Identifier	x		2126816	0					
ANR	2126891	PrimaryExpression	0		2126816	1					
ANR	2126892	IdentifierDecl	z		2126816	7					
ANR	2126893	IdentifierDeclType	int		2126816	0					
ANR	2126894	Identifier	z		2126816	1					
ANR	2126895	IdentifierDecl	ret		2126816	8					
ANR	2126896	IdentifierDeclType	int		2126816	0					
ANR	2126897	Identifier	ret		2126816	1					
ANR	2126898	IdentifierDeclStatement	unsigned backstep = linesize - avctx -> width ;	13:4:250:293	2126816	4	True				
ANR	2126899	IdentifierDecl	backstep = linesize - avctx -> width		2126816	0					
ANR	2126900	IdentifierDeclType	unsigned		2126816	0					
ANR	2126901	Identifier	backstep		2126816	1					
ANR	2126902	AssignmentExpression	backstep = linesize - avctx -> width		2126816	2		=			
ANR	2126903	Identifier	backstep		2126816	0					
ANR	2126904	AdditiveExpression	linesize - avctx -> width		2126816	1		-			
ANR	2126905	Identifier	linesize		2126816	0					
ANR	2126906	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2126907	Identifier	avctx		2126816	0					
ANR	2126908	Identifier	width		2126816	1					
ANR	2126909	IdentifierDeclStatement	const int cxshift = s -> cxshift ;	15:4:300:330	2126816	5	True				
ANR	2126910	IdentifierDecl	cxshift = s -> cxshift		2126816	0					
ANR	2126911	IdentifierDeclType	const int		2126816	0					
ANR	2126912	Identifier	cxshift		2126816	1					
ANR	2126913	AssignmentExpression	cxshift = s -> cxshift		2126816	2		=			
ANR	2126914	Identifier	cxshift		2126816	0					
ANR	2126915	PtrMemberAccess	s -> cxshift		2126816	1					
ANR	2126916	Identifier	s		2126816	0					
ANR	2126917	Identifier	cxshift		2126816	1					
ANR	2126918	IdentifierDeclStatement	"unsigned lx , ly , ptype ;"	17:4:337:359	2126816	6	True				
ANR	2126919	IdentifierDecl	lx		2126816	0					
ANR	2126920	IdentifierDeclType	unsigned		2126816	0					
ANR	2126921	Identifier	lx		2126816	1					
ANR	2126922	IdentifierDecl	ly		2126816	1					
ANR	2126923	IdentifierDeclType	unsigned		2126816	0					
ANR	2126924	Identifier	ly		2126816	1					
ANR	2126925	IdentifierDecl	ptype		2126816	2					
ANR	2126926	IdentifierDeclType	unsigned		2126816	0					
ANR	2126927	Identifier	ptype		2126816	1					
ANR	2126928	ExpressionStatement	reinit_tables ( s )	21:4:368:384	2126816	7	True				
ANR	2126929	CallExpression	reinit_tables ( s )		2126816	0					
ANR	2126930	Callee	reinit_tables		2126816	0					
ANR	2126931	Identifier	reinit_tables		2126816	0					
ANR	2126932	ArgumentList	s		2126816	1					
ANR	2126933	Argument	s		2126816	0					
ANR	2126934	Identifier	s		2126816	0					
ANR	2126935	ExpressionStatement	"bytestream2_skip ( gb , 2 )"	23:4:391:414	2126816	8	True				
ANR	2126936	CallExpression	"bytestream2_skip ( gb , 2 )"		2126816	0					
ANR	2126937	Callee	bytestream2_skip		2126816	0					
ANR	2126938	Identifier	bytestream2_skip		2126816	0					
ANR	2126939	ArgumentList	gb		2126816	1					
ANR	2126940	Argument	gb		2126816	0					
ANR	2126941	Identifier	gb		2126816	0					
ANR	2126942	Argument	2		2126816	1					
ANR	2126943	PrimaryExpression	2		2126816	0					
ANR	2126944	ExpressionStatement	"init_rangecoder ( & s -> rc , gb )"	25:4:421:448	2126816	9	True				
ANR	2126945	CallExpression	"init_rangecoder ( & s -> rc , gb )"		2126816	0					
ANR	2126946	Callee	init_rangecoder		2126816	0					
ANR	2126947	Identifier	init_rangecoder		2126816	0					
ANR	2126948	ArgumentList	& s -> rc		2126816	1					
ANR	2126949	Argument	& s -> rc		2126816	0					
ANR	2126950	UnaryOperationExpression	& s -> rc		2126816	0					
ANR	2126951	UnaryOperator	&		2126816	0					
ANR	2126952	PtrMemberAccess	s -> rc		2126816	1					
ANR	2126953	Identifier	s		2126816	0					
ANR	2126954	Identifier	rc		2126816	1					
ANR	2126955	Argument	gb		2126816	1					
ANR	2126956	Identifier	gb		2126816	0					
ANR	2126957	WhileStatement	while ( k < avctx -> width + 1 )		2126816	10					
ANR	2126958	Condition	k < avctx -> width + 1	29:11:464:483	2126816	0	True				
ANR	2126959	RelationalExpression	k < avctx -> width + 1		2126816	0		<			
ANR	2126960	Identifier	k		2126816	0					
ANR	2126961	AdditiveExpression	avctx -> width + 1		2126816	1		+			
ANR	2126962	PtrMemberAccess	avctx -> width		2126816	0					
ANR	2126963	Identifier	avctx		2126816	0					
ANR	2126964	Identifier	width		2126816	1					
ANR	2126965	PrimaryExpression	1		2126816	1					
ANR	2126966	CompoundStatement		27:33:408:408	2126816	1					
ANR	2126967	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"	31:8:497:556	2126816	0	True				
ANR	2126968	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2126816	0		=			
ANR	2126969	Identifier	ret		2126816	0					
ANR	2126970	CallExpression	"decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2126816	1					
ANR	2126971	Callee	decode_unit		2126816	0					
ANR	2126972	Identifier	decode_unit		2126816	0					
ANR	2126973	ArgumentList	s		2126816	1					
ANR	2126974	Argument	s		2126816	0					
ANR	2126975	Identifier	s		2126816	0					
ANR	2126976	Argument	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	1					
ANR	2126977	UnaryOperationExpression	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	0					
ANR	2126978	UnaryOperator	&		2126816	0					
ANR	2126979	ArrayIndexing	s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	1					
ANR	2126980	ArrayIndexing	s -> pixel_model [ 0 ]		2126816	0					
ANR	2126981	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2126982	Identifier	s		2126816	0					
ANR	2126983	Identifier	pixel_model		2126816	1					
ANR	2126984	PrimaryExpression	0		2126816	1					
ANR	2126985	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2126986	Identifier	cx		2126816	0					
ANR	2126987	Identifier	cx1		2126816	1					
ANR	2126988	Argument	400		2126816	2					
ANR	2126989	PrimaryExpression	400		2126816	0					
ANR	2126990	Argument	& r		2126816	3					
ANR	2126991	UnaryOperationExpression	& r		2126816	0					
ANR	2126992	UnaryOperator	&		2126816	0					
ANR	2126993	Identifier	r		2126816	1					
ANR	2126994	IfStatement	if ( ret < 0 )		2126816	1					
ANR	2126995	Condition	ret < 0	33:12:571:577	2126816	0	True				
ANR	2126996	RelationalExpression	ret < 0		2126816	0		<			
ANR	2126997	Identifier	ret		2126816	0					
ANR	2126998	PrimaryExpression	0		2126816	1					
ANR	2126999	ReturnStatement	return ret ;	35:12:593:603	2126816	1	True				
ANR	2127000	Identifier	ret		2126816	0					
ANR	2127001	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	39:8:616:639	2126816	2	True				
ANR	2127002	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2126816	0		=			
ANR	2127003	Identifier	cx1		2126816	0					
ANR	2127004	BitAndExpression	( cx << 6 ) & 0xFC0		2126816	1		&			
ANR	2127005	ShiftExpression	cx << 6		2126816	0		<<			
ANR	2127006	Identifier	cx		2126816	0					
ANR	2127007	PrimaryExpression	6		2126816	1					
ANR	2127008	PrimaryExpression	0xFC0		2126816	1					
ANR	2127009	ExpressionStatement	cx = r >> cxshift	41:8:650:667	2126816	3	True				
ANR	2127010	AssignmentExpression	cx = r >> cxshift		2126816	0		=			
ANR	2127011	Identifier	cx		2126816	0					
ANR	2127012	ShiftExpression	r >> cxshift		2126816	1		>>			
ANR	2127013	Identifier	r		2126816	0					
ANR	2127014	Identifier	cxshift		2126816	1					
ANR	2127015	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"	43:8:678:737	2126816	4	True				
ANR	2127016	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2126816	0		=			
ANR	2127017	Identifier	ret		2126816	0					
ANR	2127018	CallExpression	"decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2126816	1					
ANR	2127019	Callee	decode_unit		2126816	0					
ANR	2127020	Identifier	decode_unit		2126816	0					
ANR	2127021	ArgumentList	s		2126816	1					
ANR	2127022	Argument	s		2126816	0					
ANR	2127023	Identifier	s		2126816	0					
ANR	2127024	Argument	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	1					
ANR	2127025	UnaryOperationExpression	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	0					
ANR	2127026	UnaryOperator	&		2126816	0					
ANR	2127027	ArrayIndexing	s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	1					
ANR	2127028	ArrayIndexing	s -> pixel_model [ 1 ]		2126816	0					
ANR	2127029	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2127030	Identifier	s		2126816	0					
ANR	2127031	Identifier	pixel_model		2126816	1					
ANR	2127032	PrimaryExpression	1		2126816	1					
ANR	2127033	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2127034	Identifier	cx		2126816	0					
ANR	2127035	Identifier	cx1		2126816	1					
ANR	2127036	Argument	400		2126816	2					
ANR	2127037	PrimaryExpression	400		2126816	0					
ANR	2127038	Argument	& g		2126816	3					
ANR	2127039	UnaryOperationExpression	& g		2126816	0					
ANR	2127040	UnaryOperator	&		2126816	0					
ANR	2127041	Identifier	g		2126816	1					
ANR	2127042	IfStatement	if ( ret < 0 )		2126816	5					
ANR	2127043	Condition	ret < 0	45:12:752:758	2126816	0	True				
ANR	2127044	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127045	Identifier	ret		2126816	0					
ANR	2127046	PrimaryExpression	0		2126816	1					
ANR	2127047	ReturnStatement	return ret ;	47:12:774:784	2126816	1	True				
ANR	2127048	Identifier	ret		2126816	0					
ANR	2127049	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	51:8:797:820	2126816	6	True				
ANR	2127050	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2126816	0		=			
ANR	2127051	Identifier	cx1		2126816	0					
ANR	2127052	BitAndExpression	( cx << 6 ) & 0xFC0		2126816	1		&			
ANR	2127053	ShiftExpression	cx << 6		2126816	0		<<			
ANR	2127054	Identifier	cx		2126816	0					
ANR	2127055	PrimaryExpression	6		2126816	1					
ANR	2127056	PrimaryExpression	0xFC0		2126816	1					
ANR	2127057	ExpressionStatement	cx = g >> cxshift	53:8:831:848	2126816	7	True				
ANR	2127058	AssignmentExpression	cx = g >> cxshift		2126816	0		=			
ANR	2127059	Identifier	cx		2126816	0					
ANR	2127060	ShiftExpression	g >> cxshift		2126816	1		>>			
ANR	2127061	Identifier	g		2126816	0					
ANR	2127062	Identifier	cxshift		2126816	1					
ANR	2127063	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"	55:8:859:918	2126816	8	True				
ANR	2127064	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2126816	0		=			
ANR	2127065	Identifier	ret		2126816	0					
ANR	2127066	CallExpression	"decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2126816	1					
ANR	2127067	Callee	decode_unit		2126816	0					
ANR	2127068	Identifier	decode_unit		2126816	0					
ANR	2127069	ArgumentList	s		2126816	1					
ANR	2127070	Argument	s		2126816	0					
ANR	2127071	Identifier	s		2126816	0					
ANR	2127072	Argument	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	1					
ANR	2127073	UnaryOperationExpression	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	0					
ANR	2127074	UnaryOperator	&		2126816	0					
ANR	2127075	ArrayIndexing	s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	1					
ANR	2127076	ArrayIndexing	s -> pixel_model [ 2 ]		2126816	0					
ANR	2127077	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2127078	Identifier	s		2126816	0					
ANR	2127079	Identifier	pixel_model		2126816	1					
ANR	2127080	PrimaryExpression	2		2126816	1					
ANR	2127081	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2127082	Identifier	cx		2126816	0					
ANR	2127083	Identifier	cx1		2126816	1					
ANR	2127084	Argument	400		2126816	2					
ANR	2127085	PrimaryExpression	400		2126816	0					
ANR	2127086	Argument	& b		2126816	3					
ANR	2127087	UnaryOperationExpression	& b		2126816	0					
ANR	2127088	UnaryOperator	&		2126816	0					
ANR	2127089	Identifier	b		2126816	1					
ANR	2127090	IfStatement	if ( ret < 0 )		2126816	9					
ANR	2127091	Condition	ret < 0	57:12:933:939	2126816	0	True				
ANR	2127092	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127093	Identifier	ret		2126816	0					
ANR	2127094	PrimaryExpression	0		2126816	1					
ANR	2127095	ReturnStatement	return ret ;	59:12:955:965	2126816	1	True				
ANR	2127096	Identifier	ret		2126816	0					
ANR	2127097	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	63:8:978:1001	2126816	10	True				
ANR	2127098	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2126816	0		=			
ANR	2127099	Identifier	cx1		2126816	0					
ANR	2127100	BitAndExpression	( cx << 6 ) & 0xFC0		2126816	1		&			
ANR	2127101	ShiftExpression	cx << 6		2126816	0		<<			
ANR	2127102	Identifier	cx		2126816	0					
ANR	2127103	PrimaryExpression	6		2126816	1					
ANR	2127104	PrimaryExpression	0xFC0		2126816	1					
ANR	2127105	ExpressionStatement	cx = b >> cxshift	65:8:1012:1029	2126816	11	True				
ANR	2127106	AssignmentExpression	cx = b >> cxshift		2126816	0		=			
ANR	2127107	Identifier	cx		2126816	0					
ANR	2127108	ShiftExpression	b >> cxshift		2126816	1		>>			
ANR	2127109	Identifier	b		2126816	0					
ANR	2127110	Identifier	cxshift		2126816	1					
ANR	2127111	ExpressionStatement	"ret = decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"	69:8:1042:1096	2126816	12	True				
ANR	2127112	AssignmentExpression	"ret = decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"		2126816	0		=			
ANR	2127113	Identifier	ret		2126816	0					
ANR	2127114	CallExpression	"decode_value ( s , s -> run_model [ 0 ] , 256 , 400 , & run )"		2126816	1					
ANR	2127115	Callee	decode_value		2126816	0					
ANR	2127116	Identifier	decode_value		2126816	0					
ANR	2127117	ArgumentList	s		2126816	1					
ANR	2127118	Argument	s		2126816	0					
ANR	2127119	Identifier	s		2126816	0					
ANR	2127120	Argument	s -> run_model [ 0 ]		2126816	1					
ANR	2127121	ArrayIndexing	s -> run_model [ 0 ]		2126816	0					
ANR	2127122	PtrMemberAccess	s -> run_model		2126816	0					
ANR	2127123	Identifier	s		2126816	0					
ANR	2127124	Identifier	run_model		2126816	1					
ANR	2127125	PrimaryExpression	0		2126816	1					
ANR	2127126	Argument	256		2126816	2					
ANR	2127127	PrimaryExpression	256		2126816	0					
ANR	2127128	Argument	400		2126816	3					
ANR	2127129	PrimaryExpression	400		2126816	0					
ANR	2127130	Argument	& run		2126816	4					
ANR	2127131	UnaryOperationExpression	& run		2126816	0					
ANR	2127132	UnaryOperator	&		2126816	0					
ANR	2127133	Identifier	run		2126816	1					
ANR	2127134	IfStatement	if ( ret < 0 )		2126816	13					
ANR	2127135	Condition	ret < 0	71:12:1111:1117	2126816	0	True				
ANR	2127136	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127137	Identifier	ret		2126816	0					
ANR	2127138	PrimaryExpression	0		2126816	1					
ANR	2127139	ReturnStatement	return ret ;	73:12:1133:1143	2126816	1	True				
ANR	2127140	Identifier	ret		2126816	0					
ANR	2127141	ExpressionStatement	clr = ( b << 16 ) + ( g << 8 ) + r	77:8:1156:1186	2126816	14	True				
ANR	2127142	AssignmentExpression	clr = ( b << 16 ) + ( g << 8 ) + r		2126816	0		=			
ANR	2127143	Identifier	clr		2126816	0					
ANR	2127144	AdditiveExpression	( b << 16 ) + ( g << 8 ) + r		2126816	1		+			
ANR	2127145	ShiftExpression	b << 16		2126816	0		<<			
ANR	2127146	Identifier	b		2126816	0					
ANR	2127147	PrimaryExpression	16		2126816	1					
ANR	2127148	AdditiveExpression	( g << 8 ) + r		2126816	1		+			
ANR	2127149	ShiftExpression	g << 8		2126816	0		<<			
ANR	2127150	Identifier	g		2126816	0					
ANR	2127151	PrimaryExpression	8		2126816	1					
ANR	2127152	Identifier	r		2126816	1					
ANR	2127153	ExpressionStatement	k += run	79:8:1197:1205	2126816	15	True				
ANR	2127154	AssignmentExpression	k += run		2126816	0		+=			
ANR	2127155	Identifier	k		2126816	0					
ANR	2127156	Identifier	run		2126816	1					
ANR	2127157	WhileStatement	while ( run -- > 0 )		2126816	16					
ANR	2127158	Condition	run -- > 0	81:15:1223:1231	2126816	0	True				
ANR	2127159	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127160	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127161	Identifier	run		2126816	0					
ANR	2127162	IncDec	--		2126816	1					
ANR	2127163	PrimaryExpression	0		2126816	1					
ANR	2127164	CompoundStatement		79:26:1156:1156	2126816	1					
ANR	2127165	IfStatement	if ( y >= avctx -> height )		2126816	0					
ANR	2127166	Condition	y >= avctx -> height	83:16:1253:1270	2126816	0	True				
ANR	2127167	RelationalExpression	y >= avctx -> height		2126816	0		>=			
ANR	2127168	Identifier	y		2126816	0					
ANR	2127169	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127170	Identifier	avctx		2126816	0					
ANR	2127171	Identifier	height		2126816	1					
ANR	2127172	ReturnStatement	return AVERROR_INVALIDDATA ;	85:16:1290:1316	2126816	1	True				
ANR	2127173	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127174	ExpressionStatement	dst [ y * linesize + x ] = clr	89:12:1333:1360	2126816	1	True				
ANR	2127175	AssignmentExpression	dst [ y * linesize + x ] = clr		2126816	0		=			
ANR	2127176	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127177	Identifier	dst		2126816	0					
ANR	2127178	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127179	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127180	Identifier	y		2126816	0					
ANR	2127181	Identifier	linesize		2126816	1					
ANR	2127182	Identifier	x		2126816	1					
ANR	2127183	Identifier	clr		2126816	1					
ANR	2127184	ExpressionStatement	lx = x	91:12:1375:1381	2126816	2	True				
ANR	2127185	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127186	Identifier	lx		2126816	0					
ANR	2127187	Identifier	x		2126816	1					
ANR	2127188	ExpressionStatement	ly = y	93:12:1396:1402	2126816	3	True				
ANR	2127189	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127190	Identifier	ly		2126816	0					
ANR	2127191	Identifier	y		2126816	1					
ANR	2127192	ExpressionStatement	x ++	95:12:1417:1420	2126816	4	True				
ANR	2127193	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127194	Identifier	x		2126816	0					
ANR	2127195	IncDec	++		2126816	1					
ANR	2127196	IfStatement	if ( x >= avctx -> width )		2126816	5					
ANR	2127197	Condition	x >= avctx -> width	97:16:1439:1455	2126816	0	True				
ANR	2127198	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127199	Identifier	x		2126816	0					
ANR	2127200	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127201	Identifier	avctx		2126816	0					
ANR	2127202	Identifier	width		2126816	1					
ANR	2127203	CompoundStatement		95:35:1380:1380	2126816	1					
ANR	2127204	ExpressionStatement	x = 0	99:16:1477:1482	2126816	0	True				
ANR	2127205	AssignmentExpression	x = 0		2126816	0		=			
ANR	2127206	Identifier	x		2126816	0					
ANR	2127207	PrimaryExpression	0		2126816	1					
ANR	2127208	ExpressionStatement	y ++	101:16:1501:1504	2126816	1	True				
ANR	2127209	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2127210	Identifier	y		2126816	0					
ANR	2127211	IncDec	++		2126816	1					
ANR	2127212	ExpressionStatement	off = - linesize - 1	109:4:1544:1563	2126816	11	True				
ANR	2127213	AssignmentExpression	off = - linesize - 1		2126816	0		=			
ANR	2127214	Identifier	off		2126816	0					
ANR	2127215	AdditiveExpression	- linesize - 1		2126816	1		-			
ANR	2127216	UnaryOperationExpression	- linesize		2126816	0					
ANR	2127217	UnaryOperator	-		2126816	0					
ANR	2127218	Identifier	linesize		2126816	1					
ANR	2127219	PrimaryExpression	1		2126816	1					
ANR	2127220	ExpressionStatement	ptype = 0	111:4:1570:1579	2126816	12	True				
ANR	2127221	AssignmentExpression	ptype = 0		2126816	0		=			
ANR	2127222	Identifier	ptype		2126816	0					
ANR	2127223	PrimaryExpression	0		2126816	1					
ANR	2127224	WhileStatement	while ( x < avctx -> width && y < avctx -> height )		2126816	13					
ANR	2127225	Condition	x < avctx -> width && y < avctx -> height	115:11:1595:1631	2126816	0	True				
ANR	2127226	AndExpression	x < avctx -> width && y < avctx -> height		2126816	0		&&			
ANR	2127227	RelationalExpression	x < avctx -> width		2126816	0		<			
ANR	2127228	Identifier	x		2126816	0					
ANR	2127229	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127230	Identifier	avctx		2126816	0					
ANR	2127231	Identifier	width		2126816	1					
ANR	2127232	RelationalExpression	y < avctx -> height		2126816	1		<			
ANR	2127233	Identifier	y		2126816	0					
ANR	2127234	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127235	Identifier	avctx		2126816	0					
ANR	2127236	Identifier	height		2126816	1					
ANR	2127237	CompoundStatement		113:50:1556:1556	2126816	1					
ANR	2127238	ExpressionStatement	"ret = decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"	117:8:1645:1703	2126816	0	True				
ANR	2127239	AssignmentExpression	"ret = decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"		2126816	0		=			
ANR	2127240	Identifier	ret		2126816	0					
ANR	2127241	CallExpression	"decode_value ( s , s -> op_model [ ptype ] , 6 , 1000 , & ptype )"		2126816	1					
ANR	2127242	Callee	decode_value		2126816	0					
ANR	2127243	Identifier	decode_value		2126816	0					
ANR	2127244	ArgumentList	s		2126816	1					
ANR	2127245	Argument	s		2126816	0					
ANR	2127246	Identifier	s		2126816	0					
ANR	2127247	Argument	s -> op_model [ ptype ]		2126816	1					
ANR	2127248	ArrayIndexing	s -> op_model [ ptype ]		2126816	0					
ANR	2127249	PtrMemberAccess	s -> op_model		2126816	0					
ANR	2127250	Identifier	s		2126816	0					
ANR	2127251	Identifier	op_model		2126816	1					
ANR	2127252	Identifier	ptype		2126816	1					
ANR	2127253	Argument	6		2126816	2					
ANR	2127254	PrimaryExpression	6		2126816	0					
ANR	2127255	Argument	1000		2126816	3					
ANR	2127256	PrimaryExpression	1000		2126816	0					
ANR	2127257	Argument	& ptype		2126816	4					
ANR	2127258	UnaryOperationExpression	& ptype		2126816	0					
ANR	2127259	UnaryOperator	&		2126816	0					
ANR	2127260	Identifier	ptype		2126816	1					
ANR	2127261	IfStatement	if ( ret < 0 )		2126816	1					
ANR	2127262	Condition	ret < 0	119:12:1718:1724	2126816	0	True				
ANR	2127263	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127264	Identifier	ret		2126816	0					
ANR	2127265	PrimaryExpression	0		2126816	1					
ANR	2127266	ReturnStatement	return ret ;	121:12:1740:1750	2126816	1	True				
ANR	2127267	Identifier	ret		2126816	0					
ANR	2127268	IfStatement	if ( ptype == 0 )		2126816	2					
ANR	2127269	Condition	ptype == 0	123:12:1765:1774	2126816	0	True				
ANR	2127270	EqualityExpression	ptype == 0		2126816	0		==			
ANR	2127271	Identifier	ptype		2126816	0					
ANR	2127272	PrimaryExpression	0		2126816	1					
ANR	2127273	CompoundStatement		121:24:1699:1699	2126816	1					
ANR	2127274	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"	125:12:1792:1851	2126816	0	True				
ANR	2127275	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2126816	0		=			
ANR	2127276	Identifier	ret		2126816	0					
ANR	2127277	CallExpression	"decode_unit ( s , & s -> pixel_model [ 0 ] [ cx + cx1 ] , 400 , & r )"		2126816	1					
ANR	2127278	Callee	decode_unit		2126816	0					
ANR	2127279	Identifier	decode_unit		2126816	0					
ANR	2127280	ArgumentList	s		2126816	1					
ANR	2127281	Argument	s		2126816	0					
ANR	2127282	Identifier	s		2126816	0					
ANR	2127283	Argument	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	1					
ANR	2127284	UnaryOperationExpression	& s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	0					
ANR	2127285	UnaryOperator	&		2126816	0					
ANR	2127286	ArrayIndexing	s -> pixel_model [ 0 ] [ cx + cx1 ]		2126816	1					
ANR	2127287	ArrayIndexing	s -> pixel_model [ 0 ]		2126816	0					
ANR	2127288	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2127289	Identifier	s		2126816	0					
ANR	2127290	Identifier	pixel_model		2126816	1					
ANR	2127291	PrimaryExpression	0		2126816	1					
ANR	2127292	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2127293	Identifier	cx		2126816	0					
ANR	2127294	Identifier	cx1		2126816	1					
ANR	2127295	Argument	400		2126816	2					
ANR	2127296	PrimaryExpression	400		2126816	0					
ANR	2127297	Argument	& r		2126816	3					
ANR	2127298	UnaryOperationExpression	& r		2126816	0					
ANR	2127299	UnaryOperator	&		2126816	0					
ANR	2127300	Identifier	r		2126816	1					
ANR	2127301	IfStatement	if ( ret < 0 )		2126816	1					
ANR	2127302	Condition	ret < 0	127:16:1870:1876	2126816	0	True				
ANR	2127303	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127304	Identifier	ret		2126816	0					
ANR	2127305	PrimaryExpression	0		2126816	1					
ANR	2127306	ReturnStatement	return ret ;	129:16:1896:1906	2126816	1	True				
ANR	2127307	Identifier	ret		2126816	0					
ANR	2127308	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	133:12:1923:1946	2126816	2	True				
ANR	2127309	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2126816	0		=			
ANR	2127310	Identifier	cx1		2126816	0					
ANR	2127311	BitAndExpression	( cx << 6 ) & 0xFC0		2126816	1		&			
ANR	2127312	ShiftExpression	cx << 6		2126816	0		<<			
ANR	2127313	Identifier	cx		2126816	0					
ANR	2127314	PrimaryExpression	6		2126816	1					
ANR	2127315	PrimaryExpression	0xFC0		2126816	1					
ANR	2127316	ExpressionStatement	cx = r >> cxshift	135:12:1961:1978	2126816	3	True				
ANR	2127317	AssignmentExpression	cx = r >> cxshift		2126816	0		=			
ANR	2127318	Identifier	cx		2126816	0					
ANR	2127319	ShiftExpression	r >> cxshift		2126816	1		>>			
ANR	2127320	Identifier	r		2126816	0					
ANR	2127321	Identifier	cxshift		2126816	1					
ANR	2127322	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"	137:12:1993:2052	2126816	4	True				
ANR	2127323	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2126816	0		=			
ANR	2127324	Identifier	ret		2126816	0					
ANR	2127325	CallExpression	"decode_unit ( s , & s -> pixel_model [ 1 ] [ cx + cx1 ] , 400 , & g )"		2126816	1					
ANR	2127326	Callee	decode_unit		2126816	0					
ANR	2127327	Identifier	decode_unit		2126816	0					
ANR	2127328	ArgumentList	s		2126816	1					
ANR	2127329	Argument	s		2126816	0					
ANR	2127330	Identifier	s		2126816	0					
ANR	2127331	Argument	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	1					
ANR	2127332	UnaryOperationExpression	& s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	0					
ANR	2127333	UnaryOperator	&		2126816	0					
ANR	2127334	ArrayIndexing	s -> pixel_model [ 1 ] [ cx + cx1 ]		2126816	1					
ANR	2127335	ArrayIndexing	s -> pixel_model [ 1 ]		2126816	0					
ANR	2127336	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2127337	Identifier	s		2126816	0					
ANR	2127338	Identifier	pixel_model		2126816	1					
ANR	2127339	PrimaryExpression	1		2126816	1					
ANR	2127340	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2127341	Identifier	cx		2126816	0					
ANR	2127342	Identifier	cx1		2126816	1					
ANR	2127343	Argument	400		2126816	2					
ANR	2127344	PrimaryExpression	400		2126816	0					
ANR	2127345	Argument	& g		2126816	3					
ANR	2127346	UnaryOperationExpression	& g		2126816	0					
ANR	2127347	UnaryOperator	&		2126816	0					
ANR	2127348	Identifier	g		2126816	1					
ANR	2127349	IfStatement	if ( ret < 0 )		2126816	5					
ANR	2127350	Condition	ret < 0	139:16:2071:2077	2126816	0	True				
ANR	2127351	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127352	Identifier	ret		2126816	0					
ANR	2127353	PrimaryExpression	0		2126816	1					
ANR	2127354	ReturnStatement	return ret ;	141:16:2097:2107	2126816	1	True				
ANR	2127355	Identifier	ret		2126816	0					
ANR	2127356	ExpressionStatement	cx1 = ( cx << 6 ) & 0xFC0	145:12:2124:2147	2126816	6	True				
ANR	2127357	AssignmentExpression	cx1 = ( cx << 6 ) & 0xFC0		2126816	0		=			
ANR	2127358	Identifier	cx1		2126816	0					
ANR	2127359	BitAndExpression	( cx << 6 ) & 0xFC0		2126816	1		&			
ANR	2127360	ShiftExpression	cx << 6		2126816	0		<<			
ANR	2127361	Identifier	cx		2126816	0					
ANR	2127362	PrimaryExpression	6		2126816	1					
ANR	2127363	PrimaryExpression	0xFC0		2126816	1					
ANR	2127364	ExpressionStatement	cx = g >> cxshift	147:12:2162:2179	2126816	7	True				
ANR	2127365	AssignmentExpression	cx = g >> cxshift		2126816	0		=			
ANR	2127366	Identifier	cx		2126816	0					
ANR	2127367	ShiftExpression	g >> cxshift		2126816	1		>>			
ANR	2127368	Identifier	g		2126816	0					
ANR	2127369	Identifier	cxshift		2126816	1					
ANR	2127370	ExpressionStatement	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"	149:12:2194:2253	2126816	8	True				
ANR	2127371	AssignmentExpression	"ret = decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2126816	0		=			
ANR	2127372	Identifier	ret		2126816	0					
ANR	2127373	CallExpression	"decode_unit ( s , & s -> pixel_model [ 2 ] [ cx + cx1 ] , 400 , & b )"		2126816	1					
ANR	2127374	Callee	decode_unit		2126816	0					
ANR	2127375	Identifier	decode_unit		2126816	0					
ANR	2127376	ArgumentList	s		2126816	1					
ANR	2127377	Argument	s		2126816	0					
ANR	2127378	Identifier	s		2126816	0					
ANR	2127379	Argument	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	1					
ANR	2127380	UnaryOperationExpression	& s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	0					
ANR	2127381	UnaryOperator	&		2126816	0					
ANR	2127382	ArrayIndexing	s -> pixel_model [ 2 ] [ cx + cx1 ]		2126816	1					
ANR	2127383	ArrayIndexing	s -> pixel_model [ 2 ]		2126816	0					
ANR	2127384	PtrMemberAccess	s -> pixel_model		2126816	0					
ANR	2127385	Identifier	s		2126816	0					
ANR	2127386	Identifier	pixel_model		2126816	1					
ANR	2127387	PrimaryExpression	2		2126816	1					
ANR	2127388	AdditiveExpression	cx + cx1		2126816	1		+			
ANR	2127389	Identifier	cx		2126816	0					
ANR	2127390	Identifier	cx1		2126816	1					
ANR	2127391	Argument	400		2126816	2					
ANR	2127392	PrimaryExpression	400		2126816	0					
ANR	2127393	Argument	& b		2126816	3					
ANR	2127394	UnaryOperationExpression	& b		2126816	0					
ANR	2127395	UnaryOperator	&		2126816	0					
ANR	2127396	Identifier	b		2126816	1					
ANR	2127397	IfStatement	if ( ret < 0 )		2126816	9					
ANR	2127398	Condition	ret < 0	151:16:2272:2278	2126816	0	True				
ANR	2127399	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127400	Identifier	ret		2126816	0					
ANR	2127401	PrimaryExpression	0		2126816	1					
ANR	2127402	ReturnStatement	return ret ;	153:16:2298:2308	2126816	1	True				
ANR	2127403	Identifier	ret		2126816	0					
ANR	2127404	ExpressionStatement	clr = ( b << 16 ) + ( g << 8 ) + r	157:12:2325:2355	2126816	10	True				
ANR	2127405	AssignmentExpression	clr = ( b << 16 ) + ( g << 8 ) + r		2126816	0		=			
ANR	2127406	Identifier	clr		2126816	0					
ANR	2127407	AdditiveExpression	( b << 16 ) + ( g << 8 ) + r		2126816	1		+			
ANR	2127408	ShiftExpression	b << 16		2126816	0		<<			
ANR	2127409	Identifier	b		2126816	0					
ANR	2127410	PrimaryExpression	16		2126816	1					
ANR	2127411	AdditiveExpression	( g << 8 ) + r		2126816	1		+			
ANR	2127412	ShiftExpression	g << 8		2126816	0		<<			
ANR	2127413	Identifier	g		2126816	0					
ANR	2127414	PrimaryExpression	8		2126816	1					
ANR	2127415	Identifier	r		2126816	1					
ANR	2127416	IfStatement	if ( ptype > 5 )		2126816	3					
ANR	2127417	Condition	ptype > 5	161:12:2381:2389	2126816	0	True				
ANR	2127418	RelationalExpression	ptype > 5		2126816	0		>			
ANR	2127419	Identifier	ptype		2126816	0					
ANR	2127420	PrimaryExpression	5		2126816	1					
ANR	2127421	ReturnStatement	return AVERROR_INVALIDDATA ;	163:12:2405:2431	2126816	1	True				
ANR	2127422	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127423	ExpressionStatement	"ret = decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"	165:8:2442:2500	2126816	4	True				
ANR	2127424	AssignmentExpression	"ret = decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"		2126816	0		=			
ANR	2127425	Identifier	ret		2126816	0					
ANR	2127426	CallExpression	"decode_value ( s , s -> run_model [ ptype ] , 256 , 400 , & run )"		2126816	1					
ANR	2127427	Callee	decode_value		2126816	0					
ANR	2127428	Identifier	decode_value		2126816	0					
ANR	2127429	ArgumentList	s		2126816	1					
ANR	2127430	Argument	s		2126816	0					
ANR	2127431	Identifier	s		2126816	0					
ANR	2127432	Argument	s -> run_model [ ptype ]		2126816	1					
ANR	2127433	ArrayIndexing	s -> run_model [ ptype ]		2126816	0					
ANR	2127434	PtrMemberAccess	s -> run_model		2126816	0					
ANR	2127435	Identifier	s		2126816	0					
ANR	2127436	Identifier	run_model		2126816	1					
ANR	2127437	Identifier	ptype		2126816	1					
ANR	2127438	Argument	256		2126816	2					
ANR	2127439	PrimaryExpression	256		2126816	0					
ANR	2127440	Argument	400		2126816	3					
ANR	2127441	PrimaryExpression	400		2126816	0					
ANR	2127442	Argument	& run		2126816	4					
ANR	2127443	UnaryOperationExpression	& run		2126816	0					
ANR	2127444	UnaryOperator	&		2126816	0					
ANR	2127445	Identifier	run		2126816	1					
ANR	2127446	IfStatement	if ( ret < 0 )		2126816	5					
ANR	2127447	Condition	ret < 0	167:12:2515:2521	2126816	0	True				
ANR	2127448	RelationalExpression	ret < 0		2126816	0		<			
ANR	2127449	Identifier	ret		2126816	0					
ANR	2127450	PrimaryExpression	0		2126816	1					
ANR	2127451	ReturnStatement	return ret ;	169:12:2537:2547	2126816	1	True				
ANR	2127452	Identifier	ret		2126816	0					
ANR	2127453	SwitchStatement	switch ( ptype )		2126816	6					
ANR	2127454	Condition	ptype	173:16:2568:2572	2126816	0	True				
ANR	2127455	Identifier	ptype		2126816	0					
ANR	2127456	CompoundStatement		171:23:2497:2497	2126816	1					
ANR	2127457	Label	case 0 :	175:8:2586:2592	2126816	0	True				
ANR	2127458	WhileStatement	while ( run -- > 0 )		2126816	1					
ANR	2127459	Condition	run -- > 0	177:19:2614:2622	2126816	0	True				
ANR	2127460	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127461	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127462	Identifier	run		2126816	0					
ANR	2127463	IncDec	--		2126816	1					
ANR	2127464	PrimaryExpression	0		2126816	1					
ANR	2127465	CompoundStatement		175:30:2547:2547	2126816	1					
ANR	2127466	IfStatement	if ( y >= avctx -> height )		2126816	0					
ANR	2127467	Condition	y >= avctx -> height	179:20:2648:2665	2126816	0	True				
ANR	2127468	RelationalExpression	y >= avctx -> height		2126816	0		>=			
ANR	2127469	Identifier	y		2126816	0					
ANR	2127470	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127471	Identifier	avctx		2126816	0					
ANR	2127472	Identifier	height		2126816	1					
ANR	2127473	ReturnStatement	return AVERROR_INVALIDDATA ;	181:20:2689:2715	2126816	1	True				
ANR	2127474	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127475	ExpressionStatement	dst [ y * linesize + x ] = clr	185:16:2736:2763	2126816	1	True				
ANR	2127476	AssignmentExpression	dst [ y * linesize + x ] = clr		2126816	0		=			
ANR	2127477	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127478	Identifier	dst		2126816	0					
ANR	2127479	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127480	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127481	Identifier	y		2126816	0					
ANR	2127482	Identifier	linesize		2126816	1					
ANR	2127483	Identifier	x		2126816	1					
ANR	2127484	Identifier	clr		2126816	1					
ANR	2127485	ExpressionStatement	lx = x	187:16:2782:2788	2126816	2	True				
ANR	2127486	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127487	Identifier	lx		2126816	0					
ANR	2127488	Identifier	x		2126816	1					
ANR	2127489	ExpressionStatement	ly = y	189:16:2807:2813	2126816	3	True				
ANR	2127490	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127491	Identifier	ly		2126816	0					
ANR	2127492	Identifier	y		2126816	1					
ANR	2127493	ExpressionStatement	x ++	191:16:2832:2835	2126816	4	True				
ANR	2127494	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127495	Identifier	x		2126816	0					
ANR	2127496	IncDec	++		2126816	1					
ANR	2127497	IfStatement	if ( x >= avctx -> width )		2126816	5					
ANR	2127498	Condition	x >= avctx -> width	193:20:2858:2874	2126816	0	True				
ANR	2127499	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127500	Identifier	x		2126816	0					
ANR	2127501	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127502	Identifier	avctx		2126816	0					
ANR	2127503	Identifier	width		2126816	1					
ANR	2127504	CompoundStatement		191:39:2799:2799	2126816	1					
ANR	2127505	ExpressionStatement	x = 0	195:20:2900:2905	2126816	0	True				
ANR	2127506	AssignmentExpression	x = 0		2126816	0		=			
ANR	2127507	Identifier	x		2126816	0					
ANR	2127508	PrimaryExpression	0		2126816	1					
ANR	2127509	ExpressionStatement	y ++	197:20:2928:2931	2126816	1	True				
ANR	2127510	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2127511	Identifier	y		2126816	0					
ANR	2127512	IncDec	++		2126816	1					
ANR	2127513	BreakStatement	break ;	203:12:2980:2985	2126816	2	True				
ANR	2127514	Label	case 1 :	205:8:2996:3002	2126816	3	True				
ANR	2127515	WhileStatement	while ( run -- > 0 )		2126816	4					
ANR	2127516	Condition	run -- > 0	207:19:3024:3032	2126816	0	True				
ANR	2127517	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127518	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127519	Identifier	run		2126816	0					
ANR	2127520	IncDec	--		2126816	1					
ANR	2127521	PrimaryExpression	0		2126816	1					
ANR	2127522	CompoundStatement		205:30:2957:2957	2126816	1					
ANR	2127523	IfStatement	if ( y >= avctx -> height )		2126816	0					
ANR	2127524	Condition	y >= avctx -> height	209:20:3058:3075	2126816	0	True				
ANR	2127525	RelationalExpression	y >= avctx -> height		2126816	0		>=			
ANR	2127526	Identifier	y		2126816	0					
ANR	2127527	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127528	Identifier	avctx		2126816	0					
ANR	2127529	Identifier	height		2126816	1					
ANR	2127530	ReturnStatement	return AVERROR_INVALIDDATA ;	211:20:3099:3125	2126816	1	True				
ANR	2127531	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127532	ExpressionStatement	dst [ y * linesize + x ] = dst [ ly * linesize + lx ]	215:16:3146:3193	2126816	1	True				
ANR	2127533	AssignmentExpression	dst [ y * linesize + x ] = dst [ ly * linesize + lx ]		2126816	0		=			
ANR	2127534	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127535	Identifier	dst		2126816	0					
ANR	2127536	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127537	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127538	Identifier	y		2126816	0					
ANR	2127539	Identifier	linesize		2126816	1					
ANR	2127540	Identifier	x		2126816	1					
ANR	2127541	ArrayIndexing	dst [ ly * linesize + lx ]		2126816	1					
ANR	2127542	Identifier	dst		2126816	0					
ANR	2127543	AdditiveExpression	ly * linesize + lx		2126816	1		+			
ANR	2127544	MultiplicativeExpression	ly * linesize		2126816	0		*			
ANR	2127545	Identifier	ly		2126816	0					
ANR	2127546	Identifier	linesize		2126816	1					
ANR	2127547	Identifier	lx		2126816	1					
ANR	2127548	ExpressionStatement	lx = x	217:16:3212:3218	2126816	2	True				
ANR	2127549	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127550	Identifier	lx		2126816	0					
ANR	2127551	Identifier	x		2126816	1					
ANR	2127552	ExpressionStatement	ly = y	219:16:3237:3243	2126816	3	True				
ANR	2127553	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127554	Identifier	ly		2126816	0					
ANR	2127555	Identifier	y		2126816	1					
ANR	2127556	ExpressionStatement	x ++	221:16:3262:3265	2126816	4	True				
ANR	2127557	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127558	Identifier	x		2126816	0					
ANR	2127559	IncDec	++		2126816	1					
ANR	2127560	IfStatement	if ( x >= avctx -> width )		2126816	5					
ANR	2127561	Condition	x >= avctx -> width	223:20:3288:3304	2126816	0	True				
ANR	2127562	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127563	Identifier	x		2126816	0					
ANR	2127564	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127565	Identifier	avctx		2126816	0					
ANR	2127566	Identifier	width		2126816	1					
ANR	2127567	CompoundStatement		221:39:3229:3229	2126816	1					
ANR	2127568	ExpressionStatement	x = 0	225:20:3330:3335	2126816	0	True				
ANR	2127569	AssignmentExpression	x = 0		2126816	0		=			
ANR	2127570	Identifier	x		2126816	0					
ANR	2127571	PrimaryExpression	0		2126816	1					
ANR	2127572	ExpressionStatement	y ++	227:20:3358:3361	2126816	1	True				
ANR	2127573	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2127574	Identifier	y		2126816	0					
ANR	2127575	IncDec	++		2126816	1					
ANR	2127576	ExpressionStatement	clr = dst [ ly * linesize + lx ]	233:12:3410:3439	2126816	5	True				
ANR	2127577	AssignmentExpression	clr = dst [ ly * linesize + lx ]		2126816	0		=			
ANR	2127578	Identifier	clr		2126816	0					
ANR	2127579	ArrayIndexing	dst [ ly * linesize + lx ]		2126816	1					
ANR	2127580	Identifier	dst		2126816	0					
ANR	2127581	AdditiveExpression	ly * linesize + lx		2126816	1		+			
ANR	2127582	MultiplicativeExpression	ly * linesize		2126816	0		*			
ANR	2127583	Identifier	ly		2126816	0					
ANR	2127584	Identifier	linesize		2126816	1					
ANR	2127585	Identifier	lx		2126816	1					
ANR	2127586	BreakStatement	break ;	235:12:3454:3459	2126816	6	True				
ANR	2127587	Label	case 2 :	237:8:3470:3476	2126816	7	True				
ANR	2127588	WhileStatement	while ( run -- > 0 )		2126816	8					
ANR	2127589	Condition	run -- > 0	239:19:3498:3506	2126816	0	True				
ANR	2127590	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127591	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127592	Identifier	run		2126816	0					
ANR	2127593	IncDec	--		2126816	1					
ANR	2127594	PrimaryExpression	0		2126816	1					
ANR	2127595	CompoundStatement		237:30:3431:3431	2126816	1					
ANR	2127596	IfStatement	if ( y < 1 || y >= avctx -> height )		2126816	0					
ANR	2127597	Condition	y < 1 || y >= avctx -> height	241:20:3532:3558	2126816	0	True				
ANR	2127598	OrExpression	y < 1 || y >= avctx -> height		2126816	0		||			
ANR	2127599	RelationalExpression	y < 1		2126816	0		<			
ANR	2127600	Identifier	y		2126816	0					
ANR	2127601	PrimaryExpression	1		2126816	1					
ANR	2127602	RelationalExpression	y >= avctx -> height		2126816	1		>=			
ANR	2127603	Identifier	y		2126816	0					
ANR	2127604	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127605	Identifier	avctx		2126816	0					
ANR	2127606	Identifier	height		2126816	1					
ANR	2127607	ReturnStatement	return AVERROR_INVALIDDATA ;	243:20:3582:3608	2126816	1	True				
ANR	2127608	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127609	ExpressionStatement	clr = dst [ y * linesize + x + off + 1 ]	247:16:3629:3666	2126816	1	True				
ANR	2127610	AssignmentExpression	clr = dst [ y * linesize + x + off + 1 ]		2126816	0		=			
ANR	2127611	Identifier	clr		2126816	0					
ANR	2127612	ArrayIndexing	dst [ y * linesize + x + off + 1 ]		2126816	1					
ANR	2127613	Identifier	dst		2126816	0					
ANR	2127614	AdditiveExpression	y * linesize + x + off + 1		2126816	1		+			
ANR	2127615	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127616	Identifier	y		2126816	0					
ANR	2127617	Identifier	linesize		2126816	1					
ANR	2127618	AdditiveExpression	x + off + 1		2126816	1		+			
ANR	2127619	Identifier	x		2126816	0					
ANR	2127620	AdditiveExpression	off + 1		2126816	1		+			
ANR	2127621	Identifier	off		2126816	0					
ANR	2127622	PrimaryExpression	1		2126816	1					
ANR	2127623	ExpressionStatement	dst [ y * linesize + x ] = clr	249:16:3685:3712	2126816	2	True				
ANR	2127624	AssignmentExpression	dst [ y * linesize + x ] = clr		2126816	0		=			
ANR	2127625	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127626	Identifier	dst		2126816	0					
ANR	2127627	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127628	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127629	Identifier	y		2126816	0					
ANR	2127630	Identifier	linesize		2126816	1					
ANR	2127631	Identifier	x		2126816	1					
ANR	2127632	Identifier	clr		2126816	1					
ANR	2127633	ExpressionStatement	lx = x	251:16:3731:3737	2126816	3	True				
ANR	2127634	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127635	Identifier	lx		2126816	0					
ANR	2127636	Identifier	x		2126816	1					
ANR	2127637	ExpressionStatement	ly = y	253:16:3756:3762	2126816	4	True				
ANR	2127638	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127639	Identifier	ly		2126816	0					
ANR	2127640	Identifier	y		2126816	1					
ANR	2127641	ExpressionStatement	x ++	255:16:3781:3784	2126816	5	True				
ANR	2127642	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127643	Identifier	x		2126816	0					
ANR	2127644	IncDec	++		2126816	1					
ANR	2127645	IfStatement	if ( x >= avctx -> width )		2126816	6					
ANR	2127646	Condition	x >= avctx -> width	257:20:3807:3823	2126816	0	True				
ANR	2127647	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127648	Identifier	x		2126816	0					
ANR	2127649	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127650	Identifier	avctx		2126816	0					
ANR	2127651	Identifier	width		2126816	1					
ANR	2127652	CompoundStatement		255:39:3748:3748	2126816	1					
ANR	2127653	ExpressionStatement	x = 0	259:20:3849:3854	2126816	0	True				
ANR	2127654	AssignmentExpression	x = 0		2126816	0		=			
ANR	2127655	Identifier	x		2126816	0					
ANR	2127656	PrimaryExpression	0		2126816	1					
ANR	2127657	ExpressionStatement	y ++	261:20:3877:3880	2126816	1	True				
ANR	2127658	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2127659	Identifier	y		2126816	0					
ANR	2127660	IncDec	++		2126816	1					
ANR	2127661	BreakStatement	break ;	267:12:3929:3934	2126816	9	True				
ANR	2127662	Label	case 4 :	269:8:3945:3951	2126816	10	True				
ANR	2127663	WhileStatement	while ( run -- > 0 )		2126816	11					
ANR	2127664	Condition	run -- > 0	271:19:3973:3981	2126816	0	True				
ANR	2127665	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127666	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127667	Identifier	run		2126816	0					
ANR	2127668	IncDec	--		2126816	1					
ANR	2127669	PrimaryExpression	0		2126816	1					
ANR	2127670	CompoundStatement		271:16:3925:3955	2126816	1					
ANR	2127671	IdentifierDeclStatement	uint8_t * odst = ( uint8_t * ) dst ;	273:16:4003:4033	2126816	0	True				
ANR	2127672	IdentifierDecl	* odst = ( uint8_t * ) dst		2126816	0					
ANR	2127673	IdentifierDeclType	uint8_t *		2126816	0					
ANR	2127674	Identifier	odst		2126816	1					
ANR	2127675	AssignmentExpression	* odst = ( uint8_t * ) dst		2126816	2		=			
ANR	2127676	Identifier	odst		2126816	0					
ANR	2127677	CastExpression	( uint8_t * ) dst		2126816	1					
ANR	2127678	CastTarget	uint8_t *		2126816	0					
ANR	2127679	Identifier	dst		2126816	1					
ANR	2127680	IfStatement	if ( y < 1 || y >= avctx -> height || ( y == 1 && x == 0 ) )		2126816	1					
ANR	2127681	Condition	y < 1 || y >= avctx -> height || ( y == 1 && x == 0 )	277:20:4058:4127	2126816	0	True				
ANR	2127682	OrExpression	y < 1 || y >= avctx -> height || ( y == 1 && x == 0 )		2126816	0		||			
ANR	2127683	RelationalExpression	y < 1		2126816	0		<			
ANR	2127684	Identifier	y		2126816	0					
ANR	2127685	PrimaryExpression	1		2126816	1					
ANR	2127686	OrExpression	y >= avctx -> height || ( y == 1 && x == 0 )		2126816	1		||			
ANR	2127687	RelationalExpression	y >= avctx -> height		2126816	0		>=			
ANR	2127688	Identifier	y		2126816	0					
ANR	2127689	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127690	Identifier	avctx		2126816	0					
ANR	2127691	Identifier	height		2126816	1					
ANR	2127692	AndExpression	y == 1 && x == 0		2126816	1		&&			
ANR	2127693	EqualityExpression	y == 1		2126816	0		==			
ANR	2127694	Identifier	y		2126816	0					
ANR	2127695	PrimaryExpression	1		2126816	1					
ANR	2127696	EqualityExpression	x == 0		2126816	1		==			
ANR	2127697	Identifier	x		2126816	0					
ANR	2127698	PrimaryExpression	0		2126816	1					
ANR	2127699	ReturnStatement	return AVERROR_INVALIDDATA ;	281:20:4151:4177	2126816	1	True				
ANR	2127700	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127701	IfStatement	if ( x == 0 )		2126816	2					
ANR	2127702	Condition	x == 0	285:20:4202:4207	2126816	0	True				
ANR	2127703	EqualityExpression	x == 0		2126816	0		==			
ANR	2127704	Identifier	x		2126816	0					
ANR	2127705	PrimaryExpression	0		2126816	1					
ANR	2127706	CompoundStatement		283:28:4132:4132	2126816	1					
ANR	2127707	ExpressionStatement	z = backstep	287:20:4233:4245	2126816	0	True				
ANR	2127708	AssignmentExpression	z = backstep		2126816	0		=			
ANR	2127709	Identifier	z		2126816	0					
ANR	2127710	Identifier	backstep		2126816	1					
ANR	2127711	ElseStatement	else		2126816	0					
ANR	2127712	CompoundStatement		287:23:4193:4193	2126816	0					
ANR	2127713	ExpressionStatement	z = 0	291:20:4294:4299	2126816	0	True				
ANR	2127714	AssignmentExpression	z = 0		2126816	0		=			
ANR	2127715	Identifier	z		2126816	0					
ANR	2127716	PrimaryExpression	0		2126816	1					
ANR	2127717	ExpressionStatement	r = odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 ]	297:16:4339:4505	2126816	3	True				
ANR	2127718	AssignmentExpression	r = odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 ]		2126816	0		=			
ANR	2127719	Identifier	r		2126816	0					
ANR	2127720	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 ]		2126816	1		+			
ANR	2127721	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 ]		2126816	0					
ANR	2127722	Identifier	odst		2126816	0					
ANR	2127723	MultiplicativeExpression	( ly * linesize + lx ) * 4		2126816	1		*			
ANR	2127724	AdditiveExpression	ly * linesize + lx		2126816	0		+			
ANR	2127725	MultiplicativeExpression	ly * linesize		2126816	0		*			
ANR	2127726	Identifier	ly		2126816	0					
ANR	2127727	Identifier	linesize		2126816	1					
ANR	2127728	Identifier	lx		2126816	1					
ANR	2127729	PrimaryExpression	4		2126816	1					
ANR	2127730	AdditiveExpression	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 4 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 ]		2126816	1		-			
ANR	2127731	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 4 ]		2126816	0					
ANR	2127732	Identifier	odst		2126816	0					
ANR	2127733	AdditiveExpression	( ( y * linesize + x ) + off - z ) * 4 + 4		2126816	1		+			
ANR	2127734	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	0		*			
ANR	2127735	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127736	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127737	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127738	Identifier	y		2126816	0					
ANR	2127739	Identifier	linesize		2126816	1					
ANR	2127740	Identifier	x		2126816	1					
ANR	2127741	AdditiveExpression	off - z		2126816	1		-			
ANR	2127742	Identifier	off		2126816	0					
ANR	2127743	Identifier	z		2126816	1					
ANR	2127744	PrimaryExpression	4		2126816	1					
ANR	2127745	PrimaryExpression	4		2126816	1					
ANR	2127746	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 ]		2126816	1					
ANR	2127747	Identifier	odst		2126816	0					
ANR	2127748	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	1		*			
ANR	2127749	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127750	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127751	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127752	Identifier	y		2126816	0					
ANR	2127753	Identifier	linesize		2126816	1					
ANR	2127754	Identifier	x		2126816	1					
ANR	2127755	AdditiveExpression	off - z		2126816	1		-			
ANR	2127756	Identifier	off		2126816	0					
ANR	2127757	Identifier	z		2126816	1					
ANR	2127758	PrimaryExpression	4		2126816	1					
ANR	2127759	ExpressionStatement	g = odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 1 ]	303:16:4524:4698	2126816	4	True				
ANR	2127760	AssignmentExpression	g = odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 1 ]		2126816	0		=			
ANR	2127761	Identifier	g		2126816	0					
ANR	2127762	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 + 1 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 1 ]		2126816	1		+			
ANR	2127763	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 + 1 ]		2126816	0					
ANR	2127764	Identifier	odst		2126816	0					
ANR	2127765	AdditiveExpression	( ly * linesize + lx ) * 4 + 1		2126816	1		+			
ANR	2127766	MultiplicativeExpression	( ly * linesize + lx ) * 4		2126816	0		*			
ANR	2127767	AdditiveExpression	ly * linesize + lx		2126816	0		+			
ANR	2127768	MultiplicativeExpression	ly * linesize		2126816	0		*			
ANR	2127769	Identifier	ly		2126816	0					
ANR	2127770	Identifier	linesize		2126816	1					
ANR	2127771	Identifier	lx		2126816	1					
ANR	2127772	PrimaryExpression	4		2126816	1					
ANR	2127773	PrimaryExpression	1		2126816	1					
ANR	2127774	AdditiveExpression	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 5 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 1 ]		2126816	1		-			
ANR	2127775	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 5 ]		2126816	0					
ANR	2127776	Identifier	odst		2126816	0					
ANR	2127777	AdditiveExpression	( ( y * linesize + x ) + off - z ) * 4 + 5		2126816	1		+			
ANR	2127778	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	0		*			
ANR	2127779	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127780	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127781	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127782	Identifier	y		2126816	0					
ANR	2127783	Identifier	linesize		2126816	1					
ANR	2127784	Identifier	x		2126816	1					
ANR	2127785	AdditiveExpression	off - z		2126816	1		-			
ANR	2127786	Identifier	off		2126816	0					
ANR	2127787	Identifier	z		2126816	1					
ANR	2127788	PrimaryExpression	4		2126816	1					
ANR	2127789	PrimaryExpression	5		2126816	1					
ANR	2127790	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 1 ]		2126816	1					
ANR	2127791	Identifier	odst		2126816	0					
ANR	2127792	AdditiveExpression	( ( y * linesize + x ) + off - z ) * 4 + 1		2126816	1		+			
ANR	2127793	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	0		*			
ANR	2127794	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127795	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127796	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127797	Identifier	y		2126816	0					
ANR	2127798	Identifier	linesize		2126816	1					
ANR	2127799	Identifier	x		2126816	1					
ANR	2127800	AdditiveExpression	off - z		2126816	1		-			
ANR	2127801	Identifier	off		2126816	0					
ANR	2127802	Identifier	z		2126816	1					
ANR	2127803	PrimaryExpression	4		2126816	1					
ANR	2127804	PrimaryExpression	1		2126816	1					
ANR	2127805	ExpressionStatement	b = odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 2 ]	309:16:4717:4891	2126816	5	True				
ANR	2127806	AssignmentExpression	b = odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 2 ]		2126816	0		=			
ANR	2127807	Identifier	b		2126816	0					
ANR	2127808	AdditiveExpression	odst [ ( ly * linesize + lx ) * 4 + 2 ] + odst [ ( ( y * linesize + x ) + off - z ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 2 ]		2126816	1		+			
ANR	2127809	ArrayIndexing	odst [ ( ly * linesize + lx ) * 4 + 2 ]		2126816	0					
ANR	2127810	Identifier	odst		2126816	0					
ANR	2127811	AdditiveExpression	( ly * linesize + lx ) * 4 + 2		2126816	1		+			
ANR	2127812	MultiplicativeExpression	( ly * linesize + lx ) * 4		2126816	0		*			
ANR	2127813	AdditiveExpression	ly * linesize + lx		2126816	0		+			
ANR	2127814	MultiplicativeExpression	ly * linesize		2126816	0		*			
ANR	2127815	Identifier	ly		2126816	0					
ANR	2127816	Identifier	linesize		2126816	1					
ANR	2127817	Identifier	lx		2126816	1					
ANR	2127818	PrimaryExpression	4		2126816	1					
ANR	2127819	PrimaryExpression	2		2126816	1					
ANR	2127820	AdditiveExpression	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 6 ] - odst [ ( ( y * linesize + x ) + off - z ) * 4 + 2 ]		2126816	1		-			
ANR	2127821	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 6 ]		2126816	0					
ANR	2127822	Identifier	odst		2126816	0					
ANR	2127823	AdditiveExpression	( ( y * linesize + x ) + off - z ) * 4 + 6		2126816	1		+			
ANR	2127824	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	0		*			
ANR	2127825	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127826	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127827	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127828	Identifier	y		2126816	0					
ANR	2127829	Identifier	linesize		2126816	1					
ANR	2127830	Identifier	x		2126816	1					
ANR	2127831	AdditiveExpression	off - z		2126816	1		-			
ANR	2127832	Identifier	off		2126816	0					
ANR	2127833	Identifier	z		2126816	1					
ANR	2127834	PrimaryExpression	4		2126816	1					
ANR	2127835	PrimaryExpression	6		2126816	1					
ANR	2127836	ArrayIndexing	odst [ ( ( y * linesize + x ) + off - z ) * 4 + 2 ]		2126816	1					
ANR	2127837	Identifier	odst		2126816	0					
ANR	2127838	AdditiveExpression	( ( y * linesize + x ) + off - z ) * 4 + 2		2126816	1		+			
ANR	2127839	MultiplicativeExpression	( ( y * linesize + x ) + off - z ) * 4		2126816	0		*			
ANR	2127840	AdditiveExpression	( y * linesize + x ) + off - z		2126816	0		+			
ANR	2127841	AdditiveExpression	y * linesize + x		2126816	0		+			
ANR	2127842	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127843	Identifier	y		2126816	0					
ANR	2127844	Identifier	linesize		2126816	1					
ANR	2127845	Identifier	x		2126816	1					
ANR	2127846	AdditiveExpression	off - z		2126816	1		-			
ANR	2127847	Identifier	off		2126816	0					
ANR	2127848	Identifier	z		2126816	1					
ANR	2127849	PrimaryExpression	4		2126816	1					
ANR	2127850	PrimaryExpression	2		2126816	1					
ANR	2127851	ExpressionStatement	clr = ( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )	315:16:4910:4967	2126816	6	True				
ANR	2127852	AssignmentExpression	clr = ( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2126816	0		=			
ANR	2127853	Identifier	clr		2126816	0					
ANR	2127854	AdditiveExpression	( ( b & 0xFF ) << 16 ) + ( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2126816	1		+			
ANR	2127855	ShiftExpression	( b & 0xFF ) << 16		2126816	0		<<			
ANR	2127856	BitAndExpression	b & 0xFF		2126816	0		&			
ANR	2127857	Identifier	b		2126816	0					
ANR	2127858	PrimaryExpression	0xFF		2126816	1					
ANR	2127859	PrimaryExpression	16		2126816	1					
ANR	2127860	AdditiveExpression	( ( g & 0xFF ) << 8 ) + ( r & 0xFF )		2126816	1		+			
ANR	2127861	ShiftExpression	( g & 0xFF ) << 8		2126816	0		<<			
ANR	2127862	BitAndExpression	g & 0xFF		2126816	0		&			
ANR	2127863	Identifier	g		2126816	0					
ANR	2127864	PrimaryExpression	0xFF		2126816	1					
ANR	2127865	PrimaryExpression	8		2126816	1					
ANR	2127866	BitAndExpression	r & 0xFF		2126816	1		&			
ANR	2127867	Identifier	r		2126816	0					
ANR	2127868	PrimaryExpression	0xFF		2126816	1					
ANR	2127869	ExpressionStatement	dst [ y * linesize + x ] = clr	317:16:4986:5013	2126816	7	True				
ANR	2127870	AssignmentExpression	dst [ y * linesize + x ] = clr		2126816	0		=			
ANR	2127871	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127872	Identifier	dst		2126816	0					
ANR	2127873	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127874	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127875	Identifier	y		2126816	0					
ANR	2127876	Identifier	linesize		2126816	1					
ANR	2127877	Identifier	x		2126816	1					
ANR	2127878	Identifier	clr		2126816	1					
ANR	2127879	ExpressionStatement	lx = x	319:16:5032:5038	2126816	8	True				
ANR	2127880	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127881	Identifier	lx		2126816	0					
ANR	2127882	Identifier	x		2126816	1					
ANR	2127883	ExpressionStatement	ly = y	321:16:5057:5063	2126816	9	True				
ANR	2127884	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127885	Identifier	ly		2126816	0					
ANR	2127886	Identifier	y		2126816	1					
ANR	2127887	ExpressionStatement	x ++	323:16:5082:5085	2126816	10	True				
ANR	2127888	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127889	Identifier	x		2126816	0					
ANR	2127890	IncDec	++		2126816	1					
ANR	2127891	IfStatement	if ( x >= avctx -> width )		2126816	11					
ANR	2127892	Condition	x >= avctx -> width	325:20:5108:5124	2126816	0	True				
ANR	2127893	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127894	Identifier	x		2126816	0					
ANR	2127895	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127896	Identifier	avctx		2126816	0					
ANR	2127897	Identifier	width		2126816	1					
ANR	2127898	CompoundStatement		323:39:5049:5049	2126816	1					
ANR	2127899	ExpressionStatement	x = 0	327:20:5150:5155	2126816	0	True				
ANR	2127900	AssignmentExpression	x = 0		2126816	0		=			
ANR	2127901	Identifier	x		2126816	0					
ANR	2127902	PrimaryExpression	0		2126816	1					
ANR	2127903	ExpressionStatement	y ++	329:20:5178:5181	2126816	1	True				
ANR	2127904	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2127905	Identifier	y		2126816	0					
ANR	2127906	IncDec	++		2126816	1					
ANR	2127907	BreakStatement	break ;	335:12:5230:5235	2126816	12	True				
ANR	2127908	Label	case 5 :	337:8:5246:5252	2126816	13	True				
ANR	2127909	WhileStatement	while ( run -- > 0 )		2126816	14					
ANR	2127910	Condition	run -- > 0	339:19:5274:5282	2126816	0	True				
ANR	2127911	RelationalExpression	run -- > 0		2126816	0		>			
ANR	2127912	PostIncDecOperationExpression	run --		2126816	0					
ANR	2127913	Identifier	run		2126816	0					
ANR	2127914	IncDec	--		2126816	1					
ANR	2127915	PrimaryExpression	0		2126816	1					
ANR	2127916	CompoundStatement		337:30:5207:5207	2126816	1					
ANR	2127917	IfStatement	if ( y < 1 || y >= avctx -> height || ( y == 1 && x == 0 ) )		2126816	0					
ANR	2127918	Condition	y < 1 || y >= avctx -> height || ( y == 1 && x == 0 )	341:20:5308:5377	2126816	0	True				
ANR	2127919	OrExpression	y < 1 || y >= avctx -> height || ( y == 1 && x == 0 )		2126816	0		||			
ANR	2127920	RelationalExpression	y < 1		2126816	0		<			
ANR	2127921	Identifier	y		2126816	0					
ANR	2127922	PrimaryExpression	1		2126816	1					
ANR	2127923	OrExpression	y >= avctx -> height || ( y == 1 && x == 0 )		2126816	1		||			
ANR	2127924	RelationalExpression	y >= avctx -> height		2126816	0		>=			
ANR	2127925	Identifier	y		2126816	0					
ANR	2127926	PtrMemberAccess	avctx -> height		2126816	1					
ANR	2127927	Identifier	avctx		2126816	0					
ANR	2127928	Identifier	height		2126816	1					
ANR	2127929	AndExpression	y == 1 && x == 0		2126816	1		&&			
ANR	2127930	EqualityExpression	y == 1		2126816	0		==			
ANR	2127931	Identifier	y		2126816	0					
ANR	2127932	PrimaryExpression	1		2126816	1					
ANR	2127933	EqualityExpression	x == 0		2126816	1		==			
ANR	2127934	Identifier	x		2126816	0					
ANR	2127935	PrimaryExpression	0		2126816	1					
ANR	2127936	ReturnStatement	return AVERROR_INVALIDDATA ;	345:20:5401:5427	2126816	1	True				
ANR	2127937	Identifier	AVERROR_INVALIDDATA		2126816	0					
ANR	2127938	IfStatement	if ( x == 0 )		2126816	1					
ANR	2127939	Condition	x == 0	349:20:5452:5457	2126816	0	True				
ANR	2127940	EqualityExpression	x == 0		2126816	0		==			
ANR	2127941	Identifier	x		2126816	0					
ANR	2127942	PrimaryExpression	0		2126816	1					
ANR	2127943	CompoundStatement		347:28:5382:5382	2126816	1					
ANR	2127944	ExpressionStatement	z = backstep	351:20:5483:5495	2126816	0	True				
ANR	2127945	AssignmentExpression	z = backstep		2126816	0		=			
ANR	2127946	Identifier	z		2126816	0					
ANR	2127947	Identifier	backstep		2126816	1					
ANR	2127948	ElseStatement	else		2126816	0					
ANR	2127949	CompoundStatement		351:23:5443:5443	2126816	0					
ANR	2127950	ExpressionStatement	z = 0	355:20:5544:5549	2126816	0	True				
ANR	2127951	AssignmentExpression	z = 0		2126816	0		=			
ANR	2127952	Identifier	z		2126816	0					
ANR	2127953	PrimaryExpression	0		2126816	1					
ANR	2127954	ExpressionStatement	clr = dst [ y * linesize + x + off - z ]	361:16:5589:5626	2126816	2	True				
ANR	2127955	AssignmentExpression	clr = dst [ y * linesize + x + off - z ]		2126816	0		=			
ANR	2127956	Identifier	clr		2126816	0					
ANR	2127957	ArrayIndexing	dst [ y * linesize + x + off - z ]		2126816	1					
ANR	2127958	Identifier	dst		2126816	0					
ANR	2127959	AdditiveExpression	y * linesize + x + off - z		2126816	1		+			
ANR	2127960	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127961	Identifier	y		2126816	0					
ANR	2127962	Identifier	linesize		2126816	1					
ANR	2127963	AdditiveExpression	x + off - z		2126816	1		+			
ANR	2127964	Identifier	x		2126816	0					
ANR	2127965	AdditiveExpression	off - z		2126816	1		-			
ANR	2127966	Identifier	off		2126816	0					
ANR	2127967	Identifier	z		2126816	1					
ANR	2127968	ExpressionStatement	dst [ y * linesize + x ] = clr	363:16:5645:5672	2126816	3	True				
ANR	2127969	AssignmentExpression	dst [ y * linesize + x ] = clr		2126816	0		=			
ANR	2127970	ArrayIndexing	dst [ y * linesize + x ]		2126816	0					
ANR	2127971	Identifier	dst		2126816	0					
ANR	2127972	AdditiveExpression	y * linesize + x		2126816	1		+			
ANR	2127973	MultiplicativeExpression	y * linesize		2126816	0		*			
ANR	2127974	Identifier	y		2126816	0					
ANR	2127975	Identifier	linesize		2126816	1					
ANR	2127976	Identifier	x		2126816	1					
ANR	2127977	Identifier	clr		2126816	1					
ANR	2127978	ExpressionStatement	lx = x	365:16:5691:5697	2126816	4	True				
ANR	2127979	AssignmentExpression	lx = x		2126816	0		=			
ANR	2127980	Identifier	lx		2126816	0					
ANR	2127981	Identifier	x		2126816	1					
ANR	2127982	ExpressionStatement	ly = y	367:16:5716:5722	2126816	5	True				
ANR	2127983	AssignmentExpression	ly = y		2126816	0		=			
ANR	2127984	Identifier	ly		2126816	0					
ANR	2127985	Identifier	y		2126816	1					
ANR	2127986	ExpressionStatement	x ++	369:16:5741:5744	2126816	6	True				
ANR	2127987	PostIncDecOperationExpression	x ++		2126816	0					
ANR	2127988	Identifier	x		2126816	0					
ANR	2127989	IncDec	++		2126816	1					
ANR	2127990	IfStatement	if ( x >= avctx -> width )		2126816	7					
ANR	2127991	Condition	x >= avctx -> width	371:20:5767:5783	2126816	0	True				
ANR	2127992	RelationalExpression	x >= avctx -> width		2126816	0		>=			
ANR	2127993	Identifier	x		2126816	0					
ANR	2127994	PtrMemberAccess	avctx -> width		2126816	1					
ANR	2127995	Identifier	avctx		2126816	0					
ANR	2127996	Identifier	width		2126816	1					
ANR	2127997	CompoundStatement		369:39:5708:5708	2126816	1					
ANR	2127998	ExpressionStatement	x = 0	373:20:5809:5814	2126816	0	True				
ANR	2127999	AssignmentExpression	x = 0		2126816	0		=			
ANR	2128000	Identifier	x		2126816	0					
ANR	2128001	PrimaryExpression	0		2126816	1					
ANR	2128002	ExpressionStatement	y ++	375:20:5837:5840	2126816	1	True				
ANR	2128003	PostIncDecOperationExpression	y ++		2126816	0					
ANR	2128004	Identifier	y		2126816	0					
ANR	2128005	IncDec	++		2126816	1					
ANR	2128006	BreakStatement	break ;	381:12:5889:5894	2126816	15	True				
ANR	2128007	IfStatement	if ( avctx -> bits_per_coded_sample == 16 )		2126816	7					
ANR	2128008	Condition	avctx -> bits_per_coded_sample == 16	387:12:5922:5955	2126816	0	True				
ANR	2128009	EqualityExpression	avctx -> bits_per_coded_sample == 16		2126816	0		==			
ANR	2128010	PtrMemberAccess	avctx -> bits_per_coded_sample		2126816	0					
ANR	2128011	Identifier	avctx		2126816	0					
ANR	2128012	Identifier	bits_per_coded_sample		2126816	1					
ANR	2128013	PrimaryExpression	16		2126816	1					
ANR	2128014	CompoundStatement		385:48:5880:5880	2126816	1					
ANR	2128015	ExpressionStatement	cx1 = ( clr & 0x3F00 ) >> 2	389:12:5973:5998	2126816	0	True				
ANR	2128016	AssignmentExpression	cx1 = ( clr & 0x3F00 ) >> 2		2126816	0		=			
ANR	2128017	Identifier	cx1		2126816	0					
ANR	2128018	ShiftExpression	( clr & 0x3F00 ) >> 2		2126816	1		>>			
ANR	2128019	BitAndExpression	clr & 0x3F00		2126816	0		&			
ANR	2128020	Identifier	clr		2126816	0					
ANR	2128021	PrimaryExpression	0x3F00		2126816	1					
ANR	2128022	PrimaryExpression	2		2126816	1					
ANR	2128023	ExpressionStatement	cx = ( clr & 0xFFFFFF ) >> 16	391:12:6013:6040	2126816	1	True				
ANR	2128024	AssignmentExpression	cx = ( clr & 0xFFFFFF ) >> 16		2126816	0		=			
ANR	2128025	Identifier	cx		2126816	0					
ANR	2128026	ShiftExpression	( clr & 0xFFFFFF ) >> 16		2126816	1		>>			
ANR	2128027	BitAndExpression	clr & 0xFFFFFF		2126816	0		&			
ANR	2128028	Identifier	clr		2126816	0					
ANR	2128029	PrimaryExpression	0xFFFFFF		2126816	1					
ANR	2128030	PrimaryExpression	16		2126816	1					
ANR	2128031	ElseStatement	else		2126816	0					
ANR	2128032	CompoundStatement		391:15:5980:5980	2126816	0					
ANR	2128033	ExpressionStatement	cx1 = ( clr & 0xFC00 ) >> 4	395:12:6073:6098	2126816	0	True				
ANR	2128034	AssignmentExpression	cx1 = ( clr & 0xFC00 ) >> 4		2126816	0		=			
ANR	2128035	Identifier	cx1		2126816	0					
ANR	2128036	ShiftExpression	( clr & 0xFC00 ) >> 4		2126816	1		>>			
ANR	2128037	BitAndExpression	clr & 0xFC00		2126816	0		&			
ANR	2128038	Identifier	clr		2126816	0					
ANR	2128039	PrimaryExpression	0xFC00		2126816	1					
ANR	2128040	PrimaryExpression	4		2126816	1					
ANR	2128041	ExpressionStatement	cx = ( clr & 0xFFFFFF ) >> 18	397:12:6113:6140	2126816	1	True				
ANR	2128042	AssignmentExpression	cx = ( clr & 0xFFFFFF ) >> 18		2126816	0		=			
ANR	2128043	Identifier	cx		2126816	0					
ANR	2128044	ShiftExpression	( clr & 0xFFFFFF ) >> 18		2126816	1		>>			
ANR	2128045	BitAndExpression	clr & 0xFFFFFF		2126816	0		&			
ANR	2128046	Identifier	clr		2126816	0					
ANR	2128047	PrimaryExpression	0xFFFFFF		2126816	1					
ANR	2128048	PrimaryExpression	18		2126816	1					
ANR	2128049	ReturnStatement	return 0 ;	405:4:6167:6175	2126816	14	True				
ANR	2128050	PrimaryExpression	0		2126816	0					
ANR	2128051	ReturnType	static int		2126816	1					
ANR	2128052	Identifier	decompress_i		2126816	2					
ANR	2128053	ParameterList	"AVCodecContext * avctx , uint32_t * dst , int linesize"		2126816	3					
ANR	2128054	Parameter	AVCodecContext * avctx	1:24:24:44	2126816	0	True				
ANR	2128055	ParameterType	AVCodecContext *		2126816	0					
ANR	2128056	Identifier	avctx		2126816	1					
ANR	2128057	Parameter	uint32_t * dst	1:47:47:59	2126816	1	True				
ANR	2128058	ParameterType	uint32_t *		2126816	0					
ANR	2128059	Identifier	dst		2126816	1					
ANR	2128060	Parameter	int linesize	1:62:62:73	2126816	2	True				
ANR	2128061	ParameterType	int		2126816	0					
ANR	2128062	Identifier	linesize		2126816	1					
ANR	2128063	CFGEntryNode	ENTRY		2126816		True				
ANR	2128064	CFGExitNode	EXIT		2126816		True				
ANR	2128065	Symbol	* x		2126816						
ANR	2128066	Symbol	* y		2126816						
ANR	2128067	Symbol	* z		2126816						
ANR	2128068	Symbol	run		2126816						
ANR	2128069	Symbol	lx		2126816						
ANR	2128070	Symbol	ly		2126816						
ANR	2128071	Symbol	* odst		2126816						
ANR	2128072	Symbol	* dst		2126816						
ANR	2128073	Symbol	linesize		2126816						
ANR	2128074	Symbol	decode_unit		2126816						
ANR	2128075	Symbol	& ptype		2126816						
ANR	2128076	Symbol	* off		2126816						
ANR	2128077	Symbol	ret		2126816						
ANR	2128078	Symbol	decode_value		2126816						
ANR	2128079	Symbol	clr		2126816						
ANR	2128080	Symbol	* linesize		2126816						
ANR	2128081	Symbol	& s -> gb		2126816						
ANR	2128082	Symbol	* avctx		2126816						
ANR	2128083	Symbol	& run		2126816						
ANR	2128084	Symbol	* s -> op_model		2126816						
ANR	2128085	Symbol	s -> run_model		2126816						
ANR	2128086	Symbol	avctx -> bits_per_coded_sample		2126816						
ANR	2128087	Symbol	* s -> run_model		2126816						
ANR	2128088	Symbol	dst		2126816						
ANR	2128089	Symbol	odst		2126816						
ANR	2128090	Symbol	avctx -> width		2126816						
ANR	2128091	Symbol	backstep		2126816						
ANR	2128092	Symbol	ptype		2126816						
ANR	2128093	Symbol	* ly		2126816						
ANR	2128094	Symbol	* s -> pixel_model		2126816						
ANR	2128095	Symbol	* lx		2126816						
ANR	2128096	Symbol	avctx -> height		2126816						
ANR	2128097	Symbol	s -> cxshift		2126816						
ANR	2128098	Symbol	* * s		2126816						
ANR	2128099	Symbol	gb		2126816						
ANR	2128100	Symbol	avctx		2126816						
ANR	2128101	Symbol	cx1		2126816						
ANR	2128102	Symbol	b		2126816						
ANR	2128103	Symbol	s -> pixel_model		2126816						
ANR	2128104	Symbol	s -> op_model		2126816						
ANR	2128105	Symbol	g		2126816						
ANR	2128106	Symbol	& b		2126816						
ANR	2128107	Symbol	k		2126816						
ANR	2128108	Symbol	avctx -> priv_data		2126816						
ANR	2128109	Symbol	& g		2126816						
ANR	2128110	Symbol	off		2126816						
ANR	2128111	Symbol	r		2126816						
ANR	2128112	Symbol	s		2126816						
ANR	2128113	Symbol	cx		2126816						
ANR	2128114	Symbol	& s -> rc		2126816						
ANR	2128115	Symbol	* ptype		2126816						
ANR	2128116	Symbol	x		2126816						
ANR	2128117	Symbol	& r		2126816						
ANR	2128118	Symbol	y		2126816						
ANR	2128119	Symbol	z		2126816						
ANR	2128120	Symbol	AVERROR_INVALIDDATA		2126816						
ANR	2128121	Symbol	* s		2126816						
ANR	2128122	Symbol	cxshift		2126816						
