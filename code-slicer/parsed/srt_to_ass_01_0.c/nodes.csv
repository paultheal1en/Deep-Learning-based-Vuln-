command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7974545	File	/home/p4ultr4n/workplace/ReVeal/raw_code/srt_to_ass_01_0.c								
ANR	7974546	Function	srt_to_ass	1:0:0:6349							
ANR	7974547	FunctionDef	"srt_to_ass (AVCodecContext * avctx , char * out , char * out_end , const char * in , int x1 , int y1 , int x2 , int y2)"		7974546	0					
ANR	7974548	CompoundStatement		5:0:159:6349	7974546	0					
ANR	7974549	IdentifierDeclStatement	"char c , * param , buffer [ 128 ] , tmp [ 128 ] ;"	7:4:166:203	7974546	0	True				
ANR	7974550	IdentifierDecl	c		7974546	0					
ANR	7974551	IdentifierDeclType	char		7974546	0					
ANR	7974552	Identifier	c		7974546	1					
ANR	7974553	IdentifierDecl	* param		7974546	1					
ANR	7974554	IdentifierDeclType	char *		7974546	0					
ANR	7974555	Identifier	param		7974546	1					
ANR	7974556	IdentifierDecl	buffer [ 128 ]		7974546	2					
ANR	7974557	IdentifierDeclType	char [ 128 ]		7974546	0					
ANR	7974558	Identifier	buffer		7974546	1					
ANR	7974559	PrimaryExpression	128		7974546	2					
ANR	7974560	IdentifierDecl	tmp [ 128 ]		7974546	3					
ANR	7974561	IdentifierDeclType	char [ 128 ]		7974546	0					
ANR	7974562	Identifier	tmp		7974546	1					
ANR	7974563	PrimaryExpression	128		7974546	2					
ANR	7974564	IdentifierDeclStatement	"int len , tag_close , sptr = 1 , line_start = 1 , an = 0 , end = 0 ;"	9:4:210:271	7974546	1	True				
ANR	7974565	IdentifierDecl	len		7974546	0					
ANR	7974566	IdentifierDeclType	int		7974546	0					
ANR	7974567	Identifier	len		7974546	1					
ANR	7974568	IdentifierDecl	tag_close		7974546	1					
ANR	7974569	IdentifierDeclType	int		7974546	0					
ANR	7974570	Identifier	tag_close		7974546	1					
ANR	7974571	IdentifierDecl	sptr = 1		7974546	2					
ANR	7974572	IdentifierDeclType	int		7974546	0					
ANR	7974573	Identifier	sptr		7974546	1					
ANR	7974574	AssignmentExpression	sptr = 1		7974546	2		=			
ANR	7974575	Identifier	sptr		7974546	0					
ANR	7974576	PrimaryExpression	1		7974546	1					
ANR	7974577	IdentifierDecl	line_start = 1		7974546	3					
ANR	7974578	IdentifierDeclType	int		7974546	0					
ANR	7974579	Identifier	line_start		7974546	1					
ANR	7974580	AssignmentExpression	line_start = 1		7974546	2		=			
ANR	7974581	Identifier	line_start		7974546	0					
ANR	7974582	PrimaryExpression	1		7974546	1					
ANR	7974583	IdentifierDecl	an = 0		7974546	4					
ANR	7974584	IdentifierDeclType	int		7974546	0					
ANR	7974585	Identifier	an		7974546	1					
ANR	7974586	AssignmentExpression	an = 0		7974546	2		=			
ANR	7974587	Identifier	an		7974546	0					
ANR	7974588	PrimaryExpression	0		7974546	1					
ANR	7974589	IdentifierDecl	end = 0		7974546	5					
ANR	7974590	IdentifierDeclType	int		7974546	0					
ANR	7974591	Identifier	end		7974546	1					
ANR	7974592	AssignmentExpression	end = 0		7974546	2		=			
ANR	7974593	Identifier	end		7974546	0					
ANR	7974594	PrimaryExpression	0		7974546	1					
ANR	7974595	IdentifierDeclStatement	SrtStack stack [ 16 ] ;	11:4:278:296	7974546	2	True				
ANR	7974596	IdentifierDecl	stack [ 16 ]		7974546	0					
ANR	7974597	IdentifierDeclType	SrtStack [ 16 ]		7974546	0					
ANR	7974598	Identifier	stack		7974546	1					
ANR	7974599	PrimaryExpression	16		7974546	2					
ANR	7974600	ExpressionStatement	stack [ 0 ] . tag [ 0 ] = 0	15:4:305:324	7974546	3	True				
ANR	7974601	AssignmentExpression	stack [ 0 ] . tag [ 0 ] = 0		7974546	0		=			
ANR	7974602	ArrayIndexing	stack [ 0 ] . tag [ 0 ]		7974546	0					
ANR	7974603	MemberAccess	stack [ 0 ] . tag		7974546	0					
ANR	7974604	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7974605	Identifier	stack		7974546	0					
ANR	7974606	PrimaryExpression	0		7974546	1					
ANR	7974607	Identifier	tag		7974546	1					
ANR	7974608	PrimaryExpression	0		7974546	1					
ANR	7974609	PrimaryExpression	0		7974546	1					
ANR	7974610	ExpressionStatement	"strcpy ( stack [ 0 ] . param [ PARAM_SIZE ] , ""{\\\\fs}"" )"	17:4:331:376	7974546	4	True				
ANR	7974611	CallExpression	"strcpy ( stack [ 0 ] . param [ PARAM_SIZE ] , ""{\\\\fs}"" )"		7974546	0					
ANR	7974612	Callee	strcpy		7974546	0					
ANR	7974613	Identifier	strcpy		7974546	0					
ANR	7974614	ArgumentList	stack [ 0 ] . param [ PARAM_SIZE ]		7974546	1					
ANR	7974615	Argument	stack [ 0 ] . param [ PARAM_SIZE ]		7974546	0					
ANR	7974616	ArrayIndexing	stack [ 0 ] . param [ PARAM_SIZE ]		7974546	0					
ANR	7974617	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7974618	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7974619	Identifier	stack		7974546	0					
ANR	7974620	PrimaryExpression	0		7974546	1					
ANR	7974621	Identifier	param		7974546	1					
ANR	7974622	Identifier	PARAM_SIZE		7974546	1					
ANR	7974623	Argument	"""{\\\\fs}"""		7974546	1					
ANR	7974624	PrimaryExpression	"""{\\\\fs}"""		7974546	0					
ANR	7974625	ExpressionStatement	"strcpy ( stack [ 0 ] . param [ PARAM_COLOR ] , ""{\\\\c}"" )"	19:4:383:427	7974546	5	True				
ANR	7974626	CallExpression	"strcpy ( stack [ 0 ] . param [ PARAM_COLOR ] , ""{\\\\c}"" )"		7974546	0					
ANR	7974627	Callee	strcpy		7974546	0					
ANR	7974628	Identifier	strcpy		7974546	0					
ANR	7974629	ArgumentList	stack [ 0 ] . param [ PARAM_COLOR ]		7974546	1					
ANR	7974630	Argument	stack [ 0 ] . param [ PARAM_COLOR ]		7974546	0					
ANR	7974631	ArrayIndexing	stack [ 0 ] . param [ PARAM_COLOR ]		7974546	0					
ANR	7974632	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7974633	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7974634	Identifier	stack		7974546	0					
ANR	7974635	PrimaryExpression	0		7974546	1					
ANR	7974636	Identifier	param		7974546	1					
ANR	7974637	Identifier	PARAM_COLOR		7974546	1					
ANR	7974638	Argument	"""{\\\\c}"""		7974546	1					
ANR	7974639	PrimaryExpression	"""{\\\\c}"""		7974546	0					
ANR	7974640	ExpressionStatement	"strcpy ( stack [ 0 ] . param [ PARAM_FACE ] , ""{\\\\fn}"" )"	21:4:434:479	7974546	6	True				
ANR	7974641	CallExpression	"strcpy ( stack [ 0 ] . param [ PARAM_FACE ] , ""{\\\\fn}"" )"		7974546	0					
ANR	7974642	Callee	strcpy		7974546	0					
ANR	7974643	Identifier	strcpy		7974546	0					
ANR	7974644	ArgumentList	stack [ 0 ] . param [ PARAM_FACE ]		7974546	1					
ANR	7974645	Argument	stack [ 0 ] . param [ PARAM_FACE ]		7974546	0					
ANR	7974646	ArrayIndexing	stack [ 0 ] . param [ PARAM_FACE ]		7974546	0					
ANR	7974647	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7974648	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7974649	Identifier	stack		7974546	0					
ANR	7974650	PrimaryExpression	0		7974546	1					
ANR	7974651	Identifier	param		7974546	1					
ANR	7974652	Identifier	PARAM_FACE		7974546	1					
ANR	7974653	Argument	"""{\\\\fn}"""		7974546	1					
ANR	7974654	PrimaryExpression	"""{\\\\fn}"""		7974546	0					
ANR	7974655	IfStatement	if ( x1 >= 0 && y1 >= 0 )		7974546	7					
ANR	7974656	Condition	x1 >= 0 && y1 >= 0	25:8:492:509	7974546	0	True				
ANR	7974657	AndExpression	x1 >= 0 && y1 >= 0		7974546	0		&&			
ANR	7974658	RelationalExpression	x1 >= 0		7974546	0		>=			
ANR	7974659	Identifier	x1		7974546	0					
ANR	7974660	PrimaryExpression	0		7974546	1					
ANR	7974661	RelationalExpression	y1 >= 0		7974546	1		>=			
ANR	7974662	Identifier	y1		7974546	0					
ANR	7974663	PrimaryExpression	0		7974546	1					
ANR	7974664	CompoundStatement		21:28:352:352	7974546	1					
ANR	7974665	IfStatement	if ( x2 >= 0 && y2 >= 0 && ( x2 != x1 || y2 != y1 ) )		7974546	0					
ANR	7974666	Condition	x2 >= 0 && y2 >= 0 && ( x2 != x1 || y2 != y1 )	27:12:527:570	7974546	0	True				
ANR	7974667	AndExpression	x2 >= 0 && y2 >= 0 && ( x2 != x1 || y2 != y1 )		7974546	0		&&			
ANR	7974668	RelationalExpression	x2 >= 0		7974546	0		>=			
ANR	7974669	Identifier	x2		7974546	0					
ANR	7974670	PrimaryExpression	0		7974546	1					
ANR	7974671	AndExpression	y2 >= 0 && ( x2 != x1 || y2 != y1 )		7974546	1		&&			
ANR	7974672	RelationalExpression	y2 >= 0		7974546	0		>=			
ANR	7974673	Identifier	y2		7974546	0					
ANR	7974674	PrimaryExpression	0		7974546	1					
ANR	7974675	OrExpression	x2 != x1 || y2 != y1		7974546	1		||			
ANR	7974676	EqualityExpression	x2 != x1		7974546	0		!=			
ANR	7974677	Identifier	x2		7974546	0					
ANR	7974678	Identifier	x1		7974546	1					
ANR	7974679	EqualityExpression	y2 != y1		7974546	1		!=			
ANR	7974680	Identifier	y2		7974546	0					
ANR	7974681	Identifier	y1		7974546	1					
ANR	7974682	ExpressionStatement	"out += snprintf ( out , out_end - out , ""{\\\\an1}{\\\\move(%d,%d,%d,%d)}"" , x1 , y1 , x2 , y2 )"	29:12:586:696	7974546	1	True				
ANR	7974683	AssignmentExpression	"out += snprintf ( out , out_end - out , ""{\\\\an1}{\\\\move(%d,%d,%d,%d)}"" , x1 , y1 , x2 , y2 )"		7974546	0		+=			
ANR	7974684	Identifier	out		7974546	0					
ANR	7974685	CallExpression	"snprintf ( out , out_end - out , ""{\\\\an1}{\\\\move(%d,%d,%d,%d)}"" , x1 , y1 , x2 , y2 )"		7974546	1					
ANR	7974686	Callee	snprintf		7974546	0					
ANR	7974687	Identifier	snprintf		7974546	0					
ANR	7974688	ArgumentList	out		7974546	1					
ANR	7974689	Argument	out		7974546	0					
ANR	7974690	Identifier	out		7974546	0					
ANR	7974691	Argument	out_end - out		7974546	1					
ANR	7974692	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7974693	Identifier	out_end		7974546	0					
ANR	7974694	Identifier	out		7974546	1					
ANR	7974695	Argument	"""{\\\\an1}{\\\\move(%d,%d,%d,%d)}"""		7974546	2					
ANR	7974696	PrimaryExpression	"""{\\\\an1}{\\\\move(%d,%d,%d,%d)}"""		7974546	0					
ANR	7974697	Argument	x1		7974546	3					
ANR	7974698	Identifier	x1		7974546	0					
ANR	7974699	Argument	y1		7974546	4					
ANR	7974700	Identifier	y1		7974546	0					
ANR	7974701	Argument	x2		7974546	5					
ANR	7974702	Identifier	x2		7974546	0					
ANR	7974703	Argument	y2		7974546	6					
ANR	7974704	Identifier	y2		7974546	0					
ANR	7974705	ElseStatement	else		7974546	0					
ANR	7974706	ExpressionStatement	"out += snprintf ( out , out_end - out , ""{\\\\an1}{\\\\pos(%d,%d)}"" , x1 , y1 )"	35:12:725:791	7974546	0	True				
ANR	7974707	AssignmentExpression	"out += snprintf ( out , out_end - out , ""{\\\\an1}{\\\\pos(%d,%d)}"" , x1 , y1 )"		7974546	0		+=			
ANR	7974708	Identifier	out		7974546	0					
ANR	7974709	CallExpression	"snprintf ( out , out_end - out , ""{\\\\an1}{\\\\pos(%d,%d)}"" , x1 , y1 )"		7974546	1					
ANR	7974710	Callee	snprintf		7974546	0					
ANR	7974711	Identifier	snprintf		7974546	0					
ANR	7974712	ArgumentList	out		7974546	1					
ANR	7974713	Argument	out		7974546	0					
ANR	7974714	Identifier	out		7974546	0					
ANR	7974715	Argument	out_end - out		7974546	1					
ANR	7974716	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7974717	Identifier	out_end		7974546	0					
ANR	7974718	Identifier	out		7974546	1					
ANR	7974719	Argument	"""{\\\\an1}{\\\\pos(%d,%d)}"""		7974546	2					
ANR	7974720	PrimaryExpression	"""{\\\\an1}{\\\\pos(%d,%d)}"""		7974546	0					
ANR	7974721	Argument	x1		7974546	3					
ANR	7974722	Identifier	x1		7974546	0					
ANR	7974723	Argument	y1		7974546	4					
ANR	7974724	Identifier	y1		7974546	0					
ANR	7974725	ForStatement	for ( ; out < out_end && ! end && * in ; in ++ )		7974546	8					
ANR	7974726	Condition	out < out_end && ! end && * in	41:11:814:841	7974546	0	True				
ANR	7974727	AndExpression	out < out_end && ! end && * in		7974546	0		&&			
ANR	7974728	RelationalExpression	out < out_end		7974546	0		<			
ANR	7974729	Identifier	out		7974546	0					
ANR	7974730	Identifier	out_end		7974546	1					
ANR	7974731	AndExpression	! end && * in		7974546	1		&&			
ANR	7974732	UnaryOperationExpression	! end		7974546	0					
ANR	7974733	UnaryOperator	!		7974546	0					
ANR	7974734	Identifier	end		7974546	1					
ANR	7974735	UnaryOperationExpression	* in		7974546	1					
ANR	7974736	UnaryOperator	*		7974546	0					
ANR	7974737	Identifier	in		7974546	1					
ANR	7974738	PostIncDecOperationExpression	in ++	41:41:844:847	7974546	1	True				
ANR	7974739	Identifier	in		7974546	0					
ANR	7974740	IncDec	++		7974546	1					
ANR	7974741	CompoundStatement		37:47:690:690	7974546	2					
ANR	7974742	SwitchStatement	switch ( * in )		7974546	0					
ANR	7974743	Condition	* in	43:16:869:871	7974546	0	True				
ANR	7974744	UnaryOperationExpression	* in		7974546	0					
ANR	7974745	UnaryOperator	*		7974546	0					
ANR	7974746	Identifier	in		7974546	1					
ANR	7974747	CompoundStatement		39:21:714:714	7974546	1					
ANR	7974748	Label	case '\\r' :	45:8:885:894	7974546	0	True				
ANR	7974749	BreakStatement	break ;	47:12:909:914	7974546	1	True				
ANR	7974750	Label	case '\\n' :	49:8:925:934	7974546	2	True				
ANR	7974751	IfStatement	if ( line_start )		7974546	3					
ANR	7974752	Condition	line_start	51:16:953:962	7974546	0	True				
ANR	7974753	Identifier	line_start		7974546	0					
ANR	7974754	CompoundStatement		47:28:805:805	7974546	1					
ANR	7974755	ExpressionStatement	end = 1	53:16:984:991	7974546	0	True				
ANR	7974756	AssignmentExpression	end = 1		7974546	0		=			
ANR	7974757	Identifier	end		7974546	0					
ANR	7974758	PrimaryExpression	1		7974546	1					
ANR	7974759	BreakStatement	break ;	55:16:1010:1015	7974546	1	True				
ANR	7974760	WhileStatement	while ( out [ - 1 ] == ' ' )		7974546	4					
ANR	7974761	Condition	out [ - 1 ] == ' '	59:19:1052:1065	7974546	0	True				
ANR	7974762	EqualityExpression	out [ - 1 ] == ' '		7974546	0		==			
ANR	7974763	ArrayIndexing	out [ - 1 ]		7974546	0					
ANR	7974764	Identifier	out		7974546	0					
ANR	7974765	UnaryOperationExpression	- 1		7974546	1					
ANR	7974766	UnaryOperator	-		7974546	0					
ANR	7974767	PrimaryExpression	1		7974546	1					
ANR	7974768	PrimaryExpression	' '		7974546	1					
ANR	7974769	ExpressionStatement	out --	61:16:1085:1090	7974546	1	True				
ANR	7974770	PostIncDecOperationExpression	out --		7974546	0					
ANR	7974771	Identifier	out		7974546	0					
ANR	7974772	IncDec	--		7974546	1					
ANR	7974773	ExpressionStatement	"out += snprintf ( out , out_end - out , ""\\\\N"" )"	63:12:1105:1145	7974546	5	True				
ANR	7974774	AssignmentExpression	"out += snprintf ( out , out_end - out , ""\\\\N"" )"		7974546	0		+=			
ANR	7974775	Identifier	out		7974546	0					
ANR	7974776	CallExpression	"snprintf ( out , out_end - out , ""\\\\N"" )"		7974546	1					
ANR	7974777	Callee	snprintf		7974546	0					
ANR	7974778	Identifier	snprintf		7974546	0					
ANR	7974779	ArgumentList	out		7974546	1					
ANR	7974780	Argument	out		7974546	0					
ANR	7974781	Identifier	out		7974546	0					
ANR	7974782	Argument	out_end - out		7974546	1					
ANR	7974783	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7974784	Identifier	out_end		7974546	0					
ANR	7974785	Identifier	out		7974546	1					
ANR	7974786	Argument	"""\\\\N"""		7974546	2					
ANR	7974787	PrimaryExpression	"""\\\\N"""		7974546	0					
ANR	7974788	ExpressionStatement	line_start = 1	65:12:1160:1174	7974546	6	True				
ANR	7974789	AssignmentExpression	line_start = 1		7974546	0		=			
ANR	7974790	Identifier	line_start		7974546	0					
ANR	7974791	PrimaryExpression	1		7974546	1					
ANR	7974792	BreakStatement	break ;	67:12:1189:1194	7974546	7	True				
ANR	7974793	Label	case ' ' :	69:8:1205:1213	7974546	8	True				
ANR	7974794	IfStatement	if ( ! line_start )		7974546	9					
ANR	7974795	Condition	! line_start	71:16:1232:1242	7974546	0	True				
ANR	7974796	UnaryOperationExpression	! line_start		7974546	0					
ANR	7974797	UnaryOperator	!		7974546	0					
ANR	7974798	Identifier	line_start		7974546	1					
ANR	7974799	ExpressionStatement	* out ++ = * in	73:16:1262:1274	7974546	1	True				
ANR	7974800	AssignmentExpression	* out ++ = * in		7974546	0		=			
ANR	7974801	UnaryOperationExpression	* out ++		7974546	0					
ANR	7974802	UnaryOperator	*		7974546	0					
ANR	7974803	PostIncDecOperationExpression	out ++		7974546	1					
ANR	7974804	Identifier	out		7974546	0					
ANR	7974805	IncDec	++		7974546	1					
ANR	7974806	UnaryOperationExpression	* in		7974546	1					
ANR	7974807	UnaryOperator	*		7974546	0					
ANR	7974808	Identifier	in		7974546	1					
ANR	7974809	BreakStatement	break ;	75:12:1289:1294	7974546	10	True				
ANR	7974810	Label	case '{' :	77:8:1305:1313	7974546	11	True				
ANR	7974811	ExpressionStatement	"an += sscanf ( in , ""{\\\\an%*1u}%c"" , & c ) == 1"	81:12:1453:1494	7974546	12	True				
ANR	7974812	AssignmentExpression	"an += sscanf ( in , ""{\\\\an%*1u}%c"" , & c ) == 1"		7974546	0		+=			
ANR	7974813	Identifier	an		7974546	0					
ANR	7974814	EqualityExpression	"sscanf ( in , ""{\\\\an%*1u}%c"" , & c ) == 1"		7974546	1		==			
ANR	7974815	CallExpression	"sscanf ( in , ""{\\\\an%*1u}%c"" , & c )"		7974546	0					
ANR	7974816	Callee	sscanf		7974546	0					
ANR	7974817	Identifier	sscanf		7974546	0					
ANR	7974818	ArgumentList	in		7974546	1					
ANR	7974819	Argument	in		7974546	0					
ANR	7974820	Identifier	in		7974546	0					
ANR	7974821	Argument	"""{\\\\an%*1u}%c"""		7974546	1					
ANR	7974822	PrimaryExpression	"""{\\\\an%*1u}%c"""		7974546	0					
ANR	7974823	Argument	& c		7974546	2					
ANR	7974824	UnaryOperationExpression	& c		7974546	0					
ANR	7974825	UnaryOperator	&		7974546	0					
ANR	7974826	Identifier	c		7974546	1					
ANR	7974827	PrimaryExpression	1		7974546	1					
ANR	7974828	IfStatement	"if ( ( an != 1 && sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c ) > 0 ) || sscanf ( in , ""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"" , & len , & c ) > 0 )"		7974546	13					
ANR	7974829	Condition	"( an != 1 && sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c ) > 0 ) || sscanf ( in , ""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"" , & len , & c ) > 0"	83:16:1513:1644	7974546	0	True				
ANR	7974830	OrExpression	"( an != 1 && sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c ) > 0 ) || sscanf ( in , ""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"" , & len , & c ) > 0"		7974546	0		||			
ANR	7974831	AndExpression	"an != 1 && sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c ) > 0"		7974546	0		&&			
ANR	7974832	EqualityExpression	an != 1		7974546	0		!=			
ANR	7974833	Identifier	an		7974546	0					
ANR	7974834	PrimaryExpression	1		7974546	1					
ANR	7974835	RelationalExpression	"sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c ) > 0"		7974546	1		>			
ANR	7974836	CallExpression	"sscanf ( in , ""{\\\\%*[^}]}%n%c"" , & len , & c )"		7974546	0					
ANR	7974837	Callee	sscanf		7974546	0					
ANR	7974838	Identifier	sscanf		7974546	0					
ANR	7974839	ArgumentList	in		7974546	1					
ANR	7974840	Argument	in		7974546	0					
ANR	7974841	Identifier	in		7974546	0					
ANR	7974842	Argument	"""{\\\\%*[^}]}%n%c"""		7974546	1					
ANR	7974843	PrimaryExpression	"""{\\\\%*[^}]}%n%c"""		7974546	0					
ANR	7974844	Argument	& len		7974546	2					
ANR	7974845	UnaryOperationExpression	& len		7974546	0					
ANR	7974846	UnaryOperator	&		7974546	0					
ANR	7974847	Identifier	len		7974546	1					
ANR	7974848	Argument	& c		7974546	3					
ANR	7974849	UnaryOperationExpression	& c		7974546	0					
ANR	7974850	UnaryOperator	&		7974546	0					
ANR	7974851	Identifier	c		7974546	1					
ANR	7974852	PrimaryExpression	0		7974546	1					
ANR	7974853	RelationalExpression	"sscanf ( in , ""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"" , & len , & c ) > 0"		7974546	1		>			
ANR	7974854	CallExpression	"sscanf ( in , ""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"" , & len , & c )"		7974546	0					
ANR	7974855	Callee	sscanf		7974546	0					
ANR	7974856	Identifier	sscanf		7974546	0					
ANR	7974857	ArgumentList	in		7974546	1					
ANR	7974858	Argument	in		7974546	0					
ANR	7974859	Identifier	in		7974546	0					
ANR	7974860	Argument	"""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"""		7974546	1					
ANR	7974861	PrimaryExpression	"""{%*1[CcFfoPSsYy]:%*[^}]}%n%c"""		7974546	0					
ANR	7974862	Argument	& len		7974546	2					
ANR	7974863	UnaryOperationExpression	& len		7974546	0					
ANR	7974864	UnaryOperator	&		7974546	0					
ANR	7974865	Identifier	len		7974546	1					
ANR	7974866	Argument	& c		7974546	3					
ANR	7974867	UnaryOperationExpression	& c		7974546	0					
ANR	7974868	UnaryOperator	&		7974546	0					
ANR	7974869	Identifier	c		7974546	1					
ANR	7974870	PrimaryExpression	0		7974546	1					
ANR	7974871	CompoundStatement		81:74:1487:1487	7974546	1					
ANR	7974872	ExpressionStatement	in += len - 1	87:16:1666:1679	7974546	0	True				
ANR	7974873	AssignmentExpression	in += len - 1		7974546	0		+=			
ANR	7974874	Identifier	in		7974546	0					
ANR	7974875	AdditiveExpression	len - 1		7974546	1		-			
ANR	7974876	Identifier	len		7974546	0					
ANR	7974877	PrimaryExpression	1		7974546	1					
ANR	7974878	ElseStatement	else		7974546	0					
ANR	7974879	ExpressionStatement	* out ++ = * in	91:16:1718:1730	7974546	0	True				
ANR	7974880	AssignmentExpression	* out ++ = * in		7974546	0		=			
ANR	7974881	UnaryOperationExpression	* out ++		7974546	0					
ANR	7974882	UnaryOperator	*		7974546	0					
ANR	7974883	PostIncDecOperationExpression	out ++		7974546	1					
ANR	7974884	Identifier	out		7974546	0					
ANR	7974885	IncDec	++		7974546	1					
ANR	7974886	UnaryOperationExpression	* in		7974546	1					
ANR	7974887	UnaryOperator	*		7974546	0					
ANR	7974888	Identifier	in		7974546	1					
ANR	7974889	BreakStatement	break ;	93:12:1745:1750	7974546	14	True				
ANR	7974890	Label	case '<' :	95:8:1761:1769	7974546	15	True				
ANR	7974891	ExpressionStatement	tag_close = in [ 1 ] == '/'	97:12:1784:1808	7974546	16	True				
ANR	7974892	AssignmentExpression	tag_close = in [ 1 ] == '/'		7974546	0		=			
ANR	7974893	Identifier	tag_close		7974546	0					
ANR	7974894	EqualityExpression	in [ 1 ] == '/'		7974546	1		==			
ANR	7974895	ArrayIndexing	in [ 1 ]		7974546	0					
ANR	7974896	Identifier	in		7974546	0					
ANR	7974897	PrimaryExpression	1		7974546	1					
ANR	7974898	PrimaryExpression	'/'		7974546	1					
ANR	7974899	IfStatement	"if ( sscanf ( in + tag_close + 1 , ""%127[^>]>%n%c"" , buffer , & len , & c ) >= 2 )"		7974546	17					
ANR	7974900	Condition	"sscanf ( in + tag_close + 1 , ""%127[^>]>%n%c"" , buffer , & len , & c ) >= 2"	99:16:1827:1887	7974546	0	True				
ANR	7974901	RelationalExpression	"sscanf ( in + tag_close + 1 , ""%127[^>]>%n%c"" , buffer , & len , & c ) >= 2"		7974546	0		>=			
ANR	7974902	CallExpression	"sscanf ( in + tag_close + 1 , ""%127[^>]>%n%c"" , buffer , & len , & c )"		7974546	0					
ANR	7974903	Callee	sscanf		7974546	0					
ANR	7974904	Identifier	sscanf		7974546	0					
ANR	7974905	ArgumentList	in + tag_close + 1		7974546	1					
ANR	7974906	Argument	in + tag_close + 1		7974546	0					
ANR	7974907	AdditiveExpression	in + tag_close + 1		7974546	0		+			
ANR	7974908	Identifier	in		7974546	0					
ANR	7974909	AdditiveExpression	tag_close + 1		7974546	1		+			
ANR	7974910	Identifier	tag_close		7974546	0					
ANR	7974911	PrimaryExpression	1		7974546	1					
ANR	7974912	Argument	"""%127[^>]>%n%c"""		7974546	1					
ANR	7974913	PrimaryExpression	"""%127[^>]>%n%c"""		7974546	0					
ANR	7974914	Argument	buffer		7974546	2					
ANR	7974915	Identifier	buffer		7974546	0					
ANR	7974916	Argument	& len		7974546	3					
ANR	7974917	UnaryOperationExpression	& len		7974546	0					
ANR	7974918	UnaryOperator	&		7974546	0					
ANR	7974919	Identifier	len		7974546	1					
ANR	7974920	Argument	& c		7974546	4					
ANR	7974921	UnaryOperationExpression	& c		7974546	0					
ANR	7974922	UnaryOperator	&		7974546	0					
ANR	7974923	Identifier	c		7974546	1					
ANR	7974924	PrimaryExpression	2		7974546	1					
ANR	7974925	CompoundStatement		95:79:1730:1730	7974546	1					
ANR	7974926	IfStatement	"if ( ( param = strchr ( buffer , ' ' ) ) )"		7974546	0					
ANR	7974927	Condition	"param = strchr ( buffer , ' ' )"	101:20:1913:1941	7974546	0	True				
ANR	7974928	AssignmentExpression	"param = strchr ( buffer , ' ' )"		7974546	0		=			
ANR	7974929	Identifier	param		7974546	0					
ANR	7974930	CallExpression	"strchr ( buffer , ' ' )"		7974546	1					
ANR	7974931	Callee	strchr		7974546	0					
ANR	7974932	Identifier	strchr		7974546	0					
ANR	7974933	ArgumentList	buffer		7974546	1					
ANR	7974934	Argument	buffer		7974546	0					
ANR	7974935	Identifier	buffer		7974546	0					
ANR	7974936	Argument	' '		7974546	1					
ANR	7974937	PrimaryExpression	' '		7974546	0					
ANR	7974938	ExpressionStatement	* param ++ = 0	103:20:1965:1977	7974546	1	True				
ANR	7974939	AssignmentExpression	* param ++ = 0		7974546	0		=			
ANR	7974940	UnaryOperationExpression	* param ++		7974546	0					
ANR	7974941	UnaryOperator	*		7974546	0					
ANR	7974942	PostIncDecOperationExpression	param ++		7974546	1					
ANR	7974943	Identifier	param		7974546	0					
ANR	7974944	IncDec	++		7974546	1					
ANR	7974945	PrimaryExpression	0		7974546	1					
ANR	7974946	IfStatement	"if ( ( ! tag_close && sptr < FF_ARRAY_ELEMS ( stack ) ) || ( tag_close && sptr > 0 && ! strcmp ( stack [ sptr - 1 ] . tag , buffer ) ) )"		7974546	1					
ANR	7974947	Condition	"( ! tag_close && sptr < FF_ARRAY_ELEMS ( stack ) ) || ( tag_close && sptr > 0 && ! strcmp ( stack [ sptr - 1 ] . tag , buffer ) )"	105:20:2000:2130	7974546	0	True				
ANR	7974948	OrExpression	"( ! tag_close && sptr < FF_ARRAY_ELEMS ( stack ) ) || ( tag_close && sptr > 0 && ! strcmp ( stack [ sptr - 1 ] . tag , buffer ) )"		7974546	0		||			
ANR	7974949	AndExpression	! tag_close && sptr < FF_ARRAY_ELEMS ( stack )		7974546	0		&&			
ANR	7974950	UnaryOperationExpression	! tag_close		7974546	0					
ANR	7974951	UnaryOperator	!		7974546	0					
ANR	7974952	Identifier	tag_close		7974546	1					
ANR	7974953	RelationalExpression	sptr < FF_ARRAY_ELEMS ( stack )		7974546	1		<			
ANR	7974954	Identifier	sptr		7974546	0					
ANR	7974955	CallExpression	FF_ARRAY_ELEMS ( stack )		7974546	1					
ANR	7974956	Callee	FF_ARRAY_ELEMS		7974546	0					
ANR	7974957	Identifier	FF_ARRAY_ELEMS		7974546	0					
ANR	7974958	ArgumentList	stack		7974546	1					
ANR	7974959	Argument	stack		7974546	0					
ANR	7974960	Identifier	stack		7974546	0					
ANR	7974961	AndExpression	"tag_close && sptr > 0 && ! strcmp ( stack [ sptr - 1 ] . tag , buffer )"		7974546	1		&&			
ANR	7974962	Identifier	tag_close		7974546	0					
ANR	7974963	AndExpression	"sptr > 0 && ! strcmp ( stack [ sptr - 1 ] . tag , buffer )"		7974546	1		&&			
ANR	7974964	RelationalExpression	sptr > 0		7974546	0		>			
ANR	7974965	Identifier	sptr		7974546	0					
ANR	7974966	PrimaryExpression	0		7974546	1					
ANR	7974967	UnaryOperationExpression	"! strcmp ( stack [ sptr - 1 ] . tag , buffer )"		7974546	1					
ANR	7974968	UnaryOperator	!		7974546	0					
ANR	7974969	CallExpression	"strcmp ( stack [ sptr - 1 ] . tag , buffer )"		7974546	1					
ANR	7974970	Callee	strcmp		7974546	0					
ANR	7974971	Identifier	strcmp		7974546	0					
ANR	7974972	ArgumentList	stack [ sptr - 1 ] . tag		7974546	1					
ANR	7974973	Argument	stack [ sptr - 1 ] . tag		7974546	0					
ANR	7974974	MemberAccess	stack [ sptr - 1 ] . tag		7974546	0					
ANR	7974975	ArrayIndexing	stack [ sptr - 1 ]		7974546	0					
ANR	7974976	Identifier	stack		7974546	0					
ANR	7974977	AdditiveExpression	sptr - 1		7974546	1		-			
ANR	7974978	Identifier	sptr		7974546	0					
ANR	7974979	PrimaryExpression	1		7974546	1					
ANR	7974980	Identifier	tag		7974546	1					
ANR	7974981	Argument	buffer		7974546	1					
ANR	7974982	Identifier	buffer		7974546	0					
ANR	7974983	CompoundStatement		105:20:1996:2017	7974546	1					
ANR	7974984	IdentifierDeclStatement	"int i , j , unknown = 0 ;"	109:20:2156:2177	7974546	0	True				
ANR	7974985	IdentifierDecl	i		7974546	0					
ANR	7974986	IdentifierDeclType	int		7974546	0					
ANR	7974987	Identifier	i		7974546	1					
ANR	7974988	IdentifierDecl	j		7974546	1					
ANR	7974989	IdentifierDeclType	int		7974546	0					
ANR	7974990	Identifier	j		7974546	1					
ANR	7974991	IdentifierDecl	unknown = 0		7974546	2					
ANR	7974992	IdentifierDeclType	int		7974546	0					
ANR	7974993	Identifier	unknown		7974546	1					
ANR	7974994	AssignmentExpression	unknown = 0		7974546	2		=			
ANR	7974995	Identifier	unknown		7974546	0					
ANR	7974996	PrimaryExpression	0		7974546	1					
ANR	7974997	ExpressionStatement	in += len + tag_close	111:20:2200:2221	7974546	1	True				
ANR	7974998	AssignmentExpression	in += len + tag_close		7974546	0		+=			
ANR	7974999	Identifier	in		7974546	0					
ANR	7975000	AdditiveExpression	len + tag_close		7974546	1		+			
ANR	7975001	Identifier	len		7974546	0					
ANR	7975002	Identifier	tag_close		7974546	1					
ANR	7975003	IfStatement	if ( ! tag_close )		7974546	2					
ANR	7975004	Condition	! tag_close	113:24:2248:2257	7974546	0	True				
ANR	7975005	UnaryOperationExpression	! tag_close		7974546	0					
ANR	7975006	UnaryOperator	!		7974546	0					
ANR	7975007	Identifier	tag_close		7974546	1					
ANR	7975008	ExpressionStatement	"memset ( stack + sptr , 0 , sizeof ( * stack ) )"	115:24:2285:2322	7974546	1	True				
ANR	7975009	CallExpression	"memset ( stack + sptr , 0 , sizeof ( * stack ) )"		7974546	0					
ANR	7975010	Callee	memset		7974546	0					
ANR	7975011	Identifier	memset		7974546	0					
ANR	7975012	ArgumentList	stack + sptr		7974546	1					
ANR	7975013	Argument	stack + sptr		7974546	0					
ANR	7975014	AdditiveExpression	stack + sptr		7974546	0		+			
ANR	7975015	Identifier	stack		7974546	0					
ANR	7975016	Identifier	sptr		7974546	1					
ANR	7975017	Argument	0		7974546	1					
ANR	7975018	PrimaryExpression	0		7974546	0					
ANR	7975019	Argument	sizeof ( * stack )		7974546	2					
ANR	7975020	SizeofExpression	sizeof ( * stack )		7974546	0					
ANR	7975021	Sizeof	sizeof		7974546	0					
ANR	7975022	UnaryOperationExpression	* stack		7974546	1					
ANR	7975023	UnaryOperator	*		7974546	0					
ANR	7975024	Identifier	stack		7974546	1					
ANR	7975025	IfStatement	"if ( ! strcmp ( buffer , ""font"" ) )"		7974546	3					
ANR	7975026	Condition	"! strcmp ( buffer , ""font"" )"	117:24:2349:2371	7974546	0	True				
ANR	7975027	UnaryOperationExpression	"! strcmp ( buffer , ""font"" )"		7974546	0					
ANR	7975028	UnaryOperator	!		7974546	0					
ANR	7975029	CallExpression	"strcmp ( buffer , ""font"" )"		7974546	1					
ANR	7975030	Callee	strcmp		7974546	0					
ANR	7975031	Identifier	strcmp		7974546	0					
ANR	7975032	ArgumentList	buffer		7974546	1					
ANR	7975033	Argument	buffer		7974546	0					
ANR	7975034	Identifier	buffer		7974546	0					
ANR	7975035	Argument	"""font"""		7974546	1					
ANR	7975036	PrimaryExpression	"""font"""		7974546	0					
ANR	7975037	CompoundStatement		113:49:2214:2214	7974546	1					
ANR	7975038	IfStatement	if ( tag_close )		7974546	0					
ANR	7975039	Condition	tag_close	119:28:2405:2413	7974546	0	True				
ANR	7975040	Identifier	tag_close		7974546	0					
ANR	7975041	CompoundStatement		115:39:2256:2256	7974546	1					
ANR	7975042	ForStatement	for ( i = PARAM_NUMBER - 1 ; i >= 0 ; i -- )		7974546	0					
ANR	7975043	ForInit	i = PARAM_NUMBER - 1 ;	121:33:2452:2468	7974546	0	True				
ANR	7975044	AssignmentExpression	i = PARAM_NUMBER - 1		7974546	0		=			
ANR	7975045	Identifier	i		7974546	0					
ANR	7975046	AdditiveExpression	PARAM_NUMBER - 1		7974546	1		-			
ANR	7975047	Identifier	PARAM_NUMBER		7974546	0					
ANR	7975048	PrimaryExpression	1		7974546	1					
ANR	7975049	Condition	i >= 0	121:51:2470:2473	7974546	1	True				
ANR	7975050	RelationalExpression	i >= 0		7974546	0		>=			
ANR	7975051	Identifier	i		7974546	0					
ANR	7975052	PrimaryExpression	0		7974546	1					
ANR	7975053	PostIncDecOperationExpression	i --	121:57:2476:2478	7974546	2	True				
ANR	7975054	Identifier	i		7974546	0					
ANR	7975055	IncDec	--		7974546	1					
ANR	7975056	IfStatement	if ( stack [ sptr - 1 ] . param [ i ] [ 0 ] )		7974546	3					
ANR	7975057	Condition	stack [ sptr - 1 ] . param [ i ] [ 0 ]	123:36:2518:2542	7974546	0	True				
ANR	7975058	ArrayIndexing	stack [ sptr - 1 ] . param [ i ] [ 0 ]		7974546	0					
ANR	7975059	ArrayIndexing	stack [ sptr - 1 ] . param [ i ]		7974546	0					
ANR	7975060	MemberAccess	stack [ sptr - 1 ] . param		7974546	0					
ANR	7975061	ArrayIndexing	stack [ sptr - 1 ]		7974546	0					
ANR	7975062	Identifier	stack		7974546	0					
ANR	7975063	AdditiveExpression	sptr - 1		7974546	1		-			
ANR	7975064	Identifier	sptr		7974546	0					
ANR	7975065	PrimaryExpression	1		7974546	1					
ANR	7975066	Identifier	param		7974546	1					
ANR	7975067	Identifier	i		7974546	1					
ANR	7975068	PrimaryExpression	0		7974546	1					
ANR	7975069	ForStatement	for ( j = sptr - 2 ; j >= 0 ; j -- )		7974546	1					
ANR	7975070	ForInit	j = sptr - 2 ;	125:41:2587:2595	7974546	0	True				
ANR	7975071	AssignmentExpression	j = sptr - 2		7974546	0		=			
ANR	7975072	Identifier	j		7974546	0					
ANR	7975073	AdditiveExpression	sptr - 2		7974546	1		-			
ANR	7975074	Identifier	sptr		7974546	0					
ANR	7975075	PrimaryExpression	2		7974546	1					
ANR	7975076	Condition	j >= 0	125:51:2597:2600	7974546	1	True				
ANR	7975077	RelationalExpression	j >= 0		7974546	0		>=			
ANR	7975078	Identifier	j		7974546	0					
ANR	7975079	PrimaryExpression	0		7974546	1					
ANR	7975080	PostIncDecOperationExpression	j --	125:57:2603:2605	7974546	2	True				
ANR	7975081	Identifier	j		7974546	0					
ANR	7975082	IncDec	--		7974546	1					
ANR	7975083	IfStatement	if ( stack [ j ] . param [ i ] [ 0 ] )		7974546	3					
ANR	7975084	Condition	stack [ j ] . param [ i ] [ 0 ]	127:44:2653:2672	7974546	0	True				
ANR	7975085	ArrayIndexing	stack [ j ] . param [ i ] [ 0 ]		7974546	0					
ANR	7975086	ArrayIndexing	stack [ j ] . param [ i ]		7974546	0					
ANR	7975087	MemberAccess	stack [ j ] . param		7974546	0					
ANR	7975088	ArrayIndexing	stack [ j ]		7974546	0					
ANR	7975089	Identifier	stack		7974546	0					
ANR	7975090	Identifier	j		7974546	1					
ANR	7975091	Identifier	param		7974546	1					
ANR	7975092	Identifier	i		7974546	1					
ANR	7975093	PrimaryExpression	0		7974546	1					
ANR	7975094	CompoundStatement		123:66:2515:2515	7974546	1					
ANR	7975095	ExpressionStatement	"out += snprintf ( out , out_end - out , ""%s"" , stack [ j ] . param [ i ] )"	129:44:2722:2841	7974546	0	True				
ANR	7975096	AssignmentExpression	"out += snprintf ( out , out_end - out , ""%s"" , stack [ j ] . param [ i ] )"		7974546	0		+=			
ANR	7975097	Identifier	out		7974546	0					
ANR	7975098	CallExpression	"snprintf ( out , out_end - out , ""%s"" , stack [ j ] . param [ i ] )"		7974546	1					
ANR	7975099	Callee	snprintf		7974546	0					
ANR	7975100	Identifier	snprintf		7974546	0					
ANR	7975101	ArgumentList	out		7974546	1					
ANR	7975102	Argument	out		7974546	0					
ANR	7975103	Identifier	out		7974546	0					
ANR	7975104	Argument	out_end - out		7974546	1					
ANR	7975105	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7975106	Identifier	out_end		7974546	0					
ANR	7975107	Identifier	out		7974546	1					
ANR	7975108	Argument	"""%s"""		7974546	2					
ANR	7975109	PrimaryExpression	"""%s"""		7974546	0					
ANR	7975110	Argument	stack [ j ] . param [ i ]		7974546	3					
ANR	7975111	ArrayIndexing	stack [ j ] . param [ i ]		7974546	0					
ANR	7975112	MemberAccess	stack [ j ] . param		7974546	0					
ANR	7975113	ArrayIndexing	stack [ j ]		7974546	0					
ANR	7975114	Identifier	stack		7974546	0					
ANR	7975115	Identifier	j		7974546	1					
ANR	7975116	Identifier	param		7974546	1					
ANR	7975117	Identifier	i		7974546	1					
ANR	7975118	BreakStatement	break ;	133:44:2888:2893	7974546	1	True				
ANR	7975119	ElseStatement	else		7974546	0					
ANR	7975120	CompoundStatement		133:31:2810:2810	7974546	0					
ANR	7975121	WhileStatement	while ( param )		7974546	0					
ANR	7975122	Condition	param	139:35:3008:3012	7974546	0	True				
ANR	7975123	Identifier	param		7974546	0					
ANR	7975124	CompoundStatement		135:42:2855:2855	7974546	1					
ANR	7975125	IfStatement	"if ( ! strncmp ( param , ""size="" , 5 ) )"		7974546	0					
ANR	7975126	Condition	"! strncmp ( param , ""size="" , 5 )"	141:36:3054:3080	7974546	0	True				
ANR	7975127	UnaryOperationExpression	"! strncmp ( param , ""size="" , 5 )"		7974546	0					
ANR	7975128	UnaryOperator	!		7974546	0					
ANR	7975129	CallExpression	"strncmp ( param , ""size="" , 5 )"		7974546	1					
ANR	7975130	Callee	strncmp		7974546	0					
ANR	7975131	Identifier	strncmp		7974546	0					
ANR	7975132	ArgumentList	param		7974546	1					
ANR	7975133	Argument	param		7974546	0					
ANR	7975134	Identifier	param		7974546	0					
ANR	7975135	Argument	"""size="""		7974546	1					
ANR	7975136	PrimaryExpression	"""size="""		7974546	0					
ANR	7975137	Argument	5		7974546	2					
ANR	7975138	PrimaryExpression	5		7974546	0					
ANR	7975139	CompoundStatement		139:36:2962:2980	7974546	1					
ANR	7975140	IdentifierDeclStatement	unsigned font_size ;	143:36:3122:3140	7974546	0	True				
ANR	7975141	IdentifierDecl	font_size		7974546	0					
ANR	7975142	IdentifierDeclType	unsigned		7974546	0					
ANR	7975143	Identifier	font_size		7974546	1					
ANR	7975144	ExpressionStatement	"param += 5 + ( param [ 5 ] == '""' )"	145:36:3179:3209	7974546	1	True				
ANR	7975145	AssignmentExpression	"param += 5 + ( param [ 5 ] == '""' )"		7974546	0		+=			
ANR	7975146	Identifier	param		7974546	0					
ANR	7975147	AdditiveExpression	"5 + ( param [ 5 ] == '""' )"		7974546	1		+			
ANR	7975148	PrimaryExpression	5		7974546	0					
ANR	7975149	EqualityExpression	"param [ 5 ] == '""'"		7974546	1		==			
ANR	7975150	ArrayIndexing	param [ 5 ]		7974546	0					
ANR	7975151	Identifier	param		7974546	0					
ANR	7975152	PrimaryExpression	5		7974546	1					
ANR	7975153	PrimaryExpression	"'""'"		7974546	1					
ANR	7975154	IfStatement	"if ( sscanf ( param , ""%u"" , & font_size ) == 1 )"		7974546	2					
ANR	7975155	Condition	"sscanf ( param , ""%u"" , & font_size ) == 1"	147:40:3252:3287	7974546	0	True				
ANR	7975156	EqualityExpression	"sscanf ( param , ""%u"" , & font_size ) == 1"		7974546	0		==			
ANR	7975157	CallExpression	"sscanf ( param , ""%u"" , & font_size )"		7974546	0					
ANR	7975158	Callee	sscanf		7974546	0					
ANR	7975159	Identifier	sscanf		7974546	0					
ANR	7975160	ArgumentList	param		7974546	1					
ANR	7975161	Argument	param		7974546	0					
ANR	7975162	Identifier	param		7974546	0					
ANR	7975163	Argument	"""%u"""		7974546	1					
ANR	7975164	PrimaryExpression	"""%u"""		7974546	0					
ANR	7975165	Argument	& font_size		7974546	2					
ANR	7975166	UnaryOperationExpression	& font_size		7974546	0					
ANR	7975167	UnaryOperator	&		7974546	0					
ANR	7975168	Identifier	font_size		7974546	1					
ANR	7975169	PrimaryExpression	1		7974546	1					
ANR	7975170	CompoundStatement		143:78:3130:3130	7974546	1					
ANR	7975171	ExpressionStatement	"snprintf ( stack [ sptr ] . param [ PARAM_SIZE ] , sizeof ( stack [ 0 ] . param [ PARAM_SIZE ] ) , ""{\\\\fs%u}"" , font_size )"	149:40:3333:3523	7974546	0	True				
ANR	7975172	CallExpression	"snprintf ( stack [ sptr ] . param [ PARAM_SIZE ] , sizeof ( stack [ 0 ] . param [ PARAM_SIZE ] ) , ""{\\\\fs%u}"" , font_size )"		7974546	0					
ANR	7975173	Callee	snprintf		7974546	0					
ANR	7975174	Identifier	snprintf		7974546	0					
ANR	7975175	ArgumentList	stack [ sptr ] . param [ PARAM_SIZE ]		7974546	1					
ANR	7975176	Argument	stack [ sptr ] . param [ PARAM_SIZE ]		7974546	0					
ANR	7975177	ArrayIndexing	stack [ sptr ] . param [ PARAM_SIZE ]		7974546	0					
ANR	7975178	MemberAccess	stack [ sptr ] . param		7974546	0					
ANR	7975179	ArrayIndexing	stack [ sptr ]		7974546	0					
ANR	7975180	Identifier	stack		7974546	0					
ANR	7975181	Identifier	sptr		7974546	1					
ANR	7975182	Identifier	param		7974546	1					
ANR	7975183	Identifier	PARAM_SIZE		7974546	1					
ANR	7975184	Argument	sizeof ( stack [ 0 ] . param [ PARAM_SIZE ] )		7974546	1					
ANR	7975185	SizeofExpression	sizeof ( stack [ 0 ] . param [ PARAM_SIZE ] )		7974546	0					
ANR	7975186	Sizeof	sizeof		7974546	0					
ANR	7975187	ArrayIndexing	stack [ 0 ] . param [ PARAM_SIZE ]		7974546	1					
ANR	7975188	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7975189	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7975190	Identifier	stack		7974546	0					
ANR	7975191	PrimaryExpression	0		7974546	1					
ANR	7975192	Identifier	param		7974546	1					
ANR	7975193	Identifier	PARAM_SIZE		7974546	1					
ANR	7975194	Argument	"""{\\\\fs%u}"""		7974546	2					
ANR	7975195	PrimaryExpression	"""{\\\\fs%u}"""		7974546	0					
ANR	7975196	Argument	font_size		7974546	3					
ANR	7975197	Identifier	font_size		7974546	0					
ANR	7975198	ElseStatement	else		7974546	0					
ANR	7975199	IfStatement	"if ( ! strncmp ( param , ""color="" , 6 ) )"		7974546	0					
ANR	7975200	Condition	"! strncmp ( param , ""color="" , 6 )"	157:43:3608:3635	7974546	0	True				
ANR	7975201	UnaryOperationExpression	"! strncmp ( param , ""color="" , 6 )"		7974546	0					
ANR	7975202	UnaryOperator	!		7974546	0					
ANR	7975203	CallExpression	"strncmp ( param , ""color="" , 6 )"		7974546	1					
ANR	7975204	Callee	strncmp		7974546	0					
ANR	7975205	Identifier	strncmp		7974546	0					
ANR	7975206	ArgumentList	param		7974546	1					
ANR	7975207	Argument	param		7974546	0					
ANR	7975208	Identifier	param		7974546	0					
ANR	7975209	Argument	"""color="""		7974546	1					
ANR	7975210	PrimaryExpression	"""color="""		7974546	0					
ANR	7975211	Argument	6		7974546	2					
ANR	7975212	PrimaryExpression	6		7974546	0					
ANR	7975213	CompoundStatement		153:73:3478:3478	7974546	1					
ANR	7975214	ExpressionStatement	"param += 6 + ( param [ 6 ] == '""' )"	159:36:3677:3707	7974546	0	True				
ANR	7975215	AssignmentExpression	"param += 6 + ( param [ 6 ] == '""' )"		7974546	0		+=			
ANR	7975216	Identifier	param		7974546	0					
ANR	7975217	AdditiveExpression	"6 + ( param [ 6 ] == '""' )"		7974546	1		+			
ANR	7975218	PrimaryExpression	6		7974546	0					
ANR	7975219	EqualityExpression	"param [ 6 ] == '""'"		7974546	1		==			
ANR	7975220	ArrayIndexing	param [ 6 ]		7974546	0					
ANR	7975221	Identifier	param		7974546	0					
ANR	7975222	PrimaryExpression	6		7974546	1					
ANR	7975223	PrimaryExpression	"'""'"		7974546	1					
ANR	7975224	ExpressionStatement	"snprintf ( stack [ sptr ] . param [ PARAM_COLOR ] , sizeof ( stack [ 0 ] . param [ PARAM_COLOR ] ) , ""{\\\\c&H%X&}"" , html_color_parse ( avctx , param ) )"	161:36:3746:3995	7974546	1	True				
ANR	7975225	CallExpression	"snprintf ( stack [ sptr ] . param [ PARAM_COLOR ] , sizeof ( stack [ 0 ] . param [ PARAM_COLOR ] ) , ""{\\\\c&H%X&}"" , html_color_parse ( avctx , param ) )"		7974546	0					
ANR	7975226	Callee	snprintf		7974546	0					
ANR	7975227	Identifier	snprintf		7974546	0					
ANR	7975228	ArgumentList	stack [ sptr ] . param [ PARAM_COLOR ]		7974546	1					
ANR	7975229	Argument	stack [ sptr ] . param [ PARAM_COLOR ]		7974546	0					
ANR	7975230	ArrayIndexing	stack [ sptr ] . param [ PARAM_COLOR ]		7974546	0					
ANR	7975231	MemberAccess	stack [ sptr ] . param		7974546	0					
ANR	7975232	ArrayIndexing	stack [ sptr ]		7974546	0					
ANR	7975233	Identifier	stack		7974546	0					
ANR	7975234	Identifier	sptr		7974546	1					
ANR	7975235	Identifier	param		7974546	1					
ANR	7975236	Identifier	PARAM_COLOR		7974546	1					
ANR	7975237	Argument	sizeof ( stack [ 0 ] . param [ PARAM_COLOR ] )		7974546	1					
ANR	7975238	SizeofExpression	sizeof ( stack [ 0 ] . param [ PARAM_COLOR ] )		7974546	0					
ANR	7975239	Sizeof	sizeof		7974546	0					
ANR	7975240	ArrayIndexing	stack [ 0 ] . param [ PARAM_COLOR ]		7974546	1					
ANR	7975241	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7975242	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7975243	Identifier	stack		7974546	0					
ANR	7975244	PrimaryExpression	0		7974546	1					
ANR	7975245	Identifier	param		7974546	1					
ANR	7975246	Identifier	PARAM_COLOR		7974546	1					
ANR	7975247	Argument	"""{\\\\c&H%X&}"""		7974546	2					
ANR	7975248	PrimaryExpression	"""{\\\\c&H%X&}"""		7974546	0					
ANR	7975249	Argument	"html_color_parse ( avctx , param )"		7974546	3					
ANR	7975250	CallExpression	"html_color_parse ( avctx , param )"		7974546	0					
ANR	7975251	Callee	html_color_parse		7974546	0					
ANR	7975252	Identifier	html_color_parse		7974546	0					
ANR	7975253	ArgumentList	avctx		7974546	1					
ANR	7975254	Argument	avctx		7974546	0					
ANR	7975255	Identifier	avctx		7974546	0					
ANR	7975256	Argument	param		7974546	1					
ANR	7975257	Identifier	param		7974546	0					
ANR	7975258	ElseStatement	else		7974546	0					
ANR	7975259	IfStatement	"if ( ! strncmp ( param , ""face="" , 5 ) )"		7974546	0					
ANR	7975260	Condition	"! strncmp ( param , ""face="" , 5 )"	169:43:4041:4067	7974546	0	True				
ANR	7975261	UnaryOperationExpression	"! strncmp ( param , ""face="" , 5 )"		7974546	0					
ANR	7975262	UnaryOperator	!		7974546	0					
ANR	7975263	CallExpression	"strncmp ( param , ""face="" , 5 )"		7974546	1					
ANR	7975264	Callee	strncmp		7974546	0					
ANR	7975265	Identifier	strncmp		7974546	0					
ANR	7975266	ArgumentList	param		7974546	1					
ANR	7975267	Argument	param		7974546	0					
ANR	7975268	Identifier	param		7974546	0					
ANR	7975269	Argument	"""face="""		7974546	1					
ANR	7975270	PrimaryExpression	"""face="""		7974546	0					
ANR	7975271	Argument	5		7974546	2					
ANR	7975272	PrimaryExpression	5		7974546	0					
ANR	7975273	CompoundStatement		165:72:3910:3910	7974546	1					
ANR	7975274	ExpressionStatement	"param += 5 + ( param [ 5 ] == '""' )"	171:36:4109:4139	7974546	0	True				
ANR	7975275	AssignmentExpression	"param += 5 + ( param [ 5 ] == '""' )"		7974546	0		+=			
ANR	7975276	Identifier	param		7974546	0					
ANR	7975277	AdditiveExpression	"5 + ( param [ 5 ] == '""' )"		7974546	1		+			
ANR	7975278	PrimaryExpression	5		7974546	0					
ANR	7975279	EqualityExpression	"param [ 5 ] == '""'"		7974546	1		==			
ANR	7975280	ArrayIndexing	param [ 5 ]		7974546	0					
ANR	7975281	Identifier	param		7974546	0					
ANR	7975282	PrimaryExpression	5		7974546	1					
ANR	7975283	PrimaryExpression	"'""'"		7974546	1					
ANR	7975284	ExpressionStatement	"len = strcspn ( param , param [ - 1 ] == '""' ? ""\\"""" : "" "" )"	173:36:4178:4279	7974546	1	True				
ANR	7975285	AssignmentExpression	"len = strcspn ( param , param [ - 1 ] == '""' ? ""\\"""" : "" "" )"		7974546	0		=			
ANR	7975286	Identifier	len		7974546	0					
ANR	7975287	CallExpression	"strcspn ( param , param [ - 1 ] == '""' ? ""\\"""" : "" "" )"		7974546	1					
ANR	7975288	Callee	strcspn		7974546	0					
ANR	7975289	Identifier	strcspn		7974546	0					
ANR	7975290	ArgumentList	param		7974546	1					
ANR	7975291	Argument	param		7974546	0					
ANR	7975292	Identifier	param		7974546	0					
ANR	7975293	Argument	"param [ - 1 ] == '""' ? ""\\"""" : "" """		7974546	1					
ANR	7975294	ConditionalExpression	"param [ - 1 ] == '""' ? ""\\"""" : "" """		7974546	0					
ANR	7975295	Condition	"param [ - 1 ] == '""'"		7974546	0					
ANR	7975296	EqualityExpression	"param [ - 1 ] == '""'"		7974546	0		==			
ANR	7975297	ArrayIndexing	param [ - 1 ]		7974546	0					
ANR	7975298	Identifier	param		7974546	0					
ANR	7975299	UnaryOperationExpression	- 1		7974546	1					
ANR	7975300	UnaryOperator	-		7974546	0					
ANR	7975301	PrimaryExpression	1		7974546	1					
ANR	7975302	PrimaryExpression	"'""'"		7974546	1					
ANR	7975303	PrimaryExpression	"""\\"""""		7974546	1					
ANR	7975304	PrimaryExpression	""" """		7974546	2					
ANR	7975305	ExpressionStatement	"av_strlcpy ( tmp , param , FFMIN ( sizeof ( tmp ) , len + 1 ) )"	177:36:4318:4415	7974546	2	True				
ANR	7975306	CallExpression	"av_strlcpy ( tmp , param , FFMIN ( sizeof ( tmp ) , len + 1 ) )"		7974546	0					
ANR	7975307	Callee	av_strlcpy		7974546	0					
ANR	7975308	Identifier	av_strlcpy		7974546	0					
ANR	7975309	ArgumentList	tmp		7974546	1					
ANR	7975310	Argument	tmp		7974546	0					
ANR	7975311	Identifier	tmp		7974546	0					
ANR	7975312	Argument	param		7974546	1					
ANR	7975313	Identifier	param		7974546	0					
ANR	7975314	Argument	"FFMIN ( sizeof ( tmp ) , len + 1 )"		7974546	2					
ANR	7975315	CallExpression	"FFMIN ( sizeof ( tmp ) , len + 1 )"		7974546	0					
ANR	7975316	Callee	FFMIN		7974546	0					
ANR	7975317	Identifier	FFMIN		7974546	0					
ANR	7975318	ArgumentList	sizeof ( tmp )		7974546	1					
ANR	7975319	Argument	sizeof ( tmp )		7974546	0					
ANR	7975320	SizeofExpression	sizeof ( tmp )		7974546	0					
ANR	7975321	Sizeof	sizeof		7974546	0					
ANR	7975322	SizeofOperand	tmp		7974546	1					
ANR	7975323	Argument	len + 1		7974546	1					
ANR	7975324	AdditiveExpression	len + 1		7974546	0		+			
ANR	7975325	Identifier	len		7974546	0					
ANR	7975326	PrimaryExpression	1		7974546	1					
ANR	7975327	ExpressionStatement	param += len	181:36:4454:4466	7974546	3	True				
ANR	7975328	AssignmentExpression	param += len		7974546	0		+=			
ANR	7975329	Identifier	param		7974546	0					
ANR	7975330	Identifier	len		7974546	1					
ANR	7975331	ExpressionStatement	"snprintf ( stack [ sptr ] . param [ PARAM_FACE ] , sizeof ( stack [ 0 ] . param [ PARAM_FACE ] ) , ""{\\\\fn%s}"" , tmp )"	183:36:4505:4689	7974546	4	True				
ANR	7975332	CallExpression	"snprintf ( stack [ sptr ] . param [ PARAM_FACE ] , sizeof ( stack [ 0 ] . param [ PARAM_FACE ] ) , ""{\\\\fn%s}"" , tmp )"		7974546	0					
ANR	7975333	Callee	snprintf		7974546	0					
ANR	7975334	Identifier	snprintf		7974546	0					
ANR	7975335	ArgumentList	stack [ sptr ] . param [ PARAM_FACE ]		7974546	1					
ANR	7975336	Argument	stack [ sptr ] . param [ PARAM_FACE ]		7974546	0					
ANR	7975337	ArrayIndexing	stack [ sptr ] . param [ PARAM_FACE ]		7974546	0					
ANR	7975338	MemberAccess	stack [ sptr ] . param		7974546	0					
ANR	7975339	ArrayIndexing	stack [ sptr ]		7974546	0					
ANR	7975340	Identifier	stack		7974546	0					
ANR	7975341	Identifier	sptr		7974546	1					
ANR	7975342	Identifier	param		7974546	1					
ANR	7975343	Identifier	PARAM_FACE		7974546	1					
ANR	7975344	Argument	sizeof ( stack [ 0 ] . param [ PARAM_FACE ] )		7974546	1					
ANR	7975345	SizeofExpression	sizeof ( stack [ 0 ] . param [ PARAM_FACE ] )		7974546	0					
ANR	7975346	Sizeof	sizeof		7974546	0					
ANR	7975347	ArrayIndexing	stack [ 0 ] . param [ PARAM_FACE ]		7974546	1					
ANR	7975348	MemberAccess	stack [ 0 ] . param		7974546	0					
ANR	7975349	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7975350	Identifier	stack		7974546	0					
ANR	7975351	PrimaryExpression	0		7974546	1					
ANR	7975352	Identifier	param		7974546	1					
ANR	7975353	Identifier	PARAM_FACE		7974546	1					
ANR	7975354	Argument	"""{\\\\fn%s}"""		7974546	2					
ANR	7975355	PrimaryExpression	"""{\\\\fn%s}"""		7974546	0					
ANR	7975356	Argument	tmp		7974546	3					
ANR	7975357	Identifier	tmp		7974546	0					
ANR	7975358	IfStatement	"if ( ( param = strchr ( param , ' ' ) ) )"		7974546	1					
ANR	7975359	Condition	"param = strchr ( param , ' ' )"	191:36:4763:4790	7974546	0	True				
ANR	7975360	AssignmentExpression	"param = strchr ( param , ' ' )"		7974546	0		=			
ANR	7975361	Identifier	param		7974546	0					
ANR	7975362	CallExpression	"strchr ( param , ' ' )"		7974546	1					
ANR	7975363	Callee	strchr		7974546	0					
ANR	7975364	Identifier	strchr		7974546	0					
ANR	7975365	ArgumentList	param		7974546	1					
ANR	7975366	Argument	param		7974546	0					
ANR	7975367	Identifier	param		7974546	0					
ANR	7975368	Argument	' '		7974546	1					
ANR	7975369	PrimaryExpression	' '		7974546	0					
ANR	7975370	ExpressionStatement	param ++	193:36:4830:4837	7974546	1	True				
ANR	7975371	PostIncDecOperationExpression	param ++		7974546	0					
ANR	7975372	Identifier	param		7974546	0					
ANR	7975373	IncDec	++		7974546	1					
ANR	7975374	ForStatement	for ( i = 0 ; i < PARAM_NUMBER ; i ++ )		7974546	1					
ANR	7975375	ForInit	i = 0 ;	197:33:4904:4907	7974546	0	True				
ANR	7975376	AssignmentExpression	i = 0		7974546	0		=			
ANR	7975377	Identifier	i		7974546	0					
ANR	7975378	PrimaryExpression	0		7974546	1					
ANR	7975379	Condition	i < PARAM_NUMBER	197:38:4909:4922	7974546	1	True				
ANR	7975380	RelationalExpression	i < PARAM_NUMBER		7974546	0		<			
ANR	7975381	Identifier	i		7974546	0					
ANR	7975382	Identifier	PARAM_NUMBER		7974546	1					
ANR	7975383	PostIncDecOperationExpression	i ++	197:54:4925:4927	7974546	2	True				
ANR	7975384	Identifier	i		7974546	0					
ANR	7975385	IncDec	++		7974546	1					
ANR	7975386	IfStatement	if ( stack [ sptr ] . param [ i ] [ 0 ] )		7974546	3					
ANR	7975387	Condition	stack [ sptr ] . param [ i ] [ 0 ]	199:36:4967:4989	7974546	0	True				
ANR	7975388	ArrayIndexing	stack [ sptr ] . param [ i ] [ 0 ]		7974546	0					
ANR	7975389	ArrayIndexing	stack [ sptr ] . param [ i ]		7974546	0					
ANR	7975390	MemberAccess	stack [ sptr ] . param		7974546	0					
ANR	7975391	ArrayIndexing	stack [ sptr ]		7974546	0					
ANR	7975392	Identifier	stack		7974546	0					
ANR	7975393	Identifier	sptr		7974546	1					
ANR	7975394	Identifier	param		7974546	1					
ANR	7975395	Identifier	i		7974546	1					
ANR	7975396	PrimaryExpression	0		7974546	1					
ANR	7975397	ExpressionStatement	"out += snprintf ( out , out_end - out , ""%s"" , stack [ sptr ] . param [ i ] )"	201:36:5029:5143	7974546	1	True				
ANR	7975398	AssignmentExpression	"out += snprintf ( out , out_end - out , ""%s"" , stack [ sptr ] . param [ i ] )"		7974546	0		+=			
ANR	7975399	Identifier	out		7974546	0					
ANR	7975400	CallExpression	"snprintf ( out , out_end - out , ""%s"" , stack [ sptr ] . param [ i ] )"		7974546	1					
ANR	7975401	Callee	snprintf		7974546	0					
ANR	7975402	Identifier	snprintf		7974546	0					
ANR	7975403	ArgumentList	out		7974546	1					
ANR	7975404	Argument	out		7974546	0					
ANR	7975405	Identifier	out		7974546	0					
ANR	7975406	Argument	out_end - out		7974546	1					
ANR	7975407	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7975408	Identifier	out_end		7974546	0					
ANR	7975409	Identifier	out		7974546	1					
ANR	7975410	Argument	"""%s"""		7974546	2					
ANR	7975411	PrimaryExpression	"""%s"""		7974546	0					
ANR	7975412	Argument	stack [ sptr ] . param [ i ]		7974546	3					
ANR	7975413	ArrayIndexing	stack [ sptr ] . param [ i ]		7974546	0					
ANR	7975414	MemberAccess	stack [ sptr ] . param		7974546	0					
ANR	7975415	ArrayIndexing	stack [ sptr ]		7974546	0					
ANR	7975416	Identifier	stack		7974546	0					
ANR	7975417	Identifier	sptr		7974546	1					
ANR	7975418	Identifier	param		7974546	1					
ANR	7975419	Identifier	i		7974546	1					
ANR	7975420	ElseStatement	else		7974546	0					
ANR	7975421	IfStatement	"if ( ! buffer [ 1 ] && strspn ( buffer , ""bisu"" ) == 1 )"		7974546	0					
ANR	7975422	Condition	"! buffer [ 1 ] && strspn ( buffer , ""bisu"" ) == 1"	207:31:5204:5244	7974546	0	True				
ANR	7975423	AndExpression	"! buffer [ 1 ] && strspn ( buffer , ""bisu"" ) == 1"		7974546	0		&&			
ANR	7975424	UnaryOperationExpression	! buffer [ 1 ]		7974546	0					
ANR	7975425	UnaryOperator	!		7974546	0					
ANR	7975426	ArrayIndexing	buffer [ 1 ]		7974546	1					
ANR	7975427	Identifier	buffer		7974546	0					
ANR	7975428	PrimaryExpression	1		7974546	1					
ANR	7975429	EqualityExpression	"strspn ( buffer , ""bisu"" ) == 1"		7974546	1		==			
ANR	7975430	CallExpression	"strspn ( buffer , ""bisu"" )"		7974546	0					
ANR	7975431	Callee	strspn		7974546	0					
ANR	7975432	Identifier	strspn		7974546	0					
ANR	7975433	ArgumentList	buffer		7974546	1					
ANR	7975434	Argument	buffer		7974546	0					
ANR	7975435	Identifier	buffer		7974546	0					
ANR	7975436	Argument	"""bisu"""		7974546	1					
ANR	7975437	PrimaryExpression	"""bisu"""		7974546	0					
ANR	7975438	PrimaryExpression	1		7974546	1					
ANR	7975439	CompoundStatement		203:74:5087:5087	7974546	1					
ANR	7975440	ExpressionStatement	"out += snprintf ( out , out_end - out , ""{\\\\%c%d}"" , buffer [ 0 ] , ! tag_close )"	209:24:5274:5383	7974546	0	True				
ANR	7975441	AssignmentExpression	"out += snprintf ( out , out_end - out , ""{\\\\%c%d}"" , buffer [ 0 ] , ! tag_close )"		7974546	0		+=			
ANR	7975442	Identifier	out		7974546	0					
ANR	7975443	CallExpression	"snprintf ( out , out_end - out , ""{\\\\%c%d}"" , buffer [ 0 ] , ! tag_close )"		7974546	1					
ANR	7975444	Callee	snprintf		7974546	0					
ANR	7975445	Identifier	snprintf		7974546	0					
ANR	7975446	ArgumentList	out		7974546	1					
ANR	7975447	Argument	out		7974546	0					
ANR	7975448	Identifier	out		7974546	0					
ANR	7975449	Argument	out_end - out		7974546	1					
ANR	7975450	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7975451	Identifier	out_end		7974546	0					
ANR	7975452	Identifier	out		7974546	1					
ANR	7975453	Argument	"""{\\\\%c%d}"""		7974546	2					
ANR	7975454	PrimaryExpression	"""{\\\\%c%d}"""		7974546	0					
ANR	7975455	Argument	buffer [ 0 ]		7974546	3					
ANR	7975456	ArrayIndexing	buffer [ 0 ]		7974546	0					
ANR	7975457	Identifier	buffer		7974546	0					
ANR	7975458	PrimaryExpression	0		7974546	1					
ANR	7975459	Argument	! tag_close		7974546	4					
ANR	7975460	UnaryOperationExpression	! tag_close		7974546	0					
ANR	7975461	UnaryOperator	!		7974546	0					
ANR	7975462	Identifier	tag_close		7974546	1					
ANR	7975463	ElseStatement	else		7974546	0					
ANR	7975464	CompoundStatement		209:27:5253:5253	7974546	0					
ANR	7975465	ExpressionStatement	unknown = 1	215:24:5440:5451	7974546	0	True				
ANR	7975466	AssignmentExpression	unknown = 1		7974546	0		=			
ANR	7975467	Identifier	unknown		7974546	0					
ANR	7975468	PrimaryExpression	1		7974546	1					
ANR	7975469	ExpressionStatement	"snprintf ( tmp , sizeof ( tmp ) , ""</%s>"" , buffer )"	217:24:5478:5521	7974546	1	True				
ANR	7975470	CallExpression	"snprintf ( tmp , sizeof ( tmp ) , ""</%s>"" , buffer )"		7974546	0					
ANR	7975471	Callee	snprintf		7974546	0					
ANR	7975472	Identifier	snprintf		7974546	0					
ANR	7975473	ArgumentList	tmp		7974546	1					
ANR	7975474	Argument	tmp		7974546	0					
ANR	7975475	Identifier	tmp		7974546	0					
ANR	7975476	Argument	sizeof ( tmp )		7974546	1					
ANR	7975477	SizeofExpression	sizeof ( tmp )		7974546	0					
ANR	7975478	Sizeof	sizeof		7974546	0					
ANR	7975479	SizeofOperand	tmp		7974546	1					
ANR	7975480	Argument	"""</%s>"""		7974546	2					
ANR	7975481	PrimaryExpression	"""</%s>"""		7974546	0					
ANR	7975482	Argument	buffer		7974546	3					
ANR	7975483	Identifier	buffer		7974546	0					
ANR	7975484	IfStatement	if ( tag_close )		7974546	4					
ANR	7975485	Condition	tag_close	221:24:5571:5579	7974546	0	True				
ANR	7975486	Identifier	tag_close		7974546	0					
ANR	7975487	CompoundStatement		217:35:5422:5422	7974546	1					
ANR	7975488	ExpressionStatement	sptr --	223:24:5609:5615	7974546	0	True				
ANR	7975489	PostIncDecOperationExpression	sptr --		7974546	0					
ANR	7975490	Identifier	sptr		7974546	0					
ANR	7975491	IncDec	--		7974546	1					
ANR	7975492	ElseStatement	else		7974546	0					
ANR	7975493	IfStatement	"if ( unknown && ! strstr ( in , tmp ) )"		7974546	0					
ANR	7975494	Condition	"unknown && ! strstr ( in , tmp )"	225:31:5649:5675	7974546	0	True				
ANR	7975495	AndExpression	"unknown && ! strstr ( in , tmp )"		7974546	0		&&			
ANR	7975496	Identifier	unknown		7974546	0					
ANR	7975497	UnaryOperationExpression	"! strstr ( in , tmp )"		7974546	1					
ANR	7975498	UnaryOperator	!		7974546	0					
ANR	7975499	CallExpression	"strstr ( in , tmp )"		7974546	1					
ANR	7975500	Callee	strstr		7974546	0					
ANR	7975501	Identifier	strstr		7974546	0					
ANR	7975502	ArgumentList	in		7974546	1					
ANR	7975503	Argument	in		7974546	0					
ANR	7975504	Identifier	in		7974546	0					
ANR	7975505	Argument	tmp		7974546	1					
ANR	7975506	Identifier	tmp		7974546	0					
ANR	7975507	CompoundStatement		221:60:5518:5518	7974546	1					
ANR	7975508	ExpressionStatement	in -= len + tag_close	227:24:5705:5726	7974546	0	True				
ANR	7975509	AssignmentExpression	in -= len + tag_close		7974546	0		-=			
ANR	7975510	Identifier	in		7974546	0					
ANR	7975511	AdditiveExpression	len + tag_close		7974546	1		+			
ANR	7975512	Identifier	len		7974546	0					
ANR	7975513	Identifier	tag_close		7974546	1					
ANR	7975514	ExpressionStatement	* out ++ = * in	229:24:5753:5765	7974546	1	True				
ANR	7975515	AssignmentExpression	* out ++ = * in		7974546	0		=			
ANR	7975516	UnaryOperationExpression	* out ++		7974546	0					
ANR	7975517	UnaryOperator	*		7974546	0					
ANR	7975518	PostIncDecOperationExpression	out ++		7974546	1					
ANR	7975519	Identifier	out		7974546	0					
ANR	7975520	IncDec	++		7974546	1					
ANR	7975521	UnaryOperationExpression	* in		7974546	1					
ANR	7975522	UnaryOperator	*		7974546	0					
ANR	7975523	Identifier	in		7974546	1					
ANR	7975524	ElseStatement	else		7974546	0					
ANR	7975525	ExpressionStatement	"av_strlcpy ( stack [ sptr ++ ] . tag , buffer , sizeof ( stack [ 0 ] . tag ) )"	233:24:5820:5915	7974546	0	True				
ANR	7975526	CallExpression	"av_strlcpy ( stack [ sptr ++ ] . tag , buffer , sizeof ( stack [ 0 ] . tag ) )"		7974546	0					
ANR	7975527	Callee	av_strlcpy		7974546	0					
ANR	7975528	Identifier	av_strlcpy		7974546	0					
ANR	7975529	ArgumentList	stack [ sptr ++ ] . tag		7974546	1					
ANR	7975530	Argument	stack [ sptr ++ ] . tag		7974546	0					
ANR	7975531	MemberAccess	stack [ sptr ++ ] . tag		7974546	0					
ANR	7975532	ArrayIndexing	stack [ sptr ++ ]		7974546	0					
ANR	7975533	Identifier	stack		7974546	0					
ANR	7975534	PostIncDecOperationExpression	sptr ++		7974546	1					
ANR	7975535	Identifier	sptr		7974546	0					
ANR	7975536	IncDec	++		7974546	1					
ANR	7975537	Identifier	tag		7974546	1					
ANR	7975538	Argument	buffer		7974546	1					
ANR	7975539	Identifier	buffer		7974546	0					
ANR	7975540	Argument	sizeof ( stack [ 0 ] . tag )		7974546	2					
ANR	7975541	SizeofExpression	sizeof ( stack [ 0 ] . tag )		7974546	0					
ANR	7975542	Sizeof	sizeof		7974546	0					
ANR	7975543	MemberAccess	stack [ 0 ] . tag		7974546	1					
ANR	7975544	ArrayIndexing	stack [ 0 ]		7974546	0					
ANR	7975545	Identifier	stack		7974546	0					
ANR	7975546	PrimaryExpression	0		7974546	1					
ANR	7975547	Identifier	tag		7974546	1					
ANR	7975548	BreakStatement	break ;	237:20:5938:5943	7974546	5	True				
ANR	7975549	Label	default :	243:8:5988:5995	7974546	18	True				
ANR	7975550	Identifier	default		7974546	0					
ANR	7975551	ExpressionStatement	* out ++ = * in	245:12:6010:6022	7974546	19	True				
ANR	7975552	AssignmentExpression	* out ++ = * in		7974546	0		=			
ANR	7975553	UnaryOperationExpression	* out ++		7974546	0					
ANR	7975554	UnaryOperator	*		7974546	0					
ANR	7975555	PostIncDecOperationExpression	out ++		7974546	1					
ANR	7975556	Identifier	out		7974546	0					
ANR	7975557	IncDec	++		7974546	1					
ANR	7975558	UnaryOperationExpression	* in		7974546	1					
ANR	7975559	UnaryOperator	*		7974546	0					
ANR	7975560	Identifier	in		7974546	1					
ANR	7975561	BreakStatement	break ;	247:12:6037:6042	7974546	20	True				
ANR	7975562	IfStatement	if ( * in != ' ' && * in != '\\r' && * in != '\\n' )		7974546	1					
ANR	7975563	Condition	* in != ' ' && * in != '\\r' && * in != '\\n'	251:12:6068:6107	7974546	0	True				
ANR	7975564	AndExpression	* in != ' ' && * in != '\\r' && * in != '\\n'		7974546	0		&&			
ANR	7975565	EqualityExpression	* in != ' '		7974546	0		!=			
ANR	7975566	UnaryOperationExpression	* in		7974546	0					
ANR	7975567	UnaryOperator	*		7974546	0					
ANR	7975568	Identifier	in		7974546	1					
ANR	7975569	PrimaryExpression	' '		7974546	1					
ANR	7975570	AndExpression	* in != '\\r' && * in != '\\n'		7974546	1		&&			
ANR	7975571	EqualityExpression	* in != '\\r'		7974546	0		!=			
ANR	7975572	UnaryOperationExpression	* in		7974546	0					
ANR	7975573	UnaryOperator	*		7974546	0					
ANR	7975574	Identifier	in		7974546	1					
ANR	7975575	PrimaryExpression	'\\r'		7974546	1					
ANR	7975576	EqualityExpression	* in != '\\n'		7974546	1		!=			
ANR	7975577	UnaryOperationExpression	* in		7974546	0					
ANR	7975578	UnaryOperator	*		7974546	0					
ANR	7975579	Identifier	in		7974546	1					
ANR	7975580	PrimaryExpression	'\\n'		7974546	1					
ANR	7975581	ExpressionStatement	line_start = 0	253:12:6123:6137	7974546	1	True				
ANR	7975582	AssignmentExpression	line_start = 0		7974546	0		=			
ANR	7975583	Identifier	line_start		7974546	0					
ANR	7975584	PrimaryExpression	0		7974546	1					
ANR	7975585	ExpressionStatement	"out = FFMIN ( out , out_end - 3 )"	259:4:6153:6180	7974546	9	True				
ANR	7975586	AssignmentExpression	"out = FFMIN ( out , out_end - 3 )"		7974546	0		=			
ANR	7975587	Identifier	out		7974546	0					
ANR	7975588	CallExpression	"FFMIN ( out , out_end - 3 )"		7974546	1					
ANR	7975589	Callee	FFMIN		7974546	0					
ANR	7975590	Identifier	FFMIN		7974546	0					
ANR	7975591	ArgumentList	out		7974546	1					
ANR	7975592	Argument	out		7974546	0					
ANR	7975593	Identifier	out		7974546	0					
ANR	7975594	Argument	out_end - 3		7974546	1					
ANR	7975595	AdditiveExpression	out_end - 3		7974546	0		-			
ANR	7975596	Identifier	out_end		7974546	0					
ANR	7975597	PrimaryExpression	3		7974546	1					
ANR	7975598	WhileStatement	"while ( ! strncmp ( out - 2 , ""\\\\N"" , 2 ) )"		7974546	10					
ANR	7975599	Condition	"! strncmp ( out - 2 , ""\\\\N"" , 2 )"	261:11:6194:6218	7974546	0	True				
ANR	7975600	UnaryOperationExpression	"! strncmp ( out - 2 , ""\\\\N"" , 2 )"		7974546	0					
ANR	7975601	UnaryOperator	!		7974546	0					
ANR	7975602	CallExpression	"strncmp ( out - 2 , ""\\\\N"" , 2 )"		7974546	1					
ANR	7975603	Callee	strncmp		7974546	0					
ANR	7975604	Identifier	strncmp		7974546	0					
ANR	7975605	ArgumentList	out - 2		7974546	1					
ANR	7975606	Argument	out - 2		7974546	0					
ANR	7975607	AdditiveExpression	out - 2		7974546	0		-			
ANR	7975608	Identifier	out		7974546	0					
ANR	7975609	PrimaryExpression	2		7974546	1					
ANR	7975610	Argument	"""\\\\N"""		7974546	1					
ANR	7975611	PrimaryExpression	"""\\\\N"""		7974546	0					
ANR	7975612	Argument	2		7974546	2					
ANR	7975613	PrimaryExpression	2		7974546	0					
ANR	7975614	ExpressionStatement	out -= 2	263:8:6230:6238	7974546	1	True				
ANR	7975615	AssignmentExpression	out -= 2		7974546	0		-=			
ANR	7975616	Identifier	out		7974546	0					
ANR	7975617	PrimaryExpression	2		7974546	1					
ANR	7975618	WhileStatement	while ( out [ - 1 ] == ' ' )		7974546	11					
ANR	7975619	Condition	out [ - 1 ] == ' '	265:11:6252:6265	7974546	0	True				
ANR	7975620	EqualityExpression	out [ - 1 ] == ' '		7974546	0		==			
ANR	7975621	ArrayIndexing	out [ - 1 ]		7974546	0					
ANR	7975622	Identifier	out		7974546	0					
ANR	7975623	UnaryOperationExpression	- 1		7974546	1					
ANR	7975624	UnaryOperator	-		7974546	0					
ANR	7975625	PrimaryExpression	1		7974546	1					
ANR	7975626	PrimaryExpression	' '		7974546	1					
ANR	7975627	ExpressionStatement	out --	267:8:6277:6282	7974546	1	True				
ANR	7975628	PostIncDecOperationExpression	out --		7974546	0					
ANR	7975629	Identifier	out		7974546	0					
ANR	7975630	IncDec	--		7974546	1					
ANR	7975631	ExpressionStatement	"out += snprintf ( out , out_end - out , ""\\r\\n"" )"	269:4:6289:6330	7974546	12	True				
ANR	7975632	AssignmentExpression	"out += snprintf ( out , out_end - out , ""\\r\\n"" )"		7974546	0		+=			
ANR	7975633	Identifier	out		7974546	0					
ANR	7975634	CallExpression	"snprintf ( out , out_end - out , ""\\r\\n"" )"		7974546	1					
ANR	7975635	Callee	snprintf		7974546	0					
ANR	7975636	Identifier	snprintf		7974546	0					
ANR	7975637	ArgumentList	out		7974546	1					
ANR	7975638	Argument	out		7974546	0					
ANR	7975639	Identifier	out		7974546	0					
ANR	7975640	Argument	out_end - out		7974546	1					
ANR	7975641	AdditiveExpression	out_end - out		7974546	0		-			
ANR	7975642	Identifier	out_end		7974546	0					
ANR	7975643	Identifier	out		7974546	1					
ANR	7975644	Argument	"""\\r\\n"""		7974546	2					
ANR	7975645	PrimaryExpression	"""\\r\\n"""		7974546	0					
ANR	7975646	ReturnStatement	return in ;	271:4:6337:6346	7974546	13	True				
ANR	7975647	Identifier	in		7974546	0					
ANR	7975648	ReturnType	static const char *		7974546	1					
ANR	7975649	Identifier	srt_to_ass		7974546	2					
ANR	7975650	ParameterList	"AVCodecContext * avctx , char * out , char * out_end , const char * in , int x1 , int y1 , int x2 , int y2"		7974546	3					
ANR	7975651	Parameter	AVCodecContext * avctx	1:30:30:50	7974546	0	True				
ANR	7975652	ParameterType	AVCodecContext *		7974546	0					
ANR	7975653	Identifier	avctx		7974546	1					
ANR	7975654	Parameter	char * out	1:53:53:61	7974546	1	True				
ANR	7975655	ParameterType	char *		7974546	0					
ANR	7975656	Identifier	out		7974546	1					
ANR	7975657	Parameter	char * out_end	1:64:64:76	7974546	2	True				
ANR	7975658	ParameterType	char *		7974546	0					
ANR	7975659	Identifier	out_end		7974546	1					
ANR	7975660	Parameter	const char * in	3:30:110:123	7974546	3	True				
ANR	7975661	ParameterType	const char *		7974546	0					
ANR	7975662	Identifier	in		7974546	1					
ANR	7975663	Parameter	int x1	3:46:126:131	7974546	4	True				
ANR	7975664	ParameterType	int		7974546	0					
ANR	7975665	Identifier	x1		7974546	1					
ANR	7975666	Parameter	int y1	3:54:134:139	7974546	5	True				
ANR	7975667	ParameterType	int		7974546	0					
ANR	7975668	Identifier	y1		7974546	1					
ANR	7975669	Parameter	int x2	3:62:142:147	7974546	6	True				
ANR	7975670	ParameterType	int		7974546	0					
ANR	7975671	Identifier	x2		7974546	1					
ANR	7975672	Parameter	int y2	3:70:150:155	7974546	7	True				
ANR	7975673	ParameterType	int		7974546	0					
ANR	7975674	Identifier	y2		7974546	1					
ANR	7975675	CFGEntryNode	ENTRY		7974546		True				
ANR	7975676	CFGExitNode	EXIT		7974546		True				
ANR	7975677	Symbol	stack		7974546						
ANR	7975678	Symbol	strchr		7974546						
ANR	7975679	Symbol	FFMIN		7974546						
ANR	7975680	Symbol	stack [ 0 ] . tag		7974546						
ANR	7975681	Symbol	stack [ 0 ] . param		7974546						
ANR	7975682	Symbol	stack [ j ] . param		7974546						
ANR	7975683	Symbol	strncmp		7974546						
ANR	7975684	Symbol	* stack [ sptr ] . param		7974546						
ANR	7975685	Symbol	len		7974546						
ANR	7975686	Symbol	tmp		7974546						
ANR	7975687	Symbol	PARAM_COLOR		7974546						
ANR	7975688	Symbol	* * stack [ sptr - 1 ] . param		7974546						
ANR	7975689	Symbol	buffer		7974546						
ANR	7975690	Symbol	line_start		7974546						
ANR	7975691	Symbol	strcmp		7974546						
ANR	7975692	Symbol	& font_size		7974546						
ANR	7975693	Symbol	* * j		7974546						
ANR	7975694	Symbol	* PARAM_SIZE		7974546						
ANR	7975695	Symbol	* * i		7974546						
ANR	7975696	Symbol	in		7974546						
ANR	7975697	Symbol	tag_close		7974546						
ANR	7975698	Symbol	stack [ sptr - 1 ] . tag		7974546						
ANR	7975699	Symbol	an		7974546						
ANR	7975700	Symbol	sptr		7974546						
ANR	7975701	Symbol	* param		7974546						
ANR	7975702	Symbol	FF_ARRAY_ELEMS		7974546						
ANR	7975703	Symbol	strspn		7974546						
ANR	7975704	Symbol	strstr		7974546						
ANR	7975705	Symbol	sscanf		7974546						
ANR	7975706	Symbol	* * * j		7974546						
ANR	7975707	Symbol	* out		7974546						
ANR	7975708	Symbol	x1		7974546						
ANR	7975709	Symbol	x2		7974546						
ANR	7975710	Symbol	PARAM_SIZE		7974546						
ANR	7975711	Symbol	& len		7974546						
ANR	7975712	Symbol	* PARAM_FACE		7974546						
ANR	7975713	Symbol	* stack [ 0 ] . param		7974546						
ANR	7975714	Symbol	PARAM_FACE		7974546						
ANR	7975715	Symbol	font_size		7974546						
ANR	7975716	Symbol	* in		7974546						
ANR	7975717	Symbol	PARAM_NUMBER		7974546						
ANR	7975718	Symbol	* * * sptr		7974546						
ANR	7975719	Symbol	strcspn		7974546						
ANR	7975720	Symbol	out		7974546						
ANR	7975721	Symbol	unknown		7974546						
ANR	7975722	Symbol	param		7974546						
ANR	7975723	Symbol	* stack [ sptr - 1 ] . param		7974546						
ANR	7975724	Symbol	html_color_parse		7974546						
ANR	7975725	Symbol	* * stack		7974546						
ANR	7975726	Symbol	y1		7974546						
ANR	7975727	Symbol	* * * stack		7974546						
ANR	7975728	Symbol	y2		7974546						
ANR	7975729	Symbol	end		7974546						
ANR	7975730	Symbol	* * sptr		7974546						
ANR	7975731	Symbol	stack [ sptr ++ ] . tag		7974546						
ANR	7975732	Symbol	* * stack [ j ] . param		7974546						
ANR	7975733	Symbol	avctx		7974546						
ANR	7975734	Symbol	snprintf		7974546						
ANR	7975735	Symbol	out_end		7974546						
ANR	7975736	Symbol	* out ++		7974546						
ANR	7975737	Symbol	* stack [ 0 ] . tag		7974546						
ANR	7975738	Symbol	* PARAM_COLOR		7974546						
ANR	7975739	Symbol	* param ++		7974546						
ANR	7975740	Symbol	* buffer		7974546						
ANR	7975741	Symbol	c		7974546						
ANR	7975742	Symbol	* stack [ j ] . param		7974546						
ANR	7975743	Symbol	& c		7974546						
ANR	7975744	Symbol	i		7974546						
ANR	7975745	Symbol	j		7974546						
ANR	7975746	Symbol	stack [ sptr - 1 ] . param		7974546						
ANR	7975747	Symbol	stack [ sptr ] . param		7974546						
ANR	7975748	Symbol	* i		7974546						
ANR	7975749	Symbol	* j		7974546						
ANR	7975750	Symbol	* sptr		7974546						
ANR	7975751	Symbol	* stack		7974546						
ANR	7975752	Symbol	* * stack [ sptr ] . param		7974546						
