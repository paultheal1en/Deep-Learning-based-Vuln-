command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3270046	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_fft_init_1.c								
ANR	3270047	Function	ff_fft_init	1:0:0:2789							
ANR	3270048	FunctionDef	"ff_fft_init (FFTContext * s , int nbits , int inverse)"		3270047	0					
ANR	3270049	CompoundStatement		3:0:56:2789	3270047	0					
ANR	3270050	IdentifierDeclStatement	"int i , j , m , n ;"	5:4:63:77	3270047	0	True				
ANR	3270051	IdentifierDecl	i		3270047	0					
ANR	3270052	IdentifierDeclType	int		3270047	0					
ANR	3270053	Identifier	i		3270047	1					
ANR	3270054	IdentifierDecl	j		3270047	1					
ANR	3270055	IdentifierDeclType	int		3270047	0					
ANR	3270056	Identifier	j		3270047	1					
ANR	3270057	IdentifierDecl	m		3270047	2					
ANR	3270058	IdentifierDeclType	int		3270047	0					
ANR	3270059	Identifier	m		3270047	1					
ANR	3270060	IdentifierDecl	n		3270047	3					
ANR	3270061	IdentifierDeclType	int		3270047	0					
ANR	3270062	Identifier	n		3270047	1					
ANR	3270063	IdentifierDeclStatement	"float alpha , c1 , s1 , s2 ;"	7:4:84:107	3270047	1	True				
ANR	3270064	IdentifierDecl	alpha		3270047	0					
ANR	3270065	IdentifierDeclType	float		3270047	0					
ANR	3270066	Identifier	alpha		3270047	1					
ANR	3270067	IdentifierDecl	c1		3270047	1					
ANR	3270068	IdentifierDeclType	float		3270047	0					
ANR	3270069	Identifier	c1		3270047	1					
ANR	3270070	IdentifierDecl	s1		3270047	2					
ANR	3270071	IdentifierDeclType	float		3270047	0					
ANR	3270072	Identifier	s1		3270047	1					
ANR	3270073	IdentifierDecl	s2		3270047	3					
ANR	3270074	IdentifierDeclType	float		3270047	0					
ANR	3270075	Identifier	s2		3270047	1					
ANR	3270076	IdentifierDeclStatement	int shuffle = 0 ;	9:4:114:129	3270047	2	True				
ANR	3270077	IdentifierDecl	shuffle = 0		3270047	0					
ANR	3270078	IdentifierDeclType	int		3270047	0					
ANR	3270079	Identifier	shuffle		3270047	1					
ANR	3270080	AssignmentExpression	shuffle = 0		3270047	2		=			
ANR	3270081	Identifier	shuffle		3270047	0					
ANR	3270082	PrimaryExpression	0		3270047	1					
ANR	3270083	IdentifierDeclStatement	int av_unused has_vectors ;	11:4:136:161	3270047	3	True				
ANR	3270084	IdentifierDecl	has_vectors		3270047	0					
ANR	3270085	IdentifierDeclType	int av_unused		3270047	0					
ANR	3270086	Identifier	has_vectors		3270047	1					
ANR	3270087	ExpressionStatement	s -> nbits = nbits	15:4:170:186	3270047	4	True				
ANR	3270088	AssignmentExpression	s -> nbits = nbits		3270047	0		=			
ANR	3270089	PtrMemberAccess	s -> nbits		3270047	0					
ANR	3270090	Identifier	s		3270047	0					
ANR	3270091	Identifier	nbits		3270047	1					
ANR	3270092	Identifier	nbits		3270047	1					
ANR	3270093	ExpressionStatement	n = 1 << nbits	17:4:193:207	3270047	5	True				
ANR	3270094	AssignmentExpression	n = 1 << nbits		3270047	0		=			
ANR	3270095	Identifier	n		3270047	0					
ANR	3270096	ShiftExpression	1 << nbits		3270047	1		<<			
ANR	3270097	PrimaryExpression	1		3270047	0					
ANR	3270098	Identifier	nbits		3270047	1					
ANR	3270099	ExpressionStatement	s -> exptab = av_malloc ( ( n / 2 ) * sizeof ( FFTComplex ) )	21:4:216:267	3270047	6	True				
ANR	3270100	AssignmentExpression	s -> exptab = av_malloc ( ( n / 2 ) * sizeof ( FFTComplex ) )		3270047	0		=			
ANR	3270101	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270102	Identifier	s		3270047	0					
ANR	3270103	Identifier	exptab		3270047	1					
ANR	3270104	CallExpression	av_malloc ( ( n / 2 ) * sizeof ( FFTComplex ) )		3270047	1					
ANR	3270105	Callee	av_malloc		3270047	0					
ANR	3270106	Identifier	av_malloc		3270047	0					
ANR	3270107	ArgumentList	( n / 2 ) * sizeof ( FFTComplex )		3270047	1					
ANR	3270108	Argument	( n / 2 ) * sizeof ( FFTComplex )		3270047	0					
ANR	3270109	MultiplicativeExpression	( n / 2 ) * sizeof ( FFTComplex )		3270047	0		*			
ANR	3270110	MultiplicativeExpression	n / 2		3270047	0		/			
ANR	3270111	Identifier	n		3270047	0					
ANR	3270112	PrimaryExpression	2		3270047	1					
ANR	3270113	SizeofExpression	sizeof ( FFTComplex )		3270047	1					
ANR	3270114	Sizeof	sizeof		3270047	0					
ANR	3270115	SizeofOperand	FFTComplex		3270047	1					
ANR	3270116	IfStatement	if ( ! s -> exptab )		3270047	7					
ANR	3270117	Condition	! s -> exptab	23:8:278:287	3270047	0	True				
ANR	3270118	UnaryOperationExpression	! s -> exptab		3270047	0					
ANR	3270119	UnaryOperator	!		3270047	0					
ANR	3270120	PtrMemberAccess	s -> exptab		3270047	1					
ANR	3270121	Identifier	s		3270047	0					
ANR	3270122	Identifier	exptab		3270047	1					
ANR	3270123	GotoStatement	goto fail ;	25:8:299:308	3270047	1	True				
ANR	3270124	Identifier	fail		3270047	0					
ANR	3270125	ExpressionStatement	s -> revtab = av_malloc ( n * sizeof ( uint16_t ) )	27:4:315:358	3270047	8	True				
ANR	3270126	AssignmentExpression	s -> revtab = av_malloc ( n * sizeof ( uint16_t ) )		3270047	0		=			
ANR	3270127	PtrMemberAccess	s -> revtab		3270047	0					
ANR	3270128	Identifier	s		3270047	0					
ANR	3270129	Identifier	revtab		3270047	1					
ANR	3270130	CallExpression	av_malloc ( n * sizeof ( uint16_t ) )		3270047	1					
ANR	3270131	Callee	av_malloc		3270047	0					
ANR	3270132	Identifier	av_malloc		3270047	0					
ANR	3270133	ArgumentList	n * sizeof ( uint16_t )		3270047	1					
ANR	3270134	Argument	n * sizeof ( uint16_t )		3270047	0					
ANR	3270135	MultiplicativeExpression	n * sizeof ( uint16_t )		3270047	0		*			
ANR	3270136	Identifier	n		3270047	0					
ANR	3270137	SizeofExpression	sizeof ( uint16_t )		3270047	1					
ANR	3270138	Sizeof	sizeof		3270047	0					
ANR	3270139	SizeofOperand	uint16_t		3270047	1					
ANR	3270140	IfStatement	if ( ! s -> revtab )		3270047	9					
ANR	3270141	Condition	! s -> revtab	29:8:369:378	3270047	0	True				
ANR	3270142	UnaryOperationExpression	! s -> revtab		3270047	0					
ANR	3270143	UnaryOperator	!		3270047	0					
ANR	3270144	PtrMemberAccess	s -> revtab		3270047	1					
ANR	3270145	Identifier	s		3270047	0					
ANR	3270146	Identifier	revtab		3270047	1					
ANR	3270147	GotoStatement	goto fail ;	31:8:390:399	3270047	1	True				
ANR	3270148	Identifier	fail		3270047	0					
ANR	3270149	ExpressionStatement	s -> inverse = inverse	33:4:406:426	3270047	10	True				
ANR	3270150	AssignmentExpression	s -> inverse = inverse		3270047	0		=			
ANR	3270151	PtrMemberAccess	s -> inverse		3270047	0					
ANR	3270152	Identifier	s		3270047	0					
ANR	3270153	Identifier	inverse		3270047	1					
ANR	3270154	Identifier	inverse		3270047	1					
ANR	3270155	ExpressionStatement	s2 = inverse ? 1.0 : - 1.0	37:4:435:460	3270047	11	True				
ANR	3270156	AssignmentExpression	s2 = inverse ? 1.0 : - 1.0		3270047	0		=			
ANR	3270157	Identifier	s2		3270047	0					
ANR	3270158	ConditionalExpression	inverse ? 1.0 : - 1.0		3270047	1					
ANR	3270159	Condition	inverse		3270047	0					
ANR	3270160	Identifier	inverse		3270047	0					
ANR	3270161	PrimaryExpression	1.0		3270047	1					
ANR	3270162	UnaryOperationExpression	- 1.0		3270047	2					
ANR	3270163	UnaryOperator	-		3270047	0					
ANR	3270164	PrimaryExpression	1.0		3270047	1					
ANR	3270165	ForStatement	for ( i = 0 ; i < ( n / 2 ) ; i ++ )		3270047	12					
ANR	3270166	ForInit	i = 0 ;	41:8:473:476	3270047	0	True				
ANR	3270167	AssignmentExpression	i = 0		3270047	0		=			
ANR	3270168	Identifier	i		3270047	0					
ANR	3270169	PrimaryExpression	0		3270047	1					
ANR	3270170	Condition	i < ( n / 2 )	41:12:477:483	3270047	1	True				
ANR	3270171	RelationalExpression	i < ( n / 2 )		3270047	0		<			
ANR	3270172	Identifier	i		3270047	0					
ANR	3270173	MultiplicativeExpression	n / 2		3270047	1		/			
ANR	3270174	Identifier	n		3270047	0					
ANR	3270175	PrimaryExpression	2		3270047	1					
ANR	3270176	PostIncDecOperationExpression	i ++	41:20:485:487	3270047	2	True				
ANR	3270177	Identifier	i		3270047	0					
ANR	3270178	IncDec	++		3270047	1					
ANR	3270179	CompoundStatement		39:25:433:433	3270047	3					
ANR	3270180	ExpressionStatement	alpha = 2 * M_PI * ( float ) i / ( float ) n	43:8:501:539	3270047	0	True				
ANR	3270181	AssignmentExpression	alpha = 2 * M_PI * ( float ) i / ( float ) n		3270047	0		=			
ANR	3270182	Identifier	alpha		3270047	0					
ANR	3270183	MultiplicativeExpression	2 * M_PI * ( float ) i / ( float ) n		3270047	1		*			
ANR	3270184	PrimaryExpression	2		3270047	0					
ANR	3270185	MultiplicativeExpression	M_PI * ( float ) i / ( float ) n		3270047	1		*			
ANR	3270186	Identifier	M_PI		3270047	0					
ANR	3270187	MultiplicativeExpression	( float ) i / ( float ) n		3270047	1		/			
ANR	3270188	CastExpression	( float ) i		3270047	0					
ANR	3270189	CastTarget	float		3270047	0					
ANR	3270190	Identifier	i		3270047	1					
ANR	3270191	CastExpression	( float ) n		3270047	1					
ANR	3270192	CastTarget	float		3270047	0					
ANR	3270193	Identifier	n		3270047	1					
ANR	3270194	ExpressionStatement	c1 = cos ( alpha )	45:8:550:565	3270047	1	True				
ANR	3270195	AssignmentExpression	c1 = cos ( alpha )		3270047	0		=			
ANR	3270196	Identifier	c1		3270047	0					
ANR	3270197	CallExpression	cos ( alpha )		3270047	1					
ANR	3270198	Callee	cos		3270047	0					
ANR	3270199	Identifier	cos		3270047	0					
ANR	3270200	ArgumentList	alpha		3270047	1					
ANR	3270201	Argument	alpha		3270047	0					
ANR	3270202	Identifier	alpha		3270047	0					
ANR	3270203	ExpressionStatement	s1 = sin ( alpha ) * s2	47:8:576:596	3270047	2	True				
ANR	3270204	AssignmentExpression	s1 = sin ( alpha ) * s2		3270047	0		=			
ANR	3270205	Identifier	s1		3270047	0					
ANR	3270206	MultiplicativeExpression	sin ( alpha ) * s2		3270047	1		*			
ANR	3270207	CallExpression	sin ( alpha )		3270047	0					
ANR	3270208	Callee	sin		3270047	0					
ANR	3270209	Identifier	sin		3270047	0					
ANR	3270210	ArgumentList	alpha		3270047	1					
ANR	3270211	Argument	alpha		3270047	0					
ANR	3270212	Identifier	alpha		3270047	0					
ANR	3270213	Identifier	s2		3270047	1					
ANR	3270214	ExpressionStatement	s -> exptab [ i ] . re = c1	49:8:607:627	3270047	3	True				
ANR	3270215	AssignmentExpression	s -> exptab [ i ] . re = c1		3270047	0		=			
ANR	3270216	MemberAccess	s -> exptab [ i ] . re		3270047	0					
ANR	3270217	ArrayIndexing	s -> exptab [ i ]		3270047	0					
ANR	3270218	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270219	Identifier	s		3270047	0					
ANR	3270220	Identifier	exptab		3270047	1					
ANR	3270221	Identifier	i		3270047	1					
ANR	3270222	Identifier	re		3270047	1					
ANR	3270223	Identifier	c1		3270047	1					
ANR	3270224	ExpressionStatement	s -> exptab [ i ] . im = s1	51:8:638:658	3270047	4	True				
ANR	3270225	AssignmentExpression	s -> exptab [ i ] . im = s1		3270047	0		=			
ANR	3270226	MemberAccess	s -> exptab [ i ] . im		3270047	0					
ANR	3270227	ArrayIndexing	s -> exptab [ i ]		3270047	0					
ANR	3270228	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270229	Identifier	s		3270047	0					
ANR	3270230	Identifier	exptab		3270047	1					
ANR	3270231	Identifier	i		3270047	1					
ANR	3270232	Identifier	im		3270047	1					
ANR	3270233	Identifier	s1		3270047	1					
ANR	3270234	ExpressionStatement	s -> fft_calc = ff_fft_calc_c	55:4:672:699	3270047	13	True				
ANR	3270235	AssignmentExpression	s -> fft_calc = ff_fft_calc_c		3270047	0		=			
ANR	3270236	PtrMemberAccess	s -> fft_calc		3270047	0					
ANR	3270237	Identifier	s		3270047	0					
ANR	3270238	Identifier	fft_calc		3270047	1					
ANR	3270239	Identifier	ff_fft_calc_c		3270047	1					
ANR	3270240	ExpressionStatement	s -> imdct_calc = ff_imdct_calc	57:4:706:735	3270047	14	True				
ANR	3270241	AssignmentExpression	s -> imdct_calc = ff_imdct_calc		3270047	0		=			
ANR	3270242	PtrMemberAccess	s -> imdct_calc		3270047	0					
ANR	3270243	Identifier	s		3270047	0					
ANR	3270244	Identifier	imdct_calc		3270047	1					
ANR	3270245	Identifier	ff_imdct_calc		3270047	1					
ANR	3270246	ExpressionStatement	s -> imdct_half = ff_imdct_half	59:4:742:771	3270047	15	True				
ANR	3270247	AssignmentExpression	s -> imdct_half = ff_imdct_half		3270047	0		=			
ANR	3270248	PtrMemberAccess	s -> imdct_half		3270047	0					
ANR	3270249	Identifier	s		3270047	0					
ANR	3270250	Identifier	imdct_half		3270047	1					
ANR	3270251	Identifier	ff_imdct_half		3270047	1					
ANR	3270252	ExpressionStatement	s -> exptab1 = NULL	61:4:778:795	3270047	16	True				
ANR	3270253	AssignmentExpression	s -> exptab1 = NULL		3270047	0		=			
ANR	3270254	PtrMemberAccess	s -> exptab1		3270047	0					
ANR	3270255	Identifier	s		3270047	0					
ANR	3270256	Identifier	exptab1		3270047	1					
ANR	3270257	Identifier	NULL		3270047	1					
ANR	3270258	ExpressionStatement	has_vectors = mm_support ( )	67:4:821:847	3270047	17	True				
ANR	3270259	AssignmentExpression	has_vectors = mm_support ( )		3270047	0		=			
ANR	3270260	Identifier	has_vectors		3270047	0					
ANR	3270261	CallExpression	mm_support ( )		3270047	1					
ANR	3270262	Callee	mm_support		3270047	0					
ANR	3270263	Identifier	mm_support		3270047	0					
ANR	3270264	ArgumentList			3270047	1					
ANR	3270265	ExpressionStatement	shuffle = 1	69:4:854:865	3270047	18	True				
ANR	3270266	AssignmentExpression	shuffle = 1		3270047	0		=			
ANR	3270267	Identifier	shuffle		3270047	0					
ANR	3270268	PrimaryExpression	1		3270047	1					
ANR	3270269	IfStatement	if ( has_vectors & MM_3DNOWEXT )		3270047	19					
ANR	3270270	Condition	has_vectors & MM_3DNOWEXT	71:8:876:900	3270047	0	True				
ANR	3270271	BitAndExpression	has_vectors & MM_3DNOWEXT		3270047	0		&			
ANR	3270272	Identifier	has_vectors		3270047	0					
ANR	3270273	Identifier	MM_3DNOWEXT		3270047	1					
ANR	3270274	CompoundStatement		69:35:846:846	3270047	1					
ANR	3270275	ExpressionStatement	s -> imdct_calc = ff_imdct_calc_3dn2	75:8:947:981	3270047	0	True				
ANR	3270276	AssignmentExpression	s -> imdct_calc = ff_imdct_calc_3dn2		3270047	0		=			
ANR	3270277	PtrMemberAccess	s -> imdct_calc		3270047	0					
ANR	3270278	Identifier	s		3270047	0					
ANR	3270279	Identifier	imdct_calc		3270047	1					
ANR	3270280	Identifier	ff_imdct_calc_3dn2		3270047	1					
ANR	3270281	ExpressionStatement	s -> fft_calc = ff_fft_calc_3dn2	78:8:993:1023	3270047	1	True				
ANR	3270282	AssignmentExpression	s -> fft_calc = ff_fft_calc_3dn2		3270047	0		=			
ANR	3270283	PtrMemberAccess	s -> fft_calc		3270047	0					
ANR	3270284	Identifier	s		3270047	0					
ANR	3270285	Identifier	fft_calc		3270047	1					
ANR	3270286	Identifier	ff_fft_calc_3dn2		3270047	1					
ANR	3270287	ElseStatement	else		3270047	0					
ANR	3270288	IfStatement	if ( has_vectors & MM_3DNOW )		3270047	0					
ANR	3270289	Condition	has_vectors & MM_3DNOW	80:15:1041:1062	3270047	0	True				
ANR	3270290	BitAndExpression	has_vectors & MM_3DNOW		3270047	0		&			
ANR	3270291	Identifier	has_vectors		3270047	0					
ANR	3270292	Identifier	MM_3DNOW		3270047	1					
ANR	3270293	CompoundStatement		78:39:1008:1008	3270047	1					
ANR	3270294	ExpressionStatement	s -> fft_calc = ff_fft_calc_3dn	84:8:1109:1138	3270047	0	True				
ANR	3270295	AssignmentExpression	s -> fft_calc = ff_fft_calc_3dn		3270047	0		=			
ANR	3270296	PtrMemberAccess	s -> fft_calc		3270047	0					
ANR	3270297	Identifier	s		3270047	0					
ANR	3270298	Identifier	fft_calc		3270047	1					
ANR	3270299	Identifier	ff_fft_calc_3dn		3270047	1					
ANR	3270300	ElseStatement	else		3270047	0					
ANR	3270301	IfStatement	if ( has_vectors & MM_SSE )		3270047	0					
ANR	3270302	Condition	has_vectors & MM_SSE	86:15:1156:1175	3270047	0	True				
ANR	3270303	BitAndExpression	has_vectors & MM_SSE		3270047	0		&			
ANR	3270304	Identifier	has_vectors		3270047	0					
ANR	3270305	Identifier	MM_SSE		3270047	1					
ANR	3270306	CompoundStatement		84:37:1121:1121	3270047	1					
ANR	3270307	ExpressionStatement	s -> imdct_calc = ff_imdct_calc_sse	90:8:1218:1251	3270047	0	True				
ANR	3270308	AssignmentExpression	s -> imdct_calc = ff_imdct_calc_sse		3270047	0		=			
ANR	3270309	PtrMemberAccess	s -> imdct_calc		3270047	0					
ANR	3270310	Identifier	s		3270047	0					
ANR	3270311	Identifier	imdct_calc		3270047	1					
ANR	3270312	Identifier	ff_imdct_calc_sse		3270047	1					
ANR	3270313	ExpressionStatement	s -> imdct_half = ff_imdct_half_sse	92:8:1262:1295	3270047	1	True				
ANR	3270314	AssignmentExpression	s -> imdct_half = ff_imdct_half_sse		3270047	0		=			
ANR	3270315	PtrMemberAccess	s -> imdct_half		3270047	0					
ANR	3270316	Identifier	s		3270047	0					
ANR	3270317	Identifier	imdct_half		3270047	1					
ANR	3270318	Identifier	ff_imdct_half_sse		3270047	1					
ANR	3270319	ExpressionStatement	s -> fft_calc = ff_fft_calc_sse	94:8:1306:1335	3270047	2	True				
ANR	3270320	AssignmentExpression	s -> fft_calc = ff_fft_calc_sse		3270047	0		=			
ANR	3270321	PtrMemberAccess	s -> fft_calc		3270047	0					
ANR	3270322	Identifier	s		3270047	0					
ANR	3270323	Identifier	fft_calc		3270047	1					
ANR	3270324	Identifier	ff_fft_calc_sse		3270047	1					
ANR	3270325	ElseStatement	else		3270047	0					
ANR	3270326	CompoundStatement		94:11:1292:1292	3270047	0					
ANR	3270327	ExpressionStatement	shuffle = 0	98:8:1360:1371	3270047	0	True				
ANR	3270328	AssignmentExpression	shuffle = 0		3270047	0		=			
ANR	3270329	Identifier	shuffle		3270047	0					
ANR	3270330	PrimaryExpression	0		3270047	1					
ANR	3270331	IfStatement	if ( shuffle )		3270047	20					
ANR	3270332	Condition	shuffle	120:8:1666:1672	3270047	0	True				
ANR	3270333	Identifier	shuffle		3270047	0					
ANR	3270334	CompoundStatement		122:8:1663:1676	3270047	1					
ANR	3270335	IdentifierDeclStatement	"int np , nblocks , np2 , l ;"	122:8:1686:1709	3270047	0	True				
ANR	3270336	IdentifierDecl	np		3270047	0					
ANR	3270337	IdentifierDeclType	int		3270047	0					
ANR	3270338	Identifier	np		3270047	1					
ANR	3270339	IdentifierDecl	nblocks		3270047	1					
ANR	3270340	IdentifierDeclType	int		3270047	0					
ANR	3270341	Identifier	nblocks		3270047	1					
ANR	3270342	IdentifierDecl	np2		3270047	2					
ANR	3270343	IdentifierDeclType	int		3270047	0					
ANR	3270344	Identifier	np2		3270047	1					
ANR	3270345	IdentifierDecl	l		3270047	3					
ANR	3270346	IdentifierDeclType	int		3270047	0					
ANR	3270347	Identifier	l		3270047	1					
ANR	3270348	IdentifierDeclStatement	FFTComplex * q ;	124:8:1720:1733	3270047	1	True				
ANR	3270349	IdentifierDecl	* q		3270047	0					
ANR	3270350	IdentifierDeclType	FFTComplex *		3270047	0					
ANR	3270351	Identifier	q		3270047	1					
ANR	3270352	ExpressionStatement	np = 1 << nbits	128:8:1746:1761	3270047	2	True				
ANR	3270353	AssignmentExpression	np = 1 << nbits		3270047	0		=			
ANR	3270354	Identifier	np		3270047	0					
ANR	3270355	ShiftExpression	1 << nbits		3270047	1		<<			
ANR	3270356	PrimaryExpression	1		3270047	0					
ANR	3270357	Identifier	nbits		3270047	1					
ANR	3270358	ExpressionStatement	nblocks = np >> 3	130:8:1772:1789	3270047	3	True				
ANR	3270359	AssignmentExpression	nblocks = np >> 3		3270047	0		=			
ANR	3270360	Identifier	nblocks		3270047	0					
ANR	3270361	ShiftExpression	np >> 3		3270047	1		>>			
ANR	3270362	Identifier	np		3270047	0					
ANR	3270363	PrimaryExpression	3		3270047	1					
ANR	3270364	ExpressionStatement	np2 = np >> 1	132:8:1800:1813	3270047	4	True				
ANR	3270365	AssignmentExpression	np2 = np >> 1		3270047	0		=			
ANR	3270366	Identifier	np2		3270047	0					
ANR	3270367	ShiftExpression	np >> 1		3270047	1		>>			
ANR	3270368	Identifier	np		3270047	0					
ANR	3270369	PrimaryExpression	1		3270047	1					
ANR	3270370	ExpressionStatement	s -> exptab1 = av_malloc ( np * 2 * sizeof ( FFTComplex ) )	134:8:1824:1875	3270047	5	True				
ANR	3270371	AssignmentExpression	s -> exptab1 = av_malloc ( np * 2 * sizeof ( FFTComplex ) )		3270047	0		=			
ANR	3270372	PtrMemberAccess	s -> exptab1		3270047	0					
ANR	3270373	Identifier	s		3270047	0					
ANR	3270374	Identifier	exptab1		3270047	1					
ANR	3270375	CallExpression	av_malloc ( np * 2 * sizeof ( FFTComplex ) )		3270047	1					
ANR	3270376	Callee	av_malloc		3270047	0					
ANR	3270377	Identifier	av_malloc		3270047	0					
ANR	3270378	ArgumentList	np * 2 * sizeof ( FFTComplex )		3270047	1					
ANR	3270379	Argument	np * 2 * sizeof ( FFTComplex )		3270047	0					
ANR	3270380	MultiplicativeExpression	np * 2 * sizeof ( FFTComplex )		3270047	0		*			
ANR	3270381	Identifier	np		3270047	0					
ANR	3270382	MultiplicativeExpression	2 * sizeof ( FFTComplex )		3270047	1		*			
ANR	3270383	PrimaryExpression	2		3270047	0					
ANR	3270384	SizeofExpression	sizeof ( FFTComplex )		3270047	1					
ANR	3270385	Sizeof	sizeof		3270047	0					
ANR	3270386	SizeofOperand	FFTComplex		3270047	1					
ANR	3270387	IfStatement	if ( ! s -> exptab1 )		3270047	6					
ANR	3270388	Condition	! s -> exptab1	136:12:1890:1900	3270047	0	True				
ANR	3270389	UnaryOperationExpression	! s -> exptab1		3270047	0					
ANR	3270390	UnaryOperator	!		3270047	0					
ANR	3270391	PtrMemberAccess	s -> exptab1		3270047	1					
ANR	3270392	Identifier	s		3270047	0					
ANR	3270393	Identifier	exptab1		3270047	1					
ANR	3270394	GotoStatement	goto fail ;	138:12:1916:1925	3270047	1	True				
ANR	3270395	Identifier	fail		3270047	0					
ANR	3270396	ExpressionStatement	q = s -> exptab1	140:8:1936:1950	3270047	7	True				
ANR	3270397	AssignmentExpression	q = s -> exptab1		3270047	0		=			
ANR	3270398	Identifier	q		3270047	0					
ANR	3270399	PtrMemberAccess	s -> exptab1		3270047	1					
ANR	3270400	Identifier	s		3270047	0					
ANR	3270401	Identifier	exptab1		3270047	1					
ANR	3270402	DoStatement	do		3270047	8					
ANR	3270403	CompoundStatement		140:11:1907:1907	3270047	0					
ANR	3270404	ForStatement	for ( l = 0 ; l < np2 ; l += 2 * nblocks )		3270047	0					
ANR	3270405	ForInit	l = 0 ;	144:16:1983:1988	3270047	0	True				
ANR	3270406	AssignmentExpression	l = 0		3270047	0		=			
ANR	3270407	Identifier	l		3270047	0					
ANR	3270408	PrimaryExpression	0		3270047	1					
ANR	3270409	Condition	l < np2	144:23:1990:1996	3270047	1	True				
ANR	3270410	RelationalExpression	l < np2		3270047	0		<			
ANR	3270411	Identifier	l		3270047	0					
ANR	3270412	Identifier	np2		3270047	1					
ANR	3270413	AssignmentExpression	l += 2 * nblocks	144:32:1999:2014	3270047	2	True	+=			
ANR	3270414	Identifier	l		3270047	0					
ANR	3270415	MultiplicativeExpression	2 * nblocks		3270047	1		*			
ANR	3270416	PrimaryExpression	2		3270047	0					
ANR	3270417	Identifier	nblocks		3270047	1					
ANR	3270418	CompoundStatement		142:50:1960:1960	3270047	3					
ANR	3270419	ExpressionStatement	* q ++ = s -> exptab [ l ]	146:16:2036:2055	3270047	0	True				
ANR	3270420	AssignmentExpression	* q ++ = s -> exptab [ l ]		3270047	0		=			
ANR	3270421	UnaryOperationExpression	* q ++		3270047	0					
ANR	3270422	UnaryOperator	*		3270047	0					
ANR	3270423	PostIncDecOperationExpression	q ++		3270047	1					
ANR	3270424	Identifier	q		3270047	0					
ANR	3270425	IncDec	++		3270047	1					
ANR	3270426	ArrayIndexing	s -> exptab [ l ]		3270047	1					
ANR	3270427	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270428	Identifier	s		3270047	0					
ANR	3270429	Identifier	exptab		3270047	1					
ANR	3270430	Identifier	l		3270047	1					
ANR	3270431	ExpressionStatement	* q ++ = s -> exptab [ l + nblocks ]	148:16:2074:2103	3270047	1	True				
ANR	3270432	AssignmentExpression	* q ++ = s -> exptab [ l + nblocks ]		3270047	0		=			
ANR	3270433	UnaryOperationExpression	* q ++		3270047	0					
ANR	3270434	UnaryOperator	*		3270047	0					
ANR	3270435	PostIncDecOperationExpression	q ++		3270047	1					
ANR	3270436	Identifier	q		3270047	0					
ANR	3270437	IncDec	++		3270047	1					
ANR	3270438	ArrayIndexing	s -> exptab [ l + nblocks ]		3270047	1					
ANR	3270439	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270440	Identifier	s		3270047	0					
ANR	3270441	Identifier	exptab		3270047	1					
ANR	3270442	AdditiveExpression	l + nblocks		3270047	1		+			
ANR	3270443	Identifier	l		3270047	0					
ANR	3270444	Identifier	nblocks		3270047	1					
ANR	3270445	ExpressionStatement	q -> re = - s -> exptab [ l ] . im	152:16:2124:2148	3270047	2	True				
ANR	3270446	AssignmentExpression	q -> re = - s -> exptab [ l ] . im		3270047	0		=			
ANR	3270447	PtrMemberAccess	q -> re		3270047	0					
ANR	3270448	Identifier	q		3270047	0					
ANR	3270449	Identifier	re		3270047	1					
ANR	3270450	UnaryOperationExpression	- s -> exptab [ l ] . im		3270047	1					
ANR	3270451	UnaryOperator	-		3270047	0					
ANR	3270452	MemberAccess	s -> exptab [ l ] . im		3270047	1					
ANR	3270453	ArrayIndexing	s -> exptab [ l ]		3270047	0					
ANR	3270454	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270455	Identifier	s		3270047	0					
ANR	3270456	Identifier	exptab		3270047	1					
ANR	3270457	Identifier	l		3270047	1					
ANR	3270458	Identifier	im		3270047	1					
ANR	3270459	ExpressionStatement	q -> im = s -> exptab [ l ] . re	154:16:2167:2190	3270047	3	True				
ANR	3270460	AssignmentExpression	q -> im = s -> exptab [ l ] . re		3270047	0		=			
ANR	3270461	PtrMemberAccess	q -> im		3270047	0					
ANR	3270462	Identifier	q		3270047	0					
ANR	3270463	Identifier	im		3270047	1					
ANR	3270464	MemberAccess	s -> exptab [ l ] . re		3270047	1					
ANR	3270465	ArrayIndexing	s -> exptab [ l ]		3270047	0					
ANR	3270466	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270467	Identifier	s		3270047	0					
ANR	3270468	Identifier	exptab		3270047	1					
ANR	3270469	Identifier	l		3270047	1					
ANR	3270470	Identifier	re		3270047	1					
ANR	3270471	ExpressionStatement	q ++	156:16:2209:2212	3270047	4	True				
ANR	3270472	PostIncDecOperationExpression	q ++		3270047	0					
ANR	3270473	Identifier	q		3270047	0					
ANR	3270474	IncDec	++		3270047	1					
ANR	3270475	ExpressionStatement	q -> re = - s -> exptab [ l + nblocks ] . im	158:16:2231:2265	3270047	5	True				
ANR	3270476	AssignmentExpression	q -> re = - s -> exptab [ l + nblocks ] . im		3270047	0		=			
ANR	3270477	PtrMemberAccess	q -> re		3270047	0					
ANR	3270478	Identifier	q		3270047	0					
ANR	3270479	Identifier	re		3270047	1					
ANR	3270480	UnaryOperationExpression	- s -> exptab [ l + nblocks ] . im		3270047	1					
ANR	3270481	UnaryOperator	-		3270047	0					
ANR	3270482	MemberAccess	s -> exptab [ l + nblocks ] . im		3270047	1					
ANR	3270483	ArrayIndexing	s -> exptab [ l + nblocks ]		3270047	0					
ANR	3270484	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270485	Identifier	s		3270047	0					
ANR	3270486	Identifier	exptab		3270047	1					
ANR	3270487	AdditiveExpression	l + nblocks		3270047	1		+			
ANR	3270488	Identifier	l		3270047	0					
ANR	3270489	Identifier	nblocks		3270047	1					
ANR	3270490	Identifier	im		3270047	1					
ANR	3270491	ExpressionStatement	q -> im = s -> exptab [ l + nblocks ] . re	160:16:2284:2317	3270047	6	True				
ANR	3270492	AssignmentExpression	q -> im = s -> exptab [ l + nblocks ] . re		3270047	0		=			
ANR	3270493	PtrMemberAccess	q -> im		3270047	0					
ANR	3270494	Identifier	q		3270047	0					
ANR	3270495	Identifier	im		3270047	1					
ANR	3270496	MemberAccess	s -> exptab [ l + nblocks ] . re		3270047	1					
ANR	3270497	ArrayIndexing	s -> exptab [ l + nblocks ]		3270047	0					
ANR	3270498	PtrMemberAccess	s -> exptab		3270047	0					
ANR	3270499	Identifier	s		3270047	0					
ANR	3270500	Identifier	exptab		3270047	1					
ANR	3270501	AdditiveExpression	l + nblocks		3270047	1		+			
ANR	3270502	Identifier	l		3270047	0					
ANR	3270503	Identifier	nblocks		3270047	1					
ANR	3270504	Identifier	re		3270047	1					
ANR	3270505	ExpressionStatement	q ++	162:16:2336:2339	3270047	7	True				
ANR	3270506	PostIncDecOperationExpression	q ++		3270047	0					
ANR	3270507	Identifier	q		3270047	0					
ANR	3270508	IncDec	++		3270047	1					
ANR	3270509	ExpressionStatement	nblocks = nblocks >> 1	166:12:2369:2391	3270047	1	True				
ANR	3270510	AssignmentExpression	nblocks = nblocks >> 1		3270047	0		=			
ANR	3270511	Identifier	nblocks		3270047	0					
ANR	3270512	ShiftExpression	nblocks >> 1		3270047	1		>>			
ANR	3270513	Identifier	nblocks		3270047	0					
ANR	3270514	PrimaryExpression	1		3270047	1					
ANR	3270515	Condition	nblocks != 0	168:17:2411:2422	3270047	1	True				
ANR	3270516	EqualityExpression	nblocks != 0		3270047	0		!=			
ANR	3270517	Identifier	nblocks		3270047	0					
ANR	3270518	PrimaryExpression	0		3270047	1					
ANR	3270519	ExpressionStatement	av_freep ( & s -> exptab )	170:8:2435:2455	3270047	9	True				
ANR	3270520	CallExpression	av_freep ( & s -> exptab )		3270047	0					
ANR	3270521	Callee	av_freep		3270047	0					
ANR	3270522	Identifier	av_freep		3270047	0					
ANR	3270523	ArgumentList	& s -> exptab		3270047	1					
ANR	3270524	Argument	& s -> exptab		3270047	0					
ANR	3270525	UnaryOperationExpression	& s -> exptab		3270047	0					
ANR	3270526	UnaryOperator	&		3270047	0					
ANR	3270527	PtrMemberAccess	s -> exptab		3270047	1					
ANR	3270528	Identifier	s		3270047	0					
ANR	3270529	Identifier	exptab		3270047	1					
ANR	3270530	ForStatement	for ( i = 0 ; i < n ; i ++ )		3270047	21					
ANR	3270531	ForInit	i = 0 ;	180:8:2514:2517	3270047	0	True				
ANR	3270532	AssignmentExpression	i = 0		3270047	0		=			
ANR	3270533	Identifier	i		3270047	0					
ANR	3270534	PrimaryExpression	0		3270047	1					
ANR	3270535	Condition	i < n	180:12:2518:2520	3270047	1	True				
ANR	3270536	RelationalExpression	i < n		3270047	0		<			
ANR	3270537	Identifier	i		3270047	0					
ANR	3270538	Identifier	n		3270047	1					
ANR	3270539	PostIncDecOperationExpression	i ++	180:16:2522:2524	3270047	2	True				
ANR	3270540	Identifier	i		3270047	0					
ANR	3270541	IncDec	++		3270047	1					
ANR	3270542	CompoundStatement		178:21:2470:2470	3270047	3					
ANR	3270543	ExpressionStatement	m = 0	182:8:2538:2541	3270047	0	True				
ANR	3270544	AssignmentExpression	m = 0		3270047	0		=			
ANR	3270545	Identifier	m		3270047	0					
ANR	3270546	PrimaryExpression	0		3270047	1					
ANR	3270547	ForStatement	for ( j = 0 ; j < nbits ; j ++ )		3270047	1					
ANR	3270548	ForInit	j = 0 ;	184:12:2556:2559	3270047	0	True				
ANR	3270549	AssignmentExpression	j = 0		3270047	0		=			
ANR	3270550	Identifier	j		3270047	0					
ANR	3270551	PrimaryExpression	0		3270047	1					
ANR	3270552	Condition	j < nbits	184:16:2560:2566	3270047	1	True				
ANR	3270553	RelationalExpression	j < nbits		3270047	0		<			
ANR	3270554	Identifier	j		3270047	0					
ANR	3270555	Identifier	nbits		3270047	1					
ANR	3270556	PostIncDecOperationExpression	j ++	184:24:2568:2570	3270047	2	True				
ANR	3270557	Identifier	j		3270047	0					
ANR	3270558	IncDec	++		3270047	1					
ANR	3270559	CompoundStatement		182:29:2516:2516	3270047	3					
ANR	3270560	ExpressionStatement	m |= ( ( i >> j ) & 1 ) << ( nbits - j - 1 )	186:12:2588:2622	3270047	0	True				
ANR	3270561	AssignmentExpression	m |= ( ( i >> j ) & 1 ) << ( nbits - j - 1 )		3270047	0		|=			
ANR	3270562	Identifier	m		3270047	0					
ANR	3270563	ShiftExpression	( ( i >> j ) & 1 ) << ( nbits - j - 1 )		3270047	1		<<			
ANR	3270564	BitAndExpression	( i >> j ) & 1		3270047	0		&			
ANR	3270565	ShiftExpression	i >> j		3270047	0		>>			
ANR	3270566	Identifier	i		3270047	0					
ANR	3270567	Identifier	j		3270047	1					
ANR	3270568	PrimaryExpression	1		3270047	1					
ANR	3270569	AdditiveExpression	nbits - j - 1		3270047	1		-			
ANR	3270570	Identifier	nbits		3270047	0					
ANR	3270571	AdditiveExpression	j - 1		3270047	1		-			
ANR	3270572	Identifier	j		3270047	0					
ANR	3270573	PrimaryExpression	1		3270047	1					
ANR	3270574	ExpressionStatement	s -> revtab [ i ] = m	190:8:2644:2658	3270047	2	True				
ANR	3270575	AssignmentExpression	s -> revtab [ i ] = m		3270047	0		=			
ANR	3270576	ArrayIndexing	s -> revtab [ i ]		3270047	0					
ANR	3270577	PtrMemberAccess	s -> revtab		3270047	0					
ANR	3270578	Identifier	s		3270047	0					
ANR	3270579	Identifier	revtab		3270047	1					
ANR	3270580	Identifier	i		3270047	1					
ANR	3270581	Identifier	m		3270047	1					
ANR	3270582	ReturnStatement	return 0 ;	194:4:2672:2680	3270047	22	True				
ANR	3270583	PrimaryExpression	0		3270047	0					
ANR	3270584	Label	fail :	196:1:2684:2688	3270047	23	True				
ANR	3270585	Identifier	fail		3270047	0					
ANR	3270586	ExpressionStatement	av_freep ( & s -> revtab )	198:4:2695:2715	3270047	24	True				
ANR	3270587	CallExpression	av_freep ( & s -> revtab )		3270047	0					
ANR	3270588	Callee	av_freep		3270047	0					
ANR	3270589	Identifier	av_freep		3270047	0					
ANR	3270590	ArgumentList	& s -> revtab		3270047	1					
ANR	3270591	Argument	& s -> revtab		3270047	0					
ANR	3270592	UnaryOperationExpression	& s -> revtab		3270047	0					
ANR	3270593	UnaryOperator	&		3270047	0					
ANR	3270594	PtrMemberAccess	s -> revtab		3270047	1					
ANR	3270595	Identifier	s		3270047	0					
ANR	3270596	Identifier	revtab		3270047	1					
ANR	3270597	ExpressionStatement	av_freep ( & s -> exptab )	200:4:2722:2742	3270047	25	True				
ANR	3270598	CallExpression	av_freep ( & s -> exptab )		3270047	0					
ANR	3270599	Callee	av_freep		3270047	0					
ANR	3270600	Identifier	av_freep		3270047	0					
ANR	3270601	ArgumentList	& s -> exptab		3270047	1					
ANR	3270602	Argument	& s -> exptab		3270047	0					
ANR	3270603	UnaryOperationExpression	& s -> exptab		3270047	0					
ANR	3270604	UnaryOperator	&		3270047	0					
ANR	3270605	PtrMemberAccess	s -> exptab		3270047	1					
ANR	3270606	Identifier	s		3270047	0					
ANR	3270607	Identifier	exptab		3270047	1					
ANR	3270608	ExpressionStatement	av_freep ( & s -> exptab1 )	202:4:2749:2770	3270047	26	True				
ANR	3270609	CallExpression	av_freep ( & s -> exptab1 )		3270047	0					
ANR	3270610	Callee	av_freep		3270047	0					
ANR	3270611	Identifier	av_freep		3270047	0					
ANR	3270612	ArgumentList	& s -> exptab1		3270047	1					
ANR	3270613	Argument	& s -> exptab1		3270047	0					
ANR	3270614	UnaryOperationExpression	& s -> exptab1		3270047	0					
ANR	3270615	UnaryOperator	&		3270047	0					
ANR	3270616	PtrMemberAccess	s -> exptab1		3270047	1					
ANR	3270617	Identifier	s		3270047	0					
ANR	3270618	Identifier	exptab1		3270047	1					
ANR	3270619	ReturnStatement	return - 1 ;	204:4:2777:2786	3270047	27	True				
ANR	3270620	UnaryOperationExpression	- 1		3270047	0					
ANR	3270621	UnaryOperator	-		3270047	0					
ANR	3270622	PrimaryExpression	1		3270047	1					
ANR	3270623	ReturnType	int		3270047	1					
ANR	3270624	Identifier	ff_fft_init		3270047	2					
ANR	3270625	ParameterList	"FFTContext * s , int nbits , int inverse"		3270047	3					
ANR	3270626	Parameter	FFTContext * s	1:16:16:28	3270047	0	True				
ANR	3270627	ParameterType	FFTContext *		3270047	0					
ANR	3270628	Identifier	s		3270047	1					
ANR	3270629	Parameter	int nbits	1:31:31:39	3270047	1	True				
ANR	3270630	ParameterType	int		3270047	0					
ANR	3270631	Identifier	nbits		3270047	1					
ANR	3270632	Parameter	int inverse	1:42:42:52	3270047	2	True				
ANR	3270633	ParameterType	int		3270047	0					
ANR	3270634	Identifier	inverse		3270047	1					
ANR	3270635	CFGEntryNode	ENTRY		3270047		True				
ANR	3270636	CFGExitNode	EXIT		3270047		True				
ANR	3270637	Symbol	av_malloc		3270047						
ANR	3270638	Symbol	s -> exptab [ i ] . im		3270047						
ANR	3270639	Symbol	cos		3270047						
ANR	3270640	Symbol	s -> exptab [ l ] . im		3270047						
ANR	3270641	Symbol	* q ++		3270047						
ANR	3270642	Symbol	s -> fft_calc		3270047						
ANR	3270643	Symbol	MM_SSE		3270047						
ANR	3270644	Symbol	M_PI		3270047						
ANR	3270645	Symbol	s -> imdct_calc		3270047						
ANR	3270646	Symbol	ff_fft_calc_c		3270047						
ANR	3270647	Symbol	ff_fft_calc_3dn2		3270047						
ANR	3270648	Symbol	ff_imdct_half		3270047						
ANR	3270649	Symbol	s1		3270047						
ANR	3270650	Symbol	MM_3DNOWEXT		3270047						
ANR	3270651	Symbol	s2		3270047						
ANR	3270652	Symbol	NULL		3270047						
ANR	3270653	Symbol	c1		3270047						
ANR	3270654	Symbol	s -> exptab [ i ] . re		3270047						
ANR	3270655	Symbol	np2		3270047						
ANR	3270656	Symbol	s -> exptab [ l + nblocks ] . re		3270047						
ANR	3270657	Symbol	s -> exptab1		3270047						
ANR	3270658	Symbol	nblocks		3270047						
ANR	3270659	Symbol	* s -> revtab		3270047						
ANR	3270660	Symbol	& s -> exptab1		3270047						
ANR	3270661	Symbol	ff_imdct_calc_3dn2		3270047						
ANR	3270662	Symbol	s -> exptab [ l + nblocks ] . im		3270047						
ANR	3270663	Symbol	q -> re		3270047						
ANR	3270664	Symbol	np		3270047						
ANR	3270665	Symbol	& s -> revtab		3270047						
ANR	3270666	Symbol	MM_3DNOW		3270047						
ANR	3270667	Symbol	has_vectors		3270047						
ANR	3270668	Symbol	nbits		3270047						
ANR	3270669	Symbol	* nblocks		3270047						
ANR	3270670	Symbol	s -> exptab		3270047						
ANR	3270671	Symbol	& s -> exptab		3270047						
ANR	3270672	Symbol	q -> im		3270047						
ANR	3270673	Symbol	alpha		3270047						
ANR	3270674	Symbol	s -> inverse		3270047						
ANR	3270675	Symbol	* * s		3270047						
ANR	3270676	Symbol	sin		3270047						
ANR	3270677	Symbol	mm_support		3270047						
ANR	3270678	Symbol	* s -> exptab		3270047						
ANR	3270679	Symbol	ff_fft_calc_sse		3270047						
ANR	3270680	Symbol	inverse		3270047						
ANR	3270681	Symbol	s -> revtab		3270047						
ANR	3270682	Symbol	ff_fft_calc_3dn		3270047						
ANR	3270683	Symbol	s -> nbits		3270047						
ANR	3270684	Symbol	i		3270047						
ANR	3270685	Symbol	j		3270047						
ANR	3270686	Symbol	l		3270047						
ANR	3270687	Symbol	m		3270047						
ANR	3270688	Symbol	n		3270047						
ANR	3270689	Symbol	s -> imdct_half		3270047						
ANR	3270690	Symbol	ff_imdct_half_sse		3270047						
ANR	3270691	Symbol	ff_imdct_calc_sse		3270047						
ANR	3270692	Symbol	q		3270047						
ANR	3270693	Symbol	s		3270047						
ANR	3270694	Symbol	* i		3270047						
ANR	3270695	Symbol	ff_imdct_calc		3270047						
ANR	3270696	Symbol	* l		3270047						
ANR	3270697	Symbol	s -> exptab [ l ] . re		3270047						
ANR	3270698	Symbol	* q		3270047						
ANR	3270699	Symbol	shuffle		3270047						
ANR	3270700	Symbol	* s		3270047						
