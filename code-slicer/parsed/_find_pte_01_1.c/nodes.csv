command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	313884	File	/home/p4ultr4n/workplace/ReVeal/raw_code/_find_pte_01_1.c								
ANR	313885	Function	_find_pte	1:0:0:2330							
ANR	313886	FunctionDef	"_find_pte (mmu_ctx_t * ctx , int is_64b , int h , int rw)"		313885	0					
ANR	313887	CompoundStatement		3:0:73:2330	313885	0					
ANR	313888	IdentifierDeclStatement	"target_ulong base , pte0 , pte1 ;"	5:4:80:109	313885	0	True				
ANR	313889	IdentifierDecl	base		313885	0					
ANR	313890	IdentifierDeclType	target_ulong		313885	0					
ANR	313891	Identifier	base		313885	1					
ANR	313892	IdentifierDecl	pte0		313885	1					
ANR	313893	IdentifierDeclType	target_ulong		313885	0					
ANR	313894	Identifier	pte0		313885	1					
ANR	313895	IdentifierDecl	pte1		313885	2					
ANR	313896	IdentifierDeclType	target_ulong		313885	0					
ANR	313897	Identifier	pte1		313885	1					
ANR	313898	IdentifierDeclStatement	"int i , good = - 1 ;"	7:4:116:132	313885	1	True				
ANR	313899	IdentifierDecl	i		313885	0					
ANR	313900	IdentifierDeclType	int		313885	0					
ANR	313901	Identifier	i		313885	1					
ANR	313902	IdentifierDecl	good = - 1		313885	1					
ANR	313903	IdentifierDeclType	int		313885	0					
ANR	313904	Identifier	good		313885	1					
ANR	313905	AssignmentExpression	good = - 1		313885	2		=			
ANR	313906	Identifier	good		313885	0					
ANR	313907	UnaryOperationExpression	- 1		313885	1					
ANR	313908	UnaryOperator	-		313885	0					
ANR	313909	PrimaryExpression	1		313885	1					
ANR	313910	IdentifierDeclStatement	"int ret , r ;"	9:4:139:149	313885	2	True				
ANR	313911	IdentifierDecl	ret		313885	0					
ANR	313912	IdentifierDeclType	int		313885	0					
ANR	313913	Identifier	ret		313885	1					
ANR	313914	IdentifierDecl	r		313885	1					
ANR	313915	IdentifierDeclType	int		313885	0					
ANR	313916	Identifier	r		313885	1					
ANR	313917	ExpressionStatement	ret = - 1	13:4:158:166	313885	3	True				
ANR	313918	AssignmentExpression	ret = - 1		313885	0		=			
ANR	313919	Identifier	ret		313885	0					
ANR	313920	UnaryOperationExpression	- 1		313885	1					
ANR	313921	UnaryOperator	-		313885	0					
ANR	313922	PrimaryExpression	1		313885	1					
ANR	313923	ExpressionStatement	base = ctx -> pg_addr [ h ]	15:4:194:216	313885	4	True				
ANR	313924	AssignmentExpression	base = ctx -> pg_addr [ h ]		313885	0		=			
ANR	313925	Identifier	base		313885	0					
ANR	313926	ArrayIndexing	ctx -> pg_addr [ h ]		313885	1					
ANR	313927	PtrMemberAccess	ctx -> pg_addr		313885	0					
ANR	313928	Identifier	ctx		313885	0					
ANR	313929	Identifier	pg_addr		313885	1					
ANR	313930	Identifier	h		313885	1					
ANR	313931	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		313885	5					
ANR	313932	ForInit	i = 0 ;	17:9:228:233	313885	0	True				
ANR	313933	AssignmentExpression	i = 0		313885	0		=			
ANR	313934	Identifier	i		313885	0					
ANR	313935	PrimaryExpression	0		313885	1					
ANR	313936	Condition	i < 8	17:16:235:239	313885	1	True				
ANR	313937	RelationalExpression	i < 8		313885	0		<			
ANR	313938	Identifier	i		313885	0					
ANR	313939	PrimaryExpression	8		313885	1					
ANR	313940	PostIncDecOperationExpression	i ++	17:23:242:244	313885	2	True				
ANR	313941	Identifier	i		313885	0					
ANR	313942	IncDec	++		313885	1					
ANR	313943	CompoundStatement		15:28:173:173	313885	3					
ANR	313944	IfStatement	if ( is_64b )		313885	0					
ANR	313945	Condition	is_64b	21:12:289:294	313885	0	True				
ANR	313946	Identifier	is_64b		313885	0					
ANR	313947	CompoundStatement		19:20:223:223	313885	1					
ANR	313948	ExpressionStatement	pte0 = ldq_phys ( base + ( i * 16 ) )	23:12:312:344	313885	0	True				
ANR	313949	AssignmentExpression	pte0 = ldq_phys ( base + ( i * 16 ) )		313885	0		=			
ANR	313950	Identifier	pte0		313885	0					
ANR	313951	CallExpression	ldq_phys ( base + ( i * 16 ) )		313885	1					
ANR	313952	Callee	ldq_phys		313885	0					
ANR	313953	Identifier	ldq_phys		313885	0					
ANR	313954	ArgumentList	base + ( i * 16 )		313885	1					
ANR	313955	Argument	base + ( i * 16 )		313885	0					
ANR	313956	AdditiveExpression	base + ( i * 16 )		313885	0		+			
ANR	313957	Identifier	base		313885	0					
ANR	313958	MultiplicativeExpression	i * 16		313885	1		*			
ANR	313959	Identifier	i		313885	0					
ANR	313960	PrimaryExpression	16		313885	1					
ANR	313961	ExpressionStatement	pte1 = ldq_phys ( base + ( i * 16 ) + 8 )	25:12:359:396	313885	1	True				
ANR	313962	AssignmentExpression	pte1 = ldq_phys ( base + ( i * 16 ) + 8 )		313885	0		=			
ANR	313963	Identifier	pte1		313885	0					
ANR	313964	CallExpression	ldq_phys ( base + ( i * 16 ) + 8 )		313885	1					
ANR	313965	Callee	ldq_phys		313885	0					
ANR	313966	Identifier	ldq_phys		313885	0					
ANR	313967	ArgumentList	base + ( i * 16 ) + 8		313885	1					
ANR	313968	Argument	base + ( i * 16 ) + 8		313885	0					
ANR	313969	AdditiveExpression	base + ( i * 16 ) + 8		313885	0		+			
ANR	313970	Identifier	base		313885	0					
ANR	313971	AdditiveExpression	( i * 16 ) + 8		313885	1		+			
ANR	313972	MultiplicativeExpression	i * 16		313885	0		*			
ANR	313973	Identifier	i		313885	0					
ANR	313974	PrimaryExpression	16		313885	1					
ANR	313975	PrimaryExpression	8		313885	1					
ANR	313976	ExpressionStatement	"r = pte64_check ( ctx , pte0 , pte1 , h , rw )"	27:12:411:450	313885	2	True				
ANR	313977	AssignmentExpression	"r = pte64_check ( ctx , pte0 , pte1 , h , rw )"		313885	0		=			
ANR	313978	Identifier	r		313885	0					
ANR	313979	CallExpression	"pte64_check ( ctx , pte0 , pte1 , h , rw )"		313885	1					
ANR	313980	Callee	pte64_check		313885	0					
ANR	313981	Identifier	pte64_check		313885	0					
ANR	313982	ArgumentList	ctx		313885	1					
ANR	313983	Argument	ctx		313885	0					
ANR	313984	Identifier	ctx		313885	0					
ANR	313985	Argument	pte0		313885	1					
ANR	313986	Identifier	pte0		313885	0					
ANR	313987	Argument	pte1		313885	2					
ANR	313988	Identifier	pte1		313885	0					
ANR	313989	Argument	h		313885	3					
ANR	313990	Identifier	h		313885	0					
ANR	313991	Argument	rw		313885	4					
ANR	313992	Identifier	rw		313885	0					
ANR	313993	ElseStatement	else		313885	0					
ANR	313994	CompoundStatement		31:8:411:411	313885	0					
ANR	313995	ExpressionStatement	pte0 = ldl_phys ( base + ( i * 8 ) )	35:12:500:531	313885	0	True				
ANR	313996	AssignmentExpression	pte0 = ldl_phys ( base + ( i * 8 ) )		313885	0		=			
ANR	313997	Identifier	pte0		313885	0					
ANR	313998	CallExpression	ldl_phys ( base + ( i * 8 ) )		313885	1					
ANR	313999	Callee	ldl_phys		313885	0					
ANR	314000	Identifier	ldl_phys		313885	0					
ANR	314001	ArgumentList	base + ( i * 8 )		313885	1					
ANR	314002	Argument	base + ( i * 8 )		313885	0					
ANR	314003	AdditiveExpression	base + ( i * 8 )		313885	0		+			
ANR	314004	Identifier	base		313885	0					
ANR	314005	MultiplicativeExpression	i * 8		313885	1		*			
ANR	314006	Identifier	i		313885	0					
ANR	314007	PrimaryExpression	8		313885	1					
ANR	314008	ExpressionStatement	pte1 = ldl_phys ( base + ( i * 8 ) + 4 )	37:12:546:582	313885	1	True				
ANR	314009	AssignmentExpression	pte1 = ldl_phys ( base + ( i * 8 ) + 4 )		313885	0		=			
ANR	314010	Identifier	pte1		313885	0					
ANR	314011	CallExpression	ldl_phys ( base + ( i * 8 ) + 4 )		313885	1					
ANR	314012	Callee	ldl_phys		313885	0					
ANR	314013	Identifier	ldl_phys		313885	0					
ANR	314014	ArgumentList	base + ( i * 8 ) + 4		313885	1					
ANR	314015	Argument	base + ( i * 8 ) + 4		313885	0					
ANR	314016	AdditiveExpression	base + ( i * 8 ) + 4		313885	0		+			
ANR	314017	Identifier	base		313885	0					
ANR	314018	AdditiveExpression	( i * 8 ) + 4		313885	1		+			
ANR	314019	MultiplicativeExpression	i * 8		313885	0		*			
ANR	314020	Identifier	i		313885	0					
ANR	314021	PrimaryExpression	8		313885	1					
ANR	314022	PrimaryExpression	4		313885	1					
ANR	314023	ExpressionStatement	"r = pte32_check ( ctx , pte0 , pte1 , h , rw )"	39:12:597:636	313885	2	True				
ANR	314024	AssignmentExpression	"r = pte32_check ( ctx , pte0 , pte1 , h , rw )"		313885	0		=			
ANR	314025	Identifier	r		313885	0					
ANR	314026	CallExpression	"pte32_check ( ctx , pte0 , pte1 , h , rw )"		313885	1					
ANR	314027	Callee	pte32_check		313885	0					
ANR	314028	Identifier	pte32_check		313885	0					
ANR	314029	ArgumentList	ctx		313885	1					
ANR	314030	Argument	ctx		313885	0					
ANR	314031	Identifier	ctx		313885	0					
ANR	314032	Argument	pte0		313885	1					
ANR	314033	Identifier	pte0		313885	0					
ANR	314034	Argument	pte1		313885	2					
ANR	314035	Identifier	pte1		313885	0					
ANR	314036	Argument	h		313885	3					
ANR	314037	Identifier	h		313885	0					
ANR	314038	Argument	rw		313885	4					
ANR	314039	Identifier	rw		313885	0					
ANR	314040	IfStatement	if ( loglevel != 0 )		313885	1					
ANR	314041	Condition	loglevel != 0	45:12:687:699	313885	0	True				
ANR	314042	EqualityExpression	loglevel != 0		313885	0		!=			
ANR	314043	Identifier	loglevel		313885	0					
ANR	314044	PrimaryExpression	0		313885	1					
ANR	314045	CompoundStatement		43:27:628:628	313885	1					
ANR	314046	Statement	fprintf	47:12:717:723	313885	0	True				
ANR	314047	Statement	(	47:19:724:724	313885	1	True				
ANR	314048	Statement	logfile	47:20:725:731	313885	2	True				
ANR	314049	Statement	","	47:27:732:732	313885	3	True				
ANR	314050	Statement	"""Load pte from 0x"""	47:29:734:751	313885	4	True				
ANR	314051	Statement	ADDRX	47:48:753:757	313885	5	True				
ANR	314052	Statement	""" => 0x"""	47:54:759:766	313885	6	True				
ANR	314053	Statement	ADDRX	47:63:768:772	313885	7	True				
ANR	314054	Statement	""" 0x"""	49:20:795:799	313885	8	True				
ANR	314055	Statement	ADDRX	49:26:801:805	313885	9	True				
ANR	314056	Statement	""" %d %d %d 0x"""	49:32:807:820	313885	10	True				
ANR	314057	Statement	ADDRX	49:47:822:826	313885	11	True				
ANR	314058	Statement	"""\\n"""	49:53:828:831	313885	12	True				
ANR	314059	Statement	","	49:57:832:832	313885	13	True				
ANR	314060	Statement	base	51:20:855:858	313885	14	True				
ANR	314061	Statement	+	51:25:860:860	313885	15	True				
ANR	314062	Statement	(	51:27:862:862	313885	16	True				
ANR	314063	Statement	i	51:28:863:863	313885	17	True				
ANR	314064	Statement	*	51:30:865:865	313885	18	True				
ANR	314065	Statement	8	51:32:867:867	313885	19	True				
ANR	314066	Statement	)	51:33:868:868	313885	20	True				
ANR	314067	Statement	","	51:34:869:869	313885	21	True				
ANR	314068	Statement	pte0	51:36:871:874	313885	22	True				
ANR	314069	Statement	","	51:40:875:875	313885	23	True				
ANR	314070	Statement	pte1	51:42:877:880	313885	24	True				
ANR	314071	Statement	","	51:46:881:881	313885	25	True				
ANR	314072	Statement	(	53:20:904:904	313885	26	True				
ANR	314073	Statement	int	53:21:905:907	313885	27	True				
ANR	314074	Statement	)	53:24:908:908	313885	28	True				
ANR	314075	Statement	(	53:25:909:909	313885	29	True				
ANR	314076	Statement	pte0	53:26:910:913	313885	30	True				
ANR	314077	Statement	>>	53:31:915:916	313885	31	True				
ANR	314078	Statement	31	53:34:918:919	313885	32	True				
ANR	314079	Statement	)	53:36:920:920	313885	33	True				
ANR	314080	Statement	","	53:37:921:921	313885	34	True				
ANR	314081	Statement	h	53:39:923:923	313885	35	True				
ANR	314082	Statement	","	53:40:924:924	313885	36	True				
ANR	314083	Statement	(	53:42:926:926	313885	37	True				
ANR	314084	Statement	int	53:43:927:929	313885	38	True				
ANR	314085	Statement	)	53:46:930:930	313885	39	True				
ANR	314086	Statement	(	53:47:931:931	313885	40	True				
ANR	314087	Statement	(	53:48:932:932	313885	41	True				
ANR	314088	Statement	pte0	53:49:933:936	313885	42	True				
ANR	314089	Statement	>>	53:54:938:939	313885	43	True				
ANR	314090	Statement	6	53:57:941:941	313885	44	True				
ANR	314091	Statement	)	53:58:942:942	313885	45	True				
ANR	314092	Statement	&	53:60:944:944	313885	46	True				
ANR	314093	Statement	1	53:62:946:946	313885	47	True				
ANR	314094	Statement	)	53:63:947:947	313885	48	True				
ANR	314095	Statement	","	53:64:948:948	313885	49	True				
ANR	314096	Statement	ctx	53:66:950:952	313885	50	True				
ANR	314097	Statement	->	53:69:953:954	313885	51	True				
ANR	314098	Statement	ptem	53:71:955:958	313885	52	True				
ANR	314099	Statement	)	53:75:959:959	313885	53	True				
ANR	314100	ExpressionStatement		53:76:960:960	313885	54	True				
ANR	314101	SwitchStatement	switch ( r )		313885	2					
ANR	314102	Condition	r	59:16:998:998	313885	0	True				
ANR	314103	Identifier	r		313885	0					
ANR	314104	CompoundStatement		57:19:927:927	313885	1					
ANR	314105	Statement	case	61:8:1012:1015	313885	0	True				
ANR	314106	Statement	-	61:13:1017:1017	313885	1	True				
ANR	314107	Label	3 :	61:14:1018:1019	313885	2	True				
ANR	314108	ReturnStatement	return - 1 ;	65:12:1071:1080	313885	3	True				
ANR	314109	UnaryOperationExpression	- 1		313885	0					
ANR	314110	UnaryOperator	-		313885	0					
ANR	314111	PrimaryExpression	1		313885	1					
ANR	314112	Statement	case	67:8:1091:1094	313885	4	True				
ANR	314113	Statement	-	67:13:1096:1096	313885	5	True				
ANR	314114	Label	2 :	67:14:1097:1098	313885	6	True				
ANR	314115	ExpressionStatement	ret = - 2	71:12:1149:1157	313885	7	True				
ANR	314116	AssignmentExpression	ret = - 2		313885	0		=			
ANR	314117	Identifier	ret		313885	0					
ANR	314118	UnaryOperationExpression	- 2		313885	1					
ANR	314119	UnaryOperator	-		313885	0					
ANR	314120	PrimaryExpression	2		313885	1					
ANR	314121	ExpressionStatement	good = i	73:12:1172:1180	313885	8	True				
ANR	314122	AssignmentExpression	good = i		313885	0		=			
ANR	314123	Identifier	good		313885	0					
ANR	314124	Identifier	i		313885	1					
ANR	314125	BreakStatement	break ;	75:12:1195:1200	313885	9	True				
ANR	314126	Statement	case	77:8:1211:1214	313885	10	True				
ANR	314127	Statement	-	77:13:1216:1216	313885	11	True				
ANR	314128	Label	1 :	77:14:1217:1218	313885	12	True				
ANR	314129	Label	default :	79:8:1229:1236	313885	13	True				
ANR	314130	Identifier	default		313885	0					
ANR	314131	BreakStatement	break ;	83:12:1283:1288	313885	14	True				
ANR	314132	Label	case 0 :	85:8:1299:1305	313885	15	True				
ANR	314133	ExpressionStatement	ret = 0	97:12:1588:1595	313885	16	True				
ANR	314134	AssignmentExpression	ret = 0		313885	0		=			
ANR	314135	Identifier	ret		313885	0					
ANR	314136	PrimaryExpression	0		313885	1					
ANR	314137	ExpressionStatement	good = i	99:12:1610:1618	313885	17	True				
ANR	314138	AssignmentExpression	good = i		313885	0		=			
ANR	314139	Identifier	good		313885	0					
ANR	314140	Identifier	i		313885	1					
ANR	314141	GotoStatement	goto done ;	101:12:1633:1642	313885	18	True				
ANR	314142	Identifier	done		313885	0					
ANR	314143	IfStatement	if ( good != - 1 )		313885	6					
ANR	314144	Condition	good != - 1	107:8:1671:1680	313885	0	True				
ANR	314145	EqualityExpression	good != - 1		313885	0		!=			
ANR	314146	Identifier	good		313885	0					
ANR	314147	UnaryOperationExpression	- 1		313885	1					
ANR	314148	UnaryOperator	-		313885	0					
ANR	314149	PrimaryExpression	1		313885	1					
ANR	314150	CompoundStatement		105:20:1609:1609	313885	1					
ANR	314151	Label	done :	109:4:1690:1694	313885	0	True				
ANR	314152	Identifier	done		313885	0					
ANR	314153	IfStatement	if ( loglevel != 0 )		313885	1					
ANR	314154	Condition	loglevel != 0	113:12:1734:1746	313885	0	True				
ANR	314155	EqualityExpression	loglevel != 0		313885	0		!=			
ANR	314156	Identifier	loglevel		313885	0					
ANR	314157	PrimaryExpression	0		313885	1					
ANR	314158	CompoundStatement		111:27:1675:1675	313885	1					
ANR	314159	Statement	fprintf	115:12:1764:1770	313885	0	True				
ANR	314160	Statement	(	115:19:1771:1771	313885	1	True				
ANR	314161	Statement	logfile	115:20:1772:1778	313885	2	True				
ANR	314162	Statement	","	115:27:1779:1779	313885	3	True				
ANR	314163	Statement	"""found PTE at addr 0x"""	115:29:1781:1802	313885	4	True				
ANR	314164	Statement	PADDRX	115:52:1804:1809	313885	5	True				
ANR	314165	Statement	""" prot=0x%01x """	115:59:1811:1825	313885	6	True				
ANR	314166	Statement	"""ret=%d\\n"""	117:20:1848:1857	313885	7	True				
ANR	314167	Statement	","	117:30:1858:1858	313885	8	True				
ANR	314168	Statement	ctx	119:20:1881:1883	313885	9	True				
ANR	314169	Statement	->	119:23:1884:1885	313885	10	True				
ANR	314170	Statement	raddr	119:25:1886:1890	313885	11	True				
ANR	314171	Statement	","	119:30:1891:1891	313885	12	True				
ANR	314172	Statement	ctx	119:32:1893:1895	313885	13	True				
ANR	314173	Statement	->	119:35:1896:1897	313885	14	True				
ANR	314174	Statement	prot	119:37:1898:1901	313885	15	True				
ANR	314175	Statement	","	119:41:1902:1902	313885	16	True				
ANR	314176	Statement	ret	119:43:1904:1906	313885	17	True				
ANR	314177	Statement	)	119:46:1907:1907	313885	18	True				
ANR	314178	ExpressionStatement		119:47:1908:1908	313885	19	True				
ANR	314179	ExpressionStatement	pte1 = ctx -> raddr	127:8:1971:1988	313885	2	True				
ANR	314180	AssignmentExpression	pte1 = ctx -> raddr		313885	0		=			
ANR	314181	Identifier	pte1		313885	0					
ANR	314182	PtrMemberAccess	ctx -> raddr		313885	1					
ANR	314183	Identifier	ctx		313885	0					
ANR	314184	Identifier	raddr		313885	1					
ANR	314185	IfStatement	"if ( pte_update_flags ( ctx , & pte1 , ret , rw ) == 1 )"		313885	3					
ANR	314186	Condition	"pte_update_flags ( ctx , & pte1 , ret , rw ) == 1"	129:12:2003:2044	313885	0	True				
ANR	314187	EqualityExpression	"pte_update_flags ( ctx , & pte1 , ret , rw ) == 1"		313885	0		==			
ANR	314188	CallExpression	"pte_update_flags ( ctx , & pte1 , ret , rw )"		313885	0					
ANR	314189	Callee	pte_update_flags		313885	0					
ANR	314190	Identifier	pte_update_flags		313885	0					
ANR	314191	ArgumentList	ctx		313885	1					
ANR	314192	Argument	ctx		313885	0					
ANR	314193	Identifier	ctx		313885	0					
ANR	314194	Argument	& pte1		313885	1					
ANR	314195	UnaryOperationExpression	& pte1		313885	0					
ANR	314196	UnaryOperator	&		313885	0					
ANR	314197	Identifier	pte1		313885	1					
ANR	314198	Argument	ret		313885	2					
ANR	314199	Identifier	ret		313885	0					
ANR	314200	Argument	rw		313885	3					
ANR	314201	Identifier	rw		313885	0					
ANR	314202	PrimaryExpression	1		313885	1					
ANR	314203	CompoundStatement		127:56:1973:1973	313885	1					
ANR	314204	IfStatement	if ( is_64b )		313885	0					
ANR	314205	Condition	is_64b	133:16:2093:2098	313885	0	True				
ANR	314206	Identifier	is_64b		313885	0					
ANR	314207	CompoundStatement		131:24:2027:2027	313885	1					
ANR	314208	ExpressionStatement	"stq_phys_notdirty ( base + ( good * 16 ) + 8 , pte1 )"	135:16:2120:2167	313885	0	True				
ANR	314209	CallExpression	"stq_phys_notdirty ( base + ( good * 16 ) + 8 , pte1 )"		313885	0					
ANR	314210	Callee	stq_phys_notdirty		313885	0					
ANR	314211	Identifier	stq_phys_notdirty		313885	0					
ANR	314212	ArgumentList	base + ( good * 16 ) + 8		313885	1					
ANR	314213	Argument	base + ( good * 16 ) + 8		313885	0					
ANR	314214	AdditiveExpression	base + ( good * 16 ) + 8		313885	0		+			
ANR	314215	Identifier	base		313885	0					
ANR	314216	AdditiveExpression	( good * 16 ) + 8		313885	1		+			
ANR	314217	MultiplicativeExpression	good * 16		313885	0		*			
ANR	314218	Identifier	good		313885	0					
ANR	314219	PrimaryExpression	16		313885	1					
ANR	314220	PrimaryExpression	8		313885	1					
ANR	314221	Argument	pte1		313885	1					
ANR	314222	Identifier	pte1		313885	0					
ANR	314223	ElseStatement	else		313885	0					
ANR	314224	CompoundStatement		139:12:2136:2136	313885	0					
ANR	314225	ExpressionStatement	"stl_phys_notdirty ( base + ( good * 8 ) + 4 , pte1 )"	143:16:2229:2275	313885	0	True				
ANR	314226	CallExpression	"stl_phys_notdirty ( base + ( good * 8 ) + 4 , pte1 )"		313885	0					
ANR	314227	Callee	stl_phys_notdirty		313885	0					
ANR	314228	Identifier	stl_phys_notdirty		313885	0					
ANR	314229	ArgumentList	base + ( good * 8 ) + 4		313885	1					
ANR	314230	Argument	base + ( good * 8 ) + 4		313885	0					
ANR	314231	AdditiveExpression	base + ( good * 8 ) + 4		313885	0		+			
ANR	314232	Identifier	base		313885	0					
ANR	314233	AdditiveExpression	( good * 8 ) + 4		313885	1		+			
ANR	314234	MultiplicativeExpression	good * 8		313885	0		*			
ANR	314235	Identifier	good		313885	0					
ANR	314236	PrimaryExpression	8		313885	1					
ANR	314237	PrimaryExpression	4		313885	1					
ANR	314238	Argument	pte1		313885	1					
ANR	314239	Identifier	pte1		313885	0					
ANR	314240	ReturnStatement	return ret ;	153:4:2317:2327	313885	7	True				
ANR	314241	Identifier	ret		313885	0					
ANR	314242	ReturnType	static inline int		313885	1					
ANR	314243	Identifier	_find_pte		313885	2					
ANR	314244	ParameterList	"mmu_ctx_t * ctx , int is_64b , int h , int rw"		313885	3					
ANR	314245	Parameter	mmu_ctx_t * ctx	1:29:29:42	313885	0	True				
ANR	314246	ParameterType	mmu_ctx_t *		313885	0					
ANR	314247	Identifier	ctx		313885	1					
ANR	314248	Parameter	int is_64b	1:45:45:54	313885	1	True				
ANR	314249	ParameterType	int		313885	0					
ANR	314250	Identifier	is_64b		313885	1					
ANR	314251	Parameter	int h	1:57:57:61	313885	2	True				
ANR	314252	ParameterType	int		313885	0					
ANR	314253	Identifier	h		313885	1					
ANR	314254	Parameter	int rw	1:64:64:69	313885	3	True				
ANR	314255	ParameterType	int		313885	0					
ANR	314256	Identifier	rw		313885	1					
ANR	314257	CFGEntryNode	ENTRY		313885		True				
ANR	314258	CFGExitNode	EXIT		313885		True				
ANR	314259	Symbol	ret		313885						
ANR	314260	Symbol	pte32_check		313885						
ANR	314261	Symbol	is_64b		313885						
ANR	314262	Symbol	pte1		313885						
ANR	314263	Symbol	rw		313885						
ANR	314264	Symbol	ctx -> pg_addr		313885						
ANR	314265	Symbol	& pte1		313885						
ANR	314266	Symbol	ctx		313885						
ANR	314267	Symbol	h		313885						
ANR	314268	Symbol	ldq_phys		313885						
ANR	314269	Symbol	i		313885						
ANR	314270	Symbol	pte_update_flags		313885						
ANR	314271	Symbol	good		313885						
ANR	314272	Symbol	* ctx		313885						
ANR	314273	Symbol	pte64_check		313885						
ANR	314274	Symbol	r		313885						
ANR	314275	Symbol	* h		313885						
ANR	314276	Symbol	ldl_phys		313885						
ANR	314277	Symbol	loglevel		313885						
ANR	314278	Symbol	ctx -> raddr		313885						
ANR	314279	Symbol	pte0		313885						
ANR	314280	Symbol	* * ctx		313885						
ANR	314281	Symbol	* ctx -> pg_addr		313885						
ANR	314282	Symbol	base		313885						
