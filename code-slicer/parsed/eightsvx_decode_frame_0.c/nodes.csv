command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2946028	File	/home/p4ultr4n/workplace/ReVeal/raw_code/eightsvx_decode_frame_0.c								
ANR	2946029	Function	eightsvx_decode_frame	1:0:0:2724							
ANR	2946030	FunctionDef	"eightsvx_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		2946029	0					
ANR	2946031	CompoundStatement		5:0:140:2724	2946029	0					
ANR	2946032	IdentifierDeclStatement	EightSvxContext * esc = avctx -> priv_data ;	7:4:147:186	2946029	0	True				
ANR	2946033	IdentifierDecl	* esc = avctx -> priv_data		2946029	0					
ANR	2946034	IdentifierDeclType	EightSvxContext *		2946029	0					
ANR	2946035	Identifier	esc		2946029	1					
ANR	2946036	AssignmentExpression	* esc = avctx -> priv_data		2946029	2		=			
ANR	2946037	Identifier	esc		2946029	0					
ANR	2946038	PtrMemberAccess	avctx -> priv_data		2946029	1					
ANR	2946039	Identifier	avctx		2946029	0					
ANR	2946040	Identifier	priv_data		2946029	1					
ANR	2946041	IdentifierDeclStatement	"int n , out_data_size ;"	9:4:193:213	2946029	1	True				
ANR	2946042	IdentifierDecl	n		2946029	0					
ANR	2946043	IdentifierDeclType	int		2946029	0					
ANR	2946044	Identifier	n		2946029	1					
ANR	2946045	IdentifierDecl	out_data_size		2946029	1					
ANR	2946046	IdentifierDeclType	int		2946029	0					
ANR	2946047	Identifier	out_data_size		2946029	1					
ANR	2946048	IdentifierDeclStatement	"int ch , ret ;"	11:4:220:231	2946029	2	True				
ANR	2946049	IdentifierDecl	ch		2946029	0					
ANR	2946050	IdentifierDeclType	int		2946029	0					
ANR	2946051	Identifier	ch		2946029	1					
ANR	2946052	IdentifierDecl	ret		2946029	1					
ANR	2946053	IdentifierDeclType	int		2946029	0					
ANR	2946054	Identifier	ret		2946029	1					
ANR	2946055	IdentifierDeclStatement	uint8_t * src ;	13:4:238:250	2946029	3	True				
ANR	2946056	IdentifierDecl	* src		2946029	0					
ANR	2946057	IdentifierDeclType	uint8_t *		2946029	0					
ANR	2946058	Identifier	src		2946029	1					
ANR	2946059	IfStatement	if ( ! esc -> samples && avpkt )		2946029	4					
ANR	2946060	Condition	! esc -> samples && avpkt	19:8:313:334	2946029	0	True				
ANR	2946061	AndExpression	! esc -> samples && avpkt		2946029	0		&&			
ANR	2946062	UnaryOperationExpression	! esc -> samples		2946029	0					
ANR	2946063	UnaryOperator	!		2946029	0					
ANR	2946064	PtrMemberAccess	esc -> samples		2946029	1					
ANR	2946065	Identifier	esc		2946029	0					
ANR	2946066	Identifier	samples		2946029	1					
ANR	2946067	Identifier	avpkt		2946029	1					
ANR	2946068	CompoundStatement		17:8:207:236	2946029	1					
ANR	2946069	IdentifierDeclStatement	int packet_size = avpkt -> size ;	21:8:348:377	2946029	0	True				
ANR	2946070	IdentifierDecl	packet_size = avpkt -> size		2946029	0					
ANR	2946071	IdentifierDeclType	int		2946029	0					
ANR	2946072	Identifier	packet_size		2946029	1					
ANR	2946073	AssignmentExpression	packet_size = avpkt -> size		2946029	2		=			
ANR	2946074	Identifier	packet_size		2946029	0					
ANR	2946075	PtrMemberAccess	avpkt -> size		2946029	1					
ANR	2946076	Identifier	avpkt		2946029	0					
ANR	2946077	Identifier	size		2946029	1					
ANR	2946078	IfStatement	if ( packet_size % avctx -> channels )		2946029	1					
ANR	2946079	Condition	packet_size % avctx -> channels	25:12:394:422	2946029	0	True				
ANR	2946080	MultiplicativeExpression	packet_size % avctx -> channels		2946029	0		%			
ANR	2946081	Identifier	packet_size		2946029	0					
ANR	2946082	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946083	Identifier	avctx		2946029	0					
ANR	2946084	Identifier	channels		2946029	1					
ANR	2946085	CompoundStatement		21:43:284:284	2946029	1					
ANR	2946086	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Packet with odd size, ignoring last byte\\n"" )"	27:12:440:515	2946029	0	True				
ANR	2946087	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Packet with odd size, ignoring last byte\\n"" )"		2946029	0					
ANR	2946088	Callee	av_log		2946029	0					
ANR	2946089	Identifier	av_log		2946029	0					
ANR	2946090	ArgumentList	avctx		2946029	1					
ANR	2946091	Argument	avctx		2946029	0					
ANR	2946092	Identifier	avctx		2946029	0					
ANR	2946093	Argument	AV_LOG_WARNING		2946029	1					
ANR	2946094	Identifier	AV_LOG_WARNING		2946029	0					
ANR	2946095	Argument	"""Packet with odd size, ignoring last byte\\n"""		2946029	2					
ANR	2946096	PrimaryExpression	"""Packet with odd size, ignoring last byte\\n"""		2946029	0					
ANR	2946097	IfStatement	if ( packet_size < avctx -> channels )		2946029	1					
ANR	2946098	Condition	packet_size < avctx -> channels	29:16:534:562	2946029	0	True				
ANR	2946099	RelationalExpression	packet_size < avctx -> channels		2946029	0		<			
ANR	2946100	Identifier	packet_size		2946029	0					
ANR	2946101	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946102	Identifier	avctx		2946029	0					
ANR	2946103	Identifier	channels		2946029	1					
ANR	2946104	ReturnStatement	return packet_size ;	31:16:582:600	2946029	1	True				
ANR	2946105	Identifier	packet_size		2946029	0					
ANR	2946106	ExpressionStatement	packet_size -= packet_size % avctx -> channels	33:12:615:659	2946029	2	True				
ANR	2946107	AssignmentExpression	packet_size -= packet_size % avctx -> channels		2946029	0		-=			
ANR	2946108	Identifier	packet_size		2946029	0					
ANR	2946109	MultiplicativeExpression	packet_size % avctx -> channels		2946029	1		%			
ANR	2946110	Identifier	packet_size		2946029	0					
ANR	2946111	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946112	Identifier	avctx		2946029	0					
ANR	2946113	Identifier	channels		2946029	1					
ANR	2946114	ExpressionStatement	esc -> samples_size = ! esc -> table ? packet_size : avctx -> channels + ( packet_size - avctx -> channels ) * 2	37:8:681:793	2946029	2	True				
ANR	2946115	AssignmentExpression	esc -> samples_size = ! esc -> table ? packet_size : avctx -> channels + ( packet_size - avctx -> channels ) * 2		2946029	0		=			
ANR	2946116	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946117	Identifier	esc		2946029	0					
ANR	2946118	Identifier	samples_size		2946029	1					
ANR	2946119	ConditionalExpression	! esc -> table ? packet_size : avctx -> channels + ( packet_size - avctx -> channels ) * 2		2946029	1					
ANR	2946120	Condition	! esc -> table		2946029	0					
ANR	2946121	UnaryOperationExpression	! esc -> table		2946029	0					
ANR	2946122	UnaryOperator	!		2946029	0					
ANR	2946123	PtrMemberAccess	esc -> table		2946029	1					
ANR	2946124	Identifier	esc		2946029	0					
ANR	2946125	Identifier	table		2946029	1					
ANR	2946126	Identifier	packet_size		2946029	1					
ANR	2946127	AdditiveExpression	avctx -> channels + ( packet_size - avctx -> channels ) * 2		2946029	2		+			
ANR	2946128	PtrMemberAccess	avctx -> channels		2946029	0					
ANR	2946129	Identifier	avctx		2946029	0					
ANR	2946130	Identifier	channels		2946029	1					
ANR	2946131	MultiplicativeExpression	( packet_size - avctx -> channels ) * 2		2946029	1		*			
ANR	2946132	AdditiveExpression	packet_size - avctx -> channels		2946029	0		-			
ANR	2946133	Identifier	packet_size		2946029	0					
ANR	2946134	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946135	Identifier	avctx		2946029	0					
ANR	2946136	Identifier	channels		2946029	1					
ANR	2946137	PrimaryExpression	2		2946029	1					
ANR	2946138	IfStatement	if ( ! ( esc -> samples = av_malloc ( esc -> samples_size ) ) )		2946029	3					
ANR	2946139	Condition	! ( esc -> samples = av_malloc ( esc -> samples_size ) )	41:12:808:853	2946029	0	True				
ANR	2946140	UnaryOperationExpression	! ( esc -> samples = av_malloc ( esc -> samples_size ) )		2946029	0					
ANR	2946141	UnaryOperator	!		2946029	0					
ANR	2946142	AssignmentExpression	esc -> samples = av_malloc ( esc -> samples_size )		2946029	1		=			
ANR	2946143	PtrMemberAccess	esc -> samples		2946029	0					
ANR	2946144	Identifier	esc		2946029	0					
ANR	2946145	Identifier	samples		2946029	1					
ANR	2946146	CallExpression	av_malloc ( esc -> samples_size )		2946029	1					
ANR	2946147	Callee	av_malloc		2946029	0					
ANR	2946148	Identifier	av_malloc		2946029	0					
ANR	2946149	ArgumentList	esc -> samples_size		2946029	1					
ANR	2946150	Argument	esc -> samples_size		2946029	0					
ANR	2946151	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946152	Identifier	esc		2946029	0					
ANR	2946153	Identifier	samples_size		2946029	1					
ANR	2946154	ReturnStatement	return AVERROR ( ENOMEM ) ;	43:12:869:891	2946029	1	True				
ANR	2946155	CallExpression	AVERROR ( ENOMEM )		2946029	0					
ANR	2946156	Callee	AVERROR		2946029	0					
ANR	2946157	Identifier	AVERROR		2946029	0					
ANR	2946158	ArgumentList	ENOMEM		2946029	1					
ANR	2946159	Argument	ENOMEM		2946029	0					
ANR	2946160	Identifier	ENOMEM		2946029	0					
ANR	2946161	IfStatement	if ( esc -> table )		2946029	4					
ANR	2946162	Condition	esc -> table	49:12:934:943	2946029	0	True				
ANR	2946163	PtrMemberAccess	esc -> table		2946029	0					
ANR	2946164	Identifier	esc		2946029	0					
ANR	2946165	Identifier	table		2946029	1					
ANR	2946166	CompoundStatement		53:12:935:963	2946029	1					
ANR	2946167	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	51:12:961:993	2946029	0	True				
ANR	2946168	IdentifierDecl	* buf = avpkt -> data		2946029	0					
ANR	2946169	IdentifierDeclType	const uint8_t *		2946029	0					
ANR	2946170	Identifier	buf		2946029	1					
ANR	2946171	AssignmentExpression	* buf = avpkt -> data		2946029	2		=			
ANR	2946172	Identifier	buf		2946029	0					
ANR	2946173	PtrMemberAccess	avpkt -> data		2946029	1					
ANR	2946174	Identifier	avpkt		2946029	0					
ANR	2946175	Identifier	data		2946029	1					
ANR	2946176	IdentifierDeclStatement	uint8_t * dst ;	53:12:1008:1020	2946029	1	True				
ANR	2946177	IdentifierDecl	* dst		2946029	0					
ANR	2946178	IdentifierDeclType	uint8_t *		2946029	0					
ANR	2946179	Identifier	dst		2946029	1					
ANR	2946180	IdentifierDeclStatement	int buf_size = avpkt -> size ;	55:12:1035:1061	2946029	2	True				
ANR	2946181	IdentifierDecl	buf_size = avpkt -> size		2946029	0					
ANR	2946182	IdentifierDeclType	int		2946029	0					
ANR	2946183	Identifier	buf_size		2946029	1					
ANR	2946184	AssignmentExpression	buf_size = avpkt -> size		2946029	2		=			
ANR	2946185	Identifier	buf_size		2946029	0					
ANR	2946186	PtrMemberAccess	avpkt -> size		2946029	1					
ANR	2946187	Identifier	avpkt		2946029	0					
ANR	2946188	Identifier	size		2946029	1					
ANR	2946189	IdentifierDeclStatement	"int i , n = esc -> samples_size ;"	57:12:1076:1104	2946029	3	True				
ANR	2946190	IdentifierDecl	i		2946029	0					
ANR	2946191	IdentifierDeclType	int		2946029	0					
ANR	2946192	Identifier	i		2946029	1					
ANR	2946193	IdentifierDecl	n = esc -> samples_size		2946029	1					
ANR	2946194	IdentifierDeclType	int		2946029	0					
ANR	2946195	Identifier	n		2946029	1					
ANR	2946196	AssignmentExpression	n = esc -> samples_size		2946029	2		=			
ANR	2946197	Identifier	n		2946029	0					
ANR	2946198	PtrMemberAccess	esc -> samples_size		2946029	1					
ANR	2946199	Identifier	esc		2946029	0					
ANR	2946200	Identifier	samples_size		2946029	1					
ANR	2946201	IfStatement	if ( buf_size < 2 )		2946029	4					
ANR	2946202	Condition	buf_size < 2	61:16:1125:1136	2946029	0	True				
ANR	2946203	RelationalExpression	buf_size < 2		2946029	0		<			
ANR	2946204	Identifier	buf_size		2946029	0					
ANR	2946205	PrimaryExpression	2		2946029	1					
ANR	2946206	CompoundStatement		57:30:998:998	2946029	1					
ANR	2946207	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""packet size is too small\\n"" )"	63:16:1158:1215	2946029	0	True				
ANR	2946208	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""packet size is too small\\n"" )"		2946029	0					
ANR	2946209	Callee	av_log		2946029	0					
ANR	2946210	Identifier	av_log		2946029	0					
ANR	2946211	ArgumentList	avctx		2946029	1					
ANR	2946212	Argument	avctx		2946029	0					
ANR	2946213	Identifier	avctx		2946029	0					
ANR	2946214	Argument	AV_LOG_ERROR		2946029	1					
ANR	2946215	Identifier	AV_LOG_ERROR		2946029	0					
ANR	2946216	Argument	"""packet size is too small\\n"""		2946029	2					
ANR	2946217	PrimaryExpression	"""packet size is too small\\n"""		2946029	0					
ANR	2946218	ReturnStatement	return AVERROR ( EINVAL ) ;	65:16:1234:1256	2946029	1	True				
ANR	2946219	CallExpression	AVERROR ( EINVAL )		2946029	0					
ANR	2946220	Callee	AVERROR		2946029	0					
ANR	2946221	Identifier	AVERROR		2946029	0					
ANR	2946222	ArgumentList	EINVAL		2946029	1					
ANR	2946223	Argument	EINVAL		2946029	0					
ANR	2946224	Identifier	EINVAL		2946029	0					
ANR	2946225	ExpressionStatement	dst = esc -> samples	73:12:1370:1388	2946029	5	True				
ANR	2946226	AssignmentExpression	dst = esc -> samples		2946029	0		=			
ANR	2946227	Identifier	dst		2946029	0					
ANR	2946228	PtrMemberAccess	esc -> samples		2946029	1					
ANR	2946229	Identifier	esc		2946029	0					
ANR	2946230	Identifier	samples		2946029	1					
ANR	2946231	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		2946029	6					
ANR	2946232	ForInit	i = 0 ;	75:17:1408:1413	2946029	0	True				
ANR	2946233	AssignmentExpression	i = 0		2946029	0		=			
ANR	2946234	Identifier	i		2946029	0					
ANR	2946235	PrimaryExpression	0		2946029	1					
ANR	2946236	Condition	i < avctx -> channels	75:24:1415:1433	2946029	1	True				
ANR	2946237	RelationalExpression	i < avctx -> channels		2946029	0		<			
ANR	2946238	Identifier	i		2946029	0					
ANR	2946239	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946240	Identifier	avctx		2946029	0					
ANR	2946241	Identifier	channels		2946029	1					
ANR	2946242	PostIncDecOperationExpression	i ++	75:45:1436:1438	2946029	2	True				
ANR	2946243	Identifier	i		2946029	0					
ANR	2946244	IncDec	++		2946029	1					
ANR	2946245	CompoundStatement		71:50:1300:1300	2946029	3					
ANR	2946246	ExpressionStatement	* ( dst ++ ) = buf [ 0 ] + 128	77:16:1460:1481	2946029	0	True				
ANR	2946247	AssignmentExpression	* ( dst ++ ) = buf [ 0 ] + 128		2946029	0		=			
ANR	2946248	UnaryOperationExpression	* ( dst ++ )		2946029	0					
ANR	2946249	UnaryOperator	*		2946029	0					
ANR	2946250	PostIncDecOperationExpression	dst ++		2946029	1					
ANR	2946251	Identifier	dst		2946029	0					
ANR	2946252	IncDec	++		2946029	1					
ANR	2946253	AdditiveExpression	buf [ 0 ] + 128		2946029	1		+			
ANR	2946254	ArrayIndexing	buf [ 0 ]		2946029	0					
ANR	2946255	Identifier	buf		2946029	0					
ANR	2946256	PrimaryExpression	0		2946029	1					
ANR	2946257	PrimaryExpression	128		2946029	1					
ANR	2946258	ExpressionStatement	"delta_decode ( dst , buf + 1 , buf_size / avctx -> channels - 1 , ( buf [ 0 ] + 128 ) & 0xFF , esc -> table )"	79:16:1500:1589	2946029	1	True				
ANR	2946259	CallExpression	"delta_decode ( dst , buf + 1 , buf_size / avctx -> channels - 1 , ( buf [ 0 ] + 128 ) & 0xFF , esc -> table )"		2946029	0					
ANR	2946260	Callee	delta_decode		2946029	0					
ANR	2946261	Identifier	delta_decode		2946029	0					
ANR	2946262	ArgumentList	dst		2946029	1					
ANR	2946263	Argument	dst		2946029	0					
ANR	2946264	Identifier	dst		2946029	0					
ANR	2946265	Argument	buf + 1		2946029	1					
ANR	2946266	AdditiveExpression	buf + 1		2946029	0		+			
ANR	2946267	Identifier	buf		2946029	0					
ANR	2946268	PrimaryExpression	1		2946029	1					
ANR	2946269	Argument	buf_size / avctx -> channels - 1		2946029	2					
ANR	2946270	AdditiveExpression	buf_size / avctx -> channels - 1		2946029	0		-			
ANR	2946271	MultiplicativeExpression	buf_size / avctx -> channels		2946029	0		/			
ANR	2946272	Identifier	buf_size		2946029	0					
ANR	2946273	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946274	Identifier	avctx		2946029	0					
ANR	2946275	Identifier	channels		2946029	1					
ANR	2946276	PrimaryExpression	1		2946029	1					
ANR	2946277	Argument	( buf [ 0 ] + 128 ) & 0xFF		2946029	3					
ANR	2946278	BitAndExpression	( buf [ 0 ] + 128 ) & 0xFF		2946029	0		&			
ANR	2946279	AdditiveExpression	buf [ 0 ] + 128		2946029	0		+			
ANR	2946280	ArrayIndexing	buf [ 0 ]		2946029	0					
ANR	2946281	Identifier	buf		2946029	0					
ANR	2946282	PrimaryExpression	0		2946029	1					
ANR	2946283	PrimaryExpression	128		2946029	1					
ANR	2946284	PrimaryExpression	0xFF		2946029	1					
ANR	2946285	Argument	esc -> table		2946029	4					
ANR	2946286	PtrMemberAccess	esc -> table		2946029	0					
ANR	2946287	Identifier	esc		2946029	0					
ANR	2946288	Identifier	table		2946029	1					
ANR	2946289	ExpressionStatement	buf += buf_size / avctx -> channels	81:16:1608:1641	2946029	2	True				
ANR	2946290	AssignmentExpression	buf += buf_size / avctx -> channels		2946029	0		+=			
ANR	2946291	Identifier	buf		2946029	0					
ANR	2946292	MultiplicativeExpression	buf_size / avctx -> channels		2946029	1		/			
ANR	2946293	Identifier	buf_size		2946029	0					
ANR	2946294	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946295	Identifier	avctx		2946029	0					
ANR	2946296	Identifier	channels		2946029	1					
ANR	2946297	ExpressionStatement	dst += n / avctx -> channels - 1	83:16:1660:1690	2946029	3	True				
ANR	2946298	AssignmentExpression	dst += n / avctx -> channels - 1		2946029	0		+=			
ANR	2946299	Identifier	dst		2946029	0					
ANR	2946300	AdditiveExpression	n / avctx -> channels - 1		2946029	1		-			
ANR	2946301	MultiplicativeExpression	n / avctx -> channels		2946029	0		/			
ANR	2946302	Identifier	n		2946029	0					
ANR	2946303	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946304	Identifier	avctx		2946029	0					
ANR	2946305	Identifier	channels		2946029	1					
ANR	2946306	PrimaryExpression	1		2946029	1					
ANR	2946307	ElseStatement	else		2946029	0					
ANR	2946308	CompoundStatement		83:15:1582:1582	2946029	0					
ANR	2946309	ExpressionStatement	"raw_decode ( esc -> samples , avpkt -> data , esc -> samples_size )"	89:12:1738:1794	2946029	0	True				
ANR	2946310	CallExpression	"raw_decode ( esc -> samples , avpkt -> data , esc -> samples_size )"		2946029	0					
ANR	2946311	Callee	raw_decode		2946029	0					
ANR	2946312	Identifier	raw_decode		2946029	0					
ANR	2946313	ArgumentList	esc -> samples		2946029	1					
ANR	2946314	Argument	esc -> samples		2946029	0					
ANR	2946315	PtrMemberAccess	esc -> samples		2946029	0					
ANR	2946316	Identifier	esc		2946029	0					
ANR	2946317	Identifier	samples		2946029	1					
ANR	2946318	Argument	avpkt -> data		2946029	1					
ANR	2946319	PtrMemberAccess	avpkt -> data		2946029	0					
ANR	2946320	Identifier	avpkt		2946029	0					
ANR	2946321	Identifier	data		2946029	1					
ANR	2946322	Argument	esc -> samples_size		2946029	2					
ANR	2946323	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946324	Identifier	esc		2946029	0					
ANR	2946325	Identifier	samples_size		2946029	1					
ANR	2946326	ExpressionStatement	av_assert1 ( ! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels ) )	99:4:1850:1938	2946029	5	True				
ANR	2946327	CallExpression	av_assert1 ( ! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels ) )		2946029	0					
ANR	2946328	Callee	av_assert1		2946029	0					
ANR	2946329	Identifier	av_assert1		2946029	0					
ANR	2946330	ArgumentList	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946029	1					
ANR	2946331	Argument	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946029	0					
ANR	2946332	UnaryOperationExpression	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946029	0					
ANR	2946333	UnaryOperator	!		2946029	0					
ANR	2946334	OrExpression	esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels		2946029	1		||			
ANR	2946335	MultiplicativeExpression	esc -> samples_size % avctx -> channels		2946029	0		%			
ANR	2946336	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946337	Identifier	esc		2946029	0					
ANR	2946338	Identifier	samples_size		2946029	1					
ANR	2946339	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946340	Identifier	avctx		2946029	0					
ANR	2946341	Identifier	channels		2946029	1					
ANR	2946342	MultiplicativeExpression	esc -> samples_idx % avctx -> channels		2946029	1		%			
ANR	2946343	PtrMemberAccess	esc -> samples_idx		2946029	0					
ANR	2946344	Identifier	esc		2946029	0					
ANR	2946345	Identifier	samples_idx		2946029	1					
ANR	2946346	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946347	Identifier	avctx		2946029	0					
ANR	2946348	Identifier	channels		2946029	1					
ANR	2946349	ExpressionStatement	"esc -> frame . nb_samples = FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"	101:4:1945:2047	2946029	6	True				
ANR	2946350	AssignmentExpression	"esc -> frame . nb_samples = FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"		2946029	0		=			
ANR	2946351	MemberAccess	esc -> frame . nb_samples		2946029	0					
ANR	2946352	PtrMemberAccess	esc -> frame		2946029	0					
ANR	2946353	Identifier	esc		2946029	0					
ANR	2946354	Identifier	frame		2946029	1					
ANR	2946355	Identifier	nb_samples		2946029	1					
ANR	2946356	MultiplicativeExpression	"FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"		2946029	1		/			
ANR	2946357	CallExpression	"FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx )"		2946029	0					
ANR	2946358	Callee	FFMIN		2946029	0					
ANR	2946359	Identifier	FFMIN		2946029	0					
ANR	2946360	ArgumentList	MAX_FRAME_SIZE		2946029	1					
ANR	2946361	Argument	MAX_FRAME_SIZE		2946029	0					
ANR	2946362	Identifier	MAX_FRAME_SIZE		2946029	0					
ANR	2946363	Argument	esc -> samples_size - esc -> samples_idx		2946029	1					
ANR	2946364	AdditiveExpression	esc -> samples_size - esc -> samples_idx		2946029	0		-			
ANR	2946365	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946366	Identifier	esc		2946029	0					
ANR	2946367	Identifier	samples_size		2946029	1					
ANR	2946368	PtrMemberAccess	esc -> samples_idx		2946029	1					
ANR	2946369	Identifier	esc		2946029	0					
ANR	2946370	Identifier	samples_idx		2946029	1					
ANR	2946371	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946372	Identifier	avctx		2946029	0					
ANR	2946373	Identifier	channels		2946029	1					
ANR	2946374	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0 )"		2946029	7					
ANR	2946375	Condition	"( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0"	103:8:2058:2106	2946029	0	True				
ANR	2946376	RelationalExpression	"( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0"		2946029	0		<			
ANR	2946377	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & esc -> frame )"		2946029	0		=			
ANR	2946378	Identifier	ret		2946029	0					
ANR	2946379	CallExpression	"avctx -> get_buffer ( avctx , & esc -> frame )"		2946029	1					
ANR	2946380	Callee	avctx -> get_buffer		2946029	0					
ANR	2946381	PtrMemberAccess	avctx -> get_buffer		2946029	0					
ANR	2946382	Identifier	avctx		2946029	0					
ANR	2946383	Identifier	get_buffer		2946029	1					
ANR	2946384	ArgumentList	avctx		2946029	1					
ANR	2946385	Argument	avctx		2946029	0					
ANR	2946386	Identifier	avctx		2946029	0					
ANR	2946387	Argument	& esc -> frame		2946029	1					
ANR	2946388	UnaryOperationExpression	& esc -> frame		2946029	0					
ANR	2946389	UnaryOperator	&		2946029	0					
ANR	2946390	PtrMemberAccess	esc -> frame		2946029	1					
ANR	2946391	Identifier	esc		2946029	0					
ANR	2946392	Identifier	frame		2946029	1					
ANR	2946393	PrimaryExpression	0		2946029	1					
ANR	2946394	CompoundStatement		99:59:1968:1968	2946029	1					
ANR	2946395	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	105:8:2120:2172	2946029	0	True				
ANR	2946396	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		2946029	0					
ANR	2946397	Callee	av_log		2946029	0					
ANR	2946398	Identifier	av_log		2946029	0					
ANR	2946399	ArgumentList	avctx		2946029	1					
ANR	2946400	Argument	avctx		2946029	0					
ANR	2946401	Identifier	avctx		2946029	0					
ANR	2946402	Argument	AV_LOG_ERROR		2946029	1					
ANR	2946403	Identifier	AV_LOG_ERROR		2946029	0					
ANR	2946404	Argument	"""get_buffer() failed\\n"""		2946029	2					
ANR	2946405	PrimaryExpression	"""get_buffer() failed\\n"""		2946029	0					
ANR	2946406	ReturnStatement	return ret ;	107:8:2183:2193	2946029	1	True				
ANR	2946407	Identifier	ret		2946029	0					
ANR	2946408	ExpressionStatement	* got_frame_ptr = 1	113:4:2209:2229	2946029	8	True				
ANR	2946409	AssignmentExpression	* got_frame_ptr = 1		2946029	0		=			
ANR	2946410	UnaryOperationExpression	* got_frame_ptr		2946029	0					
ANR	2946411	UnaryOperator	*		2946029	0					
ANR	2946412	Identifier	got_frame_ptr		2946029	1					
ANR	2946413	PrimaryExpression	1		2946029	1					
ANR	2946414	ExpressionStatement	* ( AVFrame * ) data = esc -> frame	115:4:2236:2265	2946029	9	True				
ANR	2946415	AssignmentExpression	* ( AVFrame * ) data = esc -> frame		2946029	0		=			
ANR	2946416	UnaryOperationExpression	* ( AVFrame * ) data		2946029	0					
ANR	2946417	UnaryOperator	*		2946029	0					
ANR	2946418	CastExpression	( AVFrame * ) data		2946029	1					
ANR	2946419	CastTarget	AVFrame *		2946029	0					
ANR	2946420	Identifier	data		2946029	1					
ANR	2946421	PtrMemberAccess	esc -> frame		2946029	1					
ANR	2946422	Identifier	esc		2946029	0					
ANR	2946423	Identifier	frame		2946029	1					
ANR	2946424	ExpressionStatement	out_data_size = esc -> frame . nb_samples	119:4:2274:2311	2946029	10	True				
ANR	2946425	AssignmentExpression	out_data_size = esc -> frame . nb_samples		2946029	0		=			
ANR	2946426	Identifier	out_data_size		2946029	0					
ANR	2946427	MemberAccess	esc -> frame . nb_samples		2946029	1					
ANR	2946428	PtrMemberAccess	esc -> frame		2946029	0					
ANR	2946429	Identifier	esc		2946029	0					
ANR	2946430	Identifier	frame		2946029	1					
ANR	2946431	Identifier	nb_samples		2946029	1					
ANR	2946432	ForStatement	for ( ch = 0 ; ch < avctx -> channels ; ch ++ )		2946029	11					
ANR	2946433	ForInit	ch = 0 ;	121:9:2323:2329	2946029	0	True				
ANR	2946434	AssignmentExpression	ch = 0		2946029	0		=			
ANR	2946435	Identifier	ch		2946029	0					
ANR	2946436	PrimaryExpression	0		2946029	1					
ANR	2946437	Condition	ch < avctx -> channels	121:17:2331:2348	2946029	1	True				
ANR	2946438	RelationalExpression	ch < avctx -> channels		2946029	0		<			
ANR	2946439	Identifier	ch		2946029	0					
ANR	2946440	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946441	Identifier	avctx		2946029	0					
ANR	2946442	Identifier	channels		2946029	1					
ANR	2946443	PostIncDecOperationExpression	ch ++	121:37:2351:2354	2946029	2	True				
ANR	2946444	Identifier	ch		2946029	0					
ANR	2946445	IncDec	++		2946029	1					
ANR	2946446	CompoundStatement		117:43:2216:2216	2946029	3					
ANR	2946447	ExpressionStatement	src = esc -> samples + esc -> samples_idx / avctx -> channels + ch * esc -> samples_size / avctx -> channels	123:8:2368:2466	2946029	0	True				
ANR	2946448	AssignmentExpression	src = esc -> samples + esc -> samples_idx / avctx -> channels + ch * esc -> samples_size / avctx -> channels		2946029	0		=			
ANR	2946449	Identifier	src		2946029	0					
ANR	2946450	AdditiveExpression	esc -> samples + esc -> samples_idx / avctx -> channels + ch * esc -> samples_size / avctx -> channels		2946029	1		+			
ANR	2946451	PtrMemberAccess	esc -> samples		2946029	0					
ANR	2946452	Identifier	esc		2946029	0					
ANR	2946453	Identifier	samples		2946029	1					
ANR	2946454	AdditiveExpression	esc -> samples_idx / avctx -> channels + ch * esc -> samples_size / avctx -> channels		2946029	1		+			
ANR	2946455	MultiplicativeExpression	esc -> samples_idx / avctx -> channels		2946029	0		/			
ANR	2946456	PtrMemberAccess	esc -> samples_idx		2946029	0					
ANR	2946457	Identifier	esc		2946029	0					
ANR	2946458	Identifier	samples_idx		2946029	1					
ANR	2946459	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946460	Identifier	avctx		2946029	0					
ANR	2946461	Identifier	channels		2946029	1					
ANR	2946462	MultiplicativeExpression	ch * esc -> samples_size / avctx -> channels		2946029	1		*			
ANR	2946463	Identifier	ch		2946029	0					
ANR	2946464	MultiplicativeExpression	esc -> samples_size / avctx -> channels		2946029	1		/			
ANR	2946465	PtrMemberAccess	esc -> samples_size		2946029	0					
ANR	2946466	Identifier	esc		2946029	0					
ANR	2946467	Identifier	samples_size		2946029	1					
ANR	2946468	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946469	Identifier	avctx		2946029	0					
ANR	2946470	Identifier	channels		2946029	1					
ANR	2946471	ExpressionStatement	"memcpy ( esc -> frame . data [ ch ] , src , out_data_size )"	125:8:2477:2524	2946029	1	True				
ANR	2946472	CallExpression	"memcpy ( esc -> frame . data [ ch ] , src , out_data_size )"		2946029	0					
ANR	2946473	Callee	memcpy		2946029	0					
ANR	2946474	Identifier	memcpy		2946029	0					
ANR	2946475	ArgumentList	esc -> frame . data [ ch ]		2946029	1					
ANR	2946476	Argument	esc -> frame . data [ ch ]		2946029	0					
ANR	2946477	ArrayIndexing	esc -> frame . data [ ch ]		2946029	0					
ANR	2946478	MemberAccess	esc -> frame . data		2946029	0					
ANR	2946479	PtrMemberAccess	esc -> frame		2946029	0					
ANR	2946480	Identifier	esc		2946029	0					
ANR	2946481	Identifier	frame		2946029	1					
ANR	2946482	Identifier	data		2946029	1					
ANR	2946483	Identifier	ch		2946029	1					
ANR	2946484	Argument	src		2946029	1					
ANR	2946485	Identifier	src		2946029	0					
ANR	2946486	Argument	out_data_size		2946029	2					
ANR	2946487	Identifier	out_data_size		2946029	0					
ANR	2946488	ExpressionStatement	out_data_size *= avctx -> channels	129:4:2538:2570	2946029	12	True				
ANR	2946489	AssignmentExpression	out_data_size *= avctx -> channels		2946029	0		*=			
ANR	2946490	Identifier	out_data_size		2946029	0					
ANR	2946491	PtrMemberAccess	avctx -> channels		2946029	1					
ANR	2946492	Identifier	avctx		2946029	0					
ANR	2946493	Identifier	channels		2946029	1					
ANR	2946494	ExpressionStatement	esc -> samples_idx += out_data_size	131:4:2577:2610	2946029	13	True				
ANR	2946495	AssignmentExpression	esc -> samples_idx += out_data_size		2946029	0		+=			
ANR	2946496	PtrMemberAccess	esc -> samples_idx		2946029	0					
ANR	2946497	Identifier	esc		2946029	0					
ANR	2946498	Identifier	samples_idx		2946029	1					
ANR	2946499	Identifier	out_data_size		2946029	1					
ANR	2946500	ReturnStatement	return esc -> table ? ( avctx -> frame_number == 0 ) * 2 + out_data_size / 2 : out_data_size ;	135:4:2619:2721	2946029	14	True				
ANR	2946501	ConditionalExpression	esc -> table ? ( avctx -> frame_number == 0 ) * 2 + out_data_size / 2 : out_data_size		2946029	0					
ANR	2946502	Condition	esc -> table		2946029	0					
ANR	2946503	PtrMemberAccess	esc -> table		2946029	0					
ANR	2946504	Identifier	esc		2946029	0					
ANR	2946505	Identifier	table		2946029	1					
ANR	2946506	AdditiveExpression	( avctx -> frame_number == 0 ) * 2 + out_data_size / 2		2946029	1		+			
ANR	2946507	MultiplicativeExpression	( avctx -> frame_number == 0 ) * 2		2946029	0		*			
ANR	2946508	EqualityExpression	avctx -> frame_number == 0		2946029	0		==			
ANR	2946509	PtrMemberAccess	avctx -> frame_number		2946029	0					
ANR	2946510	Identifier	avctx		2946029	0					
ANR	2946511	Identifier	frame_number		2946029	1					
ANR	2946512	PrimaryExpression	0		2946029	1					
ANR	2946513	PrimaryExpression	2		2946029	1					
ANR	2946514	MultiplicativeExpression	out_data_size / 2		2946029	1		/			
ANR	2946515	Identifier	out_data_size		2946029	0					
ANR	2946516	PrimaryExpression	2		2946029	1					
ANR	2946517	Identifier	out_data_size		2946029	2					
ANR	2946518	ReturnType	static int		2946029	1					
ANR	2946519	Identifier	eightsvx_decode_frame		2946029	2					
ANR	2946520	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		2946029	3					
ANR	2946521	Parameter	AVCodecContext * avctx	1:33:33:53	2946029	0	True				
ANR	2946522	ParameterType	AVCodecContext *		2946029	0					
ANR	2946523	Identifier	avctx		2946029	1					
ANR	2946524	Parameter	void * data	1:56:56:65	2946029	1	True				
ANR	2946525	ParameterType	void *		2946029	0					
ANR	2946526	Identifier	data		2946029	1					
ANR	2946527	Parameter	int * got_frame_ptr	3:33:102:119	2946029	2	True				
ANR	2946528	ParameterType	int *		2946029	0					
ANR	2946529	Identifier	got_frame_ptr		2946029	1					
ANR	2946530	Parameter	AVPacket * avpkt	3:53:122:136	2946029	3	True				
ANR	2946531	ParameterType	AVPacket *		2946029	0					
ANR	2946532	Identifier	avpkt		2946029	1					
ANR	2946533	CFGEntryNode	ENTRY		2946029		True				
ANR	2946534	CFGExitNode	EXIT		2946029		True				
ANR	2946535	Symbol	av_malloc		2946029						
ANR	2946536	Symbol	ENOMEM		2946029						
ANR	2946537	Symbol	data		2946029						
ANR	2946538	Symbol	esc -> frame		2946029						
ANR	2946539	Symbol	* ch		2946029						
ANR	2946540	Symbol	FFMIN		2946029						
ANR	2946541	Symbol	got_frame_ptr		2946029						
ANR	2946542	Symbol	avpkt		2946029						
ANR	2946543	Symbol	avctx -> channels		2946029						
ANR	2946544	Symbol	* esc -> frame . data		2946029						
ANR	2946545	Symbol	& esc -> frame		2946029						
ANR	2946546	Symbol	ret		2946029						
ANR	2946547	Symbol	* esc		2946029						
ANR	2946548	Symbol	* buf		2946029						
ANR	2946549	Symbol	esc -> table		2946029						
ANR	2946550	Symbol	buf_size		2946029						
ANR	2946551	Symbol	esc -> frame . data		2946029						
ANR	2946552	Symbol	* avctx		2946029						
ANR	2946553	Symbol	avpkt -> data		2946029						
ANR	2946554	Symbol	esc -> frame . nb_samples		2946029						
ANR	2946555	Symbol	dst		2946029						
ANR	2946556	Symbol	* * esc		2946029						
ANR	2946557	Symbol	esc -> samples		2946029						
ANR	2946558	Symbol	avpkt -> size		2946029						
ANR	2946559	Symbol	avctx -> frame_number		2946029						
ANR	2946560	Symbol	avctx		2946029						
ANR	2946561	Symbol	esc -> samples_size		2946029						
ANR	2946562	Symbol	* avpkt		2946029						
ANR	2946563	Symbol	AV_LOG_ERROR		2946029						
ANR	2946564	Symbol	avctx -> get_buffer		2946029						
ANR	2946565	Symbol	ch		2946029						
ANR	2946566	Symbol	src		2946029						
ANR	2946567	Symbol	* got_frame_ptr		2946029						
ANR	2946568	Symbol	i		2946029						
ANR	2946569	Symbol	avctx -> priv_data		2946029						
ANR	2946570	Symbol	n		2946029						
ANR	2946571	Symbol	* esc -> frame		2946029						
ANR	2946572	Symbol	EINVAL		2946029						
ANR	2946573	Symbol	esc -> samples_idx		2946029						
ANR	2946574	Symbol	buf		2946029						
ANR	2946575	Symbol	esc		2946029						
ANR	2946576	Symbol	packet_size		2946029						
ANR	2946577	Symbol	MAX_FRAME_SIZE		2946029						
ANR	2946578	Symbol	AVERROR		2946029						
ANR	2946579	Symbol	* ( AVFrame * ) data		2946029						
ANR	2946580	Symbol	out_data_size		2946029						
ANR	2946581	Symbol	AV_LOG_WARNING		2946029						
ANR	2946582	Symbol	* ( dst ++ )		2946029						
ANR	2946583	Symbol	* data		2946029						
