command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8919412	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vcr1_decode_frame_01_1.c								
ANR	8919413	Function	vcr1_decode_frame	1:0:0:2900							
ANR	8919414	FunctionDef	"vcr1_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		8919413	0					
ANR	8919415	CompoundStatement		5:0:128:2900	8919413	0					
ANR	8919416	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:135:174	8919413	0	True				
ANR	8919417	IdentifierDecl	* buf = avpkt -> data		8919413	0					
ANR	8919418	IdentifierDeclType	const uint8_t *		8919413	0					
ANR	8919419	Identifier	buf		8919413	1					
ANR	8919420	AssignmentExpression	* buf = avpkt -> data		8919413	2		=			
ANR	8919421	Identifier	buf		8919413	0					
ANR	8919422	PtrMemberAccess	avpkt -> data		8919413	1					
ANR	8919423	Identifier	avpkt		8919413	0					
ANR	8919424	Identifier	data		8919413	1					
ANR	8919425	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:181:220	8919413	1	True				
ANR	8919426	IdentifierDecl	buf_size = avpkt -> size		8919413	0					
ANR	8919427	IdentifierDeclType	int		8919413	0					
ANR	8919428	Identifier	buf_size		8919413	1					
ANR	8919429	AssignmentExpression	buf_size = avpkt -> size		8919413	2		=			
ANR	8919430	Identifier	buf_size		8919413	0					
ANR	8919431	PtrMemberAccess	avpkt -> size		8919413	1					
ANR	8919432	Identifier	avpkt		8919413	0					
ANR	8919433	Identifier	size		8919413	1					
ANR	8919434	Statement	VCR1Context	11:4:227:237	8919413	2	True				
ANR	8919435	Statement	*	11:16:239:239	8919413	3	True				
ANR	8919436	Statement	const	11:17:240:244	8919413	4	True				
ANR	8919437	ExpressionStatement	a = avctx -> priv_data	11:23:246:271	8919413	5	True				
ANR	8919438	AssignmentExpression	a = avctx -> priv_data		8919413	0		=			
ANR	8919439	Identifier	a		8919413	0					
ANR	8919440	PtrMemberAccess	avctx -> priv_data		8919413	1					
ANR	8919441	Identifier	avctx		8919413	0					
ANR	8919442	Identifier	priv_data		8919413	1					
ANR	8919443	Statement	AVFrame	13:4:278:284	8919413	6	True				
ANR	8919444	Statement	*	13:12:286:286	8919413	7	True				
ANR	8919445	Statement	const	13:13:287:291	8919413	8	True				
ANR	8919446	ExpressionStatement	p = data	13:19:293:310	8919413	9	True				
ANR	8919447	AssignmentExpression	p = data		8919413	0		=			
ANR	8919448	Identifier	p		8919413	0					
ANR	8919449	Identifier	data		8919413	1					
ANR	8919450	IdentifierDeclStatement	const uint8_t * bytestream = buf ;	15:4:317:348	8919413	10	True				
ANR	8919451	IdentifierDecl	* bytestream = buf		8919413	0					
ANR	8919452	IdentifierDeclType	const uint8_t *		8919413	0					
ANR	8919453	Identifier	bytestream		8919413	1					
ANR	8919454	AssignmentExpression	* bytestream = buf		8919413	2		=			
ANR	8919455	Identifier	buf		8919413	0					
ANR	8919456	Identifier	buf		8919413	1					
ANR	8919457	IdentifierDeclStatement	"int i , x , y , ret ;"	17:4:355:371	8919413	11	True				
ANR	8919458	IdentifierDecl	i		8919413	0					
ANR	8919459	IdentifierDeclType	int		8919413	0					
ANR	8919460	Identifier	i		8919413	1					
ANR	8919461	IdentifierDecl	x		8919413	1					
ANR	8919462	IdentifierDeclType	int		8919413	0					
ANR	8919463	Identifier	x		8919413	1					
ANR	8919464	IdentifierDecl	y		8919413	2					
ANR	8919465	IdentifierDeclType	int		8919413	0					
ANR	8919466	Identifier	y		8919413	1					
ANR	8919467	IdentifierDecl	ret		8919413	3					
ANR	8919468	IdentifierDeclType	int		8919413	0					
ANR	8919469	Identifier	ret		8919413	1					
ANR	8919470	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0 )"		8919413	12					
ANR	8919471	Condition	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"	21:8:384:421	8919413	0	True				
ANR	8919472	RelationalExpression	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"		8919413	0		<			
ANR	8919473	AssignmentExpression	"ret = ff_get_buffer ( avctx , p , 0 )"		8919413	0		=			
ANR	8919474	Identifier	ret		8919413	0					
ANR	8919475	CallExpression	"ff_get_buffer ( avctx , p , 0 )"		8919413	1					
ANR	8919476	Callee	ff_get_buffer		8919413	0					
ANR	8919477	Identifier	ff_get_buffer		8919413	0					
ANR	8919478	ArgumentList	avctx		8919413	1					
ANR	8919479	Argument	avctx		8919413	0					
ANR	8919480	Identifier	avctx		8919413	0					
ANR	8919481	Argument	p		8919413	1					
ANR	8919482	Identifier	p		8919413	0					
ANR	8919483	Argument	0		8919413	2					
ANR	8919484	PrimaryExpression	0		8919413	0					
ANR	8919485	PrimaryExpression	0		8919413	1					
ANR	8919486	CompoundStatement		17:48:295:295	8919413	1					
ANR	8919487	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	23:8:435:487	8919413	0	True				
ANR	8919488	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		8919413	0					
ANR	8919489	Callee	av_log		8919413	0					
ANR	8919490	Identifier	av_log		8919413	0					
ANR	8919491	ArgumentList	avctx		8919413	1					
ANR	8919492	Argument	avctx		8919413	0					
ANR	8919493	Identifier	avctx		8919413	0					
ANR	8919494	Argument	AV_LOG_ERROR		8919413	1					
ANR	8919495	Identifier	AV_LOG_ERROR		8919413	0					
ANR	8919496	Argument	"""get_buffer() failed\\n"""		8919413	2					
ANR	8919497	PrimaryExpression	"""get_buffer() failed\\n"""		8919413	0					
ANR	8919498	ReturnStatement	return ret ;	25:8:498:508	8919413	1	True				
ANR	8919499	Identifier	ret		8919413	0					
ANR	8919500	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	29:4:522:554	8919413	13	True				
ANR	8919501	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		8919413	0		=			
ANR	8919502	PtrMemberAccess	p -> pict_type		8919413	0					
ANR	8919503	Identifier	p		8919413	0					
ANR	8919504	Identifier	pict_type		8919413	1					
ANR	8919505	Identifier	AV_PICTURE_TYPE_I		8919413	1					
ANR	8919506	ExpressionStatement	p -> key_frame = 1	31:4:561:577	8919413	14	True				
ANR	8919507	AssignmentExpression	p -> key_frame = 1		8919413	0		=			
ANR	8919508	PtrMemberAccess	p -> key_frame		8919413	0					
ANR	8919509	Identifier	p		8919413	0					
ANR	8919510	Identifier	key_frame		8919413	1					
ANR	8919511	PrimaryExpression	1		8919413	1					
ANR	8919512	IfStatement	if ( buf_size < 32 )		8919413	15					
ANR	8919513	Condition	buf_size < 32	35:8:590:602	8919413	0	True				
ANR	8919514	RelationalExpression	buf_size < 32		8919413	0		<			
ANR	8919515	Identifier	buf_size		8919413	0					
ANR	8919516	PrimaryExpression	32		8919413	1					
ANR	8919517	GotoStatement	goto packet_small ;	37:8:614:631	8919413	1	True				
ANR	8919518	Identifier	packet_small		8919413	0					
ANR	8919519	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		8919413	16					
ANR	8919520	ForInit	i = 0 ;	41:9:645:650	8919413	0	True				
ANR	8919521	AssignmentExpression	i = 0		8919413	0		=			
ANR	8919522	Identifier	i		8919413	0					
ANR	8919523	PrimaryExpression	0		8919413	1					
ANR	8919524	Condition	i < 16	41:16:652:657	8919413	1	True				
ANR	8919525	RelationalExpression	i < 16		8919413	0		<			
ANR	8919526	Identifier	i		8919413	0					
ANR	8919527	PrimaryExpression	16		8919413	1					
ANR	8919528	PostIncDecOperationExpression	i ++	41:24:660:662	8919413	2	True				
ANR	8919529	Identifier	i		8919413	0					
ANR	8919530	IncDec	++		8919413	1					
ANR	8919531	CompoundStatement		37:29:536:536	8919413	3					
ANR	8919532	ExpressionStatement	a -> delta [ i ] = * bytestream ++	43:8:676:703	8919413	0	True				
ANR	8919533	AssignmentExpression	a -> delta [ i ] = * bytestream ++		8919413	0		=			
ANR	8919534	ArrayIndexing	a -> delta [ i ]		8919413	0					
ANR	8919535	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919536	Identifier	a		8919413	0					
ANR	8919537	Identifier	delta		8919413	1					
ANR	8919538	Identifier	i		8919413	1					
ANR	8919539	UnaryOperationExpression	* bytestream ++		8919413	1					
ANR	8919540	UnaryOperator	*		8919413	0					
ANR	8919541	PostIncDecOperationExpression	bytestream ++		8919413	1					
ANR	8919542	Identifier	bytestream		8919413	0					
ANR	8919543	IncDec	++		8919413	1					
ANR	8919544	ExpressionStatement	bytestream ++	45:8:714:726	8919413	1	True				
ANR	8919545	PostIncDecOperationExpression	bytestream ++		8919413	0					
ANR	8919546	Identifier	bytestream		8919413	0					
ANR	8919547	IncDec	++		8919413	1					
ANR	8919548	ExpressionStatement	buf_size --	47:8:737:747	8919413	2	True				
ANR	8919549	PostIncDecOperationExpression	buf_size --		8919413	0					
ANR	8919550	Identifier	buf_size		8919413	0					
ANR	8919551	IncDec	--		8919413	1					
ANR	8919552	ForStatement	for ( y = 0 ; y < avctx -> height ; y ++ )		8919413	17					
ANR	8919553	ForInit	y = 0 ;	53:9:768:773	8919413	0	True				
ANR	8919554	AssignmentExpression	y = 0		8919413	0		=			
ANR	8919555	Identifier	y		8919413	0					
ANR	8919556	PrimaryExpression	0		8919413	1					
ANR	8919557	Condition	y < avctx -> height	53:16:775:791	8919413	1	True				
ANR	8919558	RelationalExpression	y < avctx -> height		8919413	0		<			
ANR	8919559	Identifier	y		8919413	0					
ANR	8919560	PtrMemberAccess	avctx -> height		8919413	1					
ANR	8919561	Identifier	avctx		8919413	0					
ANR	8919562	Identifier	height		8919413	1					
ANR	8919563	PostIncDecOperationExpression	y ++	53:35:794:796	8919413	2	True				
ANR	8919564	Identifier	y		8919413	0					
ANR	8919565	IncDec	++		8919413	1					
ANR	8919566	CompoundStatement		53:8:702:749	8919413	3					
ANR	8919567	IdentifierDeclStatement	int offset ;	55:8:810:820	8919413	0	True				
ANR	8919568	IdentifierDecl	offset		8919413	0					
ANR	8919569	IdentifierDeclType	int		8919413	0					
ANR	8919570	Identifier	offset		8919413	1					
ANR	8919571	IdentifierDeclStatement	uint8_t * luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ] ;	57:8:831:878	8919413	1	True				
ANR	8919572	IdentifierDecl	* luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8919413	0					
ANR	8919573	IdentifierDeclType	uint8_t *		8919413	0					
ANR	8919574	Identifier	luma		8919413	1					
ANR	8919575	AssignmentExpression	* luma = & p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8919413	2		=			
ANR	8919576	Identifier	luma		8919413	0					
ANR	8919577	UnaryOperationExpression	& p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8919413	1					
ANR	8919578	UnaryOperator	&		8919413	0					
ANR	8919579	ArrayIndexing	p -> data [ 0 ] [ y * p -> linesize [ 0 ] ]		8919413	1					
ANR	8919580	ArrayIndexing	p -> data [ 0 ]		8919413	0					
ANR	8919581	PtrMemberAccess	p -> data		8919413	0					
ANR	8919582	Identifier	p		8919413	0					
ANR	8919583	Identifier	data		8919413	1					
ANR	8919584	PrimaryExpression	0		8919413	1					
ANR	8919585	MultiplicativeExpression	y * p -> linesize [ 0 ]		8919413	1		*			
ANR	8919586	Identifier	y		8919413	0					
ANR	8919587	ArrayIndexing	p -> linesize [ 0 ]		8919413	1					
ANR	8919588	PtrMemberAccess	p -> linesize		8919413	0					
ANR	8919589	Identifier	p		8919413	0					
ANR	8919590	Identifier	linesize		8919413	1					
ANR	8919591	PrimaryExpression	0		8919413	1					
ANR	8919592	IfStatement	if ( ( y & 3 ) == 0 )		8919413	2					
ANR	8919593	Condition	( y & 3 ) == 0	61:12:895:906	8919413	0	True				
ANR	8919594	EqualityExpression	( y & 3 ) == 0		8919413	0		==			
ANR	8919595	BitAndExpression	y & 3		8919413	0		&			
ANR	8919596	Identifier	y		8919413	0					
ANR	8919597	PrimaryExpression	3		8919413	1					
ANR	8919598	PrimaryExpression	0		8919413	1					
ANR	8919599	CompoundStatement		61:12:862:914	8919413	1					
ANR	8919600	IdentifierDeclStatement	uint8_t * cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ] ;	63:12:924:976	8919413	0	True				
ANR	8919601	IdentifierDecl	* cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8919413	0					
ANR	8919602	IdentifierDeclType	uint8_t *		8919413	0					
ANR	8919603	Identifier	cb		8919413	1					
ANR	8919604	AssignmentExpression	* cb = & p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8919413	2		=			
ANR	8919605	Identifier	cb		8919413	0					
ANR	8919606	UnaryOperationExpression	& p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8919413	1					
ANR	8919607	UnaryOperator	&		8919413	0					
ANR	8919608	ArrayIndexing	p -> data [ 1 ] [ ( y >> 2 ) * p -> linesize [ 1 ] ]		8919413	1					
ANR	8919609	ArrayIndexing	p -> data [ 1 ]		8919413	0					
ANR	8919610	PtrMemberAccess	p -> data		8919413	0					
ANR	8919611	Identifier	p		8919413	0					
ANR	8919612	Identifier	data		8919413	1					
ANR	8919613	PrimaryExpression	1		8919413	1					
ANR	8919614	MultiplicativeExpression	( y >> 2 ) * p -> linesize [ 1 ]		8919413	1		*			
ANR	8919615	ShiftExpression	y >> 2		8919413	0		>>			
ANR	8919616	Identifier	y		8919413	0					
ANR	8919617	PrimaryExpression	2		8919413	1					
ANR	8919618	ArrayIndexing	p -> linesize [ 1 ]		8919413	1					
ANR	8919619	PtrMemberAccess	p -> linesize		8919413	0					
ANR	8919620	Identifier	p		8919413	0					
ANR	8919621	Identifier	linesize		8919413	1					
ANR	8919622	PrimaryExpression	1		8919413	1					
ANR	8919623	IdentifierDeclStatement	uint8_t * cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ] ;	65:12:991:1043	8919413	1	True				
ANR	8919624	IdentifierDecl	* cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8919413	0					
ANR	8919625	IdentifierDeclType	uint8_t *		8919413	0					
ANR	8919626	Identifier	cr		8919413	1					
ANR	8919627	AssignmentExpression	* cr = & p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8919413	2		=			
ANR	8919628	Identifier	cr		8919413	0					
ANR	8919629	UnaryOperationExpression	& p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8919413	1					
ANR	8919630	UnaryOperator	&		8919413	0					
ANR	8919631	ArrayIndexing	p -> data [ 2 ] [ ( y >> 2 ) * p -> linesize [ 2 ] ]		8919413	1					
ANR	8919632	ArrayIndexing	p -> data [ 2 ]		8919413	0					
ANR	8919633	PtrMemberAccess	p -> data		8919413	0					
ANR	8919634	Identifier	p		8919413	0					
ANR	8919635	Identifier	data		8919413	1					
ANR	8919636	PrimaryExpression	2		8919413	1					
ANR	8919637	MultiplicativeExpression	( y >> 2 ) * p -> linesize [ 2 ]		8919413	1		*			
ANR	8919638	ShiftExpression	y >> 2		8919413	0		>>			
ANR	8919639	Identifier	y		8919413	0					
ANR	8919640	PrimaryExpression	2		8919413	1					
ANR	8919641	ArrayIndexing	p -> linesize [ 2 ]		8919413	1					
ANR	8919642	PtrMemberAccess	p -> linesize		8919413	0					
ANR	8919643	Identifier	p		8919413	0					
ANR	8919644	Identifier	linesize		8919413	1					
ANR	8919645	PrimaryExpression	2		8919413	1					
ANR	8919646	IfStatement	if ( buf_size < 4 + avctx -> width )		8919413	2					
ANR	8919647	Condition	buf_size < 4 + avctx -> width	69:16:1064:1090	8919413	0	True				
ANR	8919648	RelationalExpression	buf_size < 4 + avctx -> width		8919413	0		<			
ANR	8919649	Identifier	buf_size		8919413	0					
ANR	8919650	AdditiveExpression	4 + avctx -> width		8919413	1		+			
ANR	8919651	PrimaryExpression	4		8919413	0					
ANR	8919652	PtrMemberAccess	avctx -> width		8919413	1					
ANR	8919653	Identifier	avctx		8919413	0					
ANR	8919654	Identifier	width		8919413	1					
ANR	8919655	GotoStatement	goto packet_small ;	71:16:1110:1127	8919413	1	True				
ANR	8919656	Identifier	packet_small		8919413	0					
ANR	8919657	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8919413	3					
ANR	8919658	ForInit	i = 0 ;	75:17:1149:1154	8919413	0	True				
ANR	8919659	AssignmentExpression	i = 0		8919413	0		=			
ANR	8919660	Identifier	i		8919413	0					
ANR	8919661	PrimaryExpression	0		8919413	1					
ANR	8919662	Condition	i < 4	75:24:1156:1160	8919413	1	True				
ANR	8919663	RelationalExpression	i < 4		8919413	0		<			
ANR	8919664	Identifier	i		8919413	0					
ANR	8919665	PrimaryExpression	4		8919413	1					
ANR	8919666	PostIncDecOperationExpression	i ++	75:31:1163:1165	8919413	2	True				
ANR	8919667	Identifier	i		8919413	0					
ANR	8919668	IncDec	++		8919413	1					
ANR	8919669	ExpressionStatement	a -> offset [ i ] = * bytestream ++	77:16:1185:1213	8919413	3	True				
ANR	8919670	AssignmentExpression	a -> offset [ i ] = * bytestream ++		8919413	0		=			
ANR	8919671	ArrayIndexing	a -> offset [ i ]		8919413	0					
ANR	8919672	PtrMemberAccess	a -> offset		8919413	0					
ANR	8919673	Identifier	a		8919413	0					
ANR	8919674	Identifier	offset		8919413	1					
ANR	8919675	Identifier	i		8919413	1					
ANR	8919676	UnaryOperationExpression	* bytestream ++		8919413	1					
ANR	8919677	UnaryOperator	*		8919413	0					
ANR	8919678	PostIncDecOperationExpression	bytestream ++		8919413	1					
ANR	8919679	Identifier	bytestream		8919413	0					
ANR	8919680	IncDec	++		8919413	1					
ANR	8919681	ExpressionStatement	buf_size -= 4	79:12:1228:1241	8919413	4	True				
ANR	8919682	AssignmentExpression	buf_size -= 4		8919413	0		-=			
ANR	8919683	Identifier	buf_size		8919413	0					
ANR	8919684	PrimaryExpression	4		8919413	1					
ANR	8919685	ExpressionStatement	offset = a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]	83:12:1258:1311	8919413	5	True				
ANR	8919686	AssignmentExpression	offset = a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	0		=			
ANR	8919687	Identifier	offset		8919413	0					
ANR	8919688	AdditiveExpression	a -> offset [ 0 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1		-			
ANR	8919689	ArrayIndexing	a -> offset [ 0 ]		8919413	0					
ANR	8919690	PtrMemberAccess	a -> offset		8919413	0					
ANR	8919691	Identifier	a		8919413	0					
ANR	8919692	Identifier	offset		8919413	1					
ANR	8919693	PrimaryExpression	0		8919413	1					
ANR	8919694	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1					
ANR	8919695	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919696	Identifier	a		8919413	0					
ANR	8919697	Identifier	delta		8919413	1					
ANR	8919698	BitAndExpression	bytestream [ 2 ] & 0xF		8919413	1		&			
ANR	8919699	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919700	Identifier	bytestream		8919413	0					
ANR	8919701	PrimaryExpression	2		8919413	1					
ANR	8919702	PrimaryExpression	0xF		8919413	1					
ANR	8919703	ForStatement	for ( x = 0 ; x < avctx -> width ; x += 4 )		8919413	6					
ANR	8919704	ForInit	x = 0 ;	85:17:1331:1336	8919413	0	True				
ANR	8919705	AssignmentExpression	x = 0		8919413	0		=			
ANR	8919706	Identifier	x		8919413	0					
ANR	8919707	PrimaryExpression	0		8919413	1					
ANR	8919708	Condition	x < avctx -> width	85:24:1338:1353	8919413	1	True				
ANR	8919709	RelationalExpression	x < avctx -> width		8919413	0		<			
ANR	8919710	Identifier	x		8919413	0					
ANR	8919711	PtrMemberAccess	avctx -> width		8919413	1					
ANR	8919712	Identifier	avctx		8919413	0					
ANR	8919713	Identifier	width		8919413	1					
ANR	8919714	AssignmentExpression	x += 4	85:42:1356:1361	8919413	2	True	+=			
ANR	8919715	Identifier	x		8919413	0					
ANR	8919716	PrimaryExpression	4		8919413	1					
ANR	8919717	CompoundStatement		81:50:1235:1235	8919413	3					
ANR	8919718	ExpressionStatement	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]	87:16:1383:1436	8919413	0	True				
ANR	8919719	AssignmentExpression	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	0		=			
ANR	8919720	ArrayIndexing	luma [ 0 ]		8919413	0					
ANR	8919721	Identifier	luma		8919413	0					
ANR	8919722	PrimaryExpression	0		8919413	1					
ANR	8919723	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1		+=			
ANR	8919724	Identifier	offset		8919413	0					
ANR	8919725	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1					
ANR	8919726	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919727	Identifier	a		8919413	0					
ANR	8919728	Identifier	delta		8919413	1					
ANR	8919729	BitAndExpression	bytestream [ 2 ] & 0xF		8919413	1		&			
ANR	8919730	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919731	Identifier	bytestream		8919413	0					
ANR	8919732	PrimaryExpression	2		8919413	1					
ANR	8919733	PrimaryExpression	0xF		8919413	1					
ANR	8919734	ExpressionStatement	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]	89:16:1455:1508	8919413	1	True				
ANR	8919735	AssignmentExpression	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	0		=			
ANR	8919736	ArrayIndexing	luma [ 1 ]		8919413	0					
ANR	8919737	Identifier	luma		8919413	0					
ANR	8919738	PrimaryExpression	1		8919413	1					
ANR	8919739	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	1		+=			
ANR	8919740	Identifier	offset		8919413	0					
ANR	8919741	ArrayIndexing	a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	1					
ANR	8919742	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919743	Identifier	a		8919413	0					
ANR	8919744	Identifier	delta		8919413	1					
ANR	8919745	ShiftExpression	bytestream [ 2 ] >> 4		8919413	1		>>			
ANR	8919746	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919747	Identifier	bytestream		8919413	0					
ANR	8919748	PrimaryExpression	2		8919413	1					
ANR	8919749	PrimaryExpression	4		8919413	1					
ANR	8919750	ExpressionStatement	luma [ 2 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]	91:16:1527:1580	8919413	2	True				
ANR	8919751	AssignmentExpression	luma [ 2 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	0		=			
ANR	8919752	ArrayIndexing	luma [ 2 ]		8919413	0					
ANR	8919753	Identifier	luma		8919413	0					
ANR	8919754	PrimaryExpression	2		8919413	1					
ANR	8919755	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	1		+=			
ANR	8919756	Identifier	offset		8919413	0					
ANR	8919757	ArrayIndexing	a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	1					
ANR	8919758	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919759	Identifier	a		8919413	0					
ANR	8919760	Identifier	delta		8919413	1					
ANR	8919761	BitAndExpression	bytestream [ 0 ] & 0xF		8919413	1		&			
ANR	8919762	ArrayIndexing	bytestream [ 0 ]		8919413	0					
ANR	8919763	Identifier	bytestream		8919413	0					
ANR	8919764	PrimaryExpression	0		8919413	1					
ANR	8919765	PrimaryExpression	0xF		8919413	1					
ANR	8919766	ExpressionStatement	luma [ 3 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]	93:16:1599:1652	8919413	3	True				
ANR	8919767	AssignmentExpression	luma [ 3 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	0		=			
ANR	8919768	ArrayIndexing	luma [ 3 ]		8919413	0					
ANR	8919769	Identifier	luma		8919413	0					
ANR	8919770	PrimaryExpression	3		8919413	1					
ANR	8919771	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	1		+=			
ANR	8919772	Identifier	offset		8919413	0					
ANR	8919773	ArrayIndexing	a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	1					
ANR	8919774	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919775	Identifier	a		8919413	0					
ANR	8919776	Identifier	delta		8919413	1					
ANR	8919777	ShiftExpression	bytestream [ 0 ] >> 4		8919413	1		>>			
ANR	8919778	ArrayIndexing	bytestream [ 0 ]		8919413	0					
ANR	8919779	Identifier	bytestream		8919413	0					
ANR	8919780	PrimaryExpression	0		8919413	1					
ANR	8919781	PrimaryExpression	4		8919413	1					
ANR	8919782	ExpressionStatement	luma += 4	95:16:1671:1686	8919413	4	True				
ANR	8919783	AssignmentExpression	luma += 4		8919413	0		+=			
ANR	8919784	Identifier	luma		8919413	0					
ANR	8919785	PrimaryExpression	4		8919413	1					
ANR	8919786	ExpressionStatement	* cb ++ = bytestream [ 3 ]	99:16:1707:1734	8919413	5	True				
ANR	8919787	AssignmentExpression	* cb ++ = bytestream [ 3 ]		8919413	0		=			
ANR	8919788	UnaryOperationExpression	* cb ++		8919413	0					
ANR	8919789	UnaryOperator	*		8919413	0					
ANR	8919790	PostIncDecOperationExpression	cb ++		8919413	1					
ANR	8919791	Identifier	cb		8919413	0					
ANR	8919792	IncDec	++		8919413	1					
ANR	8919793	ArrayIndexing	bytestream [ 3 ]		8919413	1					
ANR	8919794	Identifier	bytestream		8919413	0					
ANR	8919795	PrimaryExpression	3		8919413	1					
ANR	8919796	ExpressionStatement	* cr ++ = bytestream [ 1 ]	101:16:1753:1780	8919413	6	True				
ANR	8919797	AssignmentExpression	* cr ++ = bytestream [ 1 ]		8919413	0		=			
ANR	8919798	UnaryOperationExpression	* cr ++		8919413	0					
ANR	8919799	UnaryOperator	*		8919413	0					
ANR	8919800	PostIncDecOperationExpression	cr ++		8919413	1					
ANR	8919801	Identifier	cr		8919413	0					
ANR	8919802	IncDec	++		8919413	1					
ANR	8919803	ArrayIndexing	bytestream [ 1 ]		8919413	1					
ANR	8919804	Identifier	bytestream		8919413	0					
ANR	8919805	PrimaryExpression	1		8919413	1					
ANR	8919806	ExpressionStatement	bytestream += 4	105:16:1801:1816	8919413	7	True				
ANR	8919807	AssignmentExpression	bytestream += 4		8919413	0		+=			
ANR	8919808	Identifier	bytestream		8919413	0					
ANR	8919809	PrimaryExpression	4		8919413	1					
ANR	8919810	ElseStatement	else		8919413	0					
ANR	8919811	CompoundStatement		106:15:1721:1721	8919413	0					
ANR	8919812	IfStatement	if ( buf_size < avctx -> width / 2 )		8919413	0					
ANR	8919813	Condition	buf_size < avctx -> width / 2	112:16:1869:1895	8919413	0	True				
ANR	8919814	RelationalExpression	buf_size < avctx -> width / 2		8919413	0		<			
ANR	8919815	Identifier	buf_size		8919413	0					
ANR	8919816	MultiplicativeExpression	avctx -> width / 2		8919413	1		/			
ANR	8919817	PtrMemberAccess	avctx -> width		8919413	0					
ANR	8919818	Identifier	avctx		8919413	0					
ANR	8919819	Identifier	width		8919413	1					
ANR	8919820	PrimaryExpression	2		8919413	1					
ANR	8919821	GotoStatement	goto packet_small ;	114:16:1915:1932	8919413	1	True				
ANR	8919822	Identifier	packet_small		8919413	0					
ANR	8919823	ExpressionStatement	offset = a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]	118:12:1949:2006	8919413	1	True				
ANR	8919824	AssignmentExpression	offset = a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	0		=			
ANR	8919825	Identifier	offset		8919413	0					
ANR	8919826	AdditiveExpression	a -> offset [ y & 3 ] - a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1		-			
ANR	8919827	ArrayIndexing	a -> offset [ y & 3 ]		8919413	0					
ANR	8919828	PtrMemberAccess	a -> offset		8919413	0					
ANR	8919829	Identifier	a		8919413	0					
ANR	8919830	Identifier	offset		8919413	1					
ANR	8919831	BitAndExpression	y & 3		8919413	1		&			
ANR	8919832	Identifier	y		8919413	0					
ANR	8919833	PrimaryExpression	3		8919413	1					
ANR	8919834	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1					
ANR	8919835	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919836	Identifier	a		8919413	0					
ANR	8919837	Identifier	delta		8919413	1					
ANR	8919838	BitAndExpression	bytestream [ 2 ] & 0xF		8919413	1		&			
ANR	8919839	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919840	Identifier	bytestream		8919413	0					
ANR	8919841	PrimaryExpression	2		8919413	1					
ANR	8919842	PrimaryExpression	0xF		8919413	1					
ANR	8919843	ForStatement	for ( x = 0 ; x < avctx -> width ; x += 8 )		8919413	2					
ANR	8919844	ForInit	x = 0 ;	122:17:2028:2033	8919413	0	True				
ANR	8919845	AssignmentExpression	x = 0		8919413	0		=			
ANR	8919846	Identifier	x		8919413	0					
ANR	8919847	PrimaryExpression	0		8919413	1					
ANR	8919848	Condition	x < avctx -> width	122:24:2035:2050	8919413	1	True				
ANR	8919849	RelationalExpression	x < avctx -> width		8919413	0		<			
ANR	8919850	Identifier	x		8919413	0					
ANR	8919851	PtrMemberAccess	avctx -> width		8919413	1					
ANR	8919852	Identifier	avctx		8919413	0					
ANR	8919853	Identifier	width		8919413	1					
ANR	8919854	AssignmentExpression	x += 8	122:42:2053:2058	8919413	2	True	+=			
ANR	8919855	Identifier	x		8919413	0					
ANR	8919856	PrimaryExpression	8		8919413	1					
ANR	8919857	CompoundStatement		118:50:1932:1932	8919413	3					
ANR	8919858	ExpressionStatement	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]	124:16:2080:2133	8919413	0	True				
ANR	8919859	AssignmentExpression	luma [ 0 ] = offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	0		=			
ANR	8919860	ArrayIndexing	luma [ 0 ]		8919413	0					
ANR	8919861	Identifier	luma		8919413	0					
ANR	8919862	PrimaryExpression	0		8919413	1					
ANR	8919863	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1		+=			
ANR	8919864	Identifier	offset		8919413	0					
ANR	8919865	ArrayIndexing	a -> delta [ bytestream [ 2 ] & 0xF ]		8919413	1					
ANR	8919866	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919867	Identifier	a		8919413	0					
ANR	8919868	Identifier	delta		8919413	1					
ANR	8919869	BitAndExpression	bytestream [ 2 ] & 0xF		8919413	1		&			
ANR	8919870	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919871	Identifier	bytestream		8919413	0					
ANR	8919872	PrimaryExpression	2		8919413	1					
ANR	8919873	PrimaryExpression	0xF		8919413	1					
ANR	8919874	ExpressionStatement	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]	126:16:2152:2205	8919413	1	True				
ANR	8919875	AssignmentExpression	luma [ 1 ] = offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	0		=			
ANR	8919876	ArrayIndexing	luma [ 1 ]		8919413	0					
ANR	8919877	Identifier	luma		8919413	0					
ANR	8919878	PrimaryExpression	1		8919413	1					
ANR	8919879	AssignmentExpression	offset += a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	1		+=			
ANR	8919880	Identifier	offset		8919413	0					
ANR	8919881	ArrayIndexing	a -> delta [ bytestream [ 2 ] >> 4 ]		8919413	1					
ANR	8919882	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919883	Identifier	a		8919413	0					
ANR	8919884	Identifier	delta		8919413	1					
ANR	8919885	ShiftExpression	bytestream [ 2 ] >> 4		8919413	1		>>			
ANR	8919886	ArrayIndexing	bytestream [ 2 ]		8919413	0					
ANR	8919887	Identifier	bytestream		8919413	0					
ANR	8919888	PrimaryExpression	2		8919413	1					
ANR	8919889	PrimaryExpression	4		8919413	1					
ANR	8919890	ExpressionStatement	luma [ 2 ] = offset += a -> delta [ bytestream [ 3 ] & 0xF ]	128:16:2224:2277	8919413	2	True				
ANR	8919891	AssignmentExpression	luma [ 2 ] = offset += a -> delta [ bytestream [ 3 ] & 0xF ]		8919413	0		=			
ANR	8919892	ArrayIndexing	luma [ 2 ]		8919413	0					
ANR	8919893	Identifier	luma		8919413	0					
ANR	8919894	PrimaryExpression	2		8919413	1					
ANR	8919895	AssignmentExpression	offset += a -> delta [ bytestream [ 3 ] & 0xF ]		8919413	1		+=			
ANR	8919896	Identifier	offset		8919413	0					
ANR	8919897	ArrayIndexing	a -> delta [ bytestream [ 3 ] & 0xF ]		8919413	1					
ANR	8919898	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919899	Identifier	a		8919413	0					
ANR	8919900	Identifier	delta		8919413	1					
ANR	8919901	BitAndExpression	bytestream [ 3 ] & 0xF		8919413	1		&			
ANR	8919902	ArrayIndexing	bytestream [ 3 ]		8919413	0					
ANR	8919903	Identifier	bytestream		8919413	0					
ANR	8919904	PrimaryExpression	3		8919413	1					
ANR	8919905	PrimaryExpression	0xF		8919413	1					
ANR	8919906	ExpressionStatement	luma [ 3 ] = offset += a -> delta [ bytestream [ 3 ] >> 4 ]	130:16:2296:2349	8919413	3	True				
ANR	8919907	AssignmentExpression	luma [ 3 ] = offset += a -> delta [ bytestream [ 3 ] >> 4 ]		8919413	0		=			
ANR	8919908	ArrayIndexing	luma [ 3 ]		8919413	0					
ANR	8919909	Identifier	luma		8919413	0					
ANR	8919910	PrimaryExpression	3		8919413	1					
ANR	8919911	AssignmentExpression	offset += a -> delta [ bytestream [ 3 ] >> 4 ]		8919413	1		+=			
ANR	8919912	Identifier	offset		8919413	0					
ANR	8919913	ArrayIndexing	a -> delta [ bytestream [ 3 ] >> 4 ]		8919413	1					
ANR	8919914	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919915	Identifier	a		8919413	0					
ANR	8919916	Identifier	delta		8919413	1					
ANR	8919917	ShiftExpression	bytestream [ 3 ] >> 4		8919413	1		>>			
ANR	8919918	ArrayIndexing	bytestream [ 3 ]		8919413	0					
ANR	8919919	Identifier	bytestream		8919413	0					
ANR	8919920	PrimaryExpression	3		8919413	1					
ANR	8919921	PrimaryExpression	4		8919413	1					
ANR	8919922	ExpressionStatement	luma [ 4 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]	132:16:2368:2421	8919413	4	True				
ANR	8919923	AssignmentExpression	luma [ 4 ] = offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	0		=			
ANR	8919924	ArrayIndexing	luma [ 4 ]		8919413	0					
ANR	8919925	Identifier	luma		8919413	0					
ANR	8919926	PrimaryExpression	4		8919413	1					
ANR	8919927	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	1		+=			
ANR	8919928	Identifier	offset		8919413	0					
ANR	8919929	ArrayIndexing	a -> delta [ bytestream [ 0 ] & 0xF ]		8919413	1					
ANR	8919930	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919931	Identifier	a		8919413	0					
ANR	8919932	Identifier	delta		8919413	1					
ANR	8919933	BitAndExpression	bytestream [ 0 ] & 0xF		8919413	1		&			
ANR	8919934	ArrayIndexing	bytestream [ 0 ]		8919413	0					
ANR	8919935	Identifier	bytestream		8919413	0					
ANR	8919936	PrimaryExpression	0		8919413	1					
ANR	8919937	PrimaryExpression	0xF		8919413	1					
ANR	8919938	ExpressionStatement	luma [ 5 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]	134:16:2440:2493	8919413	5	True				
ANR	8919939	AssignmentExpression	luma [ 5 ] = offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	0		=			
ANR	8919940	ArrayIndexing	luma [ 5 ]		8919413	0					
ANR	8919941	Identifier	luma		8919413	0					
ANR	8919942	PrimaryExpression	5		8919413	1					
ANR	8919943	AssignmentExpression	offset += a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	1		+=			
ANR	8919944	Identifier	offset		8919413	0					
ANR	8919945	ArrayIndexing	a -> delta [ bytestream [ 0 ] >> 4 ]		8919413	1					
ANR	8919946	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919947	Identifier	a		8919413	0					
ANR	8919948	Identifier	delta		8919413	1					
ANR	8919949	ShiftExpression	bytestream [ 0 ] >> 4		8919413	1		>>			
ANR	8919950	ArrayIndexing	bytestream [ 0 ]		8919413	0					
ANR	8919951	Identifier	bytestream		8919413	0					
ANR	8919952	PrimaryExpression	0		8919413	1					
ANR	8919953	PrimaryExpression	4		8919413	1					
ANR	8919954	ExpressionStatement	luma [ 6 ] = offset += a -> delta [ bytestream [ 1 ] & 0xF ]	136:16:2512:2565	8919413	6	True				
ANR	8919955	AssignmentExpression	luma [ 6 ] = offset += a -> delta [ bytestream [ 1 ] & 0xF ]		8919413	0		=			
ANR	8919956	ArrayIndexing	luma [ 6 ]		8919413	0					
ANR	8919957	Identifier	luma		8919413	0					
ANR	8919958	PrimaryExpression	6		8919413	1					
ANR	8919959	AssignmentExpression	offset += a -> delta [ bytestream [ 1 ] & 0xF ]		8919413	1		+=			
ANR	8919960	Identifier	offset		8919413	0					
ANR	8919961	ArrayIndexing	a -> delta [ bytestream [ 1 ] & 0xF ]		8919413	1					
ANR	8919962	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919963	Identifier	a		8919413	0					
ANR	8919964	Identifier	delta		8919413	1					
ANR	8919965	BitAndExpression	bytestream [ 1 ] & 0xF		8919413	1		&			
ANR	8919966	ArrayIndexing	bytestream [ 1 ]		8919413	0					
ANR	8919967	Identifier	bytestream		8919413	0					
ANR	8919968	PrimaryExpression	1		8919413	1					
ANR	8919969	PrimaryExpression	0xF		8919413	1					
ANR	8919970	ExpressionStatement	luma [ 7 ] = offset += a -> delta [ bytestream [ 1 ] >> 4 ]	138:16:2584:2637	8919413	7	True				
ANR	8919971	AssignmentExpression	luma [ 7 ] = offset += a -> delta [ bytestream [ 1 ] >> 4 ]		8919413	0		=			
ANR	8919972	ArrayIndexing	luma [ 7 ]		8919413	0					
ANR	8919973	Identifier	luma		8919413	0					
ANR	8919974	PrimaryExpression	7		8919413	1					
ANR	8919975	AssignmentExpression	offset += a -> delta [ bytestream [ 1 ] >> 4 ]		8919413	1		+=			
ANR	8919976	Identifier	offset		8919413	0					
ANR	8919977	ArrayIndexing	a -> delta [ bytestream [ 1 ] >> 4 ]		8919413	1					
ANR	8919978	PtrMemberAccess	a -> delta		8919413	0					
ANR	8919979	Identifier	a		8919413	0					
ANR	8919980	Identifier	delta		8919413	1					
ANR	8919981	ShiftExpression	bytestream [ 1 ] >> 4		8919413	1		>>			
ANR	8919982	ArrayIndexing	bytestream [ 1 ]		8919413	0					
ANR	8919983	Identifier	bytestream		8919413	0					
ANR	8919984	PrimaryExpression	1		8919413	1					
ANR	8919985	PrimaryExpression	4		8919413	1					
ANR	8919986	ExpressionStatement	luma += 8	140:16:2656:2671	8919413	8	True				
ANR	8919987	AssignmentExpression	luma += 8		8919413	0		+=			
ANR	8919988	Identifier	luma		8919413	0					
ANR	8919989	PrimaryExpression	8		8919413	1					
ANR	8919990	ExpressionStatement	bytestream += 4	142:16:2690:2705	8919413	9	True				
ANR	8919991	AssignmentExpression	bytestream += 4		8919413	0		+=			
ANR	8919992	Identifier	bytestream		8919413	0					
ANR	8919993	PrimaryExpression	4		8919413	1					
ANR	8919994	ExpressionStatement	* got_frame = 1	153:4:2748:2762	8919413	18	True				
ANR	8919995	AssignmentExpression	* got_frame = 1		8919413	0		=			
ANR	8919996	UnaryOperationExpression	* got_frame		8919413	0					
ANR	8919997	UnaryOperator	*		8919413	0					
ANR	8919998	Identifier	got_frame		8919413	1					
ANR	8919999	PrimaryExpression	1		8919413	1					
ANR	8920000	ReturnStatement	return buf_size ;	157:4:2771:2786	8919413	19	True				
ANR	8920001	Identifier	buf_size		8919413	0					
ANR	8920002	Label	packet_small :	159:0:2789:2801	8919413	20	True				
ANR	8920003	Identifier	packet_small		8919413	0					
ANR	8920004	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Input packet too small.\\n"" )"	161:4:2808:2864	8919413	21	True				
ANR	8920005	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Input packet too small.\\n"" )"		8919413	0					
ANR	8920006	Callee	av_log		8919413	0					
ANR	8920007	Identifier	av_log		8919413	0					
ANR	8920008	ArgumentList	avctx		8919413	1					
ANR	8920009	Argument	avctx		8919413	0					
ANR	8920010	Identifier	avctx		8919413	0					
ANR	8920011	Argument	AV_LOG_ERROR		8919413	1					
ANR	8920012	Identifier	AV_LOG_ERROR		8919413	0					
ANR	8920013	Argument	"""Input packet too small.\\n"""		8919413	2					
ANR	8920014	PrimaryExpression	"""Input packet too small.\\n"""		8919413	0					
ANR	8920015	ReturnStatement	return AVERROR_INVALIDDATA ;	163:4:2871:2897	8919413	22	True				
ANR	8920016	Identifier	AVERROR_INVALIDDATA		8919413	0					
ANR	8920017	ReturnType	static int		8919413	1					
ANR	8920018	Identifier	vcr1_decode_frame		8919413	2					
ANR	8920019	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		8919413	3					
ANR	8920020	Parameter	AVCodecContext * avctx	1:29:29:49	8919413	0	True				
ANR	8920021	ParameterType	AVCodecContext *		8919413	0					
ANR	8920022	Identifier	avctx		8919413	1					
ANR	8920023	Parameter	void * data	1:52:52:61	8919413	1	True				
ANR	8920024	ParameterType	void *		8919413	0					
ANR	8920025	Identifier	data		8919413	1					
ANR	8920026	Parameter	int * got_frame	3:29:94:107	8919413	2	True				
ANR	8920027	ParameterType	int *		8919413	0					
ANR	8920028	Identifier	got_frame		8919413	1					
ANR	8920029	Parameter	AVPacket * avpkt	3:45:110:124	8919413	3	True				
ANR	8920030	ParameterType	AVPacket *		8919413	0					
ANR	8920031	Identifier	avpkt		8919413	1					
ANR	8920032	CFGEntryNode	ENTRY		8919413		True				
ANR	8920033	CFGExitNode	EXIT		8919413		True				
ANR	8920034	Symbol	* y		8919413						
ANR	8920035	Symbol	data		8919413						
ANR	8920036	Symbol	a -> offset		8919413						
ANR	8920037	Symbol	avpkt		8919413						
ANR	8920038	Symbol	ff_get_buffer		8919413						
ANR	8920039	Symbol	* p -> data		8919413						
ANR	8920040	Symbol	got_frame		8919413						
ANR	8920041	Symbol	bytestream		8919413						
ANR	8920042	Symbol	ret		8919413						
ANR	8920043	Symbol	* bytestream ++		8919413						
ANR	8920044	Symbol	offset		8919413						
ANR	8920045	Symbol	* got_frame		8919413						
ANR	8920046	Symbol	buf_size		8919413						
ANR	8920047	Symbol	* * a		8919413						
ANR	8920048	Symbol	p -> linesize		8919413						
ANR	8920049	Symbol	* avctx		8919413						
ANR	8920050	Symbol	* luma		8919413						
ANR	8920051	Symbol	* cr ++		8919413						
ANR	8920052	Symbol	avpkt -> data		8919413						
ANR	8920053	Symbol	p -> data		8919413						
ANR	8920054	Symbol	avctx -> width		8919413						
ANR	8920055	Symbol	* cb ++		8919413						
ANR	8920056	Symbol	avctx -> height		8919413						
ANR	8920057	Symbol	avpkt -> size		8919413						
ANR	8920058	Symbol	AV_PICTURE_TYPE_I		8919413						
ANR	8920059	Symbol	* bytestream		8919413						
ANR	8920060	Symbol	* * p		8919413						
ANR	8920061	Symbol	avctx		8919413						
ANR	8920062	Symbol	p -> pict_type		8919413						
ANR	8920063	Symbol	* * bytestream		8919413						
ANR	8920064	Symbol	* a -> delta		8919413						
ANR	8920065	Symbol	cb		8919413						
ANR	8920066	Symbol	* avpkt		8919413						
ANR	8920067	Symbol	a		8919413						
ANR	8920068	Symbol	AV_LOG_ERROR		8919413						
ANR	8920069	Symbol	p -> key_frame		8919413						
ANR	8920070	Symbol	i		8919413						
ANR	8920071	Symbol	* a		8919413						
ANR	8920072	Symbol	avctx -> priv_data		8919413						
ANR	8920073	Symbol	a -> delta		8919413						
ANR	8920074	Symbol	* p -> linesize		8919413						
ANR	8920075	Symbol	luma		8919413						
ANR	8920076	Symbol	cr		8919413						
ANR	8920077	Symbol	p		8919413						
ANR	8920078	Symbol	buf		8919413						
ANR	8920079	Symbol	* i		8919413						
ANR	8920080	Symbol	* a -> offset		8919413						
ANR	8920081	Symbol	x		8919413						
ANR	8920082	Symbol	y		8919413						
ANR	8920083	Symbol	* p		8919413						
ANR	8920084	Symbol	AVERROR_INVALIDDATA		8919413						
