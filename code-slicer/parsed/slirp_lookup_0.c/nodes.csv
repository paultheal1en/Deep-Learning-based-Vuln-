command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7847013	File	/home/p4ultr4n/workplace/ReVeal/raw_code/slirp_lookup_0.c								
ANR	7847014	Function	slirp_lookup	1:0:0:692							
ANR	7847015	FunctionDef	"slirp_lookup (Monitor * mon , const char * vlan , const char * stack)"		7847014	0					
ANR	7847016	CompoundStatement		5:0:117:692	7847014	0					
ANR	7847017	IdentifierDeclStatement	VLANClientState * vc ;	7:4:124:143	7847014	0	True				
ANR	7847018	IdentifierDecl	* vc		7847014	0					
ANR	7847019	IdentifierDeclType	VLANClientState *		7847014	0					
ANR	7847020	Identifier	vc		7847014	1					
ANR	7847021	IfStatement	if ( vlan )		7847014	1					
ANR	7847022	Condition	vlan	11:8:156:159	7847014	0	True				
ANR	7847023	Identifier	vlan		7847014	0					
ANR	7847024	CompoundStatement		7:14:44:44	7847014	1					
ANR	7847025	ExpressionStatement	"vc = qemu_find_vlan_client_by_name ( mon , strtol ( vlan , NULL , 0 ) , stack )"	13:8:173:242	7847014	0	True				
ANR	7847026	AssignmentExpression	"vc = qemu_find_vlan_client_by_name ( mon , strtol ( vlan , NULL , 0 ) , stack )"		7847014	0		=			
ANR	7847027	Identifier	vc		7847014	0					
ANR	7847028	CallExpression	"qemu_find_vlan_client_by_name ( mon , strtol ( vlan , NULL , 0 ) , stack )"		7847014	1					
ANR	7847029	Callee	qemu_find_vlan_client_by_name		7847014	0					
ANR	7847030	Identifier	qemu_find_vlan_client_by_name		7847014	0					
ANR	7847031	ArgumentList	mon		7847014	1					
ANR	7847032	Argument	mon		7847014	0					
ANR	7847033	Identifier	mon		7847014	0					
ANR	7847034	Argument	"strtol ( vlan , NULL , 0 )"		7847014	1					
ANR	7847035	CallExpression	"strtol ( vlan , NULL , 0 )"		7847014	0					
ANR	7847036	Callee	strtol		7847014	0					
ANR	7847037	Identifier	strtol		7847014	0					
ANR	7847038	ArgumentList	vlan		7847014	1					
ANR	7847039	Argument	vlan		7847014	0					
ANR	7847040	Identifier	vlan		7847014	0					
ANR	7847041	Argument	NULL		7847014	1					
ANR	7847042	Identifier	NULL		7847014	0					
ANR	7847043	Argument	0		7847014	2					
ANR	7847044	PrimaryExpression	0		7847014	0					
ANR	7847045	Argument	stack		7847014	2					
ANR	7847046	Identifier	stack		7847014	0					
ANR	7847047	IfStatement	if ( ! vc )		7847014	1					
ANR	7847048	Condition	! vc	15:12:257:259	7847014	0	True				
ANR	7847049	UnaryOperationExpression	! vc		7847014	0					
ANR	7847050	UnaryOperator	!		7847014	0					
ANR	7847051	Identifier	vc		7847014	1					
ANR	7847052	CompoundStatement		11:17:144:144	7847014	1					
ANR	7847053	ReturnStatement	return NULL ;	17:12:277:288	7847014	0	True				
ANR	7847054	Identifier	NULL		7847014	0					
ANR	7847055	IfStatement	"if ( strcmp ( vc -> model , ""user"" ) )"		7847014	2					
ANR	7847056	Condition	"strcmp ( vc -> model , ""user"" )"	21:12:314:338	7847014	0	True				
ANR	7847057	CallExpression	"strcmp ( vc -> model , ""user"" )"		7847014	0					
ANR	7847058	Callee	strcmp		7847014	0					
ANR	7847059	Identifier	strcmp		7847014	0					
ANR	7847060	ArgumentList	vc -> model		7847014	1					
ANR	7847061	Argument	vc -> model		7847014	0					
ANR	7847062	PtrMemberAccess	vc -> model		7847014	0					
ANR	7847063	Identifier	vc		7847014	0					
ANR	7847064	Identifier	model		7847014	1					
ANR	7847065	Argument	"""user"""		7847014	1					
ANR	7847066	PrimaryExpression	"""user"""		7847014	0					
ANR	7847067	CompoundStatement		17:39:223:223	7847014	1					
ANR	7847068	ExpressionStatement	"monitor_printf ( mon , ""invalid device specified\\n"" )"	23:12:356:405	7847014	0	True				
ANR	7847069	CallExpression	"monitor_printf ( mon , ""invalid device specified\\n"" )"		7847014	0					
ANR	7847070	Callee	monitor_printf		7847014	0					
ANR	7847071	Identifier	monitor_printf		7847014	0					
ANR	7847072	ArgumentList	mon		7847014	1					
ANR	7847073	Argument	mon		7847014	0					
ANR	7847074	Identifier	mon		7847014	0					
ANR	7847075	Argument	"""invalid device specified\\n"""		7847014	1					
ANR	7847076	PrimaryExpression	"""invalid device specified\\n"""		7847014	0					
ANR	7847077	ReturnStatement	return NULL ;	25:12:420:431	7847014	1	True				
ANR	7847078	Identifier	NULL		7847014	0					
ANR	7847079	ReturnStatement	return vc -> opaque ;	29:8:453:470	7847014	3	True				
ANR	7847080	PtrMemberAccess	vc -> opaque		7847014	0					
ANR	7847081	Identifier	vc		7847014	0					
ANR	7847082	Identifier	opaque		7847014	1					
ANR	7847083	ElseStatement	else		7847014	0					
ANR	7847084	CompoundStatement		27:11:366:366	7847014	0					
ANR	7847085	IfStatement	if ( TAILQ_EMPTY ( & slirp_stacks ) )		7847014	0					
ANR	7847086	Condition	TAILQ_EMPTY ( & slirp_stacks )	33:12:499:524	7847014	0	True				
ANR	7847087	CallExpression	TAILQ_EMPTY ( & slirp_stacks )		7847014	0					
ANR	7847088	Callee	TAILQ_EMPTY		7847014	0					
ANR	7847089	Identifier	TAILQ_EMPTY		7847014	0					
ANR	7847090	ArgumentList	& slirp_stacks		7847014	1					
ANR	7847091	Argument	& slirp_stacks		7847014	0					
ANR	7847092	UnaryOperationExpression	& slirp_stacks		7847014	0					
ANR	7847093	UnaryOperator	&		7847014	0					
ANR	7847094	Identifier	slirp_stacks		7847014	1					
ANR	7847095	CompoundStatement		29:40:409:409	7847014	1					
ANR	7847096	ExpressionStatement	"monitor_printf ( mon , ""user mode network stack not in use\\n"" )"	35:12:542:601	7847014	0	True				
ANR	7847097	CallExpression	"monitor_printf ( mon , ""user mode network stack not in use\\n"" )"		7847014	0					
ANR	7847098	Callee	monitor_printf		7847014	0					
ANR	7847099	Identifier	monitor_printf		7847014	0					
ANR	7847100	ArgumentList	mon		7847014	1					
ANR	7847101	Argument	mon		7847014	0					
ANR	7847102	Identifier	mon		7847014	0					
ANR	7847103	Argument	"""user mode network stack not in use\\n"""		7847014	1					
ANR	7847104	PrimaryExpression	"""user mode network stack not in use\\n"""		7847014	0					
ANR	7847105	ReturnStatement	return NULL ;	37:12:616:627	7847014	1	True				
ANR	7847106	Identifier	NULL		7847014	0					
ANR	7847107	ReturnStatement	return TAILQ_FIRST ( & slirp_stacks ) ;	41:8:649:682	7847014	1	True				
ANR	7847108	CallExpression	TAILQ_FIRST ( & slirp_stacks )		7847014	0					
ANR	7847109	Callee	TAILQ_FIRST		7847014	0					
ANR	7847110	Identifier	TAILQ_FIRST		7847014	0					
ANR	7847111	ArgumentList	& slirp_stacks		7847014	1					
ANR	7847112	Argument	& slirp_stacks		7847014	0					
ANR	7847113	UnaryOperationExpression	& slirp_stacks		7847014	0					
ANR	7847114	UnaryOperator	&		7847014	0					
ANR	7847115	Identifier	slirp_stacks		7847014	1					
ANR	7847116	ReturnType	static SlirpState *		7847014	1					
ANR	7847117	Identifier	slirp_lookup		7847014	2					
ANR	7847118	ParameterList	"Monitor * mon , const char * vlan , const char * stack"		7847014	3					
ANR	7847119	Parameter	Monitor * mon	1:32:32:43	7847014	0	True				
ANR	7847120	ParameterType	Monitor *		7847014	0					
ANR	7847121	Identifier	mon		7847014	1					
ANR	7847122	Parameter	const char * vlan	1:46:46:61	7847014	1	True				
ANR	7847123	ParameterType	const char *		7847014	0					
ANR	7847124	Identifier	vlan		7847014	1					
ANR	7847125	Parameter	const char * stack	3:32:97:113	7847014	2	True				
ANR	7847126	ParameterType	const char *		7847014	0					
ANR	7847127	Identifier	stack		7847014	1					
ANR	7847128	CFGEntryNode	ENTRY		7847014		True				
ANR	7847129	CFGExitNode	EXIT		7847014		True				
ANR	7847130	Symbol	strcmp		7847014						
ANR	7847131	Symbol	stack		7847014						
ANR	7847132	Symbol	NULL		7847014						
ANR	7847133	Symbol	vc -> opaque		7847014						
ANR	7847134	Symbol	vc -> model		7847014						
ANR	7847135	Symbol	mon		7847014						
ANR	7847136	Symbol	vc		7847014						
ANR	7847137	Symbol	qemu_find_vlan_client_by_name		7847014						
ANR	7847138	Symbol	TAILQ_FIRST		7847014						
ANR	7847139	Symbol	* vc		7847014						
ANR	7847140	Symbol	vlan		7847014						
ANR	7847141	Symbol	strtol		7847014						
ANR	7847142	Symbol	& slirp_stacks		7847014						
ANR	7847143	Symbol	TAILQ_EMPTY		7847014						
