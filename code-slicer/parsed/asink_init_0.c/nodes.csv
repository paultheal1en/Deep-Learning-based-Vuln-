command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	644301	File	/home/p4ultr4n/workplace/ReVeal/raw_code/asink_init_0.c								
ANR	644302	Function	asink_init	1:0:0:1162							
ANR	644303	FunctionDef	"asink_init (AVFilterContext * ctx , void * opaque)"		644302	0					
ANR	644304	CompoundStatement		3:0:67:1162	644302	0					
ANR	644305	IdentifierDeclStatement	BufferSinkContext * buf = ctx -> priv ;	5:4:74:108	644302	0	True				
ANR	644306	IdentifierDecl	* buf = ctx -> priv		644302	0					
ANR	644307	IdentifierDeclType	BufferSinkContext *		644302	0					
ANR	644308	Identifier	buf		644302	1					
ANR	644309	AssignmentExpression	* buf = ctx -> priv		644302	2		=			
ANR	644310	Identifier	buf		644302	0					
ANR	644311	PtrMemberAccess	ctx -> priv		644302	1					
ANR	644312	Identifier	ctx		644302	0					
ANR	644313	Identifier	priv		644302	1					
ANR	644314	IdentifierDeclStatement	AVABufferSinkParams * params = opaque ;	7:4:115:151	644302	1	True				
ANR	644315	IdentifierDecl	* params = opaque		644302	0					
ANR	644316	IdentifierDeclType	AVABufferSinkParams *		644302	0					
ANR	644317	Identifier	params		644302	1					
ANR	644318	AssignmentExpression	* params = opaque		644302	2		=			
ANR	644319	Identifier	opaque		644302	0					
ANR	644320	Identifier	opaque		644302	1					
ANR	644321	IfStatement	if ( params && params -> sample_fmts )		644302	2					
ANR	644322	Condition	params && params -> sample_fmts	11:8:164:192	644302	0	True				
ANR	644323	AndExpression	params && params -> sample_fmts		644302	0		&&			
ANR	644324	Identifier	params		644302	0					
ANR	644325	PtrMemberAccess	params -> sample_fmts		644302	1					
ANR	644326	Identifier	params		644302	0					
ANR	644327	Identifier	sample_fmts		644302	1					
ANR	644328	CompoundStatement		9:39:127:127	644302	1					
ANR	644329	ExpressionStatement	buf -> sample_fmts = ff_copy_int_list ( params -> sample_fmts )	13:8:206:262	644302	0	True				
ANR	644330	AssignmentExpression	buf -> sample_fmts = ff_copy_int_list ( params -> sample_fmts )		644302	0		=			
ANR	644331	PtrMemberAccess	buf -> sample_fmts		644302	0					
ANR	644332	Identifier	buf		644302	0					
ANR	644333	Identifier	sample_fmts		644302	1					
ANR	644334	CallExpression	ff_copy_int_list ( params -> sample_fmts )		644302	1					
ANR	644335	Callee	ff_copy_int_list		644302	0					
ANR	644336	Identifier	ff_copy_int_list		644302	0					
ANR	644337	ArgumentList	params -> sample_fmts		644302	1					
ANR	644338	Argument	params -> sample_fmts		644302	0					
ANR	644339	PtrMemberAccess	params -> sample_fmts		644302	0					
ANR	644340	Identifier	params		644302	0					
ANR	644341	Identifier	sample_fmts		644302	1					
ANR	644342	IfStatement	if ( ! buf -> sample_fmts )		644302	1					
ANR	644343	Condition	! buf -> sample_fmts	15:12:277:293	644302	0	True				
ANR	644344	UnaryOperationExpression	! buf -> sample_fmts		644302	0					
ANR	644345	UnaryOperator	!		644302	0					
ANR	644346	PtrMemberAccess	buf -> sample_fmts		644302	1					
ANR	644347	Identifier	buf		644302	0					
ANR	644348	Identifier	sample_fmts		644302	1					
ANR	644349	ReturnStatement	return AVERROR ( ENOMEM ) ;	17:12:309:331	644302	1	True				
ANR	644350	CallExpression	AVERROR ( ENOMEM )		644302	0					
ANR	644351	Callee	AVERROR		644302	0					
ANR	644352	Identifier	AVERROR		644302	0					
ANR	644353	ArgumentList	ENOMEM		644302	1					
ANR	644354	Argument	ENOMEM		644302	0					
ANR	644355	Identifier	ENOMEM		644302	0					
ANR	644356	IfStatement	if ( params && params -> sample_rates )		644302	3					
ANR	644357	Condition	params && params -> sample_rates	21:8:349:378	644302	0	True				
ANR	644358	AndExpression	params && params -> sample_rates		644302	0		&&			
ANR	644359	Identifier	params		644302	0					
ANR	644360	PtrMemberAccess	params -> sample_rates		644302	1					
ANR	644361	Identifier	params		644302	0					
ANR	644362	Identifier	sample_rates		644302	1					
ANR	644363	CompoundStatement		19:40:313:313	644302	1					
ANR	644364	ExpressionStatement	buf -> sample_rates = ff_copy_int_list ( params -> sample_rates )	23:8:392:450	644302	0	True				
ANR	644365	AssignmentExpression	buf -> sample_rates = ff_copy_int_list ( params -> sample_rates )		644302	0		=			
ANR	644366	PtrMemberAccess	buf -> sample_rates		644302	0					
ANR	644367	Identifier	buf		644302	0					
ANR	644368	Identifier	sample_rates		644302	1					
ANR	644369	CallExpression	ff_copy_int_list ( params -> sample_rates )		644302	1					
ANR	644370	Callee	ff_copy_int_list		644302	0					
ANR	644371	Identifier	ff_copy_int_list		644302	0					
ANR	644372	ArgumentList	params -> sample_rates		644302	1					
ANR	644373	Argument	params -> sample_rates		644302	0					
ANR	644374	PtrMemberAccess	params -> sample_rates		644302	0					
ANR	644375	Identifier	params		644302	0					
ANR	644376	Identifier	sample_rates		644302	1					
ANR	644377	IfStatement	if ( ! buf -> sample_rates )		644302	1					
ANR	644378	Condition	! buf -> sample_rates	25:12:465:482	644302	0	True				
ANR	644379	UnaryOperationExpression	! buf -> sample_rates		644302	0					
ANR	644380	UnaryOperator	!		644302	0					
ANR	644381	PtrMemberAccess	buf -> sample_rates		644302	1					
ANR	644382	Identifier	buf		644302	0					
ANR	644383	Identifier	sample_rates		644302	1					
ANR	644384	ReturnStatement	return AVERROR ( ENOMEM ) ;	27:12:498:520	644302	1	True				
ANR	644385	CallExpression	AVERROR ( ENOMEM )		644302	0					
ANR	644386	Callee	AVERROR		644302	0					
ANR	644387	Identifier	AVERROR		644302	0					
ANR	644388	ArgumentList	ENOMEM		644302	1					
ANR	644389	Argument	ENOMEM		644302	0					
ANR	644390	Identifier	ENOMEM		644302	0					
ANR	644391	IfStatement	if ( params && ( params -> channel_layouts || params -> channel_counts ) )		644302	4					
ANR	644392	Condition	params && ( params -> channel_layouts || params -> channel_counts )	31:8:538:598	644302	0	True				
ANR	644393	AndExpression	params && ( params -> channel_layouts || params -> channel_counts )		644302	0		&&			
ANR	644394	Identifier	params		644302	0					
ANR	644395	OrExpression	params -> channel_layouts || params -> channel_counts		644302	1		||			
ANR	644396	PtrMemberAccess	params -> channel_layouts		644302	0					
ANR	644397	Identifier	params		644302	0					
ANR	644398	Identifier	channel_layouts		644302	1					
ANR	644399	PtrMemberAccess	params -> channel_counts		644302	1					
ANR	644400	Identifier	params		644302	0					
ANR	644401	Identifier	channel_counts		644302	1					
ANR	644402	CompoundStatement		29:71:533:533	644302	1					
ANR	644403	IfStatement	if ( params -> all_channel_counts )		644302	0					
ANR	644404	Condition	params -> all_channel_counts	33:12:616:641	644302	0	True				
ANR	644405	PtrMemberAccess	params -> all_channel_counts		644302	0					
ANR	644406	Identifier	params		644302	0					
ANR	644407	Identifier	all_channel_counts		644302	1					
ANR	644408	CompoundStatement		31:40:576:576	644302	1					
ANR	644409	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Conflicting all_channel_counts and list in parameters\\n"" )"	35:12:659:763	644302	0	True				
ANR	644410	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Conflicting all_channel_counts and list in parameters\\n"" )"		644302	0					
ANR	644411	Callee	av_log		644302	0					
ANR	644412	Identifier	av_log		644302	0					
ANR	644413	ArgumentList	ctx		644302	1					
ANR	644414	Argument	ctx		644302	0					
ANR	644415	Identifier	ctx		644302	0					
ANR	644416	Argument	AV_LOG_ERROR		644302	1					
ANR	644417	Identifier	AV_LOG_ERROR		644302	0					
ANR	644418	Argument	"""Conflicting all_channel_counts and list in parameters\\n"""		644302	2					
ANR	644419	PrimaryExpression	"""Conflicting all_channel_counts and list in parameters\\n"""		644302	0					
ANR	644420	ReturnStatement	return AVERROR ( EINVAL ) ;	39:12:778:800	644302	1	True				
ANR	644421	CallExpression	AVERROR ( EINVAL )		644302	0					
ANR	644422	Callee	AVERROR		644302	0					
ANR	644423	Identifier	AVERROR		644302	0					
ANR	644424	ArgumentList	EINVAL		644302	1					
ANR	644425	Argument	EINVAL		644302	0					
ANR	644426	Identifier	EINVAL		644302	0					
ANR	644427	ExpressionStatement	"buf -> channel_layouts = concat_channels_lists ( params -> channel_layouts , params -> channel_counts )"	43:8:822:969	644302	1	True				
ANR	644428	AssignmentExpression	"buf -> channel_layouts = concat_channels_lists ( params -> channel_layouts , params -> channel_counts )"		644302	0		=			
ANR	644429	PtrMemberAccess	buf -> channel_layouts		644302	0					
ANR	644430	Identifier	buf		644302	0					
ANR	644431	Identifier	channel_layouts		644302	1					
ANR	644432	CallExpression	"concat_channels_lists ( params -> channel_layouts , params -> channel_counts )"		644302	1					
ANR	644433	Callee	concat_channels_lists		644302	0					
ANR	644434	Identifier	concat_channels_lists		644302	0					
ANR	644435	ArgumentList	params -> channel_layouts		644302	1					
ANR	644436	Argument	params -> channel_layouts		644302	0					
ANR	644437	PtrMemberAccess	params -> channel_layouts		644302	0					
ANR	644438	Identifier	params		644302	0					
ANR	644439	Identifier	channel_layouts		644302	1					
ANR	644440	Argument	params -> channel_counts		644302	1					
ANR	644441	PtrMemberAccess	params -> channel_counts		644302	0					
ANR	644442	Identifier	params		644302	0					
ANR	644443	Identifier	channel_counts		644302	1					
ANR	644444	IfStatement	if ( ! buf -> channel_layouts )		644302	2					
ANR	644445	Condition	! buf -> channel_layouts	47:12:984:1004	644302	0	True				
ANR	644446	UnaryOperationExpression	! buf -> channel_layouts		644302	0					
ANR	644447	UnaryOperator	!		644302	0					
ANR	644448	PtrMemberAccess	buf -> channel_layouts		644302	1					
ANR	644449	Identifier	buf		644302	0					
ANR	644450	Identifier	channel_layouts		644302	1					
ANR	644451	ReturnStatement	return AVERROR ( ENOMEM ) ;	49:12:1020:1042	644302	1	True				
ANR	644452	CallExpression	AVERROR ( ENOMEM )		644302	0					
ANR	644453	Callee	AVERROR		644302	0					
ANR	644454	Identifier	AVERROR		644302	0					
ANR	644455	ArgumentList	ENOMEM		644302	1					
ANR	644456	Argument	ENOMEM		644302	0					
ANR	644457	Identifier	ENOMEM		644302	0					
ANR	644458	IfStatement	if ( params )		644302	5					
ANR	644459	Condition	params	53:8:1060:1065	644302	0	True				
ANR	644460	Identifier	params		644302	0					
ANR	644461	ExpressionStatement	buf -> all_channel_counts = params -> all_channel_counts	55:8:1077:1129	644302	1	True				
ANR	644462	AssignmentExpression	buf -> all_channel_counts = params -> all_channel_counts		644302	0		=			
ANR	644463	PtrMemberAccess	buf -> all_channel_counts		644302	0					
ANR	644464	Identifier	buf		644302	0					
ANR	644465	Identifier	all_channel_counts		644302	1					
ANR	644466	PtrMemberAccess	params -> all_channel_counts		644302	1					
ANR	644467	Identifier	params		644302	0					
ANR	644468	Identifier	all_channel_counts		644302	1					
ANR	644469	ReturnStatement	return common_init ( ctx ) ;	57:4:1136:1159	644302	6	True				
ANR	644470	CallExpression	common_init ( ctx )		644302	0					
ANR	644471	Callee	common_init		644302	0					
ANR	644472	Identifier	common_init		644302	0					
ANR	644473	ArgumentList	ctx		644302	1					
ANR	644474	Argument	ctx		644302	0					
ANR	644475	Identifier	ctx		644302	0					
ANR	644476	ReturnType	static av_cold int		644302	1					
ANR	644477	Identifier	asink_init		644302	2					
ANR	644478	ParameterList	"AVFilterContext * ctx , void * opaque"		644302	3					
ANR	644479	Parameter	AVFilterContext * ctx	1:30:30:49	644302	0	True				
ANR	644480	ParameterType	AVFilterContext *		644302	0					
ANR	644481	Identifier	ctx		644302	1					
ANR	644482	Parameter	void * opaque	1:52:52:63	644302	1	True				
ANR	644483	ParameterType	void *		644302	0					
ANR	644484	Identifier	opaque		644302	1					
ANR	644485	CFGEntryNode	ENTRY		644302		True				
ANR	644486	CFGExitNode	EXIT		644302		True				
ANR	644487	Symbol	ENOMEM		644302						
ANR	644488	Symbol	* buf		644302						
ANR	644489	Symbol	opaque		644302						
ANR	644490	Symbol	ff_copy_int_list		644302						
ANR	644491	Symbol	params -> sample_rates		644302						
ANR	644492	Symbol	AV_LOG_ERROR		644302						
ANR	644493	Symbol	common_init		644302						
ANR	644494	Symbol	ctx		644302						
ANR	644495	Symbol	params -> channel_layouts		644302						
ANR	644496	Symbol	buf -> sample_rates		644302						
ANR	644497	Symbol	buf -> all_channel_counts		644302						
ANR	644498	Symbol	ctx -> priv		644302						
ANR	644499	Symbol	params		644302						
ANR	644500	Symbol	* ctx		644302						
ANR	644501	Symbol	params -> channel_counts		644302						
ANR	644502	Symbol	buf -> channel_layouts		644302						
ANR	644503	Symbol	params -> all_channel_counts		644302						
ANR	644504	Symbol	EINVAL		644302						
ANR	644505	Symbol	buf		644302						
ANR	644506	Symbol	params -> sample_fmts		644302						
ANR	644507	Symbol	concat_channels_lists		644302						
ANR	644508	Symbol	buf -> sample_fmts		644302						
ANR	644509	Symbol	AVERROR		644302						
ANR	644510	Symbol	* params		644302						
