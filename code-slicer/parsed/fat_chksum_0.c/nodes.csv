command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3135119	File	/home/p4ultr4n/workplace/ReVeal/raw_code/fat_chksum_0.c								
ANR	3135120	Function	fat_chksum	1:0:0:309							
ANR	3135121	FunctionDef	fat_chksum (const direntry_t * entry)		3135120	0					
ANR	3135122	CompoundStatement		3:0:59:309	3135120	0					
ANR	3135123	IdentifierDeclStatement	uint8_t chksum = 0 ;	5:4:66:82	3135120	0	True				
ANR	3135124	IdentifierDecl	chksum = 0		3135120	0					
ANR	3135125	IdentifierDeclType	uint8_t		3135120	0					
ANR	3135126	Identifier	chksum		3135120	1					
ANR	3135127	AssignmentExpression	chksum = 0		3135120	2		=			
ANR	3135128	Identifier	chksum		3135120	0					
ANR	3135129	PrimaryExpression	0		3135120	1					
ANR	3135130	IdentifierDeclStatement	int i ;	7:4:89:94	3135120	1	True				
ANR	3135131	IdentifierDecl	i		3135120	0					
ANR	3135132	IdentifierDeclType	int		3135120	0					
ANR	3135133	Identifier	i		3135120	1					
ANR	3135134	ForStatement	for ( i = 0 ; i < 11 ; i ++ )		3135120	2					
ANR	3135135	ForInit	i = 0 ;	11:8:107:110	3135120	0	True				
ANR	3135136	AssignmentExpression	i = 0		3135120	0		=			
ANR	3135137	Identifier	i		3135120	0					
ANR	3135138	PrimaryExpression	0		3135120	1					
ANR	3135139	Condition	i < 11	11:12:111:114	3135120	1	True				
ANR	3135140	RelationalExpression	i < 11		3135120	0		<			
ANR	3135141	Identifier	i		3135120	0					
ANR	3135142	PrimaryExpression	11		3135120	1					
ANR	3135143	PostIncDecOperationExpression	i ++	11:17:116:118	3135120	2	True				
ANR	3135144	Identifier	i		3135120	0					
ANR	3135145	IncDec	++		3135120	1					
ANR	3135146	CompoundStatement		11:8:72:87	3135120	3					
ANR	3135147	IdentifierDeclStatement	unsigned char c ;	13:8:132:147	3135120	0	True				
ANR	3135148	IdentifierDecl	c		3135120	0					
ANR	3135149	IdentifierDeclType	unsigned char		3135120	0					
ANR	3135150	Identifier	c		3135120	1					
ANR	3135151	ExpressionStatement	c = ( i < 8 ) ? entry -> name [ i ] : entry -> extension [ i - 8 ]	17:8:160:212	3135120	1	True				
ANR	3135152	AssignmentExpression	c = ( i < 8 ) ? entry -> name [ i ] : entry -> extension [ i - 8 ]		3135120	0		=			
ANR	3135153	Identifier	c		3135120	0					
ANR	3135154	ConditionalExpression	( i < 8 ) ? entry -> name [ i ] : entry -> extension [ i - 8 ]		3135120	1					
ANR	3135155	Condition	i < 8		3135120	0					
ANR	3135156	RelationalExpression	i < 8		3135120	0		<			
ANR	3135157	Identifier	i		3135120	0					
ANR	3135158	PrimaryExpression	8		3135120	1					
ANR	3135159	ArrayIndexing	entry -> name [ i ]		3135120	1					
ANR	3135160	PtrMemberAccess	entry -> name		3135120	0					
ANR	3135161	Identifier	entry		3135120	0					
ANR	3135162	Identifier	name		3135120	1					
ANR	3135163	Identifier	i		3135120	1					
ANR	3135164	ArrayIndexing	entry -> extension [ i - 8 ]		3135120	2					
ANR	3135165	PtrMemberAccess	entry -> extension		3135120	0					
ANR	3135166	Identifier	entry		3135120	0					
ANR	3135167	Identifier	extension		3135120	1					
ANR	3135168	AdditiveExpression	i - 8		3135120	1		-			
ANR	3135169	Identifier	i		3135120	0					
ANR	3135170	PrimaryExpression	8		3135120	1					
ANR	3135171	ExpressionStatement	chksum = ( ( ( chksum & 0xfe ) >> 1 ) | ( ( chksum & 0x01 ) ? 0x80 : 0 ) ) + c	19:8:223:277	3135120	2	True				
ANR	3135172	AssignmentExpression	chksum = ( ( ( chksum & 0xfe ) >> 1 ) | ( ( chksum & 0x01 ) ? 0x80 : 0 ) ) + c		3135120	0		=			
ANR	3135173	Identifier	chksum		3135120	0					
ANR	3135174	AdditiveExpression	( ( ( chksum & 0xfe ) >> 1 ) | ( ( chksum & 0x01 ) ? 0x80 : 0 ) ) + c		3135120	1		+			
ANR	3135175	InclusiveOrExpression	( ( chksum & 0xfe ) >> 1 ) | ( ( chksum & 0x01 ) ? 0x80 : 0 )		3135120	0		|			
ANR	3135176	ShiftExpression	( chksum & 0xfe ) >> 1		3135120	0		>>			
ANR	3135177	BitAndExpression	chksum & 0xfe		3135120	0		&			
ANR	3135178	Identifier	chksum		3135120	0					
ANR	3135179	PrimaryExpression	0xfe		3135120	1					
ANR	3135180	PrimaryExpression	1		3135120	1					
ANR	3135181	ConditionalExpression	( chksum & 0x01 ) ? 0x80 : 0		3135120	1					
ANR	3135182	Condition	chksum & 0x01		3135120	0					
ANR	3135183	BitAndExpression	chksum & 0x01		3135120	0		&			
ANR	3135184	Identifier	chksum		3135120	0					
ANR	3135185	PrimaryExpression	0x01		3135120	1					
ANR	3135186	PrimaryExpression	0x80		3135120	1					
ANR	3135187	PrimaryExpression	0		3135120	2					
ANR	3135188	Identifier	c		3135120	1					
ANR	3135189	ReturnStatement	return chksum ;	25:4:293:306	3135120	3	True				
ANR	3135190	Identifier	chksum		3135120	0					
ANR	3135191	ReturnType	static inline uint8_t		3135120	1					
ANR	3135192	Identifier	fat_chksum		3135120	2					
ANR	3135193	ParameterList	const direntry_t * entry		3135120	3					
ANR	3135194	Parameter	const direntry_t * entry	1:33:33:55	3135120	0	True				
ANR	3135195	ParameterType	const direntry_t *		3135120	0					
ANR	3135196	Identifier	entry		3135120	1					
ANR	3135197	CFGEntryNode	ENTRY		3135120		True				
ANR	3135198	CFGExitNode	EXIT		3135120		True				
ANR	3135199	Symbol	entry		3135120						
ANR	3135200	Symbol	c		3135120						
ANR	3135201	Symbol	* i		3135120						
ANR	3135202	Symbol	* entry -> extension		3135120						
ANR	3135203	Symbol	* * entry		3135120						
ANR	3135204	Symbol	* entry -> name		3135120						
ANR	3135205	Symbol	i		3135120						
ANR	3135206	Symbol	entry -> extension		3135120						
ANR	3135207	Symbol	entry -> name		3135120						
ANR	3135208	Symbol	chksum		3135120						
ANR	3135209	Symbol	* entry		3135120						
