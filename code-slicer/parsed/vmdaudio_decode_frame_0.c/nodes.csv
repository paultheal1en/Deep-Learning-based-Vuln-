command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9159452	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdaudio_decode_frame_0.c								
ANR	9159453	Function	vmdaudio_decode_frame	1:0:0:1579							
ANR	9159454	FunctionDef	"vmdaudio_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		9159453	0					
ANR	9159455	CompoundStatement		7:0:170:1579	9159453	0					
ANR	9159456	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:177:209	9159453	0	True				
ANR	9159457	IdentifierDecl	* buf = avpkt -> data		9159453	0					
ANR	9159458	IdentifierDeclType	const uint8_t *		9159453	0					
ANR	9159459	Identifier	buf		9159453	1					
ANR	9159460	AssignmentExpression	* buf = avpkt -> data		9159453	2		=			
ANR	9159461	Identifier	buf		9159453	0					
ANR	9159462	PtrMemberAccess	avpkt -> data		9159453	1					
ANR	9159463	Identifier	avpkt		9159453	0					
ANR	9159464	Identifier	data		9159453	1					
ANR	9159465	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:216:242	9159453	1	True				
ANR	9159466	IdentifierDecl	buf_size = avpkt -> size		9159453	0					
ANR	9159467	IdentifierDeclType	int		9159453	0					
ANR	9159468	Identifier	buf_size		9159453	1					
ANR	9159469	AssignmentExpression	buf_size = avpkt -> size		9159453	2		=			
ANR	9159470	Identifier	buf_size		9159453	0					
ANR	9159471	PtrMemberAccess	avpkt -> size		9159453	1					
ANR	9159472	Identifier	avpkt		9159453	0					
ANR	9159473	Identifier	size		9159453	1					
ANR	9159474	IdentifierDeclStatement	VmdAudioContext * s = avctx -> priv_data ;	13:4:249:286	9159453	2	True				
ANR	9159475	IdentifierDecl	* s = avctx -> priv_data		9159453	0					
ANR	9159476	IdentifierDeclType	VmdAudioContext *		9159453	0					
ANR	9159477	Identifier	s		9159453	1					
ANR	9159478	AssignmentExpression	* s = avctx -> priv_data		9159453	2		=			
ANR	9159479	Identifier	s		9159453	0					
ANR	9159480	PtrMemberAccess	avctx -> priv_data		9159453	1					
ANR	9159481	Identifier	avctx		9159453	0					
ANR	9159482	Identifier	priv_data		9159453	1					
ANR	9159483	IdentifierDeclStatement	int block_type ;	15:4:293:307	9159453	3	True				
ANR	9159484	IdentifierDecl	block_type		9159453	0					
ANR	9159485	IdentifierDeclType	int		9159453	0					
ANR	9159486	Identifier	block_type		9159453	1					
ANR	9159487	IdentifierDeclStatement	unsigned char * output_samples = ( unsigned char * ) data ;	17:4:314:367	9159453	4	True				
ANR	9159488	IdentifierDecl	* output_samples = ( unsigned char * ) data		9159453	0					
ANR	9159489	IdentifierDeclType	unsigned char *		9159453	0					
ANR	9159490	Identifier	output_samples		9159453	1					
ANR	9159491	AssignmentExpression	* output_samples = ( unsigned char * ) data		9159453	2		=			
ANR	9159492	Identifier	output_samples		9159453	0					
ANR	9159493	CastExpression	( unsigned char * ) data		9159453	1					
ANR	9159494	CastTarget	unsigned char *		9159453	0					
ANR	9159495	Identifier	data		9159453	1					
ANR	9159496	IfStatement	if ( buf_size < 16 )		9159453	5					
ANR	9159497	Condition	buf_size < 16	21:8:380:392	9159453	0	True				
ANR	9159498	RelationalExpression	buf_size < 16		9159453	0		<			
ANR	9159499	Identifier	buf_size		9159453	0					
ANR	9159500	PrimaryExpression	16		9159453	1					
ANR	9159501	CompoundStatement		15:23:224:224	9159453	1					
ANR	9159502	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"	23:8:406:467	9159453	0	True				
ANR	9159503	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"		9159453	0					
ANR	9159504	Callee	av_log		9159453	0					
ANR	9159505	Identifier	av_log		9159453	0					
ANR	9159506	ArgumentList	avctx		9159453	1					
ANR	9159507	Argument	avctx		9159453	0					
ANR	9159508	Identifier	avctx		9159453	0					
ANR	9159509	Argument	AV_LOG_WARNING		9159453	1					
ANR	9159510	Identifier	AV_LOG_WARNING		9159453	0					
ANR	9159511	Argument	"""skipping small junk packet\\n"""		9159453	2					
ANR	9159512	PrimaryExpression	"""skipping small junk packet\\n"""		9159453	0					
ANR	9159513	ExpressionStatement	* data_size = 0	25:8:478:492	9159453	1	True				
ANR	9159514	AssignmentExpression	* data_size = 0		9159453	0		=			
ANR	9159515	UnaryOperationExpression	* data_size		9159453	0					
ANR	9159516	UnaryOperator	*		9159453	0					
ANR	9159517	Identifier	data_size		9159453	1					
ANR	9159518	PrimaryExpression	0		9159453	1					
ANR	9159519	ReturnStatement	return buf_size ;	27:8:503:518	9159453	2	True				
ANR	9159520	Identifier	buf_size		9159453	0					
ANR	9159521	ExpressionStatement	block_type = buf [ 6 ]	33:4:534:553	9159453	6	True				
ANR	9159522	AssignmentExpression	block_type = buf [ 6 ]		9159453	0		=			
ANR	9159523	Identifier	block_type		9159453	0					
ANR	9159524	ArrayIndexing	buf [ 6 ]		9159453	1					
ANR	9159525	Identifier	buf		9159453	0					
ANR	9159526	PrimaryExpression	6		9159453	1					
ANR	9159527	IfStatement	if ( block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE )		9159453	7					
ANR	9159528	Condition	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE	35:8:564:627	9159453	0	True				
ANR	9159529	OrExpression	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE		9159453	0		||			
ANR	9159530	RelationalExpression	block_type < BLOCK_TYPE_AUDIO		9159453	0		<			
ANR	9159531	Identifier	block_type		9159453	0					
ANR	9159532	Identifier	BLOCK_TYPE_AUDIO		9159453	1					
ANR	9159533	RelationalExpression	block_type > BLOCK_TYPE_SILENCE		9159453	1		>			
ANR	9159534	Identifier	block_type		9159453	0					
ANR	9159535	Identifier	BLOCK_TYPE_SILENCE		9159453	1					
ANR	9159536	CompoundStatement		29:74:459:459	9159453	1					
ANR	9159537	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"	37:8:641:708	9159453	0	True				
ANR	9159538	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"		9159453	0					
ANR	9159539	Callee	av_log		9159453	0					
ANR	9159540	Identifier	av_log		9159453	0					
ANR	9159541	ArgumentList	avctx		9159453	1					
ANR	9159542	Argument	avctx		9159453	0					
ANR	9159543	Identifier	avctx		9159453	0					
ANR	9159544	Argument	AV_LOG_ERROR		9159453	1					
ANR	9159545	Identifier	AV_LOG_ERROR		9159453	0					
ANR	9159546	Argument	"""unknown block type: %d\\n"""		9159453	2					
ANR	9159547	PrimaryExpression	"""unknown block type: %d\\n"""		9159453	0					
ANR	9159548	Argument	block_type		9159453	3					
ANR	9159549	Identifier	block_type		9159453	0					
ANR	9159550	ReturnStatement	return AVERROR ( EINVAL ) ;	39:8:719:741	9159453	1	True				
ANR	9159551	CallExpression	AVERROR ( EINVAL )		9159453	0					
ANR	9159552	Callee	AVERROR		9159453	0					
ANR	9159553	Identifier	AVERROR		9159453	0					
ANR	9159554	ArgumentList	EINVAL		9159453	1					
ANR	9159555	Argument	EINVAL		9159453	0					
ANR	9159556	Identifier	EINVAL		9159453	0					
ANR	9159557	ExpressionStatement	buf += 16	43:4:755:769	9159453	8	True				
ANR	9159558	AssignmentExpression	buf += 16		9159453	0		+=			
ANR	9159559	Identifier	buf		9159453	0					
ANR	9159560	PrimaryExpression	16		9159453	1					
ANR	9159561	ExpressionStatement	buf_size -= 16	45:4:776:790	9159453	9	True				
ANR	9159562	AssignmentExpression	buf_size -= 16		9159453	0		-=			
ANR	9159563	Identifier	buf_size		9159453	0					
ANR	9159564	PrimaryExpression	16		9159453	1					
ANR	9159565	IfStatement	if ( block_type == BLOCK_TYPE_AUDIO )		9159453	10					
ANR	9159566	Condition	block_type == BLOCK_TYPE_AUDIO	49:8:803:832	9159453	0	True				
ANR	9159567	EqualityExpression	block_type == BLOCK_TYPE_AUDIO		9159453	0		==			
ANR	9159568	Identifier	block_type		9159453	0					
ANR	9159569	Identifier	BLOCK_TYPE_AUDIO		9159453	1					
ANR	9159570	CompoundStatement		43:40:664:664	9159453	1					
ANR	9159571	ExpressionStatement	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , 0 , buf_size )"	53:8:886:954	9159453	0	True				
ANR	9159572	AssignmentExpression	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , 0 , buf_size )"		9159453	0		=			
ANR	9159573	UnaryOperationExpression	* data_size		9159453	0					
ANR	9159574	UnaryOperator	*		9159453	0					
ANR	9159575	Identifier	data_size		9159453	1					
ANR	9159576	CallExpression	"vmdaudio_loadsound ( s , output_samples , buf , 0 , buf_size )"		9159453	1					
ANR	9159577	Callee	vmdaudio_loadsound		9159453	0					
ANR	9159578	Identifier	vmdaudio_loadsound		9159453	0					
ANR	9159579	ArgumentList	s		9159453	1					
ANR	9159580	Argument	s		9159453	0					
ANR	9159581	Identifier	s		9159453	0					
ANR	9159582	Argument	output_samples		9159453	1					
ANR	9159583	Identifier	output_samples		9159453	0					
ANR	9159584	Argument	buf		9159453	2					
ANR	9159585	Identifier	buf		9159453	0					
ANR	9159586	Argument	0		9159453	3					
ANR	9159587	PrimaryExpression	0		9159453	0					
ANR	9159588	Argument	buf_size		9159453	4					
ANR	9159589	Identifier	buf_size		9159453	0					
ANR	9159590	ElseStatement	else		9159453	0					
ANR	9159591	IfStatement	if ( block_type == BLOCK_TYPE_INITIAL )		9159453	0					
ANR	9159592	Condition	block_type == BLOCK_TYPE_INITIAL	55:15:972:1003	9159453	0	True				
ANR	9159593	EqualityExpression	block_type == BLOCK_TYPE_INITIAL		9159453	0		==			
ANR	9159594	Identifier	block_type		9159453	0					
ANR	9159595	Identifier	BLOCK_TYPE_INITIAL		9159453	1					
ANR	9159596	CompoundStatement		55:8:946:984	9159453	1					
ANR	9159597	IdentifierDeclStatement	uint32_t flags = AV_RB32 ( buf ) ;	59:8:1077:1106	9159453	0	True				
ANR	9159598	IdentifierDecl	flags = AV_RB32 ( buf )		9159453	0					
ANR	9159599	IdentifierDeclType	uint32_t		9159453	0					
ANR	9159600	Identifier	flags		9159453	1					
ANR	9159601	AssignmentExpression	flags = AV_RB32 ( buf )		9159453	2		=			
ANR	9159602	Identifier	flags		9159453	0					
ANR	9159603	CallExpression	AV_RB32 ( buf )		9159453	1					
ANR	9159604	Callee	AV_RB32		9159453	0					
ANR	9159605	Identifier	AV_RB32		9159453	0					
ANR	9159606	ArgumentList	buf		9159453	1					
ANR	9159607	Argument	buf		9159453	0					
ANR	9159608	Identifier	buf		9159453	0					
ANR	9159609	IdentifierDeclStatement	int silent_chunks = av_popcount ( flags ) ;	61:8:1117:1155	9159453	1	True				
ANR	9159610	IdentifierDecl	silent_chunks = av_popcount ( flags )		9159453	0					
ANR	9159611	IdentifierDeclType	int		9159453	0					
ANR	9159612	Identifier	silent_chunks		9159453	1					
ANR	9159613	AssignmentExpression	silent_chunks = av_popcount ( flags )		9159453	2		=			
ANR	9159614	Identifier	silent_chunks		9159453	0					
ANR	9159615	CallExpression	av_popcount ( flags )		9159453	1					
ANR	9159616	Callee	av_popcount		9159453	0					
ANR	9159617	Identifier	av_popcount		9159453	0					
ANR	9159618	ArgumentList	flags		9159453	1					
ANR	9159619	Argument	flags		9159453	0					
ANR	9159620	Identifier	flags		9159453	0					
ANR	9159621	ExpressionStatement	buf += 4	63:8:1166:1179	9159453	2	True				
ANR	9159622	AssignmentExpression	buf += 4		9159453	0		+=			
ANR	9159623	Identifier	buf		9159453	0					
ANR	9159624	PrimaryExpression	4		9159453	1					
ANR	9159625	ExpressionStatement	buf_size -= 4	65:8:1190:1203	9159453	3	True				
ANR	9159626	AssignmentExpression	buf_size -= 4		9159453	0		-=			
ANR	9159627	Identifier	buf_size		9159453	0					
ANR	9159628	PrimaryExpression	4		9159453	1					
ANR	9159629	IfStatement	if ( * data_size < ( s -> block_align * silent_chunks + buf_size ) * 2 )		9159453	4					
ANR	9159630	Condition	* data_size < ( s -> block_align * silent_chunks + buf_size ) * 2	67:11:1217:1274	9159453	0	True				
ANR	9159631	RelationalExpression	* data_size < ( s -> block_align * silent_chunks + buf_size ) * 2		9159453	0		<			
ANR	9159632	UnaryOperationExpression	* data_size		9159453	0					
ANR	9159633	UnaryOperator	*		9159453	0					
ANR	9159634	Identifier	data_size		9159453	1					
ANR	9159635	MultiplicativeExpression	( s -> block_align * silent_chunks + buf_size ) * 2		9159453	1		*			
ANR	9159636	AdditiveExpression	s -> block_align * silent_chunks + buf_size		9159453	0		+			
ANR	9159637	MultiplicativeExpression	s -> block_align * silent_chunks		9159453	0		*			
ANR	9159638	PtrMemberAccess	s -> block_align		9159453	0					
ANR	9159639	Identifier	s		9159453	0					
ANR	9159640	Identifier	block_align		9159453	1					
ANR	9159641	Identifier	silent_chunks		9159453	1					
ANR	9159642	Identifier	buf_size		9159453	1					
ANR	9159643	PrimaryExpression	2		9159453	1					
ANR	9159644	ReturnStatement	return - 1 ;	69:12:1290:1299	9159453	1	True				
ANR	9159645	UnaryOperationExpression	- 1		9159453	0					
ANR	9159646	UnaryOperator	-		9159453	0					
ANR	9159647	PrimaryExpression	1		9159453	1					
ANR	9159648	ExpressionStatement	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"	71:8:1310:1390	9159453	5	True				
ANR	9159649	AssignmentExpression	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"		9159453	0		=			
ANR	9159650	UnaryOperationExpression	* data_size		9159453	0					
ANR	9159651	UnaryOperator	*		9159453	0					
ANR	9159652	Identifier	data_size		9159453	1					
ANR	9159653	CallExpression	"vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"		9159453	1					
ANR	9159654	Callee	vmdaudio_loadsound		9159453	0					
ANR	9159655	Identifier	vmdaudio_loadsound		9159453	0					
ANR	9159656	ArgumentList	s		9159453	1					
ANR	9159657	Argument	s		9159453	0					
ANR	9159658	Identifier	s		9159453	0					
ANR	9159659	Argument	output_samples		9159453	1					
ANR	9159660	Identifier	output_samples		9159453	0					
ANR	9159661	Argument	buf		9159453	2					
ANR	9159662	Identifier	buf		9159453	0					
ANR	9159663	Argument	silent_chunks		9159453	3					
ANR	9159664	Identifier	silent_chunks		9159453	0					
ANR	9159665	Argument	buf_size		9159453	4					
ANR	9159666	Identifier	buf_size		9159453	0					
ANR	9159667	ElseStatement	else		9159453	0					
ANR	9159668	IfStatement	if ( block_type == BLOCK_TYPE_SILENCE )		9159453	0					
ANR	9159669	Condition	block_type == BLOCK_TYPE_SILENCE	73:15:1408:1439	9159453	0	True				
ANR	9159670	EqualityExpression	block_type == BLOCK_TYPE_SILENCE		9159453	0		==			
ANR	9159671	Identifier	block_type		9159453	0					
ANR	9159672	Identifier	BLOCK_TYPE_SILENCE		9159453	1					
ANR	9159673	CompoundStatement		67:49:1271:1271	9159453	1					
ANR	9159674	ExpressionStatement	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , 1 , 0 )"	77:8:1481:1542	9159453	0	True				
ANR	9159675	AssignmentExpression	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , 1 , 0 )"		9159453	0		=			
ANR	9159676	UnaryOperationExpression	* data_size		9159453	0					
ANR	9159677	UnaryOperator	*		9159453	0					
ANR	9159678	Identifier	data_size		9159453	1					
ANR	9159679	CallExpression	"vmdaudio_loadsound ( s , output_samples , buf , 1 , 0 )"		9159453	1					
ANR	9159680	Callee	vmdaudio_loadsound		9159453	0					
ANR	9159681	Identifier	vmdaudio_loadsound		9159453	0					
ANR	9159682	ArgumentList	s		9159453	1					
ANR	9159683	Argument	s		9159453	0					
ANR	9159684	Identifier	s		9159453	0					
ANR	9159685	Argument	output_samples		9159453	1					
ANR	9159686	Identifier	output_samples		9159453	0					
ANR	9159687	Argument	buf		9159453	2					
ANR	9159688	Identifier	buf		9159453	0					
ANR	9159689	Argument	1		9159453	3					
ANR	9159690	PrimaryExpression	1		9159453	0					
ANR	9159691	Argument	0		9159453	4					
ANR	9159692	PrimaryExpression	0		9159453	0					
ANR	9159693	ReturnStatement	return avpkt -> size ;	83:4:1558:1576	9159453	11	True				
ANR	9159694	PtrMemberAccess	avpkt -> size		9159453	0					
ANR	9159695	Identifier	avpkt		9159453	0					
ANR	9159696	Identifier	size		9159453	1					
ANR	9159697	ReturnType	static int		9159453	1					
ANR	9159698	Identifier	vmdaudio_decode_frame		9159453	2					
ANR	9159699	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		9159453	3					
ANR	9159700	Parameter	AVCodecContext * avctx	1:33:33:53	9159453	0	True				
ANR	9159701	ParameterType	AVCodecContext *		9159453	0					
ANR	9159702	Identifier	avctx		9159453	1					
ANR	9159703	Parameter	void * data	3:33:90:99	9159453	1	True				
ANR	9159704	ParameterType	void *		9159453	0					
ANR	9159705	Identifier	data		9159453	1					
ANR	9159706	Parameter	int * data_size	3:45:102:115	9159453	2	True				
ANR	9159707	ParameterType	int *		9159453	0					
ANR	9159708	Identifier	data_size		9159453	1					
ANR	9159709	Parameter	AVPacket * avpkt	5:33:152:166	9159453	3	True				
ANR	9159710	ParameterType	AVPacket *		9159453	0					
ANR	9159711	Identifier	avpkt		9159453	1					
ANR	9159712	CFGEntryNode	ENTRY		9159453		True				
ANR	9159713	CFGExitNode	EXIT		9159453		True				
ANR	9159714	Symbol	block_type		9159453						
ANR	9159715	Symbol	data		9159453						
ANR	9159716	Symbol	flags		9159453						
ANR	9159717	Symbol	avpkt		9159453						
ANR	9159718	Symbol	* data_size		9159453						
ANR	9159719	Symbol	BLOCK_TYPE_AUDIO		9159453						
ANR	9159720	Symbol	AV_RB32		9159453						
ANR	9159721	Symbol	BLOCK_TYPE_SILENCE		9159453						
ANR	9159722	Symbol	avpkt -> size		9159453						
ANR	9159723	Symbol	avctx		9159453						
ANR	9159724	Symbol	data_size		9159453						
ANR	9159725	Symbol	* avpkt		9159453						
ANR	9159726	Symbol	* buf		9159453						
ANR	9159727	Symbol	AV_LOG_ERROR		9159453						
ANR	9159728	Symbol	buf_size		9159453						
ANR	9159729	Symbol	output_samples		9159453						
ANR	9159730	Symbol	avctx -> priv_data		9159453						
ANR	9159731	Symbol	av_popcount		9159453						
ANR	9159732	Symbol	EINVAL		9159453						
ANR	9159733	Symbol	buf		9159453						
ANR	9159734	Symbol	* avctx		9159453						
ANR	9159735	Symbol	s		9159453						
ANR	9159736	Symbol	BLOCK_TYPE_INITIAL		9159453						
ANR	9159737	Symbol	avpkt -> data		9159453						
ANR	9159738	Symbol	AVERROR		9159453						
ANR	9159739	Symbol	s -> block_align		9159453						
ANR	9159740	Symbol	AV_LOG_WARNING		9159453						
ANR	9159741	Symbol	silent_chunks		9159453						
ANR	9159742	Symbol	* s		9159453						
ANR	9159743	Symbol	vmdaudio_loadsound		9159453						
