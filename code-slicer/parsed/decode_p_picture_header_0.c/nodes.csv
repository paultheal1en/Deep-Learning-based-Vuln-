command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1988599	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_p_picture_header_0.c								
ANR	1988600	Function	decode_p_picture_header	1:0:0:2336							
ANR	1988601	FunctionDef	decode_p_picture_header (VC9Context * v)		1988600	0					
ANR	1988602	CompoundStatement		3:0:51:2336	1988600	0					
ANR	1988603	IdentifierDeclStatement	"int lowquant , pqindex ;"	7:4:114:135	1988600	0	True				
ANR	1988604	IdentifierDecl	lowquant		1988600	0					
ANR	1988605	IdentifierDeclType	int		1988600	0					
ANR	1988606	Identifier	lowquant		1988600	1					
ANR	1988607	IdentifierDecl	pqindex		1988600	1					
ANR	1988608	IdentifierDeclType	int		1988600	0					
ANR	1988609	Identifier	pqindex		1988600	1					
ANR	1988610	ExpressionStatement	"pqindex = get_bits ( & v -> gb , 5 )"	11:4:144:173	1988600	1	True				
ANR	1988611	AssignmentExpression	"pqindex = get_bits ( & v -> gb , 5 )"		1988600	0		=			
ANR	1988612	Identifier	pqindex		1988600	0					
ANR	1988613	CallExpression	"get_bits ( & v -> gb , 5 )"		1988600	1					
ANR	1988614	Callee	get_bits		1988600	0					
ANR	1988615	Identifier	get_bits		1988600	0					
ANR	1988616	ArgumentList	& v -> gb		1988600	1					
ANR	1988617	Argument	& v -> gb		1988600	0					
ANR	1988618	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988619	UnaryOperator	&		1988600	0					
ANR	1988620	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988621	Identifier	v		1988600	0					
ANR	1988622	Identifier	gb		1988600	1					
ANR	1988623	Argument	5		1988600	1					
ANR	1988624	PrimaryExpression	5		1988600	0					
ANR	1988625	IfStatement	if ( v -> quantizer_mode == QUANT_FRAME_IMPLICIT )		1988600	2					
ANR	1988626	Condition	v -> quantizer_mode == QUANT_FRAME_IMPLICIT	13:8:184:224	1988600	0	True				
ANR	1988627	EqualityExpression	v -> quantizer_mode == QUANT_FRAME_IMPLICIT		1988600	0		==			
ANR	1988628	PtrMemberAccess	v -> quantizer_mode		1988600	0					
ANR	1988629	Identifier	v		1988600	0					
ANR	1988630	Identifier	quantizer_mode		1988600	1					
ANR	1988631	Identifier	QUANT_FRAME_IMPLICIT		1988600	1					
ANR	1988632	ExpressionStatement	v -> pq = pquant_table [ 0 ] [ pqindex ]	15:8:236:268	1988600	1	True				
ANR	1988633	AssignmentExpression	v -> pq = pquant_table [ 0 ] [ pqindex ]		1988600	0		=			
ANR	1988634	PtrMemberAccess	v -> pq		1988600	0					
ANR	1988635	Identifier	v		1988600	0					
ANR	1988636	Identifier	pq		1988600	1					
ANR	1988637	ArrayIndexing	pquant_table [ 0 ] [ pqindex ]		1988600	1					
ANR	1988638	ArrayIndexing	pquant_table [ 0 ]		1988600	0					
ANR	1988639	Identifier	pquant_table		1988600	0					
ANR	1988640	PrimaryExpression	0		1988600	1					
ANR	1988641	Identifier	pqindex		1988600	1					
ANR	1988642	ElseStatement	else		1988600	0					
ANR	1988643	CompoundStatement		17:4:233:233	1988600	0					
ANR	1988644	ExpressionStatement	v -> pq = pquant_table [ v -> quantizer_mode - 1 ] [ pqindex ]	21:8:296:346	1988600	0	True				
ANR	1988645	AssignmentExpression	v -> pq = pquant_table [ v -> quantizer_mode - 1 ] [ pqindex ]		1988600	0		=			
ANR	1988646	PtrMemberAccess	v -> pq		1988600	0					
ANR	1988647	Identifier	v		1988600	0					
ANR	1988648	Identifier	pq		1988600	1					
ANR	1988649	ArrayIndexing	pquant_table [ v -> quantizer_mode - 1 ] [ pqindex ]		1988600	1					
ANR	1988650	ArrayIndexing	pquant_table [ v -> quantizer_mode - 1 ]		1988600	0					
ANR	1988651	Identifier	pquant_table		1988600	0					
ANR	1988652	AdditiveExpression	v -> quantizer_mode - 1		1988600	1		-			
ANR	1988653	PtrMemberAccess	v -> quantizer_mode		1988600	0					
ANR	1988654	Identifier	v		1988600	0					
ANR	1988655	Identifier	quantizer_mode		1988600	1					
ANR	1988656	PrimaryExpression	1		1988600	1					
ANR	1988657	Identifier	pqindex		1988600	1					
ANR	1988658	IfStatement	if ( pqindex < 9 )		1988600	3					
ANR	1988659	Condition	pqindex < 9	25:8:364:374	1988600	0	True				
ANR	1988660	RelationalExpression	pqindex < 9		1988600	0		<			
ANR	1988661	Identifier	pqindex		1988600	0					
ANR	1988662	PrimaryExpression	9		1988600	1					
ANR	1988663	ExpressionStatement	"v -> halfpq = get_bits ( & v -> gb , 1 )"	25:21:377:408	1988600	1	True				
ANR	1988664	AssignmentExpression	"v -> halfpq = get_bits ( & v -> gb , 1 )"		1988600	0		=			
ANR	1988665	PtrMemberAccess	v -> halfpq		1988600	0					
ANR	1988666	Identifier	v		1988600	0					
ANR	1988667	Identifier	halfpq		1988600	1					
ANR	1988668	CallExpression	"get_bits ( & v -> gb , 1 )"		1988600	1					
ANR	1988669	Callee	get_bits		1988600	0					
ANR	1988670	Identifier	get_bits		1988600	0					
ANR	1988671	ArgumentList	& v -> gb		1988600	1					
ANR	1988672	Argument	& v -> gb		1988600	0					
ANR	1988673	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988674	UnaryOperator	&		1988600	0					
ANR	1988675	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988676	Identifier	v		1988600	0					
ANR	1988677	Identifier	gb		1988600	1					
ANR	1988678	Argument	1		1988600	1					
ANR	1988679	PrimaryExpression	1		1988600	0					
ANR	1988680	IfStatement	if ( v -> quantizer_mode == QUANT_FRAME_EXPLICIT )		1988600	4					
ANR	1988681	Condition	v -> quantizer_mode == QUANT_FRAME_EXPLICIT	27:8:419:459	1988600	0	True				
ANR	1988682	EqualityExpression	v -> quantizer_mode == QUANT_FRAME_EXPLICIT		1988600	0		==			
ANR	1988683	PtrMemberAccess	v -> quantizer_mode		1988600	0					
ANR	1988684	Identifier	v		1988600	0					
ANR	1988685	Identifier	quantizer_mode		1988600	1					
ANR	1988686	Identifier	QUANT_FRAME_EXPLICIT		1988600	1					
ANR	1988687	ExpressionStatement	"v -> pquantizer = get_bits ( & v -> gb , 1 )"	29:8:471:506	1988600	1	True				
ANR	1988688	AssignmentExpression	"v -> pquantizer = get_bits ( & v -> gb , 1 )"		1988600	0		=			
ANR	1988689	PtrMemberAccess	v -> pquantizer		1988600	0					
ANR	1988690	Identifier	v		1988600	0					
ANR	1988691	Identifier	pquantizer		1988600	1					
ANR	1988692	CallExpression	"get_bits ( & v -> gb , 1 )"		1988600	1					
ANR	1988693	Callee	get_bits		1988600	0					
ANR	1988694	Identifier	get_bits		1988600	0					
ANR	1988695	ArgumentList	& v -> gb		1988600	1					
ANR	1988696	Argument	& v -> gb		1988600	0					
ANR	1988697	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988698	UnaryOperator	&		1988600	0					
ANR	1988699	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988700	Identifier	v		1988600	0					
ANR	1988701	Identifier	gb		1988600	1					
ANR	1988702	Argument	1		1988600	1					
ANR	1988703	PrimaryExpression	1		1988600	0					
ANR	1988704	ExpressionStatement	"av_log ( v -> avctx , AV_LOG_DEBUG , ""P Frame: QP=%i (+%i/2)\\n"" , v -> pq , v -> halfpq )"	31:4:513:601	1988600	5	True				
ANR	1988705	CallExpression	"av_log ( v -> avctx , AV_LOG_DEBUG , ""P Frame: QP=%i (+%i/2)\\n"" , v -> pq , v -> halfpq )"		1988600	0					
ANR	1988706	Callee	av_log		1988600	0					
ANR	1988707	Identifier	av_log		1988600	0					
ANR	1988708	ArgumentList	v -> avctx		1988600	1					
ANR	1988709	Argument	v -> avctx		1988600	0					
ANR	1988710	PtrMemberAccess	v -> avctx		1988600	0					
ANR	1988711	Identifier	v		1988600	0					
ANR	1988712	Identifier	avctx		1988600	1					
ANR	1988713	Argument	AV_LOG_DEBUG		1988600	1					
ANR	1988714	Identifier	AV_LOG_DEBUG		1988600	0					
ANR	1988715	Argument	"""P Frame: QP=%i (+%i/2)\\n"""		1988600	2					
ANR	1988716	PrimaryExpression	"""P Frame: QP=%i (+%i/2)\\n"""		1988600	0					
ANR	1988717	Argument	v -> pq		1988600	3					
ANR	1988718	PtrMemberAccess	v -> pq		1988600	0					
ANR	1988719	Identifier	v		1988600	0					
ANR	1988720	Identifier	pq		1988600	1					
ANR	1988721	Argument	v -> halfpq		1988600	4					
ANR	1988722	PtrMemberAccess	v -> halfpq		1988600	0					
ANR	1988723	Identifier	v		1988600	0					
ANR	1988724	Identifier	halfpq		1988600	1					
ANR	1988725	IfStatement	if ( v -> extended_mv == 1 )		1988600	6					
ANR	1988726	Condition	v -> extended_mv == 1	35:8:612:630	1988600	0	True				
ANR	1988727	EqualityExpression	v -> extended_mv == 1		1988600	0		==			
ANR	1988728	PtrMemberAccess	v -> extended_mv		1988600	0					
ANR	1988729	Identifier	v		1988600	0					
ANR	1988730	Identifier	extended_mv		1988600	1					
ANR	1988731	PrimaryExpression	1		1988600	1					
ANR	1988732	ExpressionStatement	"v -> mvrange = get_prefix ( & v -> gb , 0 , 3 )"	35:29:633:670	1988600	1	True				
ANR	1988733	AssignmentExpression	"v -> mvrange = get_prefix ( & v -> gb , 0 , 3 )"		1988600	0		=			
ANR	1988734	PtrMemberAccess	v -> mvrange		1988600	0					
ANR	1988735	Identifier	v		1988600	0					
ANR	1988736	Identifier	mvrange		1988600	1					
ANR	1988737	CallExpression	"get_prefix ( & v -> gb , 0 , 3 )"		1988600	1					
ANR	1988738	Callee	get_prefix		1988600	0					
ANR	1988739	Identifier	get_prefix		1988600	0					
ANR	1988740	ArgumentList	& v -> gb		1988600	1					
ANR	1988741	Argument	& v -> gb		1988600	0					
ANR	1988742	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988743	UnaryOperator	&		1988600	0					
ANR	1988744	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988745	Identifier	v		1988600	0					
ANR	1988746	Identifier	gb		1988600	1					
ANR	1988747	Argument	0		1988600	1					
ANR	1988748	PrimaryExpression	0		1988600	0					
ANR	1988749	Argument	3		1988600	2					
ANR	1988750	PrimaryExpression	3		1988600	0					
ANR	1988751	IfStatement	if ( v -> profile > PROFILE_MAIN )		1988600	7					
ANR	1988752	Condition	v -> profile > PROFILE_MAIN	39:8:707:731	1988600	0	True				
ANR	1988753	RelationalExpression	v -> profile > PROFILE_MAIN		1988600	0		>			
ANR	1988754	PtrMemberAccess	v -> profile		1988600	0					
ANR	1988755	Identifier	v		1988600	0					
ANR	1988756	Identifier	profile		1988600	1					
ANR	1988757	Identifier	PROFILE_MAIN		1988600	1					
ANR	1988758	CompoundStatement		39:4:687:687	1988600	1					
ANR	1988759	IfStatement	if ( v -> postprocflag )		1988600	0					
ANR	1988760	Condition	v -> postprocflag	43:12:754:768	1988600	0	True				
ANR	1988761	PtrMemberAccess	v -> postprocflag		1988600	0					
ANR	1988762	Identifier	v		1988600	0					
ANR	1988763	Identifier	postprocflag		1988600	1					
ANR	1988764	ExpressionStatement	"v -> postproc = get_bits ( & v -> gb , 1 )"	43:29:771:804	1988600	1	True				
ANR	1988765	AssignmentExpression	"v -> postproc = get_bits ( & v -> gb , 1 )"		1988600	0		=			
ANR	1988766	PtrMemberAccess	v -> postproc		1988600	0					
ANR	1988767	Identifier	v		1988600	0					
ANR	1988768	Identifier	postproc		1988600	1					
ANR	1988769	CallExpression	"get_bits ( & v -> gb , 1 )"		1988600	1					
ANR	1988770	Callee	get_bits		1988600	0					
ANR	1988771	Identifier	get_bits		1988600	0					
ANR	1988772	ArgumentList	& v -> gb		1988600	1					
ANR	1988773	Argument	& v -> gb		1988600	0					
ANR	1988774	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988775	UnaryOperator	&		1988600	0					
ANR	1988776	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988777	Identifier	v		1988600	0					
ANR	1988778	Identifier	gb		1988600	1					
ANR	1988779	Argument	1		1988600	1					
ANR	1988780	PrimaryExpression	1		1988600	0					
ANR	1988781	ElseStatement	else		1988600	0					
ANR	1988782	IfStatement	if ( v -> multires )		1988600	0					
ANR	1988783	Condition	v -> multires	51:12:844:854	1988600	0	True				
ANR	1988784	PtrMemberAccess	v -> multires		1988600	0					
ANR	1988785	Identifier	v		1988600	0					
ANR	1988786	Identifier	multires		1988600	1					
ANR	1988787	ExpressionStatement	"v -> respic = get_bits ( & v -> gb , 2 )"	51:25:857:888	1988600	1	True				
ANR	1988788	AssignmentExpression	"v -> respic = get_bits ( & v -> gb , 2 )"		1988600	0		=			
ANR	1988789	PtrMemberAccess	v -> respic		1988600	0					
ANR	1988790	Identifier	v		1988600	0					
ANR	1988791	Identifier	respic		1988600	1					
ANR	1988792	CallExpression	"get_bits ( & v -> gb , 2 )"		1988600	1					
ANR	1988793	Callee	get_bits		1988600	0					
ANR	1988794	Identifier	get_bits		1988600	0					
ANR	1988795	ArgumentList	& v -> gb		1988600	1					
ANR	1988796	Argument	& v -> gb		1988600	0					
ANR	1988797	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988798	UnaryOperator	&		1988600	0					
ANR	1988799	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988800	Identifier	v		1988600	0					
ANR	1988801	Identifier	gb		1988600	1					
ANR	1988802	Argument	2		1988600	1					
ANR	1988803	PrimaryExpression	2		1988600	0					
ANR	1988804	ExpressionStatement	lowquant = ( v -> pquantizer > 12 ) ? 0 : 1	53:4:895:932	1988600	8	True				
ANR	1988805	AssignmentExpression	lowquant = ( v -> pquantizer > 12 ) ? 0 : 1		1988600	0		=			
ANR	1988806	Identifier	lowquant		1988600	0					
ANR	1988807	ConditionalExpression	( v -> pquantizer > 12 ) ? 0 : 1		1988600	1					
ANR	1988808	Condition	v -> pquantizer > 12		1988600	0					
ANR	1988809	RelationalExpression	v -> pquantizer > 12		1988600	0		>			
ANR	1988810	PtrMemberAccess	v -> pquantizer		1988600	0					
ANR	1988811	Identifier	v		1988600	0					
ANR	1988812	Identifier	pquantizer		1988600	1					
ANR	1988813	PrimaryExpression	12		1988600	1					
ANR	1988814	PrimaryExpression	0		1988600	1					
ANR	1988815	PrimaryExpression	1		1988600	2					
ANR	1988816	ExpressionStatement	"v -> mv_mode = mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 4 ) ]"	55:4:939:1002	1988600	9	True				
ANR	1988817	AssignmentExpression	"v -> mv_mode = mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 4 ) ]"		1988600	0		=			
ANR	1988818	PtrMemberAccess	v -> mv_mode		1988600	0					
ANR	1988819	Identifier	v		1988600	0					
ANR	1988820	Identifier	mv_mode		1988600	1					
ANR	1988821	ArrayIndexing	"mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 4 ) ]"		1988600	1					
ANR	1988822	ArrayIndexing	mv_pmode_table [ lowquant ]		1988600	0					
ANR	1988823	Identifier	mv_pmode_table		1988600	0					
ANR	1988824	Identifier	lowquant		1988600	1					
ANR	1988825	CallExpression	"get_prefix ( & v -> gb , 1 , 4 )"		1988600	1					
ANR	1988826	Callee	get_prefix		1988600	0					
ANR	1988827	Identifier	get_prefix		1988600	0					
ANR	1988828	ArgumentList	& v -> gb		1988600	1					
ANR	1988829	Argument	& v -> gb		1988600	0					
ANR	1988830	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988831	UnaryOperator	&		1988600	0					
ANR	1988832	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988833	Identifier	v		1988600	0					
ANR	1988834	Identifier	gb		1988600	1					
ANR	1988835	Argument	1		1988600	1					
ANR	1988836	PrimaryExpression	1		1988600	0					
ANR	1988837	Argument	4		1988600	2					
ANR	1988838	PrimaryExpression	4		1988600	0					
ANR	1988839	IfStatement	if ( v -> mv_mode == MV_PMODE_INTENSITY_COMP )		1988600	10					
ANR	1988840	Condition	v -> mv_mode == MV_PMODE_INTENSITY_COMP	57:8:1013:1049	1988600	0	True				
ANR	1988841	EqualityExpression	v -> mv_mode == MV_PMODE_INTENSITY_COMP		1988600	0		==			
ANR	1988842	PtrMemberAccess	v -> mv_mode		1988600	0					
ANR	1988843	Identifier	v		1988600	0					
ANR	1988844	Identifier	mv_mode		1988600	1					
ANR	1988845	Identifier	MV_PMODE_INTENSITY_COMP		1988600	1					
ANR	1988846	CompoundStatement		57:4:1005:1005	1988600	1					
ANR	1988847	ExpressionStatement	"v -> mv_mode2 = mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 3 ) ]"	61:8:1068:1132	1988600	0	True				
ANR	1988848	AssignmentExpression	"v -> mv_mode2 = mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 3 ) ]"		1988600	0		=			
ANR	1988849	PtrMemberAccess	v -> mv_mode2		1988600	0					
ANR	1988850	Identifier	v		1988600	0					
ANR	1988851	Identifier	mv_mode2		1988600	1					
ANR	1988852	ArrayIndexing	"mv_pmode_table [ lowquant ] [ get_prefix ( & v -> gb , 1 , 3 ) ]"		1988600	1					
ANR	1988853	ArrayIndexing	mv_pmode_table [ lowquant ]		1988600	0					
ANR	1988854	Identifier	mv_pmode_table		1988600	0					
ANR	1988855	Identifier	lowquant		1988600	1					
ANR	1988856	CallExpression	"get_prefix ( & v -> gb , 1 , 3 )"		1988600	1					
ANR	1988857	Callee	get_prefix		1988600	0					
ANR	1988858	Identifier	get_prefix		1988600	0					
ANR	1988859	ArgumentList	& v -> gb		1988600	1					
ANR	1988860	Argument	& v -> gb		1988600	0					
ANR	1988861	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988862	UnaryOperator	&		1988600	0					
ANR	1988863	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988864	Identifier	v		1988600	0					
ANR	1988865	Identifier	gb		1988600	1					
ANR	1988866	Argument	1		1988600	1					
ANR	1988867	PrimaryExpression	1		1988600	0					
ANR	1988868	Argument	3		1988600	2					
ANR	1988869	PrimaryExpression	3		1988600	0					
ANR	1988870	ExpressionStatement	"v -> lumscale = get_bits ( & v -> gb , 6 )"	63:8:1143:1176	1988600	1	True				
ANR	1988871	AssignmentExpression	"v -> lumscale = get_bits ( & v -> gb , 6 )"		1988600	0		=			
ANR	1988872	PtrMemberAccess	v -> lumscale		1988600	0					
ANR	1988873	Identifier	v		1988600	0					
ANR	1988874	Identifier	lumscale		1988600	1					
ANR	1988875	CallExpression	"get_bits ( & v -> gb , 6 )"		1988600	1					
ANR	1988876	Callee	get_bits		1988600	0					
ANR	1988877	Identifier	get_bits		1988600	0					
ANR	1988878	ArgumentList	& v -> gb		1988600	1					
ANR	1988879	Argument	& v -> gb		1988600	0					
ANR	1988880	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988881	UnaryOperator	&		1988600	0					
ANR	1988882	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988883	Identifier	v		1988600	0					
ANR	1988884	Identifier	gb		1988600	1					
ANR	1988885	Argument	6		1988600	1					
ANR	1988886	PrimaryExpression	6		1988600	0					
ANR	1988887	ExpressionStatement	"v -> lumshift = get_bits ( & v -> gb , 6 )"	65:8:1187:1220	1988600	2	True				
ANR	1988888	AssignmentExpression	"v -> lumshift = get_bits ( & v -> gb , 6 )"		1988600	0		=			
ANR	1988889	PtrMemberAccess	v -> lumshift		1988600	0					
ANR	1988890	Identifier	v		1988600	0					
ANR	1988891	Identifier	lumshift		1988600	1					
ANR	1988892	CallExpression	"get_bits ( & v -> gb , 6 )"		1988600	1					
ANR	1988893	Callee	get_bits		1988600	0					
ANR	1988894	Identifier	get_bits		1988600	0					
ANR	1988895	ArgumentList	& v -> gb		1988600	1					
ANR	1988896	Argument	& v -> gb		1988600	0					
ANR	1988897	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988898	UnaryOperator	&		1988600	0					
ANR	1988899	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988900	Identifier	v		1988600	0					
ANR	1988901	Identifier	gb		1988600	1					
ANR	1988902	Argument	6		1988600	1					
ANR	1988903	PrimaryExpression	6		1988600	0					
ANR	1988904	IfStatement	if ( ( v -> mv_mode == MV_PMODE_INTENSITY_COMP && v -> mv_mode2 == MV_PMODE_MIXED_MV ) || v -> mv_mode == MV_PMODE_MIXED_MV )		1988600	11					
ANR	1988905	Condition	( v -> mv_mode == MV_PMODE_INTENSITY_COMP && v -> mv_mode2 == MV_PMODE_MIXED_MV ) || v -> mv_mode == MV_PMODE_MIXED_MV	71:8:1240:1368	1988600	0	True				
ANR	1988906	OrExpression	( v -> mv_mode == MV_PMODE_INTENSITY_COMP && v -> mv_mode2 == MV_PMODE_MIXED_MV ) || v -> mv_mode == MV_PMODE_MIXED_MV		1988600	0		||			
ANR	1988907	AndExpression	v -> mv_mode == MV_PMODE_INTENSITY_COMP && v -> mv_mode2 == MV_PMODE_MIXED_MV		1988600	0		&&			
ANR	1988908	EqualityExpression	v -> mv_mode == MV_PMODE_INTENSITY_COMP		1988600	0		==			
ANR	1988909	PtrMemberAccess	v -> mv_mode		1988600	0					
ANR	1988910	Identifier	v		1988600	0					
ANR	1988911	Identifier	mv_mode		1988600	1					
ANR	1988912	Identifier	MV_PMODE_INTENSITY_COMP		1988600	1					
ANR	1988913	EqualityExpression	v -> mv_mode2 == MV_PMODE_MIXED_MV		1988600	1		==			
ANR	1988914	PtrMemberAccess	v -> mv_mode2		1988600	0					
ANR	1988915	Identifier	v		1988600	0					
ANR	1988916	Identifier	mv_mode2		1988600	1					
ANR	1988917	Identifier	MV_PMODE_MIXED_MV		1988600	1					
ANR	1988918	EqualityExpression	v -> mv_mode == MV_PMODE_MIXED_MV		1988600	1		==			
ANR	1988919	PtrMemberAccess	v -> mv_mode		1988600	0					
ANR	1988920	Identifier	v		1988600	0					
ANR	1988921	Identifier	mv_mode		1988600	1					
ANR	1988922	Identifier	MV_PMODE_MIXED_MV		1988600	1					
ANR	1988923	CompoundStatement		75:4:1324:1324	1988600	1					
ANR	1988924	IfStatement	"if ( bitplane_decoding ( v -> mv_type_mb_plane , v -> width_mb , v -> height_mb , v ) < 0 )"		1988600	0					
ANR	1988925	Condition	"bitplane_decoding ( v -> mv_type_mb_plane , v -> width_mb , v -> height_mb , v ) < 0"	79:12:1391:1497	1988600	0	True				
ANR	1988926	RelationalExpression	"bitplane_decoding ( v -> mv_type_mb_plane , v -> width_mb , v -> height_mb , v ) < 0"		1988600	0		<			
ANR	1988927	CallExpression	"bitplane_decoding ( v -> mv_type_mb_plane , v -> width_mb , v -> height_mb , v )"		1988600	0					
ANR	1988928	Callee	bitplane_decoding		1988600	0					
ANR	1988929	Identifier	bitplane_decoding		1988600	0					
ANR	1988930	ArgumentList	v -> mv_type_mb_plane		1988600	1					
ANR	1988931	Argument	v -> mv_type_mb_plane		1988600	0					
ANR	1988932	PtrMemberAccess	v -> mv_type_mb_plane		1988600	0					
ANR	1988933	Identifier	v		1988600	0					
ANR	1988934	Identifier	mv_type_mb_plane		1988600	1					
ANR	1988935	Argument	v -> width_mb		1988600	1					
ANR	1988936	PtrMemberAccess	v -> width_mb		1988600	0					
ANR	1988937	Identifier	v		1988600	0					
ANR	1988938	Identifier	width_mb		1988600	1					
ANR	1988939	Argument	v -> height_mb		1988600	2					
ANR	1988940	PtrMemberAccess	v -> height_mb		1988600	0					
ANR	1988941	Identifier	v		1988600	0					
ANR	1988942	Identifier	height_mb		1988600	1					
ANR	1988943	Argument	v		1988600	3					
ANR	1988944	Identifier	v		1988600	0					
ANR	1988945	PrimaryExpression	0		1988600	1					
ANR	1988946	ReturnStatement	return - 1 ;	83:12:1513:1522	1988600	1	True				
ANR	1988947	UnaryOperationExpression	- 1		1988600	0					
ANR	1988948	UnaryOperator	-		1988600	0					
ANR	1988949	PrimaryExpression	1		1988600	1					
ANR	1988950	IfStatement	"if ( bitplane_decoding ( v -> skip_mb_plane , v -> width_mb , v -> height_mb , v ) < 0 )"		1988600	12					
ANR	1988951	Condition	"bitplane_decoding ( v -> skip_mb_plane , v -> width_mb , v -> height_mb , v ) < 0"	89:8:1542:1641	1988600	0	True				
ANR	1988952	RelationalExpression	"bitplane_decoding ( v -> skip_mb_plane , v -> width_mb , v -> height_mb , v ) < 0"		1988600	0		<			
ANR	1988953	CallExpression	"bitplane_decoding ( v -> skip_mb_plane , v -> width_mb , v -> height_mb , v )"		1988600	0					
ANR	1988954	Callee	bitplane_decoding		1988600	0					
ANR	1988955	Identifier	bitplane_decoding		1988600	0					
ANR	1988956	ArgumentList	v -> skip_mb_plane		1988600	1					
ANR	1988957	Argument	v -> skip_mb_plane		1988600	0					
ANR	1988958	PtrMemberAccess	v -> skip_mb_plane		1988600	0					
ANR	1988959	Identifier	v		1988600	0					
ANR	1988960	Identifier	skip_mb_plane		1988600	1					
ANR	1988961	Argument	v -> width_mb		1988600	1					
ANR	1988962	PtrMemberAccess	v -> width_mb		1988600	0					
ANR	1988963	Identifier	v		1988600	0					
ANR	1988964	Identifier	width_mb		1988600	1					
ANR	1988965	Argument	v -> height_mb		1988600	2					
ANR	1988966	PtrMemberAccess	v -> height_mb		1988600	0					
ANR	1988967	Identifier	v		1988600	0					
ANR	1988968	Identifier	height_mb		1988600	1					
ANR	1988969	Argument	v		1988600	3					
ANR	1988970	Identifier	v		1988600	0					
ANR	1988971	PrimaryExpression	0		1988600	1					
ANR	1988972	ReturnStatement	return - 1 ;	93:8:1653:1662	1988600	1	True				
ANR	1988973	UnaryOperationExpression	- 1		1988600	0					
ANR	1988974	UnaryOperator	-		1988600	0					
ANR	1988975	PrimaryExpression	1		1988600	1					
ANR	1988976	ExpressionStatement	"v -> mv_diff_vlc = & vc9_mv_diff_vlc [ get_bits ( & v -> gb , 2 ) ]"	99:4:1721:1775	1988600	13	True				
ANR	1988977	AssignmentExpression	"v -> mv_diff_vlc = & vc9_mv_diff_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	0		=			
ANR	1988978	PtrMemberAccess	v -> mv_diff_vlc		1988600	0					
ANR	1988979	Identifier	v		1988600	0					
ANR	1988980	Identifier	mv_diff_vlc		1988600	1					
ANR	1988981	UnaryOperationExpression	"& vc9_mv_diff_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	1					
ANR	1988982	UnaryOperator	&		1988600	0					
ANR	1988983	ArrayIndexing	"vc9_mv_diff_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	1					
ANR	1988984	Identifier	vc9_mv_diff_vlc		1988600	0					
ANR	1988985	CallExpression	"get_bits ( & v -> gb , 2 )"		1988600	1					
ANR	1988986	Callee	get_bits		1988600	0					
ANR	1988987	Identifier	get_bits		1988600	0					
ANR	1988988	ArgumentList	& v -> gb		1988600	1					
ANR	1988989	Argument	& v -> gb		1988600	0					
ANR	1988990	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1988991	UnaryOperator	&		1988600	0					
ANR	1988992	PtrMemberAccess	v -> gb		1988600	1					
ANR	1988993	Identifier	v		1988600	0					
ANR	1988994	Identifier	gb		1988600	1					
ANR	1988995	Argument	2		1988600	1					
ANR	1988996	PrimaryExpression	2		1988600	0					
ANR	1988997	ExpressionStatement	"v -> cbpcy_vlc = & vc9_cbpcy_p_vlc [ get_bits ( & v -> gb , 2 ) ]"	101:4:1782:1834	1988600	14	True				
ANR	1988998	AssignmentExpression	"v -> cbpcy_vlc = & vc9_cbpcy_p_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	0		=			
ANR	1988999	PtrMemberAccess	v -> cbpcy_vlc		1988600	0					
ANR	1989000	Identifier	v		1988600	0					
ANR	1989001	Identifier	cbpcy_vlc		1988600	1					
ANR	1989002	UnaryOperationExpression	"& vc9_cbpcy_p_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	1					
ANR	1989003	UnaryOperator	&		1988600	0					
ANR	1989004	ArrayIndexing	"vc9_cbpcy_p_vlc [ get_bits ( & v -> gb , 2 ) ]"		1988600	1					
ANR	1989005	Identifier	vc9_cbpcy_p_vlc		1988600	0					
ANR	1989006	CallExpression	"get_bits ( & v -> gb , 2 )"		1988600	1					
ANR	1989007	Callee	get_bits		1988600	0					
ANR	1989008	Identifier	get_bits		1988600	0					
ANR	1989009	ArgumentList	& v -> gb		1988600	1					
ANR	1989010	Argument	& v -> gb		1988600	0					
ANR	1989011	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1989012	UnaryOperator	&		1988600	0					
ANR	1989013	PtrMemberAccess	v -> gb		1988600	1					
ANR	1989014	Identifier	v		1988600	0					
ANR	1989015	Identifier	gb		1988600	1					
ANR	1989016	Argument	2		1988600	1					
ANR	1989017	PrimaryExpression	2		1988600	0					
ANR	1989018	IfStatement	if ( v -> dquant )		1988600	15					
ANR	1989019	Condition	v -> dquant	105:8:1847:1855	1988600	0	True				
ANR	1989020	PtrMemberAccess	v -> dquant		1988600	0					
ANR	1989021	Identifier	v		1988600	0					
ANR	1989022	Identifier	dquant		1988600	1					
ANR	1989023	CompoundStatement		105:4:1811:1811	1988600	1					
ANR	1989024	ExpressionStatement	"av_log ( v -> avctx , AV_LOG_INFO , ""VOP DQuant info\\n"" )"	109:8:1874:1924	1988600	0	True				
ANR	1989025	CallExpression	"av_log ( v -> avctx , AV_LOG_INFO , ""VOP DQuant info\\n"" )"		1988600	0					
ANR	1989026	Callee	av_log		1988600	0					
ANR	1989027	Identifier	av_log		1988600	0					
ANR	1989028	ArgumentList	v -> avctx		1988600	1					
ANR	1989029	Argument	v -> avctx		1988600	0					
ANR	1989030	PtrMemberAccess	v -> avctx		1988600	0					
ANR	1989031	Identifier	v		1988600	0					
ANR	1989032	Identifier	avctx		1988600	1					
ANR	1989033	Argument	AV_LOG_INFO		1988600	1					
ANR	1989034	Identifier	AV_LOG_INFO		1988600	0					
ANR	1989035	Argument	"""VOP DQuant info\\n"""		1988600	2					
ANR	1989036	PrimaryExpression	"""VOP DQuant info\\n"""		1988600	0					
ANR	1989037	ExpressionStatement	vop_dquant_decoding ( v )	111:8:1935:1957	1988600	1	True				
ANR	1989038	CallExpression	vop_dquant_decoding ( v )		1988600	0					
ANR	1989039	Callee	vop_dquant_decoding		1988600	0					
ANR	1989040	Identifier	vop_dquant_decoding		1988600	0					
ANR	1989041	ArgumentList	v		1988600	1					
ANR	1989042	Argument	v		1988600	0					
ANR	1989043	Identifier	v		1988600	0					
ANR	1989044	IfStatement	if ( v -> vstransform )		1988600	16					
ANR	1989045	Condition	v -> vstransform	117:8:1977:1990	1988600	0	True				
ANR	1989046	PtrMemberAccess	v -> vstransform		1988600	0					
ANR	1989047	Identifier	v		1988600	0					
ANR	1989048	Identifier	vstransform		1988600	1					
ANR	1989049	CompoundStatement		117:4:1946:1946	1988600	1					
ANR	1989050	ExpressionStatement	"v -> ttmbf = get_bits ( & v -> gb , 1 )"	121:8:2009:2039	1988600	0	True				
ANR	1989051	AssignmentExpression	"v -> ttmbf = get_bits ( & v -> gb , 1 )"		1988600	0		=			
ANR	1989052	PtrMemberAccess	v -> ttmbf		1988600	0					
ANR	1989053	Identifier	v		1988600	0					
ANR	1989054	Identifier	ttmbf		1988600	1					
ANR	1989055	CallExpression	"get_bits ( & v -> gb , 1 )"		1988600	1					
ANR	1989056	Callee	get_bits		1988600	0					
ANR	1989057	Identifier	get_bits		1988600	0					
ANR	1989058	ArgumentList	& v -> gb		1988600	1					
ANR	1989059	Argument	& v -> gb		1988600	0					
ANR	1989060	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1989061	UnaryOperator	&		1988600	0					
ANR	1989062	PtrMemberAccess	v -> gb		1988600	1					
ANR	1989063	Identifier	v		1988600	0					
ANR	1989064	Identifier	gb		1988600	1					
ANR	1989065	Argument	1		1988600	1					
ANR	1989066	PrimaryExpression	1		1988600	0					
ANR	1989067	IfStatement	if ( v -> ttmbf )		1988600	1					
ANR	1989068	Condition	v -> ttmbf	123:12:2054:2061	1988600	0	True				
ANR	1989069	PtrMemberAccess	v -> ttmbf		1988600	0					
ANR	1989070	Identifier	v		1988600	0					
ANR	1989071	Identifier	ttmbf		1988600	1					
ANR	1989072	CompoundStatement		123:8:2021:2021	1988600	1					
ANR	1989073	ExpressionStatement	"v -> ttfrm = get_bits ( & v -> gb , 2 )"	127:12:2088:2118	1988600	0	True				
ANR	1989074	AssignmentExpression	"v -> ttfrm = get_bits ( & v -> gb , 2 )"		1988600	0		=			
ANR	1989075	PtrMemberAccess	v -> ttfrm		1988600	0					
ANR	1989076	Identifier	v		1988600	0					
ANR	1989077	Identifier	ttfrm		1988600	1					
ANR	1989078	CallExpression	"get_bits ( & v -> gb , 2 )"		1988600	1					
ANR	1989079	Callee	get_bits		1988600	0					
ANR	1989080	Identifier	get_bits		1988600	0					
ANR	1989081	ArgumentList	& v -> gb		1988600	1					
ANR	1989082	Argument	& v -> gb		1988600	0					
ANR	1989083	UnaryOperationExpression	& v -> gb		1988600	0					
ANR	1989084	UnaryOperator	&		1988600	0					
ANR	1989085	PtrMemberAccess	v -> gb		1988600	1					
ANR	1989086	Identifier	v		1988600	0					
ANR	1989087	Identifier	gb		1988600	1					
ANR	1989088	Argument	2		1988600	1					
ANR	1989089	PrimaryExpression	2		1988600	0					
ANR	1989090	ExpressionStatement	"av_log ( v -> avctx , AV_LOG_INFO , ""Transform used: %ix%i\\n"" , ( v -> ttfrm & 2 ) ? 4 : 8 , ( v -> ttfrm & 1 ) ? 4 : 8 )"	129:12:2133:2257	1988600	1	True				
ANR	1989091	CallExpression	"av_log ( v -> avctx , AV_LOG_INFO , ""Transform used: %ix%i\\n"" , ( v -> ttfrm & 2 ) ? 4 : 8 , ( v -> ttfrm & 1 ) ? 4 : 8 )"		1988600	0					
ANR	1989092	Callee	av_log		1988600	0					
ANR	1989093	Identifier	av_log		1988600	0					
ANR	1989094	ArgumentList	v -> avctx		1988600	1					
ANR	1989095	Argument	v -> avctx		1988600	0					
ANR	1989096	PtrMemberAccess	v -> avctx		1988600	0					
ANR	1989097	Identifier	v		1988600	0					
ANR	1989098	Identifier	avctx		1988600	1					
ANR	1989099	Argument	AV_LOG_INFO		1988600	1					
ANR	1989100	Identifier	AV_LOG_INFO		1988600	0					
ANR	1989101	Argument	"""Transform used: %ix%i\\n"""		1988600	2					
ANR	1989102	PrimaryExpression	"""Transform used: %ix%i\\n"""		1988600	0					
ANR	1989103	Argument	( v -> ttfrm & 2 ) ? 4 : 8		1988600	3					
ANR	1989104	ConditionalExpression	( v -> ttfrm & 2 ) ? 4 : 8		1988600	0					
ANR	1989105	Condition	v -> ttfrm & 2		1988600	0					
ANR	1989106	BitAndExpression	v -> ttfrm & 2		1988600	0		&			
ANR	1989107	PtrMemberAccess	v -> ttfrm		1988600	0					
ANR	1989108	Identifier	v		1988600	0					
ANR	1989109	Identifier	ttfrm		1988600	1					
ANR	1989110	PrimaryExpression	2		1988600	1					
ANR	1989111	PrimaryExpression	4		1988600	1					
ANR	1989112	PrimaryExpression	8		1988600	2					
ANR	1989113	Argument	( v -> ttfrm & 1 ) ? 4 : 8		1988600	4					
ANR	1989114	ConditionalExpression	( v -> ttfrm & 1 ) ? 4 : 8		1988600	0					
ANR	1989115	Condition	v -> ttfrm & 1		1988600	0					
ANR	1989116	BitAndExpression	v -> ttfrm & 1		1988600	0		&			
ANR	1989117	PtrMemberAccess	v -> ttfrm		1988600	0					
ANR	1989118	Identifier	v		1988600	0					
ANR	1989119	Identifier	ttfrm		1988600	1					
ANR	1989120	PrimaryExpression	1		1988600	1					
ANR	1989121	PrimaryExpression	4		1988600	1					
ANR	1989122	PrimaryExpression	8		1988600	2					
ANR	1989123	ReturnStatement	return 0 ;	139:4:2325:2333	1988600	17	True				
ANR	1989124	PrimaryExpression	0		1988600	0					
ANR	1989125	ReturnType	static int		1988600	1					
ANR	1989126	Identifier	decode_p_picture_header		1988600	2					
ANR	1989127	ParameterList	VC9Context * v		1988600	3					
ANR	1989128	Parameter	VC9Context * v	1:35:35:47	1988600	0	True				
ANR	1989129	ParameterType	VC9Context *		1988600	0					
ANR	1989130	Identifier	v		1988600	1					
ANR	1989131	CFGEntryNode	ENTRY		1988600		True				
ANR	1989132	CFGExitNode	EXIT		1988600		True				
ANR	1989133	Symbol	* v		1988600						
ANR	1989134	Symbol	v -> lumshift		1988600						
ANR	1989135	Symbol	v -> cbpcy_vlc		1988600						
ANR	1989136	Symbol	get_prefix		1988600						
ANR	1989137	Symbol	* get_prefix		1988600						
ANR	1989138	Symbol	get_bits		1988600						
ANR	1989139	Symbol	v -> dquant		1988600						
ANR	1989140	Symbol	pquant_table		1988600						
ANR	1989141	Symbol	v -> postproc		1988600						
ANR	1989142	Symbol	v -> profile		1988600						
ANR	1989143	Symbol	v -> extended_mv		1988600						
ANR	1989144	Symbol	* pqindex		1988600						
ANR	1989145	Symbol	& v -> gb		1988600						
ANR	1989146	Symbol	* * v -> quantizer_mode		1988600						
ANR	1989147	Symbol	AV_LOG_DEBUG		1988600						
ANR	1989148	Symbol	v -> mv_mode		1988600						
ANR	1989149	Symbol	vc9_mv_diff_vlc		1988600						
ANR	1989150	Symbol	vc9_cbpcy_p_vlc		1988600						
ANR	1989151	Symbol	* * * v		1988600						
ANR	1989152	Symbol	MV_PMODE_INTENSITY_COMP		1988600						
ANR	1989153	Symbol	v -> ttfrm		1988600						
ANR	1989154	Symbol	v -> multires		1988600						
ANR	1989155	Symbol	v -> respic		1988600						
ANR	1989156	Symbol	* pquant_table		1988600						
ANR	1989157	Symbol	QUANT_FRAME_EXPLICIT		1988600						
ANR	1989158	Symbol	mv_pmode_table		1988600						
ANR	1989159	Symbol	lowquant		1988600						
ANR	1989160	Symbol	AV_LOG_INFO		1988600						
ANR	1989161	Symbol	* * pquant_table		1988600						
ANR	1989162	Symbol	v -> height_mb		1988600						
ANR	1989163	Symbol	* * mv_pmode_table		1988600						
ANR	1989164	Symbol	* lowquant		1988600						
ANR	1989165	Symbol	v -> mv_mode2		1988600						
ANR	1989166	Symbol	v -> skip_mb_plane		1988600						
ANR	1989167	Symbol	v -> pquantizer		1988600						
ANR	1989168	Symbol	* mv_pmode_table		1988600						
ANR	1989169	Symbol	v -> quantizer_mode		1988600						
ANR	1989170	Symbol	* * v		1988600						
ANR	1989171	Symbol	MV_PMODE_MIXED_MV		1988600						
ANR	1989172	Symbol	v -> mvrange		1988600						
ANR	1989173	Symbol	v -> ttmbf		1988600						
ANR	1989174	Symbol	v -> avctx		1988600						
ANR	1989175	Symbol	v -> width_mb		1988600						
ANR	1989176	Symbol	v -> halfpq		1988600						
ANR	1989177	Symbol	QUANT_FRAME_IMPLICIT		1988600						
ANR	1989178	Symbol	v -> postprocflag		1988600						
ANR	1989179	Symbol	v -> mv_type_mb_plane		1988600						
ANR	1989180	Symbol	* * lowquant		1988600						
ANR	1989181	Symbol	v -> lumscale		1988600						
ANR	1989182	Symbol	bitplane_decoding		1988600						
ANR	1989183	Symbol	* v -> quantizer_mode		1988600						
ANR	1989184	Symbol	v		1988600						
ANR	1989185	Symbol	v -> mv_diff_vlc		1988600						
ANR	1989186	Symbol	v -> vstransform		1988600						
ANR	1989187	Symbol	v -> pq		1988600						
ANR	1989188	Symbol	pqindex		1988600						
ANR	1989189	Symbol	PROFILE_MAIN		1988600						
