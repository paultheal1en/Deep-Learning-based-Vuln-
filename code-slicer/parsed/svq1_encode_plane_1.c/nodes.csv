command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8060167	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_encode_plane_1.c								
ANR	8060168	Function	svq1_encode_plane	1:0:0:8808							
ANR	8060169	FunctionDef	"svq1_encode_plane (SVQ1Context * s , int plane , unsigned char * src_plane , unsigned char * ref_plane , unsigned char * decoded_plane , int width , int height , int src_stride , int stride)"		8060168	0					
ANR	8060170	CompoundStatement		5:0:195:8808	8060168	0					
ANR	8060171	IdentifierDeclStatement	"int x , y ;"	7:4:202:210	8060168	0	True				
ANR	8060172	IdentifierDecl	x		8060168	0					
ANR	8060173	IdentifierDeclType	int		8060168	0					
ANR	8060174	Identifier	x		8060168	1					
ANR	8060175	IdentifierDecl	y		8060168	1					
ANR	8060176	IdentifierDeclType	int		8060168	0					
ANR	8060177	Identifier	y		8060168	1					
ANR	8060178	IdentifierDeclStatement	int i ;	9:4:217:222	8060168	1	True				
ANR	8060179	IdentifierDecl	i		8060168	0					
ANR	8060180	IdentifierDeclType	int		8060168	0					
ANR	8060181	Identifier	i		8060168	1					
ANR	8060182	IdentifierDeclStatement	"int block_width , block_height ;"	11:4:229:258	8060168	2	True				
ANR	8060183	IdentifierDecl	block_width		8060168	0					
ANR	8060184	IdentifierDeclType	int		8060168	0					
ANR	8060185	Identifier	block_width		8060168	1					
ANR	8060186	IdentifierDecl	block_height		8060168	1					
ANR	8060187	IdentifierDeclType	int		8060168	0					
ANR	8060188	Identifier	block_height		8060168	1					
ANR	8060189	IdentifierDeclStatement	int level ;	13:4:265:274	8060168	3	True				
ANR	8060190	IdentifierDecl	level		8060168	0					
ANR	8060191	IdentifierDeclType	int		8060168	0					
ANR	8060192	Identifier	level		8060168	1					
ANR	8060193	IdentifierDeclStatement	int threshold [ 6 ] ;	15:4:281:297	8060168	4	True				
ANR	8060194	IdentifierDecl	threshold [ 6 ]		8060168	0					
ANR	8060195	IdentifierDeclType	int [ 6 ]		8060168	0					
ANR	8060196	Identifier	threshold		8060168	1					
ANR	8060197	PrimaryExpression	6		8060168	2					
ANR	8060198	IdentifierDeclStatement	const int lambda = ( s -> picture . quality * s -> picture . quality ) >> ( 2 * FF_LAMBDA_SHIFT ) ;	17:4:304:384	8060168	5	True				
ANR	8060199	IdentifierDecl	lambda = ( s -> picture . quality * s -> picture . quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8060168	0					
ANR	8060200	IdentifierDeclType	const int		8060168	0					
ANR	8060201	Identifier	lambda		8060168	1					
ANR	8060202	AssignmentExpression	lambda = ( s -> picture . quality * s -> picture . quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8060168	2		=			
ANR	8060203	Identifier	lambda		8060168	0					
ANR	8060204	ShiftExpression	( s -> picture . quality * s -> picture . quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8060168	1		>>			
ANR	8060205	MultiplicativeExpression	s -> picture . quality * s -> picture . quality		8060168	0		*			
ANR	8060206	MemberAccess	s -> picture . quality		8060168	0					
ANR	8060207	PtrMemberAccess	s -> picture		8060168	0					
ANR	8060208	Identifier	s		8060168	0					
ANR	8060209	Identifier	picture		8060168	1					
ANR	8060210	Identifier	quality		8060168	1					
ANR	8060211	MemberAccess	s -> picture . quality		8060168	1					
ANR	8060212	PtrMemberAccess	s -> picture		8060168	0					
ANR	8060213	Identifier	s		8060168	0					
ANR	8060214	Identifier	picture		8060168	1					
ANR	8060215	Identifier	quality		8060168	1					
ANR	8060216	MultiplicativeExpression	2 * FF_LAMBDA_SHIFT		8060168	1		*			
ANR	8060217	PrimaryExpression	2		8060168	0					
ANR	8060218	Identifier	FF_LAMBDA_SHIFT		8060168	1					
ANR	8060219	ExpressionStatement	threshold [ 5 ] = QUALITY_THRESHOLD	23:4:458:490	8060168	6	True				
ANR	8060220	AssignmentExpression	threshold [ 5 ] = QUALITY_THRESHOLD		8060168	0		=			
ANR	8060221	ArrayIndexing	threshold [ 5 ]		8060168	0					
ANR	8060222	Identifier	threshold		8060168	0					
ANR	8060223	PrimaryExpression	5		8060168	1					
ANR	8060224	Identifier	QUALITY_THRESHOLD		8060168	1					
ANR	8060225	ForStatement	for ( level = 4 ; level >= 0 ; level -- )		8060168	7					
ANR	8060226	ForInit	level = 4 ;	25:9:502:511	8060168	0	True				
ANR	8060227	AssignmentExpression	level = 4		8060168	0		=			
ANR	8060228	Identifier	level		8060168	0					
ANR	8060229	PrimaryExpression	4		8060168	1					
ANR	8060230	Condition	level >= 0	25:20:513:522	8060168	1	True				
ANR	8060231	RelationalExpression	level >= 0		8060168	0		>=			
ANR	8060232	Identifier	level		8060168	0					
ANR	8060233	PrimaryExpression	0		8060168	1					
ANR	8060234	PostIncDecOperationExpression	level --	25:32:525:531	8060168	2	True				
ANR	8060235	Identifier	level		8060168	0					
ANR	8060236	IncDec	--		8060168	1					
ANR	8060237	ExpressionStatement	threshold [ level ] = threshold [ level + 1 ] * THRESHOLD_MULTIPLIER	27:8:543:605	8060168	3	True				
ANR	8060238	AssignmentExpression	threshold [ level ] = threshold [ level + 1 ] * THRESHOLD_MULTIPLIER		8060168	0		=			
ANR	8060239	ArrayIndexing	threshold [ level ]		8060168	0					
ANR	8060240	Identifier	threshold		8060168	0					
ANR	8060241	Identifier	level		8060168	1					
ANR	8060242	MultiplicativeExpression	threshold [ level + 1 ] * THRESHOLD_MULTIPLIER		8060168	1		*			
ANR	8060243	ArrayIndexing	threshold [ level + 1 ]		8060168	0					
ANR	8060244	Identifier	threshold		8060168	0					
ANR	8060245	AdditiveExpression	level + 1		8060168	1		+			
ANR	8060246	Identifier	level		8060168	0					
ANR	8060247	PrimaryExpression	1		8060168	1					
ANR	8060248	Identifier	THRESHOLD_MULTIPLIER		8060168	1					
ANR	8060249	ExpressionStatement	block_width = ( width + 15 ) / 16	31:4:614:645	8060168	8	True				
ANR	8060250	AssignmentExpression	block_width = ( width + 15 ) / 16		8060168	0		=			
ANR	8060251	Identifier	block_width		8060168	0					
ANR	8060252	MultiplicativeExpression	( width + 15 ) / 16		8060168	1		/			
ANR	8060253	AdditiveExpression	width + 15		8060168	0		+			
ANR	8060254	Identifier	width		8060168	0					
ANR	8060255	PrimaryExpression	15		8060168	1					
ANR	8060256	PrimaryExpression	16		8060168	1					
ANR	8060257	ExpressionStatement	block_height = ( height + 15 ) / 16	33:4:652:685	8060168	9	True				
ANR	8060258	AssignmentExpression	block_height = ( height + 15 ) / 16		8060168	0		=			
ANR	8060259	Identifier	block_height		8060168	0					
ANR	8060260	MultiplicativeExpression	( height + 15 ) / 16		8060168	1		/			
ANR	8060261	AdditiveExpression	height + 15		8060168	0		+			
ANR	8060262	Identifier	height		8060168	0					
ANR	8060263	PrimaryExpression	15		8060168	1					
ANR	8060264	PrimaryExpression	16		8060168	1					
ANR	8060265	IfStatement	if ( s -> picture . pict_type == FF_P_TYPE )		8060168	10					
ANR	8060266	Condition	s -> picture . pict_type == FF_P_TYPE	37:7:697:729	8060168	0	True				
ANR	8060267	EqualityExpression	s -> picture . pict_type == FF_P_TYPE		8060168	0		==			
ANR	8060268	MemberAccess	s -> picture . pict_type		8060168	0					
ANR	8060269	PtrMemberAccess	s -> picture		8060168	0					
ANR	8060270	Identifier	s		8060168	0					
ANR	8060271	Identifier	picture		8060168	1					
ANR	8060272	Identifier	pict_type		8060168	1					
ANR	8060273	Identifier	FF_P_TYPE		8060168	1					
ANR	8060274	CompoundStatement		33:41:535:535	8060168	1					
ANR	8060275	ExpressionStatement	s -> m . avctx = s -> avctx	39:8:742:762	8060168	0	True				
ANR	8060276	AssignmentExpression	s -> m . avctx = s -> avctx		8060168	0		=			
ANR	8060277	MemberAccess	s -> m . avctx		8060168	0					
ANR	8060278	PtrMemberAccess	s -> m		8060168	0					
ANR	8060279	Identifier	s		8060168	0					
ANR	8060280	Identifier	m		8060168	1					
ANR	8060281	Identifier	avctx		8060168	1					
ANR	8060282	PtrMemberAccess	s -> avctx		8060168	1					
ANR	8060283	Identifier	s		8060168	0					
ANR	8060284	Identifier	avctx		8060168	1					
ANR	8060285	ExpressionStatement	s -> m . current_picture_ptr = & s -> m . current_picture	41:8:773:820	8060168	1	True				
ANR	8060286	AssignmentExpression	s -> m . current_picture_ptr = & s -> m . current_picture		8060168	0		=			
ANR	8060287	MemberAccess	s -> m . current_picture_ptr		8060168	0					
ANR	8060288	PtrMemberAccess	s -> m		8060168	0					
ANR	8060289	Identifier	s		8060168	0					
ANR	8060290	Identifier	m		8060168	1					
ANR	8060291	Identifier	current_picture_ptr		8060168	1					
ANR	8060292	UnaryOperationExpression	& s -> m . current_picture		8060168	1					
ANR	8060293	UnaryOperator	&		8060168	0					
ANR	8060294	MemberAccess	s -> m . current_picture		8060168	1					
ANR	8060295	PtrMemberAccess	s -> m		8060168	0					
ANR	8060296	Identifier	s		8060168	0					
ANR	8060297	Identifier	m		8060168	1					
ANR	8060298	Identifier	current_picture		8060168	1					
ANR	8060299	ExpressionStatement	s -> m . last_picture_ptr = & s -> m . last_picture	43:8:831:875	8060168	2	True				
ANR	8060300	AssignmentExpression	s -> m . last_picture_ptr = & s -> m . last_picture		8060168	0		=			
ANR	8060301	MemberAccess	s -> m . last_picture_ptr		8060168	0					
ANR	8060302	PtrMemberAccess	s -> m		8060168	0					
ANR	8060303	Identifier	s		8060168	0					
ANR	8060304	Identifier	m		8060168	1					
ANR	8060305	Identifier	last_picture_ptr		8060168	1					
ANR	8060306	UnaryOperationExpression	& s -> m . last_picture		8060168	1					
ANR	8060307	UnaryOperator	&		8060168	0					
ANR	8060308	MemberAccess	s -> m . last_picture		8060168	1					
ANR	8060309	PtrMemberAccess	s -> m		8060168	0					
ANR	8060310	Identifier	s		8060168	0					
ANR	8060311	Identifier	m		8060168	1					
ANR	8060312	Identifier	last_picture		8060168	1					
ANR	8060313	ExpressionStatement	s -> m . last_picture . data [ 0 ] = ref_plane	45:8:886:922	8060168	3	True				
ANR	8060314	AssignmentExpression	s -> m . last_picture . data [ 0 ] = ref_plane		8060168	0		=			
ANR	8060315	ArrayIndexing	s -> m . last_picture . data [ 0 ]		8060168	0					
ANR	8060316	MemberAccess	s -> m . last_picture . data		8060168	0					
ANR	8060317	MemberAccess	s -> m . last_picture		8060168	0					
ANR	8060318	PtrMemberAccess	s -> m		8060168	0					
ANR	8060319	Identifier	s		8060168	0					
ANR	8060320	Identifier	m		8060168	1					
ANR	8060321	Identifier	last_picture		8060168	1					
ANR	8060322	Identifier	data		8060168	1					
ANR	8060323	PrimaryExpression	0		8060168	1					
ANR	8060324	Identifier	ref_plane		8060168	1					
ANR	8060325	ExpressionStatement	s -> m . linesize = s -> m . last_picture . linesize [ 0 ] = s -> m . new_picture . linesize [ 0 ] = s -> m . current_picture . linesize [ 0 ] = stride	47:8:933:1076	8060168	4	True				
ANR	8060326	AssignmentExpression	s -> m . linesize = s -> m . last_picture . linesize [ 0 ] = s -> m . new_picture . linesize [ 0 ] = s -> m . current_picture . linesize [ 0 ] = stride		8060168	0		=			
ANR	8060327	MemberAccess	s -> m . linesize		8060168	0					
ANR	8060328	PtrMemberAccess	s -> m		8060168	0					
ANR	8060329	Identifier	s		8060168	0					
ANR	8060330	Identifier	m		8060168	1					
ANR	8060331	Identifier	linesize		8060168	1					
ANR	8060332	AssignmentExpression	s -> m . last_picture . linesize [ 0 ] = s -> m . new_picture . linesize [ 0 ] = s -> m . current_picture . linesize [ 0 ] = stride		8060168	1		=			
ANR	8060333	ArrayIndexing	s -> m . last_picture . linesize [ 0 ]		8060168	0					
ANR	8060334	MemberAccess	s -> m . last_picture . linesize		8060168	0					
ANR	8060335	MemberAccess	s -> m . last_picture		8060168	0					
ANR	8060336	PtrMemberAccess	s -> m		8060168	0					
ANR	8060337	Identifier	s		8060168	0					
ANR	8060338	Identifier	m		8060168	1					
ANR	8060339	Identifier	last_picture		8060168	1					
ANR	8060340	Identifier	linesize		8060168	1					
ANR	8060341	PrimaryExpression	0		8060168	1					
ANR	8060342	AssignmentExpression	s -> m . new_picture . linesize [ 0 ] = s -> m . current_picture . linesize [ 0 ] = stride		8060168	1		=			
ANR	8060343	ArrayIndexing	s -> m . new_picture . linesize [ 0 ]		8060168	0					
ANR	8060344	MemberAccess	s -> m . new_picture . linesize		8060168	0					
ANR	8060345	MemberAccess	s -> m . new_picture		8060168	0					
ANR	8060346	PtrMemberAccess	s -> m		8060168	0					
ANR	8060347	Identifier	s		8060168	0					
ANR	8060348	Identifier	m		8060168	1					
ANR	8060349	Identifier	new_picture		8060168	1					
ANR	8060350	Identifier	linesize		8060168	1					
ANR	8060351	PrimaryExpression	0		8060168	1					
ANR	8060352	AssignmentExpression	s -> m . current_picture . linesize [ 0 ] = stride		8060168	1		=			
ANR	8060353	ArrayIndexing	s -> m . current_picture . linesize [ 0 ]		8060168	0					
ANR	8060354	MemberAccess	s -> m . current_picture . linesize		8060168	0					
ANR	8060355	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060356	PtrMemberAccess	s -> m		8060168	0					
ANR	8060357	Identifier	s		8060168	0					
ANR	8060358	Identifier	m		8060168	1					
ANR	8060359	Identifier	current_picture		8060168	1					
ANR	8060360	Identifier	linesize		8060168	1					
ANR	8060361	PrimaryExpression	0		8060168	1					
ANR	8060362	Identifier	stride		8060168	1					
ANR	8060363	ExpressionStatement	s -> m . width = width	55:8:1087:1104	8060168	5	True				
ANR	8060364	AssignmentExpression	s -> m . width = width		8060168	0		=			
ANR	8060365	MemberAccess	s -> m . width		8060168	0					
ANR	8060366	PtrMemberAccess	s -> m		8060168	0					
ANR	8060367	Identifier	s		8060168	0					
ANR	8060368	Identifier	m		8060168	1					
ANR	8060369	Identifier	width		8060168	1					
ANR	8060370	Identifier	width		8060168	1					
ANR	8060371	ExpressionStatement	s -> m . height = height	57:8:1115:1134	8060168	6	True				
ANR	8060372	AssignmentExpression	s -> m . height = height		8060168	0		=			
ANR	8060373	MemberAccess	s -> m . height		8060168	0					
ANR	8060374	PtrMemberAccess	s -> m		8060168	0					
ANR	8060375	Identifier	s		8060168	0					
ANR	8060376	Identifier	m		8060168	1					
ANR	8060377	Identifier	height		8060168	1					
ANR	8060378	Identifier	height		8060168	1					
ANR	8060379	ExpressionStatement	s -> m . mb_width = block_width	59:8:1145:1171	8060168	7	True				
ANR	8060380	AssignmentExpression	s -> m . mb_width = block_width		8060168	0		=			
ANR	8060381	MemberAccess	s -> m . mb_width		8060168	0					
ANR	8060382	PtrMemberAccess	s -> m		8060168	0					
ANR	8060383	Identifier	s		8060168	0					
ANR	8060384	Identifier	m		8060168	1					
ANR	8060385	Identifier	mb_width		8060168	1					
ANR	8060386	Identifier	block_width		8060168	1					
ANR	8060387	ExpressionStatement	s -> m . mb_height = block_height	61:8:1182:1210	8060168	8	True				
ANR	8060388	AssignmentExpression	s -> m . mb_height = block_height		8060168	0		=			
ANR	8060389	MemberAccess	s -> m . mb_height		8060168	0					
ANR	8060390	PtrMemberAccess	s -> m		8060168	0					
ANR	8060391	Identifier	s		8060168	0					
ANR	8060392	Identifier	m		8060168	1					
ANR	8060393	Identifier	mb_height		8060168	1					
ANR	8060394	Identifier	block_height		8060168	1					
ANR	8060395	ExpressionStatement	s -> m . mb_stride = s -> m . mb_width + 1	63:8:1221:1252	8060168	9	True				
ANR	8060396	AssignmentExpression	s -> m . mb_stride = s -> m . mb_width + 1		8060168	0		=			
ANR	8060397	MemberAccess	s -> m . mb_stride		8060168	0					
ANR	8060398	PtrMemberAccess	s -> m		8060168	0					
ANR	8060399	Identifier	s		8060168	0					
ANR	8060400	Identifier	m		8060168	1					
ANR	8060401	Identifier	mb_stride		8060168	1					
ANR	8060402	AdditiveExpression	s -> m . mb_width + 1		8060168	1		+			
ANR	8060403	MemberAccess	s -> m . mb_width		8060168	0					
ANR	8060404	PtrMemberAccess	s -> m		8060168	0					
ANR	8060405	Identifier	s		8060168	0					
ANR	8060406	Identifier	m		8060168	1					
ANR	8060407	Identifier	mb_width		8060168	1					
ANR	8060408	PrimaryExpression	1		8060168	1					
ANR	8060409	ExpressionStatement	s -> m . b8_stride = 2 * s -> m . mb_width + 1	65:8:1263:1296	8060168	10	True				
ANR	8060410	AssignmentExpression	s -> m . b8_stride = 2 * s -> m . mb_width + 1		8060168	0		=			
ANR	8060411	MemberAccess	s -> m . b8_stride		8060168	0					
ANR	8060412	PtrMemberAccess	s -> m		8060168	0					
ANR	8060413	Identifier	s		8060168	0					
ANR	8060414	Identifier	m		8060168	1					
ANR	8060415	Identifier	b8_stride		8060168	1					
ANR	8060416	AdditiveExpression	2 * s -> m . mb_width + 1		8060168	1		+			
ANR	8060417	MultiplicativeExpression	2 * s -> m . mb_width		8060168	0		*			
ANR	8060418	PrimaryExpression	2		8060168	0					
ANR	8060419	MemberAccess	s -> m . mb_width		8060168	1					
ANR	8060420	PtrMemberAccess	s -> m		8060168	0					
ANR	8060421	Identifier	s		8060168	0					
ANR	8060422	Identifier	m		8060168	1					
ANR	8060423	Identifier	mb_width		8060168	1					
ANR	8060424	PrimaryExpression	1		8060168	1					
ANR	8060425	ExpressionStatement	s -> m . f_code = 1	67:8:1307:1320	8060168	11	True				
ANR	8060426	AssignmentExpression	s -> m . f_code = 1		8060168	0		=			
ANR	8060427	MemberAccess	s -> m . f_code		8060168	0					
ANR	8060428	PtrMemberAccess	s -> m		8060168	0					
ANR	8060429	Identifier	s		8060168	0					
ANR	8060430	Identifier	m		8060168	1					
ANR	8060431	Identifier	f_code		8060168	1					
ANR	8060432	PrimaryExpression	1		8060168	1					
ANR	8060433	ExpressionStatement	s -> m . pict_type = s -> picture . pict_type	69:8:1331:1367	8060168	12	True				
ANR	8060434	AssignmentExpression	s -> m . pict_type = s -> picture . pict_type		8060168	0		=			
ANR	8060435	MemberAccess	s -> m . pict_type		8060168	0					
ANR	8060436	PtrMemberAccess	s -> m		8060168	0					
ANR	8060437	Identifier	s		8060168	0					
ANR	8060438	Identifier	m		8060168	1					
ANR	8060439	Identifier	pict_type		8060168	1					
ANR	8060440	MemberAccess	s -> picture . pict_type		8060168	1					
ANR	8060441	PtrMemberAccess	s -> picture		8060168	0					
ANR	8060442	Identifier	s		8060168	0					
ANR	8060443	Identifier	picture		8060168	1					
ANR	8060444	Identifier	pict_type		8060168	1					
ANR	8060445	ExpressionStatement	s -> m . me_method = s -> avctx -> me_method	71:8:1378:1413	8060168	13	True				
ANR	8060446	AssignmentExpression	s -> m . me_method = s -> avctx -> me_method		8060168	0		=			
ANR	8060447	MemberAccess	s -> m . me_method		8060168	0					
ANR	8060448	PtrMemberAccess	s -> m		8060168	0					
ANR	8060449	Identifier	s		8060168	0					
ANR	8060450	Identifier	m		8060168	1					
ANR	8060451	Identifier	me_method		8060168	1					
ANR	8060452	PtrMemberAccess	s -> avctx -> me_method		8060168	1					
ANR	8060453	PtrMemberAccess	s -> avctx		8060168	0					
ANR	8060454	Identifier	s		8060168	0					
ANR	8060455	Identifier	avctx		8060168	1					
ANR	8060456	Identifier	me_method		8060168	1					
ANR	8060457	ExpressionStatement	s -> m . me . scene_change_score = 0	73:8:1424:1452	8060168	14	True				
ANR	8060458	AssignmentExpression	s -> m . me . scene_change_score = 0		8060168	0		=			
ANR	8060459	MemberAccess	s -> m . me . scene_change_score		8060168	0					
ANR	8060460	MemberAccess	s -> m . me		8060168	0					
ANR	8060461	PtrMemberAccess	s -> m		8060168	0					
ANR	8060462	Identifier	s		8060168	0					
ANR	8060463	Identifier	m		8060168	1					
ANR	8060464	Identifier	me		8060168	1					
ANR	8060465	Identifier	scene_change_score		8060168	1					
ANR	8060466	PrimaryExpression	0		8060168	1					
ANR	8060467	ExpressionStatement	s -> m . flags = s -> avctx -> flags	75:8:1463:1490	8060168	15	True				
ANR	8060468	AssignmentExpression	s -> m . flags = s -> avctx -> flags		8060168	0		=			
ANR	8060469	MemberAccess	s -> m . flags		8060168	0					
ANR	8060470	PtrMemberAccess	s -> m		8060168	0					
ANR	8060471	Identifier	s		8060168	0					
ANR	8060472	Identifier	m		8060168	1					
ANR	8060473	Identifier	flags		8060168	1					
ANR	8060474	PtrMemberAccess	s -> avctx -> flags		8060168	1					
ANR	8060475	PtrMemberAccess	s -> avctx		8060168	0					
ANR	8060476	Identifier	s		8060168	0					
ANR	8060477	Identifier	avctx		8060168	1					
ANR	8060478	Identifier	flags		8060168	1					
ANR	8060479	ExpressionStatement	s -> m . lambda = s -> picture . quality	83:8:1578:1609	8060168	16	True				
ANR	8060480	AssignmentExpression	s -> m . lambda = s -> picture . quality		8060168	0		=			
ANR	8060481	MemberAccess	s -> m . lambda		8060168	0					
ANR	8060482	PtrMemberAccess	s -> m		8060168	0					
ANR	8060483	Identifier	s		8060168	0					
ANR	8060484	Identifier	m		8060168	1					
ANR	8060485	Identifier	lambda		8060168	1					
ANR	8060486	MemberAccess	s -> picture . quality		8060168	1					
ANR	8060487	PtrMemberAccess	s -> picture		8060168	0					
ANR	8060488	Identifier	s		8060168	0					
ANR	8060489	Identifier	picture		8060168	1					
ANR	8060490	Identifier	quality		8060168	1					
ANR	8060491	ExpressionStatement	s -> m . qscale = ( s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 ) >> ( FF_LAMBDA_SHIFT + 7 )	85:8:1620:1696	8060168	17	True				
ANR	8060492	AssignmentExpression	s -> m . qscale = ( s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 ) >> ( FF_LAMBDA_SHIFT + 7 )		8060168	0		=			
ANR	8060493	MemberAccess	s -> m . qscale		8060168	0					
ANR	8060494	PtrMemberAccess	s -> m		8060168	0					
ANR	8060495	Identifier	s		8060168	0					
ANR	8060496	Identifier	m		8060168	1					
ANR	8060497	Identifier	qscale		8060168	1					
ANR	8060498	ShiftExpression	( s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 ) >> ( FF_LAMBDA_SHIFT + 7 )		8060168	1		>>			
ANR	8060499	AdditiveExpression	s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64		8060168	0		+			
ANR	8060500	MultiplicativeExpression	s -> m . lambda * 139		8060168	0		*			
ANR	8060501	MemberAccess	s -> m . lambda		8060168	0					
ANR	8060502	PtrMemberAccess	s -> m		8060168	0					
ANR	8060503	Identifier	s		8060168	0					
ANR	8060504	Identifier	m		8060168	1					
ANR	8060505	Identifier	lambda		8060168	1					
ANR	8060506	PrimaryExpression	139		8060168	1					
ANR	8060507	MultiplicativeExpression	FF_LAMBDA_SCALE * 64		8060168	1		*			
ANR	8060508	Identifier	FF_LAMBDA_SCALE		8060168	0					
ANR	8060509	PrimaryExpression	64		8060168	1					
ANR	8060510	AdditiveExpression	FF_LAMBDA_SHIFT + 7		8060168	1		+			
ANR	8060511	Identifier	FF_LAMBDA_SHIFT		8060168	0					
ANR	8060512	PrimaryExpression	7		8060168	1					
ANR	8060513	ExpressionStatement	s -> m . lambda2 = ( s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 ) >> FF_LAMBDA_SHIFT	87:8:1707:1785	8060168	18	True				
ANR	8060514	AssignmentExpression	s -> m . lambda2 = ( s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 ) >> FF_LAMBDA_SHIFT		8060168	0		=			
ANR	8060515	MemberAccess	s -> m . lambda2		8060168	0					
ANR	8060516	PtrMemberAccess	s -> m		8060168	0					
ANR	8060517	Identifier	s		8060168	0					
ANR	8060518	Identifier	m		8060168	1					
ANR	8060519	Identifier	lambda2		8060168	1					
ANR	8060520	ShiftExpression	( s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 ) >> FF_LAMBDA_SHIFT		8060168	1		>>			
ANR	8060521	AdditiveExpression	s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2		8060168	0		+			
ANR	8060522	MultiplicativeExpression	s -> m . lambda * s -> m . lambda		8060168	0		*			
ANR	8060523	MemberAccess	s -> m . lambda		8060168	0					
ANR	8060524	PtrMemberAccess	s -> m		8060168	0					
ANR	8060525	Identifier	s		8060168	0					
ANR	8060526	Identifier	m		8060168	1					
ANR	8060527	Identifier	lambda		8060168	1					
ANR	8060528	MemberAccess	s -> m . lambda		8060168	1					
ANR	8060529	PtrMemberAccess	s -> m		8060168	0					
ANR	8060530	Identifier	s		8060168	0					
ANR	8060531	Identifier	m		8060168	1					
ANR	8060532	Identifier	lambda		8060168	1					
ANR	8060533	MultiplicativeExpression	FF_LAMBDA_SCALE / 2		8060168	1		/			
ANR	8060534	Identifier	FF_LAMBDA_SCALE		8060168	0					
ANR	8060535	PrimaryExpression	2		8060168	1					
ANR	8060536	Identifier	FF_LAMBDA_SHIFT		8060168	1					
ANR	8060537	IfStatement	if ( ! s -> motion_val8 [ plane ] )		8060168	19					
ANR	8060538	Condition	! s -> motion_val8 [ plane ]	91:11:1801:1822	8060168	0	True				
ANR	8060539	UnaryOperationExpression	! s -> motion_val8 [ plane ]		8060168	0					
ANR	8060540	UnaryOperator	!		8060168	0					
ANR	8060541	ArrayIndexing	s -> motion_val8 [ plane ]		8060168	1					
ANR	8060542	PtrMemberAccess	s -> motion_val8		8060168	0					
ANR	8060543	Identifier	s		8060168	0					
ANR	8060544	Identifier	motion_val8		8060168	1					
ANR	8060545	Identifier	plane		8060168	1					
ANR	8060546	CompoundStatement		87:34:1628:1628	8060168	1					
ANR	8060547	ExpressionStatement	s -> motion_val8 [ plane ] = av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )	93:12:1839:1928	8060168	0	True				
ANR	8060548	AssignmentExpression	s -> motion_val8 [ plane ] = av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )		8060168	0		=			
ANR	8060549	ArrayIndexing	s -> motion_val8 [ plane ]		8060168	0					
ANR	8060550	PtrMemberAccess	s -> motion_val8		8060168	0					
ANR	8060551	Identifier	s		8060168	0					
ANR	8060552	Identifier	motion_val8		8060168	1					
ANR	8060553	Identifier	plane		8060168	1					
ANR	8060554	CallExpression	av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )		8060168	1					
ANR	8060555	Callee	av_mallocz		8060168	0					
ANR	8060556	Identifier	av_mallocz		8060168	0					
ANR	8060557	ArgumentList	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8060168	1					
ANR	8060558	Argument	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8060168	0					
ANR	8060559	MultiplicativeExpression	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8060168	0		*			
ANR	8060560	AdditiveExpression	s -> m . b8_stride * block_height * 2 + 2		8060168	0		+			
ANR	8060561	MultiplicativeExpression	s -> m . b8_stride * block_height * 2		8060168	0		*			
ANR	8060562	MemberAccess	s -> m . b8_stride		8060168	0					
ANR	8060563	PtrMemberAccess	s -> m		8060168	0					
ANR	8060564	Identifier	s		8060168	0					
ANR	8060565	Identifier	m		8060168	1					
ANR	8060566	Identifier	b8_stride		8060168	1					
ANR	8060567	MultiplicativeExpression	block_height * 2		8060168	1		*			
ANR	8060568	Identifier	block_height		8060168	0					
ANR	8060569	PrimaryExpression	2		8060168	1					
ANR	8060570	PrimaryExpression	2		8060168	1					
ANR	8060571	MultiplicativeExpression	2 * sizeof ( int16_t )		8060168	1		*			
ANR	8060572	PrimaryExpression	2		8060168	0					
ANR	8060573	SizeofExpression	sizeof ( int16_t )		8060168	1					
ANR	8060574	Sizeof	sizeof		8060168	0					
ANR	8060575	SizeofOperand	int16_t		8060168	1					
ANR	8060576	ExpressionStatement	s -> motion_val16 [ plane ] = av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )	95:12:1943:2036	8060168	1	True				
ANR	8060577	AssignmentExpression	s -> motion_val16 [ plane ] = av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )		8060168	0		=			
ANR	8060578	ArrayIndexing	s -> motion_val16 [ plane ]		8060168	0					
ANR	8060579	PtrMemberAccess	s -> motion_val16		8060168	0					
ANR	8060580	Identifier	s		8060168	0					
ANR	8060581	Identifier	motion_val16		8060168	1					
ANR	8060582	Identifier	plane		8060168	1					
ANR	8060583	CallExpression	av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )		8060168	1					
ANR	8060584	Callee	av_mallocz		8060168	0					
ANR	8060585	Identifier	av_mallocz		8060168	0					
ANR	8060586	ArgumentList	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8060168	1					
ANR	8060587	Argument	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8060168	0					
ANR	8060588	MultiplicativeExpression	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8060168	0		*			
ANR	8060589	AdditiveExpression	s -> m . mb_stride * ( block_height + 2 ) + 1		8060168	0		+			
ANR	8060590	MultiplicativeExpression	s -> m . mb_stride * ( block_height + 2 )		8060168	0		*			
ANR	8060591	MemberAccess	s -> m . mb_stride		8060168	0					
ANR	8060592	PtrMemberAccess	s -> m		8060168	0					
ANR	8060593	Identifier	s		8060168	0					
ANR	8060594	Identifier	m		8060168	1					
ANR	8060595	Identifier	mb_stride		8060168	1					
ANR	8060596	AdditiveExpression	block_height + 2		8060168	1		+			
ANR	8060597	Identifier	block_height		8060168	0					
ANR	8060598	PrimaryExpression	2		8060168	1					
ANR	8060599	PrimaryExpression	1		8060168	1					
ANR	8060600	MultiplicativeExpression	2 * sizeof ( int16_t )		8060168	1		*			
ANR	8060601	PrimaryExpression	2		8060168	0					
ANR	8060602	SizeofExpression	sizeof ( int16_t )		8060168	1					
ANR	8060603	Sizeof	sizeof		8060168	0					
ANR	8060604	SizeofOperand	int16_t		8060168	1					
ANR	8060605	ExpressionStatement	s -> m . mb_type = s -> mb_type	101:8:2060:2084	8060168	20	True				
ANR	8060606	AssignmentExpression	s -> m . mb_type = s -> mb_type		8060168	0		=			
ANR	8060607	MemberAccess	s -> m . mb_type		8060168	0					
ANR	8060608	PtrMemberAccess	s -> m		8060168	0					
ANR	8060609	Identifier	s		8060168	0					
ANR	8060610	Identifier	m		8060168	1					
ANR	8060611	Identifier	mb_type		8060168	1					
ANR	8060612	PtrMemberAccess	s -> mb_type		8060168	1					
ANR	8060613	Identifier	s		8060168	0					
ANR	8060614	Identifier	mb_type		8060168	1					
ANR	8060615	ExpressionStatement	s -> m . current_picture . mb_mean = ( uint8_t * ) s -> dummy	107:8:2136:2187	8060168	21	True				
ANR	8060616	AssignmentExpression	s -> m . current_picture . mb_mean = ( uint8_t * ) s -> dummy		8060168	0		=			
ANR	8060617	MemberAccess	s -> m . current_picture . mb_mean		8060168	0					
ANR	8060618	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060619	PtrMemberAccess	s -> m		8060168	0					
ANR	8060620	Identifier	s		8060168	0					
ANR	8060621	Identifier	m		8060168	1					
ANR	8060622	Identifier	current_picture		8060168	1					
ANR	8060623	Identifier	mb_mean		8060168	1					
ANR	8060624	CastExpression	( uint8_t * ) s -> dummy		8060168	1					
ANR	8060625	CastTarget	uint8_t *		8060168	0					
ANR	8060626	PtrMemberAccess	s -> dummy		8060168	1					
ANR	8060627	Identifier	s		8060168	0					
ANR	8060628	Identifier	dummy		8060168	1					
ANR	8060629	ExpressionStatement	s -> m . current_picture . mb_var = ( uint16_t * ) s -> dummy	109:8:2198:2249	8060168	22	True				
ANR	8060630	AssignmentExpression	s -> m . current_picture . mb_var = ( uint16_t * ) s -> dummy		8060168	0		=			
ANR	8060631	MemberAccess	s -> m . current_picture . mb_var		8060168	0					
ANR	8060632	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060633	PtrMemberAccess	s -> m		8060168	0					
ANR	8060634	Identifier	s		8060168	0					
ANR	8060635	Identifier	m		8060168	1					
ANR	8060636	Identifier	current_picture		8060168	1					
ANR	8060637	Identifier	mb_var		8060168	1					
ANR	8060638	CastExpression	( uint16_t * ) s -> dummy		8060168	1					
ANR	8060639	CastTarget	uint16_t *		8060168	0					
ANR	8060640	PtrMemberAccess	s -> dummy		8060168	1					
ANR	8060641	Identifier	s		8060168	0					
ANR	8060642	Identifier	dummy		8060168	1					
ANR	8060643	ExpressionStatement	s -> m . current_picture . mc_mb_var = ( uint16_t * ) s -> dummy	111:8:2260:2311	8060168	23	True				
ANR	8060644	AssignmentExpression	s -> m . current_picture . mc_mb_var = ( uint16_t * ) s -> dummy		8060168	0		=			
ANR	8060645	MemberAccess	s -> m . current_picture . mc_mb_var		8060168	0					
ANR	8060646	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060647	PtrMemberAccess	s -> m		8060168	0					
ANR	8060648	Identifier	s		8060168	0					
ANR	8060649	Identifier	m		8060168	1					
ANR	8060650	Identifier	current_picture		8060168	1					
ANR	8060651	Identifier	mc_mb_var		8060168	1					
ANR	8060652	CastExpression	( uint16_t * ) s -> dummy		8060168	1					
ANR	8060653	CastTarget	uint16_t *		8060168	0					
ANR	8060654	PtrMemberAccess	s -> dummy		8060168	1					
ANR	8060655	Identifier	s		8060168	0					
ANR	8060656	Identifier	dummy		8060168	1					
ANR	8060657	ExpressionStatement	s -> m . current_picture . mb_type = s -> dummy	113:8:2322:2360	8060168	24	True				
ANR	8060658	AssignmentExpression	s -> m . current_picture . mb_type = s -> dummy		8060168	0		=			
ANR	8060659	MemberAccess	s -> m . current_picture . mb_type		8060168	0					
ANR	8060660	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060661	PtrMemberAccess	s -> m		8060168	0					
ANR	8060662	Identifier	s		8060168	0					
ANR	8060663	Identifier	m		8060168	1					
ANR	8060664	Identifier	current_picture		8060168	1					
ANR	8060665	Identifier	mb_type		8060168	1					
ANR	8060666	PtrMemberAccess	s -> dummy		8060168	1					
ANR	8060667	Identifier	s		8060168	0					
ANR	8060668	Identifier	dummy		8060168	1					
ANR	8060669	ExpressionStatement	s -> m . current_picture . motion_val [ 0 ] = s -> motion_val8 [ plane ] + 2	117:8:2373:2434	8060168	25	True				
ANR	8060670	AssignmentExpression	s -> m . current_picture . motion_val [ 0 ] = s -> motion_val8 [ plane ] + 2		8060168	0		=			
ANR	8060671	ArrayIndexing	s -> m . current_picture . motion_val [ 0 ]		8060168	0					
ANR	8060672	MemberAccess	s -> m . current_picture . motion_val		8060168	0					
ANR	8060673	MemberAccess	s -> m . current_picture		8060168	0					
ANR	8060674	PtrMemberAccess	s -> m		8060168	0					
ANR	8060675	Identifier	s		8060168	0					
ANR	8060676	Identifier	m		8060168	1					
ANR	8060677	Identifier	current_picture		8060168	1					
ANR	8060678	Identifier	motion_val		8060168	1					
ANR	8060679	PrimaryExpression	0		8060168	1					
ANR	8060680	AdditiveExpression	s -> motion_val8 [ plane ] + 2		8060168	1		+			
ANR	8060681	ArrayIndexing	s -> motion_val8 [ plane ]		8060168	0					
ANR	8060682	PtrMemberAccess	s -> motion_val8		8060168	0					
ANR	8060683	Identifier	s		8060168	0					
ANR	8060684	Identifier	motion_val8		8060168	1					
ANR	8060685	Identifier	plane		8060168	1					
ANR	8060686	PrimaryExpression	2		8060168	1					
ANR	8060687	ExpressionStatement	s -> m . p_mv_table = s -> motion_val16 [ plane ] + s -> m . mb_stride + 1	119:8:2445:2505	8060168	26	True				
ANR	8060688	AssignmentExpression	s -> m . p_mv_table = s -> motion_val16 [ plane ] + s -> m . mb_stride + 1		8060168	0		=			
ANR	8060689	MemberAccess	s -> m . p_mv_table		8060168	0					
ANR	8060690	PtrMemberAccess	s -> m		8060168	0					
ANR	8060691	Identifier	s		8060168	0					
ANR	8060692	Identifier	m		8060168	1					
ANR	8060693	Identifier	p_mv_table		8060168	1					
ANR	8060694	AdditiveExpression	s -> motion_val16 [ plane ] + s -> m . mb_stride + 1		8060168	1		+			
ANR	8060695	ArrayIndexing	s -> motion_val16 [ plane ]		8060168	0					
ANR	8060696	PtrMemberAccess	s -> motion_val16		8060168	0					
ANR	8060697	Identifier	s		8060168	0					
ANR	8060698	Identifier	motion_val16		8060168	1					
ANR	8060699	Identifier	plane		8060168	1					
ANR	8060700	AdditiveExpression	s -> m . mb_stride + 1		8060168	1		+			
ANR	8060701	MemberAccess	s -> m . mb_stride		8060168	0					
ANR	8060702	PtrMemberAccess	s -> m		8060168	0					
ANR	8060703	Identifier	s		8060168	0					
ANR	8060704	Identifier	m		8060168	1					
ANR	8060705	Identifier	mb_stride		8060168	1					
ANR	8060706	PrimaryExpression	1		8060168	1					
ANR	8060707	ExpressionStatement	s -> m . dsp = s -> dsp	121:8:2516:2532	8060168	27	True				
ANR	8060708	AssignmentExpression	s -> m . dsp = s -> dsp		8060168	0		=			
ANR	8060709	MemberAccess	s -> m . dsp		8060168	0					
ANR	8060710	PtrMemberAccess	s -> m		8060168	0					
ANR	8060711	Identifier	s		8060168	0					
ANR	8060712	Identifier	m		8060168	1					
ANR	8060713	Identifier	dsp		8060168	1					
ANR	8060714	PtrMemberAccess	s -> dsp		8060168	1					
ANR	8060715	Identifier	s		8060168	0					
ANR	8060716	Identifier	dsp		8060168	1					
ANR	8060717	ExpressionStatement	ff_init_me ( & s -> m )	123:8:2550:2567	8060168	28	True				
ANR	8060718	CallExpression	ff_init_me ( & s -> m )		8060168	0					
ANR	8060719	Callee	ff_init_me		8060168	0					
ANR	8060720	Identifier	ff_init_me		8060168	0					
ANR	8060721	ArgumentList	& s -> m		8060168	1					
ANR	8060722	Argument	& s -> m		8060168	0					
ANR	8060723	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8060724	UnaryOperator	&		8060168	0					
ANR	8060725	PtrMemberAccess	s -> m		8060168	1					
ANR	8060726	Identifier	s		8060168	0					
ANR	8060727	Identifier	m		8060168	1					
ANR	8060728	ExpressionStatement	s -> m . me . dia_size = s -> avctx -> dia_size	127:8:2580:2616	8060168	29	True				
ANR	8060729	AssignmentExpression	s -> m . me . dia_size = s -> avctx -> dia_size		8060168	0		=			
ANR	8060730	MemberAccess	s -> m . me . dia_size		8060168	0					
ANR	8060731	MemberAccess	s -> m . me		8060168	0					
ANR	8060732	PtrMemberAccess	s -> m		8060168	0					
ANR	8060733	Identifier	s		8060168	0					
ANR	8060734	Identifier	m		8060168	1					
ANR	8060735	Identifier	me		8060168	1					
ANR	8060736	Identifier	dia_size		8060168	1					
ANR	8060737	PtrMemberAccess	s -> avctx -> dia_size		8060168	1					
ANR	8060738	PtrMemberAccess	s -> avctx		8060168	0					
ANR	8060739	Identifier	s		8060168	0					
ANR	8060740	Identifier	avctx		8060168	1					
ANR	8060741	Identifier	dia_size		8060168	1					
ANR	8060742	ExpressionStatement	s -> m . first_slice_line = 1	129:8:2627:2650	8060168	30	True				
ANR	8060743	AssignmentExpression	s -> m . first_slice_line = 1		8060168	0		=			
ANR	8060744	MemberAccess	s -> m . first_slice_line		8060168	0					
ANR	8060745	PtrMemberAccess	s -> m		8060168	0					
ANR	8060746	Identifier	s		8060168	0					
ANR	8060747	Identifier	m		8060168	1					
ANR	8060748	Identifier	first_slice_line		8060168	1					
ANR	8060749	PrimaryExpression	1		8060168	1					
ANR	8060750	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		8060168	31					
ANR	8060751	ForInit	y = 0 ;	131:13:2666:2671	8060168	0	True				
ANR	8060752	AssignmentExpression	y = 0		8060168	0		=			
ANR	8060753	Identifier	y		8060168	0					
ANR	8060754	PrimaryExpression	0		8060168	1					
ANR	8060755	Condition	y < block_height	131:20:2673:2688	8060168	1	True				
ANR	8060756	RelationalExpression	y < block_height		8060168	0		<			
ANR	8060757	Identifier	y		8060168	0					
ANR	8060758	Identifier	block_height		8060168	1					
ANR	8060759	PostIncDecOperationExpression	y ++	131:38:2691:2693	8060168	2	True				
ANR	8060760	Identifier	y		8060168	0					
ANR	8060761	IncDec	++		8060168	1					
ANR	8060762	CompoundStatement		129:12:2515:2537	8060168	3					
ANR	8060763	IdentifierDeclStatement	uint8_t src [ stride * 16 ] ;	133:12:2711:2733	8060168	0	True				
ANR	8060764	IdentifierDecl	src [ stride * 16 ]		8060168	0					
ANR	8060765	IdentifierDeclType	uint8_t [ stride * 16 ]		8060168	0					
ANR	8060766	Identifier	src		8060168	1					
ANR	8060767	MultiplicativeExpression	stride * 16		8060168	2		*			
ANR	8060768	Identifier	stride		8060168	0					
ANR	8060769	PrimaryExpression	16		8060168	1					
ANR	8060770	ExpressionStatement	s -> m . new_picture . data [ 0 ] = src - y * 16 * stride	137:12:2750:2793	8060168	1	True				
ANR	8060771	AssignmentExpression	s -> m . new_picture . data [ 0 ] = src - y * 16 * stride		8060168	0		=			
ANR	8060772	ArrayIndexing	s -> m . new_picture . data [ 0 ]		8060168	0					
ANR	8060773	MemberAccess	s -> m . new_picture . data		8060168	0					
ANR	8060774	MemberAccess	s -> m . new_picture		8060168	0					
ANR	8060775	PtrMemberAccess	s -> m		8060168	0					
ANR	8060776	Identifier	s		8060168	0					
ANR	8060777	Identifier	m		8060168	1					
ANR	8060778	Identifier	new_picture		8060168	1					
ANR	8060779	Identifier	data		8060168	1					
ANR	8060780	PrimaryExpression	0		8060168	1					
ANR	8060781	AdditiveExpression	src - y * 16 * stride		8060168	1		-			
ANR	8060782	Identifier	src		8060168	0					
ANR	8060783	MultiplicativeExpression	y * 16 * stride		8060168	1		*			
ANR	8060784	Identifier	y		8060168	0					
ANR	8060785	MultiplicativeExpression	16 * stride		8060168	1		*			
ANR	8060786	PrimaryExpression	16		8060168	0					
ANR	8060787	Identifier	stride		8060168	1					
ANR	8060788	ExpressionStatement	s -> m . mb_y = y	139:12:2815:2827	8060168	2	True				
ANR	8060789	AssignmentExpression	s -> m . mb_y = y		8060168	0		=			
ANR	8060790	MemberAccess	s -> m . mb_y		8060168	0					
ANR	8060791	PtrMemberAccess	s -> m		8060168	0					
ANR	8060792	Identifier	s		8060168	0					
ANR	8060793	Identifier	m		8060168	1					
ANR	8060794	Identifier	mb_y		8060168	1					
ANR	8060795	Identifier	y		8060168	1					
ANR	8060796	ForStatement	for ( i = 0 ; i < 16 && i + 16 * y < height ; i ++ )		8060168	3					
ANR	8060797	ForInit	i = 0 ;	143:16:2848:2851	8060168	0	True				
ANR	8060798	AssignmentExpression	i = 0		8060168	0		=			
ANR	8060799	Identifier	i		8060168	0					
ANR	8060800	PrimaryExpression	0		8060168	1					
ANR	8060801	Condition	i < 16 && i + 16 * y < height	143:21:2853:2875	8060168	1	True				
ANR	8060802	AndExpression	i < 16 && i + 16 * y < height		8060168	0		&&			
ANR	8060803	RelationalExpression	i < 16		8060168	0		<			
ANR	8060804	Identifier	i		8060168	0					
ANR	8060805	PrimaryExpression	16		8060168	1					
ANR	8060806	RelationalExpression	i + 16 * y < height		8060168	1		<			
ANR	8060807	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8060808	Identifier	i		8060168	0					
ANR	8060809	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8060810	PrimaryExpression	16		8060168	0					
ANR	8060811	Identifier	y		8060168	1					
ANR	8060812	Identifier	height		8060168	1					
ANR	8060813	PostIncDecOperationExpression	i ++	143:46:2878:2880	8060168	2	True				
ANR	8060814	Identifier	i		8060168	0					
ANR	8060815	IncDec	++		8060168	1					
ANR	8060816	CompoundStatement		139:50:2686:2686	8060168	3					
ANR	8060817	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"	145:16:2901:2963	8060168	0	True				
ANR	8060818	CallExpression	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"		8060168	0					
ANR	8060819	Callee	memcpy		8060168	0					
ANR	8060820	Identifier	memcpy		8060168	0					
ANR	8060821	ArgumentList	& src [ i * stride ]		8060168	1					
ANR	8060822	Argument	& src [ i * stride ]		8060168	0					
ANR	8060823	UnaryOperationExpression	& src [ i * stride ]		8060168	0					
ANR	8060824	UnaryOperator	&		8060168	0					
ANR	8060825	ArrayIndexing	src [ i * stride ]		8060168	1					
ANR	8060826	Identifier	src		8060168	0					
ANR	8060827	MultiplicativeExpression	i * stride		8060168	1		*			
ANR	8060828	Identifier	i		8060168	0					
ANR	8060829	Identifier	stride		8060168	1					
ANR	8060830	Argument	& src_plane [ ( i + 16 * y ) * src_stride ]		8060168	1					
ANR	8060831	UnaryOperationExpression	& src_plane [ ( i + 16 * y ) * src_stride ]		8060168	0					
ANR	8060832	UnaryOperator	&		8060168	0					
ANR	8060833	ArrayIndexing	src_plane [ ( i + 16 * y ) * src_stride ]		8060168	1					
ANR	8060834	Identifier	src_plane		8060168	0					
ANR	8060835	MultiplicativeExpression	( i + 16 * y ) * src_stride		8060168	1		*			
ANR	8060836	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8060837	Identifier	i		8060168	0					
ANR	8060838	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8060839	PrimaryExpression	16		8060168	0					
ANR	8060840	Identifier	y		8060168	1					
ANR	8060841	Identifier	src_stride		8060168	1					
ANR	8060842	Argument	width		8060168	2					
ANR	8060843	Identifier	width		8060168	0					
ANR	8060844	ForStatement	for ( x = width ; x < 16 * block_width ; x ++ )		8060168	1					
ANR	8060845	ForInit	x = width ;	147:20:2986:2993	8060168	0	True				
ANR	8060846	AssignmentExpression	x = width		8060168	0		=			
ANR	8060847	Identifier	x		8060168	0					
ANR	8060848	Identifier	width		8060168	1					
ANR	8060849	Condition	x < 16 * block_width	147:29:2995:3010	8060168	1	True				
ANR	8060850	RelationalExpression	x < 16 * block_width		8060168	0		<			
ANR	8060851	Identifier	x		8060168	0					
ANR	8060852	MultiplicativeExpression	16 * block_width		8060168	1		*			
ANR	8060853	PrimaryExpression	16		8060168	0					
ANR	8060854	Identifier	block_width		8060168	1					
ANR	8060855	PostIncDecOperationExpression	x ++	147:47:3013:3015	8060168	2	True				
ANR	8060856	Identifier	x		8060168	0					
ANR	8060857	IncDec	++		8060168	1					
ANR	8060858	ExpressionStatement	src [ i * stride + x ] = src [ i * stride + x - 1 ]	149:20:3039:3073	8060168	3	True				
ANR	8060859	AssignmentExpression	src [ i * stride + x ] = src [ i * stride + x - 1 ]		8060168	0		=			
ANR	8060860	ArrayIndexing	src [ i * stride + x ]		8060168	0					
ANR	8060861	Identifier	src		8060168	0					
ANR	8060862	AdditiveExpression	i * stride + x		8060168	1		+			
ANR	8060863	MultiplicativeExpression	i * stride		8060168	0		*			
ANR	8060864	Identifier	i		8060168	0					
ANR	8060865	Identifier	stride		8060168	1					
ANR	8060866	Identifier	x		8060168	1					
ANR	8060867	ArrayIndexing	src [ i * stride + x - 1 ]		8060168	1					
ANR	8060868	Identifier	src		8060168	0					
ANR	8060869	AdditiveExpression	i * stride + x - 1		8060168	1		+			
ANR	8060870	MultiplicativeExpression	i * stride		8060168	0		*			
ANR	8060871	Identifier	i		8060168	0					
ANR	8060872	Identifier	stride		8060168	1					
ANR	8060873	AdditiveExpression	x - 1		8060168	1		-			
ANR	8060874	Identifier	x		8060168	0					
ANR	8060875	PrimaryExpression	1		8060168	1					
ANR	8060876	ForStatement	for ( ; i < 16 && i + 16 * y < 16 * block_height ; i ++ )		8060168	4					
ANR	8060877	Condition	i < 16 && i + 16 * y < 16 * block_height	153:18:3109:3140	8060168	0	True				
ANR	8060878	AndExpression	i < 16 && i + 16 * y < 16 * block_height		8060168	0		&&			
ANR	8060879	RelationalExpression	i < 16		8060168	0		<			
ANR	8060880	Identifier	i		8060168	0					
ANR	8060881	PrimaryExpression	16		8060168	1					
ANR	8060882	RelationalExpression	i + 16 * y < 16 * block_height		8060168	1		<			
ANR	8060883	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8060884	Identifier	i		8060168	0					
ANR	8060885	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8060886	PrimaryExpression	16		8060168	0					
ANR	8060887	Identifier	y		8060168	1					
ANR	8060888	MultiplicativeExpression	16 * block_height		8060168	1		*			
ANR	8060889	PrimaryExpression	16		8060168	0					
ANR	8060890	Identifier	block_height		8060168	1					
ANR	8060891	PostIncDecOperationExpression	i ++	153:52:3143:3145	8060168	1	True				
ANR	8060892	Identifier	i		8060168	0					
ANR	8060893	IncDec	++		8060168	1					
ANR	8060894	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"	155:16:3165:3223	8060168	2	True				
ANR	8060895	CallExpression	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"		8060168	0					
ANR	8060896	Callee	memcpy		8060168	0					
ANR	8060897	Identifier	memcpy		8060168	0					
ANR	8060898	ArgumentList	& src [ i * stride ]		8060168	1					
ANR	8060899	Argument	& src [ i * stride ]		8060168	0					
ANR	8060900	UnaryOperationExpression	& src [ i * stride ]		8060168	0					
ANR	8060901	UnaryOperator	&		8060168	0					
ANR	8060902	ArrayIndexing	src [ i * stride ]		8060168	1					
ANR	8060903	Identifier	src		8060168	0					
ANR	8060904	MultiplicativeExpression	i * stride		8060168	1		*			
ANR	8060905	Identifier	i		8060168	0					
ANR	8060906	Identifier	stride		8060168	1					
ANR	8060907	Argument	& src [ ( i - 1 ) * stride ]		8060168	1					
ANR	8060908	UnaryOperationExpression	& src [ ( i - 1 ) * stride ]		8060168	0					
ANR	8060909	UnaryOperator	&		8060168	0					
ANR	8060910	ArrayIndexing	src [ ( i - 1 ) * stride ]		8060168	1					
ANR	8060911	Identifier	src		8060168	0					
ANR	8060912	MultiplicativeExpression	( i - 1 ) * stride		8060168	1		*			
ANR	8060913	AdditiveExpression	i - 1		8060168	0		-			
ANR	8060914	Identifier	i		8060168	0					
ANR	8060915	PrimaryExpression	1		8060168	1					
ANR	8060916	Identifier	stride		8060168	1					
ANR	8060917	Argument	16 * block_width		8060168	2					
ANR	8060918	MultiplicativeExpression	16 * block_width		8060168	0		*			
ANR	8060919	PrimaryExpression	16		8060168	0					
ANR	8060920	Identifier	block_width		8060168	1					
ANR	8060921	ForStatement	for ( x = 0 ; x < block_width ; x ++ )		8060168	5					
ANR	8060922	ForInit	x = 0 ;	159:17:3245:3250	8060168	0	True				
ANR	8060923	AssignmentExpression	x = 0		8060168	0		=			
ANR	8060924	Identifier	x		8060168	0					
ANR	8060925	PrimaryExpression	0		8060168	1					
ANR	8060926	Condition	x < block_width	159:24:3252:3266	8060168	1	True				
ANR	8060927	RelationalExpression	x < block_width		8060168	0		<			
ANR	8060928	Identifier	x		8060168	0					
ANR	8060929	Identifier	block_width		8060168	1					
ANR	8060930	PostIncDecOperationExpression	x ++	159:41:3269:3271	8060168	2	True				
ANR	8060931	Identifier	x		8060168	0					
ANR	8060932	IncDec	++		8060168	1					
ANR	8060933	CompoundStatement		155:46:3078:3078	8060168	3					
ANR	8060934	ExpressionStatement	s -> m . mb_x = x	161:16:3293:3305	8060168	0	True				
ANR	8060935	AssignmentExpression	s -> m . mb_x = x		8060168	0		=			
ANR	8060936	MemberAccess	s -> m . mb_x		8060168	0					
ANR	8060937	PtrMemberAccess	s -> m		8060168	0					
ANR	8060938	Identifier	s		8060168	0					
ANR	8060939	Identifier	m		8060168	1					
ANR	8060940	Identifier	mb_x		8060168	1					
ANR	8060941	Identifier	x		8060168	1					
ANR	8060942	ExpressionStatement	ff_init_block_index ( & s -> m )	163:16:3324:3350	8060168	1	True				
ANR	8060943	CallExpression	ff_init_block_index ( & s -> m )		8060168	0					
ANR	8060944	Callee	ff_init_block_index		8060168	0					
ANR	8060945	Identifier	ff_init_block_index		8060168	0					
ANR	8060946	ArgumentList	& s -> m		8060168	1					
ANR	8060947	Argument	& s -> m		8060168	0					
ANR	8060948	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8060949	UnaryOperator	&		8060168	0					
ANR	8060950	PtrMemberAccess	s -> m		8060168	1					
ANR	8060951	Identifier	s		8060168	0					
ANR	8060952	Identifier	m		8060168	1					
ANR	8060953	ExpressionStatement	ff_update_block_index ( & s -> m )	165:16:3369:3397	8060168	2	True				
ANR	8060954	CallExpression	ff_update_block_index ( & s -> m )		8060168	0					
ANR	8060955	Callee	ff_update_block_index		8060168	0					
ANR	8060956	Identifier	ff_update_block_index		8060168	0					
ANR	8060957	ArgumentList	& s -> m		8060168	1					
ANR	8060958	Argument	& s -> m		8060168	0					
ANR	8060959	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8060960	UnaryOperator	&		8060168	0					
ANR	8060961	PtrMemberAccess	s -> m		8060168	1					
ANR	8060962	Identifier	s		8060168	0					
ANR	8060963	Identifier	m		8060168	1					
ANR	8060964	ExpressionStatement	"ff_estimate_p_frame_motion ( & s -> m , x , y )"	169:16:3418:3457	8060168	3	True				
ANR	8060965	CallExpression	"ff_estimate_p_frame_motion ( & s -> m , x , y )"		8060168	0					
ANR	8060966	Callee	ff_estimate_p_frame_motion		8060168	0					
ANR	8060967	Identifier	ff_estimate_p_frame_motion		8060168	0					
ANR	8060968	ArgumentList	& s -> m		8060168	1					
ANR	8060969	Argument	& s -> m		8060168	0					
ANR	8060970	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8060971	UnaryOperator	&		8060168	0					
ANR	8060972	PtrMemberAccess	s -> m		8060168	1					
ANR	8060973	Identifier	s		8060168	0					
ANR	8060974	Identifier	m		8060168	1					
ANR	8060975	Argument	x		8060168	1					
ANR	8060976	Identifier	x		8060168	0					
ANR	8060977	Argument	y		8060168	2					
ANR	8060978	Identifier	y		8060168	0					
ANR	8060979	ExpressionStatement	s -> m . first_slice_line = 0	173:12:3487:3510	8060168	6	True				
ANR	8060980	AssignmentExpression	s -> m . first_slice_line = 0		8060168	0		=			
ANR	8060981	MemberAccess	s -> m . first_slice_line		8060168	0					
ANR	8060982	PtrMemberAccess	s -> m		8060168	0					
ANR	8060983	Identifier	s		8060168	0					
ANR	8060984	Identifier	m		8060168	1					
ANR	8060985	Identifier	first_slice_line		8060168	1					
ANR	8060986	PrimaryExpression	0		8060168	1					
ANR	8060987	ExpressionStatement	ff_fix_long_p_mvs ( & s -> m )	179:8:3534:3558	8060168	32	True				
ANR	8060988	CallExpression	ff_fix_long_p_mvs ( & s -> m )		8060168	0					
ANR	8060989	Callee	ff_fix_long_p_mvs		8060168	0					
ANR	8060990	Identifier	ff_fix_long_p_mvs		8060168	0					
ANR	8060991	ArgumentList	& s -> m		8060168	1					
ANR	8060992	Argument	& s -> m		8060168	0					
ANR	8060993	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8060994	UnaryOperator	&		8060168	0					
ANR	8060995	PtrMemberAccess	s -> m		8060168	1					
ANR	8060996	Identifier	s		8060168	0					
ANR	8060997	Identifier	m		8060168	1					
ANR	8060998	ExpressionStatement	"ff_fix_long_mvs ( & s -> m , NULL , 0 , s -> m . p_mv_table , s -> m . f_code , CANDIDATE_MB_TYPE_INTER , 0 )"	181:8:3569:3658	8060168	33	True				
ANR	8060999	CallExpression	"ff_fix_long_mvs ( & s -> m , NULL , 0 , s -> m . p_mv_table , s -> m . f_code , CANDIDATE_MB_TYPE_INTER , 0 )"		8060168	0					
ANR	8061000	Callee	ff_fix_long_mvs		8060168	0					
ANR	8061001	Identifier	ff_fix_long_mvs		8060168	0					
ANR	8061002	ArgumentList	& s -> m		8060168	1					
ANR	8061003	Argument	& s -> m		8060168	0					
ANR	8061004	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061005	UnaryOperator	&		8060168	0					
ANR	8061006	PtrMemberAccess	s -> m		8060168	1					
ANR	8061007	Identifier	s		8060168	0					
ANR	8061008	Identifier	m		8060168	1					
ANR	8061009	Argument	NULL		8060168	1					
ANR	8061010	Identifier	NULL		8060168	0					
ANR	8061011	Argument	0		8060168	2					
ANR	8061012	PrimaryExpression	0		8060168	0					
ANR	8061013	Argument	s -> m . p_mv_table		8060168	3					
ANR	8061014	MemberAccess	s -> m . p_mv_table		8060168	0					
ANR	8061015	PtrMemberAccess	s -> m		8060168	0					
ANR	8061016	Identifier	s		8060168	0					
ANR	8061017	Identifier	m		8060168	1					
ANR	8061018	Identifier	p_mv_table		8060168	1					
ANR	8061019	Argument	s -> m . f_code		8060168	4					
ANR	8061020	MemberAccess	s -> m . f_code		8060168	0					
ANR	8061021	PtrMemberAccess	s -> m		8060168	0					
ANR	8061022	Identifier	s		8060168	0					
ANR	8061023	Identifier	m		8060168	1					
ANR	8061024	Identifier	f_code		8060168	1					
ANR	8061025	Argument	CANDIDATE_MB_TYPE_INTER		8060168	5					
ANR	8061026	Identifier	CANDIDATE_MB_TYPE_INTER		8060168	0					
ANR	8061027	Argument	0		8060168	6					
ANR	8061028	PrimaryExpression	0		8060168	0					
ANR	8061029	ExpressionStatement	s -> m . first_slice_line = 1	187:4:3674:3697	8060168	11	True				
ANR	8061030	AssignmentExpression	s -> m . first_slice_line = 1		8060168	0		=			
ANR	8061031	MemberAccess	s -> m . first_slice_line		8060168	0					
ANR	8061032	PtrMemberAccess	s -> m		8060168	0					
ANR	8061033	Identifier	s		8060168	0					
ANR	8061034	Identifier	m		8060168	1					
ANR	8061035	Identifier	first_slice_line		8060168	1					
ANR	8061036	PrimaryExpression	1		8060168	1					
ANR	8061037	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		8060168	12					
ANR	8061038	ForInit	y = 0 ;	189:9:3709:3714	8060168	0	True				
ANR	8061039	AssignmentExpression	y = 0		8060168	0		=			
ANR	8061040	Identifier	y		8060168	0					
ANR	8061041	PrimaryExpression	0		8060168	1					
ANR	8061042	Condition	y < block_height	189:16:3716:3731	8060168	1	True				
ANR	8061043	RelationalExpression	y < block_height		8060168	0		<			
ANR	8061044	Identifier	y		8060168	0					
ANR	8061045	Identifier	block_height		8060168	1					
ANR	8061046	PostIncDecOperationExpression	y ++	189:34:3734:3736	8060168	2	True				
ANR	8061047	Identifier	y		8060168	0					
ANR	8061048	IncDec	++		8060168	1					
ANR	8061049	CompoundStatement		187:8:3554:3576	8060168	3					
ANR	8061050	IdentifierDeclStatement	uint8_t src [ stride * 16 ] ;	191:8:3750:3772	8060168	0	True				
ANR	8061051	IdentifierDecl	src [ stride * 16 ]		8060168	0					
ANR	8061052	IdentifierDeclType	uint8_t [ stride * 16 ]		8060168	0					
ANR	8061053	Identifier	src		8060168	1					
ANR	8061054	MultiplicativeExpression	stride * 16		8060168	2		*			
ANR	8061055	Identifier	stride		8060168	0					
ANR	8061056	PrimaryExpression	16		8060168	1					
ANR	8061057	ForStatement	for ( i = 0 ; i < 16 && i + 16 * y < height ; i ++ )		8060168	1					
ANR	8061058	ForInit	i = 0 ;	195:12:3789:3792	8060168	0	True				
ANR	8061059	AssignmentExpression	i = 0		8060168	0		=			
ANR	8061060	Identifier	i		8060168	0					
ANR	8061061	PrimaryExpression	0		8060168	1					
ANR	8061062	Condition	i < 16 && i + 16 * y < height	195:17:3794:3816	8060168	1	True				
ANR	8061063	AndExpression	i < 16 && i + 16 * y < height		8060168	0		&&			
ANR	8061064	RelationalExpression	i < 16		8060168	0		<			
ANR	8061065	Identifier	i		8060168	0					
ANR	8061066	PrimaryExpression	16		8060168	1					
ANR	8061067	RelationalExpression	i + 16 * y < height		8060168	1		<			
ANR	8061068	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8061069	Identifier	i		8060168	0					
ANR	8061070	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8061071	PrimaryExpression	16		8060168	0					
ANR	8061072	Identifier	y		8060168	1					
ANR	8061073	Identifier	height		8060168	1					
ANR	8061074	PostIncDecOperationExpression	i ++	195:42:3819:3821	8060168	2	True				
ANR	8061075	Identifier	i		8060168	0					
ANR	8061076	IncDec	++		8060168	1					
ANR	8061077	CompoundStatement		191:46:3627:3627	8060168	3					
ANR	8061078	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"	197:12:3838:3900	8060168	0	True				
ANR	8061079	CallExpression	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"		8060168	0					
ANR	8061080	Callee	memcpy		8060168	0					
ANR	8061081	Identifier	memcpy		8060168	0					
ANR	8061082	ArgumentList	& src [ i * stride ]		8060168	1					
ANR	8061083	Argument	& src [ i * stride ]		8060168	0					
ANR	8061084	UnaryOperationExpression	& src [ i * stride ]		8060168	0					
ANR	8061085	UnaryOperator	&		8060168	0					
ANR	8061086	ArrayIndexing	src [ i * stride ]		8060168	1					
ANR	8061087	Identifier	src		8060168	0					
ANR	8061088	MultiplicativeExpression	i * stride		8060168	1		*			
ANR	8061089	Identifier	i		8060168	0					
ANR	8061090	Identifier	stride		8060168	1					
ANR	8061091	Argument	& src_plane [ ( i + 16 * y ) * src_stride ]		8060168	1					
ANR	8061092	UnaryOperationExpression	& src_plane [ ( i + 16 * y ) * src_stride ]		8060168	0					
ANR	8061093	UnaryOperator	&		8060168	0					
ANR	8061094	ArrayIndexing	src_plane [ ( i + 16 * y ) * src_stride ]		8060168	1					
ANR	8061095	Identifier	src_plane		8060168	0					
ANR	8061096	MultiplicativeExpression	( i + 16 * y ) * src_stride		8060168	1		*			
ANR	8061097	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8061098	Identifier	i		8060168	0					
ANR	8061099	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8061100	PrimaryExpression	16		8060168	0					
ANR	8061101	Identifier	y		8060168	1					
ANR	8061102	Identifier	src_stride		8060168	1					
ANR	8061103	Argument	width		8060168	2					
ANR	8061104	Identifier	width		8060168	0					
ANR	8061105	ForStatement	for ( x = width ; x < 16 * block_width ; x ++ )		8060168	1					
ANR	8061106	ForInit	x = width ;	199:16:3919:3926	8060168	0	True				
ANR	8061107	AssignmentExpression	x = width		8060168	0		=			
ANR	8061108	Identifier	x		8060168	0					
ANR	8061109	Identifier	width		8060168	1					
ANR	8061110	Condition	x < 16 * block_width	199:25:3928:3943	8060168	1	True				
ANR	8061111	RelationalExpression	x < 16 * block_width		8060168	0		<			
ANR	8061112	Identifier	x		8060168	0					
ANR	8061113	MultiplicativeExpression	16 * block_width		8060168	1		*			
ANR	8061114	PrimaryExpression	16		8060168	0					
ANR	8061115	Identifier	block_width		8060168	1					
ANR	8061116	PostIncDecOperationExpression	x ++	199:43:3946:3948	8060168	2	True				
ANR	8061117	Identifier	x		8060168	0					
ANR	8061118	IncDec	++		8060168	1					
ANR	8061119	ExpressionStatement	src [ i * stride + x ] = src [ i * stride + x - 1 ]	201:16:3968:4002	8060168	3	True				
ANR	8061120	AssignmentExpression	src [ i * stride + x ] = src [ i * stride + x - 1 ]		8060168	0		=			
ANR	8061121	ArrayIndexing	src [ i * stride + x ]		8060168	0					
ANR	8061122	Identifier	src		8060168	0					
ANR	8061123	AdditiveExpression	i * stride + x		8060168	1		+			
ANR	8061124	MultiplicativeExpression	i * stride		8060168	0		*			
ANR	8061125	Identifier	i		8060168	0					
ANR	8061126	Identifier	stride		8060168	1					
ANR	8061127	Identifier	x		8060168	1					
ANR	8061128	ArrayIndexing	src [ i * stride + x - 1 ]		8060168	1					
ANR	8061129	Identifier	src		8060168	0					
ANR	8061130	AdditiveExpression	i * stride + x - 1		8060168	1		+			
ANR	8061131	MultiplicativeExpression	i * stride		8060168	0		*			
ANR	8061132	Identifier	i		8060168	0					
ANR	8061133	Identifier	stride		8060168	1					
ANR	8061134	AdditiveExpression	x - 1		8060168	1		-			
ANR	8061135	Identifier	x		8060168	0					
ANR	8061136	PrimaryExpression	1		8060168	1					
ANR	8061137	ForStatement	for ( ; i < 16 && i + 16 * y < 16 * block_height ; i ++ )		8060168	2					
ANR	8061138	Condition	i < 16 && i + 16 * y < 16 * block_height	205:14:4030:4061	8060168	0	True				
ANR	8061139	AndExpression	i < 16 && i + 16 * y < 16 * block_height		8060168	0		&&			
ANR	8061140	RelationalExpression	i < 16		8060168	0		<			
ANR	8061141	Identifier	i		8060168	0					
ANR	8061142	PrimaryExpression	16		8060168	1					
ANR	8061143	RelationalExpression	i + 16 * y < 16 * block_height		8060168	1		<			
ANR	8061144	AdditiveExpression	i + 16 * y		8060168	0		+			
ANR	8061145	Identifier	i		8060168	0					
ANR	8061146	MultiplicativeExpression	16 * y		8060168	1		*			
ANR	8061147	PrimaryExpression	16		8060168	0					
ANR	8061148	Identifier	y		8060168	1					
ANR	8061149	MultiplicativeExpression	16 * block_height		8060168	1		*			
ANR	8061150	PrimaryExpression	16		8060168	0					
ANR	8061151	Identifier	block_height		8060168	1					
ANR	8061152	PostIncDecOperationExpression	i ++	205:48:4064:4066	8060168	1	True				
ANR	8061153	Identifier	i		8060168	0					
ANR	8061154	IncDec	++		8060168	1					
ANR	8061155	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"	207:12:4082:4140	8060168	2	True				
ANR	8061156	CallExpression	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"		8060168	0					
ANR	8061157	Callee	memcpy		8060168	0					
ANR	8061158	Identifier	memcpy		8060168	0					
ANR	8061159	ArgumentList	& src [ i * stride ]		8060168	1					
ANR	8061160	Argument	& src [ i * stride ]		8060168	0					
ANR	8061161	UnaryOperationExpression	& src [ i * stride ]		8060168	0					
ANR	8061162	UnaryOperator	&		8060168	0					
ANR	8061163	ArrayIndexing	src [ i * stride ]		8060168	1					
ANR	8061164	Identifier	src		8060168	0					
ANR	8061165	MultiplicativeExpression	i * stride		8060168	1		*			
ANR	8061166	Identifier	i		8060168	0					
ANR	8061167	Identifier	stride		8060168	1					
ANR	8061168	Argument	& src [ ( i - 1 ) * stride ]		8060168	1					
ANR	8061169	UnaryOperationExpression	& src [ ( i - 1 ) * stride ]		8060168	0					
ANR	8061170	UnaryOperator	&		8060168	0					
ANR	8061171	ArrayIndexing	src [ ( i - 1 ) * stride ]		8060168	1					
ANR	8061172	Identifier	src		8060168	0					
ANR	8061173	MultiplicativeExpression	( i - 1 ) * stride		8060168	1		*			
ANR	8061174	AdditiveExpression	i - 1		8060168	0		-			
ANR	8061175	Identifier	i		8060168	0					
ANR	8061176	PrimaryExpression	1		8060168	1					
ANR	8061177	Identifier	stride		8060168	1					
ANR	8061178	Argument	16 * block_width		8060168	2					
ANR	8061179	MultiplicativeExpression	16 * block_width		8060168	0		*			
ANR	8061180	PrimaryExpression	16		8060168	0					
ANR	8061181	Identifier	block_width		8060168	1					
ANR	8061182	ExpressionStatement	s -> m . mb_y = y	211:8:4153:4165	8060168	3	True				
ANR	8061183	AssignmentExpression	s -> m . mb_y = y		8060168	0		=			
ANR	8061184	MemberAccess	s -> m . mb_y		8060168	0					
ANR	8061185	PtrMemberAccess	s -> m		8060168	0					
ANR	8061186	Identifier	s		8060168	0					
ANR	8061187	Identifier	m		8060168	1					
ANR	8061188	Identifier	mb_y		8060168	1					
ANR	8061189	Identifier	y		8060168	1					
ANR	8061190	ForStatement	for ( x = 0 ; x < block_width ; x ++ )		8060168	4					
ANR	8061191	ForInit	x = 0 ;	213:13:4181:4186	8060168	0	True				
ANR	8061192	AssignmentExpression	x = 0		8060168	0		=			
ANR	8061193	Identifier	x		8060168	0					
ANR	8061194	PrimaryExpression	0		8060168	1					
ANR	8061195	Condition	x < block_width	213:20:4188:4202	8060168	1	True				
ANR	8061196	RelationalExpression	x < block_width		8060168	0		<			
ANR	8061197	Identifier	x		8060168	0					
ANR	8061198	Identifier	block_width		8060168	1					
ANR	8061199	PostIncDecOperationExpression	x ++	213:37:4205:4207	8060168	2	True				
ANR	8061200	Identifier	x		8060168	0					
ANR	8061201	IncDec	++		8060168	1					
ANR	8061202	CompoundStatement		223:12:4305:4334	8060168	3					
ANR	8061203	Statement	uint8_t	215:12:4225:4231	8060168	0	True				
ANR	8061204	ExpressionStatement	reorder_buffer [ 3 ] [ 6 ] [ 7 * 32 ]	215:20:4233:4259	8060168	1	True				
ANR	8061205	ArrayIndexing	reorder_buffer [ 3 ] [ 6 ] [ 7 * 32 ]		8060168	0					
ANR	8061206	ArrayIndexing	reorder_buffer [ 3 ] [ 6 ]		8060168	0					
ANR	8061207	ArrayIndexing	reorder_buffer [ 3 ]		8060168	0					
ANR	8061208	Identifier	reorder_buffer		8060168	0					
ANR	8061209	PrimaryExpression	3		8060168	1					
ANR	8061210	PrimaryExpression	6		8060168	1					
ANR	8061211	MultiplicativeExpression	7 * 32		8060168	1		*			
ANR	8061212	PrimaryExpression	7		8060168	0					
ANR	8061213	PrimaryExpression	32		8060168	1					
ANR	8061214	Statement	int	217:12:4274:4276	8060168	2	True				
ANR	8061215	ExpressionStatement	count [ 3 ] [ 6 ]	217:16:4278:4289	8060168	3	True				
ANR	8061216	ArrayIndexing	count [ 3 ] [ 6 ]		8060168	0					
ANR	8061217	ArrayIndexing	count [ 3 ]		8060168	0					
ANR	8061218	Identifier	count		8060168	0					
ANR	8061219	PrimaryExpression	3		8060168	1					
ANR	8061220	PrimaryExpression	6		8060168	1					
ANR	8061221	IdentifierDeclStatement	int offset = y * 16 * stride + x * 16 ;	219:12:4304:4341	8060168	4	True				
ANR	8061222	IdentifierDecl	offset = y * 16 * stride + x * 16		8060168	0					
ANR	8061223	IdentifierDeclType	int		8060168	0					
ANR	8061224	Identifier	offset		8060168	1					
ANR	8061225	AssignmentExpression	offset = y * 16 * stride + x * 16		8060168	2		=			
ANR	8061226	Identifier	offset		8060168	0					
ANR	8061227	AdditiveExpression	y * 16 * stride + x * 16		8060168	1		+			
ANR	8061228	MultiplicativeExpression	y * 16 * stride		8060168	0		*			
ANR	8061229	Identifier	y		8060168	0					
ANR	8061230	MultiplicativeExpression	16 * stride		8060168	1		*			
ANR	8061231	PrimaryExpression	16		8060168	0					
ANR	8061232	Identifier	stride		8060168	1					
ANR	8061233	MultiplicativeExpression	x * 16		8060168	1		*			
ANR	8061234	Identifier	x		8060168	0					
ANR	8061235	PrimaryExpression	16		8060168	1					
ANR	8061236	IdentifierDeclStatement	uint8_t * decoded = decoded_plane + offset ;	221:12:4356:4396	8060168	5	True				
ANR	8061237	IdentifierDecl	* decoded = decoded_plane + offset		8060168	0					
ANR	8061238	IdentifierDeclType	uint8_t *		8060168	0					
ANR	8061239	Identifier	decoded		8060168	1					
ANR	8061240	AssignmentExpression	* decoded = decoded_plane + offset		8060168	2		=			
ANR	8061241	Identifier	decoded		8060168	0					
ANR	8061242	AdditiveExpression	decoded_plane + offset		8060168	1		+			
ANR	8061243	Identifier	decoded_plane		8060168	0					
ANR	8061244	Identifier	offset		8060168	1					
ANR	8061245	IdentifierDeclStatement	uint8_t * ref = ref_plane + offset ;	223:12:4411:4443	8060168	6	True				
ANR	8061246	IdentifierDecl	* ref = ref_plane + offset		8060168	0					
ANR	8061247	IdentifierDeclType	uint8_t *		8060168	0					
ANR	8061248	Identifier	ref		8060168	1					
ANR	8061249	AssignmentExpression	* ref = ref_plane + offset		8060168	2		=			
ANR	8061250	Identifier	ref		8060168	0					
ANR	8061251	AdditiveExpression	ref_plane + offset		8060168	1		+			
ANR	8061252	Identifier	ref_plane		8060168	0					
ANR	8061253	Identifier	offset		8060168	1					
ANR	8061254	IdentifierDeclStatement	"int score [ 4 ] = { 0 , 0 , 0 , 0 } , best ;"	225:12:4458:4486	8060168	7	True				
ANR	8061255	IdentifierDecl	"score [ 4 ] = { 0 , 0 , 0 , 0 }"		8060168	0					
ANR	8061256	IdentifierDeclType	int [ 4 ]		8060168	0					
ANR	8061257	Identifier	score		8060168	1					
ANR	8061258	PrimaryExpression	4		8060168	2					
ANR	8061259	AssignmentExpression	"score [ 4 ] = { 0 , 0 , 0 , 0 }"		8060168	3		=			
ANR	8061260	Identifier	score		8060168	0					
ANR	8061261	InitializerList	0		8060168	1					
ANR	8061262	PrimaryExpression	0		8060168	0					
ANR	8061263	PrimaryExpression	0		8060168	1					
ANR	8061264	PrimaryExpression	0		8060168	2					
ANR	8061265	PrimaryExpression	0		8060168	3					
ANR	8061266	IdentifierDecl	best		8060168	1					
ANR	8061267	IdentifierDeclType	int		8060168	0					
ANR	8061268	Identifier	best		8060168	1					
ANR	8061269	IdentifierDeclStatement	uint8_t * temp = s -> scratchbuf ;	227:12:4501:4530	8060168	8	True				
ANR	8061270	IdentifierDecl	* temp = s -> scratchbuf		8060168	0					
ANR	8061271	IdentifierDeclType	uint8_t *		8060168	0					
ANR	8061272	Identifier	temp		8060168	1					
ANR	8061273	AssignmentExpression	* temp = s -> scratchbuf		8060168	2		=			
ANR	8061274	Identifier	temp		8060168	0					
ANR	8061275	PtrMemberAccess	s -> scratchbuf		8060168	1					
ANR	8061276	Identifier	s		8060168	0					
ANR	8061277	Identifier	scratchbuf		8060168	1					
ANR	8061278	IfStatement	if ( s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000 )		8060168	9					
ANR	8061279	Condition	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000	231:15:4550:4611	8060168	0	True				
ANR	8061280	RelationalExpression	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000		8060168	0		<			
ANR	8061281	AdditiveExpression	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 )		8060168	0		-			
ANR	8061282	MemberAccess	s -> pb . buf_end		8060168	0					
ANR	8061283	PtrMemberAccess	s -> pb		8060168	0					
ANR	8061284	Identifier	s		8060168	0					
ANR	8061285	Identifier	pb		8060168	1					
ANR	8061286	Identifier	buf_end		8060168	1					
ANR	8061287	AdditiveExpression	s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 )		8060168	1		-			
ANR	8061288	MemberAccess	s -> pb . buf		8060168	0					
ANR	8061289	PtrMemberAccess	s -> pb		8060168	0					
ANR	8061290	Identifier	s		8060168	0					
ANR	8061291	Identifier	pb		8060168	1					
ANR	8061292	Identifier	buf		8060168	1					
ANR	8061293	ShiftExpression	put_bits_count ( & s -> pb ) >> 3		8060168	1		>>			
ANR	8061294	CallExpression	put_bits_count ( & s -> pb )		8060168	0					
ANR	8061295	Callee	put_bits_count		8060168	0					
ANR	8061296	Identifier	put_bits_count		8060168	0					
ANR	8061297	ArgumentList	& s -> pb		8060168	1					
ANR	8061298	Argument	& s -> pb		8060168	0					
ANR	8061299	UnaryOperationExpression	& s -> pb		8060168	0					
ANR	8061300	UnaryOperator	&		8060168	0					
ANR	8061301	PtrMemberAccess	s -> pb		8060168	1					
ANR	8061302	Identifier	s		8060168	0					
ANR	8061303	Identifier	pb		8060168	1					
ANR	8061304	PrimaryExpression	3		8060168	1					
ANR	8061305	PrimaryExpression	3000		8060168	1					
ANR	8061306	CompoundStatement		227:78:4417:4417	8060168	1					
ANR	8061307	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"	233:16:4651:4710	8060168	0	True				
ANR	8061308	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"		8060168	0					
ANR	8061309	Callee	av_log		8060168	0					
ANR	8061310	Identifier	av_log		8060168	0					
ANR	8061311	ArgumentList	s -> avctx		8060168	1					
ANR	8061312	Argument	s -> avctx		8060168	0					
ANR	8061313	PtrMemberAccess	s -> avctx		8060168	0					
ANR	8061314	Identifier	s		8060168	0					
ANR	8061315	Identifier	avctx		8060168	1					
ANR	8061316	Argument	AV_LOG_ERROR		8060168	1					
ANR	8061317	Identifier	AV_LOG_ERROR		8060168	0					
ANR	8061318	Argument	"""encoded frame too large\\n"""		8060168	2					
ANR	8061319	PrimaryExpression	"""encoded frame too large\\n"""		8060168	0					
ANR	8061320	ReturnStatement	return - 1 ;	235:16:4729:4738	8060168	1	True				
ANR	8061321	UnaryOperationExpression	- 1		8060168	0					
ANR	8061322	UnaryOperator	-		8060168	0					
ANR	8061323	PrimaryExpression	1		8060168	1					
ANR	8061324	ExpressionStatement	s -> m . mb_x = x	241:12:4770:4782	8060168	10	True				
ANR	8061325	AssignmentExpression	s -> m . mb_x = x		8060168	0		=			
ANR	8061326	MemberAccess	s -> m . mb_x		8060168	0					
ANR	8061327	PtrMemberAccess	s -> m		8060168	0					
ANR	8061328	Identifier	s		8060168	0					
ANR	8061329	Identifier	m		8060168	1					
ANR	8061330	Identifier	mb_x		8060168	1					
ANR	8061331	Identifier	x		8060168	1					
ANR	8061332	ExpressionStatement	ff_init_block_index ( & s -> m )	243:12:4797:4823	8060168	11	True				
ANR	8061333	CallExpression	ff_init_block_index ( & s -> m )		8060168	0					
ANR	8061334	Callee	ff_init_block_index		8060168	0					
ANR	8061335	Identifier	ff_init_block_index		8060168	0					
ANR	8061336	ArgumentList	& s -> m		8060168	1					
ANR	8061337	Argument	& s -> m		8060168	0					
ANR	8061338	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061339	UnaryOperator	&		8060168	0					
ANR	8061340	PtrMemberAccess	s -> m		8060168	1					
ANR	8061341	Identifier	s		8060168	0					
ANR	8061342	Identifier	m		8060168	1					
ANR	8061343	ExpressionStatement	ff_update_block_index ( & s -> m )	245:12:4838:4866	8060168	12	True				
ANR	8061344	CallExpression	ff_update_block_index ( & s -> m )		8060168	0					
ANR	8061345	Callee	ff_update_block_index		8060168	0					
ANR	8061346	Identifier	ff_update_block_index		8060168	0					
ANR	8061347	ArgumentList	& s -> m		8060168	1					
ANR	8061348	Argument	& s -> m		8060168	0					
ANR	8061349	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061350	UnaryOperator	&		8060168	0					
ANR	8061351	PtrMemberAccess	s -> m		8060168	1					
ANR	8061352	Identifier	s		8060168	0					
ANR	8061353	Identifier	m		8060168	1					
ANR	8061354	IfStatement	if ( s -> picture . pict_type == FF_I_TYPE || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA ) )		8060168	13					
ANR	8061355	Condition	s -> picture . pict_type == FF_I_TYPE || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA )	249:15:4886:4982	8060168	0	True				
ANR	8061356	OrExpression	s -> picture . pict_type == FF_I_TYPE || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA )		8060168	0		||			
ANR	8061357	EqualityExpression	s -> picture . pict_type == FF_I_TYPE		8060168	0		==			
ANR	8061358	MemberAccess	s -> picture . pict_type		8060168	0					
ANR	8061359	PtrMemberAccess	s -> picture		8060168	0					
ANR	8061360	Identifier	s		8060168	0					
ANR	8061361	Identifier	picture		8060168	1					
ANR	8061362	Identifier	pict_type		8060168	1					
ANR	8061363	Identifier	FF_I_TYPE		8060168	1					
ANR	8061364	BitAndExpression	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA		8060168	1		&			
ANR	8061365	ArrayIndexing	s -> m . mb_type [ x + y * s -> m . mb_stride ]		8060168	0					
ANR	8061366	MemberAccess	s -> m . mb_type		8060168	0					
ANR	8061367	PtrMemberAccess	s -> m		8060168	0					
ANR	8061368	Identifier	s		8060168	0					
ANR	8061369	Identifier	m		8060168	1					
ANR	8061370	Identifier	mb_type		8060168	1					
ANR	8061371	AdditiveExpression	x + y * s -> m . mb_stride		8060168	1		+			
ANR	8061372	Identifier	x		8060168	0					
ANR	8061373	MultiplicativeExpression	y * s -> m . mb_stride		8060168	1		*			
ANR	8061374	Identifier	y		8060168	0					
ANR	8061375	MemberAccess	s -> m . mb_stride		8060168	1					
ANR	8061376	PtrMemberAccess	s -> m		8060168	0					
ANR	8061377	Identifier	s		8060168	0					
ANR	8061378	Identifier	m		8060168	1					
ANR	8061379	Identifier	mb_stride		8060168	1					
ANR	8061380	Identifier	CANDIDATE_MB_TYPE_INTRA		8060168	1					
ANR	8061381	CompoundStatement		245:113:4788:4788	8060168	1					
ANR	8061382	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8060168	0					
ANR	8061383	ForInit	i = 0 ;	251:20:5007:5010	8060168	0	True				
ANR	8061384	AssignmentExpression	i = 0		8060168	0		=			
ANR	8061385	Identifier	i		8060168	0					
ANR	8061386	PrimaryExpression	0		8060168	1					
ANR	8061387	Condition	i < 6	251:25:5012:5014	8060168	1	True				
ANR	8061388	RelationalExpression	i < 6		8060168	0		<			
ANR	8061389	Identifier	i		8060168	0					
ANR	8061390	PrimaryExpression	6		8060168	1					
ANR	8061391	PostIncDecOperationExpression	i ++	251:30:5017:5019	8060168	2	True				
ANR	8061392	Identifier	i		8060168	0					
ANR	8061393	IncDec	++		8060168	1					
ANR	8061394	CompoundStatement		247:34:4825:4825	8060168	3					
ANR	8061395	ExpressionStatement	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 0 ] [ i ] , 7 * 32 )"	253:20:5044:5104	8060168	0	True				
ANR	8061396	CallExpression	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 0 ] [ i ] , 7 * 32 )"		8060168	0					
ANR	8061397	Callee	init_put_bits		8060168	0					
ANR	8061398	Identifier	init_put_bits		8060168	0					
ANR	8061399	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8061400	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061401	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061402	UnaryOperator	&		8060168	0					
ANR	8061403	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8061404	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061405	Identifier	s		8060168	0					
ANR	8061406	Identifier	reorder_pb		8060168	1					
ANR	8061407	Identifier	i		8060168	1					
ANR	8061408	Argument	reorder_buffer [ 0 ] [ i ]		8060168	1					
ANR	8061409	ArrayIndexing	reorder_buffer [ 0 ] [ i ]		8060168	0					
ANR	8061410	ArrayIndexing	reorder_buffer [ 0 ]		8060168	0					
ANR	8061411	Identifier	reorder_buffer		8060168	0					
ANR	8061412	PrimaryExpression	0		8060168	1					
ANR	8061413	Identifier	i		8060168	1					
ANR	8061414	Argument	7 * 32		8060168	2					
ANR	8061415	MultiplicativeExpression	7 * 32		8060168	0		*			
ANR	8061416	PrimaryExpression	7		8060168	0					
ANR	8061417	PrimaryExpression	32		8060168	1					
ANR	8061418	IfStatement	if ( s -> picture . pict_type == FF_P_TYPE )		8060168	1					
ANR	8061419	Condition	s -> picture . pict_type == FF_P_TYPE	257:19:5145:5177	8060168	0	True				
ANR	8061420	EqualityExpression	s -> picture . pict_type == FF_P_TYPE		8060168	0		==			
ANR	8061421	MemberAccess	s -> picture . pict_type		8060168	0					
ANR	8061422	PtrMemberAccess	s -> picture		8060168	0					
ANR	8061423	Identifier	s		8060168	0					
ANR	8061424	Identifier	picture		8060168	1					
ANR	8061425	Identifier	pict_type		8060168	1					
ANR	8061426	Identifier	FF_P_TYPE		8060168	1					
ANR	8061427	CompoundStatement		255:20:5006:5066	8060168	1					
ANR	8061428	IdentifierDeclStatement	const uint8_t * vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ] ;	259:20:5202:5262	8060168	0	True				
ANR	8061429	IdentifierDecl	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8060168	0					
ANR	8061430	IdentifierDeclType	const uint8_t *		8060168	0					
ANR	8061431	Identifier	vlc		8060168	1					
ANR	8061432	AssignmentExpression	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8060168	2		=			
ANR	8061433	Identifier	vlc		8060168	0					
ANR	8061434	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8060168	1					
ANR	8061435	Identifier	ff_svq1_block_type_vlc		8060168	0					
ANR	8061436	Identifier	SVQ1_BLOCK_INTRA		8060168	1					
ANR	8061437	ExpressionStatement	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"	261:20:5285:5328	8060168	1	True				
ANR	8061438	CallExpression	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"		8060168	0					
ANR	8061439	Callee	put_bits		8060168	0					
ANR	8061440	Identifier	put_bits		8060168	0					
ANR	8061441	ArgumentList	& s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061442	Argument	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061443	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061444	UnaryOperator	&		8060168	0					
ANR	8061445	ArrayIndexing	s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061446	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061447	Identifier	s		8060168	0					
ANR	8061448	Identifier	reorder_pb		8060168	1					
ANR	8061449	PrimaryExpression	5		8060168	1					
ANR	8061450	Argument	vlc [ 1 ]		8060168	1					
ANR	8061451	ArrayIndexing	vlc [ 1 ]		8060168	0					
ANR	8061452	Identifier	vlc		8060168	0					
ANR	8061453	PrimaryExpression	1		8060168	1					
ANR	8061454	Argument	vlc [ 0 ]		8060168	2					
ANR	8061455	ArrayIndexing	vlc [ 0 ]		8060168	0					
ANR	8061456	Identifier	vlc		8060168	0					
ANR	8061457	PrimaryExpression	0		8060168	1					
ANR	8061458	ExpressionStatement	score [ 0 ] = vlc [ 1 ] * lambda	263:20:5351:5374	8060168	2	True				
ANR	8061459	AssignmentExpression	score [ 0 ] = vlc [ 1 ] * lambda		8060168	0		=			
ANR	8061460	ArrayIndexing	score [ 0 ]		8060168	0					
ANR	8061461	Identifier	score		8060168	0					
ANR	8061462	PrimaryExpression	0		8060168	1					
ANR	8061463	MultiplicativeExpression	vlc [ 1 ] * lambda		8060168	1		*			
ANR	8061464	ArrayIndexing	vlc [ 1 ]		8060168	0					
ANR	8061465	Identifier	vlc		8060168	0					
ANR	8061466	PrimaryExpression	1		8060168	1					
ANR	8061467	Identifier	lambda		8060168	1					
ANR	8061468	ExpressionStatement	"score [ 0 ] += encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"	267:16:5412:5486	8060168	2	True				
ANR	8061469	AssignmentExpression	"score [ 0 ] += encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"		8060168	0		+=			
ANR	8061470	ArrayIndexing	score [ 0 ]		8060168	0					
ANR	8061471	Identifier	score		8060168	0					
ANR	8061472	PrimaryExpression	0		8060168	1					
ANR	8061473	CallExpression	"encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"		8060168	1					
ANR	8061474	Callee	encode_block		8060168	0					
ANR	8061475	Identifier	encode_block		8060168	0					
ANR	8061476	ArgumentList	s		8060168	1					
ANR	8061477	Argument	s		8060168	0					
ANR	8061478	Identifier	s		8060168	0					
ANR	8061479	Argument	src + 16 * x		8060168	1					
ANR	8061480	AdditiveExpression	src + 16 * x		8060168	0		+			
ANR	8061481	Identifier	src		8060168	0					
ANR	8061482	MultiplicativeExpression	16 * x		8060168	1		*			
ANR	8061483	PrimaryExpression	16		8060168	0					
ANR	8061484	Identifier	x		8060168	1					
ANR	8061485	Argument	NULL		8060168	2					
ANR	8061486	Identifier	NULL		8060168	0					
ANR	8061487	Argument	temp		8060168	3					
ANR	8061488	Identifier	temp		8060168	0					
ANR	8061489	Argument	stride		8060168	4					
ANR	8061490	Identifier	stride		8060168	0					
ANR	8061491	Argument	5		8060168	5					
ANR	8061492	PrimaryExpression	5		8060168	0					
ANR	8061493	Argument	64		8060168	6					
ANR	8061494	PrimaryExpression	64		8060168	0					
ANR	8061495	Argument	lambda		8060168	7					
ANR	8061496	Identifier	lambda		8060168	0					
ANR	8061497	Argument	1		8060168	8					
ANR	8061498	PrimaryExpression	1		8060168	0					
ANR	8061499	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8060168	3					
ANR	8061500	ForInit	i = 0 ;	269:20:5509:5512	8060168	0	True				
ANR	8061501	AssignmentExpression	i = 0		8060168	0		=			
ANR	8061502	Identifier	i		8060168	0					
ANR	8061503	PrimaryExpression	0		8060168	1					
ANR	8061504	Condition	i < 6	269:25:5514:5516	8060168	1	True				
ANR	8061505	RelationalExpression	i < 6		8060168	0		<			
ANR	8061506	Identifier	i		8060168	0					
ANR	8061507	PrimaryExpression	6		8060168	1					
ANR	8061508	PostIncDecOperationExpression	i ++	269:30:5519:5521	8060168	2	True				
ANR	8061509	Identifier	i		8060168	0					
ANR	8061510	IncDec	++		8060168	1					
ANR	8061511	CompoundStatement		265:34:5327:5327	8060168	3					
ANR	8061512	ExpressionStatement	count [ 0 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )	271:20:5546:5592	8060168	0	True				
ANR	8061513	AssignmentExpression	count [ 0 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )		8060168	0		=			
ANR	8061514	ArrayIndexing	count [ 0 ] [ i ]		8060168	0					
ANR	8061515	ArrayIndexing	count [ 0 ]		8060168	0					
ANR	8061516	Identifier	count		8060168	0					
ANR	8061517	PrimaryExpression	0		8060168	1					
ANR	8061518	Identifier	i		8060168	1					
ANR	8061519	CallExpression	put_bits_count ( & s -> reorder_pb [ i ] )		8060168	1					
ANR	8061520	Callee	put_bits_count		8060168	0					
ANR	8061521	Identifier	put_bits_count		8060168	0					
ANR	8061522	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8061523	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061524	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061525	UnaryOperator	&		8060168	0					
ANR	8061526	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8061527	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061528	Identifier	s		8060168	0					
ANR	8061529	Identifier	reorder_pb		8060168	1					
ANR	8061530	Identifier	i		8060168	1					
ANR	8061531	ExpressionStatement	flush_put_bits ( & s -> reorder_pb [ i ] )	273:20:5615:5648	8060168	1	True				
ANR	8061532	CallExpression	flush_put_bits ( & s -> reorder_pb [ i ] )		8060168	0					
ANR	8061533	Callee	flush_put_bits		8060168	0					
ANR	8061534	Identifier	flush_put_bits		8060168	0					
ANR	8061535	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8061536	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061537	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061538	UnaryOperator	&		8060168	0					
ANR	8061539	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8061540	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061541	Identifier	s		8060168	0					
ANR	8061542	Identifier	reorder_pb		8060168	1					
ANR	8061543	Identifier	i		8060168	1					
ANR	8061544	ElseStatement	else		8060168	0					
ANR	8061545	ExpressionStatement	score [ 0 ] = INT_MAX	279:16:5705:5722	8060168	0	True				
ANR	8061546	AssignmentExpression	score [ 0 ] = INT_MAX		8060168	0		=			
ANR	8061547	ArrayIndexing	score [ 0 ]		8060168	0					
ANR	8061548	Identifier	score		8060168	0					
ANR	8061549	PrimaryExpression	0		8060168	1					
ANR	8061550	Identifier	INT_MAX		8060168	1					
ANR	8061551	ExpressionStatement	best = 0	283:12:5739:5745	8060168	14	True				
ANR	8061552	AssignmentExpression	best = 0		8060168	0		=			
ANR	8061553	Identifier	best		8060168	0					
ANR	8061554	PrimaryExpression	0		8060168	1					
ANR	8061555	IfStatement	if ( s -> picture . pict_type == FF_P_TYPE )		8060168	15					
ANR	8061556	Condition	s -> picture . pict_type == FF_P_TYPE	287:15:5765:5797	8060168	0	True				
ANR	8061557	EqualityExpression	s -> picture . pict_type == FF_P_TYPE		8060168	0		==			
ANR	8061558	MemberAccess	s -> picture . pict_type		8060168	0					
ANR	8061559	PtrMemberAccess	s -> picture		8060168	0					
ANR	8061560	Identifier	s		8060168	0					
ANR	8061561	Identifier	picture		8060168	1					
ANR	8061562	Identifier	pict_type		8060168	1					
ANR	8061563	Identifier	FF_P_TYPE		8060168	1					
ANR	8061564	CompoundStatement		289:16:5751:5770	8060168	1					
ANR	8061565	IdentifierDeclStatement	const uint8_t * vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ] ;	289:16:5818:5878	8060168	0	True				
ANR	8061566	IdentifierDecl	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8060168	0					
ANR	8061567	IdentifierDeclType	const uint8_t *		8060168	0					
ANR	8061568	Identifier	vlc		8060168	1					
ANR	8061569	AssignmentExpression	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8060168	2		=			
ANR	8061570	Identifier	vlc		8060168	0					
ANR	8061571	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8060168	1					
ANR	8061572	Identifier	ff_svq1_block_type_vlc		8060168	0					
ANR	8061573	Identifier	SVQ1_BLOCK_INTER		8060168	1					
ANR	8061574	IdentifierDeclStatement	"int mx , my , pred_x , pred_y , dxy ;"	291:16:5897:5928	8060168	1	True				
ANR	8061575	IdentifierDecl	mx		8060168	0					
ANR	8061576	IdentifierDeclType	int		8060168	0					
ANR	8061577	Identifier	mx		8060168	1					
ANR	8061578	IdentifierDecl	my		8060168	1					
ANR	8061579	IdentifierDeclType	int		8060168	0					
ANR	8061580	Identifier	my		8060168	1					
ANR	8061581	IdentifierDecl	pred_x		8060168	2					
ANR	8061582	IdentifierDeclType	int		8060168	0					
ANR	8061583	Identifier	pred_x		8060168	1					
ANR	8061584	IdentifierDecl	pred_y		8060168	3					
ANR	8061585	IdentifierDeclType	int		8060168	0					
ANR	8061586	Identifier	pred_y		8060168	1					
ANR	8061587	IdentifierDecl	dxy		8060168	4					
ANR	8061588	IdentifierDeclType	int		8060168	0					
ANR	8061589	Identifier	dxy		8060168	1					
ANR	8061590	IdentifierDeclStatement	int16_t * motion_ptr ;	293:16:5947:5966	8060168	2	True				
ANR	8061591	IdentifierDecl	* motion_ptr		8060168	0					
ANR	8061592	IdentifierDeclType	int16_t *		8060168	0					
ANR	8061593	Identifier	motion_ptr		8060168	1					
ANR	8061594	ExpressionStatement	"motion_ptr = h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"	297:16:5987:6046	8060168	3	True				
ANR	8061595	AssignmentExpression	"motion_ptr = h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"		8060168	0		=			
ANR	8061596	Identifier	motion_ptr		8060168	0					
ANR	8061597	CallExpression	"h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"		8060168	1					
ANR	8061598	Callee	h263_pred_motion		8060168	0					
ANR	8061599	Identifier	h263_pred_motion		8060168	0					
ANR	8061600	ArgumentList	& s -> m		8060168	1					
ANR	8061601	Argument	& s -> m		8060168	0					
ANR	8061602	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061603	UnaryOperator	&		8060168	0					
ANR	8061604	PtrMemberAccess	s -> m		8060168	1					
ANR	8061605	Identifier	s		8060168	0					
ANR	8061606	Identifier	m		8060168	1					
ANR	8061607	Argument	0		8060168	1					
ANR	8061608	PrimaryExpression	0		8060168	0					
ANR	8061609	Argument	0		8060168	2					
ANR	8061610	PrimaryExpression	0		8060168	0					
ANR	8061611	Argument	& pred_x		8060168	3					
ANR	8061612	UnaryOperationExpression	& pred_x		8060168	0					
ANR	8061613	UnaryOperator	&		8060168	0					
ANR	8061614	Identifier	pred_x		8060168	1					
ANR	8061615	Argument	& pred_y		8060168	4					
ANR	8061616	UnaryOperationExpression	& pred_y		8060168	0					
ANR	8061617	UnaryOperator	&		8060168	0					
ANR	8061618	Identifier	pred_y		8060168	1					
ANR	8061619	IfStatement	if ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER )		8060168	4					
ANR	8061620	Condition	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER	299:19:6068:6125	8060168	0	True				
ANR	8061621	BitAndExpression	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER		8060168	0		&			
ANR	8061622	ArrayIndexing	s -> m . mb_type [ x + y * s -> m . mb_stride ]		8060168	0					
ANR	8061623	MemberAccess	s -> m . mb_type		8060168	0					
ANR	8061624	PtrMemberAccess	s -> m		8060168	0					
ANR	8061625	Identifier	s		8060168	0					
ANR	8061626	Identifier	m		8060168	1					
ANR	8061627	Identifier	mb_type		8060168	1					
ANR	8061628	AdditiveExpression	x + y * s -> m . mb_stride		8060168	1		+			
ANR	8061629	Identifier	x		8060168	0					
ANR	8061630	MultiplicativeExpression	y * s -> m . mb_stride		8060168	1		*			
ANR	8061631	Identifier	y		8060168	0					
ANR	8061632	MemberAccess	s -> m . mb_stride		8060168	1					
ANR	8061633	PtrMemberAccess	s -> m		8060168	0					
ANR	8061634	Identifier	s		8060168	0					
ANR	8061635	Identifier	m		8060168	1					
ANR	8061636	Identifier	mb_stride		8060168	1					
ANR	8061637	Identifier	CANDIDATE_MB_TYPE_INTER		8060168	1					
ANR	8061638	CompoundStatement		295:78:5931:5931	8060168	1					
ANR	8061639	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8060168	0					
ANR	8061640	ForInit	i = 0 ;	301:24:6154:6157	8060168	0	True				
ANR	8061641	AssignmentExpression	i = 0		8060168	0		=			
ANR	8061642	Identifier	i		8060168	0					
ANR	8061643	PrimaryExpression	0		8060168	1					
ANR	8061644	Condition	i < 6	301:29:6159:6161	8060168	1	True				
ANR	8061645	RelationalExpression	i < 6		8060168	0		<			
ANR	8061646	Identifier	i		8060168	0					
ANR	8061647	PrimaryExpression	6		8060168	1					
ANR	8061648	PostIncDecOperationExpression	i ++	301:34:6164:6166	8060168	2	True				
ANR	8061649	Identifier	i		8060168	0					
ANR	8061650	IncDec	++		8060168	1					
ANR	8061651	ExpressionStatement	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 1 ] [ i ] , 7 * 32 )"	303:24:6194:6254	8060168	3	True				
ANR	8061652	CallExpression	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 1 ] [ i ] , 7 * 32 )"		8060168	0					
ANR	8061653	Callee	init_put_bits		8060168	0					
ANR	8061654	Identifier	init_put_bits		8060168	0					
ANR	8061655	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8061656	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061657	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8061658	UnaryOperator	&		8060168	0					
ANR	8061659	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8061660	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061661	Identifier	s		8060168	0					
ANR	8061662	Identifier	reorder_pb		8060168	1					
ANR	8061663	Identifier	i		8060168	1					
ANR	8061664	Argument	reorder_buffer [ 1 ] [ i ]		8060168	1					
ANR	8061665	ArrayIndexing	reorder_buffer [ 1 ] [ i ]		8060168	0					
ANR	8061666	ArrayIndexing	reorder_buffer [ 1 ]		8060168	0					
ANR	8061667	Identifier	reorder_buffer		8060168	0					
ANR	8061668	PrimaryExpression	1		8060168	1					
ANR	8061669	Identifier	i		8060168	1					
ANR	8061670	Argument	7 * 32		8060168	2					
ANR	8061671	MultiplicativeExpression	7 * 32		8060168	0		*			
ANR	8061672	PrimaryExpression	7		8060168	0					
ANR	8061673	PrimaryExpression	32		8060168	1					
ANR	8061674	ExpressionStatement	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"	307:20:6279:6322	8060168	1	True				
ANR	8061675	CallExpression	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"		8060168	0					
ANR	8061676	Callee	put_bits		8060168	0					
ANR	8061677	Identifier	put_bits		8060168	0					
ANR	8061678	ArgumentList	& s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061679	Argument	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061680	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061681	UnaryOperator	&		8060168	0					
ANR	8061682	ArrayIndexing	s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061683	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061684	Identifier	s		8060168	0					
ANR	8061685	Identifier	reorder_pb		8060168	1					
ANR	8061686	PrimaryExpression	5		8060168	1					
ANR	8061687	Argument	vlc [ 1 ]		8060168	1					
ANR	8061688	ArrayIndexing	vlc [ 1 ]		8060168	0					
ANR	8061689	Identifier	vlc		8060168	0					
ANR	8061690	PrimaryExpression	1		8060168	1					
ANR	8061691	Argument	vlc [ 0 ]		8060168	2					
ANR	8061692	ArrayIndexing	vlc [ 0 ]		8060168	0					
ANR	8061693	Identifier	vlc		8060168	0					
ANR	8061694	PrimaryExpression	0		8060168	1					
ANR	8061695	ExpressionStatement	s -> m . pb = s -> reorder_pb [ 5 ]	311:20:6347:6372	8060168	2	True				
ANR	8061696	AssignmentExpression	s -> m . pb = s -> reorder_pb [ 5 ]		8060168	0		=			
ANR	8061697	MemberAccess	s -> m . pb		8060168	0					
ANR	8061698	PtrMemberAccess	s -> m		8060168	0					
ANR	8061699	Identifier	s		8060168	0					
ANR	8061700	Identifier	m		8060168	1					
ANR	8061701	Identifier	pb		8060168	1					
ANR	8061702	ArrayIndexing	s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061703	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061704	Identifier	s		8060168	0					
ANR	8061705	Identifier	reorder_pb		8060168	1					
ANR	8061706	PrimaryExpression	5		8060168	1					
ANR	8061707	ExpressionStatement	mx = motion_ptr [ 0 ]	313:20:6395:6412	8060168	3	True				
ANR	8061708	AssignmentExpression	mx = motion_ptr [ 0 ]		8060168	0		=			
ANR	8061709	Identifier	mx		8060168	0					
ANR	8061710	ArrayIndexing	motion_ptr [ 0 ]		8060168	1					
ANR	8061711	Identifier	motion_ptr		8060168	0					
ANR	8061712	PrimaryExpression	0		8060168	1					
ANR	8061713	ExpressionStatement	my = motion_ptr [ 1 ]	315:20:6435:6452	8060168	4	True				
ANR	8061714	AssignmentExpression	my = motion_ptr [ 1 ]		8060168	0		=			
ANR	8061715	Identifier	my		8060168	0					
ANR	8061716	ArrayIndexing	motion_ptr [ 1 ]		8060168	1					
ANR	8061717	Identifier	motion_ptr		8060168	0					
ANR	8061718	PrimaryExpression	1		8060168	1					
ANR	8061719	ExpressionStatement	assert ( mx >= - 32 && mx <= 31 )	317:20:6475:6500	8060168	5	True				
ANR	8061720	CallExpression	assert ( mx >= - 32 && mx <= 31 )		8060168	0					
ANR	8061721	Callee	assert		8060168	0					
ANR	8061722	Identifier	assert		8060168	0					
ANR	8061723	ArgumentList	mx >= - 32 && mx <= 31		8060168	1					
ANR	8061724	Argument	mx >= - 32 && mx <= 31		8060168	0					
ANR	8061725	AndExpression	mx >= - 32 && mx <= 31		8060168	0		&&			
ANR	8061726	RelationalExpression	mx >= - 32		8060168	0		>=			
ANR	8061727	Identifier	mx		8060168	0					
ANR	8061728	UnaryOperationExpression	- 32		8060168	1					
ANR	8061729	UnaryOperator	-		8060168	0					
ANR	8061730	PrimaryExpression	32		8060168	1					
ANR	8061731	RelationalExpression	mx <= 31		8060168	1		<=			
ANR	8061732	Identifier	mx		8060168	0					
ANR	8061733	PrimaryExpression	31		8060168	1					
ANR	8061734	ExpressionStatement	assert ( my >= - 32 && my <= 31 )	319:20:6523:6548	8060168	6	True				
ANR	8061735	CallExpression	assert ( my >= - 32 && my <= 31 )		8060168	0					
ANR	8061736	Callee	assert		8060168	0					
ANR	8061737	Identifier	assert		8060168	0					
ANR	8061738	ArgumentList	my >= - 32 && my <= 31		8060168	1					
ANR	8061739	Argument	my >= - 32 && my <= 31		8060168	0					
ANR	8061740	AndExpression	my >= - 32 && my <= 31		8060168	0		&&			
ANR	8061741	RelationalExpression	my >= - 32		8060168	0		>=			
ANR	8061742	Identifier	my		8060168	0					
ANR	8061743	UnaryOperationExpression	- 32		8060168	1					
ANR	8061744	UnaryOperator	-		8060168	0					
ANR	8061745	PrimaryExpression	32		8060168	1					
ANR	8061746	RelationalExpression	my <= 31		8060168	1		<=			
ANR	8061747	Identifier	my		8060168	0					
ANR	8061748	PrimaryExpression	31		8060168	1					
ANR	8061749	ExpressionStatement	assert ( pred_x >= - 32 && pred_x <= 31 )	321:20:6571:6604	8060168	7	True				
ANR	8061750	CallExpression	assert ( pred_x >= - 32 && pred_x <= 31 )		8060168	0					
ANR	8061751	Callee	assert		8060168	0					
ANR	8061752	Identifier	assert		8060168	0					
ANR	8061753	ArgumentList	pred_x >= - 32 && pred_x <= 31		8060168	1					
ANR	8061754	Argument	pred_x >= - 32 && pred_x <= 31		8060168	0					
ANR	8061755	AndExpression	pred_x >= - 32 && pred_x <= 31		8060168	0		&&			
ANR	8061756	RelationalExpression	pred_x >= - 32		8060168	0		>=			
ANR	8061757	Identifier	pred_x		8060168	0					
ANR	8061758	UnaryOperationExpression	- 32		8060168	1					
ANR	8061759	UnaryOperator	-		8060168	0					
ANR	8061760	PrimaryExpression	32		8060168	1					
ANR	8061761	RelationalExpression	pred_x <= 31		8060168	1		<=			
ANR	8061762	Identifier	pred_x		8060168	0					
ANR	8061763	PrimaryExpression	31		8060168	1					
ANR	8061764	ExpressionStatement	assert ( pred_y >= - 32 && pred_y <= 31 )	323:20:6627:6660	8060168	8	True				
ANR	8061765	CallExpression	assert ( pred_y >= - 32 && pred_y <= 31 )		8060168	0					
ANR	8061766	Callee	assert		8060168	0					
ANR	8061767	Identifier	assert		8060168	0					
ANR	8061768	ArgumentList	pred_y >= - 32 && pred_y <= 31		8060168	1					
ANR	8061769	Argument	pred_y >= - 32 && pred_y <= 31		8060168	0					
ANR	8061770	AndExpression	pred_y >= - 32 && pred_y <= 31		8060168	0		&&			
ANR	8061771	RelationalExpression	pred_y >= - 32		8060168	0		>=			
ANR	8061772	Identifier	pred_y		8060168	0					
ANR	8061773	UnaryOperationExpression	- 32		8060168	1					
ANR	8061774	UnaryOperator	-		8060168	0					
ANR	8061775	PrimaryExpression	32		8060168	1					
ANR	8061776	RelationalExpression	pred_y <= 31		8060168	1		<=			
ANR	8061777	Identifier	pred_y		8060168	0					
ANR	8061778	PrimaryExpression	31		8060168	1					
ANR	8061779	ExpressionStatement	"ff_h263_encode_motion ( & s -> m , mx - pred_x , 1 )"	325:20:6683:6727	8060168	9	True				
ANR	8061780	CallExpression	"ff_h263_encode_motion ( & s -> m , mx - pred_x , 1 )"		8060168	0					
ANR	8061781	Callee	ff_h263_encode_motion		8060168	0					
ANR	8061782	Identifier	ff_h263_encode_motion		8060168	0					
ANR	8061783	ArgumentList	& s -> m		8060168	1					
ANR	8061784	Argument	& s -> m		8060168	0					
ANR	8061785	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061786	UnaryOperator	&		8060168	0					
ANR	8061787	PtrMemberAccess	s -> m		8060168	1					
ANR	8061788	Identifier	s		8060168	0					
ANR	8061789	Identifier	m		8060168	1					
ANR	8061790	Argument	mx - pred_x		8060168	1					
ANR	8061791	AdditiveExpression	mx - pred_x		8060168	0		-			
ANR	8061792	Identifier	mx		8060168	0					
ANR	8061793	Identifier	pred_x		8060168	1					
ANR	8061794	Argument	1		8060168	2					
ANR	8061795	PrimaryExpression	1		8060168	0					
ANR	8061796	ExpressionStatement	"ff_h263_encode_motion ( & s -> m , my - pred_y , 1 )"	327:20:6750:6794	8060168	10	True				
ANR	8061797	CallExpression	"ff_h263_encode_motion ( & s -> m , my - pred_y , 1 )"		8060168	0					
ANR	8061798	Callee	ff_h263_encode_motion		8060168	0					
ANR	8061799	Identifier	ff_h263_encode_motion		8060168	0					
ANR	8061800	ArgumentList	& s -> m		8060168	1					
ANR	8061801	Argument	& s -> m		8060168	0					
ANR	8061802	UnaryOperationExpression	& s -> m		8060168	0					
ANR	8061803	UnaryOperator	&		8060168	0					
ANR	8061804	PtrMemberAccess	s -> m		8060168	1					
ANR	8061805	Identifier	s		8060168	0					
ANR	8061806	Identifier	m		8060168	1					
ANR	8061807	Argument	my - pred_y		8060168	1					
ANR	8061808	AdditiveExpression	my - pred_y		8060168	0		-			
ANR	8061809	Identifier	my		8060168	0					
ANR	8061810	Identifier	pred_y		8060168	1					
ANR	8061811	Argument	1		8060168	2					
ANR	8061812	PrimaryExpression	1		8060168	0					
ANR	8061813	ExpressionStatement	s -> reorder_pb [ 5 ] = s -> m . pb	329:20:6817:6842	8060168	11	True				
ANR	8061814	AssignmentExpression	s -> reorder_pb [ 5 ] = s -> m . pb		8060168	0		=			
ANR	8061815	ArrayIndexing	s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061816	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061817	Identifier	s		8060168	0					
ANR	8061818	Identifier	reorder_pb		8060168	1					
ANR	8061819	PrimaryExpression	5		8060168	1					
ANR	8061820	MemberAccess	s -> m . pb		8060168	1					
ANR	8061821	PtrMemberAccess	s -> m		8060168	0					
ANR	8061822	Identifier	s		8060168	0					
ANR	8061823	Identifier	m		8060168	1					
ANR	8061824	Identifier	pb		8060168	1					
ANR	8061825	ExpressionStatement	score [ 1 ] += lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )	331:20:6865:6917	8060168	12	True				
ANR	8061826	AssignmentExpression	score [ 1 ] += lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )		8060168	0		+=			
ANR	8061827	ArrayIndexing	score [ 1 ]		8060168	0					
ANR	8061828	Identifier	score		8060168	0					
ANR	8061829	PrimaryExpression	1		8060168	1					
ANR	8061830	MultiplicativeExpression	lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )		8060168	1		*			
ANR	8061831	Identifier	lambda		8060168	0					
ANR	8061832	CallExpression	put_bits_count ( & s -> reorder_pb [ 5 ] )		8060168	1					
ANR	8061833	Callee	put_bits_count		8060168	0					
ANR	8061834	Identifier	put_bits_count		8060168	0					
ANR	8061835	ArgumentList	& s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061836	Argument	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061837	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8060168	0					
ANR	8061838	UnaryOperator	&		8060168	0					
ANR	8061839	ArrayIndexing	s -> reorder_pb [ 5 ]		8060168	1					
ANR	8061840	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8061841	Identifier	s		8060168	0					
ANR	8061842	Identifier	reorder_pb		8060168	1					
ANR	8061843	PrimaryExpression	5		8060168	1					
ANR	8061844	ExpressionStatement	dxy = ( mx & 1 ) + 2 * ( my & 1 )	335:20:6942:6964	8060168	13	True				
ANR	8061845	AssignmentExpression	dxy = ( mx & 1 ) + 2 * ( my & 1 )		8060168	0		=			
ANR	8061846	Identifier	dxy		8060168	0					
ANR	8061847	AdditiveExpression	( mx & 1 ) + 2 * ( my & 1 )		8060168	1		+			
ANR	8061848	BitAndExpression	mx & 1		8060168	0		&			
ANR	8061849	Identifier	mx		8060168	0					
ANR	8061850	PrimaryExpression	1		8060168	1					
ANR	8061851	MultiplicativeExpression	2 * ( my & 1 )		8060168	1		*			
ANR	8061852	PrimaryExpression	2		8060168	0					
ANR	8061853	BitAndExpression	my & 1		8060168	1		&			
ANR	8061854	Identifier	my		8060168	0					
ANR	8061855	PrimaryExpression	1		8060168	1					
ANR	8061856	ExpressionStatement	"s -> dsp . put_pixels_tab [ 0 ] [ dxy ] ( temp + 16 , ref + ( mx >> 1 ) + stride * ( my >> 1 ) , stride , 16 )"	339:20:6989:7071	8060168	14	True				
ANR	8061857	CallExpression	"s -> dsp . put_pixels_tab [ 0 ] [ dxy ] ( temp + 16 , ref + ( mx >> 1 ) + stride * ( my >> 1 ) , stride , 16 )"		8060168	0					
ANR	8061858	Callee	s -> dsp . put_pixels_tab [ 0 ] [ dxy ]		8060168	0					
ANR	8061859	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ] [ dxy ]		8060168	0					
ANR	8061860	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ]		8060168	0					
ANR	8061861	MemberAccess	s -> dsp . put_pixels_tab		8060168	0					
ANR	8061862	PtrMemberAccess	s -> dsp		8060168	0					
ANR	8061863	Identifier	s		8060168	0					
ANR	8061864	Identifier	dsp		8060168	1					
ANR	8061865	Identifier	put_pixels_tab		8060168	1					
ANR	8061866	PrimaryExpression	0		8060168	1					
ANR	8061867	Identifier	dxy		8060168	1					
ANR	8061868	ArgumentList	temp + 16		8060168	1					
ANR	8061869	Argument	temp + 16		8060168	0					
ANR	8061870	AdditiveExpression	temp + 16		8060168	0		+			
ANR	8061871	Identifier	temp		8060168	0					
ANR	8061872	PrimaryExpression	16		8060168	1					
ANR	8061873	Argument	ref + ( mx >> 1 ) + stride * ( my >> 1 )		8060168	1					
ANR	8061874	AdditiveExpression	ref + ( mx >> 1 ) + stride * ( my >> 1 )		8060168	0		+			
ANR	8061875	Identifier	ref		8060168	0					
ANR	8061876	AdditiveExpression	( mx >> 1 ) + stride * ( my >> 1 )		8060168	1		+			
ANR	8061877	ShiftExpression	mx >> 1		8060168	0		>>			
ANR	8061878	Identifier	mx		8060168	0					
ANR	8061879	PrimaryExpression	1		8060168	1					
ANR	8061880	MultiplicativeExpression	stride * ( my >> 1 )		8060168	1		*			
ANR	8061881	Identifier	stride		8060168	0					
ANR	8061882	ShiftExpression	my >> 1		8060168	1		>>			
ANR	8061883	Identifier	my		8060168	0					
ANR	8061884	PrimaryExpression	1		8060168	1					
ANR	8061885	Argument	stride		8060168	2					
ANR	8061886	Identifier	stride		8060168	0					
ANR	8061887	Argument	16		8060168	3					
ANR	8061888	PrimaryExpression	16		8060168	0					
ANR	8061889	ExpressionStatement	"score [ 1 ] += encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"	343:20:7096:7176	8060168	15	True				
ANR	8061890	AssignmentExpression	"score [ 1 ] += encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"		8060168	0		+=			
ANR	8061891	ArrayIndexing	score [ 1 ]		8060168	0					
ANR	8061892	Identifier	score		8060168	0					
ANR	8061893	PrimaryExpression	1		8060168	1					
ANR	8061894	CallExpression	"encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"		8060168	1					
ANR	8061895	Callee	encode_block		8060168	0					
ANR	8061896	Identifier	encode_block		8060168	0					
ANR	8061897	ArgumentList	s		8060168	1					
ANR	8061898	Argument	s		8060168	0					
ANR	8061899	Identifier	s		8060168	0					
ANR	8061900	Argument	src + 16 * x		8060168	1					
ANR	8061901	AdditiveExpression	src + 16 * x		8060168	0		+			
ANR	8061902	Identifier	src		8060168	0					
ANR	8061903	MultiplicativeExpression	16 * x		8060168	1		*			
ANR	8061904	PrimaryExpression	16		8060168	0					
ANR	8061905	Identifier	x		8060168	1					
ANR	8061906	Argument	temp + 16		8060168	2					
ANR	8061907	AdditiveExpression	temp + 16		8060168	0		+			
ANR	8061908	Identifier	temp		8060168	0					
ANR	8061909	PrimaryExpression	16		8060168	1					
ANR	8061910	Argument	decoded		8060168	3					
ANR	8061911	Identifier	decoded		8060168	0					
ANR	8061912	Argument	stride		8060168	4					
ANR	8061913	Identifier	stride		8060168	0					
ANR	8061914	Argument	5		8060168	5					
ANR	8061915	PrimaryExpression	5		8060168	0					
ANR	8061916	Argument	64		8060168	6					
ANR	8061917	PrimaryExpression	64		8060168	0					
ANR	8061918	Argument	lambda		8060168	7					
ANR	8061919	Identifier	lambda		8060168	0					
ANR	8061920	Argument	0		8060168	8					
ANR	8061921	PrimaryExpression	0		8060168	0					
ANR	8061922	ExpressionStatement	best = score [ 1 ] <= score [ 0 ]	345:20:7199:7225	8060168	16	True				
ANR	8061923	AssignmentExpression	best = score [ 1 ] <= score [ 0 ]		8060168	0		=			
ANR	8061924	Identifier	best		8060168	0					
ANR	8061925	RelationalExpression	score [ 1 ] <= score [ 0 ]		8060168	1		<=			
ANR	8061926	ArrayIndexing	score [ 1 ]		8060168	0					
ANR	8061927	Identifier	score		8060168	0					
ANR	8061928	PrimaryExpression	1		8060168	1					
ANR	8061929	ArrayIndexing	score [ 0 ]		8060168	1					
ANR	8061930	Identifier	score		8060168	0					
ANR	8061931	PrimaryExpression	0		8060168	1					
ANR	8061932	ExpressionStatement	vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]	349:20:7250:7294	8060168	17	True				
ANR	8061933	AssignmentExpression	vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]		8060168	0		=			
ANR	8061934	Identifier	vlc		8060168	0					
ANR	8061935	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]		8060168	1					
ANR	8061936	Identifier	ff_svq1_block_type_vlc		8060168	0					
ANR	8061937	Identifier	SVQ1_BLOCK_SKIP		8060168	1					
ANR	8061938	ExpressionStatement	"score [ 2 ] = s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"	351:20:7317:7373	8060168	18	True				
ANR	8061939	AssignmentExpression	"score [ 2 ] = s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"		8060168	0		=			
ANR	8061940	ArrayIndexing	score [ 2 ]		8060168	0					
ANR	8061941	Identifier	score		8060168	0					
ANR	8061942	PrimaryExpression	2		8060168	1					
ANR	8061943	CallExpression	"s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"		8060168	1					
ANR	8061944	Callee	s -> dsp . sse [ 0 ]		8060168	0					
ANR	8061945	ArrayIndexing	s -> dsp . sse [ 0 ]		8060168	0					
ANR	8061946	MemberAccess	s -> dsp . sse		8060168	0					
ANR	8061947	PtrMemberAccess	s -> dsp		8060168	0					
ANR	8061948	Identifier	s		8060168	0					
ANR	8061949	Identifier	dsp		8060168	1					
ANR	8061950	Identifier	sse		8060168	1					
ANR	8061951	PrimaryExpression	0		8060168	1					
ANR	8061952	ArgumentList	NULL		8060168	1					
ANR	8061953	Argument	NULL		8060168	0					
ANR	8061954	Identifier	NULL		8060168	0					
ANR	8061955	Argument	src + 16 * x		8060168	1					
ANR	8061956	AdditiveExpression	src + 16 * x		8060168	0		+			
ANR	8061957	Identifier	src		8060168	0					
ANR	8061958	MultiplicativeExpression	16 * x		8060168	1		*			
ANR	8061959	PrimaryExpression	16		8060168	0					
ANR	8061960	Identifier	x		8060168	1					
ANR	8061961	Argument	ref		8060168	2					
ANR	8061962	Identifier	ref		8060168	0					
ANR	8061963	Argument	stride		8060168	3					
ANR	8061964	Identifier	stride		8060168	0					
ANR	8061965	Argument	16		8060168	4					
ANR	8061966	PrimaryExpression	16		8060168	0					
ANR	8061967	ExpressionStatement	score [ 2 ] += vlc [ 1 ] * lambda	353:20:7396:7420	8060168	19	True				
ANR	8061968	AssignmentExpression	score [ 2 ] += vlc [ 1 ] * lambda		8060168	0		+=			
ANR	8061969	ArrayIndexing	score [ 2 ]		8060168	0					
ANR	8061970	Identifier	score		8060168	0					
ANR	8061971	PrimaryExpression	2		8060168	1					
ANR	8061972	MultiplicativeExpression	vlc [ 1 ] * lambda		8060168	1		*			
ANR	8061973	ArrayIndexing	vlc [ 1 ]		8060168	0					
ANR	8061974	Identifier	vlc		8060168	0					
ANR	8061975	PrimaryExpression	1		8060168	1					
ANR	8061976	Identifier	lambda		8060168	1					
ANR	8061977	IfStatement	if ( score [ 2 ] < score [ best ] && mx == 0 && my == 0 )		8060168	20					
ANR	8061978	Condition	score [ 2 ] < score [ best ] && mx == 0 && my == 0	355:23:7446:7485	8060168	0	True				
ANR	8061979	AndExpression	score [ 2 ] < score [ best ] && mx == 0 && my == 0		8060168	0		&&			
ANR	8061980	RelationalExpression	score [ 2 ] < score [ best ]		8060168	0		<			
ANR	8061981	ArrayIndexing	score [ 2 ]		8060168	0					
ANR	8061982	Identifier	score		8060168	0					
ANR	8061983	PrimaryExpression	2		8060168	1					
ANR	8061984	ArrayIndexing	score [ best ]		8060168	1					
ANR	8061985	Identifier	score		8060168	0					
ANR	8061986	Identifier	best		8060168	1					
ANR	8061987	AndExpression	mx == 0 && my == 0		8060168	1		&&			
ANR	8061988	EqualityExpression	mx == 0		8060168	0		==			
ANR	8061989	Identifier	mx		8060168	0					
ANR	8061990	PrimaryExpression	0		8060168	1					
ANR	8061991	EqualityExpression	my == 0		8060168	1		==			
ANR	8061992	Identifier	my		8060168	0					
ANR	8061993	PrimaryExpression	0		8060168	1					
ANR	8061994	CompoundStatement		351:64:7291:7291	8060168	1					
ANR	8061995	ExpressionStatement	best = 2	357:24:7514:7520	8060168	0	True				
ANR	8061996	AssignmentExpression	best = 2		8060168	0		=			
ANR	8061997	Identifier	best		8060168	0					
ANR	8061998	PrimaryExpression	2		8060168	1					
ANR	8061999	ExpressionStatement	"s -> dsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , ref , stride , 16 )"	359:24:7547:7600	8060168	1	True				
ANR	8062000	CallExpression	"s -> dsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , ref , stride , 16 )"		8060168	0					
ANR	8062001	Callee	s -> dsp . put_pixels_tab [ 0 ] [ 0 ]		8060168	0					
ANR	8062002	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ] [ 0 ]		8060168	0					
ANR	8062003	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ]		8060168	0					
ANR	8062004	MemberAccess	s -> dsp . put_pixels_tab		8060168	0					
ANR	8062005	PtrMemberAccess	s -> dsp		8060168	0					
ANR	8062006	Identifier	s		8060168	0					
ANR	8062007	Identifier	dsp		8060168	1					
ANR	8062008	Identifier	put_pixels_tab		8060168	1					
ANR	8062009	PrimaryExpression	0		8060168	1					
ANR	8062010	PrimaryExpression	0		8060168	1					
ANR	8062011	ArgumentList	decoded		8060168	1					
ANR	8062012	Argument	decoded		8060168	0					
ANR	8062013	Identifier	decoded		8060168	0					
ANR	8062014	Argument	ref		8060168	1					
ANR	8062015	Identifier	ref		8060168	0					
ANR	8062016	Argument	stride		8060168	2					
ANR	8062017	Identifier	stride		8060168	0					
ANR	8062018	Argument	16		8060168	3					
ANR	8062019	PrimaryExpression	16		8060168	0					
ANR	8062020	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8060168	2					
ANR	8062021	ForInit	i = 0 ;	361:28:7631:7634	8060168	0	True				
ANR	8062022	AssignmentExpression	i = 0		8060168	0		=			
ANR	8062023	Identifier	i		8060168	0					
ANR	8062024	PrimaryExpression	0		8060168	1					
ANR	8062025	Condition	i < 6	361:33:7636:7638	8060168	1	True				
ANR	8062026	RelationalExpression	i < 6		8060168	0		<			
ANR	8062027	Identifier	i		8060168	0					
ANR	8062028	PrimaryExpression	6		8060168	1					
ANR	8062029	PostIncDecOperationExpression	i ++	361:38:7641:7643	8060168	2	True				
ANR	8062030	Identifier	i		8060168	0					
ANR	8062031	IncDec	++		8060168	1					
ANR	8062032	CompoundStatement		357:42:7449:7449	8060168	3					
ANR	8062033	ExpressionStatement	count [ 2 ] [ i ] = 0	363:28:7676:7689	8060168	0	True				
ANR	8062034	AssignmentExpression	count [ 2 ] [ i ] = 0		8060168	0		=			
ANR	8062035	ArrayIndexing	count [ 2 ] [ i ]		8060168	0					
ANR	8062036	ArrayIndexing	count [ 2 ]		8060168	0					
ANR	8062037	Identifier	count		8060168	0					
ANR	8062038	PrimaryExpression	2		8060168	1					
ANR	8062039	Identifier	i		8060168	1					
ANR	8062040	PrimaryExpression	0		8060168	1					
ANR	8062041	ExpressionStatement	"put_bits ( & s -> pb , vlc [ 1 ] , vlc [ 0 ] )"	367:24:7743:7775	8060168	3	True				
ANR	8062042	CallExpression	"put_bits ( & s -> pb , vlc [ 1 ] , vlc [ 0 ] )"		8060168	0					
ANR	8062043	Callee	put_bits		8060168	0					
ANR	8062044	Identifier	put_bits		8060168	0					
ANR	8062045	ArgumentList	& s -> pb		8060168	1					
ANR	8062046	Argument	& s -> pb		8060168	0					
ANR	8062047	UnaryOperationExpression	& s -> pb		8060168	0					
ANR	8062048	UnaryOperator	&		8060168	0					
ANR	8062049	PtrMemberAccess	s -> pb		8060168	1					
ANR	8062050	Identifier	s		8060168	0					
ANR	8062051	Identifier	pb		8060168	1					
ANR	8062052	Argument	vlc [ 1 ]		8060168	1					
ANR	8062053	ArrayIndexing	vlc [ 1 ]		8060168	0					
ANR	8062054	Identifier	vlc		8060168	0					
ANR	8062055	PrimaryExpression	1		8060168	1					
ANR	8062056	Argument	vlc [ 0 ]		8060168	2					
ANR	8062057	ArrayIndexing	vlc [ 0 ]		8060168	0					
ANR	8062058	Identifier	vlc		8060168	0					
ANR	8062059	PrimaryExpression	0		8060168	1					
ANR	8062060	IfStatement	if ( best == 1 )		8060168	5					
ANR	8062061	Condition	best == 1	375:19:7841:7847	8060168	0	True				
ANR	8062062	EqualityExpression	best == 1		8060168	0		==			
ANR	8062063	Identifier	best		8060168	0					
ANR	8062064	PrimaryExpression	1		8060168	1					
ANR	8062065	CompoundStatement		371:27:7653:7653	8060168	1					
ANR	8062066	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8060168	0					
ANR	8062067	ForInit	i = 0 ;	377:24:7876:7879	8060168	0	True				
ANR	8062068	AssignmentExpression	i = 0		8060168	0		=			
ANR	8062069	Identifier	i		8060168	0					
ANR	8062070	PrimaryExpression	0		8060168	1					
ANR	8062071	Condition	i < 6	377:29:7881:7883	8060168	1	True				
ANR	8062072	RelationalExpression	i < 6		8060168	0		<			
ANR	8062073	Identifier	i		8060168	0					
ANR	8062074	PrimaryExpression	6		8060168	1					
ANR	8062075	PostIncDecOperationExpression	i ++	377:34:7886:7888	8060168	2	True				
ANR	8062076	Identifier	i		8060168	0					
ANR	8062077	IncDec	++		8060168	1					
ANR	8062078	CompoundStatement		373:38:7694:7694	8060168	3					
ANR	8062079	ExpressionStatement	count [ 1 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )	379:24:7917:7963	8060168	0	True				
ANR	8062080	AssignmentExpression	count [ 1 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )		8060168	0		=			
ANR	8062081	ArrayIndexing	count [ 1 ] [ i ]		8060168	0					
ANR	8062082	ArrayIndexing	count [ 1 ]		8060168	0					
ANR	8062083	Identifier	count		8060168	0					
ANR	8062084	PrimaryExpression	1		8060168	1					
ANR	8062085	Identifier	i		8060168	1					
ANR	8062086	CallExpression	put_bits_count ( & s -> reorder_pb [ i ] )		8060168	1					
ANR	8062087	Callee	put_bits_count		8060168	0					
ANR	8062088	Identifier	put_bits_count		8060168	0					
ANR	8062089	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8062090	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8062091	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8062092	UnaryOperator	&		8060168	0					
ANR	8062093	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8062094	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8062095	Identifier	s		8060168	0					
ANR	8062096	Identifier	reorder_pb		8060168	1					
ANR	8062097	Identifier	i		8060168	1					
ANR	8062098	ExpressionStatement	flush_put_bits ( & s -> reorder_pb [ i ] )	381:24:7990:8023	8060168	1	True				
ANR	8062099	CallExpression	flush_put_bits ( & s -> reorder_pb [ i ] )		8060168	0					
ANR	8062100	Callee	flush_put_bits		8060168	0					
ANR	8062101	Identifier	flush_put_bits		8060168	0					
ANR	8062102	ArgumentList	& s -> reorder_pb [ i ]		8060168	1					
ANR	8062103	Argument	& s -> reorder_pb [ i ]		8060168	0					
ANR	8062104	UnaryOperationExpression	& s -> reorder_pb [ i ]		8060168	0					
ANR	8062105	UnaryOperator	&		8060168	0					
ANR	8062106	ArrayIndexing	s -> reorder_pb [ i ]		8060168	1					
ANR	8062107	PtrMemberAccess	s -> reorder_pb		8060168	0					
ANR	8062108	Identifier	s		8060168	0					
ANR	8062109	Identifier	reorder_pb		8060168	1					
ANR	8062110	Identifier	i		8060168	1					
ANR	8062111	ElseStatement	else		8060168	0					
ANR	8062112	CompoundStatement		381:21:7874:7874	8060168	0					
ANR	8062113	ExpressionStatement	motion_ptr [ 0 ] = motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0	387:20:8093:8416	8060168	0	True				
ANR	8062114	AssignmentExpression	motion_ptr [ 0 ] = motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	0		=			
ANR	8062115	ArrayIndexing	motion_ptr [ 0 ]		8060168	0					
ANR	8062116	Identifier	motion_ptr		8060168	0					
ANR	8062117	PrimaryExpression	0		8060168	1					
ANR	8062118	AssignmentExpression	motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062119	ArrayIndexing	motion_ptr [ 1 ]		8060168	0					
ANR	8062120	Identifier	motion_ptr		8060168	0					
ANR	8062121	PrimaryExpression	1		8060168	1					
ANR	8062122	AssignmentExpression	motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062123	ArrayIndexing	motion_ptr [ 2 ]		8060168	0					
ANR	8062124	Identifier	motion_ptr		8060168	0					
ANR	8062125	PrimaryExpression	2		8060168	1					
ANR	8062126	AssignmentExpression	motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062127	ArrayIndexing	motion_ptr [ 3 ]		8060168	0					
ANR	8062128	Identifier	motion_ptr		8060168	0					
ANR	8062129	PrimaryExpression	3		8060168	1					
ANR	8062130	AssignmentExpression	motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062131	ArrayIndexing	motion_ptr [ 0 + 2 * s -> m . b8_stride ]		8060168	0					
ANR	8062132	Identifier	motion_ptr		8060168	0					
ANR	8062133	AdditiveExpression	0 + 2 * s -> m . b8_stride		8060168	1		+			
ANR	8062134	PrimaryExpression	0		8060168	0					
ANR	8062135	MultiplicativeExpression	2 * s -> m . b8_stride		8060168	1		*			
ANR	8062136	PrimaryExpression	2		8060168	0					
ANR	8062137	MemberAccess	s -> m . b8_stride		8060168	1					
ANR	8062138	PtrMemberAccess	s -> m		8060168	0					
ANR	8062139	Identifier	s		8060168	0					
ANR	8062140	Identifier	m		8060168	1					
ANR	8062141	Identifier	b8_stride		8060168	1					
ANR	8062142	AssignmentExpression	motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062143	ArrayIndexing	motion_ptr [ 1 + 2 * s -> m . b8_stride ]		8060168	0					
ANR	8062144	Identifier	motion_ptr		8060168	0					
ANR	8062145	AdditiveExpression	1 + 2 * s -> m . b8_stride		8060168	1		+			
ANR	8062146	PrimaryExpression	1		8060168	0					
ANR	8062147	MultiplicativeExpression	2 * s -> m . b8_stride		8060168	1		*			
ANR	8062148	PrimaryExpression	2		8060168	0					
ANR	8062149	MemberAccess	s -> m . b8_stride		8060168	1					
ANR	8062150	PtrMemberAccess	s -> m		8060168	0					
ANR	8062151	Identifier	s		8060168	0					
ANR	8062152	Identifier	m		8060168	1					
ANR	8062153	Identifier	b8_stride		8060168	1					
ANR	8062154	AssignmentExpression	motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062155	ArrayIndexing	motion_ptr [ 2 + 2 * s -> m . b8_stride ]		8060168	0					
ANR	8062156	Identifier	motion_ptr		8060168	0					
ANR	8062157	AdditiveExpression	2 + 2 * s -> m . b8_stride		8060168	1		+			
ANR	8062158	PrimaryExpression	2		8060168	0					
ANR	8062159	MultiplicativeExpression	2 * s -> m . b8_stride		8060168	1		*			
ANR	8062160	PrimaryExpression	2		8060168	0					
ANR	8062161	MemberAccess	s -> m . b8_stride		8060168	1					
ANR	8062162	PtrMemberAccess	s -> m		8060168	0					
ANR	8062163	Identifier	s		8060168	0					
ANR	8062164	Identifier	m		8060168	1					
ANR	8062165	Identifier	b8_stride		8060168	1					
ANR	8062166	AssignmentExpression	motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8060168	1		=			
ANR	8062167	ArrayIndexing	motion_ptr [ 3 + 2 * s -> m . b8_stride ]		8060168	0					
ANR	8062168	Identifier	motion_ptr		8060168	0					
ANR	8062169	AdditiveExpression	3 + 2 * s -> m . b8_stride		8060168	1		+			
ANR	8062170	PrimaryExpression	3		8060168	0					
ANR	8062171	MultiplicativeExpression	2 * s -> m . b8_stride		8060168	1		*			
ANR	8062172	PrimaryExpression	2		8060168	0					
ANR	8062173	MemberAccess	s -> m . b8_stride		8060168	1					
ANR	8062174	PtrMemberAccess	s -> m		8060168	0					
ANR	8062175	Identifier	s		8060168	0					
ANR	8062176	Identifier	m		8060168	1					
ANR	8062177	Identifier	b8_stride		8060168	1					
ANR	8062178	PrimaryExpression	0		8060168	1					
ANR	8062179	ExpressionStatement	s -> rd_total += score [ best ]	401:12:8467:8493	8060168	16	True				
ANR	8062180	AssignmentExpression	s -> rd_total += score [ best ]		8060168	0		+=			
ANR	8062181	PtrMemberAccess	s -> rd_total		8060168	0					
ANR	8062182	Identifier	s		8060168	0					
ANR	8062183	Identifier	rd_total		8060168	1					
ANR	8062184	ArrayIndexing	score [ best ]		8060168	1					
ANR	8062185	Identifier	score		8060168	0					
ANR	8062186	Identifier	best		8060168	1					
ANR	8062187	ForStatement	for ( i = 5 ; i >= 0 ; i -- )		8060168	17					
ANR	8062188	ForInit	i = 5 ;	405:16:8514:8517	8060168	0	True				
ANR	8062189	AssignmentExpression	i = 5		8060168	0		=			
ANR	8062190	Identifier	i		8060168	0					
ANR	8062191	PrimaryExpression	5		8060168	1					
ANR	8062192	Condition	i >= 0	405:21:8519:8522	8060168	1	True				
ANR	8062193	RelationalExpression	i >= 0		8060168	0		>=			
ANR	8062194	Identifier	i		8060168	0					
ANR	8062195	PrimaryExpression	0		8060168	1					
ANR	8062196	PostIncDecOperationExpression	i --	405:27:8525:8527	8060168	2	True				
ANR	8062197	Identifier	i		8060168	0					
ANR	8062198	IncDec	--		8060168	1					
ANR	8062199	CompoundStatement		401:31:8333:8333	8060168	3					
ANR	8062200	ExpressionStatement	"ff_copy_bits ( & s -> pb , reorder_buffer [ best ] [ i ] , count [ best ] [ i ] )"	407:16:8548:8609	8060168	0	True				
ANR	8062201	CallExpression	"ff_copy_bits ( & s -> pb , reorder_buffer [ best ] [ i ] , count [ best ] [ i ] )"		8060168	0					
ANR	8062202	Callee	ff_copy_bits		8060168	0					
ANR	8062203	Identifier	ff_copy_bits		8060168	0					
ANR	8062204	ArgumentList	& s -> pb		8060168	1					
ANR	8062205	Argument	& s -> pb		8060168	0					
ANR	8062206	UnaryOperationExpression	& s -> pb		8060168	0					
ANR	8062207	UnaryOperator	&		8060168	0					
ANR	8062208	PtrMemberAccess	s -> pb		8060168	1					
ANR	8062209	Identifier	s		8060168	0					
ANR	8062210	Identifier	pb		8060168	1					
ANR	8062211	Argument	reorder_buffer [ best ] [ i ]		8060168	1					
ANR	8062212	ArrayIndexing	reorder_buffer [ best ] [ i ]		8060168	0					
ANR	8062213	ArrayIndexing	reorder_buffer [ best ]		8060168	0					
ANR	8062214	Identifier	reorder_buffer		8060168	0					
ANR	8062215	Identifier	best		8060168	1					
ANR	8062216	Identifier	i		8060168	1					
ANR	8062217	Argument	count [ best ] [ i ]		8060168	2					
ANR	8062218	ArrayIndexing	count [ best ] [ i ]		8060168	0					
ANR	8062219	ArrayIndexing	count [ best ]		8060168	0					
ANR	8062220	Identifier	count		8060168	0					
ANR	8062221	Identifier	best		8060168	1					
ANR	8062222	Identifier	i		8060168	1					
ANR	8062223	IfStatement	if ( best == 0 )		8060168	18					
ANR	8062224	Condition	best == 0	411:15:8642:8648	8060168	0	True				
ANR	8062225	EqualityExpression	best == 0		8060168	0		==			
ANR	8062226	Identifier	best		8060168	0					
ANR	8062227	PrimaryExpression	0		8060168	1					
ANR	8062228	CompoundStatement		407:23:8454:8454	8060168	1					
ANR	8062229	ExpressionStatement	"s -> dsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , temp , stride , 16 )"	413:16:8669:8723	8060168	0	True				
ANR	8062230	CallExpression	"s -> dsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , temp , stride , 16 )"		8060168	0					
ANR	8062231	Callee	s -> dsp . put_pixels_tab [ 0 ] [ 0 ]		8060168	0					
ANR	8062232	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ] [ 0 ]		8060168	0					
ANR	8062233	ArrayIndexing	s -> dsp . put_pixels_tab [ 0 ]		8060168	0					
ANR	8062234	MemberAccess	s -> dsp . put_pixels_tab		8060168	0					
ANR	8062235	PtrMemberAccess	s -> dsp		8060168	0					
ANR	8062236	Identifier	s		8060168	0					
ANR	8062237	Identifier	dsp		8060168	1					
ANR	8062238	Identifier	put_pixels_tab		8060168	1					
ANR	8062239	PrimaryExpression	0		8060168	1					
ANR	8062240	PrimaryExpression	0		8060168	1					
ANR	8062241	ArgumentList	decoded		8060168	1					
ANR	8062242	Argument	decoded		8060168	0					
ANR	8062243	Identifier	decoded		8060168	0					
ANR	8062244	Argument	temp		8060168	1					
ANR	8062245	Identifier	temp		8060168	0					
ANR	8062246	Argument	stride		8060168	2					
ANR	8062247	Identifier	stride		8060168	0					
ANR	8062248	Argument	16		8060168	3					
ANR	8062249	PrimaryExpression	16		8060168	0					
ANR	8062250	ExpressionStatement	s -> m . first_slice_line = 0	419:8:8760:8783	8060168	5	True				
ANR	8062251	AssignmentExpression	s -> m . first_slice_line = 0		8060168	0		=			
ANR	8062252	MemberAccess	s -> m . first_slice_line		8060168	0					
ANR	8062253	PtrMemberAccess	s -> m		8060168	0					
ANR	8062254	Identifier	s		8060168	0					
ANR	8062255	Identifier	m		8060168	1					
ANR	8062256	Identifier	first_slice_line		8060168	1					
ANR	8062257	PrimaryExpression	0		8060168	1					
ANR	8062258	ReturnStatement	return 0 ;	423:4:8797:8805	8060168	13	True				
ANR	8062259	PrimaryExpression	0		8060168	0					
ANR	8062260	ReturnType	static int		8060168	1					
ANR	8062261	Identifier	svq1_encode_plane		8060168	2					
ANR	8062262	ParameterList	"SVQ1Context * s , int plane , unsigned char * src_plane , unsigned char * ref_plane , unsigned char * decoded_plane , int width , int height , int src_stride , int stride"		8060168	3					
ANR	8062263	Parameter	SVQ1Context * s	1:29:29:42	8060168	0	True				
ANR	8062264	ParameterType	SVQ1Context *		8060168	0					
ANR	8062265	Identifier	s		8060168	1					
ANR	8062266	Parameter	int plane	1:45:45:53	8060168	1	True				
ANR	8062267	ParameterType	int		8060168	0					
ANR	8062268	Identifier	plane		8060168	1					
ANR	8062269	Parameter	unsigned char * src_plane	1:56:56:79	8060168	2	True				
ANR	8062270	ParameterType	unsigned char *		8060168	0					
ANR	8062271	Identifier	src_plane		8060168	1					
ANR	8062272	Parameter	unsigned char * ref_plane	1:82:82:105	8060168	3	True				
ANR	8062273	ParameterType	unsigned char *		8060168	0					
ANR	8062274	Identifier	ref_plane		8060168	1					
ANR	8062275	Parameter	unsigned char * decoded_plane	1:108:108:135	8060168	4	True				
ANR	8062276	ParameterType	unsigned char *		8060168	0					
ANR	8062277	Identifier	decoded_plane		8060168	1					
ANR	8062278	Parameter	int width	3:4:143:151	8060168	5	True				
ANR	8062279	ParameterType	int		8060168	0					
ANR	8062280	Identifier	width		8060168	1					
ANR	8062281	Parameter	int height	3:15:154:163	8060168	6	True				
ANR	8062282	ParameterType	int		8060168	0					
ANR	8062283	Identifier	height		8060168	1					
ANR	8062284	Parameter	int src_stride	3:27:166:179	8060168	7	True				
ANR	8062285	ParameterType	int		8060168	0					
ANR	8062286	Identifier	src_stride		8060168	1					
ANR	8062287	Parameter	int stride	3:43:182:191	8060168	8	True				
ANR	8062288	ParameterType	int		8060168	0					
ANR	8062289	Identifier	stride		8060168	1					
ANR	8062290	CFGEntryNode	ENTRY		8060168		True				
ANR	8062291	CFGExitNode	EXIT		8060168		True				
ANR	8062292	Symbol	plane		8060168						
ANR	8062293	Symbol	* stride		8060168						
ANR	8062294	Symbol	s -> picture . quality		8060168						
ANR	8062295	Symbol	* x		8060168						
ANR	8062296	Symbol	* y		8060168						
ANR	8062297	Symbol	& s -> m . last_picture		8060168						
ANR	8062298	Symbol	* ff_svq1_block_type_vlc		8060168						
ANR	8062299	Symbol	stride		8060168						
ANR	8062300	Symbol	* s -> m . b8_stride		8060168						
ANR	8062301	Symbol	s -> motion_val8		8060168						
ANR	8062302	Symbol	score		8060168						
ANR	8062303	Symbol	lambda		8060168						
ANR	8062304	Symbol	s -> m . new_picture . data		8060168						
ANR	8062305	Symbol	s -> m . avctx		8060168						
ANR	8062306	Symbol	* vlc		8060168						
ANR	8062307	Symbol	s -> m . b8_stride		8060168						
ANR	8062308	Symbol	s -> m . me_method		8060168						
ANR	8062309	Symbol	height		8060168						
ANR	8062310	Symbol	s -> m . last_picture_ptr		8060168						
ANR	8062311	Symbol	av_mallocz		8060168						
ANR	8062312	Symbol	s -> m . pict_type		8060168						
ANR	8062313	Symbol	s -> avctx -> flags		8060168						
ANR	8062314	Symbol	s -> motion_val16		8060168						
ANR	8062315	Symbol	s -> dsp		8060168						
ANR	8062316	Symbol	* s -> motion_val8		8060168						
ANR	8062317	Symbol	s -> picture . pict_type		8060168						
ANR	8062318	Symbol	FF_LAMBDA_SCALE		8060168						
ANR	8062319	Symbol	s -> avctx -> me_method		8060168						
ANR	8062320	Symbol	ref_plane		8060168						
ANR	8062321	Symbol	& s -> pb		8060168						
ANR	8062322	Symbol	h263_pred_motion		8060168						
ANR	8062323	Symbol	s -> pb . buf		8060168						
ANR	8062324	Symbol	ff_svq1_block_type_vlc		8060168						
ANR	8062325	Symbol	src_stride		8060168						
ANR	8062326	Symbol	s -> m . mb_width		8060168						
ANR	8062327	Symbol	s -> m . current_picture_ptr		8060168						
ANR	8062328	Symbol	* reorder_buffer		8060168						
ANR	8062329	Symbol	s -> pb		8060168						
ANR	8062330	Symbol	* s -> m . mb_stride		8060168						
ANR	8062331	Symbol	pred_x		8060168						
ANR	8062332	Symbol	s -> m . new_picture		8060168						
ANR	8062333	Symbol	pred_y		8060168						
ANR	8062334	Symbol	s -> dsp . sse		8060168						
ANR	8062335	Symbol	* motion_ptr		8060168						
ANR	8062336	Symbol	s -> m . current_picture . motion_val		8060168						
ANR	8062337	Symbol	* * s		8060168						
ANR	8062338	Symbol	s -> m . current_picture . mb_mean		8060168						
ANR	8062339	Symbol	INT_MAX		8060168						
ANR	8062340	Symbol	* SVQ1_BLOCK_SKIP		8060168						
ANR	8062341	Symbol	s -> m . last_picture . data		8060168						
ANR	8062342	Symbol	* plane		8060168						
ANR	8062343	Symbol	* s -> m . new_picture . data		8060168						
ANR	8062344	Symbol	s -> m		8060168						
ANR	8062345	Symbol	* threshold		8060168						
ANR	8062346	Symbol	s -> scratchbuf		8060168						
ANR	8062347	Symbol	* s -> dsp . put_pixels_tab		8060168						
ANR	8062348	Symbol	FF_I_TYPE		8060168						
ANR	8062349	Symbol	AV_LOG_ERROR		8060168						
ANR	8062350	Symbol	* SVQ1_BLOCK_INTRA		8060168						
ANR	8062351	Symbol	dxy		8060168						
ANR	8062352	Symbol	s -> m . me		8060168						
ANR	8062353	Symbol	* s -> m . current_picture		8060168						
ANR	8062354	Symbol	s -> m . current_picture . mb_var		8060168						
ANR	8062355	Symbol	put_bits_count		8060168						
ANR	8062356	Symbol	i		8060168						
ANR	8062357	Symbol	* s -> m . new_picture . linesize		8060168						
ANR	8062358	Symbol	s -> m . p_mv_table		8060168						
ANR	8062359	Symbol	* s -> m . current_picture . motion_val		8060168						
ANR	8062360	Symbol	vlc		8060168						
ANR	8062361	Symbol	& s -> m . current_picture		8060168						
ANR	8062362	Symbol	s -> m . lambda2		8060168						
ANR	8062363	Symbol	* s -> dsp . sse		8060168						
ANR	8062364	Symbol	s		8060168						
ANR	8062365	Symbol	CANDIDATE_MB_TYPE_INTER		8060168						
ANR	8062366	Symbol	THRESHOLD_MULTIPLIER		8060168						
ANR	8062367	Symbol	width		8060168						
ANR	8062368	Symbol	x		8060168						
ANR	8062369	Symbol	y		8060168						
ANR	8062370	Symbol	SVQ1_BLOCK_INTER		8060168						
ANR	8062371	Symbol	SVQ1_BLOCK_SKIP		8060168						
ANR	8062372	Symbol	* s -> m . current_picture . linesize		8060168						
ANR	8062373	Symbol	s -> pb . buf_end		8060168						
ANR	8062374	Symbol	s -> dsp . put_pixels_tab		8060168						
ANR	8062375	Symbol	s -> m . current_picture		8060168						
ANR	8062376	Symbol	s -> m . dsp		8060168						
ANR	8062377	Symbol	* * best		8060168						
ANR	8062378	Symbol	* best		8060168						
ANR	8062379	Symbol	s -> m . linesize		8060168						
ANR	8062380	Symbol	threshold		8060168						
ANR	8062381	Symbol	block_height		8060168						
ANR	8062382	Symbol	* level		8060168						
ANR	8062383	Symbol	s -> m . last_picture		8060168						
ANR	8062384	Symbol	s -> m . mb_type		8060168						
ANR	8062385	Symbol	s -> m . current_picture . mc_mb_var		8060168						
ANR	8062386	Symbol	* src		8060168						
ANR	8062387	Symbol	reorder_buffer		8060168						
ANR	8062388	Symbol	* count		8060168						
ANR	8062389	Symbol	ref		8060168						
ANR	8062390	Symbol	* s -> m . last_picture . linesize		8060168						
ANR	8062391	Symbol	s -> avctx -> dia_size		8060168						
ANR	8062392	Symbol	* s -> dsp		8060168						
ANR	8062393	Symbol	* s -> m . last_picture . data		8060168						
ANR	8062394	Symbol	decoded_plane		8060168						
ANR	8062395	Symbol	s -> m . flags		8060168						
ANR	8062396	Symbol	* s -> avctx		8060168						
ANR	8062397	Symbol	NULL		8060168						
ANR	8062398	Symbol	offset		8060168						
ANR	8062399	Symbol	level		8060168						
ANR	8062400	Symbol	* s -> m . new_picture		8060168						
ANR	8062401	Symbol	count		8060168						
ANR	8062402	Symbol	mx		8060168						
ANR	8062403	Symbol	s -> reorder_pb		8060168						
ANR	8062404	Symbol	my		8060168						
ANR	8062405	Symbol	s -> m . last_picture . linesize		8060168						
ANR	8062406	Symbol	s -> dummy		8060168						
ANR	8062407	Symbol	s -> m . width		8060168						
ANR	8062408	Symbol	s -> m . qscale		8060168						
ANR	8062409	Symbol	FF_P_TYPE		8060168						
ANR	8062410	Symbol	s -> m . height		8060168						
ANR	8062411	Symbol	s -> mb_type		8060168						
ANR	8062412	Symbol	s -> avctx		8060168						
ANR	8062413	Symbol	s -> m . me . dia_size		8060168						
ANR	8062414	Symbol	s -> m . mb_y		8060168						
ANR	8062415	Symbol	s -> m . mb_height		8060168						
ANR	8062416	Symbol	s -> m . mb_x		8060168						
ANR	8062417	Symbol	s -> m . pb		8060168						
ANR	8062418	Symbol	* * count		8060168						
ANR	8062419	Symbol	src_plane		8060168						
ANR	8062420	Symbol	encode_block		8060168						
ANR	8062421	Symbol	block_width		8060168						
ANR	8062422	Symbol	s -> picture		8060168						
ANR	8062423	Symbol	* s -> m . last_picture		8060168						
ANR	8062424	Symbol	best		8060168						
ANR	8062425	Symbol	* s -> motion_val16		8060168						
ANR	8062426	Symbol	& s -> m		8060168						
ANR	8062427	Symbol	s -> m . new_picture . linesize		8060168						
ANR	8062428	Symbol	* s -> m		8060168						
ANR	8062429	Symbol	s -> m . me . scene_change_score		8060168						
ANR	8062430	Symbol	s -> m . mb_stride		8060168						
ANR	8062431	Symbol	decoded		8060168						
ANR	8062432	Symbol	s -> m . current_picture . mb_type		8060168						
ANR	8062433	Symbol	s -> rd_total		8060168						
ANR	8062434	Symbol	& pred_x		8060168						
ANR	8062435	Symbol	& pred_y		8060168						
ANR	8062436	Symbol	temp		8060168						
ANR	8062437	Symbol	src		8060168						
ANR	8062438	Symbol	* SVQ1_BLOCK_INTER		8060168						
ANR	8062439	Symbol	SVQ1_BLOCK_INTRA		8060168						
ANR	8062440	Symbol	motion_ptr		8060168						
ANR	8062441	Symbol	FF_LAMBDA_SHIFT		8060168						
ANR	8062442	Symbol	* * reorder_buffer		8060168						
ANR	8062443	Symbol	* s -> reorder_pb		8060168						
ANR	8062444	Symbol	* s -> m . mb_type		8060168						
ANR	8062445	Symbol	s -> m . first_slice_line		8060168						
ANR	8062446	Symbol	CANDIDATE_MB_TYPE_INTRA		8060168						
ANR	8062447	Symbol	* i		8060168						
ANR	8062448	Symbol	QUALITY_THRESHOLD		8060168						
ANR	8062449	Symbol	s -> m . current_picture . linesize		8060168						
ANR	8062450	Symbol	* score		8060168						
ANR	8062451	Symbol	s -> m . lambda		8060168						
ANR	8062452	Symbol	s -> m . f_code		8060168						
ANR	8062453	Symbol	* s		8060168						
