command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8016336	File	/home/p4ultr4n/workplace/ReVeal/raw_code/submit_packet_1.c								
ANR	8016337	Function	submit_packet	1:0:0:2529							
ANR	8016338	FunctionDef	"submit_packet (PerThreadContext * p , AVPacket * avpkt)"		8016337	0					
ANR	8016339	CompoundStatement		3:0:64:2529	8016337	0					
ANR	8016340	IdentifierDeclStatement	FrameThreadContext * fctx = p -> parent ;	5:4:71:107	8016337	0	True				
ANR	8016341	IdentifierDecl	* fctx = p -> parent		8016337	0					
ANR	8016342	IdentifierDeclType	FrameThreadContext *		8016337	0					
ANR	8016343	Identifier	fctx		8016337	1					
ANR	8016344	AssignmentExpression	* fctx = p -> parent		8016337	2		=			
ANR	8016345	Identifier	fctx		8016337	0					
ANR	8016346	PtrMemberAccess	p -> parent		8016337	1					
ANR	8016347	Identifier	p		8016337	0					
ANR	8016348	Identifier	parent		8016337	1					
ANR	8016349	IdentifierDeclStatement	PerThreadContext * prev_thread = fctx -> prev_thread ;	7:4:114:163	8016337	1	True				
ANR	8016350	IdentifierDecl	* prev_thread = fctx -> prev_thread		8016337	0					
ANR	8016351	IdentifierDeclType	PerThreadContext *		8016337	0					
ANR	8016352	Identifier	prev_thread		8016337	1					
ANR	8016353	AssignmentExpression	* prev_thread = fctx -> prev_thread		8016337	2		=			
ANR	8016354	Identifier	prev_thread		8016337	0					
ANR	8016355	PtrMemberAccess	fctx -> prev_thread		8016337	1					
ANR	8016356	Identifier	fctx		8016337	0					
ANR	8016357	Identifier	prev_thread		8016337	1					
ANR	8016358	IdentifierDeclStatement	const AVCodec * codec = p -> avctx -> codec ;	9:4:170:208	8016337	2	True				
ANR	8016359	IdentifierDecl	* codec = p -> avctx -> codec		8016337	0					
ANR	8016360	IdentifierDeclType	const AVCodec *		8016337	0					
ANR	8016361	Identifier	codec		8016337	1					
ANR	8016362	AssignmentExpression	* codec = p -> avctx -> codec		8016337	2		=			
ANR	8016363	Identifier	codec		8016337	0					
ANR	8016364	PtrMemberAccess	p -> avctx -> codec		8016337	1					
ANR	8016365	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016366	Identifier	p		8016337	0					
ANR	8016367	Identifier	avctx		8016337	1					
ANR	8016368	Identifier	codec		8016337	1					
ANR	8016369	IfStatement	if ( ! avpkt -> size && ! ( codec -> capabilities & AV_CODEC_CAP_DELAY ) )		8016337	3					
ANR	8016370	Condition	! avpkt -> size && ! ( codec -> capabilities & AV_CODEC_CAP_DELAY )	13:8:221:279	8016337	0	True				
ANR	8016371	AndExpression	! avpkt -> size && ! ( codec -> capabilities & AV_CODEC_CAP_DELAY )		8016337	0		&&			
ANR	8016372	UnaryOperationExpression	! avpkt -> size		8016337	0					
ANR	8016373	UnaryOperator	!		8016337	0					
ANR	8016374	PtrMemberAccess	avpkt -> size		8016337	1					
ANR	8016375	Identifier	avpkt		8016337	0					
ANR	8016376	Identifier	size		8016337	1					
ANR	8016377	UnaryOperationExpression	! ( codec -> capabilities & AV_CODEC_CAP_DELAY )		8016337	1					
ANR	8016378	UnaryOperator	!		8016337	0					
ANR	8016379	BitAndExpression	codec -> capabilities & AV_CODEC_CAP_DELAY		8016337	1		&			
ANR	8016380	PtrMemberAccess	codec -> capabilities		8016337	0					
ANR	8016381	Identifier	codec		8016337	0					
ANR	8016382	Identifier	capabilities		8016337	1					
ANR	8016383	Identifier	AV_CODEC_CAP_DELAY		8016337	1					
ANR	8016384	ReturnStatement	return 0 ;	15:8:291:299	8016337	1	True				
ANR	8016385	PrimaryExpression	0		8016337	0					
ANR	8016386	ExpressionStatement	pthread_mutex_lock ( & p -> mutex )	19:4:308:337	8016337	4	True				
ANR	8016387	CallExpression	pthread_mutex_lock ( & p -> mutex )		8016337	0					
ANR	8016388	Callee	pthread_mutex_lock		8016337	0					
ANR	8016389	Identifier	pthread_mutex_lock		8016337	0					
ANR	8016390	ArgumentList	& p -> mutex		8016337	1					
ANR	8016391	Argument	& p -> mutex		8016337	0					
ANR	8016392	UnaryOperationExpression	& p -> mutex		8016337	0					
ANR	8016393	UnaryOperator	&		8016337	0					
ANR	8016394	PtrMemberAccess	p -> mutex		8016337	1					
ANR	8016395	Identifier	p		8016337	0					
ANR	8016396	Identifier	mutex		8016337	1					
ANR	8016397	ExpressionStatement	release_delayed_buffers ( p )	23:4:346:372	8016337	5	True				
ANR	8016398	CallExpression	release_delayed_buffers ( p )		8016337	0					
ANR	8016399	Callee	release_delayed_buffers		8016337	0					
ANR	8016400	Identifier	release_delayed_buffers		8016337	0					
ANR	8016401	ArgumentList	p		8016337	1					
ANR	8016402	Argument	p		8016337	0					
ANR	8016403	Identifier	p		8016337	0					
ANR	8016404	IfStatement	if ( prev_thread )		8016337	6					
ANR	8016405	Condition	prev_thread	27:8:385:395	8016337	0	True				
ANR	8016406	Identifier	prev_thread		8016337	0					
ANR	8016407	CompoundStatement		27:8:344:351	8016337	1					
ANR	8016408	IdentifierDeclStatement	int err ;	29:8:409:416	8016337	0	True				
ANR	8016409	IdentifierDecl	err		8016337	0					
ANR	8016410	IdentifierDeclType	int		8016337	0					
ANR	8016411	Identifier	err		8016337	1					
ANR	8016412	IfStatement	if ( prev_thread -> state == STATE_SETTING_UP )		8016337	1					
ANR	8016413	Condition	prev_thread -> state == STATE_SETTING_UP	31:12:431:468	8016337	0	True				
ANR	8016414	EqualityExpression	prev_thread -> state == STATE_SETTING_UP		8016337	0		==			
ANR	8016415	PtrMemberAccess	prev_thread -> state		8016337	0					
ANR	8016416	Identifier	prev_thread		8016337	0					
ANR	8016417	Identifier	state		8016337	1					
ANR	8016418	Identifier	STATE_SETTING_UP		8016337	1					
ANR	8016419	CompoundStatement		29:52:406:406	8016337	1					
ANR	8016420	ExpressionStatement	pthread_mutex_lock ( & prev_thread -> progress_mutex )	33:12:486:534	8016337	0	True				
ANR	8016421	CallExpression	pthread_mutex_lock ( & prev_thread -> progress_mutex )		8016337	0					
ANR	8016422	Callee	pthread_mutex_lock		8016337	0					
ANR	8016423	Identifier	pthread_mutex_lock		8016337	0					
ANR	8016424	ArgumentList	& prev_thread -> progress_mutex		8016337	1					
ANR	8016425	Argument	& prev_thread -> progress_mutex		8016337	0					
ANR	8016426	UnaryOperationExpression	& prev_thread -> progress_mutex		8016337	0					
ANR	8016427	UnaryOperator	&		8016337	0					
ANR	8016428	PtrMemberAccess	prev_thread -> progress_mutex		8016337	1					
ANR	8016429	Identifier	prev_thread		8016337	0					
ANR	8016430	Identifier	progress_mutex		8016337	1					
ANR	8016431	WhileStatement	while ( prev_thread -> state == STATE_SETTING_UP )		8016337	1					
ANR	8016432	Condition	prev_thread -> state == STATE_SETTING_UP	35:19:556:593	8016337	0	True				
ANR	8016433	EqualityExpression	prev_thread -> state == STATE_SETTING_UP		8016337	0		==			
ANR	8016434	PtrMemberAccess	prev_thread -> state		8016337	0					
ANR	8016435	Identifier	prev_thread		8016337	0					
ANR	8016436	Identifier	state		8016337	1					
ANR	8016437	Identifier	STATE_SETTING_UP		8016337	1					
ANR	8016438	ExpressionStatement	"pthread_cond_wait ( & prev_thread -> progress_cond , & prev_thread -> progress_mutex )"	37:16:613:689	8016337	1	True				
ANR	8016439	CallExpression	"pthread_cond_wait ( & prev_thread -> progress_cond , & prev_thread -> progress_mutex )"		8016337	0					
ANR	8016440	Callee	pthread_cond_wait		8016337	0					
ANR	8016441	Identifier	pthread_cond_wait		8016337	0					
ANR	8016442	ArgumentList	& prev_thread -> progress_cond		8016337	1					
ANR	8016443	Argument	& prev_thread -> progress_cond		8016337	0					
ANR	8016444	UnaryOperationExpression	& prev_thread -> progress_cond		8016337	0					
ANR	8016445	UnaryOperator	&		8016337	0					
ANR	8016446	PtrMemberAccess	prev_thread -> progress_cond		8016337	1					
ANR	8016447	Identifier	prev_thread		8016337	0					
ANR	8016448	Identifier	progress_cond		8016337	1					
ANR	8016449	Argument	& prev_thread -> progress_mutex		8016337	1					
ANR	8016450	UnaryOperationExpression	& prev_thread -> progress_mutex		8016337	0					
ANR	8016451	UnaryOperator	&		8016337	0					
ANR	8016452	PtrMemberAccess	prev_thread -> progress_mutex		8016337	1					
ANR	8016453	Identifier	prev_thread		8016337	0					
ANR	8016454	Identifier	progress_mutex		8016337	1					
ANR	8016455	ExpressionStatement	pthread_mutex_unlock ( & prev_thread -> progress_mutex )	39:12:704:754	8016337	2	True				
ANR	8016456	CallExpression	pthread_mutex_unlock ( & prev_thread -> progress_mutex )		8016337	0					
ANR	8016457	Callee	pthread_mutex_unlock		8016337	0					
ANR	8016458	Identifier	pthread_mutex_unlock		8016337	0					
ANR	8016459	ArgumentList	& prev_thread -> progress_mutex		8016337	1					
ANR	8016460	Argument	& prev_thread -> progress_mutex		8016337	0					
ANR	8016461	UnaryOperationExpression	& prev_thread -> progress_mutex		8016337	0					
ANR	8016462	UnaryOperator	&		8016337	0					
ANR	8016463	PtrMemberAccess	prev_thread -> progress_mutex		8016337	1					
ANR	8016464	Identifier	prev_thread		8016337	0					
ANR	8016465	Identifier	progress_mutex		8016337	1					
ANR	8016466	ExpressionStatement	"err = update_context_from_thread ( p -> avctx , prev_thread -> avctx , 0 )"	45:8:778:843	8016337	2	True				
ANR	8016467	AssignmentExpression	"err = update_context_from_thread ( p -> avctx , prev_thread -> avctx , 0 )"		8016337	0		=			
ANR	8016468	Identifier	err		8016337	0					
ANR	8016469	CallExpression	"update_context_from_thread ( p -> avctx , prev_thread -> avctx , 0 )"		8016337	1					
ANR	8016470	Callee	update_context_from_thread		8016337	0					
ANR	8016471	Identifier	update_context_from_thread		8016337	0					
ANR	8016472	ArgumentList	p -> avctx		8016337	1					
ANR	8016473	Argument	p -> avctx		8016337	0					
ANR	8016474	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016475	Identifier	p		8016337	0					
ANR	8016476	Identifier	avctx		8016337	1					
ANR	8016477	Argument	prev_thread -> avctx		8016337	1					
ANR	8016478	PtrMemberAccess	prev_thread -> avctx		8016337	0					
ANR	8016479	Identifier	prev_thread		8016337	0					
ANR	8016480	Identifier	avctx		8016337	1					
ANR	8016481	Argument	0		8016337	2					
ANR	8016482	PrimaryExpression	0		8016337	0					
ANR	8016483	IfStatement	if ( err )		8016337	3					
ANR	8016484	Condition	err	47:12:858:860	8016337	0	True				
ANR	8016485	Identifier	err		8016337	0					
ANR	8016486	CompoundStatement		45:17:798:798	8016337	1					
ANR	8016487	ExpressionStatement	pthread_mutex_unlock ( & p -> mutex )	49:12:878:909	8016337	0	True				
ANR	8016488	CallExpression	pthread_mutex_unlock ( & p -> mutex )		8016337	0					
ANR	8016489	Callee	pthread_mutex_unlock		8016337	0					
ANR	8016490	Identifier	pthread_mutex_unlock		8016337	0					
ANR	8016491	ArgumentList	& p -> mutex		8016337	1					
ANR	8016492	Argument	& p -> mutex		8016337	0					
ANR	8016493	UnaryOperationExpression	& p -> mutex		8016337	0					
ANR	8016494	UnaryOperator	&		8016337	0					
ANR	8016495	PtrMemberAccess	p -> mutex		8016337	1					
ANR	8016496	Identifier	p		8016337	0					
ANR	8016497	Identifier	mutex		8016337	1					
ANR	8016498	ReturnStatement	return err ;	51:12:924:934	8016337	1	True				
ANR	8016499	Identifier	err		8016337	0					
ANR	8016500	ExpressionStatement	av_packet_unref ( & p -> avpkt )	59:4:961:987	8016337	7	True				
ANR	8016501	CallExpression	av_packet_unref ( & p -> avpkt )		8016337	0					
ANR	8016502	Callee	av_packet_unref		8016337	0					
ANR	8016503	Identifier	av_packet_unref		8016337	0					
ANR	8016504	ArgumentList	& p -> avpkt		8016337	1					
ANR	8016505	Argument	& p -> avpkt		8016337	0					
ANR	8016506	UnaryOperationExpression	& p -> avpkt		8016337	0					
ANR	8016507	UnaryOperator	&		8016337	0					
ANR	8016508	PtrMemberAccess	p -> avpkt		8016337	1					
ANR	8016509	Identifier	p		8016337	0					
ANR	8016510	Identifier	avpkt		8016337	1					
ANR	8016511	ExpressionStatement	"av_packet_ref ( & p -> avpkt , avpkt )"	61:4:994:1025	8016337	8	True				
ANR	8016512	CallExpression	"av_packet_ref ( & p -> avpkt , avpkt )"		8016337	0					
ANR	8016513	Callee	av_packet_ref		8016337	0					
ANR	8016514	Identifier	av_packet_ref		8016337	0					
ANR	8016515	ArgumentList	& p -> avpkt		8016337	1					
ANR	8016516	Argument	& p -> avpkt		8016337	0					
ANR	8016517	UnaryOperationExpression	& p -> avpkt		8016337	0					
ANR	8016518	UnaryOperator	&		8016337	0					
ANR	8016519	PtrMemberAccess	p -> avpkt		8016337	1					
ANR	8016520	Identifier	p		8016337	0					
ANR	8016521	Identifier	avpkt		8016337	1					
ANR	8016522	Argument	avpkt		8016337	1					
ANR	8016523	Identifier	avpkt		8016337	0					
ANR	8016524	ExpressionStatement	p -> state = STATE_SETTING_UP	65:4:1034:1061	8016337	9	True				
ANR	8016525	AssignmentExpression	p -> state = STATE_SETTING_UP		8016337	0		=			
ANR	8016526	PtrMemberAccess	p -> state		8016337	0					
ANR	8016527	Identifier	p		8016337	0					
ANR	8016528	Identifier	state		8016337	1					
ANR	8016529	Identifier	STATE_SETTING_UP		8016337	1					
ANR	8016530	ExpressionStatement	pthread_cond_signal ( & p -> input_cond )	67:4:1068:1103	8016337	10	True				
ANR	8016531	CallExpression	pthread_cond_signal ( & p -> input_cond )		8016337	0					
ANR	8016532	Callee	pthread_cond_signal		8016337	0					
ANR	8016533	Identifier	pthread_cond_signal		8016337	0					
ANR	8016534	ArgumentList	& p -> input_cond		8016337	1					
ANR	8016535	Argument	& p -> input_cond		8016337	0					
ANR	8016536	UnaryOperationExpression	& p -> input_cond		8016337	0					
ANR	8016537	UnaryOperator	&		8016337	0					
ANR	8016538	PtrMemberAccess	p -> input_cond		8016337	1					
ANR	8016539	Identifier	p		8016337	0					
ANR	8016540	Identifier	input_cond		8016337	1					
ANR	8016541	ExpressionStatement	pthread_mutex_unlock ( & p -> mutex )	69:4:1110:1141	8016337	11	True				
ANR	8016542	CallExpression	pthread_mutex_unlock ( & p -> mutex )		8016337	0					
ANR	8016543	Callee	pthread_mutex_unlock		8016337	0					
ANR	8016544	Identifier	pthread_mutex_unlock		8016337	0					
ANR	8016545	ArgumentList	& p -> mutex		8016337	1					
ANR	8016546	Argument	& p -> mutex		8016337	0					
ANR	8016547	UnaryOperationExpression	& p -> mutex		8016337	0					
ANR	8016548	UnaryOperator	&		8016337	0					
ANR	8016549	PtrMemberAccess	p -> mutex		8016337	1					
ANR	8016550	Identifier	p		8016337	0					
ANR	8016551	Identifier	mutex		8016337	1					
ANR	8016552	IfStatement	if ( ! p -> avctx -> thread_safe_callbacks && ( p -> avctx -> get_format != avcodec_default_get_format || p -> avctx -> get_buffer2 != avcodec_default_get_buffer2 ) )		8016337	12					
ANR	8016553	Condition	! p -> avctx -> thread_safe_callbacks && ( p -> avctx -> get_format != avcodec_default_get_format || p -> avctx -> get_buffer2 != avcodec_default_get_buffer2 )	85:8:1342:1506	8016337	0	True				
ANR	8016554	AndExpression	! p -> avctx -> thread_safe_callbacks && ( p -> avctx -> get_format != avcodec_default_get_format || p -> avctx -> get_buffer2 != avcodec_default_get_buffer2 )		8016337	0		&&			
ANR	8016555	UnaryOperationExpression	! p -> avctx -> thread_safe_callbacks		8016337	0					
ANR	8016556	UnaryOperator	!		8016337	0					
ANR	8016557	PtrMemberAccess	p -> avctx -> thread_safe_callbacks		8016337	1					
ANR	8016558	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016559	Identifier	p		8016337	0					
ANR	8016560	Identifier	avctx		8016337	1					
ANR	8016561	Identifier	thread_safe_callbacks		8016337	1					
ANR	8016562	OrExpression	p -> avctx -> get_format != avcodec_default_get_format || p -> avctx -> get_buffer2 != avcodec_default_get_buffer2		8016337	1		||			
ANR	8016563	EqualityExpression	p -> avctx -> get_format != avcodec_default_get_format		8016337	0		!=			
ANR	8016564	PtrMemberAccess	p -> avctx -> get_format		8016337	0					
ANR	8016565	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016566	Identifier	p		8016337	0					
ANR	8016567	Identifier	avctx		8016337	1					
ANR	8016568	Identifier	get_format		8016337	1					
ANR	8016569	Identifier	avcodec_default_get_format		8016337	1					
ANR	8016570	EqualityExpression	p -> avctx -> get_buffer2 != avcodec_default_get_buffer2		8016337	1		!=			
ANR	8016571	PtrMemberAccess	p -> avctx -> get_buffer2		8016337	0					
ANR	8016572	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016573	Identifier	p		8016337	0					
ANR	8016574	Identifier	avctx		8016337	1					
ANR	8016575	Identifier	get_buffer2		8016337	1					
ANR	8016576	Identifier	avcodec_default_get_buffer2		8016337	1					
ANR	8016577	CompoundStatement		87:64:1444:1444	8016337	1					
ANR	8016578	WhileStatement	while ( p -> state != STATE_SETUP_FINISHED && p -> state != STATE_INPUT_READY )		8016337	0					
ANR	8016579	Condition	p -> state != STATE_SETUP_FINISHED && p -> state != STATE_INPUT_READY	91:15:1527:1591	8016337	0	True				
ANR	8016580	AndExpression	p -> state != STATE_SETUP_FINISHED && p -> state != STATE_INPUT_READY		8016337	0		&&			
ANR	8016581	EqualityExpression	p -> state != STATE_SETUP_FINISHED		8016337	0		!=			
ANR	8016582	PtrMemberAccess	p -> state		8016337	0					
ANR	8016583	Identifier	p		8016337	0					
ANR	8016584	Identifier	state		8016337	1					
ANR	8016585	Identifier	STATE_SETUP_FINISHED		8016337	1					
ANR	8016586	EqualityExpression	p -> state != STATE_INPUT_READY		8016337	1		!=			
ANR	8016587	PtrMemberAccess	p -> state		8016337	0					
ANR	8016588	Identifier	p		8016337	0					
ANR	8016589	Identifier	state		8016337	1					
ANR	8016590	Identifier	STATE_INPUT_READY		8016337	1					
ANR	8016591	CompoundStatement		91:12:1544:1561	8016337	1					
ANR	8016592	IdentifierDeclStatement	int call_done = 1 ;	93:12:1609:1626	8016337	0	True				
ANR	8016593	IdentifierDecl	call_done = 1		8016337	0					
ANR	8016594	IdentifierDeclType	int		8016337	0					
ANR	8016595	Identifier	call_done		8016337	1					
ANR	8016596	AssignmentExpression	call_done = 1		8016337	2		=			
ANR	8016597	Identifier	call_done		8016337	0					
ANR	8016598	PrimaryExpression	1		8016337	1					
ANR	8016599	ExpressionStatement	pthread_mutex_lock ( & p -> progress_mutex )	95:12:1641:1679	8016337	1	True				
ANR	8016600	CallExpression	pthread_mutex_lock ( & p -> progress_mutex )		8016337	0					
ANR	8016601	Callee	pthread_mutex_lock		8016337	0					
ANR	8016602	Identifier	pthread_mutex_lock		8016337	0					
ANR	8016603	ArgumentList	& p -> progress_mutex		8016337	1					
ANR	8016604	Argument	& p -> progress_mutex		8016337	0					
ANR	8016605	UnaryOperationExpression	& p -> progress_mutex		8016337	0					
ANR	8016606	UnaryOperator	&		8016337	0					
ANR	8016607	PtrMemberAccess	p -> progress_mutex		8016337	1					
ANR	8016608	Identifier	p		8016337	0					
ANR	8016609	Identifier	progress_mutex		8016337	1					
ANR	8016610	WhileStatement	while ( p -> state == STATE_SETTING_UP )		8016337	2					
ANR	8016611	Condition	p -> state == STATE_SETTING_UP	97:19:1701:1728	8016337	0	True				
ANR	8016612	EqualityExpression	p -> state == STATE_SETTING_UP		8016337	0		==			
ANR	8016613	PtrMemberAccess	p -> state		8016337	0					
ANR	8016614	Identifier	p		8016337	0					
ANR	8016615	Identifier	state		8016337	1					
ANR	8016616	Identifier	STATE_SETTING_UP		8016337	1					
ANR	8016617	ExpressionStatement	"pthread_cond_wait ( & p -> progress_cond , & p -> progress_mutex )"	99:16:1748:1804	8016337	1	True				
ANR	8016618	CallExpression	"pthread_cond_wait ( & p -> progress_cond , & p -> progress_mutex )"		8016337	0					
ANR	8016619	Callee	pthread_cond_wait		8016337	0					
ANR	8016620	Identifier	pthread_cond_wait		8016337	0					
ANR	8016621	ArgumentList	& p -> progress_cond		8016337	1					
ANR	8016622	Argument	& p -> progress_cond		8016337	0					
ANR	8016623	UnaryOperationExpression	& p -> progress_cond		8016337	0					
ANR	8016624	UnaryOperator	&		8016337	0					
ANR	8016625	PtrMemberAccess	p -> progress_cond		8016337	1					
ANR	8016626	Identifier	p		8016337	0					
ANR	8016627	Identifier	progress_cond		8016337	1					
ANR	8016628	Argument	& p -> progress_mutex		8016337	1					
ANR	8016629	UnaryOperationExpression	& p -> progress_mutex		8016337	0					
ANR	8016630	UnaryOperator	&		8016337	0					
ANR	8016631	PtrMemberAccess	p -> progress_mutex		8016337	1					
ANR	8016632	Identifier	p		8016337	0					
ANR	8016633	Identifier	progress_mutex		8016337	1					
ANR	8016634	SwitchStatement	switch ( p -> state )		8016337	3					
ANR	8016635	Condition	p -> state	103:20:1829:1836	8016337	0	True				
ANR	8016636	PtrMemberAccess	p -> state		8016337	0					
ANR	8016637	Identifier	p		8016337	0					
ANR	8016638	Identifier	state		8016337	1					
ANR	8016639	CompoundStatement		101:30:1774:1774	8016337	1					
ANR	8016640	Label	case STATE_GET_BUFFER :	105:12:1854:1875	8016337	0	True				
ANR	8016641	Identifier	STATE_GET_BUFFER		8016337	0					
ANR	8016642	ExpressionStatement	"p -> result = ff_get_buffer ( p -> avctx , p -> requested_frame , p -> requested_flags )"	107:16:1894:1969	8016337	1	True				
ANR	8016643	AssignmentExpression	"p -> result = ff_get_buffer ( p -> avctx , p -> requested_frame , p -> requested_flags )"		8016337	0		=			
ANR	8016644	PtrMemberAccess	p -> result		8016337	0					
ANR	8016645	Identifier	p		8016337	0					
ANR	8016646	Identifier	result		8016337	1					
ANR	8016647	CallExpression	"ff_get_buffer ( p -> avctx , p -> requested_frame , p -> requested_flags )"		8016337	1					
ANR	8016648	Callee	ff_get_buffer		8016337	0					
ANR	8016649	Identifier	ff_get_buffer		8016337	0					
ANR	8016650	ArgumentList	p -> avctx		8016337	1					
ANR	8016651	Argument	p -> avctx		8016337	0					
ANR	8016652	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016653	Identifier	p		8016337	0					
ANR	8016654	Identifier	avctx		8016337	1					
ANR	8016655	Argument	p -> requested_frame		8016337	1					
ANR	8016656	PtrMemberAccess	p -> requested_frame		8016337	0					
ANR	8016657	Identifier	p		8016337	0					
ANR	8016658	Identifier	requested_frame		8016337	1					
ANR	8016659	Argument	p -> requested_flags		8016337	2					
ANR	8016660	PtrMemberAccess	p -> requested_flags		8016337	0					
ANR	8016661	Identifier	p		8016337	0					
ANR	8016662	Identifier	requested_flags		8016337	1					
ANR	8016663	BreakStatement	break ;	109:16:1988:1993	8016337	2	True				
ANR	8016664	Label	case STATE_GET_FORMAT :	111:12:2008:2029	8016337	3	True				
ANR	8016665	Identifier	STATE_GET_FORMAT		8016337	0					
ANR	8016666	ExpressionStatement	"p -> result_format = ff_get_format ( p -> avctx , p -> available_formats )"	113:16:2048:2112	8016337	4	True				
ANR	8016667	AssignmentExpression	"p -> result_format = ff_get_format ( p -> avctx , p -> available_formats )"		8016337	0		=			
ANR	8016668	PtrMemberAccess	p -> result_format		8016337	0					
ANR	8016669	Identifier	p		8016337	0					
ANR	8016670	Identifier	result_format		8016337	1					
ANR	8016671	CallExpression	"ff_get_format ( p -> avctx , p -> available_formats )"		8016337	1					
ANR	8016672	Callee	ff_get_format		8016337	0					
ANR	8016673	Identifier	ff_get_format		8016337	0					
ANR	8016674	ArgumentList	p -> avctx		8016337	1					
ANR	8016675	Argument	p -> avctx		8016337	0					
ANR	8016676	PtrMemberAccess	p -> avctx		8016337	0					
ANR	8016677	Identifier	p		8016337	0					
ANR	8016678	Identifier	avctx		8016337	1					
ANR	8016679	Argument	p -> available_formats		8016337	1					
ANR	8016680	PtrMemberAccess	p -> available_formats		8016337	0					
ANR	8016681	Identifier	p		8016337	0					
ANR	8016682	Identifier	available_formats		8016337	1					
ANR	8016683	BreakStatement	break ;	115:16:2131:2136	8016337	5	True				
ANR	8016684	Label	default :	117:12:2151:2158	8016337	6	True				
ANR	8016685	Identifier	default		8016337	0					
ANR	8016686	ExpressionStatement	call_done = 0	119:16:2177:2190	8016337	7	True				
ANR	8016687	AssignmentExpression	call_done = 0		8016337	0		=			
ANR	8016688	Identifier	call_done		8016337	0					
ANR	8016689	PrimaryExpression	0		8016337	1					
ANR	8016690	BreakStatement	break ;	121:16:2209:2214	8016337	8	True				
ANR	8016691	IfStatement	if ( call_done )		8016337	4					
ANR	8016692	Condition	call_done	125:16:2248:2256	8016337	0	True				
ANR	8016693	Identifier	call_done		8016337	0					
ANR	8016694	CompoundStatement		123:27:2194:2194	8016337	1					
ANR	8016695	ExpressionStatement	p -> state = STATE_SETTING_UP	127:16:2278:2306	8016337	0	True				
ANR	8016696	AssignmentExpression	p -> state = STATE_SETTING_UP		8016337	0		=			
ANR	8016697	PtrMemberAccess	p -> state		8016337	0					
ANR	8016698	Identifier	p		8016337	0					
ANR	8016699	Identifier	state		8016337	1					
ANR	8016700	Identifier	STATE_SETTING_UP		8016337	1					
ANR	8016701	ExpressionStatement	pthread_cond_signal ( & p -> progress_cond )	129:16:2325:2363	8016337	1	True				
ANR	8016702	CallExpression	pthread_cond_signal ( & p -> progress_cond )		8016337	0					
ANR	8016703	Callee	pthread_cond_signal		8016337	0					
ANR	8016704	Identifier	pthread_cond_signal		8016337	0					
ANR	8016705	ArgumentList	& p -> progress_cond		8016337	1					
ANR	8016706	Argument	& p -> progress_cond		8016337	0					
ANR	8016707	UnaryOperationExpression	& p -> progress_cond		8016337	0					
ANR	8016708	UnaryOperator	&		8016337	0					
ANR	8016709	PtrMemberAccess	p -> progress_cond		8016337	1					
ANR	8016710	Identifier	p		8016337	0					
ANR	8016711	Identifier	progress_cond		8016337	1					
ANR	8016712	ExpressionStatement	pthread_mutex_unlock ( & p -> progress_mutex )	133:12:2393:2433	8016337	5	True				
ANR	8016713	CallExpression	pthread_mutex_unlock ( & p -> progress_mutex )		8016337	0					
ANR	8016714	Callee	pthread_mutex_unlock		8016337	0					
ANR	8016715	Identifier	pthread_mutex_unlock		8016337	0					
ANR	8016716	ArgumentList	& p -> progress_mutex		8016337	1					
ANR	8016717	Argument	& p -> progress_mutex		8016337	0					
ANR	8016718	UnaryOperationExpression	& p -> progress_mutex		8016337	0					
ANR	8016719	UnaryOperator	&		8016337	0					
ANR	8016720	PtrMemberAccess	p -> progress_mutex		8016337	1					
ANR	8016721	Identifier	p		8016337	0					
ANR	8016722	Identifier	progress_mutex		8016337	1					
ANR	8016723	ExpressionStatement	fctx -> prev_thread = p	141:4:2460:2481	8016337	13	True				
ANR	8016724	AssignmentExpression	fctx -> prev_thread = p		8016337	0		=			
ANR	8016725	PtrMemberAccess	fctx -> prev_thread		8016337	0					
ANR	8016726	Identifier	fctx		8016337	0					
ANR	8016727	Identifier	prev_thread		8016337	1					
ANR	8016728	Identifier	p		8016337	1					
ANR	8016729	ExpressionStatement	fctx -> next_decoding ++	143:4:2488:2509	8016337	14	True				
ANR	8016730	PostIncDecOperationExpression	fctx -> next_decoding ++		8016337	0					
ANR	8016731	PtrMemberAccess	fctx -> next_decoding		8016337	0					
ANR	8016732	Identifier	fctx		8016337	0					
ANR	8016733	Identifier	next_decoding		8016337	1					
ANR	8016734	IncDec	++		8016337	1					
ANR	8016735	ReturnStatement	return 0 ;	147:4:2518:2526	8016337	15	True				
ANR	8016736	PrimaryExpression	0		8016337	0					
ANR	8016737	ReturnType	static int		8016337	1					
ANR	8016738	Identifier	submit_packet		8016337	2					
ANR	8016739	ParameterList	"PerThreadContext * p , AVPacket * avpkt"		8016337	3					
ANR	8016740	Parameter	PerThreadContext * p	1:25:25:43	8016337	0	True				
ANR	8016741	ParameterType	PerThreadContext *		8016337	0					
ANR	8016742	Identifier	p		8016337	1					
ANR	8016743	Parameter	AVPacket * avpkt	1:46:46:60	8016337	1	True				
ANR	8016744	ParameterType	AVPacket *		8016337	0					
ANR	8016745	Identifier	avpkt		8016337	1					
ANR	8016746	CFGEntryNode	ENTRY		8016337		True				
ANR	8016747	CFGExitNode	EXIT		8016337		True				
ANR	8016748	Symbol	& p -> progress_cond		8016337						
ANR	8016749	Symbol	prev_thread		8016337						
ANR	8016750	Symbol	& p -> progress_mutex		8016337						
ANR	8016751	Symbol	avpkt		8016337						
ANR	8016752	Symbol	STATE_SETUP_FINISHED		8016337						
ANR	8016753	Symbol	STATE_INPUT_READY		8016337						
ANR	8016754	Symbol	ff_get_buffer		8016337						
ANR	8016755	Symbol	p -> requested_frame		8016337						
ANR	8016756	Symbol	p -> result_format		8016337						
ANR	8016757	Symbol	avpkt -> size		8016337						
ANR	8016758	Symbol	* * p		8016337						
ANR	8016759	Symbol	& p -> avpkt		8016337						
ANR	8016760	Symbol	call_done		8016337						
ANR	8016761	Symbol	& prev_thread -> progress_cond		8016337						
ANR	8016762	Symbol	p -> result		8016337						
ANR	8016763	Symbol	STATE_SETTING_UP		8016337						
ANR	8016764	Symbol	p -> avctx -> get_format		8016337						
ANR	8016765	Symbol	update_context_from_thread		8016337						
ANR	8016766	Symbol	ff_get_format		8016337						
ANR	8016767	Symbol	codec -> capabilities		8016337						
ANR	8016768	Symbol	* avpkt		8016337						
ANR	8016769	Symbol	p -> avctx -> thread_safe_callbacks		8016337						
ANR	8016770	Symbol	* p -> avctx		8016337						
ANR	8016771	Symbol	err		8016337						
ANR	8016772	Symbol	fctx -> next_decoding		8016337						
ANR	8016773	Symbol	* codec		8016337						
ANR	8016774	Symbol	* fctx		8016337						
ANR	8016775	Symbol	prev_thread -> avctx		8016337						
ANR	8016776	Symbol	AV_CODEC_CAP_DELAY		8016337						
ANR	8016777	Symbol	p -> avctx -> get_buffer2		8016337						
ANR	8016778	Symbol	prev_thread -> state		8016337						
ANR	8016779	Symbol	fctx		8016337						
ANR	8016780	Symbol	p -> avctx -> codec		8016337						
ANR	8016781	Symbol	p		8016337						
ANR	8016782	Symbol	p -> requested_flags		8016337						
ANR	8016783	Symbol	codec		8016337						
ANR	8016784	Symbol	* prev_thread		8016337						
ANR	8016785	Symbol	& p -> input_cond		8016337						
ANR	8016786	Symbol	p -> available_formats		8016337						
ANR	8016787	Symbol	p -> parent		8016337						
ANR	8016788	Symbol	& p -> mutex		8016337						
ANR	8016789	Symbol	fctx -> prev_thread		8016337						
ANR	8016790	Symbol	avcodec_default_get_format		8016337						
ANR	8016791	Symbol	* p		8016337						
ANR	8016792	Symbol	& prev_thread -> progress_mutex		8016337						
ANR	8016793	Symbol	p -> avctx		8016337						
ANR	8016794	Symbol	avcodec_default_get_buffer2		8016337						
ANR	8016795	Symbol	p -> state		8016337						
