command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5600162	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_read_default_1.c								
ANR	5600163	Function	mov_read_default	1:0:0:3733							
ANR	5600164	FunctionDef	"mov_read_default (MOVContext * c , AVIOContext * pb , MOVAtom atom)"		5600163	0					
ANR	5600165	CompoundStatement		3:0:75:3733	5600163	0					
ANR	5600166	IdentifierDeclStatement	int64_t total_size = 0 ;	5:4:82:104	5600163	0	True				
ANR	5600167	IdentifierDecl	total_size = 0		5600163	0					
ANR	5600168	IdentifierDeclType	int64_t		5600163	0					
ANR	5600169	Identifier	total_size		5600163	1					
ANR	5600170	AssignmentExpression	total_size = 0		5600163	2		=			
ANR	5600171	Identifier	total_size		5600163	0					
ANR	5600172	PrimaryExpression	0		5600163	1					
ANR	5600173	IdentifierDeclStatement	MOVAtom a ;	7:4:111:120	5600163	1	True				
ANR	5600174	IdentifierDecl	a		5600163	0					
ANR	5600175	IdentifierDeclType	MOVAtom		5600163	0					
ANR	5600176	Identifier	a		5600163	1					
ANR	5600177	IdentifierDeclStatement	int i ;	9:4:127:132	5600163	2	True				
ANR	5600178	IdentifierDecl	i		5600163	0					
ANR	5600179	IdentifierDeclType	int		5600163	0					
ANR	5600180	Identifier	i		5600163	1					
ANR	5600181	IfStatement	if ( atom . size < 0 )		5600163	3					
ANR	5600182	Condition	atom . size < 0	13:8:145:157	5600163	0	True				
ANR	5600183	RelationalExpression	atom . size < 0		5600163	0		<			
ANR	5600184	MemberAccess	atom . size		5600163	0					
ANR	5600185	Identifier	atom		5600163	0					
ANR	5600186	Identifier	size		5600163	1					
ANR	5600187	PrimaryExpression	0		5600163	1					
ANR	5600188	ExpressionStatement	atom . size = INT64_MAX	15:8:169:190	5600163	1	True				
ANR	5600189	AssignmentExpression	atom . size = INT64_MAX		5600163	0		=			
ANR	5600190	MemberAccess	atom . size		5600163	0					
ANR	5600191	Identifier	atom		5600163	0					
ANR	5600192	Identifier	size		5600163	1					
ANR	5600193	Identifier	INT64_MAX		5600163	1					
ANR	5600194	WhileStatement	while ( total_size + 8 <= atom . size && ! avio_feof ( pb ) )		5600163	4					
ANR	5600195	Condition	total_size + 8 <= atom . size && ! avio_feof ( pb )	17:11:204:248	5600163	0	True				
ANR	5600196	AndExpression	total_size + 8 <= atom . size && ! avio_feof ( pb )		5600163	0		&&			
ANR	5600197	RelationalExpression	total_size + 8 <= atom . size		5600163	0		<=			
ANR	5600198	AdditiveExpression	total_size + 8		5600163	0		+			
ANR	5600199	Identifier	total_size		5600163	0					
ANR	5600200	PrimaryExpression	8		5600163	1					
ANR	5600201	MemberAccess	atom . size		5600163	1					
ANR	5600202	Identifier	atom		5600163	0					
ANR	5600203	Identifier	size		5600163	1					
ANR	5600204	UnaryOperationExpression	! avio_feof ( pb )		5600163	1					
ANR	5600205	UnaryOperator	!		5600163	0					
ANR	5600206	CallExpression	avio_feof ( pb )		5600163	1					
ANR	5600207	Callee	avio_feof		5600163	0					
ANR	5600208	Identifier	avio_feof		5600163	0					
ANR	5600209	ArgumentList	pb		5600163	1					
ANR	5600210	Argument	pb		5600163	0					
ANR	5600211	Identifier	pb		5600163	0					
ANR	5600212	CompoundStatement		17:8:186:241	5600163	1					
ANR	5600213	IdentifierDeclStatement	"int ( * parse ) ( MOVContext * , AVIOContext * , MOVAtom ) = NULL ;"	19:8:262:317	5600163	0	True				
ANR	5600214	IdentifierDecl	"( * parse ) ( MOVContext * , AVIOContext * , MOVAtom ) = NULL"		5600163	0					
ANR	5600215	IdentifierDeclType	"int ( * ) ( MOVContext * , AVIOContext * , MOVAtom )"		5600163	0					
ANR	5600216	Identifier	parse		5600163	1					
ANR	5600217	AssignmentExpression	"( * parse ) ( MOVContext * , AVIOContext * , MOVAtom ) = NULL"		5600163	2		=			
ANR	5600218	Identifier	NULL		5600163	0					
ANR	5600219	Identifier	NULL		5600163	1					
ANR	5600220	ExpressionStatement	a . size = atom . size	21:8:328:346	5600163	1	True				
ANR	5600221	AssignmentExpression	a . size = atom . size		5600163	0		=			
ANR	5600222	MemberAccess	a . size		5600163	0					
ANR	5600223	Identifier	a		5600163	0					
ANR	5600224	Identifier	size		5600163	1					
ANR	5600225	MemberAccess	atom . size		5600163	1					
ANR	5600226	Identifier	atom		5600163	0					
ANR	5600227	Identifier	size		5600163	1					
ANR	5600228	ExpressionStatement	a . type = 0	23:8:357:365	5600163	2	True				
ANR	5600229	AssignmentExpression	a . type = 0		5600163	0		=			
ANR	5600230	MemberAccess	a . type		5600163	0					
ANR	5600231	Identifier	a		5600163	0					
ANR	5600232	Identifier	type		5600163	1					
ANR	5600233	PrimaryExpression	0		5600163	1					
ANR	5600234	IfStatement	if ( atom . size >= 8 )		5600163	3					
ANR	5600235	Condition	atom . size >= 8	25:12:380:393	5600163	0	True				
ANR	5600236	RelationalExpression	atom . size >= 8		5600163	0		>=			
ANR	5600237	MemberAccess	atom . size		5600163	0					
ANR	5600238	Identifier	atom		5600163	0					
ANR	5600239	Identifier	size		5600163	1					
ANR	5600240	PrimaryExpression	8		5600163	1					
ANR	5600241	CompoundStatement		23:28:320:320	5600163	1					
ANR	5600242	ExpressionStatement	a . size = avio_rb32 ( pb )	27:12:411:433	5600163	0	True				
ANR	5600243	AssignmentExpression	a . size = avio_rb32 ( pb )		5600163	0		=			
ANR	5600244	MemberAccess	a . size		5600163	0					
ANR	5600245	Identifier	a		5600163	0					
ANR	5600246	Identifier	size		5600163	1					
ANR	5600247	CallExpression	avio_rb32 ( pb )		5600163	1					
ANR	5600248	Callee	avio_rb32		5600163	0					
ANR	5600249	Identifier	avio_rb32		5600163	0					
ANR	5600250	ArgumentList	pb		5600163	1					
ANR	5600251	Argument	pb		5600163	0					
ANR	5600252	Identifier	pb		5600163	0					
ANR	5600253	ExpressionStatement	a . type = avio_rl32 ( pb )	29:12:448:470	5600163	1	True				
ANR	5600254	AssignmentExpression	a . type = avio_rl32 ( pb )		5600163	0		=			
ANR	5600255	MemberAccess	a . type		5600163	0					
ANR	5600256	Identifier	a		5600163	0					
ANR	5600257	Identifier	type		5600163	1					
ANR	5600258	CallExpression	avio_rl32 ( pb )		5600163	1					
ANR	5600259	Callee	avio_rl32		5600163	0					
ANR	5600260	Identifier	avio_rl32		5600163	0					
ANR	5600261	ArgumentList	pb		5600163	1					
ANR	5600262	Argument	pb		5600163	0					
ANR	5600263	Identifier	pb		5600163	0					
ANR	5600264	IfStatement	"if ( a . type == MKTAG ( 'f' , 'r' , 'e' , 'e' ) && a . size >= 8 && c -> moov_retry )"		5600163	2					
ANR	5600265	Condition	"a . type == MKTAG ( 'f' , 'r' , 'e' , 'e' ) && a . size >= 8 && c -> moov_retry"	31:16:489:586	5600163	0	True				
ANR	5600266	AndExpression	"a . type == MKTAG ( 'f' , 'r' , 'e' , 'e' ) && a . size >= 8 && c -> moov_retry"		5600163	0		&&			
ANR	5600267	EqualityExpression	"a . type == MKTAG ( 'f' , 'r' , 'e' , 'e' )"		5600163	0		==			
ANR	5600268	MemberAccess	a . type		5600163	0					
ANR	5600269	Identifier	a		5600163	0					
ANR	5600270	Identifier	type		5600163	1					
ANR	5600271	CallExpression	"MKTAG ( 'f' , 'r' , 'e' , 'e' )"		5600163	1					
ANR	5600272	Callee	MKTAG		5600163	0					
ANR	5600273	Identifier	MKTAG		5600163	0					
ANR	5600274	ArgumentList	'f'		5600163	1					
ANR	5600275	Argument	'f'		5600163	0					
ANR	5600276	PrimaryExpression	'f'		5600163	0					
ANR	5600277	Argument	'r'		5600163	1					
ANR	5600278	PrimaryExpression	'r'		5600163	0					
ANR	5600279	Argument	'e'		5600163	2					
ANR	5600280	PrimaryExpression	'e'		5600163	0					
ANR	5600281	Argument	'e'		5600163	3					
ANR	5600282	PrimaryExpression	'e'		5600163	0					
ANR	5600283	AndExpression	a . size >= 8 && c -> moov_retry		5600163	1		&&			
ANR	5600284	RelationalExpression	a . size >= 8		5600163	0		>=			
ANR	5600285	MemberAccess	a . size		5600163	0					
ANR	5600286	Identifier	a		5600163	0					
ANR	5600287	Identifier	size		5600163	1					
ANR	5600288	PrimaryExpression	8		5600163	1					
ANR	5600289	PtrMemberAccess	c -> moov_retry		5600163	1					
ANR	5600290	Identifier	c		5600163	0					
ANR	5600291	Identifier	moov_retry		5600163	1					
ANR	5600292	CompoundStatement		37:16:565:601	5600163	1					
ANR	5600293	IdentifierDeclStatement	uint8_t buf [ 8 ] ;	37:16:608:622	5600163	0	True				
ANR	5600294	IdentifierDecl	buf [ 8 ]		5600163	0					
ANR	5600295	IdentifierDeclType	uint8_t [ 8 ]		5600163	0					
ANR	5600296	Identifier	buf		5600163	1					
ANR	5600297	PrimaryExpression	8		5600163	2					
ANR	5600298	IdentifierDeclStatement	uint32_t * type = ( uint32_t * ) buf + 1 ;	39:16:641:677	5600163	1	True				
ANR	5600299	IdentifierDecl	* type = ( uint32_t * ) buf + 1		5600163	0					
ANR	5600300	IdentifierDeclType	uint32_t *		5600163	0					
ANR	5600301	Identifier	type		5600163	1					
ANR	5600302	AssignmentExpression	* type = ( uint32_t * ) buf + 1		5600163	2		=			
ANR	5600303	Identifier	type		5600163	0					
ANR	5600304	AdditiveExpression	( uint32_t * ) buf + 1		5600163	1		+			
ANR	5600305	CastExpression	( uint32_t * ) buf		5600163	0					
ANR	5600306	CastTarget	uint32_t *		5600163	0					
ANR	5600307	Identifier	buf		5600163	1					
ANR	5600308	PrimaryExpression	1		5600163	1					
ANR	5600309	ExpressionStatement	"avio_read ( pb , buf , 8 )"	41:16:696:717	5600163	2	True				
ANR	5600310	CallExpression	"avio_read ( pb , buf , 8 )"		5600163	0					
ANR	5600311	Callee	avio_read		5600163	0					
ANR	5600312	Identifier	avio_read		5600163	0					
ANR	5600313	ArgumentList	pb		5600163	1					
ANR	5600314	Argument	pb		5600163	0					
ANR	5600315	Identifier	pb		5600163	0					
ANR	5600316	Argument	buf		5600163	1					
ANR	5600317	Identifier	buf		5600163	0					
ANR	5600318	Argument	8		5600163	2					
ANR	5600319	PrimaryExpression	8		5600163	0					
ANR	5600320	ExpressionStatement	"avio_seek ( pb , - 8 , SEEK_CUR )"	43:16:736:763	5600163	3	True				
ANR	5600321	CallExpression	"avio_seek ( pb , - 8 , SEEK_CUR )"		5600163	0					
ANR	5600322	Callee	avio_seek		5600163	0					
ANR	5600323	Identifier	avio_seek		5600163	0					
ANR	5600324	ArgumentList	pb		5600163	1					
ANR	5600325	Argument	pb		5600163	0					
ANR	5600326	Identifier	pb		5600163	0					
ANR	5600327	Argument	- 8		5600163	1					
ANR	5600328	UnaryOperationExpression	- 8		5600163	0					
ANR	5600329	UnaryOperator	-		5600163	0					
ANR	5600330	PrimaryExpression	8		5600163	1					
ANR	5600331	Argument	SEEK_CUR		5600163	2					
ANR	5600332	Identifier	SEEK_CUR		5600163	0					
ANR	5600333	IfStatement	"if ( * type == MKTAG ( 'm' , 'v' , 'h' , 'd' ) || * type == MKTAG ( 'c' , 'm' , 'o' , 'v' ) )"		5600163	4					
ANR	5600334	Condition	"* type == MKTAG ( 'm' , 'v' , 'h' , 'd' ) || * type == MKTAG ( 'c' , 'm' , 'o' , 'v' )"	45:20:786:872	5600163	0	True				
ANR	5600335	OrExpression	"* type == MKTAG ( 'm' , 'v' , 'h' , 'd' ) || * type == MKTAG ( 'c' , 'm' , 'o' , 'v' )"		5600163	0		||			
ANR	5600336	EqualityExpression	"* type == MKTAG ( 'm' , 'v' , 'h' , 'd' )"		5600163	0		==			
ANR	5600337	UnaryOperationExpression	* type		5600163	0					
ANR	5600338	UnaryOperator	*		5600163	0					
ANR	5600339	Identifier	type		5600163	1					
ANR	5600340	CallExpression	"MKTAG ( 'm' , 'v' , 'h' , 'd' )"		5600163	1					
ANR	5600341	Callee	MKTAG		5600163	0					
ANR	5600342	Identifier	MKTAG		5600163	0					
ANR	5600343	ArgumentList	'm'		5600163	1					
ANR	5600344	Argument	'm'		5600163	0					
ANR	5600345	PrimaryExpression	'm'		5600163	0					
ANR	5600346	Argument	'v'		5600163	1					
ANR	5600347	PrimaryExpression	'v'		5600163	0					
ANR	5600348	Argument	'h'		5600163	2					
ANR	5600349	PrimaryExpression	'h'		5600163	0					
ANR	5600350	Argument	'd'		5600163	3					
ANR	5600351	PrimaryExpression	'd'		5600163	0					
ANR	5600352	EqualityExpression	"* type == MKTAG ( 'c' , 'm' , 'o' , 'v' )"		5600163	1		==			
ANR	5600353	UnaryOperationExpression	* type		5600163	0					
ANR	5600354	UnaryOperator	*		5600163	0					
ANR	5600355	Identifier	type		5600163	1					
ANR	5600356	CallExpression	"MKTAG ( 'c' , 'm' , 'o' , 'v' )"		5600163	1					
ANR	5600357	Callee	MKTAG		5600163	0					
ANR	5600358	Identifier	MKTAG		5600163	0					
ANR	5600359	ArgumentList	'c'		5600163	1					
ANR	5600360	Argument	'c'		5600163	0					
ANR	5600361	PrimaryExpression	'c'		5600163	0					
ANR	5600362	Argument	'm'		5600163	1					
ANR	5600363	PrimaryExpression	'm'		5600163	0					
ANR	5600364	Argument	'o'		5600163	2					
ANR	5600365	PrimaryExpression	'o'		5600163	0					
ANR	5600366	Argument	'v'		5600163	3					
ANR	5600367	PrimaryExpression	'v'		5600163	0					
ANR	5600368	CompoundStatement		45:53:799:799	5600163	1					
ANR	5600369	ExpressionStatement	"av_log ( c -> fc , AV_LOG_ERROR , ""Detected moov in a free atom.\\n"" )"	49:20:898:960	5600163	0	True				
ANR	5600370	CallExpression	"av_log ( c -> fc , AV_LOG_ERROR , ""Detected moov in a free atom.\\n"" )"		5600163	0					
ANR	5600371	Callee	av_log		5600163	0					
ANR	5600372	Identifier	av_log		5600163	0					
ANR	5600373	ArgumentList	c -> fc		5600163	1					
ANR	5600374	Argument	c -> fc		5600163	0					
ANR	5600375	PtrMemberAccess	c -> fc		5600163	0					
ANR	5600376	Identifier	c		5600163	0					
ANR	5600377	Identifier	fc		5600163	1					
ANR	5600378	Argument	AV_LOG_ERROR		5600163	1					
ANR	5600379	Identifier	AV_LOG_ERROR		5600163	0					
ANR	5600380	Argument	"""Detected moov in a free atom.\\n"""		5600163	2					
ANR	5600381	PrimaryExpression	"""Detected moov in a free atom.\\n"""		5600163	0					
ANR	5600382	ExpressionStatement	"a . type = MKTAG ( 'm' , 'o' , 'o' , 'v' )"	51:20:983:1014	5600163	1	True				
ANR	5600383	AssignmentExpression	"a . type = MKTAG ( 'm' , 'o' , 'o' , 'v' )"		5600163	0		=			
ANR	5600384	MemberAccess	a . type		5600163	0					
ANR	5600385	Identifier	a		5600163	0					
ANR	5600386	Identifier	type		5600163	1					
ANR	5600387	CallExpression	"MKTAG ( 'm' , 'o' , 'o' , 'v' )"		5600163	1					
ANR	5600388	Callee	MKTAG		5600163	0					
ANR	5600389	Identifier	MKTAG		5600163	0					
ANR	5600390	ArgumentList	'm'		5600163	1					
ANR	5600391	Argument	'm'		5600163	0					
ANR	5600392	PrimaryExpression	'm'		5600163	0					
ANR	5600393	Argument	'o'		5600163	1					
ANR	5600394	PrimaryExpression	'o'		5600163	0					
ANR	5600395	Argument	'o'		5600163	2					
ANR	5600396	PrimaryExpression	'o'		5600163	0					
ANR	5600397	Argument	'v'		5600163	3					
ANR	5600398	PrimaryExpression	'v'		5600163	0					
ANR	5600399	IfStatement	"if ( atom . type != MKTAG ( 'r' , 'o' , 'o' , 't' ) && atom . type != MKTAG ( 'm' , 'o' , 'o' , 'v' ) )"		5600163	3					
ANR	5600400	Condition	"atom . type != MKTAG ( 'r' , 'o' , 'o' , 't' ) && atom . type != MKTAG ( 'm' , 'o' , 'o' , 'v' )"	57:16:1067:1157	5600163	0	True				
ANR	5600401	AndExpression	"atom . type != MKTAG ( 'r' , 'o' , 'o' , 't' ) && atom . type != MKTAG ( 'm' , 'o' , 'o' , 'v' )"		5600163	0		&&			
ANR	5600402	EqualityExpression	"atom . type != MKTAG ( 'r' , 'o' , 'o' , 't' )"		5600163	0		!=			
ANR	5600403	MemberAccess	atom . type		5600163	0					
ANR	5600404	Identifier	atom		5600163	0					
ANR	5600405	Identifier	type		5600163	1					
ANR	5600406	CallExpression	"MKTAG ( 'r' , 'o' , 'o' , 't' )"		5600163	1					
ANR	5600407	Callee	MKTAG		5600163	0					
ANR	5600408	Identifier	MKTAG		5600163	0					
ANR	5600409	ArgumentList	'r'		5600163	1					
ANR	5600410	Argument	'r'		5600163	0					
ANR	5600411	PrimaryExpression	'r'		5600163	0					
ANR	5600412	Argument	'o'		5600163	1					
ANR	5600413	PrimaryExpression	'o'		5600163	0					
ANR	5600414	Argument	'o'		5600163	2					
ANR	5600415	PrimaryExpression	'o'		5600163	0					
ANR	5600416	Argument	't'		5600163	3					
ANR	5600417	PrimaryExpression	't'		5600163	0					
ANR	5600418	EqualityExpression	"atom . type != MKTAG ( 'm' , 'o' , 'o' , 'v' )"		5600163	1		!=			
ANR	5600419	MemberAccess	atom . type		5600163	0					
ANR	5600420	Identifier	atom		5600163	0					
ANR	5600421	Identifier	type		5600163	1					
ANR	5600422	CallExpression	"MKTAG ( 'm' , 'o' , 'o' , 'v' )"		5600163	1					
ANR	5600423	Callee	MKTAG		5600163	0					
ANR	5600424	Identifier	MKTAG		5600163	0					
ANR	5600425	ArgumentList	'm'		5600163	1					
ANR	5600426	Argument	'm'		5600163	0					
ANR	5600427	PrimaryExpression	'm'		5600163	0					
ANR	5600428	Argument	'o'		5600163	1					
ANR	5600429	PrimaryExpression	'o'		5600163	0					
ANR	5600430	Argument	'o'		5600163	2					
ANR	5600431	PrimaryExpression	'o'		5600163	0					
ANR	5600432	Argument	'v'		5600163	3					
ANR	5600433	PrimaryExpression	'v'		5600163	0					
ANR	5600434	CompoundStatement		59:12:1097:1097	5600163	1					
ANR	5600435	IfStatement	"if ( a . type == MKTAG ( 't' , 'r' , 'a' , 'k' ) || a . type == MKTAG ( 'm' , 'd' , 'a' , 't' ) )"		5600163	0					
ANR	5600436	Condition	"a . type == MKTAG ( 't' , 'r' , 'a' , 'k' ) || a . type == MKTAG ( 'm' , 'd' , 'a' , 't' )"	63:20:1196:1263	5600163	0	True				
ANR	5600437	OrExpression	"a . type == MKTAG ( 't' , 'r' , 'a' , 'k' ) || a . type == MKTAG ( 'm' , 'd' , 'a' , 't' )"		5600163	0		||			
ANR	5600438	EqualityExpression	"a . type == MKTAG ( 't' , 'r' , 'a' , 'k' )"		5600163	0		==			
ANR	5600439	MemberAccess	a . type		5600163	0					
ANR	5600440	Identifier	a		5600163	0					
ANR	5600441	Identifier	type		5600163	1					
ANR	5600442	CallExpression	"MKTAG ( 't' , 'r' , 'a' , 'k' )"		5600163	1					
ANR	5600443	Callee	MKTAG		5600163	0					
ANR	5600444	Identifier	MKTAG		5600163	0					
ANR	5600445	ArgumentList	't'		5600163	1					
ANR	5600446	Argument	't'		5600163	0					
ANR	5600447	PrimaryExpression	't'		5600163	0					
ANR	5600448	Argument	'r'		5600163	1					
ANR	5600449	PrimaryExpression	'r'		5600163	0					
ANR	5600450	Argument	'a'		5600163	2					
ANR	5600451	PrimaryExpression	'a'		5600163	0					
ANR	5600452	Argument	'k'		5600163	3					
ANR	5600453	PrimaryExpression	'k'		5600163	0					
ANR	5600454	EqualityExpression	"a . type == MKTAG ( 'm' , 'd' , 'a' , 't' )"		5600163	1		==			
ANR	5600455	MemberAccess	a . type		5600163	0					
ANR	5600456	Identifier	a		5600163	0					
ANR	5600457	Identifier	type		5600163	1					
ANR	5600458	CallExpression	"MKTAG ( 'm' , 'd' , 'a' , 't' )"		5600163	1					
ANR	5600459	Callee	MKTAG		5600163	0					
ANR	5600460	Identifier	MKTAG		5600163	0					
ANR	5600461	ArgumentList	'm'		5600163	1					
ANR	5600462	Argument	'm'		5600163	0					
ANR	5600463	PrimaryExpression	'm'		5600163	0					
ANR	5600464	Argument	'd'		5600163	1					
ANR	5600465	PrimaryExpression	'd'		5600163	0					
ANR	5600466	Argument	'a'		5600163	2					
ANR	5600467	PrimaryExpression	'a'		5600163	0					
ANR	5600468	Argument	't'		5600163	3					
ANR	5600469	PrimaryExpression	't'		5600163	0					
ANR	5600470	CompoundStatement		63:16:1207:1207	5600163	1					
ANR	5600471	ExpressionStatement	"av_log ( c -> fc , AV_LOG_ERROR , ""Broken file, trak/mdat not at top-level\\n"" )"	67:20:1306:1378	5600163	0	True				
ANR	5600472	CallExpression	"av_log ( c -> fc , AV_LOG_ERROR , ""Broken file, trak/mdat not at top-level\\n"" )"		5600163	0					
ANR	5600473	Callee	av_log		5600163	0					
ANR	5600474	Identifier	av_log		5600163	0					
ANR	5600475	ArgumentList	c -> fc		5600163	1					
ANR	5600476	Argument	c -> fc		5600163	0					
ANR	5600477	PtrMemberAccess	c -> fc		5600163	0					
ANR	5600478	Identifier	c		5600163	0					
ANR	5600479	Identifier	fc		5600163	1					
ANR	5600480	Argument	AV_LOG_ERROR		5600163	1					
ANR	5600481	Identifier	AV_LOG_ERROR		5600163	0					
ANR	5600482	Argument	"""Broken file, trak/mdat not at top-level\\n"""		5600163	2					
ANR	5600483	PrimaryExpression	"""Broken file, trak/mdat not at top-level\\n"""		5600163	0					
ANR	5600484	ExpressionStatement	"avio_skip ( pb , - 8 )"	69:20:1401:1418	5600163	1	True				
ANR	5600485	CallExpression	"avio_skip ( pb , - 8 )"		5600163	0					
ANR	5600486	Callee	avio_skip		5600163	0					
ANR	5600487	Identifier	avio_skip		5600163	0					
ANR	5600488	ArgumentList	pb		5600163	1					
ANR	5600489	Argument	pb		5600163	0					
ANR	5600490	Identifier	pb		5600163	0					
ANR	5600491	Argument	- 8		5600163	1					
ANR	5600492	UnaryOperationExpression	- 8		5600163	0					
ANR	5600493	UnaryOperator	-		5600163	0					
ANR	5600494	PrimaryExpression	8		5600163	1					
ANR	5600495	ReturnStatement	return 0 ;	71:20:1441:1449	5600163	2	True				
ANR	5600496	PrimaryExpression	0		5600163	0					
ANR	5600497	ExpressionStatement	total_size += 8	77:12:1498:1513	5600163	4	True				
ANR	5600498	AssignmentExpression	total_size += 8		5600163	0		+=			
ANR	5600499	Identifier	total_size		5600163	0					
ANR	5600500	PrimaryExpression	8		5600163	1					
ANR	5600501	IfStatement	if ( a . size == 1 )		5600163	5					
ANR	5600502	Condition	a . size == 1	79:16:1532:1542	5600163	0	True				
ANR	5600503	EqualityExpression	a . size == 1		5600163	0		==			
ANR	5600504	MemberAccess	a . size		5600163	0					
ANR	5600505	Identifier	a		5600163	0					
ANR	5600506	Identifier	size		5600163	1					
ANR	5600507	PrimaryExpression	1		5600163	1					
ANR	5600508	CompoundStatement		77:29:1469:1469	5600163	1					
ANR	5600509	ExpressionStatement	a . size = avio_rb64 ( pb ) - 8	81:16:1591:1617	5600163	0	True				
ANR	5600510	AssignmentExpression	a . size = avio_rb64 ( pb ) - 8		5600163	0		=			
ANR	5600511	MemberAccess	a . size		5600163	0					
ANR	5600512	Identifier	a		5600163	0					
ANR	5600513	Identifier	size		5600163	1					
ANR	5600514	AdditiveExpression	avio_rb64 ( pb ) - 8		5600163	1		-			
ANR	5600515	CallExpression	avio_rb64 ( pb )		5600163	0					
ANR	5600516	Callee	avio_rb64		5600163	0					
ANR	5600517	Identifier	avio_rb64		5600163	0					
ANR	5600518	ArgumentList	pb		5600163	1					
ANR	5600519	Argument	pb		5600163	0					
ANR	5600520	Identifier	pb		5600163	0					
ANR	5600521	PrimaryExpression	8		5600163	1					
ANR	5600522	ExpressionStatement	total_size += 8	83:16:1636:1651	5600163	1	True				
ANR	5600523	AssignmentExpression	total_size += 8		5600163	0		+=			
ANR	5600524	Identifier	total_size		5600163	0					
ANR	5600525	PrimaryExpression	8		5600163	1					
ANR	5600526	Statement	av_dlog	89:8:1688:1694	5600163	4	True				
ANR	5600527	Statement	(	89:15:1695:1695	5600163	5	True				
ANR	5600528	Statement	c	89:16:1696:1696	5600163	6	True				
ANR	5600529	Statement	->	89:17:1697:1698	5600163	7	True				
ANR	5600530	Statement	fc	89:19:1699:1700	5600163	8	True				
ANR	5600531	Statement	","	89:21:1701:1701	5600163	9	True				
ANR	5600532	Statement	"""type: %08x '%.4s' parent:'%.4s' sz: %"""	89:23:1703:1741	5600163	10	True				
ANR	5600533	Statement	PRId64	89:62:1742:1747	5600163	11	True				
ANR	5600534	Statement	""" %"""	89:68:1748:1751	5600163	12	True				
ANR	5600535	Statement	PRId64	89:72:1752:1757	5600163	13	True				
ANR	5600536	Statement	""" %"""	89:78:1758:1761	5600163	14	True				
ANR	5600537	Statement	PRId64	89:82:1762:1767	5600163	15	True				
ANR	5600538	Statement	"""\\n"""	89:88:1768:1771	5600163	16	True				
ANR	5600539	Statement	","	89:92:1772:1772	5600163	17	True				
ANR	5600540	Statement	a	91:16:1791:1791	5600163	18	True				
ANR	5600541	Statement	.	91:17:1792:1792	5600163	19	True				
ANR	5600542	Statement	type	91:18:1793:1796	5600163	20	True				
ANR	5600543	Statement	","	91:22:1797:1797	5600163	21	True				
ANR	5600544	Statement	(	91:24:1799:1799	5600163	22	True				
ANR	5600545	Statement	char	91:25:1800:1803	5600163	23	True				
ANR	5600546	Statement	*	91:29:1804:1804	5600163	24	True				
ANR	5600547	Statement	)	91:30:1805:1805	5600163	25	True				
ANR	5600548	Statement	&	91:31:1806:1806	5600163	26	True				
ANR	5600549	Statement	a	91:32:1807:1807	5600163	27	True				
ANR	5600550	Statement	.	91:33:1808:1808	5600163	28	True				
ANR	5600551	Statement	type	91:34:1809:1812	5600163	29	True				
ANR	5600552	Statement	","	91:38:1813:1813	5600163	30	True				
ANR	5600553	Statement	(	91:40:1815:1815	5600163	31	True				
ANR	5600554	Statement	char	91:41:1816:1819	5600163	32	True				
ANR	5600555	Statement	*	91:45:1820:1820	5600163	33	True				
ANR	5600556	Statement	)	91:46:1821:1821	5600163	34	True				
ANR	5600557	Statement	&	91:47:1822:1822	5600163	35	True				
ANR	5600558	Statement	atom	91:48:1823:1826	5600163	36	True				
ANR	5600559	Statement	.	91:52:1827:1827	5600163	37	True				
ANR	5600560	Statement	type	91:53:1828:1831	5600163	38	True				
ANR	5600561	Statement	","	91:57:1832:1832	5600163	39	True				
ANR	5600562	Statement	a	91:59:1834:1834	5600163	40	True				
ANR	5600563	Statement	.	91:60:1835:1835	5600163	41	True				
ANR	5600564	Statement	size	91:61:1836:1839	5600163	42	True				
ANR	5600565	Statement	","	91:65:1840:1840	5600163	43	True				
ANR	5600566	Statement	total_size	91:67:1842:1851	5600163	44	True				
ANR	5600567	Statement	","	91:77:1852:1852	5600163	45	True				
ANR	5600568	Statement	atom	91:79:1854:1857	5600163	46	True				
ANR	5600569	Statement	.	91:83:1858:1858	5600163	47	True				
ANR	5600570	Statement	size	91:84:1859:1862	5600163	48	True				
ANR	5600571	Statement	)	91:88:1863:1863	5600163	49	True				
ANR	5600572	ExpressionStatement		91:89:1864:1864	5600163	50	True				
ANR	5600573	IfStatement	if ( a . size == 0 )		5600163	51					
ANR	5600574	Condition	a . size == 0	93:12:1879:1889	5600163	0	True				
ANR	5600575	EqualityExpression	a . size == 0		5600163	0		==			
ANR	5600576	MemberAccess	a . size		5600163	0					
ANR	5600577	Identifier	a		5600163	0					
ANR	5600578	Identifier	size		5600163	1					
ANR	5600579	PrimaryExpression	0		5600163	1					
ANR	5600580	CompoundStatement		91:25:1816:1816	5600163	1					
ANR	5600581	ExpressionStatement	a . size = atom . size - total_size + 8	95:12:1907:1942	5600163	0	True				
ANR	5600582	AssignmentExpression	a . size = atom . size - total_size + 8		5600163	0		=			
ANR	5600583	MemberAccess	a . size		5600163	0					
ANR	5600584	Identifier	a		5600163	0					
ANR	5600585	Identifier	size		5600163	1					
ANR	5600586	AdditiveExpression	atom . size - total_size + 8		5600163	1		-			
ANR	5600587	MemberAccess	atom . size		5600163	0					
ANR	5600588	Identifier	atom		5600163	0					
ANR	5600589	Identifier	size		5600163	1					
ANR	5600590	AdditiveExpression	total_size + 8		5600163	1		+			
ANR	5600591	Identifier	total_size		5600163	0					
ANR	5600592	PrimaryExpression	8		5600163	1					
ANR	5600593	ExpressionStatement	a . size -= 8	99:8:1964:1975	5600163	52	True				
ANR	5600594	AssignmentExpression	a . size -= 8		5600163	0		-=			
ANR	5600595	MemberAccess	a . size		5600163	0					
ANR	5600596	Identifier	a		5600163	0					
ANR	5600597	Identifier	size		5600163	1					
ANR	5600598	PrimaryExpression	8		5600163	1					
ANR	5600599	IfStatement	if ( a . size < 0 )		5600163	53					
ANR	5600600	Condition	a . size < 0	101:12:1990:1999	5600163	0	True				
ANR	5600601	RelationalExpression	a . size < 0		5600163	0		<			
ANR	5600602	MemberAccess	a . size		5600163	0					
ANR	5600603	Identifier	a		5600163	0					
ANR	5600604	Identifier	size		5600163	1					
ANR	5600605	PrimaryExpression	0		5600163	1					
ANR	5600606	BreakStatement	break ;	103:12:2015:2020	5600163	1	True				
ANR	5600607	ExpressionStatement	"a . size = FFMIN ( a . size , atom . size - total_size )"	105:8:2031:2077	5600163	54	True				
ANR	5600608	AssignmentExpression	"a . size = FFMIN ( a . size , atom . size - total_size )"		5600163	0		=			
ANR	5600609	MemberAccess	a . size		5600163	0					
ANR	5600610	Identifier	a		5600163	0					
ANR	5600611	Identifier	size		5600163	1					
ANR	5600612	CallExpression	"FFMIN ( a . size , atom . size - total_size )"		5600163	1					
ANR	5600613	Callee	FFMIN		5600163	0					
ANR	5600614	Identifier	FFMIN		5600163	0					
ANR	5600615	ArgumentList	a . size		5600163	1					
ANR	5600616	Argument	a . size		5600163	0					
ANR	5600617	MemberAccess	a . size		5600163	0					
ANR	5600618	Identifier	a		5600163	0					
ANR	5600619	Identifier	size		5600163	1					
ANR	5600620	Argument	atom . size - total_size		5600163	1					
ANR	5600621	AdditiveExpression	atom . size - total_size		5600163	0		-			
ANR	5600622	MemberAccess	atom . size		5600163	0					
ANR	5600623	Identifier	atom		5600163	0					
ANR	5600624	Identifier	size		5600163	1					
ANR	5600625	Identifier	total_size		5600163	1					
ANR	5600626	ForStatement	for ( i = 0 ; mov_default_parse_table [ i ] . type ; i ++ )		5600163	55					
ANR	5600627	ForInit	i = 0 ;	109:13:2095:2100	5600163	0	True				
ANR	5600628	AssignmentExpression	i = 0		5600163	0		=			
ANR	5600629	Identifier	i		5600163	0					
ANR	5600630	PrimaryExpression	0		5600163	1					
ANR	5600631	Condition	mov_default_parse_table [ i ] . type	109:20:2102:2132	5600163	1	True				
ANR	5600632	MemberAccess	mov_default_parse_table [ i ] . type		5600163	0					
ANR	5600633	ArrayIndexing	mov_default_parse_table [ i ]		5600163	0					
ANR	5600634	Identifier	mov_default_parse_table		5600163	0					
ANR	5600635	Identifier	i		5600163	1					
ANR	5600636	Identifier	type		5600163	1					
ANR	5600637	PostIncDecOperationExpression	i ++	109:53:2135:2137	5600163	2	True				
ANR	5600638	Identifier	i		5600163	0					
ANR	5600639	IncDec	++		5600163	1					
ANR	5600640	IfStatement	if ( mov_default_parse_table [ i ] . type == a . type )		5600163	3					
ANR	5600641	Condition	mov_default_parse_table [ i ] . type == a . type	111:16:2157:2197	5600163	0	True				
ANR	5600642	EqualityExpression	mov_default_parse_table [ i ] . type == a . type		5600163	0		==			
ANR	5600643	MemberAccess	mov_default_parse_table [ i ] . type		5600163	0					
ANR	5600644	ArrayIndexing	mov_default_parse_table [ i ]		5600163	0					
ANR	5600645	Identifier	mov_default_parse_table		5600163	0					
ANR	5600646	Identifier	i		5600163	1					
ANR	5600647	Identifier	type		5600163	1					
ANR	5600648	MemberAccess	a . type		5600163	1					
ANR	5600649	Identifier	a		5600163	0					
ANR	5600650	Identifier	type		5600163	1					
ANR	5600651	CompoundStatement		109:59:2124:2124	5600163	1					
ANR	5600652	ExpressionStatement	parse = mov_default_parse_table [ i ] . parse	113:16:2219:2259	5600163	0	True				
ANR	5600653	AssignmentExpression	parse = mov_default_parse_table [ i ] . parse		5600163	0		=			
ANR	5600654	Identifier	parse		5600163	0					
ANR	5600655	MemberAccess	mov_default_parse_table [ i ] . parse		5600163	1					
ANR	5600656	ArrayIndexing	mov_default_parse_table [ i ]		5600163	0					
ANR	5600657	Identifier	mov_default_parse_table		5600163	0					
ANR	5600658	Identifier	i		5600163	1					
ANR	5600659	Identifier	parse		5600163	1					
ANR	5600660	BreakStatement	break ;	115:16:2278:2283	5600163	1	True				
ANR	5600661	IfStatement	"if ( ! parse && ( atom . type == MKTAG ( 'u' , 'd' , 't' , 'a' ) || atom . type == MKTAG ( 'i' , 'l' , 's' , 't' ) ) )"		5600163	56					
ANR	5600662	Condition	"! parse && ( atom . type == MKTAG ( 'u' , 'd' , 't' , 'a' ) || atom . type == MKTAG ( 'i' , 'l' , 's' , 't' ) )"	123:12:2350:2459	5600163	0	True				
ANR	5600663	AndExpression	"! parse && ( atom . type == MKTAG ( 'u' , 'd' , 't' , 'a' ) || atom . type == MKTAG ( 'i' , 'l' , 's' , 't' ) )"		5600163	0		&&			
ANR	5600664	UnaryOperationExpression	! parse		5600163	0					
ANR	5600665	UnaryOperator	!		5600163	0					
ANR	5600666	Identifier	parse		5600163	1					
ANR	5600667	OrExpression	"atom . type == MKTAG ( 'u' , 'd' , 't' , 'a' ) || atom . type == MKTAG ( 'i' , 'l' , 's' , 't' )"		5600163	1		||			
ANR	5600668	EqualityExpression	"atom . type == MKTAG ( 'u' , 'd' , 't' , 'a' )"		5600163	0		==			
ANR	5600669	MemberAccess	atom . type		5600163	0					
ANR	5600670	Identifier	atom		5600163	0					
ANR	5600671	Identifier	type		5600163	1					
ANR	5600672	CallExpression	"MKTAG ( 'u' , 'd' , 't' , 'a' )"		5600163	1					
ANR	5600673	Callee	MKTAG		5600163	0					
ANR	5600674	Identifier	MKTAG		5600163	0					
ANR	5600675	ArgumentList	'u'		5600163	1					
ANR	5600676	Argument	'u'		5600163	0					
ANR	5600677	PrimaryExpression	'u'		5600163	0					
ANR	5600678	Argument	'd'		5600163	1					
ANR	5600679	PrimaryExpression	'd'		5600163	0					
ANR	5600680	Argument	't'		5600163	2					
ANR	5600681	PrimaryExpression	't'		5600163	0					
ANR	5600682	Argument	'a'		5600163	3					
ANR	5600683	PrimaryExpression	'a'		5600163	0					
ANR	5600684	EqualityExpression	"atom . type == MKTAG ( 'i' , 'l' , 's' , 't' )"		5600163	1		==			
ANR	5600685	MemberAccess	atom . type		5600163	0					
ANR	5600686	Identifier	atom		5600163	0					
ANR	5600687	Identifier	type		5600163	1					
ANR	5600688	CallExpression	"MKTAG ( 'i' , 'l' , 's' , 't' )"		5600163	1					
ANR	5600689	Callee	MKTAG		5600163	0					
ANR	5600690	Identifier	MKTAG		5600163	0					
ANR	5600691	ArgumentList	'i'		5600163	1					
ANR	5600692	Argument	'i'		5600163	0					
ANR	5600693	PrimaryExpression	'i'		5600163	0					
ANR	5600694	Argument	'l'		5600163	1					
ANR	5600695	PrimaryExpression	'l'		5600163	0					
ANR	5600696	Argument	's'		5600163	2					
ANR	5600697	PrimaryExpression	's'		5600163	0					
ANR	5600698	Argument	't'		5600163	3					
ANR	5600699	PrimaryExpression	't'		5600163	0					
ANR	5600700	ExpressionStatement	parse = mov_read_udta_string	127:12:2475:2503	5600163	1	True				
ANR	5600701	AssignmentExpression	parse = mov_read_udta_string		5600163	0		=			
ANR	5600702	Identifier	parse		5600163	0					
ANR	5600703	Identifier	mov_read_udta_string		5600163	1					
ANR	5600704	IfStatement	if ( ! parse )		5600163	57					
ANR	5600705	Condition	! parse	131:12:2520:2525	5600163	0	True				
ANR	5600706	UnaryOperationExpression	! parse		5600163	0					
ANR	5600707	UnaryOperator	!		5600163	0					
ANR	5600708	Identifier	parse		5600163	1					
ANR	5600709	CompoundStatement		129:20:2452:2452	5600163	1					
ANR	5600710	ExpressionStatement	"avio_skip ( pb , a . size )"	133:12:2570:2591	5600163	0	True				
ANR	5600711	CallExpression	"avio_skip ( pb , a . size )"		5600163	0					
ANR	5600712	Callee	avio_skip		5600163	0					
ANR	5600713	Identifier	avio_skip		5600163	0					
ANR	5600714	ArgumentList	pb		5600163	1					
ANR	5600715	Argument	pb		5600163	0					
ANR	5600716	Identifier	pb		5600163	0					
ANR	5600717	Argument	a . size		5600163	1					
ANR	5600718	MemberAccess	a . size		5600163	0					
ANR	5600719	Identifier	a		5600163	0					
ANR	5600720	Identifier	size		5600163	1					
ANR	5600721	ElseStatement	else		5600163	0					
ANR	5600722	CompoundStatement		139:12:2623:2648	5600163	0					
ANR	5600723	IdentifierDeclStatement	int64_t start_pos = avio_tell ( pb ) ;	137:12:2624:2657	5600163	0	True				
ANR	5600724	IdentifierDecl	start_pos = avio_tell ( pb )		5600163	0					
ANR	5600725	IdentifierDeclType	int64_t		5600163	0					
ANR	5600726	Identifier	start_pos		5600163	1					
ANR	5600727	AssignmentExpression	start_pos = avio_tell ( pb )		5600163	2		=			
ANR	5600728	Identifier	start_pos		5600163	0					
ANR	5600729	CallExpression	avio_tell ( pb )		5600163	1					
ANR	5600730	Callee	avio_tell		5600163	0					
ANR	5600731	Identifier	avio_tell		5600163	0					
ANR	5600732	ArgumentList	pb		5600163	1					
ANR	5600733	Argument	pb		5600163	0					
ANR	5600734	Identifier	pb		5600163	0					
ANR	5600735	IdentifierDeclStatement	int64_t left ;	139:12:2672:2684	5600163	1	True				
ANR	5600736	IdentifierDecl	left		5600163	0					
ANR	5600737	IdentifierDeclType	int64_t		5600163	0					
ANR	5600738	Identifier	left		5600163	1					
ANR	5600739	IdentifierDeclStatement	"int err = parse ( c , pb , a ) ;"	141:12:2699:2724	5600163	2	True				
ANR	5600740	IdentifierDecl	"err = parse ( c , pb , a )"		5600163	0					
ANR	5600741	IdentifierDeclType	int		5600163	0					
ANR	5600742	Identifier	err		5600163	1					
ANR	5600743	AssignmentExpression	"err = parse ( c , pb , a )"		5600163	2		=			
ANR	5600744	Identifier	err		5600163	0					
ANR	5600745	CallExpression	"parse ( c , pb , a )"		5600163	1					
ANR	5600746	Callee	parse		5600163	0					
ANR	5600747	Identifier	parse		5600163	0					
ANR	5600748	ArgumentList	c		5600163	1					
ANR	5600749	Argument	c		5600163	0					
ANR	5600750	Identifier	c		5600163	0					
ANR	5600751	Argument	pb		5600163	1					
ANR	5600752	Identifier	pb		5600163	0					
ANR	5600753	Argument	a		5600163	2					
ANR	5600754	Identifier	a		5600163	0					
ANR	5600755	IfStatement	if ( err < 0 )		5600163	3					
ANR	5600756	Condition	err < 0	143:16:2743:2749	5600163	0	True				
ANR	5600757	RelationalExpression	err < 0		5600163	0		<			
ANR	5600758	Identifier	err		5600163	0					
ANR	5600759	PrimaryExpression	0		5600163	1					
ANR	5600760	ReturnStatement	return err ;	145:16:2769:2779	5600163	1	True				
ANR	5600761	Identifier	err		5600163	0					
ANR	5600762	IfStatement	if ( c -> found_moov && c -> found_mdat && ( ( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX ) || start_pos + a . size == avio_size ( pb ) ) )		5600163	4					
ANR	5600763	Condition	c -> found_moov && c -> found_mdat && ( ( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX ) || start_pos + a . size == avio_size ( pb ) )	147:16:2798:2958	5600163	0	True				
ANR	5600764	AndExpression	c -> found_moov && c -> found_mdat && ( ( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX ) || start_pos + a . size == avio_size ( pb ) )		5600163	0		&&			
ANR	5600765	PtrMemberAccess	c -> found_moov		5600163	0					
ANR	5600766	Identifier	c		5600163	0					
ANR	5600767	Identifier	found_moov		5600163	1					
ANR	5600768	AndExpression	c -> found_mdat && ( ( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX ) || start_pos + a . size == avio_size ( pb ) )		5600163	1		&&			
ANR	5600769	PtrMemberAccess	c -> found_mdat		5600163	0					
ANR	5600770	Identifier	c		5600163	0					
ANR	5600771	Identifier	found_mdat		5600163	1					
ANR	5600772	OrExpression	( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX ) || start_pos + a . size == avio_size ( pb )		5600163	1		||			
ANR	5600773	OrExpression	! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX		5600163	0		||			
ANR	5600774	UnaryOperationExpression	! pb -> seekable		5600163	0					
ANR	5600775	UnaryOperator	!		5600163	0					
ANR	5600776	PtrMemberAccess	pb -> seekable		5600163	1					
ANR	5600777	Identifier	pb		5600163	0					
ANR	5600778	Identifier	seekable		5600163	1					
ANR	5600779	BitAndExpression	c -> fc -> flags & AVFMT_FLAG_IGNIDX		5600163	1		&			
ANR	5600780	PtrMemberAccess	c -> fc -> flags		5600163	0					
ANR	5600781	PtrMemberAccess	c -> fc		5600163	0					
ANR	5600782	Identifier	c		5600163	0					
ANR	5600783	Identifier	fc		5600163	1					
ANR	5600784	Identifier	flags		5600163	1					
ANR	5600785	Identifier	AVFMT_FLAG_IGNIDX		5600163	1					
ANR	5600786	EqualityExpression	start_pos + a . size == avio_size ( pb )		5600163	1		==			
ANR	5600787	AdditiveExpression	start_pos + a . size		5600163	0		+			
ANR	5600788	Identifier	start_pos		5600163	0					
ANR	5600789	MemberAccess	a . size		5600163	1					
ANR	5600790	Identifier	a		5600163	0					
ANR	5600791	Identifier	size		5600163	1					
ANR	5600792	CallExpression	avio_size ( pb )		5600163	1					
ANR	5600793	Callee	avio_size		5600163	0					
ANR	5600794	Identifier	avio_size		5600163	0					
ANR	5600795	ArgumentList	pb		5600163	1					
ANR	5600796	Argument	pb		5600163	0					
ANR	5600797	Identifier	pb		5600163	0					
ANR	5600798	CompoundStatement		149:55:2885:2885	5600163	1					
ANR	5600799	IfStatement	if ( ! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX )		5600163	0					
ANR	5600800	Condition	! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX	153:20:2984:3032	5600163	0	True				
ANR	5600801	OrExpression	! pb -> seekable || c -> fc -> flags & AVFMT_FLAG_IGNIDX		5600163	0		||			
ANR	5600802	UnaryOperationExpression	! pb -> seekable		5600163	0					
ANR	5600803	UnaryOperator	!		5600163	0					
ANR	5600804	PtrMemberAccess	pb -> seekable		5600163	1					
ANR	5600805	Identifier	pb		5600163	0					
ANR	5600806	Identifier	seekable		5600163	1					
ANR	5600807	BitAndExpression	c -> fc -> flags & AVFMT_FLAG_IGNIDX		5600163	1		&			
ANR	5600808	PtrMemberAccess	c -> fc -> flags		5600163	0					
ANR	5600809	PtrMemberAccess	c -> fc		5600163	0					
ANR	5600810	Identifier	c		5600163	0					
ANR	5600811	Identifier	fc		5600163	1					
ANR	5600812	Identifier	flags		5600163	1					
ANR	5600813	Identifier	AVFMT_FLAG_IGNIDX		5600163	1					
ANR	5600814	ExpressionStatement	c -> next_root_atom = start_pos + a . size	155:20:3056:3094	5600163	1	True				
ANR	5600815	AssignmentExpression	c -> next_root_atom = start_pos + a . size		5600163	0		=			
ANR	5600816	PtrMemberAccess	c -> next_root_atom		5600163	0					
ANR	5600817	Identifier	c		5600163	0					
ANR	5600818	Identifier	next_root_atom		5600163	1					
ANR	5600819	AdditiveExpression	start_pos + a . size		5600163	1		+			
ANR	5600820	Identifier	start_pos		5600163	0					
ANR	5600821	MemberAccess	a . size		5600163	1					
ANR	5600822	Identifier	a		5600163	0					
ANR	5600823	Identifier	size		5600163	1					
ANR	5600824	ReturnStatement	return 0 ;	157:16:3113:3121	5600163	1	True				
ANR	5600825	PrimaryExpression	0		5600163	0					
ANR	5600826	ExpressionStatement	left = a . size - avio_tell ( pb ) + start_pos	161:12:3151:3192	5600163	5	True				
ANR	5600827	AssignmentExpression	left = a . size - avio_tell ( pb ) + start_pos		5600163	0		=			
ANR	5600828	Identifier	left		5600163	0					
ANR	5600829	AdditiveExpression	a . size - avio_tell ( pb ) + start_pos		5600163	1		-			
ANR	5600830	MemberAccess	a . size		5600163	0					
ANR	5600831	Identifier	a		5600163	0					
ANR	5600832	Identifier	size		5600163	1					
ANR	5600833	AdditiveExpression	avio_tell ( pb ) + start_pos		5600163	1		+			
ANR	5600834	CallExpression	avio_tell ( pb )		5600163	0					
ANR	5600835	Callee	avio_tell		5600163	0					
ANR	5600836	Identifier	avio_tell		5600163	0					
ANR	5600837	ArgumentList	pb		5600163	1					
ANR	5600838	Argument	pb		5600163	0					
ANR	5600839	Identifier	pb		5600163	0					
ANR	5600840	Identifier	start_pos		5600163	1					
ANR	5600841	IfStatement	if ( left > 0 )		5600163	6					
ANR	5600842	Condition	left > 0	163:16:3211:3218	5600163	0	True				
ANR	5600843	RelationalExpression	left > 0		5600163	0		>			
ANR	5600844	Identifier	left		5600163	0					
ANR	5600845	PrimaryExpression	0		5600163	1					
ANR	5600846	ExpressionStatement	"avio_skip ( pb , left )"	165:16:3269:3288	5600163	1	True				
ANR	5600847	CallExpression	"avio_skip ( pb , left )"		5600163	0					
ANR	5600848	Callee	avio_skip		5600163	0					
ANR	5600849	Identifier	avio_skip		5600163	0					
ANR	5600850	ArgumentList	pb		5600163	1					
ANR	5600851	Argument	pb		5600163	0					
ANR	5600852	Identifier	pb		5600163	0					
ANR	5600853	Argument	left		5600163	1					
ANR	5600854	Identifier	left		5600163	0					
ANR	5600855	ElseStatement	else		5600163	0					
ANR	5600856	IfStatement	if ( left < 0 )		5600163	0					
ANR	5600857	Condition	left < 0	167:21:3312:3319	5600163	0	True				
ANR	5600858	RelationalExpression	left < 0		5600163	0		<			
ANR	5600859	Identifier	left		5600163	0					
ANR	5600860	PrimaryExpression	0		5600163	1					
ANR	5600861	CompoundStatement		165:31:3246:3246	5600163	1					
ANR	5600862	Statement	av_log	169:16:3341:3346	5600163	0	True				
ANR	5600863	Statement	(	169:22:3347:3347	5600163	1	True				
ANR	5600864	Statement	c	169:23:3348:3348	5600163	2	True				
ANR	5600865	Statement	->	169:24:3349:3350	5600163	3	True				
ANR	5600866	Statement	fc	169:26:3351:3352	5600163	4	True				
ANR	5600867	Statement	","	169:28:3353:3353	5600163	5	True				
ANR	5600868	Statement	AV_LOG_WARNING	169:30:3355:3368	5600163	6	True				
ANR	5600869	Statement	","	169:44:3369:3369	5600163	7	True				
ANR	5600870	Statement	"""overread end of atom '%.4s' by %"""	171:23:3395:3428	5600163	8	True				
ANR	5600871	Statement	PRId64	171:57:3429:3434	5600163	9	True				
ANR	5600872	Statement	""" bytes\\n"""	171:63:3435:3444	5600163	10	True				
ANR	5600873	Statement	","	171:73:3445:3445	5600163	11	True				
ANR	5600874	Statement	(	173:23:3471:3471	5600163	12	True				
ANR	5600875	Statement	char	173:24:3472:3475	5600163	13	True				
ANR	5600876	Statement	*	173:28:3476:3476	5600163	14	True				
ANR	5600877	Statement	)	173:29:3477:3477	5600163	15	True				
ANR	5600878	Statement	&	173:30:3478:3478	5600163	16	True				
ANR	5600879	Statement	a	173:31:3479:3479	5600163	17	True				
ANR	5600880	Statement	.	173:32:3480:3480	5600163	18	True				
ANR	5600881	Statement	type	173:33:3481:3484	5600163	19	True				
ANR	5600882	Statement	","	173:37:3485:3485	5600163	20	True				
ANR	5600883	Statement	-	173:39:3487:3487	5600163	21	True				
ANR	5600884	Statement	left	173:40:3488:3491	5600163	22	True				
ANR	5600885	Statement	)	173:44:3492:3492	5600163	23	True				
ANR	5600886	ExpressionStatement		173:45:3493:3493	5600163	24	True				
ANR	5600887	ExpressionStatement	"avio_seek ( pb , left , SEEK_CUR )"	175:16:3512:3541	5600163	25	True				
ANR	5600888	CallExpression	"avio_seek ( pb , left , SEEK_CUR )"		5600163	0					
ANR	5600889	Callee	avio_seek		5600163	0					
ANR	5600890	Identifier	avio_seek		5600163	0					
ANR	5600891	ArgumentList	pb		5600163	1					
ANR	5600892	Argument	pb		5600163	0					
ANR	5600893	Identifier	pb		5600163	0					
ANR	5600894	Argument	left		5600163	1					
ANR	5600895	Identifier	left		5600163	0					
ANR	5600896	Argument	SEEK_CUR		5600163	2					
ANR	5600897	Identifier	SEEK_CUR		5600163	0					
ANR	5600898	ExpressionStatement	total_size += a . size	183:8:3580:3600	5600163	58	True				
ANR	5600899	AssignmentExpression	total_size += a . size		5600163	0		+=			
ANR	5600900	Identifier	total_size		5600163	0					
ANR	5600901	MemberAccess	a . size		5600163	1					
ANR	5600902	Identifier	a		5600163	0					
ANR	5600903	Identifier	size		5600163	1					
ANR	5600904	IfStatement	if ( total_size < atom . size && atom . size < 0x7ffff )		5600163	5					
ANR	5600905	Condition	total_size < atom . size && atom . size < 0x7ffff	189:8:3620:3664	5600163	0	True				
ANR	5600906	AndExpression	total_size < atom . size && atom . size < 0x7ffff		5600163	0		&&			
ANR	5600907	RelationalExpression	total_size < atom . size		5600163	0		<			
ANR	5600908	Identifier	total_size		5600163	0					
ANR	5600909	MemberAccess	atom . size		5600163	1					
ANR	5600910	Identifier	atom		5600163	0					
ANR	5600911	Identifier	size		5600163	1					
ANR	5600912	RelationalExpression	atom . size < 0x7ffff		5600163	1		<			
ANR	5600913	MemberAccess	atom . size		5600163	0					
ANR	5600914	Identifier	atom		5600163	0					
ANR	5600915	Identifier	size		5600163	1					
ANR	5600916	PrimaryExpression	0x7ffff		5600163	1					
ANR	5600917	ExpressionStatement	"avio_skip ( pb , atom . size - total_size )"	191:8:3676:3713	5600163	1	True				
ANR	5600918	CallExpression	"avio_skip ( pb , atom . size - total_size )"		5600163	0					
ANR	5600919	Callee	avio_skip		5600163	0					
ANR	5600920	Identifier	avio_skip		5600163	0					
ANR	5600921	ArgumentList	pb		5600163	1					
ANR	5600922	Argument	pb		5600163	0					
ANR	5600923	Identifier	pb		5600163	0					
ANR	5600924	Argument	atom . size - total_size		5600163	1					
ANR	5600925	AdditiveExpression	atom . size - total_size		5600163	0		-			
ANR	5600926	MemberAccess	atom . size		5600163	0					
ANR	5600927	Identifier	atom		5600163	0					
ANR	5600928	Identifier	size		5600163	1					
ANR	5600929	Identifier	total_size		5600163	1					
ANR	5600930	ReturnStatement	return 0 ;	195:4:3722:3730	5600163	6	True				
ANR	5600931	PrimaryExpression	0		5600163	0					
ANR	5600932	ReturnType	static int		5600163	1					
ANR	5600933	Identifier	mov_read_default		5600163	2					
ANR	5600934	ParameterList	"MOVContext * c , AVIOContext * pb , MOVAtom atom"		5600163	3					
ANR	5600935	Parameter	MOVContext * c	1:28:28:40	5600163	0	True				
ANR	5600936	ParameterType	MOVContext *		5600163	0					
ANR	5600937	Identifier	c		5600163	1					
ANR	5600938	Parameter	AVIOContext * pb	1:43:43:57	5600163	1	True				
ANR	5600939	ParameterType	AVIOContext *		5600163	0					
ANR	5600940	Identifier	pb		5600163	1					
ANR	5600941	Parameter	MOVAtom atom	1:60:60:71	5600163	2	True				
ANR	5600942	ParameterType	MOVAtom		5600163	0					
ANR	5600943	Identifier	atom		5600163	1					
ANR	5600944	CFGEntryNode	ENTRY		5600163		True				
ANR	5600945	CFGExitNode	EXIT		5600163		True				
ANR	5600946	Symbol	avio_feof		5600163						
ANR	5600947	Symbol	a . size		5600163						
ANR	5600948	Symbol	SEEK_CUR		5600163						
ANR	5600949	Symbol	AVFMT_FLAG_IGNIDX		5600163						
ANR	5600950	Symbol	* c -> fc		5600163						
ANR	5600951	Symbol	FFMIN		5600163						
ANR	5600952	Symbol	INT64_MAX		5600163						
ANR	5600953	Symbol	type		5600163						
ANR	5600954	Symbol	c -> fc -> flags		5600163						
ANR	5600955	Symbol	avio_rb64		5600163						
ANR	5600956	Symbol	avio_tell		5600163						
ANR	5600957	Symbol	* type		5600163						
ANR	5600958	Symbol	atom . size		5600163						
ANR	5600959	Symbol	a . type		5600163						
ANR	5600960	Symbol	mov_read_udta_string		5600163						
ANR	5600961	Symbol	atom . type		5600163						
ANR	5600962	Symbol	a		5600163						
ANR	5600963	Symbol	c		5600163						
ANR	5600964	Symbol	NULL		5600163						
ANR	5600965	Symbol	* mov_default_parse_table		5600163						
ANR	5600966	Symbol	AV_LOG_ERROR		5600163						
ANR	5600967	Symbol	err		5600163						
ANR	5600968	Symbol	pb -> seekable		5600163						
ANR	5600969	Symbol	avio_size		5600163						
ANR	5600970	Symbol	total_size		5600163						
ANR	5600971	Symbol	c -> found_moov		5600163						
ANR	5600972	Symbol	* * c		5600163						
ANR	5600973	Symbol	i		5600163						
ANR	5600974	Symbol	c -> found_mdat		5600163						
ANR	5600975	Symbol	parse		5600163						
ANR	5600976	Symbol	* c		5600163						
ANR	5600977	Symbol	mov_default_parse_table [ i ] . parse		5600163						
ANR	5600978	Symbol	start_pos		5600163						
ANR	5600979	Symbol	pb		5600163						
ANR	5600980	Symbol	buf		5600163						
ANR	5600981	Symbol	avio_rb32		5600163						
ANR	5600982	Symbol	* i		5600163						
ANR	5600983	Symbol	c -> fc		5600163						
ANR	5600984	Symbol	left		5600163						
ANR	5600985	Symbol	mov_default_parse_table [ i ] . type		5600163						
ANR	5600986	Symbol	c -> moov_retry		5600163						
ANR	5600987	Symbol	c -> next_root_atom		5600163						
ANR	5600988	Symbol	mov_default_parse_table		5600163						
ANR	5600989	Symbol	* pb		5600163						
ANR	5600990	Symbol	atom		5600163						
ANR	5600991	Symbol	avio_rl32		5600163						
ANR	5600992	Symbol	MKTAG		5600163						
