command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9416623	File	/home/p4ultr4n/workplace/ReVeal/raw_code/window_1.c								
ANR	9416624	Function	window	1:0:0:1894							
ANR	9416625	FunctionDef	"window (venc_context_t * venc , signed short * audio , int samples)"		9416624	0					
ANR	9416626	CompoundStatement		1:76:76:1894	9416624	0					
ANR	9416627	IdentifierDeclStatement	"int i , j , channel ;"	3:4:83:100	9416624	0	True				
ANR	9416628	IdentifierDecl	i		9416624	0					
ANR	9416629	IdentifierDeclType	int		9416624	0					
ANR	9416630	Identifier	i		9416624	1					
ANR	9416631	IdentifierDecl	j		9416624	1					
ANR	9416632	IdentifierDeclType	int		9416624	0					
ANR	9416633	Identifier	j		9416624	1					
ANR	9416634	IdentifierDecl	channel		9416624	2					
ANR	9416635	IdentifierDeclType	int		9416624	0					
ANR	9416636	Identifier	channel		9416624	1					
ANR	9416637	IdentifierDeclStatement	const float * win = venc -> win [ 0 ] ;	5:4:107:139	9416624	1	True				
ANR	9416638	IdentifierDecl	* win = venc -> win [ 0 ]		9416624	0					
ANR	9416639	IdentifierDeclType	const float *		9416624	0					
ANR	9416640	Identifier	win		9416624	1					
ANR	9416641	AssignmentExpression	* win = venc -> win [ 0 ]		9416624	2		=			
ANR	9416642	Identifier	win		9416624	0					
ANR	9416643	ArrayIndexing	venc -> win [ 0 ]		9416624	1					
ANR	9416644	PtrMemberAccess	venc -> win		9416624	0					
ANR	9416645	Identifier	venc		9416624	0					
ANR	9416646	Identifier	win		9416624	1					
ANR	9416647	PrimaryExpression	0		9416624	1					
ANR	9416648	IdentifierDeclStatement	int window_len = 1 << ( venc -> blocksize [ 0 ] - 1 ) ;	7:4:146:192	9416624	2	True				
ANR	9416649	IdentifierDecl	window_len = 1 << ( venc -> blocksize [ 0 ] - 1 )		9416624	0					
ANR	9416650	IdentifierDeclType	int		9416624	0					
ANR	9416651	Identifier	window_len		9416624	1					
ANR	9416652	AssignmentExpression	window_len = 1 << ( venc -> blocksize [ 0 ] - 1 )		9416624	2		=			
ANR	9416653	Identifier	window_len		9416624	0					
ANR	9416654	ShiftExpression	1 << ( venc -> blocksize [ 0 ] - 1 )		9416624	1		<<			
ANR	9416655	PrimaryExpression	1		9416624	0					
ANR	9416656	AdditiveExpression	venc -> blocksize [ 0 ] - 1		9416624	1		-			
ANR	9416657	ArrayIndexing	venc -> blocksize [ 0 ]		9416624	0					
ANR	9416658	PtrMemberAccess	venc -> blocksize		9416624	0					
ANR	9416659	Identifier	venc		9416624	0					
ANR	9416660	Identifier	blocksize		9416624	1					
ANR	9416661	PrimaryExpression	0		9416624	1					
ANR	9416662	PrimaryExpression	1		9416624	1					
ANR	9416663	IdentifierDeclStatement	float n = ( float ) ( 1 << venc -> blocksize [ 0 ] ) / 4. ;	9:4:199:246	9416624	3	True				
ANR	9416664	IdentifierDecl	n = ( float ) ( 1 << venc -> blocksize [ 0 ] ) / 4.		9416624	0					
ANR	9416665	IdentifierDeclType	float		9416624	0					
ANR	9416666	Identifier	n		9416624	1					
ANR	9416667	AssignmentExpression	n = ( float ) ( 1 << venc -> blocksize [ 0 ] ) / 4.		9416624	2		=			
ANR	9416668	Identifier	n		9416624	0					
ANR	9416669	MultiplicativeExpression	( float ) ( 1 << venc -> blocksize [ 0 ] ) / 4.		9416624	1		/			
ANR	9416670	CastExpression	( float ) ( 1 << venc -> blocksize [ 0 ] )		9416624	0					
ANR	9416671	CastTarget	float		9416624	0					
ANR	9416672	ShiftExpression	1 << venc -> blocksize [ 0 ]		9416624	1		<<			
ANR	9416673	PrimaryExpression	1		9416624	0					
ANR	9416674	ArrayIndexing	venc -> blocksize [ 0 ]		9416624	1					
ANR	9416675	PtrMemberAccess	venc -> blocksize		9416624	0					
ANR	9416676	Identifier	venc		9416624	0					
ANR	9416677	Identifier	blocksize		9416624	1					
ANR	9416678	PrimaryExpression	0		9416624	1					
ANR	9416679	PrimaryExpression	4.		9416624	1					
ANR	9416680	IfStatement	if ( ! venc -> have_saved && ! samples )		9416624	4					
ANR	9416681	Condition	! venc -> have_saved && ! samples	15:8:281:309	9416624	0	True				
ANR	9416682	AndExpression	! venc -> have_saved && ! samples		9416624	0		&&			
ANR	9416683	UnaryOperationExpression	! venc -> have_saved		9416624	0					
ANR	9416684	UnaryOperator	!		9416624	0					
ANR	9416685	PtrMemberAccess	venc -> have_saved		9416624	1					
ANR	9416686	Identifier	venc		9416624	0					
ANR	9416687	Identifier	have_saved		9416624	1					
ANR	9416688	UnaryOperationExpression	! samples		9416624	1					
ANR	9416689	UnaryOperator	!		9416624	0					
ANR	9416690	Identifier	samples		9416624	1					
ANR	9416691	ReturnStatement	return 0 ;	15:39:312:320	9416624	1	True				
ANR	9416692	PrimaryExpression	0		9416624	0					
ANR	9416693	IfStatement	if ( venc -> have_saved )		9416624	5					
ANR	9416694	Condition	venc -> have_saved	19:8:333:348	9416624	0	True				
ANR	9416695	PtrMemberAccess	venc -> have_saved		9416624	0					
ANR	9416696	Identifier	venc		9416624	0					
ANR	9416697	Identifier	have_saved		9416624	1					
ANR	9416698	CompoundStatement		19:26:274:274	9416624	1					
ANR	9416699	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	0					
ANR	9416700	ForInit	channel = 0 ;	21:13:367:378	9416624	0	True				
ANR	9416701	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416702	Identifier	channel		9416624	0					
ANR	9416703	PrimaryExpression	0		9416624	1					
ANR	9416704	Condition	channel < venc -> channels	21:26:380:403	9416624	1	True				
ANR	9416705	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416706	Identifier	channel		9416624	0					
ANR	9416707	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416708	Identifier	venc		9416624	0					
ANR	9416709	Identifier	channels		9416624	1					
ANR	9416710	PostIncDecOperationExpression	channel ++	21:52:406:414	9416624	2	True				
ANR	9416711	Identifier	channel		9416624	0					
ANR	9416712	IncDec	++		9416624	1					
ANR	9416713	CompoundStatement		21:63:340:340	9416624	3					
ANR	9416714	ExpressionStatement	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"	23:12:432:536	9416624	0	True				
ANR	9416715	CallExpression	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"		9416624	0					
ANR	9416716	Callee	memcpy		9416624	0					
ANR	9416717	Identifier	memcpy		9416624	0					
ANR	9416718	ArgumentList	venc -> samples + channel * window_len * 2		9416624	1					
ANR	9416719	Argument	venc -> samples + channel * window_len * 2		9416624	0					
ANR	9416720	AdditiveExpression	venc -> samples + channel * window_len * 2		9416624	0		+			
ANR	9416721	PtrMemberAccess	venc -> samples		9416624	0					
ANR	9416722	Identifier	venc		9416624	0					
ANR	9416723	Identifier	samples		9416624	1					
ANR	9416724	MultiplicativeExpression	channel * window_len * 2		9416624	1		*			
ANR	9416725	Identifier	channel		9416624	0					
ANR	9416726	MultiplicativeExpression	window_len * 2		9416624	1		*			
ANR	9416727	Identifier	window_len		9416624	0					
ANR	9416728	PrimaryExpression	2		9416624	1					
ANR	9416729	Argument	venc -> saved + channel * window_len		9416624	1					
ANR	9416730	AdditiveExpression	venc -> saved + channel * window_len		9416624	0		+			
ANR	9416731	PtrMemberAccess	venc -> saved		9416624	0					
ANR	9416732	Identifier	venc		9416624	0					
ANR	9416733	Identifier	saved		9416624	1					
ANR	9416734	MultiplicativeExpression	channel * window_len		9416624	1		*			
ANR	9416735	Identifier	channel		9416624	0					
ANR	9416736	Identifier	window_len		9416624	1					
ANR	9416737	Argument	sizeof ( float ) * window_len		9416624	2					
ANR	9416738	MultiplicativeExpression	sizeof ( float ) * window_len		9416624	0		*			
ANR	9416739	SizeofExpression	sizeof ( float )		9416624	0					
ANR	9416740	Sizeof	sizeof		9416624	0					
ANR	9416741	SizeofOperand	float		9416624	1					
ANR	9416742	Identifier	window_len		9416624	1					
ANR	9416743	ElseStatement	else		9416624	0					
ANR	9416744	CompoundStatement		27:11:484:484	9416624	0					
ANR	9416745	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	0					
ANR	9416746	ForInit	channel = 0 ;	29:13:577:588	9416624	0	True				
ANR	9416747	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416748	Identifier	channel		9416624	0					
ANR	9416749	PrimaryExpression	0		9416624	1					
ANR	9416750	Condition	channel < venc -> channels	29:26:590:613	9416624	1	True				
ANR	9416751	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416752	Identifier	channel		9416624	0					
ANR	9416753	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416754	Identifier	venc		9416624	0					
ANR	9416755	Identifier	channels		9416624	1					
ANR	9416756	PostIncDecOperationExpression	channel ++	29:52:616:624	9416624	2	True				
ANR	9416757	Identifier	channel		9416624	0					
ANR	9416758	IncDec	++		9416624	1					
ANR	9416759	CompoundStatement		29:63:550:550	9416624	3					
ANR	9416760	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"	31:12:642:715	9416624	0	True				
ANR	9416761	CallExpression	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"		9416624	0					
ANR	9416762	Callee	memset		9416624	0					
ANR	9416763	Identifier	memset		9416624	0					
ANR	9416764	ArgumentList	venc -> samples + channel * window_len * 2		9416624	1					
ANR	9416765	Argument	venc -> samples + channel * window_len * 2		9416624	0					
ANR	9416766	AdditiveExpression	venc -> samples + channel * window_len * 2		9416624	0		+			
ANR	9416767	PtrMemberAccess	venc -> samples		9416624	0					
ANR	9416768	Identifier	venc		9416624	0					
ANR	9416769	Identifier	samples		9416624	1					
ANR	9416770	MultiplicativeExpression	channel * window_len * 2		9416624	1		*			
ANR	9416771	Identifier	channel		9416624	0					
ANR	9416772	MultiplicativeExpression	window_len * 2		9416624	1		*			
ANR	9416773	Identifier	window_len		9416624	0					
ANR	9416774	PrimaryExpression	2		9416624	1					
ANR	9416775	Argument	0		9416624	1					
ANR	9416776	PrimaryExpression	0		9416624	0					
ANR	9416777	Argument	sizeof ( float ) * window_len		9416624	2					
ANR	9416778	MultiplicativeExpression	sizeof ( float ) * window_len		9416624	0		*			
ANR	9416779	SizeofExpression	sizeof ( float )		9416624	0					
ANR	9416780	Sizeof	sizeof		9416624	0					
ANR	9416781	SizeofOperand	float		9416624	1					
ANR	9416782	Identifier	window_len		9416624	1					
ANR	9416783	IfStatement	if ( samples )		9416624	6					
ANR	9416784	Condition	samples	39:8:746:752	9416624	0	True				
ANR	9416785	Identifier	samples		9416624	0					
ANR	9416786	CompoundStatement		39:17:678:678	9416624	1					
ANR	9416787	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	0					
ANR	9416788	ForInit	channel = 0 ;	41:13:771:782	9416624	0	True				
ANR	9416789	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416790	Identifier	channel		9416624	0					
ANR	9416791	PrimaryExpression	0		9416624	1					
ANR	9416792	Condition	channel < venc -> channels	41:26:784:807	9416624	1	True				
ANR	9416793	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416794	Identifier	channel		9416624	0					
ANR	9416795	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416796	Identifier	venc		9416624	0					
ANR	9416797	Identifier	channels		9416624	1					
ANR	9416798	PostIncDecOperationExpression	channel ++	41:52:810:818	9416624	2	True				
ANR	9416799	Identifier	channel		9416624	0					
ANR	9416800	IncDec	++		9416624	1					
ANR	9416801	CompoundStatement		43:12:759:825	9416624	3					
ANR	9416802	IdentifierDeclStatement	float * offset = venc -> samples + channel * window_len * 2 + window_len ;	43:12:836:902	9416624	0	True				
ANR	9416803	IdentifierDecl	* offset = venc -> samples + channel * window_len * 2 + window_len		9416624	0					
ANR	9416804	IdentifierDeclType	float *		9416624	0					
ANR	9416805	Identifier	offset		9416624	1					
ANR	9416806	AssignmentExpression	* offset = venc -> samples + channel * window_len * 2 + window_len		9416624	2		=			
ANR	9416807	Identifier	offset		9416624	0					
ANR	9416808	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		9416624	1		+			
ANR	9416809	PtrMemberAccess	venc -> samples		9416624	0					
ANR	9416810	Identifier	venc		9416624	0					
ANR	9416811	Identifier	samples		9416624	1					
ANR	9416812	AdditiveExpression	channel * window_len * 2 + window_len		9416624	1		+			
ANR	9416813	MultiplicativeExpression	channel * window_len * 2		9416624	0		*			
ANR	9416814	Identifier	channel		9416624	0					
ANR	9416815	MultiplicativeExpression	window_len * 2		9416624	1		*			
ANR	9416816	Identifier	window_len		9416624	0					
ANR	9416817	PrimaryExpression	2		9416624	1					
ANR	9416818	Identifier	window_len		9416624	1					
ANR	9416819	ExpressionStatement	j = channel	45:12:917:928	9416624	1	True				
ANR	9416820	AssignmentExpression	j = channel		9416624	0		=			
ANR	9416821	Identifier	j		9416624	0					
ANR	9416822	Identifier	channel		9416624	1					
ANR	9416823	ForStatement	"for ( i = 0 ; i < samples ; i ++ , j += venc -> channels )"		9416624	2					
ANR	9416824	ForInit	i = 0 ;	47:17:948:953	9416624	0	True				
ANR	9416825	AssignmentExpression	i = 0		9416624	0		=			
ANR	9416826	Identifier	i		9416624	0					
ANR	9416827	PrimaryExpression	0		9416624	1					
ANR	9416828	Condition	i < samples	47:24:955:965	9416624	1	True				
ANR	9416829	RelationalExpression	i < samples		9416624	0		<			
ANR	9416830	Identifier	i		9416624	0					
ANR	9416831	Identifier	samples		9416624	1					
ANR	9416832	Expression	"i ++ , j += venc -> channels"	47:37:968:991	9416624	2	True				
ANR	9416833	PostIncDecOperationExpression	i ++		9416624	0					
ANR	9416834	Identifier	i		9416624	0					
ANR	9416835	IncDec	++		9416624	1					
ANR	9416836	AssignmentExpression	j += venc -> channels		9416624	1		+=			
ANR	9416837	Identifier	j		9416624	0					
ANR	9416838	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416839	Identifier	venc		9416624	0					
ANR	9416840	Identifier	channels		9416624	1					
ANR	9416841	ExpressionStatement	offset [ i ] = audio [ j ] / 32768. * win [ window_len - i ] / n	49:16:1011:1066	9416624	3	True				
ANR	9416842	AssignmentExpression	offset [ i ] = audio [ j ] / 32768. * win [ window_len - i ] / n		9416624	0		=			
ANR	9416843	ArrayIndexing	offset [ i ]		9416624	0					
ANR	9416844	Identifier	offset		9416624	0					
ANR	9416845	Identifier	i		9416624	1					
ANR	9416846	MultiplicativeExpression	audio [ j ] / 32768. * win [ window_len - i ] / n		9416624	1		/			
ANR	9416847	ArrayIndexing	audio [ j ]		9416624	0					
ANR	9416848	Identifier	audio		9416624	0					
ANR	9416849	Identifier	j		9416624	1					
ANR	9416850	MultiplicativeExpression	32768. * win [ window_len - i ] / n		9416624	1		*			
ANR	9416851	PrimaryExpression	32768.		9416624	0					
ANR	9416852	MultiplicativeExpression	win [ window_len - i ] / n		9416624	1		/			
ANR	9416853	ArrayIndexing	win [ window_len - i ]		9416624	0					
ANR	9416854	Identifier	win		9416624	0					
ANR	9416855	AdditiveExpression	window_len - i		9416624	1		-			
ANR	9416856	Identifier	window_len		9416624	0					
ANR	9416857	Identifier	i		9416624	1					
ANR	9416858	Identifier	n		9416624	1					
ANR	9416859	ElseStatement	else		9416624	0					
ANR	9416860	CompoundStatement		53:11:1014:1014	9416624	0					
ANR	9416861	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	0					
ANR	9416862	ForInit	channel = 0 ;	55:13:1107:1118	9416624	0	True				
ANR	9416863	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416864	Identifier	channel		9416624	0					
ANR	9416865	PrimaryExpression	0		9416624	1					
ANR	9416866	Condition	channel < venc -> channels	55:26:1120:1143	9416624	1	True				
ANR	9416867	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416868	Identifier	channel		9416624	0					
ANR	9416869	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416870	Identifier	venc		9416624	0					
ANR	9416871	Identifier	channels		9416624	1					
ANR	9416872	PostIncDecOperationExpression	channel ++	55:52:1146:1154	9416624	2	True				
ANR	9416873	Identifier	channel		9416624	0					
ANR	9416874	IncDec	++		9416624	1					
ANR	9416875	CompoundStatement		55:63:1080:1080	9416624	3					
ANR	9416876	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"	57:12:1172:1258	9416624	0	True				
ANR	9416877	CallExpression	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"		9416624	0					
ANR	9416878	Callee	memset		9416624	0					
ANR	9416879	Identifier	memset		9416624	0					
ANR	9416880	ArgumentList	venc -> samples + channel * window_len * 2 + window_len		9416624	1					
ANR	9416881	Argument	venc -> samples + channel * window_len * 2 + window_len		9416624	0					
ANR	9416882	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		9416624	0		+			
ANR	9416883	PtrMemberAccess	venc -> samples		9416624	0					
ANR	9416884	Identifier	venc		9416624	0					
ANR	9416885	Identifier	samples		9416624	1					
ANR	9416886	AdditiveExpression	channel * window_len * 2 + window_len		9416624	1		+			
ANR	9416887	MultiplicativeExpression	channel * window_len * 2		9416624	0		*			
ANR	9416888	Identifier	channel		9416624	0					
ANR	9416889	MultiplicativeExpression	window_len * 2		9416624	1		*			
ANR	9416890	Identifier	window_len		9416624	0					
ANR	9416891	PrimaryExpression	2		9416624	1					
ANR	9416892	Identifier	window_len		9416624	1					
ANR	9416893	Argument	0		9416624	1					
ANR	9416894	PrimaryExpression	0		9416624	0					
ANR	9416895	Argument	sizeof ( float ) * window_len		9416624	2					
ANR	9416896	MultiplicativeExpression	sizeof ( float ) * window_len		9416624	0		*			
ANR	9416897	SizeofExpression	sizeof ( float )		9416624	0					
ANR	9416898	Sizeof	sizeof		9416624	0					
ANR	9416899	SizeofOperand	float		9416624	1					
ANR	9416900	Identifier	window_len		9416624	1					
ANR	9416901	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	7					
ANR	9416902	ForInit	channel = 0 ;	65:9:1290:1301	9416624	0	True				
ANR	9416903	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416904	Identifier	channel		9416624	0					
ANR	9416905	PrimaryExpression	0		9416624	1					
ANR	9416906	Condition	channel < venc -> channels	65:22:1303:1326	9416624	1	True				
ANR	9416907	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416908	Identifier	channel		9416624	0					
ANR	9416909	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416910	Identifier	venc		9416624	0					
ANR	9416911	Identifier	channels		9416624	1					
ANR	9416912	PostIncDecOperationExpression	channel ++	65:48:1329:1337	9416624	2	True				
ANR	9416913	Identifier	channel		9416624	0					
ANR	9416914	IncDec	++		9416624	1					
ANR	9416915	CompoundStatement		65:59:1263:1263	9416624	3					
ANR	9416916	ExpressionStatement	"ff_mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 , venc -> floor )"	67:8:1351:1472	9416624	0	True				
ANR	9416917	CallExpression	"ff_mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 , venc -> floor )"		9416624	0					
ANR	9416918	Callee	ff_mdct_calc		9416624	0					
ANR	9416919	Identifier	ff_mdct_calc		9416624	0					
ANR	9416920	ArgumentList	& venc -> mdct [ 0 ]		9416624	1					
ANR	9416921	Argument	& venc -> mdct [ 0 ]		9416624	0					
ANR	9416922	UnaryOperationExpression	& venc -> mdct [ 0 ]		9416624	0					
ANR	9416923	UnaryOperator	&		9416624	0					
ANR	9416924	ArrayIndexing	venc -> mdct [ 0 ]		9416624	1					
ANR	9416925	PtrMemberAccess	venc -> mdct		9416624	0					
ANR	9416926	Identifier	venc		9416624	0					
ANR	9416927	Identifier	mdct		9416624	1					
ANR	9416928	PrimaryExpression	0		9416624	1					
ANR	9416929	Argument	venc -> coeffs + channel * window_len		9416624	1					
ANR	9416930	AdditiveExpression	venc -> coeffs + channel * window_len		9416624	0		+			
ANR	9416931	PtrMemberAccess	venc -> coeffs		9416624	0					
ANR	9416932	Identifier	venc		9416624	0					
ANR	9416933	Identifier	coeffs		9416624	1					
ANR	9416934	MultiplicativeExpression	channel * window_len		9416624	1		*			
ANR	9416935	Identifier	channel		9416624	0					
ANR	9416936	Identifier	window_len		9416624	1					
ANR	9416937	Argument	venc -> samples + channel * window_len * 2		9416624	2					
ANR	9416938	AdditiveExpression	venc -> samples + channel * window_len * 2		9416624	0		+			
ANR	9416939	PtrMemberAccess	venc -> samples		9416624	0					
ANR	9416940	Identifier	venc		9416624	0					
ANR	9416941	Identifier	samples		9416624	1					
ANR	9416942	MultiplicativeExpression	channel * window_len * 2		9416624	1		*			
ANR	9416943	Identifier	channel		9416624	0					
ANR	9416944	MultiplicativeExpression	window_len * 2		9416624	1		*			
ANR	9416945	Identifier	window_len		9416624	0					
ANR	9416946	PrimaryExpression	2		9416624	1					
ANR	9416947	Argument	venc -> floor		9416624	3					
ANR	9416948	PtrMemberAccess	venc -> floor		9416624	0					
ANR	9416949	Identifier	venc		9416624	0					
ANR	9416950	Identifier	floor		9416624	1					
ANR	9416951	IfStatement	if ( samples )		9416624	8					
ANR	9416952	Condition	samples	73:8:1492:1498	9416624	0	True				
ANR	9416953	Identifier	samples		9416624	0					
ANR	9416954	CompoundStatement		73:17:1424:1424	9416624	1					
ANR	9416955	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		9416624	0					
ANR	9416956	ForInit	channel = 0 ;	75:13:1517:1528	9416624	0	True				
ANR	9416957	AssignmentExpression	channel = 0		9416624	0		=			
ANR	9416958	Identifier	channel		9416624	0					
ANR	9416959	PrimaryExpression	0		9416624	1					
ANR	9416960	Condition	channel < venc -> channels	75:26:1530:1553	9416624	1	True				
ANR	9416961	RelationalExpression	channel < venc -> channels		9416624	0		<			
ANR	9416962	Identifier	channel		9416624	0					
ANR	9416963	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9416964	Identifier	venc		9416624	0					
ANR	9416965	Identifier	channels		9416624	1					
ANR	9416966	PostIncDecOperationExpression	channel ++	75:52:1556:1564	9416624	2	True				
ANR	9416967	Identifier	channel		9416624	0					
ANR	9416968	IncDec	++		9416624	1					
ANR	9416969	CompoundStatement		77:12:1505:1554	9416624	3					
ANR	9416970	IdentifierDeclStatement	float * offset = venc -> saved + channel * window_len ;	77:12:1582:1631	9416624	0	True				
ANR	9416971	IdentifierDecl	* offset = venc -> saved + channel * window_len		9416624	0					
ANR	9416972	IdentifierDeclType	float *		9416624	0					
ANR	9416973	Identifier	offset		9416624	1					
ANR	9416974	AssignmentExpression	* offset = venc -> saved + channel * window_len		9416624	2		=			
ANR	9416975	Identifier	offset		9416624	0					
ANR	9416976	AdditiveExpression	venc -> saved + channel * window_len		9416624	1		+			
ANR	9416977	PtrMemberAccess	venc -> saved		9416624	0					
ANR	9416978	Identifier	venc		9416624	0					
ANR	9416979	Identifier	saved		9416624	1					
ANR	9416980	MultiplicativeExpression	channel * window_len		9416624	1		*			
ANR	9416981	Identifier	channel		9416624	0					
ANR	9416982	Identifier	window_len		9416624	1					
ANR	9416983	ExpressionStatement	j = channel	79:12:1646:1657	9416624	1	True				
ANR	9416984	AssignmentExpression	j = channel		9416624	0		=			
ANR	9416985	Identifier	j		9416624	0					
ANR	9416986	Identifier	channel		9416624	1					
ANR	9416987	ForStatement	"for ( i = 0 ; i < samples ; i ++ , j += venc -> channels )"		9416624	2					
ANR	9416988	ForInit	i = 0 ;	81:17:1677:1682	9416624	0	True				
ANR	9416989	AssignmentExpression	i = 0		9416624	0		=			
ANR	9416990	Identifier	i		9416624	0					
ANR	9416991	PrimaryExpression	0		9416624	1					
ANR	9416992	Condition	i < samples	81:24:1684:1694	9416624	1	True				
ANR	9416993	RelationalExpression	i < samples		9416624	0		<			
ANR	9416994	Identifier	i		9416624	0					
ANR	9416995	Identifier	samples		9416624	1					
ANR	9416996	Expression	"i ++ , j += venc -> channels"	81:37:1697:1720	9416624	2	True				
ANR	9416997	PostIncDecOperationExpression	i ++		9416624	0					
ANR	9416998	Identifier	i		9416624	0					
ANR	9416999	IncDec	++		9416624	1					
ANR	9417000	AssignmentExpression	j += venc -> channels		9416624	1		+=			
ANR	9417001	Identifier	j		9416624	0					
ANR	9417002	PtrMemberAccess	venc -> channels		9416624	1					
ANR	9417003	Identifier	venc		9416624	0					
ANR	9417004	Identifier	channels		9416624	1					
ANR	9417005	ExpressionStatement	offset [ i ] = audio [ j ] / 32768. * win [ i ] / n	83:16:1740:1782	9416624	3	True				
ANR	9417006	AssignmentExpression	offset [ i ] = audio [ j ] / 32768. * win [ i ] / n		9416624	0		=			
ANR	9417007	ArrayIndexing	offset [ i ]		9416624	0					
ANR	9417008	Identifier	offset		9416624	0					
ANR	9417009	Identifier	i		9416624	1					
ANR	9417010	MultiplicativeExpression	audio [ j ] / 32768. * win [ i ] / n		9416624	1		/			
ANR	9417011	ArrayIndexing	audio [ j ]		9416624	0					
ANR	9417012	Identifier	audio		9416624	0					
ANR	9417013	Identifier	j		9416624	1					
ANR	9417014	MultiplicativeExpression	32768. * win [ i ] / n		9416624	1		*			
ANR	9417015	PrimaryExpression	32768.		9416624	0					
ANR	9417016	MultiplicativeExpression	win [ i ] / n		9416624	1		/			
ANR	9417017	ArrayIndexing	win [ i ]		9416624	0					
ANR	9417018	Identifier	win		9416624	0					
ANR	9417019	Identifier	i		9416624	1					
ANR	9417020	Identifier	n		9416624	1					
ANR	9417021	ExpressionStatement	venc -> have_saved = 1	87:8:1804:1824	9416624	1	True				
ANR	9417022	AssignmentExpression	venc -> have_saved = 1		9416624	0		=			
ANR	9417023	PtrMemberAccess	venc -> have_saved		9416624	0					
ANR	9417024	Identifier	venc		9416624	0					
ANR	9417025	Identifier	have_saved		9416624	1					
ANR	9417026	PrimaryExpression	1		9416624	1					
ANR	9417027	ElseStatement	else		9416624	0					
ANR	9417028	CompoundStatement		89:11:1761:1761	9416624	0					
ANR	9417029	ExpressionStatement	venc -> have_saved = 0	91:8:1849:1869	9416624	0	True				
ANR	9417030	AssignmentExpression	venc -> have_saved = 0		9416624	0		=			
ANR	9417031	PtrMemberAccess	venc -> have_saved		9416624	0					
ANR	9417032	Identifier	venc		9416624	0					
ANR	9417033	Identifier	have_saved		9416624	1					
ANR	9417034	PrimaryExpression	0		9416624	1					
ANR	9417035	ReturnStatement	return 1 ;	95:4:1883:1891	9416624	9	True				
ANR	9417036	PrimaryExpression	1		9416624	0					
ANR	9417037	ReturnType	static int		9416624	1					
ANR	9417038	Identifier	window		9416624	2					
ANR	9417039	ParameterList	"venc_context_t * venc , signed short * audio , int samples"		9416624	3					
ANR	9417040	Parameter	venc_context_t * venc	1:18:18:38	9416624	0	True				
ANR	9417041	ParameterType	venc_context_t *		9416624	0					
ANR	9417042	Identifier	venc		9416624	1					
ANR	9417043	Parameter	signed short * audio	1:41:41:60	9416624	1	True				
ANR	9417044	ParameterType	signed short *		9416624	0					
ANR	9417045	Identifier	audio		9416624	1					
ANR	9417046	Parameter	int samples	1:63:63:73	9416624	2	True				
ANR	9417047	ParameterType	int		9416624	0					
ANR	9417048	Identifier	samples		9416624	1					
ANR	9417049	CFGEntryNode	ENTRY		9416624		True				
ANR	9417050	CFGExitNode	EXIT		9416624		True				
ANR	9417051	Symbol	venc -> win		9416624						
ANR	9417052	Symbol	* win		9416624						
ANR	9417053	Symbol	channel		9416624						
ANR	9417054	Symbol	venc -> channels		9416624						
ANR	9417055	Symbol	* * venc		9416624						
ANR	9417056	Symbol	* audio		9416624						
ANR	9417057	Symbol	window_len		9416624						
ANR	9417058	Symbol	venc		9416624						
ANR	9417059	Symbol	venc -> samples		9416624						
ANR	9417060	Symbol	venc -> mdct		9416624						
ANR	9417061	Symbol	venc -> coeffs		9416624						
ANR	9417062	Symbol	audio		9416624						
ANR	9417063	Symbol	win		9416624						
ANR	9417064	Symbol	offset		9416624						
ANR	9417065	Symbol	i		9416624						
ANR	9417066	Symbol	venc -> have_saved		9416624						
ANR	9417067	Symbol	j		9416624						
ANR	9417068	Symbol	* venc -> win		9416624						
ANR	9417069	Symbol	samples		9416624						
ANR	9417070	Symbol	n		9416624						
ANR	9417071	Symbol	venc -> floor		9416624						
ANR	9417072	Symbol	* i		9416624						
ANR	9417073	Symbol	* j		9416624						
ANR	9417074	Symbol	* venc -> blocksize		9416624						
ANR	9417075	Symbol	* window_len		9416624						
ANR	9417076	Symbol	* offset		9416624						
ANR	9417077	Symbol	venc -> blocksize		9416624						
ANR	9417078	Symbol	venc -> saved		9416624						
ANR	9417079	Symbol	* venc		9416624						
