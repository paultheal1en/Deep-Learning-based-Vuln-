command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8108864	File	/home/p4ultr4n/workplace/ReVeal/raw_code/swr_compensate_0.c								
ANR	8108865	Function	swr_compensate	1:0:0:399							
ANR	8108866	FunctionDef	"swr_compensate (struct SwrContext * s , int sample_delta , int compensation_distance)"		8108865	0					
ANR	8108867	CompoundStatement		1:86:86:399	8108865	0					
ANR	8108868	IdentifierDeclStatement	ResampleContext * c = s -> resample ;	3:4:93:124	8108865	0	True				
ANR	8108869	IdentifierDecl	* c = s -> resample		8108865	0					
ANR	8108870	IdentifierDeclType	ResampleContext *		8108865	0					
ANR	8108871	Identifier	c		8108865	1					
ANR	8108872	AssignmentExpression	* c = s -> resample		8108865	2		=			
ANR	8108873	Identifier	c		8108865	0					
ANR	8108874	PtrMemberAccess	s -> resample		8108865	1					
ANR	8108875	Identifier	s		8108865	0					
ANR	8108876	Identifier	resample		8108865	1					
ANR	8108877	ExpressionStatement	c -> compensation_distance = compensation_distance	7:4:243:290	8108865	1	True				
ANR	8108878	AssignmentExpression	c -> compensation_distance = compensation_distance		8108865	0		=			
ANR	8108879	PtrMemberAccess	c -> compensation_distance		8108865	0					
ANR	8108880	Identifier	c		8108865	0					
ANR	8108881	Identifier	compensation_distance		8108865	1					
ANR	8108882	Identifier	compensation_distance		8108865	1					
ANR	8108883	ExpressionStatement	c -> dst_incr = c -> ideal_dst_incr - c -> ideal_dst_incr * ( int64_t ) sample_delta / compensation_distance	9:4:297:396	8108865	2	True				
ANR	8108884	AssignmentExpression	c -> dst_incr = c -> ideal_dst_incr - c -> ideal_dst_incr * ( int64_t ) sample_delta / compensation_distance		8108865	0		=			
ANR	8108885	PtrMemberAccess	c -> dst_incr		8108865	0					
ANR	8108886	Identifier	c		8108865	0					
ANR	8108887	Identifier	dst_incr		8108865	1					
ANR	8108888	AdditiveExpression	c -> ideal_dst_incr - c -> ideal_dst_incr * ( int64_t ) sample_delta / compensation_distance		8108865	1		-			
ANR	8108889	PtrMemberAccess	c -> ideal_dst_incr		8108865	0					
ANR	8108890	Identifier	c		8108865	0					
ANR	8108891	Identifier	ideal_dst_incr		8108865	1					
ANR	8108892	MultiplicativeExpression	c -> ideal_dst_incr * ( int64_t ) sample_delta / compensation_distance		8108865	1		*			
ANR	8108893	PtrMemberAccess	c -> ideal_dst_incr		8108865	0					
ANR	8108894	Identifier	c		8108865	0					
ANR	8108895	Identifier	ideal_dst_incr		8108865	1					
ANR	8108896	MultiplicativeExpression	( int64_t ) sample_delta / compensation_distance		8108865	1		/			
ANR	8108897	CastExpression	( int64_t ) sample_delta		8108865	0					
ANR	8108898	CastTarget	int64_t		8108865	0					
ANR	8108899	Identifier	sample_delta		8108865	1					
ANR	8108900	Identifier	compensation_distance		8108865	1					
ANR	8108901	ReturnType	void		8108865	1					
ANR	8108902	Identifier	swr_compensate		8108865	2					
ANR	8108903	ParameterList	"struct SwrContext * s , int sample_delta , int compensation_distance"		8108865	3					
ANR	8108904	Parameter	struct SwrContext * s	1:20:20:39	8108865	0	True				
ANR	8108905	ParameterType	struct SwrContext *		8108865	0					
ANR	8108906	Identifier	s		8108865	1					
ANR	8108907	Parameter	int sample_delta	1:42:42:57	8108865	1	True				
ANR	8108908	ParameterType	int		8108865	0					
ANR	8108909	Identifier	sample_delta		8108865	1					
ANR	8108910	Parameter	int compensation_distance	1:60:60:84	8108865	2	True				
ANR	8108911	ParameterType	int		8108865	0					
ANR	8108912	Identifier	compensation_distance		8108865	1					
ANR	8108913	CFGEntryNode	ENTRY		8108865		True				
ANR	8108914	CFGExitNode	EXIT		8108865		True				
ANR	8108915	Symbol	s -> resample		8108865						
ANR	8108916	Symbol	compensation_distance		8108865						
ANR	8108917	Symbol	s		8108865						
ANR	8108918	Symbol	c		8108865						
ANR	8108919	Symbol	c -> compensation_distance		8108865						
ANR	8108920	Symbol	c -> ideal_dst_incr		8108865						
ANR	8108921	Symbol	c -> dst_incr		8108865						
ANR	8108922	Symbol	* s		8108865						
ANR	8108923	Symbol	* c		8108865						
ANR	8108924	Symbol	sample_delta		8108865						
