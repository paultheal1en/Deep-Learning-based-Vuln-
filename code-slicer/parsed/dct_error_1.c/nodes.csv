command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1640108	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dct_error_1.c								
ANR	1640109	Function	dct_error	1:0:0:4784							
ANR	1640110	FunctionDef	"dct_error (const struct algo * dct , int test , int is_idct , int speed)"		1640109	0					
ANR	1640111	CompoundStatement		3:0:81:4784	1640109	0					
ANR	1640112	IdentifierDeclStatement	"int it , i , scale ;"	5:4:88:104	1640109	0	True				
ANR	1640113	IdentifierDecl	it		1640109	0					
ANR	1640114	IdentifierDeclType	int		1640109	0					
ANR	1640115	Identifier	it		1640109	1					
ANR	1640116	IdentifierDecl	i		1640109	1					
ANR	1640117	IdentifierDeclType	int		1640109	0					
ANR	1640118	Identifier	i		1640109	1					
ANR	1640119	IdentifierDecl	scale		1640109	2					
ANR	1640120	IdentifierDeclType	int		1640109	0					
ANR	1640121	Identifier	scale		1640109	1					
ANR	1640122	IdentifierDeclStatement	"int err_inf , v ;"	7:4:111:125	1640109	1	True				
ANR	1640123	IdentifierDecl	err_inf		1640109	0					
ANR	1640124	IdentifierDeclType	int		1640109	0					
ANR	1640125	Identifier	err_inf		1640109	1					
ANR	1640126	IdentifierDecl	v		1640109	1					
ANR	1640127	IdentifierDeclType	int		1640109	0					
ANR	1640128	Identifier	v		1640109	1					
ANR	1640129	IdentifierDeclStatement	"int64_t err2 , ti , ti1 , it1 ;"	9:4:132:158	1640109	2	True				
ANR	1640130	IdentifierDecl	err2		1640109	0					
ANR	1640131	IdentifierDeclType	int64_t		1640109	0					
ANR	1640132	Identifier	err2		1640109	1					
ANR	1640133	IdentifierDecl	ti		1640109	1					
ANR	1640134	IdentifierDeclType	int64_t		1640109	0					
ANR	1640135	Identifier	ti		1640109	1					
ANR	1640136	IdentifierDecl	ti1		1640109	2					
ANR	1640137	IdentifierDeclType	int64_t		1640109	0					
ANR	1640138	Identifier	ti1		1640109	1					
ANR	1640139	IdentifierDecl	it1		1640109	3					
ANR	1640140	IdentifierDeclType	int64_t		1640109	0					
ANR	1640141	Identifier	it1		1640109	1					
ANR	1640142	IdentifierDeclStatement	"int64_t sysErr [ 64 ] , sysErrMax = 0 ;"	11:4:165:198	1640109	3	True				
ANR	1640143	IdentifierDecl	sysErr [ 64 ]		1640109	0					
ANR	1640144	IdentifierDeclType	int64_t [ 64 ]		1640109	0					
ANR	1640145	Identifier	sysErr		1640109	1					
ANR	1640146	PrimaryExpression	64		1640109	2					
ANR	1640147	IdentifierDecl	sysErrMax = 0		1640109	1					
ANR	1640148	IdentifierDeclType	int64_t		1640109	0					
ANR	1640149	Identifier	sysErrMax		1640109	1					
ANR	1640150	AssignmentExpression	sysErrMax = 0		1640109	2		=			
ANR	1640151	Identifier	sysErrMax		1640109	0					
ANR	1640152	PrimaryExpression	0		1640109	1					
ANR	1640153	IdentifierDeclStatement	int maxout = 0 ;	13:4:205:219	1640109	4	True				
ANR	1640154	IdentifierDecl	maxout = 0		1640109	0					
ANR	1640155	IdentifierDeclType	int		1640109	0					
ANR	1640156	Identifier	maxout		1640109	1					
ANR	1640157	AssignmentExpression	maxout = 0		1640109	2		=			
ANR	1640158	Identifier	maxout		1640109	0					
ANR	1640159	PrimaryExpression	0		1640109	1					
ANR	1640160	IdentifierDeclStatement	"int blockSumErrMax = 0 , blockSumErr ;"	15:4:226:261	1640109	5	True				
ANR	1640161	IdentifierDecl	blockSumErrMax = 0		1640109	0					
ANR	1640162	IdentifierDeclType	int		1640109	0					
ANR	1640163	Identifier	blockSumErrMax		1640109	1					
ANR	1640164	AssignmentExpression	blockSumErrMax = 0		1640109	2		=			
ANR	1640165	Identifier	blockSumErrMax		1640109	0					
ANR	1640166	PrimaryExpression	0		1640109	1					
ANR	1640167	IdentifierDecl	blockSumErr		1640109	1					
ANR	1640168	IdentifierDeclType	int		1640109	0					
ANR	1640169	Identifier	blockSumErr		1640109	1					
ANR	1640170	IdentifierDeclStatement	AVLFG prng ;	17:4:268:278	1640109	6	True				
ANR	1640171	IdentifierDecl	prng		1640109	0					
ANR	1640172	IdentifierDeclType	AVLFG		1640109	0					
ANR	1640173	Identifier	prng		1640109	1					
ANR	1640174	ExpressionStatement	"av_lfg_init ( & prng , 1 )"	21:4:287:308	1640109	7	True				
ANR	1640175	CallExpression	"av_lfg_init ( & prng , 1 )"		1640109	0					
ANR	1640176	Callee	av_lfg_init		1640109	0					
ANR	1640177	Identifier	av_lfg_init		1640109	0					
ANR	1640178	ArgumentList	& prng		1640109	1					
ANR	1640179	Argument	& prng		1640109	0					
ANR	1640180	UnaryOperationExpression	& prng		1640109	0					
ANR	1640181	UnaryOperator	&		1640109	0					
ANR	1640182	Identifier	prng		1640109	1					
ANR	1640183	Argument	1		1640109	1					
ANR	1640184	PrimaryExpression	1		1640109	0					
ANR	1640185	ExpressionStatement	err_inf = 0	25:4:317:328	1640109	8	True				
ANR	1640186	AssignmentExpression	err_inf = 0		1640109	0		=			
ANR	1640187	Identifier	err_inf		1640109	0					
ANR	1640188	PrimaryExpression	0		1640109	1					
ANR	1640189	ExpressionStatement	err2 = 0	27:4:335:343	1640109	9	True				
ANR	1640190	AssignmentExpression	err2 = 0		1640109	0		=			
ANR	1640191	Identifier	err2		1640109	0					
ANR	1640192	PrimaryExpression	0		1640109	1					
ANR	1640193	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	10					
ANR	1640194	ForInit	i = 0 ;	29:9:355:360	1640109	0	True				
ANR	1640195	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640196	Identifier	i		1640109	0					
ANR	1640197	PrimaryExpression	0		1640109	1					
ANR	1640198	Condition	i < 64	29:16:362:367	1640109	1	True				
ANR	1640199	RelationalExpression	i < 64		1640109	0		<			
ANR	1640200	Identifier	i		1640109	0					
ANR	1640201	PrimaryExpression	64		1640109	1					
ANR	1640202	PostIncDecOperationExpression	i ++	29:24:370:372	1640109	2	True				
ANR	1640203	Identifier	i		1640109	0					
ANR	1640204	IncDec	++		1640109	1					
ANR	1640205	ExpressionStatement	sysErr [ i ] = 0	31:8:384:397	1640109	3	True				
ANR	1640206	AssignmentExpression	sysErr [ i ] = 0		1640109	0		=			
ANR	1640207	ArrayIndexing	sysErr [ i ]		1640109	0					
ANR	1640208	Identifier	sysErr		1640109	0					
ANR	1640209	Identifier	i		1640109	1					
ANR	1640210	PrimaryExpression	0		1640109	1					
ANR	1640211	ForStatement	for ( it = 0 ; it < NB_ITS ; it ++ )		1640109	11					
ANR	1640212	ForInit	it = 0 ;	33:9:409:415	1640109	0	True				
ANR	1640213	AssignmentExpression	it = 0		1640109	0		=			
ANR	1640214	Identifier	it		1640109	0					
ANR	1640215	PrimaryExpression	0		1640109	1					
ANR	1640216	Condition	it < NB_ITS	33:17:417:427	1640109	1	True				
ANR	1640217	RelationalExpression	it < NB_ITS		1640109	0		<			
ANR	1640218	Identifier	it		1640109	0					
ANR	1640219	Identifier	NB_ITS		1640109	1					
ANR	1640220	PostIncDecOperationExpression	it ++	33:30:430:433	1640109	2	True				
ANR	1640221	Identifier	it		1640109	0					
ANR	1640222	IncDec	++		1640109	1					
ANR	1640223	CompoundStatement		31:36:354:354	1640109	3					
ANR	1640224	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640225	ForInit	i = 0 ;	35:13:452:457	1640109	0	True				
ANR	1640226	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640227	Identifier	i		1640109	0					
ANR	1640228	PrimaryExpression	0		1640109	1					
ANR	1640229	Condition	i < 64	35:20:459:464	1640109	1	True				
ANR	1640230	RelationalExpression	i < 64		1640109	0		<			
ANR	1640231	Identifier	i		1640109	0					
ANR	1640232	PrimaryExpression	64		1640109	1					
ANR	1640233	PostIncDecOperationExpression	i ++	35:28:467:469	1640109	2	True				
ANR	1640234	Identifier	i		1640109	0					
ANR	1640235	IncDec	++		1640109	1					
ANR	1640236	ExpressionStatement	block1 [ i ] = 0	37:12:485:498	1640109	3	True				
ANR	1640237	AssignmentExpression	block1 [ i ] = 0		1640109	0		=			
ANR	1640238	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640239	Identifier	block1		1640109	0					
ANR	1640240	Identifier	i		1640109	1					
ANR	1640241	PrimaryExpression	0		1640109	1					
ANR	1640242	SwitchStatement	switch ( test )		1640109	1					
ANR	1640243	Condition	test	39:16:517:520	1640109	0	True				
ANR	1640244	Identifier	test		1640109	0					
ANR	1640245	CompoundStatement		37:22:441:441	1640109	1					
ANR	1640246	Label	case 0 :	41:8:534:540	1640109	0	True				
ANR	1640247	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	1					
ANR	1640248	ForInit	i = 0 ;	43:17:560:565	1640109	0	True				
ANR	1640249	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640250	Identifier	i		1640109	0					
ANR	1640251	PrimaryExpression	0		1640109	1					
ANR	1640252	Condition	i < 64	43:24:567:572	1640109	1	True				
ANR	1640253	RelationalExpression	i < 64		1640109	0		<			
ANR	1640254	Identifier	i		1640109	0					
ANR	1640255	PrimaryExpression	64		1640109	1					
ANR	1640256	PostIncDecOperationExpression	i ++	43:32:575:577	1640109	2	True				
ANR	1640257	Identifier	i		1640109	0					
ANR	1640258	IncDec	++		1640109	1					
ANR	1640259	ExpressionStatement	block1 [ i ] = ( av_lfg_get ( & prng ) % 512 ) - 256	45:16:597:640	1640109	3	True				
ANR	1640260	AssignmentExpression	block1 [ i ] = ( av_lfg_get ( & prng ) % 512 ) - 256		1640109	0		=			
ANR	1640261	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640262	Identifier	block1		1640109	0					
ANR	1640263	Identifier	i		1640109	1					
ANR	1640264	AdditiveExpression	( av_lfg_get ( & prng ) % 512 ) - 256		1640109	1		-			
ANR	1640265	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640266	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640267	Callee	av_lfg_get		1640109	0					
ANR	1640268	Identifier	av_lfg_get		1640109	0					
ANR	1640269	ArgumentList	& prng		1640109	1					
ANR	1640270	Argument	& prng		1640109	0					
ANR	1640271	UnaryOperationExpression	& prng		1640109	0					
ANR	1640272	UnaryOperator	&		1640109	0					
ANR	1640273	Identifier	prng		1640109	1					
ANR	1640274	PrimaryExpression	512		1640109	1					
ANR	1640275	PrimaryExpression	256		1640109	1					
ANR	1640276	IfStatement	if ( is_idct )		1640109	2					
ANR	1640277	Condition	is_idct	47:16:659:665	1640109	0	True				
ANR	1640278	Identifier	is_idct		1640109	0					
ANR	1640279	CompoundStatement		45:25:586:586	1640109	1					
ANR	1640280	ExpressionStatement	ff_ref_fdct ( block1 )	49:16:687:706	1640109	0	True				
ANR	1640281	CallExpression	ff_ref_fdct ( block1 )		1640109	0					
ANR	1640282	Callee	ff_ref_fdct		1640109	0					
ANR	1640283	Identifier	ff_ref_fdct		1640109	0					
ANR	1640284	ArgumentList	block1		1640109	1					
ANR	1640285	Argument	block1		1640109	0					
ANR	1640286	Identifier	block1		1640109	0					
ANR	1640287	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	1					
ANR	1640288	ForInit	i = 0 ;	51:21:730:735	1640109	0	True				
ANR	1640289	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640290	Identifier	i		1640109	0					
ANR	1640291	PrimaryExpression	0		1640109	1					
ANR	1640292	Condition	i < 64	51:28:737:742	1640109	1	True				
ANR	1640293	RelationalExpression	i < 64		1640109	0		<			
ANR	1640294	Identifier	i		1640109	0					
ANR	1640295	PrimaryExpression	64		1640109	1					
ANR	1640296	PostIncDecOperationExpression	i ++	51:36:745:747	1640109	2	True				
ANR	1640297	Identifier	i		1640109	0					
ANR	1640298	IncDec	++		1640109	1					
ANR	1640299	ExpressionStatement	block1 [ i ] >>= 3	53:20:771:786	1640109	3	True				
ANR	1640300	AssignmentExpression	block1 [ i ] >>= 3		1640109	0		>>=			
ANR	1640301	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640302	Identifier	block1		1640109	0					
ANR	1640303	Identifier	i		1640109	1					
ANR	1640304	PrimaryExpression	3		1640109	1					
ANR	1640305	BreakStatement	break ;	57:12:816:821	1640109	3	True				
ANR	1640306	Label	case 1 :	59:8:832:838	1640109	4	True				
ANR	1640307	CompoundStatement		59:16:777:813	1640109	5					
ANR	1640308	IdentifierDeclStatement	int num = av_lfg_get ( & prng ) % 10 + 1 ;	61:16:859:895	1640109	0	True				
ANR	1640309	IdentifierDecl	num = av_lfg_get ( & prng ) % 10 + 1		1640109	0					
ANR	1640310	IdentifierDeclType	int		1640109	0					
ANR	1640311	Identifier	num		1640109	1					
ANR	1640312	AssignmentExpression	num = av_lfg_get ( & prng ) % 10 + 1		1640109	2		=			
ANR	1640313	Identifier	num		1640109	0					
ANR	1640314	AdditiveExpression	av_lfg_get ( & prng ) % 10 + 1		1640109	1		+			
ANR	1640315	MultiplicativeExpression	av_lfg_get ( & prng ) % 10		1640109	0		%			
ANR	1640316	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640317	Callee	av_lfg_get		1640109	0					
ANR	1640318	Identifier	av_lfg_get		1640109	0					
ANR	1640319	ArgumentList	& prng		1640109	1					
ANR	1640320	Argument	& prng		1640109	0					
ANR	1640321	UnaryOperationExpression	& prng		1640109	0					
ANR	1640322	UnaryOperator	&		1640109	0					
ANR	1640323	Identifier	prng		1640109	1					
ANR	1640324	PrimaryExpression	10		1640109	1					
ANR	1640325	PrimaryExpression	1		1640109	1					
ANR	1640326	ForStatement	for ( i = 0 ; i < num ; i ++ )		1640109	1					
ANR	1640327	ForInit	i = 0 ;	63:21:919:924	1640109	0	True				
ANR	1640328	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640329	Identifier	i		1640109	0					
ANR	1640330	PrimaryExpression	0		1640109	1					
ANR	1640331	Condition	i < num	63:28:926:932	1640109	1	True				
ANR	1640332	RelationalExpression	i < num		1640109	0		<			
ANR	1640333	Identifier	i		1640109	0					
ANR	1640334	Identifier	num		1640109	1					
ANR	1640335	PostIncDecOperationExpression	i ++	63:37:935:937	1640109	2	True				
ANR	1640336	Identifier	i		1640109	0					
ANR	1640337	IncDec	++		1640109	1					
ANR	1640338	ExpressionStatement	block1 [ av_lfg_get ( & prng ) % 64 ] = av_lfg_get ( & prng ) % 512 - 256	65:20:961:1048	1640109	3	True				
ANR	1640339	AssignmentExpression	block1 [ av_lfg_get ( & prng ) % 64 ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1640340	ArrayIndexing	block1 [ av_lfg_get ( & prng ) % 64 ]		1640109	0					
ANR	1640341	Identifier	block1		1640109	0					
ANR	1640342	MultiplicativeExpression	av_lfg_get ( & prng ) % 64		1640109	1		%			
ANR	1640343	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640344	Callee	av_lfg_get		1640109	0					
ANR	1640345	Identifier	av_lfg_get		1640109	0					
ANR	1640346	ArgumentList	& prng		1640109	1					
ANR	1640347	Argument	& prng		1640109	0					
ANR	1640348	UnaryOperationExpression	& prng		1640109	0					
ANR	1640349	UnaryOperator	&		1640109	0					
ANR	1640350	Identifier	prng		1640109	1					
ANR	1640351	PrimaryExpression	64		1640109	1					
ANR	1640352	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1640353	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640354	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640355	Callee	av_lfg_get		1640109	0					
ANR	1640356	Identifier	av_lfg_get		1640109	0					
ANR	1640357	ArgumentList	& prng		1640109	1					
ANR	1640358	Argument	& prng		1640109	0					
ANR	1640359	UnaryOperationExpression	& prng		1640109	0					
ANR	1640360	UnaryOperator	&		1640109	0					
ANR	1640361	Identifier	prng		1640109	1					
ANR	1640362	PrimaryExpression	512		1640109	1					
ANR	1640363	PrimaryExpression	256		1640109	1					
ANR	1640364	BreakStatement	break ;	71:12:1078:1083	1640109	6	True				
ANR	1640365	Label	case 2 :	73:8:1094:1100	1640109	7	True				
ANR	1640366	ExpressionStatement	block1 [ 0 ] = av_lfg_get ( & prng ) % 4096 - 2048	75:12:1115:1158	1640109	8	True				
ANR	1640367	AssignmentExpression	block1 [ 0 ] = av_lfg_get ( & prng ) % 4096 - 2048		1640109	0		=			
ANR	1640368	ArrayIndexing	block1 [ 0 ]		1640109	0					
ANR	1640369	Identifier	block1		1640109	0					
ANR	1640370	PrimaryExpression	0		1640109	1					
ANR	1640371	AdditiveExpression	av_lfg_get ( & prng ) % 4096 - 2048		1640109	1		-			
ANR	1640372	MultiplicativeExpression	av_lfg_get ( & prng ) % 4096		1640109	0		%			
ANR	1640373	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640374	Callee	av_lfg_get		1640109	0					
ANR	1640375	Identifier	av_lfg_get		1640109	0					
ANR	1640376	ArgumentList	& prng		1640109	1					
ANR	1640377	Argument	& prng		1640109	0					
ANR	1640378	UnaryOperationExpression	& prng		1640109	0					
ANR	1640379	UnaryOperator	&		1640109	0					
ANR	1640380	Identifier	prng		1640109	1					
ANR	1640381	PrimaryExpression	4096		1640109	1					
ANR	1640382	PrimaryExpression	2048		1640109	1					
ANR	1640383	ExpressionStatement	block1 [ 63 ] = ( block1 [ 0 ] & 1 ) ^ 1	77:12:1173:1205	1640109	9	True				
ANR	1640384	AssignmentExpression	block1 [ 63 ] = ( block1 [ 0 ] & 1 ) ^ 1		1640109	0		=			
ANR	1640385	ArrayIndexing	block1 [ 63 ]		1640109	0					
ANR	1640386	Identifier	block1		1640109	0					
ANR	1640387	PrimaryExpression	63		1640109	1					
ANR	1640388	ExclusiveOrExpression	( block1 [ 0 ] & 1 ) ^ 1		1640109	1		^			
ANR	1640389	BitAndExpression	block1 [ 0 ] & 1		1640109	0		&			
ANR	1640390	ArrayIndexing	block1 [ 0 ]		1640109	0					
ANR	1640391	Identifier	block1		1640109	0					
ANR	1640392	PrimaryExpression	0		1640109	1					
ANR	1640393	PrimaryExpression	1		1640109	1					
ANR	1640394	PrimaryExpression	1		1640109	1					
ANR	1640395	BreakStatement	break ;	79:12:1220:1225	1640109	10	True				
ANR	1640396	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	2					
ANR	1640397	ForInit	i = 0 ;	85:13:1254:1259	1640109	0	True				
ANR	1640398	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640399	Identifier	i		1640109	0					
ANR	1640400	PrimaryExpression	0		1640109	1					
ANR	1640401	Condition	i < 64	85:20:1261:1266	1640109	1	True				
ANR	1640402	RelationalExpression	i < 64		1640109	0		<			
ANR	1640403	Identifier	i		1640109	0					
ANR	1640404	PrimaryExpression	64		1640109	1					
ANR	1640405	PostIncDecOperationExpression	i ++	85:28:1269:1271	1640109	2	True				
ANR	1640406	Identifier	i		1640109	0					
ANR	1640407	IncDec	++		1640109	1					
ANR	1640408	ExpressionStatement	block_org [ i ] = block1 [ i ]	87:12:1287:1311	1640109	3	True				
ANR	1640409	AssignmentExpression	block_org [ i ] = block1 [ i ]		1640109	0		=			
ANR	1640410	ArrayIndexing	block_org [ i ]		1640109	0					
ANR	1640411	Identifier	block_org		1640109	0					
ANR	1640412	Identifier	i		1640109	1					
ANR	1640413	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640414	Identifier	block1		1640109	0					
ANR	1640415	Identifier	i		1640109	1					
ANR	1640416	IfStatement	if ( dct -> format == MMX_PERM )		1640109	3					
ANR	1640417	Condition	dct -> format == MMX_PERM	91:12:1328:1350	1640109	0	True				
ANR	1640418	EqualityExpression	dct -> format == MMX_PERM		1640109	0		==			
ANR	1640419	PtrMemberAccess	dct -> format		1640109	0					
ANR	1640420	Identifier	dct		1640109	0					
ANR	1640421	Identifier	format		1640109	1					
ANR	1640422	Identifier	MMX_PERM		1640109	1					
ANR	1640423	CompoundStatement		89:37:1271:1271	1640109	1					
ANR	1640424	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640425	ForInit	i = 0 ;	93:17:1373:1378	1640109	0	True				
ANR	1640426	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640427	Identifier	i		1640109	0					
ANR	1640428	PrimaryExpression	0		1640109	1					
ANR	1640429	Condition	i < 64	93:24:1380:1385	1640109	1	True				
ANR	1640430	RelationalExpression	i < 64		1640109	0		<			
ANR	1640431	Identifier	i		1640109	0					
ANR	1640432	PrimaryExpression	64		1640109	1					
ANR	1640433	PostIncDecOperationExpression	i ++	93:32:1388:1390	1640109	2	True				
ANR	1640434	Identifier	i		1640109	0					
ANR	1640435	IncDec	++		1640109	1					
ANR	1640436	ExpressionStatement	block [ idct_mmx_perm [ i ] ] = block1 [ i ]	95:16:1410:1445	1640109	3	True				
ANR	1640437	AssignmentExpression	block [ idct_mmx_perm [ i ] ] = block1 [ i ]		1640109	0		=			
ANR	1640438	ArrayIndexing	block [ idct_mmx_perm [ i ] ]		1640109	0					
ANR	1640439	Identifier	block		1640109	0					
ANR	1640440	ArrayIndexing	idct_mmx_perm [ i ]		1640109	1					
ANR	1640441	Identifier	idct_mmx_perm		1640109	0					
ANR	1640442	Identifier	i		1640109	1					
ANR	1640443	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640444	Identifier	block1		1640109	0					
ANR	1640445	Identifier	i		1640109	1					
ANR	1640446	ElseStatement	else		1640109	0					
ANR	1640447	IfStatement	if ( dct -> format == MMX_SIMPLE_PERM )		1640109	0					
ANR	1640448	Condition	dct -> format == MMX_SIMPLE_PERM	97:19:1467:1496	1640109	0	True				
ANR	1640449	EqualityExpression	dct -> format == MMX_SIMPLE_PERM		1640109	0		==			
ANR	1640450	PtrMemberAccess	dct -> format		1640109	0					
ANR	1640451	Identifier	dct		1640109	0					
ANR	1640452	Identifier	format		1640109	1					
ANR	1640453	Identifier	MMX_SIMPLE_PERM		1640109	1					
ANR	1640454	CompoundStatement		95:51:1417:1417	1640109	1					
ANR	1640455	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640456	ForInit	i = 0 ;	99:17:1519:1524	1640109	0	True				
ANR	1640457	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640458	Identifier	i		1640109	0					
ANR	1640459	PrimaryExpression	0		1640109	1					
ANR	1640460	Condition	i < 64	99:24:1526:1531	1640109	1	True				
ANR	1640461	RelationalExpression	i < 64		1640109	0		<			
ANR	1640462	Identifier	i		1640109	0					
ANR	1640463	PrimaryExpression	64		1640109	1					
ANR	1640464	PostIncDecOperationExpression	i ++	99:32:1534:1536	1640109	2	True				
ANR	1640465	Identifier	i		1640109	0					
ANR	1640466	IncDec	++		1640109	1					
ANR	1640467	ExpressionStatement	block [ idct_simple_mmx_perm [ i ] ] = block1 [ i ]	101:16:1556:1598	1640109	3	True				
ANR	1640468	AssignmentExpression	block [ idct_simple_mmx_perm [ i ] ] = block1 [ i ]		1640109	0		=			
ANR	1640469	ArrayIndexing	block [ idct_simple_mmx_perm [ i ] ]		1640109	0					
ANR	1640470	Identifier	block		1640109	0					
ANR	1640471	ArrayIndexing	idct_simple_mmx_perm [ i ]		1640109	1					
ANR	1640472	Identifier	idct_simple_mmx_perm		1640109	0					
ANR	1640473	Identifier	i		1640109	1					
ANR	1640474	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640475	Identifier	block1		1640109	0					
ANR	1640476	Identifier	i		1640109	1					
ANR	1640477	ElseStatement	else		1640109	0					
ANR	1640478	IfStatement	if ( dct -> format == SSE2_PERM )		1640109	0					
ANR	1640479	Condition	dct -> format == SSE2_PERM	103:19:1620:1643	1640109	0	True				
ANR	1640480	EqualityExpression	dct -> format == SSE2_PERM		1640109	0		==			
ANR	1640481	PtrMemberAccess	dct -> format		1640109	0					
ANR	1640482	Identifier	dct		1640109	0					
ANR	1640483	Identifier	format		1640109	1					
ANR	1640484	Identifier	SSE2_PERM		1640109	1					
ANR	1640485	CompoundStatement		101:45:1564:1564	1640109	1					
ANR	1640486	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640487	ForInit	i = 0 ;	105:17:1666:1671	1640109	0	True				
ANR	1640488	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640489	Identifier	i		1640109	0					
ANR	1640490	PrimaryExpression	0		1640109	1					
ANR	1640491	Condition	i < 64	105:24:1673:1678	1640109	1	True				
ANR	1640492	RelationalExpression	i < 64		1640109	0		<			
ANR	1640493	Identifier	i		1640109	0					
ANR	1640494	PrimaryExpression	64		1640109	1					
ANR	1640495	PostIncDecOperationExpression	i ++	105:32:1681:1683	1640109	2	True				
ANR	1640496	Identifier	i		1640109	0					
ANR	1640497	IncDec	++		1640109	1					
ANR	1640498	ExpressionStatement	block [ ( i & 0x38 ) | idct_sse2_row_perm [ i & 7 ] ] = block1 [ i ]	107:16:1703:1760	1640109	3	True				
ANR	1640499	AssignmentExpression	block [ ( i & 0x38 ) | idct_sse2_row_perm [ i & 7 ] ] = block1 [ i ]		1640109	0		=			
ANR	1640500	ArrayIndexing	block [ ( i & 0x38 ) | idct_sse2_row_perm [ i & 7 ] ]		1640109	0					
ANR	1640501	Identifier	block		1640109	0					
ANR	1640502	InclusiveOrExpression	( i & 0x38 ) | idct_sse2_row_perm [ i & 7 ]		1640109	1		|			
ANR	1640503	BitAndExpression	i & 0x38		1640109	0		&			
ANR	1640504	Identifier	i		1640109	0					
ANR	1640505	PrimaryExpression	0x38		1640109	1					
ANR	1640506	ArrayIndexing	idct_sse2_row_perm [ i & 7 ]		1640109	1					
ANR	1640507	Identifier	idct_sse2_row_perm		1640109	0					
ANR	1640508	BitAndExpression	i & 7		1640109	1		&			
ANR	1640509	Identifier	i		1640109	0					
ANR	1640510	PrimaryExpression	7		1640109	1					
ANR	1640511	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640512	Identifier	block1		1640109	0					
ANR	1640513	Identifier	i		1640109	1					
ANR	1640514	ElseStatement	else		1640109	0					
ANR	1640515	IfStatement	if ( dct -> format == PARTTRANS_PERM )		1640109	0					
ANR	1640516	Condition	dct -> format == PARTTRANS_PERM	109:19:1782:1810	1640109	0	True				
ANR	1640517	EqualityExpression	dct -> format == PARTTRANS_PERM		1640109	0		==			
ANR	1640518	PtrMemberAccess	dct -> format		1640109	0					
ANR	1640519	Identifier	dct		1640109	0					
ANR	1640520	Identifier	format		1640109	1					
ANR	1640521	Identifier	PARTTRANS_PERM		1640109	1					
ANR	1640522	CompoundStatement		107:50:1731:1731	1640109	1					
ANR	1640523	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640524	ForInit	i = 0 ;	111:17:1833:1838	1640109	0	True				
ANR	1640525	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640526	Identifier	i		1640109	0					
ANR	1640527	PrimaryExpression	0		1640109	1					
ANR	1640528	Condition	i < 64	111:24:1840:1845	1640109	1	True				
ANR	1640529	RelationalExpression	i < 64		1640109	0		<			
ANR	1640530	Identifier	i		1640109	0					
ANR	1640531	PrimaryExpression	64		1640109	1					
ANR	1640532	PostIncDecOperationExpression	i ++	111:32:1848:1850	1640109	2	True				
ANR	1640533	Identifier	i		1640109	0					
ANR	1640534	IncDec	++		1640109	1					
ANR	1640535	ExpressionStatement	block [ ( i & 0x24 ) | ( ( i & 3 ) << 3 ) | ( ( i >> 3 ) & 3 ) ] = block1 [ i ]	113:16:1870:1933	1640109	3	True				
ANR	1640536	AssignmentExpression	block [ ( i & 0x24 ) | ( ( i & 3 ) << 3 ) | ( ( i >> 3 ) & 3 ) ] = block1 [ i ]		1640109	0		=			
ANR	1640537	ArrayIndexing	block [ ( i & 0x24 ) | ( ( i & 3 ) << 3 ) | ( ( i >> 3 ) & 3 ) ]		1640109	0					
ANR	1640538	Identifier	block		1640109	0					
ANR	1640539	InclusiveOrExpression	( i & 0x24 ) | ( ( i & 3 ) << 3 ) | ( ( i >> 3 ) & 3 )		1640109	1		|			
ANR	1640540	BitAndExpression	i & 0x24		1640109	0		&			
ANR	1640541	Identifier	i		1640109	0					
ANR	1640542	PrimaryExpression	0x24		1640109	1					
ANR	1640543	InclusiveOrExpression	( ( i & 3 ) << 3 ) | ( ( i >> 3 ) & 3 )		1640109	1		|			
ANR	1640544	ShiftExpression	( i & 3 ) << 3		1640109	0		<<			
ANR	1640545	BitAndExpression	i & 3		1640109	0		&			
ANR	1640546	Identifier	i		1640109	0					
ANR	1640547	PrimaryExpression	3		1640109	1					
ANR	1640548	PrimaryExpression	3		1640109	1					
ANR	1640549	BitAndExpression	( i >> 3 ) & 3		1640109	1		&			
ANR	1640550	ShiftExpression	i >> 3		1640109	0		>>			
ANR	1640551	Identifier	i		1640109	0					
ANR	1640552	PrimaryExpression	3		1640109	1					
ANR	1640553	PrimaryExpression	3		1640109	1					
ANR	1640554	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640555	Identifier	block1		1640109	0					
ANR	1640556	Identifier	i		1640109	1					
ANR	1640557	ElseStatement	else		1640109	0					
ANR	1640558	CompoundStatement		113:15:1869:1869	1640109	0					
ANR	1640559	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640560	ForInit	i = 0 ;	117:17:1971:1976	1640109	0	True				
ANR	1640561	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640562	Identifier	i		1640109	0					
ANR	1640563	PrimaryExpression	0		1640109	1					
ANR	1640564	Condition	i < 64	117:24:1978:1983	1640109	1	True				
ANR	1640565	RelationalExpression	i < 64		1640109	0		<			
ANR	1640566	Identifier	i		1640109	0					
ANR	1640567	PrimaryExpression	64		1640109	1					
ANR	1640568	PostIncDecOperationExpression	i ++	117:32:1986:1988	1640109	2	True				
ANR	1640569	Identifier	i		1640109	0					
ANR	1640570	IncDec	++		1640109	1					
ANR	1640571	ExpressionStatement	block [ i ] = block1 [ i ]	119:16:2008:2028	1640109	3	True				
ANR	1640572	AssignmentExpression	block [ i ] = block1 [ i ]		1640109	0		=			
ANR	1640573	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640574	Identifier	block		1640109	0					
ANR	1640575	Identifier	i		1640109	1					
ANR	1640576	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640577	Identifier	block1		1640109	0					
ANR	1640578	Identifier	i		1640109	1					
ANR	1640579	ExpressionStatement	dct -> func ( block )	125:8:2052:2068	1640109	4	True				
ANR	1640580	CallExpression	dct -> func ( block )		1640109	0					
ANR	1640581	Callee	dct -> func		1640109	0					
ANR	1640582	PtrMemberAccess	dct -> func		1640109	0					
ANR	1640583	Identifier	dct		1640109	0					
ANR	1640584	Identifier	func		1640109	1					
ANR	1640585	ArgumentList	block		1640109	1					
ANR	1640586	Argument	block		1640109	0					
ANR	1640587	Identifier	block		1640109	0					
ANR	1640588	ExpressionStatement	mmx_emms ( )	127:8:2079:2089	1640109	5	True				
ANR	1640589	CallExpression	mmx_emms ( )		1640109	0					
ANR	1640590	Callee	mmx_emms		1640109	0					
ANR	1640591	Identifier	mmx_emms		1640109	0					
ANR	1640592	ArgumentList			1640109	1					
ANR	1640593	IfStatement	if ( dct -> format == SCALE_PERM )		1640109	6					
ANR	1640594	Condition	dct -> format == SCALE_PERM	131:12:2106:2130	1640109	0	True				
ANR	1640595	EqualityExpression	dct -> format == SCALE_PERM		1640109	0		==			
ANR	1640596	PtrMemberAccess	dct -> format		1640109	0					
ANR	1640597	Identifier	dct		1640109	0					
ANR	1640598	Identifier	format		1640109	1					
ANR	1640599	Identifier	SCALE_PERM		1640109	1					
ANR	1640600	CompoundStatement		129:39:2051:2051	1640109	1					
ANR	1640601	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1640602	ForInit	i = 0 ;	133:17:2153:2158	1640109	0	True				
ANR	1640603	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640604	Identifier	i		1640109	0					
ANR	1640605	PrimaryExpression	0		1640109	1					
ANR	1640606	Condition	i < 64	133:24:2160:2165	1640109	1	True				
ANR	1640607	RelationalExpression	i < 64		1640109	0		<			
ANR	1640608	Identifier	i		1640109	0					
ANR	1640609	PrimaryExpression	64		1640109	1					
ANR	1640610	PostIncDecOperationExpression	i ++	133:32:2168:2170	1640109	2	True				
ANR	1640611	Identifier	i		1640109	0					
ANR	1640612	IncDec	++		1640109	1					
ANR	1640613	CompoundStatement		131:37:2091:2091	1640109	3					
ANR	1640614	ExpressionStatement	scale = 8 * ( 1 << ( AANSCALE_BITS + 11 ) ) / ff_aanscales [ i ]	135:16:2192:2249	1640109	0	True				
ANR	1640615	AssignmentExpression	scale = 8 * ( 1 << ( AANSCALE_BITS + 11 ) ) / ff_aanscales [ i ]		1640109	0		=			
ANR	1640616	Identifier	scale		1640109	0					
ANR	1640617	MultiplicativeExpression	8 * ( 1 << ( AANSCALE_BITS + 11 ) ) / ff_aanscales [ i ]		1640109	1		*			
ANR	1640618	PrimaryExpression	8		1640109	0					
ANR	1640619	MultiplicativeExpression	( 1 << ( AANSCALE_BITS + 11 ) ) / ff_aanscales [ i ]		1640109	1		/			
ANR	1640620	ShiftExpression	1 << ( AANSCALE_BITS + 11 )		1640109	0		<<			
ANR	1640621	PrimaryExpression	1		1640109	0					
ANR	1640622	AdditiveExpression	AANSCALE_BITS + 11		1640109	1		+			
ANR	1640623	Identifier	AANSCALE_BITS		1640109	0					
ANR	1640624	PrimaryExpression	11		1640109	1					
ANR	1640625	ArrayIndexing	ff_aanscales [ i ]		1640109	1					
ANR	1640626	Identifier	ff_aanscales		1640109	0					
ANR	1640627	Identifier	i		1640109	1					
ANR	1640628	ExpressionStatement	block [ i ] = ( block [ i ] * scale ) >> AANSCALE_BITS	137:16:2268:2314	1640109	1	True				
ANR	1640629	AssignmentExpression	block [ i ] = ( block [ i ] * scale ) >> AANSCALE_BITS		1640109	0		=			
ANR	1640630	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640631	Identifier	block		1640109	0					
ANR	1640632	Identifier	i		1640109	1					
ANR	1640633	ShiftExpression	( block [ i ] * scale ) >> AANSCALE_BITS		1640109	1		>>			
ANR	1640634	MultiplicativeExpression	block [ i ] * scale		1640109	0		*			
ANR	1640635	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640636	Identifier	block		1640109	0					
ANR	1640637	Identifier	i		1640109	1					
ANR	1640638	Identifier	scale		1640109	1					
ANR	1640639	Identifier	AANSCALE_BITS		1640109	1					
ANR	1640640	ExpressionStatement	dct -> ref ( block1 )	145:8:2353:2369	1640109	7	True				
ANR	1640641	CallExpression	dct -> ref ( block1 )		1640109	0					
ANR	1640642	Callee	dct -> ref		1640109	0					
ANR	1640643	PtrMemberAccess	dct -> ref		1640109	0					
ANR	1640644	Identifier	dct		1640109	0					
ANR	1640645	Identifier	ref		1640109	1					
ANR	1640646	ArgumentList	block1		1640109	1					
ANR	1640647	Argument	block1		1640109	0					
ANR	1640648	Identifier	block1		1640109	0					
ANR	1640649	ExpressionStatement	blockSumErr = 0	149:8:2382:2397	1640109	8	True				
ANR	1640650	AssignmentExpression	blockSumErr = 0		1640109	0		=			
ANR	1640651	Identifier	blockSumErr		1640109	0					
ANR	1640652	PrimaryExpression	0		1640109	1					
ANR	1640653	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	9					
ANR	1640654	ForInit	i = 0 ;	151:13:2413:2418	1640109	0	True				
ANR	1640655	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640656	Identifier	i		1640109	0					
ANR	1640657	PrimaryExpression	0		1640109	1					
ANR	1640658	Condition	i < 64	151:20:2420:2425	1640109	1	True				
ANR	1640659	RelationalExpression	i < 64		1640109	0		<			
ANR	1640660	Identifier	i		1640109	0					
ANR	1640661	PrimaryExpression	64		1640109	1					
ANR	1640662	PostIncDecOperationExpression	i ++	151:28:2428:2430	1640109	2	True				
ANR	1640663	Identifier	i		1640109	0					
ANR	1640664	IncDec	++		1640109	1					
ANR	1640665	CompoundStatement		149:33:2351:2351	1640109	3					
ANR	1640666	ExpressionStatement	v = abs ( block [ i ] - block1 [ i ] )	153:12:2448:2477	1640109	0	True				
ANR	1640667	AssignmentExpression	v = abs ( block [ i ] - block1 [ i ] )		1640109	0		=			
ANR	1640668	Identifier	v		1640109	0					
ANR	1640669	CallExpression	abs ( block [ i ] - block1 [ i ] )		1640109	1					
ANR	1640670	Callee	abs		1640109	0					
ANR	1640671	Identifier	abs		1640109	0					
ANR	1640672	ArgumentList	block [ i ] - block1 [ i ]		1640109	1					
ANR	1640673	Argument	block [ i ] - block1 [ i ]		1640109	0					
ANR	1640674	AdditiveExpression	block [ i ] - block1 [ i ]		1640109	0		-			
ANR	1640675	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640676	Identifier	block		1640109	0					
ANR	1640677	Identifier	i		1640109	1					
ANR	1640678	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640679	Identifier	block1		1640109	0					
ANR	1640680	Identifier	i		1640109	1					
ANR	1640681	IfStatement	if ( v > err_inf )		1640109	1					
ANR	1640682	Condition	v > err_inf	155:16:2496:2506	1640109	0	True				
ANR	1640683	RelationalExpression	v > err_inf		1640109	0		>			
ANR	1640684	Identifier	v		1640109	0					
ANR	1640685	Identifier	err_inf		1640109	1					
ANR	1640686	ExpressionStatement	err_inf = v	157:16:2526:2537	1640109	1	True				
ANR	1640687	AssignmentExpression	err_inf = v		1640109	0		=			
ANR	1640688	Identifier	err_inf		1640109	0					
ANR	1640689	Identifier	v		1640109	1					
ANR	1640690	ExpressionStatement	err2 += v * v	159:12:2552:2565	1640109	2	True				
ANR	1640691	AssignmentExpression	err2 += v * v		1640109	0		+=			
ANR	1640692	Identifier	err2		1640109	0					
ANR	1640693	MultiplicativeExpression	v * v		1640109	1		*			
ANR	1640694	Identifier	v		1640109	0					
ANR	1640695	Identifier	v		1640109	1					
ANR	1640696	ExpressionStatement	sysErr [ i ] += block [ i ] - block1 [ i ]	161:12:2580:2613	1640109	3	True				
ANR	1640697	AssignmentExpression	sysErr [ i ] += block [ i ] - block1 [ i ]		1640109	0		+=			
ANR	1640698	ArrayIndexing	sysErr [ i ]		1640109	0					
ANR	1640699	Identifier	sysErr		1640109	0					
ANR	1640700	Identifier	i		1640109	1					
ANR	1640701	AdditiveExpression	block [ i ] - block1 [ i ]		1640109	1		-			
ANR	1640702	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640703	Identifier	block		1640109	0					
ANR	1640704	Identifier	i		1640109	1					
ANR	1640705	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1640706	Identifier	block1		1640109	0					
ANR	1640707	Identifier	i		1640109	1					
ANR	1640708	ExpressionStatement	blockSumErr += v	163:12:2628:2644	1640109	4	True				
ANR	1640709	AssignmentExpression	blockSumErr += v		1640109	0		+=			
ANR	1640710	Identifier	blockSumErr		1640109	0					
ANR	1640711	Identifier	v		1640109	1					
ANR	1640712	IfStatement	if ( abs ( block [ i ] ) > maxout )		1640109	5					
ANR	1640713	Condition	abs ( block [ i ] ) > maxout	165:16:2663:2684	1640109	0	True				
ANR	1640714	RelationalExpression	abs ( block [ i ] ) > maxout		1640109	0		>			
ANR	1640715	CallExpression	abs ( block [ i ] )		1640109	0					
ANR	1640716	Callee	abs		1640109	0					
ANR	1640717	Identifier	abs		1640109	0					
ANR	1640718	ArgumentList	block [ i ]		1640109	1					
ANR	1640719	Argument	block [ i ]		1640109	0					
ANR	1640720	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640721	Identifier	block		1640109	0					
ANR	1640722	Identifier	i		1640109	1					
ANR	1640723	Identifier	maxout		1640109	1					
ANR	1640724	ExpressionStatement	maxout = abs ( block [ i ] )	167:16:2704:2726	1640109	1	True				
ANR	1640725	AssignmentExpression	maxout = abs ( block [ i ] )		1640109	0		=			
ANR	1640726	Identifier	maxout		1640109	0					
ANR	1640727	CallExpression	abs ( block [ i ] )		1640109	1					
ANR	1640728	Callee	abs		1640109	0					
ANR	1640729	Identifier	abs		1640109	0					
ANR	1640730	ArgumentList	block [ i ]		1640109	1					
ANR	1640731	Argument	block [ i ]		1640109	0					
ANR	1640732	ArrayIndexing	block [ i ]		1640109	0					
ANR	1640733	Identifier	block		1640109	0					
ANR	1640734	Identifier	i		1640109	1					
ANR	1640735	IfStatement	if ( blockSumErrMax < blockSumErr )		1640109	10					
ANR	1640736	Condition	blockSumErrMax < blockSumErr	171:12:2752:2779	1640109	0	True				
ANR	1640737	RelationalExpression	blockSumErrMax < blockSumErr		1640109	0		<			
ANR	1640738	Identifier	blockSumErrMax		1640109	0					
ANR	1640739	Identifier	blockSumErr		1640109	1					
ANR	1640740	ExpressionStatement	blockSumErrMax = blockSumErr	173:12:2795:2823	1640109	1	True				
ANR	1640741	AssignmentExpression	blockSumErrMax = blockSumErr		1640109	0		=			
ANR	1640742	Identifier	blockSumErrMax		1640109	0					
ANR	1640743	Identifier	blockSumErr		1640109	1					
ANR	1640744	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	12					
ANR	1640745	ForInit	i = 0 ;	177:9:2842:2847	1640109	0	True				
ANR	1640746	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640747	Identifier	i		1640109	0					
ANR	1640748	PrimaryExpression	0		1640109	1					
ANR	1640749	Condition	i < 64	177:16:2849:2854	1640109	1	True				
ANR	1640750	RelationalExpression	i < 64		1640109	0		<			
ANR	1640751	Identifier	i		1640109	0					
ANR	1640752	PrimaryExpression	64		1640109	1					
ANR	1640753	PostIncDecOperationExpression	i ++	177:24:2857:2859	1640109	2	True				
ANR	1640754	Identifier	i		1640109	0					
ANR	1640755	IncDec	++		1640109	1					
ANR	1640756	ExpressionStatement	"sysErrMax = FFMAX ( sysErrMax , FFABS ( sysErr [ i ] ) )"	179:8:2871:2917	1640109	3	True				
ANR	1640757	AssignmentExpression	"sysErrMax = FFMAX ( sysErrMax , FFABS ( sysErr [ i ] ) )"		1640109	0		=			
ANR	1640758	Identifier	sysErrMax		1640109	0					
ANR	1640759	CallExpression	"FFMAX ( sysErrMax , FFABS ( sysErr [ i ] ) )"		1640109	1					
ANR	1640760	Callee	FFMAX		1640109	0					
ANR	1640761	Identifier	FFMAX		1640109	0					
ANR	1640762	ArgumentList	sysErrMax		1640109	1					
ANR	1640763	Argument	sysErrMax		1640109	0					
ANR	1640764	Identifier	sysErrMax		1640109	0					
ANR	1640765	Argument	FFABS ( sysErr [ i ] )		1640109	1					
ANR	1640766	CallExpression	FFABS ( sysErr [ i ] )		1640109	0					
ANR	1640767	Callee	FFABS		1640109	0					
ANR	1640768	Identifier	FFABS		1640109	0					
ANR	1640769	ArgumentList	sysErr [ i ]		1640109	1					
ANR	1640770	Argument	sysErr [ i ]		1640109	0					
ANR	1640771	ArrayIndexing	sysErr [ i ]		1640109	0					
ANR	1640772	Identifier	sysErr		1640109	0					
ANR	1640773	Identifier	i		1640109	1					
ANR	1640774	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	13					
ANR	1640775	ForInit	i = 0 ;	183:9:2931:2936	1640109	0	True				
ANR	1640776	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640777	Identifier	i		1640109	0					
ANR	1640778	PrimaryExpression	0		1640109	1					
ANR	1640779	Condition	i < 64	183:16:2938:2943	1640109	1	True				
ANR	1640780	RelationalExpression	i < 64		1640109	0		<			
ANR	1640781	Identifier	i		1640109	0					
ANR	1640782	PrimaryExpression	64		1640109	1					
ANR	1640783	PostIncDecOperationExpression	i ++	183:24:2946:2948	1640109	2	True				
ANR	1640784	Identifier	i		1640109	0					
ANR	1640785	IncDec	++		1640109	1					
ANR	1640786	CompoundStatement		181:29:2869:2869	1640109	3					
ANR	1640787	IfStatement	if ( i % 8 == 0 )		1640109	0					
ANR	1640788	Condition	i % 8 == 0	185:12:2966:2975	1640109	0	True				
ANR	1640789	EqualityExpression	i % 8 == 0		1640109	0		==			
ANR	1640790	MultiplicativeExpression	i % 8		1640109	0		%			
ANR	1640791	Identifier	i		1640109	0					
ANR	1640792	PrimaryExpression	8		1640109	1					
ANR	1640793	PrimaryExpression	0		1640109	1					
ANR	1640794	ExpressionStatement	"printf ( ""\\n"" )"	187:12:2991:3003	1640109	1	True				
ANR	1640795	CallExpression	"printf ( ""\\n"" )"		1640109	0					
ANR	1640796	Callee	printf		1640109	0					
ANR	1640797	Identifier	printf		1640109	0					
ANR	1640798	ArgumentList	"""\\n"""		1640109	1					
ANR	1640799	Argument	"""\\n"""		1640109	0					
ANR	1640800	PrimaryExpression	"""\\n"""		1640109	0					
ANR	1640801	ExpressionStatement	"printf ( ""%7d "" , ( int ) sysErr [ i ] )"	189:8:3014:3045	1640109	1	True				
ANR	1640802	CallExpression	"printf ( ""%7d "" , ( int ) sysErr [ i ] )"		1640109	0					
ANR	1640803	Callee	printf		1640109	0					
ANR	1640804	Identifier	printf		1640109	0					
ANR	1640805	ArgumentList	"""%7d """		1640109	1					
ANR	1640806	Argument	"""%7d """		1640109	0					
ANR	1640807	PrimaryExpression	"""%7d """		1640109	0					
ANR	1640808	Argument	( int ) sysErr [ i ]		1640109	1					
ANR	1640809	CastExpression	( int ) sysErr [ i ]		1640109	0					
ANR	1640810	CastTarget	int		1640109	0					
ANR	1640811	ArrayIndexing	sysErr [ i ]		1640109	1					
ANR	1640812	Identifier	sysErr		1640109	0					
ANR	1640813	Identifier	i		1640109	1					
ANR	1640814	ExpressionStatement	"printf ( ""\\n"" )"	193:4:3059:3071	1640109	14	True				
ANR	1640815	CallExpression	"printf ( ""\\n"" )"		1640109	0					
ANR	1640816	Callee	printf		1640109	0					
ANR	1640817	Identifier	printf		1640109	0					
ANR	1640818	ArgumentList	"""\\n"""		1640109	1					
ANR	1640819	Argument	"""\\n"""		1640109	0					
ANR	1640820	PrimaryExpression	"""\\n"""		1640109	0					
ANR	1640821	ExpressionStatement	"printf ( ""%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\\n"" , is_idct ? ""IDCT"" : ""DCT"" , dct -> name , err_inf , ( double ) err2 / NB_ITS / 64.0 , ( double ) sysErrMax / NB_ITS , maxout , blockSumErrMax )"	197:4:3080:3324	1640109	15	True				
ANR	1640822	CallExpression	"printf ( ""%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\\n"" , is_idct ? ""IDCT"" : ""DCT"" , dct -> name , err_inf , ( double ) err2 / NB_ITS / 64.0 , ( double ) sysErrMax / NB_ITS , maxout , blockSumErrMax )"		1640109	0					
ANR	1640823	Callee	printf		1640109	0					
ANR	1640824	Identifier	printf		1640109	0					
ANR	1640825	ArgumentList	"""%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\\n"""		1640109	1					
ANR	1640826	Argument	"""%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\\n"""		1640109	0					
ANR	1640827	PrimaryExpression	"""%s %s: err_inf=%d err2=%0.8f syserr=%0.8f maxout=%d blockSumErr=%d\\n"""		1640109	0					
ANR	1640828	Argument	"is_idct ? ""IDCT"" : ""DCT"""		1640109	1					
ANR	1640829	ConditionalExpression	"is_idct ? ""IDCT"" : ""DCT"""		1640109	0					
ANR	1640830	Condition	is_idct		1640109	0					
ANR	1640831	Identifier	is_idct		1640109	0					
ANR	1640832	PrimaryExpression	"""IDCT"""		1640109	1					
ANR	1640833	PrimaryExpression	"""DCT"""		1640109	2					
ANR	1640834	Argument	dct -> name		1640109	2					
ANR	1640835	PtrMemberAccess	dct -> name		1640109	0					
ANR	1640836	Identifier	dct		1640109	0					
ANR	1640837	Identifier	name		1640109	1					
ANR	1640838	Argument	err_inf		1640109	3					
ANR	1640839	Identifier	err_inf		1640109	0					
ANR	1640840	Argument	( double ) err2 / NB_ITS / 64.0		1640109	4					
ANR	1640841	MultiplicativeExpression	( double ) err2 / NB_ITS / 64.0		1640109	0		/			
ANR	1640842	CastExpression	( double ) err2		1640109	0					
ANR	1640843	CastTarget	double		1640109	0					
ANR	1640844	Identifier	err2		1640109	1					
ANR	1640845	MultiplicativeExpression	NB_ITS / 64.0		1640109	1		/			
ANR	1640846	Identifier	NB_ITS		1640109	0					
ANR	1640847	PrimaryExpression	64.0		1640109	1					
ANR	1640848	Argument	( double ) sysErrMax / NB_ITS		1640109	5					
ANR	1640849	MultiplicativeExpression	( double ) sysErrMax / NB_ITS		1640109	0		/			
ANR	1640850	CastExpression	( double ) sysErrMax		1640109	0					
ANR	1640851	CastTarget	double		1640109	0					
ANR	1640852	Identifier	sysErrMax		1640109	1					
ANR	1640853	Identifier	NB_ITS		1640109	1					
ANR	1640854	Argument	maxout		1640109	6					
ANR	1640855	Identifier	maxout		1640109	0					
ANR	1640856	Argument	blockSumErrMax		1640109	7					
ANR	1640857	Identifier	blockSumErrMax		1640109	0					
ANR	1640858	IfStatement	if ( ! speed )		1640109	16					
ANR	1640859	Condition	! speed	207:8:3337:3342	1640109	0	True				
ANR	1640860	UnaryOperationExpression	! speed		1640109	0					
ANR	1640861	UnaryOperator	!		1640109	0					
ANR	1640862	Identifier	speed		1640109	1					
ANR	1640863	ReturnStatement	return ;	209:8:3354:3360	1640109	1	True				
ANR	1640864	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	17					
ANR	1640865	ForInit	i = 0 ;	215:9:3396:3401	1640109	0	True				
ANR	1640866	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640867	Identifier	i		1640109	0					
ANR	1640868	PrimaryExpression	0		1640109	1					
ANR	1640869	Condition	i < 64	215:16:3403:3408	1640109	1	True				
ANR	1640870	RelationalExpression	i < 64		1640109	0		<			
ANR	1640871	Identifier	i		1640109	0					
ANR	1640872	PrimaryExpression	64		1640109	1					
ANR	1640873	PostIncDecOperationExpression	i ++	215:24:3411:3413	1640109	2	True				
ANR	1640874	Identifier	i		1640109	0					
ANR	1640875	IncDec	++		1640109	1					
ANR	1640876	ExpressionStatement	block1 [ i ] = 0	217:8:3425:3438	1640109	3	True				
ANR	1640877	AssignmentExpression	block1 [ i ] = 0		1640109	0		=			
ANR	1640878	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640879	Identifier	block1		1640109	0					
ANR	1640880	Identifier	i		1640109	1					
ANR	1640881	PrimaryExpression	0		1640109	1					
ANR	1640882	SwitchStatement	switch ( test )		1640109	18					
ANR	1640883	Condition	test	221:12:3455:3458	1640109	0	True				
ANR	1640884	Identifier	test		1640109	0					
ANR	1640885	CompoundStatement		219:18:3379:3379	1640109	1					
ANR	1640886	Label	case 0 :	223:4:3468:3474	1640109	0	True				
ANR	1640887	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	1					
ANR	1640888	ForInit	i = 0 ;	225:13:3490:3495	1640109	0	True				
ANR	1640889	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640890	Identifier	i		1640109	0					
ANR	1640891	PrimaryExpression	0		1640109	1					
ANR	1640892	Condition	i < 64	225:20:3497:3502	1640109	1	True				
ANR	1640893	RelationalExpression	i < 64		1640109	0		<			
ANR	1640894	Identifier	i		1640109	0					
ANR	1640895	PrimaryExpression	64		1640109	1					
ANR	1640896	PostIncDecOperationExpression	i ++	225:28:3505:3507	1640109	2	True				
ANR	1640897	Identifier	i		1640109	0					
ANR	1640898	IncDec	++		1640109	1					
ANR	1640899	ExpressionStatement	block1 [ i ] = av_lfg_get ( & prng ) % 512 - 256	227:12:3523:3564	1640109	3	True				
ANR	1640900	AssignmentExpression	block1 [ i ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1640901	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640902	Identifier	block1		1640109	0					
ANR	1640903	Identifier	i		1640109	1					
ANR	1640904	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1640905	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640906	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640907	Callee	av_lfg_get		1640109	0					
ANR	1640908	Identifier	av_lfg_get		1640109	0					
ANR	1640909	ArgumentList	& prng		1640109	1					
ANR	1640910	Argument	& prng		1640109	0					
ANR	1640911	UnaryOperationExpression	& prng		1640109	0					
ANR	1640912	UnaryOperator	&		1640109	0					
ANR	1640913	Identifier	prng		1640109	1					
ANR	1640914	PrimaryExpression	512		1640109	1					
ANR	1640915	PrimaryExpression	256		1640109	1					
ANR	1640916	IfStatement	if ( is_idct )		1640109	2					
ANR	1640917	Condition	is_idct	229:12:3579:3585	1640109	0	True				
ANR	1640918	Identifier	is_idct		1640109	0					
ANR	1640919	CompoundStatement		227:21:3506:3506	1640109	1					
ANR	1640920	ExpressionStatement	ff_ref_fdct ( block1 )	231:12:3603:3622	1640109	0	True				
ANR	1640921	CallExpression	ff_ref_fdct ( block1 )		1640109	0					
ANR	1640922	Callee	ff_ref_fdct		1640109	0					
ANR	1640923	Identifier	ff_ref_fdct		1640109	0					
ANR	1640924	ArgumentList	block1		1640109	1					
ANR	1640925	Argument	block1		1640109	0					
ANR	1640926	Identifier	block1		1640109	0					
ANR	1640927	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	1					
ANR	1640928	ForInit	i = 0 ;	233:17:3642:3647	1640109	0	True				
ANR	1640929	AssignmentExpression	i = 0		1640109	0		=			
ANR	1640930	Identifier	i		1640109	0					
ANR	1640931	PrimaryExpression	0		1640109	1					
ANR	1640932	Condition	i < 64	233:24:3649:3654	1640109	1	True				
ANR	1640933	RelationalExpression	i < 64		1640109	0		<			
ANR	1640934	Identifier	i		1640109	0					
ANR	1640935	PrimaryExpression	64		1640109	1					
ANR	1640936	PostIncDecOperationExpression	i ++	233:32:3657:3659	1640109	2	True				
ANR	1640937	Identifier	i		1640109	0					
ANR	1640938	IncDec	++		1640109	1					
ANR	1640939	ExpressionStatement	block1 [ i ] >>= 3	235:16:3679:3694	1640109	3	True				
ANR	1640940	AssignmentExpression	block1 [ i ] >>= 3		1640109	0		>>=			
ANR	1640941	ArrayIndexing	block1 [ i ]		1640109	0					
ANR	1640942	Identifier	block1		1640109	0					
ANR	1640943	Identifier	i		1640109	1					
ANR	1640944	PrimaryExpression	3		1640109	1					
ANR	1640945	BreakStatement	break ;	239:8:3716:3721	1640109	3	True				
ANR	1640946	Label	case 1 :	241:4:3728:3734	1640109	4	True				
ANR	1640947	Label	case 2 :	243:4:3741:3747	1640109	5	True				
ANR	1640948	ExpressionStatement	block1 [ 0 ] = av_lfg_get ( & prng ) % 512 - 256	245:8:3758:3799	1640109	6	True				
ANR	1640949	AssignmentExpression	block1 [ 0 ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1640950	ArrayIndexing	block1 [ 0 ]		1640109	0					
ANR	1640951	Identifier	block1		1640109	0					
ANR	1640952	PrimaryExpression	0		1640109	1					
ANR	1640953	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1640954	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640955	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640956	Callee	av_lfg_get		1640109	0					
ANR	1640957	Identifier	av_lfg_get		1640109	0					
ANR	1640958	ArgumentList	& prng		1640109	1					
ANR	1640959	Argument	& prng		1640109	0					
ANR	1640960	UnaryOperationExpression	& prng		1640109	0					
ANR	1640961	UnaryOperator	&		1640109	0					
ANR	1640962	Identifier	prng		1640109	1					
ANR	1640963	PrimaryExpression	512		1640109	1					
ANR	1640964	PrimaryExpression	256		1640109	1					
ANR	1640965	ExpressionStatement	block1 [ 1 ] = av_lfg_get ( & prng ) % 512 - 256	247:8:3810:3851	1640109	7	True				
ANR	1640966	AssignmentExpression	block1 [ 1 ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1640967	ArrayIndexing	block1 [ 1 ]		1640109	0					
ANR	1640968	Identifier	block1		1640109	0					
ANR	1640969	PrimaryExpression	1		1640109	1					
ANR	1640970	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1640971	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640972	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640973	Callee	av_lfg_get		1640109	0					
ANR	1640974	Identifier	av_lfg_get		1640109	0					
ANR	1640975	ArgumentList	& prng		1640109	1					
ANR	1640976	Argument	& prng		1640109	0					
ANR	1640977	UnaryOperationExpression	& prng		1640109	0					
ANR	1640978	UnaryOperator	&		1640109	0					
ANR	1640979	Identifier	prng		1640109	1					
ANR	1640980	PrimaryExpression	512		1640109	1					
ANR	1640981	PrimaryExpression	256		1640109	1					
ANR	1640982	ExpressionStatement	block1 [ 2 ] = av_lfg_get ( & prng ) % 512 - 256	249:8:3862:3903	1640109	8	True				
ANR	1640983	AssignmentExpression	block1 [ 2 ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1640984	ArrayIndexing	block1 [ 2 ]		1640109	0					
ANR	1640985	Identifier	block1		1640109	0					
ANR	1640986	PrimaryExpression	2		1640109	1					
ANR	1640987	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1640988	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1640989	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1640990	Callee	av_lfg_get		1640109	0					
ANR	1640991	Identifier	av_lfg_get		1640109	0					
ANR	1640992	ArgumentList	& prng		1640109	1					
ANR	1640993	Argument	& prng		1640109	0					
ANR	1640994	UnaryOperationExpression	& prng		1640109	0					
ANR	1640995	UnaryOperator	&		1640109	0					
ANR	1640996	Identifier	prng		1640109	1					
ANR	1640997	PrimaryExpression	512		1640109	1					
ANR	1640998	PrimaryExpression	256		1640109	1					
ANR	1640999	ExpressionStatement	block1 [ 3 ] = av_lfg_get ( & prng ) % 512 - 256	251:8:3914:3955	1640109	9	True				
ANR	1641000	AssignmentExpression	block1 [ 3 ] = av_lfg_get ( & prng ) % 512 - 256		1640109	0		=			
ANR	1641001	ArrayIndexing	block1 [ 3 ]		1640109	0					
ANR	1641002	Identifier	block1		1640109	0					
ANR	1641003	PrimaryExpression	3		1640109	1					
ANR	1641004	AdditiveExpression	av_lfg_get ( & prng ) % 512 - 256		1640109	1		-			
ANR	1641005	MultiplicativeExpression	av_lfg_get ( & prng ) % 512		1640109	0		%			
ANR	1641006	CallExpression	av_lfg_get ( & prng )		1640109	0					
ANR	1641007	Callee	av_lfg_get		1640109	0					
ANR	1641008	Identifier	av_lfg_get		1640109	0					
ANR	1641009	ArgumentList	& prng		1640109	1					
ANR	1641010	Argument	& prng		1640109	0					
ANR	1641011	UnaryOperationExpression	& prng		1640109	0					
ANR	1641012	UnaryOperator	&		1640109	0					
ANR	1641013	Identifier	prng		1640109	1					
ANR	1641014	PrimaryExpression	512		1640109	1					
ANR	1641015	PrimaryExpression	256		1640109	1					
ANR	1641016	BreakStatement	break ;	253:8:3966:3971	1640109	10	True				
ANR	1641017	IfStatement	if ( dct -> format == MMX_PERM )		1640109	19					
ANR	1641018	Condition	dct -> format == MMX_PERM	259:8:3991:4013	1640109	0	True				
ANR	1641019	EqualityExpression	dct -> format == MMX_PERM		1640109	0		==			
ANR	1641020	PtrMemberAccess	dct -> format		1640109	0					
ANR	1641021	Identifier	dct		1640109	0					
ANR	1641022	Identifier	format		1640109	1					
ANR	1641023	Identifier	MMX_PERM		1640109	1					
ANR	1641024	CompoundStatement		257:33:3934:3934	1640109	1					
ANR	1641025	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1641026	ForInit	i = 0 ;	261:13:4032:4037	1640109	0	True				
ANR	1641027	AssignmentExpression	i = 0		1640109	0		=			
ANR	1641028	Identifier	i		1640109	0					
ANR	1641029	PrimaryExpression	0		1640109	1					
ANR	1641030	Condition	i < 64	261:20:4039:4044	1640109	1	True				
ANR	1641031	RelationalExpression	i < 64		1640109	0		<			
ANR	1641032	Identifier	i		1640109	0					
ANR	1641033	PrimaryExpression	64		1640109	1					
ANR	1641034	PostIncDecOperationExpression	i ++	261:28:4047:4049	1640109	2	True				
ANR	1641035	Identifier	i		1640109	0					
ANR	1641036	IncDec	++		1640109	1					
ANR	1641037	ExpressionStatement	block [ idct_mmx_perm [ i ] ] = block1 [ i ]	263:12:4065:4100	1640109	3	True				
ANR	1641038	AssignmentExpression	block [ idct_mmx_perm [ i ] ] = block1 [ i ]		1640109	0		=			
ANR	1641039	ArrayIndexing	block [ idct_mmx_perm [ i ] ]		1640109	0					
ANR	1641040	Identifier	block		1640109	0					
ANR	1641041	ArrayIndexing	idct_mmx_perm [ i ]		1640109	1					
ANR	1641042	Identifier	idct_mmx_perm		1640109	0					
ANR	1641043	Identifier	i		1640109	1					
ANR	1641044	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1641045	Identifier	block1		1640109	0					
ANR	1641046	Identifier	i		1640109	1					
ANR	1641047	ElseStatement	else		1640109	0					
ANR	1641048	IfStatement	if ( dct -> format == MMX_SIMPLE_PERM )		1640109	0					
ANR	1641049	Condition	dct -> format == MMX_SIMPLE_PERM	265:15:4118:4147	1640109	0	True				
ANR	1641050	EqualityExpression	dct -> format == MMX_SIMPLE_PERM		1640109	0		==			
ANR	1641051	PtrMemberAccess	dct -> format		1640109	0					
ANR	1641052	Identifier	dct		1640109	0					
ANR	1641053	Identifier	format		1640109	1					
ANR	1641054	Identifier	MMX_SIMPLE_PERM		1640109	1					
ANR	1641055	CompoundStatement		263:47:4068:4068	1640109	1					
ANR	1641056	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1641057	ForInit	i = 0 ;	267:13:4166:4171	1640109	0	True				
ANR	1641058	AssignmentExpression	i = 0		1640109	0		=			
ANR	1641059	Identifier	i		1640109	0					
ANR	1641060	PrimaryExpression	0		1640109	1					
ANR	1641061	Condition	i < 64	267:20:4173:4178	1640109	1	True				
ANR	1641062	RelationalExpression	i < 64		1640109	0		<			
ANR	1641063	Identifier	i		1640109	0					
ANR	1641064	PrimaryExpression	64		1640109	1					
ANR	1641065	PostIncDecOperationExpression	i ++	267:28:4181:4183	1640109	2	True				
ANR	1641066	Identifier	i		1640109	0					
ANR	1641067	IncDec	++		1640109	1					
ANR	1641068	ExpressionStatement	block [ idct_simple_mmx_perm [ i ] ] = block1 [ i ]	269:12:4199:4241	1640109	3	True				
ANR	1641069	AssignmentExpression	block [ idct_simple_mmx_perm [ i ] ] = block1 [ i ]		1640109	0		=			
ANR	1641070	ArrayIndexing	block [ idct_simple_mmx_perm [ i ] ]		1640109	0					
ANR	1641071	Identifier	block		1640109	0					
ANR	1641072	ArrayIndexing	idct_simple_mmx_perm [ i ]		1640109	1					
ANR	1641073	Identifier	idct_simple_mmx_perm		1640109	0					
ANR	1641074	Identifier	i		1640109	1					
ANR	1641075	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1641076	Identifier	block1		1640109	0					
ANR	1641077	Identifier	i		1640109	1					
ANR	1641078	ElseStatement	else		1640109	0					
ANR	1641079	CompoundStatement		269:11:4173:4173	1640109	0					
ANR	1641080	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1641081	ForInit	i = 0 ;	273:13:4271:4276	1640109	0	True				
ANR	1641082	AssignmentExpression	i = 0		1640109	0		=			
ANR	1641083	Identifier	i		1640109	0					
ANR	1641084	PrimaryExpression	0		1640109	1					
ANR	1641085	Condition	i < 64	273:20:4278:4283	1640109	1	True				
ANR	1641086	RelationalExpression	i < 64		1640109	0		<			
ANR	1641087	Identifier	i		1640109	0					
ANR	1641088	PrimaryExpression	64		1640109	1					
ANR	1641089	PostIncDecOperationExpression	i ++	273:28:4286:4288	1640109	2	True				
ANR	1641090	Identifier	i		1640109	0					
ANR	1641091	IncDec	++		1640109	1					
ANR	1641092	ExpressionStatement	block [ i ] = block1 [ i ]	275:12:4304:4324	1640109	3	True				
ANR	1641093	AssignmentExpression	block [ i ] = block1 [ i ]		1640109	0		=			
ANR	1641094	ArrayIndexing	block [ i ]		1640109	0					
ANR	1641095	Identifier	block		1640109	0					
ANR	1641096	Identifier	i		1640109	1					
ANR	1641097	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1641098	Identifier	block1		1640109	0					
ANR	1641099	Identifier	i		1640109	1					
ANR	1641100	ExpressionStatement	ti = gettime ( )	281:4:4340:4354	1640109	20	True				
ANR	1641101	AssignmentExpression	ti = gettime ( )		1640109	0		=			
ANR	1641102	Identifier	ti		1640109	0					
ANR	1641103	CallExpression	gettime ( )		1640109	1					
ANR	1641104	Callee	gettime		1640109	0					
ANR	1641105	Identifier	gettime		1640109	0					
ANR	1641106	ArgumentList			1640109	1					
ANR	1641107	ExpressionStatement	it1 = 0	283:4:4361:4368	1640109	21	True				
ANR	1641108	AssignmentExpression	it1 = 0		1640109	0		=			
ANR	1641109	Identifier	it1		1640109	0					
ANR	1641110	PrimaryExpression	0		1640109	1					
ANR	1641111	DoStatement	do		1640109	22					
ANR	1641112	CompoundStatement		283:7:4296:4296	1640109	0					
ANR	1641113	ForStatement	for ( it = 0 ; it < NB_ITS_SPEED ; it ++ )		1640109	0					
ANR	1641114	ForInit	it = 0 ;	287:13:4394:4400	1640109	0	True				
ANR	1641115	AssignmentExpression	it = 0		1640109	0		=			
ANR	1641116	Identifier	it		1640109	0					
ANR	1641117	PrimaryExpression	0		1640109	1					
ANR	1641118	Condition	it < NB_ITS_SPEED	287:21:4402:4418	1640109	1	True				
ANR	1641119	RelationalExpression	it < NB_ITS_SPEED		1640109	0		<			
ANR	1641120	Identifier	it		1640109	0					
ANR	1641121	Identifier	NB_ITS_SPEED		1640109	1					
ANR	1641122	PostIncDecOperationExpression	it ++	287:40:4421:4424	1640109	2	True				
ANR	1641123	Identifier	it		1640109	0					
ANR	1641124	IncDec	++		1640109	1					
ANR	1641125	CompoundStatement		285:46:4345:4345	1640109	3					
ANR	1641126	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1640109	0					
ANR	1641127	ForInit	i = 0 ;	289:17:4447:4452	1640109	0	True				
ANR	1641128	AssignmentExpression	i = 0		1640109	0		=			
ANR	1641129	Identifier	i		1640109	0					
ANR	1641130	PrimaryExpression	0		1640109	1					
ANR	1641131	Condition	i < 64	289:24:4454:4459	1640109	1	True				
ANR	1641132	RelationalExpression	i < 64		1640109	0		<			
ANR	1641133	Identifier	i		1640109	0					
ANR	1641134	PrimaryExpression	64		1640109	1					
ANR	1641135	PostIncDecOperationExpression	i ++	289:32:4462:4464	1640109	2	True				
ANR	1641136	Identifier	i		1640109	0					
ANR	1641137	IncDec	++		1640109	1					
ANR	1641138	ExpressionStatement	block [ i ] = block1 [ i ]	291:16:4484:4504	1640109	3	True				
ANR	1641139	AssignmentExpression	block [ i ] = block1 [ i ]		1640109	0		=			
ANR	1641140	ArrayIndexing	block [ i ]		1640109	0					
ANR	1641141	Identifier	block		1640109	0					
ANR	1641142	Identifier	i		1640109	1					
ANR	1641143	ArrayIndexing	block1 [ i ]		1640109	1					
ANR	1641144	Identifier	block1		1640109	0					
ANR	1641145	Identifier	i		1640109	1					
ANR	1641146	ExpressionStatement	dct -> func ( block )	293:12:4519:4535	1640109	1	True				
ANR	1641147	CallExpression	dct -> func ( block )		1640109	0					
ANR	1641148	Callee	dct -> func		1640109	0					
ANR	1641149	PtrMemberAccess	dct -> func		1640109	0					
ANR	1641150	Identifier	dct		1640109	0					
ANR	1641151	Identifier	func		1640109	1					
ANR	1641152	ArgumentList	block		1640109	1					
ANR	1641153	Argument	block		1640109	0					
ANR	1641154	Identifier	block		1640109	0					
ANR	1641155	ExpressionStatement	it1 += NB_ITS_SPEED	297:8:4557:4576	1640109	1	True				
ANR	1641156	AssignmentExpression	it1 += NB_ITS_SPEED		1640109	0		+=			
ANR	1641157	Identifier	it1		1640109	0					
ANR	1641158	Identifier	NB_ITS_SPEED		1640109	1					
ANR	1641159	ExpressionStatement	ti1 = gettime ( ) - ti	299:8:4587:4607	1640109	2	True				
ANR	1641160	AssignmentExpression	ti1 = gettime ( ) - ti		1640109	0		=			
ANR	1641161	Identifier	ti1		1640109	0					
ANR	1641162	AdditiveExpression	gettime ( ) - ti		1640109	1		-			
ANR	1641163	CallExpression	gettime ( )		1640109	0					
ANR	1641164	Callee	gettime		1640109	0					
ANR	1641165	Identifier	gettime		1640109	0					
ANR	1641166	ArgumentList			1640109	1					
ANR	1641167	Identifier	ti		1640109	1					
ANR	1641168	Condition	ti1 < 1000000	301:13:4623:4635	1640109	1	True				
ANR	1641169	RelationalExpression	ti1 < 1000000		1640109	0		<			
ANR	1641170	Identifier	ti1		1640109	0					
ANR	1641171	PrimaryExpression	1000000		1640109	1					
ANR	1641172	ExpressionStatement	mmx_emms ( )	303:4:4644:4654	1640109	23	True				
ANR	1641173	CallExpression	mmx_emms ( )		1640109	0					
ANR	1641174	Callee	mmx_emms		1640109	0					
ANR	1641175	Identifier	mmx_emms		1640109	0					
ANR	1641176	ArgumentList			1640109	1					
ANR	1641177	ExpressionStatement	"printf ( ""%s %s: %0.1f kdct/s\\n"" , is_idct ? ""IDCT"" : ""DCT"" , dct -> name , ( double ) it1 * 1000.0 / ( double ) ti1 )"	307:4:4663:4781	1640109	24	True				
ANR	1641178	CallExpression	"printf ( ""%s %s: %0.1f kdct/s\\n"" , is_idct ? ""IDCT"" : ""DCT"" , dct -> name , ( double ) it1 * 1000.0 / ( double ) ti1 )"		1640109	0					
ANR	1641179	Callee	printf		1640109	0					
ANR	1641180	Identifier	printf		1640109	0					
ANR	1641181	ArgumentList	"""%s %s: %0.1f kdct/s\\n"""		1640109	1					
ANR	1641182	Argument	"""%s %s: %0.1f kdct/s\\n"""		1640109	0					
ANR	1641183	PrimaryExpression	"""%s %s: %0.1f kdct/s\\n"""		1640109	0					
ANR	1641184	Argument	"is_idct ? ""IDCT"" : ""DCT"""		1640109	1					
ANR	1641185	ConditionalExpression	"is_idct ? ""IDCT"" : ""DCT"""		1640109	0					
ANR	1641186	Condition	is_idct		1640109	0					
ANR	1641187	Identifier	is_idct		1640109	0					
ANR	1641188	PrimaryExpression	"""IDCT"""		1640109	1					
ANR	1641189	PrimaryExpression	"""DCT"""		1640109	2					
ANR	1641190	Argument	dct -> name		1640109	2					
ANR	1641191	PtrMemberAccess	dct -> name		1640109	0					
ANR	1641192	Identifier	dct		1640109	0					
ANR	1641193	Identifier	name		1640109	1					
ANR	1641194	Argument	( double ) it1 * 1000.0 / ( double ) ti1		1640109	3					
ANR	1641195	MultiplicativeExpression	( double ) it1 * 1000.0 / ( double ) ti1		1640109	0		*			
ANR	1641196	CastExpression	( double ) it1		1640109	0					
ANR	1641197	CastTarget	double		1640109	0					
ANR	1641198	Identifier	it1		1640109	1					
ANR	1641199	MultiplicativeExpression	1000.0 / ( double ) ti1		1640109	1		/			
ANR	1641200	PrimaryExpression	1000.0		1640109	0					
ANR	1641201	CastExpression	( double ) ti1		1640109	1					
ANR	1641202	CastTarget	double		1640109	0					
ANR	1641203	Identifier	ti1		1640109	1					
ANR	1641204	ReturnType	static void		1640109	1					
ANR	1641205	Identifier	dct_error		1640109	2					
ANR	1641206	ParameterList	"const struct algo * dct , int test , int is_idct , int speed"		1640109	3					
ANR	1641207	Parameter	const struct algo * dct	1:22:22:43	1640109	0	True				
ANR	1641208	ParameterType	const struct algo *		1640109	0					
ANR	1641209	Identifier	dct		1640109	1					
ANR	1641210	Parameter	int test	1:46:46:53	1640109	1	True				
ANR	1641211	ParameterType	int		1640109	0					
ANR	1641212	Identifier	test		1640109	1					
ANR	1641213	Parameter	int is_idct	1:56:56:66	1640109	2	True				
ANR	1641214	ParameterType	int		1640109	0					
ANR	1641215	Identifier	is_idct		1640109	1					
ANR	1641216	Parameter	int speed	1:69:69:77	1640109	3	True				
ANR	1641217	ParameterType	int		1640109	0					
ANR	1641218	Identifier	speed		1640109	1					
ANR	1641219	CFGEntryNode	ENTRY		1640109		True				
ANR	1641220	CFGExitNode	EXIT		1640109		True				
ANR	1641221	Symbol	* dct		1640109						
ANR	1641222	Symbol	* idct_mmx_perm		1640109						
ANR	1641223	Symbol	* block_org		1640109						
ANR	1641224	Symbol	idct_simple_mmx_perm		1640109						
ANR	1641225	Symbol	num		1640109						
ANR	1641226	Symbol	* idct_sse2_row_perm		1640109						
ANR	1641227	Symbol	prng		1640109						
ANR	1641228	Symbol	MMX_PERM		1640109						
ANR	1641229	Symbol	NB_ITS		1640109						
ANR	1641230	Symbol	block		1640109						
ANR	1641231	Symbol	* * i		1640109						
ANR	1641232	Symbol	test		1640109						
ANR	1641233	Symbol	block1		1640109						
ANR	1641234	Symbol	* idct_simple_mmx_perm		1640109						
ANR	1641235	Symbol	PARTTRANS_PERM		1640109						
ANR	1641236	Symbol	* * idct_simple_mmx_perm		1640109						
ANR	1641237	Symbol	it		1640109						
ANR	1641238	Symbol	* * idct_mmx_perm		1640109						
ANR	1641239	Symbol	block_org		1640109						
ANR	1641240	Symbol	gettime		1640109						
ANR	1641241	Symbol	SCALE_PERM		1640109						
ANR	1641242	Symbol	idct_sse2_row_perm		1640109						
ANR	1641243	Symbol	& prng		1640109						
ANR	1641244	Symbol	sysErrMax		1640109						
ANR	1641245	Symbol	* av_lfg_get		1640109						
ANR	1641246	Symbol	err2		1640109						
ANR	1641247	Symbol	sysErr		1640109						
ANR	1641248	Symbol	scale		1640109						
ANR	1641249	Symbol	ff_aanscales		1640109						
ANR	1641250	Symbol	av_lfg_get		1640109						
ANR	1641251	Symbol	AANSCALE_BITS		1640109						
ANR	1641252	Symbol	speed		1640109						
ANR	1641253	Symbol	blockSumErr		1640109						
ANR	1641254	Symbol	dct -> name		1640109						
ANR	1641255	Symbol	idct_mmx_perm		1640109						
ANR	1641256	Symbol	dct -> format		1640109						
ANR	1641257	Symbol	NB_ITS_SPEED		1640109						
ANR	1641258	Symbol	dct		1640109						
ANR	1641259	Symbol	is_idct		1640109						
ANR	1641260	Symbol	err_inf		1640109						
ANR	1641261	Symbol	* * idct_sse2_row_perm		1640109						
ANR	1641262	Symbol	* ff_aanscales		1640109						
ANR	1641263	Symbol	* sysErr		1640109						
ANR	1641264	Symbol	ti1		1640109						
ANR	1641265	Symbol	* block1		1640109						
ANR	1641266	Symbol	maxout		1640109						
ANR	1641267	Symbol	it1		1640109						
ANR	1641268	Symbol	i		1640109						
ANR	1641269	Symbol	FFABS		1640109						
ANR	1641270	Symbol	blockSumErrMax		1640109						
ANR	1641271	Symbol	* block		1640109						
ANR	1641272	Symbol	* i		1640109						
ANR	1641273	Symbol	SSE2_PERM		1640109						
ANR	1641274	Symbol	abs		1640109						
ANR	1641275	Symbol	ti		1640109						
ANR	1641276	Symbol	v		1640109						
ANR	1641277	Symbol	MMX_SIMPLE_PERM		1640109						
ANR	1641278	Symbol	FFMAX		1640109						
