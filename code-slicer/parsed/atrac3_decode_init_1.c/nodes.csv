command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	663749	File	/home/p4ultr4n/workplace/ReVeal/raw_code/atrac3_decode_init_1.c								
ANR	663750	Function	atrac3_decode_init	1:0:0:4755							
ANR	663751	FunctionDef	atrac3_decode_init (AVCodecContext * avctx)		663750	0					
ANR	663752	CompoundStatement		3:0:62:4755	663750	0					
ANR	663753	IdentifierDeclStatement	"int i , ret ;"	5:4:69:79	663750	0	True				
ANR	663754	IdentifierDecl	i		663750	0					
ANR	663755	IdentifierDeclType	int		663750	0					
ANR	663756	Identifier	i		663750	1					
ANR	663757	IdentifierDecl	ret		663750	1					
ANR	663758	IdentifierDeclType	int		663750	0					
ANR	663759	Identifier	ret		663750	1					
ANR	663760	IdentifierDeclStatement	"int version , delay , samples_per_frame , frame_factor ;"	7:4:86:137	663750	1	True				
ANR	663761	IdentifierDecl	version		663750	0					
ANR	663762	IdentifierDeclType	int		663750	0					
ANR	663763	Identifier	version		663750	1					
ANR	663764	IdentifierDecl	delay		663750	1					
ANR	663765	IdentifierDeclType	int		663750	0					
ANR	663766	Identifier	delay		663750	1					
ANR	663767	IdentifierDecl	samples_per_frame		663750	2					
ANR	663768	IdentifierDeclType	int		663750	0					
ANR	663769	Identifier	samples_per_frame		663750	1					
ANR	663770	IdentifierDecl	frame_factor		663750	3					
ANR	663771	IdentifierDeclType	int		663750	0					
ANR	663772	Identifier	frame_factor		663750	1					
ANR	663773	IdentifierDeclStatement	const uint8_t * edata_ptr = avctx -> extradata ;	9:4:144:187	663750	2	True				
ANR	663774	IdentifierDecl	* edata_ptr = avctx -> extradata		663750	0					
ANR	663775	IdentifierDeclType	const uint8_t *		663750	0					
ANR	663776	Identifier	edata_ptr		663750	1					
ANR	663777	AssignmentExpression	* edata_ptr = avctx -> extradata		663750	2		=			
ANR	663778	Identifier	edata_ptr		663750	0					
ANR	663779	PtrMemberAccess	avctx -> extradata		663750	1					
ANR	663780	Identifier	avctx		663750	0					
ANR	663781	Identifier	extradata		663750	1					
ANR	663782	IdentifierDeclStatement	ATRAC3Context * q = avctx -> priv_data ;	11:4:194:229	663750	3	True				
ANR	663783	IdentifierDecl	* q = avctx -> priv_data		663750	0					
ANR	663784	IdentifierDeclType	ATRAC3Context *		663750	0					
ANR	663785	Identifier	q		663750	1					
ANR	663786	AssignmentExpression	* q = avctx -> priv_data		663750	2		=			
ANR	663787	Identifier	q		663750	0					
ANR	663788	PtrMemberAccess	avctx -> priv_data		663750	1					
ANR	663789	Identifier	avctx		663750	0					
ANR	663790	Identifier	priv_data		663750	1					
ANR	663791	IfStatement	if ( avctx -> channels <= 0 || avctx -> channels > 2 )		663750	4					
ANR	663792	Condition	avctx -> channels <= 0 || avctx -> channels > 2	15:8:242:284	663750	0	True				
ANR	663793	OrExpression	avctx -> channels <= 0 || avctx -> channels > 2		663750	0		||			
ANR	663794	RelationalExpression	avctx -> channels <= 0		663750	0		<=			
ANR	663795	PtrMemberAccess	avctx -> channels		663750	0					
ANR	663796	Identifier	avctx		663750	0					
ANR	663797	Identifier	channels		663750	1					
ANR	663798	PrimaryExpression	0		663750	1					
ANR	663799	RelationalExpression	avctx -> channels > 2		663750	1		>			
ANR	663800	PtrMemberAccess	avctx -> channels		663750	0					
ANR	663801	Identifier	avctx		663750	0					
ANR	663802	Identifier	channels		663750	1					
ANR	663803	PrimaryExpression	2		663750	1					
ANR	663804	CompoundStatement		13:53:224:224	663750	1					
ANR	663805	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Channel configuration error!\\n"" )"	17:8:298:359	663750	0	True				
ANR	663806	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Channel configuration error!\\n"" )"		663750	0					
ANR	663807	Callee	av_log		663750	0					
ANR	663808	Identifier	av_log		663750	0					
ANR	663809	ArgumentList	avctx		663750	1					
ANR	663810	Argument	avctx		663750	0					
ANR	663811	Identifier	avctx		663750	0					
ANR	663812	Argument	AV_LOG_ERROR		663750	1					
ANR	663813	Identifier	AV_LOG_ERROR		663750	0					
ANR	663814	Argument	"""Channel configuration error!\\n"""		663750	2					
ANR	663815	PrimaryExpression	"""Channel configuration error!\\n"""		663750	0					
ANR	663816	IfStatement	if ( avctx -> extradata_size == 14 )		663750	5					
ANR	663817	Condition	avctx -> extradata_size == 14	26:8:434:460	663750	0	True				
ANR	663818	EqualityExpression	avctx -> extradata_size == 14		663750	0		==			
ANR	663819	PtrMemberAccess	avctx -> extradata_size		663750	0					
ANR	663820	Identifier	avctx		663750	0					
ANR	663821	Identifier	extradata_size		663750	1					
ANR	663822	PrimaryExpression	14		663750	1					
ANR	663823	CompoundStatement		24:37:400:400	663750	1					
ANR	663824	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[0-1] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	30:8:521:611	663750	0	True				
ANR	663825	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[0-1] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		663750	0					
ANR	663826	Callee	av_log		663750	0					
ANR	663827	Identifier	av_log		663750	0					
ANR	663828	ArgumentList	avctx		663750	1					
ANR	663829	Argument	avctx		663750	0					
ANR	663830	Identifier	avctx		663750	0					
ANR	663831	Argument	AV_LOG_DEBUG		663750	1					
ANR	663832	Identifier	AV_LOG_DEBUG		663750	0					
ANR	663833	Argument	"""[0-1] %d\\n"""		663750	2					
ANR	663834	PrimaryExpression	"""[0-1] %d\\n"""		663750	0					
ANR	663835	Argument	bytestream_get_le16 ( & edata_ptr )		663750	3					
ANR	663836	CallExpression	bytestream_get_le16 ( & edata_ptr )		663750	0					
ANR	663837	Callee	bytestream_get_le16		663750	0					
ANR	663838	Identifier	bytestream_get_le16		663750	0					
ANR	663839	ArgumentList	& edata_ptr		663750	1					
ANR	663840	Argument	& edata_ptr		663750	0					
ANR	663841	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	663842	UnaryOperator	&		663750	0					
ANR	663843	Identifier	edata_ptr		663750	1					
ANR	663844	ExpressionStatement	edata_ptr += 4	34:8:649:663	663750	1	True				
ANR	663845	AssignmentExpression	edata_ptr += 4		663750	0		+=			
ANR	663846	Identifier	edata_ptr		663750	0					
ANR	663847	PrimaryExpression	4		663750	1					
ANR	663848	ExpressionStatement	q -> coding_mode = bytestream_get_le16 ( & edata_ptr )	36:8:725:773	663750	2	True				
ANR	663849	AssignmentExpression	q -> coding_mode = bytestream_get_le16 ( & edata_ptr )		663750	0		=			
ANR	663850	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	663851	Identifier	q		663750	0					
ANR	663852	Identifier	coding_mode		663750	1					
ANR	663853	CallExpression	bytestream_get_le16 ( & edata_ptr )		663750	1					
ANR	663854	Callee	bytestream_get_le16		663750	0					
ANR	663855	Identifier	bytestream_get_le16		663750	0					
ANR	663856	ArgumentList	& edata_ptr		663750	1					
ANR	663857	Argument	& edata_ptr		663750	0					
ANR	663858	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	663859	UnaryOperator	&		663750	0					
ANR	663860	Identifier	edata_ptr		663750	1					
ANR	663861	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[8-9] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	38:8:784:873	663750	3	True				
ANR	663862	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[8-9] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		663750	0					
ANR	663863	Callee	av_log		663750	0					
ANR	663864	Identifier	av_log		663750	0					
ANR	663865	ArgumentList	avctx		663750	1					
ANR	663866	Argument	avctx		663750	0					
ANR	663867	Identifier	avctx		663750	0					
ANR	663868	Argument	AV_LOG_DEBUG		663750	1					
ANR	663869	Identifier	AV_LOG_DEBUG		663750	0					
ANR	663870	Argument	"""[8-9] %d\\n"""		663750	2					
ANR	663871	PrimaryExpression	"""[8-9] %d\\n"""		663750	0					
ANR	663872	Argument	bytestream_get_le16 ( & edata_ptr )		663750	3					
ANR	663873	CallExpression	bytestream_get_le16 ( & edata_ptr )		663750	0					
ANR	663874	Callee	bytestream_get_le16		663750	0					
ANR	663875	Identifier	bytestream_get_le16		663750	0					
ANR	663876	ArgumentList	& edata_ptr		663750	1					
ANR	663877	Argument	& edata_ptr		663750	0					
ANR	663878	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	663879	UnaryOperator	&		663750	0					
ANR	663880	Identifier	edata_ptr		663750	1					
ANR	663881	ExpressionStatement	frame_factor = bytestream_get_le16 ( & edata_ptr )	42:8:907:953	663750	4	True				
ANR	663882	AssignmentExpression	frame_factor = bytestream_get_le16 ( & edata_ptr )		663750	0		=			
ANR	663883	Identifier	frame_factor		663750	0					
ANR	663884	CallExpression	bytestream_get_le16 ( & edata_ptr )		663750	1					
ANR	663885	Callee	bytestream_get_le16		663750	0					
ANR	663886	Identifier	bytestream_get_le16		663750	0					
ANR	663887	ArgumentList	& edata_ptr		663750	1					
ANR	663888	Argument	& edata_ptr		663750	0					
ANR	663889	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	663890	UnaryOperator	&		663750	0					
ANR	663891	Identifier	edata_ptr		663750	1					
ANR	663892	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[12-13] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	44:8:985:1076	663750	5	True				
ANR	663893	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[12-13] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		663750	0					
ANR	663894	Callee	av_log		663750	0					
ANR	663895	Identifier	av_log		663750	0					
ANR	663896	ArgumentList	avctx		663750	1					
ANR	663897	Argument	avctx		663750	0					
ANR	663898	Identifier	avctx		663750	0					
ANR	663899	Argument	AV_LOG_DEBUG		663750	1					
ANR	663900	Identifier	AV_LOG_DEBUG		663750	0					
ANR	663901	Argument	"""[12-13] %d\\n"""		663750	2					
ANR	663902	PrimaryExpression	"""[12-13] %d\\n"""		663750	0					
ANR	663903	Argument	bytestream_get_le16 ( & edata_ptr )		663750	3					
ANR	663904	CallExpression	bytestream_get_le16 ( & edata_ptr )		663750	0					
ANR	663905	Callee	bytestream_get_le16		663750	0					
ANR	663906	Identifier	bytestream_get_le16		663750	0					
ANR	663907	ArgumentList	& edata_ptr		663750	1					
ANR	663908	Argument	& edata_ptr		663750	0					
ANR	663909	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	663910	UnaryOperator	&		663750	0					
ANR	663911	Identifier	edata_ptr		663750	1					
ANR	663912	ExpressionStatement	samples_per_frame = SAMPLES_PER_FRAME * avctx -> channels	52:8:1131:1189	663750	6	True				
ANR	663913	AssignmentExpression	samples_per_frame = SAMPLES_PER_FRAME * avctx -> channels		663750	0		=			
ANR	663914	Identifier	samples_per_frame		663750	0					
ANR	663915	MultiplicativeExpression	SAMPLES_PER_FRAME * avctx -> channels		663750	1		*			
ANR	663916	Identifier	SAMPLES_PER_FRAME		663750	0					
ANR	663917	PtrMemberAccess	avctx -> channels		663750	1					
ANR	663918	Identifier	avctx		663750	0					
ANR	663919	Identifier	channels		663750	1					
ANR	663920	ExpressionStatement	version = 4	54:8:1200:1224	663750	7	True				
ANR	663921	AssignmentExpression	version = 4		663750	0		=			
ANR	663922	Identifier	version		663750	0					
ANR	663923	PrimaryExpression	4		663750	1					
ANR	663924	ExpressionStatement	delay = 0x88E	56:8:1235:1263	663750	8	True				
ANR	663925	AssignmentExpression	delay = 0x88E		663750	0		=			
ANR	663926	Identifier	delay		663750	0					
ANR	663927	PrimaryExpression	0x88E		663750	1					
ANR	663928	ExpressionStatement	q -> coding_mode = q -> coding_mode ? JOINT_STEREO : STEREO	58:8:1274:1335	663750	9	True				
ANR	663929	AssignmentExpression	q -> coding_mode = q -> coding_mode ? JOINT_STEREO : STEREO		663750	0		=			
ANR	663930	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	663931	Identifier	q		663750	0					
ANR	663932	Identifier	coding_mode		663750	1					
ANR	663933	ConditionalExpression	q -> coding_mode ? JOINT_STEREO : STEREO		663750	1					
ANR	663934	Condition	q -> coding_mode		663750	0					
ANR	663935	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	663936	Identifier	q		663750	0					
ANR	663937	Identifier	coding_mode		663750	1					
ANR	663938	Identifier	JOINT_STEREO		663750	1					
ANR	663939	Identifier	STEREO		663750	2					
ANR	663940	ExpressionStatement	q -> scrambled_stream = 0	60:8:1346:1370	663750	10	True				
ANR	663941	AssignmentExpression	q -> scrambled_stream = 0		663750	0		=			
ANR	663942	PtrMemberAccess	q -> scrambled_stream		663750	0					
ANR	663943	Identifier	q		663750	0					
ANR	663944	Identifier	scrambled_stream		663750	1					
ANR	663945	PrimaryExpression	0		663750	1					
ANR	663946	IfStatement	if ( avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor )		663750	11					
ANR	663947	Condition	avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor	64:12:1387:1594	663750	0	True				
ANR	663948	AndExpression	avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor		663750	0		&&			
ANR	663949	EqualityExpression	avctx -> block_align != 96 * avctx -> channels * frame_factor		663750	0		!=			
ANR	663950	PtrMemberAccess	avctx -> block_align		663750	0					
ANR	663951	Identifier	avctx		663750	0					
ANR	663952	Identifier	block_align		663750	1					
ANR	663953	MultiplicativeExpression	96 * avctx -> channels * frame_factor		663750	1		*			
ANR	663954	PrimaryExpression	96		663750	0					
ANR	663955	MultiplicativeExpression	avctx -> channels * frame_factor		663750	1		*			
ANR	663956	PtrMemberAccess	avctx -> channels		663750	0					
ANR	663957	Identifier	avctx		663750	0					
ANR	663958	Identifier	channels		663750	1					
ANR	663959	Identifier	frame_factor		663750	1					
ANR	663960	AndExpression	avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor		663750	1		&&			
ANR	663961	EqualityExpression	avctx -> block_align != 152 * avctx -> channels * frame_factor		663750	0		!=			
ANR	663962	PtrMemberAccess	avctx -> block_align		663750	0					
ANR	663963	Identifier	avctx		663750	0					
ANR	663964	Identifier	block_align		663750	1					
ANR	663965	MultiplicativeExpression	152 * avctx -> channels * frame_factor		663750	1		*			
ANR	663966	PrimaryExpression	152		663750	0					
ANR	663967	MultiplicativeExpression	avctx -> channels * frame_factor		663750	1		*			
ANR	663968	PtrMemberAccess	avctx -> channels		663750	0					
ANR	663969	Identifier	avctx		663750	0					
ANR	663970	Identifier	channels		663750	1					
ANR	663971	Identifier	frame_factor		663750	1					
ANR	663972	EqualityExpression	avctx -> block_align != 192 * avctx -> channels * frame_factor		663750	1		!=			
ANR	663973	PtrMemberAccess	avctx -> block_align		663750	0					
ANR	663974	Identifier	avctx		663750	0					
ANR	663975	Identifier	block_align		663750	1					
ANR	663976	MultiplicativeExpression	192 * avctx -> channels * frame_factor		663750	1		*			
ANR	663977	PrimaryExpression	192		663750	0					
ANR	663978	MultiplicativeExpression	avctx -> channels * frame_factor		663750	1		*			
ANR	663979	PtrMemberAccess	avctx -> channels		663750	0					
ANR	663980	Identifier	avctx		663750	0					
ANR	663981	Identifier	channels		663750	1					
ANR	663982	Identifier	frame_factor		663750	1					
ANR	663983	CompoundStatement		66:72:1534:1534	663750	1					
ANR	663984	Statement	av_log	70:12:1612:1617	663750	0	True				
ANR	663985	Statement	(	70:18:1618:1618	663750	1	True				
ANR	663986	Statement	avctx	70:19:1619:1623	663750	2	True				
ANR	663987	Statement	","	70:24:1624:1624	663750	3	True				
ANR	663988	Statement	AV_LOG_ERROR	70:26:1626:1637	663750	4	True				
ANR	663989	Statement	","	70:38:1638:1638	663750	5	True				
ANR	663990	Statement	"""Unknown frame/channel/frame_factor """	70:40:1640:1676	663750	6	True				
ANR	663991	Statement	"""configuration %d/%d/%d\\n"""	72:19:1698:1723	663750	7	True				
ANR	663992	Statement	","	72:45:1724:1724	663750	8	True				
ANR	663993	Statement	avctx	72:47:1726:1730	663750	9	True				
ANR	663994	Statement	->	72:52:1731:1732	663750	10	True				
ANR	663995	Statement	block_align	72:54:1733:1743	663750	11	True				
ANR	663996	Statement	","	72:65:1744:1744	663750	12	True				
ANR	663997	Statement	avctx	74:19:1766:1770	663750	13	True				
ANR	663998	Statement	->	74:24:1771:1772	663750	14	True				
ANR	663999	Statement	channels	74:26:1773:1780	663750	15	True				
ANR	664000	Statement	","	74:34:1781:1781	663750	16	True				
ANR	664001	Statement	frame_factor	74:36:1783:1794	663750	17	True				
ANR	664002	Statement	)	74:48:1795:1795	663750	18	True				
ANR	664003	ExpressionStatement		74:49:1796:1796	663750	19	True				
ANR	664004	ReturnStatement	return AVERROR_INVALIDDATA ;	76:12:1811:1837	663750	20	True				
ANR	664005	Identifier	AVERROR_INVALIDDATA		663750	0					
ANR	664006	ElseStatement	else		663750	0					
ANR	664007	IfStatement	if ( avctx -> extradata_size == 10 )		663750	0					
ANR	664008	Condition	avctx -> extradata_size == 10	80:15:1866:1892	663750	0	True				
ANR	664009	EqualityExpression	avctx -> extradata_size == 10		663750	0		==			
ANR	664010	PtrMemberAccess	avctx -> extradata_size		663750	0					
ANR	664011	Identifier	avctx		663750	0					
ANR	664012	Identifier	extradata_size		663750	1					
ANR	664013	PrimaryExpression	10		663750	1					
ANR	664014	CompoundStatement		78:44:1832:1832	663750	1					
ANR	664015	ExpressionStatement	version = bytestream_get_be32 ( & edata_ptr )	84:8:1953:2009	663750	0	True				
ANR	664016	AssignmentExpression	version = bytestream_get_be32 ( & edata_ptr )		663750	0		=			
ANR	664017	Identifier	version		663750	0					
ANR	664018	CallExpression	bytestream_get_be32 ( & edata_ptr )		663750	1					
ANR	664019	Callee	bytestream_get_be32		663750	0					
ANR	664020	Identifier	bytestream_get_be32		663750	0					
ANR	664021	ArgumentList	& edata_ptr		663750	1					
ANR	664022	Argument	& edata_ptr		663750	0					
ANR	664023	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	664024	UnaryOperator	&		663750	0					
ANR	664025	Identifier	edata_ptr		663750	1					
ANR	664026	ExpressionStatement	samples_per_frame = bytestream_get_be16 ( & edata_ptr )	86:8:2020:2076	663750	1	True				
ANR	664027	AssignmentExpression	samples_per_frame = bytestream_get_be16 ( & edata_ptr )		663750	0		=			
ANR	664028	Identifier	samples_per_frame		663750	0					
ANR	664029	CallExpression	bytestream_get_be16 ( & edata_ptr )		663750	1					
ANR	664030	Callee	bytestream_get_be16		663750	0					
ANR	664031	Identifier	bytestream_get_be16		663750	0					
ANR	664032	ArgumentList	& edata_ptr		663750	1					
ANR	664033	Argument	& edata_ptr		663750	0					
ANR	664034	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	664035	UnaryOperator	&		663750	0					
ANR	664036	Identifier	edata_ptr		663750	1					
ANR	664037	ExpressionStatement	delay = bytestream_get_be16 ( & edata_ptr )	88:8:2087:2143	663750	2	True				
ANR	664038	AssignmentExpression	delay = bytestream_get_be16 ( & edata_ptr )		663750	0		=			
ANR	664039	Identifier	delay		663750	0					
ANR	664040	CallExpression	bytestream_get_be16 ( & edata_ptr )		663750	1					
ANR	664041	Callee	bytestream_get_be16		663750	0					
ANR	664042	Identifier	bytestream_get_be16		663750	0					
ANR	664043	ArgumentList	& edata_ptr		663750	1					
ANR	664044	Argument	& edata_ptr		663750	0					
ANR	664045	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	664046	UnaryOperator	&		663750	0					
ANR	664047	Identifier	edata_ptr		663750	1					
ANR	664048	ExpressionStatement	q -> coding_mode = bytestream_get_be16 ( & edata_ptr )	90:8:2154:2210	663750	3	True				
ANR	664049	AssignmentExpression	q -> coding_mode = bytestream_get_be16 ( & edata_ptr )		663750	0		=			
ANR	664050	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	664051	Identifier	q		663750	0					
ANR	664052	Identifier	coding_mode		663750	1					
ANR	664053	CallExpression	bytestream_get_be16 ( & edata_ptr )		663750	1					
ANR	664054	Callee	bytestream_get_be16		663750	0					
ANR	664055	Identifier	bytestream_get_be16		663750	0					
ANR	664056	ArgumentList	& edata_ptr		663750	1					
ANR	664057	Argument	& edata_ptr		663750	0					
ANR	664058	UnaryOperationExpression	& edata_ptr		663750	0					
ANR	664059	UnaryOperator	&		663750	0					
ANR	664060	Identifier	edata_ptr		663750	1					
ANR	664061	ExpressionStatement	q -> scrambled_stream = 1	92:8:2221:2247	663750	4	True				
ANR	664062	AssignmentExpression	q -> scrambled_stream = 1		663750	0		=			
ANR	664063	PtrMemberAccess	q -> scrambled_stream		663750	0					
ANR	664064	Identifier	q		663750	0					
ANR	664065	Identifier	scrambled_stream		663750	1					
ANR	664066	PrimaryExpression	1		663750	1					
ANR	664067	ElseStatement	else		663750	0					
ANR	664068	CompoundStatement		94:11:2200:2200	663750	0					
ANR	664069	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Unknown extradata size %d.\\n"" , avctx -> extradata_size )"	98:8:2274:2371	663750	0	True				
ANR	664070	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Unknown extradata size %d.\\n"" , avctx -> extradata_size )"		663750	0					
ANR	664071	Callee	av_log		663750	0					
ANR	664072	Identifier	av_log		663750	0					
ANR	664073	ArgumentList	NULL		663750	1					
ANR	664074	Argument	NULL		663750	0					
ANR	664075	Identifier	NULL		663750	0					
ANR	664076	Argument	AV_LOG_ERROR		663750	1					
ANR	664077	Identifier	AV_LOG_ERROR		663750	0					
ANR	664078	Argument	"""Unknown extradata size %d.\\n"""		663750	2					
ANR	664079	PrimaryExpression	"""Unknown extradata size %d.\\n"""		663750	0					
ANR	664080	Argument	avctx -> extradata_size		663750	3					
ANR	664081	PtrMemberAccess	avctx -> extradata_size		663750	0					
ANR	664082	Identifier	avctx		663750	0					
ANR	664083	Identifier	extradata_size		663750	1					
ANR	664084	IfStatement	if ( version != 4 )		663750	6					
ANR	664085	Condition	version != 4	111:8:2425:2436	663750	0	True				
ANR	664086	EqualityExpression	version != 4		663750	0		!=			
ANR	664087	Identifier	version		663750	0					
ANR	664088	PrimaryExpression	4		663750	1					
ANR	664089	CompoundStatement		109:22:2376:2376	663750	1					
ANR	664090	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Version %d != 4.\\n"" , version )"	113:8:2450:2508	663750	0	True				
ANR	664091	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Version %d != 4.\\n"" , version )"		663750	0					
ANR	664092	Callee	av_log		663750	0					
ANR	664093	Identifier	av_log		663750	0					
ANR	664094	ArgumentList	avctx		663750	1					
ANR	664095	Argument	avctx		663750	0					
ANR	664096	Identifier	avctx		663750	0					
ANR	664097	Argument	AV_LOG_ERROR		663750	1					
ANR	664098	Identifier	AV_LOG_ERROR		663750	0					
ANR	664099	Argument	"""Version %d != 4.\\n"""		663750	2					
ANR	664100	PrimaryExpression	"""Version %d != 4.\\n"""		663750	0					
ANR	664101	Argument	version		663750	3					
ANR	664102	Identifier	version		663750	0					
ANR	664103	ReturnStatement	return AVERROR_INVALIDDATA ;	115:8:2519:2545	663750	1	True				
ANR	664104	Identifier	AVERROR_INVALIDDATA		663750	0					
ANR	664105	IfStatement	if ( samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2 )		663750	7					
ANR	664106	Condition	samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2	121:8:2565:2657	663750	0	True				
ANR	664107	AndExpression	samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2		663750	0		&&			
ANR	664108	EqualityExpression	samples_per_frame != SAMPLES_PER_FRAME		663750	0		!=			
ANR	664109	Identifier	samples_per_frame		663750	0					
ANR	664110	Identifier	SAMPLES_PER_FRAME		663750	1					
ANR	664111	EqualityExpression	samples_per_frame != SAMPLES_PER_FRAME * 2		663750	1		!=			
ANR	664112	Identifier	samples_per_frame		663750	0					
ANR	664113	MultiplicativeExpression	SAMPLES_PER_FRAME * 2		663750	1		*			
ANR	664114	Identifier	SAMPLES_PER_FRAME		663750	0					
ANR	664115	PrimaryExpression	2		663750	1					
ANR	664116	CompoundStatement		121:52:2597:2597	663750	1					
ANR	664117	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of samples per frame %d.\\n"" , samples_per_frame )"	125:8:2671:2778	663750	0	True				
ANR	664118	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of samples per frame %d.\\n"" , samples_per_frame )"		663750	0					
ANR	664119	Callee	av_log		663750	0					
ANR	664120	Identifier	av_log		663750	0					
ANR	664121	ArgumentList	avctx		663750	1					
ANR	664122	Argument	avctx		663750	0					
ANR	664123	Identifier	avctx		663750	0					
ANR	664124	Argument	AV_LOG_ERROR		663750	1					
ANR	664125	Identifier	AV_LOG_ERROR		663750	0					
ANR	664126	Argument	"""Unknown amount of samples per frame %d.\\n"""		663750	2					
ANR	664127	PrimaryExpression	"""Unknown amount of samples per frame %d.\\n"""		663750	0					
ANR	664128	Argument	samples_per_frame		663750	3					
ANR	664129	Identifier	samples_per_frame		663750	0					
ANR	664130	ReturnStatement	return AVERROR_INVALIDDATA ;	129:8:2789:2815	663750	1	True				
ANR	664131	Identifier	AVERROR_INVALIDDATA		663750	0					
ANR	664132	IfStatement	if ( delay != 0x88E )		663750	8					
ANR	664133	Condition	delay != 0x88E	135:8:2835:2848	663750	0	True				
ANR	664134	EqualityExpression	delay != 0x88E		663750	0		!=			
ANR	664135	Identifier	delay		663750	0					
ANR	664136	PrimaryExpression	0x88E		663750	1					
ANR	664137	CompoundStatement		133:24:2788:2788	663750	1					
ANR	664138	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of delay %x != 0x88E.\\n"" , delay )"	137:8:2862:2954	663750	0	True				
ANR	664139	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of delay %x != 0x88E.\\n"" , delay )"		663750	0					
ANR	664140	Callee	av_log		663750	0					
ANR	664141	Identifier	av_log		663750	0					
ANR	664142	ArgumentList	avctx		663750	1					
ANR	664143	Argument	avctx		663750	0					
ANR	664144	Identifier	avctx		663750	0					
ANR	664145	Argument	AV_LOG_ERROR		663750	1					
ANR	664146	Identifier	AV_LOG_ERROR		663750	0					
ANR	664147	Argument	"""Unknown amount of delay %x != 0x88E.\\n"""		663750	2					
ANR	664148	PrimaryExpression	"""Unknown amount of delay %x != 0x88E.\\n"""		663750	0					
ANR	664149	Argument	delay		663750	3					
ANR	664150	Identifier	delay		663750	0					
ANR	664151	ReturnStatement	return AVERROR_INVALIDDATA ;	141:8:2965:2991	663750	1	True				
ANR	664152	Identifier	AVERROR_INVALIDDATA		663750	0					
ANR	664153	IfStatement	if ( q -> coding_mode == STEREO )		663750	9					
ANR	664154	Condition	q -> coding_mode == STEREO	147:8:3011:3034	663750	0	True				
ANR	664155	EqualityExpression	q -> coding_mode == STEREO		663750	0		==			
ANR	664156	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	664157	Identifier	q		663750	0					
ANR	664158	Identifier	coding_mode		663750	1					
ANR	664159	Identifier	STEREO		663750	1					
ANR	664160	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Normal stereo detected.\\n"" )"	149:8:3046:3102	663750	1	True				
ANR	664161	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Normal stereo detected.\\n"" )"		663750	0					
ANR	664162	Callee	av_log		663750	0					
ANR	664163	Identifier	av_log		663750	0					
ANR	664164	ArgumentList	avctx		663750	1					
ANR	664165	Argument	avctx		663750	0					
ANR	664166	Identifier	avctx		663750	0					
ANR	664167	Argument	AV_LOG_DEBUG		663750	1					
ANR	664168	Identifier	AV_LOG_DEBUG		663750	0					
ANR	664169	Argument	"""Normal stereo detected.\\n"""		663750	2					
ANR	664170	PrimaryExpression	"""Normal stereo detected.\\n"""		663750	0					
ANR	664171	ElseStatement	else		663750	0					
ANR	664172	IfStatement	if ( q -> coding_mode == JOINT_STEREO )		663750	0					
ANR	664173	Condition	q -> coding_mode == JOINT_STEREO	151:13:3118:3147	663750	0	True				
ANR	664174	EqualityExpression	q -> coding_mode == JOINT_STEREO		663750	0		==			
ANR	664175	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	664176	Identifier	q		663750	0					
ANR	664177	Identifier	coding_mode		663750	1					
ANR	664178	Identifier	JOINT_STEREO		663750	1					
ANR	664179	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Joint stereo detected.\\n"" )"	153:8:3159:3214	663750	1	True				
ANR	664180	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Joint stereo detected.\\n"" )"		663750	0					
ANR	664181	Callee	av_log		663750	0					
ANR	664182	Identifier	av_log		663750	0					
ANR	664183	ArgumentList	avctx		663750	1					
ANR	664184	Argument	avctx		663750	0					
ANR	664185	Identifier	avctx		663750	0					
ANR	664186	Argument	AV_LOG_DEBUG		663750	1					
ANR	664187	Identifier	AV_LOG_DEBUG		663750	0					
ANR	664188	Argument	"""Joint stereo detected.\\n"""		663750	2					
ANR	664189	PrimaryExpression	"""Joint stereo detected.\\n"""		663750	0					
ANR	664190	ElseStatement	else		663750	0					
ANR	664191	CompoundStatement		153:9:3163:3163	663750	0					
ANR	664192	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown channel coding mode %x!\\n"" , q -> coding_mode )"	157:8:3237:3333	663750	0	True				
ANR	664193	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown channel coding mode %x!\\n"" , q -> coding_mode )"		663750	0					
ANR	664194	Callee	av_log		663750	0					
ANR	664195	Identifier	av_log		663750	0					
ANR	664196	ArgumentList	avctx		663750	1					
ANR	664197	Argument	avctx		663750	0					
ANR	664198	Identifier	avctx		663750	0					
ANR	664199	Argument	AV_LOG_ERROR		663750	1					
ANR	664200	Identifier	AV_LOG_ERROR		663750	0					
ANR	664201	Argument	"""Unknown channel coding mode %x!\\n"""		663750	2					
ANR	664202	PrimaryExpression	"""Unknown channel coding mode %x!\\n"""		663750	0					
ANR	664203	Argument	q -> coding_mode		663750	3					
ANR	664204	PtrMemberAccess	q -> coding_mode		663750	0					
ANR	664205	Identifier	q		663750	0					
ANR	664206	Identifier	coding_mode		663750	1					
ANR	664207	ReturnStatement	return AVERROR_INVALIDDATA ;	161:8:3344:3370	663750	1	True				
ANR	664208	Identifier	AVERROR_INVALIDDATA		663750	0					
ANR	664209	IfStatement	if ( avctx -> block_align >= UINT_MAX / 2 )		663750	10					
ANR	664210	Condition	avctx -> block_align >= UINT_MAX / 2	167:8:3390:3423	663750	0	True				
ANR	664211	RelationalExpression	avctx -> block_align >= UINT_MAX / 2		663750	0		>=			
ANR	664212	PtrMemberAccess	avctx -> block_align		663750	0					
ANR	664213	Identifier	avctx		663750	0					
ANR	664214	Identifier	block_align		663750	1					
ANR	664215	MultiplicativeExpression	UINT_MAX / 2		663750	1		/			
ANR	664216	Identifier	UINT_MAX		663750	0					
ANR	664217	PrimaryExpression	2		663750	1					
ANR	664218	ExpressionStatement	"q -> decoded_bytes_buffer = av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"	172:4:3434:3575	663750	1	True				
ANR	664219	AssignmentExpression	"q -> decoded_bytes_buffer = av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"		663750	0		=			
ANR	664220	PtrMemberAccess	q -> decoded_bytes_buffer		663750	0					
ANR	664221	Identifier	q		663750	0					
ANR	664222	Identifier	decoded_bytes_buffer		663750	1					
ANR	664223	CallExpression	"av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"		663750	1					
ANR	664224	Callee	av_mallocz		663750	0					
ANR	664225	Identifier	av_mallocz		663750	0					
ANR	664226	ArgumentList	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		663750	1					
ANR	664227	Argument	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		663750	0					
ANR	664228	AdditiveExpression	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		663750	0		+			
ANR	664229	CallExpression	"FFALIGN ( avctx -> block_align , 4 )"		663750	0					
ANR	664230	Callee	FFALIGN		663750	0					
ANR	664231	Identifier	FFALIGN		663750	0					
ANR	664232	ArgumentList	avctx -> block_align		663750	1					
ANR	664233	Argument	avctx -> block_align		663750	0					
ANR	664234	PtrMemberAccess	avctx -> block_align		663750	0					
ANR	664235	Identifier	avctx		663750	0					
ANR	664236	Identifier	block_align		663750	1					
ANR	664237	Argument	4		663750	1					
ANR	664238	PrimaryExpression	4		663750	0					
ANR	664239	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		663750	1					
ANR	664240	IfStatement	if ( q -> decoded_bytes_buffer == NULL )		663750	11					
ANR	664241	Condition	q -> decoded_bytes_buffer == NULL	176:8:3586:3616	663750	0	True				
ANR	664242	EqualityExpression	q -> decoded_bytes_buffer == NULL		663750	0		==			
ANR	664243	PtrMemberAccess	q -> decoded_bytes_buffer		663750	0					
ANR	664244	Identifier	q		663750	0					
ANR	664245	Identifier	decoded_bytes_buffer		663750	1					
ANR	664246	Identifier	NULL		663750	1					
ANR	664247	ReturnStatement	return AVERROR ( ENOMEM ) ;	178:8:3628:3650	663750	1	True				
ANR	664248	CallExpression	AVERROR ( ENOMEM )		663750	0					
ANR	664249	Callee	AVERROR		663750	0					
ANR	664250	Identifier	AVERROR		663750	0					
ANR	664251	ArgumentList	ENOMEM		663750	1					
ANR	664252	Argument	ENOMEM		663750	0					
ANR	664253	Identifier	ENOMEM		663750	0					
ANR	664254	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP	182:4:3659:3697	663750	12	True				
ANR	664255	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP		663750	0		=			
ANR	664256	PtrMemberAccess	avctx -> sample_fmt		663750	0					
ANR	664257	Identifier	avctx		663750	0					
ANR	664258	Identifier	sample_fmt		663750	1					
ANR	664259	Identifier	AV_SAMPLE_FMT_FLTP		663750	1					
ANR	664260	IfStatement	"if ( ( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0 )"		663750	13					
ANR	664261	Condition	"( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0"	188:8:3751:3807	663750	0	True				
ANR	664262	RelationalExpression	"( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0"		663750	0		<			
ANR	664263	AssignmentExpression	"ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 )"		663750	0		=			
ANR	664264	Identifier	ret		663750	0					
ANR	664265	CallExpression	"ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 )"		663750	1					
ANR	664266	Callee	ff_mdct_init		663750	0					
ANR	664267	Identifier	ff_mdct_init		663750	0					
ANR	664268	ArgumentList	& q -> mdct_ctx		663750	1					
ANR	664269	Argument	& q -> mdct_ctx		663750	0					
ANR	664270	UnaryOperationExpression	& q -> mdct_ctx		663750	0					
ANR	664271	UnaryOperator	&		663750	0					
ANR	664272	PtrMemberAccess	q -> mdct_ctx		663750	1					
ANR	664273	Identifier	q		663750	0					
ANR	664274	Identifier	mdct_ctx		663750	1					
ANR	664275	Argument	9		663750	1					
ANR	664276	PrimaryExpression	9		663750	0					
ANR	664277	Argument	1		663750	2					
ANR	664278	PrimaryExpression	1		663750	0					
ANR	664279	Argument	1.0 / 32768		663750	3					
ANR	664280	MultiplicativeExpression	1.0 / 32768		663750	0		/			
ANR	664281	PrimaryExpression	1.0		663750	0					
ANR	664282	PrimaryExpression	32768		663750	1					
ANR	664283	PrimaryExpression	0		663750	1					
ANR	664284	CompoundStatement		186:67:3747:3747	663750	1					
ANR	664285	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error initializing MDCT\\n"" )"	190:8:3821:3877	663750	0	True				
ANR	664286	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error initializing MDCT\\n"" )"		663750	0					
ANR	664287	Callee	av_log		663750	0					
ANR	664288	Identifier	av_log		663750	0					
ANR	664289	ArgumentList	avctx		663750	1					
ANR	664290	Argument	avctx		663750	0					
ANR	664291	Identifier	avctx		663750	0					
ANR	664292	Argument	AV_LOG_ERROR		663750	1					
ANR	664293	Identifier	AV_LOG_ERROR		663750	0					
ANR	664294	Argument	"""Error initializing MDCT\\n"""		663750	2					
ANR	664295	PrimaryExpression	"""Error initializing MDCT\\n"""		663750	0					
ANR	664296	ExpressionStatement	av_freep ( & q -> decoded_bytes_buffer )	192:8:3888:3922	663750	1	True				
ANR	664297	CallExpression	av_freep ( & q -> decoded_bytes_buffer )		663750	0					
ANR	664298	Callee	av_freep		663750	0					
ANR	664299	Identifier	av_freep		663750	0					
ANR	664300	ArgumentList	& q -> decoded_bytes_buffer		663750	1					
ANR	664301	Argument	& q -> decoded_bytes_buffer		663750	0					
ANR	664302	UnaryOperationExpression	& q -> decoded_bytes_buffer		663750	0					
ANR	664303	UnaryOperator	&		663750	0					
ANR	664304	PtrMemberAccess	q -> decoded_bytes_buffer		663750	1					
ANR	664305	Identifier	q		663750	0					
ANR	664306	Identifier	decoded_bytes_buffer		663750	1					
ANR	664307	ReturnStatement	return ret ;	194:8:3933:3943	663750	2	True				
ANR	664308	Identifier	ret		663750	0					
ANR	664309	ExpressionStatement	q -> weighting_delay [ 0 ] = 0	202:4:4006:4031	663750	14	True				
ANR	664310	AssignmentExpression	q -> weighting_delay [ 0 ] = 0		663750	0		=			
ANR	664311	ArrayIndexing	q -> weighting_delay [ 0 ]		663750	0					
ANR	664312	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664313	Identifier	q		663750	0					
ANR	664314	Identifier	weighting_delay		663750	1					
ANR	664315	PrimaryExpression	0		663750	1					
ANR	664316	PrimaryExpression	0		663750	1					
ANR	664317	ExpressionStatement	q -> weighting_delay [ 1 ] = 7	204:4:4038:4063	663750	15	True				
ANR	664318	AssignmentExpression	q -> weighting_delay [ 1 ] = 7		663750	0		=			
ANR	664319	ArrayIndexing	q -> weighting_delay [ 1 ]		663750	0					
ANR	664320	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664321	Identifier	q		663750	0					
ANR	664322	Identifier	weighting_delay		663750	1					
ANR	664323	PrimaryExpression	1		663750	1					
ANR	664324	PrimaryExpression	7		663750	1					
ANR	664325	ExpressionStatement	q -> weighting_delay [ 2 ] = 0	206:4:4070:4095	663750	16	True				
ANR	664326	AssignmentExpression	q -> weighting_delay [ 2 ] = 0		663750	0		=			
ANR	664327	ArrayIndexing	q -> weighting_delay [ 2 ]		663750	0					
ANR	664328	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664329	Identifier	q		663750	0					
ANR	664330	Identifier	weighting_delay		663750	1					
ANR	664331	PrimaryExpression	2		663750	1					
ANR	664332	PrimaryExpression	0		663750	1					
ANR	664333	ExpressionStatement	q -> weighting_delay [ 3 ] = 7	208:4:4102:4127	663750	17	True				
ANR	664334	AssignmentExpression	q -> weighting_delay [ 3 ] = 7		663750	0		=			
ANR	664335	ArrayIndexing	q -> weighting_delay [ 3 ]		663750	0					
ANR	664336	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664337	Identifier	q		663750	0					
ANR	664338	Identifier	weighting_delay		663750	1					
ANR	664339	PrimaryExpression	3		663750	1					
ANR	664340	PrimaryExpression	7		663750	1					
ANR	664341	ExpressionStatement	q -> weighting_delay [ 4 ] = 0	210:4:4134:4159	663750	18	True				
ANR	664342	AssignmentExpression	q -> weighting_delay [ 4 ] = 0		663750	0		=			
ANR	664343	ArrayIndexing	q -> weighting_delay [ 4 ]		663750	0					
ANR	664344	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664345	Identifier	q		663750	0					
ANR	664346	Identifier	weighting_delay		663750	1					
ANR	664347	PrimaryExpression	4		663750	1					
ANR	664348	PrimaryExpression	0		663750	1					
ANR	664349	ExpressionStatement	q -> weighting_delay [ 5 ] = 7	212:4:4166:4191	663750	19	True				
ANR	664350	AssignmentExpression	q -> weighting_delay [ 5 ] = 7		663750	0		=			
ANR	664351	ArrayIndexing	q -> weighting_delay [ 5 ]		663750	0					
ANR	664352	PtrMemberAccess	q -> weighting_delay		663750	0					
ANR	664353	Identifier	q		663750	0					
ANR	664354	Identifier	weighting_delay		663750	1					
ANR	664355	PrimaryExpression	5		663750	1					
ANR	664356	PrimaryExpression	7		663750	1					
ANR	664357	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		663750	20					
ANR	664358	ForInit	i = 0 ;	216:9:4205:4210	663750	0	True				
ANR	664359	AssignmentExpression	i = 0		663750	0		=			
ANR	664360	Identifier	i		663750	0					
ANR	664361	PrimaryExpression	0		663750	1					
ANR	664362	Condition	i < 4	216:16:4212:4216	663750	1	True				
ANR	664363	RelationalExpression	i < 4		663750	0		<			
ANR	664364	Identifier	i		663750	0					
ANR	664365	PrimaryExpression	4		663750	1					
ANR	664366	PostIncDecOperationExpression	i ++	216:23:4219:4221	663750	2	True				
ANR	664367	Identifier	i		663750	0					
ANR	664368	IncDec	++		663750	1					
ANR	664369	CompoundStatement		214:28:4161:4161	663750	3					
ANR	664370	ExpressionStatement	q -> matrix_coeff_index_prev [ i ] = 3	218:8:4235:4268	663750	0	True				
ANR	664371	AssignmentExpression	q -> matrix_coeff_index_prev [ i ] = 3		663750	0		=			
ANR	664372	ArrayIndexing	q -> matrix_coeff_index_prev [ i ]		663750	0					
ANR	664373	PtrMemberAccess	q -> matrix_coeff_index_prev		663750	0					
ANR	664374	Identifier	q		663750	0					
ANR	664375	Identifier	matrix_coeff_index_prev		663750	1					
ANR	664376	Identifier	i		663750	1					
ANR	664377	PrimaryExpression	3		663750	1					
ANR	664378	ExpressionStatement	q -> matrix_coeff_index_now [ i ] = 3	220:8:4279:4312	663750	1	True				
ANR	664379	AssignmentExpression	q -> matrix_coeff_index_now [ i ] = 3		663750	0		=			
ANR	664380	ArrayIndexing	q -> matrix_coeff_index_now [ i ]		663750	0					
ANR	664381	PtrMemberAccess	q -> matrix_coeff_index_now		663750	0					
ANR	664382	Identifier	q		663750	0					
ANR	664383	Identifier	matrix_coeff_index_now		663750	1					
ANR	664384	Identifier	i		663750	1					
ANR	664385	PrimaryExpression	3		663750	1					
ANR	664386	ExpressionStatement	q -> matrix_coeff_index_next [ i ] = 3	222:8:4323:4356	663750	2	True				
ANR	664387	AssignmentExpression	q -> matrix_coeff_index_next [ i ] = 3		663750	0		=			
ANR	664388	ArrayIndexing	q -> matrix_coeff_index_next [ i ]		663750	0					
ANR	664389	PtrMemberAccess	q -> matrix_coeff_index_next		663750	0					
ANR	664390	Identifier	q		663750	0					
ANR	664391	Identifier	matrix_coeff_index_next		663750	1					
ANR	664392	Identifier	i		663750	1					
ANR	664393	PrimaryExpression	3		663750	1					
ANR	664394	ExpressionStatement	"avpriv_float_dsp_init ( & q -> fdsp , avctx -> flags & CODEC_FLAG_BITEXACT )"	228:4:4372:4439	663750	21	True				
ANR	664395	CallExpression	"avpriv_float_dsp_init ( & q -> fdsp , avctx -> flags & CODEC_FLAG_BITEXACT )"		663750	0					
ANR	664396	Callee	avpriv_float_dsp_init		663750	0					
ANR	664397	Identifier	avpriv_float_dsp_init		663750	0					
ANR	664398	ArgumentList	& q -> fdsp		663750	1					
ANR	664399	Argument	& q -> fdsp		663750	0					
ANR	664400	UnaryOperationExpression	& q -> fdsp		663750	0					
ANR	664401	UnaryOperator	&		663750	0					
ANR	664402	PtrMemberAccess	q -> fdsp		663750	1					
ANR	664403	Identifier	q		663750	0					
ANR	664404	Identifier	fdsp		663750	1					
ANR	664405	Argument	avctx -> flags & CODEC_FLAG_BITEXACT		663750	1					
ANR	664406	BitAndExpression	avctx -> flags & CODEC_FLAG_BITEXACT		663750	0		&			
ANR	664407	PtrMemberAccess	avctx -> flags		663750	0					
ANR	664408	Identifier	avctx		663750	0					
ANR	664409	Identifier	flags		663750	1					
ANR	664410	Identifier	CODEC_FLAG_BITEXACT		663750	1					
ANR	664411	ExpressionStatement	"ff_fmt_convert_init ( & q -> fmt_conv , avctx )"	230:4:4446:4486	663750	22	True				
ANR	664412	CallExpression	"ff_fmt_convert_init ( & q -> fmt_conv , avctx )"		663750	0					
ANR	664413	Callee	ff_fmt_convert_init		663750	0					
ANR	664414	Identifier	ff_fmt_convert_init		663750	0					
ANR	664415	ArgumentList	& q -> fmt_conv		663750	1					
ANR	664416	Argument	& q -> fmt_conv		663750	0					
ANR	664417	UnaryOperationExpression	& q -> fmt_conv		663750	0					
ANR	664418	UnaryOperator	&		663750	0					
ANR	664419	PtrMemberAccess	q -> fmt_conv		663750	1					
ANR	664420	Identifier	q		663750	0					
ANR	664421	Identifier	fmt_conv		663750	1					
ANR	664422	Argument	avctx		663750	1					
ANR	664423	Identifier	avctx		663750	0					
ANR	664424	ExpressionStatement	q -> units = av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )	234:4:4495:4553	663750	23	True				
ANR	664425	AssignmentExpression	q -> units = av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )		663750	0		=			
ANR	664426	PtrMemberAccess	q -> units		663750	0					
ANR	664427	Identifier	q		663750	0					
ANR	664428	Identifier	units		663750	1					
ANR	664429	CallExpression	av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )		663750	1					
ANR	664430	Callee	av_mallocz		663750	0					
ANR	664431	Identifier	av_mallocz		663750	0					
ANR	664432	ArgumentList	sizeof ( * q -> units ) * avctx -> channels		663750	1					
ANR	664433	Argument	sizeof ( * q -> units ) * avctx -> channels		663750	0					
ANR	664434	MultiplicativeExpression	sizeof ( * q -> units ) * avctx -> channels		663750	0		*			
ANR	664435	SizeofExpression	sizeof ( * q -> units )		663750	0					
ANR	664436	Sizeof	sizeof		663750	0					
ANR	664437	UnaryOperationExpression	* q -> units		663750	1					
ANR	664438	UnaryOperator	*		663750	0					
ANR	664439	PtrMemberAccess	q -> units		663750	1					
ANR	664440	Identifier	q		663750	0					
ANR	664441	Identifier	units		663750	1					
ANR	664442	PtrMemberAccess	avctx -> channels		663750	1					
ANR	664443	Identifier	avctx		663750	0					
ANR	664444	Identifier	channels		663750	1					
ANR	664445	IfStatement	if ( ! q -> units )		663750	24					
ANR	664446	Condition	! q -> units	236:8:4564:4572	663750	0	True				
ANR	664447	UnaryOperationExpression	! q -> units		663750	0					
ANR	664448	UnaryOperator	!		663750	0					
ANR	664449	PtrMemberAccess	q -> units		663750	1					
ANR	664450	Identifier	q		663750	0					
ANR	664451	Identifier	units		663750	1					
ANR	664452	CompoundStatement		234:19:4512:4512	663750	1					
ANR	664453	ExpressionStatement	atrac3_decode_close ( avctx )	238:8:4586:4612	663750	0	True				
ANR	664454	CallExpression	atrac3_decode_close ( avctx )		663750	0					
ANR	664455	Callee	atrac3_decode_close		663750	0					
ANR	664456	Identifier	atrac3_decode_close		663750	0					
ANR	664457	ArgumentList	avctx		663750	1					
ANR	664458	Argument	avctx		663750	0					
ANR	664459	Identifier	avctx		663750	0					
ANR	664460	ReturnStatement	return AVERROR ( ENOMEM ) ;	240:8:4623:4645	663750	1	True				
ANR	664461	CallExpression	AVERROR ( ENOMEM )		663750	0					
ANR	664462	Callee	AVERROR		663750	0					
ANR	664463	Identifier	AVERROR		663750	0					
ANR	664464	ArgumentList	ENOMEM		663750	1					
ANR	664465	Argument	ENOMEM		663750	0					
ANR	664466	Identifier	ENOMEM		663750	0					
ANR	664467	ExpressionStatement	avcodec_get_frame_defaults ( & q -> frame )	246:4:4661:4698	663750	25	True				
ANR	664468	CallExpression	avcodec_get_frame_defaults ( & q -> frame )		663750	0					
ANR	664469	Callee	avcodec_get_frame_defaults		663750	0					
ANR	664470	Identifier	avcodec_get_frame_defaults		663750	0					
ANR	664471	ArgumentList	& q -> frame		663750	1					
ANR	664472	Argument	& q -> frame		663750	0					
ANR	664473	UnaryOperationExpression	& q -> frame		663750	0					
ANR	664474	UnaryOperator	&		663750	0					
ANR	664475	PtrMemberAccess	q -> frame		663750	1					
ANR	664476	Identifier	q		663750	0					
ANR	664477	Identifier	frame		663750	1					
ANR	664478	ExpressionStatement	avctx -> coded_frame = & q -> frame	248:4:4705:4735	663750	26	True				
ANR	664479	AssignmentExpression	avctx -> coded_frame = & q -> frame		663750	0		=			
ANR	664480	PtrMemberAccess	avctx -> coded_frame		663750	0					
ANR	664481	Identifier	avctx		663750	0					
ANR	664482	Identifier	coded_frame		663750	1					
ANR	664483	UnaryOperationExpression	& q -> frame		663750	1					
ANR	664484	UnaryOperator	&		663750	0					
ANR	664485	PtrMemberAccess	q -> frame		663750	1					
ANR	664486	Identifier	q		663750	0					
ANR	664487	Identifier	frame		663750	1					
ANR	664488	ReturnStatement	return 0 ;	252:4:4744:4752	663750	27	True				
ANR	664489	PrimaryExpression	0		663750	0					
ANR	664490	ReturnType	static av_cold int		663750	1					
ANR	664491	Identifier	atrac3_decode_init		663750	2					
ANR	664492	ParameterList	AVCodecContext * avctx		663750	3					
ANR	664493	Parameter	AVCodecContext * avctx	1:38:38:58	663750	0	True				
ANR	664494	ParameterType	AVCodecContext *		663750	0					
ANR	664495	Identifier	avctx		663750	1					
ANR	664496	CFGEntryNode	ENTRY		663750		True				
ANR	664497	CFGExitNode	EXIT		663750		True				
ANR	664498	Symbol	JOINT_STEREO		663750						
ANR	664499	Symbol	q -> matrix_coeff_index_prev		663750						
ANR	664500	Symbol	q -> units		663750						
ANR	664501	Symbol	ENOMEM		663750						
ANR	664502	Symbol	bytestream_get_be16		663750						
ANR	664503	Symbol	AV_SAMPLE_FMT_FLTP		663750						
ANR	664504	Symbol	samples_per_frame		663750						
ANR	664505	Symbol	& edata_ptr		663750						
ANR	664506	Symbol	UINT_MAX		663750						
ANR	664507	Symbol	* q -> units		663750						
ANR	664508	Symbol	frame_factor		663750						
ANR	664509	Symbol	avctx -> channels		663750						
ANR	664510	Symbol	edata_ptr		663750						
ANR	664511	Symbol	avctx -> flags		663750						
ANR	664512	Symbol	STEREO		663750						
ANR	664513	Symbol	q -> scrambled_stream		663750						
ANR	664514	Symbol	AV_LOG_DEBUG		663750						
ANR	664515	Symbol	ret		663750						
ANR	664516	Symbol	avctx -> sample_fmt		663750						
ANR	664517	Symbol	NULL		663750						
ANR	664518	Symbol	av_mallocz		663750						
ANR	664519	Symbol	version		663750						
ANR	664520	Symbol	bytestream_get_le16		663750						
ANR	664521	Symbol	* q -> matrix_coeff_index_prev		663750						
ANR	664522	Symbol	* avctx		663750						
ANR	664523	Symbol	delay		663750						
ANR	664524	Symbol	* q -> weighting_delay		663750						
ANR	664525	Symbol	& q -> fdsp		663750						
ANR	664526	Symbol	& q -> mdct_ctx		663750						
ANR	664527	Symbol	FFALIGN		663750						
ANR	664528	Symbol	q -> decoded_bytes_buffer		663750						
ANR	664529	Symbol	* q -> matrix_coeff_index_now		663750						
ANR	664530	Symbol	SAMPLES_PER_FRAME		663750						
ANR	664531	Symbol	ff_mdct_init		663750						
ANR	664532	Symbol	q -> coding_mode		663750						
ANR	664533	Symbol	q -> matrix_coeff_index_next		663750						
ANR	664534	Symbol	bytestream_get_be32		663750						
ANR	664535	Symbol	CODEC_FLAG_BITEXACT		663750						
ANR	664536	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		663750						
ANR	664537	Symbol	avctx -> block_align		663750						
ANR	664538	Symbol	avctx -> coded_frame		663750						
ANR	664539	Symbol	* * q		663750						
ANR	664540	Symbol	avctx		663750						
ANR	664541	Symbol	avctx -> extradata		663750						
ANR	664542	Symbol	AV_LOG_ERROR		663750						
ANR	664543	Symbol	avctx -> extradata_size		663750						
ANR	664544	Symbol	i		663750						
ANR	664545	Symbol	q -> weighting_delay		663750						
ANR	664546	Symbol	avctx -> priv_data		663750						
ANR	664547	Symbol	* q -> matrix_coeff_index_next		663750						
ANR	664548	Symbol	& q -> decoded_bytes_buffer		663750						
ANR	664549	Symbol	q		663750						
ANR	664550	Symbol	* i		663750						
ANR	664551	Symbol	q -> matrix_coeff_index_now		663750						
ANR	664552	Symbol	& q -> frame		663750						
ANR	664553	Symbol	& q -> fmt_conv		663750						
ANR	664554	Symbol	AVERROR_INVALIDDATA		663750						
ANR	664555	Symbol	* q		663750						
ANR	664556	Symbol	AVERROR		663750						
