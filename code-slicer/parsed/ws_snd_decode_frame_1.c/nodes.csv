command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9465629	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ws_snd_decode_frame_1.c								
ANR	9465630	Function	ws_snd_decode_frame	1:0:0:3100							
ANR	9465631	FunctionDef	"ws_snd_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		9465630	0					
ANR	9465632	CompoundStatement		7:0:134:3100	9465630	0					
ANR	9465633	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:141:173	9465630	0	True				
ANR	9465634	IdentifierDecl	* buf = avpkt -> data		9465630	0					
ANR	9465635	IdentifierDeclType	const uint8_t *		9465630	0					
ANR	9465636	Identifier	buf		9465630	1					
ANR	9465637	AssignmentExpression	* buf = avpkt -> data		9465630	2		=			
ANR	9465638	Identifier	buf		9465630	0					
ANR	9465639	PtrMemberAccess	avpkt -> data		9465630	1					
ANR	9465640	Identifier	avpkt		9465630	0					
ANR	9465641	Identifier	data		9465630	1					
ANR	9465642	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:180:206	9465630	1	True				
ANR	9465643	IdentifierDecl	buf_size = avpkt -> size		9465630	0					
ANR	9465644	IdentifierDeclType	int		9465630	0					
ANR	9465645	Identifier	buf_size		9465630	1					
ANR	9465646	AssignmentExpression	buf_size = avpkt -> size		9465630	2		=			
ANR	9465647	Identifier	buf_size		9465630	0					
ANR	9465648	PtrMemberAccess	avpkt -> size		9465630	1					
ANR	9465649	Identifier	avpkt		9465630	0					
ANR	9465650	Identifier	size		9465630	1					
ANR	9465651	IdentifierDeclStatement	"int in_size , out_size ;"	17:4:258:279	9465630	2	True				
ANR	9465652	IdentifierDecl	in_size		9465630	0					
ANR	9465653	IdentifierDeclType	int		9465630	0					
ANR	9465654	Identifier	in_size		9465630	1					
ANR	9465655	IdentifierDecl	out_size		9465630	1					
ANR	9465656	IdentifierDeclType	int		9465630	0					
ANR	9465657	Identifier	out_size		9465630	1					
ANR	9465658	IdentifierDeclStatement	int sample = 128 ;	19:4:286:302	9465630	3	True				
ANR	9465659	IdentifierDecl	sample = 128		9465630	0					
ANR	9465660	IdentifierDeclType	int		9465630	0					
ANR	9465661	Identifier	sample		9465630	1					
ANR	9465662	AssignmentExpression	sample = 128		9465630	2		=			
ANR	9465663	Identifier	sample		9465630	0					
ANR	9465664	PrimaryExpression	128		9465630	1					
ANR	9465665	IdentifierDeclStatement	int i ;	21:4:309:314	9465630	4	True				
ANR	9465666	IdentifierDecl	i		9465630	0					
ANR	9465667	IdentifierDeclType	int		9465630	0					
ANR	9465668	Identifier	i		9465630	1					
ANR	9465669	IdentifierDeclStatement	uint8_t * samples = data ;	23:4:321:344	9465630	5	True				
ANR	9465670	IdentifierDecl	* samples = data		9465630	0					
ANR	9465671	IdentifierDeclType	uint8_t *		9465630	0					
ANR	9465672	Identifier	samples		9465630	1					
ANR	9465673	AssignmentExpression	* samples = data		9465630	2		=			
ANR	9465674	Identifier	data		9465630	0					
ANR	9465675	Identifier	data		9465630	1					
ANR	9465676	IfStatement	if ( ! buf_size )		9465630	6					
ANR	9465677	Condition	! buf_size	27:8:357:365	9465630	0	True				
ANR	9465678	UnaryOperationExpression	! buf_size		9465630	0					
ANR	9465679	UnaryOperator	!		9465630	0					
ANR	9465680	Identifier	buf_size		9465630	1					
ANR	9465681	ReturnStatement	return 0 ;	29:8:377:385	9465630	1	True				
ANR	9465682	PrimaryExpression	0		9465630	0					
ANR	9465683	ExpressionStatement	out_size = AV_RL16 ( & buf [ 0 ] )	33:4:394:421	9465630	7	True				
ANR	9465684	AssignmentExpression	out_size = AV_RL16 ( & buf [ 0 ] )		9465630	0		=			
ANR	9465685	Identifier	out_size		9465630	0					
ANR	9465686	CallExpression	AV_RL16 ( & buf [ 0 ] )		9465630	1					
ANR	9465687	Callee	AV_RL16		9465630	0					
ANR	9465688	Identifier	AV_RL16		9465630	0					
ANR	9465689	ArgumentList	& buf [ 0 ]		9465630	1					
ANR	9465690	Argument	& buf [ 0 ]		9465630	0					
ANR	9465691	UnaryOperationExpression	& buf [ 0 ]		9465630	0					
ANR	9465692	UnaryOperator	&		9465630	0					
ANR	9465693	ArrayIndexing	buf [ 0 ]		9465630	1					
ANR	9465694	Identifier	buf		9465630	0					
ANR	9465695	PrimaryExpression	0		9465630	1					
ANR	9465696	ExpressionStatement	in_size = AV_RL16 ( & buf [ 2 ] )	35:4:428:454	9465630	8	True				
ANR	9465697	AssignmentExpression	in_size = AV_RL16 ( & buf [ 2 ] )		9465630	0		=			
ANR	9465698	Identifier	in_size		9465630	0					
ANR	9465699	CallExpression	AV_RL16 ( & buf [ 2 ] )		9465630	1					
ANR	9465700	Callee	AV_RL16		9465630	0					
ANR	9465701	Identifier	AV_RL16		9465630	0					
ANR	9465702	ArgumentList	& buf [ 2 ]		9465630	1					
ANR	9465703	Argument	& buf [ 2 ]		9465630	0					
ANR	9465704	UnaryOperationExpression	& buf [ 2 ]		9465630	0					
ANR	9465705	UnaryOperator	&		9465630	0					
ANR	9465706	ArrayIndexing	buf [ 2 ]		9465630	1					
ANR	9465707	Identifier	buf		9465630	0					
ANR	9465708	PrimaryExpression	2		9465630	1					
ANR	9465709	ExpressionStatement	buf += 4	37:4:461:469	9465630	9	True				
ANR	9465710	AssignmentExpression	buf += 4		9465630	0		+=			
ANR	9465711	Identifier	buf		9465630	0					
ANR	9465712	PrimaryExpression	4		9465630	1					
ANR	9465713	IfStatement	if ( out_size > * data_size )		9465630	10					
ANR	9465714	Condition	out_size > * data_size	41:8:482:502	9465630	0	True				
ANR	9465715	RelationalExpression	out_size > * data_size		9465630	0		>			
ANR	9465716	Identifier	out_size		9465630	0					
ANR	9465717	UnaryOperationExpression	* data_size		9465630	1					
ANR	9465718	UnaryOperator	*		9465630	0					
ANR	9465719	Identifier	data_size		9465630	1					
ANR	9465720	CompoundStatement		35:31:370:370	9465630	1					
ANR	9465721	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too large to fit in buffer\\n"" )"	43:8:516:584	9465630	0	True				
ANR	9465722	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too large to fit in buffer\\n"" )"		9465630	0					
ANR	9465723	Callee	av_log		9465630	0					
ANR	9465724	Identifier	av_log		9465630	0					
ANR	9465725	ArgumentList	avctx		9465630	1					
ANR	9465726	Argument	avctx		9465630	0					
ANR	9465727	Identifier	avctx		9465630	0					
ANR	9465728	Argument	AV_LOG_ERROR		9465630	1					
ANR	9465729	Identifier	AV_LOG_ERROR		9465630	0					
ANR	9465730	Argument	"""Frame is too large to fit in buffer\\n"""		9465630	2					
ANR	9465731	PrimaryExpression	"""Frame is too large to fit in buffer\\n"""		9465630	0					
ANR	9465732	ReturnStatement	return - 1 ;	45:8:595:604	9465630	1	True				
ANR	9465733	UnaryOperationExpression	- 1		9465630	0					
ANR	9465734	UnaryOperator	-		9465630	0					
ANR	9465735	PrimaryExpression	1		9465630	1					
ANR	9465736	IfStatement	if ( in_size > buf_size )		9465630	11					
ANR	9465737	Condition	in_size > buf_size	49:8:622:639	9465630	0	True				
ANR	9465738	RelationalExpression	in_size > buf_size		9465630	0		>			
ANR	9465739	Identifier	in_size		9465630	0					
ANR	9465740	Identifier	buf_size		9465630	1					
ANR	9465741	CompoundStatement		43:28:507:507	9465630	1					
ANR	9465742	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame data is larger than input buffer\\n"" )"	51:8:653:724	9465630	0	True				
ANR	9465743	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame data is larger than input buffer\\n"" )"		9465630	0					
ANR	9465744	Callee	av_log		9465630	0					
ANR	9465745	Identifier	av_log		9465630	0					
ANR	9465746	ArgumentList	avctx		9465630	1					
ANR	9465747	Argument	avctx		9465630	0					
ANR	9465748	Identifier	avctx		9465630	0					
ANR	9465749	Argument	AV_LOG_ERROR		9465630	1					
ANR	9465750	Identifier	AV_LOG_ERROR		9465630	0					
ANR	9465751	Argument	"""Frame data is larger than input buffer\\n"""		9465630	2					
ANR	9465752	PrimaryExpression	"""Frame data is larger than input buffer\\n"""		9465630	0					
ANR	9465753	ReturnStatement	return - 1 ;	53:8:735:744	9465630	1	True				
ANR	9465754	UnaryOperationExpression	- 1		9465630	0					
ANR	9465755	UnaryOperator	-		9465630	0					
ANR	9465756	PrimaryExpression	1		9465630	1					
ANR	9465757	ExpressionStatement	* data_size = out_size	59:4:760:781	9465630	12	True				
ANR	9465758	AssignmentExpression	* data_size = out_size		9465630	0		=			
ANR	9465759	UnaryOperationExpression	* data_size		9465630	0					
ANR	9465760	UnaryOperator	*		9465630	0					
ANR	9465761	Identifier	data_size		9465630	1					
ANR	9465762	Identifier	out_size		9465630	1					
ANR	9465763	IfStatement	if ( in_size == out_size )		9465630	13					
ANR	9465764	Condition	in_size == out_size	63:8:794:812	9465630	0	True				
ANR	9465765	EqualityExpression	in_size == out_size		9465630	0		==			
ANR	9465766	Identifier	in_size		9465630	0					
ANR	9465767	Identifier	out_size		9465630	1					
ANR	9465768	CompoundStatement		57:29:680:680	9465630	1					
ANR	9465769	ForStatement	for ( i = 0 ; i < out_size ; i ++ )		9465630	0					
ANR	9465770	ForInit	i = 0 ;	65:13:831:836	9465630	0	True				
ANR	9465771	AssignmentExpression	i = 0		9465630	0		=			
ANR	9465772	Identifier	i		9465630	0					
ANR	9465773	PrimaryExpression	0		9465630	1					
ANR	9465774	Condition	i < out_size	65:20:838:849	9465630	1	True				
ANR	9465775	RelationalExpression	i < out_size		9465630	0		<			
ANR	9465776	Identifier	i		9465630	0					
ANR	9465777	Identifier	out_size		9465630	1					
ANR	9465778	PostIncDecOperationExpression	i ++	65:34:852:854	9465630	2	True				
ANR	9465779	Identifier	i		9465630	0					
ANR	9465780	IncDec	++		9465630	1					
ANR	9465781	ExpressionStatement	* samples ++ = * buf ++	67:12:870:889	9465630	3	True				
ANR	9465782	AssignmentExpression	* samples ++ = * buf ++		9465630	0		=			
ANR	9465783	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9465784	UnaryOperator	*		9465630	0					
ANR	9465785	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9465786	Identifier	samples		9465630	0					
ANR	9465787	IncDec	++		9465630	1					
ANR	9465788	UnaryOperationExpression	* buf ++		9465630	1					
ANR	9465789	UnaryOperator	*		9465630	0					
ANR	9465790	PostIncDecOperationExpression	buf ++		9465630	1					
ANR	9465791	Identifier	buf		9465630	0					
ANR	9465792	IncDec	++		9465630	1					
ANR	9465793	ReturnStatement	return buf_size ;	69:8:900:915	9465630	1	True				
ANR	9465794	Identifier	buf_size		9465630	0					
ANR	9465795	WhileStatement	while ( out_size > 0 )		9465630	14					
ANR	9465796	Condition	out_size > 0	75:11:938:949	9465630	0	True				
ANR	9465797	RelationalExpression	out_size > 0		9465630	0		>			
ANR	9465798	Identifier	out_size		9465630	0					
ANR	9465799	PrimaryExpression	0		9465630	1					
ANR	9465800	CompoundStatement		73:8:847:860	9465630	1					
ANR	9465801	IdentifierDeclStatement	int code ;	77:8:963:971	9465630	0	True				
ANR	9465802	IdentifierDecl	code		9465630	0					
ANR	9465803	IdentifierDeclType	int		9465630	0					
ANR	9465804	Identifier	code		9465630	1					
ANR	9465805	IdentifierDeclStatement	uint8_t count ;	79:8:982:995	9465630	1	True				
ANR	9465806	IdentifierDecl	count		9465630	0					
ANR	9465807	IdentifierDeclType	uint8_t		9465630	0					
ANR	9465808	Identifier	count		9465630	1					
ANR	9465809	ExpressionStatement	code = ( * buf ) >> 6	81:8:1006:1024	9465630	2	True				
ANR	9465810	AssignmentExpression	code = ( * buf ) >> 6		9465630	0		=			
ANR	9465811	Identifier	code		9465630	0					
ANR	9465812	ShiftExpression	( * buf ) >> 6		9465630	1		>>			
ANR	9465813	UnaryOperationExpression	* buf		9465630	0					
ANR	9465814	UnaryOperator	*		9465630	0					
ANR	9465815	Identifier	buf		9465630	1					
ANR	9465816	PrimaryExpression	6		9465630	1					
ANR	9465817	ExpressionStatement	count = ( * buf ) & 0x3F	83:8:1035:1056	9465630	3	True				
ANR	9465818	AssignmentExpression	count = ( * buf ) & 0x3F		9465630	0		=			
ANR	9465819	Identifier	count		9465630	0					
ANR	9465820	BitAndExpression	( * buf ) & 0x3F		9465630	1		&			
ANR	9465821	UnaryOperationExpression	* buf		9465630	0					
ANR	9465822	UnaryOperator	*		9465630	0					
ANR	9465823	Identifier	buf		9465630	1					
ANR	9465824	PrimaryExpression	0x3F		9465630	1					
ANR	9465825	ExpressionStatement	buf ++	85:8:1067:1072	9465630	4	True				
ANR	9465826	PostIncDecOperationExpression	buf ++		9465630	0					
ANR	9465827	Identifier	buf		9465630	0					
ANR	9465828	IncDec	++		9465630	1					
ANR	9465829	SwitchStatement	switch ( code )		9465630	5					
ANR	9465830	Condition	code	87:15:1090:1093	9465630	0	True				
ANR	9465831	Identifier	code		9465630	0					
ANR	9465832	CompoundStatement		81:21:961:961	9465630	1					
ANR	9465833	Label	case 0 :	89:8:1107:1113	9465630	0	True				
ANR	9465834	ForStatement	for ( count ++ ; count > 0 ; count -- )		9465630	1					
ANR	9465835	ForInit	count ++ ;	91:17:1151:1158	9465630	0	True				
ANR	9465836	PostIncDecOperationExpression	count ++		9465630	0					
ANR	9465837	Identifier	count		9465630	0					
ANR	9465838	IncDec	++		9465630	1					
ANR	9465839	Condition	count > 0	91:26:1160:1168	9465630	1	True				
ANR	9465840	RelationalExpression	count > 0		9465630	0		>			
ANR	9465841	Identifier	count		9465630	0					
ANR	9465842	PrimaryExpression	0		9465630	1					
ANR	9465843	PostIncDecOperationExpression	count --	91:37:1171:1177	9465630	2	True				
ANR	9465844	Identifier	count		9465630	0					
ANR	9465845	IncDec	--		9465630	1					
ANR	9465846	CompoundStatement		85:46:1045:1045	9465630	3					
ANR	9465847	ExpressionStatement	code = * buf ++	93:16:1199:1212	9465630	0	True				
ANR	9465848	AssignmentExpression	code = * buf ++		9465630	0		=			
ANR	9465849	Identifier	code		9465630	0					
ANR	9465850	UnaryOperationExpression	* buf ++		9465630	1					
ANR	9465851	UnaryOperator	*		9465630	0					
ANR	9465852	PostIncDecOperationExpression	buf ++		9465630	1					
ANR	9465853	Identifier	buf		9465630	0					
ANR	9465854	IncDec	++		9465630	1					
ANR	9465855	ExpressionStatement	sample += ws_adpcm_2bit [ code & 0x3 ]	95:16:1231:1266	9465630	1	True				
ANR	9465856	AssignmentExpression	sample += ws_adpcm_2bit [ code & 0x3 ]		9465630	0		+=			
ANR	9465857	Identifier	sample		9465630	0					
ANR	9465858	ArrayIndexing	ws_adpcm_2bit [ code & 0x3 ]		9465630	1					
ANR	9465859	Identifier	ws_adpcm_2bit		9465630	0					
ANR	9465860	BitAndExpression	code & 0x3		9465630	1		&			
ANR	9465861	Identifier	code		9465630	0					
ANR	9465862	PrimaryExpression	0x3		9465630	1					
ANR	9465863	ExpressionStatement	sample = av_clip_uint8 ( sample )	97:16:1285:1315	9465630	2	True				
ANR	9465864	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9465865	Identifier	sample		9465630	0					
ANR	9465866	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9465867	Callee	av_clip_uint8		9465630	0					
ANR	9465868	Identifier	av_clip_uint8		9465630	0					
ANR	9465869	ArgumentList	sample		9465630	1					
ANR	9465870	Argument	sample		9465630	0					
ANR	9465871	Identifier	sample		9465630	0					
ANR	9465872	ExpressionStatement	* samples ++ = sample	99:16:1334:1353	9465630	3	True				
ANR	9465873	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9465874	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9465875	UnaryOperator	*		9465630	0					
ANR	9465876	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9465877	Identifier	samples		9465630	0					
ANR	9465878	IncDec	++		9465630	1					
ANR	9465879	Identifier	sample		9465630	1					
ANR	9465880	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]	101:16:1372:1414	9465630	4	True				
ANR	9465881	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]		9465630	0		+=			
ANR	9465882	Identifier	sample		9465630	0					
ANR	9465883	ArrayIndexing	ws_adpcm_2bit [ ( code >> 2 ) & 0x3 ]		9465630	1					
ANR	9465884	Identifier	ws_adpcm_2bit		9465630	0					
ANR	9465885	BitAndExpression	( code >> 2 ) & 0x3		9465630	1		&			
ANR	9465886	ShiftExpression	code >> 2		9465630	0		>>			
ANR	9465887	Identifier	code		9465630	0					
ANR	9465888	PrimaryExpression	2		9465630	1					
ANR	9465889	PrimaryExpression	0x3		9465630	1					
ANR	9465890	ExpressionStatement	sample = av_clip_uint8 ( sample )	103:16:1433:1463	9465630	5	True				
ANR	9465891	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9465892	Identifier	sample		9465630	0					
ANR	9465893	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9465894	Callee	av_clip_uint8		9465630	0					
ANR	9465895	Identifier	av_clip_uint8		9465630	0					
ANR	9465896	ArgumentList	sample		9465630	1					
ANR	9465897	Argument	sample		9465630	0					
ANR	9465898	Identifier	sample		9465630	0					
ANR	9465899	ExpressionStatement	* samples ++ = sample	105:16:1482:1501	9465630	6	True				
ANR	9465900	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9465901	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9465902	UnaryOperator	*		9465630	0					
ANR	9465903	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9465904	Identifier	samples		9465630	0					
ANR	9465905	IncDec	++		9465630	1					
ANR	9465906	Identifier	sample		9465630	1					
ANR	9465907	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]	107:16:1520:1562	9465630	7	True				
ANR	9465908	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]		9465630	0		+=			
ANR	9465909	Identifier	sample		9465630	0					
ANR	9465910	ArrayIndexing	ws_adpcm_2bit [ ( code >> 4 ) & 0x3 ]		9465630	1					
ANR	9465911	Identifier	ws_adpcm_2bit		9465630	0					
ANR	9465912	BitAndExpression	( code >> 4 ) & 0x3		9465630	1		&			
ANR	9465913	ShiftExpression	code >> 4		9465630	0		>>			
ANR	9465914	Identifier	code		9465630	0					
ANR	9465915	PrimaryExpression	4		9465630	1					
ANR	9465916	PrimaryExpression	0x3		9465630	1					
ANR	9465917	ExpressionStatement	sample = av_clip_uint8 ( sample )	109:16:1581:1611	9465630	8	True				
ANR	9465918	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9465919	Identifier	sample		9465630	0					
ANR	9465920	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9465921	Callee	av_clip_uint8		9465630	0					
ANR	9465922	Identifier	av_clip_uint8		9465630	0					
ANR	9465923	ArgumentList	sample		9465630	1					
ANR	9465924	Argument	sample		9465630	0					
ANR	9465925	Identifier	sample		9465630	0					
ANR	9465926	ExpressionStatement	* samples ++ = sample	111:16:1630:1649	9465630	9	True				
ANR	9465927	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9465928	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9465929	UnaryOperator	*		9465630	0					
ANR	9465930	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9465931	Identifier	samples		9465630	0					
ANR	9465932	IncDec	++		9465630	1					
ANR	9465933	Identifier	sample		9465630	1					
ANR	9465934	ExpressionStatement	sample += ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]	113:16:1668:1710	9465630	10	True				
ANR	9465935	AssignmentExpression	sample += ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]		9465630	0		+=			
ANR	9465936	Identifier	sample		9465630	0					
ANR	9465937	ArrayIndexing	ws_adpcm_2bit [ ( code >> 6 ) & 0x3 ]		9465630	1					
ANR	9465938	Identifier	ws_adpcm_2bit		9465630	0					
ANR	9465939	BitAndExpression	( code >> 6 ) & 0x3		9465630	1		&			
ANR	9465940	ShiftExpression	code >> 6		9465630	0		>>			
ANR	9465941	Identifier	code		9465630	0					
ANR	9465942	PrimaryExpression	6		9465630	1					
ANR	9465943	PrimaryExpression	0x3		9465630	1					
ANR	9465944	ExpressionStatement	sample = av_clip_uint8 ( sample )	115:16:1729:1759	9465630	11	True				
ANR	9465945	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9465946	Identifier	sample		9465630	0					
ANR	9465947	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9465948	Callee	av_clip_uint8		9465630	0					
ANR	9465949	Identifier	av_clip_uint8		9465630	0					
ANR	9465950	ArgumentList	sample		9465630	1					
ANR	9465951	Argument	sample		9465630	0					
ANR	9465952	Identifier	sample		9465630	0					
ANR	9465953	ExpressionStatement	* samples ++ = sample	117:16:1778:1797	9465630	12	True				
ANR	9465954	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9465955	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9465956	UnaryOperator	*		9465630	0					
ANR	9465957	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9465958	Identifier	samples		9465630	0					
ANR	9465959	IncDec	++		9465630	1					
ANR	9465960	Identifier	sample		9465630	1					
ANR	9465961	ExpressionStatement	out_size -= 4	119:16:1816:1829	9465630	13	True				
ANR	9465962	AssignmentExpression	out_size -= 4		9465630	0		-=			
ANR	9465963	Identifier	out_size		9465630	0					
ANR	9465964	PrimaryExpression	4		9465630	1					
ANR	9465965	BreakStatement	break ;	123:12:1859:1864	9465630	2	True				
ANR	9465966	Label	case 1 :	125:8:1875:1881	9465630	3	True				
ANR	9465967	ForStatement	for ( count ++ ; count > 0 ; count -- )		9465630	4					
ANR	9465968	ForInit	count ++ ;	127:17:1919:1926	9465630	0	True				
ANR	9465969	PostIncDecOperationExpression	count ++		9465630	0					
ANR	9465970	Identifier	count		9465630	0					
ANR	9465971	IncDec	++		9465630	1					
ANR	9465972	Condition	count > 0	127:26:1928:1936	9465630	1	True				
ANR	9465973	RelationalExpression	count > 0		9465630	0		>			
ANR	9465974	Identifier	count		9465630	0					
ANR	9465975	PrimaryExpression	0		9465630	1					
ANR	9465976	PostIncDecOperationExpression	count --	127:37:1939:1945	9465630	2	True				
ANR	9465977	Identifier	count		9465630	0					
ANR	9465978	IncDec	--		9465630	1					
ANR	9465979	CompoundStatement		121:46:1813:1813	9465630	3					
ANR	9465980	ExpressionStatement	code = * buf ++	129:16:1967:1980	9465630	0	True				
ANR	9465981	AssignmentExpression	code = * buf ++		9465630	0		=			
ANR	9465982	Identifier	code		9465630	0					
ANR	9465983	UnaryOperationExpression	* buf ++		9465630	1					
ANR	9465984	UnaryOperator	*		9465630	0					
ANR	9465985	PostIncDecOperationExpression	buf ++		9465630	1					
ANR	9465986	Identifier	buf		9465630	0					
ANR	9465987	IncDec	++		9465630	1					
ANR	9465988	ExpressionStatement	sample += ws_adpcm_4bit [ code & 0xF ]	131:16:1999:2034	9465630	1	True				
ANR	9465989	AssignmentExpression	sample += ws_adpcm_4bit [ code & 0xF ]		9465630	0		+=			
ANR	9465990	Identifier	sample		9465630	0					
ANR	9465991	ArrayIndexing	ws_adpcm_4bit [ code & 0xF ]		9465630	1					
ANR	9465992	Identifier	ws_adpcm_4bit		9465630	0					
ANR	9465993	BitAndExpression	code & 0xF		9465630	1		&			
ANR	9465994	Identifier	code		9465630	0					
ANR	9465995	PrimaryExpression	0xF		9465630	1					
ANR	9465996	ExpressionStatement	sample = av_clip_uint8 ( sample )	133:16:2053:2083	9465630	2	True				
ANR	9465997	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9465998	Identifier	sample		9465630	0					
ANR	9465999	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9466000	Callee	av_clip_uint8		9465630	0					
ANR	9466001	Identifier	av_clip_uint8		9465630	0					
ANR	9466002	ArgumentList	sample		9465630	1					
ANR	9466003	Argument	sample		9465630	0					
ANR	9466004	Identifier	sample		9465630	0					
ANR	9466005	ExpressionStatement	* samples ++ = sample	135:16:2102:2121	9465630	3	True				
ANR	9466006	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9466007	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9466008	UnaryOperator	*		9465630	0					
ANR	9466009	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9466010	Identifier	samples		9465630	0					
ANR	9466011	IncDec	++		9465630	1					
ANR	9466012	Identifier	sample		9465630	1					
ANR	9466013	ExpressionStatement	sample += ws_adpcm_4bit [ code >> 4 ]	137:16:2140:2174	9465630	4	True				
ANR	9466014	AssignmentExpression	sample += ws_adpcm_4bit [ code >> 4 ]		9465630	0		+=			
ANR	9466015	Identifier	sample		9465630	0					
ANR	9466016	ArrayIndexing	ws_adpcm_4bit [ code >> 4 ]		9465630	1					
ANR	9466017	Identifier	ws_adpcm_4bit		9465630	0					
ANR	9466018	ShiftExpression	code >> 4		9465630	1		>>			
ANR	9466019	Identifier	code		9465630	0					
ANR	9466020	PrimaryExpression	4		9465630	1					
ANR	9466021	ExpressionStatement	sample = av_clip_uint8 ( sample )	139:16:2193:2223	9465630	5	True				
ANR	9466022	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9466023	Identifier	sample		9465630	0					
ANR	9466024	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9466025	Callee	av_clip_uint8		9465630	0					
ANR	9466026	Identifier	av_clip_uint8		9465630	0					
ANR	9466027	ArgumentList	sample		9465630	1					
ANR	9466028	Argument	sample		9465630	0					
ANR	9466029	Identifier	sample		9465630	0					
ANR	9466030	ExpressionStatement	* samples ++ = sample	141:16:2242:2261	9465630	6	True				
ANR	9466031	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9466032	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9466033	UnaryOperator	*		9465630	0					
ANR	9466034	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9466035	Identifier	samples		9465630	0					
ANR	9466036	IncDec	++		9465630	1					
ANR	9466037	Identifier	sample		9465630	1					
ANR	9466038	ExpressionStatement	out_size -= 2	143:16:2280:2293	9465630	7	True				
ANR	9466039	AssignmentExpression	out_size -= 2		9465630	0		-=			
ANR	9466040	Identifier	out_size		9465630	0					
ANR	9466041	PrimaryExpression	2		9465630	1					
ANR	9466042	BreakStatement	break ;	147:12:2323:2328	9465630	5	True				
ANR	9466043	Label	case 2 :	149:8:2339:2345	9465630	6	True				
ANR	9466044	IfStatement	if ( count & 0x20 )		9465630	7					
ANR	9466045	Condition	count & 0x20	151:16:2385:2396	9465630	0	True				
ANR	9466046	BitAndExpression	count & 0x20		9465630	0		&			
ANR	9466047	Identifier	count		9465630	0					
ANR	9466048	PrimaryExpression	0x20		9465630	1					
ANR	9466049	CompoundStatement		147:16:2299:2307	9465630	1					
ANR	9466050	IdentifierDeclStatement	int8_t t ;	153:16:2434:2442	9465630	0	True				
ANR	9466051	IdentifierDecl	t		9465630	0					
ANR	9466052	IdentifierDeclType	int8_t		9465630	0					
ANR	9466053	Identifier	t		9465630	1					
ANR	9466054	ExpressionStatement	t = count	155:16:2461:2470	9465630	1	True				
ANR	9466055	AssignmentExpression	t = count		9465630	0		=			
ANR	9466056	Identifier	t		9465630	0					
ANR	9466057	Identifier	count		9465630	1					
ANR	9466058	ExpressionStatement	t <<= 3	157:16:2489:2496	9465630	2	True				
ANR	9466059	AssignmentExpression	t <<= 3		9465630	0		<<=			
ANR	9466060	Identifier	t		9465630	0					
ANR	9466061	PrimaryExpression	3		9465630	1					
ANR	9466062	ExpressionStatement	sample += t >> 3	159:16:2515:2531	9465630	3	True				
ANR	9466063	AssignmentExpression	sample += t >> 3		9465630	0		+=			
ANR	9466064	Identifier	sample		9465630	0					
ANR	9466065	ShiftExpression	t >> 3		9465630	1		>>			
ANR	9466066	Identifier	t		9465630	0					
ANR	9466067	PrimaryExpression	3		9465630	1					
ANR	9466068	ExpressionStatement	sample = av_clip_uint8 ( sample )	161:16:2550:2580	9465630	4	True				
ANR	9466069	AssignmentExpression	sample = av_clip_uint8 ( sample )		9465630	0		=			
ANR	9466070	Identifier	sample		9465630	0					
ANR	9466071	CallExpression	av_clip_uint8 ( sample )		9465630	1					
ANR	9466072	Callee	av_clip_uint8		9465630	0					
ANR	9466073	Identifier	av_clip_uint8		9465630	0					
ANR	9466074	ArgumentList	sample		9465630	1					
ANR	9466075	Argument	sample		9465630	0					
ANR	9466076	Identifier	sample		9465630	0					
ANR	9466077	ExpressionStatement	* samples ++ = sample	163:16:2599:2618	9465630	5	True				
ANR	9466078	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9466079	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9466080	UnaryOperator	*		9465630	0					
ANR	9466081	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9466082	Identifier	samples		9465630	0					
ANR	9466083	IncDec	++		9465630	1					
ANR	9466084	Identifier	sample		9465630	1					
ANR	9466085	ExpressionStatement	out_size --	165:16:2637:2647	9465630	6	True				
ANR	9466086	PostIncDecOperationExpression	out_size --		9465630	0					
ANR	9466087	Identifier	out_size		9465630	0					
ANR	9466088	IncDec	--		9465630	1					
ANR	9466089	ElseStatement	else		9465630	0					
ANR	9466090	CompoundStatement		161:19:2534:2534	9465630	0					
ANR	9466091	ForStatement	for ( count ++ ; count > 0 ; count -- )		9465630	0					
ANR	9466092	ForInit	count ++ ;	169:21:2704:2711	9465630	0	True				
ANR	9466093	PostIncDecOperationExpression	count ++		9465630	0					
ANR	9466094	Identifier	count		9465630	0					
ANR	9466095	IncDec	++		9465630	1					
ANR	9466096	Condition	count > 0	169:30:2713:2721	9465630	1	True				
ANR	9466097	RelationalExpression	count > 0		9465630	0		>			
ANR	9466098	Identifier	count		9465630	0					
ANR	9466099	PrimaryExpression	0		9465630	1					
ANR	9466100	PostIncDecOperationExpression	count --	169:41:2724:2730	9465630	2	True				
ANR	9466101	Identifier	count		9465630	0					
ANR	9466102	IncDec	--		9465630	1					
ANR	9466103	CompoundStatement		163:50:2598:2598	9465630	3					
ANR	9466104	ExpressionStatement	* samples ++ = * buf ++	171:20:2756:2775	9465630	0	True				
ANR	9466105	AssignmentExpression	* samples ++ = * buf ++		9465630	0		=			
ANR	9466106	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9466107	UnaryOperator	*		9465630	0					
ANR	9466108	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9466109	Identifier	samples		9465630	0					
ANR	9466110	IncDec	++		9465630	1					
ANR	9466111	UnaryOperationExpression	* buf ++		9465630	1					
ANR	9466112	UnaryOperator	*		9465630	0					
ANR	9466113	PostIncDecOperationExpression	buf ++		9465630	1					
ANR	9466114	Identifier	buf		9465630	0					
ANR	9466115	IncDec	++		9465630	1					
ANR	9466116	ExpressionStatement	out_size --	173:20:2798:2808	9465630	1	True				
ANR	9466117	PostIncDecOperationExpression	out_size --		9465630	0					
ANR	9466118	Identifier	out_size		9465630	0					
ANR	9466119	IncDec	--		9465630	1					
ANR	9466120	ExpressionStatement	sample = buf [ - 1 ]	177:16:2846:2862	9465630	1	True				
ANR	9466121	AssignmentExpression	sample = buf [ - 1 ]		9465630	0		=			
ANR	9466122	Identifier	sample		9465630	0					
ANR	9466123	ArrayIndexing	buf [ - 1 ]		9465630	1					
ANR	9466124	Identifier	buf		9465630	0					
ANR	9466125	UnaryOperationExpression	- 1		9465630	1					
ANR	9466126	UnaryOperator	-		9465630	0					
ANR	9466127	PrimaryExpression	1		9465630	1					
ANR	9466128	BreakStatement	break ;	181:12:2892:2897	9465630	8	True				
ANR	9466129	Label	default :	183:8:2908:2915	9465630	9	True				
ANR	9466130	Identifier	default		9465630	0					
ANR	9466131	ForStatement	for ( count ++ ; count > 0 ; count -- )		9465630	10					
ANR	9466132	ForInit	count ++ ;	185:16:2944:2951	9465630	0	True				
ANR	9466133	PostIncDecOperationExpression	count ++		9465630	0					
ANR	9466134	Identifier	count		9465630	0					
ANR	9466135	IncDec	++		9465630	1					
ANR	9466136	Condition	count > 0	185:25:2953:2961	9465630	1	True				
ANR	9466137	RelationalExpression	count > 0		9465630	0		>			
ANR	9466138	Identifier	count		9465630	0					
ANR	9466139	PrimaryExpression	0		9465630	1					
ANR	9466140	PostIncDecOperationExpression	count --	185:36:2964:2970	9465630	2	True				
ANR	9466141	Identifier	count		9465630	0					
ANR	9466142	IncDec	--		9465630	1					
ANR	9466143	CompoundStatement		179:45:2838:2838	9465630	3					
ANR	9466144	ExpressionStatement	* samples ++ = sample	187:16:2992:3011	9465630	0	True				
ANR	9466145	AssignmentExpression	* samples ++ = sample		9465630	0		=			
ANR	9466146	UnaryOperationExpression	* samples ++		9465630	0					
ANR	9466147	UnaryOperator	*		9465630	0					
ANR	9466148	PostIncDecOperationExpression	samples ++		9465630	1					
ANR	9466149	Identifier	samples		9465630	0					
ANR	9466150	IncDec	++		9465630	1					
ANR	9466151	Identifier	sample		9465630	1					
ANR	9466152	ExpressionStatement	out_size --	189:16:3030:3040	9465630	1	True				
ANR	9466153	PostIncDecOperationExpression	out_size --		9465630	0					
ANR	9466154	Identifier	out_size		9465630	0					
ANR	9466155	IncDec	--		9465630	1					
ANR	9466156	ReturnStatement	return buf_size ;	199:4:3082:3097	9465630	15	True				
ANR	9466157	Identifier	buf_size		9465630	0					
ANR	9466158	ReturnType	static int		9465630	1					
ANR	9466159	Identifier	ws_snd_decode_frame		9465630	2					
ANR	9466160	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		9465630	3					
ANR	9466161	Parameter	AVCodecContext * avctx	1:31:31:51	9465630	0	True				
ANR	9466162	ParameterType	AVCodecContext *		9465630	0					
ANR	9466163	Identifier	avctx		9465630	1					
ANR	9466164	Parameter	void * data	3:16:71:80	9465630	1	True				
ANR	9466165	ParameterType	void *		9465630	0					
ANR	9466166	Identifier	data		9465630	1					
ANR	9466167	Parameter	int * data_size	3:28:83:96	9465630	2	True				
ANR	9466168	ParameterType	int *		9465630	0					
ANR	9466169	Identifier	data_size		9465630	1					
ANR	9466170	Parameter	AVPacket * avpkt	5:16:116:130	9465630	3	True				
ANR	9466171	ParameterType	AVPacket *		9465630	0					
ANR	9466172	Identifier	avpkt		9465630	1					
ANR	9466173	CFGEntryNode	ENTRY		9465630		True				
ANR	9466174	CFGExitNode	EXIT		9465630		True				
ANR	9466175	Symbol	code		9465630						
ANR	9466176	Symbol	data		9465630						
ANR	9466177	Symbol	ws_adpcm_2bit		9465630						
ANR	9466178	Symbol	av_clip_uint8		9465630						
ANR	9466179	Symbol	ws_adpcm_4bit		9465630						
ANR	9466180	Symbol	in_size		9465630						
ANR	9466181	Symbol	avpkt		9465630						
ANR	9466182	Symbol	* data_size		9465630						
ANR	9466183	Symbol	avpkt -> size		9465630						
ANR	9466184	Symbol	avctx		9465630						
ANR	9466185	Symbol	* samples ++		9465630						
ANR	9466186	Symbol	data_size		9465630						
ANR	9466187	Symbol	* avpkt		9465630						
ANR	9466188	Symbol	* buf		9465630						
ANR	9466189	Symbol	AV_LOG_ERROR		9465630						
ANR	9466190	Symbol	buf_size		9465630						
ANR	9466191	Symbol	count		9465630						
ANR	9466192	Symbol	i		9465630						
ANR	9466193	Symbol	* ws_adpcm_2bit		9465630						
ANR	9466194	Symbol	out_size		9465630						
ANR	9466195	Symbol	sample		9465630						
ANR	9466196	Symbol	samples		9465630						
ANR	9466197	Symbol	* buf ++		9465630						
ANR	9466198	Symbol	buf		9465630						
ANR	9466199	Symbol	* ws_adpcm_4bit		9465630						
ANR	9466200	Symbol	t		9465630						
ANR	9466201	Symbol	avpkt -> data		9465630						
ANR	9466202	Symbol	* code		9465630						
ANR	9466203	Symbol	AV_RL16		9465630						
