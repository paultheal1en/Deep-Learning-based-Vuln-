command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7666329	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sd_create_1.c								
ANR	7666330	Function	sd_create	1:0:0:2801							
ANR	7666331	FunctionDef	"sd_create (const char * filename , QemuOpts * opts , Error * * errp)"		7666330	0					
ANR	7666332	CompoundStatement		5:0:96:2801	7666330	0					
ANR	7666333	IdentifierDeclStatement	int ret = 0 ;	7:4:103:114	7666330	0	True				
ANR	7666334	IdentifierDecl	ret = 0		7666330	0					
ANR	7666335	IdentifierDeclType	int		7666330	0					
ANR	7666336	Identifier	ret		7666330	1					
ANR	7666337	AssignmentExpression	ret = 0		7666330	2		=			
ANR	7666338	Identifier	ret		7666330	0					
ANR	7666339	PrimaryExpression	0		7666330	1					
ANR	7666340	IdentifierDeclStatement	uint32_t vid = 0 ;	9:4:121:137	7666330	1	True				
ANR	7666341	IdentifierDecl	vid = 0		7666330	0					
ANR	7666342	IdentifierDeclType	uint32_t		7666330	0					
ANR	7666343	Identifier	vid		7666330	1					
ANR	7666344	AssignmentExpression	vid = 0		7666330	2		=			
ANR	7666345	Identifier	vid		7666330	0					
ANR	7666346	PrimaryExpression	0		7666330	1					
ANR	7666347	IdentifierDeclStatement	char * backing_file = NULL ;	11:4:144:169	7666330	2	True				
ANR	7666348	IdentifierDecl	* backing_file = NULL		7666330	0					
ANR	7666349	IdentifierDeclType	char *		7666330	0					
ANR	7666350	Identifier	backing_file		7666330	1					
ANR	7666351	AssignmentExpression	* backing_file = NULL		7666330	2		=			
ANR	7666352	Identifier	NULL		7666330	0					
ANR	7666353	Identifier	NULL		7666330	1					
ANR	7666354	IdentifierDeclStatement	char * buf = NULL ;	13:4:176:192	7666330	3	True				
ANR	7666355	IdentifierDecl	* buf = NULL		7666330	0					
ANR	7666356	IdentifierDeclType	char *		7666330	0					
ANR	7666357	Identifier	buf		7666330	1					
ANR	7666358	AssignmentExpression	* buf = NULL		7666330	2		=			
ANR	7666359	Identifier	NULL		7666330	0					
ANR	7666360	Identifier	NULL		7666330	1					
ANR	7666361	IdentifierDeclStatement	BDRVSheepdogState * s ;	15:4:199:219	7666330	4	True				
ANR	7666362	IdentifierDecl	* s		7666330	0					
ANR	7666363	IdentifierDeclType	BDRVSheepdogState *		7666330	0					
ANR	7666364	Identifier	s		7666330	1					
ANR	7666365	IdentifierDeclStatement	char tag [ SD_MAX_VDI_TAG_LEN ] ;	17:4:226:254	7666330	5	True				
ANR	7666366	IdentifierDecl	tag [ SD_MAX_VDI_TAG_LEN ]		7666330	0					
ANR	7666367	IdentifierDeclType	char [ SD_MAX_VDI_TAG_LEN ]		7666330	0					
ANR	7666368	Identifier	tag		7666330	1					
ANR	7666369	Identifier	SD_MAX_VDI_TAG_LEN		7666330	2					
ANR	7666370	IdentifierDeclStatement	uint32_t snapid ;	19:4:261:276	7666330	6	True				
ANR	7666371	IdentifierDecl	snapid		7666330	0					
ANR	7666372	IdentifierDeclType	uint32_t		7666330	0					
ANR	7666373	Identifier	snapid		7666330	1					
ANR	7666374	IdentifierDeclStatement	bool prealloc = false ;	21:4:283:304	7666330	7	True				
ANR	7666375	IdentifierDecl	prealloc = false		7666330	0					
ANR	7666376	IdentifierDeclType	bool		7666330	0					
ANR	7666377	Identifier	prealloc		7666330	1					
ANR	7666378	AssignmentExpression	prealloc = false		7666330	2		=			
ANR	7666379	Identifier	false		7666330	0					
ANR	7666380	Identifier	false		7666330	1					
ANR	7666381	ExpressionStatement	s = g_malloc0 ( sizeof ( BDRVSheepdogState ) )	25:4:313:353	7666330	8	True				
ANR	7666382	AssignmentExpression	s = g_malloc0 ( sizeof ( BDRVSheepdogState ) )		7666330	0		=			
ANR	7666383	Identifier	s		7666330	0					
ANR	7666384	CallExpression	g_malloc0 ( sizeof ( BDRVSheepdogState ) )		7666330	1					
ANR	7666385	Callee	g_malloc0		7666330	0					
ANR	7666386	Identifier	g_malloc0		7666330	0					
ANR	7666387	ArgumentList	sizeof ( BDRVSheepdogState )		7666330	1					
ANR	7666388	Argument	sizeof ( BDRVSheepdogState )		7666330	0					
ANR	7666389	SizeofExpression	sizeof ( BDRVSheepdogState )		7666330	0					
ANR	7666390	Sizeof	sizeof		7666330	0					
ANR	7666391	SizeofOperand	BDRVSheepdogState		7666330	1					
ANR	7666392	ExpressionStatement	"memset ( tag , 0 , sizeof ( tag ) )"	29:4:362:389	7666330	9	True				
ANR	7666393	CallExpression	"memset ( tag , 0 , sizeof ( tag ) )"		7666330	0					
ANR	7666394	Callee	memset		7666330	0					
ANR	7666395	Identifier	memset		7666330	0					
ANR	7666396	ArgumentList	tag		7666330	1					
ANR	7666397	Argument	tag		7666330	0					
ANR	7666398	Identifier	tag		7666330	0					
ANR	7666399	Argument	0		7666330	1					
ANR	7666400	PrimaryExpression	0		7666330	0					
ANR	7666401	Argument	sizeof ( tag )		7666330	2					
ANR	7666402	SizeofExpression	sizeof ( tag )		7666330	0					
ANR	7666403	Sizeof	sizeof		7666330	0					
ANR	7666404	SizeofOperand	tag		7666330	1					
ANR	7666405	IfStatement	"if ( strstr ( filename , ""://"" ) )"		7666330	10					
ANR	7666406	Condition	"strstr ( filename , ""://"" )"	31:8:400:422	7666330	0	True				
ANR	7666407	CallExpression	"strstr ( filename , ""://"" )"		7666330	0					
ANR	7666408	Callee	strstr		7666330	0					
ANR	7666409	Identifier	strstr		7666330	0					
ANR	7666410	ArgumentList	filename		7666330	1					
ANR	7666411	Argument	filename		7666330	0					
ANR	7666412	Identifier	filename		7666330	0					
ANR	7666413	Argument	"""://"""		7666330	1					
ANR	7666414	PrimaryExpression	"""://"""		7666330	0					
ANR	7666415	CompoundStatement		27:33:328:328	7666330	1					
ANR	7666416	ExpressionStatement	"ret = sd_parse_uri ( s , filename , s -> name , & snapid , tag )"	33:8:436:490	7666330	0	True				
ANR	7666417	AssignmentExpression	"ret = sd_parse_uri ( s , filename , s -> name , & snapid , tag )"		7666330	0		=			
ANR	7666418	Identifier	ret		7666330	0					
ANR	7666419	CallExpression	"sd_parse_uri ( s , filename , s -> name , & snapid , tag )"		7666330	1					
ANR	7666420	Callee	sd_parse_uri		7666330	0					
ANR	7666421	Identifier	sd_parse_uri		7666330	0					
ANR	7666422	ArgumentList	s		7666330	1					
ANR	7666423	Argument	s		7666330	0					
ANR	7666424	Identifier	s		7666330	0					
ANR	7666425	Argument	filename		7666330	1					
ANR	7666426	Identifier	filename		7666330	0					
ANR	7666427	Argument	s -> name		7666330	2					
ANR	7666428	PtrMemberAccess	s -> name		7666330	0					
ANR	7666429	Identifier	s		7666330	0					
ANR	7666430	Identifier	name		7666330	1					
ANR	7666431	Argument	& snapid		7666330	3					
ANR	7666432	UnaryOperationExpression	& snapid		7666330	0					
ANR	7666433	UnaryOperator	&		7666330	0					
ANR	7666434	Identifier	snapid		7666330	1					
ANR	7666435	Argument	tag		7666330	4					
ANR	7666436	Identifier	tag		7666330	0					
ANR	7666437	ElseStatement	else		7666330	0					
ANR	7666438	CompoundStatement		31:11:407:407	7666330	0					
ANR	7666439	ExpressionStatement	"ret = parse_vdiname ( s , filename , s -> name , & snapid , tag )"	37:8:515:570	7666330	0	True				
ANR	7666440	AssignmentExpression	"ret = parse_vdiname ( s , filename , s -> name , & snapid , tag )"		7666330	0		=			
ANR	7666441	Identifier	ret		7666330	0					
ANR	7666442	CallExpression	"parse_vdiname ( s , filename , s -> name , & snapid , tag )"		7666330	1					
ANR	7666443	Callee	parse_vdiname		7666330	0					
ANR	7666444	Identifier	parse_vdiname		7666330	0					
ANR	7666445	ArgumentList	s		7666330	1					
ANR	7666446	Argument	s		7666330	0					
ANR	7666447	Identifier	s		7666330	0					
ANR	7666448	Argument	filename		7666330	1					
ANR	7666449	Identifier	filename		7666330	0					
ANR	7666450	Argument	s -> name		7666330	2					
ANR	7666451	PtrMemberAccess	s -> name		7666330	0					
ANR	7666452	Identifier	s		7666330	0					
ANR	7666453	Identifier	name		7666330	1					
ANR	7666454	Argument	& snapid		7666330	3					
ANR	7666455	UnaryOperationExpression	& snapid		7666330	0					
ANR	7666456	UnaryOperator	&		7666330	0					
ANR	7666457	Identifier	snapid		7666330	1					
ANR	7666458	Argument	tag		7666330	4					
ANR	7666459	Identifier	tag		7666330	0					
ANR	7666460	IfStatement	if ( ret < 0 )		7666330	11					
ANR	7666461	Condition	ret < 0	41:8:588:594	7666330	0	True				
ANR	7666462	RelationalExpression	ret < 0		7666330	0		<			
ANR	7666463	Identifier	ret		7666330	0					
ANR	7666464	PrimaryExpression	0		7666330	1					
ANR	7666465	CompoundStatement		37:17:500:500	7666330	1					
ANR	7666466	ExpressionStatement	"error_setg ( errp , ""Can't parse filename"" )"	43:8:608:648	7666330	0	True				
ANR	7666467	CallExpression	"error_setg ( errp , ""Can't parse filename"" )"		7666330	0					
ANR	7666468	Callee	error_setg		7666330	0					
ANR	7666469	Identifier	error_setg		7666330	0					
ANR	7666470	ArgumentList	errp		7666330	1					
ANR	7666471	Argument	errp		7666330	0					
ANR	7666472	Identifier	errp		7666330	0					
ANR	7666473	Argument	"""Can't parse filename"""		7666330	1					
ANR	7666474	PrimaryExpression	"""Can't parse filename"""		7666330	0					
ANR	7666475	GotoStatement	goto out ;	45:8:659:667	7666330	1	True				
ANR	7666476	Identifier	out		7666330	0					
ANR	7666477	ExpressionStatement	"s -> inode . vdi_size = qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"	51:4:683:749	7666330	12	True				
ANR	7666478	AssignmentExpression	"s -> inode . vdi_size = qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"		7666330	0		=			
ANR	7666479	MemberAccess	s -> inode . vdi_size		7666330	0					
ANR	7666480	PtrMemberAccess	s -> inode		7666330	0					
ANR	7666481	Identifier	s		7666330	0					
ANR	7666482	Identifier	inode		7666330	1					
ANR	7666483	Identifier	vdi_size		7666330	1					
ANR	7666484	CallExpression	"qemu_opt_get_size_del ( opts , BLOCK_OPT_SIZE , 0 )"		7666330	1					
ANR	7666485	Callee	qemu_opt_get_size_del		7666330	0					
ANR	7666486	Identifier	qemu_opt_get_size_del		7666330	0					
ANR	7666487	ArgumentList	opts		7666330	1					
ANR	7666488	Argument	opts		7666330	0					
ANR	7666489	Identifier	opts		7666330	0					
ANR	7666490	Argument	BLOCK_OPT_SIZE		7666330	1					
ANR	7666491	Identifier	BLOCK_OPT_SIZE		7666330	0					
ANR	7666492	Argument	0		7666330	2					
ANR	7666493	PrimaryExpression	0		7666330	0					
ANR	7666494	ExpressionStatement	"backing_file = qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"	53:4:756:817	7666330	13	True				
ANR	7666495	AssignmentExpression	"backing_file = qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"		7666330	0		=			
ANR	7666496	Identifier	backing_file		7666330	0					
ANR	7666497	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_BACKING_FILE )"		7666330	1					
ANR	7666498	Callee	qemu_opt_get_del		7666330	0					
ANR	7666499	Identifier	qemu_opt_get_del		7666330	0					
ANR	7666500	ArgumentList	opts		7666330	1					
ANR	7666501	Argument	opts		7666330	0					
ANR	7666502	Identifier	opts		7666330	0					
ANR	7666503	Argument	BLOCK_OPT_BACKING_FILE		7666330	1					
ANR	7666504	Identifier	BLOCK_OPT_BACKING_FILE		7666330	0					
ANR	7666505	ExpressionStatement	"buf = qemu_opt_get_del ( opts , BLOCK_OPT_PREALLOC )"	55:4:824:872	7666330	14	True				
ANR	7666506	AssignmentExpression	"buf = qemu_opt_get_del ( opts , BLOCK_OPT_PREALLOC )"		7666330	0		=			
ANR	7666507	Identifier	buf		7666330	0					
ANR	7666508	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_PREALLOC )"		7666330	1					
ANR	7666509	Callee	qemu_opt_get_del		7666330	0					
ANR	7666510	Identifier	qemu_opt_get_del		7666330	0					
ANR	7666511	ArgumentList	opts		7666330	1					
ANR	7666512	Argument	opts		7666330	0					
ANR	7666513	Identifier	opts		7666330	0					
ANR	7666514	Argument	BLOCK_OPT_PREALLOC		7666330	1					
ANR	7666515	Identifier	BLOCK_OPT_PREALLOC		7666330	0					
ANR	7666516	IfStatement	"if ( ! buf || ! strcmp ( buf , ""off"" ) )"		7666330	15					
ANR	7666517	Condition	"! buf || ! strcmp ( buf , ""off"" )"	57:8:883:909	7666330	0	True				
ANR	7666518	OrExpression	"! buf || ! strcmp ( buf , ""off"" )"		7666330	0		||			
ANR	7666519	UnaryOperationExpression	! buf		7666330	0					
ANR	7666520	UnaryOperator	!		7666330	0					
ANR	7666521	Identifier	buf		7666330	1					
ANR	7666522	UnaryOperationExpression	"! strcmp ( buf , ""off"" )"		7666330	1					
ANR	7666523	UnaryOperator	!		7666330	0					
ANR	7666524	CallExpression	"strcmp ( buf , ""off"" )"		7666330	1					
ANR	7666525	Callee	strcmp		7666330	0					
ANR	7666526	Identifier	strcmp		7666330	0					
ANR	7666527	ArgumentList	buf		7666330	1					
ANR	7666528	Argument	buf		7666330	0					
ANR	7666529	Identifier	buf		7666330	0					
ANR	7666530	Argument	"""off"""		7666330	1					
ANR	7666531	PrimaryExpression	"""off"""		7666330	0					
ANR	7666532	CompoundStatement		53:37:815:815	7666330	1					
ANR	7666533	ExpressionStatement	prealloc = false	59:8:923:939	7666330	0	True				
ANR	7666534	AssignmentExpression	prealloc = false		7666330	0		=			
ANR	7666535	Identifier	prealloc		7666330	0					
ANR	7666536	Identifier	false		7666330	1					
ANR	7666537	ElseStatement	else		7666330	0					
ANR	7666538	IfStatement	"if ( ! strcmp ( buf , ""full"" ) )"		7666330	0					
ANR	7666539	Condition	"! strcmp ( buf , ""full"" )"	61:15:957:976	7666330	0	True				
ANR	7666540	UnaryOperationExpression	"! strcmp ( buf , ""full"" )"		7666330	0					
ANR	7666541	UnaryOperator	!		7666330	0					
ANR	7666542	CallExpression	"strcmp ( buf , ""full"" )"		7666330	1					
ANR	7666543	Callee	strcmp		7666330	0					
ANR	7666544	Identifier	strcmp		7666330	0					
ANR	7666545	ArgumentList	buf		7666330	1					
ANR	7666546	Argument	buf		7666330	0					
ANR	7666547	Identifier	buf		7666330	0					
ANR	7666548	Argument	"""full"""		7666330	1					
ANR	7666549	PrimaryExpression	"""full"""		7666330	0					
ANR	7666550	CompoundStatement		57:37:882:882	7666330	1					
ANR	7666551	ExpressionStatement	prealloc = true	63:8:990:1005	7666330	0	True				
ANR	7666552	AssignmentExpression	prealloc = true		7666330	0		=			
ANR	7666553	Identifier	prealloc		7666330	0					
ANR	7666554	Identifier	true		7666330	1					
ANR	7666555	ElseStatement	else		7666330	0					
ANR	7666556	CompoundStatement		61:11:922:922	7666330	0					
ANR	7666557	ExpressionStatement	"error_setg ( errp , ""Invalid preallocation mode: '%s'"" , buf )"	67:8:1030:1087	7666330	0	True				
ANR	7666558	CallExpression	"error_setg ( errp , ""Invalid preallocation mode: '%s'"" , buf )"		7666330	0					
ANR	7666559	Callee	error_setg		7666330	0					
ANR	7666560	Identifier	error_setg		7666330	0					
ANR	7666561	ArgumentList	errp		7666330	1					
ANR	7666562	Argument	errp		7666330	0					
ANR	7666563	Identifier	errp		7666330	0					
ANR	7666564	Argument	"""Invalid preallocation mode: '%s'"""		7666330	1					
ANR	7666565	PrimaryExpression	"""Invalid preallocation mode: '%s'"""		7666330	0					
ANR	7666566	Argument	buf		7666330	2					
ANR	7666567	Identifier	buf		7666330	0					
ANR	7666568	ExpressionStatement	ret = - EINVAL	69:8:1098:1111	7666330	1	True				
ANR	7666569	AssignmentExpression	ret = - EINVAL		7666330	0		=			
ANR	7666570	Identifier	ret		7666330	0					
ANR	7666571	UnaryOperationExpression	- EINVAL		7666330	1					
ANR	7666572	UnaryOperator	-		7666330	0					
ANR	7666573	Identifier	EINVAL		7666330	1					
ANR	7666574	GotoStatement	goto out ;	71:8:1122:1130	7666330	2	True				
ANR	7666575	Identifier	out		7666330	0					
ANR	7666576	ExpressionStatement	g_free ( buf )	77:4:1146:1157	7666330	16	True				
ANR	7666577	CallExpression	g_free ( buf )		7666330	0					
ANR	7666578	Callee	g_free		7666330	0					
ANR	7666579	Identifier	g_free		7666330	0					
ANR	7666580	ArgumentList	buf		7666330	1					
ANR	7666581	Argument	buf		7666330	0					
ANR	7666582	Identifier	buf		7666330	0					
ANR	7666583	ExpressionStatement	"buf = qemu_opt_get_del ( opts , BLOCK_OPT_REDUNDANCY )"	79:4:1164:1214	7666330	17	True				
ANR	7666584	AssignmentExpression	"buf = qemu_opt_get_del ( opts , BLOCK_OPT_REDUNDANCY )"		7666330	0		=			
ANR	7666585	Identifier	buf		7666330	0					
ANR	7666586	CallExpression	"qemu_opt_get_del ( opts , BLOCK_OPT_REDUNDANCY )"		7666330	1					
ANR	7666587	Callee	qemu_opt_get_del		7666330	0					
ANR	7666588	Identifier	qemu_opt_get_del		7666330	0					
ANR	7666589	ArgumentList	opts		7666330	1					
ANR	7666590	Argument	opts		7666330	0					
ANR	7666591	Identifier	opts		7666330	0					
ANR	7666592	Argument	BLOCK_OPT_REDUNDANCY		7666330	1					
ANR	7666593	Identifier	BLOCK_OPT_REDUNDANCY		7666330	0					
ANR	7666594	IfStatement	if ( buf )		7666330	18					
ANR	7666595	Condition	buf	81:8:1225:1227	7666330	0	True				
ANR	7666596	Identifier	buf		7666330	0					
ANR	7666597	CompoundStatement		77:13:1133:1133	7666330	1					
ANR	7666598	ExpressionStatement	"ret = parse_redundancy ( s , buf )"	83:8:1241:1271	7666330	0	True				
ANR	7666599	AssignmentExpression	"ret = parse_redundancy ( s , buf )"		7666330	0		=			
ANR	7666600	Identifier	ret		7666330	0					
ANR	7666601	CallExpression	"parse_redundancy ( s , buf )"		7666330	1					
ANR	7666602	Callee	parse_redundancy		7666330	0					
ANR	7666603	Identifier	parse_redundancy		7666330	0					
ANR	7666604	ArgumentList	s		7666330	1					
ANR	7666605	Argument	s		7666330	0					
ANR	7666606	Identifier	s		7666330	0					
ANR	7666607	Argument	buf		7666330	1					
ANR	7666608	Identifier	buf		7666330	0					
ANR	7666609	IfStatement	if ( ret < 0 )		7666330	1					
ANR	7666610	Condition	ret < 0	85:12:1286:1292	7666330	0	True				
ANR	7666611	RelationalExpression	ret < 0		7666330	0		<			
ANR	7666612	Identifier	ret		7666330	0					
ANR	7666613	PrimaryExpression	0		7666330	1					
ANR	7666614	CompoundStatement		81:21:1198:1198	7666330	1					
ANR	7666615	ExpressionStatement	"error_setg ( errp , ""Invalid redundancy mode: '%s'"" , buf )"	87:12:1310:1364	7666330	0	True				
ANR	7666616	CallExpression	"error_setg ( errp , ""Invalid redundancy mode: '%s'"" , buf )"		7666330	0					
ANR	7666617	Callee	error_setg		7666330	0					
ANR	7666618	Identifier	error_setg		7666330	0					
ANR	7666619	ArgumentList	errp		7666330	1					
ANR	7666620	Argument	errp		7666330	0					
ANR	7666621	Identifier	errp		7666330	0					
ANR	7666622	Argument	"""Invalid redundancy mode: '%s'"""		7666330	1					
ANR	7666623	PrimaryExpression	"""Invalid redundancy mode: '%s'"""		7666330	0					
ANR	7666624	Argument	buf		7666330	2					
ANR	7666625	Identifier	buf		7666330	0					
ANR	7666626	GotoStatement	goto out ;	89:12:1379:1387	7666330	1	True				
ANR	7666627	Identifier	out		7666330	0					
ANR	7666628	IfStatement	if ( s -> inode . vdi_size > SD_MAX_VDI_SIZE )		7666330	19					
ANR	7666629	Condition	s -> inode . vdi_size > SD_MAX_VDI_SIZE	97:8:1418:1452	7666330	0	True				
ANR	7666630	RelationalExpression	s -> inode . vdi_size > SD_MAX_VDI_SIZE		7666330	0		>			
ANR	7666631	MemberAccess	s -> inode . vdi_size		7666330	0					
ANR	7666632	PtrMemberAccess	s -> inode		7666330	0					
ANR	7666633	Identifier	s		7666330	0					
ANR	7666634	Identifier	inode		7666330	1					
ANR	7666635	Identifier	vdi_size		7666330	1					
ANR	7666636	Identifier	SD_MAX_VDI_SIZE		7666330	1					
ANR	7666637	CompoundStatement		93:45:1358:1358	7666330	1					
ANR	7666638	ExpressionStatement	"error_setg ( errp , ""too big image size"" )"	99:8:1466:1504	7666330	0	True				
ANR	7666639	CallExpression	"error_setg ( errp , ""too big image size"" )"		7666330	0					
ANR	7666640	Callee	error_setg		7666330	0					
ANR	7666641	Identifier	error_setg		7666330	0					
ANR	7666642	ArgumentList	errp		7666330	1					
ANR	7666643	Argument	errp		7666330	0					
ANR	7666644	Identifier	errp		7666330	0					
ANR	7666645	Argument	"""too big image size"""		7666330	1					
ANR	7666646	PrimaryExpression	"""too big image size"""		7666330	0					
ANR	7666647	ExpressionStatement	ret = - EINVAL	101:8:1515:1528	7666330	1	True				
ANR	7666648	AssignmentExpression	ret = - EINVAL		7666330	0		=			
ANR	7666649	Identifier	ret		7666330	0					
ANR	7666650	UnaryOperationExpression	- EINVAL		7666330	1					
ANR	7666651	UnaryOperator	-		7666330	0					
ANR	7666652	Identifier	EINVAL		7666330	1					
ANR	7666653	GotoStatement	goto out ;	103:8:1539:1547	7666330	2	True				
ANR	7666654	Identifier	out		7666330	0					
ANR	7666655	IfStatement	if ( backing_file )		7666330	20					
ANR	7666656	Condition	backing_file	109:8:1567:1578	7666330	0	True				
ANR	7666657	Identifier	backing_file		7666330	0					
ANR	7666658	CompoundStatement		111:8:1560:1576	7666330	1					
ANR	7666659	IdentifierDeclStatement	BlockDriverState * bs ;	111:8:1592:1612	7666330	0	True				
ANR	7666660	IdentifierDecl	* bs		7666330	0					
ANR	7666661	IdentifierDeclType	BlockDriverState *		7666330	0					
ANR	7666662	Identifier	bs		7666330	1					
ANR	7666663	IdentifierDeclStatement	BDRVSheepdogState * base ;	113:8:1623:1646	7666330	1	True				
ANR	7666664	IdentifierDecl	* base		7666330	0					
ANR	7666665	IdentifierDeclType	BDRVSheepdogState *		7666330	0					
ANR	7666666	Identifier	base		7666330	1					
ANR	7666667	IdentifierDeclStatement	BlockDriver * drv ;	115:8:1657:1673	7666330	2	True				
ANR	7666668	IdentifierDecl	* drv		7666330	0					
ANR	7666669	IdentifierDeclType	BlockDriver *		7666330	0					
ANR	7666670	Identifier	drv		7666330	1					
ANR	7666671	ExpressionStatement	"drv = bdrv_find_protocol ( backing_file , true )"	121:8:1754:1798	7666330	3	True				
ANR	7666672	AssignmentExpression	"drv = bdrv_find_protocol ( backing_file , true )"		7666330	0		=			
ANR	7666673	Identifier	drv		7666330	0					
ANR	7666674	CallExpression	"bdrv_find_protocol ( backing_file , true )"		7666330	1					
ANR	7666675	Callee	bdrv_find_protocol		7666330	0					
ANR	7666676	Identifier	bdrv_find_protocol		7666330	0					
ANR	7666677	ArgumentList	backing_file		7666330	1					
ANR	7666678	Argument	backing_file		7666330	0					
ANR	7666679	Identifier	backing_file		7666330	0					
ANR	7666680	Argument	true		7666330	1					
ANR	7666681	Identifier	true		7666330	0					
ANR	7666682	IfStatement	"if ( ! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0 )"		7666330	4					
ANR	7666683	Condition	"! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"	123:12:1813:1863	7666330	0	True				
ANR	7666684	OrExpression	"! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"		7666330	0		||			
ANR	7666685	UnaryOperationExpression	! drv		7666330	0					
ANR	7666686	UnaryOperator	!		7666330	0					
ANR	7666687	Identifier	drv		7666330	1					
ANR	7666688	EqualityExpression	"strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"		7666330	1		!=			
ANR	7666689	CallExpression	"strcmp ( drv -> protocol_name , ""sheepdog"" )"		7666330	0					
ANR	7666690	Callee	strcmp		7666330	0					
ANR	7666691	Identifier	strcmp		7666330	0					
ANR	7666692	ArgumentList	drv -> protocol_name		7666330	1					
ANR	7666693	Argument	drv -> protocol_name		7666330	0					
ANR	7666694	PtrMemberAccess	drv -> protocol_name		7666330	0					
ANR	7666695	Identifier	drv		7666330	0					
ANR	7666696	Identifier	protocol_name		7666330	1					
ANR	7666697	Argument	"""sheepdog"""		7666330	1					
ANR	7666698	PrimaryExpression	"""sheepdog"""		7666330	0					
ANR	7666699	PrimaryExpression	0		7666330	1					
ANR	7666700	CompoundStatement		119:65:1769:1769	7666330	1					
ANR	7666701	ExpressionStatement	"error_setg ( errp , ""backing_file must be a sheepdog image"" )"	125:12:1881:1938	7666330	0	True				
ANR	7666702	CallExpression	"error_setg ( errp , ""backing_file must be a sheepdog image"" )"		7666330	0					
ANR	7666703	Callee	error_setg		7666330	0					
ANR	7666704	Identifier	error_setg		7666330	0					
ANR	7666705	ArgumentList	errp		7666330	1					
ANR	7666706	Argument	errp		7666330	0					
ANR	7666707	Identifier	errp		7666330	0					
ANR	7666708	Argument	"""backing_file must be a sheepdog image"""		7666330	1					
ANR	7666709	PrimaryExpression	"""backing_file must be a sheepdog image"""		7666330	0					
ANR	7666710	ExpressionStatement	ret = - EINVAL	127:12:1953:1966	7666330	1	True				
ANR	7666711	AssignmentExpression	ret = - EINVAL		7666330	0		=			
ANR	7666712	Identifier	ret		7666330	0					
ANR	7666713	UnaryOperationExpression	- EINVAL		7666330	1					
ANR	7666714	UnaryOperator	-		7666330	0					
ANR	7666715	Identifier	EINVAL		7666330	1					
ANR	7666716	GotoStatement	goto out ;	129:12:1981:1989	7666330	2	True				
ANR	7666717	Identifier	out		7666330	0					
ANR	7666718	ExpressionStatement	bs = NULL	135:8:2013:2022	7666330	5	True				
ANR	7666719	AssignmentExpression	bs = NULL		7666330	0		=			
ANR	7666720	Identifier	bs		7666330	0					
ANR	7666721	Identifier	NULL		7666330	1					
ANR	7666722	ExpressionStatement	"ret = bdrv_open ( & bs , backing_file , NULL , NULL , BDRV_O_PROTOCOL , NULL , errp )"	137:8:2033:2133	7666330	6	True				
ANR	7666723	AssignmentExpression	"ret = bdrv_open ( & bs , backing_file , NULL , NULL , BDRV_O_PROTOCOL , NULL , errp )"		7666330	0		=			
ANR	7666724	Identifier	ret		7666330	0					
ANR	7666725	CallExpression	"bdrv_open ( & bs , backing_file , NULL , NULL , BDRV_O_PROTOCOL , NULL , errp )"		7666330	1					
ANR	7666726	Callee	bdrv_open		7666330	0					
ANR	7666727	Identifier	bdrv_open		7666330	0					
ANR	7666728	ArgumentList	& bs		7666330	1					
ANR	7666729	Argument	& bs		7666330	0					
ANR	7666730	UnaryOperationExpression	& bs		7666330	0					
ANR	7666731	UnaryOperator	&		7666330	0					
ANR	7666732	Identifier	bs		7666330	1					
ANR	7666733	Argument	backing_file		7666330	1					
ANR	7666734	Identifier	backing_file		7666330	0					
ANR	7666735	Argument	NULL		7666330	2					
ANR	7666736	Identifier	NULL		7666330	0					
ANR	7666737	Argument	NULL		7666330	3					
ANR	7666738	Identifier	NULL		7666330	0					
ANR	7666739	Argument	BDRV_O_PROTOCOL		7666330	4					
ANR	7666740	Identifier	BDRV_O_PROTOCOL		7666330	0					
ANR	7666741	Argument	NULL		7666330	5					
ANR	7666742	Identifier	NULL		7666330	0					
ANR	7666743	Argument	errp		7666330	6					
ANR	7666744	Identifier	errp		7666330	0					
ANR	7666745	IfStatement	if ( ret < 0 )		7666330	7					
ANR	7666746	Condition	ret < 0	141:12:2148:2154	7666330	0	True				
ANR	7666747	RelationalExpression	ret < 0		7666330	0		<			
ANR	7666748	Identifier	ret		7666330	0					
ANR	7666749	PrimaryExpression	0		7666330	1					
ANR	7666750	CompoundStatement		137:21:2060:2060	7666330	1					
ANR	7666751	GotoStatement	goto out ;	143:12:2172:2180	7666330	0	True				
ANR	7666752	Identifier	out		7666330	0					
ANR	7666753	ExpressionStatement	base = bs -> opaque	149:8:2204:2221	7666330	8	True				
ANR	7666754	AssignmentExpression	base = bs -> opaque		7666330	0		=			
ANR	7666755	Identifier	base		7666330	0					
ANR	7666756	PtrMemberAccess	bs -> opaque		7666330	1					
ANR	7666757	Identifier	bs		7666330	0					
ANR	7666758	Identifier	opaque		7666330	1					
ANR	7666759	IfStatement	if ( ! is_snapshot ( & base -> inode ) )		7666330	9					
ANR	7666760	Condition	! is_snapshot ( & base -> inode )	153:12:2238:2263	7666330	0	True				
ANR	7666761	UnaryOperationExpression	! is_snapshot ( & base -> inode )		7666330	0					
ANR	7666762	UnaryOperator	!		7666330	0					
ANR	7666763	CallExpression	is_snapshot ( & base -> inode )		7666330	1					
ANR	7666764	Callee	is_snapshot		7666330	0					
ANR	7666765	Identifier	is_snapshot		7666330	0					
ANR	7666766	ArgumentList	& base -> inode		7666330	1					
ANR	7666767	Argument	& base -> inode		7666330	0					
ANR	7666768	UnaryOperationExpression	& base -> inode		7666330	0					
ANR	7666769	UnaryOperator	&		7666330	0					
ANR	7666770	PtrMemberAccess	base -> inode		7666330	1					
ANR	7666771	Identifier	base		7666330	0					
ANR	7666772	Identifier	inode		7666330	1					
ANR	7666773	CompoundStatement		149:40:2169:2169	7666330	1					
ANR	7666774	ExpressionStatement	"error_setg ( errp , ""cannot clone from a non snapshot vdi"" )"	155:12:2281:2337	7666330	0	True				
ANR	7666775	CallExpression	"error_setg ( errp , ""cannot clone from a non snapshot vdi"" )"		7666330	0					
ANR	7666776	Callee	error_setg		7666330	0					
ANR	7666777	Identifier	error_setg		7666330	0					
ANR	7666778	ArgumentList	errp		7666330	1					
ANR	7666779	Argument	errp		7666330	0					
ANR	7666780	Identifier	errp		7666330	0					
ANR	7666781	Argument	"""cannot clone from a non snapshot vdi"""		7666330	1					
ANR	7666782	PrimaryExpression	"""cannot clone from a non snapshot vdi"""		7666330	0					
ANR	7666783	ExpressionStatement	bdrv_unref ( bs )	157:12:2352:2366	7666330	1	True				
ANR	7666784	CallExpression	bdrv_unref ( bs )		7666330	0					
ANR	7666785	Callee	bdrv_unref		7666330	0					
ANR	7666786	Identifier	bdrv_unref		7666330	0					
ANR	7666787	ArgumentList	bs		7666330	1					
ANR	7666788	Argument	bs		7666330	0					
ANR	7666789	Identifier	bs		7666330	0					
ANR	7666790	ExpressionStatement	ret = - EINVAL	159:12:2381:2394	7666330	2	True				
ANR	7666791	AssignmentExpression	ret = - EINVAL		7666330	0		=			
ANR	7666792	Identifier	ret		7666330	0					
ANR	7666793	UnaryOperationExpression	- EINVAL		7666330	1					
ANR	7666794	UnaryOperator	-		7666330	0					
ANR	7666795	Identifier	EINVAL		7666330	1					
ANR	7666796	GotoStatement	goto out ;	161:12:2409:2417	7666330	3	True				
ANR	7666797	Identifier	out		7666330	0					
ANR	7666798	ExpressionStatement	s -> inode . vdi_id = base -> inode . vdi_id	165:8:2439:2475	7666330	10	True				
ANR	7666799	AssignmentExpression	s -> inode . vdi_id = base -> inode . vdi_id		7666330	0		=			
ANR	7666800	MemberAccess	s -> inode . vdi_id		7666330	0					
ANR	7666801	PtrMemberAccess	s -> inode		7666330	0					
ANR	7666802	Identifier	s		7666330	0					
ANR	7666803	Identifier	inode		7666330	1					
ANR	7666804	Identifier	vdi_id		7666330	1					
ANR	7666805	MemberAccess	base -> inode . vdi_id		7666330	1					
ANR	7666806	PtrMemberAccess	base -> inode		7666330	0					
ANR	7666807	Identifier	base		7666330	0					
ANR	7666808	Identifier	inode		7666330	1					
ANR	7666809	Identifier	vdi_id		7666330	1					
ANR	7666810	ExpressionStatement	bdrv_unref ( bs )	167:8:2486:2500	7666330	11	True				
ANR	7666811	CallExpression	bdrv_unref ( bs )		7666330	0					
ANR	7666812	Callee	bdrv_unref		7666330	0					
ANR	7666813	Identifier	bdrv_unref		7666330	0					
ANR	7666814	ArgumentList	bs		7666330	1					
ANR	7666815	Argument	bs		7666330	0					
ANR	7666816	Identifier	bs		7666330	0					
ANR	7666817	ExpressionStatement	s -> aio_context = qemu_get_aio_context ( )	173:4:2516:2555	7666330	21	True				
ANR	7666818	AssignmentExpression	s -> aio_context = qemu_get_aio_context ( )		7666330	0		=			
ANR	7666819	PtrMemberAccess	s -> aio_context		7666330	0					
ANR	7666820	Identifier	s		7666330	0					
ANR	7666821	Identifier	aio_context		7666330	1					
ANR	7666822	CallExpression	qemu_get_aio_context ( )		7666330	1					
ANR	7666823	Callee	qemu_get_aio_context		7666330	0					
ANR	7666824	Identifier	qemu_get_aio_context		7666330	0					
ANR	7666825	ArgumentList			7666330	1					
ANR	7666826	ExpressionStatement	"ret = do_sd_create ( s , & vid , 0 , errp )"	175:4:2562:2598	7666330	22	True				
ANR	7666827	AssignmentExpression	"ret = do_sd_create ( s , & vid , 0 , errp )"		7666330	0		=			
ANR	7666828	Identifier	ret		7666330	0					
ANR	7666829	CallExpression	"do_sd_create ( s , & vid , 0 , errp )"		7666330	1					
ANR	7666830	Callee	do_sd_create		7666330	0					
ANR	7666831	Identifier	do_sd_create		7666330	0					
ANR	7666832	ArgumentList	s		7666330	1					
ANR	7666833	Argument	s		7666330	0					
ANR	7666834	Identifier	s		7666330	0					
ANR	7666835	Argument	& vid		7666330	1					
ANR	7666836	UnaryOperationExpression	& vid		7666330	0					
ANR	7666837	UnaryOperator	&		7666330	0					
ANR	7666838	Identifier	vid		7666330	1					
ANR	7666839	Argument	0		7666330	2					
ANR	7666840	PrimaryExpression	0		7666330	0					
ANR	7666841	Argument	errp		7666330	3					
ANR	7666842	Identifier	errp		7666330	0					
ANR	7666843	IfStatement	if ( ret )		7666330	23					
ANR	7666844	Condition	ret	177:8:2609:2611	7666330	0	True				
ANR	7666845	Identifier	ret		7666330	0					
ANR	7666846	CompoundStatement		173:13:2517:2517	7666330	1					
ANR	7666847	GotoStatement	goto out ;	179:8:2625:2633	7666330	0	True				
ANR	7666848	Identifier	out		7666330	0					
ANR	7666849	IfStatement	if ( prealloc )		7666330	24					
ANR	7666850	Condition	prealloc	185:8:2653:2660	7666330	0	True				
ANR	7666851	Identifier	prealloc		7666330	0					
ANR	7666852	CompoundStatement		181:18:2566:2566	7666330	1					
ANR	7666853	ExpressionStatement	"ret = sd_prealloc ( filename , errp )"	187:8:2674:2707	7666330	0	True				
ANR	7666854	AssignmentExpression	"ret = sd_prealloc ( filename , errp )"		7666330	0		=			
ANR	7666855	Identifier	ret		7666330	0					
ANR	7666856	CallExpression	"sd_prealloc ( filename , errp )"		7666330	1					
ANR	7666857	Callee	sd_prealloc		7666330	0					
ANR	7666858	Identifier	sd_prealloc		7666330	0					
ANR	7666859	ArgumentList	filename		7666330	1					
ANR	7666860	Argument	filename		7666330	0					
ANR	7666861	Identifier	filename		7666330	0					
ANR	7666862	Argument	errp		7666330	1					
ANR	7666863	Identifier	errp		7666330	0					
ANR	7666864	Label	out :	191:0:2717:2720	7666330	25	True				
ANR	7666865	Identifier	out		7666330	0					
ANR	7666866	ExpressionStatement	g_free ( backing_file )	193:4:2727:2747	7666330	26	True				
ANR	7666867	CallExpression	g_free ( backing_file )		7666330	0					
ANR	7666868	Callee	g_free		7666330	0					
ANR	7666869	Identifier	g_free		7666330	0					
ANR	7666870	ArgumentList	backing_file		7666330	1					
ANR	7666871	Argument	backing_file		7666330	0					
ANR	7666872	Identifier	backing_file		7666330	0					
ANR	7666873	ExpressionStatement	g_free ( buf )	195:4:2754:2765	7666330	27	True				
ANR	7666874	CallExpression	g_free ( buf )		7666330	0					
ANR	7666875	Callee	g_free		7666330	0					
ANR	7666876	Identifier	g_free		7666330	0					
ANR	7666877	ArgumentList	buf		7666330	1					
ANR	7666878	Argument	buf		7666330	0					
ANR	7666879	Identifier	buf		7666330	0					
ANR	7666880	ExpressionStatement	g_free ( s )	197:4:2772:2781	7666330	28	True				
ANR	7666881	CallExpression	g_free ( s )		7666330	0					
ANR	7666882	Callee	g_free		7666330	0					
ANR	7666883	Identifier	g_free		7666330	0					
ANR	7666884	ArgumentList	s		7666330	1					
ANR	7666885	Argument	s		7666330	0					
ANR	7666886	Identifier	s		7666330	0					
ANR	7666887	ReturnStatement	return ret ;	199:4:2788:2798	7666330	29	True				
ANR	7666888	Identifier	ret		7666330	0					
ANR	7666889	ReturnType	static int		7666330	1					
ANR	7666890	Identifier	sd_create		7666330	2					
ANR	7666891	ParameterList	"const char * filename , QemuOpts * opts , Error * * errp"		7666330	3					
ANR	7666892	Parameter	const char * filename	1:21:21:40	7666330	0	True				
ANR	7666893	ParameterType	const char *		7666330	0					
ANR	7666894	Identifier	filename		7666330	1					
ANR	7666895	Parameter	QemuOpts * opts	1:43:43:56	7666330	1	True				
ANR	7666896	ParameterType	QemuOpts *		7666330	0					
ANR	7666897	Identifier	opts		7666330	1					
ANR	7666898	Parameter	Error * * errp	3:21:81:92	7666330	2	True				
ANR	7666899	ParameterType	Error * *		7666330	0					
ANR	7666900	Identifier	errp		7666330	1					
ANR	7666901	CFGEntryNode	ENTRY		7666330		True				
ANR	7666902	CFGExitNode	EXIT		7666330		True				
ANR	7666903	Symbol	backing_file		7666330						
ANR	7666904	Symbol	base -> inode		7666330						
ANR	7666905	Symbol	s -> inode . vdi_size		7666330						
ANR	7666906	Symbol	errp		7666330						
ANR	7666907	Symbol	qemu_opt_get_del		7666330						
ANR	7666908	Symbol	s -> aio_context		7666330						
ANR	7666909	Symbol	vid		7666330						
ANR	7666910	Symbol	is_snapshot		7666330						
ANR	7666911	Symbol	opts		7666330						
ANR	7666912	Symbol	* bs		7666330						
ANR	7666913	Symbol	qemu_opt_get_size_del		7666330						
ANR	7666914	Symbol	& bs		7666330						
ANR	7666915	Symbol	bdrv_open		7666330						
ANR	7666916	Symbol	tag		7666330						
ANR	7666917	Symbol	* base		7666330						
ANR	7666918	Symbol	snapid		7666330						
ANR	7666919	Symbol	qemu_get_aio_context		7666330						
ANR	7666920	Symbol	sd_prealloc		7666330						
ANR	7666921	Symbol	prealloc		7666330						
ANR	7666922	Symbol	ret		7666330						
ANR	7666923	Symbol	strcmp		7666330						
ANR	7666924	Symbol	NULL		7666330						
ANR	7666925	Symbol	drv -> protocol_name		7666330						
ANR	7666926	Symbol	drv		7666330						
ANR	7666927	Symbol	do_sd_create		7666330						
ANR	7666928	Symbol	s -> inode		7666330						
ANR	7666929	Symbol	& vid		7666330						
ANR	7666930	Symbol	& snapid		7666330						
ANR	7666931	Symbol	filename		7666330						
ANR	7666932	Symbol	strstr		7666330						
ANR	7666933	Symbol	true		7666330						
ANR	7666934	Symbol	base -> inode . vdi_id		7666330						
ANR	7666935	Symbol	g_malloc0		7666330						
ANR	7666936	Symbol	parse_vdiname		7666330						
ANR	7666937	Symbol	SD_MAX_VDI_SIZE		7666330						
ANR	7666938	Symbol	& base -> inode		7666330						
ANR	7666939	Symbol	BLOCK_OPT_BACKING_FILE		7666330						
ANR	7666940	Symbol	bs		7666330						
ANR	7666941	Symbol	sd_parse_uri		7666330						
ANR	7666942	Symbol	BLOCK_OPT_PREALLOC		7666330						
ANR	7666943	Symbol	BDRV_O_PROTOCOL		7666330						
ANR	7666944	Symbol	s -> inode . vdi_id		7666330						
ANR	7666945	Symbol	bs -> opaque		7666330						
ANR	7666946	Symbol	parse_redundancy		7666330						
ANR	7666947	Symbol	false		7666330						
ANR	7666948	Symbol	bdrv_find_protocol		7666330						
ANR	7666949	Symbol	BLOCK_OPT_SIZE		7666330						
ANR	7666950	Symbol	* drv		7666330						
ANR	7666951	Symbol	EINVAL		7666330						
ANR	7666952	Symbol	buf		7666330						
ANR	7666953	Symbol	s		7666330						
ANR	7666954	Symbol	s -> name		7666330						
ANR	7666955	Symbol	BLOCK_OPT_REDUNDANCY		7666330						
ANR	7666956	Symbol	* s		7666330						
ANR	7666957	Symbol	base		7666330						
