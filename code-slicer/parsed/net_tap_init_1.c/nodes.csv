command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6007947	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_tap_init_1.c								
ANR	6007948	Function	net_tap_init	1:0:0:1125							
ANR	6007949	FunctionDef	"net_tap_init (VLANState * vlan , const char * model , const char * name , const char * ifname1 , const char * setup_script , const char * down_script)"		6007948	0					
ANR	6007950	CompoundStatement		7:0:201:1125	6007948	0					
ANR	6007951	IdentifierDeclStatement	TAPState * s ;	9:4:208:219	6007948	0	True				
ANR	6007952	IdentifierDecl	* s		6007948	0					
ANR	6007953	IdentifierDeclType	TAPState *		6007948	0					
ANR	6007954	Identifier	s		6007948	1					
ANR	6007955	IdentifierDeclStatement	int fd ;	11:4:226:232	6007948	1	True				
ANR	6007956	IdentifierDecl	fd		6007948	0					
ANR	6007957	IdentifierDeclType	int		6007948	0					
ANR	6007958	Identifier	fd		6007948	1					
ANR	6007959	IdentifierDeclStatement	char ifname [ 128 ] ;	13:4:239:255	6007948	2	True				
ANR	6007960	IdentifierDecl	ifname [ 128 ]		6007948	0					
ANR	6007961	IdentifierDeclType	char [ 128 ]		6007948	0					
ANR	6007962	Identifier	ifname		6007948	1					
ANR	6007963	PrimaryExpression	128		6007948	2					
ANR	6007964	IfStatement	if ( ifname1 != NULL )		6007948	3					
ANR	6007965	Condition	ifname1 != NULL	17:8:268:282	6007948	0	True				
ANR	6007966	EqualityExpression	ifname1 != NULL		6007948	0		!=			
ANR	6007967	Identifier	ifname1		6007948	0					
ANR	6007968	Identifier	NULL		6007948	1					
ANR	6007969	ExpressionStatement	"pstrcpy ( ifname , sizeof ( ifname ) , ifname1 )"	19:8:294:334	6007948	1	True				
ANR	6007970	CallExpression	"pstrcpy ( ifname , sizeof ( ifname ) , ifname1 )"		6007948	0					
ANR	6007971	Callee	pstrcpy		6007948	0					
ANR	6007972	Identifier	pstrcpy		6007948	0					
ANR	6007973	ArgumentList	ifname		6007948	1					
ANR	6007974	Argument	ifname		6007948	0					
ANR	6007975	Identifier	ifname		6007948	0					
ANR	6007976	Argument	sizeof ( ifname )		6007948	1					
ANR	6007977	SizeofExpression	sizeof ( ifname )		6007948	0					
ANR	6007978	Sizeof	sizeof		6007948	0					
ANR	6007979	SizeofOperand	ifname		6007948	1					
ANR	6007980	Argument	ifname1		6007948	2					
ANR	6007981	Identifier	ifname1		6007948	0					
ANR	6007982	ElseStatement	else		6007948	0					
ANR	6007983	ExpressionStatement	ifname [ 0 ] = '\\0'	23:8:355:371	6007948	0	True				
ANR	6007984	AssignmentExpression	ifname [ 0 ] = '\\0'		6007948	0		=			
ANR	6007985	ArrayIndexing	ifname [ 0 ]		6007948	0					
ANR	6007986	Identifier	ifname		6007948	0					
ANR	6007987	PrimaryExpression	0		6007948	1					
ANR	6007988	PrimaryExpression	'\\0'		6007948	1					
ANR	6007989	ExpressionStatement	"TFR ( fd = tap_open ( ifname , sizeof ( ifname ) ) )"	25:4:378:420	6007948	4	True				
ANR	6007990	CallExpression	"TFR ( fd = tap_open ( ifname , sizeof ( ifname ) ) )"		6007948	0					
ANR	6007991	Callee	TFR		6007948	0					
ANR	6007992	Identifier	TFR		6007948	0					
ANR	6007993	ArgumentList	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007948	1					
ANR	6007994	Argument	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007948	0					
ANR	6007995	AssignmentExpression	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007948	0		=			
ANR	6007996	Identifier	fd		6007948	0					
ANR	6007997	CallExpression	"tap_open ( ifname , sizeof ( ifname ) )"		6007948	1					
ANR	6007998	Callee	tap_open		6007948	0					
ANR	6007999	Identifier	tap_open		6007948	0					
ANR	6008000	ArgumentList	ifname		6007948	1					
ANR	6008001	Argument	ifname		6007948	0					
ANR	6008002	Identifier	ifname		6007948	0					
ANR	6008003	Argument	sizeof ( ifname )		6007948	1					
ANR	6008004	SizeofExpression	sizeof ( ifname )		6007948	0					
ANR	6008005	Sizeof	sizeof		6007948	0					
ANR	6008006	SizeofOperand	ifname		6007948	1					
ANR	6008007	IfStatement	if ( fd < 0 )		6007948	5					
ANR	6008008	Condition	fd < 0	27:8:431:436	6007948	0	True				
ANR	6008009	RelationalExpression	fd < 0		6007948	0		<			
ANR	6008010	Identifier	fd		6007948	0					
ANR	6008011	PrimaryExpression	0		6007948	1					
ANR	6008012	ReturnStatement	return - 1 ;	29:8:448:457	6007948	1	True				
ANR	6008013	UnaryOperationExpression	- 1		6007948	0					
ANR	6008014	UnaryOperator	-		6007948	0					
ANR	6008015	PrimaryExpression	1		6007948	1					
ANR	6008016	IfStatement	"if ( ! setup_script || ! strcmp ( setup_script , ""no"" ) )"		6007948	6					
ANR	6008017	Condition	"! setup_script || ! strcmp ( setup_script , ""no"" )"	33:8:470:513	6007948	0	True				
ANR	6008018	OrExpression	"! setup_script || ! strcmp ( setup_script , ""no"" )"		6007948	0		||			
ANR	6008019	UnaryOperationExpression	! setup_script		6007948	0					
ANR	6008020	UnaryOperator	!		6007948	0					
ANR	6008021	Identifier	setup_script		6007948	1					
ANR	6008022	UnaryOperationExpression	"! strcmp ( setup_script , ""no"" )"		6007948	1					
ANR	6008023	UnaryOperator	!		6007948	0					
ANR	6008024	CallExpression	"strcmp ( setup_script , ""no"" )"		6007948	1					
ANR	6008025	Callee	strcmp		6007948	0					
ANR	6008026	Identifier	strcmp		6007948	0					
ANR	6008027	ArgumentList	setup_script		6007948	1					
ANR	6008028	Argument	setup_script		6007948	0					
ANR	6008029	Identifier	setup_script		6007948	0					
ANR	6008030	Argument	"""no"""		6007948	1					
ANR	6008031	PrimaryExpression	"""no"""		6007948	0					
ANR	6008032	ExpressionStatement	"setup_script = """""	35:8:525:542	6007948	1	True				
ANR	6008033	AssignmentExpression	"setup_script = """""		6007948	0		=			
ANR	6008034	Identifier	setup_script		6007948	0					
ANR	6008035	PrimaryExpression	""""""		6007948	1					
ANR	6008036	IfStatement	if ( setup_script [ 0 ] != '\\0' )		6007948	7					
ANR	6008037	Condition	setup_script [ 0 ] != '\\0'	37:8:553:575	6007948	0	True				
ANR	6008038	EqualityExpression	setup_script [ 0 ] != '\\0'		6007948	0		!=			
ANR	6008039	ArrayIndexing	setup_script [ 0 ]		6007948	0					
ANR	6008040	Identifier	setup_script		6007948	0					
ANR	6008041	PrimaryExpression	0		6007948	1					
ANR	6008042	PrimaryExpression	'\\0'		6007948	1					
ANR	6008043	CompoundStatement		31:33:376:376	6007948	1					
ANR	6008044	IfStatement	"if ( launch_script ( setup_script , ifname , fd ) )"		6007948	0					
ANR	6008045	Condition	"launch_script ( setup_script , ifname , fd )"	39:5:586:624	6007948	0	True				
ANR	6008046	CallExpression	"launch_script ( setup_script , ifname , fd )"		6007948	0					
ANR	6008047	Callee	launch_script		6007948	0					
ANR	6008048	Identifier	launch_script		6007948	0					
ANR	6008049	ArgumentList	setup_script		6007948	1					
ANR	6008050	Argument	setup_script		6007948	0					
ANR	6008051	Identifier	setup_script		6007948	0					
ANR	6008052	Argument	ifname		6007948	1					
ANR	6008053	Identifier	ifname		6007948	0					
ANR	6008054	Argument	fd		6007948	2					
ANR	6008055	Identifier	fd		6007948	0					
ANR	6008056	ReturnStatement	return - 1 ;	41:5:633:642	6007948	1	True				
ANR	6008057	UnaryOperationExpression	- 1		6007948	0					
ANR	6008058	UnaryOperator	-		6007948	0					
ANR	6008059	PrimaryExpression	1		6007948	1					
ANR	6008060	ExpressionStatement	"s = net_tap_fd_init ( vlan , model , name , fd )"	45:4:656:698	6007948	8	True				
ANR	6008061	AssignmentExpression	"s = net_tap_fd_init ( vlan , model , name , fd )"		6007948	0		=			
ANR	6008062	Identifier	s		6007948	0					
ANR	6008063	CallExpression	"net_tap_fd_init ( vlan , model , name , fd )"		6007948	1					
ANR	6008064	Callee	net_tap_fd_init		6007948	0					
ANR	6008065	Identifier	net_tap_fd_init		6007948	0					
ANR	6008066	ArgumentList	vlan		6007948	1					
ANR	6008067	Argument	vlan		6007948	0					
ANR	6008068	Identifier	vlan		6007948	0					
ANR	6008069	Argument	model		6007948	1					
ANR	6008070	Identifier	model		6007948	0					
ANR	6008071	Argument	name		6007948	2					
ANR	6008072	Identifier	name		6007948	0					
ANR	6008073	Argument	fd		6007948	3					
ANR	6008074	Identifier	fd		6007948	0					
ANR	6008075	IfStatement	if ( ! s )		6007948	9					
ANR	6008076	Condition	! s	47:8:709:710	6007948	0	True				
ANR	6008077	UnaryOperationExpression	! s		6007948	0					
ANR	6008078	UnaryOperator	!		6007948	0					
ANR	6008079	Identifier	s		6007948	1					
ANR	6008080	ReturnStatement	return - 1 ;	49:8:722:731	6007948	1	True				
ANR	6008081	UnaryOperationExpression	- 1		6007948	0					
ANR	6008082	UnaryOperator	-		6007948	0					
ANR	6008083	PrimaryExpression	1		6007948	1					
ANR	6008084	ExpressionStatement	"snprintf ( s -> vc -> info_str , sizeof ( s -> vc -> info_str ) , ""ifname=%s,script=%s,downscript=%s"" , ifname , setup_script , down_script )"	51:4:738:888	6007948	10	True				
ANR	6008085	CallExpression	"snprintf ( s -> vc -> info_str , sizeof ( s -> vc -> info_str ) , ""ifname=%s,script=%s,downscript=%s"" , ifname , setup_script , down_script )"		6007948	0					
ANR	6008086	Callee	snprintf		6007948	0					
ANR	6008087	Identifier	snprintf		6007948	0					
ANR	6008088	ArgumentList	s -> vc -> info_str		6007948	1					
ANR	6008089	Argument	s -> vc -> info_str		6007948	0					
ANR	6008090	PtrMemberAccess	s -> vc -> info_str		6007948	0					
ANR	6008091	PtrMemberAccess	s -> vc		6007948	0					
ANR	6008092	Identifier	s		6007948	0					
ANR	6008093	Identifier	vc		6007948	1					
ANR	6008094	Identifier	info_str		6007948	1					
ANR	6008095	Argument	sizeof ( s -> vc -> info_str )		6007948	1					
ANR	6008096	SizeofExpression	sizeof ( s -> vc -> info_str )		6007948	0					
ANR	6008097	Sizeof	sizeof		6007948	0					
ANR	6008098	PtrMemberAccess	s -> vc -> info_str		6007948	1					
ANR	6008099	PtrMemberAccess	s -> vc		6007948	0					
ANR	6008100	Identifier	s		6007948	0					
ANR	6008101	Identifier	vc		6007948	1					
ANR	6008102	Identifier	info_str		6007948	1					
ANR	6008103	Argument	"""ifname=%s,script=%s,downscript=%s"""		6007948	2					
ANR	6008104	PrimaryExpression	"""ifname=%s,script=%s,downscript=%s"""		6007948	0					
ANR	6008105	Argument	ifname		6007948	3					
ANR	6008106	Identifier	ifname		6007948	0					
ANR	6008107	Argument	setup_script		6007948	4					
ANR	6008108	Identifier	setup_script		6007948	0					
ANR	6008109	Argument	down_script		6007948	5					
ANR	6008110	Identifier	down_script		6007948	0					
ANR	6008111	IfStatement	"if ( down_script && strcmp ( down_script , ""no"" ) )"		6007948	11					
ANR	6008112	Condition	"down_script && strcmp ( down_script , ""no"" )"	57:8:899:938	6007948	0	True				
ANR	6008113	AndExpression	"down_script && strcmp ( down_script , ""no"" )"		6007948	0		&&			
ANR	6008114	Identifier	down_script		6007948	0					
ANR	6008115	CallExpression	"strcmp ( down_script , ""no"" )"		6007948	1					
ANR	6008116	Callee	strcmp		6007948	0					
ANR	6008117	Identifier	strcmp		6007948	0					
ANR	6008118	ArgumentList	down_script		6007948	1					
ANR	6008119	Argument	down_script		6007948	0					
ANR	6008120	Identifier	down_script		6007948	0					
ANR	6008121	Argument	"""no"""		6007948	1					
ANR	6008122	PrimaryExpression	"""no"""		6007948	0					
ANR	6008123	CompoundStatement		51:50:739:739	6007948	1					
ANR	6008124	ExpressionStatement	"snprintf ( s -> down_script , sizeof ( s -> down_script ) , ""%s"" , down_script )"	59:8:952:1019	6007948	0	True				
ANR	6008125	CallExpression	"snprintf ( s -> down_script , sizeof ( s -> down_script ) , ""%s"" , down_script )"		6007948	0					
ANR	6008126	Callee	snprintf		6007948	0					
ANR	6008127	Identifier	snprintf		6007948	0					
ANR	6008128	ArgumentList	s -> down_script		6007948	1					
ANR	6008129	Argument	s -> down_script		6007948	0					
ANR	6008130	PtrMemberAccess	s -> down_script		6007948	0					
ANR	6008131	Identifier	s		6007948	0					
ANR	6008132	Identifier	down_script		6007948	1					
ANR	6008133	Argument	sizeof ( s -> down_script )		6007948	1					
ANR	6008134	SizeofExpression	sizeof ( s -> down_script )		6007948	0					
ANR	6008135	Sizeof	sizeof		6007948	0					
ANR	6008136	PtrMemberAccess	s -> down_script		6007948	1					
ANR	6008137	Identifier	s		6007948	0					
ANR	6008138	Identifier	down_script		6007948	1					
ANR	6008139	Argument	"""%s"""		6007948	2					
ANR	6008140	PrimaryExpression	"""%s"""		6007948	0					
ANR	6008141	Argument	down_script		6007948	3					
ANR	6008142	Identifier	down_script		6007948	0					
ANR	6008143	ExpressionStatement	"snprintf ( s -> down_script_arg , sizeof ( s -> down_script_arg ) , ""%s"" , ifname )"	61:8:1030:1100	6007948	1	True				
ANR	6008144	CallExpression	"snprintf ( s -> down_script_arg , sizeof ( s -> down_script_arg ) , ""%s"" , ifname )"		6007948	0					
ANR	6008145	Callee	snprintf		6007948	0					
ANR	6008146	Identifier	snprintf		6007948	0					
ANR	6008147	ArgumentList	s -> down_script_arg		6007948	1					
ANR	6008148	Argument	s -> down_script_arg		6007948	0					
ANR	6008149	PtrMemberAccess	s -> down_script_arg		6007948	0					
ANR	6008150	Identifier	s		6007948	0					
ANR	6008151	Identifier	down_script_arg		6007948	1					
ANR	6008152	Argument	sizeof ( s -> down_script_arg )		6007948	1					
ANR	6008153	SizeofExpression	sizeof ( s -> down_script_arg )		6007948	0					
ANR	6008154	Sizeof	sizeof		6007948	0					
ANR	6008155	PtrMemberAccess	s -> down_script_arg		6007948	1					
ANR	6008156	Identifier	s		6007948	0					
ANR	6008157	Identifier	down_script_arg		6007948	1					
ANR	6008158	Argument	"""%s"""		6007948	2					
ANR	6008159	PrimaryExpression	"""%s"""		6007948	0					
ANR	6008160	Argument	ifname		6007948	3					
ANR	6008161	Identifier	ifname		6007948	0					
ANR	6008162	ReturnStatement	return 0 ;	65:4:1114:1122	6007948	12	True				
ANR	6008163	PrimaryExpression	0		6007948	0					
ANR	6008164	ReturnType	static int		6007948	1					
ANR	6008165	Identifier	net_tap_init		6007948	2					
ANR	6008166	ParameterList	"VLANState * vlan , const char * model , const char * name , const char * ifname1 , const char * setup_script , const char * down_script"		6007948	3					
ANR	6008167	Parameter	VLANState * vlan	1:24:24:38	6007948	0	True				
ANR	6008168	ParameterType	VLANState *		6007948	0					
ANR	6008169	Identifier	vlan		6007948	1					
ANR	6008170	Parameter	const char * model	1:41:41:57	6007948	1	True				
ANR	6008171	ParameterType	const char *		6007948	0					
ANR	6008172	Identifier	model		6007948	1					
ANR	6008173	Parameter	const char * name	3:24:85:100	6007948	2	True				
ANR	6008174	ParameterType	const char *		6007948	0					
ANR	6008175	Identifier	name		6007948	1					
ANR	6008176	Parameter	const char * ifname1	3:42:103:121	6007948	3	True				
ANR	6008177	ParameterType	const char *		6007948	0					
ANR	6008178	Identifier	ifname1		6007948	1					
ANR	6008179	Parameter	const char * setup_script	5:24:149:172	6007948	4	True				
ANR	6008180	ParameterType	const char *		6007948	0					
ANR	6008181	Identifier	setup_script		6007948	1					
ANR	6008182	Parameter	const char * down_script	5:50:175:197	6007948	5	True				
ANR	6008183	ParameterType	const char *		6007948	0					
ANR	6008184	Identifier	down_script		6007948	1					
ANR	6008185	CFGEntryNode	ENTRY		6007948		True				
ANR	6008186	CFGExitNode	EXIT		6007948		True				
ANR	6008187	Symbol	strcmp		6007948						
ANR	6008188	Symbol	setup_script		6007948						
ANR	6008189	Symbol	NULL		6007948						
ANR	6008190	Symbol	launch_script		6007948						
ANR	6008191	Symbol	net_tap_fd_init		6007948						
ANR	6008192	Symbol	* s -> vc		6007948						
ANR	6008193	Symbol	* ifname		6007948						
ANR	6008194	Symbol	s -> down_script_arg		6007948						
ANR	6008195	Symbol	* setup_script		6007948						
ANR	6008196	Symbol	ifname1		6007948						
ANR	6008197	Symbol	s -> vc		6007948						
ANR	6008198	Symbol	s		6007948						
ANR	6008199	Symbol	s -> down_script		6007948						
ANR	6008200	Symbol	vlan		6007948						
ANR	6008201	Symbol	tap_open		6007948						
ANR	6008202	Symbol	ifname		6007948						
ANR	6008203	Symbol	s -> vc -> info_str		6007948						
ANR	6008204	Symbol	name		6007948						
ANR	6008205	Symbol	* * s		6007948						
ANR	6008206	Symbol	model		6007948						
ANR	6008207	Symbol	down_script		6007948						
ANR	6008208	Symbol	* s		6007948						
ANR	6008209	Symbol	fd		6007948						
