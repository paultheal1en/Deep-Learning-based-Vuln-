command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4367115	File	/home/p4ultr4n/workplace/ReVeal/raw_code/get_monitor_def_1.c								
ANR	4367116	Function	get_monitor_def	1:0:0:909							
ANR	4367117	FunctionDef	"get_monitor_def (target_long * pval , const char * name)"		4367116	0					
ANR	4367118	CompoundStatement		3:0:65:909	4367116	0					
ANR	4367119	IdentifierDeclStatement	const MonitorDef * md ;	5:4:72:92	4367116	0	True				
ANR	4367120	IdentifierDecl	* md		4367116	0					
ANR	4367121	IdentifierDeclType	const MonitorDef *		4367116	0					
ANR	4367122	Identifier	md		4367116	1					
ANR	4367123	IdentifierDeclStatement	void * ptr ;	7:4:99:108	4367116	1	True				
ANR	4367124	IdentifierDecl	* ptr		4367116	0					
ANR	4367125	IdentifierDeclType	void *		4367116	0					
ANR	4367126	Identifier	ptr		4367116	1					
ANR	4367127	ForStatement	for ( md = monitor_defs ; md -> name != NULL ; md ++ )		4367116	2					
ANR	4367128	ForInit	md = monitor_defs ;	11:8:121:138	4367116	0	True				
ANR	4367129	AssignmentExpression	md = monitor_defs		4367116	0		=			
ANR	4367130	Identifier	md		4367116	0					
ANR	4367131	Identifier	monitor_defs		4367116	1					
ANR	4367132	Condition	md -> name != NULL	11:27:140:155	4367116	1	True				
ANR	4367133	EqualityExpression	md -> name != NULL		4367116	0		!=			
ANR	4367134	PtrMemberAccess	md -> name		4367116	0					
ANR	4367135	Identifier	md		4367116	0					
ANR	4367136	Identifier	name		4367116	1					
ANR	4367137	Identifier	NULL		4367116	1					
ANR	4367138	PostIncDecOperationExpression	md ++	11:45:158:161	4367116	2	True				
ANR	4367139	Identifier	md		4367116	0					
ANR	4367140	IncDec	++		4367116	1					
ANR	4367141	CompoundStatement		9:51:98:98	4367116	3					
ANR	4367142	IfStatement	"if ( compare_cmd ( name , md -> name ) )"		4367116	0					
ANR	4367143	Condition	"compare_cmd ( name , md -> name )"	13:12:179:205	4367116	0	True				
ANR	4367144	CallExpression	"compare_cmd ( name , md -> name )"		4367116	0					
ANR	4367145	Callee	compare_cmd		4367116	0					
ANR	4367146	Identifier	compare_cmd		4367116	0					
ANR	4367147	ArgumentList	name		4367116	1					
ANR	4367148	Argument	name		4367116	0					
ANR	4367149	Identifier	name		4367116	0					
ANR	4367150	Argument	md -> name		4367116	1					
ANR	4367151	PtrMemberAccess	md -> name		4367116	0					
ANR	4367152	Identifier	md		4367116	0					
ANR	4367153	Identifier	name		4367116	1					
ANR	4367154	CompoundStatement		11:41:142:142	4367116	1					
ANR	4367155	IfStatement	if ( md -> get_value )		4367116	0					
ANR	4367156	Condition	md -> get_value	15:16:227:239	4367116	0	True				
ANR	4367157	PtrMemberAccess	md -> get_value		4367116	0					
ANR	4367158	Identifier	md		4367116	0					
ANR	4367159	Identifier	get_value		4367116	1					
ANR	4367160	CompoundStatement		13:31:176:176	4367116	1					
ANR	4367161	ExpressionStatement	"* pval = md -> get_value ( md , md -> offset )"	17:16:261:298	4367116	0	True				
ANR	4367162	AssignmentExpression	"* pval = md -> get_value ( md , md -> offset )"		4367116	0		=			
ANR	4367163	UnaryOperationExpression	* pval		4367116	0					
ANR	4367164	UnaryOperator	*		4367116	0					
ANR	4367165	Identifier	pval		4367116	1					
ANR	4367166	CallExpression	"md -> get_value ( md , md -> offset )"		4367116	1					
ANR	4367167	Callee	md -> get_value		4367116	0					
ANR	4367168	PtrMemberAccess	md -> get_value		4367116	0					
ANR	4367169	Identifier	md		4367116	0					
ANR	4367170	Identifier	get_value		4367116	1					
ANR	4367171	ArgumentList	md		4367116	1					
ANR	4367172	Argument	md		4367116	0					
ANR	4367173	Identifier	md		4367116	0					
ANR	4367174	Argument	md -> offset		4367116	1					
ANR	4367175	PtrMemberAccess	md -> offset		4367116	0					
ANR	4367176	Identifier	md		4367116	0					
ANR	4367177	Identifier	offset		4367116	1					
ANR	4367178	ElseStatement	else		4367116	0					
ANR	4367179	CompoundStatement		19:16:273:302	4367116	0					
ANR	4367180	IdentifierDeclStatement	CPUState * env = mon_get_cpu ( ) ;	21:16:339:368	4367116	0	True				
ANR	4367181	IdentifierDecl	* env = mon_get_cpu ( )		4367116	0					
ANR	4367182	IdentifierDeclType	CPUState *		4367116	0					
ANR	4367183	Identifier	env		4367116	1					
ANR	4367184	AssignmentExpression	* env = mon_get_cpu ( )		4367116	2		=			
ANR	4367185	Identifier	env		4367116	0					
ANR	4367186	CallExpression	mon_get_cpu ( )		4367116	1					
ANR	4367187	Callee	mon_get_cpu		4367116	0					
ANR	4367188	Identifier	mon_get_cpu		4367116	0					
ANR	4367189	ArgumentList			4367116	1					
ANR	4367190	IfStatement	if ( ! env )		4367116	1					
ANR	4367191	Condition	! env	23:20:391:394	4367116	0	True				
ANR	4367192	UnaryOperationExpression	! env		4367116	0					
ANR	4367193	UnaryOperator	!		4367116	0					
ANR	4367194	Identifier	env		4367116	1					
ANR	4367195	ReturnStatement	return - 2 ;	25:20:418:427	4367116	1	True				
ANR	4367196	UnaryOperationExpression	- 2		4367116	0					
ANR	4367197	UnaryOperator	-		4367116	0					
ANR	4367198	PrimaryExpression	2		4367116	1					
ANR	4367199	ExpressionStatement	ptr = ( uint8_t * ) env + md -> offset	27:16:446:479	4367116	2	True				
ANR	4367200	AssignmentExpression	ptr = ( uint8_t * ) env + md -> offset		4367116	0		=			
ANR	4367201	Identifier	ptr		4367116	0					
ANR	4367202	AdditiveExpression	( uint8_t * ) env + md -> offset		4367116	1		+			
ANR	4367203	CastExpression	( uint8_t * ) env		4367116	0					
ANR	4367204	CastTarget	uint8_t *		4367116	0					
ANR	4367205	Identifier	env		4367116	1					
ANR	4367206	PtrMemberAccess	md -> offset		4367116	1					
ANR	4367207	Identifier	md		4367116	0					
ANR	4367208	Identifier	offset		4367116	1					
ANR	4367209	SwitchStatement	switch ( md -> type )		4367116	3					
ANR	4367210	Condition	md -> type	29:23:505:512	4367116	0	True				
ANR	4367211	PtrMemberAccess	md -> type		4367116	0					
ANR	4367212	Identifier	md		4367116	0					
ANR	4367213	Identifier	type		4367116	1					
ANR	4367214	CompoundStatement		27:33:449:449	4367116	1					
ANR	4367215	Label	case MD_I32 :	31:16:534:545	4367116	0	True				
ANR	4367216	Identifier	MD_I32		4367116	0					
ANR	4367217	ExpressionStatement	* pval = * ( int32_t * ) ptr	33:20:568:591	4367116	1	True				
ANR	4367218	AssignmentExpression	* pval = * ( int32_t * ) ptr		4367116	0		=			
ANR	4367219	UnaryOperationExpression	* pval		4367116	0					
ANR	4367220	UnaryOperator	*		4367116	0					
ANR	4367221	Identifier	pval		4367116	1					
ANR	4367222	UnaryOperationExpression	* ( int32_t * ) ptr		4367116	1					
ANR	4367223	UnaryOperator	*		4367116	0					
ANR	4367224	CastExpression	( int32_t * ) ptr		4367116	1					
ANR	4367225	CastTarget	int32_t *		4367116	0					
ANR	4367226	Identifier	ptr		4367116	1					
ANR	4367227	BreakStatement	break ;	35:20:614:619	4367116	2	True				
ANR	4367228	Label	case MD_TLONG :	37:16:638:651	4367116	3	True				
ANR	4367229	Identifier	MD_TLONG		4367116	0					
ANR	4367230	ExpressionStatement	* pval = * ( target_long * ) ptr	39:20:674:701	4367116	4	True				
ANR	4367231	AssignmentExpression	* pval = * ( target_long * ) ptr		4367116	0		=			
ANR	4367232	UnaryOperationExpression	* pval		4367116	0					
ANR	4367233	UnaryOperator	*		4367116	0					
ANR	4367234	Identifier	pval		4367116	1					
ANR	4367235	UnaryOperationExpression	* ( target_long * ) ptr		4367116	1					
ANR	4367236	UnaryOperator	*		4367116	0					
ANR	4367237	CastExpression	( target_long * ) ptr		4367116	1					
ANR	4367238	CastTarget	target_long *		4367116	0					
ANR	4367239	Identifier	ptr		4367116	1					
ANR	4367240	BreakStatement	break ;	41:20:724:729	4367116	5	True				
ANR	4367241	Label	default :	43:16:748:755	4367116	6	True				
ANR	4367242	Identifier	default		4367116	0					
ANR	4367243	ExpressionStatement	* pval = 0	45:20:778:787	4367116	7	True				
ANR	4367244	AssignmentExpression	* pval = 0		4367116	0		=			
ANR	4367245	UnaryOperationExpression	* pval		4367116	0					
ANR	4367246	UnaryOperator	*		4367116	0					
ANR	4367247	Identifier	pval		4367116	1					
ANR	4367248	PrimaryExpression	0		4367116	1					
ANR	4367249	BreakStatement	break ;	47:20:810:815	4367116	8	True				
ANR	4367250	ReturnStatement	return 0 ;	53:12:864:872	4367116	1	True				
ANR	4367251	PrimaryExpression	0		4367116	0					
ANR	4367252	ReturnStatement	return - 1 ;	59:4:897:906	4367116	3	True				
ANR	4367253	UnaryOperationExpression	- 1		4367116	0					
ANR	4367254	UnaryOperator	-		4367116	0					
ANR	4367255	PrimaryExpression	1		4367116	1					
ANR	4367256	ReturnType	static int		4367116	1					
ANR	4367257	Identifier	get_monitor_def		4367116	2					
ANR	4367258	ParameterList	"target_long * pval , const char * name"		4367116	3					
ANR	4367259	Parameter	target_long * pval	1:27:27:43	4367116	0	True				
ANR	4367260	ParameterType	target_long *		4367116	0					
ANR	4367261	Identifier	pval		4367116	1					
ANR	4367262	Parameter	const char * name	1:46:46:61	4367116	1	True				
ANR	4367263	ParameterType	const char *		4367116	0					
ANR	4367264	Identifier	name		4367116	1					
ANR	4367265	CFGEntryNode	ENTRY		4367116		True				
ANR	4367266	CFGExitNode	EXIT		4367116		True				
ANR	4367267	Symbol	NULL		4367116						
ANR	4367268	Symbol	* pval		4367116						
ANR	4367269	Symbol	md -> type		4367116						
ANR	4367270	Symbol	pval		4367116						
ANR	4367271	Symbol	monitor_defs		4367116						
ANR	4367272	Symbol	env		4367116						
ANR	4367273	Symbol	ptr		4367116						
ANR	4367274	Symbol	md -> offset		4367116						
ANR	4367275	Symbol	md -> name		4367116						
ANR	4367276	Symbol	compare_cmd		4367116						
ANR	4367277	Symbol	md -> get_value		4367116						
ANR	4367278	Symbol	mon_get_cpu		4367116						
ANR	4367279	Symbol	md		4367116						
ANR	4367280	Symbol	name		4367116						
ANR	4367281	Symbol	* ptr		4367116						
ANR	4367282	Symbol	* ( target_long * ) ptr		4367116						
ANR	4367283	Symbol	* ( int32_t * ) ptr		4367116						
ANR	4367284	Symbol	* md		4367116						
