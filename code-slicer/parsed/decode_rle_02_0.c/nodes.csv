command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2026810	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_rle_02_0.c								
ANR	2026811	Function	decode_rle	1:0:0:2250							
ANR	2026812	FunctionDef	decode_rle (CamtasiaContext * c)		2026811	0					
ANR	2026813	CompoundStatement		3:0:43:2250	2026811	0					
ANR	2026814	IdentifierDeclStatement	unsigned char * src = c -> decomp_buf ;	5:4:50:84	2026811	0	True				
ANR	2026815	IdentifierDecl	* src = c -> decomp_buf		2026811	0					
ANR	2026816	IdentifierDeclType	unsigned char *		2026811	0					
ANR	2026817	Identifier	src		2026811	1					
ANR	2026818	AssignmentExpression	* src = c -> decomp_buf		2026811	2		=			
ANR	2026819	Identifier	src		2026811	0					
ANR	2026820	PtrMemberAccess	c -> decomp_buf		2026811	1					
ANR	2026821	Identifier	c		2026811	0					
ANR	2026822	Identifier	decomp_buf		2026811	1					
ANR	2026823	IdentifierDeclStatement	unsigned char * output ;	7:4:91:112	2026811	1	True				
ANR	2026824	IdentifierDecl	* output		2026811	0					
ANR	2026825	IdentifierDeclType	unsigned char *		2026811	0					
ANR	2026826	Identifier	output		2026811	1					
ANR	2026827	IdentifierDeclStatement	"int p1 , p2 , line = c -> height , pos = 0 , i ;"	9:4:119:155	2026811	2	True				
ANR	2026828	IdentifierDecl	p1		2026811	0					
ANR	2026829	IdentifierDeclType	int		2026811	0					
ANR	2026830	Identifier	p1		2026811	1					
ANR	2026831	IdentifierDecl	p2		2026811	1					
ANR	2026832	IdentifierDeclType	int		2026811	0					
ANR	2026833	Identifier	p2		2026811	1					
ANR	2026834	IdentifierDecl	line = c -> height		2026811	2					
ANR	2026835	IdentifierDeclType	int		2026811	0					
ANR	2026836	Identifier	line		2026811	1					
ANR	2026837	AssignmentExpression	line = c -> height		2026811	2		=			
ANR	2026838	Identifier	line		2026811	0					
ANR	2026839	PtrMemberAccess	c -> height		2026811	1					
ANR	2026840	Identifier	c		2026811	0					
ANR	2026841	Identifier	height		2026811	1					
ANR	2026842	IdentifierDecl	pos = 0		2026811	3					
ANR	2026843	IdentifierDeclType	int		2026811	0					
ANR	2026844	Identifier	pos		2026811	1					
ANR	2026845	AssignmentExpression	pos = 0		2026811	2		=			
ANR	2026846	Identifier	pos		2026811	0					
ANR	2026847	PrimaryExpression	0		2026811	1					
ANR	2026848	IdentifierDecl	i		2026811	4					
ANR	2026849	IdentifierDeclType	int		2026811	0					
ANR	2026850	Identifier	i		2026811	1					
ANR	2026851	ExpressionStatement	output = c -> pic . data [ 0 ] + ( c -> height - 1 ) * c -> pic . linesize [ 0 ]	13:4:168:230	2026811	3	True				
ANR	2026852	AssignmentExpression	output = c -> pic . data [ 0 ] + ( c -> height - 1 ) * c -> pic . linesize [ 0 ]		2026811	0		=			
ANR	2026853	Identifier	output		2026811	0					
ANR	2026854	AdditiveExpression	c -> pic . data [ 0 ] + ( c -> height - 1 ) * c -> pic . linesize [ 0 ]		2026811	1		+			
ANR	2026855	ArrayIndexing	c -> pic . data [ 0 ]		2026811	0					
ANR	2026856	MemberAccess	c -> pic . data		2026811	0					
ANR	2026857	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026858	Identifier	c		2026811	0					
ANR	2026859	Identifier	pic		2026811	1					
ANR	2026860	Identifier	data		2026811	1					
ANR	2026861	PrimaryExpression	0		2026811	1					
ANR	2026862	MultiplicativeExpression	( c -> height - 1 ) * c -> pic . linesize [ 0 ]		2026811	1		*			
ANR	2026863	AdditiveExpression	c -> height - 1		2026811	0		-			
ANR	2026864	PtrMemberAccess	c -> height		2026811	0					
ANR	2026865	Identifier	c		2026811	0					
ANR	2026866	Identifier	height		2026811	1					
ANR	2026867	PrimaryExpression	1		2026811	1					
ANR	2026868	ArrayIndexing	c -> pic . linesize [ 0 ]		2026811	1					
ANR	2026869	MemberAccess	c -> pic . linesize		2026811	0					
ANR	2026870	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026871	Identifier	c		2026811	0					
ANR	2026872	Identifier	pic		2026811	1					
ANR	2026873	Identifier	linesize		2026811	1					
ANR	2026874	PrimaryExpression	0		2026811	1					
ANR	2026875	WhileStatement	while ( src < c -> decomp_buf + c -> decomp_size )		2026811	4					
ANR	2026876	Condition	src < c -> decomp_buf + c -> decomp_size	15:10:243:278	2026811	0	True				
ANR	2026877	RelationalExpression	src < c -> decomp_buf + c -> decomp_size		2026811	0		<			
ANR	2026878	Identifier	src		2026811	0					
ANR	2026879	AdditiveExpression	c -> decomp_buf + c -> decomp_size		2026811	1		+			
ANR	2026880	PtrMemberAccess	c -> decomp_buf		2026811	0					
ANR	2026881	Identifier	c		2026811	0					
ANR	2026882	Identifier	decomp_buf		2026811	1					
ANR	2026883	PtrMemberAccess	c -> decomp_size		2026811	1					
ANR	2026884	Identifier	c		2026811	0					
ANR	2026885	Identifier	decomp_size		2026811	1					
ANR	2026886	CompoundStatement		13:48:237:237	2026811	1					
ANR	2026887	ExpressionStatement	p1 = * src ++	17:8:292:303	2026811	0	True				
ANR	2026888	AssignmentExpression	p1 = * src ++		2026811	0		=			
ANR	2026889	Identifier	p1		2026811	0					
ANR	2026890	UnaryOperationExpression	* src ++		2026811	1					
ANR	2026891	UnaryOperator	*		2026811	0					
ANR	2026892	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2026893	Identifier	src		2026811	0					
ANR	2026894	IncDec	++		2026811	1					
ANR	2026895	IfStatement	if ( p1 == 0 )		2026811	1					
ANR	2026896	Condition	p1 == 0	19:11:317:323	2026811	0	True				
ANR	2026897	EqualityExpression	p1 == 0		2026811	0		==			
ANR	2026898	Identifier	p1		2026811	0					
ANR	2026899	PrimaryExpression	0		2026811	1					
ANR	2026900	CompoundStatement		17:20:282:282	2026811	1					
ANR	2026901	ExpressionStatement	p2 = * src ++	21:12:355:366	2026811	0	True				
ANR	2026902	AssignmentExpression	p2 = * src ++		2026811	0		=			
ANR	2026903	Identifier	p2		2026811	0					
ANR	2026904	UnaryOperationExpression	* src ++		2026811	1					
ANR	2026905	UnaryOperator	*		2026811	0					
ANR	2026906	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2026907	Identifier	src		2026811	0					
ANR	2026908	IncDec	++		2026811	1					
ANR	2026909	IfStatement	if ( p2 == 0 )		2026811	1					
ANR	2026910	Condition	p2 == 0	23:15:384:390	2026811	0	True				
ANR	2026911	EqualityExpression	p2 == 0		2026811	0		==			
ANR	2026912	Identifier	p2		2026811	0					
ANR	2026913	PrimaryExpression	0		2026811	1					
ANR	2026914	CompoundStatement		21:24:349:349	2026811	1					
ANR	2026915	ExpressionStatement	output = c -> pic . data [ 0 ] + ( -- line ) * c -> pic . linesize [ 0 ]	25:16:426:481	2026811	0	True				
ANR	2026916	AssignmentExpression	output = c -> pic . data [ 0 ] + ( -- line ) * c -> pic . linesize [ 0 ]		2026811	0		=			
ANR	2026917	Identifier	output		2026811	0					
ANR	2026918	AdditiveExpression	c -> pic . data [ 0 ] + ( -- line ) * c -> pic . linesize [ 0 ]		2026811	1		+			
ANR	2026919	ArrayIndexing	c -> pic . data [ 0 ]		2026811	0					
ANR	2026920	MemberAccess	c -> pic . data		2026811	0					
ANR	2026921	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026922	Identifier	c		2026811	0					
ANR	2026923	Identifier	pic		2026811	1					
ANR	2026924	Identifier	data		2026811	1					
ANR	2026925	PrimaryExpression	0		2026811	1					
ANR	2026926	MultiplicativeExpression	( -- line ) * c -> pic . linesize [ 0 ]		2026811	1		*			
ANR	2026927	UnaryExpression	-- line		2026811	0					
ANR	2026928	IncDec	--		2026811	0					
ANR	2026929	Identifier	line		2026811	1					
ANR	2026930	ArrayIndexing	c -> pic . linesize [ 0 ]		2026811	1					
ANR	2026931	MemberAccess	c -> pic . linesize		2026811	0					
ANR	2026932	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026933	Identifier	c		2026811	0					
ANR	2026934	Identifier	pic		2026811	1					
ANR	2026935	Identifier	linesize		2026811	1					
ANR	2026936	PrimaryExpression	0		2026811	1					
ANR	2026937	ExpressionStatement	pos = 0	27:16:500:507	2026811	1	True				
ANR	2026938	AssignmentExpression	pos = 0		2026811	0		=			
ANR	2026939	Identifier	pos		2026811	0					
ANR	2026940	PrimaryExpression	0		2026811	1					
ANR	2026941	ContinueStatement	continue ;	29:16:526:534	2026811	2	True				
ANR	2026942	ElseStatement	else		2026811	0					
ANR	2026943	IfStatement	if ( p2 == 1 )		2026811	0					
ANR	2026944	Condition	p2 == 1	31:22:559:565	2026811	0	True				
ANR	2026945	EqualityExpression	p2 == 1		2026811	0		==			
ANR	2026946	Identifier	p2		2026811	0					
ANR	2026947	PrimaryExpression	1		2026811	1					
ANR	2026948	CompoundStatement		29:31:524:524	2026811	1					
ANR	2026949	ReturnStatement	return 0 ;	33:16:604:612	2026811	0	True				
ANR	2026950	PrimaryExpression	0		2026811	0					
ANR	2026951	ElseStatement	else		2026811	0					
ANR	2026952	IfStatement	if ( p2 == 2 )		2026811	0					
ANR	2026953	Condition	p2 == 2	35:22:637:643	2026811	0	True				
ANR	2026954	EqualityExpression	p2 == 2		2026811	0		==			
ANR	2026955	Identifier	p2		2026811	0					
ANR	2026956	PrimaryExpression	2		2026811	1					
ANR	2026957	CompoundStatement		33:31:602:602	2026811	1					
ANR	2026958	ExpressionStatement	p1 = * src ++	37:16:672:683	2026811	0	True				
ANR	2026959	AssignmentExpression	p1 = * src ++		2026811	0		=			
ANR	2026960	Identifier	p1		2026811	0					
ANR	2026961	UnaryOperationExpression	* src ++		2026811	1					
ANR	2026962	UnaryOperator	*		2026811	0					
ANR	2026963	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2026964	Identifier	src		2026811	0					
ANR	2026965	IncDec	++		2026811	1					
ANR	2026966	ExpressionStatement	p2 = * src ++	39:16:702:713	2026811	1	True				
ANR	2026967	AssignmentExpression	p2 = * src ++		2026811	0		=			
ANR	2026968	Identifier	p2		2026811	0					
ANR	2026969	UnaryOperationExpression	* src ++		2026811	1					
ANR	2026970	UnaryOperator	*		2026811	0					
ANR	2026971	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2026972	Identifier	src		2026811	0					
ANR	2026973	IncDec	++		2026811	1					
ANR	2026974	ExpressionStatement	line -= p2	41:16:732:742	2026811	2	True				
ANR	2026975	AssignmentExpression	line -= p2		2026811	0		-=			
ANR	2026976	Identifier	line		2026811	0					
ANR	2026977	Identifier	p2		2026811	1					
ANR	2026978	ExpressionStatement	pos += p1	43:16:761:770	2026811	3	True				
ANR	2026979	AssignmentExpression	pos += p1		2026811	0		+=			
ANR	2026980	Identifier	pos		2026811	0					
ANR	2026981	Identifier	p1		2026811	1					
ANR	2026982	ExpressionStatement	output = c -> pic . data [ 0 ] + line * c -> pic . linesize [ 0 ] + pos * ( c -> bpp / 8 )	45:16:789:861	2026811	4	True				
ANR	2026983	AssignmentExpression	output = c -> pic . data [ 0 ] + line * c -> pic . linesize [ 0 ] + pos * ( c -> bpp / 8 )		2026811	0		=			
ANR	2026984	Identifier	output		2026811	0					
ANR	2026985	AdditiveExpression	c -> pic . data [ 0 ] + line * c -> pic . linesize [ 0 ] + pos * ( c -> bpp / 8 )		2026811	1		+			
ANR	2026986	ArrayIndexing	c -> pic . data [ 0 ]		2026811	0					
ANR	2026987	MemberAccess	c -> pic . data		2026811	0					
ANR	2026988	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026989	Identifier	c		2026811	0					
ANR	2026990	Identifier	pic		2026811	1					
ANR	2026991	Identifier	data		2026811	1					
ANR	2026992	PrimaryExpression	0		2026811	1					
ANR	2026993	AdditiveExpression	line * c -> pic . linesize [ 0 ] + pos * ( c -> bpp / 8 )		2026811	1		+			
ANR	2026994	MultiplicativeExpression	line * c -> pic . linesize [ 0 ]		2026811	0		*			
ANR	2026995	Identifier	line		2026811	0					
ANR	2026996	ArrayIndexing	c -> pic . linesize [ 0 ]		2026811	1					
ANR	2026997	MemberAccess	c -> pic . linesize		2026811	0					
ANR	2026998	PtrMemberAccess	c -> pic		2026811	0					
ANR	2026999	Identifier	c		2026811	0					
ANR	2027000	Identifier	pic		2026811	1					
ANR	2027001	Identifier	linesize		2026811	1					
ANR	2027002	PrimaryExpression	0		2026811	1					
ANR	2027003	MultiplicativeExpression	pos * ( c -> bpp / 8 )		2026811	1		*			
ANR	2027004	Identifier	pos		2026811	0					
ANR	2027005	MultiplicativeExpression	c -> bpp / 8		2026811	1		/			
ANR	2027006	PtrMemberAccess	c -> bpp		2026811	0					
ANR	2027007	Identifier	c		2026811	0					
ANR	2027008	Identifier	bpp		2026811	1					
ANR	2027009	PrimaryExpression	8		2026811	1					
ANR	2027010	ContinueStatement	continue ;	47:16:880:888	2026811	5	True				
ANR	2027011	ForStatement	for ( i = 0 ; i < p2 * ( c -> bpp / 8 ) ; i ++ )		2026811	2					
ANR	2027012	ForInit	i = 0 ;	53:16:948:953	2026811	0	True				
ANR	2027013	AssignmentExpression	i = 0		2026811	0		=			
ANR	2027014	Identifier	i		2026811	0					
ANR	2027015	PrimaryExpression	0		2026811	1					
ANR	2027016	Condition	i < p2 * ( c -> bpp / 8 )	53:23:955:975	2026811	1	True				
ANR	2027017	RelationalExpression	i < p2 * ( c -> bpp / 8 )		2026811	0		<			
ANR	2027018	Identifier	i		2026811	0					
ANR	2027019	MultiplicativeExpression	p2 * ( c -> bpp / 8 )		2026811	1		*			
ANR	2027020	Identifier	p2		2026811	0					
ANR	2027021	MultiplicativeExpression	c -> bpp / 8		2026811	1		/			
ANR	2027022	PtrMemberAccess	c -> bpp		2026811	0					
ANR	2027023	Identifier	c		2026811	0					
ANR	2027024	Identifier	bpp		2026811	1					
ANR	2027025	PrimaryExpression	8		2026811	1					
ANR	2027026	PostIncDecOperationExpression	i ++	53:46:978:980	2026811	2	True				
ANR	2027027	Identifier	i		2026811	0					
ANR	2027028	IncDec	++		2026811	1					
ANR	2027029	CompoundStatement		51:51:939:939	2026811	3					
ANR	2027030	ExpressionStatement	* output ++ = * src ++	55:16:1002:1020	2026811	0	True				
ANR	2027031	AssignmentExpression	* output ++ = * src ++		2026811	0		=			
ANR	2027032	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027033	UnaryOperator	*		2026811	0					
ANR	2027034	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027035	Identifier	output		2026811	0					
ANR	2027036	IncDec	++		2026811	1					
ANR	2027037	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027038	UnaryOperator	*		2026811	0					
ANR	2027039	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027040	Identifier	src		2026811	0					
ANR	2027041	IncDec	++		2026811	1					
ANR	2027042	IfStatement	if ( c -> bpp == 8 && ( p2 & 1 ) )		2026811	3					
ANR	2027043	Condition	c -> bpp == 8 && ( p2 & 1 )	61:8:1104:1126	2026811	0	True				
ANR	2027044	AndExpression	c -> bpp == 8 && ( p2 & 1 )		2026811	0		&&			
ANR	2027045	EqualityExpression	c -> bpp == 8		2026811	0		==			
ANR	2027046	PtrMemberAccess	c -> bpp		2026811	0					
ANR	2027047	Identifier	c		2026811	0					
ANR	2027048	Identifier	bpp		2026811	1					
ANR	2027049	PrimaryExpression	8		2026811	1					
ANR	2027050	BitAndExpression	p2 & 1		2026811	1		&			
ANR	2027051	Identifier	p2		2026811	0					
ANR	2027052	PrimaryExpression	1		2026811	1					
ANR	2027053	CompoundStatement		59:33:1085:1085	2026811	1					
ANR	2027054	ExpressionStatement	src ++	63:2:1134:1139	2026811	0	True				
ANR	2027055	PostIncDecOperationExpression	src ++		2026811	0					
ANR	2027056	Identifier	src		2026811	0					
ANR	2027057	IncDec	++		2026811	1					
ANR	2027058	ExpressionStatement	pos += p2	67:12:1162:1171	2026811	4	True				
ANR	2027059	AssignmentExpression	pos += p2		2026811	0		+=			
ANR	2027060	Identifier	pos		2026811	0					
ANR	2027061	Identifier	p2		2026811	1					
ANR	2027062	ElseStatement	else		2026811	0					
ANR	2027063	CompoundStatement		69:12:1176:1186	2026811	0					
ANR	2027064	IdentifierDeclStatement	int pix [ 3 ] ;	71:12:1220:1230	2026811	0	True				
ANR	2027065	IdentifierDecl	pix [ 3 ]		2026811	0					
ANR	2027066	IdentifierDeclType	int [ 3 ]		2026811	0					
ANR	2027067	Identifier	pix		2026811	1					
ANR	2027068	PrimaryExpression	3		2026811	2					
ANR	2027069	SwitchStatement	switch ( c -> bpp )		2026811	1					
ANR	2027070	Condition	c -> bpp	73:19:1269:1274	2026811	0	True				
ANR	2027071	PtrMemberAccess	c -> bpp		2026811	0					
ANR	2027072	Identifier	c		2026811	0					
ANR	2027073	Identifier	bpp		2026811	1					
ANR	2027074	CompoundStatement		71:26:1232:1232	2026811	1					
ANR	2027075	Label	case 8 :	75:12:1291:1298	2026811	0	True				
ANR	2027076	ExpressionStatement	pix [ 0 ] = * src ++	75:21:1300:1315	2026811	1	True				
ANR	2027077	AssignmentExpression	pix [ 0 ] = * src ++		2026811	0		=			
ANR	2027078	ArrayIndexing	pix [ 0 ]		2026811	0					
ANR	2027079	Identifier	pix		2026811	0					
ANR	2027080	PrimaryExpression	0		2026811	1					
ANR	2027081	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027082	UnaryOperator	*		2026811	0					
ANR	2027083	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027084	Identifier	src		2026811	0					
ANR	2027085	IncDec	++		2026811	1					
ANR	2027086	BreakStatement	break ;	77:21:1339:1344	2026811	2	True				
ANR	2027087	Label	case 16 :	79:12:1359:1366	2026811	3	True				
ANR	2027088	ExpressionStatement	pix [ 0 ] = * src ++	79:21:1368:1383	2026811	4	True				
ANR	2027089	AssignmentExpression	pix [ 0 ] = * src ++		2026811	0		=			
ANR	2027090	ArrayIndexing	pix [ 0 ]		2026811	0					
ANR	2027091	Identifier	pix		2026811	0					
ANR	2027092	PrimaryExpression	0		2026811	1					
ANR	2027093	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027094	UnaryOperator	*		2026811	0					
ANR	2027095	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027096	Identifier	src		2026811	0					
ANR	2027097	IncDec	++		2026811	1					
ANR	2027098	ExpressionStatement	pix [ 1 ] = * src ++	81:21:1407:1422	2026811	5	True				
ANR	2027099	AssignmentExpression	pix [ 1 ] = * src ++		2026811	0		=			
ANR	2027100	ArrayIndexing	pix [ 1 ]		2026811	0					
ANR	2027101	Identifier	pix		2026811	0					
ANR	2027102	PrimaryExpression	1		2026811	1					
ANR	2027103	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027104	UnaryOperator	*		2026811	0					
ANR	2027105	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027106	Identifier	src		2026811	0					
ANR	2027107	IncDec	++		2026811	1					
ANR	2027108	BreakStatement	break ;	83:21:1446:1451	2026811	6	True				
ANR	2027109	Label	case 24 :	85:12:1466:1473	2026811	7	True				
ANR	2027110	ExpressionStatement	pix [ 0 ] = * src ++	85:21:1475:1490	2026811	8	True				
ANR	2027111	AssignmentExpression	pix [ 0 ] = * src ++		2026811	0		=			
ANR	2027112	ArrayIndexing	pix [ 0 ]		2026811	0					
ANR	2027113	Identifier	pix		2026811	0					
ANR	2027114	PrimaryExpression	0		2026811	1					
ANR	2027115	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027116	UnaryOperator	*		2026811	0					
ANR	2027117	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027118	Identifier	src		2026811	0					
ANR	2027119	IncDec	++		2026811	1					
ANR	2027120	ExpressionStatement	pix [ 1 ] = * src ++	87:21:1514:1529	2026811	9	True				
ANR	2027121	AssignmentExpression	pix [ 1 ] = * src ++		2026811	0		=			
ANR	2027122	ArrayIndexing	pix [ 1 ]		2026811	0					
ANR	2027123	Identifier	pix		2026811	0					
ANR	2027124	PrimaryExpression	1		2026811	1					
ANR	2027125	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027126	UnaryOperator	*		2026811	0					
ANR	2027127	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027128	Identifier	src		2026811	0					
ANR	2027129	IncDec	++		2026811	1					
ANR	2027130	ExpressionStatement	pix [ 2 ] = * src ++	89:21:1553:1568	2026811	10	True				
ANR	2027131	AssignmentExpression	pix [ 2 ] = * src ++		2026811	0		=			
ANR	2027132	ArrayIndexing	pix [ 2 ]		2026811	0					
ANR	2027133	Identifier	pix		2026811	0					
ANR	2027134	PrimaryExpression	2		2026811	1					
ANR	2027135	UnaryOperationExpression	* src ++		2026811	1					
ANR	2027136	UnaryOperator	*		2026811	0					
ANR	2027137	PostIncDecOperationExpression	src ++		2026811	1					
ANR	2027138	Identifier	src		2026811	0					
ANR	2027139	IncDec	++		2026811	1					
ANR	2027140	BreakStatement	break ;	91:21:1592:1597	2026811	11	True				
ANR	2027141	ForStatement	for ( i = 0 ; i < p1 ; i ++ )		2026811	2					
ANR	2027142	ForInit	i = 0 ;	95:16:1631:1636	2026811	0	True				
ANR	2027143	AssignmentExpression	i = 0		2026811	0		=			
ANR	2027144	Identifier	i		2026811	0					
ANR	2027145	PrimaryExpression	0		2026811	1					
ANR	2027146	Condition	i < p1	95:23:1638:1643	2026811	1	True				
ANR	2027147	RelationalExpression	i < p1		2026811	0		<			
ANR	2027148	Identifier	i		2026811	0					
ANR	2027149	Identifier	p1		2026811	1					
ANR	2027150	PostIncDecOperationExpression	i ++	95:31:1646:1648	2026811	2	True				
ANR	2027151	Identifier	i		2026811	0					
ANR	2027152	IncDec	++		2026811	1					
ANR	2027153	CompoundStatement		93:36:1607:1607	2026811	3					
ANR	2027154	SwitchStatement	switch ( c -> bpp )		2026811	0					
ANR	2027155	Condition	c -> bpp	97:23:1677:1682	2026811	0	True				
ANR	2027156	PtrMemberAccess	c -> bpp		2026811	0					
ANR	2027157	Identifier	c		2026811	0					
ANR	2027158	Identifier	bpp		2026811	1					
ANR	2027159	CompoundStatement		95:30:1640:1640	2026811	1					
ANR	2027160	Label	case 8 :	99:16:1703:1710	2026811	0	True				
ANR	2027161	ExpressionStatement	* output ++ = pix [ 0 ]	99:25:1712:1730	2026811	1	True				
ANR	2027162	AssignmentExpression	* output ++ = pix [ 0 ]		2026811	0		=			
ANR	2027163	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027164	UnaryOperator	*		2026811	0					
ANR	2027165	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027166	Identifier	output		2026811	0					
ANR	2027167	IncDec	++		2026811	1					
ANR	2027168	ArrayIndexing	pix [ 0 ]		2026811	1					
ANR	2027169	Identifier	pix		2026811	0					
ANR	2027170	PrimaryExpression	0		2026811	1					
ANR	2027171	BreakStatement	break ;	101:25:1758:1763	2026811	2	True				
ANR	2027172	Label	case 16 :	103:16:1782:1789	2026811	3	True				
ANR	2027173	ExpressionStatement	* output ++ = pix [ 0 ]	103:25:1791:1809	2026811	4	True				
ANR	2027174	AssignmentExpression	* output ++ = pix [ 0 ]		2026811	0		=			
ANR	2027175	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027176	UnaryOperator	*		2026811	0					
ANR	2027177	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027178	Identifier	output		2026811	0					
ANR	2027179	IncDec	++		2026811	1					
ANR	2027180	ArrayIndexing	pix [ 0 ]		2026811	1					
ANR	2027181	Identifier	pix		2026811	0					
ANR	2027182	PrimaryExpression	0		2026811	1					
ANR	2027183	ExpressionStatement	* output ++ = pix [ 1 ]	105:25:1837:1855	2026811	5	True				
ANR	2027184	AssignmentExpression	* output ++ = pix [ 1 ]		2026811	0		=			
ANR	2027185	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027186	UnaryOperator	*		2026811	0					
ANR	2027187	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027188	Identifier	output		2026811	0					
ANR	2027189	IncDec	++		2026811	1					
ANR	2027190	ArrayIndexing	pix [ 1 ]		2026811	1					
ANR	2027191	Identifier	pix		2026811	0					
ANR	2027192	PrimaryExpression	1		2026811	1					
ANR	2027193	BreakStatement	break ;	107:25:1883:1888	2026811	6	True				
ANR	2027194	Label	case 24 :	109:16:1907:1914	2026811	7	True				
ANR	2027195	ExpressionStatement	* output ++ = pix [ 0 ]	109:25:1916:1934	2026811	8	True				
ANR	2027196	AssignmentExpression	* output ++ = pix [ 0 ]		2026811	0		=			
ANR	2027197	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027198	UnaryOperator	*		2026811	0					
ANR	2027199	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027200	Identifier	output		2026811	0					
ANR	2027201	IncDec	++		2026811	1					
ANR	2027202	ArrayIndexing	pix [ 0 ]		2026811	1					
ANR	2027203	Identifier	pix		2026811	0					
ANR	2027204	PrimaryExpression	0		2026811	1					
ANR	2027205	ExpressionStatement	* output ++ = pix [ 1 ]	111:25:1962:1980	2026811	9	True				
ANR	2027206	AssignmentExpression	* output ++ = pix [ 1 ]		2026811	0		=			
ANR	2027207	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027208	UnaryOperator	*		2026811	0					
ANR	2027209	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027210	Identifier	output		2026811	0					
ANR	2027211	IncDec	++		2026811	1					
ANR	2027212	ArrayIndexing	pix [ 1 ]		2026811	1					
ANR	2027213	Identifier	pix		2026811	0					
ANR	2027214	PrimaryExpression	1		2026811	1					
ANR	2027215	ExpressionStatement	* output ++ = pix [ 2 ]	113:25:2008:2026	2026811	10	True				
ANR	2027216	AssignmentExpression	* output ++ = pix [ 2 ]		2026811	0		=			
ANR	2027217	UnaryOperationExpression	* output ++		2026811	0					
ANR	2027218	UnaryOperator	*		2026811	0					
ANR	2027219	PostIncDecOperationExpression	output ++		2026811	1					
ANR	2027220	Identifier	output		2026811	0					
ANR	2027221	IncDec	++		2026811	1					
ANR	2027222	ArrayIndexing	pix [ 2 ]		2026811	1					
ANR	2027223	Identifier	pix		2026811	0					
ANR	2027224	PrimaryExpression	2		2026811	1					
ANR	2027225	BreakStatement	break ;	115:25:2054:2059	2026811	11	True				
ANR	2027226	ExpressionStatement	pos += p1	121:12:2108:2117	2026811	3	True				
ANR	2027227	AssignmentExpression	pos += p1		2026811	0		+=			
ANR	2027228	Identifier	pos		2026811	0					
ANR	2027229	Identifier	p1		2026811	1					
ANR	2027230	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Camtasia warning: no End-of-picture code\\n"" )"	129:4:2148:2224	2026811	5	True				
ANR	2027231	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Camtasia warning: no End-of-picture code\\n"" )"		2026811	0					
ANR	2027232	Callee	av_log		2026811	0					
ANR	2027233	Identifier	av_log		2026811	0					
ANR	2027234	ArgumentList	c -> avctx		2026811	1					
ANR	2027235	Argument	c -> avctx		2026811	0					
ANR	2027236	PtrMemberAccess	c -> avctx		2026811	0					
ANR	2027237	Identifier	c		2026811	0					
ANR	2027238	Identifier	avctx		2026811	1					
ANR	2027239	Argument	AV_LOG_ERROR		2026811	1					
ANR	2027240	Identifier	AV_LOG_ERROR		2026811	0					
ANR	2027241	Argument	"""Camtasia warning: no End-of-picture code\\n"""		2026811	2					
ANR	2027242	PrimaryExpression	"""Camtasia warning: no End-of-picture code\\n"""		2026811	0					
ANR	2027243	ReturnStatement	return 1 ;	131:4:2239:2247	2026811	6	True				
ANR	2027244	PrimaryExpression	1		2026811	0					
ANR	2027245	ReturnType	static int		2026811	1					
ANR	2027246	Identifier	decode_rle		2026811	2					
ANR	2027247	ParameterList	CamtasiaContext * c		2026811	3					
ANR	2027248	Parameter	CamtasiaContext * c	1:22:22:39	2026811	0	True				
ANR	2027249	ParameterType	CamtasiaContext *		2026811	0					
ANR	2027250	Identifier	c		2026811	1					
ANR	2027251	CFGEntryNode	ENTRY		2026811		True				
ANR	2027252	CFGExitNode	EXIT		2026811		True				
ANR	2027253	Symbol	p1		2026811						
ANR	2027254	Symbol	p2		2026811						
ANR	2027255	Symbol	line		2026811						
ANR	2027256	Symbol	* output ++		2026811						
ANR	2027257	Symbol	* pix		2026811						
ANR	2027258	Symbol	c -> bpp		2026811						
ANR	2027259	Symbol	output		2026811						
ANR	2027260	Symbol	* c -> pic		2026811						
ANR	2027261	Symbol	pos		2026811						
ANR	2027262	Symbol	c -> height		2026811						
ANR	2027263	Symbol	* c -> pic . linesize		2026811						
ANR	2027264	Symbol	pix		2026811						
ANR	2027265	Symbol	* c -> pic . data		2026811						
ANR	2027266	Symbol	c		2026811						
ANR	2027267	Symbol	AV_LOG_ERROR		2026811						
ANR	2027268	Symbol	src		2026811						
ANR	2027269	Symbol	c -> pic		2026811						
ANR	2027270	Symbol	* * c		2026811						
ANR	2027271	Symbol	i		2026811						
ANR	2027272	Symbol	* c		2026811						
ANR	2027273	Symbol	c -> decomp_buf		2026811						
ANR	2027274	Symbol	c -> pic . data		2026811						
ANR	2027275	Symbol	c -> avctx		2026811						
ANR	2027276	Symbol	* src ++		2026811						
ANR	2027277	Symbol	c -> pic . linesize		2026811						
ANR	2027278	Symbol	c -> decomp_size		2026811						
