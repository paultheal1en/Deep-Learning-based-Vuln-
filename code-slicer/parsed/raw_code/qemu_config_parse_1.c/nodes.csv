command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6972843	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_config_parse_1.c								
ANR	6972844	Function	qemu_config_parse	1:0:0:1704							
ANR	6972845	FunctionDef	"qemu_config_parse (FILE * fp , QemuOptsList * * lists , const char * fname)"		6972844	0					
ANR	6972846	CompoundStatement		3:0:74:1704	6972844	0					
ANR	6972847	IdentifierDeclStatement	"char line [ 1024 ] , group [ 64 ] , id [ 64 ] , arg [ 64 ] , value [ 1024 ] ;"	5:4:81:137	6972844	0	True				
ANR	6972848	IdentifierDecl	line [ 1024 ]		6972844	0					
ANR	6972849	IdentifierDeclType	char [ 1024 ]		6972844	0					
ANR	6972850	Identifier	line		6972844	1					
ANR	6972851	PrimaryExpression	1024		6972844	2					
ANR	6972852	IdentifierDecl	group [ 64 ]		6972844	1					
ANR	6972853	IdentifierDeclType	char [ 64 ]		6972844	0					
ANR	6972854	Identifier	group		6972844	1					
ANR	6972855	PrimaryExpression	64		6972844	2					
ANR	6972856	IdentifierDecl	id [ 64 ]		6972844	2					
ANR	6972857	IdentifierDeclType	char [ 64 ]		6972844	0					
ANR	6972858	Identifier	id		6972844	1					
ANR	6972859	PrimaryExpression	64		6972844	2					
ANR	6972860	IdentifierDecl	arg [ 64 ]		6972844	3					
ANR	6972861	IdentifierDeclType	char [ 64 ]		6972844	0					
ANR	6972862	Identifier	arg		6972844	1					
ANR	6972863	PrimaryExpression	64		6972844	2					
ANR	6972864	IdentifierDecl	value [ 1024 ]		6972844	4					
ANR	6972865	IdentifierDeclType	char [ 1024 ]		6972844	0					
ANR	6972866	Identifier	value		6972844	1					
ANR	6972867	PrimaryExpression	1024		6972844	2					
ANR	6972868	IdentifierDeclStatement	Location loc ;	7:4:144:156	6972844	1	True				
ANR	6972869	IdentifierDecl	loc		6972844	0					
ANR	6972870	IdentifierDeclType	Location		6972844	0					
ANR	6972871	Identifier	loc		6972844	1					
ANR	6972872	IdentifierDeclStatement	QemuOptsList * list = NULL ;	9:4:163:188	6972844	2	True				
ANR	6972873	IdentifierDecl	* list = NULL		6972844	0					
ANR	6972874	IdentifierDeclType	QemuOptsList *		6972844	0					
ANR	6972875	Identifier	list		6972844	1					
ANR	6972876	AssignmentExpression	* list = NULL		6972844	2		=			
ANR	6972877	Identifier	NULL		6972844	0					
ANR	6972878	Identifier	NULL		6972844	1					
ANR	6972879	IdentifierDeclStatement	QemuOpts * opts = NULL ;	11:4:195:216	6972844	3	True				
ANR	6972880	IdentifierDecl	* opts = NULL		6972844	0					
ANR	6972881	IdentifierDeclType	QemuOpts *		6972844	0					
ANR	6972882	Identifier	opts		6972844	1					
ANR	6972883	AssignmentExpression	* opts = NULL		6972844	2		=			
ANR	6972884	Identifier	NULL		6972844	0					
ANR	6972885	Identifier	NULL		6972844	1					
ANR	6972886	IdentifierDeclStatement	"int res = - 1 , lno = 0 ;"	13:4:223:244	6972844	4	True				
ANR	6972887	IdentifierDecl	res = - 1		6972844	0					
ANR	6972888	IdentifierDeclType	int		6972844	0					
ANR	6972889	Identifier	res		6972844	1					
ANR	6972890	AssignmentExpression	res = - 1		6972844	2		=			
ANR	6972891	Identifier	res		6972844	0					
ANR	6972892	UnaryOperationExpression	- 1		6972844	1					
ANR	6972893	UnaryOperator	-		6972844	0					
ANR	6972894	PrimaryExpression	1		6972844	1					
ANR	6972895	IdentifierDecl	lno = 0		6972844	1					
ANR	6972896	IdentifierDeclType	int		6972844	0					
ANR	6972897	Identifier	lno		6972844	1					
ANR	6972898	AssignmentExpression	lno = 0		6972844	2		=			
ANR	6972899	Identifier	lno		6972844	0					
ANR	6972900	PrimaryExpression	0		6972844	1					
ANR	6972901	ExpressionStatement	loc_push_none ( & loc )	17:4:253:272	6972844	5	True				
ANR	6972902	CallExpression	loc_push_none ( & loc )		6972844	0					
ANR	6972903	Callee	loc_push_none		6972844	0					
ANR	6972904	Identifier	loc_push_none		6972844	0					
ANR	6972905	ArgumentList	& loc		6972844	1					
ANR	6972906	Argument	& loc		6972844	0					
ANR	6972907	UnaryOperationExpression	& loc		6972844	0					
ANR	6972908	UnaryOperator	&		6972844	0					
ANR	6972909	Identifier	loc		6972844	1					
ANR	6972910	WhileStatement	"while ( fgets ( line , sizeof ( line ) , fp ) != NULL )"		6972844	6					
ANR	6972911	Condition	"fgets ( line , sizeof ( line ) , fp ) != NULL"	19:11:286:322	6972844	0	True				
ANR	6972912	EqualityExpression	"fgets ( line , sizeof ( line ) , fp ) != NULL"		6972844	0		!=			
ANR	6972913	CallExpression	"fgets ( line , sizeof ( line ) , fp )"		6972844	0					
ANR	6972914	Callee	fgets		6972844	0					
ANR	6972915	Identifier	fgets		6972844	0					
ANR	6972916	ArgumentList	line		6972844	1					
ANR	6972917	Argument	line		6972844	0					
ANR	6972918	Identifier	line		6972844	0					
ANR	6972919	Argument	sizeof ( line )		6972844	1					
ANR	6972920	SizeofExpression	sizeof ( line )		6972844	0					
ANR	6972921	Sizeof	sizeof		6972844	0					
ANR	6972922	SizeofOperand	line		6972844	1					
ANR	6972923	Argument	fp		6972844	2					
ANR	6972924	Identifier	fp		6972844	0					
ANR	6972925	Identifier	NULL		6972844	1					
ANR	6972926	CompoundStatement		17:50:250:250	6972844	1					
ANR	6972927	ExpressionStatement	"loc_set_file ( fname , ++ lno )"	21:8:336:362	6972844	0	True				
ANR	6972928	CallExpression	"loc_set_file ( fname , ++ lno )"		6972844	0					
ANR	6972929	Callee	loc_set_file		6972844	0					
ANR	6972930	Identifier	loc_set_file		6972844	0					
ANR	6972931	ArgumentList	fname		6972844	1					
ANR	6972932	Argument	fname		6972844	0					
ANR	6972933	Identifier	fname		6972844	0					
ANR	6972934	Argument	++ lno		6972844	1					
ANR	6972935	UnaryExpression	++ lno		6972844	0					
ANR	6972936	IncDec	++		6972844	0					
ANR	6972937	Identifier	lno		6972844	1					
ANR	6972938	IfStatement	if ( line [ 0 ] == '\\n' )		6972844	1					
ANR	6972939	Condition	line [ 0 ] == '\\n'	23:12:377:391	6972844	0	True				
ANR	6972940	EqualityExpression	line [ 0 ] == '\\n'		6972844	0		==			
ANR	6972941	ArrayIndexing	line [ 0 ]		6972844	0					
ANR	6972942	Identifier	line		6972844	0					
ANR	6972943	PrimaryExpression	0		6972844	1					
ANR	6972944	PrimaryExpression	'\\n'		6972844	1					
ANR	6972945	CompoundStatement		21:29:319:319	6972844	1					
ANR	6972946	ContinueStatement	continue ;	27:12:445:453	6972844	0	True				
ANR	6972947	IfStatement	if ( line [ 0 ] == '#' )		6972844	2					
ANR	6972948	Condition	line [ 0 ] == '#'	31:12:479:492	6972844	0	True				
ANR	6972949	EqualityExpression	line [ 0 ] == '#'		6972844	0		==			
ANR	6972950	ArrayIndexing	line [ 0 ]		6972844	0					
ANR	6972951	Identifier	line		6972844	0					
ANR	6972952	PrimaryExpression	0		6972844	1					
ANR	6972953	PrimaryExpression	'#'		6972844	1					
ANR	6972954	CompoundStatement		29:28:420:420	6972844	1					
ANR	6972955	ContinueStatement	continue ;	35:12:537:545	6972844	0	True				
ANR	6972956	IfStatement	"if ( sscanf ( line , ""[%63s \\""%63[^\\""]\\""]"" , group , id ) == 2 )"		6972844	3					
ANR	6972957	Condition	"sscanf ( line , ""[%63s \\""%63[^\\""]\\""]"" , group , id ) == 2"	39:12:571:621	6972844	0	True				
ANR	6972958	EqualityExpression	"sscanf ( line , ""[%63s \\""%63[^\\""]\\""]"" , group , id ) == 2"		6972844	0		==			
ANR	6972959	CallExpression	"sscanf ( line , ""[%63s \\""%63[^\\""]\\""]"" , group , id )"		6972844	0					
ANR	6972960	Callee	sscanf		6972844	0					
ANR	6972961	Identifier	sscanf		6972844	0					
ANR	6972962	ArgumentList	line		6972844	1					
ANR	6972963	Argument	line		6972844	0					
ANR	6972964	Identifier	line		6972844	0					
ANR	6972965	Argument	"""[%63s \\""%63[^\\""]\\""]"""		6972844	1					
ANR	6972966	PrimaryExpression	"""[%63s \\""%63[^\\""]\\""]"""		6972844	0					
ANR	6972967	Argument	group		6972844	2					
ANR	6972968	Identifier	group		6972844	0					
ANR	6972969	Argument	id		6972844	3					
ANR	6972970	Identifier	id		6972844	0					
ANR	6972971	PrimaryExpression	2		6972844	1					
ANR	6972972	CompoundStatement		37:65:549:549	6972844	1					
ANR	6972973	ExpressionStatement	"list = find_list ( lists , group )"	43:12:672:702	6972844	0	True				
ANR	6972974	AssignmentExpression	"list = find_list ( lists , group )"		6972844	0		=			
ANR	6972975	Identifier	list		6972844	0					
ANR	6972976	CallExpression	"find_list ( lists , group )"		6972844	1					
ANR	6972977	Callee	find_list		6972844	0					
ANR	6972978	Identifier	find_list		6972844	0					
ANR	6972979	ArgumentList	lists		6972844	1					
ANR	6972980	Argument	lists		6972844	0					
ANR	6972981	Identifier	lists		6972844	0					
ANR	6972982	Argument	group		6972844	1					
ANR	6972983	Identifier	group		6972844	0					
ANR	6972984	IfStatement	if ( list == NULL )		6972844	1					
ANR	6972985	Condition	list == NULL	45:16:721:732	6972844	0	True				
ANR	6972986	EqualityExpression	list == NULL		6972844	0		==			
ANR	6972987	Identifier	list		6972844	0					
ANR	6972988	Identifier	NULL		6972844	1					
ANR	6972989	GotoStatement	goto out ;	47:16:752:760	6972844	1	True				
ANR	6972990	Identifier	out		6972844	0					
ANR	6972991	ExpressionStatement	"opts = qemu_opts_create ( list , id , 1 )"	49:12:775:811	6972844	2	True				
ANR	6972992	AssignmentExpression	"opts = qemu_opts_create ( list , id , 1 )"		6972844	0		=			
ANR	6972993	Identifier	opts		6972844	0					
ANR	6972994	CallExpression	"qemu_opts_create ( list , id , 1 )"		6972844	1					
ANR	6972995	Callee	qemu_opts_create		6972844	0					
ANR	6972996	Identifier	qemu_opts_create		6972844	0					
ANR	6972997	ArgumentList	list		6972844	1					
ANR	6972998	Argument	list		6972844	0					
ANR	6972999	Identifier	list		6972844	0					
ANR	6973000	Argument	id		6972844	1					
ANR	6973001	Identifier	id		6972844	0					
ANR	6973002	Argument	1		6972844	2					
ANR	6973003	PrimaryExpression	1		6972844	0					
ANR	6973004	ContinueStatement	continue ;	51:12:826:834	6972844	3	True				
ANR	6973005	IfStatement	"if ( sscanf ( line , ""[%63[^]]]"" , group ) == 1 )"		6972844	4					
ANR	6973006	Condition	"sscanf ( line , ""[%63[^]]]"" , group ) == 1"	55:12:860:896	6972844	0	True				
ANR	6973007	EqualityExpression	"sscanf ( line , ""[%63[^]]]"" , group ) == 1"		6972844	0		==			
ANR	6973008	CallExpression	"sscanf ( line , ""[%63[^]]]"" , group )"		6972844	0					
ANR	6973009	Callee	sscanf		6972844	0					
ANR	6973010	Identifier	sscanf		6972844	0					
ANR	6973011	ArgumentList	line		6972844	1					
ANR	6973012	Argument	line		6972844	0					
ANR	6973013	Identifier	line		6972844	0					
ANR	6973014	Argument	"""[%63[^]]]"""		6972844	1					
ANR	6973015	PrimaryExpression	"""[%63[^]]]"""		6972844	0					
ANR	6973016	Argument	group		6972844	2					
ANR	6973017	Identifier	group		6972844	0					
ANR	6973018	PrimaryExpression	1		6972844	1					
ANR	6973019	CompoundStatement		53:51:824:824	6972844	1					
ANR	6973020	ExpressionStatement	"list = find_list ( lists , group )"	59:12:950:980	6972844	0	True				
ANR	6973021	AssignmentExpression	"list = find_list ( lists , group )"		6972844	0		=			
ANR	6973022	Identifier	list		6972844	0					
ANR	6973023	CallExpression	"find_list ( lists , group )"		6972844	1					
ANR	6973024	Callee	find_list		6972844	0					
ANR	6973025	Identifier	find_list		6972844	0					
ANR	6973026	ArgumentList	lists		6972844	1					
ANR	6973027	Argument	lists		6972844	0					
ANR	6973028	Identifier	lists		6972844	0					
ANR	6973029	Argument	group		6972844	1					
ANR	6973030	Identifier	group		6972844	0					
ANR	6973031	IfStatement	if ( list == NULL )		6972844	1					
ANR	6973032	Condition	list == NULL	61:16:999:1010	6972844	0	True				
ANR	6973033	EqualityExpression	list == NULL		6972844	0		==			
ANR	6973034	Identifier	list		6972844	0					
ANR	6973035	Identifier	NULL		6972844	1					
ANR	6973036	GotoStatement	goto out ;	63:16:1030:1038	6972844	1	True				
ANR	6973037	Identifier	out		6972844	0					
ANR	6973038	ExpressionStatement	"opts = qemu_opts_create ( list , NULL , 0 )"	65:12:1053:1091	6972844	2	True				
ANR	6973039	AssignmentExpression	"opts = qemu_opts_create ( list , NULL , 0 )"		6972844	0		=			
ANR	6973040	Identifier	opts		6972844	0					
ANR	6973041	CallExpression	"qemu_opts_create ( list , NULL , 0 )"		6972844	1					
ANR	6973042	Callee	qemu_opts_create		6972844	0					
ANR	6973043	Identifier	qemu_opts_create		6972844	0					
ANR	6973044	ArgumentList	list		6972844	1					
ANR	6973045	Argument	list		6972844	0					
ANR	6973046	Identifier	list		6972844	0					
ANR	6973047	Argument	NULL		6972844	1					
ANR	6973048	Identifier	NULL		6972844	0					
ANR	6973049	Argument	0		6972844	2					
ANR	6973050	PrimaryExpression	0		6972844	0					
ANR	6973051	ContinueStatement	continue ;	67:12:1106:1114	6972844	3	True				
ANR	6973052	IfStatement	"if ( sscanf ( line , "" %63s = \\""%1023[^\\""]\\"""" , arg , value ) == 2 )"		6972844	5					
ANR	6973053	Condition	"sscanf ( line , "" %63s = \\""%1023[^\\""]\\"""" , arg , value ) == 2"	71:12:1140:1194	6972844	0	True				
ANR	6973054	EqualityExpression	"sscanf ( line , "" %63s = \\""%1023[^\\""]\\"""" , arg , value ) == 2"		6972844	0		==			
ANR	6973055	CallExpression	"sscanf ( line , "" %63s = \\""%1023[^\\""]\\"""" , arg , value )"		6972844	0					
ANR	6973056	Callee	sscanf		6972844	0					
ANR	6973057	Identifier	sscanf		6972844	0					
ANR	6973058	ArgumentList	line		6972844	1					
ANR	6973059	Argument	line		6972844	0					
ANR	6973060	Identifier	line		6972844	0					
ANR	6973061	Argument	""" %63s = \\""%1023[^\\""]\\"""""		6972844	1					
ANR	6973062	PrimaryExpression	""" %63s = \\""%1023[^\\""]\\"""""		6972844	0					
ANR	6973063	Argument	arg		6972844	2					
ANR	6973064	Identifier	arg		6972844	0					
ANR	6973065	Argument	value		6972844	3					
ANR	6973066	Identifier	value		6972844	0					
ANR	6973067	PrimaryExpression	2		6972844	1					
ANR	6973068	CompoundStatement		69:69:1122:1122	6972844	1					
ANR	6973069	IfStatement	if ( opts == NULL )		6972844	0					
ANR	6973070	Condition	opts == NULL	75:16:1247:1258	6972844	0	True				
ANR	6973071	EqualityExpression	opts == NULL		6972844	0		==			
ANR	6973072	Identifier	opts		6972844	0					
ANR	6973073	Identifier	NULL		6972844	1					
ANR	6973074	CompoundStatement		73:30:1186:1186	6972844	1					
ANR	6973075	ExpressionStatement	"error_report ( ""no group defined"" )"	77:16:1280:1312	6972844	0	True				
ANR	6973076	CallExpression	"error_report ( ""no group defined"" )"		6972844	0					
ANR	6973077	Callee	error_report		6972844	0					
ANR	6973078	Identifier	error_report		6972844	0					
ANR	6973079	ArgumentList	"""no group defined"""		6972844	1					
ANR	6973080	Argument	"""no group defined"""		6972844	0					
ANR	6973081	PrimaryExpression	"""no group defined"""		6972844	0					
ANR	6973082	GotoStatement	goto out ;	79:16:1331:1339	6972844	1	True				
ANR	6973083	Identifier	out		6972844	0					
ANR	6973084	IfStatement	"if ( qemu_opt_set ( opts , arg , value ) != 0 )"		6972844	1					
ANR	6973085	Condition	"qemu_opt_set ( opts , arg , value ) != 0"	83:16:1373:1407	6972844	0	True				
ANR	6973086	EqualityExpression	"qemu_opt_set ( opts , arg , value ) != 0"		6972844	0		!=			
ANR	6973087	CallExpression	"qemu_opt_set ( opts , arg , value )"		6972844	0					
ANR	6973088	Callee	qemu_opt_set		6972844	0					
ANR	6973089	Identifier	qemu_opt_set		6972844	0					
ANR	6973090	ArgumentList	opts		6972844	1					
ANR	6973091	Argument	opts		6972844	0					
ANR	6973092	Identifier	opts		6972844	0					
ANR	6973093	Argument	arg		6972844	1					
ANR	6973094	Identifier	arg		6972844	0					
ANR	6973095	Argument	value		6972844	2					
ANR	6973096	Identifier	value		6972844	0					
ANR	6973097	PrimaryExpression	0		6972844	1					
ANR	6973098	CompoundStatement		81:53:1335:1335	6972844	1					
ANR	6973099	GotoStatement	goto out ;	85:16:1429:1437	6972844	0	True				
ANR	6973100	Identifier	out		6972844	0					
ANR	6973101	ContinueStatement	continue ;	89:12:1467:1475	6972844	2	True				
ANR	6973102	ExpressionStatement	"error_report ( ""parse error"" )"	93:8:1497:1524	6972844	6	True				
ANR	6973103	CallExpression	"error_report ( ""parse error"" )"		6972844	0					
ANR	6973104	Callee	error_report		6972844	0					
ANR	6973105	Identifier	error_report		6972844	0					
ANR	6973106	ArgumentList	"""parse error"""		6972844	1					
ANR	6973107	Argument	"""parse error"""		6972844	0					
ANR	6973108	PrimaryExpression	"""parse error"""		6972844	0					
ANR	6973109	GotoStatement	goto out ;	95:8:1535:1543	6972844	7	True				
ANR	6973110	Identifier	out		6972844	0					
ANR	6973111	IfStatement	if ( ferror ( fp ) )		6972844	7					
ANR	6973112	Condition	ferror ( fp )	99:8:1561:1570	6972844	0	True				
ANR	6973113	CallExpression	ferror ( fp )		6972844	0					
ANR	6973114	Callee	ferror		6972844	0					
ANR	6973115	Identifier	ferror		6972844	0					
ANR	6973116	ArgumentList	fp		6972844	1					
ANR	6973117	Argument	fp		6972844	0					
ANR	6973118	Identifier	fp		6972844	0					
ANR	6973119	CompoundStatement		97:20:1498:1498	6972844	1					
ANR	6973120	ExpressionStatement	"error_report ( ""error reading file"" )"	101:8:1584:1618	6972844	0	True				
ANR	6973121	CallExpression	"error_report ( ""error reading file"" )"		6972844	0					
ANR	6973122	Callee	error_report		6972844	0					
ANR	6973123	Identifier	error_report		6972844	0					
ANR	6973124	ArgumentList	"""error reading file"""		6972844	1					
ANR	6973125	Argument	"""error reading file"""		6972844	0					
ANR	6973126	PrimaryExpression	"""error reading file"""		6972844	0					
ANR	6973127	GotoStatement	goto out ;	103:8:1629:1637	6972844	1	True				
ANR	6973128	Identifier	out		6972844	0					
ANR	6973129	ExpressionStatement	res = 0	107:4:1651:1658	6972844	8	True				
ANR	6973130	AssignmentExpression	res = 0		6972844	0		=			
ANR	6973131	Identifier	res		6972844	0					
ANR	6973132	PrimaryExpression	0		6972844	1					
ANR	6973133	Label	out :	109:0:1661:1664	6972844	9	True				
ANR	6973134	Identifier	out		6972844	0					
ANR	6973135	ExpressionStatement	loc_pop ( & loc )	111:4:1671:1684	6972844	10	True				
ANR	6973136	CallExpression	loc_pop ( & loc )		6972844	0					
ANR	6973137	Callee	loc_pop		6972844	0					
ANR	6973138	Identifier	loc_pop		6972844	0					
ANR	6973139	ArgumentList	& loc		6972844	1					
ANR	6973140	Argument	& loc		6972844	0					
ANR	6973141	UnaryOperationExpression	& loc		6972844	0					
ANR	6973142	UnaryOperator	&		6972844	0					
ANR	6973143	Identifier	loc		6972844	1					
ANR	6973144	ReturnStatement	return res ;	113:4:1691:1701	6972844	11	True				
ANR	6973145	Identifier	res		6972844	0					
ANR	6973146	ReturnType	int		6972844	1					
ANR	6973147	Identifier	qemu_config_parse		6972844	2					
ANR	6973148	ParameterList	"FILE * fp , QemuOptsList * * lists , const char * fname"		6972844	3					
ANR	6973149	Parameter	FILE * fp	1:22:22:29	6972844	0	True				
ANR	6973150	ParameterType	FILE *		6972844	0					
ANR	6973151	Identifier	fp		6972844	1					
ANR	6973152	Parameter	QemuOptsList * * lists	1:32:32:51	6972844	1	True				
ANR	6973153	ParameterType	QemuOptsList * *		6972844	0					
ANR	6973154	Identifier	lists		6972844	1					
ANR	6973155	Parameter	const char * fname	1:54:54:70	6972844	2	True				
ANR	6973156	ParameterType	const char *		6972844	0					
ANR	6973157	Identifier	fname		6972844	1					
ANR	6973158	CFGEntryNode	ENTRY		6972844		True				
ANR	6973159	CFGExitNode	EXIT		6972844		True				
ANR	6973160	Symbol	fname		6972844						
ANR	6973161	Symbol	loc		6972844						
ANR	6973162	Symbol	res		6972844						
ANR	6973163	Symbol	& loc		6972844						
ANR	6973164	Symbol	NULL		6972844						
ANR	6973165	Symbol	qemu_opts_create		6972844						
ANR	6973166	Symbol	line		6972844						
ANR	6973167	Symbol	fp		6972844						
ANR	6973168	Symbol	* line		6972844						
ANR	6973169	Symbol	list		6972844						
ANR	6973170	Symbol	lno		6972844						
ANR	6973171	Symbol	fgets		6972844						
ANR	6973172	Symbol	qemu_opt_set		6972844						
ANR	6973173	Symbol	ferror		6972844						
ANR	6973174	Symbol	opts		6972844						
ANR	6973175	Symbol	lists		6972844						
ANR	6973176	Symbol	sscanf		6972844						
ANR	6973177	Symbol	arg		6972844						
ANR	6973178	Symbol	id		6972844						
ANR	6973179	Symbol	find_list		6972844						
ANR	6973180	Symbol	value		6972844						
ANR	6973181	Symbol	group		6972844						
