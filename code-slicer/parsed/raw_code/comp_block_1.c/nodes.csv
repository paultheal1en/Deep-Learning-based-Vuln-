command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1360025	File	/home/p4ultr4n/workplace/ReVeal/raw_code/comp_block_1.c								
ANR	1360026	Function	comp_block	1:0:0:877							
ANR	1360027	FunctionDef	"comp_block (MadContext * t , int mb_x , int mb_y , int j , int mv_x , int mv_y , int add)"		1360026	0					
ANR	1360028	CompoundStatement		5:0:133:877	1360026	0					
ANR	1360029	IdentifierDeclStatement	MpegEncContext * s = & t -> s ;	7:4:140:165	1360026	0	True				
ANR	1360030	IdentifierDecl	* s = & t -> s		1360026	0					
ANR	1360031	IdentifierDeclType	MpegEncContext *		1360026	0					
ANR	1360032	Identifier	s		1360026	1					
ANR	1360033	AssignmentExpression	* s = & t -> s		1360026	2		=			
ANR	1360034	Identifier	s		1360026	0					
ANR	1360035	UnaryOperationExpression	& t -> s		1360026	1					
ANR	1360036	UnaryOperator	&		1360026	0					
ANR	1360037	PtrMemberAccess	t -> s		1360026	1					
ANR	1360038	Identifier	t		1360026	0					
ANR	1360039	Identifier	s		1360026	1					
ANR	1360040	IfStatement	if ( j < 4 )		1360026	1					
ANR	1360041	Condition	j < 4	9:8:176:180	1360026	0	True				
ANR	1360042	RelationalExpression	j < 4		1360026	0		<			
ANR	1360043	Identifier	j		1360026	0					
ANR	1360044	PrimaryExpression	4		1360026	1					
ANR	1360045	CompoundStatement		5:15:49:49	1360026	1					
ANR	1360046	ExpressionStatement	"comp ( t -> frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) , t -> frame . linesize [ 0 ] , t -> last_frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x , t -> last_frame . linesize [ 0 ] , add )"	11:8:194:492	1360026	0	True				
ANR	1360047	CallExpression	"comp ( t -> frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) , t -> frame . linesize [ 0 ] , t -> last_frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x , t -> last_frame . linesize [ 0 ] , add )"		1360026	0					
ANR	1360048	Callee	comp		1360026	0					
ANR	1360049	Identifier	comp		1360026	0					
ANR	1360050	ArgumentList	t -> frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 )		1360026	1					
ANR	1360051	Argument	t -> frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 )		1360026	0					
ANR	1360052	AdditiveExpression	t -> frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 )		1360026	0		+			
ANR	1360053	ArrayIndexing	t -> frame . data [ 0 ]		1360026	0					
ANR	1360054	MemberAccess	t -> frame . data		1360026	0					
ANR	1360055	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360056	Identifier	t		1360026	0					
ANR	1360057	Identifier	frame		1360026	1					
ANR	1360058	Identifier	data		1360026	1					
ANR	1360059	PrimaryExpression	0		1360026	1					
ANR	1360060	AdditiveExpression	( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 )		1360026	1		+			
ANR	1360061	MultiplicativeExpression	( mb_y * 16 + ( ( j & 2 ) << 2 ) ) * t -> frame . linesize [ 0 ]		1360026	0		*			
ANR	1360062	AdditiveExpression	mb_y * 16 + ( ( j & 2 ) << 2 )		1360026	0		+			
ANR	1360063	MultiplicativeExpression	mb_y * 16		1360026	0		*			
ANR	1360064	Identifier	mb_y		1360026	0					
ANR	1360065	PrimaryExpression	16		1360026	1					
ANR	1360066	ShiftExpression	( j & 2 ) << 2		1360026	1		<<			
ANR	1360067	BitAndExpression	j & 2		1360026	0		&			
ANR	1360068	Identifier	j		1360026	0					
ANR	1360069	PrimaryExpression	2		1360026	1					
ANR	1360070	PrimaryExpression	2		1360026	1					
ANR	1360071	ArrayIndexing	t -> frame . linesize [ 0 ]		1360026	1					
ANR	1360072	MemberAccess	t -> frame . linesize		1360026	0					
ANR	1360073	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360074	Identifier	t		1360026	0					
ANR	1360075	Identifier	frame		1360026	1					
ANR	1360076	Identifier	linesize		1360026	1					
ANR	1360077	PrimaryExpression	0		1360026	1					
ANR	1360078	AdditiveExpression	mb_x * 16 + ( ( j & 1 ) << 3 )		1360026	1		+			
ANR	1360079	MultiplicativeExpression	mb_x * 16		1360026	0		*			
ANR	1360080	Identifier	mb_x		1360026	0					
ANR	1360081	PrimaryExpression	16		1360026	1					
ANR	1360082	ShiftExpression	( j & 1 ) << 3		1360026	1		<<			
ANR	1360083	BitAndExpression	j & 1		1360026	0		&			
ANR	1360084	Identifier	j		1360026	0					
ANR	1360085	PrimaryExpression	1		1360026	1					
ANR	1360086	PrimaryExpression	3		1360026	1					
ANR	1360087	Argument	t -> frame . linesize [ 0 ]		1360026	1					
ANR	1360088	ArrayIndexing	t -> frame . linesize [ 0 ]		1360026	0					
ANR	1360089	MemberAccess	t -> frame . linesize		1360026	0					
ANR	1360090	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360091	Identifier	t		1360026	0					
ANR	1360092	Identifier	frame		1360026	1					
ANR	1360093	Identifier	linesize		1360026	1					
ANR	1360094	PrimaryExpression	0		1360026	1					
ANR	1360095	Argument	t -> last_frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x		1360026	2					
ANR	1360096	AdditiveExpression	t -> last_frame . data [ 0 ] + ( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x		1360026	0		+			
ANR	1360097	ArrayIndexing	t -> last_frame . data [ 0 ]		1360026	0					
ANR	1360098	MemberAccess	t -> last_frame . data		1360026	0					
ANR	1360099	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360100	Identifier	t		1360026	0					
ANR	1360101	Identifier	last_frame		1360026	1					
ANR	1360102	Identifier	data		1360026	1					
ANR	1360103	PrimaryExpression	0		1360026	1					
ANR	1360104	AdditiveExpression	( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ] + mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x		1360026	1		+			
ANR	1360105	MultiplicativeExpression	( mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y ) * t -> last_frame . linesize [ 0 ]		1360026	0		*			
ANR	1360106	AdditiveExpression	mb_y * 16 + ( ( j & 2 ) << 2 ) + mv_y		1360026	0		+			
ANR	1360107	MultiplicativeExpression	mb_y * 16		1360026	0		*			
ANR	1360108	Identifier	mb_y		1360026	0					
ANR	1360109	PrimaryExpression	16		1360026	1					
ANR	1360110	AdditiveExpression	( ( j & 2 ) << 2 ) + mv_y		1360026	1		+			
ANR	1360111	ShiftExpression	( j & 2 ) << 2		1360026	0		<<			
ANR	1360112	BitAndExpression	j & 2		1360026	0		&			
ANR	1360113	Identifier	j		1360026	0					
ANR	1360114	PrimaryExpression	2		1360026	1					
ANR	1360115	PrimaryExpression	2		1360026	1					
ANR	1360116	Identifier	mv_y		1360026	1					
ANR	1360117	ArrayIndexing	t -> last_frame . linesize [ 0 ]		1360026	1					
ANR	1360118	MemberAccess	t -> last_frame . linesize		1360026	0					
ANR	1360119	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360120	Identifier	t		1360026	0					
ANR	1360121	Identifier	last_frame		1360026	1					
ANR	1360122	Identifier	linesize		1360026	1					
ANR	1360123	PrimaryExpression	0		1360026	1					
ANR	1360124	AdditiveExpression	mb_x * 16 + ( ( j & 1 ) << 3 ) + mv_x		1360026	1		+			
ANR	1360125	MultiplicativeExpression	mb_x * 16		1360026	0		*			
ANR	1360126	Identifier	mb_x		1360026	0					
ANR	1360127	PrimaryExpression	16		1360026	1					
ANR	1360128	AdditiveExpression	( ( j & 1 ) << 3 ) + mv_x		1360026	1		+			
ANR	1360129	ShiftExpression	( j & 1 ) << 3		1360026	0		<<			
ANR	1360130	BitAndExpression	j & 1		1360026	0		&			
ANR	1360131	Identifier	j		1360026	0					
ANR	1360132	PrimaryExpression	1		1360026	1					
ANR	1360133	PrimaryExpression	3		1360026	1					
ANR	1360134	Identifier	mv_x		1360026	1					
ANR	1360135	Argument	t -> last_frame . linesize [ 0 ]		1360026	3					
ANR	1360136	ArrayIndexing	t -> last_frame . linesize [ 0 ]		1360026	0					
ANR	1360137	MemberAccess	t -> last_frame . linesize		1360026	0					
ANR	1360138	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360139	Identifier	t		1360026	0					
ANR	1360140	Identifier	last_frame		1360026	1					
ANR	1360141	Identifier	linesize		1360026	1					
ANR	1360142	PrimaryExpression	0		1360026	1					
ANR	1360143	Argument	add		1360026	4					
ANR	1360144	Identifier	add		1360026	0					
ANR	1360145	ElseStatement	else		1360026	0					
ANR	1360146	IfStatement	if ( ! ( s -> avctx -> flags & CODEC_FLAG_GRAY ) )		1360026	0					
ANR	1360147	Condition	! ( s -> avctx -> flags & CODEC_FLAG_GRAY )	19:15:510:545	1360026	0	True				
ANR	1360148	UnaryOperationExpression	! ( s -> avctx -> flags & CODEC_FLAG_GRAY )		1360026	0					
ANR	1360149	UnaryOperator	!		1360026	0					
ANR	1360150	BitAndExpression	s -> avctx -> flags & CODEC_FLAG_GRAY		1360026	1		&			
ANR	1360151	PtrMemberAccess	s -> avctx -> flags		1360026	0					
ANR	1360152	PtrMemberAccess	s -> avctx		1360026	0					
ANR	1360153	Identifier	s		1360026	0					
ANR	1360154	Identifier	avctx		1360026	1					
ANR	1360155	Identifier	flags		1360026	1					
ANR	1360156	Identifier	CODEC_FLAG_GRAY		1360026	1					
ANR	1360157	CompoundStatement		17:8:425:442	1360026	1					
ANR	1360158	IdentifierDeclStatement	int index = j - 3 ;	21:8:559:576	1360026	0	True				
ANR	1360159	IdentifierDecl	index = j - 3		1360026	0					
ANR	1360160	IdentifierDeclType	int		1360026	0					
ANR	1360161	Identifier	index		1360026	1					
ANR	1360162	AssignmentExpression	index = j - 3		1360026	2		=			
ANR	1360163	Identifier	index		1360026	0					
ANR	1360164	AdditiveExpression	j - 3		1360026	1		-			
ANR	1360165	Identifier	j		1360026	0					
ANR	1360166	PrimaryExpression	3		1360026	1					
ANR	1360167	ExpressionStatement	"comp ( t -> frame . data [ index ] + ( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8 , t -> frame . linesize [ index ] , t -> last_frame . data [ index ] + ( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ] + mb_x * 8 + ( mv_x / 2 ) , t -> last_frame . linesize [ index ] , add )"	23:8:587:867	1360026	1	True				
ANR	1360168	CallExpression	"comp ( t -> frame . data [ index ] + ( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8 , t -> frame . linesize [ index ] , t -> last_frame . data [ index ] + ( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ] + mb_x * 8 + ( mv_x / 2 ) , t -> last_frame . linesize [ index ] , add )"		1360026	0					
ANR	1360169	Callee	comp		1360026	0					
ANR	1360170	Identifier	comp		1360026	0					
ANR	1360171	ArgumentList	t -> frame . data [ index ] + ( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8		1360026	1					
ANR	1360172	Argument	t -> frame . data [ index ] + ( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8		1360026	0					
ANR	1360173	AdditiveExpression	t -> frame . data [ index ] + ( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8		1360026	0		+			
ANR	1360174	ArrayIndexing	t -> frame . data [ index ]		1360026	0					
ANR	1360175	MemberAccess	t -> frame . data		1360026	0					
ANR	1360176	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360177	Identifier	t		1360026	0					
ANR	1360178	Identifier	frame		1360026	1					
ANR	1360179	Identifier	data		1360026	1					
ANR	1360180	Identifier	index		1360026	1					
ANR	1360181	AdditiveExpression	( mb_y * 8 ) * t -> frame . linesize [ index ] + mb_x * 8		1360026	1		+			
ANR	1360182	MultiplicativeExpression	( mb_y * 8 ) * t -> frame . linesize [ index ]		1360026	0		*			
ANR	1360183	MultiplicativeExpression	mb_y * 8		1360026	0		*			
ANR	1360184	Identifier	mb_y		1360026	0					
ANR	1360185	PrimaryExpression	8		1360026	1					
ANR	1360186	ArrayIndexing	t -> frame . linesize [ index ]		1360026	1					
ANR	1360187	MemberAccess	t -> frame . linesize		1360026	0					
ANR	1360188	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360189	Identifier	t		1360026	0					
ANR	1360190	Identifier	frame		1360026	1					
ANR	1360191	Identifier	linesize		1360026	1					
ANR	1360192	Identifier	index		1360026	1					
ANR	1360193	MultiplicativeExpression	mb_x * 8		1360026	1		*			
ANR	1360194	Identifier	mb_x		1360026	0					
ANR	1360195	PrimaryExpression	8		1360026	1					
ANR	1360196	Argument	t -> frame . linesize [ index ]		1360026	1					
ANR	1360197	ArrayIndexing	t -> frame . linesize [ index ]		1360026	0					
ANR	1360198	MemberAccess	t -> frame . linesize		1360026	0					
ANR	1360199	PtrMemberAccess	t -> frame		1360026	0					
ANR	1360200	Identifier	t		1360026	0					
ANR	1360201	Identifier	frame		1360026	1					
ANR	1360202	Identifier	linesize		1360026	1					
ANR	1360203	Identifier	index		1360026	1					
ANR	1360204	Argument	t -> last_frame . data [ index ] + ( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ] + mb_x * 8 + ( mv_x / 2 )		1360026	2					
ANR	1360205	AdditiveExpression	t -> last_frame . data [ index ] + ( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ] + mb_x * 8 + ( mv_x / 2 )		1360026	0		+			
ANR	1360206	ArrayIndexing	t -> last_frame . data [ index ]		1360026	0					
ANR	1360207	MemberAccess	t -> last_frame . data		1360026	0					
ANR	1360208	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360209	Identifier	t		1360026	0					
ANR	1360210	Identifier	last_frame		1360026	1					
ANR	1360211	Identifier	data		1360026	1					
ANR	1360212	Identifier	index		1360026	1					
ANR	1360213	AdditiveExpression	( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ] + mb_x * 8 + ( mv_x / 2 )		1360026	1		+			
ANR	1360214	MultiplicativeExpression	( mb_y * 8 + ( mv_y / 2 ) ) * t -> last_frame . linesize [ index ]		1360026	0		*			
ANR	1360215	AdditiveExpression	mb_y * 8 + ( mv_y / 2 )		1360026	0		+			
ANR	1360216	MultiplicativeExpression	mb_y * 8		1360026	0		*			
ANR	1360217	Identifier	mb_y		1360026	0					
ANR	1360218	PrimaryExpression	8		1360026	1					
ANR	1360219	MultiplicativeExpression	mv_y / 2		1360026	1		/			
ANR	1360220	Identifier	mv_y		1360026	0					
ANR	1360221	PrimaryExpression	2		1360026	1					
ANR	1360222	ArrayIndexing	t -> last_frame . linesize [ index ]		1360026	1					
ANR	1360223	MemberAccess	t -> last_frame . linesize		1360026	0					
ANR	1360224	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360225	Identifier	t		1360026	0					
ANR	1360226	Identifier	last_frame		1360026	1					
ANR	1360227	Identifier	linesize		1360026	1					
ANR	1360228	Identifier	index		1360026	1					
ANR	1360229	AdditiveExpression	mb_x * 8 + ( mv_x / 2 )		1360026	1		+			
ANR	1360230	MultiplicativeExpression	mb_x * 8		1360026	0		*			
ANR	1360231	Identifier	mb_x		1360026	0					
ANR	1360232	PrimaryExpression	8		1360026	1					
ANR	1360233	MultiplicativeExpression	mv_x / 2		1360026	1		/			
ANR	1360234	Identifier	mv_x		1360026	0					
ANR	1360235	PrimaryExpression	2		1360026	1					
ANR	1360236	Argument	t -> last_frame . linesize [ index ]		1360026	3					
ANR	1360237	ArrayIndexing	t -> last_frame . linesize [ index ]		1360026	0					
ANR	1360238	MemberAccess	t -> last_frame . linesize		1360026	0					
ANR	1360239	PtrMemberAccess	t -> last_frame		1360026	0					
ANR	1360240	Identifier	t		1360026	0					
ANR	1360241	Identifier	last_frame		1360026	1					
ANR	1360242	Identifier	linesize		1360026	1					
ANR	1360243	Identifier	index		1360026	1					
ANR	1360244	Argument	add		1360026	4					
ANR	1360245	Identifier	add		1360026	0					
ANR	1360246	ReturnType	static inline void		1360026	1					
ANR	1360247	Identifier	comp_block		1360026	2					
ANR	1360248	ParameterList	"MadContext * t , int mb_x , int mb_y , int j , int mv_x , int mv_y , int add"		1360026	3					
ANR	1360249	Parameter	MadContext * t	1:30:30:42	1360026	0	True				
ANR	1360250	ParameterType	MadContext *		1360026	0					
ANR	1360251	Identifier	t		1360026	1					
ANR	1360252	Parameter	int mb_x	1:45:45:52	1360026	1	True				
ANR	1360253	ParameterType	int		1360026	0					
ANR	1360254	Identifier	mb_x		1360026	1					
ANR	1360255	Parameter	int mb_y	1:55:55:62	1360026	2	True				
ANR	1360256	ParameterType	int		1360026	0					
ANR	1360257	Identifier	mb_y		1360026	1					
ANR	1360258	Parameter	int j	3:30:96:100	1360026	3	True				
ANR	1360259	ParameterType	int		1360026	0					
ANR	1360260	Identifier	j		1360026	1					
ANR	1360261	Parameter	int mv_x	3:37:103:110	1360026	4	True				
ANR	1360262	ParameterType	int		1360026	0					
ANR	1360263	Identifier	mv_x		1360026	1					
ANR	1360264	Parameter	int mv_y	3:47:113:120	1360026	5	True				
ANR	1360265	ParameterType	int		1360026	0					
ANR	1360266	Identifier	mv_y		1360026	1					
ANR	1360267	Parameter	int add	3:57:123:129	1360026	6	True				
ANR	1360268	ParameterType	int		1360026	0					
ANR	1360269	Identifier	add		1360026	1					
ANR	1360270	CFGEntryNode	ENTRY		1360026		True				
ANR	1360271	CFGExitNode	EXIT		1360026		True				
ANR	1360272	Symbol	* t -> frame . linesize		1360026						
ANR	1360273	Symbol	* t -> last_frame . linesize		1360026						
ANR	1360274	Symbol	t -> last_frame . linesize		1360026						
ANR	1360275	Symbol	* t -> last_frame		1360026						
ANR	1360276	Symbol	* index		1360026						
ANR	1360277	Symbol	* t -> last_frame . data		1360026						
ANR	1360278	Symbol	mv_y		1360026						
ANR	1360279	Symbol	mv_x		1360026						
ANR	1360280	Symbol	t -> frame . data		1360026						
ANR	1360281	Symbol	& t -> s		1360026						
ANR	1360282	Symbol	t -> frame . linesize		1360026						
ANR	1360283	Symbol	* * t		1360026						
ANR	1360284	Symbol	t -> last_frame . data		1360026						
ANR	1360285	Symbol	* * s		1360026						
ANR	1360286	Symbol	add		1360026						
ANR	1360287	Symbol	* s -> avctx		1360026						
ANR	1360288	Symbol	index		1360026						
ANR	1360289	Symbol	j		1360026						
ANR	1360290	Symbol	s -> avctx -> flags		1360026						
ANR	1360291	Symbol	* t -> frame . data		1360026						
ANR	1360292	Symbol	t -> frame		1360026						
ANR	1360293	Symbol	s		1360026						
ANR	1360294	Symbol	t		1360026						
ANR	1360295	Symbol	* t -> frame		1360026						
ANR	1360296	Symbol	t -> last_frame		1360026						
ANR	1360297	Symbol	mb_y		1360026						
ANR	1360298	Symbol	s -> avctx		1360026						
ANR	1360299	Symbol	mb_x		1360026						
ANR	1360300	Symbol	* s		1360026						
ANR	1360301	Symbol	* t		1360026						
ANR	1360302	Symbol	CODEC_FLAG_GRAY		1360026						
