command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	832502	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_open_0.c								
ANR	832503	Function	avcodec_open	1:0:0:4126							
ANR	832504	FunctionDef	"avcodec_open (AVCodecContext * avctx , AVCodec * codec)"		832503	0					
ANR	832505	CompoundStatement		3:0:77:4126	832503	0					
ANR	832506	IdentifierDeclStatement	int ret = 0 ;	5:4:84:95	832503	0	True				
ANR	832507	IdentifierDecl	ret = 0		832503	0					
ANR	832508	IdentifierDeclType	int		832503	0					
ANR	832509	Identifier	ret		832503	1					
ANR	832510	AssignmentExpression	ret = 0		832503	2		=			
ANR	832511	Identifier	ret		832503	0					
ANR	832512	PrimaryExpression	0		832503	1					
ANR	832513	IfStatement	if ( ff_lockmgr_cb )		832503	1					
ANR	832514	Condition	ff_lockmgr_cb	11:8:179:191	832503	0	True				
ANR	832515	Identifier	ff_lockmgr_cb		832503	0					
ANR	832516	CompoundStatement		9:23:116:116	832503	1					
ANR	832517	IfStatement	"if ( ( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN ) )"		832503	0					
ANR	832518	Condition	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"	13:12:209:254	832503	0	True				
ANR	832519	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"		832503	0					
ANR	832520	Callee	* ff_lockmgr_cb		832503	0					
ANR	832521	UnaryOperationExpression	* ff_lockmgr_cb		832503	0					
ANR	832522	UnaryOperator	*		832503	0					
ANR	832523	Identifier	ff_lockmgr_cb		832503	1					
ANR	832524	ArgumentList	& codec_mutex		832503	1					
ANR	832525	Argument	& codec_mutex		832503	0					
ANR	832526	UnaryOperationExpression	& codec_mutex		832503	0					
ANR	832527	UnaryOperator	&		832503	0					
ANR	832528	Identifier	codec_mutex		832503	1					
ANR	832529	Argument	AV_LOCK_OBTAIN		832503	1					
ANR	832530	Identifier	AV_LOCK_OBTAIN		832503	0					
ANR	832531	ReturnStatement	return - 1 ;	15:12:270:279	832503	1	True				
ANR	832532	UnaryOperationExpression	- 1		832503	0					
ANR	832533	UnaryOperator	-		832503	0					
ANR	832534	PrimaryExpression	1		832503	1					
ANR	832535	ExpressionStatement	entangled_thread_counter ++	21:4:295:321	832503	2	True				
ANR	832536	PostIncDecOperationExpression	entangled_thread_counter ++		832503	0					
ANR	832537	Identifier	entangled_thread_counter		832503	0					
ANR	832538	IncDec	++		832503	1					
ANR	832539	IfStatement	if ( entangled_thread_counter != 1 )		832503	3					
ANR	832540	Condition	entangled_thread_counter != 1	23:7:331:359	832503	0	True				
ANR	832541	EqualityExpression	entangled_thread_counter != 1		832503	0		!=			
ANR	832542	Identifier	entangled_thread_counter		832503	0					
ANR	832543	PrimaryExpression	1		832503	1					
ANR	832544	CompoundStatement		21:37:283:283	832503	1					
ANR	832545	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"	25:8:372:460	832503	0	True				
ANR	832546	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"		832503	0					
ANR	832547	Callee	av_log		832503	0					
ANR	832548	Identifier	av_log		832503	0					
ANR	832549	ArgumentList	avctx		832503	1					
ANR	832550	Argument	avctx		832503	0					
ANR	832551	Identifier	avctx		832503	0					
ANR	832552	Argument	AV_LOG_ERROR		832503	1					
ANR	832553	Identifier	AV_LOG_ERROR		832503	0					
ANR	832554	Argument	"""insufficient thread locking around avcodec_open/close()\\n"""		832503	2					
ANR	832555	PrimaryExpression	"""insufficient thread locking around avcodec_open/close()\\n"""		832503	0					
ANR	832556	ExpressionStatement	ret = - 1	27:8:471:479	832503	1	True				
ANR	832557	AssignmentExpression	ret = - 1		832503	0		=			
ANR	832558	Identifier	ret		832503	0					
ANR	832559	UnaryOperationExpression	- 1		832503	1					
ANR	832560	UnaryOperator	-		832503	0					
ANR	832561	PrimaryExpression	1		832503	1					
ANR	832562	GotoStatement	goto end ;	29:8:490:498	832503	2	True				
ANR	832563	Identifier	end		832503	0					
ANR	832564	IfStatement	if ( avctx -> codec || ! codec )		832503	4					
ANR	832565	Condition	avctx -> codec || ! codec	35:7:517:538	832503	0	True				
ANR	832566	OrExpression	avctx -> codec || ! codec		832503	0		||			
ANR	832567	PtrMemberAccess	avctx -> codec		832503	0					
ANR	832568	Identifier	avctx		832503	0					
ANR	832569	Identifier	codec		832503	1					
ANR	832570	UnaryOperationExpression	! codec		832503	1					
ANR	832571	UnaryOperator	!		832503	0					
ANR	832572	Identifier	codec		832503	1					
ANR	832573	CompoundStatement		33:31:463:463	832503	1					
ANR	832574	ExpressionStatement	ret = AVERROR ( EINVAL )	37:8:552:573	832503	0	True				
ANR	832575	AssignmentExpression	ret = AVERROR ( EINVAL )		832503	0		=			
ANR	832576	Identifier	ret		832503	0					
ANR	832577	CallExpression	AVERROR ( EINVAL )		832503	1					
ANR	832578	Callee	AVERROR		832503	0					
ANR	832579	Identifier	AVERROR		832503	0					
ANR	832580	ArgumentList	EINVAL		832503	1					
ANR	832581	Argument	EINVAL		832503	0					
ANR	832582	Identifier	EINVAL		832503	0					
ANR	832583	GotoStatement	goto end ;	39:8:584:592	832503	1	True				
ANR	832584	Identifier	end		832503	0					
ANR	832585	IfStatement	if ( codec -> priv_data_size > 0 )		832503	5					
ANR	832586	Condition	codec -> priv_data_size > 0	45:8:612:636	832503	0	True				
ANR	832587	RelationalExpression	codec -> priv_data_size > 0		832503	0		>			
ANR	832588	PtrMemberAccess	codec -> priv_data_size		832503	0					
ANR	832589	Identifier	codec		832503	0					
ANR	832590	Identifier	priv_data_size		832503	1					
ANR	832591	PrimaryExpression	0		832503	1					
ANR	832592	CompoundStatement		43:35:561:561	832503	1					
ANR	832593	IfStatement	if ( ! avctx -> priv_data )		832503	0					
ANR	832594	Condition	! avctx -> priv_data	47:9:651:667	832503	0	True				
ANR	832595	UnaryOperationExpression	! avctx -> priv_data		832503	0					
ANR	832596	UnaryOperator	!		832503	0					
ANR	832597	PtrMemberAccess	avctx -> priv_data		832503	1					
ANR	832598	Identifier	avctx		832503	0					
ANR	832599	Identifier	priv_data		832503	1					
ANR	832600	CompoundStatement		45:27:591:591	832503	1					
ANR	832601	ExpressionStatement	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )	49:8:680:732	832503	0	True				
ANR	832602	AssignmentExpression	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )		832503	0		=			
ANR	832603	PtrMemberAccess	avctx -> priv_data		832503	0					
ANR	832604	Identifier	avctx		832503	0					
ANR	832605	Identifier	priv_data		832503	1					
ANR	832606	CallExpression	av_mallocz ( codec -> priv_data_size )		832503	1					
ANR	832607	Callee	av_mallocz		832503	0					
ANR	832608	Identifier	av_mallocz		832503	0					
ANR	832609	ArgumentList	codec -> priv_data_size		832503	1					
ANR	832610	Argument	codec -> priv_data_size		832503	0					
ANR	832611	PtrMemberAccess	codec -> priv_data_size		832503	0					
ANR	832612	Identifier	codec		832503	0					
ANR	832613	Identifier	priv_data_size		832503	1					
ANR	832614	IfStatement	if ( ! avctx -> priv_data )		832503	1					
ANR	832615	Condition	! avctx -> priv_data	51:12:747:763	832503	0	True				
ANR	832616	UnaryOperationExpression	! avctx -> priv_data		832503	0					
ANR	832617	UnaryOperator	!		832503	0					
ANR	832618	PtrMemberAccess	avctx -> priv_data		832503	1					
ANR	832619	Identifier	avctx		832503	0					
ANR	832620	Identifier	priv_data		832503	1					
ANR	832621	CompoundStatement		49:31:688:688	832503	1					
ANR	832622	ExpressionStatement	ret = AVERROR ( ENOMEM )	53:12:781:802	832503	0	True				
ANR	832623	AssignmentExpression	ret = AVERROR ( ENOMEM )		832503	0		=			
ANR	832624	Identifier	ret		832503	0					
ANR	832625	CallExpression	AVERROR ( ENOMEM )		832503	1					
ANR	832626	Callee	AVERROR		832503	0					
ANR	832627	Identifier	AVERROR		832503	0					
ANR	832628	ArgumentList	ENOMEM		832503	1					
ANR	832629	Argument	ENOMEM		832503	0					
ANR	832630	Identifier	ENOMEM		832503	0					
ANR	832631	GotoStatement	goto end ;	55:12:817:825	832503	1	True				
ANR	832632	Identifier	end		832503	0					
ANR	832633	IfStatement	if ( codec -> priv_class )		832503	2					
ANR	832634	Condition	codec -> priv_class	59:11:850:866	832503	0	True				
ANR	832635	PtrMemberAccess	codec -> priv_class		832503	0					
ANR	832636	Identifier	codec		832503	0					
ANR	832637	Identifier	priv_class		832503	1					
ANR	832638	CompoundStatement		57:29:790:790	832503	1					
ANR	832639	ExpressionStatement	* ( AVClass * * ) avctx -> priv_data = codec -> priv_class	61:12:961:1008	832503	0	True				
ANR	832640	AssignmentExpression	* ( AVClass * * ) avctx -> priv_data = codec -> priv_class		832503	0		=			
ANR	832641	UnaryOperationExpression	* ( AVClass * * ) avctx -> priv_data		832503	0					
ANR	832642	UnaryOperator	*		832503	0					
ANR	832643	CastExpression	( AVClass * * ) avctx -> priv_data		832503	1					
ANR	832644	CastTarget	AVClass * *		832503	0					
ANR	832645	PtrMemberAccess	avctx -> priv_data		832503	1					
ANR	832646	Identifier	avctx		832503	0					
ANR	832647	Identifier	priv_data		832503	1					
ANR	832648	PtrMemberAccess	codec -> priv_class		832503	1					
ANR	832649	Identifier	codec		832503	0					
ANR	832650	Identifier	priv_class		832503	1					
ANR	832651	ExpressionStatement	av_opt_set_defaults ( avctx -> priv_data )	63:12:1023:1060	832503	1	True				
ANR	832652	CallExpression	av_opt_set_defaults ( avctx -> priv_data )		832503	0					
ANR	832653	Callee	av_opt_set_defaults		832503	0					
ANR	832654	Identifier	av_opt_set_defaults		832503	0					
ANR	832655	ArgumentList	avctx -> priv_data		832503	1					
ANR	832656	Argument	avctx -> priv_data		832503	0					
ANR	832657	PtrMemberAccess	avctx -> priv_data		832503	0					
ANR	832658	Identifier	avctx		832503	0					
ANR	832659	Identifier	priv_data		832503	1					
ANR	832660	ElseStatement	else		832503	0					
ANR	832661	CompoundStatement		67:11:1016:1016	832503	0					
ANR	832662	ExpressionStatement	avctx -> priv_data = NULL	71:8:1105:1128	832503	0	True				
ANR	832663	AssignmentExpression	avctx -> priv_data = NULL		832503	0		=			
ANR	832664	PtrMemberAccess	avctx -> priv_data		832503	0					
ANR	832665	Identifier	avctx		832503	0					
ANR	832666	Identifier	priv_data		832503	1					
ANR	832667	Identifier	NULL		832503	1					
ANR	832668	IfStatement	if ( avctx -> coded_width && avctx -> coded_height )		832503	6					
ANR	832669	Condition	avctx -> coded_width && avctx -> coded_height	77:7:1147:1187	832503	0	True				
ANR	832670	AndExpression	avctx -> coded_width && avctx -> coded_height		832503	0		&&			
ANR	832671	PtrMemberAccess	avctx -> coded_width		832503	0					
ANR	832672	Identifier	avctx		832503	0					
ANR	832673	Identifier	coded_width		832503	1					
ANR	832674	PtrMemberAccess	avctx -> coded_height		832503	1					
ANR	832675	Identifier	avctx		832503	0					
ANR	832676	Identifier	coded_height		832503	1					
ANR	832677	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"	79:8:1199:1269	832503	1	True				
ANR	832678	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		832503	0					
ANR	832679	Callee	avcodec_set_dimensions		832503	0					
ANR	832680	Identifier	avcodec_set_dimensions		832503	0					
ANR	832681	ArgumentList	avctx		832503	1					
ANR	832682	Argument	avctx		832503	0					
ANR	832683	Identifier	avctx		832503	0					
ANR	832684	Argument	avctx -> coded_width		832503	1					
ANR	832685	PtrMemberAccess	avctx -> coded_width		832503	0					
ANR	832686	Identifier	avctx		832503	0					
ANR	832687	Identifier	coded_width		832503	1					
ANR	832688	Argument	avctx -> coded_height		832503	2					
ANR	832689	PtrMemberAccess	avctx -> coded_height		832503	0					
ANR	832690	Identifier	avctx		832503	0					
ANR	832691	Identifier	coded_height		832503	1					
ANR	832692	ElseStatement	else		832503	0					
ANR	832693	IfStatement	if ( avctx -> width && avctx -> height )		832503	0					
ANR	832694	Condition	avctx -> width && avctx -> height	81:12:1284:1312	832503	0	True				
ANR	832695	AndExpression	avctx -> width && avctx -> height		832503	0		&&			
ANR	832696	PtrMemberAccess	avctx -> width		832503	0					
ANR	832697	Identifier	avctx		832503	0					
ANR	832698	Identifier	width		832503	1					
ANR	832699	PtrMemberAccess	avctx -> height		832503	1					
ANR	832700	Identifier	avctx		832503	0					
ANR	832701	Identifier	height		832503	1					
ANR	832702	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"	83:8:1324:1382	832503	1	True				
ANR	832703	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"		832503	0					
ANR	832704	Callee	avcodec_set_dimensions		832503	0					
ANR	832705	Identifier	avcodec_set_dimensions		832503	0					
ANR	832706	ArgumentList	avctx		832503	1					
ANR	832707	Argument	avctx		832503	0					
ANR	832708	Identifier	avctx		832503	0					
ANR	832709	Argument	avctx -> width		832503	1					
ANR	832710	PtrMemberAccess	avctx -> width		832503	0					
ANR	832711	Identifier	avctx		832503	0					
ANR	832712	Identifier	width		832503	1					
ANR	832713	Argument	avctx -> height		832503	2					
ANR	832714	PtrMemberAccess	avctx -> height		832503	0					
ANR	832715	Identifier	avctx		832503	0					
ANR	832716	Identifier	height		832503	1					
ANR	832717	IfStatement	"if ( ( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 ) )"		832503	7					
ANR	832718	Condition	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"	87:8:1395:1651	832503	0	True				
ANR	832719	AndExpression	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"		832503	0		&&			
ANR	832720	OrExpression	avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height		832503	0		||			
ANR	832721	PtrMemberAccess	avctx -> coded_width		832503	0					
ANR	832722	Identifier	avctx		832503	0					
ANR	832723	Identifier	coded_width		832503	1					
ANR	832724	OrExpression	avctx -> coded_height || avctx -> width || avctx -> height		832503	1		||			
ANR	832725	PtrMemberAccess	avctx -> coded_height		832503	0					
ANR	832726	Identifier	avctx		832503	0					
ANR	832727	Identifier	coded_height		832503	1					
ANR	832728	OrExpression	avctx -> width || avctx -> height		832503	1		||			
ANR	832729	PtrMemberAccess	avctx -> width		832503	0					
ANR	832730	Identifier	avctx		832503	0					
ANR	832731	Identifier	width		832503	1					
ANR	832732	PtrMemberAccess	avctx -> height		832503	1					
ANR	832733	Identifier	avctx		832503	0					
ANR	832734	Identifier	height		832503	1					
ANR	832735	OrExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		832503	1		||			
ANR	832736	RelationalExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0"		832503	0		<			
ANR	832737	CallExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx )"		832503	0					
ANR	832738	Callee	av_image_check_size		832503	0					
ANR	832739	Identifier	av_image_check_size		832503	0					
ANR	832740	ArgumentList	avctx -> coded_width		832503	1					
ANR	832741	Argument	avctx -> coded_width		832503	0					
ANR	832742	PtrMemberAccess	avctx -> coded_width		832503	0					
ANR	832743	Identifier	avctx		832503	0					
ANR	832744	Identifier	coded_width		832503	1					
ANR	832745	Argument	avctx -> coded_height		832503	1					
ANR	832746	PtrMemberAccess	avctx -> coded_height		832503	0					
ANR	832747	Identifier	avctx		832503	0					
ANR	832748	Identifier	coded_height		832503	1					
ANR	832749	Argument	0		832503	2					
ANR	832750	PrimaryExpression	0		832503	0					
ANR	832751	Argument	avctx		832503	3					
ANR	832752	Identifier	avctx		832503	0					
ANR	832753	PrimaryExpression	0		832503	1					
ANR	832754	RelationalExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		832503	1		<			
ANR	832755	CallExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"		832503	0					
ANR	832756	Callee	av_image_check_size		832503	0					
ANR	832757	Identifier	av_image_check_size		832503	0					
ANR	832758	ArgumentList	avctx -> width		832503	1					
ANR	832759	Argument	avctx -> width		832503	0					
ANR	832760	PtrMemberAccess	avctx -> width		832503	0					
ANR	832761	Identifier	avctx		832503	0					
ANR	832762	Identifier	width		832503	1					
ANR	832763	Argument	avctx -> height		832503	1					
ANR	832764	PtrMemberAccess	avctx -> height		832503	0					
ANR	832765	Identifier	avctx		832503	0					
ANR	832766	Identifier	height		832503	1					
ANR	832767	Argument	0		832503	2					
ANR	832768	PrimaryExpression	0		832503	0					
ANR	832769	Argument	avctx		832503	3					
ANR	832770	Identifier	avctx		832503	0					
ANR	832771	PrimaryExpression	0		832503	1					
ANR	832772	CompoundStatement		89:91:1576:1576	832503	1					
ANR	832773	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""ignoring invalid width/height values\\n"" )"	93:8:1665:1736	832503	0	True				
ANR	832774	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""ignoring invalid width/height values\\n"" )"		832503	0					
ANR	832775	Callee	av_log		832503	0					
ANR	832776	Identifier	av_log		832503	0					
ANR	832777	ArgumentList	avctx		832503	1					
ANR	832778	Argument	avctx		832503	0					
ANR	832779	Identifier	avctx		832503	0					
ANR	832780	Argument	AV_LOG_WARNING		832503	1					
ANR	832781	Identifier	AV_LOG_WARNING		832503	0					
ANR	832782	Argument	"""ignoring invalid width/height values\\n"""		832503	2					
ANR	832783	PrimaryExpression	"""ignoring invalid width/height values\\n"""		832503	0					
ANR	832784	ExpressionStatement	"avcodec_set_dimensions ( avctx , 0 , 0 )"	95:8:1747:1782	832503	1	True				
ANR	832785	CallExpression	"avcodec_set_dimensions ( avctx , 0 , 0 )"		832503	0					
ANR	832786	Callee	avcodec_set_dimensions		832503	0					
ANR	832787	Identifier	avcodec_set_dimensions		832503	0					
ANR	832788	ArgumentList	avctx		832503	1					
ANR	832789	Argument	avctx		832503	0					
ANR	832790	Identifier	avctx		832503	0					
ANR	832791	Argument	0		832503	1					
ANR	832792	PrimaryExpression	0		832503	0					
ANR	832793	Argument	0		832503	2					
ANR	832794	PrimaryExpression	0		832503	0					
ANR	832795	IfStatement	if ( codec -> decode )		832503	8					
ANR	832796	Condition	codec -> decode	105:8:1946:1958	832503	0	True				
ANR	832797	PtrMemberAccess	codec -> decode		832503	0					
ANR	832798	Identifier	codec		832503	0					
ANR	832799	Identifier	decode		832503	1					
ANR	832800	ExpressionStatement	av_freep ( & avctx -> subtitle_header )	107:8:1970:2003	832503	1	True				
ANR	832801	CallExpression	av_freep ( & avctx -> subtitle_header )		832503	0					
ANR	832802	Callee	av_freep		832503	0					
ANR	832803	Identifier	av_freep		832503	0					
ANR	832804	ArgumentList	& avctx -> subtitle_header		832503	1					
ANR	832805	Argument	& avctx -> subtitle_header		832503	0					
ANR	832806	UnaryOperationExpression	& avctx -> subtitle_header		832503	0					
ANR	832807	UnaryOperator	&		832503	0					
ANR	832808	PtrMemberAccess	avctx -> subtitle_header		832503	1					
ANR	832809	Identifier	avctx		832503	0					
ANR	832810	Identifier	subtitle_header		832503	1					
ANR	832811	Statement	define	111:1:2009:2014	832503	9	True				
ANR	832812	Statement	SANE_NB_CHANNELS	111:8:2016:2031	832503	10	True				
ANR	832813	Statement	128U	111:25:2033:2036	832503	11	True				
ANR	832814	IfStatement	if ( avctx -> channels > SANE_NB_CHANNELS )		832503	12					
ANR	832815	Condition	avctx -> channels > SANE_NB_CHANNELS	113:8:2047:2080	832503	0	True				
ANR	832816	RelationalExpression	avctx -> channels > SANE_NB_CHANNELS		832503	0		>			
ANR	832817	PtrMemberAccess	avctx -> channels		832503	0					
ANR	832818	Identifier	avctx		832503	0					
ANR	832819	Identifier	channels		832503	1					
ANR	832820	Identifier	SANE_NB_CHANNELS		832503	1					
ANR	832821	CompoundStatement		111:44:2005:2005	832503	1					
ANR	832822	ExpressionStatement	ret = AVERROR ( EINVAL )	115:8:2094:2115	832503	0	True				
ANR	832823	AssignmentExpression	ret = AVERROR ( EINVAL )		832503	0		=			
ANR	832824	Identifier	ret		832503	0					
ANR	832825	CallExpression	AVERROR ( EINVAL )		832503	1					
ANR	832826	Callee	AVERROR		832503	0					
ANR	832827	Identifier	AVERROR		832503	0					
ANR	832828	ArgumentList	EINVAL		832503	1					
ANR	832829	Argument	EINVAL		832503	0					
ANR	832830	Identifier	EINVAL		832503	0					
ANR	832831	GotoStatement	goto free_and_end ;	117:8:2126:2143	832503	1	True				
ANR	832832	Identifier	free_and_end		832503	0					
ANR	832833	ExpressionStatement	avctx -> codec = codec	123:4:2159:2179	832503	13	True				
ANR	832834	AssignmentExpression	avctx -> codec = codec		832503	0		=			
ANR	832835	PtrMemberAccess	avctx -> codec		832503	0					
ANR	832836	Identifier	avctx		832503	0					
ANR	832837	Identifier	codec		832503	1					
ANR	832838	Identifier	codec		832503	1					
ANR	832839	IfStatement	if ( ( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE )		832503	14					
ANR	832840	Condition	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE	125:8:2190:2313	832503	0	True				
ANR	832841	AndExpression	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE		832503	0		&&			
ANR	832842	OrExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type		832503	0		||			
ANR	832843	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN		832503	0		==			
ANR	832844	PtrMemberAccess	avctx -> codec_type		832503	0					
ANR	832845	Identifier	avctx		832503	0					
ANR	832846	Identifier	codec_type		832503	1					
ANR	832847	Identifier	AVMEDIA_TYPE_UNKNOWN		832503	1					
ANR	832848	EqualityExpression	avctx -> codec_type == codec -> type		832503	1		==			
ANR	832849	PtrMemberAccess	avctx -> codec_type		832503	0					
ANR	832850	Identifier	avctx		832503	0					
ANR	832851	Identifier	codec_type		832503	1					
ANR	832852	PtrMemberAccess	codec -> type		832503	1					
ANR	832853	Identifier	codec		832503	0					
ANR	832854	Identifier	type		832503	1					
ANR	832855	EqualityExpression	avctx -> codec_id == CODEC_ID_NONE		832503	1		==			
ANR	832856	PtrMemberAccess	avctx -> codec_id		832503	0					
ANR	832857	Identifier	avctx		832503	0					
ANR	832858	Identifier	codec_id		832503	1					
ANR	832859	Identifier	CODEC_ID_NONE		832503	1					
ANR	832860	CompoundStatement		125:42:2238:2238	832503	1					
ANR	832861	ExpressionStatement	avctx -> codec_type = codec -> type	129:8:2327:2358	832503	0	True				
ANR	832862	AssignmentExpression	avctx -> codec_type = codec -> type		832503	0		=			
ANR	832863	PtrMemberAccess	avctx -> codec_type		832503	0					
ANR	832864	Identifier	avctx		832503	0					
ANR	832865	Identifier	codec_type		832503	1					
ANR	832866	PtrMemberAccess	codec -> type		832503	1					
ANR	832867	Identifier	codec		832503	0					
ANR	832868	Identifier	type		832503	1					
ANR	832869	ExpressionStatement	avctx -> codec_id = codec -> id	131:8:2369:2398	832503	1	True				
ANR	832870	AssignmentExpression	avctx -> codec_id = codec -> id		832503	0		=			
ANR	832871	PtrMemberAccess	avctx -> codec_id		832503	0					
ANR	832872	Identifier	avctx		832503	0					
ANR	832873	Identifier	codec_id		832503	1					
ANR	832874	PtrMemberAccess	codec -> id		832503	1					
ANR	832875	Identifier	codec		832503	0					
ANR	832876	Identifier	id		832503	1					
ANR	832877	IfStatement	if ( avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT ) )		832503	15					
ANR	832878	Condition	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )	135:8:2416:2557	832503	0	True				
ANR	832879	OrExpression	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )		832503	0		||			
ANR	832880	EqualityExpression	avctx -> codec_id != codec -> id		832503	0		!=			
ANR	832881	PtrMemberAccess	avctx -> codec_id		832503	0					
ANR	832882	Identifier	avctx		832503	0					
ANR	832883	Identifier	codec_id		832503	1					
ANR	832884	PtrMemberAccess	codec -> id		832503	1					
ANR	832885	Identifier	codec		832503	0					
ANR	832886	Identifier	id		832503	1					
ANR	832887	AndExpression	avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		832503	1		&&			
ANR	832888	EqualityExpression	avctx -> codec_type != codec -> type		832503	0		!=			
ANR	832889	PtrMemberAccess	avctx -> codec_type		832503	0					
ANR	832890	Identifier	avctx		832503	0					
ANR	832891	Identifier	codec_type		832503	1					
ANR	832892	PtrMemberAccess	codec -> type		832503	1					
ANR	832893	Identifier	codec		832503	0					
ANR	832894	Identifier	type		832503	1					
ANR	832895	EqualityExpression	avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		832503	1		!=			
ANR	832896	PtrMemberAccess	avctx -> codec_type		832503	0					
ANR	832897	Identifier	avctx		832503	0					
ANR	832898	Identifier	codec_type		832503	1					
ANR	832899	Identifier	AVMEDIA_TYPE_ATTACHMENT		832503	1					
ANR	832900	CompoundStatement		135:77:2482:2482	832503	1					
ANR	832901	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""codec type or id mismatches\\n"" )"	139:8:2571:2631	832503	0	True				
ANR	832902	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""codec type or id mismatches\\n"" )"		832503	0					
ANR	832903	Callee	av_log		832503	0					
ANR	832904	Identifier	av_log		832503	0					
ANR	832905	ArgumentList	avctx		832503	1					
ANR	832906	Argument	avctx		832503	0					
ANR	832907	Identifier	avctx		832503	0					
ANR	832908	Argument	AV_LOG_ERROR		832503	1					
ANR	832909	Identifier	AV_LOG_ERROR		832503	0					
ANR	832910	Argument	"""codec type or id mismatches\\n"""		832503	2					
ANR	832911	PrimaryExpression	"""codec type or id mismatches\\n"""		832503	0					
ANR	832912	ExpressionStatement	ret = AVERROR ( EINVAL )	141:8:2642:2663	832503	1	True				
ANR	832913	AssignmentExpression	ret = AVERROR ( EINVAL )		832503	0		=			
ANR	832914	Identifier	ret		832503	0					
ANR	832915	CallExpression	AVERROR ( EINVAL )		832503	1					
ANR	832916	Callee	AVERROR		832503	0					
ANR	832917	Identifier	AVERROR		832503	0					
ANR	832918	ArgumentList	EINVAL		832503	1					
ANR	832919	Argument	EINVAL		832503	0					
ANR	832920	Identifier	EINVAL		832503	0					
ANR	832921	GotoStatement	goto free_and_end ;	143:8:2674:2691	832503	2	True				
ANR	832922	Identifier	free_and_end		832503	0					
ANR	832923	ExpressionStatement	avctx -> frame_number = 0	147:4:2705:2728	832503	16	True				
ANR	832924	AssignmentExpression	avctx -> frame_number = 0		832503	0		=			
ANR	832925	PtrMemberAccess	avctx -> frame_number		832503	0					
ANR	832926	Identifier	avctx		832503	0					
ANR	832927	Identifier	frame_number		832503	1					
ANR	832928	PrimaryExpression	0		832503	1					
ANR	832929	IfStatement	if ( HAVE_THREADS && ! avctx -> thread_opaque )		832503	17					
ANR	832930	Condition	HAVE_THREADS && ! avctx -> thread_opaque	151:8:2741:2777	832503	0	True				
ANR	832931	AndExpression	HAVE_THREADS && ! avctx -> thread_opaque		832503	0		&&			
ANR	832932	Identifier	HAVE_THREADS		832503	0					
ANR	832933	UnaryOperationExpression	! avctx -> thread_opaque		832503	1					
ANR	832934	UnaryOperator	!		832503	0					
ANR	832935	PtrMemberAccess	avctx -> thread_opaque		832503	1					
ANR	832936	Identifier	avctx		832503	0					
ANR	832937	Identifier	thread_opaque		832503	1					
ANR	832938	CompoundStatement		149:47:2702:2702	832503	1					
ANR	832939	ExpressionStatement	ret = ff_thread_init ( avctx )	153:8:2791:2818	832503	0	True				
ANR	832940	AssignmentExpression	ret = ff_thread_init ( avctx )		832503	0		=			
ANR	832941	Identifier	ret		832503	0					
ANR	832942	CallExpression	ff_thread_init ( avctx )		832503	1					
ANR	832943	Callee	ff_thread_init		832503	0					
ANR	832944	Identifier	ff_thread_init		832503	0					
ANR	832945	ArgumentList	avctx		832503	1					
ANR	832946	Argument	avctx		832503	0					
ANR	832947	Identifier	avctx		832503	0					
ANR	832948	IfStatement	if ( ret < 0 )		832503	1					
ANR	832949	Condition	ret < 0	155:12:2833:2839	832503	0	True				
ANR	832950	RelationalExpression	ret < 0		832503	0		<			
ANR	832951	Identifier	ret		832503	0					
ANR	832952	PrimaryExpression	0		832503	1					
ANR	832953	CompoundStatement		153:21:2764:2764	832503	1					
ANR	832954	GotoStatement	goto free_and_end ;	157:12:2857:2874	832503	0	True				
ANR	832955	Identifier	free_and_end		832503	0					
ANR	832956	IfStatement	if ( avctx -> codec -> max_lowres < avctx -> lowres )		832503	18					
ANR	832957	Condition	avctx -> codec -> max_lowres < avctx -> lowres	165:8:2905:2944	832503	0	True				
ANR	832958	RelationalExpression	avctx -> codec -> max_lowres < avctx -> lowres		832503	0		<			
ANR	832959	PtrMemberAccess	avctx -> codec -> max_lowres		832503	0					
ANR	832960	PtrMemberAccess	avctx -> codec		832503	0					
ANR	832961	Identifier	avctx		832503	0					
ANR	832962	Identifier	codec		832503	1					
ANR	832963	Identifier	max_lowres		832503	1					
ANR	832964	PtrMemberAccess	avctx -> lowres		832503	1					
ANR	832965	Identifier	avctx		832503	0					
ANR	832966	Identifier	lowres		832503	1					
ANR	832967	CompoundStatement		163:50:2869:2869	832503	1					
ANR	832968	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"	167:8:2958:3092	832503	0	True				
ANR	832969	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"		832503	0					
ANR	832970	Callee	av_log		832503	0					
ANR	832971	Identifier	av_log		832503	0					
ANR	832972	ArgumentList	avctx		832503	1					
ANR	832973	Argument	avctx		832503	0					
ANR	832974	Identifier	avctx		832503	0					
ANR	832975	Argument	AV_LOG_ERROR		832503	1					
ANR	832976	Identifier	AV_LOG_ERROR		832503	0					
ANR	832977	Argument	"""The maximum value for lowres supported by the decoder is %d\\n"""		832503	2					
ANR	832978	PrimaryExpression	"""The maximum value for lowres supported by the decoder is %d\\n"""		832503	0					
ANR	832979	Argument	avctx -> codec -> max_lowres		832503	3					
ANR	832980	PtrMemberAccess	avctx -> codec -> max_lowres		832503	0					
ANR	832981	PtrMemberAccess	avctx -> codec		832503	0					
ANR	832982	Identifier	avctx		832503	0					
ANR	832983	Identifier	codec		832503	1					
ANR	832984	Identifier	max_lowres		832503	1					
ANR	832985	ExpressionStatement	ret = AVERROR ( EINVAL )	171:8:3103:3124	832503	1	True				
ANR	832986	AssignmentExpression	ret = AVERROR ( EINVAL )		832503	0		=			
ANR	832987	Identifier	ret		832503	0					
ANR	832988	CallExpression	AVERROR ( EINVAL )		832503	1					
ANR	832989	Callee	AVERROR		832503	0					
ANR	832990	Identifier	AVERROR		832503	0					
ANR	832991	ArgumentList	EINVAL		832503	1					
ANR	832992	Argument	EINVAL		832503	0					
ANR	832993	Identifier	EINVAL		832503	0					
ANR	832994	GotoStatement	goto free_and_end ;	173:8:3135:3152	832503	2	True				
ANR	832995	Identifier	free_and_end		832503	0					
ANR	832996	IfStatement	if ( avctx -> codec -> sample_fmts && avctx -> codec -> encode )		832503	19					
ANR	832997	Condition	avctx -> codec -> sample_fmts && avctx -> codec -> encode	177:8:3170:3218	832503	0	True				
ANR	832998	AndExpression	avctx -> codec -> sample_fmts && avctx -> codec -> encode		832503	0		&&			
ANR	832999	PtrMemberAccess	avctx -> codec -> sample_fmts		832503	0					
ANR	833000	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833001	Identifier	avctx		832503	0					
ANR	833002	Identifier	codec		832503	1					
ANR	833003	Identifier	sample_fmts		832503	1					
ANR	833004	PtrMemberAccess	avctx -> codec -> encode		832503	1					
ANR	833005	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833006	Identifier	avctx		832503	0					
ANR	833007	Identifier	codec		832503	1					
ANR	833008	Identifier	encode		832503	1					
ANR	833009	CompoundStatement		177:8:3154:3159	832503	1					
ANR	833010	IdentifierDeclStatement	int i ;	179:8:3232:3237	832503	0	True				
ANR	833011	IdentifierDecl	i		832503	0					
ANR	833012	IdentifierDeclType	int		832503	0					
ANR	833013	Identifier	i		832503	1					
ANR	833014	ForStatement	for ( i = 0 ; avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE ; i ++ )		832503	1					
ANR	833015	ForInit	i = 0 ;	181:13:3253:3258	832503	0	True				
ANR	833016	AssignmentExpression	i = 0		832503	0		=			
ANR	833017	Identifier	i		832503	0					
ANR	833018	PrimaryExpression	0		832503	1					
ANR	833019	Condition	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE	181:20:3260:3309	832503	1	True				
ANR	833020	EqualityExpression	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE		832503	0		!=			
ANR	833021	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		832503	0					
ANR	833022	PtrMemberAccess	avctx -> codec -> sample_fmts		832503	0					
ANR	833023	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833024	Identifier	avctx		832503	0					
ANR	833025	Identifier	codec		832503	1					
ANR	833026	Identifier	sample_fmts		832503	1					
ANR	833027	Identifier	i		832503	1					
ANR	833028	Identifier	AV_SAMPLE_FMT_NONE		832503	1					
ANR	833029	PostIncDecOperationExpression	i ++	181:72:3312:3314	832503	2	True				
ANR	833030	Identifier	i		832503	0					
ANR	833031	IncDec	++		832503	1					
ANR	833032	IfStatement	if ( avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ] )		832503	3					
ANR	833033	Condition	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]	183:16:3334:3382	832503	0	True				
ANR	833034	EqualityExpression	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]		832503	0		==			
ANR	833035	PtrMemberAccess	avctx -> sample_fmt		832503	0					
ANR	833036	Identifier	avctx		832503	0					
ANR	833037	Identifier	sample_fmt		832503	1					
ANR	833038	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		832503	1					
ANR	833039	PtrMemberAccess	avctx -> codec -> sample_fmts		832503	0					
ANR	833040	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833041	Identifier	avctx		832503	0					
ANR	833042	Identifier	codec		832503	1					
ANR	833043	Identifier	sample_fmts		832503	1					
ANR	833044	Identifier	i		832503	1					
ANR	833045	BreakStatement	break ;	185:16:3402:3407	832503	1	True				
ANR	833046	IfStatement	if ( avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE )		832503	2					
ANR	833047	Condition	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE	187:12:3422:3471	832503	0	True				
ANR	833048	EqualityExpression	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE		832503	0		==			
ANR	833049	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		832503	0					
ANR	833050	PtrMemberAccess	avctx -> codec -> sample_fmts		832503	0					
ANR	833051	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833052	Identifier	avctx		832503	0					
ANR	833053	Identifier	codec		832503	1					
ANR	833054	Identifier	sample_fmts		832503	1					
ANR	833055	Identifier	i		832503	1					
ANR	833056	Identifier	AV_SAMPLE_FMT_NONE		832503	1					
ANR	833057	CompoundStatement		185:64:3396:3396	832503	1					
ANR	833058	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_fmt is not supported.\\n"" )"	189:12:3489:3560	832503	0	True				
ANR	833059	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_fmt is not supported.\\n"" )"		832503	0					
ANR	833060	Callee	av_log		832503	0					
ANR	833061	Identifier	av_log		832503	0					
ANR	833062	ArgumentList	avctx		832503	1					
ANR	833063	Argument	avctx		832503	0					
ANR	833064	Identifier	avctx		832503	0					
ANR	833065	Argument	AV_LOG_ERROR		832503	1					
ANR	833066	Identifier	AV_LOG_ERROR		832503	0					
ANR	833067	Argument	"""Specified sample_fmt is not supported.\\n"""		832503	2					
ANR	833068	PrimaryExpression	"""Specified sample_fmt is not supported.\\n"""		832503	0					
ANR	833069	ExpressionStatement	ret = AVERROR ( EINVAL )	191:12:3575:3596	832503	1	True				
ANR	833070	AssignmentExpression	ret = AVERROR ( EINVAL )		832503	0		=			
ANR	833071	Identifier	ret		832503	0					
ANR	833072	CallExpression	AVERROR ( EINVAL )		832503	1					
ANR	833073	Callee	AVERROR		832503	0					
ANR	833074	Identifier	AVERROR		832503	0					
ANR	833075	ArgumentList	EINVAL		832503	1					
ANR	833076	Argument	EINVAL		832503	0					
ANR	833077	Identifier	EINVAL		832503	0					
ANR	833078	GotoStatement	goto free_and_end ;	193:12:3611:3628	832503	2	True				
ANR	833079	Identifier	free_and_end		832503	0					
ANR	833080	IfStatement	if ( avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		832503	20					
ANR	833081	Condition	avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME )	201:7:3658:3723	832503	0	True				
ANR	833082	AndExpression	avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME )		832503	0		&&			
ANR	833083	PtrMemberAccess	avctx -> codec -> init		832503	0					
ANR	833084	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833085	Identifier	avctx		832503	0					
ANR	833086	Identifier	codec		832503	1					
ANR	833087	Identifier	init		832503	1					
ANR	833088	UnaryOperationExpression	! ( avctx -> active_thread_type & FF_THREAD_FRAME )		832503	1					
ANR	833089	UnaryOperator	!		832503	0					
ANR	833090	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		832503	1		&			
ANR	833091	PtrMemberAccess	avctx -> active_thread_type		832503	0					
ANR	833092	Identifier	avctx		832503	0					
ANR	833093	Identifier	active_thread_type		832503	1					
ANR	833094	Identifier	FF_THREAD_FRAME		832503	1					
ANR	833095	CompoundStatement		199:74:3647:3647	832503	1					
ANR	833096	ExpressionStatement	ret = avctx -> codec -> init ( avctx )	203:8:3736:3767	832503	0	True				
ANR	833097	AssignmentExpression	ret = avctx -> codec -> init ( avctx )		832503	0		=			
ANR	833098	Identifier	ret		832503	0					
ANR	833099	CallExpression	avctx -> codec -> init ( avctx )		832503	1					
ANR	833100	Callee	avctx -> codec -> init		832503	0					
ANR	833101	PtrMemberAccess	avctx -> codec -> init		832503	0					
ANR	833102	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833103	Identifier	avctx		832503	0					
ANR	833104	Identifier	codec		832503	1					
ANR	833105	Identifier	init		832503	1					
ANR	833106	ArgumentList	avctx		832503	1					
ANR	833107	Argument	avctx		832503	0					
ANR	833108	Identifier	avctx		832503	0					
ANR	833109	IfStatement	if ( ret < 0 )		832503	1					
ANR	833110	Condition	ret < 0	205:12:3782:3788	832503	0	True				
ANR	833111	RelationalExpression	ret < 0		832503	0		<			
ANR	833112	Identifier	ret		832503	0					
ANR	833113	PrimaryExpression	0		832503	1					
ANR	833114	CompoundStatement		203:21:3713:3713	832503	1					
ANR	833115	GotoStatement	goto free_and_end ;	207:12:3806:3823	832503	0	True				
ANR	833116	Identifier	free_and_end		832503	0					
ANR	833117	Label	end :	213:0:3844:3847	832503	21	True				
ANR	833118	Identifier	end		832503	0					
ANR	833119	ExpressionStatement	entangled_thread_counter --	215:4:3854:3880	832503	22	True				
ANR	833120	PostIncDecOperationExpression	entangled_thread_counter --		832503	0					
ANR	833121	Identifier	entangled_thread_counter		832503	0					
ANR	833122	IncDec	--		832503	1					
ANR	833123	IfStatement	if ( ff_lockmgr_cb )		832503	23					
ANR	833124	Condition	ff_lockmgr_cb	221:8:3937:3949	832503	0	True				
ANR	833125	Identifier	ff_lockmgr_cb		832503	0					
ANR	833126	CompoundStatement		219:23:3874:3874	832503	1					
ANR	833127	ExpressionStatement	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"	223:8:3963:4010	832503	0	True				
ANR	833128	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"		832503	0					
ANR	833129	Callee	* ff_lockmgr_cb		832503	0					
ANR	833130	UnaryOperationExpression	* ff_lockmgr_cb		832503	0					
ANR	833131	UnaryOperator	*		832503	0					
ANR	833132	Identifier	ff_lockmgr_cb		832503	1					
ANR	833133	ArgumentList	& codec_mutex		832503	1					
ANR	833134	Argument	& codec_mutex		832503	0					
ANR	833135	UnaryOperationExpression	& codec_mutex		832503	0					
ANR	833136	UnaryOperator	&		832503	0					
ANR	833137	Identifier	codec_mutex		832503	1					
ANR	833138	Argument	AV_LOCK_RELEASE		832503	1					
ANR	833139	Identifier	AV_LOCK_RELEASE		832503	0					
ANR	833140	ReturnStatement	return ret ;	227:4:4024:4034	832503	24	True				
ANR	833141	Identifier	ret		832503	0					
ANR	833142	Label	free_and_end :	229:0:4037:4049	832503	25	True				
ANR	833143	Identifier	free_and_end		832503	0					
ANR	833144	ExpressionStatement	av_freep ( & avctx -> priv_data )	231:4:4056:4083	832503	26	True				
ANR	833145	CallExpression	av_freep ( & avctx -> priv_data )		832503	0					
ANR	833146	Callee	av_freep		832503	0					
ANR	833147	Identifier	av_freep		832503	0					
ANR	833148	ArgumentList	& avctx -> priv_data		832503	1					
ANR	833149	Argument	& avctx -> priv_data		832503	0					
ANR	833150	UnaryOperationExpression	& avctx -> priv_data		832503	0					
ANR	833151	UnaryOperator	&		832503	0					
ANR	833152	PtrMemberAccess	avctx -> priv_data		832503	1					
ANR	833153	Identifier	avctx		832503	0					
ANR	833154	Identifier	priv_data		832503	1					
ANR	833155	ExpressionStatement	avctx -> codec = NULL	233:4:4090:4108	832503	27	True				
ANR	833156	AssignmentExpression	avctx -> codec = NULL		832503	0		=			
ANR	833157	PtrMemberAccess	avctx -> codec		832503	0					
ANR	833158	Identifier	avctx		832503	0					
ANR	833159	Identifier	codec		832503	1					
ANR	833160	Identifier	NULL		832503	1					
ANR	833161	GotoStatement	goto end ;	235:4:4115:4123	832503	28	True				
ANR	833162	Identifier	end		832503	0					
ANR	833163	ReturnType	int attribute_align_arg		832503	1					
ANR	833164	Identifier	avcodec_open		832503	2					
ANR	833165	ParameterList	"AVCodecContext * avctx , AVCodec * codec"		832503	3					
ANR	833166	Parameter	AVCodecContext * avctx	1:37:37:57	832503	0	True				
ANR	833167	ParameterType	AVCodecContext *		832503	0					
ANR	833168	Identifier	avctx		832503	1					
ANR	833169	Parameter	AVCodec * codec	1:60:60:73	832503	1	True				
ANR	833170	ParameterType	AVCodec *		832503	0					
ANR	833171	Identifier	codec		832503	1					
ANR	833172	CFGEntryNode	ENTRY		832503		True				
ANR	833173	CFGExitNode	EXIT		832503		True				
ANR	833174	Symbol	ENOMEM		832503						
ANR	833175	Symbol	* avctx -> priv_data		832503						
ANR	833176	Symbol	ff_lockmgr_cb		832503						
ANR	833177	Symbol	entangled_thread_counter		832503						
ANR	833178	Symbol	avctx -> codec -> encode		832503						
ANR	833179	Symbol	avctx -> active_thread_type		832503						
ANR	833180	Symbol	AV_SAMPLE_FMT_NONE		832503						
ANR	833181	Symbol	avctx -> channels		832503						
ANR	833182	Symbol	codec -> decode		832503						
ANR	833183	Symbol	& avctx -> priv_data		832503						
ANR	833184	Symbol	AV_LOCK_OBTAIN		832503						
ANR	833185	Symbol	* avctx -> codec		832503						
ANR	833186	Symbol	avctx -> codec -> init		832503						
ANR	833187	Symbol	& avctx -> subtitle_header		832503						
ANR	833188	Symbol	SANE_NB_CHANNELS		832503						
ANR	833189	Symbol	ret		832503						
ANR	833190	Symbol	avctx -> coded_width		832503						
ANR	833191	Symbol	avctx -> codec -> max_lowres		832503						
ANR	833192	Symbol	avctx -> sample_fmt		832503						
ANR	833193	Symbol	avctx -> codec		832503						
ANR	833194	Symbol	NULL		832503						
ANR	833195	Symbol	CODEC_ID_NONE		832503						
ANR	833196	Symbol	* codec		832503						
ANR	833197	Symbol	av_mallocz		832503						
ANR	833198	Symbol	* * avctx		832503						
ANR	833199	Symbol	avctx -> coded_height		832503						
ANR	833200	Symbol	avctx -> lowres		832503						
ANR	833201	Symbol	codec		832503						
ANR	833202	Symbol	* avctx		832503						
ANR	833203	Symbol	ff_thread_init		832503						
ANR	833204	Symbol	codec -> priv_class		832503						
ANR	833205	Symbol	* * avctx -> codec		832503						
ANR	833206	Symbol	FF_THREAD_FRAME		832503						
ANR	833207	Symbol	* avctx -> codec -> sample_fmts		832503						
ANR	833208	Symbol	avctx -> codec_id		832503						
ANR	833209	Symbol	& codec_mutex		832503						
ANR	833210	Symbol	avctx -> width		832503						
ANR	833211	Symbol	AVMEDIA_TYPE_ATTACHMENT		832503						
ANR	833212	Symbol	avctx -> codec_type		832503						
ANR	833213	Symbol	avctx -> codec -> sample_fmts		832503						
ANR	833214	Symbol	* ff_lockmgr_cb		832503						
ANR	833215	Symbol	avctx -> height		832503						
ANR	833216	Symbol	avctx -> thread_opaque		832503						
ANR	833217	Symbol	AV_LOCK_RELEASE		832503						
ANR	833218	Symbol	avctx -> frame_number		832503						
ANR	833219	Symbol	avctx		832503						
ANR	833220	Symbol	av_image_check_size		832503						
ANR	833221	Symbol	codec -> type		832503						
ANR	833222	Symbol	AV_LOG_ERROR		832503						
ANR	833223	Symbol	AVMEDIA_TYPE_UNKNOWN		832503						
ANR	833224	Symbol	i		832503						
ANR	833225	Symbol	codec -> priv_data_size		832503						
ANR	833226	Symbol	avctx -> priv_data		832503						
ANR	833227	Symbol	EINVAL		832503						
ANR	833228	Symbol	* ( AVClass * * ) avctx -> priv_data		832503						
ANR	833229	Symbol	* * * avctx		832503						
ANR	833230	Symbol	HAVE_THREADS		832503						
ANR	833231	Symbol	* i		832503						
ANR	833232	Symbol	codec -> id		832503						
ANR	833233	Symbol	AVERROR		832503						
ANR	833234	Symbol	AV_LOG_WARNING		832503						
