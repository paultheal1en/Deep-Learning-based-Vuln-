command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6514541	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pfpu_decode_insn_0.c								
ANR	6514542	Function	pfpu_decode_insn	1:0:0:6255							
ANR	6514543	FunctionDef	pfpu_decode_insn (MilkymistPFPUState * s)		6514542	0					
ANR	6514544	CompoundStatement		3:0:52:6255	6514542	0					
ANR	6514545	IdentifierDeclStatement	uint32_t pc = s -> regs [ R_PC ] ;	5:4:59:86	6514542	0	True				
ANR	6514546	IdentifierDecl	pc = s -> regs [ R_PC ]		6514542	0					
ANR	6514547	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514548	Identifier	pc		6514542	1					
ANR	6514549	AssignmentExpression	pc = s -> regs [ R_PC ]		6514542	2		=			
ANR	6514550	Identifier	pc		6514542	0					
ANR	6514551	ArrayIndexing	s -> regs [ R_PC ]		6514542	1					
ANR	6514552	PtrMemberAccess	s -> regs		6514542	0					
ANR	6514553	Identifier	s		6514542	0					
ANR	6514554	Identifier	regs		6514542	1					
ANR	6514555	Identifier	R_PC		6514542	1					
ANR	6514556	IdentifierDeclStatement	uint32_t insn = s -> microcode [ pc ] ;	7:4:93:125	6514542	1	True				
ANR	6514557	IdentifierDecl	insn = s -> microcode [ pc ]		6514542	0					
ANR	6514558	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514559	Identifier	insn		6514542	1					
ANR	6514560	AssignmentExpression	insn = s -> microcode [ pc ]		6514542	2		=			
ANR	6514561	Identifier	insn		6514542	0					
ANR	6514562	ArrayIndexing	s -> microcode [ pc ]		6514542	1					
ANR	6514563	PtrMemberAccess	s -> microcode		6514542	0					
ANR	6514564	Identifier	s		6514542	0					
ANR	6514565	Identifier	microcode		6514542	1					
ANR	6514566	Identifier	pc		6514542	1					
ANR	6514567	IdentifierDeclStatement	uint32_t reg_a = ( insn >> 18 ) & 0x7f ;	9:4:132:168	6514542	2	True				
ANR	6514568	IdentifierDecl	reg_a = ( insn >> 18 ) & 0x7f		6514542	0					
ANR	6514569	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514570	Identifier	reg_a		6514542	1					
ANR	6514571	AssignmentExpression	reg_a = ( insn >> 18 ) & 0x7f		6514542	2		=			
ANR	6514572	Identifier	reg_a		6514542	0					
ANR	6514573	BitAndExpression	( insn >> 18 ) & 0x7f		6514542	1		&			
ANR	6514574	ShiftExpression	insn >> 18		6514542	0		>>			
ANR	6514575	Identifier	insn		6514542	0					
ANR	6514576	PrimaryExpression	18		6514542	1					
ANR	6514577	PrimaryExpression	0x7f		6514542	1					
ANR	6514578	IdentifierDeclStatement	uint32_t reg_b = ( insn >> 11 ) & 0x7f ;	11:4:175:211	6514542	3	True				
ANR	6514579	IdentifierDecl	reg_b = ( insn >> 11 ) & 0x7f		6514542	0					
ANR	6514580	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514581	Identifier	reg_b		6514542	1					
ANR	6514582	AssignmentExpression	reg_b = ( insn >> 11 ) & 0x7f		6514542	2		=			
ANR	6514583	Identifier	reg_b		6514542	0					
ANR	6514584	BitAndExpression	( insn >> 11 ) & 0x7f		6514542	1		&			
ANR	6514585	ShiftExpression	insn >> 11		6514542	0		>>			
ANR	6514586	Identifier	insn		6514542	0					
ANR	6514587	PrimaryExpression	11		6514542	1					
ANR	6514588	PrimaryExpression	0x7f		6514542	1					
ANR	6514589	IdentifierDeclStatement	uint32_t op = ( insn >> 7 ) & 0xf ;	13:4:218:249	6514542	4	True				
ANR	6514590	IdentifierDecl	op = ( insn >> 7 ) & 0xf		6514542	0					
ANR	6514591	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514592	Identifier	op		6514542	1					
ANR	6514593	AssignmentExpression	op = ( insn >> 7 ) & 0xf		6514542	2		=			
ANR	6514594	Identifier	op		6514542	0					
ANR	6514595	BitAndExpression	( insn >> 7 ) & 0xf		6514542	1		&			
ANR	6514596	ShiftExpression	insn >> 7		6514542	0		>>			
ANR	6514597	Identifier	insn		6514542	0					
ANR	6514598	PrimaryExpression	7		6514542	1					
ANR	6514599	PrimaryExpression	0xf		6514542	1					
ANR	6514600	IdentifierDeclStatement	uint32_t reg_d = insn & 0x7f ;	15:4:256:284	6514542	5	True				
ANR	6514601	IdentifierDecl	reg_d = insn & 0x7f		6514542	0					
ANR	6514602	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514603	Identifier	reg_d		6514542	1					
ANR	6514604	AssignmentExpression	reg_d = insn & 0x7f		6514542	2		=			
ANR	6514605	Identifier	reg_d		6514542	0					
ANR	6514606	BitAndExpression	insn & 0x7f		6514542	1		&			
ANR	6514607	Identifier	insn		6514542	0					
ANR	6514608	PrimaryExpression	0x7f		6514542	1					
ANR	6514609	IdentifierDeclStatement	uint32_t r = 0 ;	17:4:291:305	6514542	6	True				
ANR	6514610	IdentifierDecl	r = 0		6514542	0					
ANR	6514611	IdentifierDeclType	uint32_t		6514542	0					
ANR	6514612	Identifier	r		6514542	1					
ANR	6514613	AssignmentExpression	r = 0		6514542	2		=			
ANR	6514614	Identifier	r		6514542	0					
ANR	6514615	PrimaryExpression	0		6514542	1					
ANR	6514616	IdentifierDeclStatement	int latency = 0 ;	19:4:312:327	6514542	7	True				
ANR	6514617	IdentifierDecl	latency = 0		6514542	0					
ANR	6514618	IdentifierDeclType	int		6514542	0					
ANR	6514619	Identifier	latency		6514542	1					
ANR	6514620	AssignmentExpression	latency = 0		6514542	2		=			
ANR	6514621	Identifier	latency		6514542	0					
ANR	6514622	PrimaryExpression	0		6514542	1					
ANR	6514623	SwitchStatement	switch ( op )		6514542	8					
ANR	6514624	Condition	op	23:12:344:345	6514542	0	True				
ANR	6514625	Identifier	op		6514542	0					
ANR	6514626	CompoundStatement		21:16:295:295	6514542	1					
ANR	6514627	Label	case OP_NOP :	25:4:355:366	6514542	0	True				
ANR	6514628	Identifier	OP_NOP		6514542	0					
ANR	6514629	BreakStatement	break ;	27:8:377:382	6514542	1	True				
ANR	6514630	Label	case OP_FADD :	29:4:389:401	6514542	2	True				
ANR	6514631	Identifier	OP_FADD		6514542	0					
ANR	6514632	CompoundStatement		35:8:492:507	6514542	3					
ANR	6514633	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	33:8:419:471	6514542	0	True				
ANR	6514634	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6514635	IdentifierDeclType	float		6514542	0					
ANR	6514636	Identifier	a		6514542	1					
ANR	6514637	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6514638	Identifier	a		6514542	0					
ANR	6514639	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6514640	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514641	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514642	ArgumentList	float		6514542	1					
ANR	6514643	Argument	float		6514542	0					
ANR	6514644	Identifier	float		6514542	0					
ANR	6514645	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6514646	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6514647	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514648	Identifier	s		6514542	0					
ANR	6514649	Identifier	gp_regs		6514542	1					
ANR	6514650	Identifier	reg_a		6514542	1					
ANR	6514651	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	35:8:482:534	6514542	1	True				
ANR	6514652	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6514653	IdentifierDeclType	float		6514542	0					
ANR	6514654	Identifier	b		6514542	1					
ANR	6514655	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6514656	Identifier	b		6514542	0					
ANR	6514657	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6514658	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514659	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514660	ArgumentList	float		6514542	1					
ANR	6514661	Argument	float		6514542	0					
ANR	6514662	Identifier	float		6514542	0					
ANR	6514663	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6514664	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6514665	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514666	Identifier	s		6514542	0					
ANR	6514667	Identifier	gp_regs		6514542	1					
ANR	6514668	Identifier	reg_b		6514542	1					
ANR	6514669	IdentifierDeclStatement	float t = a + b ;	37:8:545:560	6514542	2	True				
ANR	6514670	IdentifierDecl	t = a + b		6514542	0					
ANR	6514671	IdentifierDeclType	float		6514542	0					
ANR	6514672	Identifier	t		6514542	1					
ANR	6514673	AssignmentExpression	t = a + b		6514542	2		=			
ANR	6514674	Identifier	t		6514542	0					
ANR	6514675	AdditiveExpression	a + b		6514542	1		+			
ANR	6514676	Identifier	a		6514542	0					
ANR	6514677	Identifier	b		6514542	1					
ANR	6514678	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	39:8:571:604	6514542	3	True				
ANR	6514679	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6514680	Identifier	r		6514542	0					
ANR	6514681	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6514682	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514683	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514684	ArgumentList	uint32_t		6514542	1					
ANR	6514685	Argument	uint32_t		6514542	0					
ANR	6514686	Identifier	uint32_t		6514542	0					
ANR	6514687	Argument	t		6514542	1					
ANR	6514688	Identifier	t		6514542	0					
ANR	6514689	ExpressionStatement	latency = LATENCY_FADD	41:8:615:637	6514542	4	True				
ANR	6514690	AssignmentExpression	latency = LATENCY_FADD		6514542	0		=			
ANR	6514691	Identifier	latency		6514542	0					
ANR	6514692	Identifier	LATENCY_FADD		6514542	1					
ANR	6514693	ExpressionStatement	"D_EXEC ( qemu_log ( ""ADD a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	43:8:648:708	6514542	5	True				
ANR	6514694	CallExpression	"D_EXEC ( qemu_log ( ""ADD a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6514695	Callee	D_EXEC		6514542	0					
ANR	6514696	Identifier	D_EXEC		6514542	0					
ANR	6514697	ArgumentList	"qemu_log ( ""ADD a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6514698	Argument	"qemu_log ( ""ADD a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514699	CallExpression	"qemu_log ( ""ADD a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514700	Callee	qemu_log		6514542	0					
ANR	6514701	Identifier	qemu_log		6514542	0					
ANR	6514702	ArgumentList	"""ADD a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6514703	Argument	"""ADD a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514704	PrimaryExpression	"""ADD a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514705	Argument	a		6514542	1					
ANR	6514706	Identifier	a		6514542	0					
ANR	6514707	Argument	b		6514542	2					
ANR	6514708	Identifier	b		6514542	0					
ANR	6514709	Argument	t		6514542	3					
ANR	6514710	Identifier	t		6514542	0					
ANR	6514711	Argument	r		6514542	4					
ANR	6514712	Identifier	r		6514542	0					
ANR	6514713	BreakStatement	break ;	45:6:717:722	6514542	4	True				
ANR	6514714	Label	case OP_FSUB :	47:4:729:741	6514542	5	True				
ANR	6514715	Identifier	OP_FSUB		6514542	0					
ANR	6514716	CompoundStatement		53:8:832:847	6514542	6					
ANR	6514717	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	51:8:759:811	6514542	0	True				
ANR	6514718	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6514719	IdentifierDeclType	float		6514542	0					
ANR	6514720	Identifier	a		6514542	1					
ANR	6514721	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6514722	Identifier	a		6514542	0					
ANR	6514723	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6514724	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514725	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514726	ArgumentList	float		6514542	1					
ANR	6514727	Argument	float		6514542	0					
ANR	6514728	Identifier	float		6514542	0					
ANR	6514729	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6514730	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6514731	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514732	Identifier	s		6514542	0					
ANR	6514733	Identifier	gp_regs		6514542	1					
ANR	6514734	Identifier	reg_a		6514542	1					
ANR	6514735	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	53:8:822:874	6514542	1	True				
ANR	6514736	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6514737	IdentifierDeclType	float		6514542	0					
ANR	6514738	Identifier	b		6514542	1					
ANR	6514739	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6514740	Identifier	b		6514542	0					
ANR	6514741	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6514742	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514743	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514744	ArgumentList	float		6514542	1					
ANR	6514745	Argument	float		6514542	0					
ANR	6514746	Identifier	float		6514542	0					
ANR	6514747	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6514748	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6514749	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514750	Identifier	s		6514542	0					
ANR	6514751	Identifier	gp_regs		6514542	1					
ANR	6514752	Identifier	reg_b		6514542	1					
ANR	6514753	IdentifierDeclStatement	float t = a - b ;	55:8:885:900	6514542	2	True				
ANR	6514754	IdentifierDecl	t = a - b		6514542	0					
ANR	6514755	IdentifierDeclType	float		6514542	0					
ANR	6514756	Identifier	t		6514542	1					
ANR	6514757	AssignmentExpression	t = a - b		6514542	2		=			
ANR	6514758	Identifier	t		6514542	0					
ANR	6514759	AdditiveExpression	a - b		6514542	1		-			
ANR	6514760	Identifier	a		6514542	0					
ANR	6514761	Identifier	b		6514542	1					
ANR	6514762	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	57:8:911:944	6514542	3	True				
ANR	6514763	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6514764	Identifier	r		6514542	0					
ANR	6514765	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6514766	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514767	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514768	ArgumentList	uint32_t		6514542	1					
ANR	6514769	Argument	uint32_t		6514542	0					
ANR	6514770	Identifier	uint32_t		6514542	0					
ANR	6514771	Argument	t		6514542	1					
ANR	6514772	Identifier	t		6514542	0					
ANR	6514773	ExpressionStatement	latency = LATENCY_FSUB	59:8:955:977	6514542	4	True				
ANR	6514774	AssignmentExpression	latency = LATENCY_FSUB		6514542	0		=			
ANR	6514775	Identifier	latency		6514542	0					
ANR	6514776	Identifier	LATENCY_FSUB		6514542	1					
ANR	6514777	ExpressionStatement	"D_EXEC ( qemu_log ( ""SUB a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	61:8:988:1048	6514542	5	True				
ANR	6514778	CallExpression	"D_EXEC ( qemu_log ( ""SUB a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6514779	Callee	D_EXEC		6514542	0					
ANR	6514780	Identifier	D_EXEC		6514542	0					
ANR	6514781	ArgumentList	"qemu_log ( ""SUB a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6514782	Argument	"qemu_log ( ""SUB a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514783	CallExpression	"qemu_log ( ""SUB a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514784	Callee	qemu_log		6514542	0					
ANR	6514785	Identifier	qemu_log		6514542	0					
ANR	6514786	ArgumentList	"""SUB a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6514787	Argument	"""SUB a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514788	PrimaryExpression	"""SUB a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514789	Argument	a		6514542	1					
ANR	6514790	Identifier	a		6514542	0					
ANR	6514791	Argument	b		6514542	2					
ANR	6514792	Identifier	b		6514542	0					
ANR	6514793	Argument	t		6514542	3					
ANR	6514794	Identifier	t		6514542	0					
ANR	6514795	Argument	r		6514542	4					
ANR	6514796	Identifier	r		6514542	0					
ANR	6514797	BreakStatement	break ;	63:6:1057:1062	6514542	7	True				
ANR	6514798	Label	case OP_FMUL :	65:4:1069:1081	6514542	8	True				
ANR	6514799	Identifier	OP_FMUL		6514542	0					
ANR	6514800	CompoundStatement		71:8:1172:1187	6514542	9					
ANR	6514801	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	69:8:1099:1151	6514542	0	True				
ANR	6514802	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6514803	IdentifierDeclType	float		6514542	0					
ANR	6514804	Identifier	a		6514542	1					
ANR	6514805	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6514806	Identifier	a		6514542	0					
ANR	6514807	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6514808	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514809	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514810	ArgumentList	float		6514542	1					
ANR	6514811	Argument	float		6514542	0					
ANR	6514812	Identifier	float		6514542	0					
ANR	6514813	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6514814	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6514815	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514816	Identifier	s		6514542	0					
ANR	6514817	Identifier	gp_regs		6514542	1					
ANR	6514818	Identifier	reg_a		6514542	1					
ANR	6514819	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	71:8:1162:1214	6514542	1	True				
ANR	6514820	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6514821	IdentifierDeclType	float		6514542	0					
ANR	6514822	Identifier	b		6514542	1					
ANR	6514823	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6514824	Identifier	b		6514542	0					
ANR	6514825	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6514826	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514827	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514828	ArgumentList	float		6514542	1					
ANR	6514829	Argument	float		6514542	0					
ANR	6514830	Identifier	float		6514542	0					
ANR	6514831	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6514832	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6514833	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514834	Identifier	s		6514542	0					
ANR	6514835	Identifier	gp_regs		6514542	1					
ANR	6514836	Identifier	reg_b		6514542	1					
ANR	6514837	IdentifierDeclStatement	float t = a * b ;	73:8:1225:1240	6514542	2	True				
ANR	6514838	IdentifierDecl	t = a * b		6514542	0					
ANR	6514839	IdentifierDeclType	float		6514542	0					
ANR	6514840	Identifier	t		6514542	1					
ANR	6514841	AssignmentExpression	t = a * b		6514542	2		=			
ANR	6514842	Identifier	t		6514542	0					
ANR	6514843	MultiplicativeExpression	a * b		6514542	1		*			
ANR	6514844	Identifier	a		6514542	0					
ANR	6514845	Identifier	b		6514542	1					
ANR	6514846	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	75:8:1251:1284	6514542	3	True				
ANR	6514847	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6514848	Identifier	r		6514542	0					
ANR	6514849	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6514850	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514851	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514852	ArgumentList	uint32_t		6514542	1					
ANR	6514853	Argument	uint32_t		6514542	0					
ANR	6514854	Identifier	uint32_t		6514542	0					
ANR	6514855	Argument	t		6514542	1					
ANR	6514856	Identifier	t		6514542	0					
ANR	6514857	ExpressionStatement	latency = LATENCY_FMUL	77:8:1295:1317	6514542	4	True				
ANR	6514858	AssignmentExpression	latency = LATENCY_FMUL		6514542	0		=			
ANR	6514859	Identifier	latency		6514542	0					
ANR	6514860	Identifier	LATENCY_FMUL		6514542	1					
ANR	6514861	ExpressionStatement	"D_EXEC ( qemu_log ( ""MUL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	79:8:1328:1388	6514542	5	True				
ANR	6514862	CallExpression	"D_EXEC ( qemu_log ( ""MUL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6514863	Callee	D_EXEC		6514542	0					
ANR	6514864	Identifier	D_EXEC		6514542	0					
ANR	6514865	ArgumentList	"qemu_log ( ""MUL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6514866	Argument	"qemu_log ( ""MUL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514867	CallExpression	"qemu_log ( ""MUL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6514868	Callee	qemu_log		6514542	0					
ANR	6514869	Identifier	qemu_log		6514542	0					
ANR	6514870	ArgumentList	"""MUL a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6514871	Argument	"""MUL a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514872	PrimaryExpression	"""MUL a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514873	Argument	a		6514542	1					
ANR	6514874	Identifier	a		6514542	0					
ANR	6514875	Argument	b		6514542	2					
ANR	6514876	Identifier	b		6514542	0					
ANR	6514877	Argument	t		6514542	3					
ANR	6514878	Identifier	t		6514542	0					
ANR	6514879	Argument	r		6514542	4					
ANR	6514880	Identifier	r		6514542	0					
ANR	6514881	BreakStatement	break ;	81:6:1397:1402	6514542	10	True				
ANR	6514882	Label	case OP_FABS :	83:4:1409:1421	6514542	11	True				
ANR	6514883	Identifier	OP_FABS		6514542	0					
ANR	6514884	CompoundStatement		87:8:1449:1467	6514542	12					
ANR	6514885	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	87:8:1439:1491	6514542	0	True				
ANR	6514886	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6514887	IdentifierDeclType	float		6514542	0					
ANR	6514888	Identifier	a		6514542	1					
ANR	6514889	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6514890	Identifier	a		6514542	0					
ANR	6514891	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6514892	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514893	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514894	ArgumentList	float		6514542	1					
ANR	6514895	Argument	float		6514542	0					
ANR	6514896	Identifier	float		6514542	0					
ANR	6514897	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6514898	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6514899	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514900	Identifier	s		6514542	0					
ANR	6514901	Identifier	gp_regs		6514542	1					
ANR	6514902	Identifier	reg_a		6514542	1					
ANR	6514903	IdentifierDeclStatement	float t = fabsf ( a ) ;	89:8:1502:1520	6514542	1	True				
ANR	6514904	IdentifierDecl	t = fabsf ( a )		6514542	0					
ANR	6514905	IdentifierDeclType	float		6514542	0					
ANR	6514906	Identifier	t		6514542	1					
ANR	6514907	AssignmentExpression	t = fabsf ( a )		6514542	2		=			
ANR	6514908	Identifier	t		6514542	0					
ANR	6514909	CallExpression	fabsf ( a )		6514542	1					
ANR	6514910	Callee	fabsf		6514542	0					
ANR	6514911	Identifier	fabsf		6514542	0					
ANR	6514912	ArgumentList	a		6514542	1					
ANR	6514913	Argument	a		6514542	0					
ANR	6514914	Identifier	a		6514542	0					
ANR	6514915	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	91:8:1531:1564	6514542	2	True				
ANR	6514916	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6514917	Identifier	r		6514542	0					
ANR	6514918	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6514919	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514920	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514921	ArgumentList	uint32_t		6514542	1					
ANR	6514922	Argument	uint32_t		6514542	0					
ANR	6514923	Identifier	uint32_t		6514542	0					
ANR	6514924	Argument	t		6514542	1					
ANR	6514925	Identifier	t		6514542	0					
ANR	6514926	ExpressionStatement	latency = LATENCY_FABS	93:8:1575:1597	6514542	3	True				
ANR	6514927	AssignmentExpression	latency = LATENCY_FABS		6514542	0		=			
ANR	6514928	Identifier	latency		6514542	0					
ANR	6514929	Identifier	LATENCY_FABS		6514542	1					
ANR	6514930	ExpressionStatement	"D_EXEC ( qemu_log ( ""ABS a=%f t=%f, r=%08x\\n"" , a , t , r ) )"	95:8:1608:1660	6514542	4	True				
ANR	6514931	CallExpression	"D_EXEC ( qemu_log ( ""ABS a=%f t=%f, r=%08x\\n"" , a , t , r ) )"		6514542	0					
ANR	6514932	Callee	D_EXEC		6514542	0					
ANR	6514933	Identifier	D_EXEC		6514542	0					
ANR	6514934	ArgumentList	"qemu_log ( ""ABS a=%f t=%f, r=%08x\\n"" , a , t , r )"		6514542	1					
ANR	6514935	Argument	"qemu_log ( ""ABS a=%f t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6514936	CallExpression	"qemu_log ( ""ABS a=%f t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6514937	Callee	qemu_log		6514542	0					
ANR	6514938	Identifier	qemu_log		6514542	0					
ANR	6514939	ArgumentList	"""ABS a=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6514940	Argument	"""ABS a=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514941	PrimaryExpression	"""ABS a=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6514942	Argument	a		6514542	1					
ANR	6514943	Identifier	a		6514542	0					
ANR	6514944	Argument	t		6514542	2					
ANR	6514945	Identifier	t		6514542	0					
ANR	6514946	Argument	r		6514542	3					
ANR	6514947	Identifier	r		6514542	0					
ANR	6514948	BreakStatement	break ;	97:6:1669:1674	6514542	13	True				
ANR	6514949	Label	case OP_F2I :	99:4:1681:1692	6514542	14	True				
ANR	6514950	Identifier	OP_F2I		6514542	0					
ANR	6514951	CompoundStatement		103:8:1720:1733	6514542	15					
ANR	6514952	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	103:8:1710:1762	6514542	0	True				
ANR	6514953	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6514954	IdentifierDeclType	float		6514542	0					
ANR	6514955	Identifier	a		6514542	1					
ANR	6514956	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6514957	Identifier	a		6514542	0					
ANR	6514958	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6514959	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514960	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514961	ArgumentList	float		6514542	1					
ANR	6514962	Argument	float		6514542	0					
ANR	6514963	Identifier	float		6514542	0					
ANR	6514964	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6514965	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6514966	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6514967	Identifier	s		6514542	0					
ANR	6514968	Identifier	gp_regs		6514542	1					
ANR	6514969	Identifier	reg_a		6514542	1					
ANR	6514970	IdentifierDeclStatement	int32_t t = a ;	105:8:1773:1786	6514542	1	True				
ANR	6514971	IdentifierDecl	t = a		6514542	0					
ANR	6514972	IdentifierDeclType	int32_t		6514542	0					
ANR	6514973	Identifier	t		6514542	1					
ANR	6514974	AssignmentExpression	t = a		6514542	2		=			
ANR	6514975	Identifier	a		6514542	0					
ANR	6514976	Identifier	a		6514542	1					
ANR	6514977	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	107:8:1797:1830	6514542	2	True				
ANR	6514978	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6514979	Identifier	r		6514542	0					
ANR	6514980	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6514981	Callee	REINTERPRET_CAST		6514542	0					
ANR	6514982	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6514983	ArgumentList	uint32_t		6514542	1					
ANR	6514984	Argument	uint32_t		6514542	0					
ANR	6514985	Identifier	uint32_t		6514542	0					
ANR	6514986	Argument	t		6514542	1					
ANR	6514987	Identifier	t		6514542	0					
ANR	6514988	ExpressionStatement	latency = LATENCY_F2I	109:8:1841:1862	6514542	3	True				
ANR	6514989	AssignmentExpression	latency = LATENCY_F2I		6514542	0		=			
ANR	6514990	Identifier	latency		6514542	0					
ANR	6514991	Identifier	LATENCY_F2I		6514542	1					
ANR	6514992	ExpressionStatement	"D_EXEC ( qemu_log ( ""F2I a=%f t=%d, r=%08x\\n"" , a , t , r ) )"	111:8:1873:1925	6514542	4	True				
ANR	6514993	CallExpression	"D_EXEC ( qemu_log ( ""F2I a=%f t=%d, r=%08x\\n"" , a , t , r ) )"		6514542	0					
ANR	6514994	Callee	D_EXEC		6514542	0					
ANR	6514995	Identifier	D_EXEC		6514542	0					
ANR	6514996	ArgumentList	"qemu_log ( ""F2I a=%f t=%d, r=%08x\\n"" , a , t , r )"		6514542	1					
ANR	6514997	Argument	"qemu_log ( ""F2I a=%f t=%d, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6514998	CallExpression	"qemu_log ( ""F2I a=%f t=%d, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6514999	Callee	qemu_log		6514542	0					
ANR	6515000	Identifier	qemu_log		6514542	0					
ANR	6515001	ArgumentList	"""F2I a=%f t=%d, r=%08x\\n"""		6514542	1					
ANR	6515002	Argument	"""F2I a=%f t=%d, r=%08x\\n"""		6514542	0					
ANR	6515003	PrimaryExpression	"""F2I a=%f t=%d, r=%08x\\n"""		6514542	0					
ANR	6515004	Argument	a		6514542	1					
ANR	6515005	Identifier	a		6514542	0					
ANR	6515006	Argument	t		6514542	2					
ANR	6515007	Identifier	t		6514542	0					
ANR	6515008	Argument	r		6514542	3					
ANR	6515009	Identifier	r		6514542	0					
ANR	6515010	BreakStatement	break ;	113:6:1934:1939	6514542	16	True				
ANR	6515011	Label	case OP_I2F :	115:4:1946:1957	6514542	17	True				
ANR	6515012	Identifier	OP_I2F		6514542	0					
ANR	6515013	CompoundStatement		119:8:1989:2000	6514542	18					
ANR	6515014	IdentifierDeclStatement	"int32_t a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] ) ;"	119:8:1975:2031	6514542	0	True				
ANR	6515015	IdentifierDecl	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515016	IdentifierDeclType	int32_t		6514542	0					
ANR	6515017	Identifier	a		6514542	1					
ANR	6515018	AssignmentExpression	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515019	Identifier	a		6514542	0					
ANR	6515020	CallExpression	"REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515021	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515022	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515023	ArgumentList	int32_t		6514542	1					
ANR	6515024	Argument	int32_t		6514542	0					
ANR	6515025	Identifier	int32_t		6514542	0					
ANR	6515026	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515027	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515028	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515029	Identifier	s		6514542	0					
ANR	6515030	Identifier	gp_regs		6514542	1					
ANR	6515031	Identifier	reg_a		6514542	1					
ANR	6515032	IdentifierDeclStatement	float t = a ;	121:8:2042:2053	6514542	1	True				
ANR	6515033	IdentifierDecl	t = a		6514542	0					
ANR	6515034	IdentifierDeclType	float		6514542	0					
ANR	6515035	Identifier	t		6514542	1					
ANR	6515036	AssignmentExpression	t = a		6514542	2		=			
ANR	6515037	Identifier	a		6514542	0					
ANR	6515038	Identifier	a		6514542	1					
ANR	6515039	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	123:8:2064:2097	6514542	2	True				
ANR	6515040	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515041	Identifier	r		6514542	0					
ANR	6515042	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515043	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515044	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515045	ArgumentList	uint32_t		6514542	1					
ANR	6515046	Argument	uint32_t		6514542	0					
ANR	6515047	Identifier	uint32_t		6514542	0					
ANR	6515048	Argument	t		6514542	1					
ANR	6515049	Identifier	t		6514542	0					
ANR	6515050	ExpressionStatement	latency = LATENCY_I2F	125:8:2108:2129	6514542	3	True				
ANR	6515051	AssignmentExpression	latency = LATENCY_I2F		6514542	0		=			
ANR	6515052	Identifier	latency		6514542	0					
ANR	6515053	Identifier	LATENCY_I2F		6514542	1					
ANR	6515054	ExpressionStatement	"D_EXEC ( qemu_log ( ""I2F a=%08x t=%f, r=%08x\\n"" , a , t , r ) )"	127:8:2140:2194	6514542	4	True				
ANR	6515055	CallExpression	"D_EXEC ( qemu_log ( ""I2F a=%08x t=%f, r=%08x\\n"" , a , t , r ) )"		6514542	0					
ANR	6515056	Callee	D_EXEC		6514542	0					
ANR	6515057	Identifier	D_EXEC		6514542	0					
ANR	6515058	ArgumentList	"qemu_log ( ""I2F a=%08x t=%f, r=%08x\\n"" , a , t , r )"		6514542	1					
ANR	6515059	Argument	"qemu_log ( ""I2F a=%08x t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515060	CallExpression	"qemu_log ( ""I2F a=%08x t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515061	Callee	qemu_log		6514542	0					
ANR	6515062	Identifier	qemu_log		6514542	0					
ANR	6515063	ArgumentList	"""I2F a=%08x t=%f, r=%08x\\n"""		6514542	1					
ANR	6515064	Argument	"""I2F a=%08x t=%f, r=%08x\\n"""		6514542	0					
ANR	6515065	PrimaryExpression	"""I2F a=%08x t=%f, r=%08x\\n"""		6514542	0					
ANR	6515066	Argument	a		6514542	1					
ANR	6515067	Identifier	a		6514542	0					
ANR	6515068	Argument	t		6514542	2					
ANR	6515069	Identifier	t		6514542	0					
ANR	6515070	Argument	r		6514542	3					
ANR	6515071	Identifier	r		6514542	0					
ANR	6515072	BreakStatement	break ;	129:6:2203:2208	6514542	19	True				
ANR	6515073	Label	case OP_VECTOUT :	131:4:2215:2230	6514542	20	True				
ANR	6515074	Identifier	OP_VECTOUT		6514542	0					
ANR	6515075	CompoundStatement		137:8:2303:2440	6514542	21					
ANR	6515076	IdentifierDeclStatement	uint32_t a = cpu_to_be32 ( s -> gp_regs [ reg_a ] ) ;	135:8:2248:2291	6514542	0	True				
ANR	6515077	IdentifierDecl	a = cpu_to_be32 ( s -> gp_regs [ reg_a ] )		6514542	0					
ANR	6515078	IdentifierDeclType	uint32_t		6514542	0					
ANR	6515079	Identifier	a		6514542	1					
ANR	6515080	AssignmentExpression	a = cpu_to_be32 ( s -> gp_regs [ reg_a ] )		6514542	2		=			
ANR	6515081	Identifier	a		6514542	0					
ANR	6515082	CallExpression	cpu_to_be32 ( s -> gp_regs [ reg_a ] )		6514542	1					
ANR	6515083	Callee	cpu_to_be32		6514542	0					
ANR	6515084	Identifier	cpu_to_be32		6514542	0					
ANR	6515085	ArgumentList	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515086	Argument	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515087	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515088	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515089	Identifier	s		6514542	0					
ANR	6515090	Identifier	gp_regs		6514542	1					
ANR	6515091	Identifier	reg_a		6514542	1					
ANR	6515092	IdentifierDeclStatement	uint32_t b = cpu_to_be32 ( s -> gp_regs [ reg_b ] ) ;	137:8:2302:2345	6514542	1	True				
ANR	6515093	IdentifierDecl	b = cpu_to_be32 ( s -> gp_regs [ reg_b ] )		6514542	0					
ANR	6515094	IdentifierDeclType	uint32_t		6514542	0					
ANR	6515095	Identifier	b		6514542	1					
ANR	6515096	AssignmentExpression	b = cpu_to_be32 ( s -> gp_regs [ reg_b ] )		6514542	2		=			
ANR	6515097	Identifier	b		6514542	0					
ANR	6515098	CallExpression	cpu_to_be32 ( s -> gp_regs [ reg_b ] )		6514542	1					
ANR	6515099	Callee	cpu_to_be32		6514542	0					
ANR	6515100	Identifier	cpu_to_be32		6514542	0					
ANR	6515101	ArgumentList	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6515102	Argument	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515103	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515104	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515105	Identifier	s		6514542	0					
ANR	6515106	Identifier	gp_regs		6514542	1					
ANR	6515107	Identifier	reg_b		6514542	1					
ANR	6515108	IdentifierDeclStatement	"target_phys_addr_t dma_ptr = get_dma_address ( s -> regs [ R_MESHBASE ] , s -> gp_regs [ GPR_X ] , s -> gp_regs [ GPR_Y ] ) ;"	139:8:2356:2493	6514542	2	True				
ANR	6515109	IdentifierDecl	"dma_ptr = get_dma_address ( s -> regs [ R_MESHBASE ] , s -> gp_regs [ GPR_X ] , s -> gp_regs [ GPR_Y ] )"		6514542	0					
ANR	6515110	IdentifierDeclType	target_phys_addr_t		6514542	0					
ANR	6515111	Identifier	dma_ptr		6514542	1					
ANR	6515112	AssignmentExpression	"dma_ptr = get_dma_address ( s -> regs [ R_MESHBASE ] , s -> gp_regs [ GPR_X ] , s -> gp_regs [ GPR_Y ] )"		6514542	2		=			
ANR	6515113	Identifier	dma_ptr		6514542	0					
ANR	6515114	CallExpression	"get_dma_address ( s -> regs [ R_MESHBASE ] , s -> gp_regs [ GPR_X ] , s -> gp_regs [ GPR_Y ] )"		6514542	1					
ANR	6515115	Callee	get_dma_address		6514542	0					
ANR	6515116	Identifier	get_dma_address		6514542	0					
ANR	6515117	ArgumentList	s -> regs [ R_MESHBASE ]		6514542	1					
ANR	6515118	Argument	s -> regs [ R_MESHBASE ]		6514542	0					
ANR	6515119	ArrayIndexing	s -> regs [ R_MESHBASE ]		6514542	0					
ANR	6515120	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515121	Identifier	s		6514542	0					
ANR	6515122	Identifier	regs		6514542	1					
ANR	6515123	Identifier	R_MESHBASE		6514542	1					
ANR	6515124	Argument	s -> gp_regs [ GPR_X ]		6514542	1					
ANR	6515125	ArrayIndexing	s -> gp_regs [ GPR_X ]		6514542	0					
ANR	6515126	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515127	Identifier	s		6514542	0					
ANR	6515128	Identifier	gp_regs		6514542	1					
ANR	6515129	Identifier	GPR_X		6514542	1					
ANR	6515130	Argument	s -> gp_regs [ GPR_Y ]		6514542	2					
ANR	6515131	ArrayIndexing	s -> gp_regs [ GPR_Y ]		6514542	0					
ANR	6515132	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515133	Identifier	s		6514542	0					
ANR	6515134	Identifier	gp_regs		6514542	1					
ANR	6515135	Identifier	GPR_Y		6514542	1					
ANR	6515136	ExpressionStatement	"cpu_physical_memory_write ( dma_ptr , ( uint8_t * ) & a , 4 )"	145:8:2504:2556	6514542	3	True				
ANR	6515137	CallExpression	"cpu_physical_memory_write ( dma_ptr , ( uint8_t * ) & a , 4 )"		6514542	0					
ANR	6515138	Callee	cpu_physical_memory_write		6514542	0					
ANR	6515139	Identifier	cpu_physical_memory_write		6514542	0					
ANR	6515140	ArgumentList	dma_ptr		6514542	1					
ANR	6515141	Argument	dma_ptr		6514542	0					
ANR	6515142	Identifier	dma_ptr		6514542	0					
ANR	6515143	Argument	( uint8_t * ) & a		6514542	1					
ANR	6515144	CastExpression	( uint8_t * ) & a		6514542	0					
ANR	6515145	CastTarget	uint8_t *		6514542	0					
ANR	6515146	UnaryOperationExpression	& a		6514542	1					
ANR	6515147	UnaryOperator	&		6514542	0					
ANR	6515148	Identifier	a		6514542	1					
ANR	6515149	Argument	4		6514542	2					
ANR	6515150	PrimaryExpression	4		6514542	0					
ANR	6515151	ExpressionStatement	"cpu_physical_memory_write ( dma_ptr + 4 , ( uint8_t * ) & b , 4 )"	147:8:2567:2623	6514542	4	True				
ANR	6515152	CallExpression	"cpu_physical_memory_write ( dma_ptr + 4 , ( uint8_t * ) & b , 4 )"		6514542	0					
ANR	6515153	Callee	cpu_physical_memory_write		6514542	0					
ANR	6515154	Identifier	cpu_physical_memory_write		6514542	0					
ANR	6515155	ArgumentList	dma_ptr + 4		6514542	1					
ANR	6515156	Argument	dma_ptr + 4		6514542	0					
ANR	6515157	AdditiveExpression	dma_ptr + 4		6514542	0		+			
ANR	6515158	Identifier	dma_ptr		6514542	0					
ANR	6515159	PrimaryExpression	4		6514542	1					
ANR	6515160	Argument	( uint8_t * ) & b		6514542	1					
ANR	6515161	CastExpression	( uint8_t * ) & b		6514542	0					
ANR	6515162	CastTarget	uint8_t *		6514542	0					
ANR	6515163	UnaryOperationExpression	& b		6514542	1					
ANR	6515164	UnaryOperator	&		6514542	0					
ANR	6515165	Identifier	b		6514542	1					
ANR	6515166	Argument	4		6514542	2					
ANR	6515167	PrimaryExpression	4		6514542	0					
ANR	6515168	ExpressionStatement	s -> regs [ R_LASTDMA ] = dma_ptr + 4	149:8:2634:2666	6514542	5	True				
ANR	6515169	AssignmentExpression	s -> regs [ R_LASTDMA ] = dma_ptr + 4		6514542	0		=			
ANR	6515170	ArrayIndexing	s -> regs [ R_LASTDMA ]		6514542	0					
ANR	6515171	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515172	Identifier	s		6514542	0					
ANR	6515173	Identifier	regs		6514542	1					
ANR	6515174	Identifier	R_LASTDMA		6514542	1					
ANR	6515175	AdditiveExpression	dma_ptr + 4		6514542	1		+			
ANR	6515176	Identifier	dma_ptr		6514542	0					
ANR	6515177	PrimaryExpression	4		6514542	1					
ANR	6515178	ExpressionStatement	"D_EXEC ( qemu_log ( ""VECTOUT a=%08x b=%08x dma=%08x\\n"" , a , b , dma_ptr ) )"	151:8:2677:2744	6514542	6	True				
ANR	6515179	CallExpression	"D_EXEC ( qemu_log ( ""VECTOUT a=%08x b=%08x dma=%08x\\n"" , a , b , dma_ptr ) )"		6514542	0					
ANR	6515180	Callee	D_EXEC		6514542	0					
ANR	6515181	Identifier	D_EXEC		6514542	0					
ANR	6515182	ArgumentList	"qemu_log ( ""VECTOUT a=%08x b=%08x dma=%08x\\n"" , a , b , dma_ptr )"		6514542	1					
ANR	6515183	Argument	"qemu_log ( ""VECTOUT a=%08x b=%08x dma=%08x\\n"" , a , b , dma_ptr )"		6514542	0					
ANR	6515184	CallExpression	"qemu_log ( ""VECTOUT a=%08x b=%08x dma=%08x\\n"" , a , b , dma_ptr )"		6514542	0					
ANR	6515185	Callee	qemu_log		6514542	0					
ANR	6515186	Identifier	qemu_log		6514542	0					
ANR	6515187	ArgumentList	"""VECTOUT a=%08x b=%08x dma=%08x\\n"""		6514542	1					
ANR	6515188	Argument	"""VECTOUT a=%08x b=%08x dma=%08x\\n"""		6514542	0					
ANR	6515189	PrimaryExpression	"""VECTOUT a=%08x b=%08x dma=%08x\\n"""		6514542	0					
ANR	6515190	Argument	a		6514542	1					
ANR	6515191	Identifier	a		6514542	0					
ANR	6515192	Argument	b		6514542	2					
ANR	6515193	Identifier	b		6514542	0					
ANR	6515194	Argument	dma_ptr		6514542	3					
ANR	6515195	Identifier	dma_ptr		6514542	0					
ANR	6515196	ExpressionStatement	"trace_milkymist_pfpu_vectout ( a , b , dma_ptr )"	153:8:2755:2798	6514542	7	True				
ANR	6515197	CallExpression	"trace_milkymist_pfpu_vectout ( a , b , dma_ptr )"		6514542	0					
ANR	6515198	Callee	trace_milkymist_pfpu_vectout		6514542	0					
ANR	6515199	Identifier	trace_milkymist_pfpu_vectout		6514542	0					
ANR	6515200	ArgumentList	a		6514542	1					
ANR	6515201	Argument	a		6514542	0					
ANR	6515202	Identifier	a		6514542	0					
ANR	6515203	Argument	b		6514542	1					
ANR	6515204	Identifier	b		6514542	0					
ANR	6515205	Argument	dma_ptr		6514542	2					
ANR	6515206	Identifier	dma_ptr		6514542	0					
ANR	6515207	BreakStatement	break ;	155:6:2807:2812	6514542	22	True				
ANR	6515208	Label	case OP_SIN :	157:4:2819:2830	6514542	23	True				
ANR	6515209	Identifier	OP_SIN		6514542	0					
ANR	6515210	CompoundStatement		161:8:2862:2907	6514542	24					
ANR	6515211	IdentifierDeclStatement	"int32_t a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] ) ;"	161:8:2848:2904	6514542	0	True				
ANR	6515212	IdentifierDecl	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515213	IdentifierDeclType	int32_t		6514542	0					
ANR	6515214	Identifier	a		6514542	1					
ANR	6515215	AssignmentExpression	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515216	Identifier	a		6514542	0					
ANR	6515217	CallExpression	"REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515218	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515219	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515220	ArgumentList	int32_t		6514542	1					
ANR	6515221	Argument	int32_t		6514542	0					
ANR	6515222	Identifier	int32_t		6514542	0					
ANR	6515223	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515224	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515225	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515226	Identifier	s		6514542	0					
ANR	6515227	Identifier	gp_regs		6514542	1					
ANR	6515228	Identifier	reg_a		6514542	1					
ANR	6515229	IdentifierDeclStatement	float t = sinf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) ) ;	163:8:2915:2960	6514542	1	True				
ANR	6515230	IdentifierDecl	t = sinf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	0					
ANR	6515231	IdentifierDeclType	float		6514542	0					
ANR	6515232	Identifier	t		6514542	1					
ANR	6515233	AssignmentExpression	t = sinf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	2		=			
ANR	6515234	Identifier	t		6514542	0					
ANR	6515235	CallExpression	sinf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	1					
ANR	6515236	Callee	sinf		6514542	0					
ANR	6515237	Identifier	sinf		6514542	0					
ANR	6515238	ArgumentList	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	1					
ANR	6515239	Argument	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	0					
ANR	6515240	MultiplicativeExpression	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	0		*			
ANR	6515241	Identifier	a		6514542	0					
ANR	6515242	MultiplicativeExpression	1.0f / ( M_PI * 4096.0f )		6514542	1		/			
ANR	6515243	PrimaryExpression	1.0f		6514542	0					
ANR	6515244	MultiplicativeExpression	M_PI * 4096.0f		6514542	1		*			
ANR	6515245	Identifier	M_PI		6514542	0					
ANR	6515246	PrimaryExpression	4096.0f		6514542	1					
ANR	6515247	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	165:8:2971:3004	6514542	2	True				
ANR	6515248	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515249	Identifier	r		6514542	0					
ANR	6515250	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515251	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515252	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515253	ArgumentList	uint32_t		6514542	1					
ANR	6515254	Argument	uint32_t		6514542	0					
ANR	6515255	Identifier	uint32_t		6514542	0					
ANR	6515256	Argument	t		6514542	1					
ANR	6515257	Identifier	t		6514542	0					
ANR	6515258	ExpressionStatement	latency = LATENCY_SIN	167:8:3015:3036	6514542	3	True				
ANR	6515259	AssignmentExpression	latency = LATENCY_SIN		6514542	0		=			
ANR	6515260	Identifier	latency		6514542	0					
ANR	6515261	Identifier	LATENCY_SIN		6514542	1					
ANR	6515262	ExpressionStatement	"D_EXEC ( qemu_log ( ""SIN a=%d t=%f, r=%08x\\n"" , a , t , r ) )"	169:8:3047:3099	6514542	4	True				
ANR	6515263	CallExpression	"D_EXEC ( qemu_log ( ""SIN a=%d t=%f, r=%08x\\n"" , a , t , r ) )"		6514542	0					
ANR	6515264	Callee	D_EXEC		6514542	0					
ANR	6515265	Identifier	D_EXEC		6514542	0					
ANR	6515266	ArgumentList	"qemu_log ( ""SIN a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	1					
ANR	6515267	Argument	"qemu_log ( ""SIN a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515268	CallExpression	"qemu_log ( ""SIN a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515269	Callee	qemu_log		6514542	0					
ANR	6515270	Identifier	qemu_log		6514542	0					
ANR	6515271	ArgumentList	"""SIN a=%d t=%f, r=%08x\\n"""		6514542	1					
ANR	6515272	Argument	"""SIN a=%d t=%f, r=%08x\\n"""		6514542	0					
ANR	6515273	PrimaryExpression	"""SIN a=%d t=%f, r=%08x\\n"""		6514542	0					
ANR	6515274	Argument	a		6514542	1					
ANR	6515275	Identifier	a		6514542	0					
ANR	6515276	Argument	t		6514542	2					
ANR	6515277	Identifier	t		6514542	0					
ANR	6515278	Argument	r		6514542	3					
ANR	6515279	Identifier	r		6514542	0					
ANR	6515280	BreakStatement	break ;	171:6:3108:3113	6514542	25	True				
ANR	6515281	Label	case OP_COS :	173:4:3120:3131	6514542	26	True				
ANR	6515282	Identifier	OP_COS		6514542	0					
ANR	6515283	CompoundStatement		177:8:3163:3208	6514542	27					
ANR	6515284	IdentifierDeclStatement	"int32_t a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] ) ;"	177:8:3149:3205	6514542	0	True				
ANR	6515285	IdentifierDecl	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515286	IdentifierDeclType	int32_t		6514542	0					
ANR	6515287	Identifier	a		6514542	1					
ANR	6515288	AssignmentExpression	"a = REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515289	Identifier	a		6514542	0					
ANR	6515290	CallExpression	"REINTERPRET_CAST ( int32_t , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515291	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515292	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515293	ArgumentList	int32_t		6514542	1					
ANR	6515294	Argument	int32_t		6514542	0					
ANR	6515295	Identifier	int32_t		6514542	0					
ANR	6515296	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515297	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515298	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515299	Identifier	s		6514542	0					
ANR	6515300	Identifier	gp_regs		6514542	1					
ANR	6515301	Identifier	reg_a		6514542	1					
ANR	6515302	IdentifierDeclStatement	float t = cosf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) ) ;	179:8:3216:3261	6514542	1	True				
ANR	6515303	IdentifierDecl	t = cosf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	0					
ANR	6515304	IdentifierDeclType	float		6514542	0					
ANR	6515305	Identifier	t		6514542	1					
ANR	6515306	AssignmentExpression	t = cosf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	2		=			
ANR	6515307	Identifier	t		6514542	0					
ANR	6515308	CallExpression	cosf ( a * ( 1.0f / ( M_PI * 4096.0f ) ) )		6514542	1					
ANR	6515309	Callee	cosf		6514542	0					
ANR	6515310	Identifier	cosf		6514542	0					
ANR	6515311	ArgumentList	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	1					
ANR	6515312	Argument	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	0					
ANR	6515313	MultiplicativeExpression	a * ( 1.0f / ( M_PI * 4096.0f ) )		6514542	0		*			
ANR	6515314	Identifier	a		6514542	0					
ANR	6515315	MultiplicativeExpression	1.0f / ( M_PI * 4096.0f )		6514542	1		/			
ANR	6515316	PrimaryExpression	1.0f		6514542	0					
ANR	6515317	MultiplicativeExpression	M_PI * 4096.0f		6514542	1		*			
ANR	6515318	Identifier	M_PI		6514542	0					
ANR	6515319	PrimaryExpression	4096.0f		6514542	1					
ANR	6515320	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	181:8:3272:3305	6514542	2	True				
ANR	6515321	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515322	Identifier	r		6514542	0					
ANR	6515323	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515324	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515325	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515326	ArgumentList	uint32_t		6514542	1					
ANR	6515327	Argument	uint32_t		6514542	0					
ANR	6515328	Identifier	uint32_t		6514542	0					
ANR	6515329	Argument	t		6514542	1					
ANR	6515330	Identifier	t		6514542	0					
ANR	6515331	ExpressionStatement	latency = LATENCY_COS	183:8:3316:3337	6514542	3	True				
ANR	6515332	AssignmentExpression	latency = LATENCY_COS		6514542	0		=			
ANR	6515333	Identifier	latency		6514542	0					
ANR	6515334	Identifier	LATENCY_COS		6514542	1					
ANR	6515335	ExpressionStatement	"D_EXEC ( qemu_log ( ""COS a=%d t=%f, r=%08x\\n"" , a , t , r ) )"	185:8:3348:3400	6514542	4	True				
ANR	6515336	CallExpression	"D_EXEC ( qemu_log ( ""COS a=%d t=%f, r=%08x\\n"" , a , t , r ) )"		6514542	0					
ANR	6515337	Callee	D_EXEC		6514542	0					
ANR	6515338	Identifier	D_EXEC		6514542	0					
ANR	6515339	ArgumentList	"qemu_log ( ""COS a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	1					
ANR	6515340	Argument	"qemu_log ( ""COS a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515341	CallExpression	"qemu_log ( ""COS a=%d t=%f, r=%08x\\n"" , a , t , r )"		6514542	0					
ANR	6515342	Callee	qemu_log		6514542	0					
ANR	6515343	Identifier	qemu_log		6514542	0					
ANR	6515344	ArgumentList	"""COS a=%d t=%f, r=%08x\\n"""		6514542	1					
ANR	6515345	Argument	"""COS a=%d t=%f, r=%08x\\n"""		6514542	0					
ANR	6515346	PrimaryExpression	"""COS a=%d t=%f, r=%08x\\n"""		6514542	0					
ANR	6515347	Argument	a		6514542	1					
ANR	6515348	Identifier	a		6514542	0					
ANR	6515349	Argument	t		6514542	2					
ANR	6515350	Identifier	t		6514542	0					
ANR	6515351	Argument	r		6514542	3					
ANR	6515352	Identifier	r		6514542	0					
ANR	6515353	BreakStatement	break ;	187:6:3409:3414	6514542	28	True				
ANR	6515354	Label	case OP_ABOVE :	189:4:3421:3434	6514542	29	True				
ANR	6515355	Identifier	OP_ABOVE		6514542	0					
ANR	6515356	CompoundStatement		195:8:3525:3556	6514542	30					
ANR	6515357	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	193:8:3452:3504	6514542	0	True				
ANR	6515358	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515359	IdentifierDeclType	float		6514542	0					
ANR	6515360	Identifier	a		6514542	1					
ANR	6515361	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515362	Identifier	a		6514542	0					
ANR	6515363	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515364	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515365	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515366	ArgumentList	float		6514542	1					
ANR	6515367	Argument	float		6514542	0					
ANR	6515368	Identifier	float		6514542	0					
ANR	6515369	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515370	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515371	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515372	Identifier	s		6514542	0					
ANR	6515373	Identifier	gp_regs		6514542	1					
ANR	6515374	Identifier	reg_a		6514542	1					
ANR	6515375	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	195:8:3515:3567	6514542	1	True				
ANR	6515376	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6515377	IdentifierDeclType	float		6514542	0					
ANR	6515378	Identifier	b		6514542	1					
ANR	6515379	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6515380	Identifier	b		6514542	0					
ANR	6515381	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6515382	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515383	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515384	ArgumentList	float		6514542	1					
ANR	6515385	Argument	float		6514542	0					
ANR	6515386	Identifier	float		6514542	0					
ANR	6515387	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6515388	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515389	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515390	Identifier	s		6514542	0					
ANR	6515391	Identifier	gp_regs		6514542	1					
ANR	6515392	Identifier	reg_b		6514542	1					
ANR	6515393	IdentifierDeclStatement	float t = ( a > b ) ? 1.0f : 0.0f ;	197:8:3578:3609	6514542	2	True				
ANR	6515394	IdentifierDecl	t = ( a > b ) ? 1.0f : 0.0f		6514542	0					
ANR	6515395	IdentifierDeclType	float		6514542	0					
ANR	6515396	Identifier	t		6514542	1					
ANR	6515397	AssignmentExpression	t = ( a > b ) ? 1.0f : 0.0f		6514542	2		=			
ANR	6515398	Identifier	t		6514542	0					
ANR	6515399	ConditionalExpression	( a > b ) ? 1.0f : 0.0f		6514542	1					
ANR	6515400	Condition	a > b		6514542	0					
ANR	6515401	RelationalExpression	a > b		6514542	0		>			
ANR	6515402	Identifier	a		6514542	0					
ANR	6515403	Identifier	b		6514542	1					
ANR	6515404	PrimaryExpression	1.0f		6514542	1					
ANR	6515405	PrimaryExpression	0.0f		6514542	2					
ANR	6515406	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	199:8:3620:3653	6514542	3	True				
ANR	6515407	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515408	Identifier	r		6514542	0					
ANR	6515409	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515410	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515411	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515412	ArgumentList	uint32_t		6514542	1					
ANR	6515413	Argument	uint32_t		6514542	0					
ANR	6515414	Identifier	uint32_t		6514542	0					
ANR	6515415	Argument	t		6514542	1					
ANR	6515416	Identifier	t		6514542	0					
ANR	6515417	ExpressionStatement	latency = LATENCY_ABOVE	201:8:3664:3687	6514542	4	True				
ANR	6515418	AssignmentExpression	latency = LATENCY_ABOVE		6514542	0		=			
ANR	6515419	Identifier	latency		6514542	0					
ANR	6515420	Identifier	LATENCY_ABOVE		6514542	1					
ANR	6515421	ExpressionStatement	"D_EXEC ( qemu_log ( ""ABOVE a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	203:8:3698:3760	6514542	5	True				
ANR	6515422	CallExpression	"D_EXEC ( qemu_log ( ""ABOVE a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6515423	Callee	D_EXEC		6514542	0					
ANR	6515424	Identifier	D_EXEC		6514542	0					
ANR	6515425	ArgumentList	"qemu_log ( ""ABOVE a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6515426	Argument	"qemu_log ( ""ABOVE a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515427	CallExpression	"qemu_log ( ""ABOVE a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515428	Callee	qemu_log		6514542	0					
ANR	6515429	Identifier	qemu_log		6514542	0					
ANR	6515430	ArgumentList	"""ABOVE a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6515431	Argument	"""ABOVE a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515432	PrimaryExpression	"""ABOVE a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515433	Argument	a		6514542	1					
ANR	6515434	Identifier	a		6514542	0					
ANR	6515435	Argument	b		6514542	2					
ANR	6515436	Identifier	b		6514542	0					
ANR	6515437	Argument	t		6514542	3					
ANR	6515438	Identifier	t		6514542	0					
ANR	6515439	Argument	r		6514542	4					
ANR	6515440	Identifier	r		6514542	0					
ANR	6515441	BreakStatement	break ;	205:6:3769:3774	6514542	31	True				
ANR	6515442	Label	case OP_EQUAL :	207:4:3781:3794	6514542	32	True				
ANR	6515443	Identifier	OP_EQUAL		6514542	0					
ANR	6515444	CompoundStatement		213:8:3885:3917	6514542	33					
ANR	6515445	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	211:8:3812:3864	6514542	0	True				
ANR	6515446	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515447	IdentifierDeclType	float		6514542	0					
ANR	6515448	Identifier	a		6514542	1					
ANR	6515449	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515450	Identifier	a		6514542	0					
ANR	6515451	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515452	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515453	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515454	ArgumentList	float		6514542	1					
ANR	6515455	Argument	float		6514542	0					
ANR	6515456	Identifier	float		6514542	0					
ANR	6515457	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515458	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515459	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515460	Identifier	s		6514542	0					
ANR	6515461	Identifier	gp_regs		6514542	1					
ANR	6515462	Identifier	reg_a		6514542	1					
ANR	6515463	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	213:8:3875:3927	6514542	1	True				
ANR	6515464	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6515465	IdentifierDeclType	float		6514542	0					
ANR	6515466	Identifier	b		6514542	1					
ANR	6515467	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6515468	Identifier	b		6514542	0					
ANR	6515469	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6515470	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515471	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515472	ArgumentList	float		6514542	1					
ANR	6515473	Argument	float		6514542	0					
ANR	6515474	Identifier	float		6514542	0					
ANR	6515475	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6515476	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515477	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515478	Identifier	s		6514542	0					
ANR	6515479	Identifier	gp_regs		6514542	1					
ANR	6515480	Identifier	reg_b		6514542	1					
ANR	6515481	IdentifierDeclStatement	float t = ( a == b ) ? 1.0f : 0.0f ;	215:8:3938:3970	6514542	2	True				
ANR	6515482	IdentifierDecl	t = ( a == b ) ? 1.0f : 0.0f		6514542	0					
ANR	6515483	IdentifierDeclType	float		6514542	0					
ANR	6515484	Identifier	t		6514542	1					
ANR	6515485	AssignmentExpression	t = ( a == b ) ? 1.0f : 0.0f		6514542	2		=			
ANR	6515486	Identifier	t		6514542	0					
ANR	6515487	ConditionalExpression	( a == b ) ? 1.0f : 0.0f		6514542	1					
ANR	6515488	Condition	a == b		6514542	0					
ANR	6515489	EqualityExpression	a == b		6514542	0		==			
ANR	6515490	Identifier	a		6514542	0					
ANR	6515491	Identifier	b		6514542	1					
ANR	6515492	PrimaryExpression	1.0f		6514542	1					
ANR	6515493	PrimaryExpression	0.0f		6514542	2					
ANR	6515494	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	217:8:3981:4014	6514542	3	True				
ANR	6515495	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515496	Identifier	r		6514542	0					
ANR	6515497	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515498	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515499	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515500	ArgumentList	uint32_t		6514542	1					
ANR	6515501	Argument	uint32_t		6514542	0					
ANR	6515502	Identifier	uint32_t		6514542	0					
ANR	6515503	Argument	t		6514542	1					
ANR	6515504	Identifier	t		6514542	0					
ANR	6515505	ExpressionStatement	latency = LATENCY_EQUAL	219:8:4025:4048	6514542	4	True				
ANR	6515506	AssignmentExpression	latency = LATENCY_EQUAL		6514542	0		=			
ANR	6515507	Identifier	latency		6514542	0					
ANR	6515508	Identifier	LATENCY_EQUAL		6514542	1					
ANR	6515509	ExpressionStatement	"D_EXEC ( qemu_log ( ""EQUAL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	221:8:4059:4121	6514542	5	True				
ANR	6515510	CallExpression	"D_EXEC ( qemu_log ( ""EQUAL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6515511	Callee	D_EXEC		6514542	0					
ANR	6515512	Identifier	D_EXEC		6514542	0					
ANR	6515513	ArgumentList	"qemu_log ( ""EQUAL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6515514	Argument	"qemu_log ( ""EQUAL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515515	CallExpression	"qemu_log ( ""EQUAL a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515516	Callee	qemu_log		6514542	0					
ANR	6515517	Identifier	qemu_log		6514542	0					
ANR	6515518	ArgumentList	"""EQUAL a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6515519	Argument	"""EQUAL a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515520	PrimaryExpression	"""EQUAL a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515521	Argument	a		6514542	1					
ANR	6515522	Identifier	a		6514542	0					
ANR	6515523	Argument	b		6514542	2					
ANR	6515524	Identifier	b		6514542	0					
ANR	6515525	Argument	t		6514542	3					
ANR	6515526	Identifier	t		6514542	0					
ANR	6515527	Argument	r		6514542	4					
ANR	6515528	Identifier	r		6514542	0					
ANR	6515529	BreakStatement	break ;	223:6:4130:4135	6514542	34	True				
ANR	6515530	Label	case OP_COPY :	225:4:4142:4154	6514542	35	True				
ANR	6515531	Identifier	OP_COPY		6514542	0					
ANR	6515532	CompoundStatement		225:4:4108:4108	6514542	36					
ANR	6515533	ExpressionStatement	r = s -> gp_regs [ reg_a ]	229:8:4172:4193	6514542	0	True				
ANR	6515534	AssignmentExpression	r = s -> gp_regs [ reg_a ]		6514542	0		=			
ANR	6515535	Identifier	r		6514542	0					
ANR	6515536	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515537	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515538	Identifier	s		6514542	0					
ANR	6515539	Identifier	gp_regs		6514542	1					
ANR	6515540	Identifier	reg_a		6514542	1					
ANR	6515541	ExpressionStatement	latency = LATENCY_COPY	231:8:4204:4226	6514542	1	True				
ANR	6515542	AssignmentExpression	latency = LATENCY_COPY		6514542	0		=			
ANR	6515543	Identifier	latency		6514542	0					
ANR	6515544	Identifier	LATENCY_COPY		6514542	1					
ANR	6515545	ExpressionStatement	"D_EXEC ( qemu_log ( ""COPY"" ) )"	233:8:4237:4261	6514542	2	True				
ANR	6515546	CallExpression	"D_EXEC ( qemu_log ( ""COPY"" ) )"		6514542	0					
ANR	6515547	Callee	D_EXEC		6514542	0					
ANR	6515548	Identifier	D_EXEC		6514542	0					
ANR	6515549	ArgumentList	"qemu_log ( ""COPY"" )"		6514542	1					
ANR	6515550	Argument	"qemu_log ( ""COPY"" )"		6514542	0					
ANR	6515551	CallExpression	"qemu_log ( ""COPY"" )"		6514542	0					
ANR	6515552	Callee	qemu_log		6514542	0					
ANR	6515553	Identifier	qemu_log		6514542	0					
ANR	6515554	ArgumentList	"""COPY"""		6514542	1					
ANR	6515555	Argument	"""COPY"""		6514542	0					
ANR	6515556	PrimaryExpression	"""COPY"""		6514542	0					
ANR	6515557	BreakStatement	break ;	235:6:4270:4275	6514542	37	True				
ANR	6515558	Label	case OP_IF :	237:4:4282:4292	6514542	38	True				
ANR	6515559	Identifier	OP_IF		6514542	0					
ANR	6515560	CompoundStatement		245:8:4428:4454	6514542	39					
ANR	6515561	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	241:8:4310:4362	6514542	0	True				
ANR	6515562	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515563	IdentifierDeclType	float		6514542	0					
ANR	6515564	Identifier	a		6514542	1					
ANR	6515565	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515566	Identifier	a		6514542	0					
ANR	6515567	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515568	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515569	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515570	ArgumentList	float		6514542	1					
ANR	6515571	Argument	float		6514542	0					
ANR	6515572	Identifier	float		6514542	0					
ANR	6515573	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515574	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515575	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515576	Identifier	s		6514542	0					
ANR	6515577	Identifier	gp_regs		6514542	1					
ANR	6515578	Identifier	reg_a		6514542	1					
ANR	6515579	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	243:8:4373:4425	6514542	1	True				
ANR	6515580	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6515581	IdentifierDeclType	float		6514542	0					
ANR	6515582	Identifier	b		6514542	1					
ANR	6515583	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6515584	Identifier	b		6514542	0					
ANR	6515585	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6515586	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515587	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515588	ArgumentList	float		6514542	1					
ANR	6515589	Argument	float		6514542	0					
ANR	6515590	Identifier	float		6514542	0					
ANR	6515591	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6515592	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515593	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515594	Identifier	s		6514542	0					
ANR	6515595	Identifier	gp_regs		6514542	1					
ANR	6515596	Identifier	reg_b		6514542	1					
ANR	6515597	IdentifierDeclStatement	uint32_t f = s -> gp_regs [ GPR_FLAGS ] ;	245:8:4436:4470	6514542	2	True				
ANR	6515598	IdentifierDecl	f = s -> gp_regs [ GPR_FLAGS ]		6514542	0					
ANR	6515599	IdentifierDeclType	uint32_t		6514542	0					
ANR	6515600	Identifier	f		6514542	1					
ANR	6515601	AssignmentExpression	f = s -> gp_regs [ GPR_FLAGS ]		6514542	2		=			
ANR	6515602	Identifier	f		6514542	0					
ANR	6515603	ArrayIndexing	s -> gp_regs [ GPR_FLAGS ]		6514542	1					
ANR	6515604	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515605	Identifier	s		6514542	0					
ANR	6515606	Identifier	gp_regs		6514542	1					
ANR	6515607	Identifier	GPR_FLAGS		6514542	1					
ANR	6515608	IdentifierDeclStatement	float t = ( f != 0 ) ? a : b ;	247:8:4481:4507	6514542	3	True				
ANR	6515609	IdentifierDecl	t = ( f != 0 ) ? a : b		6514542	0					
ANR	6515610	IdentifierDeclType	float		6514542	0					
ANR	6515611	Identifier	t		6514542	1					
ANR	6515612	AssignmentExpression	t = ( f != 0 ) ? a : b		6514542	2		=			
ANR	6515613	Identifier	t		6514542	0					
ANR	6515614	ConditionalExpression	( f != 0 ) ? a : b		6514542	1					
ANR	6515615	Condition	f != 0		6514542	0					
ANR	6515616	EqualityExpression	f != 0		6514542	0		!=			
ANR	6515617	Identifier	f		6514542	0					
ANR	6515618	PrimaryExpression	0		6514542	1					
ANR	6515619	Identifier	a		6514542	1					
ANR	6515620	Identifier	b		6514542	2					
ANR	6515621	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	249:8:4518:4551	6514542	4	True				
ANR	6515622	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515623	Identifier	r		6514542	0					
ANR	6515624	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515625	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515626	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515627	ArgumentList	uint32_t		6514542	1					
ANR	6515628	Argument	uint32_t		6514542	0					
ANR	6515629	Identifier	uint32_t		6514542	0					
ANR	6515630	Argument	t		6514542	1					
ANR	6515631	Identifier	t		6514542	0					
ANR	6515632	ExpressionStatement	latency = LATENCY_IF	251:8:4562:4582	6514542	5	True				
ANR	6515633	AssignmentExpression	latency = LATENCY_IF		6514542	0		=			
ANR	6515634	Identifier	latency		6514542	0					
ANR	6515635	Identifier	LATENCY_IF		6514542	1					
ANR	6515636	ExpressionStatement	"D_EXEC ( qemu_log ( ""IF f=%u a=%f b=%f t=%f, r=%08x\\n"" , f , a , b , t , r ) )"	253:8:4593:4660	6514542	6	True				
ANR	6515637	CallExpression	"D_EXEC ( qemu_log ( ""IF f=%u a=%f b=%f t=%f, r=%08x\\n"" , f , a , b , t , r ) )"		6514542	0					
ANR	6515638	Callee	D_EXEC		6514542	0					
ANR	6515639	Identifier	D_EXEC		6514542	0					
ANR	6515640	ArgumentList	"qemu_log ( ""IF f=%u a=%f b=%f t=%f, r=%08x\\n"" , f , a , b , t , r )"		6514542	1					
ANR	6515641	Argument	"qemu_log ( ""IF f=%u a=%f b=%f t=%f, r=%08x\\n"" , f , a , b , t , r )"		6514542	0					
ANR	6515642	CallExpression	"qemu_log ( ""IF f=%u a=%f b=%f t=%f, r=%08x\\n"" , f , a , b , t , r )"		6514542	0					
ANR	6515643	Callee	qemu_log		6514542	0					
ANR	6515644	Identifier	qemu_log		6514542	0					
ANR	6515645	ArgumentList	"""IF f=%u a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6515646	Argument	"""IF f=%u a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515647	PrimaryExpression	"""IF f=%u a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515648	Argument	f		6514542	1					
ANR	6515649	Identifier	f		6514542	0					
ANR	6515650	Argument	a		6514542	2					
ANR	6515651	Identifier	a		6514542	0					
ANR	6515652	Argument	b		6514542	3					
ANR	6515653	Identifier	b		6514542	0					
ANR	6515654	Argument	t		6514542	4					
ANR	6515655	Identifier	t		6514542	0					
ANR	6515656	Argument	r		6514542	5					
ANR	6515657	Identifier	r		6514542	0					
ANR	6515658	BreakStatement	break ;	255:6:4669:4674	6514542	40	True				
ANR	6515659	Label	case OP_TSIGN :	257:4:4681:4694	6514542	41	True				
ANR	6515660	Identifier	OP_TSIGN		6514542	0					
ANR	6515661	CompoundStatement		263:8:4785:4811	6514542	42					
ANR	6515662	IdentifierDeclStatement	"float a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] ) ;"	261:8:4712:4764	6514542	0	True				
ANR	6515663	IdentifierDecl	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	0					
ANR	6515664	IdentifierDeclType	float		6514542	0					
ANR	6515665	Identifier	a		6514542	1					
ANR	6515666	AssignmentExpression	"a = REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	2		=			
ANR	6515667	Identifier	a		6514542	0					
ANR	6515668	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_a ] )"		6514542	1					
ANR	6515669	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515670	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515671	ArgumentList	float		6514542	1					
ANR	6515672	Argument	float		6514542	0					
ANR	6515673	Identifier	float		6514542	0					
ANR	6515674	Argument	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515675	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515676	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515677	Identifier	s		6514542	0					
ANR	6515678	Identifier	gp_regs		6514542	1					
ANR	6515679	Identifier	reg_a		6514542	1					
ANR	6515680	IdentifierDeclStatement	"float b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] ) ;"	263:8:4775:4827	6514542	1	True				
ANR	6515681	IdentifierDecl	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	0					
ANR	6515682	IdentifierDeclType	float		6514542	0					
ANR	6515683	Identifier	b		6514542	1					
ANR	6515684	AssignmentExpression	"b = REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	2		=			
ANR	6515685	Identifier	b		6514542	0					
ANR	6515686	CallExpression	"REINTERPRET_CAST ( float , s -> gp_regs [ reg_b ] )"		6514542	1					
ANR	6515687	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515688	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515689	ArgumentList	float		6514542	1					
ANR	6515690	Argument	float		6514542	0					
ANR	6515691	Identifier	float		6514542	0					
ANR	6515692	Argument	s -> gp_regs [ reg_b ]		6514542	1					
ANR	6515693	ArrayIndexing	s -> gp_regs [ reg_b ]		6514542	0					
ANR	6515694	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515695	Identifier	s		6514542	0					
ANR	6515696	Identifier	gp_regs		6514542	1					
ANR	6515697	Identifier	reg_b		6514542	1					
ANR	6515698	IdentifierDeclStatement	float t = ( b < 0 ) ? - a : a ;	265:8:4838:4864	6514542	2	True				
ANR	6515699	IdentifierDecl	t = ( b < 0 ) ? - a : a		6514542	0					
ANR	6515700	IdentifierDeclType	float		6514542	0					
ANR	6515701	Identifier	t		6514542	1					
ANR	6515702	AssignmentExpression	t = ( b < 0 ) ? - a : a		6514542	2		=			
ANR	6515703	Identifier	t		6514542	0					
ANR	6515704	ConditionalExpression	( b < 0 ) ? - a : a		6514542	1					
ANR	6515705	Condition	b < 0		6514542	0					
ANR	6515706	RelationalExpression	b < 0		6514542	0		<			
ANR	6515707	Identifier	b		6514542	0					
ANR	6515708	PrimaryExpression	0		6514542	1					
ANR	6515709	UnaryOperationExpression	- a		6514542	1					
ANR	6515710	UnaryOperator	-		6514542	0					
ANR	6515711	Identifier	a		6514542	1					
ANR	6515712	Identifier	a		6514542	2					
ANR	6515713	ExpressionStatement	"r = REINTERPRET_CAST ( uint32_t , t )"	267:8:4875:4908	6514542	3	True				
ANR	6515714	AssignmentExpression	"r = REINTERPRET_CAST ( uint32_t , t )"		6514542	0		=			
ANR	6515715	Identifier	r		6514542	0					
ANR	6515716	CallExpression	"REINTERPRET_CAST ( uint32_t , t )"		6514542	1					
ANR	6515717	Callee	REINTERPRET_CAST		6514542	0					
ANR	6515718	Identifier	REINTERPRET_CAST		6514542	0					
ANR	6515719	ArgumentList	uint32_t		6514542	1					
ANR	6515720	Argument	uint32_t		6514542	0					
ANR	6515721	Identifier	uint32_t		6514542	0					
ANR	6515722	Argument	t		6514542	1					
ANR	6515723	Identifier	t		6514542	0					
ANR	6515724	ExpressionStatement	latency = LATENCY_TSIGN	269:8:4919:4942	6514542	4	True				
ANR	6515725	AssignmentExpression	latency = LATENCY_TSIGN		6514542	0		=			
ANR	6515726	Identifier	latency		6514542	0					
ANR	6515727	Identifier	LATENCY_TSIGN		6514542	1					
ANR	6515728	ExpressionStatement	"D_EXEC ( qemu_log ( ""TSIGN a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"	271:8:4953:5015	6514542	5	True				
ANR	6515729	CallExpression	"D_EXEC ( qemu_log ( ""TSIGN a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r ) )"		6514542	0					
ANR	6515730	Callee	D_EXEC		6514542	0					
ANR	6515731	Identifier	D_EXEC		6514542	0					
ANR	6515732	ArgumentList	"qemu_log ( ""TSIGN a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	1					
ANR	6515733	Argument	"qemu_log ( ""TSIGN a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515734	CallExpression	"qemu_log ( ""TSIGN a=%f b=%f t=%f, r=%08x\\n"" , a , b , t , r )"		6514542	0					
ANR	6515735	Callee	qemu_log		6514542	0					
ANR	6515736	Identifier	qemu_log		6514542	0					
ANR	6515737	ArgumentList	"""TSIGN a=%f b=%f t=%f, r=%08x\\n"""		6514542	1					
ANR	6515738	Argument	"""TSIGN a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515739	PrimaryExpression	"""TSIGN a=%f b=%f t=%f, r=%08x\\n"""		6514542	0					
ANR	6515740	Argument	a		6514542	1					
ANR	6515741	Identifier	a		6514542	0					
ANR	6515742	Argument	b		6514542	2					
ANR	6515743	Identifier	b		6514542	0					
ANR	6515744	Argument	t		6514542	3					
ANR	6515745	Identifier	t		6514542	0					
ANR	6515746	Argument	r		6514542	4					
ANR	6515747	Identifier	r		6514542	0					
ANR	6515748	BreakStatement	break ;	273:6:5024:5029	6514542	43	True				
ANR	6515749	Label	case OP_QUAKE :	275:4:5036:5049	6514542	44	True				
ANR	6515750	Identifier	OP_QUAKE		6514542	0					
ANR	6515751	CompoundStatement		277:8:5014:5044	6514542	45					
ANR	6515752	IdentifierDeclStatement	uint32_t a = s -> gp_regs [ reg_a ] ;	279:8:5067:5097	6514542	0	True				
ANR	6515753	IdentifierDecl	a = s -> gp_regs [ reg_a ]		6514542	0					
ANR	6515754	IdentifierDeclType	uint32_t		6514542	0					
ANR	6515755	Identifier	a		6514542	1					
ANR	6515756	AssignmentExpression	a = s -> gp_regs [ reg_a ]		6514542	2		=			
ANR	6515757	Identifier	a		6514542	0					
ANR	6515758	ArrayIndexing	s -> gp_regs [ reg_a ]		6514542	1					
ANR	6515759	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515760	Identifier	s		6514542	0					
ANR	6515761	Identifier	gp_regs		6514542	1					
ANR	6515762	Identifier	reg_a		6514542	1					
ANR	6515763	ExpressionStatement	r = 0x5f3759df - ( a >> 1 )	281:8:5108:5133	6514542	1	True				
ANR	6515764	AssignmentExpression	r = 0x5f3759df - ( a >> 1 )		6514542	0		=			
ANR	6515765	Identifier	r		6514542	0					
ANR	6515766	AdditiveExpression	0x5f3759df - ( a >> 1 )		6514542	1		-			
ANR	6515767	PrimaryExpression	0x5f3759df		6514542	0					
ANR	6515768	ShiftExpression	a >> 1		6514542	1		>>			
ANR	6515769	Identifier	a		6514542	0					
ANR	6515770	PrimaryExpression	1		6514542	1					
ANR	6515771	ExpressionStatement	latency = LATENCY_QUAKE	283:8:5144:5167	6514542	2	True				
ANR	6515772	AssignmentExpression	latency = LATENCY_QUAKE		6514542	0		=			
ANR	6515773	Identifier	latency		6514542	0					
ANR	6515774	Identifier	LATENCY_QUAKE		6514542	1					
ANR	6515775	ExpressionStatement	"D_EXEC ( qemu_log ( ""QUAKE a=%d r=%08x\\n"" , a , r ) )"	285:8:5178:5223	6514542	3	True				
ANR	6515776	CallExpression	"D_EXEC ( qemu_log ( ""QUAKE a=%d r=%08x\\n"" , a , r ) )"		6514542	0					
ANR	6515777	Callee	D_EXEC		6514542	0					
ANR	6515778	Identifier	D_EXEC		6514542	0					
ANR	6515779	ArgumentList	"qemu_log ( ""QUAKE a=%d r=%08x\\n"" , a , r )"		6514542	1					
ANR	6515780	Argument	"qemu_log ( ""QUAKE a=%d r=%08x\\n"" , a , r )"		6514542	0					
ANR	6515781	CallExpression	"qemu_log ( ""QUAKE a=%d r=%08x\\n"" , a , r )"		6514542	0					
ANR	6515782	Callee	qemu_log		6514542	0					
ANR	6515783	Identifier	qemu_log		6514542	0					
ANR	6515784	ArgumentList	"""QUAKE a=%d r=%08x\\n"""		6514542	1					
ANR	6515785	Argument	"""QUAKE a=%d r=%08x\\n"""		6514542	0					
ANR	6515786	PrimaryExpression	"""QUAKE a=%d r=%08x\\n"""		6514542	0					
ANR	6515787	Argument	a		6514542	1					
ANR	6515788	Identifier	a		6514542	0					
ANR	6515789	Argument	r		6514542	2					
ANR	6515790	Identifier	r		6514542	0					
ANR	6515791	BreakStatement	break ;	287:6:5232:5237	6514542	46	True				
ANR	6515792	Label	default :	291:4:5246:5253	6514542	47	True				
ANR	6515793	Identifier	default		6514542	0					
ANR	6515794	ExpressionStatement	"error_report ( ""milkymist_pfpu: unknown opcode %d"" , op )"	293:8:5264:5317	6514542	48	True				
ANR	6515795	CallExpression	"error_report ( ""milkymist_pfpu: unknown opcode %d"" , op )"		6514542	0					
ANR	6515796	Callee	error_report		6514542	0					
ANR	6515797	Identifier	error_report		6514542	0					
ANR	6515798	ArgumentList	"""milkymist_pfpu: unknown opcode %d"""		6514542	1					
ANR	6515799	Argument	"""milkymist_pfpu: unknown opcode %d"""		6514542	0					
ANR	6515800	PrimaryExpression	"""milkymist_pfpu: unknown opcode %d"""		6514542	0					
ANR	6515801	Argument	op		6514542	1					
ANR	6515802	Identifier	op		6514542	0					
ANR	6515803	BreakStatement	break ;	295:8:5328:5333	6514542	49	True				
ANR	6515804	IfStatement	if ( ! reg_d )		6514542	9					
ANR	6515805	Condition	! reg_d	301:8:5353:5358	6514542	0	True				
ANR	6515806	UnaryOperationExpression	! reg_d		6514542	0					
ANR	6515807	UnaryOperator	!		6514542	0					
ANR	6515808	Identifier	reg_d		6514542	1					
ANR	6515809	CompoundStatement		299:16:5308:5308	6514542	1					
ANR	6515810	ExpressionStatement	"D_EXEC ( qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency ) )"	303:8:5372:5554	6514542	0	True				
ANR	6515811	CallExpression	"D_EXEC ( qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency ) )"		6514542	0					
ANR	6515812	Callee	D_EXEC		6514542	0					
ANR	6515813	Identifier	D_EXEC		6514542	0					
ANR	6515814	ArgumentList	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency )"		6514542	1					
ANR	6515815	Argument	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency )"		6514542	0					
ANR	6515816	CallExpression	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency )"		6514542	0					
ANR	6515817	Callee	qemu_log		6514542	0					
ANR	6515818	Identifier	qemu_log		6514542	0					
ANR	6515819	ArgumentList	"""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"""		6514542	1					
ANR	6515820	Argument	"""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"""		6514542	0					
ANR	6515821	PrimaryExpression	"""%04d %8s R%03d, R%03d <L=%d, E=%04d>\\n"""		6514542	0					
ANR	6515822	Argument	s -> regs [ R_PC ]		6514542	1					
ANR	6515823	ArrayIndexing	s -> regs [ R_PC ]		6514542	0					
ANR	6515824	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515825	Identifier	s		6514542	0					
ANR	6515826	Identifier	regs		6514542	1					
ANR	6515827	Identifier	R_PC		6514542	1					
ANR	6515828	Argument	opcode_to_str [ op ]		6514542	2					
ANR	6515829	ArrayIndexing	opcode_to_str [ op ]		6514542	0					
ANR	6515830	Identifier	opcode_to_str		6514542	0					
ANR	6515831	Identifier	op		6514542	1					
ANR	6515832	Argument	reg_a		6514542	3					
ANR	6515833	Identifier	reg_a		6514542	0					
ANR	6515834	Argument	reg_b		6514542	4					
ANR	6515835	Identifier	reg_b		6514542	0					
ANR	6515836	Argument	latency		6514542	5					
ANR	6515837	Identifier	latency		6514542	0					
ANR	6515838	Argument	s -> regs [ R_PC ] + latency		6514542	6					
ANR	6515839	AdditiveExpression	s -> regs [ R_PC ] + latency		6514542	0		+			
ANR	6515840	ArrayIndexing	s -> regs [ R_PC ]		6514542	0					
ANR	6515841	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515842	Identifier	s		6514542	0					
ANR	6515843	Identifier	regs		6514542	1					
ANR	6515844	Identifier	R_PC		6514542	1					
ANR	6515845	Identifier	latency		6514542	1					
ANR	6515846	ElseStatement	else		6514542	0					
ANR	6515847	CompoundStatement		307:11:5515:5515	6514542	0					
ANR	6515848	ExpressionStatement	"D_EXEC ( qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency , reg_d ) )"	311:8:5579:5777	6514542	0	True				
ANR	6515849	CallExpression	"D_EXEC ( qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency , reg_d ) )"		6514542	0					
ANR	6515850	Callee	D_EXEC		6514542	0					
ANR	6515851	Identifier	D_EXEC		6514542	0					
ANR	6515852	ArgumentList	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency , reg_d )"		6514542	1					
ANR	6515853	Argument	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency , reg_d )"		6514542	0					
ANR	6515854	CallExpression	"qemu_log ( ""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"" , s -> regs [ R_PC ] , opcode_to_str [ op ] , reg_a , reg_b , latency , s -> regs [ R_PC ] + latency , reg_d )"		6514542	0					
ANR	6515855	Callee	qemu_log		6514542	0					
ANR	6515856	Identifier	qemu_log		6514542	0					
ANR	6515857	ArgumentList	"""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"""		6514542	1					
ANR	6515858	Argument	"""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"""		6514542	0					
ANR	6515859	PrimaryExpression	"""%04d %8s R%03d, R%03d <L=%d, E=%04d> -> R%03d\\n"""		6514542	0					
ANR	6515860	Argument	s -> regs [ R_PC ]		6514542	1					
ANR	6515861	ArrayIndexing	s -> regs [ R_PC ]		6514542	0					
ANR	6515862	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515863	Identifier	s		6514542	0					
ANR	6515864	Identifier	regs		6514542	1					
ANR	6515865	Identifier	R_PC		6514542	1					
ANR	6515866	Argument	opcode_to_str [ op ]		6514542	2					
ANR	6515867	ArrayIndexing	opcode_to_str [ op ]		6514542	0					
ANR	6515868	Identifier	opcode_to_str		6514542	0					
ANR	6515869	Identifier	op		6514542	1					
ANR	6515870	Argument	reg_a		6514542	3					
ANR	6515871	Identifier	reg_a		6514542	0					
ANR	6515872	Argument	reg_b		6514542	4					
ANR	6515873	Identifier	reg_b		6514542	0					
ANR	6515874	Argument	latency		6514542	5					
ANR	6515875	Identifier	latency		6514542	0					
ANR	6515876	Argument	s -> regs [ R_PC ] + latency		6514542	6					
ANR	6515877	AdditiveExpression	s -> regs [ R_PC ] + latency		6514542	0		+			
ANR	6515878	ArrayIndexing	s -> regs [ R_PC ]		6514542	0					
ANR	6515879	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515880	Identifier	s		6514542	0					
ANR	6515881	Identifier	regs		6514542	1					
ANR	6515882	Identifier	R_PC		6514542	1					
ANR	6515883	Identifier	latency		6514542	1					
ANR	6515884	Argument	reg_d		6514542	7					
ANR	6515885	Identifier	reg_d		6514542	0					
ANR	6515886	IfStatement	if ( op == OP_VECTOUT )		6514542	10					
ANR	6515887	Condition	op == OP_VECTOUT	321:8:5797:5812	6514542	0	True				
ANR	6515888	EqualityExpression	op == OP_VECTOUT		6514542	0		==			
ANR	6515889	Identifier	op		6514542	0					
ANR	6515890	Identifier	OP_VECTOUT		6514542	1					
ANR	6515891	CompoundStatement		319:26:5762:5762	6514542	1					
ANR	6515892	ReturnStatement	return 0 ;	323:8:5826:5834	6514542	0	True				
ANR	6515893	PrimaryExpression	0		6514542	0					
ANR	6515894	IfStatement	if ( reg_d )		6514542	11					
ANR	6515895	Condition	reg_d	331:8:5893:5897	6514542	0	True				
ANR	6515896	Identifier	reg_d		6514542	0					
ANR	6515897	CompoundStatement		331:8:5858:5895	6514542	1					
ANR	6515898	IdentifierDeclStatement	uint32_t val = output_queue_remove ( s ) ;	333:8:5911:5948	6514542	0	True				
ANR	6515899	IdentifierDecl	val = output_queue_remove ( s )		6514542	0					
ANR	6515900	IdentifierDeclType	uint32_t		6514542	0					
ANR	6515901	Identifier	val		6514542	1					
ANR	6515902	AssignmentExpression	val = output_queue_remove ( s )		6514542	2		=			
ANR	6515903	Identifier	val		6514542	0					
ANR	6515904	CallExpression	output_queue_remove ( s )		6514542	1					
ANR	6515905	Callee	output_queue_remove		6514542	0					
ANR	6515906	Identifier	output_queue_remove		6514542	0					
ANR	6515907	ArgumentList	s		6514542	1					
ANR	6515908	Argument	s		6514542	0					
ANR	6515909	Identifier	s		6514542	0					
ANR	6515910	ExpressionStatement	"D_EXEC ( qemu_log ( ""R%03d <- 0x%08x\\n"" , reg_d , val ) )"	335:8:5959:6008	6514542	1	True				
ANR	6515911	CallExpression	"D_EXEC ( qemu_log ( ""R%03d <- 0x%08x\\n"" , reg_d , val ) )"		6514542	0					
ANR	6515912	Callee	D_EXEC		6514542	0					
ANR	6515913	Identifier	D_EXEC		6514542	0					
ANR	6515914	ArgumentList	"qemu_log ( ""R%03d <- 0x%08x\\n"" , reg_d , val )"		6514542	1					
ANR	6515915	Argument	"qemu_log ( ""R%03d <- 0x%08x\\n"" , reg_d , val )"		6514542	0					
ANR	6515916	CallExpression	"qemu_log ( ""R%03d <- 0x%08x\\n"" , reg_d , val )"		6514542	0					
ANR	6515917	Callee	qemu_log		6514542	0					
ANR	6515918	Identifier	qemu_log		6514542	0					
ANR	6515919	ArgumentList	"""R%03d <- 0x%08x\\n"""		6514542	1					
ANR	6515920	Argument	"""R%03d <- 0x%08x\\n"""		6514542	0					
ANR	6515921	PrimaryExpression	"""R%03d <- 0x%08x\\n"""		6514542	0					
ANR	6515922	Argument	reg_d		6514542	1					
ANR	6515923	Identifier	reg_d		6514542	0					
ANR	6515924	Argument	val		6514542	2					
ANR	6515925	Identifier	val		6514542	0					
ANR	6515926	ExpressionStatement	s -> gp_regs [ reg_d ] = val	337:8:6019:6042	6514542	2	True				
ANR	6515927	AssignmentExpression	s -> gp_regs [ reg_d ] = val		6514542	0		=			
ANR	6515928	ArrayIndexing	s -> gp_regs [ reg_d ]		6514542	0					
ANR	6515929	PtrMemberAccess	s -> gp_regs		6514542	0					
ANR	6515930	Identifier	s		6514542	0					
ANR	6515931	Identifier	gp_regs		6514542	1					
ANR	6515932	Identifier	reg_d		6514542	1					
ANR	6515933	Identifier	val		6514542	1					
ANR	6515934	ExpressionStatement	output_queue_advance ( s )	343:4:6058:6081	6514542	12	True				
ANR	6515935	CallExpression	output_queue_advance ( s )		6514542	0					
ANR	6515936	Callee	output_queue_advance		6514542	0					
ANR	6515937	Identifier	output_queue_advance		6514542	0					
ANR	6515938	ArgumentList	s		6514542	1					
ANR	6515939	Argument	s		6514542	0					
ANR	6515940	Identifier	s		6514542	0					
ANR	6515941	IfStatement	if ( op != OP_NOP )		6514542	13					
ANR	6515942	Condition	op != OP_NOP	349:8:6121:6132	6514542	0	True				
ANR	6515943	EqualityExpression	op != OP_NOP		6514542	0		!=			
ANR	6515944	Identifier	op		6514542	0					
ANR	6515945	Identifier	OP_NOP		6514542	1					
ANR	6515946	CompoundStatement		347:22:6082:6082	6514542	1					
ANR	6515947	ExpressionStatement	"output_queue_insert ( s , r , latency - 1 )"	351:8:6146:6182	6514542	0	True				
ANR	6515948	CallExpression	"output_queue_insert ( s , r , latency - 1 )"		6514542	0					
ANR	6515949	Callee	output_queue_insert		6514542	0					
ANR	6515950	Identifier	output_queue_insert		6514542	0					
ANR	6515951	ArgumentList	s		6514542	1					
ANR	6515952	Argument	s		6514542	0					
ANR	6515953	Identifier	s		6514542	0					
ANR	6515954	Argument	r		6514542	1					
ANR	6515955	Identifier	r		6514542	0					
ANR	6515956	Argument	latency - 1		6514542	2					
ANR	6515957	AdditiveExpression	latency - 1		6514542	0		-			
ANR	6515958	Identifier	latency		6514542	0					
ANR	6515959	PrimaryExpression	1		6514542	1					
ANR	6515960	ExpressionStatement	s -> regs [ R_PC ] ++	359:4:6220:6235	6514542	14	True				
ANR	6515961	PostIncDecOperationExpression	s -> regs [ R_PC ] ++		6514542	0					
ANR	6515962	ArrayIndexing	s -> regs [ R_PC ]		6514542	0					
ANR	6515963	PtrMemberAccess	s -> regs		6514542	0					
ANR	6515964	Identifier	s		6514542	0					
ANR	6515965	Identifier	regs		6514542	1					
ANR	6515966	Identifier	R_PC		6514542	1					
ANR	6515967	IncDec	++		6514542	1					
ANR	6515968	ReturnStatement	return 1 ;	363:4:6244:6252	6514542	15	True				
ANR	6515969	PrimaryExpression	1		6514542	0					
ANR	6515970	ReturnType	static int		6514542	1					
ANR	6515971	Identifier	pfpu_decode_insn		6514542	2					
ANR	6515972	ParameterList	MilkymistPFPUState * s		6514542	3					
ANR	6515973	Parameter	MilkymistPFPUState * s	1:28:28:48	6514542	0	True				
ANR	6515974	ParameterType	MilkymistPFPUState *		6514542	0					
ANR	6515975	Identifier	s		6514542	1					
ANR	6515976	CFGEntryNode	ENTRY		6514542		True				
ANR	6515977	CFGExitNode	EXIT		6514542		True				
ANR	6515978	Symbol	LATENCY_F2I		6514542						
ANR	6515979	Symbol	cpu_to_be32		6514542						
ANR	6515980	Symbol	reg_b		6514542						
ANR	6515981	Symbol	reg_a		6514542						
ANR	6515982	Symbol	GPR_FLAGS		6514542						
ANR	6515983	Symbol	* op		6514542						
ANR	6515984	Symbol	get_dma_address		6514542						
ANR	6515985	Symbol	reg_d		6514542						
ANR	6515986	Symbol	float		6514542						
ANR	6515987	Symbol	LATENCY_IF		6514542						
ANR	6515988	Symbol	output_queue_remove		6514542						
ANR	6515989	Symbol	M_PI		6514542						
ANR	6515990	Symbol	cosf		6514542						
ANR	6515991	Symbol	qemu_log		6514542						
ANR	6515992	Symbol	int32_t		6514542						
ANR	6515993	Symbol	* s -> regs		6514542						
ANR	6515994	Symbol	val		6514542						
ANR	6515995	Symbol	* R_PC		6514542						
ANR	6515996	Symbol	LATENCY_ABOVE		6514542						
ANR	6515997	Symbol	R_PC		6514542						
ANR	6515998	Symbol	s -> microcode		6514542						
ANR	6515999	Symbol	LATENCY_FSUB		6514542						
ANR	6516000	Symbol	GPR_X		6514542						
ANR	6516001	Symbol	GPR_Y		6514542						
ANR	6516002	Symbol	LATENCY_FMUL		6514542						
ANR	6516003	Symbol	* R_LASTDMA		6514542						
ANR	6516004	Symbol	OP_NOP		6514542						
ANR	6516005	Symbol	* pc		6514542						
ANR	6516006	Symbol	sinf		6514542						
ANR	6516007	Symbol	LATENCY_COS		6514542						
ANR	6516008	Symbol	* s -> microcode		6514542						
ANR	6516009	Symbol	LATENCY_I2F		6514542						
ANR	6516010	Symbol	* GPR_X		6514542						
ANR	6516011	Symbol	* GPR_Y		6514542						
ANR	6516012	Symbol	LATENCY_COPY		6514542						
ANR	6516013	Symbol	latency		6514542						
ANR	6516014	Symbol	LATENCY_EQUAL		6514542						
ANR	6516015	Symbol	LATENCY_FADD		6514542						
ANR	6516016	Symbol	* opcode_to_str		6514542						
ANR	6516017	Symbol	fabsf		6514542						
ANR	6516018	Symbol	dma_ptr		6514542						
ANR	6516019	Symbol	* reg_d		6514542						
ANR	6516020	Symbol	* reg_a		6514542						
ANR	6516021	Symbol	* reg_b		6514542						
ANR	6516022	Symbol	* * s		6514542						
ANR	6516023	Symbol	* GPR_FLAGS		6514542						
ANR	6516024	Symbol	R_MESHBASE		6514542						
ANR	6516025	Symbol	s -> regs		6514542						
ANR	6516026	Symbol	op		6514542						
ANR	6516027	Symbol	a		6514542						
ANR	6516028	Symbol	b		6514542						
ANR	6516029	Symbol	s -> gp_regs		6514542						
ANR	6516030	Symbol	* R_MESHBASE		6514542						
ANR	6516031	Symbol	f		6514542						
ANR	6516032	Symbol	& a		6514542						
ANR	6516033	Symbol	& b		6514542						
ANR	6516034	Symbol	uint32_t		6514542						
ANR	6516035	Symbol	LATENCY_SIN		6514542						
ANR	6516036	Symbol	R_LASTDMA		6514542						
ANR	6516037	Symbol	* s -> gp_regs		6514542						
ANR	6516038	Symbol	opcode_to_str		6514542						
ANR	6516039	Symbol	insn		6514542						
ANR	6516040	Symbol	r		6514542						
ANR	6516041	Symbol	s		6514542						
ANR	6516042	Symbol	pc		6514542						
ANR	6516043	Symbol	t		6514542						
ANR	6516044	Symbol	LATENCY_QUAKE		6514542						
ANR	6516045	Symbol	REINTERPRET_CAST		6514542						
ANR	6516046	Symbol	OP_VECTOUT		6514542						
ANR	6516047	Symbol	LATENCY_FABS		6514542						
ANR	6516048	Symbol	* s		6514542						
ANR	6516049	Symbol	LATENCY_TSIGN		6514542						
