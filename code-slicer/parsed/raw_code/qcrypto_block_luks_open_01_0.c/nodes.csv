command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6910769	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qcrypto_block_luks_open_01_0.c								
ANR	6910770	Function	qcrypto_block_luks_open	1:0:0:8090							
ANR	6910771	FunctionDef	"qcrypto_block_luks_open (QCryptoBlock * block , QCryptoBlockOpenOptions * options , const char * optprefix , QCryptoBlockReadFunc readfunc , void * opaque , unsigned int flags , Error * * errp)"		6910770	0					
ANR	6910772	CompoundStatement		15:0:332:8090	6910770	0					
ANR	6910773	IdentifierDeclStatement	QCryptoBlockLUKS * luks ;	17:4:339:361	6910770	0	True				
ANR	6910774	IdentifierDecl	* luks		6910770	0					
ANR	6910775	IdentifierDeclType	QCryptoBlockLUKS *		6910770	0					
ANR	6910776	Identifier	luks		6910770	1					
ANR	6910777	IdentifierDeclStatement	Error * local_err = NULL ;	19:4:368:391	6910770	1	True				
ANR	6910778	IdentifierDecl	* local_err = NULL		6910770	0					
ANR	6910779	IdentifierDeclType	Error *		6910770	0					
ANR	6910780	Identifier	local_err		6910770	1					
ANR	6910781	AssignmentExpression	* local_err = NULL		6910770	2		=			
ANR	6910782	Identifier	NULL		6910770	0					
ANR	6910783	Identifier	NULL		6910770	1					
ANR	6910784	IdentifierDeclStatement	int ret = 0 ;	21:4:398:409	6910770	2	True				
ANR	6910785	IdentifierDecl	ret = 0		6910770	0					
ANR	6910786	IdentifierDeclType	int		6910770	0					
ANR	6910787	Identifier	ret		6910770	1					
ANR	6910788	AssignmentExpression	ret = 0		6910770	2		=			
ANR	6910789	Identifier	ret		6910770	0					
ANR	6910790	PrimaryExpression	0		6910770	1					
ANR	6910791	IdentifierDeclStatement	size_t i ;	23:4:416:424	6910770	3	True				
ANR	6910792	IdentifierDecl	i		6910770	0					
ANR	6910793	IdentifierDeclType	size_t		6910770	0					
ANR	6910794	Identifier	i		6910770	1					
ANR	6910795	IdentifierDeclStatement	ssize_t rv ;	25:4:431:441	6910770	4	True				
ANR	6910796	IdentifierDecl	rv		6910770	0					
ANR	6910797	IdentifierDeclType	ssize_t		6910770	0					
ANR	6910798	Identifier	rv		6910770	1					
ANR	6910799	IdentifierDeclStatement	uint8_t * masterkey = NULL ;	27:4:448:473	6910770	5	True				
ANR	6910800	IdentifierDecl	* masterkey = NULL		6910770	0					
ANR	6910801	IdentifierDeclType	uint8_t *		6910770	0					
ANR	6910802	Identifier	masterkey		6910770	1					
ANR	6910803	AssignmentExpression	* masterkey = NULL		6910770	2		=			
ANR	6910804	Identifier	NULL		6910770	0					
ANR	6910805	Identifier	NULL		6910770	1					
ANR	6910806	IdentifierDeclStatement	size_t masterkeylen ;	29:4:480:499	6910770	6	True				
ANR	6910807	IdentifierDecl	masterkeylen		6910770	0					
ANR	6910808	IdentifierDeclType	size_t		6910770	0					
ANR	6910809	Identifier	masterkeylen		6910770	1					
ANR	6910810	IdentifierDeclStatement	"char * ivgen_name , * ivhash_name ;"	31:4:506:536	6910770	7	True				
ANR	6910811	IdentifierDecl	* ivgen_name		6910770	0					
ANR	6910812	IdentifierDeclType	char *		6910770	0					
ANR	6910813	Identifier	ivgen_name		6910770	1					
ANR	6910814	IdentifierDecl	* ivhash_name		6910770	1					
ANR	6910815	IdentifierDeclType	char *		6910770	0					
ANR	6910816	Identifier	ivhash_name		6910770	1					
ANR	6910817	IdentifierDeclStatement	QCryptoCipherMode ciphermode ;	33:4:543:571	6910770	8	True				
ANR	6910818	IdentifierDecl	ciphermode		6910770	0					
ANR	6910819	IdentifierDeclType	QCryptoCipherMode		6910770	0					
ANR	6910820	Identifier	ciphermode		6910770	1					
ANR	6910821	IdentifierDeclStatement	QCryptoCipherAlgorithm cipheralg ;	35:4:578:610	6910770	9	True				
ANR	6910822	IdentifierDecl	cipheralg		6910770	0					
ANR	6910823	IdentifierDeclType	QCryptoCipherAlgorithm		6910770	0					
ANR	6910824	Identifier	cipheralg		6910770	1					
ANR	6910825	IdentifierDeclStatement	QCryptoIVGenAlgorithm ivalg ;	37:4:617:644	6910770	10	True				
ANR	6910826	IdentifierDecl	ivalg		6910770	0					
ANR	6910827	IdentifierDeclType	QCryptoIVGenAlgorithm		6910770	0					
ANR	6910828	Identifier	ivalg		6910770	1					
ANR	6910829	IdentifierDeclStatement	QCryptoCipherAlgorithm ivcipheralg ;	39:4:651:685	6910770	11	True				
ANR	6910830	IdentifierDecl	ivcipheralg		6910770	0					
ANR	6910831	IdentifierDeclType	QCryptoCipherAlgorithm		6910770	0					
ANR	6910832	Identifier	ivcipheralg		6910770	1					
ANR	6910833	IdentifierDeclStatement	QCryptoHashAlgorithm hash ;	41:4:692:717	6910770	12	True				
ANR	6910834	IdentifierDecl	hash		6910770	0					
ANR	6910835	IdentifierDeclType	QCryptoHashAlgorithm		6910770	0					
ANR	6910836	Identifier	hash		6910770	1					
ANR	6910837	IdentifierDeclStatement	QCryptoHashAlgorithm ivhash ;	43:4:724:751	6910770	13	True				
ANR	6910838	IdentifierDecl	ivhash		6910770	0					
ANR	6910839	IdentifierDeclType	QCryptoHashAlgorithm		6910770	0					
ANR	6910840	Identifier	ivhash		6910770	1					
ANR	6910841	IdentifierDeclStatement	char * password = NULL ;	45:4:758:779	6910770	14	True				
ANR	6910842	IdentifierDecl	* password = NULL		6910770	0					
ANR	6910843	IdentifierDeclType	char *		6910770	0					
ANR	6910844	Identifier	password		6910770	1					
ANR	6910845	AssignmentExpression	* password = NULL		6910770	2		=			
ANR	6910846	Identifier	NULL		6910770	0					
ANR	6910847	Identifier	NULL		6910770	1					
ANR	6910848	IfStatement	if ( ! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO ) )		6910770	15					
ANR	6910849	Condition	! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO )	49:8:792:826	6910770	0	True				
ANR	6910850	UnaryOperationExpression	! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO )		6910770	0					
ANR	6910851	UnaryOperator	!		6910770	0					
ANR	6910852	BitAndExpression	flags & QCRYPTO_BLOCK_OPEN_NO_IO		6910770	1		&			
ANR	6910853	Identifier	flags		6910770	0					
ANR	6910854	Identifier	QCRYPTO_BLOCK_OPEN_NO_IO		6910770	1					
ANR	6910855	CompoundStatement		35:45:496:496	6910770	1					
ANR	6910856	IfStatement	if ( ! options -> u . luks . key_secret )		6910770	0					
ANR	6910857	Condition	! options -> u . luks . key_secret	51:12:844:870	6910770	0	True				
ANR	6910858	UnaryOperationExpression	! options -> u . luks . key_secret		6910770	0					
ANR	6910859	UnaryOperator	!		6910770	0					
ANR	6910860	MemberAccess	options -> u . luks . key_secret		6910770	1					
ANR	6910861	MemberAccess	options -> u . luks		6910770	0					
ANR	6910862	PtrMemberAccess	options -> u		6910770	0					
ANR	6910863	Identifier	options		6910770	0					
ANR	6910864	Identifier	u		6910770	1					
ANR	6910865	Identifier	luks		6910770	1					
ANR	6910866	Identifier	key_secret		6910770	1					
ANR	6910867	CompoundStatement		37:41:540:540	6910770	1					
ANR	6910868	ExpressionStatement	"error_setg ( errp , ""Parameter '%skey-secret' is required for cipher"" , optprefix ? optprefix : """" )"	53:12:888:1007	6910770	0	True				
ANR	6910869	CallExpression	"error_setg ( errp , ""Parameter '%skey-secret' is required for cipher"" , optprefix ? optprefix : """" )"		6910770	0					
ANR	6910870	Callee	error_setg		6910770	0					
ANR	6910871	Identifier	error_setg		6910770	0					
ANR	6910872	ArgumentList	errp		6910770	1					
ANR	6910873	Argument	errp		6910770	0					
ANR	6910874	Identifier	errp		6910770	0					
ANR	6910875	Argument	"""Parameter '%skey-secret' is required for cipher"""		6910770	1					
ANR	6910876	PrimaryExpression	"""Parameter '%skey-secret' is required for cipher"""		6910770	0					
ANR	6910877	Argument	"optprefix ? optprefix : """""		6910770	2					
ANR	6910878	ConditionalExpression	"optprefix ? optprefix : """""		6910770	0					
ANR	6910879	Condition	optprefix		6910770	0					
ANR	6910880	Identifier	optprefix		6910770	0					
ANR	6910881	Identifier	optprefix		6910770	1					
ANR	6910882	PrimaryExpression	""""""		6910770	2					
ANR	6910883	ReturnStatement	return - 1 ;	57:12:1022:1031	6910770	1	True				
ANR	6910884	UnaryOperationExpression	- 1		6910770	0					
ANR	6910885	UnaryOperator	-		6910770	0					
ANR	6910886	PrimaryExpression	1		6910770	1					
ANR	6910887	ExpressionStatement	"password = qcrypto_secret_lookup_as_utf8 ( options -> u . luks . key_secret , errp )"	61:8:1053:1141	6910770	1	True				
ANR	6910888	AssignmentExpression	"password = qcrypto_secret_lookup_as_utf8 ( options -> u . luks . key_secret , errp )"		6910770	0		=			
ANR	6910889	Identifier	password		6910770	0					
ANR	6910890	CallExpression	"qcrypto_secret_lookup_as_utf8 ( options -> u . luks . key_secret , errp )"		6910770	1					
ANR	6910891	Callee	qcrypto_secret_lookup_as_utf8		6910770	0					
ANR	6910892	Identifier	qcrypto_secret_lookup_as_utf8		6910770	0					
ANR	6910893	ArgumentList	options -> u . luks . key_secret		6910770	1					
ANR	6910894	Argument	options -> u . luks . key_secret		6910770	0					
ANR	6910895	MemberAccess	options -> u . luks . key_secret		6910770	0					
ANR	6910896	MemberAccess	options -> u . luks		6910770	0					
ANR	6910897	PtrMemberAccess	options -> u		6910770	0					
ANR	6910898	Identifier	options		6910770	0					
ANR	6910899	Identifier	u		6910770	1					
ANR	6910900	Identifier	luks		6910770	1					
ANR	6910901	Identifier	key_secret		6910770	1					
ANR	6910902	Argument	errp		6910770	1					
ANR	6910903	Identifier	errp		6910770	0					
ANR	6910904	IfStatement	if ( ! password )		6910770	2					
ANR	6910905	Condition	! password	65:12:1156:1164	6910770	0	True				
ANR	6910906	UnaryOperationExpression	! password		6910770	0					
ANR	6910907	UnaryOperator	!		6910770	0					
ANR	6910908	Identifier	password		6910770	1					
ANR	6910909	CompoundStatement		51:23:834:834	6910770	1					
ANR	6910910	ReturnStatement	return - 1 ;	67:12:1182:1191	6910770	0	True				
ANR	6910911	UnaryOperationExpression	- 1		6910770	0					
ANR	6910912	UnaryOperator	-		6910770	0					
ANR	6910913	PrimaryExpression	1		6910770	1					
ANR	6910914	ExpressionStatement	"luks = g_new0 ( QCryptoBlockLUKS , 1 )"	75:4:1218:1252	6910770	16	True				
ANR	6910915	AssignmentExpression	"luks = g_new0 ( QCryptoBlockLUKS , 1 )"		6910770	0		=			
ANR	6910916	Identifier	luks		6910770	0					
ANR	6910917	CallExpression	"g_new0 ( QCryptoBlockLUKS , 1 )"		6910770	1					
ANR	6910918	Callee	g_new0		6910770	0					
ANR	6910919	Identifier	g_new0		6910770	0					
ANR	6910920	ArgumentList	QCryptoBlockLUKS		6910770	1					
ANR	6910921	Argument	QCryptoBlockLUKS		6910770	0					
ANR	6910922	Identifier	QCryptoBlockLUKS		6910770	0					
ANR	6910923	Argument	1		6910770	1					
ANR	6910924	PrimaryExpression	1		6910770	0					
ANR	6910925	ExpressionStatement	block -> opaque = luks	77:4:1259:1279	6910770	17	True				
ANR	6910926	AssignmentExpression	block -> opaque = luks		6910770	0		=			
ANR	6910927	PtrMemberAccess	block -> opaque		6910770	0					
ANR	6910928	Identifier	block		6910770	0					
ANR	6910929	Identifier	opaque		6910770	1					
ANR	6910930	Identifier	luks		6910770	1					
ANR	6910931	ExpressionStatement	"rv = readfunc ( block , 0 , ( uint8_t * ) & luks -> header , sizeof ( luks -> header ) , opaque , errp )"	85:4:1386:1547	6910770	18	True				
ANR	6910932	AssignmentExpression	"rv = readfunc ( block , 0 , ( uint8_t * ) & luks -> header , sizeof ( luks -> header ) , opaque , errp )"		6910770	0		=			
ANR	6910933	Identifier	rv		6910770	0					
ANR	6910934	CallExpression	"readfunc ( block , 0 , ( uint8_t * ) & luks -> header , sizeof ( luks -> header ) , opaque , errp )"		6910770	1					
ANR	6910935	Callee	readfunc		6910770	0					
ANR	6910936	Identifier	readfunc		6910770	0					
ANR	6910937	ArgumentList	block		6910770	1					
ANR	6910938	Argument	block		6910770	0					
ANR	6910939	Identifier	block		6910770	0					
ANR	6910940	Argument	0		6910770	1					
ANR	6910941	PrimaryExpression	0		6910770	0					
ANR	6910942	Argument	( uint8_t * ) & luks -> header		6910770	2					
ANR	6910943	CastExpression	( uint8_t * ) & luks -> header		6910770	0					
ANR	6910944	CastTarget	uint8_t *		6910770	0					
ANR	6910945	UnaryOperationExpression	& luks -> header		6910770	1					
ANR	6910946	UnaryOperator	&		6910770	0					
ANR	6910947	PtrMemberAccess	luks -> header		6910770	1					
ANR	6910948	Identifier	luks		6910770	0					
ANR	6910949	Identifier	header		6910770	1					
ANR	6910950	Argument	sizeof ( luks -> header )		6910770	3					
ANR	6910951	SizeofExpression	sizeof ( luks -> header )		6910770	0					
ANR	6910952	Sizeof	sizeof		6910770	0					
ANR	6910953	PtrMemberAccess	luks -> header		6910770	1					
ANR	6910954	Identifier	luks		6910770	0					
ANR	6910955	Identifier	header		6910770	1					
ANR	6910956	Argument	opaque		6910770	4					
ANR	6910957	Identifier	opaque		6910770	0					
ANR	6910958	Argument	errp		6910770	5					
ANR	6910959	Identifier	errp		6910770	0					
ANR	6910960	IfStatement	if ( rv < 0 )		6910770	19					
ANR	6910961	Condition	rv < 0	95:8:1558:1563	6910770	0	True				
ANR	6910962	RelationalExpression	rv < 0		6910770	0		<			
ANR	6910963	Identifier	rv		6910770	0					
ANR	6910964	PrimaryExpression	0		6910770	1					
ANR	6910965	CompoundStatement		81:16:1233:1233	6910770	1					
ANR	6910966	ExpressionStatement	ret = rv	97:8:1577:1585	6910770	0	True				
ANR	6910967	AssignmentExpression	ret = rv		6910770	0		=			
ANR	6910968	Identifier	ret		6910770	0					
ANR	6910969	Identifier	rv		6910770	1					
ANR	6910970	GotoStatement	goto fail ;	99:8:1596:1605	6910770	1	True				
ANR	6910971	Identifier	fail		6910770	0					
ANR	6910972	ExpressionStatement	be16_to_cpus ( & luks -> header . version )	109:4:1722:1757	6910770	20	True				
ANR	6910973	CallExpression	be16_to_cpus ( & luks -> header . version )		6910770	0					
ANR	6910974	Callee	be16_to_cpus		6910770	0					
ANR	6910975	Identifier	be16_to_cpus		6910770	0					
ANR	6910976	ArgumentList	& luks -> header . version		6910770	1					
ANR	6910977	Argument	& luks -> header . version		6910770	0					
ANR	6910978	UnaryOperationExpression	& luks -> header . version		6910770	0					
ANR	6910979	UnaryOperator	&		6910770	0					
ANR	6910980	MemberAccess	luks -> header . version		6910770	1					
ANR	6910981	PtrMemberAccess	luks -> header		6910770	0					
ANR	6910982	Identifier	luks		6910770	0					
ANR	6910983	Identifier	header		6910770	1					
ANR	6910984	Identifier	version		6910770	1					
ANR	6910985	ExpressionStatement	be32_to_cpus ( & luks -> header . payload_offset )	111:4:1764:1806	6910770	21	True				
ANR	6910986	CallExpression	be32_to_cpus ( & luks -> header . payload_offset )		6910770	0					
ANR	6910987	Callee	be32_to_cpus		6910770	0					
ANR	6910988	Identifier	be32_to_cpus		6910770	0					
ANR	6910989	ArgumentList	& luks -> header . payload_offset		6910770	1					
ANR	6910990	Argument	& luks -> header . payload_offset		6910770	0					
ANR	6910991	UnaryOperationExpression	& luks -> header . payload_offset		6910770	0					
ANR	6910992	UnaryOperator	&		6910770	0					
ANR	6910993	MemberAccess	luks -> header . payload_offset		6910770	1					
ANR	6910994	PtrMemberAccess	luks -> header		6910770	0					
ANR	6910995	Identifier	luks		6910770	0					
ANR	6910996	Identifier	header		6910770	1					
ANR	6910997	Identifier	payload_offset		6910770	1					
ANR	6910998	ExpressionStatement	be32_to_cpus ( & luks -> header . key_bytes )	113:4:1813:1850	6910770	22	True				
ANR	6910999	CallExpression	be32_to_cpus ( & luks -> header . key_bytes )		6910770	0					
ANR	6911000	Callee	be32_to_cpus		6910770	0					
ANR	6911001	Identifier	be32_to_cpus		6910770	0					
ANR	6911002	ArgumentList	& luks -> header . key_bytes		6910770	1					
ANR	6911003	Argument	& luks -> header . key_bytes		6910770	0					
ANR	6911004	UnaryOperationExpression	& luks -> header . key_bytes		6910770	0					
ANR	6911005	UnaryOperator	&		6910770	0					
ANR	6911006	MemberAccess	luks -> header . key_bytes		6910770	1					
ANR	6911007	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911008	Identifier	luks		6910770	0					
ANR	6911009	Identifier	header		6910770	1					
ANR	6911010	Identifier	key_bytes		6910770	1					
ANR	6911011	ExpressionStatement	be32_to_cpus ( & luks -> header . master_key_iterations )	115:4:1857:1906	6910770	23	True				
ANR	6911012	CallExpression	be32_to_cpus ( & luks -> header . master_key_iterations )		6910770	0					
ANR	6911013	Callee	be32_to_cpus		6910770	0					
ANR	6911014	Identifier	be32_to_cpus		6910770	0					
ANR	6911015	ArgumentList	& luks -> header . master_key_iterations		6910770	1					
ANR	6911016	Argument	& luks -> header . master_key_iterations		6910770	0					
ANR	6911017	UnaryOperationExpression	& luks -> header . master_key_iterations		6910770	0					
ANR	6911018	UnaryOperator	&		6910770	0					
ANR	6911019	MemberAccess	luks -> header . master_key_iterations		6910770	1					
ANR	6911020	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911021	Identifier	luks		6910770	0					
ANR	6911022	Identifier	header		6910770	1					
ANR	6911023	Identifier	master_key_iterations		6910770	1					
ANR	6911024	ForStatement	for ( i = 0 ; i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS ; i ++ )		6910770	24					
ANR	6911025	ForInit	i = 0 ;	119:9:1920:1925	6910770	0	True				
ANR	6911026	AssignmentExpression	i = 0		6910770	0		=			
ANR	6911027	Identifier	i		6910770	0					
ANR	6911028	PrimaryExpression	0		6910770	1					
ANR	6911029	Condition	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS	119:16:1927:1962	6910770	1	True				
ANR	6911030	RelationalExpression	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6910770	0		<			
ANR	6911031	Identifier	i		6910770	0					
ANR	6911032	Identifier	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6910770	1					
ANR	6911033	PostIncDecOperationExpression	i ++	119:54:1965:1967	6910770	2	True				
ANR	6911034	Identifier	i		6910770	0					
ANR	6911035	IncDec	++		6910770	1					
ANR	6911036	CompoundStatement		105:59:1637:1637	6910770	3					
ANR	6911037	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . active )	121:8:1981:2028	6910770	0	True				
ANR	6911038	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . active )		6910770	0					
ANR	6911039	Callee	be32_to_cpus		6910770	0					
ANR	6911040	Identifier	be32_to_cpus		6910770	0					
ANR	6911041	ArgumentList	& luks -> header . key_slots [ i ] . active		6910770	1					
ANR	6911042	Argument	& luks -> header . key_slots [ i ] . active		6910770	0					
ANR	6911043	UnaryOperationExpression	& luks -> header . key_slots [ i ] . active		6910770	0					
ANR	6911044	UnaryOperator	&		6910770	0					
ANR	6911045	MemberAccess	luks -> header . key_slots [ i ] . active		6910770	1					
ANR	6911046	ArrayIndexing	luks -> header . key_slots [ i ]		6910770	0					
ANR	6911047	MemberAccess	luks -> header . key_slots		6910770	0					
ANR	6911048	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911049	Identifier	luks		6910770	0					
ANR	6911050	Identifier	header		6910770	1					
ANR	6911051	Identifier	key_slots		6910770	1					
ANR	6911052	Identifier	i		6910770	1					
ANR	6911053	Identifier	active		6910770	1					
ANR	6911054	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . iterations )	123:8:2039:2090	6910770	1	True				
ANR	6911055	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . iterations )		6910770	0					
ANR	6911056	Callee	be32_to_cpus		6910770	0					
ANR	6911057	Identifier	be32_to_cpus		6910770	0					
ANR	6911058	ArgumentList	& luks -> header . key_slots [ i ] . iterations		6910770	1					
ANR	6911059	Argument	& luks -> header . key_slots [ i ] . iterations		6910770	0					
ANR	6911060	UnaryOperationExpression	& luks -> header . key_slots [ i ] . iterations		6910770	0					
ANR	6911061	UnaryOperator	&		6910770	0					
ANR	6911062	MemberAccess	luks -> header . key_slots [ i ] . iterations		6910770	1					
ANR	6911063	ArrayIndexing	luks -> header . key_slots [ i ]		6910770	0					
ANR	6911064	MemberAccess	luks -> header . key_slots		6910770	0					
ANR	6911065	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911066	Identifier	luks		6910770	0					
ANR	6911067	Identifier	header		6910770	1					
ANR	6911068	Identifier	key_slots		6910770	1					
ANR	6911069	Identifier	i		6910770	1					
ANR	6911070	Identifier	iterations		6910770	1					
ANR	6911071	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . key_offset )	125:8:2101:2152	6910770	2	True				
ANR	6911072	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . key_offset )		6910770	0					
ANR	6911073	Callee	be32_to_cpus		6910770	0					
ANR	6911074	Identifier	be32_to_cpus		6910770	0					
ANR	6911075	ArgumentList	& luks -> header . key_slots [ i ] . key_offset		6910770	1					
ANR	6911076	Argument	& luks -> header . key_slots [ i ] . key_offset		6910770	0					
ANR	6911077	UnaryOperationExpression	& luks -> header . key_slots [ i ] . key_offset		6910770	0					
ANR	6911078	UnaryOperator	&		6910770	0					
ANR	6911079	MemberAccess	luks -> header . key_slots [ i ] . key_offset		6910770	1					
ANR	6911080	ArrayIndexing	luks -> header . key_slots [ i ]		6910770	0					
ANR	6911081	MemberAccess	luks -> header . key_slots		6910770	0					
ANR	6911082	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911083	Identifier	luks		6910770	0					
ANR	6911084	Identifier	header		6910770	1					
ANR	6911085	Identifier	key_slots		6910770	1					
ANR	6911086	Identifier	i		6910770	1					
ANR	6911087	Identifier	key_offset		6910770	1					
ANR	6911088	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . stripes )	127:8:2163:2211	6910770	3	True				
ANR	6911089	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . stripes )		6910770	0					
ANR	6911090	Callee	be32_to_cpus		6910770	0					
ANR	6911091	Identifier	be32_to_cpus		6910770	0					
ANR	6911092	ArgumentList	& luks -> header . key_slots [ i ] . stripes		6910770	1					
ANR	6911093	Argument	& luks -> header . key_slots [ i ] . stripes		6910770	0					
ANR	6911094	UnaryOperationExpression	& luks -> header . key_slots [ i ] . stripes		6910770	0					
ANR	6911095	UnaryOperator	&		6910770	0					
ANR	6911096	MemberAccess	luks -> header . key_slots [ i ] . stripes		6910770	1					
ANR	6911097	ArrayIndexing	luks -> header . key_slots [ i ]		6910770	0					
ANR	6911098	MemberAccess	luks -> header . key_slots		6910770	0					
ANR	6911099	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911100	Identifier	luks		6910770	0					
ANR	6911101	Identifier	header		6910770	1					
ANR	6911102	Identifier	key_slots		6910770	1					
ANR	6911103	Identifier	i		6910770	1					
ANR	6911104	Identifier	stripes		6910770	1					
ANR	6911105	IfStatement	"if ( memcmp ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN ) != 0 )"		6910770	25					
ANR	6911106	Condition	"memcmp ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN ) != 0"	133:8:2231:2333	6910770	0	True				
ANR	6911107	EqualityExpression	"memcmp ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN ) != 0"		6910770	0		!=			
ANR	6911108	CallExpression	"memcmp ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN )"		6910770	0					
ANR	6911109	Callee	memcmp		6910770	0					
ANR	6911110	Identifier	memcmp		6910770	0					
ANR	6911111	ArgumentList	luks -> header . magic		6910770	1					
ANR	6911112	Argument	luks -> header . magic		6910770	0					
ANR	6911113	MemberAccess	luks -> header . magic		6910770	0					
ANR	6911114	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911115	Identifier	luks		6910770	0					
ANR	6911116	Identifier	header		6910770	1					
ANR	6911117	Identifier	magic		6910770	1					
ANR	6911118	Argument	qcrypto_block_luks_magic		6910770	1					
ANR	6911119	Identifier	qcrypto_block_luks_magic		6910770	0					
ANR	6911120	Argument	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6910770	2					
ANR	6911121	Identifier	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6910770	0					
ANR	6911122	PrimaryExpression	0		6910770	1					
ANR	6911123	CompoundStatement		121:51:2003:2003	6910770	1					
ANR	6911124	ExpressionStatement	"error_setg ( errp , ""Volume is not in LUKS format"" )"	137:8:2347:2395	6910770	0	True				
ANR	6911125	CallExpression	"error_setg ( errp , ""Volume is not in LUKS format"" )"		6910770	0					
ANR	6911126	Callee	error_setg		6910770	0					
ANR	6911127	Identifier	error_setg		6910770	0					
ANR	6911128	ArgumentList	errp		6910770	1					
ANR	6911129	Argument	errp		6910770	0					
ANR	6911130	Identifier	errp		6910770	0					
ANR	6911131	Argument	"""Volume is not in LUKS format"""		6910770	1					
ANR	6911132	PrimaryExpression	"""Volume is not in LUKS format"""		6910770	0					
ANR	6911133	ExpressionStatement	ret = - EINVAL	139:8:2406:2419	6910770	1	True				
ANR	6911134	AssignmentExpression	ret = - EINVAL		6910770	0		=			
ANR	6911135	Identifier	ret		6910770	0					
ANR	6911136	UnaryOperationExpression	- EINVAL		6910770	1					
ANR	6911137	UnaryOperator	-		6910770	0					
ANR	6911138	Identifier	EINVAL		6910770	1					
ANR	6911139	GotoStatement	goto fail ;	141:8:2430:2439	6910770	2	True				
ANR	6911140	Identifier	fail		6910770	0					
ANR	6911141	IfStatement	if ( luks -> header . version != QCRYPTO_BLOCK_LUKS_VERSION )		6910770	26					
ANR	6911142	Condition	luks -> header . version != QCRYPTO_BLOCK_LUKS_VERSION	145:8:2457:2506	6910770	0	True				
ANR	6911143	EqualityExpression	luks -> header . version != QCRYPTO_BLOCK_LUKS_VERSION		6910770	0		!=			
ANR	6911144	MemberAccess	luks -> header . version		6910770	0					
ANR	6911145	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911146	Identifier	luks		6910770	0					
ANR	6911147	Identifier	header		6910770	1					
ANR	6911148	Identifier	version		6910770	1					
ANR	6911149	Identifier	QCRYPTO_BLOCK_LUKS_VERSION		6910770	1					
ANR	6911150	CompoundStatement		131:60:2176:2176	6910770	1					
ANR	6911151	Statement	error_setg	147:8:2520:2529	6910770	0	True				
ANR	6911152	Statement	(	147:18:2530:2530	6910770	1	True				
ANR	6911153	Statement	errp	147:19:2531:2534	6910770	2	True				
ANR	6911154	Statement	","	147:23:2535:2535	6910770	3	True				
ANR	6911155	Statement	"""LUKS version %"""	147:25:2537:2552	6910770	4	True				
ANR	6911156	Statement	PRIu32	147:42:2554:2559	6910770	5	True				
ANR	6911157	Statement	""" is not supported"""	147:49:2561:2579	6910770	6	True				
ANR	6911158	Statement	","	147:68:2580:2580	6910770	7	True				
ANR	6911159	Statement	luks	149:19:2602:2605	6910770	8	True				
ANR	6911160	Statement	->	149:23:2606:2607	6910770	9	True				
ANR	6911161	Statement	header	149:25:2608:2613	6910770	10	True				
ANR	6911162	Statement	.	149:31:2614:2614	6910770	11	True				
ANR	6911163	Statement	version	149:32:2615:2621	6910770	12	True				
ANR	6911164	Statement	)	149:39:2622:2622	6910770	13	True				
ANR	6911165	ExpressionStatement		149:40:2623:2623	6910770	14	True				
ANR	6911166	ExpressionStatement	ret = - ENOTSUP	151:8:2634:2648	6910770	15	True				
ANR	6911167	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911168	Identifier	ret		6910770	0					
ANR	6911169	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911170	UnaryOperator	-		6910770	0					
ANR	6911171	Identifier	ENOTSUP		6910770	1					
ANR	6911172	GotoStatement	goto fail ;	153:8:2659:2668	6910770	16	True				
ANR	6911173	Identifier	fail		6910770	0					
ANR	6911174	ExpressionStatement	"ivgen_name = strchr ( luks -> header . cipher_mode , '-' )"	175:4:2913:2963	6910770	27	True				
ANR	6911175	AssignmentExpression	"ivgen_name = strchr ( luks -> header . cipher_mode , '-' )"		6910770	0		=			
ANR	6911176	Identifier	ivgen_name		6910770	0					
ANR	6911177	CallExpression	"strchr ( luks -> header . cipher_mode , '-' )"		6910770	1					
ANR	6911178	Callee	strchr		6910770	0					
ANR	6911179	Identifier	strchr		6910770	0					
ANR	6911180	ArgumentList	luks -> header . cipher_mode		6910770	1					
ANR	6911181	Argument	luks -> header . cipher_mode		6910770	0					
ANR	6911182	MemberAccess	luks -> header . cipher_mode		6910770	0					
ANR	6911183	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911184	Identifier	luks		6910770	0					
ANR	6911185	Identifier	header		6910770	1					
ANR	6911186	Identifier	cipher_mode		6910770	1					
ANR	6911187	Argument	'-'		6910770	1					
ANR	6911188	PrimaryExpression	'-'		6910770	0					
ANR	6911189	IfStatement	if ( ! ivgen_name )		6910770	28					
ANR	6911190	Condition	! ivgen_name	177:8:2974:2984	6910770	0	True				
ANR	6911191	UnaryOperationExpression	! ivgen_name		6910770	0					
ANR	6911192	UnaryOperator	!		6910770	0					
ANR	6911193	Identifier	ivgen_name		6910770	1					
ANR	6911194	CompoundStatement		163:21:2654:2654	6910770	1					
ANR	6911195	ExpressionStatement	ret = - EINVAL	179:8:2998:3011	6910770	0	True				
ANR	6911196	AssignmentExpression	ret = - EINVAL		6910770	0		=			
ANR	6911197	Identifier	ret		6910770	0					
ANR	6911198	UnaryOperationExpression	- EINVAL		6910770	1					
ANR	6911199	UnaryOperator	-		6910770	0					
ANR	6911200	Identifier	EINVAL		6910770	1					
ANR	6911201	ExpressionStatement	"error_setg ( errp , ""Unexpected cipher mode string format %s"" , luks -> header . cipher_mode )"	181:8:3022:3127	6910770	1	True				
ANR	6911202	CallExpression	"error_setg ( errp , ""Unexpected cipher mode string format %s"" , luks -> header . cipher_mode )"		6910770	0					
ANR	6911203	Callee	error_setg		6910770	0					
ANR	6911204	Identifier	error_setg		6910770	0					
ANR	6911205	ArgumentList	errp		6910770	1					
ANR	6911206	Argument	errp		6910770	0					
ANR	6911207	Identifier	errp		6910770	0					
ANR	6911208	Argument	"""Unexpected cipher mode string format %s"""		6910770	1					
ANR	6911209	PrimaryExpression	"""Unexpected cipher mode string format %s"""		6910770	0					
ANR	6911210	Argument	luks -> header . cipher_mode		6910770	2					
ANR	6911211	MemberAccess	luks -> header . cipher_mode		6910770	0					
ANR	6911212	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911213	Identifier	luks		6910770	0					
ANR	6911214	Identifier	header		6910770	1					
ANR	6911215	Identifier	cipher_mode		6910770	1					
ANR	6911216	GotoStatement	goto fail ;	185:8:3138:3147	6910770	2	True				
ANR	6911217	Identifier	fail		6910770	0					
ANR	6911218	ExpressionStatement	* ivgen_name = '\\0'	189:4:3161:3179	6910770	29	True				
ANR	6911219	AssignmentExpression	* ivgen_name = '\\0'		6910770	0		=			
ANR	6911220	UnaryOperationExpression	* ivgen_name		6910770	0					
ANR	6911221	UnaryOperator	*		6910770	0					
ANR	6911222	Identifier	ivgen_name		6910770	1					
ANR	6911223	PrimaryExpression	'\\0'		6910770	1					
ANR	6911224	ExpressionStatement	ivgen_name ++	191:4:3186:3198	6910770	30	True				
ANR	6911225	PostIncDecOperationExpression	ivgen_name ++		6910770	0					
ANR	6911226	Identifier	ivgen_name		6910770	0					
ANR	6911227	IncDec	++		6910770	1					
ANR	6911228	ExpressionStatement	"ivhash_name = strchr ( ivgen_name , ':' )"	195:4:3207:3244	6910770	31	True				
ANR	6911229	AssignmentExpression	"ivhash_name = strchr ( ivgen_name , ':' )"		6910770	0		=			
ANR	6911230	Identifier	ivhash_name		6910770	0					
ANR	6911231	CallExpression	"strchr ( ivgen_name , ':' )"		6910770	1					
ANR	6911232	Callee	strchr		6910770	0					
ANR	6911233	Identifier	strchr		6910770	0					
ANR	6911234	ArgumentList	ivgen_name		6910770	1					
ANR	6911235	Argument	ivgen_name		6910770	0					
ANR	6911236	Identifier	ivgen_name		6910770	0					
ANR	6911237	Argument	':'		6910770	1					
ANR	6911238	PrimaryExpression	':'		6910770	0					
ANR	6911239	IfStatement	if ( ! ivhash_name )		6910770	32					
ANR	6911240	Condition	! ivhash_name	197:8:3255:3266	6910770	0	True				
ANR	6911241	UnaryOperationExpression	! ivhash_name		6910770	0					
ANR	6911242	UnaryOperator	!		6910770	0					
ANR	6911243	Identifier	ivhash_name		6910770	1					
ANR	6911244	CompoundStatement		183:22:2936:2936	6910770	1					
ANR	6911245	ExpressionStatement	ivhash = 0	199:8:3280:3290	6910770	0	True				
ANR	6911246	AssignmentExpression	ivhash = 0		6910770	0		=			
ANR	6911247	Identifier	ivhash		6910770	0					
ANR	6911248	PrimaryExpression	0		6910770	1					
ANR	6911249	ElseStatement	else		6910770	0					
ANR	6911250	CompoundStatement		187:11:2971:2971	6910770	0					
ANR	6911251	ExpressionStatement	* ivhash_name = '\\0'	203:8:3315:3334	6910770	0	True				
ANR	6911252	AssignmentExpression	* ivhash_name = '\\0'		6910770	0		=			
ANR	6911253	UnaryOperationExpression	* ivhash_name		6910770	0					
ANR	6911254	UnaryOperator	*		6910770	0					
ANR	6911255	Identifier	ivhash_name		6910770	1					
ANR	6911256	PrimaryExpression	'\\0'		6910770	1					
ANR	6911257	ExpressionStatement	ivhash_name ++	205:8:3345:3358	6910770	1	True				
ANR	6911258	PostIncDecOperationExpression	ivhash_name ++		6910770	0					
ANR	6911259	Identifier	ivhash_name		6910770	0					
ANR	6911260	IncDec	++		6910770	1					
ANR	6911261	ExpressionStatement	"ivhash = qcrypto_block_luks_hash_name_lookup ( ivhash_name , & local_err )"	209:8:3371:3494	6910770	2	True				
ANR	6911262	AssignmentExpression	"ivhash = qcrypto_block_luks_hash_name_lookup ( ivhash_name , & local_err )"		6910770	0		=			
ANR	6911263	Identifier	ivhash		6910770	0					
ANR	6911264	CallExpression	"qcrypto_block_luks_hash_name_lookup ( ivhash_name , & local_err )"		6910770	1					
ANR	6911265	Callee	qcrypto_block_luks_hash_name_lookup		6910770	0					
ANR	6911266	Identifier	qcrypto_block_luks_hash_name_lookup		6910770	0					
ANR	6911267	ArgumentList	ivhash_name		6910770	1					
ANR	6911268	Argument	ivhash_name		6910770	0					
ANR	6911269	Identifier	ivhash_name		6910770	0					
ANR	6911270	Argument	& local_err		6910770	1					
ANR	6911271	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911272	UnaryOperator	&		6910770	0					
ANR	6911273	Identifier	local_err		6910770	1					
ANR	6911274	IfStatement	if ( local_err )		6910770	3					
ANR	6911275	Condition	local_err	213:12:3509:3517	6910770	0	True				
ANR	6911276	Identifier	local_err		6910770	0					
ANR	6911277	CompoundStatement		199:23:3187:3187	6910770	1					
ANR	6911278	ExpressionStatement	ret = - ENOTSUP	215:12:3535:3549	6910770	0	True				
ANR	6911279	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911280	Identifier	ret		6910770	0					
ANR	6911281	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911282	UnaryOperator	-		6910770	0					
ANR	6911283	Identifier	ENOTSUP		6910770	1					
ANR	6911284	ExpressionStatement	"error_propagate ( errp , local_err )"	217:12:3564:3596	6910770	1	True				
ANR	6911285	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911286	Callee	error_propagate		6910770	0					
ANR	6911287	Identifier	error_propagate		6910770	0					
ANR	6911288	ArgumentList	errp		6910770	1					
ANR	6911289	Argument	errp		6910770	0					
ANR	6911290	Identifier	errp		6910770	0					
ANR	6911291	Argument	local_err		6910770	1					
ANR	6911292	Identifier	local_err		6910770	0					
ANR	6911293	GotoStatement	goto fail ;	219:12:3611:3620	6910770	2	True				
ANR	6911294	Identifier	fail		6910770	0					
ANR	6911295	ExpressionStatement	"ciphermode = qcrypto_block_luks_cipher_mode_lookup ( luks -> header . cipher_mode , & local_err )"	227:4:3647:3791	6910770	33	True				
ANR	6911296	AssignmentExpression	"ciphermode = qcrypto_block_luks_cipher_mode_lookup ( luks -> header . cipher_mode , & local_err )"		6910770	0		=			
ANR	6911297	Identifier	ciphermode		6910770	0					
ANR	6911298	CallExpression	"qcrypto_block_luks_cipher_mode_lookup ( luks -> header . cipher_mode , & local_err )"		6910770	1					
ANR	6911299	Callee	qcrypto_block_luks_cipher_mode_lookup		6910770	0					
ANR	6911300	Identifier	qcrypto_block_luks_cipher_mode_lookup		6910770	0					
ANR	6911301	ArgumentList	luks -> header . cipher_mode		6910770	1					
ANR	6911302	Argument	luks -> header . cipher_mode		6910770	0					
ANR	6911303	MemberAccess	luks -> header . cipher_mode		6910770	0					
ANR	6911304	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911305	Identifier	luks		6910770	0					
ANR	6911306	Identifier	header		6910770	1					
ANR	6911307	Identifier	cipher_mode		6910770	1					
ANR	6911308	Argument	& local_err		6910770	1					
ANR	6911309	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911310	UnaryOperator	&		6910770	0					
ANR	6911311	Identifier	local_err		6910770	1					
ANR	6911312	IfStatement	if ( local_err )		6910770	34					
ANR	6911313	Condition	local_err	231:8:3802:3810	6910770	0	True				
ANR	6911314	Identifier	local_err		6910770	0					
ANR	6911315	CompoundStatement		217:19:3480:3480	6910770	1					
ANR	6911316	ExpressionStatement	ret = - ENOTSUP	233:8:3824:3838	6910770	0	True				
ANR	6911317	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911318	Identifier	ret		6910770	0					
ANR	6911319	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911320	UnaryOperator	-		6910770	0					
ANR	6911321	Identifier	ENOTSUP		6910770	1					
ANR	6911322	ExpressionStatement	"error_propagate ( errp , local_err )"	235:8:3849:3881	6910770	1	True				
ANR	6911323	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911324	Callee	error_propagate		6910770	0					
ANR	6911325	Identifier	error_propagate		6910770	0					
ANR	6911326	ArgumentList	errp		6910770	1					
ANR	6911327	Argument	errp		6910770	0					
ANR	6911328	Identifier	errp		6910770	0					
ANR	6911329	Argument	local_err		6910770	1					
ANR	6911330	Identifier	local_err		6910770	0					
ANR	6911331	GotoStatement	goto fail ;	237:8:3892:3901	6910770	2	True				
ANR	6911332	Identifier	fail		6910770	0					
ANR	6911333	ExpressionStatement	"cipheralg = qcrypto_block_luks_cipher_name_lookup ( luks -> header . cipher_name , ciphermode , luks -> header . key_bytes , & local_err )"	243:4:3917:4205	6910770	35	True				
ANR	6911334	AssignmentExpression	"cipheralg = qcrypto_block_luks_cipher_name_lookup ( luks -> header . cipher_name , ciphermode , luks -> header . key_bytes , & local_err )"		6910770	0		=			
ANR	6911335	Identifier	cipheralg		6910770	0					
ANR	6911336	CallExpression	"qcrypto_block_luks_cipher_name_lookup ( luks -> header . cipher_name , ciphermode , luks -> header . key_bytes , & local_err )"		6910770	1					
ANR	6911337	Callee	qcrypto_block_luks_cipher_name_lookup		6910770	0					
ANR	6911338	Identifier	qcrypto_block_luks_cipher_name_lookup		6910770	0					
ANR	6911339	ArgumentList	luks -> header . cipher_name		6910770	1					
ANR	6911340	Argument	luks -> header . cipher_name		6910770	0					
ANR	6911341	MemberAccess	luks -> header . cipher_name		6910770	0					
ANR	6911342	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911343	Identifier	luks		6910770	0					
ANR	6911344	Identifier	header		6910770	1					
ANR	6911345	Identifier	cipher_name		6910770	1					
ANR	6911346	Argument	ciphermode		6910770	1					
ANR	6911347	Identifier	ciphermode		6910770	0					
ANR	6911348	Argument	luks -> header . key_bytes		6910770	2					
ANR	6911349	MemberAccess	luks -> header . key_bytes		6910770	0					
ANR	6911350	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911351	Identifier	luks		6910770	0					
ANR	6911352	Identifier	header		6910770	1					
ANR	6911353	Identifier	key_bytes		6910770	1					
ANR	6911354	Argument	& local_err		6910770	3					
ANR	6911355	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911356	UnaryOperator	&		6910770	0					
ANR	6911357	Identifier	local_err		6910770	1					
ANR	6911358	IfStatement	if ( local_err )		6910770	36					
ANR	6911359	Condition	local_err	251:8:4216:4224	6910770	0	True				
ANR	6911360	Identifier	local_err		6910770	0					
ANR	6911361	CompoundStatement		237:19:3894:3894	6910770	1					
ANR	6911362	ExpressionStatement	ret = - ENOTSUP	253:8:4238:4252	6910770	0	True				
ANR	6911363	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911364	Identifier	ret		6910770	0					
ANR	6911365	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911366	UnaryOperator	-		6910770	0					
ANR	6911367	Identifier	ENOTSUP		6910770	1					
ANR	6911368	ExpressionStatement	"error_propagate ( errp , local_err )"	255:8:4263:4295	6910770	1	True				
ANR	6911369	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911370	Callee	error_propagate		6910770	0					
ANR	6911371	Identifier	error_propagate		6910770	0					
ANR	6911372	ArgumentList	errp		6910770	1					
ANR	6911373	Argument	errp		6910770	0					
ANR	6911374	Identifier	errp		6910770	0					
ANR	6911375	Argument	local_err		6910770	1					
ANR	6911376	Identifier	local_err		6910770	0					
ANR	6911377	GotoStatement	goto fail ;	257:8:4306:4315	6910770	2	True				
ANR	6911378	Identifier	fail		6910770	0					
ANR	6911379	ExpressionStatement	"hash = qcrypto_block_luks_hash_name_lookup ( luks -> header . hash_spec , & local_err )"	263:4:4331:4457	6910770	37	True				
ANR	6911380	AssignmentExpression	"hash = qcrypto_block_luks_hash_name_lookup ( luks -> header . hash_spec , & local_err )"		6910770	0		=			
ANR	6911381	Identifier	hash		6910770	0					
ANR	6911382	CallExpression	"qcrypto_block_luks_hash_name_lookup ( luks -> header . hash_spec , & local_err )"		6910770	1					
ANR	6911383	Callee	qcrypto_block_luks_hash_name_lookup		6910770	0					
ANR	6911384	Identifier	qcrypto_block_luks_hash_name_lookup		6910770	0					
ANR	6911385	ArgumentList	luks -> header . hash_spec		6910770	1					
ANR	6911386	Argument	luks -> header . hash_spec		6910770	0					
ANR	6911387	MemberAccess	luks -> header . hash_spec		6910770	0					
ANR	6911388	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911389	Identifier	luks		6910770	0					
ANR	6911390	Identifier	header		6910770	1					
ANR	6911391	Identifier	hash_spec		6910770	1					
ANR	6911392	Argument	& local_err		6910770	1					
ANR	6911393	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911394	UnaryOperator	&		6910770	0					
ANR	6911395	Identifier	local_err		6910770	1					
ANR	6911396	IfStatement	if ( local_err )		6910770	38					
ANR	6911397	Condition	local_err	267:8:4468:4476	6910770	0	True				
ANR	6911398	Identifier	local_err		6910770	0					
ANR	6911399	CompoundStatement		253:19:4146:4146	6910770	1					
ANR	6911400	ExpressionStatement	ret = - ENOTSUP	269:8:4490:4504	6910770	0	True				
ANR	6911401	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911402	Identifier	ret		6910770	0					
ANR	6911403	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911404	UnaryOperator	-		6910770	0					
ANR	6911405	Identifier	ENOTSUP		6910770	1					
ANR	6911406	ExpressionStatement	"error_propagate ( errp , local_err )"	271:8:4515:4547	6910770	1	True				
ANR	6911407	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911408	Callee	error_propagate		6910770	0					
ANR	6911409	Identifier	error_propagate		6910770	0					
ANR	6911410	ArgumentList	errp		6910770	1					
ANR	6911411	Argument	errp		6910770	0					
ANR	6911412	Identifier	errp		6910770	0					
ANR	6911413	Argument	local_err		6910770	1					
ANR	6911414	Identifier	local_err		6910770	0					
ANR	6911415	GotoStatement	goto fail ;	273:8:4558:4567	6910770	2	True				
ANR	6911416	Identifier	fail		6910770	0					
ANR	6911417	ExpressionStatement	"ivalg = qcrypto_block_luks_ivgen_name_lookup ( ivgen_name , & local_err )"	279:4:4583:4701	6910770	39	True				
ANR	6911418	AssignmentExpression	"ivalg = qcrypto_block_luks_ivgen_name_lookup ( ivgen_name , & local_err )"		6910770	0		=			
ANR	6911419	Identifier	ivalg		6910770	0					
ANR	6911420	CallExpression	"qcrypto_block_luks_ivgen_name_lookup ( ivgen_name , & local_err )"		6910770	1					
ANR	6911421	Callee	qcrypto_block_luks_ivgen_name_lookup		6910770	0					
ANR	6911422	Identifier	qcrypto_block_luks_ivgen_name_lookup		6910770	0					
ANR	6911423	ArgumentList	ivgen_name		6910770	1					
ANR	6911424	Argument	ivgen_name		6910770	0					
ANR	6911425	Identifier	ivgen_name		6910770	0					
ANR	6911426	Argument	& local_err		6910770	1					
ANR	6911427	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911428	UnaryOperator	&		6910770	0					
ANR	6911429	Identifier	local_err		6910770	1					
ANR	6911430	IfStatement	if ( local_err )		6910770	40					
ANR	6911431	Condition	local_err	283:8:4712:4720	6910770	0	True				
ANR	6911432	Identifier	local_err		6910770	0					
ANR	6911433	CompoundStatement		269:19:4390:4390	6910770	1					
ANR	6911434	ExpressionStatement	ret = - ENOTSUP	285:8:4734:4748	6910770	0	True				
ANR	6911435	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911436	Identifier	ret		6910770	0					
ANR	6911437	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911438	UnaryOperator	-		6910770	0					
ANR	6911439	Identifier	ENOTSUP		6910770	1					
ANR	6911440	ExpressionStatement	"error_propagate ( errp , local_err )"	287:8:4759:4791	6910770	1	True				
ANR	6911441	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911442	Callee	error_propagate		6910770	0					
ANR	6911443	Identifier	error_propagate		6910770	0					
ANR	6911444	ArgumentList	errp		6910770	1					
ANR	6911445	Argument	errp		6910770	0					
ANR	6911446	Identifier	errp		6910770	0					
ANR	6911447	Argument	local_err		6910770	1					
ANR	6911448	Identifier	local_err		6910770	0					
ANR	6911449	GotoStatement	goto fail ;	289:8:4802:4811	6910770	2	True				
ANR	6911450	Identifier	fail		6910770	0					
ANR	6911451	IfStatement	if ( ivalg == QCRYPTO_IVGEN_ALG_ESSIV )		6910770	41					
ANR	6911452	Condition	ivalg == QCRYPTO_IVGEN_ALG_ESSIV	295:8:4831:4862	6910770	0	True				
ANR	6911453	EqualityExpression	ivalg == QCRYPTO_IVGEN_ALG_ESSIV		6910770	0		==			
ANR	6911454	Identifier	ivalg		6910770	0					
ANR	6911455	Identifier	QCRYPTO_IVGEN_ALG_ESSIV		6910770	1					
ANR	6911456	CompoundStatement		281:42:4532:4532	6910770	1					
ANR	6911457	IfStatement	if ( ! ivhash_name )		6910770	0					
ANR	6911458	Condition	! ivhash_name	297:12:4880:4891	6910770	0	True				
ANR	6911459	UnaryOperationExpression	! ivhash_name		6910770	0					
ANR	6911460	UnaryOperator	!		6910770	0					
ANR	6911461	Identifier	ivhash_name		6910770	1					
ANR	6911462	CompoundStatement		283:26:4561:4561	6910770	1					
ANR	6911463	ExpressionStatement	ret = - EINVAL	299:12:4909:4922	6910770	0	True				
ANR	6911464	AssignmentExpression	ret = - EINVAL		6910770	0		=			
ANR	6911465	Identifier	ret		6910770	0					
ANR	6911466	UnaryOperationExpression	- EINVAL		6910770	1					
ANR	6911467	UnaryOperator	-		6910770	0					
ANR	6911468	Identifier	EINVAL		6910770	1					
ANR	6911469	ExpressionStatement	"error_setg ( errp , ""Missing IV generator hash specification"" )"	301:12:4937:4996	6910770	1	True				
ANR	6911470	CallExpression	"error_setg ( errp , ""Missing IV generator hash specification"" )"		6910770	0					
ANR	6911471	Callee	error_setg		6910770	0					
ANR	6911472	Identifier	error_setg		6910770	0					
ANR	6911473	ArgumentList	errp		6910770	1					
ANR	6911474	Argument	errp		6910770	0					
ANR	6911475	Identifier	errp		6910770	0					
ANR	6911476	Argument	"""Missing IV generator hash specification"""		6910770	1					
ANR	6911477	PrimaryExpression	"""Missing IV generator hash specification"""		6910770	0					
ANR	6911478	GotoStatement	goto fail ;	303:12:5011:5020	6910770	2	True				
ANR	6911479	Identifier	fail		6910770	0					
ANR	6911480	ExpressionStatement	"ivcipheralg = qcrypto_block_luks_essiv_cipher ( cipheralg , ivhash , & local_err )"	307:8:5042:5228	6910770	1	True				
ANR	6911481	AssignmentExpression	"ivcipheralg = qcrypto_block_luks_essiv_cipher ( cipheralg , ivhash , & local_err )"		6910770	0		=			
ANR	6911482	Identifier	ivcipheralg		6910770	0					
ANR	6911483	CallExpression	"qcrypto_block_luks_essiv_cipher ( cipheralg , ivhash , & local_err )"		6910770	1					
ANR	6911484	Callee	qcrypto_block_luks_essiv_cipher		6910770	0					
ANR	6911485	Identifier	qcrypto_block_luks_essiv_cipher		6910770	0					
ANR	6911486	ArgumentList	cipheralg		6910770	1					
ANR	6911487	Argument	cipheralg		6910770	0					
ANR	6911488	Identifier	cipheralg		6910770	0					
ANR	6911489	Argument	ivhash		6910770	1					
ANR	6911490	Identifier	ivhash		6910770	0					
ANR	6911491	Argument	& local_err		6910770	2					
ANR	6911492	UnaryOperationExpression	& local_err		6910770	0					
ANR	6911493	UnaryOperator	&		6910770	0					
ANR	6911494	Identifier	local_err		6910770	1					
ANR	6911495	IfStatement	if ( local_err )		6910770	2					
ANR	6911496	Condition	local_err	313:12:5243:5251	6910770	0	True				
ANR	6911497	Identifier	local_err		6910770	0					
ANR	6911498	CompoundStatement		299:23:4921:4921	6910770	1					
ANR	6911499	ExpressionStatement	ret = - ENOTSUP	315:12:5269:5283	6910770	0	True				
ANR	6911500	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911501	Identifier	ret		6910770	0					
ANR	6911502	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911503	UnaryOperator	-		6910770	0					
ANR	6911504	Identifier	ENOTSUP		6910770	1					
ANR	6911505	ExpressionStatement	"error_propagate ( errp , local_err )"	317:12:5298:5330	6910770	1	True				
ANR	6911506	CallExpression	"error_propagate ( errp , local_err )"		6910770	0					
ANR	6911507	Callee	error_propagate		6910770	0					
ANR	6911508	Identifier	error_propagate		6910770	0					
ANR	6911509	ArgumentList	errp		6910770	1					
ANR	6911510	Argument	errp		6910770	0					
ANR	6911511	Identifier	errp		6910770	0					
ANR	6911512	Argument	local_err		6910770	1					
ANR	6911513	Identifier	local_err		6910770	0					
ANR	6911514	GotoStatement	goto fail ;	319:12:5345:5354	6910770	2	True				
ANR	6911515	Identifier	fail		6910770	0					
ANR	6911516	ElseStatement	else		6910770	0					
ANR	6911517	CompoundStatement		309:11:5046:5046	6910770	0					
ANR	6911518	ExpressionStatement	ivcipheralg = cipheralg	339:8:5782:5805	6910770	0	True				
ANR	6911519	AssignmentExpression	ivcipheralg = cipheralg		6910770	0		=			
ANR	6911520	Identifier	ivcipheralg		6910770	0					
ANR	6911521	Identifier	cipheralg		6910770	1					
ANR	6911522	IfStatement	if ( ! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO ) )		6910770	42					
ANR	6911523	Condition	! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO )	345:8:5825:5859	6910770	0	True				
ANR	6911524	UnaryOperationExpression	! ( flags & QCRYPTO_BLOCK_OPEN_NO_IO )		6910770	0					
ANR	6911525	UnaryOperator	!		6910770	0					
ANR	6911526	BitAndExpression	flags & QCRYPTO_BLOCK_OPEN_NO_IO		6910770	1		&			
ANR	6911527	Identifier	flags		6910770	0					
ANR	6911528	Identifier	QCRYPTO_BLOCK_OPEN_NO_IO		6910770	1					
ANR	6911529	CompoundStatement		331:45:5529:5529	6910770	1					
ANR	6911530	IfStatement	"if ( qcrypto_block_luks_find_key ( block , password , cipheralg , ciphermode , hash , ivalg , ivcipheralg , ivhash , & masterkey , & masterkeylen , readfunc , opaque , errp ) < 0 )"		6910770	0					
ANR	6911531	Condition	"qcrypto_block_luks_find_key ( block , password , cipheralg , ciphermode , hash , ivalg , ivcipheralg , ivhash , & masterkey , & masterkeylen , readfunc , opaque , errp ) < 0"	353:12:6009:6533	6910770	0	True				
ANR	6911532	RelationalExpression	"qcrypto_block_luks_find_key ( block , password , cipheralg , ciphermode , hash , ivalg , ivcipheralg , ivhash , & masterkey , & masterkeylen , readfunc , opaque , errp ) < 0"		6910770	0		<			
ANR	6911533	CallExpression	"qcrypto_block_luks_find_key ( block , password , cipheralg , ciphermode , hash , ivalg , ivcipheralg , ivhash , & masterkey , & masterkeylen , readfunc , opaque , errp )"		6910770	0					
ANR	6911534	Callee	qcrypto_block_luks_find_key		6910770	0					
ANR	6911535	Identifier	qcrypto_block_luks_find_key		6910770	0					
ANR	6911536	ArgumentList	block		6910770	1					
ANR	6911537	Argument	block		6910770	0					
ANR	6911538	Identifier	block		6910770	0					
ANR	6911539	Argument	password		6910770	1					
ANR	6911540	Identifier	password		6910770	0					
ANR	6911541	Argument	cipheralg		6910770	2					
ANR	6911542	Identifier	cipheralg		6910770	0					
ANR	6911543	Argument	ciphermode		6910770	3					
ANR	6911544	Identifier	ciphermode		6910770	0					
ANR	6911545	Argument	hash		6910770	4					
ANR	6911546	Identifier	hash		6910770	0					
ANR	6911547	Argument	ivalg		6910770	5					
ANR	6911548	Identifier	ivalg		6910770	0					
ANR	6911549	Argument	ivcipheralg		6910770	6					
ANR	6911550	Identifier	ivcipheralg		6910770	0					
ANR	6911551	Argument	ivhash		6910770	7					
ANR	6911552	Identifier	ivhash		6910770	0					
ANR	6911553	Argument	& masterkey		6910770	8					
ANR	6911554	UnaryOperationExpression	& masterkey		6910770	0					
ANR	6911555	UnaryOperator	&		6910770	0					
ANR	6911556	Identifier	masterkey		6910770	1					
ANR	6911557	Argument	& masterkeylen		6910770	9					
ANR	6911558	UnaryOperationExpression	& masterkeylen		6910770	0					
ANR	6911559	UnaryOperator	&		6910770	0					
ANR	6911560	Identifier	masterkeylen		6910770	1					
ANR	6911561	Argument	readfunc		6910770	10					
ANR	6911562	Identifier	readfunc		6910770	0					
ANR	6911563	Argument	opaque		6910770	11					
ANR	6911564	Identifier	opaque		6910770	0					
ANR	6911565	Argument	errp		6910770	12					
ANR	6911566	Identifier	errp		6910770	0					
ANR	6911567	PrimaryExpression	0		6910770	1					
ANR	6911568	CompoundStatement		357:51:6203:6203	6910770	1					
ANR	6911569	ExpressionStatement	ret = - EACCES	373:12:6551:6564	6910770	0	True				
ANR	6911570	AssignmentExpression	ret = - EACCES		6910770	0		=			
ANR	6911571	Identifier	ret		6910770	0					
ANR	6911572	UnaryOperationExpression	- EACCES		6910770	1					
ANR	6911573	UnaryOperator	-		6910770	0					
ANR	6911574	Identifier	EACCES		6910770	1					
ANR	6911575	GotoStatement	goto fail ;	375:12:6579:6588	6910770	1	True				
ANR	6911576	Identifier	fail		6910770	0					
ANR	6911577	ExpressionStatement	block -> kdfhash = hash	387:8:6738:6759	6910770	1	True				
ANR	6911578	AssignmentExpression	block -> kdfhash = hash		6910770	0		=			
ANR	6911579	PtrMemberAccess	block -> kdfhash		6910770	0					
ANR	6911580	Identifier	block		6910770	0					
ANR	6911581	Identifier	kdfhash		6910770	1					
ANR	6911582	Identifier	hash		6910770	1					
ANR	6911583	ExpressionStatement	"block -> niv = qcrypto_cipher_get_iv_len ( cipheralg , ciphermode )"	389:8:6770:6879	6910770	2	True				
ANR	6911584	AssignmentExpression	"block -> niv = qcrypto_cipher_get_iv_len ( cipheralg , ciphermode )"		6910770	0		=			
ANR	6911585	PtrMemberAccess	block -> niv		6910770	0					
ANR	6911586	Identifier	block		6910770	0					
ANR	6911587	Identifier	niv		6910770	1					
ANR	6911588	CallExpression	"qcrypto_cipher_get_iv_len ( cipheralg , ciphermode )"		6910770	1					
ANR	6911589	Callee	qcrypto_cipher_get_iv_len		6910770	0					
ANR	6911590	Identifier	qcrypto_cipher_get_iv_len		6910770	0					
ANR	6911591	ArgumentList	cipheralg		6910770	1					
ANR	6911592	Argument	cipheralg		6910770	0					
ANR	6911593	Identifier	cipheralg		6910770	0					
ANR	6911594	Argument	ciphermode		6910770	1					
ANR	6911595	Identifier	ciphermode		6910770	0					
ANR	6911596	ExpressionStatement	"block -> ivgen = qcrypto_ivgen_new ( ivalg , ivcipheralg , ivhash , masterkey , masterkeylen , errp )"	393:8:6890:7149	6910770	3	True				
ANR	6911597	AssignmentExpression	"block -> ivgen = qcrypto_ivgen_new ( ivalg , ivcipheralg , ivhash , masterkey , masterkeylen , errp )"		6910770	0		=			
ANR	6911598	PtrMemberAccess	block -> ivgen		6910770	0					
ANR	6911599	Identifier	block		6910770	0					
ANR	6911600	Identifier	ivgen		6910770	1					
ANR	6911601	CallExpression	"qcrypto_ivgen_new ( ivalg , ivcipheralg , ivhash , masterkey , masterkeylen , errp )"		6910770	1					
ANR	6911602	Callee	qcrypto_ivgen_new		6910770	0					
ANR	6911603	Identifier	qcrypto_ivgen_new		6910770	0					
ANR	6911604	ArgumentList	ivalg		6910770	1					
ANR	6911605	Argument	ivalg		6910770	0					
ANR	6911606	Identifier	ivalg		6910770	0					
ANR	6911607	Argument	ivcipheralg		6910770	1					
ANR	6911608	Identifier	ivcipheralg		6910770	0					
ANR	6911609	Argument	ivhash		6910770	2					
ANR	6911610	Identifier	ivhash		6910770	0					
ANR	6911611	Argument	masterkey		6910770	3					
ANR	6911612	Identifier	masterkey		6910770	0					
ANR	6911613	Argument	masterkeylen		6910770	4					
ANR	6911614	Identifier	masterkeylen		6910770	0					
ANR	6911615	Argument	errp		6910770	5					
ANR	6911616	Identifier	errp		6910770	0					
ANR	6911617	IfStatement	if ( ! block -> ivgen )		6910770	4					
ANR	6911618	Condition	! block -> ivgen	403:12:7164:7176	6910770	0	True				
ANR	6911619	UnaryOperationExpression	! block -> ivgen		6910770	0					
ANR	6911620	UnaryOperator	!		6910770	0					
ANR	6911621	PtrMemberAccess	block -> ivgen		6910770	1					
ANR	6911622	Identifier	block		6910770	0					
ANR	6911623	Identifier	ivgen		6910770	1					
ANR	6911624	CompoundStatement		389:27:6846:6846	6910770	1					
ANR	6911625	ExpressionStatement	ret = - ENOTSUP	405:12:7194:7208	6910770	0	True				
ANR	6911626	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911627	Identifier	ret		6910770	0					
ANR	6911628	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911629	UnaryOperator	-		6910770	0					
ANR	6911630	Identifier	ENOTSUP		6910770	1					
ANR	6911631	GotoStatement	goto fail ;	407:12:7223:7232	6910770	1	True				
ANR	6911632	Identifier	fail		6910770	0					
ANR	6911633	ExpressionStatement	"block -> cipher = qcrypto_cipher_new ( cipheralg , ciphermode , masterkey , masterkeylen , errp )"	413:8:7256:7476	6910770	5	True				
ANR	6911634	AssignmentExpression	"block -> cipher = qcrypto_cipher_new ( cipheralg , ciphermode , masterkey , masterkeylen , errp )"		6910770	0		=			
ANR	6911635	PtrMemberAccess	block -> cipher		6910770	0					
ANR	6911636	Identifier	block		6910770	0					
ANR	6911637	Identifier	cipher		6910770	1					
ANR	6911638	CallExpression	"qcrypto_cipher_new ( cipheralg , ciphermode , masterkey , masterkeylen , errp )"		6910770	1					
ANR	6911639	Callee	qcrypto_cipher_new		6910770	0					
ANR	6911640	Identifier	qcrypto_cipher_new		6910770	0					
ANR	6911641	ArgumentList	cipheralg		6910770	1					
ANR	6911642	Argument	cipheralg		6910770	0					
ANR	6911643	Identifier	cipheralg		6910770	0					
ANR	6911644	Argument	ciphermode		6910770	1					
ANR	6911645	Identifier	ciphermode		6910770	0					
ANR	6911646	Argument	masterkey		6910770	2					
ANR	6911647	Identifier	masterkey		6910770	0					
ANR	6911648	Argument	masterkeylen		6910770	3					
ANR	6911649	Identifier	masterkeylen		6910770	0					
ANR	6911650	Argument	errp		6910770	4					
ANR	6911651	Identifier	errp		6910770	0					
ANR	6911652	IfStatement	if ( ! block -> cipher )		6910770	6					
ANR	6911653	Condition	! block -> cipher	421:12:7491:7504	6910770	0	True				
ANR	6911654	UnaryOperationExpression	! block -> cipher		6910770	0					
ANR	6911655	UnaryOperator	!		6910770	0					
ANR	6911656	PtrMemberAccess	block -> cipher		6910770	1					
ANR	6911657	Identifier	block		6910770	0					
ANR	6911658	Identifier	cipher		6910770	1					
ANR	6911659	CompoundStatement		407:28:7174:7174	6910770	1					
ANR	6911660	ExpressionStatement	ret = - ENOTSUP	423:12:7522:7536	6910770	0	True				
ANR	6911661	AssignmentExpression	ret = - ENOTSUP		6910770	0		=			
ANR	6911662	Identifier	ret		6910770	0					
ANR	6911663	UnaryOperationExpression	- ENOTSUP		6910770	1					
ANR	6911664	UnaryOperator	-		6910770	0					
ANR	6911665	Identifier	ENOTSUP		6910770	1					
ANR	6911666	GotoStatement	goto fail ;	425:12:7551:7560	6910770	1	True				
ANR	6911667	Identifier	fail		6910770	0					
ANR	6911668	ExpressionStatement	block -> payload_offset = luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE	433:4:7587:7680	6910770	43	True				
ANR	6911669	AssignmentExpression	block -> payload_offset = luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6910770	0		=			
ANR	6911670	PtrMemberAccess	block -> payload_offset		6910770	0					
ANR	6911671	Identifier	block		6910770	0					
ANR	6911672	Identifier	payload_offset		6910770	1					
ANR	6911673	MultiplicativeExpression	luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6910770	1		*			
ANR	6911674	MemberAccess	luks -> header . payload_offset		6910770	0					
ANR	6911675	PtrMemberAccess	luks -> header		6910770	0					
ANR	6911676	Identifier	luks		6910770	0					
ANR	6911677	Identifier	header		6910770	1					
ANR	6911678	Identifier	payload_offset		6910770	1					
ANR	6911679	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6910770	1					
ANR	6911680	ExpressionStatement	luks -> cipher_alg = cipheralg	439:4:7689:7717	6910770	44	True				
ANR	6911681	AssignmentExpression	luks -> cipher_alg = cipheralg		6910770	0		=			
ANR	6911682	PtrMemberAccess	luks -> cipher_alg		6910770	0					
ANR	6911683	Identifier	luks		6910770	0					
ANR	6911684	Identifier	cipher_alg		6910770	1					
ANR	6911685	Identifier	cipheralg		6910770	1					
ANR	6911686	ExpressionStatement	luks -> cipher_mode = ciphermode	441:4:7724:7754	6910770	45	True				
ANR	6911687	AssignmentExpression	luks -> cipher_mode = ciphermode		6910770	0		=			
ANR	6911688	PtrMemberAccess	luks -> cipher_mode		6910770	0					
ANR	6911689	Identifier	luks		6910770	0					
ANR	6911690	Identifier	cipher_mode		6910770	1					
ANR	6911691	Identifier	ciphermode		6910770	1					
ANR	6911692	ExpressionStatement	luks -> ivgen_alg = ivalg	443:4:7761:7784	6910770	46	True				
ANR	6911693	AssignmentExpression	luks -> ivgen_alg = ivalg		6910770	0		=			
ANR	6911694	PtrMemberAccess	luks -> ivgen_alg		6910770	0					
ANR	6911695	Identifier	luks		6910770	0					
ANR	6911696	Identifier	ivgen_alg		6910770	1					
ANR	6911697	Identifier	ivalg		6910770	1					
ANR	6911698	ExpressionStatement	luks -> ivgen_hash_alg = ivhash	445:4:7791:7820	6910770	47	True				
ANR	6911699	AssignmentExpression	luks -> ivgen_hash_alg = ivhash		6910770	0		=			
ANR	6911700	PtrMemberAccess	luks -> ivgen_hash_alg		6910770	0					
ANR	6911701	Identifier	luks		6910770	0					
ANR	6911702	Identifier	ivgen_hash_alg		6910770	1					
ANR	6911703	Identifier	ivhash		6910770	1					
ANR	6911704	ExpressionStatement	luks -> hash_alg = hash	447:4:7827:7848	6910770	48	True				
ANR	6911705	AssignmentExpression	luks -> hash_alg = hash		6910770	0		=			
ANR	6911706	PtrMemberAccess	luks -> hash_alg		6910770	0					
ANR	6911707	Identifier	luks		6910770	0					
ANR	6911708	Identifier	hash_alg		6910770	1					
ANR	6911709	Identifier	hash		6910770	1					
ANR	6911710	ExpressionStatement	g_free ( masterkey )	451:4:7857:7874	6910770	49	True				
ANR	6911711	CallExpression	g_free ( masterkey )		6910770	0					
ANR	6911712	Callee	g_free		6910770	0					
ANR	6911713	Identifier	g_free		6910770	0					
ANR	6911714	ArgumentList	masterkey		6910770	1					
ANR	6911715	Argument	masterkey		6910770	0					
ANR	6911716	Identifier	masterkey		6910770	0					
ANR	6911717	ExpressionStatement	g_free ( password )	453:4:7881:7897	6910770	50	True				
ANR	6911718	CallExpression	g_free ( password )		6910770	0					
ANR	6911719	Callee	g_free		6910770	0					
ANR	6911720	Identifier	g_free		6910770	0					
ANR	6911721	ArgumentList	password		6910770	1					
ANR	6911722	Argument	password		6910770	0					
ANR	6911723	Identifier	password		6910770	0					
ANR	6911724	ReturnStatement	return 0 ;	457:4:7906:7914	6910770	51	True				
ANR	6911725	PrimaryExpression	0		6910770	0					
ANR	6911726	Label	fail :	461:1:7920:7924	6910770	52	True				
ANR	6911727	Identifier	fail		6910770	0					
ANR	6911728	ExpressionStatement	g_free ( masterkey )	463:4:7931:7948	6910770	53	True				
ANR	6911729	CallExpression	g_free ( masterkey )		6910770	0					
ANR	6911730	Callee	g_free		6910770	0					
ANR	6911731	Identifier	g_free		6910770	0					
ANR	6911732	ArgumentList	masterkey		6910770	1					
ANR	6911733	Argument	masterkey		6910770	0					
ANR	6911734	Identifier	masterkey		6910770	0					
ANR	6911735	ExpressionStatement	qcrypto_cipher_free ( block -> cipher )	465:4:7955:7989	6910770	54	True				
ANR	6911736	CallExpression	qcrypto_cipher_free ( block -> cipher )		6910770	0					
ANR	6911737	Callee	qcrypto_cipher_free		6910770	0					
ANR	6911738	Identifier	qcrypto_cipher_free		6910770	0					
ANR	6911739	ArgumentList	block -> cipher		6910770	1					
ANR	6911740	Argument	block -> cipher		6910770	0					
ANR	6911741	PtrMemberAccess	block -> cipher		6910770	0					
ANR	6911742	Identifier	block		6910770	0					
ANR	6911743	Identifier	cipher		6910770	1					
ANR	6911744	ExpressionStatement	qcrypto_ivgen_free ( block -> ivgen )	467:4:7996:8028	6910770	55	True				
ANR	6911745	CallExpression	qcrypto_ivgen_free ( block -> ivgen )		6910770	0					
ANR	6911746	Callee	qcrypto_ivgen_free		6910770	0					
ANR	6911747	Identifier	qcrypto_ivgen_free		6910770	0					
ANR	6911748	ArgumentList	block -> ivgen		6910770	1					
ANR	6911749	Argument	block -> ivgen		6910770	0					
ANR	6911750	PtrMemberAccess	block -> ivgen		6910770	0					
ANR	6911751	Identifier	block		6910770	0					
ANR	6911752	Identifier	ivgen		6910770	1					
ANR	6911753	ExpressionStatement	g_free ( luks )	469:4:8035:8047	6910770	56	True				
ANR	6911754	CallExpression	g_free ( luks )		6910770	0					
ANR	6911755	Callee	g_free		6910770	0					
ANR	6911756	Identifier	g_free		6910770	0					
ANR	6911757	ArgumentList	luks		6910770	1					
ANR	6911758	Argument	luks		6910770	0					
ANR	6911759	Identifier	luks		6910770	0					
ANR	6911760	ExpressionStatement	g_free ( password )	471:4:8054:8070	6910770	57	True				
ANR	6911761	CallExpression	g_free ( password )		6910770	0					
ANR	6911762	Callee	g_free		6910770	0					
ANR	6911763	Identifier	g_free		6910770	0					
ANR	6911764	ArgumentList	password		6910770	1					
ANR	6911765	Argument	password		6910770	0					
ANR	6911766	Identifier	password		6910770	0					
ANR	6911767	ReturnStatement	return ret ;	473:4:8077:8087	6910770	58	True				
ANR	6911768	Identifier	ret		6910770	0					
ANR	6911769	Identifier	qcrypto_block_luks_open		6910770	1					
ANR	6911770	ParameterList	"QCryptoBlock * block , QCryptoBlockOpenOptions * options , const char * optprefix , QCryptoBlockReadFunc readfunc , void * opaque , unsigned int flags , Error * * errp"		6910770	2					
ANR	6911771	Parameter	QCryptoBlock * block	1:24:24:42	6910770	0	True				
ANR	6911772	ParameterType	QCryptoBlock *		6910770	0					
ANR	6911773	Identifier	block		6910770	1					
ANR	6911774	Parameter	QCryptoBlockOpenOptions * options	3:24:70:101	6910770	1	True				
ANR	6911775	ParameterType	QCryptoBlockOpenOptions *		6910770	0					
ANR	6911776	Identifier	options		6910770	1					
ANR	6911777	Parameter	const char * optprefix	5:24:129:149	6910770	2	True				
ANR	6911778	ParameterType	const char *		6910770	0					
ANR	6911779	Identifier	optprefix		6910770	1					
ANR	6911780	Parameter	QCryptoBlockReadFunc readfunc	7:24:177:205	6910770	3	True				
ANR	6911781	ParameterType	QCryptoBlockReadFunc		6910770	0					
ANR	6911782	Identifier	readfunc		6910770	1					
ANR	6911783	Parameter	void * opaque	9:24:233:244	6910770	4	True				
ANR	6911784	ParameterType	void *		6910770	0					
ANR	6911785	Identifier	opaque		6910770	1					
ANR	6911786	Parameter	unsigned int flags	11:24:272:289	6910770	5	True				
ANR	6911787	ParameterType	unsigned int		6910770	0					
ANR	6911788	Identifier	flags		6910770	1					
ANR	6911789	Parameter	Error * * errp	13:24:317:328	6910770	6	True				
ANR	6911790	ParameterType	Error * *		6910770	0					
ANR	6911791	Identifier	errp		6910770	1					
ANR	6911792	CFGEntryNode	ENTRY		6910770		True				
ANR	6911793	CFGExitNode	EXIT		6910770		True				
ANR	6911794	Symbol	luks -> cipher_mode		6910770						
ANR	6911795	Symbol	luks		6910770						
ANR	6911796	Symbol	block -> payload_offset		6910770						
ANR	6911797	Symbol	errp		6910770						
ANR	6911798	Symbol	qcrypto_cipher_new		6910770						
ANR	6911799	Symbol	luks -> header		6910770						
ANR	6911800	Symbol	readfunc		6910770						
ANR	6911801	Symbol	ENOTSUP		6910770						
ANR	6911802	Symbol	QCryptoBlockLUKS		6910770						
ANR	6911803	Symbol	luks -> header . version		6910770						
ANR	6911804	Symbol	strchr		6910770						
ANR	6911805	Symbol	* ivgen_name		6910770						
ANR	6911806	Symbol	& luks -> header . key_slots [ i ] . key_offset		6910770						
ANR	6911807	Symbol	optprefix		6910770						
ANR	6911808	Symbol	password		6910770						
ANR	6911809	Symbol	* luks -> header . key_slots		6910770						
ANR	6911810	Symbol	qcrypto_cipher_get_iv_len		6910770						
ANR	6911811	Symbol	& luks -> header . key_slots [ i ] . active		6910770						
ANR	6911812	Symbol	memcmp		6910770						
ANR	6911813	Symbol	ivhash_name		6910770						
ANR	6911814	Symbol	options		6910770						
ANR	6911815	Symbol	block		6910770						
ANR	6911816	Symbol	options -> u		6910770						
ANR	6911817	Symbol	block -> cipher		6910770						
ANR	6911818	Symbol	qcrypto_block_luks_hash_name_lookup		6910770						
ANR	6911819	Symbol	qcrypto_block_luks_essiv_cipher		6910770						
ANR	6911820	Symbol	ret		6910770						
ANR	6911821	Symbol	& masterkeylen		6910770						
ANR	6911822	Symbol	NULL		6910770						
ANR	6911823	Symbol	& luks -> header . key_slots [ i ] . stripes		6910770						
ANR	6911824	Symbol	masterkey		6910770						
ANR	6911825	Symbol	qcrypto_secret_lookup_as_utf8		6910770						
ANR	6911826	Symbol	luks -> ivgen_alg		6910770						
ANR	6911827	Symbol	ivalg		6910770						
ANR	6911828	Symbol	luks -> header . hash_spec		6910770						
ANR	6911829	Symbol	luks -> header . key_slots		6910770						
ANR	6911830	Symbol	options -> u . luks . key_secret		6910770						
ANR	6911831	Symbol	qcrypto_block_luks_find_key		6910770						
ANR	6911832	Symbol	masterkeylen		6910770						
ANR	6911833	Symbol	hash		6910770						
ANR	6911834	Symbol	local_err		6910770						
ANR	6911835	Symbol	luks -> header . magic		6910770						
ANR	6911836	Symbol	rv		6910770						
ANR	6911837	Symbol	* luks		6910770						
ANR	6911838	Symbol	* * luks		6910770						
ANR	6911839	Symbol	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6910770						
ANR	6911840	Symbol	flags		6910770						
ANR	6911841	Symbol	qcrypto_block_luks_magic		6910770						
ANR	6911842	Symbol	options -> u . luks		6910770						
ANR	6911843	Symbol	* options		6910770						
ANR	6911844	Symbol	qcrypto_block_luks_ivgen_name_lookup		6910770						
ANR	6911845	Symbol	block -> ivgen		6910770						
ANR	6911846	Symbol	luks -> header . cipher_name		6910770						
ANR	6911847	Symbol	ivcipheralg		6910770						
ANR	6911848	Symbol	QCRYPTO_BLOCK_OPEN_NO_IO		6910770						
ANR	6911849	Symbol	* ivhash_name		6910770						
ANR	6911850	Symbol	& local_err		6910770						
ANR	6911851	Symbol	g_new0		6910770						
ANR	6911852	Symbol	& luks -> header		6910770						
ANR	6911853	Symbol	QCRYPTO_BLOCK_LUKS_VERSION		6910770						
ANR	6911854	Symbol	EACCES		6910770						
ANR	6911855	Symbol	block -> kdfhash		6910770						
ANR	6911856	Symbol	luks -> header . payload_offset		6910770						
ANR	6911857	Symbol	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6910770						
ANR	6911858	Symbol	opaque		6910770						
ANR	6911859	Symbol	* luks -> header		6910770						
ANR	6911860	Symbol	ivhash		6910770						
ANR	6911861	Symbol	& luks -> header . key_bytes		6910770						
ANR	6911862	Symbol	qcrypto_block_luks_cipher_mode_lookup		6910770						
ANR	6911863	Symbol	i		6910770						
ANR	6911864	Symbol	& luks -> header . master_key_iterations		6910770						
ANR	6911865	Symbol	& luks -> header . version		6910770						
ANR	6911866	Symbol	qcrypto_block_luks_cipher_name_lookup		6910770						
ANR	6911867	Symbol	block -> niv		6910770						
ANR	6911868	Symbol	qcrypto_ivgen_new		6910770						
ANR	6911869	Symbol	block -> opaque		6910770						
ANR	6911870	Symbol	luks -> cipher_alg		6910770						
ANR	6911871	Symbol	* block		6910770						
ANR	6911872	Symbol	EINVAL		6910770						
ANR	6911873	Symbol	luks -> hash_alg		6910770						
ANR	6911874	Symbol	* i		6910770						
ANR	6911875	Symbol	& luks -> header . payload_offset		6910770						
ANR	6911876	Symbol	luks -> header . cipher_mode		6910770						
ANR	6911877	Symbol	luks -> header . key_bytes		6910770						
ANR	6911878	Symbol	ciphermode		6910770						
ANR	6911879	Symbol	cipheralg		6910770						
ANR	6911880	Symbol	& luks -> header . key_slots [ i ] . iterations		6910770						
ANR	6911881	Symbol	& masterkey		6910770						
ANR	6911882	Symbol	ivgen_name		6910770						
ANR	6911883	Symbol	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6910770						
ANR	6911884	Symbol	QCRYPTO_IVGEN_ALG_ESSIV		6910770						
ANR	6911885	Symbol	luks -> ivgen_hash_alg		6910770						
