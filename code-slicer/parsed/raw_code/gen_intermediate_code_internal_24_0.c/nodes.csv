command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4201638	File	/home/p4ultr4n/workplace/ReVeal/raw_code/gen_intermediate_code_internal_24_0.c								
ANR	4201639	Function	gen_intermediate_code_internal	1:0:0:7291							
ANR	4201640	FunctionDef	"gen_intermediate_code_internal (CPUState * env , TranslationBlock * tb , int search_pc)"		4201639	0					
ANR	4201641	CompoundStatement		7:0:229:7291	4201639	0					
ANR	4201642	IdentifierDeclStatement	"DisasContext ctx , * ctxp = & ctx ;"	9:4:236:266	4201639	0	True				
ANR	4201643	IdentifierDecl	ctx		4201639	0					
ANR	4201644	IdentifierDeclType	DisasContext		4201639	0					
ANR	4201645	Identifier	ctx		4201639	1					
ANR	4201646	IdentifierDecl	* ctxp = & ctx		4201639	1					
ANR	4201647	IdentifierDeclType	DisasContext *		4201639	0					
ANR	4201648	Identifier	ctxp		4201639	1					
ANR	4201649	AssignmentExpression	* ctxp = & ctx		4201639	2		=			
ANR	4201650	Identifier	ctxp		4201639	0					
ANR	4201651	UnaryOperationExpression	& ctx		4201639	1					
ANR	4201652	UnaryOperator	&		4201639	0					
ANR	4201653	Identifier	ctx		4201639	1					
ANR	4201654	IdentifierDeclStatement	"opc_handler_t * * table , * handler ;"	11:4:273:304	4201639	1	True				
ANR	4201655	IdentifierDecl	* * table		4201639	0					
ANR	4201656	IdentifierDeclType	opc_handler_t * *		4201639	0					
ANR	4201657	Identifier	table		4201639	1					
ANR	4201658	IdentifierDecl	* handler		4201639	1					
ANR	4201659	IdentifierDeclType	opc_handler_t *		4201639	0					
ANR	4201660	Identifier	handler		4201639	1					
ANR	4201661	IdentifierDeclStatement	target_ulong pc_start ;	13:4:311:332	4201639	2	True				
ANR	4201662	IdentifierDecl	pc_start		4201639	0					
ANR	4201663	IdentifierDeclType	target_ulong		4201639	0					
ANR	4201664	Identifier	pc_start		4201639	1					
ANR	4201665	IdentifierDeclStatement	uint16_t * gen_opc_end ;	15:4:339:360	4201639	3	True				
ANR	4201666	IdentifierDecl	* gen_opc_end		4201639	0					
ANR	4201667	IdentifierDeclType	uint16_t *		4201639	0					
ANR	4201668	Identifier	gen_opc_end		4201639	1					
ANR	4201669	IdentifierDeclStatement	CPUBreakpoint * bp ;	17:4:367:384	4201639	4	True				
ANR	4201670	IdentifierDecl	* bp		4201639	0					
ANR	4201671	IdentifierDeclType	CPUBreakpoint *		4201639	0					
ANR	4201672	Identifier	bp		4201639	1					
ANR	4201673	IdentifierDeclStatement	"int j , lj = - 1 ;"	19:4:391:405	4201639	5	True				
ANR	4201674	IdentifierDecl	j		4201639	0					
ANR	4201675	IdentifierDeclType	int		4201639	0					
ANR	4201676	Identifier	j		4201639	1					
ANR	4201677	IdentifierDecl	lj = - 1		4201639	1					
ANR	4201678	IdentifierDeclType	int		4201639	0					
ANR	4201679	Identifier	lj		4201639	1					
ANR	4201680	AssignmentExpression	lj = - 1		4201639	2		=			
ANR	4201681	Identifier	lj		4201639	0					
ANR	4201682	UnaryOperationExpression	- 1		4201639	1					
ANR	4201683	UnaryOperator	-		4201639	0					
ANR	4201684	PrimaryExpression	1		4201639	1					
ANR	4201685	IdentifierDeclStatement	int num_insns ;	21:4:412:425	4201639	6	True				
ANR	4201686	IdentifierDecl	num_insns		4201639	0					
ANR	4201687	IdentifierDeclType	int		4201639	0					
ANR	4201688	Identifier	num_insns		4201639	1					
ANR	4201689	IdentifierDeclStatement	int max_insns ;	23:4:432:445	4201639	7	True				
ANR	4201690	IdentifierDecl	max_insns		4201639	0					
ANR	4201691	IdentifierDeclType	int		4201639	0					
ANR	4201692	Identifier	max_insns		4201639	1					
ANR	4201693	ExpressionStatement	pc_start = tb -> pc	27:4:454:471	4201639	8	True				
ANR	4201694	AssignmentExpression	pc_start = tb -> pc		4201639	0		=			
ANR	4201695	Identifier	pc_start		4201639	0					
ANR	4201696	PtrMemberAccess	tb -> pc		4201639	1					
ANR	4201697	Identifier	tb		4201639	0					
ANR	4201698	Identifier	pc		4201639	1					
ANR	4201699	ExpressionStatement	gen_opc_end = gen_opc_buf + OPC_MAX_SIZE	29:4:478:518	4201639	9	True				
ANR	4201700	AssignmentExpression	gen_opc_end = gen_opc_buf + OPC_MAX_SIZE		4201639	0		=			
ANR	4201701	Identifier	gen_opc_end		4201639	0					
ANR	4201702	AdditiveExpression	gen_opc_buf + OPC_MAX_SIZE		4201639	1		+			
ANR	4201703	Identifier	gen_opc_buf		4201639	0					
ANR	4201704	Identifier	OPC_MAX_SIZE		4201639	1					
ANR	4201705	ExpressionStatement	ctx . nip = pc_start	31:4:525:543	4201639	10	True				
ANR	4201706	AssignmentExpression	ctx . nip = pc_start		4201639	0		=			
ANR	4201707	MemberAccess	ctx . nip		4201639	0					
ANR	4201708	Identifier	ctx		4201639	0					
ANR	4201709	Identifier	nip		4201639	1					
ANR	4201710	Identifier	pc_start		4201639	1					
ANR	4201711	ExpressionStatement	ctx . tb = tb	33:4:550:561	4201639	11	True				
ANR	4201712	AssignmentExpression	ctx . tb = tb		4201639	0		=			
ANR	4201713	MemberAccess	ctx . tb		4201639	0					
ANR	4201714	Identifier	ctx		4201639	0					
ANR	4201715	Identifier	tb		4201639	1					
ANR	4201716	Identifier	tb		4201639	1					
ANR	4201717	ExpressionStatement	ctx . exception = POWERPC_EXCP_NONE	35:4:568:601	4201639	12	True				
ANR	4201718	AssignmentExpression	ctx . exception = POWERPC_EXCP_NONE		4201639	0		=			
ANR	4201719	MemberAccess	ctx . exception		4201639	0					
ANR	4201720	Identifier	ctx		4201639	0					
ANR	4201721	Identifier	exception		4201639	1					
ANR	4201722	Identifier	POWERPC_EXCP_NONE		4201639	1					
ANR	4201723	ExpressionStatement	ctx . spr_cb = env -> spr_cb	37:4:608:632	4201639	13	True				
ANR	4201724	AssignmentExpression	ctx . spr_cb = env -> spr_cb		4201639	0		=			
ANR	4201725	MemberAccess	ctx . spr_cb		4201639	0					
ANR	4201726	Identifier	ctx		4201639	0					
ANR	4201727	Identifier	spr_cb		4201639	1					
ANR	4201728	PtrMemberAccess	env -> spr_cb		4201639	1					
ANR	4201729	Identifier	env		4201639	0					
ANR	4201730	Identifier	spr_cb		4201639	1					
ANR	4201731	ExpressionStatement	ctx . mem_idx = env -> mmu_idx	39:4:639:665	4201639	14	True				
ANR	4201732	AssignmentExpression	ctx . mem_idx = env -> mmu_idx		4201639	0		=			
ANR	4201733	MemberAccess	ctx . mem_idx		4201639	0					
ANR	4201734	Identifier	ctx		4201639	0					
ANR	4201735	Identifier	mem_idx		4201639	1					
ANR	4201736	PtrMemberAccess	env -> mmu_idx		4201639	1					
ANR	4201737	Identifier	env		4201639	0					
ANR	4201738	Identifier	mmu_idx		4201639	1					
ANR	4201739	ExpressionStatement	ctx . access_type = - 1	41:4:672:692	4201639	15	True				
ANR	4201740	AssignmentExpression	ctx . access_type = - 1		4201639	0		=			
ANR	4201741	MemberAccess	ctx . access_type		4201639	0					
ANR	4201742	Identifier	ctx		4201639	0					
ANR	4201743	Identifier	access_type		4201639	1					
ANR	4201744	UnaryOperationExpression	- 1		4201639	1					
ANR	4201745	UnaryOperator	-		4201639	0					
ANR	4201746	PrimaryExpression	1		4201639	1					
ANR	4201747	ExpressionStatement	ctx . le_mode = env -> hflags & ( 1 << MSR_LE ) ? 1 : 0	43:4:699:748	4201639	16	True				
ANR	4201748	AssignmentExpression	ctx . le_mode = env -> hflags & ( 1 << MSR_LE ) ? 1 : 0		4201639	0		=			
ANR	4201749	MemberAccess	ctx . le_mode		4201639	0					
ANR	4201750	Identifier	ctx		4201639	0					
ANR	4201751	Identifier	le_mode		4201639	1					
ANR	4201752	ConditionalExpression	env -> hflags & ( 1 << MSR_LE ) ? 1 : 0		4201639	1					
ANR	4201753	Condition	env -> hflags & ( 1 << MSR_LE )		4201639	0					
ANR	4201754	BitAndExpression	env -> hflags & ( 1 << MSR_LE )		4201639	0		&			
ANR	4201755	PtrMemberAccess	env -> hflags		4201639	0					
ANR	4201756	Identifier	env		4201639	0					
ANR	4201757	Identifier	hflags		4201639	1					
ANR	4201758	ShiftExpression	1 << MSR_LE		4201639	1		<<			
ANR	4201759	PrimaryExpression	1		4201639	0					
ANR	4201760	Identifier	MSR_LE		4201639	1					
ANR	4201761	PrimaryExpression	1		4201639	1					
ANR	4201762	PrimaryExpression	0		4201639	2					
ANR	4201763	ExpressionStatement	ctx . sf_mode = msr_sf	47:4:782:802	4201639	17	True				
ANR	4201764	AssignmentExpression	ctx . sf_mode = msr_sf		4201639	0		=			
ANR	4201765	MemberAccess	ctx . sf_mode		4201639	0					
ANR	4201766	Identifier	ctx		4201639	0					
ANR	4201767	Identifier	sf_mode		4201639	1					
ANR	4201768	Identifier	msr_sf		4201639	1					
ANR	4201769	ExpressionStatement	ctx . fpu_enabled = msr_fp	51:4:817:841	4201639	18	True				
ANR	4201770	AssignmentExpression	ctx . fpu_enabled = msr_fp		4201639	0		=			
ANR	4201771	MemberAccess	ctx . fpu_enabled		4201639	0					
ANR	4201772	Identifier	ctx		4201639	0					
ANR	4201773	Identifier	fpu_enabled		4201639	1					
ANR	4201774	Identifier	msr_fp		4201639	1					
ANR	4201775	IfStatement	if ( ( env -> flags & POWERPC_FLAG_SPE ) && msr_spe )		4201639	19					
ANR	4201776	Condition	( env -> flags & POWERPC_FLAG_SPE ) && msr_spe	53:8:852:893	4201639	0	True				
ANR	4201777	AndExpression	( env -> flags & POWERPC_FLAG_SPE ) && msr_spe		4201639	0		&&			
ANR	4201778	BitAndExpression	env -> flags & POWERPC_FLAG_SPE		4201639	0		&			
ANR	4201779	PtrMemberAccess	env -> flags		4201639	0					
ANR	4201780	Identifier	env		4201639	0					
ANR	4201781	Identifier	flags		4201639	1					
ANR	4201782	Identifier	POWERPC_FLAG_SPE		4201639	1					
ANR	4201783	Identifier	msr_spe		4201639	1					
ANR	4201784	ExpressionStatement	ctx . spe_enabled = msr_spe	55:8:905:930	4201639	1	True				
ANR	4201785	AssignmentExpression	ctx . spe_enabled = msr_spe		4201639	0		=			
ANR	4201786	MemberAccess	ctx . spe_enabled		4201639	0					
ANR	4201787	Identifier	ctx		4201639	0					
ANR	4201788	Identifier	spe_enabled		4201639	1					
ANR	4201789	Identifier	msr_spe		4201639	1					
ANR	4201790	ElseStatement	else		4201639	0					
ANR	4201791	ExpressionStatement	ctx . spe_enabled = 0	59:8:951:970	4201639	0	True				
ANR	4201792	AssignmentExpression	ctx . spe_enabled = 0		4201639	0		=			
ANR	4201793	MemberAccess	ctx . spe_enabled		4201639	0					
ANR	4201794	Identifier	ctx		4201639	0					
ANR	4201795	Identifier	spe_enabled		4201639	1					
ANR	4201796	PrimaryExpression	0		4201639	1					
ANR	4201797	IfStatement	if ( ( env -> flags & POWERPC_FLAG_VRE ) && msr_vr )		4201639	20					
ANR	4201798	Condition	( env -> flags & POWERPC_FLAG_VRE ) && msr_vr	61:8:981:1021	4201639	0	True				
ANR	4201799	AndExpression	( env -> flags & POWERPC_FLAG_VRE ) && msr_vr		4201639	0		&&			
ANR	4201800	BitAndExpression	env -> flags & POWERPC_FLAG_VRE		4201639	0		&			
ANR	4201801	PtrMemberAccess	env -> flags		4201639	0					
ANR	4201802	Identifier	env		4201639	0					
ANR	4201803	Identifier	flags		4201639	1					
ANR	4201804	Identifier	POWERPC_FLAG_VRE		4201639	1					
ANR	4201805	Identifier	msr_vr		4201639	1					
ANR	4201806	ExpressionStatement	ctx . altivec_enabled = msr_vr	63:8:1033:1061	4201639	1	True				
ANR	4201807	AssignmentExpression	ctx . altivec_enabled = msr_vr		4201639	0		=			
ANR	4201808	MemberAccess	ctx . altivec_enabled		4201639	0					
ANR	4201809	Identifier	ctx		4201639	0					
ANR	4201810	Identifier	altivec_enabled		4201639	1					
ANR	4201811	Identifier	msr_vr		4201639	1					
ANR	4201812	ElseStatement	else		4201639	0					
ANR	4201813	ExpressionStatement	ctx . altivec_enabled = 0	67:8:1082:1105	4201639	0	True				
ANR	4201814	AssignmentExpression	ctx . altivec_enabled = 0		4201639	0		=			
ANR	4201815	MemberAccess	ctx . altivec_enabled		4201639	0					
ANR	4201816	Identifier	ctx		4201639	0					
ANR	4201817	Identifier	altivec_enabled		4201639	1					
ANR	4201818	PrimaryExpression	0		4201639	1					
ANR	4201819	IfStatement	if ( ( env -> flags & POWERPC_FLAG_SE ) && msr_se )		4201639	21					
ANR	4201820	Condition	( env -> flags & POWERPC_FLAG_SE ) && msr_se	69:8:1116:1155	4201639	0	True				
ANR	4201821	AndExpression	( env -> flags & POWERPC_FLAG_SE ) && msr_se		4201639	0		&&			
ANR	4201822	BitAndExpression	env -> flags & POWERPC_FLAG_SE		4201639	0		&			
ANR	4201823	PtrMemberAccess	env -> flags		4201639	0					
ANR	4201824	Identifier	env		4201639	0					
ANR	4201825	Identifier	flags		4201639	1					
ANR	4201826	Identifier	POWERPC_FLAG_SE		4201639	1					
ANR	4201827	Identifier	msr_se		4201639	1					
ANR	4201828	ExpressionStatement	ctx . singlestep_enabled = CPU_SINGLE_STEP	71:8:1167:1207	4201639	1	True				
ANR	4201829	AssignmentExpression	ctx . singlestep_enabled = CPU_SINGLE_STEP		4201639	0		=			
ANR	4201830	MemberAccess	ctx . singlestep_enabled		4201639	0					
ANR	4201831	Identifier	ctx		4201639	0					
ANR	4201832	Identifier	singlestep_enabled		4201639	1					
ANR	4201833	Identifier	CPU_SINGLE_STEP		4201639	1					
ANR	4201834	ElseStatement	else		4201639	0					
ANR	4201835	ExpressionStatement	ctx . singlestep_enabled = 0	75:8:1228:1254	4201639	0	True				
ANR	4201836	AssignmentExpression	ctx . singlestep_enabled = 0		4201639	0		=			
ANR	4201837	MemberAccess	ctx . singlestep_enabled		4201639	0					
ANR	4201838	Identifier	ctx		4201639	0					
ANR	4201839	Identifier	singlestep_enabled		4201639	1					
ANR	4201840	PrimaryExpression	0		4201639	1					
ANR	4201841	IfStatement	if ( ( env -> flags & POWERPC_FLAG_BE ) && msr_be )		4201639	22					
ANR	4201842	Condition	( env -> flags & POWERPC_FLAG_BE ) && msr_be	77:8:1265:1304	4201639	0	True				
ANR	4201843	AndExpression	( env -> flags & POWERPC_FLAG_BE ) && msr_be		4201639	0		&&			
ANR	4201844	BitAndExpression	env -> flags & POWERPC_FLAG_BE		4201639	0		&			
ANR	4201845	PtrMemberAccess	env -> flags		4201639	0					
ANR	4201846	Identifier	env		4201639	0					
ANR	4201847	Identifier	flags		4201639	1					
ANR	4201848	Identifier	POWERPC_FLAG_BE		4201639	1					
ANR	4201849	Identifier	msr_be		4201639	1					
ANR	4201850	ExpressionStatement	ctx . singlestep_enabled |= CPU_BRANCH_STEP	79:8:1316:1357	4201639	1	True				
ANR	4201851	AssignmentExpression	ctx . singlestep_enabled |= CPU_BRANCH_STEP		4201639	0		|=			
ANR	4201852	MemberAccess	ctx . singlestep_enabled		4201639	0					
ANR	4201853	Identifier	ctx		4201639	0					
ANR	4201854	Identifier	singlestep_enabled		4201639	1					
ANR	4201855	Identifier	CPU_BRANCH_STEP		4201639	1					
ANR	4201856	IfStatement	if ( unlikely ( env -> singlestep_enabled ) )		4201639	23					
ANR	4201857	Condition	unlikely ( env -> singlestep_enabled )	81:8:1368:1400	4201639	0	True				
ANR	4201858	CallExpression	unlikely ( env -> singlestep_enabled )		4201639	0					
ANR	4201859	Callee	unlikely		4201639	0					
ANR	4201860	Identifier	unlikely		4201639	0					
ANR	4201861	ArgumentList	env -> singlestep_enabled		4201639	1					
ANR	4201862	Argument	env -> singlestep_enabled		4201639	0					
ANR	4201863	PtrMemberAccess	env -> singlestep_enabled		4201639	0					
ANR	4201864	Identifier	env		4201639	0					
ANR	4201865	Identifier	singlestep_enabled		4201639	1					
ANR	4201866	ExpressionStatement	ctx . singlestep_enabled |= GDBSTUB_SINGLE_STEP	83:8:1412:1457	4201639	1	True				
ANR	4201867	AssignmentExpression	ctx . singlestep_enabled |= GDBSTUB_SINGLE_STEP		4201639	0		|=			
ANR	4201868	MemberAccess	ctx . singlestep_enabled		4201639	0					
ANR	4201869	Identifier	ctx		4201639	0					
ANR	4201870	Identifier	singlestep_enabled		4201639	1					
ANR	4201871	Identifier	GDBSTUB_SINGLE_STEP		4201639	1					
ANR	4201872	ExpressionStatement	msr_se = 1	89:4:1533:1543	4201639	24	True				
ANR	4201873	AssignmentExpression	msr_se = 1		4201639	0		=			
ANR	4201874	Identifier	msr_se		4201639	0					
ANR	4201875	PrimaryExpression	1		4201639	1					
ANR	4201876	ExpressionStatement	num_insns = 0	93:4:1558:1571	4201639	25	True				
ANR	4201877	AssignmentExpression	num_insns = 0		4201639	0		=			
ANR	4201878	Identifier	num_insns		4201639	0					
ANR	4201879	PrimaryExpression	0		4201639	1					
ANR	4201880	ExpressionStatement	max_insns = tb -> cflags & CF_COUNT_MASK	95:4:1578:1616	4201639	26	True				
ANR	4201881	AssignmentExpression	max_insns = tb -> cflags & CF_COUNT_MASK		4201639	0		=			
ANR	4201882	Identifier	max_insns		4201639	0					
ANR	4201883	BitAndExpression	tb -> cflags & CF_COUNT_MASK		4201639	1		&			
ANR	4201884	PtrMemberAccess	tb -> cflags		4201639	0					
ANR	4201885	Identifier	tb		4201639	0					
ANR	4201886	Identifier	cflags		4201639	1					
ANR	4201887	Identifier	CF_COUNT_MASK		4201639	1					
ANR	4201888	IfStatement	if ( max_insns == 0 )		4201639	27					
ANR	4201889	Condition	max_insns == 0	97:8:1627:1640	4201639	0	True				
ANR	4201890	EqualityExpression	max_insns == 0		4201639	0		==			
ANR	4201891	Identifier	max_insns		4201639	0					
ANR	4201892	PrimaryExpression	0		4201639	1					
ANR	4201893	ExpressionStatement	max_insns = CF_COUNT_MASK	99:8:1652:1677	4201639	1	True				
ANR	4201894	AssignmentExpression	max_insns = CF_COUNT_MASK		4201639	0		=			
ANR	4201895	Identifier	max_insns		4201639	0					
ANR	4201896	Identifier	CF_COUNT_MASK		4201639	1					
ANR	4201897	ExpressionStatement	gen_icount_start ( )	103:4:1686:1704	4201639	28	True				
ANR	4201898	CallExpression	gen_icount_start ( )		4201639	0					
ANR	4201899	Callee	gen_icount_start		4201639	0					
ANR	4201900	Identifier	gen_icount_start		4201639	0					
ANR	4201901	ArgumentList			4201639	1					
ANR	4201902	WhileStatement	while ( ctx . exception == POWERPC_EXCP_NONE && gen_opc_ptr < gen_opc_end )		4201639	29					
ANR	4201903	Condition	ctx . exception == POWERPC_EXCP_NONE && gen_opc_ptr < gen_opc_end	107:11:1775:1837	4201639	0	True				
ANR	4201904	AndExpression	ctx . exception == POWERPC_EXCP_NONE && gen_opc_ptr < gen_opc_end		4201639	0		&&			
ANR	4201905	EqualityExpression	ctx . exception == POWERPC_EXCP_NONE		4201639	0		==			
ANR	4201906	MemberAccess	ctx . exception		4201639	0					
ANR	4201907	Identifier	ctx		4201639	0					
ANR	4201908	Identifier	exception		4201639	1					
ANR	4201909	Identifier	POWERPC_EXCP_NONE		4201639	1					
ANR	4201910	RelationalExpression	gen_opc_ptr < gen_opc_end		4201639	1		<			
ANR	4201911	Identifier	gen_opc_ptr		4201639	0					
ANR	4201912	Identifier	gen_opc_end		4201639	1					
ANR	4201913	CompoundStatement		101:76:1610:1610	4201639	1					
ANR	4201914	IfStatement	if ( unlikely ( ! TAILQ_EMPTY ( & env -> breakpoints ) ) )		4201639	0					
ANR	4201915	Condition	unlikely ( ! TAILQ_EMPTY ( & env -> breakpoints ) )	109:12:1855:1895	4201639	0	True				
ANR	4201916	CallExpression	unlikely ( ! TAILQ_EMPTY ( & env -> breakpoints ) )		4201639	0					
ANR	4201917	Callee	unlikely		4201639	0					
ANR	4201918	Identifier	unlikely		4201639	0					
ANR	4201919	ArgumentList	! TAILQ_EMPTY ( & env -> breakpoints )		4201639	1					
ANR	4201920	Argument	! TAILQ_EMPTY ( & env -> breakpoints )		4201639	0					
ANR	4201921	UnaryOperationExpression	! TAILQ_EMPTY ( & env -> breakpoints )		4201639	0					
ANR	4201922	UnaryOperator	!		4201639	0					
ANR	4201923	CallExpression	TAILQ_EMPTY ( & env -> breakpoints )		4201639	1					
ANR	4201924	Callee	TAILQ_EMPTY		4201639	0					
ANR	4201925	Identifier	TAILQ_EMPTY		4201639	0					
ANR	4201926	ArgumentList	& env -> breakpoints		4201639	1					
ANR	4201927	Argument	& env -> breakpoints		4201639	0					
ANR	4201928	UnaryOperationExpression	& env -> breakpoints		4201639	0					
ANR	4201929	UnaryOperator	&		4201639	0					
ANR	4201930	PtrMemberAccess	env -> breakpoints		4201639	1					
ANR	4201931	Identifier	env		4201639	0					
ANR	4201932	Identifier	breakpoints		4201639	1					
ANR	4201933	CompoundStatement		103:55:1668:1668	4201639	1					
ANR	4201934	Statement	TAILQ_FOREACH	111:12:1913:1925	4201639	0	True				
ANR	4201935	Statement	(	111:25:1926:1926	4201639	1	True				
ANR	4201936	Statement	bp	111:26:1927:1928	4201639	2	True				
ANR	4201937	Statement	","	111:28:1929:1929	4201639	3	True				
ANR	4201938	Statement	&	111:30:1931:1931	4201639	4	True				
ANR	4201939	Statement	env	111:31:1932:1934	4201639	5	True				
ANR	4201940	Statement	->	111:34:1935:1936	4201639	6	True				
ANR	4201941	Statement	breakpoints	111:36:1937:1947	4201639	7	True				
ANR	4201942	Statement	","	111:47:1948:1948	4201639	8	True				
ANR	4201943	Statement	entry	111:49:1950:1954	4201639	9	True				
ANR	4201944	Statement	)	111:54:1955:1955	4201639	10	True				
ANR	4201945	CompoundStatement		105:56:1727:1727	4201639	11					
ANR	4201946	IfStatement	if ( bp -> pc == ctx . nip )		4201639	0					
ANR	4201947	Condition	bp -> pc == ctx . nip	113:20:1980:1996	4201639	0	True				
ANR	4201948	EqualityExpression	bp -> pc == ctx . nip		4201639	0		==			
ANR	4201949	PtrMemberAccess	bp -> pc		4201639	0					
ANR	4201950	Identifier	bp		4201639	0					
ANR	4201951	Identifier	pc		4201639	1					
ANR	4201952	MemberAccess	ctx . nip		4201639	1					
ANR	4201953	Identifier	ctx		4201639	0					
ANR	4201954	Identifier	nip		4201639	1					
ANR	4201955	CompoundStatement		107:39:1769:1769	4201639	1					
ANR	4201956	ExpressionStatement	gen_debug_exception ( ctxp )	115:20:2022:2047	4201639	0	True				
ANR	4201957	CallExpression	gen_debug_exception ( ctxp )		4201639	0					
ANR	4201958	Callee	gen_debug_exception		4201639	0					
ANR	4201959	Identifier	gen_debug_exception		4201639	0					
ANR	4201960	ArgumentList	ctxp		4201639	1					
ANR	4201961	Argument	ctxp		4201639	0					
ANR	4201962	Identifier	ctxp		4201639	0					
ANR	4201963	BreakStatement	break ;	117:20:2070:2075	4201639	1	True				
ANR	4201964	IfStatement	if ( unlikely ( search_pc ) )		4201639	1					
ANR	4201965	Condition	unlikely ( search_pc )	125:12:2135:2153	4201639	0	True				
ANR	4201966	CallExpression	unlikely ( search_pc )		4201639	0					
ANR	4201967	Callee	unlikely		4201639	0					
ANR	4201968	Identifier	unlikely		4201639	0					
ANR	4201969	ArgumentList	search_pc		4201639	1					
ANR	4201970	Argument	search_pc		4201639	0					
ANR	4201971	Identifier	search_pc		4201639	0					
ANR	4201972	CompoundStatement		119:33:1926:1926	4201639	1					
ANR	4201973	ExpressionStatement	j = gen_opc_ptr - gen_opc_buf	127:12:2171:2200	4201639	0	True				
ANR	4201974	AssignmentExpression	j = gen_opc_ptr - gen_opc_buf		4201639	0		=			
ANR	4201975	Identifier	j		4201639	0					
ANR	4201976	AdditiveExpression	gen_opc_ptr - gen_opc_buf		4201639	1		-			
ANR	4201977	Identifier	gen_opc_ptr		4201639	0					
ANR	4201978	Identifier	gen_opc_buf		4201639	1					
ANR	4201979	IfStatement	if ( lj < j )		4201639	1					
ANR	4201980	Condition	lj < j	129:16:2219:2224	4201639	0	True				
ANR	4201981	RelationalExpression	lj < j		4201639	0		<			
ANR	4201982	Identifier	lj		4201639	0					
ANR	4201983	Identifier	j		4201639	1					
ANR	4201984	CompoundStatement		123:24:1997:1997	4201639	1					
ANR	4201985	ExpressionStatement	lj ++	131:16:2246:2250	4201639	0	True				
ANR	4201986	PostIncDecOperationExpression	lj ++		4201639	0					
ANR	4201987	Identifier	lj		4201639	0					
ANR	4201988	IncDec	++		4201639	1					
ANR	4201989	WhileStatement	while ( lj < j )		4201639	1					
ANR	4201990	Condition	lj < j	133:23:2276:2281	4201639	0	True				
ANR	4201991	RelationalExpression	lj < j		4201639	0		<			
ANR	4201992	Identifier	lj		4201639	0					
ANR	4201993	Identifier	j		4201639	1					
ANR	4201994	ExpressionStatement	gen_opc_instr_start [ lj ++ ] = 0	135:20:2305:2334	4201639	1	True				
ANR	4201995	AssignmentExpression	gen_opc_instr_start [ lj ++ ] = 0		4201639	0		=			
ANR	4201996	ArrayIndexing	gen_opc_instr_start [ lj ++ ]		4201639	0					
ANR	4201997	Identifier	gen_opc_instr_start		4201639	0					
ANR	4201998	PostIncDecOperationExpression	lj ++		4201639	1					
ANR	4201999	Identifier	lj		4201639	0					
ANR	4202000	IncDec	++		4201639	1					
ANR	4202001	PrimaryExpression	0		4201639	1					
ANR	4202002	ExpressionStatement	gen_opc_pc [ lj ] = ctx . nip	137:16:2353:2377	4201639	2	True				
ANR	4202003	AssignmentExpression	gen_opc_pc [ lj ] = ctx . nip		4201639	0		=			
ANR	4202004	ArrayIndexing	gen_opc_pc [ lj ]		4201639	0					
ANR	4202005	Identifier	gen_opc_pc		4201639	0					
ANR	4202006	Identifier	lj		4201639	1					
ANR	4202007	MemberAccess	ctx . nip		4201639	1					
ANR	4202008	Identifier	ctx		4201639	0					
ANR	4202009	Identifier	nip		4201639	1					
ANR	4202010	ExpressionStatement	gen_opc_instr_start [ lj ] = 1	139:16:2396:2423	4201639	3	True				
ANR	4202011	AssignmentExpression	gen_opc_instr_start [ lj ] = 1		4201639	0		=			
ANR	4202012	ArrayIndexing	gen_opc_instr_start [ lj ]		4201639	0					
ANR	4202013	Identifier	gen_opc_instr_start		4201639	0					
ANR	4202014	Identifier	lj		4201639	1					
ANR	4202015	PrimaryExpression	1		4201639	1					
ANR	4202016	ExpressionStatement	gen_opc_icount [ lj ] = num_insns	141:16:2442:2472	4201639	4	True				
ANR	4202017	AssignmentExpression	gen_opc_icount [ lj ] = num_insns		4201639	0		=			
ANR	4202018	ArrayIndexing	gen_opc_icount [ lj ]		4201639	0					
ANR	4202019	Identifier	gen_opc_icount		4201639	0					
ANR	4202020	Identifier	lj		4201639	1					
ANR	4202021	Identifier	num_insns		4201639	1					
ANR	4202022	ExpressionStatement	"LOG_DISAS ( ""----------------\\n"" )"	147:8:2509:2540	4201639	2	True				
ANR	4202023	CallExpression	"LOG_DISAS ( ""----------------\\n"" )"		4201639	0					
ANR	4202024	Callee	LOG_DISAS		4201639	0					
ANR	4202025	Identifier	LOG_DISAS		4201639	0					
ANR	4202026	ArgumentList	"""----------------\\n"""		4201639	1					
ANR	4202027	Argument	"""----------------\\n"""		4201639	0					
ANR	4202028	PrimaryExpression	"""----------------\\n"""		4201639	0					
ANR	4202029	Statement	LOG_DISAS	149:8:2551:2559	4201639	3	True				
ANR	4202030	Statement	(	149:17:2560:2560	4201639	4	True				
ANR	4202031	Statement	"""nip="""	149:18:2561:2566	4201639	5	True				
ANR	4202032	Statement	ADDRX	149:25:2568:2572	4201639	6	True				
ANR	4202033	Statement	""" super=%d ir=%d\\n"""	149:31:2574:2592	4201639	7	True				
ANR	4202034	Statement	","	149:50:2593:2593	4201639	8	True				
ANR	4202035	Statement	ctx	151:18:2614:2616	4201639	9	True				
ANR	4202036	Statement	.	151:21:2617:2617	4201639	10	True				
ANR	4202037	Statement	nip	151:22:2618:2620	4201639	11	True				
ANR	4202038	Statement	","	151:25:2621:2621	4201639	12	True				
ANR	4202039	Statement	ctx	151:27:2623:2625	4201639	13	True				
ANR	4202040	Statement	.	151:30:2626:2626	4201639	14	True				
ANR	4202041	Statement	mem_idx	151:31:2627:2633	4201639	15	True				
ANR	4202042	Statement	","	151:38:2634:2634	4201639	16	True				
ANR	4202043	Statement	(	151:40:2636:2636	4201639	17	True				
ANR	4202044	Statement	int	151:41:2637:2639	4201639	18	True				
ANR	4202045	Statement	)	151:44:2640:2640	4201639	19	True				
ANR	4202046	Statement	msr_ir	151:45:2641:2646	4201639	20	True				
ANR	4202047	Statement	)	151:51:2647:2647	4201639	21	True				
ANR	4202048	ExpressionStatement		151:52:2648:2648	4201639	22	True				
ANR	4202049	IfStatement	if ( num_insns + 1 == max_insns && ( tb -> cflags & CF_LAST_IO ) )		4201639	23					
ANR	4202050	Condition	num_insns + 1 == max_insns && ( tb -> cflags & CF_LAST_IO )	153:12:2663:2717	4201639	0	True				
ANR	4202051	AndExpression	num_insns + 1 == max_insns && ( tb -> cflags & CF_LAST_IO )		4201639	0		&&			
ANR	4202052	EqualityExpression	num_insns + 1 == max_insns		4201639	0		==			
ANR	4202053	AdditiveExpression	num_insns + 1		4201639	0		+			
ANR	4202054	Identifier	num_insns		4201639	0					
ANR	4202055	PrimaryExpression	1		4201639	1					
ANR	4202056	Identifier	max_insns		4201639	1					
ANR	4202057	BitAndExpression	tb -> cflags & CF_LAST_IO		4201639	1		&			
ANR	4202058	PtrMemberAccess	tb -> cflags		4201639	0					
ANR	4202059	Identifier	tb		4201639	0					
ANR	4202060	Identifier	cflags		4201639	1					
ANR	4202061	Identifier	CF_LAST_IO		4201639	1					
ANR	4202062	ExpressionStatement	gen_io_start ( )	155:12:2733:2747	4201639	1	True				
ANR	4202063	CallExpression	gen_io_start ( )		4201639	0					
ANR	4202064	Callee	gen_io_start		4201639	0					
ANR	4202065	Identifier	gen_io_start		4201639	0					
ANR	4202066	ArgumentList			4201639	1					
ANR	4202067	IfStatement	if ( unlikely ( ctx . le_mode ) )		4201639	24					
ANR	4202068	Condition	unlikely ( ctx . le_mode )	157:12:2762:2782	4201639	0	True				
ANR	4202069	CallExpression	unlikely ( ctx . le_mode )		4201639	0					
ANR	4202070	Callee	unlikely		4201639	0					
ANR	4202071	Identifier	unlikely		4201639	0					
ANR	4202072	ArgumentList	ctx . le_mode		4201639	1					
ANR	4202073	Argument	ctx . le_mode		4201639	0					
ANR	4202074	MemberAccess	ctx . le_mode		4201639	0					
ANR	4202075	Identifier	ctx		4201639	0					
ANR	4202076	Identifier	le_mode		4201639	1					
ANR	4202077	CompoundStatement		151:35:2555:2555	4201639	1					
ANR	4202078	ExpressionStatement	ctx . opcode = bswap32 ( ldl_code ( ctx . nip ) )	159:12:2800:2839	4201639	0	True				
ANR	4202079	AssignmentExpression	ctx . opcode = bswap32 ( ldl_code ( ctx . nip ) )		4201639	0		=			
ANR	4202080	MemberAccess	ctx . opcode		4201639	0					
ANR	4202081	Identifier	ctx		4201639	0					
ANR	4202082	Identifier	opcode		4201639	1					
ANR	4202083	CallExpression	bswap32 ( ldl_code ( ctx . nip ) )		4201639	1					
ANR	4202084	Callee	bswap32		4201639	0					
ANR	4202085	Identifier	bswap32		4201639	0					
ANR	4202086	ArgumentList	ldl_code ( ctx . nip )		4201639	1					
ANR	4202087	Argument	ldl_code ( ctx . nip )		4201639	0					
ANR	4202088	CallExpression	ldl_code ( ctx . nip )		4201639	0					
ANR	4202089	Callee	ldl_code		4201639	0					
ANR	4202090	Identifier	ldl_code		4201639	0					
ANR	4202091	ArgumentList	ctx . nip		4201639	1					
ANR	4202092	Argument	ctx . nip		4201639	0					
ANR	4202093	MemberAccess	ctx . nip		4201639	0					
ANR	4202094	Identifier	ctx		4201639	0					
ANR	4202095	Identifier	nip		4201639	1					
ANR	4202096	ElseStatement	else		4201639	0					
ANR	4202097	CompoundStatement		155:15:2627:2627	4201639	0					
ANR	4202098	ExpressionStatement	ctx . opcode = ldl_code ( ctx . nip )	163:12:2872:2902	4201639	0	True				
ANR	4202099	AssignmentExpression	ctx . opcode = ldl_code ( ctx . nip )		4201639	0		=			
ANR	4202100	MemberAccess	ctx . opcode		4201639	0					
ANR	4202101	Identifier	ctx		4201639	0					
ANR	4202102	Identifier	opcode		4201639	1					
ANR	4202103	CallExpression	ldl_code ( ctx . nip )		4201639	1					
ANR	4202104	Callee	ldl_code		4201639	0					
ANR	4202105	Identifier	ldl_code		4201639	0					
ANR	4202106	ArgumentList	ctx . nip		4201639	1					
ANR	4202107	Argument	ctx . nip		4201639	0					
ANR	4202108	MemberAccess	ctx . nip		4201639	0					
ANR	4202109	Identifier	ctx		4201639	0					
ANR	4202110	Identifier	nip		4201639	1					
ANR	4202111	ExpressionStatement	"LOG_DISAS ( ""translate opcode %08x (%02x %02x %02x) (%s)\\n"" , ctx . opcode , opc1 ( ctx . opcode ) , opc2 ( ctx . opcode ) , opc3 ( ctx . opcode ) , little_endian ? ""little"" : ""big"" )"	167:8:2924:3124	4201639	25	True				
ANR	4202112	CallExpression	"LOG_DISAS ( ""translate opcode %08x (%02x %02x %02x) (%s)\\n"" , ctx . opcode , opc1 ( ctx . opcode ) , opc2 ( ctx . opcode ) , opc3 ( ctx . opcode ) , little_endian ? ""little"" : ""big"" )"		4201639	0					
ANR	4202113	Callee	LOG_DISAS		4201639	0					
ANR	4202114	Identifier	LOG_DISAS		4201639	0					
ANR	4202115	ArgumentList	"""translate opcode %08x (%02x %02x %02x) (%s)\\n"""		4201639	1					
ANR	4202116	Argument	"""translate opcode %08x (%02x %02x %02x) (%s)\\n"""		4201639	0					
ANR	4202117	PrimaryExpression	"""translate opcode %08x (%02x %02x %02x) (%s)\\n"""		4201639	0					
ANR	4202118	Argument	ctx . opcode		4201639	1					
ANR	4202119	MemberAccess	ctx . opcode		4201639	0					
ANR	4202120	Identifier	ctx		4201639	0					
ANR	4202121	Identifier	opcode		4201639	1					
ANR	4202122	Argument	opc1 ( ctx . opcode )		4201639	2					
ANR	4202123	CallExpression	opc1 ( ctx . opcode )		4201639	0					
ANR	4202124	Callee	opc1		4201639	0					
ANR	4202125	Identifier	opc1		4201639	0					
ANR	4202126	ArgumentList	ctx . opcode		4201639	1					
ANR	4202127	Argument	ctx . opcode		4201639	0					
ANR	4202128	MemberAccess	ctx . opcode		4201639	0					
ANR	4202129	Identifier	ctx		4201639	0					
ANR	4202130	Identifier	opcode		4201639	1					
ANR	4202131	Argument	opc2 ( ctx . opcode )		4201639	3					
ANR	4202132	CallExpression	opc2 ( ctx . opcode )		4201639	0					
ANR	4202133	Callee	opc2		4201639	0					
ANR	4202134	Identifier	opc2		4201639	0					
ANR	4202135	ArgumentList	ctx . opcode		4201639	1					
ANR	4202136	Argument	ctx . opcode		4201639	0					
ANR	4202137	MemberAccess	ctx . opcode		4201639	0					
ANR	4202138	Identifier	ctx		4201639	0					
ANR	4202139	Identifier	opcode		4201639	1					
ANR	4202140	Argument	opc3 ( ctx . opcode )		4201639	4					
ANR	4202141	CallExpression	opc3 ( ctx . opcode )		4201639	0					
ANR	4202142	Callee	opc3		4201639	0					
ANR	4202143	Identifier	opc3		4201639	0					
ANR	4202144	ArgumentList	ctx . opcode		4201639	1					
ANR	4202145	Argument	ctx . opcode		4201639	0					
ANR	4202146	MemberAccess	ctx . opcode		4201639	0					
ANR	4202147	Identifier	ctx		4201639	0					
ANR	4202148	Identifier	opcode		4201639	1					
ANR	4202149	Argument	"little_endian ? ""little"" : ""big"""		4201639	5					
ANR	4202150	ConditionalExpression	"little_endian ? ""little"" : ""big"""		4201639	0					
ANR	4202151	Condition	little_endian		4201639	0					
ANR	4202152	Identifier	little_endian		4201639	0					
ANR	4202153	PrimaryExpression	"""little"""		4201639	1					
ANR	4202154	PrimaryExpression	"""big"""		4201639	2					
ANR	4202155	ExpressionStatement	ctx . nip += 4	173:8:3135:3147	4201639	26	True				
ANR	4202156	AssignmentExpression	ctx . nip += 4		4201639	0		+=			
ANR	4202157	MemberAccess	ctx . nip		4201639	0					
ANR	4202158	Identifier	ctx		4201639	0					
ANR	4202159	Identifier	nip		4201639	1					
ANR	4202160	PrimaryExpression	4		4201639	1					
ANR	4202161	ExpressionStatement	table = env -> opcodes	175:8:3158:3178	4201639	27	True				
ANR	4202162	AssignmentExpression	table = env -> opcodes		4201639	0		=			
ANR	4202163	Identifier	table		4201639	0					
ANR	4202164	PtrMemberAccess	env -> opcodes		4201639	1					
ANR	4202165	Identifier	env		4201639	0					
ANR	4202166	Identifier	opcodes		4201639	1					
ANR	4202167	ExpressionStatement	num_insns ++	177:8:3189:3200	4201639	28	True				
ANR	4202168	PostIncDecOperationExpression	num_insns ++		4201639	0					
ANR	4202169	Identifier	num_insns		4201639	0					
ANR	4202170	IncDec	++		4201639	1					
ANR	4202171	ExpressionStatement	handler = table [ opc1 ( ctx . opcode ) ]	179:8:3211:3244	4201639	29	True				
ANR	4202172	AssignmentExpression	handler = table [ opc1 ( ctx . opcode ) ]		4201639	0		=			
ANR	4202173	Identifier	handler		4201639	0					
ANR	4202174	ArrayIndexing	table [ opc1 ( ctx . opcode ) ]		4201639	1					
ANR	4202175	Identifier	table		4201639	0					
ANR	4202176	CallExpression	opc1 ( ctx . opcode )		4201639	1					
ANR	4202177	Callee	opc1		4201639	0					
ANR	4202178	Identifier	opc1		4201639	0					
ANR	4202179	ArgumentList	ctx . opcode		4201639	1					
ANR	4202180	Argument	ctx . opcode		4201639	0					
ANR	4202181	MemberAccess	ctx . opcode		4201639	0					
ANR	4202182	Identifier	ctx		4201639	0					
ANR	4202183	Identifier	opcode		4201639	1					
ANR	4202184	IfStatement	if ( is_indirect_opcode ( handler ) )		4201639	30					
ANR	4202185	Condition	is_indirect_opcode ( handler )	181:12:3259:3285	4201639	0	True				
ANR	4202186	CallExpression	is_indirect_opcode ( handler )		4201639	0					
ANR	4202187	Callee	is_indirect_opcode		4201639	0					
ANR	4202188	Identifier	is_indirect_opcode		4201639	0					
ANR	4202189	ArgumentList	handler		4201639	1					
ANR	4202190	Argument	handler		4201639	0					
ANR	4202191	Identifier	handler		4201639	0					
ANR	4202192	CompoundStatement		175:41:3058:3058	4201639	1					
ANR	4202193	ExpressionStatement	table = ind_table ( handler )	183:12:3303:3329	4201639	0	True				
ANR	4202194	AssignmentExpression	table = ind_table ( handler )		4201639	0		=			
ANR	4202195	Identifier	table		4201639	0					
ANR	4202196	CallExpression	ind_table ( handler )		4201639	1					
ANR	4202197	Callee	ind_table		4201639	0					
ANR	4202198	Identifier	ind_table		4201639	0					
ANR	4202199	ArgumentList	handler		4201639	1					
ANR	4202200	Argument	handler		4201639	0					
ANR	4202201	Identifier	handler		4201639	0					
ANR	4202202	ExpressionStatement	handler = table [ opc2 ( ctx . opcode ) ]	185:12:3344:3377	4201639	1	True				
ANR	4202203	AssignmentExpression	handler = table [ opc2 ( ctx . opcode ) ]		4201639	0		=			
ANR	4202204	Identifier	handler		4201639	0					
ANR	4202205	ArrayIndexing	table [ opc2 ( ctx . opcode ) ]		4201639	1					
ANR	4202206	Identifier	table		4201639	0					
ANR	4202207	CallExpression	opc2 ( ctx . opcode )		4201639	1					
ANR	4202208	Callee	opc2		4201639	0					
ANR	4202209	Identifier	opc2		4201639	0					
ANR	4202210	ArgumentList	ctx . opcode		4201639	1					
ANR	4202211	Argument	ctx . opcode		4201639	0					
ANR	4202212	MemberAccess	ctx . opcode		4201639	0					
ANR	4202213	Identifier	ctx		4201639	0					
ANR	4202214	Identifier	opcode		4201639	1					
ANR	4202215	IfStatement	if ( is_indirect_opcode ( handler ) )		4201639	2					
ANR	4202216	Condition	is_indirect_opcode ( handler )	187:16:3396:3422	4201639	0	True				
ANR	4202217	CallExpression	is_indirect_opcode ( handler )		4201639	0					
ANR	4202218	Callee	is_indirect_opcode		4201639	0					
ANR	4202219	Identifier	is_indirect_opcode		4201639	0					
ANR	4202220	ArgumentList	handler		4201639	1					
ANR	4202221	Argument	handler		4201639	0					
ANR	4202222	Identifier	handler		4201639	0					
ANR	4202223	CompoundStatement		181:45:3195:3195	4201639	1					
ANR	4202224	ExpressionStatement	table = ind_table ( handler )	189:16:3444:3470	4201639	0	True				
ANR	4202225	AssignmentExpression	table = ind_table ( handler )		4201639	0		=			
ANR	4202226	Identifier	table		4201639	0					
ANR	4202227	CallExpression	ind_table ( handler )		4201639	1					
ANR	4202228	Callee	ind_table		4201639	0					
ANR	4202229	Identifier	ind_table		4201639	0					
ANR	4202230	ArgumentList	handler		4201639	1					
ANR	4202231	Argument	handler		4201639	0					
ANR	4202232	Identifier	handler		4201639	0					
ANR	4202233	ExpressionStatement	handler = table [ opc3 ( ctx . opcode ) ]	191:16:3489:3522	4201639	1	True				
ANR	4202234	AssignmentExpression	handler = table [ opc3 ( ctx . opcode ) ]		4201639	0		=			
ANR	4202235	Identifier	handler		4201639	0					
ANR	4202236	ArrayIndexing	table [ opc3 ( ctx . opcode ) ]		4201639	1					
ANR	4202237	Identifier	table		4201639	0					
ANR	4202238	CallExpression	opc3 ( ctx . opcode )		4201639	1					
ANR	4202239	Callee	opc3		4201639	0					
ANR	4202240	Identifier	opc3		4201639	0					
ANR	4202241	ArgumentList	ctx . opcode		4201639	1					
ANR	4202242	Argument	ctx . opcode		4201639	0					
ANR	4202243	MemberAccess	ctx . opcode		4201639	0					
ANR	4202244	Identifier	ctx		4201639	0					
ANR	4202245	Identifier	opcode		4201639	1					
ANR	4202246	IfStatement	if ( unlikely ( handler -> handler == & gen_invalid ) )		4201639	31					
ANR	4202247	Condition	unlikely ( handler -> handler == & gen_invalid )	199:12:3605:3646	4201639	0	True				
ANR	4202248	CallExpression	unlikely ( handler -> handler == & gen_invalid )		4201639	0					
ANR	4202249	Callee	unlikely		4201639	0					
ANR	4202250	Identifier	unlikely		4201639	0					
ANR	4202251	ArgumentList	handler -> handler == & gen_invalid		4201639	1					
ANR	4202252	Argument	handler -> handler == & gen_invalid		4201639	0					
ANR	4202253	EqualityExpression	handler -> handler == & gen_invalid		4201639	0		==			
ANR	4202254	PtrMemberAccess	handler -> handler		4201639	0					
ANR	4202255	Identifier	handler		4201639	0					
ANR	4202256	Identifier	handler		4201639	1					
ANR	4202257	UnaryOperationExpression	& gen_invalid		4201639	1					
ANR	4202258	UnaryOperator	&		4201639	0					
ANR	4202259	Identifier	gen_invalid		4201639	1					
ANR	4202260	CompoundStatement		193:56:3419:3419	4201639	1					
ANR	4202261	IfStatement	if ( qemu_log_enabled ( ) )		4201639	0					
ANR	4202262	Condition	qemu_log_enabled ( )	201:16:3668:3685	4201639	0	True				
ANR	4202263	CallExpression	qemu_log_enabled ( )		4201639	0					
ANR	4202264	Callee	qemu_log_enabled		4201639	0					
ANR	4202265	Identifier	qemu_log_enabled		4201639	0					
ANR	4202266	ArgumentList			4201639	1					
ANR	4202267	CompoundStatement		195:36:3458:3458	4201639	1					
ANR	4202268	Statement	qemu_log	203:16:3707:3714	4201639	0	True				
ANR	4202269	Statement	(	203:24:3715:3715	4201639	1	True				
ANR	4202270	Statement	"""invalid/unsupported opcode: """	203:25:3716:3745	4201639	2	True				
ANR	4202271	Statement	"""%02x - %02x - %02x (%08x) """	205:26:3774:3801	4201639	3	True				
ANR	4202272	Statement	ADDRX	205:55:3803:3807	4201639	4	True				
ANR	4202273	Statement	""" %d\\n"""	205:61:3809:3815	4201639	5	True				
ANR	4202274	Statement	","	205:68:3816:3816	4201639	6	True				
ANR	4202275	Statement	opc1	207:26:3845:3848	4201639	7	True				
ANR	4202276	Statement	(	207:30:3849:3849	4201639	8	True				
ANR	4202277	Statement	ctx	207:31:3850:3852	4201639	9	True				
ANR	4202278	Statement	.	207:34:3853:3853	4201639	10	True				
ANR	4202279	Statement	opcode	207:35:3854:3859	4201639	11	True				
ANR	4202280	Statement	)	207:41:3860:3860	4201639	12	True				
ANR	4202281	Statement	","	207:42:3861:3861	4201639	13	True				
ANR	4202282	Statement	opc2	207:44:3863:3866	4201639	14	True				
ANR	4202283	Statement	(	207:48:3867:3867	4201639	15	True				
ANR	4202284	Statement	ctx	207:49:3868:3870	4201639	16	True				
ANR	4202285	Statement	.	207:52:3871:3871	4201639	17	True				
ANR	4202286	Statement	opcode	207:53:3872:3877	4201639	18	True				
ANR	4202287	Statement	)	207:59:3878:3878	4201639	19	True				
ANR	4202288	Statement	","	207:60:3879:3879	4201639	20	True				
ANR	4202289	Statement	opc3	209:26:3908:3911	4201639	21	True				
ANR	4202290	Statement	(	209:30:3912:3912	4201639	22	True				
ANR	4202291	Statement	ctx	209:31:3913:3915	4201639	23	True				
ANR	4202292	Statement	.	209:34:3916:3916	4201639	24	True				
ANR	4202293	Statement	opcode	209:35:3917:3922	4201639	25	True				
ANR	4202294	Statement	)	209:41:3923:3923	4201639	26	True				
ANR	4202295	Statement	","	209:42:3924:3924	4201639	27	True				
ANR	4202296	Statement	ctx	209:44:3926:3928	4201639	28	True				
ANR	4202297	Statement	.	209:47:3929:3929	4201639	29	True				
ANR	4202298	Statement	opcode	209:48:3930:3935	4201639	30	True				
ANR	4202299	Statement	","	209:54:3936:3936	4201639	31	True				
ANR	4202300	Statement	ctx	209:56:3938:3940	4201639	32	True				
ANR	4202301	Statement	.	209:59:3941:3941	4201639	33	True				
ANR	4202302	Statement	nip	209:60:3942:3944	4201639	34	True				
ANR	4202303	Statement	-	209:64:3946:3946	4201639	35	True				
ANR	4202304	Statement	4	209:66:3948:3948	4201639	36	True				
ANR	4202305	Statement	","	209:67:3949:3949	4201639	37	True				
ANR	4202306	Statement	(	209:69:3951:3951	4201639	38	True				
ANR	4202307	Statement	int	209:70:3952:3954	4201639	39	True				
ANR	4202308	Statement	)	209:73:3955:3955	4201639	40	True				
ANR	4202309	Statement	msr_ir	209:74:3956:3961	4201639	41	True				
ANR	4202310	Statement	)	209:80:3962:3962	4201639	42	True				
ANR	4202311	ExpressionStatement		209:81:3963:3963	4201639	43	True				
ANR	4202312	ElseStatement	else		4201639	0					
ANR	4202313	CompoundStatement		205:19:3755:3755	4201639	0					
ANR	4202314	Statement	printf	213:16:4004:4009	4201639	0	True				
ANR	4202315	Statement	(	213:22:4010:4010	4201639	1	True				
ANR	4202316	Statement	"""invalid/unsupported opcode: """	213:23:4011:4040	4201639	2	True				
ANR	4202317	Statement	"""%02x - %02x - %02x (%08x) """	215:23:4066:4093	4201639	3	True				
ANR	4202318	Statement	ADDRX	215:52:4095:4099	4201639	4	True				
ANR	4202319	Statement	""" %d\\n"""	215:58:4101:4107	4201639	5	True				
ANR	4202320	Statement	","	215:65:4108:4108	4201639	6	True				
ANR	4202321	Statement	opc1	217:23:4134:4137	4201639	7	True				
ANR	4202322	Statement	(	217:27:4138:4138	4201639	8	True				
ANR	4202323	Statement	ctx	217:28:4139:4141	4201639	9	True				
ANR	4202324	Statement	.	217:31:4142:4142	4201639	10	True				
ANR	4202325	Statement	opcode	217:32:4143:4148	4201639	11	True				
ANR	4202326	Statement	)	217:38:4149:4149	4201639	12	True				
ANR	4202327	Statement	","	217:39:4150:4150	4201639	13	True				
ANR	4202328	Statement	opc2	217:41:4152:4155	4201639	14	True				
ANR	4202329	Statement	(	217:45:4156:4156	4201639	15	True				
ANR	4202330	Statement	ctx	217:46:4157:4159	4201639	16	True				
ANR	4202331	Statement	.	217:49:4160:4160	4201639	17	True				
ANR	4202332	Statement	opcode	217:50:4161:4166	4201639	18	True				
ANR	4202333	Statement	)	217:56:4167:4167	4201639	19	True				
ANR	4202334	Statement	","	217:57:4168:4168	4201639	20	True				
ANR	4202335	Statement	opc3	219:23:4194:4197	4201639	21	True				
ANR	4202336	Statement	(	219:27:4198:4198	4201639	22	True				
ANR	4202337	Statement	ctx	219:28:4199:4201	4201639	23	True				
ANR	4202338	Statement	.	219:31:4202:4202	4201639	24	True				
ANR	4202339	Statement	opcode	219:32:4203:4208	4201639	25	True				
ANR	4202340	Statement	)	219:38:4209:4209	4201639	26	True				
ANR	4202341	Statement	","	219:39:4210:4210	4201639	27	True				
ANR	4202342	Statement	ctx	219:41:4212:4214	4201639	28	True				
ANR	4202343	Statement	.	219:44:4215:4215	4201639	29	True				
ANR	4202344	Statement	opcode	219:45:4216:4221	4201639	30	True				
ANR	4202345	Statement	","	219:51:4222:4222	4201639	31	True				
ANR	4202346	Statement	ctx	219:53:4224:4226	4201639	32	True				
ANR	4202347	Statement	.	219:56:4227:4227	4201639	33	True				
ANR	4202348	Statement	nip	219:57:4228:4230	4201639	34	True				
ANR	4202349	Statement	-	219:61:4232:4232	4201639	35	True				
ANR	4202350	Statement	4	219:63:4234:4234	4201639	36	True				
ANR	4202351	Statement	","	219:64:4235:4235	4201639	37	True				
ANR	4202352	Statement	(	219:66:4237:4237	4201639	38	True				
ANR	4202353	Statement	int	219:67:4238:4240	4201639	39	True				
ANR	4202354	Statement	)	219:70:4241:4241	4201639	40	True				
ANR	4202355	Statement	msr_ir	219:71:4242:4247	4201639	41	True				
ANR	4202356	Statement	)	219:77:4248:4248	4201639	42	True				
ANR	4202357	ExpressionStatement		219:78:4249:4249	4201639	43	True				
ANR	4202358	ElseStatement	else		4201639	0					
ANR	4202359	CompoundStatement		217:15:4052:4052	4201639	0					
ANR	4202360	IfStatement	if ( unlikely ( ( ctx . opcode & handler -> inval ) != 0 ) )		4201639	0					
ANR	4202361	Condition	unlikely ( ( ctx . opcode & handler -> inval ) != 0 )	225:16:4301:4344	4201639	0	True				
ANR	4202362	CallExpression	unlikely ( ( ctx . opcode & handler -> inval ) != 0 )		4201639	0					
ANR	4202363	Callee	unlikely		4201639	0					
ANR	4202364	Identifier	unlikely		4201639	0					
ANR	4202365	ArgumentList	( ctx . opcode & handler -> inval ) != 0		4201639	1					
ANR	4202366	Argument	( ctx . opcode & handler -> inval ) != 0		4201639	0					
ANR	4202367	EqualityExpression	( ctx . opcode & handler -> inval ) != 0		4201639	0		!=			
ANR	4202368	BitAndExpression	ctx . opcode & handler -> inval		4201639	0		&			
ANR	4202369	MemberAccess	ctx . opcode		4201639	0					
ANR	4202370	Identifier	ctx		4201639	0					
ANR	4202371	Identifier	opcode		4201639	1					
ANR	4202372	PtrMemberAccess	handler -> inval		4201639	1					
ANR	4202373	Identifier	handler		4201639	0					
ANR	4202374	Identifier	inval		4201639	1					
ANR	4202375	PrimaryExpression	0		4201639	1					
ANR	4202376	CompoundStatement		219:62:4117:4117	4201639	1					
ANR	4202377	IfStatement	if ( qemu_log_enabled ( ) )		4201639	0					
ANR	4202378	Condition	qemu_log_enabled ( )	227:20:4370:4387	4201639	0	True				
ANR	4202379	CallExpression	qemu_log_enabled ( )		4201639	0					
ANR	4202380	Callee	qemu_log_enabled		4201639	0					
ANR	4202381	Identifier	qemu_log_enabled		4201639	0					
ANR	4202382	ArgumentList			4201639	1					
ANR	4202383	CompoundStatement		221:40:4160:4160	4201639	1					
ANR	4202384	Statement	qemu_log	229:20:4413:4420	4201639	0	True				
ANR	4202385	Statement	(	229:28:4421:4421	4201639	1	True				
ANR	4202386	Statement	"""invalid bits: %08x for opcode: """	229:29:4422:4454	4201639	2	True				
ANR	4202387	Statement	"""%02x - %02x - %02x (%08x) """	231:30:4487:4514	4201639	3	True				
ANR	4202388	Statement	ADDRX	231:59:4516:4520	4201639	4	True				
ANR	4202389	Statement	"""\\n"""	231:65:4522:4525	4201639	5	True				
ANR	4202390	Statement	","	231:69:4526:4526	4201639	6	True				
ANR	4202391	Statement	ctx	233:30:4559:4561	4201639	7	True				
ANR	4202392	Statement	.	233:33:4562:4562	4201639	8	True				
ANR	4202393	Statement	opcode	233:34:4563:4568	4201639	9	True				
ANR	4202394	Statement	&	233:41:4570:4570	4201639	10	True				
ANR	4202395	Statement	handler	233:43:4572:4578	4201639	11	True				
ANR	4202396	Statement	->	233:50:4579:4580	4201639	12	True				
ANR	4202397	Statement	inval	233:52:4581:4585	4201639	13	True				
ANR	4202398	Statement	","	233:57:4586:4586	4201639	14	True				
ANR	4202399	Statement	opc1	233:59:4588:4591	4201639	15	True				
ANR	4202400	Statement	(	233:63:4592:4592	4201639	16	True				
ANR	4202401	Statement	ctx	233:64:4593:4595	4201639	17	True				
ANR	4202402	Statement	.	233:67:4596:4596	4201639	18	True				
ANR	4202403	Statement	opcode	233:68:4597:4602	4201639	19	True				
ANR	4202404	Statement	)	233:74:4603:4603	4201639	20	True				
ANR	4202405	Statement	","	233:75:4604:4604	4201639	21	True				
ANR	4202406	Statement	opc2	235:30:4637:4640	4201639	22	True				
ANR	4202407	Statement	(	235:34:4641:4641	4201639	23	True				
ANR	4202408	Statement	ctx	235:35:4642:4644	4201639	24	True				
ANR	4202409	Statement	.	235:38:4645:4645	4201639	25	True				
ANR	4202410	Statement	opcode	235:39:4646:4651	4201639	26	True				
ANR	4202411	Statement	)	235:45:4652:4652	4201639	27	True				
ANR	4202412	Statement	","	235:46:4653:4653	4201639	28	True				
ANR	4202413	Statement	opc3	235:48:4655:4658	4201639	29	True				
ANR	4202414	Statement	(	235:52:4659:4659	4201639	30	True				
ANR	4202415	Statement	ctx	235:53:4660:4662	4201639	31	True				
ANR	4202416	Statement	.	235:56:4663:4663	4201639	32	True				
ANR	4202417	Statement	opcode	235:57:4664:4669	4201639	33	True				
ANR	4202418	Statement	)	235:63:4670:4670	4201639	34	True				
ANR	4202419	Statement	","	235:64:4671:4671	4201639	35	True				
ANR	4202420	Statement	ctx	237:30:4704:4706	4201639	36	True				
ANR	4202421	Statement	.	237:33:4707:4707	4201639	37	True				
ANR	4202422	Statement	opcode	237:34:4708:4713	4201639	38	True				
ANR	4202423	Statement	","	237:40:4714:4714	4201639	39	True				
ANR	4202424	Statement	ctx	237:42:4716:4718	4201639	40	True				
ANR	4202425	Statement	.	237:45:4719:4719	4201639	41	True				
ANR	4202426	Statement	nip	237:46:4720:4722	4201639	42	True				
ANR	4202427	Statement	-	237:50:4724:4724	4201639	43	True				
ANR	4202428	Statement	4	237:52:4726:4726	4201639	44	True				
ANR	4202429	Statement	)	237:53:4727:4727	4201639	45	True				
ANR	4202430	ExpressionStatement		237:54:4728:4728	4201639	46	True				
ANR	4202431	ElseStatement	else		4201639	0					
ANR	4202432	CompoundStatement		233:23:4524:4524	4201639	0					
ANR	4202433	Statement	printf	241:20:4777:4782	4201639	0	True				
ANR	4202434	Statement	(	241:26:4783:4783	4201639	1	True				
ANR	4202435	Statement	"""invalid bits: %08x for opcode: """	241:27:4784:4816	4201639	2	True				
ANR	4202436	Statement	"""%02x - %02x - %02x (%08x) """	243:27:4846:4873	4201639	3	True				
ANR	4202437	Statement	ADDRX	243:56:4875:4879	4201639	4	True				
ANR	4202438	Statement	"""\\n"""	243:62:4881:4884	4201639	5	True				
ANR	4202439	Statement	","	243:66:4885:4885	4201639	6	True				
ANR	4202440	Statement	ctx	245:27:4915:4917	4201639	7	True				
ANR	4202441	Statement	.	245:30:4918:4918	4201639	8	True				
ANR	4202442	Statement	opcode	245:31:4919:4924	4201639	9	True				
ANR	4202443	Statement	&	245:38:4926:4926	4201639	10	True				
ANR	4202444	Statement	handler	245:40:4928:4934	4201639	11	True				
ANR	4202445	Statement	->	245:47:4935:4936	4201639	12	True				
ANR	4202446	Statement	inval	245:49:4937:4941	4201639	13	True				
ANR	4202447	Statement	","	245:54:4942:4942	4201639	14	True				
ANR	4202448	Statement	opc1	245:56:4944:4947	4201639	15	True				
ANR	4202449	Statement	(	245:60:4948:4948	4201639	16	True				
ANR	4202450	Statement	ctx	245:61:4949:4951	4201639	17	True				
ANR	4202451	Statement	.	245:64:4952:4952	4201639	18	True				
ANR	4202452	Statement	opcode	245:65:4953:4958	4201639	19	True				
ANR	4202453	Statement	)	245:71:4959:4959	4201639	20	True				
ANR	4202454	Statement	","	245:72:4960:4960	4201639	21	True				
ANR	4202455	Statement	opc2	247:27:4990:4993	4201639	22	True				
ANR	4202456	Statement	(	247:31:4994:4994	4201639	23	True				
ANR	4202457	Statement	ctx	247:32:4995:4997	4201639	24	True				
ANR	4202458	Statement	.	247:35:4998:4998	4201639	25	True				
ANR	4202459	Statement	opcode	247:36:4999:5004	4201639	26	True				
ANR	4202460	Statement	)	247:42:5005:5005	4201639	27	True				
ANR	4202461	Statement	","	247:43:5006:5006	4201639	28	True				
ANR	4202462	Statement	opc3	247:45:5008:5011	4201639	29	True				
ANR	4202463	Statement	(	247:49:5012:5012	4201639	30	True				
ANR	4202464	Statement	ctx	247:50:5013:5015	4201639	31	True				
ANR	4202465	Statement	.	247:53:5016:5016	4201639	32	True				
ANR	4202466	Statement	opcode	247:54:5017:5022	4201639	33	True				
ANR	4202467	Statement	)	247:60:5023:5023	4201639	34	True				
ANR	4202468	Statement	","	247:61:5024:5024	4201639	35	True				
ANR	4202469	Statement	ctx	249:27:5054:5056	4201639	36	True				
ANR	4202470	Statement	.	249:30:5057:5057	4201639	37	True				
ANR	4202471	Statement	opcode	249:31:5058:5063	4201639	38	True				
ANR	4202472	Statement	","	249:37:5064:5064	4201639	39	True				
ANR	4202473	Statement	ctx	249:39:5066:5068	4201639	40	True				
ANR	4202474	Statement	.	249:42:5069:5069	4201639	41	True				
ANR	4202475	Statement	nip	249:43:5070:5072	4201639	42	True				
ANR	4202476	Statement	-	249:47:5074:5074	4201639	43	True				
ANR	4202477	Statement	4	249:49:5076:5076	4201639	44	True				
ANR	4202478	Statement	)	249:50:5077:5077	4201639	45	True				
ANR	4202479	ExpressionStatement		249:51:5078:5078	4201639	46	True				
ANR	4202480	ExpressionStatement	"gen_inval_exception ( ctxp , POWERPC_EXCP_INVAL_INVAL )"	253:16:5116:5167	4201639	1	True				
ANR	4202481	CallExpression	"gen_inval_exception ( ctxp , POWERPC_EXCP_INVAL_INVAL )"		4201639	0					
ANR	4202482	Callee	gen_inval_exception		4201639	0					
ANR	4202483	Identifier	gen_inval_exception		4201639	0					
ANR	4202484	ArgumentList	ctxp		4201639	1					
ANR	4202485	Argument	ctxp		4201639	0					
ANR	4202486	Identifier	ctxp		4201639	0					
ANR	4202487	Argument	POWERPC_EXCP_INVAL_INVAL		4201639	1					
ANR	4202488	Identifier	POWERPC_EXCP_INVAL_INVAL		4201639	0					
ANR	4202489	BreakStatement	break ;	255:16:5186:5191	4201639	2	True				
ANR	4202490	ExpressionStatement	( * ( handler -> handler ) ) ( & ctx )	261:8:5228:5255	4201639	32	True				
ANR	4202491	CallExpression	( * ( handler -> handler ) ) ( & ctx )		4201639	0					
ANR	4202492	Callee	* ( handler -> handler )		4201639	0					
ANR	4202493	UnaryOperationExpression	* ( handler -> handler )		4201639	0					
ANR	4202494	UnaryOperator	*		4201639	0					
ANR	4202495	PtrMemberAccess	handler -> handler		4201639	1					
ANR	4202496	Identifier	handler		4201639	0					
ANR	4202497	Identifier	handler		4201639	1					
ANR	4202498	ArgumentList	& ctx		4201639	1					
ANR	4202499	Argument	& ctx		4201639	0					
ANR	4202500	UnaryOperationExpression	& ctx		4201639	0					
ANR	4202501	UnaryOperator	&		4201639	0					
ANR	4202502	Identifier	ctx		4201639	1					
ANR	4202503	ExpressionStatement	handler -> count ++	265:8:5298:5314	4201639	33	True				
ANR	4202504	PostIncDecOperationExpression	handler -> count ++		4201639	0					
ANR	4202505	PtrMemberAccess	handler -> count		4201639	0					
ANR	4202506	Identifier	handler		4201639	0					
ANR	4202507	Identifier	count		4201639	1					
ANR	4202508	IncDec	++		4201639	1					
ANR	4202509	IfStatement	if ( unlikely ( ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH ) )		4201639	34					
ANR	4202510	Condition	unlikely ( ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH )	271:12:5380:5672	4201639	0	True				
ANR	4202511	CallExpression	unlikely ( ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH )		4201639	0					
ANR	4202512	Callee	unlikely		4201639	0					
ANR	4202513	Identifier	unlikely		4201639	0					
ANR	4202514	ArgumentList	ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	1					
ANR	4202515	Argument	ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	0					
ANR	4202516	AndExpression	ctx . singlestep_enabled & CPU_SINGLE_STEP && ( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	0		&&			
ANR	4202517	BitAndExpression	ctx . singlestep_enabled & CPU_SINGLE_STEP		4201639	0		&			
ANR	4202518	MemberAccess	ctx . singlestep_enabled		4201639	0					
ANR	4202519	Identifier	ctx		4201639	0					
ANR	4202520	Identifier	singlestep_enabled		4201639	1					
ANR	4202521	Identifier	CPU_SINGLE_STEP		4201639	1					
ANR	4202522	AndExpression	( ctx . nip <= 0x100 || ctx . nip > 0xF00 ) && ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	1		&&			
ANR	4202523	OrExpression	ctx . nip <= 0x100 || ctx . nip > 0xF00		4201639	0		||			
ANR	4202524	RelationalExpression	ctx . nip <= 0x100		4201639	0		<=			
ANR	4202525	MemberAccess	ctx . nip		4201639	0					
ANR	4202526	Identifier	ctx		4201639	0					
ANR	4202527	Identifier	nip		4201639	1					
ANR	4202528	PrimaryExpression	0x100		4201639	1					
ANR	4202529	RelationalExpression	ctx . nip > 0xF00		4201639	1		>			
ANR	4202530	MemberAccess	ctx . nip		4201639	0					
ANR	4202531	Identifier	ctx		4201639	0					
ANR	4202532	Identifier	nip		4201639	1					
ANR	4202533	PrimaryExpression	0xF00		4201639	1					
ANR	4202534	AndExpression	ctx . exception != POWERPC_SYSCALL && ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	1		&&			
ANR	4202535	EqualityExpression	ctx . exception != POWERPC_SYSCALL		4201639	0		!=			
ANR	4202536	MemberAccess	ctx . exception		4201639	0					
ANR	4202537	Identifier	ctx		4201639	0					
ANR	4202538	Identifier	exception		4201639	1					
ANR	4202539	Identifier	POWERPC_SYSCALL		4201639	1					
ANR	4202540	AndExpression	ctx . exception != POWERPC_EXCP_TRAP && ctx . exception != POWERPC_EXCP_BRANCH		4201639	1		&&			
ANR	4202541	EqualityExpression	ctx . exception != POWERPC_EXCP_TRAP		4201639	0		!=			
ANR	4202542	MemberAccess	ctx . exception		4201639	0					
ANR	4202543	Identifier	ctx		4201639	0					
ANR	4202544	Identifier	exception		4201639	1					
ANR	4202545	Identifier	POWERPC_EXCP_TRAP		4201639	1					
ANR	4202546	EqualityExpression	ctx . exception != POWERPC_EXCP_BRANCH		4201639	1		!=			
ANR	4202547	MemberAccess	ctx . exception		4201639	0					
ANR	4202548	Identifier	ctx		4201639	0					
ANR	4202549	Identifier	exception		4201639	1					
ANR	4202550	Identifier	POWERPC_EXCP_BRANCH		4201639	1					
ANR	4202551	CompoundStatement		273:60:5445:5445	4201639	1					
ANR	4202552	ExpressionStatement	"gen_exception ( ctxp , POWERPC_EXCP_TRACE )"	281:12:5690:5729	4201639	0	True				
ANR	4202553	CallExpression	"gen_exception ( ctxp , POWERPC_EXCP_TRACE )"		4201639	0					
ANR	4202554	Callee	gen_exception		4201639	0					
ANR	4202555	Identifier	gen_exception		4201639	0					
ANR	4202556	ArgumentList	ctxp		4201639	1					
ANR	4202557	Argument	ctxp		4201639	0					
ANR	4202558	Identifier	ctxp		4201639	0					
ANR	4202559	Argument	POWERPC_EXCP_TRACE		4201639	1					
ANR	4202560	Identifier	POWERPC_EXCP_TRACE		4201639	0					
ANR	4202561	ElseStatement	else		4201639	0					
ANR	4202562	IfStatement	if ( unlikely ( ( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns ) )		4201639	0					
ANR	4202563	Condition	unlikely ( ( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns )	283:19:5751:5914	4201639	0	True				
ANR	4202564	CallExpression	unlikely ( ( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns )		4201639	0					
ANR	4202565	Callee	unlikely		4201639	0					
ANR	4202566	Identifier	unlikely		4201639	0					
ANR	4202567	ArgumentList	( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns		4201639	1					
ANR	4202568	Argument	( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns		4201639	0					
ANR	4202569	OrExpression	( ( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0 ) || ( env -> singlestep_enabled ) || num_insns >= max_insns		4201639	0		||			
ANR	4202570	EqualityExpression	( ctx . nip & ( TARGET_PAGE_SIZE - 1 ) ) == 0		4201639	0		==			
ANR	4202571	BitAndExpression	ctx . nip & ( TARGET_PAGE_SIZE - 1 )		4201639	0		&			
ANR	4202572	MemberAccess	ctx . nip		4201639	0					
ANR	4202573	Identifier	ctx		4201639	0					
ANR	4202574	Identifier	nip		4201639	1					
ANR	4202575	AdditiveExpression	TARGET_PAGE_SIZE - 1		4201639	1		-			
ANR	4202576	Identifier	TARGET_PAGE_SIZE		4201639	0					
ANR	4202577	PrimaryExpression	1		4201639	1					
ANR	4202578	PrimaryExpression	0		4201639	1					
ANR	4202579	OrExpression	( env -> singlestep_enabled ) || num_insns >= max_insns		4201639	1		||			
ANR	4202580	PtrMemberAccess	env -> singlestep_enabled		4201639	0					
ANR	4202581	Identifier	env		4201639	0					
ANR	4202582	Identifier	singlestep_enabled		4201639	1					
ANR	4202583	RelationalExpression	num_insns >= max_insns		4201639	1		>=			
ANR	4202584	Identifier	num_insns		4201639	0					
ANR	4202585	Identifier	max_insns		4201639	1					
ANR	4202586	CompoundStatement		281:53:5687:5687	4201639	1					
ANR	4202587	BreakStatement	break ;	295:12:6049:6054	4201639	0	True				
ANR	4202588	BreakStatement	break ;	301:8:6106:6111	4201639	35	True				
ANR	4202589	IfStatement	if ( tb -> cflags & CF_LAST_IO )		4201639	30					
ANR	4202590	Condition	tb -> cflags & CF_LAST_IO	307:8:6137:6159	4201639	0	True				
ANR	4202591	BitAndExpression	tb -> cflags & CF_LAST_IO		4201639	0		&			
ANR	4202592	PtrMemberAccess	tb -> cflags		4201639	0					
ANR	4202593	Identifier	tb		4201639	0					
ANR	4202594	Identifier	cflags		4201639	1					
ANR	4202595	Identifier	CF_LAST_IO		4201639	1					
ANR	4202596	ExpressionStatement	gen_io_end ( )	309:8:6171:6183	4201639	1	True				
ANR	4202597	CallExpression	gen_io_end ( )		4201639	0					
ANR	4202598	Callee	gen_io_end		4201639	0					
ANR	4202599	Identifier	gen_io_end		4201639	0					
ANR	4202600	ArgumentList			4201639	1					
ANR	4202601	IfStatement	if ( ctx . exception == POWERPC_EXCP_NONE )		4201639	31					
ANR	4202602	Condition	ctx . exception == POWERPC_EXCP_NONE	311:8:6194:6227	4201639	0	True				
ANR	4202603	EqualityExpression	ctx . exception == POWERPC_EXCP_NONE		4201639	0		==			
ANR	4202604	MemberAccess	ctx . exception		4201639	0					
ANR	4202605	Identifier	ctx		4201639	0					
ANR	4202606	Identifier	exception		4201639	1					
ANR	4202607	Identifier	POWERPC_EXCP_NONE		4201639	1					
ANR	4202608	CompoundStatement		305:44:6000:6000	4201639	1					
ANR	4202609	ExpressionStatement	"gen_goto_tb ( & ctx , 0 , ctx . nip )"	313:8:6241:6270	4201639	0	True				
ANR	4202610	CallExpression	"gen_goto_tb ( & ctx , 0 , ctx . nip )"		4201639	0					
ANR	4202611	Callee	gen_goto_tb		4201639	0					
ANR	4202612	Identifier	gen_goto_tb		4201639	0					
ANR	4202613	ArgumentList	& ctx		4201639	1					
ANR	4202614	Argument	& ctx		4201639	0					
ANR	4202615	UnaryOperationExpression	& ctx		4201639	0					
ANR	4202616	UnaryOperator	&		4201639	0					
ANR	4202617	Identifier	ctx		4201639	1					
ANR	4202618	Argument	0		4201639	1					
ANR	4202619	PrimaryExpression	0		4201639	0					
ANR	4202620	Argument	ctx . nip		4201639	2					
ANR	4202621	MemberAccess	ctx . nip		4201639	0					
ANR	4202622	Identifier	ctx		4201639	0					
ANR	4202623	Identifier	nip		4201639	1					
ANR	4202624	ElseStatement	else		4201639	0					
ANR	4202625	IfStatement	if ( ctx . exception != POWERPC_EXCP_BRANCH )		4201639	0					
ANR	4202626	Condition	ctx . exception != POWERPC_EXCP_BRANCH	315:15:6288:6323	4201639	0	True				
ANR	4202627	EqualityExpression	ctx . exception != POWERPC_EXCP_BRANCH		4201639	0		!=			
ANR	4202628	MemberAccess	ctx . exception		4201639	0					
ANR	4202629	Identifier	ctx		4201639	0					
ANR	4202630	Identifier	exception		4201639	1					
ANR	4202631	Identifier	POWERPC_EXCP_BRANCH		4201639	1					
ANR	4202632	CompoundStatement		309:53:6096:6096	4201639	1					
ANR	4202633	IfStatement	if ( unlikely ( env -> singlestep_enabled ) )		4201639	0					
ANR	4202634	Condition	unlikely ( env -> singlestep_enabled )	317:12:6341:6373	4201639	0	True				
ANR	4202635	CallExpression	unlikely ( env -> singlestep_enabled )		4201639	0					
ANR	4202636	Callee	unlikely		4201639	0					
ANR	4202637	Identifier	unlikely		4201639	0					
ANR	4202638	ArgumentList	env -> singlestep_enabled		4201639	1					
ANR	4202639	Argument	env -> singlestep_enabled		4201639	0					
ANR	4202640	PtrMemberAccess	env -> singlestep_enabled		4201639	0					
ANR	4202641	Identifier	env		4201639	0					
ANR	4202642	Identifier	singlestep_enabled		4201639	1					
ANR	4202643	CompoundStatement		311:47:6146:6146	4201639	1					
ANR	4202644	ExpressionStatement	gen_debug_exception ( ctxp )	319:12:6391:6416	4201639	0	True				
ANR	4202645	CallExpression	gen_debug_exception ( ctxp )		4201639	0					
ANR	4202646	Callee	gen_debug_exception		4201639	0					
ANR	4202647	Identifier	gen_debug_exception		4201639	0					
ANR	4202648	ArgumentList	ctxp		4201639	1					
ANR	4202649	Argument	ctxp		4201639	0					
ANR	4202650	Identifier	ctxp		4201639	0					
ANR	4202651	ExpressionStatement	tcg_gen_exit_tb ( 0 )	325:8:6485:6503	4201639	1	True				
ANR	4202652	CallExpression	tcg_gen_exit_tb ( 0 )		4201639	0					
ANR	4202653	Callee	tcg_gen_exit_tb		4201639	0					
ANR	4202654	Identifier	tcg_gen_exit_tb		4201639	0					
ANR	4202655	ArgumentList	0		4201639	1					
ANR	4202656	Argument	0		4201639	0					
ANR	4202657	PrimaryExpression	0		4201639	0					
ANR	4202658	ExpressionStatement	"gen_icount_end ( tb , num_insns )"	329:4:6517:6546	4201639	32	True				
ANR	4202659	CallExpression	"gen_icount_end ( tb , num_insns )"		4201639	0					
ANR	4202660	Callee	gen_icount_end		4201639	0					
ANR	4202661	Identifier	gen_icount_end		4201639	0					
ANR	4202662	ArgumentList	tb		4201639	1					
ANR	4202663	Argument	tb		4201639	0					
ANR	4202664	Identifier	tb		4201639	0					
ANR	4202665	Argument	num_insns		4201639	1					
ANR	4202666	Identifier	num_insns		4201639	0					
ANR	4202667	ExpressionStatement	* gen_opc_ptr = INDEX_op_end	331:4:6553:6580	4201639	33	True				
ANR	4202668	AssignmentExpression	* gen_opc_ptr = INDEX_op_end		4201639	0		=			
ANR	4202669	UnaryOperationExpression	* gen_opc_ptr		4201639	0					
ANR	4202670	UnaryOperator	*		4201639	0					
ANR	4202671	Identifier	gen_opc_ptr		4201639	1					
ANR	4202672	Identifier	INDEX_op_end		4201639	1					
ANR	4202673	IfStatement	if ( unlikely ( search_pc ) )		4201639	34					
ANR	4202674	Condition	unlikely ( search_pc )	333:8:6591:6609	4201639	0	True				
ANR	4202675	CallExpression	unlikely ( search_pc )		4201639	0					
ANR	4202676	Callee	unlikely		4201639	0					
ANR	4202677	Identifier	unlikely		4201639	0					
ANR	4202678	ArgumentList	search_pc		4201639	1					
ANR	4202679	Argument	search_pc		4201639	0					
ANR	4202680	Identifier	search_pc		4201639	0					
ANR	4202681	CompoundStatement		327:29:6382:6382	4201639	1					
ANR	4202682	ExpressionStatement	j = gen_opc_ptr - gen_opc_buf	335:8:6623:6652	4201639	0	True				
ANR	4202683	AssignmentExpression	j = gen_opc_ptr - gen_opc_buf		4201639	0		=			
ANR	4202684	Identifier	j		4201639	0					
ANR	4202685	AdditiveExpression	gen_opc_ptr - gen_opc_buf		4201639	1		-			
ANR	4202686	Identifier	gen_opc_ptr		4201639	0					
ANR	4202687	Identifier	gen_opc_buf		4201639	1					
ANR	4202688	ExpressionStatement	lj ++	337:8:6663:6667	4201639	1	True				
ANR	4202689	PostIncDecOperationExpression	lj ++		4201639	0					
ANR	4202690	Identifier	lj		4201639	0					
ANR	4202691	IncDec	++		4201639	1					
ANR	4202692	WhileStatement	while ( lj <= j )		4201639	2					
ANR	4202693	Condition	lj <= j	339:15:6685:6691	4201639	0	True				
ANR	4202694	RelationalExpression	lj <= j		4201639	0		<=			
ANR	4202695	Identifier	lj		4201639	0					
ANR	4202696	Identifier	j		4201639	1					
ANR	4202697	ExpressionStatement	gen_opc_instr_start [ lj ++ ] = 0	341:12:6707:6736	4201639	1	True				
ANR	4202698	AssignmentExpression	gen_opc_instr_start [ lj ++ ] = 0		4201639	0		=			
ANR	4202699	ArrayIndexing	gen_opc_instr_start [ lj ++ ]		4201639	0					
ANR	4202700	Identifier	gen_opc_instr_start		4201639	0					
ANR	4202701	PostIncDecOperationExpression	lj ++		4201639	1					
ANR	4202702	Identifier	lj		4201639	0					
ANR	4202703	IncDec	++		4201639	1					
ANR	4202704	PrimaryExpression	0		4201639	1					
ANR	4202705	ElseStatement	else		4201639	0					
ANR	4202706	CompoundStatement		337:11:6520:6520	4201639	0					
ANR	4202707	ExpressionStatement	tb -> size = ctx . nip - pc_start	345:8:6761:6790	4201639	0	True				
ANR	4202708	AssignmentExpression	tb -> size = ctx . nip - pc_start		4201639	0		=			
ANR	4202709	PtrMemberAccess	tb -> size		4201639	0					
ANR	4202710	Identifier	tb		4201639	0					
ANR	4202711	Identifier	size		4201639	1					
ANR	4202712	AdditiveExpression	ctx . nip - pc_start		4201639	1		-			
ANR	4202713	MemberAccess	ctx . nip		4201639	0					
ANR	4202714	Identifier	ctx		4201639	0					
ANR	4202715	Identifier	nip		4201639	1					
ANR	4202716	Identifier	pc_start		4201639	1					
ANR	4202717	ExpressionStatement	tb -> icount = num_insns	347:8:6801:6823	4201639	1	True				
ANR	4202718	AssignmentExpression	tb -> icount = num_insns		4201639	0		=			
ANR	4202719	PtrMemberAccess	tb -> icount		4201639	0					
ANR	4202720	Identifier	tb		4201639	0					
ANR	4202721	Identifier	icount		4201639	1					
ANR	4202722	Identifier	num_insns		4201639	1					
ANR	4202723	ExpressionStatement	"qemu_log_mask ( CPU_LOG_TB_CPU , ""---------------- excp: %04x\\n"" , ctx . exception )"	353:4:6863:6940	4201639	35	True				
ANR	4202724	CallExpression	"qemu_log_mask ( CPU_LOG_TB_CPU , ""---------------- excp: %04x\\n"" , ctx . exception )"		4201639	0					
ANR	4202725	Callee	qemu_log_mask		4201639	0					
ANR	4202726	Identifier	qemu_log_mask		4201639	0					
ANR	4202727	ArgumentList	CPU_LOG_TB_CPU		4201639	1					
ANR	4202728	Argument	CPU_LOG_TB_CPU		4201639	0					
ANR	4202729	Identifier	CPU_LOG_TB_CPU		4201639	0					
ANR	4202730	Argument	"""---------------- excp: %04x\\n"""		4201639	1					
ANR	4202731	PrimaryExpression	"""---------------- excp: %04x\\n"""		4201639	0					
ANR	4202732	Argument	ctx . exception		4201639	2					
ANR	4202733	MemberAccess	ctx . exception		4201639	0					
ANR	4202734	Identifier	ctx		4201639	0					
ANR	4202735	Identifier	exception		4201639	1					
ANR	4202736	ExpressionStatement	"log_cpu_state_mask ( CPU_LOG_TB_CPU , env , 0 )"	355:4:6947:6989	4201639	36	True				
ANR	4202737	CallExpression	"log_cpu_state_mask ( CPU_LOG_TB_CPU , env , 0 )"		4201639	0					
ANR	4202738	Callee	log_cpu_state_mask		4201639	0					
ANR	4202739	Identifier	log_cpu_state_mask		4201639	0					
ANR	4202740	ArgumentList	CPU_LOG_TB_CPU		4201639	1					
ANR	4202741	Argument	CPU_LOG_TB_CPU		4201639	0					
ANR	4202742	Identifier	CPU_LOG_TB_CPU		4201639	0					
ANR	4202743	Argument	env		4201639	1					
ANR	4202744	Identifier	env		4201639	0					
ANR	4202745	Argument	0		4201639	2					
ANR	4202746	PrimaryExpression	0		4201639	0					
ANR	4202747	IfStatement	if ( qemu_loglevel_mask ( CPU_LOG_TB_IN_ASM ) )		4201639	37					
ANR	4202748	Condition	qemu_loglevel_mask ( CPU_LOG_TB_IN_ASM )	357:8:7000:7036	4201639	0	True				
ANR	4202749	CallExpression	qemu_loglevel_mask ( CPU_LOG_TB_IN_ASM )		4201639	0					
ANR	4202750	Callee	qemu_loglevel_mask		4201639	0					
ANR	4202751	Identifier	qemu_loglevel_mask		4201639	0					
ANR	4202752	ArgumentList	CPU_LOG_TB_IN_ASM		4201639	1					
ANR	4202753	Argument	CPU_LOG_TB_IN_ASM		4201639	0					
ANR	4202754	Identifier	CPU_LOG_TB_IN_ASM		4201639	0					
ANR	4202755	CompoundStatement		353:8:6820:6829	4201639	1					
ANR	4202756	IdentifierDeclStatement	int flags ;	359:8:7050:7059	4201639	0	True				
ANR	4202757	IdentifierDecl	flags		4201639	0					
ANR	4202758	IdentifierDeclType	int		4201639	0					
ANR	4202759	Identifier	flags		4201639	1					
ANR	4202760	ExpressionStatement	flags = env -> bfd_mach	361:8:7070:7091	4201639	1	True				
ANR	4202761	AssignmentExpression	flags = env -> bfd_mach		4201639	0		=			
ANR	4202762	Identifier	flags		4201639	0					
ANR	4202763	PtrMemberAccess	env -> bfd_mach		4201639	1					
ANR	4202764	Identifier	env		4201639	0					
ANR	4202765	Identifier	bfd_mach		4201639	1					
ANR	4202766	ExpressionStatement	flags |= ctx . le_mode << 16	363:8:7102:7128	4201639	2	True				
ANR	4202767	AssignmentExpression	flags |= ctx . le_mode << 16		4201639	0		|=			
ANR	4202768	Identifier	flags		4201639	0					
ANR	4202769	ShiftExpression	ctx . le_mode << 16		4201639	1		<<			
ANR	4202770	MemberAccess	ctx . le_mode		4201639	0					
ANR	4202771	Identifier	ctx		4201639	0					
ANR	4202772	Identifier	le_mode		4201639	1					
ANR	4202773	PrimaryExpression	16		4201639	1					
ANR	4202774	ExpressionStatement	"qemu_log ( ""IN: %s\\n"" , lookup_symbol ( pc_start ) )"	365:8:7139:7184	4201639	3	True				
ANR	4202775	CallExpression	"qemu_log ( ""IN: %s\\n"" , lookup_symbol ( pc_start ) )"		4201639	0					
ANR	4202776	Callee	qemu_log		4201639	0					
ANR	4202777	Identifier	qemu_log		4201639	0					
ANR	4202778	ArgumentList	"""IN: %s\\n"""		4201639	1					
ANR	4202779	Argument	"""IN: %s\\n"""		4201639	0					
ANR	4202780	PrimaryExpression	"""IN: %s\\n"""		4201639	0					
ANR	4202781	Argument	lookup_symbol ( pc_start )		4201639	1					
ANR	4202782	CallExpression	lookup_symbol ( pc_start )		4201639	0					
ANR	4202783	Callee	lookup_symbol		4201639	0					
ANR	4202784	Identifier	lookup_symbol		4201639	0					
ANR	4202785	ArgumentList	pc_start		4201639	1					
ANR	4202786	Argument	pc_start		4201639	0					
ANR	4202787	Identifier	pc_start		4201639	0					
ANR	4202788	ExpressionStatement	"log_target_disas ( pc_start , ctx . nip - pc_start , flags )"	367:8:7195:7248	4201639	4	True				
ANR	4202789	CallExpression	"log_target_disas ( pc_start , ctx . nip - pc_start , flags )"		4201639	0					
ANR	4202790	Callee	log_target_disas		4201639	0					
ANR	4202791	Identifier	log_target_disas		4201639	0					
ANR	4202792	ArgumentList	pc_start		4201639	1					
ANR	4202793	Argument	pc_start		4201639	0					
ANR	4202794	Identifier	pc_start		4201639	0					
ANR	4202795	Argument	ctx . nip - pc_start		4201639	1					
ANR	4202796	AdditiveExpression	ctx . nip - pc_start		4201639	0		-			
ANR	4202797	MemberAccess	ctx . nip		4201639	0					
ANR	4202798	Identifier	ctx		4201639	0					
ANR	4202799	Identifier	nip		4201639	1					
ANR	4202800	Identifier	pc_start		4201639	1					
ANR	4202801	Argument	flags		4201639	2					
ANR	4202802	Identifier	flags		4201639	0					
ANR	4202803	ExpressionStatement	"qemu_log ( ""\\n"" )"	369:8:7259:7273	4201639	5	True				
ANR	4202804	CallExpression	"qemu_log ( ""\\n"" )"		4201639	0					
ANR	4202805	Callee	qemu_log		4201639	0					
ANR	4202806	Identifier	qemu_log		4201639	0					
ANR	4202807	ArgumentList	"""\\n"""		4201639	1					
ANR	4202808	Argument	"""\\n"""		4201639	0					
ANR	4202809	PrimaryExpression	"""\\n"""		4201639	0					
ANR	4202810	ReturnType	static always_inline void		4201639	1					
ANR	4202811	Identifier	gen_intermediate_code_internal		4201639	2					
ANR	4202812	ParameterList	"CPUState * env , TranslationBlock * tb , int search_pc"		4201639	3					
ANR	4202813	Parameter	CPUState * env	1:58:58:70	4201639	0	True				
ANR	4202814	ParameterType	CPUState *		4201639	0					
ANR	4202815	Identifier	env		4201639	1					
ANR	4202816	Parameter	TranslationBlock * tb	3:58:132:151	4201639	1	True				
ANR	4202817	ParameterType	TranslationBlock *		4201639	0					
ANR	4202818	Identifier	tb		4201639	1					
ANR	4202819	Parameter	int search_pc	5:58:213:225	4201639	2	True				
ANR	4202820	ParameterType	int		4201639	0					
ANR	4202821	Identifier	search_pc		4201639	1					
ANR	4202822	CFGEntryNode	ENTRY		4201639		True				
ANR	4202823	CFGExitNode	EXIT		4201639		True				
ANR	4202824	Symbol	ind_table		4201639						
ANR	4202825	Symbol	handler		4201639						
ANR	4202826	Symbol	CPU_LOG_TB_CPU		4201639						
ANR	4202827	Symbol	tb -> icount		4201639						
ANR	4202828	Symbol	ctxp		4201639						
ANR	4202829	Symbol	ctx . singlestep_enabled		4201639						
ANR	4202830	Symbol	qemu_loglevel_mask		4201639						
ANR	4202831	Symbol	env -> opcodes		4201639						
ANR	4202832	Symbol	& ctx		4201639						
ANR	4202833	Symbol	gen_opc_instr_start		4201639						
ANR	4202834	Symbol	* gen_opc_pc		4201639						
ANR	4202835	Symbol	bswap32		4201639						
ANR	4202836	Symbol	* gen_opc_icount		4201639						
ANR	4202837	Symbol	ctx . opcode		4201639						
ANR	4202838	Symbol	search_pc		4201639						
ANR	4202839	Symbol	* bp		4201639						
ANR	4202840	Symbol	env -> bfd_mach		4201639						
ANR	4202841	Symbol	ctx . le_mode		4201639						
ANR	4202842	Symbol	GDBSTUB_SINGLE_STEP		4201639						
ANR	4202843	Symbol	ctx . spr_cb		4201639						
ANR	4202844	Symbol	handler -> count		4201639						
ANR	4202845	Symbol	POWERPC_FLAG_SPE		4201639						
ANR	4202846	Symbol	unlikely		4201639						
ANR	4202847	Symbol	ctx . mem_idx		4201639						
ANR	4202848	Symbol	pc_start		4201639						
ANR	4202849	Symbol	ctx		4201639						
ANR	4202850	Symbol	* lj		4201639						
ANR	4202851	Symbol	TARGET_PAGE_SIZE		4201639						
ANR	4202852	Symbol	CF_COUNT_MASK		4201639						
ANR	4202853	Symbol	CPU_SINGLE_STEP		4201639						
ANR	4202854	Symbol	POWERPC_FLAG_SE		4201639						
ANR	4202855	Symbol	& env -> breakpoints		4201639						
ANR	4202856	Symbol	POWERPC_EXCP_INVAL_INVAL		4201639						
ANR	4202857	Symbol	MSR_LE		4201639						
ANR	4202858	Symbol	CPU_BRANCH_STEP		4201639						
ANR	4202859	Symbol	* tb		4201639						
ANR	4202860	Symbol	POWERPC_FLAG_BE		4201639						
ANR	4202861	Symbol	gen_opc_end		4201639						
ANR	4202862	Symbol	INDEX_op_end		4201639						
ANR	4202863	Symbol	flags		4201639						
ANR	4202864	Symbol	num_insns		4201639						
ANR	4202865	Symbol	bp		4201639						
ANR	4202866	Symbol	is_indirect_opcode		4201639						
ANR	4202867	Symbol	msr_be		4201639						
ANR	4202868	Symbol	table		4201639						
ANR	4202869	Symbol	& gen_invalid		4201639						
ANR	4202870	Symbol	gen_opc_ptr		4201639						
ANR	4202871	Symbol	j		4201639						
ANR	4202872	Symbol	msr_sf		4201639						
ANR	4202873	Symbol	tb		4201639						
ANR	4202874	Symbol	msr_se		4201639						
ANR	4202875	Symbol	bp -> pc		4201639						
ANR	4202876	Symbol	tb -> cflags		4201639						
ANR	4202877	Symbol	ctx . nip		4201639						
ANR	4202878	Symbol	env -> mmu_idx		4201639						
ANR	4202879	Symbol	lj		4201639						
ANR	4202880	Symbol	ctx . fpu_enabled		4201639						
ANR	4202881	Symbol	lookup_symbol		4201639						
ANR	4202882	Symbol	ctx . sf_mode		4201639						
ANR	4202883	Symbol	tb -> size		4201639						
ANR	4202884	Symbol	gen_opc_icount		4201639						
ANR	4202885	Symbol	handler -> handler		4201639						
ANR	4202886	Symbol	env -> spr_cb		4201639						
ANR	4202887	Symbol	ctx . access_type		4201639						
ANR	4202888	Symbol	OPC_MAX_SIZE		4201639						
ANR	4202889	Symbol	TAILQ_EMPTY		4201639						
ANR	4202890	Symbol	POWERPC_FLAG_VRE		4201639						
ANR	4202891	Symbol	* opc2		4201639						
ANR	4202892	Symbol	* opc3		4201639						
ANR	4202893	Symbol	* opc1		4201639						
ANR	4202894	Symbol	* env		4201639						
ANR	4202895	Symbol	* table		4201639						
ANR	4202896	Symbol	POWERPC_SYSCALL		4201639						
ANR	4202897	Symbol	POWERPC_EXCP_TRACE		4201639						
ANR	4202898	Symbol	env -> flags		4201639						
ANR	4202899	Symbol	msr_spe		4201639						
ANR	4202900	Symbol	POWERPC_EXCP_BRANCH		4201639						
ANR	4202901	Symbol	little_endian		4201639						
ANR	4202902	Symbol	env -> hflags		4201639						
ANR	4202903	Symbol	msr_vr		4201639						
ANR	4202904	Symbol	ctx . altivec_enabled		4201639						
ANR	4202905	Symbol	tb -> pc		4201639						
ANR	4202906	Symbol	POWERPC_EXCP_TRAP		4201639						
ANR	4202907	Symbol	POWERPC_EXCP_NONE		4201639						
ANR	4202908	Symbol	msr_fp		4201639						
ANR	4202909	Symbol	* gen_opc_ptr		4201639						
ANR	4202910	Symbol	max_insns		4201639						
ANR	4202911	Symbol	gen_opc_buf		4201639						
ANR	4202912	Symbol	env -> singlestep_enabled		4201639						
ANR	4202913	Symbol	opc2		4201639						
ANR	4202914	Symbol	opc3		4201639						
ANR	4202915	Symbol	ctx . spe_enabled		4201639						
ANR	4202916	Symbol	ctx . exception		4201639						
ANR	4202917	Symbol	env		4201639						
ANR	4202918	Symbol	* gen_opc_instr_start		4201639						
ANR	4202919	Symbol	CF_LAST_IO		4201639						
ANR	4202920	Symbol	qemu_log_enabled		4201639						
ANR	4202921	Symbol	CPU_LOG_TB_IN_ASM		4201639						
ANR	4202922	Symbol	ldl_code		4201639						
ANR	4202923	Symbol	opc1		4201639						
ANR	4202924	Symbol	ctx . tb		4201639						
ANR	4202925	Symbol	gen_opc_pc		4201639						
ANR	4202926	Symbol	* handler		4201639						
ANR	4202927	Symbol	handler -> inval		4201639						
