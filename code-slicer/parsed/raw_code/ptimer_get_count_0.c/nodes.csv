command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6762695	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ptimer_get_count_0.c								
ANR	6762696	Function	ptimer_get_count	1:0:0:1811							
ANR	6762697	FunctionDef	ptimer_get_count (ptimer_state * s)		6762696	0					
ANR	6762698	CompoundStatement		3:0:44:1811	6762696	0					
ANR	6762699	IdentifierDeclStatement	int64_t now ;	5:4:51:62	6762696	0	True				
ANR	6762700	IdentifierDecl	now		6762696	0					
ANR	6762701	IdentifierDeclType	int64_t		6762696	0					
ANR	6762702	Identifier	now		6762696	1					
ANR	6762703	IdentifierDeclStatement	uint64_t counter ;	7:4:69:85	6762696	1	True				
ANR	6762704	IdentifierDecl	counter		6762696	0					
ANR	6762705	IdentifierDeclType	uint64_t		6762696	0					
ANR	6762706	Identifier	counter		6762696	1					
ANR	6762707	IfStatement	if ( s -> enabled )		6762696	2					
ANR	6762708	Condition	s -> enabled	11:8:98:107	6762696	0	True				
ANR	6762709	PtrMemberAccess	s -> enabled		6762696	0					
ANR	6762710	Identifier	s		6762696	0					
ANR	6762711	Identifier	enabled		6762696	1					
ANR	6762712	CompoundStatement		9:20:65:65	6762696	1					
ANR	6762713	ExpressionStatement	now = qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )	13:8:121:164	6762696	0	True				
ANR	6762714	AssignmentExpression	now = qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )		6762696	0		=			
ANR	6762715	Identifier	now		6762696	0					
ANR	6762716	CallExpression	qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )		6762696	1					
ANR	6762717	Callee	qemu_clock_get_ns		6762696	0					
ANR	6762718	Identifier	qemu_clock_get_ns		6762696	0					
ANR	6762719	ArgumentList	QEMU_CLOCK_VIRTUAL		6762696	1					
ANR	6762720	Argument	QEMU_CLOCK_VIRTUAL		6762696	0					
ANR	6762721	Identifier	QEMU_CLOCK_VIRTUAL		6762696	0					
ANR	6762722	IfStatement	if ( now - s -> next_event > 0 || s -> period == 0 )		6762696	1					
ANR	6762723	Condition	now - s -> next_event > 0 || s -> period == 0	17:12:233:286	6762696	0	True				
ANR	6762724	OrExpression	now - s -> next_event > 0 || s -> period == 0		6762696	0		||			
ANR	6762725	RelationalExpression	now - s -> next_event > 0		6762696	0		>			
ANR	6762726	AdditiveExpression	now - s -> next_event		6762696	0		-			
ANR	6762727	Identifier	now		6762696	0					
ANR	6762728	PtrMemberAccess	s -> next_event		6762696	1					
ANR	6762729	Identifier	s		6762696	0					
ANR	6762730	Identifier	next_event		6762696	1					
ANR	6762731	PrimaryExpression	0		6762696	1					
ANR	6762732	EqualityExpression	s -> period == 0		6762696	1		==			
ANR	6762733	PtrMemberAccess	s -> period		6762696	0					
ANR	6762734	Identifier	s		6762696	0					
ANR	6762735	Identifier	period		6762696	1					
ANR	6762736	PrimaryExpression	0		6762696	1					
ANR	6762737	CompoundStatement		17:31:244:244	6762696	1					
ANR	6762738	ExpressionStatement	counter = 0	25:12:404:415	6762696	0	True				
ANR	6762739	AssignmentExpression	counter = 0		6762696	0		=			
ANR	6762740	Identifier	counter		6762696	0					
ANR	6762741	PrimaryExpression	0		6762696	1					
ANR	6762742	ElseStatement	else		6762696	0					
ANR	6762743	CompoundStatement		33:12:486:495	6762696	0					
ANR	6762744	IdentifierDeclStatement	uint64_t rem ;	29:12:448:460	6762696	0	True				
ANR	6762745	IdentifierDecl	rem		6762696	0					
ANR	6762746	IdentifierDeclType	uint64_t		6762696	0					
ANR	6762747	Identifier	rem		6762696	1					
ANR	6762748	IdentifierDeclStatement	uint64_t div ;	31:12:475:487	6762696	1	True				
ANR	6762749	IdentifierDecl	div		6762696	0					
ANR	6762750	IdentifierDeclType	uint64_t		6762696	0					
ANR	6762751	Identifier	div		6762696	1					
ANR	6762752	IdentifierDeclStatement	"int clz1 , clz2 ;"	33:12:502:516	6762696	2	True				
ANR	6762753	IdentifierDecl	clz1		6762696	0					
ANR	6762754	IdentifierDeclType	int		6762696	0					
ANR	6762755	Identifier	clz1		6762696	1					
ANR	6762756	IdentifierDecl	clz2		6762696	1					
ANR	6762757	IdentifierDeclType	int		6762696	0					
ANR	6762758	Identifier	clz2		6762696	1					
ANR	6762759	IdentifierDeclStatement	int shift ;	35:12:531:540	6762696	3	True				
ANR	6762760	IdentifierDecl	shift		6762696	0					
ANR	6762761	IdentifierDeclType	int		6762696	0					
ANR	6762762	Identifier	shift		6762696	1					
ANR	6762763	ExpressionStatement	rem = s -> next_event - now	59:12:1030:1055	6762696	4	True				
ANR	6762764	AssignmentExpression	rem = s -> next_event - now		6762696	0		=			
ANR	6762765	Identifier	rem		6762696	0					
ANR	6762766	AdditiveExpression	s -> next_event - now		6762696	1		-			
ANR	6762767	PtrMemberAccess	s -> next_event		6762696	0					
ANR	6762768	Identifier	s		6762696	0					
ANR	6762769	Identifier	next_event		6762696	1					
ANR	6762770	Identifier	now		6762696	1					
ANR	6762771	ExpressionStatement	div = s -> period	61:12:1070:1085	6762696	5	True				
ANR	6762772	AssignmentExpression	div = s -> period		6762696	0		=			
ANR	6762773	Identifier	div		6762696	0					
ANR	6762774	PtrMemberAccess	s -> period		6762696	1					
ANR	6762775	Identifier	s		6762696	0					
ANR	6762776	Identifier	period		6762696	1					
ANR	6762777	ExpressionStatement	clz1 = clz64 ( rem )	65:12:1102:1119	6762696	6	True				
ANR	6762778	AssignmentExpression	clz1 = clz64 ( rem )		6762696	0		=			
ANR	6762779	Identifier	clz1		6762696	0					
ANR	6762780	CallExpression	clz64 ( rem )		6762696	1					
ANR	6762781	Callee	clz64		6762696	0					
ANR	6762782	Identifier	clz64		6762696	0					
ANR	6762783	ArgumentList	rem		6762696	1					
ANR	6762784	Argument	rem		6762696	0					
ANR	6762785	Identifier	rem		6762696	0					
ANR	6762786	ExpressionStatement	clz2 = clz64 ( div )	67:12:1134:1151	6762696	7	True				
ANR	6762787	AssignmentExpression	clz2 = clz64 ( div )		6762696	0		=			
ANR	6762788	Identifier	clz2		6762696	0					
ANR	6762789	CallExpression	clz64 ( div )		6762696	1					
ANR	6762790	Callee	clz64		6762696	0					
ANR	6762791	Identifier	clz64		6762696	0					
ANR	6762792	ArgumentList	div		6762696	1					
ANR	6762793	Argument	div		6762696	0					
ANR	6762794	Identifier	div		6762696	0					
ANR	6762795	ExpressionStatement	shift = clz1 < clz2 ? clz1 : clz2	69:12:1166:1199	6762696	8	True				
ANR	6762796	AssignmentExpression	shift = clz1 < clz2 ? clz1 : clz2		6762696	0		=			
ANR	6762797	Identifier	shift		6762696	0					
ANR	6762798	ConditionalExpression	clz1 < clz2 ? clz1 : clz2		6762696	1					
ANR	6762799	Condition	clz1 < clz2		6762696	0					
ANR	6762800	RelationalExpression	clz1 < clz2		6762696	0		<			
ANR	6762801	Identifier	clz1		6762696	0					
ANR	6762802	Identifier	clz2		6762696	1					
ANR	6762803	Identifier	clz1		6762696	1					
ANR	6762804	Identifier	clz2		6762696	2					
ANR	6762805	ExpressionStatement	rem <<= shift	73:12:1216:1229	6762696	9	True				
ANR	6762806	AssignmentExpression	rem <<= shift		6762696	0		<<=			
ANR	6762807	Identifier	rem		6762696	0					
ANR	6762808	Identifier	shift		6762696	1					
ANR	6762809	ExpressionStatement	div <<= shift	75:12:1244:1257	6762696	10	True				
ANR	6762810	AssignmentExpression	div <<= shift		6762696	0		<<=			
ANR	6762811	Identifier	div		6762696	0					
ANR	6762812	Identifier	shift		6762696	1					
ANR	6762813	IfStatement	if ( shift >= 32 )		6762696	11					
ANR	6762814	Condition	shift >= 32	77:16:1276:1286	6762696	0	True				
ANR	6762815	RelationalExpression	shift >= 32		6762696	0		>=			
ANR	6762816	Identifier	shift		6762696	0					
ANR	6762817	PrimaryExpression	32		6762696	1					
ANR	6762818	CompoundStatement		75:29:1244:1244	6762696	1					
ANR	6762819	ExpressionStatement	div |= ( ( uint64_t ) s -> period_frac << ( shift - 32 ) )	79:16:1308:1357	6762696	0	True				
ANR	6762820	AssignmentExpression	div |= ( ( uint64_t ) s -> period_frac << ( shift - 32 ) )		6762696	0		|=			
ANR	6762821	Identifier	div		6762696	0					
ANR	6762822	ShiftExpression	( uint64_t ) s -> period_frac << ( shift - 32 )		6762696	1		<<			
ANR	6762823	CastExpression	( uint64_t ) s -> period_frac		6762696	0					
ANR	6762824	CastTarget	uint64_t		6762696	0					
ANR	6762825	PtrMemberAccess	s -> period_frac		6762696	1					
ANR	6762826	Identifier	s		6762696	0					
ANR	6762827	Identifier	period_frac		6762696	1					
ANR	6762828	AdditiveExpression	shift - 32		6762696	1		-			
ANR	6762829	Identifier	shift		6762696	0					
ANR	6762830	PrimaryExpression	32		6762696	1					
ANR	6762831	ElseStatement	else		6762696	0					
ANR	6762832	CompoundStatement		79:19:1334:1334	6762696	0					
ANR	6762833	IfStatement	if ( shift != 0 )		6762696	0					
ANR	6762834	Condition	shift != 0	83:20:1402:1411	6762696	0	True				
ANR	6762835	EqualityExpression	shift != 0		6762696	0		!=			
ANR	6762836	Identifier	shift		6762696	0					
ANR	6762837	PrimaryExpression	0		6762696	1					
ANR	6762838	ExpressionStatement	div |= ( s -> period_frac >> ( 32 - shift ) )	85:20:1435:1474	6762696	1	True				
ANR	6762839	AssignmentExpression	div |= ( s -> period_frac >> ( 32 - shift ) )		6762696	0		|=			
ANR	6762840	Identifier	div		6762696	0					
ANR	6762841	ShiftExpression	s -> period_frac >> ( 32 - shift )		6762696	1		>>			
ANR	6762842	PtrMemberAccess	s -> period_frac		6762696	0					
ANR	6762843	Identifier	s		6762696	0					
ANR	6762844	Identifier	period_frac		6762696	1					
ANR	6762845	AdditiveExpression	32 - shift		6762696	1		-			
ANR	6762846	PrimaryExpression	32		6762696	0					
ANR	6762847	Identifier	shift		6762696	1					
ANR	6762848	IfStatement	if ( ( uint32_t ) ( s -> period_frac << shift ) )		6762696	1					
ANR	6762849	Condition	( uint32_t ) ( s -> period_frac << shift )	91:20:1611:1645	6762696	0	True				
ANR	6762850	CastExpression	( uint32_t ) ( s -> period_frac << shift )		6762696	0					
ANR	6762851	CastTarget	uint32_t		6762696	0					
ANR	6762852	ShiftExpression	s -> period_frac << shift		6762696	1		<<			
ANR	6762853	PtrMemberAccess	s -> period_frac		6762696	0					
ANR	6762854	Identifier	s		6762696	0					
ANR	6762855	Identifier	period_frac		6762696	1					
ANR	6762856	Identifier	shift		6762696	1					
ANR	6762857	ExpressionStatement	div += 1	93:20:1669:1677	6762696	1	True				
ANR	6762858	AssignmentExpression	div += 1		6762696	0		+=			
ANR	6762859	Identifier	div		6762696	0					
ANR	6762860	PrimaryExpression	1		6762696	1					
ANR	6762861	ExpressionStatement	counter = rem / div	97:12:1707:1726	6762696	12	True				
ANR	6762862	AssignmentExpression	counter = rem / div		6762696	0		=			
ANR	6762863	Identifier	counter		6762696	0					
ANR	6762864	MultiplicativeExpression	rem / div		6762696	1		/			
ANR	6762865	Identifier	rem		6762696	0					
ANR	6762866	Identifier	div		6762696	1					
ANR	6762867	ElseStatement	else		6762696	0					
ANR	6762868	CompoundStatement		99:11:1706:1706	6762696	0					
ANR	6762869	ExpressionStatement	counter = s -> delta	103:8:1762:1780	6762696	0	True				
ANR	6762870	AssignmentExpression	counter = s -> delta		6762696	0		=			
ANR	6762871	Identifier	counter		6762696	0					
ANR	6762872	PtrMemberAccess	s -> delta		6762696	1					
ANR	6762873	Identifier	s		6762696	0					
ANR	6762874	Identifier	delta		6762696	1					
ANR	6762875	ReturnStatement	return counter ;	107:4:1794:1808	6762696	3	True				
ANR	6762876	Identifier	counter		6762696	0					
ANR	6762877	ReturnType	uint64_t		6762696	1					
ANR	6762878	Identifier	ptimer_get_count		6762696	2					
ANR	6762879	ParameterList	ptimer_state * s		6762696	3					
ANR	6762880	Parameter	ptimer_state * s	1:26:26:40	6762696	0	True				
ANR	6762881	ParameterType	ptimer_state *		6762696	0					
ANR	6762882	Identifier	s		6762696	1					
ANR	6762883	CFGEntryNode	ENTRY		6762696		True				
ANR	6762884	CFGExitNode	EXIT		6762696		True				
ANR	6762885	Symbol	qemu_clock_get_ns		6762696						
ANR	6762886	Symbol	s -> period		6762696						
ANR	6762887	Symbol	shift		6762696						
ANR	6762888	Symbol	QEMU_CLOCK_VIRTUAL		6762696						
ANR	6762889	Symbol	clz64		6762696						
ANR	6762890	Symbol	s -> period_frac		6762696						
ANR	6762891	Symbol	counter		6762696						
ANR	6762892	Symbol	s -> enabled		6762696						
ANR	6762893	Symbol	clz1		6762696						
ANR	6762894	Symbol	s -> next_event		6762696						
ANR	6762895	Symbol	clz2		6762696						
ANR	6762896	Symbol	div		6762696						
ANR	6762897	Symbol	s		6762696						
ANR	6762898	Symbol	now		6762696						
ANR	6762899	Symbol	s -> delta		6762696						
ANR	6762900	Symbol	rem		6762696						
ANR	6762901	Symbol	* s		6762696						
