command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7356476	File	/home/p4ultr4n/workplace/ReVeal/raw_code/receive_filter_0.c								
ANR	7356477	Function	receive_filter	1:0:0:849							
ANR	7356478	FunctionDef	"receive_filter (VirtIONet * n , const uint8_t * buf , int size)"		7356477	0					
ANR	7356479	CompoundStatement		3:0:71:849	7356477	0					
ANR	7356480	Statement	static	5:4:78:83	7356477	0	True				
ANR	7356481	IdentifierDeclStatement	"const uint8_t bcast [ ] = { 0xff , 0xff , 0xff , 0xff , 0xff , 0xff } ;"	5:11:85:145	7356477	1	True				
ANR	7356482	IdentifierDecl	"bcast [ ] = { 0xff , 0xff , 0xff , 0xff , 0xff , 0xff }"		7356477	0					
ANR	7356483	IdentifierDeclType	const uint8_t [ ]		7356477	0					
ANR	7356484	Identifier	bcast		7356477	1					
ANR	7356485	AssignmentExpression	"bcast [ ] = { 0xff , 0xff , 0xff , 0xff , 0xff , 0xff }"		7356477	2		=			
ANR	7356486	Identifier	bcast		7356477	0					
ANR	7356487	InitializerList	0xff		7356477	1					
ANR	7356488	PrimaryExpression	0xff		7356477	0					
ANR	7356489	PrimaryExpression	0xff		7356477	1					
ANR	7356490	PrimaryExpression	0xff		7356477	2					
ANR	7356491	PrimaryExpression	0xff		7356477	3					
ANR	7356492	PrimaryExpression	0xff		7356477	4					
ANR	7356493	PrimaryExpression	0xff		7356477	5					
ANR	7356494	Statement	static	7:4:152:157	7356477	2	True				
ANR	7356495	IdentifierDeclStatement	"const uint8_t vlan [ ] = { 0x81 , 0x00 } ;"	7:11:159:194	7356477	3	True				
ANR	7356496	IdentifierDecl	"vlan [ ] = { 0x81 , 0x00 }"		7356477	0					
ANR	7356497	IdentifierDeclType	const uint8_t [ ]		7356477	0					
ANR	7356498	Identifier	vlan		7356477	1					
ANR	7356499	AssignmentExpression	"vlan [ ] = { 0x81 , 0x00 }"		7356477	2		=			
ANR	7356500	Identifier	vlan		7356477	0					
ANR	7356501	InitializerList	0x81		7356477	1					
ANR	7356502	PrimaryExpression	0x81		7356477	0					
ANR	7356503	PrimaryExpression	0x00		7356477	1					
ANR	7356504	IdentifierDeclStatement	uint8_t * ptr = ( uint8_t * ) buf ;	9:4:201:230	7356477	4	True				
ANR	7356505	IdentifierDecl	* ptr = ( uint8_t * ) buf		7356477	0					
ANR	7356506	IdentifierDeclType	uint8_t *		7356477	0					
ANR	7356507	Identifier	ptr		7356477	1					
ANR	7356508	AssignmentExpression	* ptr = ( uint8_t * ) buf		7356477	2		=			
ANR	7356509	Identifier	ptr		7356477	0					
ANR	7356510	CastExpression	( uint8_t * ) buf		7356477	1					
ANR	7356511	CastTarget	uint8_t *		7356477	0					
ANR	7356512	Identifier	buf		7356477	1					
ANR	7356513	IdentifierDeclStatement	int i ;	11:4:237:242	7356477	5	True				
ANR	7356514	IdentifierDecl	i		7356477	0					
ANR	7356515	IdentifierDeclType	int		7356477	0					
ANR	7356516	Identifier	i		7356477	1					
ANR	7356517	IfStatement	if ( n -> promisc )		7356477	6					
ANR	7356518	Condition	n -> promisc	15:8:255:264	7356477	0	True				
ANR	7356519	PtrMemberAccess	n -> promisc		7356477	0					
ANR	7356520	Identifier	n		7356477	0					
ANR	7356521	Identifier	promisc		7356477	1					
ANR	7356522	ReturnStatement	return 1 ;	17:8:276:284	7356477	1	True				
ANR	7356523	PrimaryExpression	1		7356477	0					
ANR	7356524	IfStatement	"if ( ! memcmp ( & ptr [ 12 ] , vlan , sizeof ( vlan ) ) )"		7356477	7					
ANR	7356525	Condition	"! memcmp ( & ptr [ 12 ] , vlan , sizeof ( vlan ) )"	21:8:297:333	7356477	0	True				
ANR	7356526	UnaryOperationExpression	"! memcmp ( & ptr [ 12 ] , vlan , sizeof ( vlan ) )"		7356477	0					
ANR	7356527	UnaryOperator	!		7356477	0					
ANR	7356528	CallExpression	"memcmp ( & ptr [ 12 ] , vlan , sizeof ( vlan ) )"		7356477	1					
ANR	7356529	Callee	memcmp		7356477	0					
ANR	7356530	Identifier	memcmp		7356477	0					
ANR	7356531	ArgumentList	& ptr [ 12 ]		7356477	1					
ANR	7356532	Argument	& ptr [ 12 ]		7356477	0					
ANR	7356533	UnaryOperationExpression	& ptr [ 12 ]		7356477	0					
ANR	7356534	UnaryOperator	&		7356477	0					
ANR	7356535	ArrayIndexing	ptr [ 12 ]		7356477	1					
ANR	7356536	Identifier	ptr		7356477	0					
ANR	7356537	PrimaryExpression	12		7356477	1					
ANR	7356538	Argument	vlan		7356477	1					
ANR	7356539	Identifier	vlan		7356477	0					
ANR	7356540	Argument	sizeof ( vlan )		7356477	2					
ANR	7356541	SizeofExpression	sizeof ( vlan )		7356477	0					
ANR	7356542	Sizeof	sizeof		7356477	0					
ANR	7356543	SizeofOperand	vlan		7356477	1					
ANR	7356544	CompoundStatement		21:8:275:329	7356477	1					
ANR	7356545	IdentifierDeclStatement	int vid = be16_to_cpup ( ( uint16_t * ) ( ptr + 14 ) ) & 0xfff ;	23:8:347:401	7356477	0	True				
ANR	7356546	IdentifierDecl	vid = be16_to_cpup ( ( uint16_t * ) ( ptr + 14 ) ) & 0xfff		7356477	0					
ANR	7356547	IdentifierDeclType	int		7356477	0					
ANR	7356548	Identifier	vid		7356477	1					
ANR	7356549	AssignmentExpression	vid = be16_to_cpup ( ( uint16_t * ) ( ptr + 14 ) ) & 0xfff		7356477	2		=			
ANR	7356550	Identifier	vid		7356477	0					
ANR	7356551	BitAndExpression	be16_to_cpup ( ( uint16_t * ) ( ptr + 14 ) ) & 0xfff		7356477	1		&			
ANR	7356552	CallExpression	be16_to_cpup ( ( uint16_t * ) ( ptr + 14 ) )		7356477	0					
ANR	7356553	Callee	be16_to_cpup		7356477	0					
ANR	7356554	Identifier	be16_to_cpup		7356477	0					
ANR	7356555	ArgumentList	( uint16_t * ) ( ptr + 14 )		7356477	1					
ANR	7356556	Argument	( uint16_t * ) ( ptr + 14 )		7356477	0					
ANR	7356557	CastExpression	( uint16_t * ) ( ptr + 14 )		7356477	0					
ANR	7356558	CastTarget	uint16_t *		7356477	0					
ANR	7356559	AdditiveExpression	ptr + 14		7356477	1		+			
ANR	7356560	Identifier	ptr		7356477	0					
ANR	7356561	PrimaryExpression	14		7356477	1					
ANR	7356562	PrimaryExpression	0xfff		7356477	1					
ANR	7356563	IfStatement	if ( ! ( n -> vlans [ vid >> 5 ] & ( 1U << ( vid & 0x1f ) ) ) )		7356477	1					
ANR	7356564	Condition	! ( n -> vlans [ vid >> 5 ] & ( 1U << ( vid & 0x1f ) ) )	25:12:416:459	7356477	0	True				
ANR	7356565	UnaryOperationExpression	! ( n -> vlans [ vid >> 5 ] & ( 1U << ( vid & 0x1f ) ) )		7356477	0					
ANR	7356566	UnaryOperator	!		7356477	0					
ANR	7356567	BitAndExpression	n -> vlans [ vid >> 5 ] & ( 1U << ( vid & 0x1f ) )		7356477	1		&			
ANR	7356568	ArrayIndexing	n -> vlans [ vid >> 5 ]		7356477	0					
ANR	7356569	PtrMemberAccess	n -> vlans		7356477	0					
ANR	7356570	Identifier	n		7356477	0					
ANR	7356571	Identifier	vlans		7356477	1					
ANR	7356572	ShiftExpression	vid >> 5		7356477	1		>>			
ANR	7356573	Identifier	vid		7356477	0					
ANR	7356574	PrimaryExpression	5		7356477	1					
ANR	7356575	ShiftExpression	1U << ( vid & 0x1f )		7356477	1		<<			
ANR	7356576	PrimaryExpression	1U		7356477	0					
ANR	7356577	BitAndExpression	vid & 0x1f		7356477	1		&			
ANR	7356578	Identifier	vid		7356477	0					
ANR	7356579	PrimaryExpression	0x1f		7356477	1					
ANR	7356580	ReturnStatement	return 0 ;	27:12:475:483	7356477	1	True				
ANR	7356581	PrimaryExpression	0		7356477	0					
ANR	7356582	IfStatement	if ( ( ptr [ 0 ] & 1 ) && n -> allmulti )		7356477	8					
ANR	7356583	Condition	( ptr [ 0 ] & 1 ) && n -> allmulti	33:8:503:529	7356477	0	True				
ANR	7356584	AndExpression	( ptr [ 0 ] & 1 ) && n -> allmulti		7356477	0		&&			
ANR	7356585	BitAndExpression	ptr [ 0 ] & 1		7356477	0		&			
ANR	7356586	ArrayIndexing	ptr [ 0 ]		7356477	0					
ANR	7356587	Identifier	ptr		7356477	0					
ANR	7356588	PrimaryExpression	0		7356477	1					
ANR	7356589	PrimaryExpression	1		7356477	1					
ANR	7356590	PtrMemberAccess	n -> allmulti		7356477	1					
ANR	7356591	Identifier	n		7356477	0					
ANR	7356592	Identifier	allmulti		7356477	1					
ANR	7356593	ReturnStatement	return 1 ;	35:8:541:549	7356477	1	True				
ANR	7356594	PrimaryExpression	1		7356477	0					
ANR	7356595	IfStatement	"if ( ! memcmp ( ptr , bcast , sizeof ( bcast ) ) )"		7356477	9					
ANR	7356596	Condition	"! memcmp ( ptr , bcast , sizeof ( bcast ) )"	39:8:562:595	7356477	0	True				
ANR	7356597	UnaryOperationExpression	"! memcmp ( ptr , bcast , sizeof ( bcast ) )"		7356477	0					
ANR	7356598	UnaryOperator	!		7356477	0					
ANR	7356599	CallExpression	"memcmp ( ptr , bcast , sizeof ( bcast ) )"		7356477	1					
ANR	7356600	Callee	memcmp		7356477	0					
ANR	7356601	Identifier	memcmp		7356477	0					
ANR	7356602	ArgumentList	ptr		7356477	1					
ANR	7356603	Argument	ptr		7356477	0					
ANR	7356604	Identifier	ptr		7356477	0					
ANR	7356605	Argument	bcast		7356477	1					
ANR	7356606	Identifier	bcast		7356477	0					
ANR	7356607	Argument	sizeof ( bcast )		7356477	2					
ANR	7356608	SizeofExpression	sizeof ( bcast )		7356477	0					
ANR	7356609	Sizeof	sizeof		7356477	0					
ANR	7356610	SizeofOperand	bcast		7356477	1					
ANR	7356611	ReturnStatement	return 1 ;	41:8:607:615	7356477	1	True				
ANR	7356612	PrimaryExpression	1		7356477	0					
ANR	7356613	IfStatement	"if ( ! memcmp ( ptr , n -> mac , ETH_ALEN ) )"		7356477	10					
ANR	7356614	Condition	"! memcmp ( ptr , n -> mac , ETH_ALEN )"	45:8:628:657	7356477	0	True				
ANR	7356615	UnaryOperationExpression	"! memcmp ( ptr , n -> mac , ETH_ALEN )"		7356477	0					
ANR	7356616	UnaryOperator	!		7356477	0					
ANR	7356617	CallExpression	"memcmp ( ptr , n -> mac , ETH_ALEN )"		7356477	1					
ANR	7356618	Callee	memcmp		7356477	0					
ANR	7356619	Identifier	memcmp		7356477	0					
ANR	7356620	ArgumentList	ptr		7356477	1					
ANR	7356621	Argument	ptr		7356477	0					
ANR	7356622	Identifier	ptr		7356477	0					
ANR	7356623	Argument	n -> mac		7356477	1					
ANR	7356624	PtrMemberAccess	n -> mac		7356477	0					
ANR	7356625	Identifier	n		7356477	0					
ANR	7356626	Identifier	mac		7356477	1					
ANR	7356627	Argument	ETH_ALEN		7356477	2					
ANR	7356628	Identifier	ETH_ALEN		7356477	0					
ANR	7356629	ReturnStatement	return 1 ;	47:8:669:677	7356477	1	True				
ANR	7356630	PrimaryExpression	1		7356477	0					
ANR	7356631	ForStatement	for ( i = 0 ; i < n -> mac_table . in_use ; i ++ )		7356477	11					
ANR	7356632	ForInit	i = 0 ;	51:9:691:696	7356477	0	True				
ANR	7356633	AssignmentExpression	i = 0		7356477	0		=			
ANR	7356634	Identifier	i		7356477	0					
ANR	7356635	PrimaryExpression	0		7356477	1					
ANR	7356636	Condition	i < n -> mac_table . in_use	51:16:698:720	7356477	1	True				
ANR	7356637	RelationalExpression	i < n -> mac_table . in_use		7356477	0		<			
ANR	7356638	Identifier	i		7356477	0					
ANR	7356639	MemberAccess	n -> mac_table . in_use		7356477	1					
ANR	7356640	PtrMemberAccess	n -> mac_table		7356477	0					
ANR	7356641	Identifier	n		7356477	0					
ANR	7356642	Identifier	mac_table		7356477	1					
ANR	7356643	Identifier	in_use		7356477	1					
ANR	7356644	PostIncDecOperationExpression	i ++	51:41:723:725	7356477	2	True				
ANR	7356645	Identifier	i		7356477	0					
ANR	7356646	IncDec	++		7356477	1					
ANR	7356647	CompoundStatement		49:46:656:656	7356477	3					
ANR	7356648	IfStatement	"if ( ! memcmp ( ptr , & n -> mac_table . macs [ i * ETH_ALEN ] , ETH_ALEN ) )"		7356477	0					
ANR	7356649	Condition	"! memcmp ( ptr , & n -> mac_table . macs [ i * ETH_ALEN ] , ETH_ALEN )"	53:12:743:798	7356477	0	True				
ANR	7356650	UnaryOperationExpression	"! memcmp ( ptr , & n -> mac_table . macs [ i * ETH_ALEN ] , ETH_ALEN )"		7356477	0					
ANR	7356651	UnaryOperator	!		7356477	0					
ANR	7356652	CallExpression	"memcmp ( ptr , & n -> mac_table . macs [ i * ETH_ALEN ] , ETH_ALEN )"		7356477	1					
ANR	7356653	Callee	memcmp		7356477	0					
ANR	7356654	Identifier	memcmp		7356477	0					
ANR	7356655	ArgumentList	ptr		7356477	1					
ANR	7356656	Argument	ptr		7356477	0					
ANR	7356657	Identifier	ptr		7356477	0					
ANR	7356658	Argument	& n -> mac_table . macs [ i * ETH_ALEN ]		7356477	1					
ANR	7356659	UnaryOperationExpression	& n -> mac_table . macs [ i * ETH_ALEN ]		7356477	0					
ANR	7356660	UnaryOperator	&		7356477	0					
ANR	7356661	ArrayIndexing	n -> mac_table . macs [ i * ETH_ALEN ]		7356477	1					
ANR	7356662	MemberAccess	n -> mac_table . macs		7356477	0					
ANR	7356663	PtrMemberAccess	n -> mac_table		7356477	0					
ANR	7356664	Identifier	n		7356477	0					
ANR	7356665	Identifier	mac_table		7356477	1					
ANR	7356666	Identifier	macs		7356477	1					
ANR	7356667	MultiplicativeExpression	i * ETH_ALEN		7356477	1		*			
ANR	7356668	Identifier	i		7356477	0					
ANR	7356669	Identifier	ETH_ALEN		7356477	1					
ANR	7356670	Argument	ETH_ALEN		7356477	2					
ANR	7356671	Identifier	ETH_ALEN		7356477	0					
ANR	7356672	ReturnStatement	return 1 ;	55:12:814:822	7356477	1	True				
ANR	7356673	PrimaryExpression	1		7356477	0					
ANR	7356674	ReturnStatement	return 0 ;	61:4:838:846	7356477	12	True				
ANR	7356675	PrimaryExpression	0		7356477	0					
ANR	7356676	ReturnType	static int		7356477	1					
ANR	7356677	Identifier	receive_filter		7356477	2					
ANR	7356678	ParameterList	"VirtIONet * n , const uint8_t * buf , int size"		7356477	3					
ANR	7356679	Parameter	VirtIONet * n	1:26:26:37	7356477	0	True				
ANR	7356680	ParameterType	VirtIONet *		7356477	0					
ANR	7356681	Identifier	n		7356477	1					
ANR	7356682	Parameter	const uint8_t * buf	1:40:40:57	7356477	1	True				
ANR	7356683	ParameterType	const uint8_t *		7356477	0					
ANR	7356684	Identifier	buf		7356477	1					
ANR	7356685	Parameter	int size	1:60:60:67	7356477	2	True				
ANR	7356686	ParameterType	int		7356477	0					
ANR	7356687	Identifier	size		7356477	1					
ANR	7356688	CFGEntryNode	ENTRY		7356477		True				
ANR	7356689	CFGExitNode	EXIT		7356477		True				
ANR	7356690	Symbol	n -> promisc		7356477						
ANR	7356691	Symbol	n -> mac_table		7356477						
ANR	7356692	Symbol	n -> mac_table . macs		7356477						
ANR	7356693	Symbol	ETH_ALEN		7356477						
ANR	7356694	Symbol	i		7356477						
ANR	7356695	Symbol	n		7356477						
ANR	7356696	Symbol	ptr		7356477						
ANR	7356697	Symbol	vid		7356477						
ANR	7356698	Symbol	buf		7356477						
ANR	7356699	Symbol	bcast		7356477						
ANR	7356700	Symbol	* n -> vlans		7356477						
ANR	7356701	Symbol	memcmp		7356477						
ANR	7356702	Symbol	n -> vlans		7356477						
ANR	7356703	Symbol	size		7356477						
ANR	7356704	Symbol	vlan		7356477						
ANR	7356705	Symbol	n -> allmulti		7356477						
ANR	7356706	Symbol	* n		7356477						
ANR	7356707	Symbol	* ptr		7356477						
ANR	7356708	Symbol	n -> mac_table . in_use		7356477						
ANR	7356709	Symbol	be16_to_cpup		7356477						
ANR	7356710	Symbol	* vid		7356477						
ANR	7356711	Symbol	* * n		7356477						
ANR	7356712	Symbol	n -> mac		7356477						
