command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5563378	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_get_fd_0.c								
ANR	5563379	Function	monitor_get_fd	1:0:0:442							
ANR	5563380	FunctionDef	"monitor_get_fd (Monitor * mon , const char * fdname)"		5563379	0					
ANR	5563381	CompoundStatement		3:0:54:442	5563379	0					
ANR	5563382	IdentifierDeclStatement	mon_fd_t * monfd ;	5:4:61:76	5563379	0	True				
ANR	5563383	IdentifierDecl	* monfd		5563379	0					
ANR	5563384	IdentifierDeclType	mon_fd_t *		5563379	0					
ANR	5563385	Identifier	monfd		5563379	1					
ANR	5563386	Statement	LIST_FOREACH	9:4:85:96	5563379	1	True				
ANR	5563387	Statement	(	9:16:97:97	5563379	2	True				
ANR	5563388	Statement	monfd	9:17:98:102	5563379	3	True				
ANR	5563389	Statement	","	9:22:103:103	5563379	4	True				
ANR	5563390	Statement	&	9:24:105:105	5563379	5	True				
ANR	5563391	Statement	mon	9:25:106:108	5563379	6	True				
ANR	5563392	Statement	->	9:28:109:110	5563379	7	True				
ANR	5563393	Statement	fds	9:30:111:113	5563379	8	True				
ANR	5563394	Statement	","	9:33:114:114	5563379	9	True				
ANR	5563395	Statement	next	9:35:116:119	5563379	10	True				
ANR	5563396	Statement	)	9:39:120:120	5563379	11	True				
ANR	5563397	CompoundStatement		9:8:78:84	5563379	12					
ANR	5563398	IdentifierDeclStatement	int fd ;	11:8:133:139	5563379	0	True				
ANR	5563399	IdentifierDecl	fd		5563379	0					
ANR	5563400	IdentifierDeclType	int		5563379	0					
ANR	5563401	Identifier	fd		5563379	1					
ANR	5563402	IfStatement	"if ( strcmp ( monfd -> name , fdname ) != 0 )"		5563379	1					
ANR	5563403	Condition	"strcmp ( monfd -> name , fdname ) != 0"	15:12:156:187	5563379	0	True				
ANR	5563404	EqualityExpression	"strcmp ( monfd -> name , fdname ) != 0"		5563379	0		!=			
ANR	5563405	CallExpression	"strcmp ( monfd -> name , fdname )"		5563379	0					
ANR	5563406	Callee	strcmp		5563379	0					
ANR	5563407	Identifier	strcmp		5563379	0					
ANR	5563408	ArgumentList	monfd -> name		5563379	1					
ANR	5563409	Argument	monfd -> name		5563379	0					
ANR	5563410	PtrMemberAccess	monfd -> name		5563379	0					
ANR	5563411	Identifier	monfd		5563379	0					
ANR	5563412	Identifier	name		5563379	1					
ANR	5563413	Argument	fdname		5563379	1					
ANR	5563414	Identifier	fdname		5563379	0					
ANR	5563415	PrimaryExpression	0		5563379	1					
ANR	5563416	CompoundStatement		13:46:135:135	5563379	1					
ANR	5563417	ContinueStatement	continue ;	17:12:205:213	5563379	0	True				
ANR	5563418	ExpressionStatement	fd = monfd -> fd	23:8:237:251	5563379	2	True				
ANR	5563419	AssignmentExpression	fd = monfd -> fd		5563379	0		=			
ANR	5563420	Identifier	fd		5563379	0					
ANR	5563421	PtrMemberAccess	monfd -> fd		5563379	1					
ANR	5563422	Identifier	monfd		5563379	0					
ANR	5563423	Identifier	fd		5563379	1					
ANR	5563424	ExpressionStatement	"LIST_REMOVE ( monfd , next )"	29:8:308:332	5563379	3	True				
ANR	5563425	CallExpression	"LIST_REMOVE ( monfd , next )"		5563379	0					
ANR	5563426	Callee	LIST_REMOVE		5563379	0					
ANR	5563427	Identifier	LIST_REMOVE		5563379	0					
ANR	5563428	ArgumentList	monfd		5563379	1					
ANR	5563429	Argument	monfd		5563379	0					
ANR	5563430	Identifier	monfd		5563379	0					
ANR	5563431	Argument	next		5563379	1					
ANR	5563432	Identifier	next		5563379	0					
ANR	5563433	ExpressionStatement	qemu_free ( monfd -> name )	31:8:343:365	5563379	4	True				
ANR	5563434	CallExpression	qemu_free ( monfd -> name )		5563379	0					
ANR	5563435	Callee	qemu_free		5563379	0					
ANR	5563436	Identifier	qemu_free		5563379	0					
ANR	5563437	ArgumentList	monfd -> name		5563379	1					
ANR	5563438	Argument	monfd -> name		5563379	0					
ANR	5563439	PtrMemberAccess	monfd -> name		5563379	0					
ANR	5563440	Identifier	monfd		5563379	0					
ANR	5563441	Identifier	name		5563379	1					
ANR	5563442	ExpressionStatement	qemu_free ( monfd )	33:8:376:392	5563379	5	True				
ANR	5563443	CallExpression	qemu_free ( monfd )		5563379	0					
ANR	5563444	Callee	qemu_free		5563379	0					
ANR	5563445	Identifier	qemu_free		5563379	0					
ANR	5563446	ArgumentList	monfd		5563379	1					
ANR	5563447	Argument	monfd		5563379	0					
ANR	5563448	Identifier	monfd		5563379	0					
ANR	5563449	ReturnStatement	return fd ;	37:8:405:414	5563379	6	True				
ANR	5563450	Identifier	fd		5563379	0					
ANR	5563451	ReturnStatement	return - 1 ;	43:4:430:439	5563379	13	True				
ANR	5563452	UnaryOperationExpression	- 1		5563379	0					
ANR	5563453	UnaryOperator	-		5563379	0					
ANR	5563454	PrimaryExpression	1		5563379	1					
ANR	5563455	ReturnType	int		5563379	1					
ANR	5563456	Identifier	monitor_get_fd		5563379	2					
ANR	5563457	ParameterList	"Monitor * mon , const char * fdname"		5563379	3					
ANR	5563458	Parameter	Monitor * mon	1:19:19:30	5563379	0	True				
ANR	5563459	ParameterType	Monitor *		5563379	0					
ANR	5563460	Identifier	mon		5563379	1					
ANR	5563461	Parameter	const char * fdname	1:33:33:50	5563379	1	True				
ANR	5563462	ParameterType	const char *		5563379	0					
ANR	5563463	Identifier	fdname		5563379	1					
ANR	5563464	CFGEntryNode	ENTRY		5563379		True				
ANR	5563465	CFGExitNode	EXIT		5563379		True				
ANR	5563466	CFGErrorNode	ERROR		5563379		True				
ANR	5563467	Symbol	strcmp		5563379						
ANR	5563468	Symbol	* monfd		5563379						
ANR	5563469	Symbol	monfd -> name		5563379						
ANR	5563470	Symbol	next		5563379						
ANR	5563471	Symbol	fdname		5563379						
ANR	5563472	Symbol	mon		5563379						
ANR	5563473	Symbol	monfd		5563379						
ANR	5563474	Symbol	fd		5563379						
ANR	5563475	Symbol	monfd -> fd		5563379						
