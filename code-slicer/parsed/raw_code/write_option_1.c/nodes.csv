command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9451609	File	/home/p4ultr4n/workplace/ReVeal/raw_code/write_option_1.c								
ANR	9451610	Function	write_option	1:0:0:1811							
ANR	9451611	FunctionDef	"write_option (void * optctx , const OptionDef * po , const char * opt , const char * arg)"		9451610	0					
ANR	9451612	CompoundStatement		5:0:119:1811	9451610	0					
ANR	9451613	IdentifierDeclStatement	void * dst = po -> flags & ( OPT_OFFSET | OPT_SPEC ) ? ( uint8_t * ) optctx + po -> u . off : po -> u . dst_ptr ;	11:4:227:339	9451610	0	True				
ANR	9451614	IdentifierDecl	* dst = po -> flags & ( OPT_OFFSET | OPT_SPEC ) ? ( uint8_t * ) optctx + po -> u . off : po -> u . dst_ptr		9451610	0					
ANR	9451615	IdentifierDeclType	void *		9451610	0					
ANR	9451616	Identifier	dst		9451610	1					
ANR	9451617	AssignmentExpression	* dst = po -> flags & ( OPT_OFFSET | OPT_SPEC ) ? ( uint8_t * ) optctx + po -> u . off : po -> u . dst_ptr		9451610	2		=			
ANR	9451618	Identifier	dst		9451610	0					
ANR	9451619	ConditionalExpression	po -> flags & ( OPT_OFFSET | OPT_SPEC ) ? ( uint8_t * ) optctx + po -> u . off : po -> u . dst_ptr		9451610	1					
ANR	9451620	Condition	po -> flags & ( OPT_OFFSET | OPT_SPEC )		9451610	0					
ANR	9451621	BitAndExpression	po -> flags & ( OPT_OFFSET | OPT_SPEC )		9451610	0		&			
ANR	9451622	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451623	Identifier	po		9451610	0					
ANR	9451624	Identifier	flags		9451610	1					
ANR	9451625	InclusiveOrExpression	OPT_OFFSET | OPT_SPEC		9451610	1		|			
ANR	9451626	Identifier	OPT_OFFSET		9451610	0					
ANR	9451627	Identifier	OPT_SPEC		9451610	1					
ANR	9451628	AdditiveExpression	( uint8_t * ) optctx + po -> u . off		9451610	1		+			
ANR	9451629	CastExpression	( uint8_t * ) optctx		9451610	0					
ANR	9451630	CastTarget	uint8_t *		9451610	0					
ANR	9451631	Identifier	optctx		9451610	1					
ANR	9451632	MemberAccess	po -> u . off		9451610	1					
ANR	9451633	PtrMemberAccess	po -> u		9451610	0					
ANR	9451634	Identifier	po		9451610	0					
ANR	9451635	Identifier	u		9451610	1					
ANR	9451636	Identifier	off		9451610	1					
ANR	9451637	MemberAccess	po -> u . dst_ptr		9451610	2					
ANR	9451638	PtrMemberAccess	po -> u		9451610	0					
ANR	9451639	Identifier	po		9451610	0					
ANR	9451640	Identifier	u		9451610	1					
ANR	9451641	Identifier	dst_ptr		9451610	1					
ANR	9451642	IdentifierDeclStatement	int * dstcount ;	15:4:346:359	9451610	1	True				
ANR	9451643	IdentifierDecl	* dstcount		9451610	0					
ANR	9451644	IdentifierDeclType	int *		9451610	0					
ANR	9451645	Identifier	dstcount		9451610	1					
ANR	9451646	IfStatement	if ( po -> flags & OPT_SPEC )		9451610	2					
ANR	9451647	Condition	po -> flags & OPT_SPEC	19:8:372:391	9451610	0	True				
ANR	9451648	BitAndExpression	po -> flags & OPT_SPEC		9451610	0		&			
ANR	9451649	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451650	Identifier	po		9451610	0					
ANR	9451651	Identifier	flags		9451610	1					
ANR	9451652	Identifier	OPT_SPEC		9451610	1					
ANR	9451653	CompoundStatement		19:8:319:345	9451610	1					
ANR	9451654	IdentifierDeclStatement	SpecifierOpt * * so = dst ;	21:8:405:428	9451610	0	True				
ANR	9451655	IdentifierDecl	* * so = dst		9451610	0					
ANR	9451656	IdentifierDeclType	SpecifierOpt * *		9451610	0					
ANR	9451657	Identifier	so		9451610	1					
ANR	9451658	AssignmentExpression	* * so = dst		9451610	2		=			
ANR	9451659	Identifier	dst		9451610	0					
ANR	9451660	Identifier	dst		9451610	1					
ANR	9451661	IdentifierDeclStatement	"char * p = strchr ( opt , ':' ) ;"	23:8:439:465	9451610	1	True				
ANR	9451662	IdentifierDecl	"* p = strchr ( opt , ':' )"		9451610	0					
ANR	9451663	IdentifierDeclType	char *		9451610	0					
ANR	9451664	Identifier	p		9451610	1					
ANR	9451665	AssignmentExpression	"* p = strchr ( opt , ':' )"		9451610	2		=			
ANR	9451666	Identifier	p		9451610	0					
ANR	9451667	CallExpression	"strchr ( opt , ':' )"		9451610	1					
ANR	9451668	Callee	strchr		9451610	0					
ANR	9451669	Identifier	strchr		9451610	0					
ANR	9451670	ArgumentList	opt		9451610	1					
ANR	9451671	Argument	opt		9451610	0					
ANR	9451672	Identifier	opt		9451610	0					
ANR	9451673	Argument	':'		9451610	1					
ANR	9451674	PrimaryExpression	':'		9451610	0					
ANR	9451675	ExpressionStatement	dstcount = ( int * ) ( so + 1 )	27:8:478:504	9451610	2	True				
ANR	9451676	AssignmentExpression	dstcount = ( int * ) ( so + 1 )		9451610	0		=			
ANR	9451677	Identifier	dstcount		9451610	0					
ANR	9451678	CastExpression	( int * ) ( so + 1 )		9451610	1					
ANR	9451679	CastTarget	int *		9451610	0					
ANR	9451680	AdditiveExpression	so + 1		9451610	1		+			
ANR	9451681	Identifier	so		9451610	0					
ANR	9451682	PrimaryExpression	1		9451610	1					
ANR	9451683	ExpressionStatement	"* so = grow_array ( * so , sizeof ( * * so ) , dstcount , * dstcount + 1 )"	29:8:515:575	9451610	3	True				
ANR	9451684	AssignmentExpression	"* so = grow_array ( * so , sizeof ( * * so ) , dstcount , * dstcount + 1 )"		9451610	0		=			
ANR	9451685	UnaryOperationExpression	* so		9451610	0					
ANR	9451686	UnaryOperator	*		9451610	0					
ANR	9451687	Identifier	so		9451610	1					
ANR	9451688	CallExpression	"grow_array ( * so , sizeof ( * * so ) , dstcount , * dstcount + 1 )"		9451610	1					
ANR	9451689	Callee	grow_array		9451610	0					
ANR	9451690	Identifier	grow_array		9451610	0					
ANR	9451691	ArgumentList	* so		9451610	1					
ANR	9451692	Argument	* so		9451610	0					
ANR	9451693	UnaryOperationExpression	* so		9451610	0					
ANR	9451694	UnaryOperator	*		9451610	0					
ANR	9451695	Identifier	so		9451610	1					
ANR	9451696	Argument	sizeof ( * * so )		9451610	1					
ANR	9451697	SizeofExpression	sizeof ( * * so )		9451610	0					
ANR	9451698	Sizeof	sizeof		9451610	0					
ANR	9451699	UnaryOperationExpression	* * so		9451610	1					
ANR	9451700	UnaryOperator	*		9451610	0					
ANR	9451701	UnaryOperationExpression	* so		9451610	1					
ANR	9451702	UnaryOperator	*		9451610	0					
ANR	9451703	Identifier	so		9451610	1					
ANR	9451704	Argument	dstcount		9451610	2					
ANR	9451705	Identifier	dstcount		9451610	0					
ANR	9451706	Argument	* dstcount + 1		9451610	3					
ANR	9451707	AdditiveExpression	* dstcount + 1		9451610	0		+			
ANR	9451708	UnaryOperationExpression	* dstcount		9451610	0					
ANR	9451709	UnaryOperator	*		9451610	0					
ANR	9451710	Identifier	dstcount		9451610	1					
ANR	9451711	PrimaryExpression	1		9451610	1					
ANR	9451712	ExpressionStatement	"( * so ) [ * dstcount - 1 ] . specifier = av_strdup ( p ? p + 1 : """" )"	31:8:586:644	9451610	4	True				
ANR	9451713	AssignmentExpression	"( * so ) [ * dstcount - 1 ] . specifier = av_strdup ( p ? p + 1 : """" )"		9451610	0		=			
ANR	9451714	MemberAccess	( * so ) [ * dstcount - 1 ] . specifier		9451610	0					
ANR	9451715	ArrayIndexing	( * so ) [ * dstcount - 1 ]		9451610	0					
ANR	9451716	UnaryOperationExpression	* so		9451610	0					
ANR	9451717	UnaryOperator	*		9451610	0					
ANR	9451718	Identifier	so		9451610	1					
ANR	9451719	AdditiveExpression	* dstcount - 1		9451610	1		-			
ANR	9451720	UnaryOperationExpression	* dstcount		9451610	0					
ANR	9451721	UnaryOperator	*		9451610	0					
ANR	9451722	Identifier	dstcount		9451610	1					
ANR	9451723	PrimaryExpression	1		9451610	1					
ANR	9451724	Identifier	specifier		9451610	1					
ANR	9451725	CallExpression	"av_strdup ( p ? p + 1 : """" )"		9451610	1					
ANR	9451726	Callee	av_strdup		9451610	0					
ANR	9451727	Identifier	av_strdup		9451610	0					
ANR	9451728	ArgumentList	"p ? p + 1 : """""		9451610	1					
ANR	9451729	Argument	"p ? p + 1 : """""		9451610	0					
ANR	9451730	ConditionalExpression	"p ? p + 1 : """""		9451610	0					
ANR	9451731	Condition	p		9451610	0					
ANR	9451732	Identifier	p		9451610	0					
ANR	9451733	AdditiveExpression	p + 1		9451610	1		+			
ANR	9451734	Identifier	p		9451610	0					
ANR	9451735	PrimaryExpression	1		9451610	1					
ANR	9451736	PrimaryExpression	""""""		9451610	2					
ANR	9451737	ExpressionStatement	dst = & ( * so ) [ * dstcount - 1 ] . u	33:8:655:684	9451610	5	True				
ANR	9451738	AssignmentExpression	dst = & ( * so ) [ * dstcount - 1 ] . u		9451610	0		=			
ANR	9451739	Identifier	dst		9451610	0					
ANR	9451740	UnaryOperationExpression	& ( * so ) [ * dstcount - 1 ] . u		9451610	1					
ANR	9451741	UnaryOperator	&		9451610	0					
ANR	9451742	MemberAccess	( * so ) [ * dstcount - 1 ] . u		9451610	1					
ANR	9451743	ArrayIndexing	( * so ) [ * dstcount - 1 ]		9451610	0					
ANR	9451744	UnaryOperationExpression	* so		9451610	0					
ANR	9451745	UnaryOperator	*		9451610	0					
ANR	9451746	Identifier	so		9451610	1					
ANR	9451747	AdditiveExpression	* dstcount - 1		9451610	1		-			
ANR	9451748	UnaryOperationExpression	* dstcount		9451610	0					
ANR	9451749	UnaryOperator	*		9451610	0					
ANR	9451750	Identifier	dstcount		9451610	1					
ANR	9451751	PrimaryExpression	1		9451610	1					
ANR	9451752	Identifier	u		9451610	1					
ANR	9451753	IfStatement	if ( po -> flags & OPT_STRING )		9451610	3					
ANR	9451754	Condition	po -> flags & OPT_STRING	39:8:704:725	9451610	0	True				
ANR	9451755	BitAndExpression	po -> flags & OPT_STRING		9451610	0		&			
ANR	9451756	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451757	Identifier	po		9451610	0					
ANR	9451758	Identifier	flags		9451610	1					
ANR	9451759	Identifier	OPT_STRING		9451610	1					
ANR	9451760	CompoundStatement		37:8:619:628	9451610	1					
ANR	9451761	IdentifierDeclStatement	char * str ;	41:8:739:748	9451610	0	True				
ANR	9451762	IdentifierDecl	* str		9451610	0					
ANR	9451763	IdentifierDeclType	char *		9451610	0					
ANR	9451764	Identifier	str		9451610	1					
ANR	9451765	ExpressionStatement	str = av_strdup ( arg )	43:8:759:779	9451610	1	True				
ANR	9451766	AssignmentExpression	str = av_strdup ( arg )		9451610	0		=			
ANR	9451767	Identifier	str		9451610	0					
ANR	9451768	CallExpression	av_strdup ( arg )		9451610	1					
ANR	9451769	Callee	av_strdup		9451610	0					
ANR	9451770	Identifier	av_strdup		9451610	0					
ANR	9451771	ArgumentList	arg		9451610	1					
ANR	9451772	Argument	arg		9451610	0					
ANR	9451773	Identifier	arg		9451610	0					
ANR	9451774	ExpressionStatement	av_freep ( dst )	45:8:790:803	9451610	2	True				
ANR	9451775	CallExpression	av_freep ( dst )		9451610	0					
ANR	9451776	Callee	av_freep		9451610	0					
ANR	9451777	Identifier	av_freep		9451610	0					
ANR	9451778	ArgumentList	dst		9451610	1					
ANR	9451779	Argument	dst		9451610	0					
ANR	9451780	Identifier	dst		9451610	0					
ANR	9451781	ExpressionStatement	* ( char * * ) dst = str	47:8:814:833	9451610	3	True				
ANR	9451782	AssignmentExpression	* ( char * * ) dst = str		9451610	0		=			
ANR	9451783	UnaryOperationExpression	* ( char * * ) dst		9451610	0					
ANR	9451784	UnaryOperator	*		9451610	0					
ANR	9451785	CastExpression	( char * * ) dst		9451610	1					
ANR	9451786	CastTarget	char * *		9451610	0					
ANR	9451787	Identifier	dst		9451610	1					
ANR	9451788	Identifier	str		9451610	1					
ANR	9451789	ElseStatement	else		9451610	0					
ANR	9451790	IfStatement	if ( po -> flags & OPT_BOOL || po -> flags & OPT_INT )		9451610	0					
ANR	9451791	Condition	po -> flags & OPT_BOOL || po -> flags & OPT_INT	49:15:851:893	9451610	0	True				
ANR	9451792	OrExpression	po -> flags & OPT_BOOL || po -> flags & OPT_INT		9451610	0		||			
ANR	9451793	BitAndExpression	po -> flags & OPT_BOOL		9451610	0		&			
ANR	9451794	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451795	Identifier	po		9451610	0					
ANR	9451796	Identifier	flags		9451610	1					
ANR	9451797	Identifier	OPT_BOOL		9451610	1					
ANR	9451798	BitAndExpression	po -> flags & OPT_INT		9451610	1		&			
ANR	9451799	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451800	Identifier	po		9451610	0					
ANR	9451801	Identifier	flags		9451610	1					
ANR	9451802	Identifier	OPT_INT		9451610	1					
ANR	9451803	CompoundStatement		45:60:776:776	9451610	1					
ANR	9451804	ExpressionStatement	"* ( int * ) dst = parse_number_or_die ( opt , arg , OPT_INT64 , INT_MIN , INT_MAX )"	51:8:907:979	9451610	0	True				
ANR	9451805	AssignmentExpression	"* ( int * ) dst = parse_number_or_die ( opt , arg , OPT_INT64 , INT_MIN , INT_MAX )"		9451610	0		=			
ANR	9451806	UnaryOperationExpression	* ( int * ) dst		9451610	0					
ANR	9451807	UnaryOperator	*		9451610	0					
ANR	9451808	CastExpression	( int * ) dst		9451610	1					
ANR	9451809	CastTarget	int *		9451610	0					
ANR	9451810	Identifier	dst		9451610	1					
ANR	9451811	CallExpression	"parse_number_or_die ( opt , arg , OPT_INT64 , INT_MIN , INT_MAX )"		9451610	1					
ANR	9451812	Callee	parse_number_or_die		9451610	0					
ANR	9451813	Identifier	parse_number_or_die		9451610	0					
ANR	9451814	ArgumentList	opt		9451610	1					
ANR	9451815	Argument	opt		9451610	0					
ANR	9451816	Identifier	opt		9451610	0					
ANR	9451817	Argument	arg		9451610	1					
ANR	9451818	Identifier	arg		9451610	0					
ANR	9451819	Argument	OPT_INT64		9451610	2					
ANR	9451820	Identifier	OPT_INT64		9451610	0					
ANR	9451821	Argument	INT_MIN		9451610	3					
ANR	9451822	Identifier	INT_MIN		9451610	0					
ANR	9451823	Argument	INT_MAX		9451610	4					
ANR	9451824	Identifier	INT_MAX		9451610	0					
ANR	9451825	ElseStatement	else		9451610	0					
ANR	9451826	IfStatement	if ( po -> flags & OPT_INT64 )		9451610	0					
ANR	9451827	Condition	po -> flags & OPT_INT64	53:15:997:1017	9451610	0	True				
ANR	9451828	BitAndExpression	po -> flags & OPT_INT64		9451610	0		&			
ANR	9451829	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451830	Identifier	po		9451610	0					
ANR	9451831	Identifier	flags		9451610	1					
ANR	9451832	Identifier	OPT_INT64		9451610	1					
ANR	9451833	CompoundStatement		49:38:900:900	9451610	1					
ANR	9451834	ExpressionStatement	"* ( int64_t * ) dst = parse_number_or_die ( opt , arg , OPT_INT64 , INT64_MIN , INT64_MAX )"	55:8:1031:1111	9451610	0	True				
ANR	9451835	AssignmentExpression	"* ( int64_t * ) dst = parse_number_or_die ( opt , arg , OPT_INT64 , INT64_MIN , INT64_MAX )"		9451610	0		=			
ANR	9451836	UnaryOperationExpression	* ( int64_t * ) dst		9451610	0					
ANR	9451837	UnaryOperator	*		9451610	0					
ANR	9451838	CastExpression	( int64_t * ) dst		9451610	1					
ANR	9451839	CastTarget	int64_t *		9451610	0					
ANR	9451840	Identifier	dst		9451610	1					
ANR	9451841	CallExpression	"parse_number_or_die ( opt , arg , OPT_INT64 , INT64_MIN , INT64_MAX )"		9451610	1					
ANR	9451842	Callee	parse_number_or_die		9451610	0					
ANR	9451843	Identifier	parse_number_or_die		9451610	0					
ANR	9451844	ArgumentList	opt		9451610	1					
ANR	9451845	Argument	opt		9451610	0					
ANR	9451846	Identifier	opt		9451610	0					
ANR	9451847	Argument	arg		9451610	1					
ANR	9451848	Identifier	arg		9451610	0					
ANR	9451849	Argument	OPT_INT64		9451610	2					
ANR	9451850	Identifier	OPT_INT64		9451610	0					
ANR	9451851	Argument	INT64_MIN		9451610	3					
ANR	9451852	Identifier	INT64_MIN		9451610	0					
ANR	9451853	Argument	INT64_MAX		9451610	4					
ANR	9451854	Identifier	INT64_MAX		9451610	0					
ANR	9451855	ElseStatement	else		9451610	0					
ANR	9451856	IfStatement	if ( po -> flags & OPT_TIME )		9451610	0					
ANR	9451857	Condition	po -> flags & OPT_TIME	57:15:1129:1148	9451610	0	True				
ANR	9451858	BitAndExpression	po -> flags & OPT_TIME		9451610	0		&			
ANR	9451859	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451860	Identifier	po		9451610	0					
ANR	9451861	Identifier	flags		9451610	1					
ANR	9451862	Identifier	OPT_TIME		9451610	1					
ANR	9451863	CompoundStatement		53:37:1031:1031	9451610	1					
ANR	9451864	ExpressionStatement	"* ( int64_t * ) dst = parse_time_or_die ( opt , arg , 1 )"	59:8:1162:1210	9451610	0	True				
ANR	9451865	AssignmentExpression	"* ( int64_t * ) dst = parse_time_or_die ( opt , arg , 1 )"		9451610	0		=			
ANR	9451866	UnaryOperationExpression	* ( int64_t * ) dst		9451610	0					
ANR	9451867	UnaryOperator	*		9451610	0					
ANR	9451868	CastExpression	( int64_t * ) dst		9451610	1					
ANR	9451869	CastTarget	int64_t *		9451610	0					
ANR	9451870	Identifier	dst		9451610	1					
ANR	9451871	CallExpression	"parse_time_or_die ( opt , arg , 1 )"		9451610	1					
ANR	9451872	Callee	parse_time_or_die		9451610	0					
ANR	9451873	Identifier	parse_time_or_die		9451610	0					
ANR	9451874	ArgumentList	opt		9451610	1					
ANR	9451875	Argument	opt		9451610	0					
ANR	9451876	Identifier	opt		9451610	0					
ANR	9451877	Argument	arg		9451610	1					
ANR	9451878	Identifier	arg		9451610	0					
ANR	9451879	Argument	1		9451610	2					
ANR	9451880	PrimaryExpression	1		9451610	0					
ANR	9451881	ElseStatement	else		9451610	0					
ANR	9451882	IfStatement	if ( po -> flags & OPT_FLOAT )		9451610	0					
ANR	9451883	Condition	po -> flags & OPT_FLOAT	61:15:1228:1248	9451610	0	True				
ANR	9451884	BitAndExpression	po -> flags & OPT_FLOAT		9451610	0		&			
ANR	9451885	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451886	Identifier	po		9451610	0					
ANR	9451887	Identifier	flags		9451610	1					
ANR	9451888	Identifier	OPT_FLOAT		9451610	1					
ANR	9451889	CompoundStatement		57:38:1131:1131	9451610	1					
ANR	9451890	ExpressionStatement	"* ( float * ) dst = parse_number_or_die ( opt , arg , OPT_FLOAT , - INFINITY , INFINITY )"	63:8:1262:1339	9451610	0	True				
ANR	9451891	AssignmentExpression	"* ( float * ) dst = parse_number_or_die ( opt , arg , OPT_FLOAT , - INFINITY , INFINITY )"		9451610	0		=			
ANR	9451892	UnaryOperationExpression	* ( float * ) dst		9451610	0					
ANR	9451893	UnaryOperator	*		9451610	0					
ANR	9451894	CastExpression	( float * ) dst		9451610	1					
ANR	9451895	CastTarget	float *		9451610	0					
ANR	9451896	Identifier	dst		9451610	1					
ANR	9451897	CallExpression	"parse_number_or_die ( opt , arg , OPT_FLOAT , - INFINITY , INFINITY )"		9451610	1					
ANR	9451898	Callee	parse_number_or_die		9451610	0					
ANR	9451899	Identifier	parse_number_or_die		9451610	0					
ANR	9451900	ArgumentList	opt		9451610	1					
ANR	9451901	Argument	opt		9451610	0					
ANR	9451902	Identifier	opt		9451610	0					
ANR	9451903	Argument	arg		9451610	1					
ANR	9451904	Identifier	arg		9451610	0					
ANR	9451905	Argument	OPT_FLOAT		9451610	2					
ANR	9451906	Identifier	OPT_FLOAT		9451610	0					
ANR	9451907	Argument	- INFINITY		9451610	3					
ANR	9451908	UnaryOperationExpression	- INFINITY		9451610	0					
ANR	9451909	UnaryOperator	-		9451610	0					
ANR	9451910	Identifier	INFINITY		9451610	1					
ANR	9451911	Argument	INFINITY		9451610	4					
ANR	9451912	Identifier	INFINITY		9451610	0					
ANR	9451913	ElseStatement	else		9451610	0					
ANR	9451914	IfStatement	if ( po -> flags & OPT_DOUBLE )		9451610	0					
ANR	9451915	Condition	po -> flags & OPT_DOUBLE	65:15:1357:1378	9451610	0	True				
ANR	9451916	BitAndExpression	po -> flags & OPT_DOUBLE		9451610	0		&			
ANR	9451917	PtrMemberAccess	po -> flags		9451610	0					
ANR	9451918	Identifier	po		9451610	0					
ANR	9451919	Identifier	flags		9451610	1					
ANR	9451920	Identifier	OPT_DOUBLE		9451610	1					
ANR	9451921	CompoundStatement		61:39:1261:1261	9451610	1					
ANR	9451922	ExpressionStatement	"* ( double * ) dst = parse_number_or_die ( opt , arg , OPT_DOUBLE , - INFINITY , INFINITY )"	67:8:1392:1471	9451610	0	True				
ANR	9451923	AssignmentExpression	"* ( double * ) dst = parse_number_or_die ( opt , arg , OPT_DOUBLE , - INFINITY , INFINITY )"		9451610	0		=			
ANR	9451924	UnaryOperationExpression	* ( double * ) dst		9451610	0					
ANR	9451925	UnaryOperator	*		9451610	0					
ANR	9451926	CastExpression	( double * ) dst		9451610	1					
ANR	9451927	CastTarget	double *		9451610	0					
ANR	9451928	Identifier	dst		9451610	1					
ANR	9451929	CallExpression	"parse_number_or_die ( opt , arg , OPT_DOUBLE , - INFINITY , INFINITY )"		9451610	1					
ANR	9451930	Callee	parse_number_or_die		9451610	0					
ANR	9451931	Identifier	parse_number_or_die		9451610	0					
ANR	9451932	ArgumentList	opt		9451610	1					
ANR	9451933	Argument	opt		9451610	0					
ANR	9451934	Identifier	opt		9451610	0					
ANR	9451935	Argument	arg		9451610	1					
ANR	9451936	Identifier	arg		9451610	0					
ANR	9451937	Argument	OPT_DOUBLE		9451610	2					
ANR	9451938	Identifier	OPT_DOUBLE		9451610	0					
ANR	9451939	Argument	- INFINITY		9451610	3					
ANR	9451940	UnaryOperationExpression	- INFINITY		9451610	0					
ANR	9451941	UnaryOperator	-		9451610	0					
ANR	9451942	Identifier	INFINITY		9451610	1					
ANR	9451943	Argument	INFINITY		9451610	4					
ANR	9451944	Identifier	INFINITY		9451610	0					
ANR	9451945	ElseStatement	else		9451610	0					
ANR	9451946	IfStatement	if ( po -> u . func_arg )		9451610	0					
ANR	9451947	Condition	po -> u . func_arg	69:15:1489:1502	9451610	0	True				
ANR	9451948	MemberAccess	po -> u . func_arg		9451610	0					
ANR	9451949	PtrMemberAccess	po -> u		9451610	0					
ANR	9451950	Identifier	po		9451610	0					
ANR	9451951	Identifier	u		9451610	1					
ANR	9451952	Identifier	func_arg		9451610	1					
ANR	9451953	CompoundStatement		67:8:1396:1438	9451610	1					
ANR	9451954	IdentifierDeclStatement	"int ret = po -> u . func_arg ( optctx , opt , arg ) ;"	71:8:1516:1558	9451610	0	True				
ANR	9451955	IdentifierDecl	"ret = po -> u . func_arg ( optctx , opt , arg )"		9451610	0					
ANR	9451956	IdentifierDeclType	int		9451610	0					
ANR	9451957	Identifier	ret		9451610	1					
ANR	9451958	AssignmentExpression	"ret = po -> u . func_arg ( optctx , opt , arg )"		9451610	2		=			
ANR	9451959	Identifier	ret		9451610	0					
ANR	9451960	CallExpression	"po -> u . func_arg ( optctx , opt , arg )"		9451610	1					
ANR	9451961	Callee	po -> u . func_arg		9451610	0					
ANR	9451962	MemberAccess	po -> u . func_arg		9451610	0					
ANR	9451963	PtrMemberAccess	po -> u		9451610	0					
ANR	9451964	Identifier	po		9451610	0					
ANR	9451965	Identifier	u		9451610	1					
ANR	9451966	Identifier	func_arg		9451610	1					
ANR	9451967	ArgumentList	optctx		9451610	1					
ANR	9451968	Argument	optctx		9451610	0					
ANR	9451969	Identifier	optctx		9451610	0					
ANR	9451970	Argument	opt		9451610	1					
ANR	9451971	Identifier	opt		9451610	0					
ANR	9451972	Argument	arg		9451610	2					
ANR	9451973	Identifier	arg		9451610	0					
ANR	9451974	IfStatement	if ( ret < 0 )		9451610	1					
ANR	9451975	Condition	ret < 0	73:12:1573:1579	9451610	0	True				
ANR	9451976	RelationalExpression	ret < 0		9451610	0		<			
ANR	9451977	Identifier	ret		9451610	0					
ANR	9451978	PrimaryExpression	0		9451610	1					
ANR	9451979	CompoundStatement		69:21:1462:1462	9451610	1					
ANR	9451980	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Failed to set value '%s' for option '%s'\\n"" , arg , opt )"	75:12:1597:1699	9451610	0	True				
ANR	9451981	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Failed to set value '%s' for option '%s'\\n"" , arg , opt )"		9451610	0					
ANR	9451982	Callee	av_log		9451610	0					
ANR	9451983	Identifier	av_log		9451610	0					
ANR	9451984	ArgumentList	NULL		9451610	1					
ANR	9451985	Argument	NULL		9451610	0					
ANR	9451986	Identifier	NULL		9451610	0					
ANR	9451987	Argument	AV_LOG_ERROR		9451610	1					
ANR	9451988	Identifier	AV_LOG_ERROR		9451610	0					
ANR	9451989	Argument	"""Failed to set value '%s' for option '%s'\\n"""		9451610	2					
ANR	9451990	PrimaryExpression	"""Failed to set value '%s' for option '%s'\\n"""		9451610	0					
ANR	9451991	Argument	arg		9451610	3					
ANR	9451992	Identifier	arg		9451610	0					
ANR	9451993	Argument	opt		9451610	4					
ANR	9451994	Identifier	opt		9451610	0					
ANR	9451995	ReturnStatement	return ret ;	79:12:1714:1724	9451610	1	True				
ANR	9451996	Identifier	ret		9451610	0					
ANR	9451997	IfStatement	if ( po -> flags & OPT_EXIT )		9451610	4					
ANR	9451998	Condition	po -> flags & OPT_EXIT	85:8:1753:1772	9451610	0	True				
ANR	9451999	BitAndExpression	po -> flags & OPT_EXIT		9451610	0		&			
ANR	9452000	PtrMemberAccess	po -> flags		9451610	0					
ANR	9452001	Identifier	po		9451610	0					
ANR	9452002	Identifier	flags		9451610	1					
ANR	9452003	Identifier	OPT_EXIT		9451610	1					
ANR	9452004	ExpressionStatement	exit ( 0 )	87:8:1784:1791	9451610	1	True				
ANR	9452005	CallExpression	exit ( 0 )		9451610	0					
ANR	9452006	Callee	exit		9451610	0					
ANR	9452007	Identifier	exit		9451610	0					
ANR	9452008	ArgumentList	0		9451610	1					
ANR	9452009	Argument	0		9451610	0					
ANR	9452010	PrimaryExpression	0		9451610	0					
ANR	9452011	ReturnStatement	return 0 ;	91:4:1800:1808	9451610	5	True				
ANR	9452012	PrimaryExpression	0		9451610	0					
ANR	9452013	ReturnType	static int		9451610	1					
ANR	9452014	Identifier	write_option		9451610	2					
ANR	9452015	ParameterList	"void * optctx , const OptionDef * po , const char * opt , const char * arg"		9451610	3					
ANR	9452016	Parameter	void * optctx	1:24:24:35	9451610	0	True				
ANR	9452017	ParameterType	void *		9451610	0					
ANR	9452018	Identifier	optctx		9451610	1					
ANR	9452019	Parameter	const OptionDef * po	1:38:38:56	9451610	1	True				
ANR	9452020	ParameterType	const OptionDef *		9451610	0					
ANR	9452021	Identifier	po		9451610	1					
ANR	9452022	Parameter	const char * opt	1:59:59:73	9451610	2	True				
ANR	9452023	ParameterType	const char *		9451610	0					
ANR	9452024	Identifier	opt		9451610	1					
ANR	9452025	Parameter	const char * arg	3:24:101:115	9451610	3	True				
ANR	9452026	ParameterType	const char *		9451610	0					
ANR	9452027	Identifier	arg		9451610	1					
ANR	9452028	CFGEntryNode	ENTRY		9451610		True				
ANR	9452029	CFGExitNode	EXIT		9451610		True				
ANR	9452030	Symbol	* so		9451610						
ANR	9452031	Symbol	av_strdup		9451610						
ANR	9452032	Symbol	* * dstcount		9451610						
ANR	9452033	Symbol	strchr		9451610						
ANR	9452034	Symbol	INT64_MAX		9451610						
ANR	9452035	Symbol	* ( char * * ) dst		9451610						
ANR	9452036	Symbol	* dst		9451610						
ANR	9452037	Symbol	dstcount		9451610						
ANR	9452038	Symbol	OPT_DOUBLE		9451610						
ANR	9452039	Symbol	OPT_OFFSET		9451610						
ANR	9452040	Symbol	po -> u . off		9451610						
ANR	9452041	Symbol	INT64_MIN		9451610						
ANR	9452042	Symbol	ret		9451610						
ANR	9452043	Symbol	po -> u . dst_ptr		9451610						
ANR	9452044	Symbol	NULL		9451610						
ANR	9452045	Symbol	* ( int * ) dst		9451610						
ANR	9452046	Symbol	* po		9451610						
ANR	9452047	Symbol	parse_number_or_die		9451610						
ANR	9452048	Symbol	po -> u . func_arg		9451610						
ANR	9452049	Symbol	& ( * so ) [ * dstcount - 1 ] . u		9451610						
ANR	9452050	Symbol	str		9451610						
ANR	9452051	Symbol	opt		9451610						
ANR	9452052	Symbol	OPT_FLOAT		9451610						
ANR	9452053	Symbol	* dstcount		9451610						
ANR	9452054	Symbol	OPT_BOOL		9451610						
ANR	9452055	Symbol	po -> u		9451610						
ANR	9452056	Symbol	* ( float * ) dst		9451610						
ANR	9452057	Symbol	dst		9451610						
ANR	9452058	Symbol	* ( int64_t * ) dst		9451610						
ANR	9452059	Symbol	* * so		9451610						
ANR	9452060	Symbol	INT_MIN		9451610						
ANR	9452061	Symbol	OPT_SPEC		9451610						
ANR	9452062	Symbol	INFINITY		9451610						
ANR	9452063	Symbol	OPT_TIME		9451610						
ANR	9452064	Symbol	* ( double * ) dst		9451610						
ANR	9452065	Symbol	arg		9451610						
ANR	9452066	Symbol	INT_MAX		9451610						
ANR	9452067	Symbol	parse_time_or_die		9451610						
ANR	9452068	Symbol	so		9451610						
ANR	9452069	Symbol	optctx		9451610						
ANR	9452070	Symbol	AV_LOG_ERROR		9451610						
ANR	9452071	Symbol	( * so ) [ * dstcount - 1 ] . specifier		9451610						
ANR	9452072	Symbol	OPT_EXIT		9451610						
ANR	9452073	Symbol	OPT_INT64		9451610						
ANR	9452074	Symbol	po -> flags		9451610						
ANR	9452075	Symbol	p		9451610						
ANR	9452076	Symbol	OPT_INT		9451610						
ANR	9452077	Symbol	OPT_STRING		9451610						
ANR	9452078	Symbol	grow_array		9451610						
ANR	9452079	Symbol	po		9451610						
