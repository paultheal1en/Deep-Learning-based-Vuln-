command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8638336	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_vlcs_0.c								
ANR	8638337	Function	unpack_vlcs	1:0:0:2431							
ANR	8638338	FunctionDef	"unpack_vlcs (Vp3DecodeContext * s , GetBitContext * gb , VLC * table , int coeff_index , int first_fragment , int last_fragment , int eob_run)"		8638337	0					
ANR	8638339	CompoundStatement		9:0:220:2431	8638337	0					
ANR	8638340	IdentifierDeclStatement	int i ;	11:4:227:232	8638337	0	True				
ANR	8638341	IdentifierDecl	i		8638337	0					
ANR	8638342	IdentifierDeclType	int		8638337	0					
ANR	8638343	Identifier	i		8638337	1					
ANR	8638344	IdentifierDeclStatement	int token ;	13:4:239:248	8638337	1	True				
ANR	8638345	IdentifierDecl	token		8638337	0					
ANR	8638346	IdentifierDeclType	int		8638337	0					
ANR	8638347	Identifier	token		8638337	1					
ANR	8638348	IdentifierDeclStatement	int zero_run = 0 ;	15:4:255:271	8638337	2	True				
ANR	8638349	IdentifierDecl	zero_run = 0		8638337	0					
ANR	8638350	IdentifierDeclType	int		8638337	0					
ANR	8638351	Identifier	zero_run		8638337	1					
ANR	8638352	AssignmentExpression	zero_run = 0		8638337	2		=			
ANR	8638353	Identifier	zero_run		8638337	0					
ANR	8638354	PrimaryExpression	0		8638337	1					
ANR	8638355	IdentifierDeclStatement	DCTELEM coeff = 0 ;	17:4:278:295	8638337	3	True				
ANR	8638356	IdentifierDecl	coeff = 0		8638337	0					
ANR	8638357	IdentifierDeclType	DCTELEM		8638337	0					
ANR	8638358	Identifier	coeff		8638337	1					
ANR	8638359	AssignmentExpression	coeff = 0		8638337	2		=			
ANR	8638360	Identifier	coeff		8638337	0					
ANR	8638361	PrimaryExpression	0		8638337	1					
ANR	8638362	IdentifierDeclStatement	Vp3Fragment * fragment ;	19:4:302:323	8638337	4	True				
ANR	8638363	IdentifierDecl	* fragment		8638337	0					
ANR	8638364	IdentifierDeclType	Vp3Fragment *		8638337	0					
ANR	8638365	Identifier	fragment		8638337	1					
ANR	8638366	IdentifierDeclStatement	uint8_t * perm = s -> scantable . permutated ;	21:4:330:368	8638337	5	True				
ANR	8638367	IdentifierDecl	* perm = s -> scantable . permutated		8638337	0					
ANR	8638368	IdentifierDeclType	uint8_t *		8638337	0					
ANR	8638369	Identifier	perm		8638337	1					
ANR	8638370	AssignmentExpression	* perm = s -> scantable . permutated		8638337	2		=			
ANR	8638371	Identifier	perm		8638337	0					
ANR	8638372	MemberAccess	s -> scantable . permutated		8638337	1					
ANR	8638373	PtrMemberAccess	s -> scantable		8638337	0					
ANR	8638374	Identifier	s		8638337	0					
ANR	8638375	Identifier	scantable		8638337	1					
ANR	8638376	Identifier	permutated		8638337	1					
ANR	8638377	IdentifierDeclStatement	int bits_to_get ;	23:4:375:390	8638337	6	True				
ANR	8638378	IdentifierDecl	bits_to_get		8638337	0					
ANR	8638379	IdentifierDeclType	int		8638337	0					
ANR	8638380	Identifier	bits_to_get		8638337	1					
ANR	8638381	IfStatement	if ( ( first_fragment >= s -> fragment_count ) || ( last_fragment >= s -> fragment_count ) )		8638337	7					
ANR	8638382	Condition	( first_fragment >= s -> fragment_count ) || ( last_fragment >= s -> fragment_count )	27:8:403:488	8638337	0	True				
ANR	8638383	OrExpression	( first_fragment >= s -> fragment_count ) || ( last_fragment >= s -> fragment_count )		8638337	0		||			
ANR	8638384	RelationalExpression	first_fragment >= s -> fragment_count		8638337	0		>=			
ANR	8638385	Identifier	first_fragment		8638337	0					
ANR	8638386	PtrMemberAccess	s -> fragment_count		8638337	1					
ANR	8638387	Identifier	s		8638337	0					
ANR	8638388	Identifier	fragment_count		8638337	1					
ANR	8638389	RelationalExpression	last_fragment >= s -> fragment_count		8638337	1		>=			
ANR	8638390	Identifier	last_fragment		8638337	0					
ANR	8638391	PtrMemberAccess	s -> fragment_count		8638337	1					
ANR	8638392	Identifier	s		8638337	0					
ANR	8638393	Identifier	fragment_count		8638337	1					
ANR	8638394	CompoundStatement		21:46:270:270	8638337	1					
ANR	8638395	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_vlcs(): bad fragment number (%d -> %d ?)\\n"" , first_fragment , last_fragment )"	33:8:504:637	8638337	0	True				
ANR	8638396	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_vlcs(): bad fragment number (%d -> %d ?)\\n"" , first_fragment , last_fragment )"		8638337	0					
ANR	8638397	Callee	av_log		8638337	0					
ANR	8638398	Identifier	av_log		8638337	0					
ANR	8638399	ArgumentList	s -> avctx		8638337	1					
ANR	8638400	Argument	s -> avctx		8638337	0					
ANR	8638401	PtrMemberAccess	s -> avctx		8638337	0					
ANR	8638402	Identifier	s		8638337	0					
ANR	8638403	Identifier	avctx		8638337	1					
ANR	8638404	Argument	AV_LOG_ERROR		8638337	1					
ANR	8638405	Identifier	AV_LOG_ERROR		8638337	0					
ANR	8638406	Argument	"""  vp3:unpack_vlcs(): bad fragment number (%d -> %d ?)\\n"""		8638337	2					
ANR	8638407	PrimaryExpression	"""  vp3:unpack_vlcs(): bad fragment number (%d -> %d ?)\\n"""		8638337	0					
ANR	8638408	Argument	first_fragment		8638337	3					
ANR	8638409	Identifier	first_fragment		8638337	0					
ANR	8638410	Argument	last_fragment		8638337	4					
ANR	8638411	Identifier	last_fragment		8638337	0					
ANR	8638412	ReturnStatement	return 0 ;	37:8:648:656	8638337	1	True				
ANR	8638413	PrimaryExpression	0		8638337	0					
ANR	8638414	ForStatement	for ( i = first_fragment ; i <= last_fragment ; i ++ )		8638337	8					
ANR	8638415	ForInit	i = first_fragment ;	43:9:677:695	8638337	0	True				
ANR	8638416	AssignmentExpression	i = first_fragment		8638337	0		=			
ANR	8638417	Identifier	i		8638337	0					
ANR	8638418	Identifier	first_fragment		8638337	1					
ANR	8638419	Condition	i <= last_fragment	43:29:697:714	8638337	1	True				
ANR	8638420	RelationalExpression	i <= last_fragment		8638337	0		<=			
ANR	8638421	Identifier	i		8638337	0					
ANR	8638422	Identifier	last_fragment		8638337	1					
ANR	8638423	PostIncDecOperationExpression	i ++	43:49:717:719	8638337	2	True				
ANR	8638424	Identifier	i		8638337	0					
ANR	8638425	IncDec	++		8638337	1					
ANR	8638426	CompoundStatement		37:8:512:556	8638337	3					
ANR	8638427	IdentifierDeclStatement	int fragment_num = s -> coded_fragment_list [ i ] ;	45:8:733:777	8638337	0	True				
ANR	8638428	IdentifierDecl	fragment_num = s -> coded_fragment_list [ i ]		8638337	0					
ANR	8638429	IdentifierDeclType	int		8638337	0					
ANR	8638430	Identifier	fragment_num		8638337	1					
ANR	8638431	AssignmentExpression	fragment_num = s -> coded_fragment_list [ i ]		8638337	2		=			
ANR	8638432	Identifier	fragment_num		8638337	0					
ANR	8638433	ArrayIndexing	s -> coded_fragment_list [ i ]		8638337	1					
ANR	8638434	PtrMemberAccess	s -> coded_fragment_list		8638337	0					
ANR	8638435	Identifier	s		8638337	0					
ANR	8638436	Identifier	coded_fragment_list		8638337	1					
ANR	8638437	Identifier	i		8638337	1					
ANR	8638438	IfStatement	if ( s -> coeff_counts [ fragment_num ] > coeff_index )		8638337	1					
ANR	8638439	Condition	s -> coeff_counts [ fragment_num ] > coeff_index	49:12:794:836	8638337	0	True				
ANR	8638440	RelationalExpression	s -> coeff_counts [ fragment_num ] > coeff_index		8638337	0		>			
ANR	8638441	ArrayIndexing	s -> coeff_counts [ fragment_num ]		8638337	0					
ANR	8638442	PtrMemberAccess	s -> coeff_counts		8638337	0					
ANR	8638443	Identifier	s		8638337	0					
ANR	8638444	Identifier	coeff_counts		8638337	1					
ANR	8638445	Identifier	fragment_num		8638337	1					
ANR	8638446	Identifier	coeff_index		8638337	1					
ANR	8638447	ContinueStatement	continue ;	51:12:852:860	8638337	1	True				
ANR	8638448	ExpressionStatement	fragment = & s -> all_fragments [ fragment_num ]	53:8:871:913	8638337	2	True				
ANR	8638449	AssignmentExpression	fragment = & s -> all_fragments [ fragment_num ]		8638337	0		=			
ANR	8638450	Identifier	fragment		8638337	0					
ANR	8638451	UnaryOperationExpression	& s -> all_fragments [ fragment_num ]		8638337	1					
ANR	8638452	UnaryOperator	&		8638337	0					
ANR	8638453	ArrayIndexing	s -> all_fragments [ fragment_num ]		8638337	1					
ANR	8638454	PtrMemberAccess	s -> all_fragments		8638337	0					
ANR	8638455	Identifier	s		8638337	0					
ANR	8638456	Identifier	all_fragments		8638337	1					
ANR	8638457	Identifier	fragment_num		8638337	1					
ANR	8638458	IfStatement	if ( ! eob_run )		8638337	3					
ANR	8638459	Condition	! eob_run	57:12:930:937	8638337	0	True				
ANR	8638460	UnaryOperationExpression	! eob_run		8638337	0					
ANR	8638461	UnaryOperator	!		8638337	0					
ANR	8638462	Identifier	eob_run		8638337	1					
ANR	8638463	CompoundStatement		49:22:719:719	8638337	1					
ANR	8638464	ExpressionStatement	"token = get_vlc2 ( gb , table -> table , 5 , 3 )"	61:12:1000:1040	8638337	0	True				
ANR	8638465	AssignmentExpression	"token = get_vlc2 ( gb , table -> table , 5 , 3 )"		8638337	0		=			
ANR	8638466	Identifier	token		8638337	0					
ANR	8638467	CallExpression	"get_vlc2 ( gb , table -> table , 5 , 3 )"		8638337	1					
ANR	8638468	Callee	get_vlc2		8638337	0					
ANR	8638469	Identifier	get_vlc2		8638337	0					
ANR	8638470	ArgumentList	gb		8638337	1					
ANR	8638471	Argument	gb		8638337	0					
ANR	8638472	Identifier	gb		8638337	0					
ANR	8638473	Argument	table -> table		8638337	1					
ANR	8638474	PtrMemberAccess	table -> table		8638337	0					
ANR	8638475	Identifier	table		8638337	0					
ANR	8638476	Identifier	table		8638337	1					
ANR	8638477	Argument	5		8638337	2					
ANR	8638478	PrimaryExpression	5		8638337	0					
ANR	8638479	Argument	3		8638337	3					
ANR	8638480	PrimaryExpression	3		8638337	0					
ANR	8638481	IfStatement	if ( token <= 6 )		8638337	1					
ANR	8638482	Condition	token <= 6	65:16:1141:1150	8638337	0	True				
ANR	8638483	RelationalExpression	token <= 6		8638337	0		<=			
ANR	8638484	Identifier	token		8638337	0					
ANR	8638485	PrimaryExpression	6		8638337	1					
ANR	8638486	CompoundStatement		57:28:932:932	8638337	1					
ANR	8638487	ExpressionStatement	eob_run = eob_run_base [ token ]	67:16:1172:1201	8638337	0	True				
ANR	8638488	AssignmentExpression	eob_run = eob_run_base [ token ]		8638337	0		=			
ANR	8638489	Identifier	eob_run		8638337	0					
ANR	8638490	ArrayIndexing	eob_run_base [ token ]		8638337	1					
ANR	8638491	Identifier	eob_run_base		8638337	0					
ANR	8638492	Identifier	token		8638337	1					
ANR	8638493	IfStatement	if ( eob_run_get_bits [ token ] )		8638337	1					
ANR	8638494	Condition	eob_run_get_bits [ token ]	69:20:1224:1246	8638337	0	True				
ANR	8638495	ArrayIndexing	eob_run_get_bits [ token ]		8638337	0					
ANR	8638496	Identifier	eob_run_get_bits		8638337	0					
ANR	8638497	Identifier	token		8638337	1					
ANR	8638498	ExpressionStatement	"eob_run += get_bits ( gb , eob_run_get_bits [ token ] )"	71:20:1270:1318	8638337	1	True				
ANR	8638499	AssignmentExpression	"eob_run += get_bits ( gb , eob_run_get_bits [ token ] )"		8638337	0		+=			
ANR	8638500	Identifier	eob_run		8638337	0					
ANR	8638501	CallExpression	"get_bits ( gb , eob_run_get_bits [ token ] )"		8638337	1					
ANR	8638502	Callee	get_bits		8638337	0					
ANR	8638503	Identifier	get_bits		8638337	0					
ANR	8638504	ArgumentList	gb		8638337	1					
ANR	8638505	Argument	gb		8638337	0					
ANR	8638506	Identifier	gb		8638337	0					
ANR	8638507	Argument	eob_run_get_bits [ token ]		8638337	1					
ANR	8638508	ArrayIndexing	eob_run_get_bits [ token ]		8638337	0					
ANR	8638509	Identifier	eob_run_get_bits		8638337	0					
ANR	8638510	Identifier	token		8638337	1					
ANR	8638511	ExpressionStatement	coeff = zero_run = 0	73:16:1337:1357	8638337	2	True				
ANR	8638512	AssignmentExpression	coeff = zero_run = 0		8638337	0		=			
ANR	8638513	Identifier	coeff		8638337	0					
ANR	8638514	AssignmentExpression	zero_run = 0		8638337	1		=			
ANR	8638515	Identifier	zero_run		8638337	0					
ANR	8638516	PrimaryExpression	0		8638337	1					
ANR	8638517	ElseStatement	else		8638337	0					
ANR	8638518	CompoundStatement		67:19:1158:1158	8638337	0					
ANR	8638519	ExpressionStatement	bits_to_get = coeff_get_bits [ token ]	77:16:1398:1433	8638337	0	True				
ANR	8638520	AssignmentExpression	bits_to_get = coeff_get_bits [ token ]		8638337	0		=			
ANR	8638521	Identifier	bits_to_get		8638337	0					
ANR	8638522	ArrayIndexing	coeff_get_bits [ token ]		8638337	1					
ANR	8638523	Identifier	coeff_get_bits		8638337	0					
ANR	8638524	Identifier	token		8638337	1					
ANR	8638525	IfStatement	if ( ! bits_to_get )		8638337	1					
ANR	8638526	Condition	! bits_to_get	79:20:1456:1467	8638337	0	True				
ANR	8638527	UnaryOperationExpression	! bits_to_get		8638337	0					
ANR	8638528	UnaryOperator	!		8638337	0					
ANR	8638529	Identifier	bits_to_get		8638337	1					
ANR	8638530	ExpressionStatement	coeff = coeff_tables [ token ] [ 0 ]	81:20:1491:1521	8638337	1	True				
ANR	8638531	AssignmentExpression	coeff = coeff_tables [ token ] [ 0 ]		8638337	0		=			
ANR	8638532	Identifier	coeff		8638337	0					
ANR	8638533	ArrayIndexing	coeff_tables [ token ] [ 0 ]		8638337	1					
ANR	8638534	ArrayIndexing	coeff_tables [ token ]		8638337	0					
ANR	8638535	Identifier	coeff_tables		8638337	0					
ANR	8638536	Identifier	token		8638337	1					
ANR	8638537	PrimaryExpression	0		8638337	1					
ANR	8638538	ElseStatement	else		8638337	0					
ANR	8638539	ExpressionStatement	"coeff = coeff_tables [ token ] [ get_bits ( gb , bits_to_get ) ]"	85:20:1566:1620	8638337	0	True				
ANR	8638540	AssignmentExpression	"coeff = coeff_tables [ token ] [ get_bits ( gb , bits_to_get ) ]"		8638337	0		=			
ANR	8638541	Identifier	coeff		8638337	0					
ANR	8638542	ArrayIndexing	"coeff_tables [ token ] [ get_bits ( gb , bits_to_get ) ]"		8638337	1					
ANR	8638543	ArrayIndexing	coeff_tables [ token ]		8638337	0					
ANR	8638544	Identifier	coeff_tables		8638337	0					
ANR	8638545	Identifier	token		8638337	1					
ANR	8638546	CallExpression	"get_bits ( gb , bits_to_get )"		8638337	1					
ANR	8638547	Callee	get_bits		8638337	0					
ANR	8638548	Identifier	get_bits		8638337	0					
ANR	8638549	ArgumentList	gb		8638337	1					
ANR	8638550	Argument	gb		8638337	0					
ANR	8638551	Identifier	gb		8638337	0					
ANR	8638552	Argument	bits_to_get		8638337	1					
ANR	8638553	Identifier	bits_to_get		8638337	0					
ANR	8638554	ExpressionStatement	zero_run = zero_run_base [ token ]	89:16:1641:1672	8638337	2	True				
ANR	8638555	AssignmentExpression	zero_run = zero_run_base [ token ]		8638337	0		=			
ANR	8638556	Identifier	zero_run		8638337	0					
ANR	8638557	ArrayIndexing	zero_run_base [ token ]		8638337	1					
ANR	8638558	Identifier	zero_run_base		8638337	0					
ANR	8638559	Identifier	token		8638337	1					
ANR	8638560	IfStatement	if ( zero_run_get_bits [ token ] )		8638337	3					
ANR	8638561	Condition	zero_run_get_bits [ token ]	91:20:1695:1718	8638337	0	True				
ANR	8638562	ArrayIndexing	zero_run_get_bits [ token ]		8638337	0					
ANR	8638563	Identifier	zero_run_get_bits		8638337	0					
ANR	8638564	Identifier	token		8638337	1					
ANR	8638565	ExpressionStatement	"zero_run += get_bits ( gb , zero_run_get_bits [ token ] )"	93:20:1742:1792	8638337	1	True				
ANR	8638566	AssignmentExpression	"zero_run += get_bits ( gb , zero_run_get_bits [ token ] )"		8638337	0		+=			
ANR	8638567	Identifier	zero_run		8638337	0					
ANR	8638568	CallExpression	"get_bits ( gb , zero_run_get_bits [ token ] )"		8638337	1					
ANR	8638569	Callee	get_bits		8638337	0					
ANR	8638570	Identifier	get_bits		8638337	0					
ANR	8638571	ArgumentList	gb		8638337	1					
ANR	8638572	Argument	gb		8638337	0					
ANR	8638573	Identifier	gb		8638337	0					
ANR	8638574	Argument	zero_run_get_bits [ token ]		8638337	1					
ANR	8638575	ArrayIndexing	zero_run_get_bits [ token ]		8638337	0					
ANR	8638576	Identifier	zero_run_get_bits		8638337	0					
ANR	8638577	Identifier	token		8638337	1					
ANR	8638578	IfStatement	if ( ! eob_run )		8638337	4					
ANR	8638579	Condition	! eob_run	101:12:1835:1842	8638337	0	True				
ANR	8638580	UnaryOperationExpression	! eob_run		8638337	0					
ANR	8638581	UnaryOperator	!		8638337	0					
ANR	8638582	Identifier	eob_run		8638337	1					
ANR	8638583	CompoundStatement		93:22:1624:1624	8638337	1					
ANR	8638584	ExpressionStatement	s -> coeff_counts [ fragment_num ] += zero_run	103:12:1860:1901	8638337	0	True				
ANR	8638585	AssignmentExpression	s -> coeff_counts [ fragment_num ] += zero_run		8638337	0		+=			
ANR	8638586	ArrayIndexing	s -> coeff_counts [ fragment_num ]		8638337	0					
ANR	8638587	PtrMemberAccess	s -> coeff_counts		8638337	0					
ANR	8638588	Identifier	s		8638337	0					
ANR	8638589	Identifier	coeff_counts		8638337	1					
ANR	8638590	Identifier	fragment_num		8638337	1					
ANR	8638591	Identifier	zero_run		8638337	1					
ANR	8638592	IfStatement	if ( s -> coeff_counts [ fragment_num ] < 64 )		8638337	1					
ANR	8638593	Condition	s -> coeff_counts [ fragment_num ] < 64	105:16:1920:1953	8638337	0	True				
ANR	8638594	RelationalExpression	s -> coeff_counts [ fragment_num ] < 64		8638337	0		<			
ANR	8638595	ArrayIndexing	s -> coeff_counts [ fragment_num ]		8638337	0					
ANR	8638596	PtrMemberAccess	s -> coeff_counts		8638337	0					
ANR	8638597	Identifier	s		8638337	0					
ANR	8638598	Identifier	coeff_counts		8638337	1					
ANR	8638599	Identifier	fragment_num		8638337	1					
ANR	8638600	PrimaryExpression	64		8638337	1					
ANR	8638601	CompoundStatement		97:51:1734:1734	8638337	1					
ANR	8638602	ExpressionStatement	fragment -> next_coeff -> coeff = coeff	107:16:1974:2008	8638337	0	True				
ANR	8638603	AssignmentExpression	fragment -> next_coeff -> coeff = coeff		8638337	0		=			
ANR	8638604	PtrMemberAccess	fragment -> next_coeff -> coeff		8638337	0					
ANR	8638605	PtrMemberAccess	fragment -> next_coeff		8638337	0					
ANR	8638606	Identifier	fragment		8638337	0					
ANR	8638607	Identifier	next_coeff		8638337	1					
ANR	8638608	Identifier	coeff		8638337	1					
ANR	8638609	Identifier	coeff		8638337	1					
ANR	8638610	ExpressionStatement	fragment -> next_coeff -> index = perm [ s -> coeff_counts [ fragment_num ] ++ ]	109:16:2027:2093	8638337	1	True				
ANR	8638611	AssignmentExpression	fragment -> next_coeff -> index = perm [ s -> coeff_counts [ fragment_num ] ++ ]		8638337	0		=			
ANR	8638612	PtrMemberAccess	fragment -> next_coeff -> index		8638337	0					
ANR	8638613	PtrMemberAccess	fragment -> next_coeff		8638337	0					
ANR	8638614	Identifier	fragment		8638337	0					
ANR	8638615	Identifier	next_coeff		8638337	1					
ANR	8638616	Identifier	index		8638337	1					
ANR	8638617	ArrayIndexing	perm [ s -> coeff_counts [ fragment_num ] ++ ]		8638337	1					
ANR	8638618	Identifier	perm		8638337	0					
ANR	8638619	PostIncDecOperationExpression	s -> coeff_counts [ fragment_num ] ++		8638337	1					
ANR	8638620	ArrayIndexing	s -> coeff_counts [ fragment_num ]		8638337	0					
ANR	8638621	PtrMemberAccess	s -> coeff_counts		8638337	0					
ANR	8638622	Identifier	s		8638337	0					
ANR	8638623	Identifier	coeff_counts		8638337	1					
ANR	8638624	Identifier	fragment_num		8638337	1					
ANR	8638625	IncDec	++		8638337	1					
ANR	8638626	ExpressionStatement	fragment -> next_coeff -> next = s -> next_coeff	111:16:2139:2180	8638337	2	True				
ANR	8638627	AssignmentExpression	fragment -> next_coeff -> next = s -> next_coeff		8638337	0		=			
ANR	8638628	PtrMemberAccess	fragment -> next_coeff -> next		8638337	0					
ANR	8638629	PtrMemberAccess	fragment -> next_coeff		8638337	0					
ANR	8638630	Identifier	fragment		8638337	0					
ANR	8638631	Identifier	next_coeff		8638337	1					
ANR	8638632	Identifier	next		8638337	1					
ANR	8638633	PtrMemberAccess	s -> next_coeff		8638337	1					
ANR	8638634	Identifier	s		8638337	0					
ANR	8638635	Identifier	next_coeff		8638337	1					
ANR	8638636	ExpressionStatement	s -> next_coeff -> next = NULL	113:16:2199:2223	8638337	3	True				
ANR	8638637	AssignmentExpression	s -> next_coeff -> next = NULL		8638337	0		=			
ANR	8638638	PtrMemberAccess	s -> next_coeff -> next		8638337	0					
ANR	8638639	PtrMemberAccess	s -> next_coeff		8638337	0					
ANR	8638640	Identifier	s		8638337	0					
ANR	8638641	Identifier	next_coeff		8638337	1					
ANR	8638642	Identifier	next		8638337	1					
ANR	8638643	Identifier	NULL		8638337	1					
ANR	8638644	ExpressionStatement	fragment -> next_coeff = s -> next_coeff ++	115:16:2242:2279	8638337	4	True				
ANR	8638645	AssignmentExpression	fragment -> next_coeff = s -> next_coeff ++		8638337	0		=			
ANR	8638646	PtrMemberAccess	fragment -> next_coeff		8638337	0					
ANR	8638647	Identifier	fragment		8638337	0					
ANR	8638648	Identifier	next_coeff		8638337	1					
ANR	8638649	PostIncDecOperationExpression	s -> next_coeff ++		8638337	1					
ANR	8638650	PtrMemberAccess	s -> next_coeff		8638337	0					
ANR	8638651	Identifier	s		8638337	0					
ANR	8638652	Identifier	next_coeff		8638337	1					
ANR	8638653	IncDec	++		8638337	1					
ANR	8638654	ElseStatement	else		8638337	0					
ANR	8638655	CompoundStatement		111:15:2091:2091	8638337	0					
ANR	8638656	ExpressionStatement	s -> coeff_counts [ fragment_num ] |= 128	121:12:2327:2363	8638337	0	True				
ANR	8638657	AssignmentExpression	s -> coeff_counts [ fragment_num ] |= 128		8638337	0		|=			
ANR	8638658	ArrayIndexing	s -> coeff_counts [ fragment_num ]		8638337	0					
ANR	8638659	PtrMemberAccess	s -> coeff_counts		8638337	0					
ANR	8638660	Identifier	s		8638337	0					
ANR	8638661	Identifier	coeff_counts		8638337	1					
ANR	8638662	Identifier	fragment_num		8638337	1					
ANR	8638663	PrimaryExpression	128		8638337	1					
ANR	8638664	ExpressionStatement	eob_run --	123:12:2378:2387	8638337	1	True				
ANR	8638665	PostIncDecOperationExpression	eob_run --		8638337	0					
ANR	8638666	Identifier	eob_run		8638337	0					
ANR	8638667	IncDec	--		8638337	1					
ANR	8638668	ReturnStatement	return eob_run ;	131:4:2414:2428	8638337	9	True				
ANR	8638669	Identifier	eob_run		8638337	0					
ANR	8638670	ReturnType	static int		8638337	1					
ANR	8638671	Identifier	unpack_vlcs		8638337	2					
ANR	8638672	ParameterList	"Vp3DecodeContext * s , GetBitContext * gb , VLC * table , int coeff_index , int first_fragment , int last_fragment , int eob_run"		8638337	3					
ANR	8638673	Parameter	Vp3DecodeContext * s	1:23:23:41	8638337	0	True				
ANR	8638674	ParameterType	Vp3DecodeContext *		8638337	0					
ANR	8638675	Identifier	s		8638337	1					
ANR	8638676	Parameter	GetBitContext * gb	1:44:44:60	8638337	1	True				
ANR	8638677	ParameterType	GetBitContext *		8638337	0					
ANR	8638678	Identifier	gb		8638337	1					
ANR	8638679	Parameter	VLC * table	3:24:88:97	8638337	2	True				
ANR	8638680	ParameterType	VLC *		8638337	0					
ANR	8638681	Identifier	table		8638337	1					
ANR	8638682	Parameter	int coeff_index	3:36:100:114	8638337	3	True				
ANR	8638683	ParameterType	int		8638337	0					
ANR	8638684	Identifier	coeff_index		8638337	1					
ANR	8638685	Parameter	int first_fragment	5:24:142:159	8638337	4	True				
ANR	8638686	ParameterType	int		8638337	0					
ANR	8638687	Identifier	first_fragment		8638337	1					
ANR	8638688	Parameter	int last_fragment	5:44:162:178	8638337	5	True				
ANR	8638689	ParameterType	int		8638337	0					
ANR	8638690	Identifier	last_fragment		8638337	1					
ANR	8638691	Parameter	int eob_run	7:24:206:216	8638337	6	True				
ANR	8638692	ParameterType	int		8638337	0					
ANR	8638693	Identifier	eob_run		8638337	1					
ANR	8638694	CFGEntryNode	ENTRY		8638337		True				
ANR	8638695	CFGExitNode	EXIT		8638337		True				
ANR	8638696	Symbol	* eob_run_base		8638337						
ANR	8638697	Symbol	zero_run		8638337						
ANR	8638698	Symbol	* perm		8638337						
ANR	8638699	Symbol	zero_run_base		8638337						
ANR	8638700	Symbol	get_bits		8638337						
ANR	8638701	Symbol	* * coeff_tables		8638337						
ANR	8638702	Symbol	s -> coeff_counts		8638337						
ANR	8638703	Symbol	eob_run		8638337						
ANR	8638704	Symbol	table -> table		8638337						
ANR	8638705	Symbol	* coeff_get_bits		8638337						
ANR	8638706	Symbol	* eob_run_get_bits		8638337						
ANR	8638707	Symbol	* s -> coded_fragment_list		8638337						
ANR	8638708	Symbol	NULL		8638337						
ANR	8638709	Symbol	* s -> next_coeff		8638337						
ANR	8638710	Symbol	fragment -> next_coeff -> next		8638337						
ANR	8638711	Symbol	* table		8638337						
ANR	8638712	Symbol	s -> next_coeff		8638337						
ANR	8638713	Symbol	s -> all_fragments		8638337						
ANR	8638714	Symbol	eob_run_base		8638337						
ANR	8638715	Symbol	* zero_run_base		8638337						
ANR	8638716	Symbol	* fragment		8638337						
ANR	8638717	Symbol	first_fragment		8638337						
ANR	8638718	Symbol	s -> avctx		8638337						
ANR	8638719	Symbol	fragment -> next_coeff		8638337						
ANR	8638720	Symbol	fragment -> next_coeff -> index		8638337						
ANR	8638721	Symbol	perm		8638337						
ANR	8638722	Symbol	* * fragment		8638337						
ANR	8638723	Symbol	s -> fragment_count		8638337						
ANR	8638724	Symbol	* zero_run_get_bits		8638337						
ANR	8638725	Symbol	coeff_tables		8638337						
ANR	8638726	Symbol	s -> scantable . permutated		8638337						
ANR	8638727	Symbol	coeff_index		8638337						
ANR	8638728	Symbol	* * s		8638337						
ANR	8638729	Symbol	* * token		8638337						
ANR	8638730	Symbol	gb		8638337						
ANR	8638731	Symbol	* coeff_tables		8638337						
ANR	8638732	Symbol	table		8638337						
ANR	8638733	Symbol	coeff		8638337						
ANR	8638734	Symbol	* s -> coeff_counts		8638337						
ANR	8638735	Symbol	fragment_num		8638337						
ANR	8638736	Symbol	AV_LOG_ERROR		8638337						
ANR	8638737	Symbol	zero_run_get_bits		8638337						
ANR	8638738	Symbol	* get_bits		8638337						
ANR	8638739	Symbol	* fragment -> next_coeff		8638337						
ANR	8638740	Symbol	i		8638337						
ANR	8638741	Symbol	s -> coded_fragment_list		8638337						
ANR	8638742	Symbol	fragment -> next_coeff -> coeff		8638337						
ANR	8638743	Symbol	bits_to_get		8638337						
ANR	8638744	Symbol	s -> scantable		8638337						
ANR	8638745	Symbol	coeff_get_bits		8638337						
ANR	8638746	Symbol	token		8638337						
ANR	8638747	Symbol	fragment		8638337						
ANR	8638748	Symbol	s -> next_coeff -> next		8638337						
ANR	8638749	Symbol	s		8638337						
ANR	8638750	Symbol	* i		8638337						
ANR	8638751	Symbol	* fragment_num		8638337						
ANR	8638752	Symbol	* token		8638337						
ANR	8638753	Symbol	last_fragment		8638337						
ANR	8638754	Symbol	get_vlc2		8638337						
ANR	8638755	Symbol	* s		8638337						
ANR	8638756	Symbol	eob_run_get_bits		8638337						
