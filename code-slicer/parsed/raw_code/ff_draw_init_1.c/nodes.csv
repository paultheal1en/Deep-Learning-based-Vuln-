command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3226497	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_draw_init_1.c								
ANR	3226498	Function	ff_draw_init	1:0:0:1767							
ANR	3226499	FunctionDef	"ff_draw_init (FFDrawContext * draw , enum PixelFormat format , unsigned flags)"		3226498	0					
ANR	3226500	CompoundStatement		3:0:80:1767	3226498	0					
ANR	3226501	IdentifierDeclStatement	const AVPixFmtDescriptor * desc = & av_pix_fmt_descriptors [ format ] ;	5:4:87:151	3226498	0	True				
ANR	3226502	IdentifierDecl	* desc = & av_pix_fmt_descriptors [ format ]		3226498	0					
ANR	3226503	IdentifierDeclType	const AVPixFmtDescriptor *		3226498	0					
ANR	3226504	Identifier	desc		3226498	1					
ANR	3226505	AssignmentExpression	* desc = & av_pix_fmt_descriptors [ format ]		3226498	2		=			
ANR	3226506	Identifier	desc		3226498	0					
ANR	3226507	UnaryOperationExpression	& av_pix_fmt_descriptors [ format ]		3226498	1					
ANR	3226508	UnaryOperator	&		3226498	0					
ANR	3226509	ArrayIndexing	av_pix_fmt_descriptors [ format ]		3226498	1					
ANR	3226510	Identifier	av_pix_fmt_descriptors		3226498	0					
ANR	3226511	Identifier	format		3226498	1					
ANR	3226512	IdentifierDeclStatement	const AVComponentDescriptor * c ;	7:4:158:188	3226498	1	True				
ANR	3226513	IdentifierDecl	* c		3226498	0					
ANR	3226514	IdentifierDeclType	const AVComponentDescriptor *		3226498	0					
ANR	3226515	Identifier	c		3226498	1					
ANR	3226516	IdentifierDeclStatement	"unsigned i , nb_planes = 0 ;"	9:4:195:220	3226498	2	True				
ANR	3226517	IdentifierDecl	i		3226498	0					
ANR	3226518	IdentifierDeclType	unsigned		3226498	0					
ANR	3226519	Identifier	i		3226498	1					
ANR	3226520	IdentifierDecl	nb_planes = 0		3226498	1					
ANR	3226521	IdentifierDeclType	unsigned		3226498	0					
ANR	3226522	Identifier	nb_planes		3226498	1					
ANR	3226523	AssignmentExpression	nb_planes = 0		3226498	2		=			
ANR	3226524	Identifier	nb_planes		3226498	0					
ANR	3226525	PrimaryExpression	0		3226498	1					
ANR	3226526	IdentifierDeclStatement	int pixelstep [ MAX_PLANES ] = { 0 } ;	11:4:227:260	3226498	3	True				
ANR	3226527	IdentifierDecl	pixelstep [ MAX_PLANES ] = { 0 }		3226498	0					
ANR	3226528	IdentifierDeclType	int [ MAX_PLANES ]		3226498	0					
ANR	3226529	Identifier	pixelstep		3226498	1					
ANR	3226530	Identifier	MAX_PLANES		3226498	2					
ANR	3226531	AssignmentExpression	pixelstep [ MAX_PLANES ] = { 0 }		3226498	3		=			
ANR	3226532	Identifier	MAX_PLANES		3226498	0					
ANR	3226533	InitializerList	0		3226498	1					
ANR	3226534	PrimaryExpression	0		3226498	0					
ANR	3226535	IfStatement	if ( ! desc -> name )		3226498	4					
ANR	3226536	Condition	! desc -> name	15:8:273:283	3226498	0	True				
ANR	3226537	UnaryOperationExpression	! desc -> name		3226498	0					
ANR	3226538	UnaryOperator	!		3226498	0					
ANR	3226539	PtrMemberAccess	desc -> name		3226498	1					
ANR	3226540	Identifier	desc		3226498	0					
ANR	3226541	Identifier	name		3226498	1					
ANR	3226542	ReturnStatement	return AVERROR ( EINVAL ) ;	17:8:295:317	3226498	1	True				
ANR	3226543	CallExpression	AVERROR ( EINVAL )		3226498	0					
ANR	3226544	Callee	AVERROR		3226498	0					
ANR	3226545	Identifier	AVERROR		3226498	0					
ANR	3226546	ArgumentList	EINVAL		3226498	1					
ANR	3226547	Argument	EINVAL		3226498	0					
ANR	3226548	Identifier	EINVAL		3226498	0					
ANR	3226549	IfStatement	if ( desc -> flags & ~ ( PIX_FMT_PLANAR | PIX_FMT_RGB ) )		3226498	5					
ANR	3226550	Condition	desc -> flags & ~ ( PIX_FMT_PLANAR | PIX_FMT_RGB )	19:8:328:372	3226498	0	True				
ANR	3226551	BitAndExpression	desc -> flags & ~ ( PIX_FMT_PLANAR | PIX_FMT_RGB )		3226498	0		&			
ANR	3226552	PtrMemberAccess	desc -> flags		3226498	0					
ANR	3226553	Identifier	desc		3226498	0					
ANR	3226554	Identifier	flags		3226498	1					
ANR	3226555	UnaryOperationExpression	~ ( PIX_FMT_PLANAR | PIX_FMT_RGB )		3226498	1					
ANR	3226556	UnaryOperator	~		3226498	0					
ANR	3226557	InclusiveOrExpression	PIX_FMT_PLANAR | PIX_FMT_RGB		3226498	1		|			
ANR	3226558	Identifier	PIX_FMT_PLANAR		3226498	0					
ANR	3226559	Identifier	PIX_FMT_RGB		3226498	1					
ANR	3226560	ReturnStatement	return AVERROR ( ENOSYS ) ;	21:8:384:406	3226498	1	True				
ANR	3226561	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226562	Callee	AVERROR		3226498	0					
ANR	3226563	Identifier	AVERROR		3226498	0					
ANR	3226564	ArgumentList	ENOSYS		3226498	1					
ANR	3226565	Argument	ENOSYS		3226498	0					
ANR	3226566	Identifier	ENOSYS		3226498	0					
ANR	3226567	ForStatement	for ( i = 0 ; i < desc -> nb_components ; i ++ )		3226498	6					
ANR	3226568	ForInit	i = 0 ;	23:9:418:423	3226498	0	True				
ANR	3226569	AssignmentExpression	i = 0		3226498	0		=			
ANR	3226570	Identifier	i		3226498	0					
ANR	3226571	PrimaryExpression	0		3226498	1					
ANR	3226572	Condition	i < desc -> nb_components	23:16:425:447	3226498	1	True				
ANR	3226573	RelationalExpression	i < desc -> nb_components		3226498	0		<			
ANR	3226574	Identifier	i		3226498	0					
ANR	3226575	PtrMemberAccess	desc -> nb_components		3226498	1					
ANR	3226576	Identifier	desc		3226498	0					
ANR	3226577	Identifier	nb_components		3226498	1					
ANR	3226578	PostIncDecOperationExpression	i ++	23:41:450:452	3226498	2	True				
ANR	3226579	Identifier	i		3226498	0					
ANR	3226580	IncDec	++		3226498	1					
ANR	3226581	CompoundStatement		21:46:374:374	3226498	3					
ANR	3226582	ExpressionStatement	c = & desc -> comp [ i ]	25:8:466:484	3226498	0	True				
ANR	3226583	AssignmentExpression	c = & desc -> comp [ i ]		3226498	0		=			
ANR	3226584	Identifier	c		3226498	0					
ANR	3226585	UnaryOperationExpression	& desc -> comp [ i ]		3226498	1					
ANR	3226586	UnaryOperator	&		3226498	0					
ANR	3226587	ArrayIndexing	desc -> comp [ i ]		3226498	1					
ANR	3226588	PtrMemberAccess	desc -> comp		3226498	0					
ANR	3226589	Identifier	desc		3226498	0					
ANR	3226590	Identifier	comp		3226498	1					
ANR	3226591	Identifier	i		3226498	1					
ANR	3226592	IfStatement	if ( c -> depth_minus1 != 8 - 1 )		3226498	1					
ANR	3226593	Condition	c -> depth_minus1 != 8 - 1	29:12:543:566	3226498	0	True				
ANR	3226594	EqualityExpression	c -> depth_minus1 != 8 - 1		3226498	0		!=			
ANR	3226595	PtrMemberAccess	c -> depth_minus1		3226498	0					
ANR	3226596	Identifier	c		3226498	0					
ANR	3226597	Identifier	depth_minus1		3226498	1					
ANR	3226598	AdditiveExpression	8 - 1		3226498	1		-			
ANR	3226599	PrimaryExpression	8		3226498	0					
ANR	3226600	PrimaryExpression	1		3226498	1					
ANR	3226601	ReturnStatement	return AVERROR ( ENOSYS ) ;	31:12:582:604	3226498	1	True				
ANR	3226602	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226603	Callee	AVERROR		3226498	0					
ANR	3226604	Identifier	AVERROR		3226498	0					
ANR	3226605	ArgumentList	ENOSYS		3226498	1					
ANR	3226606	Argument	ENOSYS		3226498	0					
ANR	3226607	Identifier	ENOSYS		3226498	0					
ANR	3226608	IfStatement	if ( c -> plane >= MAX_PLANES )		3226498	2					
ANR	3226609	Condition	c -> plane >= MAX_PLANES	33:12:619:640	3226498	0	True				
ANR	3226610	RelationalExpression	c -> plane >= MAX_PLANES		3226498	0		>=			
ANR	3226611	PtrMemberAccess	c -> plane		3226498	0					
ANR	3226612	Identifier	c		3226498	0					
ANR	3226613	Identifier	plane		3226498	1					
ANR	3226614	Identifier	MAX_PLANES		3226498	1					
ANR	3226615	ReturnStatement	return AVERROR ( ENOSYS ) ;	35:12:656:678	3226498	1	True				
ANR	3226616	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226617	Callee	AVERROR		3226498	0					
ANR	3226618	Identifier	AVERROR		3226498	0					
ANR	3226619	ArgumentList	ENOSYS		3226498	1					
ANR	3226620	Argument	ENOSYS		3226498	0					
ANR	3226621	Identifier	ENOSYS		3226498	0					
ANR	3226622	IfStatement	if ( pixelstep [ c -> plane ] != 0 && pixelstep [ c -> plane ] != c -> step_minus1 + 1 )		3226498	3					
ANR	3226623	Condition	pixelstep [ c -> plane ] != 0 && pixelstep [ c -> plane ] != c -> step_minus1 + 1	39:12:729:810	3226498	0	True				
ANR	3226624	AndExpression	pixelstep [ c -> plane ] != 0 && pixelstep [ c -> plane ] != c -> step_minus1 + 1		3226498	0		&&			
ANR	3226625	EqualityExpression	pixelstep [ c -> plane ] != 0		3226498	0		!=			
ANR	3226626	ArrayIndexing	pixelstep [ c -> plane ]		3226498	0					
ANR	3226627	Identifier	pixelstep		3226498	0					
ANR	3226628	PtrMemberAccess	c -> plane		3226498	1					
ANR	3226629	Identifier	c		3226498	0					
ANR	3226630	Identifier	plane		3226498	1					
ANR	3226631	PrimaryExpression	0		3226498	1					
ANR	3226632	EqualityExpression	pixelstep [ c -> plane ] != c -> step_minus1 + 1		3226498	1		!=			
ANR	3226633	ArrayIndexing	pixelstep [ c -> plane ]		3226498	0					
ANR	3226634	Identifier	pixelstep		3226498	0					
ANR	3226635	PtrMemberAccess	c -> plane		3226498	1					
ANR	3226636	Identifier	c		3226498	0					
ANR	3226637	Identifier	plane		3226498	1					
ANR	3226638	AdditiveExpression	c -> step_minus1 + 1		3226498	1		+			
ANR	3226639	PtrMemberAccess	c -> step_minus1		3226498	0					
ANR	3226640	Identifier	c		3226498	0					
ANR	3226641	Identifier	step_minus1		3226498	1					
ANR	3226642	PrimaryExpression	1		3226498	1					
ANR	3226643	ReturnStatement	return AVERROR ( ENOSYS ) ;	43:12:826:848	3226498	1	True				
ANR	3226644	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226645	Callee	AVERROR		3226498	0					
ANR	3226646	Identifier	AVERROR		3226498	0					
ANR	3226647	ArgumentList	ENOSYS		3226498	1					
ANR	3226648	Argument	ENOSYS		3226498	0					
ANR	3226649	Identifier	ENOSYS		3226498	0					
ANR	3226650	ExpressionStatement	pixelstep [ c -> plane ] = c -> step_minus1 + 1	45:8:859:899	3226498	4	True				
ANR	3226651	AssignmentExpression	pixelstep [ c -> plane ] = c -> step_minus1 + 1		3226498	0		=			
ANR	3226652	ArrayIndexing	pixelstep [ c -> plane ]		3226498	0					
ANR	3226653	Identifier	pixelstep		3226498	0					
ANR	3226654	PtrMemberAccess	c -> plane		3226498	1					
ANR	3226655	Identifier	c		3226498	0					
ANR	3226656	Identifier	plane		3226498	1					
ANR	3226657	AdditiveExpression	c -> step_minus1 + 1		3226498	1		+			
ANR	3226658	PtrMemberAccess	c -> step_minus1		3226498	0					
ANR	3226659	Identifier	c		3226498	0					
ANR	3226660	Identifier	step_minus1		3226498	1					
ANR	3226661	PrimaryExpression	1		3226498	1					
ANR	3226662	IfStatement	if ( pixelstep [ c -> plane ] >= 8 )		3226498	5					
ANR	3226663	Condition	pixelstep [ c -> plane ] >= 8	47:12:914:937	3226498	0	True				
ANR	3226664	RelationalExpression	pixelstep [ c -> plane ] >= 8		3226498	0		>=			
ANR	3226665	ArrayIndexing	pixelstep [ c -> plane ]		3226498	0					
ANR	3226666	Identifier	pixelstep		3226498	0					
ANR	3226667	PtrMemberAccess	c -> plane		3226498	1					
ANR	3226668	Identifier	c		3226498	0					
ANR	3226669	Identifier	plane		3226498	1					
ANR	3226670	PrimaryExpression	8		3226498	1					
ANR	3226671	ReturnStatement	return AVERROR ( ENOSYS ) ;	49:12:953:975	3226498	1	True				
ANR	3226672	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226673	Callee	AVERROR		3226498	0					
ANR	3226674	Identifier	AVERROR		3226498	0					
ANR	3226675	ArgumentList	ENOSYS		3226498	1					
ANR	3226676	Argument	ENOSYS		3226498	0					
ANR	3226677	Identifier	ENOSYS		3226498	0					
ANR	3226678	ExpressionStatement	"nb_planes = FFMAX ( nb_planes , c -> plane + 1 )"	51:8:986:1028	3226498	6	True				
ANR	3226679	AssignmentExpression	"nb_planes = FFMAX ( nb_planes , c -> plane + 1 )"		3226498	0		=			
ANR	3226680	Identifier	nb_planes		3226498	0					
ANR	3226681	CallExpression	"FFMAX ( nb_planes , c -> plane + 1 )"		3226498	1					
ANR	3226682	Callee	FFMAX		3226498	0					
ANR	3226683	Identifier	FFMAX		3226498	0					
ANR	3226684	ArgumentList	nb_planes		3226498	1					
ANR	3226685	Argument	nb_planes		3226498	0					
ANR	3226686	Identifier	nb_planes		3226498	0					
ANR	3226687	Argument	c -> plane + 1		3226498	1					
ANR	3226688	AdditiveExpression	c -> plane + 1		3226498	0		+			
ANR	3226689	PtrMemberAccess	c -> plane		3226498	0					
ANR	3226690	Identifier	c		3226498	0					
ANR	3226691	Identifier	plane		3226498	1					
ANR	3226692	PrimaryExpression	1		3226498	1					
ANR	3226693	IfStatement	if ( ( desc -> log2_chroma_w || desc -> log2_chroma_h ) && nb_planes < 3 )		3226498	7					
ANR	3226694	Condition	( desc -> log2_chroma_w || desc -> log2_chroma_h ) && nb_planes < 3	55:8:1046:1106	3226498	0	True				
ANR	3226695	AndExpression	( desc -> log2_chroma_w || desc -> log2_chroma_h ) && nb_planes < 3		3226498	0		&&			
ANR	3226696	OrExpression	desc -> log2_chroma_w || desc -> log2_chroma_h		3226498	0		||			
ANR	3226697	PtrMemberAccess	desc -> log2_chroma_w		3226498	0					
ANR	3226698	Identifier	desc		3226498	0					
ANR	3226699	Identifier	log2_chroma_w		3226498	1					
ANR	3226700	PtrMemberAccess	desc -> log2_chroma_h		3226498	1					
ANR	3226701	Identifier	desc		3226498	0					
ANR	3226702	Identifier	log2_chroma_h		3226498	1					
ANR	3226703	RelationalExpression	nb_planes < 3		3226498	1		<			
ANR	3226704	Identifier	nb_planes		3226498	0					
ANR	3226705	PrimaryExpression	3		3226498	1					
ANR	3226706	ReturnStatement	return AVERROR ( ENOSYS ) ;	57:8:1118:1140	3226498	1	True				
ANR	3226707	CallExpression	AVERROR ( ENOSYS )		3226498	0					
ANR	3226708	Callee	AVERROR		3226498	0					
ANR	3226709	Identifier	AVERROR		3226498	0					
ANR	3226710	ArgumentList	ENOSYS		3226498	1					
ANR	3226711	Argument	ENOSYS		3226498	0					
ANR	3226712	Identifier	ENOSYS		3226498	0					
ANR	3226713	ExpressionStatement	"memset ( draw , 0 , sizeof ( * draw ) )"	59:4:1175:1205	3226498	8	True				
ANR	3226714	CallExpression	"memset ( draw , 0 , sizeof ( * draw ) )"		3226498	0					
ANR	3226715	Callee	memset		3226498	0					
ANR	3226716	Identifier	memset		3226498	0					
ANR	3226717	ArgumentList	draw		3226498	1					
ANR	3226718	Argument	draw		3226498	0					
ANR	3226719	Identifier	draw		3226498	0					
ANR	3226720	Argument	0		3226498	1					
ANR	3226721	PrimaryExpression	0		3226498	0					
ANR	3226722	Argument	sizeof ( * draw )		3226498	2					
ANR	3226723	SizeofExpression	sizeof ( * draw )		3226498	0					
ANR	3226724	Sizeof	sizeof		3226498	0					
ANR	3226725	UnaryOperationExpression	* draw		3226498	1					
ANR	3226726	UnaryOperator	*		3226498	0					
ANR	3226727	Identifier	draw		3226498	1					
ANR	3226728	ExpressionStatement	draw -> desc = desc	61:4:1212:1234	3226498	9	True				
ANR	3226729	AssignmentExpression	draw -> desc = desc		3226498	0		=			
ANR	3226730	PtrMemberAccess	draw -> desc		3226498	0					
ANR	3226731	Identifier	draw		3226498	0					
ANR	3226732	Identifier	desc		3226498	1					
ANR	3226733	Identifier	desc		3226498	1					
ANR	3226734	ExpressionStatement	draw -> format = format	63:4:1241:1265	3226498	10	True				
ANR	3226735	AssignmentExpression	draw -> format = format		3226498	0		=			
ANR	3226736	PtrMemberAccess	draw -> format		3226498	0					
ANR	3226737	Identifier	draw		3226498	0					
ANR	3226738	Identifier	format		3226498	1					
ANR	3226739	Identifier	format		3226498	1					
ANR	3226740	ExpressionStatement	draw -> nb_planes = nb_planes	65:4:1272:1299	3226498	11	True				
ANR	3226741	AssignmentExpression	draw -> nb_planes = nb_planes		3226498	0		=			
ANR	3226742	PtrMemberAccess	draw -> nb_planes		3226498	0					
ANR	3226743	Identifier	draw		3226498	0					
ANR	3226744	Identifier	nb_planes		3226498	1					
ANR	3226745	Identifier	nb_planes		3226498	1					
ANR	3226746	ExpressionStatement	"memcpy ( draw -> pixelstep , pixelstep , sizeof ( draw -> pixelstep ) )"	67:4:1306:1365	3226498	12	True				
ANR	3226747	CallExpression	"memcpy ( draw -> pixelstep , pixelstep , sizeof ( draw -> pixelstep ) )"		3226498	0					
ANR	3226748	Callee	memcpy		3226498	0					
ANR	3226749	Identifier	memcpy		3226498	0					
ANR	3226750	ArgumentList	draw -> pixelstep		3226498	1					
ANR	3226751	Argument	draw -> pixelstep		3226498	0					
ANR	3226752	PtrMemberAccess	draw -> pixelstep		3226498	0					
ANR	3226753	Identifier	draw		3226498	0					
ANR	3226754	Identifier	pixelstep		3226498	1					
ANR	3226755	Argument	pixelstep		3226498	1					
ANR	3226756	Identifier	pixelstep		3226498	0					
ANR	3226757	Argument	sizeof ( draw -> pixelstep )		3226498	2					
ANR	3226758	SizeofExpression	sizeof ( draw -> pixelstep )		3226498	0					
ANR	3226759	Sizeof	sizeof		3226498	0					
ANR	3226760	PtrMemberAccess	draw -> pixelstep		3226498	1					
ANR	3226761	Identifier	draw		3226498	0					
ANR	3226762	Identifier	pixelstep		3226498	1					
ANR	3226763	IfStatement	if ( nb_planes >= 3 && ! ( desc -> flags & PIX_FMT_RGB ) )		3226498	13					
ANR	3226764	Condition	nb_planes >= 3 && ! ( desc -> flags & PIX_FMT_RGB )	69:8:1376:1421	3226498	0	True				
ANR	3226765	AndExpression	nb_planes >= 3 && ! ( desc -> flags & PIX_FMT_RGB )		3226498	0		&&			
ANR	3226766	RelationalExpression	nb_planes >= 3		3226498	0		>=			
ANR	3226767	Identifier	nb_planes		3226498	0					
ANR	3226768	PrimaryExpression	3		3226498	1					
ANR	3226769	UnaryOperationExpression	! ( desc -> flags & PIX_FMT_RGB )		3226498	1					
ANR	3226770	UnaryOperator	!		3226498	0					
ANR	3226771	BitAndExpression	desc -> flags & PIX_FMT_RGB		3226498	1		&			
ANR	3226772	PtrMemberAccess	desc -> flags		3226498	0					
ANR	3226773	Identifier	desc		3226498	0					
ANR	3226774	Identifier	flags		3226498	1					
ANR	3226775	Identifier	PIX_FMT_RGB		3226498	1					
ANR	3226776	CompoundStatement		67:56:1343:1343	3226498	1					
ANR	3226777	ExpressionStatement	draw -> hsub [ 1 ] = draw -> hsub [ 2 ] = draw -> hsub_max = desc -> log2_chroma_w	71:8:1435:1503	3226498	0	True				
ANR	3226778	AssignmentExpression	draw -> hsub [ 1 ] = draw -> hsub [ 2 ] = draw -> hsub_max = desc -> log2_chroma_w		3226498	0		=			
ANR	3226779	ArrayIndexing	draw -> hsub [ 1 ]		3226498	0					
ANR	3226780	PtrMemberAccess	draw -> hsub		3226498	0					
ANR	3226781	Identifier	draw		3226498	0					
ANR	3226782	Identifier	hsub		3226498	1					
ANR	3226783	PrimaryExpression	1		3226498	1					
ANR	3226784	AssignmentExpression	draw -> hsub [ 2 ] = draw -> hsub_max = desc -> log2_chroma_w		3226498	1		=			
ANR	3226785	ArrayIndexing	draw -> hsub [ 2 ]		3226498	0					
ANR	3226786	PtrMemberAccess	draw -> hsub		3226498	0					
ANR	3226787	Identifier	draw		3226498	0					
ANR	3226788	Identifier	hsub		3226498	1					
ANR	3226789	PrimaryExpression	2		3226498	1					
ANR	3226790	AssignmentExpression	draw -> hsub_max = desc -> log2_chroma_w		3226498	1		=			
ANR	3226791	PtrMemberAccess	draw -> hsub_max		3226498	0					
ANR	3226792	Identifier	draw		3226498	0					
ANR	3226793	Identifier	hsub_max		3226498	1					
ANR	3226794	PtrMemberAccess	desc -> log2_chroma_w		3226498	1					
ANR	3226795	Identifier	desc		3226498	0					
ANR	3226796	Identifier	log2_chroma_w		3226498	1					
ANR	3226797	ExpressionStatement	draw -> vsub [ 1 ] = draw -> vsub [ 2 ] = draw -> vsub_max = desc -> log2_chroma_h	73:8:1514:1582	3226498	1	True				
ANR	3226798	AssignmentExpression	draw -> vsub [ 1 ] = draw -> vsub [ 2 ] = draw -> vsub_max = desc -> log2_chroma_h		3226498	0		=			
ANR	3226799	ArrayIndexing	draw -> vsub [ 1 ]		3226498	0					
ANR	3226800	PtrMemberAccess	draw -> vsub		3226498	0					
ANR	3226801	Identifier	draw		3226498	0					
ANR	3226802	Identifier	vsub		3226498	1					
ANR	3226803	PrimaryExpression	1		3226498	1					
ANR	3226804	AssignmentExpression	draw -> vsub [ 2 ] = draw -> vsub_max = desc -> log2_chroma_h		3226498	1		=			
ANR	3226805	ArrayIndexing	draw -> vsub [ 2 ]		3226498	0					
ANR	3226806	PtrMemberAccess	draw -> vsub		3226498	0					
ANR	3226807	Identifier	draw		3226498	0					
ANR	3226808	Identifier	vsub		3226498	1					
ANR	3226809	PrimaryExpression	2		3226498	1					
ANR	3226810	AssignmentExpression	draw -> vsub_max = desc -> log2_chroma_h		3226498	1		=			
ANR	3226811	PtrMemberAccess	draw -> vsub_max		3226498	0					
ANR	3226812	Identifier	draw		3226498	0					
ANR	3226813	Identifier	vsub_max		3226498	1					
ANR	3226814	PtrMemberAccess	desc -> log2_chroma_h		3226498	1					
ANR	3226815	Identifier	desc		3226498	0					
ANR	3226816	Identifier	log2_chroma_h		3226498	1					
ANR	3226817	ForStatement	for ( i = 0 ; i < ( ( desc -> nb_components - 1 ) | 1 ) ; i ++ )		3226498	14					
ANR	3226818	ForInit	i = 0 ;	77:9:1601:1606	3226498	0	True				
ANR	3226819	AssignmentExpression	i = 0		3226498	0		=			
ANR	3226820	Identifier	i		3226498	0					
ANR	3226821	PrimaryExpression	0		3226498	1					
ANR	3226822	Condition	i < ( ( desc -> nb_components - 1 ) | 1 )	77:16:1608:1642	3226498	1	True				
ANR	3226823	RelationalExpression	i < ( ( desc -> nb_components - 1 ) | 1 )		3226498	0		<			
ANR	3226824	Identifier	i		3226498	0					
ANR	3226825	InclusiveOrExpression	( desc -> nb_components - 1 ) | 1		3226498	1		|			
ANR	3226826	AdditiveExpression	desc -> nb_components - 1		3226498	0		-			
ANR	3226827	PtrMemberAccess	desc -> nb_components		3226498	0					
ANR	3226828	Identifier	desc		3226498	0					
ANR	3226829	Identifier	nb_components		3226498	1					
ANR	3226830	PrimaryExpression	1		3226498	1					
ANR	3226831	PrimaryExpression	1		3226498	1					
ANR	3226832	PostIncDecOperationExpression	i ++	77:53:1645:1647	3226498	2	True				
ANR	3226833	Identifier	i		3226498	0					
ANR	3226834	IncDec	++		3226498	1					
ANR	3226835	ExpressionStatement	draw -> comp_mask [ desc -> comp [ i ] . plane ] |= 1 << ( desc -> comp [ i ] . offset_plus1 - 1 )	79:8:1659:1749	3226498	3	True				
ANR	3226836	AssignmentExpression	draw -> comp_mask [ desc -> comp [ i ] . plane ] |= 1 << ( desc -> comp [ i ] . offset_plus1 - 1 )		3226498	0		|=			
ANR	3226837	ArrayIndexing	draw -> comp_mask [ desc -> comp [ i ] . plane ]		3226498	0					
ANR	3226838	PtrMemberAccess	draw -> comp_mask		3226498	0					
ANR	3226839	Identifier	draw		3226498	0					
ANR	3226840	Identifier	comp_mask		3226498	1					
ANR	3226841	MemberAccess	desc -> comp [ i ] . plane		3226498	1					
ANR	3226842	ArrayIndexing	desc -> comp [ i ]		3226498	0					
ANR	3226843	PtrMemberAccess	desc -> comp		3226498	0					
ANR	3226844	Identifier	desc		3226498	0					
ANR	3226845	Identifier	comp		3226498	1					
ANR	3226846	Identifier	i		3226498	1					
ANR	3226847	Identifier	plane		3226498	1					
ANR	3226848	ShiftExpression	1 << ( desc -> comp [ i ] . offset_plus1 - 1 )		3226498	1		<<			
ANR	3226849	PrimaryExpression	1		3226498	0					
ANR	3226850	AdditiveExpression	desc -> comp [ i ] . offset_plus1 - 1		3226498	1		-			
ANR	3226851	MemberAccess	desc -> comp [ i ] . offset_plus1		3226498	0					
ANR	3226852	ArrayIndexing	desc -> comp [ i ]		3226498	0					
ANR	3226853	PtrMemberAccess	desc -> comp		3226498	0					
ANR	3226854	Identifier	desc		3226498	0					
ANR	3226855	Identifier	comp		3226498	1					
ANR	3226856	Identifier	i		3226498	1					
ANR	3226857	Identifier	offset_plus1		3226498	1					
ANR	3226858	PrimaryExpression	1		3226498	1					
ANR	3226859	ReturnStatement	return 0 ;	83:4:1756:1764	3226498	15	True				
ANR	3226860	PrimaryExpression	0		3226498	0					
ANR	3226861	ReturnType	int		3226498	1					
ANR	3226862	Identifier	ff_draw_init		3226498	2					
ANR	3226863	ParameterList	"FFDrawContext * draw , enum PixelFormat format , unsigned flags"		3226498	3					
ANR	3226864	Parameter	FFDrawContext * draw	1:17:17:35	3226498	0	True				
ANR	3226865	ParameterType	FFDrawContext *		3226498	0					
ANR	3226866	Identifier	draw		3226498	1					
ANR	3226867	Parameter	enum PixelFormat format	1:38:38:60	3226498	1	True				
ANR	3226868	ParameterType	enum PixelFormat		3226498	0					
ANR	3226869	Identifier	format		3226498	1					
ANR	3226870	Parameter	unsigned flags	1:63:63:76	3226498	2	True				
ANR	3226871	ParameterType	unsigned		3226498	0					
ANR	3226872	Identifier	flags		3226498	1					
ANR	3226873	CFGEntryNode	ENTRY		3226498		True				
ANR	3226874	CFGExitNode	EXIT		3226498		True				
ANR	3226875	Symbol	PIX_FMT_PLANAR		3226498						
ANR	3226876	Symbol	ENOSYS		3226498						
ANR	3226877	Symbol	c -> plane		3226498						
ANR	3226878	Symbol	* desc -> comp [ i ] . plane		3226498						
ANR	3226879	Symbol	draw -> pixelstep		3226498						
ANR	3226880	Symbol	* * i		3226498						
ANR	3226881	Symbol	format		3226498						
ANR	3226882	Symbol	* * c		3226498						
ANR	3226883	Symbol	* * desc		3226498						
ANR	3226884	Symbol	draw -> comp_mask		3226498						
ANR	3226885	Symbol	draw -> nb_planes		3226498						
ANR	3226886	Symbol	desc -> flags		3226498						
ANR	3226887	Symbol	* pixelstep		3226498						
ANR	3226888	Symbol	draw -> hsub_max		3226498						
ANR	3226889	Symbol	av_pix_fmt_descriptors		3226498						
ANR	3226890	Symbol	c -> depth_minus1		3226498						
ANR	3226891	Symbol	desc -> comp [ i ] . offset_plus1		3226498						
ANR	3226892	Symbol	draw -> vsub_max		3226498						
ANR	3226893	Symbol	draw -> hsub		3226498						
ANR	3226894	Symbol	c -> step_minus1		3226498						
ANR	3226895	Symbol	desc		3226498						
ANR	3226896	Symbol	PIX_FMT_RGB		3226498						
ANR	3226897	Symbol	* draw -> hsub		3226498						
ANR	3226898	Symbol	* * * desc		3226498						
ANR	3226899	Symbol	* draw -> comp_mask		3226498						
ANR	3226900	Symbol	flags		3226498						
ANR	3226901	Symbol	desc -> nb_components		3226498						
ANR	3226902	Symbol	nb_planes		3226498						
ANR	3226903	Symbol	MAX_PLANES		3226498						
ANR	3226904	Symbol	desc -> log2_chroma_w		3226498						
ANR	3226905	Symbol	* desc		3226498						
ANR	3226906	Symbol	desc -> log2_chroma_h		3226498						
ANR	3226907	Symbol	desc -> comp		3226498						
ANR	3226908	Symbol	c		3226498						
ANR	3226909	Symbol	* * draw		3226498						
ANR	3226910	Symbol	* draw		3226498						
ANR	3226911	Symbol	i		3226498						
ANR	3226912	Symbol	draw -> format		3226498						
ANR	3226913	Symbol	draw		3226498						
ANR	3226914	Symbol	pixelstep		3226498						
ANR	3226915	Symbol	* c		3226498						
ANR	3226916	Symbol	EINVAL		3226498						
ANR	3226917	Symbol	* i		3226498						
ANR	3226918	Symbol	* * desc -> comp		3226498						
ANR	3226919	Symbol	* desc -> comp		3226498						
ANR	3226920	Symbol	desc -> comp [ i ] . plane		3226498						
ANR	3226921	Symbol	draw -> desc		3226498						
ANR	3226922	Symbol	draw -> vsub		3226498						
ANR	3226923	Symbol	AVERROR		3226498						
ANR	3226924	Symbol	* draw -> vsub		3226498						
ANR	3226925	Symbol	desc -> name		3226498						
ANR	3226926	Symbol	* c -> plane		3226498						
ANR	3226927	Symbol	FFMAX		3226498						
