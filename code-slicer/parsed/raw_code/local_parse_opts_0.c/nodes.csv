command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5276773	File	/home/p4ultr4n/workplace/ReVeal/raw_code/local_parse_opts_0.c								
ANR	5276774	Function	local_parse_opts	1:0:0:1064							
ANR	5276775	FunctionDef	"local_parse_opts (QemuOpts * opts , struct FsDriverEntry * fse)"		5276774	0					
ANR	5276776	CompoundStatement		3:0:72:1064	5276774	0					
ANR	5276777	IdentifierDeclStatement	"const char * sec_model = qemu_opt_get ( opts , ""security_model"" ) ;"	5:4:79:139	5276774	0	True				
ANR	5276778	IdentifierDecl	"* sec_model = qemu_opt_get ( opts , ""security_model"" )"		5276774	0					
ANR	5276779	IdentifierDeclType	const char *		5276774	0					
ANR	5276780	Identifier	sec_model		5276774	1					
ANR	5276781	AssignmentExpression	"* sec_model = qemu_opt_get ( opts , ""security_model"" )"		5276774	2		=			
ANR	5276782	Identifier	sec_model		5276774	0					
ANR	5276783	CallExpression	"qemu_opt_get ( opts , ""security_model"" )"		5276774	1					
ANR	5276784	Callee	qemu_opt_get		5276774	0					
ANR	5276785	Identifier	qemu_opt_get		5276774	0					
ANR	5276786	ArgumentList	opts		5276774	1					
ANR	5276787	Argument	opts		5276774	0					
ANR	5276788	Identifier	opts		5276774	0					
ANR	5276789	Argument	"""security_model"""		5276774	1					
ANR	5276790	PrimaryExpression	"""security_model"""		5276774	0					
ANR	5276791	IdentifierDeclStatement	"const char * path = qemu_opt_get ( opts , ""path"" ) ;"	7:4:146:191	5276774	1	True				
ANR	5276792	IdentifierDecl	"* path = qemu_opt_get ( opts , ""path"" )"		5276774	0					
ANR	5276793	IdentifierDeclType	const char *		5276774	0					
ANR	5276794	Identifier	path		5276774	1					
ANR	5276795	AssignmentExpression	"* path = qemu_opt_get ( opts , ""path"" )"		5276774	2		=			
ANR	5276796	Identifier	path		5276774	0					
ANR	5276797	CallExpression	"qemu_opt_get ( opts , ""path"" )"		5276774	1					
ANR	5276798	Callee	qemu_opt_get		5276774	0					
ANR	5276799	Identifier	qemu_opt_get		5276774	0					
ANR	5276800	ArgumentList	opts		5276774	1					
ANR	5276801	Argument	opts		5276774	0					
ANR	5276802	Identifier	opts		5276774	0					
ANR	5276803	Argument	"""path"""		5276774	1					
ANR	5276804	PrimaryExpression	"""path"""		5276774	0					
ANR	5276805	IfStatement	if ( ! sec_model )		5276774	2					
ANR	5276806	Condition	! sec_model	11:8:204:213	5276774	0	True				
ANR	5276807	UnaryOperationExpression	! sec_model		5276774	0					
ANR	5276808	UnaryOperator	!		5276774	0					
ANR	5276809	Identifier	sec_model		5276774	1					
ANR	5276810	CompoundStatement		9:20:143:143	5276774	1					
ANR	5276811	Statement	fprintf	13:8:227:233	5276774	0	True				
ANR	5276812	Statement	(	13:15:234:234	5276774	1	True				
ANR	5276813	Statement	stderr	13:16:235:240	5276774	2	True				
ANR	5276814	Statement	","	13:22:241:241	5276774	3	True				
ANR	5276815	Statement	"""security model not specified, """	13:24:243:274	5276774	4	True				
ANR	5276816	Statement	"""local fs needs security model\\nvalid options are:"""	15:16:293:343	5276774	5	True				
ANR	5276817	Statement	"""\\tsecurity_model=[passthrough|mapped|none]\\n"""	17:16:362:407	5276774	6	True				
ANR	5276818	Statement	)	17:62:408:408	5276774	7	True				
ANR	5276819	ExpressionStatement		17:63:409:409	5276774	8	True				
ANR	5276820	ReturnStatement	return - 1 ;	19:8:420:429	5276774	9	True				
ANR	5276821	UnaryOperationExpression	- 1		5276774	0					
ANR	5276822	UnaryOperator	-		5276774	0					
ANR	5276823	PrimaryExpression	1		5276774	1					
ANR	5276824	IfStatement	"if ( ! strcmp ( sec_model , ""passthrough"" ) )"		5276774	3					
ANR	5276825	Condition	"! strcmp ( sec_model , ""passthrough"" )"	25:8:449:481	5276774	0	True				
ANR	5276826	UnaryOperationExpression	"! strcmp ( sec_model , ""passthrough"" )"		5276774	0					
ANR	5276827	UnaryOperator	!		5276774	0					
ANR	5276828	CallExpression	"strcmp ( sec_model , ""passthrough"" )"		5276774	1					
ANR	5276829	Callee	strcmp		5276774	0					
ANR	5276830	Identifier	strcmp		5276774	0					
ANR	5276831	ArgumentList	sec_model		5276774	1					
ANR	5276832	Argument	sec_model		5276774	0					
ANR	5276833	Identifier	sec_model		5276774	0					
ANR	5276834	Argument	"""passthrough"""		5276774	1					
ANR	5276835	PrimaryExpression	"""passthrough"""		5276774	0					
ANR	5276836	CompoundStatement		23:43:411:411	5276774	1					
ANR	5276837	ExpressionStatement	fse -> export_flags |= V9FS_SM_PASSTHROUGH	27:8:495:535	5276774	0	True				
ANR	5276838	AssignmentExpression	fse -> export_flags |= V9FS_SM_PASSTHROUGH		5276774	0		|=			
ANR	5276839	PtrMemberAccess	fse -> export_flags		5276774	0					
ANR	5276840	Identifier	fse		5276774	0					
ANR	5276841	Identifier	export_flags		5276774	1					
ANR	5276842	Identifier	V9FS_SM_PASSTHROUGH		5276774	1					
ANR	5276843	ElseStatement	else		5276774	0					
ANR	5276844	IfStatement	"if ( ! strcmp ( sec_model , ""mapped"" ) )"		5276774	0					
ANR	5276845	Condition	"! strcmp ( sec_model , ""mapped"" )"	29:15:553:580	5276774	0	True				
ANR	5276846	UnaryOperationExpression	"! strcmp ( sec_model , ""mapped"" )"		5276774	0					
ANR	5276847	UnaryOperator	!		5276774	0					
ANR	5276848	CallExpression	"strcmp ( sec_model , ""mapped"" )"		5276774	1					
ANR	5276849	Callee	strcmp		5276774	0					
ANR	5276850	Identifier	strcmp		5276774	0					
ANR	5276851	ArgumentList	sec_model		5276774	1					
ANR	5276852	Argument	sec_model		5276774	0					
ANR	5276853	Identifier	sec_model		5276774	0					
ANR	5276854	Argument	"""mapped"""		5276774	1					
ANR	5276855	PrimaryExpression	"""mapped"""		5276774	0					
ANR	5276856	CompoundStatement		27:45:510:510	5276774	1					
ANR	5276857	ExpressionStatement	fse -> export_flags |= V9FS_SM_MAPPED	31:8:594:629	5276774	0	True				
ANR	5276858	AssignmentExpression	fse -> export_flags |= V9FS_SM_MAPPED		5276774	0		|=			
ANR	5276859	PtrMemberAccess	fse -> export_flags		5276774	0					
ANR	5276860	Identifier	fse		5276774	0					
ANR	5276861	Identifier	export_flags		5276774	1					
ANR	5276862	Identifier	V9FS_SM_MAPPED		5276774	1					
ANR	5276863	ElseStatement	else		5276774	0					
ANR	5276864	IfStatement	"if ( ! strcmp ( sec_model , ""none"" ) )"		5276774	0					
ANR	5276865	Condition	"! strcmp ( sec_model , ""none"" )"	33:15:647:672	5276774	0	True				
ANR	5276866	UnaryOperationExpression	"! strcmp ( sec_model , ""none"" )"		5276774	0					
ANR	5276867	UnaryOperator	!		5276774	0					
ANR	5276868	CallExpression	"strcmp ( sec_model , ""none"" )"		5276774	1					
ANR	5276869	Callee	strcmp		5276774	0					
ANR	5276870	Identifier	strcmp		5276774	0					
ANR	5276871	ArgumentList	sec_model		5276774	1					
ANR	5276872	Argument	sec_model		5276774	0					
ANR	5276873	Identifier	sec_model		5276774	0					
ANR	5276874	Argument	"""none"""		5276774	1					
ANR	5276875	PrimaryExpression	"""none"""		5276774	0					
ANR	5276876	CompoundStatement		31:43:602:602	5276774	1					
ANR	5276877	ExpressionStatement	fse -> export_flags |= V9FS_SM_NONE	35:8:686:719	5276774	0	True				
ANR	5276878	AssignmentExpression	fse -> export_flags |= V9FS_SM_NONE		5276774	0		|=			
ANR	5276879	PtrMemberAccess	fse -> export_flags		5276774	0					
ANR	5276880	Identifier	fse		5276774	0					
ANR	5276881	Identifier	export_flags		5276774	1					
ANR	5276882	Identifier	V9FS_SM_NONE		5276774	1					
ANR	5276883	ElseStatement	else		5276774	0					
ANR	5276884	CompoundStatement		35:11:660:660	5276774	0					
ANR	5276885	Statement	fprintf	39:8:744:750	5276774	0	True				
ANR	5276886	Statement	(	39:15:751:751	5276774	1	True				
ANR	5276887	Statement	stderr	39:16:752:757	5276774	2	True				
ANR	5276888	Statement	","	39:22:758:758	5276774	3	True				
ANR	5276889	Statement	"""Invalid security model %s specified, valid options are"""	39:24:760:815	5276774	4	True				
ANR	5276890	Statement	"""\\n\\t [passthrough|mapped|none]\\n"""	41:16:834:867	5276774	5	True				
ANR	5276891	Statement	","	41:50:868:868	5276774	6	True				
ANR	5276892	Statement	sec_model	41:52:870:878	5276774	7	True				
ANR	5276893	Statement	)	41:61:879:879	5276774	8	True				
ANR	5276894	ExpressionStatement		41:62:880:880	5276774	9	True				
ANR	5276895	ReturnStatement	return - 1 ;	43:8:891:900	5276774	10	True				
ANR	5276896	UnaryOperationExpression	- 1		5276774	0					
ANR	5276897	UnaryOperator	-		5276774	0					
ANR	5276898	PrimaryExpression	1		5276774	1					
ANR	5276899	IfStatement	if ( ! path )		5276774	4					
ANR	5276900	Condition	! path	49:8:920:924	5276774	0	True				
ANR	5276901	UnaryOperationExpression	! path		5276774	0					
ANR	5276902	UnaryOperator	!		5276774	0					
ANR	5276903	Identifier	path		5276774	1					
ANR	5276904	CompoundStatement		47:15:854:854	5276774	1					
ANR	5276905	ExpressionStatement	"fprintf ( stderr , ""fsdev: No path specified.\\n"" )"	51:8:938:984	5276774	0	True				
ANR	5276906	CallExpression	"fprintf ( stderr , ""fsdev: No path specified.\\n"" )"		5276774	0					
ANR	5276907	Callee	fprintf		5276774	0					
ANR	5276908	Identifier	fprintf		5276774	0					
ANR	5276909	ArgumentList	stderr		5276774	1					
ANR	5276910	Argument	stderr		5276774	0					
ANR	5276911	Identifier	stderr		5276774	0					
ANR	5276912	Argument	"""fsdev: No path specified.\\n"""		5276774	1					
ANR	5276913	PrimaryExpression	"""fsdev: No path specified.\\n"""		5276774	0					
ANR	5276914	ReturnStatement	return - 1 ;	53:8:995:1004	5276774	1	True				
ANR	5276915	UnaryOperationExpression	- 1		5276774	0					
ANR	5276916	UnaryOperator	-		5276774	0					
ANR	5276917	PrimaryExpression	1		5276774	1					
ANR	5276918	ExpressionStatement	fse -> path = g_strdup ( path )	57:4:1018:1044	5276774	5	True				
ANR	5276919	AssignmentExpression	fse -> path = g_strdup ( path )		5276774	0		=			
ANR	5276920	PtrMemberAccess	fse -> path		5276774	0					
ANR	5276921	Identifier	fse		5276774	0					
ANR	5276922	Identifier	path		5276774	1					
ANR	5276923	CallExpression	g_strdup ( path )		5276774	1					
ANR	5276924	Callee	g_strdup		5276774	0					
ANR	5276925	Identifier	g_strdup		5276774	0					
ANR	5276926	ArgumentList	path		5276774	1					
ANR	5276927	Argument	path		5276774	0					
ANR	5276928	Identifier	path		5276774	0					
ANR	5276929	ReturnStatement	return 0 ;	61:4:1053:1061	5276774	6	True				
ANR	5276930	PrimaryExpression	0		5276774	0					
ANR	5276931	ReturnType	static int		5276774	1					
ANR	5276932	Identifier	local_parse_opts		5276774	2					
ANR	5276933	ParameterList	"QemuOpts * opts , struct FsDriverEntry * fse"		5276774	3					
ANR	5276934	Parameter	QemuOpts * opts	1:28:28:41	5276774	0	True				
ANR	5276935	ParameterType	QemuOpts *		5276774	0					
ANR	5276936	Identifier	opts		5276774	1					
ANR	5276937	Parameter	struct FsDriverEntry * fse	1:44:44:68	5276774	1	True				
ANR	5276938	ParameterType	struct FsDriverEntry *		5276774	0					
ANR	5276939	Identifier	fse		5276774	1					
ANR	5276940	CFGEntryNode	ENTRY		5276774		True				
ANR	5276941	CFGExitNode	EXIT		5276774		True				
ANR	5276942	Symbol	strcmp		5276774						
ANR	5276943	Symbol	qemu_opt_get		5276774						
ANR	5276944	Symbol	V9FS_SM_MAPPED		5276774						
ANR	5276945	Symbol	stderr		5276774						
ANR	5276946	Symbol	path		5276774						
ANR	5276947	Symbol	fse -> export_flags		5276774						
ANR	5276948	Symbol	fse -> path		5276774						
ANR	5276949	Symbol	opts		5276774						
ANR	5276950	Symbol	sec_model		5276774						
ANR	5276951	Symbol	g_strdup		5276774						
ANR	5276952	Symbol	fse		5276774						
ANR	5276953	Symbol	V9FS_SM_NONE		5276774						
ANR	5276954	Symbol	* fse		5276774						
ANR	5276955	Symbol	V9FS_SM_PASSTHROUGH		5276774						
