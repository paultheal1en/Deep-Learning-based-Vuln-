command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4706879	File	/home/p4ultr4n/workplace/ReVeal/raw_code/host_memory_backend_set_prealloc_1.c								
ANR	4706880	Function	host_memory_backend_set_prealloc	1:0:0:949							
ANR	4706881	FunctionDef	"host_memory_backend_set_prealloc (Object * obj , bool value , Error * * errp)"		4706880	0					
ANR	4706882	CompoundStatement		5:0:131:949	4706880	0					
ANR	4706883	IdentifierDeclStatement	Error * local_err = NULL ;	7:4:138:161	4706880	0	True				
ANR	4706884	IdentifierDecl	* local_err = NULL		4706880	0					
ANR	4706885	IdentifierDeclType	Error *		4706880	0					
ANR	4706886	Identifier	local_err		4706880	1					
ANR	4706887	AssignmentExpression	* local_err = NULL		4706880	2		=			
ANR	4706888	Identifier	NULL		4706880	0					
ANR	4706889	Identifier	NULL		4706880	1					
ANR	4706890	IdentifierDeclStatement	HostMemoryBackend * backend = MEMORY_BACKEND ( obj ) ;	9:4:168:216	4706880	1	True				
ANR	4706891	IdentifierDecl	* backend = MEMORY_BACKEND ( obj )		4706880	0					
ANR	4706892	IdentifierDeclType	HostMemoryBackend *		4706880	0					
ANR	4706893	Identifier	backend		4706880	1					
ANR	4706894	AssignmentExpression	* backend = MEMORY_BACKEND ( obj )		4706880	2		=			
ANR	4706895	Identifier	backend		4706880	0					
ANR	4706896	CallExpression	MEMORY_BACKEND ( obj )		4706880	1					
ANR	4706897	Callee	MEMORY_BACKEND		4706880	0					
ANR	4706898	Identifier	MEMORY_BACKEND		4706880	0					
ANR	4706899	ArgumentList	obj		4706880	1					
ANR	4706900	Argument	obj		4706880	0					
ANR	4706901	Identifier	obj		4706880	0					
ANR	4706902	IfStatement	if ( backend -> force_prealloc )		4706880	2					
ANR	4706903	Condition	backend -> force_prealloc	13:8:229:251	4706880	0	True				
ANR	4706904	PtrMemberAccess	backend -> force_prealloc		4706880	0					
ANR	4706905	Identifier	backend		4706880	0					
ANR	4706906	Identifier	force_prealloc		4706880	1					
ANR	4706907	CompoundStatement		9:33:122:122	4706880	1					
ANR	4706908	IfStatement	if ( value )		4706880	0					
ANR	4706909	Condition	value	15:12:269:273	4706880	0	True				
ANR	4706910	Identifier	value		4706880	0					
ANR	4706911	CompoundStatement		11:19:144:144	4706880	1					
ANR	4706912	ExpressionStatement	"error_setg ( errp , ""remove -mem-prealloc to use the prealloc property"" )"	17:12:291:384	4706880	0	True				
ANR	4706913	CallExpression	"error_setg ( errp , ""remove -mem-prealloc to use the prealloc property"" )"		4706880	0					
ANR	4706914	Callee	error_setg		4706880	0					
ANR	4706915	Identifier	error_setg		4706880	0					
ANR	4706916	ArgumentList	errp		4706880	1					
ANR	4706917	Argument	errp		4706880	0					
ANR	4706918	Identifier	errp		4706880	0					
ANR	4706919	Argument	"""remove -mem-prealloc to use the prealloc property"""		4706880	1					
ANR	4706920	PrimaryExpression	"""remove -mem-prealloc to use the prealloc property"""		4706880	0					
ANR	4706921	ReturnStatement	return ;	21:12:399:405	4706880	1	True				
ANR	4706922	IfStatement	if ( ! memory_region_size ( & backend -> mr ) )		4706880	3					
ANR	4706923	Condition	! memory_region_size ( & backend -> mr )	29:8:436:468	4706880	0	True				
ANR	4706924	UnaryOperationExpression	! memory_region_size ( & backend -> mr )		4706880	0					
ANR	4706925	UnaryOperator	!		4706880	0					
ANR	4706926	CallExpression	memory_region_size ( & backend -> mr )		4706880	1					
ANR	4706927	Callee	memory_region_size		4706880	0					
ANR	4706928	Identifier	memory_region_size		4706880	0					
ANR	4706929	ArgumentList	& backend -> mr		4706880	1					
ANR	4706930	Argument	& backend -> mr		4706880	0					
ANR	4706931	UnaryOperationExpression	& backend -> mr		4706880	0					
ANR	4706932	UnaryOperator	&		4706880	0					
ANR	4706933	PtrMemberAccess	backend -> mr		4706880	1					
ANR	4706934	Identifier	backend		4706880	0					
ANR	4706935	Identifier	mr		4706880	1					
ANR	4706936	CompoundStatement		25:43:339:339	4706880	1					
ANR	4706937	ExpressionStatement	backend -> prealloc = value	31:8:482:507	4706880	0	True				
ANR	4706938	AssignmentExpression	backend -> prealloc = value		4706880	0		=			
ANR	4706939	PtrMemberAccess	backend -> prealloc		4706880	0					
ANR	4706940	Identifier	backend		4706880	0					
ANR	4706941	Identifier	prealloc		4706880	1					
ANR	4706942	Identifier	value		4706880	1					
ANR	4706943	ReturnStatement	return ;	33:8:518:524	4706880	1	True				
ANR	4706944	IfStatement	if ( value && ! backend -> prealloc )		4706880	4					
ANR	4706945	Condition	value && ! backend -> prealloc	39:8:544:570	4706880	0	True				
ANR	4706946	AndExpression	value && ! backend -> prealloc		4706880	0		&&			
ANR	4706947	Identifier	value		4706880	0					
ANR	4706948	UnaryOperationExpression	! backend -> prealloc		4706880	1					
ANR	4706949	UnaryOperator	!		4706880	0					
ANR	4706950	PtrMemberAccess	backend -> prealloc		4706880	1					
ANR	4706951	Identifier	backend		4706880	0					
ANR	4706952	Identifier	prealloc		4706880	1					
ANR	4706953	CompoundStatement		41:8:568:614	4706880	1					
ANR	4706954	IdentifierDeclStatement	int fd = memory_region_get_fd ( & backend -> mr ) ;	41:8:584:627	4706880	0	True				
ANR	4706955	IdentifierDecl	fd = memory_region_get_fd ( & backend -> mr )		4706880	0					
ANR	4706956	IdentifierDeclType	int		4706880	0					
ANR	4706957	Identifier	fd		4706880	1					
ANR	4706958	AssignmentExpression	fd = memory_region_get_fd ( & backend -> mr )		4706880	2		=			
ANR	4706959	Identifier	fd		4706880	0					
ANR	4706960	CallExpression	memory_region_get_fd ( & backend -> mr )		4706880	1					
ANR	4706961	Callee	memory_region_get_fd		4706880	0					
ANR	4706962	Identifier	memory_region_get_fd		4706880	0					
ANR	4706963	ArgumentList	& backend -> mr		4706880	1					
ANR	4706964	Argument	& backend -> mr		4706880	0					
ANR	4706965	UnaryOperationExpression	& backend -> mr		4706880	0					
ANR	4706966	UnaryOperator	&		4706880	0					
ANR	4706967	PtrMemberAccess	backend -> mr		4706880	1					
ANR	4706968	Identifier	backend		4706880	0					
ANR	4706969	Identifier	mr		4706880	1					
ANR	4706970	IdentifierDeclStatement	void * ptr = memory_region_get_ram_ptr ( & backend -> mr ) ;	43:8:638:689	4706880	1	True				
ANR	4706971	IdentifierDecl	* ptr = memory_region_get_ram_ptr ( & backend -> mr )		4706880	0					
ANR	4706972	IdentifierDeclType	void *		4706880	0					
ANR	4706973	Identifier	ptr		4706880	1					
ANR	4706974	AssignmentExpression	* ptr = memory_region_get_ram_ptr ( & backend -> mr )		4706880	2		=			
ANR	4706975	Identifier	ptr		4706880	0					
ANR	4706976	CallExpression	memory_region_get_ram_ptr ( & backend -> mr )		4706880	1					
ANR	4706977	Callee	memory_region_get_ram_ptr		4706880	0					
ANR	4706978	Identifier	memory_region_get_ram_ptr		4706880	0					
ANR	4706979	ArgumentList	& backend -> mr		4706880	1					
ANR	4706980	Argument	& backend -> mr		4706880	0					
ANR	4706981	UnaryOperationExpression	& backend -> mr		4706880	0					
ANR	4706982	UnaryOperator	&		4706880	0					
ANR	4706983	PtrMemberAccess	backend -> mr		4706880	1					
ANR	4706984	Identifier	backend		4706880	0					
ANR	4706985	Identifier	mr		4706880	1					
ANR	4706986	IdentifierDeclStatement	uint64_t sz = memory_region_size ( & backend -> mr ) ;	45:8:700:746	4706880	2	True				
ANR	4706987	IdentifierDecl	sz = memory_region_size ( & backend -> mr )		4706880	0					
ANR	4706988	IdentifierDeclType	uint64_t		4706880	0					
ANR	4706989	Identifier	sz		4706880	1					
ANR	4706990	AssignmentExpression	sz = memory_region_size ( & backend -> mr )		4706880	2		=			
ANR	4706991	Identifier	sz		4706880	0					
ANR	4706992	CallExpression	memory_region_size ( & backend -> mr )		4706880	1					
ANR	4706993	Callee	memory_region_size		4706880	0					
ANR	4706994	Identifier	memory_region_size		4706880	0					
ANR	4706995	ArgumentList	& backend -> mr		4706880	1					
ANR	4706996	Argument	& backend -> mr		4706880	0					
ANR	4706997	UnaryOperationExpression	& backend -> mr		4706880	0					
ANR	4706998	UnaryOperator	&		4706880	0					
ANR	4706999	PtrMemberAccess	backend -> mr		4706880	1					
ANR	4707000	Identifier	backend		4706880	0					
ANR	4707001	Identifier	mr		4706880	1					
ANR	4707002	ExpressionStatement	"os_mem_prealloc ( fd , ptr , sz , & local_err )"	49:8:759:799	4706880	3	True				
ANR	4707003	CallExpression	"os_mem_prealloc ( fd , ptr , sz , & local_err )"		4706880	0					
ANR	4707004	Callee	os_mem_prealloc		4706880	0					
ANR	4707005	Identifier	os_mem_prealloc		4706880	0					
ANR	4707006	ArgumentList	fd		4706880	1					
ANR	4707007	Argument	fd		4706880	0					
ANR	4707008	Identifier	fd		4706880	0					
ANR	4707009	Argument	ptr		4706880	1					
ANR	4707010	Identifier	ptr		4706880	0					
ANR	4707011	Argument	sz		4706880	2					
ANR	4707012	Identifier	sz		4706880	0					
ANR	4707013	Argument	& local_err		4706880	3					
ANR	4707014	UnaryOperationExpression	& local_err		4706880	0					
ANR	4707015	UnaryOperator	&		4706880	0					
ANR	4707016	Identifier	local_err		4706880	1					
ANR	4707017	IfStatement	if ( local_err )		4706880	4					
ANR	4707018	Condition	local_err	51:12:814:822	4706880	0	True				
ANR	4707019	Identifier	local_err		4706880	0					
ANR	4707020	CompoundStatement		47:23:693:693	4706880	1					
ANR	4707021	ExpressionStatement	"error_propagate ( errp , local_err )"	53:12:840:872	4706880	0	True				
ANR	4707022	CallExpression	"error_propagate ( errp , local_err )"		4706880	0					
ANR	4707023	Callee	error_propagate		4706880	0					
ANR	4707024	Identifier	error_propagate		4706880	0					
ANR	4707025	ArgumentList	errp		4706880	1					
ANR	4707026	Argument	errp		4706880	0					
ANR	4707027	Identifier	errp		4706880	0					
ANR	4707028	Argument	local_err		4706880	1					
ANR	4707029	Identifier	local_err		4706880	0					
ANR	4707030	ReturnStatement	return ;	55:12:887:893	4706880	1	True				
ANR	4707031	ExpressionStatement	backend -> prealloc = true	59:8:915:939	4706880	5	True				
ANR	4707032	AssignmentExpression	backend -> prealloc = true		4706880	0		=			
ANR	4707033	PtrMemberAccess	backend -> prealloc		4706880	0					
ANR	4707034	Identifier	backend		4706880	0					
ANR	4707035	Identifier	prealloc		4706880	1					
ANR	4707036	Identifier	true		4706880	1					
ANR	4707037	ReturnType	static void		4706880	1					
ANR	4707038	Identifier	host_memory_backend_set_prealloc		4706880	2					
ANR	4707039	ParameterList	"Object * obj , bool value , Error * * errp"		4706880	3					
ANR	4707040	Parameter	Object * obj	1:45:45:55	4706880	0	True				
ANR	4707041	ParameterType	Object *		4706880	0					
ANR	4707042	Identifier	obj		4706880	1					
ANR	4707043	Parameter	bool value	1:58:58:67	4706880	1	True				
ANR	4707044	ParameterType	bool		4706880	0					
ANR	4707045	Identifier	value		4706880	1					
ANR	4707046	Parameter	Error * * errp	3:45:116:127	4706880	2	True				
ANR	4707047	ParameterType	Error * *		4706880	0					
ANR	4707048	Identifier	errp		4706880	1					
ANR	4707049	CFGEntryNode	ENTRY		4706880		True				
ANR	4707050	CFGExitNode	EXIT		4706880		True				
ANR	4707051	Symbol	memory_region_get_fd		4706880						
ANR	4707052	Symbol	NULL		4706880						
ANR	4707053	Symbol	memory_region_size		4706880						
ANR	4707054	Symbol	memory_region_get_ram_ptr		4706880						
ANR	4707055	Symbol	errp		4706880						
ANR	4707056	Symbol	& backend -> mr		4706880						
ANR	4707057	Symbol	sz		4706880						
ANR	4707058	Symbol	ptr		4706880						
ANR	4707059	Symbol	backend -> force_prealloc		4706880						
ANR	4707060	Symbol	* backend		4706880						
ANR	4707061	Symbol	MEMORY_BACKEND		4706880						
ANR	4707062	Symbol	backend -> prealloc		4706880						
ANR	4707063	Symbol	obj		4706880						
ANR	4707064	Symbol	& local_err		4706880						
ANR	4707065	Symbol	true		4706880						
ANR	4707066	Symbol	backend		4706880						
ANR	4707067	Symbol	value		4706880						
ANR	4707068	Symbol	fd		4706880						
ANR	4707069	Symbol	local_err		4706880						
