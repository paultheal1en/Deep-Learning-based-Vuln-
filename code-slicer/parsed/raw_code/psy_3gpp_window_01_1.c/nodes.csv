command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6756475	File	/home/p4ultr4n/workplace/ReVeal/raw_code/psy_3gpp_window_01_1.c								
ANR	6756476	Function	psy_3gpp_window	1:0:0:3213							
ANR	6756477	FunctionDef	"psy_3gpp_window (FFPsyContext * ctx , const int16_t * audio , const int16_t * la , int channel , int prev_type)"		6756476	0					
ANR	6756478	CompoundStatement		9:0:288:3213	6756476	0					
ANR	6756479	IdentifierDeclStatement	"int i , j ;"	11:4:295:303	6756476	0	True				
ANR	6756480	IdentifierDecl	i		6756476	0					
ANR	6756481	IdentifierDeclType	int		6756476	0					
ANR	6756482	Identifier	i		6756476	1					
ANR	6756483	IdentifierDecl	j		6756476	1					
ANR	6756484	IdentifierDeclType	int		6756476	0					
ANR	6756485	Identifier	j		6756476	1					
ANR	6756486	IdentifierDeclStatement	int br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels ;	13:4:310:376	6756476	1	True				
ANR	6756487	IdentifierDecl	br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6756476	0					
ANR	6756488	IdentifierDeclType	int		6756476	0					
ANR	6756489	Identifier	br		6756476	1					
ANR	6756490	AssignmentExpression	br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6756476	2		=			
ANR	6756491	Identifier	br		6756476	0					
ANR	6756492	MultiplicativeExpression	ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6756476	1		/			
ANR	6756493	PtrMemberAccess	ctx -> avctx -> bit_rate		6756476	0					
ANR	6756494	PtrMemberAccess	ctx -> avctx		6756476	0					
ANR	6756495	Identifier	ctx		6756476	0					
ANR	6756496	Identifier	avctx		6756476	1					
ANR	6756497	Identifier	bit_rate		6756476	1					
ANR	6756498	PtrMemberAccess	ctx -> avctx -> channels		6756476	1					
ANR	6756499	PtrMemberAccess	ctx -> avctx		6756476	0					
ANR	6756500	Identifier	ctx		6756476	0					
ANR	6756501	Identifier	avctx		6756476	1					
ANR	6756502	Identifier	channels		6756476	1					
ANR	6756503	IdentifierDeclStatement	int attack_ratio = br <= 16000 ? 18 : 10 ;	15:4:383:427	6756476	2	True				
ANR	6756504	IdentifierDecl	attack_ratio = br <= 16000 ? 18 : 10		6756476	0					
ANR	6756505	IdentifierDeclType	int		6756476	0					
ANR	6756506	Identifier	attack_ratio		6756476	1					
ANR	6756507	AssignmentExpression	attack_ratio = br <= 16000 ? 18 : 10		6756476	2		=			
ANR	6756508	Identifier	attack_ratio		6756476	0					
ANR	6756509	ConditionalExpression	br <= 16000 ? 18 : 10		6756476	1					
ANR	6756510	Condition	br <= 16000		6756476	0					
ANR	6756511	RelationalExpression	br <= 16000		6756476	0		<=			
ANR	6756512	Identifier	br		6756476	0					
ANR	6756513	PrimaryExpression	16000		6756476	1					
ANR	6756514	PrimaryExpression	18		6756476	1					
ANR	6756515	PrimaryExpression	10		6756476	2					
ANR	6756516	IdentifierDeclStatement	AacPsyContext * pctx = ( AacPsyContext * ) ctx -> model_priv_data ;	17:4:434:493	6756476	3	True				
ANR	6756517	IdentifierDecl	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6756476	0					
ANR	6756518	IdentifierDeclType	AacPsyContext *		6756476	0					
ANR	6756519	Identifier	pctx		6756476	1					
ANR	6756520	AssignmentExpression	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6756476	2		=			
ANR	6756521	Identifier	pctx		6756476	0					
ANR	6756522	CastExpression	( AacPsyContext * ) ctx -> model_priv_data		6756476	1					
ANR	6756523	CastTarget	AacPsyContext *		6756476	0					
ANR	6756524	PtrMemberAccess	ctx -> model_priv_data		6756476	1					
ANR	6756525	Identifier	ctx		6756476	0					
ANR	6756526	Identifier	model_priv_data		6756476	1					
ANR	6756527	IdentifierDeclStatement	AacPsyChannel * pch = & pctx -> ch [ channel ] ;	19:4:500:540	6756476	4	True				
ANR	6756528	IdentifierDecl	* pch = & pctx -> ch [ channel ]		6756476	0					
ANR	6756529	IdentifierDeclType	AacPsyChannel *		6756476	0					
ANR	6756530	Identifier	pch		6756476	1					
ANR	6756531	AssignmentExpression	* pch = & pctx -> ch [ channel ]		6756476	2		=			
ANR	6756532	Identifier	pch		6756476	0					
ANR	6756533	UnaryOperationExpression	& pctx -> ch [ channel ]		6756476	1					
ANR	6756534	UnaryOperator	&		6756476	0					
ANR	6756535	ArrayIndexing	pctx -> ch [ channel ]		6756476	1					
ANR	6756536	PtrMemberAccess	pctx -> ch		6756476	0					
ANR	6756537	Identifier	pctx		6756476	0					
ANR	6756538	Identifier	ch		6756476	1					
ANR	6756539	Identifier	channel		6756476	1					
ANR	6756540	IdentifierDeclStatement	uint8_t grouping = 0 ;	21:4:547:571	6756476	5	True				
ANR	6756541	IdentifierDecl	grouping = 0		6756476	0					
ANR	6756542	IdentifierDeclType	uint8_t		6756476	0					
ANR	6756543	Identifier	grouping		6756476	1					
ANR	6756544	AssignmentExpression	grouping = 0		6756476	2		=			
ANR	6756545	Identifier	grouping		6756476	0					
ANR	6756546	PrimaryExpression	0		6756476	1					
ANR	6756547	IdentifierDeclStatement	int next_type = pch -> next_window_seq ;	23:4:578:621	6756476	6	True				
ANR	6756548	IdentifierDecl	next_type = pch -> next_window_seq		6756476	0					
ANR	6756549	IdentifierDeclType	int		6756476	0					
ANR	6756550	Identifier	next_type		6756476	1					
ANR	6756551	AssignmentExpression	next_type = pch -> next_window_seq		6756476	2		=			
ANR	6756552	Identifier	next_type		6756476	0					
ANR	6756553	PtrMemberAccess	pch -> next_window_seq		6756476	1					
ANR	6756554	Identifier	pch		6756476	0					
ANR	6756555	Identifier	next_window_seq		6756476	1					
ANR	6756556	IdentifierDeclStatement	FFPsyWindowInfo wi = { { 0 } } ;	25:4:628:659	6756476	7	True				
ANR	6756557	IdentifierDecl	wi = { { 0 } }		6756476	0					
ANR	6756558	IdentifierDeclType	FFPsyWindowInfo		6756476	0					
ANR	6756559	Identifier	wi		6756476	1					
ANR	6756560	AssignmentExpression	wi = { { 0 } }		6756476	2		=			
ANR	6756561	Identifier	wi		6756476	0					
ANR	6756562	InitializerList	0		6756476	1					
ANR	6756563	InitializerList	0		6756476	0					
ANR	6756564	PrimaryExpression	0		6756476	0					
ANR	6756565	IfStatement	if ( la )		6756476	8					
ANR	6756566	Condition	la	29:8:672:673	6756476	0	True				
ANR	6756567	Identifier	la		6756476	0					
ANR	6756568	CompoundStatement		31:8:521:539	6756476	1					
ANR	6756569	IdentifierDeclStatement	"float s [ 8 ] , v ;"	31:8:687:700	6756476	0	True				
ANR	6756570	IdentifierDecl	s [ 8 ]		6756476	0					
ANR	6756571	IdentifierDeclType	float [ 8 ]		6756476	0					
ANR	6756572	Identifier	s		6756476	1					
ANR	6756573	PrimaryExpression	8		6756476	2					
ANR	6756574	IdentifierDecl	v		6756476	1					
ANR	6756575	IdentifierDeclType	float		6756476	0					
ANR	6756576	Identifier	v		6756476	1					
ANR	6756577	IdentifierDeclStatement	int switch_to_eight = 0 ;	33:8:711:734	6756476	1	True				
ANR	6756578	IdentifierDecl	switch_to_eight = 0		6756476	0					
ANR	6756579	IdentifierDeclType	int		6756476	0					
ANR	6756580	Identifier	switch_to_eight		6756476	1					
ANR	6756581	AssignmentExpression	switch_to_eight = 0		6756476	2		=			
ANR	6756582	Identifier	switch_to_eight		6756476	0					
ANR	6756583	PrimaryExpression	0		6756476	1					
ANR	6756584	IdentifierDeclStatement	"float sum = 0.0 , sum2 = 0.0 ;"	35:8:745:772	6756476	2	True				
ANR	6756585	IdentifierDecl	sum = 0.0		6756476	0					
ANR	6756586	IdentifierDeclType	float		6756476	0					
ANR	6756587	Identifier	sum		6756476	1					
ANR	6756588	AssignmentExpression	sum = 0.0		6756476	2		=			
ANR	6756589	Identifier	sum		6756476	0					
ANR	6756590	PrimaryExpression	0.0		6756476	1					
ANR	6756591	IdentifierDecl	sum2 = 0.0		6756476	1					
ANR	6756592	IdentifierDeclType	float		6756476	0					
ANR	6756593	Identifier	sum2		6756476	1					
ANR	6756594	AssignmentExpression	sum2 = 0.0		6756476	2		=			
ANR	6756595	Identifier	sum2		6756476	0					
ANR	6756596	PrimaryExpression	0.0		6756476	1					
ANR	6756597	IdentifierDeclStatement	int attack_n = 0 ;	37:8:783:799	6756476	3	True				
ANR	6756598	IdentifierDecl	attack_n = 0		6756476	0					
ANR	6756599	IdentifierDeclType	int		6756476	0					
ANR	6756600	Identifier	attack_n		6756476	1					
ANR	6756601	AssignmentExpression	attack_n = 0		6756476	2		=			
ANR	6756602	Identifier	attack_n		6756476	0					
ANR	6756603	PrimaryExpression	0		6756476	1					
ANR	6756604	IdentifierDeclStatement	int stay_short = 0 ;	39:8:810:828	6756476	4	True				
ANR	6756605	IdentifierDecl	stay_short = 0		6756476	0					
ANR	6756606	IdentifierDeclType	int		6756476	0					
ANR	6756607	Identifier	stay_short		6756476	1					
ANR	6756608	AssignmentExpression	stay_short = 0		6756476	2		=			
ANR	6756609	Identifier	stay_short		6756476	0					
ANR	6756610	PrimaryExpression	0		6756476	1					
ANR	6756611	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6756476	5					
ANR	6756612	ForInit	i = 0 ;	41:13:844:849	6756476	0	True				
ANR	6756613	AssignmentExpression	i = 0		6756476	0		=			
ANR	6756614	Identifier	i		6756476	0					
ANR	6756615	PrimaryExpression	0		6756476	1					
ANR	6756616	Condition	i < 8	41:20:851:855	6756476	1	True				
ANR	6756617	RelationalExpression	i < 8		6756476	0		<			
ANR	6756618	Identifier	i		6756476	0					
ANR	6756619	PrimaryExpression	8		6756476	1					
ANR	6756620	PostIncDecOperationExpression	i ++	41:27:858:860	6756476	2	True				
ANR	6756621	Identifier	i		6756476	0					
ANR	6756622	IncDec	++		6756476	1					
ANR	6756623	CompoundStatement		33:32:574:574	6756476	3					
ANR	6756624	ForStatement	for ( j = 0 ; j < 128 ; j ++ )		6756476	0					
ANR	6756625	ForInit	j = 0 ;	43:17:883:888	6756476	0	True				
ANR	6756626	AssignmentExpression	j = 0		6756476	0		=			
ANR	6756627	Identifier	j		6756476	0					
ANR	6756628	PrimaryExpression	0		6756476	1					
ANR	6756629	Condition	j < 128	43:24:890:896	6756476	1	True				
ANR	6756630	RelationalExpression	j < 128		6756476	0		<			
ANR	6756631	Identifier	j		6756476	0					
ANR	6756632	PrimaryExpression	128		6756476	1					
ANR	6756633	PostIncDecOperationExpression	j ++	43:33:899:901	6756476	2	True				
ANR	6756634	Identifier	j		6756476	0					
ANR	6756635	IncDec	++		6756476	1					
ANR	6756636	CompoundStatement		35:38:615:615	6756476	3					
ANR	6756637	ExpressionStatement	"v = iir_filter ( la [ i * 128 + j ] , pch -> iir_state )"	45:16:923:966	6756476	0	True				
ANR	6756638	AssignmentExpression	"v = iir_filter ( la [ i * 128 + j ] , pch -> iir_state )"		6756476	0		=			
ANR	6756639	Identifier	v		6756476	0					
ANR	6756640	CallExpression	"iir_filter ( la [ i * 128 + j ] , pch -> iir_state )"		6756476	1					
ANR	6756641	Callee	iir_filter		6756476	0					
ANR	6756642	Identifier	iir_filter		6756476	0					
ANR	6756643	ArgumentList	la [ i * 128 + j ]		6756476	1					
ANR	6756644	Argument	la [ i * 128 + j ]		6756476	0					
ANR	6756645	ArrayIndexing	la [ i * 128 + j ]		6756476	0					
ANR	6756646	Identifier	la		6756476	0					
ANR	6756647	AdditiveExpression	i * 128 + j		6756476	1		+			
ANR	6756648	MultiplicativeExpression	i * 128		6756476	0		*			
ANR	6756649	Identifier	i		6756476	0					
ANR	6756650	PrimaryExpression	128		6756476	1					
ANR	6756651	Identifier	j		6756476	1					
ANR	6756652	Argument	pch -> iir_state		6756476	1					
ANR	6756653	PtrMemberAccess	pch -> iir_state		6756476	0					
ANR	6756654	Identifier	pch		6756476	0					
ANR	6756655	Identifier	iir_state		6756476	1					
ANR	6756656	ExpressionStatement	sum += v * v	47:16:985:995	6756476	1	True				
ANR	6756657	AssignmentExpression	sum += v * v		6756476	0		+=			
ANR	6756658	Identifier	sum		6756476	0					
ANR	6756659	MultiplicativeExpression	v * v		6756476	1		*			
ANR	6756660	Identifier	v		6756476	0					
ANR	6756661	Identifier	v		6756476	1					
ANR	6756662	ExpressionStatement	s [ i ] = sum	51:12:1025:1036	6756476	1	True				
ANR	6756663	AssignmentExpression	s [ i ] = sum		6756476	0		=			
ANR	6756664	ArrayIndexing	s [ i ]		6756476	0					
ANR	6756665	Identifier	s		6756476	0					
ANR	6756666	Identifier	i		6756476	1					
ANR	6756667	Identifier	sum		6756476	1					
ANR	6756668	ExpressionStatement	sum2 += sum	53:12:1051:1062	6756476	2	True				
ANR	6756669	AssignmentExpression	sum2 += sum		6756476	0		+=			
ANR	6756670	Identifier	sum2		6756476	0					
ANR	6756671	Identifier	sum		6756476	1					
ANR	6756672	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6756476	6					
ANR	6756673	ForInit	i = 0 ;	57:13:1089:1094	6756476	0	True				
ANR	6756674	AssignmentExpression	i = 0		6756476	0		=			
ANR	6756675	Identifier	i		6756476	0					
ANR	6756676	PrimaryExpression	0		6756476	1					
ANR	6756677	Condition	i < 8	57:20:1096:1100	6756476	1	True				
ANR	6756678	RelationalExpression	i < 8		6756476	0		<			
ANR	6756679	Identifier	i		6756476	0					
ANR	6756680	PrimaryExpression	8		6756476	1					
ANR	6756681	PostIncDecOperationExpression	i ++	57:27:1103:1105	6756476	2	True				
ANR	6756682	Identifier	i		6756476	0					
ANR	6756683	IncDec	++		6756476	1					
ANR	6756684	CompoundStatement		49:32:819:819	6756476	3					
ANR	6756685	IfStatement	if ( s [ i ] > pch -> win_energy * attack_ratio )		6756476	0					
ANR	6756686	Condition	s [ i ] > pch -> win_energy * attack_ratio	59:16:1127:1163	6756476	0	True				
ANR	6756687	RelationalExpression	s [ i ] > pch -> win_energy * attack_ratio		6756476	0		>			
ANR	6756688	ArrayIndexing	s [ i ]		6756476	0					
ANR	6756689	Identifier	s		6756476	0					
ANR	6756690	Identifier	i		6756476	1					
ANR	6756691	MultiplicativeExpression	pch -> win_energy * attack_ratio		6756476	1		*			
ANR	6756692	PtrMemberAccess	pch -> win_energy		6756476	0					
ANR	6756693	Identifier	pch		6756476	0					
ANR	6756694	Identifier	win_energy		6756476	1					
ANR	6756695	Identifier	attack_ratio		6756476	1					
ANR	6756696	CompoundStatement		51:55:877:877	6756476	1					
ANR	6756697	ExpressionStatement	attack_n = i + 1	61:16:1185:1208	6756476	0	True				
ANR	6756698	AssignmentExpression	attack_n = i + 1		6756476	0		=			
ANR	6756699	Identifier	attack_n		6756476	0					
ANR	6756700	AdditiveExpression	i + 1		6756476	1		+			
ANR	6756701	Identifier	i		6756476	0					
ANR	6756702	PrimaryExpression	1		6756476	1					
ANR	6756703	ExpressionStatement	switch_to_eight = 1	63:16:1227:1246	6756476	1	True				
ANR	6756704	AssignmentExpression	switch_to_eight = 1		6756476	0		=			
ANR	6756705	Identifier	switch_to_eight		6756476	0					
ANR	6756706	PrimaryExpression	1		6756476	1					
ANR	6756707	BreakStatement	break ;	65:16:1265:1270	6756476	2	True				
ANR	6756708	ExpressionStatement	pch -> win_energy = pch -> win_energy * 7 / 8 + sum2 / 64	71:8:1307:1354	6756476	7	True				
ANR	6756709	AssignmentExpression	pch -> win_energy = pch -> win_energy * 7 / 8 + sum2 / 64		6756476	0		=			
ANR	6756710	PtrMemberAccess	pch -> win_energy		6756476	0					
ANR	6756711	Identifier	pch		6756476	0					
ANR	6756712	Identifier	win_energy		6756476	1					
ANR	6756713	AdditiveExpression	pch -> win_energy * 7 / 8 + sum2 / 64		6756476	1		+			
ANR	6756714	MultiplicativeExpression	pch -> win_energy * 7 / 8		6756476	0		*			
ANR	6756715	PtrMemberAccess	pch -> win_energy		6756476	0					
ANR	6756716	Identifier	pch		6756476	0					
ANR	6756717	Identifier	win_energy		6756476	1					
ANR	6756718	MultiplicativeExpression	7 / 8		6756476	1		/			
ANR	6756719	PrimaryExpression	7		6756476	0					
ANR	6756720	PrimaryExpression	8		6756476	1					
ANR	6756721	MultiplicativeExpression	sum2 / 64		6756476	1		/			
ANR	6756722	Identifier	sum2		6756476	0					
ANR	6756723	PrimaryExpression	64		6756476	1					
ANR	6756724	ExpressionStatement	wi . window_type [ 1 ] = prev_type	75:8:1367:1396	6756476	8	True				
ANR	6756725	AssignmentExpression	wi . window_type [ 1 ] = prev_type		6756476	0		=			
ANR	6756726	ArrayIndexing	wi . window_type [ 1 ]		6756476	0					
ANR	6756727	MemberAccess	wi . window_type		6756476	0					
ANR	6756728	Identifier	wi		6756476	0					
ANR	6756729	Identifier	window_type		6756476	1					
ANR	6756730	PrimaryExpression	1		6756476	1					
ANR	6756731	Identifier	prev_type		6756476	1					
ANR	6756732	SwitchStatement	switch ( prev_type )		6756476	9					
ANR	6756733	Condition	prev_type	77:16:1415:1423	6756476	0	True				
ANR	6756734	Identifier	prev_type		6756476	0					
ANR	6756735	CompoundStatement		69:27:1137:1137	6756476	1					
ANR	6756736	Label	case ONLY_LONG_SEQUENCE :	79:8:1437:1460	6756476	0	True				
ANR	6756737	Identifier	ONLY_LONG_SEQUENCE		6756476	0					
ANR	6756738	ExpressionStatement	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE	81:12:1475:1553	6756476	1	True				
ANR	6756739	AssignmentExpression	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	0		=			
ANR	6756740	ArrayIndexing	wi . window_type [ 0 ]		6756476	0					
ANR	6756741	MemberAccess	wi . window_type		6756476	0					
ANR	6756742	Identifier	wi		6756476	0					
ANR	6756743	Identifier	window_type		6756476	1					
ANR	6756744	PrimaryExpression	0		6756476	1					
ANR	6756745	ConditionalExpression	switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	1					
ANR	6756746	Condition	switch_to_eight		6756476	0					
ANR	6756747	Identifier	switch_to_eight		6756476	0					
ANR	6756748	Identifier	LONG_START_SEQUENCE		6756476	1					
ANR	6756749	Identifier	ONLY_LONG_SEQUENCE		6756476	2					
ANR	6756750	ExpressionStatement	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE	83:12:1568:1639	6756476	2	True				
ANR	6756751	AssignmentExpression	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	0		=			
ANR	6756752	Identifier	next_type		6756476	0					
ANR	6756753	ConditionalExpression	switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	1					
ANR	6756754	Condition	switch_to_eight		6756476	0					
ANR	6756755	Identifier	switch_to_eight		6756476	0					
ANR	6756756	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756757	Identifier	ONLY_LONG_SEQUENCE		6756476	2					
ANR	6756758	BreakStatement	break ;	85:12:1654:1659	6756476	3	True				
ANR	6756759	Label	case LONG_START_SEQUENCE :	87:8:1670:1694	6756476	4	True				
ANR	6756760	Identifier	LONG_START_SEQUENCE		6756476	0					
ANR	6756761	ExpressionStatement	wi . window_type [ 0 ] = EIGHT_SHORT_SEQUENCE	89:12:1709:1749	6756476	5	True				
ANR	6756762	AssignmentExpression	wi . window_type [ 0 ] = EIGHT_SHORT_SEQUENCE		6756476	0		=			
ANR	6756763	ArrayIndexing	wi . window_type [ 0 ]		6756476	0					
ANR	6756764	MemberAccess	wi . window_type		6756476	0					
ANR	6756765	Identifier	wi		6756476	0					
ANR	6756766	Identifier	window_type		6756476	1					
ANR	6756767	PrimaryExpression	0		6756476	1					
ANR	6756768	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756769	ExpressionStatement	grouping = pch -> next_grouping	91:12:1764:1793	6756476	6	True				
ANR	6756770	AssignmentExpression	grouping = pch -> next_grouping		6756476	0		=			
ANR	6756771	Identifier	grouping		6756476	0					
ANR	6756772	PtrMemberAccess	pch -> next_grouping		6756476	1					
ANR	6756773	Identifier	pch		6756476	0					
ANR	6756774	Identifier	next_grouping		6756476	1					
ANR	6756775	ExpressionStatement	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE	93:12:1808:1879	6756476	7	True				
ANR	6756776	AssignmentExpression	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	0		=			
ANR	6756777	Identifier	next_type		6756476	0					
ANR	6756778	ConditionalExpression	switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	1					
ANR	6756779	Condition	switch_to_eight		6756476	0					
ANR	6756780	Identifier	switch_to_eight		6756476	0					
ANR	6756781	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756782	Identifier	LONG_STOP_SEQUENCE		6756476	2					
ANR	6756783	BreakStatement	break ;	95:12:1894:1899	6756476	8	True				
ANR	6756784	Label	case LONG_STOP_SEQUENCE :	97:8:1910:1933	6756476	9	True				
ANR	6756785	Identifier	LONG_STOP_SEQUENCE		6756476	0					
ANR	6756786	ExpressionStatement	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE	99:12:1948:2026	6756476	10	True				
ANR	6756787	AssignmentExpression	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	0		=			
ANR	6756788	ArrayIndexing	wi . window_type [ 0 ]		6756476	0					
ANR	6756789	MemberAccess	wi . window_type		6756476	0					
ANR	6756790	Identifier	wi		6756476	0					
ANR	6756791	Identifier	window_type		6756476	1					
ANR	6756792	PrimaryExpression	0		6756476	1					
ANR	6756793	ConditionalExpression	switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	1					
ANR	6756794	Condition	switch_to_eight		6756476	0					
ANR	6756795	Identifier	switch_to_eight		6756476	0					
ANR	6756796	Identifier	LONG_START_SEQUENCE		6756476	1					
ANR	6756797	Identifier	ONLY_LONG_SEQUENCE		6756476	2					
ANR	6756798	ExpressionStatement	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE	101:12:2041:2112	6756476	11	True				
ANR	6756799	AssignmentExpression	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	0		=			
ANR	6756800	Identifier	next_type		6756476	0					
ANR	6756801	ConditionalExpression	switch_to_eight ? EIGHT_SHORT_SEQUENCE : ONLY_LONG_SEQUENCE		6756476	1					
ANR	6756802	Condition	switch_to_eight		6756476	0					
ANR	6756803	Identifier	switch_to_eight		6756476	0					
ANR	6756804	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756805	Identifier	ONLY_LONG_SEQUENCE		6756476	2					
ANR	6756806	BreakStatement	break ;	103:12:2127:2132	6756476	12	True				
ANR	6756807	Label	case EIGHT_SHORT_SEQUENCE :	105:8:2143:2168	6756476	13	True				
ANR	6756808	Identifier	EIGHT_SHORT_SEQUENCE		6756476	0					
ANR	6756809	ExpressionStatement	stay_short = next_type == EIGHT_SHORT_SEQUENCE || switch_to_eight	107:12:2183:2248	6756476	14	True				
ANR	6756810	AssignmentExpression	stay_short = next_type == EIGHT_SHORT_SEQUENCE || switch_to_eight		6756476	0		=			
ANR	6756811	Identifier	stay_short		6756476	0					
ANR	6756812	OrExpression	next_type == EIGHT_SHORT_SEQUENCE || switch_to_eight		6756476	1		||			
ANR	6756813	EqualityExpression	next_type == EIGHT_SHORT_SEQUENCE		6756476	0		==			
ANR	6756814	Identifier	next_type		6756476	0					
ANR	6756815	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756816	Identifier	switch_to_eight		6756476	1					
ANR	6756817	ExpressionStatement	wi . window_type [ 0 ] = stay_short ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE	109:12:2263:2337	6756476	15	True				
ANR	6756818	AssignmentExpression	wi . window_type [ 0 ] = stay_short ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	0		=			
ANR	6756819	ArrayIndexing	wi . window_type [ 0 ]		6756476	0					
ANR	6756820	MemberAccess	wi . window_type		6756476	0					
ANR	6756821	Identifier	wi		6756476	0					
ANR	6756822	Identifier	window_type		6756476	1					
ANR	6756823	PrimaryExpression	0		6756476	1					
ANR	6756824	ConditionalExpression	stay_short ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	1					
ANR	6756825	Condition	stay_short		6756476	0					
ANR	6756826	Identifier	stay_short		6756476	0					
ANR	6756827	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756828	Identifier	LONG_STOP_SEQUENCE		6756476	2					
ANR	6756829	ExpressionStatement	grouping = next_type == EIGHT_SHORT_SEQUENCE ? pch -> next_grouping : 0	111:12:2352:2421	6756476	16	True				
ANR	6756830	AssignmentExpression	grouping = next_type == EIGHT_SHORT_SEQUENCE ? pch -> next_grouping : 0		6756476	0		=			
ANR	6756831	Identifier	grouping		6756476	0					
ANR	6756832	ConditionalExpression	next_type == EIGHT_SHORT_SEQUENCE ? pch -> next_grouping : 0		6756476	1					
ANR	6756833	Condition	next_type == EIGHT_SHORT_SEQUENCE		6756476	0					
ANR	6756834	EqualityExpression	next_type == EIGHT_SHORT_SEQUENCE		6756476	0		==			
ANR	6756835	Identifier	next_type		6756476	0					
ANR	6756836	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756837	PtrMemberAccess	pch -> next_grouping		6756476	1					
ANR	6756838	Identifier	pch		6756476	0					
ANR	6756839	Identifier	next_grouping		6756476	1					
ANR	6756840	PrimaryExpression	0		6756476	2					
ANR	6756841	ExpressionStatement	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE	113:12:2436:2507	6756476	17	True				
ANR	6756842	AssignmentExpression	next_type = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	0		=			
ANR	6756843	Identifier	next_type		6756476	0					
ANR	6756844	ConditionalExpression	switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6756476	1					
ANR	6756845	Condition	switch_to_eight		6756476	0					
ANR	6756846	Identifier	switch_to_eight		6756476	0					
ANR	6756847	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756848	Identifier	LONG_STOP_SEQUENCE		6756476	2					
ANR	6756849	BreakStatement	break ;	115:12:2522:2527	6756476	18	True				
ANR	6756850	ExpressionStatement	pch -> next_grouping = window_grouping [ attack_n ]	121:8:2551:2597	6756476	10	True				
ANR	6756851	AssignmentExpression	pch -> next_grouping = window_grouping [ attack_n ]		6756476	0		=			
ANR	6756852	PtrMemberAccess	pch -> next_grouping		6756476	0					
ANR	6756853	Identifier	pch		6756476	0					
ANR	6756854	Identifier	next_grouping		6756476	1					
ANR	6756855	ArrayIndexing	window_grouping [ attack_n ]		6756476	1					
ANR	6756856	Identifier	window_grouping		6756476	0					
ANR	6756857	Identifier	attack_n		6756476	1					
ANR	6756858	ExpressionStatement	pch -> next_window_seq = next_type	123:8:2608:2640	6756476	11	True				
ANR	6756859	AssignmentExpression	pch -> next_window_seq = next_type		6756476	0		=			
ANR	6756860	PtrMemberAccess	pch -> next_window_seq		6756476	0					
ANR	6756861	Identifier	pch		6756476	0					
ANR	6756862	Identifier	next_window_seq		6756476	1					
ANR	6756863	Identifier	next_type		6756476	1					
ANR	6756864	ElseStatement	else		6756476	0					
ANR	6756865	CompoundStatement		117:11:2365:2365	6756476	0					
ANR	6756866	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		6756476	0					
ANR	6756867	ForInit	i = 0 ;	127:13:2670:2675	6756476	0	True				
ANR	6756868	AssignmentExpression	i = 0		6756476	0		=			
ANR	6756869	Identifier	i		6756476	0					
ANR	6756870	PrimaryExpression	0		6756476	1					
ANR	6756871	Condition	i < 3	127:20:2677:2681	6756476	1	True				
ANR	6756872	RelationalExpression	i < 3		6756476	0		<			
ANR	6756873	Identifier	i		6756476	0					
ANR	6756874	PrimaryExpression	3		6756476	1					
ANR	6756875	PostIncDecOperationExpression	i ++	127:27:2684:2686	6756476	2	True				
ANR	6756876	Identifier	i		6756476	0					
ANR	6756877	IncDec	++		6756476	1					
ANR	6756878	ExpressionStatement	wi . window_type [ i ] = prev_type	129:12:2702:2731	6756476	3	True				
ANR	6756879	AssignmentExpression	wi . window_type [ i ] = prev_type		6756476	0		=			
ANR	6756880	ArrayIndexing	wi . window_type [ i ]		6756476	0					
ANR	6756881	MemberAccess	wi . window_type		6756476	0					
ANR	6756882	Identifier	wi		6756476	0					
ANR	6756883	Identifier	window_type		6756476	1					
ANR	6756884	Identifier	i		6756476	1					
ANR	6756885	Identifier	prev_type		6756476	1					
ANR	6756886	ExpressionStatement	grouping = ( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0	131:8:2742:2813	6756476	1	True				
ANR	6756887	AssignmentExpression	grouping = ( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0		6756476	0		=			
ANR	6756888	Identifier	grouping		6756476	0					
ANR	6756889	ConditionalExpression	( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0		6756476	1					
ANR	6756890	Condition	prev_type == EIGHT_SHORT_SEQUENCE		6756476	0					
ANR	6756891	EqualityExpression	prev_type == EIGHT_SHORT_SEQUENCE		6756476	0		==			
ANR	6756892	Identifier	prev_type		6756476	0					
ANR	6756893	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756894	ArrayIndexing	window_grouping [ 0 ]		6756476	1					
ANR	6756895	Identifier	window_grouping		6756476	0					
ANR	6756896	PrimaryExpression	0		6756476	1					
ANR	6756897	PrimaryExpression	0		6756476	2					
ANR	6756898	ExpressionStatement	wi . window_shape = 1	137:4:2829:2850	6756476	9	True				
ANR	6756899	AssignmentExpression	wi . window_shape = 1		6756476	0		=			
ANR	6756900	MemberAccess	wi . window_shape		6756476	0					
ANR	6756901	Identifier	wi		6756476	0					
ANR	6756902	Identifier	window_shape		6756476	1					
ANR	6756903	PrimaryExpression	1		6756476	1					
ANR	6756904	IfStatement	if ( wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE )		6756476	10					
ANR	6756905	Condition	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE	139:8:2861:2901	6756476	0	True				
ANR	6756906	EqualityExpression	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE		6756476	0		!=			
ANR	6756907	ArrayIndexing	wi . window_type [ 0 ]		6756476	0					
ANR	6756908	MemberAccess	wi . window_type		6756476	0					
ANR	6756909	Identifier	wi		6756476	0					
ANR	6756910	Identifier	window_type		6756476	1					
ANR	6756911	PrimaryExpression	0		6756476	1					
ANR	6756912	Identifier	EIGHT_SHORT_SEQUENCE		6756476	1					
ANR	6756913	CompoundStatement		131:51:2615:2615	6756476	1					
ANR	6756914	ExpressionStatement	wi . num_windows = 1	141:8:2915:2933	6756476	0	True				
ANR	6756915	AssignmentExpression	wi . num_windows = 1		6756476	0		=			
ANR	6756916	MemberAccess	wi . num_windows		6756476	0					
ANR	6756917	Identifier	wi		6756476	0					
ANR	6756918	Identifier	num_windows		6756476	1					
ANR	6756919	PrimaryExpression	1		6756476	1					
ANR	6756920	ExpressionStatement	wi . grouping [ 0 ] = 1	143:8:2944:2962	6756476	1	True				
ANR	6756921	AssignmentExpression	wi . grouping [ 0 ] = 1		6756476	0		=			
ANR	6756922	ArrayIndexing	wi . grouping [ 0 ]		6756476	0					
ANR	6756923	MemberAccess	wi . grouping		6756476	0					
ANR	6756924	Identifier	wi		6756476	0					
ANR	6756925	Identifier	grouping		6756476	1					
ANR	6756926	PrimaryExpression	0		6756476	1					
ANR	6756927	PrimaryExpression	1		6756476	1					
ANR	6756928	ElseStatement	else		6756476	0					
ANR	6756929	CompoundStatement		139:8:2698:2713	6756476	0					
ANR	6756930	IdentifierDeclStatement	int lastgrp = 0 ;	147:8:2987:3002	6756476	0	True				
ANR	6756931	IdentifierDecl	lastgrp = 0		6756476	0					
ANR	6756932	IdentifierDeclType	int		6756476	0					
ANR	6756933	Identifier	lastgrp		6756476	1					
ANR	6756934	AssignmentExpression	lastgrp = 0		6756476	2		=			
ANR	6756935	Identifier	lastgrp		6756476	0					
ANR	6756936	PrimaryExpression	0		6756476	1					
ANR	6756937	ExpressionStatement	wi . num_windows = 8	149:8:3013:3031	6756476	1	True				
ANR	6756938	AssignmentExpression	wi . num_windows = 8		6756476	0		=			
ANR	6756939	MemberAccess	wi . num_windows		6756476	0					
ANR	6756940	Identifier	wi		6756476	0					
ANR	6756941	Identifier	num_windows		6756476	1					
ANR	6756942	PrimaryExpression	8		6756476	1					
ANR	6756943	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6756476	2					
ANR	6756944	ForInit	i = 0 ;	151:13:3047:3052	6756476	0	True				
ANR	6756945	AssignmentExpression	i = 0		6756476	0		=			
ANR	6756946	Identifier	i		6756476	0					
ANR	6756947	PrimaryExpression	0		6756476	1					
ANR	6756948	Condition	i < 8	151:20:3054:3058	6756476	1	True				
ANR	6756949	RelationalExpression	i < 8		6756476	0		<			
ANR	6756950	Identifier	i		6756476	0					
ANR	6756951	PrimaryExpression	8		6756476	1					
ANR	6756952	PostIncDecOperationExpression	i ++	151:27:3061:3063	6756476	2	True				
ANR	6756953	Identifier	i		6756476	0					
ANR	6756954	IncDec	++		6756476	1					
ANR	6756955	CompoundStatement		143:32:2777:2777	6756476	3					
ANR	6756956	IfStatement	if ( ! ( ( grouping >> i ) & 1 ) )		6756476	0					
ANR	6756957	Condition	! ( ( grouping >> i ) & 1 )	153:16:3085:3106	6756476	0	True				
ANR	6756958	UnaryOperationExpression	! ( ( grouping >> i ) & 1 )		6756476	0					
ANR	6756959	UnaryOperator	!		6756476	0					
ANR	6756960	BitAndExpression	( grouping >> i ) & 1		6756476	1		&			
ANR	6756961	ShiftExpression	grouping >> i		6756476	0		>>			
ANR	6756962	Identifier	grouping		6756476	0					
ANR	6756963	Identifier	i		6756476	1					
ANR	6756964	PrimaryExpression	1		6756476	1					
ANR	6756965	ExpressionStatement	lastgrp = i	155:16:3126:3137	6756476	1	True				
ANR	6756966	AssignmentExpression	lastgrp = i		6756476	0		=			
ANR	6756967	Identifier	lastgrp		6756476	0					
ANR	6756968	Identifier	i		6756476	1					
ANR	6756969	ExpressionStatement	wi . grouping [ lastgrp ] ++	157:12:3152:3174	6756476	1	True				
ANR	6756970	PostIncDecOperationExpression	wi . grouping [ lastgrp ] ++		6756476	0					
ANR	6756971	ArrayIndexing	wi . grouping [ lastgrp ]		6756476	0					
ANR	6756972	MemberAccess	wi . grouping		6756476	0					
ANR	6756973	Identifier	wi		6756476	0					
ANR	6756974	Identifier	grouping		6756476	1					
ANR	6756975	Identifier	lastgrp		6756476	1					
ANR	6756976	IncDec	++		6756476	1					
ANR	6756977	ReturnStatement	return wi ;	165:4:3201:3210	6756476	11	True				
ANR	6756978	Identifier	wi		6756476	0					
ANR	6756979	ReturnType	static av_unused FFPsyWindowInfo		6756476	1					
ANR	6756980	Identifier	psy_3gpp_window		6756476	2					
ANR	6756981	ParameterList	"FFPsyContext * ctx , const int16_t * audio , const int16_t * la , int channel , int prev_type"		6756476	3					
ANR	6756982	Parameter	FFPsyContext * ctx	1:49:49:65	6756476	0	True				
ANR	6756983	ParameterType	FFPsyContext *		6756476	0					
ANR	6756984	Identifier	ctx		6756476	1					
ANR	6756985	Parameter	const int16_t * audio	3:49:118:137	6756476	1	True				
ANR	6756986	ParameterType	const int16_t *		6756476	0					
ANR	6756987	Identifier	audio		6756476	1					
ANR	6756988	Parameter	const int16_t * la	5:49:190:206	6756476	2	True				
ANR	6756989	ParameterType	const int16_t *		6756476	0					
ANR	6756990	Identifier	la		6756476	1					
ANR	6756991	Parameter	int channel	7:49:259:269	6756476	3	True				
ANR	6756992	ParameterType	int		6756476	0					
ANR	6756993	Identifier	channel		6756476	1					
ANR	6756994	Parameter	int prev_type	7:62:272:284	6756476	4	True				
ANR	6756995	ParameterType	int		6756476	0					
ANR	6756996	Identifier	prev_type		6756476	1					
ANR	6756997	CFGEntryNode	ENTRY		6756476		True				
ANR	6756998	CFGExitNode	EXIT		6756476		True				
ANR	6756999	Symbol	pctx		6756476						
ANR	6757000	Symbol	channel		6756476						
ANR	6757001	Symbol	* lastgrp		6756476						
ANR	6757002	Symbol	wi . grouping		6756476						
ANR	6757003	Symbol	next_type		6756476						
ANR	6757004	Symbol	* wi . window_type		6756476						
ANR	6757005	Symbol	wi . window_type		6756476						
ANR	6757006	Symbol	* wi		6756476						
ANR	6757007	Symbol	prev_type		6756476						
ANR	6757008	Symbol	* ctx -> avctx		6756476						
ANR	6757009	Symbol	ctx		6756476						
ANR	6757010	Symbol	attack_n		6756476						
ANR	6757011	Symbol	pch -> iir_state		6756476						
ANR	6757012	Symbol	grouping		6756476						
ANR	6757013	Symbol	pch -> next_grouping		6756476						
ANR	6757014	Symbol	EIGHT_SHORT_SEQUENCE		6756476						
ANR	6757015	Symbol	ctx -> avctx		6756476						
ANR	6757016	Symbol	pctx -> ch		6756476						
ANR	6757017	Symbol	wi . window_shape		6756476						
ANR	6757018	Symbol	pch -> win_energy		6756476						
ANR	6757019	Symbol	wi . num_windows		6756476						
ANR	6757020	Symbol	* la		6756476						
ANR	6757021	Symbol	ONLY_LONG_SEQUENCE		6756476						
ANR	6757022	Symbol	switch_to_eight		6756476						
ANR	6757023	Symbol	lastgrp		6756476						
ANR	6757024	Symbol	* pch		6756476						
ANR	6757025	Symbol	LONG_STOP_SEQUENCE		6756476						
ANR	6757026	Symbol	ctx -> avctx -> bit_rate		6756476						
ANR	6757027	Symbol	pch -> next_window_seq		6756476						
ANR	6757028	Symbol	sum		6756476						
ANR	6757029	Symbol	* pctx		6756476						
ANR	6757030	Symbol	* wi . grouping		6756476						
ANR	6757031	Symbol	br		6756476						
ANR	6757032	Symbol	stay_short		6756476						
ANR	6757033	Symbol	attack_ratio		6756476						
ANR	6757034	Symbol	wi		6756476						
ANR	6757035	Symbol	LONG_START_SEQUENCE		6756476						
ANR	6757036	Symbol	pch		6756476						
ANR	6757037	Symbol	audio		6756476						
ANR	6757038	Symbol	* attack_n		6756476						
ANR	6757039	Symbol	* window_grouping		6756476						
ANR	6757040	Symbol	i		6756476						
ANR	6757041	Symbol	j		6756476						
ANR	6757042	Symbol	iir_filter		6756476						
ANR	6757043	Symbol	* ctx		6756476						
ANR	6757044	Symbol	ctx -> avctx -> channels		6756476						
ANR	6757045	Symbol	sum2		6756476						
ANR	6757046	Symbol	s		6756476						
ANR	6757047	Symbol	* i		6756476						
ANR	6757048	Symbol	* j		6756476						
ANR	6757049	Symbol	la		6756476						
ANR	6757050	Symbol	v		6756476						
ANR	6757051	Symbol	window_grouping		6756476						
ANR	6757052	Symbol	* * ctx		6756476						
ANR	6757053	Symbol	ctx -> model_priv_data		6756476						
ANR	6757054	Symbol	* s		6756476						
