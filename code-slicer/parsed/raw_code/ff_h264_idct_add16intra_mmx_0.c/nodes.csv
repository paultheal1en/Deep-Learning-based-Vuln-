command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3429024	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_idct_add16intra_mmx_0.c								
ANR	3429025	Function	ff_h264_idct_add16intra_mmx	1:0:0:304							
ANR	3429026	FunctionDef	"ff_h264_idct_add16intra_mmx (uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ])"		3429025	0					
ANR	3429027	CompoundStatement		1:131:131:304	3429025	0					
ANR	3429028	IdentifierDeclStatement	int i ;	3:4:138:143	3429025	0	True				
ANR	3429029	IdentifierDecl	i		3429025	0					
ANR	3429030	IdentifierDeclType	int		3429025	0					
ANR	3429031	Identifier	i		3429025	1					
ANR	3429032	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		3429025	1					
ANR	3429033	ForInit	i = 0 ;	5:8:154:157	3429025	0	True				
ANR	3429034	AssignmentExpression	i = 0		3429025	0		=			
ANR	3429035	Identifier	i		3429025	0					
ANR	3429036	PrimaryExpression	0		3429025	1					
ANR	3429037	Condition	i < 16	5:13:159:162	3429025	1	True				
ANR	3429038	RelationalExpression	i < 16		3429025	0		<			
ANR	3429039	Identifier	i		3429025	0					
ANR	3429040	PrimaryExpression	16		3429025	1					
ANR	3429041	PostIncDecOperationExpression	i ++	5:19:165:167	3429025	2	True				
ANR	3429042	Identifier	i		3429025	0					
ANR	3429043	IncDec	++		3429025	1					
ANR	3429044	CompoundStatement		5:23:37:37	3429025	3					
ANR	3429045	IfStatement	if ( nnzc [ scan8 [ i ] ] || block [ i * 16 ] )		3429025	0					
ANR	3429046	Condition	nnzc [ scan8 [ i ] ] || block [ i * 16 ]	7:11:183:213	3429025	0	True				
ANR	3429047	OrExpression	nnzc [ scan8 [ i ] ] || block [ i * 16 ]		3429025	0		||			
ANR	3429048	ArrayIndexing	nnzc [ scan8 [ i ] ]		3429025	0					
ANR	3429049	Identifier	nnzc		3429025	0					
ANR	3429050	ArrayIndexing	scan8 [ i ]		3429025	1					
ANR	3429051	Identifier	scan8		3429025	0					
ANR	3429052	Identifier	i		3429025	1					
ANR	3429053	ArrayIndexing	block [ i * 16 ]		3429025	1					
ANR	3429054	Identifier	block		3429025	0					
ANR	3429055	MultiplicativeExpression	i * 16		3429025	1		*			
ANR	3429056	Identifier	i		3429025	0					
ANR	3429057	PrimaryExpression	16		3429025	1					
ANR	3429058	ExpressionStatement	"ff_h264_idct_add_mmx ( dst + block_offset [ i ] , block + i * 16 , stride )"	9:12:229:294	3429025	1	True				
ANR	3429059	CallExpression	"ff_h264_idct_add_mmx ( dst + block_offset [ i ] , block + i * 16 , stride )"		3429025	0					
ANR	3429060	Callee	ff_h264_idct_add_mmx		3429025	0					
ANR	3429061	Identifier	ff_h264_idct_add_mmx		3429025	0					
ANR	3429062	ArgumentList	dst + block_offset [ i ]		3429025	1					
ANR	3429063	Argument	dst + block_offset [ i ]		3429025	0					
ANR	3429064	AdditiveExpression	dst + block_offset [ i ]		3429025	0		+			
ANR	3429065	Identifier	dst		3429025	0					
ANR	3429066	ArrayIndexing	block_offset [ i ]		3429025	1					
ANR	3429067	Identifier	block_offset		3429025	0					
ANR	3429068	Identifier	i		3429025	1					
ANR	3429069	Argument	block + i * 16		3429025	1					
ANR	3429070	AdditiveExpression	block + i * 16		3429025	0		+			
ANR	3429071	Identifier	block		3429025	0					
ANR	3429072	MultiplicativeExpression	i * 16		3429025	1		*			
ANR	3429073	Identifier	i		3429025	0					
ANR	3429074	PrimaryExpression	16		3429025	1					
ANR	3429075	Argument	stride		3429025	2					
ANR	3429076	Identifier	stride		3429025	0					
ANR	3429077	ReturnType	static void		3429025	1					
ANR	3429078	Identifier	ff_h264_idct_add16intra_mmx		3429025	2					
ANR	3429079	ParameterList	"uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ]"		3429025	3					
ANR	3429080	Parameter	uint8_t * dst	1:40:40:51	3429025	0	True				
ANR	3429081	ParameterType	uint8_t *		3429025	0					
ANR	3429082	Identifier	dst		3429025	1					
ANR	3429083	Parameter	const int * block_offset	1:54:54:76	3429025	1	True				
ANR	3429084	ParameterType	const int *		3429025	0					
ANR	3429085	Identifier	block_offset		3429025	1					
ANR	3429086	Parameter	DCTELEM * block	1:79:79:92	3429025	2	True				
ANR	3429087	ParameterType	DCTELEM *		3429025	0					
ANR	3429088	Identifier	block		3429025	1					
ANR	3429089	Parameter	int stride	1:95:95:104	3429025	3	True				
ANR	3429090	ParameterType	int		3429025	0					
ANR	3429091	Identifier	stride		3429025	1					
ANR	3429092	Parameter	const uint8_t nnzc [ 6 * 8 ]	1:107:107:129	3429025	4	True				
ANR	3429093	ParameterType	const uint8_t [ 6 * 8 ]		3429025	0					
ANR	3429094	Identifier	nnzc		3429025	1					
ANR	3429095	CFGEntryNode	ENTRY		3429025		True				
ANR	3429096	CFGExitNode	EXIT		3429025		True				
ANR	3429097	Symbol	* * i		3429025						
ANR	3429098	Symbol	dst		3429025						
ANR	3429099	Symbol	* scan8		3429025						
ANR	3429100	Symbol	i		3429025						
ANR	3429101	Symbol	stride		3429025						
ANR	3429102	Symbol	* * scan8		3429025						
ANR	3429103	Symbol	* block		3429025						
ANR	3429104	Symbol	* block_offset		3429025						
ANR	3429105	Symbol	* i		3429025						
ANR	3429106	Symbol	block_offset		3429025						
ANR	3429107	Symbol	scan8		3429025						
ANR	3429108	Symbol	block		3429025						
ANR	3429109	Symbol	nnzc		3429025						
ANR	3429110	Symbol	* nnzc		3429025						
