command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8574829	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tta_decode_frame_01_0.c								
ANR	8574830	Function	tta_decode_frame	1:0:0:4280							
ANR	8574831	FunctionDef	"tta_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		8574830	0					
ANR	8574832	CompoundStatement		7:0:115:4280	8574830	0					
ANR	8574833	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:122:154	8574830	0	True				
ANR	8574834	IdentifierDecl	* buf = avpkt -> data		8574830	0					
ANR	8574835	IdentifierDeclType	const uint8_t *		8574830	0					
ANR	8574836	Identifier	buf		8574830	1					
ANR	8574837	AssignmentExpression	* buf = avpkt -> data		8574830	2		=			
ANR	8574838	Identifier	buf		8574830	0					
ANR	8574839	PtrMemberAccess	avpkt -> data		8574830	1					
ANR	8574840	Identifier	avpkt		8574830	0					
ANR	8574841	Identifier	data		8574830	1					
ANR	8574842	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:161:187	8574830	1	True				
ANR	8574843	IdentifierDecl	buf_size = avpkt -> size		8574830	0					
ANR	8574844	IdentifierDeclType	int		8574830	0					
ANR	8574845	Identifier	buf_size		8574830	1					
ANR	8574846	AssignmentExpression	buf_size = avpkt -> size		8574830	2		=			
ANR	8574847	Identifier	buf_size		8574830	0					
ANR	8574848	PtrMemberAccess	avpkt -> size		8574830	1					
ANR	8574849	Identifier	avpkt		8574830	0					
ANR	8574850	Identifier	size		8574830	1					
ANR	8574851	IdentifierDeclStatement	TTAContext * s = avctx -> priv_data ;	13:4:194:226	8574830	2	True				
ANR	8574852	IdentifierDecl	* s = avctx -> priv_data		8574830	0					
ANR	8574853	IdentifierDeclType	TTAContext *		8574830	0					
ANR	8574854	Identifier	s		8574830	1					
ANR	8574855	AssignmentExpression	* s = avctx -> priv_data		8574830	2		=			
ANR	8574856	Identifier	s		8574830	0					
ANR	8574857	PtrMemberAccess	avctx -> priv_data		8574830	1					
ANR	8574858	Identifier	avctx		8574830	0					
ANR	8574859	Identifier	priv_data		8574830	1					
ANR	8574860	IdentifierDeclStatement	int i ;	15:4:233:238	8574830	3	True				
ANR	8574861	IdentifierDecl	i		8574830	0					
ANR	8574862	IdentifierDeclType	int		8574830	0					
ANR	8574863	Identifier	i		8574830	1					
ANR	8574864	ExpressionStatement	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"	19:4:247:285	8574830	4	True				
ANR	8574865	CallExpression	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"		8574830	0					
ANR	8574866	Callee	init_get_bits		8574830	0					
ANR	8574867	Identifier	init_get_bits		8574830	0					
ANR	8574868	ArgumentList	& s -> gb		8574830	1					
ANR	8574869	Argument	& s -> gb		8574830	0					
ANR	8574870	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8574871	UnaryOperator	&		8574830	0					
ANR	8574872	PtrMemberAccess	s -> gb		8574830	1					
ANR	8574873	Identifier	s		8574830	0					
ANR	8574874	Identifier	gb		8574830	1					
ANR	8574875	Argument	buf		8574830	1					
ANR	8574876	Identifier	buf		8574830	0					
ANR	8574877	Argument	buf_size * 8		8574830	2					
ANR	8574878	MultiplicativeExpression	buf_size * 8		8574830	0		*			
ANR	8574879	Identifier	buf_size		8574830	0					
ANR	8574880	PrimaryExpression	8		8574830	1					
ANR	8574881	CompoundStatement		19:8:242:252	8574830	5					
ANR	8574882	IdentifierDeclStatement	"int cur_chan = 0 , framelen = s -> frame_length ;"	23:8:303:347	8574830	0	True				
ANR	8574883	IdentifierDecl	cur_chan = 0		8574830	0					
ANR	8574884	IdentifierDeclType	int		8574830	0					
ANR	8574885	Identifier	cur_chan		8574830	1					
ANR	8574886	AssignmentExpression	cur_chan = 0		8574830	2		=			
ANR	8574887	Identifier	cur_chan		8574830	0					
ANR	8574888	PrimaryExpression	0		8574830	1					
ANR	8574889	IdentifierDecl	framelen = s -> frame_length		8574830	1					
ANR	8574890	IdentifierDeclType	int		8574830	0					
ANR	8574891	Identifier	framelen		8574830	1					
ANR	8574892	AssignmentExpression	framelen = s -> frame_length		8574830	2		=			
ANR	8574893	Identifier	framelen		8574830	0					
ANR	8574894	PtrMemberAccess	s -> frame_length		8574830	1					
ANR	8574895	Identifier	s		8574830	0					
ANR	8574896	Identifier	frame_length		8574830	1					
ANR	8574897	IdentifierDeclStatement	int32_t * p ;	25:8:358:368	8574830	1	True				
ANR	8574898	IdentifierDecl	* p		8574830	0					
ANR	8574899	IdentifierDeclType	int32_t *		8574830	0					
ANR	8574900	Identifier	p		8574830	1					
ANR	8574901	IfStatement	if ( * data_size < ( framelen * s -> channels * 2 ) )		8574830	2					
ANR	8574902	Condition	* data_size < ( framelen * s -> channels * 2 )	29:12:385:425	8574830	0	True				
ANR	8574903	RelationalExpression	* data_size < ( framelen * s -> channels * 2 )		8574830	0		<			
ANR	8574904	UnaryOperationExpression	* data_size		8574830	0					
ANR	8574905	UnaryOperator	*		8574830	0					
ANR	8574906	Identifier	data_size		8574830	1					
ANR	8574907	MultiplicativeExpression	framelen * s -> channels * 2		8574830	1		*			
ANR	8574908	Identifier	framelen		8574830	0					
ANR	8574909	MultiplicativeExpression	s -> channels * 2		8574830	1		*			
ANR	8574910	PtrMemberAccess	s -> channels		8574830	0					
ANR	8574911	Identifier	s		8574830	0					
ANR	8574912	Identifier	channels		8574830	1					
ANR	8574913	PrimaryExpression	2		8574830	1					
ANR	8574914	CompoundStatement		23:55:312:312	8574830	1					
ANR	8574915	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Output buffer size is too small.\\n"" )"	31:12:443:508	8574830	0	True				
ANR	8574916	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Output buffer size is too small.\\n"" )"		8574830	0					
ANR	8574917	Callee	av_log		8574830	0					
ANR	8574918	Identifier	av_log		8574830	0					
ANR	8574919	ArgumentList	avctx		8574830	1					
ANR	8574920	Argument	avctx		8574830	0					
ANR	8574921	Identifier	avctx		8574830	0					
ANR	8574922	Argument	AV_LOG_ERROR		8574830	1					
ANR	8574923	Identifier	AV_LOG_ERROR		8574830	0					
ANR	8574924	Argument	"""Output buffer size is too small.\\n"""		8574830	2					
ANR	8574925	PrimaryExpression	"""Output buffer size is too small.\\n"""		8574830	0					
ANR	8574926	ReturnStatement	return - 1 ;	33:12:523:532	8574830	1	True				
ANR	8574927	UnaryOperationExpression	- 1		8574830	0					
ANR	8574928	UnaryOperator	-		8574830	0					
ANR	8574929	PrimaryExpression	1		8574830	1					
ANR	8574930	ExpressionStatement	s -> total_frames --	39:8:581:598	8574830	3	True				
ANR	8574931	PostIncDecOperationExpression	s -> total_frames --		8574830	0					
ANR	8574932	PtrMemberAccess	s -> total_frames		8574830	0					
ANR	8574933	Identifier	s		8574830	0					
ANR	8574934	Identifier	total_frames		8574830	1					
ANR	8574935	IncDec	--		8574830	1					
ANR	8574936	IfStatement	if ( ! s -> total_frames && s -> last_frame_length )		8574830	4					
ANR	8574937	Condition	! s -> total_frames && s -> last_frame_length	41:12:613:652	8574830	0	True				
ANR	8574938	AndExpression	! s -> total_frames && s -> last_frame_length		8574830	0		&&			
ANR	8574939	UnaryOperationExpression	! s -> total_frames		8574830	0					
ANR	8574940	UnaryOperator	!		8574830	0					
ANR	8574941	PtrMemberAccess	s -> total_frames		8574830	1					
ANR	8574942	Identifier	s		8574830	0					
ANR	8574943	Identifier	total_frames		8574830	1					
ANR	8574944	PtrMemberAccess	s -> last_frame_length		8574830	1					
ANR	8574945	Identifier	s		8574830	0					
ANR	8574946	Identifier	last_frame_length		8574830	1					
ANR	8574947	ExpressionStatement	framelen = s -> last_frame_length	43:12:668:699	8574830	1	True				
ANR	8574948	AssignmentExpression	framelen = s -> last_frame_length		8574830	0		=			
ANR	8574949	Identifier	framelen		8574830	0					
ANR	8574950	PtrMemberAccess	s -> last_frame_length		8574830	1					
ANR	8574951	Identifier	s		8574830	0					
ANR	8574952	Identifier	last_frame_length		8574830	1					
ANR	8574953	ForStatement	for ( i = 0 ; i < s -> channels ; i ++ )		8574830	5					
ANR	8574954	ForInit	i = 0 ;	49:13:753:758	8574830	0	True				
ANR	8574955	AssignmentExpression	i = 0		8574830	0		=			
ANR	8574956	Identifier	i		8574830	0					
ANR	8574957	PrimaryExpression	0		8574830	1					
ANR	8574958	Condition	i < s -> channels	49:20:760:774	8574830	1	True				
ANR	8574959	RelationalExpression	i < s -> channels		8574830	0		<			
ANR	8574960	Identifier	i		8574830	0					
ANR	8574961	PtrMemberAccess	s -> channels		8574830	1					
ANR	8574962	Identifier	s		8574830	0					
ANR	8574963	Identifier	channels		8574830	1					
ANR	8574964	PostIncDecOperationExpression	i ++	49:37:777:779	8574830	2	True				
ANR	8574965	Identifier	i		8574830	0					
ANR	8574966	IncDec	++		8574830	1					
ANR	8574967	CompoundStatement		43:42:666:666	8574830	3					
ANR	8574968	ExpressionStatement	s -> ch_ctx [ i ] . predictor = 0	51:12:797:823	8574830	0	True				
ANR	8574969	AssignmentExpression	s -> ch_ctx [ i ] . predictor = 0		8574830	0		=			
ANR	8574970	MemberAccess	s -> ch_ctx [ i ] . predictor		8574830	0					
ANR	8574971	ArrayIndexing	s -> ch_ctx [ i ]		8574830	0					
ANR	8574972	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8574973	Identifier	s		8574830	0					
ANR	8574974	Identifier	ch_ctx		8574830	1					
ANR	8574975	Identifier	i		8574830	1					
ANR	8574976	Identifier	predictor		8574830	1					
ANR	8574977	PrimaryExpression	0		8574830	1					
ANR	8574978	ExpressionStatement	"ttafilter_init ( & s -> ch_ctx [ i ] . filter , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"	53:12:838:938	8574830	1	True				
ANR	8574979	CallExpression	"ttafilter_init ( & s -> ch_ctx [ i ] . filter , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"		8574830	0					
ANR	8574980	Callee	ttafilter_init		8574830	0					
ANR	8574981	Identifier	ttafilter_init		8574830	0					
ANR	8574982	ArgumentList	& s -> ch_ctx [ i ] . filter		8574830	1					
ANR	8574983	Argument	& s -> ch_ctx [ i ] . filter		8574830	0					
ANR	8574984	UnaryOperationExpression	& s -> ch_ctx [ i ] . filter		8574830	0					
ANR	8574985	UnaryOperator	&		8574830	0					
ANR	8574986	MemberAccess	s -> ch_ctx [ i ] . filter		8574830	1					
ANR	8574987	ArrayIndexing	s -> ch_ctx [ i ]		8574830	0					
ANR	8574988	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8574989	Identifier	s		8574830	0					
ANR	8574990	Identifier	ch_ctx		8574830	1					
ANR	8574991	Identifier	i		8574830	1					
ANR	8574992	Identifier	filter		8574830	1					
ANR	8574993	Argument	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8574830	1					
ANR	8574994	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8574830	0					
ANR	8574995	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8574830	0					
ANR	8574996	Identifier	ttafilter_configs		8574830	0					
ANR	8574997	AdditiveExpression	s -> bps - 1		8574830	1		-			
ANR	8574998	PtrMemberAccess	s -> bps		8574830	0					
ANR	8574999	Identifier	s		8574830	0					
ANR	8575000	Identifier	bps		8574830	1					
ANR	8575001	PrimaryExpression	1		8574830	1					
ANR	8575002	PrimaryExpression	0		8574830	1					
ANR	8575003	Argument	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8574830	2					
ANR	8575004	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8574830	0					
ANR	8575005	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8574830	0					
ANR	8575006	Identifier	ttafilter_configs		8574830	0					
ANR	8575007	AdditiveExpression	s -> bps - 1		8574830	1		-			
ANR	8575008	PtrMemberAccess	s -> bps		8574830	0					
ANR	8575009	Identifier	s		8574830	0					
ANR	8575010	Identifier	bps		8574830	1					
ANR	8575011	PrimaryExpression	1		8574830	1					
ANR	8575012	PrimaryExpression	1		8574830	1					
ANR	8575013	ExpressionStatement	"rice_init ( & s -> ch_ctx [ i ] . rice , 10 , 10 )"	55:12:953:990	8574830	2	True				
ANR	8575014	CallExpression	"rice_init ( & s -> ch_ctx [ i ] . rice , 10 , 10 )"		8574830	0					
ANR	8575015	Callee	rice_init		8574830	0					
ANR	8575016	Identifier	rice_init		8574830	0					
ANR	8575017	ArgumentList	& s -> ch_ctx [ i ] . rice		8574830	1					
ANR	8575018	Argument	& s -> ch_ctx [ i ] . rice		8574830	0					
ANR	8575019	UnaryOperationExpression	& s -> ch_ctx [ i ] . rice		8574830	0					
ANR	8575020	UnaryOperator	&		8574830	0					
ANR	8575021	MemberAccess	s -> ch_ctx [ i ] . rice		8574830	1					
ANR	8575022	ArrayIndexing	s -> ch_ctx [ i ]		8574830	0					
ANR	8575023	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8575024	Identifier	s		8574830	0					
ANR	8575025	Identifier	ch_ctx		8574830	1					
ANR	8575026	Identifier	i		8574830	1					
ANR	8575027	Identifier	rice		8574830	1					
ANR	8575028	Argument	10		8574830	1					
ANR	8575029	PrimaryExpression	10		8574830	0					
ANR	8575030	Argument	10		8574830	2					
ANR	8575031	PrimaryExpression	10		8574830	0					
ANR	8575032	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8574830	6					
ANR	8575033	ForInit	p = s -> decode_buffer ;	61:13:1019:1039	8574830	0	True				
ANR	8575034	AssignmentExpression	p = s -> decode_buffer		8574830	0		=			
ANR	8575035	Identifier	p		8574830	0					
ANR	8575036	PtrMemberAccess	s -> decode_buffer		8574830	1					
ANR	8575037	Identifier	s		8574830	0					
ANR	8575038	Identifier	decode_buffer		8574830	1					
ANR	8575039	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	61:35:1041:1087	8574830	1	True				
ANR	8575040	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8574830	0		<			
ANR	8575041	Identifier	p		8574830	0					
ANR	8575042	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8574830	1		+			
ANR	8575043	PtrMemberAccess	s -> decode_buffer		8574830	0					
ANR	8575044	Identifier	s		8574830	0					
ANR	8575045	Identifier	decode_buffer		8574830	1					
ANR	8575046	MultiplicativeExpression	framelen * s -> channels		8574830	1		*			
ANR	8575047	Identifier	framelen		8574830	0					
ANR	8575048	PtrMemberAccess	s -> channels		8574830	1					
ANR	8575049	Identifier	s		8574830	0					
ANR	8575050	Identifier	channels		8574830	1					
ANR	8575051	PostIncDecOperationExpression	p ++	61:84:1090:1092	8574830	2	True				
ANR	8575052	Identifier	p		8574830	0					
ANR	8575053	IncDec	++		8574830	1					
ANR	8575054	CompoundStatement		65:12:1217:1230	8574830	3					
ANR	8575055	IdentifierDeclStatement	int32_t * predictor = & s -> ch_ctx [ cur_chan ] . predictor ;	63:12:1110:1161	8574830	0	True				
ANR	8575056	IdentifierDecl	* predictor = & s -> ch_ctx [ cur_chan ] . predictor		8574830	0					
ANR	8575057	IdentifierDeclType	int32_t *		8574830	0					
ANR	8575058	Identifier	predictor		8574830	1					
ANR	8575059	AssignmentExpression	* predictor = & s -> ch_ctx [ cur_chan ] . predictor		8574830	2		=			
ANR	8575060	Identifier	predictor		8574830	0					
ANR	8575061	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . predictor		8574830	1					
ANR	8575062	UnaryOperator	&		8574830	0					
ANR	8575063	MemberAccess	s -> ch_ctx [ cur_chan ] . predictor		8574830	1					
ANR	8575064	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8574830	0					
ANR	8575065	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8575066	Identifier	s		8574830	0					
ANR	8575067	Identifier	ch_ctx		8574830	1					
ANR	8575068	Identifier	cur_chan		8574830	1					
ANR	8575069	Identifier	predictor		8574830	1					
ANR	8575070	IdentifierDeclStatement	TTAFilter * filter = & s -> ch_ctx [ cur_chan ] . filter ;	65:12:1176:1223	8574830	1	True				
ANR	8575071	IdentifierDecl	* filter = & s -> ch_ctx [ cur_chan ] . filter		8574830	0					
ANR	8575072	IdentifierDeclType	TTAFilter *		8574830	0					
ANR	8575073	Identifier	filter		8574830	1					
ANR	8575074	AssignmentExpression	* filter = & s -> ch_ctx [ cur_chan ] . filter		8574830	2		=			
ANR	8575075	Identifier	filter		8574830	0					
ANR	8575076	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . filter		8574830	1					
ANR	8575077	UnaryOperator	&		8574830	0					
ANR	8575078	MemberAccess	s -> ch_ctx [ cur_chan ] . filter		8574830	1					
ANR	8575079	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8574830	0					
ANR	8575080	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8575081	Identifier	s		8574830	0					
ANR	8575082	Identifier	ch_ctx		8574830	1					
ANR	8575083	Identifier	cur_chan		8574830	1					
ANR	8575084	Identifier	filter		8574830	1					
ANR	8575085	IdentifierDeclStatement	TTARice * rice = & s -> ch_ctx [ cur_chan ] . rice ;	67:12:1238:1279	8574830	2	True				
ANR	8575086	IdentifierDecl	* rice = & s -> ch_ctx [ cur_chan ] . rice		8574830	0					
ANR	8575087	IdentifierDeclType	TTARice *		8574830	0					
ANR	8575088	Identifier	rice		8574830	1					
ANR	8575089	AssignmentExpression	* rice = & s -> ch_ctx [ cur_chan ] . rice		8574830	2		=			
ANR	8575090	Identifier	rice		8574830	0					
ANR	8575091	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . rice		8574830	1					
ANR	8575092	UnaryOperator	&		8574830	0					
ANR	8575093	MemberAccess	s -> ch_ctx [ cur_chan ] . rice		8574830	1					
ANR	8575094	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8574830	0					
ANR	8575095	PtrMemberAccess	s -> ch_ctx		8574830	0					
ANR	8575096	Identifier	s		8574830	0					
ANR	8575097	Identifier	ch_ctx		8574830	1					
ANR	8575098	Identifier	cur_chan		8574830	1					
ANR	8575099	Identifier	rice		8574830	1					
ANR	8575100	IdentifierDeclStatement	"uint32_t unary , depth , k ;"	69:12:1294:1318	8574830	3	True				
ANR	8575101	IdentifierDecl	unary		8574830	0					
ANR	8575102	IdentifierDeclType	uint32_t		8574830	0					
ANR	8575103	Identifier	unary		8574830	1					
ANR	8575104	IdentifierDecl	depth		8574830	1					
ANR	8575105	IdentifierDeclType	uint32_t		8574830	0					
ANR	8575106	Identifier	depth		8574830	1					
ANR	8575107	IdentifierDecl	k		8574830	2					
ANR	8575108	IdentifierDeclType	uint32_t		8574830	0					
ANR	8575109	Identifier	k		8574830	1					
ANR	8575110	IdentifierDeclStatement	int32_t value ;	71:12:1333:1346	8574830	4	True				
ANR	8575111	IdentifierDecl	value		8574830	0					
ANR	8575112	IdentifierDeclType	int32_t		8574830	0					
ANR	8575113	Identifier	value		8574830	1					
ANR	8575114	ExpressionStatement	unary = tta_get_unary ( & s -> gb )	75:12:1363:1392	8574830	5	True				
ANR	8575115	AssignmentExpression	unary = tta_get_unary ( & s -> gb )		8574830	0		=			
ANR	8575116	Identifier	unary		8574830	0					
ANR	8575117	CallExpression	tta_get_unary ( & s -> gb )		8574830	1					
ANR	8575118	Callee	tta_get_unary		8574830	0					
ANR	8575119	Identifier	tta_get_unary		8574830	0					
ANR	8575120	ArgumentList	& s -> gb		8574830	1					
ANR	8575121	Argument	& s -> gb		8574830	0					
ANR	8575122	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8575123	UnaryOperator	&		8574830	0					
ANR	8575124	PtrMemberAccess	s -> gb		8574830	1					
ANR	8575125	Identifier	s		8574830	0					
ANR	8575126	Identifier	gb		8574830	1					
ANR	8575127	IfStatement	if ( unary == 0 )		8574830	6					
ANR	8575128	Condition	unary == 0	79:16:1413:1422	8574830	0	True				
ANR	8575129	EqualityExpression	unary == 0		8574830	0		==			
ANR	8575130	Identifier	unary		8574830	0					
ANR	8575131	PrimaryExpression	0		8574830	1					
ANR	8575132	CompoundStatement		73:28:1309:1309	8574830	1					
ANR	8575133	ExpressionStatement	depth = 0	81:16:1444:1453	8574830	0	True				
ANR	8575134	AssignmentExpression	depth = 0		8574830	0		=			
ANR	8575135	Identifier	depth		8574830	0					
ANR	8575136	PrimaryExpression	0		8574830	1					
ANR	8575137	ExpressionStatement	k = rice -> k0	83:16:1472:1484	8574830	1	True				
ANR	8575138	AssignmentExpression	k = rice -> k0		8574830	0		=			
ANR	8575139	Identifier	k		8574830	0					
ANR	8575140	PtrMemberAccess	rice -> k0		8574830	1					
ANR	8575141	Identifier	rice		8574830	0					
ANR	8575142	Identifier	k0		8574830	1					
ANR	8575143	ElseStatement	else		8574830	0					
ANR	8575144	CompoundStatement		79:19:1390:1390	8574830	0					
ANR	8575145	ExpressionStatement	depth = 1	87:16:1525:1534	8574830	0	True				
ANR	8575146	AssignmentExpression	depth = 1		8574830	0		=			
ANR	8575147	Identifier	depth		8574830	0					
ANR	8575148	PrimaryExpression	1		8574830	1					
ANR	8575149	ExpressionStatement	k = rice -> k1	89:16:1553:1565	8574830	1	True				
ANR	8575150	AssignmentExpression	k = rice -> k1		8574830	0		=			
ANR	8575151	Identifier	k		8574830	0					
ANR	8575152	PtrMemberAccess	rice -> k1		8574830	1					
ANR	8575153	Identifier	rice		8574830	0					
ANR	8575154	Identifier	k1		8574830	1					
ANR	8575155	ExpressionStatement	unary --	91:16:1584:1591	8574830	2	True				
ANR	8575156	PostIncDecOperationExpression	unary --		8574830	0					
ANR	8575157	Identifier	unary		8574830	0					
ANR	8575158	IncDec	--		8574830	1					
ANR	8575159	IfStatement	if ( get_bits_left ( & s -> gb ) < k )		8574830	7					
ANR	8575160	Condition	get_bits_left ( & s -> gb ) < k	97:16:1627:1651	8574830	0	True				
ANR	8575161	RelationalExpression	get_bits_left ( & s -> gb ) < k		8574830	0		<			
ANR	8575162	CallExpression	get_bits_left ( & s -> gb )		8574830	0					
ANR	8575163	Callee	get_bits_left		8574830	0					
ANR	8575164	Identifier	get_bits_left		8574830	0					
ANR	8575165	ArgumentList	& s -> gb		8574830	1					
ANR	8575166	Argument	& s -> gb		8574830	0					
ANR	8575167	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8575168	UnaryOperator	&		8574830	0					
ANR	8575169	PtrMemberAccess	s -> gb		8574830	1					
ANR	8575170	Identifier	s		8574830	0					
ANR	8575171	Identifier	gb		8574830	1					
ANR	8575172	Identifier	k		8574830	1					
ANR	8575173	ReturnStatement	return - 1 ;	99:16:1671:1680	8574830	1	True				
ANR	8575174	UnaryOperationExpression	- 1		8574830	0					
ANR	8575175	UnaryOperator	-		8574830	0					
ANR	8575176	PrimaryExpression	1		8574830	1					
ANR	8575177	IfStatement	if ( k )		8574830	8					
ANR	8575178	Condition	k	103:16:1701:1701	8574830	0	True				
ANR	8575179	Identifier	k		8574830	0					
ANR	8575180	CompoundStatement		97:19:1588:1588	8574830	1					
ANR	8575181	IfStatement	if ( k > MIN_CACHE_BITS )		8574830	0					
ANR	8575182	Condition	k > MIN_CACHE_BITS	105:20:1727:1744	8574830	0	True				
ANR	8575183	RelationalExpression	k > MIN_CACHE_BITS		8574830	0		>			
ANR	8575184	Identifier	k		8574830	0					
ANR	8575185	Identifier	MIN_CACHE_BITS		8574830	1					
ANR	8575186	ReturnStatement	return - 1 ;	107:20:1768:1777	8574830	1	True				
ANR	8575187	UnaryOperationExpression	- 1		8574830	0					
ANR	8575188	UnaryOperator	-		8574830	0					
ANR	8575189	PrimaryExpression	1		8574830	1					
ANR	8575190	ExpressionStatement	"value = ( unary << k ) + get_bits ( & s -> gb , k )"	109:16:1796:1838	8574830	1	True				
ANR	8575191	AssignmentExpression	"value = ( unary << k ) + get_bits ( & s -> gb , k )"		8574830	0		=			
ANR	8575192	Identifier	value		8574830	0					
ANR	8575193	AdditiveExpression	"( unary << k ) + get_bits ( & s -> gb , k )"		8574830	1		+			
ANR	8575194	ShiftExpression	unary << k		8574830	0		<<			
ANR	8575195	Identifier	unary		8574830	0					
ANR	8575196	Identifier	k		8574830	1					
ANR	8575197	CallExpression	"get_bits ( & s -> gb , k )"		8574830	1					
ANR	8575198	Callee	get_bits		8574830	0					
ANR	8575199	Identifier	get_bits		8574830	0					
ANR	8575200	ArgumentList	& s -> gb		8574830	1					
ANR	8575201	Argument	& s -> gb		8574830	0					
ANR	8575202	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8575203	UnaryOperator	&		8574830	0					
ANR	8575204	PtrMemberAccess	s -> gb		8574830	1					
ANR	8575205	Identifier	s		8574830	0					
ANR	8575206	Identifier	gb		8574830	1					
ANR	8575207	Argument	k		8574830	1					
ANR	8575208	Identifier	k		8574830	0					
ANR	8575209	ElseStatement	else		8574830	0					
ANR	8575210	ExpressionStatement	value = unary	113:16:1877:1890	8574830	0	True				
ANR	8575211	AssignmentExpression	value = unary		8574830	0		=			
ANR	8575212	Identifier	value		8574830	0					
ANR	8575213	Identifier	unary		8574830	1					
ANR	8575214	SwitchStatement	switch ( depth )		8574830	9					
ANR	8575215	Condition	depth	119:20:1963:1967	8574830	0	True				
ANR	8575216	Identifier	depth		8574830	0					
ANR	8575217	CompoundStatement		113:27:1854:1854	8574830	1					
ANR	8575218	Label	case 1 :	121:12:1985:1991	8574830	0	True				
ANR	8575219	ExpressionStatement	rice -> sum1 += value - ( rice -> sum1 >> 4 )	123:16:2010:2049	8574830	1	True				
ANR	8575220	AssignmentExpression	rice -> sum1 += value - ( rice -> sum1 >> 4 )		8574830	0		+=			
ANR	8575221	PtrMemberAccess	rice -> sum1		8574830	0					
ANR	8575222	Identifier	rice		8574830	0					
ANR	8575223	Identifier	sum1		8574830	1					
ANR	8575224	AdditiveExpression	value - ( rice -> sum1 >> 4 )		8574830	1		-			
ANR	8575225	Identifier	value		8574830	0					
ANR	8575226	ShiftExpression	rice -> sum1 >> 4		8574830	1		>>			
ANR	8575227	PtrMemberAccess	rice -> sum1		8574830	0					
ANR	8575228	Identifier	rice		8574830	0					
ANR	8575229	Identifier	sum1		8574830	1					
ANR	8575230	PrimaryExpression	4		8574830	1					
ANR	8575231	IfStatement	if ( rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ] )		8574830	2					
ANR	8575232	Condition	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]	125:20:2072:2118	8574830	0	True				
ANR	8575233	AndExpression	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]		8574830	0		&&			
ANR	8575234	RelationalExpression	rice -> k1 > 0		8574830	0		>			
ANR	8575235	PtrMemberAccess	rice -> k1		8574830	0					
ANR	8575236	Identifier	rice		8574830	0					
ANR	8575237	Identifier	k1		8574830	1					
ANR	8575238	PrimaryExpression	0		8574830	1					
ANR	8575239	RelationalExpression	rice -> sum1 < shift_16 [ rice -> k1 ]		8574830	1		<			
ANR	8575240	PtrMemberAccess	rice -> sum1		8574830	0					
ANR	8575241	Identifier	rice		8574830	0					
ANR	8575242	Identifier	sum1		8574830	1					
ANR	8575243	ArrayIndexing	shift_16 [ rice -> k1 ]		8574830	1					
ANR	8575244	Identifier	shift_16		8574830	0					
ANR	8575245	PtrMemberAccess	rice -> k1		8574830	1					
ANR	8575246	Identifier	rice		8574830	0					
ANR	8575247	Identifier	k1		8574830	1					
ANR	8575248	ExpressionStatement	rice -> k1 --	127:20:2142:2152	8574830	1	True				
ANR	8575249	PostIncDecOperationExpression	rice -> k1 --		8574830	0					
ANR	8575250	PtrMemberAccess	rice -> k1		8574830	0					
ANR	8575251	Identifier	rice		8574830	0					
ANR	8575252	Identifier	k1		8574830	1					
ANR	8575253	IncDec	--		8574830	1					
ANR	8575254	ElseStatement	else		8574830	0					
ANR	8575255	IfStatement	if ( rice -> sum1 > shift_16 [ rice -> k1 + 1 ] )		8574830	0					
ANR	8575256	Condition	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]	129:24:2179:2213	8574830	0	True				
ANR	8575257	RelationalExpression	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]		8574830	0		>			
ANR	8575258	PtrMemberAccess	rice -> sum1		8574830	0					
ANR	8575259	Identifier	rice		8574830	0					
ANR	8575260	Identifier	sum1		8574830	1					
ANR	8575261	ArrayIndexing	shift_16 [ rice -> k1 + 1 ]		8574830	1					
ANR	8575262	Identifier	shift_16		8574830	0					
ANR	8575263	AdditiveExpression	rice -> k1 + 1		8574830	1		+			
ANR	8575264	PtrMemberAccess	rice -> k1		8574830	0					
ANR	8575265	Identifier	rice		8574830	0					
ANR	8575266	Identifier	k1		8574830	1					
ANR	8575267	PrimaryExpression	1		8574830	1					
ANR	8575268	ExpressionStatement	rice -> k1 ++	131:20:2237:2247	8574830	1	True				
ANR	8575269	PostIncDecOperationExpression	rice -> k1 ++		8574830	0					
ANR	8575270	PtrMemberAccess	rice -> k1		8574830	0					
ANR	8575271	Identifier	rice		8574830	0					
ANR	8575272	Identifier	k1		8574830	1					
ANR	8575273	IncDec	++		8574830	1					
ANR	8575274	ExpressionStatement	value += shift_1 [ rice -> k0 ]	133:16:2266:2292	8574830	3	True				
ANR	8575275	AssignmentExpression	value += shift_1 [ rice -> k0 ]		8574830	0		+=			
ANR	8575276	Identifier	value		8574830	0					
ANR	8575277	ArrayIndexing	shift_1 [ rice -> k0 ]		8574830	1					
ANR	8575278	Identifier	shift_1		8574830	0					
ANR	8575279	PtrMemberAccess	rice -> k0		8574830	1					
ANR	8575280	Identifier	rice		8574830	0					
ANR	8575281	Identifier	k0		8574830	1					
ANR	8575282	Label	default :	135:12:2307:2314	8574830	4	True				
ANR	8575283	Identifier	default		8574830	0					
ANR	8575284	ExpressionStatement	rice -> sum0 += value - ( rice -> sum0 >> 4 )	137:16:2333:2372	8574830	5	True				
ANR	8575285	AssignmentExpression	rice -> sum0 += value - ( rice -> sum0 >> 4 )		8574830	0		+=			
ANR	8575286	PtrMemberAccess	rice -> sum0		8574830	0					
ANR	8575287	Identifier	rice		8574830	0					
ANR	8575288	Identifier	sum0		8574830	1					
ANR	8575289	AdditiveExpression	value - ( rice -> sum0 >> 4 )		8574830	1		-			
ANR	8575290	Identifier	value		8574830	0					
ANR	8575291	ShiftExpression	rice -> sum0 >> 4		8574830	1		>>			
ANR	8575292	PtrMemberAccess	rice -> sum0		8574830	0					
ANR	8575293	Identifier	rice		8574830	0					
ANR	8575294	Identifier	sum0		8574830	1					
ANR	8575295	PrimaryExpression	4		8574830	1					
ANR	8575296	IfStatement	if ( rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ] )		8574830	6					
ANR	8575297	Condition	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]	139:20:2395:2441	8574830	0	True				
ANR	8575298	AndExpression	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]		8574830	0		&&			
ANR	8575299	RelationalExpression	rice -> k0 > 0		8574830	0		>			
ANR	8575300	PtrMemberAccess	rice -> k0		8574830	0					
ANR	8575301	Identifier	rice		8574830	0					
ANR	8575302	Identifier	k0		8574830	1					
ANR	8575303	PrimaryExpression	0		8574830	1					
ANR	8575304	RelationalExpression	rice -> sum0 < shift_16 [ rice -> k0 ]		8574830	1		<			
ANR	8575305	PtrMemberAccess	rice -> sum0		8574830	0					
ANR	8575306	Identifier	rice		8574830	0					
ANR	8575307	Identifier	sum0		8574830	1					
ANR	8575308	ArrayIndexing	shift_16 [ rice -> k0 ]		8574830	1					
ANR	8575309	Identifier	shift_16		8574830	0					
ANR	8575310	PtrMemberAccess	rice -> k0		8574830	1					
ANR	8575311	Identifier	rice		8574830	0					
ANR	8575312	Identifier	k0		8574830	1					
ANR	8575313	ExpressionStatement	rice -> k0 --	141:20:2465:2475	8574830	1	True				
ANR	8575314	PostIncDecOperationExpression	rice -> k0 --		8574830	0					
ANR	8575315	PtrMemberAccess	rice -> k0		8574830	0					
ANR	8575316	Identifier	rice		8574830	0					
ANR	8575317	Identifier	k0		8574830	1					
ANR	8575318	IncDec	--		8574830	1					
ANR	8575319	ElseStatement	else		8574830	0					
ANR	8575320	IfStatement	if ( rice -> sum0 > shift_16 [ rice -> k0 + 1 ] )		8574830	0					
ANR	8575321	Condition	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]	143:24:2502:2536	8574830	0	True				
ANR	8575322	RelationalExpression	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]		8574830	0		>			
ANR	8575323	PtrMemberAccess	rice -> sum0		8574830	0					
ANR	8575324	Identifier	rice		8574830	0					
ANR	8575325	Identifier	sum0		8574830	1					
ANR	8575326	ArrayIndexing	shift_16 [ rice -> k0 + 1 ]		8574830	1					
ANR	8575327	Identifier	shift_16		8574830	0					
ANR	8575328	AdditiveExpression	rice -> k0 + 1		8574830	1		+			
ANR	8575329	PtrMemberAccess	rice -> k0		8574830	0					
ANR	8575330	Identifier	rice		8574830	0					
ANR	8575331	Identifier	k0		8574830	1					
ANR	8575332	PrimaryExpression	1		8574830	1					
ANR	8575333	ExpressionStatement	rice -> k0 ++	145:20:2560:2570	8574830	1	True				
ANR	8575334	PostIncDecOperationExpression	rice -> k0 ++		8574830	0					
ANR	8575335	PtrMemberAccess	rice -> k0		8574830	0					
ANR	8575336	Identifier	rice		8574830	0					
ANR	8575337	Identifier	k0		8574830	1					
ANR	8575338	IncDec	++		8574830	1					
ANR	8575339	Statement	define	153:1:2627:2632	8574830	10	True				
ANR	8575340	ExpressionStatement	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )	153:8:2634:2710	8574830	11	True				
ANR	8575341	AssignmentExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )		8574830	0		=			
ANR	8575342	MultiplicativeExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p		8574830	0		*			
ANR	8575343	CallExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) )		8574830	0					
ANR	8575344	Callee	UNFOLD ( x )		8574830	0					
ANR	8575345	CallExpression	UNFOLD ( x )		8574830	0					
ANR	8575346	Callee	UNFOLD		8574830	0					
ANR	8575347	Identifier	UNFOLD		8574830	0					
ANR	8575348	ArgumentList	x		8574830	1					
ANR	8575349	Argument	x		8574830	0					
ANR	8575350	Identifier	x		8574830	0					
ANR	8575351	ArgumentList	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8574830	1					
ANR	8575352	Argument	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8574830	0					
ANR	8575353	ConditionalExpression	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8574830	0					
ANR	8575354	Condition	( x ) & 1		8574830	0					
ANR	8575355	CastExpression	( x ) & 1		8574830	0					
ANR	8575356	CastTarget	x		8574830	0					
ANR	8575357	UnaryOperationExpression	& 1		8574830	1					
ANR	8575358	UnaryOperator	&		8574830	0					
ANR	8575359	PrimaryExpression	1		8574830	1					
ANR	8575360	ShiftExpression	++ ( x ) >> 1		8574830	1		>>			
ANR	8575361	UnaryExpression	++ ( x )		8574830	0					
ANR	8575362	IncDec	++		8574830	0					
ANR	8575363	Identifier	x		8574830	1					
ANR	8575364	PrimaryExpression	1		8574830	1					
ANR	8575365	ShiftExpression	- ( x ) >> 1		8574830	2		>>			
ANR	8575366	UnaryOperationExpression	- ( x )		8574830	0					
ANR	8575367	UnaryOperator	-		8574830	0					
ANR	8575368	Identifier	x		8574830	1					
ANR	8575369	PrimaryExpression	1		8574830	1					
ANR	8575370	Identifier	p		8574830	1					
ANR	8575371	CallExpression	UNFOLD ( value )		8574830	1					
ANR	8575372	Callee	UNFOLD		8574830	0					
ANR	8575373	Identifier	UNFOLD		8574830	0					
ANR	8575374	ArgumentList	value		8574830	1					
ANR	8575375	Argument	value		8574830	0					
ANR	8575376	Identifier	value		8574830	0					
ANR	8575377	ExpressionStatement	"ttafilter_process ( filter , p , 0 )"	161:12:2761:2792	8574830	12	True				
ANR	8575378	CallExpression	"ttafilter_process ( filter , p , 0 )"		8574830	0					
ANR	8575379	Callee	ttafilter_process		8574830	0					
ANR	8575380	Identifier	ttafilter_process		8574830	0					
ANR	8575381	ArgumentList	filter		8574830	1					
ANR	8575382	Argument	filter		8574830	0					
ANR	8575383	Identifier	filter		8574830	0					
ANR	8575384	Argument	p		8574830	1					
ANR	8575385	Identifier	p		8574830	0					
ANR	8575386	Argument	0		8574830	2					
ANR	8575387	PrimaryExpression	0		8574830	0					
ANR	8575388	Statement	define	167:1:2837:2842	8574830	13	True				
ANR	8575389	Statement	PRED	167:8:2844:2847	8574830	14	True				
ANR	8575390	Statement	(	167:12:2848:2848	8574830	15	True				
ANR	8575391	Statement	x	167:13:2849:2849	8574830	16	True				
ANR	8575392	Statement	","	167:14:2850:2850	8574830	17	True				
ANR	8575393	Statement	k	167:16:2852:2852	8574830	18	True				
ANR	8575394	Statement	)	167:17:2853:2853	8574830	19	True				
ANR	8575395	Statement	(	167:19:2855:2855	8574830	20	True				
ANR	8575396	Statement	int32_t	167:20:2856:2862	8574830	21	True				
ANR	8575397	Statement	)	167:27:2863:2863	8574830	22	True				
ANR	8575398	Statement	(	167:28:2864:2864	8574830	23	True				
ANR	8575399	Statement	(	167:29:2865:2865	8574830	24	True				
ANR	8575400	Statement	(	167:30:2866:2866	8574830	25	True				
ANR	8575401	Statement	(	167:31:2867:2867	8574830	26	True				
ANR	8575402	Statement	uint64_t	167:32:2868:2875	8574830	27	True				
ANR	8575403	Statement	)	167:40:2876:2876	8574830	28	True				
ANR	8575404	Statement	x	167:41:2877:2877	8574830	29	True				
ANR	8575405	Statement	<<	167:43:2879:2880	8574830	30	True				
ANR	8575406	Statement	k	167:46:2882:2882	8574830	31	True				
ANR	8575407	Statement	)	167:47:2883:2883	8574830	32	True				
ANR	8575408	Statement	-	167:49:2885:2885	8574830	33	True				
ANR	8575409	Statement	x	167:51:2887:2887	8574830	34	True				
ANR	8575410	Statement	)	167:52:2888:2888	8574830	35	True				
ANR	8575411	Statement	>>	167:54:2890:2891	8574830	36	True				
ANR	8575412	Statement	k	167:57:2893:2893	8574830	37	True				
ANR	8575413	Statement	)	167:58:2894:2894	8574830	38	True				
ANR	8575414	SwitchStatement	switch ( s -> bps )		8574830	39					
ANR	8575415	Condition	s -> bps	169:20:2917:2922	8574830	0	True				
ANR	8575416	PtrMemberAccess	s -> bps		8574830	0					
ANR	8575417	Identifier	s		8574830	0					
ANR	8575418	Identifier	bps		8574830	1					
ANR	8575419	CompoundStatement		163:28:2809:2809	8574830	1					
ANR	8575420	Label	case 1 :	171:16:2944:2950	8574830	0	True				
ANR	8575421	ExpressionStatement	"* p += PRED ( * predictor , 4 )"	171:24:2952:2977	8574830	1	True				
ANR	8575422	AssignmentExpression	"* p += PRED ( * predictor , 4 )"		8574830	0		+=			
ANR	8575423	UnaryOperationExpression	* p		8574830	0					
ANR	8575424	UnaryOperator	*		8574830	0					
ANR	8575425	Identifier	p		8574830	1					
ANR	8575426	CallExpression	"PRED ( * predictor , 4 )"		8574830	1					
ANR	8575427	Callee	PRED		8574830	0					
ANR	8575428	Identifier	PRED		8574830	0					
ANR	8575429	ArgumentList	* predictor		8574830	1					
ANR	8575430	Argument	* predictor		8574830	0					
ANR	8575431	UnaryOperationExpression	* predictor		8574830	0					
ANR	8575432	UnaryOperator	*		8574830	0					
ANR	8575433	Identifier	predictor		8574830	1					
ANR	8575434	Argument	4		8574830	1					
ANR	8575435	PrimaryExpression	4		8574830	0					
ANR	8575436	BreakStatement	break ;	171:51:2979:2984	8574830	2	True				
ANR	8575437	Label	case 2 :	173:16:3003:3009	8574830	3	True				
ANR	8575438	Label	case 3 :	175:16:3028:3034	8574830	4	True				
ANR	8575439	ExpressionStatement	"* p += PRED ( * predictor , 5 )"	175:24:3036:3061	8574830	5	True				
ANR	8575440	AssignmentExpression	"* p += PRED ( * predictor , 5 )"		8574830	0		+=			
ANR	8575441	UnaryOperationExpression	* p		8574830	0					
ANR	8575442	UnaryOperator	*		8574830	0					
ANR	8575443	Identifier	p		8574830	1					
ANR	8575444	CallExpression	"PRED ( * predictor , 5 )"		8574830	1					
ANR	8575445	Callee	PRED		8574830	0					
ANR	8575446	Identifier	PRED		8574830	0					
ANR	8575447	ArgumentList	* predictor		8574830	1					
ANR	8575448	Argument	* predictor		8574830	0					
ANR	8575449	UnaryOperationExpression	* predictor		8574830	0					
ANR	8575450	UnaryOperator	*		8574830	0					
ANR	8575451	Identifier	predictor		8574830	1					
ANR	8575452	Argument	5		8574830	1					
ANR	8575453	PrimaryExpression	5		8574830	0					
ANR	8575454	BreakStatement	break ;	175:51:3063:3068	8574830	6	True				
ANR	8575455	Label	case 4 :	177:16:3087:3093	8574830	7	True				
ANR	8575456	ExpressionStatement	* p += * predictor	177:24:3095:3111	8574830	8	True				
ANR	8575457	AssignmentExpression	* p += * predictor		8574830	0		+=			
ANR	8575458	UnaryOperationExpression	* p		8574830	0					
ANR	8575459	UnaryOperator	*		8574830	0					
ANR	8575460	Identifier	p		8574830	1					
ANR	8575461	UnaryOperationExpression	* predictor		8574830	1					
ANR	8575462	UnaryOperator	*		8574830	0					
ANR	8575463	Identifier	predictor		8574830	1					
ANR	8575464	BreakStatement	break ;	177:42:3113:3118	8574830	9	True				
ANR	8575465	ExpressionStatement	* predictor = * p	181:12:3148:3163	8574830	40	True				
ANR	8575466	AssignmentExpression	* predictor = * p		8574830	0		=			
ANR	8575467	UnaryOperationExpression	* predictor		8574830	0					
ANR	8575468	UnaryOperator	*		8574830	0					
ANR	8575469	Identifier	predictor		8574830	1					
ANR	8575470	UnaryOperationExpression	* p		8574830	1					
ANR	8575471	UnaryOperator	*		8574830	0					
ANR	8575472	Identifier	p		8574830	1					
ANR	8575473	IfStatement	if ( cur_chan < ( s -> channels - 1 ) )		8574830	41					
ANR	8575474	Condition	cur_chan < ( s -> channels - 1 )	187:16:3214:3239	8574830	0	True				
ANR	8575475	RelationalExpression	cur_chan < ( s -> channels - 1 )		8574830	0		<			
ANR	8575476	Identifier	cur_chan		8574830	0					
ANR	8575477	AdditiveExpression	s -> channels - 1		8574830	1		-			
ANR	8575478	PtrMemberAccess	s -> channels		8574830	0					
ANR	8575479	Identifier	s		8574830	0					
ANR	8575480	Identifier	channels		8574830	1					
ANR	8575481	PrimaryExpression	1		8574830	1					
ANR	8575482	ExpressionStatement	cur_chan ++	189:16:3259:3269	8574830	1	True				
ANR	8575483	PostIncDecOperationExpression	cur_chan ++		8574830	0					
ANR	8575484	Identifier	cur_chan		8574830	0					
ANR	8575485	IncDec	++		8574830	1					
ANR	8575486	ElseStatement	else		8574830	0					
ANR	8575487	CompoundStatement		185:17:3173:3173	8574830	0					
ANR	8575488	IfStatement	if ( s -> channels > 1 )		8574830	0					
ANR	8575489	Condition	s -> channels > 1	195:20:3370:3384	8574830	0	True				
ANR	8575490	RelationalExpression	s -> channels > 1		8574830	0		>			
ANR	8575491	PtrMemberAccess	s -> channels		8574830	0					
ANR	8575492	Identifier	s		8574830	0					
ANR	8575493	Identifier	channels		8574830	1					
ANR	8575494	PrimaryExpression	1		8574830	1					
ANR	8575495	CompoundStatement		191:20:3294:3312	8574830	1					
ANR	8575496	IdentifierDeclStatement	int32_t * r = p - 1 ;	197:20:3410:3428	8574830	0	True				
ANR	8575497	IdentifierDecl	* r = p - 1		8574830	0					
ANR	8575498	IdentifierDeclType	int32_t *		8574830	0					
ANR	8575499	Identifier	r		8574830	1					
ANR	8575500	AssignmentExpression	* r = p - 1		8574830	2		=			
ANR	8575501	Identifier	r		8574830	0					
ANR	8575502	AdditiveExpression	p - 1		8574830	1		-			
ANR	8575503	Identifier	p		8574830	0					
ANR	8575504	PrimaryExpression	1		8574830	1					
ANR	8575505	ForStatement	for ( * p += * r / 2 ; r > p - s -> channels ; r -- )		8574830	1					
ANR	8575506	ForInit	* p += * r / 2 ;	199:25:3456:3468	8574830	0	True				
ANR	8575507	AssignmentExpression	* p += * r / 2		8574830	0		+=			
ANR	8575508	UnaryOperationExpression	* p		8574830	0					
ANR	8575509	UnaryOperator	*		8574830	0					
ANR	8575510	Identifier	p		8574830	1					
ANR	8575511	MultiplicativeExpression	* r / 2		8574830	1		/			
ANR	8575512	UnaryOperationExpression	* r		8574830	0					
ANR	8575513	UnaryOperator	*		8574830	0					
ANR	8575514	Identifier	r		8574830	1					
ANR	8575515	PrimaryExpression	2		8574830	1					
ANR	8575516	Condition	r > p - s -> channels	199:39:3470:3488	8574830	1	True				
ANR	8575517	RelationalExpression	r > p - s -> channels		8574830	0		>			
ANR	8575518	Identifier	r		8574830	0					
ANR	8575519	AdditiveExpression	p - s -> channels		8574830	1		-			
ANR	8575520	Identifier	p		8574830	0					
ANR	8575521	PtrMemberAccess	s -> channels		8574830	1					
ANR	8575522	Identifier	s		8574830	0					
ANR	8575523	Identifier	channels		8574830	1					
ANR	8575524	PostIncDecOperationExpression	r --	199:60:3491:3493	8574830	2	True				
ANR	8575525	Identifier	r		8574830	0					
ANR	8575526	IncDec	--		8574830	1					
ANR	8575527	ExpressionStatement	* r = * ( r + 1 ) - * r	201:24:3521:3539	8574830	3	True				
ANR	8575528	AssignmentExpression	* r = * ( r + 1 ) - * r		8574830	0		=			
ANR	8575529	UnaryOperationExpression	* r		8574830	0					
ANR	8575530	UnaryOperator	*		8574830	0					
ANR	8575531	Identifier	r		8574830	1					
ANR	8575532	AdditiveExpression	* ( r + 1 ) - * r		8574830	1		-			
ANR	8575533	UnaryOperationExpression	* ( r + 1 )		8574830	0					
ANR	8575534	UnaryOperator	*		8574830	0					
ANR	8575535	AdditiveExpression	r + 1		8574830	1		+			
ANR	8575536	Identifier	r		8574830	0					
ANR	8575537	PrimaryExpression	1		8574830	1					
ANR	8575538	UnaryOperationExpression	* r		8574830	1					
ANR	8575539	UnaryOperator	*		8574830	0					
ANR	8575540	Identifier	r		8574830	1					
ANR	8575541	ExpressionStatement	cur_chan = 0	205:16:3577:3589	8574830	1	True				
ANR	8575542	AssignmentExpression	cur_chan = 0		8574830	0		=			
ANR	8575543	Identifier	cur_chan		8574830	0					
ANR	8575544	PrimaryExpression	0		8574830	1					
ANR	8575545	IfStatement	if ( get_bits_left ( & s -> gb ) < 32 )		8574830	7					
ANR	8575546	Condition	get_bits_left ( & s -> gb ) < 32	213:12:3632:3657	8574830	0	True				
ANR	8575547	RelationalExpression	get_bits_left ( & s -> gb ) < 32		8574830	0		<			
ANR	8575548	CallExpression	get_bits_left ( & s -> gb )		8574830	0					
ANR	8575549	Callee	get_bits_left		8574830	0					
ANR	8575550	Identifier	get_bits_left		8574830	0					
ANR	8575551	ArgumentList	& s -> gb		8574830	1					
ANR	8575552	Argument	& s -> gb		8574830	0					
ANR	8575553	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8575554	UnaryOperator	&		8574830	0					
ANR	8575555	PtrMemberAccess	s -> gb		8574830	1					
ANR	8575556	Identifier	s		8574830	0					
ANR	8575557	Identifier	gb		8574830	1					
ANR	8575558	PrimaryExpression	32		8574830	1					
ANR	8575559	ReturnStatement	return - 1 ;	215:12:3673:3682	8574830	1	True				
ANR	8575560	UnaryOperationExpression	- 1		8574830	0					
ANR	8575561	UnaryOperator	-		8574830	0					
ANR	8575562	PrimaryExpression	1		8574830	1					
ANR	8575563	ExpressionStatement	"skip_bits ( & s -> gb , 32 )"	217:8:3693:3714	8574830	8	True				
ANR	8575564	CallExpression	"skip_bits ( & s -> gb , 32 )"		8574830	0					
ANR	8575565	Callee	skip_bits		8574830	0					
ANR	8575566	Identifier	skip_bits		8574830	0					
ANR	8575567	ArgumentList	& s -> gb		8574830	1					
ANR	8575568	Argument	& s -> gb		8574830	0					
ANR	8575569	UnaryOperationExpression	& s -> gb		8574830	0					
ANR	8575570	UnaryOperator	&		8574830	0					
ANR	8575571	PtrMemberAccess	s -> gb		8574830	1					
ANR	8575572	Identifier	s		8574830	0					
ANR	8575573	Identifier	gb		8574830	1					
ANR	8575574	Argument	32		8574830	1					
ANR	8575575	PrimaryExpression	32		8574830	0					
ANR	8575576	SwitchStatement	switch ( s -> bps )		8574830	9					
ANR	8575577	Condition	s -> bps	223:15:3784:3789	8574830	0	True				
ANR	8575578	PtrMemberAccess	s -> bps		8574830	0					
ANR	8575579	Identifier	s		8574830	0					
ANR	8575580	Identifier	bps		8574830	1					
ANR	8575581	CompoundStatement		217:23:3676:3676	8574830	1					
ANR	8575582	Label	case 2 :	225:12:3807:3813	8574830	0	True				
ANR	8575583	CompoundStatement		221:16:3718:3742	8574830	1					
ANR	8575584	IdentifierDeclStatement	uint16_t * samples = data ;	227:16:3834:3858	8574830	0	True				
ANR	8575585	IdentifierDecl	* samples = data		8574830	0					
ANR	8575586	IdentifierDeclType	uint16_t *		8574830	0					
ANR	8575587	Identifier	samples		8574830	1					
ANR	8575588	AssignmentExpression	* samples = data		8574830	2		=			
ANR	8575589	Identifier	data		8574830	0					
ANR	8575590	Identifier	data		8574830	1					
ANR	8575591	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8574830	1					
ANR	8575592	ForInit	p = s -> decode_buffer ;	229:21:3882:3902	8574830	0	True				
ANR	8575593	AssignmentExpression	p = s -> decode_buffer		8574830	0		=			
ANR	8575594	Identifier	p		8574830	0					
ANR	8575595	PtrMemberAccess	s -> decode_buffer		8574830	1					
ANR	8575596	Identifier	s		8574830	0					
ANR	8575597	Identifier	decode_buffer		8574830	1					
ANR	8575598	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	229:43:3904:3950	8574830	1	True				
ANR	8575599	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8574830	0		<			
ANR	8575600	Identifier	p		8574830	0					
ANR	8575601	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8574830	1		+			
ANR	8575602	PtrMemberAccess	s -> decode_buffer		8574830	0					
ANR	8575603	Identifier	s		8574830	0					
ANR	8575604	Identifier	decode_buffer		8574830	1					
ANR	8575605	MultiplicativeExpression	framelen * s -> channels		8574830	1		*			
ANR	8575606	Identifier	framelen		8574830	0					
ANR	8575607	PtrMemberAccess	s -> channels		8574830	1					
ANR	8575608	Identifier	s		8574830	0					
ANR	8575609	Identifier	channels		8574830	1					
ANR	8575610	PostIncDecOperationExpression	p ++	229:92:3953:3955	8574830	2	True				
ANR	8575611	Identifier	p		8574830	0					
ANR	8575612	IncDec	++		8574830	1					
ANR	8575613	CompoundStatement		223:97:3842:3842	8574830	3					
ANR	8575614	ExpressionStatement	* samples ++ = * p	231:20:3981:3996	8574830	0	True				
ANR	8575615	AssignmentExpression	* samples ++ = * p		8574830	0		=			
ANR	8575616	UnaryOperationExpression	* samples ++		8574830	0					
ANR	8575617	UnaryOperator	*		8574830	0					
ANR	8575618	PostIncDecOperationExpression	samples ++		8574830	1					
ANR	8575619	Identifier	samples		8574830	0					
ANR	8575620	IncDec	++		8574830	1					
ANR	8575621	UnaryOperationExpression	* p		8574830	1					
ANR	8575622	UnaryOperator	*		8574830	0					
ANR	8575623	Identifier	p		8574830	1					
ANR	8575624	ExpressionStatement	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data	235:16:4034:4083	8574830	2	True				
ANR	8575625	AssignmentExpression	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data		8574830	0		=			
ANR	8575626	UnaryOperationExpression	* data_size		8574830	0					
ANR	8575627	UnaryOperator	*		8574830	0					
ANR	8575628	Identifier	data_size		8574830	1					
ANR	8575629	AdditiveExpression	( uint8_t * ) samples - ( uint8_t * ) data		8574830	1		-			
ANR	8575630	CastExpression	( uint8_t * ) samples		8574830	0					
ANR	8575631	CastTarget	uint8_t *		8574830	0					
ANR	8575632	Identifier	samples		8574830	1					
ANR	8575633	CastExpression	( uint8_t * ) data		8574830	1					
ANR	8575634	CastTarget	uint8_t *		8574830	0					
ANR	8575635	Identifier	data		8574830	1					
ANR	8575636	BreakStatement	break ;	237:16:4102:4107	8574830	3	True				
ANR	8575637	Label	default :	241:12:4137:4144	8574830	2	True				
ANR	8575638	Identifier	default		8574830	0					
ANR	8575639	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Error, only 16bit samples supported!\\n"" )"	243:16:4163:4235	8574830	3	True				
ANR	8575640	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Error, only 16bit samples supported!\\n"" )"		8574830	0					
ANR	8575641	Callee	av_log		8574830	0					
ANR	8575642	Identifier	av_log		8574830	0					
ANR	8575643	ArgumentList	s -> avctx		8574830	1					
ANR	8575644	Argument	s -> avctx		8574830	0					
ANR	8575645	PtrMemberAccess	s -> avctx		8574830	0					
ANR	8575646	Identifier	s		8574830	0					
ANR	8575647	Identifier	avctx		8574830	1					
ANR	8575648	Argument	AV_LOG_ERROR		8574830	1					
ANR	8575649	Identifier	AV_LOG_ERROR		8574830	0					
ANR	8575650	Argument	"""Error, only 16bit samples supported!\\n"""		8574830	2					
ANR	8575651	PrimaryExpression	"""Error, only 16bit samples supported!\\n"""		8574830	0					
ANR	8575652	ReturnStatement	return buf_size ;	251:4:4262:4277	8574830	6	True				
ANR	8575653	Identifier	buf_size		8574830	0					
ANR	8575654	ReturnType	static int		8574830	1					
ANR	8575655	Identifier	tta_decode_frame		8574830	2					
ANR	8575656	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		8574830	3					
ANR	8575657	Parameter	AVCodecContext * avctx	1:28:28:48	8574830	0	True				
ANR	8575658	ParameterType	AVCodecContext *		8574830	0					
ANR	8575659	Identifier	avctx		8574830	1					
ANR	8575660	Parameter	void * data	3:8:60:69	8574830	1	True				
ANR	8575661	ParameterType	void *		8574830	0					
ANR	8575662	Identifier	data		8574830	1					
ANR	8575663	Parameter	int * data_size	3:20:72:85	8574830	2	True				
ANR	8575664	ParameterType	int *		8574830	0					
ANR	8575665	Identifier	data_size		8574830	1					
ANR	8575666	Parameter	AVPacket * avpkt	5:8:97:111	8574830	3	True				
ANR	8575667	ParameterType	AVPacket *		8574830	0					
ANR	8575668	Identifier	avpkt		8574830	1					
ANR	8575669	CFGEntryNode	ENTRY		8574830		True				
ANR	8575670	CFGExitNode	EXIT		8574830		True				
ANR	8575671	Symbol	MIN_CACHE_BITS		8574830						
ANR	8575672	Symbol	* shift_1		8574830						
ANR	8575673	Symbol	data		8574830						
ANR	8575674	Symbol	PRED		8574830						
ANR	8575675	Symbol	get_bits		8574830						
ANR	8575676	Symbol	avpkt		8574830						
ANR	8575677	Symbol	* data_size		8574830						
ANR	8575678	Symbol	unary		8574830						
ANR	8575679	Symbol	rice -> k0		8574830						
ANR	8575680	Symbol	rice -> k1		8574830						
ANR	8575681	Symbol	tta_get_unary		8574830						
ANR	8575682	Symbol	* ttafilter_configs		8574830						
ANR	8575683	Symbol	* * rice		8574830						
ANR	8575684	Symbol	data_size		8574830						
ANR	8575685	Symbol	buf_size		8574830						
ANR	8575686	Symbol	* * s -> bps		8574830						
ANR	8575687	Symbol	& s -> ch_ctx [ cur_chan ] . filter		8574830						
ANR	8575688	Symbol	* rice		8574830						
ANR	8575689	Symbol	s -> ch_ctx [ i ] . predictor		8574830						
ANR	8575690	Symbol	shift_16		8574830						
ANR	8575691	Symbol	* * * s		8574830						
ANR	8575692	Symbol	samples		8574830						
ANR	8575693	Symbol	& s -> gb		8574830						
ANR	8575694	Symbol	* avctx		8574830						
ANR	8575695	Symbol	* s -> bps		8574830						
ANR	8575696	Symbol	& s -> ch_ctx [ cur_chan ] . predictor		8574830						
ANR	8575697	Symbol	s -> ch_ctx		8574830						
ANR	8575698	Symbol	& s -> ch_ctx [ i ] . rice		8574830						
ANR	8575699	Symbol	* rice -> k1		8574830						
ANR	8575700	Symbol	avpkt -> data		8574830						
ANR	8575701	Symbol	rice -> sum1		8574830						
ANR	8575702	Symbol	s -> avctx		8574830						
ANR	8575703	Symbol	* rice -> k0		8574830						
ANR	8575704	Symbol	s -> decode_buffer		8574830						
ANR	8575705	Symbol	rice -> sum0		8574830						
ANR	8575706	Symbol	s -> frame_length		8574830						
ANR	8575707	Symbol	& s -> ch_ctx [ i ] . filter		8574830						
ANR	8575708	Symbol	* * ttafilter_configs		8574830						
ANR	8575709	Symbol	& s -> ch_ctx [ cur_chan ] . rice		8574830						
ANR	8575710	Symbol	get_bits_left		8574830						
ANR	8575711	Symbol	s -> channels		8574830						
ANR	8575712	Symbol	cur_chan		8574830						
ANR	8575713	Symbol	* * s		8574830						
ANR	8575714	Symbol	avpkt -> size		8574830						
ANR	8575715	Symbol	predictor		8574830						
ANR	8575716	Symbol	avctx		8574830						
ANR	8575717	Symbol	* predictor		8574830						
ANR	8575718	Symbol	ttafilter_configs		8574830						
ANR	8575719	Symbol	value		8574830						
ANR	8575720	Symbol	* samples ++		8574830						
ANR	8575721	Symbol	* avpkt		8574830						
ANR	8575722	Symbol	s -> total_frames		8574830						
ANR	8575723	Symbol	UNFOLD		8574830						
ANR	8575724	Symbol	AV_LOG_ERROR		8574830						
ANR	8575725	Symbol	shift_1		8574830						
ANR	8575726	Symbol	i		8574830						
ANR	8575727	Symbol	k		8574830						
ANR	8575728	Symbol	avctx -> priv_data		8574830						
ANR	8575729	Symbol	rice		8574830						
ANR	8575730	Symbol	p		8574830						
ANR	8575731	Symbol	filter		8574830						
ANR	8575732	Symbol	* ( r + 1 )		8574830						
ANR	8575733	Symbol	s -> bps		8574830						
ANR	8575734	Symbol	buf		8574830						
ANR	8575735	Symbol	s -> last_frame_length		8574830						
ANR	8575736	Symbol	* s -> ch_ctx		8574830						
ANR	8575737	Symbol	* shift_16		8574830						
ANR	8575738	Symbol	r		8574830						
ANR	8575739	Symbol	s		8574830						
ANR	8575740	Symbol	* i		8574830						
ANR	8575741	Symbol	depth		8574830						
ANR	8575742	Symbol	x		8574830						
ANR	8575743	Symbol	* p		8574830						
ANR	8575744	Symbol	framelen		8574830						
ANR	8575745	Symbol	* r		8574830						
ANR	8575746	Symbol	* s		8574830						
ANR	8575747	Symbol	* cur_chan		8574830						
