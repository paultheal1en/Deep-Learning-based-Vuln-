command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1284970	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_timecode_1.c								
ANR	1284971	Function	check_timecode	1:0:0:626							
ANR	1284972	FunctionDef	"check_timecode (void * log_ctx , AVTimecode * tc)"		1284971	0					
ANR	1284973	CompoundStatement		3:0:58:626	1284971	0					
ANR	1284974	IfStatement	if ( tc -> fps <= 0 )		1284971	0					
ANR	1284975	Condition	tc -> fps <= 0	5:8:69:80	1284971	0	True				
ANR	1284976	RelationalExpression	tc -> fps <= 0		1284971	0		<=			
ANR	1284977	PtrMemberAccess	tc -> fps		1284971	0					
ANR	1284978	Identifier	tc		1284971	0					
ANR	1284979	Identifier	fps		1284971	1					
ANR	1284980	PrimaryExpression	0		1284971	1					
ANR	1284981	CompoundStatement		3:22:24:24	1284971	1					
ANR	1284982	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Timecode frame rate must be specified\\n"" )"	7:8:94:166	1284971	0	True				
ANR	1284983	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Timecode frame rate must be specified\\n"" )"		1284971	0					
ANR	1284984	Callee	av_log		1284971	0					
ANR	1284985	Identifier	av_log		1284971	0					
ANR	1284986	ArgumentList	log_ctx		1284971	1					
ANR	1284987	Argument	log_ctx		1284971	0					
ANR	1284988	Identifier	log_ctx		1284971	0					
ANR	1284989	Argument	AV_LOG_ERROR		1284971	1					
ANR	1284990	Identifier	AV_LOG_ERROR		1284971	0					
ANR	1284991	Argument	"""Timecode frame rate must be specified\\n"""		1284971	2					
ANR	1284992	PrimaryExpression	"""Timecode frame rate must be specified\\n"""		1284971	0					
ANR	1284993	ReturnStatement	return AVERROR ( EINVAL ) ;	9:8:177:199	1284971	1	True				
ANR	1284994	CallExpression	AVERROR ( EINVAL )		1284971	0					
ANR	1284995	Callee	AVERROR		1284971	0					
ANR	1284996	Identifier	AVERROR		1284971	0					
ANR	1284997	ArgumentList	EINVAL		1284971	1					
ANR	1284998	Argument	EINVAL		1284971	0					
ANR	1284999	Identifier	EINVAL		1284971	0					
ANR	1285000	IfStatement	if ( ( tc -> flags & AV_TIMECODE_FLAG_DROPFRAME ) && tc -> fps != 30 && tc -> fps != 60 )		1284971	1					
ANR	1285001	Condition	( tc -> flags & AV_TIMECODE_FLAG_DROPFRAME ) && tc -> fps != 30 && tc -> fps != 60	13:8:217:290	1284971	0	True				
ANR	1285002	AndExpression	( tc -> flags & AV_TIMECODE_FLAG_DROPFRAME ) && tc -> fps != 30 && tc -> fps != 60		1284971	0		&&			
ANR	1285003	BitAndExpression	tc -> flags & AV_TIMECODE_FLAG_DROPFRAME		1284971	0		&			
ANR	1285004	PtrMemberAccess	tc -> flags		1284971	0					
ANR	1285005	Identifier	tc		1284971	0					
ANR	1285006	Identifier	flags		1284971	1					
ANR	1285007	Identifier	AV_TIMECODE_FLAG_DROPFRAME		1284971	1					
ANR	1285008	AndExpression	tc -> fps != 30 && tc -> fps != 60		1284971	1		&&			
ANR	1285009	EqualityExpression	tc -> fps != 30		1284971	0		!=			
ANR	1285010	PtrMemberAccess	tc -> fps		1284971	0					
ANR	1285011	Identifier	tc		1284971	0					
ANR	1285012	Identifier	fps		1284971	1					
ANR	1285013	PrimaryExpression	30		1284971	1					
ANR	1285014	EqualityExpression	tc -> fps != 60		1284971	1		!=			
ANR	1285015	PtrMemberAccess	tc -> fps		1284971	0					
ANR	1285016	Identifier	tc		1284971	0					
ANR	1285017	Identifier	fps		1284971	1					
ANR	1285018	PrimaryExpression	60		1284971	1					
ANR	1285019	CompoundStatement		11:84:234:234	1284971	1					
ANR	1285020	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\\n"" )"	15:8:304:399	1284971	0	True				
ANR	1285021	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\\n"" )"		1284971	0					
ANR	1285022	Callee	av_log		1284971	0					
ANR	1285023	Identifier	av_log		1284971	0					
ANR	1285024	ArgumentList	log_ctx		1284971	1					
ANR	1285025	Argument	log_ctx		1284971	0					
ANR	1285026	Identifier	log_ctx		1284971	0					
ANR	1285027	Argument	AV_LOG_ERROR		1284971	1					
ANR	1285028	Identifier	AV_LOG_ERROR		1284971	0					
ANR	1285029	Argument	"""Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\\n"""		1284971	2					
ANR	1285030	PrimaryExpression	"""Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\\n"""		1284971	0					
ANR	1285031	ReturnStatement	return AVERROR ( EINVAL ) ;	17:8:410:432	1284971	1	True				
ANR	1285032	CallExpression	AVERROR ( EINVAL )		1284971	0					
ANR	1285033	Callee	AVERROR		1284971	0					
ANR	1285034	Identifier	AVERROR		1284971	0					
ANR	1285035	ArgumentList	EINVAL		1284971	1					
ANR	1285036	Argument	EINVAL		1284971	0					
ANR	1285037	Identifier	EINVAL		1284971	0					
ANR	1285038	IfStatement	if ( check_fps ( tc -> fps ) < 0 )		1284971	2					
ANR	1285039	Condition	check_fps ( tc -> fps ) < 0	21:8:450:471	1284971	0	True				
ANR	1285040	RelationalExpression	check_fps ( tc -> fps ) < 0		1284971	0		<			
ANR	1285041	CallExpression	check_fps ( tc -> fps )		1284971	0					
ANR	1285042	Callee	check_fps		1284971	0					
ANR	1285043	Identifier	check_fps		1284971	0					
ANR	1285044	ArgumentList	tc -> fps		1284971	1					
ANR	1285045	Argument	tc -> fps		1284971	0					
ANR	1285046	PtrMemberAccess	tc -> fps		1284971	0					
ANR	1285047	Identifier	tc		1284971	0					
ANR	1285048	Identifier	fps		1284971	1					
ANR	1285049	PrimaryExpression	0		1284971	1					
ANR	1285050	CompoundStatement		19:32:415:415	1284971	1					
ANR	1285051	ExpressionStatement	"av_log ( log_ctx , AV_LOG_WARNING , ""Using non-standard frame rate %d/%d\\n"" , tc -> rate . num , tc -> rate . den )"	23:8:485:601	1284971	0	True				
ANR	1285052	CallExpression	"av_log ( log_ctx , AV_LOG_WARNING , ""Using non-standard frame rate %d/%d\\n"" , tc -> rate . num , tc -> rate . den )"		1284971	0					
ANR	1285053	Callee	av_log		1284971	0					
ANR	1285054	Identifier	av_log		1284971	0					
ANR	1285055	ArgumentList	log_ctx		1284971	1					
ANR	1285056	Argument	log_ctx		1284971	0					
ANR	1285057	Identifier	log_ctx		1284971	0					
ANR	1285058	Argument	AV_LOG_WARNING		1284971	1					
ANR	1285059	Identifier	AV_LOG_WARNING		1284971	0					
ANR	1285060	Argument	"""Using non-standard frame rate %d/%d\\n"""		1284971	2					
ANR	1285061	PrimaryExpression	"""Using non-standard frame rate %d/%d\\n"""		1284971	0					
ANR	1285062	Argument	tc -> rate . num		1284971	3					
ANR	1285063	MemberAccess	tc -> rate . num		1284971	0					
ANR	1285064	PtrMemberAccess	tc -> rate		1284971	0					
ANR	1285065	Identifier	tc		1284971	0					
ANR	1285066	Identifier	rate		1284971	1					
ANR	1285067	Identifier	num		1284971	1					
ANR	1285068	Argument	tc -> rate . den		1284971	4					
ANR	1285069	MemberAccess	tc -> rate . den		1284971	0					
ANR	1285070	PtrMemberAccess	tc -> rate		1284971	0					
ANR	1285071	Identifier	tc		1284971	0					
ANR	1285072	Identifier	rate		1284971	1					
ANR	1285073	Identifier	den		1284971	1					
ANR	1285074	ReturnStatement	return 0 ;	29:4:615:623	1284971	3	True				
ANR	1285075	PrimaryExpression	0		1284971	0					
ANR	1285076	ReturnType	static int		1284971	1					
ANR	1285077	Identifier	check_timecode		1284971	2					
ANR	1285078	ParameterList	"void * log_ctx , AVTimecode * tc"		1284971	3					
ANR	1285079	Parameter	void * log_ctx	1:26:26:38	1284971	0	True				
ANR	1285080	ParameterType	void *		1284971	0					
ANR	1285081	Identifier	log_ctx		1284971	1					
ANR	1285082	Parameter	AVTimecode * tc	1:41:41:54	1284971	1	True				
ANR	1285083	ParameterType	AVTimecode *		1284971	0					
ANR	1285084	Identifier	tc		1284971	1					
ANR	1285085	CFGEntryNode	ENTRY		1284971		True				
ANR	1285086	CFGExitNode	EXIT		1284971		True				
ANR	1285087	Symbol	AV_LOG_ERROR		1284971						
ANR	1285088	Symbol	tc -> fps		1284971						
ANR	1285089	Symbol	log_ctx		1284971						
ANR	1285090	Symbol	tc		1284971						
ANR	1285091	Symbol	EINVAL		1284971						
ANR	1285092	Symbol	check_fps		1284971						
ANR	1285093	Symbol	* tc		1284971						
ANR	1285094	Symbol	AV_TIMECODE_FLAG_DROPFRAME		1284971						
ANR	1285095	Symbol	tc -> rate . num		1284971						
ANR	1285096	Symbol	tc -> rate . den		1284971						
ANR	1285097	Symbol	AVERROR		1284971						
ANR	1285098	Symbol	AV_LOG_WARNING		1284971						
ANR	1285099	Symbol	tc -> flags		1284971						
ANR	1285100	Symbol	tc -> rate		1284971						
