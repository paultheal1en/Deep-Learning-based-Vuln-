command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5560161	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_event_1.c								
ANR	5560162	Function	monitor_event	1:0:0:1278							
ANR	5560163	FunctionDef	"monitor_event (void * opaque , int event)"		5560162	0					
ANR	5560164	CompoundStatement		3:0:52:1278	5560162	0					
ANR	5560165	IdentifierDeclStatement	Monitor * mon = opaque ;	5:4:59:80	5560162	0	True				
ANR	5560166	IdentifierDecl	* mon = opaque		5560162	0					
ANR	5560167	IdentifierDeclType	Monitor *		5560162	0					
ANR	5560168	Identifier	mon		5560162	1					
ANR	5560169	AssignmentExpression	* mon = opaque		5560162	2		=			
ANR	5560170	Identifier	opaque		5560162	0					
ANR	5560171	Identifier	opaque		5560162	1					
ANR	5560172	SwitchStatement	switch ( event )		5560162	1					
ANR	5560173	Condition	event	9:12:97:101	5560162	0	True				
ANR	5560174	Identifier	event		5560162	0					
ANR	5560175	CompoundStatement		7:19:51:51	5560162	1					
ANR	5560176	Label	case CHR_EVENT_MUX_IN :	11:4:111:132	5560162	0	True				
ANR	5560177	Identifier	CHR_EVENT_MUX_IN		5560162	0					
ANR	5560178	ExpressionStatement	qemu_mutex_lock ( & mon -> out_lock )	13:8:143:174	5560162	1	True				
ANR	5560179	CallExpression	qemu_mutex_lock ( & mon -> out_lock )		5560162	0					
ANR	5560180	Callee	qemu_mutex_lock		5560162	0					
ANR	5560181	Identifier	qemu_mutex_lock		5560162	0					
ANR	5560182	ArgumentList	& mon -> out_lock		5560162	1					
ANR	5560183	Argument	& mon -> out_lock		5560162	0					
ANR	5560184	UnaryOperationExpression	& mon -> out_lock		5560162	0					
ANR	5560185	UnaryOperator	&		5560162	0					
ANR	5560186	PtrMemberAccess	mon -> out_lock		5560162	1					
ANR	5560187	Identifier	mon		5560162	0					
ANR	5560188	Identifier	out_lock		5560162	1					
ANR	5560189	ExpressionStatement	mon -> mux_out = 0	15:8:185:201	5560162	2	True				
ANR	5560190	AssignmentExpression	mon -> mux_out = 0		5560162	0		=			
ANR	5560191	PtrMemberAccess	mon -> mux_out		5560162	0					
ANR	5560192	Identifier	mon		5560162	0					
ANR	5560193	Identifier	mux_out		5560162	1					
ANR	5560194	PrimaryExpression	0		5560162	1					
ANR	5560195	ExpressionStatement	qemu_mutex_unlock ( & mon -> out_lock )	17:8:212:245	5560162	3	True				
ANR	5560196	CallExpression	qemu_mutex_unlock ( & mon -> out_lock )		5560162	0					
ANR	5560197	Callee	qemu_mutex_unlock		5560162	0					
ANR	5560198	Identifier	qemu_mutex_unlock		5560162	0					
ANR	5560199	ArgumentList	& mon -> out_lock		5560162	1					
ANR	5560200	Argument	& mon -> out_lock		5560162	0					
ANR	5560201	UnaryOperationExpression	& mon -> out_lock		5560162	0					
ANR	5560202	UnaryOperator	&		5560162	0					
ANR	5560203	PtrMemberAccess	mon -> out_lock		5560162	1					
ANR	5560204	Identifier	mon		5560162	0					
ANR	5560205	Identifier	out_lock		5560162	1					
ANR	5560206	IfStatement	if ( mon -> reset_seen )		5560162	4					
ANR	5560207	Condition	mon -> reset_seen	19:12:260:274	5560162	0	True				
ANR	5560208	PtrMemberAccess	mon -> reset_seen		5560162	0					
ANR	5560209	Identifier	mon		5560162	0					
ANR	5560210	Identifier	reset_seen		5560162	1					
ANR	5560211	CompoundStatement		17:29:224:224	5560162	1					
ANR	5560212	ExpressionStatement	monitor_resume ( mon )	22:12:293:312	5560162	0	True				
ANR	5560213	CallExpression	monitor_resume ( mon )		5560162	0					
ANR	5560214	Callee	monitor_resume		5560162	0					
ANR	5560215	Identifier	monitor_resume		5560162	0					
ANR	5560216	ArgumentList	mon		5560162	1					
ANR	5560217	Argument	mon		5560162	0					
ANR	5560218	Identifier	mon		5560162	0					
ANR	5560219	ExpressionStatement	monitor_flush ( mon )	24:12:327:345	5560162	1	True				
ANR	5560220	CallExpression	monitor_flush ( mon )		5560162	0					
ANR	5560221	Callee	monitor_flush		5560162	0					
ANR	5560222	Identifier	monitor_flush		5560162	0					
ANR	5560223	ArgumentList	mon		5560162	1					
ANR	5560224	Argument	mon		5560162	0					
ANR	5560225	Identifier	mon		5560162	0					
ANR	5560226	ElseStatement	else		5560162	0					
ANR	5560227	CompoundStatement		24:15:310:310	5560162	0					
ANR	5560228	ExpressionStatement	mon -> suspend_cnt = 0	28:12:378:398	5560162	0	True				
ANR	5560229	AssignmentExpression	mon -> suspend_cnt = 0		5560162	0		=			
ANR	5560230	PtrMemberAccess	mon -> suspend_cnt		5560162	0					
ANR	5560231	Identifier	mon		5560162	0					
ANR	5560232	Identifier	suspend_cnt		5560162	1					
ANR	5560233	PrimaryExpression	0		5560162	1					
ANR	5560234	BreakStatement	break ;	32:8:420:425	5560162	5	True				
ANR	5560235	Label	case CHR_EVENT_MUX_OUT :	36:4:434:456	5560162	6	True				
ANR	5560236	Identifier	CHR_EVENT_MUX_OUT		5560162	0					
ANR	5560237	IfStatement	if ( mon -> reset_seen )		5560162	7					
ANR	5560238	Condition	mon -> reset_seen	38:12:471:485	5560162	0	True				
ANR	5560239	PtrMemberAccess	mon -> reset_seen		5560162	0					
ANR	5560240	Identifier	mon		5560162	0					
ANR	5560241	Identifier	reset_seen		5560162	1					
ANR	5560242	CompoundStatement		36:29:435:435	5560162	1					
ANR	5560243	IfStatement	if ( mon -> suspend_cnt == 0 )		5560162	0					
ANR	5560244	Condition	mon -> suspend_cnt == 0	40:16:507:527	5560162	0	True				
ANR	5560245	EqualityExpression	mon -> suspend_cnt == 0		5560162	0		==			
ANR	5560246	PtrMemberAccess	mon -> suspend_cnt		5560162	0					
ANR	5560247	Identifier	mon		5560162	0					
ANR	5560248	Identifier	suspend_cnt		5560162	1					
ANR	5560249	PrimaryExpression	0		5560162	1					
ANR	5560250	CompoundStatement		38:39:477:477	5560162	1					
ANR	5560251	ExpressionStatement	"monitor_printf ( mon , ""\\n"" )"	42:16:549:574	5560162	0	True				
ANR	5560252	CallExpression	"monitor_printf ( mon , ""\\n"" )"		5560162	0					
ANR	5560253	Callee	monitor_printf		5560162	0					
ANR	5560254	Identifier	monitor_printf		5560162	0					
ANR	5560255	ArgumentList	mon		5560162	1					
ANR	5560256	Argument	mon		5560162	0					
ANR	5560257	Identifier	mon		5560162	0					
ANR	5560258	Argument	"""\\n"""		5560162	1					
ANR	5560259	PrimaryExpression	"""\\n"""		5560162	0					
ANR	5560260	ExpressionStatement	monitor_flush ( mon )	46:12:604:622	5560162	1	True				
ANR	5560261	CallExpression	monitor_flush ( mon )		5560162	0					
ANR	5560262	Callee	monitor_flush		5560162	0					
ANR	5560263	Identifier	monitor_flush		5560162	0					
ANR	5560264	ArgumentList	mon		5560162	1					
ANR	5560265	Argument	mon		5560162	0					
ANR	5560266	Identifier	mon		5560162	0					
ANR	5560267	ExpressionStatement	monitor_suspend ( mon )	48:12:637:657	5560162	2	True				
ANR	5560268	CallExpression	monitor_suspend ( mon )		5560162	0					
ANR	5560269	Callee	monitor_suspend		5560162	0					
ANR	5560270	Identifier	monitor_suspend		5560162	0					
ANR	5560271	ArgumentList	mon		5560162	1					
ANR	5560272	Argument	mon		5560162	0					
ANR	5560273	Identifier	mon		5560162	0					
ANR	5560274	ElseStatement	else		5560162	0					
ANR	5560275	CompoundStatement		48:15:622:622	5560162	0					
ANR	5560276	ExpressionStatement	mon -> suspend_cnt ++	52:12:690:708	5560162	0	True				
ANR	5560277	PostIncDecOperationExpression	mon -> suspend_cnt ++		5560162	0					
ANR	5560278	PtrMemberAccess	mon -> suspend_cnt		5560162	0					
ANR	5560279	Identifier	mon		5560162	0					
ANR	5560280	Identifier	suspend_cnt		5560162	1					
ANR	5560281	IncDec	++		5560162	1					
ANR	5560282	ExpressionStatement	qemu_mutex_lock ( & mon -> out_lock )	56:8:730:761	5560162	8	True				
ANR	5560283	CallExpression	qemu_mutex_lock ( & mon -> out_lock )		5560162	0					
ANR	5560284	Callee	qemu_mutex_lock		5560162	0					
ANR	5560285	Identifier	qemu_mutex_lock		5560162	0					
ANR	5560286	ArgumentList	& mon -> out_lock		5560162	1					
ANR	5560287	Argument	& mon -> out_lock		5560162	0					
ANR	5560288	UnaryOperationExpression	& mon -> out_lock		5560162	0					
ANR	5560289	UnaryOperator	&		5560162	0					
ANR	5560290	PtrMemberAccess	mon -> out_lock		5560162	1					
ANR	5560291	Identifier	mon		5560162	0					
ANR	5560292	Identifier	out_lock		5560162	1					
ANR	5560293	ExpressionStatement	mon -> mux_out = 1	58:8:772:788	5560162	9	True				
ANR	5560294	AssignmentExpression	mon -> mux_out = 1		5560162	0		=			
ANR	5560295	PtrMemberAccess	mon -> mux_out		5560162	0					
ANR	5560296	Identifier	mon		5560162	0					
ANR	5560297	Identifier	mux_out		5560162	1					
ANR	5560298	PrimaryExpression	1		5560162	1					
ANR	5560299	ExpressionStatement	qemu_mutex_unlock ( & mon -> out_lock )	60:8:799:832	5560162	10	True				
ANR	5560300	CallExpression	qemu_mutex_unlock ( & mon -> out_lock )		5560162	0					
ANR	5560301	Callee	qemu_mutex_unlock		5560162	0					
ANR	5560302	Identifier	qemu_mutex_unlock		5560162	0					
ANR	5560303	ArgumentList	& mon -> out_lock		5560162	1					
ANR	5560304	Argument	& mon -> out_lock		5560162	0					
ANR	5560305	UnaryOperationExpression	& mon -> out_lock		5560162	0					
ANR	5560306	UnaryOperator	&		5560162	0					
ANR	5560307	PtrMemberAccess	mon -> out_lock		5560162	1					
ANR	5560308	Identifier	mon		5560162	0					
ANR	5560309	Identifier	out_lock		5560162	1					
ANR	5560310	BreakStatement	break ;	62:8:843:848	5560162	11	True				
ANR	5560311	Label	case CHR_EVENT_OPENED :	66:4:857:878	5560162	12	True				
ANR	5560312	Identifier	CHR_EVENT_OPENED		5560162	0					
ANR	5560313	Statement	monitor_printf	68:8:889:902	5560162	13	True				
ANR	5560314	Statement	(	68:22:903:903	5560162	14	True				
ANR	5560315	Statement	mon	68:23:904:906	5560162	15	True				
ANR	5560316	Statement	","	68:26:907:907	5560162	16	True				
ANR	5560317	Statement	"""QEMU %s monitor - type 'help' for more """	68:28:909:949	5560162	17	True				
ANR	5560318	Statement	"""information\\n"""	70:23:975:989	5560162	18	True				
ANR	5560319	Statement	","	70:38:990:990	5560162	19	True				
ANR	5560320	Statement	QEMU_VERSION	70:40:992:1003	5560162	20	True				
ANR	5560321	Statement	)	70:52:1004:1004	5560162	21	True				
ANR	5560322	ExpressionStatement		70:53:1005:1005	5560162	22	True				
ANR	5560323	IfStatement	if ( ! mon -> mux_out )		5560162	23					
ANR	5560324	Condition	! mon -> mux_out	72:12:1020:1032	5560162	0	True				
ANR	5560325	UnaryOperationExpression	! mon -> mux_out		5560162	0					
ANR	5560326	UnaryOperator	!		5560162	0					
ANR	5560327	PtrMemberAccess	mon -> mux_out		5560162	1					
ANR	5560328	Identifier	mon		5560162	0					
ANR	5560329	Identifier	mux_out		5560162	1					
ANR	5560330	CompoundStatement		70:27:982:982	5560162	1					
ANR	5560331	ExpressionStatement	readline_show_prompt ( mon -> rs )	75:12:1051:1080	5560162	0	True				
ANR	5560332	CallExpression	readline_show_prompt ( mon -> rs )		5560162	0					
ANR	5560333	Callee	readline_show_prompt		5560162	0					
ANR	5560334	Identifier	readline_show_prompt		5560162	0					
ANR	5560335	ArgumentList	mon -> rs		5560162	1					
ANR	5560336	Argument	mon -> rs		5560162	0					
ANR	5560337	PtrMemberAccess	mon -> rs		5560162	0					
ANR	5560338	Identifier	mon		5560162	0					
ANR	5560339	Identifier	rs		5560162	1					
ANR	5560340	ExpressionStatement	mon -> reset_seen = 1	79:8:1102:1121	5560162	24	True				
ANR	5560341	AssignmentExpression	mon -> reset_seen = 1		5560162	0		=			
ANR	5560342	PtrMemberAccess	mon -> reset_seen		5560162	0					
ANR	5560343	Identifier	mon		5560162	0					
ANR	5560344	Identifier	reset_seen		5560162	1					
ANR	5560345	PrimaryExpression	1		5560162	1					
ANR	5560346	ExpressionStatement	mon_refcount ++	81:8:1132:1146	5560162	25	True				
ANR	5560347	PostIncDecOperationExpression	mon_refcount ++		5560162	0					
ANR	5560348	Identifier	mon_refcount		5560162	0					
ANR	5560349	IncDec	++		5560162	1					
ANR	5560350	BreakStatement	break ;	83:8:1157:1162	5560162	26	True				
ANR	5560351	Label	case CHR_EVENT_CLOSED :	87:4:1171:1192	5560162	27	True				
ANR	5560352	Identifier	CHR_EVENT_CLOSED		5560162	0					
ANR	5560353	ExpressionStatement	mon_refcount --	89:8:1203:1217	5560162	28	True				
ANR	5560354	PostIncDecOperationExpression	mon_refcount --		5560162	0					
ANR	5560355	Identifier	mon_refcount		5560162	0					
ANR	5560356	IncDec	--		5560162	1					
ANR	5560357	ExpressionStatement	monitor_fdsets_cleanup ( )	91:8:1228:1252	5560162	29	True				
ANR	5560358	CallExpression	monitor_fdsets_cleanup ( )		5560162	0					
ANR	5560359	Callee	monitor_fdsets_cleanup		5560162	0					
ANR	5560360	Identifier	monitor_fdsets_cleanup		5560162	0					
ANR	5560361	ArgumentList			5560162	1					
ANR	5560362	BreakStatement	break ;	93:8:1263:1268	5560162	30	True				
ANR	5560363	ReturnType	static void		5560162	1					
ANR	5560364	Identifier	monitor_event		5560162	2					
ANR	5560365	ParameterList	"void * opaque , int event"		5560162	3					
ANR	5560366	Parameter	void * opaque	1:26:26:37	5560162	0	True				
ANR	5560367	ParameterType	void *		5560162	0					
ANR	5560368	Identifier	opaque		5560162	1					
ANR	5560369	Parameter	int event	1:40:40:48	5560162	1	True				
ANR	5560370	ParameterType	int		5560162	0					
ANR	5560371	Identifier	event		5560162	1					
ANR	5560372	CFGEntryNode	ENTRY		5560162		True				
ANR	5560373	CFGExitNode	EXIT		5560162		True				
ANR	5560374	Symbol	opaque		5560162						
ANR	5560375	Symbol	mon -> mux_out		5560162						
ANR	5560376	Symbol	* mon		5560162						
ANR	5560377	Symbol	mon -> suspend_cnt		5560162						
ANR	5560378	Symbol	mon -> rs		5560162						
ANR	5560379	Symbol	event		5560162						
ANR	5560380	Symbol	mon		5560162						
ANR	5560381	Symbol	& mon -> out_lock		5560162						
ANR	5560382	Symbol	mon -> reset_seen		5560162						
ANR	5560383	Symbol	mon_refcount		5560162						
