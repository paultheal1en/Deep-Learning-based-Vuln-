command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6762364	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pte_check_hash32_02_0.c								
ANR	6762365	Function	pte_check_hash32	1:0:0:1390							
ANR	6762366	FunctionDef	"pte_check_hash32 (mmu_ctx_t * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type)"		6762365	0					
ANR	6762367	CompoundStatement		5:0:137:1390	6762365	0					
ANR	6762368	IdentifierDeclStatement	"target_ulong ptem , mmask ;"	7:4:144:168	6762365	0	True				
ANR	6762369	IdentifierDecl	ptem		6762365	0					
ANR	6762370	IdentifierDeclType	target_ulong		6762365	0					
ANR	6762371	Identifier	ptem		6762365	1					
ANR	6762372	IdentifierDecl	mmask		6762365	1					
ANR	6762373	IdentifierDeclType	target_ulong		6762365	0					
ANR	6762374	Identifier	mmask		6762365	1					
ANR	6762375	IdentifierDeclStatement	"int access , ret , pteh , ptev , pp ;"	9:4:175:206	6762365	1	True				
ANR	6762376	IdentifierDecl	access		6762365	0					
ANR	6762377	IdentifierDeclType	int		6762365	0					
ANR	6762378	Identifier	access		6762365	1					
ANR	6762379	IdentifierDecl	ret		6762365	1					
ANR	6762380	IdentifierDeclType	int		6762365	0					
ANR	6762381	Identifier	ret		6762365	1					
ANR	6762382	IdentifierDecl	pteh		6762365	2					
ANR	6762383	IdentifierDeclType	int		6762365	0					
ANR	6762384	Identifier	pteh		6762365	1					
ANR	6762385	IdentifierDecl	ptev		6762365	3					
ANR	6762386	IdentifierDeclType	int		6762365	0					
ANR	6762387	Identifier	ptev		6762365	1					
ANR	6762388	IdentifierDecl	pp		6762365	4					
ANR	6762389	IdentifierDeclType	int		6762365	0					
ANR	6762390	Identifier	pp		6762365	1					
ANR	6762391	ExpressionStatement	ret = - 1	13:4:215:223	6762365	2	True				
ANR	6762392	AssignmentExpression	ret = - 1		6762365	0		=			
ANR	6762393	Identifier	ret		6762365	0					
ANR	6762394	UnaryOperationExpression	- 1		6762365	1					
ANR	6762395	UnaryOperator	-		6762365	0					
ANR	6762396	PrimaryExpression	1		6762365	1					
ANR	6762397	ExpressionStatement	ptev = pte_is_valid_hash32 ( pte0 )	17:4:272:304	6762365	3	True				
ANR	6762398	AssignmentExpression	ptev = pte_is_valid_hash32 ( pte0 )		6762365	0		=			
ANR	6762399	Identifier	ptev		6762365	0					
ANR	6762400	CallExpression	pte_is_valid_hash32 ( pte0 )		6762365	1					
ANR	6762401	Callee	pte_is_valid_hash32		6762365	0					
ANR	6762402	Identifier	pte_is_valid_hash32		6762365	0					
ANR	6762403	ArgumentList	pte0		6762365	1					
ANR	6762404	Argument	pte0		6762365	0					
ANR	6762405	Identifier	pte0		6762365	0					
ANR	6762406	ExpressionStatement	pteh = ( pte0 >> 6 ) & 1	19:4:311:333	6762365	4	True				
ANR	6762407	AssignmentExpression	pteh = ( pte0 >> 6 ) & 1		6762365	0		=			
ANR	6762408	Identifier	pteh		6762365	0					
ANR	6762409	BitAndExpression	( pte0 >> 6 ) & 1		6762365	1		&			
ANR	6762410	ShiftExpression	pte0 >> 6		6762365	0		>>			
ANR	6762411	Identifier	pte0		6762365	0					
ANR	6762412	PrimaryExpression	6		6762365	1					
ANR	6762413	PrimaryExpression	1		6762365	1					
ANR	6762414	IfStatement	if ( ptev && h == pteh )		6762365	5					
ANR	6762415	Condition	ptev && h == pteh	21:8:344:360	6762365	0	True				
ANR	6762416	AndExpression	ptev && h == pteh		6762365	0		&&			
ANR	6762417	Identifier	ptev		6762365	0					
ANR	6762418	EqualityExpression	h == pteh		6762365	1		==			
ANR	6762419	Identifier	h		6762365	0					
ANR	6762420	Identifier	pteh		6762365	1					
ANR	6762421	CompoundStatement		17:27:225:225	6762365	1					
ANR	6762422	ExpressionStatement	ptem = pte0 & PTE_PTEM_MASK	25:8:406:433	6762365	0	True				
ANR	6762423	AssignmentExpression	ptem = pte0 & PTE_PTEM_MASK		6762365	0		=			
ANR	6762424	Identifier	ptem		6762365	0					
ANR	6762425	BitAndExpression	pte0 & PTE_PTEM_MASK		6762365	1		&			
ANR	6762426	Identifier	pte0		6762365	0					
ANR	6762427	Identifier	PTE_PTEM_MASK		6762365	1					
ANR	6762428	ExpressionStatement	mmask = PTE_CHECK_MASK	27:8:444:466	6762365	1	True				
ANR	6762429	AssignmentExpression	mmask = PTE_CHECK_MASK		6762365	0		=			
ANR	6762430	Identifier	mmask		6762365	0					
ANR	6762431	Identifier	PTE_CHECK_MASK		6762365	1					
ANR	6762432	ExpressionStatement	pp = pte1 & 0x00000003	29:8:477:499	6762365	2	True				
ANR	6762433	AssignmentExpression	pp = pte1 & 0x00000003		6762365	0		=			
ANR	6762434	Identifier	pp		6762365	0					
ANR	6762435	BitAndExpression	pte1 & 0x00000003		6762365	1		&			
ANR	6762436	Identifier	pte1		6762365	0					
ANR	6762437	PrimaryExpression	0x00000003		6762365	1					
ANR	6762438	IfStatement	if ( ptem == ctx -> ptem )		6762365	3					
ANR	6762439	Condition	ptem == ctx -> ptem	31:12:514:530	6762365	0	True				
ANR	6762440	EqualityExpression	ptem == ctx -> ptem		6762365	0		==			
ANR	6762441	Identifier	ptem		6762365	0					
ANR	6762442	PtrMemberAccess	ctx -> ptem		6762365	1					
ANR	6762443	Identifier	ctx		6762365	0					
ANR	6762444	Identifier	ptem		6762365	1					
ANR	6762445	CompoundStatement		27:31:395:395	6762365	1					
ANR	6762446	Statement	if	33:12:548:549	6762365	0	True				
ANR	6762447	Statement	(	33:15:551:551	6762365	1	True				
ANR	6762448	Statement	ctx	33:16:552:554	6762365	2	True				
ANR	6762449	Statement	->	33:19:555:556	6762365	3	True				
ANR	6762450	Statement	raddr	33:21:557:561	6762365	4	True				
ANR	6762451	Statement	!=	33:27:563:564	6762365	5	True				
ANR	6762452	Statement	(	33:30:566:566	6762365	6	True				
ANR	6762453	Statement	hwaddr	33:31:567:572	6762365	7	True				
ANR	6762454	Statement	)	33:37:573:573	6762365	8	True				
ANR	6762455	Statement	-	33:38:574:574	6762365	9	True				
ANR	6762456	Statement	1UL	33:39:575:577	6762365	10	True				
ANR	6762457	Statement	L	33:42:578:578	6762365	11	True				
ANR	6762458	Statement	)	33:43:579:579	6762365	12	True				
ANR	6762459	CompoundStatement		29:45:443:443	6762365	13					
ANR	6762460	IfStatement	if ( ( ctx -> raddr & mmask ) != ( pte1 & mmask ) )		6762365	0					
ANR	6762461	Condition	( ctx -> raddr & mmask ) != ( pte1 & mmask )	37:20:672:709	6762365	0	True				
ANR	6762462	EqualityExpression	( ctx -> raddr & mmask ) != ( pte1 & mmask )		6762365	0		!=			
ANR	6762463	BitAndExpression	ctx -> raddr & mmask		6762365	0		&			
ANR	6762464	PtrMemberAccess	ctx -> raddr		6762365	0					
ANR	6762465	Identifier	ctx		6762365	0					
ANR	6762466	Identifier	raddr		6762365	1					
ANR	6762467	Identifier	mmask		6762365	1					
ANR	6762468	BitAndExpression	pte1 & mmask		6762365	1		&			
ANR	6762469	Identifier	pte1		6762365	0					
ANR	6762470	Identifier	mmask		6762365	1					
ANR	6762471	CompoundStatement		33:60:574:574	6762365	1					
ANR	6762472	ExpressionStatement	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"	39:20:735:764	6762365	0	True				
ANR	6762473	CallExpression	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"		6762365	0					
ANR	6762474	Callee	qemu_log		6762365	0					
ANR	6762475	Identifier	qemu_log		6762365	0					
ANR	6762476	ArgumentList	"""Bad RPN/WIMG/PP\\n"""		6762365	1					
ANR	6762477	Argument	"""Bad RPN/WIMG/PP\\n"""		6762365	0					
ANR	6762478	PrimaryExpression	"""Bad RPN/WIMG/PP\\n"""		6762365	0					
ANR	6762479	ReturnStatement	return - 3 ;	41:20:787:796	6762365	1	True				
ANR	6762480	UnaryOperationExpression	- 3		6762365	0					
ANR	6762481	UnaryOperator	-		6762365	0					
ANR	6762482	PrimaryExpression	3		6762365	1					
ANR	6762483	ExpressionStatement	"access = pp_check ( ctx -> key , pp , ctx -> nx )"	49:12:886:926	6762365	14	True				
ANR	6762484	AssignmentExpression	"access = pp_check ( ctx -> key , pp , ctx -> nx )"		6762365	0		=			
ANR	6762485	Identifier	access		6762365	0					
ANR	6762486	CallExpression	"pp_check ( ctx -> key , pp , ctx -> nx )"		6762365	1					
ANR	6762487	Callee	pp_check		6762365	0					
ANR	6762488	Identifier	pp_check		6762365	0					
ANR	6762489	ArgumentList	ctx -> key		6762365	1					
ANR	6762490	Argument	ctx -> key		6762365	0					
ANR	6762491	PtrMemberAccess	ctx -> key		6762365	0					
ANR	6762492	Identifier	ctx		6762365	0					
ANR	6762493	Identifier	key		6762365	1					
ANR	6762494	Argument	pp		6762365	1					
ANR	6762495	Identifier	pp		6762365	0					
ANR	6762496	Argument	ctx -> nx		6762365	2					
ANR	6762497	PtrMemberAccess	ctx -> nx		6762365	0					
ANR	6762498	Identifier	ctx		6762365	0					
ANR	6762499	Identifier	nx		6762365	1					
ANR	6762500	ExpressionStatement	ctx -> raddr = pte1	53:12:995:1012	6762365	15	True				
ANR	6762501	AssignmentExpression	ctx -> raddr = pte1		6762365	0		=			
ANR	6762502	PtrMemberAccess	ctx -> raddr		6762365	0					
ANR	6762503	Identifier	ctx		6762365	0					
ANR	6762504	Identifier	raddr		6762365	1					
ANR	6762505	Identifier	pte1		6762365	1					
ANR	6762506	ExpressionStatement	ctx -> prot = access	55:12:1027:1045	6762365	16	True				
ANR	6762507	AssignmentExpression	ctx -> prot = access		6762365	0		=			
ANR	6762508	PtrMemberAccess	ctx -> prot		6762365	0					
ANR	6762509	Identifier	ctx		6762365	0					
ANR	6762510	Identifier	prot		6762365	1					
ANR	6762511	Identifier	access		6762365	1					
ANR	6762512	ExpressionStatement	"ret = check_prot ( ctx -> prot , rw , type )"	57:12:1060:1097	6762365	17	True				
ANR	6762513	AssignmentExpression	"ret = check_prot ( ctx -> prot , rw , type )"		6762365	0		=			
ANR	6762514	Identifier	ret		6762365	0					
ANR	6762515	CallExpression	"check_prot ( ctx -> prot , rw , type )"		6762365	1					
ANR	6762516	Callee	check_prot		6762365	0					
ANR	6762517	Identifier	check_prot		6762365	0					
ANR	6762518	ArgumentList	ctx -> prot		6762365	1					
ANR	6762519	Argument	ctx -> prot		6762365	0					
ANR	6762520	PtrMemberAccess	ctx -> prot		6762365	0					
ANR	6762521	Identifier	ctx		6762365	0					
ANR	6762522	Identifier	prot		6762365	1					
ANR	6762523	Argument	rw		6762365	1					
ANR	6762524	Identifier	rw		6762365	0					
ANR	6762525	Argument	type		6762365	2					
ANR	6762526	Identifier	type		6762365	0					
ANR	6762527	IfStatement	if ( ret == 0 )		6762365	18					
ANR	6762528	Condition	ret == 0	59:16:1116:1123	6762365	0	True				
ANR	6762529	EqualityExpression	ret == 0		6762365	0		==			
ANR	6762530	Identifier	ret		6762365	0					
ANR	6762531	PrimaryExpression	0		6762365	1					
ANR	6762532	CompoundStatement		55:26:988:988	6762365	1					
ANR	6762533	ExpressionStatement	"LOG_MMU ( ""PTE access granted !\\n"" )"	63:16:1183:1216	6762365	0	True				
ANR	6762534	CallExpression	"LOG_MMU ( ""PTE access granted !\\n"" )"		6762365	0					
ANR	6762535	Callee	LOG_MMU		6762365	0					
ANR	6762536	Identifier	LOG_MMU		6762365	0					
ANR	6762537	ArgumentList	"""PTE access granted !\\n"""		6762365	1					
ANR	6762538	Argument	"""PTE access granted !\\n"""		6762365	0					
ANR	6762539	PrimaryExpression	"""PTE access granted !\\n"""		6762365	0					
ANR	6762540	ElseStatement	else		6762365	0					
ANR	6762541	CompoundStatement		61:19:1100:1100	6762365	0					
ANR	6762542	ExpressionStatement	"LOG_MMU ( ""PTE access rejected\\n"" )"	69:16:1303:1335	6762365	0	True				
ANR	6762543	CallExpression	"LOG_MMU ( ""PTE access rejected\\n"" )"		6762365	0					
ANR	6762544	Callee	LOG_MMU		6762365	0					
ANR	6762545	Identifier	LOG_MMU		6762365	0					
ANR	6762546	ArgumentList	"""PTE access rejected\\n"""		6762365	1					
ANR	6762547	Argument	"""PTE access rejected\\n"""		6762365	0					
ANR	6762548	PrimaryExpression	"""PTE access rejected\\n"""		6762365	0					
ANR	6762549	ReturnStatement	return ret ;	79:4:1377:1387	6762365	6	True				
ANR	6762550	Identifier	ret		6762365	0					
ANR	6762551	ReturnType	static int		6762365	1					
ANR	6762552	Identifier	pte_check_hash32		6762365	2					
ANR	6762553	ParameterList	"mmu_ctx_t * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type"		6762365	3					
ANR	6762554	Parameter	mmu_ctx_t * ctx	1:28:28:41	6762365	0	True				
ANR	6762555	ParameterType	mmu_ctx_t *		6762365	0					
ANR	6762556	Identifier	ctx		6762365	1					
ANR	6762557	Parameter	target_ulong pte0	1:44:44:60	6762365	1	True				
ANR	6762558	ParameterType	target_ulong		6762365	0					
ANR	6762559	Identifier	pte0		6762365	1					
ANR	6762560	Parameter	target_ulong pte1	3:28:92:108	6762365	2	True				
ANR	6762561	ParameterType	target_ulong		6762365	0					
ANR	6762562	Identifier	pte1		6762365	1					
ANR	6762563	Parameter	int h	3:47:111:115	6762365	3	True				
ANR	6762564	ParameterType	int		6762365	0					
ANR	6762565	Identifier	h		6762365	1					
ANR	6762566	Parameter	int rw	3:54:118:123	6762365	4	True				
ANR	6762567	ParameterType	int		6762365	0					
ANR	6762568	Identifier	rw		6762365	1					
ANR	6762569	Parameter	int type	3:62:126:133	6762365	5	True				
ANR	6762570	ParameterType	int		6762365	0					
ANR	6762571	Identifier	type		6762365	1					
ANR	6762572	CFGEntryNode	ENTRY		6762365		True				
ANR	6762573	CFGExitNode	EXIT		6762365		True				
ANR	6762574	Symbol	pp		6762365						
ANR	6762575	Symbol	ret		6762365						
ANR	6762576	Symbol	ptev		6762365						
ANR	6762577	Symbol	access		6762365						
ANR	6762578	Symbol	pte1		6762365						
ANR	6762579	Symbol	rw		6762365						
ANR	6762580	Symbol	ctx		6762365						
ANR	6762581	Symbol	check_prot		6762365						
ANR	6762582	Symbol	h		6762365						
ANR	6762583	Symbol	ctx -> key		6762365						
ANR	6762584	Symbol	mmask		6762365						
ANR	6762585	Symbol	pte_is_valid_hash32		6762365						
ANR	6762586	Symbol	type		6762365						
ANR	6762587	Symbol	ctx -> ptem		6762365						
ANR	6762588	Symbol	* ctx		6762365						
ANR	6762589	Symbol	PTE_CHECK_MASK		6762365						
ANR	6762590	Symbol	pteh		6762365						
ANR	6762591	Symbol	ctx -> prot		6762365						
ANR	6762592	Symbol	pp_check		6762365						
ANR	6762593	Symbol	ptem		6762365						
ANR	6762594	Symbol	ctx -> raddr		6762365						
ANR	6762595	Symbol	PTE_PTEM_MASK		6762365						
ANR	6762596	Symbol	pte0		6762365						
ANR	6762597	Symbol	ctx -> nx		6762365						
