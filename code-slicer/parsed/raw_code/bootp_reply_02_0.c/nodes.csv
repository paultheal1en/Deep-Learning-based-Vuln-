command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1117393	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bootp_reply_02_0.c								
ANR	1117394	Function	bootp_reply	1:0:0:5548							
ANR	1117395	FunctionDef	"bootp_reply (Slirp * slirp , const struct bootp_t * bp)"		1117394	0					
ANR	1117396	CompoundStatement		3:0:65:5548	1117394	0					
ANR	1117397	IdentifierDeclStatement	BOOTPClient * bc = NULL ;	5:4:72:94	1117394	0	True				
ANR	1117398	IdentifierDecl	* bc = NULL		1117394	0					
ANR	1117399	IdentifierDeclType	BOOTPClient *		1117394	0					
ANR	1117400	Identifier	bc		1117394	1					
ANR	1117401	AssignmentExpression	* bc = NULL		1117394	2		=			
ANR	1117402	Identifier	NULL		1117394	0					
ANR	1117403	Identifier	NULL		1117394	1					
ANR	1117404	IdentifierDeclStatement	struct mbuf * m ;	7:4:101:115	1117394	1	True				
ANR	1117405	IdentifierDecl	* m		1117394	0					
ANR	1117406	IdentifierDeclType	struct mbuf *		1117394	0					
ANR	1117407	Identifier	m		1117394	1					
ANR	1117408	IdentifierDeclStatement	struct bootp_t * rbp ;	9:4:122:141	1117394	2	True				
ANR	1117409	IdentifierDecl	* rbp		1117394	0					
ANR	1117410	IdentifierDeclType	struct bootp_t *		1117394	0					
ANR	1117411	Identifier	rbp		1117394	1					
ANR	1117412	IdentifierDeclStatement	"struct sockaddr_in saddr , daddr ;"	11:4:148:179	1117394	3	True				
ANR	1117413	IdentifierDecl	saddr		1117394	0					
ANR	1117414	IdentifierDeclType	struct sockaddr_in		1117394	0					
ANR	1117415	Identifier	saddr		1117394	1					
ANR	1117416	IdentifierDecl	daddr		1117394	1					
ANR	1117417	IdentifierDeclType	struct sockaddr_in		1117394	0					
ANR	1117418	Identifier	daddr		1117394	1					
ANR	1117419	IdentifierDeclStatement	struct in_addr preq_addr ;	13:4:186:210	1117394	4	True				
ANR	1117420	IdentifierDecl	preq_addr		1117394	0					
ANR	1117421	IdentifierDeclType	struct in_addr		1117394	0					
ANR	1117422	Identifier	preq_addr		1117394	1					
ANR	1117423	IdentifierDeclStatement	"int dhcp_msg_type , val ;"	15:4:217:239	1117394	5	True				
ANR	1117424	IdentifierDecl	dhcp_msg_type		1117394	0					
ANR	1117425	IdentifierDeclType	int		1117394	0					
ANR	1117426	Identifier	dhcp_msg_type		1117394	1					
ANR	1117427	IdentifierDecl	val		1117394	1					
ANR	1117428	IdentifierDeclType	int		1117394	0					
ANR	1117429	Identifier	val		1117394	1					
ANR	1117430	IdentifierDeclStatement	uint8_t * q ;	17:4:246:256	1117394	6	True				
ANR	1117431	IdentifierDecl	* q		1117394	0					
ANR	1117432	IdentifierDeclType	uint8_t *		1117394	0					
ANR	1117433	Identifier	q		1117394	1					
ANR	1117434	IdentifierDeclStatement	uint8_t client_ethaddr [ ETH_ALEN ] ;	19:4:263:295	1117394	7	True				
ANR	1117435	IdentifierDecl	client_ethaddr [ ETH_ALEN ]		1117394	0					
ANR	1117436	IdentifierDeclType	uint8_t [ ETH_ALEN ]		1117394	0					
ANR	1117437	Identifier	client_ethaddr		1117394	1					
ANR	1117438	Identifier	ETH_ALEN		1117394	2					
ANR	1117439	ExpressionStatement	"dhcp_decode ( bp , & dhcp_msg_type , & preq_addr )"	25:4:343:386	1117394	8	True				
ANR	1117440	CallExpression	"dhcp_decode ( bp , & dhcp_msg_type , & preq_addr )"		1117394	0					
ANR	1117441	Callee	dhcp_decode		1117394	0					
ANR	1117442	Identifier	dhcp_decode		1117394	0					
ANR	1117443	ArgumentList	bp		1117394	1					
ANR	1117444	Argument	bp		1117394	0					
ANR	1117445	Identifier	bp		1117394	0					
ANR	1117446	Argument	& dhcp_msg_type		1117394	1					
ANR	1117447	UnaryOperationExpression	& dhcp_msg_type		1117394	0					
ANR	1117448	UnaryOperator	&		1117394	0					
ANR	1117449	Identifier	dhcp_msg_type		1117394	1					
ANR	1117450	Argument	& preq_addr		1117394	2					
ANR	1117451	UnaryOperationExpression	& preq_addr		1117394	0					
ANR	1117452	UnaryOperator	&		1117394	0					
ANR	1117453	Identifier	preq_addr		1117394	1					
ANR	1117454	ExpressionStatement	"DPRINTF ( ""bootp packet op=%d msgtype=%d"" , bp -> bp_op , dhcp_msg_type )"	27:4:393:459	1117394	9	True				
ANR	1117455	CallExpression	"DPRINTF ( ""bootp packet op=%d msgtype=%d"" , bp -> bp_op , dhcp_msg_type )"		1117394	0					
ANR	1117456	Callee	DPRINTF		1117394	0					
ANR	1117457	Identifier	DPRINTF		1117394	0					
ANR	1117458	ArgumentList	"""bootp packet op=%d msgtype=%d"""		1117394	1					
ANR	1117459	Argument	"""bootp packet op=%d msgtype=%d"""		1117394	0					
ANR	1117460	PrimaryExpression	"""bootp packet op=%d msgtype=%d"""		1117394	0					
ANR	1117461	Argument	bp -> bp_op		1117394	1					
ANR	1117462	PtrMemberAccess	bp -> bp_op		1117394	0					
ANR	1117463	Identifier	bp		1117394	0					
ANR	1117464	Identifier	bp_op		1117394	1					
ANR	1117465	Argument	dhcp_msg_type		1117394	2					
ANR	1117466	Identifier	dhcp_msg_type		1117394	0					
ANR	1117467	IfStatement	if ( preq_addr . s_addr != htonl ( 0L ) )		1117394	10					
ANR	1117468	Condition	preq_addr . s_addr != htonl ( 0L )	29:8:470:498	1117394	0	True				
ANR	1117469	EqualityExpression	preq_addr . s_addr != htonl ( 0L )		1117394	0		!=			
ANR	1117470	MemberAccess	preq_addr . s_addr		1117394	0					
ANR	1117471	Identifier	preq_addr		1117394	0					
ANR	1117472	Identifier	s_addr		1117394	1					
ANR	1117473	CallExpression	htonl ( 0L )		1117394	1					
ANR	1117474	Callee	htonl		1117394	0					
ANR	1117475	Identifier	htonl		1117394	0					
ANR	1117476	ArgumentList	0L		1117394	1					
ANR	1117477	Argument	0L		1117394	0					
ANR	1117478	PrimaryExpression	0L		1117394	0					
ANR	1117479	Statement	DPRINTF	31:8:510:516	1117394	1	True				
ANR	1117480	ElseStatement	else		1117394	0					
ANR	1117481	ExpressionStatement	"DPRINTF ( ""\\n"" )"	35:8:592:605	1117394	0	True				
ANR	1117482	CallExpression	"DPRINTF ( ""\\n"" )"		1117394	0					
ANR	1117483	Callee	DPRINTF		1117394	0					
ANR	1117484	Identifier	DPRINTF		1117394	0					
ANR	1117485	ArgumentList	"""\\n"""		1117394	1					
ANR	1117486	Argument	"""\\n"""		1117394	0					
ANR	1117487	PrimaryExpression	"""\\n"""		1117394	0					
ANR	1117488	Statement	(	31:15:517:517	1117394	11	True				
ANR	1117489	Statement	""" req_addr=%08"""	31:16:518:532	1117394	12	True				
ANR	1117490	Statement	PRIx32	31:32:534:539	1117394	13	True				
ANR	1117491	Statement	"""\\n"""	31:39:541:544	1117394	14	True				
ANR	1117492	Statement	","	31:43:545:545	1117394	15	True				
ANR	1117493	Statement	ntohl	31:45:547:551	1117394	16	True				
ANR	1117494	Statement	(	31:50:552:552	1117394	17	True				
ANR	1117495	Statement	preq_addr	31:51:553:561	1117394	18	True				
ANR	1117496	Statement	.	31:60:562:562	1117394	19	True				
ANR	1117497	Statement	s_addr	31:61:563:568	1117394	20	True				
ANR	1117498	Statement	)	31:67:569:569	1117394	21	True				
ANR	1117499	Statement	)	31:68:570:570	1117394	22	True				
ANR	1117500	ExpressionStatement		31:69:571:571	1117394	23	True				
ANR	1117501	IfStatement	if ( dhcp_msg_type == 0 )		1117394	24					
ANR	1117502	Condition	dhcp_msg_type == 0	39:8:618:635	1117394	0	True				
ANR	1117503	EqualityExpression	dhcp_msg_type == 0		1117394	0		==			
ANR	1117504	Identifier	dhcp_msg_type		1117394	0					
ANR	1117505	PrimaryExpression	0		1117394	1					
ANR	1117506	ExpressionStatement	dhcp_msg_type = DHCPREQUEST	41:8:647:674	1117394	1	True				
ANR	1117507	AssignmentExpression	dhcp_msg_type = DHCPREQUEST		1117394	0		=			
ANR	1117508	Identifier	dhcp_msg_type		1117394	0					
ANR	1117509	Identifier	DHCPREQUEST		1117394	1					
ANR	1117510	IfStatement	if ( dhcp_msg_type != DHCPDISCOVER && dhcp_msg_type != DHCPREQUEST )		1117394	25					
ANR	1117511	Condition	dhcp_msg_type != DHCPDISCOVER && dhcp_msg_type != DHCPREQUEST	45:8:727:796	1117394	0	True				
ANR	1117512	AndExpression	dhcp_msg_type != DHCPDISCOVER && dhcp_msg_type != DHCPREQUEST		1117394	0		&&			
ANR	1117513	EqualityExpression	dhcp_msg_type != DHCPDISCOVER		1117394	0		!=			
ANR	1117514	Identifier	dhcp_msg_type		1117394	0					
ANR	1117515	Identifier	DHCPDISCOVER		1117394	1					
ANR	1117516	EqualityExpression	dhcp_msg_type != DHCPREQUEST		1117394	1		!=			
ANR	1117517	Identifier	dhcp_msg_type		1117394	0					
ANR	1117518	Identifier	DHCPREQUEST		1117394	1					
ANR	1117519	ReturnStatement	return ;	49:8:808:814	1117394	1	True				
ANR	1117520	ExpressionStatement	"memcpy ( client_ethaddr , bp -> bp_hwaddr , ETH_ALEN )"	55:4:883:930	1117394	26	True				
ANR	1117521	CallExpression	"memcpy ( client_ethaddr , bp -> bp_hwaddr , ETH_ALEN )"		1117394	0					
ANR	1117522	Callee	memcpy		1117394	0					
ANR	1117523	Identifier	memcpy		1117394	0					
ANR	1117524	ArgumentList	client_ethaddr		1117394	1					
ANR	1117525	Argument	client_ethaddr		1117394	0					
ANR	1117526	Identifier	client_ethaddr		1117394	0					
ANR	1117527	Argument	bp -> bp_hwaddr		1117394	1					
ANR	1117528	PtrMemberAccess	bp -> bp_hwaddr		1117394	0					
ANR	1117529	Identifier	bp		1117394	0					
ANR	1117530	Identifier	bp_hwaddr		1117394	1					
ANR	1117531	Argument	ETH_ALEN		1117394	2					
ANR	1117532	Identifier	ETH_ALEN		1117394	0					
ANR	1117533	ExpressionStatement	m = m_get ( slirp )	59:4:939:955	1117394	27	True				
ANR	1117534	AssignmentExpression	m = m_get ( slirp )		1117394	0		=			
ANR	1117535	Identifier	m		1117394	0					
ANR	1117536	CallExpression	m_get ( slirp )		1117394	1					
ANR	1117537	Callee	m_get		1117394	0					
ANR	1117538	Identifier	m_get		1117394	0					
ANR	1117539	ArgumentList	slirp		1117394	1					
ANR	1117540	Argument	slirp		1117394	0					
ANR	1117541	Identifier	slirp		1117394	0					
ANR	1117542	IfStatement	if ( ! m )		1117394	28					
ANR	1117543	Condition	! m	61:8:966:967	1117394	0	True				
ANR	1117544	UnaryOperationExpression	! m		1117394	0					
ANR	1117545	UnaryOperator	!		1117394	0					
ANR	1117546	Identifier	m		1117394	1					
ANR	1117547	CompoundStatement		59:12:904:904	1117394	1					
ANR	1117548	ReturnStatement	return ;	63:8:981:987	1117394	0	True				
ANR	1117549	ExpressionStatement	m -> m_data += IF_MAXLINKHDR	67:4:1001:1027	1117394	29	True				
ANR	1117550	AssignmentExpression	m -> m_data += IF_MAXLINKHDR		1117394	0		+=			
ANR	1117551	PtrMemberAccess	m -> m_data		1117394	0					
ANR	1117552	Identifier	m		1117394	0					
ANR	1117553	Identifier	m_data		1117394	1					
ANR	1117554	Identifier	IF_MAXLINKHDR		1117394	1					
ANR	1117555	ExpressionStatement	rbp = ( struct bootp_t * ) m -> m_data	69:4:1034:1067	1117394	30	True				
ANR	1117556	AssignmentExpression	rbp = ( struct bootp_t * ) m -> m_data		1117394	0		=			
ANR	1117557	Identifier	rbp		1117394	0					
ANR	1117558	CastExpression	( struct bootp_t * ) m -> m_data		1117394	1					
ANR	1117559	CastTarget	struct bootp_t *		1117394	0					
ANR	1117560	PtrMemberAccess	m -> m_data		1117394	1					
ANR	1117561	Identifier	m		1117394	0					
ANR	1117562	Identifier	m_data		1117394	1					
ANR	1117563	ExpressionStatement	m -> m_data += sizeof ( struct udpiphdr )	71:4:1074:1110	1117394	31	True				
ANR	1117564	AssignmentExpression	m -> m_data += sizeof ( struct udpiphdr )		1117394	0		+=			
ANR	1117565	PtrMemberAccess	m -> m_data		1117394	0					
ANR	1117566	Identifier	m		1117394	0					
ANR	1117567	Identifier	m_data		1117394	1					
ANR	1117568	SizeofExpression	sizeof ( struct udpiphdr )		1117394	1					
ANR	1117569	Sizeof	sizeof		1117394	0					
ANR	1117570	SizeofOperand	struct udpiphdr		1117394	1					
ANR	1117571	ExpressionStatement	"memset ( rbp , 0 , sizeof ( struct bootp_t ) )"	73:4:1117:1155	1117394	32	True				
ANR	1117572	CallExpression	"memset ( rbp , 0 , sizeof ( struct bootp_t ) )"		1117394	0					
ANR	1117573	Callee	memset		1117394	0					
ANR	1117574	Identifier	memset		1117394	0					
ANR	1117575	ArgumentList	rbp		1117394	1					
ANR	1117576	Argument	rbp		1117394	0					
ANR	1117577	Identifier	rbp		1117394	0					
ANR	1117578	Argument	0		1117394	1					
ANR	1117579	PrimaryExpression	0		1117394	0					
ANR	1117580	Argument	sizeof ( struct bootp_t )		1117394	2					
ANR	1117581	SizeofExpression	sizeof ( struct bootp_t )		1117394	0					
ANR	1117582	Sizeof	sizeof		1117394	0					
ANR	1117583	SizeofOperand	struct bootp_t		1117394	1					
ANR	1117584	IfStatement	if ( dhcp_msg_type == DHCPDISCOVER )		1117394	33					
ANR	1117585	Condition	dhcp_msg_type == DHCPDISCOVER	77:8:1168:1196	1117394	0	True				
ANR	1117586	EqualityExpression	dhcp_msg_type == DHCPDISCOVER		1117394	0		==			
ANR	1117587	Identifier	dhcp_msg_type		1117394	0					
ANR	1117588	Identifier	DHCPDISCOVER		1117394	1					
ANR	1117589	CompoundStatement		75:39:1133:1133	1117394	1					
ANR	1117590	IfStatement	if ( preq_addr . s_addr != htonl ( 0L ) )		1117394	0					
ANR	1117591	Condition	preq_addr . s_addr != htonl ( 0L )	79:12:1214:1242	1117394	0	True				
ANR	1117592	EqualityExpression	preq_addr . s_addr != htonl ( 0L )		1117394	0		!=			
ANR	1117593	MemberAccess	preq_addr . s_addr		1117394	0					
ANR	1117594	Identifier	preq_addr		1117394	0					
ANR	1117595	Identifier	s_addr		1117394	1					
ANR	1117596	CallExpression	htonl ( 0L )		1117394	1					
ANR	1117597	Callee	htonl		1117394	0					
ANR	1117598	Identifier	htonl		1117394	0					
ANR	1117599	ArgumentList	0L		1117394	1					
ANR	1117600	Argument	0L		1117394	0					
ANR	1117601	PrimaryExpression	0L		1117394	0					
ANR	1117602	CompoundStatement		77:43:1179:1179	1117394	1					
ANR	1117603	ExpressionStatement	"bc = request_addr ( slirp , & preq_addr , client_ethaddr )"	81:12:1260:1312	1117394	0	True				
ANR	1117604	AssignmentExpression	"bc = request_addr ( slirp , & preq_addr , client_ethaddr )"		1117394	0		=			
ANR	1117605	Identifier	bc		1117394	0					
ANR	1117606	CallExpression	"request_addr ( slirp , & preq_addr , client_ethaddr )"		1117394	1					
ANR	1117607	Callee	request_addr		1117394	0					
ANR	1117608	Identifier	request_addr		1117394	0					
ANR	1117609	ArgumentList	slirp		1117394	1					
ANR	1117610	Argument	slirp		1117394	0					
ANR	1117611	Identifier	slirp		1117394	0					
ANR	1117612	Argument	& preq_addr		1117394	1					
ANR	1117613	UnaryOperationExpression	& preq_addr		1117394	0					
ANR	1117614	UnaryOperator	&		1117394	0					
ANR	1117615	Identifier	preq_addr		1117394	1					
ANR	1117616	Argument	client_ethaddr		1117394	2					
ANR	1117617	Identifier	client_ethaddr		1117394	0					
ANR	1117618	IfStatement	if ( bc )		1117394	1					
ANR	1117619	Condition	bc	83:16:1331:1332	1117394	0	True				
ANR	1117620	Identifier	bc		1117394	0					
ANR	1117621	CompoundStatement		81:20:1269:1269	1117394	1					
ANR	1117622	ExpressionStatement	daddr . sin_addr = preq_addr	85:16:1354:1380	1117394	0	True				
ANR	1117623	AssignmentExpression	daddr . sin_addr = preq_addr		1117394	0		=			
ANR	1117624	MemberAccess	daddr . sin_addr		1117394	0					
ANR	1117625	Identifier	daddr		1117394	0					
ANR	1117626	Identifier	sin_addr		1117394	1					
ANR	1117627	Identifier	preq_addr		1117394	1					
ANR	1117628	IfStatement	if ( ! bc )		1117394	1					
ANR	1117629	Condition	! bc	91:12:1421:1423	1117394	0	True				
ANR	1117630	UnaryOperationExpression	! bc		1117394	0					
ANR	1117631	UnaryOperator	!		1117394	0					
ANR	1117632	Identifier	bc		1117394	1					
ANR	1117633	CompoundStatement		89:17:1360:1360	1117394	1					
ANR	1117634	Label	new_addr :	93:9:1438:1446	1117394	0	True				
ANR	1117635	Identifier	new_addr		1117394	0					
ANR	1117636	ExpressionStatement	"bc = get_new_addr ( slirp , & daddr . sin_addr , client_ethaddr )"	95:12:1461:1518	1117394	1	True				
ANR	1117637	AssignmentExpression	"bc = get_new_addr ( slirp , & daddr . sin_addr , client_ethaddr )"		1117394	0		=			
ANR	1117638	Identifier	bc		1117394	0					
ANR	1117639	CallExpression	"get_new_addr ( slirp , & daddr . sin_addr , client_ethaddr )"		1117394	1					
ANR	1117640	Callee	get_new_addr		1117394	0					
ANR	1117641	Identifier	get_new_addr		1117394	0					
ANR	1117642	ArgumentList	slirp		1117394	1					
ANR	1117643	Argument	slirp		1117394	0					
ANR	1117644	Identifier	slirp		1117394	0					
ANR	1117645	Argument	& daddr . sin_addr		1117394	1					
ANR	1117646	UnaryOperationExpression	& daddr . sin_addr		1117394	0					
ANR	1117647	UnaryOperator	&		1117394	0					
ANR	1117648	MemberAccess	daddr . sin_addr		1117394	1					
ANR	1117649	Identifier	daddr		1117394	0					
ANR	1117650	Identifier	sin_addr		1117394	1					
ANR	1117651	Argument	client_ethaddr		1117394	2					
ANR	1117652	Identifier	client_ethaddr		1117394	0					
ANR	1117653	IfStatement	if ( ! bc )		1117394	2					
ANR	1117654	Condition	! bc	97:16:1537:1539	1117394	0	True				
ANR	1117655	UnaryOperationExpression	! bc		1117394	0					
ANR	1117656	UnaryOperator	!		1117394	0					
ANR	1117657	Identifier	bc		1117394	1					
ANR	1117658	CompoundStatement		95:21:1476:1476	1117394	1					
ANR	1117659	ExpressionStatement	"DPRINTF ( ""no address left\\n"" )"	99:16:1561:1589	1117394	0	True				
ANR	1117660	CallExpression	"DPRINTF ( ""no address left\\n"" )"		1117394	0					
ANR	1117661	Callee	DPRINTF		1117394	0					
ANR	1117662	Identifier	DPRINTF		1117394	0					
ANR	1117663	ArgumentList	"""no address left\\n"""		1117394	1					
ANR	1117664	Argument	"""no address left\\n"""		1117394	0					
ANR	1117665	PrimaryExpression	"""no address left\\n"""		1117394	0					
ANR	1117666	ReturnStatement	return ;	101:16:1608:1614	1117394	1	True				
ANR	1117667	ExpressionStatement	"memcpy ( bc -> macaddr , client_ethaddr , ETH_ALEN )"	107:8:1651:1696	1117394	2	True				
ANR	1117668	CallExpression	"memcpy ( bc -> macaddr , client_ethaddr , ETH_ALEN )"		1117394	0					
ANR	1117669	Callee	memcpy		1117394	0					
ANR	1117670	Identifier	memcpy		1117394	0					
ANR	1117671	ArgumentList	bc -> macaddr		1117394	1					
ANR	1117672	Argument	bc -> macaddr		1117394	0					
ANR	1117673	PtrMemberAccess	bc -> macaddr		1117394	0					
ANR	1117674	Identifier	bc		1117394	0					
ANR	1117675	Identifier	macaddr		1117394	1					
ANR	1117676	Argument	client_ethaddr		1117394	1					
ANR	1117677	Identifier	client_ethaddr		1117394	0					
ANR	1117678	Argument	ETH_ALEN		1117394	2					
ANR	1117679	Identifier	ETH_ALEN		1117394	0					
ANR	1117680	ElseStatement	else		1117394	0					
ANR	1117681	IfStatement	if ( preq_addr . s_addr != htonl ( 0L ) )		1117394	0					
ANR	1117682	Condition	preq_addr . s_addr != htonl ( 0L )	109:15:1714:1742	1117394	0	True				
ANR	1117683	EqualityExpression	preq_addr . s_addr != htonl ( 0L )		1117394	0		!=			
ANR	1117684	MemberAccess	preq_addr . s_addr		1117394	0					
ANR	1117685	Identifier	preq_addr		1117394	0					
ANR	1117686	Identifier	s_addr		1117394	1					
ANR	1117687	CallExpression	htonl ( 0L )		1117394	1					
ANR	1117688	Callee	htonl		1117394	0					
ANR	1117689	Identifier	htonl		1117394	0					
ANR	1117690	ArgumentList	0L		1117394	1					
ANR	1117691	Argument	0L		1117394	0					
ANR	1117692	PrimaryExpression	0L		1117394	0					
ANR	1117693	CompoundStatement		107:46:1679:1679	1117394	1					
ANR	1117694	ExpressionStatement	"bc = request_addr ( slirp , & preq_addr , client_ethaddr )"	111:8:1756:1808	1117394	0	True				
ANR	1117695	AssignmentExpression	"bc = request_addr ( slirp , & preq_addr , client_ethaddr )"		1117394	0		=			
ANR	1117696	Identifier	bc		1117394	0					
ANR	1117697	CallExpression	"request_addr ( slirp , & preq_addr , client_ethaddr )"		1117394	1					
ANR	1117698	Callee	request_addr		1117394	0					
ANR	1117699	Identifier	request_addr		1117394	0					
ANR	1117700	ArgumentList	slirp		1117394	1					
ANR	1117701	Argument	slirp		1117394	0					
ANR	1117702	Identifier	slirp		1117394	0					
ANR	1117703	Argument	& preq_addr		1117394	1					
ANR	1117704	UnaryOperationExpression	& preq_addr		1117394	0					
ANR	1117705	UnaryOperator	&		1117394	0					
ANR	1117706	Identifier	preq_addr		1117394	1					
ANR	1117707	Argument	client_ethaddr		1117394	2					
ANR	1117708	Identifier	client_ethaddr		1117394	0					
ANR	1117709	IfStatement	if ( bc )		1117394	1					
ANR	1117710	Condition	bc	113:12:1823:1824	1117394	0	True				
ANR	1117711	Identifier	bc		1117394	0					
ANR	1117712	CompoundStatement		111:16:1761:1761	1117394	1					
ANR	1117713	ExpressionStatement	daddr . sin_addr = preq_addr	115:12:1842:1868	1117394	0	True				
ANR	1117714	AssignmentExpression	daddr . sin_addr = preq_addr		1117394	0		=			
ANR	1117715	MemberAccess	daddr . sin_addr		1117394	0					
ANR	1117716	Identifier	daddr		1117394	0					
ANR	1117717	Identifier	sin_addr		1117394	1					
ANR	1117718	Identifier	preq_addr		1117394	1					
ANR	1117719	ExpressionStatement	"memcpy ( bc -> macaddr , client_ethaddr , ETH_ALEN )"	117:12:1883:1928	1117394	1	True				
ANR	1117720	CallExpression	"memcpy ( bc -> macaddr , client_ethaddr , ETH_ALEN )"		1117394	0					
ANR	1117721	Callee	memcpy		1117394	0					
ANR	1117722	Identifier	memcpy		1117394	0					
ANR	1117723	ArgumentList	bc -> macaddr		1117394	1					
ANR	1117724	Argument	bc -> macaddr		1117394	0					
ANR	1117725	PtrMemberAccess	bc -> macaddr		1117394	0					
ANR	1117726	Identifier	bc		1117394	0					
ANR	1117727	Identifier	macaddr		1117394	1					
ANR	1117728	Argument	client_ethaddr		1117394	1					
ANR	1117729	Identifier	client_ethaddr		1117394	0					
ANR	1117730	Argument	ETH_ALEN		1117394	2					
ANR	1117731	Identifier	ETH_ALEN		1117394	0					
ANR	1117732	ElseStatement	else		1117394	0					
ANR	1117733	CompoundStatement		117:15:1880:1880	1117394	0					
ANR	1117734	ExpressionStatement	daddr . sin_addr . s_addr = 0xffffffff	123:12:2017:2051	1117394	0	True				
ANR	1117735	AssignmentExpression	daddr . sin_addr . s_addr = 0xffffffff		1117394	0		=			
ANR	1117736	MemberAccess	daddr . sin_addr . s_addr		1117394	0					
ANR	1117737	MemberAccess	daddr . sin_addr		1117394	0					
ANR	1117738	Identifier	daddr		1117394	0					
ANR	1117739	Identifier	sin_addr		1117394	1					
ANR	1117740	Identifier	s_addr		1117394	1					
ANR	1117741	PrimaryExpression	0xffffffff		1117394	1					
ANR	1117742	ElseStatement	else		1117394	0					
ANR	1117743	CompoundStatement		125:11:2010:2010	1117394	0					
ANR	1117744	ExpressionStatement	"bc = find_addr ( slirp , & daddr . sin_addr , bp -> bp_hwaddr )"	129:8:2087:2140	1117394	0	True				
ANR	1117745	AssignmentExpression	"bc = find_addr ( slirp , & daddr . sin_addr , bp -> bp_hwaddr )"		1117394	0		=			
ANR	1117746	Identifier	bc		1117394	0					
ANR	1117747	CallExpression	"find_addr ( slirp , & daddr . sin_addr , bp -> bp_hwaddr )"		1117394	1					
ANR	1117748	Callee	find_addr		1117394	0					
ANR	1117749	Identifier	find_addr		1117394	0					
ANR	1117750	ArgumentList	slirp		1117394	1					
ANR	1117751	Argument	slirp		1117394	0					
ANR	1117752	Identifier	slirp		1117394	0					
ANR	1117753	Argument	& daddr . sin_addr		1117394	1					
ANR	1117754	UnaryOperationExpression	& daddr . sin_addr		1117394	0					
ANR	1117755	UnaryOperator	&		1117394	0					
ANR	1117756	MemberAccess	daddr . sin_addr		1117394	1					
ANR	1117757	Identifier	daddr		1117394	0					
ANR	1117758	Identifier	sin_addr		1117394	1					
ANR	1117759	Argument	bp -> bp_hwaddr		1117394	2					
ANR	1117760	PtrMemberAccess	bp -> bp_hwaddr		1117394	0					
ANR	1117761	Identifier	bp		1117394	0					
ANR	1117762	Identifier	bp_hwaddr		1117394	1					
ANR	1117763	IfStatement	if ( ! bc )		1117394	1					
ANR	1117764	Condition	! bc	131:12:2155:2157	1117394	0	True				
ANR	1117765	UnaryOperationExpression	! bc		1117394	0					
ANR	1117766	UnaryOperator	!		1117394	0					
ANR	1117767	Identifier	bc		1117394	1					
ANR	1117768	CompoundStatement		129:17:2094:2094	1117394	1					
ANR	1117769	GotoStatement	goto new_addr ;	137:12:2314:2327	1117394	0	True				
ANR	1117770	Identifier	new_addr		1117394	0					
ANR	1117771	ExpressionStatement	"arp_table_add ( slirp , daddr . sin_addr . s_addr , client_ethaddr )"	147:4:2402:2461	1117394	34	True				
ANR	1117772	CallExpression	"arp_table_add ( slirp , daddr . sin_addr . s_addr , client_ethaddr )"		1117394	0					
ANR	1117773	Callee	arp_table_add		1117394	0					
ANR	1117774	Identifier	arp_table_add		1117394	0					
ANR	1117775	ArgumentList	slirp		1117394	1					
ANR	1117776	Argument	slirp		1117394	0					
ANR	1117777	Identifier	slirp		1117394	0					
ANR	1117778	Argument	daddr . sin_addr . s_addr		1117394	1					
ANR	1117779	MemberAccess	daddr . sin_addr . s_addr		1117394	0					
ANR	1117780	MemberAccess	daddr . sin_addr		1117394	0					
ANR	1117781	Identifier	daddr		1117394	0					
ANR	1117782	Identifier	sin_addr		1117394	1					
ANR	1117783	Identifier	s_addr		1117394	1					
ANR	1117784	Argument	client_ethaddr		1117394	2					
ANR	1117785	Identifier	client_ethaddr		1117394	0					
ANR	1117786	ExpressionStatement	saddr . sin_addr = slirp -> vhost_addr	151:4:2470:2504	1117394	35	True				
ANR	1117787	AssignmentExpression	saddr . sin_addr = slirp -> vhost_addr		1117394	0		=			
ANR	1117788	MemberAccess	saddr . sin_addr		1117394	0					
ANR	1117789	Identifier	saddr		1117394	0					
ANR	1117790	Identifier	sin_addr		1117394	1					
ANR	1117791	PtrMemberAccess	slirp -> vhost_addr		1117394	1					
ANR	1117792	Identifier	slirp		1117394	0					
ANR	1117793	Identifier	vhost_addr		1117394	1					
ANR	1117794	ExpressionStatement	saddr . sin_port = htons ( BOOTP_SERVER )	153:4:2511:2547	1117394	36	True				
ANR	1117795	AssignmentExpression	saddr . sin_port = htons ( BOOTP_SERVER )		1117394	0		=			
ANR	1117796	MemberAccess	saddr . sin_port		1117394	0					
ANR	1117797	Identifier	saddr		1117394	0					
ANR	1117798	Identifier	sin_port		1117394	1					
ANR	1117799	CallExpression	htons ( BOOTP_SERVER )		1117394	1					
ANR	1117800	Callee	htons		1117394	0					
ANR	1117801	Identifier	htons		1117394	0					
ANR	1117802	ArgumentList	BOOTP_SERVER		1117394	1					
ANR	1117803	Argument	BOOTP_SERVER		1117394	0					
ANR	1117804	Identifier	BOOTP_SERVER		1117394	0					
ANR	1117805	ExpressionStatement	daddr . sin_port = htons ( BOOTP_CLIENT )	157:4:2556:2592	1117394	37	True				
ANR	1117806	AssignmentExpression	daddr . sin_port = htons ( BOOTP_CLIENT )		1117394	0		=			
ANR	1117807	MemberAccess	daddr . sin_port		1117394	0					
ANR	1117808	Identifier	daddr		1117394	0					
ANR	1117809	Identifier	sin_port		1117394	1					
ANR	1117810	CallExpression	htons ( BOOTP_CLIENT )		1117394	1					
ANR	1117811	Callee	htons		1117394	0					
ANR	1117812	Identifier	htons		1117394	0					
ANR	1117813	ArgumentList	BOOTP_CLIENT		1117394	1					
ANR	1117814	Argument	BOOTP_CLIENT		1117394	0					
ANR	1117815	Identifier	BOOTP_CLIENT		1117394	0					
ANR	1117816	ExpressionStatement	rbp -> bp_op = BOOTP_REPLY	161:4:2601:2625	1117394	38	True				
ANR	1117817	AssignmentExpression	rbp -> bp_op = BOOTP_REPLY		1117394	0		=			
ANR	1117818	PtrMemberAccess	rbp -> bp_op		1117394	0					
ANR	1117819	Identifier	rbp		1117394	0					
ANR	1117820	Identifier	bp_op		1117394	1					
ANR	1117821	Identifier	BOOTP_REPLY		1117394	1					
ANR	1117822	ExpressionStatement	rbp -> bp_xid = bp -> bp_xid	163:4:2632:2656	1117394	39	True				
ANR	1117823	AssignmentExpression	rbp -> bp_xid = bp -> bp_xid		1117394	0		=			
ANR	1117824	PtrMemberAccess	rbp -> bp_xid		1117394	0					
ANR	1117825	Identifier	rbp		1117394	0					
ANR	1117826	Identifier	bp_xid		1117394	1					
ANR	1117827	PtrMemberAccess	bp -> bp_xid		1117394	1					
ANR	1117828	Identifier	bp		1117394	0					
ANR	1117829	Identifier	bp_xid		1117394	1					
ANR	1117830	ExpressionStatement	rbp -> bp_htype = 1	165:4:2663:2680	1117394	40	True				
ANR	1117831	AssignmentExpression	rbp -> bp_htype = 1		1117394	0		=			
ANR	1117832	PtrMemberAccess	rbp -> bp_htype		1117394	0					
ANR	1117833	Identifier	rbp		1117394	0					
ANR	1117834	Identifier	bp_htype		1117394	1					
ANR	1117835	PrimaryExpression	1		1117394	1					
ANR	1117836	ExpressionStatement	rbp -> bp_hlen = 6	167:4:2687:2703	1117394	41	True				
ANR	1117837	AssignmentExpression	rbp -> bp_hlen = 6		1117394	0		=			
ANR	1117838	PtrMemberAccess	rbp -> bp_hlen		1117394	0					
ANR	1117839	Identifier	rbp		1117394	0					
ANR	1117840	Identifier	bp_hlen		1117394	1					
ANR	1117841	PrimaryExpression	6		1117394	1					
ANR	1117842	ExpressionStatement	"memcpy ( rbp -> bp_hwaddr , bp -> bp_hwaddr , ETH_ALEN )"	169:4:2710:2757	1117394	42	True				
ANR	1117843	CallExpression	"memcpy ( rbp -> bp_hwaddr , bp -> bp_hwaddr , ETH_ALEN )"		1117394	0					
ANR	1117844	Callee	memcpy		1117394	0					
ANR	1117845	Identifier	memcpy		1117394	0					
ANR	1117846	ArgumentList	rbp -> bp_hwaddr		1117394	1					
ANR	1117847	Argument	rbp -> bp_hwaddr		1117394	0					
ANR	1117848	PtrMemberAccess	rbp -> bp_hwaddr		1117394	0					
ANR	1117849	Identifier	rbp		1117394	0					
ANR	1117850	Identifier	bp_hwaddr		1117394	1					
ANR	1117851	Argument	bp -> bp_hwaddr		1117394	1					
ANR	1117852	PtrMemberAccess	bp -> bp_hwaddr		1117394	0					
ANR	1117853	Identifier	bp		1117394	0					
ANR	1117854	Identifier	bp_hwaddr		1117394	1					
ANR	1117855	Argument	ETH_ALEN		1117394	2					
ANR	1117856	Identifier	ETH_ALEN		1117394	0					
ANR	1117857	ExpressionStatement	rbp -> bp_yiaddr = daddr . sin_addr	173:4:2766:2797	1117394	43	True				
ANR	1117858	AssignmentExpression	rbp -> bp_yiaddr = daddr . sin_addr		1117394	0		=			
ANR	1117859	PtrMemberAccess	rbp -> bp_yiaddr		1117394	0					
ANR	1117860	Identifier	rbp		1117394	0					
ANR	1117861	Identifier	bp_yiaddr		1117394	1					
ANR	1117862	MemberAccess	daddr . sin_addr		1117394	1					
ANR	1117863	Identifier	daddr		1117394	0					
ANR	1117864	Identifier	sin_addr		1117394	1					
ANR	1117865	ExpressionStatement	rbp -> bp_siaddr = saddr . sin_addr	175:4:2828:2859	1117394	44	True				
ANR	1117866	AssignmentExpression	rbp -> bp_siaddr = saddr . sin_addr		1117394	0		=			
ANR	1117867	PtrMemberAccess	rbp -> bp_siaddr		1117394	0					
ANR	1117868	Identifier	rbp		1117394	0					
ANR	1117869	Identifier	bp_siaddr		1117394	1					
ANR	1117870	MemberAccess	saddr . sin_addr		1117394	1					
ANR	1117871	Identifier	saddr		1117394	0					
ANR	1117872	Identifier	sin_addr		1117394	1					
ANR	1117873	ExpressionStatement	q = rbp -> bp_vend	179:4:2892:2908	1117394	45	True				
ANR	1117874	AssignmentExpression	q = rbp -> bp_vend		1117394	0		=			
ANR	1117875	Identifier	q		1117394	0					
ANR	1117876	PtrMemberAccess	rbp -> bp_vend		1117394	1					
ANR	1117877	Identifier	rbp		1117394	0					
ANR	1117878	Identifier	bp_vend		1117394	1					
ANR	1117879	ExpressionStatement	"memcpy ( q , rfc1533_cookie , 4 )"	181:4:2915:2943	1117394	46	True				
ANR	1117880	CallExpression	"memcpy ( q , rfc1533_cookie , 4 )"		1117394	0					
ANR	1117881	Callee	memcpy		1117394	0					
ANR	1117882	Identifier	memcpy		1117394	0					
ANR	1117883	ArgumentList	q		1117394	1					
ANR	1117884	Argument	q		1117394	0					
ANR	1117885	Identifier	q		1117394	0					
ANR	1117886	Argument	rfc1533_cookie		1117394	1					
ANR	1117887	Identifier	rfc1533_cookie		1117394	0					
ANR	1117888	Argument	4		1117394	2					
ANR	1117889	PrimaryExpression	4		1117394	0					
ANR	1117890	ExpressionStatement	q += 4	183:4:2950:2956	1117394	47	True				
ANR	1117891	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1117892	Identifier	q		1117394	0					
ANR	1117893	PrimaryExpression	4		1117394	1					
ANR	1117894	IfStatement	if ( bc )		1117394	48					
ANR	1117895	Condition	bc	187:8:2969:2970	1117394	0	True				
ANR	1117896	Identifier	bc		1117394	0					
ANR	1117897	CompoundStatement		185:12:2907:2907	1117394	1					
ANR	1117898	Statement	DPRINTF	189:8:2984:2990	1117394	0	True				
ANR	1117899	Statement	(	189:15:2991:2991	1117394	1	True				
ANR	1117900	Statement	"""%s addr=%08"""	189:16:2992:3004	1117394	2	True				
ANR	1117901	Statement	PRIx32	189:30:3006:3011	1117394	3	True				
ANR	1117902	Statement	"""\\n"""	189:37:3013:3016	1117394	4	True				
ANR	1117903	Statement	","	189:41:3017:3017	1117394	5	True				
ANR	1117904	Statement	(	191:16:3036:3036	1117394	6	True				
ANR	1117905	Statement	dhcp_msg_type	191:17:3037:3049	1117394	7	True				
ANR	1117906	Statement	==	191:31:3051:3052	1117394	8	True				
ANR	1117907	Statement	DHCPDISCOVER	191:34:3054:3065	1117394	9	True				
ANR	1117908	Statement	)	191:46:3066:3066	1117394	10	True				
ANR	1117909	Statement	?	191:48:3068:3068	1117394	11	True				
ANR	1117910	Statement	"""offered"""	191:50:3070:3078	1117394	12	True				
ANR	1117911	Statement	:	191:60:3080:3080	1117394	13	True				
ANR	1117912	Statement	"""ack'ed"""	191:62:3082:3089	1117394	14	True				
ANR	1117913	Statement	","	191:70:3090:3090	1117394	15	True				
ANR	1117914	Statement	ntohl	193:16:3109:3113	1117394	16	True				
ANR	1117915	Statement	(	193:21:3114:3114	1117394	17	True				
ANR	1117916	Statement	daddr	193:22:3115:3119	1117394	18	True				
ANR	1117917	Statement	.	193:27:3120:3120	1117394	19	True				
ANR	1117918	Statement	sin_addr	193:28:3121:3128	1117394	20	True				
ANR	1117919	Statement	.	193:36:3129:3129	1117394	21	True				
ANR	1117920	Statement	s_addr	193:37:3130:3135	1117394	22	True				
ANR	1117921	Statement	)	193:43:3136:3136	1117394	23	True				
ANR	1117922	Statement	)	193:44:3137:3137	1117394	24	True				
ANR	1117923	ExpressionStatement		193:45:3138:3138	1117394	25	True				
ANR	1117924	IfStatement	if ( dhcp_msg_type == DHCPDISCOVER )		1117394	26					
ANR	1117925	Condition	dhcp_msg_type == DHCPDISCOVER	197:12:3155:3183	1117394	0	True				
ANR	1117926	EqualityExpression	dhcp_msg_type == DHCPDISCOVER		1117394	0		==			
ANR	1117927	Identifier	dhcp_msg_type		1117394	0					
ANR	1117928	Identifier	DHCPDISCOVER		1117394	1					
ANR	1117929	CompoundStatement		195:43:3120:3120	1117394	1					
ANR	1117930	ExpressionStatement	* q ++ = RFC2132_MSG_TYPE	199:12:3201:3224	1117394	0	True				
ANR	1117931	AssignmentExpression	* q ++ = RFC2132_MSG_TYPE		1117394	0		=			
ANR	1117932	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117933	UnaryOperator	*		1117394	0					
ANR	1117934	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117935	Identifier	q		1117394	0					
ANR	1117936	IncDec	++		1117394	1					
ANR	1117937	Identifier	RFC2132_MSG_TYPE		1117394	1					
ANR	1117938	ExpressionStatement	* q ++ = 1	201:12:3239:3247	1117394	1	True				
ANR	1117939	AssignmentExpression	* q ++ = 1		1117394	0		=			
ANR	1117940	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117941	UnaryOperator	*		1117394	0					
ANR	1117942	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117943	Identifier	q		1117394	0					
ANR	1117944	IncDec	++		1117394	1					
ANR	1117945	PrimaryExpression	1		1117394	1					
ANR	1117946	ExpressionStatement	* q ++ = DHCPOFFER	203:12:3262:3278	1117394	2	True				
ANR	1117947	AssignmentExpression	* q ++ = DHCPOFFER		1117394	0		=			
ANR	1117948	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117949	UnaryOperator	*		1117394	0					
ANR	1117950	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117951	Identifier	q		1117394	0					
ANR	1117952	IncDec	++		1117394	1					
ANR	1117953	Identifier	DHCPOFFER		1117394	1					
ANR	1117954	ElseStatement	else		1117394	0					
ANR	1117955	CompoundStatement		203:33:3248:3248	1117394	0					
ANR	1117956	ExpressionStatement	* q ++ = RFC2132_MSG_TYPE	207:12:3329:3352	1117394	0	True				
ANR	1117957	AssignmentExpression	* q ++ = RFC2132_MSG_TYPE		1117394	0		=			
ANR	1117958	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117959	UnaryOperator	*		1117394	0					
ANR	1117960	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117961	Identifier	q		1117394	0					
ANR	1117962	IncDec	++		1117394	1					
ANR	1117963	Identifier	RFC2132_MSG_TYPE		1117394	1					
ANR	1117964	ExpressionStatement	* q ++ = 1	209:12:3367:3375	1117394	1	True				
ANR	1117965	AssignmentExpression	* q ++ = 1		1117394	0		=			
ANR	1117966	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117967	UnaryOperator	*		1117394	0					
ANR	1117968	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117969	Identifier	q		1117394	0					
ANR	1117970	IncDec	++		1117394	1					
ANR	1117971	PrimaryExpression	1		1117394	1					
ANR	1117972	ExpressionStatement	* q ++ = DHCPACK	211:12:3390:3404	1117394	2	True				
ANR	1117973	AssignmentExpression	* q ++ = DHCPACK		1117394	0		=			
ANR	1117974	UnaryOperationExpression	* q ++		1117394	0					
ANR	1117975	UnaryOperator	*		1117394	0					
ANR	1117976	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1117977	Identifier	q		1117394	0					
ANR	1117978	IncDec	++		1117394	1					
ANR	1117979	Identifier	DHCPACK		1117394	1					
ANR	1117980	IfStatement	if ( slirp -> bootp_filename )		1117394	27					
ANR	1117981	Condition	slirp -> bootp_filename	217:12:3432:3452	1117394	0	True				
ANR	1117982	PtrMemberAccess	slirp -> bootp_filename		1117394	0					
ANR	1117983	Identifier	slirp		1117394	0					
ANR	1117984	Identifier	bootp_filename		1117394	1					
ANR	1117985	ExpressionStatement	"snprintf ( ( char * ) rbp -> bp_file , sizeof ( rbp -> bp_file ) , ""%s"" , slirp -> bootp_filename )"	219:12:3468:3571	1117394	1	True				
ANR	1117986	CallExpression	"snprintf ( ( char * ) rbp -> bp_file , sizeof ( rbp -> bp_file ) , ""%s"" , slirp -> bootp_filename )"		1117394	0					
ANR	1117987	Callee	snprintf		1117394	0					
ANR	1117988	Identifier	snprintf		1117394	0					
ANR	1117989	ArgumentList	( char * ) rbp -> bp_file		1117394	1					
ANR	1117990	Argument	( char * ) rbp -> bp_file		1117394	0					
ANR	1117991	CastExpression	( char * ) rbp -> bp_file		1117394	0					
ANR	1117992	CastTarget	char *		1117394	0					
ANR	1117993	PtrMemberAccess	rbp -> bp_file		1117394	1					
ANR	1117994	Identifier	rbp		1117394	0					
ANR	1117995	Identifier	bp_file		1117394	1					
ANR	1117996	Argument	sizeof ( rbp -> bp_file )		1117394	1					
ANR	1117997	SizeofExpression	sizeof ( rbp -> bp_file )		1117394	0					
ANR	1117998	Sizeof	sizeof		1117394	0					
ANR	1117999	PtrMemberAccess	rbp -> bp_file		1117394	1					
ANR	1118000	Identifier	rbp		1117394	0					
ANR	1118001	Identifier	bp_file		1117394	1					
ANR	1118002	Argument	"""%s"""		1117394	2					
ANR	1118003	PrimaryExpression	"""%s"""		1117394	0					
ANR	1118004	Argument	slirp -> bootp_filename		1117394	3					
ANR	1118005	PtrMemberAccess	slirp -> bootp_filename		1117394	0					
ANR	1118006	Identifier	slirp		1117394	0					
ANR	1118007	Identifier	bootp_filename		1117394	1					
ANR	1118008	ExpressionStatement	* q ++ = RFC2132_SRV_ID	225:8:3584:3605	1117394	28	True				
ANR	1118009	AssignmentExpression	* q ++ = RFC2132_SRV_ID		1117394	0		=			
ANR	1118010	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118011	UnaryOperator	*		1117394	0					
ANR	1118012	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118013	Identifier	q		1117394	0					
ANR	1118014	IncDec	++		1117394	1					
ANR	1118015	Identifier	RFC2132_SRV_ID		1117394	1					
ANR	1118016	ExpressionStatement	* q ++ = 4	227:8:3616:3624	1117394	29	True				
ANR	1118017	AssignmentExpression	* q ++ = 4		1117394	0		=			
ANR	1118018	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118019	UnaryOperator	*		1117394	0					
ANR	1118020	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118021	Identifier	q		1117394	0					
ANR	1118022	IncDec	++		1117394	1					
ANR	1118023	PrimaryExpression	4		1117394	1					
ANR	1118024	ExpressionStatement	"memcpy ( q , & saddr . sin_addr , 4 )"	229:8:3635:3664	1117394	30	True				
ANR	1118025	CallExpression	"memcpy ( q , & saddr . sin_addr , 4 )"		1117394	0					
ANR	1118026	Callee	memcpy		1117394	0					
ANR	1118027	Identifier	memcpy		1117394	0					
ANR	1118028	ArgumentList	q		1117394	1					
ANR	1118029	Argument	q		1117394	0					
ANR	1118030	Identifier	q		1117394	0					
ANR	1118031	Argument	& saddr . sin_addr		1117394	1					
ANR	1118032	UnaryOperationExpression	& saddr . sin_addr		1117394	0					
ANR	1118033	UnaryOperator	&		1117394	0					
ANR	1118034	MemberAccess	saddr . sin_addr		1117394	1					
ANR	1118035	Identifier	saddr		1117394	0					
ANR	1118036	Identifier	sin_addr		1117394	1					
ANR	1118037	Argument	4		1117394	2					
ANR	1118038	PrimaryExpression	4		1117394	0					
ANR	1118039	ExpressionStatement	q += 4	231:8:3675:3681	1117394	31	True				
ANR	1118040	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1118041	Identifier	q		1117394	0					
ANR	1118042	PrimaryExpression	4		1117394	1					
ANR	1118043	ExpressionStatement	* q ++ = RFC1533_NETMASK	235:8:3694:3716	1117394	32	True				
ANR	1118044	AssignmentExpression	* q ++ = RFC1533_NETMASK		1117394	0		=			
ANR	1118045	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118046	UnaryOperator	*		1117394	0					
ANR	1118047	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118048	Identifier	q		1117394	0					
ANR	1118049	IncDec	++		1117394	1					
ANR	1118050	Identifier	RFC1533_NETMASK		1117394	1					
ANR	1118051	ExpressionStatement	* q ++ = 4	237:8:3727:3735	1117394	33	True				
ANR	1118052	AssignmentExpression	* q ++ = 4		1117394	0		=			
ANR	1118053	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118054	UnaryOperator	*		1117394	0					
ANR	1118055	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118056	Identifier	q		1117394	0					
ANR	1118057	IncDec	++		1117394	1					
ANR	1118058	PrimaryExpression	4		1117394	1					
ANR	1118059	ExpressionStatement	"memcpy ( q , & slirp -> vnetwork_mask , 4 )"	239:8:3746:3781	1117394	34	True				
ANR	1118060	CallExpression	"memcpy ( q , & slirp -> vnetwork_mask , 4 )"		1117394	0					
ANR	1118061	Callee	memcpy		1117394	0					
ANR	1118062	Identifier	memcpy		1117394	0					
ANR	1118063	ArgumentList	q		1117394	1					
ANR	1118064	Argument	q		1117394	0					
ANR	1118065	Identifier	q		1117394	0					
ANR	1118066	Argument	& slirp -> vnetwork_mask		1117394	1					
ANR	1118067	UnaryOperationExpression	& slirp -> vnetwork_mask		1117394	0					
ANR	1118068	UnaryOperator	&		1117394	0					
ANR	1118069	PtrMemberAccess	slirp -> vnetwork_mask		1117394	1					
ANR	1118070	Identifier	slirp		1117394	0					
ANR	1118071	Identifier	vnetwork_mask		1117394	1					
ANR	1118072	Argument	4		1117394	2					
ANR	1118073	PrimaryExpression	4		1117394	0					
ANR	1118074	ExpressionStatement	q += 4	241:8:3792:3798	1117394	35	True				
ANR	1118075	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1118076	Identifier	q		1117394	0					
ANR	1118077	PrimaryExpression	4		1117394	1					
ANR	1118078	IfStatement	if ( ! slirp -> restricted )		1117394	36					
ANR	1118079	Condition	! slirp -> restricted	245:12:3815:3832	1117394	0	True				
ANR	1118080	UnaryOperationExpression	! slirp -> restricted		1117394	0					
ANR	1118081	UnaryOperator	!		1117394	0					
ANR	1118082	PtrMemberAccess	slirp -> restricted		1117394	1					
ANR	1118083	Identifier	slirp		1117394	0					
ANR	1118084	Identifier	restricted		1117394	1					
ANR	1118085	CompoundStatement		243:32:3769:3769	1117394	1					
ANR	1118086	ExpressionStatement	* q ++ = RFC1533_GATEWAY	247:12:3850:3872	1117394	0	True				
ANR	1118087	AssignmentExpression	* q ++ = RFC1533_GATEWAY		1117394	0		=			
ANR	1118088	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118089	UnaryOperator	*		1117394	0					
ANR	1118090	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118091	Identifier	q		1117394	0					
ANR	1118092	IncDec	++		1117394	1					
ANR	1118093	Identifier	RFC1533_GATEWAY		1117394	1					
ANR	1118094	ExpressionStatement	* q ++ = 4	249:12:3887:3895	1117394	1	True				
ANR	1118095	AssignmentExpression	* q ++ = 4		1117394	0		=			
ANR	1118096	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118097	UnaryOperator	*		1117394	0					
ANR	1118098	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118099	Identifier	q		1117394	0					
ANR	1118100	IncDec	++		1117394	1					
ANR	1118101	PrimaryExpression	4		1117394	1					
ANR	1118102	ExpressionStatement	"memcpy ( q , & saddr . sin_addr , 4 )"	251:12:3910:3939	1117394	2	True				
ANR	1118103	CallExpression	"memcpy ( q , & saddr . sin_addr , 4 )"		1117394	0					
ANR	1118104	Callee	memcpy		1117394	0					
ANR	1118105	Identifier	memcpy		1117394	0					
ANR	1118106	ArgumentList	q		1117394	1					
ANR	1118107	Argument	q		1117394	0					
ANR	1118108	Identifier	q		1117394	0					
ANR	1118109	Argument	& saddr . sin_addr		1117394	1					
ANR	1118110	UnaryOperationExpression	& saddr . sin_addr		1117394	0					
ANR	1118111	UnaryOperator	&		1117394	0					
ANR	1118112	MemberAccess	saddr . sin_addr		1117394	1					
ANR	1118113	Identifier	saddr		1117394	0					
ANR	1118114	Identifier	sin_addr		1117394	1					
ANR	1118115	Argument	4		1117394	2					
ANR	1118116	PrimaryExpression	4		1117394	0					
ANR	1118117	ExpressionStatement	q += 4	253:12:3954:3960	1117394	3	True				
ANR	1118118	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1118119	Identifier	q		1117394	0					
ANR	1118120	PrimaryExpression	4		1117394	1					
ANR	1118121	ExpressionStatement	* q ++ = RFC1533_DNS	257:12:3977:3995	1117394	4	True				
ANR	1118122	AssignmentExpression	* q ++ = RFC1533_DNS		1117394	0		=			
ANR	1118123	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118124	UnaryOperator	*		1117394	0					
ANR	1118125	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118126	Identifier	q		1117394	0					
ANR	1118127	IncDec	++		1117394	1					
ANR	1118128	Identifier	RFC1533_DNS		1117394	1					
ANR	1118129	ExpressionStatement	* q ++ = 4	259:12:4010:4018	1117394	5	True				
ANR	1118130	AssignmentExpression	* q ++ = 4		1117394	0		=			
ANR	1118131	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118132	UnaryOperator	*		1117394	0					
ANR	1118133	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118134	Identifier	q		1117394	0					
ANR	1118135	IncDec	++		1117394	1					
ANR	1118136	PrimaryExpression	4		1117394	1					
ANR	1118137	ExpressionStatement	"memcpy ( q , & slirp -> vnameserver_addr , 4 )"	261:12:4033:4071	1117394	6	True				
ANR	1118138	CallExpression	"memcpy ( q , & slirp -> vnameserver_addr , 4 )"		1117394	0					
ANR	1118139	Callee	memcpy		1117394	0					
ANR	1118140	Identifier	memcpy		1117394	0					
ANR	1118141	ArgumentList	q		1117394	1					
ANR	1118142	Argument	q		1117394	0					
ANR	1118143	Identifier	q		1117394	0					
ANR	1118144	Argument	& slirp -> vnameserver_addr		1117394	1					
ANR	1118145	UnaryOperationExpression	& slirp -> vnameserver_addr		1117394	0					
ANR	1118146	UnaryOperator	&		1117394	0					
ANR	1118147	PtrMemberAccess	slirp -> vnameserver_addr		1117394	1					
ANR	1118148	Identifier	slirp		1117394	0					
ANR	1118149	Identifier	vnameserver_addr		1117394	1					
ANR	1118150	Argument	4		1117394	2					
ANR	1118151	PrimaryExpression	4		1117394	0					
ANR	1118152	ExpressionStatement	q += 4	263:12:4086:4092	1117394	7	True				
ANR	1118153	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1118154	Identifier	q		1117394	0					
ANR	1118155	PrimaryExpression	4		1117394	1					
ANR	1118156	ExpressionStatement	* q ++ = RFC2132_LEASE_TIME	269:8:4116:4141	1117394	37	True				
ANR	1118157	AssignmentExpression	* q ++ = RFC2132_LEASE_TIME		1117394	0		=			
ANR	1118158	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118159	UnaryOperator	*		1117394	0					
ANR	1118160	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118161	Identifier	q		1117394	0					
ANR	1118162	IncDec	++		1117394	1					
ANR	1118163	Identifier	RFC2132_LEASE_TIME		1117394	1					
ANR	1118164	ExpressionStatement	* q ++ = 4	271:8:4152:4160	1117394	38	True				
ANR	1118165	AssignmentExpression	* q ++ = 4		1117394	0		=			
ANR	1118166	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118167	UnaryOperator	*		1117394	0					
ANR	1118168	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118169	Identifier	q		1117394	0					
ANR	1118170	IncDec	++		1117394	1					
ANR	1118171	PrimaryExpression	4		1117394	1					
ANR	1118172	ExpressionStatement	val = htonl ( LEASE_TIME )	273:8:4171:4194	1117394	39	True				
ANR	1118173	AssignmentExpression	val = htonl ( LEASE_TIME )		1117394	0		=			
ANR	1118174	Identifier	val		1117394	0					
ANR	1118175	CallExpression	htonl ( LEASE_TIME )		1117394	1					
ANR	1118176	Callee	htonl		1117394	0					
ANR	1118177	Identifier	htonl		1117394	0					
ANR	1118178	ArgumentList	LEASE_TIME		1117394	1					
ANR	1118179	Argument	LEASE_TIME		1117394	0					
ANR	1118180	Identifier	LEASE_TIME		1117394	0					
ANR	1118181	ExpressionStatement	"memcpy ( q , & val , 4 )"	275:8:4205:4223	1117394	40	True				
ANR	1118182	CallExpression	"memcpy ( q , & val , 4 )"		1117394	0					
ANR	1118183	Callee	memcpy		1117394	0					
ANR	1118184	Identifier	memcpy		1117394	0					
ANR	1118185	ArgumentList	q		1117394	1					
ANR	1118186	Argument	q		1117394	0					
ANR	1118187	Identifier	q		1117394	0					
ANR	1118188	Argument	& val		1117394	1					
ANR	1118189	UnaryOperationExpression	& val		1117394	0					
ANR	1118190	UnaryOperator	&		1117394	0					
ANR	1118191	Identifier	val		1117394	1					
ANR	1118192	Argument	4		1117394	2					
ANR	1118193	PrimaryExpression	4		1117394	0					
ANR	1118194	ExpressionStatement	q += 4	277:8:4234:4240	1117394	41	True				
ANR	1118195	AssignmentExpression	q += 4		1117394	0		+=			
ANR	1118196	Identifier	q		1117394	0					
ANR	1118197	PrimaryExpression	4		1117394	1					
ANR	1118198	IfStatement	if ( * slirp -> client_hostname )		1117394	42					
ANR	1118199	Condition	* slirp -> client_hostname	281:12:4257:4279	1117394	0	True				
ANR	1118200	UnaryOperationExpression	* slirp -> client_hostname		1117394	0					
ANR	1118201	UnaryOperator	*		1117394	0					
ANR	1118202	PtrMemberAccess	slirp -> client_hostname		1117394	1					
ANR	1118203	Identifier	slirp		1117394	0					
ANR	1118204	Identifier	client_hostname		1117394	1					
ANR	1118205	CompoundStatement		279:37:4216:4216	1117394	1					
ANR	1118206	ExpressionStatement	val = strlen ( slirp -> client_hostname )	283:12:4297:4333	1117394	0	True				
ANR	1118207	AssignmentExpression	val = strlen ( slirp -> client_hostname )		1117394	0		=			
ANR	1118208	Identifier	val		1117394	0					
ANR	1118209	CallExpression	strlen ( slirp -> client_hostname )		1117394	1					
ANR	1118210	Callee	strlen		1117394	0					
ANR	1118211	Identifier	strlen		1117394	0					
ANR	1118212	ArgumentList	slirp -> client_hostname		1117394	1					
ANR	1118213	Argument	slirp -> client_hostname		1117394	0					
ANR	1118214	PtrMemberAccess	slirp -> client_hostname		1117394	0					
ANR	1118215	Identifier	slirp		1117394	0					
ANR	1118216	Identifier	client_hostname		1117394	1					
ANR	1118217	ExpressionStatement	* q ++ = RFC1533_HOSTNAME	285:12:4348:4371	1117394	1	True				
ANR	1118218	AssignmentExpression	* q ++ = RFC1533_HOSTNAME		1117394	0		=			
ANR	1118219	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118220	UnaryOperator	*		1117394	0					
ANR	1118221	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118222	Identifier	q		1117394	0					
ANR	1118223	IncDec	++		1117394	1					
ANR	1118224	Identifier	RFC1533_HOSTNAME		1117394	1					
ANR	1118225	ExpressionStatement	* q ++ = val	287:12:4386:4396	1117394	2	True				
ANR	1118226	AssignmentExpression	* q ++ = val		1117394	0		=			
ANR	1118227	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118228	UnaryOperator	*		1117394	0					
ANR	1118229	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118230	Identifier	q		1117394	0					
ANR	1118231	IncDec	++		1117394	1					
ANR	1118232	Identifier	val		1117394	1					
ANR	1118233	ExpressionStatement	"memcpy ( q , slirp -> client_hostname , val )"	289:12:4411:4449	1117394	3	True				
ANR	1118234	CallExpression	"memcpy ( q , slirp -> client_hostname , val )"		1117394	0					
ANR	1118235	Callee	memcpy		1117394	0					
ANR	1118236	Identifier	memcpy		1117394	0					
ANR	1118237	ArgumentList	q		1117394	1					
ANR	1118238	Argument	q		1117394	0					
ANR	1118239	Identifier	q		1117394	0					
ANR	1118240	Argument	slirp -> client_hostname		1117394	1					
ANR	1118241	PtrMemberAccess	slirp -> client_hostname		1117394	0					
ANR	1118242	Identifier	slirp		1117394	0					
ANR	1118243	Identifier	client_hostname		1117394	1					
ANR	1118244	Argument	val		1117394	2					
ANR	1118245	Identifier	val		1117394	0					
ANR	1118246	ExpressionStatement	q += val	291:12:4464:4472	1117394	4	True				
ANR	1118247	AssignmentExpression	q += val		1117394	0		+=			
ANR	1118248	Identifier	q		1117394	0					
ANR	1118249	Identifier	val		1117394	1					
ANR	1118250	IfStatement	if ( slirp -> vdnssearch )		1117394	43					
ANR	1118251	Condition	slirp -> vdnssearch	297:12:4500:4516	1117394	0	True				
ANR	1118252	PtrMemberAccess	slirp -> vdnssearch		1117394	0					
ANR	1118253	Identifier	slirp		1117394	0					
ANR	1118254	Identifier	vdnssearch		1117394	1					
ANR	1118255	CompoundStatement		297:12:4468:4528	1117394	1					
ANR	1118256	IdentifierDeclStatement	size_t spaceleft = sizeof ( rbp -> bp_vend ) - ( q - rbp -> bp_vend ) ;	299:12:4534:4594	1117394	0	True				
ANR	1118257	IdentifierDecl	spaceleft = sizeof ( rbp -> bp_vend ) - ( q - rbp -> bp_vend )		1117394	0					
ANR	1118258	IdentifierDeclType	size_t		1117394	0					
ANR	1118259	Identifier	spaceleft		1117394	1					
ANR	1118260	AssignmentExpression	spaceleft = sizeof ( rbp -> bp_vend ) - ( q - rbp -> bp_vend )		1117394	2		=			
ANR	1118261	Identifier	spaceleft		1117394	0					
ANR	1118262	AdditiveExpression	sizeof ( rbp -> bp_vend ) - ( q - rbp -> bp_vend )		1117394	1		-			
ANR	1118263	SizeofExpression	sizeof ( rbp -> bp_vend )		1117394	0					
ANR	1118264	Sizeof	sizeof		1117394	0					
ANR	1118265	PtrMemberAccess	rbp -> bp_vend		1117394	1					
ANR	1118266	Identifier	rbp		1117394	0					
ANR	1118267	Identifier	bp_vend		1117394	1					
ANR	1118268	AdditiveExpression	q - rbp -> bp_vend		1117394	1		-			
ANR	1118269	Identifier	q		1117394	0					
ANR	1118270	PtrMemberAccess	rbp -> bp_vend		1117394	1					
ANR	1118271	Identifier	rbp		1117394	0					
ANR	1118272	Identifier	bp_vend		1117394	1					
ANR	1118273	ExpressionStatement	val = slirp -> vdnssearch_len	301:12:4609:4636	1117394	1	True				
ANR	1118274	AssignmentExpression	val = slirp -> vdnssearch_len		1117394	0		=			
ANR	1118275	Identifier	val		1117394	0					
ANR	1118276	PtrMemberAccess	slirp -> vdnssearch_len		1117394	1					
ANR	1118277	Identifier	slirp		1117394	0					
ANR	1118278	Identifier	vdnssearch_len		1117394	1					
ANR	1118279	IfStatement	if ( val + 1 > spaceleft )		1117394	2					
ANR	1118280	Condition	val + 1 > spaceleft	303:16:4655:4673	1117394	0	True				
ANR	1118281	RelationalExpression	val + 1 > spaceleft		1117394	0		>			
ANR	1118282	AdditiveExpression	val + 1		1117394	0		+			
ANR	1118283	Identifier	val		1117394	0					
ANR	1118284	PrimaryExpression	1		1117394	1					
ANR	1118285	Identifier	spaceleft		1117394	1					
ANR	1118286	CompoundStatement		301:37:4610:4610	1117394	1					
ANR	1118287	Statement	g_warning	305:16:4695:4703	1117394	0	True				
ANR	1118288	Statement	(	305:25:4704:4704	1117394	1	True				
ANR	1118289	Statement	"""DHCP packet size exceeded, """	305:26:4705:4733	1117394	2	True				
ANR	1118290	Statement	"""omitting domain-search option."""	307:20:4756:4787	1117394	3	True				
ANR	1118291	Statement	)	307:52:4788:4788	1117394	4	True				
ANR	1118292	ExpressionStatement		307:53:4789:4789	1117394	5	True				
ANR	1118293	ElseStatement	else		1117394	0					
ANR	1118294	CompoundStatement		307:19:4745:4745	1117394	0					
ANR	1118295	ExpressionStatement	"memcpy ( q , slirp -> vdnssearch , val )"	311:16:4830:4863	1117394	0	True				
ANR	1118296	CallExpression	"memcpy ( q , slirp -> vdnssearch , val )"		1117394	0					
ANR	1118297	Callee	memcpy		1117394	0					
ANR	1118298	Identifier	memcpy		1117394	0					
ANR	1118299	ArgumentList	q		1117394	1					
ANR	1118300	Argument	q		1117394	0					
ANR	1118301	Identifier	q		1117394	0					
ANR	1118302	Argument	slirp -> vdnssearch		1117394	1					
ANR	1118303	PtrMemberAccess	slirp -> vdnssearch		1117394	0					
ANR	1118304	Identifier	slirp		1117394	0					
ANR	1118305	Identifier	vdnssearch		1117394	1					
ANR	1118306	Argument	val		1117394	2					
ANR	1118307	Identifier	val		1117394	0					
ANR	1118308	ExpressionStatement	q += val	313:16:4882:4890	1117394	1	True				
ANR	1118309	AssignmentExpression	q += val		1117394	0		+=			
ANR	1118310	Identifier	q		1117394	0					
ANR	1118311	Identifier	val		1117394	1					
ANR	1118312	ElseStatement	else		1117394	0					
ANR	1118313	CompoundStatement		319:15:4882:4938	1117394	0					
ANR	1118314	Statement	static	321:8:4941:4946	1117394	0	True				
ANR	1118315	IdentifierDeclStatement	"const char nak_msg [ ] = ""requested address not available"" ;"	321:15:4948:5004	1117394	1	True				
ANR	1118316	IdentifierDecl	"nak_msg [ ] = ""requested address not available"""		1117394	0					
ANR	1118317	IdentifierDeclType	const char [ ]		1117394	0					
ANR	1118318	Identifier	nak_msg		1117394	1					
ANR	1118319	AssignmentExpression	"nak_msg [ ] = ""requested address not available"""		1117394	2		=			
ANR	1118320	Identifier	nak_msg		1117394	0					
ANR	1118321	PrimaryExpression	"""requested address not available"""		1117394	1					
ANR	1118322	Statement	DPRINTF	325:8:5017:5023	1117394	2	True				
ANR	1118323	Statement	(	325:15:5024:5024	1117394	3	True				
ANR	1118324	Statement	"""nak'ed addr=%08"""	325:16:5025:5041	1117394	4	True				
ANR	1118325	Statement	PRIx32	325:34:5043:5048	1117394	5	True				
ANR	1118326	Statement	"""\\n"""	325:41:5050:5053	1117394	6	True				
ANR	1118327	Statement	","	325:45:5054:5054	1117394	7	True				
ANR	1118328	Statement	ntohl	325:47:5056:5060	1117394	8	True				
ANR	1118329	Statement	(	325:52:5061:5061	1117394	9	True				
ANR	1118330	Statement	preq_addr	325:53:5062:5070	1117394	10	True				
ANR	1118331	Statement	.	325:62:5071:5071	1117394	11	True				
ANR	1118332	Statement	s_addr	325:63:5072:5077	1117394	12	True				
ANR	1118333	Statement	)	325:69:5078:5078	1117394	13	True				
ANR	1118334	Statement	)	325:70:5079:5079	1117394	14	True				
ANR	1118335	ExpressionStatement		325:71:5080:5080	1117394	15	True				
ANR	1118336	ExpressionStatement	* q ++ = RFC2132_MSG_TYPE	329:8:5093:5116	1117394	16	True				
ANR	1118337	AssignmentExpression	* q ++ = RFC2132_MSG_TYPE		1117394	0		=			
ANR	1118338	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118339	UnaryOperator	*		1117394	0					
ANR	1118340	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118341	Identifier	q		1117394	0					
ANR	1118342	IncDec	++		1117394	1					
ANR	1118343	Identifier	RFC2132_MSG_TYPE		1117394	1					
ANR	1118344	ExpressionStatement	* q ++ = 1	331:8:5127:5135	1117394	17	True				
ANR	1118345	AssignmentExpression	* q ++ = 1		1117394	0		=			
ANR	1118346	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118347	UnaryOperator	*		1117394	0					
ANR	1118348	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118349	Identifier	q		1117394	0					
ANR	1118350	IncDec	++		1117394	1					
ANR	1118351	PrimaryExpression	1		1117394	1					
ANR	1118352	ExpressionStatement	* q ++ = DHCPNAK	333:8:5146:5160	1117394	18	True				
ANR	1118353	AssignmentExpression	* q ++ = DHCPNAK		1117394	0		=			
ANR	1118354	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118355	UnaryOperator	*		1117394	0					
ANR	1118356	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118357	Identifier	q		1117394	0					
ANR	1118358	IncDec	++		1117394	1					
ANR	1118359	Identifier	DHCPNAK		1117394	1					
ANR	1118360	ExpressionStatement	* q ++ = RFC2132_MESSAGE	337:8:5173:5195	1117394	19	True				
ANR	1118361	AssignmentExpression	* q ++ = RFC2132_MESSAGE		1117394	0		=			
ANR	1118362	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118363	UnaryOperator	*		1117394	0					
ANR	1118364	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118365	Identifier	q		1117394	0					
ANR	1118366	IncDec	++		1117394	1					
ANR	1118367	Identifier	RFC2132_MESSAGE		1117394	1					
ANR	1118368	ExpressionStatement	* q ++ = sizeof ( nak_msg ) - 1	339:8:5206:5232	1117394	20	True				
ANR	1118369	AssignmentExpression	* q ++ = sizeof ( nak_msg ) - 1		1117394	0		=			
ANR	1118370	UnaryOperationExpression	* q ++		1117394	0					
ANR	1118371	UnaryOperator	*		1117394	0					
ANR	1118372	PostIncDecOperationExpression	q ++		1117394	1					
ANR	1118373	Identifier	q		1117394	0					
ANR	1118374	IncDec	++		1117394	1					
ANR	1118375	AdditiveExpression	sizeof ( nak_msg ) - 1		1117394	1		-			
ANR	1118376	SizeofExpression	sizeof ( nak_msg )		1117394	0					
ANR	1118377	Sizeof	sizeof		1117394	0					
ANR	1118378	SizeofOperand	nak_msg		1117394	1					
ANR	1118379	PrimaryExpression	1		1117394	1					
ANR	1118380	ExpressionStatement	"memcpy ( q , nak_msg , sizeof ( nak_msg ) - 1 )"	341:8:5243:5282	1117394	21	True				
ANR	1118381	CallExpression	"memcpy ( q , nak_msg , sizeof ( nak_msg ) - 1 )"		1117394	0					
ANR	1118382	Callee	memcpy		1117394	0					
ANR	1118383	Identifier	memcpy		1117394	0					
ANR	1118384	ArgumentList	q		1117394	1					
ANR	1118385	Argument	q		1117394	0					
ANR	1118386	Identifier	q		1117394	0					
ANR	1118387	Argument	nak_msg		1117394	1					
ANR	1118388	Identifier	nak_msg		1117394	0					
ANR	1118389	Argument	sizeof ( nak_msg ) - 1		1117394	2					
ANR	1118390	AdditiveExpression	sizeof ( nak_msg ) - 1		1117394	0		-			
ANR	1118391	SizeofExpression	sizeof ( nak_msg )		1117394	0					
ANR	1118392	Sizeof	sizeof		1117394	0					
ANR	1118393	SizeofOperand	nak_msg		1117394	1					
ANR	1118394	PrimaryExpression	1		1117394	1					
ANR	1118395	ExpressionStatement	q += sizeof ( nak_msg ) - 1	343:8:5293:5317	1117394	22	True				
ANR	1118396	AssignmentExpression	q += sizeof ( nak_msg ) - 1		1117394	0		+=			
ANR	1118397	Identifier	q		1117394	0					
ANR	1118398	AdditiveExpression	sizeof ( nak_msg ) - 1		1117394	1		-			
ANR	1118399	SizeofExpression	sizeof ( nak_msg )		1117394	0					
ANR	1118400	Sizeof	sizeof		1117394	0					
ANR	1118401	SizeofOperand	nak_msg		1117394	1					
ANR	1118402	PrimaryExpression	1		1117394	1					
ANR	1118403	ExpressionStatement	* q = RFC1533_END	347:4:5331:5347	1117394	49	True				
ANR	1118404	AssignmentExpression	* q = RFC1533_END		1117394	0		=			
ANR	1118405	UnaryOperationExpression	* q		1117394	0					
ANR	1118406	UnaryOperator	*		1117394	0					
ANR	1118407	Identifier	q		1117394	1					
ANR	1118408	Identifier	RFC1533_END		1117394	1					
ANR	1118409	ExpressionStatement	daddr . sin_addr . s_addr = 0xffffffffu	351:4:5356:5391	1117394	50	True				
ANR	1118410	AssignmentExpression	daddr . sin_addr . s_addr = 0xffffffffu		1117394	0		=			
ANR	1118411	MemberAccess	daddr . sin_addr . s_addr		1117394	0					
ANR	1118412	MemberAccess	daddr . sin_addr		1117394	0					
ANR	1118413	Identifier	daddr		1117394	0					
ANR	1118414	Identifier	sin_addr		1117394	1					
ANR	1118415	Identifier	s_addr		1117394	1					
ANR	1118416	PrimaryExpression	0xffffffffu		1117394	1					
ANR	1118417	ExpressionStatement	m -> m_len = sizeof ( struct bootp_t ) - sizeof ( struct ip ) - sizeof ( struct udphdr )	355:4:5400:5486	1117394	51	True				
ANR	1118418	AssignmentExpression	m -> m_len = sizeof ( struct bootp_t ) - sizeof ( struct ip ) - sizeof ( struct udphdr )		1117394	0		=			
ANR	1118419	PtrMemberAccess	m -> m_len		1117394	0					
ANR	1118420	Identifier	m		1117394	0					
ANR	1118421	Identifier	m_len		1117394	1					
ANR	1118422	AdditiveExpression	sizeof ( struct bootp_t ) - sizeof ( struct ip ) - sizeof ( struct udphdr )		1117394	1		-			
ANR	1118423	SizeofExpression	sizeof ( struct bootp_t )		1117394	0					
ANR	1118424	Sizeof	sizeof		1117394	0					
ANR	1118425	SizeofOperand	struct bootp_t		1117394	1					
ANR	1118426	AdditiveExpression	sizeof ( struct ip ) - sizeof ( struct udphdr )		1117394	1		-			
ANR	1118427	SizeofExpression	sizeof ( struct ip )		1117394	0					
ANR	1118428	Sizeof	sizeof		1117394	0					
ANR	1118429	SizeofOperand	struct ip		1117394	1					
ANR	1118430	SizeofExpression	sizeof ( struct udphdr )		1117394	1					
ANR	1118431	Sizeof	sizeof		1117394	0					
ANR	1118432	SizeofOperand	struct udphdr		1117394	1					
ANR	1118433	ExpressionStatement	"udp_output2 ( NULL , m , & saddr , & daddr , IPTOS_LOWDELAY )"	359:4:5493:5545	1117394	52	True				
ANR	1118434	CallExpression	"udp_output2 ( NULL , m , & saddr , & daddr , IPTOS_LOWDELAY )"		1117394	0					
ANR	1118435	Callee	udp_output2		1117394	0					
ANR	1118436	Identifier	udp_output2		1117394	0					
ANR	1118437	ArgumentList	NULL		1117394	1					
ANR	1118438	Argument	NULL		1117394	0					
ANR	1118439	Identifier	NULL		1117394	0					
ANR	1118440	Argument	m		1117394	1					
ANR	1118441	Identifier	m		1117394	0					
ANR	1118442	Argument	& saddr		1117394	2					
ANR	1118443	UnaryOperationExpression	& saddr		1117394	0					
ANR	1118444	UnaryOperator	&		1117394	0					
ANR	1118445	Identifier	saddr		1117394	1					
ANR	1118446	Argument	& daddr		1117394	3					
ANR	1118447	UnaryOperationExpression	& daddr		1117394	0					
ANR	1118448	UnaryOperator	&		1117394	0					
ANR	1118449	Identifier	daddr		1117394	1					
ANR	1118450	Argument	IPTOS_LOWDELAY		1117394	4					
ANR	1118451	Identifier	IPTOS_LOWDELAY		1117394	0					
ANR	1118452	ReturnType	static void		1117394	1					
ANR	1118453	Identifier	bootp_reply		1117394	2					
ANR	1118454	ParameterList	"Slirp * slirp , const struct bootp_t * bp"		1117394	3					
ANR	1118455	Parameter	Slirp * slirp	1:24:24:35	1117394	0	True				
ANR	1118456	ParameterType	Slirp *		1117394	0					
ANR	1118457	Identifier	slirp		1117394	1					
ANR	1118458	Parameter	const struct bootp_t * bp	1:38:38:61	1117394	1	True				
ANR	1118459	ParameterType	const struct bootp_t *		1117394	0					
ANR	1118460	Identifier	bp		1117394	1					
ANR	1118461	CFGEntryNode	ENTRY		1117394		True				
ANR	1118462	CFGExitNode	EXIT		1117394		True				
ANR	1118463	Symbol	& preq_addr		1117394						
ANR	1118464	Symbol	& val		1117394						
ANR	1118465	Symbol	IPTOS_LOWDELAY		1117394						
ANR	1118466	Symbol	DHCPACK		1117394						
ANR	1118467	Symbol	LEASE_TIME		1117394						
ANR	1118468	Symbol	request_addr		1117394						
ANR	1118469	Symbol	htons		1117394						
ANR	1118470	Symbol	* q ++		1117394						
ANR	1118471	Symbol	rbp -> bp_htype		1117394						
ANR	1118472	Symbol	get_new_addr		1117394						
ANR	1118473	Symbol	rbp -> bp_siaddr		1117394						
ANR	1118474	Symbol	RFC1533_END		1117394						
ANR	1118475	Symbol	htonl		1117394						
ANR	1118476	Symbol	* slirp		1117394						
ANR	1118477	Symbol	rbp -> bp_xid		1117394						
ANR	1118478	Symbol	strlen		1117394						
ANR	1118479	Symbol	bp -> bp_op		1117394						
ANR	1118480	Symbol	RFC1533_GATEWAY		1117394						
ANR	1118481	Symbol	dhcp_msg_type		1117394						
ANR	1118482	Symbol	m -> m_len		1117394						
ANR	1118483	Symbol	DHCPREQUEST		1117394						
ANR	1118484	Symbol	* bp		1117394						
ANR	1118485	Symbol	val		1117394						
ANR	1118486	Symbol	& saddr		1117394						
ANR	1118487	Symbol	RFC1533_HOSTNAME		1117394						
ANR	1118488	Symbol	spaceleft		1117394						
ANR	1118489	Symbol	NULL		1117394						
ANR	1118490	Symbol	& saddr . sin_addr		1117394						
ANR	1118491	Symbol	rfc1533_cookie		1117394						
ANR	1118492	Symbol	preq_addr		1117394						
ANR	1118493	Symbol	m_get		1117394						
ANR	1118494	Symbol	slirp -> vdnssearch		1117394						
ANR	1118495	Symbol	* rbp		1117394						
ANR	1118496	Symbol	DHCPOFFER		1117394						
ANR	1118497	Symbol	slirp -> vhost_addr		1117394						
ANR	1118498	Symbol	slirp -> client_hostname		1117394						
ANR	1118499	Symbol	& daddr		1117394						
ANR	1118500	Symbol	find_addr		1117394						
ANR	1118501	Symbol	RFC1533_NETMASK		1117394						
ANR	1118502	Symbol	rbp -> bp_file		1117394						
ANR	1118503	Symbol	bp -> bp_xid		1117394						
ANR	1118504	Symbol	BOOTP_REPLY		1117394						
ANR	1118505	Symbol	IF_MAXLINKHDR		1117394						
ANR	1118506	Symbol	DHCPNAK		1117394						
ANR	1118507	Symbol	rbp -> bp_op		1117394						
ANR	1118508	Symbol	RFC2132_LEASE_TIME		1117394						
ANR	1118509	Symbol	bc		1117394						
ANR	1118510	Symbol	rbp		1117394						
ANR	1118511	Symbol	daddr . sin_addr		1117394						
ANR	1118512	Symbol	& slirp -> vnetwork_mask		1117394						
ANR	1118513	Symbol	rbp -> bp_hwaddr		1117394						
ANR	1118514	Symbol	* * slirp		1117394						
ANR	1118515	Symbol	slirp -> vdnssearch_len		1117394						
ANR	1118516	Symbol	saddr . sin_addr		1117394						
ANR	1118517	Symbol	slirp -> restricted		1117394						
ANR	1118518	Symbol	bp		1117394						
ANR	1118519	Symbol	& dhcp_msg_type		1117394						
ANR	1118520	Symbol	DHCPDISCOVER		1117394						
ANR	1118521	Symbol	bc -> macaddr		1117394						
ANR	1118522	Symbol	saddr . sin_port		1117394						
ANR	1118523	Symbol	m -> m_data		1117394						
ANR	1118524	Symbol	* slirp -> client_hostname		1117394						
ANR	1118525	Symbol	RFC1533_DNS		1117394						
ANR	1118526	Symbol	daddr . sin_addr . s_addr		1117394						
ANR	1118527	Symbol	preq_addr . s_addr		1117394						
ANR	1118528	Symbol	nak_msg		1117394						
ANR	1118529	Symbol	RFC2132_MESSAGE		1117394						
ANR	1118530	Symbol	client_ethaddr		1117394						
ANR	1118531	Symbol	* bc		1117394						
ANR	1118532	Symbol	RFC2132_SRV_ID		1117394						
ANR	1118533	Symbol	BOOTP_SERVER		1117394						
ANR	1118534	Symbol	& slirp -> vnameserver_addr		1117394						
ANR	1118535	Symbol	saddr		1117394						
ANR	1118536	Symbol	rbp -> bp_hlen		1117394						
ANR	1118537	Symbol	ETH_ALEN		1117394						
ANR	1118538	Symbol	rbp -> bp_vend		1117394						
ANR	1118539	Symbol	slirp		1117394						
ANR	1118540	Symbol	m		1117394						
ANR	1118541	Symbol	q		1117394						
ANR	1118542	Symbol	* m		1117394						
ANR	1118543	Symbol	& daddr . sin_addr		1117394						
ANR	1118544	Symbol	RFC2132_MSG_TYPE		1117394						
ANR	1118545	Symbol	daddr		1117394						
ANR	1118546	Symbol	slirp -> bootp_filename		1117394						
ANR	1118547	Symbol	* q		1117394						
ANR	1118548	Symbol	BOOTP_CLIENT		1117394						
ANR	1118549	Symbol	daddr . sin_port		1117394						
ANR	1118550	Symbol	rbp -> bp_yiaddr		1117394						
ANR	1118551	Symbol	bp -> bp_hwaddr		1117394						
