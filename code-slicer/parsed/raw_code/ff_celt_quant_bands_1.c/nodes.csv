command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3210314	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_celt_quant_bands_1.c								
ANR	3210315	Function	ff_celt_quant_bands	1:0:0:4930							
ANR	3210316	FunctionDef	"ff_celt_quant_bands (CeltFrame * f , OpusRangeCoder * rc)"		3210315	0					
ANR	3210317	CompoundStatement		3:0:60:4930	3210315	0					
ANR	3210318	IdentifierDeclStatement	float lowband_scratch [ 8 * 22 ] ;	5:4:67:96	3210315	0	True				
ANR	3210319	IdentifierDecl	lowband_scratch [ 8 * 22 ]		3210315	0					
ANR	3210320	IdentifierDeclType	float [ 8 * 22 ]		3210315	0					
ANR	3210321	Identifier	lowband_scratch		3210315	1					
ANR	3210322	MultiplicativeExpression	8 * 22		3210315	2		*			
ANR	3210323	PrimaryExpression	8		3210315	0					
ANR	3210324	PrimaryExpression	22		3210315	1					
ANR	3210325	IdentifierDeclStatement	float norm1 [ 2 * 8 * 100 ] ;	7:4:103:127	3210315	1	True				
ANR	3210326	IdentifierDecl	norm1 [ 2 * 8 * 100 ]		3210315	0					
ANR	3210327	IdentifierDeclType	float [ 2 * 8 * 100 ]		3210315	0					
ANR	3210328	Identifier	norm1		3210315	1					
ANR	3210329	MultiplicativeExpression	2 * 8 * 100		3210315	2		*			
ANR	3210330	PrimaryExpression	2		3210315	0					
ANR	3210331	MultiplicativeExpression	8 * 100		3210315	1		*			
ANR	3210332	PrimaryExpression	8		3210315	0					
ANR	3210333	PrimaryExpression	100		3210315	1					
ANR	3210334	IdentifierDeclStatement	float * norm2 = norm1 + 8 * 100 ;	9:4:134:164	3210315	2	True				
ANR	3210335	IdentifierDecl	* norm2 = norm1 + 8 * 100		3210315	0					
ANR	3210336	IdentifierDeclType	float *		3210315	0					
ANR	3210337	Identifier	norm2		3210315	1					
ANR	3210338	AssignmentExpression	* norm2 = norm1 + 8 * 100		3210315	2		=			
ANR	3210339	Identifier	norm2		3210315	0					
ANR	3210340	AdditiveExpression	norm1 + 8 * 100		3210315	1		+			
ANR	3210341	Identifier	norm1		3210315	0					
ANR	3210342	MultiplicativeExpression	8 * 100		3210315	1		*			
ANR	3210343	PrimaryExpression	8		3210315	0					
ANR	3210344	PrimaryExpression	100		3210315	1					
ANR	3210345	IdentifierDeclStatement	int totalbits = ( f -> framebits << 3 ) - f -> anticollapse_needed ;	13:4:173:233	3210315	3	True				
ANR	3210346	IdentifierDecl	totalbits = ( f -> framebits << 3 ) - f -> anticollapse_needed		3210315	0					
ANR	3210347	IdentifierDeclType	int		3210315	0					
ANR	3210348	Identifier	totalbits		3210315	1					
ANR	3210349	AssignmentExpression	totalbits = ( f -> framebits << 3 ) - f -> anticollapse_needed		3210315	2		=			
ANR	3210350	Identifier	totalbits		3210315	0					
ANR	3210351	AdditiveExpression	( f -> framebits << 3 ) - f -> anticollapse_needed		3210315	1		-			
ANR	3210352	ShiftExpression	f -> framebits << 3		3210315	0		<<			
ANR	3210353	PtrMemberAccess	f -> framebits		3210315	0					
ANR	3210354	Identifier	f		3210315	0					
ANR	3210355	Identifier	framebits		3210315	1					
ANR	3210356	PrimaryExpression	3		3210315	1					
ANR	3210357	PtrMemberAccess	f -> anticollapse_needed		3210315	1					
ANR	3210358	Identifier	f		3210315	0					
ANR	3210359	Identifier	anticollapse_needed		3210315	1					
ANR	3210360	IdentifierDeclStatement	int update_lowband = 1 ;	17:4:242:264	3210315	4	True				
ANR	3210361	IdentifierDecl	update_lowband = 1		3210315	0					
ANR	3210362	IdentifierDeclType	int		3210315	0					
ANR	3210363	Identifier	update_lowband		3210315	1					
ANR	3210364	AssignmentExpression	update_lowband = 1		3210315	2		=			
ANR	3210365	Identifier	update_lowband		3210315	0					
ANR	3210366	PrimaryExpression	1		3210315	1					
ANR	3210367	IdentifierDeclStatement	int lowband_offset = 0 ;	19:4:271:293	3210315	5	True				
ANR	3210368	IdentifierDecl	lowband_offset = 0		3210315	0					
ANR	3210369	IdentifierDeclType	int		3210315	0					
ANR	3210370	Identifier	lowband_offset		3210315	1					
ANR	3210371	AssignmentExpression	lowband_offset = 0		3210315	2		=			
ANR	3210372	Identifier	lowband_offset		3210315	0					
ANR	3210373	PrimaryExpression	0		3210315	1					
ANR	3210374	IdentifierDeclStatement	"int i , j ;"	23:4:302:310	3210315	6	True				
ANR	3210375	IdentifierDecl	i		3210315	0					
ANR	3210376	IdentifierDeclType	int		3210315	0					
ANR	3210377	Identifier	i		3210315	1					
ANR	3210378	IdentifierDecl	j		3210315	1					
ANR	3210379	IdentifierDeclType	int		3210315	0					
ANR	3210380	Identifier	j		3210315	1					
ANR	3210381	ForStatement	for ( i = f -> start_band ; i < f -> end_band ; i ++ )		3210315	7					
ANR	3210382	ForInit	i = f -> start_band ;	27:9:324:341	3210315	0	True				
ANR	3210383	AssignmentExpression	i = f -> start_band		3210315	0		=			
ANR	3210384	Identifier	i		3210315	0					
ANR	3210385	PtrMemberAccess	f -> start_band		3210315	1					
ANR	3210386	Identifier	f		3210315	0					
ANR	3210387	Identifier	start_band		3210315	1					
ANR	3210388	Condition	i < f -> end_band	27:28:343:357	3210315	1	True				
ANR	3210389	RelationalExpression	i < f -> end_band		3210315	0		<			
ANR	3210390	Identifier	i		3210315	0					
ANR	3210391	PtrMemberAccess	f -> end_band		3210315	1					
ANR	3210392	Identifier	f		3210315	0					
ANR	3210393	Identifier	end_band		3210315	1					
ANR	3210394	PostIncDecOperationExpression	i ++	27:45:360:362	3210315	2	True				
ANR	3210395	Identifier	i		3210315	0					
ANR	3210396	IncDec	++		3210315	1					
ANR	3210397	CompoundStatement		45:8:772:781	3210315	3					
ANR	3210398	IdentifierDeclStatement	"uint32_t cm [ 2 ] = { ( 1 << f -> blocks ) - 1 , ( 1 << f -> blocks ) - 1 } ;"	29:8:376:439	3210315	0	True				
ANR	3210399	IdentifierDecl	"cm [ 2 ] = { ( 1 << f -> blocks ) - 1 , ( 1 << f -> blocks ) - 1 }"		3210315	0					
ANR	3210400	IdentifierDeclType	uint32_t [ 2 ]		3210315	0					
ANR	3210401	Identifier	cm		3210315	1					
ANR	3210402	PrimaryExpression	2		3210315	2					
ANR	3210403	AssignmentExpression	"cm [ 2 ] = { ( 1 << f -> blocks ) - 1 , ( 1 << f -> blocks ) - 1 }"		3210315	3		=			
ANR	3210404	Identifier	cm		3210315	0					
ANR	3210405	InitializerList	( 1 << f -> blocks ) - 1		3210315	1					
ANR	3210406	AdditiveExpression	( 1 << f -> blocks ) - 1		3210315	0		-			
ANR	3210407	ShiftExpression	1 << f -> blocks		3210315	0		<<			
ANR	3210408	PrimaryExpression	1		3210315	0					
ANR	3210409	PtrMemberAccess	f -> blocks		3210315	1					
ANR	3210410	Identifier	f		3210315	0					
ANR	3210411	Identifier	blocks		3210315	1					
ANR	3210412	PrimaryExpression	1		3210315	1					
ANR	3210413	AdditiveExpression	( 1 << f -> blocks ) - 1		3210315	1		-			
ANR	3210414	ShiftExpression	1 << f -> blocks		3210315	0		<<			
ANR	3210415	PrimaryExpression	1		3210315	0					
ANR	3210416	PtrMemberAccess	f -> blocks		3210315	1					
ANR	3210417	Identifier	f		3210315	0					
ANR	3210418	Identifier	blocks		3210315	1					
ANR	3210419	PrimaryExpression	1		3210315	1					
ANR	3210420	IdentifierDeclStatement	int band_offset = ff_celt_freq_bands [ i ] << f -> size ;	31:8:450:500	3210315	1	True				
ANR	3210421	IdentifierDecl	band_offset = ff_celt_freq_bands [ i ] << f -> size		3210315	0					
ANR	3210422	IdentifierDeclType	int		3210315	0					
ANR	3210423	Identifier	band_offset		3210315	1					
ANR	3210424	AssignmentExpression	band_offset = ff_celt_freq_bands [ i ] << f -> size		3210315	2		=			
ANR	3210425	Identifier	band_offset		3210315	0					
ANR	3210426	ShiftExpression	ff_celt_freq_bands [ i ] << f -> size		3210315	1		<<			
ANR	3210427	ArrayIndexing	ff_celt_freq_bands [ i ]		3210315	0					
ANR	3210428	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210429	Identifier	i		3210315	1					
ANR	3210430	PtrMemberAccess	f -> size		3210315	1					
ANR	3210431	Identifier	f		3210315	0					
ANR	3210432	Identifier	size		3210315	1					
ANR	3210433	IdentifierDeclStatement	int band_size = ff_celt_freq_range [ i ] << f -> size ;	33:8:511:561	3210315	2	True				
ANR	3210434	IdentifierDecl	band_size = ff_celt_freq_range [ i ] << f -> size		3210315	0					
ANR	3210435	IdentifierDeclType	int		3210315	0					
ANR	3210436	Identifier	band_size		3210315	1					
ANR	3210437	AssignmentExpression	band_size = ff_celt_freq_range [ i ] << f -> size		3210315	2		=			
ANR	3210438	Identifier	band_size		3210315	0					
ANR	3210439	ShiftExpression	ff_celt_freq_range [ i ] << f -> size		3210315	1		<<			
ANR	3210440	ArrayIndexing	ff_celt_freq_range [ i ]		3210315	0					
ANR	3210441	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210442	Identifier	i		3210315	1					
ANR	3210443	PtrMemberAccess	f -> size		3210315	1					
ANR	3210444	Identifier	f		3210315	0					
ANR	3210445	Identifier	size		3210315	1					
ANR	3210446	IdentifierDeclStatement	float * X = f -> block [ 0 ] . coeffs + band_offset ;	35:8:572:615	3210315	3	True				
ANR	3210447	IdentifierDecl	* X = f -> block [ 0 ] . coeffs + band_offset		3210315	0					
ANR	3210448	IdentifierDeclType	float *		3210315	0					
ANR	3210449	Identifier	X		3210315	1					
ANR	3210450	AssignmentExpression	* X = f -> block [ 0 ] . coeffs + band_offset		3210315	2		=			
ANR	3210451	Identifier	X		3210315	0					
ANR	3210452	AdditiveExpression	f -> block [ 0 ] . coeffs + band_offset		3210315	1		+			
ANR	3210453	MemberAccess	f -> block [ 0 ] . coeffs		3210315	0					
ANR	3210454	ArrayIndexing	f -> block [ 0 ]		3210315	0					
ANR	3210455	PtrMemberAccess	f -> block		3210315	0					
ANR	3210456	Identifier	f		3210315	0					
ANR	3210457	Identifier	block		3210315	1					
ANR	3210458	PrimaryExpression	0		3210315	1					
ANR	3210459	Identifier	coeffs		3210315	1					
ANR	3210460	Identifier	band_offset		3210315	1					
ANR	3210461	IdentifierDeclStatement	float * Y = ( f -> channels == 2 ) ? f -> block [ 1 ] . coeffs + band_offset : NULL ;	37:8:626:697	3210315	4	True				
ANR	3210462	IdentifierDecl	* Y = ( f -> channels == 2 ) ? f -> block [ 1 ] . coeffs + band_offset : NULL		3210315	0					
ANR	3210463	IdentifierDeclType	float *		3210315	0					
ANR	3210464	Identifier	Y		3210315	1					
ANR	3210465	AssignmentExpression	* Y = ( f -> channels == 2 ) ? f -> block [ 1 ] . coeffs + band_offset : NULL		3210315	2		=			
ANR	3210466	Identifier	Y		3210315	0					
ANR	3210467	ConditionalExpression	( f -> channels == 2 ) ? f -> block [ 1 ] . coeffs + band_offset : NULL		3210315	1					
ANR	3210468	Condition	f -> channels == 2		3210315	0					
ANR	3210469	EqualityExpression	f -> channels == 2		3210315	0		==			
ANR	3210470	PtrMemberAccess	f -> channels		3210315	0					
ANR	3210471	Identifier	f		3210315	0					
ANR	3210472	Identifier	channels		3210315	1					
ANR	3210473	PrimaryExpression	2		3210315	1					
ANR	3210474	AdditiveExpression	f -> block [ 1 ] . coeffs + band_offset		3210315	1		+			
ANR	3210475	MemberAccess	f -> block [ 1 ] . coeffs		3210315	0					
ANR	3210476	ArrayIndexing	f -> block [ 1 ]		3210315	0					
ANR	3210477	PtrMemberAccess	f -> block		3210315	0					
ANR	3210478	Identifier	f		3210315	0					
ANR	3210479	Identifier	block		3210315	1					
ANR	3210480	PrimaryExpression	1		3210315	1					
ANR	3210481	Identifier	coeffs		3210315	1					
ANR	3210482	Identifier	band_offset		3210315	1					
ANR	3210483	Identifier	NULL		3210315	2					
ANR	3210484	IdentifierDeclStatement	"float * norm_loc1 , * norm_loc2 ;"	39:8:708:736	3210315	5	True				
ANR	3210485	IdentifierDecl	* norm_loc1		3210315	0					
ANR	3210486	IdentifierDeclType	float *		3210315	0					
ANR	3210487	Identifier	norm_loc1		3210315	1					
ANR	3210488	IdentifierDecl	* norm_loc2		3210315	1					
ANR	3210489	IdentifierDeclType	float *		3210315	0					
ANR	3210490	Identifier	norm_loc2		3210315	1					
ANR	3210491	IdentifierDeclStatement	int consumed = opus_rc_tell_frac ( rc ) ;	43:8:749:785	3210315	6	True				
ANR	3210492	IdentifierDecl	consumed = opus_rc_tell_frac ( rc )		3210315	0					
ANR	3210493	IdentifierDeclType	int		3210315	0					
ANR	3210494	Identifier	consumed		3210315	1					
ANR	3210495	AssignmentExpression	consumed = opus_rc_tell_frac ( rc )		3210315	2		=			
ANR	3210496	Identifier	consumed		3210315	0					
ANR	3210497	CallExpression	opus_rc_tell_frac ( rc )		3210315	1					
ANR	3210498	Callee	opus_rc_tell_frac		3210315	0					
ANR	3210499	Identifier	opus_rc_tell_frac		3210315	0					
ANR	3210500	ArgumentList	rc		3210315	1					
ANR	3210501	Argument	rc		3210315	0					
ANR	3210502	Identifier	rc		3210315	0					
ANR	3210503	IdentifierDeclStatement	int effective_lowband = - 1 ;	45:8:796:822	3210315	7	True				
ANR	3210504	IdentifierDecl	effective_lowband = - 1		3210315	0					
ANR	3210505	IdentifierDeclType	int		3210315	0					
ANR	3210506	Identifier	effective_lowband		3210315	1					
ANR	3210507	AssignmentExpression	effective_lowband = - 1		3210315	2		=			
ANR	3210508	Identifier	effective_lowband		3210315	0					
ANR	3210509	UnaryOperationExpression	- 1		3210315	1					
ANR	3210510	UnaryOperator	-		3210315	0					
ANR	3210511	PrimaryExpression	1		3210315	1					
ANR	3210512	IdentifierDeclStatement	int b = 0 ;	47:8:833:842	3210315	8	True				
ANR	3210513	IdentifierDecl	b = 0		3210315	0					
ANR	3210514	IdentifierDeclType	int		3210315	0					
ANR	3210515	Identifier	b		3210315	1					
ANR	3210516	AssignmentExpression	b = 0		3210315	2		=			
ANR	3210517	Identifier	b		3210315	0					
ANR	3210518	PrimaryExpression	0		3210315	1					
ANR	3210519	IfStatement	if ( i != f -> start_band )		3210315	9					
ANR	3210520	Condition	i != f -> start_band	53:12:929:946	3210315	0	True				
ANR	3210521	EqualityExpression	i != f -> start_band		3210315	0		!=			
ANR	3210522	Identifier	i		3210315	0					
ANR	3210523	PtrMemberAccess	f -> start_band		3210315	1					
ANR	3210524	Identifier	f		3210315	0					
ANR	3210525	Identifier	start_band		3210315	1					
ANR	3210526	ExpressionStatement	f -> remaining -= consumed	55:12:962:986	3210315	1	True				
ANR	3210527	AssignmentExpression	f -> remaining -= consumed		3210315	0		-=			
ANR	3210528	PtrMemberAccess	f -> remaining		3210315	0					
ANR	3210529	Identifier	f		3210315	0					
ANR	3210530	Identifier	remaining		3210315	1					
ANR	3210531	Identifier	consumed		3210315	1					
ANR	3210532	ExpressionStatement	f -> remaining2 = totalbits - consumed - 1	57:8:997:1037	3210315	10	True				
ANR	3210533	AssignmentExpression	f -> remaining2 = totalbits - consumed - 1		3210315	0		=			
ANR	3210534	PtrMemberAccess	f -> remaining2		3210315	0					
ANR	3210535	Identifier	f		3210315	0					
ANR	3210536	Identifier	remaining2		3210315	1					
ANR	3210537	AdditiveExpression	totalbits - consumed - 1		3210315	1		-			
ANR	3210538	Identifier	totalbits		3210315	0					
ANR	3210539	AdditiveExpression	consumed - 1		3210315	1		-			
ANR	3210540	Identifier	consumed		3210315	0					
ANR	3210541	PrimaryExpression	1		3210315	1					
ANR	3210542	IfStatement	if ( i <= f -> coded_bands - 1 )		3210315	11					
ANR	3210543	Condition	i <= f -> coded_bands - 1	59:12:1052:1074	3210315	0	True				
ANR	3210544	RelationalExpression	i <= f -> coded_bands - 1		3210315	0		<=			
ANR	3210545	Identifier	i		3210315	0					
ANR	3210546	AdditiveExpression	f -> coded_bands - 1		3210315	1		-			
ANR	3210547	PtrMemberAccess	f -> coded_bands		3210315	0					
ANR	3210548	Identifier	f		3210315	0					
ANR	3210549	Identifier	coded_bands		3210315	1					
ANR	3210550	PrimaryExpression	1		3210315	1					
ANR	3210551	CompoundStatement		59:12:1031:1091	3210315	1					
ANR	3210552	IdentifierDeclStatement	"int curr_balance = f -> remaining / FFMIN ( 3 , f -> coded_bands - i ) ;"	61:12:1092:1152	3210315	0	True				
ANR	3210553	IdentifierDecl	"curr_balance = f -> remaining / FFMIN ( 3 , f -> coded_bands - i )"		3210315	0					
ANR	3210554	IdentifierDeclType	int		3210315	0					
ANR	3210555	Identifier	curr_balance		3210315	1					
ANR	3210556	AssignmentExpression	"curr_balance = f -> remaining / FFMIN ( 3 , f -> coded_bands - i )"		3210315	2		=			
ANR	3210557	Identifier	curr_balance		3210315	0					
ANR	3210558	MultiplicativeExpression	"f -> remaining / FFMIN ( 3 , f -> coded_bands - i )"		3210315	1		/			
ANR	3210559	PtrMemberAccess	f -> remaining		3210315	0					
ANR	3210560	Identifier	f		3210315	0					
ANR	3210561	Identifier	remaining		3210315	1					
ANR	3210562	CallExpression	"FFMIN ( 3 , f -> coded_bands - i )"		3210315	1					
ANR	3210563	Callee	FFMIN		3210315	0					
ANR	3210564	Identifier	FFMIN		3210315	0					
ANR	3210565	ArgumentList	3		3210315	1					
ANR	3210566	Argument	3		3210315	0					
ANR	3210567	PrimaryExpression	3		3210315	0					
ANR	3210568	Argument	f -> coded_bands - i		3210315	1					
ANR	3210569	AdditiveExpression	f -> coded_bands - i		3210315	0		-			
ANR	3210570	PtrMemberAccess	f -> coded_bands		3210315	0					
ANR	3210571	Identifier	f		3210315	0					
ANR	3210572	Identifier	coded_bands		3210315	1					
ANR	3210573	Identifier	i		3210315	1					
ANR	3210574	ExpressionStatement	"b = av_clip_uintp2 ( FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance ) , 14 )"	63:12:1167:1244	3210315	1	True				
ANR	3210575	AssignmentExpression	"b = av_clip_uintp2 ( FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance ) , 14 )"		3210315	0		=			
ANR	3210576	Identifier	b		3210315	0					
ANR	3210577	CallExpression	"av_clip_uintp2 ( FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance ) , 14 )"		3210315	1					
ANR	3210578	Callee	av_clip_uintp2		3210315	0					
ANR	3210579	Identifier	av_clip_uintp2		3210315	0					
ANR	3210580	ArgumentList	"FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance )"		3210315	1					
ANR	3210581	Argument	"FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance )"		3210315	0					
ANR	3210582	CallExpression	"FFMIN ( f -> remaining2 + 1 , f -> pulses [ i ] + curr_balance )"		3210315	0					
ANR	3210583	Callee	FFMIN		3210315	0					
ANR	3210584	Identifier	FFMIN		3210315	0					
ANR	3210585	ArgumentList	f -> remaining2 + 1		3210315	1					
ANR	3210586	Argument	f -> remaining2 + 1		3210315	0					
ANR	3210587	AdditiveExpression	f -> remaining2 + 1		3210315	0		+			
ANR	3210588	PtrMemberAccess	f -> remaining2		3210315	0					
ANR	3210589	Identifier	f		3210315	0					
ANR	3210590	Identifier	remaining2		3210315	1					
ANR	3210591	PrimaryExpression	1		3210315	1					
ANR	3210592	Argument	f -> pulses [ i ] + curr_balance		3210315	1					
ANR	3210593	AdditiveExpression	f -> pulses [ i ] + curr_balance		3210315	0		+			
ANR	3210594	ArrayIndexing	f -> pulses [ i ]		3210315	0					
ANR	3210595	PtrMemberAccess	f -> pulses		3210315	0					
ANR	3210596	Identifier	f		3210315	0					
ANR	3210597	Identifier	pulses		3210315	1					
ANR	3210598	Identifier	i		3210315	1					
ANR	3210599	Identifier	curr_balance		3210315	1					
ANR	3210600	Argument	14		3210315	1					
ANR	3210601	PrimaryExpression	14		3210315	0					
ANR	3210602	IfStatement	if ( ( ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ] >= ff_celt_freq_bands [ f -> start_band ] || i == f -> start_band + 1 ) && ( update_lowband || lowband_offset == 0 ) )		3210315	12					
ANR	3210603	Condition	( ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ] >= ff_celt_freq_bands [ f -> start_band ] || i == f -> start_band + 1 ) && ( update_lowband || lowband_offset == 0 )	69:12:1272:1437	3210315	0	True				
ANR	3210604	AndExpression	( ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ] >= ff_celt_freq_bands [ f -> start_band ] || i == f -> start_band + 1 ) && ( update_lowband || lowband_offset == 0 )		3210315	0		&&			
ANR	3210605	OrExpression	ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ] >= ff_celt_freq_bands [ f -> start_band ] || i == f -> start_band + 1		3210315	0		||			
ANR	3210606	RelationalExpression	ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ] >= ff_celt_freq_bands [ f -> start_band ]		3210315	0		>=			
ANR	3210607	AdditiveExpression	ff_celt_freq_bands [ i ] - ff_celt_freq_range [ i ]		3210315	0		-			
ANR	3210608	ArrayIndexing	ff_celt_freq_bands [ i ]		3210315	0					
ANR	3210609	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210610	Identifier	i		3210315	1					
ANR	3210611	ArrayIndexing	ff_celt_freq_range [ i ]		3210315	1					
ANR	3210612	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210613	Identifier	i		3210315	1					
ANR	3210614	ArrayIndexing	ff_celt_freq_bands [ f -> start_band ]		3210315	1					
ANR	3210615	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210616	PtrMemberAccess	f -> start_band		3210315	1					
ANR	3210617	Identifier	f		3210315	0					
ANR	3210618	Identifier	start_band		3210315	1					
ANR	3210619	EqualityExpression	i == f -> start_band + 1		3210315	1		==			
ANR	3210620	Identifier	i		3210315	0					
ANR	3210621	AdditiveExpression	f -> start_band + 1		3210315	1		+			
ANR	3210622	PtrMemberAccess	f -> start_band		3210315	0					
ANR	3210623	Identifier	f		3210315	0					
ANR	3210624	Identifier	start_band		3210315	1					
ANR	3210625	PrimaryExpression	1		3210315	1					
ANR	3210626	OrExpression	update_lowband || lowband_offset == 0		3210315	1		||			
ANR	3210627	Identifier	update_lowband		3210315	0					
ANR	3210628	EqualityExpression	lowband_offset == 0		3210315	1		==			
ANR	3210629	Identifier	lowband_offset		3210315	0					
ANR	3210630	PrimaryExpression	0		3210315	1					
ANR	3210631	ExpressionStatement	lowband_offset = i	73:12:1453:1471	3210315	1	True				
ANR	3210632	AssignmentExpression	lowband_offset = i		3210315	0		=			
ANR	3210633	Identifier	lowband_offset		3210315	0					
ANR	3210634	Identifier	i		3210315	1					
ANR	3210635	IfStatement	if ( i == f -> start_band + 1 )		3210315	13					
ANR	3210636	Condition	i == f -> start_band + 1	77:12:1488:1509	3210315	0	True				
ANR	3210637	EqualityExpression	i == f -> start_band + 1		3210315	0		==			
ANR	3210638	Identifier	i		3210315	0					
ANR	3210639	AdditiveExpression	f -> start_band + 1		3210315	1		+			
ANR	3210640	PtrMemberAccess	f -> start_band		3210315	0					
ANR	3210641	Identifier	f		3210315	0					
ANR	3210642	Identifier	start_band		3210315	1					
ANR	3210643	PrimaryExpression	1		3210315	1					
ANR	3210644	CompoundStatement		83:12:1684:1749	3210315	1					
ANR	3210645	IdentifierDeclStatement	int offset = 8 * ff_celt_freq_bands [ i ] ;	83:12:1692:1730	3210315	0	True				
ANR	3210646	IdentifierDecl	offset = 8 * ff_celt_freq_bands [ i ]		3210315	0					
ANR	3210647	IdentifierDeclType	int		3210315	0					
ANR	3210648	Identifier	offset		3210315	1					
ANR	3210649	AssignmentExpression	offset = 8 * ff_celt_freq_bands [ i ]		3210315	2		=			
ANR	3210650	Identifier	offset		3210315	0					
ANR	3210651	MultiplicativeExpression	8 * ff_celt_freq_bands [ i ]		3210315	1		*			
ANR	3210652	PrimaryExpression	8		3210315	0					
ANR	3210653	ArrayIndexing	ff_celt_freq_bands [ i ]		3210315	1					
ANR	3210654	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210655	Identifier	i		3210315	1					
ANR	3210656	IdentifierDeclStatement	int count = 8 * ( ff_celt_freq_range [ i ] - ff_celt_freq_range [ i - 1 ] ) ;	85:12:1745:1810	3210315	1	True				
ANR	3210657	IdentifierDecl	count = 8 * ( ff_celt_freq_range [ i ] - ff_celt_freq_range [ i - 1 ] )		3210315	0					
ANR	3210658	IdentifierDeclType	int		3210315	0					
ANR	3210659	Identifier	count		3210315	1					
ANR	3210660	AssignmentExpression	count = 8 * ( ff_celt_freq_range [ i ] - ff_celt_freq_range [ i - 1 ] )		3210315	2		=			
ANR	3210661	Identifier	count		3210315	0					
ANR	3210662	MultiplicativeExpression	8 * ( ff_celt_freq_range [ i ] - ff_celt_freq_range [ i - 1 ] )		3210315	1		*			
ANR	3210663	PrimaryExpression	8		3210315	0					
ANR	3210664	AdditiveExpression	ff_celt_freq_range [ i ] - ff_celt_freq_range [ i - 1 ]		3210315	1		-			
ANR	3210665	ArrayIndexing	ff_celt_freq_range [ i ]		3210315	0					
ANR	3210666	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210667	Identifier	i		3210315	1					
ANR	3210668	ArrayIndexing	ff_celt_freq_range [ i - 1 ]		3210315	1					
ANR	3210669	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210670	AdditiveExpression	i - 1		3210315	1		-			
ANR	3210671	Identifier	i		3210315	0					
ANR	3210672	PrimaryExpression	1		3210315	1					
ANR	3210673	ExpressionStatement	"memcpy ( & norm1 [ offset ] , & norm1 [ offset - count ] , count * sizeof ( float ) )"	89:12:1827:1896	3210315	2	True				
ANR	3210674	CallExpression	"memcpy ( & norm1 [ offset ] , & norm1 [ offset - count ] , count * sizeof ( float ) )"		3210315	0					
ANR	3210675	Callee	memcpy		3210315	0					
ANR	3210676	Identifier	memcpy		3210315	0					
ANR	3210677	ArgumentList	& norm1 [ offset ]		3210315	1					
ANR	3210678	Argument	& norm1 [ offset ]		3210315	0					
ANR	3210679	UnaryOperationExpression	& norm1 [ offset ]		3210315	0					
ANR	3210680	UnaryOperator	&		3210315	0					
ANR	3210681	ArrayIndexing	norm1 [ offset ]		3210315	1					
ANR	3210682	Identifier	norm1		3210315	0					
ANR	3210683	Identifier	offset		3210315	1					
ANR	3210684	Argument	& norm1 [ offset - count ]		3210315	1					
ANR	3210685	UnaryOperationExpression	& norm1 [ offset - count ]		3210315	0					
ANR	3210686	UnaryOperator	&		3210315	0					
ANR	3210687	ArrayIndexing	norm1 [ offset - count ]		3210315	1					
ANR	3210688	Identifier	norm1		3210315	0					
ANR	3210689	AdditiveExpression	offset - count		3210315	1		-			
ANR	3210690	Identifier	offset		3210315	0					
ANR	3210691	Identifier	count		3210315	1					
ANR	3210692	Argument	count * sizeof ( float )		3210315	2					
ANR	3210693	MultiplicativeExpression	count * sizeof ( float )		3210315	0		*			
ANR	3210694	Identifier	count		3210315	0					
ANR	3210695	SizeofExpression	sizeof ( float )		3210315	1					
ANR	3210696	Sizeof	sizeof		3210315	0					
ANR	3210697	SizeofOperand	float		3210315	1					
ANR	3210698	IfStatement	if ( f -> channels == 2 )		3210315	3					
ANR	3210699	Condition	f -> channels == 2	93:16:1917:1932	3210315	0	True				
ANR	3210700	EqualityExpression	f -> channels == 2		3210315	0		==			
ANR	3210701	PtrMemberAccess	f -> channels		3210315	0					
ANR	3210702	Identifier	f		3210315	0					
ANR	3210703	Identifier	channels		3210315	1					
ANR	3210704	PrimaryExpression	2		3210315	1					
ANR	3210705	ExpressionStatement	"memcpy ( & norm2 [ offset ] , & norm2 [ offset - count ] , count * sizeof ( float ) )"	95:16:1952:2021	3210315	1	True				
ANR	3210706	CallExpression	"memcpy ( & norm2 [ offset ] , & norm2 [ offset - count ] , count * sizeof ( float ) )"		3210315	0					
ANR	3210707	Callee	memcpy		3210315	0					
ANR	3210708	Identifier	memcpy		3210315	0					
ANR	3210709	ArgumentList	& norm2 [ offset ]		3210315	1					
ANR	3210710	Argument	& norm2 [ offset ]		3210315	0					
ANR	3210711	UnaryOperationExpression	& norm2 [ offset ]		3210315	0					
ANR	3210712	UnaryOperator	&		3210315	0					
ANR	3210713	ArrayIndexing	norm2 [ offset ]		3210315	1					
ANR	3210714	Identifier	norm2		3210315	0					
ANR	3210715	Identifier	offset		3210315	1					
ANR	3210716	Argument	& norm2 [ offset - count ]		3210315	1					
ANR	3210717	UnaryOperationExpression	& norm2 [ offset - count ]		3210315	0					
ANR	3210718	UnaryOperator	&		3210315	0					
ANR	3210719	ArrayIndexing	norm2 [ offset - count ]		3210315	1					
ANR	3210720	Identifier	norm2		3210315	0					
ANR	3210721	AdditiveExpression	offset - count		3210315	1		-			
ANR	3210722	Identifier	offset		3210315	0					
ANR	3210723	Identifier	count		3210315	1					
ANR	3210724	Argument	count * sizeof ( float )		3210315	2					
ANR	3210725	MultiplicativeExpression	count * sizeof ( float )		3210315	0		*			
ANR	3210726	Identifier	count		3210315	0					
ANR	3210727	SizeofExpression	sizeof ( float )		3210315	1					
ANR	3210728	Sizeof	sizeof		3210315	0					
ANR	3210729	SizeofOperand	float		3210315	1					
ANR	3210730	IfStatement	if ( lowband_offset != 0 && ( f -> spread != CELT_SPREAD_AGGRESSIVE || f -> blocks > 1 || f -> tf_change [ i ] < 0 ) )		3210315	14					
ANR	3210731	Condition	lowband_offset != 0 && ( f -> spread != CELT_SPREAD_AGGRESSIVE || f -> blocks > 1 || f -> tf_change [ i ] < 0 )	105:12:2173:2309	3210315	0	True				
ANR	3210732	AndExpression	lowband_offset != 0 && ( f -> spread != CELT_SPREAD_AGGRESSIVE || f -> blocks > 1 || f -> tf_change [ i ] < 0 )		3210315	0		&&			
ANR	3210733	EqualityExpression	lowband_offset != 0		3210315	0		!=			
ANR	3210734	Identifier	lowband_offset		3210315	0					
ANR	3210735	PrimaryExpression	0		3210315	1					
ANR	3210736	OrExpression	f -> spread != CELT_SPREAD_AGGRESSIVE || f -> blocks > 1 || f -> tf_change [ i ] < 0		3210315	1		||			
ANR	3210737	EqualityExpression	f -> spread != CELT_SPREAD_AGGRESSIVE		3210315	0		!=			
ANR	3210738	PtrMemberAccess	f -> spread		3210315	0					
ANR	3210739	Identifier	f		3210315	0					
ANR	3210740	Identifier	spread		3210315	1					
ANR	3210741	Identifier	CELT_SPREAD_AGGRESSIVE		3210315	1					
ANR	3210742	OrExpression	f -> blocks > 1 || f -> tf_change [ i ] < 0		3210315	1		||			
ANR	3210743	RelationalExpression	f -> blocks > 1		3210315	0		>			
ANR	3210744	PtrMemberAccess	f -> blocks		3210315	0					
ANR	3210745	Identifier	f		3210315	0					
ANR	3210746	Identifier	blocks		3210315	1					
ANR	3210747	PrimaryExpression	1		3210315	1					
ANR	3210748	RelationalExpression	f -> tf_change [ i ] < 0		3210315	1		<			
ANR	3210749	ArrayIndexing	f -> tf_change [ i ]		3210315	0					
ANR	3210750	PtrMemberAccess	f -> tf_change		3210315	0					
ANR	3210751	Identifier	f		3210315	0					
ANR	3210752	Identifier	tf_change		3210315	1					
ANR	3210753	Identifier	i		3210315	1					
ANR	3210754	PrimaryExpression	0		3210315	1					
ANR	3210755	CompoundStatement		107:12:2266:2288	3210315	1					
ANR	3210756	IdentifierDeclStatement	"int foldstart , foldend ;"	109:12:2327:2349	3210315	0	True				
ANR	3210757	IdentifierDecl	foldstart		3210315	0					
ANR	3210758	IdentifierDeclType	int		3210315	0					
ANR	3210759	Identifier	foldstart		3210315	1					
ANR	3210760	IdentifierDecl	foldend		3210315	1					
ANR	3210761	IdentifierDeclType	int		3210315	0					
ANR	3210762	Identifier	foldend		3210315	1					
ANR	3210763	ExpressionStatement	"effective_lowband = FFMAX ( ff_celt_freq_bands [ f -> start_band ] , ff_celt_freq_bands [ lowband_offset ] - ff_celt_freq_range [ i ] )"	115:12:2447:2606	3210315	1	True				
ANR	3210764	AssignmentExpression	"effective_lowband = FFMAX ( ff_celt_freq_bands [ f -> start_band ] , ff_celt_freq_bands [ lowband_offset ] - ff_celt_freq_range [ i ] )"		3210315	0		=			
ANR	3210765	Identifier	effective_lowband		3210315	0					
ANR	3210766	CallExpression	"FFMAX ( ff_celt_freq_bands [ f -> start_band ] , ff_celt_freq_bands [ lowband_offset ] - ff_celt_freq_range [ i ] )"		3210315	1					
ANR	3210767	Callee	FFMAX		3210315	0					
ANR	3210768	Identifier	FFMAX		3210315	0					
ANR	3210769	ArgumentList	ff_celt_freq_bands [ f -> start_band ]		3210315	1					
ANR	3210770	Argument	ff_celt_freq_bands [ f -> start_band ]		3210315	0					
ANR	3210771	ArrayIndexing	ff_celt_freq_bands [ f -> start_band ]		3210315	0					
ANR	3210772	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210773	PtrMemberAccess	f -> start_band		3210315	1					
ANR	3210774	Identifier	f		3210315	0					
ANR	3210775	Identifier	start_band		3210315	1					
ANR	3210776	Argument	ff_celt_freq_bands [ lowband_offset ] - ff_celt_freq_range [ i ]		3210315	1					
ANR	3210777	AdditiveExpression	ff_celt_freq_bands [ lowband_offset ] - ff_celt_freq_range [ i ]		3210315	0		-			
ANR	3210778	ArrayIndexing	ff_celt_freq_bands [ lowband_offset ]		3210315	0					
ANR	3210779	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210780	Identifier	lowband_offset		3210315	1					
ANR	3210781	ArrayIndexing	ff_celt_freq_range [ i ]		3210315	1					
ANR	3210782	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210783	Identifier	i		3210315	1					
ANR	3210784	ExpressionStatement	foldstart = lowband_offset	119:12:2621:2647	3210315	2	True				
ANR	3210785	AssignmentExpression	foldstart = lowband_offset		3210315	0		=			
ANR	3210786	Identifier	foldstart		3210315	0					
ANR	3210787	Identifier	lowband_offset		3210315	1					
ANR	3210788	WhileStatement	while ( ff_celt_freq_bands [ -- foldstart ] > effective_lowband )		3210315	3					
ANR	3210789	Condition	ff_celt_freq_bands [ -- foldstart ] > effective_lowband	121:19:2669:2719	3210315	0	True				
ANR	3210790	RelationalExpression	ff_celt_freq_bands [ -- foldstart ] > effective_lowband		3210315	0		>			
ANR	3210791	ArrayIndexing	ff_celt_freq_bands [ -- foldstart ]		3210315	0					
ANR	3210792	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210793	UnaryExpression	-- foldstart		3210315	1					
ANR	3210794	IncDec	--		3210315	0					
ANR	3210795	Identifier	foldstart		3210315	1					
ANR	3210796	Identifier	effective_lowband		3210315	1					
ANR	3210797	ExpressionStatement		121:71:2721:2721	3210315	1	True				
ANR	3210798	ExpressionStatement	foldend = lowband_offset - 1	123:12:2736:2764	3210315	4	True				
ANR	3210799	AssignmentExpression	foldend = lowband_offset - 1		3210315	0		=			
ANR	3210800	Identifier	foldend		3210315	0					
ANR	3210801	AdditiveExpression	lowband_offset - 1		3210315	1		-			
ANR	3210802	Identifier	lowband_offset		3210315	0					
ANR	3210803	PrimaryExpression	1		3210315	1					
ANR	3210804	WhileStatement	while ( ++ foldend < i && ff_celt_freq_bands [ foldend ] < effective_lowband + ff_celt_freq_range [ i ] )		3210315	5					
ANR	3210805	Condition	++ foldend < i && ff_celt_freq_bands [ foldend ] < effective_lowband + ff_celt_freq_range [ i ]	125:19:2786:2873	3210315	0	True				
ANR	3210806	AndExpression	++ foldend < i && ff_celt_freq_bands [ foldend ] < effective_lowband + ff_celt_freq_range [ i ]		3210315	0		&&			
ANR	3210807	RelationalExpression	++ foldend < i		3210315	0		<			
ANR	3210808	UnaryExpression	++ foldend		3210315	0					
ANR	3210809	IncDec	++		3210315	0					
ANR	3210810	Identifier	foldend		3210315	1					
ANR	3210811	Identifier	i		3210315	1					
ANR	3210812	RelationalExpression	ff_celt_freq_bands [ foldend ] < effective_lowband + ff_celt_freq_range [ i ]		3210315	1		<			
ANR	3210813	ArrayIndexing	ff_celt_freq_bands [ foldend ]		3210315	0					
ANR	3210814	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210815	Identifier	foldend		3210315	1					
ANR	3210816	AdditiveExpression	effective_lowband + ff_celt_freq_range [ i ]		3210315	1		+			
ANR	3210817	Identifier	effective_lowband		3210315	0					
ANR	3210818	ArrayIndexing	ff_celt_freq_range [ i ]		3210315	1					
ANR	3210819	Identifier	ff_celt_freq_range		3210315	0					
ANR	3210820	Identifier	i		3210315	1					
ANR	3210821	ExpressionStatement		125:108:2875:2875	3210315	1	True				
ANR	3210822	ExpressionStatement	cm [ 0 ] = cm [ 1 ] = 0	129:12:2892:2909	3210315	6	True				
ANR	3210823	AssignmentExpression	cm [ 0 ] = cm [ 1 ] = 0		3210315	0		=			
ANR	3210824	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3210825	Identifier	cm		3210315	0					
ANR	3210826	PrimaryExpression	0		3210315	1					
ANR	3210827	AssignmentExpression	cm [ 1 ] = 0		3210315	1		=			
ANR	3210828	ArrayIndexing	cm [ 1 ]		3210315	0					
ANR	3210829	Identifier	cm		3210315	0					
ANR	3210830	PrimaryExpression	1		3210315	1					
ANR	3210831	PrimaryExpression	0		3210315	1					
ANR	3210832	ForStatement	for ( j = foldstart ; j < foldend ; j ++ )		3210315	7					
ANR	3210833	ForInit	j = foldstart ;	131:17:2929:2942	3210315	0	True				
ANR	3210834	AssignmentExpression	j = foldstart		3210315	0		=			
ANR	3210835	Identifier	j		3210315	0					
ANR	3210836	Identifier	foldstart		3210315	1					
ANR	3210837	Condition	j < foldend	131:32:2944:2954	3210315	1	True				
ANR	3210838	RelationalExpression	j < foldend		3210315	0		<			
ANR	3210839	Identifier	j		3210315	0					
ANR	3210840	Identifier	foldend		3210315	1					
ANR	3210841	PostIncDecOperationExpression	j ++	131:45:2957:2959	3210315	2	True				
ANR	3210842	Identifier	j		3210315	0					
ANR	3210843	IncDec	++		3210315	1					
ANR	3210844	CompoundStatement		129:50:2901:2901	3210315	3					
ANR	3210845	ExpressionStatement	cm [ 0 ] |= f -> block [ 0 ] . collapse_masks [ j ]	133:16:2981:3019	3210315	0	True				
ANR	3210846	AssignmentExpression	cm [ 0 ] |= f -> block [ 0 ] . collapse_masks [ j ]		3210315	0		|=			
ANR	3210847	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3210848	Identifier	cm		3210315	0					
ANR	3210849	PrimaryExpression	0		3210315	1					
ANR	3210850	ArrayIndexing	f -> block [ 0 ] . collapse_masks [ j ]		3210315	1					
ANR	3210851	MemberAccess	f -> block [ 0 ] . collapse_masks		3210315	0					
ANR	3210852	ArrayIndexing	f -> block [ 0 ]		3210315	0					
ANR	3210853	PtrMemberAccess	f -> block		3210315	0					
ANR	3210854	Identifier	f		3210315	0					
ANR	3210855	Identifier	block		3210315	1					
ANR	3210856	PrimaryExpression	0		3210315	1					
ANR	3210857	Identifier	collapse_masks		3210315	1					
ANR	3210858	Identifier	j		3210315	1					
ANR	3210859	ExpressionStatement	cm [ 1 ] |= f -> block [ f -> channels - 1 ] . collapse_masks [ j ]	135:16:3038:3090	3210315	1	True				
ANR	3210860	AssignmentExpression	cm [ 1 ] |= f -> block [ f -> channels - 1 ] . collapse_masks [ j ]		3210315	0		|=			
ANR	3210861	ArrayIndexing	cm [ 1 ]		3210315	0					
ANR	3210862	Identifier	cm		3210315	0					
ANR	3210863	PrimaryExpression	1		3210315	1					
ANR	3210864	ArrayIndexing	f -> block [ f -> channels - 1 ] . collapse_masks [ j ]		3210315	1					
ANR	3210865	MemberAccess	f -> block [ f -> channels - 1 ] . collapse_masks		3210315	0					
ANR	3210866	ArrayIndexing	f -> block [ f -> channels - 1 ]		3210315	0					
ANR	3210867	PtrMemberAccess	f -> block		3210315	0					
ANR	3210868	Identifier	f		3210315	0					
ANR	3210869	Identifier	block		3210315	1					
ANR	3210870	AdditiveExpression	f -> channels - 1		3210315	1		-			
ANR	3210871	PtrMemberAccess	f -> channels		3210315	0					
ANR	3210872	Identifier	f		3210315	0					
ANR	3210873	Identifier	channels		3210315	1					
ANR	3210874	PrimaryExpression	1		3210315	1					
ANR	3210875	Identifier	collapse_masks		3210315	1					
ANR	3210876	Identifier	j		3210315	1					
ANR	3210877	IfStatement	if ( f -> dual_stereo && i == f -> intensity_stereo )		3210315	15					
ANR	3210878	Condition	f -> dual_stereo && i == f -> intensity_stereo	143:12:3133:3174	3210315	0	True				
ANR	3210879	AndExpression	f -> dual_stereo && i == f -> intensity_stereo		3210315	0		&&			
ANR	3210880	PtrMemberAccess	f -> dual_stereo		3210315	0					
ANR	3210881	Identifier	f		3210315	0					
ANR	3210882	Identifier	dual_stereo		3210315	1					
ANR	3210883	EqualityExpression	i == f -> intensity_stereo		3210315	1		==			
ANR	3210884	Identifier	i		3210315	0					
ANR	3210885	PtrMemberAccess	f -> intensity_stereo		3210315	1					
ANR	3210886	Identifier	f		3210315	0					
ANR	3210887	Identifier	intensity_stereo		3210315	1					
ANR	3210888	CompoundStatement		141:56:3116:3116	3210315	1					
ANR	3210889	ExpressionStatement	f -> dual_stereo = 0	147:12:3250:3268	3210315	0	True				
ANR	3210890	AssignmentExpression	f -> dual_stereo = 0		3210315	0		=			
ANR	3210891	PtrMemberAccess	f -> dual_stereo		3210315	0					
ANR	3210892	Identifier	f		3210315	0					
ANR	3210893	Identifier	dual_stereo		3210315	1					
ANR	3210894	PrimaryExpression	0		3210315	1					
ANR	3210895	ForStatement	for ( j = ff_celt_freq_bands [ f -> start_band ] << f -> size ; j < band_offset ; j ++ )		3210315	1					
ANR	3210896	ForInit	j = ff_celt_freq_bands [ f -> start_band ] << f -> size ;	149:17:3288:3336	3210315	0	True				
ANR	3210897	AssignmentExpression	j = ff_celt_freq_bands [ f -> start_band ] << f -> size		3210315	0		=			
ANR	3210898	Identifier	j		3210315	0					
ANR	3210899	ShiftExpression	ff_celt_freq_bands [ f -> start_band ] << f -> size		3210315	1		<<			
ANR	3210900	ArrayIndexing	ff_celt_freq_bands [ f -> start_band ]		3210315	0					
ANR	3210901	Identifier	ff_celt_freq_bands		3210315	0					
ANR	3210902	PtrMemberAccess	f -> start_band		3210315	1					
ANR	3210903	Identifier	f		3210315	0					
ANR	3210904	Identifier	start_band		3210315	1					
ANR	3210905	PtrMemberAccess	f -> size		3210315	1					
ANR	3210906	Identifier	f		3210315	0					
ANR	3210907	Identifier	size		3210315	1					
ANR	3210908	Condition	j < band_offset	149:67:3338:3352	3210315	1	True				
ANR	3210909	RelationalExpression	j < band_offset		3210315	0		<			
ANR	3210910	Identifier	j		3210315	0					
ANR	3210911	Identifier	band_offset		3210315	1					
ANR	3210912	PostIncDecOperationExpression	j ++	149:84:3355:3357	3210315	2	True				
ANR	3210913	Identifier	j		3210315	0					
ANR	3210914	IncDec	++		3210315	1					
ANR	3210915	ExpressionStatement	norm1 [ j ] = ( norm1 [ j ] + norm2 [ j ] ) / 2	151:16:3377:3413	3210315	3	True				
ANR	3210916	AssignmentExpression	norm1 [ j ] = ( norm1 [ j ] + norm2 [ j ] ) / 2		3210315	0		=			
ANR	3210917	ArrayIndexing	norm1 [ j ]		3210315	0					
ANR	3210918	Identifier	norm1		3210315	0					
ANR	3210919	Identifier	j		3210315	1					
ANR	3210920	MultiplicativeExpression	( norm1 [ j ] + norm2 [ j ] ) / 2		3210315	1		/			
ANR	3210921	AdditiveExpression	norm1 [ j ] + norm2 [ j ]		3210315	0		+			
ANR	3210922	ArrayIndexing	norm1 [ j ]		3210315	0					
ANR	3210923	Identifier	norm1		3210315	0					
ANR	3210924	Identifier	j		3210315	1					
ANR	3210925	ArrayIndexing	norm2 [ j ]		3210315	1					
ANR	3210926	Identifier	norm2		3210315	0					
ANR	3210927	Identifier	j		3210315	1					
ANR	3210928	PrimaryExpression	2		3210315	1					
ANR	3210929	ExpressionStatement	norm_loc1 = effective_lowband != - 1 ? norm1 + ( effective_lowband << f -> size ) : NULL	157:8:3437:3520	3210315	16	True				
ANR	3210930	AssignmentExpression	norm_loc1 = effective_lowband != - 1 ? norm1 + ( effective_lowband << f -> size ) : NULL		3210315	0		=			
ANR	3210931	Identifier	norm_loc1		3210315	0					
ANR	3210932	ConditionalExpression	effective_lowband != - 1 ? norm1 + ( effective_lowband << f -> size ) : NULL		3210315	1					
ANR	3210933	Condition	effective_lowband != - 1		3210315	0					
ANR	3210934	EqualityExpression	effective_lowband != - 1		3210315	0		!=			
ANR	3210935	Identifier	effective_lowband		3210315	0					
ANR	3210936	UnaryOperationExpression	- 1		3210315	1					
ANR	3210937	UnaryOperator	-		3210315	0					
ANR	3210938	PrimaryExpression	1		3210315	1					
ANR	3210939	AdditiveExpression	norm1 + ( effective_lowband << f -> size )		3210315	1		+			
ANR	3210940	Identifier	norm1		3210315	0					
ANR	3210941	ShiftExpression	effective_lowband << f -> size		3210315	1		<<			
ANR	3210942	Identifier	effective_lowband		3210315	0					
ANR	3210943	PtrMemberAccess	f -> size		3210315	1					
ANR	3210944	Identifier	f		3210315	0					
ANR	3210945	Identifier	size		3210315	1					
ANR	3210946	Identifier	NULL		3210315	2					
ANR	3210947	ExpressionStatement	norm_loc2 = effective_lowband != - 1 ? norm2 + ( effective_lowband << f -> size ) : NULL	159:8:3531:3614	3210315	17	True				
ANR	3210948	AssignmentExpression	norm_loc2 = effective_lowband != - 1 ? norm2 + ( effective_lowband << f -> size ) : NULL		3210315	0		=			
ANR	3210949	Identifier	norm_loc2		3210315	0					
ANR	3210950	ConditionalExpression	effective_lowband != - 1 ? norm2 + ( effective_lowband << f -> size ) : NULL		3210315	1					
ANR	3210951	Condition	effective_lowband != - 1		3210315	0					
ANR	3210952	EqualityExpression	effective_lowband != - 1		3210315	0		!=			
ANR	3210953	Identifier	effective_lowband		3210315	0					
ANR	3210954	UnaryOperationExpression	- 1		3210315	1					
ANR	3210955	UnaryOperator	-		3210315	0					
ANR	3210956	PrimaryExpression	1		3210315	1					
ANR	3210957	AdditiveExpression	norm2 + ( effective_lowband << f -> size )		3210315	1		+			
ANR	3210958	Identifier	norm2		3210315	0					
ANR	3210959	ShiftExpression	effective_lowband << f -> size		3210315	1		<<			
ANR	3210960	Identifier	effective_lowband		3210315	0					
ANR	3210961	PtrMemberAccess	f -> size		3210315	1					
ANR	3210962	Identifier	f		3210315	0					
ANR	3210963	Identifier	size		3210315	1					
ANR	3210964	Identifier	NULL		3210315	2					
ANR	3210965	IfStatement	if ( f -> dual_stereo )		3210315	18					
ANR	3210966	Condition	f -> dual_stereo	163:12:3631:3644	3210315	0	True				
ANR	3210967	PtrMemberAccess	f -> dual_stereo		3210315	0					
ANR	3210968	Identifier	f		3210315	0					
ANR	3210969	Identifier	dual_stereo		3210315	1					
ANR	3210970	CompoundStatement		161:28:3586:3586	3210315	1					
ANR	3210971	ExpressionStatement	"cm [ 0 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , NULL , band_size , b >> 1 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] )"	165:12:3662:3939	3210315	0	True				
ANR	3210972	AssignmentExpression	"cm [ 0 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , NULL , band_size , b >> 1 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] )"		3210315	0		=			
ANR	3210973	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3210974	Identifier	cm		3210315	0					
ANR	3210975	PrimaryExpression	0		3210315	1					
ANR	3210976	CallExpression	"f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , NULL , band_size , b >> 1 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] )"		3210315	1					
ANR	3210977	Callee	f -> pvq -> quant_band		3210315	0					
ANR	3210978	PtrMemberAccess	f -> pvq -> quant_band		3210315	0					
ANR	3210979	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3210980	Identifier	f		3210315	0					
ANR	3210981	Identifier	pvq		3210315	1					
ANR	3210982	Identifier	quant_band		3210315	1					
ANR	3210983	ArgumentList	f -> pvq		3210315	1					
ANR	3210984	Argument	f -> pvq		3210315	0					
ANR	3210985	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3210986	Identifier	f		3210315	0					
ANR	3210987	Identifier	pvq		3210315	1					
ANR	3210988	Argument	f		3210315	1					
ANR	3210989	Identifier	f		3210315	0					
ANR	3210990	Argument	rc		3210315	2					
ANR	3210991	Identifier	rc		3210315	0					
ANR	3210992	Argument	i		3210315	3					
ANR	3210993	Identifier	i		3210315	0					
ANR	3210994	Argument	X		3210315	4					
ANR	3210995	Identifier	X		3210315	0					
ANR	3210996	Argument	NULL		3210315	5					
ANR	3210997	Identifier	NULL		3210315	0					
ANR	3210998	Argument	band_size		3210315	6					
ANR	3210999	Identifier	band_size		3210315	0					
ANR	3211000	Argument	b >> 1		3210315	7					
ANR	3211001	ShiftExpression	b >> 1		3210315	0		>>			
ANR	3211002	Identifier	b		3210315	0					
ANR	3211003	PrimaryExpression	1		3210315	1					
ANR	3211004	Argument	f -> blocks		3210315	8					
ANR	3211005	PtrMemberAccess	f -> blocks		3210315	0					
ANR	3211006	Identifier	f		3210315	0					
ANR	3211007	Identifier	blocks		3210315	1					
ANR	3211008	Argument	norm_loc1		3210315	9					
ANR	3211009	Identifier	norm_loc1		3210315	0					
ANR	3211010	Argument	f -> size		3210315	10					
ANR	3211011	PtrMemberAccess	f -> size		3210315	0					
ANR	3211012	Identifier	f		3210315	0					
ANR	3211013	Identifier	size		3210315	1					
ANR	3211014	Argument	norm1 + band_offset		3210315	11					
ANR	3211015	AdditiveExpression	norm1 + band_offset		3210315	0		+			
ANR	3211016	Identifier	norm1		3210315	0					
ANR	3211017	Identifier	band_offset		3210315	1					
ANR	3211018	Argument	0		3210315	12					
ANR	3211019	PrimaryExpression	0		3210315	0					
ANR	3211020	Argument	1.0f		3210315	13					
ANR	3211021	PrimaryExpression	1.0f		3210315	0					
ANR	3211022	Argument	lowband_scratch		3210315	14					
ANR	3211023	Identifier	lowband_scratch		3210315	0					
ANR	3211024	Argument	cm [ 0 ]		3210315	15					
ANR	3211025	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3211026	Identifier	cm		3210315	0					
ANR	3211027	PrimaryExpression	0		3210315	1					
ANR	3211028	ExpressionStatement	"cm [ 1 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , Y , NULL , band_size , b >> 1 , f -> blocks , norm_loc2 , f -> size , norm2 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 1 ] )"	175:12:3956:4233	3210315	1	True				
ANR	3211029	AssignmentExpression	"cm [ 1 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , Y , NULL , band_size , b >> 1 , f -> blocks , norm_loc2 , f -> size , norm2 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 1 ] )"		3210315	0		=			
ANR	3211030	ArrayIndexing	cm [ 1 ]		3210315	0					
ANR	3211031	Identifier	cm		3210315	0					
ANR	3211032	PrimaryExpression	1		3210315	1					
ANR	3211033	CallExpression	"f -> pvq -> quant_band ( f -> pvq , f , rc , i , Y , NULL , band_size , b >> 1 , f -> blocks , norm_loc2 , f -> size , norm2 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 1 ] )"		3210315	1					
ANR	3211034	Callee	f -> pvq -> quant_band		3210315	0					
ANR	3211035	PtrMemberAccess	f -> pvq -> quant_band		3210315	0					
ANR	3211036	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3211037	Identifier	f		3210315	0					
ANR	3211038	Identifier	pvq		3210315	1					
ANR	3211039	Identifier	quant_band		3210315	1					
ANR	3211040	ArgumentList	f -> pvq		3210315	1					
ANR	3211041	Argument	f -> pvq		3210315	0					
ANR	3211042	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3211043	Identifier	f		3210315	0					
ANR	3211044	Identifier	pvq		3210315	1					
ANR	3211045	Argument	f		3210315	1					
ANR	3211046	Identifier	f		3210315	0					
ANR	3211047	Argument	rc		3210315	2					
ANR	3211048	Identifier	rc		3210315	0					
ANR	3211049	Argument	i		3210315	3					
ANR	3211050	Identifier	i		3210315	0					
ANR	3211051	Argument	Y		3210315	4					
ANR	3211052	Identifier	Y		3210315	0					
ANR	3211053	Argument	NULL		3210315	5					
ANR	3211054	Identifier	NULL		3210315	0					
ANR	3211055	Argument	band_size		3210315	6					
ANR	3211056	Identifier	band_size		3210315	0					
ANR	3211057	Argument	b >> 1		3210315	7					
ANR	3211058	ShiftExpression	b >> 1		3210315	0		>>			
ANR	3211059	Identifier	b		3210315	0					
ANR	3211060	PrimaryExpression	1		3210315	1					
ANR	3211061	Argument	f -> blocks		3210315	8					
ANR	3211062	PtrMemberAccess	f -> blocks		3210315	0					
ANR	3211063	Identifier	f		3210315	0					
ANR	3211064	Identifier	blocks		3210315	1					
ANR	3211065	Argument	norm_loc2		3210315	9					
ANR	3211066	Identifier	norm_loc2		3210315	0					
ANR	3211067	Argument	f -> size		3210315	10					
ANR	3211068	PtrMemberAccess	f -> size		3210315	0					
ANR	3211069	Identifier	f		3210315	0					
ANR	3211070	Identifier	size		3210315	1					
ANR	3211071	Argument	norm2 + band_offset		3210315	11					
ANR	3211072	AdditiveExpression	norm2 + band_offset		3210315	0		+			
ANR	3211073	Identifier	norm2		3210315	0					
ANR	3211074	Identifier	band_offset		3210315	1					
ANR	3211075	Argument	0		3210315	12					
ANR	3211076	PrimaryExpression	0		3210315	0					
ANR	3211077	Argument	1.0f		3210315	13					
ANR	3211078	PrimaryExpression	1.0f		3210315	0					
ANR	3211079	Argument	lowband_scratch		3210315	14					
ANR	3211080	Identifier	lowband_scratch		3210315	0					
ANR	3211081	Argument	cm [ 1 ]		3210315	15					
ANR	3211082	ArrayIndexing	cm [ 1 ]		3210315	0					
ANR	3211083	Identifier	cm		3210315	0					
ANR	3211084	PrimaryExpression	1		3210315	1					
ANR	3211085	ElseStatement	else		3210315	0					
ANR	3211086	CompoundStatement		181:15:4190:4190	3210315	0					
ANR	3211087	ExpressionStatement	"cm [ 0 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , Y , band_size , b >> 0 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] | cm [ 1 ] )"	185:12:4266:4551	3210315	0	True				
ANR	3211088	AssignmentExpression	"cm [ 0 ] = f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , Y , band_size , b >> 0 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] | cm [ 1 ] )"		3210315	0		=			
ANR	3211089	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3211090	Identifier	cm		3210315	0					
ANR	3211091	PrimaryExpression	0		3210315	1					
ANR	3211092	CallExpression	"f -> pvq -> quant_band ( f -> pvq , f , rc , i , X , Y , band_size , b >> 0 , f -> blocks , norm_loc1 , f -> size , norm1 + band_offset , 0 , 1.0f , lowband_scratch , cm [ 0 ] | cm [ 1 ] )"		3210315	1					
ANR	3211093	Callee	f -> pvq -> quant_band		3210315	0					
ANR	3211094	PtrMemberAccess	f -> pvq -> quant_band		3210315	0					
ANR	3211095	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3211096	Identifier	f		3210315	0					
ANR	3211097	Identifier	pvq		3210315	1					
ANR	3211098	Identifier	quant_band		3210315	1					
ANR	3211099	ArgumentList	f -> pvq		3210315	1					
ANR	3211100	Argument	f -> pvq		3210315	0					
ANR	3211101	PtrMemberAccess	f -> pvq		3210315	0					
ANR	3211102	Identifier	f		3210315	0					
ANR	3211103	Identifier	pvq		3210315	1					
ANR	3211104	Argument	f		3210315	1					
ANR	3211105	Identifier	f		3210315	0					
ANR	3211106	Argument	rc		3210315	2					
ANR	3211107	Identifier	rc		3210315	0					
ANR	3211108	Argument	i		3210315	3					
ANR	3211109	Identifier	i		3210315	0					
ANR	3211110	Argument	X		3210315	4					
ANR	3211111	Identifier	X		3210315	0					
ANR	3211112	Argument	Y		3210315	5					
ANR	3211113	Identifier	Y		3210315	0					
ANR	3211114	Argument	band_size		3210315	6					
ANR	3211115	Identifier	band_size		3210315	0					
ANR	3211116	Argument	b >> 0		3210315	7					
ANR	3211117	ShiftExpression	b >> 0		3210315	0		>>			
ANR	3211118	Identifier	b		3210315	0					
ANR	3211119	PrimaryExpression	0		3210315	1					
ANR	3211120	Argument	f -> blocks		3210315	8					
ANR	3211121	PtrMemberAccess	f -> blocks		3210315	0					
ANR	3211122	Identifier	f		3210315	0					
ANR	3211123	Identifier	blocks		3210315	1					
ANR	3211124	Argument	norm_loc1		3210315	9					
ANR	3211125	Identifier	norm_loc1		3210315	0					
ANR	3211126	Argument	f -> size		3210315	10					
ANR	3211127	PtrMemberAccess	f -> size		3210315	0					
ANR	3211128	Identifier	f		3210315	0					
ANR	3211129	Identifier	size		3210315	1					
ANR	3211130	Argument	norm1 + band_offset		3210315	11					
ANR	3211131	AdditiveExpression	norm1 + band_offset		3210315	0		+			
ANR	3211132	Identifier	norm1		3210315	0					
ANR	3211133	Identifier	band_offset		3210315	1					
ANR	3211134	Argument	0		3210315	12					
ANR	3211135	PrimaryExpression	0		3210315	0					
ANR	3211136	Argument	1.0f		3210315	13					
ANR	3211137	PrimaryExpression	1.0f		3210315	0					
ANR	3211138	Argument	lowband_scratch		3210315	14					
ANR	3211139	Identifier	lowband_scratch		3210315	0					
ANR	3211140	Argument	cm [ 0 ] | cm [ 1 ]		3210315	15					
ANR	3211141	InclusiveOrExpression	cm [ 0 ] | cm [ 1 ]		3210315	0		|			
ANR	3211142	ArrayIndexing	cm [ 0 ]		3210315	0					
ANR	3211143	Identifier	cm		3210315	0					
ANR	3211144	PrimaryExpression	0		3210315	1					
ANR	3211145	ArrayIndexing	cm [ 1 ]		3210315	1					
ANR	3211146	Identifier	cm		3210315	0					
ANR	3211147	PrimaryExpression	1		3210315	1					
ANR	3211148	ExpressionStatement	cm [ 1 ] = cm [ 0 ]	193:12:4566:4579	3210315	1	True				
ANR	3211149	AssignmentExpression	cm [ 1 ] = cm [ 0 ]		3210315	0		=			
ANR	3211150	ArrayIndexing	cm [ 1 ]		3210315	0					
ANR	3211151	Identifier	cm		3210315	0					
ANR	3211152	PrimaryExpression	1		3210315	1					
ANR	3211153	ArrayIndexing	cm [ 0 ]		3210315	1					
ANR	3211154	Identifier	cm		3210315	0					
ANR	3211155	PrimaryExpression	0		3210315	1					
ANR	3211156	ExpressionStatement	f -> block [ 0 ] . collapse_masks [ i ] = ( uint8_t ) cm [ 0 ]	199:8:4603:4663	3210315	19	True				
ANR	3211157	AssignmentExpression	f -> block [ 0 ] . collapse_masks [ i ] = ( uint8_t ) cm [ 0 ]		3210315	0		=			
ANR	3211158	ArrayIndexing	f -> block [ 0 ] . collapse_masks [ i ]		3210315	0					
ANR	3211159	MemberAccess	f -> block [ 0 ] . collapse_masks		3210315	0					
ANR	3211160	ArrayIndexing	f -> block [ 0 ]		3210315	0					
ANR	3211161	PtrMemberAccess	f -> block		3210315	0					
ANR	3211162	Identifier	f		3210315	0					
ANR	3211163	Identifier	block		3210315	1					
ANR	3211164	PrimaryExpression	0		3210315	1					
ANR	3211165	Identifier	collapse_masks		3210315	1					
ANR	3211166	Identifier	i		3210315	1					
ANR	3211167	CastExpression	( uint8_t ) cm [ 0 ]		3210315	1					
ANR	3211168	CastTarget	uint8_t		3210315	0					
ANR	3211169	ArrayIndexing	cm [ 0 ]		3210315	1					
ANR	3211170	Identifier	cm		3210315	0					
ANR	3211171	PrimaryExpression	0		3210315	1					
ANR	3211172	ExpressionStatement	f -> block [ f -> channels - 1 ] . collapse_masks [ i ] = ( uint8_t ) cm [ 1 ]	201:8:4674:4734	3210315	20	True				
ANR	3211173	AssignmentExpression	f -> block [ f -> channels - 1 ] . collapse_masks [ i ] = ( uint8_t ) cm [ 1 ]		3210315	0		=			
ANR	3211174	ArrayIndexing	f -> block [ f -> channels - 1 ] . collapse_masks [ i ]		3210315	0					
ANR	3211175	MemberAccess	f -> block [ f -> channels - 1 ] . collapse_masks		3210315	0					
ANR	3211176	ArrayIndexing	f -> block [ f -> channels - 1 ]		3210315	0					
ANR	3211177	PtrMemberAccess	f -> block		3210315	0					
ANR	3211178	Identifier	f		3210315	0					
ANR	3211179	Identifier	block		3210315	1					
ANR	3211180	AdditiveExpression	f -> channels - 1		3210315	1		-			
ANR	3211181	PtrMemberAccess	f -> channels		3210315	0					
ANR	3211182	Identifier	f		3210315	0					
ANR	3211183	Identifier	channels		3210315	1					
ANR	3211184	PrimaryExpression	1		3210315	1					
ANR	3211185	Identifier	collapse_masks		3210315	1					
ANR	3211186	Identifier	i		3210315	1					
ANR	3211187	CastExpression	( uint8_t ) cm [ 1 ]		3210315	1					
ANR	3211188	CastTarget	uint8_t		3210315	0					
ANR	3211189	ArrayIndexing	cm [ 1 ]		3210315	1					
ANR	3211190	Identifier	cm		3210315	0					
ANR	3211191	PrimaryExpression	1		3210315	1					
ANR	3211192	ExpressionStatement	f -> remaining += f -> pulses [ i ] + consumed	203:8:4745:4784	3210315	21	True				
ANR	3211193	AssignmentExpression	f -> remaining += f -> pulses [ i ] + consumed		3210315	0		+=			
ANR	3211194	PtrMemberAccess	f -> remaining		3210315	0					
ANR	3211195	Identifier	f		3210315	0					
ANR	3211196	Identifier	remaining		3210315	1					
ANR	3211197	AdditiveExpression	f -> pulses [ i ] + consumed		3210315	1		+			
ANR	3211198	ArrayIndexing	f -> pulses [ i ]		3210315	0					
ANR	3211199	PtrMemberAccess	f -> pulses		3210315	0					
ANR	3211200	Identifier	f		3210315	0					
ANR	3211201	Identifier	pulses		3210315	1					
ANR	3211202	Identifier	i		3210315	1					
ANR	3211203	Identifier	consumed		3210315	1					
ANR	3211204	ExpressionStatement	update_lowband = ( b > band_size << 3 )	209:8:4883:4920	3210315	22	True				
ANR	3211205	AssignmentExpression	update_lowband = ( b > band_size << 3 )		3210315	0		=			
ANR	3211206	Identifier	update_lowband		3210315	0					
ANR	3211207	RelationalExpression	b > band_size << 3		3210315	1		>			
ANR	3211208	Identifier	b		3210315	0					
ANR	3211209	ShiftExpression	band_size << 3		3210315	1		<<			
ANR	3211210	Identifier	band_size		3210315	0					
ANR	3211211	PrimaryExpression	3		3210315	1					
ANR	3211212	ReturnType	void		3210315	1					
ANR	3211213	Identifier	ff_celt_quant_bands		3210315	2					
ANR	3211214	ParameterList	"CeltFrame * f , OpusRangeCoder * rc"		3210315	3					
ANR	3211215	Parameter	CeltFrame * f	1:25:25:36	3210315	0	True				
ANR	3211216	ParameterType	CeltFrame *		3210315	0					
ANR	3211217	Identifier	f		3210315	1					
ANR	3211218	Parameter	OpusRangeCoder * rc	1:39:39:56	3210315	1	True				
ANR	3211219	ParameterType	OpusRangeCoder *		3210315	0					
ANR	3211220	Identifier	rc		3210315	1					
ANR	3211221	CFGEntryNode	ENTRY		3210315		True				
ANR	3211222	CFGExitNode	EXIT		3210315		True				
ANR	3211223	Symbol	* f -> block [ 0 ] . collapse_masks		3210315						
ANR	3211224	Symbol	* f -> pulses		3210315						
ANR	3211225	Symbol	f -> block		3210315						
ANR	3211226	Symbol	f -> intensity_stereo		3210315						
ANR	3211227	Symbol	* f -> start_band		3210315						
ANR	3211228	Symbol	FFMIN		3210315						
ANR	3211229	Symbol	* lowband_offset		3210315						
ANR	3211230	Symbol	av_clip_uintp2		3210315						
ANR	3211231	Symbol	* f -> block [ f -> channels - 1 ] . collapse_masks		3210315						
ANR	3211232	Symbol	f -> block [ 0 ] . collapse_masks		3210315						
ANR	3211233	Symbol	* * f -> channels		3210315						
ANR	3211234	Symbol	f -> remaining2		3210315						
ANR	3211235	Symbol	* f -> block		3210315						
ANR	3211236	Symbol	ff_celt_freq_bands		3210315						
ANR	3211237	Symbol	f -> block [ f -> channels - 1 ] . collapse_masks		3210315						
ANR	3211238	Symbol	f -> blocks		3210315						
ANR	3211239	Symbol	ff_celt_freq_range		3210315						
ANR	3211240	Symbol	CELT_SPREAD_AGGRESSIVE		3210315						
ANR	3211241	Symbol	* * f -> block		3210315						
ANR	3211242	Symbol	f -> remaining		3210315						
ANR	3211243	Symbol	NULL		3210315						
ANR	3211244	Symbol	* norm2		3210315						
ANR	3211245	Symbol	f -> block [ 0 ] . coeffs		3210315						
ANR	3211246	Symbol	offset		3210315						
ANR	3211247	Symbol	* * f		3210315						
ANR	3211248	Symbol	count		3210315						
ANR	3211249	Symbol	* ff_celt_freq_bands		3210315						
ANR	3211250	Symbol	f -> end_band		3210315						
ANR	3211251	Symbol	f -> dual_stereo		3210315						
ANR	3211252	Symbol	f -> framebits		3210315						
ANR	3211253	Symbol	f -> coded_bands		3210315						
ANR	3211254	Symbol	rc		3210315						
ANR	3211255	Symbol	* f -> pvq		3210315						
ANR	3211256	Symbol	lowband_scratch		3210315						
ANR	3211257	Symbol	f -> block [ 1 ] . coeffs		3210315						
ANR	3211258	Symbol	* cm		3210315						
ANR	3211259	Symbol	norm2		3210315						
ANR	3211260	Symbol	foldstart		3210315						
ANR	3211261	Symbol	norm1		3210315						
ANR	3211262	Symbol	band_offset		3210315						
ANR	3211263	Symbol	* * * f		3210315						
ANR	3211264	Symbol	* f -> channels		3210315						
ANR	3211265	Symbol	consumed		3210315						
ANR	3211266	Symbol	effective_lowband		3210315						
ANR	3211267	Symbol	f -> spread		3210315						
ANR	3211268	Symbol	update_lowband		3210315						
ANR	3211269	Symbol	band_size		3210315						
ANR	3211270	Symbol	lowband_offset		3210315						
ANR	3211271	Symbol	opus_rc_tell_frac		3210315						
ANR	3211272	Symbol	f -> anticollapse_needed		3210315						
ANR	3211273	Symbol	totalbits		3210315						
ANR	3211274	Symbol	X		3210315						
ANR	3211275	Symbol	Y		3210315						
ANR	3211276	Symbol	* norm1		3210315						
ANR	3211277	Symbol	* foldstart		3210315						
ANR	3211278	Symbol	b		3210315						
ANR	3211279	Symbol	* foldend		3210315						
ANR	3211280	Symbol	f -> tf_change		3210315						
ANR	3211281	Symbol	f		3210315						
ANR	3211282	Symbol	f -> pulses		3210315						
ANR	3211283	Symbol	i		3210315						
ANR	3211284	Symbol	* ff_celt_freq_range		3210315						
ANR	3211285	Symbol	j		3210315						
ANR	3211286	Symbol	cm		3210315						
ANR	3211287	Symbol	norm_loc1		3210315						
ANR	3211288	Symbol	norm_loc2		3210315						
ANR	3211289	Symbol	* f		3210315						
ANR	3211290	Symbol	f -> size		3210315						
ANR	3211291	Symbol	curr_balance		3210315						
ANR	3211292	Symbol	* i		3210315						
ANR	3211293	Symbol	* j		3210315						
ANR	3211294	Symbol	f -> pvq		3210315						
ANR	3211295	Symbol	* f -> tf_change		3210315						
ANR	3211296	Symbol	f -> start_band		3210315						
ANR	3211297	Symbol	foldend		3210315						
ANR	3211298	Symbol	f -> pvq -> quant_band		3210315						
ANR	3211299	Symbol	f -> channels		3210315						
ANR	3211300	Symbol	FFMAX		3210315						
