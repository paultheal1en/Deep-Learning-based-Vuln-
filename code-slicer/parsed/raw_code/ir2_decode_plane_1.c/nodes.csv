command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4994810	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ir2_decode_plane_1.c								
ANR	4994811	Function	ir2_decode_plane	1:0:0:1794							
ANR	4994812	FunctionDef	"ir2_decode_plane (Ir2Context * ctx , int width , int height , uint8_t * dst , int pitch , const uint8_t * table)"		4994811	0					
ANR	4994813	CompoundStatement		5:0:145:1794	4994811	0					
ANR	4994814	IdentifierDeclStatement	int i ;	7:4:152:157	4994811	0	True				
ANR	4994815	IdentifierDecl	i		4994811	0					
ANR	4994816	IdentifierDeclType	int		4994811	0					
ANR	4994817	Identifier	i		4994811	1					
ANR	4994818	IdentifierDeclStatement	int j ;	9:4:164:169	4994811	1	True				
ANR	4994819	IdentifierDecl	j		4994811	0					
ANR	4994820	IdentifierDeclType	int		4994811	0					
ANR	4994821	Identifier	j		4994811	1					
ANR	4994822	IdentifierDeclStatement	int out = 0 ;	11:4:176:187	4994811	2	True				
ANR	4994823	IdentifierDecl	out = 0		4994811	0					
ANR	4994824	IdentifierDeclType	int		4994811	0					
ANR	4994825	Identifier	out		4994811	1					
ANR	4994826	AssignmentExpression	out = 0		4994811	2		=			
ANR	4994827	Identifier	out		4994811	0					
ANR	4994828	PrimaryExpression	0		4994811	1					
ANR	4994829	IfStatement	if ( width & 1 )		4994811	3					
ANR	4994830	Condition	width & 1	15:8:200:208	4994811	0	True				
ANR	4994831	BitAndExpression	width & 1		4994811	0		&			
ANR	4994832	Identifier	width		4994811	0					
ANR	4994833	PrimaryExpression	1		4994811	1					
ANR	4994834	ReturnStatement	return AVERROR_INVALIDDATA ;	17:8:220:246	4994811	1	True				
ANR	4994835	Identifier	AVERROR_INVALIDDATA		4994811	0					
ANR	4994836	WhileStatement	while ( out < width )		4994811	4					
ANR	4994837	Condition	out < width	23:11:336:346	4994811	0	True				
ANR	4994838	RelationalExpression	out < width		4994811	0		<			
ANR	4994839	Identifier	out		4994811	0					
ANR	4994840	Identifier	width		4994811	1					
ANR	4994841	CompoundStatement		21:8:214:244	4994811	1					
ANR	4994842	IdentifierDeclStatement	int c = ir2_get_code ( & ctx -> gb ) ;	25:8:360:390	4994811	0	True				
ANR	4994843	IdentifierDecl	c = ir2_get_code ( & ctx -> gb )		4994811	0					
ANR	4994844	IdentifierDeclType	int		4994811	0					
ANR	4994845	Identifier	c		4994811	1					
ANR	4994846	AssignmentExpression	c = ir2_get_code ( & ctx -> gb )		4994811	2		=			
ANR	4994847	Identifier	c		4994811	0					
ANR	4994848	CallExpression	ir2_get_code ( & ctx -> gb )		4994811	1					
ANR	4994849	Callee	ir2_get_code		4994811	0					
ANR	4994850	Identifier	ir2_get_code		4994811	0					
ANR	4994851	ArgumentList	& ctx -> gb		4994811	1					
ANR	4994852	Argument	& ctx -> gb		4994811	0					
ANR	4994853	UnaryOperationExpression	& ctx -> gb		4994811	0					
ANR	4994854	UnaryOperator	&		4994811	0					
ANR	4994855	PtrMemberAccess	ctx -> gb		4994811	1					
ANR	4994856	Identifier	ctx		4994811	0					
ANR	4994857	Identifier	gb		4994811	1					
ANR	4994858	IfStatement	if ( c >= 0x80 )		4994811	1					
ANR	4994859	Condition	c >= 0x80	27:12:405:413	4994811	0	True				
ANR	4994860	RelationalExpression	c >= 0x80		4994811	0		>=			
ANR	4994861	Identifier	c		4994811	0					
ANR	4994862	PrimaryExpression	0x80		4994811	1					
ANR	4994863	CompoundStatement		23:23:270:270	4994811	1					
ANR	4994864	ExpressionStatement	c -= 0x7F	29:12:451:460	4994811	0	True				
ANR	4994865	AssignmentExpression	c -= 0x7F		4994811	0		-=			
ANR	4994866	Identifier	c		4994811	0					
ANR	4994867	PrimaryExpression	0x7F		4994811	1					
ANR	4994868	IfStatement	if ( out + c * 2 > width )		4994811	1					
ANR	4994869	Condition	out + c * 2 > width	31:16:479:495	4994811	0	True				
ANR	4994870	RelationalExpression	out + c * 2 > width		4994811	0		>			
ANR	4994871	AdditiveExpression	out + c * 2		4994811	0		+			
ANR	4994872	Identifier	out		4994811	0					
ANR	4994873	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4994874	Identifier	c		4994811	0					
ANR	4994875	PrimaryExpression	2		4994811	1					
ANR	4994876	Identifier	width		4994811	1					
ANR	4994877	ReturnStatement	return AVERROR_INVALIDDATA ;	33:16:515:541	4994811	1	True				
ANR	4994878	Identifier	AVERROR_INVALIDDATA		4994811	0					
ANR	4994879	ForStatement	for ( i = 0 ; i < c * 2 ; i ++ )		4994811	2					
ANR	4994880	ForInit	i = 0 ;	35:17:561:566	4994811	0	True				
ANR	4994881	AssignmentExpression	i = 0		4994811	0		=			
ANR	4994882	Identifier	i		4994811	0					
ANR	4994883	PrimaryExpression	0		4994811	1					
ANR	4994884	Condition	i < c * 2	35:24:568:576	4994811	1	True				
ANR	4994885	RelationalExpression	i < c * 2		4994811	0		<			
ANR	4994886	Identifier	i		4994811	0					
ANR	4994887	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4994888	Identifier	c		4994811	0					
ANR	4994889	PrimaryExpression	2		4994811	1					
ANR	4994890	PostIncDecOperationExpression	i ++	35:35:579:581	4994811	2	True				
ANR	4994891	Identifier	i		4994811	0					
ANR	4994892	IncDec	++		4994811	1					
ANR	4994893	ExpressionStatement	dst [ out ++ ] = 0x80	37:16:601:618	4994811	3	True				
ANR	4994894	AssignmentExpression	dst [ out ++ ] = 0x80		4994811	0		=			
ANR	4994895	ArrayIndexing	dst [ out ++ ]		4994811	0					
ANR	4994896	Identifier	dst		4994811	0					
ANR	4994897	PostIncDecOperationExpression	out ++		4994811	1					
ANR	4994898	Identifier	out		4994811	0					
ANR	4994899	IncDec	++		4994811	1					
ANR	4994900	PrimaryExpression	0x80		4994811	1					
ANR	4994901	ElseStatement	else		4994811	0					
ANR	4994902	CompoundStatement		35:15:490:490	4994811	0					
ANR	4994903	ExpressionStatement	dst [ out ++ ] = table [ c * 2 ]	41:12:684:709	4994811	0	True				
ANR	4994904	AssignmentExpression	dst [ out ++ ] = table [ c * 2 ]		4994811	0		=			
ANR	4994905	ArrayIndexing	dst [ out ++ ]		4994811	0					
ANR	4994906	Identifier	dst		4994811	0					
ANR	4994907	PostIncDecOperationExpression	out ++		4994811	1					
ANR	4994908	Identifier	out		4994811	0					
ANR	4994909	IncDec	++		4994811	1					
ANR	4994910	ArrayIndexing	table [ c * 2 ]		4994811	1					
ANR	4994911	Identifier	table		4994811	0					
ANR	4994912	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4994913	Identifier	c		4994811	0					
ANR	4994914	PrimaryExpression	2		4994811	1					
ANR	4994915	ExpressionStatement	dst [ out ++ ] = table [ ( c * 2 ) + 1 ]	43:12:724:755	4994811	1	True				
ANR	4994916	AssignmentExpression	dst [ out ++ ] = table [ ( c * 2 ) + 1 ]		4994811	0		=			
ANR	4994917	ArrayIndexing	dst [ out ++ ]		4994811	0					
ANR	4994918	Identifier	dst		4994811	0					
ANR	4994919	PostIncDecOperationExpression	out ++		4994811	1					
ANR	4994920	Identifier	out		4994811	0					
ANR	4994921	IncDec	++		4994811	1					
ANR	4994922	ArrayIndexing	table [ ( c * 2 ) + 1 ]		4994811	1					
ANR	4994923	Identifier	table		4994811	0					
ANR	4994924	AdditiveExpression	( c * 2 ) + 1		4994811	1		+			
ANR	4994925	MultiplicativeExpression	c * 2		4994811	0		*			
ANR	4994926	Identifier	c		4994811	0					
ANR	4994927	PrimaryExpression	2		4994811	1					
ANR	4994928	PrimaryExpression	1		4994811	1					
ANR	4994929	ExpressionStatement	dst += pitch	49:4:780:792	4994811	5	True				
ANR	4994930	AssignmentExpression	dst += pitch		4994811	0		+=			
ANR	4994931	Identifier	dst		4994811	0					
ANR	4994932	Identifier	pitch		4994811	1					
ANR	4994933	ForStatement	for ( j = 1 ; j < height ; j ++ )		4994811	6					
ANR	4994934	ForInit	j = 1 ;	53:9:806:811	4994811	0	True				
ANR	4994935	AssignmentExpression	j = 1		4994811	0		=			
ANR	4994936	Identifier	j		4994811	0					
ANR	4994937	PrimaryExpression	1		4994811	1					
ANR	4994938	Condition	j < height	53:16:813:822	4994811	1	True				
ANR	4994939	RelationalExpression	j < height		4994811	0		<			
ANR	4994940	Identifier	j		4994811	0					
ANR	4994941	Identifier	height		4994811	1					
ANR	4994942	PostIncDecOperationExpression	j ++	53:28:825:827	4994811	2	True				
ANR	4994943	Identifier	j		4994811	0					
ANR	4994944	IncDec	++		4994811	1					
ANR	4994945	CompoundStatement		49:33:684:684	4994811	3					
ANR	4994946	ExpressionStatement	out = 0	55:8:841:848	4994811	0	True				
ANR	4994947	AssignmentExpression	out = 0		4994811	0		=			
ANR	4994948	Identifier	out		4994811	0					
ANR	4994949	PrimaryExpression	0		4994811	1					
ANR	4994950	IfStatement	if ( get_bits_left ( & ctx -> gb ) <= 0 )		4994811	1					
ANR	4994951	Condition	get_bits_left ( & ctx -> gb ) <= 0	57:12:863:890	4994811	0	True				
ANR	4994952	RelationalExpression	get_bits_left ( & ctx -> gb ) <= 0		4994811	0		<=			
ANR	4994953	CallExpression	get_bits_left ( & ctx -> gb )		4994811	0					
ANR	4994954	Callee	get_bits_left		4994811	0					
ANR	4994955	Identifier	get_bits_left		4994811	0					
ANR	4994956	ArgumentList	& ctx -> gb		4994811	1					
ANR	4994957	Argument	& ctx -> gb		4994811	0					
ANR	4994958	UnaryOperationExpression	& ctx -> gb		4994811	0					
ANR	4994959	UnaryOperator	&		4994811	0					
ANR	4994960	PtrMemberAccess	ctx -> gb		4994811	1					
ANR	4994961	Identifier	ctx		4994811	0					
ANR	4994962	Identifier	gb		4994811	1					
ANR	4994963	PrimaryExpression	0		4994811	1					
ANR	4994964	ReturnStatement	return AVERROR_INVALIDDATA ;	59:12:906:932	4994811	1	True				
ANR	4994965	Identifier	AVERROR_INVALIDDATA		4994811	0					
ANR	4994966	WhileStatement	while ( out < width )		4994811	2					
ANR	4994967	Condition	out < width	61:15:950:960	4994811	0	True				
ANR	4994968	RelationalExpression	out < width		4994811	0		<			
ANR	4994969	Identifier	out		4994811	0					
ANR	4994970	Identifier	width		4994811	1					
ANR	4994971	CompoundStatement		59:12:832:862	4994811	1					
ANR	4994972	IdentifierDeclStatement	int c = ir2_get_code ( & ctx -> gb ) ;	63:12:978:1008	4994811	0	True				
ANR	4994973	IdentifierDecl	c = ir2_get_code ( & ctx -> gb )		4994811	0					
ANR	4994974	IdentifierDeclType	int		4994811	0					
ANR	4994975	Identifier	c		4994811	1					
ANR	4994976	AssignmentExpression	c = ir2_get_code ( & ctx -> gb )		4994811	2		=			
ANR	4994977	Identifier	c		4994811	0					
ANR	4994978	CallExpression	ir2_get_code ( & ctx -> gb )		4994811	1					
ANR	4994979	Callee	ir2_get_code		4994811	0					
ANR	4994980	Identifier	ir2_get_code		4994811	0					
ANR	4994981	ArgumentList	& ctx -> gb		4994811	1					
ANR	4994982	Argument	& ctx -> gb		4994811	0					
ANR	4994983	UnaryOperationExpression	& ctx -> gb		4994811	0					
ANR	4994984	UnaryOperator	&		4994811	0					
ANR	4994985	PtrMemberAccess	ctx -> gb		4994811	1					
ANR	4994986	Identifier	ctx		4994811	0					
ANR	4994987	Identifier	gb		4994811	1					
ANR	4994988	IfStatement	if ( c >= 0x80 )		4994811	1					
ANR	4994989	Condition	c >= 0x80	65:16:1027:1035	4994811	0	True				
ANR	4994990	RelationalExpression	c >= 0x80		4994811	0		>=			
ANR	4994991	Identifier	c		4994811	0					
ANR	4994992	PrimaryExpression	0x80		4994811	1					
ANR	4994993	CompoundStatement		61:27:892:892	4994811	1					
ANR	4994994	ExpressionStatement	c -= 0x7F	67:16:1078:1087	4994811	0	True				
ANR	4994995	AssignmentExpression	c -= 0x7F		4994811	0		-=			
ANR	4994996	Identifier	c		4994811	0					
ANR	4994997	PrimaryExpression	0x7F		4994811	1					
ANR	4994998	IfStatement	if ( out + c * 2 > width )		4994811	1					
ANR	4994999	Condition	out + c * 2 > width	69:20:1110:1126	4994811	0	True				
ANR	4995000	RelationalExpression	out + c * 2 > width		4994811	0		>			
ANR	4995001	AdditiveExpression	out + c * 2		4994811	0		+			
ANR	4995002	Identifier	out		4994811	0					
ANR	4995003	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4995004	Identifier	c		4994811	0					
ANR	4995005	PrimaryExpression	2		4994811	1					
ANR	4995006	Identifier	width		4994811	1					
ANR	4995007	ReturnStatement	return AVERROR_INVALIDDATA ;	71:20:1150:1176	4994811	1	True				
ANR	4995008	Identifier	AVERROR_INVALIDDATA		4994811	0					
ANR	4995009	ForStatement	for ( i = 0 ; i < c * 2 ; i ++ )		4994811	2					
ANR	4995010	ForInit	i = 0 ;	73:21:1200:1205	4994811	0	True				
ANR	4995011	AssignmentExpression	i = 0		4994811	0		=			
ANR	4995012	Identifier	i		4994811	0					
ANR	4995013	PrimaryExpression	0		4994811	1					
ANR	4995014	Condition	i < c * 2	73:28:1207:1215	4994811	1	True				
ANR	4995015	RelationalExpression	i < c * 2		4994811	0		<			
ANR	4995016	Identifier	i		4994811	0					
ANR	4995017	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4995018	Identifier	c		4994811	0					
ANR	4995019	PrimaryExpression	2		4994811	1					
ANR	4995020	PostIncDecOperationExpression	i ++	73:39:1218:1220	4994811	2	True				
ANR	4995021	Identifier	i		4994811	0					
ANR	4995022	IncDec	++		4994811	1					
ANR	4995023	CompoundStatement		69:44:1077:1077	4994811	3					
ANR	4995024	ExpressionStatement	dst [ out ] = dst [ out - pitch ]	75:20:1246:1273	4994811	0	True				
ANR	4995025	AssignmentExpression	dst [ out ] = dst [ out - pitch ]		4994811	0		=			
ANR	4995026	ArrayIndexing	dst [ out ]		4994811	0					
ANR	4995027	Identifier	dst		4994811	0					
ANR	4995028	Identifier	out		4994811	1					
ANR	4995029	ArrayIndexing	dst [ out - pitch ]		4994811	1					
ANR	4995030	Identifier	dst		4994811	0					
ANR	4995031	AdditiveExpression	out - pitch		4994811	1		-			
ANR	4995032	Identifier	out		4994811	0					
ANR	4995033	Identifier	pitch		4994811	1					
ANR	4995034	ExpressionStatement	out ++	77:20:1296:1301	4994811	1	True				
ANR	4995035	PostIncDecOperationExpression	out ++		4994811	0					
ANR	4995036	Identifier	out		4994811	0					
ANR	4995037	IncDec	++		4994811	1					
ANR	4995038	ElseStatement	else		4994811	0					
ANR	4995039	CompoundStatement		79:16:1247:1297	4994811	0					
ANR	4995040	IdentifierDeclStatement	int t = dst [ out - pitch ] + ( table [ c * 2 ] - 128 ) ;	83:16:1393:1443	4994811	0	True				
ANR	4995041	IdentifierDecl	t = dst [ out - pitch ] + ( table [ c * 2 ] - 128 )		4994811	0					
ANR	4995042	IdentifierDeclType	int		4994811	0					
ANR	4995043	Identifier	t		4994811	1					
ANR	4995044	AssignmentExpression	t = dst [ out - pitch ] + ( table [ c * 2 ] - 128 )		4994811	2		=			
ANR	4995045	Identifier	t		4994811	0					
ANR	4995046	AdditiveExpression	dst [ out - pitch ] + ( table [ c * 2 ] - 128 )		4994811	1		+			
ANR	4995047	ArrayIndexing	dst [ out - pitch ]		4994811	0					
ANR	4995048	Identifier	dst		4994811	0					
ANR	4995049	AdditiveExpression	out - pitch		4994811	1		-			
ANR	4995050	Identifier	out		4994811	0					
ANR	4995051	Identifier	pitch		4994811	1					
ANR	4995052	AdditiveExpression	table [ c * 2 ] - 128		4994811	1		-			
ANR	4995053	ArrayIndexing	table [ c * 2 ]		4994811	0					
ANR	4995054	Identifier	table		4994811	0					
ANR	4995055	MultiplicativeExpression	c * 2		4994811	1		*			
ANR	4995056	Identifier	c		4994811	0					
ANR	4995057	PrimaryExpression	2		4994811	1					
ANR	4995058	PrimaryExpression	128		4994811	1					
ANR	4995059	ExpressionStatement	t = av_clip_uint8 ( t )	85:16:1462:1489	4994811	1	True				
ANR	4995060	AssignmentExpression	t = av_clip_uint8 ( t )		4994811	0		=			
ANR	4995061	Identifier	t		4994811	0					
ANR	4995062	CallExpression	av_clip_uint8 ( t )		4994811	1					
ANR	4995063	Callee	av_clip_uint8		4994811	0					
ANR	4995064	Identifier	av_clip_uint8		4994811	0					
ANR	4995065	ArgumentList	t		4994811	1					
ANR	4995066	Argument	t		4994811	0					
ANR	4995067	Identifier	t		4994811	0					
ANR	4995068	ExpressionStatement	dst [ out ] = t	87:16:1508:1520	4994811	2	True				
ANR	4995069	AssignmentExpression	dst [ out ] = t		4994811	0		=			
ANR	4995070	ArrayIndexing	dst [ out ]		4994811	0					
ANR	4995071	Identifier	dst		4994811	0					
ANR	4995072	Identifier	out		4994811	1					
ANR	4995073	Identifier	t		4994811	1					
ANR	4995074	ExpressionStatement	out ++	89:16:1539:1544	4994811	3	True				
ANR	4995075	PostIncDecOperationExpression	out ++		4994811	0					
ANR	4995076	Identifier	out		4994811	0					
ANR	4995077	IncDec	++		4994811	1					
ANR	4995078	ExpressionStatement	t = dst [ out - pitch ] + ( table [ ( c * 2 ) + 1 ] - 128 )	91:16:1563:1619	4994811	4	True				
ANR	4995079	AssignmentExpression	t = dst [ out - pitch ] + ( table [ ( c * 2 ) + 1 ] - 128 )		4994811	0		=			
ANR	4995080	Identifier	t		4994811	0					
ANR	4995081	AdditiveExpression	dst [ out - pitch ] + ( table [ ( c * 2 ) + 1 ] - 128 )		4994811	1		+			
ANR	4995082	ArrayIndexing	dst [ out - pitch ]		4994811	0					
ANR	4995083	Identifier	dst		4994811	0					
ANR	4995084	AdditiveExpression	out - pitch		4994811	1		-			
ANR	4995085	Identifier	out		4994811	0					
ANR	4995086	Identifier	pitch		4994811	1					
ANR	4995087	AdditiveExpression	table [ ( c * 2 ) + 1 ] - 128		4994811	1		-			
ANR	4995088	ArrayIndexing	table [ ( c * 2 ) + 1 ]		4994811	0					
ANR	4995089	Identifier	table		4994811	0					
ANR	4995090	AdditiveExpression	( c * 2 ) + 1		4994811	1		+			
ANR	4995091	MultiplicativeExpression	c * 2		4994811	0		*			
ANR	4995092	Identifier	c		4994811	0					
ANR	4995093	PrimaryExpression	2		4994811	1					
ANR	4995094	PrimaryExpression	1		4994811	1					
ANR	4995095	PrimaryExpression	128		4994811	1					
ANR	4995096	ExpressionStatement	t = av_clip_uint8 ( t )	93:16:1638:1665	4994811	5	True				
ANR	4995097	AssignmentExpression	t = av_clip_uint8 ( t )		4994811	0		=			
ANR	4995098	Identifier	t		4994811	0					
ANR	4995099	CallExpression	av_clip_uint8 ( t )		4994811	1					
ANR	4995100	Callee	av_clip_uint8		4994811	0					
ANR	4995101	Identifier	av_clip_uint8		4994811	0					
ANR	4995102	ArgumentList	t		4994811	1					
ANR	4995103	Argument	t		4994811	0					
ANR	4995104	Identifier	t		4994811	0					
ANR	4995105	ExpressionStatement	dst [ out ] = t	95:16:1684:1696	4994811	6	True				
ANR	4995106	AssignmentExpression	dst [ out ] = t		4994811	0		=			
ANR	4995107	ArrayIndexing	dst [ out ]		4994811	0					
ANR	4995108	Identifier	dst		4994811	0					
ANR	4995109	Identifier	out		4994811	1					
ANR	4995110	Identifier	t		4994811	1					
ANR	4995111	ExpressionStatement	out ++	97:16:1715:1720	4994811	7	True				
ANR	4995112	PostIncDecOperationExpression	out ++		4994811	0					
ANR	4995113	Identifier	out		4994811	0					
ANR	4995114	IncDec	++		4994811	1					
ANR	4995115	ExpressionStatement	dst += pitch	103:8:1757:1769	4994811	3	True				
ANR	4995116	AssignmentExpression	dst += pitch		4994811	0		+=			
ANR	4995117	Identifier	dst		4994811	0					
ANR	4995118	Identifier	pitch		4994811	1					
ANR	4995119	ReturnStatement	return 0 ;	107:4:1783:1791	4994811	7	True				
ANR	4995120	PrimaryExpression	0		4994811	0					
ANR	4995121	ReturnType	static int		4994811	1					
ANR	4995122	Identifier	ir2_decode_plane		4994811	2					
ANR	4995123	ParameterList	"Ir2Context * ctx , int width , int height , uint8_t * dst , int pitch , const uint8_t * table"		4994811	3					
ANR	4995124	Parameter	Ir2Context * ctx	1:28:28:42	4994811	0	True				
ANR	4995125	ParameterType	Ir2Context *		4994811	0					
ANR	4995126	Identifier	ctx		4994811	1					
ANR	4995127	Parameter	int width	1:45:45:53	4994811	1	True				
ANR	4995128	ParameterType	int		4994811	0					
ANR	4995129	Identifier	width		4994811	1					
ANR	4995130	Parameter	int height	1:56:56:65	4994811	2	True				
ANR	4995131	ParameterType	int		4994811	0					
ANR	4995132	Identifier	height		4994811	1					
ANR	4995133	Parameter	uint8_t * dst	1:68:68:79	4994811	3	True				
ANR	4995134	ParameterType	uint8_t *		4994811	0					
ANR	4995135	Identifier	dst		4994811	1					
ANR	4995136	Parameter	int pitch	3:28:111:119	4994811	4	True				
ANR	4995137	ParameterType	int		4994811	0					
ANR	4995138	Identifier	pitch		4994811	1					
ANR	4995139	Parameter	const uint8_t * table	3:39:122:141	4994811	5	True				
ANR	4995140	ParameterType	const uint8_t *		4994811	0					
ANR	4995141	Identifier	table		4994811	1					
ANR	4995142	CFGEntryNode	ENTRY		4994811		True				
ANR	4995143	CFGExitNode	EXIT		4994811		True				
ANR	4995144	Symbol	c		4994811						
ANR	4995145	Symbol	dst		4994811						
ANR	4995146	Symbol	ctx		4994811						
ANR	4995147	Symbol	av_clip_uint8		4994811						
ANR	4995148	Symbol	i		4994811						
ANR	4995149	Symbol	* table		4994811						
ANR	4995150	Symbol	j		4994811						
ANR	4995151	Symbol	& ctx -> gb		4994811						
ANR	4995152	Symbol	get_bits_left		4994811						
ANR	4995153	Symbol	* c		4994811						
ANR	4995154	Symbol	out		4994811						
ANR	4995155	Symbol	* dst		4994811						
ANR	4995156	Symbol	t		4994811						
ANR	4995157	Symbol	* pitch		4994811						
ANR	4995158	Symbol	ir2_get_code		4994811						
ANR	4995159	Symbol	width		4994811						
ANR	4995160	Symbol	* out		4994811						
ANR	4995161	Symbol	AVERROR_INVALIDDATA		4994811						
ANR	4995162	Symbol	pitch		4994811						
ANR	4995163	Symbol	table		4994811						
ANR	4995164	Symbol	height		4994811						
