command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6345292	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_numa_node_01_0.c								
ANR	6345293	Function	parse_numa_node	1:0:0:2602							
ANR	6345294	FunctionDef	"parse_numa_node (MachineState * ms , NumaNodeOptions * node , QemuOpts * opts , Error * * errp)"		6345293	0					
ANR	6345295	CompoundStatement		5:0:129:2602	6345293	0					
ANR	6345296	IdentifierDeclStatement	uint16_t nodenr ;	7:4:136:151	6345293	0	True				
ANR	6345297	IdentifierDecl	nodenr		6345293	0					
ANR	6345298	IdentifierDeclType	uint16_t		6345293	0					
ANR	6345299	Identifier	nodenr		6345293	1					
ANR	6345300	IdentifierDeclStatement	uint16List * cpus = NULL ;	9:4:158:181	6345293	1	True				
ANR	6345301	IdentifierDecl	* cpus = NULL		6345293	0					
ANR	6345302	IdentifierDeclType	uint16List *		6345293	0					
ANR	6345303	Identifier	cpus		6345293	1					
ANR	6345304	AssignmentExpression	* cpus = NULL		6345293	2		=			
ANR	6345305	Identifier	NULL		6345293	0					
ANR	6345306	Identifier	NULL		6345293	1					
ANR	6345307	IdentifierDeclStatement	MachineClass * mc = MACHINE_GET_CLASS ( ms ) ;	11:4:188:228	6345293	2	True				
ANR	6345308	IdentifierDecl	* mc = MACHINE_GET_CLASS ( ms )		6345293	0					
ANR	6345309	IdentifierDeclType	MachineClass *		6345293	0					
ANR	6345310	Identifier	mc		6345293	1					
ANR	6345311	AssignmentExpression	* mc = MACHINE_GET_CLASS ( ms )		6345293	2		=			
ANR	6345312	Identifier	mc		6345293	0					
ANR	6345313	CallExpression	MACHINE_GET_CLASS ( ms )		6345293	1					
ANR	6345314	Callee	MACHINE_GET_CLASS		6345293	0					
ANR	6345315	Identifier	MACHINE_GET_CLASS		6345293	0					
ANR	6345316	ArgumentList	ms		6345293	1					
ANR	6345317	Argument	ms		6345293	0					
ANR	6345318	Identifier	ms		6345293	0					
ANR	6345319	IfStatement	if ( node -> has_nodeid )		6345293	3					
ANR	6345320	Condition	node -> has_nodeid	15:8:241:256	6345293	0	True				
ANR	6345321	PtrMemberAccess	node -> has_nodeid		6345293	0					
ANR	6345322	Identifier	node		6345293	0					
ANR	6345323	Identifier	has_nodeid		6345293	1					
ANR	6345324	CompoundStatement		11:26:129:129	6345293	1					
ANR	6345325	ExpressionStatement	nodenr = node -> nodeid	17:8:270:291	6345293	0	True				
ANR	6345326	AssignmentExpression	nodenr = node -> nodeid		6345293	0		=			
ANR	6345327	Identifier	nodenr		6345293	0					
ANR	6345328	PtrMemberAccess	node -> nodeid		6345293	1					
ANR	6345329	Identifier	node		6345293	0					
ANR	6345330	Identifier	nodeid		6345293	1					
ANR	6345331	ElseStatement	else		6345293	0					
ANR	6345332	CompoundStatement		15:11:175:175	6345293	0					
ANR	6345333	ExpressionStatement	nodenr = nb_numa_nodes	21:8:316:338	6345293	0	True				
ANR	6345334	AssignmentExpression	nodenr = nb_numa_nodes		6345293	0		=			
ANR	6345335	Identifier	nodenr		6345293	0					
ANR	6345336	Identifier	nb_numa_nodes		6345293	1					
ANR	6345337	IfStatement	if ( nodenr >= MAX_NODES )		6345293	4					
ANR	6345338	Condition	nodenr >= MAX_NODES	27:8:358:376	6345293	0	True				
ANR	6345339	RelationalExpression	nodenr >= MAX_NODES		6345293	0		>=			
ANR	6345340	Identifier	nodenr		6345293	0					
ANR	6345341	Identifier	MAX_NODES		6345293	1					
ANR	6345342	CompoundStatement		23:29:249:249	6345293	1					
ANR	6345343	Statement	error_setg	29:8:390:399	6345293	0	True				
ANR	6345344	Statement	(	29:18:400:400	6345293	1	True				
ANR	6345345	Statement	errp	29:19:401:404	6345293	2	True				
ANR	6345346	Statement	","	29:23:405:405	6345293	3	True				
ANR	6345347	Statement	"""Max number of NUMA nodes reached: %"""	29:25:407:443	6345293	4	True				
ANR	6345348	Statement	PRIu16	31:19:465:470	6345293	5	True				
ANR	6345349	Statement	""""""	31:26:472:473	6345293	6	True				
ANR	6345350	Statement	","	31:28:474:474	6345293	7	True				
ANR	6345351	Statement	nodenr	31:30:476:481	6345293	8	True				
ANR	6345352	Statement	)	31:36:482:482	6345293	9	True				
ANR	6345353	ExpressionStatement		31:37:483:483	6345293	10	True				
ANR	6345354	ReturnStatement	return ;	33:8:494:500	6345293	11	True				
ANR	6345355	IfStatement	if ( numa_info [ nodenr ] . present )		6345293	5					
ANR	6345356	Condition	numa_info [ nodenr ] . present	39:8:520:544	6345293	0	True				
ANR	6345357	MemberAccess	numa_info [ nodenr ] . present		6345293	0					
ANR	6345358	ArrayIndexing	numa_info [ nodenr ]		6345293	0					
ANR	6345359	Identifier	numa_info		6345293	0					
ANR	6345360	Identifier	nodenr		6345293	1					
ANR	6345361	Identifier	present		6345293	1					
ANR	6345362	CompoundStatement		35:35:417:417	6345293	1					
ANR	6345363	Statement	error_setg	41:8:558:567	6345293	0	True				
ANR	6345364	Statement	(	41:18:568:568	6345293	1	True				
ANR	6345365	Statement	errp	41:19:569:572	6345293	2	True				
ANR	6345366	Statement	","	41:23:573:573	6345293	3	True				
ANR	6345367	Statement	"""Duplicate NUMA nodeid: %"""	41:25:575:600	6345293	4	True				
ANR	6345368	Statement	PRIu16	41:52:602:607	6345293	5	True				
ANR	6345369	Statement	","	41:58:608:608	6345293	6	True				
ANR	6345370	Statement	nodenr	41:60:610:615	6345293	7	True				
ANR	6345371	Statement	)	41:66:616:616	6345293	8	True				
ANR	6345372	ExpressionStatement		41:67:617:617	6345293	9	True				
ANR	6345373	ReturnStatement	return ;	43:8:628:634	6345293	10	True				
ANR	6345374	IfStatement	if ( ! mc -> cpu_index_to_instance_props )		6345293	6					
ANR	6345375	Condition	! mc -> cpu_index_to_instance_props	49:8:654:685	6345293	0	True				
ANR	6345376	UnaryOperationExpression	! mc -> cpu_index_to_instance_props		6345293	0					
ANR	6345377	UnaryOperator	!		6345293	0					
ANR	6345378	PtrMemberAccess	mc -> cpu_index_to_instance_props		6345293	1					
ANR	6345379	Identifier	mc		6345293	0					
ANR	6345380	Identifier	cpu_index_to_instance_props		6345293	1					
ANR	6345381	CompoundStatement		45:42:558:558	6345293	1					
ANR	6345382	ExpressionStatement	"error_report ( ""NUMA is not supported by this machine-type"" )"	51:8:699:757	6345293	0	True				
ANR	6345383	CallExpression	"error_report ( ""NUMA is not supported by this machine-type"" )"		6345293	0					
ANR	6345384	Callee	error_report		6345293	0					
ANR	6345385	Identifier	error_report		6345293	0					
ANR	6345386	ArgumentList	"""NUMA is not supported by this machine-type"""		6345293	1					
ANR	6345387	Argument	"""NUMA is not supported by this machine-type"""		6345293	0					
ANR	6345388	PrimaryExpression	"""NUMA is not supported by this machine-type"""		6345293	0					
ANR	6345389	ExpressionStatement	exit ( 1 )	53:8:768:775	6345293	1	True				
ANR	6345390	CallExpression	exit ( 1 )		6345293	0					
ANR	6345391	Callee	exit		6345293	0					
ANR	6345392	Identifier	exit		6345293	0					
ANR	6345393	ArgumentList	1		6345293	1					
ANR	6345394	Argument	1		6345293	0					
ANR	6345395	PrimaryExpression	1		6345293	0					
ANR	6345396	ForStatement	for ( cpus = node -> cpus ; cpus ; cpus = cpus -> next )		6345293	7					
ANR	6345397	ForInit	cpus = node -> cpus ;	57:9:794:811	6345293	0	True				
ANR	6345398	AssignmentExpression	cpus = node -> cpus		6345293	0		=			
ANR	6345399	Identifier	cpus		6345293	0					
ANR	6345400	PtrMemberAccess	node -> cpus		6345293	1					
ANR	6345401	Identifier	node		6345293	0					
ANR	6345402	Identifier	cpus		6345293	1					
ANR	6345403	Condition	cpus	57:28:813:816	6345293	1	True				
ANR	6345404	Identifier	cpus		6345293	0					
ANR	6345405	AssignmentExpression	cpus = cpus -> next	57:34:819:835	6345293	2	True	=			
ANR	6345406	Identifier	cpus		6345293	0					
ANR	6345407	PtrMemberAccess	cpus -> next		6345293	1					
ANR	6345408	Identifier	cpus		6345293	0					
ANR	6345409	Identifier	next		6345293	1					
ANR	6345410	CompoundStatement		55:8:719:746	6345293	3					
ANR	6345411	IdentifierDeclStatement	CpuInstanceProperties props ;	59:8:849:876	6345293	0	True				
ANR	6345412	IdentifierDecl	props		6345293	0					
ANR	6345413	IdentifierDeclType	CpuInstanceProperties		6345293	0					
ANR	6345414	Identifier	props		6345293	1					
ANR	6345415	IfStatement	if ( cpus -> value >= max_cpus )		6345293	1					
ANR	6345416	Condition	cpus -> value >= max_cpus	61:12:891:913	6345293	0	True				
ANR	6345417	RelationalExpression	cpus -> value >= max_cpus		6345293	0		>=			
ANR	6345418	PtrMemberAccess	cpus -> value		6345293	0					
ANR	6345419	Identifier	cpus		6345293	0					
ANR	6345420	Identifier	value		6345293	1					
ANR	6345421	Identifier	max_cpus		6345293	1					
ANR	6345422	CompoundStatement		57:37:786:786	6345293	1					
ANR	6345423	Statement	error_setg	63:12:931:940	6345293	0	True				
ANR	6345424	Statement	(	63:22:941:941	6345293	1	True				
ANR	6345425	Statement	errp	63:23:942:945	6345293	2	True				
ANR	6345426	Statement	","	63:27:946:946	6345293	3	True				
ANR	6345427	Statement	"""CPU index (%"""	65:23:972:985	6345293	4	True				
ANR	6345428	Statement	PRIu16	65:38:987:992	6345293	5	True				
ANR	6345429	Statement	""")"""	65:45:994:996	6345293	6	True				
ANR	6345430	Statement	""" should be smaller than maxcpus (%d)"""	67:23:1022:1059	6345293	7	True				
ANR	6345431	Statement	","	67:61:1060:1060	6345293	8	True				
ANR	6345432	Statement	cpus	69:23:1086:1089	6345293	9	True				
ANR	6345433	Statement	->	69:27:1090:1091	6345293	10	True				
ANR	6345434	Statement	value	69:29:1092:1096	6345293	11	True				
ANR	6345435	Statement	","	69:34:1097:1097	6345293	12	True				
ANR	6345436	Statement	max_cpus	69:36:1099:1106	6345293	13	True				
ANR	6345437	Statement	)	69:44:1107:1107	6345293	14	True				
ANR	6345438	ExpressionStatement		69:45:1108:1108	6345293	15	True				
ANR	6345439	ReturnStatement	return ;	71:12:1123:1129	6345293	16	True				
ANR	6345440	ExpressionStatement	"props = mc -> cpu_index_to_instance_props ( ms , cpus -> value )"	75:8:1151:1207	6345293	2	True				
ANR	6345441	AssignmentExpression	"props = mc -> cpu_index_to_instance_props ( ms , cpus -> value )"		6345293	0		=			
ANR	6345442	Identifier	props		6345293	0					
ANR	6345443	CallExpression	"mc -> cpu_index_to_instance_props ( ms , cpus -> value )"		6345293	1					
ANR	6345444	Callee	mc -> cpu_index_to_instance_props		6345293	0					
ANR	6345445	PtrMemberAccess	mc -> cpu_index_to_instance_props		6345293	0					
ANR	6345446	Identifier	mc		6345293	0					
ANR	6345447	Identifier	cpu_index_to_instance_props		6345293	1					
ANR	6345448	ArgumentList	ms		6345293	1					
ANR	6345449	Argument	ms		6345293	0					
ANR	6345450	Identifier	ms		6345293	0					
ANR	6345451	Argument	cpus -> value		6345293	1					
ANR	6345452	PtrMemberAccess	cpus -> value		6345293	0					
ANR	6345453	Identifier	cpus		6345293	0					
ANR	6345454	Identifier	value		6345293	1					
ANR	6345455	ExpressionStatement	props . node_id = nodenr	77:8:1218:1240	6345293	3	True				
ANR	6345456	AssignmentExpression	props . node_id = nodenr		6345293	0		=			
ANR	6345457	MemberAccess	props . node_id		6345293	0					
ANR	6345458	Identifier	props		6345293	0					
ANR	6345459	Identifier	node_id		6345293	1					
ANR	6345460	Identifier	nodenr		6345293	1					
ANR	6345461	ExpressionStatement	props . has_node_id = true	79:8:1251:1275	6345293	4	True				
ANR	6345462	AssignmentExpression	props . has_node_id = true		6345293	0		=			
ANR	6345463	MemberAccess	props . has_node_id		6345293	0					
ANR	6345464	Identifier	props		6345293	0					
ANR	6345465	Identifier	has_node_id		6345293	1					
ANR	6345466	Identifier	true		6345293	1					
ANR	6345467	ExpressionStatement	"machine_set_cpu_numa_node ( ms , & props , & error_fatal )"	81:8:1286:1337	6345293	5	True				
ANR	6345468	CallExpression	"machine_set_cpu_numa_node ( ms , & props , & error_fatal )"		6345293	0					
ANR	6345469	Callee	machine_set_cpu_numa_node		6345293	0					
ANR	6345470	Identifier	machine_set_cpu_numa_node		6345293	0					
ANR	6345471	ArgumentList	ms		6345293	1					
ANR	6345472	Argument	ms		6345293	0					
ANR	6345473	Identifier	ms		6345293	0					
ANR	6345474	Argument	& props		6345293	1					
ANR	6345475	UnaryOperationExpression	& props		6345293	0					
ANR	6345476	UnaryOperator	&		6345293	0					
ANR	6345477	Identifier	props		6345293	1					
ANR	6345478	Argument	& error_fatal		6345293	2					
ANR	6345479	UnaryOperationExpression	& error_fatal		6345293	0					
ANR	6345480	UnaryOperator	&		6345293	0					
ANR	6345481	Identifier	error_fatal		6345293	1					
ANR	6345482	IfStatement	if ( node -> has_mem && node -> has_memdev )		6345293	8					
ANR	6345483	Condition	node -> has_mem && node -> has_memdev	87:8:1357:1389	6345293	0	True				
ANR	6345484	AndExpression	node -> has_mem && node -> has_memdev		6345293	0		&&			
ANR	6345485	PtrMemberAccess	node -> has_mem		6345293	0					
ANR	6345486	Identifier	node		6345293	0					
ANR	6345487	Identifier	has_mem		6345293	1					
ANR	6345488	PtrMemberAccess	node -> has_memdev		6345293	1					
ANR	6345489	Identifier	node		6345293	0					
ANR	6345490	Identifier	has_memdev		6345293	1					
ANR	6345491	CompoundStatement		83:43:1262:1262	6345293	1					
ANR	6345492	ExpressionStatement	"error_setg ( errp , ""cannot specify both mem= and memdev="" )"	89:8:1403:1459	6345293	0	True				
ANR	6345493	CallExpression	"error_setg ( errp , ""cannot specify both mem= and memdev="" )"		6345293	0					
ANR	6345494	Callee	error_setg		6345293	0					
ANR	6345495	Identifier	error_setg		6345293	0					
ANR	6345496	ArgumentList	errp		6345293	1					
ANR	6345497	Argument	errp		6345293	0					
ANR	6345498	Identifier	errp		6345293	0					
ANR	6345499	Argument	"""cannot specify both mem= and memdev="""		6345293	1					
ANR	6345500	PrimaryExpression	"""cannot specify both mem= and memdev="""		6345293	0					
ANR	6345501	ReturnStatement	return ;	91:8:1470:1476	6345293	1	True				
ANR	6345502	IfStatement	if ( have_memdevs == - 1 )		6345293	9					
ANR	6345503	Condition	have_memdevs == - 1	97:8:1496:1513	6345293	0	True				
ANR	6345504	EqualityExpression	have_memdevs == - 1		6345293	0		==			
ANR	6345505	Identifier	have_memdevs		6345293	0					
ANR	6345506	UnaryOperationExpression	- 1		6345293	1					
ANR	6345507	UnaryOperator	-		6345293	0					
ANR	6345508	PrimaryExpression	1		6345293	1					
ANR	6345509	CompoundStatement		93:28:1386:1386	6345293	1					
ANR	6345510	ExpressionStatement	have_memdevs = node -> has_memdev	99:8:1527:1558	6345293	0	True				
ANR	6345511	AssignmentExpression	have_memdevs = node -> has_memdev		6345293	0		=			
ANR	6345512	Identifier	have_memdevs		6345293	0					
ANR	6345513	PtrMemberAccess	node -> has_memdev		6345293	1					
ANR	6345514	Identifier	node		6345293	0					
ANR	6345515	Identifier	has_memdev		6345293	1					
ANR	6345516	IfStatement	if ( node -> has_memdev != have_memdevs )		6345293	10					
ANR	6345517	Condition	node -> has_memdev != have_memdevs	103:8:1576:1607	6345293	0	True				
ANR	6345518	EqualityExpression	node -> has_memdev != have_memdevs		6345293	0		!=			
ANR	6345519	PtrMemberAccess	node -> has_memdev		6345293	0					
ANR	6345520	Identifier	node		6345293	0					
ANR	6345521	Identifier	has_memdev		6345293	1					
ANR	6345522	Identifier	have_memdevs		6345293	1					
ANR	6345523	CompoundStatement		99:42:1480:1480	6345293	1					
ANR	6345524	Statement	error_setg	105:8:1621:1630	6345293	0	True				
ANR	6345525	Statement	(	105:18:1631:1631	6345293	1	True				
ANR	6345526	Statement	errp	105:19:1632:1635	6345293	2	True				
ANR	6345527	Statement	","	105:23:1636:1636	6345293	3	True				
ANR	6345528	Statement	"""memdev option must be specified for either """	105:25:1638:1682	6345293	4	True				
ANR	6345529	Statement	"""all or no nodes"""	107:19:1704:1720	6345293	5	True				
ANR	6345530	Statement	)	107:36:1721:1721	6345293	6	True				
ANR	6345531	ExpressionStatement		107:37:1722:1722	6345293	7	True				
ANR	6345532	ReturnStatement	return ;	109:8:1733:1739	6345293	8	True				
ANR	6345533	IfStatement	if ( node -> has_mem )		6345293	11					
ANR	6345534	Condition	node -> has_mem	115:8:1759:1771	6345293	0	True				
ANR	6345535	PtrMemberAccess	node -> has_mem		6345293	0					
ANR	6345536	Identifier	node		6345293	0					
ANR	6345537	Identifier	has_mem		6345293	1					
ANR	6345538	CompoundStatement		115:8:1695:1742	6345293	1					
ANR	6345539	IdentifierDeclStatement	uint64_t mem_size = node -> mem ;	117:8:1785:1814	6345293	0	True				
ANR	6345540	IdentifierDecl	mem_size = node -> mem		6345293	0					
ANR	6345541	IdentifierDeclType	uint64_t		6345293	0					
ANR	6345542	Identifier	mem_size		6345293	1					
ANR	6345543	AssignmentExpression	mem_size = node -> mem		6345293	2		=			
ANR	6345544	Identifier	mem_size		6345293	0					
ANR	6345545	PtrMemberAccess	node -> mem		6345293	1					
ANR	6345546	Identifier	node		6345293	0					
ANR	6345547	Identifier	mem		6345293	1					
ANR	6345548	IdentifierDeclStatement	"const char * mem_str = qemu_opt_get ( opts , ""mem"" ) ;"	119:8:1825:1872	6345293	1	True				
ANR	6345549	IdentifierDecl	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6345293	0					
ANR	6345550	IdentifierDeclType	const char *		6345293	0					
ANR	6345551	Identifier	mem_str		6345293	1					
ANR	6345552	AssignmentExpression	"* mem_str = qemu_opt_get ( opts , ""mem"" )"		6345293	2		=			
ANR	6345553	Identifier	mem_str		6345293	0					
ANR	6345554	CallExpression	"qemu_opt_get ( opts , ""mem"" )"		6345293	1					
ANR	6345555	Callee	qemu_opt_get		6345293	0					
ANR	6345556	Identifier	qemu_opt_get		6345293	0					
ANR	6345557	ArgumentList	opts		6345293	1					
ANR	6345558	Argument	opts		6345293	0					
ANR	6345559	Identifier	opts		6345293	0					
ANR	6345560	Argument	"""mem"""		6345293	1					
ANR	6345561	PrimaryExpression	"""mem"""		6345293	0					
ANR	6345562	IfStatement	if ( g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] ) )		6345293	2					
ANR	6345563	Condition	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )	123:12:1935:1979	6345293	0	True				
ANR	6345564	CallExpression	g_ascii_isdigit ( mem_str [ strlen ( mem_str ) - 1 ] )		6345293	0					
ANR	6345565	Callee	g_ascii_isdigit		6345293	0					
ANR	6345566	Identifier	g_ascii_isdigit		6345293	0					
ANR	6345567	ArgumentList	mem_str [ strlen ( mem_str ) - 1 ]		6345293	1					
ANR	6345568	Argument	mem_str [ strlen ( mem_str ) - 1 ]		6345293	0					
ANR	6345569	ArrayIndexing	mem_str [ strlen ( mem_str ) - 1 ]		6345293	0					
ANR	6345570	Identifier	mem_str		6345293	0					
ANR	6345571	AdditiveExpression	strlen ( mem_str ) - 1		6345293	1		-			
ANR	6345572	CallExpression	strlen ( mem_str )		6345293	0					
ANR	6345573	Callee	strlen		6345293	0					
ANR	6345574	Identifier	strlen		6345293	0					
ANR	6345575	ArgumentList	mem_str		6345293	1					
ANR	6345576	Argument	mem_str		6345293	0					
ANR	6345577	Identifier	mem_str		6345293	0					
ANR	6345578	PrimaryExpression	1		6345293	1					
ANR	6345579	CompoundStatement		119:59:1852:1852	6345293	1					
ANR	6345580	ExpressionStatement	mem_size <<= 20	125:12:1997:2012	6345293	0	True				
ANR	6345581	AssignmentExpression	mem_size <<= 20		6345293	0		<<=			
ANR	6345582	Identifier	mem_size		6345293	0					
ANR	6345583	PrimaryExpression	20		6345293	1					
ANR	6345584	ExpressionStatement	numa_info [ nodenr ] . node_mem = mem_size	129:8:2034:2071	6345293	3	True				
ANR	6345585	AssignmentExpression	numa_info [ nodenr ] . node_mem = mem_size		6345293	0		=			
ANR	6345586	MemberAccess	numa_info [ nodenr ] . node_mem		6345293	0					
ANR	6345587	ArrayIndexing	numa_info [ nodenr ]		6345293	0					
ANR	6345588	Identifier	numa_info		6345293	0					
ANR	6345589	Identifier	nodenr		6345293	1					
ANR	6345590	Identifier	node_mem		6345293	1					
ANR	6345591	Identifier	mem_size		6345293	1					
ANR	6345592	IfStatement	if ( node -> has_memdev )		6345293	12					
ANR	6345593	Condition	node -> has_memdev	133:8:2089:2104	6345293	0	True				
ANR	6345594	PtrMemberAccess	node -> has_memdev		6345293	0					
ANR	6345595	Identifier	node		6345293	0					
ANR	6345596	Identifier	has_memdev		6345293	1					
ANR	6345597	CompoundStatement		131:8:1988:1997	6345293	1					
ANR	6345598	IdentifierDeclStatement	Object * o ;	135:8:2118:2127	6345293	0	True				
ANR	6345599	IdentifierDecl	* o		6345293	0					
ANR	6345600	IdentifierDeclType	Object *		6345293	0					
ANR	6345601	Identifier	o		6345293	1					
ANR	6345602	ExpressionStatement	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"	137:8:2138:2207	6345293	1	True				
ANR	6345603	AssignmentExpression	"o = object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6345293	0		=			
ANR	6345604	Identifier	o		6345293	0					
ANR	6345605	CallExpression	"object_resolve_path_type ( node -> memdev , TYPE_MEMORY_BACKEND , NULL )"		6345293	1					
ANR	6345606	Callee	object_resolve_path_type		6345293	0					
ANR	6345607	Identifier	object_resolve_path_type		6345293	0					
ANR	6345608	ArgumentList	node -> memdev		6345293	1					
ANR	6345609	Argument	node -> memdev		6345293	0					
ANR	6345610	PtrMemberAccess	node -> memdev		6345293	0					
ANR	6345611	Identifier	node		6345293	0					
ANR	6345612	Identifier	memdev		6345293	1					
ANR	6345613	Argument	TYPE_MEMORY_BACKEND		6345293	1					
ANR	6345614	Identifier	TYPE_MEMORY_BACKEND		6345293	0					
ANR	6345615	Argument	NULL		6345293	2					
ANR	6345616	Identifier	NULL		6345293	0					
ANR	6345617	IfStatement	if ( ! o )		6345293	2					
ANR	6345618	Condition	! o	139:12:2222:2223	6345293	0	True				
ANR	6345619	UnaryOperationExpression	! o		6345293	0					
ANR	6345620	UnaryOperator	!		6345293	0					
ANR	6345621	Identifier	o		6345293	1					
ANR	6345622	CompoundStatement		135:16:2096:2096	6345293	1					
ANR	6345623	ExpressionStatement	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"	141:12:2241:2297	6345293	0	True				
ANR	6345624	CallExpression	"error_setg ( errp , ""memdev=%s is ambiguous"" , node -> memdev )"		6345293	0					
ANR	6345625	Callee	error_setg		6345293	0					
ANR	6345626	Identifier	error_setg		6345293	0					
ANR	6345627	ArgumentList	errp		6345293	1					
ANR	6345628	Argument	errp		6345293	0					
ANR	6345629	Identifier	errp		6345293	0					
ANR	6345630	Argument	"""memdev=%s is ambiguous"""		6345293	1					
ANR	6345631	PrimaryExpression	"""memdev=%s is ambiguous"""		6345293	0					
ANR	6345632	Argument	node -> memdev		6345293	2					
ANR	6345633	PtrMemberAccess	node -> memdev		6345293	0					
ANR	6345634	Identifier	node		6345293	0					
ANR	6345635	Identifier	memdev		6345293	1					
ANR	6345636	ReturnStatement	return ;	143:12:2312:2318	6345293	1	True				
ANR	6345637	ExpressionStatement	object_ref ( o )	149:8:2342:2355	6345293	3	True				
ANR	6345638	CallExpression	object_ref ( o )		6345293	0					
ANR	6345639	Callee	object_ref		6345293	0					
ANR	6345640	Identifier	object_ref		6345293	0					
ANR	6345641	ArgumentList	o		6345293	1					
ANR	6345642	Argument	o		6345293	0					
ANR	6345643	Identifier	o		6345293	0					
ANR	6345644	ExpressionStatement	"numa_info [ nodenr ] . node_mem = object_property_get_uint ( o , ""size"" , NULL )"	151:8:2366:2436	6345293	4	True				
ANR	6345645	AssignmentExpression	"numa_info [ nodenr ] . node_mem = object_property_get_uint ( o , ""size"" , NULL )"		6345293	0		=			
ANR	6345646	MemberAccess	numa_info [ nodenr ] . node_mem		6345293	0					
ANR	6345647	ArrayIndexing	numa_info [ nodenr ]		6345293	0					
ANR	6345648	Identifier	numa_info		6345293	0					
ANR	6345649	Identifier	nodenr		6345293	1					
ANR	6345650	Identifier	node_mem		6345293	1					
ANR	6345651	CallExpression	"object_property_get_uint ( o , ""size"" , NULL )"		6345293	1					
ANR	6345652	Callee	object_property_get_uint		6345293	0					
ANR	6345653	Identifier	object_property_get_uint		6345293	0					
ANR	6345654	ArgumentList	o		6345293	1					
ANR	6345655	Argument	o		6345293	0					
ANR	6345656	Identifier	o		6345293	0					
ANR	6345657	Argument	"""size"""		6345293	1					
ANR	6345658	PrimaryExpression	"""size"""		6345293	0					
ANR	6345659	Argument	NULL		6345293	2					
ANR	6345660	Identifier	NULL		6345293	0					
ANR	6345661	ExpressionStatement	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )	153:8:2447:2496	6345293	5	True				
ANR	6345662	AssignmentExpression	numa_info [ nodenr ] . node_memdev = MEMORY_BACKEND ( o )		6345293	0		=			
ANR	6345663	MemberAccess	numa_info [ nodenr ] . node_memdev		6345293	0					
ANR	6345664	ArrayIndexing	numa_info [ nodenr ]		6345293	0					
ANR	6345665	Identifier	numa_info		6345293	0					
ANR	6345666	Identifier	nodenr		6345293	1					
ANR	6345667	Identifier	node_memdev		6345293	1					
ANR	6345668	CallExpression	MEMORY_BACKEND ( o )		6345293	1					
ANR	6345669	Callee	MEMORY_BACKEND		6345293	0					
ANR	6345670	Identifier	MEMORY_BACKEND		6345293	0					
ANR	6345671	ArgumentList	o		6345293	1					
ANR	6345672	Argument	o		6345293	0					
ANR	6345673	Identifier	o		6345293	0					
ANR	6345674	ExpressionStatement	numa_info [ nodenr ] . present = true	157:4:2510:2542	6345293	13	True				
ANR	6345675	AssignmentExpression	numa_info [ nodenr ] . present = true		6345293	0		=			
ANR	6345676	MemberAccess	numa_info [ nodenr ] . present		6345293	0					
ANR	6345677	ArrayIndexing	numa_info [ nodenr ]		6345293	0					
ANR	6345678	Identifier	numa_info		6345293	0					
ANR	6345679	Identifier	nodenr		6345293	1					
ANR	6345680	Identifier	present		6345293	1					
ANR	6345681	Identifier	true		6345293	1					
ANR	6345682	ExpressionStatement	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"	159:4:2549:2599	6345293	14	True				
ANR	6345683	AssignmentExpression	"max_numa_nodeid = MAX ( max_numa_nodeid , nodenr + 1 )"		6345293	0		=			
ANR	6345684	Identifier	max_numa_nodeid		6345293	0					
ANR	6345685	CallExpression	"MAX ( max_numa_nodeid , nodenr + 1 )"		6345293	1					
ANR	6345686	Callee	MAX		6345293	0					
ANR	6345687	Identifier	MAX		6345293	0					
ANR	6345688	ArgumentList	max_numa_nodeid		6345293	1					
ANR	6345689	Argument	max_numa_nodeid		6345293	0					
ANR	6345690	Identifier	max_numa_nodeid		6345293	0					
ANR	6345691	Argument	nodenr + 1		6345293	1					
ANR	6345692	AdditiveExpression	nodenr + 1		6345293	0		+			
ANR	6345693	Identifier	nodenr		6345293	0					
ANR	6345694	PrimaryExpression	1		6345293	1					
ANR	6345695	ReturnType	static void		6345293	1					
ANR	6345696	Identifier	parse_numa_node		6345293	2					
ANR	6345697	ParameterList	"MachineState * ms , NumaNodeOptions * node , QemuOpts * opts , Error * * errp"		6345293	3					
ANR	6345698	Parameter	MachineState * ms	1:28:28:43	6345293	0	True				
ANR	6345699	ParameterType	MachineState *		6345293	0					
ANR	6345700	Identifier	ms		6345293	1					
ANR	6345701	Parameter	NumaNodeOptions * node	1:46:46:66	6345293	1	True				
ANR	6345702	ParameterType	NumaNodeOptions *		6345293	0					
ANR	6345703	Identifier	node		6345293	1					
ANR	6345704	Parameter	QemuOpts * opts	3:28:98:111	6345293	2	True				
ANR	6345705	ParameterType	QemuOpts *		6345293	0					
ANR	6345706	Identifier	opts		6345293	1					
ANR	6345707	Parameter	Error * * errp	3:44:114:125	6345293	3	True				
ANR	6345708	ParameterType	Error * *		6345293	0					
ANR	6345709	Identifier	errp		6345293	1					
ANR	6345710	CFGEntryNode	ENTRY		6345293		True				
ANR	6345711	CFGExitNode	EXIT		6345293		True				
ANR	6345712	Symbol	errp		6345293						
ANR	6345713	Symbol	nb_numa_nodes		6345293						
ANR	6345714	Symbol	qemu_opt_get		6345293						
ANR	6345715	Symbol	node -> has_nodeid		6345293						
ANR	6345716	Symbol	max_cpus		6345293						
ANR	6345717	Symbol	mem_size		6345293						
ANR	6345718	Symbol	MACHINE_GET_CLASS		6345293						
ANR	6345719	Symbol	node -> nodeid		6345293						
ANR	6345720	Symbol	strlen		6345293						
ANR	6345721	Symbol	opts		6345293						
ANR	6345722	Symbol	mc		6345293						
ANR	6345723	Symbol	numa_info		6345293						
ANR	6345724	Symbol	* node		6345293						
ANR	6345725	Symbol	* cpus		6345293						
ANR	6345726	Symbol	* numa_info		6345293						
ANR	6345727	Symbol	NULL		6345293						
ANR	6345728	Symbol	MAX_NODES		6345293						
ANR	6345729	Symbol	props . has_node_id		6345293						
ANR	6345730	Symbol	ms		6345293						
ANR	6345731	Symbol	props		6345293						
ANR	6345732	Symbol	TYPE_MEMORY_BACKEND		6345293						
ANR	6345733	Symbol	have_memdevs		6345293						
ANR	6345734	Symbol	node		6345293						
ANR	6345735	Symbol	& error_fatal		6345293						
ANR	6345736	Symbol	MEMORY_BACKEND		6345293						
ANR	6345737	Symbol	node -> cpus		6345293						
ANR	6345738	Symbol	true		6345293						
ANR	6345739	Symbol	* mem_str		6345293						
ANR	6345740	Symbol	* nodenr		6345293						
ANR	6345741	Symbol	MAX		6345293						
ANR	6345742	Symbol	nodenr		6345293						
ANR	6345743	Symbol	mc -> cpu_index_to_instance_props		6345293						
ANR	6345744	Symbol	numa_info [ nodenr ] . node_mem		6345293						
ANR	6345745	Symbol	mem_str		6345293						
ANR	6345746	Symbol	node -> has_memdev		6345293						
ANR	6345747	Symbol	& props		6345293						
ANR	6345748	Symbol	object_property_get_uint		6345293						
ANR	6345749	Symbol	node -> memdev		6345293						
ANR	6345750	Symbol	cpus -> next		6345293						
ANR	6345751	Symbol	* mc		6345293						
ANR	6345752	Symbol	object_resolve_path_type		6345293						
ANR	6345753	Symbol	node -> has_mem		6345293						
ANR	6345754	Symbol	cpus -> value		6345293						
ANR	6345755	Symbol	cpus		6345293						
ANR	6345756	Symbol	g_ascii_isdigit		6345293						
ANR	6345757	Symbol	numa_info [ nodenr ] . present		6345293						
ANR	6345758	Symbol	max_numa_nodeid		6345293						
ANR	6345759	Symbol	o		6345293						
ANR	6345760	Symbol	numa_info [ nodenr ] . node_memdev		6345293						
ANR	6345761	Symbol	* strlen		6345293						
ANR	6345762	Symbol	props . node_id		6345293						
ANR	6345763	Symbol	node -> mem		6345293						
