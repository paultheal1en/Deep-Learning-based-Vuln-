command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6912757	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qcrypto_cipher_new_1.c								
ANR	6912758	Function	qcrypto_cipher_new	1:0:0:5693							
ANR	6912759	FunctionDef	"qcrypto_cipher_new (QCryptoCipherAlgorithm alg , QCryptoCipherMode mode , const uint8_t * key , size_t nkey , Error * * errp)"		6912758	0					
ANR	6912760	CompoundStatement		9:0:239:5693	6912758	0					
ANR	6912761	IdentifierDeclStatement	QCryptoCipher * cipher ;	11:4:246:267	6912758	0	True				
ANR	6912762	IdentifierDecl	* cipher		6912758	0					
ANR	6912763	IdentifierDeclType	QCryptoCipher *		6912758	0					
ANR	6912764	Identifier	cipher		6912758	1					
ANR	6912765	IdentifierDeclStatement	QCryptoCipherNettle * ctx ;	13:4:274:298	6912758	1	True				
ANR	6912766	IdentifierDecl	* ctx		6912758	0					
ANR	6912767	IdentifierDeclType	QCryptoCipherNettle *		6912758	0					
ANR	6912768	Identifier	ctx		6912758	1					
ANR	6912769	IdentifierDeclStatement	uint8_t * rfbkey ;	15:4:305:320	6912758	2	True				
ANR	6912770	IdentifierDecl	* rfbkey		6912758	0					
ANR	6912771	IdentifierDeclType	uint8_t *		6912758	0					
ANR	6912772	Identifier	rfbkey		6912758	1					
ANR	6912773	SwitchStatement	switch ( mode )		6912758	3					
ANR	6912774	Condition	mode	19:12:337:340	6912758	0	True				
ANR	6912775	Identifier	mode		6912758	0					
ANR	6912776	CompoundStatement		11:18:103:103	6912758	1					
ANR	6912777	Label	case QCRYPTO_CIPHER_MODE_ECB :	21:4:350:378	6912758	0	True				
ANR	6912778	Identifier	QCRYPTO_CIPHER_MODE_ECB		6912758	0					
ANR	6912779	Label	case QCRYPTO_CIPHER_MODE_CBC :	23:4:385:413	6912758	1	True				
ANR	6912780	Identifier	QCRYPTO_CIPHER_MODE_CBC		6912758	0					
ANR	6912781	Label	case QCRYPTO_CIPHER_MODE_XTS :	25:4:420:448	6912758	2	True				
ANR	6912782	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	0					
ANR	6912783	Label	case QCRYPTO_CIPHER_MODE_CTR :	27:4:455:483	6912758	3	True				
ANR	6912784	Identifier	QCRYPTO_CIPHER_MODE_CTR		6912758	0					
ANR	6912785	BreakStatement	break ;	29:8:494:499	6912758	4	True				
ANR	6912786	Label	default :	31:4:506:513	6912758	5	True				
ANR	6912787	Identifier	default		6912758	0					
ANR	6912788	ExpressionStatement	"error_setg ( errp , ""Unsupported cipher mode %s"" , QCryptoCipherMode_lookup [ mode ] )"	33:8:524:622	6912758	6	True				
ANR	6912789	CallExpression	"error_setg ( errp , ""Unsupported cipher mode %s"" , QCryptoCipherMode_lookup [ mode ] )"		6912758	0					
ANR	6912790	Callee	error_setg		6912758	0					
ANR	6912791	Identifier	error_setg		6912758	0					
ANR	6912792	ArgumentList	errp		6912758	1					
ANR	6912793	Argument	errp		6912758	0					
ANR	6912794	Identifier	errp		6912758	0					
ANR	6912795	Argument	"""Unsupported cipher mode %s"""		6912758	1					
ANR	6912796	PrimaryExpression	"""Unsupported cipher mode %s"""		6912758	0					
ANR	6912797	Argument	QCryptoCipherMode_lookup [ mode ]		6912758	2					
ANR	6912798	ArrayIndexing	QCryptoCipherMode_lookup [ mode ]		6912758	0					
ANR	6912799	Identifier	QCryptoCipherMode_lookup		6912758	0					
ANR	6912800	Identifier	mode		6912758	1					
ANR	6912801	ReturnStatement	return NULL ;	37:8:633:644	6912758	7	True				
ANR	6912802	Identifier	NULL		6912758	0					
ANR	6912803	IfStatement	"if ( ! qcrypto_cipher_validate_key_length ( alg , mode , nkey , errp ) )"		6912758	4					
ANR	6912804	Condition	"! qcrypto_cipher_validate_key_length ( alg , mode , nkey , errp )"	43:8:664:721	6912758	0	True				
ANR	6912805	UnaryOperationExpression	"! qcrypto_cipher_validate_key_length ( alg , mode , nkey , errp )"		6912758	0					
ANR	6912806	UnaryOperator	!		6912758	0					
ANR	6912807	CallExpression	"qcrypto_cipher_validate_key_length ( alg , mode , nkey , errp )"		6912758	1					
ANR	6912808	Callee	qcrypto_cipher_validate_key_length		6912758	0					
ANR	6912809	Identifier	qcrypto_cipher_validate_key_length		6912758	0					
ANR	6912810	ArgumentList	alg		6912758	1					
ANR	6912811	Argument	alg		6912758	0					
ANR	6912812	Identifier	alg		6912758	0					
ANR	6912813	Argument	mode		6912758	1					
ANR	6912814	Identifier	mode		6912758	0					
ANR	6912815	Argument	nkey		6912758	2					
ANR	6912816	Identifier	nkey		6912758	0					
ANR	6912817	Argument	errp		6912758	3					
ANR	6912818	Identifier	errp		6912758	0					
ANR	6912819	CompoundStatement		35:68:484:484	6912758	1					
ANR	6912820	ReturnStatement	return NULL ;	45:8:735:746	6912758	0	True				
ANR	6912821	Identifier	NULL		6912758	0					
ANR	6912822	ExpressionStatement	"cipher = g_new0 ( QCryptoCipher , 1 )"	51:4:762:795	6912758	5	True				
ANR	6912823	AssignmentExpression	"cipher = g_new0 ( QCryptoCipher , 1 )"		6912758	0		=			
ANR	6912824	Identifier	cipher		6912758	0					
ANR	6912825	CallExpression	"g_new0 ( QCryptoCipher , 1 )"		6912758	1					
ANR	6912826	Callee	g_new0		6912758	0					
ANR	6912827	Identifier	g_new0		6912758	0					
ANR	6912828	ArgumentList	QCryptoCipher		6912758	1					
ANR	6912829	Argument	QCryptoCipher		6912758	0					
ANR	6912830	Identifier	QCryptoCipher		6912758	0					
ANR	6912831	Argument	1		6912758	1					
ANR	6912832	PrimaryExpression	1		6912758	0					
ANR	6912833	ExpressionStatement	cipher -> alg = alg	53:4:802:819	6912758	6	True				
ANR	6912834	AssignmentExpression	cipher -> alg = alg		6912758	0		=			
ANR	6912835	PtrMemberAccess	cipher -> alg		6912758	0					
ANR	6912836	Identifier	cipher		6912758	0					
ANR	6912837	Identifier	alg		6912758	1					
ANR	6912838	Identifier	alg		6912758	1					
ANR	6912839	ExpressionStatement	cipher -> mode = mode	55:4:826:845	6912758	7	True				
ANR	6912840	AssignmentExpression	cipher -> mode = mode		6912758	0		=			
ANR	6912841	PtrMemberAccess	cipher -> mode		6912758	0					
ANR	6912842	Identifier	cipher		6912758	0					
ANR	6912843	Identifier	mode		6912758	1					
ANR	6912844	Identifier	mode		6912758	1					
ANR	6912845	ExpressionStatement	"ctx = g_new0 ( QCryptoCipherNettle , 1 )"	59:4:854:890	6912758	8	True				
ANR	6912846	AssignmentExpression	"ctx = g_new0 ( QCryptoCipherNettle , 1 )"		6912758	0		=			
ANR	6912847	Identifier	ctx		6912758	0					
ANR	6912848	CallExpression	"g_new0 ( QCryptoCipherNettle , 1 )"		6912758	1					
ANR	6912849	Callee	g_new0		6912758	0					
ANR	6912850	Identifier	g_new0		6912758	0					
ANR	6912851	ArgumentList	QCryptoCipherNettle		6912758	1					
ANR	6912852	Argument	QCryptoCipherNettle		6912758	0					
ANR	6912853	Identifier	QCryptoCipherNettle		6912758	0					
ANR	6912854	Argument	1		6912758	1					
ANR	6912855	PrimaryExpression	1		6912758	0					
ANR	6912856	SwitchStatement	switch ( alg )		6912758	9					
ANR	6912857	Condition	alg	63:12:907:909	6912758	0	True				
ANR	6912858	Identifier	alg		6912758	0					
ANR	6912859	CompoundStatement		55:17:672:672	6912758	1					
ANR	6912860	Label	case QCRYPTO_CIPHER_ALG_DES_RFB :	65:4:919:950	6912758	0	True				
ANR	6912861	Identifier	QCRYPTO_CIPHER_ALG_DES_RFB		6912758	0					
ANR	6912862	Statement	ctx	67:8:961:963	6912758	1	True				
ANR	6912863	Statement	->	67:11:964:965	6912758	2	True				
ANR	6912864	Statement	ctx	67:13:966:968	6912758	3	True				
ANR	6912865	Statement	=	67:17:970:970	6912758	4	True				
ANR	6912866	Statement	g_new0	67:19:972:977	6912758	5	True				
ANR	6912867	Statement	(	67:25:978:978	6912758	6	True				
ANR	6912868	Statement	struct	67:26:979:984	6912758	7	True				
ANR	6912869	Statement	des_ctx	67:33:986:992	6912758	8	True				
ANR	6912870	Statement	","	67:40:993:993	6912758	9	True				
ANR	6912871	Statement	1	67:42:995:995	6912758	10	True				
ANR	6912872	Statement	)	67:43:996:996	6912758	11	True				
ANR	6912873	ExpressionStatement		67:44:997:997	6912758	12	True				
ANR	6912874	ExpressionStatement	"rfbkey = qcrypto_cipher_munge_des_rfb_key ( key , nkey )"	69:8:1008:1060	6912758	13	True				
ANR	6912875	AssignmentExpression	"rfbkey = qcrypto_cipher_munge_des_rfb_key ( key , nkey )"		6912758	0		=			
ANR	6912876	Identifier	rfbkey		6912758	0					
ANR	6912877	CallExpression	"qcrypto_cipher_munge_des_rfb_key ( key , nkey )"		6912758	1					
ANR	6912878	Callee	qcrypto_cipher_munge_des_rfb_key		6912758	0					
ANR	6912879	Identifier	qcrypto_cipher_munge_des_rfb_key		6912758	0					
ANR	6912880	ArgumentList	key		6912758	1					
ANR	6912881	Argument	key		6912758	0					
ANR	6912882	Identifier	key		6912758	0					
ANR	6912883	Argument	nkey		6912758	1					
ANR	6912884	Identifier	nkey		6912758	0					
ANR	6912885	ExpressionStatement	"des_set_key ( ctx -> ctx , rfbkey )"	71:8:1071:1100	6912758	14	True				
ANR	6912886	CallExpression	"des_set_key ( ctx -> ctx , rfbkey )"		6912758	0					
ANR	6912887	Callee	des_set_key		6912758	0					
ANR	6912888	Identifier	des_set_key		6912758	0					
ANR	6912889	ArgumentList	ctx -> ctx		6912758	1					
ANR	6912890	Argument	ctx -> ctx		6912758	0					
ANR	6912891	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6912892	Identifier	ctx		6912758	0					
ANR	6912893	Identifier	ctx		6912758	1					
ANR	6912894	Argument	rfbkey		6912758	1					
ANR	6912895	Identifier	rfbkey		6912758	0					
ANR	6912896	ExpressionStatement	g_free ( rfbkey )	73:8:1111:1125	6912758	15	True				
ANR	6912897	CallExpression	g_free ( rfbkey )		6912758	0					
ANR	6912898	Callee	g_free		6912758	0					
ANR	6912899	Identifier	g_free		6912758	0					
ANR	6912900	ArgumentList	rfbkey		6912758	1					
ANR	6912901	Argument	rfbkey		6912758	0					
ANR	6912902	Identifier	rfbkey		6912758	0					
ANR	6912903	ExpressionStatement	ctx -> alg_encrypt_native = des_encrypt_native	77:8:1138:1182	6912758	16	True				
ANR	6912904	AssignmentExpression	ctx -> alg_encrypt_native = des_encrypt_native		6912758	0		=			
ANR	6912905	PtrMemberAccess	ctx -> alg_encrypt_native		6912758	0					
ANR	6912906	Identifier	ctx		6912758	0					
ANR	6912907	Identifier	alg_encrypt_native		6912758	1					
ANR	6912908	Identifier	des_encrypt_native		6912758	1					
ANR	6912909	ExpressionStatement	ctx -> alg_decrypt_native = des_decrypt_native	79:8:1193:1237	6912758	17	True				
ANR	6912910	AssignmentExpression	ctx -> alg_decrypt_native = des_decrypt_native		6912758	0		=			
ANR	6912911	PtrMemberAccess	ctx -> alg_decrypt_native		6912758	0					
ANR	6912912	Identifier	ctx		6912758	0					
ANR	6912913	Identifier	alg_decrypt_native		6912758	1					
ANR	6912914	Identifier	des_decrypt_native		6912758	1					
ANR	6912915	ExpressionStatement	ctx -> alg_encrypt_wrapper = des_encrypt_wrapper	81:8:1248:1294	6912758	18	True				
ANR	6912916	AssignmentExpression	ctx -> alg_encrypt_wrapper = des_encrypt_wrapper		6912758	0		=			
ANR	6912917	PtrMemberAccess	ctx -> alg_encrypt_wrapper		6912758	0					
ANR	6912918	Identifier	ctx		6912758	0					
ANR	6912919	Identifier	alg_encrypt_wrapper		6912758	1					
ANR	6912920	Identifier	des_encrypt_wrapper		6912758	1					
ANR	6912921	ExpressionStatement	ctx -> alg_decrypt_wrapper = des_decrypt_wrapper	83:8:1305:1351	6912758	19	True				
ANR	6912922	AssignmentExpression	ctx -> alg_decrypt_wrapper = des_decrypt_wrapper		6912758	0		=			
ANR	6912923	PtrMemberAccess	ctx -> alg_decrypt_wrapper		6912758	0					
ANR	6912924	Identifier	ctx		6912758	0					
ANR	6912925	Identifier	alg_decrypt_wrapper		6912758	1					
ANR	6912926	Identifier	des_decrypt_wrapper		6912758	1					
ANR	6912927	ExpressionStatement	ctx -> blocksize = DES_BLOCK_SIZE	87:8:1364:1395	6912758	20	True				
ANR	6912928	AssignmentExpression	ctx -> blocksize = DES_BLOCK_SIZE		6912758	0		=			
ANR	6912929	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6912930	Identifier	ctx		6912758	0					
ANR	6912931	Identifier	blocksize		6912758	1					
ANR	6912932	Identifier	DES_BLOCK_SIZE		6912758	1					
ANR	6912933	BreakStatement	break ;	89:8:1406:1411	6912758	21	True				
ANR	6912934	Label	case QCRYPTO_CIPHER_ALG_AES_128 :	93:4:1420:1451	6912758	22	True				
ANR	6912935	Identifier	QCRYPTO_CIPHER_ALG_AES_128		6912758	0					
ANR	6912936	Label	case QCRYPTO_CIPHER_ALG_AES_192 :	95:4:1458:1489	6912758	23	True				
ANR	6912937	Identifier	QCRYPTO_CIPHER_ALG_AES_192		6912758	0					
ANR	6912938	Label	case QCRYPTO_CIPHER_ALG_AES_256 :	97:4:1496:1527	6912758	24	True				
ANR	6912939	Identifier	QCRYPTO_CIPHER_ALG_AES_256		6912758	0					
ANR	6912940	ExpressionStatement	"ctx -> ctx = g_new0 ( QCryptoNettleAES , 1 )"	99:8:1538:1576	6912758	25	True				
ANR	6912941	AssignmentExpression	"ctx -> ctx = g_new0 ( QCryptoNettleAES , 1 )"		6912758	0		=			
ANR	6912942	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6912943	Identifier	ctx		6912758	0					
ANR	6912944	Identifier	ctx		6912758	1					
ANR	6912945	CallExpression	"g_new0 ( QCryptoNettleAES , 1 )"		6912758	1					
ANR	6912946	Callee	g_new0		6912758	0					
ANR	6912947	Identifier	g_new0		6912758	0					
ANR	6912948	ArgumentList	QCryptoNettleAES		6912758	1					
ANR	6912949	Argument	QCryptoNettleAES		6912758	0					
ANR	6912950	Identifier	QCryptoNettleAES		6912758	0					
ANR	6912951	Argument	1		6912758	1					
ANR	6912952	PrimaryExpression	1		6912758	0					
ANR	6912953	IfStatement	if ( mode == QCRYPTO_CIPHER_MODE_XTS )		6912758	26					
ANR	6912954	Condition	mode == QCRYPTO_CIPHER_MODE_XTS	103:12:1593:1623	6912758	0	True				
ANR	6912955	EqualityExpression	mode == QCRYPTO_CIPHER_MODE_XTS		6912758	0		==			
ANR	6912956	Identifier	mode		6912758	0					
ANR	6912957	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	1					
ANR	6912958	CompoundStatement		95:45:1386:1386	6912758	1					
ANR	6912959	ExpressionStatement	"ctx -> ctx_tweak = g_new0 ( QCryptoNettleAES , 1 )"	105:12:1641:1685	6912758	0	True				
ANR	6912960	AssignmentExpression	"ctx -> ctx_tweak = g_new0 ( QCryptoNettleAES , 1 )"		6912758	0		=			
ANR	6912961	PtrMemberAccess	ctx -> ctx_tweak		6912758	0					
ANR	6912962	Identifier	ctx		6912758	0					
ANR	6912963	Identifier	ctx_tweak		6912758	1					
ANR	6912964	CallExpression	"g_new0 ( QCryptoNettleAES , 1 )"		6912758	1					
ANR	6912965	Callee	g_new0		6912758	0					
ANR	6912966	Identifier	g_new0		6912758	0					
ANR	6912967	ArgumentList	QCryptoNettleAES		6912758	1					
ANR	6912968	Argument	QCryptoNettleAES		6912758	0					
ANR	6912969	Identifier	QCryptoNettleAES		6912758	0					
ANR	6912970	Argument	1		6912758	1					
ANR	6912971	PrimaryExpression	1		6912758	0					
ANR	6912972	ExpressionStatement	nkey /= 2	109:12:1702:1711	6912758	1	True				
ANR	6912973	AssignmentExpression	nkey /= 2		6912758	0		/=			
ANR	6912974	Identifier	nkey		6912758	0					
ANR	6912975	PrimaryExpression	2		6912758	1					
ANR	6912976	ExpressionStatement	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc , nkey , key )"	111:12:1726:1827	6912758	2	True				
ANR	6912977	CallExpression	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc , nkey , key )"		6912758	0					
ANR	6912978	Callee	aes_set_encrypt_key		6912758	0					
ANR	6912979	Identifier	aes_set_encrypt_key		6912758	0					
ANR	6912980	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	1					
ANR	6912981	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	0					
ANR	6912982	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	0					
ANR	6912983	UnaryOperator	&		6912758	0					
ANR	6912984	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	1					
ANR	6912985	CastExpression	( QCryptoNettleAES * ) ctx -> ctx		6912758	0					
ANR	6912986	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6912987	PtrMemberAccess	ctx -> ctx		6912758	1					
ANR	6912988	Identifier	ctx		6912758	0					
ANR	6912989	Identifier	ctx		6912758	1					
ANR	6912990	Identifier	enc		6912758	1					
ANR	6912991	Argument	nkey		6912758	1					
ANR	6912992	Identifier	nkey		6912758	0					
ANR	6912993	Argument	key		6912758	2					
ANR	6912994	Identifier	key		6912758	0					
ANR	6912995	ExpressionStatement	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec , nkey , key )"	115:12:1842:1943	6912758	3	True				
ANR	6912996	CallExpression	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec , nkey , key )"		6912758	0					
ANR	6912997	Callee	aes_set_decrypt_key		6912758	0					
ANR	6912998	Identifier	aes_set_decrypt_key		6912758	0					
ANR	6912999	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	1					
ANR	6913000	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	0					
ANR	6913001	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	0					
ANR	6913002	UnaryOperator	&		6912758	0					
ANR	6913003	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	1					
ANR	6913004	CastExpression	( QCryptoNettleAES * ) ctx -> ctx		6912758	0					
ANR	6913005	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6913006	PtrMemberAccess	ctx -> ctx		6912758	1					
ANR	6913007	Identifier	ctx		6912758	0					
ANR	6913008	Identifier	ctx		6912758	1					
ANR	6913009	Identifier	dec		6912758	1					
ANR	6913010	Argument	nkey		6912758	1					
ANR	6913011	Identifier	nkey		6912758	0					
ANR	6913012	Argument	key		6912758	2					
ANR	6913013	Identifier	key		6912758	0					
ANR	6913014	ExpressionStatement	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc , nkey , key + nkey )"	121:12:1960:2074	6912758	4	True				
ANR	6913015	CallExpression	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc , nkey , key + nkey )"		6912758	0					
ANR	6913016	Callee	aes_set_encrypt_key		6912758	0					
ANR	6913017	Identifier	aes_set_encrypt_key		6912758	0					
ANR	6913018	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc		6912758	1					
ANR	6913019	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc		6912758	0					
ANR	6913020	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc		6912758	0					
ANR	6913021	UnaryOperator	&		6912758	0					
ANR	6913022	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc		6912758	1					
ANR	6913023	CastExpression	( QCryptoNettleAES * ) ctx -> ctx_tweak		6912758	0					
ANR	6913024	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6913025	PtrMemberAccess	ctx -> ctx_tweak		6912758	1					
ANR	6913026	Identifier	ctx		6912758	0					
ANR	6913027	Identifier	ctx_tweak		6912758	1					
ANR	6913028	Identifier	enc		6912758	1					
ANR	6913029	Argument	nkey		6912758	1					
ANR	6913030	Identifier	nkey		6912758	0					
ANR	6913031	Argument	key + nkey		6912758	2					
ANR	6913032	AdditiveExpression	key + nkey		6912758	0		+			
ANR	6913033	Identifier	key		6912758	0					
ANR	6913034	Identifier	nkey		6912758	1					
ANR	6913035	ExpressionStatement	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec , nkey , key + nkey )"	125:12:2089:2203	6912758	5	True				
ANR	6913036	CallExpression	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec , nkey , key + nkey )"		6912758	0					
ANR	6913037	Callee	aes_set_decrypt_key		6912758	0					
ANR	6913038	Identifier	aes_set_decrypt_key		6912758	0					
ANR	6913039	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec		6912758	1					
ANR	6913040	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec		6912758	0					
ANR	6913041	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec		6912758	0					
ANR	6913042	UnaryOperator	&		6912758	0					
ANR	6913043	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec		6912758	1					
ANR	6913044	CastExpression	( QCryptoNettleAES * ) ctx -> ctx_tweak		6912758	0					
ANR	6913045	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6913046	PtrMemberAccess	ctx -> ctx_tweak		6912758	1					
ANR	6913047	Identifier	ctx		6912758	0					
ANR	6913048	Identifier	ctx_tweak		6912758	1					
ANR	6913049	Identifier	dec		6912758	1					
ANR	6913050	Argument	nkey		6912758	1					
ANR	6913051	Identifier	nkey		6912758	0					
ANR	6913052	Argument	key + nkey		6912758	2					
ANR	6913053	AdditiveExpression	key + nkey		6912758	0		+			
ANR	6913054	Identifier	key		6912758	0					
ANR	6913055	Identifier	nkey		6912758	1					
ANR	6913056	ElseStatement	else		6912758	0					
ANR	6913057	CompoundStatement		121:15:1981:1981	6912758	0					
ANR	6913058	ExpressionStatement	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc , nkey , key )"	131:12:2236:2337	6912758	0	True				
ANR	6913059	CallExpression	"aes_set_encrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc , nkey , key )"		6912758	0					
ANR	6913060	Callee	aes_set_encrypt_key		6912758	0					
ANR	6913061	Identifier	aes_set_encrypt_key		6912758	0					
ANR	6913062	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	1					
ANR	6913063	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	0					
ANR	6913064	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	0					
ANR	6913065	UnaryOperator	&		6912758	0					
ANR	6913066	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758	1					
ANR	6913067	CastExpression	( QCryptoNettleAES * ) ctx -> ctx		6912758	0					
ANR	6913068	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6913069	PtrMemberAccess	ctx -> ctx		6912758	1					
ANR	6913070	Identifier	ctx		6912758	0					
ANR	6913071	Identifier	ctx		6912758	1					
ANR	6913072	Identifier	enc		6912758	1					
ANR	6913073	Argument	nkey		6912758	1					
ANR	6913074	Identifier	nkey		6912758	0					
ANR	6913075	Argument	key		6912758	2					
ANR	6913076	Identifier	key		6912758	0					
ANR	6913077	ExpressionStatement	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec , nkey , key )"	135:12:2352:2453	6912758	1	True				
ANR	6913078	CallExpression	"aes_set_decrypt_key ( & ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec , nkey , key )"		6912758	0					
ANR	6913079	Callee	aes_set_decrypt_key		6912758	0					
ANR	6913080	Identifier	aes_set_decrypt_key		6912758	0					
ANR	6913081	ArgumentList	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	1					
ANR	6913082	Argument	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	0					
ANR	6913083	UnaryOperationExpression	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	0					
ANR	6913084	UnaryOperator	&		6912758	0					
ANR	6913085	PtrMemberAccess	( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758	1					
ANR	6913086	CastExpression	( QCryptoNettleAES * ) ctx -> ctx		6912758	0					
ANR	6913087	CastTarget	QCryptoNettleAES *		6912758	0					
ANR	6913088	PtrMemberAccess	ctx -> ctx		6912758	1					
ANR	6913089	Identifier	ctx		6912758	0					
ANR	6913090	Identifier	ctx		6912758	1					
ANR	6913091	Identifier	dec		6912758	1					
ANR	6913092	Argument	nkey		6912758	1					
ANR	6913093	Identifier	nkey		6912758	0					
ANR	6913094	Argument	key		6912758	2					
ANR	6913095	Identifier	key		6912758	0					
ANR	6913096	ExpressionStatement	ctx -> alg_encrypt_native = aes_encrypt_native	143:8:2477:2521	6912758	27	True				
ANR	6913097	AssignmentExpression	ctx -> alg_encrypt_native = aes_encrypt_native		6912758	0		=			
ANR	6913098	PtrMemberAccess	ctx -> alg_encrypt_native		6912758	0					
ANR	6913099	Identifier	ctx		6912758	0					
ANR	6913100	Identifier	alg_encrypt_native		6912758	1					
ANR	6913101	Identifier	aes_encrypt_native		6912758	1					
ANR	6913102	ExpressionStatement	ctx -> alg_decrypt_native = aes_decrypt_native	145:8:2532:2576	6912758	28	True				
ANR	6913103	AssignmentExpression	ctx -> alg_decrypt_native = aes_decrypt_native		6912758	0		=			
ANR	6913104	PtrMemberAccess	ctx -> alg_decrypt_native		6912758	0					
ANR	6913105	Identifier	ctx		6912758	0					
ANR	6913106	Identifier	alg_decrypt_native		6912758	1					
ANR	6913107	Identifier	aes_decrypt_native		6912758	1					
ANR	6913108	ExpressionStatement	ctx -> alg_encrypt_wrapper = aes_encrypt_wrapper	147:8:2587:2633	6912758	29	True				
ANR	6913109	AssignmentExpression	ctx -> alg_encrypt_wrapper = aes_encrypt_wrapper		6912758	0		=			
ANR	6913110	PtrMemberAccess	ctx -> alg_encrypt_wrapper		6912758	0					
ANR	6913111	Identifier	ctx		6912758	0					
ANR	6913112	Identifier	alg_encrypt_wrapper		6912758	1					
ANR	6913113	Identifier	aes_encrypt_wrapper		6912758	1					
ANR	6913114	ExpressionStatement	ctx -> alg_decrypt_wrapper = aes_decrypt_wrapper	149:8:2644:2690	6912758	30	True				
ANR	6913115	AssignmentExpression	ctx -> alg_decrypt_wrapper = aes_decrypt_wrapper		6912758	0		=			
ANR	6913116	PtrMemberAccess	ctx -> alg_decrypt_wrapper		6912758	0					
ANR	6913117	Identifier	ctx		6912758	0					
ANR	6913118	Identifier	alg_decrypt_wrapper		6912758	1					
ANR	6913119	Identifier	aes_decrypt_wrapper		6912758	1					
ANR	6913120	ExpressionStatement	ctx -> blocksize = AES_BLOCK_SIZE	153:8:2703:2734	6912758	31	True				
ANR	6913121	AssignmentExpression	ctx -> blocksize = AES_BLOCK_SIZE		6912758	0		=			
ANR	6913122	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913123	Identifier	ctx		6912758	0					
ANR	6913124	Identifier	blocksize		6912758	1					
ANR	6913125	Identifier	AES_BLOCK_SIZE		6912758	1					
ANR	6913126	BreakStatement	break ;	155:8:2745:2750	6912758	32	True				
ANR	6913127	Label	case QCRYPTO_CIPHER_ALG_CAST5_128 :	159:4:2759:2792	6912758	33	True				
ANR	6913128	Identifier	QCRYPTO_CIPHER_ALG_CAST5_128		6912758	0					
ANR	6913129	Statement	ctx	161:8:2803:2805	6912758	34	True				
ANR	6913130	Statement	->	161:11:2806:2807	6912758	35	True				
ANR	6913131	Statement	ctx	161:13:2808:2810	6912758	36	True				
ANR	6913132	Statement	=	161:17:2812:2812	6912758	37	True				
ANR	6913133	Statement	g_new0	161:19:2814:2819	6912758	38	True				
ANR	6913134	Statement	(	161:25:2820:2820	6912758	39	True				
ANR	6913135	Statement	struct	161:26:2821:2826	6912758	40	True				
ANR	6913136	Statement	cast128_ctx	161:33:2828:2838	6912758	41	True				
ANR	6913137	Statement	","	161:44:2839:2839	6912758	42	True				
ANR	6913138	Statement	1	161:46:2841:2841	6912758	43	True				
ANR	6913139	Statement	)	161:47:2842:2842	6912758	44	True				
ANR	6913140	ExpressionStatement		161:48:2843:2843	6912758	45	True				
ANR	6913141	IfStatement	if ( mode == QCRYPTO_CIPHER_MODE_XTS )		6912758	46					
ANR	6913142	Condition	mode == QCRYPTO_CIPHER_MODE_XTS	165:12:2860:2890	6912758	0	True				
ANR	6913143	EqualityExpression	mode == QCRYPTO_CIPHER_MODE_XTS		6912758	0		==			
ANR	6913144	Identifier	mode		6912758	0					
ANR	6913145	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	1					
ANR	6913146	CompoundStatement		157:45:2653:2653	6912758	1					
ANR	6913147	Statement	ctx	167:12:2908:2910	6912758	0	True				
ANR	6913148	Statement	->	167:15:2911:2912	6912758	1	True				
ANR	6913149	Statement	ctx_tweak	167:17:2913:2921	6912758	2	True				
ANR	6913150	Statement	=	167:27:2923:2923	6912758	3	True				
ANR	6913151	Statement	g_new0	167:29:2925:2930	6912758	4	True				
ANR	6913152	Statement	(	167:35:2931:2931	6912758	5	True				
ANR	6913153	Statement	struct	167:36:2932:2937	6912758	6	True				
ANR	6913154	Statement	cast128_ctx	167:43:2939:2949	6912758	7	True				
ANR	6913155	Statement	","	167:54:2950:2950	6912758	8	True				
ANR	6913156	Statement	1	167:56:2952:2952	6912758	9	True				
ANR	6913157	Statement	)	167:57:2953:2953	6912758	10	True				
ANR	6913158	ExpressionStatement		167:58:2954:2954	6912758	11	True				
ANR	6913159	ExpressionStatement	nkey /= 2	171:12:2971:2980	6912758	12	True				
ANR	6913160	AssignmentExpression	nkey /= 2		6912758	0		/=			
ANR	6913161	Identifier	nkey		6912758	0					
ANR	6913162	PrimaryExpression	2		6912758	1					
ANR	6913163	ExpressionStatement	"cast5_set_key ( ctx -> ctx , nkey , key )"	173:12:2995:3029	6912758	13	True				
ANR	6913164	CallExpression	"cast5_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913165	Callee	cast5_set_key		6912758	0					
ANR	6913166	Identifier	cast5_set_key		6912758	0					
ANR	6913167	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913168	Argument	ctx -> ctx		6912758	0					
ANR	6913169	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913170	Identifier	ctx		6912758	0					
ANR	6913171	Identifier	ctx		6912758	1					
ANR	6913172	Argument	nkey		6912758	1					
ANR	6913173	Identifier	nkey		6912758	0					
ANR	6913174	Argument	key		6912758	2					
ANR	6913175	Identifier	key		6912758	0					
ANR	6913176	ExpressionStatement	"cast5_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"	175:12:3044:3091	6912758	14	True				
ANR	6913177	CallExpression	"cast5_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"		6912758	0					
ANR	6913178	Callee	cast5_set_key		6912758	0					
ANR	6913179	Identifier	cast5_set_key		6912758	0					
ANR	6913180	ArgumentList	ctx -> ctx_tweak		6912758	1					
ANR	6913181	Argument	ctx -> ctx_tweak		6912758	0					
ANR	6913182	PtrMemberAccess	ctx -> ctx_tweak		6912758	0					
ANR	6913183	Identifier	ctx		6912758	0					
ANR	6913184	Identifier	ctx_tweak		6912758	1					
ANR	6913185	Argument	nkey		6912758	1					
ANR	6913186	Identifier	nkey		6912758	0					
ANR	6913187	Argument	key + nkey		6912758	2					
ANR	6913188	AdditiveExpression	key + nkey		6912758	0		+			
ANR	6913189	Identifier	key		6912758	0					
ANR	6913190	Identifier	nkey		6912758	1					
ANR	6913191	ElseStatement	else		6912758	0					
ANR	6913192	CompoundStatement		169:15:2869:2869	6912758	0					
ANR	6913193	ExpressionStatement	"cast5_set_key ( ctx -> ctx , nkey , key )"	179:12:3124:3158	6912758	0	True				
ANR	6913194	CallExpression	"cast5_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913195	Callee	cast5_set_key		6912758	0					
ANR	6913196	Identifier	cast5_set_key		6912758	0					
ANR	6913197	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913198	Argument	ctx -> ctx		6912758	0					
ANR	6913199	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913200	Identifier	ctx		6912758	0					
ANR	6913201	Identifier	ctx		6912758	1					
ANR	6913202	Argument	nkey		6912758	1					
ANR	6913203	Identifier	nkey		6912758	0					
ANR	6913204	Argument	key		6912758	2					
ANR	6913205	Identifier	key		6912758	0					
ANR	6913206	ExpressionStatement	ctx -> alg_encrypt_native = cast128_encrypt_native	185:8:3182:3230	6912758	47	True				
ANR	6913207	AssignmentExpression	ctx -> alg_encrypt_native = cast128_encrypt_native		6912758	0		=			
ANR	6913208	PtrMemberAccess	ctx -> alg_encrypt_native		6912758	0					
ANR	6913209	Identifier	ctx		6912758	0					
ANR	6913210	Identifier	alg_encrypt_native		6912758	1					
ANR	6913211	Identifier	cast128_encrypt_native		6912758	1					
ANR	6913212	ExpressionStatement	ctx -> alg_decrypt_native = cast128_decrypt_native	187:8:3241:3289	6912758	48	True				
ANR	6913213	AssignmentExpression	ctx -> alg_decrypt_native = cast128_decrypt_native		6912758	0		=			
ANR	6913214	PtrMemberAccess	ctx -> alg_decrypt_native		6912758	0					
ANR	6913215	Identifier	ctx		6912758	0					
ANR	6913216	Identifier	alg_decrypt_native		6912758	1					
ANR	6913217	Identifier	cast128_decrypt_native		6912758	1					
ANR	6913218	ExpressionStatement	ctx -> alg_encrypt_wrapper = cast128_encrypt_wrapper	189:8:3300:3350	6912758	49	True				
ANR	6913219	AssignmentExpression	ctx -> alg_encrypt_wrapper = cast128_encrypt_wrapper		6912758	0		=			
ANR	6913220	PtrMemberAccess	ctx -> alg_encrypt_wrapper		6912758	0					
ANR	6913221	Identifier	ctx		6912758	0					
ANR	6913222	Identifier	alg_encrypt_wrapper		6912758	1					
ANR	6913223	Identifier	cast128_encrypt_wrapper		6912758	1					
ANR	6913224	ExpressionStatement	ctx -> alg_decrypt_wrapper = cast128_decrypt_wrapper	191:8:3361:3411	6912758	50	True				
ANR	6913225	AssignmentExpression	ctx -> alg_decrypt_wrapper = cast128_decrypt_wrapper		6912758	0		=			
ANR	6913226	PtrMemberAccess	ctx -> alg_decrypt_wrapper		6912758	0					
ANR	6913227	Identifier	ctx		6912758	0					
ANR	6913228	Identifier	alg_decrypt_wrapper		6912758	1					
ANR	6913229	Identifier	cast128_decrypt_wrapper		6912758	1					
ANR	6913230	ExpressionStatement	ctx -> blocksize = CAST128_BLOCK_SIZE	195:8:3424:3459	6912758	51	True				
ANR	6913231	AssignmentExpression	ctx -> blocksize = CAST128_BLOCK_SIZE		6912758	0		=			
ANR	6913232	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913233	Identifier	ctx		6912758	0					
ANR	6913234	Identifier	blocksize		6912758	1					
ANR	6913235	Identifier	CAST128_BLOCK_SIZE		6912758	1					
ANR	6913236	BreakStatement	break ;	197:8:3470:3475	6912758	52	True				
ANR	6913237	Label	case QCRYPTO_CIPHER_ALG_SERPENT_128 :	201:4:3484:3519	6912758	53	True				
ANR	6913238	Identifier	QCRYPTO_CIPHER_ALG_SERPENT_128		6912758	0					
ANR	6913239	Label	case QCRYPTO_CIPHER_ALG_SERPENT_192 :	203:4:3526:3561	6912758	54	True				
ANR	6913240	Identifier	QCRYPTO_CIPHER_ALG_SERPENT_192		6912758	0					
ANR	6913241	Label	case QCRYPTO_CIPHER_ALG_SERPENT_256 :	205:4:3568:3603	6912758	55	True				
ANR	6913242	Identifier	QCRYPTO_CIPHER_ALG_SERPENT_256		6912758	0					
ANR	6913243	Statement	ctx	207:8:3614:3616	6912758	56	True				
ANR	6913244	Statement	->	207:11:3617:3618	6912758	57	True				
ANR	6913245	Statement	ctx	207:13:3619:3621	6912758	58	True				
ANR	6913246	Statement	=	207:17:3623:3623	6912758	59	True				
ANR	6913247	Statement	g_new0	207:19:3625:3630	6912758	60	True				
ANR	6913248	Statement	(	207:25:3631:3631	6912758	61	True				
ANR	6913249	Statement	struct	207:26:3632:3637	6912758	62	True				
ANR	6913250	Statement	serpent_ctx	207:33:3639:3649	6912758	63	True				
ANR	6913251	Statement	","	207:44:3650:3650	6912758	64	True				
ANR	6913252	Statement	1	207:46:3652:3652	6912758	65	True				
ANR	6913253	Statement	)	207:47:3653:3653	6912758	66	True				
ANR	6913254	ExpressionStatement		207:48:3654:3654	6912758	67	True				
ANR	6913255	IfStatement	if ( mode == QCRYPTO_CIPHER_MODE_XTS )		6912758	68					
ANR	6913256	Condition	mode == QCRYPTO_CIPHER_MODE_XTS	211:12:3671:3701	6912758	0	True				
ANR	6913257	EqualityExpression	mode == QCRYPTO_CIPHER_MODE_XTS		6912758	0		==			
ANR	6913258	Identifier	mode		6912758	0					
ANR	6913259	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	1					
ANR	6913260	CompoundStatement		203:45:3464:3464	6912758	1					
ANR	6913261	Statement	ctx	213:12:3719:3721	6912758	0	True				
ANR	6913262	Statement	->	213:15:3722:3723	6912758	1	True				
ANR	6913263	Statement	ctx_tweak	213:17:3724:3732	6912758	2	True				
ANR	6913264	Statement	=	213:27:3734:3734	6912758	3	True				
ANR	6913265	Statement	g_new0	213:29:3736:3741	6912758	4	True				
ANR	6913266	Statement	(	213:35:3742:3742	6912758	5	True				
ANR	6913267	Statement	struct	213:36:3743:3748	6912758	6	True				
ANR	6913268	Statement	serpent_ctx	213:43:3750:3760	6912758	7	True				
ANR	6913269	Statement	","	213:54:3761:3761	6912758	8	True				
ANR	6913270	Statement	1	213:56:3763:3763	6912758	9	True				
ANR	6913271	Statement	)	213:57:3764:3764	6912758	10	True				
ANR	6913272	ExpressionStatement		213:58:3765:3765	6912758	11	True				
ANR	6913273	ExpressionStatement	nkey /= 2	217:12:3782:3791	6912758	12	True				
ANR	6913274	AssignmentExpression	nkey /= 2		6912758	0		/=			
ANR	6913275	Identifier	nkey		6912758	0					
ANR	6913276	PrimaryExpression	2		6912758	1					
ANR	6913277	ExpressionStatement	"serpent_set_key ( ctx -> ctx , nkey , key )"	219:12:3806:3842	6912758	13	True				
ANR	6913278	CallExpression	"serpent_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913279	Callee	serpent_set_key		6912758	0					
ANR	6913280	Identifier	serpent_set_key		6912758	0					
ANR	6913281	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913282	Argument	ctx -> ctx		6912758	0					
ANR	6913283	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913284	Identifier	ctx		6912758	0					
ANR	6913285	Identifier	ctx		6912758	1					
ANR	6913286	Argument	nkey		6912758	1					
ANR	6913287	Identifier	nkey		6912758	0					
ANR	6913288	Argument	key		6912758	2					
ANR	6913289	Identifier	key		6912758	0					
ANR	6913290	ExpressionStatement	"serpent_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"	221:12:3857:3906	6912758	14	True				
ANR	6913291	CallExpression	"serpent_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"		6912758	0					
ANR	6913292	Callee	serpent_set_key		6912758	0					
ANR	6913293	Identifier	serpent_set_key		6912758	0					
ANR	6913294	ArgumentList	ctx -> ctx_tweak		6912758	1					
ANR	6913295	Argument	ctx -> ctx_tweak		6912758	0					
ANR	6913296	PtrMemberAccess	ctx -> ctx_tweak		6912758	0					
ANR	6913297	Identifier	ctx		6912758	0					
ANR	6913298	Identifier	ctx_tweak		6912758	1					
ANR	6913299	Argument	nkey		6912758	1					
ANR	6913300	Identifier	nkey		6912758	0					
ANR	6913301	Argument	key + nkey		6912758	2					
ANR	6913302	AdditiveExpression	key + nkey		6912758	0		+			
ANR	6913303	Identifier	key		6912758	0					
ANR	6913304	Identifier	nkey		6912758	1					
ANR	6913305	ElseStatement	else		6912758	0					
ANR	6913306	CompoundStatement		215:15:3684:3684	6912758	0					
ANR	6913307	ExpressionStatement	"serpent_set_key ( ctx -> ctx , nkey , key )"	225:12:3939:3975	6912758	0	True				
ANR	6913308	CallExpression	"serpent_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913309	Callee	serpent_set_key		6912758	0					
ANR	6913310	Identifier	serpent_set_key		6912758	0					
ANR	6913311	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913312	Argument	ctx -> ctx		6912758	0					
ANR	6913313	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913314	Identifier	ctx		6912758	0					
ANR	6913315	Identifier	ctx		6912758	1					
ANR	6913316	Argument	nkey		6912758	1					
ANR	6913317	Identifier	nkey		6912758	0					
ANR	6913318	Argument	key		6912758	2					
ANR	6913319	Identifier	key		6912758	0					
ANR	6913320	ExpressionStatement	ctx -> alg_encrypt_native = serpent_encrypt_native	231:8:3999:4047	6912758	69	True				
ANR	6913321	AssignmentExpression	ctx -> alg_encrypt_native = serpent_encrypt_native		6912758	0		=			
ANR	6913322	PtrMemberAccess	ctx -> alg_encrypt_native		6912758	0					
ANR	6913323	Identifier	ctx		6912758	0					
ANR	6913324	Identifier	alg_encrypt_native		6912758	1					
ANR	6913325	Identifier	serpent_encrypt_native		6912758	1					
ANR	6913326	ExpressionStatement	ctx -> alg_decrypt_native = serpent_decrypt_native	233:8:4058:4106	6912758	70	True				
ANR	6913327	AssignmentExpression	ctx -> alg_decrypt_native = serpent_decrypt_native		6912758	0		=			
ANR	6913328	PtrMemberAccess	ctx -> alg_decrypt_native		6912758	0					
ANR	6913329	Identifier	ctx		6912758	0					
ANR	6913330	Identifier	alg_decrypt_native		6912758	1					
ANR	6913331	Identifier	serpent_decrypt_native		6912758	1					
ANR	6913332	ExpressionStatement	ctx -> alg_encrypt_wrapper = serpent_encrypt_wrapper	235:8:4117:4167	6912758	71	True				
ANR	6913333	AssignmentExpression	ctx -> alg_encrypt_wrapper = serpent_encrypt_wrapper		6912758	0		=			
ANR	6913334	PtrMemberAccess	ctx -> alg_encrypt_wrapper		6912758	0					
ANR	6913335	Identifier	ctx		6912758	0					
ANR	6913336	Identifier	alg_encrypt_wrapper		6912758	1					
ANR	6913337	Identifier	serpent_encrypt_wrapper		6912758	1					
ANR	6913338	ExpressionStatement	ctx -> alg_decrypt_wrapper = serpent_decrypt_wrapper	237:8:4178:4228	6912758	72	True				
ANR	6913339	AssignmentExpression	ctx -> alg_decrypt_wrapper = serpent_decrypt_wrapper		6912758	0		=			
ANR	6913340	PtrMemberAccess	ctx -> alg_decrypt_wrapper		6912758	0					
ANR	6913341	Identifier	ctx		6912758	0					
ANR	6913342	Identifier	alg_decrypt_wrapper		6912758	1					
ANR	6913343	Identifier	serpent_decrypt_wrapper		6912758	1					
ANR	6913344	ExpressionStatement	ctx -> blocksize = SERPENT_BLOCK_SIZE	241:8:4241:4276	6912758	73	True				
ANR	6913345	AssignmentExpression	ctx -> blocksize = SERPENT_BLOCK_SIZE		6912758	0		=			
ANR	6913346	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913347	Identifier	ctx		6912758	0					
ANR	6913348	Identifier	blocksize		6912758	1					
ANR	6913349	Identifier	SERPENT_BLOCK_SIZE		6912758	1					
ANR	6913350	BreakStatement	break ;	243:8:4287:4292	6912758	74	True				
ANR	6913351	Label	case QCRYPTO_CIPHER_ALG_TWOFISH_128 :	247:4:4301:4336	6912758	75	True				
ANR	6913352	Identifier	QCRYPTO_CIPHER_ALG_TWOFISH_128		6912758	0					
ANR	6913353	Label	case QCRYPTO_CIPHER_ALG_TWOFISH_192 :	249:4:4343:4378	6912758	76	True				
ANR	6913354	Identifier	QCRYPTO_CIPHER_ALG_TWOFISH_192		6912758	0					
ANR	6913355	Label	case QCRYPTO_CIPHER_ALG_TWOFISH_256 :	251:4:4385:4420	6912758	77	True				
ANR	6913356	Identifier	QCRYPTO_CIPHER_ALG_TWOFISH_256		6912758	0					
ANR	6913357	Statement	ctx	253:8:4431:4433	6912758	78	True				
ANR	6913358	Statement	->	253:11:4434:4435	6912758	79	True				
ANR	6913359	Statement	ctx	253:13:4436:4438	6912758	80	True				
ANR	6913360	Statement	=	253:17:4440:4440	6912758	81	True				
ANR	6913361	Statement	g_new0	253:19:4442:4447	6912758	82	True				
ANR	6913362	Statement	(	253:25:4448:4448	6912758	83	True				
ANR	6913363	Statement	struct	253:26:4449:4454	6912758	84	True				
ANR	6913364	Statement	twofish_ctx	253:33:4456:4466	6912758	85	True				
ANR	6913365	Statement	","	253:44:4467:4467	6912758	86	True				
ANR	6913366	Statement	1	253:46:4469:4469	6912758	87	True				
ANR	6913367	Statement	)	253:47:4470:4470	6912758	88	True				
ANR	6913368	ExpressionStatement		253:48:4471:4471	6912758	89	True				
ANR	6913369	IfStatement	if ( mode == QCRYPTO_CIPHER_MODE_XTS )		6912758	90					
ANR	6913370	Condition	mode == QCRYPTO_CIPHER_MODE_XTS	257:12:4488:4518	6912758	0	True				
ANR	6913371	EqualityExpression	mode == QCRYPTO_CIPHER_MODE_XTS		6912758	0		==			
ANR	6913372	Identifier	mode		6912758	0					
ANR	6913373	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	1					
ANR	6913374	CompoundStatement		249:45:4281:4281	6912758	1					
ANR	6913375	Statement	ctx	259:12:4536:4538	6912758	0	True				
ANR	6913376	Statement	->	259:15:4539:4540	6912758	1	True				
ANR	6913377	Statement	ctx_tweak	259:17:4541:4549	6912758	2	True				
ANR	6913378	Statement	=	259:27:4551:4551	6912758	3	True				
ANR	6913379	Statement	g_new0	259:29:4553:4558	6912758	4	True				
ANR	6913380	Statement	(	259:35:4559:4559	6912758	5	True				
ANR	6913381	Statement	struct	259:36:4560:4565	6912758	6	True				
ANR	6913382	Statement	twofish_ctx	259:43:4567:4577	6912758	7	True				
ANR	6913383	Statement	","	259:54:4578:4578	6912758	8	True				
ANR	6913384	Statement	1	259:56:4580:4580	6912758	9	True				
ANR	6913385	Statement	)	259:57:4581:4581	6912758	10	True				
ANR	6913386	ExpressionStatement		259:58:4582:4582	6912758	11	True				
ANR	6913387	ExpressionStatement	nkey /= 2	263:12:4599:4608	6912758	12	True				
ANR	6913388	AssignmentExpression	nkey /= 2		6912758	0		/=			
ANR	6913389	Identifier	nkey		6912758	0					
ANR	6913390	PrimaryExpression	2		6912758	1					
ANR	6913391	ExpressionStatement	"twofish_set_key ( ctx -> ctx , nkey , key )"	265:12:4623:4659	6912758	13	True				
ANR	6913392	CallExpression	"twofish_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913393	Callee	twofish_set_key		6912758	0					
ANR	6913394	Identifier	twofish_set_key		6912758	0					
ANR	6913395	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913396	Argument	ctx -> ctx		6912758	0					
ANR	6913397	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913398	Identifier	ctx		6912758	0					
ANR	6913399	Identifier	ctx		6912758	1					
ANR	6913400	Argument	nkey		6912758	1					
ANR	6913401	Identifier	nkey		6912758	0					
ANR	6913402	Argument	key		6912758	2					
ANR	6913403	Identifier	key		6912758	0					
ANR	6913404	ExpressionStatement	"twofish_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"	267:12:4674:4723	6912758	14	True				
ANR	6913405	CallExpression	"twofish_set_key ( ctx -> ctx_tweak , nkey , key + nkey )"		6912758	0					
ANR	6913406	Callee	twofish_set_key		6912758	0					
ANR	6913407	Identifier	twofish_set_key		6912758	0					
ANR	6913408	ArgumentList	ctx -> ctx_tweak		6912758	1					
ANR	6913409	Argument	ctx -> ctx_tweak		6912758	0					
ANR	6913410	PtrMemberAccess	ctx -> ctx_tweak		6912758	0					
ANR	6913411	Identifier	ctx		6912758	0					
ANR	6913412	Identifier	ctx_tweak		6912758	1					
ANR	6913413	Argument	nkey		6912758	1					
ANR	6913414	Identifier	nkey		6912758	0					
ANR	6913415	Argument	key + nkey		6912758	2					
ANR	6913416	AdditiveExpression	key + nkey		6912758	0		+			
ANR	6913417	Identifier	key		6912758	0					
ANR	6913418	Identifier	nkey		6912758	1					
ANR	6913419	ElseStatement	else		6912758	0					
ANR	6913420	CompoundStatement		261:15:4501:4501	6912758	0					
ANR	6913421	ExpressionStatement	"twofish_set_key ( ctx -> ctx , nkey , key )"	271:12:4756:4792	6912758	0	True				
ANR	6913422	CallExpression	"twofish_set_key ( ctx -> ctx , nkey , key )"		6912758	0					
ANR	6913423	Callee	twofish_set_key		6912758	0					
ANR	6913424	Identifier	twofish_set_key		6912758	0					
ANR	6913425	ArgumentList	ctx -> ctx		6912758	1					
ANR	6913426	Argument	ctx -> ctx		6912758	0					
ANR	6913427	PtrMemberAccess	ctx -> ctx		6912758	0					
ANR	6913428	Identifier	ctx		6912758	0					
ANR	6913429	Identifier	ctx		6912758	1					
ANR	6913430	Argument	nkey		6912758	1					
ANR	6913431	Identifier	nkey		6912758	0					
ANR	6913432	Argument	key		6912758	2					
ANR	6913433	Identifier	key		6912758	0					
ANR	6913434	ExpressionStatement	ctx -> alg_encrypt_native = twofish_encrypt_native	277:8:4816:4864	6912758	91	True				
ANR	6913435	AssignmentExpression	ctx -> alg_encrypt_native = twofish_encrypt_native		6912758	0		=			
ANR	6913436	PtrMemberAccess	ctx -> alg_encrypt_native		6912758	0					
ANR	6913437	Identifier	ctx		6912758	0					
ANR	6913438	Identifier	alg_encrypt_native		6912758	1					
ANR	6913439	Identifier	twofish_encrypt_native		6912758	1					
ANR	6913440	ExpressionStatement	ctx -> alg_decrypt_native = twofish_decrypt_native	279:8:4875:4923	6912758	92	True				
ANR	6913441	AssignmentExpression	ctx -> alg_decrypt_native = twofish_decrypt_native		6912758	0		=			
ANR	6913442	PtrMemberAccess	ctx -> alg_decrypt_native		6912758	0					
ANR	6913443	Identifier	ctx		6912758	0					
ANR	6913444	Identifier	alg_decrypt_native		6912758	1					
ANR	6913445	Identifier	twofish_decrypt_native		6912758	1					
ANR	6913446	ExpressionStatement	ctx -> alg_encrypt_wrapper = twofish_encrypt_wrapper	281:8:4934:4984	6912758	93	True				
ANR	6913447	AssignmentExpression	ctx -> alg_encrypt_wrapper = twofish_encrypt_wrapper		6912758	0		=			
ANR	6913448	PtrMemberAccess	ctx -> alg_encrypt_wrapper		6912758	0					
ANR	6913449	Identifier	ctx		6912758	0					
ANR	6913450	Identifier	alg_encrypt_wrapper		6912758	1					
ANR	6913451	Identifier	twofish_encrypt_wrapper		6912758	1					
ANR	6913452	ExpressionStatement	ctx -> alg_decrypt_wrapper = twofish_decrypt_wrapper	283:8:4995:5045	6912758	94	True				
ANR	6913453	AssignmentExpression	ctx -> alg_decrypt_wrapper = twofish_decrypt_wrapper		6912758	0		=			
ANR	6913454	PtrMemberAccess	ctx -> alg_decrypt_wrapper		6912758	0					
ANR	6913455	Identifier	ctx		6912758	0					
ANR	6913456	Identifier	alg_decrypt_wrapper		6912758	1					
ANR	6913457	Identifier	twofish_decrypt_wrapper		6912758	1					
ANR	6913458	ExpressionStatement	ctx -> blocksize = TWOFISH_BLOCK_SIZE	287:8:5058:5093	6912758	95	True				
ANR	6913459	AssignmentExpression	ctx -> blocksize = TWOFISH_BLOCK_SIZE		6912758	0		=			
ANR	6913460	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913461	Identifier	ctx		6912758	0					
ANR	6913462	Identifier	blocksize		6912758	1					
ANR	6913463	Identifier	TWOFISH_BLOCK_SIZE		6912758	1					
ANR	6913464	BreakStatement	break ;	289:8:5104:5109	6912758	96	True				
ANR	6913465	Label	default :	293:4:5118:5125	6912758	97	True				
ANR	6913466	Identifier	default		6912758	0					
ANR	6913467	ExpressionStatement	"error_setg ( errp , ""Unsupported cipher algorithm %s"" , QCryptoCipherAlgorithm_lookup [ alg ] )"	295:8:5136:5243	6912758	98	True				
ANR	6913468	CallExpression	"error_setg ( errp , ""Unsupported cipher algorithm %s"" , QCryptoCipherAlgorithm_lookup [ alg ] )"		6912758	0					
ANR	6913469	Callee	error_setg		6912758	0					
ANR	6913470	Identifier	error_setg		6912758	0					
ANR	6913471	ArgumentList	errp		6912758	1					
ANR	6913472	Argument	errp		6912758	0					
ANR	6913473	Identifier	errp		6912758	0					
ANR	6913474	Argument	"""Unsupported cipher algorithm %s"""		6912758	1					
ANR	6913475	PrimaryExpression	"""Unsupported cipher algorithm %s"""		6912758	0					
ANR	6913476	Argument	QCryptoCipherAlgorithm_lookup [ alg ]		6912758	2					
ANR	6913477	ArrayIndexing	QCryptoCipherAlgorithm_lookup [ alg ]		6912758	0					
ANR	6913478	Identifier	QCryptoCipherAlgorithm_lookup		6912758	0					
ANR	6913479	Identifier	alg		6912758	1					
ANR	6913480	GotoStatement	goto error ;	299:8:5254:5264	6912758	99	True				
ANR	6913481	Identifier	error		6912758	0					
ANR	6913482	IfStatement	if ( mode == QCRYPTO_CIPHER_MODE_XTS && ctx -> blocksize != XTS_BLOCK_SIZE )		6912758	10					
ANR	6913483	Condition	mode == QCRYPTO_CIPHER_MODE_XTS && ctx -> blocksize != XTS_BLOCK_SIZE	305:8:5284:5359	6912758	0	True				
ANR	6913484	AndExpression	mode == QCRYPTO_CIPHER_MODE_XTS && ctx -> blocksize != XTS_BLOCK_SIZE		6912758	0		&&			
ANR	6913485	EqualityExpression	mode == QCRYPTO_CIPHER_MODE_XTS		6912758	0		==			
ANR	6913486	Identifier	mode		6912758	0					
ANR	6913487	Identifier	QCRYPTO_CIPHER_MODE_XTS		6912758	1					
ANR	6913488	EqualityExpression	ctx -> blocksize != XTS_BLOCK_SIZE		6912758	1		!=			
ANR	6913489	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913490	Identifier	ctx		6912758	0					
ANR	6913491	Identifier	blocksize		6912758	1					
ANR	6913492	Identifier	XTS_BLOCK_SIZE		6912758	1					
ANR	6913493	CompoundStatement		299:42:5122:5122	6912758	1					
ANR	6913494	ExpressionStatement	"error_setg ( errp , ""Cipher block size %zu must equal XTS block size %d"" , ctx -> blocksize , XTS_BLOCK_SIZE )"	309:8:5373:5495	6912758	0	True				
ANR	6913495	CallExpression	"error_setg ( errp , ""Cipher block size %zu must equal XTS block size %d"" , ctx -> blocksize , XTS_BLOCK_SIZE )"		6912758	0					
ANR	6913496	Callee	error_setg		6912758	0					
ANR	6913497	Identifier	error_setg		6912758	0					
ANR	6913498	ArgumentList	errp		6912758	1					
ANR	6913499	Argument	errp		6912758	0					
ANR	6913500	Identifier	errp		6912758	0					
ANR	6913501	Argument	"""Cipher block size %zu must equal XTS block size %d"""		6912758	1					
ANR	6913502	PrimaryExpression	"""Cipher block size %zu must equal XTS block size %d"""		6912758	0					
ANR	6913503	Argument	ctx -> blocksize		6912758	2					
ANR	6913504	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913505	Identifier	ctx		6912758	0					
ANR	6913506	Identifier	blocksize		6912758	1					
ANR	6913507	Argument	XTS_BLOCK_SIZE		6912758	3					
ANR	6913508	Identifier	XTS_BLOCK_SIZE		6912758	0					
ANR	6913509	GotoStatement	goto error ;	313:8:5506:5516	6912758	1	True				
ANR	6913510	Identifier	error		6912758	0					
ANR	6913511	ExpressionStatement	"ctx -> iv = g_new0 ( uint8_t , ctx -> blocksize )"	319:4:5532:5573	6912758	11	True				
ANR	6913512	AssignmentExpression	"ctx -> iv = g_new0 ( uint8_t , ctx -> blocksize )"		6912758	0		=			
ANR	6913513	PtrMemberAccess	ctx -> iv		6912758	0					
ANR	6913514	Identifier	ctx		6912758	0					
ANR	6913515	Identifier	iv		6912758	1					
ANR	6913516	CallExpression	"g_new0 ( uint8_t , ctx -> blocksize )"		6912758	1					
ANR	6913517	Callee	g_new0		6912758	0					
ANR	6913518	Identifier	g_new0		6912758	0					
ANR	6913519	ArgumentList	uint8_t		6912758	1					
ANR	6913520	Argument	uint8_t		6912758	0					
ANR	6913521	Identifier	uint8_t		6912758	0					
ANR	6913522	Argument	ctx -> blocksize		6912758	1					
ANR	6913523	PtrMemberAccess	ctx -> blocksize		6912758	0					
ANR	6913524	Identifier	ctx		6912758	0					
ANR	6913525	Identifier	blocksize		6912758	1					
ANR	6913526	ExpressionStatement	cipher -> opaque = ctx	321:4:5580:5600	6912758	12	True				
ANR	6913527	AssignmentExpression	cipher -> opaque = ctx		6912758	0		=			
ANR	6913528	PtrMemberAccess	cipher -> opaque		6912758	0					
ANR	6913529	Identifier	cipher		6912758	0					
ANR	6913530	Identifier	opaque		6912758	1					
ANR	6913531	Identifier	ctx		6912758	1					
ANR	6913532	ReturnStatement	return cipher ;	325:4:5609:5622	6912758	13	True				
ANR	6913533	Identifier	cipher		6912758	0					
ANR	6913534	Label	error :	329:1:5628:5633	6912758	14	True				
ANR	6913535	Identifier	error		6912758	0					
ANR	6913536	ExpressionStatement	g_free ( cipher )	331:4:5640:5654	6912758	15	True				
ANR	6913537	CallExpression	g_free ( cipher )		6912758	0					
ANR	6913538	Callee	g_free		6912758	0					
ANR	6913539	Identifier	g_free		6912758	0					
ANR	6913540	ArgumentList	cipher		6912758	1					
ANR	6913541	Argument	cipher		6912758	0					
ANR	6913542	Identifier	cipher		6912758	0					
ANR	6913543	ExpressionStatement	g_free ( ctx )	333:4:5661:5672	6912758	16	True				
ANR	6913544	CallExpression	g_free ( ctx )		6912758	0					
ANR	6913545	Callee	g_free		6912758	0					
ANR	6913546	Identifier	g_free		6912758	0					
ANR	6913547	ArgumentList	ctx		6912758	1					
ANR	6913548	Argument	ctx		6912758	0					
ANR	6913549	Identifier	ctx		6912758	0					
ANR	6913550	ReturnStatement	return NULL ;	335:4:5679:5690	6912758	17	True				
ANR	6913551	Identifier	NULL		6912758	0					
ANR	6913552	ReturnType	QCryptoCipher *		6912758	1					
ANR	6913553	Identifier	qcrypto_cipher_new		6912758	2					
ANR	6913554	ParameterList	"QCryptoCipherAlgorithm alg , QCryptoCipherMode mode , const uint8_t * key , size_t nkey , Error * * errp"		6912758	3					
ANR	6913555	Parameter	QCryptoCipherAlgorithm alg	1:34:34:59	6912758	0	True				
ANR	6913556	ParameterType	QCryptoCipherAlgorithm		6912758	0					
ANR	6913557	Identifier	alg		6912758	1					
ANR	6913558	Parameter	QCryptoCipherMode mode	3:34:97:118	6912758	1	True				
ANR	6913559	ParameterType	QCryptoCipherMode		6912758	0					
ANR	6913560	Identifier	mode		6912758	1					
ANR	6913561	Parameter	const uint8_t * key	5:34:156:173	6912758	2	True				
ANR	6913562	ParameterType	const uint8_t *		6912758	0					
ANR	6913563	Identifier	key		6912758	1					
ANR	6913564	Parameter	size_t nkey	5:54:176:186	6912758	3	True				
ANR	6913565	ParameterType	size_t		6912758	0					
ANR	6913566	Identifier	nkey		6912758	1					
ANR	6913567	Parameter	Error * * errp	7:34:224:235	6912758	4	True				
ANR	6913568	ParameterType	Error * *		6912758	0					
ANR	6913569	Identifier	errp		6912758	1					
ANR	6913570	CFGEntryNode	ENTRY		6912758		True				
ANR	6913571	CFGExitNode	EXIT		6912758		True				
ANR	6913572	Symbol	SERPENT_BLOCK_SIZE		6912758						
ANR	6913573	Symbol	nkey		6912758						
ANR	6913574	Symbol	ctx -> alg_encrypt_wrapper		6912758						
ANR	6913575	Symbol	QCryptoCipher		6912758						
ANR	6913576	Symbol	cast128_encrypt_native		6912758						
ANR	6913577	Symbol	errp		6912758						
ANR	6913578	Symbol	aes_decrypt_native		6912758						
ANR	6913579	Symbol	QCRYPTO_CIPHER_MODE_XTS		6912758						
ANR	6913580	Symbol	DES_BLOCK_SIZE		6912758						
ANR	6913581	Symbol	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> enc		6912758						
ANR	6913582	Symbol	mode		6912758						
ANR	6913583	Symbol	cast128_decrypt_wrapper		6912758						
ANR	6913584	Symbol	twofish_encrypt_wrapper		6912758						
ANR	6913585	Symbol	des_encrypt_wrapper		6912758						
ANR	6913586	Symbol	alg		6912758						
ANR	6913587	Symbol	aes_decrypt_wrapper		6912758						
ANR	6913588	Symbol	QCryptoNettleAES		6912758						
ANR	6913589	Symbol	CAST128_BLOCK_SIZE		6912758						
ANR	6913590	Symbol	rfbkey		6912758						
ANR	6913591	Symbol	NULL		6912758						
ANR	6913592	Symbol	serpent_decrypt_wrapper		6912758						
ANR	6913593	Symbol	ctx		6912758						
ANR	6913594	Symbol	twofish_decrypt_wrapper		6912758						
ANR	6913595	Symbol	ctx -> alg_decrypt_native		6912758						
ANR	6913596	Symbol	TWOFISH_BLOCK_SIZE		6912758						
ANR	6913597	Symbol	QCryptoCipherAlgorithm_lookup		6912758						
ANR	6913598	Symbol	serpent_decrypt_native		6912758						
ANR	6913599	Symbol	QCryptoCipherMode_lookup		6912758						
ANR	6913600	Symbol	uint8_t		6912758						
ANR	6913601	Symbol	ctx -> blocksize		6912758						
ANR	6913602	Symbol	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> enc		6912758						
ANR	6913603	Symbol	qcrypto_cipher_validate_key_length		6912758						
ANR	6913604	Symbol	cast128_encrypt_wrapper		6912758						
ANR	6913605	Symbol	& ( ( QCryptoNettleAES * ) ctx -> ctx_tweak ) -> dec		6912758						
ANR	6913606	Symbol	serpent_encrypt_native		6912758						
ANR	6913607	Symbol	ctx -> alg_encrypt_native		6912758						
ANR	6913608	Symbol	ctx -> ctx		6912758						
ANR	6913609	Symbol	AES_BLOCK_SIZE		6912758						
ANR	6913610	Symbol	twofish_decrypt_native		6912758						
ANR	6913611	Symbol	cast128_decrypt_native		6912758						
ANR	6913612	Symbol	des_encrypt_native		6912758						
ANR	6913613	Symbol	serpent_encrypt_wrapper		6912758						
ANR	6913614	Symbol	& ( ( QCryptoNettleAES * ) ctx -> ctx ) -> dec		6912758						
ANR	6913615	Symbol	aes_encrypt_native		6912758						
ANR	6913616	Symbol	g_new0		6912758						
ANR	6913617	Symbol	qcrypto_cipher_munge_des_rfb_key		6912758						
ANR	6913618	Symbol	* QCryptoCipherMode_lookup		6912758						
ANR	6913619	Symbol	des_decrypt_wrapper		6912758						
ANR	6913620	Symbol	key		6912758						
ANR	6913621	Symbol	aes_encrypt_wrapper		6912758						
ANR	6913622	Symbol	cipher -> alg		6912758						
ANR	6913623	Symbol	QCryptoCipherNettle		6912758						
ANR	6913624	Symbol	ctx -> iv		6912758						
ANR	6913625	Symbol	cipher		6912758						
ANR	6913626	Symbol	* QCryptoCipherAlgorithm_lookup		6912758						
ANR	6913627	Symbol	des_decrypt_native		6912758						
ANR	6913628	Symbol	twofish_encrypt_native		6912758						
ANR	6913629	Symbol	* cipher		6912758						
ANR	6913630	Symbol	ctx -> ctx_tweak		6912758						
ANR	6913631	Symbol	cipher -> mode		6912758						
ANR	6913632	Symbol	* ctx		6912758						
ANR	6913633	Symbol	ctx -> alg_decrypt_wrapper		6912758						
ANR	6913634	Symbol	XTS_BLOCK_SIZE		6912758						
ANR	6913635	Symbol	* mode		6912758						
ANR	6913636	Symbol	* alg		6912758						
ANR	6913637	Symbol	cipher -> opaque		6912758						
