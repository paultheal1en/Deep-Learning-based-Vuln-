command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3912005	File	/home/p4ultr4n/workplace/ReVeal/raw_code/find_codec_or_die_01_0.c								
ANR	3912006	Function	find_codec_or_die	1:0:0:1256							
ANR	3912007	FunctionDef	"find_codec_or_die (const char * name , int type , int encoder , int strict)"		3912006	0					
ANR	3912008	CompoundStatement		3:0:92:1256	3912006	0					
ANR	3912009	IdentifierDeclStatement	"const char * codec_string = encoder ? ""encoder"" : ""decoder"" ;"	5:4:99:157	3912006	0	True				
ANR	3912010	IdentifierDecl	"* codec_string = encoder ? ""encoder"" : ""decoder"""		3912006	0					
ANR	3912011	IdentifierDeclType	const char *		3912006	0					
ANR	3912012	Identifier	codec_string		3912006	1					
ANR	3912013	AssignmentExpression	"* codec_string = encoder ? ""encoder"" : ""decoder"""		3912006	2		=			
ANR	3912014	Identifier	codec_string		3912006	0					
ANR	3912015	ConditionalExpression	"encoder ? ""encoder"" : ""decoder"""		3912006	1					
ANR	3912016	Condition	encoder		3912006	0					
ANR	3912017	Identifier	encoder		3912006	0					
ANR	3912018	PrimaryExpression	"""encoder"""		3912006	1					
ANR	3912019	PrimaryExpression	"""decoder"""		3912006	2					
ANR	3912020	IdentifierDeclStatement	AVCodec * codec ;	7:4:164:178	3912006	1	True				
ANR	3912021	IdentifierDecl	* codec		3912006	0					
ANR	3912022	IdentifierDeclType	AVCodec *		3912006	0					
ANR	3912023	Identifier	codec		3912006	1					
ANR	3912024	IfStatement	if ( ! name )		3912006	2					
ANR	3912025	Condition	! name	11:7:190:194	3912006	0	True				
ANR	3912026	UnaryOperationExpression	! name		3912006	0					
ANR	3912027	UnaryOperator	!		3912006	0					
ANR	3912028	Identifier	name		3912006	1					
ANR	3912029	ReturnStatement	return CODEC_ID_NONE ;	13:8:206:226	3912006	1	True				
ANR	3912030	Identifier	CODEC_ID_NONE		3912006	0					
ANR	3912031	ExpressionStatement	codec = encoder ? avcodec_find_encoder_by_name ( name ) : avcodec_find_decoder_by_name ( name )	15:4:233:340	3912006	3	True				
ANR	3912032	AssignmentExpression	codec = encoder ? avcodec_find_encoder_by_name ( name ) : avcodec_find_decoder_by_name ( name )		3912006	0		=			
ANR	3912033	Identifier	codec		3912006	0					
ANR	3912034	ConditionalExpression	encoder ? avcodec_find_encoder_by_name ( name ) : avcodec_find_decoder_by_name ( name )		3912006	1					
ANR	3912035	Condition	encoder		3912006	0					
ANR	3912036	Identifier	encoder		3912006	0					
ANR	3912037	CallExpression	avcodec_find_encoder_by_name ( name )		3912006	1					
ANR	3912038	Callee	avcodec_find_encoder_by_name		3912006	0					
ANR	3912039	Identifier	avcodec_find_encoder_by_name		3912006	0					
ANR	3912040	ArgumentList	name		3912006	1					
ANR	3912041	Argument	name		3912006	0					
ANR	3912042	Identifier	name		3912006	0					
ANR	3912043	CallExpression	avcodec_find_decoder_by_name ( name )		3912006	2					
ANR	3912044	Callee	avcodec_find_decoder_by_name		3912006	0					
ANR	3912045	Identifier	avcodec_find_decoder_by_name		3912006	0					
ANR	3912046	ArgumentList	name		3912006	1					
ANR	3912047	Argument	name		3912006	0					
ANR	3912048	Identifier	name		3912006	0					
ANR	3912049	IfStatement	if ( ! codec )		3912006	4					
ANR	3912050	Condition	! codec	21:7:350:355	3912006	0	True				
ANR	3912051	UnaryOperationExpression	! codec		3912006	0					
ANR	3912052	UnaryOperator	!		3912006	0					
ANR	3912053	Identifier	codec		3912006	1					
ANR	3912054	CompoundStatement		19:15:265:265	3912006	1					
ANR	3912055	ExpressionStatement	"fprintf ( stderr , ""Unknown %s '%s'\\n"" , codec_string , name )"	23:8:369:425	3912006	0	True				
ANR	3912056	CallExpression	"fprintf ( stderr , ""Unknown %s '%s'\\n"" , codec_string , name )"		3912006	0					
ANR	3912057	Callee	fprintf		3912006	0					
ANR	3912058	Identifier	fprintf		3912006	0					
ANR	3912059	ArgumentList	stderr		3912006	1					
ANR	3912060	Argument	stderr		3912006	0					
ANR	3912061	Identifier	stderr		3912006	0					
ANR	3912062	Argument	"""Unknown %s '%s'\\n"""		3912006	1					
ANR	3912063	PrimaryExpression	"""Unknown %s '%s'\\n"""		3912006	0					
ANR	3912064	Argument	codec_string		3912006	2					
ANR	3912065	Identifier	codec_string		3912006	0					
ANR	3912066	Argument	name		3912006	3					
ANR	3912067	Identifier	name		3912006	0					
ANR	3912068	ExpressionStatement	ffmpeg_exit ( 1 )	25:8:436:450	3912006	1	True				
ANR	3912069	CallExpression	ffmpeg_exit ( 1 )		3912006	0					
ANR	3912070	Callee	ffmpeg_exit		3912006	0					
ANR	3912071	Identifier	ffmpeg_exit		3912006	0					
ANR	3912072	ArgumentList	1		3912006	1					
ANR	3912073	Argument	1		3912006	0					
ANR	3912074	PrimaryExpression	1		3912006	0					
ANR	3912075	IfStatement	if ( codec -> type != type )		3912006	5					
ANR	3912076	Condition	codec -> type != type	29:7:467:485	3912006	0	True				
ANR	3912077	EqualityExpression	codec -> type != type		3912006	0		!=			
ANR	3912078	PtrMemberAccess	codec -> type		3912006	0					
ANR	3912079	Identifier	codec		3912006	0					
ANR	3912080	Identifier	type		3912006	1					
ANR	3912081	Identifier	type		3912006	1					
ANR	3912082	CompoundStatement		27:28:395:395	3912006	1					
ANR	3912083	ExpressionStatement	"fprintf ( stderr , ""Invalid %s type '%s'\\n"" , codec_string , name )"	31:8:499:560	3912006	0	True				
ANR	3912084	CallExpression	"fprintf ( stderr , ""Invalid %s type '%s'\\n"" , codec_string , name )"		3912006	0					
ANR	3912085	Callee	fprintf		3912006	0					
ANR	3912086	Identifier	fprintf		3912006	0					
ANR	3912087	ArgumentList	stderr		3912006	1					
ANR	3912088	Argument	stderr		3912006	0					
ANR	3912089	Identifier	stderr		3912006	0					
ANR	3912090	Argument	"""Invalid %s type '%s'\\n"""		3912006	1					
ANR	3912091	PrimaryExpression	"""Invalid %s type '%s'\\n"""		3912006	0					
ANR	3912092	Argument	codec_string		3912006	2					
ANR	3912093	Identifier	codec_string		3912006	0					
ANR	3912094	Argument	name		3912006	3					
ANR	3912095	Identifier	name		3912006	0					
ANR	3912096	ExpressionStatement	ffmpeg_exit ( 1 )	33:8:571:585	3912006	1	True				
ANR	3912097	CallExpression	ffmpeg_exit ( 1 )		3912006	0					
ANR	3912098	Callee	ffmpeg_exit		3912006	0					
ANR	3912099	Identifier	ffmpeg_exit		3912006	0					
ANR	3912100	ArgumentList	1		3912006	1					
ANR	3912101	Argument	1		3912006	0					
ANR	3912102	PrimaryExpression	1		3912006	0					
ANR	3912103	IfStatement	if ( codec -> capabilities & CODEC_CAP_EXPERIMENTAL && strict > FF_COMPLIANCE_EXPERIMENTAL )		3912006	6					
ANR	3912104	Condition	codec -> capabilities & CODEC_CAP_EXPERIMENTAL && strict > FF_COMPLIANCE_EXPERIMENTAL	37:7:602:692	3912006	0	True				
ANR	3912105	AndExpression	codec -> capabilities & CODEC_CAP_EXPERIMENTAL && strict > FF_COMPLIANCE_EXPERIMENTAL		3912006	0		&&			
ANR	3912106	BitAndExpression	codec -> capabilities & CODEC_CAP_EXPERIMENTAL		3912006	0		&			
ANR	3912107	PtrMemberAccess	codec -> capabilities		3912006	0					
ANR	3912108	Identifier	codec		3912006	0					
ANR	3912109	Identifier	capabilities		3912006	1					
ANR	3912110	Identifier	CODEC_CAP_EXPERIMENTAL		3912006	1					
ANR	3912111	RelationalExpression	strict > FF_COMPLIANCE_EXPERIMENTAL		3912006	1		>			
ANR	3912112	Identifier	strict		3912006	0					
ANR	3912113	Identifier	FF_COMPLIANCE_EXPERIMENTAL		3912006	1					
ANR	3912114	CompoundStatement		37:44:602:602	3912006	1					
ANR	3912115	Statement	fprintf	41:8:706:712	3912006	0	True				
ANR	3912116	Statement	(	41:15:713:713	3912006	1	True				
ANR	3912117	Statement	stderr	41:16:714:719	3912006	2	True				
ANR	3912118	Statement	","	41:22:720:720	3912006	3	True				
ANR	3912119	Statement	"""%s '%s' is experimental and might produce bad """	41:24:722:769	3912006	4	True				
ANR	3912120	Statement	"""results.\\nAdd '-strict experimental' if you want to use it.\\n"""	43:16:788:850	3912006	5	True				
ANR	3912121	Statement	","	43:79:851:851	3912006	6	True				
ANR	3912122	Statement	codec_string	45:16:870:881	3912006	7	True				
ANR	3912123	Statement	","	45:28:882:882	3912006	8	True				
ANR	3912124	Statement	codec	45:30:884:888	3912006	9	True				
ANR	3912125	Statement	->	45:35:889:890	3912006	10	True				
ANR	3912126	Statement	name	45:37:891:894	3912006	11	True				
ANR	3912127	Statement	)	45:41:895:895	3912006	12	True				
ANR	3912128	ExpressionStatement		45:42:896:896	3912006	13	True				
ANR	3912129	ExpressionStatement	codec = encoder ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )	47:8:907:1016	3912006	14	True				
ANR	3912130	AssignmentExpression	codec = encoder ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )		3912006	0		=			
ANR	3912131	Identifier	codec		3912006	0					
ANR	3912132	ConditionalExpression	encoder ? avcodec_find_encoder ( codec -> id ) : avcodec_find_decoder ( codec -> id )		3912006	1					
ANR	3912133	Condition	encoder		3912006	0					
ANR	3912134	Identifier	encoder		3912006	0					
ANR	3912135	CallExpression	avcodec_find_encoder ( codec -> id )		3912006	1					
ANR	3912136	Callee	avcodec_find_encoder		3912006	0					
ANR	3912137	Identifier	avcodec_find_encoder		3912006	0					
ANR	3912138	ArgumentList	codec -> id		3912006	1					
ANR	3912139	Argument	codec -> id		3912006	0					
ANR	3912140	PtrMemberAccess	codec -> id		3912006	0					
ANR	3912141	Identifier	codec		3912006	0					
ANR	3912142	Identifier	id		3912006	1					
ANR	3912143	CallExpression	avcodec_find_decoder ( codec -> id )		3912006	2					
ANR	3912144	Callee	avcodec_find_decoder		3912006	0					
ANR	3912145	Identifier	avcodec_find_decoder		3912006	0					
ANR	3912146	ArgumentList	codec -> id		3912006	1					
ANR	3912147	Argument	codec -> id		3912006	0					
ANR	3912148	PtrMemberAccess	codec -> id		3912006	0					
ANR	3912149	Identifier	codec		3912006	0					
ANR	3912150	Identifier	id		3912006	1					
ANR	3912151	IfStatement	if ( ! ( codec -> capabilities & CODEC_CAP_EXPERIMENTAL ) )		3912006	15					
ANR	3912152	Condition	! ( codec -> capabilities & CODEC_CAP_EXPERIMENTAL )	53:12:1031:1077	3912006	0	True				
ANR	3912153	UnaryOperationExpression	! ( codec -> capabilities & CODEC_CAP_EXPERIMENTAL )		3912006	0					
ANR	3912154	UnaryOperator	!		3912006	0					
ANR	3912155	BitAndExpression	codec -> capabilities & CODEC_CAP_EXPERIMENTAL		3912006	1		&			
ANR	3912156	PtrMemberAccess	codec -> capabilities		3912006	0					
ANR	3912157	Identifier	codec		3912006	0					
ANR	3912158	Identifier	capabilities		3912006	1					
ANR	3912159	Identifier	CODEC_CAP_EXPERIMENTAL		3912006	1					
ANR	3912160	ExpressionStatement	"fprintf ( stderr , ""Or use the non experimental %s '%s'.\\n"" , codec_string , codec -> name )"	55:12:1093:1198	3912006	1	True				
ANR	3912161	CallExpression	"fprintf ( stderr , ""Or use the non experimental %s '%s'.\\n"" , codec_string , codec -> name )"		3912006	0					
ANR	3912162	Callee	fprintf		3912006	0					
ANR	3912163	Identifier	fprintf		3912006	0					
ANR	3912164	ArgumentList	stderr		3912006	1					
ANR	3912165	Argument	stderr		3912006	0					
ANR	3912166	Identifier	stderr		3912006	0					
ANR	3912167	Argument	"""Or use the non experimental %s '%s'.\\n"""		3912006	1					
ANR	3912168	PrimaryExpression	"""Or use the non experimental %s '%s'.\\n"""		3912006	0					
ANR	3912169	Argument	codec_string		3912006	2					
ANR	3912170	Identifier	codec_string		3912006	0					
ANR	3912171	Argument	codec -> name		3912006	3					
ANR	3912172	PtrMemberAccess	codec -> name		3912006	0					
ANR	3912173	Identifier	codec		3912006	0					
ANR	3912174	Identifier	name		3912006	1					
ANR	3912175	ExpressionStatement	ffmpeg_exit ( 1 )	59:8:1209:1223	3912006	16	True				
ANR	3912176	CallExpression	ffmpeg_exit ( 1 )		3912006	0					
ANR	3912177	Callee	ffmpeg_exit		3912006	0					
ANR	3912178	Identifier	ffmpeg_exit		3912006	0					
ANR	3912179	ArgumentList	1		3912006	1					
ANR	3912180	Argument	1		3912006	0					
ANR	3912181	PrimaryExpression	1		3912006	0					
ANR	3912182	ReturnStatement	return codec -> id ;	63:4:1237:1253	3912006	7	True				
ANR	3912183	PtrMemberAccess	codec -> id		3912006	0					
ANR	3912184	Identifier	codec		3912006	0					
ANR	3912185	Identifier	id		3912006	1					
ANR	3912186	ReturnType	static enum CodecID		3912006	1					
ANR	3912187	Identifier	find_codec_or_die		3912006	2					
ANR	3912188	ParameterList	"const char * name , int type , int encoder , int strict"		3912006	3					
ANR	3912189	Parameter	const char * name	1:38:38:53	3912006	0	True				
ANR	3912190	ParameterType	const char *		3912006	0					
ANR	3912191	Identifier	name		3912006	1					
ANR	3912192	Parameter	int type	1:56:56:63	3912006	1	True				
ANR	3912193	ParameterType	int		3912006	0					
ANR	3912194	Identifier	type		3912006	1					
ANR	3912195	Parameter	int encoder	1:66:66:76	3912006	2	True				
ANR	3912196	ParameterType	int		3912006	0					
ANR	3912197	Identifier	encoder		3912006	1					
ANR	3912198	Parameter	int strict	1:79:79:88	3912006	3	True				
ANR	3912199	ParameterType	int		3912006	0					
ANR	3912200	Identifier	strict		3912006	1					
ANR	3912201	CFGEntryNode	ENTRY		3912006		True				
ANR	3912202	CFGExitNode	EXIT		3912006		True				
ANR	3912203	Symbol	codec -> capabilities		3912006						
ANR	3912204	Symbol	CODEC_ID_NONE		3912006						
ANR	3912205	Symbol	codec -> type		3912006						
ANR	3912206	Symbol	* codec		3912006						
ANR	3912207	Symbol	avcodec_find_decoder		3912006						
ANR	3912208	Symbol	avcodec_find_encoder		3912006						
ANR	3912209	Symbol	codec -> name		3912006						
ANR	3912210	Symbol	type		3912006						
ANR	3912211	Symbol	stderr		3912006						
ANR	3912212	Symbol	FF_COMPLIANCE_EXPERIMENTAL		3912006						
ANR	3912213	Symbol	encoder		3912006						
ANR	3912214	Symbol	codec		3912006						
ANR	3912215	Symbol	codec -> id		3912006						
ANR	3912216	Symbol	name		3912006						
ANR	3912217	Symbol	avcodec_find_encoder_by_name		3912006						
ANR	3912218	Symbol	CODEC_CAP_EXPERIMENTAL		3912006						
ANR	3912219	Symbol	avcodec_find_decoder_by_name		3912006						
ANR	3912220	Symbol	strict		3912006						
ANR	3912221	Symbol	codec_string		3912006						
