command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8911989	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc2_encode_init_1.c								
ANR	8911990	Function	vc2_encode_init	1:0:0:6000							
ANR	8911991	FunctionDef	vc2_encode_init (AVCodecContext * avctx)		8911990	0					
ANR	8911992	CompoundStatement		3:0:59:6000	8911990	0					
ANR	8911993	IdentifierDeclStatement	Plane * p ;	5:4:66:74	8911990	0	True				
ANR	8911994	IdentifierDecl	* p		8911990	0					
ANR	8911995	IdentifierDeclType	Plane *		8911990	0					
ANR	8911996	Identifier	p		8911990	1					
ANR	8911997	IdentifierDeclStatement	SubBand * b ;	7:4:81:91	8911990	1	True				
ANR	8911998	IdentifierDecl	* b		8911990	0					
ANR	8911999	IdentifierDeclType	SubBand *		8911990	0					
ANR	8912000	Identifier	b		8911990	1					
ANR	8912001	IdentifierDeclStatement	"int i , j , level , o , shift , ret ;"	9:4:98:128	8911990	2	True				
ANR	8912002	IdentifierDecl	i		8911990	0					
ANR	8912003	IdentifierDeclType	int		8911990	0					
ANR	8912004	Identifier	i		8911990	1					
ANR	8912005	IdentifierDecl	j		8911990	1					
ANR	8912006	IdentifierDeclType	int		8911990	0					
ANR	8912007	Identifier	j		8911990	1					
ANR	8912008	IdentifierDecl	level		8911990	2					
ANR	8912009	IdentifierDeclType	int		8911990	0					
ANR	8912010	Identifier	level		8911990	1					
ANR	8912011	IdentifierDecl	o		8911990	3					
ANR	8912012	IdentifierDeclType	int		8911990	0					
ANR	8912013	Identifier	o		8911990	1					
ANR	8912014	IdentifierDecl	shift		8911990	4					
ANR	8912015	IdentifierDeclType	int		8911990	0					
ANR	8912016	Identifier	shift		8911990	1					
ANR	8912017	IdentifierDecl	ret		8911990	5					
ANR	8912018	IdentifierDeclType	int		8911990	0					
ANR	8912019	Identifier	ret		8911990	1					
ANR	8912020	IdentifierDeclStatement	const AVPixFmtDescriptor * fmt = av_pix_fmt_desc_get ( avctx -> pix_fmt ) ;	11:4:135:202	8911990	3	True				
ANR	8912021	IdentifierDecl	* fmt = av_pix_fmt_desc_get ( avctx -> pix_fmt )		8911990	0					
ANR	8912022	IdentifierDeclType	const AVPixFmtDescriptor *		8911990	0					
ANR	8912023	Identifier	fmt		8911990	1					
ANR	8912024	AssignmentExpression	* fmt = av_pix_fmt_desc_get ( avctx -> pix_fmt )		8911990	2		=			
ANR	8912025	Identifier	fmt		8911990	0					
ANR	8912026	CallExpression	av_pix_fmt_desc_get ( avctx -> pix_fmt )		8911990	1					
ANR	8912027	Callee	av_pix_fmt_desc_get		8911990	0					
ANR	8912028	Identifier	av_pix_fmt_desc_get		8911990	0					
ANR	8912029	ArgumentList	avctx -> pix_fmt		8911990	1					
ANR	8912030	Argument	avctx -> pix_fmt		8911990	0					
ANR	8912031	PtrMemberAccess	avctx -> pix_fmt		8911990	0					
ANR	8912032	Identifier	avctx		8911990	0					
ANR	8912033	Identifier	pix_fmt		8911990	1					
ANR	8912034	IdentifierDeclStatement	const int depth = fmt -> comp [ 0 ] . depth ;	13:4:209:245	8911990	4	True				
ANR	8912035	IdentifierDecl	depth = fmt -> comp [ 0 ] . depth		8911990	0					
ANR	8912036	IdentifierDeclType	const int		8911990	0					
ANR	8912037	Identifier	depth		8911990	1					
ANR	8912038	AssignmentExpression	depth = fmt -> comp [ 0 ] . depth		8911990	2		=			
ANR	8912039	Identifier	depth		8911990	0					
ANR	8912040	MemberAccess	fmt -> comp [ 0 ] . depth		8911990	1					
ANR	8912041	ArrayIndexing	fmt -> comp [ 0 ]		8911990	0					
ANR	8912042	PtrMemberAccess	fmt -> comp		8911990	0					
ANR	8912043	Identifier	fmt		8911990	0					
ANR	8912044	Identifier	comp		8911990	1					
ANR	8912045	PrimaryExpression	0		8911990	1					
ANR	8912046	Identifier	depth		8911990	1					
ANR	8912047	IdentifierDeclStatement	VC2EncContext * s = avctx -> priv_data ;	15:4:252:287	8911990	5	True				
ANR	8912048	IdentifierDecl	* s = avctx -> priv_data		8911990	0					
ANR	8912049	IdentifierDeclType	VC2EncContext *		8911990	0					
ANR	8912050	Identifier	s		8911990	1					
ANR	8912051	AssignmentExpression	* s = avctx -> priv_data		8911990	2		=			
ANR	8912052	Identifier	s		8911990	0					
ANR	8912053	PtrMemberAccess	avctx -> priv_data		8911990	1					
ANR	8912054	Identifier	avctx		8911990	0					
ANR	8912055	Identifier	priv_data		8911990	1					
ANR	8912056	ExpressionStatement	s -> picture_number = 0	19:4:296:317	8911990	6	True				
ANR	8912057	AssignmentExpression	s -> picture_number = 0		8911990	0		=			
ANR	8912058	PtrMemberAccess	s -> picture_number		8911990	0					
ANR	8912059	Identifier	s		8911990	0					
ANR	8912060	Identifier	picture_number		8911990	1					
ANR	8912061	PrimaryExpression	0		8911990	1					
ANR	8912062	ExpressionStatement	s -> q_ceil = DIRAC_MAX_QUANT_INDEX	25:4:370:406	8911990	7	True				
ANR	8912063	AssignmentExpression	s -> q_ceil = DIRAC_MAX_QUANT_INDEX		8911990	0		=			
ANR	8912064	PtrMemberAccess	s -> q_ceil		8911990	0					
ANR	8912065	Identifier	s		8911990	0					
ANR	8912066	Identifier	q_ceil		8911990	1					
ANR	8912067	Identifier	DIRAC_MAX_QUANT_INDEX		8911990	1					
ANR	8912068	ExpressionStatement	s -> ver . major = 2	29:4:415:431	8911990	8	True				
ANR	8912069	AssignmentExpression	s -> ver . major = 2		8911990	0		=			
ANR	8912070	MemberAccess	s -> ver . major		8911990	0					
ANR	8912071	PtrMemberAccess	s -> ver		8911990	0					
ANR	8912072	Identifier	s		8911990	0					
ANR	8912073	Identifier	ver		8911990	1					
ANR	8912074	Identifier	major		8911990	1					
ANR	8912075	PrimaryExpression	2		8911990	1					
ANR	8912076	ExpressionStatement	s -> ver . minor = 0	31:4:438:454	8911990	9	True				
ANR	8912077	AssignmentExpression	s -> ver . minor = 0		8911990	0		=			
ANR	8912078	MemberAccess	s -> ver . minor		8911990	0					
ANR	8912079	PtrMemberAccess	s -> ver		8911990	0					
ANR	8912080	Identifier	s		8911990	0					
ANR	8912081	Identifier	ver		8911990	1					
ANR	8912082	Identifier	minor		8911990	1					
ANR	8912083	PrimaryExpression	0		8911990	1					
ANR	8912084	ExpressionStatement	s -> profile = 3	33:4:461:477	8911990	10	True				
ANR	8912085	AssignmentExpression	s -> profile = 3		8911990	0		=			
ANR	8912086	PtrMemberAccess	s -> profile		8911990	0					
ANR	8912087	Identifier	s		8911990	0					
ANR	8912088	Identifier	profile		8911990	1					
ANR	8912089	PrimaryExpression	3		8911990	1					
ANR	8912090	ExpressionStatement	s -> level = 3	35:4:484:500	8911990	11	True				
ANR	8912091	AssignmentExpression	s -> level = 3		8911990	0		=			
ANR	8912092	PtrMemberAccess	s -> level		8911990	0					
ANR	8912093	Identifier	s		8911990	0					
ANR	8912094	Identifier	level		8911990	1					
ANR	8912095	PrimaryExpression	3		8911990	1					
ANR	8912096	ExpressionStatement	s -> base_vf = - 1	39:4:509:526	8911990	12	True				
ANR	8912097	AssignmentExpression	s -> base_vf = - 1		8911990	0		=			
ANR	8912098	PtrMemberAccess	s -> base_vf		8911990	0					
ANR	8912099	Identifier	s		8911990	0					
ANR	8912100	Identifier	base_vf		8911990	1					
ANR	8912101	UnaryOperationExpression	- 1		8911990	1					
ANR	8912102	UnaryOperator	-		8911990	0					
ANR	8912103	PrimaryExpression	1		8911990	1					
ANR	8912104	ExpressionStatement	s -> strict_compliance = 1	41:4:533:557	8911990	13	True				
ANR	8912105	AssignmentExpression	s -> strict_compliance = 1		8911990	0		=			
ANR	8912106	PtrMemberAccess	s -> strict_compliance		8911990	0					
ANR	8912107	Identifier	s		8911990	0					
ANR	8912108	Identifier	strict_compliance		8911990	1					
ANR	8912109	PrimaryExpression	1		8911990	1					
ANR	8912110	ExpressionStatement	s -> q_avg = 0	45:4:566:578	8911990	14	True				
ANR	8912111	AssignmentExpression	s -> q_avg = 0		8911990	0		=			
ANR	8912112	PtrMemberAccess	s -> q_avg		8911990	0					
ANR	8912113	Identifier	s		8911990	0					
ANR	8912114	Identifier	q_avg		8911990	1					
ANR	8912115	PrimaryExpression	0		8911990	1					
ANR	8912116	ExpressionStatement	s -> slice_max_bytes = 0	47:4:585:607	8911990	15	True				
ANR	8912117	AssignmentExpression	s -> slice_max_bytes = 0		8911990	0		=			
ANR	8912118	PtrMemberAccess	s -> slice_max_bytes		8911990	0					
ANR	8912119	Identifier	s		8911990	0					
ANR	8912120	Identifier	slice_max_bytes		8911990	1					
ANR	8912121	PrimaryExpression	0		8911990	1					
ANR	8912122	ExpressionStatement	s -> slice_min_bytes = 0	49:4:614:636	8911990	16	True				
ANR	8912123	AssignmentExpression	s -> slice_min_bytes = 0		8911990	0		=			
ANR	8912124	PtrMemberAccess	s -> slice_min_bytes		8911990	0					
ANR	8912125	Identifier	s		8911990	0					
ANR	8912126	Identifier	slice_min_bytes		8911990	1					
ANR	8912127	PrimaryExpression	0		8911990	1					
ANR	8912128	ExpressionStatement	s -> interlaced = ! ( ( avctx -> field_order == AV_FIELD_UNKNOWN ) || ( avctx -> field_order == AV_FIELD_PROGRESSIVE ) )	55:4:684:814	8911990	17	True				
ANR	8912129	AssignmentExpression	s -> interlaced = ! ( ( avctx -> field_order == AV_FIELD_UNKNOWN ) || ( avctx -> field_order == AV_FIELD_PROGRESSIVE ) )		8911990	0		=			
ANR	8912130	PtrMemberAccess	s -> interlaced		8911990	0					
ANR	8912131	Identifier	s		8911990	0					
ANR	8912132	Identifier	interlaced		8911990	1					
ANR	8912133	UnaryOperationExpression	! ( ( avctx -> field_order == AV_FIELD_UNKNOWN ) || ( avctx -> field_order == AV_FIELD_PROGRESSIVE ) )		8911990	1					
ANR	8912134	UnaryOperator	!		8911990	0					
ANR	8912135	OrExpression	( avctx -> field_order == AV_FIELD_UNKNOWN ) || ( avctx -> field_order == AV_FIELD_PROGRESSIVE )		8911990	1		||			
ANR	8912136	EqualityExpression	avctx -> field_order == AV_FIELD_UNKNOWN		8911990	0		==			
ANR	8912137	PtrMemberAccess	avctx -> field_order		8911990	0					
ANR	8912138	Identifier	avctx		8911990	0					
ANR	8912139	Identifier	field_order		8911990	1					
ANR	8912140	Identifier	AV_FIELD_UNKNOWN		8911990	1					
ANR	8912141	EqualityExpression	avctx -> field_order == AV_FIELD_PROGRESSIVE		8911990	1		==			
ANR	8912142	PtrMemberAccess	avctx -> field_order		8911990	0					
ANR	8912143	Identifier	avctx		8911990	0					
ANR	8912144	Identifier	field_order		8911990	1					
ANR	8912145	Identifier	AV_FIELD_PROGRESSIVE		8911990	1					
ANR	8912146	ForStatement	for ( i = 0 ; i < base_video_fmts_len ; i ++ )		8911990	18					
ANR	8912147	ForInit	i = 0 ;	61:9:828:833	8911990	0	True				
ANR	8912148	AssignmentExpression	i = 0		8911990	0		=			
ANR	8912149	Identifier	i		8911990	0					
ANR	8912150	PrimaryExpression	0		8911990	1					
ANR	8912151	Condition	i < base_video_fmts_len	61:16:835:857	8911990	1	True				
ANR	8912152	RelationalExpression	i < base_video_fmts_len		8911990	0		<			
ANR	8912153	Identifier	i		8911990	0					
ANR	8912154	Identifier	base_video_fmts_len		8911990	1					
ANR	8912155	PostIncDecOperationExpression	i ++	61:41:860:862	8911990	2	True				
ANR	8912156	Identifier	i		8911990	0					
ANR	8912157	IncDec	++		8911990	1					
ANR	8912158	CompoundStatement		61:8:816:867	8911990	3					
ANR	8912159	IdentifierDeclStatement	const VC2BaseVideoFormat * fmt = & base_video_fmts [ i ] ;	63:8:876:927	8911990	0	True				
ANR	8912160	IdentifierDecl	* fmt = & base_video_fmts [ i ]		8911990	0					
ANR	8912161	IdentifierDeclType	const VC2BaseVideoFormat *		8911990	0					
ANR	8912162	Identifier	fmt		8911990	1					
ANR	8912163	AssignmentExpression	* fmt = & base_video_fmts [ i ]		8911990	2		=			
ANR	8912164	Identifier	fmt		8911990	0					
ANR	8912165	UnaryOperationExpression	& base_video_fmts [ i ]		8911990	1					
ANR	8912166	UnaryOperator	&		8911990	0					
ANR	8912167	ArrayIndexing	base_video_fmts [ i ]		8911990	1					
ANR	8912168	Identifier	base_video_fmts		8911990	0					
ANR	8912169	Identifier	i		8911990	1					
ANR	8912170	IfStatement	if ( avctx -> pix_fmt != fmt -> pix_fmt )		8911990	1					
ANR	8912171	Condition	avctx -> pix_fmt != fmt -> pix_fmt	65:12:942:971	8911990	0	True				
ANR	8912172	EqualityExpression	avctx -> pix_fmt != fmt -> pix_fmt		8911990	0		!=			
ANR	8912173	PtrMemberAccess	avctx -> pix_fmt		8911990	0					
ANR	8912174	Identifier	avctx		8911990	0					
ANR	8912175	Identifier	pix_fmt		8911990	1					
ANR	8912176	PtrMemberAccess	fmt -> pix_fmt		8911990	1					
ANR	8912177	Identifier	fmt		8911990	0					
ANR	8912178	Identifier	pix_fmt		8911990	1					
ANR	8912179	ContinueStatement	continue ;	67:12:987:995	8911990	1	True				
ANR	8912180	IfStatement	if ( avctx -> time_base . num != fmt -> time_base . num )		8911990	2					
ANR	8912181	Condition	avctx -> time_base . num != fmt -> time_base . num	69:12:1010:1051	8911990	0	True				
ANR	8912182	EqualityExpression	avctx -> time_base . num != fmt -> time_base . num		8911990	0		!=			
ANR	8912183	MemberAccess	avctx -> time_base . num		8911990	0					
ANR	8912184	PtrMemberAccess	avctx -> time_base		8911990	0					
ANR	8912185	Identifier	avctx		8911990	0					
ANR	8912186	Identifier	time_base		8911990	1					
ANR	8912187	Identifier	num		8911990	1					
ANR	8912188	MemberAccess	fmt -> time_base . num		8911990	1					
ANR	8912189	PtrMemberAccess	fmt -> time_base		8911990	0					
ANR	8912190	Identifier	fmt		8911990	0					
ANR	8912191	Identifier	time_base		8911990	1					
ANR	8912192	Identifier	num		8911990	1					
ANR	8912193	ContinueStatement	continue ;	71:12:1067:1075	8911990	1	True				
ANR	8912194	IfStatement	if ( avctx -> time_base . den != fmt -> time_base . den )		8911990	3					
ANR	8912195	Condition	avctx -> time_base . den != fmt -> time_base . den	73:12:1090:1131	8911990	0	True				
ANR	8912196	EqualityExpression	avctx -> time_base . den != fmt -> time_base . den		8911990	0		!=			
ANR	8912197	MemberAccess	avctx -> time_base . den		8911990	0					
ANR	8912198	PtrMemberAccess	avctx -> time_base		8911990	0					
ANR	8912199	Identifier	avctx		8911990	0					
ANR	8912200	Identifier	time_base		8911990	1					
ANR	8912201	Identifier	den		8911990	1					
ANR	8912202	MemberAccess	fmt -> time_base . den		8911990	1					
ANR	8912203	PtrMemberAccess	fmt -> time_base		8911990	0					
ANR	8912204	Identifier	fmt		8911990	0					
ANR	8912205	Identifier	time_base		8911990	1					
ANR	8912206	Identifier	den		8911990	1					
ANR	8912207	ContinueStatement	continue ;	75:12:1147:1155	8911990	1	True				
ANR	8912208	IfStatement	if ( avctx -> width != fmt -> width )		8911990	4					
ANR	8912209	Condition	avctx -> width != fmt -> width	77:12:1170:1195	8911990	0	True				
ANR	8912210	EqualityExpression	avctx -> width != fmt -> width		8911990	0		!=			
ANR	8912211	PtrMemberAccess	avctx -> width		8911990	0					
ANR	8912212	Identifier	avctx		8911990	0					
ANR	8912213	Identifier	width		8911990	1					
ANR	8912214	PtrMemberAccess	fmt -> width		8911990	1					
ANR	8912215	Identifier	fmt		8911990	0					
ANR	8912216	Identifier	width		8911990	1					
ANR	8912217	ContinueStatement	continue ;	79:12:1211:1219	8911990	1	True				
ANR	8912218	IfStatement	if ( avctx -> height != fmt -> height )		8911990	5					
ANR	8912219	Condition	avctx -> height != fmt -> height	81:12:1234:1261	8911990	0	True				
ANR	8912220	EqualityExpression	avctx -> height != fmt -> height		8911990	0		!=			
ANR	8912221	PtrMemberAccess	avctx -> height		8911990	0					
ANR	8912222	Identifier	avctx		8911990	0					
ANR	8912223	Identifier	height		8911990	1					
ANR	8912224	PtrMemberAccess	fmt -> height		8911990	1					
ANR	8912225	Identifier	fmt		8911990	0					
ANR	8912226	Identifier	height		8911990	1					
ANR	8912227	ContinueStatement	continue ;	83:12:1277:1285	8911990	1	True				
ANR	8912228	IfStatement	if ( s -> interlaced != fmt -> interlaced )		8911990	6					
ANR	8912229	Condition	s -> interlaced != fmt -> interlaced	85:12:1300:1331	8911990	0	True				
ANR	8912230	EqualityExpression	s -> interlaced != fmt -> interlaced		8911990	0		!=			
ANR	8912231	PtrMemberAccess	s -> interlaced		8911990	0					
ANR	8912232	Identifier	s		8911990	0					
ANR	8912233	Identifier	interlaced		8911990	1					
ANR	8912234	PtrMemberAccess	fmt -> interlaced		8911990	1					
ANR	8912235	Identifier	fmt		8911990	0					
ANR	8912236	Identifier	interlaced		8911990	1					
ANR	8912237	ContinueStatement	continue ;	87:12:1347:1355	8911990	1	True				
ANR	8912238	ExpressionStatement	s -> base_vf = i	89:8:1366:1380	8911990	7	True				
ANR	8912239	AssignmentExpression	s -> base_vf = i		8911990	0		=			
ANR	8912240	PtrMemberAccess	s -> base_vf		8911990	0					
ANR	8912241	Identifier	s		8911990	0					
ANR	8912242	Identifier	base_vf		8911990	1					
ANR	8912243	Identifier	i		8911990	1					
ANR	8912244	ExpressionStatement	s -> level = base_video_fmts [ i ] . level	91:8:1391:1428	8911990	8	True				
ANR	8912245	AssignmentExpression	s -> level = base_video_fmts [ i ] . level		8911990	0		=			
ANR	8912246	PtrMemberAccess	s -> level		8911990	0					
ANR	8912247	Identifier	s		8911990	0					
ANR	8912248	Identifier	level		8911990	1					
ANR	8912249	MemberAccess	base_video_fmts [ i ] . level		8911990	1					
ANR	8912250	ArrayIndexing	base_video_fmts [ i ]		8911990	0					
ANR	8912251	Identifier	base_video_fmts		8911990	0					
ANR	8912252	Identifier	i		8911990	1					
ANR	8912253	Identifier	level		8911990	1					
ANR	8912254	BreakStatement	break ;	93:8:1439:1444	8911990	9	True				
ANR	8912255	IfStatement	if ( s -> interlaced )		8911990	19					
ANR	8912256	Condition	s -> interlaced	99:8:1464:1476	8911990	0	True				
ANR	8912257	PtrMemberAccess	s -> interlaced		8911990	0					
ANR	8912258	Identifier	s		8911990	0					
ANR	8912259	Identifier	interlaced		8911990	1					
ANR	8912260	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Interlacing enabled!\\n"" )"	101:8:1488:1543	8911990	1	True				
ANR	8912261	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Interlacing enabled!\\n"" )"		8911990	0					
ANR	8912262	Callee	av_log		8911990	0					
ANR	8912263	Identifier	av_log		8911990	0					
ANR	8912264	ArgumentList	avctx		8911990	1					
ANR	8912265	Argument	avctx		8911990	0					
ANR	8912266	Identifier	avctx		8911990	0					
ANR	8912267	Argument	AV_LOG_WARNING		8911990	1					
ANR	8912268	Identifier	AV_LOG_WARNING		8911990	0					
ANR	8912269	Argument	"""Interlacing enabled!\\n"""		8911990	2					
ANR	8912270	PrimaryExpression	"""Interlacing enabled!\\n"""		8911990	0					
ANR	8912271	IfStatement	if ( ( s -> slice_width & ( s -> slice_width - 1 ) ) || ( s -> slice_height & ( s -> slice_height - 1 ) ) )		8911990	20					
ANR	8912272	Condition	( s -> slice_width & ( s -> slice_width - 1 ) ) || ( s -> slice_height & ( s -> slice_height - 1 ) )	105:8:1556:1650	8911990	0	True				
ANR	8912273	OrExpression	( s -> slice_width & ( s -> slice_width - 1 ) ) || ( s -> slice_height & ( s -> slice_height - 1 ) )		8911990	0		||			
ANR	8912274	BitAndExpression	s -> slice_width & ( s -> slice_width - 1 )		8911990	0		&			
ANR	8912275	PtrMemberAccess	s -> slice_width		8911990	0					
ANR	8912276	Identifier	s		8911990	0					
ANR	8912277	Identifier	slice_width		8911990	1					
ANR	8912278	AdditiveExpression	s -> slice_width - 1		8911990	1		-			
ANR	8912279	PtrMemberAccess	s -> slice_width		8911990	0					
ANR	8912280	Identifier	s		8911990	0					
ANR	8912281	Identifier	slice_width		8911990	1					
ANR	8912282	PrimaryExpression	1		8911990	1					
ANR	8912283	BitAndExpression	s -> slice_height & ( s -> slice_height - 1 )		8911990	1		&			
ANR	8912284	PtrMemberAccess	s -> slice_height		8911990	0					
ANR	8912285	Identifier	s		8911990	0					
ANR	8912286	Identifier	slice_height		8911990	1					
ANR	8912287	AdditiveExpression	s -> slice_height - 1		8911990	1		-			
ANR	8912288	PtrMemberAccess	s -> slice_height		8911990	0					
ANR	8912289	Identifier	s		8911990	0					
ANR	8912290	Identifier	slice_height		8911990	1					
ANR	8912291	PrimaryExpression	1		8911990	1					
ANR	8912292	CompoundStatement		105:51:1593:1593	8911990	1					
ANR	8912293	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Slice size is not a power of two!\\n"" )"	109:8:1664:1730	8911990	0	True				
ANR	8912294	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Slice size is not a power of two!\\n"" )"		8911990	0					
ANR	8912295	Callee	av_log		8911990	0					
ANR	8912296	Identifier	av_log		8911990	0					
ANR	8912297	ArgumentList	avctx		8911990	1					
ANR	8912298	Argument	avctx		8911990	0					
ANR	8912299	Identifier	avctx		8911990	0					
ANR	8912300	Argument	AV_LOG_ERROR		8911990	1					
ANR	8912301	Identifier	AV_LOG_ERROR		8911990	0					
ANR	8912302	Argument	"""Slice size is not a power of two!\\n"""		8911990	2					
ANR	8912303	PrimaryExpression	"""Slice size is not a power of two!\\n"""		8911990	0					
ANR	8912304	ReturnStatement	return AVERROR_UNKNOWN ;	111:8:1741:1763	8911990	1	True				
ANR	8912305	Identifier	AVERROR_UNKNOWN		8911990	0					
ANR	8912306	IfStatement	if ( ( s -> slice_width > avctx -> width ) || ( s -> slice_height > avctx -> height ) )		8911990	21					
ANR	8912307	Condition	( s -> slice_width > avctx -> width ) || ( s -> slice_height > avctx -> height )	117:8:1783:1859	8911990	0	True				
ANR	8912308	OrExpression	( s -> slice_width > avctx -> width ) || ( s -> slice_height > avctx -> height )		8911990	0		||			
ANR	8912309	RelationalExpression	s -> slice_width > avctx -> width		8911990	0		>			
ANR	8912310	PtrMemberAccess	s -> slice_width		8911990	0					
ANR	8912311	Identifier	s		8911990	0					
ANR	8912312	Identifier	slice_width		8911990	1					
ANR	8912313	PtrMemberAccess	avctx -> width		8911990	1					
ANR	8912314	Identifier	avctx		8911990	0					
ANR	8912315	Identifier	width		8911990	1					
ANR	8912316	RelationalExpression	s -> slice_height > avctx -> height		8911990	1		>			
ANR	8912317	PtrMemberAccess	s -> slice_height		8911990	0					
ANR	8912318	Identifier	s		8911990	0					
ANR	8912319	Identifier	slice_height		8911990	1					
ANR	8912320	PtrMemberAccess	avctx -> height		8911990	1					
ANR	8912321	Identifier	avctx		8911990	0					
ANR	8912322	Identifier	height		8911990	1					
ANR	8912323	CompoundStatement		117:43:1802:1802	8911990	1					
ANR	8912324	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Slice size is bigger than the image!\\n"" )"	121:8:1873:1942	8911990	0	True				
ANR	8912325	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Slice size is bigger than the image!\\n"" )"		8911990	0					
ANR	8912326	Callee	av_log		8911990	0					
ANR	8912327	Identifier	av_log		8911990	0					
ANR	8912328	ArgumentList	avctx		8911990	1					
ANR	8912329	Argument	avctx		8911990	0					
ANR	8912330	Identifier	avctx		8911990	0					
ANR	8912331	Argument	AV_LOG_ERROR		8911990	1					
ANR	8912332	Identifier	AV_LOG_ERROR		8911990	0					
ANR	8912333	Argument	"""Slice size is bigger than the image!\\n"""		8911990	2					
ANR	8912334	PrimaryExpression	"""Slice size is bigger than the image!\\n"""		8911990	0					
ANR	8912335	ReturnStatement	return AVERROR_UNKNOWN ;	123:8:1953:1975	8911990	1	True				
ANR	8912336	Identifier	AVERROR_UNKNOWN		8911990	0					
ANR	8912337	IfStatement	if ( s -> base_vf <= 0 )		8911990	22					
ANR	8912338	Condition	s -> base_vf <= 0	129:8:1995:2009	8911990	0	True				
ANR	8912339	RelationalExpression	s -> base_vf <= 0		8911990	0		<=			
ANR	8912340	PtrMemberAccess	s -> base_vf		8911990	0					
ANR	8912341	Identifier	s		8911990	0					
ANR	8912342	Identifier	base_vf		8911990	1					
ANR	8912343	PrimaryExpression	0		8911990	1					
ANR	8912344	CompoundStatement		127:25:1952:1952	8911990	1					
ANR	8912345	IfStatement	if ( avctx -> strict_std_compliance < FF_COMPLIANCE_STRICT )		8911990	0					
ANR	8912346	Condition	avctx -> strict_std_compliance < FF_COMPLIANCE_STRICT	131:12:2027:2077	8911990	0	True				
ANR	8912347	RelationalExpression	avctx -> strict_std_compliance < FF_COMPLIANCE_STRICT		8911990	0		<			
ANR	8912348	PtrMemberAccess	avctx -> strict_std_compliance		8911990	0					
ANR	8912349	Identifier	avctx		8911990	0					
ANR	8912350	Identifier	strict_std_compliance		8911990	1					
ANR	8912351	Identifier	FF_COMPLIANCE_STRICT		8911990	1					
ANR	8912352	CompoundStatement		129:65:2020:2020	8911990	1					
ANR	8912353	ExpressionStatement	s -> strict_compliance = s -> base_vf = 0	133:12:2095:2132	8911990	0	True				
ANR	8912354	AssignmentExpression	s -> strict_compliance = s -> base_vf = 0		8911990	0		=			
ANR	8912355	PtrMemberAccess	s -> strict_compliance		8911990	0					
ANR	8912356	Identifier	s		8911990	0					
ANR	8912357	Identifier	strict_compliance		8911990	1					
ANR	8912358	AssignmentExpression	s -> base_vf = 0		8911990	1		=			
ANR	8912359	PtrMemberAccess	s -> base_vf		8911990	0					
ANR	8912360	Identifier	s		8911990	0					
ANR	8912361	Identifier	base_vf		8911990	1					
ANR	8912362	PrimaryExpression	0		8911990	1					
ANR	8912363	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Format does not strictly comply with VC2 specs\\n"" )"	135:12:2147:2228	8911990	1	True				
ANR	8912364	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Format does not strictly comply with VC2 specs\\n"" )"		8911990	0					
ANR	8912365	Callee	av_log		8911990	0					
ANR	8912366	Identifier	av_log		8911990	0					
ANR	8912367	ArgumentList	avctx		8911990	1					
ANR	8912368	Argument	avctx		8911990	0					
ANR	8912369	Identifier	avctx		8911990	0					
ANR	8912370	Argument	AV_LOG_WARNING		8911990	1					
ANR	8912371	Identifier	AV_LOG_WARNING		8911990	0					
ANR	8912372	Argument	"""Format does not strictly comply with VC2 specs\\n"""		8911990	2					
ANR	8912373	PrimaryExpression	"""Format does not strictly comply with VC2 specs\\n"""		8911990	0					
ANR	8912374	ElseStatement	else		8911990	0					
ANR	8912375	CompoundStatement		135:15:2186:2186	8911990	0					
ANR	8912376	Statement	av_log	139:12:2261:2266	8911990	0	True				
ANR	8912377	Statement	(	139:18:2267:2267	8911990	1	True				
ANR	8912378	Statement	avctx	139:19:2268:2272	8911990	2	True				
ANR	8912379	Statement	","	139:24:2273:2273	8911990	3	True				
ANR	8912380	Statement	AV_LOG_WARNING	139:26:2275:2288	8911990	4	True				
ANR	8912381	Statement	","	139:40:2289:2289	8911990	5	True				
ANR	8912382	Statement	"""Given format does not strictly comply with """	139:42:2291:2335	8911990	6	True				
ANR	8912383	Statement	"""the specifications, decrease strictness to use it.\\n"""	141:19:2357:2410	8911990	7	True				
ANR	8912384	Statement	)	141:73:2411:2411	8911990	8	True				
ANR	8912385	ExpressionStatement		141:74:2412:2412	8911990	9	True				
ANR	8912386	ReturnStatement	return AVERROR_UNKNOWN ;	143:12:2427:2449	8911990	10	True				
ANR	8912387	Identifier	AVERROR_UNKNOWN		8911990	0					
ANR	8912388	ElseStatement	else		8911990	0					
ANR	8912389	CompoundStatement		145:11:2414:2414	8911990	0					
ANR	8912390	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""Selected base video format = %i (%s)\\n"" , s -> base_vf , base_video_fmts [ s -> base_vf ] . name )"	149:8:2485:2615	8911990	0	True				
ANR	8912391	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""Selected base video format = %i (%s)\\n"" , s -> base_vf , base_video_fmts [ s -> base_vf ] . name )"		8911990	0					
ANR	8912392	Callee	av_log		8911990	0					
ANR	8912393	Identifier	av_log		8911990	0					
ANR	8912394	ArgumentList	avctx		8911990	1					
ANR	8912395	Argument	avctx		8911990	0					
ANR	8912396	Identifier	avctx		8911990	0					
ANR	8912397	Argument	AV_LOG_INFO		8911990	1					
ANR	8912398	Identifier	AV_LOG_INFO		8911990	0					
ANR	8912399	Argument	"""Selected base video format = %i (%s)\\n"""		8911990	2					
ANR	8912400	PrimaryExpression	"""Selected base video format = %i (%s)\\n"""		8911990	0					
ANR	8912401	Argument	s -> base_vf		8911990	3					
ANR	8912402	PtrMemberAccess	s -> base_vf		8911990	0					
ANR	8912403	Identifier	s		8911990	0					
ANR	8912404	Identifier	base_vf		8911990	1					
ANR	8912405	Argument	base_video_fmts [ s -> base_vf ] . name		8911990	4					
ANR	8912406	MemberAccess	base_video_fmts [ s -> base_vf ] . name		8911990	0					
ANR	8912407	ArrayIndexing	base_video_fmts [ s -> base_vf ]		8911990	0					
ANR	8912408	Identifier	base_video_fmts		8911990	0					
ANR	8912409	PtrMemberAccess	s -> base_vf		8911990	1					
ANR	8912410	Identifier	s		8911990	0					
ANR	8912411	Identifier	base_vf		8911990	1					
ANR	8912412	Identifier	name		8911990	1					
ANR	8912413	ExpressionStatement	"ret = av_pix_fmt_get_chroma_sub_sample ( avctx -> pix_fmt , & s -> chroma_x_shift , & s -> chroma_y_shift )"	159:4:2661:2755	8911990	23	True				
ANR	8912414	AssignmentExpression	"ret = av_pix_fmt_get_chroma_sub_sample ( avctx -> pix_fmt , & s -> chroma_x_shift , & s -> chroma_y_shift )"		8911990	0		=			
ANR	8912415	Identifier	ret		8911990	0					
ANR	8912416	CallExpression	"av_pix_fmt_get_chroma_sub_sample ( avctx -> pix_fmt , & s -> chroma_x_shift , & s -> chroma_y_shift )"		8911990	1					
ANR	8912417	Callee	av_pix_fmt_get_chroma_sub_sample		8911990	0					
ANR	8912418	Identifier	av_pix_fmt_get_chroma_sub_sample		8911990	0					
ANR	8912419	ArgumentList	avctx -> pix_fmt		8911990	1					
ANR	8912420	Argument	avctx -> pix_fmt		8911990	0					
ANR	8912421	PtrMemberAccess	avctx -> pix_fmt		8911990	0					
ANR	8912422	Identifier	avctx		8911990	0					
ANR	8912423	Identifier	pix_fmt		8911990	1					
ANR	8912424	Argument	& s -> chroma_x_shift		8911990	1					
ANR	8912425	UnaryOperationExpression	& s -> chroma_x_shift		8911990	0					
ANR	8912426	UnaryOperator	&		8911990	0					
ANR	8912427	PtrMemberAccess	s -> chroma_x_shift		8911990	1					
ANR	8912428	Identifier	s		8911990	0					
ANR	8912429	Identifier	chroma_x_shift		8911990	1					
ANR	8912430	Argument	& s -> chroma_y_shift		8911990	2					
ANR	8912431	UnaryOperationExpression	& s -> chroma_y_shift		8911990	0					
ANR	8912432	UnaryOperator	&		8911990	0					
ANR	8912433	PtrMemberAccess	s -> chroma_y_shift		8911990	1					
ANR	8912434	Identifier	s		8911990	0					
ANR	8912435	Identifier	chroma_y_shift		8911990	1					
ANR	8912436	IfStatement	if ( ret )		8911990	24					
ANR	8912437	Condition	ret	161:8:2766:2768	8911990	0	True				
ANR	8912438	Identifier	ret		8911990	0					
ANR	8912439	ReturnStatement	return ret ;	163:8:2780:2790	8911990	1	True				
ANR	8912440	Identifier	ret		8911990	0					
ANR	8912441	IfStatement	if ( depth == 8 && avctx -> color_range == AVCOL_RANGE_JPEG )		8911990	25					
ANR	8912442	Condition	depth == 8 && avctx -> color_range == AVCOL_RANGE_JPEG	169:8:2846:2897	8911990	0	True				
ANR	8912443	AndExpression	depth == 8 && avctx -> color_range == AVCOL_RANGE_JPEG		8911990	0		&&			
ANR	8912444	EqualityExpression	depth == 8		8911990	0		==			
ANR	8912445	Identifier	depth		8911990	0					
ANR	8912446	PrimaryExpression	8		8911990	1					
ANR	8912447	EqualityExpression	avctx -> color_range == AVCOL_RANGE_JPEG		8911990	1		==			
ANR	8912448	PtrMemberAccess	avctx -> color_range		8911990	0					
ANR	8912449	Identifier	avctx		8911990	0					
ANR	8912450	Identifier	color_range		8911990	1					
ANR	8912451	Identifier	AVCOL_RANGE_JPEG		8911990	1					
ANR	8912452	CompoundStatement		167:62:2840:2840	8911990	1					
ANR	8912453	ExpressionStatement	s -> bpp = 1	171:8:2911:2921	8911990	0	True				
ANR	8912454	AssignmentExpression	s -> bpp = 1		8911990	0		=			
ANR	8912455	PtrMemberAccess	s -> bpp		8911990	0					
ANR	8912456	Identifier	s		8911990	0					
ANR	8912457	Identifier	bpp		8911990	1					
ANR	8912458	PrimaryExpression	1		8911990	1					
ANR	8912459	ExpressionStatement	s -> bpp_idx = 1	173:8:2932:2946	8911990	1	True				
ANR	8912460	AssignmentExpression	s -> bpp_idx = 1		8911990	0		=			
ANR	8912461	PtrMemberAccess	s -> bpp_idx		8911990	0					
ANR	8912462	Identifier	s		8911990	0					
ANR	8912463	Identifier	bpp_idx		8911990	1					
ANR	8912464	PrimaryExpression	1		8911990	1					
ANR	8912465	ExpressionStatement	s -> diff_offset = 128	175:8:2957:2977	8911990	2	True				
ANR	8912466	AssignmentExpression	s -> diff_offset = 128		8911990	0		=			
ANR	8912467	PtrMemberAccess	s -> diff_offset		8911990	0					
ANR	8912468	Identifier	s		8911990	0					
ANR	8912469	Identifier	diff_offset		8911990	1					
ANR	8912470	PrimaryExpression	128		8911990	1					
ANR	8912471	ElseStatement	else		8911990	0					
ANR	8912472	IfStatement	if ( depth == 8 && ( avctx -> color_range == AVCOL_RANGE_MPEG || avctx -> color_range == AVCOL_RANGE_UNSPECIFIED ) )		8911990	0					
ANR	8912473	Condition	depth == 8 && ( avctx -> color_range == AVCOL_RANGE_MPEG || avctx -> color_range == AVCOL_RANGE_UNSPECIFIED )	177:15:2995:3113	8911990	0	True				
ANR	8912474	AndExpression	depth == 8 && ( avctx -> color_range == AVCOL_RANGE_MPEG || avctx -> color_range == AVCOL_RANGE_UNSPECIFIED )		8911990	0		&&			
ANR	8912475	EqualityExpression	depth == 8		8911990	0		==			
ANR	8912476	Identifier	depth		8911990	0					
ANR	8912477	PrimaryExpression	8		8911990	1					
ANR	8912478	OrExpression	avctx -> color_range == AVCOL_RANGE_MPEG || avctx -> color_range == AVCOL_RANGE_UNSPECIFIED		8911990	1		||			
ANR	8912479	EqualityExpression	avctx -> color_range == AVCOL_RANGE_MPEG		8911990	0		==			
ANR	8912480	PtrMemberAccess	avctx -> color_range		8911990	0					
ANR	8912481	Identifier	avctx		8911990	0					
ANR	8912482	Identifier	color_range		8911990	1					
ANR	8912483	Identifier	AVCOL_RANGE_MPEG		8911990	1					
ANR	8912484	EqualityExpression	avctx -> color_range == AVCOL_RANGE_UNSPECIFIED		8911990	1		==			
ANR	8912485	PtrMemberAccess	avctx -> color_range		8911990	0					
ANR	8912486	Identifier	avctx		8911990	0					
ANR	8912487	Identifier	color_range		8911990	1					
ANR	8912488	Identifier	AVCOL_RANGE_UNSPECIFIED		8911990	1					
ANR	8912489	CompoundStatement		177:63:3056:3056	8911990	1					
ANR	8912490	ExpressionStatement	s -> bpp = 1	181:8:3127:3137	8911990	0	True				
ANR	8912491	AssignmentExpression	s -> bpp = 1		8911990	0		=			
ANR	8912492	PtrMemberAccess	s -> bpp		8911990	0					
ANR	8912493	Identifier	s		8911990	0					
ANR	8912494	Identifier	bpp		8911990	1					
ANR	8912495	PrimaryExpression	1		8911990	1					
ANR	8912496	ExpressionStatement	s -> bpp_idx = 2	183:8:3148:3162	8911990	1	True				
ANR	8912497	AssignmentExpression	s -> bpp_idx = 2		8911990	0		=			
ANR	8912498	PtrMemberAccess	s -> bpp_idx		8911990	0					
ANR	8912499	Identifier	s		8911990	0					
ANR	8912500	Identifier	bpp_idx		8911990	1					
ANR	8912501	PrimaryExpression	2		8911990	1					
ANR	8912502	ExpressionStatement	s -> diff_offset = 128	185:8:3173:3193	8911990	2	True				
ANR	8912503	AssignmentExpression	s -> diff_offset = 128		8911990	0		=			
ANR	8912504	PtrMemberAccess	s -> diff_offset		8911990	0					
ANR	8912505	Identifier	s		8911990	0					
ANR	8912506	Identifier	diff_offset		8911990	1					
ANR	8912507	PrimaryExpression	128		8911990	1					
ANR	8912508	ElseStatement	else		8911990	0					
ANR	8912509	IfStatement	if ( depth == 10 )		8911990	0					
ANR	8912510	Condition	depth == 10	187:15:3211:3221	8911990	0	True				
ANR	8912511	EqualityExpression	depth == 10		8911990	0		==			
ANR	8912512	Identifier	depth		8911990	0					
ANR	8912513	PrimaryExpression	10		8911990	1					
ANR	8912514	CompoundStatement		185:28:3164:3164	8911990	1					
ANR	8912515	ExpressionStatement	s -> bpp = 2	189:8:3235:3245	8911990	0	True				
ANR	8912516	AssignmentExpression	s -> bpp = 2		8911990	0		=			
ANR	8912517	PtrMemberAccess	s -> bpp		8911990	0					
ANR	8912518	Identifier	s		8911990	0					
ANR	8912519	Identifier	bpp		8911990	1					
ANR	8912520	PrimaryExpression	2		8911990	1					
ANR	8912521	ExpressionStatement	s -> bpp_idx = 3	191:8:3256:3270	8911990	1	True				
ANR	8912522	AssignmentExpression	s -> bpp_idx = 3		8911990	0		=			
ANR	8912523	PtrMemberAccess	s -> bpp_idx		8911990	0					
ANR	8912524	Identifier	s		8911990	0					
ANR	8912525	Identifier	bpp_idx		8911990	1					
ANR	8912526	PrimaryExpression	3		8911990	1					
ANR	8912527	ExpressionStatement	s -> diff_offset = 512	193:8:3281:3301	8911990	2	True				
ANR	8912528	AssignmentExpression	s -> diff_offset = 512		8911990	0		=			
ANR	8912529	PtrMemberAccess	s -> diff_offset		8911990	0					
ANR	8912530	Identifier	s		8911990	0					
ANR	8912531	Identifier	diff_offset		8911990	1					
ANR	8912532	PrimaryExpression	512		8911990	1					
ANR	8912533	ElseStatement	else		8911990	0					
ANR	8912534	CompoundStatement		193:11:3255:3255	8911990	0					
ANR	8912535	ExpressionStatement	s -> bpp = 2	197:8:3326:3336	8911990	0	True				
ANR	8912536	AssignmentExpression	s -> bpp = 2		8911990	0		=			
ANR	8912537	PtrMemberAccess	s -> bpp		8911990	0					
ANR	8912538	Identifier	s		8911990	0					
ANR	8912539	Identifier	bpp		8911990	1					
ANR	8912540	PrimaryExpression	2		8911990	1					
ANR	8912541	ExpressionStatement	s -> bpp_idx = 4	199:8:3347:3361	8911990	1	True				
ANR	8912542	AssignmentExpression	s -> bpp_idx = 4		8911990	0		=			
ANR	8912543	PtrMemberAccess	s -> bpp_idx		8911990	0					
ANR	8912544	Identifier	s		8911990	0					
ANR	8912545	Identifier	bpp_idx		8911990	1					
ANR	8912546	PrimaryExpression	4		8911990	1					
ANR	8912547	ExpressionStatement	s -> diff_offset = 2048	201:8:3372:3393	8911990	2	True				
ANR	8912548	AssignmentExpression	s -> diff_offset = 2048		8911990	0		=			
ANR	8912549	PtrMemberAccess	s -> diff_offset		8911990	0					
ANR	8912550	Identifier	s		8911990	0					
ANR	8912551	Identifier	diff_offset		8911990	1					
ANR	8912552	PrimaryExpression	2048		8911990	1					
ANR	8912553	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8911990	26					
ANR	8912554	ForInit	i = 0 ;	209:9:3447:3452	8911990	0	True				
ANR	8912555	AssignmentExpression	i = 0		8911990	0		=			
ANR	8912556	Identifier	i		8911990	0					
ANR	8912557	PrimaryExpression	0		8911990	1					
ANR	8912558	Condition	i < 3	209:16:3454:3458	8911990	1	True				
ANR	8912559	RelationalExpression	i < 3		8911990	0		<			
ANR	8912560	Identifier	i		8911990	0					
ANR	8912561	PrimaryExpression	3		8911990	1					
ANR	8912562	PostIncDecOperationExpression	i ++	209:23:3461:3463	8911990	2	True				
ANR	8912563	Identifier	i		8911990	0					
ANR	8912564	IncDec	++		8911990	1					
ANR	8912565	CompoundStatement		209:8:3417:3425	8911990	3					
ANR	8912566	IdentifierDeclStatement	"int w , h ;"	211:8:3477:3485	8911990	0	True				
ANR	8912567	IdentifierDecl	w		8911990	0					
ANR	8912568	IdentifierDeclType	int		8911990	0					
ANR	8912569	Identifier	w		8911990	1					
ANR	8912570	IdentifierDecl	h		8911990	1					
ANR	8912571	IdentifierDeclType	int		8911990	0					
ANR	8912572	Identifier	h		8911990	1					
ANR	8912573	ExpressionStatement	p = & s -> plane [ i ]	213:8:3496:3512	8911990	1	True				
ANR	8912574	AssignmentExpression	p = & s -> plane [ i ]		8911990	0		=			
ANR	8912575	Identifier	p		8911990	0					
ANR	8912576	UnaryOperationExpression	& s -> plane [ i ]		8911990	1					
ANR	8912577	UnaryOperator	&		8911990	0					
ANR	8912578	ArrayIndexing	s -> plane [ i ]		8911990	1					
ANR	8912579	PtrMemberAccess	s -> plane		8911990	0					
ANR	8912580	Identifier	s		8911990	0					
ANR	8912581	Identifier	plane		8911990	1					
ANR	8912582	Identifier	i		8911990	1					
ANR	8912583	ExpressionStatement	p -> width = avctx -> width >> ( i ? s -> chroma_x_shift : 0 )	215:8:3523:3583	8911990	2	True				
ANR	8912584	AssignmentExpression	p -> width = avctx -> width >> ( i ? s -> chroma_x_shift : 0 )		8911990	0		=			
ANR	8912585	PtrMemberAccess	p -> width		8911990	0					
ANR	8912586	Identifier	p		8911990	0					
ANR	8912587	Identifier	width		8911990	1					
ANR	8912588	ShiftExpression	avctx -> width >> ( i ? s -> chroma_x_shift : 0 )		8911990	1		>>			
ANR	8912589	PtrMemberAccess	avctx -> width		8911990	0					
ANR	8912590	Identifier	avctx		8911990	0					
ANR	8912591	Identifier	width		8911990	1					
ANR	8912592	ConditionalExpression	i ? s -> chroma_x_shift : 0		8911990	1					
ANR	8912593	Condition	i		8911990	0					
ANR	8912594	Identifier	i		8911990	0					
ANR	8912595	PtrMemberAccess	s -> chroma_x_shift		8911990	1					
ANR	8912596	Identifier	s		8911990	0					
ANR	8912597	Identifier	chroma_x_shift		8911990	1					
ANR	8912598	PrimaryExpression	0		8911990	2					
ANR	8912599	ExpressionStatement	p -> height = avctx -> height >> ( i ? s -> chroma_y_shift : 0 )	217:8:3594:3654	8911990	3	True				
ANR	8912600	AssignmentExpression	p -> height = avctx -> height >> ( i ? s -> chroma_y_shift : 0 )		8911990	0		=			
ANR	8912601	PtrMemberAccess	p -> height		8911990	0					
ANR	8912602	Identifier	p		8911990	0					
ANR	8912603	Identifier	height		8911990	1					
ANR	8912604	ShiftExpression	avctx -> height >> ( i ? s -> chroma_y_shift : 0 )		8911990	1		>>			
ANR	8912605	PtrMemberAccess	avctx -> height		8911990	0					
ANR	8912606	Identifier	avctx		8911990	0					
ANR	8912607	Identifier	height		8911990	1					
ANR	8912608	ConditionalExpression	i ? s -> chroma_y_shift : 0		8911990	1					
ANR	8912609	Condition	i		8911990	0					
ANR	8912610	Identifier	i		8911990	0					
ANR	8912611	PtrMemberAccess	s -> chroma_y_shift		8911990	1					
ANR	8912612	Identifier	s		8911990	0					
ANR	8912613	Identifier	chroma_y_shift		8911990	1					
ANR	8912614	PrimaryExpression	0		8911990	2					
ANR	8912615	IfStatement	if ( s -> interlaced )		8911990	4					
ANR	8912616	Condition	s -> interlaced	219:12:3669:3681	8911990	0	True				
ANR	8912617	PtrMemberAccess	s -> interlaced		8911990	0					
ANR	8912618	Identifier	s		8911990	0					
ANR	8912619	Identifier	interlaced		8911990	1					
ANR	8912620	ExpressionStatement	p -> height >>= 1	221:12:3697:3712	8911990	1	True				
ANR	8912621	AssignmentExpression	p -> height >>= 1		8911990	0		>>=			
ANR	8912622	PtrMemberAccess	p -> height		8911990	0					
ANR	8912623	Identifier	p		8911990	0					
ANR	8912624	Identifier	height		8911990	1					
ANR	8912625	PrimaryExpression	1		8911990	1					
ANR	8912626	ExpressionStatement	"p -> dwt_width = w = FFALIGN ( p -> width , ( 1 << s -> wavelet_depth ) )"	223:8:3723:3786	8911990	5	True				
ANR	8912627	AssignmentExpression	"p -> dwt_width = w = FFALIGN ( p -> width , ( 1 << s -> wavelet_depth ) )"		8911990	0		=			
ANR	8912628	PtrMemberAccess	p -> dwt_width		8911990	0					
ANR	8912629	Identifier	p		8911990	0					
ANR	8912630	Identifier	dwt_width		8911990	1					
ANR	8912631	AssignmentExpression	"w = FFALIGN ( p -> width , ( 1 << s -> wavelet_depth ) )"		8911990	1		=			
ANR	8912632	Identifier	w		8911990	0					
ANR	8912633	CallExpression	"FFALIGN ( p -> width , ( 1 << s -> wavelet_depth ) )"		8911990	1					
ANR	8912634	Callee	FFALIGN		8911990	0					
ANR	8912635	Identifier	FFALIGN		8911990	0					
ANR	8912636	ArgumentList	p -> width		8911990	1					
ANR	8912637	Argument	p -> width		8911990	0					
ANR	8912638	PtrMemberAccess	p -> width		8911990	0					
ANR	8912639	Identifier	p		8911990	0					
ANR	8912640	Identifier	width		8911990	1					
ANR	8912641	Argument	1 << s -> wavelet_depth		8911990	1					
ANR	8912642	ShiftExpression	1 << s -> wavelet_depth		8911990	0		<<			
ANR	8912643	PrimaryExpression	1		8911990	0					
ANR	8912644	PtrMemberAccess	s -> wavelet_depth		8911990	1					
ANR	8912645	Identifier	s		8911990	0					
ANR	8912646	Identifier	wavelet_depth		8911990	1					
ANR	8912647	ExpressionStatement	"p -> dwt_height = h = FFALIGN ( p -> height , ( 1 << s -> wavelet_depth ) )"	225:8:3797:3860	8911990	6	True				
ANR	8912648	AssignmentExpression	"p -> dwt_height = h = FFALIGN ( p -> height , ( 1 << s -> wavelet_depth ) )"		8911990	0		=			
ANR	8912649	PtrMemberAccess	p -> dwt_height		8911990	0					
ANR	8912650	Identifier	p		8911990	0					
ANR	8912651	Identifier	dwt_height		8911990	1					
ANR	8912652	AssignmentExpression	"h = FFALIGN ( p -> height , ( 1 << s -> wavelet_depth ) )"		8911990	1		=			
ANR	8912653	Identifier	h		8911990	0					
ANR	8912654	CallExpression	"FFALIGN ( p -> height , ( 1 << s -> wavelet_depth ) )"		8911990	1					
ANR	8912655	Callee	FFALIGN		8911990	0					
ANR	8912656	Identifier	FFALIGN		8911990	0					
ANR	8912657	ArgumentList	p -> height		8911990	1					
ANR	8912658	Argument	p -> height		8911990	0					
ANR	8912659	PtrMemberAccess	p -> height		8911990	0					
ANR	8912660	Identifier	p		8911990	0					
ANR	8912661	Identifier	height		8911990	1					
ANR	8912662	Argument	1 << s -> wavelet_depth		8911990	1					
ANR	8912663	ShiftExpression	1 << s -> wavelet_depth		8911990	0		<<			
ANR	8912664	PrimaryExpression	1		8911990	0					
ANR	8912665	PtrMemberAccess	s -> wavelet_depth		8911990	1					
ANR	8912666	Identifier	s		8911990	0					
ANR	8912667	Identifier	wavelet_depth		8911990	1					
ANR	8912668	ExpressionStatement	"p -> coef_stride = FFALIGN ( p -> dwt_width , 32 )"	227:8:3871:3913	8911990	7	True				
ANR	8912669	AssignmentExpression	"p -> coef_stride = FFALIGN ( p -> dwt_width , 32 )"		8911990	0		=			
ANR	8912670	PtrMemberAccess	p -> coef_stride		8911990	0					
ANR	8912671	Identifier	p		8911990	0					
ANR	8912672	Identifier	coef_stride		8911990	1					
ANR	8912673	CallExpression	"FFALIGN ( p -> dwt_width , 32 )"		8911990	1					
ANR	8912674	Callee	FFALIGN		8911990	0					
ANR	8912675	Identifier	FFALIGN		8911990	0					
ANR	8912676	ArgumentList	p -> dwt_width		8911990	1					
ANR	8912677	Argument	p -> dwt_width		8911990	0					
ANR	8912678	PtrMemberAccess	p -> dwt_width		8911990	0					
ANR	8912679	Identifier	p		8911990	0					
ANR	8912680	Identifier	dwt_width		8911990	1					
ANR	8912681	Argument	32		8911990	1					
ANR	8912682	PrimaryExpression	32		8911990	0					
ANR	8912683	ExpressionStatement	p -> coef_buf = av_malloc ( p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef ) )	229:8:3924:3993	8911990	8	True				
ANR	8912684	AssignmentExpression	p -> coef_buf = av_malloc ( p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef ) )		8911990	0		=			
ANR	8912685	PtrMemberAccess	p -> coef_buf		8911990	0					
ANR	8912686	Identifier	p		8911990	0					
ANR	8912687	Identifier	coef_buf		8911990	1					
ANR	8912688	CallExpression	av_malloc ( p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef ) )		8911990	1					
ANR	8912689	Callee	av_malloc		8911990	0					
ANR	8912690	Identifier	av_malloc		8911990	0					
ANR	8912691	ArgumentList	p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef )		8911990	1					
ANR	8912692	Argument	p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef )		8911990	0					
ANR	8912693	MultiplicativeExpression	p -> coef_stride * p -> dwt_height * sizeof ( dwtcoef )		8911990	0		*			
ANR	8912694	PtrMemberAccess	p -> coef_stride		8911990	0					
ANR	8912695	Identifier	p		8911990	0					
ANR	8912696	Identifier	coef_stride		8911990	1					
ANR	8912697	MultiplicativeExpression	p -> dwt_height * sizeof ( dwtcoef )		8911990	1		*			
ANR	8912698	PtrMemberAccess	p -> dwt_height		8911990	0					
ANR	8912699	Identifier	p		8911990	0					
ANR	8912700	Identifier	dwt_height		8911990	1					
ANR	8912701	SizeofExpression	sizeof ( dwtcoef )		8911990	1					
ANR	8912702	Sizeof	sizeof		8911990	0					
ANR	8912703	SizeofOperand	dwtcoef		8911990	1					
ANR	8912704	IfStatement	if ( ! p -> coef_buf )		8911990	9					
ANR	8912705	Condition	! p -> coef_buf	231:12:4008:4019	8911990	0	True				
ANR	8912706	UnaryOperationExpression	! p -> coef_buf		8911990	0					
ANR	8912707	UnaryOperator	!		8911990	0					
ANR	8912708	PtrMemberAccess	p -> coef_buf		8911990	1					
ANR	8912709	Identifier	p		8911990	0					
ANR	8912710	Identifier	coef_buf		8911990	1					
ANR	8912711	GotoStatement	goto alloc_fail ;	233:12:4035:4050	8911990	1	True				
ANR	8912712	Identifier	alloc_fail		8911990	0					
ANR	8912713	ForStatement	for ( level = s -> wavelet_depth - 1 ; level >= 0 ; level -- )		8911990	10					
ANR	8912714	ForInit	level = s -> wavelet_depth - 1 ;	235:13:4066:4092	8911990	0	True				
ANR	8912715	AssignmentExpression	level = s -> wavelet_depth - 1		8911990	0		=			
ANR	8912716	Identifier	level		8911990	0					
ANR	8912717	AdditiveExpression	s -> wavelet_depth - 1		8911990	1		-			
ANR	8912718	PtrMemberAccess	s -> wavelet_depth		8911990	0					
ANR	8912719	Identifier	s		8911990	0					
ANR	8912720	Identifier	wavelet_depth		8911990	1					
ANR	8912721	PrimaryExpression	1		8911990	1					
ANR	8912722	Condition	level >= 0	235:41:4094:4103	8911990	1	True				
ANR	8912723	RelationalExpression	level >= 0		8911990	0		>=			
ANR	8912724	Identifier	level		8911990	0					
ANR	8912725	PrimaryExpression	0		8911990	1					
ANR	8912726	PostIncDecOperationExpression	level --	235:53:4106:4112	8911990	2	True				
ANR	8912727	Identifier	level		8911990	0					
ANR	8912728	IncDec	--		8911990	1					
ANR	8912729	CompoundStatement		233:62:4055:4055	8911990	3					
ANR	8912730	ExpressionStatement	w = w >> 1	237:12:4130:4140	8911990	0	True				
ANR	8912731	AssignmentExpression	w = w >> 1		8911990	0		=			
ANR	8912732	Identifier	w		8911990	0					
ANR	8912733	ShiftExpression	w >> 1		8911990	1		>>			
ANR	8912734	Identifier	w		8911990	0					
ANR	8912735	PrimaryExpression	1		8911990	1					
ANR	8912736	ExpressionStatement	h = h >> 1	239:12:4155:4165	8911990	1	True				
ANR	8912737	AssignmentExpression	h = h >> 1		8911990	0		=			
ANR	8912738	Identifier	h		8911990	0					
ANR	8912739	ShiftExpression	h >> 1		8911990	1		>>			
ANR	8912740	Identifier	h		8911990	0					
ANR	8912741	PrimaryExpression	1		8911990	1					
ANR	8912742	ForStatement	for ( o = 0 ; o < 4 ; o ++ )		8911990	2					
ANR	8912743	ForInit	o = 0 ;	241:17:4185:4190	8911990	0	True				
ANR	8912744	AssignmentExpression	o = 0		8911990	0		=			
ANR	8912745	Identifier	o		8911990	0					
ANR	8912746	PrimaryExpression	0		8911990	1					
ANR	8912747	Condition	o < 4	241:24:4192:4196	8911990	1	True				
ANR	8912748	RelationalExpression	o < 4		8911990	0		<			
ANR	8912749	Identifier	o		8911990	0					
ANR	8912750	PrimaryExpression	4		8911990	1					
ANR	8912751	PostIncDecOperationExpression	o ++	241:31:4199:4201	8911990	2	True				
ANR	8912752	Identifier	o		8911990	0					
ANR	8912753	IncDec	++		8911990	1					
ANR	8912754	CompoundStatement		239:36:4144:4144	8911990	3					
ANR	8912755	ExpressionStatement	b = & p -> band [ level ] [ o ]	243:16:4223:4245	8911990	0	True				
ANR	8912756	AssignmentExpression	b = & p -> band [ level ] [ o ]		8911990	0		=			
ANR	8912757	Identifier	b		8911990	0					
ANR	8912758	UnaryOperationExpression	& p -> band [ level ] [ o ]		8911990	1					
ANR	8912759	UnaryOperator	&		8911990	0					
ANR	8912760	ArrayIndexing	p -> band [ level ] [ o ]		8911990	1					
ANR	8912761	ArrayIndexing	p -> band [ level ]		8911990	0					
ANR	8912762	PtrMemberAccess	p -> band		8911990	0					
ANR	8912763	Identifier	p		8911990	0					
ANR	8912764	Identifier	band		8911990	1					
ANR	8912765	Identifier	level		8911990	1					
ANR	8912766	Identifier	o		8911990	1					
ANR	8912767	ExpressionStatement	b -> width = w	245:16:4264:4277	8911990	1	True				
ANR	8912768	AssignmentExpression	b -> width = w		8911990	0		=			
ANR	8912769	PtrMemberAccess	b -> width		8911990	0					
ANR	8912770	Identifier	b		8911990	0					
ANR	8912771	Identifier	width		8911990	1					
ANR	8912772	Identifier	w		8911990	1					
ANR	8912773	ExpressionStatement	b -> height = h	247:16:4296:4309	8911990	2	True				
ANR	8912774	AssignmentExpression	b -> height = h		8911990	0		=			
ANR	8912775	PtrMemberAccess	b -> height		8911990	0					
ANR	8912776	Identifier	b		8911990	0					
ANR	8912777	Identifier	height		8911990	1					
ANR	8912778	Identifier	h		8911990	1					
ANR	8912779	ExpressionStatement	b -> stride = p -> coef_stride	249:16:4328:4354	8911990	3	True				
ANR	8912780	AssignmentExpression	b -> stride = p -> coef_stride		8911990	0		=			
ANR	8912781	PtrMemberAccess	b -> stride		8911990	0					
ANR	8912782	Identifier	b		8911990	0					
ANR	8912783	Identifier	stride		8911990	1					
ANR	8912784	PtrMemberAccess	p -> coef_stride		8911990	1					
ANR	8912785	Identifier	p		8911990	0					
ANR	8912786	Identifier	coef_stride		8911990	1					
ANR	8912787	ExpressionStatement	shift = ( o > 1 ) * b -> height * b -> stride + ( o & 1 ) * b -> width	251:16:4373:4427	8911990	4	True				
ANR	8912788	AssignmentExpression	shift = ( o > 1 ) * b -> height * b -> stride + ( o & 1 ) * b -> width		8911990	0		=			
ANR	8912789	Identifier	shift		8911990	0					
ANR	8912790	AdditiveExpression	( o > 1 ) * b -> height * b -> stride + ( o & 1 ) * b -> width		8911990	1		+			
ANR	8912791	MultiplicativeExpression	( o > 1 ) * b -> height * b -> stride		8911990	0		*			
ANR	8912792	RelationalExpression	o > 1		8911990	0		>			
ANR	8912793	Identifier	o		8911990	0					
ANR	8912794	PrimaryExpression	1		8911990	1					
ANR	8912795	MultiplicativeExpression	b -> height * b -> stride		8911990	1		*			
ANR	8912796	PtrMemberAccess	b -> height		8911990	0					
ANR	8912797	Identifier	b		8911990	0					
ANR	8912798	Identifier	height		8911990	1					
ANR	8912799	PtrMemberAccess	b -> stride		8911990	1					
ANR	8912800	Identifier	b		8911990	0					
ANR	8912801	Identifier	stride		8911990	1					
ANR	8912802	MultiplicativeExpression	( o & 1 ) * b -> width		8911990	1		*			
ANR	8912803	BitAndExpression	o & 1		8911990	0		&			
ANR	8912804	Identifier	o		8911990	0					
ANR	8912805	PrimaryExpression	1		8911990	1					
ANR	8912806	PtrMemberAccess	b -> width		8911990	1					
ANR	8912807	Identifier	b		8911990	0					
ANR	8912808	Identifier	width		8911990	1					
ANR	8912809	ExpressionStatement	b -> buf = p -> coef_buf + shift	253:16:4446:4474	8911990	5	True				
ANR	8912810	AssignmentExpression	b -> buf = p -> coef_buf + shift		8911990	0		=			
ANR	8912811	PtrMemberAccess	b -> buf		8911990	0					
ANR	8912812	Identifier	b		8911990	0					
ANR	8912813	Identifier	buf		8911990	1					
ANR	8912814	AdditiveExpression	p -> coef_buf + shift		8911990	1		+			
ANR	8912815	PtrMemberAccess	p -> coef_buf		8911990	0					
ANR	8912816	Identifier	p		8911990	0					
ANR	8912817	Identifier	coef_buf		8911990	1					
ANR	8912818	Identifier	shift		8911990	1					
ANR	8912819	IfStatement	"if ( ff_vc2enc_init_transforms ( & s -> transform_args [ i ] . t , s -> plane [ i ] . coef_stride , s -> plane [ i ] . dwt_height ) )"		8911990	11					
ANR	8912820	Condition	"ff_vc2enc_init_transforms ( & s -> transform_args [ i ] . t , s -> plane [ i ] . coef_stride , s -> plane [ i ] . dwt_height )"	263:12:4541:4717	8911990	0	True				
ANR	8912821	CallExpression	"ff_vc2enc_init_transforms ( & s -> transform_args [ i ] . t , s -> plane [ i ] . coef_stride , s -> plane [ i ] . dwt_height )"		8911990	0					
ANR	8912822	Callee	ff_vc2enc_init_transforms		8911990	0					
ANR	8912823	Identifier	ff_vc2enc_init_transforms		8911990	0					
ANR	8912824	ArgumentList	& s -> transform_args [ i ] . t		8911990	1					
ANR	8912825	Argument	& s -> transform_args [ i ] . t		8911990	0					
ANR	8912826	UnaryOperationExpression	& s -> transform_args [ i ] . t		8911990	0					
ANR	8912827	UnaryOperator	&		8911990	0					
ANR	8912828	MemberAccess	s -> transform_args [ i ] . t		8911990	1					
ANR	8912829	ArrayIndexing	s -> transform_args [ i ]		8911990	0					
ANR	8912830	PtrMemberAccess	s -> transform_args		8911990	0					
ANR	8912831	Identifier	s		8911990	0					
ANR	8912832	Identifier	transform_args		8911990	1					
ANR	8912833	Identifier	i		8911990	1					
ANR	8912834	Identifier	t		8911990	1					
ANR	8912835	Argument	s -> plane [ i ] . coef_stride		8911990	1					
ANR	8912836	MemberAccess	s -> plane [ i ] . coef_stride		8911990	0					
ANR	8912837	ArrayIndexing	s -> plane [ i ]		8911990	0					
ANR	8912838	PtrMemberAccess	s -> plane		8911990	0					
ANR	8912839	Identifier	s		8911990	0					
ANR	8912840	Identifier	plane		8911990	1					
ANR	8912841	Identifier	i		8911990	1					
ANR	8912842	Identifier	coef_stride		8911990	1					
ANR	8912843	Argument	s -> plane [ i ] . dwt_height		8911990	2					
ANR	8912844	MemberAccess	s -> plane [ i ] . dwt_height		8911990	0					
ANR	8912845	ArrayIndexing	s -> plane [ i ]		8911990	0					
ANR	8912846	PtrMemberAccess	s -> plane		8911990	0					
ANR	8912847	Identifier	s		8911990	0					
ANR	8912848	Identifier	plane		8911990	1					
ANR	8912849	Identifier	i		8911990	1					
ANR	8912850	Identifier	dwt_height		8911990	1					
ANR	8912851	GotoStatement	goto alloc_fail ;	269:12:4733:4748	8911990	1	True				
ANR	8912852	Identifier	alloc_fail		8911990	0					
ANR	8912853	ExpressionStatement	s -> num_x = s -> plane [ 0 ] . dwt_width / s -> slice_width	277:4:4782:4829	8911990	27	True				
ANR	8912854	AssignmentExpression	s -> num_x = s -> plane [ 0 ] . dwt_width / s -> slice_width		8911990	0		=			
ANR	8912855	PtrMemberAccess	s -> num_x		8911990	0					
ANR	8912856	Identifier	s		8911990	0					
ANR	8912857	Identifier	num_x		8911990	1					
ANR	8912858	MultiplicativeExpression	s -> plane [ 0 ] . dwt_width / s -> slice_width		8911990	1		/			
ANR	8912859	MemberAccess	s -> plane [ 0 ] . dwt_width		8911990	0					
ANR	8912860	ArrayIndexing	s -> plane [ 0 ]		8911990	0					
ANR	8912861	PtrMemberAccess	s -> plane		8911990	0					
ANR	8912862	Identifier	s		8911990	0					
ANR	8912863	Identifier	plane		8911990	1					
ANR	8912864	PrimaryExpression	0		8911990	1					
ANR	8912865	Identifier	dwt_width		8911990	1					
ANR	8912866	PtrMemberAccess	s -> slice_width		8911990	1					
ANR	8912867	Identifier	s		8911990	0					
ANR	8912868	Identifier	slice_width		8911990	1					
ANR	8912869	ExpressionStatement	s -> num_y = s -> plane [ 0 ] . dwt_height / s -> slice_height	279:4:4836:4885	8911990	28	True				
ANR	8912870	AssignmentExpression	s -> num_y = s -> plane [ 0 ] . dwt_height / s -> slice_height		8911990	0		=			
ANR	8912871	PtrMemberAccess	s -> num_y		8911990	0					
ANR	8912872	Identifier	s		8911990	0					
ANR	8912873	Identifier	num_y		8911990	1					
ANR	8912874	MultiplicativeExpression	s -> plane [ 0 ] . dwt_height / s -> slice_height		8911990	1		/			
ANR	8912875	MemberAccess	s -> plane [ 0 ] . dwt_height		8911990	0					
ANR	8912876	ArrayIndexing	s -> plane [ 0 ]		8911990	0					
ANR	8912877	PtrMemberAccess	s -> plane		8911990	0					
ANR	8912878	Identifier	s		8911990	0					
ANR	8912879	Identifier	plane		8911990	1					
ANR	8912880	PrimaryExpression	0		8911990	1					
ANR	8912881	Identifier	dwt_height		8911990	1					
ANR	8912882	PtrMemberAccess	s -> slice_height		8911990	1					
ANR	8912883	Identifier	s		8911990	0					
ANR	8912884	Identifier	slice_height		8911990	1					
ANR	8912885	ExpressionStatement	"s -> slice_args = av_calloc ( s -> num_x * s -> num_y , sizeof ( SliceArgs ) )"	283:4:4894:4957	8911990	29	True				
ANR	8912886	AssignmentExpression	"s -> slice_args = av_calloc ( s -> num_x * s -> num_y , sizeof ( SliceArgs ) )"		8911990	0		=			
ANR	8912887	PtrMemberAccess	s -> slice_args		8911990	0					
ANR	8912888	Identifier	s		8911990	0					
ANR	8912889	Identifier	slice_args		8911990	1					
ANR	8912890	CallExpression	"av_calloc ( s -> num_x * s -> num_y , sizeof ( SliceArgs ) )"		8911990	1					
ANR	8912891	Callee	av_calloc		8911990	0					
ANR	8912892	Identifier	av_calloc		8911990	0					
ANR	8912893	ArgumentList	s -> num_x * s -> num_y		8911990	1					
ANR	8912894	Argument	s -> num_x * s -> num_y		8911990	0					
ANR	8912895	MultiplicativeExpression	s -> num_x * s -> num_y		8911990	0		*			
ANR	8912896	PtrMemberAccess	s -> num_x		8911990	0					
ANR	8912897	Identifier	s		8911990	0					
ANR	8912898	Identifier	num_x		8911990	1					
ANR	8912899	PtrMemberAccess	s -> num_y		8911990	1					
ANR	8912900	Identifier	s		8911990	0					
ANR	8912901	Identifier	num_y		8911990	1					
ANR	8912902	Argument	sizeof ( SliceArgs )		8911990	1					
ANR	8912903	SizeofExpression	sizeof ( SliceArgs )		8911990	0					
ANR	8912904	Sizeof	sizeof		8911990	0					
ANR	8912905	SizeofOperand	SliceArgs		8911990	1					
ANR	8912906	IfStatement	if ( ! s -> slice_args )		8911990	30					
ANR	8912907	Condition	! s -> slice_args	285:8:4968:4981	8911990	0	True				
ANR	8912908	UnaryOperationExpression	! s -> slice_args		8911990	0					
ANR	8912909	UnaryOperator	!		8911990	0					
ANR	8912910	PtrMemberAccess	s -> slice_args		8911990	1					
ANR	8912911	Identifier	s		8911990	0					
ANR	8912912	Identifier	slice_args		8911990	1					
ANR	8912913	GotoStatement	goto alloc_fail ;	287:8:4993:5008	8911990	1	True				
ANR	8912914	Identifier	alloc_fail		8911990	0					
ANR	8912915	ExpressionStatement	s -> coef_lut_len = av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len ) )	293:4:5042:5122	8911990	31	True				
ANR	8912916	AssignmentExpression	s -> coef_lut_len = av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len ) )		8911990	0		=			
ANR	8912917	PtrMemberAccess	s -> coef_lut_len		8911990	0					
ANR	8912918	Identifier	s		8911990	0					
ANR	8912919	Identifier	coef_lut_len		8911990	1					
ANR	8912920	CallExpression	av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len ) )		8911990	1					
ANR	8912921	Callee	av_malloc		8911990	0					
ANR	8912922	Identifier	av_malloc		8911990	0					
ANR	8912923	ArgumentList	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len )		8911990	1					
ANR	8912924	Argument	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len )		8911990	0					
ANR	8912925	MultiplicativeExpression	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len )		8911990	0		*			
ANR	8912926	Identifier	COEF_LUT_TAB		8911990	0					
ANR	8912927	MultiplicativeExpression	( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_len )		8911990	1		*			
ANR	8912928	AdditiveExpression	s -> q_ceil + 1		8911990	0		+			
ANR	8912929	PtrMemberAccess	s -> q_ceil		8911990	0					
ANR	8912930	Identifier	s		8911990	0					
ANR	8912931	Identifier	q_ceil		8911990	1					
ANR	8912932	PrimaryExpression	1		8911990	1					
ANR	8912933	SizeofExpression	sizeof ( * s -> coef_lut_len )		8911990	1					
ANR	8912934	Sizeof	sizeof		8911990	0					
ANR	8912935	UnaryOperationExpression	* s -> coef_lut_len		8911990	1					
ANR	8912936	UnaryOperator	*		8911990	0					
ANR	8912937	PtrMemberAccess	s -> coef_lut_len		8911990	1					
ANR	8912938	Identifier	s		8911990	0					
ANR	8912939	Identifier	coef_lut_len		8911990	1					
ANR	8912940	IfStatement	if ( ! s -> coef_lut_len )		8911990	32					
ANR	8912941	Condition	! s -> coef_lut_len	295:8:5133:5148	8911990	0	True				
ANR	8912942	UnaryOperationExpression	! s -> coef_lut_len		8911990	0					
ANR	8912943	UnaryOperator	!		8911990	0					
ANR	8912944	PtrMemberAccess	s -> coef_lut_len		8911990	1					
ANR	8912945	Identifier	s		8911990	0					
ANR	8912946	Identifier	coef_lut_len		8911990	1					
ANR	8912947	GotoStatement	goto alloc_fail ;	297:8:5160:5175	8911990	1	True				
ANR	8912948	Identifier	alloc_fail		8911990	0					
ANR	8912949	ExpressionStatement	s -> coef_lut_val = av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val ) )	301:4:5184:5264	8911990	33	True				
ANR	8912950	AssignmentExpression	s -> coef_lut_val = av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val ) )		8911990	0		=			
ANR	8912951	PtrMemberAccess	s -> coef_lut_val		8911990	0					
ANR	8912952	Identifier	s		8911990	0					
ANR	8912953	Identifier	coef_lut_val		8911990	1					
ANR	8912954	CallExpression	av_malloc ( COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val ) )		8911990	1					
ANR	8912955	Callee	av_malloc		8911990	0					
ANR	8912956	Identifier	av_malloc		8911990	0					
ANR	8912957	ArgumentList	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val )		8911990	1					
ANR	8912958	Argument	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val )		8911990	0					
ANR	8912959	MultiplicativeExpression	COEF_LUT_TAB * ( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val )		8911990	0		*			
ANR	8912960	Identifier	COEF_LUT_TAB		8911990	0					
ANR	8912961	MultiplicativeExpression	( s -> q_ceil + 1 ) * sizeof ( * s -> coef_lut_val )		8911990	1		*			
ANR	8912962	AdditiveExpression	s -> q_ceil + 1		8911990	0		+			
ANR	8912963	PtrMemberAccess	s -> q_ceil		8911990	0					
ANR	8912964	Identifier	s		8911990	0					
ANR	8912965	Identifier	q_ceil		8911990	1					
ANR	8912966	PrimaryExpression	1		8911990	1					
ANR	8912967	SizeofExpression	sizeof ( * s -> coef_lut_val )		8911990	1					
ANR	8912968	Sizeof	sizeof		8911990	0					
ANR	8912969	UnaryOperationExpression	* s -> coef_lut_val		8911990	1					
ANR	8912970	UnaryOperator	*		8911990	0					
ANR	8912971	PtrMemberAccess	s -> coef_lut_val		8911990	1					
ANR	8912972	Identifier	s		8911990	0					
ANR	8912973	Identifier	coef_lut_val		8911990	1					
ANR	8912974	IfStatement	if ( ! s -> coef_lut_val )		8911990	34					
ANR	8912975	Condition	! s -> coef_lut_val	303:8:5275:5290	8911990	0	True				
ANR	8912976	UnaryOperationExpression	! s -> coef_lut_val		8911990	0					
ANR	8912977	UnaryOperator	!		8911990	0					
ANR	8912978	PtrMemberAccess	s -> coef_lut_val		8911990	1					
ANR	8912979	Identifier	s		8911990	0					
ANR	8912980	Identifier	coef_lut_val		8911990	1					
ANR	8912981	GotoStatement	goto alloc_fail ;	305:8:5302:5317	8911990	1	True				
ANR	8912982	Identifier	alloc_fail		8911990	0					
ANR	8912983	ForStatement	for ( i = 0 ; i < s -> q_ceil ; i ++ )		8911990	35					
ANR	8912984	ForInit	i = 0 ;	309:9:5331:5336	8911990	0	True				
ANR	8912985	AssignmentExpression	i = 0		8911990	0		=			
ANR	8912986	Identifier	i		8911990	0					
ANR	8912987	PrimaryExpression	0		8911990	1					
ANR	8912988	Condition	i < s -> q_ceil	309:16:5338:5350	8911990	1	True				
ANR	8912989	RelationalExpression	i < s -> q_ceil		8911990	0		<			
ANR	8912990	Identifier	i		8911990	0					
ANR	8912991	PtrMemberAccess	s -> q_ceil		8911990	1					
ANR	8912992	Identifier	s		8911990	0					
ANR	8912993	Identifier	q_ceil		8911990	1					
ANR	8912994	PostIncDecOperationExpression	i ++	309:31:5353:5355	8911990	2	True				
ANR	8912995	Identifier	i		8911990	0					
ANR	8912996	IncDec	++		8911990	1					
ANR	8912997	CompoundStatement		311:8:5372:5424	8911990	3					
ANR	8912998	IdentifierDeclStatement	uint8_t * len_lut = & s -> coef_lut_len [ i * COEF_LUT_TAB ] ;	311:8:5369:5421	8911990	0	True				
ANR	8912999	IdentifierDecl	* len_lut = & s -> coef_lut_len [ i * COEF_LUT_TAB ]		8911990	0					
ANR	8913000	IdentifierDeclType	uint8_t *		8911990	0					
ANR	8913001	Identifier	len_lut		8911990	1					
ANR	8913002	AssignmentExpression	* len_lut = & s -> coef_lut_len [ i * COEF_LUT_TAB ]		8911990	2		=			
ANR	8913003	Identifier	len_lut		8911990	0					
ANR	8913004	UnaryOperationExpression	& s -> coef_lut_len [ i * COEF_LUT_TAB ]		8911990	1					
ANR	8913005	UnaryOperator	&		8911990	0					
ANR	8913006	ArrayIndexing	s -> coef_lut_len [ i * COEF_LUT_TAB ]		8911990	1					
ANR	8913007	PtrMemberAccess	s -> coef_lut_len		8911990	0					
ANR	8913008	Identifier	s		8911990	0					
ANR	8913009	Identifier	coef_lut_len		8911990	1					
ANR	8913010	MultiplicativeExpression	i * COEF_LUT_TAB		8911990	1		*			
ANR	8913011	Identifier	i		8911990	0					
ANR	8913012	Identifier	COEF_LUT_TAB		8911990	1					
ANR	8913013	IdentifierDeclStatement	uint32_t * val_lut = & s -> coef_lut_val [ i * COEF_LUT_TAB ] ;	313:8:5432:5484	8911990	1	True				
ANR	8913014	IdentifierDecl	* val_lut = & s -> coef_lut_val [ i * COEF_LUT_TAB ]		8911990	0					
ANR	8913015	IdentifierDeclType	uint32_t *		8911990	0					
ANR	8913016	Identifier	val_lut		8911990	1					
ANR	8913017	AssignmentExpression	* val_lut = & s -> coef_lut_val [ i * COEF_LUT_TAB ]		8911990	2		=			
ANR	8913018	Identifier	val_lut		8911990	0					
ANR	8913019	UnaryOperationExpression	& s -> coef_lut_val [ i * COEF_LUT_TAB ]		8911990	1					
ANR	8913020	UnaryOperator	&		8911990	0					
ANR	8913021	ArrayIndexing	s -> coef_lut_val [ i * COEF_LUT_TAB ]		8911990	1					
ANR	8913022	PtrMemberAccess	s -> coef_lut_val		8911990	0					
ANR	8913023	Identifier	s		8911990	0					
ANR	8913024	Identifier	coef_lut_val		8911990	1					
ANR	8913025	MultiplicativeExpression	i * COEF_LUT_TAB		8911990	1		*			
ANR	8913026	Identifier	i		8911990	0					
ANR	8913027	Identifier	COEF_LUT_TAB		8911990	1					
ANR	8913028	ForStatement	for ( j = 0 ; j < COEF_LUT_TAB ; j ++ )		8911990	2					
ANR	8913029	ForInit	j = 0 ;	315:13:5500:5505	8911990	0	True				
ANR	8913030	AssignmentExpression	j = 0		8911990	0		=			
ANR	8913031	Identifier	j		8911990	0					
ANR	8913032	PrimaryExpression	0		8911990	1					
ANR	8913033	Condition	j < COEF_LUT_TAB	315:20:5507:5522	8911990	1	True				
ANR	8913034	RelationalExpression	j < COEF_LUT_TAB		8911990	0		<			
ANR	8913035	Identifier	j		8911990	0					
ANR	8913036	Identifier	COEF_LUT_TAB		8911990	1					
ANR	8913037	PostIncDecOperationExpression	j ++	315:38:5525:5527	8911990	2	True				
ANR	8913038	Identifier	j		8911990	0					
ANR	8913039	IncDec	++		8911990	1					
ANR	8913040	CompoundStatement		313:43:5470:5470	8911990	3					
ANR	8913041	ExpressionStatement	"get_vc2_ue_uint ( QUANT ( j , ff_dirac_qscale_tab [ i ] ) , & len_lut [ j ] , & val_lut [ j ] )"	317:12:5545:5649	8911990	0	True				
ANR	8913042	CallExpression	"get_vc2_ue_uint ( QUANT ( j , ff_dirac_qscale_tab [ i ] ) , & len_lut [ j ] , & val_lut [ j ] )"		8911990	0					
ANR	8913043	Callee	get_vc2_ue_uint		8911990	0					
ANR	8913044	Identifier	get_vc2_ue_uint		8911990	0					
ANR	8913045	ArgumentList	"QUANT ( j , ff_dirac_qscale_tab [ i ] )"		8911990	1					
ANR	8913046	Argument	"QUANT ( j , ff_dirac_qscale_tab [ i ] )"		8911990	0					
ANR	8913047	CallExpression	"QUANT ( j , ff_dirac_qscale_tab [ i ] )"		8911990	0					
ANR	8913048	Callee	QUANT		8911990	0					
ANR	8913049	Identifier	QUANT		8911990	0					
ANR	8913050	ArgumentList	j		8911990	1					
ANR	8913051	Argument	j		8911990	0					
ANR	8913052	Identifier	j		8911990	0					
ANR	8913053	Argument	ff_dirac_qscale_tab [ i ]		8911990	1					
ANR	8913054	ArrayIndexing	ff_dirac_qscale_tab [ i ]		8911990	0					
ANR	8913055	Identifier	ff_dirac_qscale_tab		8911990	0					
ANR	8913056	Identifier	i		8911990	1					
ANR	8913057	Argument	& len_lut [ j ]		8911990	1					
ANR	8913058	UnaryOperationExpression	& len_lut [ j ]		8911990	0					
ANR	8913059	UnaryOperator	&		8911990	0					
ANR	8913060	ArrayIndexing	len_lut [ j ]		8911990	1					
ANR	8913061	Identifier	len_lut		8911990	0					
ANR	8913062	Identifier	j		8911990	1					
ANR	8913063	Argument	& val_lut [ j ]		8911990	2					
ANR	8913064	UnaryOperationExpression	& val_lut [ j ]		8911990	0					
ANR	8913065	UnaryOperator	&		8911990	0					
ANR	8913066	ArrayIndexing	val_lut [ j ]		8911990	1					
ANR	8913067	Identifier	val_lut		8911990	0					
ANR	8913068	Identifier	j		8911990	1					
ANR	8913069	IfStatement	if ( len_lut [ j ] != 1 )		8911990	1					
ANR	8913070	Condition	len_lut [ j ] != 1	321:16:5668:5682	8911990	0	True				
ANR	8913071	EqualityExpression	len_lut [ j ] != 1		8911990	0		!=			
ANR	8913072	ArrayIndexing	len_lut [ j ]		8911990	0					
ANR	8913073	Identifier	len_lut		8911990	0					
ANR	8913074	Identifier	j		8911990	1					
ANR	8913075	PrimaryExpression	1		8911990	1					
ANR	8913076	CompoundStatement		319:33:5625:5625	8911990	1					
ANR	8913077	ExpressionStatement	len_lut [ j ] += 1	323:16:5704:5719	8911990	0	True				
ANR	8913078	AssignmentExpression	len_lut [ j ] += 1		8911990	0		+=			
ANR	8913079	ArrayIndexing	len_lut [ j ]		8911990	0					
ANR	8913080	Identifier	len_lut		8911990	0					
ANR	8913081	Identifier	j		8911990	1					
ANR	8913082	PrimaryExpression	1		8911990	1					
ANR	8913083	ExpressionStatement	val_lut [ j ] <<= 1	325:16:5738:5754	8911990	1	True				
ANR	8913084	AssignmentExpression	val_lut [ j ] <<= 1		8911990	0		<<=			
ANR	8913085	ArrayIndexing	val_lut [ j ]		8911990	0					
ANR	8913086	Identifier	val_lut		8911990	0					
ANR	8913087	Identifier	j		8911990	1					
ANR	8913088	PrimaryExpression	1		8911990	1					
ANR	8913089	ElseStatement	else		8911990	0					
ANR	8913090	CompoundStatement		325:19:5716:5716	8911990	0					
ANR	8913091	ExpressionStatement	val_lut [ j ] = 1	329:16:5795:5809	8911990	0	True				
ANR	8913092	AssignmentExpression	val_lut [ j ] = 1		8911990	0		=			
ANR	8913093	ArrayIndexing	val_lut [ j ]		8911990	0					
ANR	8913094	Identifier	val_lut		8911990	0					
ANR	8913095	Identifier	j		8911990	1					
ANR	8913096	PrimaryExpression	1		8911990	1					
ANR	8913097	ReturnStatement	return 0 ;	339:4:5851:5859	8911990	36	True				
ANR	8913098	PrimaryExpression	0		8911990	0					
ANR	8913099	Label	alloc_fail :	343:0:5864:5874	8911990	37	True				
ANR	8913100	Identifier	alloc_fail		8911990	0					
ANR	8913101	ExpressionStatement	vc2_encode_end ( avctx )	345:4:5881:5902	8911990	38	True				
ANR	8913102	CallExpression	vc2_encode_end ( avctx )		8911990	0					
ANR	8913103	Callee	vc2_encode_end		8911990	0					
ANR	8913104	Identifier	vc2_encode_end		8911990	0					
ANR	8913105	ArgumentList	avctx		8911990	1					
ANR	8913106	Argument	avctx		8911990	0					
ANR	8913107	Identifier	avctx		8911990	0					
ANR	8913108	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to allocate memory!\\n"" )"	347:4:5909:5968	8911990	39	True				
ANR	8913109	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to allocate memory!\\n"" )"		8911990	0					
ANR	8913110	Callee	av_log		8911990	0					
ANR	8913111	Identifier	av_log		8911990	0					
ANR	8913112	ArgumentList	avctx		8911990	1					
ANR	8913113	Argument	avctx		8911990	0					
ANR	8913114	Identifier	avctx		8911990	0					
ANR	8913115	Argument	AV_LOG_ERROR		8911990	1					
ANR	8913116	Identifier	AV_LOG_ERROR		8911990	0					
ANR	8913117	Argument	"""Unable to allocate memory!\\n"""		8911990	2					
ANR	8913118	PrimaryExpression	"""Unable to allocate memory!\\n"""		8911990	0					
ANR	8913119	ReturnStatement	return AVERROR ( ENOMEM ) ;	349:4:5975:5997	8911990	40	True				
ANR	8913120	CallExpression	AVERROR ( ENOMEM )		8911990	0					
ANR	8913121	Callee	AVERROR		8911990	0					
ANR	8913122	Identifier	AVERROR		8911990	0					
ANR	8913123	ArgumentList	ENOMEM		8911990	1					
ANR	8913124	Argument	ENOMEM		8911990	0					
ANR	8913125	Identifier	ENOMEM		8911990	0					
ANR	8913126	ReturnType	static av_cold int		8911990	1					
ANR	8913127	Identifier	vc2_encode_init		8911990	2					
ANR	8913128	ParameterList	AVCodecContext * avctx		8911990	3					
ANR	8913129	Parameter	AVCodecContext * avctx	1:35:35:55	8911990	0	True				
ANR	8913130	ParameterType	AVCodecContext *		8911990	0					
ANR	8913131	Identifier	avctx		8911990	1					
ANR	8913132	CFGEntryNode	ENTRY		8911990		True				
ANR	8913133	CFGExitNode	EXIT		8911990		True				
ANR	8913134	Symbol	s -> strict_compliance		8911990						
ANR	8913135	Symbol	s -> q_avg		8911990						
ANR	8913136	Symbol	AV_FIELD_PROGRESSIVE		8911990						
ANR	8913137	Symbol	ENOMEM		8911990						
ANR	8913138	Symbol	shift		8911990						
ANR	8913139	Symbol	p -> height		8911990						
ANR	8913140	Symbol	s -> base_vf		8911990						
ANR	8913141	Symbol	b -> stride		8911990						
ANR	8913142	Symbol	ff_vc2enc_init_transforms		8911990						
ANR	8913143	Symbol	s -> transform_args		8911990						
ANR	8913144	Symbol	s -> wavelet_depth		8911990						
ANR	8913145	Symbol	s -> slice_min_bytes		8911990						
ANR	8913146	Symbol	p -> width		8911990						
ANR	8913147	Symbol	AVERROR_UNKNOWN		8911990						
ANR	8913148	Symbol	s -> num_y		8911990						
ANR	8913149	Symbol	s -> num_x		8911990						
ANR	8913150	Symbol	s -> ver . major		8911990						
ANR	8913151	Symbol	s -> coef_lut_len		8911990						
ANR	8913152	Symbol	s -> coef_lut_val		8911990						
ANR	8913153	Symbol	val_lut		8911990						
ANR	8913154	Symbol	s -> ver . minor		8911990						
ANR	8913155	Symbol	s -> plane [ 0 ] . dwt_width		8911990						
ANR	8913156	Symbol	s -> plane [ 0 ] . dwt_height		8911990						
ANR	8913157	Symbol	s -> ver		8911990						
ANR	8913158	Symbol	FFALIGN		8911990						
ANR	8913159	Symbol	avctx -> pix_fmt		8911990						
ANR	8913160	Symbol	av_pix_fmt_desc_get		8911990						
ANR	8913161	Symbol	b -> buf		8911990						
ANR	8913162	Symbol	p -> coef_buf		8911990						
ANR	8913163	Symbol	AV_LOG_INFO		8911990						
ANR	8913164	Symbol	s -> slice_height		8911990						
ANR	8913165	Symbol	avctx -> width		8911990						
ANR	8913166	Symbol	s -> plane [ i ] . dwt_height		8911990						
ANR	8913167	Symbol	fmt -> comp		8911990						
ANR	8913168	Symbol	* s -> transform_args		8911990						
ANR	8913169	Symbol	base_video_fmts [ i ] . level		8911990						
ANR	8913170	Symbol	avctx -> time_base		8911990						
ANR	8913171	Symbol	AVCOL_RANGE_MPEG		8911990						
ANR	8913172	Symbol	s -> plane [ i ] . coef_stride		8911990						
ANR	8913173	Symbol	len_lut		8911990						
ANR	8913174	Symbol	fmt -> time_base . num		8911990						
ANR	8913175	Symbol	* * s		8911990						
ANR	8913176	Symbol	avctx -> time_base . den		8911990						
ANR	8913177	Symbol	s -> slice_width		8911990						
ANR	8913178	Symbol	avctx -> color_range		8911990						
ANR	8913179	Symbol	fmt -> time_base		8911990						
ANR	8913180	Symbol	* * p		8911990						
ANR	8913181	Symbol	avctx		8911990						
ANR	8913182	Symbol	av_calloc		8911990						
ANR	8913183	Symbol	b		8911990						
ANR	8913184	Symbol	AV_LOG_ERROR		8911990						
ANR	8913185	Symbol	* s -> plane		8911990						
ANR	8913186	Symbol	fmt -> comp [ 0 ] . depth		8911990						
ANR	8913187	Symbol	fmt -> width		8911990						
ANR	8913188	Symbol	h		8911990						
ANR	8913189	Symbol	i		8911990						
ANR	8913190	Symbol	AVCOL_RANGE_UNSPECIFIED		8911990						
ANR	8913191	Symbol	j		8911990						
ANR	8913192	Symbol	fmt -> interlaced		8911990						
ANR	8913193	Symbol	o		8911990						
ANR	8913194	Symbol	p		8911990						
ANR	8913195	Symbol	s -> bpp		8911990						
ANR	8913196	Symbol	b -> height		8911990						
ANR	8913197	Symbol	depth		8911990						
ANR	8913198	Symbol	s		8911990						
ANR	8913199	Symbol	w		8911990						
ANR	8913200	Symbol	avctx -> field_order		8911990						
ANR	8913201	Symbol	fmt -> pix_fmt		8911990						
ANR	8913202	Symbol	AV_LOG_WARNING		8911990						
ANR	8913203	Symbol	p -> coef_stride		8911990						
ANR	8913204	Symbol	* base_video_fmts		8911990						
ANR	8913205	Symbol	p -> dwt_width		8911990						
ANR	8913206	Symbol	av_malloc		8911990						
ANR	8913207	Symbol	base_video_fmts_len		8911990						
ANR	8913208	Symbol	* s -> base_vf		8911990						
ANR	8913209	Symbol	p -> dwt_height		8911990						
ANR	8913210	Symbol	s -> q_ceil		8911990						
ANR	8913211	Symbol	s -> chroma_y_shift		8911990						
ANR	8913212	Symbol	fmt		8911990						
ANR	8913213	Symbol	* level		8911990						
ANR	8913214	Symbol	s -> diff_offset		8911990						
ANR	8913215	Symbol	s -> profile		8911990						
ANR	8913216	Symbol	fmt -> height		8911990						
ANR	8913217	Symbol	& s -> chroma_y_shift		8911990						
ANR	8913218	Symbol	base_video_fmts		8911990						
ANR	8913219	Symbol	* ff_dirac_qscale_tab		8911990						
ANR	8913220	Symbol	FF_COMPLIANCE_STRICT		8911990						
ANR	8913221	Symbol	ret		8911990						
ANR	8913222	Symbol	s -> bpp_idx		8911990						
ANR	8913223	Symbol	level		8911990						
ANR	8913224	Symbol	& s -> transform_args [ i ] . t		8911990						
ANR	8913225	Symbol	fmt -> time_base . den		8911990						
ANR	8913226	Symbol	s -> picture_number		8911990						
ANR	8913227	Symbol	base_video_fmts [ s -> base_vf ] . name		8911990						
ANR	8913228	Symbol	avctx -> strict_std_compliance		8911990						
ANR	8913229	Symbol	* avctx		8911990						
ANR	8913230	Symbol	AV_FIELD_UNKNOWN		8911990						
ANR	8913231	Symbol	AVCOL_RANGE_JPEG		8911990						
ANR	8913232	Symbol	COEF_LUT_TAB		8911990						
ANR	8913233	Symbol	s -> slice_args		8911990						
ANR	8913234	Symbol	QUANT		8911990						
ANR	8913235	Symbol	ff_dirac_qscale_tab		8911990						
ANR	8913236	Symbol	* s -> coef_lut_val		8911990						
ANR	8913237	Symbol	* fmt		8911990						
ANR	8913238	Symbol	s -> interlaced		8911990						
ANR	8913239	Symbol	b -> width		8911990						
ANR	8913240	Symbol	avctx -> time_base . num		8911990						
ANR	8913241	Symbol	avctx -> height		8911990						
ANR	8913242	Symbol	* val_lut		8911990						
ANR	8913243	Symbol	av_pix_fmt_get_chroma_sub_sample		8911990						
ANR	8913244	Symbol	p -> band		8911990						
ANR	8913245	Symbol	s -> plane		8911990						
ANR	8913246	Symbol	* * fmt		8911990						
ANR	8913247	Symbol	* p -> band		8911990						
ANR	8913248	Symbol	* fmt -> comp		8911990						
ANR	8913249	Symbol	DIRAC_MAX_QUANT_INDEX		8911990						
ANR	8913250	Symbol	avctx -> priv_data		8911990						
ANR	8913251	Symbol	s -> chroma_x_shift		8911990						
ANR	8913252	Symbol	* b		8911990						
ANR	8913253	Symbol	s -> slice_max_bytes		8911990						
ANR	8913254	Symbol	* i		8911990						
ANR	8913255	Symbol	* j		8911990						
ANR	8913256	Symbol	* p		8911990						
ANR	8913257	Symbol	AVERROR		8911990						
ANR	8913258	Symbol	* s		8911990						
ANR	8913259	Symbol	s -> level		8911990						
ANR	8913260	Symbol	& s -> chroma_x_shift		8911990						
ANR	8913261	Symbol	* s -> coef_lut_len		8911990						
ANR	8913262	Symbol	* len_lut		8911990						
