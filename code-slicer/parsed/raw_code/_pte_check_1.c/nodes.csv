command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	316301	File	/home/p4ultr4n/workplace/ReVeal/raw_code/_pte_check_1.c								
ANR	316302	Function	_pte_check	1:0:0:2230							
ANR	316303	FunctionDef	"_pte_check (mmu_ctx_t * ctx , int is_64b , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type)"		316302	0					
ANR	316304	CompoundStatement		7:0:205:2230	316302	0					
ANR	316305	IdentifierDeclStatement	"target_ulong ptem , mmask ;"	9:4:212:236	316302	0	True				
ANR	316306	IdentifierDecl	ptem		316302	0					
ANR	316307	IdentifierDeclType	target_ulong		316302	0					
ANR	316308	Identifier	ptem		316302	1					
ANR	316309	IdentifierDecl	mmask		316302	1					
ANR	316310	IdentifierDeclType	target_ulong		316302	0					
ANR	316311	Identifier	mmask		316302	1					
ANR	316312	IdentifierDeclStatement	"int access , ret , pteh , ptev , pp ;"	11:4:243:274	316302	1	True				
ANR	316313	IdentifierDecl	access		316302	0					
ANR	316314	IdentifierDeclType	int		316302	0					
ANR	316315	Identifier	access		316302	1					
ANR	316316	IdentifierDecl	ret		316302	1					
ANR	316317	IdentifierDeclType	int		316302	0					
ANR	316318	Identifier	ret		316302	1					
ANR	316319	IdentifierDecl	pteh		316302	2					
ANR	316320	IdentifierDeclType	int		316302	0					
ANR	316321	Identifier	pteh		316302	1					
ANR	316322	IdentifierDecl	ptev		316302	3					
ANR	316323	IdentifierDeclType	int		316302	0					
ANR	316324	Identifier	ptev		316302	1					
ANR	316325	IdentifierDecl	pp		316302	4					
ANR	316326	IdentifierDeclType	int		316302	0					
ANR	316327	Identifier	pp		316302	1					
ANR	316328	ExpressionStatement	access = 0	15:4:283:293	316302	2	True				
ANR	316329	AssignmentExpression	access = 0		316302	0		=			
ANR	316330	Identifier	access		316302	0					
ANR	316331	PrimaryExpression	0		316302	1					
ANR	316332	ExpressionStatement	ret = - 1	17:4:300:308	316302	3	True				
ANR	316333	AssignmentExpression	ret = - 1		316302	0		=			
ANR	316334	Identifier	ret		316302	0					
ANR	316335	UnaryOperationExpression	- 1		316302	1					
ANR	316336	UnaryOperator	-		316302	0					
ANR	316337	PrimaryExpression	1		316302	1					
ANR	316338	IfStatement	if ( is_64b )		316302	4					
ANR	316339	Condition	is_64b	23:8:388:393	316302	0	True				
ANR	316340	Identifier	is_64b		316302	0					
ANR	316341	CompoundStatement		17:16:190:190	316302	1					
ANR	316342	ExpressionStatement	ptev = pte64_is_valid ( pte0 )	25:8:407:434	316302	0	True				
ANR	316343	AssignmentExpression	ptev = pte64_is_valid ( pte0 )		316302	0		=			
ANR	316344	Identifier	ptev		316302	0					
ANR	316345	CallExpression	pte64_is_valid ( pte0 )		316302	1					
ANR	316346	Callee	pte64_is_valid		316302	0					
ANR	316347	Identifier	pte64_is_valid		316302	0					
ANR	316348	ArgumentList	pte0		316302	1					
ANR	316349	Argument	pte0		316302	0					
ANR	316350	Identifier	pte0		316302	0					
ANR	316351	ExpressionStatement	pteh = ( pte0 >> 1 ) & 1	27:8:445:467	316302	1	True				
ANR	316352	AssignmentExpression	pteh = ( pte0 >> 1 ) & 1		316302	0		=			
ANR	316353	Identifier	pteh		316302	0					
ANR	316354	BitAndExpression	( pte0 >> 1 ) & 1		316302	1		&			
ANR	316355	ShiftExpression	pte0 >> 1		316302	0		>>			
ANR	316356	Identifier	pte0		316302	0					
ANR	316357	PrimaryExpression	1		316302	1					
ANR	316358	PrimaryExpression	1		316302	1					
ANR	316359	ElseStatement	else		316302	0					
ANR	316360	CompoundStatement		27:4:288:288	316302	0					
ANR	316361	ExpressionStatement	ptev = pte_is_valid ( pte0 )	35:8:505:530	316302	0	True				
ANR	316362	AssignmentExpression	ptev = pte_is_valid ( pte0 )		316302	0		=			
ANR	316363	Identifier	ptev		316302	0					
ANR	316364	CallExpression	pte_is_valid ( pte0 )		316302	1					
ANR	316365	Callee	pte_is_valid		316302	0					
ANR	316366	Identifier	pte_is_valid		316302	0					
ANR	316367	ArgumentList	pte0		316302	1					
ANR	316368	Argument	pte0		316302	0					
ANR	316369	Identifier	pte0		316302	0					
ANR	316370	ExpressionStatement	pteh = ( pte0 >> 6 ) & 1	37:8:541:563	316302	1	True				
ANR	316371	AssignmentExpression	pteh = ( pte0 >> 6 ) & 1		316302	0		=			
ANR	316372	Identifier	pteh		316302	0					
ANR	316373	BitAndExpression	( pte0 >> 6 ) & 1		316302	1		&			
ANR	316374	ShiftExpression	pte0 >> 6		316302	0		>>			
ANR	316375	Identifier	pte0		316302	0					
ANR	316376	PrimaryExpression	6		316302	1					
ANR	316377	PrimaryExpression	1		316302	1					
ANR	316378	IfStatement	if ( ptev && h == pteh )		316302	5					
ANR	316379	Condition	ptev && h == pteh	41:8:581:597	316302	0	True				
ANR	316380	AndExpression	ptev && h == pteh		316302	0		&&			
ANR	316381	Identifier	ptev		316302	0					
ANR	316382	EqualityExpression	h == pteh		316302	1		==			
ANR	316383	Identifier	h		316302	0					
ANR	316384	Identifier	pteh		316302	1					
ANR	316385	CompoundStatement		35:27:394:394	316302	1					
ANR	316386	IfStatement	if ( is_64b )		316302	0					
ANR	316387	Condition	is_64b	47:12:674:679	316302	0	True				
ANR	316388	Identifier	is_64b		316302	0					
ANR	316389	CompoundStatement		41:20:476:476	316302	1					
ANR	316390	ExpressionStatement	ptem = pte0 & PTE64_PTEM_MASK	49:12:697:726	316302	0	True				
ANR	316391	AssignmentExpression	ptem = pte0 & PTE64_PTEM_MASK		316302	0		=			
ANR	316392	Identifier	ptem		316302	0					
ANR	316393	BitAndExpression	pte0 & PTE64_PTEM_MASK		316302	1		&			
ANR	316394	Identifier	pte0		316302	0					
ANR	316395	Identifier	PTE64_PTEM_MASK		316302	1					
ANR	316396	ExpressionStatement	mmask = PTE64_CHECK_MASK	51:12:741:765	316302	1	True				
ANR	316397	AssignmentExpression	mmask = PTE64_CHECK_MASK		316302	0		=			
ANR	316398	Identifier	mmask		316302	0					
ANR	316399	Identifier	PTE64_CHECK_MASK		316302	1					
ANR	316400	ExpressionStatement	pp = ( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )	53:12:780:834	316302	2	True				
ANR	316401	AssignmentExpression	pp = ( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )		316302	0		=			
ANR	316402	Identifier	pp		316302	0					
ANR	316403	InclusiveOrExpression	( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )		316302	1		|			
ANR	316404	BitAndExpression	pte1 & 0x00000003		316302	0		&			
ANR	316405	Identifier	pte1		316302	0					
ANR	316406	PrimaryExpression	0x00000003		316302	1					
ANR	316407	BitAndExpression	( pte1 >> 61 ) & 0x00000004		316302	1		&			
ANR	316408	ShiftExpression	pte1 >> 61		316302	0		>>			
ANR	316409	Identifier	pte1		316302	0					
ANR	316410	PrimaryExpression	61		316302	1					
ANR	316411	PrimaryExpression	0x00000004		316302	1					
ANR	316412	ExpressionStatement	ctx -> nx |= ( pte1 >> 2 ) & 1	55:12:849:875	316302	3	True				
ANR	316413	AssignmentExpression	ctx -> nx |= ( pte1 >> 2 ) & 1		316302	0		|=			
ANR	316414	PtrMemberAccess	ctx -> nx		316302	0					
ANR	316415	Identifier	ctx		316302	0					
ANR	316416	Identifier	nx		316302	1					
ANR	316417	BitAndExpression	( pte1 >> 2 ) & 1		316302	1		&			
ANR	316418	ShiftExpression	pte1 >> 2		316302	0		>>			
ANR	316419	Identifier	pte1		316302	0					
ANR	316420	PrimaryExpression	2		316302	1					
ANR	316421	PrimaryExpression	1		316302	1					
ANR	316422	ExpressionStatement	ctx -> nx |= ( pte1 >> 3 ) & 1	57:12:911:937	316302	4	True				
ANR	316423	AssignmentExpression	ctx -> nx |= ( pte1 >> 3 ) & 1		316302	0		|=			
ANR	316424	PtrMemberAccess	ctx -> nx		316302	0					
ANR	316425	Identifier	ctx		316302	0					
ANR	316426	Identifier	nx		316302	1					
ANR	316427	BitAndExpression	( pte1 >> 3 ) & 1		316302	1		&			
ANR	316428	ShiftExpression	pte1 >> 3		316302	0		>>			
ANR	316429	Identifier	pte1		316302	0					
ANR	316430	PrimaryExpression	3		316302	1					
ANR	316431	PrimaryExpression	1		316302	1					
ANR	316432	ElseStatement	else		316302	0					
ANR	316433	CompoundStatement		57:8:787:787	316302	0					
ANR	316434	ExpressionStatement	ptem = pte0 & PTE_PTEM_MASK	65:12:1008:1035	316302	0	True				
ANR	316435	AssignmentExpression	ptem = pte0 & PTE_PTEM_MASK		316302	0		=			
ANR	316436	Identifier	ptem		316302	0					
ANR	316437	BitAndExpression	pte0 & PTE_PTEM_MASK		316302	1		&			
ANR	316438	Identifier	pte0		316302	0					
ANR	316439	Identifier	PTE_PTEM_MASK		316302	1					
ANR	316440	ExpressionStatement	mmask = PTE_CHECK_MASK	67:12:1050:1072	316302	1	True				
ANR	316441	AssignmentExpression	mmask = PTE_CHECK_MASK		316302	0		=			
ANR	316442	Identifier	mmask		316302	0					
ANR	316443	Identifier	PTE_CHECK_MASK		316302	1					
ANR	316444	ExpressionStatement	pp = pte1 & 0x00000003	69:12:1087:1109	316302	2	True				
ANR	316445	AssignmentExpression	pp = pte1 & 0x00000003		316302	0		=			
ANR	316446	Identifier	pp		316302	0					
ANR	316447	BitAndExpression	pte1 & 0x00000003		316302	1		&			
ANR	316448	Identifier	pte1		316302	0					
ANR	316449	PrimaryExpression	0x00000003		316302	1					
ANR	316450	IfStatement	if ( ptem == ctx -> ptem )		316302	1					
ANR	316451	Condition	ptem == ctx -> ptem	73:12:1135:1151	316302	0	True				
ANR	316452	EqualityExpression	ptem == ctx -> ptem		316302	0		==			
ANR	316453	Identifier	ptem		316302	0					
ANR	316454	PtrMemberAccess	ctx -> ptem		316302	1					
ANR	316455	Identifier	ctx		316302	0					
ANR	316456	Identifier	ptem		316302	1					
ANR	316457	CompoundStatement		67:31:948:948	316302	1					
ANR	316458	IfStatement	if ( ctx -> raddr != ( target_ulong ) - 1 )		316302	0					
ANR	316459	Condition	ctx -> raddr != ( target_ulong ) - 1	75:16:1173:1202	316302	0	True				
ANR	316460	EqualityExpression	ctx -> raddr != ( target_ulong ) - 1		316302	0		!=			
ANR	316461	PtrMemberAccess	ctx -> raddr		316302	0					
ANR	316462	Identifier	ctx		316302	0					
ANR	316463	Identifier	raddr		316302	1					
ANR	316464	CastExpression	( target_ulong ) - 1		316302	1					
ANR	316465	CastTarget	target_ulong		316302	0					
ANR	316466	UnaryOperationExpression	- 1		316302	1					
ANR	316467	UnaryOperator	-		316302	0					
ANR	316468	PrimaryExpression	1		316302	1					
ANR	316469	CompoundStatement		69:48:999:999	316302	1					
ANR	316470	IfStatement	if ( ( ctx -> raddr & mmask ) != ( pte1 & mmask ) )		316302	0					
ANR	316471	Condition	( ctx -> raddr & mmask ) != ( pte1 & mmask )	79:20:1296:1333	316302	0	True				
ANR	316472	EqualityExpression	( ctx -> raddr & mmask ) != ( pte1 & mmask )		316302	0		!=			
ANR	316473	BitAndExpression	ctx -> raddr & mmask		316302	0		&			
ANR	316474	PtrMemberAccess	ctx -> raddr		316302	0					
ANR	316475	Identifier	ctx		316302	0					
ANR	316476	Identifier	raddr		316302	1					
ANR	316477	Identifier	mmask		316302	1					
ANR	316478	BitAndExpression	pte1 & mmask		316302	1		&			
ANR	316479	Identifier	pte1		316302	0					
ANR	316480	Identifier	mmask		316302	1					
ANR	316481	CompoundStatement		73:60:1130:1130	316302	1					
ANR	316482	IfStatement	if ( loglevel != 0 )		316302	0					
ANR	316483	Condition	loglevel != 0	81:24:1363:1375	316302	0	True				
ANR	316484	EqualityExpression	loglevel != 0		316302	0		!=			
ANR	316485	Identifier	loglevel		316302	0					
ANR	316486	PrimaryExpression	0		316302	1					
ANR	316487	ExpressionStatement	"fprintf ( logfile , ""Bad RPN/WIMG/PP\\n"" )"	83:24:1403:1440	316302	1	True				
ANR	316488	CallExpression	"fprintf ( logfile , ""Bad RPN/WIMG/PP\\n"" )"		316302	0					
ANR	316489	Callee	fprintf		316302	0					
ANR	316490	Identifier	fprintf		316302	0					
ANR	316491	ArgumentList	logfile		316302	1					
ANR	316492	Argument	logfile		316302	0					
ANR	316493	Identifier	logfile		316302	0					
ANR	316494	Argument	"""Bad RPN/WIMG/PP\\n"""		316302	1					
ANR	316495	PrimaryExpression	"""Bad RPN/WIMG/PP\\n"""		316302	0					
ANR	316496	ReturnStatement	return - 3 ;	85:20:1463:1472	316302	1	True				
ANR	316497	UnaryOperationExpression	- 3		316302	0					
ANR	316498	UnaryOperator	-		316302	0					
ANR	316499	PrimaryExpression	3		316302	1					
ANR	316500	ExpressionStatement	"access = pp_check ( ctx -> key , pp , ctx -> nx )"	93:12:1562:1602	316302	1	True				
ANR	316501	AssignmentExpression	"access = pp_check ( ctx -> key , pp , ctx -> nx )"		316302	0		=			
ANR	316502	Identifier	access		316302	0					
ANR	316503	CallExpression	"pp_check ( ctx -> key , pp , ctx -> nx )"		316302	1					
ANR	316504	Callee	pp_check		316302	0					
ANR	316505	Identifier	pp_check		316302	0					
ANR	316506	ArgumentList	ctx -> key		316302	1					
ANR	316507	Argument	ctx -> key		316302	0					
ANR	316508	PtrMemberAccess	ctx -> key		316302	0					
ANR	316509	Identifier	ctx		316302	0					
ANR	316510	Identifier	key		316302	1					
ANR	316511	Argument	pp		316302	1					
ANR	316512	Identifier	pp		316302	0					
ANR	316513	Argument	ctx -> nx		316302	2					
ANR	316514	PtrMemberAccess	ctx -> nx		316302	0					
ANR	316515	Identifier	ctx		316302	0					
ANR	316516	Identifier	nx		316302	1					
ANR	316517	ExpressionStatement	ctx -> raddr = pte1	97:12:1671:1688	316302	2	True				
ANR	316518	AssignmentExpression	ctx -> raddr = pte1		316302	0		=			
ANR	316519	PtrMemberAccess	ctx -> raddr		316302	0					
ANR	316520	Identifier	ctx		316302	0					
ANR	316521	Identifier	raddr		316302	1					
ANR	316522	Identifier	pte1		316302	1					
ANR	316523	ExpressionStatement	ctx -> prot = access	99:12:1703:1721	316302	3	True				
ANR	316524	AssignmentExpression	ctx -> prot = access		316302	0		=			
ANR	316525	PtrMemberAccess	ctx -> prot		316302	0					
ANR	316526	Identifier	ctx		316302	0					
ANR	316527	Identifier	prot		316302	1					
ANR	316528	Identifier	access		316302	1					
ANR	316529	ExpressionStatement	"ret = check_prot ( ctx -> prot , rw , type )"	101:12:1736:1773	316302	4	True				
ANR	316530	AssignmentExpression	"ret = check_prot ( ctx -> prot , rw , type )"		316302	0		=			
ANR	316531	Identifier	ret		316302	0					
ANR	316532	CallExpression	"check_prot ( ctx -> prot , rw , type )"		316302	1					
ANR	316533	Callee	check_prot		316302	0					
ANR	316534	Identifier	check_prot		316302	0					
ANR	316535	ArgumentList	ctx -> prot		316302	1					
ANR	316536	Argument	ctx -> prot		316302	0					
ANR	316537	PtrMemberAccess	ctx -> prot		316302	0					
ANR	316538	Identifier	ctx		316302	0					
ANR	316539	Identifier	prot		316302	1					
ANR	316540	Argument	rw		316302	1					
ANR	316541	Identifier	rw		316302	0					
ANR	316542	Argument	type		316302	2					
ANR	316543	Identifier	type		316302	0					
ANR	316544	IfStatement	if ( ret == 0 )		316302	5					
ANR	316545	Condition	ret == 0	103:16:1792:1799	316302	0	True				
ANR	316546	EqualityExpression	ret == 0		316302	0		==			
ANR	316547	Identifier	ret		316302	0					
ANR	316548	PrimaryExpression	0		316302	1					
ANR	316549	CompoundStatement		97:26:1596:1596	316302	1					
ANR	316550	IfStatement	if ( loglevel != 0 )		316302	0					
ANR	316551	Condition	loglevel != 0	109:20:1888:1900	316302	0	True				
ANR	316552	EqualityExpression	loglevel != 0		316302	0		!=			
ANR	316553	Identifier	loglevel		316302	0					
ANR	316554	PrimaryExpression	0		316302	1					
ANR	316555	ExpressionStatement	"fprintf ( logfile , ""PTE access granted !\\n"" )"	111:20:1924:1966	316302	1	True				
ANR	316556	CallExpression	"fprintf ( logfile , ""PTE access granted !\\n"" )"		316302	0					
ANR	316557	Callee	fprintf		316302	0					
ANR	316558	Identifier	fprintf		316302	0					
ANR	316559	ArgumentList	logfile		316302	1					
ANR	316560	Argument	logfile		316302	0					
ANR	316561	Identifier	logfile		316302	0					
ANR	316562	Argument	"""PTE access granted !\\n"""		316302	1					
ANR	316563	PrimaryExpression	"""PTE access granted !\\n"""		316302	0					
ANR	316564	ElseStatement	else		316302	0					
ANR	316565	CompoundStatement		109:19:1790:1790	316302	0					
ANR	316566	IfStatement	if ( loglevel != 0 )		316302	0					
ANR	316567	Condition	loglevel != 0	121:20:2090:2102	316302	0	True				
ANR	316568	EqualityExpression	loglevel != 0		316302	0		!=			
ANR	316569	Identifier	loglevel		316302	0					
ANR	316570	PrimaryExpression	0		316302	1					
ANR	316571	ExpressionStatement	"fprintf ( logfile , ""PTE access rejected\\n"" )"	123:20:2126:2167	316302	1	True				
ANR	316572	CallExpression	"fprintf ( logfile , ""PTE access rejected\\n"" )"		316302	0					
ANR	316573	Callee	fprintf		316302	0					
ANR	316574	Identifier	fprintf		316302	0					
ANR	316575	ArgumentList	logfile		316302	1					
ANR	316576	Argument	logfile		316302	0					
ANR	316577	Identifier	logfile		316302	0					
ANR	316578	Argument	"""PTE access rejected\\n"""		316302	1					
ANR	316579	PrimaryExpression	"""PTE access rejected\\n"""		316302	0					
ANR	316580	ReturnStatement	return ret ;	135:4:2217:2227	316302	6	True				
ANR	316581	Identifier	ret		316302	0					
ANR	316582	ReturnType	static always_inline int		316302	1					
ANR	316583	Identifier	_pte_check		316302	2					
ANR	316584	ParameterList	"mmu_ctx_t * ctx , int is_64b , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type"		316302	3					
ANR	316585	Parameter	mmu_ctx_t * ctx	1:37:37:50	316302	0	True				
ANR	316586	ParameterType	mmu_ctx_t *		316302	0					
ANR	316587	Identifier	ctx		316302	1					
ANR	316588	Parameter	int is_64b	1:53:53:62	316302	1	True				
ANR	316589	ParameterType	int		316302	0					
ANR	316590	Identifier	is_64b		316302	1					
ANR	316591	Parameter	target_ulong pte0	3:37:103:119	316302	2	True				
ANR	316592	ParameterType	target_ulong		316302	0					
ANR	316593	Identifier	pte0		316302	1					
ANR	316594	Parameter	target_ulong pte1	3:56:122:138	316302	3	True				
ANR	316595	ParameterType	target_ulong		316302	0					
ANR	316596	Identifier	pte1		316302	1					
ANR	316597	Parameter	int h	5:37:179:183	316302	4	True				
ANR	316598	ParameterType	int		316302	0					
ANR	316599	Identifier	h		316302	1					
ANR	316600	Parameter	int rw	5:44:186:191	316302	5	True				
ANR	316601	ParameterType	int		316302	0					
ANR	316602	Identifier	rw		316302	1					
ANR	316603	Parameter	int type	5:52:194:201	316302	6	True				
ANR	316604	ParameterType	int		316302	0					
ANR	316605	Identifier	type		316302	1					
ANR	316606	CFGEntryNode	ENTRY		316302		True				
ANR	316607	CFGExitNode	EXIT		316302		True				
ANR	316608	Symbol	pp		316302						
ANR	316609	Symbol	ptev		316302						
ANR	316610	Symbol	access		316302						
ANR	316611	Symbol	pte1		316302						
ANR	316612	Symbol	rw		316302						
ANR	316613	Symbol	ctx -> key		316302						
ANR	316614	Symbol	type		316302						
ANR	316615	Symbol	pte_is_valid		316302						
ANR	316616	Symbol	pteh		316302						
ANR	316617	Symbol	ctx -> prot		316302						
ANR	316618	Symbol	PTE64_CHECK_MASK		316302						
ANR	316619	Symbol	ptem		316302						
ANR	316620	Symbol	PTE_PTEM_MASK		316302						
ANR	316621	Symbol	pte0		316302						
ANR	316622	Symbol	pte64_is_valid		316302						
ANR	316623	Symbol	ret		316302						
ANR	316624	Symbol	is_64b		316302						
ANR	316625	Symbol	ctx		316302						
ANR	316626	Symbol	logfile		316302						
ANR	316627	Symbol	check_prot		316302						
ANR	316628	Symbol	h		316302						
ANR	316629	Symbol	mmask		316302						
ANR	316630	Symbol	ctx -> ptem		316302						
ANR	316631	Symbol	* ctx		316302						
ANR	316632	Symbol	PTE_CHECK_MASK		316302						
ANR	316633	Symbol	PTE64_PTEM_MASK		316302						
ANR	316634	Symbol	pp_check		316302						
ANR	316635	Symbol	loglevel		316302						
ANR	316636	Symbol	ctx -> raddr		316302						
ANR	316637	Symbol	ctx -> nx		316302						
