command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	340497	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_encode_init_0.c								
ANR	340498	Function	aac_encode_init	1:0:0:7657							
ANR	340499	FunctionDef	aac_encode_init (AVCodecContext * avctx)		340498	0					
ANR	340500	CompoundStatement		3:0:59:7657	340498	0					
ANR	340501	IdentifierDeclStatement	AACContext * s = avctx -> priv_data ;	5:4:66:98	340498	0	True				
ANR	340502	IdentifierDecl	* s = avctx -> priv_data		340498	0					
ANR	340503	IdentifierDeclType	AACContext *		340498	0					
ANR	340504	Identifier	s		340498	1					
ANR	340505	AssignmentExpression	* s = avctx -> priv_data		340498	2		=			
ANR	340506	Identifier	s		340498	0					
ANR	340507	PtrMemberAccess	avctx -> priv_data		340498	1					
ANR	340508	Identifier	avctx		340498	0					
ANR	340509	Identifier	priv_data		340498	1					
ANR	340510	IdentifierDeclStatement	int ret = AVERROR ( EINVAL ) ;	7:4:105:130	340498	1	True				
ANR	340511	IdentifierDecl	ret = AVERROR ( EINVAL )		340498	0					
ANR	340512	IdentifierDeclType	int		340498	0					
ANR	340513	Identifier	ret		340498	1					
ANR	340514	AssignmentExpression	ret = AVERROR ( EINVAL )		340498	2		=			
ANR	340515	Identifier	ret		340498	0					
ANR	340516	CallExpression	AVERROR ( EINVAL )		340498	1					
ANR	340517	Callee	AVERROR		340498	0					
ANR	340518	Identifier	AVERROR		340498	0					
ANR	340519	ArgumentList	EINVAL		340498	1					
ANR	340520	Argument	EINVAL		340498	0					
ANR	340521	Identifier	EINVAL		340498	0					
ANR	340522	IdentifierDeclStatement	AACENC_InfoStruct info = { 0 } ;	9:4:137:167	340498	2	True				
ANR	340523	IdentifierDecl	info = { 0 }		340498	0					
ANR	340524	IdentifierDeclType	AACENC_InfoStruct		340498	0					
ANR	340525	Identifier	info		340498	1					
ANR	340526	AssignmentExpression	info = { 0 }		340498	2		=			
ANR	340527	Identifier	info		340498	0					
ANR	340528	InitializerList	0		340498	1					
ANR	340529	PrimaryExpression	0		340498	0					
ANR	340530	IdentifierDeclStatement	CHANNEL_MODE mode ;	11:4:174:191	340498	3	True				
ANR	340531	IdentifierDecl	mode		340498	0					
ANR	340532	IdentifierDeclType	CHANNEL_MODE		340498	0					
ANR	340533	Identifier	mode		340498	1					
ANR	340534	IdentifierDeclStatement	AACENC_ERROR err ;	13:4:198:214	340498	4	True				
ANR	340535	IdentifierDecl	err		340498	0					
ANR	340536	IdentifierDeclType	AACENC_ERROR		340498	0					
ANR	340537	Identifier	err		340498	1					
ANR	340538	IdentifierDeclStatement	int aot = FF_PROFILE_AAC_LOW + 1 ;	15:4:221:253	340498	5	True				
ANR	340539	IdentifierDecl	aot = FF_PROFILE_AAC_LOW + 1		340498	0					
ANR	340540	IdentifierDeclType	int		340498	0					
ANR	340541	Identifier	aot		340498	1					
ANR	340542	AssignmentExpression	aot = FF_PROFILE_AAC_LOW + 1		340498	2		=			
ANR	340543	Identifier	aot		340498	0					
ANR	340544	AdditiveExpression	FF_PROFILE_AAC_LOW + 1		340498	1		+			
ANR	340545	Identifier	FF_PROFILE_AAC_LOW		340498	0					
ANR	340546	PrimaryExpression	1		340498	1					
ANR	340547	IdentifierDeclStatement	"int sce = 0 , cpe = 0 ;"	17:4:260:280	340498	6	True				
ANR	340548	IdentifierDecl	sce = 0		340498	0					
ANR	340549	IdentifierDeclType	int		340498	0					
ANR	340550	Identifier	sce		340498	1					
ANR	340551	AssignmentExpression	sce = 0		340498	2		=			
ANR	340552	Identifier	sce		340498	0					
ANR	340553	PrimaryExpression	0		340498	1					
ANR	340554	IdentifierDecl	cpe = 0		340498	1					
ANR	340555	IdentifierDeclType	int		340498	0					
ANR	340556	Identifier	cpe		340498	1					
ANR	340557	AssignmentExpression	cpe = 0		340498	2		=			
ANR	340558	Identifier	cpe		340498	0					
ANR	340559	PrimaryExpression	0		340498	1					
ANR	340560	IfStatement	"if ( ( err = aacEncOpen ( & s -> handle , 0 , avctx -> channels ) ) != AACENC_OK )"		340498	7					
ANR	340561	Condition	"( err = aacEncOpen ( & s -> handle , 0 , avctx -> channels ) ) != AACENC_OK"	21:8:293:355	340498	0	True				
ANR	340562	EqualityExpression	"( err = aacEncOpen ( & s -> handle , 0 , avctx -> channels ) ) != AACENC_OK"		340498	0		!=			
ANR	340563	AssignmentExpression	"err = aacEncOpen ( & s -> handle , 0 , avctx -> channels )"		340498	0		=			
ANR	340564	Identifier	err		340498	0					
ANR	340565	CallExpression	"aacEncOpen ( & s -> handle , 0 , avctx -> channels )"		340498	1					
ANR	340566	Callee	aacEncOpen		340498	0					
ANR	340567	Identifier	aacEncOpen		340498	0					
ANR	340568	ArgumentList	& s -> handle		340498	1					
ANR	340569	Argument	& s -> handle		340498	0					
ANR	340570	UnaryOperationExpression	& s -> handle		340498	0					
ANR	340571	UnaryOperator	&		340498	0					
ANR	340572	PtrMemberAccess	s -> handle		340498	1					
ANR	340573	Identifier	s		340498	0					
ANR	340574	Identifier	handle		340498	1					
ANR	340575	Argument	0		340498	1					
ANR	340576	PrimaryExpression	0		340498	0					
ANR	340577	Argument	avctx -> channels		340498	2					
ANR	340578	PtrMemberAccess	avctx -> channels		340498	0					
ANR	340579	Identifier	avctx		340498	0					
ANR	340580	Identifier	channels		340498	1					
ANR	340581	Identifier	AACENC_OK		340498	1					
ANR	340582	CompoundStatement		19:73:298:298	340498	1					
ANR	340583	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to open the encoder: %s\\n"" , aac_get_error ( err ) )"	23:8:369:468	340498	0	True				
ANR	340584	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to open the encoder: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	340585	Callee	av_log		340498	0					
ANR	340586	Identifier	av_log		340498	0					
ANR	340587	ArgumentList	avctx		340498	1					
ANR	340588	Argument	avctx		340498	0					
ANR	340589	Identifier	avctx		340498	0					
ANR	340590	Argument	AV_LOG_ERROR		340498	1					
ANR	340591	Identifier	AV_LOG_ERROR		340498	0					
ANR	340592	Argument	"""Unable to open the encoder: %s\\n"""		340498	2					
ANR	340593	PrimaryExpression	"""Unable to open the encoder: %s\\n"""		340498	0					
ANR	340594	Argument	aac_get_error ( err )		340498	3					
ANR	340595	CallExpression	aac_get_error ( err )		340498	0					
ANR	340596	Callee	aac_get_error		340498	0					
ANR	340597	Identifier	aac_get_error		340498	0					
ANR	340598	ArgumentList	err		340498	1					
ANR	340599	Argument	err		340498	0					
ANR	340600	Identifier	err		340498	0					
ANR	340601	GotoStatement	goto error ;	27:8:479:489	340498	1	True				
ANR	340602	Identifier	error		340498	0					
ANR	340603	IfStatement	if ( avctx -> profile != FF_PROFILE_UNKNOWN )		340498	8					
ANR	340604	Condition	avctx -> profile != FF_PROFILE_UNKNOWN	33:8:509:544	340498	0	True				
ANR	340605	EqualityExpression	avctx -> profile != FF_PROFILE_UNKNOWN		340498	0		!=			
ANR	340606	PtrMemberAccess	avctx -> profile		340498	0					
ANR	340607	Identifier	avctx		340498	0					
ANR	340608	Identifier	profile		340498	1					
ANR	340609	Identifier	FF_PROFILE_UNKNOWN		340498	1					
ANR	340610	ExpressionStatement	aot = avctx -> profile + 1	35:8:556:580	340498	1	True				
ANR	340611	AssignmentExpression	aot = avctx -> profile + 1		340498	0		=			
ANR	340612	Identifier	aot		340498	0					
ANR	340613	AdditiveExpression	avctx -> profile + 1		340498	1		+			
ANR	340614	PtrMemberAccess	avctx -> profile		340498	0					
ANR	340615	Identifier	avctx		340498	0					
ANR	340616	Identifier	profile		340498	1					
ANR	340617	PrimaryExpression	1		340498	1					
ANR	340618	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_AOT , aot ) ) != AACENC_OK )"		340498	9					
ANR	340619	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_AOT , aot ) ) != AACENC_OK"	39:8:593:660	340498	0	True				
ANR	340620	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_AOT , aot ) ) != AACENC_OK"		340498	0		!=			
ANR	340621	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_AOT , aot )"		340498	0		=			
ANR	340622	Identifier	err		340498	0					
ANR	340623	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_AOT , aot )"		340498	1					
ANR	340624	Callee	aacEncoder_SetParam		340498	0					
ANR	340625	Identifier	aacEncoder_SetParam		340498	0					
ANR	340626	ArgumentList	s -> handle		340498	1					
ANR	340627	Argument	s -> handle		340498	0					
ANR	340628	PtrMemberAccess	s -> handle		340498	0					
ANR	340629	Identifier	s		340498	0					
ANR	340630	Identifier	handle		340498	1					
ANR	340631	Argument	AACENC_AOT		340498	1					
ANR	340632	Identifier	AACENC_AOT		340498	0					
ANR	340633	Argument	aot		340498	2					
ANR	340634	Identifier	aot		340498	0					
ANR	340635	Identifier	AACENC_OK		340498	1					
ANR	340636	CompoundStatement		37:78:603:603	340498	1					
ANR	340637	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the AOT %d: %s\\n"" , aot , aac_get_error ( err ) )"	41:8:674:776	340498	0	True				
ANR	340638	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the AOT %d: %s\\n"" , aot , aac_get_error ( err ) )"		340498	0					
ANR	340639	Callee	av_log		340498	0					
ANR	340640	Identifier	av_log		340498	0					
ANR	340641	ArgumentList	avctx		340498	1					
ANR	340642	Argument	avctx		340498	0					
ANR	340643	Identifier	avctx		340498	0					
ANR	340644	Argument	AV_LOG_ERROR		340498	1					
ANR	340645	Identifier	AV_LOG_ERROR		340498	0					
ANR	340646	Argument	"""Unable to set the AOT %d: %s\\n"""		340498	2					
ANR	340647	PrimaryExpression	"""Unable to set the AOT %d: %s\\n"""		340498	0					
ANR	340648	Argument	aot		340498	3					
ANR	340649	Identifier	aot		340498	0					
ANR	340650	Argument	aac_get_error ( err )		340498	4					
ANR	340651	CallExpression	aac_get_error ( err )		340498	0					
ANR	340652	Callee	aac_get_error		340498	0					
ANR	340653	Identifier	aac_get_error		340498	0					
ANR	340654	ArgumentList	err		340498	1					
ANR	340655	Argument	err		340498	0					
ANR	340656	Identifier	err		340498	0					
ANR	340657	GotoStatement	goto error ;	45:8:787:797	340498	1	True				
ANR	340658	Identifier	error		340498	0					
ANR	340659	IfStatement	if ( aot == FF_PROFILE_AAC_ELD + 1 && s -> eld_sbr )		340498	10					
ANR	340660	Condition	aot == FF_PROFILE_AAC_ELD + 1 && s -> eld_sbr	51:8:817:859	340498	0	True				
ANR	340661	AndExpression	aot == FF_PROFILE_AAC_ELD + 1 && s -> eld_sbr		340498	0		&&			
ANR	340662	EqualityExpression	aot == FF_PROFILE_AAC_ELD + 1		340498	0		==			
ANR	340663	Identifier	aot		340498	0					
ANR	340664	AdditiveExpression	FF_PROFILE_AAC_ELD + 1		340498	1		+			
ANR	340665	Identifier	FF_PROFILE_AAC_ELD		340498	0					
ANR	340666	PrimaryExpression	1		340498	1					
ANR	340667	PtrMemberAccess	s -> eld_sbr		340498	1					
ANR	340668	Identifier	s		340498	0					
ANR	340669	Identifier	eld_sbr		340498	1					
ANR	340670	CompoundStatement		49:53:802:802	340498	1					
ANR	340671	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_SBR_MODE , 1 ) ) != AACENC_OK )"		340498	0					
ANR	340672	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SBR_MODE , 1 ) ) != AACENC_OK"	53:12:877:987	340498	0	True				
ANR	340673	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SBR_MODE , 1 ) ) != AACENC_OK"		340498	0		!=			
ANR	340674	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_SBR_MODE , 1 )"		340498	0		=			
ANR	340675	Identifier	err		340498	0					
ANR	340676	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_SBR_MODE , 1 )"		340498	1					
ANR	340677	Callee	aacEncoder_SetParam		340498	0					
ANR	340678	Identifier	aacEncoder_SetParam		340498	0					
ANR	340679	ArgumentList	s -> handle		340498	1					
ANR	340680	Argument	s -> handle		340498	0					
ANR	340681	PtrMemberAccess	s -> handle		340498	0					
ANR	340682	Identifier	s		340498	0					
ANR	340683	Identifier	handle		340498	1					
ANR	340684	Argument	AACENC_SBR_MODE		340498	1					
ANR	340685	Identifier	AACENC_SBR_MODE		340498	0					
ANR	340686	Argument	1		340498	2					
ANR	340687	PrimaryExpression	1		340498	0					
ANR	340688	Identifier	AACENC_OK		340498	1					
ANR	340689	CompoundStatement		53:57:930:930	340498	1					
ANR	340690	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to enable SBR for ELD: %s\\n"" , aac_get_error ( err ) )"	57:12:1005:1110	340498	0	True				
ANR	340691	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to enable SBR for ELD: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	340692	Callee	av_log		340498	0					
ANR	340693	Identifier	av_log		340498	0					
ANR	340694	ArgumentList	avctx		340498	1					
ANR	340695	Argument	avctx		340498	0					
ANR	340696	Identifier	avctx		340498	0					
ANR	340697	Argument	AV_LOG_ERROR		340498	1					
ANR	340698	Identifier	AV_LOG_ERROR		340498	0					
ANR	340699	Argument	"""Unable to enable SBR for ELD: %s\\n"""		340498	2					
ANR	340700	PrimaryExpression	"""Unable to enable SBR for ELD: %s\\n"""		340498	0					
ANR	340701	Argument	aac_get_error ( err )		340498	3					
ANR	340702	CallExpression	aac_get_error ( err )		340498	0					
ANR	340703	Callee	aac_get_error		340498	0					
ANR	340704	Identifier	aac_get_error		340498	0					
ANR	340705	ArgumentList	err		340498	1					
ANR	340706	Argument	err		340498	0					
ANR	340707	Identifier	err		340498	0					
ANR	340708	GotoStatement	goto error ;	61:12:1125:1135	340498	1	True				
ANR	340709	Identifier	error		340498	0					
ANR	340710	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_SAMPLERATE , avctx -> sample_rate ) ) != AACENC_OK )"		340498	11					
ANR	340711	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SAMPLERATE , avctx -> sample_rate ) ) != AACENC_OK"	69:8:1166:1291	340498	0	True				
ANR	340712	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SAMPLERATE , avctx -> sample_rate ) ) != AACENC_OK"		340498	0		!=			
ANR	340713	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_SAMPLERATE , avctx -> sample_rate )"		340498	0		=			
ANR	340714	Identifier	err		340498	0					
ANR	340715	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_SAMPLERATE , avctx -> sample_rate )"		340498	1					
ANR	340716	Callee	aacEncoder_SetParam		340498	0					
ANR	340717	Identifier	aacEncoder_SetParam		340498	0					
ANR	340718	ArgumentList	s -> handle		340498	1					
ANR	340719	Argument	s -> handle		340498	0					
ANR	340720	PtrMemberAccess	s -> handle		340498	0					
ANR	340721	Identifier	s		340498	0					
ANR	340722	Identifier	handle		340498	1					
ANR	340723	Argument	AACENC_SAMPLERATE		340498	1					
ANR	340724	Identifier	AACENC_SAMPLERATE		340498	0					
ANR	340725	Argument	avctx -> sample_rate		340498	2					
ANR	340726	PtrMemberAccess	avctx -> sample_rate		340498	0					
ANR	340727	Identifier	avctx		340498	0					
ANR	340728	Identifier	sample_rate		340498	1					
ANR	340729	Identifier	AACENC_OK		340498	1					
ANR	340730	CompoundStatement		69:70:1234:1234	340498	1					
ANR	340731	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the sample rate %d: %s\\n"" , avctx -> sample_rate , aac_get_error ( err ) )"	73:8:1305:1430	340498	0	True				
ANR	340732	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the sample rate %d: %s\\n"" , avctx -> sample_rate , aac_get_error ( err ) )"		340498	0					
ANR	340733	Callee	av_log		340498	0					
ANR	340734	Identifier	av_log		340498	0					
ANR	340735	ArgumentList	avctx		340498	1					
ANR	340736	Argument	avctx		340498	0					
ANR	340737	Identifier	avctx		340498	0					
ANR	340738	Argument	AV_LOG_ERROR		340498	1					
ANR	340739	Identifier	AV_LOG_ERROR		340498	0					
ANR	340740	Argument	"""Unable to set the sample rate %d: %s\\n"""		340498	2					
ANR	340741	PrimaryExpression	"""Unable to set the sample rate %d: %s\\n"""		340498	0					
ANR	340742	Argument	avctx -> sample_rate		340498	3					
ANR	340743	PtrMemberAccess	avctx -> sample_rate		340498	0					
ANR	340744	Identifier	avctx		340498	0					
ANR	340745	Identifier	sample_rate		340498	1					
ANR	340746	Argument	aac_get_error ( err )		340498	4					
ANR	340747	CallExpression	aac_get_error ( err )		340498	0					
ANR	340748	Callee	aac_get_error		340498	0					
ANR	340749	Identifier	aac_get_error		340498	0					
ANR	340750	ArgumentList	err		340498	1					
ANR	340751	Argument	err		340498	0					
ANR	340752	Identifier	err		340498	0					
ANR	340753	GotoStatement	goto error ;	77:8:1441:1451	340498	1	True				
ANR	340754	Identifier	error		340498	0					
ANR	340755	SwitchStatement	switch ( avctx -> channels )		340498	12					
ANR	340756	Condition	avctx -> channels	83:12:1475:1489	340498	0	True				
ANR	340757	PtrMemberAccess	avctx -> channels		340498	0					
ANR	340758	Identifier	avctx		340498	0					
ANR	340759	Identifier	channels		340498	1					
ANR	340760	CompoundStatement		81:29:1432:1432	340498	1					
ANR	340761	Label	case 1 :	85:4:1499:1505	340498	0	True				
ANR	340762	ExpressionStatement	mode = MODE_1	85:12:1507:1520	340498	1	True				
ANR	340763	AssignmentExpression	mode = MODE_1		340498	0		=			
ANR	340764	Identifier	mode		340498	0					
ANR	340765	Identifier	MODE_1		340498	1					
ANR	340766	ExpressionStatement	sce = 1	85:33:1528:1535	340498	2	True				
ANR	340767	AssignmentExpression	sce = 1		340498	0		=			
ANR	340768	Identifier	sce		340498	0					
ANR	340769	PrimaryExpression	1		340498	1					
ANR	340770	ExpressionStatement	cpe = 0	85:42:1537:1544	340498	3	True				
ANR	340771	AssignmentExpression	cpe = 0		340498	0		=			
ANR	340772	Identifier	cpe		340498	0					
ANR	340773	PrimaryExpression	0		340498	1					
ANR	340774	BreakStatement	break ;	85:51:1546:1551	340498	4	True				
ANR	340775	Label	case 2 :	87:4:1558:1564	340498	5	True				
ANR	340776	ExpressionStatement	mode = MODE_2	87:12:1566:1579	340498	6	True				
ANR	340777	AssignmentExpression	mode = MODE_2		340498	0		=			
ANR	340778	Identifier	mode		340498	0					
ANR	340779	Identifier	MODE_2		340498	1					
ANR	340780	ExpressionStatement	sce = 0	87:33:1587:1594	340498	7	True				
ANR	340781	AssignmentExpression	sce = 0		340498	0		=			
ANR	340782	Identifier	sce		340498	0					
ANR	340783	PrimaryExpression	0		340498	1					
ANR	340784	ExpressionStatement	cpe = 1	87:42:1596:1603	340498	8	True				
ANR	340785	AssignmentExpression	cpe = 1		340498	0		=			
ANR	340786	Identifier	cpe		340498	0					
ANR	340787	PrimaryExpression	1		340498	1					
ANR	340788	BreakStatement	break ;	87:51:1605:1610	340498	9	True				
ANR	340789	Label	case 3 :	89:4:1617:1623	340498	10	True				
ANR	340790	ExpressionStatement	mode = MODE_1_2	89:12:1625:1640	340498	11	True				
ANR	340791	AssignmentExpression	mode = MODE_1_2		340498	0		=			
ANR	340792	Identifier	mode		340498	0					
ANR	340793	Identifier	MODE_1_2		340498	1					
ANR	340794	ExpressionStatement	sce = 1	89:33:1646:1653	340498	12	True				
ANR	340795	AssignmentExpression	sce = 1		340498	0		=			
ANR	340796	Identifier	sce		340498	0					
ANR	340797	PrimaryExpression	1		340498	1					
ANR	340798	ExpressionStatement	cpe = 1	89:42:1655:1662	340498	13	True				
ANR	340799	AssignmentExpression	cpe = 1		340498	0		=			
ANR	340800	Identifier	cpe		340498	0					
ANR	340801	PrimaryExpression	1		340498	1					
ANR	340802	BreakStatement	break ;	89:51:1664:1669	340498	14	True				
ANR	340803	Label	case 4 :	91:4:1676:1682	340498	15	True				
ANR	340804	ExpressionStatement	mode = MODE_1_2_1	91:12:1684:1701	340498	16	True				
ANR	340805	AssignmentExpression	mode = MODE_1_2_1		340498	0		=			
ANR	340806	Identifier	mode		340498	0					
ANR	340807	Identifier	MODE_1_2_1		340498	1					
ANR	340808	ExpressionStatement	sce = 2	91:33:1705:1712	340498	17	True				
ANR	340809	AssignmentExpression	sce = 2		340498	0		=			
ANR	340810	Identifier	sce		340498	0					
ANR	340811	PrimaryExpression	2		340498	1					
ANR	340812	ExpressionStatement	cpe = 1	91:42:1714:1721	340498	18	True				
ANR	340813	AssignmentExpression	cpe = 1		340498	0		=			
ANR	340814	Identifier	cpe		340498	0					
ANR	340815	PrimaryExpression	1		340498	1					
ANR	340816	BreakStatement	break ;	91:51:1723:1728	340498	19	True				
ANR	340817	Label	case 5 :	93:4:1735:1741	340498	20	True				
ANR	340818	ExpressionStatement	mode = MODE_1_2_2	93:12:1743:1760	340498	21	True				
ANR	340819	AssignmentExpression	mode = MODE_1_2_2		340498	0		=			
ANR	340820	Identifier	mode		340498	0					
ANR	340821	Identifier	MODE_1_2_2		340498	1					
ANR	340822	ExpressionStatement	sce = 1	93:33:1764:1771	340498	22	True				
ANR	340823	AssignmentExpression	sce = 1		340498	0		=			
ANR	340824	Identifier	sce		340498	0					
ANR	340825	PrimaryExpression	1		340498	1					
ANR	340826	ExpressionStatement	cpe = 2	93:42:1773:1780	340498	23	True				
ANR	340827	AssignmentExpression	cpe = 2		340498	0		=			
ANR	340828	Identifier	cpe		340498	0					
ANR	340829	PrimaryExpression	2		340498	1					
ANR	340830	BreakStatement	break ;	93:51:1782:1787	340498	24	True				
ANR	340831	Label	case 6 :	95:4:1794:1800	340498	25	True				
ANR	340832	ExpressionStatement	mode = MODE_1_2_2_1	95:12:1802:1821	340498	26	True				
ANR	340833	AssignmentExpression	mode = MODE_1_2_2_1		340498	0		=			
ANR	340834	Identifier	mode		340498	0					
ANR	340835	Identifier	MODE_1_2_2_1		340498	1					
ANR	340836	ExpressionStatement	sce = 2	95:33:1823:1830	340498	27	True				
ANR	340837	AssignmentExpression	sce = 2		340498	0		=			
ANR	340838	Identifier	sce		340498	0					
ANR	340839	PrimaryExpression	2		340498	1					
ANR	340840	ExpressionStatement	cpe = 2	95:42:1832:1839	340498	28	True				
ANR	340841	AssignmentExpression	cpe = 2		340498	0		=			
ANR	340842	Identifier	cpe		340498	0					
ANR	340843	PrimaryExpression	2		340498	1					
ANR	340844	BreakStatement	break ;	95:51:1841:1846	340498	29	True				
ANR	340845	Label	default :	97:4:1853:1860	340498	30	True				
ANR	340846	Identifier	default		340498	0					
ANR	340847	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported number of channels %d\\n"" , avctx -> channels )"	99:8:1871:1970	340498	31	True				
ANR	340848	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported number of channels %d\\n"" , avctx -> channels )"		340498	0					
ANR	340849	Callee	av_log		340498	0					
ANR	340850	Identifier	av_log		340498	0					
ANR	340851	ArgumentList	avctx		340498	1					
ANR	340852	Argument	avctx		340498	0					
ANR	340853	Identifier	avctx		340498	0					
ANR	340854	Argument	AV_LOG_ERROR		340498	1					
ANR	340855	Identifier	AV_LOG_ERROR		340498	0					
ANR	340856	Argument	"""Unsupported number of channels %d\\n"""		340498	2					
ANR	340857	PrimaryExpression	"""Unsupported number of channels %d\\n"""		340498	0					
ANR	340858	Argument	avctx -> channels		340498	3					
ANR	340859	PtrMemberAccess	avctx -> channels		340498	0					
ANR	340860	Identifier	avctx		340498	0					
ANR	340861	Identifier	channels		340498	1					
ANR	340862	GotoStatement	goto error ;	103:8:1981:1991	340498	32	True				
ANR	340863	Identifier	error		340498	0					
ANR	340864	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELMODE , mode ) ) != AACENC_OK )"		340498	13					
ANR	340865	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELMODE , mode ) ) != AACENC_OK"	109:8:2011:2123	340498	0	True				
ANR	340866	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELMODE , mode ) ) != AACENC_OK"		340498	0		!=			
ANR	340867	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELMODE , mode )"		340498	0		=			
ANR	340868	Identifier	err		340498	0					
ANR	340869	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_CHANNELMODE , mode )"		340498	1					
ANR	340870	Callee	aacEncoder_SetParam		340498	0					
ANR	340871	Identifier	aacEncoder_SetParam		340498	0					
ANR	340872	ArgumentList	s -> handle		340498	1					
ANR	340873	Argument	s -> handle		340498	0					
ANR	340874	PtrMemberAccess	s -> handle		340498	0					
ANR	340875	Identifier	s		340498	0					
ANR	340876	Identifier	handle		340498	1					
ANR	340877	Argument	AACENC_CHANNELMODE		340498	1					
ANR	340878	Identifier	AACENC_CHANNELMODE		340498	0					
ANR	340879	Argument	mode		340498	2					
ANR	340880	Identifier	mode		340498	0					
ANR	340881	Identifier	AACENC_OK		340498	1					
ANR	340882	CompoundStatement		109:56:2066:2066	340498	1					
ANR	340883	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set channel mode %d: %s\\n"" , mode , aac_get_error ( err ) )"	113:8:2137:2245	340498	0	True				
ANR	340884	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set channel mode %d: %s\\n"" , mode , aac_get_error ( err ) )"		340498	0					
ANR	340885	Callee	av_log		340498	0					
ANR	340886	Identifier	av_log		340498	0					
ANR	340887	ArgumentList	avctx		340498	1					
ANR	340888	Argument	avctx		340498	0					
ANR	340889	Identifier	avctx		340498	0					
ANR	340890	Argument	AV_LOG_ERROR		340498	1					
ANR	340891	Identifier	AV_LOG_ERROR		340498	0					
ANR	340892	Argument	"""Unable to set channel mode %d: %s\\n"""		340498	2					
ANR	340893	PrimaryExpression	"""Unable to set channel mode %d: %s\\n"""		340498	0					
ANR	340894	Argument	mode		340498	3					
ANR	340895	Identifier	mode		340498	0					
ANR	340896	Argument	aac_get_error ( err )		340498	4					
ANR	340897	CallExpression	aac_get_error ( err )		340498	0					
ANR	340898	Callee	aac_get_error		340498	0					
ANR	340899	Identifier	aac_get_error		340498	0					
ANR	340900	ArgumentList	err		340498	1					
ANR	340901	Argument	err		340498	0					
ANR	340902	Identifier	err		340498	0					
ANR	340903	GotoStatement	goto error ;	117:8:2256:2266	340498	1	True				
ANR	340904	Identifier	error		340498	0					
ANR	340905	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELORDER , 1 ) ) != AACENC_OK )"		340498	14					
ANR	340906	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELORDER , 1 ) ) != AACENC_OK"	123:8:2286:2396	340498	0	True				
ANR	340907	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELORDER , 1 ) ) != AACENC_OK"		340498	0		!=			
ANR	340908	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_CHANNELORDER , 1 )"		340498	0		=			
ANR	340909	Identifier	err		340498	0					
ANR	340910	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_CHANNELORDER , 1 )"		340498	1					
ANR	340911	Callee	aacEncoder_SetParam		340498	0					
ANR	340912	Identifier	aacEncoder_SetParam		340498	0					
ANR	340913	ArgumentList	s -> handle		340498	1					
ANR	340914	Argument	s -> handle		340498	0					
ANR	340915	PtrMemberAccess	s -> handle		340498	0					
ANR	340916	Identifier	s		340498	0					
ANR	340917	Identifier	handle		340498	1					
ANR	340918	Argument	AACENC_CHANNELORDER		340498	1					
ANR	340919	Identifier	AACENC_CHANNELORDER		340498	0					
ANR	340920	Argument	1		340498	2					
ANR	340921	PrimaryExpression	1		340498	0					
ANR	340922	Identifier	AACENC_OK		340498	1					
ANR	340923	CompoundStatement		123:53:2339:2339	340498	1					
ANR	340924	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set wav channel order %d: %s\\n"" , mode , aac_get_error ( err ) )"	127:8:2410:2539	340498	0	True				
ANR	340925	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set wav channel order %d: %s\\n"" , mode , aac_get_error ( err ) )"		340498	0					
ANR	340926	Callee	av_log		340498	0					
ANR	340927	Identifier	av_log		340498	0					
ANR	340928	ArgumentList	avctx		340498	1					
ANR	340929	Argument	avctx		340498	0					
ANR	340930	Identifier	avctx		340498	0					
ANR	340931	Argument	AV_LOG_ERROR		340498	1					
ANR	340932	Identifier	AV_LOG_ERROR		340498	0					
ANR	340933	Argument	"""Unable to set wav channel order %d: %s\\n"""		340498	2					
ANR	340934	PrimaryExpression	"""Unable to set wav channel order %d: %s\\n"""		340498	0					
ANR	340935	Argument	mode		340498	3					
ANR	340936	Identifier	mode		340498	0					
ANR	340937	Argument	aac_get_error ( err )		340498	4					
ANR	340938	CallExpression	aac_get_error ( err )		340498	0					
ANR	340939	Callee	aac_get_error		340498	0					
ANR	340940	Identifier	aac_get_error		340498	0					
ANR	340941	ArgumentList	err		340498	1					
ANR	340942	Argument	err		340498	0					
ANR	340943	Identifier	err		340498	0					
ANR	340944	GotoStatement	goto error ;	133:8:2550:2560	340498	1	True				
ANR	340945	Identifier	error		340498	0					
ANR	340946	IfStatement	if ( avctx -> flags & CODEC_FLAG_QSCALE || s -> vbr )		340498	15					
ANR	340947	Condition	avctx -> flags & CODEC_FLAG_QSCALE || s -> vbr	139:8:2580:2621	340498	0	True				
ANR	340948	OrExpression	avctx -> flags & CODEC_FLAG_QSCALE || s -> vbr		340498	0		||			
ANR	340949	BitAndExpression	avctx -> flags & CODEC_FLAG_QSCALE		340498	0		&			
ANR	340950	PtrMemberAccess	avctx -> flags		340498	0					
ANR	340951	Identifier	avctx		340498	0					
ANR	340952	Identifier	flags		340498	1					
ANR	340953	Identifier	CODEC_FLAG_QSCALE		340498	1					
ANR	340954	PtrMemberAccess	s -> vbr		340498	1					
ANR	340955	Identifier	s		340498	0					
ANR	340956	Identifier	vbr		340498	1					
ANR	340957	CompoundStatement		139:8:2575:2625	340498	1					
ANR	340958	IdentifierDeclStatement	int mode = s -> vbr ? s -> vbr : avctx -> global_quality ;	141:8:2635:2685	340498	0	True				
ANR	340959	IdentifierDecl	mode = s -> vbr ? s -> vbr : avctx -> global_quality		340498	0					
ANR	340960	IdentifierDeclType	int		340498	0					
ANR	340961	Identifier	mode		340498	1					
ANR	340962	AssignmentExpression	mode = s -> vbr ? s -> vbr : avctx -> global_quality		340498	2		=			
ANR	340963	Identifier	mode		340498	0					
ANR	340964	ConditionalExpression	s -> vbr ? s -> vbr : avctx -> global_quality		340498	1					
ANR	340965	Condition	s -> vbr		340498	0					
ANR	340966	PtrMemberAccess	s -> vbr		340498	0					
ANR	340967	Identifier	s		340498	0					
ANR	340968	Identifier	vbr		340498	1					
ANR	340969	PtrMemberAccess	s -> vbr		340498	1					
ANR	340970	Identifier	s		340498	0					
ANR	340971	Identifier	vbr		340498	1					
ANR	340972	PtrMemberAccess	avctx -> global_quality		340498	2					
ANR	340973	Identifier	avctx		340498	0					
ANR	340974	Identifier	global_quality		340498	1					
ANR	340975	IfStatement	if ( mode < 1 || mode > 5 )		340498	1					
ANR	340976	Condition	mode < 1 || mode > 5	143:12:2700:2720	340498	0	True				
ANR	340977	OrExpression	mode < 1 || mode > 5		340498	0		||			
ANR	340978	RelationalExpression	mode < 1		340498	0		<			
ANR	340979	Identifier	mode		340498	0					
ANR	340980	PrimaryExpression	1		340498	1					
ANR	340981	RelationalExpression	mode > 5		340498	1		>			
ANR	340982	Identifier	mode		340498	0					
ANR	340983	PrimaryExpression	5		340498	1					
ANR	340984	CompoundStatement		141:35:2663:2663	340498	1					
ANR	340985	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""VBR quality %d out of range, should be 1-5\\n"" , mode )"	145:12:2738:2841	340498	0	True				
ANR	340986	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""VBR quality %d out of range, should be 1-5\\n"" , mode )"		340498	0					
ANR	340987	Callee	av_log		340498	0					
ANR	340988	Identifier	av_log		340498	0					
ANR	340989	ArgumentList	avctx		340498	1					
ANR	340990	Argument	avctx		340498	0					
ANR	340991	Identifier	avctx		340498	0					
ANR	340992	Argument	AV_LOG_WARNING		340498	1					
ANR	340993	Identifier	AV_LOG_WARNING		340498	0					
ANR	340994	Argument	"""VBR quality %d out of range, should be 1-5\\n"""		340498	2					
ANR	340995	PrimaryExpression	"""VBR quality %d out of range, should be 1-5\\n"""		340498	0					
ANR	340996	Argument	mode		340498	3					
ANR	340997	Identifier	mode		340498	0					
ANR	340998	ExpressionStatement	"mode = av_clip ( mode , 1 , 5 )"	149:12:2856:2882	340498	1	True				
ANR	340999	AssignmentExpression	"mode = av_clip ( mode , 1 , 5 )"		340498	0		=			
ANR	341000	Identifier	mode		340498	0					
ANR	341001	CallExpression	"av_clip ( mode , 1 , 5 )"		340498	1					
ANR	341002	Callee	av_clip		340498	0					
ANR	341003	Identifier	av_clip		340498	0					
ANR	341004	ArgumentList	mode		340498	1					
ANR	341005	Argument	mode		340498	0					
ANR	341006	Identifier	mode		340498	0					
ANR	341007	Argument	1		340498	1					
ANR	341008	PrimaryExpression	1		340498	0					
ANR	341009	Argument	5		340498	2					
ANR	341010	PrimaryExpression	5		340498	0					
ANR	341011	Statement	av_log	153:8:2904:2909	340498	2	True				
ANR	341012	Statement	(	153:14:2910:2910	340498	3	True				
ANR	341013	Statement	avctx	153:15:2911:2915	340498	4	True				
ANR	341014	Statement	","	153:20:2916:2916	340498	5	True				
ANR	341015	Statement	AV_LOG_WARNING	153:22:2918:2931	340498	6	True				
ANR	341016	Statement	","	153:36:2932:2932	340498	7	True				
ANR	341017	Statement	"""Note, the VBR setting is unsupported and only works with """	155:15:2950:3008	340498	8	True				
ANR	341018	Statement	"""some parameter combinations\\n"""	157:15:3026:3056	340498	9	True				
ANR	341019	Statement	)	157:46:3057:3057	340498	10	True				
ANR	341020	ExpressionStatement		157:47:3058:3058	340498	11	True				
ANR	341021	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATEMODE , mode ) ) != AACENC_OK )"		340498	12					
ANR	341022	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATEMODE , mode ) ) != AACENC_OK"	159:12:3073:3189	340498	0	True				
ANR	341023	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATEMODE , mode ) ) != AACENC_OK"		340498	0		!=			
ANR	341024	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATEMODE , mode )"		340498	0		=			
ANR	341025	Identifier	err		340498	0					
ANR	341026	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_BITRATEMODE , mode )"		340498	1					
ANR	341027	Callee	aacEncoder_SetParam		340498	0					
ANR	341028	Identifier	aacEncoder_SetParam		340498	0					
ANR	341029	ArgumentList	s -> handle		340498	1					
ANR	341030	Argument	s -> handle		340498	0					
ANR	341031	PtrMemberAccess	s -> handle		340498	0					
ANR	341032	Identifier	s		340498	0					
ANR	341033	Identifier	handle		340498	1					
ANR	341034	Argument	AACENC_BITRATEMODE		340498	1					
ANR	341035	Identifier	AACENC_BITRATEMODE		340498	0					
ANR	341036	Argument	mode		340498	2					
ANR	341037	Identifier	mode		340498	0					
ANR	341038	Identifier	AACENC_OK		340498	1					
ANR	341039	CompoundStatement		159:60:3132:3132	340498	1					
ANR	341040	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the VBR bitrate mode %d: %s\\n"" , mode , aac_get_error ( err ) )"	163:12:3207:3327	340498	0	True				
ANR	341041	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the VBR bitrate mode %d: %s\\n"" , mode , aac_get_error ( err ) )"		340498	0					
ANR	341042	Callee	av_log		340498	0					
ANR	341043	Identifier	av_log		340498	0					
ANR	341044	ArgumentList	avctx		340498	1					
ANR	341045	Argument	avctx		340498	0					
ANR	341046	Identifier	avctx		340498	0					
ANR	341047	Argument	AV_LOG_ERROR		340498	1					
ANR	341048	Identifier	AV_LOG_ERROR		340498	0					
ANR	341049	Argument	"""Unable to set the VBR bitrate mode %d: %s\\n"""		340498	2					
ANR	341050	PrimaryExpression	"""Unable to set the VBR bitrate mode %d: %s\\n"""		340498	0					
ANR	341051	Argument	mode		340498	3					
ANR	341052	Identifier	mode		340498	0					
ANR	341053	Argument	aac_get_error ( err )		340498	4					
ANR	341054	CallExpression	aac_get_error ( err )		340498	0					
ANR	341055	Callee	aac_get_error		340498	0					
ANR	341056	Identifier	aac_get_error		340498	0					
ANR	341057	ArgumentList	err		340498	1					
ANR	341058	Argument	err		340498	0					
ANR	341059	Identifier	err		340498	0					
ANR	341060	GotoStatement	goto error ;	167:12:3342:3352	340498	1	True				
ANR	341061	Identifier	error		340498	0					
ANR	341062	ElseStatement	else		340498	0					
ANR	341063	CompoundStatement		169:11:3317:3317	340498	0					
ANR	341064	IfStatement	if ( avctx -> bit_rate <= 0 )		340498	0					
ANR	341065	Condition	avctx -> bit_rate <= 0	173:12:3392:3411	340498	0	True				
ANR	341066	RelationalExpression	avctx -> bit_rate <= 0		340498	0		<=			
ANR	341067	PtrMemberAccess	avctx -> bit_rate		340498	0					
ANR	341068	Identifier	avctx		340498	0					
ANR	341069	Identifier	bit_rate		340498	1					
ANR	341070	PrimaryExpression	0		340498	1					
ANR	341071	CompoundStatement		171:34:3354:3354	340498	1					
ANR	341072	IfStatement	if ( avctx -> profile == FF_PROFILE_AAC_HE_V2 )		340498	0					
ANR	341073	Condition	avctx -> profile == FF_PROFILE_AAC_HE_V2	175:16:3433:3470	340498	0	True				
ANR	341074	EqualityExpression	avctx -> profile == FF_PROFILE_AAC_HE_V2		340498	0		==			
ANR	341075	PtrMemberAccess	avctx -> profile		340498	0					
ANR	341076	Identifier	avctx		340498	0					
ANR	341077	Identifier	profile		340498	1					
ANR	341078	Identifier	FF_PROFILE_AAC_HE_V2		340498	1					
ANR	341079	CompoundStatement		173:56:3413:3413	340498	1					
ANR	341080	ExpressionStatement	sce = 1	177:16:3492:3499	340498	0	True				
ANR	341081	AssignmentExpression	sce = 1		340498	0		=			
ANR	341082	Identifier	sce		340498	0					
ANR	341083	PrimaryExpression	1		340498	1					
ANR	341084	ExpressionStatement	cpe = 0	179:16:3518:3525	340498	1	True				
ANR	341085	AssignmentExpression	cpe = 0		340498	0		=			
ANR	341086	Identifier	cpe		340498	0					
ANR	341087	PrimaryExpression	0		340498	1					
ANR	341088	ExpressionStatement	avctx -> bit_rate = ( 96 * sce + 128 * cpe ) * avctx -> sample_rate / 44	183:12:3555:3617	340498	1	True				
ANR	341089	AssignmentExpression	avctx -> bit_rate = ( 96 * sce + 128 * cpe ) * avctx -> sample_rate / 44		340498	0		=			
ANR	341090	PtrMemberAccess	avctx -> bit_rate		340498	0					
ANR	341091	Identifier	avctx		340498	0					
ANR	341092	Identifier	bit_rate		340498	1					
ANR	341093	MultiplicativeExpression	( 96 * sce + 128 * cpe ) * avctx -> sample_rate / 44		340498	1		*			
ANR	341094	AdditiveExpression	96 * sce + 128 * cpe		340498	0		+			
ANR	341095	MultiplicativeExpression	96 * sce		340498	0		*			
ANR	341096	PrimaryExpression	96		340498	0					
ANR	341097	Identifier	sce		340498	1					
ANR	341098	MultiplicativeExpression	128 * cpe		340498	1		*			
ANR	341099	PrimaryExpression	128		340498	0					
ANR	341100	Identifier	cpe		340498	1					
ANR	341101	MultiplicativeExpression	avctx -> sample_rate / 44		340498	1		/			
ANR	341102	PtrMemberAccess	avctx -> sample_rate		340498	0					
ANR	341103	Identifier	avctx		340498	0					
ANR	341104	Identifier	sample_rate		340498	1					
ANR	341105	PrimaryExpression	44		340498	1					
ANR	341106	IfStatement	if ( avctx -> profile == FF_PROFILE_AAC_HE || avctx -> profile == FF_PROFILE_AAC_HE_V2 || s -> eld_sbr )		340498	2					
ANR	341107	Condition	avctx -> profile == FF_PROFILE_AAC_HE || avctx -> profile == FF_PROFILE_AAC_HE_V2 || s -> eld_sbr	185:16:3636:3760	340498	0	True				
ANR	341108	OrExpression	avctx -> profile == FF_PROFILE_AAC_HE || avctx -> profile == FF_PROFILE_AAC_HE_V2 || s -> eld_sbr		340498	0		||			
ANR	341109	EqualityExpression	avctx -> profile == FF_PROFILE_AAC_HE		340498	0		==			
ANR	341110	PtrMemberAccess	avctx -> profile		340498	0					
ANR	341111	Identifier	avctx		340498	0					
ANR	341112	Identifier	profile		340498	1					
ANR	341113	Identifier	FF_PROFILE_AAC_HE		340498	1					
ANR	341114	OrExpression	avctx -> profile == FF_PROFILE_AAC_HE_V2 || s -> eld_sbr		340498	1		||			
ANR	341115	EqualityExpression	avctx -> profile == FF_PROFILE_AAC_HE_V2		340498	0		==			
ANR	341116	PtrMemberAccess	avctx -> profile		340498	0					
ANR	341117	Identifier	avctx		340498	0					
ANR	341118	Identifier	profile		340498	1					
ANR	341119	Identifier	FF_PROFILE_AAC_HE_V2		340498	1					
ANR	341120	PtrMemberAccess	s -> eld_sbr		340498	1					
ANR	341121	Identifier	s		340498	0					
ANR	341122	Identifier	eld_sbr		340498	1					
ANR	341123	ExpressionStatement	avctx -> bit_rate /= 2	191:16:3780:3800	340498	1	True				
ANR	341124	AssignmentExpression	avctx -> bit_rate /= 2		340498	0		/=			
ANR	341125	PtrMemberAccess	avctx -> bit_rate		340498	0					
ANR	341126	Identifier	avctx		340498	0					
ANR	341127	Identifier	bit_rate		340498	1					
ANR	341128	PrimaryExpression	2		340498	1					
ANR	341129	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATE , avctx -> bit_rate ) ) != AACENC_OK )"		340498	1					
ANR	341130	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATE , avctx -> bit_rate ) ) != AACENC_OK"	195:12:3826:3949	340498	0	True				
ANR	341131	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATE , avctx -> bit_rate ) ) != AACENC_OK"		340498	0		!=			
ANR	341132	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_BITRATE , avctx -> bit_rate )"		340498	0		=			
ANR	341133	Identifier	err		340498	0					
ANR	341134	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_BITRATE , avctx -> bit_rate )"		340498	1					
ANR	341135	Callee	aacEncoder_SetParam		340498	0					
ANR	341136	Identifier	aacEncoder_SetParam		340498	0					
ANR	341137	ArgumentList	s -> handle		340498	1					
ANR	341138	Argument	s -> handle		340498	0					
ANR	341139	PtrMemberAccess	s -> handle		340498	0					
ANR	341140	Identifier	s		340498	0					
ANR	341141	Identifier	handle		340498	1					
ANR	341142	Argument	AACENC_BITRATE		340498	1					
ANR	341143	Identifier	AACENC_BITRATE		340498	0					
ANR	341144	Argument	avctx -> bit_rate		340498	2					
ANR	341145	PtrMemberAccess	avctx -> bit_rate		340498	0					
ANR	341146	Identifier	avctx		340498	0					
ANR	341147	Identifier	bit_rate		340498	1					
ANR	341148	Identifier	AACENC_OK		340498	1					
ANR	341149	CompoundStatement		195:71:3892:3892	340498	1					
ANR	341150	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the bitrate %d: %s\\n"" , avctx -> bit_rate , aac_get_error ( err ) )"	199:12:3967:4089	340498	0	True				
ANR	341151	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the bitrate %d: %s\\n"" , avctx -> bit_rate , aac_get_error ( err ) )"		340498	0					
ANR	341152	Callee	av_log		340498	0					
ANR	341153	Identifier	av_log		340498	0					
ANR	341154	ArgumentList	avctx		340498	1					
ANR	341155	Argument	avctx		340498	0					
ANR	341156	Identifier	avctx		340498	0					
ANR	341157	Argument	AV_LOG_ERROR		340498	1					
ANR	341158	Identifier	AV_LOG_ERROR		340498	0					
ANR	341159	Argument	"""Unable to set the bitrate %d: %s\\n"""		340498	2					
ANR	341160	PrimaryExpression	"""Unable to set the bitrate %d: %s\\n"""		340498	0					
ANR	341161	Argument	avctx -> bit_rate		340498	3					
ANR	341162	PtrMemberAccess	avctx -> bit_rate		340498	0					
ANR	341163	Identifier	avctx		340498	0					
ANR	341164	Identifier	bit_rate		340498	1					
ANR	341165	Argument	aac_get_error ( err )		340498	4					
ANR	341166	CallExpression	aac_get_error ( err )		340498	0					
ANR	341167	Callee	aac_get_error		340498	0					
ANR	341168	Identifier	aac_get_error		340498	0					
ANR	341169	ArgumentList	err		340498	1					
ANR	341170	Argument	err		340498	0					
ANR	341171	Identifier	err		340498	0					
ANR	341172	GotoStatement	goto error ;	203:12:4104:4114	340498	1	True				
ANR	341173	Identifier	error		340498	0					
ANR	341174	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_TRANSMUX , avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2 ) ) != AACENC_OK )"		340498	16					
ANR	341175	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_TRANSMUX , avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2 ) ) != AACENC_OK"	215:8:4263:4430	340498	0	True				
ANR	341176	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_TRANSMUX , avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2 ) ) != AACENC_OK"		340498	0		!=			
ANR	341177	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_TRANSMUX , avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2 )"		340498	0		=			
ANR	341178	Identifier	err		340498	0					
ANR	341179	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_TRANSMUX , avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2 )"		340498	1					
ANR	341180	Callee	aacEncoder_SetParam		340498	0					
ANR	341181	Identifier	aacEncoder_SetParam		340498	0					
ANR	341182	ArgumentList	s -> handle		340498	1					
ANR	341183	Argument	s -> handle		340498	0					
ANR	341184	PtrMemberAccess	s -> handle		340498	0					
ANR	341185	Identifier	s		340498	0					
ANR	341186	Identifier	handle		340498	1					
ANR	341187	Argument	AACENC_TRANSMUX		340498	1					
ANR	341188	Identifier	AACENC_TRANSMUX		340498	0					
ANR	341189	Argument	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2		340498	2					
ANR	341190	ConditionalExpression	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 0 : s -> latm ? 10 : 2		340498	0					
ANR	341191	Condition	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER		340498	0					
ANR	341192	BitAndExpression	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER		340498	0		&			
ANR	341193	PtrMemberAccess	avctx -> flags		340498	0					
ANR	341194	Identifier	avctx		340498	0					
ANR	341195	Identifier	flags		340498	1					
ANR	341196	Identifier	CODEC_FLAG_GLOBAL_HEADER		340498	1					
ANR	341197	PrimaryExpression	0		340498	1					
ANR	341198	ConditionalExpression	s -> latm ? 10 : 2		340498	2					
ANR	341199	Condition	s -> latm		340498	0					
ANR	341200	PtrMemberAccess	s -> latm		340498	0					
ANR	341201	Identifier	s		340498	0					
ANR	341202	Identifier	latm		340498	1					
ANR	341203	PrimaryExpression	10		340498	1					
ANR	341204	PrimaryExpression	2		340498	2					
ANR	341205	Identifier	AACENC_OK		340498	1					
ANR	341206	CompoundStatement		215:114:4373:4373	340498	1					
ANR	341207	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the transmux format: %s\\n"" , aac_get_error ( err ) )"	219:8:4444:4550	340498	0	True				
ANR	341208	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the transmux format: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	341209	Callee	av_log		340498	0					
ANR	341210	Identifier	av_log		340498	0					
ANR	341211	ArgumentList	avctx		340498	1					
ANR	341212	Argument	avctx		340498	0					
ANR	341213	Identifier	avctx		340498	0					
ANR	341214	Argument	AV_LOG_ERROR		340498	1					
ANR	341215	Identifier	AV_LOG_ERROR		340498	0					
ANR	341216	Argument	"""Unable to set the transmux format: %s\\n"""		340498	2					
ANR	341217	PrimaryExpression	"""Unable to set the transmux format: %s\\n"""		340498	0					
ANR	341218	Argument	aac_get_error ( err )		340498	3					
ANR	341219	CallExpression	aac_get_error ( err )		340498	0					
ANR	341220	Callee	aac_get_error		340498	0					
ANR	341221	Identifier	aac_get_error		340498	0					
ANR	341222	ArgumentList	err		340498	1					
ANR	341223	Argument	err		340498	0					
ANR	341224	Identifier	err		340498	0					
ANR	341225	GotoStatement	goto error ;	223:8:4561:4571	340498	1	True				
ANR	341226	Identifier	error		340498	0					
ANR	341227	IfStatement	if ( s -> latm && s -> header_period )		340498	17					
ANR	341228	Condition	s -> latm && s -> header_period	229:8:4591:4617	340498	0	True				
ANR	341229	AndExpression	s -> latm && s -> header_period		340498	0		&&			
ANR	341230	PtrMemberAccess	s -> latm		340498	0					
ANR	341231	Identifier	s		340498	0					
ANR	341232	Identifier	latm		340498	1					
ANR	341233	PtrMemberAccess	s -> header_period		340498	1					
ANR	341234	Identifier	s		340498	0					
ANR	341235	Identifier	header_period		340498	1					
ANR	341236	CompoundStatement		227:37:4560:4560	340498	1					
ANR	341237	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_HEADER_PERIOD , s -> header_period ) ) != AACENC_OK )"		340498	0					
ANR	341238	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_HEADER_PERIOD , s -> header_period ) ) != AACENC_OK"	231:12:4635:4765	340498	0	True				
ANR	341239	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_HEADER_PERIOD , s -> header_period ) ) != AACENC_OK"		340498	0		!=			
ANR	341240	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_HEADER_PERIOD , s -> header_period )"		340498	0		=			
ANR	341241	Identifier	err		340498	0					
ANR	341242	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_HEADER_PERIOD , s -> header_period )"		340498	1					
ANR	341243	Callee	aacEncoder_SetParam		340498	0					
ANR	341244	Identifier	aacEncoder_SetParam		340498	0					
ANR	341245	ArgumentList	s -> handle		340498	1					
ANR	341246	Argument	s -> handle		340498	0					
ANR	341247	PtrMemberAccess	s -> handle		340498	0					
ANR	341248	Identifier	s		340498	0					
ANR	341249	Identifier	handle		340498	1					
ANR	341250	Argument	AACENC_HEADER_PERIOD		340498	1					
ANR	341251	Identifier	AACENC_HEADER_PERIOD		340498	0					
ANR	341252	Argument	s -> header_period		340498	2					
ANR	341253	PtrMemberAccess	s -> header_period		340498	0					
ANR	341254	Identifier	s		340498	0					
ANR	341255	Identifier	header_period		340498	1					
ANR	341256	Identifier	AACENC_OK		340498	1					
ANR	341257	CompoundStatement		231:72:4708:4708	340498	1					
ANR	341258	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set header period: %s\\n"" , aac_get_error ( err ) )"	235:13:4784:4889	340498	0	True				
ANR	341259	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set header period: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	341260	Callee	av_log		340498	0					
ANR	341261	Identifier	av_log		340498	0					
ANR	341262	ArgumentList	avctx		340498	1					
ANR	341263	Argument	avctx		340498	0					
ANR	341264	Identifier	avctx		340498	0					
ANR	341265	Argument	AV_LOG_ERROR		340498	1					
ANR	341266	Identifier	AV_LOG_ERROR		340498	0					
ANR	341267	Argument	"""Unable to set header period: %s\\n"""		340498	2					
ANR	341268	PrimaryExpression	"""Unable to set header period: %s\\n"""		340498	0					
ANR	341269	Argument	aac_get_error ( err )		340498	3					
ANR	341270	CallExpression	aac_get_error ( err )		340498	0					
ANR	341271	Callee	aac_get_error		340498	0					
ANR	341272	Identifier	aac_get_error		340498	0					
ANR	341273	ArgumentList	err		340498	1					
ANR	341274	Argument	err		340498	0					
ANR	341275	Identifier	err		340498	0					
ANR	341276	GotoStatement	goto error ;	239:13:4905:4915	340498	1	True				
ANR	341277	Identifier	error		340498	0					
ANR	341278	IfStatement	if ( s -> signaling < 0 )		340498	18					
ANR	341279	Condition	s -> signaling < 0	253:8:5136:5151	340498	0	True				
ANR	341280	RelationalExpression	s -> signaling < 0		340498	0		<			
ANR	341281	PtrMemberAccess	s -> signaling		340498	0					
ANR	341282	Identifier	s		340498	0					
ANR	341283	Identifier	signaling		340498	1					
ANR	341284	PrimaryExpression	0		340498	1					
ANR	341285	ExpressionStatement	s -> signaling = avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 2 : 0	255:8:5163:5225	340498	1	True				
ANR	341286	AssignmentExpression	s -> signaling = avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 2 : 0		340498	0		=			
ANR	341287	PtrMemberAccess	s -> signaling		340498	0					
ANR	341288	Identifier	s		340498	0					
ANR	341289	Identifier	signaling		340498	1					
ANR	341290	ConditionalExpression	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER ? 2 : 0		340498	1					
ANR	341291	Condition	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER		340498	0					
ANR	341292	BitAndExpression	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER		340498	0		&			
ANR	341293	PtrMemberAccess	avctx -> flags		340498	0					
ANR	341294	Identifier	avctx		340498	0					
ANR	341295	Identifier	flags		340498	1					
ANR	341296	Identifier	CODEC_FLAG_GLOBAL_HEADER		340498	1					
ANR	341297	PrimaryExpression	2		340498	1					
ANR	341298	PrimaryExpression	0		340498	2					
ANR	341299	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_SIGNALING_MODE , s -> signaling ) ) != AACENC_OK )"		340498	19					
ANR	341300	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SIGNALING_MODE , s -> signaling ) ) != AACENC_OK"	259:8:5238:5361	340498	0	True				
ANR	341301	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_SIGNALING_MODE , s -> signaling ) ) != AACENC_OK"		340498	0		!=			
ANR	341302	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_SIGNALING_MODE , s -> signaling )"		340498	0		=			
ANR	341303	Identifier	err		340498	0					
ANR	341304	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_SIGNALING_MODE , s -> signaling )"		340498	1					
ANR	341305	Callee	aacEncoder_SetParam		340498	0					
ANR	341306	Identifier	aacEncoder_SetParam		340498	0					
ANR	341307	ArgumentList	s -> handle		340498	1					
ANR	341308	Argument	s -> handle		340498	0					
ANR	341309	PtrMemberAccess	s -> handle		340498	0					
ANR	341310	Identifier	s		340498	0					
ANR	341311	Identifier	handle		340498	1					
ANR	341312	Argument	AACENC_SIGNALING_MODE		340498	1					
ANR	341313	Identifier	AACENC_SIGNALING_MODE		340498	0					
ANR	341314	Argument	s -> signaling		340498	2					
ANR	341315	PtrMemberAccess	s -> signaling		340498	0					
ANR	341316	Identifier	s		340498	0					
ANR	341317	Identifier	signaling		340498	1					
ANR	341318	Identifier	AACENC_OK		340498	1					
ANR	341319	CompoundStatement		259:64:5304:5304	340498	1					
ANR	341320	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set signaling mode %d: %s\\n"" , s -> signaling , aac_get_error ( err ) )"	263:8:5375:5493	340498	0	True				
ANR	341321	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set signaling mode %d: %s\\n"" , s -> signaling , aac_get_error ( err ) )"		340498	0					
ANR	341322	Callee	av_log		340498	0					
ANR	341323	Identifier	av_log		340498	0					
ANR	341324	ArgumentList	avctx		340498	1					
ANR	341325	Argument	avctx		340498	0					
ANR	341326	Identifier	avctx		340498	0					
ANR	341327	Argument	AV_LOG_ERROR		340498	1					
ANR	341328	Identifier	AV_LOG_ERROR		340498	0					
ANR	341329	Argument	"""Unable to set signaling mode %d: %s\\n"""		340498	2					
ANR	341330	PrimaryExpression	"""Unable to set signaling mode %d: %s\\n"""		340498	0					
ANR	341331	Argument	s -> signaling		340498	3					
ANR	341332	PtrMemberAccess	s -> signaling		340498	0					
ANR	341333	Identifier	s		340498	0					
ANR	341334	Identifier	signaling		340498	1					
ANR	341335	Argument	aac_get_error ( err )		340498	4					
ANR	341336	CallExpression	aac_get_error ( err )		340498	0					
ANR	341337	Callee	aac_get_error		340498	0					
ANR	341338	Identifier	aac_get_error		340498	0					
ANR	341339	ArgumentList	err		340498	1					
ANR	341340	Argument	err		340498	0					
ANR	341341	Identifier	err		340498	0					
ANR	341342	GotoStatement	goto error ;	267:8:5504:5514	340498	1	True				
ANR	341343	Identifier	error		340498	0					
ANR	341344	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_AFTERBURNER , s -> afterburner ) ) != AACENC_OK )"		340498	20					
ANR	341345	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_AFTERBURNER , s -> afterburner ) ) != AACENC_OK"	273:8:5534:5656	340498	0	True				
ANR	341346	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_AFTERBURNER , s -> afterburner ) ) != AACENC_OK"		340498	0		!=			
ANR	341347	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_AFTERBURNER , s -> afterburner )"		340498	0		=			
ANR	341348	Identifier	err		340498	0					
ANR	341349	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_AFTERBURNER , s -> afterburner )"		340498	1					
ANR	341350	Callee	aacEncoder_SetParam		340498	0					
ANR	341351	Identifier	aacEncoder_SetParam		340498	0					
ANR	341352	ArgumentList	s -> handle		340498	1					
ANR	341353	Argument	s -> handle		340498	0					
ANR	341354	PtrMemberAccess	s -> handle		340498	0					
ANR	341355	Identifier	s		340498	0					
ANR	341356	Identifier	handle		340498	1					
ANR	341357	Argument	AACENC_AFTERBURNER		340498	1					
ANR	341358	Identifier	AACENC_AFTERBURNER		340498	0					
ANR	341359	Argument	s -> afterburner		340498	2					
ANR	341360	PtrMemberAccess	s -> afterburner		340498	0					
ANR	341361	Identifier	s		340498	0					
ANR	341362	Identifier	afterburner		340498	1					
ANR	341363	Identifier	AACENC_OK		340498	1					
ANR	341364	CompoundStatement		273:66:5599:5599	340498	1					
ANR	341365	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set afterburner to %d: %s\\n"" , s -> afterburner , aac_get_error ( err ) )"	277:8:5670:5790	340498	0	True				
ANR	341366	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set afterburner to %d: %s\\n"" , s -> afterburner , aac_get_error ( err ) )"		340498	0					
ANR	341367	Callee	av_log		340498	0					
ANR	341368	Identifier	av_log		340498	0					
ANR	341369	ArgumentList	avctx		340498	1					
ANR	341370	Argument	avctx		340498	0					
ANR	341371	Identifier	avctx		340498	0					
ANR	341372	Argument	AV_LOG_ERROR		340498	1					
ANR	341373	Identifier	AV_LOG_ERROR		340498	0					
ANR	341374	Argument	"""Unable to set afterburner to %d: %s\\n"""		340498	2					
ANR	341375	PrimaryExpression	"""Unable to set afterburner to %d: %s\\n"""		340498	0					
ANR	341376	Argument	s -> afterburner		340498	3					
ANR	341377	PtrMemberAccess	s -> afterburner		340498	0					
ANR	341378	Identifier	s		340498	0					
ANR	341379	Identifier	afterburner		340498	1					
ANR	341380	Argument	aac_get_error ( err )		340498	4					
ANR	341381	CallExpression	aac_get_error ( err )		340498	0					
ANR	341382	Callee	aac_get_error		340498	0					
ANR	341383	Identifier	aac_get_error		340498	0					
ANR	341384	ArgumentList	err		340498	1					
ANR	341385	Argument	err		340498	0					
ANR	341386	Identifier	err		340498	0					
ANR	341387	GotoStatement	goto error ;	281:8:5801:5811	340498	1	True				
ANR	341388	Identifier	error		340498	0					
ANR	341389	IfStatement	if ( avctx -> cutoff > 0 )		340498	21					
ANR	341390	Condition	avctx -> cutoff > 0	287:8:5831:5847	340498	0	True				
ANR	341391	RelationalExpression	avctx -> cutoff > 0		340498	0		>			
ANR	341392	PtrMemberAccess	avctx -> cutoff		340498	0					
ANR	341393	Identifier	avctx		340498	0					
ANR	341394	Identifier	cutoff		340498	1					
ANR	341395	PrimaryExpression	0		340498	1					
ANR	341396	CompoundStatement		285:27:5790:5790	340498	1					
ANR	341397	IfStatement	if ( avctx -> cutoff < ( avctx -> sample_rate + 255 ) >> 8 )		340498	0					
ANR	341398	Condition	avctx -> cutoff < ( avctx -> sample_rate + 255 ) >> 8	289:12:5865:5911	340498	0	True				
ANR	341399	RelationalExpression	avctx -> cutoff < ( avctx -> sample_rate + 255 ) >> 8		340498	0		<			
ANR	341400	PtrMemberAccess	avctx -> cutoff		340498	0					
ANR	341401	Identifier	avctx		340498	0					
ANR	341402	Identifier	cutoff		340498	1					
ANR	341403	ShiftExpression	( avctx -> sample_rate + 255 ) >> 8		340498	1		>>			
ANR	341404	AdditiveExpression	avctx -> sample_rate + 255		340498	0		+			
ANR	341405	PtrMemberAccess	avctx -> sample_rate		340498	0					
ANR	341406	Identifier	avctx		340498	0					
ANR	341407	Identifier	sample_rate		340498	1					
ANR	341408	PrimaryExpression	255		340498	1					
ANR	341409	PrimaryExpression	8		340498	1					
ANR	341410	CompoundStatement		287:61:5854:5854	340498	1					
ANR	341411	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""cutoff valid range is %d-20000\\n"" , ( avctx -> sample_rate + 255 ) >> 8 )"	291:12:5929:6045	340498	0	True				
ANR	341412	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""cutoff valid range is %d-20000\\n"" , ( avctx -> sample_rate + 255 ) >> 8 )"		340498	0					
ANR	341413	Callee	av_log		340498	0					
ANR	341414	Identifier	av_log		340498	0					
ANR	341415	ArgumentList	avctx		340498	1					
ANR	341416	Argument	avctx		340498	0					
ANR	341417	Identifier	avctx		340498	0					
ANR	341418	Argument	AV_LOG_ERROR		340498	1					
ANR	341419	Identifier	AV_LOG_ERROR		340498	0					
ANR	341420	Argument	"""cutoff valid range is %d-20000\\n"""		340498	2					
ANR	341421	PrimaryExpression	"""cutoff valid range is %d-20000\\n"""		340498	0					
ANR	341422	Argument	( avctx -> sample_rate + 255 ) >> 8		340498	3					
ANR	341423	ShiftExpression	( avctx -> sample_rate + 255 ) >> 8		340498	0		>>			
ANR	341424	AdditiveExpression	avctx -> sample_rate + 255		340498	0		+			
ANR	341425	PtrMemberAccess	avctx -> sample_rate		340498	0					
ANR	341426	Identifier	avctx		340498	0					
ANR	341427	Identifier	sample_rate		340498	1					
ANR	341428	PrimaryExpression	255		340498	1					
ANR	341429	PrimaryExpression	8		340498	1					
ANR	341430	GotoStatement	goto error ;	295:12:6060:6070	340498	1	True				
ANR	341431	Identifier	error		340498	0					
ANR	341432	IfStatement	"if ( ( err = aacEncoder_SetParam ( s -> handle , AACENC_BANDWIDTH , avctx -> cutoff ) ) != AACENC_OK )"		340498	1					
ANR	341433	Condition	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BANDWIDTH , avctx -> cutoff ) ) != AACENC_OK"	299:12:6096:6219	340498	0	True				
ANR	341434	EqualityExpression	"( err = aacEncoder_SetParam ( s -> handle , AACENC_BANDWIDTH , avctx -> cutoff ) ) != AACENC_OK"		340498	0		!=			
ANR	341435	AssignmentExpression	"err = aacEncoder_SetParam ( s -> handle , AACENC_BANDWIDTH , avctx -> cutoff )"		340498	0		=			
ANR	341436	Identifier	err		340498	0					
ANR	341437	CallExpression	"aacEncoder_SetParam ( s -> handle , AACENC_BANDWIDTH , avctx -> cutoff )"		340498	1					
ANR	341438	Callee	aacEncoder_SetParam		340498	0					
ANR	341439	Identifier	aacEncoder_SetParam		340498	0					
ANR	341440	ArgumentList	s -> handle		340498	1					
ANR	341441	Argument	s -> handle		340498	0					
ANR	341442	PtrMemberAccess	s -> handle		340498	0					
ANR	341443	Identifier	s		340498	0					
ANR	341444	Identifier	handle		340498	1					
ANR	341445	Argument	AACENC_BANDWIDTH		340498	1					
ANR	341446	Identifier	AACENC_BANDWIDTH		340498	0					
ANR	341447	Argument	avctx -> cutoff		340498	2					
ANR	341448	PtrMemberAccess	avctx -> cutoff		340498	0					
ANR	341449	Identifier	avctx		340498	0					
ANR	341450	Identifier	cutoff		340498	1					
ANR	341451	Identifier	AACENC_OK		340498	1					
ANR	341452	CompoundStatement		299:69:6162:6162	340498	1					
ANR	341453	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the encoder bandwidth to %d: %s\\n"" , avctx -> cutoff , aac_get_error ( err ) )"	303:12:6237:6370	340498	0	True				
ANR	341454	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to set the encoder bandwidth to %d: %s\\n"" , avctx -> cutoff , aac_get_error ( err ) )"		340498	0					
ANR	341455	Callee	av_log		340498	0					
ANR	341456	Identifier	av_log		340498	0					
ANR	341457	ArgumentList	avctx		340498	1					
ANR	341458	Argument	avctx		340498	0					
ANR	341459	Identifier	avctx		340498	0					
ANR	341460	Argument	AV_LOG_ERROR		340498	1					
ANR	341461	Identifier	AV_LOG_ERROR		340498	0					
ANR	341462	Argument	"""Unable to set the encoder bandwidth to %d: %s\\n"""		340498	2					
ANR	341463	PrimaryExpression	"""Unable to set the encoder bandwidth to %d: %s\\n"""		340498	0					
ANR	341464	Argument	avctx -> cutoff		340498	3					
ANR	341465	PtrMemberAccess	avctx -> cutoff		340498	0					
ANR	341466	Identifier	avctx		340498	0					
ANR	341467	Identifier	cutoff		340498	1					
ANR	341468	Argument	aac_get_error ( err )		340498	4					
ANR	341469	CallExpression	aac_get_error ( err )		340498	0					
ANR	341470	Callee	aac_get_error		340498	0					
ANR	341471	Identifier	aac_get_error		340498	0					
ANR	341472	ArgumentList	err		340498	1					
ANR	341473	Argument	err		340498	0					
ANR	341474	Identifier	err		340498	0					
ANR	341475	GotoStatement	goto error ;	307:12:6385:6395	340498	1	True				
ANR	341476	Identifier	error		340498	0					
ANR	341477	IfStatement	"if ( ( err = aacEncEncode ( s -> handle , NULL , NULL , NULL , NULL ) ) != AACENC_OK )"		340498	22					
ANR	341478	Condition	"( err = aacEncEncode ( s -> handle , NULL , NULL , NULL , NULL ) ) != AACENC_OK"	315:8:6426:6493	340498	0	True				
ANR	341479	EqualityExpression	"( err = aacEncEncode ( s -> handle , NULL , NULL , NULL , NULL ) ) != AACENC_OK"		340498	0		!=			
ANR	341480	AssignmentExpression	"err = aacEncEncode ( s -> handle , NULL , NULL , NULL , NULL )"		340498	0		=			
ANR	341481	Identifier	err		340498	0					
ANR	341482	CallExpression	"aacEncEncode ( s -> handle , NULL , NULL , NULL , NULL )"		340498	1					
ANR	341483	Callee	aacEncEncode		340498	0					
ANR	341484	Identifier	aacEncEncode		340498	0					
ANR	341485	ArgumentList	s -> handle		340498	1					
ANR	341486	Argument	s -> handle		340498	0					
ANR	341487	PtrMemberAccess	s -> handle		340498	0					
ANR	341488	Identifier	s		340498	0					
ANR	341489	Identifier	handle		340498	1					
ANR	341490	Argument	NULL		340498	1					
ANR	341491	Identifier	NULL		340498	0					
ANR	341492	Argument	NULL		340498	2					
ANR	341493	Identifier	NULL		340498	0					
ANR	341494	Argument	NULL		340498	3					
ANR	341495	Identifier	NULL		340498	0					
ANR	341496	Argument	NULL		340498	4					
ANR	341497	Identifier	NULL		340498	0					
ANR	341498	Identifier	AACENC_OK		340498	1					
ANR	341499	CompoundStatement		313:78:6436:6436	340498	1					
ANR	341500	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to initialize the encoder: %s\\n"" , aac_get_error ( err ) )"	317:8:6507:6612	340498	0	True				
ANR	341501	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to initialize the encoder: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	341502	Callee	av_log		340498	0					
ANR	341503	Identifier	av_log		340498	0					
ANR	341504	ArgumentList	avctx		340498	1					
ANR	341505	Argument	avctx		340498	0					
ANR	341506	Identifier	avctx		340498	0					
ANR	341507	Argument	AV_LOG_ERROR		340498	1					
ANR	341508	Identifier	AV_LOG_ERROR		340498	0					
ANR	341509	Argument	"""Unable to initialize the encoder: %s\\n"""		340498	2					
ANR	341510	PrimaryExpression	"""Unable to initialize the encoder: %s\\n"""		340498	0					
ANR	341511	Argument	aac_get_error ( err )		340498	3					
ANR	341512	CallExpression	aac_get_error ( err )		340498	0					
ANR	341513	Callee	aac_get_error		340498	0					
ANR	341514	Identifier	aac_get_error		340498	0					
ANR	341515	ArgumentList	err		340498	1					
ANR	341516	Argument	err		340498	0					
ANR	341517	Identifier	err		340498	0					
ANR	341518	ReturnStatement	return AVERROR ( EINVAL ) ;	321:8:6623:6645	340498	1	True				
ANR	341519	CallExpression	AVERROR ( EINVAL )		340498	0					
ANR	341520	Callee	AVERROR		340498	0					
ANR	341521	Identifier	AVERROR		340498	0					
ANR	341522	ArgumentList	EINVAL		340498	1					
ANR	341523	Argument	EINVAL		340498	0					
ANR	341524	Identifier	EINVAL		340498	0					
ANR	341525	IfStatement	"if ( ( err = aacEncInfo ( s -> handle , & info ) ) != AACENC_OK )"		340498	23					
ANR	341526	Condition	"( err = aacEncInfo ( s -> handle , & info ) ) != AACENC_OK"	327:8:6665:6713	340498	0	True				
ANR	341527	EqualityExpression	"( err = aacEncInfo ( s -> handle , & info ) ) != AACENC_OK"		340498	0		!=			
ANR	341528	AssignmentExpression	"err = aacEncInfo ( s -> handle , & info )"		340498	0		=			
ANR	341529	Identifier	err		340498	0					
ANR	341530	CallExpression	"aacEncInfo ( s -> handle , & info )"		340498	1					
ANR	341531	Callee	aacEncInfo		340498	0					
ANR	341532	Identifier	aacEncInfo		340498	0					
ANR	341533	ArgumentList	s -> handle		340498	1					
ANR	341534	Argument	s -> handle		340498	0					
ANR	341535	PtrMemberAccess	s -> handle		340498	0					
ANR	341536	Identifier	s		340498	0					
ANR	341537	Identifier	handle		340498	1					
ANR	341538	Argument	& info		340498	1					
ANR	341539	UnaryOperationExpression	& info		340498	0					
ANR	341540	UnaryOperator	&		340498	0					
ANR	341541	Identifier	info		340498	1					
ANR	341542	Identifier	AACENC_OK		340498	1					
ANR	341543	CompoundStatement		325:59:6656:6656	340498	1					
ANR	341544	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unable to get encoder info: %s\\n"" , aac_get_error ( err ) )"	329:8:6727:6826	340498	0	True				
ANR	341545	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unable to get encoder info: %s\\n"" , aac_get_error ( err ) )"		340498	0					
ANR	341546	Callee	av_log		340498	0					
ANR	341547	Identifier	av_log		340498	0					
ANR	341548	ArgumentList	avctx		340498	1					
ANR	341549	Argument	avctx		340498	0					
ANR	341550	Identifier	avctx		340498	0					
ANR	341551	Argument	AV_LOG_ERROR		340498	1					
ANR	341552	Identifier	AV_LOG_ERROR		340498	0					
ANR	341553	Argument	"""Unable to get encoder info: %s\\n"""		340498	2					
ANR	341554	PrimaryExpression	"""Unable to get encoder info: %s\\n"""		340498	0					
ANR	341555	Argument	aac_get_error ( err )		340498	3					
ANR	341556	CallExpression	aac_get_error ( err )		340498	0					
ANR	341557	Callee	aac_get_error		340498	0					
ANR	341558	Identifier	aac_get_error		340498	0					
ANR	341559	ArgumentList	err		340498	1					
ANR	341560	Argument	err		340498	0					
ANR	341561	Identifier	err		340498	0					
ANR	341562	GotoStatement	goto error ;	333:8:6837:6847	340498	1	True				
ANR	341563	Identifier	error		340498	0					
ANR	341564	ExpressionStatement	avctx -> coded_frame = avcodec_alloc_frame ( )	341:4:6892:6934	340498	24	True				
ANR	341565	AssignmentExpression	avctx -> coded_frame = avcodec_alloc_frame ( )		340498	0		=			
ANR	341566	PtrMemberAccess	avctx -> coded_frame		340498	0					
ANR	341567	Identifier	avctx		340498	0					
ANR	341568	Identifier	coded_frame		340498	1					
ANR	341569	CallExpression	avcodec_alloc_frame ( )		340498	1					
ANR	341570	Callee	avcodec_alloc_frame		340498	0					
ANR	341571	Identifier	avcodec_alloc_frame		340498	0					
ANR	341572	ArgumentList			340498	1					
ANR	341573	IfStatement	if ( ! avctx -> coded_frame )		340498	25					
ANR	341574	Condition	! avctx -> coded_frame	343:8:6945:6963	340498	0	True				
ANR	341575	UnaryOperationExpression	! avctx -> coded_frame		340498	0					
ANR	341576	UnaryOperator	!		340498	0					
ANR	341577	PtrMemberAccess	avctx -> coded_frame		340498	1					
ANR	341578	Identifier	avctx		340498	0					
ANR	341579	Identifier	coded_frame		340498	1					
ANR	341580	CompoundStatement		341:29:6906:6906	340498	1					
ANR	341581	ExpressionStatement	ret = AVERROR ( ENOMEM )	345:8:6977:6998	340498	0	True				
ANR	341582	AssignmentExpression	ret = AVERROR ( ENOMEM )		340498	0		=			
ANR	341583	Identifier	ret		340498	0					
ANR	341584	CallExpression	AVERROR ( ENOMEM )		340498	1					
ANR	341585	Callee	AVERROR		340498	0					
ANR	341586	Identifier	AVERROR		340498	0					
ANR	341587	ArgumentList	ENOMEM		340498	1					
ANR	341588	Argument	ENOMEM		340498	0					
ANR	341589	Identifier	ENOMEM		340498	0					
ANR	341590	GotoStatement	goto error ;	347:8:7009:7019	340498	1	True				
ANR	341591	Identifier	error		340498	0					
ANR	341592	ExpressionStatement	avctx -> frame_size = info . frameLength	353:4:7041:7077	340498	26	True				
ANR	341593	AssignmentExpression	avctx -> frame_size = info . frameLength		340498	0		=			
ANR	341594	PtrMemberAccess	avctx -> frame_size		340498	0					
ANR	341595	Identifier	avctx		340498	0					
ANR	341596	Identifier	frame_size		340498	1					
ANR	341597	MemberAccess	info . frameLength		340498	1					
ANR	341598	Identifier	info		340498	0					
ANR	341599	Identifier	frameLength		340498	1					
ANR	341600	ExpressionStatement	avctx -> delay = info . encoderDelay	355:4:7084:7121	340498	27	True				
ANR	341601	AssignmentExpression	avctx -> delay = info . encoderDelay		340498	0		=			
ANR	341602	PtrMemberAccess	avctx -> delay		340498	0					
ANR	341603	Identifier	avctx		340498	0					
ANR	341604	Identifier	delay		340498	1					
ANR	341605	MemberAccess	info . encoderDelay		340498	1					
ANR	341606	Identifier	info		340498	0					
ANR	341607	Identifier	encoderDelay		340498	1					
ANR	341608	ExpressionStatement	"ff_af_queue_init ( avctx , & s -> afq )"	357:4:7128:7160	340498	28	True				
ANR	341609	CallExpression	"ff_af_queue_init ( avctx , & s -> afq )"		340498	0					
ANR	341610	Callee	ff_af_queue_init		340498	0					
ANR	341611	Identifier	ff_af_queue_init		340498	0					
ANR	341612	ArgumentList	avctx		340498	1					
ANR	341613	Argument	avctx		340498	0					
ANR	341614	Identifier	avctx		340498	0					
ANR	341615	Argument	& s -> afq		340498	1					
ANR	341616	UnaryOperationExpression	& s -> afq		340498	0					
ANR	341617	UnaryOperator	&		340498	0					
ANR	341618	PtrMemberAccess	s -> afq		340498	1					
ANR	341619	Identifier	s		340498	0					
ANR	341620	Identifier	afq		340498	1					
ANR	341621	IfStatement	if ( avctx -> flags & CODEC_FLAG_GLOBAL_HEADER )		340498	29					
ANR	341622	Condition	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER	361:8:7173:7211	340498	0	True				
ANR	341623	BitAndExpression	avctx -> flags & CODEC_FLAG_GLOBAL_HEADER		340498	0		&			
ANR	341624	PtrMemberAccess	avctx -> flags		340498	0					
ANR	341625	Identifier	avctx		340498	0					
ANR	341626	Identifier	flags		340498	1					
ANR	341627	Identifier	CODEC_FLAG_GLOBAL_HEADER		340498	1					
ANR	341628	CompoundStatement		359:49:7154:7154	340498	1					
ANR	341629	ExpressionStatement	avctx -> extradata_size = info . confSize	363:8:7225:7262	340498	0	True				
ANR	341630	AssignmentExpression	avctx -> extradata_size = info . confSize		340498	0		=			
ANR	341631	PtrMemberAccess	avctx -> extradata_size		340498	0					
ANR	341632	Identifier	avctx		340498	0					
ANR	341633	Identifier	extradata_size		340498	1					
ANR	341634	MemberAccess	info . confSize		340498	1					
ANR	341635	Identifier	info		340498	0					
ANR	341636	Identifier	confSize		340498	1					
ANR	341637	ExpressionStatement	avctx -> extradata = av_mallocz ( avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE )	365:8:7273:7405	340498	1	True				
ANR	341638	AssignmentExpression	avctx -> extradata = av_mallocz ( avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE )		340498	0		=			
ANR	341639	PtrMemberAccess	avctx -> extradata		340498	0					
ANR	341640	Identifier	avctx		340498	0					
ANR	341641	Identifier	extradata		340498	1					
ANR	341642	CallExpression	av_mallocz ( avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE )		340498	1					
ANR	341643	Callee	av_mallocz		340498	0					
ANR	341644	Identifier	av_mallocz		340498	0					
ANR	341645	ArgumentList	avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE		340498	1					
ANR	341646	Argument	avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE		340498	0					
ANR	341647	AdditiveExpression	avctx -> extradata_size + FF_INPUT_BUFFER_PADDING_SIZE		340498	0		+			
ANR	341648	PtrMemberAccess	avctx -> extradata_size		340498	0					
ANR	341649	Identifier	avctx		340498	0					
ANR	341650	Identifier	extradata_size		340498	1					
ANR	341651	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		340498	1					
ANR	341652	IfStatement	if ( ! avctx -> extradata )		340498	2					
ANR	341653	Condition	! avctx -> extradata	369:12:7420:7436	340498	0	True				
ANR	341654	UnaryOperationExpression	! avctx -> extradata		340498	0					
ANR	341655	UnaryOperator	!		340498	0					
ANR	341656	PtrMemberAccess	avctx -> extradata		340498	1					
ANR	341657	Identifier	avctx		340498	0					
ANR	341658	Identifier	extradata		340498	1					
ANR	341659	CompoundStatement		367:31:7379:7379	340498	1					
ANR	341660	ExpressionStatement	ret = AVERROR ( ENOMEM )	371:12:7454:7475	340498	0	True				
ANR	341661	AssignmentExpression	ret = AVERROR ( ENOMEM )		340498	0		=			
ANR	341662	Identifier	ret		340498	0					
ANR	341663	CallExpression	AVERROR ( ENOMEM )		340498	1					
ANR	341664	Callee	AVERROR		340498	0					
ANR	341665	Identifier	AVERROR		340498	0					
ANR	341666	ArgumentList	ENOMEM		340498	1					
ANR	341667	Argument	ENOMEM		340498	0					
ANR	341668	Identifier	ENOMEM		340498	0					
ANR	341669	GotoStatement	goto error ;	373:12:7490:7500	340498	1	True				
ANR	341670	Identifier	error		340498	0					
ANR	341671	ExpressionStatement	"memcpy ( avctx -> extradata , info . confBuf , info . confSize )"	379:8:7524:7577	340498	3	True				
ANR	341672	CallExpression	"memcpy ( avctx -> extradata , info . confBuf , info . confSize )"		340498	0					
ANR	341673	Callee	memcpy		340498	0					
ANR	341674	Identifier	memcpy		340498	0					
ANR	341675	ArgumentList	avctx -> extradata		340498	1					
ANR	341676	Argument	avctx -> extradata		340498	0					
ANR	341677	PtrMemberAccess	avctx -> extradata		340498	0					
ANR	341678	Identifier	avctx		340498	0					
ANR	341679	Identifier	extradata		340498	1					
ANR	341680	Argument	info . confBuf		340498	1					
ANR	341681	MemberAccess	info . confBuf		340498	0					
ANR	341682	Identifier	info		340498	0					
ANR	341683	Identifier	confBuf		340498	1					
ANR	341684	Argument	info . confSize		340498	2					
ANR	341685	MemberAccess	info . confSize		340498	0					
ANR	341686	Identifier	info		340498	0					
ANR	341687	Identifier	confSize		340498	1					
ANR	341688	ReturnStatement	return 0 ;	383:4:7591:7599	340498	30	True				
ANR	341689	PrimaryExpression	0		340498	0					
ANR	341690	Label	error :	385:0:7602:7607	340498	31	True				
ANR	341691	Identifier	error		340498	0					
ANR	341692	ExpressionStatement	aac_encode_close ( avctx )	387:4:7614:7637	340498	32	True				
ANR	341693	CallExpression	aac_encode_close ( avctx )		340498	0					
ANR	341694	Callee	aac_encode_close		340498	0					
ANR	341695	Identifier	aac_encode_close		340498	0					
ANR	341696	ArgumentList	avctx		340498	1					
ANR	341697	Argument	avctx		340498	0					
ANR	341698	Identifier	avctx		340498	0					
ANR	341699	ReturnStatement	return ret ;	389:4:7644:7654	340498	33	True				
ANR	341700	Identifier	ret		340498	0					
ANR	341701	ReturnType	static av_cold int		340498	1					
ANR	341702	Identifier	aac_encode_init		340498	2					
ANR	341703	ParameterList	AVCodecContext * avctx		340498	3					
ANR	341704	Parameter	AVCodecContext * avctx	1:35:35:55	340498	0	True				
ANR	341705	ParameterType	AVCodecContext *		340498	0					
ANR	341706	Identifier	avctx		340498	1					
ANR	341707	CFGEntryNode	ENTRY		340498		True				
ANR	341708	CFGExitNode	EXIT		340498		True				
ANR	341709	Symbol	ENOMEM		340498						
ANR	341710	Symbol	avcodec_alloc_frame		340498						
ANR	341711	Symbol	avctx -> delay		340498						
ANR	341712	Symbol	AACENC_CHANNELMODE		340498						
ANR	341713	Symbol	AACENC_BITRATE		340498						
ANR	341714	Symbol	aot		340498						
ANR	341715	Symbol	FF_PROFILE_AAC_HE		340498						
ANR	341716	Symbol	s -> latm		340498						
ANR	341717	Symbol	mode		340498						
ANR	341718	Symbol	avctx -> channels		340498						
ANR	341719	Symbol	AACENC_OK		340498						
ANR	341720	Symbol	sce		340498						
ANR	341721	Symbol	s -> vbr		340498						
ANR	341722	Symbol	s -> header_period		340498						
ANR	341723	Symbol	AACENC_BITRATEMODE		340498						
ANR	341724	Symbol	info . confSize		340498						
ANR	341725	Symbol	FF_PROFILE_UNKNOWN		340498						
ANR	341726	Symbol	aacEncEncode		340498						
ANR	341727	Symbol	cpe		340498						
ANR	341728	Symbol	avctx -> flags		340498						
ANR	341729	Symbol	av_clip		340498						
ANR	341730	Symbol	info		340498						
ANR	341731	Symbol	ret		340498						
ANR	341732	Symbol	AACENC_SBR_MODE		340498						
ANR	341733	Symbol	CODEC_FLAG_QSCALE		340498						
ANR	341734	Symbol	NULL		340498						
ANR	341735	Symbol	& s -> afq		340498						
ANR	341736	Symbol	& info		340498						
ANR	341737	Symbol	AACENC_AOT		340498						
ANR	341738	Symbol	av_mallocz		340498						
ANR	341739	Symbol	FF_PROFILE_AAC_HE_V2		340498						
ANR	341740	Symbol	avctx -> global_quality		340498						
ANR	341741	Symbol	* avctx		340498						
ANR	341742	Symbol	MODE_1_2_2_1		340498						
ANR	341743	Symbol	aacEncOpen		340498						
ANR	341744	Symbol	avctx -> bit_rate		340498						
ANR	341745	Symbol	MODE_1_2_1		340498						
ANR	341746	Symbol	AACENC_SAMPLERATE		340498						
ANR	341747	Symbol	MODE_1_2_2		340498						
ANR	341748	Symbol	AACENC_AFTERBURNER		340498						
ANR	341749	Symbol	avctx -> cutoff		340498						
ANR	341750	Symbol	info . frameLength		340498						
ANR	341751	Symbol	avctx -> frame_size		340498						
ANR	341752	Symbol	FF_PROFILE_AAC_LOW		340498						
ANR	341753	Symbol	MODE_1_2		340498						
ANR	341754	Symbol	MODE_2		340498						
ANR	341755	Symbol	aacEncInfo		340498						
ANR	341756	Symbol	MODE_1		340498						
ANR	341757	Symbol	AACENC_TRANSMUX		340498						
ANR	341758	Symbol	AACENC_BANDWIDTH		340498						
ANR	341759	Symbol	s -> handle		340498						
ANR	341760	Symbol	info . confBuf		340498						
ANR	341761	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		340498						
ANR	341762	Symbol	avctx -> coded_frame		340498						
ANR	341763	Symbol	aac_get_error		340498						
ANR	341764	Symbol	aacEncoder_SetParam		340498						
ANR	341765	Symbol	avctx		340498						
ANR	341766	Symbol	avctx -> profile		340498						
ANR	341767	Symbol	s -> signaling		340498						
ANR	341768	Symbol	avctx -> extradata		340498						
ANR	341769	Symbol	err		340498						
ANR	341770	Symbol	AV_LOG_ERROR		340498						
ANR	341771	Symbol	avctx -> extradata_size		340498						
ANR	341772	Symbol	CODEC_FLAG_GLOBAL_HEADER		340498						
ANR	341773	Symbol	avctx -> priv_data		340498						
ANR	341774	Symbol	s -> eld_sbr		340498						
ANR	341775	Symbol	avctx -> sample_rate		340498						
ANR	341776	Symbol	AACENC_HEADER_PERIOD		340498						
ANR	341777	Symbol	EINVAL		340498						
ANR	341778	Symbol	AACENC_CHANNELORDER		340498						
ANR	341779	Symbol	s		340498						
ANR	341780	Symbol	FF_PROFILE_AAC_ELD		340498						
ANR	341781	Symbol	AACENC_SIGNALING_MODE		340498						
ANR	341782	Symbol	AVERROR		340498						
ANR	341783	Symbol	& s -> handle		340498						
ANR	341784	Symbol	AV_LOG_WARNING		340498						
ANR	341785	Symbol	* s		340498						
ANR	341786	Symbol	s -> afterburner		340498						
ANR	341787	Symbol	info . encoderDelay		340498						
