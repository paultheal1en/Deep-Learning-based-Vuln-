command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8997151	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vga_ioport_write_0.c								
ANR	8997152	Function	vga_ioport_write	1:0:0:4695							
ANR	8997153	FunctionDef	"vga_ioport_write (void * opaque , uint32_t addr , uint32_t val)"		8997152	0					
ANR	8997154	CompoundStatement		3:0:66:4695	8997152	0					
ANR	8997155	IdentifierDeclStatement	VGACommonState * s = opaque ;	5:4:73:99	8997152	0	True				
ANR	8997156	IdentifierDecl	* s = opaque		8997152	0					
ANR	8997157	IdentifierDeclType	VGACommonState *		8997152	0					
ANR	8997158	Identifier	s		8997152	1					
ANR	8997159	AssignmentExpression	* s = opaque		8997152	2		=			
ANR	8997160	Identifier	opaque		8997152	0					
ANR	8997161	Identifier	opaque		8997152	1					
ANR	8997162	IdentifierDeclStatement	int index ;	7:4:106:115	8997152	1	True				
ANR	8997163	IdentifierDecl	index		8997152	0					
ANR	8997164	IdentifierDeclType	int		8997152	0					
ANR	8997165	Identifier	index		8997152	1					
ANR	8997166	IfStatement	"if ( vga_ioport_invalid ( s , addr ) )"		8997152	2					
ANR	8997167	Condition	"vga_ioport_invalid ( s , addr )"	13:8:198:224	8997152	0	True				
ANR	8997168	CallExpression	"vga_ioport_invalid ( s , addr )"		8997152	0					
ANR	8997169	Callee	vga_ioport_invalid		8997152	0					
ANR	8997170	Identifier	vga_ioport_invalid		8997152	0					
ANR	8997171	ArgumentList	s		8997152	1					
ANR	8997172	Argument	s		8997152	0					
ANR	8997173	Identifier	s		8997152	0					
ANR	8997174	Argument	addr		8997152	1					
ANR	8997175	Identifier	addr		8997152	0					
ANR	8997176	CompoundStatement		11:37:160:160	8997152	1					
ANR	8997177	ReturnStatement	return ;	15:8:238:244	8997152	0	True				
ANR	8997178	ExpressionStatement	"printf ( ""VGA: write addr=0x%04x data=0x%02x\\n"" , addr , val )"	21:4:276:333	8997152	3	True				
ANR	8997179	CallExpression	"printf ( ""VGA: write addr=0x%04x data=0x%02x\\n"" , addr , val )"		8997152	0					
ANR	8997180	Callee	printf		8997152	0					
ANR	8997181	Identifier	printf		8997152	0					
ANR	8997182	ArgumentList	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8997152	1					
ANR	8997183	Argument	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8997152	0					
ANR	8997184	PrimaryExpression	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8997152	0					
ANR	8997185	Argument	addr		8997152	1					
ANR	8997186	Identifier	addr		8997152	0					
ANR	8997187	Argument	val		8997152	2					
ANR	8997188	Identifier	val		8997152	0					
ANR	8997189	SwitchStatement	switch ( addr )		8997152	4					
ANR	8997190	Condition	addr	27:11:357:360	8997152	0	True				
ANR	8997191	Identifier	addr		8997152	0					
ANR	8997192	CompoundStatement		25:17:296:296	8997152	1					
ANR	8997193	Label	case VGA_ATT_W :	29:4:370:384	8997152	0	True				
ANR	8997194	Identifier	VGA_ATT_W		8997152	0					
ANR	8997195	IfStatement	if ( s -> ar_flip_flop == 0 )		8997152	1					
ANR	8997196	Condition	s -> ar_flip_flop == 0	31:12:399:418	8997152	0	True				
ANR	8997197	EqualityExpression	s -> ar_flip_flop == 0		8997152	0		==			
ANR	8997198	PtrMemberAccess	s -> ar_flip_flop		8997152	0					
ANR	8997199	Identifier	s		8997152	0					
ANR	8997200	Identifier	ar_flip_flop		8997152	1					
ANR	8997201	PrimaryExpression	0		8997152	1					
ANR	8997202	CompoundStatement		29:34:354:354	8997152	1					
ANR	8997203	ExpressionStatement	val &= 0x3f	33:12:436:447	8997152	0	True				
ANR	8997204	AssignmentExpression	val &= 0x3f		8997152	0		&=			
ANR	8997205	Identifier	val		8997152	0					
ANR	8997206	PrimaryExpression	0x3f		8997152	1					
ANR	8997207	ExpressionStatement	s -> ar_index = val	35:12:462:479	8997152	1	True				
ANR	8997208	AssignmentExpression	s -> ar_index = val		8997152	0		=			
ANR	8997209	PtrMemberAccess	s -> ar_index		8997152	0					
ANR	8997210	Identifier	s		8997152	0					
ANR	8997211	Identifier	ar_index		8997152	1					
ANR	8997212	Identifier	val		8997152	1					
ANR	8997213	ElseStatement	else		8997152	0					
ANR	8997214	CompoundStatement		35:15:430:430	8997152	0					
ANR	8997215	ExpressionStatement	index = s -> ar_index & 0x1f	39:12:512:538	8997152	0	True				
ANR	8997216	AssignmentExpression	index = s -> ar_index & 0x1f		8997152	0		=			
ANR	8997217	Identifier	index		8997152	0					
ANR	8997218	BitAndExpression	s -> ar_index & 0x1f		8997152	1		&			
ANR	8997219	PtrMemberAccess	s -> ar_index		8997152	0					
ANR	8997220	Identifier	s		8997152	0					
ANR	8997221	Identifier	ar_index		8997152	1					
ANR	8997222	PrimaryExpression	0x1f		8997152	1					
ANR	8997223	SwitchStatement	switch ( index )		8997152	1					
ANR	8997224	Condition	index	41:19:560:564	8997152	0	True				
ANR	8997225	Identifier	index		8997152	0					
ANR	8997226	CompoundStatement		39:26:500:500	8997152	1					
ANR	8997227	Statement	case	43:12:582:585	8997152	0	True				
ANR	8997228	Statement	VGA_ATC_PALETTE0	43:17:587:602	8997152	1	True				
ANR	8997229	Statement	...	43:34:604:606	8997152	2	True				
ANR	8997230	Label	VGA_ATC_PALETTEF :	43:38:608:624	8997152	3	True				
ANR	8997231	Identifier	VGA_ATC_PALETTEF		8997152	0					
ANR	8997232	ExpressionStatement	s -> ar [ index ] = val & 0x3f	45:16:643:668	8997152	4	True				
ANR	8997233	AssignmentExpression	s -> ar [ index ] = val & 0x3f		8997152	0		=			
ANR	8997234	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997235	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997236	Identifier	s		8997152	0					
ANR	8997237	Identifier	ar		8997152	1					
ANR	8997238	Identifier	index		8997152	1					
ANR	8997239	BitAndExpression	val & 0x3f		8997152	1		&			
ANR	8997240	Identifier	val		8997152	0					
ANR	8997241	PrimaryExpression	0x3f		8997152	1					
ANR	8997242	BreakStatement	break ;	47:16:687:692	8997152	5	True				
ANR	8997243	Label	case VGA_ATC_MODE :	49:12:707:724	8997152	6	True				
ANR	8997244	Identifier	VGA_ATC_MODE		8997152	0					
ANR	8997245	ExpressionStatement	s -> ar [ index ] = val & ~0x10	51:16:743:769	8997152	7	True				
ANR	8997246	AssignmentExpression	s -> ar [ index ] = val & ~0x10		8997152	0		=			
ANR	8997247	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997248	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997249	Identifier	s		8997152	0					
ANR	8997250	Identifier	ar		8997152	1					
ANR	8997251	Identifier	index		8997152	1					
ANR	8997252	BitAndExpression	val & ~0x10		8997152	1		&			
ANR	8997253	Identifier	val		8997152	0					
ANR	8997254	Identifier	~0x10		8997152	1					
ANR	8997255	BreakStatement	break ;	53:16:788:793	8997152	8	True				
ANR	8997256	Label	case VGA_ATC_OVERSCAN :	55:12:808:829	8997152	9	True				
ANR	8997257	Identifier	VGA_ATC_OVERSCAN		8997152	0					
ANR	8997258	ExpressionStatement	s -> ar [ index ] = val	57:16:848:866	8997152	10	True				
ANR	8997259	AssignmentExpression	s -> ar [ index ] = val		8997152	0		=			
ANR	8997260	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997261	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997262	Identifier	s		8997152	0					
ANR	8997263	Identifier	ar		8997152	1					
ANR	8997264	Identifier	index		8997152	1					
ANR	8997265	Identifier	val		8997152	1					
ANR	8997266	BreakStatement	break ;	59:16:885:890	8997152	11	True				
ANR	8997267	Label	case VGA_ATC_PLANE_ENABLE :	61:12:905:930	8997152	12	True				
ANR	8997268	Identifier	VGA_ATC_PLANE_ENABLE		8997152	0					
ANR	8997269	ExpressionStatement	s -> ar [ index ] = val & ~0xc0	63:16:949:975	8997152	13	True				
ANR	8997270	AssignmentExpression	s -> ar [ index ] = val & ~0xc0		8997152	0		=			
ANR	8997271	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997272	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997273	Identifier	s		8997152	0					
ANR	8997274	Identifier	ar		8997152	1					
ANR	8997275	Identifier	index		8997152	1					
ANR	8997276	BitAndExpression	val & ~0xc0		8997152	1		&			
ANR	8997277	Identifier	val		8997152	0					
ANR	8997278	Identifier	~0xc0		8997152	1					
ANR	8997279	BreakStatement	break ;	65:16:994:999	8997152	14	True				
ANR	8997280	Label	case VGA_ATC_PEL :	67:12:1014:1030	8997152	15	True				
ANR	8997281	Identifier	VGA_ATC_PEL		8997152	0					
ANR	8997282	ExpressionStatement	s -> ar [ index ] = val & ~0xf0	69:16:1049:1075	8997152	16	True				
ANR	8997283	AssignmentExpression	s -> ar [ index ] = val & ~0xf0		8997152	0		=			
ANR	8997284	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997285	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997286	Identifier	s		8997152	0					
ANR	8997287	Identifier	ar		8997152	1					
ANR	8997288	Identifier	index		8997152	1					
ANR	8997289	BitAndExpression	val & ~0xf0		8997152	1		&			
ANR	8997290	Identifier	val		8997152	0					
ANR	8997291	Identifier	~0xf0		8997152	1					
ANR	8997292	BreakStatement	break ;	71:16:1094:1099	8997152	17	True				
ANR	8997293	Label	case VGA_ATC_COLOR_PAGE :	73:12:1114:1137	8997152	18	True				
ANR	8997294	Identifier	VGA_ATC_COLOR_PAGE		8997152	0					
ANR	8997295	ExpressionStatement	s -> ar [ index ] = val & ~0xf0	75:16:1156:1182	8997152	19	True				
ANR	8997296	AssignmentExpression	s -> ar [ index ] = val & ~0xf0		8997152	0		=			
ANR	8997297	ArrayIndexing	s -> ar [ index ]		8997152	0					
ANR	8997298	PtrMemberAccess	s -> ar		8997152	0					
ANR	8997299	Identifier	s		8997152	0					
ANR	8997300	Identifier	ar		8997152	1					
ANR	8997301	Identifier	index		8997152	1					
ANR	8997302	BitAndExpression	val & ~0xf0		8997152	1		&			
ANR	8997303	Identifier	val		8997152	0					
ANR	8997304	Identifier	~0xf0		8997152	1					
ANR	8997305	BreakStatement	break ;	77:16:1201:1206	8997152	20	True				
ANR	8997306	Label	default :	79:12:1221:1228	8997152	21	True				
ANR	8997307	Identifier	default		8997152	0					
ANR	8997308	BreakStatement	break ;	81:16:1247:1252	8997152	22	True				
ANR	8997309	ExpressionStatement	s -> ar_flip_flop ^= 1	87:8:1289:1309	8997152	2	True				
ANR	8997310	AssignmentExpression	s -> ar_flip_flop ^= 1		8997152	0		^=			
ANR	8997311	PtrMemberAccess	s -> ar_flip_flop		8997152	0					
ANR	8997312	Identifier	s		8997152	0					
ANR	8997313	Identifier	ar_flip_flop		8997152	1					
ANR	8997314	PrimaryExpression	1		8997152	1					
ANR	8997315	BreakStatement	break ;	89:8:1320:1325	8997152	3	True				
ANR	8997316	Label	case VGA_MIS_W :	91:4:1332:1346	8997152	4	True				
ANR	8997317	Identifier	VGA_MIS_W		8997152	0					
ANR	8997318	ExpressionStatement	s -> msr = val & ~0x10	93:8:1357:1377	8997152	5	True				
ANR	8997319	AssignmentExpression	s -> msr = val & ~0x10		8997152	0		=			
ANR	8997320	PtrMemberAccess	s -> msr		8997152	0					
ANR	8997321	Identifier	s		8997152	0					
ANR	8997322	Identifier	msr		8997152	1					
ANR	8997323	BitAndExpression	val & ~0x10		8997152	1		&			
ANR	8997324	Identifier	val		8997152	0					
ANR	8997325	Identifier	~0x10		8997152	1					
ANR	8997326	ExpressionStatement	s -> update_retrace_info ( s )	95:8:1388:1413	8997152	6	True				
ANR	8997327	CallExpression	s -> update_retrace_info ( s )		8997152	0					
ANR	8997328	Callee	s -> update_retrace_info		8997152	0					
ANR	8997329	PtrMemberAccess	s -> update_retrace_info		8997152	0					
ANR	8997330	Identifier	s		8997152	0					
ANR	8997331	Identifier	update_retrace_info		8997152	1					
ANR	8997332	ArgumentList	s		8997152	1					
ANR	8997333	Argument	s		8997152	0					
ANR	8997334	Identifier	s		8997152	0					
ANR	8997335	BreakStatement	break ;	97:8:1424:1429	8997152	7	True				
ANR	8997336	Label	case VGA_SEQ_I :	99:4:1436:1450	8997152	8	True				
ANR	8997337	Identifier	VGA_SEQ_I		8997152	0					
ANR	8997338	ExpressionStatement	s -> sr_index = val & 7	101:8:1461:1482	8997152	9	True				
ANR	8997339	AssignmentExpression	s -> sr_index = val & 7		8997152	0		=			
ANR	8997340	PtrMemberAccess	s -> sr_index		8997152	0					
ANR	8997341	Identifier	s		8997152	0					
ANR	8997342	Identifier	sr_index		8997152	1					
ANR	8997343	BitAndExpression	val & 7		8997152	1		&			
ANR	8997344	Identifier	val		8997152	0					
ANR	8997345	PrimaryExpression	7		8997152	1					
ANR	8997346	BreakStatement	break ;	103:8:1493:1498	8997152	10	True				
ANR	8997347	Label	case VGA_SEQ_D :	105:4:1505:1519	8997152	11	True				
ANR	8997348	Identifier	VGA_SEQ_D		8997152	0					
ANR	8997349	ExpressionStatement	"printf ( ""vga: write SR%x = 0x%02x\\n"" , s -> sr_index , val )"	109:8:1552:1606	8997152	12	True				
ANR	8997350	CallExpression	"printf ( ""vga: write SR%x = 0x%02x\\n"" , s -> sr_index , val )"		8997152	0					
ANR	8997351	Callee	printf		8997152	0					
ANR	8997352	Identifier	printf		8997152	0					
ANR	8997353	ArgumentList	"""vga: write SR%x = 0x%02x\\n"""		8997152	1					
ANR	8997354	Argument	"""vga: write SR%x = 0x%02x\\n"""		8997152	0					
ANR	8997355	PrimaryExpression	"""vga: write SR%x = 0x%02x\\n"""		8997152	0					
ANR	8997356	Argument	s -> sr_index		8997152	1					
ANR	8997357	PtrMemberAccess	s -> sr_index		8997152	0					
ANR	8997358	Identifier	s		8997152	0					
ANR	8997359	Identifier	sr_index		8997152	1					
ANR	8997360	Argument	val		8997152	2					
ANR	8997361	Identifier	val		8997152	0					
ANR	8997362	ExpressionStatement	s -> sr [ s -> sr_index ] = val & sr_mask [ s -> sr_index ]	113:8:1625:1672	8997152	13	True				
ANR	8997363	AssignmentExpression	s -> sr [ s -> sr_index ] = val & sr_mask [ s -> sr_index ]		8997152	0		=			
ANR	8997364	ArrayIndexing	s -> sr [ s -> sr_index ]		8997152	0					
ANR	8997365	PtrMemberAccess	s -> sr		8997152	0					
ANR	8997366	Identifier	s		8997152	0					
ANR	8997367	Identifier	sr		8997152	1					
ANR	8997368	PtrMemberAccess	s -> sr_index		8997152	1					
ANR	8997369	Identifier	s		8997152	0					
ANR	8997370	Identifier	sr_index		8997152	1					
ANR	8997371	BitAndExpression	val & sr_mask [ s -> sr_index ]		8997152	1		&			
ANR	8997372	Identifier	val		8997152	0					
ANR	8997373	ArrayIndexing	sr_mask [ s -> sr_index ]		8997152	1					
ANR	8997374	Identifier	sr_mask		8997152	0					
ANR	8997375	PtrMemberAccess	s -> sr_index		8997152	1					
ANR	8997376	Identifier	s		8997152	0					
ANR	8997377	Identifier	sr_index		8997152	1					
ANR	8997378	IfStatement	if ( s -> sr_index == VGA_SEQ_CLOCK_MODE )		8997152	14					
ANR	8997379	Condition	s -> sr_index == VGA_SEQ_CLOCK_MODE	115:12:1687:1719	8997152	0	True				
ANR	8997380	EqualityExpression	s -> sr_index == VGA_SEQ_CLOCK_MODE		8997152	0		==			
ANR	8997381	PtrMemberAccess	s -> sr_index		8997152	0					
ANR	8997382	Identifier	s		8997152	0					
ANR	8997383	Identifier	sr_index		8997152	1					
ANR	8997384	Identifier	VGA_SEQ_CLOCK_MODE		8997152	1					
ANR	8997385	CompoundStatement		113:47:1655:1655	8997152	1					
ANR	8997386	ExpressionStatement	s -> update_retrace_info ( s )	117:12:1737:1762	8997152	0	True				
ANR	8997387	CallExpression	s -> update_retrace_info ( s )		8997152	0					
ANR	8997388	Callee	s -> update_retrace_info		8997152	0					
ANR	8997389	PtrMemberAccess	s -> update_retrace_info		8997152	0					
ANR	8997390	Identifier	s		8997152	0					
ANR	8997391	Identifier	update_retrace_info		8997152	1					
ANR	8997392	ArgumentList	s		8997152	1					
ANR	8997393	Argument	s		8997152	0					
ANR	8997394	Identifier	s		8997152	0					
ANR	8997395	ExpressionStatement	vga_update_memory_access ( s )	121:8:1784:1811	8997152	15	True				
ANR	8997396	CallExpression	vga_update_memory_access ( s )		8997152	0					
ANR	8997397	Callee	vga_update_memory_access		8997152	0					
ANR	8997398	Identifier	vga_update_memory_access		8997152	0					
ANR	8997399	ArgumentList	s		8997152	1					
ANR	8997400	Argument	s		8997152	0					
ANR	8997401	Identifier	s		8997152	0					
ANR	8997402	BreakStatement	break ;	123:8:1822:1827	8997152	16	True				
ANR	8997403	Label	case VGA_PEL_IR :	125:4:1834:1849	8997152	17	True				
ANR	8997404	Identifier	VGA_PEL_IR		8997152	0					
ANR	8997405	ExpressionStatement	s -> dac_read_index = val	127:8:1860:1883	8997152	18	True				
ANR	8997406	AssignmentExpression	s -> dac_read_index = val		8997152	0		=			
ANR	8997407	PtrMemberAccess	s -> dac_read_index		8997152	0					
ANR	8997408	Identifier	s		8997152	0					
ANR	8997409	Identifier	dac_read_index		8997152	1					
ANR	8997410	Identifier	val		8997152	1					
ANR	8997411	ExpressionStatement	s -> dac_sub_index = 0	129:8:1894:1914	8997152	19	True				
ANR	8997412	AssignmentExpression	s -> dac_sub_index = 0		8997152	0		=			
ANR	8997413	PtrMemberAccess	s -> dac_sub_index		8997152	0					
ANR	8997414	Identifier	s		8997152	0					
ANR	8997415	Identifier	dac_sub_index		8997152	1					
ANR	8997416	PrimaryExpression	0		8997152	1					
ANR	8997417	ExpressionStatement	s -> dac_state = 3	131:8:1925:1941	8997152	20	True				
ANR	8997418	AssignmentExpression	s -> dac_state = 3		8997152	0		=			
ANR	8997419	PtrMemberAccess	s -> dac_state		8997152	0					
ANR	8997420	Identifier	s		8997152	0					
ANR	8997421	Identifier	dac_state		8997152	1					
ANR	8997422	PrimaryExpression	3		8997152	1					
ANR	8997423	BreakStatement	break ;	133:8:1952:1957	8997152	21	True				
ANR	8997424	Label	case VGA_PEL_IW :	135:4:1964:1979	8997152	22	True				
ANR	8997425	Identifier	VGA_PEL_IW		8997152	0					
ANR	8997426	ExpressionStatement	s -> dac_write_index = val	137:8:1990:2014	8997152	23	True				
ANR	8997427	AssignmentExpression	s -> dac_write_index = val		8997152	0		=			
ANR	8997428	PtrMemberAccess	s -> dac_write_index		8997152	0					
ANR	8997429	Identifier	s		8997152	0					
ANR	8997430	Identifier	dac_write_index		8997152	1					
ANR	8997431	Identifier	val		8997152	1					
ANR	8997432	ExpressionStatement	s -> dac_sub_index = 0	139:8:2025:2045	8997152	24	True				
ANR	8997433	AssignmentExpression	s -> dac_sub_index = 0		8997152	0		=			
ANR	8997434	PtrMemberAccess	s -> dac_sub_index		8997152	0					
ANR	8997435	Identifier	s		8997152	0					
ANR	8997436	Identifier	dac_sub_index		8997152	1					
ANR	8997437	PrimaryExpression	0		8997152	1					
ANR	8997438	ExpressionStatement	s -> dac_state = 0	141:8:2056:2072	8997152	25	True				
ANR	8997439	AssignmentExpression	s -> dac_state = 0		8997152	0		=			
ANR	8997440	PtrMemberAccess	s -> dac_state		8997152	0					
ANR	8997441	Identifier	s		8997152	0					
ANR	8997442	Identifier	dac_state		8997152	1					
ANR	8997443	PrimaryExpression	0		8997152	1					
ANR	8997444	BreakStatement	break ;	143:8:2083:2088	8997152	26	True				
ANR	8997445	Label	case VGA_PEL_D :	145:4:2095:2109	8997152	27	True				
ANR	8997446	Identifier	VGA_PEL_D		8997152	0					
ANR	8997447	ExpressionStatement	s -> dac_cache [ s -> dac_sub_index ] = val	147:8:2120:2156	8997152	28	True				
ANR	8997448	AssignmentExpression	s -> dac_cache [ s -> dac_sub_index ] = val		8997152	0		=			
ANR	8997449	ArrayIndexing	s -> dac_cache [ s -> dac_sub_index ]		8997152	0					
ANR	8997450	PtrMemberAccess	s -> dac_cache		8997152	0					
ANR	8997451	Identifier	s		8997152	0					
ANR	8997452	Identifier	dac_cache		8997152	1					
ANR	8997453	PtrMemberAccess	s -> dac_sub_index		8997152	1					
ANR	8997454	Identifier	s		8997152	0					
ANR	8997455	Identifier	dac_sub_index		8997152	1					
ANR	8997456	Identifier	val		8997152	1					
ANR	8997457	IfStatement	if ( ++ s -> dac_sub_index == 3 )		8997152	29					
ANR	8997458	Condition	++ s -> dac_sub_index == 3	149:12:2171:2193	8997152	0	True				
ANR	8997459	EqualityExpression	++ s -> dac_sub_index == 3		8997152	0		==			
ANR	8997460	UnaryExpression	++ s -> dac_sub_index		8997152	0					
ANR	8997461	IncDec	++		8997152	0					
ANR	8997462	PtrMemberAccess	s -> dac_sub_index		8997152	1					
ANR	8997463	Identifier	s		8997152	0					
ANR	8997464	Identifier	dac_sub_index		8997152	1					
ANR	8997465	PrimaryExpression	3		8997152	1					
ANR	8997466	CompoundStatement		147:37:2129:2129	8997152	1					
ANR	8997467	ExpressionStatement	"memcpy ( & s -> palette [ s -> dac_write_index * 3 ] , s -> dac_cache , 3 )"	151:12:2211:2271	8997152	0	True				
ANR	8997468	CallExpression	"memcpy ( & s -> palette [ s -> dac_write_index * 3 ] , s -> dac_cache , 3 )"		8997152	0					
ANR	8997469	Callee	memcpy		8997152	0					
ANR	8997470	Identifier	memcpy		8997152	0					
ANR	8997471	ArgumentList	& s -> palette [ s -> dac_write_index * 3 ]		8997152	1					
ANR	8997472	Argument	& s -> palette [ s -> dac_write_index * 3 ]		8997152	0					
ANR	8997473	UnaryOperationExpression	& s -> palette [ s -> dac_write_index * 3 ]		8997152	0					
ANR	8997474	UnaryOperator	&		8997152	0					
ANR	8997475	ArrayIndexing	s -> palette [ s -> dac_write_index * 3 ]		8997152	1					
ANR	8997476	PtrMemberAccess	s -> palette		8997152	0					
ANR	8997477	Identifier	s		8997152	0					
ANR	8997478	Identifier	palette		8997152	1					
ANR	8997479	MultiplicativeExpression	s -> dac_write_index * 3		8997152	1		*			
ANR	8997480	PtrMemberAccess	s -> dac_write_index		8997152	0					
ANR	8997481	Identifier	s		8997152	0					
ANR	8997482	Identifier	dac_write_index		8997152	1					
ANR	8997483	PrimaryExpression	3		8997152	1					
ANR	8997484	Argument	s -> dac_cache		8997152	1					
ANR	8997485	PtrMemberAccess	s -> dac_cache		8997152	0					
ANR	8997486	Identifier	s		8997152	0					
ANR	8997487	Identifier	dac_cache		8997152	1					
ANR	8997488	Argument	3		8997152	2					
ANR	8997489	PrimaryExpression	3		8997152	0					
ANR	8997490	ExpressionStatement	s -> dac_sub_index = 0	153:12:2286:2306	8997152	1	True				
ANR	8997491	AssignmentExpression	s -> dac_sub_index = 0		8997152	0		=			
ANR	8997492	PtrMemberAccess	s -> dac_sub_index		8997152	0					
ANR	8997493	Identifier	s		8997152	0					
ANR	8997494	Identifier	dac_sub_index		8997152	1					
ANR	8997495	PrimaryExpression	0		8997152	1					
ANR	8997496	ExpressionStatement	s -> dac_write_index ++	155:12:2321:2341	8997152	2	True				
ANR	8997497	PostIncDecOperationExpression	s -> dac_write_index ++		8997152	0					
ANR	8997498	PtrMemberAccess	s -> dac_write_index		8997152	0					
ANR	8997499	Identifier	s		8997152	0					
ANR	8997500	Identifier	dac_write_index		8997152	1					
ANR	8997501	IncDec	++		8997152	1					
ANR	8997502	BreakStatement	break ;	159:8:2363:2368	8997152	30	True				
ANR	8997503	Label	case VGA_GFX_I :	161:4:2375:2389	8997152	31	True				
ANR	8997504	Identifier	VGA_GFX_I		8997152	0					
ANR	8997505	ExpressionStatement	s -> gr_index = val & 0x0f	163:8:2400:2424	8997152	32	True				
ANR	8997506	AssignmentExpression	s -> gr_index = val & 0x0f		8997152	0		=			
ANR	8997507	PtrMemberAccess	s -> gr_index		8997152	0					
ANR	8997508	Identifier	s		8997152	0					
ANR	8997509	Identifier	gr_index		8997152	1					
ANR	8997510	BitAndExpression	val & 0x0f		8997152	1		&			
ANR	8997511	Identifier	val		8997152	0					
ANR	8997512	PrimaryExpression	0x0f		8997152	1					
ANR	8997513	BreakStatement	break ;	165:8:2435:2440	8997152	33	True				
ANR	8997514	Label	case VGA_GFX_D :	167:4:2447:2461	8997152	34	True				
ANR	8997515	Identifier	VGA_GFX_D		8997152	0					
ANR	8997516	ExpressionStatement	"printf ( ""vga: write GR%x = 0x%02x\\n"" , s -> gr_index , val )"	171:8:2494:2548	8997152	35	True				
ANR	8997517	CallExpression	"printf ( ""vga: write GR%x = 0x%02x\\n"" , s -> gr_index , val )"		8997152	0					
ANR	8997518	Callee	printf		8997152	0					
ANR	8997519	Identifier	printf		8997152	0					
ANR	8997520	ArgumentList	"""vga: write GR%x = 0x%02x\\n"""		8997152	1					
ANR	8997521	Argument	"""vga: write GR%x = 0x%02x\\n"""		8997152	0					
ANR	8997522	PrimaryExpression	"""vga: write GR%x = 0x%02x\\n"""		8997152	0					
ANR	8997523	Argument	s -> gr_index		8997152	1					
ANR	8997524	PtrMemberAccess	s -> gr_index		8997152	0					
ANR	8997525	Identifier	s		8997152	0					
ANR	8997526	Identifier	gr_index		8997152	1					
ANR	8997527	Argument	val		8997152	2					
ANR	8997528	Identifier	val		8997152	0					
ANR	8997529	ExpressionStatement	s -> gr [ s -> gr_index ] = val & gr_mask [ s -> gr_index ]	175:8:2567:2614	8997152	36	True				
ANR	8997530	AssignmentExpression	s -> gr [ s -> gr_index ] = val & gr_mask [ s -> gr_index ]		8997152	0		=			
ANR	8997531	ArrayIndexing	s -> gr [ s -> gr_index ]		8997152	0					
ANR	8997532	PtrMemberAccess	s -> gr		8997152	0					
ANR	8997533	Identifier	s		8997152	0					
ANR	8997534	Identifier	gr		8997152	1					
ANR	8997535	PtrMemberAccess	s -> gr_index		8997152	1					
ANR	8997536	Identifier	s		8997152	0					
ANR	8997537	Identifier	gr_index		8997152	1					
ANR	8997538	BitAndExpression	val & gr_mask [ s -> gr_index ]		8997152	1		&			
ANR	8997539	Identifier	val		8997152	0					
ANR	8997540	ArrayIndexing	gr_mask [ s -> gr_index ]		8997152	1					
ANR	8997541	Identifier	gr_mask		8997152	0					
ANR	8997542	PtrMemberAccess	s -> gr_index		8997152	1					
ANR	8997543	Identifier	s		8997152	0					
ANR	8997544	Identifier	gr_index		8997152	1					
ANR	8997545	ExpressionStatement	vga_update_memory_access ( s )	177:8:2625:2652	8997152	37	True				
ANR	8997546	CallExpression	vga_update_memory_access ( s )		8997152	0					
ANR	8997547	Callee	vga_update_memory_access		8997152	0					
ANR	8997548	Identifier	vga_update_memory_access		8997152	0					
ANR	8997549	ArgumentList	s		8997152	1					
ANR	8997550	Argument	s		8997152	0					
ANR	8997551	Identifier	s		8997152	0					
ANR	8997552	BreakStatement	break ;	179:8:2663:2668	8997152	38	True				
ANR	8997553	Label	case VGA_CRT_IM :	181:4:2675:2690	8997152	39	True				
ANR	8997554	Identifier	VGA_CRT_IM		8997152	0					
ANR	8997555	Label	case VGA_CRT_IC :	183:4:2697:2712	8997152	40	True				
ANR	8997556	Identifier	VGA_CRT_IC		8997152	0					
ANR	8997557	ExpressionStatement	s -> cr_index = val	185:8:2723:2740	8997152	41	True				
ANR	8997558	AssignmentExpression	s -> cr_index = val		8997152	0		=			
ANR	8997559	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997560	Identifier	s		8997152	0					
ANR	8997561	Identifier	cr_index		8997152	1					
ANR	8997562	Identifier	val		8997152	1					
ANR	8997563	BreakStatement	break ;	187:8:2751:2756	8997152	42	True				
ANR	8997564	Label	case VGA_CRT_DM :	189:4:2763:2778	8997152	43	True				
ANR	8997565	Identifier	VGA_CRT_DM		8997152	0					
ANR	8997566	Label	case VGA_CRT_DC :	191:4:2785:2800	8997152	44	True				
ANR	8997567	Identifier	VGA_CRT_DC		8997152	0					
ANR	8997568	ExpressionStatement	"printf ( ""vga: write CR%x = 0x%02x\\n"" , s -> cr_index , val )"	195:8:2833:2887	8997152	45	True				
ANR	8997569	CallExpression	"printf ( ""vga: write CR%x = 0x%02x\\n"" , s -> cr_index , val )"		8997152	0					
ANR	8997570	Callee	printf		8997152	0					
ANR	8997571	Identifier	printf		8997152	0					
ANR	8997572	ArgumentList	"""vga: write CR%x = 0x%02x\\n"""		8997152	1					
ANR	8997573	Argument	"""vga: write CR%x = 0x%02x\\n"""		8997152	0					
ANR	8997574	PrimaryExpression	"""vga: write CR%x = 0x%02x\\n"""		8997152	0					
ANR	8997575	Argument	s -> cr_index		8997152	1					
ANR	8997576	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997577	Identifier	s		8997152	0					
ANR	8997578	Identifier	cr_index		8997152	1					
ANR	8997579	Argument	val		8997152	2					
ANR	8997580	Identifier	val		8997152	0					
ANR	8997581	IfStatement	if ( s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7 )		8997152	46					
ANR	8997582	Condition	s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7	201:12:2949:2998	8997152	0	True				
ANR	8997583	BitAndExpression	s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7		8997152	0		&			
ANR	8997584	ArrayIndexing	s -> cr [ VGA_CRTC_V_SYNC_END ]		8997152	0					
ANR	8997585	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997586	Identifier	s		8997152	0					
ANR	8997587	Identifier	cr		8997152	1					
ANR	8997588	Identifier	VGA_CRTC_V_SYNC_END		8997152	1					
ANR	8997589	Identifier	VGA_CR11_LOCK_CR0_CR7		8997152	1					
ANR	8997590	CompoundStatement		199:64:2934:2934	8997152	1					
ANR	8997591	IfStatement	if ( s -> cr_index <= VGA_CRTC_OVERFLOW )		8997152	0					
ANR	8997592	Condition	s -> cr_index <= VGA_CRTC_OVERFLOW	203:16:3020:3051	8997152	0	True				
ANR	8997593	RelationalExpression	s -> cr_index <= VGA_CRTC_OVERFLOW		8997152	0		<=			
ANR	8997594	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997595	Identifier	s		8997152	0					
ANR	8997596	Identifier	cr_index		8997152	1					
ANR	8997597	Identifier	VGA_CRTC_OVERFLOW		8997152	1					
ANR	8997598	CompoundStatement		201:50:2987:2987	8997152	1					
ANR	8997599	IfStatement	if ( s -> cr_index == VGA_CRTC_OVERFLOW )		8997152	0					
ANR	8997600	Condition	s -> cr_index == VGA_CRTC_OVERFLOW	207:20:3130:3161	8997152	0	True				
ANR	8997601	EqualityExpression	s -> cr_index == VGA_CRTC_OVERFLOW		8997152	0		==			
ANR	8997602	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997603	Identifier	s		8997152	0					
ANR	8997604	Identifier	cr_index		8997152	1					
ANR	8997605	Identifier	VGA_CRTC_OVERFLOW		8997152	1					
ANR	8997606	CompoundStatement		205:54:3097:3097	8997152	1					
ANR	8997607	ExpressionStatement	s -> cr [ VGA_CRTC_OVERFLOW ] = ( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )	209:20:3187:3288	8997152	0	True				
ANR	8997608	AssignmentExpression	s -> cr [ VGA_CRTC_OVERFLOW ] = ( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )		8997152	0		=			
ANR	8997609	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		8997152	0					
ANR	8997610	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997611	Identifier	s		8997152	0					
ANR	8997612	Identifier	cr		8997152	1					
ANR	8997613	Identifier	VGA_CRTC_OVERFLOW		8997152	1					
ANR	8997614	InclusiveOrExpression	( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )		8997152	1		|			
ANR	8997615	BitAndExpression	s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10		8997152	0		&			
ANR	8997616	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		8997152	0					
ANR	8997617	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997618	Identifier	s		8997152	0					
ANR	8997619	Identifier	cr		8997152	1					
ANR	8997620	Identifier	VGA_CRTC_OVERFLOW		8997152	1					
ANR	8997621	Identifier	~0x10		8997152	1					
ANR	8997622	BitAndExpression	val & 0x10		8997152	1		&			
ANR	8997623	Identifier	val		8997152	0					
ANR	8997624	PrimaryExpression	0x10		8997152	1					
ANR	8997625	ReturnStatement	return ;	215:16:3326:3332	8997152	1	True				
ANR	8997626	ElseStatement	else		8997152	0					
ANR	8997627	IfStatement	if ( ( vga_cga_hacks & VGA_CGA_HACK_FONT_HEIGHT ) && ! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS ) )		8997152	0					
ANR	8997628	Condition	( vga_cga_hacks & VGA_CGA_HACK_FONT_HEIGHT ) && ! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS )	217:23:3358:3481	8997152	0	True				
ANR	8997629	AndExpression	( vga_cga_hacks & VGA_CGA_HACK_FONT_HEIGHT ) && ! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS )		8997152	0		&&			
ANR	8997630	BitAndExpression	vga_cga_hacks & VGA_CGA_HACK_FONT_HEIGHT		8997152	0		&			
ANR	8997631	Identifier	vga_cga_hacks		8997152	0					
ANR	8997632	Identifier	VGA_CGA_HACK_FONT_HEIGHT		8997152	1					
ANR	8997633	UnaryOperationExpression	! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS )		8997152	1					
ANR	8997634	UnaryOperator	!		8997152	0					
ANR	8997635	BitAndExpression	s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS		8997152	1		&			
ANR	8997636	ArrayIndexing	s -> sr [ VGA_SEQ_CLOCK_MODE ]		8997152	0					
ANR	8997637	PtrMemberAccess	s -> sr		8997152	0					
ANR	8997638	Identifier	s		8997152	0					
ANR	8997639	Identifier	sr		8997152	1					
ANR	8997640	Identifier	VGA_SEQ_CLOCK_MODE		8997152	1					
ANR	8997641	Identifier	VGA_SR01_CHAR_CLK_8DOTS		8997152	1					
ANR	8997642	CompoundStatement		217:79:3417:3417	8997152	1					
ANR	8997643	IfStatement	if ( s -> cr_index == VGA_CRTC_MAX_SCAN && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf )		8997152	0					
ANR	8997644	Condition	s -> cr_index == VGA_CRTC_MAX_SCAN && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf	223:20:3582:3710	8997152	0	True				
ANR	8997645	AndExpression	s -> cr_index == VGA_CRTC_MAX_SCAN && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	0		&&			
ANR	8997646	EqualityExpression	s -> cr_index == VGA_CRTC_MAX_SCAN		8997152	0		==			
ANR	8997647	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997648	Identifier	s		8997152	0					
ANR	8997649	Identifier	cr_index		8997152	1					
ANR	8997650	Identifier	VGA_CRTC_MAX_SCAN		8997152	1					
ANR	8997651	AndExpression	val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		&&			
ANR	8997652	EqualityExpression	val == 7		8997152	0		==			
ANR	8997653	Identifier	val		8997152	0					
ANR	8997654	PrimaryExpression	7		8997152	1					
ANR	8997655	EqualityExpression	( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		==			
ANR	8997656	BitAndExpression	s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf		8997152	0		&			
ANR	8997657	ArrayIndexing	s -> cr [ VGA_CRTC_MAX_SCAN ]		8997152	0					
ANR	8997658	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997659	Identifier	s		8997152	0					
ANR	8997660	Identifier	cr		8997152	1					
ANR	8997661	Identifier	VGA_CRTC_MAX_SCAN		8997152	1					
ANR	8997662	PrimaryExpression	0xf		8997152	1					
ANR	8997663	PrimaryExpression	0xf		8997152	1					
ANR	8997664	CompoundStatement		225:61:3646:3646	8997152	1					
ANR	8997665	ReturnStatement	return ;	229:20:3736:3742	8997152	0	True				
ANR	8997666	ElseStatement	else		8997152	0					
ANR	8997667	IfStatement	if ( s -> cr_index == VGA_CRTC_CURSOR_START && val == 6 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf )		8997152	0					
ANR	8997668	Condition	s -> cr_index == VGA_CRTC_CURSOR_START && val == 6 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf	231:27:3772:3918	8997152	0	True				
ANR	8997669	AndExpression	s -> cr_index == VGA_CRTC_CURSOR_START && val == 6 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	0		&&			
ANR	8997670	EqualityExpression	s -> cr_index == VGA_CRTC_CURSOR_START		8997152	0		==			
ANR	8997671	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997672	Identifier	s		8997152	0					
ANR	8997673	Identifier	cr_index		8997152	1					
ANR	8997674	Identifier	VGA_CRTC_CURSOR_START		8997152	1					
ANR	8997675	AndExpression	val == 6 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		&&			
ANR	8997676	EqualityExpression	val == 6		8997152	0		==			
ANR	8997677	Identifier	val		8997152	0					
ANR	8997678	PrimaryExpression	6		8997152	1					
ANR	8997679	EqualityExpression	( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		==			
ANR	8997680	BitAndExpression	s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf		8997152	0		&			
ANR	8997681	ArrayIndexing	s -> cr [ VGA_CRTC_MAX_SCAN ]		8997152	0					
ANR	8997682	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997683	Identifier	s		8997152	0					
ANR	8997684	Identifier	cr		8997152	1					
ANR	8997685	Identifier	VGA_CRTC_MAX_SCAN		8997152	1					
ANR	8997686	PrimaryExpression	0xf		8997152	1					
ANR	8997687	PrimaryExpression	0xf		8997152	1					
ANR	8997688	CompoundStatement		233:68:3854:3854	8997152	1					
ANR	8997689	ExpressionStatement	val = 0xd	237:20:3944:3953	8997152	0	True				
ANR	8997690	AssignmentExpression	val = 0xd		8997152	0		=			
ANR	8997691	Identifier	val		8997152	0					
ANR	8997692	PrimaryExpression	0xd		8997152	1					
ANR	8997693	ElseStatement	else		8997152	0					
ANR	8997694	IfStatement	if ( s -> cr_index == VGA_CRTC_CURSOR_END && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf )		8997152	0					
ANR	8997695	Condition	s -> cr_index == VGA_CRTC_CURSOR_END && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf	239:27:3983:4127	8997152	0	True				
ANR	8997696	AndExpression	s -> cr_index == VGA_CRTC_CURSOR_END && val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	0		&&			
ANR	8997697	EqualityExpression	s -> cr_index == VGA_CRTC_CURSOR_END		8997152	0		==			
ANR	8997698	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997699	Identifier	s		8997152	0					
ANR	8997700	Identifier	cr_index		8997152	1					
ANR	8997701	Identifier	VGA_CRTC_CURSOR_END		8997152	1					
ANR	8997702	AndExpression	val == 7 && ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		&&			
ANR	8997703	EqualityExpression	val == 7		8997152	0		==			
ANR	8997704	Identifier	val		8997152	0					
ANR	8997705	PrimaryExpression	7		8997152	1					
ANR	8997706	EqualityExpression	( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf ) == 0xf		8997152	1		==			
ANR	8997707	BitAndExpression	s -> cr [ VGA_CRTC_MAX_SCAN ] & 0xf		8997152	0		&			
ANR	8997708	ArrayIndexing	s -> cr [ VGA_CRTC_MAX_SCAN ]		8997152	0					
ANR	8997709	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997710	Identifier	s		8997152	0					
ANR	8997711	Identifier	cr		8997152	1					
ANR	8997712	Identifier	VGA_CRTC_MAX_SCAN		8997152	1					
ANR	8997713	PrimaryExpression	0xf		8997152	1					
ANR	8997714	PrimaryExpression	0xf		8997152	1					
ANR	8997715	CompoundStatement		241:68:4063:4063	8997152	1					
ANR	8997716	ExpressionStatement	val = 0xe	245:20:4153:4162	8997152	0	True				
ANR	8997717	AssignmentExpression	val = 0xe		8997152	0		=			
ANR	8997718	Identifier	val		8997152	0					
ANR	8997719	PrimaryExpression	0xe		8997152	1					
ANR	8997720	ExpressionStatement	s -> cr [ s -> cr_index ] = val	253:8:4218:4242	8997152	47	True				
ANR	8997721	AssignmentExpression	s -> cr [ s -> cr_index ] = val		8997152	0		=			
ANR	8997722	ArrayIndexing	s -> cr [ s -> cr_index ]		8997152	0					
ANR	8997723	PtrMemberAccess	s -> cr		8997152	0					
ANR	8997724	Identifier	s		8997152	0					
ANR	8997725	Identifier	cr		8997152	1					
ANR	8997726	PtrMemberAccess	s -> cr_index		8997152	1					
ANR	8997727	Identifier	s		8997152	0					
ANR	8997728	Identifier	cr_index		8997152	1					
ANR	8997729	Identifier	val		8997152	1					
ANR	8997730	SwitchStatement	switch ( s -> cr_index )		8997152	48					
ANR	8997731	Condition	s -> cr_index	257:15:4262:4272	8997152	0	True				
ANR	8997732	PtrMemberAccess	s -> cr_index		8997152	0					
ANR	8997733	Identifier	s		8997152	0					
ANR	8997734	Identifier	cr_index		8997152	1					
ANR	8997735	CompoundStatement		255:28:4208:4208	8997152	1					
ANR	8997736	Label	case VGA_CRTC_H_TOTAL :	259:8:4286:4307	8997152	0	True				
ANR	8997737	Identifier	VGA_CRTC_H_TOTAL		8997152	0					
ANR	8997738	Label	case VGA_CRTC_H_SYNC_START :	261:8:4318:4344	8997152	1	True				
ANR	8997739	Identifier	VGA_CRTC_H_SYNC_START		8997152	0					
ANR	8997740	Label	case VGA_CRTC_H_SYNC_END :	263:8:4355:4379	8997152	2	True				
ANR	8997741	Identifier	VGA_CRTC_H_SYNC_END		8997152	0					
ANR	8997742	Label	case VGA_CRTC_V_TOTAL :	265:8:4390:4411	8997152	3	True				
ANR	8997743	Identifier	VGA_CRTC_V_TOTAL		8997152	0					
ANR	8997744	Label	case VGA_CRTC_OVERFLOW :	267:8:4422:4444	8997152	4	True				
ANR	8997745	Identifier	VGA_CRTC_OVERFLOW		8997152	0					
ANR	8997746	Label	case VGA_CRTC_V_SYNC_END :	269:8:4455:4479	8997152	5	True				
ANR	8997747	Identifier	VGA_CRTC_V_SYNC_END		8997152	0					
ANR	8997748	Label	case VGA_CRTC_MODE :	271:8:4490:4508	8997152	6	True				
ANR	8997749	Identifier	VGA_CRTC_MODE		8997152	0					
ANR	8997750	ExpressionStatement	s -> update_retrace_info ( s )	273:12:4523:4548	8997152	7	True				
ANR	8997751	CallExpression	s -> update_retrace_info ( s )		8997152	0					
ANR	8997752	Callee	s -> update_retrace_info		8997152	0					
ANR	8997753	PtrMemberAccess	s -> update_retrace_info		8997152	0					
ANR	8997754	Identifier	s		8997152	0					
ANR	8997755	Identifier	update_retrace_info		8997152	1					
ANR	8997756	ArgumentList	s		8997152	1					
ANR	8997757	Argument	s		8997152	0					
ANR	8997758	Identifier	s		8997152	0					
ANR	8997759	BreakStatement	break ;	275:12:4563:4568	8997152	8	True				
ANR	8997760	BreakStatement	break ;	279:8:4590:4595	8997152	49	True				
ANR	8997761	Label	case VGA_IS1_RM :	281:4:4602:4617	8997152	50	True				
ANR	8997762	Identifier	VGA_IS1_RM		8997152	0					
ANR	8997763	Label	case VGA_IS1_RC :	283:4:4624:4639	8997152	51	True				
ANR	8997764	Identifier	VGA_IS1_RC		8997152	0					
ANR	8997765	ExpressionStatement	s -> fcr = val & 0x10	285:8:4650:4669	8997152	52	True				
ANR	8997766	AssignmentExpression	s -> fcr = val & 0x10		8997152	0		=			
ANR	8997767	PtrMemberAccess	s -> fcr		8997152	0					
ANR	8997768	Identifier	s		8997152	0					
ANR	8997769	Identifier	fcr		8997152	1					
ANR	8997770	BitAndExpression	val & 0x10		8997152	1		&			
ANR	8997771	Identifier	val		8997152	0					
ANR	8997772	PrimaryExpression	0x10		8997152	1					
ANR	8997773	BreakStatement	break ;	287:8:4680:4685	8997152	53	True				
ANR	8997774	ReturnType	void		8997152	1					
ANR	8997775	Identifier	vga_ioport_write		8997152	2					
ANR	8997776	ParameterList	"void * opaque , uint32_t addr , uint32_t val"		8997152	3					
ANR	8997777	Parameter	void * opaque	1:22:22:33	8997152	0	True				
ANR	8997778	ParameterType	void *		8997152	0					
ANR	8997779	Identifier	opaque		8997152	1					
ANR	8997780	Parameter	uint32_t addr	1:36:36:48	8997152	1	True				
ANR	8997781	ParameterType	uint32_t		8997152	0					
ANR	8997782	Identifier	addr		8997152	1					
ANR	8997783	Parameter	uint32_t val	1:51:51:62	8997152	2	True				
ANR	8997784	ParameterType	uint32_t		8997152	0					
ANR	8997785	Identifier	val		8997152	1					
ANR	8997786	CFGEntryNode	ENTRY		8997152		True				
ANR	8997787	CFGExitNode	EXIT		8997152		True				
ANR	8997788	Symbol	s -> fcr		8997152						
ANR	8997789	Symbol	* index		8997152						
ANR	8997790	Symbol	s -> ar		8997152						
ANR	8997791	Symbol	* sr_mask		8997152						
ANR	8997792	Symbol	VGA_SR01_CHAR_CLK_8DOTS		8997152						
ANR	8997793	Symbol	vga_cga_hacks		8997152						
ANR	8997794	Symbol	VGA_CR11_LOCK_CR0_CR7		8997152						
ANR	8997795	Symbol	* VGA_CRTC_MAX_SCAN		8997152						
ANR	8997796	Symbol	* s -> dac_sub_index		8997152						
ANR	8997797	Symbol	val		8997152						
ANR	8997798	Symbol	* s -> cr		8997152						
ANR	8997799	Symbol	* VGA_SEQ_CLOCK_MODE		8997152						
ANR	8997800	Symbol	index		8997152						
ANR	8997801	Symbol	vga_ioport_invalid		8997152						
ANR	8997802	Symbol	* s -> gr		8997152						
ANR	8997803	Symbol	s -> cr_index		8997152						
ANR	8997804	Symbol	s -> ar_index		8997152						
ANR	8997805	Symbol	sr_mask		8997152						
ANR	8997806	Symbol	VGA_CRTC_OVERFLOW		8997152						
ANR	8997807	Symbol	s -> dac_sub_index		8997152						
ANR	8997808	Symbol	s -> gr_index		8997152						
ANR	8997809	Symbol	* VGA_CRTC_V_SYNC_END		8997152						
ANR	8997810	Symbol	s -> sr_index		8997152						
ANR	8997811	Symbol	* s -> sr		8997152						
ANR	8997812	Symbol	VGA_CGA_HACK_FONT_HEIGHT		8997152						
ANR	8997813	Symbol	* gr_mask		8997152						
ANR	8997814	Symbol	s -> palette		8997152						
ANR	8997815	Symbol	VGA_SEQ_CLOCK_MODE		8997152						
ANR	8997816	Symbol	s -> dac_cache		8997152						
ANR	8997817	Symbol	* s -> sr_index		8997152						
ANR	8997818	Symbol	VGA_CRTC_V_SYNC_END		8997152						
ANR	8997819	Symbol	s -> cr		8997152						
ANR	8997820	Symbol	s -> gr		8997152						
ANR	8997821	Symbol	VGA_CRTC_MAX_SCAN		8997152						
ANR	8997822	Symbol	~0xf0		8997152						
ANR	8997823	Symbol	* * s		8997152						
ANR	8997824	Symbol	s -> msr		8997152						
ANR	8997825	Symbol	gr_mask		8997152						
ANR	8997826	Symbol	s -> ar_flip_flop		8997152						
ANR	8997827	Symbol	addr		8997152						
ANR	8997828	Symbol	s -> sr		8997152						
ANR	8997829	Symbol	* s -> gr_index		8997152						
ANR	8997830	Symbol	* s -> dac_cache		8997152						
ANR	8997831	Symbol	~0x10		8997152						
ANR	8997832	Symbol	opaque		8997152						
ANR	8997833	Symbol	* s -> ar		8997152						
ANR	8997834	Symbol	* s -> cr_index		8997152						
ANR	8997835	Symbol	s -> dac_read_index		8997152						
ANR	8997836	Symbol	s		8997152						
ANR	8997837	Symbol	s -> dac_write_index		8997152						
ANR	8997838	Symbol	~0xc0		8997152						
ANR	8997839	Symbol	* VGA_CRTC_OVERFLOW		8997152						
ANR	8997840	Symbol	VGA_CRTC_CURSOR_END		8997152						
ANR	8997841	Symbol	VGA_CRTC_CURSOR_START		8997152						
ANR	8997842	Symbol	* s		8997152						
ANR	8997843	Symbol	s -> dac_state		8997152						
