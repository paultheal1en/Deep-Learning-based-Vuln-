command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	321804	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aa_read_header_0.c								
ANR	321805	Function	aa_read_header	1:0:0:5403							
ANR	321806	FunctionDef	aa_read_header (AVFormatContext * s)		321805	0					
ANR	321807	CompoundStatement		3:0:47:5403	321805	0					
ANR	321808	IdentifierDeclStatement	"int i , j , idx , largest_idx = - 1 ;"	5:4:54:85	321805	0	True				
ANR	321809	IdentifierDecl	i		321805	0					
ANR	321810	IdentifierDeclType	int		321805	0					
ANR	321811	Identifier	i		321805	1					
ANR	321812	IdentifierDecl	j		321805	1					
ANR	321813	IdentifierDeclType	int		321805	0					
ANR	321814	Identifier	j		321805	1					
ANR	321815	IdentifierDecl	idx		321805	2					
ANR	321816	IdentifierDeclType	int		321805	0					
ANR	321817	Identifier	idx		321805	1					
ANR	321818	IdentifierDecl	largest_idx = - 1		321805	3					
ANR	321819	IdentifierDeclType	int		321805	0					
ANR	321820	Identifier	largest_idx		321805	1					
ANR	321821	AssignmentExpression	largest_idx = - 1		321805	2		=			
ANR	321822	Identifier	largest_idx		321805	0					
ANR	321823	UnaryOperationExpression	- 1		321805	1					
ANR	321824	UnaryOperator	-		321805	0					
ANR	321825	PrimaryExpression	1		321805	1					
ANR	321826	IdentifierDeclStatement	"uint32_t nkey , nval , toc_size , npairs , header_seed , start ;"	7:4:92:149	321805	1	True				
ANR	321827	IdentifierDecl	nkey		321805	0					
ANR	321828	IdentifierDeclType	uint32_t		321805	0					
ANR	321829	Identifier	nkey		321805	1					
ANR	321830	IdentifierDecl	nval		321805	1					
ANR	321831	IdentifierDeclType	uint32_t		321805	0					
ANR	321832	Identifier	nval		321805	1					
ANR	321833	IdentifierDecl	toc_size		321805	2					
ANR	321834	IdentifierDeclType	uint32_t		321805	0					
ANR	321835	Identifier	toc_size		321805	1					
ANR	321836	IdentifierDecl	npairs		321805	3					
ANR	321837	IdentifierDeclType	uint32_t		321805	0					
ANR	321838	Identifier	npairs		321805	1					
ANR	321839	IdentifierDecl	header_seed		321805	4					
ANR	321840	IdentifierDeclType	uint32_t		321805	0					
ANR	321841	Identifier	header_seed		321805	1					
ANR	321842	IdentifierDecl	start		321805	5					
ANR	321843	IdentifierDeclType	uint32_t		321805	0					
ANR	321844	Identifier	start		321805	1					
ANR	321845	IdentifierDeclStatement	"char key [ 128 ] , val [ 128 ] , codec_name [ 64 ] = { 0 } ;"	9:4:156:201	321805	2	True				
ANR	321846	IdentifierDecl	key [ 128 ]		321805	0					
ANR	321847	IdentifierDeclType	char [ 128 ]		321805	0					
ANR	321848	Identifier	key		321805	1					
ANR	321849	PrimaryExpression	128		321805	2					
ANR	321850	IdentifierDecl	val [ 128 ]		321805	1					
ANR	321851	IdentifierDeclType	char [ 128 ]		321805	0					
ANR	321852	Identifier	val		321805	1					
ANR	321853	PrimaryExpression	128		321805	2					
ANR	321854	IdentifierDecl	codec_name [ 64 ] = { 0 }		321805	2					
ANR	321855	IdentifierDeclType	char [ 64 ]		321805	0					
ANR	321856	Identifier	codec_name		321805	1					
ANR	321857	PrimaryExpression	64		321805	2					
ANR	321858	AssignmentExpression	codec_name [ 64 ] = { 0 }		321805	3		=			
ANR	321859	Identifier	codec_name		321805	0					
ANR	321860	InitializerList	0		321805	1					
ANR	321861	PrimaryExpression	0		321805	0					
ANR	321862	IdentifierDeclStatement	"uint8_t output [ 24 ] , dst [ 8 ] , src [ 8 ] ;"	11:4:208:242	321805	3	True				
ANR	321863	IdentifierDecl	output [ 24 ]		321805	0					
ANR	321864	IdentifierDeclType	uint8_t [ 24 ]		321805	0					
ANR	321865	Identifier	output		321805	1					
ANR	321866	PrimaryExpression	24		321805	2					
ANR	321867	IdentifierDecl	dst [ 8 ]		321805	1					
ANR	321868	IdentifierDeclType	uint8_t [ 8 ]		321805	0					
ANR	321869	Identifier	dst		321805	1					
ANR	321870	PrimaryExpression	8		321805	2					
ANR	321871	IdentifierDecl	src [ 8 ]		321805	2					
ANR	321872	IdentifierDeclType	uint8_t [ 8 ]		321805	0					
ANR	321873	Identifier	src		321805	1					
ANR	321874	PrimaryExpression	8		321805	2					
ANR	321875	IdentifierDeclStatement	"int64_t largest_size = - 1 , current_size = - 1 ;"	13:4:249:293	321805	4	True				
ANR	321876	IdentifierDecl	largest_size = - 1		321805	0					
ANR	321877	IdentifierDeclType	int64_t		321805	0					
ANR	321878	Identifier	largest_size		321805	1					
ANR	321879	AssignmentExpression	largest_size = - 1		321805	2		=			
ANR	321880	Identifier	largest_size		321805	0					
ANR	321881	UnaryOperationExpression	- 1		321805	1					
ANR	321882	UnaryOperator	-		321805	0					
ANR	321883	PrimaryExpression	1		321805	1					
ANR	321884	IdentifierDecl	current_size = - 1		321805	1					
ANR	321885	IdentifierDeclType	int64_t		321805	0					
ANR	321886	Identifier	current_size		321805	1					
ANR	321887	AssignmentExpression	current_size = - 1		321805	2		=			
ANR	321888	Identifier	current_size		321805	0					
ANR	321889	UnaryOperationExpression	- 1		321805	1					
ANR	321890	UnaryOperator	-		321805	0					
ANR	321891	PrimaryExpression	1		321805	1					
ANR	321892	ClassDefStatement	struct toc_entry { uint32_t offset ; uint32_t size ; } TOC [ MAX_TOC_ENTRIES ] ;	15:4:300:396	321805	5	True				
ANR	321893	Identifier	toc_entry		321805	0					
ANR	321894	IdentifierDecl	TOC [ MAX_TOC_ENTRIES ]		321805	1					
ANR	321895	IdentifierDeclType	toc_entry [ MAX_TOC_ENTRIES ]		321805	0					
ANR	321896	Identifier	TOC		321805	1					
ANR	321897	Identifier	MAX_TOC_ENTRIES		321805	2					
ANR	321898	IdentifierDeclStatement	uint32_t header_key_part [ 4 ] ;	23:4:403:430	321805	6	True				
ANR	321899	IdentifierDecl	header_key_part [ 4 ]		321805	0					
ANR	321900	IdentifierDeclType	uint32_t [ 4 ]		321805	0					
ANR	321901	Identifier	header_key_part		321805	1					
ANR	321902	PrimaryExpression	4		321805	2					
ANR	321903	IdentifierDeclStatement	uint8_t header_key [ 16 ] ;	25:4:437:459	321805	7	True				
ANR	321904	IdentifierDecl	header_key [ 16 ]		321805	0					
ANR	321905	IdentifierDeclType	uint8_t [ 16 ]		321805	0					
ANR	321906	Identifier	header_key		321805	1					
ANR	321907	PrimaryExpression	16		321805	2					
ANR	321908	IdentifierDeclStatement	AADemuxContext * c = s -> priv_data ;	27:4:466:498	321805	8	True				
ANR	321909	IdentifierDecl	* c = s -> priv_data		321805	0					
ANR	321910	IdentifierDeclType	AADemuxContext *		321805	0					
ANR	321911	Identifier	c		321805	1					
ANR	321912	AssignmentExpression	* c = s -> priv_data		321805	2		=			
ANR	321913	Identifier	c		321805	0					
ANR	321914	PtrMemberAccess	s -> priv_data		321805	1					
ANR	321915	Identifier	s		321805	0					
ANR	321916	Identifier	priv_data		321805	1					
ANR	321917	IdentifierDeclStatement	AVIOContext * pb = s -> pb ;	29:4:505:528	321805	9	True				
ANR	321918	IdentifierDecl	* pb = s -> pb		321805	0					
ANR	321919	IdentifierDeclType	AVIOContext *		321805	0					
ANR	321920	Identifier	pb		321805	1					
ANR	321921	AssignmentExpression	* pb = s -> pb		321805	2		=			
ANR	321922	Identifier	pb		321805	0					
ANR	321923	PtrMemberAccess	s -> pb		321805	1					
ANR	321924	Identifier	s		321805	0					
ANR	321925	Identifier	pb		321805	1					
ANR	321926	IdentifierDeclStatement	AVStream * st ;	31:4:535:547	321805	10	True				
ANR	321927	IdentifierDecl	* st		321805	0					
ANR	321928	IdentifierDeclType	AVStream *		321805	0					
ANR	321929	Identifier	st		321805	1					
ANR	321930	ExpressionStatement	"avio_skip ( pb , 4 )"	37:4:584:600	321805	11	True				
ANR	321931	CallExpression	"avio_skip ( pb , 4 )"		321805	0					
ANR	321932	Callee	avio_skip		321805	0					
ANR	321933	Identifier	avio_skip		321805	0					
ANR	321934	ArgumentList	pb		321805	1					
ANR	321935	Argument	pb		321805	0					
ANR	321936	Identifier	pb		321805	0					
ANR	321937	Argument	4		321805	1					
ANR	321938	PrimaryExpression	4		321805	0					
ANR	321939	ExpressionStatement	"avio_skip ( pb , 4 )"	39:4:620:636	321805	12	True				
ANR	321940	CallExpression	"avio_skip ( pb , 4 )"		321805	0					
ANR	321941	Callee	avio_skip		321805	0					
ANR	321942	Identifier	avio_skip		321805	0					
ANR	321943	ArgumentList	pb		321805	1					
ANR	321944	Argument	pb		321805	0					
ANR	321945	Identifier	pb		321805	0					
ANR	321946	Argument	4		321805	1					
ANR	321947	PrimaryExpression	4		321805	0					
ANR	321948	ExpressionStatement	toc_size = avio_rb32 ( pb )	41:4:659:683	321805	13	True				
ANR	321949	AssignmentExpression	toc_size = avio_rb32 ( pb )		321805	0		=			
ANR	321950	Identifier	toc_size		321805	0					
ANR	321951	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	321952	Callee	avio_rb32		321805	0					
ANR	321953	Identifier	avio_rb32		321805	0					
ANR	321954	ArgumentList	pb		321805	1					
ANR	321955	Argument	pb		321805	0					
ANR	321956	Identifier	pb		321805	0					
ANR	321957	ExpressionStatement	"avio_skip ( pb , 4 )"	43:4:702:718	321805	14	True				
ANR	321958	CallExpression	"avio_skip ( pb , 4 )"		321805	0					
ANR	321959	Callee	avio_skip		321805	0					
ANR	321960	Identifier	avio_skip		321805	0					
ANR	321961	ArgumentList	pb		321805	1					
ANR	321962	Argument	pb		321805	0					
ANR	321963	Identifier	pb		321805	0					
ANR	321964	Argument	4		321805	1					
ANR	321965	PrimaryExpression	4		321805	0					
ANR	321966	IfStatement	if ( toc_size > MAX_TOC_ENTRIES )		321805	15					
ANR	321967	Condition	toc_size > MAX_TOC_ENTRIES	45:8:753:778	321805	0	True				
ANR	321968	RelationalExpression	toc_size > MAX_TOC_ENTRIES		321805	0		>			
ANR	321969	Identifier	toc_size		321805	0					
ANR	321970	Identifier	MAX_TOC_ENTRIES		321805	1					
ANR	321971	ReturnStatement	return AVERROR_INVALIDDATA ;	47:8:790:816	321805	1	True				
ANR	321972	Identifier	AVERROR_INVALIDDATA		321805	0					
ANR	321973	ForStatement	for ( i = 0 ; i < toc_size ; i ++ )		321805	16					
ANR	321974	ForInit	i = 0 ;	49:9:828:833	321805	0	True				
ANR	321975	AssignmentExpression	i = 0		321805	0		=			
ANR	321976	Identifier	i		321805	0					
ANR	321977	PrimaryExpression	0		321805	1					
ANR	321978	Condition	i < toc_size	49:16:835:846	321805	1	True				
ANR	321979	RelationalExpression	i < toc_size		321805	0		<			
ANR	321980	Identifier	i		321805	0					
ANR	321981	Identifier	toc_size		321805	1					
ANR	321982	PostIncDecOperationExpression	i ++	49:30:849:851	321805	2	True				
ANR	321983	Identifier	i		321805	0					
ANR	321984	IncDec	++		321805	1					
ANR	321985	CompoundStatement		47:35:806:806	321805	3					
ANR	321986	ExpressionStatement	"avio_skip ( pb , 4 )"	51:8:877:893	321805	0	True				
ANR	321987	CallExpression	"avio_skip ( pb , 4 )"		321805	0					
ANR	321988	Callee	avio_skip		321805	0					
ANR	321989	Identifier	avio_skip		321805	0					
ANR	321990	ArgumentList	pb		321805	1					
ANR	321991	Argument	pb		321805	0					
ANR	321992	Identifier	pb		321805	0					
ANR	321993	Argument	4		321805	1					
ANR	321994	PrimaryExpression	4		321805	0					
ANR	321995	ExpressionStatement	TOC [ i ] . offset = avio_rb32 ( pb )	53:8:923:952	321805	1	True				
ANR	321996	AssignmentExpression	TOC [ i ] . offset = avio_rb32 ( pb )		321805	0		=			
ANR	321997	MemberAccess	TOC [ i ] . offset		321805	0					
ANR	321998	ArrayIndexing	TOC [ i ]		321805	0					
ANR	321999	Identifier	TOC		321805	0					
ANR	322000	Identifier	i		321805	1					
ANR	322001	Identifier	offset		321805	1					
ANR	322002	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	322003	Callee	avio_rb32		321805	0					
ANR	322004	Identifier	avio_rb32		321805	0					
ANR	322005	ArgumentList	pb		321805	1					
ANR	322006	Argument	pb		321805	0					
ANR	322007	Identifier	pb		321805	0					
ANR	322008	ExpressionStatement	TOC [ i ] . size = avio_rb32 ( pb )	55:8:979:1006	321805	2	True				
ANR	322009	AssignmentExpression	TOC [ i ] . size = avio_rb32 ( pb )		321805	0		=			
ANR	322010	MemberAccess	TOC [ i ] . size		321805	0					
ANR	322011	ArrayIndexing	TOC [ i ]		321805	0					
ANR	322012	Identifier	TOC		321805	0					
ANR	322013	Identifier	i		321805	1					
ANR	322014	Identifier	size		321805	1					
ANR	322015	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	322016	Callee	avio_rb32		321805	0					
ANR	322017	Identifier	avio_rb32		321805	0					
ANR	322018	ArgumentList	pb		321805	1					
ANR	322019	Argument	pb		321805	0					
ANR	322020	Identifier	pb		321805	0					
ANR	322021	ExpressionStatement	"avio_skip ( pb , 24 )"	59:4:1034:1051	321805	17	True				
ANR	322022	CallExpression	"avio_skip ( pb , 24 )"		321805	0					
ANR	322023	Callee	avio_skip		321805	0					
ANR	322024	Identifier	avio_skip		321805	0					
ANR	322025	ArgumentList	pb		321805	1					
ANR	322026	Argument	pb		321805	0					
ANR	322027	Identifier	pb		321805	0					
ANR	322028	Argument	24		321805	1					
ANR	322029	PrimaryExpression	24		321805	0					
ANR	322030	ExpressionStatement	npairs = avio_rb32 ( pb )	61:4:1096:1118	321805	18	True				
ANR	322031	AssignmentExpression	npairs = avio_rb32 ( pb )		321805	0		=			
ANR	322032	Identifier	npairs		321805	0					
ANR	322033	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	322034	Callee	avio_rb32		321805	0					
ANR	322035	Identifier	avio_rb32		321805	0					
ANR	322036	ArgumentList	pb		321805	1					
ANR	322037	Argument	pb		321805	0					
ANR	322038	Identifier	pb		321805	0					
ANR	322039	IfStatement	if ( npairs > MAX_DICTIONARY_ENTRIES )		321805	19					
ANR	322040	Condition	npairs > MAX_DICTIONARY_ENTRIES	63:8:1156:1186	321805	0	True				
ANR	322041	RelationalExpression	npairs > MAX_DICTIONARY_ENTRIES		321805	0		>			
ANR	322042	Identifier	npairs		321805	0					
ANR	322043	Identifier	MAX_DICTIONARY_ENTRIES		321805	1					
ANR	322044	ReturnStatement	return AVERROR_INVALIDDATA ;	65:8:1198:1224	321805	1	True				
ANR	322045	Identifier	AVERROR_INVALIDDATA		321805	0					
ANR	322046	ForStatement	for ( i = 0 ; i < npairs ; i ++ )		321805	20					
ANR	322047	ForInit	i = 0 ;	67:9:1236:1241	321805	0	True				
ANR	322048	AssignmentExpression	i = 0		321805	0		=			
ANR	322049	Identifier	i		321805	0					
ANR	322050	PrimaryExpression	0		321805	1					
ANR	322051	Condition	i < npairs	67:16:1243:1252	321805	1	True				
ANR	322052	RelationalExpression	i < npairs		321805	0		<			
ANR	322053	Identifier	i		321805	0					
ANR	322054	Identifier	npairs		321805	1					
ANR	322055	PostIncDecOperationExpression	i ++	67:28:1255:1257	321805	2	True				
ANR	322056	Identifier	i		321805	0					
ANR	322057	IncDec	++		321805	1					
ANR	322058	CompoundStatement		65:33:1212:1212	321805	3					
ANR	322059	ExpressionStatement	"memset ( val , 0 , sizeof ( val ) )"	69:8:1271:1298	321805	0	True				
ANR	322060	CallExpression	"memset ( val , 0 , sizeof ( val ) )"		321805	0					
ANR	322061	Callee	memset		321805	0					
ANR	322062	Identifier	memset		321805	0					
ANR	322063	ArgumentList	val		321805	1					
ANR	322064	Argument	val		321805	0					
ANR	322065	Identifier	val		321805	0					
ANR	322066	Argument	0		321805	1					
ANR	322067	PrimaryExpression	0		321805	0					
ANR	322068	Argument	sizeof ( val )		321805	2					
ANR	322069	SizeofExpression	sizeof ( val )		321805	0					
ANR	322070	Sizeof	sizeof		321805	0					
ANR	322071	SizeofOperand	val		321805	1					
ANR	322072	ExpressionStatement	"memset ( key , 0 , sizeof ( key ) )"	71:8:1309:1336	321805	1	True				
ANR	322073	CallExpression	"memset ( key , 0 , sizeof ( key ) )"		321805	0					
ANR	322074	Callee	memset		321805	0					
ANR	322075	Identifier	memset		321805	0					
ANR	322076	ArgumentList	key		321805	1					
ANR	322077	Argument	key		321805	0					
ANR	322078	Identifier	key		321805	0					
ANR	322079	Argument	0		321805	1					
ANR	322080	PrimaryExpression	0		321805	0					
ANR	322081	Argument	sizeof ( key )		321805	2					
ANR	322082	SizeofExpression	sizeof ( key )		321805	0					
ANR	322083	Sizeof	sizeof		321805	0					
ANR	322084	SizeofOperand	key		321805	1					
ANR	322085	ExpressionStatement	"avio_skip ( pb , 1 )"	73:8:1347:1363	321805	2	True				
ANR	322086	CallExpression	"avio_skip ( pb , 1 )"		321805	0					
ANR	322087	Callee	avio_skip		321805	0					
ANR	322088	Identifier	avio_skip		321805	0					
ANR	322089	ArgumentList	pb		321805	1					
ANR	322090	Argument	pb		321805	0					
ANR	322091	Identifier	pb		321805	0					
ANR	322092	Argument	1		321805	1					
ANR	322093	PrimaryExpression	1		321805	0					
ANR	322094	ExpressionStatement	nkey = avio_rb32 ( pb )	75:8:1398:1418	321805	3	True				
ANR	322095	AssignmentExpression	nkey = avio_rb32 ( pb )		321805	0		=			
ANR	322096	Identifier	nkey		321805	0					
ANR	322097	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	322098	Callee	avio_rb32		321805	0					
ANR	322099	Identifier	avio_rb32		321805	0					
ANR	322100	ArgumentList	pb		321805	1					
ANR	322101	Argument	pb		321805	0					
ANR	322102	Identifier	pb		321805	0					
ANR	322103	ExpressionStatement	nval = avio_rb32 ( pb )	77:8:1450:1470	321805	4	True				
ANR	322104	AssignmentExpression	nval = avio_rb32 ( pb )		321805	0		=			
ANR	322105	Identifier	nval		321805	0					
ANR	322106	CallExpression	avio_rb32 ( pb )		321805	1					
ANR	322107	Callee	avio_rb32		321805	0					
ANR	322108	Identifier	avio_rb32		321805	0					
ANR	322109	ArgumentList	pb		321805	1					
ANR	322110	Argument	pb		321805	0					
ANR	322111	Identifier	pb		321805	0					
ANR	322112	IfStatement	if ( nkey > sizeof ( key ) )		321805	5					
ANR	322113	Condition	nkey > sizeof ( key )	79:12:1508:1525	321805	0	True				
ANR	322114	RelationalExpression	nkey > sizeof ( key )		321805	0		>			
ANR	322115	Identifier	nkey		321805	0					
ANR	322116	SizeofExpression	sizeof ( key )		321805	1					
ANR	322117	Sizeof	sizeof		321805	0					
ANR	322118	SizeofOperand	key		321805	1					
ANR	322119	CompoundStatement		77:32:1480:1480	321805	1					
ANR	322120	ExpressionStatement	"avio_skip ( pb , nkey )"	81:12:1543:1562	321805	0	True				
ANR	322121	CallExpression	"avio_skip ( pb , nkey )"		321805	0					
ANR	322122	Callee	avio_skip		321805	0					
ANR	322123	Identifier	avio_skip		321805	0					
ANR	322124	ArgumentList	pb		321805	1					
ANR	322125	Argument	pb		321805	0					
ANR	322126	Identifier	pb		321805	0					
ANR	322127	Argument	nkey		321805	1					
ANR	322128	Identifier	nkey		321805	0					
ANR	322129	ElseStatement	else		321805	0					
ANR	322130	CompoundStatement		81:15:1532:1532	321805	0					
ANR	322131	ExpressionStatement	"avio_read ( pb , key , nkey )"	85:12:1595:1619	321805	0	True				
ANR	322132	CallExpression	"avio_read ( pb , key , nkey )"		321805	0					
ANR	322133	Callee	avio_read		321805	0					
ANR	322134	Identifier	avio_read		321805	0					
ANR	322135	ArgumentList	pb		321805	1					
ANR	322136	Argument	pb		321805	0					
ANR	322137	Identifier	pb		321805	0					
ANR	322138	Argument	key		321805	1					
ANR	322139	Identifier	key		321805	0					
ANR	322140	Argument	nkey		321805	2					
ANR	322141	Identifier	nkey		321805	0					
ANR	322142	IfStatement	if ( nval > sizeof ( val ) )		321805	6					
ANR	322143	Condition	nval > sizeof ( val )	89:12:1659:1676	321805	0	True				
ANR	322144	RelationalExpression	nval > sizeof ( val )		321805	0		>			
ANR	322145	Identifier	nval		321805	0					
ANR	322146	SizeofExpression	sizeof ( val )		321805	1					
ANR	322147	Sizeof	sizeof		321805	0					
ANR	322148	SizeofOperand	val		321805	1					
ANR	322149	CompoundStatement		87:32:1631:1631	321805	1					
ANR	322150	ExpressionStatement	"avio_skip ( pb , nval )"	91:12:1694:1713	321805	0	True				
ANR	322151	CallExpression	"avio_skip ( pb , nval )"		321805	0					
ANR	322152	Callee	avio_skip		321805	0					
ANR	322153	Identifier	avio_skip		321805	0					
ANR	322154	ArgumentList	pb		321805	1					
ANR	322155	Argument	pb		321805	0					
ANR	322156	Identifier	pb		321805	0					
ANR	322157	Argument	nval		321805	1					
ANR	322158	Identifier	nval		321805	0					
ANR	322159	ElseStatement	else		321805	0					
ANR	322160	CompoundStatement		91:15:1683:1683	321805	0					
ANR	322161	ExpressionStatement	"avio_read ( pb , val , nval )"	95:12:1746:1770	321805	0	True				
ANR	322162	CallExpression	"avio_read ( pb , val , nval )"		321805	0					
ANR	322163	Callee	avio_read		321805	0					
ANR	322164	Identifier	avio_read		321805	0					
ANR	322165	ArgumentList	pb		321805	1					
ANR	322166	Argument	pb		321805	0					
ANR	322167	Identifier	pb		321805	0					
ANR	322168	Argument	val		321805	1					
ANR	322169	Identifier	val		321805	0					
ANR	322170	Argument	nval		321805	2					
ANR	322171	Identifier	nval		321805	0					
ANR	322172	IfStatement	"if ( ! strcmp ( key , ""codec"" ) )"		321805	7					
ANR	322173	Condition	"! strcmp ( key , ""codec"" )"	99:12:1812:1832	321805	0	True				
ANR	322174	UnaryOperationExpression	"! strcmp ( key , ""codec"" )"		321805	0					
ANR	322175	UnaryOperator	!		321805	0					
ANR	322176	CallExpression	"strcmp ( key , ""codec"" )"		321805	1					
ANR	322177	Callee	strcmp		321805	0					
ANR	322178	Identifier	strcmp		321805	0					
ANR	322179	ArgumentList	key		321805	1					
ANR	322180	Argument	key		321805	0					
ANR	322181	Identifier	key		321805	0					
ANR	322182	Argument	"""codec"""		321805	1					
ANR	322183	PrimaryExpression	"""codec"""		321805	0					
ANR	322184	CompoundStatement		97:35:1787:1787	321805	1					
ANR	322185	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""Codec is <%s>\\n"" , val )"	101:12:1850:1897	321805	0	True				
ANR	322186	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""Codec is <%s>\\n"" , val )"		321805	0					
ANR	322187	Callee	av_log		321805	0					
ANR	322188	Identifier	av_log		321805	0					
ANR	322189	ArgumentList	s		321805	1					
ANR	322190	Argument	s		321805	0					
ANR	322191	Identifier	s		321805	0					
ANR	322192	Argument	AV_LOG_DEBUG		321805	1					
ANR	322193	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322194	Argument	"""Codec is <%s>\\n"""		321805	2					
ANR	322195	PrimaryExpression	"""Codec is <%s>\\n"""		321805	0					
ANR	322196	Argument	val		321805	3					
ANR	322197	Identifier	val		321805	0					
ANR	322198	ExpressionStatement	"strncpy ( codec_name , val , sizeof ( codec_name ) - 1 )"	103:12:1912:1960	321805	1	True				
ANR	322199	CallExpression	"strncpy ( codec_name , val , sizeof ( codec_name ) - 1 )"		321805	0					
ANR	322200	Callee	strncpy		321805	0					
ANR	322201	Identifier	strncpy		321805	0					
ANR	322202	ArgumentList	codec_name		321805	1					
ANR	322203	Argument	codec_name		321805	0					
ANR	322204	Identifier	codec_name		321805	0					
ANR	322205	Argument	val		321805	1					
ANR	322206	Identifier	val		321805	0					
ANR	322207	Argument	sizeof ( codec_name ) - 1		321805	2					
ANR	322208	AdditiveExpression	sizeof ( codec_name ) - 1		321805	0		-			
ANR	322209	SizeofExpression	sizeof ( codec_name )		321805	0					
ANR	322210	Sizeof	sizeof		321805	0					
ANR	322211	SizeofOperand	codec_name		321805	1					
ANR	322212	PrimaryExpression	1		321805	1					
ANR	322213	IfStatement	"if ( ! strcmp ( key , ""HeaderSeed"" ) )"		321805	8					
ANR	322214	Condition	"! strcmp ( key , ""HeaderSeed"" )"	107:12:1986:2011	321805	0	True				
ANR	322215	UnaryOperationExpression	"! strcmp ( key , ""HeaderSeed"" )"		321805	0					
ANR	322216	UnaryOperator	!		321805	0					
ANR	322217	CallExpression	"strcmp ( key , ""HeaderSeed"" )"		321805	1					
ANR	322218	Callee	strcmp		321805	0					
ANR	322219	Identifier	strcmp		321805	0					
ANR	322220	ArgumentList	key		321805	1					
ANR	322221	Argument	key		321805	0					
ANR	322222	Identifier	key		321805	0					
ANR	322223	Argument	"""HeaderSeed"""		321805	1					
ANR	322224	PrimaryExpression	"""HeaderSeed"""		321805	0					
ANR	322225	CompoundStatement		105:40:1966:1966	321805	1					
ANR	322226	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""HeaderSeed is <%s>\\n"" , val )"	109:12:2029:2081	321805	0	True				
ANR	322227	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""HeaderSeed is <%s>\\n"" , val )"		321805	0					
ANR	322228	Callee	av_log		321805	0					
ANR	322229	Identifier	av_log		321805	0					
ANR	322230	ArgumentList	s		321805	1					
ANR	322231	Argument	s		321805	0					
ANR	322232	Identifier	s		321805	0					
ANR	322233	Argument	AV_LOG_DEBUG		321805	1					
ANR	322234	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322235	Argument	"""HeaderSeed is <%s>\\n"""		321805	2					
ANR	322236	PrimaryExpression	"""HeaderSeed is <%s>\\n"""		321805	0					
ANR	322237	Argument	val		321805	3					
ANR	322238	Identifier	val		321805	0					
ANR	322239	ExpressionStatement	header_seed = atoi ( val )	111:12:2096:2119	321805	1	True				
ANR	322240	AssignmentExpression	header_seed = atoi ( val )		321805	0		=			
ANR	322241	Identifier	header_seed		321805	0					
ANR	322242	CallExpression	atoi ( val )		321805	1					
ANR	322243	Callee	atoi		321805	0					
ANR	322244	Identifier	atoi		321805	0					
ANR	322245	ArgumentList	val		321805	1					
ANR	322246	Argument	val		321805	0					
ANR	322247	Identifier	val		321805	0					
ANR	322248	IfStatement	"if ( ! strcmp ( key , ""HeaderKey"" ) )"		321805	9					
ANR	322249	Condition	"! strcmp ( key , ""HeaderKey"" )"	115:12:2145:2169	321805	0	True				
ANR	322250	UnaryOperationExpression	"! strcmp ( key , ""HeaderKey"" )"		321805	0					
ANR	322251	UnaryOperator	!		321805	0					
ANR	322252	CallExpression	"strcmp ( key , ""HeaderKey"" )"		321805	1					
ANR	322253	Callee	strcmp		321805	0					
ANR	322254	Identifier	strcmp		321805	0					
ANR	322255	ArgumentList	key		321805	1					
ANR	322256	Argument	key		321805	0					
ANR	322257	Identifier	key		321805	0					
ANR	322258	Argument	"""HeaderKey"""		321805	1					
ANR	322259	PrimaryExpression	"""HeaderKey"""		321805	0					
ANR	322260	CompoundStatement		113:39:2124:2124	321805	1					
ANR	322261	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""HeaderKey is <%s>\\n"" , val )"	117:12:2252:2303	321805	0	True				
ANR	322262	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""HeaderKey is <%s>\\n"" , val )"		321805	0					
ANR	322263	Callee	av_log		321805	0					
ANR	322264	Identifier	av_log		321805	0					
ANR	322265	ArgumentList	s		321805	1					
ANR	322266	Argument	s		321805	0					
ANR	322267	Identifier	s		321805	0					
ANR	322268	Argument	AV_LOG_DEBUG		321805	1					
ANR	322269	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322270	Argument	"""HeaderKey is <%s>\\n"""		321805	2					
ANR	322271	PrimaryExpression	"""HeaderKey is <%s>\\n"""		321805	0					
ANR	322272	Argument	val		321805	3					
ANR	322273	Identifier	val		321805	0					
ANR	322274	ExpressionStatement	"sscanf ( val , ""%u%u%u%u"" , & header_key_part [ 0 ] , & header_key_part [ 1 ] , & header_key_part [ 2 ] , & header_key_part [ 3 ] )"	119:12:2318:2425	321805	1	True				
ANR	322275	CallExpression	"sscanf ( val , ""%u%u%u%u"" , & header_key_part [ 0 ] , & header_key_part [ 1 ] , & header_key_part [ 2 ] , & header_key_part [ 3 ] )"		321805	0					
ANR	322276	Callee	sscanf		321805	0					
ANR	322277	Identifier	sscanf		321805	0					
ANR	322278	ArgumentList	val		321805	1					
ANR	322279	Argument	val		321805	0					
ANR	322280	Identifier	val		321805	0					
ANR	322281	Argument	"""%u%u%u%u"""		321805	1					
ANR	322282	PrimaryExpression	"""%u%u%u%u"""		321805	0					
ANR	322283	Argument	& header_key_part [ 0 ]		321805	2					
ANR	322284	UnaryOperationExpression	& header_key_part [ 0 ]		321805	0					
ANR	322285	UnaryOperator	&		321805	0					
ANR	322286	ArrayIndexing	header_key_part [ 0 ]		321805	1					
ANR	322287	Identifier	header_key_part		321805	0					
ANR	322288	PrimaryExpression	0		321805	1					
ANR	322289	Argument	& header_key_part [ 1 ]		321805	3					
ANR	322290	UnaryOperationExpression	& header_key_part [ 1 ]		321805	0					
ANR	322291	UnaryOperator	&		321805	0					
ANR	322292	ArrayIndexing	header_key_part [ 1 ]		321805	1					
ANR	322293	Identifier	header_key_part		321805	0					
ANR	322294	PrimaryExpression	1		321805	1					
ANR	322295	Argument	& header_key_part [ 2 ]		321805	4					
ANR	322296	UnaryOperationExpression	& header_key_part [ 2 ]		321805	0					
ANR	322297	UnaryOperator	&		321805	0					
ANR	322298	ArrayIndexing	header_key_part [ 2 ]		321805	1					
ANR	322299	Identifier	header_key_part		321805	0					
ANR	322300	PrimaryExpression	2		321805	1					
ANR	322301	Argument	& header_key_part [ 3 ]		321805	5					
ANR	322302	UnaryOperationExpression	& header_key_part [ 3 ]		321805	0					
ANR	322303	UnaryOperator	&		321805	0					
ANR	322304	ArrayIndexing	header_key_part [ 3 ]		321805	1					
ANR	322305	Identifier	header_key_part		321805	0					
ANR	322306	PrimaryExpression	3		321805	1					
ANR	322307	ForStatement	for ( idx = 0 ; idx < 4 ; idx ++ )		321805	2					
ANR	322308	ForInit	idx = 0 ;	121:17:2445:2452	321805	0	True				
ANR	322309	AssignmentExpression	idx = 0		321805	0		=			
ANR	322310	Identifier	idx		321805	0					
ANR	322311	PrimaryExpression	0		321805	1					
ANR	322312	Condition	idx < 4	121:26:2454:2460	321805	1	True				
ANR	322313	RelationalExpression	idx < 4		321805	0		<			
ANR	322314	Identifier	idx		321805	0					
ANR	322315	PrimaryExpression	4		321805	1					
ANR	322316	PostIncDecOperationExpression	idx ++	121:35:2463:2467	321805	2	True				
ANR	322317	Identifier	idx		321805	0					
ANR	322318	IncDec	++		321805	1					
ANR	322319	CompoundStatement		119:42:2422:2422	321805	3					
ANR	322320	ExpressionStatement	"AV_WB32 ( & header_key [ idx * 4 ] , header_key_part [ idx ] )"	123:16:2489:2540	321805	0	True				
ANR	322321	CallExpression	"AV_WB32 ( & header_key [ idx * 4 ] , header_key_part [ idx ] )"		321805	0					
ANR	322322	Callee	AV_WB32		321805	0					
ANR	322323	Identifier	AV_WB32		321805	0					
ANR	322324	ArgumentList	& header_key [ idx * 4 ]		321805	1					
ANR	322325	Argument	& header_key [ idx * 4 ]		321805	0					
ANR	322326	UnaryOperationExpression	& header_key [ idx * 4 ]		321805	0					
ANR	322327	UnaryOperator	&		321805	0					
ANR	322328	ArrayIndexing	header_key [ idx * 4 ]		321805	1					
ANR	322329	Identifier	header_key		321805	0					
ANR	322330	MultiplicativeExpression	idx * 4		321805	1		*			
ANR	322331	Identifier	idx		321805	0					
ANR	322332	PrimaryExpression	4		321805	1					
ANR	322333	Argument	header_key_part [ idx ]		321805	1					
ANR	322334	ArrayIndexing	header_key_part [ idx ]		321805	0					
ANR	322335	Identifier	header_key_part		321805	0					
ANR	322336	Identifier	idx		321805	1					
ANR	322337	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""Processed HeaderKey is "" )"	127:12:2598:2648	321805	3	True				
ANR	322338	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""Processed HeaderKey is "" )"		321805	0					
ANR	322339	Callee	av_log		321805	0					
ANR	322340	Identifier	av_log		321805	0					
ANR	322341	ArgumentList	s		321805	1					
ANR	322342	Argument	s		321805	0					
ANR	322343	Identifier	s		321805	0					
ANR	322344	Argument	AV_LOG_DEBUG		321805	1					
ANR	322345	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322346	Argument	"""Processed HeaderKey is """		321805	2					
ANR	322347	PrimaryExpression	"""Processed HeaderKey is """		321805	0					
ANR	322348	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		321805	4					
ANR	322349	ForInit	i = 0 ;	129:17:2668:2673	321805	0	True				
ANR	322350	AssignmentExpression	i = 0		321805	0		=			
ANR	322351	Identifier	i		321805	0					
ANR	322352	PrimaryExpression	0		321805	1					
ANR	322353	Condition	i < 16	129:24:2675:2680	321805	1	True				
ANR	322354	RelationalExpression	i < 16		321805	0		<			
ANR	322355	Identifier	i		321805	0					
ANR	322356	PrimaryExpression	16		321805	1					
ANR	322357	PostIncDecOperationExpression	i ++	129:32:2683:2685	321805	2	True				
ANR	322358	Identifier	i		321805	0					
ANR	322359	IncDec	++		321805	1					
ANR	322360	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""%02x"" , header_key [ i ] )"	131:16:2705:2751	321805	3	True				
ANR	322361	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""%02x"" , header_key [ i ] )"		321805	0					
ANR	322362	Callee	av_log		321805	0					
ANR	322363	Identifier	av_log		321805	0					
ANR	322364	ArgumentList	s		321805	1					
ANR	322365	Argument	s		321805	0					
ANR	322366	Identifier	s		321805	0					
ANR	322367	Argument	AV_LOG_DEBUG		321805	1					
ANR	322368	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322369	Argument	"""%02x"""		321805	2					
ANR	322370	PrimaryExpression	"""%02x"""		321805	0					
ANR	322371	Argument	header_key [ i ]		321805	3					
ANR	322372	ArrayIndexing	header_key [ i ]		321805	0					
ANR	322373	Identifier	header_key		321805	0					
ANR	322374	Identifier	i		321805	1					
ANR	322375	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""\\n"" )"	133:12:2766:2795	321805	5	True				
ANR	322376	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""\\n"" )"		321805	0					
ANR	322377	Callee	av_log		321805	0					
ANR	322378	Identifier	av_log		321805	0					
ANR	322379	ArgumentList	s		321805	1					
ANR	322380	Argument	s		321805	0					
ANR	322381	Identifier	s		321805	0					
ANR	322382	Argument	AV_LOG_DEBUG		321805	1					
ANR	322383	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322384	Argument	"""\\n"""		321805	2					
ANR	322385	PrimaryExpression	"""\\n"""		321805	0					
ANR	322386	IfStatement	if ( c -> aa_fixed_key_len != 16 )		321805	21					
ANR	322387	Condition	c -> aa_fixed_key_len != 16	143:8:2854:2878	321805	0	True				
ANR	322388	EqualityExpression	c -> aa_fixed_key_len != 16		321805	0		!=			
ANR	322389	PtrMemberAccess	c -> aa_fixed_key_len		321805	0					
ANR	322390	Identifier	c		321805	0					
ANR	322391	Identifier	aa_fixed_key_len		321805	1					
ANR	322392	PrimaryExpression	16		321805	1					
ANR	322393	CompoundStatement		141:35:2833:2833	321805	1					
ANR	322394	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""aa_fixed_key value needs to be 16 bytes!\\n"" )"	145:8:2892:2961	321805	0	True				
ANR	322395	CallExpression	"av_log ( s , AV_LOG_ERROR , ""aa_fixed_key value needs to be 16 bytes!\\n"" )"		321805	0					
ANR	322396	Callee	av_log		321805	0					
ANR	322397	Identifier	av_log		321805	0					
ANR	322398	ArgumentList	s		321805	1					
ANR	322399	Argument	s		321805	0					
ANR	322400	Identifier	s		321805	0					
ANR	322401	Argument	AV_LOG_ERROR		321805	1					
ANR	322402	Identifier	AV_LOG_ERROR		321805	0					
ANR	322403	Argument	"""aa_fixed_key value needs to be 16 bytes!\\n"""		321805	2					
ANR	322404	PrimaryExpression	"""aa_fixed_key value needs to be 16 bytes!\\n"""		321805	0					
ANR	322405	ReturnStatement	return AVERROR ( EINVAL ) ;	147:8:2972:2994	321805	1	True				
ANR	322406	CallExpression	AVERROR ( EINVAL )		321805	0					
ANR	322407	Callee	AVERROR		321805	0					
ANR	322408	Identifier	AVERROR		321805	0					
ANR	322409	ArgumentList	EINVAL		321805	1					
ANR	322410	Argument	EINVAL		321805	0					
ANR	322411	Identifier	EINVAL		321805	0					
ANR	322412	IfStatement	if ( ( c -> codec_second_size = get_second_size ( codec_name ) ) == - 1 )		321805	22					
ANR	322413	Condition	( c -> codec_second_size = get_second_size ( codec_name ) ) == - 1	155:8:3038:3095	321805	0	True				
ANR	322414	EqualityExpression	( c -> codec_second_size = get_second_size ( codec_name ) ) == - 1		321805	0		==			
ANR	322415	AssignmentExpression	c -> codec_second_size = get_second_size ( codec_name )		321805	0		=			
ANR	322416	PtrMemberAccess	c -> codec_second_size		321805	0					
ANR	322417	Identifier	c		321805	0					
ANR	322418	Identifier	codec_second_size		321805	1					
ANR	322419	CallExpression	get_second_size ( codec_name )		321805	1					
ANR	322420	Callee	get_second_size		321805	0					
ANR	322421	Identifier	get_second_size		321805	0					
ANR	322422	ArgumentList	codec_name		321805	1					
ANR	322423	Argument	codec_name		321805	0					
ANR	322424	Identifier	codec_name		321805	0					
ANR	322425	UnaryOperationExpression	- 1		321805	1					
ANR	322426	UnaryOperator	-		321805	0					
ANR	322427	PrimaryExpression	1		321805	1					
ANR	322428	CompoundStatement		153:68:3050:3050	321805	1					
ANR	322429	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""unknown codec <%s>!\\n"" , codec_name )"	157:8:3109:3169	321805	0	True				
ANR	322430	CallExpression	"av_log ( s , AV_LOG_ERROR , ""unknown codec <%s>!\\n"" , codec_name )"		321805	0					
ANR	322431	Callee	av_log		321805	0					
ANR	322432	Identifier	av_log		321805	0					
ANR	322433	ArgumentList	s		321805	1					
ANR	322434	Argument	s		321805	0					
ANR	322435	Identifier	s		321805	0					
ANR	322436	Argument	AV_LOG_ERROR		321805	1					
ANR	322437	Identifier	AV_LOG_ERROR		321805	0					
ANR	322438	Argument	"""unknown codec <%s>!\\n"""		321805	2					
ANR	322439	PrimaryExpression	"""unknown codec <%s>!\\n"""		321805	0					
ANR	322440	Argument	codec_name		321805	3					
ANR	322441	Identifier	codec_name		321805	0					
ANR	322442	ReturnStatement	return AVERROR ( EINVAL ) ;	159:8:3180:3202	321805	1	True				
ANR	322443	CallExpression	AVERROR ( EINVAL )		321805	0					
ANR	322444	Callee	AVERROR		321805	0					
ANR	322445	Identifier	AVERROR		321805	0					
ANR	322446	ArgumentList	EINVAL		321805	1					
ANR	322447	Argument	EINVAL		321805	0					
ANR	322448	Identifier	EINVAL		321805	0					
ANR	322449	ExpressionStatement	c -> tea_ctx = av_tea_alloc ( )	167:4:3255:3282	321805	23	True				
ANR	322450	AssignmentExpression	c -> tea_ctx = av_tea_alloc ( )		321805	0		=			
ANR	322451	PtrMemberAccess	c -> tea_ctx		321805	0					
ANR	322452	Identifier	c		321805	0					
ANR	322453	Identifier	tea_ctx		321805	1					
ANR	322454	CallExpression	av_tea_alloc ( )		321805	1					
ANR	322455	Callee	av_tea_alloc		321805	0					
ANR	322456	Identifier	av_tea_alloc		321805	0					
ANR	322457	ArgumentList			321805	1					
ANR	322458	IfStatement	if ( ! c -> tea_ctx )		321805	24					
ANR	322459	Condition	! c -> tea_ctx	169:8:3293:3303	321805	0	True				
ANR	322460	UnaryOperationExpression	! c -> tea_ctx		321805	0					
ANR	322461	UnaryOperator	!		321805	0					
ANR	322462	PtrMemberAccess	c -> tea_ctx		321805	1					
ANR	322463	Identifier	c		321805	0					
ANR	322464	Identifier	tea_ctx		321805	1					
ANR	322465	ReturnStatement	return AVERROR ( ENOMEM ) ;	171:8:3315:3337	321805	1	True				
ANR	322466	CallExpression	AVERROR ( ENOMEM )		321805	0					
ANR	322467	Callee	AVERROR		321805	0					
ANR	322468	Identifier	AVERROR		321805	0					
ANR	322469	ArgumentList	ENOMEM		321805	1					
ANR	322470	Argument	ENOMEM		321805	0					
ANR	322471	Identifier	ENOMEM		321805	0					
ANR	322472	ExpressionStatement	"av_tea_init ( c -> tea_ctx , c -> aa_fixed_key , 16 )"	173:4:3344:3388	321805	25	True				
ANR	322473	CallExpression	"av_tea_init ( c -> tea_ctx , c -> aa_fixed_key , 16 )"		321805	0					
ANR	322474	Callee	av_tea_init		321805	0					
ANR	322475	Identifier	av_tea_init		321805	0					
ANR	322476	ArgumentList	c -> tea_ctx		321805	1					
ANR	322477	Argument	c -> tea_ctx		321805	0					
ANR	322478	PtrMemberAccess	c -> tea_ctx		321805	0					
ANR	322479	Identifier	c		321805	0					
ANR	322480	Identifier	tea_ctx		321805	1					
ANR	322481	Argument	c -> aa_fixed_key		321805	1					
ANR	322482	PtrMemberAccess	c -> aa_fixed_key		321805	0					
ANR	322483	Identifier	c		321805	0					
ANR	322484	Identifier	aa_fixed_key		321805	1					
ANR	322485	Argument	16		321805	2					
ANR	322486	PrimaryExpression	16		321805	0					
ANR	322487	ExpressionStatement	output [ 0 ] = output [ 1 ] = 0	175:4:3395:3420	321805	26	True				
ANR	322488	AssignmentExpression	output [ 0 ] = output [ 1 ] = 0		321805	0		=			
ANR	322489	ArrayIndexing	output [ 0 ]		321805	0					
ANR	322490	Identifier	output		321805	0					
ANR	322491	PrimaryExpression	0		321805	1					
ANR	322492	AssignmentExpression	output [ 1 ] = 0		321805	1		=			
ANR	322493	ArrayIndexing	output [ 1 ]		321805	0					
ANR	322494	Identifier	output		321805	0					
ANR	322495	PrimaryExpression	1		321805	1					
ANR	322496	PrimaryExpression	0		321805	1					
ANR	322497	ExpressionStatement	"memcpy ( output + 2 , header_key , 16 )"	177:4:3458:3492	321805	27	True				
ANR	322498	CallExpression	"memcpy ( output + 2 , header_key , 16 )"		321805	0					
ANR	322499	Callee	memcpy		321805	0					
ANR	322500	Identifier	memcpy		321805	0					
ANR	322501	ArgumentList	output + 2		321805	1					
ANR	322502	Argument	output + 2		321805	0					
ANR	322503	AdditiveExpression	output + 2		321805	0		+			
ANR	322504	Identifier	output		321805	0					
ANR	322505	PrimaryExpression	2		321805	1					
ANR	322506	Argument	header_key		321805	1					
ANR	322507	Identifier	header_key		321805	0					
ANR	322508	Argument	16		321805	2					
ANR	322509	PrimaryExpression	16		321805	0					
ANR	322510	ExpressionStatement	idx = 0	179:4:3499:3506	321805	28	True				
ANR	322511	AssignmentExpression	idx = 0		321805	0		=			
ANR	322512	Identifier	idx		321805	0					
ANR	322513	PrimaryExpression	0		321805	1					
ANR	322514	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		321805	29					
ANR	322515	ForInit	i = 0 ;	181:9:3518:3523	321805	0	True				
ANR	322516	AssignmentExpression	i = 0		321805	0		=			
ANR	322517	Identifier	i		321805	0					
ANR	322518	PrimaryExpression	0		321805	1					
ANR	322519	Condition	i < 3	181:16:3525:3529	321805	1	True				
ANR	322520	RelationalExpression	i < 3		321805	0		<			
ANR	322521	Identifier	i		321805	0					
ANR	322522	PrimaryExpression	3		321805	1					
ANR	322523	PostIncDecOperationExpression	i ++	181:23:3532:3534	321805	2	True				
ANR	322524	Identifier	i		321805	0					
ANR	322525	IncDec	++		321805	1					
ANR	322526	CompoundStatement		179:28:3489:3489	321805	3					
ANR	322527	ExpressionStatement	"AV_WB32 ( src , header_seed )"	183:8:3587:3612	321805	0	True				
ANR	322528	CallExpression	"AV_WB32 ( src , header_seed )"		321805	0					
ANR	322529	Callee	AV_WB32		321805	0					
ANR	322530	Identifier	AV_WB32		321805	0					
ANR	322531	ArgumentList	src		321805	1					
ANR	322532	Argument	src		321805	0					
ANR	322533	Identifier	src		321805	0					
ANR	322534	Argument	header_seed		321805	1					
ANR	322535	Identifier	header_seed		321805	0					
ANR	322536	ExpressionStatement	"AV_WB32 ( src + 4 , header_seed + 1 )"	185:8:3623:3656	321805	1	True				
ANR	322537	CallExpression	"AV_WB32 ( src + 4 , header_seed + 1 )"		321805	0					
ANR	322538	Callee	AV_WB32		321805	0					
ANR	322539	Identifier	AV_WB32		321805	0					
ANR	322540	ArgumentList	src + 4		321805	1					
ANR	322541	Argument	src + 4		321805	0					
ANR	322542	AdditiveExpression	src + 4		321805	0		+			
ANR	322543	Identifier	src		321805	0					
ANR	322544	PrimaryExpression	4		321805	1					
ANR	322545	Argument	header_seed + 1		321805	1					
ANR	322546	AdditiveExpression	header_seed + 1		321805	0		+			
ANR	322547	Identifier	header_seed		321805	0					
ANR	322548	PrimaryExpression	1		321805	1					
ANR	322549	ExpressionStatement	header_seed += 2	187:8:3667:3683	321805	2	True				
ANR	322550	AssignmentExpression	header_seed += 2		321805	0		+=			
ANR	322551	Identifier	header_seed		321805	0					
ANR	322552	PrimaryExpression	2		321805	1					
ANR	322553	ExpressionStatement	"av_tea_crypt ( c -> tea_ctx , dst , src , 1 , NULL , 0 )"	189:8:3694:3740	321805	3	True				
ANR	322554	CallExpression	"av_tea_crypt ( c -> tea_ctx , dst , src , 1 , NULL , 0 )"		321805	0					
ANR	322555	Callee	av_tea_crypt		321805	0					
ANR	322556	Identifier	av_tea_crypt		321805	0					
ANR	322557	ArgumentList	c -> tea_ctx		321805	1					
ANR	322558	Argument	c -> tea_ctx		321805	0					
ANR	322559	PtrMemberAccess	c -> tea_ctx		321805	0					
ANR	322560	Identifier	c		321805	0					
ANR	322561	Identifier	tea_ctx		321805	1					
ANR	322562	Argument	dst		321805	1					
ANR	322563	Identifier	dst		321805	0					
ANR	322564	Argument	src		321805	2					
ANR	322565	Identifier	src		321805	0					
ANR	322566	Argument	1		321805	3					
ANR	322567	PrimaryExpression	1		321805	0					
ANR	322568	Argument	NULL		321805	4					
ANR	322569	Identifier	NULL		321805	0					
ANR	322570	Argument	0		321805	5					
ANR	322571	PrimaryExpression	0		321805	0					
ANR	322572	ForStatement	"for ( j = 0 ; j < TEA_BLOCK_SIZE && idx < 18 ; j += 1 , idx += 1 )"		321805	4					
ANR	322573	ForInit	j = 0 ;	191:13:3775:3780	321805	0	True				
ANR	322574	AssignmentExpression	j = 0		321805	0		=			
ANR	322575	Identifier	j		321805	0					
ANR	322576	PrimaryExpression	0		321805	1					
ANR	322577	Condition	j < TEA_BLOCK_SIZE && idx < 18	191:20:3782:3811	321805	1	True				
ANR	322578	AndExpression	j < TEA_BLOCK_SIZE && idx < 18		321805	0		&&			
ANR	322579	RelationalExpression	j < TEA_BLOCK_SIZE		321805	0		<			
ANR	322580	Identifier	j		321805	0					
ANR	322581	Identifier	TEA_BLOCK_SIZE		321805	1					
ANR	322582	RelationalExpression	idx < 18		321805	1		<			
ANR	322583	Identifier	idx		321805	0					
ANR	322584	PrimaryExpression	18		321805	1					
ANR	322585	Expression	"j += 1 , idx += 1"	191:52:3814:3825	321805	2	True				
ANR	322586	AssignmentExpression	j += 1		321805	0		+=			
ANR	322587	Identifier	j		321805	0					
ANR	322588	PrimaryExpression	1		321805	1					
ANR	322589	AssignmentExpression	idx += 1		321805	1		+=			
ANR	322590	Identifier	idx		321805	0					
ANR	322591	PrimaryExpression	1		321805	1					
ANR	322592	CompoundStatement		189:66:3780:3780	321805	3					
ANR	322593	ExpressionStatement	output [ idx ] = output [ idx ] ^ dst [ j ]	193:12:3843:3877	321805	0	True				
ANR	322594	AssignmentExpression	output [ idx ] = output [ idx ] ^ dst [ j ]		321805	0		=			
ANR	322595	ArrayIndexing	output [ idx ]		321805	0					
ANR	322596	Identifier	output		321805	0					
ANR	322597	Identifier	idx		321805	1					
ANR	322598	ExclusiveOrExpression	output [ idx ] ^ dst [ j ]		321805	1		^			
ANR	322599	ArrayIndexing	output [ idx ]		321805	0					
ANR	322600	Identifier	output		321805	0					
ANR	322601	Identifier	idx		321805	1					
ANR	322602	ArrayIndexing	dst [ j ]		321805	1					
ANR	322603	Identifier	dst		321805	0					
ANR	322604	Identifier	j		321805	1					
ANR	322605	ExpressionStatement	"memcpy ( c -> file_key , output + 2 , 16 )"	199:4:3902:3937	321805	30	True				
ANR	322606	CallExpression	"memcpy ( c -> file_key , output + 2 , 16 )"		321805	0					
ANR	322607	Callee	memcpy		321805	0					
ANR	322608	Identifier	memcpy		321805	0					
ANR	322609	ArgumentList	c -> file_key		321805	1					
ANR	322610	Argument	c -> file_key		321805	0					
ANR	322611	PtrMemberAccess	c -> file_key		321805	0					
ANR	322612	Identifier	c		321805	0					
ANR	322613	Identifier	file_key		321805	1					
ANR	322614	Argument	output + 2		321805	1					
ANR	322615	AdditiveExpression	output + 2		321805	0		+			
ANR	322616	Identifier	output		321805	0					
ANR	322617	PrimaryExpression	2		321805	1					
ANR	322618	Argument	16		321805	2					
ANR	322619	PrimaryExpression	16		321805	0					
ANR	322620	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""File key is "" )"	201:4:3976:4015	321805	31	True				
ANR	322621	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""File key is "" )"		321805	0					
ANR	322622	Callee	av_log		321805	0					
ANR	322623	Identifier	av_log		321805	0					
ANR	322624	ArgumentList	s		321805	1					
ANR	322625	Argument	s		321805	0					
ANR	322626	Identifier	s		321805	0					
ANR	322627	Argument	AV_LOG_DEBUG		321805	1					
ANR	322628	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322629	Argument	"""File key is """		321805	2					
ANR	322630	PrimaryExpression	"""File key is """		321805	0					
ANR	322631	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		321805	32					
ANR	322632	ForInit	i = 0 ;	203:9:4027:4032	321805	0	True				
ANR	322633	AssignmentExpression	i = 0		321805	0		=			
ANR	322634	Identifier	i		321805	0					
ANR	322635	PrimaryExpression	0		321805	1					
ANR	322636	Condition	i < 16	203:16:4034:4039	321805	1	True				
ANR	322637	RelationalExpression	i < 16		321805	0		<			
ANR	322638	Identifier	i		321805	0					
ANR	322639	PrimaryExpression	16		321805	1					
ANR	322640	PostIncDecOperationExpression	i ++	203:24:4042:4044	321805	2	True				
ANR	322641	Identifier	i		321805	0					
ANR	322642	IncDec	++		321805	1					
ANR	322643	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""%02x"" , c -> file_key [ i ] )"	205:8:4056:4103	321805	3	True				
ANR	322644	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""%02x"" , c -> file_key [ i ] )"		321805	0					
ANR	322645	Callee	av_log		321805	0					
ANR	322646	Identifier	av_log		321805	0					
ANR	322647	ArgumentList	s		321805	1					
ANR	322648	Argument	s		321805	0					
ANR	322649	Identifier	s		321805	0					
ANR	322650	Argument	AV_LOG_DEBUG		321805	1					
ANR	322651	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322652	Argument	"""%02x"""		321805	2					
ANR	322653	PrimaryExpression	"""%02x"""		321805	0					
ANR	322654	Argument	c -> file_key [ i ]		321805	3					
ANR	322655	ArrayIndexing	c -> file_key [ i ]		321805	0					
ANR	322656	PtrMemberAccess	c -> file_key		321805	0					
ANR	322657	Identifier	c		321805	0					
ANR	322658	Identifier	file_key		321805	1					
ANR	322659	Identifier	i		321805	1					
ANR	322660	ExpressionStatement	"av_log ( s , AV_LOG_DEBUG , ""\\n"" )"	207:4:4110:4139	321805	33	True				
ANR	322661	CallExpression	"av_log ( s , AV_LOG_DEBUG , ""\\n"" )"		321805	0					
ANR	322662	Callee	av_log		321805	0					
ANR	322663	Identifier	av_log		321805	0					
ANR	322664	ArgumentList	s		321805	1					
ANR	322665	Argument	s		321805	0					
ANR	322666	Identifier	s		321805	0					
ANR	322667	Argument	AV_LOG_DEBUG		321805	1					
ANR	322668	Identifier	AV_LOG_DEBUG		321805	0					
ANR	322669	Argument	"""\\n"""		321805	2					
ANR	322670	PrimaryExpression	"""\\n"""		321805	0					
ANR	322671	ExpressionStatement	"st = avformat_new_stream ( s , NULL )"	213:4:4173:4206	321805	34	True				
ANR	322672	AssignmentExpression	"st = avformat_new_stream ( s , NULL )"		321805	0		=			
ANR	322673	Identifier	st		321805	0					
ANR	322674	CallExpression	"avformat_new_stream ( s , NULL )"		321805	1					
ANR	322675	Callee	avformat_new_stream		321805	0					
ANR	322676	Identifier	avformat_new_stream		321805	0					
ANR	322677	ArgumentList	s		321805	1					
ANR	322678	Argument	s		321805	0					
ANR	322679	Identifier	s		321805	0					
ANR	322680	Argument	NULL		321805	1					
ANR	322681	Identifier	NULL		321805	0					
ANR	322682	IfStatement	if ( ! st )		321805	35					
ANR	322683	Condition	! st	215:8:4217:4219	321805	0	True				
ANR	322684	UnaryOperationExpression	! st		321805	0					
ANR	322685	UnaryOperator	!		321805	0					
ANR	322686	Identifier	st		321805	1					
ANR	322687	CompoundStatement		213:13:4174:4174	321805	1					
ANR	322688	ExpressionStatement	av_freep ( & c -> tea_ctx )	217:8:4233:4254	321805	0	True				
ANR	322689	CallExpression	av_freep ( & c -> tea_ctx )		321805	0					
ANR	322690	Callee	av_freep		321805	0					
ANR	322691	Identifier	av_freep		321805	0					
ANR	322692	ArgumentList	& c -> tea_ctx		321805	1					
ANR	322693	Argument	& c -> tea_ctx		321805	0					
ANR	322694	UnaryOperationExpression	& c -> tea_ctx		321805	0					
ANR	322695	UnaryOperator	&		321805	0					
ANR	322696	PtrMemberAccess	c -> tea_ctx		321805	1					
ANR	322697	Identifier	c		321805	0					
ANR	322698	Identifier	tea_ctx		321805	1					
ANR	322699	ReturnStatement	return AVERROR ( ENOMEM ) ;	219:8:4265:4287	321805	1	True				
ANR	322700	CallExpression	AVERROR ( ENOMEM )		321805	0					
ANR	322701	Callee	AVERROR		321805	0					
ANR	322702	Identifier	AVERROR		321805	0					
ANR	322703	ArgumentList	ENOMEM		321805	1					
ANR	322704	Argument	ENOMEM		321805	0					
ANR	322705	Identifier	ENOMEM		321805	0					
ANR	322706	ExpressionStatement	st -> codec -> codec_type = AVMEDIA_TYPE_AUDIO	223:4:4301:4343	321805	36	True				
ANR	322707	AssignmentExpression	st -> codec -> codec_type = AVMEDIA_TYPE_AUDIO		321805	0		=			
ANR	322708	PtrMemberAccess	st -> codec -> codec_type		321805	0					
ANR	322709	PtrMemberAccess	st -> codec		321805	0					
ANR	322710	Identifier	st		321805	0					
ANR	322711	Identifier	codec		321805	1					
ANR	322712	Identifier	codec_type		321805	1					
ANR	322713	Identifier	AVMEDIA_TYPE_AUDIO		321805	1					
ANR	322714	IfStatement	"if ( ! strcmp ( codec_name , ""mp332"" ) )"		321805	37					
ANR	322715	Condition	"! strcmp ( codec_name , ""mp332"" )"	225:8:4354:4381	321805	0	True				
ANR	322716	UnaryOperationExpression	"! strcmp ( codec_name , ""mp332"" )"		321805	0					
ANR	322717	UnaryOperator	!		321805	0					
ANR	322718	CallExpression	"strcmp ( codec_name , ""mp332"" )"		321805	1					
ANR	322719	Callee	strcmp		321805	0					
ANR	322720	Identifier	strcmp		321805	0					
ANR	322721	ArgumentList	codec_name		321805	1					
ANR	322722	Argument	codec_name		321805	0					
ANR	322723	Identifier	codec_name		321805	0					
ANR	322724	Argument	"""mp332"""		321805	1					
ANR	322725	PrimaryExpression	"""mp332"""		321805	0					
ANR	322726	CompoundStatement		223:38:4336:4336	321805	1					
ANR	322727	ExpressionStatement	st -> codec -> codec_id = AV_CODEC_ID_MP3	227:8:4395:4432	321805	0	True				
ANR	322728	AssignmentExpression	st -> codec -> codec_id = AV_CODEC_ID_MP3		321805	0		=			
ANR	322729	PtrMemberAccess	st -> codec -> codec_id		321805	0					
ANR	322730	PtrMemberAccess	st -> codec		321805	0					
ANR	322731	Identifier	st		321805	0					
ANR	322732	Identifier	codec		321805	1					
ANR	322733	Identifier	codec_id		321805	1					
ANR	322734	Identifier	AV_CODEC_ID_MP3		321805	1					
ANR	322735	ExpressionStatement	st -> codec -> sample_rate = 22050	229:8:4443:4473	321805	1	True				
ANR	322736	AssignmentExpression	st -> codec -> sample_rate = 22050		321805	0		=			
ANR	322737	PtrMemberAccess	st -> codec -> sample_rate		321805	0					
ANR	322738	PtrMemberAccess	st -> codec		321805	0					
ANR	322739	Identifier	st		321805	0					
ANR	322740	Identifier	codec		321805	1					
ANR	322741	Identifier	sample_rate		321805	1					
ANR	322742	PrimaryExpression	22050		321805	1					
ANR	322743	ExpressionStatement	st -> need_parsing = AVSTREAM_PARSE_FULL_RAW	231:8:4484:4526	321805	2	True				
ANR	322744	AssignmentExpression	st -> need_parsing = AVSTREAM_PARSE_FULL_RAW		321805	0		=			
ANR	322745	PtrMemberAccess	st -> need_parsing		321805	0					
ANR	322746	Identifier	st		321805	0					
ANR	322747	Identifier	need_parsing		321805	1					
ANR	322748	Identifier	AVSTREAM_PARSE_FULL_RAW		321805	1					
ANR	322749	ExpressionStatement	st -> start_time = 0	233:8:4537:4555	321805	3	True				
ANR	322750	AssignmentExpression	st -> start_time = 0		321805	0		=			
ANR	322751	PtrMemberAccess	st -> start_time		321805	0					
ANR	322752	Identifier	st		321805	0					
ANR	322753	Identifier	start_time		321805	1					
ANR	322754	PrimaryExpression	0		321805	1					
ANR	322755	ElseStatement	else		321805	0					
ANR	322756	IfStatement	"if ( ! strcmp ( codec_name , ""acelp85"" ) )"		321805	0					
ANR	322757	Condition	"! strcmp ( codec_name , ""acelp85"" )"	235:15:4573:4602	321805	0	True				
ANR	322758	UnaryOperationExpression	"! strcmp ( codec_name , ""acelp85"" )"		321805	0					
ANR	322759	UnaryOperator	!		321805	0					
ANR	322760	CallExpression	"strcmp ( codec_name , ""acelp85"" )"		321805	1					
ANR	322761	Callee	strcmp		321805	0					
ANR	322762	Identifier	strcmp		321805	0					
ANR	322763	ArgumentList	codec_name		321805	1					
ANR	322764	Argument	codec_name		321805	0					
ANR	322765	Identifier	codec_name		321805	0					
ANR	322766	Argument	"""acelp85"""		321805	1					
ANR	322767	PrimaryExpression	"""acelp85"""		321805	0					
ANR	322768	CompoundStatement		233:47:4557:4557	321805	1					
ANR	322769	ExpressionStatement	st -> codec -> codec_id = AV_CODEC_ID_SIPR	237:8:4616:4654	321805	0	True				
ANR	322770	AssignmentExpression	st -> codec -> codec_id = AV_CODEC_ID_SIPR		321805	0		=			
ANR	322771	PtrMemberAccess	st -> codec -> codec_id		321805	0					
ANR	322772	PtrMemberAccess	st -> codec		321805	0					
ANR	322773	Identifier	st		321805	0					
ANR	322774	Identifier	codec		321805	1					
ANR	322775	Identifier	codec_id		321805	1					
ANR	322776	Identifier	AV_CODEC_ID_SIPR		321805	1					
ANR	322777	ExpressionStatement	st -> codec -> block_align = 19	239:8:4665:4692	321805	1	True				
ANR	322778	AssignmentExpression	st -> codec -> block_align = 19		321805	0		=			
ANR	322779	PtrMemberAccess	st -> codec -> block_align		321805	0					
ANR	322780	PtrMemberAccess	st -> codec		321805	0					
ANR	322781	Identifier	st		321805	0					
ANR	322782	Identifier	codec		321805	1					
ANR	322783	Identifier	block_align		321805	1					
ANR	322784	PrimaryExpression	19		321805	1					
ANR	322785	ExpressionStatement	st -> codec -> channels = 1	241:8:4703:4726	321805	2	True				
ANR	322786	AssignmentExpression	st -> codec -> channels = 1		321805	0		=			
ANR	322787	PtrMemberAccess	st -> codec -> channels		321805	0					
ANR	322788	PtrMemberAccess	st -> codec		321805	0					
ANR	322789	Identifier	st		321805	0					
ANR	322790	Identifier	codec		321805	1					
ANR	322791	Identifier	channels		321805	1					
ANR	322792	PrimaryExpression	1		321805	1					
ANR	322793	ExpressionStatement	st -> codec -> sample_rate = 8500	243:8:4737:4766	321805	3	True				
ANR	322794	AssignmentExpression	st -> codec -> sample_rate = 8500		321805	0		=			
ANR	322795	PtrMemberAccess	st -> codec -> sample_rate		321805	0					
ANR	322796	PtrMemberAccess	st -> codec		321805	0					
ANR	322797	Identifier	st		321805	0					
ANR	322798	Identifier	codec		321805	1					
ANR	322799	Identifier	sample_rate		321805	1					
ANR	322800	PrimaryExpression	8500		321805	1					
ANR	322801	ElseStatement	else		321805	0					
ANR	322802	IfStatement	"if ( ! strcmp ( codec_name , ""acelp16"" ) )"		321805	0					
ANR	322803	Condition	"! strcmp ( codec_name , ""acelp16"" )"	245:15:4784:4813	321805	0	True				
ANR	322804	UnaryOperationExpression	"! strcmp ( codec_name , ""acelp16"" )"		321805	0					
ANR	322805	UnaryOperator	!		321805	0					
ANR	322806	CallExpression	"strcmp ( codec_name , ""acelp16"" )"		321805	1					
ANR	322807	Callee	strcmp		321805	0					
ANR	322808	Identifier	strcmp		321805	0					
ANR	322809	ArgumentList	codec_name		321805	1					
ANR	322810	Argument	codec_name		321805	0					
ANR	322811	Identifier	codec_name		321805	0					
ANR	322812	Argument	"""acelp16"""		321805	1					
ANR	322813	PrimaryExpression	"""acelp16"""		321805	0					
ANR	322814	CompoundStatement		243:47:4768:4768	321805	1					
ANR	322815	ExpressionStatement	st -> codec -> codec_id = AV_CODEC_ID_SIPR	247:8:4827:4865	321805	0	True				
ANR	322816	AssignmentExpression	st -> codec -> codec_id = AV_CODEC_ID_SIPR		321805	0		=			
ANR	322817	PtrMemberAccess	st -> codec -> codec_id		321805	0					
ANR	322818	PtrMemberAccess	st -> codec		321805	0					
ANR	322819	Identifier	st		321805	0					
ANR	322820	Identifier	codec		321805	1					
ANR	322821	Identifier	codec_id		321805	1					
ANR	322822	Identifier	AV_CODEC_ID_SIPR		321805	1					
ANR	322823	ExpressionStatement	st -> codec -> block_align = 20	249:8:4876:4903	321805	1	True				
ANR	322824	AssignmentExpression	st -> codec -> block_align = 20		321805	0		=			
ANR	322825	PtrMemberAccess	st -> codec -> block_align		321805	0					
ANR	322826	PtrMemberAccess	st -> codec		321805	0					
ANR	322827	Identifier	st		321805	0					
ANR	322828	Identifier	codec		321805	1					
ANR	322829	Identifier	block_align		321805	1					
ANR	322830	PrimaryExpression	20		321805	1					
ANR	322831	ExpressionStatement	st -> codec -> channels = 1	251:8:4914:4937	321805	2	True				
ANR	322832	AssignmentExpression	st -> codec -> channels = 1		321805	0		=			
ANR	322833	PtrMemberAccess	st -> codec -> channels		321805	0					
ANR	322834	PtrMemberAccess	st -> codec		321805	0					
ANR	322835	Identifier	st		321805	0					
ANR	322836	Identifier	codec		321805	1					
ANR	322837	Identifier	channels		321805	1					
ANR	322838	PrimaryExpression	1		321805	1					
ANR	322839	ExpressionStatement	st -> codec -> sample_rate = 16000	253:8:4948:4978	321805	3	True				
ANR	322840	AssignmentExpression	st -> codec -> sample_rate = 16000		321805	0		=			
ANR	322841	PtrMemberAccess	st -> codec -> sample_rate		321805	0					
ANR	322842	PtrMemberAccess	st -> codec		321805	0					
ANR	322843	Identifier	st		321805	0					
ANR	322844	Identifier	codec		321805	1					
ANR	322845	Identifier	sample_rate		321805	1					
ANR	322846	PrimaryExpression	16000		321805	1					
ANR	322847	ForStatement	for ( i = 1 ; i < toc_size ; i ++ )		321805	38					
ANR	322848	ForInit	i = 1 ;	261:9:5052:5057	321805	0	True				
ANR	322849	AssignmentExpression	i = 1		321805	0		=			
ANR	322850	Identifier	i		321805	0					
ANR	322851	PrimaryExpression	1		321805	1					
ANR	322852	Condition	i < toc_size	261:16:5059:5070	321805	1	True				
ANR	322853	RelationalExpression	i < toc_size		321805	0		<			
ANR	322854	Identifier	i		321805	0					
ANR	322855	Identifier	toc_size		321805	1					
ANR	322856	PostIncDecOperationExpression	i ++	261:30:5073:5075	321805	2	True				
ANR	322857	Identifier	i		321805	0					
ANR	322858	IncDec	++		321805	1					
ANR	322859	CompoundStatement		259:35:5030:5030	321805	3					
ANR	322860	ExpressionStatement	current_size = TOC [ i ] . size	263:8:5114:5140	321805	0	True				
ANR	322861	AssignmentExpression	current_size = TOC [ i ] . size		321805	0		=			
ANR	322862	Identifier	current_size		321805	0					
ANR	322863	MemberAccess	TOC [ i ] . size		321805	1					
ANR	322864	ArrayIndexing	TOC [ i ]		321805	0					
ANR	322865	Identifier	TOC		321805	0					
ANR	322866	Identifier	i		321805	1					
ANR	322867	Identifier	size		321805	1					
ANR	322868	IfStatement	if ( current_size > largest_size )		321805	1					
ANR	322869	Condition	current_size > largest_size	265:12:5155:5181	321805	0	True				
ANR	322870	RelationalExpression	current_size > largest_size		321805	0		>			
ANR	322871	Identifier	current_size		321805	0					
ANR	322872	Identifier	largest_size		321805	1					
ANR	322873	CompoundStatement		263:41:5136:5136	321805	1					
ANR	322874	ExpressionStatement	largest_idx = i	267:12:5199:5214	321805	0	True				
ANR	322875	AssignmentExpression	largest_idx = i		321805	0		=			
ANR	322876	Identifier	largest_idx		321805	0					
ANR	322877	Identifier	i		321805	1					
ANR	322878	ExpressionStatement	largest_size = current_size	269:12:5229:5256	321805	1	True				
ANR	322879	AssignmentExpression	largest_size = current_size		321805	0		=			
ANR	322880	Identifier	largest_size		321805	0					
ANR	322881	Identifier	current_size		321805	1					
ANR	322882	ExpressionStatement	start = TOC [ largest_idx ] . offset	275:4:5281:5312	321805	39	True				
ANR	322883	AssignmentExpression	start = TOC [ largest_idx ] . offset		321805	0		=			
ANR	322884	Identifier	start		321805	0					
ANR	322885	MemberAccess	TOC [ largest_idx ] . offset		321805	1					
ANR	322886	ArrayIndexing	TOC [ largest_idx ]		321805	0					
ANR	322887	Identifier	TOC		321805	0					
ANR	322888	Identifier	largest_idx		321805	1					
ANR	322889	Identifier	offset		321805	1					
ANR	322890	ExpressionStatement	"avio_seek ( pb , start , SEEK_SET )"	277:4:5319:5349	321805	40	True				
ANR	322891	CallExpression	"avio_seek ( pb , start , SEEK_SET )"		321805	0					
ANR	322892	Callee	avio_seek		321805	0					
ANR	322893	Identifier	avio_seek		321805	0					
ANR	322894	ArgumentList	pb		321805	1					
ANR	322895	Argument	pb		321805	0					
ANR	322896	Identifier	pb		321805	0					
ANR	322897	Argument	start		321805	1					
ANR	322898	Identifier	start		321805	0					
ANR	322899	Argument	SEEK_SET		321805	2					
ANR	322900	Identifier	SEEK_SET		321805	0					
ANR	322901	ExpressionStatement	c -> current_chapter_size = 0	279:4:5356:5383	321805	41	True				
ANR	322902	AssignmentExpression	c -> current_chapter_size = 0		321805	0		=			
ANR	322903	PtrMemberAccess	c -> current_chapter_size		321805	0					
ANR	322904	Identifier	c		321805	0					
ANR	322905	Identifier	current_chapter_size		321805	1					
ANR	322906	PrimaryExpression	0		321805	1					
ANR	322907	ReturnStatement	return 0 ;	283:4:5392:5400	321805	42	True				
ANR	322908	PrimaryExpression	0		321805	0					
ANR	322909	ReturnType	static int		321805	1					
ANR	322910	Identifier	aa_read_header		321805	2					
ANR	322911	ParameterList	AVFormatContext * s		321805	3					
ANR	322912	Parameter	AVFormatContext * s	1:26:26:43	321805	0	True				
ANR	322913	ParameterType	AVFormatContext *		321805	0					
ANR	322914	Identifier	s		321805	1					
ANR	322915	CFGEntryNode	ENTRY		321805		True				
ANR	322916	CFGExitNode	EXIT		321805		True				
ANR	322917	Symbol	ENOMEM		321805						
ANR	322918	Symbol	nkey		321805						
ANR	322919	Symbol	* st		321805						
ANR	322920	Symbol	AVMEDIA_TYPE_AUDIO		321805						
ANR	322921	Symbol	current_size		321805						
ANR	322922	Symbol	av_tea_alloc		321805						
ANR	322923	Symbol	* st -> codec		321805						
ANR	322924	Symbol	output		321805						
ANR	322925	Symbol	* dst		321805						
ANR	322926	Symbol	AV_CODEC_ID_SIPR		321805						
ANR	322927	Symbol	* idx		321805						
ANR	322928	Symbol	header_key_part		321805						
ANR	322929	Symbol	AV_LOG_DEBUG		321805						
ANR	322930	Symbol	val		321805						
ANR	322931	Symbol	s -> priv_data		321805						
ANR	322932	Symbol	strcmp		321805						
ANR	322933	Symbol	st -> need_parsing		321805						
ANR	322934	Symbol	NULL		321805						
ANR	322935	Symbol	toc_size		321805						
ANR	322936	Symbol	npairs		321805						
ANR	322937	Symbol	* * c		321805						
ANR	322938	Symbol	TOC		321805						
ANR	322939	Symbol	TEA_BLOCK_SIZE		321805						
ANR	322940	Symbol	* c -> file_key		321805						
ANR	322941	Symbol	st -> codec -> block_align		321805						
ANR	322942	Symbol	codec_name		321805						
ANR	322943	Symbol	avio_rb32		321805						
ANR	322944	Symbol	* header_key_part		321805						
ANR	322945	Symbol	idx		321805						
ANR	322946	Symbol	MAX_TOC_ENTRIES		321805						
ANR	322947	Symbol	nval		321805						
ANR	322948	Symbol	dst		321805						
ANR	322949	Symbol	& c -> tea_ctx		321805						
ANR	322950	Symbol	AV_CODEC_ID_MP3		321805						
ANR	322951	Symbol	s -> pb		321805						
ANR	322952	Symbol	st -> codec -> sample_rate		321805						
ANR	322953	Symbol	header_key		321805						
ANR	322954	Symbol	* * st		321805						
ANR	322955	Symbol	c -> aa_fixed_key_len		321805						
ANR	322956	Symbol	TOC [ largest_idx ] . offset		321805						
ANR	322957	Symbol	avformat_new_stream		321805						
ANR	322958	Symbol	* largest_idx		321805						
ANR	322959	Symbol	st -> codec -> codec_id		321805						
ANR	322960	Symbol	st -> start_time		321805						
ANR	322961	Symbol	MAX_DICTIONARY_ENTRIES		321805						
ANR	322962	Symbol	c -> current_chapter_size		321805						
ANR	322963	Symbol	largest_idx		321805						
ANR	322964	Symbol	st -> codec -> codec_type		321805						
ANR	322965	Symbol	key		321805						
ANR	322966	Symbol	atoi		321805						
ANR	322967	Symbol	SEEK_SET		321805						
ANR	322968	Symbol	st		321805						
ANR	322969	Symbol	c		321805						
ANR	322970	Symbol	TOC [ i ] . offset		321805						
ANR	322971	Symbol	st -> codec -> channels		321805						
ANR	322972	Symbol	AV_LOG_ERROR		321805						
ANR	322973	Symbol	AVSTREAM_PARSE_FULL_RAW		321805						
ANR	322974	Symbol	src		321805						
ANR	322975	Symbol	get_second_size		321805						
ANR	322976	Symbol	c -> aa_fixed_key		321805						
ANR	322977	Symbol	start		321805						
ANR	322978	Symbol	i		321805						
ANR	322979	Symbol	c -> codec_second_size		321805						
ANR	322980	Symbol	j		321805						
ANR	322981	Symbol	st -> codec		321805						
ANR	322982	Symbol	* TOC		321805						
ANR	322983	Symbol	* c		321805						
ANR	322984	Symbol	EINVAL		321805						
ANR	322985	Symbol	pb		321805						
ANR	322986	Symbol	s		321805						
ANR	322987	Symbol	* i		321805						
ANR	322988	Symbol	* j		321805						
ANR	322989	Symbol	c -> file_key		321805						
ANR	322990	Symbol	header_seed		321805						
ANR	322991	Symbol	largest_size		321805						
ANR	322992	Symbol	AVERROR_INVALIDDATA		321805						
ANR	322993	Symbol	AVERROR		321805						
ANR	322994	Symbol	* header_key		321805						
ANR	322995	Symbol	c -> tea_ctx		321805						
ANR	322996	Symbol	* s		321805						
ANR	322997	Symbol	* output		321805						
ANR	322998	Symbol	TOC [ i ] . size		321805						
