command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3211567	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_check_pixfmt_descriptors_1.c								
ANR	3211568	Function	ff_check_pixfmt_descriptors	1:0:0:1781							
ANR	3211569	FunctionDef	ff_check_pixfmt_descriptors ()		3211568	0					
ANR	3211570	CompoundStatement		1:38:38:1781	3211568	0					
ANR	3211571	IdentifierDeclStatement	"int i , j ;"	3:4:45:53	3211568	0	True				
ANR	3211572	IdentifierDecl	i		3211568	0					
ANR	3211573	IdentifierDeclType	int		3211568	0					
ANR	3211574	Identifier	i		3211568	1					
ANR	3211575	IdentifierDecl	j		3211568	1					
ANR	3211576	IdentifierDeclType	int		3211568	0					
ANR	3211577	Identifier	j		3211568	1					
ANR	3211578	ForStatement	for ( i = 0 ; i < FF_ARRAY_ELEMS ( av_pix_fmt_descriptors ) ; i ++ )		3211568	1					
ANR	3211579	ForInit	i = 0 ;	7:9:67:70	3211568	0	True				
ANR	3211580	AssignmentExpression	i = 0		3211568	0		=			
ANR	3211581	Identifier	i		3211568	0					
ANR	3211582	PrimaryExpression	0		3211568	1					
ANR	3211583	Condition	i < FF_ARRAY_ELEMS ( av_pix_fmt_descriptors )	7:14:72:111	3211568	1	True				
ANR	3211584	RelationalExpression	i < FF_ARRAY_ELEMS ( av_pix_fmt_descriptors )		3211568	0		<			
ANR	3211585	Identifier	i		3211568	0					
ANR	3211586	CallExpression	FF_ARRAY_ELEMS ( av_pix_fmt_descriptors )		3211568	1					
ANR	3211587	Callee	FF_ARRAY_ELEMS		3211568	0					
ANR	3211588	Identifier	FF_ARRAY_ELEMS		3211568	0					
ANR	3211589	ArgumentList	av_pix_fmt_descriptors		3211568	1					
ANR	3211590	Argument	av_pix_fmt_descriptors		3211568	0					
ANR	3211591	Identifier	av_pix_fmt_descriptors		3211568	0					
ANR	3211592	PostIncDecOperationExpression	i ++	7:56:114:116	3211568	2	True				
ANR	3211593	Identifier	i		3211568	0					
ANR	3211594	IncDec	++		3211568	1					
ANR	3211595	CompoundStatement		17:8:303:318	3211568	3					
ANR	3211596	IdentifierDeclStatement	const AVPixFmtDescriptor * d = & av_pix_fmt_descriptors [ i ] ;	9:8:130:186	3211568	0	True				
ANR	3211597	IdentifierDecl	* d = & av_pix_fmt_descriptors [ i ]		3211568	0					
ANR	3211598	IdentifierDeclType	const AVPixFmtDescriptor *		3211568	0					
ANR	3211599	Identifier	d		3211568	1					
ANR	3211600	AssignmentExpression	* d = & av_pix_fmt_descriptors [ i ]		3211568	2		=			
ANR	3211601	Identifier	d		3211568	0					
ANR	3211602	UnaryOperationExpression	& av_pix_fmt_descriptors [ i ]		3211568	1					
ANR	3211603	UnaryOperator	&		3211568	0					
ANR	3211604	ArrayIndexing	av_pix_fmt_descriptors [ i ]		3211568	1					
ANR	3211605	Identifier	av_pix_fmt_descriptors		3211568	0					
ANR	3211606	Identifier	i		3211568	1					
ANR	3211607	Statement	uint8_t	11:8:197:203	3211568	1	True				
ANR	3211608	Statement	fill	11:16:205:208	3211568	2	True				
ANR	3211609	Statement	[	11:20:209:209	3211568	3	True				
ANR	3211610	Statement	4	11:21:210:210	3211568	4	True				
ANR	3211611	Statement	]	11:22:211:211	3211568	5	True				
ANR	3211612	Statement	[	11:23:212:212	3211568	6	True				
ANR	3211613	Statement	8	11:24:213:213	3211568	7	True				
ANR	3211614	Statement	+	11:25:214:214	3211568	8	True				
ANR	3211615	Statement	6	11:26:215:215	3211568	9	True				
ANR	3211616	Statement	+	11:27:216:216	3211568	10	True				
ANR	3211617	Statement	3	11:28:217:217	3211568	11	True				
ANR	3211618	Statement	]	11:29:218:218	3211568	12	True				
ANR	3211619	Statement	=	11:31:220:220	3211568	13	True				
ANR	3211620	CompoundStatement		11:33:183:183	3211568	14					
ANR	3211621	CompoundStatement		11:34:184:184	3211568	0					
ANR	3211622	Statement	0	11:35:224:224	3211568	0	True				
ANR	3211623	ExpressionStatement		11:38:227:227	3211568	15	True				
ANR	3211624	IdentifierDeclStatement	"uint8_t * data [ 4 ] = { fill [ 0 ] , fill [ 1 ] , fill [ 2 ] , fill [ 3 ] } ;"	13:8:238:293	3211568	16	True				
ANR	3211625	IdentifierDecl	"* data [ 4 ] = { fill [ 0 ] , fill [ 1 ] , fill [ 2 ] , fill [ 3 ] }"		3211568	0					
ANR	3211626	IdentifierDeclType	uint8_t * [ 4 ]		3211568	0					
ANR	3211627	Identifier	data		3211568	1					
ANR	3211628	PrimaryExpression	4		3211568	2					
ANR	3211629	AssignmentExpression	"* data [ 4 ] = { fill [ 0 ] , fill [ 1 ] , fill [ 2 ] , fill [ 3 ] }"		3211568	3		=			
ANR	3211630	Identifier	data		3211568	0					
ANR	3211631	InitializerList	fill [ 0 ]		3211568	1					
ANR	3211632	ArrayIndexing	fill [ 0 ]		3211568	0					
ANR	3211633	Identifier	fill		3211568	0					
ANR	3211634	PrimaryExpression	0		3211568	1					
ANR	3211635	ArrayIndexing	fill [ 1 ]		3211568	1					
ANR	3211636	Identifier	fill		3211568	0					
ANR	3211637	PrimaryExpression	1		3211568	1					
ANR	3211638	ArrayIndexing	fill [ 2 ]		3211568	2					
ANR	3211639	Identifier	fill		3211568	0					
ANR	3211640	PrimaryExpression	2		3211568	1					
ANR	3211641	ArrayIndexing	fill [ 3 ]		3211568	3					
ANR	3211642	Identifier	fill		3211568	0					
ANR	3211643	PrimaryExpression	3		3211568	1					
ANR	3211644	IdentifierDeclStatement	"int linesize [ 4 ] = { 0 , 0 , 0 , 0 } ;"	15:8:304:331	3211568	17	True				
ANR	3211645	IdentifierDecl	"linesize [ 4 ] = { 0 , 0 , 0 , 0 }"		3211568	0					
ANR	3211646	IdentifierDeclType	int [ 4 ]		3211568	0					
ANR	3211647	Identifier	linesize		3211568	1					
ANR	3211648	PrimaryExpression	4		3211568	2					
ANR	3211649	AssignmentExpression	"linesize [ 4 ] = { 0 , 0 , 0 , 0 }"		3211568	3		=			
ANR	3211650	Identifier	linesize		3211568	0					
ANR	3211651	InitializerList	0		3211568	1					
ANR	3211652	PrimaryExpression	0		3211568	0					
ANR	3211653	PrimaryExpression	0		3211568	1					
ANR	3211654	PrimaryExpression	0		3211568	2					
ANR	3211655	PrimaryExpression	0		3211568	3					
ANR	3211656	IdentifierDeclStatement	uint16_t tmp [ 2 ] ;	17:8:342:357	3211568	18	True				
ANR	3211657	IdentifierDecl	tmp [ 2 ]		3211568	0					
ANR	3211658	IdentifierDeclType	uint16_t [ 2 ]		3211568	0					
ANR	3211659	Identifier	tmp		3211568	1					
ANR	3211660	PrimaryExpression	2		3211568	2					
ANR	3211661	IfStatement	if ( ! d -> name && ! d -> nb_components && ! d -> log2_chroma_w && ! d -> log2_chroma_h && ! d -> flags )		3211568	19					
ANR	3211662	Condition	! d -> name && ! d -> nb_components && ! d -> log2_chroma_w && ! d -> log2_chroma_h && ! d -> flags	21:12:374:457	3211568	0	True				
ANR	3211663	AndExpression	! d -> name && ! d -> nb_components && ! d -> log2_chroma_w && ! d -> log2_chroma_h && ! d -> flags		3211568	0		&&			
ANR	3211664	UnaryOperationExpression	! d -> name		3211568	0					
ANR	3211665	UnaryOperator	!		3211568	0					
ANR	3211666	PtrMemberAccess	d -> name		3211568	1					
ANR	3211667	Identifier	d		3211568	0					
ANR	3211668	Identifier	name		3211568	1					
ANR	3211669	AndExpression	! d -> nb_components && ! d -> log2_chroma_w && ! d -> log2_chroma_h && ! d -> flags		3211568	1		&&			
ANR	3211670	UnaryOperationExpression	! d -> nb_components		3211568	0					
ANR	3211671	UnaryOperator	!		3211568	0					
ANR	3211672	PtrMemberAccess	d -> nb_components		3211568	1					
ANR	3211673	Identifier	d		3211568	0					
ANR	3211674	Identifier	nb_components		3211568	1					
ANR	3211675	AndExpression	! d -> log2_chroma_w && ! d -> log2_chroma_h && ! d -> flags		3211568	1		&&			
ANR	3211676	UnaryOperationExpression	! d -> log2_chroma_w		3211568	0					
ANR	3211677	UnaryOperator	!		3211568	0					
ANR	3211678	PtrMemberAccess	d -> log2_chroma_w		3211568	1					
ANR	3211679	Identifier	d		3211568	0					
ANR	3211680	Identifier	log2_chroma_w		3211568	1					
ANR	3211681	AndExpression	! d -> log2_chroma_h && ! d -> flags		3211568	1		&&			
ANR	3211682	UnaryOperationExpression	! d -> log2_chroma_h		3211568	0					
ANR	3211683	UnaryOperator	!		3211568	0					
ANR	3211684	PtrMemberAccess	d -> log2_chroma_h		3211568	1					
ANR	3211685	Identifier	d		3211568	0					
ANR	3211686	Identifier	log2_chroma_h		3211568	1					
ANR	3211687	UnaryOperationExpression	! d -> flags		3211568	1					
ANR	3211688	UnaryOperator	!		3211568	0					
ANR	3211689	PtrMemberAccess	d -> flags		3211568	1					
ANR	3211690	Identifier	d		3211568	0					
ANR	3211691	Identifier	flags		3211568	1					
ANR	3211692	ContinueStatement	continue ;	23:12:473:481	3211568	1	True				
ANR	3211693	ExpressionStatement	av_assert0 ( d -> log2_chroma_w <= 3 )	27:8:559:592	3211568	20	True				
ANR	3211694	CallExpression	av_assert0 ( d -> log2_chroma_w <= 3 )		3211568	0					
ANR	3211695	Callee	av_assert0		3211568	0					
ANR	3211696	Identifier	av_assert0		3211568	0					
ANR	3211697	ArgumentList	d -> log2_chroma_w <= 3		3211568	1					
ANR	3211698	Argument	d -> log2_chroma_w <= 3		3211568	0					
ANR	3211699	RelationalExpression	d -> log2_chroma_w <= 3		3211568	0		<=			
ANR	3211700	PtrMemberAccess	d -> log2_chroma_w		3211568	0					
ANR	3211701	Identifier	d		3211568	0					
ANR	3211702	Identifier	log2_chroma_w		3211568	1					
ANR	3211703	PrimaryExpression	3		3211568	1					
ANR	3211704	ExpressionStatement	av_assert0 ( d -> log2_chroma_h <= 3 )	29:8:603:636	3211568	21	True				
ANR	3211705	CallExpression	av_assert0 ( d -> log2_chroma_h <= 3 )		3211568	0					
ANR	3211706	Callee	av_assert0		3211568	0					
ANR	3211707	Identifier	av_assert0		3211568	0					
ANR	3211708	ArgumentList	d -> log2_chroma_h <= 3		3211568	1					
ANR	3211709	Argument	d -> log2_chroma_h <= 3		3211568	0					
ANR	3211710	RelationalExpression	d -> log2_chroma_h <= 3		3211568	0		<=			
ANR	3211711	PtrMemberAccess	d -> log2_chroma_h		3211568	0					
ANR	3211712	Identifier	d		3211568	0					
ANR	3211713	Identifier	log2_chroma_h		3211568	1					
ANR	3211714	PrimaryExpression	3		3211568	1					
ANR	3211715	ExpressionStatement	av_assert0 ( d -> nb_components <= 4 )	31:8:647:680	3211568	22	True				
ANR	3211716	CallExpression	av_assert0 ( d -> nb_components <= 4 )		3211568	0					
ANR	3211717	Callee	av_assert0		3211568	0					
ANR	3211718	Identifier	av_assert0		3211568	0					
ANR	3211719	ArgumentList	d -> nb_components <= 4		3211568	1					
ANR	3211720	Argument	d -> nb_components <= 4		3211568	0					
ANR	3211721	RelationalExpression	d -> nb_components <= 4		3211568	0		<=			
ANR	3211722	PtrMemberAccess	d -> nb_components		3211568	0					
ANR	3211723	Identifier	d		3211568	0					
ANR	3211724	Identifier	nb_components		3211568	1					
ANR	3211725	PrimaryExpression	4		3211568	1					
ANR	3211726	ExpressionStatement	av_assert0 ( d -> name && d -> name [ 0 ] )	33:8:691:724	3211568	23	True				
ANR	3211727	CallExpression	av_assert0 ( d -> name && d -> name [ 0 ] )		3211568	0					
ANR	3211728	Callee	av_assert0		3211568	0					
ANR	3211729	Identifier	av_assert0		3211568	0					
ANR	3211730	ArgumentList	d -> name && d -> name [ 0 ]		3211568	1					
ANR	3211731	Argument	d -> name && d -> name [ 0 ]		3211568	0					
ANR	3211732	AndExpression	d -> name && d -> name [ 0 ]		3211568	0		&&			
ANR	3211733	PtrMemberAccess	d -> name		3211568	0					
ANR	3211734	Identifier	d		3211568	0					
ANR	3211735	Identifier	name		3211568	1					
ANR	3211736	ArrayIndexing	d -> name [ 0 ]		3211568	1					
ANR	3211737	PtrMemberAccess	d -> name		3211568	0					
ANR	3211738	Identifier	d		3211568	0					
ANR	3211739	Identifier	name		3211568	1					
ANR	3211740	PrimaryExpression	0		3211568	1					
ANR	3211741	ExpressionStatement	av_assert0 ( ( d -> nb_components == 4 || d -> nb_components == 2 ) == ! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA ) )	35:8:735:831	3211568	24	True				
ANR	3211742	CallExpression	av_assert0 ( ( d -> nb_components == 4 || d -> nb_components == 2 ) == ! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA ) )		3211568	0					
ANR	3211743	Callee	av_assert0		3211568	0					
ANR	3211744	Identifier	av_assert0		3211568	0					
ANR	3211745	ArgumentList	( d -> nb_components == 4 || d -> nb_components == 2 ) == ! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA )		3211568	1					
ANR	3211746	Argument	( d -> nb_components == 4 || d -> nb_components == 2 ) == ! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA )		3211568	0					
ANR	3211747	EqualityExpression	( d -> nb_components == 4 || d -> nb_components == 2 ) == ! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA )		3211568	0		==			
ANR	3211748	OrExpression	d -> nb_components == 4 || d -> nb_components == 2		3211568	0		||			
ANR	3211749	EqualityExpression	d -> nb_components == 4		3211568	0		==			
ANR	3211750	PtrMemberAccess	d -> nb_components		3211568	0					
ANR	3211751	Identifier	d		3211568	0					
ANR	3211752	Identifier	nb_components		3211568	1					
ANR	3211753	PrimaryExpression	4		3211568	1					
ANR	3211754	EqualityExpression	d -> nb_components == 2		3211568	1		==			
ANR	3211755	PtrMemberAccess	d -> nb_components		3211568	0					
ANR	3211756	Identifier	d		3211568	0					
ANR	3211757	Identifier	nb_components		3211568	1					
ANR	3211758	PrimaryExpression	2		3211568	1					
ANR	3211759	UnaryOperationExpression	! ! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA )		3211568	1					
ANR	3211760	UnaryOperator	!		3211568	0					
ANR	3211761	UnaryOperationExpression	! ( d -> flags & AV_PIX_FMT_FLAG_ALPHA )		3211568	1					
ANR	3211762	UnaryOperator	!		3211568	0					
ANR	3211763	BitAndExpression	d -> flags & AV_PIX_FMT_FLAG_ALPHA		3211568	1		&			
ANR	3211764	PtrMemberAccess	d -> flags		3211568	0					
ANR	3211765	Identifier	d		3211568	0					
ANR	3211766	Identifier	flags		3211568	1					
ANR	3211767	Identifier	AV_PIX_FMT_FLAG_ALPHA		3211568	1					
ANR	3211768	ExpressionStatement	av_assert2 ( av_get_pix_fmt ( d -> name ) == i )	37:8:842:882	3211568	25	True				
ANR	3211769	CallExpression	av_assert2 ( av_get_pix_fmt ( d -> name ) == i )		3211568	0					
ANR	3211770	Callee	av_assert2		3211568	0					
ANR	3211771	Identifier	av_assert2		3211568	0					
ANR	3211772	ArgumentList	av_get_pix_fmt ( d -> name ) == i		3211568	1					
ANR	3211773	Argument	av_get_pix_fmt ( d -> name ) == i		3211568	0					
ANR	3211774	EqualityExpression	av_get_pix_fmt ( d -> name ) == i		3211568	0		==			
ANR	3211775	CallExpression	av_get_pix_fmt ( d -> name )		3211568	0					
ANR	3211776	Callee	av_get_pix_fmt		3211568	0					
ANR	3211777	Identifier	av_get_pix_fmt		3211568	0					
ANR	3211778	ArgumentList	d -> name		3211568	1					
ANR	3211779	Argument	d -> name		3211568	0					
ANR	3211780	PtrMemberAccess	d -> name		3211568	0					
ANR	3211781	Identifier	d		3211568	0					
ANR	3211782	Identifier	name		3211568	1					
ANR	3211783	Identifier	i		3211568	1					
ANR	3211784	ForStatement	for ( j = 0 ; j < FF_ARRAY_ELEMS ( d -> comp ) ; j ++ )		3211568	26					
ANR	3211785	ForInit	j = 0 ;	41:13:900:903	3211568	0	True				
ANR	3211786	AssignmentExpression	j = 0		3211568	0		=			
ANR	3211787	Identifier	j		3211568	0					
ANR	3211788	PrimaryExpression	0		3211568	1					
ANR	3211789	Condition	j < FF_ARRAY_ELEMS ( d -> comp )	41:18:905:929	3211568	1	True				
ANR	3211790	RelationalExpression	j < FF_ARRAY_ELEMS ( d -> comp )		3211568	0		<			
ANR	3211791	Identifier	j		3211568	0					
ANR	3211792	CallExpression	FF_ARRAY_ELEMS ( d -> comp )		3211568	1					
ANR	3211793	Callee	FF_ARRAY_ELEMS		3211568	0					
ANR	3211794	Identifier	FF_ARRAY_ELEMS		3211568	0					
ANR	3211795	ArgumentList	d -> comp		3211568	1					
ANR	3211796	Argument	d -> comp		3211568	0					
ANR	3211797	PtrMemberAccess	d -> comp		3211568	0					
ANR	3211798	Identifier	d		3211568	0					
ANR	3211799	Identifier	comp		3211568	1					
ANR	3211800	PostIncDecOperationExpression	j ++	41:45:932:934	3211568	2	True				
ANR	3211801	Identifier	j		3211568	0					
ANR	3211802	IncDec	++		3211568	1					
ANR	3211803	CompoundStatement		43:12:913:957	3211568	3					
ANR	3211804	IdentifierDeclStatement	const AVComponentDescriptor * c = & d -> comp [ j ] ;	43:12:952:996	3211568	0	True				
ANR	3211805	IdentifierDecl	* c = & d -> comp [ j ]		3211568	0					
ANR	3211806	IdentifierDeclType	const AVComponentDescriptor *		3211568	0					
ANR	3211807	Identifier	c		3211568	1					
ANR	3211808	AssignmentExpression	* c = & d -> comp [ j ]		3211568	2		=			
ANR	3211809	Identifier	c		3211568	0					
ANR	3211810	UnaryOperationExpression	& d -> comp [ j ]		3211568	1					
ANR	3211811	UnaryOperator	&		3211568	0					
ANR	3211812	ArrayIndexing	d -> comp [ j ]		3211568	1					
ANR	3211813	PtrMemberAccess	d -> comp		3211568	0					
ANR	3211814	Identifier	d		3211568	0					
ANR	3211815	Identifier	comp		3211568	1					
ANR	3211816	Identifier	j		3211568	1					
ANR	3211817	IfStatement	if ( j >= d -> nb_components )		3211568	1					
ANR	3211818	Condition	j >= d -> nb_components	45:15:1014:1032	3211568	0	True				
ANR	3211819	RelationalExpression	j >= d -> nb_components		3211568	0		>=			
ANR	3211820	Identifier	j		3211568	0					
ANR	3211821	PtrMemberAccess	d -> nb_components		3211568	1					
ANR	3211822	Identifier	d		3211568	0					
ANR	3211823	Identifier	nb_components		3211568	1					
ANR	3211824	CompoundStatement		45:36:996:996	3211568	1					
ANR	3211825	ExpressionStatement	av_assert0 ( ! c -> plane && ! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1 )	47:16:1054:1147	3211568	0	True				
ANR	3211826	CallExpression	av_assert0 ( ! c -> plane && ! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1 )		3211568	0					
ANR	3211827	Callee	av_assert0		3211568	0					
ANR	3211828	Identifier	av_assert0		3211568	0					
ANR	3211829	ArgumentList	! c -> plane && ! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1		3211568	1					
ANR	3211830	Argument	! c -> plane && ! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1		3211568	0					
ANR	3211831	AndExpression	! c -> plane && ! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1		3211568	0		&&			
ANR	3211832	UnaryOperationExpression	! c -> plane		3211568	0					
ANR	3211833	UnaryOperator	!		3211568	0					
ANR	3211834	PtrMemberAccess	c -> plane		3211568	1					
ANR	3211835	Identifier	c		3211568	0					
ANR	3211836	Identifier	plane		3211568	1					
ANR	3211837	AndExpression	! c -> step_minus1 && ! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1		3211568	1		&&			
ANR	3211838	UnaryOperationExpression	! c -> step_minus1		3211568	0					
ANR	3211839	UnaryOperator	!		3211568	0					
ANR	3211840	PtrMemberAccess	c -> step_minus1		3211568	1					
ANR	3211841	Identifier	c		3211568	0					
ANR	3211842	Identifier	step_minus1		3211568	1					
ANR	3211843	AndExpression	! c -> offset_plus1 && ! c -> shift && ! c -> depth_minus1		3211568	1		&&			
ANR	3211844	UnaryOperationExpression	! c -> offset_plus1		3211568	0					
ANR	3211845	UnaryOperator	!		3211568	0					
ANR	3211846	PtrMemberAccess	c -> offset_plus1		3211568	1					
ANR	3211847	Identifier	c		3211568	0					
ANR	3211848	Identifier	offset_plus1		3211568	1					
ANR	3211849	AndExpression	! c -> shift && ! c -> depth_minus1		3211568	1		&&			
ANR	3211850	UnaryOperationExpression	! c -> shift		3211568	0					
ANR	3211851	UnaryOperator	!		3211568	0					
ANR	3211852	PtrMemberAccess	c -> shift		3211568	1					
ANR	3211853	Identifier	c		3211568	0					
ANR	3211854	Identifier	shift		3211568	1					
ANR	3211855	UnaryOperationExpression	! c -> depth_minus1		3211568	1					
ANR	3211856	UnaryOperator	!		3211568	0					
ANR	3211857	PtrMemberAccess	c -> depth_minus1		3211568	1					
ANR	3211858	Identifier	c		3211568	0					
ANR	3211859	Identifier	depth_minus1		3211568	1					
ANR	3211860	ContinueStatement	continue ;	49:16:1166:1174	3211568	1	True				
ANR	3211861	IfStatement	if ( d -> flags & AV_PIX_FMT_FLAG_BITSTREAM )		3211568	2					
ANR	3211862	Condition	d -> flags & AV_PIX_FMT_FLAG_BITSTREAM	53:16:1208:1243	3211568	0	True				
ANR	3211863	BitAndExpression	d -> flags & AV_PIX_FMT_FLAG_BITSTREAM		3211568	0		&			
ANR	3211864	PtrMemberAccess	d -> flags		3211568	0					
ANR	3211865	Identifier	d		3211568	0					
ANR	3211866	Identifier	flags		3211568	1					
ANR	3211867	Identifier	AV_PIX_FMT_FLAG_BITSTREAM		3211568	1					
ANR	3211868	CompoundStatement		53:54:1207:1207	3211568	1					
ANR	3211869	ExpressionStatement	av_assert0 ( c -> step_minus1 >= c -> depth_minus1 )	55:16:1265:1310	3211568	0	True				
ANR	3211870	CallExpression	av_assert0 ( c -> step_minus1 >= c -> depth_minus1 )		3211568	0					
ANR	3211871	Callee	av_assert0		3211568	0					
ANR	3211872	Identifier	av_assert0		3211568	0					
ANR	3211873	ArgumentList	c -> step_minus1 >= c -> depth_minus1		3211568	1					
ANR	3211874	Argument	c -> step_minus1 >= c -> depth_minus1		3211568	0					
ANR	3211875	RelationalExpression	c -> step_minus1 >= c -> depth_minus1		3211568	0		>=			
ANR	3211876	PtrMemberAccess	c -> step_minus1		3211568	0					
ANR	3211877	Identifier	c		3211568	0					
ANR	3211878	Identifier	step_minus1		3211568	1					
ANR	3211879	PtrMemberAccess	c -> depth_minus1		3211568	1					
ANR	3211880	Identifier	c		3211568	0					
ANR	3211881	Identifier	depth_minus1		3211568	1					
ANR	3211882	ElseStatement	else		3211568	0					
ANR	3211883	CompoundStatement		57:19:1293:1293	3211568	0					
ANR	3211884	ExpressionStatement	av_assert0 ( 8 * ( c -> step_minus1 + 1 ) >= c -> depth_minus1 + 1 )	59:16:1351:1404	3211568	0	True				
ANR	3211885	CallExpression	av_assert0 ( 8 * ( c -> step_minus1 + 1 ) >= c -> depth_minus1 + 1 )		3211568	0					
ANR	3211886	Callee	av_assert0		3211568	0					
ANR	3211887	Identifier	av_assert0		3211568	0					
ANR	3211888	ArgumentList	8 * ( c -> step_minus1 + 1 ) >= c -> depth_minus1 + 1		3211568	1					
ANR	3211889	Argument	8 * ( c -> step_minus1 + 1 ) >= c -> depth_minus1 + 1		3211568	0					
ANR	3211890	RelationalExpression	8 * ( c -> step_minus1 + 1 ) >= c -> depth_minus1 + 1		3211568	0		>=			
ANR	3211891	MultiplicativeExpression	8 * ( c -> step_minus1 + 1 )		3211568	0		*			
ANR	3211892	PrimaryExpression	8		3211568	0					
ANR	3211893	AdditiveExpression	c -> step_minus1 + 1		3211568	1		+			
ANR	3211894	PtrMemberAccess	c -> step_minus1		3211568	0					
ANR	3211895	Identifier	c		3211568	0					
ANR	3211896	Identifier	step_minus1		3211568	1					
ANR	3211897	PrimaryExpression	1		3211568	1					
ANR	3211898	AdditiveExpression	c -> depth_minus1 + 1		3211568	1		+			
ANR	3211899	PtrMemberAccess	c -> depth_minus1		3211568	0					
ANR	3211900	Identifier	c		3211568	0					
ANR	3211901	Identifier	depth_minus1		3211568	1					
ANR	3211902	PrimaryExpression	1		3211568	1					
ANR	3211903	ExpressionStatement	"av_read_image_line ( tmp , ( void * ) data , linesize , d , 0 , 0 , j , 2 , 0 )"	63:12:1434:1498	3211568	3	True				
ANR	3211904	CallExpression	"av_read_image_line ( tmp , ( void * ) data , linesize , d , 0 , 0 , j , 2 , 0 )"		3211568	0					
ANR	3211905	Callee	av_read_image_line		3211568	0					
ANR	3211906	Identifier	av_read_image_line		3211568	0					
ANR	3211907	ArgumentList	tmp		3211568	1					
ANR	3211908	Argument	tmp		3211568	0					
ANR	3211909	Identifier	tmp		3211568	0					
ANR	3211910	Argument	( void * ) data		3211568	1					
ANR	3211911	CastExpression	( void * ) data		3211568	0					
ANR	3211912	CastTarget	void *		3211568	0					
ANR	3211913	Identifier	data		3211568	1					
ANR	3211914	Argument	linesize		3211568	2					
ANR	3211915	Identifier	linesize		3211568	0					
ANR	3211916	Argument	d		3211568	3					
ANR	3211917	Identifier	d		3211568	0					
ANR	3211918	Argument	0		3211568	4					
ANR	3211919	PrimaryExpression	0		3211568	0					
ANR	3211920	Argument	0		3211568	5					
ANR	3211921	PrimaryExpression	0		3211568	0					
ANR	3211922	Argument	j		3211568	6					
ANR	3211923	Identifier	j		3211568	0					
ANR	3211924	Argument	2		3211568	7					
ANR	3211925	PrimaryExpression	2		3211568	0					
ANR	3211926	Argument	0		3211568	8					
ANR	3211927	PrimaryExpression	0		3211568	0					
ANR	3211928	IfStatement	"if ( ! strncmp ( d -> name , ""bayer_"" , 6 ) )"		3211568	4					
ANR	3211929	Condition	"! strncmp ( d -> name , ""bayer_"" , 6 )"	65:16:1517:1546	3211568	0	True				
ANR	3211930	UnaryOperationExpression	"! strncmp ( d -> name , ""bayer_"" , 6 )"		3211568	0					
ANR	3211931	UnaryOperator	!		3211568	0					
ANR	3211932	CallExpression	"strncmp ( d -> name , ""bayer_"" , 6 )"		3211568	1					
ANR	3211933	Callee	strncmp		3211568	0					
ANR	3211934	Identifier	strncmp		3211568	0					
ANR	3211935	ArgumentList	d -> name		3211568	1					
ANR	3211936	Argument	d -> name		3211568	0					
ANR	3211937	PtrMemberAccess	d -> name		3211568	0					
ANR	3211938	Identifier	d		3211568	0					
ANR	3211939	Identifier	name		3211568	1					
ANR	3211940	Argument	"""bayer_"""		3211568	1					
ANR	3211941	PrimaryExpression	"""bayer_"""		3211568	0					
ANR	3211942	Argument	6		3211568	2					
ANR	3211943	PrimaryExpression	6		3211568	0					
ANR	3211944	ContinueStatement	continue ;	67:16:1566:1574	3211568	1	True				
ANR	3211945	ExpressionStatement	av_assert0 ( tmp [ 0 ] == 0 && tmp [ 1 ] == 0 )	69:12:1589:1627	3211568	5	True				
ANR	3211946	CallExpression	av_assert0 ( tmp [ 0 ] == 0 && tmp [ 1 ] == 0 )		3211568	0					
ANR	3211947	Callee	av_assert0		3211568	0					
ANR	3211948	Identifier	av_assert0		3211568	0					
ANR	3211949	ArgumentList	tmp [ 0 ] == 0 && tmp [ 1 ] == 0		3211568	1					
ANR	3211950	Argument	tmp [ 0 ] == 0 && tmp [ 1 ] == 0		3211568	0					
ANR	3211951	AndExpression	tmp [ 0 ] == 0 && tmp [ 1 ] == 0		3211568	0		&&			
ANR	3211952	EqualityExpression	tmp [ 0 ] == 0		3211568	0		==			
ANR	3211953	ArrayIndexing	tmp [ 0 ]		3211568	0					
ANR	3211954	Identifier	tmp		3211568	0					
ANR	3211955	PrimaryExpression	0		3211568	1					
ANR	3211956	PrimaryExpression	0		3211568	1					
ANR	3211957	EqualityExpression	tmp [ 1 ] == 0		3211568	1		==			
ANR	3211958	ArrayIndexing	tmp [ 1 ]		3211568	0					
ANR	3211959	Identifier	tmp		3211568	0					
ANR	3211960	PrimaryExpression	1		3211568	1					
ANR	3211961	PrimaryExpression	0		3211568	1					
ANR	3211962	ExpressionStatement	tmp [ 0 ] = tmp [ 1 ] = ( 1 << ( c -> depth_minus1 + 1 ) ) - 1	71:12:1642:1690	3211568	6	True				
ANR	3211963	AssignmentExpression	tmp [ 0 ] = tmp [ 1 ] = ( 1 << ( c -> depth_minus1 + 1 ) ) - 1		3211568	0		=			
ANR	3211964	ArrayIndexing	tmp [ 0 ]		3211568	0					
ANR	3211965	Identifier	tmp		3211568	0					
ANR	3211966	PrimaryExpression	0		3211568	1					
ANR	3211967	AssignmentExpression	tmp [ 1 ] = ( 1 << ( c -> depth_minus1 + 1 ) ) - 1		3211568	1		=			
ANR	3211968	ArrayIndexing	tmp [ 1 ]		3211568	0					
ANR	3211969	Identifier	tmp		3211568	0					
ANR	3211970	PrimaryExpression	1		3211568	1					
ANR	3211971	AdditiveExpression	( 1 << ( c -> depth_minus1 + 1 ) ) - 1		3211568	1		-			
ANR	3211972	ShiftExpression	1 << ( c -> depth_minus1 + 1 )		3211568	0		<<			
ANR	3211973	PrimaryExpression	1		3211568	0					
ANR	3211974	AdditiveExpression	c -> depth_minus1 + 1		3211568	1		+			
ANR	3211975	PtrMemberAccess	c -> depth_minus1		3211568	0					
ANR	3211976	Identifier	c		3211568	0					
ANR	3211977	Identifier	depth_minus1		3211568	1					
ANR	3211978	PrimaryExpression	1		3211568	1					
ANR	3211979	PrimaryExpression	1		3211568	1					
ANR	3211980	ExpressionStatement	"av_write_image_line ( tmp , data , linesize , d , 0 , 0 , j , 2 )"	73:12:1705:1760	3211568	7	True				
ANR	3211981	CallExpression	"av_write_image_line ( tmp , data , linesize , d , 0 , 0 , j , 2 )"		3211568	0					
ANR	3211982	Callee	av_write_image_line		3211568	0					
ANR	3211983	Identifier	av_write_image_line		3211568	0					
ANR	3211984	ArgumentList	tmp		3211568	1					
ANR	3211985	Argument	tmp		3211568	0					
ANR	3211986	Identifier	tmp		3211568	0					
ANR	3211987	Argument	data		3211568	1					
ANR	3211988	Identifier	data		3211568	0					
ANR	3211989	Argument	linesize		3211568	2					
ANR	3211990	Identifier	linesize		3211568	0					
ANR	3211991	Argument	d		3211568	3					
ANR	3211992	Identifier	d		3211568	0					
ANR	3211993	Argument	0		3211568	4					
ANR	3211994	PrimaryExpression	0		3211568	0					
ANR	3211995	Argument	0		3211568	5					
ANR	3211996	PrimaryExpression	0		3211568	0					
ANR	3211997	Argument	j		3211568	6					
ANR	3211998	Identifier	j		3211568	0					
ANR	3211999	Argument	2		3211568	7					
ANR	3212000	PrimaryExpression	2		3211568	0					
ANR	3212001	ReturnType	void		3211568	1					
ANR	3212002	Identifier	ff_check_pixfmt_descriptors		3211568	2					
ANR	3212003	ParameterList			3211568	3					
ANR	3212004	CFGEntryNode	ENTRY		3211568		True				
ANR	3212005	CFGExitNode	EXIT		3211568		True				
ANR	3212006	Symbol	* tmp		3211568						
ANR	3212007	Symbol	d -> name		3211568						
ANR	3212008	Symbol	data		3211568						
ANR	3212009	Symbol	c -> plane		3211568						
ANR	3212010	Symbol	strncmp		3211568						
ANR	3212011	Symbol	linesize		3211568						
ANR	3212012	Symbol	d -> flags		3211568						
ANR	3212013	Symbol	tmp		3211568						
ANR	3212014	Symbol	d -> log2_chroma_w		3211568						
ANR	3212015	Symbol	c -> shift		3211568						
ANR	3212016	Symbol	av_get_pix_fmt		3211568						
ANR	3212017	Symbol	c -> offset_plus1		3211568						
ANR	3212018	Symbol	c		3211568						
ANR	3212019	Symbol	d		3211568						
ANR	3212020	Symbol	d -> log2_chroma_h		3211568						
ANR	3212021	Symbol	* fill		3211568						
ANR	3212022	Symbol	* * d		3211568						
ANR	3212023	Symbol	* d -> name		3211568						
ANR	3212024	Symbol	i		3211568						
ANR	3212025	Symbol	j		3211568						
ANR	3212026	Symbol	AV_PIX_FMT_FLAG_BITSTREAM		3211568						
ANR	3212027	Symbol	fill		3211568						
ANR	3212028	Symbol	* c		3211568						
ANR	3212029	Symbol	* d		3211568						
ANR	3212030	Symbol	av_pix_fmt_descriptors		3211568						
ANR	3212031	Symbol	c -> depth_minus1		3211568						
ANR	3212032	Symbol	FF_ARRAY_ELEMS		3211568						
ANR	3212033	Symbol	d -> comp		3211568						
ANR	3212034	Symbol	d -> nb_components		3211568						
ANR	3212035	Symbol	c -> step_minus1		3211568						
ANR	3212036	Symbol	AV_PIX_FMT_FLAG_ALPHA		3211568						
