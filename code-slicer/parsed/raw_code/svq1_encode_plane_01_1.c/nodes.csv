command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8055709	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_encode_plane_01_1.c								
ANR	8055710	Function	svq1_encode_plane	1:0:0:10891							
ANR	8055711	FunctionDef	"svq1_encode_plane (SVQ1Context * s , int plane , unsigned char * src_plane , unsigned char * ref_plane , unsigned char * decoded_plane , int width , int height , int src_stride , int stride)"		8055710	0					
ANR	8055712	CompoundStatement		11:0:310:10891	8055710	0					
ANR	8055713	IdentifierDeclStatement	const AVFrame * f = s -> avctx -> coded_frame ;	13:4:317:357	8055710	0	True				
ANR	8055714	IdentifierDecl	* f = s -> avctx -> coded_frame		8055710	0					
ANR	8055715	IdentifierDeclType	const AVFrame *		8055710	0					
ANR	8055716	Identifier	f		8055710	1					
ANR	8055717	AssignmentExpression	* f = s -> avctx -> coded_frame		8055710	2		=			
ANR	8055718	Identifier	f		8055710	0					
ANR	8055719	PtrMemberAccess	s -> avctx -> coded_frame		8055710	1					
ANR	8055720	PtrMemberAccess	s -> avctx		8055710	0					
ANR	8055721	Identifier	s		8055710	0					
ANR	8055722	Identifier	avctx		8055710	1					
ANR	8055723	Identifier	coded_frame		8055710	1					
ANR	8055724	IdentifierDeclStatement	"int x , y ;"	15:4:364:372	8055710	1	True				
ANR	8055725	IdentifierDecl	x		8055710	0					
ANR	8055726	IdentifierDeclType	int		8055710	0					
ANR	8055727	Identifier	x		8055710	1					
ANR	8055728	IdentifierDecl	y		8055710	1					
ANR	8055729	IdentifierDeclType	int		8055710	0					
ANR	8055730	Identifier	y		8055710	1					
ANR	8055731	IdentifierDeclStatement	int i ;	17:4:379:384	8055710	2	True				
ANR	8055732	IdentifierDecl	i		8055710	0					
ANR	8055733	IdentifierDeclType	int		8055710	0					
ANR	8055734	Identifier	i		8055710	1					
ANR	8055735	IdentifierDeclStatement	"int block_width , block_height ;"	19:4:391:420	8055710	3	True				
ANR	8055736	IdentifierDecl	block_width		8055710	0					
ANR	8055737	IdentifierDeclType	int		8055710	0					
ANR	8055738	Identifier	block_width		8055710	1					
ANR	8055739	IdentifierDecl	block_height		8055710	1					
ANR	8055740	IdentifierDeclType	int		8055710	0					
ANR	8055741	Identifier	block_height		8055710	1					
ANR	8055742	IdentifierDeclStatement	int level ;	21:4:427:436	8055710	4	True				
ANR	8055743	IdentifierDecl	level		8055710	0					
ANR	8055744	IdentifierDeclType	int		8055710	0					
ANR	8055745	Identifier	level		8055710	1					
ANR	8055746	IdentifierDeclStatement	int threshold [ 6 ] ;	23:4:443:459	8055710	5	True				
ANR	8055747	IdentifierDecl	threshold [ 6 ]		8055710	0					
ANR	8055748	IdentifierDeclType	int [ 6 ]		8055710	0					
ANR	8055749	Identifier	threshold		8055710	1					
ANR	8055750	PrimaryExpression	6		8055710	2					
ANR	8055751	IdentifierDeclStatement	uint8_t * src = s -> scratchbuf + stride * 16 ;	25:4:466:512	8055710	6	True				
ANR	8055752	IdentifierDecl	* src = s -> scratchbuf + stride * 16		8055710	0					
ANR	8055753	IdentifierDeclType	uint8_t *		8055710	0					
ANR	8055754	Identifier	src		8055710	1					
ANR	8055755	AssignmentExpression	* src = s -> scratchbuf + stride * 16		8055710	2		=			
ANR	8055756	Identifier	src		8055710	0					
ANR	8055757	AdditiveExpression	s -> scratchbuf + stride * 16		8055710	1		+			
ANR	8055758	PtrMemberAccess	s -> scratchbuf		8055710	0					
ANR	8055759	Identifier	s		8055710	0					
ANR	8055760	Identifier	scratchbuf		8055710	1					
ANR	8055761	MultiplicativeExpression	stride * 16		8055710	1		*			
ANR	8055762	Identifier	stride		8055710	0					
ANR	8055763	PrimaryExpression	16		8055710	1					
ANR	8055764	IdentifierDeclStatement	const int lambda = ( f -> quality * f -> quality ) >> ( 2 * FF_LAMBDA_SHIFT ) ;	27:4:519:612	8055710	7	True				
ANR	8055765	IdentifierDecl	lambda = ( f -> quality * f -> quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8055710	0					
ANR	8055766	IdentifierDeclType	const int		8055710	0					
ANR	8055767	Identifier	lambda		8055710	1					
ANR	8055768	AssignmentExpression	lambda = ( f -> quality * f -> quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8055710	2		=			
ANR	8055769	Identifier	lambda		8055710	0					
ANR	8055770	ShiftExpression	( f -> quality * f -> quality ) >> ( 2 * FF_LAMBDA_SHIFT )		8055710	1		>>			
ANR	8055771	MultiplicativeExpression	f -> quality * f -> quality		8055710	0		*			
ANR	8055772	PtrMemberAccess	f -> quality		8055710	0					
ANR	8055773	Identifier	f		8055710	0					
ANR	8055774	Identifier	quality		8055710	1					
ANR	8055775	PtrMemberAccess	f -> quality		8055710	1					
ANR	8055776	Identifier	f		8055710	0					
ANR	8055777	Identifier	quality		8055710	1					
ANR	8055778	MultiplicativeExpression	2 * FF_LAMBDA_SHIFT		8055710	1		*			
ANR	8055779	PrimaryExpression	2		8055710	0					
ANR	8055780	Identifier	FF_LAMBDA_SHIFT		8055710	1					
ANR	8055781	ExpressionStatement	threshold [ 5 ] = QUALITY_THRESHOLD	35:4:686:718	8055710	8	True				
ANR	8055782	AssignmentExpression	threshold [ 5 ] = QUALITY_THRESHOLD		8055710	0		=			
ANR	8055783	ArrayIndexing	threshold [ 5 ]		8055710	0					
ANR	8055784	Identifier	threshold		8055710	0					
ANR	8055785	PrimaryExpression	5		8055710	1					
ANR	8055786	Identifier	QUALITY_THRESHOLD		8055710	1					
ANR	8055787	ForStatement	for ( level = 4 ; level >= 0 ; level -- )		8055710	9					
ANR	8055788	ForInit	level = 4 ;	37:9:730:739	8055710	0	True				
ANR	8055789	AssignmentExpression	level = 4		8055710	0		=			
ANR	8055790	Identifier	level		8055710	0					
ANR	8055791	PrimaryExpression	4		8055710	1					
ANR	8055792	Condition	level >= 0	37:20:741:750	8055710	1	True				
ANR	8055793	RelationalExpression	level >= 0		8055710	0		>=			
ANR	8055794	Identifier	level		8055710	0					
ANR	8055795	PrimaryExpression	0		8055710	1					
ANR	8055796	PostIncDecOperationExpression	level --	37:32:753:759	8055710	2	True				
ANR	8055797	Identifier	level		8055710	0					
ANR	8055798	IncDec	--		8055710	1					
ANR	8055799	ExpressionStatement	threshold [ level ] = threshold [ level + 1 ] * THRESHOLD_MULTIPLIER	39:8:771:833	8055710	3	True				
ANR	8055800	AssignmentExpression	threshold [ level ] = threshold [ level + 1 ] * THRESHOLD_MULTIPLIER		8055710	0		=			
ANR	8055801	ArrayIndexing	threshold [ level ]		8055710	0					
ANR	8055802	Identifier	threshold		8055710	0					
ANR	8055803	Identifier	level		8055710	1					
ANR	8055804	MultiplicativeExpression	threshold [ level + 1 ] * THRESHOLD_MULTIPLIER		8055710	1		*			
ANR	8055805	ArrayIndexing	threshold [ level + 1 ]		8055710	0					
ANR	8055806	Identifier	threshold		8055710	0					
ANR	8055807	AdditiveExpression	level + 1		8055710	1		+			
ANR	8055808	Identifier	level		8055710	0					
ANR	8055809	PrimaryExpression	1		8055710	1					
ANR	8055810	Identifier	THRESHOLD_MULTIPLIER		8055710	1					
ANR	8055811	ExpressionStatement	block_width = ( width + 15 ) / 16	43:4:842:875	8055710	10	True				
ANR	8055812	AssignmentExpression	block_width = ( width + 15 ) / 16		8055710	0		=			
ANR	8055813	Identifier	block_width		8055710	0					
ANR	8055814	MultiplicativeExpression	( width + 15 ) / 16		8055710	1		/			
ANR	8055815	AdditiveExpression	width + 15		8055710	0		+			
ANR	8055816	Identifier	width		8055710	0					
ANR	8055817	PrimaryExpression	15		8055710	1					
ANR	8055818	PrimaryExpression	16		8055710	1					
ANR	8055819	ExpressionStatement	block_height = ( height + 15 ) / 16	45:4:882:915	8055710	11	True				
ANR	8055820	AssignmentExpression	block_height = ( height + 15 ) / 16		8055710	0		=			
ANR	8055821	Identifier	block_height		8055710	0					
ANR	8055822	MultiplicativeExpression	( height + 15 ) / 16		8055710	1		/			
ANR	8055823	AdditiveExpression	height + 15		8055710	0		+			
ANR	8055824	Identifier	height		8055710	0					
ANR	8055825	PrimaryExpression	15		8055710	1					
ANR	8055826	PrimaryExpression	16		8055710	1					
ANR	8055827	IfStatement	if ( f -> pict_type == AV_PICTURE_TYPE_P )		8055710	12					
ANR	8055828	Condition	f -> pict_type == AV_PICTURE_TYPE_P	49:8:928:960	8055710	0	True				
ANR	8055829	EqualityExpression	f -> pict_type == AV_PICTURE_TYPE_P		8055710	0		==			
ANR	8055830	PtrMemberAccess	f -> pict_type		8055710	0					
ANR	8055831	Identifier	f		8055710	0					
ANR	8055832	Identifier	pict_type		8055710	1					
ANR	8055833	Identifier	AV_PICTURE_TYPE_P		8055710	1					
ANR	8055834	CompoundStatement		39:43:652:652	8055710	1					
ANR	8055835	ExpressionStatement	s -> m . avctx = s -> avctx	51:8:974:1019	8055710	0	True				
ANR	8055836	AssignmentExpression	s -> m . avctx = s -> avctx		8055710	0		=			
ANR	8055837	MemberAccess	s -> m . avctx		8055710	0					
ANR	8055838	PtrMemberAccess	s -> m		8055710	0					
ANR	8055839	Identifier	s		8055710	0					
ANR	8055840	Identifier	m		8055710	1					
ANR	8055841	Identifier	avctx		8055710	1					
ANR	8055842	PtrMemberAccess	s -> avctx		8055710	1					
ANR	8055843	Identifier	s		8055710	0					
ANR	8055844	Identifier	avctx		8055710	1					
ANR	8055845	ExpressionStatement	s -> m . current_picture_ptr = & s -> m . current_picture	53:8:1030:1088	8055710	1	True				
ANR	8055846	AssignmentExpression	s -> m . current_picture_ptr = & s -> m . current_picture		8055710	0		=			
ANR	8055847	MemberAccess	s -> m . current_picture_ptr		8055710	0					
ANR	8055848	PtrMemberAccess	s -> m		8055710	0					
ANR	8055849	Identifier	s		8055710	0					
ANR	8055850	Identifier	m		8055710	1					
ANR	8055851	Identifier	current_picture_ptr		8055710	1					
ANR	8055852	UnaryOperationExpression	& s -> m . current_picture		8055710	1					
ANR	8055853	UnaryOperator	&		8055710	0					
ANR	8055854	MemberAccess	s -> m . current_picture		8055710	1					
ANR	8055855	PtrMemberAccess	s -> m		8055710	0					
ANR	8055856	Identifier	s		8055710	0					
ANR	8055857	Identifier	m		8055710	1					
ANR	8055858	Identifier	current_picture		8055710	1					
ANR	8055859	ExpressionStatement	s -> m . last_picture_ptr = & s -> m . last_picture	55:8:1099:1154	8055710	2	True				
ANR	8055860	AssignmentExpression	s -> m . last_picture_ptr = & s -> m . last_picture		8055710	0		=			
ANR	8055861	MemberAccess	s -> m . last_picture_ptr		8055710	0					
ANR	8055862	PtrMemberAccess	s -> m		8055710	0					
ANR	8055863	Identifier	s		8055710	0					
ANR	8055864	Identifier	m		8055710	1					
ANR	8055865	Identifier	last_picture_ptr		8055710	1					
ANR	8055866	UnaryOperationExpression	& s -> m . last_picture		8055710	1					
ANR	8055867	UnaryOperator	&		8055710	0					
ANR	8055868	MemberAccess	s -> m . last_picture		8055710	1					
ANR	8055869	PtrMemberAccess	s -> m		8055710	0					
ANR	8055870	Identifier	s		8055710	0					
ANR	8055871	Identifier	m		8055710	1					
ANR	8055872	Identifier	last_picture		8055710	1					
ANR	8055873	ExpressionStatement	s -> m . last_picture . f . data [ 0 ] = ref_plane	57:8:1165:1211	8055710	3	True				
ANR	8055874	AssignmentExpression	s -> m . last_picture . f . data [ 0 ] = ref_plane		8055710	0		=			
ANR	8055875	ArrayIndexing	s -> m . last_picture . f . data [ 0 ]		8055710	0					
ANR	8055876	MemberAccess	s -> m . last_picture . f . data		8055710	0					
ANR	8055877	MemberAccess	s -> m . last_picture . f		8055710	0					
ANR	8055878	MemberAccess	s -> m . last_picture		8055710	0					
ANR	8055879	PtrMemberAccess	s -> m		8055710	0					
ANR	8055880	Identifier	s		8055710	0					
ANR	8055881	Identifier	m		8055710	1					
ANR	8055882	Identifier	last_picture		8055710	1					
ANR	8055883	Identifier	f		8055710	1					
ANR	8055884	Identifier	data		8055710	1					
ANR	8055885	PrimaryExpression	0		8055710	1					
ANR	8055886	Identifier	ref_plane		8055710	1					
ANR	8055887	ExpressionStatement	s -> m . linesize = s -> m . last_picture . f . linesize [ 0 ] = s -> m . new_picture . f . linesize [ 0 ] = s -> m . current_picture . f . linesize [ 0 ] = stride	59:8:1222:1403	8055710	4	True				
ANR	8055888	AssignmentExpression	s -> m . linesize = s -> m . last_picture . f . linesize [ 0 ] = s -> m . new_picture . f . linesize [ 0 ] = s -> m . current_picture . f . linesize [ 0 ] = stride		8055710	0		=			
ANR	8055889	MemberAccess	s -> m . linesize		8055710	0					
ANR	8055890	PtrMemberAccess	s -> m		8055710	0					
ANR	8055891	Identifier	s		8055710	0					
ANR	8055892	Identifier	m		8055710	1					
ANR	8055893	Identifier	linesize		8055710	1					
ANR	8055894	AssignmentExpression	s -> m . last_picture . f . linesize [ 0 ] = s -> m . new_picture . f . linesize [ 0 ] = s -> m . current_picture . f . linesize [ 0 ] = stride		8055710	1		=			
ANR	8055895	ArrayIndexing	s -> m . last_picture . f . linesize [ 0 ]		8055710	0					
ANR	8055896	MemberAccess	s -> m . last_picture . f . linesize		8055710	0					
ANR	8055897	MemberAccess	s -> m . last_picture . f		8055710	0					
ANR	8055898	MemberAccess	s -> m . last_picture		8055710	0					
ANR	8055899	PtrMemberAccess	s -> m		8055710	0					
ANR	8055900	Identifier	s		8055710	0					
ANR	8055901	Identifier	m		8055710	1					
ANR	8055902	Identifier	last_picture		8055710	1					
ANR	8055903	Identifier	f		8055710	1					
ANR	8055904	Identifier	linesize		8055710	1					
ANR	8055905	PrimaryExpression	0		8055710	1					
ANR	8055906	AssignmentExpression	s -> m . new_picture . f . linesize [ 0 ] = s -> m . current_picture . f . linesize [ 0 ] = stride		8055710	1		=			
ANR	8055907	ArrayIndexing	s -> m . new_picture . f . linesize [ 0 ]		8055710	0					
ANR	8055908	MemberAccess	s -> m . new_picture . f . linesize		8055710	0					
ANR	8055909	MemberAccess	s -> m . new_picture . f		8055710	0					
ANR	8055910	MemberAccess	s -> m . new_picture		8055710	0					
ANR	8055911	PtrMemberAccess	s -> m		8055710	0					
ANR	8055912	Identifier	s		8055710	0					
ANR	8055913	Identifier	m		8055710	1					
ANR	8055914	Identifier	new_picture		8055710	1					
ANR	8055915	Identifier	f		8055710	1					
ANR	8055916	Identifier	linesize		8055710	1					
ANR	8055917	PrimaryExpression	0		8055710	1					
ANR	8055918	AssignmentExpression	s -> m . current_picture . f . linesize [ 0 ] = stride		8055710	1		=			
ANR	8055919	ArrayIndexing	s -> m . current_picture . f . linesize [ 0 ]		8055710	0					
ANR	8055920	MemberAccess	s -> m . current_picture . f . linesize		8055710	0					
ANR	8055921	MemberAccess	s -> m . current_picture . f		8055710	0					
ANR	8055922	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8055923	PtrMemberAccess	s -> m		8055710	0					
ANR	8055924	Identifier	s		8055710	0					
ANR	8055925	Identifier	m		8055710	1					
ANR	8055926	Identifier	current_picture		8055710	1					
ANR	8055927	Identifier	f		8055710	1					
ANR	8055928	Identifier	linesize		8055710	1					
ANR	8055929	PrimaryExpression	0		8055710	1					
ANR	8055930	Identifier	stride		8055710	1					
ANR	8055931	ExpressionStatement	s -> m . width = width	67:8:1414:1456	8055710	5	True				
ANR	8055932	AssignmentExpression	s -> m . width = width		8055710	0		=			
ANR	8055933	MemberAccess	s -> m . width		8055710	0					
ANR	8055934	PtrMemberAccess	s -> m		8055710	0					
ANR	8055935	Identifier	s		8055710	0					
ANR	8055936	Identifier	m		8055710	1					
ANR	8055937	Identifier	width		8055710	1					
ANR	8055938	Identifier	width		8055710	1					
ANR	8055939	ExpressionStatement	s -> m . height = height	69:8:1467:1510	8055710	6	True				
ANR	8055940	AssignmentExpression	s -> m . height = height		8055710	0		=			
ANR	8055941	MemberAccess	s -> m . height		8055710	0					
ANR	8055942	PtrMemberAccess	s -> m		8055710	0					
ANR	8055943	Identifier	s		8055710	0					
ANR	8055944	Identifier	m		8055710	1					
ANR	8055945	Identifier	height		8055710	1					
ANR	8055946	Identifier	height		8055710	1					
ANR	8055947	ExpressionStatement	s -> m . mb_width = block_width	71:8:1521:1569	8055710	7	True				
ANR	8055948	AssignmentExpression	s -> m . mb_width = block_width		8055710	0		=			
ANR	8055949	MemberAccess	s -> m . mb_width		8055710	0					
ANR	8055950	PtrMemberAccess	s -> m		8055710	0					
ANR	8055951	Identifier	s		8055710	0					
ANR	8055952	Identifier	m		8055710	1					
ANR	8055953	Identifier	mb_width		8055710	1					
ANR	8055954	Identifier	block_width		8055710	1					
ANR	8055955	ExpressionStatement	s -> m . mb_height = block_height	73:8:1580:1629	8055710	8	True				
ANR	8055956	AssignmentExpression	s -> m . mb_height = block_height		8055710	0		=			
ANR	8055957	MemberAccess	s -> m . mb_height		8055710	0					
ANR	8055958	PtrMemberAccess	s -> m		8055710	0					
ANR	8055959	Identifier	s		8055710	0					
ANR	8055960	Identifier	m		8055710	1					
ANR	8055961	Identifier	mb_height		8055710	1					
ANR	8055962	Identifier	block_height		8055710	1					
ANR	8055963	ExpressionStatement	s -> m . mb_stride = s -> m . mb_width + 1	75:8:1640:1694	8055710	9	True				
ANR	8055964	AssignmentExpression	s -> m . mb_stride = s -> m . mb_width + 1		8055710	0		=			
ANR	8055965	MemberAccess	s -> m . mb_stride		8055710	0					
ANR	8055966	PtrMemberAccess	s -> m		8055710	0					
ANR	8055967	Identifier	s		8055710	0					
ANR	8055968	Identifier	m		8055710	1					
ANR	8055969	Identifier	mb_stride		8055710	1					
ANR	8055970	AdditiveExpression	s -> m . mb_width + 1		8055710	1		+			
ANR	8055971	MemberAccess	s -> m . mb_width		8055710	0					
ANR	8055972	PtrMemberAccess	s -> m		8055710	0					
ANR	8055973	Identifier	s		8055710	0					
ANR	8055974	Identifier	m		8055710	1					
ANR	8055975	Identifier	mb_width		8055710	1					
ANR	8055976	PrimaryExpression	1		8055710	1					
ANR	8055977	ExpressionStatement	s -> m . b8_stride = 2 * s -> m . mb_width + 1	77:8:1705:1763	8055710	10	True				
ANR	8055978	AssignmentExpression	s -> m . b8_stride = 2 * s -> m . mb_width + 1		8055710	0		=			
ANR	8055979	MemberAccess	s -> m . b8_stride		8055710	0					
ANR	8055980	PtrMemberAccess	s -> m		8055710	0					
ANR	8055981	Identifier	s		8055710	0					
ANR	8055982	Identifier	m		8055710	1					
ANR	8055983	Identifier	b8_stride		8055710	1					
ANR	8055984	AdditiveExpression	2 * s -> m . mb_width + 1		8055710	1		+			
ANR	8055985	MultiplicativeExpression	2 * s -> m . mb_width		8055710	0		*			
ANR	8055986	PrimaryExpression	2		8055710	0					
ANR	8055987	MemberAccess	s -> m . mb_width		8055710	1					
ANR	8055988	PtrMemberAccess	s -> m		8055710	0					
ANR	8055989	Identifier	s		8055710	0					
ANR	8055990	Identifier	m		8055710	1					
ANR	8055991	Identifier	mb_width		8055710	1					
ANR	8055992	PrimaryExpression	1		8055710	1					
ANR	8055993	ExpressionStatement	s -> m . f_code = 1	79:8:1774:1812	8055710	11	True				
ANR	8055994	AssignmentExpression	s -> m . f_code = 1		8055710	0		=			
ANR	8055995	MemberAccess	s -> m . f_code		8055710	0					
ANR	8055996	PtrMemberAccess	s -> m		8055710	0					
ANR	8055997	Identifier	s		8055710	0					
ANR	8055998	Identifier	m		8055710	1					
ANR	8055999	Identifier	f_code		8055710	1					
ANR	8056000	PrimaryExpression	1		8055710	1					
ANR	8056001	ExpressionStatement	s -> m . pict_type = f -> pict_type	81:8:1823:1872	8055710	12	True				
ANR	8056002	AssignmentExpression	s -> m . pict_type = f -> pict_type		8055710	0		=			
ANR	8056003	MemberAccess	s -> m . pict_type		8055710	0					
ANR	8056004	PtrMemberAccess	s -> m		8055710	0					
ANR	8056005	Identifier	s		8055710	0					
ANR	8056006	Identifier	m		8055710	1					
ANR	8056007	Identifier	pict_type		8055710	1					
ANR	8056008	PtrMemberAccess	f -> pict_type		8055710	1					
ANR	8056009	Identifier	f		8055710	0					
ANR	8056010	Identifier	pict_type		8055710	1					
ANR	8056011	ExpressionStatement	s -> m . me_method = s -> avctx -> me_method	83:8:1883:1939	8055710	13	True				
ANR	8056012	AssignmentExpression	s -> m . me_method = s -> avctx -> me_method		8055710	0		=			
ANR	8056013	MemberAccess	s -> m . me_method		8055710	0					
ANR	8056014	PtrMemberAccess	s -> m		8055710	0					
ANR	8056015	Identifier	s		8055710	0					
ANR	8056016	Identifier	m		8055710	1					
ANR	8056017	Identifier	me_method		8055710	1					
ANR	8056018	PtrMemberAccess	s -> avctx -> me_method		8055710	1					
ANR	8056019	PtrMemberAccess	s -> avctx		8055710	0					
ANR	8056020	Identifier	s		8055710	0					
ANR	8056021	Identifier	avctx		8055710	1					
ANR	8056022	Identifier	me_method		8055710	1					
ANR	8056023	ExpressionStatement	s -> m . me . scene_change_score = 0	85:8:1950:1988	8055710	14	True				
ANR	8056024	AssignmentExpression	s -> m . me . scene_change_score = 0		8055710	0		=			
ANR	8056025	MemberAccess	s -> m . me . scene_change_score		8055710	0					
ANR	8056026	MemberAccess	s -> m . me		8055710	0					
ANR	8056027	PtrMemberAccess	s -> m		8055710	0					
ANR	8056028	Identifier	s		8055710	0					
ANR	8056029	Identifier	m		8055710	1					
ANR	8056030	Identifier	me		8055710	1					
ANR	8056031	Identifier	scene_change_score		8055710	1					
ANR	8056032	PrimaryExpression	0		8055710	1					
ANR	8056033	ExpressionStatement	s -> m . flags = s -> avctx -> flags	87:8:1999:2051	8055710	15	True				
ANR	8056034	AssignmentExpression	s -> m . flags = s -> avctx -> flags		8055710	0		=			
ANR	8056035	MemberAccess	s -> m . flags		8055710	0					
ANR	8056036	PtrMemberAccess	s -> m		8055710	0					
ANR	8056037	Identifier	s		8055710	0					
ANR	8056038	Identifier	m		8055710	1					
ANR	8056039	Identifier	flags		8055710	1					
ANR	8056040	PtrMemberAccess	s -> avctx -> flags		8055710	1					
ANR	8056041	PtrMemberAccess	s -> avctx		8055710	0					
ANR	8056042	Identifier	s		8055710	0					
ANR	8056043	Identifier	avctx		8055710	1					
ANR	8056044	Identifier	flags		8055710	1					
ANR	8056045	ExpressionStatement	s -> m . lambda = f -> quality	93:8:2173:2220	8055710	16	True				
ANR	8056046	AssignmentExpression	s -> m . lambda = f -> quality		8055710	0		=			
ANR	8056047	MemberAccess	s -> m . lambda		8055710	0					
ANR	8056048	PtrMemberAccess	s -> m		8055710	0					
ANR	8056049	Identifier	s		8055710	0					
ANR	8056050	Identifier	m		8055710	1					
ANR	8056051	Identifier	lambda		8055710	1					
ANR	8056052	PtrMemberAccess	f -> quality		8055710	1					
ANR	8056053	Identifier	f		8055710	0					
ANR	8056054	Identifier	quality		8055710	1					
ANR	8056055	ExpressionStatement	s -> m . qscale = s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 >> FF_LAMBDA_SHIFT + 7	95:8:2231:2423	8055710	17	True				
ANR	8056056	AssignmentExpression	s -> m . qscale = s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 >> FF_LAMBDA_SHIFT + 7		8055710	0		=			
ANR	8056057	MemberAccess	s -> m . qscale		8055710	0					
ANR	8056058	PtrMemberAccess	s -> m		8055710	0					
ANR	8056059	Identifier	s		8055710	0					
ANR	8056060	Identifier	m		8055710	1					
ANR	8056061	Identifier	qscale		8055710	1					
ANR	8056062	ShiftExpression	s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64 >> FF_LAMBDA_SHIFT + 7		8055710	1		>>			
ANR	8056063	AdditiveExpression	s -> m . lambda * 139 + FF_LAMBDA_SCALE * 64		8055710	0		+			
ANR	8056064	MultiplicativeExpression	s -> m . lambda * 139		8055710	0		*			
ANR	8056065	MemberAccess	s -> m . lambda		8055710	0					
ANR	8056066	PtrMemberAccess	s -> m		8055710	0					
ANR	8056067	Identifier	s		8055710	0					
ANR	8056068	Identifier	m		8055710	1					
ANR	8056069	Identifier	lambda		8055710	1					
ANR	8056070	PrimaryExpression	139		8055710	1					
ANR	8056071	MultiplicativeExpression	FF_LAMBDA_SCALE * 64		8055710	1		*			
ANR	8056072	Identifier	FF_LAMBDA_SCALE		8055710	0					
ANR	8056073	PrimaryExpression	64		8055710	1					
ANR	8056074	AdditiveExpression	FF_LAMBDA_SHIFT + 7		8055710	1		+			
ANR	8056075	Identifier	FF_LAMBDA_SHIFT		8055710	0					
ANR	8056076	PrimaryExpression	7		8055710	1					
ANR	8056077	ExpressionStatement	s -> m . lambda2 = s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 >> FF_LAMBDA_SHIFT	101:8:2434:2629	8055710	18	True				
ANR	8056078	AssignmentExpression	s -> m . lambda2 = s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 >> FF_LAMBDA_SHIFT		8055710	0		=			
ANR	8056079	MemberAccess	s -> m . lambda2		8055710	0					
ANR	8056080	PtrMemberAccess	s -> m		8055710	0					
ANR	8056081	Identifier	s		8055710	0					
ANR	8056082	Identifier	m		8055710	1					
ANR	8056083	Identifier	lambda2		8055710	1					
ANR	8056084	ShiftExpression	s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2 >> FF_LAMBDA_SHIFT		8055710	1		>>			
ANR	8056085	AdditiveExpression	s -> m . lambda * s -> m . lambda + FF_LAMBDA_SCALE / 2		8055710	0		+			
ANR	8056086	MultiplicativeExpression	s -> m . lambda * s -> m . lambda		8055710	0		*			
ANR	8056087	MemberAccess	s -> m . lambda		8055710	0					
ANR	8056088	PtrMemberAccess	s -> m		8055710	0					
ANR	8056089	Identifier	s		8055710	0					
ANR	8056090	Identifier	m		8055710	1					
ANR	8056091	Identifier	lambda		8055710	1					
ANR	8056092	MemberAccess	s -> m . lambda		8055710	1					
ANR	8056093	PtrMemberAccess	s -> m		8055710	0					
ANR	8056094	Identifier	s		8055710	0					
ANR	8056095	Identifier	m		8055710	1					
ANR	8056096	Identifier	lambda		8055710	1					
ANR	8056097	MultiplicativeExpression	FF_LAMBDA_SCALE / 2		8055710	1		/			
ANR	8056098	Identifier	FF_LAMBDA_SCALE		8055710	0					
ANR	8056099	PrimaryExpression	2		8055710	1					
ANR	8056100	Identifier	FF_LAMBDA_SHIFT		8055710	1					
ANR	8056101	IfStatement	if ( ! s -> motion_val8 [ plane ] )		8055710	19					
ANR	8056102	Condition	! s -> motion_val8 [ plane ]	109:12:2646:2667	8055710	0	True				
ANR	8056103	UnaryOperationExpression	! s -> motion_val8 [ plane ]		8055710	0					
ANR	8056104	UnaryOperator	!		8055710	0					
ANR	8056105	ArrayIndexing	s -> motion_val8 [ plane ]		8055710	1					
ANR	8056106	PtrMemberAccess	s -> motion_val8		8055710	0					
ANR	8056107	Identifier	s		8055710	0					
ANR	8056108	Identifier	motion_val8		8055710	1					
ANR	8056109	Identifier	plane		8055710	1					
ANR	8056110	CompoundStatement		99:36:2359:2359	8055710	1					
ANR	8056111	ExpressionStatement	s -> motion_val8 [ plane ] = av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )	111:12:2685:2882	8055710	0	True				
ANR	8056112	AssignmentExpression	s -> motion_val8 [ plane ] = av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )		8055710	0		=			
ANR	8056113	ArrayIndexing	s -> motion_val8 [ plane ]		8055710	0					
ANR	8056114	PtrMemberAccess	s -> motion_val8		8055710	0					
ANR	8056115	Identifier	s		8055710	0					
ANR	8056116	Identifier	motion_val8		8055710	1					
ANR	8056117	Identifier	plane		8055710	1					
ANR	8056118	CallExpression	av_mallocz ( ( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t ) )		8055710	1					
ANR	8056119	Callee	av_mallocz		8055710	0					
ANR	8056120	Identifier	av_mallocz		8055710	0					
ANR	8056121	ArgumentList	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8055710	1					
ANR	8056122	Argument	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8055710	0					
ANR	8056123	MultiplicativeExpression	( s -> m . b8_stride * block_height * 2 + 2 ) * 2 * sizeof ( int16_t )		8055710	0		*			
ANR	8056124	AdditiveExpression	s -> m . b8_stride * block_height * 2 + 2		8055710	0		+			
ANR	8056125	MultiplicativeExpression	s -> m . b8_stride * block_height * 2		8055710	0		*			
ANR	8056126	MemberAccess	s -> m . b8_stride		8055710	0					
ANR	8056127	PtrMemberAccess	s -> m		8055710	0					
ANR	8056128	Identifier	s		8055710	0					
ANR	8056129	Identifier	m		8055710	1					
ANR	8056130	Identifier	b8_stride		8055710	1					
ANR	8056131	MultiplicativeExpression	block_height * 2		8055710	1		*			
ANR	8056132	Identifier	block_height		8055710	0					
ANR	8056133	PrimaryExpression	2		8055710	1					
ANR	8056134	PrimaryExpression	2		8055710	1					
ANR	8056135	MultiplicativeExpression	2 * sizeof ( int16_t )		8055710	1		*			
ANR	8056136	PrimaryExpression	2		8055710	0					
ANR	8056137	SizeofExpression	sizeof ( int16_t )		8055710	1					
ANR	8056138	Sizeof	sizeof		8055710	0					
ANR	8056139	SizeofOperand	int16_t		8055710	1					
ANR	8056140	ExpressionStatement	s -> motion_val16 [ plane ] = av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )	117:12:2897:3096	8055710	1	True				
ANR	8056141	AssignmentExpression	s -> motion_val16 [ plane ] = av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )		8055710	0		=			
ANR	8056142	ArrayIndexing	s -> motion_val16 [ plane ]		8055710	0					
ANR	8056143	PtrMemberAccess	s -> motion_val16		8055710	0					
ANR	8056144	Identifier	s		8055710	0					
ANR	8056145	Identifier	motion_val16		8055710	1					
ANR	8056146	Identifier	plane		8055710	1					
ANR	8056147	CallExpression	av_mallocz ( ( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t ) )		8055710	1					
ANR	8056148	Callee	av_mallocz		8055710	0					
ANR	8056149	Identifier	av_mallocz		8055710	0					
ANR	8056150	ArgumentList	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8055710	1					
ANR	8056151	Argument	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8055710	0					
ANR	8056152	MultiplicativeExpression	( s -> m . mb_stride * ( block_height + 2 ) + 1 ) * 2 * sizeof ( int16_t )		8055710	0		*			
ANR	8056153	AdditiveExpression	s -> m . mb_stride * ( block_height + 2 ) + 1		8055710	0		+			
ANR	8056154	MultiplicativeExpression	s -> m . mb_stride * ( block_height + 2 )		8055710	0		*			
ANR	8056155	MemberAccess	s -> m . mb_stride		8055710	0					
ANR	8056156	PtrMemberAccess	s -> m		8055710	0					
ANR	8056157	Identifier	s		8055710	0					
ANR	8056158	Identifier	m		8055710	1					
ANR	8056159	Identifier	mb_stride		8055710	1					
ANR	8056160	AdditiveExpression	block_height + 2		8055710	1		+			
ANR	8056161	Identifier	block_height		8055710	0					
ANR	8056162	PrimaryExpression	2		8055710	1					
ANR	8056163	PrimaryExpression	1		8055710	1					
ANR	8056164	MultiplicativeExpression	2 * sizeof ( int16_t )		8055710	1		*			
ANR	8056165	PrimaryExpression	2		8055710	0					
ANR	8056166	SizeofExpression	sizeof ( int16_t )		8055710	1					
ANR	8056167	Sizeof	sizeof		8055710	0					
ANR	8056168	SizeofOperand	int16_t		8055710	1					
ANR	8056169	ExpressionStatement	s -> m . mb_type = s -> mb_type	127:8:3120:3145	8055710	20	True				
ANR	8056170	AssignmentExpression	s -> m . mb_type = s -> mb_type		8055710	0		=			
ANR	8056171	MemberAccess	s -> m . mb_type		8055710	0					
ANR	8056172	PtrMemberAccess	s -> m		8055710	0					
ANR	8056173	Identifier	s		8055710	0					
ANR	8056174	Identifier	m		8055710	1					
ANR	8056175	Identifier	mb_type		8055710	1					
ANR	8056176	PtrMemberAccess	s -> mb_type		8055710	1					
ANR	8056177	Identifier	s		8055710	0					
ANR	8056178	Identifier	mb_type		8055710	1					
ANR	8056179	ExpressionStatement	s -> m . current_picture . mb_mean = ( uint8_t * ) s -> dummy	133:8:3198:3250	8055710	21	True				
ANR	8056180	AssignmentExpression	s -> m . current_picture . mb_mean = ( uint8_t * ) s -> dummy		8055710	0		=			
ANR	8056181	MemberAccess	s -> m . current_picture . mb_mean		8055710	0					
ANR	8056182	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8056183	PtrMemberAccess	s -> m		8055710	0					
ANR	8056184	Identifier	s		8055710	0					
ANR	8056185	Identifier	m		8055710	1					
ANR	8056186	Identifier	current_picture		8055710	1					
ANR	8056187	Identifier	mb_mean		8055710	1					
ANR	8056188	CastExpression	( uint8_t * ) s -> dummy		8055710	1					
ANR	8056189	CastTarget	uint8_t *		8055710	0					
ANR	8056190	PtrMemberAccess	s -> dummy		8055710	1					
ANR	8056191	Identifier	s		8055710	0					
ANR	8056192	Identifier	dummy		8055710	1					
ANR	8056193	ExpressionStatement	s -> m . current_picture . mb_var = ( uint16_t * ) s -> dummy	135:8:3261:3314	8055710	22	True				
ANR	8056194	AssignmentExpression	s -> m . current_picture . mb_var = ( uint16_t * ) s -> dummy		8055710	0		=			
ANR	8056195	MemberAccess	s -> m . current_picture . mb_var		8055710	0					
ANR	8056196	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8056197	PtrMemberAccess	s -> m		8055710	0					
ANR	8056198	Identifier	s		8055710	0					
ANR	8056199	Identifier	m		8055710	1					
ANR	8056200	Identifier	current_picture		8055710	1					
ANR	8056201	Identifier	mb_var		8055710	1					
ANR	8056202	CastExpression	( uint16_t * ) s -> dummy		8055710	1					
ANR	8056203	CastTarget	uint16_t *		8055710	0					
ANR	8056204	PtrMemberAccess	s -> dummy		8055710	1					
ANR	8056205	Identifier	s		8055710	0					
ANR	8056206	Identifier	dummy		8055710	1					
ANR	8056207	ExpressionStatement	s -> m . current_picture . mc_mb_var = ( uint16_t * ) s -> dummy	137:8:3325:3378	8055710	23	True				
ANR	8056208	AssignmentExpression	s -> m . current_picture . mc_mb_var = ( uint16_t * ) s -> dummy		8055710	0		=			
ANR	8056209	MemberAccess	s -> m . current_picture . mc_mb_var		8055710	0					
ANR	8056210	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8056211	PtrMemberAccess	s -> m		8055710	0					
ANR	8056212	Identifier	s		8055710	0					
ANR	8056213	Identifier	m		8055710	1					
ANR	8056214	Identifier	current_picture		8055710	1					
ANR	8056215	Identifier	mc_mb_var		8055710	1					
ANR	8056216	CastExpression	( uint16_t * ) s -> dummy		8055710	1					
ANR	8056217	CastTarget	uint16_t *		8055710	0					
ANR	8056218	PtrMemberAccess	s -> dummy		8055710	1					
ANR	8056219	Identifier	s		8055710	0					
ANR	8056220	Identifier	dummy		8055710	1					
ANR	8056221	ExpressionStatement	s -> m . current_picture . mb_type = s -> dummy	139:8:3389:3428	8055710	24	True				
ANR	8056222	AssignmentExpression	s -> m . current_picture . mb_type = s -> dummy		8055710	0		=			
ANR	8056223	MemberAccess	s -> m . current_picture . mb_type		8055710	0					
ANR	8056224	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8056225	PtrMemberAccess	s -> m		8055710	0					
ANR	8056226	Identifier	s		8055710	0					
ANR	8056227	Identifier	m		8055710	1					
ANR	8056228	Identifier	current_picture		8055710	1					
ANR	8056229	Identifier	mb_type		8055710	1					
ANR	8056230	PtrMemberAccess	s -> dummy		8055710	1					
ANR	8056231	Identifier	s		8055710	0					
ANR	8056232	Identifier	dummy		8055710	1					
ANR	8056233	ExpressionStatement	s -> m . current_picture . motion_val [ 0 ] = s -> motion_val8 [ plane ] + 2	143:8:3441:3505	8055710	25	True				
ANR	8056234	AssignmentExpression	s -> m . current_picture . motion_val [ 0 ] = s -> motion_val8 [ plane ] + 2		8055710	0		=			
ANR	8056235	ArrayIndexing	s -> m . current_picture . motion_val [ 0 ]		8055710	0					
ANR	8056236	MemberAccess	s -> m . current_picture . motion_val		8055710	0					
ANR	8056237	MemberAccess	s -> m . current_picture		8055710	0					
ANR	8056238	PtrMemberAccess	s -> m		8055710	0					
ANR	8056239	Identifier	s		8055710	0					
ANR	8056240	Identifier	m		8055710	1					
ANR	8056241	Identifier	current_picture		8055710	1					
ANR	8056242	Identifier	motion_val		8055710	1					
ANR	8056243	PrimaryExpression	0		8055710	1					
ANR	8056244	AdditiveExpression	s -> motion_val8 [ plane ] + 2		8055710	1		+			
ANR	8056245	ArrayIndexing	s -> motion_val8 [ plane ]		8055710	0					
ANR	8056246	PtrMemberAccess	s -> motion_val8		8055710	0					
ANR	8056247	Identifier	s		8055710	0					
ANR	8056248	Identifier	motion_val8		8055710	1					
ANR	8056249	Identifier	plane		8055710	1					
ANR	8056250	PrimaryExpression	2		8055710	1					
ANR	8056251	ExpressionStatement	s -> m . p_mv_table = s -> motion_val16 [ plane ] + s -> m . mb_stride + 1	145:8:3516:3646	8055710	26	True				
ANR	8056252	AssignmentExpression	s -> m . p_mv_table = s -> motion_val16 [ plane ] + s -> m . mb_stride + 1		8055710	0		=			
ANR	8056253	MemberAccess	s -> m . p_mv_table		8055710	0					
ANR	8056254	PtrMemberAccess	s -> m		8055710	0					
ANR	8056255	Identifier	s		8055710	0					
ANR	8056256	Identifier	m		8055710	1					
ANR	8056257	Identifier	p_mv_table		8055710	1					
ANR	8056258	AdditiveExpression	s -> motion_val16 [ plane ] + s -> m . mb_stride + 1		8055710	1		+			
ANR	8056259	ArrayIndexing	s -> motion_val16 [ plane ]		8055710	0					
ANR	8056260	PtrMemberAccess	s -> motion_val16		8055710	0					
ANR	8056261	Identifier	s		8055710	0					
ANR	8056262	Identifier	motion_val16		8055710	1					
ANR	8056263	Identifier	plane		8055710	1					
ANR	8056264	AdditiveExpression	s -> m . mb_stride + 1		8055710	1		+			
ANR	8056265	MemberAccess	s -> m . mb_stride		8055710	0					
ANR	8056266	PtrMemberAccess	s -> m		8055710	0					
ANR	8056267	Identifier	s		8055710	0					
ANR	8056268	Identifier	m		8055710	1					
ANR	8056269	Identifier	mb_stride		8055710	1					
ANR	8056270	PrimaryExpression	1		8055710	1					
ANR	8056271	ExpressionStatement	s -> m . dsp = s -> dsp	149:8:3657:3702	8055710	27	True				
ANR	8056272	AssignmentExpression	s -> m . dsp = s -> dsp		8055710	0		=			
ANR	8056273	MemberAccess	s -> m . dsp		8055710	0					
ANR	8056274	PtrMemberAccess	s -> m		8055710	0					
ANR	8056275	Identifier	s		8055710	0					
ANR	8056276	Identifier	m		8055710	1					
ANR	8056277	Identifier	dsp		8055710	1					
ANR	8056278	PtrMemberAccess	s -> dsp		8055710	1					
ANR	8056279	Identifier	s		8055710	0					
ANR	8056280	Identifier	dsp		8055710	1					
ANR	8056281	ExpressionStatement	ff_init_me ( & s -> m )	151:8:3721:3738	8055710	28	True				
ANR	8056282	CallExpression	ff_init_me ( & s -> m )		8055710	0					
ANR	8056283	Callee	ff_init_me		8055710	0					
ANR	8056284	Identifier	ff_init_me		8055710	0					
ANR	8056285	ArgumentList	& s -> m		8055710	1					
ANR	8056286	Argument	& s -> m		8055710	0					
ANR	8056287	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056288	UnaryOperator	&		8055710	0					
ANR	8056289	PtrMemberAccess	s -> m		8055710	1					
ANR	8056290	Identifier	s		8055710	0					
ANR	8056291	Identifier	m		8055710	1					
ANR	8056292	ExpressionStatement	s -> m . me . dia_size = s -> avctx -> dia_size	155:8:3751:3793	8055710	29	True				
ANR	8056293	AssignmentExpression	s -> m . me . dia_size = s -> avctx -> dia_size		8055710	0		=			
ANR	8056294	MemberAccess	s -> m . me . dia_size		8055710	0					
ANR	8056295	MemberAccess	s -> m . me		8055710	0					
ANR	8056296	PtrMemberAccess	s -> m		8055710	0					
ANR	8056297	Identifier	s		8055710	0					
ANR	8056298	Identifier	m		8055710	1					
ANR	8056299	Identifier	me		8055710	1					
ANR	8056300	Identifier	dia_size		8055710	1					
ANR	8056301	PtrMemberAccess	s -> avctx -> dia_size		8055710	1					
ANR	8056302	PtrMemberAccess	s -> avctx		8055710	0					
ANR	8056303	Identifier	s		8055710	0					
ANR	8056304	Identifier	avctx		8055710	1					
ANR	8056305	Identifier	dia_size		8055710	1					
ANR	8056306	ExpressionStatement	s -> m . first_slice_line = 1	157:8:3804:3829	8055710	30	True				
ANR	8056307	AssignmentExpression	s -> m . first_slice_line = 1		8055710	0		=			
ANR	8056308	MemberAccess	s -> m . first_slice_line		8055710	0					
ANR	8056309	PtrMemberAccess	s -> m		8055710	0					
ANR	8056310	Identifier	s		8055710	0					
ANR	8056311	Identifier	m		8055710	1					
ANR	8056312	Identifier	first_slice_line		8055710	1					
ANR	8056313	PrimaryExpression	1		8055710	1					
ANR	8056314	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		8055710	31					
ANR	8056315	ForInit	y = 0 ;	159:13:3845:3850	8055710	0	True				
ANR	8056316	AssignmentExpression	y = 0		8055710	0		=			
ANR	8056317	Identifier	y		8055710	0					
ANR	8056318	PrimaryExpression	0		8055710	1					
ANR	8056319	Condition	y < block_height	159:20:3852:3867	8055710	1	True				
ANR	8056320	RelationalExpression	y < block_height		8055710	0		<			
ANR	8056321	Identifier	y		8055710	0					
ANR	8056322	Identifier	block_height		8055710	1					
ANR	8056323	PostIncDecOperationExpression	y ++	159:38:3870:3872	8055710	2	True				
ANR	8056324	Identifier	y		8055710	0					
ANR	8056325	IncDec	++		8055710	1					
ANR	8056326	CompoundStatement		149:43:3564:3564	8055710	3					
ANR	8056327	ExpressionStatement	s -> m . new_picture . f . data [ 0 ] = src - y * 16 * stride	161:12:3890:3940	8055710	0	True				
ANR	8056328	AssignmentExpression	s -> m . new_picture . f . data [ 0 ] = src - y * 16 * stride		8055710	0		=			
ANR	8056329	ArrayIndexing	s -> m . new_picture . f . data [ 0 ]		8055710	0					
ANR	8056330	MemberAccess	s -> m . new_picture . f . data		8055710	0					
ANR	8056331	MemberAccess	s -> m . new_picture . f		8055710	0					
ANR	8056332	MemberAccess	s -> m . new_picture		8055710	0					
ANR	8056333	PtrMemberAccess	s -> m		8055710	0					
ANR	8056334	Identifier	s		8055710	0					
ANR	8056335	Identifier	m		8055710	1					
ANR	8056336	Identifier	new_picture		8055710	1					
ANR	8056337	Identifier	f		8055710	1					
ANR	8056338	Identifier	data		8055710	1					
ANR	8056339	PrimaryExpression	0		8055710	1					
ANR	8056340	AdditiveExpression	src - y * 16 * stride		8055710	1		-			
ANR	8056341	Identifier	src		8055710	0					
ANR	8056342	MultiplicativeExpression	y * 16 * stride		8055710	1		*			
ANR	8056343	Identifier	y		8055710	0					
ANR	8056344	MultiplicativeExpression	16 * stride		8055710	1		*			
ANR	8056345	PrimaryExpression	16		8055710	0					
ANR	8056346	Identifier	stride		8055710	1					
ANR	8056347	ExpressionStatement	s -> m . mb_y = y	163:12:3963:3993	8055710	1	True				
ANR	8056348	AssignmentExpression	s -> m . mb_y = y		8055710	0		=			
ANR	8056349	MemberAccess	s -> m . mb_y		8055710	0					
ANR	8056350	PtrMemberAccess	s -> m		8055710	0					
ANR	8056351	Identifier	s		8055710	0					
ANR	8056352	Identifier	m		8055710	1					
ANR	8056353	Identifier	mb_y		8055710	1					
ANR	8056354	Identifier	y		8055710	1					
ANR	8056355	ForStatement	for ( i = 0 ; i < 16 && i + 16 * y < height ; i ++ )		8055710	2					
ANR	8056356	ForInit	i = 0 ;	167:17:4015:4020	8055710	0	True				
ANR	8056357	AssignmentExpression	i = 0		8055710	0		=			
ANR	8056358	Identifier	i		8055710	0					
ANR	8056359	PrimaryExpression	0		8055710	1					
ANR	8056360	Condition	i < 16 && i + 16 * y < height	167:24:4022:4050	8055710	1	True				
ANR	8056361	AndExpression	i < 16 && i + 16 * y < height		8055710	0		&&			
ANR	8056362	RelationalExpression	i < 16		8055710	0		<			
ANR	8056363	Identifier	i		8055710	0					
ANR	8056364	PrimaryExpression	16		8055710	1					
ANR	8056365	RelationalExpression	i + 16 * y < height		8055710	1		<			
ANR	8056366	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056367	Identifier	i		8055710	0					
ANR	8056368	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056369	PrimaryExpression	16		8055710	0					
ANR	8056370	Identifier	y		8055710	1					
ANR	8056371	Identifier	height		8055710	1					
ANR	8056372	PostIncDecOperationExpression	i ++	167:55:4053:4055	8055710	2	True				
ANR	8056373	Identifier	i		8055710	0					
ANR	8056374	IncDec	++		8055710	1					
ANR	8056375	CompoundStatement		157:60:3747:3747	8055710	3					
ANR	8056376	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"	169:16:4077:4171	8055710	0	True				
ANR	8056377	CallExpression	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"		8055710	0					
ANR	8056378	Callee	memcpy		8055710	0					
ANR	8056379	Identifier	memcpy		8055710	0					
ANR	8056380	ArgumentList	& src [ i * stride ]		8055710	1					
ANR	8056381	Argument	& src [ i * stride ]		8055710	0					
ANR	8056382	UnaryOperationExpression	& src [ i * stride ]		8055710	0					
ANR	8056383	UnaryOperator	&		8055710	0					
ANR	8056384	ArrayIndexing	src [ i * stride ]		8055710	1					
ANR	8056385	Identifier	src		8055710	0					
ANR	8056386	MultiplicativeExpression	i * stride		8055710	1		*			
ANR	8056387	Identifier	i		8055710	0					
ANR	8056388	Identifier	stride		8055710	1					
ANR	8056389	Argument	& src_plane [ ( i + 16 * y ) * src_stride ]		8055710	1					
ANR	8056390	UnaryOperationExpression	& src_plane [ ( i + 16 * y ) * src_stride ]		8055710	0					
ANR	8056391	UnaryOperator	&		8055710	0					
ANR	8056392	ArrayIndexing	src_plane [ ( i + 16 * y ) * src_stride ]		8055710	1					
ANR	8056393	Identifier	src_plane		8055710	0					
ANR	8056394	MultiplicativeExpression	( i + 16 * y ) * src_stride		8055710	1		*			
ANR	8056395	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056396	Identifier	i		8055710	0					
ANR	8056397	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056398	PrimaryExpression	16		8055710	0					
ANR	8056399	Identifier	y		8055710	1					
ANR	8056400	Identifier	src_stride		8055710	1					
ANR	8056401	Argument	width		8055710	2					
ANR	8056402	Identifier	width		8055710	0					
ANR	8056403	ForStatement	for ( x = width ; x < 16 * block_width ; x ++ )		8055710	1					
ANR	8056404	ForInit	x = width ;	173:21:4195:4204	8055710	0	True				
ANR	8056405	AssignmentExpression	x = width		8055710	0		=			
ANR	8056406	Identifier	x		8055710	0					
ANR	8056407	Identifier	width		8055710	1					
ANR	8056408	Condition	x < 16 * block_width	173:32:4206:4225	8055710	1	True				
ANR	8056409	RelationalExpression	x < 16 * block_width		8055710	0		<			
ANR	8056410	Identifier	x		8055710	0					
ANR	8056411	MultiplicativeExpression	16 * block_width		8055710	1		*			
ANR	8056412	PrimaryExpression	16		8055710	0					
ANR	8056413	Identifier	block_width		8055710	1					
ANR	8056414	PostIncDecOperationExpression	x ++	173:54:4228:4230	8055710	2	True				
ANR	8056415	Identifier	x		8055710	0					
ANR	8056416	IncDec	++		8055710	1					
ANR	8056417	ExpressionStatement	src [ i * stride + x ] = src [ i * stride + x - 1 ]	175:20:4254:4299	8055710	3	True				
ANR	8056418	AssignmentExpression	src [ i * stride + x ] = src [ i * stride + x - 1 ]		8055710	0		=			
ANR	8056419	ArrayIndexing	src [ i * stride + x ]		8055710	0					
ANR	8056420	Identifier	src		8055710	0					
ANR	8056421	AdditiveExpression	i * stride + x		8055710	1		+			
ANR	8056422	MultiplicativeExpression	i * stride		8055710	0		*			
ANR	8056423	Identifier	i		8055710	0					
ANR	8056424	Identifier	stride		8055710	1					
ANR	8056425	Identifier	x		8055710	1					
ANR	8056426	ArrayIndexing	src [ i * stride + x - 1 ]		8055710	1					
ANR	8056427	Identifier	src		8055710	0					
ANR	8056428	AdditiveExpression	i * stride + x - 1		8055710	1		+			
ANR	8056429	MultiplicativeExpression	i * stride		8055710	0		*			
ANR	8056430	Identifier	i		8055710	0					
ANR	8056431	Identifier	stride		8055710	1					
ANR	8056432	AdditiveExpression	x - 1		8055710	1		-			
ANR	8056433	Identifier	x		8055710	0					
ANR	8056434	PrimaryExpression	1		8055710	1					
ANR	8056435	ForStatement	for ( ; i < 16 && i + 16 * y < 16 * block_height ; i ++ )		8055710	3					
ANR	8056436	Condition	i < 16 && i + 16 * y < 16 * block_height	179:19:4336:4375	8055710	0	True				
ANR	8056437	AndExpression	i < 16 && i + 16 * y < 16 * block_height		8055710	0		&&			
ANR	8056438	RelationalExpression	i < 16		8055710	0		<			
ANR	8056439	Identifier	i		8055710	0					
ANR	8056440	PrimaryExpression	16		8055710	1					
ANR	8056441	RelationalExpression	i + 16 * y < 16 * block_height		8055710	1		<			
ANR	8056442	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056443	Identifier	i		8055710	0					
ANR	8056444	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056445	PrimaryExpression	16		8055710	0					
ANR	8056446	Identifier	y		8055710	1					
ANR	8056447	MultiplicativeExpression	16 * block_height		8055710	1		*			
ANR	8056448	PrimaryExpression	16		8055710	0					
ANR	8056449	Identifier	block_height		8055710	1					
ANR	8056450	PostIncDecOperationExpression	i ++	179:61:4378:4380	8055710	1	True				
ANR	8056451	Identifier	i		8055710	0					
ANR	8056452	IncDec	++		8055710	1					
ANR	8056453	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"	181:16:4400:4490	8055710	2	True				
ANR	8056454	CallExpression	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"		8055710	0					
ANR	8056455	Callee	memcpy		8055710	0					
ANR	8056456	Identifier	memcpy		8055710	0					
ANR	8056457	ArgumentList	& src [ i * stride ]		8055710	1					
ANR	8056458	Argument	& src [ i * stride ]		8055710	0					
ANR	8056459	UnaryOperationExpression	& src [ i * stride ]		8055710	0					
ANR	8056460	UnaryOperator	&		8055710	0					
ANR	8056461	ArrayIndexing	src [ i * stride ]		8055710	1					
ANR	8056462	Identifier	src		8055710	0					
ANR	8056463	MultiplicativeExpression	i * stride		8055710	1		*			
ANR	8056464	Identifier	i		8055710	0					
ANR	8056465	Identifier	stride		8055710	1					
ANR	8056466	Argument	& src [ ( i - 1 ) * stride ]		8055710	1					
ANR	8056467	UnaryOperationExpression	& src [ ( i - 1 ) * stride ]		8055710	0					
ANR	8056468	UnaryOperator	&		8055710	0					
ANR	8056469	ArrayIndexing	src [ ( i - 1 ) * stride ]		8055710	1					
ANR	8056470	Identifier	src		8055710	0					
ANR	8056471	MultiplicativeExpression	( i - 1 ) * stride		8055710	1		*			
ANR	8056472	AdditiveExpression	i - 1		8055710	0		-			
ANR	8056473	Identifier	i		8055710	0					
ANR	8056474	PrimaryExpression	1		8055710	1					
ANR	8056475	Identifier	stride		8055710	1					
ANR	8056476	Argument	16 * block_width		8055710	2					
ANR	8056477	MultiplicativeExpression	16 * block_width		8055710	0		*			
ANR	8056478	PrimaryExpression	16		8055710	0					
ANR	8056479	Identifier	block_width		8055710	1					
ANR	8056480	ForStatement	for ( x = 0 ; x < block_width ; x ++ )		8055710	4					
ANR	8056481	ForInit	x = 0 ;	187:17:4512:4517	8055710	0	True				
ANR	8056482	AssignmentExpression	x = 0		8055710	0		=			
ANR	8056483	Identifier	x		8055710	0					
ANR	8056484	PrimaryExpression	0		8055710	1					
ANR	8056485	Condition	x < block_width	187:24:4519:4533	8055710	1	True				
ANR	8056486	RelationalExpression	x < block_width		8055710	0		<			
ANR	8056487	Identifier	x		8055710	0					
ANR	8056488	Identifier	block_width		8055710	1					
ANR	8056489	PostIncDecOperationExpression	x ++	187:41:4536:4538	8055710	2	True				
ANR	8056490	Identifier	x		8055710	0					
ANR	8056491	IncDec	++		8055710	1					
ANR	8056492	CompoundStatement		177:46:4230:4230	8055710	3					
ANR	8056493	ExpressionStatement	s -> m . mb_x = x	189:16:4560:4573	8055710	0	True				
ANR	8056494	AssignmentExpression	s -> m . mb_x = x		8055710	0		=			
ANR	8056495	MemberAccess	s -> m . mb_x		8055710	0					
ANR	8056496	PtrMemberAccess	s -> m		8055710	0					
ANR	8056497	Identifier	s		8055710	0					
ANR	8056498	Identifier	m		8055710	1					
ANR	8056499	Identifier	mb_x		8055710	1					
ANR	8056500	Identifier	x		8055710	1					
ANR	8056501	ExpressionStatement	ff_init_block_index ( & s -> m )	191:16:4592:4618	8055710	1	True				
ANR	8056502	CallExpression	ff_init_block_index ( & s -> m )		8055710	0					
ANR	8056503	Callee	ff_init_block_index		8055710	0					
ANR	8056504	Identifier	ff_init_block_index		8055710	0					
ANR	8056505	ArgumentList	& s -> m		8055710	1					
ANR	8056506	Argument	& s -> m		8055710	0					
ANR	8056507	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056508	UnaryOperator	&		8055710	0					
ANR	8056509	PtrMemberAccess	s -> m		8055710	1					
ANR	8056510	Identifier	s		8055710	0					
ANR	8056511	Identifier	m		8055710	1					
ANR	8056512	ExpressionStatement	ff_update_block_index ( & s -> m )	193:16:4637:4665	8055710	2	True				
ANR	8056513	CallExpression	ff_update_block_index ( & s -> m )		8055710	0					
ANR	8056514	Callee	ff_update_block_index		8055710	0					
ANR	8056515	Identifier	ff_update_block_index		8055710	0					
ANR	8056516	ArgumentList	& s -> m		8055710	1					
ANR	8056517	Argument	& s -> m		8055710	0					
ANR	8056518	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056519	UnaryOperator	&		8055710	0					
ANR	8056520	PtrMemberAccess	s -> m		8055710	1					
ANR	8056521	Identifier	s		8055710	0					
ANR	8056522	Identifier	m		8055710	1					
ANR	8056523	ExpressionStatement	"ff_estimate_p_frame_motion ( & s -> m , x , y )"	197:16:4686:4725	8055710	3	True				
ANR	8056524	CallExpression	"ff_estimate_p_frame_motion ( & s -> m , x , y )"		8055710	0					
ANR	8056525	Callee	ff_estimate_p_frame_motion		8055710	0					
ANR	8056526	Identifier	ff_estimate_p_frame_motion		8055710	0					
ANR	8056527	ArgumentList	& s -> m		8055710	1					
ANR	8056528	Argument	& s -> m		8055710	0					
ANR	8056529	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056530	UnaryOperator	&		8055710	0					
ANR	8056531	PtrMemberAccess	s -> m		8055710	1					
ANR	8056532	Identifier	s		8055710	0					
ANR	8056533	Identifier	m		8055710	1					
ANR	8056534	Argument	x		8055710	1					
ANR	8056535	Identifier	x		8055710	0					
ANR	8056536	Argument	y		8055710	2					
ANR	8056537	Identifier	y		8055710	0					
ANR	8056538	ExpressionStatement	s -> m . first_slice_line = 0	201:12:4755:4780	8055710	5	True				
ANR	8056539	AssignmentExpression	s -> m . first_slice_line = 0		8055710	0		=			
ANR	8056540	MemberAccess	s -> m . first_slice_line		8055710	0					
ANR	8056541	PtrMemberAccess	s -> m		8055710	0					
ANR	8056542	Identifier	s		8055710	0					
ANR	8056543	Identifier	m		8055710	1					
ANR	8056544	Identifier	first_slice_line		8055710	1					
ANR	8056545	PrimaryExpression	0		8055710	1					
ANR	8056546	ExpressionStatement	ff_fix_long_p_mvs ( & s -> m )	207:8:4804:4828	8055710	32	True				
ANR	8056547	CallExpression	ff_fix_long_p_mvs ( & s -> m )		8055710	0					
ANR	8056548	Callee	ff_fix_long_p_mvs		8055710	0					
ANR	8056549	Identifier	ff_fix_long_p_mvs		8055710	0					
ANR	8056550	ArgumentList	& s -> m		8055710	1					
ANR	8056551	Argument	& s -> m		8055710	0					
ANR	8056552	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056553	UnaryOperator	&		8055710	0					
ANR	8056554	PtrMemberAccess	s -> m		8055710	1					
ANR	8056555	Identifier	s		8055710	0					
ANR	8056556	Identifier	m		8055710	1					
ANR	8056557	ExpressionStatement	"ff_fix_long_mvs ( & s -> m , NULL , 0 , s -> m . p_mv_table , s -> m . f_code , CANDIDATE_MB_TYPE_INTER , 0 )"	209:8:4839:4953	8055710	33	True				
ANR	8056558	CallExpression	"ff_fix_long_mvs ( & s -> m , NULL , 0 , s -> m . p_mv_table , s -> m . f_code , CANDIDATE_MB_TYPE_INTER , 0 )"		8055710	0					
ANR	8056559	Callee	ff_fix_long_mvs		8055710	0					
ANR	8056560	Identifier	ff_fix_long_mvs		8055710	0					
ANR	8056561	ArgumentList	& s -> m		8055710	1					
ANR	8056562	Argument	& s -> m		8055710	0					
ANR	8056563	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056564	UnaryOperator	&		8055710	0					
ANR	8056565	PtrMemberAccess	s -> m		8055710	1					
ANR	8056566	Identifier	s		8055710	0					
ANR	8056567	Identifier	m		8055710	1					
ANR	8056568	Argument	NULL		8055710	1					
ANR	8056569	Identifier	NULL		8055710	0					
ANR	8056570	Argument	0		8055710	2					
ANR	8056571	PrimaryExpression	0		8055710	0					
ANR	8056572	Argument	s -> m . p_mv_table		8055710	3					
ANR	8056573	MemberAccess	s -> m . p_mv_table		8055710	0					
ANR	8056574	PtrMemberAccess	s -> m		8055710	0					
ANR	8056575	Identifier	s		8055710	0					
ANR	8056576	Identifier	m		8055710	1					
ANR	8056577	Identifier	p_mv_table		8055710	1					
ANR	8056578	Argument	s -> m . f_code		8055710	4					
ANR	8056579	MemberAccess	s -> m . f_code		8055710	0					
ANR	8056580	PtrMemberAccess	s -> m		8055710	0					
ANR	8056581	Identifier	s		8055710	0					
ANR	8056582	Identifier	m		8055710	1					
ANR	8056583	Identifier	f_code		8055710	1					
ANR	8056584	Argument	CANDIDATE_MB_TYPE_INTER		8055710	5					
ANR	8056585	Identifier	CANDIDATE_MB_TYPE_INTER		8055710	0					
ANR	8056586	Argument	0		8055710	6					
ANR	8056587	PrimaryExpression	0		8055710	0					
ANR	8056588	ExpressionStatement	s -> m . first_slice_line = 1	217:4:4969:4994	8055710	13	True				
ANR	8056589	AssignmentExpression	s -> m . first_slice_line = 1		8055710	0		=			
ANR	8056590	MemberAccess	s -> m . first_slice_line		8055710	0					
ANR	8056591	PtrMemberAccess	s -> m		8055710	0					
ANR	8056592	Identifier	s		8055710	0					
ANR	8056593	Identifier	m		8055710	1					
ANR	8056594	Identifier	first_slice_line		8055710	1					
ANR	8056595	PrimaryExpression	1		8055710	1					
ANR	8056596	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		8055710	14					
ANR	8056597	ForInit	y = 0 ;	219:9:5006:5011	8055710	0	True				
ANR	8056598	AssignmentExpression	y = 0		8055710	0		=			
ANR	8056599	Identifier	y		8055710	0					
ANR	8056600	PrimaryExpression	0		8055710	1					
ANR	8056601	Condition	y < block_height	219:16:5013:5028	8055710	1	True				
ANR	8056602	RelationalExpression	y < block_height		8055710	0		<			
ANR	8056603	Identifier	y		8055710	0					
ANR	8056604	Identifier	block_height		8055710	1					
ANR	8056605	PostIncDecOperationExpression	y ++	219:34:5031:5033	8055710	2	True				
ANR	8056606	Identifier	y		8055710	0					
ANR	8056607	IncDec	++		8055710	1					
ANR	8056608	CompoundStatement		209:39:4725:4725	8055710	3					
ANR	8056609	ForStatement	for ( i = 0 ; i < 16 && i + 16 * y < height ; i ++ )		8055710	0					
ANR	8056610	ForInit	i = 0 ;	221:13:5052:5057	8055710	0	True				
ANR	8056611	AssignmentExpression	i = 0		8055710	0		=			
ANR	8056612	Identifier	i		8055710	0					
ANR	8056613	PrimaryExpression	0		8055710	1					
ANR	8056614	Condition	i < 16 && i + 16 * y < height	221:20:5059:5087	8055710	1	True				
ANR	8056615	AndExpression	i < 16 && i + 16 * y < height		8055710	0		&&			
ANR	8056616	RelationalExpression	i < 16		8055710	0		<			
ANR	8056617	Identifier	i		8055710	0					
ANR	8056618	PrimaryExpression	16		8055710	1					
ANR	8056619	RelationalExpression	i + 16 * y < height		8055710	1		<			
ANR	8056620	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056621	Identifier	i		8055710	0					
ANR	8056622	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056623	PrimaryExpression	16		8055710	0					
ANR	8056624	Identifier	y		8055710	1					
ANR	8056625	Identifier	height		8055710	1					
ANR	8056626	PostIncDecOperationExpression	i ++	221:51:5090:5092	8055710	2	True				
ANR	8056627	Identifier	i		8055710	0					
ANR	8056628	IncDec	++		8055710	1					
ANR	8056629	CompoundStatement		211:56:4784:4784	8055710	3					
ANR	8056630	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"	223:12:5110:5200	8055710	0	True				
ANR	8056631	CallExpression	"memcpy ( & src [ i * stride ] , & src_plane [ ( i + 16 * y ) * src_stride ] , width )"		8055710	0					
ANR	8056632	Callee	memcpy		8055710	0					
ANR	8056633	Identifier	memcpy		8055710	0					
ANR	8056634	ArgumentList	& src [ i * stride ]		8055710	1					
ANR	8056635	Argument	& src [ i * stride ]		8055710	0					
ANR	8056636	UnaryOperationExpression	& src [ i * stride ]		8055710	0					
ANR	8056637	UnaryOperator	&		8055710	0					
ANR	8056638	ArrayIndexing	src [ i * stride ]		8055710	1					
ANR	8056639	Identifier	src		8055710	0					
ANR	8056640	MultiplicativeExpression	i * stride		8055710	1		*			
ANR	8056641	Identifier	i		8055710	0					
ANR	8056642	Identifier	stride		8055710	1					
ANR	8056643	Argument	& src_plane [ ( i + 16 * y ) * src_stride ]		8055710	1					
ANR	8056644	UnaryOperationExpression	& src_plane [ ( i + 16 * y ) * src_stride ]		8055710	0					
ANR	8056645	UnaryOperator	&		8055710	0					
ANR	8056646	ArrayIndexing	src_plane [ ( i + 16 * y ) * src_stride ]		8055710	1					
ANR	8056647	Identifier	src_plane		8055710	0					
ANR	8056648	MultiplicativeExpression	( i + 16 * y ) * src_stride		8055710	1		*			
ANR	8056649	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056650	Identifier	i		8055710	0					
ANR	8056651	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056652	PrimaryExpression	16		8055710	0					
ANR	8056653	Identifier	y		8055710	1					
ANR	8056654	Identifier	src_stride		8055710	1					
ANR	8056655	Argument	width		8055710	2					
ANR	8056656	Identifier	width		8055710	0					
ANR	8056657	ForStatement	for ( x = width ; x < 16 * block_width ; x ++ )		8055710	1					
ANR	8056658	ForInit	x = width ;	227:17:5220:5229	8055710	0	True				
ANR	8056659	AssignmentExpression	x = width		8055710	0		=			
ANR	8056660	Identifier	x		8055710	0					
ANR	8056661	Identifier	width		8055710	1					
ANR	8056662	Condition	x < 16 * block_width	227:28:5231:5250	8055710	1	True				
ANR	8056663	RelationalExpression	x < 16 * block_width		8055710	0		<			
ANR	8056664	Identifier	x		8055710	0					
ANR	8056665	MultiplicativeExpression	16 * block_width		8055710	1		*			
ANR	8056666	PrimaryExpression	16		8055710	0					
ANR	8056667	Identifier	block_width		8055710	1					
ANR	8056668	PostIncDecOperationExpression	x ++	227:50:5253:5255	8055710	2	True				
ANR	8056669	Identifier	x		8055710	0					
ANR	8056670	IncDec	++		8055710	1					
ANR	8056671	ExpressionStatement	src [ i * stride + x ] = src [ i * stride + x - 1 ]	229:16:5275:5320	8055710	3	True				
ANR	8056672	AssignmentExpression	src [ i * stride + x ] = src [ i * stride + x - 1 ]		8055710	0		=			
ANR	8056673	ArrayIndexing	src [ i * stride + x ]		8055710	0					
ANR	8056674	Identifier	src		8055710	0					
ANR	8056675	AdditiveExpression	i * stride + x		8055710	1		+			
ANR	8056676	MultiplicativeExpression	i * stride		8055710	0		*			
ANR	8056677	Identifier	i		8055710	0					
ANR	8056678	Identifier	stride		8055710	1					
ANR	8056679	Identifier	x		8055710	1					
ANR	8056680	ArrayIndexing	src [ i * stride + x - 1 ]		8055710	1					
ANR	8056681	Identifier	src		8055710	0					
ANR	8056682	AdditiveExpression	i * stride + x - 1		8055710	1		+			
ANR	8056683	MultiplicativeExpression	i * stride		8055710	0		*			
ANR	8056684	Identifier	i		8055710	0					
ANR	8056685	Identifier	stride		8055710	1					
ANR	8056686	AdditiveExpression	x - 1		8055710	1		-			
ANR	8056687	Identifier	x		8055710	0					
ANR	8056688	PrimaryExpression	1		8055710	1					
ANR	8056689	ForStatement	for ( ; i < 16 && i + 16 * y < 16 * block_height ; i ++ )		8055710	1					
ANR	8056690	Condition	i < 16 && i + 16 * y < 16 * block_height	233:15:5349:5388	8055710	0	True				
ANR	8056691	AndExpression	i < 16 && i + 16 * y < 16 * block_height		8055710	0		&&			
ANR	8056692	RelationalExpression	i < 16		8055710	0		<			
ANR	8056693	Identifier	i		8055710	0					
ANR	8056694	PrimaryExpression	16		8055710	1					
ANR	8056695	RelationalExpression	i + 16 * y < 16 * block_height		8055710	1		<			
ANR	8056696	AdditiveExpression	i + 16 * y		8055710	0		+			
ANR	8056697	Identifier	i		8055710	0					
ANR	8056698	MultiplicativeExpression	16 * y		8055710	1		*			
ANR	8056699	PrimaryExpression	16		8055710	0					
ANR	8056700	Identifier	y		8055710	1					
ANR	8056701	MultiplicativeExpression	16 * block_height		8055710	1		*			
ANR	8056702	PrimaryExpression	16		8055710	0					
ANR	8056703	Identifier	block_height		8055710	1					
ANR	8056704	PostIncDecOperationExpression	i ++	233:57:5391:5393	8055710	1	True				
ANR	8056705	Identifier	i		8055710	0					
ANR	8056706	IncDec	++		8055710	1					
ANR	8056707	ExpressionStatement	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"	235:12:5409:5475	8055710	2	True				
ANR	8056708	CallExpression	"memcpy ( & src [ i * stride ] , & src [ ( i - 1 ) * stride ] , 16 * block_width )"		8055710	0					
ANR	8056709	Callee	memcpy		8055710	0					
ANR	8056710	Identifier	memcpy		8055710	0					
ANR	8056711	ArgumentList	& src [ i * stride ]		8055710	1					
ANR	8056712	Argument	& src [ i * stride ]		8055710	0					
ANR	8056713	UnaryOperationExpression	& src [ i * stride ]		8055710	0					
ANR	8056714	UnaryOperator	&		8055710	0					
ANR	8056715	ArrayIndexing	src [ i * stride ]		8055710	1					
ANR	8056716	Identifier	src		8055710	0					
ANR	8056717	MultiplicativeExpression	i * stride		8055710	1		*			
ANR	8056718	Identifier	i		8055710	0					
ANR	8056719	Identifier	stride		8055710	1					
ANR	8056720	Argument	& src [ ( i - 1 ) * stride ]		8055710	1					
ANR	8056721	UnaryOperationExpression	& src [ ( i - 1 ) * stride ]		8055710	0					
ANR	8056722	UnaryOperator	&		8055710	0					
ANR	8056723	ArrayIndexing	src [ ( i - 1 ) * stride ]		8055710	1					
ANR	8056724	Identifier	src		8055710	0					
ANR	8056725	MultiplicativeExpression	( i - 1 ) * stride		8055710	1		*			
ANR	8056726	AdditiveExpression	i - 1		8055710	0		-			
ANR	8056727	Identifier	i		8055710	0					
ANR	8056728	PrimaryExpression	1		8055710	1					
ANR	8056729	Identifier	stride		8055710	1					
ANR	8056730	Argument	16 * block_width		8055710	2					
ANR	8056731	MultiplicativeExpression	16 * block_width		8055710	0		*			
ANR	8056732	PrimaryExpression	16		8055710	0					
ANR	8056733	Identifier	block_width		8055710	1					
ANR	8056734	ExpressionStatement	s -> m . mb_y = y	239:8:5488:5501	8055710	2	True				
ANR	8056735	AssignmentExpression	s -> m . mb_y = y		8055710	0		=			
ANR	8056736	MemberAccess	s -> m . mb_y		8055710	0					
ANR	8056737	PtrMemberAccess	s -> m		8055710	0					
ANR	8056738	Identifier	s		8055710	0					
ANR	8056739	Identifier	m		8055710	1					
ANR	8056740	Identifier	mb_y		8055710	1					
ANR	8056741	Identifier	y		8055710	1					
ANR	8056742	ForStatement	for ( x = 0 ; x < block_width ; x ++ )		8055710	3					
ANR	8056743	ForInit	x = 0 ;	241:13:5517:5522	8055710	0	True				
ANR	8056744	AssignmentExpression	x = 0		8055710	0		=			
ANR	8056745	Identifier	x		8055710	0					
ANR	8056746	PrimaryExpression	0		8055710	1					
ANR	8056747	Condition	x < block_width	241:20:5524:5538	8055710	1	True				
ANR	8056748	RelationalExpression	x < block_width		8055710	0		<			
ANR	8056749	Identifier	x		8055710	0					
ANR	8056750	Identifier	block_width		8055710	1					
ANR	8056751	PostIncDecOperationExpression	x ++	241:37:5541:5543	8055710	2	True				
ANR	8056752	Identifier	x		8055710	0					
ANR	8056753	IncDec	++		8055710	1					
ANR	8056754	CompoundStatement		245:12:5551:5583	8055710	3					
ANR	8056755	Statement	uint8_t	243:12:5561:5567	8055710	0	True				
ANR	8056756	ExpressionStatement	reorder_buffer [ 3 ] [ 6 ] [ 7 * 32 ]	243:20:5569:5597	8055710	1	True				
ANR	8056757	ArrayIndexing	reorder_buffer [ 3 ] [ 6 ] [ 7 * 32 ]		8055710	0					
ANR	8056758	ArrayIndexing	reorder_buffer [ 3 ] [ 6 ]		8055710	0					
ANR	8056759	ArrayIndexing	reorder_buffer [ 3 ]		8055710	0					
ANR	8056760	Identifier	reorder_buffer		8055710	0					
ANR	8056761	PrimaryExpression	3		8055710	1					
ANR	8056762	PrimaryExpression	6		8055710	1					
ANR	8056763	MultiplicativeExpression	7 * 32		8055710	1		*			
ANR	8056764	PrimaryExpression	7		8055710	0					
ANR	8056765	PrimaryExpression	32		8055710	1					
ANR	8056766	Statement	int	245:12:5612:5614	8055710	2	True				
ANR	8056767	ExpressionStatement	count [ 3 ] [ 6 ]	245:16:5616:5627	8055710	3	True				
ANR	8056768	ArrayIndexing	count [ 3 ] [ 6 ]		8055710	0					
ANR	8056769	ArrayIndexing	count [ 3 ]		8055710	0					
ANR	8056770	Identifier	count		8055710	0					
ANR	8056771	PrimaryExpression	3		8055710	1					
ANR	8056772	PrimaryExpression	6		8055710	1					
ANR	8056773	IdentifierDeclStatement	int offset = y * 16 * stride + x * 16 ;	247:12:5642:5685	8055710	4	True				
ANR	8056774	IdentifierDecl	offset = y * 16 * stride + x * 16		8055710	0					
ANR	8056775	IdentifierDeclType	int		8055710	0					
ANR	8056776	Identifier	offset		8055710	1					
ANR	8056777	AssignmentExpression	offset = y * 16 * stride + x * 16		8055710	2		=			
ANR	8056778	Identifier	offset		8055710	0					
ANR	8056779	AdditiveExpression	y * 16 * stride + x * 16		8055710	1		+			
ANR	8056780	MultiplicativeExpression	y * 16 * stride		8055710	0		*			
ANR	8056781	Identifier	y		8055710	0					
ANR	8056782	MultiplicativeExpression	16 * stride		8055710	1		*			
ANR	8056783	PrimaryExpression	16		8055710	0					
ANR	8056784	Identifier	stride		8055710	1					
ANR	8056785	MultiplicativeExpression	x * 16		8055710	1		*			
ANR	8056786	Identifier	x		8055710	0					
ANR	8056787	PrimaryExpression	16		8055710	1					
ANR	8056788	IdentifierDeclStatement	uint8_t * decoded = decoded_plane + offset ;	249:12:5700:5741	8055710	5	True				
ANR	8056789	IdentifierDecl	* decoded = decoded_plane + offset		8055710	0					
ANR	8056790	IdentifierDeclType	uint8_t *		8055710	0					
ANR	8056791	Identifier	decoded		8055710	1					
ANR	8056792	AssignmentExpression	* decoded = decoded_plane + offset		8055710	2		=			
ANR	8056793	Identifier	decoded		8055710	0					
ANR	8056794	AdditiveExpression	decoded_plane + offset		8055710	1		+			
ANR	8056795	Identifier	decoded_plane		8055710	0					
ANR	8056796	Identifier	offset		8055710	1					
ANR	8056797	IdentifierDeclStatement	uint8_t * ref = ref_plane + offset ;	251:12:5756:5793	8055710	6	True				
ANR	8056798	IdentifierDecl	* ref = ref_plane + offset		8055710	0					
ANR	8056799	IdentifierDeclType	uint8_t *		8055710	0					
ANR	8056800	Identifier	ref		8055710	1					
ANR	8056801	AssignmentExpression	* ref = ref_plane + offset		8055710	2		=			
ANR	8056802	Identifier	ref		8055710	0					
ANR	8056803	AdditiveExpression	ref_plane + offset		8055710	1		+			
ANR	8056804	Identifier	ref_plane		8055710	0					
ANR	8056805	Identifier	offset		8055710	1					
ANR	8056806	IdentifierDeclStatement	"int score [ 4 ] = { 0 , 0 , 0 , 0 } , best ;"	253:12:5808:5847	8055710	7	True				
ANR	8056807	IdentifierDecl	"score [ 4 ] = { 0 , 0 , 0 , 0 }"		8055710	0					
ANR	8056808	IdentifierDeclType	int [ 4 ]		8055710	0					
ANR	8056809	Identifier	score		8055710	1					
ANR	8056810	PrimaryExpression	4		8055710	2					
ANR	8056811	AssignmentExpression	"score [ 4 ] = { 0 , 0 , 0 , 0 }"		8055710	3		=			
ANR	8056812	Identifier	score		8055710	0					
ANR	8056813	InitializerList	0		8055710	1					
ANR	8056814	PrimaryExpression	0		8055710	0					
ANR	8056815	PrimaryExpression	0		8055710	1					
ANR	8056816	PrimaryExpression	0		8055710	2					
ANR	8056817	PrimaryExpression	0		8055710	3					
ANR	8056818	IdentifierDecl	best		8055710	1					
ANR	8056819	IdentifierDeclType	int		8055710	0					
ANR	8056820	Identifier	best		8055710	1					
ANR	8056821	IdentifierDeclStatement	uint8_t * temp = s -> scratchbuf ;	255:12:5862:5894	8055710	8	True				
ANR	8056822	IdentifierDecl	* temp = s -> scratchbuf		8055710	0					
ANR	8056823	IdentifierDeclType	uint8_t *		8055710	0					
ANR	8056824	Identifier	temp		8055710	1					
ANR	8056825	AssignmentExpression	* temp = s -> scratchbuf		8055710	2		=			
ANR	8056826	Identifier	temp		8055710	0					
ANR	8056827	PtrMemberAccess	s -> scratchbuf		8055710	1					
ANR	8056828	Identifier	s		8055710	0					
ANR	8056829	Identifier	scratchbuf		8055710	1					
ANR	8056830	IfStatement	if ( s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000 )		8055710	9					
ANR	8056831	Condition	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000	259:16:5915:5995	8055710	0	True				
ANR	8056832	RelationalExpression	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 ) < 3000		8055710	0		<			
ANR	8056833	AdditiveExpression	s -> pb . buf_end - s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 )		8055710	0		-			
ANR	8056834	MemberAccess	s -> pb . buf_end		8055710	0					
ANR	8056835	PtrMemberAccess	s -> pb		8055710	0					
ANR	8056836	Identifier	s		8055710	0					
ANR	8056837	Identifier	pb		8055710	1					
ANR	8056838	Identifier	buf_end		8055710	1					
ANR	8056839	AdditiveExpression	s -> pb . buf - ( put_bits_count ( & s -> pb ) >> 3 )		8055710	1		-			
ANR	8056840	MemberAccess	s -> pb . buf		8055710	0					
ANR	8056841	PtrMemberAccess	s -> pb		8055710	0					
ANR	8056842	Identifier	s		8055710	0					
ANR	8056843	Identifier	pb		8055710	1					
ANR	8056844	Identifier	buf		8055710	1					
ANR	8056845	ShiftExpression	put_bits_count ( & s -> pb ) >> 3		8055710	1		>>			
ANR	8056846	CallExpression	put_bits_count ( & s -> pb )		8055710	0					
ANR	8056847	Callee	put_bits_count		8055710	0					
ANR	8056848	Identifier	put_bits_count		8055710	0					
ANR	8056849	ArgumentList	& s -> pb		8055710	1					
ANR	8056850	Argument	& s -> pb		8055710	0					
ANR	8056851	UnaryOperationExpression	& s -> pb		8055710	0					
ANR	8056852	UnaryOperator	&		8055710	0					
ANR	8056853	PtrMemberAccess	s -> pb		8055710	1					
ANR	8056854	Identifier	s		8055710	0					
ANR	8056855	Identifier	pb		8055710	1					
ANR	8056856	PrimaryExpression	3		8055710	1					
ANR	8056857	PrimaryExpression	3000		8055710	1					
ANR	8056858	CompoundStatement		251:54:5687:5687	8055710	1					
ANR	8056859	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"	263:16:6038:6097	8055710	0	True				
ANR	8056860	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"		8055710	0					
ANR	8056861	Callee	av_log		8055710	0					
ANR	8056862	Identifier	av_log		8055710	0					
ANR	8056863	ArgumentList	s -> avctx		8055710	1					
ANR	8056864	Argument	s -> avctx		8055710	0					
ANR	8056865	PtrMemberAccess	s -> avctx		8055710	0					
ANR	8056866	Identifier	s		8055710	0					
ANR	8056867	Identifier	avctx		8055710	1					
ANR	8056868	Argument	AV_LOG_ERROR		8055710	1					
ANR	8056869	Identifier	AV_LOG_ERROR		8055710	0					
ANR	8056870	Argument	"""encoded frame too large\\n"""		8055710	2					
ANR	8056871	PrimaryExpression	"""encoded frame too large\\n"""		8055710	0					
ANR	8056872	ReturnStatement	return - 1 ;	265:16:6116:6125	8055710	1	True				
ANR	8056873	UnaryOperationExpression	- 1		8055710	0					
ANR	8056874	UnaryOperator	-		8055710	0					
ANR	8056875	PrimaryExpression	1		8055710	1					
ANR	8056876	ExpressionStatement	s -> m . mb_x = x	271:12:6157:6170	8055710	10	True				
ANR	8056877	AssignmentExpression	s -> m . mb_x = x		8055710	0		=			
ANR	8056878	MemberAccess	s -> m . mb_x		8055710	0					
ANR	8056879	PtrMemberAccess	s -> m		8055710	0					
ANR	8056880	Identifier	s		8055710	0					
ANR	8056881	Identifier	m		8055710	1					
ANR	8056882	Identifier	mb_x		8055710	1					
ANR	8056883	Identifier	x		8055710	1					
ANR	8056884	ExpressionStatement	ff_init_block_index ( & s -> m )	273:12:6185:6211	8055710	11	True				
ANR	8056885	CallExpression	ff_init_block_index ( & s -> m )		8055710	0					
ANR	8056886	Callee	ff_init_block_index		8055710	0					
ANR	8056887	Identifier	ff_init_block_index		8055710	0					
ANR	8056888	ArgumentList	& s -> m		8055710	1					
ANR	8056889	Argument	& s -> m		8055710	0					
ANR	8056890	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056891	UnaryOperator	&		8055710	0					
ANR	8056892	PtrMemberAccess	s -> m		8055710	1					
ANR	8056893	Identifier	s		8055710	0					
ANR	8056894	Identifier	m		8055710	1					
ANR	8056895	ExpressionStatement	ff_update_block_index ( & s -> m )	275:12:6226:6254	8055710	12	True				
ANR	8056896	CallExpression	ff_update_block_index ( & s -> m )		8055710	0					
ANR	8056897	Callee	ff_update_block_index		8055710	0					
ANR	8056898	Identifier	ff_update_block_index		8055710	0					
ANR	8056899	ArgumentList	& s -> m		8055710	1					
ANR	8056900	Argument	& s -> m		8055710	0					
ANR	8056901	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8056902	UnaryOperator	&		8055710	0					
ANR	8056903	PtrMemberAccess	s -> m		8055710	1					
ANR	8056904	Identifier	s		8055710	0					
ANR	8056905	Identifier	m		8055710	1					
ANR	8056906	IfStatement	if ( f -> pict_type == AV_PICTURE_TYPE_I || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA ) )		8055710	13					
ANR	8056907	Condition	f -> pict_type == AV_PICTURE_TYPE_I || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA )	279:16:6275:6410	8055710	0	True				
ANR	8056908	OrExpression	f -> pict_type == AV_PICTURE_TYPE_I || ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA )		8055710	0		||			
ANR	8056909	EqualityExpression	f -> pict_type == AV_PICTURE_TYPE_I		8055710	0		==			
ANR	8056910	PtrMemberAccess	f -> pict_type		8055710	0					
ANR	8056911	Identifier	f		8055710	0					
ANR	8056912	Identifier	pict_type		8055710	1					
ANR	8056913	Identifier	AV_PICTURE_TYPE_I		8055710	1					
ANR	8056914	BitAndExpression	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTRA		8055710	1		&			
ANR	8056915	ArrayIndexing	s -> m . mb_type [ x + y * s -> m . mb_stride ]		8055710	0					
ANR	8056916	MemberAccess	s -> m . mb_type		8055710	0					
ANR	8056917	PtrMemberAccess	s -> m		8055710	0					
ANR	8056918	Identifier	s		8055710	0					
ANR	8056919	Identifier	m		8055710	1					
ANR	8056920	Identifier	mb_type		8055710	1					
ANR	8056921	AdditiveExpression	x + y * s -> m . mb_stride		8055710	1		+			
ANR	8056922	Identifier	x		8055710	0					
ANR	8056923	MultiplicativeExpression	y * s -> m . mb_stride		8055710	1		*			
ANR	8056924	Identifier	y		8055710	0					
ANR	8056925	MemberAccess	s -> m . mb_stride		8055710	1					
ANR	8056926	PtrMemberAccess	s -> m		8055710	0					
ANR	8056927	Identifier	s		8055710	0					
ANR	8056928	Identifier	m		8055710	1					
ANR	8056929	Identifier	mb_stride		8055710	1					
ANR	8056930	Identifier	CANDIDATE_MB_TYPE_INTRA		8055710	1					
ANR	8056931	CompoundStatement		273:43:6102:6102	8055710	1					
ANR	8056932	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8055710	0					
ANR	8056933	ForInit	i = 0 ;	285:21:6437:6442	8055710	0	True				
ANR	8056934	AssignmentExpression	i = 0		8055710	0		=			
ANR	8056935	Identifier	i		8055710	0					
ANR	8056936	PrimaryExpression	0		8055710	1					
ANR	8056937	Condition	i < 6	285:28:6444:6448	8055710	1	True				
ANR	8056938	RelationalExpression	i < 6		8055710	0		<			
ANR	8056939	Identifier	i		8055710	0					
ANR	8056940	PrimaryExpression	6		8055710	1					
ANR	8056941	PostIncDecOperationExpression	i ++	285:35:6451:6453	8055710	2	True				
ANR	8056942	Identifier	i		8055710	0					
ANR	8056943	IncDec	++		8055710	1					
ANR	8056944	ExpressionStatement	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 0 ] [ i ] , 7 * 32 )"	287:20:6477:6574	8055710	3	True				
ANR	8056945	CallExpression	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 0 ] [ i ] , 7 * 32 )"		8055710	0					
ANR	8056946	Callee	init_put_bits		8055710	0					
ANR	8056947	Identifier	init_put_bits		8055710	0					
ANR	8056948	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8056949	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8056950	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8056951	UnaryOperator	&		8055710	0					
ANR	8056952	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8056953	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8056954	Identifier	s		8055710	0					
ANR	8056955	Identifier	reorder_pb		8055710	1					
ANR	8056956	Identifier	i		8055710	1					
ANR	8056957	Argument	reorder_buffer [ 0 ] [ i ]		8055710	1					
ANR	8056958	ArrayIndexing	reorder_buffer [ 0 ] [ i ]		8055710	0					
ANR	8056959	ArrayIndexing	reorder_buffer [ 0 ]		8055710	0					
ANR	8056960	Identifier	reorder_buffer		8055710	0					
ANR	8056961	PrimaryExpression	0		8055710	1					
ANR	8056962	Identifier	i		8055710	1					
ANR	8056963	Argument	7 * 32		8055710	2					
ANR	8056964	MultiplicativeExpression	7 * 32		8055710	0		*			
ANR	8056965	PrimaryExpression	7		8055710	0					
ANR	8056966	PrimaryExpression	32		8055710	1					
ANR	8056967	IfStatement	if ( f -> pict_type == AV_PICTURE_TYPE_P )		8055710	1					
ANR	8056968	Condition	f -> pict_type == AV_PICTURE_TYPE_P	291:20:6597:6629	8055710	0	True				
ANR	8056969	EqualityExpression	f -> pict_type == AV_PICTURE_TYPE_P		8055710	0		==			
ANR	8056970	PtrMemberAccess	f -> pict_type		8055710	0					
ANR	8056971	Identifier	f		8055710	0					
ANR	8056972	Identifier	pict_type		8055710	1					
ANR	8056973	Identifier	AV_PICTURE_TYPE_P		8055710	1					
ANR	8056974	CompoundStatement		283:20:6344:6405	8055710	1					
ANR	8056975	IdentifierDeclStatement	const uint8_t * vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ] ;	293:20:6655:6716	8055710	0	True				
ANR	8056976	IdentifierDecl	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8055710	0					
ANR	8056977	IdentifierDeclType	const uint8_t *		8055710	0					
ANR	8056978	Identifier	vlc		8055710	1					
ANR	8056979	AssignmentExpression	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8055710	2		=			
ANR	8056980	Identifier	vlc		8055710	0					
ANR	8056981	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTRA ]		8055710	1					
ANR	8056982	Identifier	ff_svq1_block_type_vlc		8055710	0					
ANR	8056983	Identifier	SVQ1_BLOCK_INTRA		8055710	1					
ANR	8056984	ExpressionStatement	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"	295:20:6739:6782	8055710	1	True				
ANR	8056985	CallExpression	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"		8055710	0					
ANR	8056986	Callee	put_bits		8055710	0					
ANR	8056987	Identifier	put_bits		8055710	0					
ANR	8056988	ArgumentList	& s -> reorder_pb [ 5 ]		8055710	1					
ANR	8056989	Argument	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8056990	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8056991	UnaryOperator	&		8055710	0					
ANR	8056992	ArrayIndexing	s -> reorder_pb [ 5 ]		8055710	1					
ANR	8056993	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8056994	Identifier	s		8055710	0					
ANR	8056995	Identifier	reorder_pb		8055710	1					
ANR	8056996	PrimaryExpression	5		8055710	1					
ANR	8056997	Argument	vlc [ 1 ]		8055710	1					
ANR	8056998	ArrayIndexing	vlc [ 1 ]		8055710	0					
ANR	8056999	Identifier	vlc		8055710	0					
ANR	8057000	PrimaryExpression	1		8055710	1					
ANR	8057001	Argument	vlc [ 0 ]		8055710	2					
ANR	8057002	ArrayIndexing	vlc [ 0 ]		8055710	0					
ANR	8057003	Identifier	vlc		8055710	0					
ANR	8057004	PrimaryExpression	0		8055710	1					
ANR	8057005	ExpressionStatement	score [ 0 ] = vlc [ 1 ] * lambda	297:20:6805:6831	8055710	2	True				
ANR	8057006	AssignmentExpression	score [ 0 ] = vlc [ 1 ] * lambda		8055710	0		=			
ANR	8057007	ArrayIndexing	score [ 0 ]		8055710	0					
ANR	8057008	Identifier	score		8055710	0					
ANR	8057009	PrimaryExpression	0		8055710	1					
ANR	8057010	MultiplicativeExpression	vlc [ 1 ] * lambda		8055710	1		*			
ANR	8057011	ArrayIndexing	vlc [ 1 ]		8055710	0					
ANR	8057012	Identifier	vlc		8055710	0					
ANR	8057013	PrimaryExpression	1		8055710	1					
ANR	8057014	Identifier	lambda		8055710	1					
ANR	8057015	ExpressionStatement	"score [ 0 ] += encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"	301:16:6869:6990	8055710	2	True				
ANR	8057016	AssignmentExpression	"score [ 0 ] += encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"		8055710	0		+=			
ANR	8057017	ArrayIndexing	score [ 0 ]		8055710	0					
ANR	8057018	Identifier	score		8055710	0					
ANR	8057019	PrimaryExpression	0		8055710	1					
ANR	8057020	CallExpression	"encode_block ( s , src + 16 * x , NULL , temp , stride , 5 , 64 , lambda , 1 )"		8055710	1					
ANR	8057021	Callee	encode_block		8055710	0					
ANR	8057022	Identifier	encode_block		8055710	0					
ANR	8057023	ArgumentList	s		8055710	1					
ANR	8057024	Argument	s		8055710	0					
ANR	8057025	Identifier	s		8055710	0					
ANR	8057026	Argument	src + 16 * x		8055710	1					
ANR	8057027	AdditiveExpression	src + 16 * x		8055710	0		+			
ANR	8057028	Identifier	src		8055710	0					
ANR	8057029	MultiplicativeExpression	16 * x		8055710	1		*			
ANR	8057030	PrimaryExpression	16		8055710	0					
ANR	8057031	Identifier	x		8055710	1					
ANR	8057032	Argument	NULL		8055710	2					
ANR	8057033	Identifier	NULL		8055710	0					
ANR	8057034	Argument	temp		8055710	3					
ANR	8057035	Identifier	temp		8055710	0					
ANR	8057036	Argument	stride		8055710	4					
ANR	8057037	Identifier	stride		8055710	0					
ANR	8057038	Argument	5		8055710	5					
ANR	8057039	PrimaryExpression	5		8055710	0					
ANR	8057040	Argument	64		8055710	6					
ANR	8057041	PrimaryExpression	64		8055710	0					
ANR	8057042	Argument	lambda		8055710	7					
ANR	8057043	Identifier	lambda		8055710	0					
ANR	8057044	Argument	1		8055710	8					
ANR	8057045	PrimaryExpression	1		8055710	0					
ANR	8057046	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8055710	3					
ANR	8057047	ForInit	i = 0 ;	305:21:7014:7019	8055710	0	True				
ANR	8057048	AssignmentExpression	i = 0		8055710	0		=			
ANR	8057049	Identifier	i		8055710	0					
ANR	8057050	PrimaryExpression	0		8055710	1					
ANR	8057051	Condition	i < 6	305:28:7021:7025	8055710	1	True				
ANR	8057052	RelationalExpression	i < 6		8055710	0		<			
ANR	8057053	Identifier	i		8055710	0					
ANR	8057054	PrimaryExpression	6		8055710	1					
ANR	8057055	PostIncDecOperationExpression	i ++	305:35:7028:7030	8055710	2	True				
ANR	8057056	Identifier	i		8055710	0					
ANR	8057057	IncDec	++		8055710	1					
ANR	8057058	CompoundStatement		295:40:6722:6722	8055710	3					
ANR	8057059	ExpressionStatement	count [ 0 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )	307:20:7056:7103	8055710	0	True				
ANR	8057060	AssignmentExpression	count [ 0 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )		8055710	0		=			
ANR	8057061	ArrayIndexing	count [ 0 ] [ i ]		8055710	0					
ANR	8057062	ArrayIndexing	count [ 0 ]		8055710	0					
ANR	8057063	Identifier	count		8055710	0					
ANR	8057064	PrimaryExpression	0		8055710	1					
ANR	8057065	Identifier	i		8055710	1					
ANR	8057066	CallExpression	put_bits_count ( & s -> reorder_pb [ i ] )		8055710	1					
ANR	8057067	Callee	put_bits_count		8055710	0					
ANR	8057068	Identifier	put_bits_count		8055710	0					
ANR	8057069	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8057070	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057071	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057072	UnaryOperator	&		8055710	0					
ANR	8057073	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8057074	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057075	Identifier	s		8055710	0					
ANR	8057076	Identifier	reorder_pb		8055710	1					
ANR	8057077	Identifier	i		8055710	1					
ANR	8057078	ExpressionStatement	flush_put_bits ( & s -> reorder_pb [ i ] )	309:20:7126:7159	8055710	1	True				
ANR	8057079	CallExpression	flush_put_bits ( & s -> reorder_pb [ i ] )		8055710	0					
ANR	8057080	Callee	flush_put_bits		8055710	0					
ANR	8057081	Identifier	flush_put_bits		8055710	0					
ANR	8057082	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8057083	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057084	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057085	UnaryOperator	&		8055710	0					
ANR	8057086	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8057087	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057088	Identifier	s		8055710	0					
ANR	8057089	Identifier	reorder_pb		8055710	1					
ANR	8057090	Identifier	i		8055710	1					
ANR	8057091	ElseStatement	else		8055710	0					
ANR	8057092	ExpressionStatement	score [ 0 ] = INT_MAX	315:16:7217:7235	8055710	0	True				
ANR	8057093	AssignmentExpression	score [ 0 ] = INT_MAX		8055710	0		=			
ANR	8057094	ArrayIndexing	score [ 0 ]		8055710	0					
ANR	8057095	Identifier	score		8055710	0					
ANR	8057096	PrimaryExpression	0		8055710	1					
ANR	8057097	Identifier	INT_MAX		8055710	1					
ANR	8057098	ExpressionStatement	best = 0	319:12:7252:7260	8055710	14	True				
ANR	8057099	AssignmentExpression	best = 0		8055710	0		=			
ANR	8057100	Identifier	best		8055710	0					
ANR	8057101	PrimaryExpression	0		8055710	1					
ANR	8057102	IfStatement	if ( f -> pict_type == AV_PICTURE_TYPE_P )		8055710	15					
ANR	8057103	Condition	f -> pict_type == AV_PICTURE_TYPE_P	323:16:7281:7313	8055710	0	True				
ANR	8057104	EqualityExpression	f -> pict_type == AV_PICTURE_TYPE_P		8055710	0		==			
ANR	8057105	PtrMemberAccess	f -> pict_type		8055710	0					
ANR	8057106	Identifier	f		8055710	0					
ANR	8057107	Identifier	pict_type		8055710	1					
ANR	8057108	Identifier	AV_PICTURE_TYPE_P		8055710	1					
ANR	8057109	CompoundStatement		319:16:7154:7173	8055710	1					
ANR	8057110	IdentifierDeclStatement	const uint8_t * vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ] ;	325:16:7335:7396	8055710	0	True				
ANR	8057111	IdentifierDecl	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8055710	0					
ANR	8057112	IdentifierDeclType	const uint8_t *		8055710	0					
ANR	8057113	Identifier	vlc		8055710	1					
ANR	8057114	AssignmentExpression	* vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8055710	2		=			
ANR	8057115	Identifier	vlc		8055710	0					
ANR	8057116	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_INTER ]		8055710	1					
ANR	8057117	Identifier	ff_svq1_block_type_vlc		8055710	0					
ANR	8057118	Identifier	SVQ1_BLOCK_INTER		8055710	1					
ANR	8057119	IdentifierDeclStatement	"int mx , my , pred_x , pred_y , dxy ;"	327:16:7415:7446	8055710	1	True				
ANR	8057120	IdentifierDecl	mx		8055710	0					
ANR	8057121	IdentifierDeclType	int		8055710	0					
ANR	8057122	Identifier	mx		8055710	1					
ANR	8057123	IdentifierDecl	my		8055710	1					
ANR	8057124	IdentifierDeclType	int		8055710	0					
ANR	8057125	Identifier	my		8055710	1					
ANR	8057126	IdentifierDecl	pred_x		8055710	2					
ANR	8057127	IdentifierDeclType	int		8055710	0					
ANR	8057128	Identifier	pred_x		8055710	1					
ANR	8057129	IdentifierDecl	pred_y		8055710	3					
ANR	8057130	IdentifierDeclType	int		8055710	0					
ANR	8057131	Identifier	pred_y		8055710	1					
ANR	8057132	IdentifierDecl	dxy		8055710	4					
ANR	8057133	IdentifierDeclType	int		8055710	0					
ANR	8057134	Identifier	dxy		8055710	1					
ANR	8057135	IdentifierDeclStatement	int16_t * motion_ptr ;	329:16:7465:7484	8055710	2	True				
ANR	8057136	IdentifierDecl	* motion_ptr		8055710	0					
ANR	8057137	IdentifierDeclType	int16_t *		8055710	0					
ANR	8057138	Identifier	motion_ptr		8055710	1					
ANR	8057139	ExpressionStatement	"motion_ptr = ff_h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"	333:16:7505:7568	8055710	3	True				
ANR	8057140	AssignmentExpression	"motion_ptr = ff_h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"		8055710	0		=			
ANR	8057141	Identifier	motion_ptr		8055710	0					
ANR	8057142	CallExpression	"ff_h263_pred_motion ( & s -> m , 0 , 0 , & pred_x , & pred_y )"		8055710	1					
ANR	8057143	Callee	ff_h263_pred_motion		8055710	0					
ANR	8057144	Identifier	ff_h263_pred_motion		8055710	0					
ANR	8057145	ArgumentList	& s -> m		8055710	1					
ANR	8057146	Argument	& s -> m		8055710	0					
ANR	8057147	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8057148	UnaryOperator	&		8055710	0					
ANR	8057149	PtrMemberAccess	s -> m		8055710	1					
ANR	8057150	Identifier	s		8055710	0					
ANR	8057151	Identifier	m		8055710	1					
ANR	8057152	Argument	0		8055710	1					
ANR	8057153	PrimaryExpression	0		8055710	0					
ANR	8057154	Argument	0		8055710	2					
ANR	8057155	PrimaryExpression	0		8055710	0					
ANR	8057156	Argument	& pred_x		8055710	3					
ANR	8057157	UnaryOperationExpression	& pred_x		8055710	0					
ANR	8057158	UnaryOperator	&		8055710	0					
ANR	8057159	Identifier	pred_x		8055710	1					
ANR	8057160	Argument	& pred_y		8055710	4					
ANR	8057161	UnaryOperationExpression	& pred_y		8055710	0					
ANR	8057162	UnaryOperator	&		8055710	0					
ANR	8057163	Identifier	pred_y		8055710	1					
ANR	8057164	IfStatement	if ( s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER )		8055710	4					
ANR	8057165	Condition	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER	335:20:7591:7673	8055710	0	True				
ANR	8057166	BitAndExpression	s -> m . mb_type [ x + y * s -> m . mb_stride ] & CANDIDATE_MB_TYPE_INTER		8055710	0		&			
ANR	8057167	ArrayIndexing	s -> m . mb_type [ x + y * s -> m . mb_stride ]		8055710	0					
ANR	8057168	MemberAccess	s -> m . mb_type		8055710	0					
ANR	8057169	PtrMemberAccess	s -> m		8055710	0					
ANR	8057170	Identifier	s		8055710	0					
ANR	8057171	Identifier	m		8055710	1					
ANR	8057172	Identifier	mb_type		8055710	1					
ANR	8057173	AdditiveExpression	x + y * s -> m . mb_stride		8055710	1		+			
ANR	8057174	Identifier	x		8055710	0					
ANR	8057175	MultiplicativeExpression	y * s -> m . mb_stride		8055710	1		*			
ANR	8057176	Identifier	y		8055710	0					
ANR	8057177	MemberAccess	s -> m . mb_stride		8055710	1					
ANR	8057178	PtrMemberAccess	s -> m		8055710	0					
ANR	8057179	Identifier	s		8055710	0					
ANR	8057180	Identifier	m		8055710	1					
ANR	8057181	Identifier	mb_stride		8055710	1					
ANR	8057182	Identifier	CANDIDATE_MB_TYPE_INTER		8055710	1					
ANR	8057183	CompoundStatement		327:45:7365:7365	8055710	1					
ANR	8057184	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8055710	0					
ANR	8057185	ForInit	i = 0 ;	339:25:7704:7709	8055710	0	True				
ANR	8057186	AssignmentExpression	i = 0		8055710	0		=			
ANR	8057187	Identifier	i		8055710	0					
ANR	8057188	PrimaryExpression	0		8055710	1					
ANR	8057189	Condition	i < 6	339:32:7711:7715	8055710	1	True				
ANR	8057190	RelationalExpression	i < 6		8055710	0		<			
ANR	8057191	Identifier	i		8055710	0					
ANR	8057192	PrimaryExpression	6		8055710	1					
ANR	8057193	PostIncDecOperationExpression	i ++	339:39:7718:7720	8055710	2	True				
ANR	8057194	Identifier	i		8055710	0					
ANR	8057195	IncDec	++		8055710	1					
ANR	8057196	ExpressionStatement	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 1 ] [ i ] , 7 * 32 )"	341:24:7748:7849	8055710	3	True				
ANR	8057197	CallExpression	"init_put_bits ( & s -> reorder_pb [ i ] , reorder_buffer [ 1 ] [ i ] , 7 * 32 )"		8055710	0					
ANR	8057198	Callee	init_put_bits		8055710	0					
ANR	8057199	Identifier	init_put_bits		8055710	0					
ANR	8057200	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8057201	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057202	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057203	UnaryOperator	&		8055710	0					
ANR	8057204	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8057205	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057206	Identifier	s		8055710	0					
ANR	8057207	Identifier	reorder_pb		8055710	1					
ANR	8057208	Identifier	i		8055710	1					
ANR	8057209	Argument	reorder_buffer [ 1 ] [ i ]		8055710	1					
ANR	8057210	ArrayIndexing	reorder_buffer [ 1 ] [ i ]		8055710	0					
ANR	8057211	ArrayIndexing	reorder_buffer [ 1 ]		8055710	0					
ANR	8057212	Identifier	reorder_buffer		8055710	0					
ANR	8057213	PrimaryExpression	1		8055710	1					
ANR	8057214	Identifier	i		8055710	1					
ANR	8057215	Argument	7 * 32		8055710	2					
ANR	8057216	MultiplicativeExpression	7 * 32		8055710	0		*			
ANR	8057217	PrimaryExpression	7		8055710	0					
ANR	8057218	PrimaryExpression	32		8055710	1					
ANR	8057219	ExpressionStatement	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"	347:20:7874:7917	8055710	1	True				
ANR	8057220	CallExpression	"put_bits ( & s -> reorder_pb [ 5 ] , vlc [ 1 ] , vlc [ 0 ] )"		8055710	0					
ANR	8057221	Callee	put_bits		8055710	0					
ANR	8057222	Identifier	put_bits		8055710	0					
ANR	8057223	ArgumentList	& s -> reorder_pb [ 5 ]		8055710	1					
ANR	8057224	Argument	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8057225	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8057226	UnaryOperator	&		8055710	0					
ANR	8057227	ArrayIndexing	s -> reorder_pb [ 5 ]		8055710	1					
ANR	8057228	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057229	Identifier	s		8055710	0					
ANR	8057230	Identifier	reorder_pb		8055710	1					
ANR	8057231	PrimaryExpression	5		8055710	1					
ANR	8057232	Argument	vlc [ 1 ]		8055710	1					
ANR	8057233	ArrayIndexing	vlc [ 1 ]		8055710	0					
ANR	8057234	Identifier	vlc		8055710	0					
ANR	8057235	PrimaryExpression	1		8055710	1					
ANR	8057236	Argument	vlc [ 0 ]		8055710	2					
ANR	8057237	ArrayIndexing	vlc [ 0 ]		8055710	0					
ANR	8057238	Identifier	vlc		8055710	0					
ANR	8057239	PrimaryExpression	0		8055710	1					
ANR	8057240	ExpressionStatement	s -> m . pb = s -> reorder_pb [ 5 ]	351:20:7942:7968	8055710	2	True				
ANR	8057241	AssignmentExpression	s -> m . pb = s -> reorder_pb [ 5 ]		8055710	0		=			
ANR	8057242	MemberAccess	s -> m . pb		8055710	0					
ANR	8057243	PtrMemberAccess	s -> m		8055710	0					
ANR	8057244	Identifier	s		8055710	0					
ANR	8057245	Identifier	m		8055710	1					
ANR	8057246	Identifier	pb		8055710	1					
ANR	8057247	ArrayIndexing	s -> reorder_pb [ 5 ]		8055710	1					
ANR	8057248	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057249	Identifier	s		8055710	0					
ANR	8057250	Identifier	reorder_pb		8055710	1					
ANR	8057251	PrimaryExpression	5		8055710	1					
ANR	8057252	ExpressionStatement	mx = motion_ptr [ 0 ]	353:20:7991:8014	8055710	3	True				
ANR	8057253	AssignmentExpression	mx = motion_ptr [ 0 ]		8055710	0		=			
ANR	8057254	Identifier	mx		8055710	0					
ANR	8057255	ArrayIndexing	motion_ptr [ 0 ]		8055710	1					
ANR	8057256	Identifier	motion_ptr		8055710	0					
ANR	8057257	PrimaryExpression	0		8055710	1					
ANR	8057258	ExpressionStatement	my = motion_ptr [ 1 ]	355:20:8037:8060	8055710	4	True				
ANR	8057259	AssignmentExpression	my = motion_ptr [ 1 ]		8055710	0		=			
ANR	8057260	Identifier	my		8055710	0					
ANR	8057261	ArrayIndexing	motion_ptr [ 1 ]		8055710	1					
ANR	8057262	Identifier	motion_ptr		8055710	0					
ANR	8057263	PrimaryExpression	1		8055710	1					
ANR	8057264	ExpressionStatement	assert ( mx >= - 32 && mx <= 31 )	357:20:8083:8120	8055710	5	True				
ANR	8057265	CallExpression	assert ( mx >= - 32 && mx <= 31 )		8055710	0					
ANR	8057266	Callee	assert		8055710	0					
ANR	8057267	Identifier	assert		8055710	0					
ANR	8057268	ArgumentList	mx >= - 32 && mx <= 31		8055710	1					
ANR	8057269	Argument	mx >= - 32 && mx <= 31		8055710	0					
ANR	8057270	AndExpression	mx >= - 32 && mx <= 31		8055710	0		&&			
ANR	8057271	RelationalExpression	mx >= - 32		8055710	0		>=			
ANR	8057272	Identifier	mx		8055710	0					
ANR	8057273	UnaryOperationExpression	- 32		8055710	1					
ANR	8057274	UnaryOperator	-		8055710	0					
ANR	8057275	PrimaryExpression	32		8055710	1					
ANR	8057276	RelationalExpression	mx <= 31		8055710	1		<=			
ANR	8057277	Identifier	mx		8055710	0					
ANR	8057278	PrimaryExpression	31		8055710	1					
ANR	8057279	ExpressionStatement	assert ( my >= - 32 && my <= 31 )	359:20:8143:8180	8055710	6	True				
ANR	8057280	CallExpression	assert ( my >= - 32 && my <= 31 )		8055710	0					
ANR	8057281	Callee	assert		8055710	0					
ANR	8057282	Identifier	assert		8055710	0					
ANR	8057283	ArgumentList	my >= - 32 && my <= 31		8055710	1					
ANR	8057284	Argument	my >= - 32 && my <= 31		8055710	0					
ANR	8057285	AndExpression	my >= - 32 && my <= 31		8055710	0		&&			
ANR	8057286	RelationalExpression	my >= - 32		8055710	0		>=			
ANR	8057287	Identifier	my		8055710	0					
ANR	8057288	UnaryOperationExpression	- 32		8055710	1					
ANR	8057289	UnaryOperator	-		8055710	0					
ANR	8057290	PrimaryExpression	32		8055710	1					
ANR	8057291	RelationalExpression	my <= 31		8055710	1		<=			
ANR	8057292	Identifier	my		8055710	0					
ANR	8057293	PrimaryExpression	31		8055710	1					
ANR	8057294	ExpressionStatement	assert ( pred_x >= - 32 && pred_x <= 31 )	361:20:8203:8240	8055710	7	True				
ANR	8057295	CallExpression	assert ( pred_x >= - 32 && pred_x <= 31 )		8055710	0					
ANR	8057296	Callee	assert		8055710	0					
ANR	8057297	Identifier	assert		8055710	0					
ANR	8057298	ArgumentList	pred_x >= - 32 && pred_x <= 31		8055710	1					
ANR	8057299	Argument	pred_x >= - 32 && pred_x <= 31		8055710	0					
ANR	8057300	AndExpression	pred_x >= - 32 && pred_x <= 31		8055710	0		&&			
ANR	8057301	RelationalExpression	pred_x >= - 32		8055710	0		>=			
ANR	8057302	Identifier	pred_x		8055710	0					
ANR	8057303	UnaryOperationExpression	- 32		8055710	1					
ANR	8057304	UnaryOperator	-		8055710	0					
ANR	8057305	PrimaryExpression	32		8055710	1					
ANR	8057306	RelationalExpression	pred_x <= 31		8055710	1		<=			
ANR	8057307	Identifier	pred_x		8055710	0					
ANR	8057308	PrimaryExpression	31		8055710	1					
ANR	8057309	ExpressionStatement	assert ( pred_y >= - 32 && pred_y <= 31 )	363:20:8263:8300	8055710	8	True				
ANR	8057310	CallExpression	assert ( pred_y >= - 32 && pred_y <= 31 )		8055710	0					
ANR	8057311	Callee	assert		8055710	0					
ANR	8057312	Identifier	assert		8055710	0					
ANR	8057313	ArgumentList	pred_y >= - 32 && pred_y <= 31		8055710	1					
ANR	8057314	Argument	pred_y >= - 32 && pred_y <= 31		8055710	0					
ANR	8057315	AndExpression	pred_y >= - 32 && pred_y <= 31		8055710	0		&&			
ANR	8057316	RelationalExpression	pred_y >= - 32		8055710	0		>=			
ANR	8057317	Identifier	pred_y		8055710	0					
ANR	8057318	UnaryOperationExpression	- 32		8055710	1					
ANR	8057319	UnaryOperator	-		8055710	0					
ANR	8057320	PrimaryExpression	32		8055710	1					
ANR	8057321	RelationalExpression	pred_y <= 31		8055710	1		<=			
ANR	8057322	Identifier	pred_y		8055710	0					
ANR	8057323	PrimaryExpression	31		8055710	1					
ANR	8057324	ExpressionStatement	"ff_h263_encode_motion ( & s -> m , mx - pred_x , 1 )"	365:20:8323:8367	8055710	9	True				
ANR	8057325	CallExpression	"ff_h263_encode_motion ( & s -> m , mx - pred_x , 1 )"		8055710	0					
ANR	8057326	Callee	ff_h263_encode_motion		8055710	0					
ANR	8057327	Identifier	ff_h263_encode_motion		8055710	0					
ANR	8057328	ArgumentList	& s -> m		8055710	1					
ANR	8057329	Argument	& s -> m		8055710	0					
ANR	8057330	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8057331	UnaryOperator	&		8055710	0					
ANR	8057332	PtrMemberAccess	s -> m		8055710	1					
ANR	8057333	Identifier	s		8055710	0					
ANR	8057334	Identifier	m		8055710	1					
ANR	8057335	Argument	mx - pred_x		8055710	1					
ANR	8057336	AdditiveExpression	mx - pred_x		8055710	0		-			
ANR	8057337	Identifier	mx		8055710	0					
ANR	8057338	Identifier	pred_x		8055710	1					
ANR	8057339	Argument	1		8055710	2					
ANR	8057340	PrimaryExpression	1		8055710	0					
ANR	8057341	ExpressionStatement	"ff_h263_encode_motion ( & s -> m , my - pred_y , 1 )"	367:20:8390:8434	8055710	10	True				
ANR	8057342	CallExpression	"ff_h263_encode_motion ( & s -> m , my - pred_y , 1 )"		8055710	0					
ANR	8057343	Callee	ff_h263_encode_motion		8055710	0					
ANR	8057344	Identifier	ff_h263_encode_motion		8055710	0					
ANR	8057345	ArgumentList	& s -> m		8055710	1					
ANR	8057346	Argument	& s -> m		8055710	0					
ANR	8057347	UnaryOperationExpression	& s -> m		8055710	0					
ANR	8057348	UnaryOperator	&		8055710	0					
ANR	8057349	PtrMemberAccess	s -> m		8055710	1					
ANR	8057350	Identifier	s		8055710	0					
ANR	8057351	Identifier	m		8055710	1					
ANR	8057352	Argument	my - pred_y		8055710	1					
ANR	8057353	AdditiveExpression	my - pred_y		8055710	0		-			
ANR	8057354	Identifier	my		8055710	0					
ANR	8057355	Identifier	pred_y		8055710	1					
ANR	8057356	Argument	1		8055710	2					
ANR	8057357	PrimaryExpression	1		8055710	0					
ANR	8057358	ExpressionStatement	s -> reorder_pb [ 5 ] = s -> m . pb	369:20:8457:8483	8055710	11	True				
ANR	8057359	AssignmentExpression	s -> reorder_pb [ 5 ] = s -> m . pb		8055710	0		=			
ANR	8057360	ArrayIndexing	s -> reorder_pb [ 5 ]		8055710	0					
ANR	8057361	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057362	Identifier	s		8055710	0					
ANR	8057363	Identifier	reorder_pb		8055710	1					
ANR	8057364	PrimaryExpression	5		8055710	1					
ANR	8057365	MemberAccess	s -> m . pb		8055710	1					
ANR	8057366	PtrMemberAccess	s -> m		8055710	0					
ANR	8057367	Identifier	s		8055710	0					
ANR	8057368	Identifier	m		8055710	1					
ANR	8057369	Identifier	pb		8055710	1					
ANR	8057370	ExpressionStatement	score [ 1 ] += lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )	371:20:8506:8567	8055710	12	True				
ANR	8057371	AssignmentExpression	score [ 1 ] += lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )		8055710	0		+=			
ANR	8057372	ArrayIndexing	score [ 1 ]		8055710	0					
ANR	8057373	Identifier	score		8055710	0					
ANR	8057374	PrimaryExpression	1		8055710	1					
ANR	8057375	MultiplicativeExpression	lambda * put_bits_count ( & s -> reorder_pb [ 5 ] )		8055710	1		*			
ANR	8057376	Identifier	lambda		8055710	0					
ANR	8057377	CallExpression	put_bits_count ( & s -> reorder_pb [ 5 ] )		8055710	1					
ANR	8057378	Callee	put_bits_count		8055710	0					
ANR	8057379	Identifier	put_bits_count		8055710	0					
ANR	8057380	ArgumentList	& s -> reorder_pb [ 5 ]		8055710	1					
ANR	8057381	Argument	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8057382	UnaryOperationExpression	& s -> reorder_pb [ 5 ]		8055710	0					
ANR	8057383	UnaryOperator	&		8055710	0					
ANR	8057384	ArrayIndexing	s -> reorder_pb [ 5 ]		8055710	1					
ANR	8057385	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057386	Identifier	s		8055710	0					
ANR	8057387	Identifier	reorder_pb		8055710	1					
ANR	8057388	PrimaryExpression	5		8055710	1					
ANR	8057389	ExpressionStatement	dxy = ( mx & 1 ) + 2 * ( my & 1 )	375:20:8592:8621	8055710	13	True				
ANR	8057390	AssignmentExpression	dxy = ( mx & 1 ) + 2 * ( my & 1 )		8055710	0		=			
ANR	8057391	Identifier	dxy		8055710	0					
ANR	8057392	AdditiveExpression	( mx & 1 ) + 2 * ( my & 1 )		8055710	1		+			
ANR	8057393	BitAndExpression	mx & 1		8055710	0		&			
ANR	8057394	Identifier	mx		8055710	0					
ANR	8057395	PrimaryExpression	1		8055710	1					
ANR	8057396	MultiplicativeExpression	2 * ( my & 1 )		8055710	1		*			
ANR	8057397	PrimaryExpression	2		8055710	0					
ANR	8057398	BitAndExpression	my & 1		8055710	1		&			
ANR	8057399	Identifier	my		8055710	0					
ANR	8057400	PrimaryExpression	1		8055710	1					
ANR	8057401	ExpressionStatement	"s -> hdsp . put_pixels_tab [ 0 ] [ dxy ] ( temp + 16 , ref + ( mx >> 1 ) + stride * ( my >> 1 ) , stride , 16 )"	379:20:8646:8893	8055710	14	True				
ANR	8057402	CallExpression	"s -> hdsp . put_pixels_tab [ 0 ] [ dxy ] ( temp + 16 , ref + ( mx >> 1 ) + stride * ( my >> 1 ) , stride , 16 )"		8055710	0					
ANR	8057403	Callee	s -> hdsp . put_pixels_tab [ 0 ] [ dxy ]		8055710	0					
ANR	8057404	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ] [ dxy ]		8055710	0					
ANR	8057405	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ]		8055710	0					
ANR	8057406	MemberAccess	s -> hdsp . put_pixels_tab		8055710	0					
ANR	8057407	PtrMemberAccess	s -> hdsp		8055710	0					
ANR	8057408	Identifier	s		8055710	0					
ANR	8057409	Identifier	hdsp		8055710	1					
ANR	8057410	Identifier	put_pixels_tab		8055710	1					
ANR	8057411	PrimaryExpression	0		8055710	1					
ANR	8057412	Identifier	dxy		8055710	1					
ANR	8057413	ArgumentList	temp + 16		8055710	1					
ANR	8057414	Argument	temp + 16		8055710	0					
ANR	8057415	AdditiveExpression	temp + 16		8055710	0		+			
ANR	8057416	Identifier	temp		8055710	0					
ANR	8057417	PrimaryExpression	16		8055710	1					
ANR	8057418	Argument	ref + ( mx >> 1 ) + stride * ( my >> 1 )		8055710	1					
ANR	8057419	AdditiveExpression	ref + ( mx >> 1 ) + stride * ( my >> 1 )		8055710	0		+			
ANR	8057420	Identifier	ref		8055710	0					
ANR	8057421	AdditiveExpression	( mx >> 1 ) + stride * ( my >> 1 )		8055710	1		+			
ANR	8057422	ShiftExpression	mx >> 1		8055710	0		>>			
ANR	8057423	Identifier	mx		8055710	0					
ANR	8057424	PrimaryExpression	1		8055710	1					
ANR	8057425	MultiplicativeExpression	stride * ( my >> 1 )		8055710	1		*			
ANR	8057426	Identifier	stride		8055710	0					
ANR	8057427	ShiftExpression	my >> 1		8055710	1		>>			
ANR	8057428	Identifier	my		8055710	0					
ANR	8057429	PrimaryExpression	1		8055710	1					
ANR	8057430	Argument	stride		8055710	2					
ANR	8057431	Identifier	stride		8055710	0					
ANR	8057432	Argument	16		8055710	3					
ANR	8057433	PrimaryExpression	16		8055710	0					
ANR	8057434	ExpressionStatement	"score [ 1 ] += encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"	389:20:8918:9051	8055710	15	True				
ANR	8057435	AssignmentExpression	"score [ 1 ] += encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"		8055710	0		+=			
ANR	8057436	ArrayIndexing	score [ 1 ]		8055710	0					
ANR	8057437	Identifier	score		8055710	0					
ANR	8057438	PrimaryExpression	1		8055710	1					
ANR	8057439	CallExpression	"encode_block ( s , src + 16 * x , temp + 16 , decoded , stride , 5 , 64 , lambda , 0 )"		8055710	1					
ANR	8057440	Callee	encode_block		8055710	0					
ANR	8057441	Identifier	encode_block		8055710	0					
ANR	8057442	ArgumentList	s		8055710	1					
ANR	8057443	Argument	s		8055710	0					
ANR	8057444	Identifier	s		8055710	0					
ANR	8057445	Argument	src + 16 * x		8055710	1					
ANR	8057446	AdditiveExpression	src + 16 * x		8055710	0		+			
ANR	8057447	Identifier	src		8055710	0					
ANR	8057448	MultiplicativeExpression	16 * x		8055710	1		*			
ANR	8057449	PrimaryExpression	16		8055710	0					
ANR	8057450	Identifier	x		8055710	1					
ANR	8057451	Argument	temp + 16		8055710	2					
ANR	8057452	AdditiveExpression	temp + 16		8055710	0		+			
ANR	8057453	Identifier	temp		8055710	0					
ANR	8057454	PrimaryExpression	16		8055710	1					
ANR	8057455	Argument	decoded		8055710	3					
ANR	8057456	Identifier	decoded		8055710	0					
ANR	8057457	Argument	stride		8055710	4					
ANR	8057458	Identifier	stride		8055710	0					
ANR	8057459	Argument	5		8055710	5					
ANR	8057460	PrimaryExpression	5		8055710	0					
ANR	8057461	Argument	64		8055710	6					
ANR	8057462	PrimaryExpression	64		8055710	0					
ANR	8057463	Argument	lambda		8055710	7					
ANR	8057464	Identifier	lambda		8055710	0					
ANR	8057465	Argument	0		8055710	8					
ANR	8057466	PrimaryExpression	0		8055710	0					
ANR	8057467	ExpressionStatement	best = score [ 1 ] <= score [ 0 ]	393:20:9074:9106	8055710	16	True				
ANR	8057468	AssignmentExpression	best = score [ 1 ] <= score [ 0 ]		8055710	0		=			
ANR	8057469	Identifier	best		8055710	0					
ANR	8057470	RelationalExpression	score [ 1 ] <= score [ 0 ]		8055710	1		<=			
ANR	8057471	ArrayIndexing	score [ 1 ]		8055710	0					
ANR	8057472	Identifier	score		8055710	0					
ANR	8057473	PrimaryExpression	1		8055710	1					
ANR	8057474	ArrayIndexing	score [ 0 ]		8055710	1					
ANR	8057475	Identifier	score		8055710	0					
ANR	8057476	PrimaryExpression	0		8055710	1					
ANR	8057477	ExpressionStatement	vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]	397:20:9131:9182	8055710	17	True				
ANR	8057478	AssignmentExpression	vlc = ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]		8055710	0		=			
ANR	8057479	Identifier	vlc		8055710	0					
ANR	8057480	ArrayIndexing	ff_svq1_block_type_vlc [ SVQ1_BLOCK_SKIP ]		8055710	1					
ANR	8057481	Identifier	ff_svq1_block_type_vlc		8055710	0					
ANR	8057482	Identifier	SVQ1_BLOCK_SKIP		8055710	1					
ANR	8057483	ExpressionStatement	"score [ 2 ] = s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"	399:20:9205:9314	8055710	18	True				
ANR	8057484	AssignmentExpression	"score [ 2 ] = s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"		8055710	0		=			
ANR	8057485	ArrayIndexing	score [ 2 ]		8055710	0					
ANR	8057486	Identifier	score		8055710	0					
ANR	8057487	PrimaryExpression	2		8055710	1					
ANR	8057488	CallExpression	"s -> dsp . sse [ 0 ] ( NULL , src + 16 * x , ref , stride , 16 )"		8055710	1					
ANR	8057489	Callee	s -> dsp . sse [ 0 ]		8055710	0					
ANR	8057490	ArrayIndexing	s -> dsp . sse [ 0 ]		8055710	0					
ANR	8057491	MemberAccess	s -> dsp . sse		8055710	0					
ANR	8057492	PtrMemberAccess	s -> dsp		8055710	0					
ANR	8057493	Identifier	s		8055710	0					
ANR	8057494	Identifier	dsp		8055710	1					
ANR	8057495	Identifier	sse		8055710	1					
ANR	8057496	PrimaryExpression	0		8055710	1					
ANR	8057497	ArgumentList	NULL		8055710	1					
ANR	8057498	Argument	NULL		8055710	0					
ANR	8057499	Identifier	NULL		8055710	0					
ANR	8057500	Argument	src + 16 * x		8055710	1					
ANR	8057501	AdditiveExpression	src + 16 * x		8055710	0		+			
ANR	8057502	Identifier	src		8055710	0					
ANR	8057503	MultiplicativeExpression	16 * x		8055710	1		*			
ANR	8057504	PrimaryExpression	16		8055710	0					
ANR	8057505	Identifier	x		8055710	1					
ANR	8057506	Argument	ref		8055710	2					
ANR	8057507	Identifier	ref		8055710	0					
ANR	8057508	Argument	stride		8055710	3					
ANR	8057509	Identifier	stride		8055710	0					
ANR	8057510	Argument	16		8055710	4					
ANR	8057511	PrimaryExpression	16		8055710	0					
ANR	8057512	ExpressionStatement	score [ 2 ] += vlc [ 1 ] * lambda	403:20:9337:9364	8055710	19	True				
ANR	8057513	AssignmentExpression	score [ 2 ] += vlc [ 1 ] * lambda		8055710	0		+=			
ANR	8057514	ArrayIndexing	score [ 2 ]		8055710	0					
ANR	8057515	Identifier	score		8055710	0					
ANR	8057516	PrimaryExpression	2		8055710	1					
ANR	8057517	MultiplicativeExpression	vlc [ 1 ] * lambda		8055710	1		*			
ANR	8057518	ArrayIndexing	vlc [ 1 ]		8055710	0					
ANR	8057519	Identifier	vlc		8055710	0					
ANR	8057520	PrimaryExpression	1		8055710	1					
ANR	8057521	Identifier	lambda		8055710	1					
ANR	8057522	IfStatement	if ( score [ 2 ] < score [ best ] && mx == 0 && my == 0 )		8055710	20					
ANR	8057523	Condition	score [ 2 ] < score [ best ] && mx == 0 && my == 0	405:24:9391:9434	8055710	0	True				
ANR	8057524	AndExpression	score [ 2 ] < score [ best ] && mx == 0 && my == 0		8055710	0		&&			
ANR	8057525	RelationalExpression	score [ 2 ] < score [ best ]		8055710	0		<			
ANR	8057526	ArrayIndexing	score [ 2 ]		8055710	0					
ANR	8057527	Identifier	score		8055710	0					
ANR	8057528	PrimaryExpression	2		8055710	1					
ANR	8057529	ArrayIndexing	score [ best ]		8055710	1					
ANR	8057530	Identifier	score		8055710	0					
ANR	8057531	Identifier	best		8055710	1					
ANR	8057532	AndExpression	mx == 0 && my == 0		8055710	1		&&			
ANR	8057533	EqualityExpression	mx == 0		8055710	0		==			
ANR	8057534	Identifier	mx		8055710	0					
ANR	8057535	PrimaryExpression	0		8055710	1					
ANR	8057536	EqualityExpression	my == 0		8055710	1		==			
ANR	8057537	Identifier	my		8055710	0					
ANR	8057538	PrimaryExpression	0		8055710	1					
ANR	8057539	CompoundStatement		395:70:9126:9126	8055710	1					
ANR	8057540	ExpressionStatement	best = 2	407:24:9464:9472	8055710	0	True				
ANR	8057541	AssignmentExpression	best = 2		8055710	0		=			
ANR	8057542	Identifier	best		8055710	0					
ANR	8057543	PrimaryExpression	2		8055710	1					
ANR	8057544	ExpressionStatement	"s -> hdsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , ref , stride , 16 )"	409:24:9499:9553	8055710	1	True				
ANR	8057545	CallExpression	"s -> hdsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , ref , stride , 16 )"		8055710	0					
ANR	8057546	Callee	s -> hdsp . put_pixels_tab [ 0 ] [ 0 ]		8055710	0					
ANR	8057547	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ] [ 0 ]		8055710	0					
ANR	8057548	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ]		8055710	0					
ANR	8057549	MemberAccess	s -> hdsp . put_pixels_tab		8055710	0					
ANR	8057550	PtrMemberAccess	s -> hdsp		8055710	0					
ANR	8057551	Identifier	s		8055710	0					
ANR	8057552	Identifier	hdsp		8055710	1					
ANR	8057553	Identifier	put_pixels_tab		8055710	1					
ANR	8057554	PrimaryExpression	0		8055710	1					
ANR	8057555	PrimaryExpression	0		8055710	1					
ANR	8057556	ArgumentList	decoded		8055710	1					
ANR	8057557	Argument	decoded		8055710	0					
ANR	8057558	Identifier	decoded		8055710	0					
ANR	8057559	Argument	ref		8055710	1					
ANR	8057560	Identifier	ref		8055710	0					
ANR	8057561	Argument	stride		8055710	2					
ANR	8057562	Identifier	stride		8055710	0					
ANR	8057563	Argument	16		8055710	3					
ANR	8057564	PrimaryExpression	16		8055710	0					
ANR	8057565	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8055710	2					
ANR	8057566	ForInit	i = 0 ;	411:29:9585:9590	8055710	0	True				
ANR	8057567	AssignmentExpression	i = 0		8055710	0		=			
ANR	8057568	Identifier	i		8055710	0					
ANR	8057569	PrimaryExpression	0		8055710	1					
ANR	8057570	Condition	i < 6	411:36:9592:9596	8055710	1	True				
ANR	8057571	RelationalExpression	i < 6		8055710	0		<			
ANR	8057572	Identifier	i		8055710	0					
ANR	8057573	PrimaryExpression	6		8055710	1					
ANR	8057574	PostIncDecOperationExpression	i ++	411:43:9599:9601	8055710	2	True				
ANR	8057575	Identifier	i		8055710	0					
ANR	8057576	IncDec	++		8055710	1					
ANR	8057577	ExpressionStatement	count [ 2 ] [ i ] = 0	413:28:9633:9648	8055710	3	True				
ANR	8057578	AssignmentExpression	count [ 2 ] [ i ] = 0		8055710	0		=			
ANR	8057579	ArrayIndexing	count [ 2 ] [ i ]		8055710	0					
ANR	8057580	ArrayIndexing	count [ 2 ]		8055710	0					
ANR	8057581	Identifier	count		8055710	0					
ANR	8057582	PrimaryExpression	2		8055710	1					
ANR	8057583	Identifier	i		8055710	1					
ANR	8057584	PrimaryExpression	0		8055710	1					
ANR	8057585	ExpressionStatement	"put_bits ( & s -> pb , vlc [ 1 ] , vlc [ 0 ] )"	415:24:9675:9707	8055710	3	True				
ANR	8057586	CallExpression	"put_bits ( & s -> pb , vlc [ 1 ] , vlc [ 0 ] )"		8055710	0					
ANR	8057587	Callee	put_bits		8055710	0					
ANR	8057588	Identifier	put_bits		8055710	0					
ANR	8057589	ArgumentList	& s -> pb		8055710	1					
ANR	8057590	Argument	& s -> pb		8055710	0					
ANR	8057591	UnaryOperationExpression	& s -> pb		8055710	0					
ANR	8057592	UnaryOperator	&		8055710	0					
ANR	8057593	PtrMemberAccess	s -> pb		8055710	1					
ANR	8057594	Identifier	s		8055710	0					
ANR	8057595	Identifier	pb		8055710	1					
ANR	8057596	Argument	vlc [ 1 ]		8055710	1					
ANR	8057597	ArrayIndexing	vlc [ 1 ]		8055710	0					
ANR	8057598	Identifier	vlc		8055710	0					
ANR	8057599	PrimaryExpression	1		8055710	1					
ANR	8057600	Argument	vlc [ 0 ]		8055710	2					
ANR	8057601	ArrayIndexing	vlc [ 0 ]		8055710	0					
ANR	8057602	Identifier	vlc		8055710	0					
ANR	8057603	PrimaryExpression	0		8055710	1					
ANR	8057604	IfStatement	if ( best == 1 )		8055710	5					
ANR	8057605	Condition	best == 1	423:20:9774:9782	8055710	0	True				
ANR	8057606	EqualityExpression	best == 1		8055710	0		==			
ANR	8057607	Identifier	best		8055710	0					
ANR	8057608	PrimaryExpression	1		8055710	1					
ANR	8057609	CompoundStatement		413:31:9474:9474	8055710	1					
ANR	8057610	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		8055710	0					
ANR	8057611	ForInit	i = 0 ;	425:25:9813:9818	8055710	0	True				
ANR	8057612	AssignmentExpression	i = 0		8055710	0		=			
ANR	8057613	Identifier	i		8055710	0					
ANR	8057614	PrimaryExpression	0		8055710	1					
ANR	8057615	Condition	i < 6	425:32:9820:9824	8055710	1	True				
ANR	8057616	RelationalExpression	i < 6		8055710	0		<			
ANR	8057617	Identifier	i		8055710	0					
ANR	8057618	PrimaryExpression	6		8055710	1					
ANR	8057619	PostIncDecOperationExpression	i ++	425:39:9827:9829	8055710	2	True				
ANR	8057620	Identifier	i		8055710	0					
ANR	8057621	IncDec	++		8055710	1					
ANR	8057622	CompoundStatement		415:44:9521:9521	8055710	3					
ANR	8057623	ExpressionStatement	count [ 1 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )	427:24:9859:9906	8055710	0	True				
ANR	8057624	AssignmentExpression	count [ 1 ] [ i ] = put_bits_count ( & s -> reorder_pb [ i ] )		8055710	0		=			
ANR	8057625	ArrayIndexing	count [ 1 ] [ i ]		8055710	0					
ANR	8057626	ArrayIndexing	count [ 1 ]		8055710	0					
ANR	8057627	Identifier	count		8055710	0					
ANR	8057628	PrimaryExpression	1		8055710	1					
ANR	8057629	Identifier	i		8055710	1					
ANR	8057630	CallExpression	put_bits_count ( & s -> reorder_pb [ i ] )		8055710	1					
ANR	8057631	Callee	put_bits_count		8055710	0					
ANR	8057632	Identifier	put_bits_count		8055710	0					
ANR	8057633	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8057634	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057635	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057636	UnaryOperator	&		8055710	0					
ANR	8057637	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8057638	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057639	Identifier	s		8055710	0					
ANR	8057640	Identifier	reorder_pb		8055710	1					
ANR	8057641	Identifier	i		8055710	1					
ANR	8057642	ExpressionStatement	flush_put_bits ( & s -> reorder_pb [ i ] )	429:24:9933:9966	8055710	1	True				
ANR	8057643	CallExpression	flush_put_bits ( & s -> reorder_pb [ i ] )		8055710	0					
ANR	8057644	Callee	flush_put_bits		8055710	0					
ANR	8057645	Identifier	flush_put_bits		8055710	0					
ANR	8057646	ArgumentList	& s -> reorder_pb [ i ]		8055710	1					
ANR	8057647	Argument	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057648	UnaryOperationExpression	& s -> reorder_pb [ i ]		8055710	0					
ANR	8057649	UnaryOperator	&		8055710	0					
ANR	8057650	ArrayIndexing	s -> reorder_pb [ i ]		8055710	1					
ANR	8057651	PtrMemberAccess	s -> reorder_pb		8055710	0					
ANR	8057652	Identifier	s		8055710	0					
ANR	8057653	Identifier	reorder_pb		8055710	1					
ANR	8057654	Identifier	i		8055710	1					
ANR	8057655	ElseStatement	else		8055710	0					
ANR	8057656	CompoundStatement		423:23:9704:9704	8055710	0					
ANR	8057657	ExpressionStatement	motion_ptr [ 0 ] = motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0	435:20:10038:10482	8055710	0	True				
ANR	8057658	AssignmentExpression	motion_ptr [ 0 ] = motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	0		=			
ANR	8057659	ArrayIndexing	motion_ptr [ 0 ]		8055710	0					
ANR	8057660	Identifier	motion_ptr		8055710	0					
ANR	8057661	PrimaryExpression	0		8055710	1					
ANR	8057662	AssignmentExpression	motion_ptr [ 1 ] = motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057663	ArrayIndexing	motion_ptr [ 1 ]		8055710	0					
ANR	8057664	Identifier	motion_ptr		8055710	0					
ANR	8057665	PrimaryExpression	1		8055710	1					
ANR	8057666	AssignmentExpression	motion_ptr [ 2 ] = motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057667	ArrayIndexing	motion_ptr [ 2 ]		8055710	0					
ANR	8057668	Identifier	motion_ptr		8055710	0					
ANR	8057669	PrimaryExpression	2		8055710	1					
ANR	8057670	AssignmentExpression	motion_ptr [ 3 ] = motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057671	ArrayIndexing	motion_ptr [ 3 ]		8055710	0					
ANR	8057672	Identifier	motion_ptr		8055710	0					
ANR	8057673	PrimaryExpression	3		8055710	1					
ANR	8057674	AssignmentExpression	motion_ptr [ 0 + 2 * s -> m . b8_stride ] = motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057675	ArrayIndexing	motion_ptr [ 0 + 2 * s -> m . b8_stride ]		8055710	0					
ANR	8057676	Identifier	motion_ptr		8055710	0					
ANR	8057677	AdditiveExpression	0 + 2 * s -> m . b8_stride		8055710	1		+			
ANR	8057678	PrimaryExpression	0		8055710	0					
ANR	8057679	MultiplicativeExpression	2 * s -> m . b8_stride		8055710	1		*			
ANR	8057680	PrimaryExpression	2		8055710	0					
ANR	8057681	MemberAccess	s -> m . b8_stride		8055710	1					
ANR	8057682	PtrMemberAccess	s -> m		8055710	0					
ANR	8057683	Identifier	s		8055710	0					
ANR	8057684	Identifier	m		8055710	1					
ANR	8057685	Identifier	b8_stride		8055710	1					
ANR	8057686	AssignmentExpression	motion_ptr [ 1 + 2 * s -> m . b8_stride ] = motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057687	ArrayIndexing	motion_ptr [ 1 + 2 * s -> m . b8_stride ]		8055710	0					
ANR	8057688	Identifier	motion_ptr		8055710	0					
ANR	8057689	AdditiveExpression	1 + 2 * s -> m . b8_stride		8055710	1		+			
ANR	8057690	PrimaryExpression	1		8055710	0					
ANR	8057691	MultiplicativeExpression	2 * s -> m . b8_stride		8055710	1		*			
ANR	8057692	PrimaryExpression	2		8055710	0					
ANR	8057693	MemberAccess	s -> m . b8_stride		8055710	1					
ANR	8057694	PtrMemberAccess	s -> m		8055710	0					
ANR	8057695	Identifier	s		8055710	0					
ANR	8057696	Identifier	m		8055710	1					
ANR	8057697	Identifier	b8_stride		8055710	1					
ANR	8057698	AssignmentExpression	motion_ptr [ 2 + 2 * s -> m . b8_stride ] = motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057699	ArrayIndexing	motion_ptr [ 2 + 2 * s -> m . b8_stride ]		8055710	0					
ANR	8057700	Identifier	motion_ptr		8055710	0					
ANR	8057701	AdditiveExpression	2 + 2 * s -> m . b8_stride		8055710	1		+			
ANR	8057702	PrimaryExpression	2		8055710	0					
ANR	8057703	MultiplicativeExpression	2 * s -> m . b8_stride		8055710	1		*			
ANR	8057704	PrimaryExpression	2		8055710	0					
ANR	8057705	MemberAccess	s -> m . b8_stride		8055710	1					
ANR	8057706	PtrMemberAccess	s -> m		8055710	0					
ANR	8057707	Identifier	s		8055710	0					
ANR	8057708	Identifier	m		8055710	1					
ANR	8057709	Identifier	b8_stride		8055710	1					
ANR	8057710	AssignmentExpression	motion_ptr [ 3 + 2 * s -> m . b8_stride ] = 0		8055710	1		=			
ANR	8057711	ArrayIndexing	motion_ptr [ 3 + 2 * s -> m . b8_stride ]		8055710	0					
ANR	8057712	Identifier	motion_ptr		8055710	0					
ANR	8057713	AdditiveExpression	3 + 2 * s -> m . b8_stride		8055710	1		+			
ANR	8057714	PrimaryExpression	3		8055710	0					
ANR	8057715	MultiplicativeExpression	2 * s -> m . b8_stride		8055710	1		*			
ANR	8057716	PrimaryExpression	2		8055710	0					
ANR	8057717	MemberAccess	s -> m . b8_stride		8055710	1					
ANR	8057718	PtrMemberAccess	s -> m		8055710	0					
ANR	8057719	Identifier	s		8055710	0					
ANR	8057720	Identifier	m		8055710	1					
ANR	8057721	Identifier	b8_stride		8055710	1					
ANR	8057722	PrimaryExpression	0		8055710	1					
ANR	8057723	ExpressionStatement	s -> rd_total += score [ best ]	457:12:10533:10559	8055710	16	True				
ANR	8057724	AssignmentExpression	s -> rd_total += score [ best ]		8055710	0		+=			
ANR	8057725	PtrMemberAccess	s -> rd_total		8055710	0					
ANR	8057726	Identifier	s		8055710	0					
ANR	8057727	Identifier	rd_total		8055710	1					
ANR	8057728	ArrayIndexing	score [ best ]		8055710	1					
ANR	8057729	Identifier	score		8055710	0					
ANR	8057730	Identifier	best		8055710	1					
ANR	8057731	ForStatement	for ( i = 5 ; i >= 0 ; i -- )		8055710	17					
ANR	8057732	ForInit	i = 5 ;	461:17:10581:10586	8055710	0	True				
ANR	8057733	AssignmentExpression	i = 5		8055710	0		=			
ANR	8057734	Identifier	i		8055710	0					
ANR	8057735	PrimaryExpression	5		8055710	1					
ANR	8057736	Condition	i >= 0	461:24:10588:10593	8055710	1	True				
ANR	8057737	RelationalExpression	i >= 0		8055710	0		>=			
ANR	8057738	Identifier	i		8055710	0					
ANR	8057739	PrimaryExpression	0		8055710	1					
ANR	8057740	PostIncDecOperationExpression	i --	461:32:10596:10598	8055710	2	True				
ANR	8057741	Identifier	i		8055710	0					
ANR	8057742	IncDec	--		8055710	1					
ANR	8057743	ExpressionStatement	"avpriv_copy_bits ( & s -> pb , reorder_buffer [ best ] [ i ] , count [ best ] [ i ] )"	463:16:10618:10717	8055710	3	True				
ANR	8057744	CallExpression	"avpriv_copy_bits ( & s -> pb , reorder_buffer [ best ] [ i ] , count [ best ] [ i ] )"		8055710	0					
ANR	8057745	Callee	avpriv_copy_bits		8055710	0					
ANR	8057746	Identifier	avpriv_copy_bits		8055710	0					
ANR	8057747	ArgumentList	& s -> pb		8055710	1					
ANR	8057748	Argument	& s -> pb		8055710	0					
ANR	8057749	UnaryOperationExpression	& s -> pb		8055710	0					
ANR	8057750	UnaryOperator	&		8055710	0					
ANR	8057751	PtrMemberAccess	s -> pb		8055710	1					
ANR	8057752	Identifier	s		8055710	0					
ANR	8057753	Identifier	pb		8055710	1					
ANR	8057754	Argument	reorder_buffer [ best ] [ i ]		8055710	1					
ANR	8057755	ArrayIndexing	reorder_buffer [ best ] [ i ]		8055710	0					
ANR	8057756	ArrayIndexing	reorder_buffer [ best ]		8055710	0					
ANR	8057757	Identifier	reorder_buffer		8055710	0					
ANR	8057758	Identifier	best		8055710	1					
ANR	8057759	Identifier	i		8055710	1					
ANR	8057760	Argument	count [ best ] [ i ]		8055710	2					
ANR	8057761	ArrayIndexing	count [ best ] [ i ]		8055710	0					
ANR	8057762	ArrayIndexing	count [ best ]		8055710	0					
ANR	8057763	Identifier	count		8055710	0					
ANR	8057764	Identifier	best		8055710	1					
ANR	8057765	Identifier	i		8055710	1					
ANR	8057766	IfStatement	if ( best == 0 )		8055710	18					
ANR	8057767	Condition	best == 0	467:16:10736:10744	8055710	0	True				
ANR	8057768	EqualityExpression	best == 0		8055710	0		==			
ANR	8057769	Identifier	best		8055710	0					
ANR	8057770	PrimaryExpression	0		8055710	1					
ANR	8057771	ExpressionStatement	"s -> hdsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , temp , stride , 16 )"	469:16:10764:10819	8055710	1	True				
ANR	8057772	CallExpression	"s -> hdsp . put_pixels_tab [ 0 ] [ 0 ] ( decoded , temp , stride , 16 )"		8055710	0					
ANR	8057773	Callee	s -> hdsp . put_pixels_tab [ 0 ] [ 0 ]		8055710	0					
ANR	8057774	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ] [ 0 ]		8055710	0					
ANR	8057775	ArrayIndexing	s -> hdsp . put_pixels_tab [ 0 ]		8055710	0					
ANR	8057776	MemberAccess	s -> hdsp . put_pixels_tab		8055710	0					
ANR	8057777	PtrMemberAccess	s -> hdsp		8055710	0					
ANR	8057778	Identifier	s		8055710	0					
ANR	8057779	Identifier	hdsp		8055710	1					
ANR	8057780	Identifier	put_pixels_tab		8055710	1					
ANR	8057781	PrimaryExpression	0		8055710	1					
ANR	8057782	PrimaryExpression	0		8055710	1					
ANR	8057783	ArgumentList	decoded		8055710	1					
ANR	8057784	Argument	decoded		8055710	0					
ANR	8057785	Identifier	decoded		8055710	0					
ANR	8057786	Argument	temp		8055710	1					
ANR	8057787	Identifier	temp		8055710	0					
ANR	8057788	Argument	stride		8055710	2					
ANR	8057789	Identifier	stride		8055710	0					
ANR	8057790	Argument	16		8055710	3					
ANR	8057791	PrimaryExpression	16		8055710	0					
ANR	8057792	ExpressionStatement	s -> m . first_slice_line = 0	473:8:10841:10866	8055710	4	True				
ANR	8057793	AssignmentExpression	s -> m . first_slice_line = 0		8055710	0		=			
ANR	8057794	MemberAccess	s -> m . first_slice_line		8055710	0					
ANR	8057795	PtrMemberAccess	s -> m		8055710	0					
ANR	8057796	Identifier	s		8055710	0					
ANR	8057797	Identifier	m		8055710	1					
ANR	8057798	Identifier	first_slice_line		8055710	1					
ANR	8057799	PrimaryExpression	0		8055710	1					
ANR	8057800	ReturnStatement	return 0 ;	477:4:10880:10888	8055710	15	True				
ANR	8057801	PrimaryExpression	0		8055710	0					
ANR	8057802	ReturnType	static int		8055710	1					
ANR	8057803	Identifier	svq1_encode_plane		8055710	2					
ANR	8057804	ParameterList	"SVQ1Context * s , int plane , unsigned char * src_plane , unsigned char * ref_plane , unsigned char * decoded_plane , int width , int height , int src_stride , int stride"		8055710	3					
ANR	8057805	Parameter	SVQ1Context * s	1:29:29:42	8055710	0	True				
ANR	8057806	ParameterType	SVQ1Context *		8055710	0					
ANR	8057807	Identifier	s		8055710	1					
ANR	8057808	Parameter	int plane	1:45:45:53	8055710	1	True				
ANR	8057809	ParameterType	int		8055710	0					
ANR	8057810	Identifier	plane		8055710	1					
ANR	8057811	Parameter	unsigned char * src_plane	3:29:86:109	8055710	2	True				
ANR	8057812	ParameterType	unsigned char *		8055710	0					
ANR	8057813	Identifier	src_plane		8055710	1					
ANR	8057814	Parameter	unsigned char * ref_plane	5:29:142:165	8055710	3	True				
ANR	8057815	ParameterType	unsigned char *		8055710	0					
ANR	8057816	Identifier	ref_plane		8055710	1					
ANR	8057817	Parameter	unsigned char * decoded_plane	7:29:198:225	8055710	4	True				
ANR	8057818	ParameterType	unsigned char *		8055710	0					
ANR	8057819	Identifier	decoded_plane		8055710	1					
ANR	8057820	Parameter	int width	9:29:258:266	8055710	5	True				
ANR	8057821	ParameterType	int		8055710	0					
ANR	8057822	Identifier	width		8055710	1					
ANR	8057823	Parameter	int height	9:40:269:278	8055710	6	True				
ANR	8057824	ParameterType	int		8055710	0					
ANR	8057825	Identifier	height		8055710	1					
ANR	8057826	Parameter	int src_stride	9:52:281:294	8055710	7	True				
ANR	8057827	ParameterType	int		8055710	0					
ANR	8057828	Identifier	src_stride		8055710	1					
ANR	8057829	Parameter	int stride	9:68:297:306	8055710	8	True				
ANR	8057830	ParameterType	int		8055710	0					
ANR	8057831	Identifier	stride		8055710	1					
ANR	8057832	CFGEntryNode	ENTRY		8055710		True				
ANR	8057833	CFGExitNode	EXIT		8055710		True				
ANR	8057834	Symbol	plane		8055710						
ANR	8057835	Symbol	* stride		8055710						
ANR	8057836	Symbol	* x		8055710						
ANR	8057837	Symbol	* y		8055710						
ANR	8057838	Symbol	& s -> m . last_picture		8055710						
ANR	8057839	Symbol	* ff_svq1_block_type_vlc		8055710						
ANR	8057840	Symbol	s -> m . current_picture . f		8055710						
ANR	8057841	Symbol	stride		8055710						
ANR	8057842	Symbol	* s -> m . b8_stride		8055710						
ANR	8057843	Symbol	s -> m . last_picture . f . linesize		8055710						
ANR	8057844	Symbol	s -> motion_val8		8055710						
ANR	8057845	Symbol	score		8055710						
ANR	8057846	Symbol	lambda		8055710						
ANR	8057847	Symbol	s -> m . avctx		8055710						
ANR	8057848	Symbol	s -> avctx -> coded_frame		8055710						
ANR	8057849	Symbol	* vlc		8055710						
ANR	8057850	Symbol	s -> m . b8_stride		8055710						
ANR	8057851	Symbol	s -> m . me_method		8055710						
ANR	8057852	Symbol	height		8055710						
ANR	8057853	Symbol	s -> m . last_picture_ptr		8055710						
ANR	8057854	Symbol	av_mallocz		8055710						
ANR	8057855	Symbol	s -> m . pict_type		8055710						
ANR	8057856	Symbol	s -> avctx -> flags		8055710						
ANR	8057857	Symbol	s -> motion_val16		8055710						
ANR	8057858	Symbol	s -> dsp		8055710						
ANR	8057859	Symbol	* s -> motion_val8		8055710						
ANR	8057860	Symbol	FF_LAMBDA_SCALE		8055710						
ANR	8057861	Symbol	s -> avctx -> me_method		8055710						
ANR	8057862	Symbol	ref_plane		8055710						
ANR	8057863	Symbol	* s -> m . current_picture . f . linesize		8055710						
ANR	8057864	Symbol	& s -> pb		8055710						
ANR	8057865	Symbol	s -> m . current_picture . f . linesize		8055710						
ANR	8057866	Symbol	* s -> m . last_picture . f		8055710						
ANR	8057867	Symbol	s -> m . last_picture . f		8055710						
ANR	8057868	Symbol	s -> m . last_picture . f . data		8055710						
ANR	8057869	Symbol	s -> pb . buf		8055710						
ANR	8057870	Symbol	ff_svq1_block_type_vlc		8055710						
ANR	8057871	Symbol	src_stride		8055710						
ANR	8057872	Symbol	s -> m . mb_width		8055710						
ANR	8057873	Symbol	s -> m . current_picture_ptr		8055710						
ANR	8057874	Symbol	* reorder_buffer		8055710						
ANR	8057875	Symbol	s -> pb		8055710						
ANR	8057876	Symbol	* s -> m . mb_stride		8055710						
ANR	8057877	Symbol	pred_x		8055710						
ANR	8057878	Symbol	s -> m . new_picture		8055710						
ANR	8057879	Symbol	pred_y		8055710						
ANR	8057880	Symbol	s -> dsp . sse		8055710						
ANR	8057881	Symbol	* motion_ptr		8055710						
ANR	8057882	Symbol	s -> m . current_picture . motion_val		8055710						
ANR	8057883	Symbol	* * s		8055710						
ANR	8057884	Symbol	s -> m . current_picture . mb_mean		8055710						
ANR	8057885	Symbol	INT_MAX		8055710						
ANR	8057886	Symbol	* SVQ1_BLOCK_SKIP		8055710						
ANR	8057887	Symbol	f -> quality		8055710						
ANR	8057888	Symbol	* plane		8055710						
ANR	8057889	Symbol	s -> m		8055710						
ANR	8057890	Symbol	s -> scratchbuf		8055710						
ANR	8057891	Symbol	* threshold		8055710						
ANR	8057892	Symbol	AV_LOG_ERROR		8055710						
ANR	8057893	Symbol	* SVQ1_BLOCK_INTRA		8055710						
ANR	8057894	Symbol	dxy		8055710						
ANR	8057895	Symbol	s -> m . me		8055710						
ANR	8057896	Symbol	f		8055710						
ANR	8057897	Symbol	* s -> m . current_picture . f		8055710						
ANR	8057898	Symbol	* s -> m . current_picture		8055710						
ANR	8057899	Symbol	s -> m . current_picture . mb_var		8055710						
ANR	8057900	Symbol	put_bits_count		8055710						
ANR	8057901	Symbol	i		8055710						
ANR	8057902	Symbol	s -> m . p_mv_table		8055710						
ANR	8057903	Symbol	* s -> m . current_picture . motion_val		8055710						
ANR	8057904	Symbol	vlc		8055710						
ANR	8057905	Symbol	& s -> m . current_picture		8055710						
ANR	8057906	Symbol	s -> m . lambda2		8055710						
ANR	8057907	Symbol	* s -> dsp . sse		8055710						
ANR	8057908	Symbol	s		8055710						
ANR	8057909	Symbol	CANDIDATE_MB_TYPE_INTER		8055710						
ANR	8057910	Symbol	THRESHOLD_MULTIPLIER		8055710						
ANR	8057911	Symbol	width		8055710						
ANR	8057912	Symbol	x		8055710						
ANR	8057913	Symbol	y		8055710						
ANR	8057914	Symbol	SVQ1_BLOCK_INTER		8055710						
ANR	8057915	Symbol	SVQ1_BLOCK_SKIP		8055710						
ANR	8057916	Symbol	s -> m . new_picture . f . data		8055710						
ANR	8057917	Symbol	s -> pb . buf_end		8055710						
ANR	8057918	Symbol	s -> m . current_picture		8055710						
ANR	8057919	Symbol	s -> m . new_picture . f . linesize		8055710						
ANR	8057920	Symbol	s -> m . dsp		8055710						
ANR	8057921	Symbol	* * best		8055710						
ANR	8057922	Symbol	* best		8055710						
ANR	8057923	Symbol	ff_h263_pred_motion		8055710						
ANR	8057924	Symbol	s -> m . linesize		8055710						
ANR	8057925	Symbol	threshold		8055710						
ANR	8057926	Symbol	* s -> hdsp		8055710						
ANR	8057927	Symbol	block_height		8055710						
ANR	8057928	Symbol	* level		8055710						
ANR	8057929	Symbol	s -> m . last_picture		8055710						
ANR	8057930	Symbol	s -> m . mb_type		8055710						
ANR	8057931	Symbol	s -> m . current_picture . mc_mb_var		8055710						
ANR	8057932	Symbol	* src		8055710						
ANR	8057933	Symbol	reorder_buffer		8055710						
ANR	8057934	Symbol	* count		8055710						
ANR	8057935	Symbol	ref		8055710						
ANR	8057936	Symbol	s -> avctx -> dia_size		8055710						
ANR	8057937	Symbol	* s -> dsp		8055710						
ANR	8057938	Symbol	decoded_plane		8055710						
ANR	8057939	Symbol	s -> m . flags		8055710						
ANR	8057940	Symbol	* s -> avctx		8055710						
ANR	8057941	Symbol	NULL		8055710						
ANR	8057942	Symbol	offset		8055710						
ANR	8057943	Symbol	level		8055710						
ANR	8057944	Symbol	s -> hdsp		8055710						
ANR	8057945	Symbol	* s -> m . new_picture		8055710						
ANR	8057946	Symbol	count		8055710						
ANR	8057947	Symbol	mx		8055710						
ANR	8057948	Symbol	* s -> m . last_picture . f . linesize		8055710						
ANR	8057949	Symbol	s -> reorder_pb		8055710						
ANR	8057950	Symbol	my		8055710						
ANR	8057951	Symbol	s -> dummy		8055710						
ANR	8057952	Symbol	s -> m . width		8055710						
ANR	8057953	Symbol	s -> m . qscale		8055710						
ANR	8057954	Symbol	f -> pict_type		8055710						
ANR	8057955	Symbol	* s -> hdsp . put_pixels_tab		8055710						
ANR	8057956	Symbol	s -> m . height		8055710						
ANR	8057957	Symbol	s -> mb_type		8055710						
ANR	8057958	Symbol	s -> avctx		8055710						
ANR	8057959	Symbol	s -> m . me . dia_size		8055710						
ANR	8057960	Symbol	s -> m . mb_y		8055710						
ANR	8057961	Symbol	s -> hdsp . put_pixels_tab		8055710						
ANR	8057962	Symbol	s -> m . mb_height		8055710						
ANR	8057963	Symbol	* s -> m . new_picture . f . data		8055710						
ANR	8057964	Symbol	s -> m . mb_x		8055710						
ANR	8057965	Symbol	AV_PICTURE_TYPE_P		8055710						
ANR	8057966	Symbol	s -> m . pb		8055710						
ANR	8057967	Symbol	* * count		8055710						
ANR	8057968	Symbol	src_plane		8055710						
ANR	8057969	Symbol	encode_block		8055710						
ANR	8057970	Symbol	block_width		8055710						
ANR	8057971	Symbol	* s -> m . last_picture		8055710						
ANR	8057972	Symbol	best		8055710						
ANR	8057973	Symbol	* s -> motion_val16		8055710						
ANR	8057974	Symbol	& s -> m		8055710						
ANR	8057975	Symbol	s -> m . new_picture . f		8055710						
ANR	8057976	Symbol	* s -> m		8055710						
ANR	8057977	Symbol	s -> m . me . scene_change_score		8055710						
ANR	8057978	Symbol	s -> m . mb_stride		8055710						
ANR	8057979	Symbol	decoded		8055710						
ANR	8057980	Symbol	s -> m . current_picture . mb_type		8055710						
ANR	8057981	Symbol	AV_PICTURE_TYPE_I		8055710						
ANR	8057982	Symbol	s -> rd_total		8055710						
ANR	8057983	Symbol	& pred_x		8055710						
ANR	8057984	Symbol	& pred_y		8055710						
ANR	8057985	Symbol	temp		8055710						
ANR	8057986	Symbol	src		8055710						
ANR	8057987	Symbol	* SVQ1_BLOCK_INTER		8055710						
ANR	8057988	Symbol	SVQ1_BLOCK_INTRA		8055710						
ANR	8057989	Symbol	motion_ptr		8055710						
ANR	8057990	Symbol	FF_LAMBDA_SHIFT		8055710						
ANR	8057991	Symbol	* * reorder_buffer		8055710						
ANR	8057992	Symbol	* s -> reorder_pb		8055710						
ANR	8057993	Symbol	* s -> m . mb_type		8055710						
ANR	8057994	Symbol	* f		8055710						
ANR	8057995	Symbol	* s -> m . new_picture . f		8055710						
ANR	8057996	Symbol	s -> m . first_slice_line		8055710						
ANR	8057997	Symbol	CANDIDATE_MB_TYPE_INTRA		8055710						
ANR	8057998	Symbol	* i		8055710						
ANR	8057999	Symbol	QUALITY_THRESHOLD		8055710						
ANR	8058000	Symbol	* s -> m . new_picture . f . linesize		8055710						
ANR	8058001	Symbol	* s -> m . last_picture . f . data		8055710						
ANR	8058002	Symbol	* score		8055710						
ANR	8058003	Symbol	s -> m . lambda		8055710						
ANR	8058004	Symbol	s -> m . f_code		8055710						
ANR	8058005	Symbol	* s		8055710						
