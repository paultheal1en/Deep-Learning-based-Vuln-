command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7116812	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qmp_migrate_0.c								
ANR	7116813	Function	qmp_migrate	1:0:0:1725							
ANR	7116814	FunctionDef	"qmp_migrate (const char * uri , bool has_blk , bool blk , bool has_inc , bool inc , bool has_detach , bool detach , Error * * errp)"		7116813	0					
ANR	7116815	CompoundStatement		7:0:163:1725	7116813	0					
ANR	7116816	IdentifierDeclStatement	Error * local_err = NULL ;	9:4:170:193	7116813	0	True				
ANR	7116817	IdentifierDecl	* local_err = NULL		7116813	0					
ANR	7116818	IdentifierDeclType	Error *		7116813	0					
ANR	7116819	Identifier	local_err		7116813	1					
ANR	7116820	AssignmentExpression	* local_err = NULL		7116813	2		=			
ANR	7116821	Identifier	NULL		7116813	0					
ANR	7116822	Identifier	NULL		7116813	1					
ANR	7116823	IdentifierDeclStatement	MigrationState * s = migrate_get_current ( ) ;	11:4:200:241	7116813	1	True				
ANR	7116824	IdentifierDecl	* s = migrate_get_current ( )		7116813	0					
ANR	7116825	IdentifierDeclType	MigrationState *		7116813	0					
ANR	7116826	Identifier	s		7116813	1					
ANR	7116827	AssignmentExpression	* s = migrate_get_current ( )		7116813	2		=			
ANR	7116828	Identifier	s		7116813	0					
ANR	7116829	CallExpression	migrate_get_current ( )		7116813	1					
ANR	7116830	Callee	migrate_get_current		7116813	0					
ANR	7116831	Identifier	migrate_get_current		7116813	0					
ANR	7116832	ArgumentList			7116813	1					
ANR	7116833	IdentifierDeclStatement	MigrationParams params ;	13:4:248:270	7116813	2	True				
ANR	7116834	IdentifierDecl	params		7116813	0					
ANR	7116835	IdentifierDeclType	MigrationParams		7116813	0					
ANR	7116836	Identifier	params		7116813	1					
ANR	7116837	IdentifierDeclStatement	const char * p ;	15:4:277:290	7116813	3	True				
ANR	7116838	IdentifierDecl	* p		7116813	0					
ANR	7116839	IdentifierDeclType	const char *		7116813	0					
ANR	7116840	Identifier	p		7116813	1					
ANR	7116841	ExpressionStatement	params . blk = has_blk && blk	19:4:299:326	7116813	4	True				
ANR	7116842	AssignmentExpression	params . blk = has_blk && blk		7116813	0		=			
ANR	7116843	MemberAccess	params . blk		7116813	0					
ANR	7116844	Identifier	params		7116813	0					
ANR	7116845	Identifier	blk		7116813	1					
ANR	7116846	AndExpression	has_blk && blk		7116813	1		&&			
ANR	7116847	Identifier	has_blk		7116813	0					
ANR	7116848	Identifier	blk		7116813	1					
ANR	7116849	ExpressionStatement	params . shared = has_inc && inc	21:4:333:363	7116813	5	True				
ANR	7116850	AssignmentExpression	params . shared = has_inc && inc		7116813	0		=			
ANR	7116851	MemberAccess	params . shared		7116813	0					
ANR	7116852	Identifier	params		7116813	0					
ANR	7116853	Identifier	shared		7116813	1					
ANR	7116854	AndExpression	has_inc && inc		7116813	1		&&			
ANR	7116855	Identifier	has_inc		7116813	0					
ANR	7116856	Identifier	inc		7116813	1					
ANR	7116857	IfStatement	if ( migration_is_setup_or_active ( s -> state ) || s -> state == MIGRATION_STATUS_CANCELLING )		7116813	6					
ANR	7116858	Condition	migration_is_setup_or_active ( s -> state ) || s -> state == MIGRATION_STATUS_CANCELLING	25:8:376:465	7116813	0	True				
ANR	7116859	OrExpression	migration_is_setup_or_active ( s -> state ) || s -> state == MIGRATION_STATUS_CANCELLING		7116813	0		||			
ANR	7116860	CallExpression	migration_is_setup_or_active ( s -> state )		7116813	0					
ANR	7116861	Callee	migration_is_setup_or_active		7116813	0					
ANR	7116862	Identifier	migration_is_setup_or_active		7116813	0					
ANR	7116863	ArgumentList	s -> state		7116813	1					
ANR	7116864	Argument	s -> state		7116813	0					
ANR	7116865	PtrMemberAccess	s -> state		7116813	0					
ANR	7116866	Identifier	s		7116813	0					
ANR	7116867	Identifier	state		7116813	1					
ANR	7116868	EqualityExpression	s -> state == MIGRATION_STATUS_CANCELLING		7116813	1		==			
ANR	7116869	PtrMemberAccess	s -> state		7116813	0					
ANR	7116870	Identifier	s		7116813	0					
ANR	7116871	Identifier	state		7116813	1					
ANR	7116872	Identifier	MIGRATION_STATUS_CANCELLING		7116813	1					
ANR	7116873	CompoundStatement		21:49:304:304	7116813	1					
ANR	7116874	ExpressionStatement	"error_setg ( errp , QERR_MIGRATION_ACTIVE )"	29:8:479:518	7116813	0	True				
ANR	7116875	CallExpression	"error_setg ( errp , QERR_MIGRATION_ACTIVE )"		7116813	0					
ANR	7116876	Callee	error_setg		7116813	0					
ANR	7116877	Identifier	error_setg		7116813	0					
ANR	7116878	ArgumentList	errp		7116813	1					
ANR	7116879	Argument	errp		7116813	0					
ANR	7116880	Identifier	errp		7116813	0					
ANR	7116881	Argument	QERR_MIGRATION_ACTIVE		7116813	1					
ANR	7116882	Identifier	QERR_MIGRATION_ACTIVE		7116813	0					
ANR	7116883	ReturnStatement	return ;	31:8:529:535	7116813	1	True				
ANR	7116884	IfStatement	if ( runstate_check ( RUN_STATE_INMIGRATE ) )		7116813	7					
ANR	7116885	Condition	runstate_check ( RUN_STATE_INMIGRATE )	35:8:553:587	7116813	0	True				
ANR	7116886	CallExpression	runstate_check ( RUN_STATE_INMIGRATE )		7116813	0					
ANR	7116887	Callee	runstate_check		7116813	0					
ANR	7116888	Identifier	runstate_check		7116813	0					
ANR	7116889	ArgumentList	RUN_STATE_INMIGRATE		7116813	1					
ANR	7116890	Argument	RUN_STATE_INMIGRATE		7116813	0					
ANR	7116891	Identifier	RUN_STATE_INMIGRATE		7116813	0					
ANR	7116892	CompoundStatement		29:45:426:426	7116813	1					
ANR	7116893	ExpressionStatement	"error_setg ( errp , ""Guest is waiting for an incoming migration"" )"	37:8:601:663	7116813	0	True				
ANR	7116894	CallExpression	"error_setg ( errp , ""Guest is waiting for an incoming migration"" )"		7116813	0					
ANR	7116895	Callee	error_setg		7116813	0					
ANR	7116896	Identifier	error_setg		7116813	0					
ANR	7116897	ArgumentList	errp		7116813	1					
ANR	7116898	Argument	errp		7116813	0					
ANR	7116899	Identifier	errp		7116813	0					
ANR	7116900	Argument	"""Guest is waiting for an incoming migration"""		7116813	1					
ANR	7116901	PrimaryExpression	"""Guest is waiting for an incoming migration"""		7116813	0					
ANR	7116902	ReturnStatement	return ;	39:8:674:680	7116813	1	True				
ANR	7116903	IfStatement	if ( migration_is_blocked ( errp ) )		7116813	8					
ANR	7116904	Condition	migration_is_blocked ( errp )	45:8:700:725	7116813	0	True				
ANR	7116905	CallExpression	migration_is_blocked ( errp )		7116813	0					
ANR	7116906	Callee	migration_is_blocked		7116813	0					
ANR	7116907	Identifier	migration_is_blocked		7116813	0					
ANR	7116908	ArgumentList	errp		7116813	1					
ANR	7116909	Argument	errp		7116813	0					
ANR	7116910	Identifier	errp		7116813	0					
ANR	7116911	CompoundStatement		39:36:564:564	7116813	1					
ANR	7116912	ReturnStatement	return ;	47:8:739:745	7116813	0	True				
ANR	7116913	ExpressionStatement	s = migrate_init ( & params )	53:4:761:786	7116813	9	True				
ANR	7116914	AssignmentExpression	s = migrate_init ( & params )		7116813	0		=			
ANR	7116915	Identifier	s		7116813	0					
ANR	7116916	CallExpression	migrate_init ( & params )		7116813	1					
ANR	7116917	Callee	migrate_init		7116813	0					
ANR	7116918	Identifier	migrate_init		7116813	0					
ANR	7116919	ArgumentList	& params		7116813	1					
ANR	7116920	Argument	& params		7116813	0					
ANR	7116921	UnaryOperationExpression	& params		7116813	0					
ANR	7116922	UnaryOperator	&		7116813	0					
ANR	7116923	Identifier	params		7116813	1					
ANR	7116924	IfStatement	"if ( strstart ( uri , ""tcp:"" , & p ) )"		7116813	10					
ANR	7116925	Condition	"strstart ( uri , ""tcp:"" , & p )"	57:8:799:823	7116813	0	True				
ANR	7116926	CallExpression	"strstart ( uri , ""tcp:"" , & p )"		7116813	0					
ANR	7116927	Callee	strstart		7116813	0					
ANR	7116928	Identifier	strstart		7116813	0					
ANR	7116929	ArgumentList	uri		7116813	1					
ANR	7116930	Argument	uri		7116813	0					
ANR	7116931	Identifier	uri		7116813	0					
ANR	7116932	Argument	"""tcp:"""		7116813	1					
ANR	7116933	PrimaryExpression	"""tcp:"""		7116813	0					
ANR	7116934	Argument	& p		7116813	2					
ANR	7116935	UnaryOperationExpression	& p		7116813	0					
ANR	7116936	UnaryOperator	&		7116813	0					
ANR	7116937	Identifier	p		7116813	1					
ANR	7116938	CompoundStatement		51:35:662:662	7116813	1					
ANR	7116939	ExpressionStatement	"tcp_start_outgoing_migration ( s , p , & local_err )"	59:8:837:883	7116813	0	True				
ANR	7116940	CallExpression	"tcp_start_outgoing_migration ( s , p , & local_err )"		7116813	0					
ANR	7116941	Callee	tcp_start_outgoing_migration		7116813	0					
ANR	7116942	Identifier	tcp_start_outgoing_migration		7116813	0					
ANR	7116943	ArgumentList	s		7116813	1					
ANR	7116944	Argument	s		7116813	0					
ANR	7116945	Identifier	s		7116813	0					
ANR	7116946	Argument	p		7116813	1					
ANR	7116947	Identifier	p		7116813	0					
ANR	7116948	Argument	& local_err		7116813	2					
ANR	7116949	UnaryOperationExpression	& local_err		7116813	0					
ANR	7116950	UnaryOperator	&		7116813	0					
ANR	7116951	Identifier	local_err		7116813	1					
ANR	7116952	ElseStatement	else		7116813	0					
ANR	7116953	IfStatement	"if ( strstart ( uri , ""rdma:"" , & p ) )"		7116813	0					
ANR	7116954	Condition	"strstart ( uri , ""rdma:"" , & p )"	63:15:921:946	7116813	0	True				
ANR	7116955	CallExpression	"strstart ( uri , ""rdma:"" , & p )"		7116813	0					
ANR	7116956	Callee	strstart		7116813	0					
ANR	7116957	Identifier	strstart		7116813	0					
ANR	7116958	ArgumentList	uri		7116813	1					
ANR	7116959	Argument	uri		7116813	0					
ANR	7116960	Identifier	uri		7116813	0					
ANR	7116961	Argument	"""rdma:"""		7116813	1					
ANR	7116962	PrimaryExpression	"""rdma:"""		7116813	0					
ANR	7116963	Argument	& p		7116813	2					
ANR	7116964	UnaryOperationExpression	& p		7116813	0					
ANR	7116965	UnaryOperator	&		7116813	0					
ANR	7116966	Identifier	p		7116813	1					
ANR	7116967	CompoundStatement		57:43:785:785	7116813	1					
ANR	7116968	ExpressionStatement	"rdma_start_outgoing_migration ( s , p , & local_err )"	65:8:960:1007	7116813	0	True				
ANR	7116969	CallExpression	"rdma_start_outgoing_migration ( s , p , & local_err )"		7116813	0					
ANR	7116970	Callee	rdma_start_outgoing_migration		7116813	0					
ANR	7116971	Identifier	rdma_start_outgoing_migration		7116813	0					
ANR	7116972	ArgumentList	s		7116813	1					
ANR	7116973	Argument	s		7116813	0					
ANR	7116974	Identifier	s		7116813	0					
ANR	7116975	Argument	p		7116813	1					
ANR	7116976	Identifier	p		7116813	0					
ANR	7116977	Argument	& local_err		7116813	2					
ANR	7116978	UnaryOperationExpression	& local_err		7116813	0					
ANR	7116979	UnaryOperator	&		7116813	0					
ANR	7116980	Identifier	local_err		7116813	1					
ANR	7116981	ElseStatement	else		7116813	0					
ANR	7116982	IfStatement	"if ( strstart ( uri , ""exec:"" , & p ) )"		7116813	0					
ANR	7116983	Condition	"strstart ( uri , ""exec:"" , & p )"	69:15:1033:1058	7116813	0	True				
ANR	7116984	CallExpression	"strstart ( uri , ""exec:"" , & p )"		7116813	0					
ANR	7116985	Callee	strstart		7116813	0					
ANR	7116986	Identifier	strstart		7116813	0					
ANR	7116987	ArgumentList	uri		7116813	1					
ANR	7116988	Argument	uri		7116813	0					
ANR	7116989	Identifier	uri		7116813	0					
ANR	7116990	Argument	"""exec:"""		7116813	1					
ANR	7116991	PrimaryExpression	"""exec:"""		7116813	0					
ANR	7116992	Argument	& p		7116813	2					
ANR	7116993	UnaryOperationExpression	& p		7116813	0					
ANR	7116994	UnaryOperator	&		7116813	0					
ANR	7116995	Identifier	p		7116813	1					
ANR	7116996	CompoundStatement		63:43:897:897	7116813	1					
ANR	7116997	ExpressionStatement	"exec_start_outgoing_migration ( s , p , & local_err )"	71:8:1072:1119	7116813	0	True				
ANR	7116998	CallExpression	"exec_start_outgoing_migration ( s , p , & local_err )"		7116813	0					
ANR	7116999	Callee	exec_start_outgoing_migration		7116813	0					
ANR	7117000	Identifier	exec_start_outgoing_migration		7116813	0					
ANR	7117001	ArgumentList	s		7116813	1					
ANR	7117002	Argument	s		7116813	0					
ANR	7117003	Identifier	s		7116813	0					
ANR	7117004	Argument	p		7116813	1					
ANR	7117005	Identifier	p		7116813	0					
ANR	7117006	Argument	& local_err		7116813	2					
ANR	7117007	UnaryOperationExpression	& local_err		7116813	0					
ANR	7117008	UnaryOperator	&		7116813	0					
ANR	7117009	Identifier	local_err		7116813	1					
ANR	7117010	ElseStatement	else		7116813	0					
ANR	7117011	IfStatement	"if ( strstart ( uri , ""unix:"" , & p ) )"		7116813	0					
ANR	7117012	Condition	"strstart ( uri , ""unix:"" , & p )"	73:15:1137:1162	7116813	0	True				
ANR	7117013	CallExpression	"strstart ( uri , ""unix:"" , & p )"		7116813	0					
ANR	7117014	Callee	strstart		7116813	0					
ANR	7117015	Identifier	strstart		7116813	0					
ANR	7117016	ArgumentList	uri		7116813	1					
ANR	7117017	Argument	uri		7116813	0					
ANR	7117018	Identifier	uri		7116813	0					
ANR	7117019	Argument	"""unix:"""		7116813	1					
ANR	7117020	PrimaryExpression	"""unix:"""		7116813	0					
ANR	7117021	Argument	& p		7116813	2					
ANR	7117022	UnaryOperationExpression	& p		7116813	0					
ANR	7117023	UnaryOperator	&		7116813	0					
ANR	7117024	Identifier	p		7116813	1					
ANR	7117025	CompoundStatement		67:43:1001:1001	7116813	1					
ANR	7117026	ExpressionStatement	"unix_start_outgoing_migration ( s , p , & local_err )"	75:8:1176:1223	7116813	0	True				
ANR	7117027	CallExpression	"unix_start_outgoing_migration ( s , p , & local_err )"		7116813	0					
ANR	7117028	Callee	unix_start_outgoing_migration		7116813	0					
ANR	7117029	Identifier	unix_start_outgoing_migration		7116813	0					
ANR	7117030	ArgumentList	s		7116813	1					
ANR	7117031	Argument	s		7116813	0					
ANR	7117032	Identifier	s		7116813	0					
ANR	7117033	Argument	p		7116813	1					
ANR	7117034	Identifier	p		7116813	0					
ANR	7117035	Argument	& local_err		7116813	2					
ANR	7117036	UnaryOperationExpression	& local_err		7116813	0					
ANR	7117037	UnaryOperator	&		7116813	0					
ANR	7117038	Identifier	local_err		7116813	1					
ANR	7117039	ElseStatement	else		7116813	0					
ANR	7117040	IfStatement	"if ( strstart ( uri , ""fd:"" , & p ) )"		7116813	0					
ANR	7117041	Condition	"strstart ( uri , ""fd:"" , & p )"	77:15:1241:1264	7116813	0	True				
ANR	7117042	CallExpression	"strstart ( uri , ""fd:"" , & p )"		7116813	0					
ANR	7117043	Callee	strstart		7116813	0					
ANR	7117044	Identifier	strstart		7116813	0					
ANR	7117045	ArgumentList	uri		7116813	1					
ANR	7117046	Argument	uri		7116813	0					
ANR	7117047	Identifier	uri		7116813	0					
ANR	7117048	Argument	"""fd:"""		7116813	1					
ANR	7117049	PrimaryExpression	"""fd:"""		7116813	0					
ANR	7117050	Argument	& p		7116813	2					
ANR	7117051	UnaryOperationExpression	& p		7116813	0					
ANR	7117052	UnaryOperator	&		7116813	0					
ANR	7117053	Identifier	p		7116813	1					
ANR	7117054	CompoundStatement		71:41:1103:1103	7116813	1					
ANR	7117055	ExpressionStatement	"fd_start_outgoing_migration ( s , p , & local_err )"	79:8:1278:1323	7116813	0	True				
ANR	7117056	CallExpression	"fd_start_outgoing_migration ( s , p , & local_err )"		7116813	0					
ANR	7117057	Callee	fd_start_outgoing_migration		7116813	0					
ANR	7117058	Identifier	fd_start_outgoing_migration		7116813	0					
ANR	7117059	ArgumentList	s		7116813	1					
ANR	7117060	Argument	s		7116813	0					
ANR	7117061	Identifier	s		7116813	0					
ANR	7117062	Argument	p		7116813	1					
ANR	7117063	Identifier	p		7116813	0					
ANR	7117064	Argument	& local_err		7116813	2					
ANR	7117065	UnaryOperationExpression	& local_err		7116813	0					
ANR	7117066	UnaryOperator	&		7116813	0					
ANR	7117067	Identifier	local_err		7116813	1					
ANR	7117068	ElseStatement	else		7116813	0					
ANR	7117069	CompoundStatement		75:11:1173:1173	7116813	0					
ANR	7117070	ExpressionStatement	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""uri"" , ""a valid migration protocol"" )"	83:8:1348:1451	7116813	0	True				
ANR	7117071	CallExpression	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""uri"" , ""a valid migration protocol"" )"		7116813	0					
ANR	7117072	Callee	error_setg		7116813	0					
ANR	7117073	Identifier	error_setg		7116813	0					
ANR	7117074	ArgumentList	errp		7116813	1					
ANR	7117075	Argument	errp		7116813	0					
ANR	7117076	Identifier	errp		7116813	0					
ANR	7117077	Argument	QERR_INVALID_PARAMETER_VALUE		7116813	1					
ANR	7117078	Identifier	QERR_INVALID_PARAMETER_VALUE		7116813	0					
ANR	7117079	Argument	"""uri"""		7116813	2					
ANR	7117080	PrimaryExpression	"""uri"""		7116813	0					
ANR	7117081	Argument	"""a valid migration protocol"""		7116813	3					
ANR	7117082	PrimaryExpression	"""a valid migration protocol"""		7116813	0					
ANR	7117083	ExpressionStatement	"migrate_set_state ( & s -> state , MIGRATION_STATUS_SETUP , MIGRATION_STATUS_FAILED )"	87:8:1462:1566	7116813	1	True				
ANR	7117084	CallExpression	"migrate_set_state ( & s -> state , MIGRATION_STATUS_SETUP , MIGRATION_STATUS_FAILED )"		7116813	0					
ANR	7117085	Callee	migrate_set_state		7116813	0					
ANR	7117086	Identifier	migrate_set_state		7116813	0					
ANR	7117087	ArgumentList	& s -> state		7116813	1					
ANR	7117088	Argument	& s -> state		7116813	0					
ANR	7117089	UnaryOperationExpression	& s -> state		7116813	0					
ANR	7117090	UnaryOperator	&		7116813	0					
ANR	7117091	PtrMemberAccess	s -> state		7116813	1					
ANR	7117092	Identifier	s		7116813	0					
ANR	7117093	Identifier	state		7116813	1					
ANR	7117094	Argument	MIGRATION_STATUS_SETUP		7116813	1					
ANR	7117095	Identifier	MIGRATION_STATUS_SETUP		7116813	0					
ANR	7117096	Argument	MIGRATION_STATUS_FAILED		7116813	2					
ANR	7117097	Identifier	MIGRATION_STATUS_FAILED		7116813	0					
ANR	7117098	ReturnStatement	return ;	91:8:1577:1583	7116813	2	True				
ANR	7117099	IfStatement	if ( local_err )		7116813	11					
ANR	7117100	Condition	local_err	97:8:1603:1611	7116813	0	True				
ANR	7117101	Identifier	local_err		7116813	0					
ANR	7117102	CompoundStatement		91:19:1450:1450	7116813	1					
ANR	7117103	ExpressionStatement	"migrate_fd_error ( s , local_err )"	99:8:1625:1655	7116813	0	True				
ANR	7117104	CallExpression	"migrate_fd_error ( s , local_err )"		7116813	0					
ANR	7117105	Callee	migrate_fd_error		7116813	0					
ANR	7117106	Identifier	migrate_fd_error		7116813	0					
ANR	7117107	ArgumentList	s		7116813	1					
ANR	7117108	Argument	s		7116813	0					
ANR	7117109	Identifier	s		7116813	0					
ANR	7117110	Argument	local_err		7116813	1					
ANR	7117111	Identifier	local_err		7116813	0					
ANR	7117112	ExpressionStatement	"error_propagate ( errp , local_err )"	101:8:1666:1698	7116813	1	True				
ANR	7117113	CallExpression	"error_propagate ( errp , local_err )"		7116813	0					
ANR	7117114	Callee	error_propagate		7116813	0					
ANR	7117115	Identifier	error_propagate		7116813	0					
ANR	7117116	ArgumentList	errp		7116813	1					
ANR	7117117	Argument	errp		7116813	0					
ANR	7117118	Identifier	errp		7116813	0					
ANR	7117119	Argument	local_err		7116813	1					
ANR	7117120	Identifier	local_err		7116813	0					
ANR	7117121	ReturnStatement	return ;	103:8:1709:1715	7116813	2	True				
ANR	7117122	ReturnType	void		7116813	1					
ANR	7117123	Identifier	qmp_migrate		7116813	2					
ANR	7117124	ParameterList	"const char * uri , bool has_blk , bool blk , bool has_inc , bool inc , bool has_detach , bool detach , Error * * errp"		7116813	3					
ANR	7117125	Parameter	const char * uri	1:17:17:31	7116813	0	True				
ANR	7117126	ParameterType	const char *		7116813	0					
ANR	7117127	Identifier	uri		7116813	1					
ANR	7117128	Parameter	bool has_blk	1:34:34:45	7116813	1	True				
ANR	7117129	ParameterType	bool		7116813	0					
ANR	7117130	Identifier	has_blk		7116813	1					
ANR	7117131	Parameter	bool blk	1:48:48:55	7116813	2	True				
ANR	7117132	ParameterType	bool		7116813	0					
ANR	7117133	Identifier	blk		7116813	1					
ANR	7117134	Parameter	bool has_inc	3:17:76:87	7116813	3	True				
ANR	7117135	ParameterType	bool		7116813	0					
ANR	7117136	Identifier	has_inc		7116813	1					
ANR	7117137	Parameter	bool inc	3:31:90:97	7116813	4	True				
ANR	7117138	ParameterType	bool		7116813	0					
ANR	7117139	Identifier	inc		7116813	1					
ANR	7117140	Parameter	bool has_detach	3:41:100:114	7116813	5	True				
ANR	7117141	ParameterType	bool		7116813	0					
ANR	7117142	Identifier	has_detach		7116813	1					
ANR	7117143	Parameter	bool detach	3:58:117:127	7116813	6	True				
ANR	7117144	ParameterType	bool		7116813	0					
ANR	7117145	Identifier	detach		7116813	1					
ANR	7117146	Parameter	Error * * errp	5:17:148:159	7116813	7	True				
ANR	7117147	ParameterType	Error * *		7116813	0					
ANR	7117148	Identifier	errp		7116813	1					
ANR	7117149	CFGEntryNode	ENTRY		7116813		True				
ANR	7117150	CFGExitNode	EXIT		7116813		True				
ANR	7117151	Symbol	errp		7116813						
ANR	7117152	Symbol	migrate_init		7116813						
ANR	7117153	Symbol	QERR_MIGRATION_ACTIVE		7116813						
ANR	7117154	Symbol	MIGRATION_STATUS_FAILED		7116813						
ANR	7117155	Symbol	MIGRATION_STATUS_SETUP		7116813						
ANR	7117156	Symbol	params . shared		7116813						
ANR	7117157	Symbol	& s -> state		7116813						
ANR	7117158	Symbol	migrate_get_current		7116813						
ANR	7117159	Symbol	params . blk		7116813						
ANR	7117160	Symbol	& local_err		7116813						
ANR	7117161	Symbol	migration_is_blocked		7116813						
ANR	7117162	Symbol	strstart		7116813						
ANR	7117163	Symbol	has_detach		7116813						
ANR	7117164	Symbol	inc		7116813						
ANR	7117165	Symbol	& params		7116813						
ANR	7117166	Symbol	QERR_INVALID_PARAMETER_VALUE		7116813						
ANR	7117167	Symbol	blk		7116813						
ANR	7117168	Symbol	NULL		7116813						
ANR	7117169	Symbol	runstate_check		7116813						
ANR	7117170	Symbol	s -> state		7116813						
ANR	7117171	Symbol	migration_is_setup_or_active		7116813						
ANR	7117172	Symbol	RUN_STATE_INMIGRATE		7116813						
ANR	7117173	Symbol	params		7116813						
ANR	7117174	Symbol	uri		7116813						
ANR	7117175	Symbol	p		7116813						
ANR	7117176	Symbol	has_blk		7116813						
ANR	7117177	Symbol	s		7116813						
ANR	7117178	Symbol	MIGRATION_STATUS_CANCELLING		7116813						
ANR	7117179	Symbol	has_inc		7116813						
ANR	7117180	Symbol	& p		7116813						
ANR	7117181	Symbol	detach		7116813						
ANR	7117182	Symbol	* s		7116813						
ANR	7117183	Symbol	local_err		7116813						
