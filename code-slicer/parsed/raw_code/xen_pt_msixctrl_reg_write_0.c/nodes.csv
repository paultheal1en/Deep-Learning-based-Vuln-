command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9540200	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xen_pt_msixctrl_reg_write_0.c								
ANR	9540201	Function	xen_pt_msixctrl_reg_write	1:0:0:1263							
ANR	9540202	FunctionDef	"xen_pt_msixctrl_reg_write (XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint16_t * val , uint16_t dev_value , uint16_t valid_mask)"		9540201	0					
ANR	9540203	CompoundStatement		7:0:218:1263	9540201	0					
ANR	9540204	IdentifierDeclStatement	XenPTRegInfo * reg = cfg_entry -> reg ;	9:4:225:259	9540201	0	True				
ANR	9540205	IdentifierDecl	* reg = cfg_entry -> reg		9540201	0					
ANR	9540206	IdentifierDeclType	XenPTRegInfo *		9540201	0					
ANR	9540207	Identifier	reg		9540201	1					
ANR	9540208	AssignmentExpression	* reg = cfg_entry -> reg		9540201	2		=			
ANR	9540209	Identifier	reg		9540201	0					
ANR	9540210	PtrMemberAccess	cfg_entry -> reg		9540201	1					
ANR	9540211	Identifier	cfg_entry		9540201	0					
ANR	9540212	Identifier	reg		9540201	1					
ANR	9540213	IdentifierDeclStatement	uint16_t writable_mask = 0 ;	11:4:266:292	9540201	1	True				
ANR	9540214	IdentifierDecl	writable_mask = 0		9540201	0					
ANR	9540215	IdentifierDeclType	uint16_t		9540201	0					
ANR	9540216	Identifier	writable_mask		9540201	1					
ANR	9540217	AssignmentExpression	writable_mask = 0		9540201	2		=			
ANR	9540218	Identifier	writable_mask		9540201	0					
ANR	9540219	PrimaryExpression	0		9540201	1					
ANR	9540220	IdentifierDeclStatement	"uint16_t throughable_mask = get_throughable_mask ( s , reg , valid_mask ) ;"	13:4:299:367	9540201	2	True				
ANR	9540221	IdentifierDecl	"throughable_mask = get_throughable_mask ( s , reg , valid_mask )"		9540201	0					
ANR	9540222	IdentifierDeclType	uint16_t		9540201	0					
ANR	9540223	Identifier	throughable_mask		9540201	1					
ANR	9540224	AssignmentExpression	"throughable_mask = get_throughable_mask ( s , reg , valid_mask )"		9540201	2		=			
ANR	9540225	Identifier	throughable_mask		9540201	0					
ANR	9540226	CallExpression	"get_throughable_mask ( s , reg , valid_mask )"		9540201	1					
ANR	9540227	Callee	get_throughable_mask		9540201	0					
ANR	9540228	Identifier	get_throughable_mask		9540201	0					
ANR	9540229	ArgumentList	s		9540201	1					
ANR	9540230	Argument	s		9540201	0					
ANR	9540231	Identifier	s		9540201	0					
ANR	9540232	Argument	reg		9540201	1					
ANR	9540233	Identifier	reg		9540201	0					
ANR	9540234	Argument	valid_mask		9540201	2					
ANR	9540235	Identifier	valid_mask		9540201	0					
ANR	9540236	IdentifierDeclStatement	int debug_msix_enabled_old ;	15:4:374:400	9540201	3	True				
ANR	9540237	IdentifierDecl	debug_msix_enabled_old		9540201	0					
ANR	9540238	IdentifierDeclType	int		9540201	0					
ANR	9540239	Identifier	debug_msix_enabled_old		9540201	1					
ANR	9540240	ExpressionStatement	writable_mask = reg -> emu_mask & ~reg -> ro_mask & valid_mask	21:4:444:502	9540201	4	True				
ANR	9540241	AssignmentExpression	writable_mask = reg -> emu_mask & ~reg -> ro_mask & valid_mask		9540201	0		=			
ANR	9540242	Identifier	writable_mask		9540201	0					
ANR	9540243	BitAndExpression	reg -> emu_mask & ~reg -> ro_mask & valid_mask		9540201	1		&			
ANR	9540244	PtrMemberAccess	reg -> emu_mask		9540201	0					
ANR	9540245	Identifier	reg		9540201	0					
ANR	9540246	Identifier	emu_mask		9540201	1					
ANR	9540247	BitAndExpression	~reg -> ro_mask & valid_mask		9540201	1		&			
ANR	9540248	PtrMemberAccess	~reg -> ro_mask		9540201	0					
ANR	9540249	Identifier	~reg		9540201	0					
ANR	9540250	Identifier	ro_mask		9540201	1					
ANR	9540251	Identifier	valid_mask		9540201	1					
ANR	9540252	ExpressionStatement	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"	23:4:509:583	9540201	5	True				
ANR	9540253	AssignmentExpression	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9540201	0		=			
ANR	9540254	PtrMemberAccess	cfg_entry -> data		9540201	0					
ANR	9540255	Identifier	cfg_entry		9540201	0					
ANR	9540256	Identifier	data		9540201	1					
ANR	9540257	CallExpression	"XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9540201	1					
ANR	9540258	Callee	XEN_PT_MERGE_VALUE		9540201	0					
ANR	9540259	Identifier	XEN_PT_MERGE_VALUE		9540201	0					
ANR	9540260	ArgumentList	* val		9540201	1					
ANR	9540261	Argument	* val		9540201	0					
ANR	9540262	UnaryOperationExpression	* val		9540201	0					
ANR	9540263	UnaryOperator	*		9540201	0					
ANR	9540264	Identifier	val		9540201	1					
ANR	9540265	Argument	cfg_entry -> data		9540201	1					
ANR	9540266	PtrMemberAccess	cfg_entry -> data		9540201	0					
ANR	9540267	Identifier	cfg_entry		9540201	0					
ANR	9540268	Identifier	data		9540201	1					
ANR	9540269	Argument	writable_mask		9540201	2					
ANR	9540270	Identifier	writable_mask		9540201	0					
ANR	9540271	ExpressionStatement	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"	29:4:651:711	9540201	6	True				
ANR	9540272	AssignmentExpression	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9540201	0		=			
ANR	9540273	UnaryOperationExpression	* val		9540201	0					
ANR	9540274	UnaryOperator	*		9540201	0					
ANR	9540275	Identifier	val		9540201	1					
ANR	9540276	CallExpression	"XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9540201	1					
ANR	9540277	Callee	XEN_PT_MERGE_VALUE		9540201	0					
ANR	9540278	Identifier	XEN_PT_MERGE_VALUE		9540201	0					
ANR	9540279	ArgumentList	* val		9540201	1					
ANR	9540280	Argument	* val		9540201	0					
ANR	9540281	UnaryOperationExpression	* val		9540201	0					
ANR	9540282	UnaryOperator	*		9540201	0					
ANR	9540283	Identifier	val		9540201	1					
ANR	9540284	Argument	dev_value		9540201	1					
ANR	9540285	Identifier	dev_value		9540201	0					
ANR	9540286	Argument	throughable_mask		9540201	2					
ANR	9540287	Identifier	throughable_mask		9540201	0					
ANR	9540288	IfStatement	if ( ( * val & PCI_MSIX_FLAGS_ENABLE ) && ! ( * val & PCI_MSIX_FLAGS_MASKALL ) )		9540201	7					
ANR	9540289	Condition	( * val & PCI_MSIX_FLAGS_ENABLE ) && ! ( * val & PCI_MSIX_FLAGS_MASKALL )	35:8:748:822	9540201	0	True				
ANR	9540290	AndExpression	( * val & PCI_MSIX_FLAGS_ENABLE ) && ! ( * val & PCI_MSIX_FLAGS_MASKALL )		9540201	0		&&			
ANR	9540291	BitAndExpression	* val & PCI_MSIX_FLAGS_ENABLE		9540201	0		&			
ANR	9540292	UnaryOperationExpression	* val		9540201	0					
ANR	9540293	UnaryOperator	*		9540201	0					
ANR	9540294	Identifier	val		9540201	1					
ANR	9540295	Identifier	PCI_MSIX_FLAGS_ENABLE		9540201	1					
ANR	9540296	UnaryOperationExpression	! ( * val & PCI_MSIX_FLAGS_MASKALL )		9540201	1					
ANR	9540297	UnaryOperator	!		9540201	0					
ANR	9540298	BitAndExpression	* val & PCI_MSIX_FLAGS_MASKALL		9540201	1		&			
ANR	9540299	UnaryOperationExpression	* val		9540201	0					
ANR	9540300	UnaryOperator	*		9540201	0					
ANR	9540301	Identifier	val		9540201	1					
ANR	9540302	Identifier	PCI_MSIX_FLAGS_MASKALL		9540201	1					
ANR	9540303	CompoundStatement		31:45:606:606	9540201	1					
ANR	9540304	ExpressionStatement	xen_pt_msix_update ( s )	39:8:836:857	9540201	0	True				
ANR	9540305	CallExpression	xen_pt_msix_update ( s )		9540201	0					
ANR	9540306	Callee	xen_pt_msix_update		9540201	0					
ANR	9540307	Identifier	xen_pt_msix_update		9540201	0					
ANR	9540308	ArgumentList	s		9540201	1					
ANR	9540309	Argument	s		9540201	0					
ANR	9540310	Identifier	s		9540201	0					
ANR	9540311	ElseStatement	else		9540201	0					
ANR	9540312	IfStatement	if ( ! ( * val & PCI_MSIX_FLAGS_ENABLE ) && s -> msix -> enabled )		9540201	0					
ANR	9540313	Condition	! ( * val & PCI_MSIX_FLAGS_ENABLE ) && s -> msix -> enabled	41:15:875:925	9540201	0	True				
ANR	9540314	AndExpression	! ( * val & PCI_MSIX_FLAGS_ENABLE ) && s -> msix -> enabled		9540201	0		&&			
ANR	9540315	UnaryOperationExpression	! ( * val & PCI_MSIX_FLAGS_ENABLE )		9540201	0					
ANR	9540316	UnaryOperator	!		9540201	0					
ANR	9540317	BitAndExpression	* val & PCI_MSIX_FLAGS_ENABLE		9540201	1		&			
ANR	9540318	UnaryOperationExpression	* val		9540201	0					
ANR	9540319	UnaryOperator	*		9540201	0					
ANR	9540320	Identifier	val		9540201	1					
ANR	9540321	Identifier	PCI_MSIX_FLAGS_ENABLE		9540201	1					
ANR	9540322	PtrMemberAccess	s -> msix -> enabled		9540201	1					
ANR	9540323	PtrMemberAccess	s -> msix		9540201	0					
ANR	9540324	Identifier	s		9540201	0					
ANR	9540325	Identifier	msix		9540201	1					
ANR	9540326	Identifier	enabled		9540201	1					
ANR	9540327	CompoundStatement		35:68:709:709	9540201	1					
ANR	9540328	ExpressionStatement	xen_pt_msix_disable ( s )	43:8:939:961	9540201	0	True				
ANR	9540329	CallExpression	xen_pt_msix_disable ( s )		9540201	0					
ANR	9540330	Callee	xen_pt_msix_disable		9540201	0					
ANR	9540331	Identifier	xen_pt_msix_disable		9540201	0					
ANR	9540332	ArgumentList	s		9540201	1					
ANR	9540333	Argument	s		9540201	0					
ANR	9540334	Identifier	s		9540201	0					
ANR	9540335	ExpressionStatement	debug_msix_enabled_old = s -> msix -> enabled	49:4:977:1018	9540201	8	True				
ANR	9540336	AssignmentExpression	debug_msix_enabled_old = s -> msix -> enabled		9540201	0		=			
ANR	9540337	Identifier	debug_msix_enabled_old		9540201	0					
ANR	9540338	PtrMemberAccess	s -> msix -> enabled		9540201	1					
ANR	9540339	PtrMemberAccess	s -> msix		9540201	0					
ANR	9540340	Identifier	s		9540201	0					
ANR	9540341	Identifier	msix		9540201	1					
ANR	9540342	Identifier	enabled		9540201	1					
ANR	9540343	ExpressionStatement	s -> msix -> enabled = ! ! ( * val & PCI_MSIX_FLAGS_ENABLE )	51:4:1025:1076	9540201	9	True				
ANR	9540344	AssignmentExpression	s -> msix -> enabled = ! ! ( * val & PCI_MSIX_FLAGS_ENABLE )		9540201	0		=			
ANR	9540345	PtrMemberAccess	s -> msix -> enabled		9540201	0					
ANR	9540346	PtrMemberAccess	s -> msix		9540201	0					
ANR	9540347	Identifier	s		9540201	0					
ANR	9540348	Identifier	msix		9540201	1					
ANR	9540349	Identifier	enabled		9540201	1					
ANR	9540350	UnaryOperationExpression	! ! ( * val & PCI_MSIX_FLAGS_ENABLE )		9540201	1					
ANR	9540351	UnaryOperator	!		9540201	0					
ANR	9540352	UnaryOperationExpression	! ( * val & PCI_MSIX_FLAGS_ENABLE )		9540201	1					
ANR	9540353	UnaryOperator	!		9540201	0					
ANR	9540354	BitAndExpression	* val & PCI_MSIX_FLAGS_ENABLE		9540201	1		&			
ANR	9540355	UnaryOperationExpression	* val		9540201	0					
ANR	9540356	UnaryOperator	*		9540201	0					
ANR	9540357	Identifier	val		9540201	1					
ANR	9540358	Identifier	PCI_MSIX_FLAGS_ENABLE		9540201	1					
ANR	9540359	IfStatement	if ( s -> msix -> enabled != debug_msix_enabled_old )		9540201	10					
ANR	9540360	Condition	s -> msix -> enabled != debug_msix_enabled_old	53:8:1087:1128	9540201	0	True				
ANR	9540361	EqualityExpression	s -> msix -> enabled != debug_msix_enabled_old		9540201	0		!=			
ANR	9540362	PtrMemberAccess	s -> msix -> enabled		9540201	0					
ANR	9540363	PtrMemberAccess	s -> msix		9540201	0					
ANR	9540364	Identifier	s		9540201	0					
ANR	9540365	Identifier	msix		9540201	1					
ANR	9540366	Identifier	enabled		9540201	1					
ANR	9540367	Identifier	debug_msix_enabled_old		9540201	1					
ANR	9540368	CompoundStatement		47:52:912:912	9540201	1					
ANR	9540369	ExpressionStatement	"XEN_PT_LOG ( & s -> dev , ""%s MSI-X\\n"" , s -> msix -> enabled ? ""enable"" : ""disable"" )"	55:8:1142:1236	9540201	0	True				
ANR	9540370	CallExpression	"XEN_PT_LOG ( & s -> dev , ""%s MSI-X\\n"" , s -> msix -> enabled ? ""enable"" : ""disable"" )"		9540201	0					
ANR	9540371	Callee	XEN_PT_LOG		9540201	0					
ANR	9540372	Identifier	XEN_PT_LOG		9540201	0					
ANR	9540373	ArgumentList	& s -> dev		9540201	1					
ANR	9540374	Argument	& s -> dev		9540201	0					
ANR	9540375	UnaryOperationExpression	& s -> dev		9540201	0					
ANR	9540376	UnaryOperator	&		9540201	0					
ANR	9540377	PtrMemberAccess	s -> dev		9540201	1					
ANR	9540378	Identifier	s		9540201	0					
ANR	9540379	Identifier	dev		9540201	1					
ANR	9540380	Argument	"""%s MSI-X\\n"""		9540201	1					
ANR	9540381	PrimaryExpression	"""%s MSI-X\\n"""		9540201	0					
ANR	9540382	Argument	"s -> msix -> enabled ? ""enable"" : ""disable"""		9540201	2					
ANR	9540383	ConditionalExpression	"s -> msix -> enabled ? ""enable"" : ""disable"""		9540201	0					
ANR	9540384	Condition	s -> msix -> enabled		9540201	0					
ANR	9540385	PtrMemberAccess	s -> msix -> enabled		9540201	0					
ANR	9540386	PtrMemberAccess	s -> msix		9540201	0					
ANR	9540387	Identifier	s		9540201	0					
ANR	9540388	Identifier	msix		9540201	1					
ANR	9540389	Identifier	enabled		9540201	1					
ANR	9540390	PrimaryExpression	"""enable"""		9540201	1					
ANR	9540391	PrimaryExpression	"""disable"""		9540201	2					
ANR	9540392	ReturnStatement	return 0 ;	63:4:1252:1260	9540201	11	True				
ANR	9540393	PrimaryExpression	0		9540201	0					
ANR	9540394	ReturnType	static int		9540201	1					
ANR	9540395	Identifier	xen_pt_msixctrl_reg_write		9540201	2					
ANR	9540396	ParameterList	"XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint16_t * val , uint16_t dev_value , uint16_t valid_mask"		9540201	3					
ANR	9540397	Parameter	XenPCIPassthroughState * s	1:37:37:61	9540201	0	True				
ANR	9540398	ParameterType	XenPCIPassthroughState *		9540201	0					
ANR	9540399	Identifier	s		9540201	1					
ANR	9540400	Parameter	XenPTReg * cfg_entry	3:37:102:120	9540201	1	True				
ANR	9540401	ParameterType	XenPTReg *		9540201	0					
ANR	9540402	Identifier	cfg_entry		9540201	1					
ANR	9540403	Parameter	uint16_t * val	3:58:123:135	9540201	2	True				
ANR	9540404	ParameterType	uint16_t *		9540201	0					
ANR	9540405	Identifier	val		9540201	1					
ANR	9540406	Parameter	uint16_t dev_value	5:37:176:193	9540201	3	True				
ANR	9540407	ParameterType	uint16_t		9540201	0					
ANR	9540408	Identifier	dev_value		9540201	1					
ANR	9540409	Parameter	uint16_t valid_mask	5:57:196:214	9540201	4	True				
ANR	9540410	ParameterType	uint16_t		9540201	0					
ANR	9540411	Identifier	valid_mask		9540201	1					
ANR	9540412	CFGEntryNode	ENTRY		9540201		True				
ANR	9540413	CFGExitNode	EXIT		9540201		True				
ANR	9540414	Symbol	* cfg_entry		9540201						
ANR	9540415	Symbol	cfg_entry -> data		9540201						
ANR	9540416	Symbol	s -> msix -> enabled		9540201						
ANR	9540417	Symbol	valid_mask		9540201						
ANR	9540418	Symbol	cfg_entry -> reg		9540201						
ANR	9540419	Symbol	get_throughable_mask		9540201						
ANR	9540420	Symbol	writable_mask		9540201						
ANR	9540421	Symbol	& s -> dev		9540201						
ANR	9540422	Symbol	~reg -> ro_mask		9540201						
ANR	9540423	Symbol	* val		9540201						
ANR	9540424	Symbol	XEN_PT_MERGE_VALUE		9540201						
ANR	9540425	Symbol	* s -> msix		9540201						
ANR	9540426	Symbol	reg		9540201						
ANR	9540427	Symbol	* * s		9540201						
ANR	9540428	Symbol	debug_msix_enabled_old		9540201						
ANR	9540429	Symbol	PCI_MSIX_FLAGS_ENABLE		9540201						
ANR	9540430	Symbol	val		9540201						
ANR	9540431	Symbol	* ~reg		9540201						
ANR	9540432	Symbol	PCI_MSIX_FLAGS_MASKALL		9540201						
ANR	9540433	Symbol	cfg_entry		9540201						
ANR	9540434	Symbol	s -> msix		9540201						
ANR	9540435	Symbol	~reg		9540201						
ANR	9540436	Symbol	throughable_mask		9540201						
ANR	9540437	Symbol	s		9540201						
ANR	9540438	Symbol	dev_value		9540201						
ANR	9540439	Symbol	* s		9540201						
ANR	9540440	Symbol	* reg		9540201						
ANR	9540441	Symbol	reg -> emu_mask		9540201						
