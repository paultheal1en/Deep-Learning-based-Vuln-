command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6313972	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_escape_0.c								
ANR	6313973	Function	parse_escape	1:0:0:1057							
ANR	6313974	FunctionDef	"parse_escape (JSONParserContext * ctxt , va_list * ap)"		6313973	0					
ANR	6313975	CompoundStatement		3:0:68:1057	6313973	0					
ANR	6313976	IdentifierDeclStatement	QObject * token ;	5:4:75:89	6313973	0	True				
ANR	6313977	IdentifierDecl	* token		6313973	0					
ANR	6313978	IdentifierDeclType	QObject *		6313973	0					
ANR	6313979	Identifier	token		6313973	1					
ANR	6313980	IdentifierDeclStatement	const char * val ;	7:4:96:111	6313973	1	True				
ANR	6313981	IdentifierDecl	* val		6313973	0					
ANR	6313982	IdentifierDeclType	const char *		6313973	0					
ANR	6313983	Identifier	val		6313973	1					
ANR	6313984	IfStatement	if ( ap == NULL )		6313973	2					
ANR	6313985	Condition	ap == NULL	11:8:124:133	6313973	0	True				
ANR	6313986	EqualityExpression	ap == NULL		6313973	0		==			
ANR	6313987	Identifier	ap		6313973	0					
ANR	6313988	Identifier	NULL		6313973	1					
ANR	6313989	CompoundStatement		9:20:67:67	6313973	1					
ANR	6313990	ReturnStatement	return NULL ;	13:8:147:158	6313973	0	True				
ANR	6313991	Identifier	NULL		6313973	0					
ANR	6313992	ExpressionStatement	token = parser_context_pop_token ( ctxt )	19:4:174:212	6313973	3	True				
ANR	6313993	AssignmentExpression	token = parser_context_pop_token ( ctxt )		6313973	0		=			
ANR	6313994	Identifier	token		6313973	0					
ANR	6313995	CallExpression	parser_context_pop_token ( ctxt )		6313973	1					
ANR	6313996	Callee	parser_context_pop_token		6313973	0					
ANR	6313997	Identifier	parser_context_pop_token		6313973	0					
ANR	6313998	ArgumentList	ctxt		6313973	1					
ANR	6313999	Argument	ctxt		6313973	0					
ANR	6314000	Identifier	ctxt		6313973	0					
ANR	6314001	ExpressionStatement	assert ( token && token_get_type ( token ) == JSON_ESCAPE )	21:4:219:272	6313973	4	True				
ANR	6314002	CallExpression	assert ( token && token_get_type ( token ) == JSON_ESCAPE )		6313973	0					
ANR	6314003	Callee	assert		6313973	0					
ANR	6314004	Identifier	assert		6313973	0					
ANR	6314005	ArgumentList	token && token_get_type ( token ) == JSON_ESCAPE		6313973	1					
ANR	6314006	Argument	token && token_get_type ( token ) == JSON_ESCAPE		6313973	0					
ANR	6314007	AndExpression	token && token_get_type ( token ) == JSON_ESCAPE		6313973	0		&&			
ANR	6314008	Identifier	token		6313973	0					
ANR	6314009	EqualityExpression	token_get_type ( token ) == JSON_ESCAPE		6313973	1		==			
ANR	6314010	CallExpression	token_get_type ( token )		6313973	0					
ANR	6314011	Callee	token_get_type		6313973	0					
ANR	6314012	Identifier	token_get_type		6313973	0					
ANR	6314013	ArgumentList	token		6313973	1					
ANR	6314014	Argument	token		6313973	0					
ANR	6314015	Identifier	token		6313973	0					
ANR	6314016	Identifier	JSON_ESCAPE		6313973	1					
ANR	6314017	ExpressionStatement	val = token_get_value ( token )	23:4:279:307	6313973	5	True				
ANR	6314018	AssignmentExpression	val = token_get_value ( token )		6313973	0		=			
ANR	6314019	Identifier	val		6313973	0					
ANR	6314020	CallExpression	token_get_value ( token )		6313973	1					
ANR	6314021	Callee	token_get_value		6313973	0					
ANR	6314022	Identifier	token_get_value		6313973	0					
ANR	6314023	ArgumentList	token		6313973	1					
ANR	6314024	Argument	token		6313973	0					
ANR	6314025	Identifier	token		6313973	0					
ANR	6314026	IfStatement	"if ( ! strcmp ( val , ""%p"" ) )"		6313973	6					
ANR	6314027	Condition	"! strcmp ( val , ""%p"" )"	27:8:320:337	6313973	0	True				
ANR	6314028	UnaryOperationExpression	"! strcmp ( val , ""%p"" )"		6313973	0					
ANR	6314029	UnaryOperator	!		6313973	0					
ANR	6314030	CallExpression	"strcmp ( val , ""%p"" )"		6313973	1					
ANR	6314031	Callee	strcmp		6313973	0					
ANR	6314032	Identifier	strcmp		6313973	0					
ANR	6314033	ArgumentList	val		6313973	1					
ANR	6314034	Argument	val		6313973	0					
ANR	6314035	Identifier	val		6313973	0					
ANR	6314036	Argument	"""%p"""		6313973	1					
ANR	6314037	PrimaryExpression	"""%p"""		6313973	0					
ANR	6314038	CompoundStatement		25:28:271:271	6313973	1					
ANR	6314039	Statement	return	29:8:351:356	6313973	0	True				
ANR	6314040	Statement	va_arg	29:15:358:363	6313973	1	True				
ANR	6314041	Statement	(	29:21:364:364	6313973	2	True				
ANR	6314042	Statement	*	29:22:365:365	6313973	3	True				
ANR	6314043	Statement	ap	29:23:366:367	6313973	4	True				
ANR	6314044	Statement	","	29:25:368:368	6313973	5	True				
ANR	6314045	Statement	QObject	29:27:370:376	6313973	6	True				
ANR	6314046	Statement	*	29:35:378:378	6313973	7	True				
ANR	6314047	Statement	)	29:36:379:379	6313973	8	True				
ANR	6314048	ExpressionStatement		29:37:380:380	6313973	9	True				
ANR	6314049	ElseStatement	else		6313973	0					
ANR	6314050	IfStatement	"if ( ! strcmp ( val , ""%i"" ) )"		6313973	0					
ANR	6314051	Condition	"! strcmp ( val , ""%i"" )"	31:15:398:415	6313973	0	True				
ANR	6314052	UnaryOperationExpression	"! strcmp ( val , ""%i"" )"		6313973	0					
ANR	6314053	UnaryOperator	!		6313973	0					
ANR	6314054	CallExpression	"strcmp ( val , ""%i"" )"		6313973	1					
ANR	6314055	Callee	strcmp		6313973	0					
ANR	6314056	Identifier	strcmp		6313973	0					
ANR	6314057	ArgumentList	val		6313973	1					
ANR	6314058	Argument	val		6313973	0					
ANR	6314059	Identifier	val		6313973	0					
ANR	6314060	Argument	"""%i"""		6313973	1					
ANR	6314061	PrimaryExpression	"""%i"""		6313973	0					
ANR	6314062	CompoundStatement		29:35:349:349	6313973	1					
ANR	6314063	ReturnStatement	"return QOBJECT ( qbool_from_bool ( va_arg ( * ap , int ) ) ) ;"	33:8:429:478	6313973	0	True				
ANR	6314064	CallExpression	"QOBJECT ( qbool_from_bool ( va_arg ( * ap , int ) ) )"		6313973	0					
ANR	6314065	Callee	QOBJECT		6313973	0					
ANR	6314066	Identifier	QOBJECT		6313973	0					
ANR	6314067	ArgumentList	"qbool_from_bool ( va_arg ( * ap , int ) )"		6313973	1					
ANR	6314068	Argument	"qbool_from_bool ( va_arg ( * ap , int ) )"		6313973	0					
ANR	6314069	CallExpression	"qbool_from_bool ( va_arg ( * ap , int ) )"		6313973	0					
ANR	6314070	Callee	qbool_from_bool		6313973	0					
ANR	6314071	Identifier	qbool_from_bool		6313973	0					
ANR	6314072	ArgumentList	"va_arg ( * ap , int )"		6313973	1					
ANR	6314073	Argument	"va_arg ( * ap , int )"		6313973	0					
ANR	6314074	CallExpression	"va_arg ( * ap , int )"		6313973	0					
ANR	6314075	Callee	va_arg		6313973	0					
ANR	6314076	Identifier	va_arg		6313973	0					
ANR	6314077	ArgumentList	* ap		6313973	1					
ANR	6314078	Argument	* ap		6313973	0					
ANR	6314079	UnaryOperationExpression	* ap		6313973	0					
ANR	6314080	UnaryOperator	*		6313973	0					
ANR	6314081	Identifier	ap		6313973	1					
ANR	6314082	Argument	int		6313973	1					
ANR	6314083	Identifier	int		6313973	0					
ANR	6314084	ElseStatement	else		6313973	0					
ANR	6314085	IfStatement	"if ( ! strcmp ( val , ""%d"" ) )"		6313973	0					
ANR	6314086	Condition	"! strcmp ( val , ""%d"" )"	35:15:496:513	6313973	0	True				
ANR	6314087	UnaryOperationExpression	"! strcmp ( val , ""%d"" )"		6313973	0					
ANR	6314088	UnaryOperator	!		6313973	0					
ANR	6314089	CallExpression	"strcmp ( val , ""%d"" )"		6313973	1					
ANR	6314090	Callee	strcmp		6313973	0					
ANR	6314091	Identifier	strcmp		6313973	0					
ANR	6314092	ArgumentList	val		6313973	1					
ANR	6314093	Argument	val		6313973	0					
ANR	6314094	Identifier	val		6313973	0					
ANR	6314095	Argument	"""%d"""		6313973	1					
ANR	6314096	PrimaryExpression	"""%d"""		6313973	0					
ANR	6314097	CompoundStatement		33:35:447:447	6313973	1					
ANR	6314098	ReturnStatement	"return QOBJECT ( qint_from_int ( va_arg ( * ap , int ) ) ) ;"	37:8:527:574	6313973	0	True				
ANR	6314099	CallExpression	"QOBJECT ( qint_from_int ( va_arg ( * ap , int ) ) )"		6313973	0					
ANR	6314100	Callee	QOBJECT		6313973	0					
ANR	6314101	Identifier	QOBJECT		6313973	0					
ANR	6314102	ArgumentList	"qint_from_int ( va_arg ( * ap , int ) )"		6313973	1					
ANR	6314103	Argument	"qint_from_int ( va_arg ( * ap , int ) )"		6313973	0					
ANR	6314104	CallExpression	"qint_from_int ( va_arg ( * ap , int ) )"		6313973	0					
ANR	6314105	Callee	qint_from_int		6313973	0					
ANR	6314106	Identifier	qint_from_int		6313973	0					
ANR	6314107	ArgumentList	"va_arg ( * ap , int )"		6313973	1					
ANR	6314108	Argument	"va_arg ( * ap , int )"		6313973	0					
ANR	6314109	CallExpression	"va_arg ( * ap , int )"		6313973	0					
ANR	6314110	Callee	va_arg		6313973	0					
ANR	6314111	Identifier	va_arg		6313973	0					
ANR	6314112	ArgumentList	* ap		6313973	1					
ANR	6314113	Argument	* ap		6313973	0					
ANR	6314114	UnaryOperationExpression	* ap		6313973	0					
ANR	6314115	UnaryOperator	*		6313973	0					
ANR	6314116	Identifier	ap		6313973	1					
ANR	6314117	Argument	int		6313973	1					
ANR	6314118	Identifier	int		6313973	0					
ANR	6314119	ElseStatement	else		6313973	0					
ANR	6314120	IfStatement	"if ( ! strcmp ( val , ""%ld"" ) )"		6313973	0					
ANR	6314121	Condition	"! strcmp ( val , ""%ld"" )"	39:15:592:610	6313973	0	True				
ANR	6314122	UnaryOperationExpression	"! strcmp ( val , ""%ld"" )"		6313973	0					
ANR	6314123	UnaryOperator	!		6313973	0					
ANR	6314124	CallExpression	"strcmp ( val , ""%ld"" )"		6313973	1					
ANR	6314125	Callee	strcmp		6313973	0					
ANR	6314126	Identifier	strcmp		6313973	0					
ANR	6314127	ArgumentList	val		6313973	1					
ANR	6314128	Argument	val		6313973	0					
ANR	6314129	Identifier	val		6313973	0					
ANR	6314130	Argument	"""%ld"""		6313973	1					
ANR	6314131	PrimaryExpression	"""%ld"""		6313973	0					
ANR	6314132	CompoundStatement		37:36:544:544	6313973	1					
ANR	6314133	Statement	return	41:8:624:629	6313973	0	True				
ANR	6314134	Statement	QOBJECT	41:15:631:637	6313973	1	True				
ANR	6314135	Statement	(	41:22:638:638	6313973	2	True				
ANR	6314136	Statement	qint_from_int	41:23:639:651	6313973	3	True				
ANR	6314137	Statement	(	41:36:652:652	6313973	4	True				
ANR	6314138	Statement	va_arg	41:37:653:658	6313973	5	True				
ANR	6314139	Statement	(	41:43:659:659	6313973	6	True				
ANR	6314140	Statement	*	41:44:660:660	6313973	7	True				
ANR	6314141	Statement	ap	41:45:661:662	6313973	8	True				
ANR	6314142	Statement	","	41:47:663:663	6313973	9	True				
ANR	6314143	Statement	long	41:49:665:668	6313973	10	True				
ANR	6314144	Statement	)	41:53:669:669	6313973	11	True				
ANR	6314145	Statement	)	41:54:670:670	6313973	12	True				
ANR	6314146	Statement	)	41:55:671:671	6313973	13	True				
ANR	6314147	ExpressionStatement		41:56:672:672	6313973	14	True				
ANR	6314148	ElseStatement	else		6313973	0					
ANR	6314149	IfStatement	"if ( ! strcmp ( val , ""%lld"" ) || ! strcmp ( val , ""%I64d"" ) )"		6313973	0					
ANR	6314150	Condition	"! strcmp ( val , ""%lld"" ) || ! strcmp ( val , ""%I64d"" )"	43:15:690:750	6313973	0	True				
ANR	6314151	OrExpression	"! strcmp ( val , ""%lld"" ) || ! strcmp ( val , ""%I64d"" )"		6313973	0		||			
ANR	6314152	UnaryOperationExpression	"! strcmp ( val , ""%lld"" )"		6313973	0					
ANR	6314153	UnaryOperator	!		6313973	0					
ANR	6314154	CallExpression	"strcmp ( val , ""%lld"" )"		6313973	1					
ANR	6314155	Callee	strcmp		6313973	0					
ANR	6314156	Identifier	strcmp		6313973	0					
ANR	6314157	ArgumentList	val		6313973	1					
ANR	6314158	Argument	val		6313973	0					
ANR	6314159	Identifier	val		6313973	0					
ANR	6314160	Argument	"""%lld"""		6313973	1					
ANR	6314161	PrimaryExpression	"""%lld"""		6313973	0					
ANR	6314162	UnaryOperationExpression	"! strcmp ( val , ""%I64d"" )"		6313973	1					
ANR	6314163	UnaryOperator	!		6313973	0					
ANR	6314164	CallExpression	"strcmp ( val , ""%I64d"" )"		6313973	1					
ANR	6314165	Callee	strcmp		6313973	0					
ANR	6314166	Identifier	strcmp		6313973	0					
ANR	6314167	ArgumentList	val		6313973	1					
ANR	6314168	Argument	val		6313973	0					
ANR	6314169	Identifier	val		6313973	0					
ANR	6314170	Argument	"""%I64d"""		6313973	1					
ANR	6314171	PrimaryExpression	"""%I64d"""		6313973	0					
ANR	6314172	CompoundStatement		43:38:684:684	6313973	1					
ANR	6314173	Statement	return	47:8:764:769	6313973	0	True				
ANR	6314174	Statement	QOBJECT	47:15:771:777	6313973	1	True				
ANR	6314175	Statement	(	47:22:778:778	6313973	2	True				
ANR	6314176	Statement	qint_from_int	47:23:779:791	6313973	3	True				
ANR	6314177	Statement	(	47:36:792:792	6313973	4	True				
ANR	6314178	Statement	va_arg	47:37:793:798	6313973	5	True				
ANR	6314179	Statement	(	47:43:799:799	6313973	6	True				
ANR	6314180	Statement	*	47:44:800:800	6313973	7	True				
ANR	6314181	Statement	ap	47:45:801:802	6313973	8	True				
ANR	6314182	Statement	","	47:47:803:803	6313973	9	True				
ANR	6314183	Statement	long	47:49:805:808	6313973	10	True				
ANR	6314184	Statement	long	47:54:810:813	6313973	11	True				
ANR	6314185	Statement	)	47:58:814:814	6313973	12	True				
ANR	6314186	Statement	)	47:59:815:815	6313973	13	True				
ANR	6314187	Statement	)	47:60:816:816	6313973	14	True				
ANR	6314188	ExpressionStatement		47:61:817:817	6313973	15	True				
ANR	6314189	ElseStatement	else		6313973	0					
ANR	6314190	IfStatement	"if ( ! strcmp ( val , ""%s"" ) )"		6313973	0					
ANR	6314191	Condition	"! strcmp ( val , ""%s"" )"	49:15:835:852	6313973	0	True				
ANR	6314192	UnaryOperationExpression	"! strcmp ( val , ""%s"" )"		6313973	0					
ANR	6314193	UnaryOperator	!		6313973	0					
ANR	6314194	CallExpression	"strcmp ( val , ""%s"" )"		6313973	1					
ANR	6314195	Callee	strcmp		6313973	0					
ANR	6314196	Identifier	strcmp		6313973	0					
ANR	6314197	ArgumentList	val		6313973	1					
ANR	6314198	Argument	val		6313973	0					
ANR	6314199	Identifier	val		6313973	0					
ANR	6314200	Argument	"""%s"""		6313973	1					
ANR	6314201	PrimaryExpression	"""%s"""		6313973	0					
ANR	6314202	CompoundStatement		47:35:786:786	6313973	1					
ANR	6314203	Statement	return	51:8:866:871	6313973	0	True				
ANR	6314204	Statement	QOBJECT	51:15:873:879	6313973	1	True				
ANR	6314205	Statement	(	51:22:880:880	6313973	2	True				
ANR	6314206	Statement	qstring_from_str	51:23:881:896	6313973	3	True				
ANR	6314207	Statement	(	51:39:897:897	6313973	4	True				
ANR	6314208	Statement	va_arg	51:40:898:903	6313973	5	True				
ANR	6314209	Statement	(	51:46:904:904	6313973	6	True				
ANR	6314210	Statement	*	51:47:905:905	6313973	7	True				
ANR	6314211	Statement	ap	51:48:906:907	6313973	8	True				
ANR	6314212	Statement	","	51:50:908:908	6313973	9	True				
ANR	6314213	Statement	const	51:52:910:914	6313973	10	True				
ANR	6314214	Statement	char	51:58:916:919	6313973	11	True				
ANR	6314215	Statement	*	51:63:921:921	6313973	12	True				
ANR	6314216	Statement	)	51:64:922:922	6313973	13	True				
ANR	6314217	Statement	)	51:65:923:923	6313973	14	True				
ANR	6314218	Statement	)	51:66:924:924	6313973	15	True				
ANR	6314219	ExpressionStatement		51:67:925:925	6313973	16	True				
ANR	6314220	ElseStatement	else		6313973	0					
ANR	6314221	IfStatement	"if ( ! strcmp ( val , ""%f"" ) )"		6313973	0					
ANR	6314222	Condition	"! strcmp ( val , ""%f"" )"	53:15:943:960	6313973	0	True				
ANR	6314223	UnaryOperationExpression	"! strcmp ( val , ""%f"" )"		6313973	0					
ANR	6314224	UnaryOperator	!		6313973	0					
ANR	6314225	CallExpression	"strcmp ( val , ""%f"" )"		6313973	1					
ANR	6314226	Callee	strcmp		6313973	0					
ANR	6314227	Identifier	strcmp		6313973	0					
ANR	6314228	ArgumentList	val		6313973	1					
ANR	6314229	Argument	val		6313973	0					
ANR	6314230	Identifier	val		6313973	0					
ANR	6314231	Argument	"""%f"""		6313973	1					
ANR	6314232	PrimaryExpression	"""%f"""		6313973	0					
ANR	6314233	CompoundStatement		51:35:894:894	6313973	1					
ANR	6314234	ReturnStatement	"return QOBJECT ( qfloat_from_double ( va_arg ( * ap , double ) ) ) ;"	55:8:974:1029	6313973	0	True				
ANR	6314235	CallExpression	"QOBJECT ( qfloat_from_double ( va_arg ( * ap , double ) ) )"		6313973	0					
ANR	6314236	Callee	QOBJECT		6313973	0					
ANR	6314237	Identifier	QOBJECT		6313973	0					
ANR	6314238	ArgumentList	"qfloat_from_double ( va_arg ( * ap , double ) )"		6313973	1					
ANR	6314239	Argument	"qfloat_from_double ( va_arg ( * ap , double ) )"		6313973	0					
ANR	6314240	CallExpression	"qfloat_from_double ( va_arg ( * ap , double ) )"		6313973	0					
ANR	6314241	Callee	qfloat_from_double		6313973	0					
ANR	6314242	Identifier	qfloat_from_double		6313973	0					
ANR	6314243	ArgumentList	"va_arg ( * ap , double )"		6313973	1					
ANR	6314244	Argument	"va_arg ( * ap , double )"		6313973	0					
ANR	6314245	CallExpression	"va_arg ( * ap , double )"		6313973	0					
ANR	6314246	Callee	va_arg		6313973	0					
ANR	6314247	Identifier	va_arg		6313973	0					
ANR	6314248	ArgumentList	* ap		6313973	1					
ANR	6314249	Argument	* ap		6313973	0					
ANR	6314250	UnaryOperationExpression	* ap		6313973	0					
ANR	6314251	UnaryOperator	*		6313973	0					
ANR	6314252	Identifier	ap		6313973	1					
ANR	6314253	Argument	double		6313973	1					
ANR	6314254	Identifier	double		6313973	0					
ANR	6314255	ReturnStatement	return NULL ;	59:4:1043:1054	6313973	7	True				
ANR	6314256	Identifier	NULL		6313973	0					
ANR	6314257	ReturnType	static QObject *		6313973	1					
ANR	6314258	Identifier	parse_escape		6313973	2					
ANR	6314259	ParameterList	"JSONParserContext * ctxt , va_list * ap"		6313973	3					
ANR	6314260	Parameter	JSONParserContext * ctxt	1:29:29:51	6313973	0	True				
ANR	6314261	ParameterType	JSONParserContext *		6313973	0					
ANR	6314262	Identifier	ctxt		6313973	1					
ANR	6314263	Parameter	va_list * ap	1:54:54:64	6313973	1	True				
ANR	6314264	ParameterType	va_list *		6313973	0					
ANR	6314265	Identifier	ap		6313973	1					
ANR	6314266	CFGEntryNode	ENTRY		6313973		True				
ANR	6314267	CFGExitNode	EXIT		6313973		True				
ANR	6314268	Symbol	val		6313973						
ANR	6314269	Symbol	strcmp		6313973						
ANR	6314270	Symbol	qbool_from_bool		6313973						
ANR	6314271	Symbol	ctxt		6313973						
ANR	6314272	Symbol	NULL		6313973						
ANR	6314273	Symbol	qint_from_int		6313973						
ANR	6314274	Symbol	token_get_type		6313973						
ANR	6314275	Symbol	double		6313973						
ANR	6314276	Symbol	qfloat_from_double		6313973						
ANR	6314277	Symbol	int		6313973						
ANR	6314278	Symbol	ap		6313973						
ANR	6314279	Symbol	token		6313973						
ANR	6314280	Symbol	parser_context_pop_token		6313973						
ANR	6314281	Symbol	token_get_value		6313973						
ANR	6314282	Symbol	* ap		6313973						
ANR	6314283	Symbol	JSON_ESCAPE		6313973						
ANR	6314284	Symbol	QOBJECT		6313973						
ANR	6314285	Symbol	va_arg		6313973						
