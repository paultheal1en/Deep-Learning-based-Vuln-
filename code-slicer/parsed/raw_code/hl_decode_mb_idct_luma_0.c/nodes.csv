command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4650139	File	/home/p4ultr4n/workplace/ReVeal/raw_code/hl_decode_mb_idct_luma_0.c								
ANR	4650140	Function	hl_decode_mb_idct_luma	1:0:0:4013							
ANR	4650141	FunctionDef	"hl_decode_mb_idct_luma (H264Context * h , int mb_type , int is_h264 , int simple , int transform_bypass , int pixel_shift , int * block_offset , int linesize , uint8_t * dest_y , int p)"		4650140	0					
ANR	4650142	CompoundStatement		15:0:521:4013	4650140	0					
ANR	4650143	IdentifierDeclStatement	"void ( * idct_add ) ( uint8_t * dst , int16_t * block , int stride ) ;"	17:4:528:586	4650140	0	True				
ANR	4650144	IdentifierDecl	"( * idct_add ) ( uint8_t * dst , int16_t * block , int stride )"		4650140	0					
ANR	4650145	IdentifierDeclType	"void ( * ) ( uint8_t * dst , int16_t * block , int stride )"		4650140	0					
ANR	4650146	Identifier	idct_add		4650140	1					
ANR	4650147	Identifier	dst		4650140	2					
ANR	4650148	Identifier	block		4650140	3					
ANR	4650149	IdentifierDeclStatement	int i ;	19:4:593:598	4650140	1	True				
ANR	4650150	IdentifierDecl	i		4650140	0					
ANR	4650151	IdentifierDeclType	int		4650140	0					
ANR	4650152	Identifier	i		4650140	1					
ANR	4650153	ExpressionStatement	block_offset += 16 * p	21:4:605:627	4650140	2	True				
ANR	4650154	AssignmentExpression	block_offset += 16 * p		4650140	0		+=			
ANR	4650155	Identifier	block_offset		4650140	0					
ANR	4650156	MultiplicativeExpression	16 * p		4650140	1		*			
ANR	4650157	PrimaryExpression	16		4650140	0					
ANR	4650158	Identifier	p		4650140	1					
ANR	4650159	IfStatement	if ( ! IS_INTRA4x4 ( mb_type ) )		4650140	3					
ANR	4650160	Condition	! IS_INTRA4x4 ( mb_type )	23:8:638:658	4650140	0	True				
ANR	4650161	UnaryOperationExpression	! IS_INTRA4x4 ( mb_type )		4650140	0					
ANR	4650162	UnaryOperator	!		4650140	0					
ANR	4650163	CallExpression	IS_INTRA4x4 ( mb_type )		4650140	1					
ANR	4650164	Callee	IS_INTRA4x4		4650140	0					
ANR	4650165	Identifier	IS_INTRA4x4		4650140	0					
ANR	4650166	ArgumentList	mb_type		4650140	1					
ANR	4650167	Argument	mb_type		4650140	0					
ANR	4650168	Identifier	mb_type		4650140	0					
ANR	4650169	CompoundStatement		9:31:139:139	4650140	1					
ANR	4650170	IfStatement	if ( is_h264 )		4650140	0					
ANR	4650171	Condition	is_h264	25:12:676:682	4650140	0	True				
ANR	4650172	Identifier	is_h264		4650140	0					
ANR	4650173	CompoundStatement		11:21:163:163	4650140	1					
ANR	4650174	IfStatement	if ( IS_INTRA16x16 ( mb_type ) )		4650140	0					
ANR	4650175	Condition	IS_INTRA16x16 ( mb_type )	27:16:704:725	4650140	0	True				
ANR	4650176	CallExpression	IS_INTRA16x16 ( mb_type )		4650140	0					
ANR	4650177	Callee	IS_INTRA16x16		4650140	0					
ANR	4650178	Identifier	IS_INTRA16x16		4650140	0					
ANR	4650179	ArgumentList	mb_type		4650140	1					
ANR	4650180	Argument	mb_type		4650140	0					
ANR	4650181	Identifier	mb_type		4650140	0					
ANR	4650182	CompoundStatement		13:40:206:206	4650140	1					
ANR	4650183	IfStatement	if ( transform_bypass )		4650140	0					
ANR	4650184	Condition	transform_bypass	29:20:751:766	4650140	0	True				
ANR	4650185	Identifier	transform_bypass		4650140	0					
ANR	4650186	CompoundStatement		15:38:247:247	4650140	1					
ANR	4650187	IfStatement	if ( h -> sps . profile_idc == 244 && ( h -> intra16x16_pred_mode == VERT_PRED8x8 || h -> intra16x16_pred_mode == HOR_PRED8x8 ) )		4650140	0					
ANR	4650188	Condition	h -> sps . profile_idc == 244 && ( h -> intra16x16_pred_mode == VERT_PRED8x8 || h -> intra16x16_pred_mode == HOR_PRED8x8 )	31:24:796:958	4650140	0	True				
ANR	4650189	AndExpression	h -> sps . profile_idc == 244 && ( h -> intra16x16_pred_mode == VERT_PRED8x8 || h -> intra16x16_pred_mode == HOR_PRED8x8 )		4650140	0		&&			
ANR	4650190	EqualityExpression	h -> sps . profile_idc == 244		4650140	0		==			
ANR	4650191	MemberAccess	h -> sps . profile_idc		4650140	0					
ANR	4650192	PtrMemberAccess	h -> sps		4650140	0					
ANR	4650193	Identifier	h		4650140	0					
ANR	4650194	Identifier	sps		4650140	1					
ANR	4650195	Identifier	profile_idc		4650140	1					
ANR	4650196	PrimaryExpression	244		4650140	1					
ANR	4650197	OrExpression	h -> intra16x16_pred_mode == VERT_PRED8x8 || h -> intra16x16_pred_mode == HOR_PRED8x8		4650140	1		||			
ANR	4650198	EqualityExpression	h -> intra16x16_pred_mode == VERT_PRED8x8		4650140	0		==			
ANR	4650199	PtrMemberAccess	h -> intra16x16_pred_mode		4650140	0					
ANR	4650200	Identifier	h		4650140	0					
ANR	4650201	Identifier	intra16x16_pred_mode		4650140	1					
ANR	4650202	Identifier	VERT_PRED8x8		4650140	1					
ANR	4650203	EqualityExpression	h -> intra16x16_pred_mode == HOR_PRED8x8		4650140	1		==			
ANR	4650204	PtrMemberAccess	h -> intra16x16_pred_mode		4650140	0					
ANR	4650205	Identifier	h		4650140	0					
ANR	4650206	Identifier	intra16x16_pred_mode		4650140	1					
ANR	4650207	Identifier	HOR_PRED8x8		4650140	1					
ANR	4650208	CompoundStatement		21:66:439:439	4650140	1					
ANR	4650209	ExpressionStatement	"h -> hpc . pred16x16_add [ h -> intra16x16_pred_mode ] ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize )"	37:24:988:1241	4650140	0	True				
ANR	4650210	CallExpression	"h -> hpc . pred16x16_add [ h -> intra16x16_pred_mode ] ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize )"		4650140	0					
ANR	4650211	Callee	h -> hpc . pred16x16_add [ h -> intra16x16_pred_mode ]		4650140	0					
ANR	4650212	ArrayIndexing	h -> hpc . pred16x16_add [ h -> intra16x16_pred_mode ]		4650140	0					
ANR	4650213	MemberAccess	h -> hpc . pred16x16_add		4650140	0					
ANR	4650214	PtrMemberAccess	h -> hpc		4650140	0					
ANR	4650215	Identifier	h		4650140	0					
ANR	4650216	Identifier	hpc		4650140	1					
ANR	4650217	Identifier	pred16x16_add		4650140	1					
ANR	4650218	PtrMemberAccess	h -> intra16x16_pred_mode		4650140	1					
ANR	4650219	Identifier	h		4650140	0					
ANR	4650220	Identifier	intra16x16_pred_mode		4650140	1					
ANR	4650221	ArgumentList	dest_y		4650140	1					
ANR	4650222	Argument	dest_y		4650140	0					
ANR	4650223	Identifier	dest_y		4650140	0					
ANR	4650224	Argument	block_offset		4650140	1					
ANR	4650225	Identifier	block_offset		4650140	0					
ANR	4650226	Argument	h -> mb + ( p * 256 << pixel_shift )		4650140	2					
ANR	4650227	AdditiveExpression	h -> mb + ( p * 256 << pixel_shift )		4650140	0		+			
ANR	4650228	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650229	Identifier	h		4650140	0					
ANR	4650230	Identifier	mb		4650140	1					
ANR	4650231	ShiftExpression	p * 256 << pixel_shift		4650140	1		<<			
ANR	4650232	MultiplicativeExpression	p * 256		4650140	0		*			
ANR	4650233	Identifier	p		4650140	0					
ANR	4650234	PrimaryExpression	256		4650140	1					
ANR	4650235	Identifier	pixel_shift		4650140	1					
ANR	4650236	Argument	linesize		4650140	3					
ANR	4650237	Identifier	linesize		4650140	0					
ANR	4650238	ElseStatement	else		4650140	0					
ANR	4650239	CompoundStatement		29:27:749:749	4650140	0					
ANR	4650240	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		4650140	0					
ANR	4650241	ForInit	i = 0 ;	45:29:1303:1308	4650140	0	True				
ANR	4650242	AssignmentExpression	i = 0		4650140	0		=			
ANR	4650243	Identifier	i		4650140	0					
ANR	4650244	PrimaryExpression	0		4650140	1					
ANR	4650245	Condition	i < 16	45:36:1310:1315	4650140	1	True				
ANR	4650246	RelationalExpression	i < 16		4650140	0		<			
ANR	4650247	Identifier	i		4650140	0					
ANR	4650248	PrimaryExpression	16		4650140	1					
ANR	4650249	PostIncDecOperationExpression	i ++	45:44:1318:1320	4650140	2	True				
ANR	4650250	Identifier	i		4650140	0					
ANR	4650251	IncDec	++		4650140	1					
ANR	4650252	IfStatement	"if ( h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || dctcoef_get ( h -> mb , pixel_shift , i * 16 + p * 256 ) )"		4650140	3					
ANR	4650253	Condition	"h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || dctcoef_get ( h -> mb , pixel_shift , i * 16 + p * 256 )"	47:32:1356:1483	4650140	0	True				
ANR	4650254	OrExpression	"h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || dctcoef_get ( h -> mb , pixel_shift , i * 16 + p * 256 )"		4650140	0		||			
ANR	4650255	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4650140	0					
ANR	4650256	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650257	Identifier	h		4650140	0					
ANR	4650258	Identifier	non_zero_count_cache		4650140	1					
ANR	4650259	ArrayIndexing	scan8 [ i + p * 16 ]		4650140	1					
ANR	4650260	Identifier	scan8		4650140	0					
ANR	4650261	AdditiveExpression	i + p * 16		4650140	1		+			
ANR	4650262	Identifier	i		4650140	0					
ANR	4650263	MultiplicativeExpression	p * 16		4650140	1		*			
ANR	4650264	Identifier	p		4650140	0					
ANR	4650265	PrimaryExpression	16		4650140	1					
ANR	4650266	CallExpression	"dctcoef_get ( h -> mb , pixel_shift , i * 16 + p * 256 )"		4650140	1					
ANR	4650267	Callee	dctcoef_get		4650140	0					
ANR	4650268	Identifier	dctcoef_get		4650140	0					
ANR	4650269	ArgumentList	h -> mb		4650140	1					
ANR	4650270	Argument	h -> mb		4650140	0					
ANR	4650271	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650272	Identifier	h		4650140	0					
ANR	4650273	Identifier	mb		4650140	1					
ANR	4650274	Argument	pixel_shift		4650140	1					
ANR	4650275	Identifier	pixel_shift		4650140	0					
ANR	4650276	Argument	i * 16 + p * 256		4650140	2					
ANR	4650277	AdditiveExpression	i * 16 + p * 256		4650140	0		+			
ANR	4650278	MultiplicativeExpression	i * 16		4650140	0		*			
ANR	4650279	Identifier	i		4650140	0					
ANR	4650280	PrimaryExpression	16		4650140	1					
ANR	4650281	MultiplicativeExpression	p * 256		4650140	1		*			
ANR	4650282	Identifier	p		4650140	0					
ANR	4650283	PrimaryExpression	256		4650140	1					
ANR	4650284	ExpressionStatement	"h -> h264dsp . h264_add_pixels4 ( dest_y + block_offset [ i ] , h -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	51:32:1519:1747	4650140	1	True				
ANR	4650285	CallExpression	"h -> h264dsp . h264_add_pixels4 ( dest_y + block_offset [ i ] , h -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4650140	0					
ANR	4650286	Callee	h -> h264dsp . h264_add_pixels4		4650140	0					
ANR	4650287	MemberAccess	h -> h264dsp . h264_add_pixels4		4650140	0					
ANR	4650288	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650289	Identifier	h		4650140	0					
ANR	4650290	Identifier	h264dsp		4650140	1					
ANR	4650291	Identifier	h264_add_pixels4		4650140	1					
ANR	4650292	ArgumentList	dest_y + block_offset [ i ]		4650140	1					
ANR	4650293	Argument	dest_y + block_offset [ i ]		4650140	0					
ANR	4650294	AdditiveExpression	dest_y + block_offset [ i ]		4650140	0		+			
ANR	4650295	Identifier	dest_y		4650140	0					
ANR	4650296	ArrayIndexing	block_offset [ i ]		4650140	1					
ANR	4650297	Identifier	block_offset		4650140	0					
ANR	4650298	Identifier	i		4650140	1					
ANR	4650299	Argument	h -> mb + ( i * 16 + p * 256 << pixel_shift )		4650140	1					
ANR	4650300	AdditiveExpression	h -> mb + ( i * 16 + p * 256 << pixel_shift )		4650140	0		+			
ANR	4650301	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650302	Identifier	h		4650140	0					
ANR	4650303	Identifier	mb		4650140	1					
ANR	4650304	ShiftExpression	i * 16 + p * 256 << pixel_shift		4650140	1		<<			
ANR	4650305	AdditiveExpression	i * 16 + p * 256		4650140	0		+			
ANR	4650306	MultiplicativeExpression	i * 16		4650140	0		*			
ANR	4650307	Identifier	i		4650140	0					
ANR	4650308	PrimaryExpression	16		4650140	1					
ANR	4650309	MultiplicativeExpression	p * 256		4650140	1		*			
ANR	4650310	Identifier	p		4650140	0					
ANR	4650311	PrimaryExpression	256		4650140	1					
ANR	4650312	Identifier	pixel_shift		4650140	1					
ANR	4650313	Argument	linesize		4650140	2					
ANR	4650314	Identifier	linesize		4650140	0					
ANR	4650315	ElseStatement	else		4650140	0					
ANR	4650316	CompoundStatement		45:23:1274:1274	4650140	0					
ANR	4650317	ExpressionStatement	"h -> h264dsp . h264_idct_add16intra ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"	61:20:1819:2112	4650140	0	True				
ANR	4650318	CallExpression	"h -> h264dsp . h264_idct_add16intra ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"		4650140	0					
ANR	4650319	Callee	h -> h264dsp . h264_idct_add16intra		4650140	0					
ANR	4650320	MemberAccess	h -> h264dsp . h264_idct_add16intra		4650140	0					
ANR	4650321	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650322	Identifier	h		4650140	0					
ANR	4650323	Identifier	h264dsp		4650140	1					
ANR	4650324	Identifier	h264_idct_add16intra		4650140	1					
ANR	4650325	ArgumentList	dest_y		4650140	1					
ANR	4650326	Argument	dest_y		4650140	0					
ANR	4650327	Identifier	dest_y		4650140	0					
ANR	4650328	Argument	block_offset		4650140	1					
ANR	4650329	Identifier	block_offset		4650140	0					
ANR	4650330	Argument	h -> mb + ( p * 256 << pixel_shift )		4650140	2					
ANR	4650331	AdditiveExpression	h -> mb + ( p * 256 << pixel_shift )		4650140	0		+			
ANR	4650332	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650333	Identifier	h		4650140	0					
ANR	4650334	Identifier	mb		4650140	1					
ANR	4650335	ShiftExpression	p * 256 << pixel_shift		4650140	1		<<			
ANR	4650336	MultiplicativeExpression	p * 256		4650140	0		*			
ANR	4650337	Identifier	p		4650140	0					
ANR	4650338	PrimaryExpression	256		4650140	1					
ANR	4650339	Identifier	pixel_shift		4650140	1					
ANR	4650340	Argument	linesize		4650140	3					
ANR	4650341	Identifier	linesize		4650140	0					
ANR	4650342	Argument	h -> non_zero_count_cache + p * 5 * 8		4650140	4					
ANR	4650343	AdditiveExpression	h -> non_zero_count_cache + p * 5 * 8		4650140	0		+			
ANR	4650344	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650345	Identifier	h		4650140	0					
ANR	4650346	Identifier	non_zero_count_cache		4650140	1					
ANR	4650347	MultiplicativeExpression	p * 5 * 8		4650140	1		*			
ANR	4650348	Identifier	p		4650140	0					
ANR	4650349	MultiplicativeExpression	5 * 8		4650140	1		*			
ANR	4650350	PrimaryExpression	5		4650140	0					
ANR	4650351	PrimaryExpression	8		4650140	1					
ANR	4650352	ElseStatement	else		4650140	0					
ANR	4650353	IfStatement	if ( h -> cbp & 15 )		4650140	0					
ANR	4650354	Condition	h -> cbp & 15	71:23:2157:2167	4650140	0	True				
ANR	4650355	BitAndExpression	h -> cbp & 15		4650140	0		&			
ANR	4650356	PtrMemberAccess	h -> cbp		4650140	0					
ANR	4650357	Identifier	h		4650140	0					
ANR	4650358	Identifier	cbp		4650140	1					
ANR	4650359	PrimaryExpression	15		4650140	1					
ANR	4650360	CompoundStatement		57:36:1648:1648	4650140	1					
ANR	4650361	IfStatement	if ( transform_bypass )		4650140	0					
ANR	4650362	Condition	transform_bypass	73:20:2193:2208	4650140	0	True				
ANR	4650363	Identifier	transform_bypass		4650140	0					
ANR	4650364	CompoundStatement		61:20:1712:1753	4650140	1					
ANR	4650365	IdentifierDeclStatement	const int di = IS_8x8DCT ( mb_type ) ? 4 : 1 ;	75:20:2234:2275	4650140	0	True				
ANR	4650366	IdentifierDecl	di = IS_8x8DCT ( mb_type ) ? 4 : 1		4650140	0					
ANR	4650367	IdentifierDeclType	const int		4650140	0					
ANR	4650368	Identifier	di		4650140	1					
ANR	4650369	AssignmentExpression	di = IS_8x8DCT ( mb_type ) ? 4 : 1		4650140	2		=			
ANR	4650370	Identifier	di		4650140	0					
ANR	4650371	ConditionalExpression	IS_8x8DCT ( mb_type ) ? 4 : 1		4650140	1					
ANR	4650372	Condition	IS_8x8DCT ( mb_type )		4650140	0					
ANR	4650373	CallExpression	IS_8x8DCT ( mb_type )		4650140	0					
ANR	4650374	Callee	IS_8x8DCT		4650140	0					
ANR	4650375	Identifier	IS_8x8DCT		4650140	0					
ANR	4650376	ArgumentList	mb_type		4650140	1					
ANR	4650377	Argument	mb_type		4650140	0					
ANR	4650378	Identifier	mb_type		4650140	0					
ANR	4650379	PrimaryExpression	4		4650140	1					
ANR	4650380	PrimaryExpression	1		4650140	2					
ANR	4650381	ExpressionStatement	idct_add = IS_8x8DCT ( mb_type ) ? h -> h264dsp . h264_add_pixels8 : h -> h264dsp . h264_add_pixels4	77:20:2298:2438	4650140	1	True				
ANR	4650382	AssignmentExpression	idct_add = IS_8x8DCT ( mb_type ) ? h -> h264dsp . h264_add_pixels8 : h -> h264dsp . h264_add_pixels4		4650140	0		=			
ANR	4650383	Identifier	idct_add		4650140	0					
ANR	4650384	ConditionalExpression	IS_8x8DCT ( mb_type ) ? h -> h264dsp . h264_add_pixels8 : h -> h264dsp . h264_add_pixels4		4650140	1					
ANR	4650385	Condition	IS_8x8DCT ( mb_type )		4650140	0					
ANR	4650386	CallExpression	IS_8x8DCT ( mb_type )		4650140	0					
ANR	4650387	Callee	IS_8x8DCT		4650140	0					
ANR	4650388	Identifier	IS_8x8DCT		4650140	0					
ANR	4650389	ArgumentList	mb_type		4650140	1					
ANR	4650390	Argument	mb_type		4650140	0					
ANR	4650391	Identifier	mb_type		4650140	0					
ANR	4650392	MemberAccess	h -> h264dsp . h264_add_pixels8		4650140	1					
ANR	4650393	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650394	Identifier	h		4650140	0					
ANR	4650395	Identifier	h264dsp		4650140	1					
ANR	4650396	Identifier	h264_add_pixels8		4650140	1					
ANR	4650397	MemberAccess	h -> h264dsp . h264_add_pixels4		4650140	2					
ANR	4650398	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650399	Identifier	h		4650140	0					
ANR	4650400	Identifier	h264dsp		4650140	1					
ANR	4650401	Identifier	h264_add_pixels4		4650140	1					
ANR	4650402	ForStatement	for ( i = 0 ; i < 16 ; i += di )		4650140	2					
ANR	4650403	ForInit	i = 0 ;	81:25:2466:2471	4650140	0	True				
ANR	4650404	AssignmentExpression	i = 0		4650140	0		=			
ANR	4650405	Identifier	i		4650140	0					
ANR	4650406	PrimaryExpression	0		4650140	1					
ANR	4650407	Condition	i < 16	81:32:2473:2478	4650140	1	True				
ANR	4650408	RelationalExpression	i < 16		4650140	0		<			
ANR	4650409	Identifier	i		4650140	0					
ANR	4650410	PrimaryExpression	16		4650140	1					
ANR	4650411	AssignmentExpression	i += di	81:40:2481:2487	4650140	2	True	+=			
ANR	4650412	Identifier	i		4650140	0					
ANR	4650413	Identifier	di		4650140	1					
ANR	4650414	IfStatement	if ( h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] )		4650140	3					
ANR	4650415	Condition	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]	83:28:2519:2560	4650140	0	True				
ANR	4650416	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4650140	0					
ANR	4650417	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650418	Identifier	h		4650140	0					
ANR	4650419	Identifier	non_zero_count_cache		4650140	1					
ANR	4650420	ArrayIndexing	scan8 [ i + p * 16 ]		4650140	1					
ANR	4650421	Identifier	scan8		4650140	0					
ANR	4650422	AdditiveExpression	i + p * 16		4650140	1		+			
ANR	4650423	Identifier	i		4650140	0					
ANR	4650424	MultiplicativeExpression	p * 16		4650140	1		*			
ANR	4650425	Identifier	p		4650140	0					
ANR	4650426	PrimaryExpression	16		4650140	1					
ANR	4650427	ExpressionStatement	"idct_add ( dest_y + block_offset [ i ] , h -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	85:28:2592:2755	4650140	1	True				
ANR	4650428	CallExpression	"idct_add ( dest_y + block_offset [ i ] , h -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4650140	0					
ANR	4650429	Callee	idct_add		4650140	0					
ANR	4650430	Identifier	idct_add		4650140	0					
ANR	4650431	ArgumentList	dest_y + block_offset [ i ]		4650140	1					
ANR	4650432	Argument	dest_y + block_offset [ i ]		4650140	0					
ANR	4650433	AdditiveExpression	dest_y + block_offset [ i ]		4650140	0		+			
ANR	4650434	Identifier	dest_y		4650140	0					
ANR	4650435	ArrayIndexing	block_offset [ i ]		4650140	1					
ANR	4650436	Identifier	block_offset		4650140	0					
ANR	4650437	Identifier	i		4650140	1					
ANR	4650438	Argument	h -> mb + ( i * 16 + p * 256 << pixel_shift )		4650140	1					
ANR	4650439	AdditiveExpression	h -> mb + ( i * 16 + p * 256 << pixel_shift )		4650140	0		+			
ANR	4650440	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650441	Identifier	h		4650140	0					
ANR	4650442	Identifier	mb		4650140	1					
ANR	4650443	ShiftExpression	i * 16 + p * 256 << pixel_shift		4650140	1		<<			
ANR	4650444	AdditiveExpression	i * 16 + p * 256		4650140	0		+			
ANR	4650445	MultiplicativeExpression	i * 16		4650140	0		*			
ANR	4650446	Identifier	i		4650140	0					
ANR	4650447	PrimaryExpression	16		4650140	1					
ANR	4650448	MultiplicativeExpression	p * 256		4650140	1		*			
ANR	4650449	Identifier	p		4650140	0					
ANR	4650450	PrimaryExpression	256		4650140	1					
ANR	4650451	Identifier	pixel_shift		4650140	1					
ANR	4650452	Argument	linesize		4650140	2					
ANR	4650453	Identifier	linesize		4650140	0					
ANR	4650454	ElseStatement	else		4650140	0					
ANR	4650455	CompoundStatement		77:23:2259:2259	4650140	0					
ANR	4650456	IfStatement	if ( IS_8x8DCT ( mb_type ) )		4650140	0					
ANR	4650457	Condition	IS_8x8DCT ( mb_type )	93:24:2808:2825	4650140	0	True				
ANR	4650458	CallExpression	IS_8x8DCT ( mb_type )		4650140	0					
ANR	4650459	Callee	IS_8x8DCT		4650140	0					
ANR	4650460	Identifier	IS_8x8DCT		4650140	0					
ANR	4650461	ArgumentList	mb_type		4650140	1					
ANR	4650462	Argument	mb_type		4650140	0					
ANR	4650463	Identifier	mb_type		4650140	0					
ANR	4650464	ExpressionStatement	"h -> h264dsp . h264_idct8_add4 ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"	95:24:2853:3138	4650140	1	True				
ANR	4650465	CallExpression	"h -> h264dsp . h264_idct8_add4 ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"		4650140	0					
ANR	4650466	Callee	h -> h264dsp . h264_idct8_add4		4650140	0					
ANR	4650467	MemberAccess	h -> h264dsp . h264_idct8_add4		4650140	0					
ANR	4650468	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650469	Identifier	h		4650140	0					
ANR	4650470	Identifier	h264dsp		4650140	1					
ANR	4650471	Identifier	h264_idct8_add4		4650140	1					
ANR	4650472	ArgumentList	dest_y		4650140	1					
ANR	4650473	Argument	dest_y		4650140	0					
ANR	4650474	Identifier	dest_y		4650140	0					
ANR	4650475	Argument	block_offset		4650140	1					
ANR	4650476	Identifier	block_offset		4650140	0					
ANR	4650477	Argument	h -> mb + ( p * 256 << pixel_shift )		4650140	2					
ANR	4650478	AdditiveExpression	h -> mb + ( p * 256 << pixel_shift )		4650140	0		+			
ANR	4650479	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650480	Identifier	h		4650140	0					
ANR	4650481	Identifier	mb		4650140	1					
ANR	4650482	ShiftExpression	p * 256 << pixel_shift		4650140	1		<<			
ANR	4650483	MultiplicativeExpression	p * 256		4650140	0		*			
ANR	4650484	Identifier	p		4650140	0					
ANR	4650485	PrimaryExpression	256		4650140	1					
ANR	4650486	Identifier	pixel_shift		4650140	1					
ANR	4650487	Argument	linesize		4650140	3					
ANR	4650488	Identifier	linesize		4650140	0					
ANR	4650489	Argument	h -> non_zero_count_cache + p * 5 * 8		4650140	4					
ANR	4650490	AdditiveExpression	h -> non_zero_count_cache + p * 5 * 8		4650140	0		+			
ANR	4650491	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650492	Identifier	h		4650140	0					
ANR	4650493	Identifier	non_zero_count_cache		4650140	1					
ANR	4650494	MultiplicativeExpression	p * 5 * 8		4650140	1		*			
ANR	4650495	Identifier	p		4650140	0					
ANR	4650496	MultiplicativeExpression	5 * 8		4650140	1		*			
ANR	4650497	PrimaryExpression	5		4650140	0					
ANR	4650498	PrimaryExpression	8		4650140	1					
ANR	4650499	ElseStatement	else		4650140	0					
ANR	4650500	ExpressionStatement	"h -> h264dsp . h264_idct_add16 ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"	105:24:3191:3476	4650140	0	True				
ANR	4650501	CallExpression	"h -> h264dsp . h264_idct_add16 ( dest_y , block_offset , h -> mb + ( p * 256 << pixel_shift ) , linesize , h -> non_zero_count_cache + p * 5 * 8 )"		4650140	0					
ANR	4650502	Callee	h -> h264dsp . h264_idct_add16		4650140	0					
ANR	4650503	MemberAccess	h -> h264dsp . h264_idct_add16		4650140	0					
ANR	4650504	PtrMemberAccess	h -> h264dsp		4650140	0					
ANR	4650505	Identifier	h		4650140	0					
ANR	4650506	Identifier	h264dsp		4650140	1					
ANR	4650507	Identifier	h264_idct_add16		4650140	1					
ANR	4650508	ArgumentList	dest_y		4650140	1					
ANR	4650509	Argument	dest_y		4650140	0					
ANR	4650510	Identifier	dest_y		4650140	0					
ANR	4650511	Argument	block_offset		4650140	1					
ANR	4650512	Identifier	block_offset		4650140	0					
ANR	4650513	Argument	h -> mb + ( p * 256 << pixel_shift )		4650140	2					
ANR	4650514	AdditiveExpression	h -> mb + ( p * 256 << pixel_shift )		4650140	0		+			
ANR	4650515	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650516	Identifier	h		4650140	0					
ANR	4650517	Identifier	mb		4650140	1					
ANR	4650518	ShiftExpression	p * 256 << pixel_shift		4650140	1		<<			
ANR	4650519	MultiplicativeExpression	p * 256		4650140	0		*			
ANR	4650520	Identifier	p		4650140	0					
ANR	4650521	PrimaryExpression	256		4650140	1					
ANR	4650522	Identifier	pixel_shift		4650140	1					
ANR	4650523	Argument	linesize		4650140	3					
ANR	4650524	Identifier	linesize		4650140	0					
ANR	4650525	Argument	h -> non_zero_count_cache + p * 5 * 8		4650140	4					
ANR	4650526	AdditiveExpression	h -> non_zero_count_cache + p * 5 * 8		4650140	0		+			
ANR	4650527	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650528	Identifier	h		4650140	0					
ANR	4650529	Identifier	non_zero_count_cache		4650140	1					
ANR	4650530	MultiplicativeExpression	p * 5 * 8		4650140	1		*			
ANR	4650531	Identifier	p		4650140	0					
ANR	4650532	MultiplicativeExpression	5 * 8		4650140	1		*			
ANR	4650533	PrimaryExpression	5		4650140	0					
ANR	4650534	PrimaryExpression	8		4650140	1					
ANR	4650535	ElseStatement	else		4650140	0					
ANR	4650536	IfStatement	if ( CONFIG_SVQ3_DECODER )		4650140	0					
ANR	4650537	Condition	CONFIG_SVQ3_DECODER	117:19:3532:3550	4650140	0	True				
ANR	4650538	Identifier	CONFIG_SVQ3_DECODER		4650140	0					
ANR	4650539	CompoundStatement		103:40:3031:3031	4650140	1					
ANR	4650540	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		4650140	0					
ANR	4650541	ForInit	i = 0 ;	119:17:3573:3578	4650140	0	True				
ANR	4650542	AssignmentExpression	i = 0		4650140	0		=			
ANR	4650543	Identifier	i		4650140	0					
ANR	4650544	PrimaryExpression	0		4650140	1					
ANR	4650545	Condition	i < 16	119:24:3580:3585	4650140	1	True				
ANR	4650546	RelationalExpression	i < 16		4650140	0		<			
ANR	4650547	Identifier	i		4650140	0					
ANR	4650548	PrimaryExpression	16		4650140	1					
ANR	4650549	PostIncDecOperationExpression	i ++	119:32:3588:3590	4650140	2	True				
ANR	4650550	Identifier	i		4650140	0					
ANR	4650551	IncDec	++		4650140	1					
ANR	4650552	IfStatement	if ( h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || h -> mb [ i * 16 + p * 256 ] )		4650140	3					
ANR	4650553	Condition	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || h -> mb [ i * 16 + p * 256 ]	121:20:3614:3682	4650140	0	True				
ANR	4650554	OrExpression	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] || h -> mb [ i * 16 + p * 256 ]		4650140	0		||			
ANR	4650555	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4650140	0					
ANR	4650556	PtrMemberAccess	h -> non_zero_count_cache		4650140	0					
ANR	4650557	Identifier	h		4650140	0					
ANR	4650558	Identifier	non_zero_count_cache		4650140	1					
ANR	4650559	ArrayIndexing	scan8 [ i + p * 16 ]		4650140	1					
ANR	4650560	Identifier	scan8		4650140	0					
ANR	4650561	AdditiveExpression	i + p * 16		4650140	1		+			
ANR	4650562	Identifier	i		4650140	0					
ANR	4650563	MultiplicativeExpression	p * 16		4650140	1		*			
ANR	4650564	Identifier	p		4650140	0					
ANR	4650565	PrimaryExpression	16		4650140	1					
ANR	4650566	ArrayIndexing	h -> mb [ i * 16 + p * 256 ]		4650140	1					
ANR	4650567	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650568	Identifier	h		4650140	0					
ANR	4650569	Identifier	mb		4650140	1					
ANR	4650570	AdditiveExpression	i * 16 + p * 256		4650140	1		+			
ANR	4650571	MultiplicativeExpression	i * 16		4650140	0		*			
ANR	4650572	Identifier	i		4650140	0					
ANR	4650573	PrimaryExpression	16		4650140	1					
ANR	4650574	MultiplicativeExpression	p * 256		4650140	1		*			
ANR	4650575	Identifier	p		4650140	0					
ANR	4650576	PrimaryExpression	256		4650140	1					
ANR	4650577	CompoundStatement		107:91:3163:3163	4650140	1					
ANR	4650578	Statement	uint8_t	125:20:3768:3774	4650140	0	True				
ANR	4650579	Statement	*	125:28:3776:3776	4650140	1	True				
ANR	4650580	Statement	const	125:29:3777:3781	4650140	2	True				
ANR	4650581	ExpressionStatement	ptr = dest_y + block_offset [ i ]	125:35:3783:3813	4650140	3	True				
ANR	4650582	AssignmentExpression	ptr = dest_y + block_offset [ i ]		4650140	0		=			
ANR	4650583	Identifier	ptr		4650140	0					
ANR	4650584	AdditiveExpression	dest_y + block_offset [ i ]		4650140	1		+			
ANR	4650585	Identifier	dest_y		4650140	0					
ANR	4650586	ArrayIndexing	block_offset [ i ]		4650140	1					
ANR	4650587	Identifier	block_offset		4650140	0					
ANR	4650588	Identifier	i		4650140	1					
ANR	4650589	ExpressionStatement	"ff_svq3_add_idct_c ( ptr , h -> mb + i * 16 + p * 256 , linesize , h -> qscale , IS_INTRA ( mb_type ) ? 1 : 0 )"	127:20:3836:3973	4650140	4	True				
ANR	4650590	CallExpression	"ff_svq3_add_idct_c ( ptr , h -> mb + i * 16 + p * 256 , linesize , h -> qscale , IS_INTRA ( mb_type ) ? 1 : 0 )"		4650140	0					
ANR	4650591	Callee	ff_svq3_add_idct_c		4650140	0					
ANR	4650592	Identifier	ff_svq3_add_idct_c		4650140	0					
ANR	4650593	ArgumentList	ptr		4650140	1					
ANR	4650594	Argument	ptr		4650140	0					
ANR	4650595	Identifier	ptr		4650140	0					
ANR	4650596	Argument	h -> mb + i * 16 + p * 256		4650140	1					
ANR	4650597	AdditiveExpression	h -> mb + i * 16 + p * 256		4650140	0		+			
ANR	4650598	PtrMemberAccess	h -> mb		4650140	0					
ANR	4650599	Identifier	h		4650140	0					
ANR	4650600	Identifier	mb		4650140	1					
ANR	4650601	AdditiveExpression	i * 16 + p * 256		4650140	1		+			
ANR	4650602	MultiplicativeExpression	i * 16		4650140	0		*			
ANR	4650603	Identifier	i		4650140	0					
ANR	4650604	PrimaryExpression	16		4650140	1					
ANR	4650605	MultiplicativeExpression	p * 256		4650140	1		*			
ANR	4650606	Identifier	p		4650140	0					
ANR	4650607	PrimaryExpression	256		4650140	1					
ANR	4650608	Argument	linesize		4650140	2					
ANR	4650609	Identifier	linesize		4650140	0					
ANR	4650610	Argument	h -> qscale		4650140	3					
ANR	4650611	PtrMemberAccess	h -> qscale		4650140	0					
ANR	4650612	Identifier	h		4650140	0					
ANR	4650613	Identifier	qscale		4650140	1					
ANR	4650614	Argument	IS_INTRA ( mb_type ) ? 1 : 0		4650140	4					
ANR	4650615	ConditionalExpression	IS_INTRA ( mb_type ) ? 1 : 0		4650140	0					
ANR	4650616	Condition	IS_INTRA ( mb_type )		4650140	0					
ANR	4650617	CallExpression	IS_INTRA ( mb_type )		4650140	0					
ANR	4650618	Callee	IS_INTRA		4650140	0					
ANR	4650619	Identifier	IS_INTRA		4650140	0					
ANR	4650620	ArgumentList	mb_type		4650140	1					
ANR	4650621	Argument	mb_type		4650140	0					
ANR	4650622	Identifier	mb_type		4650140	0					
ANR	4650623	PrimaryExpression	1		4650140	1					
ANR	4650624	PrimaryExpression	0		4650140	2					
ANR	4650625	ReturnType	static av_always_inline void		4650140	1					
ANR	4650626	Identifier	hl_decode_mb_idct_luma		4650140	2					
ANR	4650627	ParameterList	"H264Context * h , int mb_type , int is_h264 , int simple , int transform_bypass , int pixel_shift , int * block_offset , int linesize , uint8_t * dest_y , int p"		4650140	3					
ANR	4650628	Parameter	H264Context * h	1:52:52:65	4650140	0	True				
ANR	4650629	ParameterType	H264Context *		4650140	0					
ANR	4650630	Identifier	h		4650140	1					
ANR	4650631	Parameter	int mb_type	1:68:68:78	4650140	1	True				
ANR	4650632	ParameterType	int		4650140	0					
ANR	4650633	Identifier	mb_type		4650140	1					
ANR	4650634	Parameter	int is_h264	3:52:134:144	4650140	2	True				
ANR	4650635	ParameterType	int		4650140	0					
ANR	4650636	Identifier	is_h264		4650140	1					
ANR	4650637	Parameter	int simple	3:65:147:156	4650140	3	True				
ANR	4650638	ParameterType	int		4650140	0					
ANR	4650639	Identifier	simple		4650140	1					
ANR	4650640	Parameter	int transform_bypass	5:52:212:231	4650140	4	True				
ANR	4650641	ParameterType	int		4650140	0					
ANR	4650642	Identifier	transform_bypass		4650140	1					
ANR	4650643	Parameter	int pixel_shift	7:52:287:301	4650140	5	True				
ANR	4650644	ParameterType	int		4650140	0					
ANR	4650645	Identifier	pixel_shift		4650140	1					
ANR	4650646	Parameter	int * block_offset	9:52:357:373	4650140	6	True				
ANR	4650647	ParameterType	int *		4650140	0					
ANR	4650648	Identifier	block_offset		4650140	1					
ANR	4650649	Parameter	int linesize	11:52:429:440	4650140	7	True				
ANR	4650650	ParameterType	int		4650140	0					
ANR	4650651	Identifier	linesize		4650140	1					
ANR	4650652	Parameter	uint8_t * dest_y	13:52:496:510	4650140	8	True				
ANR	4650653	ParameterType	uint8_t *		4650140	0					
ANR	4650654	Identifier	dest_y		4650140	1					
ANR	4650655	Parameter	int p	13:69:513:517	4650140	9	True				
ANR	4650656	ParameterType	int		4650140	0					
ANR	4650657	Identifier	p		4650140	1					
ANR	4650658	CFGEntryNode	ENTRY		4650140		True				
ANR	4650659	CFGExitNode	EXIT		4650140		True				
ANR	4650660	Symbol	VERT_PRED8x8		4650140						
ANR	4650661	Symbol	di		4650140						
ANR	4650662	Symbol	* scan8		4650140						
ANR	4650663	Symbol	IS_8x8DCT		4650140						
ANR	4650664	Symbol	IS_INTRA		4650140						
ANR	4650665	Symbol	simple		4650140						
ANR	4650666	Symbol	h -> h264dsp		4650140						
ANR	4650667	Symbol	h -> hpc . pred16x16_add		4650140						
ANR	4650668	Symbol	transform_bypass		4650140						
ANR	4650669	Symbol	pixel_shift		4650140						
ANR	4650670	Symbol	linesize		4650140						
ANR	4650671	Symbol	h -> sps . profile_idc		4650140						
ANR	4650672	Symbol	* h -> non_zero_count_cache		4650140						
ANR	4650673	Symbol	block_offset		4650140						
ANR	4650674	Symbol	h -> mb		4650140						
ANR	4650675	Symbol	h -> qscale		4650140						
ANR	4650676	Symbol	mb_type		4650140						
ANR	4650677	Symbol	scan8		4650140						
ANR	4650678	Symbol	* * p		4650140						
ANR	4650679	Symbol	HOR_PRED8x8		4650140						
ANR	4650680	Symbol	h -> hpc		4650140						
ANR	4650681	Symbol	* * i		4650140						
ANR	4650682	Symbol	* * h		4650140						
ANR	4650683	Symbol	h -> intra16x16_pred_mode		4650140						
ANR	4650684	Symbol	idct_add		4650140						
ANR	4650685	Symbol	IS_INTRA4x4		4650140						
ANR	4650686	Symbol	h -> non_zero_count_cache		4650140						
ANR	4650687	Symbol	h		4650140						
ANR	4650688	Symbol	i		4650140						
ANR	4650689	Symbol	is_h264		4650140						
ANR	4650690	Symbol	* * scan8		4650140						
ANR	4650691	Symbol	CONFIG_SVQ3_DECODER		4650140						
ANR	4650692	Symbol	* block_offset		4650140						
ANR	4650693	Symbol	* h -> mb		4650140						
ANR	4650694	Symbol	ptr		4650140						
ANR	4650695	Symbol	p		4650140						
ANR	4650696	Symbol	h -> h264dsp . h264_add_pixels8		4650140						
ANR	4650697	Symbol	* h		4650140						
ANR	4650698	Symbol	dctcoef_get		4650140						
ANR	4650699	Symbol	* i		4650140						
ANR	4650700	Symbol	h -> h264dsp . h264_add_pixels4		4650140						
ANR	4650701	Symbol	dest_y		4650140						
ANR	4650702	Symbol	IS_INTRA16x16		4650140						
ANR	4650703	Symbol	h -> sps		4650140						
ANR	4650704	Symbol	* p		4650140						
ANR	4650705	Symbol	h -> cbp		4650140						
