command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3326505	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_decode_extradata_1.c								
ANR	3326506	Function	ff_h264_decode_extradata	1:0:0:1885							
ANR	3326507	FunctionDef	ff_h264_decode_extradata (H264Context * h)		3326506	0					
ANR	3326508	CompoundStatement		3:0:46:1885	3326506	0					
ANR	3326509	IdentifierDeclStatement	AVCodecContext * avctx = h -> s . avctx ;	5:4:53:87	3326506	0	True				
ANR	3326510	IdentifierDecl	* avctx = h -> s . avctx		3326506	0					
ANR	3326511	IdentifierDeclType	AVCodecContext *		3326506	0					
ANR	3326512	Identifier	avctx		3326506	1					
ANR	3326513	AssignmentExpression	* avctx = h -> s . avctx		3326506	2		=			
ANR	3326514	Identifier	avctx		3326506	0					
ANR	3326515	MemberAccess	h -> s . avctx		3326506	1					
ANR	3326516	PtrMemberAccess	h -> s		3326506	0					
ANR	3326517	Identifier	h		3326506	0					
ANR	3326518	Identifier	s		3326506	1					
ANR	3326519	Identifier	avctx		3326506	1					
ANR	3326520	IfStatement	if ( avctx -> extradata [ 0 ] == 1 )		3326506	1					
ANR	3326521	Condition	avctx -> extradata [ 0 ] == 1	9:8:100:123	3326506	0	True				
ANR	3326522	EqualityExpression	avctx -> extradata [ 0 ] == 1		3326506	0		==			
ANR	3326523	ArrayIndexing	avctx -> extradata [ 0 ]		3326506	0					
ANR	3326524	PtrMemberAccess	avctx -> extradata		3326506	0					
ANR	3326525	Identifier	avctx		3326506	0					
ANR	3326526	Identifier	extradata		3326506	1					
ANR	3326527	PrimaryExpression	0		3326506	1					
ANR	3326528	PrimaryExpression	1		3326506	1					
ANR	3326529	CompoundStatement		11:8:120:155	3326506	1					
ANR	3326530	IdentifierDeclStatement	"int i , cnt , nalsize ;"	11:8:137:156	3326506	0	True				
ANR	3326531	IdentifierDecl	i		3326506	0					
ANR	3326532	IdentifierDeclType	int		3326506	0					
ANR	3326533	Identifier	i		3326506	1					
ANR	3326534	IdentifierDecl	cnt		3326506	1					
ANR	3326535	IdentifierDeclType	int		3326506	0					
ANR	3326536	Identifier	cnt		3326506	1					
ANR	3326537	IdentifierDecl	nalsize		3326506	2					
ANR	3326538	IdentifierDeclType	int		3326506	0					
ANR	3326539	Identifier	nalsize		3326506	1					
ANR	3326540	IdentifierDeclStatement	unsigned char * p = avctx -> extradata ;	13:8:167:202	3326506	1	True				
ANR	3326541	IdentifierDecl	* p = avctx -> extradata		3326506	0					
ANR	3326542	IdentifierDeclType	unsigned char *		3326506	0					
ANR	3326543	Identifier	p		3326506	1					
ANR	3326544	AssignmentExpression	* p = avctx -> extradata		3326506	2		=			
ANR	3326545	Identifier	p		3326506	0					
ANR	3326546	PtrMemberAccess	avctx -> extradata		3326506	1					
ANR	3326547	Identifier	avctx		3326506	0					
ANR	3326548	Identifier	extradata		3326506	1					
ANR	3326549	ExpressionStatement	h -> is_avc = 1	17:8:215:228	3326506	2	True				
ANR	3326550	AssignmentExpression	h -> is_avc = 1		3326506	0		=			
ANR	3326551	PtrMemberAccess	h -> is_avc		3326506	0					
ANR	3326552	Identifier	h		3326506	0					
ANR	3326553	Identifier	is_avc		3326506	1					
ANR	3326554	PrimaryExpression	1		3326506	1					
ANR	3326555	IfStatement	if ( avctx -> extradata_size < 7 )		3326506	3					
ANR	3326556	Condition	avctx -> extradata_size < 7	21:12:245:269	3326506	0	True				
ANR	3326557	RelationalExpression	avctx -> extradata_size < 7		3326506	0		<			
ANR	3326558	PtrMemberAccess	avctx -> extradata_size		3326506	0					
ANR	3326559	Identifier	avctx		3326506	0					
ANR	3326560	Identifier	extradata_size		3326506	1					
ANR	3326561	PrimaryExpression	7		3326506	1					
ANR	3326562	CompoundStatement		19:39:225:225	3326506	1					
ANR	3326563	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""avcC too short\\n"" )"	23:12:287:334	3326506	0	True				
ANR	3326564	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""avcC too short\\n"" )"		3326506	0					
ANR	3326565	Callee	av_log		3326506	0					
ANR	3326566	Identifier	av_log		3326506	0					
ANR	3326567	ArgumentList	avctx		3326506	1					
ANR	3326568	Argument	avctx		3326506	0					
ANR	3326569	Identifier	avctx		3326506	0					
ANR	3326570	Argument	AV_LOG_ERROR		3326506	1					
ANR	3326571	Identifier	AV_LOG_ERROR		3326506	0					
ANR	3326572	Argument	"""avcC too short\\n"""		3326506	2					
ANR	3326573	PrimaryExpression	"""avcC too short\\n"""		3326506	0					
ANR	3326574	ReturnStatement	return - 1 ;	25:12:349:358	3326506	1	True				
ANR	3326575	UnaryOperationExpression	- 1		3326506	0					
ANR	3326576	UnaryOperator	-		3326506	0					
ANR	3326577	PrimaryExpression	1		3326506	1					
ANR	3326578	ExpressionStatement	h -> nal_length_size = 2	33:8:523:545	3326506	4	True				
ANR	3326579	AssignmentExpression	h -> nal_length_size = 2		3326506	0		=			
ANR	3326580	PtrMemberAccess	h -> nal_length_size		3326506	0					
ANR	3326581	Identifier	h		3326506	0					
ANR	3326582	Identifier	nal_length_size		3326506	1					
ANR	3326583	PrimaryExpression	2		3326506	1					
ANR	3326584	ExpressionStatement	cnt = * ( p + 5 ) & 0x1f	37:8:589:610	3326506	5	True				
ANR	3326585	AssignmentExpression	cnt = * ( p + 5 ) & 0x1f		3326506	0		=			
ANR	3326586	Identifier	cnt		3326506	0					
ANR	3326587	BitAndExpression	* ( p + 5 ) & 0x1f		3326506	1		&			
ANR	3326588	UnaryOperationExpression	* ( p + 5 )		3326506	0					
ANR	3326589	UnaryOperator	*		3326506	0					
ANR	3326590	AdditiveExpression	p + 5		3326506	1		+			
ANR	3326591	Identifier	p		3326506	0					
ANR	3326592	PrimaryExpression	5		3326506	1					
ANR	3326593	PrimaryExpression	0x1f		3326506	1					
ANR	3326594	ExpressionStatement	p += 6	39:8:638:645	3326506	6	True				
ANR	3326595	AssignmentExpression	p += 6		3326506	0		+=			
ANR	3326596	Identifier	p		3326506	0					
ANR	3326597	PrimaryExpression	6		3326506	1					
ANR	3326598	ForStatement	for ( i = 0 ; i < cnt ; i ++ )		3326506	7					
ANR	3326599	ForInit	i = 0 ;	41:13:661:666	3326506	0	True				
ANR	3326600	AssignmentExpression	i = 0		3326506	0		=			
ANR	3326601	Identifier	i		3326506	0					
ANR	3326602	PrimaryExpression	0		3326506	1					
ANR	3326603	Condition	i < cnt	41:20:668:674	3326506	1	True				
ANR	3326604	RelationalExpression	i < cnt		3326506	0		<			
ANR	3326605	Identifier	i		3326506	0					
ANR	3326606	Identifier	cnt		3326506	1					
ANR	3326607	PostIncDecOperationExpression	i ++	41:29:677:679	3326506	2	True				
ANR	3326608	Identifier	i		3326506	0					
ANR	3326609	IncDec	++		3326506	1					
ANR	3326610	CompoundStatement		39:34:635:635	3326506	3					
ANR	3326611	ExpressionStatement	nalsize = AV_RB16 ( p ) + 2	43:12:697:721	3326506	0	True				
ANR	3326612	AssignmentExpression	nalsize = AV_RB16 ( p ) + 2		3326506	0		=			
ANR	3326613	Identifier	nalsize		3326506	0					
ANR	3326614	AdditiveExpression	AV_RB16 ( p ) + 2		3326506	1		+			
ANR	3326615	CallExpression	AV_RB16 ( p )		3326506	0					
ANR	3326616	Callee	AV_RB16		3326506	0					
ANR	3326617	Identifier	AV_RB16		3326506	0					
ANR	3326618	ArgumentList	p		3326506	1					
ANR	3326619	Argument	p		3326506	0					
ANR	3326620	Identifier	p		3326506	0					
ANR	3326621	PrimaryExpression	2		3326506	1					
ANR	3326622	IfStatement	if ( p - avctx -> extradata + nalsize > avctx -> extradata_size )		3326506	1					
ANR	3326623	Condition	p - avctx -> extradata + nalsize > avctx -> extradata_size	45:16:740:793	3326506	0	True				
ANR	3326624	RelationalExpression	p - avctx -> extradata + nalsize > avctx -> extradata_size		3326506	0		>			
ANR	3326625	AdditiveExpression	p - avctx -> extradata + nalsize		3326506	0		-			
ANR	3326626	Identifier	p		3326506	0					
ANR	3326627	AdditiveExpression	avctx -> extradata + nalsize		3326506	1		+			
ANR	3326628	PtrMemberAccess	avctx -> extradata		3326506	0					
ANR	3326629	Identifier	avctx		3326506	0					
ANR	3326630	Identifier	extradata		3326506	1					
ANR	3326631	Identifier	nalsize		3326506	1					
ANR	3326632	PtrMemberAccess	avctx -> extradata_size		3326506	1					
ANR	3326633	Identifier	avctx		3326506	0					
ANR	3326634	Identifier	extradata_size		3326506	1					
ANR	3326635	ReturnStatement	return - 1 ;	47:16:813:822	3326506	1	True				
ANR	3326636	UnaryOperationExpression	- 1		3326506	0					
ANR	3326637	UnaryOperator	-		3326506	0					
ANR	3326638	PrimaryExpression	1		3326506	1					
ANR	3326639	IfStatement	"if ( decode_nal_units ( h , p , nalsize ) < 0 )"		3326506	2					
ANR	3326640	Condition	"decode_nal_units ( h , p , nalsize ) < 0"	49:16:841:875	3326506	0	True				
ANR	3326641	RelationalExpression	"decode_nal_units ( h , p , nalsize ) < 0"		3326506	0		<			
ANR	3326642	CallExpression	"decode_nal_units ( h , p , nalsize )"		3326506	0					
ANR	3326643	Callee	decode_nal_units		3326506	0					
ANR	3326644	Identifier	decode_nal_units		3326506	0					
ANR	3326645	ArgumentList	h		3326506	1					
ANR	3326646	Argument	h		3326506	0					
ANR	3326647	Identifier	h		3326506	0					
ANR	3326648	Argument	p		3326506	1					
ANR	3326649	Identifier	p		3326506	0					
ANR	3326650	Argument	nalsize		3326506	2					
ANR	3326651	Identifier	nalsize		3326506	0					
ANR	3326652	PrimaryExpression	0		3326506	1					
ANR	3326653	CompoundStatement		47:53:831:831	3326506	1					
ANR	3326654	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Decoding sps %d from avcC failed\\n"" , i )"	51:16:897:989	3326506	0	True				
ANR	3326655	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Decoding sps %d from avcC failed\\n"" , i )"		3326506	0					
ANR	3326656	Callee	av_log		3326506	0					
ANR	3326657	Identifier	av_log		3326506	0					
ANR	3326658	ArgumentList	avctx		3326506	1					
ANR	3326659	Argument	avctx		3326506	0					
ANR	3326660	Identifier	avctx		3326506	0					
ANR	3326661	Argument	AV_LOG_ERROR		3326506	1					
ANR	3326662	Identifier	AV_LOG_ERROR		3326506	0					
ANR	3326663	Argument	"""Decoding sps %d from avcC failed\\n"""		3326506	2					
ANR	3326664	PrimaryExpression	"""Decoding sps %d from avcC failed\\n"""		3326506	0					
ANR	3326665	Argument	i		3326506	3					
ANR	3326666	Identifier	i		3326506	0					
ANR	3326667	ReturnStatement	return - 1 ;	55:16:1008:1017	3326506	1	True				
ANR	3326668	UnaryOperationExpression	- 1		3326506	0					
ANR	3326669	UnaryOperator	-		3326506	0					
ANR	3326670	PrimaryExpression	1		3326506	1					
ANR	3326671	ExpressionStatement	p += nalsize	59:12:1047:1059	3326506	3	True				
ANR	3326672	AssignmentExpression	p += nalsize		3326506	0		+=			
ANR	3326673	Identifier	p		3326506	0					
ANR	3326674	Identifier	nalsize		3326506	1					
ANR	3326675	ExpressionStatement	cnt = * ( p ++ )	65:8:1114:1126	3326506	8	True				
ANR	3326676	AssignmentExpression	cnt = * ( p ++ )		3326506	0		=			
ANR	3326677	Identifier	cnt		3326506	0					
ANR	3326678	UnaryOperationExpression	* ( p ++ )		3326506	1					
ANR	3326679	UnaryOperator	*		3326506	0					
ANR	3326680	PostIncDecOperationExpression	p ++		3326506	1					
ANR	3326681	Identifier	p		3326506	0					
ANR	3326682	IncDec	++		3326506	1					
ANR	3326683	ForStatement	for ( i = 0 ; i < cnt ; i ++ )		3326506	9					
ANR	3326684	ForInit	i = 0 ;	67:13:1159:1164	3326506	0	True				
ANR	3326685	AssignmentExpression	i = 0		3326506	0		=			
ANR	3326686	Identifier	i		3326506	0					
ANR	3326687	PrimaryExpression	0		3326506	1					
ANR	3326688	Condition	i < cnt	67:20:1166:1172	3326506	1	True				
ANR	3326689	RelationalExpression	i < cnt		3326506	0		<			
ANR	3326690	Identifier	i		3326506	0					
ANR	3326691	Identifier	cnt		3326506	1					
ANR	3326692	PostIncDecOperationExpression	i ++	67:29:1175:1177	3326506	2	True				
ANR	3326693	Identifier	i		3326506	0					
ANR	3326694	IncDec	++		3326506	1					
ANR	3326695	CompoundStatement		65:34:1133:1133	3326506	3					
ANR	3326696	ExpressionStatement	nalsize = AV_RB16 ( p ) + 2	69:12:1195:1219	3326506	0	True				
ANR	3326697	AssignmentExpression	nalsize = AV_RB16 ( p ) + 2		3326506	0		=			
ANR	3326698	Identifier	nalsize		3326506	0					
ANR	3326699	AdditiveExpression	AV_RB16 ( p ) + 2		3326506	1		+			
ANR	3326700	CallExpression	AV_RB16 ( p )		3326506	0					
ANR	3326701	Callee	AV_RB16		3326506	0					
ANR	3326702	Identifier	AV_RB16		3326506	0					
ANR	3326703	ArgumentList	p		3326506	1					
ANR	3326704	Argument	p		3326506	0					
ANR	3326705	Identifier	p		3326506	0					
ANR	3326706	PrimaryExpression	2		3326506	1					
ANR	3326707	IfStatement	if ( p - avctx -> extradata + nalsize > avctx -> extradata_size )		3326506	1					
ANR	3326708	Condition	p - avctx -> extradata + nalsize > avctx -> extradata_size	71:16:1238:1291	3326506	0	True				
ANR	3326709	RelationalExpression	p - avctx -> extradata + nalsize > avctx -> extradata_size		3326506	0		>			
ANR	3326710	AdditiveExpression	p - avctx -> extradata + nalsize		3326506	0		-			
ANR	3326711	Identifier	p		3326506	0					
ANR	3326712	AdditiveExpression	avctx -> extradata + nalsize		3326506	1		+			
ANR	3326713	PtrMemberAccess	avctx -> extradata		3326506	0					
ANR	3326714	Identifier	avctx		3326506	0					
ANR	3326715	Identifier	extradata		3326506	1					
ANR	3326716	Identifier	nalsize		3326506	1					
ANR	3326717	PtrMemberAccess	avctx -> extradata_size		3326506	1					
ANR	3326718	Identifier	avctx		3326506	0					
ANR	3326719	Identifier	extradata_size		3326506	1					
ANR	3326720	ReturnStatement	return - 1 ;	73:16:1311:1320	3326506	1	True				
ANR	3326721	UnaryOperationExpression	- 1		3326506	0					
ANR	3326722	UnaryOperator	-		3326506	0					
ANR	3326723	PrimaryExpression	1		3326506	1					
ANR	3326724	IfStatement	"if ( decode_nal_units ( h , p , nalsize ) < 0 )"		3326506	2					
ANR	3326725	Condition	"decode_nal_units ( h , p , nalsize ) < 0"	75:16:1339:1373	3326506	0	True				
ANR	3326726	RelationalExpression	"decode_nal_units ( h , p , nalsize ) < 0"		3326506	0		<			
ANR	3326727	CallExpression	"decode_nal_units ( h , p , nalsize )"		3326506	0					
ANR	3326728	Callee	decode_nal_units		3326506	0					
ANR	3326729	Identifier	decode_nal_units		3326506	0					
ANR	3326730	ArgumentList	h		3326506	1					
ANR	3326731	Argument	h		3326506	0					
ANR	3326732	Identifier	h		3326506	0					
ANR	3326733	Argument	p		3326506	1					
ANR	3326734	Identifier	p		3326506	0					
ANR	3326735	Argument	nalsize		3326506	2					
ANR	3326736	Identifier	nalsize		3326506	0					
ANR	3326737	PrimaryExpression	0		3326506	1					
ANR	3326738	CompoundStatement		73:53:1329:1329	3326506	1					
ANR	3326739	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Decoding pps %d from avcC failed\\n"" , i )"	77:16:1395:1487	3326506	0	True				
ANR	3326740	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Decoding pps %d from avcC failed\\n"" , i )"		3326506	0					
ANR	3326741	Callee	av_log		3326506	0					
ANR	3326742	Identifier	av_log		3326506	0					
ANR	3326743	ArgumentList	avctx		3326506	1					
ANR	3326744	Argument	avctx		3326506	0					
ANR	3326745	Identifier	avctx		3326506	0					
ANR	3326746	Argument	AV_LOG_ERROR		3326506	1					
ANR	3326747	Identifier	AV_LOG_ERROR		3326506	0					
ANR	3326748	Argument	"""Decoding pps %d from avcC failed\\n"""		3326506	2					
ANR	3326749	PrimaryExpression	"""Decoding pps %d from avcC failed\\n"""		3326506	0					
ANR	3326750	Argument	i		3326506	3					
ANR	3326751	Identifier	i		3326506	0					
ANR	3326752	ReturnStatement	return - 1 ;	81:16:1506:1515	3326506	1	True				
ANR	3326753	UnaryOperationExpression	- 1		3326506	0					
ANR	3326754	UnaryOperator	-		3326506	0					
ANR	3326755	PrimaryExpression	1		3326506	1					
ANR	3326756	ExpressionStatement	p += nalsize	85:12:1545:1557	3326506	3	True				
ANR	3326757	AssignmentExpression	p += nalsize		3326506	0		+=			
ANR	3326758	Identifier	p		3326506	0					
ANR	3326759	Identifier	nalsize		3326506	1					
ANR	3326760	ExpressionStatement	h -> nal_length_size = ( avctx -> extradata [ 4 ] & 0x03 ) + 1	91:8:1666:1719	3326506	10	True				
ANR	3326761	AssignmentExpression	h -> nal_length_size = ( avctx -> extradata [ 4 ] & 0x03 ) + 1		3326506	0		=			
ANR	3326762	PtrMemberAccess	h -> nal_length_size		3326506	0					
ANR	3326763	Identifier	h		3326506	0					
ANR	3326764	Identifier	nal_length_size		3326506	1					
ANR	3326765	AdditiveExpression	( avctx -> extradata [ 4 ] & 0x03 ) + 1		3326506	1		+			
ANR	3326766	BitAndExpression	avctx -> extradata [ 4 ] & 0x03		3326506	0		&			
ANR	3326767	ArrayIndexing	avctx -> extradata [ 4 ]		3326506	0					
ANR	3326768	PtrMemberAccess	avctx -> extradata		3326506	0					
ANR	3326769	Identifier	avctx		3326506	0					
ANR	3326770	Identifier	extradata		3326506	1					
ANR	3326771	PrimaryExpression	4		3326506	1					
ANR	3326772	PrimaryExpression	0x03		3326506	1					
ANR	3326773	PrimaryExpression	1		3326506	1					
ANR	3326774	ElseStatement	else		3326506	0					
ANR	3326775	CompoundStatement		91:11:1686:1686	3326506	0					
ANR	3326776	ExpressionStatement	h -> is_avc = 0	95:8:1744:1757	3326506	0	True				
ANR	3326777	AssignmentExpression	h -> is_avc = 0		3326506	0		=			
ANR	3326778	PtrMemberAccess	h -> is_avc		3326506	0					
ANR	3326779	Identifier	h		3326506	0					
ANR	3326780	Identifier	is_avc		3326506	1					
ANR	3326781	PrimaryExpression	0		3326506	1					
ANR	3326782	IfStatement	"if ( decode_nal_units ( h , avctx -> extradata , avctx -> extradata_size ) < 0 )"		3326506	1					
ANR	3326783	Condition	"decode_nal_units ( h , avctx -> extradata , avctx -> extradata_size ) < 0"	97:12:1772:1835	3326506	0	True				
ANR	3326784	RelationalExpression	"decode_nal_units ( h , avctx -> extradata , avctx -> extradata_size ) < 0"		3326506	0		<			
ANR	3326785	CallExpression	"decode_nal_units ( h , avctx -> extradata , avctx -> extradata_size )"		3326506	0					
ANR	3326786	Callee	decode_nal_units		3326506	0					
ANR	3326787	Identifier	decode_nal_units		3326506	0					
ANR	3326788	ArgumentList	h		3326506	1					
ANR	3326789	Argument	h		3326506	0					
ANR	3326790	Identifier	h		3326506	0					
ANR	3326791	Argument	avctx -> extradata		3326506	1					
ANR	3326792	PtrMemberAccess	avctx -> extradata		3326506	0					
ANR	3326793	Identifier	avctx		3326506	0					
ANR	3326794	Identifier	extradata		3326506	1					
ANR	3326795	Argument	avctx -> extradata_size		3326506	2					
ANR	3326796	PtrMemberAccess	avctx -> extradata_size		3326506	0					
ANR	3326797	Identifier	avctx		3326506	0					
ANR	3326798	Identifier	extradata_size		3326506	1					
ANR	3326799	PrimaryExpression	0		3326506	1					
ANR	3326800	ReturnStatement	return - 1 ;	99:12:1851:1860	3326506	1	True				
ANR	3326801	UnaryOperationExpression	- 1		3326506	0					
ANR	3326802	UnaryOperator	-		3326506	0					
ANR	3326803	PrimaryExpression	1		3326506	1					
ANR	3326804	ReturnStatement	return 0 ;	103:4:1874:1882	3326506	2	True				
ANR	3326805	PrimaryExpression	0		3326506	0					
ANR	3326806	ReturnType	int		3326506	1					
ANR	3326807	Identifier	ff_h264_decode_extradata		3326506	2					
ANR	3326808	ParameterList	H264Context * h		3326506	3					
ANR	3326809	Parameter	H264Context * h	1:29:29:42	3326506	0	True				
ANR	3326810	ParameterType	H264Context *		3326506	0					
ANR	3326811	Identifier	h		3326506	1					
ANR	3326812	CFGEntryNode	ENTRY		3326506		True				
ANR	3326813	CFGExitNode	EXIT		3326506		True				
ANR	3326814	Symbol	avctx -> extradata		3326506						
ANR	3326815	Symbol	nalsize		3326506						
ANR	3326816	Symbol	* ( p ++ )		3326506						
ANR	3326817	Symbol	decode_nal_units		3326506						
ANR	3326818	Symbol	AV_LOG_ERROR		3326506						
ANR	3326819	Symbol	* ( p + 5 )		3326506						
ANR	3326820	Symbol	h		3326506						
ANR	3326821	Symbol	* * avctx		3326506						
ANR	3326822	Symbol	cnt		3326506						
ANR	3326823	Symbol	avctx -> extradata_size		3326506						
ANR	3326824	Symbol	i		3326506						
ANR	3326825	Symbol	AV_RB16		3326506						
ANR	3326826	Symbol	h -> s		3326506						
ANR	3326827	Symbol	h -> is_avc		3326506						
ANR	3326828	Symbol	h -> s . avctx		3326506						
ANR	3326829	Symbol	p		3326506						
ANR	3326830	Symbol	* h		3326506						
ANR	3326831	Symbol	* avctx		3326506						
ANR	3326832	Symbol	h -> nal_length_size		3326506						
ANR	3326833	Symbol	* p		3326506						
ANR	3326834	Symbol	avctx		3326506						
ANR	3326835	Symbol	* avctx -> extradata		3326506						
