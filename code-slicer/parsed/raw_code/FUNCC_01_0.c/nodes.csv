command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	13356	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNCC_01_0.c								
ANR	13357	Function	h264_loop_filter_luma	1:0:0:1849							
ANR	13358	FunctionDef	"h264_loop_filter_luma (uint8_t * p_pix , int xstride , int ystride , int inner_iters , int alpha , int beta , int8_t * tc0)"		13357	0					
ANR	13359	CompoundStatement		3:0:163:1849	13357	0					
ANR	13360	IdentifierDeclStatement	pixel * pix = ( pixel * ) p_pix ;	5:4:170:196	13357	0	True				
ANR	13361	IdentifierDecl	* pix = ( pixel * ) p_pix		13357	0					
ANR	13362	IdentifierDeclType	pixel *		13357	0					
ANR	13363	Identifier	pix		13357	1					
ANR	13364	AssignmentExpression	* pix = ( pixel * ) p_pix		13357	2		=			
ANR	13365	Identifier	pix		13357	0					
ANR	13366	CastExpression	( pixel * ) p_pix		13357	1					
ANR	13367	CastTarget	pixel *		13357	0					
ANR	13368	Identifier	p_pix		13357	1					
ANR	13369	IdentifierDeclStatement	"int i , d ;"	7:4:203:211	13357	1	True				
ANR	13370	IdentifierDecl	i		13357	0					
ANR	13371	IdentifierDeclType	int		13357	0					
ANR	13372	Identifier	i		13357	1					
ANR	13373	IdentifierDecl	d		13357	1					
ANR	13374	IdentifierDeclType	int		13357	0					
ANR	13375	Identifier	d		13357	1					
ANR	13376	ExpressionStatement	xstride >>= sizeof ( pixel ) - 1	9:4:218:245	13357	2	True				
ANR	13377	AssignmentExpression	xstride >>= sizeof ( pixel ) - 1		13357	0		>>=			
ANR	13378	Identifier	xstride		13357	0					
ANR	13379	AdditiveExpression	sizeof ( pixel ) - 1		13357	1		-			
ANR	13380	SizeofExpression	sizeof ( pixel )		13357	0					
ANR	13381	Sizeof	sizeof		13357	0					
ANR	13382	SizeofOperand	pixel		13357	1					
ANR	13383	PrimaryExpression	1		13357	1					
ANR	13384	ExpressionStatement	ystride >>= sizeof ( pixel ) - 1	11:4:252:279	13357	3	True				
ANR	13385	AssignmentExpression	ystride >>= sizeof ( pixel ) - 1		13357	0		>>=			
ANR	13386	Identifier	ystride		13357	0					
ANR	13387	AdditiveExpression	sizeof ( pixel ) - 1		13357	1		-			
ANR	13388	SizeofExpression	sizeof ( pixel )		13357	0					
ANR	13389	Sizeof	sizeof		13357	0					
ANR	13390	SizeofOperand	pixel		13357	1					
ANR	13391	PrimaryExpression	1		13357	1					
ANR	13392	ExpressionStatement	alpha <<= BIT_DEPTH - 8	13:4:286:309	13357	4	True				
ANR	13393	AssignmentExpression	alpha <<= BIT_DEPTH - 8		13357	0		<<=			
ANR	13394	Identifier	alpha		13357	0					
ANR	13395	AdditiveExpression	BIT_DEPTH - 8		13357	1		-			
ANR	13396	Identifier	BIT_DEPTH		13357	0					
ANR	13397	PrimaryExpression	8		13357	1					
ANR	13398	ExpressionStatement	beta <<= BIT_DEPTH - 8	15:4:316:339	13357	5	True				
ANR	13399	AssignmentExpression	beta <<= BIT_DEPTH - 8		13357	0		<<=			
ANR	13400	Identifier	beta		13357	0					
ANR	13401	AdditiveExpression	BIT_DEPTH - 8		13357	1		-			
ANR	13402	Identifier	BIT_DEPTH		13357	0					
ANR	13403	PrimaryExpression	8		13357	1					
ANR	13404	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		13357	6					
ANR	13405	ForInit	i = 0 ;	17:9:351:356	13357	0	True				
ANR	13406	AssignmentExpression	i = 0		13357	0		=			
ANR	13407	Identifier	i		13357	0					
ANR	13408	PrimaryExpression	0		13357	1					
ANR	13409	Condition	i < 4	17:16:358:362	13357	1	True				
ANR	13410	RelationalExpression	i < 4		13357	0		<			
ANR	13411	Identifier	i		13357	0					
ANR	13412	PrimaryExpression	4		13357	1					
ANR	13413	PostIncDecOperationExpression	i ++	17:23:365:367	13357	2	True				
ANR	13414	Identifier	i		13357	0					
ANR	13415	IncDec	++		13357	1					
ANR	13416	CompoundStatement		17:8:218:263	13357	3					
ANR	13417	IdentifierDeclStatement	const int tc_orig = tc0 [ i ] << ( BIT_DEPTH - 8 ) ;	19:8:382:427	13357	0	True				
ANR	13418	IdentifierDecl	tc_orig = tc0 [ i ] << ( BIT_DEPTH - 8 )		13357	0					
ANR	13419	IdentifierDeclType	const int		13357	0					
ANR	13420	Identifier	tc_orig		13357	1					
ANR	13421	AssignmentExpression	tc_orig = tc0 [ i ] << ( BIT_DEPTH - 8 )		13357	2		=			
ANR	13422	Identifier	tc_orig		13357	0					
ANR	13423	ShiftExpression	tc0 [ i ] << ( BIT_DEPTH - 8 )		13357	1		<<			
ANR	13424	ArrayIndexing	tc0 [ i ]		13357	0					
ANR	13425	Identifier	tc0		13357	0					
ANR	13426	Identifier	i		13357	1					
ANR	13427	AdditiveExpression	BIT_DEPTH - 8		13357	1		-			
ANR	13428	Identifier	BIT_DEPTH		13357	0					
ANR	13429	PrimaryExpression	8		13357	1					
ANR	13430	IfStatement	if ( tc_orig < 0 )		13357	1					
ANR	13431	Condition	tc_orig < 0	21:12:442:452	13357	0	True				
ANR	13432	RelationalExpression	tc_orig < 0		13357	0		<			
ANR	13433	Identifier	tc_orig		13357	0					
ANR	13434	PrimaryExpression	0		13357	1					
ANR	13435	CompoundStatement		19:26:292:292	13357	1					
ANR	13436	ExpressionStatement	pix += inner_iters * ystride	23:12:471:497	13357	0	True				
ANR	13437	AssignmentExpression	pix += inner_iters * ystride		13357	0		+=			
ANR	13438	Identifier	pix		13357	0					
ANR	13439	MultiplicativeExpression	inner_iters * ystride		13357	1		*			
ANR	13440	Identifier	inner_iters		13357	0					
ANR	13441	Identifier	ystride		13357	1					
ANR	13442	ContinueStatement	continue ;	25:12:512:520	13357	1	True				
ANR	13443	ForStatement	for ( d = 0 ; d < inner_iters ; d ++ )		13357	2					
ANR	13444	ForInit	d = 0 ;	29:13:547:552	13357	0	True				
ANR	13445	AssignmentExpression	d = 0		13357	0		=			
ANR	13446	Identifier	d		13357	0					
ANR	13447	PrimaryExpression	0		13357	1					
ANR	13448	Condition	d < inner_iters	29:20:554:568	13357	1	True				
ANR	13449	RelationalExpression	d < inner_iters		13357	0		<			
ANR	13450	Identifier	d		13357	0					
ANR	13451	Identifier	inner_iters		13357	1					
ANR	13452	PostIncDecOperationExpression	d ++	29:37:571:573	13357	2	True				
ANR	13453	Identifier	d		13357	0					
ANR	13454	IncDec	++		13357	1					
ANR	13455	CompoundStatement		39:12:643:672	13357	3					
ANR	13456	IdentifierDeclStatement	const int p0 = pix [ - 1 * xstride ] ;	31:12:592:622	13357	0	True				
ANR	13457	IdentifierDecl	p0 = pix [ - 1 * xstride ]		13357	0					
ANR	13458	IdentifierDeclType	const int		13357	0					
ANR	13459	Identifier	p0		13357	1					
ANR	13460	AssignmentExpression	p0 = pix [ - 1 * xstride ]		13357	2		=			
ANR	13461	Identifier	p0		13357	0					
ANR	13462	ArrayIndexing	pix [ - 1 * xstride ]		13357	1					
ANR	13463	Identifier	pix		13357	0					
ANR	13464	MultiplicativeExpression	- 1 * xstride		13357	1		*			
ANR	13465	UnaryOperationExpression	- 1		13357	0					
ANR	13466	UnaryOperator	-		13357	0					
ANR	13467	PrimaryExpression	1		13357	1					
ANR	13468	Identifier	xstride		13357	1					
ANR	13469	IdentifierDeclStatement	const int p1 = pix [ - 2 * xstride ] ;	33:12:637:667	13357	1	True				
ANR	13470	IdentifierDecl	p1 = pix [ - 2 * xstride ]		13357	0					
ANR	13471	IdentifierDeclType	const int		13357	0					
ANR	13472	Identifier	p1		13357	1					
ANR	13473	AssignmentExpression	p1 = pix [ - 2 * xstride ]		13357	2		=			
ANR	13474	Identifier	p1		13357	0					
ANR	13475	ArrayIndexing	pix [ - 2 * xstride ]		13357	1					
ANR	13476	Identifier	pix		13357	0					
ANR	13477	MultiplicativeExpression	- 2 * xstride		13357	1		*			
ANR	13478	UnaryOperationExpression	- 2		13357	0					
ANR	13479	UnaryOperator	-		13357	0					
ANR	13480	PrimaryExpression	2		13357	1					
ANR	13481	Identifier	xstride		13357	1					
ANR	13482	IdentifierDeclStatement	const int p2 = pix [ - 3 * xstride ] ;	35:12:682:712	13357	2	True				
ANR	13483	IdentifierDecl	p2 = pix [ - 3 * xstride ]		13357	0					
ANR	13484	IdentifierDeclType	const int		13357	0					
ANR	13485	Identifier	p2		13357	1					
ANR	13486	AssignmentExpression	p2 = pix [ - 3 * xstride ]		13357	2		=			
ANR	13487	Identifier	p2		13357	0					
ANR	13488	ArrayIndexing	pix [ - 3 * xstride ]		13357	1					
ANR	13489	Identifier	pix		13357	0					
ANR	13490	MultiplicativeExpression	- 3 * xstride		13357	1		*			
ANR	13491	UnaryOperationExpression	- 3		13357	0					
ANR	13492	UnaryOperator	-		13357	0					
ANR	13493	PrimaryExpression	3		13357	1					
ANR	13494	Identifier	xstride		13357	1					
ANR	13495	IdentifierDeclStatement	const int q0 = pix [ 0 ] ;	37:12:727:748	13357	3	True				
ANR	13496	IdentifierDecl	q0 = pix [ 0 ]		13357	0					
ANR	13497	IdentifierDeclType	const int		13357	0					
ANR	13498	Identifier	q0		13357	1					
ANR	13499	AssignmentExpression	q0 = pix [ 0 ]		13357	2		=			
ANR	13500	Identifier	q0		13357	0					
ANR	13501	ArrayIndexing	pix [ 0 ]		13357	1					
ANR	13502	Identifier	pix		13357	0					
ANR	13503	PrimaryExpression	0		13357	1					
ANR	13504	IdentifierDeclStatement	const int q1 = pix [ 1 * xstride ] ;	39:12:763:792	13357	4	True				
ANR	13505	IdentifierDecl	q1 = pix [ 1 * xstride ]		13357	0					
ANR	13506	IdentifierDeclType	const int		13357	0					
ANR	13507	Identifier	q1		13357	1					
ANR	13508	AssignmentExpression	q1 = pix [ 1 * xstride ]		13357	2		=			
ANR	13509	Identifier	q1		13357	0					
ANR	13510	ArrayIndexing	pix [ 1 * xstride ]		13357	1					
ANR	13511	Identifier	pix		13357	0					
ANR	13512	MultiplicativeExpression	1 * xstride		13357	1		*			
ANR	13513	PrimaryExpression	1		13357	0					
ANR	13514	Identifier	xstride		13357	1					
ANR	13515	IdentifierDeclStatement	const int q2 = pix [ 2 * xstride ] ;	41:12:807:836	13357	5	True				
ANR	13516	IdentifierDecl	q2 = pix [ 2 * xstride ]		13357	0					
ANR	13517	IdentifierDeclType	const int		13357	0					
ANR	13518	Identifier	q2		13357	1					
ANR	13519	AssignmentExpression	q2 = pix [ 2 * xstride ]		13357	2		=			
ANR	13520	Identifier	q2		13357	0					
ANR	13521	ArrayIndexing	pix [ 2 * xstride ]		13357	1					
ANR	13522	Identifier	pix		13357	0					
ANR	13523	MultiplicativeExpression	2 * xstride		13357	1		*			
ANR	13524	PrimaryExpression	2		13357	0					
ANR	13525	Identifier	xstride		13357	1					
ANR	13526	IfStatement	if ( FFABS ( p0 - q0 ) < alpha && FFABS ( p1 - p0 ) < beta && FFABS ( q1 - q0 ) < beta )		13357	6					
ANR	13527	Condition	FFABS ( p0 - q0 ) < alpha && FFABS ( p1 - p0 ) < beta && FFABS ( q1 - q0 ) < beta	45:16:857:968	13357	0	True				
ANR	13528	AndExpression	FFABS ( p0 - q0 ) < alpha && FFABS ( p1 - p0 ) < beta && FFABS ( q1 - q0 ) < beta		13357	0		&&			
ANR	13529	RelationalExpression	FFABS ( p0 - q0 ) < alpha		13357	0		<			
ANR	13530	CallExpression	FFABS ( p0 - q0 )		13357	0					
ANR	13531	Callee	FFABS		13357	0					
ANR	13532	Identifier	FFABS		13357	0					
ANR	13533	ArgumentList	p0 - q0		13357	1					
ANR	13534	Argument	p0 - q0		13357	0					
ANR	13535	AdditiveExpression	p0 - q0		13357	0		-			
ANR	13536	Identifier	p0		13357	0					
ANR	13537	Identifier	q0		13357	1					
ANR	13538	Identifier	alpha		13357	1					
ANR	13539	AndExpression	FFABS ( p1 - p0 ) < beta && FFABS ( q1 - q0 ) < beta		13357	1		&&			
ANR	13540	RelationalExpression	FFABS ( p1 - p0 ) < beta		13357	0		<			
ANR	13541	CallExpression	FFABS ( p1 - p0 )		13357	0					
ANR	13542	Callee	FFABS		13357	0					
ANR	13543	Identifier	FFABS		13357	0					
ANR	13544	ArgumentList	p1 - p0		13357	1					
ANR	13545	Argument	p1 - p0		13357	0					
ANR	13546	AdditiveExpression	p1 - p0		13357	0		-			
ANR	13547	Identifier	p1		13357	0					
ANR	13548	Identifier	p0		13357	1					
ANR	13549	Identifier	beta		13357	1					
ANR	13550	RelationalExpression	FFABS ( q1 - q0 ) < beta		13357	1		<			
ANR	13551	CallExpression	FFABS ( q1 - q0 )		13357	0					
ANR	13552	Callee	FFABS		13357	0					
ANR	13553	Identifier	FFABS		13357	0					
ANR	13554	ArgumentList	q1 - q0		13357	1					
ANR	13555	Argument	q1 - q0		13357	0					
ANR	13556	AdditiveExpression	q1 - q0		13357	0		-			
ANR	13557	Identifier	q1		13357	0					
ANR	13558	Identifier	q0		13357	1					
ANR	13559	Identifier	beta		13357	1					
ANR	13560	CompoundStatement		53:16:864:875	13357	1					
ANR	13561	IdentifierDeclStatement	int tc = tc_orig ;	53:16:993:1009	13357	0	True				
ANR	13562	IdentifierDecl	tc = tc_orig		13357	0					
ANR	13563	IdentifierDeclType	int		13357	0					
ANR	13564	Identifier	tc		13357	1					
ANR	13565	AssignmentExpression	tc = tc_orig		13357	2		=			
ANR	13566	Identifier	tc_orig		13357	0					
ANR	13567	Identifier	tc_orig		13357	1					
ANR	13568	IdentifierDeclStatement	int i_delta ;	55:16:1028:1039	13357	1	True				
ANR	13569	IdentifierDecl	i_delta		13357	0					
ANR	13570	IdentifierDeclType	int		13357	0					
ANR	13571	Identifier	i_delta		13357	1					
ANR	13572	IfStatement	if ( FFABS ( p2 - p0 ) < beta )		13357	2					
ANR	13573	Condition	FFABS ( p2 - p0 ) < beta	59:20:1064:1086	13357	0	True				
ANR	13574	RelationalExpression	FFABS ( p2 - p0 ) < beta		13357	0		<			
ANR	13575	CallExpression	FFABS ( p2 - p0 )		13357	0					
ANR	13576	Callee	FFABS		13357	0					
ANR	13577	Identifier	FFABS		13357	0					
ANR	13578	ArgumentList	p2 - p0		13357	1					
ANR	13579	Argument	p2 - p0		13357	0					
ANR	13580	AdditiveExpression	p2 - p0		13357	0		-			
ANR	13581	Identifier	p2		13357	0					
ANR	13582	Identifier	p0		13357	1					
ANR	13583	Identifier	beta		13357	1					
ANR	13584	CompoundStatement		57:46:926:926	13357	1					
ANR	13585	IfStatement	if ( tc_orig )		13357	0					
ANR	13586	Condition	tc_orig	61:23:1116:1122	13357	0	True				
ANR	13587	Identifier	tc_orig		13357	0					
ANR	13588	ExpressionStatement	"pix [ - 2 * xstride ] = p1 + av_clip ( ( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1 , - tc_orig , tc_orig )"	63:20:1146:1244	13357	1	True				
ANR	13589	AssignmentExpression	"pix [ - 2 * xstride ] = p1 + av_clip ( ( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1 , - tc_orig , tc_orig )"		13357	0		=			
ANR	13590	ArrayIndexing	pix [ - 2 * xstride ]		13357	0					
ANR	13591	Identifier	pix		13357	0					
ANR	13592	MultiplicativeExpression	- 2 * xstride		13357	1		*			
ANR	13593	UnaryOperationExpression	- 2		13357	0					
ANR	13594	UnaryOperator	-		13357	0					
ANR	13595	PrimaryExpression	2		13357	1					
ANR	13596	Identifier	xstride		13357	1					
ANR	13597	AdditiveExpression	"p1 + av_clip ( ( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1 , - tc_orig , tc_orig )"		13357	1		+			
ANR	13598	Identifier	p1		13357	0					
ANR	13599	CallExpression	"av_clip ( ( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1 , - tc_orig , tc_orig )"		13357	1					
ANR	13600	Callee	av_clip		13357	0					
ANR	13601	Identifier	av_clip		13357	0					
ANR	13602	ArgumentList	( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1		13357	1					
ANR	13603	Argument	( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1		13357	0					
ANR	13604	AdditiveExpression	( ( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - p1		13357	0		-			
ANR	13605	ShiftExpression	( p2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1		13357	0		>>			
ANR	13606	AdditiveExpression	p2 + ( ( p0 + q0 + 1 ) >> 1 )		13357	0		+			
ANR	13607	Identifier	p2		13357	0					
ANR	13608	ShiftExpression	( p0 + q0 + 1 ) >> 1		13357	1		>>			
ANR	13609	AdditiveExpression	p0 + q0 + 1		13357	0		+			
ANR	13610	Identifier	p0		13357	0					
ANR	13611	AdditiveExpression	q0 + 1		13357	1		+			
ANR	13612	Identifier	q0		13357	0					
ANR	13613	PrimaryExpression	1		13357	1					
ANR	13614	PrimaryExpression	1		13357	1					
ANR	13615	PrimaryExpression	1		13357	1					
ANR	13616	Identifier	p1		13357	1					
ANR	13617	Argument	- tc_orig		13357	1					
ANR	13618	UnaryOperationExpression	- tc_orig		13357	0					
ANR	13619	UnaryOperator	-		13357	0					
ANR	13620	Identifier	tc_orig		13357	1					
ANR	13621	Argument	tc_orig		13357	2					
ANR	13622	Identifier	tc_orig		13357	0					
ANR	13623	ExpressionStatement	tc ++	65:20:1267:1271	13357	1	True				
ANR	13624	PostIncDecOperationExpression	tc ++		13357	0					
ANR	13625	Identifier	tc		13357	0					
ANR	13626	IncDec	++		13357	1					
ANR	13627	IfStatement	if ( FFABS ( q2 - q0 ) < beta )		13357	3					
ANR	13628	Condition	FFABS ( q2 - q0 ) < beta	69:20:1313:1335	13357	0	True				
ANR	13629	RelationalExpression	FFABS ( q2 - q0 ) < beta		13357	0		<			
ANR	13630	CallExpression	FFABS ( q2 - q0 )		13357	0					
ANR	13631	Callee	FFABS		13357	0					
ANR	13632	Identifier	FFABS		13357	0					
ANR	13633	ArgumentList	q2 - q0		13357	1					
ANR	13634	Argument	q2 - q0		13357	0					
ANR	13635	AdditiveExpression	q2 - q0		13357	0		-			
ANR	13636	Identifier	q2		13357	0					
ANR	13637	Identifier	q0		13357	1					
ANR	13638	Identifier	beta		13357	1					
ANR	13639	CompoundStatement		67:46:1175:1175	13357	1					
ANR	13640	IfStatement	if ( tc_orig )		13357	0					
ANR	13641	Condition	tc_orig	71:23:1365:1371	13357	0	True				
ANR	13642	Identifier	tc_orig		13357	0					
ANR	13643	ExpressionStatement	"pix [ xstride ] = q1 + av_clip ( ( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1 , - tc_orig , tc_orig )"	73:20:1395:1493	13357	1	True				
ANR	13644	AssignmentExpression	"pix [ xstride ] = q1 + av_clip ( ( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1 , - tc_orig , tc_orig )"		13357	0		=			
ANR	13645	ArrayIndexing	pix [ xstride ]		13357	0					
ANR	13646	Identifier	pix		13357	0					
ANR	13647	Identifier	xstride		13357	1					
ANR	13648	AdditiveExpression	"q1 + av_clip ( ( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1 , - tc_orig , tc_orig )"		13357	1		+			
ANR	13649	Identifier	q1		13357	0					
ANR	13650	CallExpression	"av_clip ( ( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1 , - tc_orig , tc_orig )"		13357	1					
ANR	13651	Callee	av_clip		13357	0					
ANR	13652	Identifier	av_clip		13357	0					
ANR	13653	ArgumentList	( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1		13357	1					
ANR	13654	Argument	( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1		13357	0					
ANR	13655	AdditiveExpression	( ( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1 ) - q1		13357	0		-			
ANR	13656	ShiftExpression	( q2 + ( ( p0 + q0 + 1 ) >> 1 ) ) >> 1		13357	0		>>			
ANR	13657	AdditiveExpression	q2 + ( ( p0 + q0 + 1 ) >> 1 )		13357	0		+			
ANR	13658	Identifier	q2		13357	0					
ANR	13659	ShiftExpression	( p0 + q0 + 1 ) >> 1		13357	1		>>			
ANR	13660	AdditiveExpression	p0 + q0 + 1		13357	0		+			
ANR	13661	Identifier	p0		13357	0					
ANR	13662	AdditiveExpression	q0 + 1		13357	1		+			
ANR	13663	Identifier	q0		13357	0					
ANR	13664	PrimaryExpression	1		13357	1					
ANR	13665	PrimaryExpression	1		13357	1					
ANR	13666	PrimaryExpression	1		13357	1					
ANR	13667	Identifier	q1		13357	1					
ANR	13668	Argument	- tc_orig		13357	1					
ANR	13669	UnaryOperationExpression	- tc_orig		13357	0					
ANR	13670	UnaryOperator	-		13357	0					
ANR	13671	Identifier	tc_orig		13357	1					
ANR	13672	Argument	tc_orig		13357	2					
ANR	13673	Identifier	tc_orig		13357	0					
ANR	13674	ExpressionStatement	tc ++	75:20:1516:1520	13357	1	True				
ANR	13675	PostIncDecOperationExpression	tc ++		13357	0					
ANR	13676	Identifier	tc		13357	0					
ANR	13677	IncDec	++		13357	1					
ANR	13678	ExpressionStatement	"i_delta = av_clip ( ( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3 , - tc , tc )"	81:16:1560:1630	13357	4	True				
ANR	13679	AssignmentExpression	"i_delta = av_clip ( ( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3 , - tc , tc )"		13357	0		=			
ANR	13680	Identifier	i_delta		13357	0					
ANR	13681	CallExpression	"av_clip ( ( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3 , - tc , tc )"		13357	1					
ANR	13682	Callee	av_clip		13357	0					
ANR	13683	Identifier	av_clip		13357	0					
ANR	13684	ArgumentList	( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3		13357	1					
ANR	13685	Argument	( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3		13357	0					
ANR	13686	ShiftExpression	( ( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4 ) >> 3		13357	0		>>			
ANR	13687	AdditiveExpression	( ( q0 - p0 ) << 2 ) + ( p1 - q1 ) + 4		13357	0		+			
ANR	13688	ShiftExpression	( q0 - p0 ) << 2		13357	0		<<			
ANR	13689	AdditiveExpression	q0 - p0		13357	0		-			
ANR	13690	Identifier	q0		13357	0					
ANR	13691	Identifier	p0		13357	1					
ANR	13692	PrimaryExpression	2		13357	1					
ANR	13693	AdditiveExpression	( p1 - q1 ) + 4		13357	1		+			
ANR	13694	AdditiveExpression	p1 - q1		13357	0		-			
ANR	13695	Identifier	p1		13357	0					
ANR	13696	Identifier	q1		13357	1					
ANR	13697	PrimaryExpression	4		13357	1					
ANR	13698	PrimaryExpression	3		13357	1					
ANR	13699	Argument	- tc		13357	1					
ANR	13700	UnaryOperationExpression	- tc		13357	0					
ANR	13701	UnaryOperator	-		13357	0					
ANR	13702	Identifier	tc		13357	1					
ANR	13703	Argument	tc		13357	2					
ANR	13704	Identifier	tc		13357	0					
ANR	13705	ExpressionStatement	pix [ - xstride ] = av_clip_pixel ( p0 + i_delta )	83:16:1649:1694	13357	5	True				
ANR	13706	AssignmentExpression	pix [ - xstride ] = av_clip_pixel ( p0 + i_delta )		13357	0		=			
ANR	13707	ArrayIndexing	pix [ - xstride ]		13357	0					
ANR	13708	Identifier	pix		13357	0					
ANR	13709	UnaryOperationExpression	- xstride		13357	1					
ANR	13710	UnaryOperator	-		13357	0					
ANR	13711	Identifier	xstride		13357	1					
ANR	13712	CallExpression	av_clip_pixel ( p0 + i_delta )		13357	1					
ANR	13713	Callee	av_clip_pixel		13357	0					
ANR	13714	Identifier	av_clip_pixel		13357	0					
ANR	13715	ArgumentList	p0 + i_delta		13357	1					
ANR	13716	Argument	p0 + i_delta		13357	0					
ANR	13717	AdditiveExpression	p0 + i_delta		13357	0		+			
ANR	13718	Identifier	p0		13357	0					
ANR	13719	Identifier	i_delta		13357	1					
ANR	13720	ExpressionStatement	pix [ 0 ] = av_clip_pixel ( q0 - i_delta )	85:16:1726:1771	13357	6	True				
ANR	13721	AssignmentExpression	pix [ 0 ] = av_clip_pixel ( q0 - i_delta )		13357	0		=			
ANR	13722	ArrayIndexing	pix [ 0 ]		13357	0					
ANR	13723	Identifier	pix		13357	0					
ANR	13724	PrimaryExpression	0		13357	1					
ANR	13725	CallExpression	av_clip_pixel ( q0 - i_delta )		13357	1					
ANR	13726	Callee	av_clip_pixel		13357	0					
ANR	13727	Identifier	av_clip_pixel		13357	0					
ANR	13728	ArgumentList	q0 - i_delta		13357	1					
ANR	13729	Argument	q0 - i_delta		13357	0					
ANR	13730	AdditiveExpression	q0 - i_delta		13357	0		-			
ANR	13731	Identifier	q0		13357	0					
ANR	13732	Identifier	i_delta		13357	1					
ANR	13733	ExpressionStatement	pix += ystride	89:12:1814:1828	13357	7	True				
ANR	13734	AssignmentExpression	pix += ystride		13357	0		+=			
ANR	13735	Identifier	pix		13357	0					
ANR	13736	Identifier	ystride		13357	1					
ANR	13737	ReturnType	static av_always_inline av_flatten void FUNCC		13357	1					
ANR	13738	Identifier	( h264_loop_filter_luma )		13357	2					
ANR	13739	Identifier	h264_loop_filter_luma		13357	3					
ANR	13740	ParameterList	"uint8_t * p_pix , int xstride , int ystride , int inner_iters , int alpha , int beta , int8_t * tc0"		13357	4					
ANR	13741	Parameter	uint8_t * p_pix	1:69:69:82	13357	0	True				
ANR	13742	ParameterType	uint8_t *		13357	0					
ANR	13743	Identifier	p_pix		13357	1					
ANR	13744	Parameter	int xstride	1:85:85:95	13357	1	True				
ANR	13745	ParameterType	int		13357	0					
ANR	13746	Identifier	xstride		13357	1					
ANR	13747	Parameter	int ystride	1:98:98:108	13357	2	True				
ANR	13748	ParameterType	int		13357	0					
ANR	13749	Identifier	ystride		13357	1					
ANR	13750	Parameter	int inner_iters	1:111:111:125	13357	3	True				
ANR	13751	ParameterType	int		13357	0					
ANR	13752	Identifier	inner_iters		13357	1					
ANR	13753	Parameter	int alpha	1:128:128:136	13357	4	True				
ANR	13754	ParameterType	int		13357	0					
ANR	13755	Identifier	alpha		13357	1					
ANR	13756	Parameter	int beta	1:139:139:146	13357	5	True				
ANR	13757	ParameterType	int		13357	0					
ANR	13758	Identifier	beta		13357	1					
ANR	13759	Parameter	int8_t * tc0	1:149:149:159	13357	6	True				
ANR	13760	ParameterType	int8_t *		13357	0					
ANR	13761	Identifier	tc0		13357	1					
ANR	13762	CFGEntryNode	ENTRY		13357		True				
ANR	13763	CFGExitNode	EXIT		13357		True				
ANR	13764	Symbol	p0		13357						
ANR	13765	Symbol	p1		13357						
ANR	13766	Symbol	p2		13357						
ANR	13767	Symbol	p_pix		13357						
ANR	13768	Symbol	inner_iters		13357						
ANR	13769	Symbol	* pix		13357						
ANR	13770	Symbol	* tc0		13357						
ANR	13771	Symbol	xstride		13357						
ANR	13772	Symbol	alpha		13357						
ANR	13773	Symbol	av_clip_pixel		13357						
ANR	13774	Symbol	i_delta		13357						
ANR	13775	Symbol	av_clip		13357						
ANR	13776	Symbol	beta		13357						
ANR	13777	Symbol	pix		13357						
ANR	13778	Symbol	q0		13357						
ANR	13779	Symbol	tc0		13357						
ANR	13780	Symbol	tc_orig		13357						
ANR	13781	Symbol	q1		13357						
ANR	13782	Symbol	q2		13357						
ANR	13783	Symbol	d		13357						
ANR	13784	Symbol	i		13357						
ANR	13785	Symbol	FFABS		13357						
ANR	13786	Symbol	tc		13357						
ANR	13787	Symbol	BIT_DEPTH		13357						
ANR	13788	Symbol	* i		13357						
ANR	13789	Symbol	ystride		13357						
ANR	13790	Symbol	* xstride		13357						
