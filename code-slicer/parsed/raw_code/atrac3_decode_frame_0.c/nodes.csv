command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	662661	File	/home/p4ultr4n/workplace/ReVeal/raw_code/atrac3_decode_frame_0.c								
ANR	662662	Function	atrac3_decode_frame	1:0:0:1305							
ANR	662663	FunctionDef	"atrac3_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		662662	0					
ANR	662664	CompoundStatement		5:29:125:1305	662662	0					
ANR	662665	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:132:164	662662	0	True				
ANR	662666	IdentifierDecl	* buf = avpkt -> data		662662	0					
ANR	662667	IdentifierDeclType	const uint8_t *		662662	0					
ANR	662668	Identifier	buf		662662	1					
ANR	662669	AssignmentExpression	* buf = avpkt -> data		662662	2		=			
ANR	662670	Identifier	buf		662662	0					
ANR	662671	PtrMemberAccess	avpkt -> data		662662	1					
ANR	662672	Identifier	avpkt		662662	0					
ANR	662673	Identifier	data		662662	1					
ANR	662674	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:171:197	662662	1	True				
ANR	662675	IdentifierDecl	buf_size = avpkt -> size		662662	0					
ANR	662676	IdentifierDeclType	int		662662	0					
ANR	662677	Identifier	buf_size		662662	1					
ANR	662678	AssignmentExpression	buf_size = avpkt -> size		662662	2		=			
ANR	662679	Identifier	buf_size		662662	0					
ANR	662680	PtrMemberAccess	avpkt -> size		662662	1					
ANR	662681	Identifier	avpkt		662662	0					
ANR	662682	Identifier	size		662662	1					
ANR	662683	IdentifierDeclStatement	ATRAC3Context * q = avctx -> priv_data ;	11:4:204:239	662662	2	True				
ANR	662684	IdentifierDecl	* q = avctx -> priv_data		662662	0					
ANR	662685	IdentifierDeclType	ATRAC3Context *		662662	0					
ANR	662686	Identifier	q		662662	1					
ANR	662687	AssignmentExpression	* q = avctx -> priv_data		662662	2		=			
ANR	662688	Identifier	q		662662	0					
ANR	662689	PtrMemberAccess	avctx -> priv_data		662662	1					
ANR	662690	Identifier	avctx		662662	0					
ANR	662691	Identifier	priv_data		662662	1					
ANR	662692	IdentifierDeclStatement	int result = 0 ;	13:4:246:260	662662	3	True				
ANR	662693	IdentifierDecl	result = 0		662662	0					
ANR	662694	IdentifierDeclType	int		662662	0					
ANR	662695	Identifier	result		662662	1					
ANR	662696	AssignmentExpression	result = 0		662662	2		=			
ANR	662697	Identifier	result		662662	0					
ANR	662698	PrimaryExpression	0		662662	1					
ANR	662699	IdentifierDeclStatement	const uint8_t * databuf ;	15:4:267:289	662662	4	True				
ANR	662700	IdentifierDecl	* databuf		662662	0					
ANR	662701	IdentifierDeclType	const uint8_t *		662662	0					
ANR	662702	Identifier	databuf		662662	1					
ANR	662703	IdentifierDeclStatement	float * samples = data ;	17:4:296:317	662662	5	True				
ANR	662704	IdentifierDecl	* samples = data		662662	0					
ANR	662705	IdentifierDeclType	float *		662662	0					
ANR	662706	Identifier	samples		662662	1					
ANR	662707	AssignmentExpression	* samples = data		662662	2		=			
ANR	662708	Identifier	data		662662	0					
ANR	662709	Identifier	data		662662	1					
ANR	662710	IfStatement	if ( buf_size < avctx -> block_align )		662662	6					
ANR	662711	Condition	buf_size < avctx -> block_align	21:8:330:358	662662	0	True				
ANR	662712	RelationalExpression	buf_size < avctx -> block_align		662662	0		<			
ANR	662713	Identifier	buf_size		662662	0					
ANR	662714	PtrMemberAccess	avctx -> block_align		662662	1					
ANR	662715	Identifier	avctx		662662	0					
ANR	662716	Identifier	block_align		662662	1					
ANR	662717	CompoundStatement		17:39:235:235	662662	1					
ANR	662718	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"	23:8:372:474	662662	0	True				
ANR	662719	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame too small (%d bytes). Truncated file?\\n"" , buf_size )"		662662	0					
ANR	662720	Callee	av_log		662662	0					
ANR	662721	Identifier	av_log		662662	0					
ANR	662722	ArgumentList	avctx		662662	1					
ANR	662723	Argument	avctx		662662	0					
ANR	662724	Identifier	avctx		662662	0					
ANR	662725	Argument	AV_LOG_ERROR		662662	1					
ANR	662726	Identifier	AV_LOG_ERROR		662662	0					
ANR	662727	Argument	"""Frame too small (%d bytes). Truncated file?\\n"""		662662	2					
ANR	662728	PrimaryExpression	"""Frame too small (%d bytes). Truncated file?\\n"""		662662	0					
ANR	662729	Argument	buf_size		662662	3					
ANR	662730	Identifier	buf_size		662662	0					
ANR	662731	ExpressionStatement	* data_size = 0	27:8:485:499	662662	1	True				
ANR	662732	AssignmentExpression	* data_size = 0		662662	0		=			
ANR	662733	UnaryOperationExpression	* data_size		662662	0					
ANR	662734	UnaryOperator	*		662662	0					
ANR	662735	Identifier	data_size		662662	1					
ANR	662736	PrimaryExpression	0		662662	1					
ANR	662737	ReturnStatement	return buf_size ;	29:8:510:525	662662	2	True				
ANR	662738	Identifier	buf_size		662662	0					
ANR	662739	IfStatement	if ( q -> scrambled_stream )		662662	7					
ANR	662740	Condition	q -> scrambled_stream	37:8:615:633	662662	0	True				
ANR	662741	PtrMemberAccess	q -> scrambled_stream		662662	0					
ANR	662742	Identifier	q		662662	0					
ANR	662743	Identifier	scrambled_stream		662662	1					
ANR	662744	CompoundStatement		33:29:510:510	662662	1					
ANR	662745	ExpressionStatement	"decode_bytes ( buf , q -> decoded_bytes_buffer , avctx -> block_align )"	39:8:647:709	662662	0	True				
ANR	662746	CallExpression	"decode_bytes ( buf , q -> decoded_bytes_buffer , avctx -> block_align )"		662662	0					
ANR	662747	Callee	decode_bytes		662662	0					
ANR	662748	Identifier	decode_bytes		662662	0					
ANR	662749	ArgumentList	buf		662662	1					
ANR	662750	Argument	buf		662662	0					
ANR	662751	Identifier	buf		662662	0					
ANR	662752	Argument	q -> decoded_bytes_buffer		662662	1					
ANR	662753	PtrMemberAccess	q -> decoded_bytes_buffer		662662	0					
ANR	662754	Identifier	q		662662	0					
ANR	662755	Identifier	decoded_bytes_buffer		662662	1					
ANR	662756	Argument	avctx -> block_align		662662	2					
ANR	662757	PtrMemberAccess	avctx -> block_align		662662	0					
ANR	662758	Identifier	avctx		662662	0					
ANR	662759	Identifier	block_align		662662	1					
ANR	662760	ExpressionStatement	databuf = q -> decoded_bytes_buffer	41:8:720:753	662662	1	True				
ANR	662761	AssignmentExpression	databuf = q -> decoded_bytes_buffer		662662	0		=			
ANR	662762	Identifier	databuf		662662	0					
ANR	662763	PtrMemberAccess	q -> decoded_bytes_buffer		662662	1					
ANR	662764	Identifier	q		662662	0					
ANR	662765	Identifier	decoded_bytes_buffer		662662	1					
ANR	662766	ElseStatement	else		662662	0					
ANR	662767	CompoundStatement		39:11:641:641	662662	0					
ANR	662768	ExpressionStatement	databuf = buf	45:8:778:791	662662	0	True				
ANR	662769	AssignmentExpression	databuf = buf		662662	0		=			
ANR	662770	Identifier	databuf		662662	0					
ANR	662771	Identifier	buf		662662	1					
ANR	662772	ExpressionStatement	"result = decodeFrame ( q , databuf , q -> channels == 2 ? q -> outSamples : & samples )"	51:4:807:884	662662	8	True				
ANR	662773	AssignmentExpression	"result = decodeFrame ( q , databuf , q -> channels == 2 ? q -> outSamples : & samples )"		662662	0		=			
ANR	662774	Identifier	result		662662	0					
ANR	662775	CallExpression	"decodeFrame ( q , databuf , q -> channels == 2 ? q -> outSamples : & samples )"		662662	1					
ANR	662776	Callee	decodeFrame		662662	0					
ANR	662777	Identifier	decodeFrame		662662	0					
ANR	662778	ArgumentList	q		662662	1					
ANR	662779	Argument	q		662662	0					
ANR	662780	Identifier	q		662662	0					
ANR	662781	Argument	databuf		662662	1					
ANR	662782	Identifier	databuf		662662	0					
ANR	662783	Argument	q -> channels == 2 ? q -> outSamples : & samples		662662	2					
ANR	662784	ConditionalExpression	q -> channels == 2 ? q -> outSamples : & samples		662662	0					
ANR	662785	Condition	q -> channels == 2		662662	0					
ANR	662786	EqualityExpression	q -> channels == 2		662662	0		==			
ANR	662787	PtrMemberAccess	q -> channels		662662	0					
ANR	662788	Identifier	q		662662	0					
ANR	662789	Identifier	channels		662662	1					
ANR	662790	PrimaryExpression	2		662662	1					
ANR	662791	PtrMemberAccess	q -> outSamples		662662	1					
ANR	662792	Identifier	q		662662	0					
ANR	662793	Identifier	outSamples		662662	1					
ANR	662794	UnaryOperationExpression	& samples		662662	2					
ANR	662795	UnaryOperator	&		662662	0					
ANR	662796	Identifier	samples		662662	1					
ANR	662797	IfStatement	if ( result != 0 )		662662	9					
ANR	662798	Condition	result != 0	55:8:897:907	662662	0	True				
ANR	662799	EqualityExpression	result != 0		662662	0		!=			
ANR	662800	Identifier	result		662662	0					
ANR	662801	PrimaryExpression	0		662662	1					
ANR	662802	CompoundStatement		51:21:784:784	662662	1					
ANR	662803	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Frame decoding error!\\n"" )"	57:8:921:972	662662	0	True				
ANR	662804	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Frame decoding error!\\n"" )"		662662	0					
ANR	662805	Callee	av_log		662662	0					
ANR	662806	Identifier	av_log		662662	0					
ANR	662807	ArgumentList	NULL		662662	1					
ANR	662808	Argument	NULL		662662	0					
ANR	662809	Identifier	NULL		662662	0					
ANR	662810	Argument	AV_LOG_ERROR		662662	1					
ANR	662811	Identifier	AV_LOG_ERROR		662662	0					
ANR	662812	Argument	"""Frame decoding error!\\n"""		662662	2					
ANR	662813	PrimaryExpression	"""Frame decoding error!\\n"""		662662	0					
ANR	662814	ReturnStatement	return - 1 ;	59:8:983:992	662662	1	True				
ANR	662815	UnaryOperationExpression	- 1		662662	0					
ANR	662816	UnaryOperator	-		662662	0					
ANR	662817	PrimaryExpression	1		662662	1					
ANR	662818	IfStatement	if ( q -> channels == 2 )		662662	10					
ANR	662819	Condition	q -> channels == 2	67:8:1034:1049	662662	0	True				
ANR	662820	EqualityExpression	q -> channels == 2		662662	0		==			
ANR	662821	PtrMemberAccess	q -> channels		662662	0					
ANR	662822	Identifier	q		662662	0					
ANR	662823	Identifier	channels		662662	1					
ANR	662824	PrimaryExpression	2		662662	1					
ANR	662825	CompoundStatement		63:26:926:926	662662	1					
ANR	662826	ExpressionStatement	"q -> fmt_conv . float_interleave ( samples , ( const float * * ) q -> outSamples , 1024 , 2 )"	69:8:1063:1178	662662	0	True				
ANR	662827	CallExpression	"q -> fmt_conv . float_interleave ( samples , ( const float * * ) q -> outSamples , 1024 , 2 )"		662662	0					
ANR	662828	Callee	q -> fmt_conv . float_interleave		662662	0					
ANR	662829	MemberAccess	q -> fmt_conv . float_interleave		662662	0					
ANR	662830	PtrMemberAccess	q -> fmt_conv		662662	0					
ANR	662831	Identifier	q		662662	0					
ANR	662832	Identifier	fmt_conv		662662	1					
ANR	662833	Identifier	float_interleave		662662	1					
ANR	662834	ArgumentList	samples		662662	1					
ANR	662835	Argument	samples		662662	0					
ANR	662836	Identifier	samples		662662	0					
ANR	662837	Argument	( const float * * ) q -> outSamples		662662	1					
ANR	662838	CastExpression	( const float * * ) q -> outSamples		662662	0					
ANR	662839	CastTarget	const float * *		662662	0					
ANR	662840	PtrMemberAccess	q -> outSamples		662662	1					
ANR	662841	Identifier	q		662662	0					
ANR	662842	Identifier	outSamples		662662	1					
ANR	662843	Argument	1024		662662	2					
ANR	662844	PrimaryExpression	1024		662662	0					
ANR	662845	Argument	2		662662	3					
ANR	662846	PrimaryExpression	2		662662	0					
ANR	662847	ExpressionStatement	* data_size = 1024 * q -> channels * av_get_bytes_per_sample ( avctx -> sample_fmt )	75:4:1192:1268	662662	11	True				
ANR	662848	AssignmentExpression	* data_size = 1024 * q -> channels * av_get_bytes_per_sample ( avctx -> sample_fmt )		662662	0		=			
ANR	662849	UnaryOperationExpression	* data_size		662662	0					
ANR	662850	UnaryOperator	*		662662	0					
ANR	662851	Identifier	data_size		662662	1					
ANR	662852	MultiplicativeExpression	1024 * q -> channels * av_get_bytes_per_sample ( avctx -> sample_fmt )		662662	1		*			
ANR	662853	PrimaryExpression	1024		662662	0					
ANR	662854	MultiplicativeExpression	q -> channels * av_get_bytes_per_sample ( avctx -> sample_fmt )		662662	1		*			
ANR	662855	PtrMemberAccess	q -> channels		662662	0					
ANR	662856	Identifier	q		662662	0					
ANR	662857	Identifier	channels		662662	1					
ANR	662858	CallExpression	av_get_bytes_per_sample ( avctx -> sample_fmt )		662662	1					
ANR	662859	Callee	av_get_bytes_per_sample		662662	0					
ANR	662860	Identifier	av_get_bytes_per_sample		662662	0					
ANR	662861	ArgumentList	avctx -> sample_fmt		662662	1					
ANR	662862	Argument	avctx -> sample_fmt		662662	0					
ANR	662863	PtrMemberAccess	avctx -> sample_fmt		662662	0					
ANR	662864	Identifier	avctx		662662	0					
ANR	662865	Identifier	sample_fmt		662662	1					
ANR	662866	ReturnStatement	return avctx -> block_align ;	79:4:1277:1302	662662	12	True				
ANR	662867	PtrMemberAccess	avctx -> block_align		662662	0					
ANR	662868	Identifier	avctx		662662	0					
ANR	662869	Identifier	block_align		662662	1					
ANR	662870	ReturnType	static int		662662	1					
ANR	662871	Identifier	atrac3_decode_frame		662662	2					
ANR	662872	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		662662	3					
ANR	662873	Parameter	AVCodecContext * avctx	1:31:31:51	662662	0	True				
ANR	662874	ParameterType	AVCodecContext *		662662	0					
ANR	662875	Identifier	avctx		662662	1					
ANR	662876	Parameter	void * data	3:12:67:76	662662	1	True				
ANR	662877	ParameterType	void *		662662	0					
ANR	662878	Identifier	data		662662	1					
ANR	662879	Parameter	int * data_size	3:24:79:92	662662	2	True				
ANR	662880	ParameterType	int *		662662	0					
ANR	662881	Identifier	data_size		662662	1					
ANR	662882	Parameter	AVPacket * avpkt	5:12:108:122	662662	3	True				
ANR	662883	ParameterType	AVPacket *		662662	0					
ANR	662884	Identifier	avpkt		662662	1					
ANR	662885	CFGEntryNode	ENTRY		662662		True				
ANR	662886	CFGExitNode	EXIT		662662		True				
ANR	662887	Symbol	av_get_bytes_per_sample		662662						
ANR	662888	Symbol	data		662662						
ANR	662889	Symbol	q -> outSamples		662662						
ANR	662890	Symbol	q -> channels		662662						
ANR	662891	Symbol	avpkt		662662						
ANR	662892	Symbol	* data_size		662662						
ANR	662893	Symbol	databuf		662662						
ANR	662894	Symbol	result		662662						
ANR	662895	Symbol	avctx -> block_align		662662						
ANR	662896	Symbol	avpkt -> size		662662						
ANR	662897	Symbol	q -> scrambled_stream		662662						
ANR	662898	Symbol	avctx		662662						
ANR	662899	Symbol	decodeFrame		662662						
ANR	662900	Symbol	data_size		662662						
ANR	662901	Symbol	* avpkt		662662						
ANR	662902	Symbol	avctx -> sample_fmt		662662						
ANR	662903	Symbol	NULL		662662						
ANR	662904	Symbol	AV_LOG_ERROR		662662						
ANR	662905	Symbol	buf_size		662662						
ANR	662906	Symbol	q -> fmt_conv		662662						
ANR	662907	Symbol	avctx -> priv_data		662662						
ANR	662908	Symbol	samples		662662						
ANR	662909	Symbol	q		662662						
ANR	662910	Symbol	buf		662662						
ANR	662911	Symbol	* avctx		662662						
ANR	662912	Symbol	& samples		662662						
ANR	662913	Symbol	avpkt -> data		662662						
ANR	662914	Symbol	* q		662662						
ANR	662915	Symbol	q -> decoded_bytes_buffer		662662						
