command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	974738	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bdrv_exceed_bps_limits_0.c								
ANR	974739	Function	bdrv_exceed_bps_limits	1:0:0:2100							
ANR	974740	FunctionDef	"bdrv_exceed_bps_limits (BlockDriverState * bs , int nb_sectors , bool is_write , double elapsed_time , uint64_t * wait)"		974739	0					
ANR	974741	CompoundStatement		5:0:144:2100	974739	0					
ANR	974742	IdentifierDeclStatement	uint64_t bps_limit = 0 ;	7:4:151:173	974739	0	True				
ANR	974743	IdentifierDecl	bps_limit = 0		974739	0					
ANR	974744	IdentifierDeclType	uint64_t		974739	0					
ANR	974745	Identifier	bps_limit		974739	1					
ANR	974746	AssignmentExpression	bps_limit = 0		974739	2		=			
ANR	974747	Identifier	bps_limit		974739	0					
ANR	974748	PrimaryExpression	0		974739	1					
ANR	974749	IdentifierDeclStatement	"double bytes_limit , bytes_base , bytes_res ;"	9:4:180:223	974739	1	True				
ANR	974750	IdentifierDecl	bytes_limit		974739	0					
ANR	974751	IdentifierDeclType	double		974739	0					
ANR	974752	Identifier	bytes_limit		974739	1					
ANR	974753	IdentifierDecl	bytes_base		974739	1					
ANR	974754	IdentifierDeclType	double		974739	0					
ANR	974755	Identifier	bytes_base		974739	1					
ANR	974756	IdentifierDecl	bytes_res		974739	2					
ANR	974757	IdentifierDeclType	double		974739	0					
ANR	974758	Identifier	bytes_res		974739	1					
ANR	974759	IdentifierDeclStatement	"double slice_time , wait_time ;"	11:4:230:260	974739	2	True				
ANR	974760	IdentifierDecl	slice_time		974739	0					
ANR	974761	IdentifierDeclType	double		974739	0					
ANR	974762	Identifier	slice_time		974739	1					
ANR	974763	IdentifierDecl	wait_time		974739	1					
ANR	974764	IdentifierDeclType	double		974739	0					
ANR	974765	Identifier	wait_time		974739	1					
ANR	974766	IfStatement	if ( bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ] )		974739	3					
ANR	974767	Condition	bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]	15:8:273:311	974739	0	True				
ANR	974768	ArrayIndexing	bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]		974739	0					
ANR	974769	MemberAccess	bs -> io_limits . bps		974739	0					
ANR	974770	PtrMemberAccess	bs -> io_limits		974739	0					
ANR	974771	Identifier	bs		974739	0					
ANR	974772	Identifier	io_limits		974739	1					
ANR	974773	Identifier	bps		974739	1					
ANR	974774	Identifier	BLOCK_IO_LIMIT_TOTAL		974739	1					
ANR	974775	CompoundStatement		11:49:169:169	974739	1					
ANR	974776	ExpressionStatement	bps_limit = bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]	17:8:325:376	974739	0	True				
ANR	974777	AssignmentExpression	bps_limit = bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]		974739	0		=			
ANR	974778	Identifier	bps_limit		974739	0					
ANR	974779	ArrayIndexing	bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]		974739	1					
ANR	974780	MemberAccess	bs -> io_limits . bps		974739	0					
ANR	974781	PtrMemberAccess	bs -> io_limits		974739	0					
ANR	974782	Identifier	bs		974739	0					
ANR	974783	Identifier	io_limits		974739	1					
ANR	974784	Identifier	bps		974739	1					
ANR	974785	Identifier	BLOCK_IO_LIMIT_TOTAL		974739	1					
ANR	974786	ElseStatement	else		974739	0					
ANR	974787	IfStatement	if ( bs -> io_limits . bps [ is_write ] )		974739	0					
ANR	974788	Condition	bs -> io_limits . bps [ is_write ]	19:15:394:420	974739	0	True				
ANR	974789	ArrayIndexing	bs -> io_limits . bps [ is_write ]		974739	0					
ANR	974790	MemberAccess	bs -> io_limits . bps		974739	0					
ANR	974791	PtrMemberAccess	bs -> io_limits		974739	0					
ANR	974792	Identifier	bs		974739	0					
ANR	974793	Identifier	io_limits		974739	1					
ANR	974794	Identifier	bps		974739	1					
ANR	974795	Identifier	is_write		974739	1					
ANR	974796	CompoundStatement		15:44:278:278	974739	1					
ANR	974797	ExpressionStatement	bps_limit = bs -> io_limits . bps [ is_write ]	21:8:434:473	974739	0	True				
ANR	974798	AssignmentExpression	bps_limit = bs -> io_limits . bps [ is_write ]		974739	0		=			
ANR	974799	Identifier	bps_limit		974739	0					
ANR	974800	ArrayIndexing	bs -> io_limits . bps [ is_write ]		974739	1					
ANR	974801	MemberAccess	bs -> io_limits . bps		974739	0					
ANR	974802	PtrMemberAccess	bs -> io_limits		974739	0					
ANR	974803	Identifier	bs		974739	0					
ANR	974804	Identifier	io_limits		974739	1					
ANR	974805	Identifier	bps		974739	1					
ANR	974806	Identifier	is_write		974739	1					
ANR	974807	ElseStatement	else		974739	0					
ANR	974808	CompoundStatement		19:11:342:342	974739	0					
ANR	974809	IfStatement	if ( wait )		974739	0					
ANR	974810	Condition	wait	25:12:502:505	974739	0	True				
ANR	974811	Identifier	wait		974739	0					
ANR	974812	CompoundStatement		21:18:363:363	974739	1					
ANR	974813	ExpressionStatement	* wait = 0	27:12:523:532	974739	0	True				
ANR	974814	AssignmentExpression	* wait = 0		974739	0		=			
ANR	974815	UnaryOperationExpression	* wait		974739	0					
ANR	974816	UnaryOperator	*		974739	0					
ANR	974817	Identifier	wait		974739	1					
ANR	974818	PrimaryExpression	0		974739	1					
ANR	974819	ReturnStatement	return false ;	33:8:556:568	974739	1	True				
ANR	974820	Identifier	false		974739	0					
ANR	974821	ExpressionStatement	slice_time = bs -> slice_end - bs -> slice_start	39:4:584:628	974739	4	True				
ANR	974822	AssignmentExpression	slice_time = bs -> slice_end - bs -> slice_start		974739	0		=			
ANR	974823	Identifier	slice_time		974739	0					
ANR	974824	AdditiveExpression	bs -> slice_end - bs -> slice_start		974739	1		-			
ANR	974825	PtrMemberAccess	bs -> slice_end		974739	0					
ANR	974826	Identifier	bs		974739	0					
ANR	974827	Identifier	slice_end		974739	1					
ANR	974828	PtrMemberAccess	bs -> slice_start		974739	1					
ANR	974829	Identifier	bs		974739	0					
ANR	974830	Identifier	slice_start		974739	1					
ANR	974831	ExpressionStatement	slice_time /= ( NANOSECONDS_PER_SECOND )	41:4:635:673	974739	5	True				
ANR	974832	AssignmentExpression	slice_time /= ( NANOSECONDS_PER_SECOND )		974739	0		/=			
ANR	974833	Identifier	slice_time		974739	0					
ANR	974834	Identifier	NANOSECONDS_PER_SECOND		974739	1					
ANR	974835	ExpressionStatement	bytes_limit = bps_limit * slice_time	43:4:680:716	974739	6	True				
ANR	974836	AssignmentExpression	bytes_limit = bps_limit * slice_time		974739	0		=			
ANR	974837	Identifier	bytes_limit		974739	0					
ANR	974838	MultiplicativeExpression	bps_limit * slice_time		974739	1		*			
ANR	974839	Identifier	bps_limit		974739	0					
ANR	974840	Identifier	slice_time		974739	1					
ANR	974841	ExpressionStatement	bytes_base = bs -> nr_bytes [ is_write ] - bs -> io_base . bytes [ is_write ]	45:4:723:789	974739	7	True				
ANR	974842	AssignmentExpression	bytes_base = bs -> nr_bytes [ is_write ] - bs -> io_base . bytes [ is_write ]		974739	0		=			
ANR	974843	Identifier	bytes_base		974739	0					
ANR	974844	AdditiveExpression	bs -> nr_bytes [ is_write ] - bs -> io_base . bytes [ is_write ]		974739	1		-			
ANR	974845	ArrayIndexing	bs -> nr_bytes [ is_write ]		974739	0					
ANR	974846	PtrMemberAccess	bs -> nr_bytes		974739	0					
ANR	974847	Identifier	bs		974739	0					
ANR	974848	Identifier	nr_bytes		974739	1					
ANR	974849	Identifier	is_write		974739	1					
ANR	974850	ArrayIndexing	bs -> io_base . bytes [ is_write ]		974739	1					
ANR	974851	MemberAccess	bs -> io_base . bytes		974739	0					
ANR	974852	PtrMemberAccess	bs -> io_base		974739	0					
ANR	974853	Identifier	bs		974739	0					
ANR	974854	Identifier	io_base		974739	1					
ANR	974855	Identifier	bytes		974739	1					
ANR	974856	Identifier	is_write		974739	1					
ANR	974857	IfStatement	if ( bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ] )		974739	8					
ANR	974858	Condition	bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]	47:8:800:838	974739	0	True				
ANR	974859	ArrayIndexing	bs -> io_limits . bps [ BLOCK_IO_LIMIT_TOTAL ]		974739	0					
ANR	974860	MemberAccess	bs -> io_limits . bps		974739	0					
ANR	974861	PtrMemberAccess	bs -> io_limits		974739	0					
ANR	974862	Identifier	bs		974739	0					
ANR	974863	Identifier	io_limits		974739	1					
ANR	974864	Identifier	bps		974739	1					
ANR	974865	Identifier	BLOCK_IO_LIMIT_TOTAL		974739	1					
ANR	974866	CompoundStatement		43:49:696:696	974739	1					
ANR	974867	ExpressionStatement	bytes_base += bs -> nr_bytes [ ! is_write ] - bs -> io_base . bytes [ ! is_write ]	49:8:852:920	974739	0	True				
ANR	974868	AssignmentExpression	bytes_base += bs -> nr_bytes [ ! is_write ] - bs -> io_base . bytes [ ! is_write ]		974739	0		+=			
ANR	974869	Identifier	bytes_base		974739	0					
ANR	974870	AdditiveExpression	bs -> nr_bytes [ ! is_write ] - bs -> io_base . bytes [ ! is_write ]		974739	1		-			
ANR	974871	ArrayIndexing	bs -> nr_bytes [ ! is_write ]		974739	0					
ANR	974872	PtrMemberAccess	bs -> nr_bytes		974739	0					
ANR	974873	Identifier	bs		974739	0					
ANR	974874	Identifier	nr_bytes		974739	1					
ANR	974875	UnaryOperationExpression	! is_write		974739	1					
ANR	974876	UnaryOperator	!		974739	0					
ANR	974877	Identifier	is_write		974739	1					
ANR	974878	ArrayIndexing	bs -> io_base . bytes [ ! is_write ]		974739	1					
ANR	974879	MemberAccess	bs -> io_base . bytes		974739	0					
ANR	974880	PtrMemberAccess	bs -> io_base		974739	0					
ANR	974881	Identifier	bs		974739	0					
ANR	974882	Identifier	io_base		974739	1					
ANR	974883	Identifier	bytes		974739	1					
ANR	974884	UnaryOperationExpression	! is_write		974739	1					
ANR	974885	UnaryOperator	!		974739	0					
ANR	974886	Identifier	is_write		974739	1					
ANR	974887	ExpressionStatement	bytes_res = ( unsigned ) nb_sectors * BDRV_SECTOR_SIZE	67:4:1303:1357	974739	9	True				
ANR	974888	AssignmentExpression	bytes_res = ( unsigned ) nb_sectors * BDRV_SECTOR_SIZE		974739	0		=			
ANR	974889	Identifier	bytes_res		974739	0					
ANR	974890	MultiplicativeExpression	( unsigned ) nb_sectors * BDRV_SECTOR_SIZE		974739	1		*			
ANR	974891	CastExpression	( unsigned ) nb_sectors		974739	0					
ANR	974892	CastTarget	unsigned		974739	0					
ANR	974893	Identifier	nb_sectors		974739	1					
ANR	974894	Identifier	BDRV_SECTOR_SIZE		974739	1					
ANR	974895	IfStatement	if ( bytes_base + bytes_res <= bytes_limit )		974739	10					
ANR	974896	Condition	bytes_base + bytes_res <= bytes_limit	71:8:1370:1406	974739	0	True				
ANR	974897	RelationalExpression	bytes_base + bytes_res <= bytes_limit		974739	0		<=			
ANR	974898	AdditiveExpression	bytes_base + bytes_res		974739	0		+			
ANR	974899	Identifier	bytes_base		974739	0					
ANR	974900	Identifier	bytes_res		974739	1					
ANR	974901	Identifier	bytes_limit		974739	1					
ANR	974902	CompoundStatement		67:47:1264:1264	974739	1					
ANR	974903	IfStatement	if ( wait )		974739	0					
ANR	974904	Condition	wait	73:12:1424:1427	974739	0	True				
ANR	974905	Identifier	wait		974739	0					
ANR	974906	CompoundStatement		69:18:1285:1285	974739	1					
ANR	974907	ExpressionStatement	* wait = 0	75:12:1445:1454	974739	0	True				
ANR	974908	AssignmentExpression	* wait = 0		974739	0		=			
ANR	974909	UnaryOperationExpression	* wait		974739	0					
ANR	974910	UnaryOperator	*		974739	0					
ANR	974911	Identifier	wait		974739	1					
ANR	974912	PrimaryExpression	0		974739	1					
ANR	974913	ReturnStatement	return false ;	81:8:1478:1490	974739	1	True				
ANR	974914	Identifier	false		974739	0					
ANR	974915	ExpressionStatement	wait_time = ( bytes_base + bytes_res ) / bps_limit - elapsed_time	89:4:1546:1609	974739	11	True				
ANR	974916	AssignmentExpression	wait_time = ( bytes_base + bytes_res ) / bps_limit - elapsed_time		974739	0		=			
ANR	974917	Identifier	wait_time		974739	0					
ANR	974918	AdditiveExpression	( bytes_base + bytes_res ) / bps_limit - elapsed_time		974739	1		-			
ANR	974919	MultiplicativeExpression	( bytes_base + bytes_res ) / bps_limit		974739	0		/			
ANR	974920	AdditiveExpression	bytes_base + bytes_res		974739	0		+			
ANR	974921	Identifier	bytes_base		974739	0					
ANR	974922	Identifier	bytes_res		974739	1					
ANR	974923	Identifier	bps_limit		974739	1					
ANR	974924	Identifier	elapsed_time		974739	1					
ANR	974925	ExpressionStatement	bs -> slice_time = wait_time * BLOCK_IO_SLICE_TIME * 10	103:4:1881:1934	974739	12	True				
ANR	974926	AssignmentExpression	bs -> slice_time = wait_time * BLOCK_IO_SLICE_TIME * 10		974739	0		=			
ANR	974927	PtrMemberAccess	bs -> slice_time		974739	0					
ANR	974928	Identifier	bs		974739	0					
ANR	974929	Identifier	slice_time		974739	1					
ANR	974930	MultiplicativeExpression	wait_time * BLOCK_IO_SLICE_TIME * 10		974739	1		*			
ANR	974931	Identifier	wait_time		974739	0					
ANR	974932	MultiplicativeExpression	BLOCK_IO_SLICE_TIME * 10		974739	1		*			
ANR	974933	Identifier	BLOCK_IO_SLICE_TIME		974739	0					
ANR	974934	PrimaryExpression	10		974739	1					
ANR	974935	ExpressionStatement	bs -> slice_end += bs -> slice_time - 3 * BLOCK_IO_SLICE_TIME	105:4:1941:1998	974739	13	True				
ANR	974936	AssignmentExpression	bs -> slice_end += bs -> slice_time - 3 * BLOCK_IO_SLICE_TIME		974739	0		+=			
ANR	974937	PtrMemberAccess	bs -> slice_end		974739	0					
ANR	974938	Identifier	bs		974739	0					
ANR	974939	Identifier	slice_end		974739	1					
ANR	974940	AdditiveExpression	bs -> slice_time - 3 * BLOCK_IO_SLICE_TIME		974739	1		-			
ANR	974941	PtrMemberAccess	bs -> slice_time		974739	0					
ANR	974942	Identifier	bs		974739	0					
ANR	974943	Identifier	slice_time		974739	1					
ANR	974944	MultiplicativeExpression	3 * BLOCK_IO_SLICE_TIME		974739	1		*			
ANR	974945	PrimaryExpression	3		974739	0					
ANR	974946	Identifier	BLOCK_IO_SLICE_TIME		974739	1					
ANR	974947	IfStatement	if ( wait )		974739	14					
ANR	974948	Condition	wait	107:8:2009:2012	974739	0	True				
ANR	974949	Identifier	wait		974739	0					
ANR	974950	CompoundStatement		103:14:1870:1870	974739	1					
ANR	974951	ExpressionStatement	* wait = wait_time * BLOCK_IO_SLICE_TIME * 10	109:8:2026:2070	974739	0	True				
ANR	974952	AssignmentExpression	* wait = wait_time * BLOCK_IO_SLICE_TIME * 10		974739	0		=			
ANR	974953	UnaryOperationExpression	* wait		974739	0					
ANR	974954	UnaryOperator	*		974739	0					
ANR	974955	Identifier	wait		974739	1					
ANR	974956	MultiplicativeExpression	wait_time * BLOCK_IO_SLICE_TIME * 10		974739	1		*			
ANR	974957	Identifier	wait_time		974739	0					
ANR	974958	MultiplicativeExpression	BLOCK_IO_SLICE_TIME * 10		974739	1		*			
ANR	974959	Identifier	BLOCK_IO_SLICE_TIME		974739	0					
ANR	974960	PrimaryExpression	10		974739	1					
ANR	974961	ReturnStatement	return true ;	115:4:2086:2097	974739	15	True				
ANR	974962	Identifier	true		974739	0					
ANR	974963	ReturnType	static bool		974739	1					
ANR	974964	Identifier	bdrv_exceed_bps_limits		974739	2					
ANR	974965	ParameterList	"BlockDriverState * bs , int nb_sectors , bool is_write , double elapsed_time , uint64_t * wait"		974739	3					
ANR	974966	Parameter	BlockDriverState * bs	1:35:35:54	974739	0	True				
ANR	974967	ParameterType	BlockDriverState *		974739	0					
ANR	974968	Identifier	bs		974739	1					
ANR	974969	Parameter	int nb_sectors	1:57:57:70	974739	1	True				
ANR	974970	ParameterType	int		974739	0					
ANR	974971	Identifier	nb_sectors		974739	1					
ANR	974972	Parameter	bool is_write	3:17:91:103	974739	2	True				
ANR	974973	ParameterType	bool		974739	0					
ANR	974974	Identifier	is_write		974739	1					
ANR	974975	Parameter	double elapsed_time	3:32:106:124	974739	3	True				
ANR	974976	ParameterType	double		974739	0					
ANR	974977	Identifier	elapsed_time		974739	1					
ANR	974978	Parameter	uint64_t * wait	3:53:127:140	974739	4	True				
ANR	974979	ParameterType	uint64_t *		974739	0					
ANR	974980	Identifier	wait		974739	1					
ANR	974981	CFGEntryNode	ENTRY		974739		True				
ANR	974982	CFGExitNode	EXIT		974739		True				
ANR	974983	Symbol	* is_write		974739						
ANR	974984	Symbol	nb_sectors		974739						
ANR	974985	Symbol	wait		974739						
ANR	974986	Symbol	bytes_res		974739						
ANR	974987	Symbol	bps_limit		974739						
ANR	974988	Symbol	NANOSECONDS_PER_SECOND		974739						
ANR	974989	Symbol	* BLOCK_IO_LIMIT_TOTAL		974739						
ANR	974990	Symbol	bs -> slice_time		974739						
ANR	974991	Symbol	* bs -> io_limits		974739						
ANR	974992	Symbol	* wait		974739						
ANR	974993	Symbol	bs -> slice_end		974739						
ANR	974994	Symbol	bs		974739						
ANR	974995	Symbol	slice_time		974739						
ANR	974996	Symbol	BLOCK_IO_SLICE_TIME		974739						
ANR	974997	Symbol	* bs		974739						
ANR	974998	Symbol	elapsed_time		974739						
ANR	974999	Symbol	bytes_base		974739						
ANR	975000	Symbol	* bs -> io_limits . bps		974739						
ANR	975001	Symbol	bs -> io_base . bytes		974739						
ANR	975002	Symbol	BLOCK_IO_LIMIT_TOTAL		974739						
ANR	975003	Symbol	wait_time		974739						
ANR	975004	Symbol	bs -> io_base		974739						
ANR	975005	Symbol	bs -> io_limits		974739						
ANR	975006	Symbol	false		974739						
ANR	975007	Symbol	is_write		974739						
ANR	975008	Symbol	bytes_limit		974739						
ANR	975009	Symbol	* bs -> io_base		974739						
ANR	975010	Symbol	bs -> nr_bytes		974739						
ANR	975011	Symbol	* bs -> io_base . bytes		974739						
ANR	975012	Symbol	BDRV_SECTOR_SIZE		974739						
ANR	975013	Symbol	bs -> slice_start		974739						
ANR	975014	Symbol	true		974739						
ANR	975015	Symbol	* bs -> nr_bytes		974739						
ANR	975016	Symbol	bs -> io_limits . bps		974739						
ANR	975017	Symbol	* * bs		974739						
