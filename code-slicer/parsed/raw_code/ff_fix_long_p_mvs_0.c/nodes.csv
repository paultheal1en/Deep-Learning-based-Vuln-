command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3276068	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_fix_long_p_mvs_0.c								
ANR	3276069	Function	ff_fix_long_p_mvs	1:0:0:2142							
ANR	3276070	FunctionDef	ff_fix_long_p_mvs (MpegEncContext * s)		3276069	0					
ANR	3276071	CompoundStatement		3:0:44:2142	3276069	0					
ANR	3276072	IdentifierDeclStatement	const int f_code = s -> f_code ;	5:4:51:78	3276069	0	True				
ANR	3276073	IdentifierDecl	f_code = s -> f_code		3276069	0					
ANR	3276074	IdentifierDeclType	const int		3276069	0					
ANR	3276075	Identifier	f_code		3276069	1					
ANR	3276076	AssignmentExpression	f_code = s -> f_code		3276069	2		=			
ANR	3276077	Identifier	f_code		3276069	0					
ANR	3276078	PtrMemberAccess	s -> f_code		3276069	1					
ANR	3276079	Identifier	s		3276069	0					
ANR	3276080	Identifier	f_code		3276069	1					
ANR	3276081	IdentifierDeclStatement	int y ;	7:4:85:90	3276069	1	True				
ANR	3276082	IdentifierDecl	y		3276069	0					
ANR	3276083	IdentifierDeclType	int		3276069	0					
ANR	3276084	Identifier	y		3276069	1					
ANR	3276085	IdentifierDeclStatement	UINT8 * fcode_tab = s -> fcode_tab ;	9:4:97:128	3276069	2	True				
ANR	3276086	IdentifierDecl	* fcode_tab = s -> fcode_tab		3276069	0					
ANR	3276087	IdentifierDeclType	UINT8 *		3276069	0					
ANR	3276088	Identifier	fcode_tab		3276069	1					
ANR	3276089	AssignmentExpression	* fcode_tab = s -> fcode_tab		3276069	2		=			
ANR	3276090	Identifier	fcode_tab		3276069	0					
ANR	3276091	PtrMemberAccess	s -> fcode_tab		3276069	1					
ANR	3276092	Identifier	s		3276069	0					
ANR	3276093	Identifier	fcode_tab		3276069	1					
ANR	3276094	ForStatement	for ( y = 0 ; y < s -> mb_height ; y ++ )		3276069	3					
ANR	3276095	ForInit	y = 0 ;	15:8:191:194	3276069	0	True				
ANR	3276096	AssignmentExpression	y = 0		3276069	0		=			
ANR	3276097	Identifier	y		3276069	0					
ANR	3276098	PrimaryExpression	0		3276069	1					
ANR	3276099	Condition	y < s -> mb_height	15:13:196:209	3276069	1	True				
ANR	3276100	RelationalExpression	y < s -> mb_height		3276069	0		<			
ANR	3276101	Identifier	y		3276069	0					
ANR	3276102	PtrMemberAccess	s -> mb_height		3276069	1					
ANR	3276103	Identifier	s		3276069	0					
ANR	3276104	Identifier	mb_height		3276069	1					
ANR	3276105	PostIncDecOperationExpression	y ++	15:29:212:214	3276069	2	True				
ANR	3276106	Identifier	y		3276069	0					
ANR	3276107	IncDec	++		3276069	1					
ANR	3276108	CompoundStatement		19:8:241:261	3276069	3					
ANR	3276109	IdentifierDeclStatement	int x ;	17:8:227:232	3276069	0	True				
ANR	3276110	IdentifierDecl	x		3276069	0					
ANR	3276111	IdentifierDeclType	int		3276069	0					
ANR	3276112	Identifier	x		3276069	1					
ANR	3276113	IdentifierDeclStatement	int xy = ( y + 1 ) * ( s -> mb_width + 2 ) + 1 ;	19:8:243:275	3276069	1	True				
ANR	3276114	IdentifierDecl	xy = ( y + 1 ) * ( s -> mb_width + 2 ) + 1		3276069	0					
ANR	3276115	IdentifierDeclType	int		3276069	0					
ANR	3276116	Identifier	xy		3276069	1					
ANR	3276117	AssignmentExpression	xy = ( y + 1 ) * ( s -> mb_width + 2 ) + 1		3276069	2		=			
ANR	3276118	Identifier	xy		3276069	0					
ANR	3276119	AdditiveExpression	( y + 1 ) * ( s -> mb_width + 2 ) + 1		3276069	1		+			
ANR	3276120	MultiplicativeExpression	( y + 1 ) * ( s -> mb_width + 2 )		3276069	0		*			
ANR	3276121	AdditiveExpression	y + 1		3276069	0		+			
ANR	3276122	Identifier	y		3276069	0					
ANR	3276123	PrimaryExpression	1		3276069	1					
ANR	3276124	AdditiveExpression	s -> mb_width + 2		3276069	1		+			
ANR	3276125	PtrMemberAccess	s -> mb_width		3276069	0					
ANR	3276126	Identifier	s		3276069	0					
ANR	3276127	Identifier	mb_width		3276069	1					
ANR	3276128	PrimaryExpression	2		3276069	1					
ANR	3276129	PrimaryExpression	1		3276069	1					
ANR	3276130	IdentifierDeclStatement	int i = y * s -> mb_width ;	21:8:286:306	3276069	2	True				
ANR	3276131	IdentifierDecl	i = y * s -> mb_width		3276069	0					
ANR	3276132	IdentifierDeclType	int		3276069	0					
ANR	3276133	Identifier	i		3276069	1					
ANR	3276134	AssignmentExpression	i = y * s -> mb_width		3276069	2		=			
ANR	3276135	Identifier	i		3276069	0					
ANR	3276136	MultiplicativeExpression	y * s -> mb_width		3276069	1		*			
ANR	3276137	Identifier	y		3276069	0					
ANR	3276138	PtrMemberAccess	s -> mb_width		3276069	1					
ANR	3276139	Identifier	s		3276069	0					
ANR	3276140	Identifier	mb_width		3276069	1					
ANR	3276141	ForStatement	for ( x = 0 ; x < s -> mb_width ; x ++ )		3276069	3					
ANR	3276142	ForInit	x = 0 ;	23:12:321:324	3276069	0	True				
ANR	3276143	AssignmentExpression	x = 0		3276069	0		=			
ANR	3276144	Identifier	x		3276069	0					
ANR	3276145	PrimaryExpression	0		3276069	1					
ANR	3276146	Condition	x < s -> mb_width	23:17:326:338	3276069	1	True				
ANR	3276147	RelationalExpression	x < s -> mb_width		3276069	0		<			
ANR	3276148	Identifier	x		3276069	0					
ANR	3276149	PtrMemberAccess	s -> mb_width		3276069	1					
ANR	3276150	Identifier	s		3276069	0					
ANR	3276151	Identifier	mb_width		3276069	1					
ANR	3276152	PostIncDecOperationExpression	x ++	23:32:341:343	3276069	2	True				
ANR	3276153	Identifier	x		3276069	0					
ANR	3276154	IncDec	++		3276069	1					
ANR	3276155	CompoundStatement		21:36:300:300	3276069	3					
ANR	3276156	IfStatement	if ( s -> mb_type [ i ] & MB_TYPE_INTER )		3276069	0					
ANR	3276157	Condition	s -> mb_type [ i ] & MB_TYPE_INTER	25:15:363:389	3276069	0	True				
ANR	3276158	BitAndExpression	s -> mb_type [ i ] & MB_TYPE_INTER		3276069	0		&			
ANR	3276159	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276160	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276161	Identifier	s		3276069	0					
ANR	3276162	Identifier	mb_type		3276069	1					
ANR	3276163	Identifier	i		3276069	1					
ANR	3276164	Identifier	MB_TYPE_INTER		3276069	1					
ANR	3276165	CompoundStatement		23:43:346:346	3276069	1					
ANR	3276166	IfStatement	if ( fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] == 0 || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0 )		3276069	0					
ANR	3276167	Condition	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] == 0 || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0	27:22:416:675	3276069	0	True				
ANR	3276168	OrExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] == 0 || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0		3276069	0		||			
ANR	3276169	RelationalExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] > f_code		3276069	0		>			
ANR	3276170	ArrayIndexing	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ]		3276069	0					
ANR	3276171	Identifier	fcode_tab		3276069	0					
ANR	3276172	AdditiveExpression	s -> p_mv_table [ xy ] [ 0 ] + MAX_MV		3276069	1		+			
ANR	3276173	ArrayIndexing	s -> p_mv_table [ xy ] [ 0 ]		3276069	0					
ANR	3276174	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276175	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276176	Identifier	s		3276069	0					
ANR	3276177	Identifier	p_mv_table		3276069	1					
ANR	3276178	Identifier	xy		3276069	1					
ANR	3276179	PrimaryExpression	0		3276069	1					
ANR	3276180	Identifier	MAX_MV		3276069	1					
ANR	3276181	Identifier	f_code		3276069	1					
ANR	3276182	OrExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] == 0 || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0		3276069	1		||			
ANR	3276183	EqualityExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ] == 0		3276069	0		==			
ANR	3276184	ArrayIndexing	fcode_tab [ s -> p_mv_table [ xy ] [ 0 ] + MAX_MV ]		3276069	0					
ANR	3276185	Identifier	fcode_tab		3276069	0					
ANR	3276186	AdditiveExpression	s -> p_mv_table [ xy ] [ 0 ] + MAX_MV		3276069	1		+			
ANR	3276187	ArrayIndexing	s -> p_mv_table [ xy ] [ 0 ]		3276069	0					
ANR	3276188	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276189	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276190	Identifier	s		3276069	0					
ANR	3276191	Identifier	p_mv_table		3276069	1					
ANR	3276192	Identifier	xy		3276069	1					
ANR	3276193	PrimaryExpression	0		3276069	1					
ANR	3276194	Identifier	MAX_MV		3276069	1					
ANR	3276195	PrimaryExpression	0		3276069	1					
ANR	3276196	OrExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code || fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0		3276069	1		||			
ANR	3276197	RelationalExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] > f_code		3276069	0		>			
ANR	3276198	ArrayIndexing	fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ]		3276069	0					
ANR	3276199	Identifier	fcode_tab		3276069	0					
ANR	3276200	AdditiveExpression	s -> p_mv_table [ xy ] [ 1 ] + MAX_MV		3276069	1		+			
ANR	3276201	ArrayIndexing	s -> p_mv_table [ xy ] [ 1 ]		3276069	0					
ANR	3276202	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276203	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276204	Identifier	s		3276069	0					
ANR	3276205	Identifier	p_mv_table		3276069	1					
ANR	3276206	Identifier	xy		3276069	1					
ANR	3276207	PrimaryExpression	1		3276069	1					
ANR	3276208	Identifier	MAX_MV		3276069	1					
ANR	3276209	Identifier	f_code		3276069	1					
ANR	3276210	EqualityExpression	fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ] == 0		3276069	1		==			
ANR	3276211	ArrayIndexing	fcode_tab [ s -> p_mv_table [ xy ] [ 1 ] + MAX_MV ]		3276069	0					
ANR	3276212	Identifier	fcode_tab		3276069	0					
ANR	3276213	AdditiveExpression	s -> p_mv_table [ xy ] [ 1 ] + MAX_MV		3276069	1		+			
ANR	3276214	ArrayIndexing	s -> p_mv_table [ xy ] [ 1 ]		3276069	0					
ANR	3276215	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276216	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276217	Identifier	s		3276069	0					
ANR	3276218	Identifier	p_mv_table		3276069	1					
ANR	3276219	Identifier	xy		3276069	1					
ANR	3276220	PrimaryExpression	1		3276069	1					
ANR	3276221	Identifier	MAX_MV		3276069	1					
ANR	3276222	PrimaryExpression	0		3276069	1					
ANR	3276223	CompoundStatement		31:69:633:633	3276069	1					
ANR	3276224	ExpressionStatement	s -> mb_type [ i ] &= ~MB_TYPE_INTER	35:20:701:732	3276069	0	True				
ANR	3276225	AssignmentExpression	s -> mb_type [ i ] &= ~MB_TYPE_INTER		3276069	0		&=			
ANR	3276226	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276227	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276228	Identifier	s		3276069	0					
ANR	3276229	Identifier	mb_type		3276069	1					
ANR	3276230	Identifier	i		3276069	1					
ANR	3276231	Identifier	~MB_TYPE_INTER		3276069	1					
ANR	3276232	ExpressionStatement	s -> mb_type [ i ] |= MB_TYPE_INTRA	37:20:755:785	3276069	1	True				
ANR	3276233	AssignmentExpression	s -> mb_type [ i ] |= MB_TYPE_INTRA		3276069	0		|=			
ANR	3276234	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276235	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276236	Identifier	s		3276069	0					
ANR	3276237	Identifier	mb_type		3276069	1					
ANR	3276238	Identifier	i		3276069	1					
ANR	3276239	Identifier	MB_TYPE_INTRA		3276069	1					
ANR	3276240	ExpressionStatement	s -> p_mv_table [ xy ] [ 0 ] = 0	39:20:808:832	3276069	2	True				
ANR	3276241	AssignmentExpression	s -> p_mv_table [ xy ] [ 0 ] = 0		3276069	0		=			
ANR	3276242	ArrayIndexing	s -> p_mv_table [ xy ] [ 0 ]		3276069	0					
ANR	3276243	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276244	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276245	Identifier	s		3276069	0					
ANR	3276246	Identifier	p_mv_table		3276069	1					
ANR	3276247	Identifier	xy		3276069	1					
ANR	3276248	PrimaryExpression	0		3276069	1					
ANR	3276249	PrimaryExpression	0		3276069	1					
ANR	3276250	ExpressionStatement	s -> p_mv_table [ xy ] [ 1 ] = 0	41:20:855:879	3276069	3	True				
ANR	3276251	AssignmentExpression	s -> p_mv_table [ xy ] [ 1 ] = 0		3276069	0		=			
ANR	3276252	ArrayIndexing	s -> p_mv_table [ xy ] [ 1 ]		3276069	0					
ANR	3276253	ArrayIndexing	s -> p_mv_table [ xy ]		3276069	0					
ANR	3276254	PtrMemberAccess	s -> p_mv_table		3276069	0					
ANR	3276255	Identifier	s		3276069	0					
ANR	3276256	Identifier	p_mv_table		3276069	1					
ANR	3276257	Identifier	xy		3276069	1					
ANR	3276258	PrimaryExpression	1		3276069	1					
ANR	3276259	PrimaryExpression	0		3276069	1					
ANR	3276260	ExpressionStatement	xy ++	47:12:928:932	3276069	1	True				
ANR	3276261	PostIncDecOperationExpression	xy ++		3276069	0					
ANR	3276262	Identifier	xy		3276069	0					
ANR	3276263	IncDec	++		3276069	1					
ANR	3276264	ExpressionStatement	i ++	49:12:947:950	3276069	2	True				
ANR	3276265	PostIncDecOperationExpression	i ++		3276069	0					
ANR	3276266	Identifier	i		3276069	0					
ANR	3276267	IncDec	++		3276069	1					
ANR	3276268	IfStatement	if ( s -> flags & CODEC_FLAG_4MV )		3276069	4					
ANR	3276269	Condition	s -> flags & CODEC_FLAG_4MV	57:7:980:1002	3276069	0	True				
ANR	3276270	BitAndExpression	s -> flags & CODEC_FLAG_4MV		3276069	0		&			
ANR	3276271	PtrMemberAccess	s -> flags		3276069	0					
ANR	3276272	Identifier	s		3276069	0					
ANR	3276273	Identifier	flags		3276069	1					
ANR	3276274	Identifier	CODEC_FLAG_4MV		3276069	1					
ANR	3276275	CompoundStatement		57:8:970:1002	3276069	1					
ANR	3276276	IdentifierDeclStatement	const int wrap = 2 + s -> mb_width * 2 ;	59:8:1015:1047	3276069	0	True				
ANR	3276277	IdentifierDecl	wrap = 2 + s -> mb_width * 2		3276069	0					
ANR	3276278	IdentifierDeclType	const int		3276069	0					
ANR	3276279	Identifier	wrap		3276069	1					
ANR	3276280	AssignmentExpression	wrap = 2 + s -> mb_width * 2		3276069	2		=			
ANR	3276281	Identifier	wrap		3276069	0					
ANR	3276282	AdditiveExpression	2 + s -> mb_width * 2		3276069	1		+			
ANR	3276283	PrimaryExpression	2		3276069	0					
ANR	3276284	MultiplicativeExpression	s -> mb_width * 2		3276069	1		*			
ANR	3276285	PtrMemberAccess	s -> mb_width		3276069	0					
ANR	3276286	Identifier	s		3276069	0					
ANR	3276287	Identifier	mb_width		3276069	1					
ANR	3276288	PrimaryExpression	2		3276069	1					
ANR	3276289	ForStatement	for ( y = 0 ; y < s -> mb_height ; y ++ )		3276069	1					
ANR	3276290	ForInit	y = 0 ;	65:12:1116:1119	3276069	0	True				
ANR	3276291	AssignmentExpression	y = 0		3276069	0		=			
ANR	3276292	Identifier	y		3276069	0					
ANR	3276293	PrimaryExpression	0		3276069	1					
ANR	3276294	Condition	y < s -> mb_height	65:17:1121:1134	3276069	1	True				
ANR	3276295	RelationalExpression	y < s -> mb_height		3276069	0		<			
ANR	3276296	Identifier	y		3276069	0					
ANR	3276297	PtrMemberAccess	s -> mb_height		3276069	1					
ANR	3276298	Identifier	s		3276069	0					
ANR	3276299	Identifier	mb_height		3276069	1					
ANR	3276300	PostIncDecOperationExpression	y ++	65:33:1137:1139	3276069	2	True				
ANR	3276301	Identifier	y		3276069	0					
ANR	3276302	IncDec	++		3276069	1					
ANR	3276303	CompoundStatement		69:12:1187:1192	3276069	3					
ANR	3276304	IdentifierDeclStatement	int xy = ( y * 2 + 1 ) * wrap + 1 ;	67:12:1156:1182	3276069	0	True				
ANR	3276305	IdentifierDecl	xy = ( y * 2 + 1 ) * wrap + 1		3276069	0					
ANR	3276306	IdentifierDeclType	int		3276069	0					
ANR	3276307	Identifier	xy		3276069	1					
ANR	3276308	AssignmentExpression	xy = ( y * 2 + 1 ) * wrap + 1		3276069	2		=			
ANR	3276309	Identifier	xy		3276069	0					
ANR	3276310	AdditiveExpression	( y * 2 + 1 ) * wrap + 1		3276069	1		+			
ANR	3276311	MultiplicativeExpression	( y * 2 + 1 ) * wrap		3276069	0		*			
ANR	3276312	AdditiveExpression	y * 2 + 1		3276069	0		+			
ANR	3276313	MultiplicativeExpression	y * 2		3276069	0		*			
ANR	3276314	Identifier	y		3276069	0					
ANR	3276315	PrimaryExpression	2		3276069	1					
ANR	3276316	PrimaryExpression	1		3276069	1					
ANR	3276317	Identifier	wrap		3276069	1					
ANR	3276318	PrimaryExpression	1		3276069	1					
ANR	3276319	IdentifierDeclStatement	int i = y * s -> mb_width ;	69:12:1197:1217	3276069	1	True				
ANR	3276320	IdentifierDecl	i = y * s -> mb_width		3276069	0					
ANR	3276321	IdentifierDeclType	int		3276069	0					
ANR	3276322	Identifier	i		3276069	1					
ANR	3276323	AssignmentExpression	i = y * s -> mb_width		3276069	2		=			
ANR	3276324	Identifier	i		3276069	0					
ANR	3276325	MultiplicativeExpression	y * s -> mb_width		3276069	1		*			
ANR	3276326	Identifier	y		3276069	0					
ANR	3276327	PtrMemberAccess	s -> mb_width		3276069	1					
ANR	3276328	Identifier	s		3276069	0					
ANR	3276329	Identifier	mb_width		3276069	1					
ANR	3276330	IdentifierDeclStatement	int x ;	71:12:1232:1237	3276069	2	True				
ANR	3276331	IdentifierDecl	x		3276069	0					
ANR	3276332	IdentifierDeclType	int		3276069	0					
ANR	3276333	Identifier	x		3276069	1					
ANR	3276334	ForStatement	for ( x = 0 ; x < s -> mb_width ; x ++ )		3276069	3					
ANR	3276335	ForInit	x = 0 ;	75:16:1258:1261	3276069	0	True				
ANR	3276336	AssignmentExpression	x = 0		3276069	0		=			
ANR	3276337	Identifier	x		3276069	0					
ANR	3276338	PrimaryExpression	0		3276069	1					
ANR	3276339	Condition	x < s -> mb_width	75:21:1263:1275	3276069	1	True				
ANR	3276340	RelationalExpression	x < s -> mb_width		3276069	0		<			
ANR	3276341	Identifier	x		3276069	0					
ANR	3276342	PtrMemberAccess	s -> mb_width		3276069	1					
ANR	3276343	Identifier	s		3276069	0					
ANR	3276344	Identifier	mb_width		3276069	1					
ANR	3276345	PostIncDecOperationExpression	x ++	75:36:1278:1280	3276069	2	True				
ANR	3276346	Identifier	x		3276069	0					
ANR	3276347	IncDec	++		3276069	1					
ANR	3276348	CompoundStatement		73:40:1237:1237	3276069	3					
ANR	3276349	IfStatement	if ( s -> mb_type [ i ] & MB_TYPE_INTER4V )		3276069	0					
ANR	3276350	Condition	s -> mb_type [ i ] & MB_TYPE_INTER4V	77:19:1304:1332	3276069	0	True				
ANR	3276351	BitAndExpression	s -> mb_type [ i ] & MB_TYPE_INTER4V		3276069	0		&			
ANR	3276352	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276353	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276354	Identifier	s		3276069	0					
ANR	3276355	Identifier	mb_type		3276069	1					
ANR	3276356	Identifier	i		3276069	1					
ANR	3276357	Identifier	MB_TYPE_INTER4V		3276069	1					
ANR	3276358	CompoundStatement		77:20:1312:1321	3276069	1					
ANR	3276359	IdentifierDeclStatement	int block ;	79:20:1357:1366	3276069	0	True				
ANR	3276360	IdentifierDecl	block		3276069	0					
ANR	3276361	IdentifierDeclType	int		3276069	0					
ANR	3276362	Identifier	block		3276069	1					
ANR	3276363	ForStatement	for ( block = 0 ; block < 4 ; block ++ )		3276069	1					
ANR	3276364	ForInit	block = 0 ;	81:24:1393:1400	3276069	0	True				
ANR	3276365	AssignmentExpression	block = 0		3276069	0		=			
ANR	3276366	Identifier	block		3276069	0					
ANR	3276367	PrimaryExpression	0		3276069	1					
ANR	3276368	Condition	block < 4	81:33:1402:1408	3276069	1	True				
ANR	3276369	RelationalExpression	block < 4		3276069	0		<			
ANR	3276370	Identifier	block		3276069	0					
ANR	3276371	PrimaryExpression	4		3276069	1					
ANR	3276372	PostIncDecOperationExpression	block ++	81:42:1411:1417	3276069	2	True				
ANR	3276373	Identifier	block		3276069	0					
ANR	3276374	IncDec	++		3276069	1					
ANR	3276375	CompoundStatement		85:24:1528:1564	3276069	3					
ANR	3276376	IdentifierDeclStatement	int off = ( block & 1 ) + ( block >> 1 ) * wrap ;	83:24:1446:1483	3276069	0	True				
ANR	3276377	IdentifierDecl	off = ( block & 1 ) + ( block >> 1 ) * wrap		3276069	0					
ANR	3276378	IdentifierDeclType	int		3276069	0					
ANR	3276379	Identifier	off		3276069	1					
ANR	3276380	AssignmentExpression	off = ( block & 1 ) + ( block >> 1 ) * wrap		3276069	2		=			
ANR	3276381	Identifier	off		3276069	0					
ANR	3276382	AdditiveExpression	( block & 1 ) + ( block >> 1 ) * wrap		3276069	1		+			
ANR	3276383	BitAndExpression	block & 1		3276069	0		&			
ANR	3276384	Identifier	block		3276069	0					
ANR	3276385	PrimaryExpression	1		3276069	1					
ANR	3276386	MultiplicativeExpression	( block >> 1 ) * wrap		3276069	1		*			
ANR	3276387	ShiftExpression	block >> 1		3276069	0		>>			
ANR	3276388	Identifier	block		3276069	0					
ANR	3276389	PrimaryExpression	1		3276069	1					
ANR	3276390	Identifier	wrap		3276069	1					
ANR	3276391	IdentifierDeclStatement	int mx = s -> motion_val [ xy + off ] [ 0 ] ;	85:24:1510:1546	3276069	1	True				
ANR	3276392	IdentifierDecl	mx = s -> motion_val [ xy + off ] [ 0 ]		3276069	0					
ANR	3276393	IdentifierDeclType	int		3276069	0					
ANR	3276394	Identifier	mx		3276069	1					
ANR	3276395	AssignmentExpression	mx = s -> motion_val [ xy + off ] [ 0 ]		3276069	2		=			
ANR	3276396	Identifier	mx		3276069	0					
ANR	3276397	ArrayIndexing	s -> motion_val [ xy + off ] [ 0 ]		3276069	1					
ANR	3276398	ArrayIndexing	s -> motion_val [ xy + off ]		3276069	0					
ANR	3276399	PtrMemberAccess	s -> motion_val		3276069	0					
ANR	3276400	Identifier	s		3276069	0					
ANR	3276401	Identifier	motion_val		3276069	1					
ANR	3276402	AdditiveExpression	xy + off		3276069	1		+			
ANR	3276403	Identifier	xy		3276069	0					
ANR	3276404	Identifier	off		3276069	1					
ANR	3276405	PrimaryExpression	0		3276069	1					
ANR	3276406	IdentifierDeclStatement	int my = s -> motion_val [ xy + off ] [ 1 ] ;	87:24:1573:1609	3276069	2	True				
ANR	3276407	IdentifierDecl	my = s -> motion_val [ xy + off ] [ 1 ]		3276069	0					
ANR	3276408	IdentifierDeclType	int		3276069	0					
ANR	3276409	Identifier	my		3276069	1					
ANR	3276410	AssignmentExpression	my = s -> motion_val [ xy + off ] [ 1 ]		3276069	2		=			
ANR	3276411	Identifier	my		3276069	0					
ANR	3276412	ArrayIndexing	s -> motion_val [ xy + off ] [ 1 ]		3276069	1					
ANR	3276413	ArrayIndexing	s -> motion_val [ xy + off ]		3276069	0					
ANR	3276414	PtrMemberAccess	s -> motion_val		3276069	0					
ANR	3276415	Identifier	s		3276069	0					
ANR	3276416	Identifier	motion_val		3276069	1					
ANR	3276417	AdditiveExpression	xy + off		3276069	1		+			
ANR	3276418	Identifier	xy		3276069	0					
ANR	3276419	Identifier	off		3276069	1					
ANR	3276420	PrimaryExpression	1		3276069	1					
ANR	3276421	IfStatement	if ( fcode_tab [ mx + MAX_MV ] > f_code || fcode_tab [ mx + MAX_MV ] == 0 || fcode_tab [ my + MAX_MV ] > f_code || fcode_tab [ my + MAX_MV ] == 0 )		3276069	3					
ANR	3276422	Condition	fcode_tab [ mx + MAX_MV ] > f_code || fcode_tab [ mx + MAX_MV ] == 0 || fcode_tab [ my + MAX_MV ] > f_code || fcode_tab [ my + MAX_MV ] == 0	91:30:1644:1855	3276069	0	True				
ANR	3276423	OrExpression	fcode_tab [ mx + MAX_MV ] > f_code || fcode_tab [ mx + MAX_MV ] == 0 || fcode_tab [ my + MAX_MV ] > f_code || fcode_tab [ my + MAX_MV ] == 0		3276069	0		||			
ANR	3276424	RelationalExpression	fcode_tab [ mx + MAX_MV ] > f_code		3276069	0		>			
ANR	3276425	ArrayIndexing	fcode_tab [ mx + MAX_MV ]		3276069	0					
ANR	3276426	Identifier	fcode_tab		3276069	0					
ANR	3276427	AdditiveExpression	mx + MAX_MV		3276069	1		+			
ANR	3276428	Identifier	mx		3276069	0					
ANR	3276429	Identifier	MAX_MV		3276069	1					
ANR	3276430	Identifier	f_code		3276069	1					
ANR	3276431	OrExpression	fcode_tab [ mx + MAX_MV ] == 0 || fcode_tab [ my + MAX_MV ] > f_code || fcode_tab [ my + MAX_MV ] == 0		3276069	1		||			
ANR	3276432	EqualityExpression	fcode_tab [ mx + MAX_MV ] == 0		3276069	0		==			
ANR	3276433	ArrayIndexing	fcode_tab [ mx + MAX_MV ]		3276069	0					
ANR	3276434	Identifier	fcode_tab		3276069	0					
ANR	3276435	AdditiveExpression	mx + MAX_MV		3276069	1		+			
ANR	3276436	Identifier	mx		3276069	0					
ANR	3276437	Identifier	MAX_MV		3276069	1					
ANR	3276438	PrimaryExpression	0		3276069	1					
ANR	3276439	OrExpression	fcode_tab [ my + MAX_MV ] > f_code || fcode_tab [ my + MAX_MV ] == 0		3276069	1		||			
ANR	3276440	RelationalExpression	fcode_tab [ my + MAX_MV ] > f_code		3276069	0		>			
ANR	3276441	ArrayIndexing	fcode_tab [ my + MAX_MV ]		3276069	0					
ANR	3276442	Identifier	fcode_tab		3276069	0					
ANR	3276443	AdditiveExpression	my + MAX_MV		3276069	1		+			
ANR	3276444	Identifier	my		3276069	0					
ANR	3276445	Identifier	MAX_MV		3276069	1					
ANR	3276446	Identifier	f_code		3276069	1					
ANR	3276447	EqualityExpression	fcode_tab [ my + MAX_MV ] == 0		3276069	1		==			
ANR	3276448	ArrayIndexing	fcode_tab [ my + MAX_MV ]		3276069	0					
ANR	3276449	Identifier	fcode_tab		3276069	0					
ANR	3276450	AdditiveExpression	my + MAX_MV		3276069	1		+			
ANR	3276451	Identifier	my		3276069	0					
ANR	3276452	Identifier	MAX_MV		3276069	1					
ANR	3276453	PrimaryExpression	0		3276069	1					
ANR	3276454	CompoundStatement		95:59:1813:1813	3276069	1					
ANR	3276455	ExpressionStatement	s -> mb_type [ i ] &= ~MB_TYPE_INTER4V	99:28:1889:1922	3276069	0	True				
ANR	3276456	AssignmentExpression	s -> mb_type [ i ] &= ~MB_TYPE_INTER4V		3276069	0		&=			
ANR	3276457	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276458	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276459	Identifier	s		3276069	0					
ANR	3276460	Identifier	mb_type		3276069	1					
ANR	3276461	Identifier	i		3276069	1					
ANR	3276462	Identifier	~MB_TYPE_INTER4V		3276069	1					
ANR	3276463	ExpressionStatement	s -> mb_type [ i ] |= MB_TYPE_INTRA	101:28:1953:1983	3276069	1	True				
ANR	3276464	AssignmentExpression	s -> mb_type [ i ] |= MB_TYPE_INTRA		3276069	0		|=			
ANR	3276465	ArrayIndexing	s -> mb_type [ i ]		3276069	0					
ANR	3276466	PtrMemberAccess	s -> mb_type		3276069	0					
ANR	3276467	Identifier	s		3276069	0					
ANR	3276468	Identifier	mb_type		3276069	1					
ANR	3276469	Identifier	i		3276069	1					
ANR	3276470	Identifier	MB_TYPE_INTRA		3276069	1					
ANR	3276471	ExpressionStatement	xy += 2	107:20:2056:2061	3276069	2	True				
ANR	3276472	AssignmentExpression	xy += 2		3276069	0		+=			
ANR	3276473	Identifier	xy		3276069	0					
ANR	3276474	PrimaryExpression	2		3276069	1					
ANR	3276475	ExpressionStatement	i ++	109:20:2084:2087	3276069	3	True				
ANR	3276476	PostIncDecOperationExpression	i ++		3276069	0					
ANR	3276477	Identifier	i		3276069	0					
ANR	3276478	IncDec	++		3276069	1					
ANR	3276479	ReturnType	void		3276069	1					
ANR	3276480	Identifier	ff_fix_long_p_mvs		3276069	2					
ANR	3276481	ParameterList	MpegEncContext * s		3276069	3					
ANR	3276482	Parameter	MpegEncContext * s	1:23:23:40	3276069	0	True				
ANR	3276483	ParameterType	MpegEncContext *		3276069	0					
ANR	3276484	Identifier	s		3276069	1					
ANR	3276485	CFGEntryNode	ENTRY		3276069		True				
ANR	3276486	CFGExitNode	EXIT		3276069		True				
ANR	3276487	Symbol	xy		3276069						
ANR	3276488	Symbol	s -> motion_val		3276069						
ANR	3276489	Symbol	* * off		3276069						
ANR	3276490	Symbol	* s -> mb_type		3276069						
ANR	3276491	Symbol	* * * * s		3276069						
ANR	3276492	Symbol	s -> mb_width		3276069						
ANR	3276493	Symbol	MB_TYPE_INTER		3276069						
ANR	3276494	Symbol	MB_TYPE_INTRA		3276069						
ANR	3276495	Symbol	* * s -> motion_val		3276069						
ANR	3276496	Symbol	MB_TYPE_INTER4V		3276069						
ANR	3276497	Symbol	f_code		3276069						
ANR	3276498	Symbol	* s -> motion_val		3276069						
ANR	3276499	Symbol	* * s		3276069						
ANR	3276500	Symbol	* * * s -> p_mv_table		3276069						
ANR	3276501	Symbol	* * * xy		3276069						
ANR	3276502	Symbol	* off		3276069						
ANR	3276503	Symbol	block		3276069						
ANR	3276504	Symbol	s -> fcode_tab		3276069						
ANR	3276505	Symbol	~MB_TYPE_INTER4V		3276069						
ANR	3276506	Symbol	* MAX_MV		3276069						
ANR	3276507	Symbol	s -> mb_height		3276069						
ANR	3276508	Symbol	fcode_tab		3276069						
ANR	3276509	Symbol	* xy		3276069						
ANR	3276510	Symbol	MAX_MV		3276069						
ANR	3276511	Symbol	s -> p_mv_table		3276069						
ANR	3276512	Symbol	* s -> p_mv_table		3276069						
ANR	3276513	Symbol	s -> flags		3276069						
ANR	3276514	Symbol	i		3276069						
ANR	3276515	Symbol	CODEC_FLAG_4MV		3276069						
ANR	3276516	Symbol	mx		3276069						
ANR	3276517	Symbol	my		3276069						
ANR	3276518	Symbol	* * * s		3276069						
ANR	3276519	Symbol	off		3276069						
ANR	3276520	Symbol	* * xy		3276069						
ANR	3276521	Symbol	s -> f_code		3276069						
ANR	3276522	Symbol	~MB_TYPE_INTER		3276069						
ANR	3276523	Symbol	* my		3276069						
ANR	3276524	Symbol	* mx		3276069						
ANR	3276525	Symbol	s		3276069						
ANR	3276526	Symbol	* i		3276069						
ANR	3276527	Symbol	* fcode_tab		3276069						
ANR	3276528	Symbol	* * s -> p_mv_table		3276069						
ANR	3276529	Symbol	x		3276069						
ANR	3276530	Symbol	y		3276069						
ANR	3276531	Symbol	s -> mb_type		3276069						
ANR	3276532	Symbol	* s		3276069						
ANR	3276533	Symbol	wrap		3276069						
