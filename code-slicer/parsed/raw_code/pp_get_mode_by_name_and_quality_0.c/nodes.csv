command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6582389	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pp_get_mode_by_name_and_quality_0.c								
ANR	6582390	Function	pp_get_mode_by_name_and_quality	1:0:0:6646							
ANR	6582391	FunctionDef	"pp_get_mode_by_name_and_quality (const char * name , int quality)"		6582390	0					
ANR	6582392	CompoundStatement		3:0:73:6646	6582390	0					
ANR	6582393	IdentifierDeclStatement	char temp [ GET_MODE_BUFFER_SIZE ] ;	5:4:80:111	6582390	0	True				
ANR	6582394	IdentifierDecl	temp [ GET_MODE_BUFFER_SIZE ]		6582390	0					
ANR	6582395	IdentifierDeclType	char [ GET_MODE_BUFFER_SIZE ]		6582390	0					
ANR	6582396	Identifier	temp		6582390	1					
ANR	6582397	Identifier	GET_MODE_BUFFER_SIZE		6582390	2					
ANR	6582398	IdentifierDeclStatement	char * p = temp ;	7:4:118:131	6582390	1	True				
ANR	6582399	IdentifierDecl	* p = temp		6582390	0					
ANR	6582400	IdentifierDeclType	char *		6582390	0					
ANR	6582401	Identifier	p		6582390	1					
ANR	6582402	AssignmentExpression	* p = temp		6582390	2		=			
ANR	6582403	Identifier	temp		6582390	0					
ANR	6582404	Identifier	temp		6582390	1					
ANR	6582405	Statement	static	9:4:138:143	6582390	2	True				
ANR	6582406	IdentifierDeclStatement	"const char filterDelimiters [ ] = "",/"" ;"	9:11:145:181	6582390	3	True				
ANR	6582407	IdentifierDecl	"filterDelimiters [ ] = "",/"""		6582390	0					
ANR	6582408	IdentifierDeclType	const char [ ]		6582390	0					
ANR	6582409	Identifier	filterDelimiters		6582390	1					
ANR	6582410	AssignmentExpression	"filterDelimiters [ ] = "",/"""		6582390	2		=			
ANR	6582411	Identifier	filterDelimiters		6582390	0					
ANR	6582412	PrimaryExpression	""",/"""		6582390	1					
ANR	6582413	Statement	static	11:4:188:193	6582390	4	True				
ANR	6582414	IdentifierDeclStatement	"const char optionDelimiters [ ] = "":"" ;"	11:11:195:230	6582390	5	True				
ANR	6582415	IdentifierDecl	"optionDelimiters [ ] = "":"""		6582390	0					
ANR	6582416	IdentifierDeclType	const char [ ]		6582390	0					
ANR	6582417	Identifier	optionDelimiters		6582390	1					
ANR	6582418	AssignmentExpression	"optionDelimiters [ ] = "":"""		6582390	2		=			
ANR	6582419	Identifier	optionDelimiters		6582390	0					
ANR	6582420	PrimaryExpression	""":"""		6582390	1					
ANR	6582421	IdentifierDeclStatement	struct PPMode * ppMode ;	13:4:237:258	6582390	6	True				
ANR	6582422	IdentifierDecl	* ppMode		6582390	0					
ANR	6582423	IdentifierDeclType	struct PPMode *		6582390	0					
ANR	6582424	Identifier	ppMode		6582390	1					
ANR	6582425	IdentifierDeclStatement	char * filterToken ;	15:4:265:282	6582390	7	True				
ANR	6582426	IdentifierDecl	* filterToken		6582390	0					
ANR	6582427	IdentifierDeclType	char *		6582390	0					
ANR	6582428	Identifier	filterToken		6582390	1					
ANR	6582429	ExpressionStatement	ppMode = av_malloc ( sizeof ( PPMode ) )	19:4:291:324	6582390	8	True				
ANR	6582430	AssignmentExpression	ppMode = av_malloc ( sizeof ( PPMode ) )		6582390	0		=			
ANR	6582431	Identifier	ppMode		6582390	0					
ANR	6582432	CallExpression	av_malloc ( sizeof ( PPMode ) )		6582390	1					
ANR	6582433	Callee	av_malloc		6582390	0					
ANR	6582434	Identifier	av_malloc		6582390	0					
ANR	6582435	ArgumentList	sizeof ( PPMode )		6582390	1					
ANR	6582436	Argument	sizeof ( PPMode )		6582390	0					
ANR	6582437	SizeofExpression	sizeof ( PPMode )		6582390	0					
ANR	6582438	Sizeof	sizeof		6582390	0					
ANR	6582439	SizeofOperand	PPMode		6582390	1					
ANR	6582440	ExpressionStatement	ppMode -> lumMode = 0	23:4:333:351	6582390	9	True				
ANR	6582441	AssignmentExpression	ppMode -> lumMode = 0		6582390	0		=			
ANR	6582442	PtrMemberAccess	ppMode -> lumMode		6582390	0					
ANR	6582443	Identifier	ppMode		6582390	0					
ANR	6582444	Identifier	lumMode		6582390	1					
ANR	6582445	PrimaryExpression	0		6582390	1					
ANR	6582446	ExpressionStatement	ppMode -> chromMode = 0	25:4:358:378	6582390	10	True				
ANR	6582447	AssignmentExpression	ppMode -> chromMode = 0		6582390	0		=			
ANR	6582448	PtrMemberAccess	ppMode -> chromMode		6582390	0					
ANR	6582449	Identifier	ppMode		6582390	0					
ANR	6582450	Identifier	chromMode		6582390	1					
ANR	6582451	PrimaryExpression	0		6582390	1					
ANR	6582452	ExpressionStatement	ppMode -> maxTmpNoise [ 0 ] = 700	27:4:385:412	6582390	11	True				
ANR	6582453	AssignmentExpression	ppMode -> maxTmpNoise [ 0 ] = 700		6582390	0		=			
ANR	6582454	ArrayIndexing	ppMode -> maxTmpNoise [ 0 ]		6582390	0					
ANR	6582455	PtrMemberAccess	ppMode -> maxTmpNoise		6582390	0					
ANR	6582456	Identifier	ppMode		6582390	0					
ANR	6582457	Identifier	maxTmpNoise		6582390	1					
ANR	6582458	PrimaryExpression	0		6582390	1					
ANR	6582459	PrimaryExpression	700		6582390	1					
ANR	6582460	ExpressionStatement	ppMode -> maxTmpNoise [ 1 ] = 1500	29:4:419:447	6582390	12	True				
ANR	6582461	AssignmentExpression	ppMode -> maxTmpNoise [ 1 ] = 1500		6582390	0		=			
ANR	6582462	ArrayIndexing	ppMode -> maxTmpNoise [ 1 ]		6582390	0					
ANR	6582463	PtrMemberAccess	ppMode -> maxTmpNoise		6582390	0					
ANR	6582464	Identifier	ppMode		6582390	0					
ANR	6582465	Identifier	maxTmpNoise		6582390	1					
ANR	6582466	PrimaryExpression	1		6582390	1					
ANR	6582467	PrimaryExpression	1500		6582390	1					
ANR	6582468	ExpressionStatement	ppMode -> maxTmpNoise [ 2 ] = 3000	31:4:454:482	6582390	13	True				
ANR	6582469	AssignmentExpression	ppMode -> maxTmpNoise [ 2 ] = 3000		6582390	0		=			
ANR	6582470	ArrayIndexing	ppMode -> maxTmpNoise [ 2 ]		6582390	0					
ANR	6582471	PtrMemberAccess	ppMode -> maxTmpNoise		6582390	0					
ANR	6582472	Identifier	ppMode		6582390	0					
ANR	6582473	Identifier	maxTmpNoise		6582390	1					
ANR	6582474	PrimaryExpression	2		6582390	1					
ANR	6582475	PrimaryExpression	3000		6582390	1					
ANR	6582476	ExpressionStatement	ppMode -> maxAllowedY = 234	33:4:489:513	6582390	14	True				
ANR	6582477	AssignmentExpression	ppMode -> maxAllowedY = 234		6582390	0		=			
ANR	6582478	PtrMemberAccess	ppMode -> maxAllowedY		6582390	0					
ANR	6582479	Identifier	ppMode		6582390	0					
ANR	6582480	Identifier	maxAllowedY		6582390	1					
ANR	6582481	PrimaryExpression	234		6582390	1					
ANR	6582482	ExpressionStatement	ppMode -> minAllowedY = 16	35:4:520:543	6582390	15	True				
ANR	6582483	AssignmentExpression	ppMode -> minAllowedY = 16		6582390	0		=			
ANR	6582484	PtrMemberAccess	ppMode -> minAllowedY		6582390	0					
ANR	6582485	Identifier	ppMode		6582390	0					
ANR	6582486	Identifier	minAllowedY		6582390	1					
ANR	6582487	PrimaryExpression	16		6582390	1					
ANR	6582488	ExpressionStatement	ppMode -> baseDcDiff = 256 / 8	37:4:550:575	6582390	16	True				
ANR	6582489	AssignmentExpression	ppMode -> baseDcDiff = 256 / 8		6582390	0		=			
ANR	6582490	PtrMemberAccess	ppMode -> baseDcDiff		6582390	0					
ANR	6582491	Identifier	ppMode		6582390	0					
ANR	6582492	Identifier	baseDcDiff		6582390	1					
ANR	6582493	MultiplicativeExpression	256 / 8		6582390	1		/			
ANR	6582494	PrimaryExpression	256		6582390	0					
ANR	6582495	PrimaryExpression	8		6582390	1					
ANR	6582496	ExpressionStatement	ppMode -> flatnessThreshold = 56 - 16 - 1	39:4:582:616	6582390	17	True				
ANR	6582497	AssignmentExpression	ppMode -> flatnessThreshold = 56 - 16 - 1		6582390	0		=			
ANR	6582498	PtrMemberAccess	ppMode -> flatnessThreshold		6582390	0					
ANR	6582499	Identifier	ppMode		6582390	0					
ANR	6582500	Identifier	flatnessThreshold		6582390	1					
ANR	6582501	AdditiveExpression	56 - 16 - 1		6582390	1		-			
ANR	6582502	PrimaryExpression	56		6582390	0					
ANR	6582503	AdditiveExpression	16 - 1		6582390	1		-			
ANR	6582504	PrimaryExpression	16		6582390	0					
ANR	6582505	PrimaryExpression	1		6582390	1					
ANR	6582506	ExpressionStatement	ppMode -> maxClippedThreshold = 0.01	41:4:623:656	6582390	18	True				
ANR	6582507	AssignmentExpression	ppMode -> maxClippedThreshold = 0.01		6582390	0		=			
ANR	6582508	PtrMemberAccess	ppMode -> maxClippedThreshold		6582390	0					
ANR	6582509	Identifier	ppMode		6582390	0					
ANR	6582510	Identifier	maxClippedThreshold		6582390	1					
ANR	6582511	PrimaryExpression	0.01		6582390	1					
ANR	6582512	ExpressionStatement	ppMode -> error = 0	43:4:663:678	6582390	19	True				
ANR	6582513	AssignmentExpression	ppMode -> error = 0		6582390	0		=			
ANR	6582514	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6582515	Identifier	ppMode		6582390	0					
ANR	6582516	Identifier	error		6582390	1					
ANR	6582517	PrimaryExpression	0		6582390	1					
ANR	6582518	ExpressionStatement	"memset ( temp , 0 , GET_MODE_BUFFER_SIZE )"	47:4:687:724	6582390	20	True				
ANR	6582519	CallExpression	"memset ( temp , 0 , GET_MODE_BUFFER_SIZE )"		6582390	0					
ANR	6582520	Callee	memset		6582390	0					
ANR	6582521	Identifier	memset		6582390	0					
ANR	6582522	ArgumentList	temp		6582390	1					
ANR	6582523	Argument	temp		6582390	0					
ANR	6582524	Identifier	temp		6582390	0					
ANR	6582525	Argument	0		6582390	1					
ANR	6582526	PrimaryExpression	0		6582390	0					
ANR	6582527	Argument	GET_MODE_BUFFER_SIZE		6582390	2					
ANR	6582528	Identifier	GET_MODE_BUFFER_SIZE		6582390	0					
ANR	6582529	ExpressionStatement	"av_strlcpy ( temp , name , GET_MODE_BUFFER_SIZE - 1 )"	49:4:731:779	6582390	21	True				
ANR	6582530	CallExpression	"av_strlcpy ( temp , name , GET_MODE_BUFFER_SIZE - 1 )"		6582390	0					
ANR	6582531	Callee	av_strlcpy		6582390	0					
ANR	6582532	Identifier	av_strlcpy		6582390	0					
ANR	6582533	ArgumentList	temp		6582390	1					
ANR	6582534	Argument	temp		6582390	0					
ANR	6582535	Identifier	temp		6582390	0					
ANR	6582536	Argument	name		6582390	1					
ANR	6582537	Identifier	name		6582390	0					
ANR	6582538	Argument	GET_MODE_BUFFER_SIZE - 1		6582390	2					
ANR	6582539	AdditiveExpression	GET_MODE_BUFFER_SIZE - 1		6582390	0		-			
ANR	6582540	Identifier	GET_MODE_BUFFER_SIZE		6582390	0					
ANR	6582541	PrimaryExpression	1		6582390	1					
ANR	6582542	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""pp: %s\\n"" , name )"	53:4:788:832	6582390	22	True				
ANR	6582543	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""pp: %s\\n"" , name )"		6582390	0					
ANR	6582544	Callee	av_log		6582390	0					
ANR	6582545	Identifier	av_log		6582390	0					
ANR	6582546	ArgumentList	NULL		6582390	1					
ANR	6582547	Argument	NULL		6582390	0					
ANR	6582548	Identifier	NULL		6582390	0					
ANR	6582549	Argument	AV_LOG_DEBUG		6582390	1					
ANR	6582550	Identifier	AV_LOG_DEBUG		6582390	0					
ANR	6582551	Argument	"""pp: %s\\n"""		6582390	2					
ANR	6582552	PrimaryExpression	"""pp: %s\\n"""		6582390	0					
ANR	6582553	Argument	name		6582390	3					
ANR	6582554	Identifier	name		6582390	0					
ANR	6582555	ForStatement	for ( ; ; )		6582390	23					
ANR	6582556	CompoundStatement		75:8:1048:1060	6582390	0					
ANR	6582557	IdentifierDeclStatement	char * filterName ;	59:8:859:875	6582390	0	True				
ANR	6582558	IdentifierDecl	* filterName		6582390	0					
ANR	6582559	IdentifierDeclType	char *		6582390	0					
ANR	6582560	Identifier	filterName		6582390	1					
ANR	6582561	IdentifierDeclStatement	int q = 1000000 ;	61:8:886:900	6582390	1	True				
ANR	6582562	IdentifierDecl	q = 1000000		6582390	0					
ANR	6582563	IdentifierDeclType	int		6582390	0					
ANR	6582564	Identifier	q		6582390	1					
ANR	6582565	AssignmentExpression	q = 1000000		6582390	2		=			
ANR	6582566	Identifier	q		6582390	0					
ANR	6582567	PrimaryExpression	1000000		6582390	1					
ANR	6582568	IdentifierDeclStatement	int chrom = - 1 ;	63:8:929:941	6582390	2	True				
ANR	6582569	IdentifierDecl	chrom = - 1		6582390	0					
ANR	6582570	IdentifierDeclType	int		6582390	0					
ANR	6582571	Identifier	chrom		6582390	1					
ANR	6582572	AssignmentExpression	chrom = - 1		6582390	2		=			
ANR	6582573	Identifier	chrom		6582390	0					
ANR	6582574	UnaryOperationExpression	- 1		6582390	1					
ANR	6582575	UnaryOperator	-		6582390	0					
ANR	6582576	PrimaryExpression	1		6582390	1					
ANR	6582577	IdentifierDeclStatement	int luma = - 1 ;	65:8:952:963	6582390	3	True				
ANR	6582578	IdentifierDecl	luma = - 1		6582390	0					
ANR	6582579	IdentifierDeclType	int		6582390	0					
ANR	6582580	Identifier	luma		6582390	1					
ANR	6582581	AssignmentExpression	luma = - 1		6582390	2		=			
ANR	6582582	Identifier	luma		6582390	0					
ANR	6582583	UnaryOperationExpression	- 1		6582390	1					
ANR	6582584	UnaryOperator	-		6582390	0					
ANR	6582585	PrimaryExpression	1		6582390	1					
ANR	6582586	IdentifierDeclStatement	char * option ;	67:8:974:986	6582390	4	True				
ANR	6582587	IdentifierDecl	* option		6582390	0					
ANR	6582588	IdentifierDeclType	char *		6582390	0					
ANR	6582589	Identifier	option		6582390	1					
ANR	6582590	IdentifierDeclStatement	char * options [ OPTIONS_ARRAY_SIZE ] ;	69:8:997:1030	6582390	5	True				
ANR	6582591	IdentifierDecl	* options [ OPTIONS_ARRAY_SIZE ]		6582390	0					
ANR	6582592	IdentifierDeclType	char * [ OPTIONS_ARRAY_SIZE ]		6582390	0					
ANR	6582593	Identifier	options		6582390	1					
ANR	6582594	Identifier	OPTIONS_ARRAY_SIZE		6582390	2					
ANR	6582595	IdentifierDeclStatement	int i ;	71:8:1041:1046	6582390	6	True				
ANR	6582596	IdentifierDecl	i		6582390	0					
ANR	6582597	IdentifierDeclType	int		6582390	0					
ANR	6582598	Identifier	i		6582390	1					
ANR	6582599	IdentifierDeclStatement	int filterNameOk = 0 ;	73:8:1057:1075	6582390	7	True				
ANR	6582600	IdentifierDecl	filterNameOk = 0		6582390	0					
ANR	6582601	IdentifierDeclType	int		6582390	0					
ANR	6582602	Identifier	filterNameOk		6582390	1					
ANR	6582603	AssignmentExpression	filterNameOk = 0		6582390	2		=			
ANR	6582604	Identifier	filterNameOk		6582390	0					
ANR	6582605	PrimaryExpression	0		6582390	1					
ANR	6582606	IdentifierDeclStatement	int numOfUnknownOptions = 0 ;	75:8:1086:1111	6582390	8	True				
ANR	6582607	IdentifierDecl	numOfUnknownOptions = 0		6582390	0					
ANR	6582608	IdentifierDeclType	int		6582390	0					
ANR	6582609	Identifier	numOfUnknownOptions		6582390	1					
ANR	6582610	AssignmentExpression	numOfUnknownOptions = 0		6582390	2		=			
ANR	6582611	Identifier	numOfUnknownOptions		6582390	0					
ANR	6582612	PrimaryExpression	0		6582390	1					
ANR	6582613	IdentifierDeclStatement	int enable = 1 ;	77:8:1122:1134	6582390	9	True				
ANR	6582614	IdentifierDecl	enable = 1		6582390	0					
ANR	6582615	IdentifierDeclType	int		6582390	0					
ANR	6582616	Identifier	enable		6582390	1					
ANR	6582617	AssignmentExpression	enable = 1		6582390	2		=			
ANR	6582618	Identifier	enable		6582390	0					
ANR	6582619	PrimaryExpression	1		6582390	1					
ANR	6582620	ExpressionStatement	"filterToken = strtok ( p , filterDelimiters )"	81:8:1205:1245	6582390	10	True				
ANR	6582621	AssignmentExpression	"filterToken = strtok ( p , filterDelimiters )"		6582390	0		=			
ANR	6582622	Identifier	filterToken		6582390	0					
ANR	6582623	CallExpression	"strtok ( p , filterDelimiters )"		6582390	1					
ANR	6582624	Callee	strtok		6582390	0					
ANR	6582625	Identifier	strtok		6582390	0					
ANR	6582626	ArgumentList	p		6582390	1					
ANR	6582627	Argument	p		6582390	0					
ANR	6582628	Identifier	p		6582390	0					
ANR	6582629	Argument	filterDelimiters		6582390	1					
ANR	6582630	Identifier	filterDelimiters		6582390	0					
ANR	6582631	IfStatement	if ( filterToken == NULL )		6582390	11					
ANR	6582632	Condition	filterToken == NULL	83:11:1259:1277	6582390	0	True				
ANR	6582633	EqualityExpression	filterToken == NULL		6582390	0		==			
ANR	6582634	Identifier	filterToken		6582390	0					
ANR	6582635	Identifier	NULL		6582390	1					
ANR	6582636	BreakStatement	break ;	83:32:1280:1285	6582390	1	True				
ANR	6582637	ExpressionStatement	p += strlen ( filterToken ) + 1	85:8:1296:1323	6582390	12	True				
ANR	6582638	AssignmentExpression	p += strlen ( filterToken ) + 1		6582390	0		+=			
ANR	6582639	Identifier	p		6582390	0					
ANR	6582640	AdditiveExpression	strlen ( filterToken ) + 1		6582390	1		+			
ANR	6582641	CallExpression	strlen ( filterToken )		6582390	0					
ANR	6582642	Callee	strlen		6582390	0					
ANR	6582643	Identifier	strlen		6582390	0					
ANR	6582644	ArgumentList	filterToken		6582390	1					
ANR	6582645	Argument	filterToken		6582390	0					
ANR	6582646	Identifier	filterToken		6582390	0					
ANR	6582647	PrimaryExpression	1		6582390	1					
ANR	6582648	ExpressionStatement	"filterName = strtok ( filterToken , optionDelimiters )"	87:8:1366:1415	6582390	13	True				
ANR	6582649	AssignmentExpression	"filterName = strtok ( filterToken , optionDelimiters )"		6582390	0		=			
ANR	6582650	Identifier	filterName		6582390	0					
ANR	6582651	CallExpression	"strtok ( filterToken , optionDelimiters )"		6582390	1					
ANR	6582652	Callee	strtok		6582390	0					
ANR	6582653	Identifier	strtok		6582390	0					
ANR	6582654	ArgumentList	filterToken		6582390	1					
ANR	6582655	Argument	filterToken		6582390	0					
ANR	6582656	Identifier	filterToken		6582390	0					
ANR	6582657	Argument	optionDelimiters		6582390	1					
ANR	6582658	Identifier	optionDelimiters		6582390	0					
ANR	6582659	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""pp: %s::%s\\n"" , filterToken , filterName )"	89:8:1426:1493	6582390	14	True				
ANR	6582660	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""pp: %s::%s\\n"" , filterToken , filterName )"		6582390	0					
ANR	6582661	Callee	av_log		6582390	0					
ANR	6582662	Identifier	av_log		6582390	0					
ANR	6582663	ArgumentList	NULL		6582390	1					
ANR	6582664	Argument	NULL		6582390	0					
ANR	6582665	Identifier	NULL		6582390	0					
ANR	6582666	Argument	AV_LOG_DEBUG		6582390	1					
ANR	6582667	Identifier	AV_LOG_DEBUG		6582390	0					
ANR	6582668	Argument	"""pp: %s::%s\\n"""		6582390	2					
ANR	6582669	PrimaryExpression	"""pp: %s::%s\\n"""		6582390	0					
ANR	6582670	Argument	filterToken		6582390	3					
ANR	6582671	Identifier	filterToken		6582390	0					
ANR	6582672	Argument	filterName		6582390	4					
ANR	6582673	Identifier	filterName		6582390	0					
ANR	6582674	IfStatement	if ( * filterName == '-' )		6582390	15					
ANR	6582675	Condition	* filterName == '-'	93:11:1509:1526	6582390	0	True				
ANR	6582676	EqualityExpression	* filterName == '-'		6582390	0		==			
ANR	6582677	UnaryOperationExpression	* filterName		6582390	0					
ANR	6582678	UnaryOperator	*		6582390	0					
ANR	6582679	Identifier	filterName		6582390	1					
ANR	6582680	PrimaryExpression	'-'		6582390	1					
ANR	6582681	CompoundStatement		91:30:1454:1454	6582390	1					
ANR	6582682	ExpressionStatement	enable = 0	95:12:1543:1551	6582390	0	True				
ANR	6582683	AssignmentExpression	enable = 0		6582390	0		=			
ANR	6582684	Identifier	enable		6582390	0					
ANR	6582685	PrimaryExpression	0		6582390	1					
ANR	6582686	ExpressionStatement	filterName ++	97:12:1566:1578	6582390	1	True				
ANR	6582687	PostIncDecOperationExpression	filterName ++		6582390	0					
ANR	6582688	Identifier	filterName		6582390	0					
ANR	6582689	IncDec	++		6582390	1					
ANR	6582690	ForStatement	for ( ; ; )		6582390	16					
ANR	6582691	CompoundStatement		101:15:1535:1535	6582390	0					
ANR	6582692	ExpressionStatement	"option = strtok ( NULL , optionDelimiters )"	105:12:1642:1680	6582390	0	True				
ANR	6582693	AssignmentExpression	"option = strtok ( NULL , optionDelimiters )"		6582390	0		=			
ANR	6582694	Identifier	option		6582390	0					
ANR	6582695	CallExpression	"strtok ( NULL , optionDelimiters )"		6582390	1					
ANR	6582696	Callee	strtok		6582390	0					
ANR	6582697	Identifier	strtok		6582390	0					
ANR	6582698	ArgumentList	NULL		6582390	1					
ANR	6582699	Argument	NULL		6582390	0					
ANR	6582700	Identifier	NULL		6582390	0					
ANR	6582701	Argument	optionDelimiters		6582390	1					
ANR	6582702	Identifier	optionDelimiters		6582390	0					
ANR	6582703	IfStatement	if ( option == NULL )		6582390	1					
ANR	6582704	Condition	option == NULL	107:15:1698:1711	6582390	0	True				
ANR	6582705	EqualityExpression	option == NULL		6582390	0		==			
ANR	6582706	Identifier	option		6582390	0					
ANR	6582707	Identifier	NULL		6582390	1					
ANR	6582708	BreakStatement	break ;	107:31:1714:1719	6582390	1	True				
ANR	6582709	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""pp: option: %s\\n"" , option )"	111:12:1736:1790	6582390	2	True				
ANR	6582710	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""pp: option: %s\\n"" , option )"		6582390	0					
ANR	6582711	Callee	av_log		6582390	0					
ANR	6582712	Identifier	av_log		6582390	0					
ANR	6582713	ArgumentList	NULL		6582390	1					
ANR	6582714	Argument	NULL		6582390	0					
ANR	6582715	Identifier	NULL		6582390	0					
ANR	6582716	Argument	AV_LOG_DEBUG		6582390	1					
ANR	6582717	Identifier	AV_LOG_DEBUG		6582390	0					
ANR	6582718	Argument	"""pp: option: %s\\n"""		6582390	2					
ANR	6582719	PrimaryExpression	"""pp: option: %s\\n"""		6582390	0					
ANR	6582720	Argument	option		6582390	3					
ANR	6582721	Identifier	option		6582390	0					
ANR	6582722	IfStatement	"if ( ! strcmp ( ""autoq"" , option ) || ! strcmp ( ""a"" , option ) )"		6582390	3					
ANR	6582723	Condition	"! strcmp ( ""autoq"" , option ) || ! strcmp ( ""a"" , option )"	113:15:1808:1855	6582390	0	True				
ANR	6582724	OrExpression	"! strcmp ( ""autoq"" , option ) || ! strcmp ( ""a"" , option )"		6582390	0		||			
ANR	6582725	UnaryOperationExpression	"! strcmp ( ""autoq"" , option )"		6582390	0					
ANR	6582726	UnaryOperator	!		6582390	0					
ANR	6582727	CallExpression	"strcmp ( ""autoq"" , option )"		6582390	1					
ANR	6582728	Callee	strcmp		6582390	0					
ANR	6582729	Identifier	strcmp		6582390	0					
ANR	6582730	ArgumentList	"""autoq"""		6582390	1					
ANR	6582731	Argument	"""autoq"""		6582390	0					
ANR	6582732	PrimaryExpression	"""autoq"""		6582390	0					
ANR	6582733	Argument	option		6582390	1					
ANR	6582734	Identifier	option		6582390	0					
ANR	6582735	UnaryOperationExpression	"! strcmp ( ""a"" , option )"		6582390	1					
ANR	6582736	UnaryOperator	!		6582390	0					
ANR	6582737	CallExpression	"strcmp ( ""a"" , option )"		6582390	1					
ANR	6582738	Callee	strcmp		6582390	0					
ANR	6582739	Identifier	strcmp		6582390	0					
ANR	6582740	ArgumentList	"""a"""		6582390	1					
ANR	6582741	Argument	"""a"""		6582390	0					
ANR	6582742	PrimaryExpression	"""a"""		6582390	0					
ANR	6582743	Argument	option		6582390	1					
ANR	6582744	Identifier	option		6582390	0					
ANR	6582745	ExpressionStatement	q = quality	113:65:1858:1868	6582390	1	True				
ANR	6582746	AssignmentExpression	q = quality		6582390	0		=			
ANR	6582747	Identifier	q		6582390	0					
ANR	6582748	Identifier	quality		6582390	1					
ANR	6582749	ElseStatement	else		6582390	0					
ANR	6582750	IfStatement	"if ( ! strcmp ( ""nochrom"" , option ) || ! strcmp ( ""y"" , option ) )"		6582390	0					
ANR	6582751	Condition	"! strcmp ( ""nochrom"" , option ) || ! strcmp ( ""y"" , option )"	115:20:1891:1940	6582390	0	True				
ANR	6582752	OrExpression	"! strcmp ( ""nochrom"" , option ) || ! strcmp ( ""y"" , option )"		6582390	0		||			
ANR	6582753	UnaryOperationExpression	"! strcmp ( ""nochrom"" , option )"		6582390	0					
ANR	6582754	UnaryOperator	!		6582390	0					
ANR	6582755	CallExpression	"strcmp ( ""nochrom"" , option )"		6582390	1					
ANR	6582756	Callee	strcmp		6582390	0					
ANR	6582757	Identifier	strcmp		6582390	0					
ANR	6582758	ArgumentList	"""nochrom"""		6582390	1					
ANR	6582759	Argument	"""nochrom"""		6582390	0					
ANR	6582760	PrimaryExpression	"""nochrom"""		6582390	0					
ANR	6582761	Argument	option		6582390	1					
ANR	6582762	Identifier	option		6582390	0					
ANR	6582763	UnaryOperationExpression	"! strcmp ( ""y"" , option )"		6582390	1					
ANR	6582764	UnaryOperator	!		6582390	0					
ANR	6582765	CallExpression	"strcmp ( ""y"" , option )"		6582390	1					
ANR	6582766	Callee	strcmp		6582390	0					
ANR	6582767	Identifier	strcmp		6582390	0					
ANR	6582768	ArgumentList	"""y"""		6582390	1					
ANR	6582769	Argument	"""y"""		6582390	0					
ANR	6582770	PrimaryExpression	"""y"""		6582390	0					
ANR	6582771	Argument	option		6582390	1					
ANR	6582772	Identifier	option		6582390	0					
ANR	6582773	ExpressionStatement	chrom = 0	115:72:1943:1950	6582390	1	True				
ANR	6582774	AssignmentExpression	chrom = 0		6582390	0		=			
ANR	6582775	Identifier	chrom		6582390	0					
ANR	6582776	PrimaryExpression	0		6582390	1					
ANR	6582777	ElseStatement	else		6582390	0					
ANR	6582778	IfStatement	"if ( ! strcmp ( ""chrom"" , option ) || ! strcmp ( ""c"" , option ) )"		6582390	0					
ANR	6582779	Condition	"! strcmp ( ""chrom"" , option ) || ! strcmp ( ""c"" , option )"	117:20:1973:2020	6582390	0	True				
ANR	6582780	OrExpression	"! strcmp ( ""chrom"" , option ) || ! strcmp ( ""c"" , option )"		6582390	0		||			
ANR	6582781	UnaryOperationExpression	"! strcmp ( ""chrom"" , option )"		6582390	0					
ANR	6582782	UnaryOperator	!		6582390	0					
ANR	6582783	CallExpression	"strcmp ( ""chrom"" , option )"		6582390	1					
ANR	6582784	Callee	strcmp		6582390	0					
ANR	6582785	Identifier	strcmp		6582390	0					
ANR	6582786	ArgumentList	"""chrom"""		6582390	1					
ANR	6582787	Argument	"""chrom"""		6582390	0					
ANR	6582788	PrimaryExpression	"""chrom"""		6582390	0					
ANR	6582789	Argument	option		6582390	1					
ANR	6582790	Identifier	option		6582390	0					
ANR	6582791	UnaryOperationExpression	"! strcmp ( ""c"" , option )"		6582390	1					
ANR	6582792	UnaryOperator	!		6582390	0					
ANR	6582793	CallExpression	"strcmp ( ""c"" , option )"		6582390	1					
ANR	6582794	Callee	strcmp		6582390	0					
ANR	6582795	Identifier	strcmp		6582390	0					
ANR	6582796	ArgumentList	"""c"""		6582390	1					
ANR	6582797	Argument	"""c"""		6582390	0					
ANR	6582798	PrimaryExpression	"""c"""		6582390	0					
ANR	6582799	Argument	option		6582390	1					
ANR	6582800	Identifier	option		6582390	0					
ANR	6582801	ExpressionStatement	chrom = 1	117:70:2023:2030	6582390	1	True				
ANR	6582802	AssignmentExpression	chrom = 1		6582390	0		=			
ANR	6582803	Identifier	chrom		6582390	0					
ANR	6582804	PrimaryExpression	1		6582390	1					
ANR	6582805	ElseStatement	else		6582390	0					
ANR	6582806	IfStatement	"if ( ! strcmp ( ""noluma"" , option ) || ! strcmp ( ""n"" , option ) )"		6582390	0					
ANR	6582807	Condition	"! strcmp ( ""noluma"" , option ) || ! strcmp ( ""n"" , option )"	119:20:2053:2101	6582390	0	True				
ANR	6582808	OrExpression	"! strcmp ( ""noluma"" , option ) || ! strcmp ( ""n"" , option )"		6582390	0		||			
ANR	6582809	UnaryOperationExpression	"! strcmp ( ""noluma"" , option )"		6582390	0					
ANR	6582810	UnaryOperator	!		6582390	0					
ANR	6582811	CallExpression	"strcmp ( ""noluma"" , option )"		6582390	1					
ANR	6582812	Callee	strcmp		6582390	0					
ANR	6582813	Identifier	strcmp		6582390	0					
ANR	6582814	ArgumentList	"""noluma"""		6582390	1					
ANR	6582815	Argument	"""noluma"""		6582390	0					
ANR	6582816	PrimaryExpression	"""noluma"""		6582390	0					
ANR	6582817	Argument	option		6582390	1					
ANR	6582818	Identifier	option		6582390	0					
ANR	6582819	UnaryOperationExpression	"! strcmp ( ""n"" , option )"		6582390	1					
ANR	6582820	UnaryOperator	!		6582390	0					
ANR	6582821	CallExpression	"strcmp ( ""n"" , option )"		6582390	1					
ANR	6582822	Callee	strcmp		6582390	0					
ANR	6582823	Identifier	strcmp		6582390	0					
ANR	6582824	ArgumentList	"""n"""		6582390	1					
ANR	6582825	Argument	"""n"""		6582390	0					
ANR	6582826	PrimaryExpression	"""n"""		6582390	0					
ANR	6582827	Argument	option		6582390	1					
ANR	6582828	Identifier	option		6582390	0					
ANR	6582829	ExpressionStatement	luma = 0	119:71:2104:2110	6582390	1	True				
ANR	6582830	AssignmentExpression	luma = 0		6582390	0		=			
ANR	6582831	Identifier	luma		6582390	0					
ANR	6582832	PrimaryExpression	0		6582390	1					
ANR	6582833	ElseStatement	else		6582390	0					
ANR	6582834	CompoundStatement		119:16:2055:2055	6582390	0					
ANR	6582835	ExpressionStatement	options [ numOfUnknownOptions ] = option	123:16:2148:2185	6582390	0	True				
ANR	6582836	AssignmentExpression	options [ numOfUnknownOptions ] = option		6582390	0		=			
ANR	6582837	ArrayIndexing	options [ numOfUnknownOptions ]		6582390	0					
ANR	6582838	Identifier	options		6582390	0					
ANR	6582839	Identifier	numOfUnknownOptions		6582390	1					
ANR	6582840	Identifier	option		6582390	1					
ANR	6582841	ExpressionStatement	numOfUnknownOptions ++	125:16:2204:2225	6582390	1	True				
ANR	6582842	PostIncDecOperationExpression	numOfUnknownOptions ++		6582390	0					
ANR	6582843	Identifier	numOfUnknownOptions		6582390	0					
ANR	6582844	IncDec	++		6582390	1					
ANR	6582845	IfStatement	if ( numOfUnknownOptions >= OPTIONS_ARRAY_SIZE - 1 )		6582390	4					
ANR	6582846	Condition	numOfUnknownOptions >= OPTIONS_ARRAY_SIZE - 1	129:15:2258:2300	6582390	0	True				
ANR	6582847	RelationalExpression	numOfUnknownOptions >= OPTIONS_ARRAY_SIZE - 1		6582390	0		>=			
ANR	6582848	Identifier	numOfUnknownOptions		6582390	0					
ANR	6582849	AdditiveExpression	OPTIONS_ARRAY_SIZE - 1		6582390	1		-			
ANR	6582850	Identifier	OPTIONS_ARRAY_SIZE		6582390	0					
ANR	6582851	PrimaryExpression	1		6582390	1					
ANR	6582852	BreakStatement	break ;	129:60:2303:2308	6582390	1	True				
ANR	6582853	ExpressionStatement	options [ numOfUnknownOptions ] = NULL	133:8:2330:2365	6582390	17	True				
ANR	6582854	AssignmentExpression	options [ numOfUnknownOptions ] = NULL		6582390	0		=			
ANR	6582855	ArrayIndexing	options [ numOfUnknownOptions ]		6582390	0					
ANR	6582856	Identifier	options		6582390	0					
ANR	6582857	Identifier	numOfUnknownOptions		6582390	1					
ANR	6582858	Identifier	NULL		6582390	1					
ANR	6582859	ForStatement	for ( i = 0 ; replaceTable [ 2 * i ] != NULL ; i ++ )		6582390	18					
ANR	6582860	ForInit	i = 0 ;	139:12:2434:2437	6582390	0	True				
ANR	6582861	AssignmentExpression	i = 0		6582390	0		=			
ANR	6582862	Identifier	i		6582390	0					
ANR	6582863	PrimaryExpression	0		6582390	1					
ANR	6582864	Condition	replaceTable [ 2 * i ] != NULL	139:17:2439:2461	6582390	1	True				
ANR	6582865	EqualityExpression	replaceTable [ 2 * i ] != NULL		6582390	0		!=			
ANR	6582866	ArrayIndexing	replaceTable [ 2 * i ]		6582390	0					
ANR	6582867	Identifier	replaceTable		6582390	0					
ANR	6582868	MultiplicativeExpression	2 * i		6582390	1		*			
ANR	6582869	PrimaryExpression	2		6582390	0					
ANR	6582870	Identifier	i		6582390	1					
ANR	6582871	Identifier	NULL		6582390	1					
ANR	6582872	PostIncDecOperationExpression	i ++	139:42:2464:2466	6582390	2	True				
ANR	6582873	Identifier	i		6582390	0					
ANR	6582874	IncDec	++		6582390	1					
ANR	6582875	CompoundStatement		137:46:2394:2394	6582390	3					
ANR	6582876	IfStatement	"if ( ! strcmp ( replaceTable [ 2 * i ] , filterName ) )"		6582390	0					
ANR	6582877	Condition	"! strcmp ( replaceTable [ 2 * i ] , filterName )"	141:15:2486:2523	6582390	0	True				
ANR	6582878	UnaryOperationExpression	"! strcmp ( replaceTable [ 2 * i ] , filterName )"		6582390	0					
ANR	6582879	UnaryOperator	!		6582390	0					
ANR	6582880	CallExpression	"strcmp ( replaceTable [ 2 * i ] , filterName )"		6582390	1					
ANR	6582881	Callee	strcmp		6582390	0					
ANR	6582882	Identifier	strcmp		6582390	0					
ANR	6582883	ArgumentList	replaceTable [ 2 * i ]		6582390	1					
ANR	6582884	Argument	replaceTable [ 2 * i ]		6582390	0					
ANR	6582885	ArrayIndexing	replaceTable [ 2 * i ]		6582390	0					
ANR	6582886	Identifier	replaceTable		6582390	0					
ANR	6582887	MultiplicativeExpression	2 * i		6582390	1		*			
ANR	6582888	PrimaryExpression	2		6582390	0					
ANR	6582889	Identifier	i		6582390	1					
ANR	6582890	Argument	filterName		6582390	1					
ANR	6582891	Identifier	filterName		6582390	0					
ANR	6582892	CompoundStatement		145:16:2557:2570	6582390	1					
ANR	6582893	IdentifierDeclStatement	int newlen = strlen ( replaceTable [ 2 * i + 1 ] ) ;	143:16:2544:2585	6582390	0	True				
ANR	6582894	IdentifierDecl	newlen = strlen ( replaceTable [ 2 * i + 1 ] )		6582390	0					
ANR	6582895	IdentifierDeclType	int		6582390	0					
ANR	6582896	Identifier	newlen		6582390	1					
ANR	6582897	AssignmentExpression	newlen = strlen ( replaceTable [ 2 * i + 1 ] )		6582390	2		=			
ANR	6582898	Identifier	newlen		6582390	0					
ANR	6582899	CallExpression	strlen ( replaceTable [ 2 * i + 1 ] )		6582390	1					
ANR	6582900	Callee	strlen		6582390	0					
ANR	6582901	Identifier	strlen		6582390	0					
ANR	6582902	ArgumentList	replaceTable [ 2 * i + 1 ]		6582390	1					
ANR	6582903	Argument	replaceTable [ 2 * i + 1 ]		6582390	0					
ANR	6582904	ArrayIndexing	replaceTable [ 2 * i + 1 ]		6582390	0					
ANR	6582905	Identifier	replaceTable		6582390	0					
ANR	6582906	AdditiveExpression	2 * i + 1		6582390	1		+			
ANR	6582907	MultiplicativeExpression	2 * i		6582390	0		*			
ANR	6582908	PrimaryExpression	2		6582390	0					
ANR	6582909	Identifier	i		6582390	1					
ANR	6582910	PrimaryExpression	1		6582390	1					
ANR	6582911	IdentifierDeclStatement	int plen ;	145:16:2604:2612	6582390	1	True				
ANR	6582912	IdentifierDecl	plen		6582390	0					
ANR	6582913	IdentifierDeclType	int		6582390	0					
ANR	6582914	Identifier	plen		6582390	1					
ANR	6582915	IdentifierDeclStatement	int spaceLeft ;	147:16:2631:2644	6582390	2	True				
ANR	6582916	IdentifierDecl	spaceLeft		6582390	0					
ANR	6582917	IdentifierDeclType	int		6582390	0					
ANR	6582918	Identifier	spaceLeft		6582390	1					
ANR	6582919	IfStatement	if ( p == NULL )		6582390	3					
ANR	6582920	Condition	p == NULL	151:19:2668:2674	6582390	0	True				
ANR	6582921	EqualityExpression	p == NULL		6582390	0		==			
ANR	6582922	Identifier	p		6582390	0					
ANR	6582923	Identifier	NULL		6582390	1					
ANR	6582924	ExpressionStatement	"p = temp , * p = 0"	151:28:2677:2690	6582390	1	True				
ANR	6582925	Expression	"p = temp , * p = 0"		6582390	0					
ANR	6582926	AssignmentExpression	p = temp		6582390	0		=			
ANR	6582927	Identifier	p		6582390	0					
ANR	6582928	Identifier	temp		6582390	1					
ANR	6582929	AssignmentExpression	* p = 0		6582390	1		=			
ANR	6582930	UnaryOperationExpression	* p		6582390	0					
ANR	6582931	UnaryOperator	*		6582390	0					
ANR	6582932	Identifier	p		6582390	1					
ANR	6582933	PrimaryExpression	0		6582390	1					
ANR	6582934	ElseStatement	else		6582390	0					
ANR	6582935	ExpressionStatement	"p -- , * p = ','"	153:21:2733:2744	6582390	0	True				
ANR	6582936	Expression	"p -- , * p = ','"		6582390	0					
ANR	6582937	PostIncDecOperationExpression	p --		6582390	0					
ANR	6582938	Identifier	p		6582390	0					
ANR	6582939	IncDec	--		6582390	1					
ANR	6582940	AssignmentExpression	"* p = ','"		6582390	1		=			
ANR	6582941	UnaryOperationExpression	* p		6582390	0					
ANR	6582942	UnaryOperator	*		6582390	0					
ANR	6582943	Identifier	p		6582390	1					
ANR	6582944	PrimaryExpression	"','"		6582390	1					
ANR	6582945	ExpressionStatement	plen = strlen ( p )	157:16:2797:2812	6582390	4	True				
ANR	6582946	AssignmentExpression	plen = strlen ( p )		6582390	0		=			
ANR	6582947	Identifier	plen		6582390	0					
ANR	6582948	CallExpression	strlen ( p )		6582390	1					
ANR	6582949	Callee	strlen		6582390	0					
ANR	6582950	Identifier	strlen		6582390	0					
ANR	6582951	ArgumentList	p		6582390	1					
ANR	6582952	Argument	p		6582390	0					
ANR	6582953	Identifier	p		6582390	0					
ANR	6582954	ExpressionStatement	spaceLeft = p - temp + plen	159:16:2831:2857	6582390	5	True				
ANR	6582955	AssignmentExpression	spaceLeft = p - temp + plen		6582390	0		=			
ANR	6582956	Identifier	spaceLeft		6582390	0					
ANR	6582957	AdditiveExpression	p - temp + plen		6582390	1		-			
ANR	6582958	Identifier	p		6582390	0					
ANR	6582959	AdditiveExpression	temp + plen		6582390	1		+			
ANR	6582960	Identifier	temp		6582390	0					
ANR	6582961	Identifier	plen		6582390	1					
ANR	6582962	IfStatement	if ( spaceLeft + newlen >= GET_MODE_BUFFER_SIZE - 1 )		6582390	6					
ANR	6582963	Condition	spaceLeft + newlen >= GET_MODE_BUFFER_SIZE - 1	161:19:2879:2925	6582390	0	True				
ANR	6582964	RelationalExpression	spaceLeft + newlen >= GET_MODE_BUFFER_SIZE - 1		6582390	0		>=			
ANR	6582965	AdditiveExpression	spaceLeft + newlen		6582390	0		+			
ANR	6582966	Identifier	spaceLeft		6582390	0					
ANR	6582967	Identifier	newlen		6582390	1					
ANR	6582968	AdditiveExpression	GET_MODE_BUFFER_SIZE - 1		6582390	1		-			
ANR	6582969	Identifier	GET_MODE_BUFFER_SIZE		6582390	0					
ANR	6582970	PrimaryExpression	1		6582390	1					
ANR	6582971	CompoundStatement		159:67:2853:2853	6582390	1					
ANR	6582972	ExpressionStatement	ppMode -> error ++	163:20:2950:2965	6582390	0	True				
ANR	6582973	PostIncDecOperationExpression	ppMode -> error ++		6582390	0					
ANR	6582974	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6582975	Identifier	ppMode		6582390	0					
ANR	6582976	Identifier	error		6582390	1					
ANR	6582977	IncDec	++		6582390	1					
ANR	6582978	BreakStatement	break ;	165:20:2988:2993	6582390	1	True				
ANR	6582979	ExpressionStatement	"memmove ( p + newlen , p , plen + 1 )"	169:16:3031:3061	6582390	7	True				
ANR	6582980	CallExpression	"memmove ( p + newlen , p , plen + 1 )"		6582390	0					
ANR	6582981	Callee	memmove		6582390	0					
ANR	6582982	Identifier	memmove		6582390	0					
ANR	6582983	ArgumentList	p + newlen		6582390	1					
ANR	6582984	Argument	p + newlen		6582390	0					
ANR	6582985	AdditiveExpression	p + newlen		6582390	0		+			
ANR	6582986	Identifier	p		6582390	0					
ANR	6582987	Identifier	newlen		6582390	1					
ANR	6582988	Argument	p		6582390	1					
ANR	6582989	Identifier	p		6582390	0					
ANR	6582990	Argument	plen + 1		6582390	2					
ANR	6582991	AdditiveExpression	plen + 1		6582390	0		+			
ANR	6582992	Identifier	plen		6582390	0					
ANR	6582993	PrimaryExpression	1		6582390	1					
ANR	6582994	ExpressionStatement	"memcpy ( p , replaceTable [ 2 * i + 1 ] , newlen )"	171:16:3080:3120	6582390	8	True				
ANR	6582995	CallExpression	"memcpy ( p , replaceTable [ 2 * i + 1 ] , newlen )"		6582390	0					
ANR	6582996	Callee	memcpy		6582390	0					
ANR	6582997	Identifier	memcpy		6582390	0					
ANR	6582998	ArgumentList	p		6582390	1					
ANR	6582999	Argument	p		6582390	0					
ANR	6583000	Identifier	p		6582390	0					
ANR	6583001	Argument	replaceTable [ 2 * i + 1 ]		6582390	1					
ANR	6583002	ArrayIndexing	replaceTable [ 2 * i + 1 ]		6582390	0					
ANR	6583003	Identifier	replaceTable		6582390	0					
ANR	6583004	AdditiveExpression	2 * i + 1		6582390	1		+			
ANR	6583005	MultiplicativeExpression	2 * i		6582390	0		*			
ANR	6583006	PrimaryExpression	2		6582390	0					
ANR	6583007	Identifier	i		6582390	1					
ANR	6583008	PrimaryExpression	1		6582390	1					
ANR	6583009	Argument	newlen		6582390	2					
ANR	6583010	Identifier	newlen		6582390	0					
ANR	6583011	ExpressionStatement	filterNameOk = 1	173:16:3139:3153	6582390	9	True				
ANR	6583012	AssignmentExpression	filterNameOk = 1		6582390	0		=			
ANR	6583013	Identifier	filterNameOk		6582390	0					
ANR	6583014	PrimaryExpression	1		6582390	1					
ANR	6583015	ForStatement	for ( i = 0 ; filters [ i ] . shortName != NULL ; i ++ )		6582390	19					
ANR	6583016	ForInit	i = 0 ;	181:12:3196:3199	6582390	0	True				
ANR	6583017	AssignmentExpression	i = 0		6582390	0		=			
ANR	6583018	Identifier	i		6582390	0					
ANR	6583019	PrimaryExpression	0		6582390	1					
ANR	6583020	Condition	filters [ i ] . shortName != NULL	181:17:3201:3226	6582390	1	True				
ANR	6583021	EqualityExpression	filters [ i ] . shortName != NULL		6582390	0		!=			
ANR	6583022	MemberAccess	filters [ i ] . shortName		6582390	0					
ANR	6583023	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583024	Identifier	filters		6582390	0					
ANR	6583025	Identifier	i		6582390	1					
ANR	6583026	Identifier	shortName		6582390	1					
ANR	6583027	Identifier	NULL		6582390	1					
ANR	6583028	PostIncDecOperationExpression	i ++	181:45:3229:3231	6582390	2	True				
ANR	6583029	Identifier	i		6582390	0					
ANR	6583030	IncDec	++		6582390	1					
ANR	6583031	CompoundStatement		179:49:3159:3159	6582390	3					
ANR	6583032	IfStatement	"if ( ! strcmp ( filters [ i ] . longName , filterName ) || ! strcmp ( filters [ i ] . shortName , filterName ) )"		6582390	0					
ANR	6583033	Condition	"! strcmp ( filters [ i ] . longName , filterName ) || ! strcmp ( filters [ i ] . shortName , filterName )"	183:18:3254:3354	6582390	0	True				
ANR	6583034	OrExpression	"! strcmp ( filters [ i ] . longName , filterName ) || ! strcmp ( filters [ i ] . shortName , filterName )"		6582390	0		||			
ANR	6583035	UnaryOperationExpression	"! strcmp ( filters [ i ] . longName , filterName )"		6582390	0					
ANR	6583036	UnaryOperator	!		6582390	0					
ANR	6583037	CallExpression	"strcmp ( filters [ i ] . longName , filterName )"		6582390	1					
ANR	6583038	Callee	strcmp		6582390	0					
ANR	6583039	Identifier	strcmp		6582390	0					
ANR	6583040	ArgumentList	filters [ i ] . longName		6582390	1					
ANR	6583041	Argument	filters [ i ] . longName		6582390	0					
ANR	6583042	MemberAccess	filters [ i ] . longName		6582390	0					
ANR	6583043	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583044	Identifier	filters		6582390	0					
ANR	6583045	Identifier	i		6582390	1					
ANR	6583046	Identifier	longName		6582390	1					
ANR	6583047	Argument	filterName		6582390	1					
ANR	6583048	Identifier	filterName		6582390	0					
ANR	6583049	UnaryOperationExpression	"! strcmp ( filters [ i ] . shortName , filterName )"		6582390	1					
ANR	6583050	UnaryOperator	!		6582390	0					
ANR	6583051	CallExpression	"strcmp ( filters [ i ] . shortName , filterName )"		6582390	1					
ANR	6583052	Callee	strcmp		6582390	0					
ANR	6583053	Identifier	strcmp		6582390	0					
ANR	6583054	ArgumentList	filters [ i ] . shortName		6582390	1					
ANR	6583055	Argument	filters [ i ] . shortName		6582390	0					
ANR	6583056	MemberAccess	filters [ i ] . shortName		6582390	0					
ANR	6583057	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583058	Identifier	filters		6582390	0					
ANR	6583059	Identifier	i		6582390	1					
ANR	6583060	Identifier	shortName		6582390	1					
ANR	6583061	Argument	filterName		6582390	1					
ANR	6583062	Identifier	filterName		6582390	0					
ANR	6583063	CompoundStatement		183:60:3282:3282	6582390	1					
ANR	6583064	ExpressionStatement	ppMode -> lumMode &= ~filters [ i ] . mask	187:16:3375:3410	6582390	0	True				
ANR	6583065	AssignmentExpression	ppMode -> lumMode &= ~filters [ i ] . mask		6582390	0		&=			
ANR	6583066	PtrMemberAccess	ppMode -> lumMode		6582390	0					
ANR	6583067	Identifier	ppMode		6582390	0					
ANR	6583068	Identifier	lumMode		6582390	1					
ANR	6583069	MemberAccess	~filters [ i ] . mask		6582390	1					
ANR	6583070	ArrayIndexing	~filters [ i ]		6582390	0					
ANR	6583071	Identifier	~filters		6582390	0					
ANR	6583072	Identifier	i		6582390	1					
ANR	6583073	Identifier	mask		6582390	1					
ANR	6583074	ExpressionStatement	ppMode -> chromMode &= ~filters [ i ] . mask	189:16:3429:3466	6582390	1	True				
ANR	6583075	AssignmentExpression	ppMode -> chromMode &= ~filters [ i ] . mask		6582390	0		&=			
ANR	6583076	PtrMemberAccess	ppMode -> chromMode		6582390	0					
ANR	6583077	Identifier	ppMode		6582390	0					
ANR	6583078	Identifier	chromMode		6582390	1					
ANR	6583079	MemberAccess	~filters [ i ] . mask		6582390	1					
ANR	6583080	ArrayIndexing	~filters [ i ]		6582390	0					
ANR	6583081	Identifier	~filters		6582390	0					
ANR	6583082	Identifier	i		6582390	1					
ANR	6583083	Identifier	mask		6582390	1					
ANR	6583084	ExpressionStatement	filterNameOk = 1	193:16:3487:3501	6582390	2	True				
ANR	6583085	AssignmentExpression	filterNameOk = 1		6582390	0		=			
ANR	6583086	Identifier	filterNameOk		6582390	0					
ANR	6583087	PrimaryExpression	1		6582390	1					
ANR	6583088	IfStatement	if ( ! enable )		6582390	3					
ANR	6583089	Condition	! enable	195:19:3523:3529	6582390	0	True				
ANR	6583090	UnaryOperationExpression	! enable		6582390	0					
ANR	6583091	UnaryOperator	!		6582390	0					
ANR	6583092	Identifier	enable		6582390	1					
ANR	6583093	BreakStatement	break ;	195:28:3532:3537	6582390	1	True				
ANR	6583094	IfStatement	if ( q >= filters [ i ] . minLumQuality && luma )		6582390	4					
ANR	6583095	Condition	q >= filters [ i ] . minLumQuality && luma	199:19:3589:3625	6582390	0	True				
ANR	6583096	AndExpression	q >= filters [ i ] . minLumQuality && luma		6582390	0		&&			
ANR	6583097	RelationalExpression	q >= filters [ i ] . minLumQuality		6582390	0		>=			
ANR	6583098	Identifier	q		6582390	0					
ANR	6583099	MemberAccess	filters [ i ] . minLumQuality		6582390	1					
ANR	6583100	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583101	Identifier	filters		6582390	0					
ANR	6583102	Identifier	i		6582390	1					
ANR	6583103	Identifier	minLumQuality		6582390	1					
ANR	6583104	Identifier	luma		6582390	1					
ANR	6583105	ExpressionStatement	ppMode -> lumMode |= filters [ i ] . mask	201:20:3649:3682	6582390	1	True				
ANR	6583106	AssignmentExpression	ppMode -> lumMode |= filters [ i ] . mask		6582390	0		|=			
ANR	6583107	PtrMemberAccess	ppMode -> lumMode		6582390	0					
ANR	6583108	Identifier	ppMode		6582390	0					
ANR	6583109	Identifier	lumMode		6582390	1					
ANR	6583110	MemberAccess	filters [ i ] . mask		6582390	1					
ANR	6583111	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583112	Identifier	filters		6582390	0					
ANR	6583113	Identifier	i		6582390	1					
ANR	6583114	Identifier	mask		6582390	1					
ANR	6583115	IfStatement	if ( chrom == 1 || ( chrom == - 1 && filters [ i ] . chromDefault ) )		6582390	5					
ANR	6583116	Condition	chrom == 1 || ( chrom == - 1 && filters [ i ] . chromDefault )	203:19:3704:3753	6582390	0	True				
ANR	6583117	OrExpression	chrom == 1 || ( chrom == - 1 && filters [ i ] . chromDefault )		6582390	0		||			
ANR	6583118	EqualityExpression	chrom == 1		6582390	0		==			
ANR	6583119	Identifier	chrom		6582390	0					
ANR	6583120	PrimaryExpression	1		6582390	1					
ANR	6583121	AndExpression	chrom == - 1 && filters [ i ] . chromDefault		6582390	1		&&			
ANR	6583122	EqualityExpression	chrom == - 1		6582390	0		==			
ANR	6583123	Identifier	chrom		6582390	0					
ANR	6583124	UnaryOperationExpression	- 1		6582390	1					
ANR	6583125	UnaryOperator	-		6582390	0					
ANR	6583126	PrimaryExpression	1		6582390	1					
ANR	6583127	MemberAccess	filters [ i ] . chromDefault		6582390	1					
ANR	6583128	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583129	Identifier	filters		6582390	0					
ANR	6583130	Identifier	i		6582390	1					
ANR	6583131	Identifier	chromDefault		6582390	1					
ANR	6583132	IfStatement	if ( q >= filters [ i ] . minChromQuality )		6582390	1					
ANR	6583133	Condition	q >= filters [ i ] . minChromQuality	205:23:3780:3810	6582390	0	True				
ANR	6583134	RelationalExpression	q >= filters [ i ] . minChromQuality		6582390	0		>=			
ANR	6583135	Identifier	q		6582390	0					
ANR	6583136	MemberAccess	filters [ i ] . minChromQuality		6582390	1					
ANR	6583137	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583138	Identifier	filters		6582390	0					
ANR	6583139	Identifier	i		6582390	1					
ANR	6583140	Identifier	minChromQuality		6582390	1					
ANR	6583141	ExpressionStatement	ppMode -> chromMode |= filters [ i ] . mask	207:28:3842:3877	6582390	1	True				
ANR	6583142	AssignmentExpression	ppMode -> chromMode |= filters [ i ] . mask		6582390	0		|=			
ANR	6583143	PtrMemberAccess	ppMode -> chromMode		6582390	0					
ANR	6583144	Identifier	ppMode		6582390	0					
ANR	6583145	Identifier	chromMode		6582390	1					
ANR	6583146	MemberAccess	filters [ i ] . mask		6582390	1					
ANR	6583147	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583148	Identifier	filters		6582390	0					
ANR	6583149	Identifier	i		6582390	1					
ANR	6583150	Identifier	mask		6582390	1					
ANR	6583151	IfStatement	if ( filters [ i ] . mask == LEVEL_FIX )		6582390	6					
ANR	6583152	Condition	filters [ i ] . mask == LEVEL_FIX	211:19:3901:3928	6582390	0	True				
ANR	6583153	EqualityExpression	filters [ i ] . mask == LEVEL_FIX		6582390	0		==			
ANR	6583154	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583155	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583156	Identifier	filters		6582390	0					
ANR	6583157	Identifier	i		6582390	1					
ANR	6583158	Identifier	mask		6582390	1					
ANR	6583159	Identifier	LEVEL_FIX		6582390	1					
ANR	6583160	CompoundStatement		211:20:3879:3884	6582390	1					
ANR	6583161	IdentifierDeclStatement	int o ;	213:20:3953:3958	6582390	0	True				
ANR	6583162	IdentifierDecl	o		6582390	0					
ANR	6583163	IdentifierDeclType	int		6582390	0					
ANR	6583164	Identifier	o		6582390	1					
ANR	6583165	ExpressionStatement	ppMode -> minAllowedY = 16	215:20:3981:4004	6582390	1	True				
ANR	6583166	AssignmentExpression	ppMode -> minAllowedY = 16		6582390	0		=			
ANR	6583167	PtrMemberAccess	ppMode -> minAllowedY		6582390	0					
ANR	6583168	Identifier	ppMode		6582390	0					
ANR	6583169	Identifier	minAllowedY		6582390	1					
ANR	6583170	PrimaryExpression	16		6582390	1					
ANR	6583171	ExpressionStatement	ppMode -> maxAllowedY = 234	217:20:4027:4051	6582390	2	True				
ANR	6583172	AssignmentExpression	ppMode -> maxAllowedY = 234		6582390	0		=			
ANR	6583173	PtrMemberAccess	ppMode -> maxAllowedY		6582390	0					
ANR	6583174	Identifier	ppMode		6582390	0					
ANR	6583175	Identifier	maxAllowedY		6582390	1					
ANR	6583176	PrimaryExpression	234		6582390	1					
ANR	6583177	ForStatement	for ( o = 0 ; options [ o ] != NULL ; o ++ )		6582390	3					
ANR	6583178	ForInit	o = 0 ;	219:24:4078:4081	6582390	0	True				
ANR	6583179	AssignmentExpression	o = 0		6582390	0		=			
ANR	6583180	Identifier	o		6582390	0					
ANR	6583181	PrimaryExpression	0		6582390	1					
ANR	6583182	Condition	options [ o ] != NULL	219:29:4083:4098	6582390	1	True				
ANR	6583183	EqualityExpression	options [ o ] != NULL		6582390	0		!=			
ANR	6583184	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583185	Identifier	options		6582390	0					
ANR	6583186	Identifier	o		6582390	1					
ANR	6583187	Identifier	NULL		6582390	1					
ANR	6583188	PostIncDecOperationExpression	o ++	219:47:4101:4103	6582390	2	True				
ANR	6583189	Identifier	o		6582390	0					
ANR	6583190	IncDec	++		6582390	1					
ANR	6583191	CompoundStatement		217:51:4031:4031	6582390	3					
ANR	6583192	IfStatement	"if ( ! strcmp ( options [ o ] , ""fullyrange"" ) || ! strcmp ( options [ o ] , ""f"" ) )"		6582390	0					
ANR	6583193	Condition	"! strcmp ( options [ o ] , ""fullyrange"" ) || ! strcmp ( options [ o ] , ""f"" )"	221:29:4137:4222	6582390	0	True				
ANR	6583194	OrExpression	"! strcmp ( options [ o ] , ""fullyrange"" ) || ! strcmp ( options [ o ] , ""f"" )"		6582390	0		||			
ANR	6583195	UnaryOperationExpression	"! strcmp ( options [ o ] , ""fullyrange"" )"		6582390	0					
ANR	6583196	UnaryOperator	!		6582390	0					
ANR	6583197	CallExpression	"strcmp ( options [ o ] , ""fullyrange"" )"		6582390	1					
ANR	6583198	Callee	strcmp		6582390	0					
ANR	6583199	Identifier	strcmp		6582390	0					
ANR	6583200	ArgumentList	options [ o ]		6582390	1					
ANR	6583201	Argument	options [ o ]		6582390	0					
ANR	6583202	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583203	Identifier	options		6582390	0					
ANR	6583204	Identifier	o		6582390	1					
ANR	6583205	Argument	"""fullyrange"""		6582390	1					
ANR	6583206	PrimaryExpression	"""fullyrange"""		6582390	0					
ANR	6583207	UnaryOperationExpression	"! strcmp ( options [ o ] , ""f"" )"		6582390	1					
ANR	6583208	UnaryOperator	!		6582390	0					
ANR	6583209	CallExpression	"strcmp ( options [ o ] , ""f"" )"		6582390	1					
ANR	6583210	Callee	strcmp		6582390	0					
ANR	6583211	Identifier	strcmp		6582390	0					
ANR	6583212	ArgumentList	options [ o ]		6582390	1					
ANR	6583213	Argument	options [ o ]		6582390	0					
ANR	6583214	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583215	Identifier	options		6582390	0					
ANR	6583216	Identifier	o		6582390	1					
ANR	6583217	Argument	"""f"""		6582390	1					
ANR	6583218	PrimaryExpression	"""f"""		6582390	0					
ANR	6583219	CompoundStatement		221:53:4150:4150	6582390	1					
ANR	6583220	ExpressionStatement	ppMode -> minAllowedY = 0	225:28:4255:4277	6582390	0	True				
ANR	6583221	AssignmentExpression	ppMode -> minAllowedY = 0		6582390	0		=			
ANR	6583222	PtrMemberAccess	ppMode -> minAllowedY		6582390	0					
ANR	6583223	Identifier	ppMode		6582390	0					
ANR	6583224	Identifier	minAllowedY		6582390	1					
ANR	6583225	PrimaryExpression	0		6582390	1					
ANR	6583226	ExpressionStatement	ppMode -> maxAllowedY = 255	227:28:4308:4332	6582390	1	True				
ANR	6583227	AssignmentExpression	ppMode -> maxAllowedY = 255		6582390	0		=			
ANR	6583228	PtrMemberAccess	ppMode -> maxAllowedY		6582390	0					
ANR	6583229	Identifier	ppMode		6582390	0					
ANR	6583230	Identifier	maxAllowedY		6582390	1					
ANR	6583231	PrimaryExpression	255		6582390	1					
ANR	6583232	ExpressionStatement	numOfUnknownOptions --	229:28:4363:4384	6582390	2	True				
ANR	6583233	PostIncDecOperationExpression	numOfUnknownOptions --		6582390	0					
ANR	6583234	Identifier	numOfUnknownOptions		6582390	0					
ANR	6583235	IncDec	--		6582390	1					
ANR	6583236	ElseStatement	else		6582390	0					
ANR	6583237	IfStatement	if ( filters [ i ] . mask == TEMP_NOISE_FILTER )		6582390	0					
ANR	6583238	Condition	filters [ i ] . mask == TEMP_NOISE_FILTER	237:24:4480:4515	6582390	0	True				
ANR	6583239	EqualityExpression	filters [ i ] . mask == TEMP_NOISE_FILTER		6582390	0		==			
ANR	6583240	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583241	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583242	Identifier	filters		6582390	0					
ANR	6583243	Identifier	i		6582390	1					
ANR	6583244	Identifier	mask		6582390	1					
ANR	6583245	Identifier	TEMP_NOISE_FILTER		6582390	1					
ANR	6583246	CompoundStatement		241:20:4512:4529	6582390	1					
ANR	6583247	IdentifierDeclStatement	int o ;	241:20:4558:4563	6582390	0	True				
ANR	6583248	IdentifierDecl	o		6582390	0					
ANR	6583249	IdentifierDeclType	int		6582390	0					
ANR	6583250	Identifier	o		6582390	1					
ANR	6583251	IdentifierDeclStatement	int numOfNoises = 0 ;	243:20:4586:4603	6582390	1	True				
ANR	6583252	IdentifierDecl	numOfNoises = 0		6582390	0					
ANR	6583253	IdentifierDeclType	int		6582390	0					
ANR	6583254	Identifier	numOfNoises		6582390	1					
ANR	6583255	AssignmentExpression	numOfNoises = 0		6582390	2		=			
ANR	6583256	Identifier	numOfNoises		6582390	0					
ANR	6583257	PrimaryExpression	0		6582390	1					
ANR	6583258	ForStatement	for ( o = 0 ; options [ o ] != NULL ; o ++ )		6582390	2					
ANR	6583259	ForInit	o = 0 ;	247:24:4632:4635	6582390	0	True				
ANR	6583260	AssignmentExpression	o = 0		6582390	0		=			
ANR	6583261	Identifier	o		6582390	0					
ANR	6583262	PrimaryExpression	0		6582390	1					
ANR	6583263	Condition	options [ o ] != NULL	247:29:4637:4652	6582390	1	True				
ANR	6583264	EqualityExpression	options [ o ] != NULL		6582390	0		!=			
ANR	6583265	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583266	Identifier	options		6582390	0					
ANR	6583267	Identifier	o		6582390	1					
ANR	6583268	Identifier	NULL		6582390	1					
ANR	6583269	PostIncDecOperationExpression	o ++	247:47:4655:4657	6582390	2	True				
ANR	6583270	Identifier	o		6582390	0					
ANR	6583271	IncDec	++		6582390	1					
ANR	6583272	CompoundStatement		247:24:4612:4622	6582390	3					
ANR	6583273	IdentifierDeclStatement	char * tail ;	249:24:4686:4696	6582390	0	True				
ANR	6583274	IdentifierDecl	* tail		6582390	0					
ANR	6583275	IdentifierDeclType	char *		6582390	0					
ANR	6583276	Identifier	tail		6582390	1					
ANR	6583277	ExpressionStatement	"ppMode -> maxTmpNoise [ numOfNoises ] = strtol ( options [ o ] , & tail , 0 )"	251:24:4723:4814	6582390	1	True				
ANR	6583278	AssignmentExpression	"ppMode -> maxTmpNoise [ numOfNoises ] = strtol ( options [ o ] , & tail , 0 )"		6582390	0		=			
ANR	6583279	ArrayIndexing	ppMode -> maxTmpNoise [ numOfNoises ]		6582390	0					
ANR	6583280	PtrMemberAccess	ppMode -> maxTmpNoise		6582390	0					
ANR	6583281	Identifier	ppMode		6582390	0					
ANR	6583282	Identifier	maxTmpNoise		6582390	1					
ANR	6583283	Identifier	numOfNoises		6582390	1					
ANR	6583284	CallExpression	"strtol ( options [ o ] , & tail , 0 )"		6582390	1					
ANR	6583285	Callee	strtol		6582390	0					
ANR	6583286	Identifier	strtol		6582390	0					
ANR	6583287	ArgumentList	options [ o ]		6582390	1					
ANR	6583288	Argument	options [ o ]		6582390	0					
ANR	6583289	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583290	Identifier	options		6582390	0					
ANR	6583291	Identifier	o		6582390	1					
ANR	6583292	Argument	& tail		6582390	1					
ANR	6583293	UnaryOperationExpression	& tail		6582390	0					
ANR	6583294	UnaryOperator	&		6582390	0					
ANR	6583295	Identifier	tail		6582390	1					
ANR	6583296	Argument	0		6582390	2					
ANR	6583297	PrimaryExpression	0		6582390	0					
ANR	6583298	IfStatement	if ( tail != options [ o ] )		6582390	2					
ANR	6583299	Condition	tail != options [ o ]	255:27:4844:4859	6582390	0	True				
ANR	6583300	EqualityExpression	tail != options [ o ]		6582390	0		!=			
ANR	6583301	Identifier	tail		6582390	0					
ANR	6583302	ArrayIndexing	options [ o ]		6582390	1					
ANR	6583303	Identifier	options		6582390	0					
ANR	6583304	Identifier	o		6582390	1					
ANR	6583305	CompoundStatement		253:44:4787:4787	6582390	1					
ANR	6583306	ExpressionStatement	numOfNoises ++	257:28:4892:4905	6582390	0	True				
ANR	6583307	PostIncDecOperationExpression	numOfNoises ++		6582390	0					
ANR	6583308	Identifier	numOfNoises		6582390	0					
ANR	6583309	IncDec	++		6582390	1					
ANR	6583310	ExpressionStatement	numOfUnknownOptions --	259:28:4936:4957	6582390	1	True				
ANR	6583311	PostIncDecOperationExpression	numOfUnknownOptions --		6582390	0					
ANR	6583312	Identifier	numOfUnknownOptions		6582390	0					
ANR	6583313	IncDec	--		6582390	1					
ANR	6583314	IfStatement	if ( numOfNoises >= 3 )		6582390	2					
ANR	6583315	Condition	numOfNoises >= 3	261:31:4991:5006	6582390	0	True				
ANR	6583316	RelationalExpression	numOfNoises >= 3		6582390	0		>=			
ANR	6583317	Identifier	numOfNoises		6582390	0					
ANR	6583318	PrimaryExpression	3		6582390	1					
ANR	6583319	BreakStatement	break ;	261:49:5009:5014	6582390	1	True				
ANR	6583320	ElseStatement	else		6582390	0					
ANR	6583321	IfStatement	if ( filters [ i ] . mask == V_DEBLOCK || filters [ i ] . mask == H_DEBLOCK || filters [ i ] . mask == V_A_DEBLOCK || filters [ i ] . mask == H_A_DEBLOCK )		6582390	0					
ANR	6583322	Condition	filters [ i ] . mask == V_DEBLOCK || filters [ i ] . mask == H_DEBLOCK || filters [ i ] . mask == V_A_DEBLOCK || filters [ i ] . mask == H_A_DEBLOCK	269:24:5110:5261	6582390	0	True				
ANR	6583323	OrExpression	filters [ i ] . mask == V_DEBLOCK || filters [ i ] . mask == H_DEBLOCK || filters [ i ] . mask == V_A_DEBLOCK || filters [ i ] . mask == H_A_DEBLOCK		6582390	0		||			
ANR	6583324	EqualityExpression	filters [ i ] . mask == V_DEBLOCK		6582390	0		==			
ANR	6583325	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583326	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583327	Identifier	filters		6582390	0					
ANR	6583328	Identifier	i		6582390	1					
ANR	6583329	Identifier	mask		6582390	1					
ANR	6583330	Identifier	V_DEBLOCK		6582390	1					
ANR	6583331	OrExpression	filters [ i ] . mask == H_DEBLOCK || filters [ i ] . mask == V_A_DEBLOCK || filters [ i ] . mask == H_A_DEBLOCK		6582390	1		||			
ANR	6583332	EqualityExpression	filters [ i ] . mask == H_DEBLOCK		6582390	0		==			
ANR	6583333	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583334	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583335	Identifier	filters		6582390	0					
ANR	6583336	Identifier	i		6582390	1					
ANR	6583337	Identifier	mask		6582390	1					
ANR	6583338	Identifier	H_DEBLOCK		6582390	1					
ANR	6583339	OrExpression	filters [ i ] . mask == V_A_DEBLOCK || filters [ i ] . mask == H_A_DEBLOCK		6582390	1		||			
ANR	6583340	EqualityExpression	filters [ i ] . mask == V_A_DEBLOCK		6582390	0		==			
ANR	6583341	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583342	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583343	Identifier	filters		6582390	0					
ANR	6583344	Identifier	i		6582390	1					
ANR	6583345	Identifier	mask		6582390	1					
ANR	6583346	Identifier	V_A_DEBLOCK		6582390	1					
ANR	6583347	EqualityExpression	filters [ i ] . mask == H_A_DEBLOCK		6582390	1		==			
ANR	6583348	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583349	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583350	Identifier	filters		6582390	0					
ANR	6583351	Identifier	i		6582390	1					
ANR	6583352	Identifier	mask		6582390	1					
ANR	6583353	Identifier	H_A_DEBLOCK		6582390	1					
ANR	6583354	CompoundStatement		271:20:5212:5217	6582390	1					
ANR	6583355	IdentifierDeclStatement	int o ;	273:20:5286:5291	6582390	0	True				
ANR	6583356	IdentifierDecl	o		6582390	0					
ANR	6583357	IdentifierDeclType	int		6582390	0					
ANR	6583358	Identifier	o		6582390	1					
ANR	6583359	ForStatement	for ( o = 0 ; options [ o ] != NULL && o < 2 ; o ++ )		6582390	1					
ANR	6583360	ForInit	o = 0 ;	277:24:5320:5323	6582390	0	True				
ANR	6583361	AssignmentExpression	o = 0		6582390	0		=			
ANR	6583362	Identifier	o		6582390	0					
ANR	6583363	PrimaryExpression	0		6582390	1					
ANR	6583364	Condition	options [ o ] != NULL && o < 2	277:29:5325:5347	6582390	1	True				
ANR	6583365	AndExpression	options [ o ] != NULL && o < 2		6582390	0		&&			
ANR	6583366	EqualityExpression	options [ o ] != NULL		6582390	0		!=			
ANR	6583367	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583368	Identifier	options		6582390	0					
ANR	6583369	Identifier	o		6582390	1					
ANR	6583370	Identifier	NULL		6582390	1					
ANR	6583371	RelationalExpression	o < 2		6582390	1		<			
ANR	6583372	Identifier	o		6582390	0					
ANR	6583373	PrimaryExpression	2		6582390	1					
ANR	6583374	PostIncDecOperationExpression	o ++	277:54:5350:5352	6582390	2	True				
ANR	6583375	Identifier	o		6582390	0					
ANR	6583376	IncDec	++		6582390	1					
ANR	6583377	CompoundStatement		279:24:5344:5381	6582390	3					
ANR	6583378	IdentifierDeclStatement	char * tail ;	279:24:5381:5391	6582390	0	True				
ANR	6583379	IdentifierDecl	* tail		6582390	0					
ANR	6583380	IdentifierDeclType	char *		6582390	0					
ANR	6583381	Identifier	tail		6582390	1					
ANR	6583382	IdentifierDeclStatement	"int val = strtol ( options [ o ] , & tail , 0 ) ;"	281:24:5418:5455	6582390	1	True				
ANR	6583383	IdentifierDecl	"val = strtol ( options [ o ] , & tail , 0 )"		6582390	0					
ANR	6583384	IdentifierDeclType	int		6582390	0					
ANR	6583385	Identifier	val		6582390	1					
ANR	6583386	AssignmentExpression	"val = strtol ( options [ o ] , & tail , 0 )"		6582390	2		=			
ANR	6583387	Identifier	val		6582390	0					
ANR	6583388	CallExpression	"strtol ( options [ o ] , & tail , 0 )"		6582390	1					
ANR	6583389	Callee	strtol		6582390	0					
ANR	6583390	Identifier	strtol		6582390	0					
ANR	6583391	ArgumentList	options [ o ]		6582390	1					
ANR	6583392	Argument	options [ o ]		6582390	0					
ANR	6583393	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583394	Identifier	options		6582390	0					
ANR	6583395	Identifier	o		6582390	1					
ANR	6583396	Argument	& tail		6582390	1					
ANR	6583397	UnaryOperationExpression	& tail		6582390	0					
ANR	6583398	UnaryOperator	&		6582390	0					
ANR	6583399	Identifier	tail		6582390	1					
ANR	6583400	Argument	0		6582390	2					
ANR	6583401	PrimaryExpression	0		6582390	0					
ANR	6583402	IfStatement	if ( tail == options [ o ] )		6582390	2					
ANR	6583403	Condition	tail == options [ o ]	283:27:5485:5500	6582390	0	True				
ANR	6583404	EqualityExpression	tail == options [ o ]		6582390	0		==			
ANR	6583405	Identifier	tail		6582390	0					
ANR	6583406	ArrayIndexing	options [ o ]		6582390	1					
ANR	6583407	Identifier	options		6582390	0					
ANR	6583408	Identifier	o		6582390	1					
ANR	6583409	BreakStatement	break ;	283:45:5503:5508	6582390	1	True				
ANR	6583410	ExpressionStatement	numOfUnknownOptions --	287:24:5537:5558	6582390	3	True				
ANR	6583411	PostIncDecOperationExpression	numOfUnknownOptions --		6582390	0					
ANR	6583412	Identifier	numOfUnknownOptions		6582390	0					
ANR	6583413	IncDec	--		6582390	1					
ANR	6583414	IfStatement	if ( o == 0 )		6582390	4					
ANR	6583415	Condition	o == 0	289:27:5588:5591	6582390	0	True				
ANR	6583416	EqualityExpression	o == 0		6582390	0		==			
ANR	6583417	Identifier	o		6582390	0					
ANR	6583418	PrimaryExpression	0		6582390	1					
ANR	6583419	ExpressionStatement	ppMode -> baseDcDiff = val	289:33:5594:5617	6582390	1	True				
ANR	6583420	AssignmentExpression	ppMode -> baseDcDiff = val		6582390	0		=			
ANR	6583421	PtrMemberAccess	ppMode -> baseDcDiff		6582390	0					
ANR	6583422	Identifier	ppMode		6582390	0					
ANR	6583423	Identifier	baseDcDiff		6582390	1					
ANR	6583424	Identifier	val		6582390	1					
ANR	6583425	ElseStatement	else		6582390	0					
ANR	6583426	ExpressionStatement	ppMode -> flatnessThreshold = val	291:29:5649:5679	6582390	0	True				
ANR	6583427	AssignmentExpression	ppMode -> flatnessThreshold = val		6582390	0		=			
ANR	6583428	PtrMemberAccess	ppMode -> flatnessThreshold		6582390	0					
ANR	6583429	Identifier	ppMode		6582390	0					
ANR	6583430	Identifier	flatnessThreshold		6582390	1					
ANR	6583431	Identifier	val		6582390	1					
ANR	6583432	ElseStatement	else		6582390	0					
ANR	6583433	IfStatement	if ( filters [ i ] . mask == FORCE_QUANT )		6582390	0					
ANR	6583434	Condition	filters [ i ] . mask == FORCE_QUANT	297:24:5748:5777	6582390	0	True				
ANR	6583435	EqualityExpression	filters [ i ] . mask == FORCE_QUANT		6582390	0		==			
ANR	6583436	MemberAccess	filters [ i ] . mask		6582390	0					
ANR	6583437	ArrayIndexing	filters [ i ]		6582390	0					
ANR	6583438	Identifier	filters		6582390	0					
ANR	6583439	Identifier	i		6582390	1					
ANR	6583440	Identifier	mask		6582390	1					
ANR	6583441	Identifier	FORCE_QUANT		6582390	1					
ANR	6583442	CompoundStatement		297:20:5728:5733	6582390	1					
ANR	6583443	IdentifierDeclStatement	int o ;	299:20:5802:5807	6582390	0	True				
ANR	6583444	IdentifierDecl	o		6582390	0					
ANR	6583445	IdentifierDeclType	int		6582390	0					
ANR	6583446	Identifier	o		6582390	1					
ANR	6583447	ExpressionStatement	ppMode -> forcedQuant = 15	301:20:5830:5853	6582390	1	True				
ANR	6583448	AssignmentExpression	ppMode -> forcedQuant = 15		6582390	0		=			
ANR	6583449	PtrMemberAccess	ppMode -> forcedQuant		6582390	0					
ANR	6583450	Identifier	ppMode		6582390	0					
ANR	6583451	Identifier	forcedQuant		6582390	1					
ANR	6583452	PrimaryExpression	15		6582390	1					
ANR	6583453	ForStatement	for ( o = 0 ; options [ o ] != NULL && o < 1 ; o ++ )		6582390	2					
ANR	6583454	ForInit	o = 0 ;	305:24:5882:5885	6582390	0	True				
ANR	6583455	AssignmentExpression	o = 0		6582390	0		=			
ANR	6583456	Identifier	o		6582390	0					
ANR	6583457	PrimaryExpression	0		6582390	1					
ANR	6583458	Condition	options [ o ] != NULL && o < 1	305:29:5887:5909	6582390	1	True				
ANR	6583459	AndExpression	options [ o ] != NULL && o < 1		6582390	0		&&			
ANR	6583460	EqualityExpression	options [ o ] != NULL		6582390	0		!=			
ANR	6583461	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583462	Identifier	options		6582390	0					
ANR	6583463	Identifier	o		6582390	1					
ANR	6583464	Identifier	NULL		6582390	1					
ANR	6583465	RelationalExpression	o < 1		6582390	1		<			
ANR	6583466	Identifier	o		6582390	0					
ANR	6583467	PrimaryExpression	1		6582390	1					
ANR	6583468	PostIncDecOperationExpression	o ++	305:54:5912:5914	6582390	2	True				
ANR	6583469	Identifier	o		6582390	0					
ANR	6583470	IncDec	++		6582390	1					
ANR	6583471	CompoundStatement		307:24:5906:5943	6582390	3					
ANR	6583472	IdentifierDeclStatement	char * tail ;	307:24:5943:5953	6582390	0	True				
ANR	6583473	IdentifierDecl	* tail		6582390	0					
ANR	6583474	IdentifierDeclType	char *		6582390	0					
ANR	6583475	Identifier	tail		6582390	1					
ANR	6583476	IdentifierDeclStatement	"int val = strtol ( options [ o ] , & tail , 0 ) ;"	309:24:5980:6017	6582390	1	True				
ANR	6583477	IdentifierDecl	"val = strtol ( options [ o ] , & tail , 0 )"		6582390	0					
ANR	6583478	IdentifierDeclType	int		6582390	0					
ANR	6583479	Identifier	val		6582390	1					
ANR	6583480	AssignmentExpression	"val = strtol ( options [ o ] , & tail , 0 )"		6582390	2		=			
ANR	6583481	Identifier	val		6582390	0					
ANR	6583482	CallExpression	"strtol ( options [ o ] , & tail , 0 )"		6582390	1					
ANR	6583483	Callee	strtol		6582390	0					
ANR	6583484	Identifier	strtol		6582390	0					
ANR	6583485	ArgumentList	options [ o ]		6582390	1					
ANR	6583486	Argument	options [ o ]		6582390	0					
ANR	6583487	ArrayIndexing	options [ o ]		6582390	0					
ANR	6583488	Identifier	options		6582390	0					
ANR	6583489	Identifier	o		6582390	1					
ANR	6583490	Argument	& tail		6582390	1					
ANR	6583491	UnaryOperationExpression	& tail		6582390	0					
ANR	6583492	UnaryOperator	&		6582390	0					
ANR	6583493	Identifier	tail		6582390	1					
ANR	6583494	Argument	0		6582390	2					
ANR	6583495	PrimaryExpression	0		6582390	0					
ANR	6583496	IfStatement	if ( tail == options [ o ] )		6582390	2					
ANR	6583497	Condition	tail == options [ o ]	311:27:6047:6062	6582390	0	True				
ANR	6583498	EqualityExpression	tail == options [ o ]		6582390	0		==			
ANR	6583499	Identifier	tail		6582390	0					
ANR	6583500	ArrayIndexing	options [ o ]		6582390	1					
ANR	6583501	Identifier	options		6582390	0					
ANR	6583502	Identifier	o		6582390	1					
ANR	6583503	BreakStatement	break ;	311:45:6065:6070	6582390	1	True				
ANR	6583504	ExpressionStatement	numOfUnknownOptions --	315:24:6099:6120	6582390	3	True				
ANR	6583505	PostIncDecOperationExpression	numOfUnknownOptions --		6582390	0					
ANR	6583506	Identifier	numOfUnknownOptions		6582390	0					
ANR	6583507	IncDec	--		6582390	1					
ANR	6583508	ExpressionStatement	ppMode -> forcedQuant = val	317:24:6147:6171	6582390	4	True				
ANR	6583509	AssignmentExpression	ppMode -> forcedQuant = val		6582390	0		=			
ANR	6583510	PtrMemberAccess	ppMode -> forcedQuant		6582390	0					
ANR	6583511	Identifier	ppMode		6582390	0					
ANR	6583512	Identifier	forcedQuant		6582390	1					
ANR	6583513	Identifier	val		6582390	1					
ANR	6583514	IfStatement	if ( ! filterNameOk )		6582390	20					
ANR	6583515	Condition	! filterNameOk	327:11:6253:6265	6582390	0	True				
ANR	6583516	UnaryOperationExpression	! filterNameOk		6582390	0					
ANR	6583517	UnaryOperator	!		6582390	0					
ANR	6583518	Identifier	filterNameOk		6582390	1					
ANR	6583519	ExpressionStatement	ppMode -> error ++	327:26:6268:6283	6582390	1	True				
ANR	6583520	PostIncDecOperationExpression	ppMode -> error ++		6582390	0					
ANR	6583521	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6583522	Identifier	ppMode		6582390	0					
ANR	6583523	Identifier	error		6582390	1					
ANR	6583524	IncDec	++		6582390	1					
ANR	6583525	ExpressionStatement	ppMode -> error += numOfUnknownOptions	329:8:6294:6330	6582390	21	True				
ANR	6583526	AssignmentExpression	ppMode -> error += numOfUnknownOptions		6582390	0		+=			
ANR	6583527	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6583528	Identifier	ppMode		6582390	0					
ANR	6583529	Identifier	error		6582390	1					
ANR	6583530	Identifier	numOfUnknownOptions		6582390	1					
ANR	6583531	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""pp: lumMode=%X, chromMode=%X\\n"" , ppMode -> lumMode , ppMode -> chromMode )"	335:4:6346:6442	6582390	24	True				
ANR	6583532	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""pp: lumMode=%X, chromMode=%X\\n"" , ppMode -> lumMode , ppMode -> chromMode )"		6582390	0					
ANR	6583533	Callee	av_log		6582390	0					
ANR	6583534	Identifier	av_log		6582390	0					
ANR	6583535	ArgumentList	NULL		6582390	1					
ANR	6583536	Argument	NULL		6582390	0					
ANR	6583537	Identifier	NULL		6582390	0					
ANR	6583538	Argument	AV_LOG_DEBUG		6582390	1					
ANR	6583539	Identifier	AV_LOG_DEBUG		6582390	0					
ANR	6583540	Argument	"""pp: lumMode=%X, chromMode=%X\\n"""		6582390	2					
ANR	6583541	PrimaryExpression	"""pp: lumMode=%X, chromMode=%X\\n"""		6582390	0					
ANR	6583542	Argument	ppMode -> lumMode		6582390	3					
ANR	6583543	PtrMemberAccess	ppMode -> lumMode		6582390	0					
ANR	6583544	Identifier	ppMode		6582390	0					
ANR	6583545	Identifier	lumMode		6582390	1					
ANR	6583546	Argument	ppMode -> chromMode		6582390	4					
ANR	6583547	PtrMemberAccess	ppMode -> chromMode		6582390	0					
ANR	6583548	Identifier	ppMode		6582390	0					
ANR	6583549	Identifier	chromMode		6582390	1					
ANR	6583550	IfStatement	if ( ppMode -> error )		6582390	25					
ANR	6583551	Condition	ppMode -> error	337:7:6452:6464	6582390	0	True				
ANR	6583552	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6583553	Identifier	ppMode		6582390	0					
ANR	6583554	Identifier	error		6582390	1					
ANR	6583555	CompoundStatement		335:21:6392:6392	6582390	1					
ANR	6583556	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""%d errors in postprocess string \\""%s\\""\\n"" , ppMode -> error , name )"	339:8:6477:6568	6582390	0	True				
ANR	6583557	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""%d errors in postprocess string \\""%s\\""\\n"" , ppMode -> error , name )"		6582390	0					
ANR	6583558	Callee	av_log		6582390	0					
ANR	6583559	Identifier	av_log		6582390	0					
ANR	6583560	ArgumentList	NULL		6582390	1					
ANR	6583561	Argument	NULL		6582390	0					
ANR	6583562	Identifier	NULL		6582390	0					
ANR	6583563	Argument	AV_LOG_ERROR		6582390	1					
ANR	6583564	Identifier	AV_LOG_ERROR		6582390	0					
ANR	6583565	Argument	"""%d errors in postprocess string \\""%s\\""\\n"""		6582390	2					
ANR	6583566	PrimaryExpression	"""%d errors in postprocess string \\""%s\\""\\n"""		6582390	0					
ANR	6583567	Argument	ppMode -> error		6582390	3					
ANR	6583568	PtrMemberAccess	ppMode -> error		6582390	0					
ANR	6583569	Identifier	ppMode		6582390	0					
ANR	6583570	Identifier	error		6582390	1					
ANR	6583571	Argument	name		6582390	4					
ANR	6583572	Identifier	name		6582390	0					
ANR	6583573	ExpressionStatement	av_free ( ppMode )	341:8:6579:6594	6582390	1	True				
ANR	6583574	CallExpression	av_free ( ppMode )		6582390	0					
ANR	6583575	Callee	av_free		6582390	0					
ANR	6583576	Identifier	av_free		6582390	0					
ANR	6583577	ArgumentList	ppMode		6582390	1					
ANR	6583578	Argument	ppMode		6582390	0					
ANR	6583579	Identifier	ppMode		6582390	0					
ANR	6583580	ReturnStatement	return NULL ;	343:8:6605:6616	6582390	2	True				
ANR	6583581	Identifier	NULL		6582390	0					
ANR	6583582	ReturnStatement	return ppMode ;	347:4:6630:6643	6582390	26	True				
ANR	6583583	Identifier	ppMode		6582390	0					
ANR	6583584	ReturnType	pp_mode *		6582390	1					
ANR	6583585	Identifier	pp_get_mode_by_name_and_quality		6582390	2					
ANR	6583586	ParameterList	"const char * name , int quality"		6582390	3					
ANR	6583587	Parameter	const char * name	1:41:41:56	6582390	0	True				
ANR	6583588	ParameterType	const char *		6582390	0					
ANR	6583589	Identifier	name		6582390	1					
ANR	6583590	Parameter	int quality	1:59:59:69	6582390	1	True				
ANR	6583591	ParameterType	int		6582390	0					
ANR	6583592	Identifier	quality		6582390	1					
ANR	6583593	CFGEntryNode	ENTRY		6582390		True				
ANR	6583594	CFGExitNode	EXIT		6582390		True				
ANR	6583595	InfiniteForNode	true		6582390		True				
ANR	6583596	InfiniteForNode	true		6582390		True				
ANR	6583597	Symbol	av_malloc		6582390						
ANR	6583598	Symbol	ppMode -> chromMode		6582390						
ANR	6583599	Symbol	newlen		6582390						
ANR	6583600	Symbol	filterDelimiters		6582390						
ANR	6583601	Symbol	spaceLeft		6582390						
ANR	6583602	Symbol	* ~filters		6582390						
ANR	6583603	Symbol	strlen		6582390						
ANR	6583604	Symbol	plen		6582390						
ANR	6583605	Symbol	optionDelimiters		6582390						
ANR	6583606	Symbol	ppMode -> maxClippedThreshold		6582390						
ANR	6583607	Symbol	numOfUnknownOptions		6582390						
ANR	6583608	Symbol	enable		6582390						
ANR	6583609	Symbol	options		6582390						
ANR	6583610	Symbol	filters [ i ] . mask		6582390						
ANR	6583611	Symbol	V_DEBLOCK		6582390						
ANR	6583612	Symbol	ppMode -> error		6582390						
ANR	6583613	Symbol	GET_MODE_BUFFER_SIZE		6582390						
ANR	6583614	Symbol	AV_LOG_DEBUG		6582390						
ANR	6583615	Symbol	ppMode -> maxTmpNoise		6582390						
ANR	6583616	Symbol	strcmp		6582390						
ANR	6583617	Symbol	val		6582390						
ANR	6583618	Symbol	replaceTable		6582390						
ANR	6583619	Symbol	NULL		6582390						
ANR	6583620	Symbol	strtok		6582390						
ANR	6583621	Symbol	* replaceTable		6582390						
ANR	6583622	Symbol	ppMode		6582390						
ANR	6583623	Symbol	quality		6582390						
ANR	6583624	Symbol	filterToken		6582390						
ANR	6583625	Symbol	ppMode -> flatnessThreshold		6582390						
ANR	6583626	Symbol	name		6582390						
ANR	6583627	Symbol	filters [ i ] . longName		6582390						
ANR	6583628	Symbol	option		6582390						
ANR	6583629	Symbol	filters [ i ] . chromDefault		6582390						
ANR	6583630	Symbol	filters [ i ] . minLumQuality		6582390						
ANR	6583631	Symbol	filterName		6582390						
ANR	6583632	Symbol	filterNameOk		6582390						
ANR	6583633	Symbol	filters [ i ] . shortName		6582390						
ANR	6583634	Symbol	* numOfNoises		6582390						
ANR	6583635	Symbol	* numOfUnknownOptions		6582390						
ANR	6583636	Symbol	* options		6582390						
ANR	6583637	Symbol	strtol		6582390						
ANR	6583638	Symbol	V_A_DEBLOCK		6582390						
ANR	6583639	Symbol	~filters		6582390						
ANR	6583640	Symbol	& tail		6582390						
ANR	6583641	Symbol	ppMode -> forcedQuant		6582390						
ANR	6583642	Symbol	* ppMode		6582390						
ANR	6583643	Symbol	ppMode -> lumMode		6582390						
ANR	6583644	Symbol	~filters [ i ] . mask		6582390						
ANR	6583645	Symbol	temp		6582390						
ANR	6583646	Symbol	TEMP_NOISE_FILTER		6582390						
ANR	6583647	Symbol	AV_LOG_ERROR		6582390						
ANR	6583648	Symbol	tail		6582390						
ANR	6583649	Symbol	ppMode -> baseDcDiff		6582390						
ANR	6583650	Symbol	i		6582390						
ANR	6583651	Symbol	LEVEL_FIX		6582390						
ANR	6583652	Symbol	filters [ i ] . minChromQuality		6582390						
ANR	6583653	Symbol	OPTIONS_ARRAY_SIZE		6582390						
ANR	6583654	Symbol	filters		6582390						
ANR	6583655	Symbol	ppMode -> maxAllowedY		6582390						
ANR	6583656	Symbol	numOfNoises		6582390						
ANR	6583657	Symbol	* * ppMode		6582390						
ANR	6583658	Symbol	chrom		6582390						
ANR	6583659	Symbol	luma		6582390						
ANR	6583660	Symbol	o		6582390						
ANR	6583661	Symbol	H_DEBLOCK		6582390						
ANR	6583662	Symbol	p		6582390						
ANR	6583663	Symbol	q		6582390						
ANR	6583664	Symbol	* i		6582390						
ANR	6583665	Symbol	* filters		6582390						
ANR	6583666	Symbol	H_A_DEBLOCK		6582390						
ANR	6583667	Symbol	* o		6582390						
ANR	6583668	Symbol	* ppMode -> maxTmpNoise		6582390						
ANR	6583669	Symbol	* p		6582390						
ANR	6583670	Symbol	FORCE_QUANT		6582390						
ANR	6583671	Symbol	ppMode -> minAllowedY		6582390						
ANR	6583672	Symbol	* filterName		6582390						
